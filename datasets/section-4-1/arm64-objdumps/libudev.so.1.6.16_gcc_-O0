
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libudev.so.1.6.16_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004fd8 <.init>:
    4fd8:	stp	x29, x30, [sp, #-16]!
    4fdc:	mov	x29, sp
    4fe0:	bl	58a0 <*ABS*@plt>
    4fe4:	ldp	x29, x30, [sp], #16
    4fe8:	ret

Disassembly of section .plt:

0000000000004ff0 <memcpy@plt-0x20>:
    4ff0:	stp	x16, x30, [sp, #-16]!
    4ff4:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    4ff8:	ldr	x17, [x16, #2808]
    4ffc:	add	x16, x16, #0xaf8
    5000:	br	x17
    5004:	nop
    5008:	nop
    500c:	nop

0000000000005010 <memcpy@plt>:
    5010:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5014:	ldr	x17, [x16, #2816]
    5018:	add	x16, x16, #0xb00
    501c:	br	x17

0000000000005020 <recvmsg@plt>:
    5020:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5024:	ldr	x17, [x16, #2824]
    5028:	add	x16, x16, #0xb08
    502c:	br	x17

0000000000005030 <strtoul@plt>:
    5030:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5034:	ldr	x17, [x16, #2832]
    5038:	add	x16, x16, #0xb10
    503c:	br	x17

0000000000005040 <strlen@plt>:
    5040:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5044:	ldr	x17, [x16, #2840]
    5048:	add	x16, x16, #0xb18
    504c:	br	x17

0000000000005050 <fputs@plt>:
    5050:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5054:	ldr	x17, [x16, #2848]
    5058:	add	x16, x16, #0xb20
    505c:	br	x17

0000000000005060 <flockfile@plt>:
    5060:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5064:	ldr	x17, [x16, #2856]
    5068:	add	x16, x16, #0xb28
    506c:	br	x17

0000000000005070 <signalfd@plt>:
    5070:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5074:	ldr	x17, [x16, #2864]
    5078:	add	x16, x16, #0xb30
    507c:	br	x17

0000000000005080 <strnlen@plt>:
    5080:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5084:	ldr	x17, [x16, #2872]
    5088:	add	x16, x16, #0xb38
    508c:	br	x17

0000000000005090 <__xstat64@plt>:
    5090:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5094:	ldr	x17, [x16, #2880]
    5098:	add	x16, x16, #0xb40
    509c:	br	x17

00000000000050a0 <gettid@plt>:
    50a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    50a4:	ldr	x17, [x16, #2888]
    50a8:	add	x16, x16, #0xb48
    50ac:	br	x17

00000000000050b0 <localtime_r@plt>:
    50b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    50b4:	ldr	x17, [x16, #2896]
    50b8:	add	x16, x16, #0xb50
    50bc:	br	x17

00000000000050c0 <bind@plt>:
    50c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    50c4:	ldr	x17, [x16, #2904]
    50c8:	add	x16, x16, #0xb58
    50cc:	br	x17

00000000000050d0 <reallocarray@plt>:
    50d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    50d4:	ldr	x17, [x16, #2912]
    50d8:	add	x16, x16, #0xb60
    50dc:	br	x17

00000000000050e0 <__cxa_finalize@plt>:
    50e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    50e4:	ldr	x17, [x16, #2920]
    50e8:	add	x16, x16, #0xb68
    50ec:	br	x17

00000000000050f0 <sprintf@plt>:
    50f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    50f4:	ldr	x17, [x16, #2928]
    50f8:	add	x16, x16, #0xb70
    50fc:	br	x17

0000000000005100 <opendir@plt>:
    5100:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5104:	ldr	x17, [x16, #2936]
    5108:	add	x16, x16, #0xb78
    510c:	br	x17

0000000000005110 <strftime@plt>:
    5110:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5114:	ldr	x17, [x16, #2944]
    5118:	add	x16, x16, #0xb80
    511c:	br	x17

0000000000005120 <fputc@plt>:
    5120:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5124:	ldr	x17, [x16, #2952]
    5128:	add	x16, x16, #0xb88
    512c:	br	x17

0000000000005130 <clock_gettime@plt>:
    5130:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5134:	ldr	x17, [x16, #2960]
    5138:	add	x16, x16, #0xb90
    513c:	br	x17

0000000000005140 <qsort@plt>:
    5140:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5144:	ldr	x17, [x16, #2968]
    5148:	add	x16, x16, #0xb98
    514c:	br	x17

0000000000005150 <setvbuf@plt>:
    5150:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5154:	ldr	x17, [x16, #2976]
    5158:	add	x16, x16, #0xba0
    515c:	br	x17

0000000000005160 <asprintf@plt>:
    5160:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5164:	ldr	x17, [x16, #2984]
    5168:	add	x16, x16, #0xba8
    516c:	br	x17

0000000000005170 <__register_atfork@plt>:
    5170:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5174:	ldr	x17, [x16, #2992]
    5178:	add	x16, x16, #0xbb0
    517c:	br	x17

0000000000005180 <getauxval@plt>:
    5180:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5184:	ldr	x17, [x16, #3000]
    5188:	add	x16, x16, #0xbb8
    518c:	br	x17

0000000000005190 <snprintf@plt>:
    5190:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5194:	ldr	x17, [x16, #3008]
    5198:	add	x16, x16, #0xbc0
    519c:	br	x17

00000000000051a0 <gnu_dev_makedev@plt>:
    51a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    51a4:	ldr	x17, [x16, #3016]
    51a8:	add	x16, x16, #0xbc8
    51ac:	br	x17

00000000000051b0 <stpcpy@plt>:
    51b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    51b4:	ldr	x17, [x16, #3024]
    51b8:	add	x16, x16, #0xbd0
    51bc:	br	x17

00000000000051c0 <fileno@plt>:
    51c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    51c4:	ldr	x17, [x16, #3032]
    51c8:	add	x16, x16, #0xbd8
    51cc:	br	x17

00000000000051d0 <inotify_init1@plt>:
    51d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    51d4:	ldr	x17, [x16, #3040]
    51d8:	add	x16, x16, #0xbe0
    51dc:	br	x17

00000000000051e0 <fclose@plt>:
    51e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    51e4:	ldr	x17, [x16, #3048]
    51e8:	add	x16, x16, #0xbe8
    51ec:	br	x17

00000000000051f0 <fsync@plt>:
    51f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    51f4:	ldr	x17, [x16, #3056]
    51f8:	add	x16, x16, #0xbf0
    51fc:	br	x17

0000000000005200 <malloc_usable_size@plt>:
    5200:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5204:	ldr	x17, [x16, #3064]
    5208:	add	x16, x16, #0xbf8
    520c:	br	x17

0000000000005210 <nl_langinfo@plt>:
    5210:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5214:	ldr	x17, [x16, #3072]
    5218:	add	x16, x16, #0xc00
    521c:	br	x17

0000000000005220 <malloc@plt>:
    5220:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5224:	ldr	x17, [x16, #3080]
    5228:	add	x16, x16, #0xc08
    522c:	br	x17

0000000000005230 <setsockopt@plt>:
    5230:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5234:	ldr	x17, [x16, #3088]
    5238:	add	x16, x16, #0xc10
    523c:	br	x17

0000000000005240 <funlockfile@plt>:
    5240:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5244:	ldr	x17, [x16, #3096]
    5248:	add	x16, x16, #0xc18
    524c:	br	x17

0000000000005250 <poll@plt>:
    5250:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5254:	ldr	x17, [x16, #3104]
    5258:	add	x16, x16, #0xc20
    525c:	br	x17

0000000000005260 <futimens@plt>:
    5260:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5264:	ldr	x17, [x16, #3112]
    5268:	add	x16, x16, #0xc28
    526c:	br	x17

0000000000005270 <strncmp@plt>:
    5270:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5274:	ldr	x17, [x16, #3120]
    5278:	add	x16, x16, #0xc30
    527c:	br	x17

0000000000005280 <fgetc@plt>:
    5280:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5284:	ldr	x17, [x16, #3128]
    5288:	add	x16, x16, #0xc38
    528c:	br	x17

0000000000005290 <memset@plt>:
    5290:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5294:	ldr	x17, [x16, #3136]
    5298:	add	x16, x16, #0xc40
    529c:	br	x17

00000000000052a0 <fdopen@plt>:
    52a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    52a4:	ldr	x17, [x16, #3144]
    52a8:	add	x16, x16, #0xc48
    52ac:	br	x17

00000000000052b0 <strpbrk@plt>:
    52b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    52b4:	ldr	x17, [x16, #3152]
    52b8:	add	x16, x16, #0xc50
    52bc:	br	x17

00000000000052c0 <lseek64@plt>:
    52c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    52c4:	ldr	x17, [x16, #3160]
    52c8:	add	x16, x16, #0xc58
    52cc:	br	x17

00000000000052d0 <fchmod@plt>:
    52d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    52d4:	ldr	x17, [x16, #3168]
    52d8:	add	x16, x16, #0xc60
    52dc:	br	x17

00000000000052e0 <sendmsg@plt>:
    52e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    52e4:	ldr	x17, [x16, #3176]
    52e8:	add	x16, x16, #0xc68
    52ec:	br	x17

00000000000052f0 <calloc@plt>:
    52f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    52f4:	ldr	x17, [x16, #3184]
    52f8:	add	x16, x16, #0xc70
    52fc:	br	x17

0000000000005300 <bsearch@plt>:
    5300:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5304:	ldr	x17, [x16, #3192]
    5308:	add	x16, x16, #0xc78
    530c:	br	x17

0000000000005310 <openat64@plt>:
    5310:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5314:	ldr	x17, [x16, #3200]
    5318:	add	x16, x16, #0xc80
    531c:	br	x17

0000000000005320 <strcasecmp@plt>:
    5320:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5324:	ldr	x17, [x16, #3208]
    5328:	add	x16, x16, #0xc88
    532c:	br	x17

0000000000005330 <realloc@plt>:
    5330:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5334:	ldr	x17, [x16, #3216]
    5338:	add	x16, x16, #0xc90
    533c:	br	x17

0000000000005340 <inotify_rm_watch@plt>:
    5340:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5344:	ldr	x17, [x16, #3224]
    5348:	add	x16, x16, #0xc98
    534c:	br	x17

0000000000005350 <fstatfs64@plt>:
    5350:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5354:	ldr	x17, [x16, #3232]
    5358:	add	x16, x16, #0xca0
    535c:	br	x17

0000000000005360 <rand@plt>:
    5360:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5364:	ldr	x17, [x16, #3240]
    5368:	add	x16, x16, #0xca8
    536c:	br	x17

0000000000005370 <strdup@plt>:
    5370:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5374:	ldr	x17, [x16, #3248]
    5378:	add	x16, x16, #0xcb0
    537c:	br	x17

0000000000005380 <closedir@plt>:
    5380:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5384:	ldr	x17, [x16, #3256]
    5388:	add	x16, x16, #0xcb8
    538c:	br	x17

0000000000005390 <__stack_chk_fail@plt>:
    5390:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5394:	ldr	x17, [x16, #3264]
    5398:	add	x16, x16, #0xcc0
    539c:	br	x17

00000000000053a0 <close@plt>:
    53a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    53a4:	ldr	x17, [x16, #3272]
    53a8:	add	x16, x16, #0xcc8
    53ac:	br	x17

00000000000053b0 <strrchr@plt>:
    53b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    53b4:	ldr	x17, [x16, #3280]
    53b8:	add	x16, x16, #0xcd0
    53bc:	br	x17

00000000000053c0 <__gmon_start__@plt>:
    53c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    53c4:	ldr	x17, [x16, #3288]
    53c8:	add	x16, x16, #0xcd8
    53cc:	br	x17

00000000000053d0 <abort@plt>:
    53d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    53d4:	ldr	x17, [x16, #3296]
    53d8:	add	x16, x16, #0xce0
    53dc:	br	x17

00000000000053e0 <access@plt>:
    53e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    53e4:	ldr	x17, [x16, #3304]
    53e8:	add	x16, x16, #0xce8
    53ec:	br	x17

00000000000053f0 <gnu_dev_major@plt>:
    53f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    53f4:	ldr	x17, [x16, #3312]
    53f8:	add	x16, x16, #0xcf0
    53fc:	br	x17

0000000000005400 <feof@plt>:
    5400:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5404:	ldr	x17, [x16, #3320]
    5408:	add	x16, x16, #0xcf8
    540c:	br	x17

0000000000005410 <memcmp@plt>:
    5410:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5414:	ldr	x17, [x16, #3328]
    5418:	add	x16, x16, #0xd00
    541c:	br	x17

0000000000005420 <udev_device_get_parent@plt>:
    5420:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5424:	ldr	x17, [x16, #3336]
    5428:	add	x16, x16, #0xd08
    542c:	br	x17

0000000000005430 <sigismember@plt>:
    5430:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5434:	ldr	x17, [x16, #3344]
    5438:	add	x16, x16, #0xd10
    543c:	br	x17

0000000000005440 <strcmp@plt>:
    5440:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5444:	ldr	x17, [x16, #3352]
    5448:	add	x16, x16, #0xd18
    544c:	br	x17

0000000000005450 <basename@plt>:
    5450:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5454:	ldr	x17, [x16, #3360]
    5458:	add	x16, x16, #0xd20
    545c:	br	x17

0000000000005460 <__ctype_b_loc@plt>:
    5460:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5464:	ldr	x17, [x16, #3368]
    5468:	add	x16, x16, #0xd28
    546c:	br	x17

0000000000005470 <strtol@plt>:
    5470:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5474:	ldr	x17, [x16, #3376]
    5478:	add	x16, x16, #0xd30
    547c:	br	x17

0000000000005480 <udev_device_unref@plt>:
    5480:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5484:	ldr	x17, [x16, #3384]
    5488:	add	x16, x16, #0xd38
    548c:	br	x17

0000000000005490 <fread@plt>:
    5490:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5494:	ldr	x17, [x16, #3392]
    5498:	add	x16, x16, #0xd40
    549c:	br	x17

00000000000054a0 <__lxstat64@plt>:
    54a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    54a4:	ldr	x17, [x16, #3400]
    54a8:	add	x16, x16, #0xd48
    54ac:	br	x17

00000000000054b0 <free@plt>:
    54b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    54b4:	ldr	x17, [x16, #3408]
    54b8:	add	x16, x16, #0xd50
    54bc:	br	x17

00000000000054c0 <ungetc@plt>:
    54c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    54c4:	ldr	x17, [x16, #3416]
    54c8:	add	x16, x16, #0xd58
    54cc:	br	x17

00000000000054d0 <sigisemptyset@plt>:
    54d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    54d4:	ldr	x17, [x16, #3424]
    54d8:	add	x16, x16, #0xd60
    54dc:	br	x17

00000000000054e0 <mempcpy@plt>:
    54e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    54e4:	ldr	x17, [x16, #3432]
    54e8:	add	x16, x16, #0xd68
    54ec:	br	x17

00000000000054f0 <__fxstat64@plt>:
    54f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    54f4:	ldr	x17, [x16, #3440]
    54f8:	add	x16, x16, #0xd70
    54fc:	br	x17

0000000000005500 <name_to_handle_at@plt>:
    5500:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5504:	ldr	x17, [x16, #3448]
    5508:	add	x16, x16, #0xd78
    550c:	br	x17

0000000000005510 <readdir64@plt>:
    5510:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5514:	ldr	x17, [x16, #3456]
    5518:	add	x16, x16, #0xd80
    551c:	br	x17

0000000000005520 <mkostemp64@plt>:
    5520:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5524:	ldr	x17, [x16, #3464]
    5528:	add	x16, x16, #0xd88
    552c:	br	x17

0000000000005530 <vasprintf@plt>:
    5530:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5534:	ldr	x17, [x16, #3472]
    5538:	add	x16, x16, #0xd90
    553c:	br	x17

0000000000005540 <connect@plt>:
    5540:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5544:	ldr	x17, [x16, #3480]
    5548:	add	x16, x16, #0xd98
    554c:	br	x17

0000000000005550 <strndup@plt>:
    5550:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5554:	ldr	x17, [x16, #3488]
    5558:	add	x16, x16, #0xda0
    555c:	br	x17

0000000000005560 <strspn@plt>:
    5560:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5564:	ldr	x17, [x16, #3496]
    5568:	add	x16, x16, #0xda8
    556c:	br	x17

0000000000005570 <strchr@plt>:
    5570:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5574:	ldr	x17, [x16, #3504]
    5578:	add	x16, x16, #0xdb0
    557c:	br	x17

0000000000005580 <strtoull@plt>:
    5580:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5584:	ldr	x17, [x16, #3512]
    5588:	add	x16, x16, #0xdb8
    558c:	br	x17

0000000000005590 <rename@plt>:
    5590:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5594:	ldr	x17, [x16, #3520]
    5598:	add	x16, x16, #0xdc0
    559c:	br	x17

00000000000055a0 <fwrite@plt>:
    55a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    55a4:	ldr	x17, [x16, #3528]
    55a8:	add	x16, x16, #0xdc8
    55ac:	br	x17

00000000000055b0 <fnmatch@plt>:
    55b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    55b4:	ldr	x17, [x16, #3536]
    55b8:	add	x16, x16, #0xdd0
    55bc:	br	x17

00000000000055c0 <dirname@plt>:
    55c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    55c4:	ldr	x17, [x16, #3544]
    55c8:	add	x16, x16, #0xdd8
    55cc:	br	x17

00000000000055d0 <fcntl64@plt>:
    55d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    55d4:	ldr	x17, [x16, #3552]
    55d8:	add	x16, x16, #0xde0
    55dc:	br	x17

00000000000055e0 <socket@plt>:
    55e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    55e4:	ldr	x17, [x16, #3560]
    55e8:	add	x16, x16, #0xde8
    55ec:	br	x17

00000000000055f0 <munmap@plt>:
    55f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    55f4:	ldr	x17, [x16, #3568]
    55f8:	add	x16, x16, #0xdf0
    55fc:	br	x17

0000000000005600 <fflush@plt>:
    5600:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5604:	ldr	x17, [x16, #3576]
    5608:	add	x16, x16, #0xdf8
    560c:	br	x17

0000000000005610 <gnu_dev_minor@plt>:
    5610:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5614:	ldr	x17, [x16, #3584]
    5618:	add	x16, x16, #0xe00
    561c:	br	x17

0000000000005620 <epoll_ctl@plt>:
    5620:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5624:	ldr	x17, [x16, #3592]
    5628:	add	x16, x16, #0xe08
    562c:	br	x17

0000000000005630 <strcpy@plt>:
    5630:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5634:	ldr	x17, [x16, #3600]
    5638:	add	x16, x16, #0xe10
    563c:	br	x17

0000000000005640 <get_current_dir_name@plt>:
    5640:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5644:	ldr	x17, [x16, #3608]
    5648:	add	x16, x16, #0xe18
    564c:	br	x17

0000000000005650 <fopen64@plt>:
    5650:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5654:	ldr	x17, [x16, #3616]
    5658:	add	x16, x16, #0xe20
    565c:	br	x17

0000000000005660 <getsockopt@plt>:
    5660:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5664:	ldr	x17, [x16, #3624]
    5668:	add	x16, x16, #0xe28
    566c:	br	x17

0000000000005670 <ppoll@plt>:
    5670:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5674:	ldr	x17, [x16, #3632]
    5678:	add	x16, x16, #0xe30
    567c:	br	x17

0000000000005680 <read@plt>:
    5680:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5684:	ldr	x17, [x16, #3640]
    5688:	add	x16, x16, #0xe38
    568c:	br	x17

0000000000005690 <memchr@plt>:
    5690:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5694:	ldr	x17, [x16, #3648]
    5698:	add	x16, x16, #0xe40
    569c:	br	x17

00000000000056a0 <isatty@plt>:
    56a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    56a4:	ldr	x17, [x16, #3656]
    56a8:	add	x16, x16, #0xe48
    56ac:	br	x17

00000000000056b0 <sysconf@plt>:
    56b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    56b4:	ldr	x17, [x16, #3664]
    56b8:	add	x16, x16, #0xe50
    56bc:	br	x17

00000000000056c0 <open64@plt>:
    56c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    56c4:	ldr	x17, [x16, #3672]
    56c8:	add	x16, x16, #0xe58
    56cc:	br	x17

00000000000056d0 <srand@plt>:
    56d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    56d4:	ldr	x17, [x16, #3680]
    56d8:	add	x16, x16, #0xe60
    56dc:	br	x17

00000000000056e0 <strchrnul@plt>:
    56e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    56e4:	ldr	x17, [x16, #3688]
    56e8:	add	x16, x16, #0xe68
    56ec:	br	x17

00000000000056f0 <strstr@plt>:
    56f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    56f4:	ldr	x17, [x16, #3696]
    56f8:	add	x16, x16, #0xe70
    56fc:	br	x17

0000000000005700 <usleep@plt>:
    5700:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5704:	ldr	x17, [x16, #3704]
    5708:	add	x16, x16, #0xe78
    570c:	br	x17

0000000000005710 <parse_printf_format@plt>:
    5710:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5714:	ldr	x17, [x16, #3712]
    5718:	add	x16, x16, #0xe80
    571c:	br	x17

0000000000005720 <__isoc99_sscanf@plt>:
    5720:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5724:	ldr	x17, [x16, #3720]
    5728:	add	x16, x16, #0xe88
    572c:	br	x17

0000000000005730 <vsnprintf@plt>:
    5730:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5734:	ldr	x17, [x16, #3728]
    5738:	add	x16, x16, #0xe90
    573c:	br	x17

0000000000005740 <writev@plt>:
    5740:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5744:	ldr	x17, [x16, #3736]
    5748:	add	x16, x16, #0xe98
    574c:	br	x17

0000000000005750 <explicit_bzero@plt>:
    5750:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5754:	ldr	x17, [x16, #3744]
    5758:	add	x16, x16, #0xea0
    575c:	br	x17

0000000000005760 <timerfd_create@plt>:
    5760:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5764:	ldr	x17, [x16, #3752]
    5768:	add	x16, x16, #0xea8
    576c:	br	x17

0000000000005770 <sigdelset@plt>:
    5770:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5774:	ldr	x17, [x16, #3760]
    5778:	add	x16, x16, #0xeb0
    577c:	br	x17

0000000000005780 <__fsetlocking@plt>:
    5780:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5784:	ldr	x17, [x16, #3768]
    5788:	add	x16, x16, #0xeb8
    578c:	br	x17

0000000000005790 <strncpy@plt>:
    5790:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5794:	ldr	x17, [x16, #3776]
    5798:	add	x16, x16, #0xec0
    579c:	br	x17

00000000000057a0 <getrandom@plt>:
    57a0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    57a4:	ldr	x17, [x16, #3784]
    57a8:	add	x16, x16, #0xec8
    57ac:	br	x17

00000000000057b0 <umask@plt>:
    57b0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    57b4:	ldr	x17, [x16, #3792]
    57b8:	add	x16, x16, #0xed0
    57bc:	br	x17

00000000000057c0 <strcspn@plt>:
    57c0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    57c4:	ldr	x17, [x16, #3800]
    57c8:	add	x16, x16, #0xed8
    57cc:	br	x17

00000000000057d0 <__errno_location@plt>:
    57d0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    57d4:	ldr	x17, [x16, #3808]
    57d8:	add	x16, x16, #0xee0
    57dc:	br	x17

00000000000057e0 <mmap64@plt>:
    57e0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    57e4:	ldr	x17, [x16, #3816]
    57e8:	add	x16, x16, #0xee8
    57ec:	br	x17

00000000000057f0 <getenv@plt>:
    57f0:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    57f4:	ldr	x17, [x16, #3824]
    57f8:	add	x16, x16, #0xef0
    57fc:	br	x17

0000000000005800 <syscall@plt>:
    5800:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5804:	ldr	x17, [x16, #3832]
    5808:	add	x16, x16, #0xef8
    580c:	br	x17

0000000000005810 <getsockname@plt>:
    5810:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5814:	ldr	x17, [x16, #3840]
    5818:	add	x16, x16, #0xf00
    581c:	br	x17

0000000000005820 <udev_queue_get_queue_is_empty@plt>:
    5820:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5824:	ldr	x17, [x16, #3848]
    5828:	add	x16, x16, #0xf08
    582c:	br	x17

0000000000005830 <unlink@plt>:
    5830:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5834:	ldr	x17, [x16, #3856]
    5838:	add	x16, x16, #0xf10
    583c:	br	x17

0000000000005840 <mkdir@plt>:
    5840:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5844:	ldr	x17, [x16, #3864]
    5848:	add	x16, x16, #0xf18
    584c:	br	x17

0000000000005850 <inotify_add_watch@plt>:
    5850:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5854:	ldr	x17, [x16, #3872]
    5858:	add	x16, x16, #0xf20
    585c:	br	x17

0000000000005860 <ioctl@plt>:
    5860:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5864:	ldr	x17, [x16, #3880]
    5868:	add	x16, x16, #0xf28
    586c:	br	x17

0000000000005870 <setlocale@plt>:
    5870:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5874:	ldr	x17, [x16, #3888]
    5878:	add	x16, x16, #0xf30
    587c:	br	x17

0000000000005880 <ferror@plt>:
    5880:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5884:	ldr	x17, [x16, #3896]
    5888:	add	x16, x16, #0xf38
    588c:	br	x17

0000000000005890 <readlinkat@plt>:
    5890:	adrp	x16, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5894:	ldr	x17, [x16, #3904]
    5898:	add	x16, x16, #0xf40
    589c:	br	x17

Disassembly of section .text:

00000000000058a0 <udev_get_userdata@@LIBUDEV_183-0x280>:
    58a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    58a4:	ldr	x0, [x0, #4008]
    58a8:	cbz	x0, 58b0 <*ABS*+0x18@plt>
    58ac:	b	53c0 <__gmon_start__@plt>
    58b0:	ret
    58b4:	stp	x29, x30, [sp, #-32]!
    58b8:	mov	x29, sp
    58bc:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    58c0:	add	x0, x0, #0xe8
    58c4:	str	x0, [sp, #24]
    58c8:	ldr	x0, [sp, #24]
    58cc:	str	x0, [sp, #24]
    58d0:	ldr	x1, [sp, #24]
    58d4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    58d8:	add	x0, x0, #0xe8
    58dc:	cmp	x1, x0
    58e0:	b.eq	5918 <*ABS*+0x20@plt+0x58>  // b.none
    58e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    58e8:	ldr	x0, [x0, #3976]
    58ec:	str	x0, [sp, #16]
    58f0:	ldr	x0, [sp, #16]
    58f4:	str	x0, [sp, #16]
    58f8:	ldr	x0, [sp, #16]
    58fc:	cmp	x0, #0x0
    5900:	b.eq	591c <*ABS*+0x20@plt+0x5c>  // b.none
    5904:	ldr	x1, [sp, #16]
    5908:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    590c:	add	x0, x0, #0xe8
    5910:	blr	x1
    5914:	b	591c <*ABS*+0x20@plt+0x5c>
    5918:	nop
    591c:	ldp	x29, x30, [sp], #32
    5920:	ret
    5924:	stp	x29, x30, [sp, #-48]!
    5928:	mov	x29, sp
    592c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    5930:	add	x0, x0, #0xe8
    5934:	str	x0, [sp, #40]
    5938:	ldr	x0, [sp, #40]
    593c:	str	x0, [sp, #40]
    5940:	ldr	x1, [sp, #40]
    5944:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    5948:	add	x0, x0, #0xe8
    594c:	sub	x0, x1, x0
    5950:	asr	x0, x0, #3
    5954:	lsr	x1, x0, #63
    5958:	add	x0, x1, x0
    595c:	asr	x0, x0, #1
    5960:	str	x0, [sp, #32]
    5964:	ldr	x0, [sp, #32]
    5968:	cmp	x0, #0x0
    596c:	b.eq	59a8 <*ABS*+0x20@plt+0xe8>  // b.none
    5970:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5974:	ldr	x0, [x0, #4072]
    5978:	str	x0, [sp, #24]
    597c:	ldr	x0, [sp, #24]
    5980:	str	x0, [sp, #24]
    5984:	ldr	x0, [sp, #24]
    5988:	cmp	x0, #0x0
    598c:	b.eq	59ac <*ABS*+0x20@plt+0xec>  // b.none
    5990:	ldr	x2, [sp, #24]
    5994:	ldr	x1, [sp, #32]
    5998:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    599c:	add	x0, x0, #0xe8
    59a0:	blr	x2
    59a4:	b	59ac <*ABS*+0x20@plt+0xec>
    59a8:	nop
    59ac:	ldp	x29, x30, [sp], #48
    59b0:	ret
    59b4:	stp	x29, x30, [sp, #-16]!
    59b8:	mov	x29, sp
    59bc:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    59c0:	add	x0, x0, #0xe8
    59c4:	ldrb	w0, [x0]
    59c8:	and	x0, x0, #0xff
    59cc:	cmp	x0, #0x0
    59d0:	b.ne	5a0c <*ABS*+0x20@plt+0x14c>  // b.any
    59d4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    59d8:	ldr	x0, [x0, #3984]
    59dc:	cmp	x0, #0x0
    59e0:	b.eq	59f4 <*ABS*+0x20@plt+0x134>  // b.none
    59e4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    59e8:	add	x0, x0, #0x0
    59ec:	ldr	x0, [x0]
    59f0:	bl	50e0 <__cxa_finalize@plt>
    59f4:	bl	58b4 <*ABS*+0x18@plt+0x4>
    59f8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
    59fc:	add	x0, x0, #0xe8
    5a00:	mov	w1, #0x1                   	// #1
    5a04:	strb	w1, [x0]
    5a08:	b	5a10 <*ABS*+0x20@plt+0x150>
    5a0c:	nop
    5a10:	ldp	x29, x30, [sp], #16
    5a14:	ret
    5a18:	stp	x29, x30, [sp, #-16]!
    5a1c:	mov	x29, sp
    5a20:	bl	5924 <*ABS*+0x20@plt+0x64>
    5a24:	nop
    5a28:	ldp	x29, x30, [sp], #16
    5a2c:	ret
    5a30:	stp	x29, x30, [sp, #-32]!
    5a34:	mov	x29, sp
    5a38:	str	x0, [sp, #24]
    5a3c:	ldr	x0, [sp, #24]
    5a40:	bl	54b0 <free@plt>
    5a44:	mov	x0, #0x0                   	// #0
    5a48:	ldp	x29, x30, [sp], #32
    5a4c:	ret
    5a50:	sub	sp, sp, #0x10
    5a54:	str	x0, [sp, #8]
    5a58:	str	x1, [sp]
    5a5c:	ldr	x0, [sp]
    5a60:	cmp	x0, #0x0
    5a64:	cset	w0, ne  // ne = any
    5a68:	and	w0, w0, #0xff
    5a6c:	and	x0, x0, #0xff
    5a70:	cmp	x0, #0x0
    5a74:	b.eq	5ab8 <*ABS*+0x20@plt+0x1f8>  // b.none
    5a78:	mov	x2, #0x0                   	// #0
    5a7c:	ldr	x1, [sp, #8]
    5a80:	ldr	x0, [sp]
    5a84:	umulh	x0, x1, x0
    5a88:	cmp	x0, #0x0
    5a8c:	b.eq	5a94 <*ABS*+0x20@plt+0x1d4>  // b.none
    5a90:	mov	x2, #0x1                   	// #1
    5a94:	mov	x0, x2
    5a98:	cmp	x0, #0x0
    5a9c:	cset	w0, ne  // ne = any
    5aa0:	and	w0, w0, #0xff
    5aa4:	and	x0, x0, #0xff
    5aa8:	cmp	x0, #0x0
    5aac:	b.eq	5ab8 <*ABS*+0x20@plt+0x1f8>  // b.none
    5ab0:	mov	w0, #0x1                   	// #1
    5ab4:	b	5abc <*ABS*+0x20@plt+0x1fc>
    5ab8:	mov	w0, #0x0                   	// #0
    5abc:	and	w0, w0, #0x1
    5ac0:	and	w0, w0, #0xff
    5ac4:	add	sp, sp, #0x10
    5ac8:	ret
    5acc:	stp	x29, x30, [sp, #-32]!
    5ad0:	mov	x29, sp
    5ad4:	str	x0, [sp, #24]
    5ad8:	str	x1, [sp, #16]
    5adc:	ldr	x1, [sp, #16]
    5ae0:	ldr	x0, [sp, #24]
    5ae4:	bl	5a50 <*ABS*+0x20@plt+0x190>
    5ae8:	and	w0, w0, #0xff
    5aec:	cmp	w0, #0x0
    5af0:	b.eq	5afc <*ABS*+0x20@plt+0x23c>  // b.none
    5af4:	mov	x0, #0x0                   	// #0
    5af8:	b	5b18 <*ABS*+0x20@plt+0x258>
    5afc:	ldr	x1, [sp, #24]
    5b00:	ldr	x0, [sp, #16]
    5b04:	mul	x0, x1, x0
    5b08:	cmp	x0, #0x0
    5b0c:	b.ne	5b14 <*ABS*+0x20@plt+0x254>  // b.any
    5b10:	mov	x0, #0x1                   	// #1
    5b14:	bl	5220 <malloc@plt>
    5b18:	ldp	x29, x30, [sp], #32
    5b1c:	ret

0000000000005b20 <udev_get_userdata@@LIBUDEV_183>:
    5b20:	stp	x29, x30, [sp, #-32]!
    5b24:	mov	x29, sp
    5b28:	str	x0, [sp, #24]
    5b2c:	ldr	x0, [sp, #24]
    5b30:	cmp	x0, #0x0
    5b34:	cset	w0, ne  // ne = any
    5b38:	and	w0, w0, #0xff
    5b3c:	and	x0, x0, #0xff
    5b40:	cmp	x0, #0x0
    5b44:	b.ne	5b78 <udev_get_userdata@@LIBUDEV_183+0x58>  // b.any
    5b48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5b4c:	add	x1, x0, #0x52b
    5b50:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5b54:	add	x4, x0, #0x570
    5b58:	mov	w3, #0x28                  	// #40
    5b5c:	mov	x2, x1
    5b60:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5b64:	add	x1, x0, #0x548
    5b68:	mov	w0, #0x0                   	// #0
    5b6c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    5b70:	mov	w0, #0x1                   	// #1
    5b74:	b	5b7c <udev_get_userdata@@LIBUDEV_183+0x5c>
    5b78:	mov	w0, #0x0                   	// #0
    5b7c:	cmp	w0, #0x0
    5b80:	b.eq	5b8c <udev_get_userdata@@LIBUDEV_183+0x6c>  // b.none
    5b84:	mov	x0, #0x0                   	// #0
    5b88:	b	5b94 <udev_get_userdata@@LIBUDEV_183+0x74>
    5b8c:	ldr	x0, [sp, #24]
    5b90:	ldr	x0, [x0, #8]
    5b94:	ldp	x29, x30, [sp], #32
    5b98:	ret

0000000000005b9c <udev_set_userdata@@LIBUDEV_183>:
    5b9c:	sub	sp, sp, #0x10
    5ba0:	str	x0, [sp, #8]
    5ba4:	str	x1, [sp]
    5ba8:	ldr	x0, [sp, #8]
    5bac:	cmp	x0, #0x0
    5bb0:	b.eq	5bc4 <udev_set_userdata@@LIBUDEV_183+0x28>  // b.none
    5bb4:	ldr	x0, [sp, #8]
    5bb8:	ldr	x1, [sp]
    5bbc:	str	x1, [x0, #8]
    5bc0:	b	5bc8 <udev_set_userdata@@LIBUDEV_183+0x2c>
    5bc4:	nop
    5bc8:	add	sp, sp, #0x10
    5bcc:	ret

0000000000005bd0 <udev_new@@LIBUDEV_183>:
    5bd0:	stp	x29, x30, [sp, #-32]!
    5bd4:	mov	x29, sp
    5bd8:	mov	x1, #0x1                   	// #1
    5bdc:	mov	x0, #0x10                  	// #16
    5be0:	bl	5acc <*ABS*+0x20@plt+0x20c>
    5be4:	str	x0, [sp, #24]
    5be8:	ldr	x0, [sp, #24]
    5bec:	cmp	x0, #0x0
    5bf0:	b.ne	5c0c <udev_new@@LIBUDEV_183+0x3c>  // b.any
    5bf4:	bl	57d0 <__errno_location@plt>
    5bf8:	mov	x1, x0
    5bfc:	mov	w0, #0xc                   	// #12
    5c00:	str	w0, [x1]
    5c04:	mov	x0, #0x0                   	// #0
    5c08:	b	5c24 <udev_new@@LIBUDEV_183+0x54>
    5c0c:	ldr	x0, [sp, #24]
    5c10:	stp	xzr, xzr, [x0]
    5c14:	ldr	x0, [sp, #24]
    5c18:	mov	w1, #0x1                   	// #1
    5c1c:	str	w1, [x0]
    5c20:	ldr	x0, [sp, #24]
    5c24:	ldp	x29, x30, [sp], #32
    5c28:	ret

0000000000005c2c <udev_ref@@LIBUDEV_183>:
    5c2c:	stp	x29, x30, [sp, #-32]!
    5c30:	mov	x29, sp
    5c34:	str	x0, [sp, #24]
    5c38:	ldr	x0, [sp, #24]
    5c3c:	cmp	x0, #0x0
    5c40:	b.ne	5c4c <udev_ref@@LIBUDEV_183+0x20>  // b.any
    5c44:	mov	x0, #0x0                   	// #0
    5c48:	b	5cac <udev_ref@@LIBUDEV_183+0x80>
    5c4c:	ldr	x0, [sp, #24]
    5c50:	ldr	w0, [x0]
    5c54:	cmp	w0, #0x0
    5c58:	cset	w0, eq  // eq = none
    5c5c:	and	w0, w0, #0xff
    5c60:	and	x0, x0, #0xff
    5c64:	cmp	x0, #0x0
    5c68:	b.eq	5c94 <udev_ref@@LIBUDEV_183+0x68>  // b.none
    5c6c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5c70:	add	x1, x0, #0x52b
    5c74:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5c78:	add	x4, x0, #0x588
    5c7c:	mov	w3, #0x5b                  	// #91
    5c80:	mov	x2, x1
    5c84:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5c88:	add	x1, x0, #0x550
    5c8c:	mov	w0, #0x0                   	// #0
    5c90:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    5c94:	ldr	x0, [sp, #24]
    5c98:	ldr	w0, [x0]
    5c9c:	add	w1, w0, #0x1
    5ca0:	ldr	x0, [sp, #24]
    5ca4:	str	w1, [x0]
    5ca8:	ldr	x0, [sp, #24]
    5cac:	ldp	x29, x30, [sp], #32
    5cb0:	ret

0000000000005cb4 <udev_unref@@LIBUDEV_183>:
    5cb4:	stp	x29, x30, [sp, #-32]!
    5cb8:	mov	x29, sp
    5cbc:	str	x0, [sp, #24]
    5cc0:	ldr	x0, [sp, #24]
    5cc4:	cmp	x0, #0x0
    5cc8:	b.ne	5cd4 <udev_unref@@LIBUDEV_183+0x20>  // b.any
    5ccc:	mov	x0, #0x0                   	// #0
    5cd0:	b	5d50 <udev_unref@@LIBUDEV_183+0x9c>
    5cd4:	ldr	x0, [sp, #24]
    5cd8:	ldr	w0, [x0]
    5cdc:	cmp	w0, #0x0
    5ce0:	cset	w0, eq  // eq = none
    5ce4:	and	w0, w0, #0xff
    5ce8:	and	x0, x0, #0xff
    5cec:	cmp	x0, #0x0
    5cf0:	b.eq	5d1c <udev_unref@@LIBUDEV_183+0x68>  // b.none
    5cf4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5cf8:	add	x1, x0, #0x52b
    5cfc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5d00:	add	x4, x0, #0x598
    5d04:	mov	w3, #0x6a                  	// #106
    5d08:	mov	x2, x1
    5d0c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5d10:	add	x1, x0, #0x560
    5d14:	mov	w0, #0x0                   	// #0
    5d18:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    5d1c:	ldr	x0, [sp, #24]
    5d20:	ldr	w0, [x0]
    5d24:	sub	w1, w0, #0x1
    5d28:	ldr	x0, [sp, #24]
    5d2c:	str	w1, [x0]
    5d30:	ldr	x0, [sp, #24]
    5d34:	ldr	w0, [x0]
    5d38:	cmp	w0, #0x0
    5d3c:	b.eq	5d48 <udev_unref@@LIBUDEV_183+0x94>  // b.none
    5d40:	ldr	x0, [sp, #24]
    5d44:	b	5d50 <udev_unref@@LIBUDEV_183+0x9c>
    5d48:	ldr	x0, [sp, #24]
    5d4c:	bl	5a30 <*ABS*+0x20@plt+0x170>
    5d50:	ldp	x29, x30, [sp], #32
    5d54:	ret

0000000000005d58 <udev_set_log_fn@@LIBUDEV_183>:
    5d58:	sub	sp, sp, #0x10
    5d5c:	str	x0, [sp, #8]
    5d60:	str	x1, [sp]
    5d64:	nop
    5d68:	add	sp, sp, #0x10
    5d6c:	ret

0000000000005d70 <udev_get_log_priority@@LIBUDEV_183>:
    5d70:	stp	x29, x30, [sp, #-32]!
    5d74:	mov	x29, sp
    5d78:	str	x0, [sp, #24]
    5d7c:	mov	w0, #0x0                   	// #0
    5d80:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    5d84:	ldp	x29, x30, [sp], #32
    5d88:	ret

0000000000005d8c <udev_set_log_priority@@LIBUDEV_183>:
    5d8c:	stp	x29, x30, [sp, #-32]!
    5d90:	mov	x29, sp
    5d94:	str	x0, [sp, #24]
    5d98:	str	w1, [sp, #20]
    5d9c:	ldr	w1, [sp, #20]
    5da0:	mov	w0, #0x0                   	// #0
    5da4:	bl	2c134 <udev_util_encode_string@@LIBUDEV_183+0x20904>
    5da8:	nop
    5dac:	ldp	x29, x30, [sp], #32
    5db0:	ret
    5db4:	stp	x29, x30, [sp, #-32]!
    5db8:	mov	x29, sp
    5dbc:	str	x0, [sp, #24]
    5dc0:	ldr	x0, [sp, #24]
    5dc4:	ldr	x0, [x0]
    5dc8:	cmp	x0, #0x0
    5dcc:	b.eq	5ddc <udev_set_log_priority@@LIBUDEV_183+0x50>  // b.none
    5dd0:	ldr	x0, [sp, #24]
    5dd4:	ldr	x0, [x0]
    5dd8:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    5ddc:	nop
    5de0:	ldp	x29, x30, [sp], #32
    5de4:	ret
    5de8:	stp	x29, x30, [sp, #-32]!
    5dec:	mov	x29, sp
    5df0:	str	x0, [sp, #24]
    5df4:	ldr	x0, [sp, #24]
    5df8:	bl	54b0 <free@plt>
    5dfc:	mov	x0, #0x0                   	// #0
    5e00:	ldp	x29, x30, [sp], #32
    5e04:	ret
    5e08:	sub	sp, sp, #0x10
    5e0c:	str	x0, [sp, #8]
    5e10:	str	x1, [sp]
    5e14:	ldr	x0, [sp]
    5e18:	cmp	x0, #0x0
    5e1c:	cset	w0, ne  // ne = any
    5e20:	and	w0, w0, #0xff
    5e24:	and	x0, x0, #0xff
    5e28:	cmp	x0, #0x0
    5e2c:	b.eq	5e70 <udev_set_log_priority@@LIBUDEV_183+0xe4>  // b.none
    5e30:	mov	x2, #0x0                   	// #0
    5e34:	ldr	x1, [sp, #8]
    5e38:	ldr	x0, [sp]
    5e3c:	umulh	x0, x1, x0
    5e40:	cmp	x0, #0x0
    5e44:	b.eq	5e4c <udev_set_log_priority@@LIBUDEV_183+0xc0>  // b.none
    5e48:	mov	x2, #0x1                   	// #1
    5e4c:	mov	x0, x2
    5e50:	cmp	x0, #0x0
    5e54:	cset	w0, ne  // ne = any
    5e58:	and	w0, w0, #0xff
    5e5c:	and	x0, x0, #0xff
    5e60:	cmp	x0, #0x0
    5e64:	b.eq	5e70 <udev_set_log_priority@@LIBUDEV_183+0xe4>  // b.none
    5e68:	mov	w0, #0x1                   	// #1
    5e6c:	b	5e74 <udev_set_log_priority@@LIBUDEV_183+0xe8>
    5e70:	mov	w0, #0x0                   	// #0
    5e74:	and	w0, w0, #0x1
    5e78:	and	w0, w0, #0xff
    5e7c:	add	sp, sp, #0x10
    5e80:	ret
    5e84:	stp	x29, x30, [sp, #-32]!
    5e88:	mov	x29, sp
    5e8c:	str	x0, [sp, #24]
    5e90:	str	x1, [sp, #16]
    5e94:	ldr	x1, [sp, #16]
    5e98:	ldr	x0, [sp, #24]
    5e9c:	bl	5e08 <udev_set_log_priority@@LIBUDEV_183+0x7c>
    5ea0:	and	w0, w0, #0xff
    5ea4:	cmp	w0, #0x0
    5ea8:	b.eq	5eb4 <udev_set_log_priority@@LIBUDEV_183+0x128>  // b.none
    5eac:	mov	x0, #0x0                   	// #0
    5eb0:	b	5ed0 <udev_set_log_priority@@LIBUDEV_183+0x144>
    5eb4:	ldr	x1, [sp, #24]
    5eb8:	ldr	x0, [sp, #16]
    5ebc:	mul	x0, x1, x0
    5ec0:	cmp	x0, #0x0
    5ec4:	b.ne	5ecc <udev_set_log_priority@@LIBUDEV_183+0x140>  // b.any
    5ec8:	mov	x0, #0x1                   	// #1
    5ecc:	bl	5220 <malloc@plt>
    5ed0:	ldp	x29, x30, [sp], #32
    5ed4:	ret
    5ed8:	stp	x29, x30, [sp, #-32]!
    5edc:	mov	x29, sp
    5ee0:	str	x0, [sp, #24]
    5ee4:	ldr	x0, [sp, #24]
    5ee8:	ldr	x0, [x0]
    5eec:	cmp	x0, #0x0
    5ef0:	b.eq	5f00 <udev_set_log_priority@@LIBUDEV_183+0x174>  // b.none
    5ef4:	ldr	x0, [sp, #24]
    5ef8:	ldr	x0, [x0]
    5efc:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    5f00:	nop
    5f04:	ldp	x29, x30, [sp], #32
    5f08:	ret

0000000000005f0c <udev_device_get_seqnum@@LIBUDEV_183>:
    5f0c:	stp	x29, x30, [sp, #-48]!
    5f10:	mov	x29, sp
    5f14:	str	x0, [sp, #24]
    5f18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5f1c:	ldr	x0, [x0, #4016]
    5f20:	ldr	x1, [x0]
    5f24:	str	x1, [sp, #40]
    5f28:	mov	x1, #0x0                   	// #0
    5f2c:	ldr	x0, [sp, #24]
    5f30:	cmp	x0, #0x0
    5f34:	cset	w0, ne  // ne = any
    5f38:	and	w0, w0, #0xff
    5f3c:	and	x0, x0, #0xff
    5f40:	cmp	x0, #0x0
    5f44:	b.ne	5f78 <udev_device_get_seqnum@@LIBUDEV_183+0x6c>  // b.any
    5f48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5f4c:	add	x1, x0, #0x5ab
    5f50:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5f54:	add	x4, x0, #0x610
    5f58:	mov	w3, #0x52                  	// #82
    5f5c:	mov	x2, x1
    5f60:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    5f64:	add	x1, x0, #0x5c8
    5f68:	mov	w0, #0x0                   	// #0
    5f6c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    5f70:	mov	w0, #0x1                   	// #1
    5f74:	b	5f7c <udev_device_get_seqnum@@LIBUDEV_183+0x70>
    5f78:	mov	w0, #0x0                   	// #0
    5f7c:	cmp	w0, #0x0
    5f80:	b.eq	5f9c <udev_device_get_seqnum@@LIBUDEV_183+0x90>  // b.none
    5f84:	bl	57d0 <__errno_location@plt>
    5f88:	mov	x1, x0
    5f8c:	mov	w0, #0x16                  	// #22
    5f90:	str	w0, [x1]
    5f94:	mov	x0, #0x0                   	// #0
    5f98:	b	5fc0 <udev_device_get_seqnum@@LIBUDEV_183+0xb4>
    5f9c:	ldr	x0, [sp, #24]
    5fa0:	ldr	x0, [x0, #8]
    5fa4:	add	x1, sp, #0x20
    5fa8:	bl	12c5c <udev_util_encode_string@@LIBUDEV_183+0x742c>
    5fac:	cmp	w0, #0x0
    5fb0:	b.ge	5fbc <udev_device_get_seqnum@@LIBUDEV_183+0xb0>  // b.tcont
    5fb4:	mov	x0, #0x0                   	// #0
    5fb8:	b	5fc0 <udev_device_get_seqnum@@LIBUDEV_183+0xb4>
    5fbc:	ldr	x0, [sp, #32]
    5fc0:	mov	x1, x0
    5fc4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    5fc8:	ldr	x0, [x0, #4016]
    5fcc:	ldr	x2, [sp, #40]
    5fd0:	ldr	x0, [x0]
    5fd4:	eor	x0, x2, x0
    5fd8:	cmp	x0, #0x0
    5fdc:	b.eq	5fe4 <udev_device_get_seqnum@@LIBUDEV_183+0xd8>  // b.none
    5fe0:	bl	5390 <__stack_chk_fail@plt>
    5fe4:	mov	x0, x1
    5fe8:	ldp	x29, x30, [sp], #48
    5fec:	ret

0000000000005ff0 <udev_device_get_devnum@@LIBUDEV_183>:
    5ff0:	stp	x29, x30, [sp, #-64]!
    5ff4:	mov	x29, sp
    5ff8:	str	x0, [sp, #24]
    5ffc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6000:	ldr	x0, [x0, #4016]
    6004:	ldr	x1, [x0]
    6008:	str	x1, [sp, #56]
    600c:	mov	x1, #0x0                   	// #0
    6010:	ldr	x0, [sp, #24]
    6014:	cmp	x0, #0x0
    6018:	cset	w0, ne  // ne = any
    601c:	and	w0, w0, #0xff
    6020:	and	x0, x0, #0xff
    6024:	cmp	x0, #0x0
    6028:	b.ne	605c <udev_device_get_devnum@@LIBUDEV_183+0x6c>  // b.any
    602c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6030:	add	x1, x0, #0x5ab
    6034:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6038:	add	x4, x0, #0x628
    603c:	mov	w3, #0x66                  	// #102
    6040:	mov	x2, x1
    6044:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6048:	add	x1, x0, #0x5c8
    604c:	mov	w0, #0x0                   	// #0
    6050:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6054:	mov	w0, #0x1                   	// #1
    6058:	b	6060 <udev_device_get_devnum@@LIBUDEV_183+0x70>
    605c:	mov	w0, #0x0                   	// #0
    6060:	cmp	w0, #0x0
    6064:	b.eq	6088 <udev_device_get_devnum@@LIBUDEV_183+0x98>  // b.none
    6068:	bl	57d0 <__errno_location@plt>
    606c:	mov	x1, x0
    6070:	mov	w0, #0x16                  	// #22
    6074:	str	w0, [x1]
    6078:	mov	w1, #0x0                   	// #0
    607c:	mov	w0, #0x0                   	// #0
    6080:	bl	51a0 <gnu_dev_makedev@plt>
    6084:	b	60f0 <udev_device_get_devnum@@LIBUDEV_183+0x100>
    6088:	ldr	x0, [sp, #24]
    608c:	ldr	x0, [x0, #8]
    6090:	add	x1, sp, #0x30
    6094:	bl	1a4cc <udev_util_encode_string@@LIBUDEV_183+0xec9c>
    6098:	str	w0, [sp, #44]
    609c:	ldr	w0, [sp, #44]
    60a0:	cmn	w0, #0x2
    60a4:	b.ne	60b8 <udev_device_get_devnum@@LIBUDEV_183+0xc8>  // b.any
    60a8:	mov	w1, #0x0                   	// #0
    60ac:	mov	w0, #0x0                   	// #0
    60b0:	bl	51a0 <gnu_dev_makedev@plt>
    60b4:	b	60f0 <udev_device_get_devnum@@LIBUDEV_183+0x100>
    60b8:	ldr	w0, [sp, #44]
    60bc:	cmp	w0, #0x0
    60c0:	b.ge	60ec <udev_device_get_devnum@@LIBUDEV_183+0xfc>  // b.tcont
    60c4:	bl	57d0 <__errno_location@plt>
    60c8:	mov	x1, x0
    60cc:	ldr	w0, [sp, #44]
    60d0:	cmp	w0, #0x0
    60d4:	cneg	w0, w0, lt  // lt = tstop
    60d8:	str	w0, [x1]
    60dc:	mov	w1, #0x0                   	// #0
    60e0:	mov	w0, #0x0                   	// #0
    60e4:	bl	51a0 <gnu_dev_makedev@plt>
    60e8:	b	60f0 <udev_device_get_devnum@@LIBUDEV_183+0x100>
    60ec:	ldr	x0, [sp, #48]
    60f0:	mov	x1, x0
    60f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    60f8:	ldr	x0, [x0, #4016]
    60fc:	ldr	x2, [sp, #56]
    6100:	ldr	x0, [x0]
    6104:	eor	x0, x2, x0
    6108:	cmp	x0, #0x0
    610c:	b.eq	6114 <udev_device_get_devnum@@LIBUDEV_183+0x124>  // b.none
    6110:	bl	5390 <__stack_chk_fail@plt>
    6114:	mov	x0, x1
    6118:	ldp	x29, x30, [sp], #64
    611c:	ret

0000000000006120 <udev_device_get_driver@@LIBUDEV_183>:
    6120:	stp	x29, x30, [sp, #-64]!
    6124:	mov	x29, sp
    6128:	str	x0, [sp, #24]
    612c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6130:	ldr	x0, [x0, #4016]
    6134:	ldr	x1, [x0]
    6138:	str	x1, [sp, #56]
    613c:	mov	x1, #0x0                   	// #0
    6140:	ldr	x0, [sp, #24]
    6144:	cmp	x0, #0x0
    6148:	cset	w0, ne  // ne = any
    614c:	and	w0, w0, #0xff
    6150:	and	x0, x0, #0xff
    6154:	cmp	x0, #0x0
    6158:	b.ne	618c <udev_device_get_driver@@LIBUDEV_183+0x6c>  // b.any
    615c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6160:	add	x1, x0, #0x5ab
    6164:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6168:	add	x4, x0, #0x640
    616c:	mov	w3, #0x7d                  	// #125
    6170:	mov	x2, x1
    6174:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6178:	add	x1, x0, #0x5c8
    617c:	mov	w0, #0x0                   	// #0
    6180:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6184:	mov	w0, #0x1                   	// #1
    6188:	b	6190 <udev_device_get_driver@@LIBUDEV_183+0x70>
    618c:	mov	w0, #0x0                   	// #0
    6190:	cmp	w0, #0x0
    6194:	b.eq	61b0 <udev_device_get_driver@@LIBUDEV_183+0x90>  // b.none
    6198:	bl	57d0 <__errno_location@plt>
    619c:	mov	x1, x0
    61a0:	mov	w0, #0x16                  	// #22
    61a4:	str	w0, [x1]
    61a8:	mov	x0, #0x0                   	// #0
    61ac:	b	61f4 <udev_device_get_driver@@LIBUDEV_183+0xd4>
    61b0:	ldr	x0, [sp, #24]
    61b4:	ldr	x0, [x0, #8]
    61b8:	add	x1, sp, #0x30
    61bc:	bl	1a714 <udev_util_encode_string@@LIBUDEV_183+0xeee4>
    61c0:	str	w0, [sp, #44]
    61c4:	ldr	w0, [sp, #44]
    61c8:	cmp	w0, #0x0
    61cc:	b.ge	61f0 <udev_device_get_driver@@LIBUDEV_183+0xd0>  // b.tcont
    61d0:	bl	57d0 <__errno_location@plt>
    61d4:	mov	x1, x0
    61d8:	ldr	w0, [sp, #44]
    61dc:	cmp	w0, #0x0
    61e0:	cneg	w0, w0, lt  // lt = tstop
    61e4:	str	w0, [x1]
    61e8:	mov	x0, #0x0                   	// #0
    61ec:	b	61f4 <udev_device_get_driver@@LIBUDEV_183+0xd4>
    61f0:	ldr	x0, [sp, #48]
    61f4:	mov	x1, x0
    61f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    61fc:	ldr	x0, [x0, #4016]
    6200:	ldr	x2, [sp, #56]
    6204:	ldr	x0, [x0]
    6208:	eor	x0, x2, x0
    620c:	cmp	x0, #0x0
    6210:	b.eq	6218 <udev_device_get_driver@@LIBUDEV_183+0xf8>  // b.none
    6214:	bl	5390 <__stack_chk_fail@plt>
    6218:	mov	x0, x1
    621c:	ldp	x29, x30, [sp], #64
    6220:	ret

0000000000006224 <udev_device_get_devtype@@LIBUDEV_183>:
    6224:	stp	x29, x30, [sp, #-64]!
    6228:	mov	x29, sp
    622c:	str	x0, [sp, #24]
    6230:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6234:	ldr	x0, [x0, #4016]
    6238:	ldr	x1, [x0]
    623c:	str	x1, [sp, #56]
    6240:	mov	x1, #0x0                   	// #0
    6244:	ldr	x0, [sp, #24]
    6248:	cmp	x0, #0x0
    624c:	cset	w0, ne  // ne = any
    6250:	and	w0, w0, #0xff
    6254:	and	x0, x0, #0xff
    6258:	cmp	x0, #0x0
    625c:	b.ne	6290 <udev_device_get_devtype@@LIBUDEV_183+0x6c>  // b.any
    6260:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6264:	add	x1, x0, #0x5ab
    6268:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    626c:	add	x4, x0, #0x658
    6270:	mov	w3, #0x92                  	// #146
    6274:	mov	x2, x1
    6278:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    627c:	add	x1, x0, #0x5c8
    6280:	mov	w0, #0x0                   	// #0
    6284:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6288:	mov	w0, #0x1                   	// #1
    628c:	b	6294 <udev_device_get_devtype@@LIBUDEV_183+0x70>
    6290:	mov	w0, #0x0                   	// #0
    6294:	cmp	w0, #0x0
    6298:	b.eq	62b4 <udev_device_get_devtype@@LIBUDEV_183+0x90>  // b.none
    629c:	bl	57d0 <__errno_location@plt>
    62a0:	mov	x1, x0
    62a4:	mov	w0, #0x16                  	// #22
    62a8:	str	w0, [x1]
    62ac:	mov	x0, #0x0                   	// #0
    62b0:	b	630c <udev_device_get_devtype@@LIBUDEV_183+0xe8>
    62b4:	ldr	x0, [sp, #24]
    62b8:	ldr	x0, [x0, #8]
    62bc:	add	x1, sp, #0x30
    62c0:	bl	1a208 <udev_util_encode_string@@LIBUDEV_183+0xe9d8>
    62c4:	str	w0, [sp, #44]
    62c8:	ldr	w0, [sp, #44]
    62cc:	cmn	w0, #0x2
    62d0:	b.ne	62dc <udev_device_get_devtype@@LIBUDEV_183+0xb8>  // b.any
    62d4:	mov	x0, #0x0                   	// #0
    62d8:	b	630c <udev_device_get_devtype@@LIBUDEV_183+0xe8>
    62dc:	ldr	w0, [sp, #44]
    62e0:	cmp	w0, #0x0
    62e4:	b.ge	6308 <udev_device_get_devtype@@LIBUDEV_183+0xe4>  // b.tcont
    62e8:	bl	57d0 <__errno_location@plt>
    62ec:	mov	x1, x0
    62f0:	ldr	w0, [sp, #44]
    62f4:	cmp	w0, #0x0
    62f8:	cneg	w0, w0, lt  // lt = tstop
    62fc:	str	w0, [x1]
    6300:	mov	x0, #0x0                   	// #0
    6304:	b	630c <udev_device_get_devtype@@LIBUDEV_183+0xe8>
    6308:	ldr	x0, [sp, #48]
    630c:	mov	x1, x0
    6310:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6314:	ldr	x0, [x0, #4016]
    6318:	ldr	x2, [sp, #56]
    631c:	ldr	x0, [x0]
    6320:	eor	x0, x2, x0
    6324:	cmp	x0, #0x0
    6328:	b.eq	6330 <udev_device_get_devtype@@LIBUDEV_183+0x10c>  // b.none
    632c:	bl	5390 <__stack_chk_fail@plt>
    6330:	mov	x0, x1
    6334:	ldp	x29, x30, [sp], #64
    6338:	ret

000000000000633c <udev_device_get_subsystem@@LIBUDEV_183>:
    633c:	stp	x29, x30, [sp, #-64]!
    6340:	mov	x29, sp
    6344:	str	x0, [sp, #24]
    6348:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    634c:	ldr	x0, [x0, #4016]
    6350:	ldr	x1, [x0]
    6354:	str	x1, [sp, #56]
    6358:	mov	x1, #0x0                   	// #0
    635c:	ldr	x0, [sp, #24]
    6360:	cmp	x0, #0x0
    6364:	cset	w0, ne  // ne = any
    6368:	and	w0, w0, #0xff
    636c:	and	x0, x0, #0xff
    6370:	cmp	x0, #0x0
    6374:	b.ne	63a8 <udev_device_get_subsystem@@LIBUDEV_183+0x6c>  // b.any
    6378:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    637c:	add	x1, x0, #0x5ab
    6380:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6384:	add	x4, x0, #0x670
    6388:	mov	w3, #0xaa                  	// #170
    638c:	mov	x2, x1
    6390:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6394:	add	x1, x0, #0x5c8
    6398:	mov	w0, #0x0                   	// #0
    639c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    63a0:	mov	w0, #0x1                   	// #1
    63a4:	b	63ac <udev_device_get_subsystem@@LIBUDEV_183+0x70>
    63a8:	mov	w0, #0x0                   	// #0
    63ac:	cmp	w0, #0x0
    63b0:	b.eq	63cc <udev_device_get_subsystem@@LIBUDEV_183+0x90>  // b.none
    63b4:	bl	57d0 <__errno_location@plt>
    63b8:	mov	x1, x0
    63bc:	mov	w0, #0x16                  	// #22
    63c0:	str	w0, [x1]
    63c4:	mov	x0, #0x0                   	// #0
    63c8:	b	6410 <udev_device_get_subsystem@@LIBUDEV_183+0xd4>
    63cc:	ldr	x0, [sp, #24]
    63d0:	ldr	x0, [x0, #8]
    63d4:	add	x1, sp, #0x30
    63d8:	bl	19ae4 <udev_util_encode_string@@LIBUDEV_183+0xe2b4>
    63dc:	str	w0, [sp, #44]
    63e0:	ldr	w0, [sp, #44]
    63e4:	cmp	w0, #0x0
    63e8:	b.ge	640c <udev_device_get_subsystem@@LIBUDEV_183+0xd0>  // b.tcont
    63ec:	bl	57d0 <__errno_location@plt>
    63f0:	mov	x1, x0
    63f4:	ldr	w0, [sp, #44]
    63f8:	cmp	w0, #0x0
    63fc:	cneg	w0, w0, lt  // lt = tstop
    6400:	str	w0, [x1]
    6404:	mov	x0, #0x0                   	// #0
    6408:	b	6410 <udev_device_get_subsystem@@LIBUDEV_183+0xd4>
    640c:	ldr	x0, [sp, #48]
    6410:	mov	x1, x0
    6414:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6418:	ldr	x0, [x0, #4016]
    641c:	ldr	x2, [sp, #56]
    6420:	ldr	x0, [x0]
    6424:	eor	x0, x2, x0
    6428:	cmp	x0, #0x0
    642c:	b.eq	6434 <udev_device_get_subsystem@@LIBUDEV_183+0xf8>  // b.none
    6430:	bl	5390 <__stack_chk_fail@plt>
    6434:	mov	x0, x1
    6438:	ldp	x29, x30, [sp], #64
    643c:	ret

0000000000006440 <udev_device_get_property_value@@LIBUDEV_183>:
    6440:	stp	x29, x30, [sp, #-64]!
    6444:	mov	x29, sp
    6448:	str	x0, [sp, #24]
    644c:	str	x1, [sp, #16]
    6450:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6454:	ldr	x0, [x0, #4016]
    6458:	ldr	x1, [x0]
    645c:	str	x1, [sp, #56]
    6460:	mov	x1, #0x0                   	// #0
    6464:	ldr	x0, [sp, #24]
    6468:	cmp	x0, #0x0
    646c:	cset	w0, ne  // ne = any
    6470:	and	w0, w0, #0xff
    6474:	sxtw	x0, w0
    6478:	cmp	x0, #0x0
    647c:	b.eq	649c <udev_device_get_property_value@@LIBUDEV_183+0x5c>  // b.none
    6480:	ldr	x0, [sp, #16]
    6484:	cmp	x0, #0x0
    6488:	cset	w0, ne  // ne = any
    648c:	and	w0, w0, #0xff
    6490:	sxtw	x0, w0
    6494:	cmp	x0, #0x0
    6498:	b.ne	64cc <udev_device_get_property_value@@LIBUDEV_183+0x8c>  // b.any
    649c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    64a0:	add	x1, x0, #0x5ab
    64a4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    64a8:	add	x4, x0, #0x690
    64ac:	mov	w3, #0xc0                  	// #192
    64b0:	mov	x2, x1
    64b4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    64b8:	add	x1, x0, #0x5d8
    64bc:	mov	w0, #0x0                   	// #0
    64c0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    64c4:	mov	w0, #0x1                   	// #1
    64c8:	b	64d0 <udev_device_get_property_value@@LIBUDEV_183+0x90>
    64cc:	mov	w0, #0x0                   	// #0
    64d0:	cmp	w0, #0x0
    64d4:	b.eq	64f0 <udev_device_get_property_value@@LIBUDEV_183+0xb0>  // b.none
    64d8:	bl	57d0 <__errno_location@plt>
    64dc:	mov	x1, x0
    64e0:	mov	w0, #0x16                  	// #22
    64e4:	str	w0, [x1]
    64e8:	mov	x0, #0x0                   	// #0
    64ec:	b	653c <udev_device_get_property_value@@LIBUDEV_183+0xfc>
    64f0:	ldr	x0, [sp, #24]
    64f4:	ldr	x0, [x0, #8]
    64f8:	add	x1, sp, #0x30
    64fc:	mov	x2, x1
    6500:	ldr	x1, [sp, #16]
    6504:	bl	1dd2c <udev_util_encode_string@@LIBUDEV_183+0x124fc>
    6508:	str	w0, [sp, #44]
    650c:	ldr	w0, [sp, #44]
    6510:	cmp	w0, #0x0
    6514:	b.ge	6538 <udev_device_get_property_value@@LIBUDEV_183+0xf8>  // b.tcont
    6518:	bl	57d0 <__errno_location@plt>
    651c:	mov	x1, x0
    6520:	ldr	w0, [sp, #44]
    6524:	cmp	w0, #0x0
    6528:	cneg	w0, w0, lt  // lt = tstop
    652c:	str	w0, [x1]
    6530:	mov	x0, #0x0                   	// #0
    6534:	b	653c <udev_device_get_property_value@@LIBUDEV_183+0xfc>
    6538:	ldr	x0, [sp, #48]
    653c:	mov	x1, x0
    6540:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6544:	ldr	x0, [x0, #4016]
    6548:	ldr	x2, [sp, #56]
    654c:	ldr	x0, [x0]
    6550:	eor	x0, x2, x0
    6554:	cmp	x0, #0x0
    6558:	b.eq	6560 <udev_device_get_property_value@@LIBUDEV_183+0x120>  // b.none
    655c:	bl	5390 <__stack_chk_fail@plt>
    6560:	mov	x0, x1
    6564:	ldp	x29, x30, [sp], #64
    6568:	ret
    656c:	stp	x29, x30, [sp, #-240]!
    6570:	mov	x29, sp
    6574:	str	x19, [sp, #16]
    6578:	str	x0, [sp, #40]
    657c:	str	x1, [sp, #32]
    6580:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6584:	ldr	x0, [x0, #4016]
    6588:	ldr	x1, [x0]
    658c:	str	x1, [sp, #232]
    6590:	mov	x1, #0x0                   	// #0
    6594:	str	xzr, [sp, #56]
    6598:	str	xzr, [sp, #64]
    659c:	str	xzr, [sp, #72]
    65a0:	str	xzr, [sp, #120]
    65a4:	ldr	x0, [sp, #32]
    65a8:	cmp	x0, #0x0
    65ac:	cset	w0, eq  // eq = none
    65b0:	and	w0, w0, #0xff
    65b4:	and	x0, x0, #0xff
    65b8:	cmp	x0, #0x0
    65bc:	b.eq	65e8 <udev_device_get_property_value@@LIBUDEV_183+0x1a8>  // b.none
    65c0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    65c4:	add	x1, x0, #0x5ab
    65c8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    65cc:	add	x4, x0, #0x6b0
    65d0:	mov	w3, #0xcd                  	// #205
    65d4:	mov	x2, x1
    65d8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    65dc:	add	x1, x0, #0x5f0
    65e0:	mov	w0, #0x0                   	// #0
    65e4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    65e8:	mov	w0, #0x1                   	// #1
    65ec:	bl	9c80 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x678>
    65f0:	str	x0, [sp, #56]
    65f4:	ldr	x0, [sp, #56]
    65f8:	cmp	x0, #0x0
    65fc:	b.ne	6618 <udev_device_get_property_value@@LIBUDEV_183+0x1d8>  // b.any
    6600:	bl	57d0 <__errno_location@plt>
    6604:	mov	x1, x0
    6608:	mov	w0, #0xc                   	// #12
    660c:	str	w0, [x1]
    6610:	mov	x19, #0x0                   	// #0
    6614:	b	678c <udev_device_get_property_value@@LIBUDEV_183+0x34c>
    6618:	mov	w0, #0x1                   	// #1
    661c:	bl	9c80 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x678>
    6620:	str	x0, [sp, #64]
    6624:	ldr	x0, [sp, #64]
    6628:	cmp	x0, #0x0
    662c:	b.ne	6648 <udev_device_get_property_value@@LIBUDEV_183+0x208>  // b.any
    6630:	bl	57d0 <__errno_location@plt>
    6634:	mov	x1, x0
    6638:	mov	w0, #0xc                   	// #12
    663c:	str	w0, [x1]
    6640:	mov	x19, #0x0                   	// #0
    6644:	b	678c <udev_device_get_property_value@@LIBUDEV_183+0x34c>
    6648:	mov	w0, #0x1                   	// #1
    664c:	bl	9c80 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x678>
    6650:	str	x0, [sp, #72]
    6654:	ldr	x0, [sp, #72]
    6658:	cmp	x0, #0x0
    665c:	b.ne	6678 <udev_device_get_property_value@@LIBUDEV_183+0x238>  // b.any
    6660:	bl	57d0 <__errno_location@plt>
    6664:	mov	x1, x0
    6668:	mov	w0, #0xc                   	// #12
    666c:	str	w0, [x1]
    6670:	mov	x19, #0x0                   	// #0
    6674:	b	678c <udev_device_get_property_value@@LIBUDEV_183+0x34c>
    6678:	mov	w0, #0x1                   	// #1
    667c:	bl	9c80 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x678>
    6680:	str	x0, [sp, #120]
    6684:	ldr	x0, [sp, #120]
    6688:	cmp	x0, #0x0
    668c:	b.ne	66a8 <udev_device_get_property_value@@LIBUDEV_183+0x268>  // b.any
    6690:	bl	57d0 <__errno_location@plt>
    6694:	mov	x1, x0
    6698:	mov	w0, #0xc                   	// #12
    669c:	str	w0, [x1]
    66a0:	mov	x19, #0x0                   	// #0
    66a4:	b	678c <udev_device_get_property_value@@LIBUDEV_183+0x34c>
    66a8:	mov	x1, #0x1                   	// #1
    66ac:	mov	x0, #0x70                  	// #112
    66b0:	bl	5e84 <udev_set_log_priority@@LIBUDEV_183+0xf8>
    66b4:	str	x0, [sp, #80]
    66b8:	ldr	x0, [sp, #80]
    66bc:	cmp	x0, #0x0
    66c0:	b.ne	66dc <udev_device_get_property_value@@LIBUDEV_183+0x29c>  // b.any
    66c4:	bl	57d0 <__errno_location@plt>
    66c8:	mov	x1, x0
    66cc:	mov	w0, #0xc                   	// #12
    66d0:	str	w0, [x1]
    66d4:	mov	x19, #0x0                   	// #0
    66d8:	b	678c <udev_device_get_property_value@@LIBUDEV_183+0x34c>
    66dc:	ldr	x0, [sp, #32]
    66e0:	bl	15598 <udev_util_encode_string@@LIBUDEV_183+0x9d68>
    66e4:	mov	x6, x0
    66e8:	ldr	x0, [sp, #56]
    66ec:	str	x0, [sp, #88]
    66f0:	str	xzr, [sp, #56]
    66f4:	ldr	x4, [sp, #88]
    66f8:	ldr	x0, [sp, #64]
    66fc:	str	x0, [sp, #96]
    6700:	str	xzr, [sp, #64]
    6704:	ldr	x3, [sp, #96]
    6708:	ldr	x0, [sp, #120]
    670c:	str	x0, [sp, #104]
    6710:	str	xzr, [sp, #120]
    6714:	ldr	x2, [sp, #104]
    6718:	ldr	x0, [sp, #72]
    671c:	str	x0, [sp, #112]
    6720:	str	xzr, [sp, #72]
    6724:	ldr	x1, [sp, #112]
    6728:	ldr	x0, [sp, #80]
    672c:	stp	xzr, xzr, [x0]
    6730:	stp	xzr, xzr, [x0, #16]
    6734:	stp	xzr, xzr, [x0, #32]
    6738:	stp	xzr, xzr, [x0, #48]
    673c:	stp	xzr, xzr, [x0, #64]
    6740:	stp	xzr, xzr, [x0, #80]
    6744:	stp	xzr, xzr, [x0, #96]
    6748:	ldr	x0, [sp, #80]
    674c:	ldr	x5, [sp, #40]
    6750:	str	x5, [x0]
    6754:	ldr	x0, [sp, #80]
    6758:	str	x6, [x0, #8]
    675c:	ldr	x0, [sp, #80]
    6760:	mov	w5, #0x1                   	// #1
    6764:	str	w5, [x0, #16]
    6768:	ldr	x0, [sp, #80]
    676c:	str	x4, [x0, #40]
    6770:	ldr	x0, [sp, #80]
    6774:	str	x3, [x0, #56]
    6778:	ldr	x0, [sp, #80]
    677c:	str	x2, [x0, #72]
    6780:	ldr	x0, [sp, #80]
    6784:	str	x1, [x0, #96]
    6788:	ldr	x19, [sp, #80]
    678c:	add	x0, sp, #0x78
    6790:	bl	5ed8 <udev_set_log_priority@@LIBUDEV_183+0x14c>
    6794:	add	x0, sp, #0x48
    6798:	bl	5ed8 <udev_set_log_priority@@LIBUDEV_183+0x14c>
    679c:	add	x0, sp, #0x40
    67a0:	bl	5ed8 <udev_set_log_priority@@LIBUDEV_183+0x14c>
    67a4:	add	x0, sp, #0x38
    67a8:	bl	5ed8 <udev_set_log_priority@@LIBUDEV_183+0x14c>
    67ac:	mov	x1, x19
    67b0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    67b4:	ldr	x0, [x0, #4016]
    67b8:	ldr	x2, [sp, #232]
    67bc:	ldr	x0, [x0]
    67c0:	eor	x0, x2, x0
    67c4:	cmp	x0, #0x0
    67c8:	b.eq	67d0 <udev_device_get_property_value@@LIBUDEV_183+0x390>  // b.none
    67cc:	bl	5390 <__stack_chk_fail@plt>
    67d0:	mov	x0, x1
    67d4:	ldr	x19, [sp, #16]
    67d8:	ldp	x29, x30, [sp], #240
    67dc:	ret

00000000000067e0 <udev_device_new_from_syspath@@LIBUDEV_183>:
    67e0:	stp	x29, x30, [sp, #-80]!
    67e4:	mov	x29, sp
    67e8:	str	x19, [sp, #16]
    67ec:	str	x0, [sp, #40]
    67f0:	str	x1, [sp, #32]
    67f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    67f8:	ldr	x0, [x0, #4016]
    67fc:	ldr	x1, [x0]
    6800:	str	x1, [sp, #72]
    6804:	mov	x1, #0x0                   	// #0
    6808:	str	xzr, [sp, #64]
    680c:	add	x0, sp, #0x40
    6810:	ldr	x1, [sp, #32]
    6814:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
    6818:	str	w0, [sp, #60]
    681c:	ldr	w0, [sp, #60]
    6820:	cmp	w0, #0x0
    6824:	b.ge	6848 <udev_device_new_from_syspath@@LIBUDEV_183+0x68>  // b.tcont
    6828:	bl	57d0 <__errno_location@plt>
    682c:	mov	x1, x0
    6830:	ldr	w0, [sp, #60]
    6834:	cmp	w0, #0x0
    6838:	cneg	w0, w0, lt  // lt = tstop
    683c:	str	w0, [x1]
    6840:	mov	x19, #0x0                   	// #0
    6844:	b	685c <udev_device_new_from_syspath@@LIBUDEV_183+0x7c>
    6848:	ldr	x0, [sp, #64]
    684c:	mov	x1, x0
    6850:	ldr	x0, [sp, #40]
    6854:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    6858:	mov	x19, x0
    685c:	add	x0, sp, #0x40
    6860:	bl	5db4 <udev_set_log_priority@@LIBUDEV_183+0x28>
    6864:	mov	x1, x19
    6868:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    686c:	ldr	x0, [x0, #4016]
    6870:	ldr	x2, [sp, #72]
    6874:	ldr	x0, [x0]
    6878:	eor	x0, x2, x0
    687c:	cmp	x0, #0x0
    6880:	b.eq	6888 <udev_device_new_from_syspath@@LIBUDEV_183+0xa8>  // b.none
    6884:	bl	5390 <__stack_chk_fail@plt>
    6888:	mov	x0, x1
    688c:	ldr	x19, [sp, #16]
    6890:	ldp	x29, x30, [sp], #80
    6894:	ret

0000000000006898 <udev_device_new_from_devnum@@LIBUDEV_183>:
    6898:	stp	x29, x30, [sp, #-96]!
    689c:	mov	x29, sp
    68a0:	str	x19, [sp, #16]
    68a4:	str	x0, [sp, #56]
    68a8:	strb	w1, [sp, #55]
    68ac:	str	x2, [sp, #40]
    68b0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    68b4:	ldr	x0, [x0, #4016]
    68b8:	ldr	x1, [x0]
    68bc:	str	x1, [sp, #88]
    68c0:	mov	x1, #0x0                   	// #0
    68c4:	str	xzr, [sp, #80]
    68c8:	add	x0, sp, #0x50
    68cc:	ldr	x2, [sp, #40]
    68d0:	ldrb	w1, [sp, #55]
    68d4:	bl	16334 <udev_util_encode_string@@LIBUDEV_183+0xab04>
    68d8:	str	w0, [sp, #76]
    68dc:	ldr	w0, [sp, #76]
    68e0:	cmp	w0, #0x0
    68e4:	b.ge	6908 <udev_device_new_from_devnum@@LIBUDEV_183+0x70>  // b.tcont
    68e8:	bl	57d0 <__errno_location@plt>
    68ec:	mov	x1, x0
    68f0:	ldr	w0, [sp, #76]
    68f4:	cmp	w0, #0x0
    68f8:	cneg	w0, w0, lt  // lt = tstop
    68fc:	str	w0, [x1]
    6900:	mov	x19, #0x0                   	// #0
    6904:	b	691c <udev_device_new_from_devnum@@LIBUDEV_183+0x84>
    6908:	ldr	x0, [sp, #80]
    690c:	mov	x1, x0
    6910:	ldr	x0, [sp, #56]
    6914:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    6918:	mov	x19, x0
    691c:	add	x0, sp, #0x50
    6920:	bl	5db4 <udev_set_log_priority@@LIBUDEV_183+0x28>
    6924:	mov	x1, x19
    6928:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    692c:	ldr	x0, [x0, #4016]
    6930:	ldr	x2, [sp, #88]
    6934:	ldr	x0, [x0]
    6938:	eor	x0, x2, x0
    693c:	cmp	x0, #0x0
    6940:	b.eq	6948 <udev_device_new_from_devnum@@LIBUDEV_183+0xb0>  // b.none
    6944:	bl	5390 <__stack_chk_fail@plt>
    6948:	mov	x0, x1
    694c:	ldr	x19, [sp, #16]
    6950:	ldp	x29, x30, [sp], #96
    6954:	ret

0000000000006958 <udev_device_new_from_device_id@@LIBUDEV_189>:
    6958:	stp	x29, x30, [sp, #-80]!
    695c:	mov	x29, sp
    6960:	str	x19, [sp, #16]
    6964:	str	x0, [sp, #40]
    6968:	str	x1, [sp, #32]
    696c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6970:	ldr	x0, [x0, #4016]
    6974:	ldr	x1, [x0]
    6978:	str	x1, [sp, #72]
    697c:	mov	x1, #0x0                   	// #0
    6980:	str	xzr, [sp, #64]
    6984:	add	x0, sp, #0x40
    6988:	ldr	x1, [sp, #32]
    698c:	bl	19028 <udev_util_encode_string@@LIBUDEV_183+0xd7f8>
    6990:	str	w0, [sp, #60]
    6994:	ldr	w0, [sp, #60]
    6998:	cmp	w0, #0x0
    699c:	b.ge	69c0 <udev_device_new_from_device_id@@LIBUDEV_189+0x68>  // b.tcont
    69a0:	bl	57d0 <__errno_location@plt>
    69a4:	mov	x1, x0
    69a8:	ldr	w0, [sp, #60]
    69ac:	cmp	w0, #0x0
    69b0:	cneg	w0, w0, lt  // lt = tstop
    69b4:	str	w0, [x1]
    69b8:	mov	x19, #0x0                   	// #0
    69bc:	b	69d4 <udev_device_new_from_device_id@@LIBUDEV_189+0x7c>
    69c0:	ldr	x0, [sp, #64]
    69c4:	mov	x1, x0
    69c8:	ldr	x0, [sp, #40]
    69cc:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    69d0:	mov	x19, x0
    69d4:	add	x0, sp, #0x40
    69d8:	bl	5db4 <udev_set_log_priority@@LIBUDEV_183+0x28>
    69dc:	mov	x1, x19
    69e0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    69e4:	ldr	x0, [x0, #4016]
    69e8:	ldr	x2, [sp, #72]
    69ec:	ldr	x0, [x0]
    69f0:	eor	x0, x2, x0
    69f4:	cmp	x0, #0x0
    69f8:	b.eq	6a00 <udev_device_new_from_device_id@@LIBUDEV_189+0xa8>  // b.none
    69fc:	bl	5390 <__stack_chk_fail@plt>
    6a00:	mov	x0, x1
    6a04:	ldr	x19, [sp, #16]
    6a08:	ldp	x29, x30, [sp], #80
    6a0c:	ret

0000000000006a10 <udev_device_new_from_subsystem_sysname@@LIBUDEV_183>:
    6a10:	stp	x29, x30, [sp, #-96]!
    6a14:	mov	x29, sp
    6a18:	str	x19, [sp, #16]
    6a1c:	str	x0, [sp, #56]
    6a20:	str	x1, [sp, #48]
    6a24:	str	x2, [sp, #40]
    6a28:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6a2c:	ldr	x0, [x0, #4016]
    6a30:	ldr	x1, [x0]
    6a34:	str	x1, [sp, #88]
    6a38:	mov	x1, #0x0                   	// #0
    6a3c:	str	xzr, [sp, #80]
    6a40:	add	x0, sp, #0x50
    6a44:	ldr	x2, [sp, #40]
    6a48:	ldr	x1, [sp, #48]
    6a4c:	bl	166dc <udev_util_encode_string@@LIBUDEV_183+0xaeac>
    6a50:	str	w0, [sp, #76]
    6a54:	ldr	w0, [sp, #76]
    6a58:	cmp	w0, #0x0
    6a5c:	b.ge	6a80 <udev_device_new_from_subsystem_sysname@@LIBUDEV_183+0x70>  // b.tcont
    6a60:	bl	57d0 <__errno_location@plt>
    6a64:	mov	x1, x0
    6a68:	ldr	w0, [sp, #76]
    6a6c:	cmp	w0, #0x0
    6a70:	cneg	w0, w0, lt  // lt = tstop
    6a74:	str	w0, [x1]
    6a78:	mov	x19, #0x0                   	// #0
    6a7c:	b	6a94 <udev_device_new_from_subsystem_sysname@@LIBUDEV_183+0x84>
    6a80:	ldr	x0, [sp, #80]
    6a84:	mov	x1, x0
    6a88:	ldr	x0, [sp, #56]
    6a8c:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    6a90:	mov	x19, x0
    6a94:	add	x0, sp, #0x50
    6a98:	bl	5db4 <udev_set_log_priority@@LIBUDEV_183+0x28>
    6a9c:	mov	x1, x19
    6aa0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6aa4:	ldr	x0, [x0, #4016]
    6aa8:	ldr	x2, [sp, #88]
    6aac:	ldr	x0, [x0]
    6ab0:	eor	x0, x2, x0
    6ab4:	cmp	x0, #0x0
    6ab8:	b.eq	6ac0 <udev_device_new_from_subsystem_sysname@@LIBUDEV_183+0xb0>  // b.none
    6abc:	bl	5390 <__stack_chk_fail@plt>
    6ac0:	mov	x0, x1
    6ac4:	ldr	x19, [sp, #16]
    6ac8:	ldp	x29, x30, [sp], #96
    6acc:	ret

0000000000006ad0 <udev_device_new_from_environment@@LIBUDEV_183>:
    6ad0:	stp	x29, x30, [sp, #-80]!
    6ad4:	mov	x29, sp
    6ad8:	str	x19, [sp, #16]
    6adc:	str	x0, [sp, #40]
    6ae0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6ae4:	ldr	x0, [x0, #4016]
    6ae8:	ldr	x1, [x0]
    6aec:	str	x1, [sp, #72]
    6af0:	mov	x1, #0x0                   	// #0
    6af4:	str	xzr, [sp, #64]
    6af8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6afc:	ldr	x0, [x0, #4048]
    6b00:	ldr	x1, [x0]
    6b04:	add	x0, sp, #0x40
    6b08:	bl	147d0 <udev_util_encode_string@@LIBUDEV_183+0x8fa0>
    6b0c:	str	w0, [sp, #60]
    6b10:	ldr	w0, [sp, #60]
    6b14:	cmp	w0, #0x0
    6b18:	b.ge	6b3c <udev_device_new_from_environment@@LIBUDEV_183+0x6c>  // b.tcont
    6b1c:	bl	57d0 <__errno_location@plt>
    6b20:	mov	x1, x0
    6b24:	ldr	w0, [sp, #60]
    6b28:	cmp	w0, #0x0
    6b2c:	cneg	w0, w0, lt  // lt = tstop
    6b30:	str	w0, [x1]
    6b34:	mov	x19, #0x0                   	// #0
    6b38:	b	6b50 <udev_device_new_from_environment@@LIBUDEV_183+0x80>
    6b3c:	ldr	x0, [sp, #64]
    6b40:	mov	x1, x0
    6b44:	ldr	x0, [sp, #40]
    6b48:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    6b4c:	mov	x19, x0
    6b50:	add	x0, sp, #0x40
    6b54:	bl	5db4 <udev_set_log_priority@@LIBUDEV_183+0x28>
    6b58:	mov	x1, x19
    6b5c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6b60:	ldr	x0, [x0, #4016]
    6b64:	ldr	x2, [sp, #72]
    6b68:	ldr	x0, [x0]
    6b6c:	eor	x0, x2, x0
    6b70:	cmp	x0, #0x0
    6b74:	b.eq	6b7c <udev_device_new_from_environment@@LIBUDEV_183+0xac>  // b.none
    6b78:	bl	5390 <__stack_chk_fail@plt>
    6b7c:	mov	x0, x1
    6b80:	ldr	x19, [sp, #16]
    6b84:	ldp	x29, x30, [sp], #80
    6b88:	ret
    6b8c:	stp	x29, x30, [sp, #-64]!
    6b90:	mov	x29, sp
    6b94:	str	x0, [sp, #24]
    6b98:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6b9c:	ldr	x0, [x0, #4016]
    6ba0:	ldr	x1, [x0]
    6ba4:	str	x1, [sp, #56]
    6ba8:	mov	x1, #0x0                   	// #0
    6bac:	ldr	x0, [sp, #24]
    6bb0:	cmp	x0, #0x0
    6bb4:	cset	w0, ne  // ne = any
    6bb8:	and	w0, w0, #0xff
    6bbc:	and	x0, x0, #0xff
    6bc0:	cmp	x0, #0x0
    6bc4:	b.ne	6bf8 <udev_device_new_from_environment@@LIBUDEV_183+0x128>  // b.any
    6bc8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6bcc:	add	x1, x0, #0x5ab
    6bd0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6bd4:	add	x4, x0, #0x6c0
    6bd8:	mov	w3, #0x175                 	// #373
    6bdc:	mov	x2, x1
    6be0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6be4:	add	x1, x0, #0x5f8
    6be8:	mov	w0, #0x0                   	// #0
    6bec:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6bf0:	mov	w0, #0x1                   	// #1
    6bf4:	b	6bfc <udev_device_new_from_environment@@LIBUDEV_183+0x12c>
    6bf8:	mov	w0, #0x0                   	// #0
    6bfc:	cmp	w0, #0x0
    6c00:	b.eq	6c1c <udev_device_new_from_environment@@LIBUDEV_183+0x14c>  // b.none
    6c04:	bl	57d0 <__errno_location@plt>
    6c08:	mov	x1, x0
    6c0c:	mov	w0, #0x16                  	// #22
    6c10:	str	w0, [x1]
    6c14:	mov	x0, #0x0                   	// #0
    6c18:	b	6c6c <udev_device_new_from_environment@@LIBUDEV_183+0x19c>
    6c1c:	ldr	x0, [sp, #24]
    6c20:	ldr	x0, [x0, #8]
    6c24:	add	x1, sp, #0x30
    6c28:	bl	19688 <udev_util_encode_string@@LIBUDEV_183+0xde58>
    6c2c:	str	w0, [sp, #44]
    6c30:	ldr	w0, [sp, #44]
    6c34:	cmp	w0, #0x0
    6c38:	b.ge	6c5c <udev_device_new_from_environment@@LIBUDEV_183+0x18c>  // b.tcont
    6c3c:	bl	57d0 <__errno_location@plt>
    6c40:	mov	x1, x0
    6c44:	ldr	w0, [sp, #44]
    6c48:	cmp	w0, #0x0
    6c4c:	cneg	w0, w0, lt  // lt = tstop
    6c50:	str	w0, [x1]
    6c54:	mov	x0, #0x0                   	// #0
    6c58:	b	6c6c <udev_device_new_from_environment@@LIBUDEV_183+0x19c>
    6c5c:	ldr	x0, [sp, #24]
    6c60:	ldr	x0, [x0]
    6c64:	ldr	x1, [sp, #48]
    6c68:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    6c6c:	mov	x1, x0
    6c70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6c74:	ldr	x0, [x0, #4016]
    6c78:	ldr	x2, [sp, #56]
    6c7c:	ldr	x0, [x0]
    6c80:	eor	x0, x2, x0
    6c84:	cmp	x0, #0x0
    6c88:	b.eq	6c90 <udev_device_new_from_environment@@LIBUDEV_183+0x1c0>  // b.none
    6c8c:	bl	5390 <__stack_chk_fail@plt>
    6c90:	mov	x0, x1
    6c94:	ldp	x29, x30, [sp], #64
    6c98:	ret

0000000000006c9c <udev_device_get_parent@@LIBUDEV_183>:
    6c9c:	stp	x29, x30, [sp, #-32]!
    6ca0:	mov	x29, sp
    6ca4:	str	x0, [sp, #24]
    6ca8:	ldr	x0, [sp, #24]
    6cac:	cmp	x0, #0x0
    6cb0:	cset	w0, ne  // ne = any
    6cb4:	and	w0, w0, #0xff
    6cb8:	and	x0, x0, #0xff
    6cbc:	cmp	x0, #0x0
    6cc0:	b.ne	6cf4 <udev_device_get_parent@@LIBUDEV_183+0x58>  // b.any
    6cc4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6cc8:	add	x1, x0, #0x5ab
    6ccc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6cd0:	add	x4, x0, #0x6d8
    6cd4:	mov	w3, #0x191                 	// #401
    6cd8:	mov	x2, x1
    6cdc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6ce0:	add	x1, x0, #0x5c8
    6ce4:	mov	w0, #0x0                   	// #0
    6ce8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6cec:	mov	w0, #0x1                   	// #1
    6cf0:	b	6cf8 <udev_device_get_parent@@LIBUDEV_183+0x5c>
    6cf4:	mov	w0, #0x0                   	// #0
    6cf8:	cmp	w0, #0x0
    6cfc:	b.eq	6d18 <udev_device_get_parent@@LIBUDEV_183+0x7c>  // b.none
    6d00:	bl	57d0 <__errno_location@plt>
    6d04:	mov	x1, x0
    6d08:	mov	w0, #0x16                  	// #22
    6d0c:	str	w0, [x1]
    6d10:	mov	x0, #0x0                   	// #0
    6d14:	b	6d58 <udev_device_get_parent@@LIBUDEV_183+0xbc>
    6d18:	ldr	x0, [sp, #24]
    6d1c:	ldrb	w0, [x0, #32]
    6d20:	eor	w0, w0, #0x1
    6d24:	and	w0, w0, #0xff
    6d28:	cmp	w0, #0x0
    6d2c:	b.eq	6d50 <udev_device_get_parent@@LIBUDEV_183+0xb4>  // b.none
    6d30:	ldr	x0, [sp, #24]
    6d34:	mov	w1, #0x1                   	// #1
    6d38:	strb	w1, [x0, #32]
    6d3c:	ldr	x0, [sp, #24]
    6d40:	bl	6b8c <udev_device_new_from_environment@@LIBUDEV_183+0xbc>
    6d44:	mov	x1, x0
    6d48:	ldr	x0, [sp, #24]
    6d4c:	str	x1, [x0, #24]
    6d50:	ldr	x0, [sp, #24]
    6d54:	ldr	x0, [x0, #24]
    6d58:	ldp	x29, x30, [sp], #32
    6d5c:	ret

0000000000006d60 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183>:
    6d60:	stp	x29, x30, [sp, #-80]!
    6d64:	mov	x29, sp
    6d68:	str	x0, [sp, #40]
    6d6c:	str	x1, [sp, #32]
    6d70:	str	x2, [sp, #24]
    6d74:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6d78:	ldr	x0, [x0, #4016]
    6d7c:	ldr	x1, [x0]
    6d80:	str	x1, [sp, #72]
    6d84:	mov	x1, #0x0                   	// #0
    6d88:	ldr	x0, [sp, #40]
    6d8c:	cmp	x0, #0x0
    6d90:	cset	w0, ne  // ne = any
    6d94:	and	w0, w0, #0xff
    6d98:	and	x0, x0, #0xff
    6d9c:	cmp	x0, #0x0
    6da0:	b.ne	6dd4 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x74>  // b.any
    6da4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6da8:	add	x1, x0, #0x5ab
    6dac:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6db0:	add	x4, x0, #0x6f0
    6db4:	mov	w3, #0x1b5                 	// #437
    6db8:	mov	x2, x1
    6dbc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6dc0:	add	x1, x0, #0x5c8
    6dc4:	mov	w0, #0x0                   	// #0
    6dc8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6dcc:	mov	w0, #0x1                   	// #1
    6dd0:	b	6dd8 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x78>
    6dd4:	mov	w0, #0x0                   	// #0
    6dd8:	cmp	w0, #0x0
    6ddc:	b.eq	6df8 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x98>  // b.none
    6de0:	bl	57d0 <__errno_location@plt>
    6de4:	mov	x1, x0
    6de8:	mov	w0, #0x16                  	// #22
    6dec:	str	w0, [x1]
    6df0:	mov	x0, #0x0                   	// #0
    6df4:	b	6e8c <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x12c>
    6df8:	ldr	x0, [sp, #40]
    6dfc:	ldr	x0, [x0, #8]
    6e00:	add	x1, sp, #0x40
    6e04:	mov	x3, x1
    6e08:	ldr	x2, [sp, #24]
    6e0c:	ldr	x1, [sp, #32]
    6e10:	bl	1a2e8 <udev_util_encode_string@@LIBUDEV_183+0xeab8>
    6e14:	str	w0, [sp, #60]
    6e18:	ldr	w0, [sp, #60]
    6e1c:	cmp	w0, #0x0
    6e20:	b.ge	6e60 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x100>  // b.tcont
    6e24:	bl	57d0 <__errno_location@plt>
    6e28:	mov	x1, x0
    6e2c:	ldr	w0, [sp, #60]
    6e30:	cmp	w0, #0x0
    6e34:	cneg	w0, w0, lt  // lt = tstop
    6e38:	str	w0, [x1]
    6e3c:	mov	x0, #0x0                   	// #0
    6e40:	b	6e8c <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x12c>
    6e44:	ldr	x0, [sp, #40]
    6e48:	ldr	x1, [x0, #8]
    6e4c:	ldr	x0, [sp, #64]
    6e50:	cmp	x1, x0
    6e54:	b.ne	6e60 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x100>  // b.any
    6e58:	ldr	x0, [sp, #40]
    6e5c:	b	6e8c <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x12c>
    6e60:	ldr	x0, [sp, #40]
    6e64:	bl	5420 <udev_device_get_parent@plt>
    6e68:	str	x0, [sp, #40]
    6e6c:	ldr	x0, [sp, #40]
    6e70:	cmp	x0, #0x0
    6e74:	b.ne	6e44 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0xe4>  // b.any
    6e78:	bl	57d0 <__errno_location@plt>
    6e7c:	mov	x1, x0
    6e80:	mov	w0, #0x2                   	// #2
    6e84:	str	w0, [x1]
    6e88:	mov	x0, #0x0                   	// #0
    6e8c:	mov	x1, x0
    6e90:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    6e94:	ldr	x0, [x0, #4016]
    6e98:	ldr	x2, [sp, #72]
    6e9c:	ldr	x0, [x0]
    6ea0:	eor	x0, x2, x0
    6ea4:	cmp	x0, #0x0
    6ea8:	b.eq	6eb0 <udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183+0x150>  // b.none
    6eac:	bl	5390 <__stack_chk_fail@plt>
    6eb0:	mov	x0, x1
    6eb4:	ldp	x29, x30, [sp], #80
    6eb8:	ret

0000000000006ebc <udev_device_get_udev@@LIBUDEV_183>:
    6ebc:	stp	x29, x30, [sp, #-32]!
    6ec0:	mov	x29, sp
    6ec4:	str	x0, [sp, #24]
    6ec8:	ldr	x0, [sp, #24]
    6ecc:	cmp	x0, #0x0
    6ed0:	cset	w0, ne  // ne = any
    6ed4:	and	w0, w0, #0xff
    6ed8:	and	x0, x0, #0xff
    6edc:	cmp	x0, #0x0
    6ee0:	b.ne	6f14 <udev_device_get_udev@@LIBUDEV_183+0x58>  // b.any
    6ee4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6ee8:	add	x1, x0, #0x5ab
    6eec:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6ef0:	add	x4, x0, #0x720
    6ef4:	mov	w3, #0x1d1                 	// #465
    6ef8:	mov	x2, x1
    6efc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6f00:	add	x1, x0, #0x5c8
    6f04:	mov	w0, #0x0                   	// #0
    6f08:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    6f0c:	mov	w0, #0x1                   	// #1
    6f10:	b	6f18 <udev_device_get_udev@@LIBUDEV_183+0x5c>
    6f14:	mov	w0, #0x0                   	// #0
    6f18:	cmp	w0, #0x0
    6f1c:	b.eq	6f38 <udev_device_get_udev@@LIBUDEV_183+0x7c>  // b.none
    6f20:	bl	57d0 <__errno_location@plt>
    6f24:	mov	x1, x0
    6f28:	mov	w0, #0x16                  	// #22
    6f2c:	str	w0, [x1]
    6f30:	mov	x0, #0x0                   	// #0
    6f34:	b	6f40 <udev_device_get_udev@@LIBUDEV_183+0x84>
    6f38:	ldr	x0, [sp, #24]
    6f3c:	ldr	x0, [x0]
    6f40:	ldp	x29, x30, [sp], #32
    6f44:	ret
    6f48:	stp	x29, x30, [sp, #-32]!
    6f4c:	mov	x29, sp
    6f50:	str	x0, [sp, #24]
    6f54:	ldr	x0, [sp, #24]
    6f58:	cmp	x0, #0x0
    6f5c:	cset	w0, eq  // eq = none
    6f60:	and	w0, w0, #0xff
    6f64:	and	x0, x0, #0xff
    6f68:	cmp	x0, #0x0
    6f6c:	b.eq	6f98 <udev_device_get_udev@@LIBUDEV_183+0xdc>  // b.none
    6f70:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6f74:	add	x1, x0, #0x5ab
    6f78:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6f7c:	add	x4, x0, #0x738
    6f80:	mov	w3, #0x1d7                 	// #471
    6f84:	mov	x2, x1
    6f88:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    6f8c:	add	x1, x0, #0x5c8
    6f90:	mov	w0, #0x0                   	// #0
    6f94:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    6f98:	ldr	x0, [sp, #24]
    6f9c:	ldr	x0, [x0, #8]
    6fa0:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    6fa4:	ldr	x0, [sp, #24]
    6fa8:	ldr	x0, [x0, #24]
    6fac:	bl	5480 <udev_device_unref@plt>
    6fb0:	ldr	x0, [sp, #24]
    6fb4:	ldr	x0, [x0, #40]
    6fb8:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    6fbc:	ldr	x0, [sp, #24]
    6fc0:	ldr	x0, [x0, #96]
    6fc4:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    6fc8:	ldr	x0, [sp, #24]
    6fcc:	ldr	x0, [x0, #56]
    6fd0:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    6fd4:	ldr	x0, [sp, #24]
    6fd8:	ldr	x0, [x0, #72]
    6fdc:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    6fe0:	ldr	x0, [sp, #24]
    6fe4:	bl	5de8 <udev_set_log_priority@@LIBUDEV_183+0x5c>
    6fe8:	ldp	x29, x30, [sp], #32
    6fec:	ret

0000000000006ff0 <udev_device_ref@@LIBUDEV_183>:
    6ff0:	stp	x29, x30, [sp, #-32]!
    6ff4:	mov	x29, sp
    6ff8:	str	x0, [sp, #24]
    6ffc:	ldr	x0, [sp, #24]
    7000:	cmp	x0, #0x0
    7004:	b.ne	7010 <udev_device_ref@@LIBUDEV_183+0x20>  // b.any
    7008:	mov	x0, #0x0                   	// #0
    700c:	b	7070 <udev_device_ref@@LIBUDEV_183+0x80>
    7010:	ldr	x0, [sp, #24]
    7014:	ldr	w0, [x0, #16]
    7018:	cmp	w0, #0x0
    701c:	cset	w0, eq  // eq = none
    7020:	and	w0, w0, #0xff
    7024:	and	x0, x0, #0xff
    7028:	cmp	x0, #0x0
    702c:	b.eq	7058 <udev_device_ref@@LIBUDEV_183+0x68>  // b.none
    7030:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7034:	add	x1, x0, #0x5ab
    7038:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    703c:	add	x4, x0, #0x750
    7040:	mov	w3, #0x1f6                 	// #502
    7044:	mov	x2, x1
    7048:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    704c:	add	x1, x0, #0x600
    7050:	mov	w0, #0x0                   	// #0
    7054:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    7058:	ldr	x0, [sp, #24]
    705c:	ldr	w0, [x0, #16]
    7060:	add	w1, w0, #0x1
    7064:	ldr	x0, [sp, #24]
    7068:	str	w1, [x0, #16]
    706c:	ldr	x0, [sp, #24]
    7070:	ldp	x29, x30, [sp], #32
    7074:	ret

0000000000007078 <udev_device_unref@@LIBUDEV_183>:
    7078:	stp	x29, x30, [sp, #-32]!
    707c:	mov	x29, sp
    7080:	str	x0, [sp, #24]
    7084:	ldr	x0, [sp, #24]
    7088:	cmp	x0, #0x0
    708c:	b.ne	7098 <udev_device_unref@@LIBUDEV_183+0x20>  // b.any
    7090:	mov	x0, #0x0                   	// #0
    7094:	b	7114 <udev_device_unref@@LIBUDEV_183+0x9c>
    7098:	ldr	x0, [sp, #24]
    709c:	ldr	w0, [x0, #16]
    70a0:	cmp	w0, #0x0
    70a4:	cset	w0, eq  // eq = none
    70a8:	and	w0, w0, #0xff
    70ac:	and	x0, x0, #0xff
    70b0:	cmp	x0, #0x0
    70b4:	b.eq	70e0 <udev_device_unref@@LIBUDEV_183+0x68>  // b.none
    70b8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    70bc:	add	x1, x0, #0x5ab
    70c0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    70c4:	add	x4, x0, #0x760
    70c8:	mov	w3, #0x1f6                 	// #502
    70cc:	mov	x2, x1
    70d0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    70d4:	add	x1, x0, #0x600
    70d8:	mov	w0, #0x0                   	// #0
    70dc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    70e0:	ldr	x0, [sp, #24]
    70e4:	ldr	w0, [x0, #16]
    70e8:	sub	w1, w0, #0x1
    70ec:	ldr	x0, [sp, #24]
    70f0:	str	w1, [x0, #16]
    70f4:	ldr	x0, [sp, #24]
    70f8:	ldr	w0, [x0, #16]
    70fc:	cmp	w0, #0x0
    7100:	b.eq	710c <udev_device_unref@@LIBUDEV_183+0x94>  // b.none
    7104:	mov	x0, #0x0                   	// #0
    7108:	b	7114 <udev_device_unref@@LIBUDEV_183+0x9c>
    710c:	ldr	x0, [sp, #24]
    7110:	bl	6f48 <udev_device_get_udev@@LIBUDEV_183+0x8c>
    7114:	ldp	x29, x30, [sp], #32
    7118:	ret

000000000000711c <udev_device_get_devpath@@LIBUDEV_183>:
    711c:	stp	x29, x30, [sp, #-64]!
    7120:	mov	x29, sp
    7124:	str	x0, [sp, #24]
    7128:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    712c:	ldr	x0, [x0, #4016]
    7130:	ldr	x1, [x0]
    7134:	str	x1, [sp, #56]
    7138:	mov	x1, #0x0                   	// #0
    713c:	ldr	x0, [sp, #24]
    7140:	cmp	x0, #0x0
    7144:	cset	w0, ne  // ne = any
    7148:	and	w0, w0, #0xff
    714c:	and	x0, x0, #0xff
    7150:	cmp	x0, #0x0
    7154:	b.ne	7188 <udev_device_get_devpath@@LIBUDEV_183+0x6c>  // b.any
    7158:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    715c:	add	x1, x0, #0x5ab
    7160:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7164:	add	x4, x0, #0x778
    7168:	mov	w3, #0x205                 	// #517
    716c:	mov	x2, x1
    7170:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7174:	add	x1, x0, #0x5c8
    7178:	mov	w0, #0x0                   	// #0
    717c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7180:	mov	w0, #0x1                   	// #1
    7184:	b	718c <udev_device_get_devpath@@LIBUDEV_183+0x70>
    7188:	mov	w0, #0x0                   	// #0
    718c:	cmp	w0, #0x0
    7190:	b.eq	71ac <udev_device_get_devpath@@LIBUDEV_183+0x90>  // b.none
    7194:	bl	57d0 <__errno_location@plt>
    7198:	mov	x1, x0
    719c:	mov	w0, #0x16                  	// #22
    71a0:	str	w0, [x1]
    71a4:	mov	x0, #0x0                   	// #0
    71a8:	b	71f0 <udev_device_get_devpath@@LIBUDEV_183+0xd4>
    71ac:	ldr	x0, [sp, #24]
    71b0:	ldr	x0, [x0, #8]
    71b4:	add	x1, sp, #0x30
    71b8:	bl	1ac70 <udev_util_encode_string@@LIBUDEV_183+0xf440>
    71bc:	str	w0, [sp, #44]
    71c0:	ldr	w0, [sp, #44]
    71c4:	cmp	w0, #0x0
    71c8:	b.ge	71ec <udev_device_get_devpath@@LIBUDEV_183+0xd0>  // b.tcont
    71cc:	bl	57d0 <__errno_location@plt>
    71d0:	mov	x1, x0
    71d4:	ldr	w0, [sp, #44]
    71d8:	cmp	w0, #0x0
    71dc:	cneg	w0, w0, lt  // lt = tstop
    71e0:	str	w0, [x1]
    71e4:	mov	x0, #0x0                   	// #0
    71e8:	b	71f0 <udev_device_get_devpath@@LIBUDEV_183+0xd4>
    71ec:	ldr	x0, [sp, #48]
    71f0:	mov	x1, x0
    71f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    71f8:	ldr	x0, [x0, #4016]
    71fc:	ldr	x2, [sp, #56]
    7200:	ldr	x0, [x0]
    7204:	eor	x0, x2, x0
    7208:	cmp	x0, #0x0
    720c:	b.eq	7214 <udev_device_get_devpath@@LIBUDEV_183+0xf8>  // b.none
    7210:	bl	5390 <__stack_chk_fail@plt>
    7214:	mov	x0, x1
    7218:	ldp	x29, x30, [sp], #64
    721c:	ret

0000000000007220 <udev_device_get_syspath@@LIBUDEV_183>:
    7220:	stp	x29, x30, [sp, #-64]!
    7224:	mov	x29, sp
    7228:	str	x0, [sp, #24]
    722c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7230:	ldr	x0, [x0, #4016]
    7234:	ldr	x1, [x0]
    7238:	str	x1, [sp, #56]
    723c:	mov	x1, #0x0                   	// #0
    7240:	ldr	x0, [sp, #24]
    7244:	cmp	x0, #0x0
    7248:	cset	w0, ne  // ne = any
    724c:	and	w0, w0, #0xff
    7250:	and	x0, x0, #0xff
    7254:	cmp	x0, #0x0
    7258:	b.ne	728c <udev_device_get_syspath@@LIBUDEV_183+0x6c>  // b.any
    725c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7260:	add	x1, x0, #0x5ab
    7264:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7268:	add	x4, x0, #0x790
    726c:	mov	w3, #0x21b                 	// #539
    7270:	mov	x2, x1
    7274:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7278:	add	x1, x0, #0x5c8
    727c:	mov	w0, #0x0                   	// #0
    7280:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7284:	mov	w0, #0x1                   	// #1
    7288:	b	7290 <udev_device_get_syspath@@LIBUDEV_183+0x70>
    728c:	mov	w0, #0x0                   	// #0
    7290:	cmp	w0, #0x0
    7294:	b.eq	72b0 <udev_device_get_syspath@@LIBUDEV_183+0x90>  // b.none
    7298:	bl	57d0 <__errno_location@plt>
    729c:	mov	x1, x0
    72a0:	mov	w0, #0x16                  	// #22
    72a4:	str	w0, [x1]
    72a8:	mov	x0, #0x0                   	// #0
    72ac:	b	72f4 <udev_device_get_syspath@@LIBUDEV_183+0xd4>
    72b0:	ldr	x0, [sp, #24]
    72b4:	ldr	x0, [x0, #8]
    72b8:	add	x1, sp, #0x30
    72bc:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
    72c0:	str	w0, [sp, #44]
    72c4:	ldr	w0, [sp, #44]
    72c8:	cmp	w0, #0x0
    72cc:	b.ge	72f0 <udev_device_get_syspath@@LIBUDEV_183+0xd0>  // b.tcont
    72d0:	bl	57d0 <__errno_location@plt>
    72d4:	mov	x1, x0
    72d8:	ldr	w0, [sp, #44]
    72dc:	cmp	w0, #0x0
    72e0:	cneg	w0, w0, lt  // lt = tstop
    72e4:	str	w0, [x1]
    72e8:	mov	x0, #0x0                   	// #0
    72ec:	b	72f4 <udev_device_get_syspath@@LIBUDEV_183+0xd4>
    72f0:	ldr	x0, [sp, #48]
    72f4:	mov	x1, x0
    72f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    72fc:	ldr	x0, [x0, #4016]
    7300:	ldr	x2, [sp, #56]
    7304:	ldr	x0, [x0]
    7308:	eor	x0, x2, x0
    730c:	cmp	x0, #0x0
    7310:	b.eq	7318 <udev_device_get_syspath@@LIBUDEV_183+0xf8>  // b.none
    7314:	bl	5390 <__stack_chk_fail@plt>
    7318:	mov	x0, x1
    731c:	ldp	x29, x30, [sp], #64
    7320:	ret

0000000000007324 <udev_device_get_sysname@@LIBUDEV_183>:
    7324:	stp	x29, x30, [sp, #-64]!
    7328:	mov	x29, sp
    732c:	str	x0, [sp, #24]
    7330:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7334:	ldr	x0, [x0, #4016]
    7338:	ldr	x1, [x0]
    733c:	str	x1, [sp, #56]
    7340:	mov	x1, #0x0                   	// #0
    7344:	ldr	x0, [sp, #24]
    7348:	cmp	x0, #0x0
    734c:	cset	w0, ne  // ne = any
    7350:	and	w0, w0, #0xff
    7354:	and	x0, x0, #0xff
    7358:	cmp	x0, #0x0
    735c:	b.ne	7390 <udev_device_get_sysname@@LIBUDEV_183+0x6c>  // b.any
    7360:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7364:	add	x1, x0, #0x5ab
    7368:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    736c:	add	x4, x0, #0x7a8
    7370:	mov	w3, #0x230                 	// #560
    7374:	mov	x2, x1
    7378:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    737c:	add	x1, x0, #0x5c8
    7380:	mov	w0, #0x0                   	// #0
    7384:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7388:	mov	w0, #0x1                   	// #1
    738c:	b	7394 <udev_device_get_sysname@@LIBUDEV_183+0x70>
    7390:	mov	w0, #0x0                   	// #0
    7394:	cmp	w0, #0x0
    7398:	b.eq	73b4 <udev_device_get_sysname@@LIBUDEV_183+0x90>  // b.none
    739c:	bl	57d0 <__errno_location@plt>
    73a0:	mov	x1, x0
    73a4:	mov	w0, #0x16                  	// #22
    73a8:	str	w0, [x1]
    73ac:	mov	x0, #0x0                   	// #0
    73b0:	b	73f8 <udev_device_get_sysname@@LIBUDEV_183+0xd4>
    73b4:	ldr	x0, [sp, #24]
    73b8:	ldr	x0, [x0, #8]
    73bc:	add	x1, sp, #0x30
    73c0:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
    73c4:	str	w0, [sp, #44]
    73c8:	ldr	w0, [sp, #44]
    73cc:	cmp	w0, #0x0
    73d0:	b.ge	73f4 <udev_device_get_sysname@@LIBUDEV_183+0xd0>  // b.tcont
    73d4:	bl	57d0 <__errno_location@plt>
    73d8:	mov	x1, x0
    73dc:	ldr	w0, [sp, #44]
    73e0:	cmp	w0, #0x0
    73e4:	cneg	w0, w0, lt  // lt = tstop
    73e8:	str	w0, [x1]
    73ec:	mov	x0, #0x0                   	// #0
    73f0:	b	73f8 <udev_device_get_sysname@@LIBUDEV_183+0xd4>
    73f4:	ldr	x0, [sp, #48]
    73f8:	mov	x1, x0
    73fc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7400:	ldr	x0, [x0, #4016]
    7404:	ldr	x2, [sp, #56]
    7408:	ldr	x0, [x0]
    740c:	eor	x0, x2, x0
    7410:	cmp	x0, #0x0
    7414:	b.eq	741c <udev_device_get_sysname@@LIBUDEV_183+0xf8>  // b.none
    7418:	bl	5390 <__stack_chk_fail@plt>
    741c:	mov	x0, x1
    7420:	ldp	x29, x30, [sp], #64
    7424:	ret

0000000000007428 <udev_device_get_sysnum@@LIBUDEV_183>:
    7428:	stp	x29, x30, [sp, #-64]!
    742c:	mov	x29, sp
    7430:	str	x0, [sp, #24]
    7434:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7438:	ldr	x0, [x0, #4016]
    743c:	ldr	x1, [x0]
    7440:	str	x1, [sp, #56]
    7444:	mov	x1, #0x0                   	// #0
    7448:	ldr	x0, [sp, #24]
    744c:	cmp	x0, #0x0
    7450:	cset	w0, ne  // ne = any
    7454:	and	w0, w0, #0xff
    7458:	and	x0, x0, #0xff
    745c:	cmp	x0, #0x0
    7460:	b.ne	7494 <udev_device_get_sysnum@@LIBUDEV_183+0x6c>  // b.any
    7464:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7468:	add	x1, x0, #0x5ab
    746c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7470:	add	x4, x0, #0x7c0
    7474:	mov	w3, #0x245                 	// #581
    7478:	mov	x2, x1
    747c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7480:	add	x1, x0, #0x5c8
    7484:	mov	w0, #0x0                   	// #0
    7488:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    748c:	mov	w0, #0x1                   	// #1
    7490:	b	7498 <udev_device_get_sysnum@@LIBUDEV_183+0x70>
    7494:	mov	w0, #0x0                   	// #0
    7498:	cmp	w0, #0x0
    749c:	b.eq	74b8 <udev_device_get_sysnum@@LIBUDEV_183+0x90>  // b.none
    74a0:	bl	57d0 <__errno_location@plt>
    74a4:	mov	x1, x0
    74a8:	mov	w0, #0x16                  	// #22
    74ac:	str	w0, [x1]
    74b0:	mov	x0, #0x0                   	// #0
    74b4:	b	7510 <udev_device_get_sysnum@@LIBUDEV_183+0xe8>
    74b8:	ldr	x0, [sp, #24]
    74bc:	ldr	x0, [x0, #8]
    74c0:	add	x1, sp, #0x30
    74c4:	bl	1b300 <udev_util_encode_string@@LIBUDEV_183+0xfad0>
    74c8:	str	w0, [sp, #44]
    74cc:	ldr	w0, [sp, #44]
    74d0:	cmn	w0, #0x2
    74d4:	b.ne	74e0 <udev_device_get_sysnum@@LIBUDEV_183+0xb8>  // b.any
    74d8:	mov	x0, #0x0                   	// #0
    74dc:	b	7510 <udev_device_get_sysnum@@LIBUDEV_183+0xe8>
    74e0:	ldr	w0, [sp, #44]
    74e4:	cmp	w0, #0x0
    74e8:	b.ge	750c <udev_device_get_sysnum@@LIBUDEV_183+0xe4>  // b.tcont
    74ec:	bl	57d0 <__errno_location@plt>
    74f0:	mov	x1, x0
    74f4:	ldr	w0, [sp, #44]
    74f8:	cmp	w0, #0x0
    74fc:	cneg	w0, w0, lt  // lt = tstop
    7500:	str	w0, [x1]
    7504:	mov	x0, #0x0                   	// #0
    7508:	b	7510 <udev_device_get_sysnum@@LIBUDEV_183+0xe8>
    750c:	ldr	x0, [sp, #48]
    7510:	mov	x1, x0
    7514:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7518:	ldr	x0, [x0, #4016]
    751c:	ldr	x2, [sp, #56]
    7520:	ldr	x0, [x0]
    7524:	eor	x0, x2, x0
    7528:	cmp	x0, #0x0
    752c:	b.eq	7534 <udev_device_get_sysnum@@LIBUDEV_183+0x10c>  // b.none
    7530:	bl	5390 <__stack_chk_fail@plt>
    7534:	mov	x0, x1
    7538:	ldp	x29, x30, [sp], #64
    753c:	ret

0000000000007540 <udev_device_get_devnode@@LIBUDEV_183>:
    7540:	stp	x29, x30, [sp, #-64]!
    7544:	mov	x29, sp
    7548:	str	x0, [sp, #24]
    754c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7550:	ldr	x0, [x0, #4016]
    7554:	ldr	x1, [x0]
    7558:	str	x1, [sp, #56]
    755c:	mov	x1, #0x0                   	// #0
    7560:	ldr	x0, [sp, #24]
    7564:	cmp	x0, #0x0
    7568:	cset	w0, ne  // ne = any
    756c:	and	w0, w0, #0xff
    7570:	and	x0, x0, #0xff
    7574:	cmp	x0, #0x0
    7578:	b.ne	75ac <udev_device_get_devnode@@LIBUDEV_183+0x6c>  // b.any
    757c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7580:	add	x1, x0, #0x5ab
    7584:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7588:	add	x4, x0, #0x7d8
    758c:	mov	w3, #0x25d                 	// #605
    7590:	mov	x2, x1
    7594:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7598:	add	x1, x0, #0x5c8
    759c:	mov	w0, #0x0                   	// #0
    75a0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    75a4:	mov	w0, #0x1                   	// #1
    75a8:	b	75b0 <udev_device_get_devnode@@LIBUDEV_183+0x70>
    75ac:	mov	w0, #0x0                   	// #0
    75b0:	cmp	w0, #0x0
    75b4:	b.eq	75d0 <udev_device_get_devnode@@LIBUDEV_183+0x90>  // b.none
    75b8:	bl	57d0 <__errno_location@plt>
    75bc:	mov	x1, x0
    75c0:	mov	w0, #0x16                  	// #22
    75c4:	str	w0, [x1]
    75c8:	mov	x0, #0x0                   	// #0
    75cc:	b	7614 <udev_device_get_devnode@@LIBUDEV_183+0xd4>
    75d0:	ldr	x0, [sp, #24]
    75d4:	ldr	x0, [x0, #8]
    75d8:	add	x1, sp, #0x30
    75dc:	bl	1adf0 <udev_util_encode_string@@LIBUDEV_183+0xf5c0>
    75e0:	str	w0, [sp, #44]
    75e4:	ldr	w0, [sp, #44]
    75e8:	cmp	w0, #0x0
    75ec:	b.ge	7610 <udev_device_get_devnode@@LIBUDEV_183+0xd0>  // b.tcont
    75f0:	bl	57d0 <__errno_location@plt>
    75f4:	mov	x1, x0
    75f8:	ldr	w0, [sp, #44]
    75fc:	cmp	w0, #0x0
    7600:	cneg	w0, w0, lt  // lt = tstop
    7604:	str	w0, [x1]
    7608:	mov	x0, #0x0                   	// #0
    760c:	b	7614 <udev_device_get_devnode@@LIBUDEV_183+0xd4>
    7610:	ldr	x0, [sp, #48]
    7614:	mov	x1, x0
    7618:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    761c:	ldr	x0, [x0, #4016]
    7620:	ldr	x2, [sp, #56]
    7624:	ldr	x0, [x0]
    7628:	eor	x0, x2, x0
    762c:	cmp	x0, #0x0
    7630:	b.eq	7638 <udev_device_get_devnode@@LIBUDEV_183+0xf8>  // b.none
    7634:	bl	5390 <__stack_chk_fail@plt>
    7638:	mov	x0, x1
    763c:	ldp	x29, x30, [sp], #64
    7640:	ret

0000000000007644 <udev_device_get_devlinks_list_entry@@LIBUDEV_183>:
    7644:	stp	x29, x30, [sp, #-48]!
    7648:	mov	x29, sp
    764c:	str	x0, [sp, #24]
    7650:	ldr	x0, [sp, #24]
    7654:	cmp	x0, #0x0
    7658:	cset	w0, ne  // ne = any
    765c:	and	w0, w0, #0xff
    7660:	and	x0, x0, #0xff
    7664:	cmp	x0, #0x0
    7668:	b.ne	769c <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x58>  // b.any
    766c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7670:	add	x1, x0, #0x5ab
    7674:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7678:	add	x4, x0, #0x7f0
    767c:	mov	w3, #0x274                 	// #628
    7680:	mov	x2, x1
    7684:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7688:	add	x1, x0, #0x5c8
    768c:	mov	w0, #0x0                   	// #0
    7690:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7694:	mov	w0, #0x1                   	// #1
    7698:	b	76a0 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x5c>
    769c:	mov	w0, #0x0                   	// #0
    76a0:	cmp	w0, #0x0
    76a4:	b.eq	76c0 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x7c>  // b.none
    76a8:	bl	57d0 <__errno_location@plt>
    76ac:	mov	x1, x0
    76b0:	mov	w0, #0x16                  	// #22
    76b4:	str	w0, [x1]
    76b8:	mov	x0, #0x0                   	// #0
    76bc:	b	77a4 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x160>
    76c0:	ldr	x0, [sp, #24]
    76c4:	ldr	x0, [x0, #8]
    76c8:	bl	127ec <udev_util_encode_string@@LIBUDEV_183+0x6fbc>
    76cc:	mov	x1, x0
    76d0:	ldr	x0, [sp, #24]
    76d4:	ldr	x0, [x0, #80]
    76d8:	cmp	x1, x0
    76dc:	b.ne	7700 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0xbc>  // b.any
    76e0:	ldr	x0, [sp, #24]
    76e4:	ldrb	w0, [x0, #88]
    76e8:	ubfx	x0, x0, #2, #1
    76ec:	and	w0, w0, #0xff
    76f0:	eor	w0, w0, #0x1
    76f4:	and	w0, w0, #0xff
    76f8:	cmp	w0, #0x0
    76fc:	b.eq	7798 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x154>  // b.none
    7700:	ldr	x0, [sp, #24]
    7704:	ldr	x0, [x0, #72]
    7708:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    770c:	ldr	x0, [sp, #24]
    7710:	ldr	x0, [x0, #8]
    7714:	bl	1cf8c <udev_util_encode_string@@LIBUDEV_183+0x1175c>
    7718:	str	x0, [sp, #40]
    771c:	b	7764 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x120>
    7720:	ldr	x0, [sp, #24]
    7724:	ldr	x0, [x0, #72]
    7728:	mov	x2, #0x0                   	// #0
    772c:	ldr	x1, [sp, #40]
    7730:	bl	9cdc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6d4>
    7734:	cmp	x0, #0x0
    7738:	b.ne	7754 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x110>  // b.any
    773c:	bl	57d0 <__errno_location@plt>
    7740:	mov	x1, x0
    7744:	mov	w0, #0xc                   	// #12
    7748:	str	w0, [x1]
    774c:	mov	x0, #0x0                   	// #0
    7750:	b	77a4 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0x160>
    7754:	ldr	x0, [sp, #24]
    7758:	ldr	x0, [x0, #8]
    775c:	bl	1d090 <udev_util_encode_string@@LIBUDEV_183+0x11860>
    7760:	str	x0, [sp, #40]
    7764:	ldr	x0, [sp, #40]
    7768:	cmp	x0, #0x0
    776c:	b.ne	7720 <udev_device_get_devlinks_list_entry@@LIBUDEV_183+0xdc>  // b.any
    7770:	ldr	x0, [sp, #24]
    7774:	ldrb	w1, [x0, #88]
    7778:	orr	w1, w1, #0x4
    777c:	strb	w1, [x0, #88]
    7780:	ldr	x0, [sp, #24]
    7784:	ldr	x0, [x0, #8]
    7788:	bl	127ec <udev_util_encode_string@@LIBUDEV_183+0x6fbc>
    778c:	mov	x1, x0
    7790:	ldr	x0, [sp, #24]
    7794:	str	x1, [x0, #80]
    7798:	ldr	x0, [sp, #24]
    779c:	ldr	x0, [x0, #72]
    77a0:	bl	a198 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb90>
    77a4:	ldp	x29, x30, [sp], #48
    77a8:	ret

00000000000077ac <udev_device_get_properties_list_entry@@LIBUDEV_183>:
    77ac:	stp	x29, x30, [sp, #-64]!
    77b0:	mov	x29, sp
    77b4:	str	x0, [sp, #24]
    77b8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    77bc:	ldr	x0, [x0, #4016]
    77c0:	ldr	x1, [x0]
    77c4:	str	x1, [sp, #56]
    77c8:	mov	x1, #0x0                   	// #0
    77cc:	ldr	x0, [sp, #24]
    77d0:	cmp	x0, #0x0
    77d4:	cset	w0, ne  // ne = any
    77d8:	and	w0, w0, #0xff
    77dc:	and	x0, x0, #0xff
    77e0:	cmp	x0, #0x0
    77e4:	b.ne	7818 <udev_device_get_properties_list_entry@@LIBUDEV_183+0x6c>  // b.any
    77e8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    77ec:	add	x1, x0, #0x5ab
    77f0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    77f4:	add	x4, x0, #0x818
    77f8:	mov	w3, #0x294                 	// #660
    77fc:	mov	x2, x1
    7800:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7804:	add	x1, x0, #0x5c8
    7808:	mov	w0, #0x0                   	// #0
    780c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7810:	mov	w0, #0x1                   	// #1
    7814:	b	781c <udev_device_get_properties_list_entry@@LIBUDEV_183+0x70>
    7818:	mov	w0, #0x0                   	// #0
    781c:	cmp	w0, #0x0
    7820:	b.eq	783c <udev_device_get_properties_list_entry@@LIBUDEV_183+0x90>  // b.none
    7824:	bl	57d0 <__errno_location@plt>
    7828:	mov	x1, x0
    782c:	mov	w0, #0x16                  	// #22
    7830:	str	w0, [x1]
    7834:	mov	x0, #0x0                   	// #0
    7838:	b	792c <udev_device_get_properties_list_entry@@LIBUDEV_183+0x180>
    783c:	ldr	x0, [sp, #24]
    7840:	ldr	x0, [x0, #8]
    7844:	bl	1272c <udev_util_encode_string@@LIBUDEV_183+0x6efc>
    7848:	mov	x1, x0
    784c:	ldr	x0, [sp, #24]
    7850:	ldr	x0, [x0, #48]
    7854:	cmp	x1, x0
    7858:	b.ne	787c <udev_device_get_properties_list_entry@@LIBUDEV_183+0xd0>  // b.any
    785c:	ldr	x0, [sp, #24]
    7860:	ldrb	w0, [x0, #88]
    7864:	ubfx	x0, x0, #0, #1
    7868:	and	w0, w0, #0xff
    786c:	eor	w0, w0, #0x1
    7870:	and	w0, w0, #0xff
    7874:	cmp	w0, #0x0
    7878:	b.eq	7920 <udev_device_get_properties_list_entry@@LIBUDEV_183+0x174>  // b.none
    787c:	ldr	x0, [sp, #24]
    7880:	ldr	x0, [x0, #40]
    7884:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    7888:	ldr	x0, [sp, #24]
    788c:	ldr	x0, [x0, #8]
    7890:	add	x1, sp, #0x28
    7894:	bl	1d4f4 <udev_util_encode_string@@LIBUDEV_183+0x11cc4>
    7898:	str	x0, [sp, #48]
    789c:	b	78ec <udev_device_get_properties_list_entry@@LIBUDEV_183+0x140>
    78a0:	ldr	x0, [sp, #24]
    78a4:	ldr	x0, [x0, #40]
    78a8:	ldr	x1, [sp, #40]
    78ac:	mov	x2, x1
    78b0:	ldr	x1, [sp, #48]
    78b4:	bl	9cdc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6d4>
    78b8:	cmp	x0, #0x0
    78bc:	b.ne	78d8 <udev_device_get_properties_list_entry@@LIBUDEV_183+0x12c>  // b.any
    78c0:	bl	57d0 <__errno_location@plt>
    78c4:	mov	x1, x0
    78c8:	mov	w0, #0xc                   	// #12
    78cc:	str	w0, [x1]
    78d0:	mov	x0, #0x0                   	// #0
    78d4:	b	792c <udev_device_get_properties_list_entry@@LIBUDEV_183+0x180>
    78d8:	ldr	x0, [sp, #24]
    78dc:	ldr	x0, [x0, #8]
    78e0:	add	x1, sp, #0x28
    78e4:	bl	1d618 <udev_util_encode_string@@LIBUDEV_183+0x11de8>
    78e8:	str	x0, [sp, #48]
    78ec:	ldr	x0, [sp, #48]
    78f0:	cmp	x0, #0x0
    78f4:	b.ne	78a0 <udev_device_get_properties_list_entry@@LIBUDEV_183+0xf4>  // b.any
    78f8:	ldr	x0, [sp, #24]
    78fc:	ldrb	w1, [x0, #88]
    7900:	orr	w1, w1, #0x1
    7904:	strb	w1, [x0, #88]
    7908:	ldr	x0, [sp, #24]
    790c:	ldr	x0, [x0, #8]
    7910:	bl	1272c <udev_util_encode_string@@LIBUDEV_183+0x6efc>
    7914:	mov	x1, x0
    7918:	ldr	x0, [sp, #24]
    791c:	str	x1, [x0, #48]
    7920:	ldr	x0, [sp, #24]
    7924:	ldr	x0, [x0, #40]
    7928:	bl	a198 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb90>
    792c:	mov	x1, x0
    7930:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7934:	ldr	x0, [x0, #4016]
    7938:	ldr	x2, [sp, #56]
    793c:	ldr	x0, [x0]
    7940:	eor	x0, x2, x0
    7944:	cmp	x0, #0x0
    7948:	b.eq	7950 <udev_device_get_properties_list_entry@@LIBUDEV_183+0x1a4>  // b.none
    794c:	bl	5390 <__stack_chk_fail@plt>
    7950:	mov	x0, x1
    7954:	ldp	x29, x30, [sp], #64
    7958:	ret

000000000000795c <udev_device_get_action@@LIBUDEV_183>:
    795c:	stp	x29, x30, [sp, #-48]!
    7960:	mov	x29, sp
    7964:	str	x0, [sp, #24]
    7968:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    796c:	ldr	x0, [x0, #4016]
    7970:	ldr	x1, [x0]
    7974:	str	x1, [sp, #40]
    7978:	mov	x1, #0x0                   	// #0
    797c:	ldr	x0, [sp, #24]
    7980:	cmp	x0, #0x0
    7984:	cset	w0, ne  // ne = any
    7988:	and	w0, w0, #0xff
    798c:	and	x0, x0, #0xff
    7990:	cmp	x0, #0x0
    7994:	b.ne	79c8 <udev_device_get_action@@LIBUDEV_183+0x6c>  // b.any
    7998:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    799c:	add	x1, x0, #0x5ab
    79a0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    79a4:	add	x4, x0, #0x840
    79a8:	mov	w3, #0x2b4                 	// #692
    79ac:	mov	x2, x1
    79b0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    79b4:	add	x1, x0, #0x5c8
    79b8:	mov	w0, #0x0                   	// #0
    79bc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    79c0:	mov	w0, #0x1                   	// #1
    79c4:	b	79cc <udev_device_get_action@@LIBUDEV_183+0x70>
    79c8:	mov	w0, #0x0                   	// #0
    79cc:	cmp	w0, #0x0
    79d0:	b.eq	79ec <udev_device_get_action@@LIBUDEV_183+0x90>  // b.none
    79d4:	bl	57d0 <__errno_location@plt>
    79d8:	mov	x1, x0
    79dc:	mov	w0, #0x16                  	// #22
    79e0:	str	w0, [x1]
    79e4:	mov	x0, #0x0                   	// #0
    79e8:	b	7a14 <udev_device_get_action@@LIBUDEV_183+0xb8>
    79ec:	ldr	x0, [sp, #24]
    79f0:	ldr	x0, [x0, #8]
    79f4:	add	x1, sp, #0x24
    79f8:	bl	12acc <udev_util_encode_string@@LIBUDEV_183+0x729c>
    79fc:	cmp	w0, #0x0
    7a00:	b.ge	7a0c <udev_device_get_action@@LIBUDEV_183+0xb0>  // b.tcont
    7a04:	mov	x0, #0x0                   	// #0
    7a08:	b	7a14 <udev_device_get_action@@LIBUDEV_183+0xb8>
    7a0c:	ldr	w0, [sp, #36]
    7a10:	bl	14eb0 <udev_util_encode_string@@LIBUDEV_183+0x9680>
    7a14:	mov	x1, x0
    7a18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7a1c:	ldr	x0, [x0, #4016]
    7a20:	ldr	x2, [sp, #40]
    7a24:	ldr	x0, [x0]
    7a28:	eor	x0, x2, x0
    7a2c:	cmp	x0, #0x0
    7a30:	b.eq	7a38 <udev_device_get_action@@LIBUDEV_183+0xdc>  // b.none
    7a34:	bl	5390 <__stack_chk_fail@plt>
    7a38:	mov	x0, x1
    7a3c:	ldp	x29, x30, [sp], #48
    7a40:	ret

0000000000007a44 <udev_device_get_usec_since_initialized@@LIBUDEV_183>:
    7a44:	stp	x29, x30, [sp, #-64]!
    7a48:	mov	x29, sp
    7a4c:	str	x0, [sp, #24]
    7a50:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7a54:	ldr	x0, [x0, #4016]
    7a58:	ldr	x1, [x0]
    7a5c:	str	x1, [sp, #56]
    7a60:	mov	x1, #0x0                   	// #0
    7a64:	ldr	x0, [sp, #24]
    7a68:	cmp	x0, #0x0
    7a6c:	cset	w0, ne  // ne = any
    7a70:	and	w0, w0, #0xff
    7a74:	and	x0, x0, #0xff
    7a78:	cmp	x0, #0x0
    7a7c:	b.ne	7ab0 <udev_device_get_usec_since_initialized@@LIBUDEV_183+0x6c>  // b.any
    7a80:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7a84:	add	x1, x0, #0x5ab
    7a88:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7a8c:	add	x4, x0, #0x858
    7a90:	mov	w3, #0x2cc                 	// #716
    7a94:	mov	x2, x1
    7a98:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7a9c:	add	x1, x0, #0x5c8
    7aa0:	mov	w0, #0x0                   	// #0
    7aa4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7aa8:	mov	w0, #0x1                   	// #1
    7aac:	b	7ab4 <udev_device_get_usec_since_initialized@@LIBUDEV_183+0x70>
    7ab0:	mov	w0, #0x0                   	// #0
    7ab4:	cmp	w0, #0x0
    7ab8:	b.eq	7ac4 <udev_device_get_usec_since_initialized@@LIBUDEV_183+0x80>  // b.none
    7abc:	mov	x0, #0xffffffffffffffea    	// #-22
    7ac0:	b	7b08 <udev_device_get_usec_since_initialized@@LIBUDEV_183+0xc4>
    7ac4:	ldr	x0, [sp, #24]
    7ac8:	ldr	x0, [x0, #8]
    7acc:	add	x1, sp, #0x30
    7ad0:	bl	1cc0c <udev_util_encode_string@@LIBUDEV_183+0x113dc>
    7ad4:	str	w0, [sp, #44]
    7ad8:	ldr	w0, [sp, #44]
    7adc:	cmp	w0, #0x0
    7ae0:	b.ge	7b04 <udev_device_get_usec_since_initialized@@LIBUDEV_183+0xc0>  // b.tcont
    7ae4:	bl	57d0 <__errno_location@plt>
    7ae8:	mov	x1, x0
    7aec:	ldr	w0, [sp, #44]
    7af0:	cmp	w0, #0x0
    7af4:	cneg	w0, w0, lt  // lt = tstop
    7af8:	str	w0, [x1]
    7afc:	mov	x0, #0x0                   	// #0
    7b00:	b	7b08 <udev_device_get_usec_since_initialized@@LIBUDEV_183+0xc4>
    7b04:	ldr	x0, [sp, #48]
    7b08:	mov	x1, x0
    7b0c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7b10:	ldr	x0, [x0, #4016]
    7b14:	ldr	x2, [sp, #56]
    7b18:	ldr	x0, [x0]
    7b1c:	eor	x0, x2, x0
    7b20:	cmp	x0, #0x0
    7b24:	b.eq	7b2c <udev_device_get_usec_since_initialized@@LIBUDEV_183+0xe8>  // b.none
    7b28:	bl	5390 <__stack_chk_fail@plt>
    7b2c:	mov	x0, x1
    7b30:	ldp	x29, x30, [sp], #64
    7b34:	ret

0000000000007b38 <udev_device_get_sysattr_value@@LIBUDEV_183>:
    7b38:	stp	x29, x30, [sp, #-64]!
    7b3c:	mov	x29, sp
    7b40:	str	x0, [sp, #24]
    7b44:	str	x1, [sp, #16]
    7b48:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7b4c:	ldr	x0, [x0, #4016]
    7b50:	ldr	x1, [x0]
    7b54:	str	x1, [sp, #56]
    7b58:	mov	x1, #0x0                   	// #0
    7b5c:	ldr	x0, [sp, #24]
    7b60:	cmp	x0, #0x0
    7b64:	cset	w0, ne  // ne = any
    7b68:	and	w0, w0, #0xff
    7b6c:	and	x0, x0, #0xff
    7b70:	cmp	x0, #0x0
    7b74:	b.ne	7ba8 <udev_device_get_sysattr_value@@LIBUDEV_183+0x70>  // b.any
    7b78:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7b7c:	add	x1, x0, #0x5ab
    7b80:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7b84:	add	x4, x0, #0x880
    7b88:	mov	w3, #0x2e3                 	// #739
    7b8c:	mov	x2, x1
    7b90:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7b94:	add	x1, x0, #0x5c8
    7b98:	mov	w0, #0x0                   	// #0
    7b9c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7ba0:	mov	w0, #0x1                   	// #1
    7ba4:	b	7bac <udev_device_get_sysattr_value@@LIBUDEV_183+0x74>
    7ba8:	mov	w0, #0x0                   	// #0
    7bac:	cmp	w0, #0x0
    7bb0:	b.eq	7bcc <udev_device_get_sysattr_value@@LIBUDEV_183+0x94>  // b.none
    7bb4:	bl	57d0 <__errno_location@plt>
    7bb8:	mov	x1, x0
    7bbc:	mov	w0, #0x16                  	// #22
    7bc0:	str	w0, [x1]
    7bc4:	mov	x0, #0x0                   	// #0
    7bc8:	b	7c18 <udev_device_get_sysattr_value@@LIBUDEV_183+0xe0>
    7bcc:	ldr	x0, [sp, #24]
    7bd0:	ldr	x0, [x0, #8]
    7bd4:	add	x1, sp, #0x30
    7bd8:	mov	x2, x1
    7bdc:	ldr	x1, [sp, #16]
    7be0:	bl	1e150 <udev_util_encode_string@@LIBUDEV_183+0x12920>
    7be4:	str	w0, [sp, #44]
    7be8:	ldr	w0, [sp, #44]
    7bec:	cmp	w0, #0x0
    7bf0:	b.ge	7c14 <udev_device_get_sysattr_value@@LIBUDEV_183+0xdc>  // b.tcont
    7bf4:	bl	57d0 <__errno_location@plt>
    7bf8:	mov	x1, x0
    7bfc:	ldr	w0, [sp, #44]
    7c00:	cmp	w0, #0x0
    7c04:	cneg	w0, w0, lt  // lt = tstop
    7c08:	str	w0, [x1]
    7c0c:	mov	x0, #0x0                   	// #0
    7c10:	b	7c18 <udev_device_get_sysattr_value@@LIBUDEV_183+0xe0>
    7c14:	ldr	x0, [sp, #48]
    7c18:	mov	x1, x0
    7c1c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    7c20:	ldr	x0, [x0, #4016]
    7c24:	ldr	x2, [sp, #56]
    7c28:	ldr	x0, [x0]
    7c2c:	eor	x0, x2, x0
    7c30:	cmp	x0, #0x0
    7c34:	b.eq	7c3c <udev_device_get_sysattr_value@@LIBUDEV_183+0x104>  // b.none
    7c38:	bl	5390 <__stack_chk_fail@plt>
    7c3c:	mov	x0, x1
    7c40:	ldp	x29, x30, [sp], #64
    7c44:	ret

0000000000007c48 <udev_device_set_sysattr_value@@LIBUDEV_199>:
    7c48:	stp	x29, x30, [sp, #-64]!
    7c4c:	mov	x29, sp
    7c50:	str	x0, [sp, #40]
    7c54:	str	x1, [sp, #32]
    7c58:	str	x2, [sp, #24]
    7c5c:	ldr	x0, [sp, #40]
    7c60:	cmp	x0, #0x0
    7c64:	cset	w0, ne  // ne = any
    7c68:	and	w0, w0, #0xff
    7c6c:	and	x0, x0, #0xff
    7c70:	cmp	x0, #0x0
    7c74:	b.ne	7ca8 <udev_device_set_sysattr_value@@LIBUDEV_199+0x60>  // b.any
    7c78:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7c7c:	add	x1, x0, #0x5ab
    7c80:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7c84:	add	x4, x0, #0x8a0
    7c88:	mov	w3, #0x2f9                 	// #761
    7c8c:	mov	x2, x1
    7c90:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7c94:	add	x1, x0, #0x5c8
    7c98:	mov	w0, #0x0                   	// #0
    7c9c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7ca0:	mov	w0, #0x1                   	// #1
    7ca4:	b	7cac <udev_device_set_sysattr_value@@LIBUDEV_199+0x64>
    7ca8:	mov	w0, #0x0                   	// #0
    7cac:	cmp	w0, #0x0
    7cb0:	b.eq	7cbc <udev_device_set_sysattr_value@@LIBUDEV_199+0x74>  // b.none
    7cb4:	mov	w0, #0xffffffea            	// #-22
    7cb8:	b	7cec <udev_device_set_sysattr_value@@LIBUDEV_199+0xa4>
    7cbc:	ldr	x0, [sp, #40]
    7cc0:	ldr	x0, [x0, #8]
    7cc4:	ldr	x2, [sp, #24]
    7cc8:	ldr	x1, [sp, #32]
    7ccc:	bl	1e77c <udev_util_encode_string@@LIBUDEV_183+0x12f4c>
    7cd0:	str	w0, [sp, #60]
    7cd4:	ldr	w0, [sp, #60]
    7cd8:	cmp	w0, #0x0
    7cdc:	b.ge	7ce8 <udev_device_set_sysattr_value@@LIBUDEV_199+0xa0>  // b.tcont
    7ce0:	ldr	w0, [sp, #60]
    7ce4:	b	7cec <udev_device_set_sysattr_value@@LIBUDEV_199+0xa4>
    7ce8:	mov	w0, #0x0                   	// #0
    7cec:	ldp	x29, x30, [sp], #64
    7cf0:	ret

0000000000007cf4 <udev_device_get_sysattr_list_entry@@LIBUDEV_183>:
    7cf4:	stp	x29, x30, [sp, #-48]!
    7cf8:	mov	x29, sp
    7cfc:	str	x0, [sp, #24]
    7d00:	ldr	x0, [sp, #24]
    7d04:	cmp	x0, #0x0
    7d08:	cset	w0, ne  // ne = any
    7d0c:	and	w0, w0, #0xff
    7d10:	and	x0, x0, #0xff
    7d14:	cmp	x0, #0x0
    7d18:	b.ne	7d4c <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0x58>  // b.any
    7d1c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7d20:	add	x1, x0, #0x5ab
    7d24:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7d28:	add	x4, x0, #0x8c0
    7d2c:	mov	w3, #0x30d                 	// #781
    7d30:	mov	x2, x1
    7d34:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7d38:	add	x1, x0, #0x5c8
    7d3c:	mov	w0, #0x0                   	// #0
    7d40:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7d44:	mov	w0, #0x1                   	// #1
    7d48:	b	7d50 <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0x5c>
    7d4c:	mov	w0, #0x0                   	// #0
    7d50:	cmp	w0, #0x0
    7d54:	b.eq	7d70 <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0x7c>  // b.none
    7d58:	bl	57d0 <__errno_location@plt>
    7d5c:	mov	x1, x0
    7d60:	mov	w0, #0x16                  	// #22
    7d64:	str	w0, [x1]
    7d68:	mov	x0, #0x0                   	// #0
    7d6c:	b	7e10 <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0x11c>
    7d70:	ldr	x0, [sp, #24]
    7d74:	ldrb	w0, [x0, #104]
    7d78:	eor	w0, w0, #0x1
    7d7c:	and	w0, w0, #0xff
    7d80:	cmp	w0, #0x0
    7d84:	b.eq	7e04 <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0x110>  // b.none
    7d88:	ldr	x0, [sp, #24]
    7d8c:	ldr	x0, [x0, #96]
    7d90:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    7d94:	ldr	x0, [sp, #24]
    7d98:	ldr	x0, [x0, #8]
    7d9c:	bl	1d9f8 <udev_util_encode_string@@LIBUDEV_183+0x121c8>
    7da0:	str	x0, [sp, #40]
    7da4:	b	7dec <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0xf8>
    7da8:	ldr	x0, [sp, #24]
    7dac:	ldr	x0, [x0, #96]
    7db0:	mov	x2, #0x0                   	// #0
    7db4:	ldr	x1, [sp, #40]
    7db8:	bl	9cdc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6d4>
    7dbc:	cmp	x0, #0x0
    7dc0:	b.ne	7ddc <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0xe8>  // b.any
    7dc4:	bl	57d0 <__errno_location@plt>
    7dc8:	mov	x1, x0
    7dcc:	mov	w0, #0xc                   	// #12
    7dd0:	str	w0, [x1]
    7dd4:	mov	x0, #0x0                   	// #0
    7dd8:	b	7e10 <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0x11c>
    7ddc:	ldr	x0, [sp, #24]
    7de0:	ldr	x0, [x0, #8]
    7de4:	bl	1db38 <udev_util_encode_string@@LIBUDEV_183+0x12308>
    7de8:	str	x0, [sp, #40]
    7dec:	ldr	x0, [sp, #40]
    7df0:	cmp	x0, #0x0
    7df4:	b.ne	7da8 <udev_device_get_sysattr_list_entry@@LIBUDEV_183+0xb4>  // b.any
    7df8:	ldr	x0, [sp, #24]
    7dfc:	mov	w1, #0x1                   	// #1
    7e00:	strb	w1, [x0, #104]
    7e04:	ldr	x0, [sp, #24]
    7e08:	ldr	x0, [x0, #96]
    7e0c:	bl	a198 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb90>
    7e10:	ldp	x29, x30, [sp], #48
    7e14:	ret

0000000000007e18 <udev_device_get_is_initialized@@LIBUDEV_183>:
    7e18:	stp	x29, x30, [sp, #-48]!
    7e1c:	mov	x29, sp
    7e20:	str	x0, [sp, #24]
    7e24:	ldr	x0, [sp, #24]
    7e28:	cmp	x0, #0x0
    7e2c:	cset	w0, ne  // ne = any
    7e30:	and	w0, w0, #0xff
    7e34:	and	x0, x0, #0xff
    7e38:	cmp	x0, #0x0
    7e3c:	b.ne	7e70 <udev_device_get_is_initialized@@LIBUDEV_183+0x58>  // b.any
    7e40:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7e44:	add	x1, x0, #0x5ab
    7e48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7e4c:	add	x4, x0, #0x8e8
    7e50:	mov	w3, #0x32e                 	// #814
    7e54:	mov	x2, x1
    7e58:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7e5c:	add	x1, x0, #0x5c8
    7e60:	mov	w0, #0x0                   	// #0
    7e64:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7e68:	mov	w0, #0x1                   	// #1
    7e6c:	b	7e74 <udev_device_get_is_initialized@@LIBUDEV_183+0x5c>
    7e70:	mov	w0, #0x0                   	// #0
    7e74:	cmp	w0, #0x0
    7e78:	b.eq	7e84 <udev_device_get_is_initialized@@LIBUDEV_183+0x6c>  // b.none
    7e7c:	mov	w0, #0xffffffea            	// #-22
    7e80:	b	7ec4 <udev_device_get_is_initialized@@LIBUDEV_183+0xac>
    7e84:	ldr	x0, [sp, #24]
    7e88:	ldr	x0, [x0, #8]
    7e8c:	bl	1cb68 <udev_util_encode_string@@LIBUDEV_183+0x11338>
    7e90:	str	w0, [sp, #44]
    7e94:	ldr	w0, [sp, #44]
    7e98:	cmp	w0, #0x0
    7e9c:	b.ge	7ec0 <udev_device_get_is_initialized@@LIBUDEV_183+0xa8>  // b.tcont
    7ea0:	bl	57d0 <__errno_location@plt>
    7ea4:	mov	x1, x0
    7ea8:	ldr	w0, [sp, #44]
    7eac:	cmp	w0, #0x0
    7eb0:	cneg	w0, w0, lt  // lt = tstop
    7eb4:	str	w0, [x1]
    7eb8:	mov	w0, #0x0                   	// #0
    7ebc:	b	7ec4 <udev_device_get_is_initialized@@LIBUDEV_183+0xac>
    7ec0:	ldr	w0, [sp, #44]
    7ec4:	ldp	x29, x30, [sp], #48
    7ec8:	ret

0000000000007ecc <udev_device_get_tags_list_entry@@LIBUDEV_183>:
    7ecc:	stp	x29, x30, [sp, #-48]!
    7ed0:	mov	x29, sp
    7ed4:	str	x0, [sp, #24]
    7ed8:	ldr	x0, [sp, #24]
    7edc:	cmp	x0, #0x0
    7ee0:	cset	w0, ne  // ne = any
    7ee4:	and	w0, w0, #0xff
    7ee8:	and	x0, x0, #0xff
    7eec:	cmp	x0, #0x0
    7ef0:	b.ne	7f24 <udev_device_get_tags_list_entry@@LIBUDEV_183+0x58>  // b.any
    7ef4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7ef8:	add	x1, x0, #0x5ab
    7efc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7f00:	add	x4, x0, #0x908
    7f04:	mov	w3, #0x343                 	// #835
    7f08:	mov	x2, x1
    7f0c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    7f10:	add	x1, x0, #0x5c8
    7f14:	mov	w0, #0x0                   	// #0
    7f18:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    7f1c:	mov	w0, #0x1                   	// #1
    7f20:	b	7f28 <udev_device_get_tags_list_entry@@LIBUDEV_183+0x5c>
    7f24:	mov	w0, #0x0                   	// #0
    7f28:	cmp	w0, #0x0
    7f2c:	b.eq	7f48 <udev_device_get_tags_list_entry@@LIBUDEV_183+0x7c>  // b.none
    7f30:	bl	57d0 <__errno_location@plt>
    7f34:	mov	x1, x0
    7f38:	mov	w0, #0x16                  	// #22
    7f3c:	str	w0, [x1]
    7f40:	mov	x0, #0x0                   	// #0
    7f44:	b	802c <udev_device_get_tags_list_entry@@LIBUDEV_183+0x160>
    7f48:	ldr	x0, [sp, #24]
    7f4c:	ldr	x0, [x0, #8]
    7f50:	bl	1278c <udev_util_encode_string@@LIBUDEV_183+0x6f5c>
    7f54:	mov	x1, x0
    7f58:	ldr	x0, [sp, #24]
    7f5c:	ldr	x0, [x0, #64]
    7f60:	cmp	x1, x0
    7f64:	b.ne	7f88 <udev_device_get_tags_list_entry@@LIBUDEV_183+0xbc>  // b.any
    7f68:	ldr	x0, [sp, #24]
    7f6c:	ldrb	w0, [x0, #88]
    7f70:	ubfx	x0, x0, #1, #1
    7f74:	and	w0, w0, #0xff
    7f78:	eor	w0, w0, #0x1
    7f7c:	and	w0, w0, #0xff
    7f80:	cmp	w0, #0x0
    7f84:	b.eq	8020 <udev_device_get_tags_list_entry@@LIBUDEV_183+0x154>  // b.none
    7f88:	ldr	x0, [sp, #24]
    7f8c:	ldr	x0, [x0, #56]
    7f90:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    7f94:	ldr	x0, [sp, #24]
    7f98:	ldr	x0, [x0, #8]
    7f9c:	bl	1cd88 <udev_util_encode_string@@LIBUDEV_183+0x11558>
    7fa0:	str	x0, [sp, #40]
    7fa4:	b	7fec <udev_device_get_tags_list_entry@@LIBUDEV_183+0x120>
    7fa8:	ldr	x0, [sp, #24]
    7fac:	ldr	x0, [x0, #56]
    7fb0:	mov	x2, #0x0                   	// #0
    7fb4:	ldr	x1, [sp, #40]
    7fb8:	bl	9cdc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6d4>
    7fbc:	cmp	x0, #0x0
    7fc0:	b.ne	7fdc <udev_device_get_tags_list_entry@@LIBUDEV_183+0x110>  // b.any
    7fc4:	bl	57d0 <__errno_location@plt>
    7fc8:	mov	x1, x0
    7fcc:	mov	w0, #0xc                   	// #12
    7fd0:	str	w0, [x1]
    7fd4:	mov	x0, #0x0                   	// #0
    7fd8:	b	802c <udev_device_get_tags_list_entry@@LIBUDEV_183+0x160>
    7fdc:	ldr	x0, [sp, #24]
    7fe0:	ldr	x0, [x0, #8]
    7fe4:	bl	1ce8c <udev_util_encode_string@@LIBUDEV_183+0x1165c>
    7fe8:	str	x0, [sp, #40]
    7fec:	ldr	x0, [sp, #40]
    7ff0:	cmp	x0, #0x0
    7ff4:	b.ne	7fa8 <udev_device_get_tags_list_entry@@LIBUDEV_183+0xdc>  // b.any
    7ff8:	ldr	x0, [sp, #24]
    7ffc:	ldrb	w1, [x0, #88]
    8000:	orr	w1, w1, #0x2
    8004:	strb	w1, [x0, #88]
    8008:	ldr	x0, [sp, #24]
    800c:	ldr	x0, [x0, #8]
    8010:	bl	1278c <udev_util_encode_string@@LIBUDEV_183+0x6f5c>
    8014:	mov	x1, x0
    8018:	ldr	x0, [sp, #24]
    801c:	str	x1, [x0, #64]
    8020:	ldr	x0, [sp, #24]
    8024:	ldr	x0, [x0, #56]
    8028:	bl	a198 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb90>
    802c:	ldp	x29, x30, [sp], #48
    8030:	ret

0000000000008034 <udev_device_has_tag@@LIBUDEV_183>:
    8034:	stp	x29, x30, [sp, #-32]!
    8038:	mov	x29, sp
    803c:	str	x0, [sp, #24]
    8040:	str	x1, [sp, #16]
    8044:	ldr	x0, [sp, #24]
    8048:	cmp	x0, #0x0
    804c:	cset	w0, ne  // ne = any
    8050:	and	w0, w0, #0xff
    8054:	and	x0, x0, #0xff
    8058:	cmp	x0, #0x0
    805c:	b.ne	8090 <udev_device_has_tag@@LIBUDEV_183+0x5c>  // b.any
    8060:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8064:	add	x1, x0, #0x5ab
    8068:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    806c:	add	x4, x0, #0x928
    8070:	mov	w3, #0x360                 	// #864
    8074:	mov	x2, x1
    8078:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    807c:	add	x1, x0, #0x5c8
    8080:	mov	w0, #0x0                   	// #0
    8084:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8088:	mov	w0, #0x1                   	// #1
    808c:	b	8094 <udev_device_has_tag@@LIBUDEV_183+0x60>
    8090:	mov	w0, #0x0                   	// #0
    8094:	cmp	w0, #0x0
    8098:	b.eq	80a4 <udev_device_has_tag@@LIBUDEV_183+0x70>  // b.none
    809c:	mov	w0, #0x0                   	// #0
    80a0:	b	80c0 <udev_device_has_tag@@LIBUDEV_183+0x8c>
    80a4:	ldr	x0, [sp, #24]
    80a8:	ldr	x0, [x0, #8]
    80ac:	ldr	x1, [sp, #16]
    80b0:	bl	1dc38 <udev_util_encode_string@@LIBUDEV_183+0x12408>
    80b4:	cmp	w0, #0x0
    80b8:	cset	w0, gt
    80bc:	and	w0, w0, #0xff
    80c0:	ldp	x29, x30, [sp], #32
    80c4:	ret
    80c8:	stp	x29, x30, [sp, #-32]!
    80cc:	mov	x29, sp
    80d0:	str	x0, [sp, #24]
    80d4:	ldr	x0, [sp, #24]
    80d8:	cmp	x0, #0x0
    80dc:	cset	w0, eq  // eq = none
    80e0:	and	w0, w0, #0xff
    80e4:	and	x0, x0, #0xff
    80e8:	cmp	x0, #0x0
    80ec:	b.eq	8118 <udev_device_has_tag@@LIBUDEV_183+0xe4>  // b.none
    80f0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    80f4:	add	x1, x0, #0x5ab
    80f8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    80fc:	add	x4, x0, #0x940
    8100:	mov	w3, #0x366                 	// #870
    8104:	mov	x2, x1
    8108:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    810c:	add	x1, x0, #0x5c8
    8110:	mov	w0, #0x0                   	// #0
    8114:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    8118:	ldr	x0, [sp, #24]
    811c:	ldr	x0, [x0, #8]
    8120:	ldp	x29, x30, [sp], #32
    8124:	ret
    8128:	stp	x29, x30, [sp, #-32]!
    812c:	mov	x29, sp
    8130:	str	x0, [sp, #24]
    8134:	ldr	x0, [sp, #24]
    8138:	ldr	x0, [x0]
    813c:	cmp	x0, #0x0
    8140:	b.eq	8150 <udev_device_has_tag@@LIBUDEV_183+0x11c>  // b.none
    8144:	ldr	x0, [sp, #24]
    8148:	ldr	x0, [x0]
    814c:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    8150:	nop
    8154:	ldp	x29, x30, [sp], #32
    8158:	ret
    815c:	stp	x29, x30, [sp, #-32]!
    8160:	mov	x29, sp
    8164:	str	x0, [sp, #24]
    8168:	ldr	x0, [sp, #24]
    816c:	ldr	x0, [x0]
    8170:	cmp	x0, #0x0
    8174:	b.eq	8184 <udev_device_has_tag@@LIBUDEV_183+0x150>  // b.none
    8178:	ldr	x0, [sp, #24]
    817c:	ldr	x0, [x0]
    8180:	bl	be54 <udev_util_encode_string@@LIBUDEV_183+0x624>
    8184:	nop
    8188:	ldp	x29, x30, [sp], #32
    818c:	ret
    8190:	stp	x29, x30, [sp, #-32]!
    8194:	mov	x29, sp
    8198:	str	x0, [sp, #24]
    819c:	ldr	x0, [sp, #24]
    81a0:	bl	54b0 <free@plt>
    81a4:	mov	x0, #0x0                   	// #0
    81a8:	ldp	x29, x30, [sp], #32
    81ac:	ret
    81b0:	sub	sp, sp, #0x10
    81b4:	str	x0, [sp, #8]
    81b8:	str	x1, [sp]
    81bc:	ldr	x0, [sp]
    81c0:	cmp	x0, #0x0
    81c4:	cset	w0, ne  // ne = any
    81c8:	and	w0, w0, #0xff
    81cc:	and	x0, x0, #0xff
    81d0:	cmp	x0, #0x0
    81d4:	b.eq	8218 <udev_device_has_tag@@LIBUDEV_183+0x1e4>  // b.none
    81d8:	mov	x2, #0x0                   	// #0
    81dc:	ldr	x1, [sp, #8]
    81e0:	ldr	x0, [sp]
    81e4:	umulh	x0, x1, x0
    81e8:	cmp	x0, #0x0
    81ec:	b.eq	81f4 <udev_device_has_tag@@LIBUDEV_183+0x1c0>  // b.none
    81f0:	mov	x2, #0x1                   	// #1
    81f4:	mov	x0, x2
    81f8:	cmp	x0, #0x0
    81fc:	cset	w0, ne  // ne = any
    8200:	and	w0, w0, #0xff
    8204:	and	x0, x0, #0xff
    8208:	cmp	x0, #0x0
    820c:	b.eq	8218 <udev_device_has_tag@@LIBUDEV_183+0x1e4>  // b.none
    8210:	mov	w0, #0x1                   	// #1
    8214:	b	821c <udev_device_has_tag@@LIBUDEV_183+0x1e8>
    8218:	mov	w0, #0x0                   	// #0
    821c:	and	w0, w0, #0x1
    8220:	and	w0, w0, #0xff
    8224:	add	sp, sp, #0x10
    8228:	ret
    822c:	stp	x29, x30, [sp, #-32]!
    8230:	mov	x29, sp
    8234:	str	x0, [sp, #24]
    8238:	str	x1, [sp, #16]
    823c:	ldr	x1, [sp, #16]
    8240:	ldr	x0, [sp, #24]
    8244:	bl	81b0 <udev_device_has_tag@@LIBUDEV_183+0x17c>
    8248:	and	w0, w0, #0xff
    824c:	cmp	w0, #0x0
    8250:	b.eq	825c <udev_device_has_tag@@LIBUDEV_183+0x228>  // b.none
    8254:	mov	x0, #0x0                   	// #0
    8258:	b	8278 <udev_device_has_tag@@LIBUDEV_183+0x244>
    825c:	ldr	x1, [sp, #24]
    8260:	ldr	x0, [sp, #16]
    8264:	mul	x0, x1, x0
    8268:	cmp	x0, #0x0
    826c:	b.ne	8274 <udev_device_has_tag@@LIBUDEV_183+0x240>  // b.any
    8270:	mov	x0, #0x1                   	// #1
    8274:	bl	5220 <malloc@plt>
    8278:	ldp	x29, x30, [sp], #32
    827c:	ret
    8280:	stp	x29, x30, [sp, #-32]!
    8284:	mov	x29, sp
    8288:	str	x0, [sp, #24]
    828c:	ldr	x0, [sp, #24]
    8290:	ldr	x0, [x0]
    8294:	cmp	x0, #0x0
    8298:	b.eq	82a8 <udev_device_has_tag@@LIBUDEV_183+0x274>  // b.none
    829c:	ldr	x0, [sp, #24]
    82a0:	ldr	x0, [x0]
    82a4:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    82a8:	nop
    82ac:	ldp	x29, x30, [sp], #32
    82b0:	ret

00000000000082b4 <udev_enumerate_new@@LIBUDEV_183>:
    82b4:	stp	x29, x30, [sp, #-144]!
    82b8:	mov	x29, sp
    82bc:	str	x19, [sp, #16]
    82c0:	str	x0, [sp, #40]
    82c4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    82c8:	ldr	x0, [x0, #4016]
    82cc:	ldr	x1, [x0]
    82d0:	str	x1, [sp, #136]
    82d4:	mov	x1, #0x0                   	// #0
    82d8:	str	xzr, [sp, #64]
    82dc:	str	xzr, [sp, #96]
    82e0:	add	x0, sp, #0x40
    82e4:	bl	bc28 <udev_util_encode_string@@LIBUDEV_183+0x3f8>
    82e8:	str	w0, [sp, #60]
    82ec:	ldr	w0, [sp, #60]
    82f0:	cmp	w0, #0x0
    82f4:	b.ge	8318 <udev_enumerate_new@@LIBUDEV_183+0x64>  // b.tcont
    82f8:	bl	57d0 <__errno_location@plt>
    82fc:	mov	x1, x0
    8300:	ldr	w0, [sp, #60]
    8304:	cmp	w0, #0x0
    8308:	cneg	w0, w0, lt  // lt = tstop
    830c:	str	w0, [x1]
    8310:	mov	x19, #0x0                   	// #0
    8314:	b	8410 <udev_enumerate_new@@LIBUDEV_183+0x15c>
    8318:	ldr	x0, [sp, #64]
    831c:	bl	c8b4 <udev_util_encode_string@@LIBUDEV_183+0x1084>
    8320:	str	w0, [sp, #60]
    8324:	ldr	w0, [sp, #60]
    8328:	cmp	w0, #0x0
    832c:	b.ge	8350 <udev_enumerate_new@@LIBUDEV_183+0x9c>  // b.tcont
    8330:	bl	57d0 <__errno_location@plt>
    8334:	mov	x1, x0
    8338:	ldr	w0, [sp, #60]
    833c:	cmp	w0, #0x0
    8340:	cneg	w0, w0, lt  // lt = tstop
    8344:	str	w0, [x1]
    8348:	mov	x19, #0x0                   	// #0
    834c:	b	8410 <udev_enumerate_new@@LIBUDEV_183+0x15c>
    8350:	mov	w0, #0x0                   	// #0
    8354:	bl	9c80 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x678>
    8358:	str	x0, [sp, #96]
    835c:	ldr	x0, [sp, #96]
    8360:	cmp	x0, #0x0
    8364:	b.ne	8380 <udev_enumerate_new@@LIBUDEV_183+0xcc>  // b.any
    8368:	bl	57d0 <__errno_location@plt>
    836c:	mov	x1, x0
    8370:	mov	w0, #0xc                   	// #12
    8374:	str	w0, [x1]
    8378:	mov	x19, #0x0                   	// #0
    837c:	b	8410 <udev_enumerate_new@@LIBUDEV_183+0x15c>
    8380:	mov	x1, #0x1                   	// #1
    8384:	mov	x0, #0x28                  	// #40
    8388:	bl	822c <udev_device_has_tag@@LIBUDEV_183+0x1f8>
    838c:	str	x0, [sp, #72]
    8390:	ldr	x0, [sp, #72]
    8394:	cmp	x0, #0x0
    8398:	b.ne	83b4 <udev_enumerate_new@@LIBUDEV_183+0x100>  // b.any
    839c:	bl	57d0 <__errno_location@plt>
    83a0:	mov	x1, x0
    83a4:	mov	w0, #0xc                   	// #12
    83a8:	str	w0, [x1]
    83ac:	mov	x19, #0x0                   	// #0
    83b0:	b	8410 <udev_enumerate_new@@LIBUDEV_183+0x15c>
    83b4:	ldr	x0, [sp, #96]
    83b8:	str	x0, [sp, #80]
    83bc:	str	xzr, [sp, #96]
    83c0:	ldr	x2, [sp, #80]
    83c4:	ldr	x0, [sp, #64]
    83c8:	str	x0, [sp, #88]
    83cc:	str	xzr, [sp, #64]
    83d0:	ldr	x1, [sp, #88]
    83d4:	ldr	x0, [sp, #72]
    83d8:	stp	xzr, xzr, [x0]
    83dc:	stp	xzr, xzr, [x0, #16]
    83e0:	str	xzr, [x0, #32]
    83e4:	ldr	x0, [sp, #72]
    83e8:	ldr	x3, [sp, #40]
    83ec:	str	x3, [x0]
    83f0:	ldr	x0, [sp, #72]
    83f4:	mov	w3, #0x1                   	// #1
    83f8:	str	w3, [x0, #8]
    83fc:	ldr	x0, [sp, #72]
    8400:	str	x2, [x0, #16]
    8404:	ldr	x0, [sp, #72]
    8408:	str	x1, [x0, #32]
    840c:	ldr	x19, [sp, #72]
    8410:	add	x0, sp, #0x60
    8414:	bl	8280 <udev_device_has_tag@@LIBUDEV_183+0x24c>
    8418:	add	x0, sp, #0x40
    841c:	bl	815c <udev_device_has_tag@@LIBUDEV_183+0x128>
    8420:	mov	x1, x19
    8424:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    8428:	ldr	x0, [x0, #4016]
    842c:	ldr	x2, [sp, #136]
    8430:	ldr	x0, [x0]
    8434:	eor	x0, x2, x0
    8438:	cmp	x0, #0x0
    843c:	b.eq	8444 <udev_enumerate_new@@LIBUDEV_183+0x190>  // b.none
    8440:	bl	5390 <__stack_chk_fail@plt>
    8444:	mov	x0, x1
    8448:	ldr	x19, [sp, #16]
    844c:	ldp	x29, x30, [sp], #144
    8450:	ret
    8454:	stp	x29, x30, [sp, #-32]!
    8458:	mov	x29, sp
    845c:	str	x0, [sp, #24]
    8460:	ldr	x0, [sp, #24]
    8464:	cmp	x0, #0x0
    8468:	cset	w0, eq  // eq = none
    846c:	and	w0, w0, #0xff
    8470:	and	x0, x0, #0xff
    8474:	cmp	x0, #0x0
    8478:	b.eq	84a4 <udev_enumerate_new@@LIBUDEV_183+0x1f0>  // b.none
    847c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8480:	add	x1, x0, #0x963
    8484:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8488:	add	x4, x0, #0x9a8
    848c:	mov	w3, #0x55                  	// #85
    8490:	mov	x2, x1
    8494:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8498:	add	x1, x0, #0x988
    849c:	mov	w0, #0x0                   	// #0
    84a0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    84a4:	ldr	x0, [sp, #24]
    84a8:	ldr	x0, [x0, #16]
    84ac:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    84b0:	ldr	x0, [sp, #24]
    84b4:	ldr	x0, [x0, #32]
    84b8:	bl	be54 <udev_util_encode_string@@LIBUDEV_183+0x624>
    84bc:	ldr	x0, [sp, #24]
    84c0:	bl	8190 <udev_device_has_tag@@LIBUDEV_183+0x15c>
    84c4:	ldp	x29, x30, [sp], #32
    84c8:	ret

00000000000084cc <udev_enumerate_ref@@LIBUDEV_183>:
    84cc:	stp	x29, x30, [sp, #-32]!
    84d0:	mov	x29, sp
    84d4:	str	x0, [sp, #24]
    84d8:	ldr	x0, [sp, #24]
    84dc:	cmp	x0, #0x0
    84e0:	b.ne	84ec <udev_enumerate_ref@@LIBUDEV_183+0x20>  // b.any
    84e4:	mov	x0, #0x0                   	// #0
    84e8:	b	854c <udev_enumerate_ref@@LIBUDEV_183+0x80>
    84ec:	ldr	x0, [sp, #24]
    84f0:	ldr	w0, [x0, #8]
    84f4:	cmp	w0, #0x0
    84f8:	cset	w0, eq  // eq = none
    84fc:	and	w0, w0, #0xff
    8500:	and	x0, x0, #0xff
    8504:	cmp	x0, #0x0
    8508:	b.eq	8534 <udev_enumerate_ref@@LIBUDEV_183+0x68>  // b.none
    850c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8510:	add	x1, x0, #0x963
    8514:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8518:	add	x4, x0, #0x9c0
    851c:	mov	w3, #0x6e                  	// #110
    8520:	mov	x2, x1
    8524:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8528:	add	x1, x0, #0x998
    852c:	mov	w0, #0x0                   	// #0
    8530:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    8534:	ldr	x0, [sp, #24]
    8538:	ldr	w0, [x0, #8]
    853c:	add	w1, w0, #0x1
    8540:	ldr	x0, [sp, #24]
    8544:	str	w1, [x0, #8]
    8548:	ldr	x0, [sp, #24]
    854c:	ldp	x29, x30, [sp], #32
    8550:	ret

0000000000008554 <udev_enumerate_unref@@LIBUDEV_183>:
    8554:	stp	x29, x30, [sp, #-32]!
    8558:	mov	x29, sp
    855c:	str	x0, [sp, #24]
    8560:	ldr	x0, [sp, #24]
    8564:	cmp	x0, #0x0
    8568:	b.ne	8574 <udev_enumerate_unref@@LIBUDEV_183+0x20>  // b.any
    856c:	mov	x0, #0x0                   	// #0
    8570:	b	85f0 <udev_enumerate_unref@@LIBUDEV_183+0x9c>
    8574:	ldr	x0, [sp, #24]
    8578:	ldr	w0, [x0, #8]
    857c:	cmp	w0, #0x0
    8580:	cset	w0, eq  // eq = none
    8584:	and	w0, w0, #0xff
    8588:	and	x0, x0, #0xff
    858c:	cmp	x0, #0x0
    8590:	b.eq	85bc <udev_enumerate_unref@@LIBUDEV_183+0x68>  // b.none
    8594:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8598:	add	x1, x0, #0x963
    859c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    85a0:	add	x4, x0, #0x9d8
    85a4:	mov	w3, #0x6e                  	// #110
    85a8:	mov	x2, x1
    85ac:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    85b0:	add	x1, x0, #0x998
    85b4:	mov	w0, #0x0                   	// #0
    85b8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    85bc:	ldr	x0, [sp, #24]
    85c0:	ldr	w0, [x0, #8]
    85c4:	sub	w1, w0, #0x1
    85c8:	ldr	x0, [sp, #24]
    85cc:	str	w1, [x0, #8]
    85d0:	ldr	x0, [sp, #24]
    85d4:	ldr	w0, [x0, #8]
    85d8:	cmp	w0, #0x0
    85dc:	b.eq	85e8 <udev_enumerate_unref@@LIBUDEV_183+0x94>  // b.none
    85e0:	mov	x0, #0x0                   	// #0
    85e4:	b	85f0 <udev_enumerate_unref@@LIBUDEV_183+0x9c>
    85e8:	ldr	x0, [sp, #24]
    85ec:	bl	8454 <udev_enumerate_new@@LIBUDEV_183+0x1a0>
    85f0:	ldp	x29, x30, [sp], #32
    85f4:	ret

00000000000085f8 <udev_enumerate_get_udev@@LIBUDEV_183>:
    85f8:	stp	x29, x30, [sp, #-32]!
    85fc:	mov	x29, sp
    8600:	str	x0, [sp, #24]
    8604:	ldr	x0, [sp, #24]
    8608:	cmp	x0, #0x0
    860c:	cset	w0, ne  // ne = any
    8610:	and	w0, w0, #0xff
    8614:	and	x0, x0, #0xff
    8618:	cmp	x0, #0x0
    861c:	b.ne	8650 <udev_enumerate_get_udev@@LIBUDEV_183+0x58>  // b.any
    8620:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8624:	add	x1, x0, #0x963
    8628:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    862c:	add	x4, x0, #0x9f0
    8630:	mov	w3, #0x79                  	// #121
    8634:	mov	x2, x1
    8638:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    863c:	add	x1, x0, #0x988
    8640:	mov	w0, #0x0                   	// #0
    8644:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8648:	mov	w0, #0x1                   	// #1
    864c:	b	8654 <udev_enumerate_get_udev@@LIBUDEV_183+0x5c>
    8650:	mov	w0, #0x0                   	// #0
    8654:	cmp	w0, #0x0
    8658:	b.eq	8674 <udev_enumerate_get_udev@@LIBUDEV_183+0x7c>  // b.none
    865c:	bl	57d0 <__errno_location@plt>
    8660:	mov	x1, x0
    8664:	mov	w0, #0x16                  	// #22
    8668:	str	w0, [x1]
    866c:	mov	x0, #0x0                   	// #0
    8670:	b	867c <udev_enumerate_get_udev@@LIBUDEV_183+0x84>
    8674:	ldr	x0, [sp, #24]
    8678:	ldr	x0, [x0]
    867c:	ldp	x29, x30, [sp], #32
    8680:	ret

0000000000008684 <udev_enumerate_get_list_entry@@LIBUDEV_183>:
    8684:	stp	x29, x30, [sp, #-80]!
    8688:	mov	x29, sp
    868c:	str	x0, [sp, #24]
    8690:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    8694:	ldr	x0, [x0, #4016]
    8698:	ldr	x1, [x0]
    869c:	str	x1, [sp, #72]
    86a0:	mov	x1, #0x0                   	// #0
    86a4:	ldr	x0, [sp, #24]
    86a8:	cmp	x0, #0x0
    86ac:	cset	w0, ne  // ne = any
    86b0:	and	w0, w0, #0xff
    86b4:	and	x0, x0, #0xff
    86b8:	cmp	x0, #0x0
    86bc:	b.ne	86f0 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x6c>  // b.any
    86c0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    86c4:	add	x1, x0, #0x963
    86c8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    86cc:	add	x4, x0, #0xa08
    86d0:	mov	w3, #0x89                  	// #137
    86d4:	mov	x2, x1
    86d8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    86dc:	add	x1, x0, #0x988
    86e0:	mov	w0, #0x0                   	// #0
    86e4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    86e8:	mov	w0, #0x1                   	// #1
    86ec:	b	86f4 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x70>
    86f0:	mov	w0, #0x0                   	// #0
    86f4:	cmp	w0, #0x0
    86f8:	b.eq	8714 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x90>  // b.none
    86fc:	bl	57d0 <__errno_location@plt>
    8700:	mov	x1, x0
    8704:	mov	w0, #0x16                  	// #22
    8708:	str	w0, [x1]
    870c:	mov	x0, #0x0                   	// #0
    8710:	b	882c <udev_enumerate_get_list_entry@@LIBUDEV_183+0x1a8>
    8714:	ldr	x0, [sp, #24]
    8718:	ldrb	w0, [x0, #24]
    871c:	ubfx	x0, x0, #0, #1
    8720:	and	w0, w0, #0xff
    8724:	eor	w0, w0, #0x1
    8728:	and	w0, w0, #0xff
    872c:	cmp	w0, #0x0
    8730:	b.eq	87f4 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x170>  // b.none
    8734:	ldr	x0, [sp, #24]
    8738:	ldr	x0, [x0, #16]
    873c:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    8740:	ldr	x0, [sp, #24]
    8744:	ldr	x0, [x0, #32]
    8748:	bl	fb90 <udev_util_encode_string@@LIBUDEV_183+0x4360>
    874c:	str	x0, [sp, #56]
    8750:	b	87d8 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x154>
    8754:	add	x0, sp, #0x30
    8758:	mov	x1, x0
    875c:	ldr	x0, [sp, #56]
    8760:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
    8764:	str	w0, [sp, #44]
    8768:	ldr	w0, [sp, #44]
    876c:	cmp	w0, #0x0
    8770:	b.ge	8794 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x110>  // b.tcont
    8774:	bl	57d0 <__errno_location@plt>
    8778:	mov	x1, x0
    877c:	ldr	w0, [sp, #44]
    8780:	cmp	w0, #0x0
    8784:	cneg	w0, w0, lt  // lt = tstop
    8788:	str	w0, [x1]
    878c:	mov	x0, #0x0                   	// #0
    8790:	b	882c <udev_enumerate_get_list_entry@@LIBUDEV_183+0x1a8>
    8794:	ldr	x0, [sp, #24]
    8798:	ldr	x0, [x0, #16]
    879c:	ldr	x1, [sp, #48]
    87a0:	mov	x2, #0x0                   	// #0
    87a4:	bl	9cdc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6d4>
    87a8:	cmp	x0, #0x0
    87ac:	b.ne	87c8 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x144>  // b.any
    87b0:	bl	57d0 <__errno_location@plt>
    87b4:	mov	x1, x0
    87b8:	mov	w0, #0xc                   	// #12
    87bc:	str	w0, [x1]
    87c0:	mov	x0, #0x0                   	// #0
    87c4:	b	882c <udev_enumerate_get_list_entry@@LIBUDEV_183+0x1a8>
    87c8:	ldr	x0, [sp, #24]
    87cc:	ldr	x0, [x0, #32]
    87d0:	bl	fc50 <udev_util_encode_string@@LIBUDEV_183+0x4420>
    87d4:	str	x0, [sp, #56]
    87d8:	ldr	x0, [sp, #56]
    87dc:	cmp	x0, #0x0
    87e0:	b.ne	8754 <udev_enumerate_get_list_entry@@LIBUDEV_183+0xd0>  // b.any
    87e4:	ldr	x0, [sp, #24]
    87e8:	ldrb	w1, [x0, #24]
    87ec:	orr	w1, w1, #0x1
    87f0:	strb	w1, [x0, #24]
    87f4:	ldr	x0, [sp, #24]
    87f8:	ldr	x0, [x0, #16]
    87fc:	bl	a198 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb90>
    8800:	str	x0, [sp, #64]
    8804:	ldr	x0, [sp, #64]
    8808:	cmp	x0, #0x0
    880c:	b.ne	8828 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x1a4>  // b.any
    8810:	bl	57d0 <__errno_location@plt>
    8814:	mov	x1, x0
    8818:	mov	w0, #0x3d                  	// #61
    881c:	str	w0, [x1]
    8820:	mov	x0, #0x0                   	// #0
    8824:	b	882c <udev_enumerate_get_list_entry@@LIBUDEV_183+0x1a8>
    8828:	ldr	x0, [sp, #64]
    882c:	mov	x1, x0
    8830:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    8834:	ldr	x0, [x0, #4016]
    8838:	ldr	x2, [sp, #72]
    883c:	ldr	x0, [x0]
    8840:	eor	x0, x2, x0
    8844:	cmp	x0, #0x0
    8848:	b.eq	8850 <udev_enumerate_get_list_entry@@LIBUDEV_183+0x1cc>  // b.none
    884c:	bl	5390 <__stack_chk_fail@plt>
    8850:	mov	x0, x1
    8854:	ldp	x29, x30, [sp], #80
    8858:	ret

000000000000885c <udev_enumerate_add_match_subsystem@@LIBUDEV_183>:
    885c:	stp	x29, x30, [sp, #-48]!
    8860:	mov	x29, sp
    8864:	str	x0, [sp, #24]
    8868:	str	x1, [sp, #16]
    886c:	ldr	x0, [sp, #24]
    8870:	cmp	x0, #0x0
    8874:	cset	w0, ne  // ne = any
    8878:	and	w0, w0, #0xff
    887c:	and	x0, x0, #0xff
    8880:	cmp	x0, #0x0
    8884:	b.ne	88b8 <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0x5c>  // b.any
    8888:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    888c:	add	x1, x0, #0x963
    8890:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8894:	add	x4, x0, #0xa28
    8898:	mov	w3, #0xb2                  	// #178
    889c:	mov	x2, x1
    88a0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    88a4:	add	x1, x0, #0x988
    88a8:	mov	w0, #0x0                   	// #0
    88ac:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    88b0:	mov	w0, #0x1                   	// #1
    88b4:	b	88bc <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0x60>
    88b8:	mov	w0, #0x0                   	// #0
    88bc:	cmp	w0, #0x0
    88c0:	b.eq	88cc <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0x70>  // b.none
    88c4:	mov	w0, #0xffffffea            	// #-22
    88c8:	b	8920 <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0xc4>
    88cc:	ldr	x0, [sp, #16]
    88d0:	cmp	x0, #0x0
    88d4:	b.ne	88e0 <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0x84>  // b.any
    88d8:	mov	w0, #0x0                   	// #0
    88dc:	b	8920 <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0xc4>
    88e0:	ldr	x0, [sp, #24]
    88e4:	ldr	x0, [x0, #32]
    88e8:	mov	w2, #0x1                   	// #1
    88ec:	ldr	x1, [sp, #16]
    88f0:	bl	bef8 <udev_util_encode_string@@LIBUDEV_183+0x6c8>
    88f4:	str	w0, [sp, #44]
    88f8:	ldr	w0, [sp, #44]
    88fc:	cmp	w0, #0x0
    8900:	b.ge	890c <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0xb0>  // b.tcont
    8904:	ldr	w0, [sp, #44]
    8908:	b	8920 <udev_enumerate_add_match_subsystem@@LIBUDEV_183+0xc4>
    890c:	ldr	x0, [sp, #24]
    8910:	ldrb	w1, [x0, #24]
    8914:	and	w1, w1, #0xfffffffe
    8918:	strb	w1, [x0, #24]
    891c:	mov	w0, #0x0                   	// #0
    8920:	ldp	x29, x30, [sp], #48
    8924:	ret

0000000000008928 <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183>:
    8928:	stp	x29, x30, [sp, #-48]!
    892c:	mov	x29, sp
    8930:	str	x0, [sp, #24]
    8934:	str	x1, [sp, #16]
    8938:	ldr	x0, [sp, #24]
    893c:	cmp	x0, #0x0
    8940:	cset	w0, ne  // ne = any
    8944:	and	w0, w0, #0xff
    8948:	and	x0, x0, #0xff
    894c:	cmp	x0, #0x0
    8950:	b.ne	8984 <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0x5c>  // b.any
    8954:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8958:	add	x1, x0, #0x963
    895c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8960:	add	x4, x0, #0xa50
    8964:	mov	w3, #0xcb                  	// #203
    8968:	mov	x2, x1
    896c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8970:	add	x1, x0, #0x988
    8974:	mov	w0, #0x0                   	// #0
    8978:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    897c:	mov	w0, #0x1                   	// #1
    8980:	b	8988 <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0x60>
    8984:	mov	w0, #0x0                   	// #0
    8988:	cmp	w0, #0x0
    898c:	b.eq	8998 <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0x70>  // b.none
    8990:	mov	w0, #0xffffffea            	// #-22
    8994:	b	89ec <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0xc4>
    8998:	ldr	x0, [sp, #16]
    899c:	cmp	x0, #0x0
    89a0:	b.ne	89ac <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0x84>  // b.any
    89a4:	mov	w0, #0x0                   	// #0
    89a8:	b	89ec <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0xc4>
    89ac:	ldr	x0, [sp, #24]
    89b0:	ldr	x0, [x0, #32]
    89b4:	mov	w2, #0x0                   	// #0
    89b8:	ldr	x1, [sp, #16]
    89bc:	bl	bef8 <udev_util_encode_string@@LIBUDEV_183+0x6c8>
    89c0:	str	w0, [sp, #44]
    89c4:	ldr	w0, [sp, #44]
    89c8:	cmp	w0, #0x0
    89cc:	b.ge	89d8 <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0xb0>  // b.tcont
    89d0:	ldr	w0, [sp, #44]
    89d4:	b	89ec <udev_enumerate_add_nomatch_subsystem@@LIBUDEV_183+0xc4>
    89d8:	ldr	x0, [sp, #24]
    89dc:	ldrb	w1, [x0, #24]
    89e0:	and	w1, w1, #0xfffffffe
    89e4:	strb	w1, [x0, #24]
    89e8:	mov	w0, #0x0                   	// #0
    89ec:	ldp	x29, x30, [sp], #48
    89f0:	ret

00000000000089f4 <udev_enumerate_add_match_sysattr@@LIBUDEV_183>:
    89f4:	stp	x29, x30, [sp, #-64]!
    89f8:	mov	x29, sp
    89fc:	str	x0, [sp, #40]
    8a00:	str	x1, [sp, #32]
    8a04:	str	x2, [sp, #24]
    8a08:	ldr	x0, [sp, #40]
    8a0c:	cmp	x0, #0x0
    8a10:	cset	w0, ne  // ne = any
    8a14:	and	w0, w0, #0xff
    8a18:	and	x0, x0, #0xff
    8a1c:	cmp	x0, #0x0
    8a20:	b.ne	8a54 <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0x60>  // b.any
    8a24:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8a28:	add	x1, x0, #0x963
    8a2c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8a30:	add	x4, x0, #0xa78
    8a34:	mov	w3, #0xe5                  	// #229
    8a38:	mov	x2, x1
    8a3c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8a40:	add	x1, x0, #0x988
    8a44:	mov	w0, #0x0                   	// #0
    8a48:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8a4c:	mov	w0, #0x1                   	// #1
    8a50:	b	8a58 <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0x64>
    8a54:	mov	w0, #0x0                   	// #0
    8a58:	cmp	w0, #0x0
    8a5c:	b.eq	8a68 <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0x74>  // b.none
    8a60:	mov	w0, #0xffffffea            	// #-22
    8a64:	b	8ac0 <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0xcc>
    8a68:	ldr	x0, [sp, #32]
    8a6c:	cmp	x0, #0x0
    8a70:	b.ne	8a7c <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0x88>  // b.any
    8a74:	mov	w0, #0x0                   	// #0
    8a78:	b	8ac0 <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0xcc>
    8a7c:	ldr	x0, [sp, #40]
    8a80:	ldr	x0, [x0, #32]
    8a84:	mov	w3, #0x1                   	// #1
    8a88:	ldr	x2, [sp, #24]
    8a8c:	ldr	x1, [sp, #32]
    8a90:	bl	c054 <udev_util_encode_string@@LIBUDEV_183+0x824>
    8a94:	str	w0, [sp, #60]
    8a98:	ldr	w0, [sp, #60]
    8a9c:	cmp	w0, #0x0
    8aa0:	b.ge	8aac <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0xb8>  // b.tcont
    8aa4:	ldr	w0, [sp, #60]
    8aa8:	b	8ac0 <udev_enumerate_add_match_sysattr@@LIBUDEV_183+0xcc>
    8aac:	ldr	x0, [sp, #40]
    8ab0:	ldrb	w1, [x0, #24]
    8ab4:	and	w1, w1, #0xfffffffe
    8ab8:	strb	w1, [x0, #24]
    8abc:	mov	w0, #0x0                   	// #0
    8ac0:	ldp	x29, x30, [sp], #64
    8ac4:	ret

0000000000008ac8 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183>:
    8ac8:	stp	x29, x30, [sp, #-64]!
    8acc:	mov	x29, sp
    8ad0:	str	x0, [sp, #40]
    8ad4:	str	x1, [sp, #32]
    8ad8:	str	x2, [sp, #24]
    8adc:	ldr	x0, [sp, #40]
    8ae0:	cmp	x0, #0x0
    8ae4:	cset	w0, ne  // ne = any
    8ae8:	and	w0, w0, #0xff
    8aec:	and	x0, x0, #0xff
    8af0:	cmp	x0, #0x0
    8af4:	b.ne	8b28 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0x60>  // b.any
    8af8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8afc:	add	x1, x0, #0x963
    8b00:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8b04:	add	x4, x0, #0xaa0
    8b08:	mov	w3, #0xff                  	// #255
    8b0c:	mov	x2, x1
    8b10:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8b14:	add	x1, x0, #0x988
    8b18:	mov	w0, #0x0                   	// #0
    8b1c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8b20:	mov	w0, #0x1                   	// #1
    8b24:	b	8b2c <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0x64>
    8b28:	mov	w0, #0x0                   	// #0
    8b2c:	cmp	w0, #0x0
    8b30:	b.eq	8b3c <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0x74>  // b.none
    8b34:	mov	w0, #0xffffffea            	// #-22
    8b38:	b	8b94 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0xcc>
    8b3c:	ldr	x0, [sp, #32]
    8b40:	cmp	x0, #0x0
    8b44:	b.ne	8b50 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0x88>  // b.any
    8b48:	mov	w0, #0x0                   	// #0
    8b4c:	b	8b94 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0xcc>
    8b50:	ldr	x0, [sp, #40]
    8b54:	ldr	x0, [x0, #32]
    8b58:	mov	w3, #0x0                   	// #0
    8b5c:	ldr	x2, [sp, #24]
    8b60:	ldr	x1, [sp, #32]
    8b64:	bl	c054 <udev_util_encode_string@@LIBUDEV_183+0x824>
    8b68:	str	w0, [sp, #60]
    8b6c:	ldr	w0, [sp, #60]
    8b70:	cmp	w0, #0x0
    8b74:	b.ge	8b80 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0xb8>  // b.tcont
    8b78:	ldr	w0, [sp, #60]
    8b7c:	b	8b94 <udev_enumerate_add_nomatch_sysattr@@LIBUDEV_183+0xcc>
    8b80:	ldr	x0, [sp, #40]
    8b84:	ldrb	w1, [x0, #24]
    8b88:	and	w1, w1, #0xfffffffe
    8b8c:	strb	w1, [x0, #24]
    8b90:	mov	w0, #0x0                   	// #0
    8b94:	ldp	x29, x30, [sp], #64
    8b98:	ret

0000000000008b9c <udev_enumerate_add_match_property@@LIBUDEV_183>:
    8b9c:	stp	x29, x30, [sp, #-64]!
    8ba0:	mov	x29, sp
    8ba4:	str	x0, [sp, #40]
    8ba8:	str	x1, [sp, #32]
    8bac:	str	x2, [sp, #24]
    8bb0:	ldr	x0, [sp, #40]
    8bb4:	cmp	x0, #0x0
    8bb8:	cset	w0, ne  // ne = any
    8bbc:	and	w0, w0, #0xff
    8bc0:	and	x0, x0, #0xff
    8bc4:	cmp	x0, #0x0
    8bc8:	b.ne	8bfc <udev_enumerate_add_match_property@@LIBUDEV_183+0x60>  // b.any
    8bcc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8bd0:	add	x1, x0, #0x963
    8bd4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8bd8:	add	x4, x0, #0xac8
    8bdc:	mov	w3, #0x119                 	// #281
    8be0:	mov	x2, x1
    8be4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8be8:	add	x1, x0, #0x988
    8bec:	mov	w0, #0x0                   	// #0
    8bf0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8bf4:	mov	w0, #0x1                   	// #1
    8bf8:	b	8c00 <udev_enumerate_add_match_property@@LIBUDEV_183+0x64>
    8bfc:	mov	w0, #0x0                   	// #0
    8c00:	cmp	w0, #0x0
    8c04:	b.eq	8c10 <udev_enumerate_add_match_property@@LIBUDEV_183+0x74>  // b.none
    8c08:	mov	w0, #0xffffffea            	// #-22
    8c0c:	b	8c64 <udev_enumerate_add_match_property@@LIBUDEV_183+0xc8>
    8c10:	ldr	x0, [sp, #32]
    8c14:	cmp	x0, #0x0
    8c18:	b.ne	8c24 <udev_enumerate_add_match_property@@LIBUDEV_183+0x88>  // b.any
    8c1c:	mov	w0, #0x0                   	// #0
    8c20:	b	8c64 <udev_enumerate_add_match_property@@LIBUDEV_183+0xc8>
    8c24:	ldr	x0, [sp, #40]
    8c28:	ldr	x0, [x0, #32]
    8c2c:	ldr	x2, [sp, #24]
    8c30:	ldr	x1, [sp, #32]
    8c34:	bl	c268 <udev_util_encode_string@@LIBUDEV_183+0xa38>
    8c38:	str	w0, [sp, #60]
    8c3c:	ldr	w0, [sp, #60]
    8c40:	cmp	w0, #0x0
    8c44:	b.ge	8c50 <udev_enumerate_add_match_property@@LIBUDEV_183+0xb4>  // b.tcont
    8c48:	ldr	w0, [sp, #60]
    8c4c:	b	8c64 <udev_enumerate_add_match_property@@LIBUDEV_183+0xc8>
    8c50:	ldr	x0, [sp, #40]
    8c54:	ldrb	w1, [x0, #24]
    8c58:	and	w1, w1, #0xfffffffe
    8c5c:	strb	w1, [x0, #24]
    8c60:	mov	w0, #0x0                   	// #0
    8c64:	ldp	x29, x30, [sp], #64
    8c68:	ret

0000000000008c6c <udev_enumerate_add_match_tag@@LIBUDEV_183>:
    8c6c:	stp	x29, x30, [sp, #-48]!
    8c70:	mov	x29, sp
    8c74:	str	x0, [sp, #24]
    8c78:	str	x1, [sp, #16]
    8c7c:	ldr	x0, [sp, #24]
    8c80:	cmp	x0, #0x0
    8c84:	cset	w0, ne  // ne = any
    8c88:	and	w0, w0, #0xff
    8c8c:	and	x0, x0, #0xff
    8c90:	cmp	x0, #0x0
    8c94:	b.ne	8cc8 <udev_enumerate_add_match_tag@@LIBUDEV_183+0x5c>  // b.any
    8c98:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8c9c:	add	x1, x0, #0x963
    8ca0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8ca4:	add	x4, x0, #0xaf0
    8ca8:	mov	w3, #0x132                 	// #306
    8cac:	mov	x2, x1
    8cb0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8cb4:	add	x1, x0, #0x988
    8cb8:	mov	w0, #0x0                   	// #0
    8cbc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8cc0:	mov	w0, #0x1                   	// #1
    8cc4:	b	8ccc <udev_enumerate_add_match_tag@@LIBUDEV_183+0x60>
    8cc8:	mov	w0, #0x0                   	// #0
    8ccc:	cmp	w0, #0x0
    8cd0:	b.eq	8cdc <udev_enumerate_add_match_tag@@LIBUDEV_183+0x70>  // b.none
    8cd4:	mov	w0, #0xffffffea            	// #-22
    8cd8:	b	8d2c <udev_enumerate_add_match_tag@@LIBUDEV_183+0xc0>
    8cdc:	ldr	x0, [sp, #16]
    8ce0:	cmp	x0, #0x0
    8ce4:	b.ne	8cf0 <udev_enumerate_add_match_tag@@LIBUDEV_183+0x84>  // b.any
    8ce8:	mov	w0, #0x0                   	// #0
    8cec:	b	8d2c <udev_enumerate_add_match_tag@@LIBUDEV_183+0xc0>
    8cf0:	ldr	x0, [sp, #24]
    8cf4:	ldr	x0, [x0, #32]
    8cf8:	ldr	x1, [sp, #16]
    8cfc:	bl	c588 <udev_util_encode_string@@LIBUDEV_183+0xd58>
    8d00:	str	w0, [sp, #44]
    8d04:	ldr	w0, [sp, #44]
    8d08:	cmp	w0, #0x0
    8d0c:	b.ge	8d18 <udev_enumerate_add_match_tag@@LIBUDEV_183+0xac>  // b.tcont
    8d10:	ldr	w0, [sp, #44]
    8d14:	b	8d2c <udev_enumerate_add_match_tag@@LIBUDEV_183+0xc0>
    8d18:	ldr	x0, [sp, #24]
    8d1c:	ldrb	w1, [x0, #24]
    8d20:	and	w1, w1, #0xfffffffe
    8d24:	strb	w1, [x0, #24]
    8d28:	mov	w0, #0x0                   	// #0
    8d2c:	ldp	x29, x30, [sp], #48
    8d30:	ret

0000000000008d34 <udev_enumerate_add_match_parent@@LIBUDEV_183>:
    8d34:	stp	x29, x30, [sp, #-64]!
    8d38:	mov	x29, sp
    8d3c:	str	x19, [sp, #16]
    8d40:	str	x0, [sp, #40]
    8d44:	str	x1, [sp, #32]
    8d48:	ldr	x0, [sp, #40]
    8d4c:	cmp	x0, #0x0
    8d50:	cset	w0, ne  // ne = any
    8d54:	and	w0, w0, #0xff
    8d58:	and	x0, x0, #0xff
    8d5c:	cmp	x0, #0x0
    8d60:	b.ne	8d94 <udev_enumerate_add_match_parent@@LIBUDEV_183+0x60>  // b.any
    8d64:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8d68:	add	x1, x0, #0x963
    8d6c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8d70:	add	x4, x0, #0xb10
    8d74:	mov	w3, #0x14c                 	// #332
    8d78:	mov	x2, x1
    8d7c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8d80:	add	x1, x0, #0x988
    8d84:	mov	w0, #0x0                   	// #0
    8d88:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8d8c:	mov	w0, #0x1                   	// #1
    8d90:	b	8d98 <udev_enumerate_add_match_parent@@LIBUDEV_183+0x64>
    8d94:	mov	w0, #0x0                   	// #0
    8d98:	cmp	w0, #0x0
    8d9c:	b.eq	8da8 <udev_enumerate_add_match_parent@@LIBUDEV_183+0x74>  // b.none
    8da0:	mov	w0, #0xffffffea            	// #-22
    8da4:	b	8e04 <udev_enumerate_add_match_parent@@LIBUDEV_183+0xd0>
    8da8:	ldr	x0, [sp, #32]
    8dac:	cmp	x0, #0x0
    8db0:	b.ne	8dbc <udev_enumerate_add_match_parent@@LIBUDEV_183+0x88>  // b.any
    8db4:	mov	w0, #0x0                   	// #0
    8db8:	b	8e04 <udev_enumerate_add_match_parent@@LIBUDEV_183+0xd0>
    8dbc:	ldr	x0, [sp, #40]
    8dc0:	ldr	x19, [x0, #32]
    8dc4:	ldr	x0, [sp, #32]
    8dc8:	bl	80c8 <udev_device_has_tag@@LIBUDEV_183+0x94>
    8dcc:	mov	x1, x0
    8dd0:	mov	x0, x19
    8dd4:	bl	c888 <udev_util_encode_string@@LIBUDEV_183+0x1058>
    8dd8:	str	w0, [sp, #60]
    8ddc:	ldr	w0, [sp, #60]
    8de0:	cmp	w0, #0x0
    8de4:	b.ge	8df0 <udev_enumerate_add_match_parent@@LIBUDEV_183+0xbc>  // b.tcont
    8de8:	ldr	w0, [sp, #60]
    8dec:	b	8e04 <udev_enumerate_add_match_parent@@LIBUDEV_183+0xd0>
    8df0:	ldr	x0, [sp, #40]
    8df4:	ldrb	w1, [x0, #24]
    8df8:	and	w1, w1, #0xfffffffe
    8dfc:	strb	w1, [x0, #24]
    8e00:	mov	w0, #0x0                   	// #0
    8e04:	ldr	x19, [sp, #16]
    8e08:	ldp	x29, x30, [sp], #64
    8e0c:	ret

0000000000008e10 <udev_enumerate_add_match_is_initialized@@LIBUDEV_183>:
    8e10:	stp	x29, x30, [sp, #-48]!
    8e14:	mov	x29, sp
    8e18:	str	x0, [sp, #24]
    8e1c:	ldr	x0, [sp, #24]
    8e20:	cmp	x0, #0x0
    8e24:	cset	w0, ne  // ne = any
    8e28:	and	w0, w0, #0xff
    8e2c:	and	x0, x0, #0xff
    8e30:	cmp	x0, #0x0
    8e34:	b.ne	8e68 <udev_enumerate_add_match_is_initialized@@LIBUDEV_183+0x58>  // b.any
    8e38:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8e3c:	add	x1, x0, #0x963
    8e40:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8e44:	add	x4, x0, #0xb30
    8e48:	mov	w3, #0x16e                 	// #366
    8e4c:	mov	x2, x1
    8e50:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8e54:	add	x1, x0, #0x988
    8e58:	mov	w0, #0x0                   	// #0
    8e5c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8e60:	mov	w0, #0x1                   	// #1
    8e64:	b	8e6c <udev_enumerate_add_match_is_initialized@@LIBUDEV_183+0x5c>
    8e68:	mov	w0, #0x0                   	// #0
    8e6c:	cmp	w0, #0x0
    8e70:	b.eq	8e7c <udev_enumerate_add_match_is_initialized@@LIBUDEV_183+0x6c>  // b.none
    8e74:	mov	w0, #0xffffffea            	// #-22
    8e78:	b	8eb4 <udev_enumerate_add_match_is_initialized@@LIBUDEV_183+0xa4>
    8e7c:	ldr	x0, [sp, #24]
    8e80:	ldr	x0, [x0, #32]
    8e84:	bl	c940 <udev_util_encode_string@@LIBUDEV_183+0x1110>
    8e88:	str	w0, [sp, #44]
    8e8c:	ldr	w0, [sp, #44]
    8e90:	cmp	w0, #0x0
    8e94:	b.ge	8ea0 <udev_enumerate_add_match_is_initialized@@LIBUDEV_183+0x90>  // b.tcont
    8e98:	ldr	w0, [sp, #44]
    8e9c:	b	8eb4 <udev_enumerate_add_match_is_initialized@@LIBUDEV_183+0xa4>
    8ea0:	ldr	x0, [sp, #24]
    8ea4:	ldrb	w1, [x0, #24]
    8ea8:	and	w1, w1, #0xfffffffe
    8eac:	strb	w1, [x0, #24]
    8eb0:	mov	w0, #0x0                   	// #0
    8eb4:	ldp	x29, x30, [sp], #48
    8eb8:	ret

0000000000008ebc <udev_enumerate_add_match_sysname@@LIBUDEV_183>:
    8ebc:	stp	x29, x30, [sp, #-48]!
    8ec0:	mov	x29, sp
    8ec4:	str	x0, [sp, #24]
    8ec8:	str	x1, [sp, #16]
    8ecc:	ldr	x0, [sp, #24]
    8ed0:	cmp	x0, #0x0
    8ed4:	cset	w0, ne  // ne = any
    8ed8:	and	w0, w0, #0xff
    8edc:	and	x0, x0, #0xff
    8ee0:	cmp	x0, #0x0
    8ee4:	b.ne	8f18 <udev_enumerate_add_match_sysname@@LIBUDEV_183+0x5c>  // b.any
    8ee8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8eec:	add	x1, x0, #0x963
    8ef0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8ef4:	add	x4, x0, #0xb58
    8ef8:	mov	w3, #0x184                 	// #388
    8efc:	mov	x2, x1
    8f00:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8f04:	add	x1, x0, #0x988
    8f08:	mov	w0, #0x0                   	// #0
    8f0c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8f10:	mov	w0, #0x1                   	// #1
    8f14:	b	8f1c <udev_enumerate_add_match_sysname@@LIBUDEV_183+0x60>
    8f18:	mov	w0, #0x0                   	// #0
    8f1c:	cmp	w0, #0x0
    8f20:	b.eq	8f2c <udev_enumerate_add_match_sysname@@LIBUDEV_183+0x70>  // b.none
    8f24:	mov	w0, #0xffffffea            	// #-22
    8f28:	b	8f7c <udev_enumerate_add_match_sysname@@LIBUDEV_183+0xc0>
    8f2c:	ldr	x0, [sp, #16]
    8f30:	cmp	x0, #0x0
    8f34:	b.ne	8f40 <udev_enumerate_add_match_sysname@@LIBUDEV_183+0x84>  // b.any
    8f38:	mov	w0, #0x0                   	// #0
    8f3c:	b	8f7c <udev_enumerate_add_match_sysname@@LIBUDEV_183+0xc0>
    8f40:	ldr	x0, [sp, #24]
    8f44:	ldr	x0, [x0, #32]
    8f48:	ldr	x1, [sp, #16]
    8f4c:	bl	c454 <udev_util_encode_string@@LIBUDEV_183+0xc24>
    8f50:	str	w0, [sp, #44]
    8f54:	ldr	w0, [sp, #44]
    8f58:	cmp	w0, #0x0
    8f5c:	b.ge	8f68 <udev_enumerate_add_match_sysname@@LIBUDEV_183+0xac>  // b.tcont
    8f60:	ldr	w0, [sp, #44]
    8f64:	b	8f7c <udev_enumerate_add_match_sysname@@LIBUDEV_183+0xc0>
    8f68:	ldr	x0, [sp, #24]
    8f6c:	ldrb	w1, [x0, #24]
    8f70:	and	w1, w1, #0xfffffffe
    8f74:	strb	w1, [x0, #24]
    8f78:	mov	w0, #0x0                   	// #0
    8f7c:	ldp	x29, x30, [sp], #48
    8f80:	ret

0000000000008f84 <udev_enumerate_add_syspath@@LIBUDEV_183>:
    8f84:	stp	x29, x30, [sp, #-80]!
    8f88:	mov	x29, sp
    8f8c:	str	x19, [sp, #16]
    8f90:	str	x0, [sp, #40]
    8f94:	str	x1, [sp, #32]
    8f98:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    8f9c:	ldr	x0, [x0, #4016]
    8fa0:	ldr	x1, [x0]
    8fa4:	str	x1, [sp, #72]
    8fa8:	mov	x1, #0x0                   	// #0
    8fac:	str	xzr, [sp, #64]
    8fb0:	ldr	x0, [sp, #40]
    8fb4:	cmp	x0, #0x0
    8fb8:	cset	w0, ne  // ne = any
    8fbc:	and	w0, w0, #0xff
    8fc0:	and	x0, x0, #0xff
    8fc4:	cmp	x0, #0x0
    8fc8:	b.ne	8ffc <udev_enumerate_add_syspath@@LIBUDEV_183+0x78>  // b.any
    8fcc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8fd0:	add	x1, x0, #0x963
    8fd4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8fd8:	add	x4, x0, #0xb80
    8fdc:	mov	w3, #0x19e                 	// #414
    8fe0:	mov	x2, x1
    8fe4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    8fe8:	add	x1, x0, #0x988
    8fec:	mov	w0, #0x0                   	// #0
    8ff0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    8ff4:	mov	w0, #0x1                   	// #1
    8ff8:	b	9000 <udev_enumerate_add_syspath@@LIBUDEV_183+0x7c>
    8ffc:	mov	w0, #0x0                   	// #0
    9000:	cmp	w0, #0x0
    9004:	b.eq	9010 <udev_enumerate_add_syspath@@LIBUDEV_183+0x8c>  // b.none
    9008:	mov	w19, #0xffffffea            	// #-22
    900c:	b	9084 <udev_enumerate_add_syspath@@LIBUDEV_183+0x100>
    9010:	ldr	x0, [sp, #32]
    9014:	cmp	x0, #0x0
    9018:	b.ne	9024 <udev_enumerate_add_syspath@@LIBUDEV_183+0xa0>  // b.any
    901c:	mov	w19, #0x0                   	// #0
    9020:	b	9084 <udev_enumerate_add_syspath@@LIBUDEV_183+0x100>
    9024:	add	x0, sp, #0x40
    9028:	ldr	x1, [sp, #32]
    902c:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
    9030:	str	w0, [sp, #60]
    9034:	ldr	w0, [sp, #60]
    9038:	cmp	w0, #0x0
    903c:	b.ge	9048 <udev_enumerate_add_syspath@@LIBUDEV_183+0xc4>  // b.tcont
    9040:	ldr	w19, [sp, #60]
    9044:	b	9084 <udev_enumerate_add_syspath@@LIBUDEV_183+0x100>
    9048:	ldr	x0, [sp, #40]
    904c:	ldr	x0, [x0, #32]
    9050:	ldr	x1, [sp, #64]
    9054:	bl	ccc8 <udev_util_encode_string@@LIBUDEV_183+0x1498>
    9058:	str	w0, [sp, #60]
    905c:	ldr	w0, [sp, #60]
    9060:	cmp	w0, #0x0
    9064:	b.ge	9070 <udev_enumerate_add_syspath@@LIBUDEV_183+0xec>  // b.tcont
    9068:	ldr	w19, [sp, #60]
    906c:	b	9084 <udev_enumerate_add_syspath@@LIBUDEV_183+0x100>
    9070:	ldr	x0, [sp, #40]
    9074:	ldrb	w1, [x0, #24]
    9078:	and	w1, w1, #0xfffffffe
    907c:	strb	w1, [x0, #24]
    9080:	mov	w19, #0x0                   	// #0
    9084:	add	x0, sp, #0x40
    9088:	bl	8128 <udev_device_has_tag@@LIBUDEV_183+0xf4>
    908c:	mov	w1, w19
    9090:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    9094:	ldr	x0, [x0, #4016]
    9098:	ldr	x2, [sp, #72]
    909c:	ldr	x0, [x0]
    90a0:	eor	x0, x2, x0
    90a4:	cmp	x0, #0x0
    90a8:	b.eq	90b0 <udev_enumerate_add_syspath@@LIBUDEV_183+0x12c>  // b.none
    90ac:	bl	5390 <__stack_chk_fail@plt>
    90b0:	mov	w0, w1
    90b4:	ldr	x19, [sp, #16]
    90b8:	ldp	x29, x30, [sp], #80
    90bc:	ret

00000000000090c0 <udev_enumerate_scan_devices@@LIBUDEV_183>:
    90c0:	stp	x29, x30, [sp, #-32]!
    90c4:	mov	x29, sp
    90c8:	str	x0, [sp, #24]
    90cc:	ldr	x0, [sp, #24]
    90d0:	cmp	x0, #0x0
    90d4:	cset	w0, ne  // ne = any
    90d8:	and	w0, w0, #0xff
    90dc:	and	x0, x0, #0xff
    90e0:	cmp	x0, #0x0
    90e4:	b.ne	9118 <udev_enumerate_scan_devices@@LIBUDEV_183+0x58>  // b.any
    90e8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    90ec:	add	x1, x0, #0x963
    90f0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    90f4:	add	x4, x0, #0xba0
    90f8:	mov	w3, #0x1b9                 	// #441
    90fc:	mov	x2, x1
    9100:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9104:	add	x1, x0, #0x988
    9108:	mov	w0, #0x0                   	// #0
    910c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    9110:	mov	w0, #0x1                   	// #1
    9114:	b	911c <udev_enumerate_scan_devices@@LIBUDEV_183+0x5c>
    9118:	mov	w0, #0x0                   	// #0
    911c:	cmp	w0, #0x0
    9120:	b.eq	912c <udev_enumerate_scan_devices@@LIBUDEV_183+0x6c>  // b.none
    9124:	mov	w0, #0xffffffea            	// #-22
    9128:	b	9138 <udev_enumerate_scan_devices@@LIBUDEV_183+0x78>
    912c:	ldr	x0, [sp, #24]
    9130:	ldr	x0, [x0, #32]
    9134:	bl	f634 <udev_util_encode_string@@LIBUDEV_183+0x3e04>
    9138:	ldp	x29, x30, [sp], #32
    913c:	ret

0000000000009140 <udev_enumerate_scan_subsystems@@LIBUDEV_183>:
    9140:	stp	x29, x30, [sp, #-32]!
    9144:	mov	x29, sp
    9148:	str	x0, [sp, #24]
    914c:	ldr	x0, [sp, #24]
    9150:	cmp	x0, #0x0
    9154:	cset	w0, ne  // ne = any
    9158:	and	w0, w0, #0xff
    915c:	and	x0, x0, #0xff
    9160:	cmp	x0, #0x0
    9164:	b.ne	9198 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x58>  // b.any
    9168:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    916c:	add	x1, x0, #0x963
    9170:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9174:	add	x4, x0, #0xbc0
    9178:	mov	w3, #0x1c7                 	// #455
    917c:	mov	x2, x1
    9180:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9184:	add	x1, x0, #0x988
    9188:	mov	w0, #0x0                   	// #0
    918c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    9190:	mov	w0, #0x1                   	// #1
    9194:	b	919c <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x5c>
    9198:	mov	w0, #0x0                   	// #0
    919c:	cmp	w0, #0x0
    91a0:	b.eq	91ac <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x6c>  // b.none
    91a4:	mov	w0, #0xffffffea            	// #-22
    91a8:	b	91b8 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x78>
    91ac:	ldr	x0, [sp, #24]
    91b0:	ldr	x0, [x0, #32]
    91b4:	bl	f7ec <udev_util_encode_string@@LIBUDEV_183+0x3fbc>
    91b8:	ldp	x29, x30, [sp], #32
    91bc:	ret
    91c0:	stp	x29, x30, [sp, #-32]!
    91c4:	mov	x29, sp
    91c8:	str	x0, [sp, #24]
    91cc:	ldr	x0, [sp, #24]
    91d0:	ldr	x0, [x0]
    91d4:	cmp	x0, #0x0
    91d8:	b.eq	91e8 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0xa8>  // b.none
    91dc:	ldr	x0, [sp, #24]
    91e0:	ldr	x0, [x0]
    91e4:	bl	203ac <udev_util_encode_string@@LIBUDEV_183+0x14b7c>
    91e8:	nop
    91ec:	ldp	x29, x30, [sp], #32
    91f0:	ret
    91f4:	stp	x29, x30, [sp, #-32]!
    91f8:	mov	x29, sp
    91fc:	str	x0, [sp, #24]
    9200:	ldr	x0, [sp, #24]
    9204:	bl	54b0 <free@plt>
    9208:	mov	x0, #0x0                   	// #0
    920c:	ldp	x29, x30, [sp], #32
    9210:	ret
    9214:	sub	sp, sp, #0x10
    9218:	str	x0, [sp, #8]
    921c:	str	x1, [sp]
    9220:	ldr	x0, [sp]
    9224:	cmp	x0, #0x0
    9228:	cset	w0, ne  // ne = any
    922c:	and	w0, w0, #0xff
    9230:	and	x0, x0, #0xff
    9234:	cmp	x0, #0x0
    9238:	b.eq	927c <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x13c>  // b.none
    923c:	mov	x2, #0x0                   	// #0
    9240:	ldr	x1, [sp, #8]
    9244:	ldr	x0, [sp]
    9248:	umulh	x0, x1, x0
    924c:	cmp	x0, #0x0
    9250:	b.eq	9258 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x118>  // b.none
    9254:	mov	x2, #0x1                   	// #1
    9258:	mov	x0, x2
    925c:	cmp	x0, #0x0
    9260:	cset	w0, ne  // ne = any
    9264:	and	w0, w0, #0xff
    9268:	and	x0, x0, #0xff
    926c:	cmp	x0, #0x0
    9270:	b.eq	927c <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x13c>  // b.none
    9274:	mov	w0, #0x1                   	// #1
    9278:	b	9280 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x140>
    927c:	mov	w0, #0x0                   	// #0
    9280:	and	w0, w0, #0x1
    9284:	and	w0, w0, #0xff
    9288:	add	sp, sp, #0x10
    928c:	ret
    9290:	stp	x29, x30, [sp, #-32]!
    9294:	mov	x29, sp
    9298:	str	x0, [sp, #24]
    929c:	str	x1, [sp, #16]
    92a0:	ldr	x1, [sp, #16]
    92a4:	ldr	x0, [sp, #24]
    92a8:	bl	9214 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0xd4>
    92ac:	and	w0, w0, #0xff
    92b0:	cmp	w0, #0x0
    92b4:	b.eq	92c0 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x180>  // b.none
    92b8:	mov	x0, #0x0                   	// #0
    92bc:	b	92dc <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x19c>
    92c0:	ldr	x1, [sp, #24]
    92c4:	ldr	x0, [sp, #16]
    92c8:	mul	x0, x1, x0
    92cc:	cmp	x0, #0x0
    92d0:	b.ne	92d8 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x198>  // b.any
    92d4:	mov	x0, #0x1                   	// #1
    92d8:	bl	5220 <malloc@plt>
    92dc:	ldp	x29, x30, [sp], #32
    92e0:	ret
    92e4:	stp	x29, x30, [sp, #-32]!
    92e8:	mov	x29, sp
    92ec:	str	x0, [sp, #24]
    92f0:	ldr	x0, [sp, #24]
    92f4:	ldr	x0, [x0]
    92f8:	cmp	x0, #0x0
    92fc:	b.eq	930c <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x1cc>  // b.none
    9300:	ldr	x0, [sp, #24]
    9304:	ldr	x0, [x0]
    9308:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    930c:	nop
    9310:	ldp	x29, x30, [sp], #32
    9314:	ret

0000000000009318 <udev_hwdb_new@@LIBUDEV_196>:
    9318:	stp	x29, x30, [sp, #-128]!
    931c:	mov	x29, sp
    9320:	str	x19, [sp, #16]
    9324:	str	x0, [sp, #40]
    9328:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    932c:	ldr	x0, [x0, #4016]
    9330:	ldr	x1, [x0]
    9334:	str	x1, [sp, #120]
    9338:	mov	x1, #0x0                   	// #0
    933c:	str	xzr, [sp, #64]
    9340:	str	xzr, [sp, #96]
    9344:	add	x0, sp, #0x60
    9348:	bl	1f998 <udev_util_encode_string@@LIBUDEV_183+0x14168>
    934c:	str	w0, [sp, #60]
    9350:	ldr	w0, [sp, #60]
    9354:	cmp	w0, #0x0
    9358:	b.ge	937c <udev_hwdb_new@@LIBUDEV_196+0x64>  // b.tcont
    935c:	bl	57d0 <__errno_location@plt>
    9360:	mov	x1, x0
    9364:	ldr	w0, [sp, #60]
    9368:	cmp	w0, #0x0
    936c:	cneg	w0, w0, lt  // lt = tstop
    9370:	str	w0, [x1]
    9374:	mov	x19, #0x0                   	// #0
    9378:	b	9420 <udev_hwdb_new@@LIBUDEV_196+0x108>
    937c:	mov	w0, #0x1                   	// #1
    9380:	bl	9c80 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x678>
    9384:	str	x0, [sp, #64]
    9388:	ldr	x0, [sp, #64]
    938c:	cmp	x0, #0x0
    9390:	b.ne	93ac <udev_hwdb_new@@LIBUDEV_196+0x94>  // b.any
    9394:	bl	57d0 <__errno_location@plt>
    9398:	mov	x1, x0
    939c:	mov	w0, #0xc                   	// #12
    93a0:	str	w0, [x1]
    93a4:	mov	x19, #0x0                   	// #0
    93a8:	b	9420 <udev_hwdb_new@@LIBUDEV_196+0x108>
    93ac:	mov	x1, #0x1                   	// #1
    93b0:	mov	x0, #0x18                  	// #24
    93b4:	bl	9290 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x150>
    93b8:	str	x0, [sp, #72]
    93bc:	ldr	x0, [sp, #72]
    93c0:	cmp	x0, #0x0
    93c4:	b.ne	93e0 <udev_hwdb_new@@LIBUDEV_196+0xc8>  // b.any
    93c8:	bl	57d0 <__errno_location@plt>
    93cc:	mov	x1, x0
    93d0:	mov	w0, #0xc                   	// #12
    93d4:	str	w0, [x1]
    93d8:	mov	x19, #0x0                   	// #0
    93dc:	b	9420 <udev_hwdb_new@@LIBUDEV_196+0x108>
    93e0:	ldr	x0, [sp, #96]
    93e4:	str	x0, [sp, #80]
    93e8:	str	xzr, [sp, #96]
    93ec:	ldr	x2, [sp, #80]
    93f0:	ldr	x0, [sp, #64]
    93f4:	str	x0, [sp, #88]
    93f8:	str	xzr, [sp, #64]
    93fc:	ldr	x1, [sp, #88]
    9400:	ldr	x0, [sp, #72]
    9404:	mov	w3, #0x1                   	// #1
    9408:	str	w3, [x0]
    940c:	ldr	x0, [sp, #72]
    9410:	str	x2, [x0, #8]
    9414:	ldr	x0, [sp, #72]
    9418:	str	x1, [x0, #16]
    941c:	ldr	x19, [sp, #72]
    9420:	add	x0, sp, #0x60
    9424:	bl	91c0 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x80>
    9428:	add	x0, sp, #0x40
    942c:	bl	92e4 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0x1a4>
    9430:	mov	x1, x19
    9434:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    9438:	ldr	x0, [x0, #4016]
    943c:	ldr	x2, [sp, #120]
    9440:	ldr	x0, [x0]
    9444:	eor	x0, x2, x0
    9448:	cmp	x0, #0x0
    944c:	b.eq	9454 <udev_hwdb_new@@LIBUDEV_196+0x13c>  // b.none
    9450:	bl	5390 <__stack_chk_fail@plt>
    9454:	mov	x0, x1
    9458:	ldr	x19, [sp, #16]
    945c:	ldp	x29, x30, [sp], #128
    9460:	ret
    9464:	stp	x29, x30, [sp, #-32]!
    9468:	mov	x29, sp
    946c:	str	x0, [sp, #24]
    9470:	ldr	x0, [sp, #24]
    9474:	cmp	x0, #0x0
    9478:	cset	w0, eq  // eq = none
    947c:	and	w0, w0, #0xff
    9480:	and	x0, x0, #0xff
    9484:	cmp	x0, #0x0
    9488:	b.eq	94b4 <udev_hwdb_new@@LIBUDEV_196+0x19c>  // b.none
    948c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9490:	add	x1, x0, #0xbe3
    9494:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9498:	add	x4, x0, #0xc28
    949c:	mov	w3, #0x41                  	// #65
    94a0:	mov	x2, x1
    94a4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    94a8:	add	x1, x0, #0xc00
    94ac:	mov	w0, #0x0                   	// #0
    94b0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    94b4:	ldr	x0, [sp, #24]
    94b8:	ldr	x0, [x0, #8]
    94bc:	bl	203ac <udev_util_encode_string@@LIBUDEV_183+0x14b7c>
    94c0:	ldr	x0, [sp, #24]
    94c4:	ldr	x0, [x0, #16]
    94c8:	bl	a118 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb10>
    94cc:	ldr	x0, [sp, #24]
    94d0:	bl	91f4 <udev_enumerate_scan_subsystems@@LIBUDEV_183+0xb4>
    94d4:	ldp	x29, x30, [sp], #32
    94d8:	ret

00000000000094dc <udev_hwdb_ref@@LIBUDEV_196>:
    94dc:	stp	x29, x30, [sp, #-32]!
    94e0:	mov	x29, sp
    94e4:	str	x0, [sp, #24]
    94e8:	ldr	x0, [sp, #24]
    94ec:	cmp	x0, #0x0
    94f0:	b.ne	94fc <udev_hwdb_ref@@LIBUDEV_196+0x20>  // b.any
    94f4:	mov	x0, #0x0                   	// #0
    94f8:	b	955c <udev_hwdb_ref@@LIBUDEV_196+0x80>
    94fc:	ldr	x0, [sp, #24]
    9500:	ldr	w0, [x0]
    9504:	cmp	w0, #0x0
    9508:	cset	w0, eq  // eq = none
    950c:	and	w0, w0, #0xff
    9510:	and	x0, x0, #0xff
    9514:	cmp	x0, #0x0
    9518:	b.eq	9544 <udev_hwdb_ref@@LIBUDEV_196+0x68>  // b.none
    951c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9520:	add	x1, x0, #0xbe3
    9524:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9528:	add	x4, x0, #0xc38
    952c:	mov	w3, #0x5a                  	// #90
    9530:	mov	x2, x1
    9534:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9538:	add	x1, x0, #0xc08
    953c:	mov	w0, #0x0                   	// #0
    9540:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    9544:	ldr	x0, [sp, #24]
    9548:	ldr	w0, [x0]
    954c:	add	w1, w0, #0x1
    9550:	ldr	x0, [sp, #24]
    9554:	str	w1, [x0]
    9558:	ldr	x0, [sp, #24]
    955c:	ldp	x29, x30, [sp], #32
    9560:	ret

0000000000009564 <udev_hwdb_unref@@LIBUDEV_196>:
    9564:	stp	x29, x30, [sp, #-32]!
    9568:	mov	x29, sp
    956c:	str	x0, [sp, #24]
    9570:	ldr	x0, [sp, #24]
    9574:	cmp	x0, #0x0
    9578:	b.ne	9584 <udev_hwdb_unref@@LIBUDEV_196+0x20>  // b.any
    957c:	mov	x0, #0x0                   	// #0
    9580:	b	9600 <udev_hwdb_unref@@LIBUDEV_196+0x9c>
    9584:	ldr	x0, [sp, #24]
    9588:	ldr	w0, [x0]
    958c:	cmp	w0, #0x0
    9590:	cset	w0, eq  // eq = none
    9594:	and	w0, w0, #0xff
    9598:	and	x0, x0, #0xff
    959c:	cmp	x0, #0x0
    95a0:	b.eq	95cc <udev_hwdb_unref@@LIBUDEV_196+0x68>  // b.none
    95a4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    95a8:	add	x1, x0, #0xbe3
    95ac:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    95b0:	add	x4, x0, #0xc48
    95b4:	mov	w3, #0x5a                  	// #90
    95b8:	mov	x2, x1
    95bc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    95c0:	add	x1, x0, #0xc08
    95c4:	mov	w0, #0x0                   	// #0
    95c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    95cc:	ldr	x0, [sp, #24]
    95d0:	ldr	w0, [x0]
    95d4:	sub	w1, w0, #0x1
    95d8:	ldr	x0, [sp, #24]
    95dc:	str	w1, [x0]
    95e0:	ldr	x0, [sp, #24]
    95e4:	ldr	w0, [x0]
    95e8:	cmp	w0, #0x0
    95ec:	b.eq	95f8 <udev_hwdb_unref@@LIBUDEV_196+0x94>  // b.none
    95f0:	mov	x0, #0x0                   	// #0
    95f4:	b	9600 <udev_hwdb_unref@@LIBUDEV_196+0x9c>
    95f8:	ldr	x0, [sp, #24]
    95fc:	bl	9464 <udev_hwdb_new@@LIBUDEV_196+0x14c>
    9600:	ldp	x29, x30, [sp], #32
    9604:	ret

0000000000009608 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196>:
    9608:	stp	x29, x30, [sp, #-80]!
    960c:	mov	x29, sp
    9610:	str	x0, [sp, #40]
    9614:	str	x1, [sp, #32]
    9618:	str	w2, [sp, #28]
    961c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    9620:	ldr	x0, [x0, #4016]
    9624:	ldr	x1, [x0]
    9628:	str	x1, [sp, #72]
    962c:	mov	x1, #0x0                   	// #0
    9630:	ldr	x0, [sp, #40]
    9634:	cmp	x0, #0x0
    9638:	cset	w0, ne  // ne = any
    963c:	and	w0, w0, #0xff
    9640:	and	x0, x0, #0xff
    9644:	cmp	x0, #0x0
    9648:	b.ne	967c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x74>  // b.any
    964c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9650:	add	x1, x0, #0xbe3
    9654:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9658:	add	x4, x0, #0xc58
    965c:	mov	w3, #0x6d                  	// #109
    9660:	mov	x2, x1
    9664:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9668:	add	x1, x0, #0xc00
    966c:	mov	w0, #0x0                   	// #0
    9670:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    9674:	mov	w0, #0x1                   	// #1
    9678:	b	9680 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x78>
    967c:	mov	w0, #0x0                   	// #0
    9680:	cmp	w0, #0x0
    9684:	b.eq	96a0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x98>  // b.none
    9688:	bl	57d0 <__errno_location@plt>
    968c:	mov	x1, x0
    9690:	mov	w0, #0x16                  	// #22
    9694:	str	w0, [x1]
    9698:	mov	x0, #0x0                   	// #0
    969c:	b	97c0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1b8>
    96a0:	ldr	x0, [sp, #32]
    96a4:	cmp	x0, #0x0
    96a8:	cset	w0, ne  // ne = any
    96ac:	and	w0, w0, #0xff
    96b0:	and	x0, x0, #0xff
    96b4:	cmp	x0, #0x0
    96b8:	b.ne	96ec <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe4>  // b.any
    96bc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    96c0:	add	x1, x0, #0xbe3
    96c4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    96c8:	add	x4, x0, #0xc58
    96cc:	mov	w3, #0x6e                  	// #110
    96d0:	mov	x2, x1
    96d4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    96d8:	add	x1, x0, #0xc18
    96dc:	mov	w0, #0x0                   	// #0
    96e0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    96e4:	mov	w0, #0x1                   	// #1
    96e8:	b	96f0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe8>
    96ec:	mov	w0, #0x0                   	// #0
    96f0:	cmp	w0, #0x0
    96f4:	b.eq	9710 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x108>  // b.none
    96f8:	bl	57d0 <__errno_location@plt>
    96fc:	mov	x1, x0
    9700:	mov	w0, #0x16                  	// #22
    9704:	str	w0, [x1]
    9708:	mov	x0, #0x0                   	// #0
    970c:	b	97c0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1b8>
    9710:	ldr	x0, [sp, #40]
    9714:	ldr	x0, [x0, #16]
    9718:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    971c:	ldr	x0, [sp, #40]
    9720:	ldr	x0, [x0, #8]
    9724:	ldr	x1, [sp, #32]
    9728:	bl	20514 <udev_util_encode_string@@LIBUDEV_183+0x14ce4>
    972c:	cmp	w0, #0x0
    9730:	b.lt	9788 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x180>  // b.tstop
    9734:	b	976c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x164>
    9738:	ldr	x0, [sp, #40]
    973c:	ldr	x0, [x0, #16]
    9740:	ldr	x1, [sp, #48]
    9744:	ldr	x2, [sp, #56]
    9748:	bl	9cdc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6d4>
    974c:	cmp	x0, #0x0
    9750:	b.ne	976c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x164>  // b.any
    9754:	bl	57d0 <__errno_location@plt>
    9758:	mov	x1, x0
    975c:	mov	w0, #0xc                   	// #12
    9760:	str	w0, [x1]
    9764:	mov	x0, #0x0                   	// #0
    9768:	b	97c0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1b8>
    976c:	ldr	x0, [sp, #40]
    9770:	ldr	x0, [x0, #8]
    9774:	add	x2, sp, #0x38
    9778:	add	x1, sp, #0x30
    977c:	bl	20694 <udev_util_encode_string@@LIBUDEV_183+0x14e64>
    9780:	cmp	w0, #0x0
    9784:	b.gt	9738 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x130>
    9788:	ldr	x0, [sp, #40]
    978c:	ldr	x0, [x0, #16]
    9790:	bl	a198 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb90>
    9794:	str	x0, [sp, #64]
    9798:	ldr	x0, [sp, #64]
    979c:	cmp	x0, #0x0
    97a0:	b.ne	97bc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1b4>  // b.any
    97a4:	bl	57d0 <__errno_location@plt>
    97a8:	mov	x1, x0
    97ac:	mov	w0, #0x3d                  	// #61
    97b0:	str	w0, [x1]
    97b4:	mov	x0, #0x0                   	// #0
    97b8:	b	97c0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1b8>
    97bc:	ldr	x0, [sp, #64]
    97c0:	mov	x1, x0
    97c4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    97c8:	ldr	x0, [x0, #4016]
    97cc:	ldr	x2, [sp, #72]
    97d0:	ldr	x0, [x0]
    97d4:	eor	x0, x2, x0
    97d8:	cmp	x0, #0x0
    97dc:	b.eq	97e4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1dc>  // b.none
    97e0:	bl	5390 <__stack_chk_fail@plt>
    97e4:	mov	x0, x1
    97e8:	ldp	x29, x30, [sp], #80
    97ec:	ret
    97f0:	stp	x29, x30, [sp, #-32]!
    97f4:	mov	x29, sp
    97f8:	str	x0, [sp, #24]
    97fc:	ldr	x0, [sp, #24]
    9800:	bl	54b0 <free@plt>
    9804:	mov	x0, #0x0                   	// #0
    9808:	ldp	x29, x30, [sp], #32
    980c:	ret
    9810:	stp	x29, x30, [sp, #-32]!
    9814:	mov	x29, sp
    9818:	str	x0, [sp, #24]
    981c:	ldr	x0, [sp, #24]
    9820:	ldr	x0, [x0]
    9824:	bl	54b0 <free@plt>
    9828:	nop
    982c:	ldp	x29, x30, [sp], #32
    9830:	ret
    9834:	sub	sp, sp, #0x10
    9838:	str	x0, [sp, #8]
    983c:	str	x1, [sp]
    9840:	ldr	x0, [sp]
    9844:	cmp	x0, #0x0
    9848:	cset	w0, ne  // ne = any
    984c:	and	w0, w0, #0xff
    9850:	and	x0, x0, #0xff
    9854:	cmp	x0, #0x0
    9858:	b.eq	989c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x294>  // b.none
    985c:	mov	x2, #0x0                   	// #0
    9860:	ldr	x1, [sp, #8]
    9864:	ldr	x0, [sp]
    9868:	umulh	x0, x1, x0
    986c:	cmp	x0, #0x0
    9870:	b.eq	9878 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x270>  // b.none
    9874:	mov	x2, #0x1                   	// #1
    9878:	mov	x0, x2
    987c:	cmp	x0, #0x0
    9880:	cset	w0, ne  // ne = any
    9884:	and	w0, w0, #0xff
    9888:	and	x0, x0, #0xff
    988c:	cmp	x0, #0x0
    9890:	b.eq	989c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x294>  // b.none
    9894:	mov	w0, #0x1                   	// #1
    9898:	b	98a0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x298>
    989c:	mov	w0, #0x0                   	// #0
    98a0:	and	w0, w0, #0x1
    98a4:	and	w0, w0, #0xff
    98a8:	add	sp, sp, #0x10
    98ac:	ret
    98b0:	stp	x29, x30, [sp, #-32]!
    98b4:	mov	x29, sp
    98b8:	str	x0, [sp, #24]
    98bc:	str	x1, [sp, #16]
    98c0:	ldr	x1, [sp, #16]
    98c4:	ldr	x0, [sp, #24]
    98c8:	bl	9834 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x22c>
    98cc:	and	w0, w0, #0xff
    98d0:	cmp	w0, #0x0
    98d4:	b.eq	98e0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2d8>  // b.none
    98d8:	mov	x0, #0x0                   	// #0
    98dc:	b	98fc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2f4>
    98e0:	ldr	x1, [sp, #24]
    98e4:	ldr	x0, [sp, #16]
    98e8:	mul	x0, x1, x0
    98ec:	cmp	x0, #0x0
    98f0:	b.ne	98f8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2f0>  // b.any
    98f4:	mov	x0, #0x1                   	// #1
    98f8:	bl	5220 <malloc@plt>
    98fc:	ldp	x29, x30, [sp], #32
    9900:	ret
    9904:	stp	x29, x30, [sp, #-32]!
    9908:	mov	x29, sp
    990c:	str	x0, [sp, #24]
    9910:	mov	x2, #0x0                   	// #0
    9914:	mov	x1, #0x0                   	// #0
    9918:	ldr	x0, [sp, #24]
    991c:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
    9920:	ldp	x29, x30, [sp], #32
    9924:	ret
    9928:	stp	x29, x30, [sp, #-32]!
    992c:	mov	x29, sp
    9930:	str	x0, [sp, #24]
    9934:	str	x1, [sp, #16]
    9938:	ldr	x1, [sp, #16]
    993c:	ldr	x0, [sp, #24]
    9940:	bl	29a24 <udev_util_encode_string@@LIBUDEV_183+0x1e1f4>
    9944:	ldp	x29, x30, [sp], #32
    9948:	ret
    994c:	stp	x29, x30, [sp, #-32]!
    9950:	mov	x29, sp
    9954:	str	x0, [sp, #24]
    9958:	str	x1, [sp, #16]
    995c:	ldr	x1, [sp, #16]
    9960:	ldr	x0, [sp, #24]
    9964:	bl	29b98 <udev_util_encode_string@@LIBUDEV_183+0x1e368>
    9968:	ldp	x29, x30, [sp], #32
    996c:	ret
    9970:	stp	x29, x30, [sp, #-32]!
    9974:	mov	x29, sp
    9978:	str	x0, [sp, #24]
    997c:	ldr	x0, [sp, #24]
    9980:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
    9984:	ldp	x29, x30, [sp], #32
    9988:	ret
    998c:	stp	x29, x30, [sp, #-48]!
    9990:	mov	x29, sp
    9994:	str	x0, [sp, #40]
    9998:	str	x1, [sp, #32]
    999c:	str	x2, [sp, #24]
    99a0:	str	x3, [sp, #16]
    99a4:	ldr	x3, [sp, #16]
    99a8:	ldr	x2, [sp, #24]
    99ac:	ldr	x1, [sp, #32]
    99b0:	ldr	x0, [sp, #40]
    99b4:	bl	28328 <udev_util_encode_string@@LIBUDEV_183+0x1caf8>
    99b8:	and	w0, w0, #0xff
    99bc:	ldp	x29, x30, [sp], #48
    99c0:	ret
    99c4:	stp	x29, x30, [sp, #-32]!
    99c8:	mov	x29, sp
    99cc:	str	x0, [sp, #24]
    99d0:	mov	x2, #0x0                   	// #0
    99d4:	mov	w1, #0x1                   	// #1
    99d8:	ldr	x0, [sp, #24]
    99dc:	bl	29d94 <udev_util_encode_string@@LIBUDEV_183+0x1e564>
    99e0:	ldp	x29, x30, [sp], #32
    99e4:	ret
    99e8:	stp	x29, x30, [sp, #-32]!
    99ec:	mov	x29, sp
    99f0:	str	x0, [sp, #24]
    99f4:	mov	x2, #0x0                   	// #0
    99f8:	mov	w1, #0x0                   	// #0
    99fc:	ldr	x0, [sp, #24]
    9a00:	bl	29d94 <udev_util_encode_string@@LIBUDEV_183+0x1e564>
    9a04:	ldp	x29, x30, [sp], #32
    9a08:	ret
    9a0c:	stp	x29, x30, [sp, #-48]!
    9a10:	mov	x29, sp
    9a14:	str	x0, [sp, #40]
    9a18:	str	x1, [sp, #32]
    9a1c:	str	x2, [sp, #24]
    9a20:	str	x3, [sp, #16]
    9a24:	ldr	x0, [sp, #32]
    9a28:	cmp	x0, #0x1
    9a2c:	b.ls	9a8c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x484>  // b.plast
    9a30:	ldr	x0, [sp, #40]
    9a34:	cmp	x0, #0x0
    9a38:	cset	w0, eq  // eq = none
    9a3c:	and	w0, w0, #0xff
    9a40:	and	x0, x0, #0xff
    9a44:	cmp	x0, #0x0
    9a48:	b.eq	9a74 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x46c>  // b.none
    9a4c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9a50:	add	x1, x0, #0xc83
    9a54:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9a58:	add	x4, x0, #0xd38
    9a5c:	mov	w3, #0x2e                  	// #46
    9a60:	mov	x2, x1
    9a64:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9a68:	add	x1, x0, #0xca0
    9a6c:	mov	w0, #0x0                   	// #0
    9a70:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    9a74:	ldr	x3, [sp, #16]
    9a78:	ldr	x2, [sp, #24]
    9a7c:	ldr	x1, [sp, #32]
    9a80:	ldr	x0, [sp, #40]
    9a84:	bl	5140 <qsort@plt>
    9a88:	b	9a90 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x488>
    9a8c:	nop
    9a90:	ldp	x29, x30, [sp], #48
    9a94:	ret
    9a98:	stp	x29, x30, [sp, #-48]!
    9a9c:	mov	x29, sp
    9aa0:	str	x0, [sp, #24]
    9aa4:	ldr	x0, [sp, #24]
    9aa8:	cmp	x0, #0x0
    9aac:	b.ne	9ab8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x4b0>  // b.any
    9ab0:	mov	x0, #0x0                   	// #0
    9ab4:	b	9c44 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x63c>
    9ab8:	ldr	x0, [sp, #24]
    9abc:	ldr	x0, [x0]
    9ac0:	cmp	x0, #0x0
    9ac4:	b.eq	9c24 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x61c>  // b.none
    9ac8:	ldr	x0, [sp, #24]
    9acc:	ldr	x0, [x0]
    9ad0:	ldrb	w0, [x0, #16]
    9ad4:	and	w0, w0, #0x1
    9ad8:	and	w0, w0, #0xff
    9adc:	cmp	w0, #0x0
    9ae0:	b.eq	9b08 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x500>  // b.none
    9ae4:	ldr	x0, [sp, #24]
    9ae8:	ldr	x0, [x0]
    9aec:	ldr	x2, [x0]
    9af0:	ldr	x0, [sp, #24]
    9af4:	ldr	x0, [x0, #8]
    9af8:	mov	x1, x0
    9afc:	mov	x0, x2
    9b00:	bl	994c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x344>
    9b04:	b	9c24 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x61c>
    9b08:	ldr	x0, [sp, #24]
    9b0c:	ldr	x0, [x0]
    9b10:	add	x0, x0, #0x8
    9b14:	str	x0, [sp, #32]
    9b18:	ldr	x0, [sp, #24]
    9b1c:	str	x0, [sp, #40]
    9b20:	ldr	x0, [sp, #40]
    9b24:	cmp	x0, #0x0
    9b28:	cset	w0, eq  // eq = none
    9b2c:	and	w0, w0, #0xff
    9b30:	and	x0, x0, #0xff
    9b34:	cmp	x0, #0x0
    9b38:	b.eq	9b64 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x55c>  // b.none
    9b3c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9b40:	add	x1, x0, #0xcab
    9b44:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9b48:	add	x4, x0, #0xcf0
    9b4c:	mov	w3, #0x2d                  	// #45
    9b50:	mov	x2, x1
    9b54:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9b58:	add	x1, x0, #0xcc8
    9b5c:	mov	w0, #0x0                   	// #0
    9b60:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    9b64:	ldr	x0, [sp, #40]
    9b68:	ldr	x0, [x0, #24]
    9b6c:	cmp	x0, #0x0
    9b70:	b.eq	9b88 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x580>  // b.none
    9b74:	ldr	x0, [sp, #40]
    9b78:	ldr	x0, [x0, #24]
    9b7c:	ldr	x1, [sp, #40]
    9b80:	ldr	x1, [x1, #32]
    9b84:	str	x1, [x0, #32]
    9b88:	ldr	x0, [sp, #40]
    9b8c:	ldr	x0, [x0, #32]
    9b90:	cmp	x0, #0x0
    9b94:	b.eq	9bb0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x5a8>  // b.none
    9b98:	ldr	x0, [sp, #40]
    9b9c:	ldr	x0, [x0, #32]
    9ba0:	ldr	x1, [sp, #40]
    9ba4:	ldr	x1, [x1, #24]
    9ba8:	str	x1, [x0, #24]
    9bac:	b	9c0c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x604>
    9bb0:	ldr	x0, [sp, #32]
    9bb4:	ldr	x0, [x0]
    9bb8:	ldr	x1, [sp, #40]
    9bbc:	cmp	x1, x0
    9bc0:	cset	w0, ne  // ne = any
    9bc4:	and	w0, w0, #0xff
    9bc8:	and	x0, x0, #0xff
    9bcc:	cmp	x0, #0x0
    9bd0:	b.eq	9bfc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x5f4>  // b.none
    9bd4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9bd8:	add	x1, x0, #0xcab
    9bdc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9be0:	add	x4, x0, #0xcf0
    9be4:	mov	w3, #0x2d                  	// #45
    9be8:	mov	x2, x1
    9bec:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9bf0:	add	x1, x0, #0xcd0
    9bf4:	mov	w0, #0x0                   	// #0
    9bf8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    9bfc:	ldr	x0, [sp, #40]
    9c00:	ldr	x1, [x0, #24]
    9c04:	ldr	x0, [sp, #32]
    9c08:	str	x1, [x0]
    9c0c:	ldr	x0, [sp, #40]
    9c10:	str	xzr, [x0, #32]
    9c14:	ldr	x0, [sp, #40]
    9c18:	ldr	x1, [x0, #32]
    9c1c:	ldr	x0, [sp, #40]
    9c20:	str	x1, [x0, #24]
    9c24:	ldr	x0, [sp, #24]
    9c28:	ldr	x0, [x0, #8]
    9c2c:	bl	54b0 <free@plt>
    9c30:	ldr	x0, [sp, #24]
    9c34:	ldr	x0, [x0, #16]
    9c38:	bl	54b0 <free@plt>
    9c3c:	ldr	x0, [sp, #24]
    9c40:	bl	97f0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1e8>
    9c44:	ldp	x29, x30, [sp], #48
    9c48:	ret
    9c4c:	stp	x29, x30, [sp, #-32]!
    9c50:	mov	x29, sp
    9c54:	str	x0, [sp, #24]
    9c58:	ldr	x0, [sp, #24]
    9c5c:	ldr	x0, [x0]
    9c60:	cmp	x0, #0x0
    9c64:	b.eq	9c74 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x66c>  // b.none
    9c68:	ldr	x0, [sp, #24]
    9c6c:	ldr	x0, [x0]
    9c70:	bl	9a98 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x490>
    9c74:	nop
    9c78:	ldp	x29, x30, [sp], #32
    9c7c:	ret
    9c80:	stp	x29, x30, [sp, #-64]!
    9c84:	mov	x29, sp
    9c88:	strb	w0, [sp, #31]
    9c8c:	mov	x1, #0x1                   	// #1
    9c90:	mov	x0, #0x18                  	// #24
    9c94:	bl	98b0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2a8>
    9c98:	str	x0, [sp, #32]
    9c9c:	ldr	x0, [sp, #32]
    9ca0:	cmp	x0, #0x0
    9ca4:	b.ne	9cb0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6a8>  // b.any
    9ca8:	mov	x0, #0x0                   	// #0
    9cac:	b	9cd4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x6cc>
    9cb0:	ldr	x0, [sp, #32]
    9cb4:	stp	xzr, xzr, [x0]
    9cb8:	str	xzr, [x0, #16]
    9cbc:	ldr	x1, [sp, #32]
    9cc0:	ldrb	w0, [x1, #16]
    9cc4:	ldrb	w2, [sp, #31]
    9cc8:	bfxil	w0, w2, #0, #1
    9ccc:	strb	w0, [x1, #16]
    9cd0:	ldr	x0, [sp, #32]
    9cd4:	ldp	x29, x30, [sp], #64
    9cd8:	ret
    9cdc:	stp	x29, x30, [sp, #-208]!
    9ce0:	mov	x29, sp
    9ce4:	str	x19, [sp, #16]
    9ce8:	str	x0, [sp, #56]
    9cec:	str	x1, [sp, #48]
    9cf0:	str	x2, [sp, #40]
    9cf4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    9cf8:	ldr	x0, [x0, #4016]
    9cfc:	ldr	x1, [x0]
    9d00:	str	x1, [sp, #200]
    9d04:	mov	x1, #0x0                   	// #0
    9d08:	str	xzr, [sp, #72]
    9d0c:	str	xzr, [sp, #80]
    9d10:	str	xzr, [sp, #160]
    9d14:	ldr	x0, [sp, #56]
    9d18:	cmp	x0, #0x0
    9d1c:	cset	w0, eq  // eq = none
    9d20:	and	w0, w0, #0xff
    9d24:	and	x0, x0, #0xff
    9d28:	cmp	x0, #0x0
    9d2c:	b.eq	9d58 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x750>  // b.none
    9d30:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9d34:	add	x1, x0, #0xcab
    9d38:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9d3c:	add	x4, x0, #0xd08
    9d40:	mov	w3, #0x4b                  	// #75
    9d44:	mov	x2, x1
    9d48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9d4c:	add	x1, x0, #0xce0
    9d50:	mov	w0, #0x0                   	// #0
    9d54:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    9d58:	ldr	x0, [sp, #48]
    9d5c:	bl	5370 <strdup@plt>
    9d60:	str	x0, [sp, #80]
    9d64:	ldr	x0, [sp, #80]
    9d68:	cmp	x0, #0x0
    9d6c:	b.ne	9d78 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x770>  // b.any
    9d70:	mov	x19, #0x0                   	// #0
    9d74:	b	a018 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa10>
    9d78:	ldr	x0, [sp, #40]
    9d7c:	cmp	x0, #0x0
    9d80:	b.eq	9da4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x79c>  // b.none
    9d84:	ldr	x0, [sp, #40]
    9d88:	bl	5370 <strdup@plt>
    9d8c:	str	x0, [sp, #160]
    9d90:	ldr	x0, [sp, #160]
    9d94:	cmp	x0, #0x0
    9d98:	b.ne	9da4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x79c>  // b.any
    9d9c:	mov	x19, #0x0                   	// #0
    9da0:	b	a018 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa10>
    9da4:	mov	x1, #0x1                   	// #1
    9da8:	mov	x0, #0x28                  	// #40
    9dac:	bl	98b0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2a8>
    9db0:	str	x0, [sp, #72]
    9db4:	ldr	x0, [sp, #72]
    9db8:	cmp	x0, #0x0
    9dbc:	b.ne	9dc8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x7c0>  // b.any
    9dc0:	mov	x19, #0x0                   	// #0
    9dc4:	b	a018 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa10>
    9dc8:	ldr	x0, [sp, #72]
    9dcc:	ldr	x1, [sp, #80]
    9dd0:	str	x1, [sp, #104]
    9dd4:	str	xzr, [sp, #80]
    9dd8:	ldr	x2, [sp, #104]
    9ddc:	ldr	x1, [sp, #160]
    9de0:	str	x1, [sp, #112]
    9de4:	str	xzr, [sp, #160]
    9de8:	ldr	x1, [sp, #112]
    9dec:	stp	xzr, xzr, [x0]
    9df0:	stp	xzr, xzr, [x0, #16]
    9df4:	str	xzr, [x0, #32]
    9df8:	ldr	x3, [sp, #56]
    9dfc:	str	x3, [x0]
    9e00:	str	x2, [x0, #8]
    9e04:	str	x1, [x0, #16]
    9e08:	ldr	x0, [sp, #56]
    9e0c:	ldrb	w0, [x0, #16]
    9e10:	and	w0, w0, #0x1
    9e14:	and	w0, w0, #0xff
    9e18:	cmp	w0, #0x0
    9e1c:	b.eq	9ebc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x8b4>  // b.none
    9e20:	ldr	x2, [sp, #56]
    9e24:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    9e28:	ldr	x1, [x0, #4064]
    9e2c:	mov	x0, x2
    9e30:	bl	286f0 <udev_util_encode_string@@LIBUDEV_183+0x1cec0>
    9e34:	str	w0, [sp, #68]
    9e38:	ldr	w0, [sp, #68]
    9e3c:	cmp	w0, #0x0
    9e40:	b.ge	9e4c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x844>  // b.tcont
    9e44:	mov	x19, #0x0                   	// #0
    9e48:	b	a018 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa10>
    9e4c:	ldr	x0, [sp, #56]
    9e50:	ldr	x2, [x0]
    9e54:	ldr	x0, [sp, #72]
    9e58:	ldr	x0, [x0, #8]
    9e5c:	mov	x1, x0
    9e60:	mov	x0, x2
    9e64:	bl	9928 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x320>
    9e68:	bl	9a98 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x490>
    9e6c:	ldr	x0, [sp, #56]
    9e70:	ldr	x3, [x0]
    9e74:	ldr	x0, [sp, #72]
    9e78:	ldr	x0, [x0, #8]
    9e7c:	ldr	x1, [sp, #72]
    9e80:	mov	x2, x1
    9e84:	mov	x1, x0
    9e88:	mov	x0, x3
    9e8c:	bl	2969c <udev_util_encode_string@@LIBUDEV_183+0x1de6c>
    9e90:	str	w0, [sp, #68]
    9e94:	ldr	w0, [sp, #68]
    9e98:	cmp	w0, #0x0
    9e9c:	b.ge	9ea8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x8a0>  // b.tcont
    9ea0:	mov	x19, #0x0                   	// #0
    9ea4:	b	a018 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa10>
    9ea8:	ldr	x0, [sp, #56]
    9eac:	ldrb	w1, [x0, #16]
    9eb0:	and	w1, w1, #0xfffffffd
    9eb4:	strb	w1, [x0, #16]
    9eb8:	b	a004 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x9fc>
    9ebc:	ldr	x0, [sp, #56]
    9ec0:	add	x0, x0, #0x8
    9ec4:	str	x0, [sp, #120]
    9ec8:	ldr	x0, [sp, #120]
    9ecc:	ldr	x0, [x0]
    9ed0:	str	x0, [sp, #96]
    9ed4:	ldr	x0, [sp, #96]
    9ed8:	cmp	x0, #0x0
    9edc:	b.ne	9ef4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x8ec>  // b.any
    9ee0:	str	xzr, [sp, #88]
    9ee4:	b	9f0c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x904>
    9ee8:	ldr	x0, [sp, #96]
    9eec:	ldr	x0, [x0, #24]
    9ef0:	str	x0, [sp, #96]
    9ef4:	ldr	x0, [sp, #96]
    9ef8:	ldr	x0, [x0, #24]
    9efc:	cmp	x0, #0x0
    9f00:	b.ne	9ee8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x8e0>  // b.any
    9f04:	ldr	x0, [sp, #96]
    9f08:	str	x0, [sp, #88]
    9f0c:	ldr	x0, [sp, #120]
    9f10:	str	x0, [sp, #128]
    9f14:	ldr	x0, [sp, #88]
    9f18:	str	x0, [sp, #136]
    9f1c:	ldr	x0, [sp, #72]
    9f20:	str	x0, [sp, #144]
    9f24:	ldr	x0, [sp, #144]
    9f28:	cmp	x0, #0x0
    9f2c:	cset	w0, eq  // eq = none
    9f30:	and	w0, w0, #0xff
    9f34:	and	x0, x0, #0xff
    9f38:	cmp	x0, #0x0
    9f3c:	b.eq	9f68 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x960>  // b.none
    9f40:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9f44:	add	x1, x0, #0xcab
    9f48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9f4c:	add	x4, x0, #0xd08
    9f50:	mov	w3, #0x6e                  	// #110
    9f54:	mov	x2, x1
    9f58:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    9f5c:	add	x1, x0, #0xce8
    9f60:	mov	w0, #0x0                   	// #0
    9f64:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    9f68:	ldr	x0, [sp, #136]
    9f6c:	cmp	x0, #0x0
    9f70:	b.ne	9fbc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x9b4>  // b.any
    9f74:	ldr	x0, [sp, #128]
    9f78:	ldr	x1, [x0]
    9f7c:	ldr	x0, [sp, #144]
    9f80:	str	x1, [x0, #24]
    9f84:	ldr	x0, [sp, #144]
    9f88:	ldr	x0, [x0, #24]
    9f8c:	cmp	x0, #0x0
    9f90:	b.eq	9fa4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x99c>  // b.none
    9f94:	ldr	x0, [sp, #144]
    9f98:	ldr	x0, [x0, #24]
    9f9c:	ldr	x1, [sp, #144]
    9fa0:	str	x1, [x0, #32]
    9fa4:	ldr	x0, [sp, #144]
    9fa8:	str	xzr, [x0, #32]
    9fac:	ldr	x0, [sp, #128]
    9fb0:	ldr	x1, [sp, #144]
    9fb4:	str	x1, [x0]
    9fb8:	b	a004 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x9fc>
    9fbc:	ldr	x0, [sp, #136]
    9fc0:	ldr	x1, [x0, #24]
    9fc4:	ldr	x0, [sp, #144]
    9fc8:	str	x1, [x0, #24]
    9fcc:	ldr	x0, [sp, #144]
    9fd0:	ldr	x0, [x0, #24]
    9fd4:	cmp	x0, #0x0
    9fd8:	b.eq	9fec <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x9e4>  // b.none
    9fdc:	ldr	x0, [sp, #144]
    9fe0:	ldr	x0, [x0, #24]
    9fe4:	ldr	x1, [sp, #144]
    9fe8:	str	x1, [x0, #32]
    9fec:	ldr	x0, [sp, #144]
    9ff0:	ldr	x1, [sp, #136]
    9ff4:	str	x1, [x0, #32]
    9ff8:	ldr	x0, [sp, #136]
    9ffc:	ldr	x1, [sp, #144]
    a000:	str	x1, [x0, #24]
    a004:	ldr	x0, [sp, #72]
    a008:	str	x0, [sp, #152]
    a00c:	str	xzr, [sp, #72]
    a010:	ldr	x19, [sp, #152]
    a014:	nop
    a018:	add	x0, sp, #0xa0
    a01c:	bl	9810 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x208>
    a020:	add	x0, sp, #0x50
    a024:	bl	9810 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x208>
    a028:	add	x0, sp, #0x48
    a02c:	bl	9c4c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x644>
    a030:	mov	x1, x19
    a034:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    a038:	ldr	x0, [x0, #4016]
    a03c:	ldr	x2, [sp, #200]
    a040:	ldr	x0, [x0]
    a044:	eor	x0, x2, x0
    a048:	cmp	x0, #0x0
    a04c:	b.eq	a054 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa4c>  // b.none
    a050:	bl	5390 <__stack_chk_fail@plt>
    a054:	mov	x0, x1
    a058:	ldr	x19, [sp, #16]
    a05c:	ldp	x29, x30, [sp], #208
    a060:	ret
    a064:	stp	x29, x30, [sp, #-64]!
    a068:	mov	x29, sp
    a06c:	str	x0, [sp, #24]
    a070:	ldr	x0, [sp, #24]
    a074:	cmp	x0, #0x0
    a078:	b.eq	a10c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb04>  // b.none
    a07c:	ldr	x0, [sp, #24]
    a080:	ldrb	w0, [x0, #16]
    a084:	and	w0, w0, #0x1
    a088:	and	w0, w0, #0xff
    a08c:	cmp	w0, #0x0
    a090:	b.eq	a0d0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xac8>  // b.none
    a094:	b	a0a0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa98>
    a098:	ldr	x0, [sp, #56]
    a09c:	bl	9a98 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x490>
    a0a0:	ldr	x0, [sp, #24]
    a0a4:	ldr	x0, [x0]
    a0a8:	bl	99c4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x3bc>
    a0ac:	str	x0, [sp, #56]
    a0b0:	ldr	x0, [sp, #56]
    a0b4:	cmp	x0, #0x0
    a0b8:	b.ne	a098 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa90>  // b.any
    a0bc:	ldr	x0, [sp, #24]
    a0c0:	ldrb	w1, [x0, #16]
    a0c4:	and	w1, w1, #0xfffffffd
    a0c8:	strb	w1, [x0, #16]
    a0cc:	b	a110 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb08>
    a0d0:	ldr	x0, [sp, #24]
    a0d4:	ldr	x0, [x0, #8]
    a0d8:	str	x0, [sp, #40]
    a0dc:	b	a0f0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xae8>
    a0e0:	ldr	x0, [sp, #40]
    a0e4:	bl	9a98 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x490>
    a0e8:	ldr	x0, [sp, #48]
    a0ec:	str	x0, [sp, #40]
    a0f0:	ldr	x0, [sp, #40]
    a0f4:	cmp	x0, #0x0
    a0f8:	b.eq	a110 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb08>  // b.none
    a0fc:	ldr	x0, [sp, #40]
    a100:	ldr	x0, [x0, #24]
    a104:	str	x0, [sp, #48]
    a108:	b	a0e0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xad8>
    a10c:	nop
    a110:	ldp	x29, x30, [sp], #64
    a114:	ret
    a118:	stp	x29, x30, [sp, #-32]!
    a11c:	mov	x29, sp
    a120:	str	x0, [sp, #24]
    a124:	ldr	x0, [sp, #24]
    a128:	cmp	x0, #0x0
    a12c:	b.ne	a138 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb30>  // b.any
    a130:	mov	x0, #0x0                   	// #0
    a134:	b	a154 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xb4c>
    a138:	ldr	x0, [sp, #24]
    a13c:	bl	a064 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xa5c>
    a140:	ldr	x0, [sp, #24]
    a144:	ldr	x0, [x0]
    a148:	bl	9904 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2fc>
    a14c:	ldr	x0, [sp, #24]
    a150:	bl	97f0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x1e8>
    a154:	ldp	x29, x30, [sp], #32
    a158:	ret
    a15c:	stp	x29, x30, [sp, #-32]!
    a160:	mov	x29, sp
    a164:	str	x0, [sp, #24]
    a168:	str	x1, [sp, #16]
    a16c:	ldr	x0, [sp, #24]
    a170:	ldr	x0, [x0]
    a174:	ldr	x2, [x0, #8]
    a178:	ldr	x0, [sp, #16]
    a17c:	ldr	x0, [x0]
    a180:	ldr	x0, [x0, #8]
    a184:	mov	x1, x0
    a188:	mov	x0, x2
    a18c:	bl	5440 <strcmp@plt>
    a190:	ldp	x29, x30, [sp], #32
    a194:	ret
    a198:	stp	x29, x30, [sp, #-160]!
    a19c:	mov	x29, sp
    a1a0:	stp	x19, x20, [sp, #16]
    a1a4:	str	x0, [sp, #40]
    a1a8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    a1ac:	ldr	x0, [x0, #4016]
    a1b0:	ldr	x1, [x0]
    a1b4:	str	x1, [sp, #152]
    a1b8:	mov	x1, #0x0                   	// #0
    a1bc:	ldr	x0, [sp, #40]
    a1c0:	cmp	x0, #0x0
    a1c4:	b.ne	a1d0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xbc8>  // b.any
    a1c8:	mov	x19, #0x0                   	// #0
    a1cc:	b	a480 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe78>
    a1d0:	ldr	x0, [sp, #40]
    a1d4:	ldrb	w0, [x0, #16]
    a1d8:	and	w0, w0, #0x1
    a1dc:	and	w0, w0, #0xff
    a1e0:	cmp	w0, #0x0
    a1e4:	b.eq	a478 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe70>  // b.none
    a1e8:	ldr	x0, [sp, #40]
    a1ec:	ldrb	w0, [x0, #16]
    a1f0:	ubfx	x0, x0, #1, #1
    a1f4:	and	w0, w0, #0xff
    a1f8:	eor	w0, w0, #0x1
    a1fc:	and	w0, w0, #0xff
    a200:	cmp	w0, #0x0
    a204:	b.eq	a478 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe70>  // b.none
    a208:	ldr	x0, [sp, #40]
    a20c:	str	xzr, [x0, #8]
    a210:	ldr	x0, [sp, #40]
    a214:	ldr	x0, [x0]
    a218:	bl	9970 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x368>
    a21c:	mov	w0, w0
    a220:	str	x0, [sp, #88]
    a224:	ldr	x0, [sp, #88]
    a228:	cmp	x0, #0x0
    a22c:	b.eq	a468 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe60>  // b.none
    a230:	ldr	x0, [sp, #88]
    a234:	cmp	x0, #0x1
    a238:	b.ne	a2e4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xcdc>  // b.any
    a23c:	ldr	x0, [sp, #40]
    a240:	add	x0, x0, #0x8
    a244:	str	x0, [sp, #120]
    a248:	ldr	x0, [sp, #40]
    a24c:	ldr	x0, [x0]
    a250:	bl	99e8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x3e0>
    a254:	str	x0, [sp, #128]
    a258:	ldr	x0, [sp, #128]
    a25c:	cmp	x0, #0x0
    a260:	cset	w0, eq  // eq = none
    a264:	and	w0, w0, #0xff
    a268:	and	x0, x0, #0xff
    a26c:	cmp	x0, #0x0
    a270:	b.eq	a29c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xc94>  // b.none
    a274:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a278:	add	x1, x0, #0xcab
    a27c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a280:	add	x4, x0, #0xd20
    a284:	mov	w3, #0x9c                  	// #156
    a288:	mov	x2, x1
    a28c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a290:	add	x1, x0, #0xcc8
    a294:	mov	w0, #0x0                   	// #0
    a298:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    a29c:	ldr	x0, [sp, #120]
    a2a0:	ldr	x1, [x0]
    a2a4:	ldr	x0, [sp, #128]
    a2a8:	str	x1, [x0, #24]
    a2ac:	ldr	x0, [sp, #128]
    a2b0:	ldr	x0, [x0, #24]
    a2b4:	cmp	x0, #0x0
    a2b8:	b.eq	a2cc <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xcc4>  // b.none
    a2bc:	ldr	x0, [sp, #128]
    a2c0:	ldr	x0, [x0, #24]
    a2c4:	ldr	x1, [sp, #128]
    a2c8:	str	x1, [x0, #32]
    a2cc:	ldr	x0, [sp, #128]
    a2d0:	str	xzr, [x0, #32]
    a2d4:	ldr	x0, [sp, #120]
    a2d8:	ldr	x1, [sp, #128]
    a2dc:	str	x1, [x0]
    a2e0:	b	a468 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe60>
    a2e4:	str	xzr, [sp, #56]
    a2e8:	ldr	x1, [sp, #88]
    a2ec:	mov	x0, #0x8                   	// #8
    a2f0:	bl	98b0 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x2a8>
    a2f4:	str	x0, [sp, #56]
    a2f8:	ldr	x0, [sp, #56]
    a2fc:	cmp	x0, #0x0
    a300:	b.ne	a310 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xd08>  // b.any
    a304:	mov	x19, #0x0                   	// #0
    a308:	mov	w20, #0x0                   	// #0
    a30c:	b	a458 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe50>
    a310:	ldr	x0, [sp, #56]
    a314:	str	x0, [sp, #72]
    a318:	mov	w0, #0xfffffffe            	// #-2
    a31c:	str	w0, [sp, #136]
    a320:	str	xzr, [sp, #144]
    a324:	b	a33c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xd34>
    a328:	ldr	x0, [sp, #72]
    a32c:	add	x1, x0, #0x8
    a330:	str	x1, [sp, #72]
    a334:	ldr	x1, [sp, #64]
    a338:	str	x1, [x0]
    a33c:	ldr	x0, [sp, #40]
    a340:	ldr	x0, [x0]
    a344:	add	x2, sp, #0x40
    a348:	add	x1, sp, #0x88
    a34c:	mov	x3, #0x0                   	// #0
    a350:	bl	998c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x384>
    a354:	and	w0, w0, #0xff
    a358:	cmp	w0, #0x0
    a35c:	b.ne	a328 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xd20>  // b.any
    a360:	adrp	x0, a000 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x9f8>
    a364:	add	x0, x0, #0x15c
    a368:	str	x0, [sp, #96]
    a36c:	ldr	x0, [sp, #56]
    a370:	ldr	x3, [sp, #96]
    a374:	mov	x2, #0x8                   	// #8
    a378:	ldr	x1, [sp, #88]
    a37c:	bl	9a0c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x404>
    a380:	ldr	x0, [sp, #88]
    a384:	str	x0, [sp, #80]
    a388:	b	a448 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe40>
    a38c:	ldr	x0, [sp, #40]
    a390:	add	x0, x0, #0x8
    a394:	str	x0, [sp, #104]
    a398:	ldr	x1, [sp, #56]
    a39c:	ldr	x0, [sp, #80]
    a3a0:	lsl	x0, x0, #3
    a3a4:	sub	x0, x0, #0x8
    a3a8:	add	x0, x1, x0
    a3ac:	ldr	x0, [x0]
    a3b0:	str	x0, [sp, #112]
    a3b4:	ldr	x0, [sp, #112]
    a3b8:	cmp	x0, #0x0
    a3bc:	cset	w0, eq  // eq = none
    a3c0:	and	w0, w0, #0xff
    a3c4:	and	x0, x0, #0xff
    a3c8:	cmp	x0, #0x0
    a3cc:	b.eq	a3f8 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xdf0>  // b.none
    a3d0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a3d4:	add	x1, x0, #0xcab
    a3d8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a3dc:	add	x4, x0, #0xd20
    a3e0:	mov	w3, #0xae                  	// #174
    a3e4:	mov	x2, x1
    a3e8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a3ec:	add	x1, x0, #0xcc8
    a3f0:	mov	w0, #0x0                   	// #0
    a3f4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    a3f8:	ldr	x0, [sp, #104]
    a3fc:	ldr	x1, [x0]
    a400:	ldr	x0, [sp, #112]
    a404:	str	x1, [x0, #24]
    a408:	ldr	x0, [sp, #112]
    a40c:	ldr	x0, [x0, #24]
    a410:	cmp	x0, #0x0
    a414:	b.eq	a428 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe20>  // b.none
    a418:	ldr	x0, [sp, #112]
    a41c:	ldr	x0, [x0, #24]
    a420:	ldr	x1, [sp, #112]
    a424:	str	x1, [x0, #32]
    a428:	ldr	x0, [sp, #112]
    a42c:	str	xzr, [x0, #32]
    a430:	ldr	x0, [sp, #104]
    a434:	ldr	x1, [sp, #112]
    a438:	str	x1, [x0]
    a43c:	ldr	x0, [sp, #80]
    a440:	sub	x0, x0, #0x1
    a444:	str	x0, [sp, #80]
    a448:	ldr	x0, [sp, #80]
    a44c:	cmp	x0, #0x0
    a450:	b.ne	a38c <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xd84>  // b.any
    a454:	mov	w20, #0x1                   	// #1
    a458:	add	x0, sp, #0x38
    a45c:	bl	9810 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x208>
    a460:	cmp	w20, #0x1
    a464:	b.ne	a480 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe78>  // b.any
    a468:	ldr	x0, [sp, #40]
    a46c:	ldrb	w1, [x0, #16]
    a470:	orr	w1, w1, #0x2
    a474:	strb	w1, [x0, #16]
    a478:	ldr	x0, [sp, #40]
    a47c:	ldr	x19, [x0, #8]
    a480:	mov	x1, x19
    a484:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    a488:	ldr	x0, [x0, #4016]
    a48c:	ldr	x2, [sp, #152]
    a490:	ldr	x0, [x0]
    a494:	eor	x0, x2, x0
    a498:	cmp	x0, #0x0
    a49c:	b.eq	a4a4 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0xe9c>  // b.none
    a4a0:	bl	5390 <__stack_chk_fail@plt>
    a4a4:	mov	x0, x1
    a4a8:	ldp	x19, x20, [sp, #16]
    a4ac:	ldp	x29, x30, [sp], #160
    a4b0:	ret

000000000000a4b4 <udev_list_entry_get_next@@LIBUDEV_183>:
    a4b4:	sub	sp, sp, #0x10
    a4b8:	str	x0, [sp, #8]
    a4bc:	ldr	x0, [sp, #8]
    a4c0:	cmp	x0, #0x0
    a4c4:	b.ne	a4d0 <udev_list_entry_get_next@@LIBUDEV_183+0x1c>  // b.any
    a4c8:	mov	x0, #0x0                   	// #0
    a4cc:	b	a520 <udev_list_entry_get_next@@LIBUDEV_183+0x6c>
    a4d0:	ldr	x0, [sp, #8]
    a4d4:	ldr	x0, [x0]
    a4d8:	ldrb	w0, [x0, #16]
    a4dc:	and	w0, w0, #0x1
    a4e0:	and	w0, w0, #0xff
    a4e4:	cmp	w0, #0x0
    a4e8:	b.eq	a518 <udev_list_entry_get_next@@LIBUDEV_183+0x64>  // b.none
    a4ec:	ldr	x0, [sp, #8]
    a4f0:	ldr	x0, [x0]
    a4f4:	ldrb	w0, [x0, #16]
    a4f8:	ubfx	x0, x0, #1, #1
    a4fc:	and	w0, w0, #0xff
    a500:	eor	w0, w0, #0x1
    a504:	and	w0, w0, #0xff
    a508:	cmp	w0, #0x0
    a50c:	b.eq	a518 <udev_list_entry_get_next@@LIBUDEV_183+0x64>  // b.none
    a510:	mov	x0, #0x0                   	// #0
    a514:	b	a520 <udev_list_entry_get_next@@LIBUDEV_183+0x6c>
    a518:	ldr	x0, [sp, #8]
    a51c:	ldr	x0, [x0, #24]
    a520:	add	sp, sp, #0x10
    a524:	ret

000000000000a528 <udev_list_entry_get_by_name@@LIBUDEV_183>:
    a528:	stp	x29, x30, [sp, #-32]!
    a52c:	mov	x29, sp
    a530:	str	x0, [sp, #24]
    a534:	str	x1, [sp, #16]
    a538:	ldr	x0, [sp, #24]
    a53c:	cmp	x0, #0x0
    a540:	b.ne	a54c <udev_list_entry_get_by_name@@LIBUDEV_183+0x24>  // b.any
    a544:	mov	x0, #0x0                   	// #0
    a548:	b	a5b0 <udev_list_entry_get_by_name@@LIBUDEV_183+0x88>
    a54c:	ldr	x0, [sp, #24]
    a550:	ldr	x0, [x0]
    a554:	ldrb	w0, [x0, #16]
    a558:	ubfx	x0, x0, #0, #1
    a55c:	and	w0, w0, #0xff
    a560:	eor	w0, w0, #0x1
    a564:	and	w0, w0, #0xff
    a568:	cmp	w0, #0x0
    a56c:	b.ne	a594 <udev_list_entry_get_by_name@@LIBUDEV_183+0x6c>  // b.any
    a570:	ldr	x0, [sp, #24]
    a574:	ldr	x0, [x0]
    a578:	ldrb	w0, [x0, #16]
    a57c:	ubfx	x0, x0, #1, #1
    a580:	and	w0, w0, #0xff
    a584:	eor	w0, w0, #0x1
    a588:	and	w0, w0, #0xff
    a58c:	cmp	w0, #0x0
    a590:	b.eq	a59c <udev_list_entry_get_by_name@@LIBUDEV_183+0x74>  // b.none
    a594:	mov	x0, #0x0                   	// #0
    a598:	b	a5b0 <udev_list_entry_get_by_name@@LIBUDEV_183+0x88>
    a59c:	ldr	x0, [sp, #24]
    a5a0:	ldr	x0, [x0]
    a5a4:	ldr	x0, [x0]
    a5a8:	ldr	x1, [sp, #16]
    a5ac:	bl	9928 <udev_hwdb_get_properties_list_entry@@LIBUDEV_196+0x320>
    a5b0:	ldp	x29, x30, [sp], #32
    a5b4:	ret

000000000000a5b8 <udev_list_entry_get_name@@LIBUDEV_183>:
    a5b8:	sub	sp, sp, #0x10
    a5bc:	str	x0, [sp, #8]
    a5c0:	ldr	x0, [sp, #8]
    a5c4:	cmp	x0, #0x0
    a5c8:	b.ne	a5d4 <udev_list_entry_get_name@@LIBUDEV_183+0x1c>  // b.any
    a5cc:	mov	x0, #0x0                   	// #0
    a5d0:	b	a5dc <udev_list_entry_get_name@@LIBUDEV_183+0x24>
    a5d4:	ldr	x0, [sp, #8]
    a5d8:	ldr	x0, [x0, #8]
    a5dc:	add	sp, sp, #0x10
    a5e0:	ret

000000000000a5e4 <udev_list_entry_get_value@@LIBUDEV_183>:
    a5e4:	sub	sp, sp, #0x10
    a5e8:	str	x0, [sp, #8]
    a5ec:	ldr	x0, [sp, #8]
    a5f0:	cmp	x0, #0x0
    a5f4:	b.ne	a600 <udev_list_entry_get_value@@LIBUDEV_183+0x1c>  // b.any
    a5f8:	mov	x0, #0x0                   	// #0
    a5fc:	b	a608 <udev_list_entry_get_value@@LIBUDEV_183+0x24>
    a600:	ldr	x0, [sp, #8]
    a604:	ldr	x0, [x0, #16]
    a608:	add	sp, sp, #0x10
    a60c:	ret
    a610:	stp	x29, x30, [sp, #-32]!
    a614:	mov	x29, sp
    a618:	str	x0, [sp, #24]
    a61c:	ldr	x0, [sp, #24]
    a620:	bl	54b0 <free@plt>
    a624:	mov	x0, #0x0                   	// #0
    a628:	ldp	x29, x30, [sp], #32
    a62c:	ret
    a630:	sub	sp, sp, #0x10
    a634:	str	x0, [sp, #8]
    a638:	str	x1, [sp]
    a63c:	ldr	x0, [sp]
    a640:	cmp	x0, #0x0
    a644:	cset	w0, ne  // ne = any
    a648:	and	w0, w0, #0xff
    a64c:	and	x0, x0, #0xff
    a650:	cmp	x0, #0x0
    a654:	b.eq	a698 <udev_list_entry_get_value@@LIBUDEV_183+0xb4>  // b.none
    a658:	mov	x2, #0x0                   	// #0
    a65c:	ldr	x1, [sp, #8]
    a660:	ldr	x0, [sp]
    a664:	umulh	x0, x1, x0
    a668:	cmp	x0, #0x0
    a66c:	b.eq	a674 <udev_list_entry_get_value@@LIBUDEV_183+0x90>  // b.none
    a670:	mov	x2, #0x1                   	// #1
    a674:	mov	x0, x2
    a678:	cmp	x0, #0x0
    a67c:	cset	w0, ne  // ne = any
    a680:	and	w0, w0, #0xff
    a684:	and	x0, x0, #0xff
    a688:	cmp	x0, #0x0
    a68c:	b.eq	a698 <udev_list_entry_get_value@@LIBUDEV_183+0xb4>  // b.none
    a690:	mov	w0, #0x1                   	// #1
    a694:	b	a69c <udev_list_entry_get_value@@LIBUDEV_183+0xb8>
    a698:	mov	w0, #0x0                   	// #0
    a69c:	and	w0, w0, #0x1
    a6a0:	and	w0, w0, #0xff
    a6a4:	add	sp, sp, #0x10
    a6a8:	ret
    a6ac:	stp	x29, x30, [sp, #-32]!
    a6b0:	mov	x29, sp
    a6b4:	str	x0, [sp, #24]
    a6b8:	str	x1, [sp, #16]
    a6bc:	ldr	x1, [sp, #16]
    a6c0:	ldr	x0, [sp, #24]
    a6c4:	bl	a630 <udev_list_entry_get_value@@LIBUDEV_183+0x4c>
    a6c8:	and	w0, w0, #0xff
    a6cc:	cmp	w0, #0x0
    a6d0:	b.eq	a6dc <udev_list_entry_get_value@@LIBUDEV_183+0xf8>  // b.none
    a6d4:	mov	x0, #0x0                   	// #0
    a6d8:	b	a6f8 <udev_list_entry_get_value@@LIBUDEV_183+0x114>
    a6dc:	ldr	x1, [sp, #24]
    a6e0:	ldr	x0, [sp, #16]
    a6e4:	mul	x0, x1, x0
    a6e8:	cmp	x0, #0x0
    a6ec:	b.ne	a6f4 <udev_list_entry_get_value@@LIBUDEV_183+0x110>  // b.any
    a6f0:	mov	x0, #0x1                   	// #1
    a6f4:	bl	5220 <malloc@plt>
    a6f8:	ldp	x29, x30, [sp], #32
    a6fc:	ret
    a700:	stp	x29, x30, [sp, #-32]!
    a704:	mov	x29, sp
    a708:	str	x0, [sp, #24]
    a70c:	ldr	x0, [sp, #24]
    a710:	ldr	x0, [x0]
    a714:	cmp	x0, #0x0
    a718:	b.eq	a728 <udev_list_entry_get_value@@LIBUDEV_183+0x144>  // b.none
    a71c:	ldr	x0, [sp, #24]
    a720:	ldr	x0, [x0]
    a724:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    a728:	nop
    a72c:	ldp	x29, x30, [sp], #32
    a730:	ret
    a734:	stp	x29, x30, [sp, #-32]!
    a738:	mov	x29, sp
    a73c:	str	x0, [sp, #24]
    a740:	ldr	x0, [sp, #24]
    a744:	ldr	x0, [x0]
    a748:	cmp	x0, #0x0
    a74c:	b.eq	a75c <udev_list_entry_get_value@@LIBUDEV_183+0x178>  // b.none
    a750:	ldr	x0, [sp, #24]
    a754:	ldr	x0, [x0]
    a758:	bl	10c9c <udev_util_encode_string@@LIBUDEV_183+0x546c>
    a75c:	nop
    a760:	ldp	x29, x30, [sp], #32
    a764:	ret
    a768:	stp	x29, x30, [sp, #-32]!
    a76c:	mov	x29, sp
    a770:	str	x0, [sp, #24]
    a774:	ldr	x0, [sp, #24]
    a778:	cmp	x0, #0x0
    a77c:	b.ne	a788 <udev_list_entry_get_value@@LIBUDEV_183+0x1a4>  // b.any
    a780:	mov	w0, #0x0                   	// #0
    a784:	b	a7cc <udev_list_entry_get_value@@LIBUDEV_183+0x1e8>
    a788:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a78c:	add	x1, x0, #0xd48
    a790:	ldr	x0, [sp, #24]
    a794:	bl	5440 <strcmp@plt>
    a798:	cmp	w0, #0x0
    a79c:	b.ne	a7a8 <udev_list_entry_get_value@@LIBUDEV_183+0x1c4>  // b.any
    a7a0:	mov	w0, #0x2                   	// #2
    a7a4:	b	a7cc <udev_list_entry_get_value@@LIBUDEV_183+0x1e8>
    a7a8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a7ac:	add	x1, x0, #0xd50
    a7b0:	ldr	x0, [sp, #24]
    a7b4:	bl	5440 <strcmp@plt>
    a7b8:	cmp	w0, #0x0
    a7bc:	b.ne	a7c8 <udev_list_entry_get_value@@LIBUDEV_183+0x1e4>  // b.any
    a7c0:	mov	w0, #0x1                   	// #1
    a7c4:	b	a7cc <udev_list_entry_get_value@@LIBUDEV_183+0x1e8>
    a7c8:	mov	w0, #0xffffffff            	// #-1
    a7cc:	ldp	x29, x30, [sp], #32
    a7d0:	ret

000000000000a7d4 <udev_monitor_new_from_netlink@@LIBUDEV_183>:
    a7d4:	stp	x29, x30, [sp, #-112]!
    a7d8:	mov	x29, sp
    a7dc:	str	x19, [sp, #16]
    a7e0:	str	x0, [sp, #40]
    a7e4:	str	x1, [sp, #32]
    a7e8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    a7ec:	ldr	x0, [x0, #4016]
    a7f0:	ldr	x1, [x0]
    a7f4:	str	x1, [sp, #104]
    a7f8:	mov	x1, #0x0                   	// #0
    a7fc:	str	xzr, [sp, #80]
    a800:	ldr	x0, [sp, #32]
    a804:	bl	a768 <udev_list_entry_get_value@@LIBUDEV_183+0x184>
    a808:	str	w0, [sp, #56]
    a80c:	ldr	w0, [sp, #56]
    a810:	cmp	w0, #0x0
    a814:	b.ge	a830 <udev_monitor_new_from_netlink@@LIBUDEV_183+0x5c>  // b.tcont
    a818:	bl	57d0 <__errno_location@plt>
    a81c:	mov	x1, x0
    a820:	mov	w0, #0x16                  	// #22
    a824:	str	w0, [x1]
    a828:	mov	x19, #0x0                   	// #0
    a82c:	b	a8d8 <udev_monitor_new_from_netlink@@LIBUDEV_183+0x104>
    a830:	add	x0, sp, #0x50
    a834:	mov	w2, #0xffffffff            	// #-1
    a838:	ldr	w1, [sp, #56]
    a83c:	bl	1037c <udev_util_encode_string@@LIBUDEV_183+0x4b4c>
    a840:	str	w0, [sp, #60]
    a844:	ldr	w0, [sp, #60]
    a848:	cmp	w0, #0x0
    a84c:	b.ge	a870 <udev_monitor_new_from_netlink@@LIBUDEV_183+0x9c>  // b.tcont
    a850:	bl	57d0 <__errno_location@plt>
    a854:	mov	x1, x0
    a858:	ldr	w0, [sp, #60]
    a85c:	cmp	w0, #0x0
    a860:	cneg	w0, w0, lt  // lt = tstop
    a864:	str	w0, [x1]
    a868:	mov	x19, #0x0                   	// #0
    a86c:	b	a8d8 <udev_monitor_new_from_netlink@@LIBUDEV_183+0x104>
    a870:	mov	x1, #0x1                   	// #1
    a874:	mov	x0, #0x18                  	// #24
    a878:	bl	a6ac <udev_list_entry_get_value@@LIBUDEV_183+0xc8>
    a87c:	str	x0, [sp, #64]
    a880:	ldr	x0, [sp, #64]
    a884:	cmp	x0, #0x0
    a888:	b.ne	a8a4 <udev_monitor_new_from_netlink@@LIBUDEV_183+0xd0>  // b.any
    a88c:	bl	57d0 <__errno_location@plt>
    a890:	mov	x1, x0
    a894:	mov	w0, #0xc                   	// #12
    a898:	str	w0, [x1]
    a89c:	mov	x19, #0x0                   	// #0
    a8a0:	b	a8d8 <udev_monitor_new_from_netlink@@LIBUDEV_183+0x104>
    a8a4:	ldr	x0, [sp, #80]
    a8a8:	str	x0, [sp, #72]
    a8ac:	str	xzr, [sp, #80]
    a8b0:	ldr	x1, [sp, #72]
    a8b4:	ldr	x0, [sp, #64]
    a8b8:	ldr	x2, [sp, #40]
    a8bc:	str	x2, [x0]
    a8c0:	ldr	x0, [sp, #64]
    a8c4:	mov	w2, #0x1                   	// #1
    a8c8:	str	w2, [x0, #8]
    a8cc:	ldr	x0, [sp, #64]
    a8d0:	str	x1, [x0, #16]
    a8d4:	ldr	x19, [sp, #64]
    a8d8:	add	x0, sp, #0x50
    a8dc:	bl	a734 <udev_list_entry_get_value@@LIBUDEV_183+0x150>
    a8e0:	mov	x1, x19
    a8e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    a8e8:	ldr	x0, [x0, #4016]
    a8ec:	ldr	x2, [sp, #104]
    a8f0:	ldr	x0, [x0]
    a8f4:	eor	x0, x2, x0
    a8f8:	cmp	x0, #0x0
    a8fc:	b.eq	a904 <udev_monitor_new_from_netlink@@LIBUDEV_183+0x130>  // b.none
    a900:	bl	5390 <__stack_chk_fail@plt>
    a904:	mov	x0, x1
    a908:	ldr	x19, [sp, #16]
    a90c:	ldp	x29, x30, [sp], #112
    a910:	ret

000000000000a914 <udev_monitor_filter_update@@LIBUDEV_183>:
    a914:	stp	x29, x30, [sp, #-32]!
    a918:	mov	x29, sp
    a91c:	str	x0, [sp, #24]
    a920:	ldr	x0, [sp, #24]
    a924:	cmp	x0, #0x0
    a928:	cset	w0, ne  // ne = any
    a92c:	and	w0, w0, #0xff
    a930:	and	x0, x0, #0xff
    a934:	cmp	x0, #0x0
    a938:	b.ne	a96c <udev_monitor_filter_update@@LIBUDEV_183+0x58>  // b.any
    a93c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a940:	add	x1, x0, #0xd5b
    a944:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a948:	add	x4, x0, #0xda8
    a94c:	mov	w3, #0x66                  	// #102
    a950:	mov	x2, x1
    a954:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a958:	add	x1, x0, #0xd80
    a95c:	mov	w0, #0x0                   	// #0
    a960:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    a964:	mov	w0, #0x1                   	// #1
    a968:	b	a970 <udev_monitor_filter_update@@LIBUDEV_183+0x5c>
    a96c:	mov	w0, #0x0                   	// #0
    a970:	cmp	w0, #0x0
    a974:	b.eq	a980 <udev_monitor_filter_update@@LIBUDEV_183+0x6c>  // b.none
    a978:	mov	w0, #0xffffffea            	// #-22
    a97c:	b	a98c <udev_monitor_filter_update@@LIBUDEV_183+0x78>
    a980:	ldr	x0, [sp, #24]
    a984:	ldr	x0, [x0, #16]
    a988:	bl	11ca4 <udev_util_encode_string@@LIBUDEV_183+0x6474>
    a98c:	ldp	x29, x30, [sp], #32
    a990:	ret

000000000000a994 <udev_monitor_enable_receiving@@LIBUDEV_183>:
    a994:	stp	x29, x30, [sp, #-32]!
    a998:	mov	x29, sp
    a99c:	str	x0, [sp, #24]
    a9a0:	ldr	x0, [sp, #24]
    a9a4:	cmp	x0, #0x0
    a9a8:	cset	w0, ne  // ne = any
    a9ac:	and	w0, w0, #0xff
    a9b0:	and	x0, x0, #0xff
    a9b4:	cmp	x0, #0x0
    a9b8:	b.ne	a9ec <udev_monitor_enable_receiving@@LIBUDEV_183+0x58>  // b.any
    a9bc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a9c0:	add	x1, x0, #0xd5b
    a9c4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a9c8:	add	x4, x0, #0xdc8
    a9cc:	mov	w3, #0x74                  	// #116
    a9d0:	mov	x2, x1
    a9d4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    a9d8:	add	x1, x0, #0xd80
    a9dc:	mov	w0, #0x0                   	// #0
    a9e0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    a9e4:	mov	w0, #0x1                   	// #1
    a9e8:	b	a9f0 <udev_monitor_enable_receiving@@LIBUDEV_183+0x5c>
    a9ec:	mov	w0, #0x0                   	// #0
    a9f0:	cmp	w0, #0x0
    a9f4:	b.eq	aa00 <udev_monitor_enable_receiving@@LIBUDEV_183+0x6c>  // b.none
    a9f8:	mov	w0, #0xffffffea            	// #-22
    a9fc:	b	aa0c <udev_monitor_enable_receiving@@LIBUDEV_183+0x78>
    aa00:	ldr	x0, [sp, #24]
    aa04:	ldr	x0, [x0, #16]
    aa08:	bl	108dc <udev_util_encode_string@@LIBUDEV_183+0x50ac>
    aa0c:	ldp	x29, x30, [sp], #32
    aa10:	ret

000000000000aa14 <udev_monitor_set_receive_buffer_size@@LIBUDEV_183>:
    aa14:	stp	x29, x30, [sp, #-32]!
    aa18:	mov	x29, sp
    aa1c:	str	x0, [sp, #24]
    aa20:	str	w1, [sp, #20]
    aa24:	ldr	x0, [sp, #24]
    aa28:	cmp	x0, #0x0
    aa2c:	cset	w0, ne  // ne = any
    aa30:	and	w0, w0, #0xff
    aa34:	and	x0, x0, #0xff
    aa38:	cmp	x0, #0x0
    aa3c:	b.ne	aa70 <udev_monitor_set_receive_buffer_size@@LIBUDEV_183+0x5c>  // b.any
    aa40:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    aa44:	add	x1, x0, #0xd5b
    aa48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    aa4c:	add	x4, x0, #0xde8
    aa50:	mov	w3, #0x84                  	// #132
    aa54:	mov	x2, x1
    aa58:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    aa5c:	add	x1, x0, #0xd80
    aa60:	mov	w0, #0x0                   	// #0
    aa64:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    aa68:	mov	w0, #0x1                   	// #1
    aa6c:	b	aa74 <udev_monitor_set_receive_buffer_size@@LIBUDEV_183+0x60>
    aa70:	mov	w0, #0x0                   	// #0
    aa74:	cmp	w0, #0x0
    aa78:	b.eq	aa84 <udev_monitor_set_receive_buffer_size@@LIBUDEV_183+0x70>  // b.none
    aa7c:	mov	w0, #0xffffffea            	// #-22
    aa80:	b	aa94 <udev_monitor_set_receive_buffer_size@@LIBUDEV_183+0x80>
    aa84:	ldr	x0, [sp, #24]
    aa88:	ldr	x0, [x0, #16]
    aa8c:	ldrsw	x1, [sp, #20]
    aa90:	bl	10154 <udev_util_encode_string@@LIBUDEV_183+0x4924>
    aa94:	ldp	x29, x30, [sp], #32
    aa98:	ret
    aa9c:	stp	x29, x30, [sp, #-32]!
    aaa0:	mov	x29, sp
    aaa4:	str	x0, [sp, #24]
    aaa8:	ldr	x0, [sp, #24]
    aaac:	cmp	x0, #0x0
    aab0:	cset	w0, eq  // eq = none
    aab4:	and	w0, w0, #0xff
    aab8:	and	x0, x0, #0xff
    aabc:	cmp	x0, #0x0
    aac0:	b.eq	aaec <udev_monitor_set_receive_buffer_size@@LIBUDEV_183+0xd8>  // b.none
    aac4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    aac8:	add	x1, x0, #0xd5b
    aacc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    aad0:	add	x4, x0, #0xe10
    aad4:	mov	w3, #0x8a                  	// #138
    aad8:	mov	x2, x1
    aadc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    aae0:	add	x1, x0, #0xd80
    aae4:	mov	w0, #0x0                   	// #0
    aae8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    aaec:	ldr	x0, [sp, #24]
    aaf0:	ldr	x0, [x0, #16]
    aaf4:	bl	10c9c <udev_util_encode_string@@LIBUDEV_183+0x546c>
    aaf8:	ldr	x0, [sp, #24]
    aafc:	bl	a610 <udev_list_entry_get_value@@LIBUDEV_183+0x2c>
    ab00:	ldp	x29, x30, [sp], #32
    ab04:	ret

000000000000ab08 <udev_monitor_ref@@LIBUDEV_183>:
    ab08:	stp	x29, x30, [sp, #-32]!
    ab0c:	mov	x29, sp
    ab10:	str	x0, [sp, #24]
    ab14:	ldr	x0, [sp, #24]
    ab18:	cmp	x0, #0x0
    ab1c:	b.ne	ab28 <udev_monitor_ref@@LIBUDEV_183+0x20>  // b.any
    ab20:	mov	x0, #0x0                   	// #0
    ab24:	b	ab88 <udev_monitor_ref@@LIBUDEV_183+0x80>
    ab28:	ldr	x0, [sp, #24]
    ab2c:	ldr	w0, [x0, #8]
    ab30:	cmp	w0, #0x0
    ab34:	cset	w0, eq  // eq = none
    ab38:	and	w0, w0, #0xff
    ab3c:	and	x0, x0, #0xff
    ab40:	cmp	x0, #0x0
    ab44:	b.eq	ab70 <udev_monitor_ref@@LIBUDEV_183+0x68>  // b.none
    ab48:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ab4c:	add	x1, x0, #0xd5b
    ab50:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ab54:	add	x4, x0, #0xe28
    ab58:	mov	w3, #0xa3                  	// #163
    ab5c:	mov	x2, x1
    ab60:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ab64:	add	x1, x0, #0xd90
    ab68:	mov	w0, #0x0                   	// #0
    ab6c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    ab70:	ldr	x0, [sp, #24]
    ab74:	ldr	w0, [x0, #8]
    ab78:	add	w1, w0, #0x1
    ab7c:	ldr	x0, [sp, #24]
    ab80:	str	w1, [x0, #8]
    ab84:	ldr	x0, [sp, #24]
    ab88:	ldp	x29, x30, [sp], #32
    ab8c:	ret

000000000000ab90 <udev_monitor_unref@@LIBUDEV_183>:
    ab90:	stp	x29, x30, [sp, #-32]!
    ab94:	mov	x29, sp
    ab98:	str	x0, [sp, #24]
    ab9c:	ldr	x0, [sp, #24]
    aba0:	cmp	x0, #0x0
    aba4:	b.ne	abb0 <udev_monitor_unref@@LIBUDEV_183+0x20>  // b.any
    aba8:	mov	x0, #0x0                   	// #0
    abac:	b	ac2c <udev_monitor_unref@@LIBUDEV_183+0x9c>
    abb0:	ldr	x0, [sp, #24]
    abb4:	ldr	w0, [x0, #8]
    abb8:	cmp	w0, #0x0
    abbc:	cset	w0, eq  // eq = none
    abc0:	and	w0, w0, #0xff
    abc4:	and	x0, x0, #0xff
    abc8:	cmp	x0, #0x0
    abcc:	b.eq	abf8 <udev_monitor_unref@@LIBUDEV_183+0x68>  // b.none
    abd0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    abd4:	add	x1, x0, #0xd5b
    abd8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    abdc:	add	x4, x0, #0xe40
    abe0:	mov	w3, #0xa3                  	// #163
    abe4:	mov	x2, x1
    abe8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    abec:	add	x1, x0, #0xd90
    abf0:	mov	w0, #0x0                   	// #0
    abf4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    abf8:	ldr	x0, [sp, #24]
    abfc:	ldr	w0, [x0, #8]
    ac00:	sub	w1, w0, #0x1
    ac04:	ldr	x0, [sp, #24]
    ac08:	str	w1, [x0, #8]
    ac0c:	ldr	x0, [sp, #24]
    ac10:	ldr	w0, [x0, #8]
    ac14:	cmp	w0, #0x0
    ac18:	b.eq	ac24 <udev_monitor_unref@@LIBUDEV_183+0x94>  // b.none
    ac1c:	mov	x0, #0x0                   	// #0
    ac20:	b	ac2c <udev_monitor_unref@@LIBUDEV_183+0x9c>
    ac24:	ldr	x0, [sp, #24]
    ac28:	bl	aa9c <udev_monitor_set_receive_buffer_size@@LIBUDEV_183+0x88>
    ac2c:	ldp	x29, x30, [sp], #32
    ac30:	ret

000000000000ac34 <udev_monitor_get_udev@@LIBUDEV_183>:
    ac34:	stp	x29, x30, [sp, #-32]!
    ac38:	mov	x29, sp
    ac3c:	str	x0, [sp, #24]
    ac40:	ldr	x0, [sp, #24]
    ac44:	cmp	x0, #0x0
    ac48:	cset	w0, ne  // ne = any
    ac4c:	and	w0, w0, #0xff
    ac50:	and	x0, x0, #0xff
    ac54:	cmp	x0, #0x0
    ac58:	b.ne	ac8c <udev_monitor_get_udev@@LIBUDEV_183+0x58>  // b.any
    ac5c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ac60:	add	x1, x0, #0xd5b
    ac64:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ac68:	add	x4, x0, #0xe58
    ac6c:	mov	w3, #0xae                  	// #174
    ac70:	mov	x2, x1
    ac74:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ac78:	add	x1, x0, #0xd80
    ac7c:	mov	w0, #0x0                   	// #0
    ac80:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    ac84:	mov	w0, #0x1                   	// #1
    ac88:	b	ac90 <udev_monitor_get_udev@@LIBUDEV_183+0x5c>
    ac8c:	mov	w0, #0x0                   	// #0
    ac90:	cmp	w0, #0x0
    ac94:	b.eq	aca0 <udev_monitor_get_udev@@LIBUDEV_183+0x6c>  // b.none
    ac98:	mov	x0, #0x0                   	// #0
    ac9c:	b	aca8 <udev_monitor_get_udev@@LIBUDEV_183+0x74>
    aca0:	ldr	x0, [sp, #24]
    aca4:	ldr	x0, [x0]
    aca8:	ldp	x29, x30, [sp], #32
    acac:	ret

000000000000acb0 <udev_monitor_get_fd@@LIBUDEV_183>:
    acb0:	stp	x29, x30, [sp, #-32]!
    acb4:	mov	x29, sp
    acb8:	str	x0, [sp, #24]
    acbc:	ldr	x0, [sp, #24]
    acc0:	cmp	x0, #0x0
    acc4:	cset	w0, ne  // ne = any
    acc8:	and	w0, w0, #0xff
    accc:	and	x0, x0, #0xff
    acd0:	cmp	x0, #0x0
    acd4:	b.ne	ad08 <udev_monitor_get_fd@@LIBUDEV_183+0x58>  // b.any
    acd8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    acdc:	add	x1, x0, #0xd5b
    ace0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ace4:	add	x4, x0, #0xe70
    ace8:	mov	w3, #0xbc                  	// #188
    acec:	mov	x2, x1
    acf0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    acf4:	add	x1, x0, #0xd80
    acf8:	mov	w0, #0x0                   	// #0
    acfc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    ad00:	mov	w0, #0x1                   	// #1
    ad04:	b	ad0c <udev_monitor_get_fd@@LIBUDEV_183+0x5c>
    ad08:	mov	w0, #0x0                   	// #0
    ad0c:	cmp	w0, #0x0
    ad10:	b.eq	ad1c <udev_monitor_get_fd@@LIBUDEV_183+0x6c>  // b.none
    ad14:	mov	w0, #0xffffffea            	// #-22
    ad18:	b	ad28 <udev_monitor_get_fd@@LIBUDEV_183+0x78>
    ad1c:	ldr	x0, [sp, #24]
    ad20:	ldr	x0, [x0, #16]
    ad24:	bl	10300 <udev_util_encode_string@@LIBUDEV_183+0x4ad0>
    ad28:	ldp	x29, x30, [sp], #32
    ad2c:	ret
    ad30:	stp	x29, x30, [sp, #-64]!
    ad34:	mov	x29, sp
    ad38:	str	x0, [sp, #24]
    ad3c:	str	x1, [sp, #16]
    ad40:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ad44:	ldr	x0, [x0, #4016]
    ad48:	ldr	x1, [x0]
    ad4c:	str	x1, [sp, #56]
    ad50:	mov	x1, #0x0                   	// #0
    ad54:	ldr	x0, [sp, #24]
    ad58:	cmp	x0, #0x0
    ad5c:	cset	w0, eq  // eq = none
    ad60:	and	w0, w0, #0xff
    ad64:	and	x0, x0, #0xff
    ad68:	cmp	x0, #0x0
    ad6c:	b.eq	ad98 <udev_monitor_get_fd@@LIBUDEV_183+0xe8>  // b.none
    ad70:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ad74:	add	x1, x0, #0xd5b
    ad78:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ad7c:	add	x4, x0, #0xe88
    ad80:	mov	w3, #0xc5                  	// #197
    ad84:	mov	x2, x1
    ad88:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    ad8c:	add	x1, x0, #0xd80
    ad90:	mov	w0, #0x0                   	// #0
    ad94:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    ad98:	ldr	x0, [sp, #16]
    ad9c:	cmp	x0, #0x0
    ada0:	cset	w0, eq  // eq = none
    ada4:	and	w0, w0, #0xff
    ada8:	and	x0, x0, #0xff
    adac:	cmp	x0, #0x0
    adb0:	b.eq	addc <udev_monitor_get_fd@@LIBUDEV_183+0x12c>  // b.none
    adb4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    adb8:	add	x1, x0, #0xd5b
    adbc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    adc0:	add	x4, x0, #0xe88
    adc4:	mov	w3, #0xc6                  	// #198
    adc8:	mov	x2, x1
    adcc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    add0:	add	x1, x0, #0xda0
    add4:	mov	w0, #0x0                   	// #0
    add8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    addc:	ldr	x0, [sp, #24]
    ade0:	ldr	x0, [x0, #16]
    ade4:	bl	10300 <udev_util_encode_string@@LIBUDEV_183+0x4ad0>
    ade8:	str	xzr, [sp, #48]
    adec:	str	w0, [sp, #48]
    adf0:	mov	w0, #0x1                   	// #1
    adf4:	strh	w0, [sp, #52]
    adf8:	ldr	x0, [sp, #24]
    adfc:	ldr	x0, [x0, #16]
    ae00:	ldr	x1, [sp, #16]
    ae04:	bl	10fd0 <udev_util_encode_string@@LIBUDEV_183+0x57a0>
    ae08:	str	w0, [sp, #44]
    ae0c:	ldr	w0, [sp, #44]
    ae10:	cmp	w0, #0x0
    ae14:	b.eq	ae20 <udev_monitor_get_fd@@LIBUDEV_183+0x170>  // b.none
    ae18:	ldr	w0, [sp, #44]
    ae1c:	b	aea4 <udev_monitor_get_fd@@LIBUDEV_183+0x1f4>
    ae20:	add	x0, sp, #0x30
    ae24:	mov	w2, #0x0                   	// #0
    ae28:	mov	x1, #0x1                   	// #1
    ae2c:	bl	5250 <poll@plt>
    ae30:	str	w0, [sp, #44]
    ae34:	ldr	w0, [sp, #44]
    ae38:	cmp	w0, #0x0
    ae3c:	b.ge	ae88 <udev_monitor_get_fd@@LIBUDEV_183+0x1d8>  // b.tcont
    ae40:	strb	wzr, [sp, #43]
    ae44:	bl	57d0 <__errno_location@plt>
    ae48:	ldr	w0, [x0]
    ae4c:	cmp	w0, #0x4
    ae50:	b.eq	ae5c <udev_monitor_get_fd@@LIBUDEV_183+0x1ac>  // b.none
    ae54:	cmp	w0, #0xb
    ae58:	b.ne	ae64 <udev_monitor_get_fd@@LIBUDEV_183+0x1b4>  // b.any
    ae5c:	mov	w0, #0x1                   	// #1
    ae60:	strb	w0, [sp, #43]
    ae64:	nop
    ae68:	ldrb	w0, [sp, #43]
    ae6c:	cmp	w0, #0x0
    ae70:	b.eq	ae78 <udev_monitor_get_fd@@LIBUDEV_183+0x1c8>  // b.none
    ae74:	b	ae20 <udev_monitor_get_fd@@LIBUDEV_183+0x170>
    ae78:	bl	57d0 <__errno_location@plt>
    ae7c:	ldr	w0, [x0]
    ae80:	neg	w0, w0
    ae84:	b	aea4 <udev_monitor_get_fd@@LIBUDEV_183+0x1f4>
    ae88:	ldr	w0, [sp, #44]
    ae8c:	cmp	w0, #0x0
    ae90:	b.ne	ae9c <udev_monitor_get_fd@@LIBUDEV_183+0x1ec>  // b.any
    ae94:	mov	w0, #0xfffffff5            	// #-11
    ae98:	b	aea4 <udev_monitor_get_fd@@LIBUDEV_183+0x1f4>
    ae9c:	nop
    aea0:	b	adf8 <udev_monitor_get_fd@@LIBUDEV_183+0x148>
    aea4:	mov	w1, w0
    aea8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    aeac:	ldr	x0, [x0, #4016]
    aeb0:	ldr	x2, [sp, #56]
    aeb4:	ldr	x0, [x0]
    aeb8:	eor	x0, x2, x0
    aebc:	cmp	x0, #0x0
    aec0:	b.eq	aec8 <udev_monitor_get_fd@@LIBUDEV_183+0x218>  // b.none
    aec4:	bl	5390 <__stack_chk_fail@plt>
    aec8:	mov	w0, w1
    aecc:	ldp	x29, x30, [sp], #64
    aed0:	ret

000000000000aed4 <udev_monitor_receive_device@@LIBUDEV_183>:
    aed4:	stp	x29, x30, [sp, #-80]!
    aed8:	mov	x29, sp
    aedc:	str	x19, [sp, #16]
    aee0:	str	x0, [sp, #40]
    aee4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    aee8:	ldr	x0, [x0, #4016]
    aeec:	ldr	x1, [x0]
    aef0:	str	x1, [sp, #72]
    aef4:	mov	x1, #0x0                   	// #0
    aef8:	str	xzr, [sp, #64]
    aefc:	ldr	x0, [sp, #40]
    af00:	cmp	x0, #0x0
    af04:	cset	w0, ne  // ne = any
    af08:	and	w0, w0, #0xff
    af0c:	and	x0, x0, #0xff
    af10:	cmp	x0, #0x0
    af14:	b.ne	af48 <udev_monitor_receive_device@@LIBUDEV_183+0x74>  // b.any
    af18:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    af1c:	add	x1, x0, #0xd5b
    af20:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    af24:	add	x4, x0, #0xea8
    af28:	mov	w3, #0xfb                  	// #251
    af2c:	mov	x2, x1
    af30:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    af34:	add	x1, x0, #0xd80
    af38:	mov	w0, #0x0                   	// #0
    af3c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    af40:	mov	w0, #0x1                   	// #1
    af44:	b	af4c <udev_monitor_receive_device@@LIBUDEV_183+0x78>
    af48:	mov	w0, #0x0                   	// #0
    af4c:	cmp	w0, #0x0
    af50:	b.eq	af5c <udev_monitor_receive_device@@LIBUDEV_183+0x88>  // b.none
    af54:	mov	x19, #0x0                   	// #0
    af58:	b	afb0 <udev_monitor_receive_device@@LIBUDEV_183+0xdc>
    af5c:	add	x0, sp, #0x40
    af60:	mov	x1, x0
    af64:	ldr	x0, [sp, #40]
    af68:	bl	ad30 <udev_monitor_get_fd@@LIBUDEV_183+0x80>
    af6c:	str	w0, [sp, #60]
    af70:	ldr	w0, [sp, #60]
    af74:	cmp	w0, #0x0
    af78:	b.ge	af9c <udev_monitor_receive_device@@LIBUDEV_183+0xc8>  // b.tcont
    af7c:	bl	57d0 <__errno_location@plt>
    af80:	mov	x1, x0
    af84:	ldr	w0, [sp, #60]
    af88:	cmp	w0, #0x0
    af8c:	cneg	w0, w0, lt  // lt = tstop
    af90:	str	w0, [x1]
    af94:	mov	x19, #0x0                   	// #0
    af98:	b	afb0 <udev_monitor_receive_device@@LIBUDEV_183+0xdc>
    af9c:	ldr	x0, [sp, #40]
    afa0:	ldr	x0, [x0]
    afa4:	ldr	x1, [sp, #64]
    afa8:	bl	656c <udev_device_get_property_value@@LIBUDEV_183+0x12c>
    afac:	mov	x19, x0
    afb0:	add	x0, sp, #0x40
    afb4:	bl	a700 <udev_list_entry_get_value@@LIBUDEV_183+0x11c>
    afb8:	mov	x1, x19
    afbc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    afc0:	ldr	x0, [x0, #4016]
    afc4:	ldr	x2, [sp, #72]
    afc8:	ldr	x0, [x0]
    afcc:	eor	x0, x2, x0
    afd0:	cmp	x0, #0x0
    afd4:	b.eq	afdc <udev_monitor_receive_device@@LIBUDEV_183+0x108>  // b.none
    afd8:	bl	5390 <__stack_chk_fail@plt>
    afdc:	mov	x0, x1
    afe0:	ldr	x19, [sp, #16]
    afe4:	ldp	x29, x30, [sp], #80
    afe8:	ret

000000000000afec <udev_monitor_filter_add_match_subsystem_devtype@@LIBUDEV_183>:
    afec:	stp	x29, x30, [sp, #-48]!
    aff0:	mov	x29, sp
    aff4:	str	x0, [sp, #40]
    aff8:	str	x1, [sp, #32]
    affc:	str	x2, [sp, #24]
    b000:	ldr	x0, [sp, #40]
    b004:	cmp	x0, #0x0
    b008:	cset	w0, ne  // ne = any
    b00c:	and	w0, w0, #0xff
    b010:	and	x0, x0, #0xff
    b014:	cmp	x0, #0x0
    b018:	b.ne	b04c <udev_monitor_filter_add_match_subsystem_devtype@@LIBUDEV_183+0x60>  // b.any
    b01c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b020:	add	x1, x0, #0xd5b
    b024:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b028:	add	x4, x0, #0xec8
    b02c:	mov	w3, #0x112                 	// #274
    b030:	mov	x2, x1
    b034:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b038:	add	x1, x0, #0xd80
    b03c:	mov	w0, #0x0                   	// #0
    b040:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    b044:	mov	w0, #0x1                   	// #1
    b048:	b	b050 <udev_monitor_filter_add_match_subsystem_devtype@@LIBUDEV_183+0x64>
    b04c:	mov	w0, #0x0                   	// #0
    b050:	cmp	w0, #0x0
    b054:	b.eq	b060 <udev_monitor_filter_add_match_subsystem_devtype@@LIBUDEV_183+0x74>  // b.none
    b058:	mov	w0, #0xffffffea            	// #-22
    b05c:	b	b074 <udev_monitor_filter_add_match_subsystem_devtype@@LIBUDEV_183+0x88>
    b060:	ldr	x0, [sp, #40]
    b064:	ldr	x0, [x0, #16]
    b068:	ldr	x2, [sp, #24]
    b06c:	ldr	x1, [sp, #32]
    b070:	bl	12118 <udev_util_encode_string@@LIBUDEV_183+0x68e8>
    b074:	ldp	x29, x30, [sp], #48
    b078:	ret

000000000000b07c <udev_monitor_filter_add_match_tag@@LIBUDEV_183>:
    b07c:	stp	x29, x30, [sp, #-32]!
    b080:	mov	x29, sp
    b084:	str	x0, [sp, #24]
    b088:	str	x1, [sp, #16]
    b08c:	ldr	x0, [sp, #24]
    b090:	cmp	x0, #0x0
    b094:	cset	w0, ne  // ne = any
    b098:	and	w0, w0, #0xff
    b09c:	and	x0, x0, #0xff
    b0a0:	cmp	x0, #0x0
    b0a4:	b.ne	b0d8 <udev_monitor_filter_add_match_tag@@LIBUDEV_183+0x5c>  // b.any
    b0a8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b0ac:	add	x1, x0, #0xd5b
    b0b0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b0b4:	add	x4, x0, #0xef8
    b0b8:	mov	w3, #0x124                 	// #292
    b0bc:	mov	x2, x1
    b0c0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b0c4:	add	x1, x0, #0xd80
    b0c8:	mov	w0, #0x0                   	// #0
    b0cc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    b0d0:	mov	w0, #0x1                   	// #1
    b0d4:	b	b0dc <udev_monitor_filter_add_match_tag@@LIBUDEV_183+0x60>
    b0d8:	mov	w0, #0x0                   	// #0
    b0dc:	cmp	w0, #0x0
    b0e0:	b.eq	b0ec <udev_monitor_filter_add_match_tag@@LIBUDEV_183+0x70>  // b.none
    b0e4:	mov	w0, #0xffffffea            	// #-22
    b0e8:	b	b0fc <udev_monitor_filter_add_match_tag@@LIBUDEV_183+0x80>
    b0ec:	ldr	x0, [sp, #24]
    b0f0:	ldr	x0, [x0, #16]
    b0f4:	ldr	x1, [sp, #16]
    b0f8:	bl	12308 <udev_util_encode_string@@LIBUDEV_183+0x6ad8>
    b0fc:	ldp	x29, x30, [sp], #32
    b100:	ret

000000000000b104 <udev_monitor_filter_remove@@LIBUDEV_183>:
    b104:	stp	x29, x30, [sp, #-32]!
    b108:	mov	x29, sp
    b10c:	str	x0, [sp, #24]
    b110:	ldr	x0, [sp, #24]
    b114:	cmp	x0, #0x0
    b118:	cset	w0, ne  // ne = any
    b11c:	and	w0, w0, #0xff
    b120:	and	x0, x0, #0xff
    b124:	cmp	x0, #0x0
    b128:	b.ne	b15c <udev_monitor_filter_remove@@LIBUDEV_183+0x58>  // b.any
    b12c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b130:	add	x1, x0, #0xd5b
    b134:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b138:	add	x4, x0, #0xf20
    b13c:	mov	w3, #0x132                 	// #306
    b140:	mov	x2, x1
    b144:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b148:	add	x1, x0, #0xd80
    b14c:	mov	w0, #0x0                   	// #0
    b150:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    b154:	mov	w0, #0x1                   	// #1
    b158:	b	b160 <udev_monitor_filter_remove@@LIBUDEV_183+0x5c>
    b15c:	mov	w0, #0x0                   	// #0
    b160:	cmp	w0, #0x0
    b164:	b.eq	b170 <udev_monitor_filter_remove@@LIBUDEV_183+0x6c>  // b.none
    b168:	mov	w0, #0xffffffea            	// #-22
    b16c:	b	b17c <udev_monitor_filter_remove@@LIBUDEV_183+0x78>
    b170:	ldr	x0, [sp, #24]
    b174:	ldr	x0, [x0, #16]
    b178:	bl	124d4 <udev_util_encode_string@@LIBUDEV_183+0x6ca4>
    b17c:	ldp	x29, x30, [sp], #32
    b180:	ret
    b184:	stp	x29, x30, [sp, #-32]!
    b188:	mov	x29, sp
    b18c:	str	x0, [sp, #24]
    b190:	ldr	x0, [sp, #24]
    b194:	bl	54b0 <free@plt>
    b198:	mov	x0, #0x0                   	// #0
    b19c:	ldp	x29, x30, [sp], #32
    b1a0:	ret
    b1a4:	sub	sp, sp, #0x10
    b1a8:	str	x0, [sp, #8]
    b1ac:	str	x1, [sp]
    b1b0:	ldr	x0, [sp]
    b1b4:	cmp	x0, #0x0
    b1b8:	cset	w0, ne  // ne = any
    b1bc:	and	w0, w0, #0xff
    b1c0:	and	x0, x0, #0xff
    b1c4:	cmp	x0, #0x0
    b1c8:	b.eq	b20c <udev_monitor_filter_remove@@LIBUDEV_183+0x108>  // b.none
    b1cc:	mov	x2, #0x0                   	// #0
    b1d0:	ldr	x1, [sp, #8]
    b1d4:	ldr	x0, [sp]
    b1d8:	umulh	x0, x1, x0
    b1dc:	cmp	x0, #0x0
    b1e0:	b.eq	b1e8 <udev_monitor_filter_remove@@LIBUDEV_183+0xe4>  // b.none
    b1e4:	mov	x2, #0x1                   	// #1
    b1e8:	mov	x0, x2
    b1ec:	cmp	x0, #0x0
    b1f0:	cset	w0, ne  // ne = any
    b1f4:	and	w0, w0, #0xff
    b1f8:	and	x0, x0, #0xff
    b1fc:	cmp	x0, #0x0
    b200:	b.eq	b20c <udev_monitor_filter_remove@@LIBUDEV_183+0x108>  // b.none
    b204:	mov	w0, #0x1                   	// #1
    b208:	b	b210 <udev_monitor_filter_remove@@LIBUDEV_183+0x10c>
    b20c:	mov	w0, #0x0                   	// #0
    b210:	and	w0, w0, #0x1
    b214:	and	w0, w0, #0xff
    b218:	add	sp, sp, #0x10
    b21c:	ret
    b220:	stp	x29, x30, [sp, #-32]!
    b224:	mov	x29, sp
    b228:	str	x0, [sp, #24]
    b22c:	str	x1, [sp, #16]
    b230:	ldr	x1, [sp, #16]
    b234:	ldr	x0, [sp, #24]
    b238:	bl	b1a4 <udev_monitor_filter_remove@@LIBUDEV_183+0xa0>
    b23c:	and	w0, w0, #0xff
    b240:	cmp	w0, #0x0
    b244:	b.eq	b250 <udev_monitor_filter_remove@@LIBUDEV_183+0x14c>  // b.none
    b248:	mov	x0, #0x0                   	// #0
    b24c:	b	b26c <udev_monitor_filter_remove@@LIBUDEV_183+0x168>
    b250:	ldr	x1, [sp, #24]
    b254:	ldr	x0, [sp, #16]
    b258:	mul	x0, x1, x0
    b25c:	cmp	x0, #0x0
    b260:	b.ne	b268 <udev_monitor_filter_remove@@LIBUDEV_183+0x164>  // b.any
    b264:	mov	x0, #0x1                   	// #1
    b268:	bl	5220 <malloc@plt>
    b26c:	ldp	x29, x30, [sp], #32
    b270:	ret
    b274:	stp	x29, x30, [sp, #-32]!
    b278:	mov	x29, sp
    b27c:	str	x0, [sp, #24]
    b280:	ldr	x0, [sp, #24]
    b284:	ldr	w0, [x0]
    b288:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
    b28c:	nop
    b290:	ldp	x29, x30, [sp], #32
    b294:	ret

000000000000b298 <udev_queue_new@@LIBUDEV_183>:
    b298:	stp	x29, x30, [sp, #-48]!
    b29c:	mov	x29, sp
    b2a0:	str	x0, [sp, #24]
    b2a4:	mov	x1, #0x1                   	// #1
    b2a8:	mov	x0, #0x10                  	// #16
    b2ac:	bl	b220 <udev_monitor_filter_remove@@LIBUDEV_183+0x11c>
    b2b0:	str	x0, [sp, #40]
    b2b4:	ldr	x0, [sp, #40]
    b2b8:	cmp	x0, #0x0
    b2bc:	b.ne	b2d8 <udev_queue_new@@LIBUDEV_183+0x40>  // b.any
    b2c0:	bl	57d0 <__errno_location@plt>
    b2c4:	mov	x1, x0
    b2c8:	mov	w0, #0xc                   	// #12
    b2cc:	str	w0, [x1]
    b2d0:	mov	x0, #0x0                   	// #0
    b2d4:	b	b300 <udev_queue_new@@LIBUDEV_183+0x68>
    b2d8:	ldr	x0, [sp, #40]
    b2dc:	ldr	x1, [sp, #24]
    b2e0:	str	x1, [x0]
    b2e4:	ldr	x0, [sp, #40]
    b2e8:	mov	w1, #0x1                   	// #1
    b2ec:	str	w1, [x0, #8]
    b2f0:	ldr	x0, [sp, #40]
    b2f4:	mov	w1, #0xffffffff            	// #-1
    b2f8:	str	w1, [x0, #12]
    b2fc:	ldr	x0, [sp, #40]
    b300:	ldp	x29, x30, [sp], #48
    b304:	ret
    b308:	stp	x29, x30, [sp, #-32]!
    b30c:	mov	x29, sp
    b310:	str	x0, [sp, #24]
    b314:	ldr	x0, [sp, #24]
    b318:	cmp	x0, #0x0
    b31c:	cset	w0, eq  // eq = none
    b320:	and	w0, w0, #0xff
    b324:	and	x0, x0, #0xff
    b328:	cmp	x0, #0x0
    b32c:	b.eq	b358 <udev_queue_new@@LIBUDEV_183+0xc0>  // b.none
    b330:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b334:	add	x1, x0, #0xf43
    b338:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b33c:	add	x4, x0, #0xfb8
    b340:	mov	w3, #0x3e                  	// #62
    b344:	mov	x2, x1
    b348:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b34c:	add	x1, x0, #0xf60
    b350:	mov	w0, #0x0                   	// #0
    b354:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    b358:	ldr	x0, [sp, #24]
    b35c:	ldr	w0, [x0, #12]
    b360:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
    b364:	ldr	x0, [sp, #24]
    b368:	bl	b184 <udev_monitor_filter_remove@@LIBUDEV_183+0x80>
    b36c:	ldp	x29, x30, [sp], #32
    b370:	ret

000000000000b374 <udev_queue_ref@@LIBUDEV_183>:
    b374:	stp	x29, x30, [sp, #-32]!
    b378:	mov	x29, sp
    b37c:	str	x0, [sp, #24]
    b380:	ldr	x0, [sp, #24]
    b384:	cmp	x0, #0x0
    b388:	b.ne	b394 <udev_queue_ref@@LIBUDEV_183+0x20>  // b.any
    b38c:	mov	x0, #0x0                   	// #0
    b390:	b	b3f4 <udev_queue_ref@@LIBUDEV_183+0x80>
    b394:	ldr	x0, [sp, #24]
    b398:	ldr	w0, [x0, #8]
    b39c:	cmp	w0, #0x0
    b3a0:	cset	w0, eq  // eq = none
    b3a4:	and	w0, w0, #0xff
    b3a8:	and	x0, x0, #0xff
    b3ac:	cmp	x0, #0x0
    b3b0:	b.eq	b3dc <udev_queue_ref@@LIBUDEV_183+0x68>  // b.none
    b3b4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b3b8:	add	x1, x0, #0xf43
    b3bc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b3c0:	add	x4, x0, #0xfc8
    b3c4:	mov	w3, #0x56                  	// #86
    b3c8:	mov	x2, x1
    b3cc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b3d0:	add	x1, x0, #0xf70
    b3d4:	mov	w0, #0x0                   	// #0
    b3d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    b3dc:	ldr	x0, [sp, #24]
    b3e0:	ldr	w0, [x0, #8]
    b3e4:	add	w1, w0, #0x1
    b3e8:	ldr	x0, [sp, #24]
    b3ec:	str	w1, [x0, #8]
    b3f0:	ldr	x0, [sp, #24]
    b3f4:	ldp	x29, x30, [sp], #32
    b3f8:	ret

000000000000b3fc <udev_queue_unref@@LIBUDEV_183>:
    b3fc:	stp	x29, x30, [sp, #-32]!
    b400:	mov	x29, sp
    b404:	str	x0, [sp, #24]
    b408:	ldr	x0, [sp, #24]
    b40c:	cmp	x0, #0x0
    b410:	b.ne	b41c <udev_queue_unref@@LIBUDEV_183+0x20>  // b.any
    b414:	mov	x0, #0x0                   	// #0
    b418:	b	b498 <udev_queue_unref@@LIBUDEV_183+0x9c>
    b41c:	ldr	x0, [sp, #24]
    b420:	ldr	w0, [x0, #8]
    b424:	cmp	w0, #0x0
    b428:	cset	w0, eq  // eq = none
    b42c:	and	w0, w0, #0xff
    b430:	and	x0, x0, #0xff
    b434:	cmp	x0, #0x0
    b438:	b.eq	b464 <udev_queue_unref@@LIBUDEV_183+0x68>  // b.none
    b43c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b440:	add	x1, x0, #0xf43
    b444:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b448:	add	x4, x0, #0xfd8
    b44c:	mov	w3, #0x56                  	// #86
    b450:	mov	x2, x1
    b454:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b458:	add	x1, x0, #0xf70
    b45c:	mov	w0, #0x0                   	// #0
    b460:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    b464:	ldr	x0, [sp, #24]
    b468:	ldr	w0, [x0, #8]
    b46c:	sub	w1, w0, #0x1
    b470:	ldr	x0, [sp, #24]
    b474:	str	w1, [x0, #8]
    b478:	ldr	x0, [sp, #24]
    b47c:	ldr	w0, [x0, #8]
    b480:	cmp	w0, #0x0
    b484:	b.eq	b490 <udev_queue_unref@@LIBUDEV_183+0x94>  // b.none
    b488:	mov	x0, #0x0                   	// #0
    b48c:	b	b498 <udev_queue_unref@@LIBUDEV_183+0x9c>
    b490:	ldr	x0, [sp, #24]
    b494:	bl	b308 <udev_queue_new@@LIBUDEV_183+0x70>
    b498:	ldp	x29, x30, [sp], #32
    b49c:	ret

000000000000b4a0 <udev_queue_get_udev@@LIBUDEV_183>:
    b4a0:	stp	x29, x30, [sp, #-32]!
    b4a4:	mov	x29, sp
    b4a8:	str	x0, [sp, #24]
    b4ac:	ldr	x0, [sp, #24]
    b4b0:	cmp	x0, #0x0
    b4b4:	cset	w0, ne  // ne = any
    b4b8:	and	w0, w0, #0xff
    b4bc:	and	x0, x0, #0xff
    b4c0:	cmp	x0, #0x0
    b4c4:	b.ne	b4f8 <udev_queue_get_udev@@LIBUDEV_183+0x58>  // b.any
    b4c8:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b4cc:	add	x1, x0, #0xf43
    b4d0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b4d4:	add	x4, x0, #0xff0
    b4d8:	mov	w3, #0x61                  	// #97
    b4dc:	mov	x2, x1
    b4e0:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b4e4:	add	x1, x0, #0xf60
    b4e8:	mov	w0, #0x0                   	// #0
    b4ec:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    b4f0:	mov	w0, #0x1                   	// #1
    b4f4:	b	b4fc <udev_queue_get_udev@@LIBUDEV_183+0x5c>
    b4f8:	mov	w0, #0x0                   	// #0
    b4fc:	cmp	w0, #0x0
    b500:	b.eq	b51c <udev_queue_get_udev@@LIBUDEV_183+0x7c>  // b.none
    b504:	bl	57d0 <__errno_location@plt>
    b508:	mov	x1, x0
    b50c:	mov	w0, #0x16                  	// #22
    b510:	str	w0, [x1]
    b514:	mov	x0, #0x0                   	// #0
    b518:	b	b524 <udev_queue_get_udev@@LIBUDEV_183+0x84>
    b51c:	ldr	x0, [sp, #24]
    b520:	ldr	x0, [x0]
    b524:	ldp	x29, x30, [sp], #32
    b528:	ret

000000000000b52c <udev_queue_get_kernel_seqnum@@LIBUDEV_183>:
    b52c:	sub	sp, sp, #0x10
    b530:	str	x0, [sp, #8]
    b534:	mov	x0, #0x0                   	// #0
    b538:	add	sp, sp, #0x10
    b53c:	ret

000000000000b540 <udev_queue_get_udev_seqnum@@LIBUDEV_183>:
    b540:	sub	sp, sp, #0x10
    b544:	str	x0, [sp, #8]
    b548:	mov	x0, #0x0                   	// #0
    b54c:	add	sp, sp, #0x10
    b550:	ret

000000000000b554 <udev_queue_get_udev_is_active@@LIBUDEV_183>:
    b554:	stp	x29, x30, [sp, #-32]!
    b558:	mov	x29, sp
    b55c:	str	x0, [sp, #24]
    b560:	mov	w1, #0x0                   	// #0
    b564:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b568:	add	x0, x0, #0xf80
    b56c:	bl	53e0 <access@plt>
    b570:	mvn	w0, w0
    b574:	lsr	w0, w0, #31
    b578:	and	w0, w0, #0xff
    b57c:	ldp	x29, x30, [sp], #32
    b580:	ret

000000000000b584 <udev_queue_get_queue_is_empty@@LIBUDEV_183>:
    b584:	stp	x29, x30, [sp, #-32]!
    b588:	mov	x29, sp
    b58c:	str	x0, [sp, #24]
    b590:	mov	w1, #0x0                   	// #0
    b594:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b598:	add	x0, x0, #0xf98
    b59c:	bl	53e0 <access@plt>
    b5a0:	lsr	w0, w0, #31
    b5a4:	and	w0, w0, #0xff
    b5a8:	ldp	x29, x30, [sp], #32
    b5ac:	ret

000000000000b5b0 <udev_queue_get_seqnum_sequence_is_finished@@LIBUDEV_183>:
    b5b0:	stp	x29, x30, [sp, #-48]!
    b5b4:	mov	x29, sp
    b5b8:	str	x0, [sp, #40]
    b5bc:	str	x1, [sp, #32]
    b5c0:	str	x2, [sp, #24]
    b5c4:	ldr	x0, [sp, #40]
    b5c8:	bl	5820 <udev_queue_get_queue_is_empty@plt>
    b5cc:	ldp	x29, x30, [sp], #48
    b5d0:	ret

000000000000b5d4 <udev_queue_get_seqnum_is_finished@@LIBUDEV_183>:
    b5d4:	stp	x29, x30, [sp, #-32]!
    b5d8:	mov	x29, sp
    b5dc:	str	x0, [sp, #24]
    b5e0:	str	x1, [sp, #16]
    b5e4:	ldr	x0, [sp, #24]
    b5e8:	bl	5820 <udev_queue_get_queue_is_empty@plt>
    b5ec:	ldp	x29, x30, [sp], #32
    b5f0:	ret

000000000000b5f4 <udev_queue_get_queued_list_entry@@LIBUDEV_183>:
    b5f4:	stp	x29, x30, [sp, #-32]!
    b5f8:	mov	x29, sp
    b5fc:	str	x0, [sp, #24]
    b600:	bl	57d0 <__errno_location@plt>
    b604:	mov	x1, x0
    b608:	mov	w0, #0x3d                  	// #61
    b60c:	str	w0, [x1]
    b610:	mov	x0, #0x0                   	// #0
    b614:	ldp	x29, x30, [sp], #32
    b618:	ret

000000000000b61c <udev_queue_get_fd@@LIBUDEV_215>:
    b61c:	stp	x29, x30, [sp, #-64]!
    b620:	mov	x29, sp
    b624:	str	x19, [sp, #16]
    b628:	str	x0, [sp, #40]
    b62c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    b630:	ldr	x0, [x0, #4016]
    b634:	ldr	x1, [x0]
    b638:	str	x1, [sp, #56]
    b63c:	mov	x1, #0x0                   	// #0
    b640:	mov	w0, #0xffffffff            	// #-1
    b644:	str	w0, [sp, #48]
    b648:	ldr	x0, [sp, #40]
    b64c:	cmp	x0, #0x0
    b650:	cset	w0, ne  // ne = any
    b654:	and	w0, w0, #0xff
    b658:	and	x0, x0, #0xff
    b65c:	cmp	x0, #0x0
    b660:	b.ne	b694 <udev_queue_get_fd@@LIBUDEV_215+0x78>  // b.any
    b664:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b668:	add	x1, x0, #0xf43
    b66c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    b670:	add	x4, x0, #0x8
    b674:	mov	w3, #0xc9                  	// #201
    b678:	mov	x2, x1
    b67c:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b680:	add	x1, x0, #0xf60
    b684:	mov	w0, #0x0                   	// #0
    b688:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    b68c:	mov	w0, #0x1                   	// #1
    b690:	b	b698 <udev_queue_get_fd@@LIBUDEV_215+0x7c>
    b694:	mov	w0, #0x0                   	// #0
    b698:	cmp	w0, #0x0
    b69c:	b.eq	b6a8 <udev_queue_get_fd@@LIBUDEV_215+0x8c>  // b.none
    b6a0:	mov	w19, #0xffffffea            	// #-22
    b6a4:	b	b740 <udev_queue_get_fd@@LIBUDEV_215+0x124>
    b6a8:	ldr	x0, [sp, #40]
    b6ac:	ldr	w0, [x0, #12]
    b6b0:	cmp	w0, #0x0
    b6b4:	b.lt	b6c4 <udev_queue_get_fd@@LIBUDEV_215+0xa8>  // b.tstop
    b6b8:	ldr	x0, [sp, #40]
    b6bc:	ldr	w19, [x0, #12]
    b6c0:	b	b740 <udev_queue_get_fd@@LIBUDEV_215+0x124>
    b6c4:	mov	w0, #0x80000               	// #524288
    b6c8:	bl	51d0 <inotify_init1@plt>
    b6cc:	str	w0, [sp, #48]
    b6d0:	ldr	w0, [sp, #48]
    b6d4:	cmp	w0, #0x0
    b6d8:	b.ge	b6ec <udev_queue_get_fd@@LIBUDEV_215+0xd0>  // b.tcont
    b6dc:	bl	57d0 <__errno_location@plt>
    b6e0:	ldr	w0, [x0]
    b6e4:	neg	w19, w0
    b6e8:	b	b740 <udev_queue_get_fd@@LIBUDEV_215+0x124>
    b6ec:	ldr	w3, [sp, #48]
    b6f0:	mov	w2, #0x200                 	// #512
    b6f4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b6f8:	add	x1, x0, #0xfa8
    b6fc:	mov	w0, w3
    b700:	bl	5850 <inotify_add_watch@plt>
    b704:	cmp	w0, #0x0
    b708:	b.ge	b71c <udev_queue_get_fd@@LIBUDEV_215+0x100>  // b.tcont
    b70c:	bl	57d0 <__errno_location@plt>
    b710:	ldr	w0, [x0]
    b714:	neg	w19, w0
    b718:	b	b740 <udev_queue_get_fd@@LIBUDEV_215+0x124>
    b71c:	ldr	w0, [sp, #48]
    b720:	str	w0, [sp, #52]
    b724:	mov	w0, #0xffffffff            	// #-1
    b728:	str	w0, [sp, #48]
    b72c:	ldr	w1, [sp, #52]
    b730:	ldr	x0, [sp, #40]
    b734:	str	w1, [x0, #12]
    b738:	ldr	x0, [sp, #40]
    b73c:	ldr	w19, [x0, #12]
    b740:	add	x0, sp, #0x30
    b744:	bl	b274 <udev_monitor_filter_remove@@LIBUDEV_183+0x170>
    b748:	mov	w1, w19
    b74c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    b750:	ldr	x0, [x0, #4016]
    b754:	ldr	x2, [sp, #56]
    b758:	ldr	x0, [x0]
    b75c:	eor	x0, x2, x0
    b760:	cmp	x0, #0x0
    b764:	b.eq	b76c <udev_queue_get_fd@@LIBUDEV_215+0x150>  // b.none
    b768:	bl	5390 <__stack_chk_fail@plt>
    b76c:	mov	w0, w1
    b770:	ldr	x19, [sp, #16]
    b774:	ldp	x29, x30, [sp], #64
    b778:	ret

000000000000b77c <udev_queue_flush@@LIBUDEV_215>:
    b77c:	stp	x29, x30, [sp, #-48]!
    b780:	mov	x29, sp
    b784:	str	x0, [sp, #24]
    b788:	ldr	x0, [sp, #24]
    b78c:	cmp	x0, #0x0
    b790:	cset	w0, ne  // ne = any
    b794:	and	w0, w0, #0xff
    b798:	and	x0, x0, #0xff
    b79c:	cmp	x0, #0x0
    b7a0:	b.ne	b7d4 <udev_queue_flush@@LIBUDEV_215+0x58>  // b.any
    b7a4:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b7a8:	add	x1, x0, #0xf43
    b7ac:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    b7b0:	add	x4, x0, #0x20
    b7b4:	mov	w3, #0xe2                  	// #226
    b7b8:	mov	x2, x1
    b7bc:	adrp	x0, 36000 <udev_util_encode_string@@LIBUDEV_183+0x2a7d0>
    b7c0:	add	x1, x0, #0xf60
    b7c4:	mov	w0, #0x0                   	// #0
    b7c8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    b7cc:	mov	w0, #0x1                   	// #1
    b7d0:	b	b7d8 <udev_queue_flush@@LIBUDEV_215+0x5c>
    b7d4:	mov	w0, #0x0                   	// #0
    b7d8:	cmp	w0, #0x0
    b7dc:	b.eq	b7e8 <udev_queue_flush@@LIBUDEV_215+0x6c>  // b.none
    b7e0:	mov	w0, #0xffffffea            	// #-22
    b7e4:	b	b828 <udev_queue_flush@@LIBUDEV_215+0xac>
    b7e8:	ldr	x0, [sp, #24]
    b7ec:	ldr	w0, [x0, #12]
    b7f0:	cmp	w0, #0x0
    b7f4:	b.ge	b800 <udev_queue_flush@@LIBUDEV_215+0x84>  // b.tcont
    b7f8:	mov	w0, #0xffffffea            	// #-22
    b7fc:	b	b828 <udev_queue_flush@@LIBUDEV_215+0xac>
    b800:	ldr	x0, [sp, #24]
    b804:	ldr	w0, [x0, #12]
    b808:	bl	2ad34 <udev_util_encode_string@@LIBUDEV_183+0x1f504>
    b80c:	str	w0, [sp, #44]
    b810:	ldr	w0, [sp, #44]
    b814:	cmp	w0, #0x0
    b818:	b.ge	b824 <udev_queue_flush@@LIBUDEV_215+0xa8>  // b.tcont
    b81c:	ldr	w0, [sp, #44]
    b820:	b	b828 <udev_queue_flush@@LIBUDEV_215+0xac>
    b824:	mov	w0, #0x0                   	// #0
    b828:	ldp	x29, x30, [sp], #48
    b82c:	ret

000000000000b830 <udev_util_encode_string@@LIBUDEV_183>:
    b830:	stp	x29, x30, [sp, #-48]!
    b834:	mov	x29, sp
    b838:	str	x0, [sp, #40]
    b83c:	str	x1, [sp, #32]
    b840:	str	x2, [sp, #24]
    b844:	ldr	x2, [sp, #24]
    b848:	ldr	x1, [sp, #32]
    b84c:	ldr	x0, [sp, #40]
    b850:	bl	22c44 <udev_util_encode_string@@LIBUDEV_183+0x17414>
    b854:	ldp	x29, x30, [sp], #48
    b858:	ret
    b85c:	stp	x29, x30, [sp, #-32]!
    b860:	mov	x29, sp
    b864:	str	x0, [sp, #24]
    b868:	ldr	x0, [sp, #24]
    b86c:	ldr	x0, [x0]
    b870:	cmp	x0, #0x0
    b874:	b.eq	b884 <udev_util_encode_string@@LIBUDEV_183+0x54>  // b.none
    b878:	ldr	x0, [sp, #24]
    b87c:	ldr	x0, [x0]
    b880:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    b884:	nop
    b888:	ldp	x29, x30, [sp], #32
    b88c:	ret
    b890:	stp	x29, x30, [sp, #-32]!
    b894:	mov	x29, sp
    b898:	str	x0, [sp, #24]
    b89c:	ldr	x0, [sp, #24]
    b8a0:	ldr	x0, [x0]
    b8a4:	cmp	x0, #0x0
    b8a8:	b.eq	b8b8 <udev_util_encode_string@@LIBUDEV_183+0x88>  // b.none
    b8ac:	ldr	x0, [sp, #24]
    b8b0:	ldr	x0, [x0]
    b8b4:	bl	be54 <udev_util_encode_string@@LIBUDEV_183+0x624>
    b8b8:	nop
    b8bc:	ldp	x29, x30, [sp], #32
    b8c0:	ret
    b8c4:	stp	x29, x30, [sp, #-32]!
    b8c8:	mov	x29, sp
    b8cc:	str	x0, [sp, #24]
    b8d0:	ldr	x0, [sp, #24]
    b8d4:	bl	54b0 <free@plt>
    b8d8:	mov	x0, #0x0                   	// #0
    b8dc:	ldp	x29, x30, [sp], #32
    b8e0:	ret
    b8e4:	stp	x29, x30, [sp, #-32]!
    b8e8:	mov	x29, sp
    b8ec:	str	x0, [sp, #24]
    b8f0:	ldr	x0, [sp, #24]
    b8f4:	ldr	x0, [x0]
    b8f8:	bl	54b0 <free@plt>
    b8fc:	nop
    b900:	ldp	x29, x30, [sp], #32
    b904:	ret
    b908:	sub	sp, sp, #0x10
    b90c:	str	x0, [sp, #8]
    b910:	str	x1, [sp]
    b914:	ldr	x0, [sp]
    b918:	cmp	x0, #0x0
    b91c:	cset	w0, ne  // ne = any
    b920:	and	w0, w0, #0xff
    b924:	and	x0, x0, #0xff
    b928:	cmp	x0, #0x0
    b92c:	b.eq	b970 <udev_util_encode_string@@LIBUDEV_183+0x140>  // b.none
    b930:	mov	x2, #0x0                   	// #0
    b934:	ldr	x1, [sp, #8]
    b938:	ldr	x0, [sp]
    b93c:	umulh	x0, x1, x0
    b940:	cmp	x0, #0x0
    b944:	b.eq	b94c <udev_util_encode_string@@LIBUDEV_183+0x11c>  // b.none
    b948:	mov	x2, #0x1                   	// #1
    b94c:	mov	x0, x2
    b950:	cmp	x0, #0x0
    b954:	cset	w0, ne  // ne = any
    b958:	and	w0, w0, #0xff
    b95c:	and	x0, x0, #0xff
    b960:	cmp	x0, #0x0
    b964:	b.eq	b970 <udev_util_encode_string@@LIBUDEV_183+0x140>  // b.none
    b968:	mov	w0, #0x1                   	// #1
    b96c:	b	b974 <udev_util_encode_string@@LIBUDEV_183+0x144>
    b970:	mov	w0, #0x0                   	// #0
    b974:	and	w0, w0, #0x1
    b978:	and	w0, w0, #0xff
    b97c:	add	sp, sp, #0x10
    b980:	ret
    b984:	stp	x29, x30, [sp, #-32]!
    b988:	mov	x29, sp
    b98c:	str	x0, [sp, #24]
    b990:	str	x1, [sp, #16]
    b994:	ldr	x1, [sp, #16]
    b998:	ldr	x0, [sp, #24]
    b99c:	bl	b908 <udev_util_encode_string@@LIBUDEV_183+0xd8>
    b9a0:	and	w0, w0, #0xff
    b9a4:	cmp	w0, #0x0
    b9a8:	b.eq	b9b4 <udev_util_encode_string@@LIBUDEV_183+0x184>  // b.none
    b9ac:	mov	x0, #0x0                   	// #0
    b9b0:	b	b9d0 <udev_util_encode_string@@LIBUDEV_183+0x1a0>
    b9b4:	ldr	x1, [sp, #24]
    b9b8:	ldr	x0, [sp, #16]
    b9bc:	mul	x0, x1, x0
    b9c0:	cmp	x0, #0x0
    b9c4:	b.ne	b9cc <udev_util_encode_string@@LIBUDEV_183+0x19c>  // b.any
    b9c8:	mov	x0, #0x1                   	// #1
    b9cc:	bl	5220 <malloc@plt>
    b9d0:	ldp	x29, x30, [sp], #32
    b9d4:	ret
    b9d8:	stp	x29, x30, [sp, #-48]!
    b9dc:	mov	x29, sp
    b9e0:	str	x0, [sp, #24]
    b9e4:	str	x1, [sp, #16]
    b9e8:	ldr	x0, [sp, #16]
    b9ec:	bl	5040 <strlen@plt>
    b9f0:	str	x0, [sp, #40]
    b9f4:	ldr	x2, [sp, #40]
    b9f8:	ldr	x1, [sp, #16]
    b9fc:	ldr	x0, [sp, #24]
    ba00:	bl	5270 <strncmp@plt>
    ba04:	cmp	w0, #0x0
    ba08:	b.ne	ba1c <udev_util_encode_string@@LIBUDEV_183+0x1ec>  // b.any
    ba0c:	ldr	x1, [sp, #24]
    ba10:	ldr	x0, [sp, #40]
    ba14:	add	x0, x1, x0
    ba18:	b	ba20 <udev_util_encode_string@@LIBUDEV_183+0x1f0>
    ba1c:	mov	x0, #0x0                   	// #0
    ba20:	ldp	x29, x30, [sp], #48
    ba24:	ret
    ba28:	stp	x29, x30, [sp, #-32]!
    ba2c:	mov	x29, sp
    ba30:	str	x0, [sp, #24]
    ba34:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ba38:	ldr	x2, [x0, #4040]
    ba3c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ba40:	ldr	x1, [x0, #4040]
    ba44:	ldr	x0, [sp, #24]
    ba48:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
    ba4c:	ldp	x29, x30, [sp], #32
    ba50:	ret
    ba54:	stp	x29, x30, [sp, #-32]!
    ba58:	mov	x29, sp
    ba5c:	str	x0, [sp, #24]
    ba60:	ldr	x0, [sp, #24]
    ba64:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
    ba68:	ldp	x29, x30, [sp], #32
    ba6c:	ret
    ba70:	stp	x29, x30, [sp, #-32]!
    ba74:	mov	x29, sp
    ba78:	str	x0, [sp, #24]
    ba7c:	ldr	x0, [sp, #24]
    ba80:	bl	ba54 <udev_util_encode_string@@LIBUDEV_183+0x224>
    ba84:	cmp	w0, #0x0
    ba88:	cset	w0, eq  // eq = none
    ba8c:	and	w0, w0, #0xff
    ba90:	ldp	x29, x30, [sp], #32
    ba94:	ret
    ba98:	stp	x29, x30, [sp, #-48]!
    ba9c:	mov	x29, sp
    baa0:	str	x0, [sp, #40]
    baa4:	str	x1, [sp, #32]
    baa8:	str	x2, [sp, #24]
    baac:	str	x3, [sp, #16]
    bab0:	ldr	x3, [sp, #16]
    bab4:	ldr	x2, [sp, #24]
    bab8:	ldr	x1, [sp, #32]
    babc:	ldr	x0, [sp, #40]
    bac0:	bl	28328 <udev_util_encode_string@@LIBUDEV_183+0x1caf8>
    bac4:	and	w0, w0, #0xff
    bac8:	ldp	x29, x30, [sp], #48
    bacc:	ret
    bad0:	stp	x29, x30, [sp, #-32]!
    bad4:	mov	x29, sp
    bad8:	str	x0, [sp, #24]
    badc:	ldr	x0, [sp, #24]
    bae0:	ldr	x0, [x0]
    bae4:	cmp	x0, #0x0
    bae8:	b.eq	baf8 <udev_util_encode_string@@LIBUDEV_183+0x2c8>  // b.none
    baec:	ldr	x0, [sp, #24]
    baf0:	ldr	x0, [x0]
    baf4:	bl	5380 <closedir@plt>
    baf8:	nop
    bafc:	ldp	x29, x30, [sp], #32
    bb00:	ret
    bb04:	stp	x29, x30, [sp, #-32]!
    bb08:	mov	x29, sp
    bb0c:	str	x0, [sp, #24]
    bb10:	mov	x2, #0x0                   	// #0
    bb14:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    bb18:	ldr	x1, [x0, #4040]
    bb1c:	ldr	x0, [sp, #24]
    bb20:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
    bb24:	ldp	x29, x30, [sp], #32
    bb28:	ret
    bb2c:	stp	x29, x30, [sp, #-32]!
    bb30:	mov	x29, sp
    bb34:	str	x0, [sp, #24]
    bb38:	ldr	x0, [sp, #24]
    bb3c:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
    bb40:	ldp	x29, x30, [sp], #32
    bb44:	ret
    bb48:	stp	x29, x30, [sp, #-32]!
    bb4c:	mov	x29, sp
    bb50:	str	x0, [sp, #24]
    bb54:	ldr	x0, [sp, #24]
    bb58:	bl	bb2c <udev_util_encode_string@@LIBUDEV_183+0x2fc>
    bb5c:	cmp	w0, #0x0
    bb60:	cset	w0, eq  // eq = none
    bb64:	and	w0, w0, #0xff
    bb68:	ldp	x29, x30, [sp], #32
    bb6c:	ret
    bb70:	stp	x29, x30, [sp, #-32]!
    bb74:	mov	x29, sp
    bb78:	str	x0, [sp, #24]
    bb7c:	mov	x2, #0x0                   	// #0
    bb80:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    bb84:	ldr	x1, [x0, #4040]
    bb88:	ldr	x0, [sp, #24]
    bb8c:	bl	28900 <udev_util_encode_string@@LIBUDEV_183+0x1d0d0>
    bb90:	nop
    bb94:	ldp	x29, x30, [sp], #32
    bb98:	ret
    bb9c:	stp	x29, x30, [sp, #-48]!
    bba0:	mov	x29, sp
    bba4:	str	x0, [sp, #40]
    bba8:	str	x1, [sp, #32]
    bbac:	str	x2, [sp, #24]
    bbb0:	str	x3, [sp, #16]
    bbb4:	ldr	x0, [sp, #32]
    bbb8:	cmp	x0, #0x1
    bbbc:	b.ls	bc1c <udev_util_encode_string@@LIBUDEV_183+0x3ec>  // b.plast
    bbc0:	ldr	x0, [sp, #40]
    bbc4:	cmp	x0, #0x0
    bbc8:	cset	w0, eq  // eq = none
    bbcc:	and	w0, w0, #0xff
    bbd0:	and	x0, x0, #0xff
    bbd4:	cmp	x0, #0x0
    bbd8:	b.eq	bc04 <udev_util_encode_string@@LIBUDEV_183+0x3d4>  // b.none
    bbdc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bbe0:	add	x1, x0, #0x3b
    bbe4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bbe8:	add	x4, x0, #0x908
    bbec:	mov	w3, #0x2e                  	// #46
    bbf0:	mov	x2, x1
    bbf4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bbf8:	add	x1, x0, #0x58
    bbfc:	mov	w0, #0x0                   	// #0
    bc00:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    bc04:	ldr	x3, [sp, #16]
    bc08:	ldr	x2, [sp, #24]
    bc0c:	ldr	x1, [sp, #32]
    bc10:	ldr	x0, [sp, #40]
    bc14:	bl	5140 <qsort@plt>
    bc18:	b	bc20 <udev_util_encode_string@@LIBUDEV_183+0x3f0>
    bc1c:	nop
    bc20:	ldp	x29, x30, [sp], #48
    bc24:	ret
    bc28:	stp	x29, x30, [sp, #-192]!
    bc2c:	mov	x29, sp
    bc30:	str	x19, [sp, #16]
    bc34:	str	x0, [sp, #40]
    bc38:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    bc3c:	ldr	x0, [x0, #4016]
    bc40:	ldr	x1, [x0]
    bc44:	str	x1, [sp, #184]
    bc48:	mov	x1, #0x0                   	// #0
    bc4c:	str	xzr, [sp, #64]
    bc50:	ldr	x0, [sp, #40]
    bc54:	cmp	x0, #0x0
    bc58:	cset	w0, eq  // eq = none
    bc5c:	and	w0, w0, #0xff
    bc60:	and	x0, x0, #0xff
    bc64:	cmp	x0, #0x0
    bc68:	b.eq	bc94 <udev_util_encode_string@@LIBUDEV_183+0x464>  // b.none
    bc6c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bc70:	add	x1, x0, #0x63
    bc74:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bc78:	add	x4, x0, #0x578
    bc7c:	mov	w3, #0x31                  	// #49
    bc80:	mov	x2, x1
    bc84:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bc88:	add	x1, x0, #0x90
    bc8c:	mov	w0, #0x0                   	// #0
    bc90:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    bc94:	mov	x1, #0x1                   	// #1
    bc98:	mov	x0, #0x78                  	// #120
    bc9c:	bl	b984 <udev_util_encode_string@@LIBUDEV_183+0x154>
    bca0:	str	x0, [sp, #64]
    bca4:	ldr	x0, [sp, #64]
    bca8:	cmp	x0, #0x0
    bcac:	b.ne	bcb8 <udev_util_encode_string@@LIBUDEV_183+0x488>  // b.any
    bcb0:	mov	w19, #0xfffffff4            	// #-12
    bcb4:	b	bd08 <udev_util_encode_string@@LIBUDEV_183+0x4d8>
    bcb8:	ldr	x0, [sp, #64]
    bcbc:	stp	xzr, xzr, [x0]
    bcc0:	stp	xzr, xzr, [x0, #16]
    bcc4:	stp	xzr, xzr, [x0, #32]
    bcc8:	stp	xzr, xzr, [x0, #48]
    bccc:	stp	xzr, xzr, [x0, #64]
    bcd0:	stp	xzr, xzr, [x0, #80]
    bcd4:	stp	xzr, xzr, [x0, #96]
    bcd8:	str	xzr, [x0, #112]
    bcdc:	mov	w1, #0x1                   	// #1
    bce0:	str	w1, [x0]
    bce4:	mov	w1, #0xffffffff            	// #-1
    bce8:	str	w1, [x0, #4]
    bcec:	ldr	x0, [sp, #64]
    bcf0:	str	x0, [sp, #56]
    bcf4:	str	xzr, [sp, #64]
    bcf8:	ldr	x1, [sp, #56]
    bcfc:	ldr	x0, [sp, #40]
    bd00:	str	x1, [x0]
    bd04:	mov	w19, #0x0                   	// #0
    bd08:	add	x0, sp, #0x40
    bd0c:	bl	b890 <udev_util_encode_string@@LIBUDEV_183+0x60>
    bd10:	mov	w1, w19
    bd14:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    bd18:	ldr	x0, [x0, #4016]
    bd1c:	ldr	x2, [sp, #184]
    bd20:	ldr	x0, [x0]
    bd24:	eor	x0, x2, x0
    bd28:	cmp	x0, #0x0
    bd2c:	b.eq	bd34 <udev_util_encode_string@@LIBUDEV_183+0x504>  // b.none
    bd30:	bl	5390 <__stack_chk_fail@plt>
    bd34:	mov	w0, w1
    bd38:	ldr	x19, [sp, #16]
    bd3c:	ldp	x29, x30, [sp], #192
    bd40:	ret
    bd44:	stp	x29, x30, [sp, #-48]!
    bd48:	mov	x29, sp
    bd4c:	str	x0, [sp, #24]
    bd50:	ldr	x0, [sp, #24]
    bd54:	cmp	x0, #0x0
    bd58:	cset	w0, eq  // eq = none
    bd5c:	and	w0, w0, #0xff
    bd60:	and	x0, x0, #0xff
    bd64:	cmp	x0, #0x0
    bd68:	b.eq	bd94 <udev_util_encode_string@@LIBUDEV_183+0x564>  // b.none
    bd6c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bd70:	add	x1, x0, #0x63
    bd74:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bd78:	add	x4, x0, #0x598
    bd7c:	mov	w3, #0x44                  	// #68
    bd80:	mov	x2, x1
    bd84:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bd88:	add	x1, x0, #0x98
    bd8c:	mov	w0, #0x0                   	// #0
    bd90:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    bd94:	str	xzr, [sp, #40]
    bd98:	b	bdc4 <udev_util_encode_string@@LIBUDEV_183+0x594>
    bd9c:	ldr	x0, [sp, #24]
    bda0:	ldr	x1, [x0, #8]
    bda4:	ldr	x0, [sp, #40]
    bda8:	lsl	x0, x0, #3
    bdac:	add	x0, x1, x0
    bdb0:	ldr	x0, [x0]
    bdb4:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    bdb8:	ldr	x0, [sp, #40]
    bdbc:	add	x0, x0, #0x1
    bdc0:	str	x0, [sp, #40]
    bdc4:	ldr	x0, [sp, #24]
    bdc8:	ldr	x0, [x0, #16]
    bdcc:	ldr	x1, [sp, #40]
    bdd0:	cmp	x1, x0
    bdd4:	b.cc	bd9c <udev_util_encode_string@@LIBUDEV_183+0x56c>  // b.lo, b.ul, b.last
    bdd8:	ldr	x0, [sp, #24]
    bddc:	ldr	x0, [x0, #8]
    bde0:	bl	54b0 <free@plt>
    bde4:	ldr	x0, [sp, #24]
    bde8:	ldr	x0, [x0, #48]
    bdec:	bl	bb04 <udev_util_encode_string@@LIBUDEV_183+0x2d4>
    bdf0:	ldr	x0, [sp, #24]
    bdf4:	ldr	x0, [x0, #56]
    bdf8:	bl	bb04 <udev_util_encode_string@@LIBUDEV_183+0x2d4>
    bdfc:	ldr	x0, [sp, #24]
    be00:	ldr	x0, [x0, #64]
    be04:	bl	ba28 <udev_util_encode_string@@LIBUDEV_183+0x1f8>
    be08:	ldr	x0, [sp, #24]
    be0c:	ldr	x0, [x0, #72]
    be10:	bl	ba28 <udev_util_encode_string@@LIBUDEV_183+0x1f8>
    be14:	ldr	x0, [sp, #24]
    be18:	ldr	x0, [x0, #80]
    be1c:	bl	ba28 <udev_util_encode_string@@LIBUDEV_183+0x1f8>
    be20:	ldr	x0, [sp, #24]
    be24:	ldr	x0, [x0, #88]
    be28:	bl	bb04 <udev_util_encode_string@@LIBUDEV_183+0x2d4>
    be2c:	ldr	x0, [sp, #24]
    be30:	ldr	x0, [x0, #96]
    be34:	bl	bb04 <udev_util_encode_string@@LIBUDEV_183+0x2d4>
    be38:	ldr	x0, [sp, #24]
    be3c:	ldr	x0, [x0, #104]
    be40:	bl	bb04 <udev_util_encode_string@@LIBUDEV_183+0x2d4>
    be44:	ldr	x0, [sp, #24]
    be48:	bl	b8c4 <udev_util_encode_string@@LIBUDEV_183+0x94>
    be4c:	ldp	x29, x30, [sp], #48
    be50:	ret
    be54:	stp	x29, x30, [sp, #-32]!
    be58:	mov	x29, sp
    be5c:	str	x0, [sp, #24]
    be60:	ldr	x0, [sp, #24]
    be64:	cmp	x0, #0x0
    be68:	b.ne	be74 <udev_util_encode_string@@LIBUDEV_183+0x644>  // b.any
    be6c:	mov	x0, #0x0                   	// #0
    be70:	b	bef0 <udev_util_encode_string@@LIBUDEV_183+0x6c0>
    be74:	ldr	x0, [sp, #24]
    be78:	ldr	w0, [x0]
    be7c:	cmp	w0, #0x0
    be80:	cset	w0, eq  // eq = none
    be84:	and	w0, w0, #0xff
    be88:	and	x0, x0, #0xff
    be8c:	cmp	x0, #0x0
    be90:	b.eq	bebc <udev_util_encode_string@@LIBUDEV_183+0x68c>  // b.none
    be94:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    be98:	add	x1, x0, #0x63
    be9c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bea0:	add	x4, x0, #0x5b0
    bea4:	mov	w3, #0x56                  	// #86
    bea8:	mov	x2, x1
    beac:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    beb0:	add	x1, x0, #0xa8
    beb4:	mov	w0, #0x0                   	// #0
    beb8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    bebc:	ldr	x0, [sp, #24]
    bec0:	ldr	w0, [x0]
    bec4:	sub	w1, w0, #0x1
    bec8:	ldr	x0, [sp, #24]
    becc:	str	w1, [x0]
    bed0:	ldr	x0, [sp, #24]
    bed4:	ldr	w0, [x0]
    bed8:	cmp	w0, #0x0
    bedc:	b.eq	bee8 <udev_util_encode_string@@LIBUDEV_183+0x6b8>  // b.none
    bee0:	mov	x0, #0x0                   	// #0
    bee4:	b	bef0 <udev_util_encode_string@@LIBUDEV_183+0x6c0>
    bee8:	ldr	x0, [sp, #24]
    beec:	bl	bd44 <udev_util_encode_string@@LIBUDEV_183+0x514>
    bef0:	ldp	x29, x30, [sp], #32
    bef4:	ret
    bef8:	stp	x29, x30, [sp, #-64]!
    befc:	mov	x29, sp
    bf00:	str	x0, [sp, #40]
    bf04:	str	x1, [sp, #32]
    bf08:	str	w2, [sp, #28]
    bf0c:	ldr	x0, [sp, #40]
    bf10:	cmp	x0, #0x0
    bf14:	cset	w0, ne  // ne = any
    bf18:	and	w0, w0, #0xff
    bf1c:	and	x0, x0, #0xff
    bf20:	cmp	x0, #0x0
    bf24:	b.ne	bf58 <udev_util_encode_string@@LIBUDEV_183+0x728>  // b.any
    bf28:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bf2c:	add	x1, x0, #0x63
    bf30:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bf34:	add	x4, x0, #0x5d0
    bf38:	mov	w3, #0x5c                  	// #92
    bf3c:	mov	x2, x1
    bf40:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bf44:	add	x1, x0, #0x98
    bf48:	mov	w0, #0x0                   	// #0
    bf4c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    bf50:	mov	w0, #0x1                   	// #1
    bf54:	b	bf5c <udev_util_encode_string@@LIBUDEV_183+0x72c>
    bf58:	mov	w0, #0x0                   	// #0
    bf5c:	cmp	w0, #0x0
    bf60:	b.eq	bf6c <udev_util_encode_string@@LIBUDEV_183+0x73c>  // b.none
    bf64:	mov	w0, #0xffffffea            	// #-22
    bf68:	b	c04c <udev_util_encode_string@@LIBUDEV_183+0x81c>
    bf6c:	ldr	x0, [sp, #32]
    bf70:	cmp	x0, #0x0
    bf74:	cset	w0, ne  // ne = any
    bf78:	and	w0, w0, #0xff
    bf7c:	and	x0, x0, #0xff
    bf80:	cmp	x0, #0x0
    bf84:	b.ne	bfb8 <udev_util_encode_string@@LIBUDEV_183+0x788>  // b.any
    bf88:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bf8c:	add	x1, x0, #0x63
    bf90:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bf94:	add	x4, x0, #0x5d0
    bf98:	mov	w3, #0x5d                  	// #93
    bf9c:	mov	x2, x1
    bfa0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    bfa4:	add	x1, x0, #0xb8
    bfa8:	mov	w0, #0x0                   	// #0
    bfac:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    bfb0:	mov	w0, #0x1                   	// #1
    bfb4:	b	bfbc <udev_util_encode_string@@LIBUDEV_183+0x78c>
    bfb8:	mov	w0, #0x0                   	// #0
    bfbc:	cmp	w0, #0x0
    bfc0:	b.eq	bfcc <udev_util_encode_string@@LIBUDEV_183+0x79c>  // b.none
    bfc4:	mov	w0, #0xffffffea            	// #-22
    bfc8:	b	c04c <udev_util_encode_string@@LIBUDEV_183+0x81c>
    bfcc:	ldr	w0, [sp, #28]
    bfd0:	cmp	w0, #0x0
    bfd4:	b.eq	bfe8 <udev_util_encode_string@@LIBUDEV_183+0x7b8>  // b.none
    bfd8:	ldr	x0, [sp, #40]
    bfdc:	add	x0, x0, #0x30
    bfe0:	str	x0, [sp, #56]
    bfe4:	b	bff4 <udev_util_encode_string@@LIBUDEV_183+0x7c4>
    bfe8:	ldr	x0, [sp, #40]
    bfec:	add	x0, x0, #0x38
    bff0:	str	x0, [sp, #56]
    bff4:	mov	x1, #0x0                   	// #0
    bff8:	ldr	x0, [sp, #56]
    bffc:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
    c000:	str	w0, [sp, #52]
    c004:	ldr	w0, [sp, #52]
    c008:	cmp	w0, #0x0
    c00c:	b.ge	c018 <udev_util_encode_string@@LIBUDEV_183+0x7e8>  // b.tcont
    c010:	ldr	w0, [sp, #52]
    c014:	b	c04c <udev_util_encode_string@@LIBUDEV_183+0x81c>
    c018:	ldr	x0, [sp, #56]
    c01c:	ldr	x0, [x0]
    c020:	ldr	x1, [sp, #32]
    c024:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
    c028:	str	w0, [sp, #52]
    c02c:	ldr	w0, [sp, #52]
    c030:	cmp	w0, #0x0
    c034:	b.ge	c040 <udev_util_encode_string@@LIBUDEV_183+0x810>  // b.tcont
    c038:	ldr	w0, [sp, #52]
    c03c:	b	c04c <udev_util_encode_string@@LIBUDEV_183+0x81c>
    c040:	ldr	x0, [sp, #40]
    c044:	strb	wzr, [x0, #40]
    c048:	mov	w0, #0x0                   	// #0
    c04c:	ldp	x29, x30, [sp], #64
    c050:	ret
    c054:	stp	x29, x30, [sp, #-112]!
    c058:	mov	x29, sp
    c05c:	str	x19, [sp, #16]
    c060:	str	x0, [sp, #56]
    c064:	str	x1, [sp, #48]
    c068:	str	x2, [sp, #40]
    c06c:	str	w3, [sp, #36]
    c070:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c074:	ldr	x0, [x0, #4016]
    c078:	ldr	x1, [x0]
    c07c:	str	x1, [sp, #104]
    c080:	mov	x1, #0x0                   	// #0
    c084:	str	xzr, [sp, #80]
    c088:	str	xzr, [sp, #88]
    c08c:	ldr	x0, [sp, #56]
    c090:	cmp	x0, #0x0
    c094:	cset	w0, ne  // ne = any
    c098:	and	w0, w0, #0xff
    c09c:	and	x0, x0, #0xff
    c0a0:	cmp	x0, #0x0
    c0a4:	b.ne	c0d8 <udev_util_encode_string@@LIBUDEV_183+0x8a8>  // b.any
    c0a8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c0ac:	add	x1, x0, #0x63
    c0b0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c0b4:	add	x4, x0, #0x600
    c0b8:	mov	w3, #0x76                  	// #118
    c0bc:	mov	x2, x1
    c0c0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c0c4:	add	x1, x0, #0x98
    c0c8:	mov	w0, #0x0                   	// #0
    c0cc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c0d0:	mov	w0, #0x1                   	// #1
    c0d4:	b	c0dc <udev_util_encode_string@@LIBUDEV_183+0x8ac>
    c0d8:	mov	w0, #0x0                   	// #0
    c0dc:	cmp	w0, #0x0
    c0e0:	b.eq	c0ec <udev_util_encode_string@@LIBUDEV_183+0x8bc>  // b.none
    c0e4:	mov	w19, #0xffffffea            	// #-22
    c0e8:	b	c224 <udev_util_encode_string@@LIBUDEV_183+0x9f4>
    c0ec:	ldr	x0, [sp, #48]
    c0f0:	cmp	x0, #0x0
    c0f4:	cset	w0, ne  // ne = any
    c0f8:	and	w0, w0, #0xff
    c0fc:	and	x0, x0, #0xff
    c100:	cmp	x0, #0x0
    c104:	b.ne	c138 <udev_util_encode_string@@LIBUDEV_183+0x908>  // b.any
    c108:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c10c:	add	x1, x0, #0x63
    c110:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c114:	add	x4, x0, #0x600
    c118:	mov	w3, #0x77                  	// #119
    c11c:	mov	x2, x1
    c120:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c124:	add	x1, x0, #0xc8
    c128:	mov	w0, #0x0                   	// #0
    c12c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c130:	mov	w0, #0x1                   	// #1
    c134:	b	c13c <udev_util_encode_string@@LIBUDEV_183+0x90c>
    c138:	mov	w0, #0x0                   	// #0
    c13c:	cmp	w0, #0x0
    c140:	b.eq	c14c <udev_util_encode_string@@LIBUDEV_183+0x91c>  // b.none
    c144:	mov	w19, #0xffffffea            	// #-22
    c148:	b	c224 <udev_util_encode_string@@LIBUDEV_183+0x9f4>
    c14c:	ldr	w0, [sp, #36]
    c150:	cmp	w0, #0x0
    c154:	b.eq	c168 <udev_util_encode_string@@LIBUDEV_183+0x938>  // b.none
    c158:	ldr	x0, [sp, #56]
    c15c:	add	x0, x0, #0x40
    c160:	str	x0, [sp, #96]
    c164:	b	c174 <udev_util_encode_string@@LIBUDEV_183+0x944>
    c168:	ldr	x0, [sp, #56]
    c16c:	add	x0, x0, #0x48
    c170:	str	x0, [sp, #96]
    c174:	mov	x1, #0x0                   	// #0
    c178:	ldr	x0, [sp, #96]
    c17c:	bl	286f0 <udev_util_encode_string@@LIBUDEV_183+0x1cec0>
    c180:	str	w0, [sp, #76]
    c184:	ldr	w0, [sp, #76]
    c188:	cmp	w0, #0x0
    c18c:	b.ge	c198 <udev_util_encode_string@@LIBUDEV_183+0x968>  // b.tcont
    c190:	ldr	w19, [sp, #76]
    c194:	b	c224 <udev_util_encode_string@@LIBUDEV_183+0x9f4>
    c198:	ldr	x0, [sp, #48]
    c19c:	bl	5370 <strdup@plt>
    c1a0:	str	x0, [sp, #80]
    c1a4:	ldr	x0, [sp, #80]
    c1a8:	cmp	x0, #0x0
    c1ac:	b.ne	c1b8 <udev_util_encode_string@@LIBUDEV_183+0x988>  // b.any
    c1b0:	mov	w19, #0xfffffff4            	// #-12
    c1b4:	b	c224 <udev_util_encode_string@@LIBUDEV_183+0x9f4>
    c1b8:	ldr	x0, [sp, #40]
    c1bc:	cmp	x0, #0x0
    c1c0:	b.eq	c1e4 <udev_util_encode_string@@LIBUDEV_183+0x9b4>  // b.none
    c1c4:	ldr	x0, [sp, #40]
    c1c8:	bl	5370 <strdup@plt>
    c1cc:	str	x0, [sp, #88]
    c1d0:	ldr	x0, [sp, #88]
    c1d4:	cmp	x0, #0x0
    c1d8:	b.ne	c1e4 <udev_util_encode_string@@LIBUDEV_183+0x9b4>  // b.any
    c1dc:	mov	w19, #0xfffffff4            	// #-12
    c1e0:	b	c224 <udev_util_encode_string@@LIBUDEV_183+0x9f4>
    c1e4:	ldr	x0, [sp, #96]
    c1e8:	ldr	x0, [x0]
    c1ec:	ldr	x1, [sp, #80]
    c1f0:	ldr	x2, [sp, #88]
    c1f4:	bl	2969c <udev_util_encode_string@@LIBUDEV_183+0x1de6c>
    c1f8:	str	w0, [sp, #76]
    c1fc:	ldr	w0, [sp, #76]
    c200:	cmp	w0, #0x0
    c204:	b.ge	c210 <udev_util_encode_string@@LIBUDEV_183+0x9e0>  // b.tcont
    c208:	ldr	w19, [sp, #76]
    c20c:	b	c224 <udev_util_encode_string@@LIBUDEV_183+0x9f4>
    c210:	str	xzr, [sp, #80]
    c214:	str	xzr, [sp, #88]
    c218:	ldr	x0, [sp, #56]
    c21c:	strb	wzr, [x0, #40]
    c220:	mov	w19, #0x0                   	// #0
    c224:	add	x0, sp, #0x58
    c228:	bl	b8e4 <udev_util_encode_string@@LIBUDEV_183+0xb4>
    c22c:	add	x0, sp, #0x50
    c230:	bl	b8e4 <udev_util_encode_string@@LIBUDEV_183+0xb4>
    c234:	mov	w1, w19
    c238:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c23c:	ldr	x0, [x0, #4016]
    c240:	ldr	x2, [sp, #104]
    c244:	ldr	x0, [x0]
    c248:	eor	x0, x2, x0
    c24c:	cmp	x0, #0x0
    c250:	b.eq	c258 <udev_util_encode_string@@LIBUDEV_183+0xa28>  // b.none
    c254:	bl	5390 <__stack_chk_fail@plt>
    c258:	mov	w0, w1
    c25c:	ldr	x19, [sp, #16]
    c260:	ldp	x29, x30, [sp], #112
    c264:	ret
    c268:	stp	x29, x30, [sp, #-96]!
    c26c:	mov	x29, sp
    c270:	str	x19, [sp, #16]
    c274:	str	x0, [sp, #56]
    c278:	str	x1, [sp, #48]
    c27c:	str	x2, [sp, #40]
    c280:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c284:	ldr	x0, [x0, #4016]
    c288:	ldr	x1, [x0]
    c28c:	str	x1, [sp, #88]
    c290:	mov	x1, #0x0                   	// #0
    c294:	str	xzr, [sp, #72]
    c298:	str	xzr, [sp, #80]
    c29c:	ldr	x0, [sp, #56]
    c2a0:	cmp	x0, #0x0
    c2a4:	cset	w0, ne  // ne = any
    c2a8:	and	w0, w0, #0xff
    c2ac:	and	x0, x0, #0xff
    c2b0:	cmp	x0, #0x0
    c2b4:	b.ne	c2e8 <udev_util_encode_string@@LIBUDEV_183+0xab8>  // b.any
    c2b8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c2bc:	add	x1, x0, #0x63
    c2c0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c2c4:	add	x4, x0, #0x628
    c2c8:	mov	w3, #0x9c                  	// #156
    c2cc:	mov	x2, x1
    c2d0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c2d4:	add	x1, x0, #0x98
    c2d8:	mov	w0, #0x0                   	// #0
    c2dc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c2e0:	mov	w0, #0x1                   	// #1
    c2e4:	b	c2ec <udev_util_encode_string@@LIBUDEV_183+0xabc>
    c2e8:	mov	w0, #0x0                   	// #0
    c2ec:	cmp	w0, #0x0
    c2f0:	b.eq	c2fc <udev_util_encode_string@@LIBUDEV_183+0xacc>  // b.none
    c2f4:	mov	w19, #0xffffffea            	// #-22
    c2f8:	b	c410 <udev_util_encode_string@@LIBUDEV_183+0xbe0>
    c2fc:	ldr	x0, [sp, #48]
    c300:	cmp	x0, #0x0
    c304:	cset	w0, ne  // ne = any
    c308:	and	w0, w0, #0xff
    c30c:	and	x0, x0, #0xff
    c310:	cmp	x0, #0x0
    c314:	b.ne	c348 <udev_util_encode_string@@LIBUDEV_183+0xb18>  // b.any
    c318:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c31c:	add	x1, x0, #0x63
    c320:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c324:	add	x4, x0, #0x628
    c328:	mov	w3, #0x9d                  	// #157
    c32c:	mov	x2, x1
    c330:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c334:	add	x1, x0, #0xd8
    c338:	mov	w0, #0x0                   	// #0
    c33c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c340:	mov	w0, #0x1                   	// #1
    c344:	b	c34c <udev_util_encode_string@@LIBUDEV_183+0xb1c>
    c348:	mov	w0, #0x0                   	// #0
    c34c:	cmp	w0, #0x0
    c350:	b.eq	c35c <udev_util_encode_string@@LIBUDEV_183+0xb2c>  // b.none
    c354:	mov	w19, #0xffffffea            	// #-22
    c358:	b	c410 <udev_util_encode_string@@LIBUDEV_183+0xbe0>
    c35c:	ldr	x0, [sp, #56]
    c360:	add	x0, x0, #0x50
    c364:	mov	x1, #0x0                   	// #0
    c368:	bl	286f0 <udev_util_encode_string@@LIBUDEV_183+0x1cec0>
    c36c:	str	w0, [sp, #68]
    c370:	ldr	w0, [sp, #68]
    c374:	cmp	w0, #0x0
    c378:	b.ge	c384 <udev_util_encode_string@@LIBUDEV_183+0xb54>  // b.tcont
    c37c:	ldr	w19, [sp, #68]
    c380:	b	c410 <udev_util_encode_string@@LIBUDEV_183+0xbe0>
    c384:	ldr	x0, [sp, #48]
    c388:	bl	5370 <strdup@plt>
    c38c:	str	x0, [sp, #72]
    c390:	ldr	x0, [sp, #72]
    c394:	cmp	x0, #0x0
    c398:	b.ne	c3a4 <udev_util_encode_string@@LIBUDEV_183+0xb74>  // b.any
    c39c:	mov	w19, #0xfffffff4            	// #-12
    c3a0:	b	c410 <udev_util_encode_string@@LIBUDEV_183+0xbe0>
    c3a4:	ldr	x0, [sp, #40]
    c3a8:	cmp	x0, #0x0
    c3ac:	b.eq	c3d0 <udev_util_encode_string@@LIBUDEV_183+0xba0>  // b.none
    c3b0:	ldr	x0, [sp, #40]
    c3b4:	bl	5370 <strdup@plt>
    c3b8:	str	x0, [sp, #80]
    c3bc:	ldr	x0, [sp, #80]
    c3c0:	cmp	x0, #0x0
    c3c4:	b.ne	c3d0 <udev_util_encode_string@@LIBUDEV_183+0xba0>  // b.any
    c3c8:	mov	w19, #0xfffffff4            	// #-12
    c3cc:	b	c410 <udev_util_encode_string@@LIBUDEV_183+0xbe0>
    c3d0:	ldr	x0, [sp, #56]
    c3d4:	ldr	x0, [x0, #80]
    c3d8:	ldr	x1, [sp, #72]
    c3dc:	ldr	x2, [sp, #80]
    c3e0:	bl	2969c <udev_util_encode_string@@LIBUDEV_183+0x1de6c>
    c3e4:	str	w0, [sp, #68]
    c3e8:	ldr	w0, [sp, #68]
    c3ec:	cmp	w0, #0x0
    c3f0:	b.ge	c3fc <udev_util_encode_string@@LIBUDEV_183+0xbcc>  // b.tcont
    c3f4:	ldr	w19, [sp, #68]
    c3f8:	b	c410 <udev_util_encode_string@@LIBUDEV_183+0xbe0>
    c3fc:	str	xzr, [sp, #72]
    c400:	str	xzr, [sp, #80]
    c404:	ldr	x0, [sp, #56]
    c408:	strb	wzr, [x0, #40]
    c40c:	mov	w19, #0x0                   	// #0
    c410:	add	x0, sp, #0x50
    c414:	bl	b8e4 <udev_util_encode_string@@LIBUDEV_183+0xb4>
    c418:	add	x0, sp, #0x48
    c41c:	bl	b8e4 <udev_util_encode_string@@LIBUDEV_183+0xb4>
    c420:	mov	w1, w19
    c424:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c428:	ldr	x0, [x0, #4016]
    c42c:	ldr	x2, [sp, #88]
    c430:	ldr	x0, [x0]
    c434:	eor	x0, x2, x0
    c438:	cmp	x0, #0x0
    c43c:	b.eq	c444 <udev_util_encode_string@@LIBUDEV_183+0xc14>  // b.none
    c440:	bl	5390 <__stack_chk_fail@plt>
    c444:	mov	w0, w1
    c448:	ldr	x19, [sp, #16]
    c44c:	ldp	x29, x30, [sp], #96
    c450:	ret
    c454:	stp	x29, x30, [sp, #-48]!
    c458:	mov	x29, sp
    c45c:	str	x0, [sp, #24]
    c460:	str	x1, [sp, #16]
    c464:	ldr	x0, [sp, #24]
    c468:	cmp	x0, #0x0
    c46c:	cset	w0, ne  // ne = any
    c470:	and	w0, w0, #0xff
    c474:	and	x0, x0, #0xff
    c478:	cmp	x0, #0x0
    c47c:	b.ne	c4b0 <udev_util_encode_string@@LIBUDEV_183+0xc80>  // b.any
    c480:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c484:	add	x1, x0, #0x63
    c488:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c48c:	add	x4, x0, #0x650
    c490:	mov	w3, #0xbc                  	// #188
    c494:	mov	x2, x1
    c498:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c49c:	add	x1, x0, #0x98
    c4a0:	mov	w0, #0x0                   	// #0
    c4a4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c4a8:	mov	w0, #0x1                   	// #1
    c4ac:	b	c4b4 <udev_util_encode_string@@LIBUDEV_183+0xc84>
    c4b0:	mov	w0, #0x0                   	// #0
    c4b4:	cmp	w0, #0x0
    c4b8:	b.eq	c4c4 <udev_util_encode_string@@LIBUDEV_183+0xc94>  // b.none
    c4bc:	mov	w0, #0xffffffea            	// #-22
    c4c0:	b	c580 <udev_util_encode_string@@LIBUDEV_183+0xd50>
    c4c4:	ldr	x0, [sp, #16]
    c4c8:	cmp	x0, #0x0
    c4cc:	cset	w0, ne  // ne = any
    c4d0:	and	w0, w0, #0xff
    c4d4:	and	x0, x0, #0xff
    c4d8:	cmp	x0, #0x0
    c4dc:	b.ne	c510 <udev_util_encode_string@@LIBUDEV_183+0xce0>  // b.any
    c4e0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c4e4:	add	x1, x0, #0x63
    c4e8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c4ec:	add	x4, x0, #0x650
    c4f0:	mov	w3, #0xbd                  	// #189
    c4f4:	mov	x2, x1
    c4f8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c4fc:	add	x1, x0, #0xe8
    c500:	mov	w0, #0x0                   	// #0
    c504:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c508:	mov	w0, #0x1                   	// #1
    c50c:	b	c514 <udev_util_encode_string@@LIBUDEV_183+0xce4>
    c510:	mov	w0, #0x0                   	// #0
    c514:	cmp	w0, #0x0
    c518:	b.eq	c524 <udev_util_encode_string@@LIBUDEV_183+0xcf4>  // b.none
    c51c:	mov	w0, #0xffffffea            	// #-22
    c520:	b	c580 <udev_util_encode_string@@LIBUDEV_183+0xd50>
    c524:	ldr	x0, [sp, #24]
    c528:	add	x0, x0, #0x58
    c52c:	mov	x1, #0x0                   	// #0
    c530:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
    c534:	str	w0, [sp, #44]
    c538:	ldr	w0, [sp, #44]
    c53c:	cmp	w0, #0x0
    c540:	b.ge	c54c <udev_util_encode_string@@LIBUDEV_183+0xd1c>  // b.tcont
    c544:	ldr	w0, [sp, #44]
    c548:	b	c580 <udev_util_encode_string@@LIBUDEV_183+0xd50>
    c54c:	ldr	x0, [sp, #24]
    c550:	ldr	x0, [x0, #88]
    c554:	ldr	x1, [sp, #16]
    c558:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
    c55c:	str	w0, [sp, #44]
    c560:	ldr	w0, [sp, #44]
    c564:	cmp	w0, #0x0
    c568:	b.ge	c574 <udev_util_encode_string@@LIBUDEV_183+0xd44>  // b.tcont
    c56c:	ldr	w0, [sp, #44]
    c570:	b	c580 <udev_util_encode_string@@LIBUDEV_183+0xd50>
    c574:	ldr	x0, [sp, #24]
    c578:	strb	wzr, [x0, #40]
    c57c:	mov	w0, #0x0                   	// #0
    c580:	ldp	x29, x30, [sp], #48
    c584:	ret
    c588:	stp	x29, x30, [sp, #-48]!
    c58c:	mov	x29, sp
    c590:	str	x0, [sp, #24]
    c594:	str	x1, [sp, #16]
    c598:	ldr	x0, [sp, #24]
    c59c:	cmp	x0, #0x0
    c5a0:	cset	w0, ne  // ne = any
    c5a4:	and	w0, w0, #0xff
    c5a8:	and	x0, x0, #0xff
    c5ac:	cmp	x0, #0x0
    c5b0:	b.ne	c5e4 <udev_util_encode_string@@LIBUDEV_183+0xdb4>  // b.any
    c5b4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c5b8:	add	x1, x0, #0x63
    c5bc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c5c0:	add	x4, x0, #0x678
    c5c4:	mov	w3, #0xcf                  	// #207
    c5c8:	mov	x2, x1
    c5cc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c5d0:	add	x1, x0, #0x98
    c5d4:	mov	w0, #0x0                   	// #0
    c5d8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c5dc:	mov	w0, #0x1                   	// #1
    c5e0:	b	c5e8 <udev_util_encode_string@@LIBUDEV_183+0xdb8>
    c5e4:	mov	w0, #0x0                   	// #0
    c5e8:	cmp	w0, #0x0
    c5ec:	b.eq	c5f8 <udev_util_encode_string@@LIBUDEV_183+0xdc8>  // b.none
    c5f0:	mov	w0, #0xffffffea            	// #-22
    c5f4:	b	c6b4 <udev_util_encode_string@@LIBUDEV_183+0xe84>
    c5f8:	ldr	x0, [sp, #16]
    c5fc:	cmp	x0, #0x0
    c600:	cset	w0, ne  // ne = any
    c604:	and	w0, w0, #0xff
    c608:	and	x0, x0, #0xff
    c60c:	cmp	x0, #0x0
    c610:	b.ne	c644 <udev_util_encode_string@@LIBUDEV_183+0xe14>  // b.any
    c614:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c618:	add	x1, x0, #0x63
    c61c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c620:	add	x4, x0, #0x678
    c624:	mov	w3, #0xd0                  	// #208
    c628:	mov	x2, x1
    c62c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c630:	add	x1, x0, #0xf0
    c634:	mov	w0, #0x0                   	// #0
    c638:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c63c:	mov	w0, #0x1                   	// #1
    c640:	b	c648 <udev_util_encode_string@@LIBUDEV_183+0xe18>
    c644:	mov	w0, #0x0                   	// #0
    c648:	cmp	w0, #0x0
    c64c:	b.eq	c658 <udev_util_encode_string@@LIBUDEV_183+0xe28>  // b.none
    c650:	mov	w0, #0xffffffea            	// #-22
    c654:	b	c6b4 <udev_util_encode_string@@LIBUDEV_183+0xe84>
    c658:	ldr	x0, [sp, #24]
    c65c:	add	x0, x0, #0x60
    c660:	mov	x1, #0x0                   	// #0
    c664:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
    c668:	str	w0, [sp, #44]
    c66c:	ldr	w0, [sp, #44]
    c670:	cmp	w0, #0x0
    c674:	b.ge	c680 <udev_util_encode_string@@LIBUDEV_183+0xe50>  // b.tcont
    c678:	ldr	w0, [sp, #44]
    c67c:	b	c6b4 <udev_util_encode_string@@LIBUDEV_183+0xe84>
    c680:	ldr	x0, [sp, #24]
    c684:	ldr	x0, [x0, #96]
    c688:	ldr	x1, [sp, #16]
    c68c:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
    c690:	str	w0, [sp, #44]
    c694:	ldr	w0, [sp, #44]
    c698:	cmp	w0, #0x0
    c69c:	b.ge	c6a8 <udev_util_encode_string@@LIBUDEV_183+0xe78>  // b.tcont
    c6a0:	ldr	w0, [sp, #44]
    c6a4:	b	c6b4 <udev_util_encode_string@@LIBUDEV_183+0xe84>
    c6a8:	ldr	x0, [sp, #24]
    c6ac:	strb	wzr, [x0, #40]
    c6b0:	mov	w0, #0x0                   	// #0
    c6b4:	ldp	x29, x30, [sp], #48
    c6b8:	ret
    c6bc:	stp	x29, x30, [sp, #-32]!
    c6c0:	mov	x29, sp
    c6c4:	str	x0, [sp, #24]
    c6c8:	ldr	x0, [sp, #24]
    c6cc:	cmp	x0, #0x0
    c6d0:	b.eq	c6e4 <udev_util_encode_string@@LIBUDEV_183+0xeb4>  // b.none
    c6d4:	ldr	x0, [sp, #24]
    c6d8:	ldr	x0, [x0, #104]
    c6dc:	bl	bb70 <udev_util_encode_string@@LIBUDEV_183+0x340>
    c6e0:	b	c6e8 <udev_util_encode_string@@LIBUDEV_183+0xeb8>
    c6e4:	nop
    c6e8:	ldp	x29, x30, [sp], #32
    c6ec:	ret
    c6f0:	stp	x29, x30, [sp, #-64]!
    c6f4:	mov	x29, sp
    c6f8:	str	x0, [sp, #24]
    c6fc:	str	x1, [sp, #16]
    c700:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c704:	ldr	x0, [x0, #4016]
    c708:	ldr	x1, [x0]
    c70c:	str	x1, [sp, #56]
    c710:	mov	x1, #0x0                   	// #0
    c714:	ldr	x0, [sp, #24]
    c718:	cmp	x0, #0x0
    c71c:	cset	w0, ne  // ne = any
    c720:	and	w0, w0, #0xff
    c724:	and	x0, x0, #0xff
    c728:	cmp	x0, #0x0
    c72c:	b.ne	c760 <udev_util_encode_string@@LIBUDEV_183+0xf30>  // b.any
    c730:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c734:	add	x1, x0, #0x63
    c738:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c73c:	add	x4, x0, #0x6a0
    c740:	mov	w3, #0xea                  	// #234
    c744:	mov	x2, x1
    c748:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c74c:	add	x1, x0, #0x98
    c750:	mov	w0, #0x0                   	// #0
    c754:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c758:	mov	w0, #0x1                   	// #1
    c75c:	b	c764 <udev_util_encode_string@@LIBUDEV_183+0xf34>
    c760:	mov	w0, #0x0                   	// #0
    c764:	cmp	w0, #0x0
    c768:	b.eq	c774 <udev_util_encode_string@@LIBUDEV_183+0xf44>  // b.none
    c76c:	mov	w0, #0xffffffea            	// #-22
    c770:	b	c858 <udev_util_encode_string@@LIBUDEV_183+0x1028>
    c774:	ldr	x0, [sp, #16]
    c778:	cmp	x0, #0x0
    c77c:	cset	w0, ne  // ne = any
    c780:	and	w0, w0, #0xff
    c784:	and	x0, x0, #0xff
    c788:	cmp	x0, #0x0
    c78c:	b.ne	c7c0 <udev_util_encode_string@@LIBUDEV_183+0xf90>  // b.any
    c790:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c794:	add	x1, x0, #0x63
    c798:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c79c:	add	x4, x0, #0x6a0
    c7a0:	mov	w3, #0xeb                  	// #235
    c7a4:	mov	x2, x1
    c7a8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c7ac:	add	x1, x0, #0xf8
    c7b0:	mov	w0, #0x0                   	// #0
    c7b4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c7b8:	mov	w0, #0x1                   	// #1
    c7bc:	b	c7c4 <udev_util_encode_string@@LIBUDEV_183+0xf94>
    c7c0:	mov	w0, #0x0                   	// #0
    c7c4:	cmp	w0, #0x0
    c7c8:	b.eq	c7d4 <udev_util_encode_string@@LIBUDEV_183+0xfa4>  // b.none
    c7cc:	mov	w0, #0xffffffea            	// #-22
    c7d0:	b	c858 <udev_util_encode_string@@LIBUDEV_183+0x1028>
    c7d4:	add	x0, sp, #0x30
    c7d8:	mov	x1, x0
    c7dc:	ldr	x0, [sp, #16]
    c7e0:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
    c7e4:	str	w0, [sp, #44]
    c7e8:	ldr	w0, [sp, #44]
    c7ec:	cmp	w0, #0x0
    c7f0:	b.ge	c7fc <udev_util_encode_string@@LIBUDEV_183+0xfcc>  // b.tcont
    c7f4:	ldr	w0, [sp, #44]
    c7f8:	b	c858 <udev_util_encode_string@@LIBUDEV_183+0x1028>
    c7fc:	ldr	x0, [sp, #24]
    c800:	add	x0, x0, #0x68
    c804:	mov	x1, #0x0                   	// #0
    c808:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
    c80c:	str	w0, [sp, #44]
    c810:	ldr	w0, [sp, #44]
    c814:	cmp	w0, #0x0
    c818:	b.ge	c824 <udev_util_encode_string@@LIBUDEV_183+0xff4>  // b.tcont
    c81c:	ldr	w0, [sp, #44]
    c820:	b	c858 <udev_util_encode_string@@LIBUDEV_183+0x1028>
    c824:	ldr	x0, [sp, #24]
    c828:	ldr	x0, [x0, #104]
    c82c:	ldr	x1, [sp, #48]
    c830:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
    c834:	str	w0, [sp, #44]
    c838:	ldr	w0, [sp, #44]
    c83c:	cmp	w0, #0x0
    c840:	b.ge	c84c <udev_util_encode_string@@LIBUDEV_183+0x101c>  // b.tcont
    c844:	ldr	w0, [sp, #44]
    c848:	b	c858 <udev_util_encode_string@@LIBUDEV_183+0x1028>
    c84c:	ldr	x0, [sp, #24]
    c850:	strb	wzr, [x0, #40]
    c854:	mov	w0, #0x0                   	// #0
    c858:	mov	w1, w0
    c85c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c860:	ldr	x0, [x0, #4016]
    c864:	ldr	x2, [sp, #56]
    c868:	ldr	x0, [x0]
    c86c:	eor	x0, x2, x0
    c870:	cmp	x0, #0x0
    c874:	b.eq	c87c <udev_util_encode_string@@LIBUDEV_183+0x104c>  // b.none
    c878:	bl	5390 <__stack_chk_fail@plt>
    c87c:	mov	w0, w1
    c880:	ldp	x29, x30, [sp], #64
    c884:	ret
    c888:	stp	x29, x30, [sp, #-32]!
    c88c:	mov	x29, sp
    c890:	str	x0, [sp, #24]
    c894:	str	x1, [sp, #16]
    c898:	ldr	x0, [sp, #24]
    c89c:	bl	c6bc <udev_util_encode_string@@LIBUDEV_183+0xe8c>
    c8a0:	ldr	x1, [sp, #16]
    c8a4:	ldr	x0, [sp, #24]
    c8a8:	bl	c6f0 <udev_util_encode_string@@LIBUDEV_183+0xec0>
    c8ac:	ldp	x29, x30, [sp], #32
    c8b0:	ret
    c8b4:	stp	x29, x30, [sp, #-32]!
    c8b8:	mov	x29, sp
    c8bc:	str	x0, [sp, #24]
    c8c0:	ldr	x0, [sp, #24]
    c8c4:	cmp	x0, #0x0
    c8c8:	cset	w0, ne  // ne = any
    c8cc:	and	w0, w0, #0xff
    c8d0:	and	x0, x0, #0xff
    c8d4:	cmp	x0, #0x0
    c8d8:	b.ne	c90c <udev_util_encode_string@@LIBUDEV_183+0x10dc>  // b.any
    c8dc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c8e0:	add	x1, x0, #0x63
    c8e4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c8e8:	add	x4, x0, #0x6d0
    c8ec:	mov	w3, #0x104                 	// #260
    c8f0:	mov	x2, x1
    c8f4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c8f8:	add	x1, x0, #0x98
    c8fc:	mov	w0, #0x0                   	// #0
    c900:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c904:	mov	w0, #0x1                   	// #1
    c908:	b	c910 <udev_util_encode_string@@LIBUDEV_183+0x10e0>
    c90c:	mov	w0, #0x0                   	// #0
    c910:	cmp	w0, #0x0
    c914:	b.eq	c920 <udev_util_encode_string@@LIBUDEV_183+0x10f0>  // b.none
    c918:	mov	w0, #0xffffffea            	// #-22
    c91c:	b	c938 <udev_util_encode_string@@LIBUDEV_183+0x1108>
    c920:	ldr	x0, [sp, #24]
    c924:	mov	w1, #0x1                   	// #1
    c928:	strb	w1, [x0, #112]
    c92c:	ldr	x0, [sp, #24]
    c930:	strb	wzr, [x0, #40]
    c934:	mov	w0, #0x0                   	// #0
    c938:	ldp	x29, x30, [sp], #32
    c93c:	ret
    c940:	stp	x29, x30, [sp, #-32]!
    c944:	mov	x29, sp
    c948:	str	x0, [sp, #24]
    c94c:	ldr	x0, [sp, #24]
    c950:	cmp	x0, #0x0
    c954:	cset	w0, ne  // ne = any
    c958:	and	w0, w0, #0xff
    c95c:	and	x0, x0, #0xff
    c960:	cmp	x0, #0x0
    c964:	b.ne	c998 <udev_util_encode_string@@LIBUDEV_183+0x1168>  // b.any
    c968:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c96c:	add	x1, x0, #0x63
    c970:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c974:	add	x4, x0, #0x700
    c978:	mov	w3, #0x10e                 	// #270
    c97c:	mov	x2, x1
    c980:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    c984:	add	x1, x0, #0x98
    c988:	mov	w0, #0x0                   	// #0
    c98c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    c990:	mov	w0, #0x1                   	// #1
    c994:	b	c99c <udev_util_encode_string@@LIBUDEV_183+0x116c>
    c998:	mov	w0, #0x0                   	// #0
    c99c:	cmp	w0, #0x0
    c9a0:	b.eq	c9ac <udev_util_encode_string@@LIBUDEV_183+0x117c>  // b.none
    c9a4:	mov	w0, #0xffffffea            	// #-22
    c9a8:	b	c9c0 <udev_util_encode_string@@LIBUDEV_183+0x1190>
    c9ac:	ldr	x0, [sp, #24]
    c9b0:	strb	wzr, [x0, #112]
    c9b4:	ldr	x0, [sp, #24]
    c9b8:	strb	wzr, [x0, #40]
    c9bc:	mov	w0, #0x0                   	// #0
    c9c0:	ldp	x29, x30, [sp], #32
    c9c4:	ret
    c9c8:	stp	x29, x30, [sp, #-112]!
    c9cc:	mov	x29, sp
    c9d0:	str	x0, [sp, #24]
    c9d4:	str	x1, [sp, #16]
    c9d8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    c9dc:	ldr	x0, [x0, #4016]
    c9e0:	ldr	x1, [x0]
    c9e4:	str	x1, [sp, #104]
    c9e8:	mov	x1, #0x0                   	// #0
    c9ec:	ldr	x0, [sp, #24]
    c9f0:	ldr	x0, [x0]
    c9f4:	str	x0, [sp, #72]
    c9f8:	ldr	x0, [sp, #16]
    c9fc:	ldr	x0, [x0]
    ca00:	str	x0, [sp, #80]
    ca04:	add	x0, sp, #0x38
    ca08:	mov	x1, x0
    ca0c:	ldr	x0, [sp, #72]
    ca10:	bl	1ac70 <udev_util_encode_string@@LIBUDEV_183+0xf440>
    ca14:	lsr	w0, w0, #31
    ca18:	and	w0, w0, #0xff
    ca1c:	and	x0, x0, #0xff
    ca20:	cmp	x0, #0x0
    ca24:	b.eq	ca50 <udev_util_encode_string@@LIBUDEV_183+0x1220>  // b.none
    ca28:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ca2c:	add	x1, x0, #0x63
    ca30:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ca34:	add	x4, x0, #0x730
    ca38:	mov	w3, #0x11d                 	// #285
    ca3c:	mov	x2, x1
    ca40:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ca44:	add	x1, x0, #0x100
    ca48:	mov	w0, #0x0                   	// #0
    ca4c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    ca50:	add	x0, sp, #0x40
    ca54:	mov	x1, x0
    ca58:	ldr	x0, [sp, #80]
    ca5c:	bl	1ac70 <udev_util_encode_string@@LIBUDEV_183+0xf440>
    ca60:	lsr	w0, w0, #31
    ca64:	and	w0, w0, #0xff
    ca68:	and	x0, x0, #0xff
    ca6c:	cmp	x0, #0x0
    ca70:	b.eq	ca9c <udev_util_encode_string@@LIBUDEV_183+0x126c>  // b.none
    ca74:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ca78:	add	x1, x0, #0x63
    ca7c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ca80:	add	x4, x0, #0x730
    ca84:	mov	w3, #0x11e                 	// #286
    ca88:	mov	x2, x1
    ca8c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ca90:	add	x1, x0, #0x130
    ca94:	mov	w0, #0x0                   	// #0
    ca98:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    ca9c:	ldr	x2, [sp, #56]
    caa0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    caa4:	add	x1, x0, #0x160
    caa8:	mov	x0, x2
    caac:	bl	56f0 <strstr@plt>
    cab0:	str	x0, [sp, #88]
    cab4:	ldr	x0, [sp, #88]
    cab8:	cmp	x0, #0x0
    cabc:	b.eq	cb90 <udev_util_encode_string@@LIBUDEV_183+0x1360>  // b.none
    cac0:	ldr	x0, [sp, #88]
    cac4:	add	x0, x0, #0xb
    cac8:	str	x0, [sp, #88]
    cacc:	mov	w1, #0x2f                  	// #47
    cad0:	ldr	x0, [sp, #88]
    cad4:	bl	5570 <strchr@plt>
    cad8:	str	x0, [sp, #88]
    cadc:	ldr	x0, [sp, #88]
    cae0:	cmp	x0, #0x0
    cae4:	b.eq	cb90 <udev_util_encode_string@@LIBUDEV_183+0x1360>  // b.none
    cae8:	ldr	x0, [sp, #56]
    caec:	ldr	x1, [sp, #88]
    caf0:	sub	x0, x1, x0
    caf4:	str	w0, [sp, #48]
    caf8:	ldr	x0, [sp, #56]
    cafc:	ldr	x1, [sp, #64]
    cb00:	ldr	w2, [sp, #48]
    cb04:	bl	5270 <strncmp@plt>
    cb08:	cmp	w0, #0x0
    cb0c:	b.ne	cb90 <udev_util_encode_string@@LIBUDEV_183+0x1360>  // b.any
    cb10:	ldr	x1, [sp, #64]
    cb14:	ldr	w0, [sp, #48]
    cb18:	add	x0, x1, x0
    cb1c:	str	x0, [sp, #96]
    cb20:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cb24:	add	x1, x0, #0x170
    cb28:	ldr	x0, [sp, #88]
    cb2c:	bl	b9d8 <udev_util_encode_string@@LIBUDEV_183+0x1a8>
    cb30:	cmp	x0, #0x0
    cb34:	b.eq	cb58 <udev_util_encode_string@@LIBUDEV_183+0x1328>  // b.none
    cb38:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cb3c:	add	x1, x0, #0x180
    cb40:	ldr	x0, [sp, #96]
    cb44:	bl	b9d8 <udev_util_encode_string@@LIBUDEV_183+0x1a8>
    cb48:	cmp	x0, #0x0
    cb4c:	b.ne	cb58 <udev_util_encode_string@@LIBUDEV_183+0x1328>  // b.any
    cb50:	mov	w0, #0x1                   	// #1
    cb54:	b	cc98 <udev_util_encode_string@@LIBUDEV_183+0x1468>
    cb58:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cb5c:	add	x1, x0, #0x170
    cb60:	ldr	x0, [sp, #88]
    cb64:	bl	b9d8 <udev_util_encode_string@@LIBUDEV_183+0x1a8>
    cb68:	cmp	x0, #0x0
    cb6c:	b.ne	cb90 <udev_util_encode_string@@LIBUDEV_183+0x1360>  // b.any
    cb70:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cb74:	add	x1, x0, #0x170
    cb78:	ldr	x0, [sp, #96]
    cb7c:	bl	b9d8 <udev_util_encode_string@@LIBUDEV_183+0x1a8>
    cb80:	cmp	x0, #0x0
    cb84:	b.eq	cb90 <udev_util_encode_string@@LIBUDEV_183+0x1360>  // b.none
    cb88:	mov	w0, #0xffffffff            	// #-1
    cb8c:	b	cc98 <udev_util_encode_string@@LIBUDEV_183+0x1468>
    cb90:	ldr	x2, [sp, #56]
    cb94:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cb98:	add	x1, x0, #0x190
    cb9c:	mov	x0, x2
    cba0:	bl	56f0 <strstr@plt>
    cba4:	cmp	x0, #0x0
    cba8:	b.ne	cbc8 <udev_util_encode_string@@LIBUDEV_183+0x1398>  // b.any
    cbac:	ldr	x2, [sp, #56]
    cbb0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cbb4:	add	x1, x0, #0x1a0
    cbb8:	mov	x0, x2
    cbbc:	bl	56f0 <strstr@plt>
    cbc0:	cmp	x0, #0x0
    cbc4:	b.eq	cbd0 <udev_util_encode_string@@LIBUDEV_183+0x13a0>  // b.none
    cbc8:	mov	w0, #0x1                   	// #1
    cbcc:	b	cbd4 <udev_util_encode_string@@LIBUDEV_183+0x13a4>
    cbd0:	mov	w0, #0x0                   	// #0
    cbd4:	strb	w0, [sp, #44]
    cbd8:	ldrb	w0, [sp, #44]
    cbdc:	and	w0, w0, #0x1
    cbe0:	strb	w0, [sp, #44]
    cbe4:	ldr	x2, [sp, #64]
    cbe8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cbec:	add	x1, x0, #0x190
    cbf0:	mov	x0, x2
    cbf4:	bl	56f0 <strstr@plt>
    cbf8:	cmp	x0, #0x0
    cbfc:	b.ne	cc1c <udev_util_encode_string@@LIBUDEV_183+0x13ec>  // b.any
    cc00:	ldr	x2, [sp, #64]
    cc04:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cc08:	add	x1, x0, #0x1a0
    cc0c:	mov	x0, x2
    cc10:	bl	56f0 <strstr@plt>
    cc14:	cmp	x0, #0x0
    cc18:	b.eq	cc24 <udev_util_encode_string@@LIBUDEV_183+0x13f4>  // b.none
    cc1c:	mov	w0, #0x1                   	// #1
    cc20:	b	cc28 <udev_util_encode_string@@LIBUDEV_183+0x13f8>
    cc24:	mov	w0, #0x0                   	// #0
    cc28:	strb	w0, [sp, #45]
    cc2c:	ldrb	w0, [sp, #45]
    cc30:	and	w0, w0, #0x1
    cc34:	strb	w0, [sp, #45]
    cc38:	ldrb	w0, [sp, #44]
    cc3c:	strb	w0, [sp, #46]
    cc40:	ldrb	w0, [sp, #45]
    cc44:	strb	w0, [sp, #47]
    cc48:	ldrb	w1, [sp, #46]
    cc4c:	ldrb	w0, [sp, #47]
    cc50:	cmp	w1, w0
    cc54:	b.cc	cc70 <udev_util_encode_string@@LIBUDEV_183+0x1440>  // b.lo, b.ul, b.last
    cc58:	ldrb	w1, [sp, #46]
    cc5c:	ldrb	w0, [sp, #47]
    cc60:	cmp	w1, w0
    cc64:	cset	w0, hi  // hi = pmore
    cc68:	and	w0, w0, #0xff
    cc6c:	b	cc74 <udev_util_encode_string@@LIBUDEV_183+0x1444>
    cc70:	mov	w0, #0xffffffff            	// #-1
    cc74:	str	w0, [sp, #52]
    cc78:	ldr	w0, [sp, #52]
    cc7c:	cmp	w0, #0x0
    cc80:	b.eq	cc8c <udev_util_encode_string@@LIBUDEV_183+0x145c>  // b.none
    cc84:	ldr	w0, [sp, #52]
    cc88:	b	cc98 <udev_util_encode_string@@LIBUDEV_183+0x1468>
    cc8c:	ldr	x0, [sp, #56]
    cc90:	ldr	x1, [sp, #64]
    cc94:	bl	5440 <strcmp@plt>
    cc98:	mov	w1, w0
    cc9c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    cca0:	ldr	x0, [x0, #4016]
    cca4:	ldr	x2, [sp, #104]
    cca8:	ldr	x0, [x0]
    ccac:	eor	x0, x2, x0
    ccb0:	cmp	x0, #0x0
    ccb4:	b.eq	ccbc <udev_util_encode_string@@LIBUDEV_183+0x148c>  // b.none
    ccb8:	bl	5390 <__stack_chk_fail@plt>
    ccbc:	mov	w0, w1
    ccc0:	ldp	x29, x30, [sp], #112
    ccc4:	ret
    ccc8:	stp	x29, x30, [sp, #-48]!
    cccc:	mov	x29, sp
    ccd0:	str	x19, [sp, #16]
    ccd4:	str	x0, [sp, #40]
    ccd8:	str	x1, [sp, #32]
    ccdc:	ldr	x0, [sp, #40]
    cce0:	cmp	x0, #0x0
    cce4:	cset	w0, ne  // ne = any
    cce8:	and	w0, w0, #0xff
    ccec:	and	x0, x0, #0xff
    ccf0:	cmp	x0, #0x0
    ccf4:	b.ne	cd28 <udev_util_encode_string@@LIBUDEV_183+0x14f8>  // b.any
    ccf8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ccfc:	add	x1, x0, #0x63
    cd00:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cd04:	add	x4, x0, #0x740
    cd08:	mov	w3, #0x14c                 	// #332
    cd0c:	mov	x2, x1
    cd10:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cd14:	add	x1, x0, #0x98
    cd18:	mov	w0, #0x0                   	// #0
    cd1c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    cd20:	mov	w0, #0x1                   	// #1
    cd24:	b	cd2c <udev_util_encode_string@@LIBUDEV_183+0x14fc>
    cd28:	mov	w0, #0x0                   	// #0
    cd2c:	cmp	w0, #0x0
    cd30:	b.eq	cd3c <udev_util_encode_string@@LIBUDEV_183+0x150c>  // b.none
    cd34:	mov	w0, #0xffffffea            	// #-22
    cd38:	b	ce0c <udev_util_encode_string@@LIBUDEV_183+0x15dc>
    cd3c:	ldr	x0, [sp, #32]
    cd40:	cmp	x0, #0x0
    cd44:	cset	w0, ne  // ne = any
    cd48:	and	w0, w0, #0xff
    cd4c:	and	x0, x0, #0xff
    cd50:	cmp	x0, #0x0
    cd54:	b.ne	cd88 <udev_util_encode_string@@LIBUDEV_183+0x1558>  // b.any
    cd58:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cd5c:	add	x1, x0, #0x63
    cd60:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cd64:	add	x4, x0, #0x740
    cd68:	mov	w3, #0x14d                 	// #333
    cd6c:	mov	x2, x1
    cd70:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cd74:	add	x1, x0, #0x1b0
    cd78:	mov	w0, #0x0                   	// #0
    cd7c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    cd80:	mov	w0, #0x1                   	// #1
    cd84:	b	cd8c <udev_util_encode_string@@LIBUDEV_183+0x155c>
    cd88:	mov	w0, #0x0                   	// #0
    cd8c:	cmp	w0, #0x0
    cd90:	b.eq	cd9c <udev_util_encode_string@@LIBUDEV_183+0x156c>  // b.none
    cd94:	mov	w0, #0xffffffea            	// #-22
    cd98:	b	ce0c <udev_util_encode_string@@LIBUDEV_183+0x15dc>
    cd9c:	ldr	x0, [sp, #40]
    cda0:	add	x4, x0, #0x8
    cda4:	ldr	x0, [sp, #40]
    cda8:	add	x1, x0, #0x18
    cdac:	ldr	x0, [sp, #40]
    cdb0:	ldr	x0, [x0, #16]
    cdb4:	add	x0, x0, #0x1
    cdb8:	mov	x3, #0x8                   	// #8
    cdbc:	mov	x2, x0
    cdc0:	mov	x0, x4
    cdc4:	bl	22988 <udev_util_encode_string@@LIBUDEV_183+0x17158>
    cdc8:	cmp	x0, #0x0
    cdcc:	b.ne	cdd8 <udev_util_encode_string@@LIBUDEV_183+0x15a8>  // b.any
    cdd0:	mov	w0, #0xfffffff4            	// #-12
    cdd4:	b	ce0c <udev_util_encode_string@@LIBUDEV_183+0x15dc>
    cdd8:	ldr	x0, [sp, #40]
    cddc:	ldr	x1, [x0, #8]
    cde0:	ldr	x0, [sp, #40]
    cde4:	ldr	x0, [x0, #16]
    cde8:	add	x3, x0, #0x1
    cdec:	ldr	x2, [sp, #40]
    cdf0:	str	x3, [x2, #16]
    cdf4:	lsl	x0, x0, #3
    cdf8:	add	x19, x1, x0
    cdfc:	ldr	x0, [sp, #32]
    ce00:	bl	15598 <udev_util_encode_string@@LIBUDEV_183+0x9d68>
    ce04:	str	x0, [x19]
    ce08:	mov	w0, #0x0                   	// #0
    ce0c:	ldr	x19, [sp, #16]
    ce10:	ldp	x29, x30, [sp], #48
    ce14:	ret
    ce18:	stp	x29, x30, [sp, #-80]!
    ce1c:	mov	x29, sp
    ce20:	str	x0, [sp, #40]
    ce24:	str	x1, [sp, #32]
    ce28:	str	x2, [sp, #24]
    ce2c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ce30:	ldr	x0, [x0, #4016]
    ce34:	ldr	x1, [x0]
    ce38:	str	x1, [sp, #72]
    ce3c:	mov	x1, #0x0                   	// #0
    ce40:	ldr	x0, [sp, #40]
    ce44:	cmp	x0, #0x0
    ce48:	cset	w0, eq  // eq = none
    ce4c:	and	w0, w0, #0xff
    ce50:	and	x0, x0, #0xff
    ce54:	cmp	x0, #0x0
    ce58:	b.eq	ce84 <udev_util_encode_string@@LIBUDEV_183+0x1654>  // b.none
    ce5c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ce60:	add	x1, x0, #0x63
    ce64:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ce68:	add	x4, x0, #0x760
    ce6c:	mov	w3, #0x15b                 	// #347
    ce70:	mov	x2, x1
    ce74:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ce78:	add	x1, x0, #0x1b0
    ce7c:	mov	w0, #0x0                   	// #0
    ce80:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    ce84:	ldr	x0, [sp, #32]
    ce88:	cmp	x0, #0x0
    ce8c:	cset	w0, eq  // eq = none
    ce90:	and	w0, w0, #0xff
    ce94:	and	x0, x0, #0xff
    ce98:	cmp	x0, #0x0
    ce9c:	b.eq	cec8 <udev_util_encode_string@@LIBUDEV_183+0x1698>  // b.none
    cea0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cea4:	add	x1, x0, #0x63
    cea8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ceac:	add	x4, x0, #0x760
    ceb0:	mov	w3, #0x15c                 	// #348
    ceb4:	mov	x2, x1
    ceb8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cebc:	add	x1, x0, #0x1b8
    cec0:	mov	w0, #0x0                   	// #0
    cec4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    cec8:	add	x0, sp, #0x40
    cecc:	mov	x2, x0
    ced0:	ldr	x1, [sp, #32]
    ced4:	ldr	x0, [sp, #40]
    ced8:	bl	1e150 <udev_util_encode_string@@LIBUDEV_183+0x12920>
    cedc:	str	w0, [sp, #60]
    cee0:	ldr	w0, [sp, #60]
    cee4:	cmp	w0, #0x0
    cee8:	b.ge	cef4 <udev_util_encode_string@@LIBUDEV_183+0x16c4>  // b.tcont
    ceec:	mov	w0, #0x0                   	// #0
    cef0:	b	cf30 <udev_util_encode_string@@LIBUDEV_183+0x1700>
    cef4:	ldr	x0, [sp, #24]
    cef8:	cmp	x0, #0x0
    cefc:	b.ne	cf08 <udev_util_encode_string@@LIBUDEV_183+0x16d8>  // b.any
    cf00:	mov	w0, #0x1                   	// #1
    cf04:	b	cf30 <udev_util_encode_string@@LIBUDEV_183+0x1700>
    cf08:	ldr	x0, [sp, #64]
    cf0c:	mov	w2, #0x0                   	// #0
    cf10:	mov	x1, x0
    cf14:	ldr	x0, [sp, #24]
    cf18:	bl	55b0 <fnmatch@plt>
    cf1c:	cmp	w0, #0x0
    cf20:	b.ne	cf2c <udev_util_encode_string@@LIBUDEV_183+0x16fc>  // b.any
    cf24:	mov	w0, #0x1                   	// #1
    cf28:	b	cf30 <udev_util_encode_string@@LIBUDEV_183+0x1700>
    cf2c:	mov	w0, #0x0                   	// #0
    cf30:	mov	w1, w0
    cf34:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    cf38:	ldr	x0, [x0, #4016]
    cf3c:	ldr	x2, [sp, #72]
    cf40:	ldr	x0, [x0]
    cf44:	eor	x0, x2, x0
    cf48:	cmp	x0, #0x0
    cf4c:	b.eq	cf54 <udev_util_encode_string@@LIBUDEV_183+0x1724>  // b.none
    cf50:	bl	5390 <__stack_chk_fail@plt>
    cf54:	mov	w0, w1
    cf58:	ldp	x29, x30, [sp], #80
    cf5c:	ret
    cf60:	stp	x29, x30, [sp, #-80]!
    cf64:	mov	x29, sp
    cf68:	str	x0, [sp, #24]
    cf6c:	str	x1, [sp, #16]
    cf70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    cf74:	ldr	x0, [x0, #4016]
    cf78:	ldr	x1, [x0]
    cf7c:	str	x1, [sp, #72]
    cf80:	mov	x1, #0x0                   	// #0
    cf84:	ldr	x0, [sp, #24]
    cf88:	cmp	x0, #0x0
    cf8c:	cset	w0, eq  // eq = none
    cf90:	and	w0, w0, #0xff
    cf94:	and	x0, x0, #0xff
    cf98:	cmp	x0, #0x0
    cf9c:	b.eq	cfc8 <udev_util_encode_string@@LIBUDEV_183+0x1798>  // b.none
    cfa0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cfa4:	add	x1, x0, #0x63
    cfa8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cfac:	add	x4, x0, #0x778
    cfb0:	mov	w3, #0x170                 	// #368
    cfb4:	mov	x2, x1
    cfb8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cfbc:	add	x1, x0, #0x98
    cfc0:	mov	w0, #0x0                   	// #0
    cfc4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    cfc8:	ldr	x0, [sp, #16]
    cfcc:	cmp	x0, #0x0
    cfd0:	cset	w0, eq  // eq = none
    cfd4:	and	w0, w0, #0xff
    cfd8:	and	x0, x0, #0xff
    cfdc:	cmp	x0, #0x0
    cfe0:	b.eq	d00c <udev_util_encode_string@@LIBUDEV_183+0x17dc>  // b.none
    cfe4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cfe8:	add	x1, x0, #0x63
    cfec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    cff0:	add	x4, x0, #0x778
    cff4:	mov	w3, #0x171                 	// #369
    cff8:	mov	x2, x1
    cffc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d000:	add	x1, x0, #0x1b0
    d004:	mov	w0, #0x0                   	// #0
    d008:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d00c:	mov	w0, #0xfffffffe            	// #-2
    d010:	str	w0, [sp, #56]
    d014:	str	xzr, [sp, #64]
    d018:	b	d048 <udev_util_encode_string@@LIBUDEV_183+0x1818>
    d01c:	ldr	x0, [sp, #40]
    d020:	ldr	x1, [sp, #48]
    d024:	mov	x2, x1
    d028:	mov	x1, x0
    d02c:	ldr	x0, [sp, #16]
    d030:	bl	ce18 <udev_util_encode_string@@LIBUDEV_183+0x15e8>
    d034:	and	w0, w0, #0xff
    d038:	cmp	w0, #0x0
    d03c:	b.eq	d048 <udev_util_encode_string@@LIBUDEV_183+0x1818>  // b.none
    d040:	mov	w0, #0x0                   	// #0
    d044:	b	d0d8 <udev_util_encode_string@@LIBUDEV_183+0x18a8>
    d048:	ldr	x0, [sp, #24]
    d04c:	ldr	x0, [x0, #72]
    d050:	add	x3, sp, #0x28
    d054:	add	x2, sp, #0x30
    d058:	add	x1, sp, #0x38
    d05c:	bl	ba98 <udev_util_encode_string@@LIBUDEV_183+0x268>
    d060:	and	w0, w0, #0xff
    d064:	cmp	w0, #0x0
    d068:	b.ne	d01c <udev_util_encode_string@@LIBUDEV_183+0x17ec>  // b.any
    d06c:	mov	w0, #0xfffffffe            	// #-2
    d070:	str	w0, [sp, #56]
    d074:	str	xzr, [sp, #64]
    d078:	b	d0b0 <udev_util_encode_string@@LIBUDEV_183+0x1880>
    d07c:	ldr	x0, [sp, #40]
    d080:	ldr	x1, [sp, #48]
    d084:	mov	x2, x1
    d088:	mov	x1, x0
    d08c:	ldr	x0, [sp, #16]
    d090:	bl	ce18 <udev_util_encode_string@@LIBUDEV_183+0x15e8>
    d094:	and	w0, w0, #0xff
    d098:	eor	w0, w0, #0x1
    d09c:	and	w0, w0, #0xff
    d0a0:	cmp	w0, #0x0
    d0a4:	b.eq	d0b0 <udev_util_encode_string@@LIBUDEV_183+0x1880>  // b.none
    d0a8:	mov	w0, #0x0                   	// #0
    d0ac:	b	d0d8 <udev_util_encode_string@@LIBUDEV_183+0x18a8>
    d0b0:	ldr	x0, [sp, #24]
    d0b4:	ldr	x0, [x0, #64]
    d0b8:	add	x3, sp, #0x28
    d0bc:	add	x2, sp, #0x30
    d0c0:	add	x1, sp, #0x38
    d0c4:	bl	ba98 <udev_util_encode_string@@LIBUDEV_183+0x268>
    d0c8:	and	w0, w0, #0xff
    d0cc:	cmp	w0, #0x0
    d0d0:	b.ne	d07c <udev_util_encode_string@@LIBUDEV_183+0x184c>  // b.any
    d0d4:	mov	w0, #0x1                   	// #1
    d0d8:	mov	w1, w0
    d0dc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d0e0:	ldr	x0, [x0, #4016]
    d0e4:	ldr	x2, [sp, #72]
    d0e8:	ldr	x0, [x0]
    d0ec:	eor	x0, x2, x0
    d0f0:	cmp	x0, #0x0
    d0f4:	b.eq	d0fc <udev_util_encode_string@@LIBUDEV_183+0x18cc>  // b.none
    d0f8:	bl	5390 <__stack_chk_fail@plt>
    d0fc:	mov	w0, w1
    d100:	ldp	x29, x30, [sp], #80
    d104:	ret
    d108:	stp	x29, x30, [sp, #-96]!
    d10c:	mov	x29, sp
    d110:	str	x0, [sp, #24]
    d114:	str	x1, [sp, #16]
    d118:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d11c:	ldr	x0, [x0, #4016]
    d120:	ldr	x1, [x0]
    d124:	str	x1, [sp, #88]
    d128:	mov	x1, #0x0                   	// #0
    d12c:	ldr	x0, [sp, #24]
    d130:	cmp	x0, #0x0
    d134:	cset	w0, eq  // eq = none
    d138:	and	w0, w0, #0xff
    d13c:	and	x0, x0, #0xff
    d140:	cmp	x0, #0x0
    d144:	b.eq	d170 <udev_util_encode_string@@LIBUDEV_183+0x1940>  // b.none
    d148:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d14c:	add	x1, x0, #0x63
    d150:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d154:	add	x4, x0, #0x788
    d158:	mov	w3, #0x183                 	// #387
    d15c:	mov	x2, x1
    d160:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d164:	add	x1, x0, #0x98
    d168:	mov	w0, #0x0                   	// #0
    d16c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d170:	ldr	x0, [sp, #16]
    d174:	cmp	x0, #0x0
    d178:	cset	w0, eq  // eq = none
    d17c:	and	w0, w0, #0xff
    d180:	and	x0, x0, #0xff
    d184:	cmp	x0, #0x0
    d188:	b.eq	d1b4 <udev_util_encode_string@@LIBUDEV_183+0x1984>  // b.none
    d18c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d190:	add	x1, x0, #0x63
    d194:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d198:	add	x4, x0, #0x788
    d19c:	mov	w3, #0x184                 	// #388
    d1a0:	mov	x2, x1
    d1a4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d1a8:	add	x1, x0, #0x1b0
    d1ac:	mov	w0, #0x0                   	// #0
    d1b0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d1b4:	ldr	x0, [sp, #24]
    d1b8:	ldr	x0, [x0, #80]
    d1bc:	bl	ba70 <udev_util_encode_string@@LIBUDEV_183+0x240>
    d1c0:	and	w0, w0, #0xff
    d1c4:	cmp	w0, #0x0
    d1c8:	b.eq	d1d4 <udev_util_encode_string@@LIBUDEV_183+0x19a4>  // b.none
    d1cc:	mov	w0, #0x1                   	// #1
    d1d0:	b	d2c0 <udev_util_encode_string@@LIBUDEV_183+0x1a90>
    d1d4:	mov	w0, #0xfffffffe            	// #-2
    d1d8:	str	w0, [sp, #72]
    d1dc:	str	xzr, [sp, #80]
    d1e0:	b	d298 <udev_util_encode_string@@LIBUDEV_183+0x1a68>
    d1e4:	add	x0, sp, #0x38
    d1e8:	mov	x1, x0
    d1ec:	ldr	x0, [sp, #16]
    d1f0:	bl	1d4f4 <udev_util_encode_string@@LIBUDEV_183+0x11cc4>
    d1f4:	str	x0, [sp, #64]
    d1f8:	b	d28c <udev_util_encode_string@@LIBUDEV_183+0x1a5c>
    d1fc:	ldr	x0, [sp, #40]
    d200:	mov	w2, #0x0                   	// #0
    d204:	ldr	x1, [sp, #64]
    d208:	bl	55b0 <fnmatch@plt>
    d20c:	cmp	w0, #0x0
    d210:	b.ne	d26c <udev_util_encode_string@@LIBUDEV_183+0x1a3c>  // b.any
    d214:	ldr	x0, [sp, #48]
    d218:	cmp	x0, #0x0
    d21c:	b.ne	d234 <udev_util_encode_string@@LIBUDEV_183+0x1a04>  // b.any
    d220:	ldr	x0, [sp, #56]
    d224:	cmp	x0, #0x0
    d228:	b.ne	d234 <udev_util_encode_string@@LIBUDEV_183+0x1a04>  // b.any
    d22c:	mov	w0, #0x1                   	// #1
    d230:	b	d2c0 <udev_util_encode_string@@LIBUDEV_183+0x1a90>
    d234:	ldr	x0, [sp, #48]
    d238:	cmp	x0, #0x0
    d23c:	b.eq	d274 <udev_util_encode_string@@LIBUDEV_183+0x1a44>  // b.none
    d240:	ldr	x0, [sp, #56]
    d244:	cmp	x0, #0x0
    d248:	b.eq	d274 <udev_util_encode_string@@LIBUDEV_183+0x1a44>  // b.none
    d24c:	ldr	x0, [sp, #48]
    d250:	ldr	x1, [sp, #56]
    d254:	mov	w2, #0x0                   	// #0
    d258:	bl	55b0 <fnmatch@plt>
    d25c:	cmp	w0, #0x0
    d260:	b.ne	d278 <udev_util_encode_string@@LIBUDEV_183+0x1a48>  // b.any
    d264:	mov	w0, #0x1                   	// #1
    d268:	b	d2c0 <udev_util_encode_string@@LIBUDEV_183+0x1a90>
    d26c:	nop
    d270:	b	d278 <udev_util_encode_string@@LIBUDEV_183+0x1a48>
    d274:	nop
    d278:	add	x0, sp, #0x38
    d27c:	mov	x1, x0
    d280:	ldr	x0, [sp, #16]
    d284:	bl	1d618 <udev_util_encode_string@@LIBUDEV_183+0x11de8>
    d288:	str	x0, [sp, #64]
    d28c:	ldr	x0, [sp, #64]
    d290:	cmp	x0, #0x0
    d294:	b.ne	d1fc <udev_util_encode_string@@LIBUDEV_183+0x19cc>  // b.any
    d298:	ldr	x0, [sp, #24]
    d29c:	ldr	x0, [x0, #80]
    d2a0:	add	x3, sp, #0x28
    d2a4:	add	x2, sp, #0x30
    d2a8:	add	x1, sp, #0x48
    d2ac:	bl	ba98 <udev_util_encode_string@@LIBUDEV_183+0x268>
    d2b0:	and	w0, w0, #0xff
    d2b4:	cmp	w0, #0x0
    d2b8:	b.ne	d1e4 <udev_util_encode_string@@LIBUDEV_183+0x19b4>  // b.any
    d2bc:	mov	w0, #0x0                   	// #0
    d2c0:	mov	w1, w0
    d2c4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d2c8:	ldr	x0, [x0, #4016]
    d2cc:	ldr	x2, [sp, #88]
    d2d0:	ldr	x0, [x0]
    d2d4:	eor	x0, x2, x0
    d2d8:	cmp	x0, #0x0
    d2dc:	b.eq	d2e4 <udev_util_encode_string@@LIBUDEV_183+0x1ab4>  // b.none
    d2e0:	bl	5390 <__stack_chk_fail@plt>
    d2e4:	mov	w0, w1
    d2e8:	ldp	x29, x30, [sp], #96
    d2ec:	ret
    d2f0:	stp	x29, x30, [sp, #-64]!
    d2f4:	mov	x29, sp
    d2f8:	str	x0, [sp, #24]
    d2fc:	str	x1, [sp, #16]
    d300:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d304:	ldr	x0, [x0, #4016]
    d308:	ldr	x1, [x0]
    d30c:	str	x1, [sp, #56]
    d310:	mov	x1, #0x0                   	// #0
    d314:	ldr	x0, [sp, #24]
    d318:	cmp	x0, #0x0
    d31c:	cset	w0, eq  // eq = none
    d320:	and	w0, w0, #0xff
    d324:	and	x0, x0, #0xff
    d328:	cmp	x0, #0x0
    d32c:	b.eq	d358 <udev_util_encode_string@@LIBUDEV_183+0x1b28>  // b.none
    d330:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d334:	add	x1, x0, #0x63
    d338:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d33c:	add	x4, x0, #0x798
    d340:	mov	w3, #0x1a2                 	// #418
    d344:	mov	x2, x1
    d348:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d34c:	add	x1, x0, #0x98
    d350:	mov	w0, #0x0                   	// #0
    d354:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d358:	ldr	x0, [sp, #16]
    d35c:	cmp	x0, #0x0
    d360:	cset	w0, eq  // eq = none
    d364:	and	w0, w0, #0xff
    d368:	and	x0, x0, #0xff
    d36c:	cmp	x0, #0x0
    d370:	b.eq	d39c <udev_util_encode_string@@LIBUDEV_183+0x1b6c>  // b.none
    d374:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d378:	add	x1, x0, #0x63
    d37c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d380:	add	x4, x0, #0x798
    d384:	mov	w3, #0x1a3                 	// #419
    d388:	mov	x2, x1
    d38c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d390:	add	x1, x0, #0x1b0
    d394:	mov	w0, #0x0                   	// #0
    d398:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d39c:	mov	w0, #0xfffffffe            	// #-2
    d3a0:	str	w0, [sp, #40]
    d3a4:	str	xzr, [sp, #48]
    d3a8:	b	d3cc <udev_util_encode_string@@LIBUDEV_183+0x1b9c>
    d3ac:	ldr	x0, [sp, #32]
    d3b0:	mov	x1, x0
    d3b4:	ldr	x0, [sp, #16]
    d3b8:	bl	1dc38 <udev_util_encode_string@@LIBUDEV_183+0x12408>
    d3bc:	cmp	w0, #0x0
    d3c0:	b.ne	d3cc <udev_util_encode_string@@LIBUDEV_183+0x1b9c>  // b.any
    d3c4:	mov	w0, #0x0                   	// #0
    d3c8:	b	d3f0 <udev_util_encode_string@@LIBUDEV_183+0x1bc0>
    d3cc:	ldr	x0, [sp, #24]
    d3d0:	ldr	x0, [x0, #96]
    d3d4:	add	x2, sp, #0x20
    d3d8:	add	x1, sp, #0x28
    d3dc:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    d3e0:	and	w0, w0, #0xff
    d3e4:	cmp	w0, #0x0
    d3e8:	b.ne	d3ac <udev_util_encode_string@@LIBUDEV_183+0x1b7c>  // b.any
    d3ec:	mov	w0, #0x1                   	// #1
    d3f0:	mov	w1, w0
    d3f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d3f8:	ldr	x0, [x0, #4016]
    d3fc:	ldr	x2, [sp, #56]
    d400:	ldr	x0, [x0]
    d404:	eor	x0, x2, x0
    d408:	cmp	x0, #0x0
    d40c:	b.eq	d414 <udev_util_encode_string@@LIBUDEV_183+0x1be4>  // b.none
    d410:	bl	5390 <__stack_chk_fail@plt>
    d414:	mov	w0, w1
    d418:	ldp	x29, x30, [sp], #64
    d41c:	ret
    d420:	stp	x29, x30, [sp, #-80]!
    d424:	mov	x29, sp
    d428:	str	x0, [sp, #24]
    d42c:	str	x1, [sp, #16]
    d430:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d434:	ldr	x0, [x0, #4016]
    d438:	ldr	x1, [x0]
    d43c:	str	x1, [sp, #72]
    d440:	mov	x1, #0x0                   	// #0
    d444:	ldr	x0, [sp, #24]
    d448:	cmp	x0, #0x0
    d44c:	cset	w0, eq  // eq = none
    d450:	and	w0, w0, #0xff
    d454:	and	x0, x0, #0xff
    d458:	cmp	x0, #0x0
    d45c:	b.eq	d488 <udev_util_encode_string@@LIBUDEV_183+0x1c58>  // b.none
    d460:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d464:	add	x1, x0, #0x63
    d468:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d46c:	add	x4, x0, #0x7a8
    d470:	mov	w3, #0x1b0                 	// #432
    d474:	mov	x2, x1
    d478:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d47c:	add	x1, x0, #0x98
    d480:	mov	w0, #0x0                   	// #0
    d484:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d488:	ldr	x0, [sp, #16]
    d48c:	cmp	x0, #0x0
    d490:	cset	w0, eq  // eq = none
    d494:	and	w0, w0, #0xff
    d498:	and	x0, x0, #0xff
    d49c:	cmp	x0, #0x0
    d4a0:	b.eq	d4cc <udev_util_encode_string@@LIBUDEV_183+0x1c9c>  // b.none
    d4a4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d4a8:	add	x1, x0, #0x63
    d4ac:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d4b0:	add	x4, x0, #0x7a8
    d4b4:	mov	w3, #0x1b1                 	// #433
    d4b8:	mov	x2, x1
    d4bc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d4c0:	add	x1, x0, #0x1b0
    d4c4:	mov	w0, #0x0                   	// #0
    d4c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d4cc:	ldr	x0, [sp, #24]
    d4d0:	ldr	x0, [x0, #104]
    d4d4:	bl	bb48 <udev_util_encode_string@@LIBUDEV_183+0x318>
    d4d8:	and	w0, w0, #0xff
    d4dc:	cmp	w0, #0x0
    d4e0:	b.eq	d4ec <udev_util_encode_string@@LIBUDEV_183+0x1cbc>  // b.none
    d4e4:	mov	w0, #0x1                   	// #1
    d4e8:	b	d588 <udev_util_encode_string@@LIBUDEV_183+0x1d58>
    d4ec:	add	x0, sp, #0x30
    d4f0:	mov	x1, x0
    d4f4:	ldr	x0, [sp, #16]
    d4f8:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
    d4fc:	lsr	w0, w0, #31
    d500:	and	w0, w0, #0xff
    d504:	and	x0, x0, #0xff
    d508:	cmp	x0, #0x0
    d50c:	b.eq	d538 <udev_util_encode_string@@LIBUDEV_183+0x1d08>  // b.none
    d510:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d514:	add	x1, x0, #0x63
    d518:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d51c:	add	x4, x0, #0x7a8
    d520:	mov	w3, #0x1b6                 	// #438
    d524:	mov	x2, x1
    d528:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d52c:	add	x1, x0, #0x1c0
    d530:	mov	w0, #0x0                   	// #0
    d534:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d538:	mov	w0, #0xfffffffe            	// #-2
    d53c:	str	w0, [sp, #56]
    d540:	str	xzr, [sp, #64]
    d544:	b	d564 <udev_util_encode_string@@LIBUDEV_183+0x1d34>
    d548:	ldr	x0, [sp, #48]
    d54c:	ldr	x1, [sp, #40]
    d550:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
    d554:	cmp	x0, #0x0
    d558:	b.eq	d564 <udev_util_encode_string@@LIBUDEV_183+0x1d34>  // b.none
    d55c:	mov	w0, #0x1                   	// #1
    d560:	b	d588 <udev_util_encode_string@@LIBUDEV_183+0x1d58>
    d564:	ldr	x0, [sp, #24]
    d568:	ldr	x0, [x0, #104]
    d56c:	add	x2, sp, #0x28
    d570:	add	x1, sp, #0x38
    d574:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    d578:	and	w0, w0, #0xff
    d57c:	cmp	w0, #0x0
    d580:	b.ne	d548 <udev_util_encode_string@@LIBUDEV_183+0x1d18>  // b.any
    d584:	mov	w0, #0x0                   	// #0
    d588:	mov	w1, w0
    d58c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d590:	ldr	x0, [x0, #4016]
    d594:	ldr	x2, [sp, #72]
    d598:	ldr	x0, [x0]
    d59c:	eor	x0, x2, x0
    d5a0:	cmp	x0, #0x0
    d5a4:	b.eq	d5ac <udev_util_encode_string@@LIBUDEV_183+0x1d7c>  // b.none
    d5a8:	bl	5390 <__stack_chk_fail@plt>
    d5ac:	mov	w0, w1
    d5b0:	ldp	x29, x30, [sp], #80
    d5b4:	ret
    d5b8:	stp	x29, x30, [sp, #-64]!
    d5bc:	mov	x29, sp
    d5c0:	str	x0, [sp, #24]
    d5c4:	str	x1, [sp, #16]
    d5c8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d5cc:	ldr	x0, [x0, #4016]
    d5d0:	ldr	x1, [x0]
    d5d4:	str	x1, [sp, #56]
    d5d8:	mov	x1, #0x0                   	// #0
    d5dc:	ldr	x0, [sp, #24]
    d5e0:	cmp	x0, #0x0
    d5e4:	cset	w0, eq  // eq = none
    d5e8:	and	w0, w0, #0xff
    d5ec:	and	x0, x0, #0xff
    d5f0:	cmp	x0, #0x0
    d5f4:	b.eq	d620 <udev_util_encode_string@@LIBUDEV_183+0x1df0>  // b.none
    d5f8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d5fc:	add	x1, x0, #0x63
    d600:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d604:	add	x4, x0, #0x7b8
    d608:	mov	w3, #0x1c3                 	// #451
    d60c:	mov	x2, x1
    d610:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d614:	add	x1, x0, #0x98
    d618:	mov	w0, #0x0                   	// #0
    d61c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d620:	ldr	x0, [sp, #16]
    d624:	cmp	x0, #0x0
    d628:	cset	w0, eq  // eq = none
    d62c:	and	w0, w0, #0xff
    d630:	and	x0, x0, #0xff
    d634:	cmp	x0, #0x0
    d638:	b.eq	d664 <udev_util_encode_string@@LIBUDEV_183+0x1e34>  // b.none
    d63c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d640:	add	x1, x0, #0x63
    d644:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d648:	add	x4, x0, #0x7b8
    d64c:	mov	w3, #0x1c4                 	// #452
    d650:	mov	x2, x1
    d654:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d658:	add	x1, x0, #0xe8
    d65c:	mov	w0, #0x0                   	// #0
    d660:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d664:	ldr	x0, [sp, #24]
    d668:	ldr	x0, [x0, #88]
    d66c:	bl	bb48 <udev_util_encode_string@@LIBUDEV_183+0x318>
    d670:	and	w0, w0, #0xff
    d674:	cmp	w0, #0x0
    d678:	b.eq	d684 <udev_util_encode_string@@LIBUDEV_183+0x1e54>  // b.none
    d67c:	mov	w0, #0x1                   	// #1
    d680:	b	d6d8 <udev_util_encode_string@@LIBUDEV_183+0x1ea8>
    d684:	mov	w0, #0xfffffffe            	// #-2
    d688:	str	w0, [sp, #40]
    d68c:	str	xzr, [sp, #48]
    d690:	b	d6b4 <udev_util_encode_string@@LIBUDEV_183+0x1e84>
    d694:	ldr	x0, [sp, #32]
    d698:	mov	w2, #0x0                   	// #0
    d69c:	ldr	x1, [sp, #16]
    d6a0:	bl	55b0 <fnmatch@plt>
    d6a4:	cmp	w0, #0x0
    d6a8:	b.ne	d6b4 <udev_util_encode_string@@LIBUDEV_183+0x1e84>  // b.any
    d6ac:	mov	w0, #0x1                   	// #1
    d6b0:	b	d6d8 <udev_util_encode_string@@LIBUDEV_183+0x1ea8>
    d6b4:	ldr	x0, [sp, #24]
    d6b8:	ldr	x0, [x0, #88]
    d6bc:	add	x2, sp, #0x20
    d6c0:	add	x1, sp, #0x28
    d6c4:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    d6c8:	and	w0, w0, #0xff
    d6cc:	cmp	w0, #0x0
    d6d0:	b.ne	d694 <udev_util_encode_string@@LIBUDEV_183+0x1e64>  // b.any
    d6d4:	mov	w0, #0x0                   	// #0
    d6d8:	mov	w1, w0
    d6dc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d6e0:	ldr	x0, [x0, #4016]
    d6e4:	ldr	x2, [sp, #56]
    d6e8:	ldr	x0, [x0]
    d6ec:	eor	x0, x2, x0
    d6f0:	cmp	x0, #0x0
    d6f4:	b.eq	d6fc <udev_util_encode_string@@LIBUDEV_183+0x1ecc>  // b.none
    d6f8:	bl	5390 <__stack_chk_fail@plt>
    d6fc:	mov	w0, w1
    d700:	ldp	x29, x30, [sp], #64
    d704:	ret
    d708:	stp	x29, x30, [sp, #-352]!
    d70c:	mov	x29, sp
    d710:	stp	x19, x20, [sp, #16]
    d714:	stp	x21, x22, [sp, #32]
    d718:	stp	x23, x24, [sp, #48]
    d71c:	stp	x25, x26, [sp, #64]
    d720:	stp	x27, x28, [sp, #80]
    d724:	str	x0, [x29, #120]
    d728:	str	x1, [x29, #112]
    d72c:	str	x2, [x29, #104]
    d730:	str	x3, [x29, #96]
    d734:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    d738:	ldr	x0, [x0, #4016]
    d73c:	ldr	x1, [x0]
    d740:	str	x1, [x29, #344]
    d744:	mov	x1, #0x0                   	// #0
    d748:	str	xzr, [x29, #152]
    d74c:	str	wzr, [x29, #140]
    d750:	ldr	x0, [x29, #120]
    d754:	cmp	x0, #0x0
    d758:	cset	w0, eq  // eq = none
    d75c:	and	w0, w0, #0xff
    d760:	and	x0, x0, #0xff
    d764:	cmp	x0, #0x0
    d768:	b.eq	d794 <udev_util_encode_string@@LIBUDEV_183+0x1f64>  // b.none
    d76c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d770:	add	x1, x0, #0x63
    d774:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d778:	add	x4, x0, #0x7c8
    d77c:	mov	w3, #0x1d6                 	// #470
    d780:	mov	x2, x1
    d784:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d788:	add	x1, x0, #0x98
    d78c:	mov	w0, #0x0                   	// #0
    d790:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d794:	ldr	x0, [x29, #112]
    d798:	cmp	x0, #0x0
    d79c:	cset	w0, eq  // eq = none
    d7a0:	and	w0, w0, #0xff
    d7a4:	and	x0, x0, #0xff
    d7a8:	cmp	x0, #0x0
    d7ac:	b.eq	d7d8 <udev_util_encode_string@@LIBUDEV_183+0x1fa8>  // b.none
    d7b0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d7b4:	add	x1, x0, #0x63
    d7b8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d7bc:	add	x4, x0, #0x7c8
    d7c0:	mov	w3, #0x1d7                 	// #471
    d7c4:	mov	x2, x1
    d7c8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d7cc:	add	x1, x0, #0x1f0
    d7d0:	mov	w0, #0x0                   	// #0
    d7d4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d7d8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d7dc:	add	x0, x0, #0x1f8
    d7e0:	str	x0, [x29, #320]
    d7e4:	ldr	x0, [x29, #112]
    d7e8:	str	x0, [x29, #328]
    d7ec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d7f0:	add	x0, x0, #0x200
    d7f4:	str	x0, [x29, #336]
    d7f8:	str	xzr, [x29, #192]
    d7fc:	str	xzr, [x29, #200]
    d800:	b	d834 <udev_util_encode_string@@LIBUDEV_183+0x2004>
    d804:	ldr	x0, [x29, #200]
    d808:	lsl	x0, x0, #3
    d80c:	add	x1, x29, #0x140
    d810:	ldr	x0, [x1, x0]
    d814:	bl	5040 <strlen@plt>
    d818:	mov	x1, x0
    d81c:	ldr	x0, [x29, #192]
    d820:	add	x0, x0, x1
    d824:	str	x0, [x29, #192]
    d828:	ldr	x0, [x29, #200]
    d82c:	add	x0, x0, #0x1
    d830:	str	x0, [x29, #200]
    d834:	ldr	x0, [x29, #200]
    d838:	cmp	x0, #0x2
    d83c:	b.hi	d858 <udev_util_encode_string@@LIBUDEV_183+0x2028>  // b.pmore
    d840:	ldr	x0, [x29, #200]
    d844:	lsl	x0, x0, #3
    d848:	add	x1, x29, #0x140
    d84c:	ldr	x0, [x1, x0]
    d850:	cmp	x0, #0x0
    d854:	b.ne	d804 <udev_util_encode_string@@LIBUDEV_183+0x1fd4>  // b.any
    d858:	ldr	x0, [x29, #192]
    d85c:	add	x0, x0, #0x1
    d860:	str	x0, [x29, #256]
    d864:	ldr	x1, [x29, #256]
    d868:	mov	x0, #0x1                   	// #1
    d86c:	bl	b908 <udev_util_encode_string@@LIBUDEV_183+0xd8>
    d870:	and	w0, w0, #0xff
    d874:	and	x0, x0, #0xff
    d878:	cmp	x0, #0x0
    d87c:	b.eq	d8a8 <udev_util_encode_string@@LIBUDEV_183+0x2078>  // b.none
    d880:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d884:	add	x1, x0, #0x63
    d888:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d88c:	add	x4, x0, #0x7c8
    d890:	mov	w3, #0x1d9                 	// #473
    d894:	mov	x2, x1
    d898:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d89c:	add	x1, x0, #0x208
    d8a0:	mov	w0, #0x0                   	// #0
    d8a4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d8a8:	ldr	x0, [x29, #256]
    d8ac:	cmp	x0, #0x400, lsl #12
    d8b0:	cset	w0, hi  // hi = pmore
    d8b4:	and	w0, w0, #0xff
    d8b8:	and	x0, x0, #0xff
    d8bc:	cmp	x0, #0x0
    d8c0:	b.eq	d8ec <udev_util_encode_string@@LIBUDEV_183+0x20bc>  // b.none
    d8c4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d8c8:	add	x1, x0, #0x63
    d8cc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d8d0:	add	x4, x0, #0x7c8
    d8d4:	mov	w3, #0x1d9                 	// #473
    d8d8:	mov	x2, x1
    d8dc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d8e0:	add	x1, x0, #0x238
    d8e4:	mov	w0, #0x0                   	// #0
    d8e8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    d8ec:	ldr	x0, [x29, #256]
    d8f0:	add	x0, x0, #0xf
    d8f4:	lsr	x0, x0, #4
    d8f8:	lsl	x0, x0, #4
    d8fc:	sub	sp, sp, x0
    d900:	mov	x0, sp
    d904:	add	x0, x0, #0xf
    d908:	lsr	x0, x0, #4
    d90c:	lsl	x0, x0, #4
    d910:	str	x0, [x29, #264]
    d914:	ldr	x0, [x29, #264]
    d918:	str	x0, [x29, #184]
    d91c:	str	xzr, [x29, #200]
    d920:	b	d950 <udev_util_encode_string@@LIBUDEV_183+0x2120>
    d924:	ldr	x0, [x29, #200]
    d928:	lsl	x0, x0, #3
    d92c:	add	x1, x29, #0x140
    d930:	ldr	x0, [x1, x0]
    d934:	mov	x1, x0
    d938:	ldr	x0, [x29, #184]
    d93c:	bl	51b0 <stpcpy@plt>
    d940:	str	x0, [x29, #184]
    d944:	ldr	x0, [x29, #200]
    d948:	add	x0, x0, #0x1
    d94c:	str	x0, [x29, #200]
    d950:	ldr	x0, [x29, #200]
    d954:	cmp	x0, #0x2
    d958:	b.hi	d974 <udev_util_encode_string@@LIBUDEV_183+0x2144>  // b.pmore
    d95c:	ldr	x0, [x29, #200]
    d960:	lsl	x0, x0, #3
    d964:	add	x1, x29, #0x140
    d968:	ldr	x0, [x1, x0]
    d96c:	cmp	x0, #0x0
    d970:	b.ne	d924 <udev_util_encode_string@@LIBUDEV_183+0x20f4>  // b.any
    d974:	ldr	x0, [x29, #184]
    d978:	strb	wzr, [x0]
    d97c:	ldr	x0, [x29, #264]
    d980:	str	x0, [x29, #176]
    d984:	ldr	x0, [x29, #104]
    d988:	cmp	x0, #0x0
    d98c:	b.eq	db38 <udev_util_encode_string@@LIBUDEV_183+0x2308>  // b.none
    d990:	ldr	x0, [x29, #176]
    d994:	str	x0, [x29, #320]
    d998:	ldr	x0, [x29, #104]
    d99c:	str	x0, [x29, #328]
    d9a0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    d9a4:	add	x0, x0, #0x200
    d9a8:	str	x0, [x29, #336]
    d9ac:	str	xzr, [x29, #216]
    d9b0:	str	xzr, [x29, #224]
    d9b4:	b	d9e8 <udev_util_encode_string@@LIBUDEV_183+0x21b8>
    d9b8:	ldr	x0, [x29, #224]
    d9bc:	lsl	x0, x0, #3
    d9c0:	add	x1, x29, #0x140
    d9c4:	ldr	x0, [x1, x0]
    d9c8:	bl	5040 <strlen@plt>
    d9cc:	mov	x1, x0
    d9d0:	ldr	x0, [x29, #216]
    d9d4:	add	x0, x0, x1
    d9d8:	str	x0, [x29, #216]
    d9dc:	ldr	x0, [x29, #224]
    d9e0:	add	x0, x0, #0x1
    d9e4:	str	x0, [x29, #224]
    d9e8:	ldr	x0, [x29, #224]
    d9ec:	cmp	x0, #0x2
    d9f0:	b.hi	da0c <udev_util_encode_string@@LIBUDEV_183+0x21dc>  // b.pmore
    d9f4:	ldr	x0, [x29, #224]
    d9f8:	lsl	x0, x0, #3
    d9fc:	add	x1, x29, #0x140
    da00:	ldr	x0, [x1, x0]
    da04:	cmp	x0, #0x0
    da08:	b.ne	d9b8 <udev_util_encode_string@@LIBUDEV_183+0x2188>  // b.any
    da0c:	ldr	x0, [x29, #216]
    da10:	add	x0, x0, #0x1
    da14:	str	x0, [x29, #272]
    da18:	ldr	x1, [x29, #272]
    da1c:	mov	x0, #0x1                   	// #1
    da20:	bl	b908 <udev_util_encode_string@@LIBUDEV_183+0xd8>
    da24:	and	w0, w0, #0xff
    da28:	and	x0, x0, #0xff
    da2c:	cmp	x0, #0x0
    da30:	b.eq	da5c <udev_util_encode_string@@LIBUDEV_183+0x222c>  // b.none
    da34:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    da38:	add	x1, x0, #0x63
    da3c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    da40:	add	x4, x0, #0x7c8
    da44:	mov	w3, #0x1dc                 	// #476
    da48:	mov	x2, x1
    da4c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    da50:	add	x1, x0, #0x208
    da54:	mov	w0, #0x0                   	// #0
    da58:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    da5c:	ldr	x0, [x29, #272]
    da60:	cmp	x0, #0x400, lsl #12
    da64:	cset	w0, hi  // hi = pmore
    da68:	and	w0, w0, #0xff
    da6c:	and	x0, x0, #0xff
    da70:	cmp	x0, #0x0
    da74:	b.eq	daa0 <udev_util_encode_string@@LIBUDEV_183+0x2270>  // b.none
    da78:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    da7c:	add	x1, x0, #0x63
    da80:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    da84:	add	x4, x0, #0x7c8
    da88:	mov	w3, #0x1dc                 	// #476
    da8c:	mov	x2, x1
    da90:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    da94:	add	x1, x0, #0x238
    da98:	mov	w0, #0x0                   	// #0
    da9c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    daa0:	ldr	x0, [x29, #272]
    daa4:	add	x0, x0, #0xf
    daa8:	lsr	x0, x0, #4
    daac:	lsl	x0, x0, #4
    dab0:	sub	sp, sp, x0
    dab4:	mov	x0, sp
    dab8:	add	x0, x0, #0xf
    dabc:	lsr	x0, x0, #4
    dac0:	lsl	x0, x0, #4
    dac4:	str	x0, [x29, #280]
    dac8:	ldr	x0, [x29, #280]
    dacc:	str	x0, [x29, #208]
    dad0:	str	xzr, [x29, #224]
    dad4:	b	db04 <udev_util_encode_string@@LIBUDEV_183+0x22d4>
    dad8:	ldr	x0, [x29, #224]
    dadc:	lsl	x0, x0, #3
    dae0:	add	x1, x29, #0x140
    dae4:	ldr	x0, [x1, x0]
    dae8:	mov	x1, x0
    daec:	ldr	x0, [x29, #208]
    daf0:	bl	51b0 <stpcpy@plt>
    daf4:	str	x0, [x29, #208]
    daf8:	ldr	x0, [x29, #224]
    dafc:	add	x0, x0, #0x1
    db00:	str	x0, [x29, #224]
    db04:	ldr	x0, [x29, #224]
    db08:	cmp	x0, #0x2
    db0c:	b.hi	db28 <udev_util_encode_string@@LIBUDEV_183+0x22f8>  // b.pmore
    db10:	ldr	x0, [x29, #224]
    db14:	lsl	x0, x0, #3
    db18:	add	x1, x29, #0x140
    db1c:	ldr	x0, [x1, x0]
    db20:	cmp	x0, #0x0
    db24:	b.ne	dad8 <udev_util_encode_string@@LIBUDEV_183+0x22a8>  // b.any
    db28:	ldr	x0, [x29, #208]
    db2c:	strb	wzr, [x0]
    db30:	ldr	x0, [x29, #280]
    db34:	str	x0, [x29, #176]
    db38:	ldr	x0, [x29, #96]
    db3c:	cmp	x0, #0x0
    db40:	b.eq	dcec <udev_util_encode_string@@LIBUDEV_183+0x24bc>  // b.none
    db44:	ldr	x0, [x29, #176]
    db48:	str	x0, [x29, #320]
    db4c:	ldr	x0, [x29, #96]
    db50:	str	x0, [x29, #328]
    db54:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    db58:	add	x0, x0, #0x200
    db5c:	str	x0, [x29, #336]
    db60:	str	xzr, [x29, #240]
    db64:	str	xzr, [x29, #248]
    db68:	b	db9c <udev_util_encode_string@@LIBUDEV_183+0x236c>
    db6c:	ldr	x0, [x29, #248]
    db70:	lsl	x0, x0, #3
    db74:	add	x1, x29, #0x140
    db78:	ldr	x0, [x1, x0]
    db7c:	bl	5040 <strlen@plt>
    db80:	mov	x1, x0
    db84:	ldr	x0, [x29, #240]
    db88:	add	x0, x0, x1
    db8c:	str	x0, [x29, #240]
    db90:	ldr	x0, [x29, #248]
    db94:	add	x0, x0, #0x1
    db98:	str	x0, [x29, #248]
    db9c:	ldr	x0, [x29, #248]
    dba0:	cmp	x0, #0x2
    dba4:	b.hi	dbc0 <udev_util_encode_string@@LIBUDEV_183+0x2390>  // b.pmore
    dba8:	ldr	x0, [x29, #248]
    dbac:	lsl	x0, x0, #3
    dbb0:	add	x1, x29, #0x140
    dbb4:	ldr	x0, [x1, x0]
    dbb8:	cmp	x0, #0x0
    dbbc:	b.ne	db6c <udev_util_encode_string@@LIBUDEV_183+0x233c>  // b.any
    dbc0:	ldr	x0, [x29, #240]
    dbc4:	add	x0, x0, #0x1
    dbc8:	str	x0, [x29, #288]
    dbcc:	ldr	x1, [x29, #288]
    dbd0:	mov	x0, #0x1                   	// #1
    dbd4:	bl	b908 <udev_util_encode_string@@LIBUDEV_183+0xd8>
    dbd8:	and	w0, w0, #0xff
    dbdc:	and	x0, x0, #0xff
    dbe0:	cmp	x0, #0x0
    dbe4:	b.eq	dc10 <udev_util_encode_string@@LIBUDEV_183+0x23e0>  // b.none
    dbe8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    dbec:	add	x1, x0, #0x63
    dbf0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    dbf4:	add	x4, x0, #0x7c8
    dbf8:	mov	w3, #0x1df                 	// #479
    dbfc:	mov	x2, x1
    dc00:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    dc04:	add	x1, x0, #0x208
    dc08:	mov	w0, #0x0                   	// #0
    dc0c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    dc10:	ldr	x0, [x29, #288]
    dc14:	cmp	x0, #0x400, lsl #12
    dc18:	cset	w0, hi  // hi = pmore
    dc1c:	and	w0, w0, #0xff
    dc20:	and	x0, x0, #0xff
    dc24:	cmp	x0, #0x0
    dc28:	b.eq	dc54 <udev_util_encode_string@@LIBUDEV_183+0x2424>  // b.none
    dc2c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    dc30:	add	x1, x0, #0x63
    dc34:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    dc38:	add	x4, x0, #0x7c8
    dc3c:	mov	w3, #0x1df                 	// #479
    dc40:	mov	x2, x1
    dc44:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    dc48:	add	x1, x0, #0x238
    dc4c:	mov	w0, #0x0                   	// #0
    dc50:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    dc54:	ldr	x0, [x29, #288]
    dc58:	add	x0, x0, #0xf
    dc5c:	lsr	x0, x0, #4
    dc60:	lsl	x0, x0, #4
    dc64:	sub	sp, sp, x0
    dc68:	mov	x0, sp
    dc6c:	add	x0, x0, #0xf
    dc70:	lsr	x0, x0, #4
    dc74:	lsl	x0, x0, #4
    dc78:	str	x0, [x29, #296]
    dc7c:	ldr	x0, [x29, #296]
    dc80:	str	x0, [x29, #232]
    dc84:	str	xzr, [x29, #248]
    dc88:	b	dcb8 <udev_util_encode_string@@LIBUDEV_183+0x2488>
    dc8c:	ldr	x0, [x29, #248]
    dc90:	lsl	x0, x0, #3
    dc94:	add	x1, x29, #0x140
    dc98:	ldr	x0, [x1, x0]
    dc9c:	mov	x1, x0
    dca0:	ldr	x0, [x29, #232]
    dca4:	bl	51b0 <stpcpy@plt>
    dca8:	str	x0, [x29, #232]
    dcac:	ldr	x0, [x29, #248]
    dcb0:	add	x0, x0, #0x1
    dcb4:	str	x0, [x29, #248]
    dcb8:	ldr	x0, [x29, #248]
    dcbc:	cmp	x0, #0x2
    dcc0:	b.hi	dcdc <udev_util_encode_string@@LIBUDEV_183+0x24ac>  // b.pmore
    dcc4:	ldr	x0, [x29, #248]
    dcc8:	lsl	x0, x0, #3
    dccc:	add	x1, x29, #0x140
    dcd0:	ldr	x0, [x1, x0]
    dcd4:	cmp	x0, #0x0
    dcd8:	b.ne	dc8c <udev_util_encode_string@@LIBUDEV_183+0x245c>  // b.any
    dcdc:	ldr	x0, [x29, #232]
    dce0:	strb	wzr, [x0]
    dce4:	ldr	x0, [x29, #296]
    dce8:	str	x0, [x29, #176]
    dcec:	ldr	x0, [x29, #176]
    dcf0:	bl	5100 <opendir@plt>
    dcf4:	str	x0, [x29, #152]
    dcf8:	ldr	x0, [x29, #152]
    dcfc:	cmp	x0, #0x0
    dd00:	b.ne	dd14 <udev_util_encode_string@@LIBUDEV_183+0x24e4>  // b.any
    dd04:	bl	57d0 <__errno_location@plt>
    dd08:	ldr	w0, [x0]
    dd0c:	neg	w19, w0
    dd10:	b	e020 <udev_util_encode_string@@LIBUDEV_183+0x27f0>
    dd14:	bl	57d0 <__errno_location@plt>
    dd18:	str	wzr, [x0]
    dd1c:	ldr	x0, [x29, #152]
    dd20:	bl	5510 <readdir64@plt>
    dd24:	str	x0, [x29, #168]
    dd28:	ldr	x0, [x29, #168]
    dd2c:	cmp	x0, #0x0
    dd30:	b.ne	dd54 <udev_util_encode_string@@LIBUDEV_183+0x2524>  // b.any
    dd34:	bl	57d0 <__errno_location@plt>
    dd38:	ldr	w0, [x0]
    dd3c:	cmp	w0, #0x0
    dd40:	b.le	e018 <udev_util_encode_string@@LIBUDEV_183+0x27e8>
    dd44:	bl	57d0 <__errno_location@plt>
    dd48:	ldr	w0, [x0]
    dd4c:	neg	w19, w0
    dd50:	b	e020 <udev_util_encode_string@@LIBUDEV_183+0x27f0>
    dd54:	mov	x0, sp
    dd58:	mov	x28, x0
    dd5c:	str	xzr, [x29, #160]
    dd60:	ldr	x0, [x29, #176]
    dd64:	bl	5040 <strlen@plt>
    dd68:	mov	x19, x0
    dd6c:	ldr	x0, [x29, #168]
    dd70:	add	x0, x0, #0x13
    dd74:	bl	5040 <strlen@plt>
    dd78:	add	x0, x19, x0
    dd7c:	add	x0, x0, #0x2
    dd80:	mov	x1, x0
    dd84:	sub	x1, x1, #0x1
    dd88:	str	x1, [x29, #304]
    dd8c:	mov	x24, x0
    dd90:	mov	x25, #0x0                   	// #0
    dd94:	lsr	x1, x24, #61
    dd98:	lsl	x21, x25, #3
    dd9c:	orr	x21, x1, x21
    dda0:	lsl	x20, x24, #3
    dda4:	mov	x26, x0
    dda8:	mov	x27, #0x0                   	// #0
    ddac:	lsr	x1, x26, #61
    ddb0:	lsl	x23, x27, #3
    ddb4:	orr	x23, x1, x23
    ddb8:	lsl	x22, x26, #3
    ddbc:	add	x0, x0, #0xf
    ddc0:	lsr	x0, x0, #4
    ddc4:	lsl	x0, x0, #4
    ddc8:	sub	sp, sp, x0
    ddcc:	mov	x0, sp
    ddd0:	add	x0, x0, #0x0
    ddd4:	str	x0, [x29, #312]
    ddd8:	ldr	x0, [x29, #168]
    dddc:	ldrb	w0, [x0, #19]
    dde0:	cmp	w0, #0x2e
    dde4:	b.ne	ddf0 <udev_util_encode_string@@LIBUDEV_183+0x25c0>  // b.any
    dde8:	mov	w19, #0x0                   	// #0
    ddec:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    ddf0:	ldr	x0, [x29, #168]
    ddf4:	add	x0, x0, #0x13
    ddf8:	mov	x1, x0
    ddfc:	ldr	x0, [x29, #120]
    de00:	bl	d5b8 <udev_util_encode_string@@LIBUDEV_183+0x1d88>
    de04:	and	w0, w0, #0xff
    de08:	eor	w0, w0, #0x1
    de0c:	and	w0, w0, #0xff
    de10:	cmp	w0, #0x0
    de14:	b.eq	de20 <udev_util_encode_string@@LIBUDEV_183+0x25f0>  // b.none
    de18:	mov	w19, #0x0                   	// #0
    de1c:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    de20:	ldr	x4, [x29, #312]
    de24:	ldr	x0, [x29, #168]
    de28:	add	x0, x0, #0x13
    de2c:	mov	x3, x0
    de30:	ldr	x2, [x29, #176]
    de34:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    de38:	add	x1, x0, #0x258
    de3c:	mov	x0, x4
    de40:	bl	50f0 <sprintf@plt>
    de44:	ldr	x1, [x29, #312]
    de48:	add	x0, x29, #0xa0
    de4c:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
    de50:	str	w0, [x29, #144]
    de54:	ldr	w0, [x29, #144]
    de58:	cmp	w0, #0x0
    de5c:	b.ge	de7c <udev_util_encode_string@@LIBUDEV_183+0x264c>  // b.tcont
    de60:	ldr	w0, [x29, #144]
    de64:	cmn	w0, #0x13
    de68:	b.eq	de74 <udev_util_encode_string@@LIBUDEV_183+0x2644>  // b.none
    de6c:	ldr	w0, [x29, #144]
    de70:	str	w0, [x29, #140]
    de74:	mov	w19, #0x0                   	// #0
    de78:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    de7c:	ldr	x0, [x29, #160]
    de80:	bl	1cb68 <udev_util_encode_string@@LIBUDEV_183+0x11338>
    de84:	str	w0, [x29, #148]
    de88:	ldr	w0, [x29, #148]
    de8c:	cmp	w0, #0x0
    de90:	b.ge	deb0 <udev_util_encode_string@@LIBUDEV_183+0x2680>  // b.tcont
    de94:	ldr	w0, [x29, #148]
    de98:	cmn	w0, #0x2
    de9c:	b.eq	dea8 <udev_util_encode_string@@LIBUDEV_183+0x2678>  // b.none
    dea0:	ldr	w0, [x29, #148]
    dea4:	str	w0, [x29, #140]
    dea8:	mov	w19, #0x0                   	// #0
    deac:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    deb0:	ldr	x0, [x29, #120]
    deb4:	ldrb	w0, [x0, #112]
    deb8:	eor	w0, w0, #0x1
    debc:	and	w0, w0, #0xff
    dec0:	cmp	w0, #0x0
    dec4:	b.eq	df04 <udev_util_encode_string@@LIBUDEV_183+0x26d4>  // b.none
    dec8:	ldr	w0, [x29, #148]
    decc:	cmp	w0, #0x0
    ded0:	b.ne	df04 <udev_util_encode_string@@LIBUDEV_183+0x26d4>  // b.any
    ded4:	ldr	x0, [x29, #160]
    ded8:	mov	x1, #0x0                   	// #0
    dedc:	bl	1a4cc <udev_util_encode_string@@LIBUDEV_183+0xec9c>
    dee0:	cmp	w0, #0x0
    dee4:	b.ge	defc <udev_util_encode_string@@LIBUDEV_183+0x26cc>  // b.tcont
    dee8:	ldr	x0, [x29, #160]
    deec:	mov	x1, #0x0                   	// #0
    def0:	bl	18f58 <udev_util_encode_string@@LIBUDEV_183+0xd728>
    def4:	cmp	w0, #0x0
    def8:	b.lt	df04 <udev_util_encode_string@@LIBUDEV_183+0x26d4>  // b.tstop
    defc:	mov	w19, #0x0                   	// #0
    df00:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    df04:	ldr	x0, [x29, #160]
    df08:	mov	x1, x0
    df0c:	ldr	x0, [x29, #120]
    df10:	bl	d420 <udev_util_encode_string@@LIBUDEV_183+0x1bf0>
    df14:	and	w0, w0, #0xff
    df18:	eor	w0, w0, #0x1
    df1c:	and	w0, w0, #0xff
    df20:	cmp	w0, #0x0
    df24:	b.eq	df30 <udev_util_encode_string@@LIBUDEV_183+0x2700>  // b.none
    df28:	mov	w19, #0x0                   	// #0
    df2c:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    df30:	ldr	x0, [x29, #160]
    df34:	mov	x1, x0
    df38:	ldr	x0, [x29, #120]
    df3c:	bl	d2f0 <udev_util_encode_string@@LIBUDEV_183+0x1ac0>
    df40:	and	w0, w0, #0xff
    df44:	eor	w0, w0, #0x1
    df48:	and	w0, w0, #0xff
    df4c:	cmp	w0, #0x0
    df50:	b.eq	df5c <udev_util_encode_string@@LIBUDEV_183+0x272c>  // b.none
    df54:	mov	w19, #0x0                   	// #0
    df58:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    df5c:	ldr	x0, [x29, #160]
    df60:	mov	x1, x0
    df64:	ldr	x0, [x29, #120]
    df68:	bl	d108 <udev_util_encode_string@@LIBUDEV_183+0x18d8>
    df6c:	and	w0, w0, #0xff
    df70:	eor	w0, w0, #0x1
    df74:	and	w0, w0, #0xff
    df78:	cmp	w0, #0x0
    df7c:	b.eq	df88 <udev_util_encode_string@@LIBUDEV_183+0x2758>  // b.none
    df80:	mov	w19, #0x0                   	// #0
    df84:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    df88:	ldr	x0, [x29, #160]
    df8c:	mov	x1, x0
    df90:	ldr	x0, [x29, #120]
    df94:	bl	cf60 <udev_util_encode_string@@LIBUDEV_183+0x1730>
    df98:	and	w0, w0, #0xff
    df9c:	eor	w0, w0, #0x1
    dfa0:	and	w0, w0, #0xff
    dfa4:	cmp	w0, #0x0
    dfa8:	b.eq	dfb4 <udev_util_encode_string@@LIBUDEV_183+0x2784>  // b.none
    dfac:	mov	w19, #0x0                   	// #0
    dfb0:	b	dfe0 <udev_util_encode_string@@LIBUDEV_183+0x27b0>
    dfb4:	ldr	x0, [x29, #160]
    dfb8:	mov	x1, x0
    dfbc:	ldr	x0, [x29, #120]
    dfc0:	bl	ccc8 <udev_util_encode_string@@LIBUDEV_183+0x1498>
    dfc4:	str	w0, [x29, #144]
    dfc8:	ldr	w0, [x29, #144]
    dfcc:	cmp	w0, #0x0
    dfd0:	b.ge	dfdc <udev_util_encode_string@@LIBUDEV_183+0x27ac>  // b.tcont
    dfd4:	ldr	w0, [x29, #144]
    dfd8:	str	w0, [x29, #140]
    dfdc:	mov	w19, #0x1                   	// #1
    dfe0:	add	x0, x29, #0xa0
    dfe4:	bl	b85c <udev_util_encode_string@@LIBUDEV_183+0x2c>
    dfe8:	cmp	w19, #0x1
    dfec:	b.ne	dffc <udev_util_encode_string@@LIBUDEV_183+0x27cc>  // b.any
    dff0:	nop
    dff4:	mov	sp, x28
    dff8:	b	e000 <udev_util_encode_string@@LIBUDEV_183+0x27d0>
    dffc:	mov	sp, x28
    e000:	bl	57d0 <__errno_location@plt>
    e004:	str	wzr, [x0]
    e008:	ldr	x0, [x29, #152]
    e00c:	bl	5510 <readdir64@plt>
    e010:	str	x0, [x29, #168]
    e014:	b	dd28 <udev_util_encode_string@@LIBUDEV_183+0x24f8>
    e018:	nop
    e01c:	ldr	w19, [x29, #140]
    e020:	add	x0, x29, #0x98
    e024:	bl	bad0 <udev_util_encode_string@@LIBUDEV_183+0x2a0>
    e028:	mov	w1, w19
    e02c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    e030:	ldr	x0, [x0, #4016]
    e034:	ldr	x2, [x29, #344]
    e038:	ldr	x0, [x0]
    e03c:	eor	x0, x2, x0
    e040:	cmp	x0, #0x0
    e044:	b.eq	e04c <udev_util_encode_string@@LIBUDEV_183+0x281c>  // b.none
    e048:	bl	5390 <__stack_chk_fail@plt>
    e04c:	mov	w0, w1
    e050:	mov	sp, x29
    e054:	ldp	x19, x20, [sp, #16]
    e058:	ldp	x21, x22, [sp, #32]
    e05c:	ldp	x23, x24, [sp, #48]
    e060:	ldp	x25, x26, [sp, #64]
    e064:	ldp	x27, x28, [sp, #80]
    e068:	ldp	x29, x30, [sp], #352
    e06c:	ret
    e070:	stp	x29, x30, [sp, #-64]!
    e074:	mov	x29, sp
    e078:	str	x0, [sp, #24]
    e07c:	str	x1, [sp, #16]
    e080:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    e084:	ldr	x0, [x0, #4016]
    e088:	ldr	x1, [x0]
    e08c:	str	x1, [sp, #56]
    e090:	mov	x1, #0x0                   	// #0
    e094:	ldr	x0, [sp, #24]
    e098:	cmp	x0, #0x0
    e09c:	cset	w0, eq  // eq = none
    e0a0:	and	w0, w0, #0xff
    e0a4:	and	x0, x0, #0xff
    e0a8:	cmp	x0, #0x0
    e0ac:	b.eq	e0d8 <udev_util_encode_string@@LIBUDEV_183+0x28a8>  // b.none
    e0b0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e0b4:	add	x1, x0, #0x63
    e0b8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e0bc:	add	x4, x0, #0x7f0
    e0c0:	mov	w3, #0x22c                 	// #556
    e0c4:	mov	x2, x1
    e0c8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e0cc:	add	x1, x0, #0x98
    e0d0:	mov	w0, #0x0                   	// #0
    e0d4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e0d8:	ldr	x0, [sp, #16]
    e0dc:	cmp	x0, #0x0
    e0e0:	b.ne	e0ec <udev_util_encode_string@@LIBUDEV_183+0x28bc>  // b.any
    e0e4:	mov	w0, #0x0                   	// #0
    e0e8:	b	e1b0 <udev_util_encode_string@@LIBUDEV_183+0x2980>
    e0ec:	mov	w0, #0xfffffffe            	// #-2
    e0f0:	str	w0, [sp, #40]
    e0f4:	str	xzr, [sp, #48]
    e0f8:	b	e11c <udev_util_encode_string@@LIBUDEV_183+0x28ec>
    e0fc:	ldr	x0, [sp, #32]
    e100:	mov	w2, #0x0                   	// #0
    e104:	ldr	x1, [sp, #16]
    e108:	bl	55b0 <fnmatch@plt>
    e10c:	cmp	w0, #0x0
    e110:	b.ne	e11c <udev_util_encode_string@@LIBUDEV_183+0x28ec>  // b.any
    e114:	mov	w0, #0x0                   	// #0
    e118:	b	e1b0 <udev_util_encode_string@@LIBUDEV_183+0x2980>
    e11c:	ldr	x0, [sp, #24]
    e120:	ldr	x0, [x0, #56]
    e124:	add	x2, sp, #0x20
    e128:	add	x1, sp, #0x28
    e12c:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    e130:	and	w0, w0, #0xff
    e134:	cmp	w0, #0x0
    e138:	b.ne	e0fc <udev_util_encode_string@@LIBUDEV_183+0x28cc>  // b.any
    e13c:	ldr	x0, [sp, #24]
    e140:	ldr	x0, [x0, #48]
    e144:	bl	bb48 <udev_util_encode_string@@LIBUDEV_183+0x318>
    e148:	and	w0, w0, #0xff
    e14c:	cmp	w0, #0x0
    e150:	b.eq	e15c <udev_util_encode_string@@LIBUDEV_183+0x292c>  // b.none
    e154:	mov	w0, #0x1                   	// #1
    e158:	b	e1b0 <udev_util_encode_string@@LIBUDEV_183+0x2980>
    e15c:	mov	w0, #0xfffffffe            	// #-2
    e160:	str	w0, [sp, #40]
    e164:	str	xzr, [sp, #48]
    e168:	b	e18c <udev_util_encode_string@@LIBUDEV_183+0x295c>
    e16c:	ldr	x0, [sp, #32]
    e170:	mov	w2, #0x0                   	// #0
    e174:	ldr	x1, [sp, #16]
    e178:	bl	55b0 <fnmatch@plt>
    e17c:	cmp	w0, #0x0
    e180:	b.ne	e18c <udev_util_encode_string@@LIBUDEV_183+0x295c>  // b.any
    e184:	mov	w0, #0x1                   	// #1
    e188:	b	e1b0 <udev_util_encode_string@@LIBUDEV_183+0x2980>
    e18c:	ldr	x0, [sp, #24]
    e190:	ldr	x0, [x0, #48]
    e194:	add	x2, sp, #0x20
    e198:	add	x1, sp, #0x28
    e19c:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    e1a0:	and	w0, w0, #0xff
    e1a4:	cmp	w0, #0x0
    e1a8:	b.ne	e16c <udev_util_encode_string@@LIBUDEV_183+0x293c>  // b.any
    e1ac:	mov	w0, #0x0                   	// #0
    e1b0:	mov	w1, w0
    e1b4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    e1b8:	ldr	x0, [x0, #4016]
    e1bc:	ldr	x2, [sp, #56]
    e1c0:	ldr	x0, [x0]
    e1c4:	eor	x0, x2, x0
    e1c8:	cmp	x0, #0x0
    e1cc:	b.eq	e1d4 <udev_util_encode_string@@LIBUDEV_183+0x29a4>  // b.none
    e1d0:	bl	5390 <__stack_chk_fail@plt>
    e1d4:	mov	w0, w1
    e1d8:	ldp	x29, x30, [sp], #64
    e1dc:	ret
    e1e0:	stp	x29, x30, [sp, #-176]!
    e1e4:	mov	x29, sp
    e1e8:	str	x19, [sp, #16]
    e1ec:	str	x0, [x29, #56]
    e1f0:	str	x1, [x29, #48]
    e1f4:	str	x2, [x29, #40]
    e1f8:	str	x3, [x29, #32]
    e1fc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    e200:	ldr	x0, [x0, #4016]
    e204:	ldr	x1, [x0]
    e208:	str	x1, [x29, #168]
    e20c:	mov	x1, #0x0                   	// #0
    e210:	str	xzr, [x29, #88]
    e214:	str	wzr, [x29, #68]
    e218:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e21c:	add	x0, x0, #0x1f8
    e220:	str	x0, [x29, #152]
    e224:	ldr	x0, [x29, #48]
    e228:	str	x0, [x29, #160]
    e22c:	str	xzr, [x29, #112]
    e230:	str	xzr, [x29, #120]
    e234:	b	e268 <udev_util_encode_string@@LIBUDEV_183+0x2a38>
    e238:	ldr	x0, [x29, #120]
    e23c:	lsl	x0, x0, #3
    e240:	add	x1, x29, #0x98
    e244:	ldr	x0, [x1, x0]
    e248:	bl	5040 <strlen@plt>
    e24c:	mov	x1, x0
    e250:	ldr	x0, [x29, #112]
    e254:	add	x0, x0, x1
    e258:	str	x0, [x29, #112]
    e25c:	ldr	x0, [x29, #120]
    e260:	add	x0, x0, #0x1
    e264:	str	x0, [x29, #120]
    e268:	ldr	x0, [x29, #120]
    e26c:	cmp	x0, #0x1
    e270:	b.hi	e28c <udev_util_encode_string@@LIBUDEV_183+0x2a5c>  // b.pmore
    e274:	ldr	x0, [x29, #120]
    e278:	lsl	x0, x0, #3
    e27c:	add	x1, x29, #0x98
    e280:	ldr	x0, [x1, x0]
    e284:	cmp	x0, #0x0
    e288:	b.ne	e238 <udev_util_encode_string@@LIBUDEV_183+0x2a08>  // b.any
    e28c:	ldr	x0, [x29, #112]
    e290:	add	x0, x0, #0x1
    e294:	str	x0, [x29, #128]
    e298:	ldr	x1, [x29, #128]
    e29c:	mov	x0, #0x1                   	// #1
    e2a0:	bl	b908 <udev_util_encode_string@@LIBUDEV_183+0xd8>
    e2a4:	and	w0, w0, #0xff
    e2a8:	and	x0, x0, #0xff
    e2ac:	cmp	x0, #0x0
    e2b0:	b.eq	e2dc <udev_util_encode_string@@LIBUDEV_183+0x2aac>  // b.none
    e2b4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e2b8:	add	x1, x0, #0x63
    e2bc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e2c0:	add	x4, x0, #0x800
    e2c4:	mov	w3, #0x245                 	// #581
    e2c8:	mov	x2, x1
    e2cc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e2d0:	add	x1, x0, #0x208
    e2d4:	mov	w0, #0x0                   	// #0
    e2d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e2dc:	ldr	x0, [x29, #128]
    e2e0:	cmp	x0, #0x400, lsl #12
    e2e4:	cset	w0, hi  // hi = pmore
    e2e8:	and	w0, w0, #0xff
    e2ec:	and	x0, x0, #0xff
    e2f0:	cmp	x0, #0x0
    e2f4:	b.eq	e320 <udev_util_encode_string@@LIBUDEV_183+0x2af0>  // b.none
    e2f8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e2fc:	add	x1, x0, #0x63
    e300:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e304:	add	x4, x0, #0x800
    e308:	mov	w3, #0x245                 	// #581
    e30c:	mov	x2, x1
    e310:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e314:	add	x1, x0, #0x238
    e318:	mov	w0, #0x0                   	// #0
    e31c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e320:	ldr	x0, [x29, #128]
    e324:	add	x0, x0, #0xf
    e328:	lsr	x0, x0, #4
    e32c:	lsl	x0, x0, #4
    e330:	sub	sp, sp, x0
    e334:	mov	x0, sp
    e338:	add	x0, x0, #0xf
    e33c:	lsr	x0, x0, #4
    e340:	lsl	x0, x0, #4
    e344:	str	x0, [x29, #136]
    e348:	ldr	x0, [x29, #136]
    e34c:	str	x0, [x29, #104]
    e350:	str	xzr, [x29, #120]
    e354:	b	e384 <udev_util_encode_string@@LIBUDEV_183+0x2b54>
    e358:	ldr	x0, [x29, #120]
    e35c:	lsl	x0, x0, #3
    e360:	add	x1, x29, #0x98
    e364:	ldr	x0, [x1, x0]
    e368:	mov	x1, x0
    e36c:	ldr	x0, [x29, #104]
    e370:	bl	51b0 <stpcpy@plt>
    e374:	str	x0, [x29, #104]
    e378:	ldr	x0, [x29, #120]
    e37c:	add	x0, x0, #0x1
    e380:	str	x0, [x29, #120]
    e384:	ldr	x0, [x29, #120]
    e388:	cmp	x0, #0x1
    e38c:	b.hi	e3a8 <udev_util_encode_string@@LIBUDEV_183+0x2b78>  // b.pmore
    e390:	ldr	x0, [x29, #120]
    e394:	lsl	x0, x0, #3
    e398:	add	x1, x29, #0x98
    e39c:	ldr	x0, [x1, x0]
    e3a0:	cmp	x0, #0x0
    e3a4:	b.ne	e358 <udev_util_encode_string@@LIBUDEV_183+0x2b28>  // b.any
    e3a8:	ldr	x0, [x29, #104]
    e3ac:	strb	wzr, [x0]
    e3b0:	ldr	x0, [x29, #136]
    e3b4:	str	x0, [x29, #144]
    e3b8:	ldr	x0, [x29, #144]
    e3bc:	bl	5100 <opendir@plt>
    e3c0:	str	x0, [x29, #88]
    e3c4:	ldr	x0, [x29, #88]
    e3c8:	cmp	x0, #0x0
    e3cc:	b.ne	e3e0 <udev_util_encode_string@@LIBUDEV_183+0x2bb0>  // b.any
    e3d0:	bl	57d0 <__errno_location@plt>
    e3d4:	ldr	w0, [x0]
    e3d8:	neg	w19, w0
    e3dc:	b	e540 <udev_util_encode_string@@LIBUDEV_183+0x2d10>
    e3e0:	mov	w0, #0x7                   	// #7
    e3e4:	str	w0, [x29, #72]
    e3e8:	str	wzr, [x29, #76]
    e3ec:	str	wzr, [x29, #80]
    e3f0:	ldr	w0, [x29, #80]
    e3f4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    e3f8:	mov	w1, w0
    e3fc:	ldr	w0, [x29, #72]
    e400:	and	w0, w0, #0x7
    e404:	cmp	w1, w0
    e408:	b.lt	e450 <udev_util_encode_string@@LIBUDEV_183+0x2c20>  // b.tstop
    e40c:	ldr	w0, [x29, #80]
    e410:	lsl	w1, w0, #10
    e414:	ldr	w0, [x29, #72]
    e418:	orr	w7, w1, w0
    e41c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e420:	add	x1, x0, #0x63
    e424:	ldr	x6, [x29, #144]
    e428:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e42c:	add	x5, x0, #0x260
    e430:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e434:	add	x4, x0, #0x818
    e438:	mov	w3, #0x24b                 	// #587
    e43c:	mov	x2, x1
    e440:	ldr	w1, [x29, #76]
    e444:	mov	w0, w7
    e448:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    e44c:	b	e458 <udev_util_encode_string@@LIBUDEV_183+0x2c28>
    e450:	ldr	w0, [x29, #76]
    e454:	cmp	w0, #0x0
    e458:	bl	57d0 <__errno_location@plt>
    e45c:	str	wzr, [x0]
    e460:	ldr	x0, [x29, #88]
    e464:	bl	5510 <readdir64@plt>
    e468:	str	x0, [x29, #96]
    e46c:	ldr	x0, [x29, #96]
    e470:	cmp	x0, #0x0
    e474:	b.ne	e498 <udev_util_encode_string@@LIBUDEV_183+0x2c68>  // b.any
    e478:	bl	57d0 <__errno_location@plt>
    e47c:	ldr	w0, [x0]
    e480:	cmp	w0, #0x0
    e484:	b.le	e538 <udev_util_encode_string@@LIBUDEV_183+0x2d08>
    e488:	bl	57d0 <__errno_location@plt>
    e48c:	ldr	w0, [x0]
    e490:	neg	w19, w0
    e494:	b	e540 <udev_util_encode_string@@LIBUDEV_183+0x2d10>
    e498:	ldr	x0, [x29, #96]
    e49c:	ldrb	w0, [x0, #19]
    e4a0:	cmp	w0, #0x2e
    e4a4:	b.eq	e514 <udev_util_encode_string@@LIBUDEV_183+0x2ce4>  // b.none
    e4a8:	ldr	x0, [x29, #32]
    e4ac:	cmp	x0, #0x0
    e4b0:	b.ne	e4bc <udev_util_encode_string@@LIBUDEV_183+0x2c8c>  // b.any
    e4b4:	ldr	x0, [x29, #96]
    e4b8:	add	x0, x0, #0x13
    e4bc:	mov	x1, x0
    e4c0:	ldr	x0, [x29, #56]
    e4c4:	bl	e070 <udev_util_encode_string@@LIBUDEV_183+0x2840>
    e4c8:	and	w0, w0, #0xff
    e4cc:	eor	w0, w0, #0x1
    e4d0:	and	w0, w0, #0xff
    e4d4:	cmp	w0, #0x0
    e4d8:	b.ne	e51c <udev_util_encode_string@@LIBUDEV_183+0x2cec>  // b.any
    e4dc:	ldr	x0, [x29, #96]
    e4e0:	add	x0, x0, #0x13
    e4e4:	ldr	x3, [x29, #40]
    e4e8:	mov	x2, x0
    e4ec:	ldr	x1, [x29, #48]
    e4f0:	ldr	x0, [x29, #56]
    e4f4:	bl	d708 <udev_util_encode_string@@LIBUDEV_183+0x1ed8>
    e4f8:	str	w0, [x29, #84]
    e4fc:	ldr	w0, [x29, #84]
    e500:	cmp	w0, #0x0
    e504:	b.ge	e520 <udev_util_encode_string@@LIBUDEV_183+0x2cf0>  // b.tcont
    e508:	ldr	w0, [x29, #84]
    e50c:	str	w0, [x29, #68]
    e510:	b	e520 <udev_util_encode_string@@LIBUDEV_183+0x2cf0>
    e514:	nop
    e518:	b	e520 <udev_util_encode_string@@LIBUDEV_183+0x2cf0>
    e51c:	nop
    e520:	bl	57d0 <__errno_location@plt>
    e524:	str	wzr, [x0]
    e528:	ldr	x0, [x29, #88]
    e52c:	bl	5510 <readdir64@plt>
    e530:	str	x0, [x29, #96]
    e534:	b	e46c <udev_util_encode_string@@LIBUDEV_183+0x2c3c>
    e538:	nop
    e53c:	ldr	w19, [x29, #68]
    e540:	add	x0, x29, #0x58
    e544:	bl	bad0 <udev_util_encode_string@@LIBUDEV_183+0x2a0>
    e548:	mov	w1, w19
    e54c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    e550:	ldr	x0, [x0, #4016]
    e554:	ldr	x2, [x29, #168]
    e558:	ldr	x0, [x0]
    e55c:	eor	x0, x2, x0
    e560:	cmp	x0, #0x0
    e564:	b.eq	e56c <udev_util_encode_string@@LIBUDEV_183+0x2d3c>  // b.none
    e568:	bl	5390 <__stack_chk_fail@plt>
    e56c:	mov	w0, w1
    e570:	mov	sp, x29
    e574:	ldr	x19, [sp, #16]
    e578:	ldp	x29, x30, [sp], #176
    e57c:	ret
    e580:	stp	x29, x30, [sp, #-192]!
    e584:	mov	x29, sp
    e588:	str	x19, [sp, #16]
    e58c:	str	x0, [x29, #40]
    e590:	str	x1, [x29, #32]
    e594:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    e598:	ldr	x0, [x0, #4016]
    e59c:	ldr	x1, [x0]
    e5a0:	str	x1, [x29, #184]
    e5a4:	mov	x1, #0x0                   	// #0
    e5a8:	str	xzr, [x29, #80]
    e5ac:	str	wzr, [x29, #60]
    e5b0:	ldr	x0, [x29, #40]
    e5b4:	cmp	x0, #0x0
    e5b8:	cset	w0, eq  // eq = none
    e5bc:	and	w0, w0, #0xff
    e5c0:	and	x0, x0, #0xff
    e5c4:	cmp	x0, #0x0
    e5c8:	b.eq	e5f4 <udev_util_encode_string@@LIBUDEV_183+0x2dc4>  // b.none
    e5cc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e5d0:	add	x1, x0, #0x63
    e5d4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e5d8:	add	x4, x0, #0x830
    e5dc:	mov	w3, #0x264                 	// #612
    e5e0:	mov	x2, x1
    e5e4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e5e8:	add	x1, x0, #0x98
    e5ec:	mov	w0, #0x0                   	// #0
    e5f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e5f4:	ldr	x0, [x29, #32]
    e5f8:	cmp	x0, #0x0
    e5fc:	cset	w0, eq  // eq = none
    e600:	and	w0, w0, #0xff
    e604:	and	x0, x0, #0xff
    e608:	cmp	x0, #0x0
    e60c:	b.eq	e638 <udev_util_encode_string@@LIBUDEV_183+0x2e08>  // b.none
    e610:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e614:	add	x1, x0, #0x63
    e618:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e61c:	add	x4, x0, #0x830
    e620:	mov	w3, #0x265                 	// #613
    e624:	mov	x2, x1
    e628:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e62c:	add	x1, x0, #0xf0
    e630:	mov	w0, #0x0                   	// #0
    e634:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e638:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e63c:	add	x0, x0, #0x288
    e640:	str	x0, [x29, #168]
    e644:	ldr	x0, [x29, #32]
    e648:	str	x0, [x29, #176]
    e64c:	str	xzr, [x29, #128]
    e650:	str	xzr, [x29, #136]
    e654:	b	e688 <udev_util_encode_string@@LIBUDEV_183+0x2e58>
    e658:	ldr	x0, [x29, #136]
    e65c:	lsl	x0, x0, #3
    e660:	add	x1, x29, #0xa8
    e664:	ldr	x0, [x1, x0]
    e668:	bl	5040 <strlen@plt>
    e66c:	mov	x1, x0
    e670:	ldr	x0, [x29, #128]
    e674:	add	x0, x0, x1
    e678:	str	x0, [x29, #128]
    e67c:	ldr	x0, [x29, #136]
    e680:	add	x0, x0, #0x1
    e684:	str	x0, [x29, #136]
    e688:	ldr	x0, [x29, #136]
    e68c:	cmp	x0, #0x1
    e690:	b.hi	e6ac <udev_util_encode_string@@LIBUDEV_183+0x2e7c>  // b.pmore
    e694:	ldr	x0, [x29, #136]
    e698:	lsl	x0, x0, #3
    e69c:	add	x1, x29, #0xa8
    e6a0:	ldr	x0, [x1, x0]
    e6a4:	cmp	x0, #0x0
    e6a8:	b.ne	e658 <udev_util_encode_string@@LIBUDEV_183+0x2e28>  // b.any
    e6ac:	ldr	x0, [x29, #128]
    e6b0:	add	x0, x0, #0x1
    e6b4:	str	x0, [x29, #144]
    e6b8:	ldr	x1, [x29, #144]
    e6bc:	mov	x0, #0x1                   	// #1
    e6c0:	bl	b908 <udev_util_encode_string@@LIBUDEV_183+0xd8>
    e6c4:	and	w0, w0, #0xff
    e6c8:	and	x0, x0, #0xff
    e6cc:	cmp	x0, #0x0
    e6d0:	b.eq	e6fc <udev_util_encode_string@@LIBUDEV_183+0x2ecc>  // b.none
    e6d4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e6d8:	add	x1, x0, #0x63
    e6dc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e6e0:	add	x4, x0, #0x830
    e6e4:	mov	w3, #0x267                 	// #615
    e6e8:	mov	x2, x1
    e6ec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e6f0:	add	x1, x0, #0x208
    e6f4:	mov	w0, #0x0                   	// #0
    e6f8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e6fc:	ldr	x0, [x29, #144]
    e700:	cmp	x0, #0x400, lsl #12
    e704:	cset	w0, hi  // hi = pmore
    e708:	and	w0, w0, #0xff
    e70c:	and	x0, x0, #0xff
    e710:	cmp	x0, #0x0
    e714:	b.eq	e740 <udev_util_encode_string@@LIBUDEV_183+0x2f10>  // b.none
    e718:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e71c:	add	x1, x0, #0x63
    e720:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e724:	add	x4, x0, #0x830
    e728:	mov	w3, #0x267                 	// #615
    e72c:	mov	x2, x1
    e730:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e734:	add	x1, x0, #0x238
    e738:	mov	w0, #0x0                   	// #0
    e73c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    e740:	ldr	x0, [x29, #144]
    e744:	add	x0, x0, #0xf
    e748:	lsr	x0, x0, #4
    e74c:	lsl	x0, x0, #4
    e750:	sub	sp, sp, x0
    e754:	mov	x0, sp
    e758:	add	x0, x0, #0xf
    e75c:	lsr	x0, x0, #4
    e760:	lsl	x0, x0, #4
    e764:	str	x0, [x29, #152]
    e768:	ldr	x0, [x29, #152]
    e76c:	str	x0, [x29, #120]
    e770:	str	xzr, [x29, #136]
    e774:	b	e7a4 <udev_util_encode_string@@LIBUDEV_183+0x2f74>
    e778:	ldr	x0, [x29, #136]
    e77c:	lsl	x0, x0, #3
    e780:	add	x1, x29, #0xa8
    e784:	ldr	x0, [x1, x0]
    e788:	mov	x1, x0
    e78c:	ldr	x0, [x29, #120]
    e790:	bl	51b0 <stpcpy@plt>
    e794:	str	x0, [x29, #120]
    e798:	ldr	x0, [x29, #136]
    e79c:	add	x0, x0, #0x1
    e7a0:	str	x0, [x29, #136]
    e7a4:	ldr	x0, [x29, #136]
    e7a8:	cmp	x0, #0x1
    e7ac:	b.hi	e7c8 <udev_util_encode_string@@LIBUDEV_183+0x2f98>  // b.pmore
    e7b0:	ldr	x0, [x29, #136]
    e7b4:	lsl	x0, x0, #3
    e7b8:	add	x1, x29, #0xa8
    e7bc:	ldr	x0, [x1, x0]
    e7c0:	cmp	x0, #0x0
    e7c4:	b.ne	e778 <udev_util_encode_string@@LIBUDEV_183+0x2f48>  // b.any
    e7c8:	ldr	x0, [x29, #120]
    e7cc:	strb	wzr, [x0]
    e7d0:	ldr	x0, [x29, #152]
    e7d4:	str	x0, [x29, #160]
    e7d8:	ldr	x0, [x29, #160]
    e7dc:	bl	5100 <opendir@plt>
    e7e0:	str	x0, [x29, #80]
    e7e4:	ldr	x0, [x29, #80]
    e7e8:	cmp	x0, #0x0
    e7ec:	b.ne	e89c <udev_util_encode_string@@LIBUDEV_183+0x306c>  // b.any
    e7f0:	bl	57d0 <__errno_location@plt>
    e7f4:	ldr	w0, [x0]
    e7f8:	cmp	w0, #0x2
    e7fc:	b.eq	e894 <udev_util_encode_string@@LIBUDEV_183+0x3064>  // b.none
    e800:	mov	w0, #0x7                   	// #7
    e804:	str	w0, [x29, #68]
    e808:	bl	57d0 <__errno_location@plt>
    e80c:	ldr	w0, [x0]
    e810:	str	w0, [x29, #72]
    e814:	str	wzr, [x29, #76]
    e818:	ldr	w0, [x29, #76]
    e81c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    e820:	mov	w1, w0
    e824:	ldr	w0, [x29, #68]
    e828:	and	w0, w0, #0x7
    e82c:	cmp	w1, w0
    e830:	b.lt	e87c <udev_util_encode_string@@LIBUDEV_183+0x304c>  // b.tstop
    e834:	ldr	w0, [x29, #76]
    e838:	lsl	w1, w0, #10
    e83c:	ldr	w0, [x29, #68]
    e840:	orr	w7, w1, w0
    e844:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e848:	add	x1, x0, #0x63
    e84c:	ldr	x6, [x29, #160]
    e850:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e854:	add	x5, x0, #0x298
    e858:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    e85c:	add	x4, x0, #0x850
    e860:	mov	w3, #0x26c                 	// #620
    e864:	mov	x2, x1
    e868:	ldr	w1, [x29, #72]
    e86c:	mov	w0, w7
    e870:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    e874:	mov	w19, w0
    e878:	b	ead4 <udev_util_encode_string@@LIBUDEV_183+0x32a4>
    e87c:	ldr	w0, [x29, #72]
    e880:	cmp	w0, #0x0
    e884:	cneg	w0, w0, lt  // lt = tstop
    e888:	and	w0, w0, #0xff
    e88c:	neg	w19, w0
    e890:	b	ead4 <udev_util_encode_string@@LIBUDEV_183+0x32a4>
    e894:	mov	w19, #0x0                   	// #0
    e898:	b	ead4 <udev_util_encode_string@@LIBUDEV_183+0x32a4>
    e89c:	bl	57d0 <__errno_location@plt>
    e8a0:	str	wzr, [x0]
    e8a4:	ldr	x0, [x29, #80]
    e8a8:	bl	5510 <readdir64@plt>
    e8ac:	str	x0, [x29, #112]
    e8b0:	ldr	x0, [x29, #112]
    e8b4:	cmp	x0, #0x0
    e8b8:	b.ne	e8dc <udev_util_encode_string@@LIBUDEV_183+0x30ac>  // b.any
    e8bc:	bl	57d0 <__errno_location@plt>
    e8c0:	ldr	w0, [x0]
    e8c4:	cmp	w0, #0x0
    e8c8:	b.le	eacc <udev_util_encode_string@@LIBUDEV_183+0x329c>
    e8cc:	bl	57d0 <__errno_location@plt>
    e8d0:	ldr	w0, [x0]
    e8d4:	neg	w19, w0
    e8d8:	b	ead4 <udev_util_encode_string@@LIBUDEV_183+0x32a4>
    e8dc:	str	xzr, [x29, #88]
    e8e0:	ldr	x0, [x29, #112]
    e8e4:	ldrb	w0, [x0, #19]
    e8e8:	cmp	w0, #0x2e
    e8ec:	b.ne	e8f8 <udev_util_encode_string@@LIBUDEV_183+0x30c8>  // b.any
    e8f0:	mov	w19, #0x0                   	// #0
    e8f4:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    e8f8:	ldr	x0, [x29, #112]
    e8fc:	add	x1, x0, #0x13
    e900:	add	x0, x29, #0x58
    e904:	bl	19028 <udev_util_encode_string@@LIBUDEV_183+0xd7f8>
    e908:	str	w0, [x29, #64]
    e90c:	ldr	w0, [x29, #64]
    e910:	cmp	w0, #0x0
    e914:	b.ge	e934 <udev_util_encode_string@@LIBUDEV_183+0x3104>  // b.tcont
    e918:	ldr	w0, [x29, #64]
    e91c:	cmn	w0, #0x13
    e920:	b.eq	e92c <udev_util_encode_string@@LIBUDEV_183+0x30fc>  // b.none
    e924:	ldr	w0, [x29, #64]
    e928:	str	w0, [x29, #60]
    e92c:	mov	w19, #0x0                   	// #0
    e930:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    e934:	ldr	x0, [x29, #88]
    e938:	add	x1, x29, #0x60
    e93c:	bl	19ae4 <udev_util_encode_string@@LIBUDEV_183+0xe2b4>
    e940:	str	w0, [x29, #64]
    e944:	ldr	w0, [x29, #64]
    e948:	cmp	w0, #0x0
    e94c:	b.ge	e96c <udev_util_encode_string@@LIBUDEV_183+0x313c>  // b.tcont
    e950:	ldr	w0, [x29, #64]
    e954:	cmn	w0, #0x2
    e958:	b.eq	e964 <udev_util_encode_string@@LIBUDEV_183+0x3134>  // b.none
    e95c:	ldr	w0, [x29, #64]
    e960:	str	w0, [x29, #60]
    e964:	mov	w19, #0x0                   	// #0
    e968:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    e96c:	ldr	x0, [x29, #96]
    e970:	mov	x1, x0
    e974:	ldr	x0, [x29, #40]
    e978:	bl	e070 <udev_util_encode_string@@LIBUDEV_183+0x2840>
    e97c:	and	w0, w0, #0xff
    e980:	eor	w0, w0, #0x1
    e984:	and	w0, w0, #0xff
    e988:	cmp	w0, #0x0
    e98c:	b.eq	e998 <udev_util_encode_string@@LIBUDEV_183+0x3168>  // b.none
    e990:	mov	w19, #0x0                   	// #0
    e994:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    e998:	ldr	x0, [x29, #88]
    e99c:	add	x1, x29, #0x68
    e9a0:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
    e9a4:	str	w0, [x29, #64]
    e9a8:	ldr	w0, [x29, #64]
    e9ac:	cmp	w0, #0x0
    e9b0:	b.ge	e9c4 <udev_util_encode_string@@LIBUDEV_183+0x3194>  // b.tcont
    e9b4:	ldr	w0, [x29, #64]
    e9b8:	str	w0, [x29, #60]
    e9bc:	mov	w19, #0x0                   	// #0
    e9c0:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    e9c4:	ldr	x0, [x29, #104]
    e9c8:	mov	x1, x0
    e9cc:	ldr	x0, [x29, #40]
    e9d0:	bl	d5b8 <udev_util_encode_string@@LIBUDEV_183+0x1d88>
    e9d4:	and	w0, w0, #0xff
    e9d8:	eor	w0, w0, #0x1
    e9dc:	and	w0, w0, #0xff
    e9e0:	cmp	w0, #0x0
    e9e4:	b.eq	e9f0 <udev_util_encode_string@@LIBUDEV_183+0x31c0>  // b.none
    e9e8:	mov	w19, #0x0                   	// #0
    e9ec:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    e9f0:	ldr	x0, [x29, #88]
    e9f4:	mov	x1, x0
    e9f8:	ldr	x0, [x29, #40]
    e9fc:	bl	d420 <udev_util_encode_string@@LIBUDEV_183+0x1bf0>
    ea00:	and	w0, w0, #0xff
    ea04:	eor	w0, w0, #0x1
    ea08:	and	w0, w0, #0xff
    ea0c:	cmp	w0, #0x0
    ea10:	b.eq	ea1c <udev_util_encode_string@@LIBUDEV_183+0x31ec>  // b.none
    ea14:	mov	w19, #0x0                   	// #0
    ea18:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    ea1c:	ldr	x0, [x29, #88]
    ea20:	mov	x1, x0
    ea24:	ldr	x0, [x29, #40]
    ea28:	bl	d108 <udev_util_encode_string@@LIBUDEV_183+0x18d8>
    ea2c:	and	w0, w0, #0xff
    ea30:	eor	w0, w0, #0x1
    ea34:	and	w0, w0, #0xff
    ea38:	cmp	w0, #0x0
    ea3c:	b.eq	ea48 <udev_util_encode_string@@LIBUDEV_183+0x3218>  // b.none
    ea40:	mov	w19, #0x0                   	// #0
    ea44:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    ea48:	ldr	x0, [x29, #88]
    ea4c:	mov	x1, x0
    ea50:	ldr	x0, [x29, #40]
    ea54:	bl	cf60 <udev_util_encode_string@@LIBUDEV_183+0x1730>
    ea58:	and	w0, w0, #0xff
    ea5c:	eor	w0, w0, #0x1
    ea60:	and	w0, w0, #0xff
    ea64:	cmp	w0, #0x0
    ea68:	b.eq	ea74 <udev_util_encode_string@@LIBUDEV_183+0x3244>  // b.none
    ea6c:	mov	w19, #0x0                   	// #0
    ea70:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    ea74:	ldr	x0, [x29, #88]
    ea78:	mov	x1, x0
    ea7c:	ldr	x0, [x29, #40]
    ea80:	bl	ccc8 <udev_util_encode_string@@LIBUDEV_183+0x1498>
    ea84:	str	w0, [x29, #64]
    ea88:	ldr	w0, [x29, #64]
    ea8c:	cmp	w0, #0x0
    ea90:	b.ge	eaa4 <udev_util_encode_string@@LIBUDEV_183+0x3274>  // b.tcont
    ea94:	ldr	w0, [x29, #64]
    ea98:	str	w0, [x29, #60]
    ea9c:	mov	w19, #0x0                   	// #0
    eaa0:	b	eaa8 <udev_util_encode_string@@LIBUDEV_183+0x3278>
    eaa4:	mov	w19, #0x1                   	// #1
    eaa8:	add	x0, x29, #0x58
    eaac:	bl	b85c <udev_util_encode_string@@LIBUDEV_183+0x2c>
    eab0:	cmp	w19, #0x1
    eab4:	bl	57d0 <__errno_location@plt>
    eab8:	str	wzr, [x0]
    eabc:	ldr	x0, [x29, #80]
    eac0:	bl	5510 <readdir64@plt>
    eac4:	str	x0, [x29, #112]
    eac8:	b	e8b0 <udev_util_encode_string@@LIBUDEV_183+0x3080>
    eacc:	nop
    ead0:	ldr	w19, [x29, #60]
    ead4:	add	x0, x29, #0x50
    ead8:	bl	bad0 <udev_util_encode_string@@LIBUDEV_183+0x2a0>
    eadc:	mov	w1, w19
    eae0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    eae4:	ldr	x0, [x0, #4016]
    eae8:	ldr	x2, [x29, #184]
    eaec:	ldr	x0, [x0]
    eaf0:	eor	x0, x2, x0
    eaf4:	cmp	x0, #0x0
    eaf8:	b.eq	eb00 <udev_util_encode_string@@LIBUDEV_183+0x32d0>  // b.none
    eafc:	bl	5390 <__stack_chk_fail@plt>
    eb00:	mov	w0, w1
    eb04:	mov	sp, x29
    eb08:	ldr	x19, [sp, #16]
    eb0c:	ldp	x29, x30, [sp], #192
    eb10:	ret
    eb14:	stp	x29, x30, [sp, #-80]!
    eb18:	mov	x29, sp
    eb1c:	str	x0, [sp, #24]
    eb20:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    eb24:	ldr	x0, [x0, #4016]
    eb28:	ldr	x1, [x0]
    eb2c:	str	x1, [sp, #72]
    eb30:	mov	x1, #0x0                   	// #0
    eb34:	str	wzr, [sp, #40]
    eb38:	ldr	x0, [sp, #24]
    eb3c:	cmp	x0, #0x0
    eb40:	cset	w0, eq  // eq = none
    eb44:	and	w0, w0, #0xff
    eb48:	and	x0, x0, #0xff
    eb4c:	cmp	x0, #0x0
    eb50:	b.eq	eb7c <udev_util_encode_string@@LIBUDEV_183+0x334c>  // b.none
    eb54:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    eb58:	add	x1, x0, #0x63
    eb5c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    eb60:	add	x4, x0, #0x870
    eb64:	mov	w3, #0x2af                 	// #687
    eb68:	mov	x2, x1
    eb6c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    eb70:	add	x1, x0, #0x98
    eb74:	mov	w0, #0x0                   	// #0
    eb78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    eb7c:	mov	w0, #0xfffffffe            	// #-2
    eb80:	str	w0, [sp, #56]
    eb84:	str	xzr, [sp, #64]
    eb88:	b	ebb4 <udev_util_encode_string@@LIBUDEV_183+0x3384>
    eb8c:	ldr	x0, [sp, #48]
    eb90:	mov	x1, x0
    eb94:	ldr	x0, [sp, #24]
    eb98:	bl	e580 <udev_util_encode_string@@LIBUDEV_183+0x2d50>
    eb9c:	str	w0, [sp, #44]
    eba0:	ldr	w0, [sp, #44]
    eba4:	cmp	w0, #0x0
    eba8:	b.ge	ebb4 <udev_util_encode_string@@LIBUDEV_183+0x3384>  // b.tcont
    ebac:	ldr	w0, [sp, #44]
    ebb0:	str	w0, [sp, #40]
    ebb4:	ldr	x0, [sp, #24]
    ebb8:	ldr	x0, [x0, #96]
    ebbc:	add	x2, sp, #0x30
    ebc0:	add	x1, sp, #0x38
    ebc4:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    ebc8:	and	w0, w0, #0xff
    ebcc:	cmp	w0, #0x0
    ebd0:	b.ne	eb8c <udev_util_encode_string@@LIBUDEV_183+0x335c>  // b.any
    ebd4:	ldr	w0, [sp, #40]
    ebd8:	mov	w1, w0
    ebdc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ebe0:	ldr	x0, [x0, #4016]
    ebe4:	ldr	x2, [sp, #72]
    ebe8:	ldr	x0, [x0]
    ebec:	eor	x0, x2, x0
    ebf0:	cmp	x0, #0x0
    ebf4:	b.eq	ebfc <udev_util_encode_string@@LIBUDEV_183+0x33cc>  // b.none
    ebf8:	bl	5390 <__stack_chk_fail@plt>
    ebfc:	mov	w0, w1
    ec00:	ldp	x29, x30, [sp], #80
    ec04:	ret
    ec08:	stp	x29, x30, [sp, #-96]!
    ec0c:	mov	x29, sp
    ec10:	str	x19, [sp, #16]
    ec14:	str	x0, [sp, #40]
    ec18:	str	x1, [sp, #32]
    ec1c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ec20:	ldr	x0, [x0, #4016]
    ec24:	ldr	x1, [x0]
    ec28:	str	x1, [sp, #88]
    ec2c:	mov	x1, #0x0                   	// #0
    ec30:	str	xzr, [sp, #64]
    ec34:	add	x0, sp, #0x40
    ec38:	ldr	x1, [sp, #32]
    ec3c:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
    ec40:	str	w0, [sp, #60]
    ec44:	ldr	w0, [sp, #60]
    ec48:	cmn	w0, #0x13
    ec4c:	b.ne	ec58 <udev_util_encode_string@@LIBUDEV_183+0x3428>  // b.any
    ec50:	mov	w19, #0x0                   	// #0
    ec54:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ec58:	ldr	w0, [sp, #60]
    ec5c:	cmp	w0, #0x0
    ec60:	b.ge	ec6c <udev_util_encode_string@@LIBUDEV_183+0x343c>  // b.tcont
    ec64:	ldr	w19, [sp, #60]
    ec68:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ec6c:	ldr	x0, [sp, #64]
    ec70:	add	x1, sp, #0x48
    ec74:	bl	19ae4 <udev_util_encode_string@@LIBUDEV_183+0xe2b4>
    ec78:	str	w0, [sp, #60]
    ec7c:	ldr	w0, [sp, #60]
    ec80:	cmn	w0, #0x2
    ec84:	b.ne	ec90 <udev_util_encode_string@@LIBUDEV_183+0x3460>  // b.any
    ec88:	mov	w19, #0x0                   	// #0
    ec8c:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ec90:	ldr	w0, [sp, #60]
    ec94:	cmp	w0, #0x0
    ec98:	b.ge	eca4 <udev_util_encode_string@@LIBUDEV_183+0x3474>  // b.tcont
    ec9c:	ldr	w19, [sp, #60]
    eca0:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    eca4:	ldr	x0, [sp, #72]
    eca8:	mov	x1, x0
    ecac:	ldr	x0, [sp, #40]
    ecb0:	bl	e070 <udev_util_encode_string@@LIBUDEV_183+0x2840>
    ecb4:	and	w0, w0, #0xff
    ecb8:	eor	w0, w0, #0x1
    ecbc:	and	w0, w0, #0xff
    ecc0:	cmp	w0, #0x0
    ecc4:	b.eq	ecd0 <udev_util_encode_string@@LIBUDEV_183+0x34a0>  // b.none
    ecc8:	mov	w19, #0x0                   	// #0
    eccc:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ecd0:	ldr	x0, [sp, #64]
    ecd4:	add	x1, sp, #0x50
    ecd8:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
    ecdc:	str	w0, [sp, #60]
    ece0:	ldr	w0, [sp, #60]
    ece4:	cmp	w0, #0x0
    ece8:	b.ge	ecf4 <udev_util_encode_string@@LIBUDEV_183+0x34c4>  // b.tcont
    ecec:	ldr	w19, [sp, #60]
    ecf0:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ecf4:	ldr	x0, [sp, #80]
    ecf8:	mov	x1, x0
    ecfc:	ldr	x0, [sp, #40]
    ed00:	bl	d5b8 <udev_util_encode_string@@LIBUDEV_183+0x1d88>
    ed04:	and	w0, w0, #0xff
    ed08:	eor	w0, w0, #0x1
    ed0c:	and	w0, w0, #0xff
    ed10:	cmp	w0, #0x0
    ed14:	b.eq	ed20 <udev_util_encode_string@@LIBUDEV_183+0x34f0>  // b.none
    ed18:	mov	w19, #0x0                   	// #0
    ed1c:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ed20:	ldr	x0, [sp, #64]
    ed24:	mov	x1, x0
    ed28:	ldr	x0, [sp, #40]
    ed2c:	bl	d108 <udev_util_encode_string@@LIBUDEV_183+0x18d8>
    ed30:	and	w0, w0, #0xff
    ed34:	eor	w0, w0, #0x1
    ed38:	and	w0, w0, #0xff
    ed3c:	cmp	w0, #0x0
    ed40:	b.eq	ed4c <udev_util_encode_string@@LIBUDEV_183+0x351c>  // b.none
    ed44:	mov	w19, #0x0                   	// #0
    ed48:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ed4c:	ldr	x0, [sp, #64]
    ed50:	mov	x1, x0
    ed54:	ldr	x0, [sp, #40]
    ed58:	bl	cf60 <udev_util_encode_string@@LIBUDEV_183+0x1730>
    ed5c:	and	w0, w0, #0xff
    ed60:	eor	w0, w0, #0x1
    ed64:	and	w0, w0, #0xff
    ed68:	cmp	w0, #0x0
    ed6c:	b.eq	ed78 <udev_util_encode_string@@LIBUDEV_183+0x3548>  // b.none
    ed70:	mov	w19, #0x0                   	// #0
    ed74:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    ed78:	ldr	x0, [sp, #64]
    ed7c:	mov	x1, x0
    ed80:	ldr	x0, [sp, #40]
    ed84:	bl	ccc8 <udev_util_encode_string@@LIBUDEV_183+0x1498>
    ed88:	str	w0, [sp, #60]
    ed8c:	ldr	w0, [sp, #60]
    ed90:	cmp	w0, #0x0
    ed94:	b.ge	eda0 <udev_util_encode_string@@LIBUDEV_183+0x3570>  // b.tcont
    ed98:	ldr	w19, [sp, #60]
    ed9c:	b	eda4 <udev_util_encode_string@@LIBUDEV_183+0x3574>
    eda0:	mov	w19, #0x1                   	// #1
    eda4:	add	x0, sp, #0x40
    eda8:	bl	b85c <udev_util_encode_string@@LIBUDEV_183+0x2c>
    edac:	mov	w1, w19
    edb0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    edb4:	ldr	x0, [x0, #4016]
    edb8:	ldr	x2, [sp, #88]
    edbc:	ldr	x0, [x0]
    edc0:	eor	x0, x2, x0
    edc4:	cmp	x0, #0x0
    edc8:	b.eq	edd0 <udev_util_encode_string@@LIBUDEV_183+0x35a0>  // b.none
    edcc:	bl	5390 <__stack_chk_fail@plt>
    edd0:	mov	w0, w1
    edd4:	ldr	x19, [sp, #16]
    edd8:	ldp	x29, x30, [sp], #96
    eddc:	ret
    ede0:	stp	x29, x30, [sp, #-128]!
    ede4:	mov	x29, sp
    ede8:	stp	x19, x20, [sp, #16]
    edec:	str	x0, [sp, #56]
    edf0:	str	x1, [sp, #48]
    edf4:	str	w2, [sp, #44]
    edf8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    edfc:	ldr	x0, [x0, #4016]
    ee00:	ldr	x1, [x0]
    ee04:	str	x1, [sp, #120]
    ee08:	mov	x1, #0x0                   	// #0
    ee0c:	str	xzr, [sp, #96]
    ee10:	str	wzr, [sp, #64]
    ee14:	ldr	x0, [sp, #48]
    ee18:	bl	5100 <opendir@plt>
    ee1c:	str	x0, [sp, #96]
    ee20:	ldr	x0, [sp, #96]
    ee24:	cmp	x0, #0x0
    ee28:	b.ne	eec0 <udev_util_encode_string@@LIBUDEV_183+0x3690>  // b.any
    ee2c:	mov	w0, #0x7                   	// #7
    ee30:	str	w0, [sp, #84]
    ee34:	bl	57d0 <__errno_location@plt>
    ee38:	ldr	w0, [x0]
    ee3c:	str	w0, [sp, #88]
    ee40:	str	wzr, [sp, #92]
    ee44:	ldr	w0, [sp, #92]
    ee48:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    ee4c:	mov	w1, w0
    ee50:	ldr	w0, [sp, #84]
    ee54:	and	w0, w0, #0x7
    ee58:	cmp	w1, w0
    ee5c:	b.lt	eea8 <udev_util_encode_string@@LIBUDEV_183+0x3678>  // b.tstop
    ee60:	ldr	w0, [sp, #92]
    ee64:	lsl	w1, w0, #10
    ee68:	ldr	w0, [sp, #84]
    ee6c:	orr	w7, w1, w0
    ee70:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ee74:	add	x1, x0, #0x63
    ee78:	ldr	x6, [sp, #48]
    ee7c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ee80:	add	x5, x0, #0x2d8
    ee84:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    ee88:	add	x4, x0, #0x890
    ee8c:	mov	w3, #0x2ec                 	// #748
    ee90:	mov	x2, x1
    ee94:	ldr	w1, [sp, #88]
    ee98:	mov	w0, w7
    ee9c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    eea0:	mov	w19, w0
    eea4:	b	f070 <udev_util_encode_string@@LIBUDEV_183+0x3840>
    eea8:	ldr	w0, [sp, #88]
    eeac:	cmp	w0, #0x0
    eeb0:	cneg	w0, w0, lt  // lt = tstop
    eeb4:	and	w0, w0, #0xff
    eeb8:	neg	w19, w0
    eebc:	b	f070 <udev_util_encode_string@@LIBUDEV_183+0x3840>
    eec0:	bl	57d0 <__errno_location@plt>
    eec4:	str	wzr, [x0]
    eec8:	ldr	x0, [sp, #96]
    eecc:	bl	5510 <readdir64@plt>
    eed0:	str	x0, [sp, #112]
    eed4:	ldr	x0, [sp, #112]
    eed8:	cmp	x0, #0x0
    eedc:	b.ne	ef00 <udev_util_encode_string@@LIBUDEV_183+0x36d0>  // b.any
    eee0:	bl	57d0 <__errno_location@plt>
    eee4:	ldr	w0, [x0]
    eee8:	cmp	w0, #0x0
    eeec:	b.le	f068 <udev_util_encode_string@@LIBUDEV_183+0x3838>
    eef0:	bl	57d0 <__errno_location@plt>
    eef4:	ldr	w0, [x0]
    eef8:	neg	w19, w0
    eefc:	b	f070 <udev_util_encode_string@@LIBUDEV_183+0x3840>
    ef00:	str	xzr, [sp, #104]
    ef04:	ldr	x0, [sp, #112]
    ef08:	ldrb	w0, [x0, #19]
    ef0c:	cmp	w0, #0x2e
    ef10:	b.ne	ef1c <udev_util_encode_string@@LIBUDEV_183+0x36ec>  // b.any
    ef14:	mov	w20, #0x0                   	// #0
    ef18:	b	f038 <udev_util_encode_string@@LIBUDEV_183+0x3808>
    ef1c:	ldr	x0, [sp, #112]
    ef20:	ldrb	w0, [x0, #18]
    ef24:	cmp	w0, #0x4
    ef28:	b.eq	ef34 <udev_util_encode_string@@LIBUDEV_183+0x3704>  // b.none
    ef2c:	mov	w20, #0x0                   	// #0
    ef30:	b	f038 <udev_util_encode_string@@LIBUDEV_183+0x3808>
    ef34:	ldr	x0, [sp, #112]
    ef38:	add	x0, x0, #0x13
    ef3c:	mov	x2, #0xffffffffffffffff    	// #-1
    ef40:	mov	x1, x0
    ef44:	ldr	x0, [sp, #48]
    ef48:	bl	31588 <udev_util_encode_string@@LIBUDEV_183+0x25d58>
    ef4c:	str	x0, [sp, #104]
    ef50:	ldr	x0, [sp, #104]
    ef54:	cmp	x0, #0x0
    ef58:	b.ne	ef68 <udev_util_encode_string@@LIBUDEV_183+0x3738>  // b.any
    ef5c:	mov	w19, #0xfffffff4            	// #-12
    ef60:	mov	w20, #0x1                   	// #1
    ef64:	b	f038 <udev_util_encode_string@@LIBUDEV_183+0x3808>
    ef68:	ldr	x0, [sp, #104]
    ef6c:	mov	x1, x0
    ef70:	ldr	x0, [sp, #56]
    ef74:	bl	ec08 <udev_util_encode_string@@LIBUDEV_183+0x33d8>
    ef78:	str	w0, [sp, #68]
    ef7c:	ldr	w0, [sp, #68]
    ef80:	cmp	w0, #0x0
    ef84:	b.ge	ef90 <udev_util_encode_string@@LIBUDEV_183+0x3760>  // b.tcont
    ef88:	ldr	w0, [sp, #68]
    ef8c:	str	w0, [sp, #64]
    ef90:	ldr	w0, [sp, #44]
    ef94:	cmp	w0, #0x0
    ef98:	b.eq	efb8 <udev_util_encode_string@@LIBUDEV_183+0x3788>  // b.none
    ef9c:	ldr	x1, [sp, #104]
    efa0:	ldr	w0, [sp, #44]
    efa4:	sub	w0, w0, #0x1
    efa8:	mov	w2, w0
    efac:	ldr	x0, [sp, #56]
    efb0:	bl	ede0 <udev_util_encode_string@@LIBUDEV_183+0x35b0>
    efb4:	b	f034 <udev_util_encode_string@@LIBUDEV_183+0x3804>
    efb8:	mov	w0, #0x7                   	// #7
    efbc:	str	w0, [sp, #72]
    efc0:	str	wzr, [sp, #76]
    efc4:	str	wzr, [sp, #80]
    efc8:	ldr	w0, [sp, #80]
    efcc:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    efd0:	mov	w1, w0
    efd4:	ldr	w0, [sp, #72]
    efd8:	and	w0, w0, #0x7
    efdc:	cmp	w1, w0
    efe0:	b.lt	f02c <udev_util_encode_string@@LIBUDEV_183+0x37fc>  // b.tstop
    efe4:	ldr	w0, [sp, #80]
    efe8:	lsl	w1, w0, #10
    efec:	ldr	w0, [sp, #72]
    eff0:	orr	w7, w1, w0
    eff4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    eff8:	add	x1, x0, #0x63
    effc:	ldr	x0, [sp, #104]
    f000:	mov	x6, x0
    f004:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f008:	add	x5, x0, #0x318
    f00c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f010:	add	x4, x0, #0x890
    f014:	mov	w3, #0x303                 	// #771
    f018:	mov	x2, x1
    f01c:	ldr	w1, [sp, #76]
    f020:	mov	w0, w7
    f024:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    f028:	b	f034 <udev_util_encode_string@@LIBUDEV_183+0x3804>
    f02c:	ldr	w0, [sp, #76]
    f030:	cmp	w0, #0x0
    f034:	mov	w20, #0x2                   	// #2
    f038:	add	x0, sp, #0x68
    f03c:	bl	b8e4 <udev_util_encode_string@@LIBUDEV_183+0xb4>
    f040:	cmp	w20, #0x0
    f044:	b.eq	f050 <udev_util_encode_string@@LIBUDEV_183+0x3820>  // b.none
    f048:	cmp	w20, #0x2
    f04c:	b.ne	f070 <udev_util_encode_string@@LIBUDEV_183+0x3840>  // b.any
    f050:	bl	57d0 <__errno_location@plt>
    f054:	str	wzr, [x0]
    f058:	ldr	x0, [sp, #96]
    f05c:	bl	5510 <readdir64@plt>
    f060:	str	x0, [sp, #112]
    f064:	b	eed4 <udev_util_encode_string@@LIBUDEV_183+0x36a4>
    f068:	nop
    f06c:	ldr	w19, [sp, #64]
    f070:	add	x0, sp, #0x60
    f074:	bl	bad0 <udev_util_encode_string@@LIBUDEV_183+0x2a0>
    f078:	mov	w1, w19
    f07c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    f080:	ldr	x0, [x0, #4016]
    f084:	ldr	x2, [sp, #120]
    f088:	ldr	x0, [x0]
    f08c:	eor	x0, x2, x0
    f090:	cmp	x0, #0x0
    f094:	b.eq	f09c <udev_util_encode_string@@LIBUDEV_183+0x386c>  // b.none
    f098:	bl	5390 <__stack_chk_fail@plt>
    f09c:	mov	w0, w1
    f0a0:	ldp	x19, x20, [sp, #16]
    f0a4:	ldp	x29, x30, [sp], #128
    f0a8:	ret
    f0ac:	stp	x29, x30, [sp, #-80]!
    f0b0:	mov	x29, sp
    f0b4:	str	x0, [sp, #24]
    f0b8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    f0bc:	ldr	x0, [x0, #4016]
    f0c0:	ldr	x1, [x0]
    f0c4:	str	x1, [sp, #72]
    f0c8:	mov	x1, #0x0                   	// #0
    f0cc:	str	wzr, [sp, #40]
    f0d0:	mov	w0, #0xfffffffe            	// #-2
    f0d4:	str	w0, [sp, #56]
    f0d8:	str	xzr, [sp, #64]
    f0dc:	b	f134 <udev_util_encode_string@@LIBUDEV_183+0x3904>
    f0e0:	ldr	x0, [sp, #48]
    f0e4:	mov	x1, x0
    f0e8:	ldr	x0, [sp, #24]
    f0ec:	bl	ec08 <udev_util_encode_string@@LIBUDEV_183+0x33d8>
    f0f0:	str	w0, [sp, #44]
    f0f4:	ldr	w0, [sp, #44]
    f0f8:	cmp	w0, #0x0
    f0fc:	b.ge	f108 <udev_util_encode_string@@LIBUDEV_183+0x38d8>  // b.tcont
    f100:	ldr	w0, [sp, #44]
    f104:	str	w0, [sp, #40]
    f108:	ldr	x0, [sp, #48]
    f10c:	mov	w2, #0x100                 	// #256
    f110:	mov	x1, x0
    f114:	ldr	x0, [sp, #24]
    f118:	bl	ede0 <udev_util_encode_string@@LIBUDEV_183+0x35b0>
    f11c:	str	w0, [sp, #44]
    f120:	ldr	w0, [sp, #44]
    f124:	cmp	w0, #0x0
    f128:	b.ge	f134 <udev_util_encode_string@@LIBUDEV_183+0x3904>  // b.tcont
    f12c:	ldr	w0, [sp, #44]
    f130:	str	w0, [sp, #40]
    f134:	ldr	x0, [sp, #24]
    f138:	ldr	x0, [x0, #104]
    f13c:	add	x2, sp, #0x30
    f140:	add	x1, sp, #0x38
    f144:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
    f148:	and	w0, w0, #0xff
    f14c:	cmp	w0, #0x0
    f150:	b.ne	f0e0 <udev_util_encode_string@@LIBUDEV_183+0x38b0>  // b.any
    f154:	ldr	w0, [sp, #40]
    f158:	mov	w1, w0
    f15c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    f160:	ldr	x0, [x0, #4016]
    f164:	ldr	x2, [sp, #72]
    f168:	ldr	x0, [x0]
    f16c:	eor	x0, x2, x0
    f170:	cmp	x0, #0x0
    f174:	b.eq	f17c <udev_util_encode_string@@LIBUDEV_183+0x394c>  // b.none
    f178:	bl	5390 <__stack_chk_fail@plt>
    f17c:	mov	w0, w1
    f180:	ldp	x29, x30, [sp], #80
    f184:	ret
    f188:	stp	x29, x30, [sp, #-96]!
    f18c:	mov	x29, sp
    f190:	str	x0, [sp, #24]
    f194:	str	wzr, [sp, #40]
    f198:	mov	w0, #0x7                   	// #7
    f19c:	str	w0, [sp, #44]
    f1a0:	str	wzr, [sp, #48]
    f1a4:	str	wzr, [sp, #52]
    f1a8:	ldr	w0, [sp, #52]
    f1ac:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    f1b0:	mov	w1, w0
    f1b4:	ldr	w0, [sp, #44]
    f1b8:	and	w0, w0, #0x7
    f1bc:	cmp	w1, w0
    f1c0:	b.lt	f204 <udev_util_encode_string@@LIBUDEV_183+0x39d4>  // b.tstop
    f1c4:	ldr	w0, [sp, #52]
    f1c8:	lsl	w1, w0, #10
    f1cc:	ldr	w0, [sp, #44]
    f1d0:	orr	w6, w1, w0
    f1d4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f1d8:	add	x1, x0, #0x63
    f1dc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f1e0:	add	x5, x0, #0x358
    f1e4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f1e8:	add	x4, x0, #0x8a8
    f1ec:	mov	w3, #0x31e                 	// #798
    f1f0:	mov	x2, x1
    f1f4:	ldr	w1, [sp, #48]
    f1f8:	mov	w0, w6
    f1fc:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    f200:	b	f20c <udev_util_encode_string@@LIBUDEV_183+0x39dc>
    f204:	ldr	w0, [sp, #48]
    f208:	cmp	w0, #0x0
    f20c:	mov	w1, #0x0                   	// #0
    f210:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f214:	add	x0, x0, #0x380
    f218:	bl	53e0 <access@plt>
    f21c:	cmp	w0, #0x0
    f220:	b.lt	f2d8 <udev_util_encode_string@@LIBUDEV_183+0x3aa8>  // b.tstop
    f224:	mov	x3, #0x0                   	// #0
    f228:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f22c:	add	x2, x0, #0x390
    f230:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f234:	add	x1, x0, #0xb8
    f238:	ldr	x0, [sp, #24]
    f23c:	bl	e1e0 <udev_util_encode_string@@LIBUDEV_183+0x29b0>
    f240:	str	w0, [sp, #40]
    f244:	ldr	w0, [sp, #40]
    f248:	cmp	w0, #0x0
    f24c:	b.ge	f42c <udev_util_encode_string@@LIBUDEV_183+0x3bfc>  // b.tcont
    f250:	mov	w0, #0x7                   	// #7
    f254:	str	w0, [sp, #84]
    f258:	ldr	w0, [sp, #40]
    f25c:	str	w0, [sp, #88]
    f260:	str	wzr, [sp, #92]
    f264:	ldr	w0, [sp, #92]
    f268:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    f26c:	mov	w1, w0
    f270:	ldr	w0, [sp, #84]
    f274:	and	w0, w0, #0x7
    f278:	cmp	w1, w0
    f27c:	b.lt	f2c0 <udev_util_encode_string@@LIBUDEV_183+0x3a90>  // b.tstop
    f280:	ldr	w0, [sp, #92]
    f284:	lsl	w1, w0, #10
    f288:	ldr	w0, [sp, #84]
    f28c:	orr	w6, w1, w0
    f290:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f294:	add	x1, x0, #0x63
    f298:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f29c:	add	x5, x0, #0x398
    f2a0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f2a4:	add	x4, x0, #0x8a8
    f2a8:	mov	w3, #0x324                 	// #804
    f2ac:	mov	x2, x1
    f2b0:	ldr	w1, [sp, #88]
    f2b4:	mov	w0, w6
    f2b8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    f2bc:	b	f430 <udev_util_encode_string@@LIBUDEV_183+0x3c00>
    f2c0:	ldr	w0, [sp, #88]
    f2c4:	cmp	w0, #0x0
    f2c8:	cneg	w0, w0, lt  // lt = tstop
    f2cc:	and	w0, w0, #0xff
    f2d0:	neg	w0, w0
    f2d4:	b	f430 <udev_util_encode_string@@LIBUDEV_183+0x3c00>
    f2d8:	mov	x3, #0x0                   	// #0
    f2dc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f2e0:	add	x2, x0, #0x390
    f2e4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f2e8:	add	x1, x0, #0x3d0
    f2ec:	ldr	x0, [sp, #24]
    f2f0:	bl	e1e0 <udev_util_encode_string@@LIBUDEV_183+0x29b0>
    f2f4:	str	w0, [sp, #56]
    f2f8:	ldr	w0, [sp, #56]
    f2fc:	cmp	w0, #0x0
    f300:	b.ge	f384 <udev_util_encode_string@@LIBUDEV_183+0x3b54>  // b.tcont
    f304:	mov	w0, #0x7                   	// #7
    f308:	str	w0, [sp, #60]
    f30c:	ldr	w0, [sp, #56]
    f310:	str	w0, [sp, #64]
    f314:	str	wzr, [sp, #68]
    f318:	ldr	w0, [sp, #68]
    f31c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    f320:	mov	w1, w0
    f324:	ldr	w0, [sp, #60]
    f328:	and	w0, w0, #0x7
    f32c:	cmp	w1, w0
    f330:	b.lt	f374 <udev_util_encode_string@@LIBUDEV_183+0x3b44>  // b.tstop
    f334:	ldr	w0, [sp, #68]
    f338:	lsl	w1, w0, #10
    f33c:	ldr	w0, [sp, #60]
    f340:	orr	w6, w1, w0
    f344:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f348:	add	x1, x0, #0x63
    f34c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f350:	add	x5, x0, #0x3d8
    f354:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f358:	add	x4, x0, #0x8a8
    f35c:	mov	w3, #0x32a                 	// #810
    f360:	mov	x2, x1
    f364:	ldr	w1, [sp, #64]
    f368:	mov	w0, w6
    f36c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    f370:	b	f37c <udev_util_encode_string@@LIBUDEV_183+0x3b4c>
    f374:	ldr	w0, [sp, #64]
    f378:	cmp	w0, #0x0
    f37c:	ldr	w0, [sp, #56]
    f380:	str	w0, [sp, #40]
    f384:	mov	x3, #0x0                   	// #0
    f388:	mov	x2, #0x0                   	// #0
    f38c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f390:	add	x1, x0, #0x410
    f394:	ldr	x0, [sp, #24]
    f398:	bl	e1e0 <udev_util_encode_string@@LIBUDEV_183+0x29b0>
    f39c:	str	w0, [sp, #56]
    f3a0:	ldr	w0, [sp, #56]
    f3a4:	cmp	w0, #0x0
    f3a8:	b.ge	f42c <udev_util_encode_string@@LIBUDEV_183+0x3bfc>  // b.tcont
    f3ac:	mov	w0, #0x7                   	// #7
    f3b0:	str	w0, [sp, #72]
    f3b4:	ldr	w0, [sp, #56]
    f3b8:	str	w0, [sp, #76]
    f3bc:	str	wzr, [sp, #80]
    f3c0:	ldr	w0, [sp, #80]
    f3c4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    f3c8:	mov	w1, w0
    f3cc:	ldr	w0, [sp, #72]
    f3d0:	and	w0, w0, #0x7
    f3d4:	cmp	w1, w0
    f3d8:	b.lt	f41c <udev_util_encode_string@@LIBUDEV_183+0x3bec>  // b.tstop
    f3dc:	ldr	w0, [sp, #80]
    f3e0:	lsl	w1, w0, #10
    f3e4:	ldr	w0, [sp, #72]
    f3e8:	orr	w6, w1, w0
    f3ec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f3f0:	add	x1, x0, #0x63
    f3f4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f3f8:	add	x5, x0, #0x418
    f3fc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f400:	add	x4, x0, #0x8a8
    f404:	mov	w3, #0x330                 	// #816
    f408:	mov	x2, x1
    f40c:	ldr	w1, [sp, #76]
    f410:	mov	w0, w6
    f414:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    f418:	b	f424 <udev_util_encode_string@@LIBUDEV_183+0x3bf4>
    f41c:	ldr	w0, [sp, #76]
    f420:	cmp	w0, #0x0
    f424:	ldr	w0, [sp, #56]
    f428:	str	w0, [sp, #40]
    f42c:	ldr	w0, [sp, #40]
    f430:	ldp	x29, x30, [sp], #96
    f434:	ret
    f438:	stp	x29, x30, [sp, #-80]!
    f43c:	mov	x29, sp
    f440:	str	x0, [sp, #24]
    f444:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    f448:	ldr	x0, [x0, #4016]
    f44c:	ldr	x1, [x0]
    f450:	str	x1, [sp, #72]
    f454:	mov	x1, #0x0                   	// #0
    f458:	ldr	x0, [sp, #24]
    f45c:	cmp	x0, #0x0
    f460:	cset	w0, eq  // eq = none
    f464:	and	w0, w0, #0xff
    f468:	and	x0, x0, #0xff
    f46c:	cmp	x0, #0x0
    f470:	b.eq	f49c <udev_util_encode_string@@LIBUDEV_183+0x3c6c>  // b.none
    f474:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f478:	add	x1, x0, #0x63
    f47c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f480:	add	x4, x0, #0x8c8
    f484:	mov	w3, #0x33b                 	// #827
    f488:	mov	x2, x1
    f48c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f490:	add	x1, x0, #0x98
    f494:	mov	w0, #0x0                   	// #0
    f498:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    f49c:	ldr	x0, [sp, #24]
    f4a0:	ldr	x0, [x0, #16]
    f4a4:	cmp	x0, #0x1
    f4a8:	b.ls	f608 <udev_util_encode_string@@LIBUDEV_183+0x3dd8>  // b.plast
    f4ac:	ldr	x0, [sp, #24]
    f4b0:	ldr	x0, [x0, #8]
    f4b4:	add	x0, x0, #0x8
    f4b8:	str	x0, [sp, #48]
    f4bc:	ldr	x0, [sp, #24]
    f4c0:	ldr	x0, [x0, #8]
    f4c4:	str	x0, [sp, #56]
    f4c8:	ldr	x0, [sp, #24]
    f4cc:	ldr	x1, [x0, #8]
    f4d0:	ldr	x0, [sp, #24]
    f4d4:	ldr	x0, [x0, #16]
    f4d8:	lsl	x0, x0, #3
    f4dc:	add	x0, x1, x0
    f4e0:	str	x0, [sp, #64]
    f4e4:	b	f5d0 <udev_util_encode_string@@LIBUDEV_183+0x3da0>
    f4e8:	ldr	x0, [sp, #48]
    f4ec:	ldr	x0, [x0]
    f4f0:	add	x1, sp, #0x20
    f4f4:	bl	1ac70 <udev_util_encode_string@@LIBUDEV_183+0xf440>
    f4f8:	lsr	w0, w0, #31
    f4fc:	and	w0, w0, #0xff
    f500:	and	x0, x0, #0xff
    f504:	cmp	x0, #0x0
    f508:	b.eq	f534 <udev_util_encode_string@@LIBUDEV_183+0x3d04>  // b.none
    f50c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f510:	add	x1, x0, #0x63
    f514:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f518:	add	x4, x0, #0x8c8
    f51c:	mov	w3, #0x347                 	// #839
    f520:	mov	x2, x1
    f524:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f528:	add	x1, x0, #0x450
    f52c:	mov	w0, #0x0                   	// #0
    f530:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    f534:	ldr	x0, [sp, #56]
    f538:	ldr	x0, [x0]
    f53c:	add	x1, sp, #0x28
    f540:	bl	1ac70 <udev_util_encode_string@@LIBUDEV_183+0xf440>
    f544:	lsr	w0, w0, #31
    f548:	and	w0, w0, #0xff
    f54c:	and	x0, x0, #0xff
    f550:	cmp	x0, #0x0
    f554:	b.eq	f580 <udev_util_encode_string@@LIBUDEV_183+0x3d50>  // b.none
    f558:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f55c:	add	x1, x0, #0x63
    f560:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f564:	add	x4, x0, #0x8c8
    f568:	mov	w3, #0x348                 	// #840
    f56c:	mov	x2, x1
    f570:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f574:	add	x1, x0, #0x480
    f578:	mov	w0, #0x0                   	// #0
    f57c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    f580:	ldr	x0, [sp, #32]
    f584:	ldr	x1, [sp, #40]
    f588:	bl	31558 <udev_util_encode_string@@LIBUDEV_183+0x25d28>
    f58c:	and	w0, w0, #0xff
    f590:	cmp	w0, #0x0
    f594:	b.eq	f5a8 <udev_util_encode_string@@LIBUDEV_183+0x3d78>  // b.none
    f598:	ldr	x0, [sp, #48]
    f59c:	ldr	x0, [x0]
    f5a0:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    f5a4:	b	f5c4 <udev_util_encode_string@@LIBUDEV_183+0x3d94>
    f5a8:	ldr	x0, [sp, #56]
    f5ac:	add	x0, x0, #0x8
    f5b0:	str	x0, [sp, #56]
    f5b4:	ldr	x0, [sp, #48]
    f5b8:	ldr	x1, [x0]
    f5bc:	ldr	x0, [sp, #56]
    f5c0:	str	x1, [x0]
    f5c4:	ldr	x0, [sp, #48]
    f5c8:	add	x0, x0, #0x8
    f5cc:	str	x0, [sp, #48]
    f5d0:	ldr	x1, [sp, #48]
    f5d4:	ldr	x0, [sp, #64]
    f5d8:	cmp	x1, x0
    f5dc:	b.cc	f4e8 <udev_util_encode_string@@LIBUDEV_183+0x3cb8>  // b.lo, b.ul, b.last
    f5e0:	ldr	x0, [sp, #24]
    f5e4:	ldr	x0, [x0, #8]
    f5e8:	ldr	x1, [sp, #56]
    f5ec:	sub	x0, x1, x0
    f5f0:	asr	x0, x0, #3
    f5f4:	add	x0, x0, #0x1
    f5f8:	mov	x1, x0
    f5fc:	ldr	x0, [sp, #24]
    f600:	str	x1, [x0, #16]
    f604:	b	f60c <udev_util_encode_string@@LIBUDEV_183+0x3ddc>
    f608:	nop
    f60c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    f610:	ldr	x0, [x0, #4016]
    f614:	ldr	x1, [sp, #72]
    f618:	ldr	x0, [x0]
    f61c:	eor	x0, x1, x0
    f620:	cmp	x0, #0x0
    f624:	b.eq	f62c <udev_util_encode_string@@LIBUDEV_183+0x3dfc>  // b.none
    f628:	bl	5390 <__stack_chk_fail@plt>
    f62c:	ldp	x29, x30, [sp], #80
    f630:	ret
    f634:	stp	x29, x30, [sp, #-64]!
    f638:	mov	x29, sp
    f63c:	str	x0, [sp, #24]
    f640:	str	wzr, [sp, #40]
    f644:	ldr	x0, [sp, #24]
    f648:	cmp	x0, #0x0
    f64c:	cset	w0, eq  // eq = none
    f650:	and	w0, w0, #0xff
    f654:	and	x0, x0, #0xff
    f658:	cmp	x0, #0x0
    f65c:	b.eq	f688 <udev_util_encode_string@@LIBUDEV_183+0x3e58>  // b.none
    f660:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f664:	add	x1, x0, #0x63
    f668:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f66c:	add	x4, x0, #0x8e8
    f670:	mov	w3, #0x357                 	// #855
    f674:	mov	x2, x1
    f678:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f67c:	add	x1, x0, #0x98
    f680:	mov	w0, #0x0                   	// #0
    f684:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    f688:	ldr	x0, [sp, #24]
    f68c:	ldrb	w0, [x0, #40]
    f690:	cmp	w0, #0x0
    f694:	b.eq	f6b0 <udev_util_encode_string@@LIBUDEV_183+0x3e80>  // b.none
    f698:	ldr	x0, [sp, #24]
    f69c:	ldr	w0, [x0, #4]
    f6a0:	cmp	w0, #0x0
    f6a4:	b.ne	f6b0 <udev_util_encode_string@@LIBUDEV_183+0x3e80>  // b.any
    f6a8:	mov	w0, #0x0                   	// #0
    f6ac:	b	f7e4 <udev_util_encode_string@@LIBUDEV_183+0x3fb4>
    f6b0:	str	xzr, [sp, #48]
    f6b4:	b	f6e0 <udev_util_encode_string@@LIBUDEV_183+0x3eb0>
    f6b8:	ldr	x0, [sp, #24]
    f6bc:	ldr	x1, [x0, #8]
    f6c0:	ldr	x0, [sp, #48]
    f6c4:	lsl	x0, x0, #3
    f6c8:	add	x0, x1, x0
    f6cc:	ldr	x0, [x0]
    f6d0:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    f6d4:	ldr	x0, [sp, #48]
    f6d8:	add	x0, x0, #0x1
    f6dc:	str	x0, [sp, #48]
    f6e0:	ldr	x0, [sp, #24]
    f6e4:	ldr	x0, [x0, #16]
    f6e8:	ldr	x1, [sp, #48]
    f6ec:	cmp	x1, x0
    f6f0:	b.cc	f6b8 <udev_util_encode_string@@LIBUDEV_183+0x3e88>  // b.lo, b.ul, b.last
    f6f4:	ldr	x0, [sp, #24]
    f6f8:	str	xzr, [x0, #16]
    f6fc:	ldr	x0, [sp, #24]
    f700:	ldr	x0, [x0, #96]
    f704:	bl	bb48 <udev_util_encode_string@@LIBUDEV_183+0x318>
    f708:	and	w0, w0, #0xff
    f70c:	eor	w0, w0, #0x1
    f710:	and	w0, w0, #0xff
    f714:	cmp	w0, #0x0
    f718:	b.eq	f740 <udev_util_encode_string@@LIBUDEV_183+0x3f10>  // b.none
    f71c:	ldr	x0, [sp, #24]
    f720:	bl	eb14 <udev_util_encode_string@@LIBUDEV_183+0x32e4>
    f724:	str	w0, [sp, #44]
    f728:	ldr	w0, [sp, #44]
    f72c:	cmp	w0, #0x0
    f730:	b.ge	f794 <udev_util_encode_string@@LIBUDEV_183+0x3f64>  // b.tcont
    f734:	ldr	w0, [sp, #44]
    f738:	str	w0, [sp, #40]
    f73c:	b	f794 <udev_util_encode_string@@LIBUDEV_183+0x3f64>
    f740:	ldr	x0, [sp, #24]
    f744:	ldr	x0, [x0, #104]
    f748:	cmp	x0, #0x0
    f74c:	b.eq	f774 <udev_util_encode_string@@LIBUDEV_183+0x3f44>  // b.none
    f750:	ldr	x0, [sp, #24]
    f754:	bl	f0ac <udev_util_encode_string@@LIBUDEV_183+0x387c>
    f758:	str	w0, [sp, #44]
    f75c:	ldr	w0, [sp, #44]
    f760:	cmp	w0, #0x0
    f764:	b.ge	f794 <udev_util_encode_string@@LIBUDEV_183+0x3f64>  // b.tcont
    f768:	ldr	w0, [sp, #44]
    f76c:	str	w0, [sp, #40]
    f770:	b	f794 <udev_util_encode_string@@LIBUDEV_183+0x3f64>
    f774:	ldr	x0, [sp, #24]
    f778:	bl	f188 <udev_util_encode_string@@LIBUDEV_183+0x3958>
    f77c:	str	w0, [sp, #44]
    f780:	ldr	w0, [sp, #44]
    f784:	cmp	w0, #0x0
    f788:	b.ge	f794 <udev_util_encode_string@@LIBUDEV_183+0x3f64>  // b.tcont
    f78c:	ldr	w0, [sp, #44]
    f790:	str	w0, [sp, #40]
    f794:	adrp	x0, c000 <udev_util_encode_string@@LIBUDEV_183+0x7d0>
    f798:	add	x0, x0, #0x9c8
    f79c:	str	x0, [sp, #56]
    f7a0:	ldr	x0, [sp, #24]
    f7a4:	ldr	x4, [x0, #8]
    f7a8:	ldr	x0, [sp, #24]
    f7ac:	ldr	x0, [x0, #16]
    f7b0:	ldr	x3, [sp, #56]
    f7b4:	mov	x2, #0x8                   	// #8
    f7b8:	mov	x1, x0
    f7bc:	mov	x0, x4
    f7c0:	bl	bb9c <udev_util_encode_string@@LIBUDEV_183+0x36c>
    f7c4:	ldr	x0, [sp, #24]
    f7c8:	bl	f438 <udev_util_encode_string@@LIBUDEV_183+0x3c08>
    f7cc:	ldr	x0, [sp, #24]
    f7d0:	mov	w1, #0x1                   	// #1
    f7d4:	strb	w1, [x0, #40]
    f7d8:	ldr	x0, [sp, #24]
    f7dc:	str	wzr, [x0, #4]
    f7e0:	ldr	w0, [sp, #40]
    f7e4:	ldp	x29, x30, [sp], #64
    f7e8:	ret
    f7ec:	stp	x29, x30, [sp, #-112]!
    f7f0:	mov	x29, sp
    f7f4:	str	x0, [sp, #24]
    f7f8:	str	wzr, [sp, #44]
    f7fc:	ldr	x0, [sp, #24]
    f800:	cmp	x0, #0x0
    f804:	cset	w0, eq  // eq = none
    f808:	and	w0, w0, #0xff
    f80c:	and	x0, x0, #0xff
    f810:	cmp	x0, #0x0
    f814:	b.eq	f840 <udev_util_encode_string@@LIBUDEV_183+0x4010>  // b.none
    f818:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f81c:	add	x1, x0, #0x63
    f820:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f824:	add	x4, x0, #0x918
    f828:	mov	w3, #0x39a                 	// #922
    f82c:	mov	x2, x1
    f830:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f834:	add	x1, x0, #0x98
    f838:	mov	w0, #0x0                   	// #0
    f83c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
    f840:	ldr	x0, [sp, #24]
    f844:	ldrb	w0, [x0, #40]
    f848:	cmp	w0, #0x0
    f84c:	b.eq	f868 <udev_util_encode_string@@LIBUDEV_183+0x4038>  // b.none
    f850:	ldr	x0, [sp, #24]
    f854:	ldr	w0, [x0, #4]
    f858:	cmp	w0, #0x1
    f85c:	b.ne	f868 <udev_util_encode_string@@LIBUDEV_183+0x4038>  // b.any
    f860:	mov	w0, #0x0                   	// #0
    f864:	b	fb88 <udev_util_encode_string@@LIBUDEV_183+0x4358>
    f868:	str	xzr, [sp, #96]
    f86c:	b	f898 <udev_util_encode_string@@LIBUDEV_183+0x4068>
    f870:	ldr	x0, [sp, #24]
    f874:	ldr	x1, [x0, #8]
    f878:	ldr	x0, [sp, #96]
    f87c:	lsl	x0, x0, #3
    f880:	add	x0, x1, x0
    f884:	ldr	x0, [x0]
    f888:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    f88c:	ldr	x0, [sp, #96]
    f890:	add	x0, x0, #0x1
    f894:	str	x0, [sp, #96]
    f898:	ldr	x0, [sp, #24]
    f89c:	ldr	x0, [x0, #16]
    f8a0:	ldr	x1, [sp, #96]
    f8a4:	cmp	x1, x0
    f8a8:	b.cc	f870 <udev_util_encode_string@@LIBUDEV_183+0x4040>  // b.lo, b.ul, b.last
    f8ac:	ldr	x0, [sp, #24]
    f8b0:	str	xzr, [x0, #16]
    f8b4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f8b8:	add	x1, x0, #0x4b0
    f8bc:	ldr	x0, [sp, #24]
    f8c0:	bl	e070 <udev_util_encode_string@@LIBUDEV_183+0x2840>
    f8c4:	and	w0, w0, #0xff
    f8c8:	cmp	w0, #0x0
    f8cc:	b.eq	f978 <udev_util_encode_string@@LIBUDEV_183+0x4148>  // b.none
    f8d0:	mov	x3, #0x0                   	// #0
    f8d4:	mov	x2, #0x0                   	// #0
    f8d8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f8dc:	add	x1, x0, #0x4b0
    f8e0:	ldr	x0, [sp, #24]
    f8e4:	bl	d708 <udev_util_encode_string@@LIBUDEV_183+0x1ed8>
    f8e8:	str	w0, [sp, #48]
    f8ec:	ldr	w0, [sp, #48]
    f8f0:	cmp	w0, #0x0
    f8f4:	b.ge	f978 <udev_util_encode_string@@LIBUDEV_183+0x4148>  // b.tcont
    f8f8:	mov	w0, #0x7                   	// #7
    f8fc:	str	w0, [sp, #52]
    f900:	ldr	w0, [sp, #48]
    f904:	str	w0, [sp, #56]
    f908:	str	wzr, [sp, #60]
    f90c:	ldr	w0, [sp, #60]
    f910:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    f914:	mov	w1, w0
    f918:	ldr	w0, [sp, #52]
    f91c:	and	w0, w0, #0x7
    f920:	cmp	w1, w0
    f924:	b.lt	f968 <udev_util_encode_string@@LIBUDEV_183+0x4138>  // b.tstop
    f928:	ldr	w0, [sp, #60]
    f92c:	lsl	w1, w0, #10
    f930:	ldr	w0, [sp, #52]
    f934:	orr	w6, w1, w0
    f938:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f93c:	add	x1, x0, #0x63
    f940:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f944:	add	x5, x0, #0x4b8
    f948:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f94c:	add	x4, x0, #0x940
    f950:	mov	w3, #0x3a9                 	// #937
    f954:	mov	x2, x1
    f958:	ldr	w1, [sp, #56]
    f95c:	mov	w0, w6
    f960:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    f964:	b	f970 <udev_util_encode_string@@LIBUDEV_183+0x4140>
    f968:	ldr	w0, [sp, #56]
    f96c:	cmp	w0, #0x0
    f970:	ldr	w0, [sp, #48]
    f974:	str	w0, [sp, #44]
    f978:	mov	w1, #0x0                   	// #0
    f97c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f980:	add	x0, x0, #0x380
    f984:	bl	53e0 <access@plt>
    f988:	cmp	w0, #0x0
    f98c:	b.lt	f9a0 <udev_util_encode_string@@LIBUDEV_183+0x4170>  // b.tstop
    f990:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f994:	add	x0, x0, #0xb8
    f998:	str	x0, [sp, #88]
    f99c:	b	f9ac <udev_util_encode_string@@LIBUDEV_183+0x417c>
    f9a0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f9a4:	add	x0, x0, #0x3d0
    f9a8:	str	x0, [sp, #88]
    f9ac:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    f9b0:	add	x1, x0, #0xb8
    f9b4:	ldr	x0, [sp, #24]
    f9b8:	bl	e070 <udev_util_encode_string@@LIBUDEV_183+0x2840>
    f9bc:	and	w0, w0, #0xff
    f9c0:	cmp	w0, #0x0
    f9c4:	b.eq	fa6c <udev_util_encode_string@@LIBUDEV_183+0x423c>  // b.none
    f9c8:	mov	x3, #0x0                   	// #0
    f9cc:	mov	x2, #0x0                   	// #0
    f9d0:	ldr	x1, [sp, #88]
    f9d4:	ldr	x0, [sp, #24]
    f9d8:	bl	d708 <udev_util_encode_string@@LIBUDEV_183+0x1ed8>
    f9dc:	str	w0, [sp, #48]
    f9e0:	ldr	w0, [sp, #48]
    f9e4:	cmp	w0, #0x0
    f9e8:	b.ge	fa6c <udev_util_encode_string@@LIBUDEV_183+0x423c>  // b.tcont
    f9ec:	mov	w0, #0x7                   	// #7
    f9f0:	str	w0, [sp, #64]
    f9f4:	ldr	w0, [sp, #48]
    f9f8:	str	w0, [sp, #68]
    f9fc:	str	wzr, [sp, #72]
    fa00:	ldr	w0, [sp, #72]
    fa04:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    fa08:	mov	w1, w0
    fa0c:	ldr	w0, [sp, #64]
    fa10:	and	w0, w0, #0x7
    fa14:	cmp	w1, w0
    fa18:	b.lt	fa5c <udev_util_encode_string@@LIBUDEV_183+0x422c>  // b.tstop
    fa1c:	ldr	w0, [sp, #72]
    fa20:	lsl	w1, w0, #10
    fa24:	ldr	w0, [sp, #64]
    fa28:	orr	w6, w1, w0
    fa2c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fa30:	add	x1, x0, #0x63
    fa34:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fa38:	add	x5, x0, #0x4f0
    fa3c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fa40:	add	x4, x0, #0x940
    fa44:	mov	w3, #0x3b7                 	// #951
    fa48:	mov	x2, x1
    fa4c:	ldr	w1, [sp, #68]
    fa50:	mov	w0, w6
    fa54:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    fa58:	b	fa64 <udev_util_encode_string@@LIBUDEV_183+0x4234>
    fa5c:	ldr	w0, [sp, #68]
    fa60:	cmp	w0, #0x0
    fa64:	ldr	w0, [sp, #48]
    fa68:	str	w0, [sp, #44]
    fa6c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fa70:	add	x1, x0, #0x528
    fa74:	ldr	x0, [sp, #24]
    fa78:	bl	e070 <udev_util_encode_string@@LIBUDEV_183+0x2840>
    fa7c:	and	w0, w0, #0xff
    fa80:	cmp	w0, #0x0
    fa84:	b.eq	fb34 <udev_util_encode_string@@LIBUDEV_183+0x4304>  // b.none
    fa88:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fa8c:	add	x3, x0, #0x528
    fa90:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fa94:	add	x2, x0, #0x528
    fa98:	ldr	x1, [sp, #88]
    fa9c:	ldr	x0, [sp, #24]
    faa0:	bl	e1e0 <udev_util_encode_string@@LIBUDEV_183+0x29b0>
    faa4:	str	w0, [sp, #48]
    faa8:	ldr	w0, [sp, #48]
    faac:	cmp	w0, #0x0
    fab0:	b.ge	fb34 <udev_util_encode_string@@LIBUDEV_183+0x4304>  // b.tcont
    fab4:	mov	w0, #0x7                   	// #7
    fab8:	str	w0, [sp, #76]
    fabc:	ldr	w0, [sp, #48]
    fac0:	str	w0, [sp, #80]
    fac4:	str	wzr, [sp, #84]
    fac8:	ldr	w0, [sp, #84]
    facc:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
    fad0:	mov	w1, w0
    fad4:	ldr	w0, [sp, #76]
    fad8:	and	w0, w0, #0x7
    fadc:	cmp	w1, w0
    fae0:	b.lt	fb24 <udev_util_encode_string@@LIBUDEV_183+0x42f4>  // b.tstop
    fae4:	ldr	w0, [sp, #84]
    fae8:	lsl	w1, w0, #10
    faec:	ldr	w0, [sp, #76]
    faf0:	orr	w6, w1, w0
    faf4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    faf8:	add	x1, x0, #0x63
    fafc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fb00:	add	x5, x0, #0x530
    fb04:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fb08:	add	x4, x0, #0x940
    fb0c:	mov	w3, #0x3c0                 	// #960
    fb10:	mov	x2, x1
    fb14:	ldr	w1, [sp, #80]
    fb18:	mov	w0, w6
    fb1c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
    fb20:	b	fb2c <udev_util_encode_string@@LIBUDEV_183+0x42fc>
    fb24:	ldr	w0, [sp, #80]
    fb28:	cmp	w0, #0x0
    fb2c:	ldr	w0, [sp, #48]
    fb30:	str	w0, [sp, #44]
    fb34:	adrp	x0, c000 <udev_util_encode_string@@LIBUDEV_183+0x7d0>
    fb38:	add	x0, x0, #0x9c8
    fb3c:	str	x0, [sp, #104]
    fb40:	ldr	x0, [sp, #24]
    fb44:	ldr	x4, [x0, #8]
    fb48:	ldr	x0, [sp, #24]
    fb4c:	ldr	x0, [x0, #16]
    fb50:	ldr	x3, [sp, #104]
    fb54:	mov	x2, #0x8                   	// #8
    fb58:	mov	x1, x0
    fb5c:	mov	x0, x4
    fb60:	bl	bb9c <udev_util_encode_string@@LIBUDEV_183+0x36c>
    fb64:	ldr	x0, [sp, #24]
    fb68:	bl	f438 <udev_util_encode_string@@LIBUDEV_183+0x3c08>
    fb6c:	ldr	x0, [sp, #24]
    fb70:	mov	w1, #0x1                   	// #1
    fb74:	strb	w1, [x0, #40]
    fb78:	ldr	x0, [sp, #24]
    fb7c:	mov	w1, #0x1                   	// #1
    fb80:	str	w1, [x0, #4]
    fb84:	ldr	w0, [sp, #44]
    fb88:	ldp	x29, x30, [sp], #112
    fb8c:	ret
    fb90:	stp	x29, x30, [sp, #-32]!
    fb94:	mov	x29, sp
    fb98:	str	x0, [sp, #24]
    fb9c:	ldr	x0, [sp, #24]
    fba0:	cmp	x0, #0x0
    fba4:	cset	w0, ne  // ne = any
    fba8:	and	w0, w0, #0xff
    fbac:	and	x0, x0, #0xff
    fbb0:	cmp	x0, #0x0
    fbb4:	b.ne	fbe8 <udev_util_encode_string@@LIBUDEV_183+0x43b8>  // b.any
    fbb8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fbbc:	add	x1, x0, #0x63
    fbc0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fbc4:	add	x4, x0, #0x968
    fbc8:	mov	w3, #0x3eb                 	// #1003
    fbcc:	mov	x2, x1
    fbd0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fbd4:	add	x1, x0, #0x98
    fbd8:	mov	w0, #0x0                   	// #0
    fbdc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    fbe0:	mov	w0, #0x1                   	// #1
    fbe4:	b	fbec <udev_util_encode_string@@LIBUDEV_183+0x43bc>
    fbe8:	mov	w0, #0x0                   	// #0
    fbec:	cmp	w0, #0x0
    fbf0:	b.eq	fbfc <udev_util_encode_string@@LIBUDEV_183+0x43cc>  // b.none
    fbf4:	mov	x0, #0x0                   	// #0
    fbf8:	b	fc48 <udev_util_encode_string@@LIBUDEV_183+0x4418>
    fbfc:	ldr	x0, [sp, #24]
    fc00:	ldrb	w0, [x0, #40]
    fc04:	eor	w0, w0, #0x1
    fc08:	and	w0, w0, #0xff
    fc0c:	cmp	w0, #0x0
    fc10:	b.eq	fc1c <udev_util_encode_string@@LIBUDEV_183+0x43ec>  // b.none
    fc14:	mov	x0, #0x0                   	// #0
    fc18:	b	fc48 <udev_util_encode_string@@LIBUDEV_183+0x4418>
    fc1c:	ldr	x0, [sp, #24]
    fc20:	str	xzr, [x0, #32]
    fc24:	ldr	x0, [sp, #24]
    fc28:	ldr	x0, [x0, #16]
    fc2c:	cmp	x0, #0x0
    fc30:	b.ne	fc3c <udev_util_encode_string@@LIBUDEV_183+0x440c>  // b.any
    fc34:	mov	x0, #0x0                   	// #0
    fc38:	b	fc48 <udev_util_encode_string@@LIBUDEV_183+0x4418>
    fc3c:	ldr	x0, [sp, #24]
    fc40:	ldr	x0, [x0, #8]
    fc44:	ldr	x0, [x0]
    fc48:	ldp	x29, x30, [sp], #32
    fc4c:	ret
    fc50:	stp	x29, x30, [sp, #-32]!
    fc54:	mov	x29, sp
    fc58:	str	x0, [sp, #24]
    fc5c:	ldr	x0, [sp, #24]
    fc60:	cmp	x0, #0x0
    fc64:	cset	w0, ne  // ne = any
    fc68:	and	w0, w0, #0xff
    fc6c:	and	x0, x0, #0xff
    fc70:	cmp	x0, #0x0
    fc74:	b.ne	fca8 <udev_util_encode_string@@LIBUDEV_183+0x4478>  // b.any
    fc78:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fc7c:	add	x1, x0, #0x63
    fc80:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fc84:	add	x4, x0, #0x988
    fc88:	mov	w3, #0x3f9                 	// #1017
    fc8c:	mov	x2, x1
    fc90:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
    fc94:	add	x1, x0, #0x98
    fc98:	mov	w0, #0x0                   	// #0
    fc9c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
    fca0:	mov	w0, #0x1                   	// #1
    fca4:	b	fcac <udev_util_encode_string@@LIBUDEV_183+0x447c>
    fca8:	mov	w0, #0x0                   	// #0
    fcac:	cmp	w0, #0x0
    fcb0:	b.eq	fcbc <udev_util_encode_string@@LIBUDEV_183+0x448c>  // b.none
    fcb4:	mov	x0, #0x0                   	// #0
    fcb8:	b	fd28 <udev_util_encode_string@@LIBUDEV_183+0x44f8>
    fcbc:	ldr	x0, [sp, #24]
    fcc0:	ldrb	w0, [x0, #40]
    fcc4:	eor	w0, w0, #0x1
    fcc8:	and	w0, w0, #0xff
    fccc:	cmp	w0, #0x0
    fcd0:	b.ne	fcf0 <udev_util_encode_string@@LIBUDEV_183+0x44c0>  // b.any
    fcd4:	ldr	x0, [sp, #24]
    fcd8:	ldr	x0, [x0, #32]
    fcdc:	add	x1, x0, #0x1
    fce0:	ldr	x0, [sp, #24]
    fce4:	ldr	x0, [x0, #16]
    fce8:	cmp	x1, x0
    fcec:	b.cc	fcf8 <udev_util_encode_string@@LIBUDEV_183+0x44c8>  // b.lo, b.ul, b.last
    fcf0:	mov	x0, #0x0                   	// #0
    fcf4:	b	fd28 <udev_util_encode_string@@LIBUDEV_183+0x44f8>
    fcf8:	ldr	x0, [sp, #24]
    fcfc:	ldr	x1, [x0, #8]
    fd00:	ldr	x0, [sp, #24]
    fd04:	ldr	x0, [x0, #32]
    fd08:	add	x2, x0, #0x1
    fd0c:	ldr	x0, [sp, #24]
    fd10:	str	x2, [x0, #32]
    fd14:	ldr	x0, [sp, #24]
    fd18:	ldr	x0, [x0, #32]
    fd1c:	lsl	x0, x0, #3
    fd20:	add	x0, x1, x0
    fd24:	ldr	x0, [x0]
    fd28:	ldp	x29, x30, [sp], #32
    fd2c:	ret
    fd30:	sub	sp, sp, #0x10
    fd34:	str	w0, [sp, #12]
    fd38:	ldr	w0, [sp, #12]
    fd3c:	rev	w0, w0
    fd40:	add	sp, sp, #0x10
    fd44:	ret
    fd48:	stp	x29, x30, [sp, #-32]!
    fd4c:	mov	x29, sp
    fd50:	str	x0, [sp, #24]
    fd54:	ldr	x0, [sp, #24]
    fd58:	ldr	x0, [x0]
    fd5c:	cmp	x0, #0x0
    fd60:	b.eq	fd70 <udev_util_encode_string@@LIBUDEV_183+0x4540>  // b.none
    fd64:	ldr	x0, [sp, #24]
    fd68:	ldr	x0, [x0]
    fd6c:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
    fd70:	nop
    fd74:	ldp	x29, x30, [sp], #32
    fd78:	ret
    fd7c:	stp	x29, x30, [sp, #-32]!
    fd80:	mov	x29, sp
    fd84:	str	x0, [sp, #24]
    fd88:	ldr	x0, [sp, #24]
    fd8c:	ldr	x0, [x0]
    fd90:	cmp	x0, #0x0
    fd94:	b.eq	fda4 <udev_util_encode_string@@LIBUDEV_183+0x4574>  // b.none
    fd98:	ldr	x0, [sp, #24]
    fd9c:	ldr	x0, [x0]
    fda0:	bl	10c9c <udev_util_encode_string@@LIBUDEV_183+0x546c>
    fda4:	nop
    fda8:	ldp	x29, x30, [sp], #32
    fdac:	ret
    fdb0:	stp	x29, x30, [sp, #-32]!
    fdb4:	mov	x29, sp
    fdb8:	str	x0, [sp, #24]
    fdbc:	ldr	x0, [sp, #24]
    fdc0:	bl	54b0 <free@plt>
    fdc4:	mov	x0, #0x0                   	// #0
    fdc8:	ldp	x29, x30, [sp], #32
    fdcc:	ret
    fdd0:	stp	x29, x30, [sp, #-32]!
    fdd4:	mov	x29, sp
    fdd8:	str	x0, [sp, #24]
    fddc:	ldr	x0, [sp, #24]
    fde0:	ldr	x0, [x0]
    fde4:	bl	54b0 <free@plt>
    fde8:	nop
    fdec:	ldp	x29, x30, [sp], #32
    fdf0:	ret
    fdf4:	sub	sp, sp, #0x10
    fdf8:	str	x0, [sp, #8]
    fdfc:	str	x1, [sp]
    fe00:	ldr	x0, [sp]
    fe04:	cmp	x0, #0x0
    fe08:	cset	w0, ne  // ne = any
    fe0c:	and	w0, w0, #0xff
    fe10:	and	x0, x0, #0xff
    fe14:	cmp	x0, #0x0
    fe18:	b.eq	fe5c <udev_util_encode_string@@LIBUDEV_183+0x462c>  // b.none
    fe1c:	mov	x2, #0x0                   	// #0
    fe20:	ldr	x1, [sp, #8]
    fe24:	ldr	x0, [sp]
    fe28:	umulh	x0, x1, x0
    fe2c:	cmp	x0, #0x0
    fe30:	b.eq	fe38 <udev_util_encode_string@@LIBUDEV_183+0x4608>  // b.none
    fe34:	mov	x2, #0x1                   	// #1
    fe38:	mov	x0, x2
    fe3c:	cmp	x0, #0x0
    fe40:	cset	w0, ne  // ne = any
    fe44:	and	w0, w0, #0xff
    fe48:	and	x0, x0, #0xff
    fe4c:	cmp	x0, #0x0
    fe50:	b.eq	fe5c <udev_util_encode_string@@LIBUDEV_183+0x462c>  // b.none
    fe54:	mov	w0, #0x1                   	// #1
    fe58:	b	fe60 <udev_util_encode_string@@LIBUDEV_183+0x4630>
    fe5c:	mov	w0, #0x0                   	// #0
    fe60:	and	w0, w0, #0x1
    fe64:	and	w0, w0, #0xff
    fe68:	add	sp, sp, #0x10
    fe6c:	ret
    fe70:	stp	x29, x30, [sp, #-32]!
    fe74:	mov	x29, sp
    fe78:	str	x0, [sp, #24]
    fe7c:	str	x1, [sp, #16]
    fe80:	ldr	x1, [sp, #16]
    fe84:	ldr	x0, [sp, #24]
    fe88:	bl	fdf4 <udev_util_encode_string@@LIBUDEV_183+0x45c4>
    fe8c:	and	w0, w0, #0xff
    fe90:	cmp	w0, #0x0
    fe94:	b.eq	fea0 <udev_util_encode_string@@LIBUDEV_183+0x4670>  // b.none
    fe98:	mov	x0, #0x0                   	// #0
    fe9c:	b	febc <udev_util_encode_string@@LIBUDEV_183+0x468c>
    fea0:	ldr	x1, [sp, #24]
    fea4:	ldr	x0, [sp, #16]
    fea8:	mul	x0, x1, x0
    feac:	cmp	x0, #0x0
    feb0:	b.ne	feb8 <udev_util_encode_string@@LIBUDEV_183+0x4688>  // b.any
    feb4:	mov	x0, #0x1                   	// #1
    feb8:	bl	5220 <malloc@plt>
    febc:	ldp	x29, x30, [sp], #32
    fec0:	ret
    fec4:	stp	x29, x30, [sp, #-32]!
    fec8:	mov	x29, sp
    fecc:	str	x0, [sp, #24]
    fed0:	ldr	x0, [sp, #24]
    fed4:	ldr	w0, [x0]
    fed8:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
    fedc:	nop
    fee0:	ldp	x29, x30, [sp], #32
    fee4:	ret
    fee8:	stp	x29, x30, [sp, #-32]!
    feec:	mov	x29, sp
    fef0:	str	x0, [sp, #24]
    fef4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    fef8:	ldr	x2, [x0, #4040]
    fefc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ff00:	ldr	x1, [x0, #4040]
    ff04:	ldr	x0, [sp, #24]
    ff08:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
    ff0c:	ldp	x29, x30, [sp], #32
    ff10:	ret
    ff14:	stp	x29, x30, [sp, #-32]!
    ff18:	mov	x29, sp
    ff1c:	str	x0, [sp, #24]
    ff20:	ldr	x0, [sp, #24]
    ff24:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
    ff28:	ldp	x29, x30, [sp], #32
    ff2c:	ret
    ff30:	stp	x29, x30, [sp, #-32]!
    ff34:	mov	x29, sp
    ff38:	str	x0, [sp, #24]
    ff3c:	ldr	x0, [sp, #24]
    ff40:	bl	ff14 <udev_util_encode_string@@LIBUDEV_183+0x46e4>
    ff44:	cmp	w0, #0x0
    ff48:	cset	w0, eq  // eq = none
    ff4c:	and	w0, w0, #0xff
    ff50:	ldp	x29, x30, [sp], #32
    ff54:	ret
    ff58:	stp	x29, x30, [sp, #-48]!
    ff5c:	mov	x29, sp
    ff60:	str	x0, [sp, #40]
    ff64:	str	x1, [sp, #32]
    ff68:	str	x2, [sp, #24]
    ff6c:	str	x3, [sp, #16]
    ff70:	ldr	x3, [sp, #16]
    ff74:	ldr	x2, [sp, #24]
    ff78:	ldr	x1, [sp, #32]
    ff7c:	ldr	x0, [sp, #40]
    ff80:	bl	28328 <udev_util_encode_string@@LIBUDEV_183+0x1caf8>
    ff84:	and	w0, w0, #0xff
    ff88:	ldp	x29, x30, [sp], #48
    ff8c:	ret
    ff90:	stp	x29, x30, [sp, #-32]!
    ff94:	mov	x29, sp
    ff98:	str	x0, [sp, #24]
    ff9c:	mov	x2, #0x0                   	// #0
    ffa0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
    ffa4:	ldr	x1, [x0, #4040]
    ffa8:	ldr	x0, [sp, #24]
    ffac:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
    ffb0:	ldp	x29, x30, [sp], #32
    ffb4:	ret
    ffb8:	stp	x29, x30, [sp, #-32]!
    ffbc:	mov	x29, sp
    ffc0:	str	x0, [sp, #24]
    ffc4:	ldr	x0, [sp, #24]
    ffc8:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
    ffcc:	ldp	x29, x30, [sp], #32
    ffd0:	ret
    ffd4:	stp	x29, x30, [sp, #-32]!
    ffd8:	mov	x29, sp
    ffdc:	str	x0, [sp, #24]
    ffe0:	ldr	x0, [sp, #24]
    ffe4:	bl	ffb8 <udev_util_encode_string@@LIBUDEV_183+0x4788>
    ffe8:	cmp	w0, #0x0
    ffec:	cset	w0, eq  // eq = none
    fff0:	and	w0, w0, #0xff
    fff4:	ldp	x29, x30, [sp], #32
    fff8:	ret
    fffc:	stp	x29, x30, [sp, #-32]!
   10000:	mov	x29, sp
   10004:	str	w0, [sp, #28]
   10008:	ldr	w0, [sp, #28]
   1000c:	bl	fd30 <udev_util_encode_string@@LIBUDEV_183+0x4500>
   10010:	ldp	x29, x30, [sp], #32
   10014:	ret
   10018:	stp	x29, x30, [sp, #-32]!
   1001c:	mov	x29, sp
   10020:	str	w0, [sp, #28]
   10024:	str	w1, [sp, #24]
   10028:	str	w2, [sp, #20]
   1002c:	str	w3, [sp, #16]
   10030:	add	x0, sp, #0x10
   10034:	mov	w4, #0x4                   	// #4
   10038:	mov	x3, x0
   1003c:	ldr	w2, [sp, #20]
   10040:	ldr	w1, [sp, #24]
   10044:	ldr	w0, [sp, #28]
   10048:	bl	5230 <setsockopt@plt>
   1004c:	cmp	w0, #0x0
   10050:	b.ge	10064 <udev_util_encode_string@@LIBUDEV_183+0x4834>  // b.tcont
   10054:	bl	57d0 <__errno_location@plt>
   10058:	ldr	w0, [x0]
   1005c:	neg	w0, w0
   10060:	b	10068 <udev_util_encode_string@@LIBUDEV_183+0x4838>
   10064:	mov	w0, #0x0                   	// #0
   10068:	ldp	x29, x30, [sp], #32
   1006c:	ret
   10070:	stp	x29, x30, [sp, #-176]!
   10074:	mov	x29, sp
   10078:	str	x0, [sp, #24]
   1007c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   10080:	ldr	x0, [x0, #4016]
   10084:	ldr	x1, [x0]
   10088:	str	x1, [sp, #168]
   1008c:	mov	x1, #0x0                   	// #0
   10090:	ldr	x0, [sp, #24]
   10094:	cmp	x0, #0x0
   10098:	cset	w0, eq  // eq = none
   1009c:	and	w0, w0, #0xff
   100a0:	and	x0, x0, #0xff
   100a4:	cmp	x0, #0x0
   100a8:	b.eq	100d4 <udev_util_encode_string@@LIBUDEV_183+0x48a4>  // b.none
   100ac:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   100b0:	add	x1, x0, #0x9ab
   100b4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   100b8:	add	x4, x0, #0xf8
   100bc:	mov	w3, #0x45                  	// #69
   100c0:	mov	x2, x1
   100c4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   100c8:	add	x1, x0, #0x9d8
   100cc:	mov	w0, #0x0                   	// #0
   100d0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   100d4:	mov	w0, #0xc                   	// #12
   100d8:	str	w0, [sp, #36]
   100dc:	ldr	x0, [sp, #24]
   100e0:	ldr	w0, [x0, #4]
   100e4:	add	x1, sp, #0x28
   100e8:	mov	x3, x1
   100ec:	add	x1, sp, #0x24
   100f0:	mov	x2, x1
   100f4:	mov	x1, x3
   100f8:	bl	5810 <getsockname@plt>
   100fc:	cmp	w0, #0x0
   10100:	b.ge	10114 <udev_util_encode_string@@LIBUDEV_183+0x48e4>  // b.tcont
   10104:	bl	57d0 <__errno_location@plt>
   10108:	ldr	w0, [x0]
   1010c:	neg	w0, w0
   10110:	b	10124 <udev_util_encode_string@@LIBUDEV_183+0x48f4>
   10114:	ldr	w1, [sp, #44]
   10118:	ldr	x0, [sp, #24]
   1011c:	str	w1, [x0, #12]
   10120:	mov	w0, #0x0                   	// #0
   10124:	mov	w1, w0
   10128:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1012c:	ldr	x0, [x0, #4016]
   10130:	ldr	x2, [sp, #168]
   10134:	ldr	x0, [x0]
   10138:	eor	x0, x2, x0
   1013c:	cmp	x0, #0x0
   10140:	b.eq	10148 <udev_util_encode_string@@LIBUDEV_183+0x4918>  // b.none
   10144:	bl	5390 <__stack_chk_fail@plt>
   10148:	mov	w0, w1
   1014c:	ldp	x29, x30, [sp], #176
   10150:	ret
   10154:	stp	x29, x30, [sp, #-48]!
   10158:	mov	x29, sp
   1015c:	str	x0, [sp, #24]
   10160:	str	x1, [sp, #16]
   10164:	ldr	x0, [sp, #16]
   10168:	str	w0, [sp, #40]
   1016c:	ldr	x0, [sp, #24]
   10170:	cmp	x0, #0x0
   10174:	cset	w0, ne  // ne = any
   10178:	and	w0, w0, #0xff
   1017c:	and	x0, x0, #0xff
   10180:	cmp	x0, #0x0
   10184:	b.ne	101b8 <udev_util_encode_string@@LIBUDEV_183+0x4988>  // b.any
   10188:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1018c:	add	x1, x0, #0x9ab
   10190:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10194:	add	x4, x0, #0x110
   10198:	mov	w3, #0x5c                  	// #92
   1019c:	mov	x2, x1
   101a0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   101a4:	add	x1, x0, #0x9d8
   101a8:	mov	w0, #0x0                   	// #0
   101ac:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   101b0:	mov	w0, #0x1                   	// #1
   101b4:	b	101bc <udev_util_encode_string@@LIBUDEV_183+0x498c>
   101b8:	mov	w0, #0x0                   	// #0
   101bc:	cmp	w0, #0x0
   101c0:	b.eq	101cc <udev_util_encode_string@@LIBUDEV_183+0x499c>  // b.none
   101c4:	mov	w0, #0xffffffea            	// #-22
   101c8:	b	10284 <udev_util_encode_string@@LIBUDEV_183+0x4a54>
   101cc:	ldrsw	x0, [sp, #40]
   101d0:	ldr	x1, [sp, #16]
   101d4:	cmp	x1, x0
   101d8:	cset	w0, eq  // eq = none
   101dc:	and	w0, w0, #0xff
   101e0:	and	x0, x0, #0xff
   101e4:	cmp	x0, #0x0
   101e8:	b.ne	1021c <udev_util_encode_string@@LIBUDEV_183+0x49ec>  // b.any
   101ec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   101f0:	add	x1, x0, #0x9ab
   101f4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   101f8:	add	x4, x0, #0x110
   101fc:	mov	w3, #0x5d                  	// #93
   10200:	mov	x2, x1
   10204:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10208:	add	x1, x0, #0x9e8
   1020c:	mov	w0, #0x0                   	// #0
   10210:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   10214:	mov	w0, #0x1                   	// #1
   10218:	b	10220 <udev_util_encode_string@@LIBUDEV_183+0x49f0>
   1021c:	mov	w0, #0x0                   	// #0
   10220:	cmp	w0, #0x0
   10224:	b.eq	10230 <udev_util_encode_string@@LIBUDEV_183+0x4a00>  // b.none
   10228:	mov	w0, #0xffffffea            	// #-22
   1022c:	b	10284 <udev_util_encode_string@@LIBUDEV_183+0x4a54>
   10230:	ldr	x0, [sp, #24]
   10234:	ldr	w0, [x0, #4]
   10238:	ldr	w3, [sp, #40]
   1023c:	mov	w2, #0x21                  	// #33
   10240:	mov	w1, #0x1                   	// #1
   10244:	bl	10018 <udev_util_encode_string@@LIBUDEV_183+0x47e8>
   10248:	cmp	w0, #0x0
   1024c:	b.ge	10280 <udev_util_encode_string@@LIBUDEV_183+0x4a50>  // b.tcont
   10250:	ldr	x0, [sp, #24]
   10254:	ldr	w0, [x0, #4]
   10258:	ldr	w3, [sp, #40]
   1025c:	mov	w2, #0x8                   	// #8
   10260:	mov	w1, #0x1                   	// #1
   10264:	bl	10018 <udev_util_encode_string@@LIBUDEV_183+0x47e8>
   10268:	str	w0, [sp, #44]
   1026c:	ldr	w0, [sp, #44]
   10270:	cmp	w0, #0x0
   10274:	b.ge	10280 <udev_util_encode_string@@LIBUDEV_183+0x4a50>  // b.tcont
   10278:	ldr	w0, [sp, #44]
   1027c:	b	10284 <udev_util_encode_string@@LIBUDEV_183+0x4a54>
   10280:	mov	w0, #0x0                   	// #0
   10284:	ldp	x29, x30, [sp], #48
   10288:	ret
   1028c:	stp	x29, x30, [sp, #-32]!
   10290:	mov	x29, sp
   10294:	str	x0, [sp, #24]
   10298:	ldr	x0, [sp, #24]
   1029c:	cmp	x0, #0x0
   102a0:	cset	w0, eq  // eq = none
   102a4:	and	w0, w0, #0xff
   102a8:	and	x0, x0, #0xff
   102ac:	cmp	x0, #0x0
   102b0:	b.eq	102dc <udev_util_encode_string@@LIBUDEV_183+0x4aac>  // b.none
   102b4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   102b8:	add	x1, x0, #0x9ab
   102bc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   102c0:	add	x4, x0, #0x140
   102c4:	mov	w3, #0x69                  	// #105
   102c8:	mov	x2, x1
   102cc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   102d0:	add	x1, x0, #0x9d8
   102d4:	mov	w0, #0x0                   	// #0
   102d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   102dc:	ldr	x0, [sp, #24]
   102e0:	ldr	w0, [x0, #4]
   102e4:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   102e8:	mov	w1, w0
   102ec:	ldr	x0, [sp, #24]
   102f0:	str	w1, [x0, #4]
   102f4:	mov	w0, #0x0                   	// #0
   102f8:	ldp	x29, x30, [sp], #32
   102fc:	ret
   10300:	stp	x29, x30, [sp, #-32]!
   10304:	mov	x29, sp
   10308:	str	x0, [sp, #24]
   1030c:	ldr	x0, [sp, #24]
   10310:	cmp	x0, #0x0
   10314:	cset	w0, ne  // ne = any
   10318:	and	w0, w0, #0xff
   1031c:	and	x0, x0, #0xff
   10320:	cmp	x0, #0x0
   10324:	b.ne	10358 <udev_util_encode_string@@LIBUDEV_183+0x4b28>  // b.any
   10328:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1032c:	add	x1, x0, #0x9ab
   10330:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10334:	add	x4, x0, #0x160
   10338:	mov	w3, #0x70                  	// #112
   1033c:	mov	x2, x1
   10340:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10344:	add	x1, x0, #0x9d8
   10348:	mov	w0, #0x0                   	// #0
   1034c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   10350:	mov	w0, #0x1                   	// #1
   10354:	b	1035c <udev_util_encode_string@@LIBUDEV_183+0x4b2c>
   10358:	mov	w0, #0x0                   	// #0
   1035c:	cmp	w0, #0x0
   10360:	b.eq	1036c <udev_util_encode_string@@LIBUDEV_183+0x4b3c>  // b.none
   10364:	mov	w0, #0xffffffea            	// #-22
   10368:	b	10374 <udev_util_encode_string@@LIBUDEV_183+0x4b44>
   1036c:	ldr	x0, [sp, #24]
   10370:	ldr	w0, [x0, #4]
   10374:	ldp	x29, x30, [sp], #32
   10378:	ret
   1037c:	stp	x29, x30, [sp, #-464]!
   10380:	mov	x29, sp
   10384:	stp	x19, x20, [sp, #16]
   10388:	stp	x21, x22, [sp, #32]
   1038c:	str	x0, [sp, #56]
   10390:	str	w1, [sp, #52]
   10394:	str	w2, [sp, #48]
   10398:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1039c:	ldr	x0, [x0, #4016]
   103a0:	ldr	x1, [x0]
   103a4:	str	x1, [sp, #456]
   103a8:	mov	x1, #0x0                   	// #0
   103ac:	str	xzr, [sp, #112]
   103b0:	mov	w0, #0xffffffff            	// #-1
   103b4:	str	w0, [sp, #64]
   103b8:	ldr	x0, [sp, #56]
   103bc:	cmp	x0, #0x0
   103c0:	cset	w0, ne  // ne = any
   103c4:	and	w0, w0, #0xff
   103c8:	and	x0, x0, #0xff
   103cc:	cmp	x0, #0x0
   103d0:	b.ne	10404 <udev_util_encode_string@@LIBUDEV_183+0x4bd4>  // b.any
   103d4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   103d8:	add	x1, x0, #0x9ab
   103dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   103e0:	add	x4, x0, #0x178
   103e4:	mov	w3, #0x7a                  	// #122
   103e8:	mov	x2, x1
   103ec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   103f0:	add	x1, x0, #0xa00
   103f4:	mov	w0, #0x0                   	// #0
   103f8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   103fc:	mov	w0, #0x1                   	// #1
   10400:	b	10408 <udev_util_encode_string@@LIBUDEV_183+0x4bd8>
   10404:	mov	w0, #0x0                   	// #0
   10408:	cmp	w0, #0x0
   1040c:	b.eq	10418 <udev_util_encode_string@@LIBUDEV_183+0x4be8>  // b.none
   10410:	mov	w19, #0xffffffea            	// #-22
   10414:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   10418:	ldr	w0, [sp, #52]
   1041c:	mvn	w0, w0
   10420:	lsr	w0, w0, #31
   10424:	and	w0, w0, #0xff
   10428:	sxtw	x0, w0
   1042c:	cmp	x0, #0x0
   10430:	b.eq	10450 <udev_util_encode_string@@LIBUDEV_183+0x4c20>  // b.none
   10434:	ldr	w0, [sp, #52]
   10438:	cmp	w0, #0x2
   1043c:	cset	w0, le
   10440:	and	w0, w0, #0xff
   10444:	sxtw	x0, w0
   10448:	cmp	x0, #0x0
   1044c:	b.ne	10480 <udev_util_encode_string@@LIBUDEV_183+0x4c50>  // b.any
   10450:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10454:	add	x1, x0, #0x9ab
   10458:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1045c:	add	x4, x0, #0x178
   10460:	mov	w3, #0x7b                  	// #123
   10464:	mov	x2, x1
   10468:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1046c:	add	x1, x0, #0xa08
   10470:	mov	w0, #0x0                   	// #0
   10474:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   10478:	mov	w0, #0x1                   	// #1
   1047c:	b	10484 <udev_util_encode_string@@LIBUDEV_183+0x4c54>
   10480:	mov	w0, #0x0                   	// #0
   10484:	cmp	w0, #0x0
   10488:	b.eq	10494 <udev_util_encode_string@@LIBUDEV_183+0x4c64>  // b.none
   1048c:	mov	w19, #0xffffffea            	// #-22
   10490:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   10494:	ldr	w0, [sp, #52]
   10498:	cmp	w0, #0x2
   1049c:	b.ne	1053c <udev_util_encode_string@@LIBUDEV_183+0x4d0c>  // b.any
   104a0:	mov	w1, #0x0                   	// #0
   104a4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   104a8:	add	x0, x0, #0xa40
   104ac:	bl	53e0 <access@plt>
   104b0:	cmp	w0, #0x0
   104b4:	b.ge	1053c <udev_util_encode_string@@LIBUDEV_183+0x4d0c>  // b.tcont
   104b8:	bl	2fe64 <udev_util_encode_string@@LIBUDEV_183+0x24634>
   104bc:	cmp	w0, #0x0
   104c0:	b.gt	1053c <udev_util_encode_string@@LIBUDEV_183+0x4d0c>
   104c4:	mov	w0, #0x7                   	// #7
   104c8:	str	w0, [sp, #68]
   104cc:	str	wzr, [sp, #72]
   104d0:	str	wzr, [sp, #76]
   104d4:	ldr	w0, [sp, #76]
   104d8:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   104dc:	mov	w1, w0
   104e0:	ldr	w0, [sp, #68]
   104e4:	and	w0, w0, #0x7
   104e8:	cmp	w1, w0
   104ec:	b.lt	10530 <udev_util_encode_string@@LIBUDEV_183+0x4d00>  // b.tstop
   104f0:	ldr	w0, [sp, #76]
   104f4:	lsl	w1, w0, #10
   104f8:	ldr	w0, [sp, #68]
   104fc:	orr	w6, w1, w0
   10500:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10504:	add	x1, x0, #0x9ab
   10508:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1050c:	add	x5, x0, #0xa58
   10510:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10514:	add	x4, x0, #0x190
   10518:	mov	w3, #0x8e                  	// #142
   1051c:	mov	x2, x1
   10520:	ldr	w1, [sp, #72]
   10524:	mov	w0, w6
   10528:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1052c:	b	10538 <udev_util_encode_string@@LIBUDEV_183+0x4d08>
   10530:	ldr	w0, [sp, #72]
   10534:	cmp	w0, #0x0
   10538:	str	wzr, [sp, #52]
   1053c:	ldr	w0, [sp, #48]
   10540:	cmp	w0, #0x0
   10544:	b.ge	105fc <udev_util_encode_string@@LIBUDEV_183+0x4dcc>  // b.tcont
   10548:	mov	w2, #0xf                   	// #15
   1054c:	mov	w1, #0x803                 	// #2051
   10550:	movk	w1, #0x8, lsl #16
   10554:	mov	w0, #0x10                  	// #16
   10558:	bl	55e0 <socket@plt>
   1055c:	str	w0, [sp, #64]
   10560:	ldr	w0, [sp, #64]
   10564:	cmp	w0, #0x0
   10568:	b.ge	105fc <udev_util_encode_string@@LIBUDEV_183+0x4dcc>  // b.tcont
   1056c:	mov	w0, #0x7                   	// #7
   10570:	str	w0, [sp, #80]
   10574:	bl	57d0 <__errno_location@plt>
   10578:	ldr	w0, [x0]
   1057c:	str	w0, [sp, #84]
   10580:	str	wzr, [sp, #88]
   10584:	ldr	w0, [sp, #88]
   10588:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1058c:	mov	w1, w0
   10590:	ldr	w0, [sp, #80]
   10594:	and	w0, w0, #0x7
   10598:	cmp	w1, w0
   1059c:	b.lt	105e4 <udev_util_encode_string@@LIBUDEV_183+0x4db4>  // b.tstop
   105a0:	ldr	w0, [sp, #88]
   105a4:	lsl	w1, w0, #10
   105a8:	ldr	w0, [sp, #80]
   105ac:	orr	w6, w1, w0
   105b0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   105b4:	add	x1, x0, #0x9ab
   105b8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   105bc:	add	x5, x0, #0xab0
   105c0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   105c4:	add	x4, x0, #0x190
   105c8:	mov	w3, #0x95                  	// #149
   105cc:	mov	x2, x1
   105d0:	ldr	w1, [sp, #84]
   105d4:	mov	w0, w6
   105d8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   105dc:	mov	w19, w0
   105e0:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   105e4:	ldr	w0, [sp, #84]
   105e8:	cmp	w0, #0x0
   105ec:	cneg	w0, w0, lt  // lt = tstop
   105f0:	and	w0, w0, #0xff
   105f4:	neg	w19, w0
   105f8:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   105fc:	mov	x1, #0x1                   	// #1
   10600:	mov	x0, #0x148                 	// #328
   10604:	bl	fe70 <udev_util_encode_string@@LIBUDEV_183+0x4640>
   10608:	str	x0, [sp, #112]
   1060c:	ldr	x0, [sp, #112]
   10610:	cmp	x0, #0x0
   10614:	b.ne	10620 <udev_util_encode_string@@LIBUDEV_183+0x4df0>  // b.any
   10618:	mov	w19, #0xfffffff4            	// #-12
   1061c:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   10620:	ldr	x19, [sp, #112]
   10624:	ldr	w0, [sp, #48]
   10628:	cmp	w0, #0x0
   1062c:	b.ge	10648 <udev_util_encode_string@@LIBUDEV_183+0x4e18>  // b.tcont
   10630:	ldr	w0, [sp, #64]
   10634:	str	w0, [sp, #92]
   10638:	mov	w0, #0xffffffff            	// #-1
   1063c:	str	w0, [sp, #64]
   10640:	ldr	w20, [sp, #92]
   10644:	b	1064c <udev_util_encode_string@@LIBUDEV_183+0x4e1c>
   10648:	ldr	w20, [sp, #48]
   1064c:	ldr	w21, [sp, #52]
   10650:	ldr	w0, [sp, #48]
   10654:	mvn	w0, w0
   10658:	lsr	w0, w0, #31
   1065c:	and	w22, w0, #0xff
   10660:	mov	x3, x19
   10664:	mov	x0, #0x148                 	// #328
   10668:	mov	x2, x0
   1066c:	mov	w1, #0x0                   	// #0
   10670:	mov	x0, x3
   10674:	bl	5290 <memset@plt>
   10678:	mov	w0, #0x1                   	// #1
   1067c:	str	w0, [x19]
   10680:	str	w20, [x19, #4]
   10684:	mov	w0, #0x10                  	// #16
   10688:	strh	w0, [x19, #8]
   1068c:	str	w21, [x19, #16]
   10690:	mov	w0, w22
   10694:	strb	w0, [x19, #264]
   10698:	ldr	w0, [sp, #48]
   1069c:	cmp	w0, #0x0
   106a0:	b.lt	10748 <udev_util_encode_string@@LIBUDEV_183+0x4f18>  // b.tstop
   106a4:	ldr	x0, [sp, #112]
   106a8:	bl	10070 <udev_util_encode_string@@LIBUDEV_183+0x4840>
   106ac:	str	w0, [sp, #96]
   106b0:	ldr	w0, [sp, #96]
   106b4:	cmp	w0, #0x0
   106b8:	b.ge	10748 <udev_util_encode_string@@LIBUDEV_183+0x4f18>  // b.tcont
   106bc:	mov	w0, #0x7                   	// #7
   106c0:	str	w0, [sp, #100]
   106c4:	ldr	w0, [sp, #96]
   106c8:	str	w0, [sp, #104]
   106cc:	str	wzr, [sp, #108]
   106d0:	ldr	w0, [sp, #108]
   106d4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   106d8:	mov	w1, w0
   106dc:	ldr	w0, [sp, #100]
   106e0:	and	w0, w0, #0x7
   106e4:	cmp	w1, w0
   106e8:	b.lt	10730 <udev_util_encode_string@@LIBUDEV_183+0x4f00>  // b.tstop
   106ec:	ldr	w0, [sp, #108]
   106f0:	lsl	w1, w0, #10
   106f4:	ldr	w0, [sp, #100]
   106f8:	orr	w6, w1, w0
   106fc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10700:	add	x1, x0, #0x9ab
   10704:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10708:	add	x5, x0, #0xae0
   1070c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10710:	add	x4, x0, #0x190
   10714:	mov	w3, #0xa7                  	// #167
   10718:	mov	x2, x1
   1071c:	ldr	w1, [sp, #104]
   10720:	mov	w0, w6
   10724:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   10728:	mov	w19, w0
   1072c:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   10730:	ldr	w0, [sp, #104]
   10734:	cmp	w0, #0x0
   10738:	cneg	w0, w0, lt  // lt = tstop
   1073c:	and	w0, w0, #0xff
   10740:	neg	w19, w0
   10744:	b	10764 <udev_util_encode_string@@LIBUDEV_183+0x4f34>
   10748:	ldr	x0, [sp, #112]
   1074c:	str	x0, [sp, #120]
   10750:	str	xzr, [sp, #112]
   10754:	ldr	x1, [sp, #120]
   10758:	ldr	x0, [sp, #56]
   1075c:	str	x1, [x0]
   10760:	mov	w19, #0x0                   	// #0
   10764:	add	x0, sp, #0x40
   10768:	bl	fec4 <udev_util_encode_string@@LIBUDEV_183+0x4694>
   1076c:	add	x0, sp, #0x70
   10770:	bl	fd7c <udev_util_encode_string@@LIBUDEV_183+0x454c>
   10774:	mov	w1, w19
   10778:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1077c:	ldr	x0, [x0, #4016]
   10780:	ldr	x2, [sp, #456]
   10784:	ldr	x0, [x0]
   10788:	eor	x0, x2, x0
   1078c:	cmp	x0, #0x0
   10790:	b.eq	10798 <udev_util_encode_string@@LIBUDEV_183+0x4f68>  // b.none
   10794:	bl	5390 <__stack_chk_fail@plt>
   10798:	mov	w0, w1
   1079c:	ldp	x19, x20, [sp, #16]
   107a0:	ldp	x21, x22, [sp, #32]
   107a4:	ldp	x29, x30, [sp], #464
   107a8:	ret
   107ac:	stp	x29, x30, [sp, #-32]!
   107b0:	mov	x29, sp
   107b4:	str	x0, [sp, #24]
   107b8:	ldr	x0, [sp, #24]
   107bc:	cmp	x0, #0x0
   107c0:	cset	w0, ne  // ne = any
   107c4:	and	w0, w0, #0xff
   107c8:	and	x0, x0, #0xff
   107cc:	cmp	x0, #0x0
   107d0:	b.ne	10804 <udev_util_encode_string@@LIBUDEV_183+0x4fd4>  // b.any
   107d4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   107d8:	add	x1, x0, #0x9ab
   107dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   107e0:	add	x4, x0, #0x1a8
   107e4:	mov	w3, #0xb3                  	// #179
   107e8:	mov	x2, x1
   107ec:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   107f0:	add	x1, x0, #0x9d8
   107f4:	mov	w0, #0x0                   	// #0
   107f8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   107fc:	mov	w0, #0x1                   	// #1
   10800:	b	10808 <udev_util_encode_string@@LIBUDEV_183+0x4fd8>
   10804:	mov	w0, #0x0                   	// #0
   10808:	cmp	w0, #0x0
   1080c:	b.eq	10818 <udev_util_encode_string@@LIBUDEV_183+0x4fe8>  // b.none
   10810:	mov	w0, #0xffffffea            	// #-22
   10814:	b	1083c <udev_util_encode_string@@LIBUDEV_183+0x500c>
   10818:	ldr	x0, [sp, #24]
   1081c:	ldr	x0, [x0, #304]
   10820:	bl	226c0 <udev_util_encode_string@@LIBUDEV_183+0x16e90>
   10824:	mov	x1, x0
   10828:	ldr	x0, [sp, #24]
   1082c:	str	x1, [x0, #304]
   10830:	ldr	x0, [sp, #24]
   10834:	bl	1028c <udev_util_encode_string@@LIBUDEV_183+0x4a5c>
   10838:	mov	w0, #0x0                   	// #0
   1083c:	ldp	x29, x30, [sp], #32
   10840:	ret
   10844:	stp	x29, x30, [sp, #-32]!
   10848:	mov	x29, sp
   1084c:	str	x0, [sp, #24]
   10850:	ldr	x0, [sp, #24]
   10854:	cmp	x0, #0x0
   10858:	cset	w0, ne  // ne = any
   1085c:	and	w0, w0, #0xff
   10860:	and	x0, x0, #0xff
   10864:	cmp	x0, #0x0
   10868:	b.ne	1089c <udev_util_encode_string@@LIBUDEV_183+0x506c>  // b.any
   1086c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10870:	add	x1, x0, #0x9ab
   10874:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10878:	add	x4, x0, #0x1c0
   1087c:	mov	w3, #0xe6                  	// #230
   10880:	mov	x2, x1
   10884:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10888:	add	x1, x0, #0x9d8
   1088c:	mov	w0, #0x0                   	// #0
   10890:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   10894:	mov	w0, #0x1                   	// #1
   10898:	b	108a0 <udev_util_encode_string@@LIBUDEV_183+0x5070>
   1089c:	mov	w0, #0x0                   	// #0
   108a0:	cmp	w0, #0x0
   108a4:	b.eq	108b0 <udev_util_encode_string@@LIBUDEV_183+0x5080>  // b.none
   108a8:	mov	w0, #0xffffffea            	// #-22
   108ac:	b	108d4 <udev_util_encode_string@@LIBUDEV_183+0x50a4>
   108b0:	ldr	x0, [sp, #24]
   108b4:	bl	107ac <udev_util_encode_string@@LIBUDEV_183+0x4f7c>
   108b8:	ldr	x0, [sp, #24]
   108bc:	ldr	x0, [x0, #296]
   108c0:	bl	20ce0 <udev_util_encode_string@@LIBUDEV_183+0x154b0>
   108c4:	mov	x1, x0
   108c8:	ldr	x0, [sp, #24]
   108cc:	str	x1, [x0, #296]
   108d0:	mov	w0, #0x0                   	// #0
   108d4:	ldp	x29, x30, [sp], #32
   108d8:	ret
   108dc:	stp	x29, x30, [sp, #-96]!
   108e0:	mov	x29, sp
   108e4:	str	x0, [sp, #24]
   108e8:	ldr	x0, [sp, #24]
   108ec:	cmp	x0, #0x0
   108f0:	cset	w0, ne  // ne = any
   108f4:	and	w0, w0, #0xff
   108f8:	and	x0, x0, #0xff
   108fc:	cmp	x0, #0x0
   10900:	b.ne	10934 <udev_util_encode_string@@LIBUDEV_183+0x5104>  // b.any
   10904:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10908:	add	x1, x0, #0x9ab
   1090c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10910:	add	x4, x0, #0x1e0
   10914:	mov	w3, #0x10e                 	// #270
   10918:	mov	x2, x1
   1091c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10920:	add	x1, x0, #0x9d8
   10924:	mov	w0, #0x0                   	// #0
   10928:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1092c:	mov	w0, #0x1                   	// #1
   10930:	b	10938 <udev_util_encode_string@@LIBUDEV_183+0x5108>
   10934:	mov	w0, #0x0                   	// #0
   10938:	cmp	w0, #0x0
   1093c:	b.eq	10948 <udev_util_encode_string@@LIBUDEV_183+0x5118>  // b.none
   10940:	mov	w0, #0xffffffea            	// #-22
   10944:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10948:	ldr	x0, [sp, #24]
   1094c:	bl	11ca4 <udev_util_encode_string@@LIBUDEV_183+0x6474>
   10950:	str	w0, [sp, #44]
   10954:	ldr	w0, [sp, #44]
   10958:	cmp	w0, #0x0
   1095c:	b.ge	109e8 <udev_util_encode_string@@LIBUDEV_183+0x51b8>  // b.tcont
   10960:	mov	w0, #0x7                   	// #7
   10964:	str	w0, [sp, #84]
   10968:	ldr	w0, [sp, #44]
   1096c:	str	w0, [sp, #88]
   10970:	str	wzr, [sp, #92]
   10974:	ldr	w0, [sp, #92]
   10978:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1097c:	mov	w1, w0
   10980:	ldr	w0, [sp, #84]
   10984:	and	w0, w0, #0x7
   10988:	cmp	w1, w0
   1098c:	b.lt	109d0 <udev_util_encode_string@@LIBUDEV_183+0x51a0>  // b.tstop
   10990:	ldr	w0, [sp, #92]
   10994:	lsl	w1, w0, #10
   10998:	ldr	w0, [sp, #84]
   1099c:	orr	w6, w1, w0
   109a0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   109a4:	add	x1, x0, #0x9ab
   109a8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   109ac:	add	x5, x0, #0xb40
   109b0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   109b4:	add	x4, x0, #0x200
   109b8:	mov	w3, #0x112                 	// #274
   109bc:	mov	x2, x1
   109c0:	ldr	w1, [sp, #88]
   109c4:	mov	w0, w6
   109c8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   109cc:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   109d0:	ldr	w0, [sp, #88]
   109d4:	cmp	w0, #0x0
   109d8:	cneg	w0, w0, lt  // lt = tstop
   109dc:	and	w0, w0, #0xff
   109e0:	neg	w0, w0
   109e4:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   109e8:	ldr	x0, [sp, #24]
   109ec:	ldrb	w0, [x0, #264]
   109f0:	eor	w0, w0, #0x1
   109f4:	and	w0, w0, #0xff
   109f8:	cmp	w0, #0x0
   109fc:	b.eq	10c10 <udev_util_encode_string@@LIBUDEV_183+0x53e0>  // b.none
   10a00:	ldr	x0, [sp, #24]
   10a04:	ldr	w0, [x0, #4]
   10a08:	mov	w3, #0x1                   	// #1
   10a0c:	mov	w2, #0x10                  	// #16
   10a10:	mov	w1, #0x1                   	// #1
   10a14:	bl	10018 <udev_util_encode_string@@LIBUDEV_183+0x47e8>
   10a18:	str	w0, [sp, #44]
   10a1c:	ldr	w0, [sp, #44]
   10a20:	cmp	w0, #0x0
   10a24:	b.ge	10ab0 <udev_util_encode_string@@LIBUDEV_183+0x5280>  // b.tcont
   10a28:	mov	w0, #0x7                   	// #7
   10a2c:	str	w0, [sp, #72]
   10a30:	ldr	w0, [sp, #44]
   10a34:	str	w0, [sp, #76]
   10a38:	str	wzr, [sp, #80]
   10a3c:	ldr	w0, [sp, #80]
   10a40:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   10a44:	mov	w1, w0
   10a48:	ldr	w0, [sp, #72]
   10a4c:	and	w0, w0, #0x7
   10a50:	cmp	w1, w0
   10a54:	b.lt	10a98 <udev_util_encode_string@@LIBUDEV_183+0x5268>  // b.tstop
   10a58:	ldr	w0, [sp, #80]
   10a5c:	lsl	w1, w0, #10
   10a60:	ldr	w0, [sp, #72]
   10a64:	orr	w6, w1, w0
   10a68:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10a6c:	add	x1, x0, #0x9ab
   10a70:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10a74:	add	x5, x0, #0xb70
   10a78:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10a7c:	add	x4, x0, #0x200
   10a80:	mov	w3, #0x118                 	// #280
   10a84:	mov	x2, x1
   10a88:	ldr	w1, [sp, #76]
   10a8c:	mov	w0, w6
   10a90:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   10a94:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10a98:	ldr	w0, [sp, #76]
   10a9c:	cmp	w0, #0x0
   10aa0:	cneg	w0, w0, lt  // lt = tstop
   10aa4:	and	w0, w0, #0xff
   10aa8:	neg	w0, w0
   10aac:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10ab0:	ldr	x0, [sp, #24]
   10ab4:	ldr	w3, [x0, #4]
   10ab8:	ldr	x0, [sp, #24]
   10abc:	add	x0, x0, #0x8
   10ac0:	mov	w2, #0xc                   	// #12
   10ac4:	mov	x1, x0
   10ac8:	mov	w0, w3
   10acc:	bl	50c0 <bind@plt>
   10ad0:	cmp	w0, #0x0
   10ad4:	b.ge	10b64 <udev_util_encode_string@@LIBUDEV_183+0x5334>  // b.tcont
   10ad8:	mov	w0, #0x7                   	// #7
   10adc:	str	w0, [sp, #60]
   10ae0:	bl	57d0 <__errno_location@plt>
   10ae4:	ldr	w0, [x0]
   10ae8:	str	w0, [sp, #64]
   10aec:	str	wzr, [sp, #68]
   10af0:	ldr	w0, [sp, #68]
   10af4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   10af8:	mov	w1, w0
   10afc:	ldr	w0, [sp, #60]
   10b00:	and	w0, w0, #0x7
   10b04:	cmp	w1, w0
   10b08:	b.lt	10b4c <udev_util_encode_string@@LIBUDEV_183+0x531c>  // b.tstop
   10b0c:	ldr	w0, [sp, #68]
   10b10:	lsl	w1, w0, #10
   10b14:	ldr	w0, [sp, #60]
   10b18:	orr	w6, w1, w0
   10b1c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10b20:	add	x1, x0, #0x9ab
   10b24:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10b28:	add	x5, x0, #0xbb0
   10b2c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10b30:	add	x4, x0, #0x200
   10b34:	mov	w3, #0x11b                 	// #283
   10b38:	mov	x2, x1
   10b3c:	ldr	w1, [sp, #64]
   10b40:	mov	w0, w6
   10b44:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   10b48:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10b4c:	ldr	w0, [sp, #64]
   10b50:	cmp	w0, #0x0
   10b54:	cneg	w0, w0, lt  // lt = tstop
   10b58:	and	w0, w0, #0xff
   10b5c:	neg	w0, w0
   10b60:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10b64:	ldr	x0, [sp, #24]
   10b68:	mov	w1, #0x1                   	// #1
   10b6c:	strb	w1, [x0, #264]
   10b70:	ldr	x0, [sp, #24]
   10b74:	bl	10070 <udev_util_encode_string@@LIBUDEV_183+0x4840>
   10b78:	str	w0, [sp, #44]
   10b7c:	ldr	w0, [sp, #44]
   10b80:	cmp	w0, #0x0
   10b84:	b.ge	10c10 <udev_util_encode_string@@LIBUDEV_183+0x53e0>  // b.tcont
   10b88:	mov	w0, #0x7                   	// #7
   10b8c:	str	w0, [sp, #48]
   10b90:	ldr	w0, [sp, #44]
   10b94:	str	w0, [sp, #52]
   10b98:	str	wzr, [sp, #56]
   10b9c:	ldr	w0, [sp, #56]
   10ba0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   10ba4:	mov	w1, w0
   10ba8:	ldr	w0, [sp, #48]
   10bac:	and	w0, w0, #0x7
   10bb0:	cmp	w1, w0
   10bb4:	b.lt	10bf8 <udev_util_encode_string@@LIBUDEV_183+0x53c8>  // b.tstop
   10bb8:	ldr	w0, [sp, #56]
   10bbc:	lsl	w1, w0, #10
   10bc0:	ldr	w0, [sp, #48]
   10bc4:	orr	w6, w1, w0
   10bc8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10bcc:	add	x1, x0, #0x9ab
   10bd0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10bd4:	add	x5, x0, #0xbe8
   10bd8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10bdc:	add	x4, x0, #0x200
   10be0:	mov	w3, #0x121                 	// #289
   10be4:	mov	x2, x1
   10be8:	ldr	w1, [sp, #52]
   10bec:	mov	w0, w6
   10bf0:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   10bf4:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10bf8:	ldr	w0, [sp, #52]
   10bfc:	cmp	w0, #0x0
   10c00:	cneg	w0, w0, lt  // lt = tstop
   10c04:	and	w0, w0, #0xff
   10c08:	neg	w0, w0
   10c0c:	b	10c14 <udev_util_encode_string@@LIBUDEV_183+0x53e4>
   10c10:	mov	w0, #0x0                   	// #0
   10c14:	ldp	x29, x30, [sp], #96
   10c18:	ret
   10c1c:	stp	x29, x30, [sp, #-32]!
   10c20:	mov	x29, sp
   10c24:	str	x0, [sp, #24]
   10c28:	ldr	x0, [sp, #24]
   10c2c:	cmp	x0, #0x0
   10c30:	cset	w0, eq  // eq = none
   10c34:	and	w0, w0, #0xff
   10c38:	and	x0, x0, #0xff
   10c3c:	cmp	x0, #0x0
   10c40:	b.eq	10c6c <udev_util_encode_string@@LIBUDEV_183+0x543c>  // b.none
   10c44:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10c48:	add	x1, x0, #0x9ab
   10c4c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10c50:	add	x4, x0, #0x220
   10c54:	mov	w3, #0x128                 	// #296
   10c58:	mov	x2, x1
   10c5c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10c60:	add	x1, x0, #0x9d8
   10c64:	mov	w0, #0x0                   	// #0
   10c68:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   10c6c:	ldr	x0, [sp, #24]
   10c70:	bl	10844 <udev_util_encode_string@@LIBUDEV_183+0x5014>
   10c74:	ldr	x0, [sp, #24]
   10c78:	ldr	x0, [x0, #272]
   10c7c:	bl	fee8 <udev_util_encode_string@@LIBUDEV_183+0x46b8>
   10c80:	ldr	x0, [sp, #24]
   10c84:	ldr	x0, [x0, #280]
   10c88:	bl	ff90 <udev_util_encode_string@@LIBUDEV_183+0x4760>
   10c8c:	ldr	x0, [sp, #24]
   10c90:	bl	fdb0 <udev_util_encode_string@@LIBUDEV_183+0x4580>
   10c94:	ldp	x29, x30, [sp], #32
   10c98:	ret
   10c9c:	stp	x29, x30, [sp, #-32]!
   10ca0:	mov	x29, sp
   10ca4:	str	x0, [sp, #24]
   10ca8:	ldr	x0, [sp, #24]
   10cac:	cmp	x0, #0x0
   10cb0:	b.ne	10cbc <udev_util_encode_string@@LIBUDEV_183+0x548c>  // b.any
   10cb4:	mov	x0, #0x0                   	// #0
   10cb8:	b	10d38 <udev_util_encode_string@@LIBUDEV_183+0x5508>
   10cbc:	ldr	x0, [sp, #24]
   10cc0:	ldr	w0, [x0]
   10cc4:	cmp	w0, #0x0
   10cc8:	cset	w0, eq  // eq = none
   10ccc:	and	w0, w0, #0xff
   10cd0:	and	x0, x0, #0xff
   10cd4:	cmp	x0, #0x0
   10cd8:	b.eq	10d04 <udev_util_encode_string@@LIBUDEV_183+0x54d4>  // b.none
   10cdc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10ce0:	add	x1, x0, #0x9ab
   10ce4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10ce8:	add	x4, x0, #0x238
   10cec:	mov	w3, #0x132                 	// #306
   10cf0:	mov	x2, x1
   10cf4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10cf8:	add	x1, x0, #0xc18
   10cfc:	mov	w0, #0x0                   	// #0
   10d00:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   10d04:	ldr	x0, [sp, #24]
   10d08:	ldr	w0, [x0]
   10d0c:	sub	w1, w0, #0x1
   10d10:	ldr	x0, [sp, #24]
   10d14:	str	w1, [x0]
   10d18:	ldr	x0, [sp, #24]
   10d1c:	ldr	w0, [x0]
   10d20:	cmp	w0, #0x0
   10d24:	b.eq	10d30 <udev_util_encode_string@@LIBUDEV_183+0x5500>  // b.none
   10d28:	mov	x0, #0x0                   	// #0
   10d2c:	b	10d38 <udev_util_encode_string@@LIBUDEV_183+0x5508>
   10d30:	ldr	x0, [sp, #24]
   10d34:	bl	10c1c <udev_util_encode_string@@LIBUDEV_183+0x53ec>
   10d38:	ldp	x29, x30, [sp], #32
   10d3c:	ret
   10d40:	stp	x29, x30, [sp, #-112]!
   10d44:	mov	x29, sp
   10d48:	str	x0, [sp, #24]
   10d4c:	str	x1, [sp, #16]
   10d50:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   10d54:	ldr	x0, [x0, #4016]
   10d58:	ldr	x1, [x0]
   10d5c:	str	x1, [sp, #104]
   10d60:	mov	x1, #0x0                   	// #0
   10d64:	str	xzr, [sp, #80]
   10d68:	ldr	x0, [sp, #24]
   10d6c:	cmp	x0, #0x0
   10d70:	cset	w0, ne  // ne = any
   10d74:	and	w0, w0, #0xff
   10d78:	and	x0, x0, #0xff
   10d7c:	cmp	x0, #0x0
   10d80:	b.ne	10db4 <udev_util_encode_string@@LIBUDEV_183+0x5584>  // b.any
   10d84:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10d88:	add	x1, x0, #0x9ab
   10d8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10d90:	add	x4, x0, #0x250
   10d94:	mov	w3, #0x139                 	// #313
   10d98:	mov	x2, x1
   10d9c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10da0:	add	x1, x0, #0x9d8
   10da4:	mov	w0, #0x0                   	// #0
   10da8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   10dac:	mov	w0, #0x1                   	// #1
   10db0:	b	10db8 <udev_util_encode_string@@LIBUDEV_183+0x5588>
   10db4:	mov	w0, #0x0                   	// #0
   10db8:	cmp	w0, #0x0
   10dbc:	b.eq	10dc8 <udev_util_encode_string@@LIBUDEV_183+0x5598>  // b.none
   10dc0:	mov	w0, #0xffffffea            	// #-22
   10dc4:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10dc8:	ldr	x0, [sp, #16]
   10dcc:	cmp	x0, #0x0
   10dd0:	cset	w0, ne  // ne = any
   10dd4:	and	w0, w0, #0xff
   10dd8:	and	x0, x0, #0xff
   10ddc:	cmp	x0, #0x0
   10de0:	b.ne	10e14 <udev_util_encode_string@@LIBUDEV_183+0x55e4>  // b.any
   10de4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10de8:	add	x1, x0, #0x9ab
   10dec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   10df0:	add	x4, x0, #0x250
   10df4:	mov	w3, #0x13a                 	// #314
   10df8:	mov	x2, x1
   10dfc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   10e00:	add	x1, x0, #0xc28
   10e04:	mov	w0, #0x0                   	// #0
   10e08:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   10e0c:	mov	w0, #0x1                   	// #1
   10e10:	b	10e18 <udev_util_encode_string@@LIBUDEV_183+0x55e8>
   10e14:	mov	w0, #0x0                   	// #0
   10e18:	cmp	w0, #0x0
   10e1c:	b.eq	10e28 <udev_util_encode_string@@LIBUDEV_183+0x55f8>  // b.none
   10e20:	mov	w0, #0xffffffea            	// #-22
   10e24:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10e28:	ldr	x0, [sp, #24]
   10e2c:	ldr	x0, [x0, #272]
   10e30:	bl	ff30 <udev_util_encode_string@@LIBUDEV_183+0x4700>
   10e34:	and	w0, w0, #0xff
   10e38:	cmp	w0, #0x0
   10e3c:	b.ne	10f28 <udev_util_encode_string@@LIBUDEV_183+0x56f8>  // b.any
   10e40:	add	x0, sp, #0x48
   10e44:	mov	x1, x0
   10e48:	ldr	x0, [sp, #16]
   10e4c:	bl	19ae4 <udev_util_encode_string@@LIBUDEV_183+0xe2b4>
   10e50:	str	w0, [sp, #44]
   10e54:	ldr	w0, [sp, #44]
   10e58:	cmp	w0, #0x0
   10e5c:	b.ge	10e68 <udev_util_encode_string@@LIBUDEV_183+0x5638>  // b.tcont
   10e60:	ldr	w0, [sp, #44]
   10e64:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10e68:	add	x0, sp, #0x50
   10e6c:	mov	x1, x0
   10e70:	ldr	x0, [sp, #16]
   10e74:	bl	1a208 <udev_util_encode_string@@LIBUDEV_183+0xe9d8>
   10e78:	str	w0, [sp, #44]
   10e7c:	ldr	w0, [sp, #44]
   10e80:	cmp	w0, #0x0
   10e84:	b.ge	10e9c <udev_util_encode_string@@LIBUDEV_183+0x566c>  // b.tcont
   10e88:	ldr	w0, [sp, #44]
   10e8c:	cmn	w0, #0x2
   10e90:	b.eq	10e9c <udev_util_encode_string@@LIBUDEV_183+0x566c>  // b.none
   10e94:	ldr	w0, [sp, #44]
   10e98:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10e9c:	mov	w0, #0xfffffffe            	// #-2
   10ea0:	str	w0, [sp, #88]
   10ea4:	str	xzr, [sp, #96]
   10ea8:	b	10ef4 <udev_util_encode_string@@LIBUDEV_183+0x56c4>
   10eac:	ldr	x0, [sp, #72]
   10eb0:	ldr	x1, [sp, #56]
   10eb4:	bl	5440 <strcmp@plt>
   10eb8:	cmp	w0, #0x0
   10ebc:	b.eq	10ec4 <udev_util_encode_string@@LIBUDEV_183+0x5694>  // b.none
   10ec0:	b	10ef4 <udev_util_encode_string@@LIBUDEV_183+0x56c4>
   10ec4:	ldr	x0, [sp, #64]
   10ec8:	cmp	x0, #0x0
   10ecc:	b.eq	10f2c <udev_util_encode_string@@LIBUDEV_183+0x56fc>  // b.none
   10ed0:	ldr	x0, [sp, #80]
   10ed4:	cmp	x0, #0x0
   10ed8:	b.ne	10ee0 <udev_util_encode_string@@LIBUDEV_183+0x56b0>  // b.any
   10edc:	b	10ef4 <udev_util_encode_string@@LIBUDEV_183+0x56c4>
   10ee0:	ldr	x0, [sp, #80]
   10ee4:	ldr	x1, [sp, #64]
   10ee8:	bl	5440 <strcmp@plt>
   10eec:	cmp	w0, #0x0
   10ef0:	b.eq	10f20 <udev_util_encode_string@@LIBUDEV_183+0x56f0>  // b.none
   10ef4:	ldr	x0, [sp, #24]
   10ef8:	ldr	x0, [x0, #272]
   10efc:	add	x3, sp, #0x38
   10f00:	add	x2, sp, #0x40
   10f04:	add	x1, sp, #0x58
   10f08:	bl	ff58 <udev_util_encode_string@@LIBUDEV_183+0x4728>
   10f0c:	and	w0, w0, #0xff
   10f10:	cmp	w0, #0x0
   10f14:	b.ne	10eac <udev_util_encode_string@@LIBUDEV_183+0x567c>  // b.any
   10f18:	mov	w0, #0x0                   	// #0
   10f1c:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10f20:	nop
   10f24:	b	10f2c <udev_util_encode_string@@LIBUDEV_183+0x56fc>
   10f28:	nop
   10f2c:	ldr	x0, [sp, #24]
   10f30:	ldr	x0, [x0, #280]
   10f34:	bl	ffd4 <udev_util_encode_string@@LIBUDEV_183+0x47a4>
   10f38:	and	w0, w0, #0xff
   10f3c:	cmp	w0, #0x0
   10f40:	b.eq	10f4c <udev_util_encode_string@@LIBUDEV_183+0x571c>  // b.none
   10f44:	mov	w0, #0x1                   	// #1
   10f48:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10f4c:	mov	w0, #0xfffffffe            	// #-2
   10f50:	str	w0, [sp, #88]
   10f54:	str	xzr, [sp, #96]
   10f58:	b	10f7c <udev_util_encode_string@@LIBUDEV_183+0x574c>
   10f5c:	ldr	x0, [sp, #48]
   10f60:	mov	x1, x0
   10f64:	ldr	x0, [sp, #16]
   10f68:	bl	1dc38 <udev_util_encode_string@@LIBUDEV_183+0x12408>
   10f6c:	cmp	w0, #0x0
   10f70:	b.le	10f7c <udev_util_encode_string@@LIBUDEV_183+0x574c>
   10f74:	mov	w0, #0x1                   	// #1
   10f78:	b	10fa0 <udev_util_encode_string@@LIBUDEV_183+0x5770>
   10f7c:	ldr	x0, [sp, #24]
   10f80:	ldr	x0, [x0, #280]
   10f84:	add	x2, sp, #0x30
   10f88:	add	x1, sp, #0x58
   10f8c:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   10f90:	and	w0, w0, #0xff
   10f94:	cmp	w0, #0x0
   10f98:	b.ne	10f5c <udev_util_encode_string@@LIBUDEV_183+0x572c>  // b.any
   10f9c:	mov	w0, #0x0                   	// #0
   10fa0:	mov	w1, w0
   10fa4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   10fa8:	ldr	x0, [x0, #4016]
   10fac:	ldr	x2, [sp, #104]
   10fb0:	ldr	x0, [x0]
   10fb4:	eor	x0, x2, x0
   10fb8:	cmp	x0, #0x0
   10fbc:	b.eq	10fc4 <udev_util_encode_string@@LIBUDEV_183+0x5794>  // b.none
   10fc0:	bl	5390 <__stack_chk_fail@plt>
   10fc4:	mov	w0, w1
   10fc8:	ldp	x29, x30, [sp], #112
   10fcc:	ret
   10fd0:	mov	x12, #0x2230                	// #8752
   10fd4:	sub	sp, sp, x12
   10fd8:	stp	x29, x30, [sp, #16]
   10fdc:	add	x29, sp, #0x10
   10fe0:	stp	x19, x20, [sp, #32]
   10fe4:	str	x21, [sp, #48]
   10fe8:	str	x0, [sp, #72]
   10fec:	str	x1, [sp, #64]
   10ff0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   10ff4:	ldr	x0, [x0, #4016]
   10ff8:	ldr	x1, [x0]
   10ffc:	str	x1, [sp, #8744]
   11000:	mov	x1, #0x0                   	// #0
   11004:	str	xzr, [sp, #248]
   11008:	add	x0, sp, #0x208
   1100c:	str	x0, [sp, #320]
   11010:	mov	x0, #0x2000                	// #8192
   11014:	str	x0, [sp, #328]
   11018:	stp	xzr, xzr, [sp, #336]
   1101c:	stp	xzr, xzr, [sp, #352]
   11020:	stp	xzr, xzr, [sp, #368]
   11024:	str	xzr, [sp, #384]
   11028:	add	x0, sp, #0x188
   1102c:	str	x0, [sp, #336]
   11030:	mov	w0, #0x80                  	// #128
   11034:	str	w0, [sp, #344]
   11038:	add	x0, sp, #0x140
   1103c:	str	x0, [sp, #352]
   11040:	mov	x0, #0x1                   	// #1
   11044:	str	x0, [sp, #360]
   11048:	add	x0, sp, #0x2, lsl #12
   1104c:	add	x0, x0, #0x208
   11050:	str	x0, [sp, #368]
   11054:	mov	x0, #0x20                  	// #32
   11058:	str	x0, [sp, #376]
   1105c:	strb	wzr, [sp, #95]
   11060:	ldr	x0, [sp, #64]
   11064:	cmp	x0, #0x0
   11068:	cset	w0, eq  // eq = none
   1106c:	and	w0, w0, #0xff
   11070:	and	x0, x0, #0xff
   11074:	cmp	x0, #0x0
   11078:	b.eq	110a4 <udev_util_encode_string@@LIBUDEV_183+0x5874>  // b.none
   1107c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11080:	add	x1, x0, #0x9ab
   11084:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11088:	add	x4, x0, #0x260
   1108c:	mov	w3, #0x17c                 	// #380
   11090:	mov	x2, x1
   11094:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11098:	add	x1, x0, #0xa00
   1109c:	mov	w0, #0x0                   	// #0
   110a0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   110a4:	ldr	x0, [sp, #72]
   110a8:	ldr	w0, [x0, #4]
   110ac:	add	x1, sp, #0x150
   110b0:	mov	w2, #0x0                   	// #0
   110b4:	bl	5020 <recvmsg@plt>
   110b8:	str	x0, [sp, #272]
   110bc:	ldr	x0, [sp, #272]
   110c0:	cmp	x0, #0x0
   110c4:	b.ge	11164 <udev_util_encode_string@@LIBUDEV_183+0x5934>  // b.tcont
   110c8:	bl	57d0 <__errno_location@plt>
   110cc:	ldr	w0, [x0]
   110d0:	cmp	w0, #0x4
   110d4:	b.eq	11154 <udev_util_encode_string@@LIBUDEV_183+0x5924>  // b.none
   110d8:	mov	w0, #0x7                   	// #7
   110dc:	str	w0, [sp, #236]
   110e0:	bl	57d0 <__errno_location@plt>
   110e4:	ldr	w0, [x0]
   110e8:	str	w0, [sp, #240]
   110ec:	str	wzr, [sp, #244]
   110f0:	ldr	w0, [sp, #244]
   110f4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   110f8:	mov	w1, w0
   110fc:	ldr	w0, [sp, #236]
   11100:	and	w0, w0, #0x7
   11104:	cmp	w1, w0
   11108:	b.lt	1114c <udev_util_encode_string@@LIBUDEV_183+0x591c>  // b.tstop
   1110c:	ldr	w0, [sp, #244]
   11110:	lsl	w1, w0, #10
   11114:	ldr	w0, [sp, #236]
   11118:	orr	w6, w1, w0
   1111c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11120:	add	x1, x0, #0x9ab
   11124:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11128:	add	x5, x0, #0xc30
   1112c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11130:	add	x4, x0, #0x280
   11134:	mov	w3, #0x181                 	// #385
   11138:	mov	x2, x1
   1113c:	ldr	w1, [sp, #240]
   11140:	mov	w0, w6
   11144:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   11148:	b	11154 <udev_util_encode_string@@LIBUDEV_183+0x5924>
   1114c:	ldr	w0, [sp, #240]
   11150:	cmp	w0, #0x0
   11154:	bl	57d0 <__errno_location@plt>
   11158:	ldr	w0, [x0]
   1115c:	neg	w19, w0
   11160:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11164:	ldr	x0, [sp, #272]
   11168:	cmp	x0, #0x1f
   1116c:	b.le	11180 <udev_util_encode_string@@LIBUDEV_183+0x5950>
   11170:	ldr	w0, [sp, #384]
   11174:	and	w0, w0, #0x20
   11178:	cmp	w0, #0x0
   1117c:	b.eq	11210 <udev_util_encode_string@@LIBUDEV_183+0x59e0>  // b.none
   11180:	mov	w0, #0x7                   	// #7
   11184:	str	w0, [sp, #224]
   11188:	mov	w0, #0x16                  	// #22
   1118c:	movk	w0, #0x4000, lsl #16
   11190:	str	w0, [sp, #228]
   11194:	str	wzr, [sp, #232]
   11198:	ldr	w0, [sp, #232]
   1119c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   111a0:	mov	w1, w0
   111a4:	ldr	w0, [sp, #224]
   111a8:	and	w0, w0, #0x7
   111ac:	cmp	w1, w0
   111b0:	b.lt	111f8 <udev_util_encode_string@@LIBUDEV_183+0x59c8>  // b.tstop
   111b4:	ldr	w0, [sp, #232]
   111b8:	lsl	w1, w0, #10
   111bc:	ldr	w0, [sp, #224]
   111c0:	orr	w6, w1, w0
   111c4:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   111c8:	add	x1, x0, #0x9ab
   111cc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   111d0:	add	x5, x0, #0xc68
   111d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   111d8:	add	x4, x0, #0x280
   111dc:	mov	w3, #0x186                 	// #390
   111e0:	mov	x2, x1
   111e4:	ldr	w1, [sp, #228]
   111e8:	mov	w0, w6
   111ec:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   111f0:	mov	w19, w0
   111f4:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   111f8:	ldr	w0, [sp, #228]
   111fc:	cmp	w0, #0x0
   11200:	cneg	w0, w0, lt  // lt = tstop
   11204:	and	w0, w0, #0xff
   11208:	neg	w19, w0
   1120c:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11210:	ldr	w0, [sp, #400]
   11214:	cmp	w0, #0x0
   11218:	b.ne	112d0 <udev_util_encode_string@@LIBUDEV_183+0x5aa0>  // b.any
   1121c:	ldr	x0, [sp, #72]
   11220:	ldr	w0, [x0, #140]
   11224:	cmp	w0, #0x0
   11228:	b.eq	11240 <udev_util_encode_string@@LIBUDEV_183+0x5a10>  // b.none
   1122c:	ldr	w1, [sp, #396]
   11230:	ldr	x0, [sp, #72]
   11234:	ldr	w0, [x0, #140]
   11238:	cmp	w1, w0
   1123c:	b.eq	11380 <udev_util_encode_string@@LIBUDEV_183+0x5b50>  // b.none
   11240:	mov	w0, #0x7                   	// #7
   11244:	str	w0, [sp, #108]
   11248:	mov	w0, #0xb                   	// #11
   1124c:	movk	w0, #0x4000, lsl #16
   11250:	str	w0, [sp, #112]
   11254:	str	wzr, [sp, #116]
   11258:	ldr	w0, [sp, #116]
   1125c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11260:	mov	w1, w0
   11264:	ldr	w0, [sp, #108]
   11268:	and	w0, w0, #0x7
   1126c:	cmp	w1, w0
   11270:	b.lt	112b8 <udev_util_encode_string@@LIBUDEV_183+0x5a88>  // b.tstop
   11274:	ldr	w0, [sp, #116]
   11278:	lsl	w1, w0, #10
   1127c:	ldr	w0, [sp, #108]
   11280:	orr	w6, w1, w0
   11284:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11288:	add	x1, x0, #0x9ab
   1128c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11290:	add	x5, x0, #0xc98
   11294:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11298:	add	x4, x0, #0x280
   1129c:	mov	w3, #0x18d                 	// #397
   112a0:	mov	x2, x1
   112a4:	ldr	w1, [sp, #112]
   112a8:	mov	w0, w6
   112ac:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   112b0:	mov	w19, w0
   112b4:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   112b8:	ldr	w0, [sp, #112]
   112bc:	cmp	w0, #0x0
   112c0:	cneg	w0, w0, lt  // lt = tstop
   112c4:	and	w0, w0, #0xff
   112c8:	neg	w19, w0
   112cc:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   112d0:	ldr	w0, [sp, #400]
   112d4:	cmp	w0, #0x1
   112d8:	b.ne	11380 <udev_util_encode_string@@LIBUDEV_183+0x5b50>  // b.any
   112dc:	ldr	w0, [sp, #396]
   112e0:	cmp	w0, #0x0
   112e4:	b.eq	11380 <udev_util_encode_string@@LIBUDEV_183+0x5b50>  // b.none
   112e8:	mov	w0, #0x7                   	// #7
   112ec:	str	w0, [sp, #96]
   112f0:	mov	w0, #0xb                   	// #11
   112f4:	movk	w0, #0x4000, lsl #16
   112f8:	str	w0, [sp, #100]
   112fc:	str	wzr, [sp, #104]
   11300:	ldr	w0, [sp, #104]
   11304:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11308:	mov	w1, w0
   1130c:	ldr	w0, [sp, #96]
   11310:	and	w0, w0, #0x7
   11314:	cmp	w1, w0
   11318:	b.lt	11368 <udev_util_encode_string@@LIBUDEV_183+0x5b38>  // b.tstop
   1131c:	ldr	w0, [sp, #104]
   11320:	lsl	w1, w0, #10
   11324:	ldr	w0, [sp, #96]
   11328:	orr	w7, w1, w0
   1132c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11330:	add	x1, x0, #0x9ab
   11334:	ldr	w0, [sp, #396]
   11338:	mov	w6, w0
   1133c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11340:	add	x5, x0, #0xcd0
   11344:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11348:	add	x4, x0, #0x280
   1134c:	mov	w3, #0x192                 	// #402
   11350:	mov	x2, x1
   11354:	ldr	w1, [sp, #100]
   11358:	mov	w0, w7
   1135c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   11360:	mov	w19, w0
   11364:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11368:	ldr	w0, [sp, #100]
   1136c:	cmp	w0, #0x0
   11370:	cneg	w0, w0, lt  // lt = tstop
   11374:	and	w0, w0, #0xff
   11378:	neg	w19, w0
   1137c:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11380:	ldr	x0, [sp, #376]
   11384:	cmp	x0, #0xf
   11388:	b.ls	11394 <udev_util_encode_string@@LIBUDEV_183+0x5b64>  // b.plast
   1138c:	ldr	x0, [sp, #368]
   11390:	b	11398 <udev_util_encode_string@@LIBUDEV_183+0x5b68>
   11394:	mov	x0, #0x0                   	// #0
   11398:	str	x0, [sp, #280]
   1139c:	ldr	x0, [sp, #280]
   113a0:	cmp	x0, #0x0
   113a4:	b.eq	113b8 <udev_util_encode_string@@LIBUDEV_183+0x5b88>  // b.none
   113a8:	ldr	x0, [sp, #280]
   113ac:	ldr	w0, [x0, #12]
   113b0:	cmp	w0, #0x2
   113b4:	b.eq	11448 <udev_util_encode_string@@LIBUDEV_183+0x5c18>  // b.none
   113b8:	mov	w0, #0x7                   	// #7
   113bc:	str	w0, [sp, #212]
   113c0:	mov	w0, #0xb                   	// #11
   113c4:	movk	w0, #0x4000, lsl #16
   113c8:	str	w0, [sp, #216]
   113cc:	str	wzr, [sp, #220]
   113d0:	ldr	w0, [sp, #220]
   113d4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   113d8:	mov	w1, w0
   113dc:	ldr	w0, [sp, #212]
   113e0:	and	w0, w0, #0x7
   113e4:	cmp	w1, w0
   113e8:	b.lt	11430 <udev_util_encode_string@@LIBUDEV_183+0x5c00>  // b.tstop
   113ec:	ldr	w0, [sp, #220]
   113f0:	lsl	w1, w0, #10
   113f4:	ldr	w0, [sp, #212]
   113f8:	orr	w6, w1, w0
   113fc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11400:	add	x1, x0, #0x9ab
   11404:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11408:	add	x5, x0, #0xd20
   1140c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11410:	add	x4, x0, #0x280
   11414:	mov	w3, #0x198                 	// #408
   11418:	mov	x2, x1
   1141c:	ldr	w1, [sp, #216]
   11420:	mov	w0, w6
   11424:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   11428:	mov	w19, w0
   1142c:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11430:	ldr	w0, [sp, #216]
   11434:	cmp	w0, #0x0
   11438:	cneg	w0, w0, lt  // lt = tstop
   1143c:	and	w0, w0, #0xff
   11440:	neg	w19, w0
   11444:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11448:	ldr	x0, [sp, #280]
   1144c:	add	x0, x0, #0x10
   11450:	str	x0, [sp, #288]
   11454:	ldr	x0, [sp, #288]
   11458:	ldr	w0, [x0, #4]
   1145c:	cmp	w0, #0x0
   11460:	b.eq	11500 <udev_util_encode_string@@LIBUDEV_183+0x5cd0>  // b.none
   11464:	mov	w0, #0x7                   	// #7
   11468:	str	w0, [sp, #200]
   1146c:	mov	w0, #0xb                   	// #11
   11470:	movk	w0, #0x4000, lsl #16
   11474:	str	w0, [sp, #204]
   11478:	str	wzr, [sp, #208]
   1147c:	ldr	w0, [sp, #208]
   11480:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11484:	mov	w1, w0
   11488:	ldr	w0, [sp, #200]
   1148c:	and	w0, w0, #0x7
   11490:	cmp	w1, w0
   11494:	b.lt	114e8 <udev_util_encode_string@@LIBUDEV_183+0x5cb8>  // b.tstop
   11498:	ldr	w0, [sp, #208]
   1149c:	lsl	w1, w0, #10
   114a0:	ldr	w0, [sp, #200]
   114a4:	orr	w7, w1, w0
   114a8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   114ac:	add	x1, x0, #0x9ab
   114b0:	ldr	x0, [sp, #288]
   114b4:	ldr	w0, [x0, #4]
   114b8:	mov	w6, w0
   114bc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   114c0:	add	x5, x0, #0xd68
   114c4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   114c8:	add	x4, x0, #0x280
   114cc:	mov	w3, #0x19d                 	// #413
   114d0:	mov	x2, x1
   114d4:	ldr	w1, [sp, #204]
   114d8:	mov	w0, w7
   114dc:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   114e0:	mov	w19, w0
   114e4:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   114e8:	ldr	w0, [sp, #204]
   114ec:	cmp	w0, #0x0
   114f0:	cneg	w0, w0, lt  // lt = tstop
   114f4:	and	w0, w0, #0xff
   114f8:	neg	w19, w0
   114fc:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11500:	add	x2, sp, #0x208
   11504:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11508:	add	x1, x0, #0xda0
   1150c:	mov	x0, x2
   11510:	bl	5440 <strcmp@plt>
   11514:	cmp	w0, #0x0
   11518:	b.ne	116ac <udev_util_encode_string@@LIBUDEV_183+0x5e7c>  // b.any
   1151c:	ldr	w19, [sp, #528]
   11520:	mov	w0, #0xcafe                	// #51966
   11524:	movk	w0, #0xfeed, lsl #16
   11528:	bl	fffc <udev_util_encode_string@@LIBUDEV_183+0x47cc>
   1152c:	cmp	w19, w0
   11530:	b.eq	115dc <udev_util_encode_string@@LIBUDEV_183+0x5dac>  // b.none
   11534:	mov	w0, #0x7                   	// #7
   11538:	str	w0, [sp, #156]
   1153c:	mov	w0, #0xb                   	// #11
   11540:	movk	w0, #0x4000, lsl #16
   11544:	str	w0, [sp, #160]
   11548:	str	wzr, [sp, #164]
   1154c:	ldr	w0, [sp, #164]
   11550:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11554:	mov	w1, w0
   11558:	ldr	w0, [sp, #156]
   1155c:	and	w0, w0, #0x7
   11560:	cmp	w1, w0
   11564:	b.lt	115c4 <udev_util_encode_string@@LIBUDEV_183+0x5d94>  // b.tstop
   11568:	ldr	w0, [sp, #164]
   1156c:	lsl	w1, w0, #10
   11570:	ldr	w0, [sp, #156]
   11574:	orr	w19, w1, w0
   11578:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1157c:	add	x20, x0, #0x9ab
   11580:	ldr	w21, [sp, #528]
   11584:	mov	w0, #0xcafe                	// #51966
   11588:	movk	w0, #0xfeed, lsl #16
   1158c:	bl	fffc <udev_util_encode_string@@LIBUDEV_183+0x47cc>
   11590:	mov	w7, w0
   11594:	mov	w6, w21
   11598:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1159c:	add	x5, x0, #0xda8
   115a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   115a4:	add	x4, x0, #0x280
   115a8:	mov	w3, #0x1a3                 	// #419
   115ac:	mov	x2, x20
   115b0:	ldr	w1, [sp, #160]
   115b4:	mov	w0, w19
   115b8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   115bc:	mov	w19, w0
   115c0:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   115c4:	ldr	w0, [sp, #160]
   115c8:	cmp	w0, #0x0
   115cc:	cneg	w0, w0, lt  // lt = tstop
   115d0:	and	w0, w0, #0xff
   115d4:	neg	w19, w0
   115d8:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   115dc:	ldr	w0, [sp, #536]
   115e0:	add	w0, w0, #0x20
   115e4:	mov	w1, w0
   115e8:	ldr	x0, [sp, #272]
   115ec:	cmp	x1, x0
   115f0:	b.ls	11694 <udev_util_encode_string@@LIBUDEV_183+0x5e64>  // b.plast
   115f4:	mov	w0, #0x7                   	// #7
   115f8:	str	w0, [sp, #144]
   115fc:	mov	w0, #0xb                   	// #11
   11600:	movk	w0, #0x4000, lsl #16
   11604:	str	w0, [sp, #148]
   11608:	str	wzr, [sp, #152]
   1160c:	ldr	w0, [sp, #152]
   11610:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11614:	mov	w1, w0
   11618:	ldr	w0, [sp, #144]
   1161c:	and	w0, w0, #0x7
   11620:	cmp	w1, w0
   11624:	b.lt	1167c <udev_util_encode_string@@LIBUDEV_183+0x5e4c>  // b.tstop
   11628:	ldr	w0, [sp, #152]
   1162c:	lsl	w1, w0, #10
   11630:	ldr	w0, [sp, #144]
   11634:	orr	w8, w1, w0
   11638:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1163c:	add	x1, x0, #0x9ab
   11640:	ldr	w0, [sp, #536]
   11644:	add	w0, w0, #0x20
   11648:	ldr	x7, [sp, #272]
   1164c:	mov	w6, w0
   11650:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11654:	add	x5, x0, #0xde0
   11658:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1165c:	add	x4, x0, #0x280
   11660:	mov	w3, #0x1a8                 	// #424
   11664:	mov	x2, x1
   11668:	ldr	w1, [sp, #148]
   1166c:	mov	w0, w8
   11670:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   11674:	mov	w19, w0
   11678:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   1167c:	ldr	w0, [sp, #148]
   11680:	cmp	w0, #0x0
   11684:	cneg	w0, w0, lt  // lt = tstop
   11688:	and	w0, w0, #0xff
   1168c:	neg	w19, w0
   11690:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11694:	ldr	w0, [sp, #536]
   11698:	mov	w0, w0
   1169c:	str	x0, [sp, #264]
   116a0:	mov	w0, #0x1                   	// #1
   116a4:	strb	w0, [sp, #95]
   116a8:	b	11814 <udev_util_encode_string@@LIBUDEV_183+0x5fe4>
   116ac:	add	x0, sp, #0x208
   116b0:	bl	5040 <strlen@plt>
   116b4:	add	x0, x0, #0x1
   116b8:	str	x0, [sp, #264]
   116bc:	ldr	x0, [sp, #264]
   116c0:	cmp	x0, #0x4
   116c4:	b.ls	116d8 <udev_util_encode_string@@LIBUDEV_183+0x5ea8>  // b.plast
   116c8:	ldr	x1, [sp, #264]
   116cc:	ldr	x0, [sp, #272]
   116d0:	cmp	x1, x0
   116d4:	b.lt	11768 <udev_util_encode_string@@LIBUDEV_183+0x5f38>  // b.tstop
   116d8:	mov	w0, #0x7                   	// #7
   116dc:	str	w0, [sp, #132]
   116e0:	mov	w0, #0xb                   	// #11
   116e4:	movk	w0, #0x4000, lsl #16
   116e8:	str	w0, [sp, #136]
   116ec:	str	wzr, [sp, #140]
   116f0:	ldr	w0, [sp, #140]
   116f4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   116f8:	mov	w1, w0
   116fc:	ldr	w0, [sp, #132]
   11700:	and	w0, w0, #0x7
   11704:	cmp	w1, w0
   11708:	b.lt	11750 <udev_util_encode_string@@LIBUDEV_183+0x5f20>  // b.tstop
   1170c:	ldr	w0, [sp, #140]
   11710:	lsl	w1, w0, #10
   11714:	ldr	w0, [sp, #132]
   11718:	orr	w6, w1, w0
   1171c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11720:	add	x1, x0, #0x9ab
   11724:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11728:	add	x5, x0, #0xe18
   1172c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11730:	add	x4, x0, #0x280
   11734:	mov	w3, #0x1b5                 	// #437
   11738:	mov	x2, x1
   1173c:	ldr	w1, [sp, #136]
   11740:	mov	w0, w6
   11744:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   11748:	mov	w19, w0
   1174c:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11750:	ldr	w0, [sp, #136]
   11754:	cmp	w0, #0x0
   11758:	cneg	w0, w0, lt  // lt = tstop
   1175c:	and	w0, w0, #0xff
   11760:	neg	w19, w0
   11764:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11768:	add	x2, sp, #0x208
   1176c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11770:	add	x1, x0, #0xe48
   11774:	mov	x0, x2
   11778:	bl	56f0 <strstr@plt>
   1177c:	cmp	x0, #0x0
   11780:	b.ne	11814 <udev_util_encode_string@@LIBUDEV_183+0x5fe4>  // b.any
   11784:	mov	w0, #0x7                   	// #7
   11788:	str	w0, [sp, #120]
   1178c:	mov	w0, #0xb                   	// #11
   11790:	movk	w0, #0x4000, lsl #16
   11794:	str	w0, [sp, #124]
   11798:	str	wzr, [sp, #128]
   1179c:	ldr	w0, [sp, #128]
   117a0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   117a4:	mov	w1, w0
   117a8:	ldr	w0, [sp, #120]
   117ac:	and	w0, w0, #0x7
   117b0:	cmp	w1, w0
   117b4:	b.lt	117fc <udev_util_encode_string@@LIBUDEV_183+0x5fcc>  // b.tstop
   117b8:	ldr	w0, [sp, #128]
   117bc:	lsl	w1, w0, #10
   117c0:	ldr	w0, [sp, #120]
   117c4:	orr	w6, w1, w0
   117c8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   117cc:	add	x1, x0, #0x9ab
   117d0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   117d4:	add	x5, x0, #0xe50
   117d8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   117dc:	add	x4, x0, #0x280
   117e0:	mov	w3, #0x1ba                 	// #442
   117e4:	mov	x2, x1
   117e8:	ldr	w1, [sp, #124]
   117ec:	mov	w0, w6
   117f0:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   117f4:	mov	w19, w0
   117f8:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   117fc:	ldr	w0, [sp, #124]
   11800:	cmp	w0, #0x0
   11804:	cneg	w0, w0, lt  // lt = tstop
   11808:	and	w0, w0, #0xff
   1180c:	neg	w19, w0
   11810:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   11814:	add	x1, sp, #0x208
   11818:	ldr	x0, [sp, #264]
   1181c:	add	x3, x1, x0
   11820:	ldr	x1, [sp, #272]
   11824:	ldr	x0, [sp, #264]
   11828:	sub	x0, x1, x0
   1182c:	mov	x1, x0
   11830:	add	x0, sp, #0xf8
   11834:	mov	x2, x1
   11838:	mov	x1, x3
   1183c:	bl	14aa4 <udev_util_encode_string@@LIBUDEV_183+0x9274>
   11840:	str	w0, [sp, #168]
   11844:	ldr	w0, [sp, #168]
   11848:	cmp	w0, #0x0
   1184c:	b.ge	118dc <udev_util_encode_string@@LIBUDEV_183+0x60ac>  // b.tcont
   11850:	mov	w0, #0x7                   	// #7
   11854:	str	w0, [sp, #188]
   11858:	ldr	w0, [sp, #168]
   1185c:	str	w0, [sp, #192]
   11860:	str	wzr, [sp, #196]
   11864:	ldr	w0, [sp, #196]
   11868:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1186c:	mov	w1, w0
   11870:	ldr	w0, [sp, #188]
   11874:	and	w0, w0, #0x7
   11878:	cmp	w1, w0
   1187c:	b.lt	118c4 <udev_util_encode_string@@LIBUDEV_183+0x6094>  // b.tstop
   11880:	ldr	w0, [sp, #196]
   11884:	lsl	w1, w0, #10
   11888:	ldr	w0, [sp, #188]
   1188c:	orr	w6, w1, w0
   11890:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11894:	add	x1, x0, #0x9ab
   11898:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1189c:	add	x5, x0, #0xe80
   118a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   118a4:	add	x4, x0, #0x280
   118a8:	mov	w3, #0x1c0                 	// #448
   118ac:	mov	x2, x1
   118b0:	ldr	w1, [sp, #192]
   118b4:	mov	w0, w6
   118b8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   118bc:	mov	w19, w0
   118c0:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   118c4:	ldr	w0, [sp, #192]
   118c8:	cmp	w0, #0x0
   118cc:	cneg	w0, w0, lt  // lt = tstop
   118d0:	and	w0, w0, #0xff
   118d4:	neg	w19, w0
   118d8:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   118dc:	ldrb	w0, [sp, #95]
   118e0:	cmp	w0, #0x0
   118e4:	b.eq	118f0 <udev_util_encode_string@@LIBUDEV_183+0x60c0>  // b.none
   118e8:	ldr	x0, [sp, #248]
   118ec:	bl	126c0 <udev_util_encode_string@@LIBUDEV_183+0x6e90>
   118f0:	ldr	x0, [sp, #248]
   118f4:	mov	x1, x0
   118f8:	ldr	x0, [sp, #72]
   118fc:	bl	10d40 <udev_util_encode_string@@LIBUDEV_183+0x5510>
   11900:	str	w0, [sp, #168]
   11904:	ldr	w0, [sp, #168]
   11908:	cmp	w0, #0x0
   1190c:	b.ge	119d4 <udev_util_encode_string@@LIBUDEV_183+0x61a4>  // b.tcont
   11910:	str	xzr, [sp, #256]
   11914:	ldr	x0, [sp, #248]
   11918:	str	x0, [sp, #312]
   1191c:	mov	w0, #0x7                   	// #7
   11920:	str	w0, [sp, #180]
   11924:	ldr	w0, [sp, #168]
   11928:	str	w0, [sp, #184]
   1192c:	ldr	x0, [sp, #312]
   11930:	cmp	x0, #0x0
   11934:	b.eq	11970 <udev_util_encode_string@@LIBUDEV_183+0x6140>  // b.none
   11938:	mov	w0, #0x0                   	// #0
   1193c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11940:	mov	w1, w0
   11944:	ldr	w0, [sp, #180]
   11948:	cmp	w0, w1
   1194c:	cset	w0, le
   11950:	and	w0, w0, #0xff
   11954:	and	x0, x0, #0xff
   11958:	cmp	x0, #0x0
   1195c:	b.eq	11970 <udev_util_encode_string@@LIBUDEV_183+0x6140>  // b.none
   11960:	add	x0, sp, #0x100
   11964:	mov	x1, x0
   11968:	ldr	x0, [sp, #312]
   1196c:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   11970:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11974:	add	x2, x0, #0x9ab
   11978:	ldr	x0, [sp, #256]
   1197c:	cmp	x0, #0x0
   11980:	b.eq	11990 <udev_util_encode_string@@LIBUDEV_183+0x6160>  // b.none
   11984:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11988:	add	x0, x0, #0xec8
   1198c:	b	11994 <udev_util_encode_string@@LIBUDEV_183+0x6164>
   11990:	mov	x0, #0x0                   	// #0
   11994:	ldr	x3, [sp, #256]
   11998:	adrp	x1, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1199c:	add	x1, x1, #0xed0
   119a0:	str	x1, [sp, #8]
   119a4:	str	xzr, [sp]
   119a8:	mov	x7, #0x0                   	// #0
   119ac:	mov	x6, x3
   119b0:	mov	x5, x0
   119b4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   119b8:	add	x4, x0, #0x280
   119bc:	mov	w3, #0x1c8                 	// #456
   119c0:	ldr	w1, [sp, #184]
   119c4:	ldr	w0, [sp, #180]
   119c8:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   119cc:	mov	w19, w0
   119d0:	b	11ab8 <udev_util_encode_string@@LIBUDEV_183+0x6288>
   119d4:	ldr	w0, [sp, #168]
   119d8:	cmp	w0, #0x0
   119dc:	b.ne	11a9c <udev_util_encode_string@@LIBUDEV_183+0x626c>  // b.any
   119e0:	str	xzr, [sp, #256]
   119e4:	ldr	x0, [sp, #248]
   119e8:	str	x0, [sp, #304]
   119ec:	mov	w0, #0x7                   	// #7
   119f0:	str	w0, [sp, #172]
   119f4:	str	wzr, [sp, #176]
   119f8:	ldr	x0, [sp, #304]
   119fc:	cmp	x0, #0x0
   11a00:	b.eq	11a3c <udev_util_encode_string@@LIBUDEV_183+0x620c>  // b.none
   11a04:	mov	w0, #0x0                   	// #0
   11a08:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   11a0c:	mov	w1, w0
   11a10:	ldr	w0, [sp, #172]
   11a14:	cmp	w0, w1
   11a18:	cset	w0, le
   11a1c:	and	w0, w0, #0xff
   11a20:	and	x0, x0, #0xff
   11a24:	cmp	x0, #0x0
   11a28:	b.eq	11a3c <udev_util_encode_string@@LIBUDEV_183+0x620c>  // b.none
   11a2c:	add	x0, sp, #0x100
   11a30:	mov	x1, x0
   11a34:	ldr	x0, [sp, #304]
   11a38:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   11a3c:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11a40:	add	x2, x0, #0x9ab
   11a44:	ldr	x0, [sp, #256]
   11a48:	cmp	x0, #0x0
   11a4c:	b.eq	11a5c <udev_util_encode_string@@LIBUDEV_183+0x622c>  // b.none
   11a50:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11a54:	add	x0, x0, #0xec8
   11a58:	b	11a60 <udev_util_encode_string@@LIBUDEV_183+0x6230>
   11a5c:	mov	x0, #0x0                   	// #0
   11a60:	ldr	x3, [sp, #256]
   11a64:	adrp	x1, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11a68:	add	x1, x1, #0xf18
   11a6c:	str	x1, [sp, #8]
   11a70:	str	xzr, [sp]
   11a74:	mov	x7, #0x0                   	// #0
   11a78:	mov	x6, x3
   11a7c:	mov	x5, x0
   11a80:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11a84:	add	x4, x0, #0x280
   11a88:	mov	w3, #0x1ca                 	// #458
   11a8c:	ldr	w1, [sp, #176]
   11a90:	ldr	w0, [sp, #172]
   11a94:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   11a98:	b	11ab4 <udev_util_encode_string@@LIBUDEV_183+0x6284>
   11a9c:	ldr	x0, [sp, #248]
   11aa0:	str	x0, [sp, #296]
   11aa4:	str	xzr, [sp, #248]
   11aa8:	ldr	x1, [sp, #296]
   11aac:	ldr	x0, [sp, #64]
   11ab0:	str	x1, [x0]
   11ab4:	ldr	w19, [sp, #168]
   11ab8:	add	x0, sp, #0xf8
   11abc:	bl	fd48 <udev_util_encode_string@@LIBUDEV_183+0x4518>
   11ac0:	mov	w1, w19
   11ac4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   11ac8:	ldr	x0, [x0, #4016]
   11acc:	ldr	x2, [sp, #8744]
   11ad0:	ldr	x0, [x0]
   11ad4:	eor	x0, x2, x0
   11ad8:	cmp	x0, #0x0
   11adc:	b.eq	11ae4 <udev_util_encode_string@@LIBUDEV_183+0x62b4>  // b.none
   11ae0:	bl	5390 <__stack_chk_fail@plt>
   11ae4:	mov	w0, w1
   11ae8:	ldp	x19, x20, [sp, #32]
   11aec:	ldr	x21, [sp, #48]
   11af0:	ldp	x29, x30, [sp, #16]
   11af4:	mov	x12, #0x2230                	// #8752
   11af8:	add	sp, sp, x12
   11afc:	ret
   11b00:	stp	x29, x30, [sp, #-32]!
   11b04:	mov	x29, sp
   11b08:	str	x0, [sp, #24]
   11b0c:	ldr	x0, [sp, #24]
   11b10:	bl	5040 <strlen@plt>
   11b14:	mov	w2, #0x0                   	// #0
   11b18:	mov	w1, w0
   11b1c:	ldr	x0, [sp, #24]
   11b20:	bl	22764 <udev_util_encode_string@@LIBUDEV_183+0x16f34>
   11b24:	ldp	x29, x30, [sp], #32
   11b28:	ret
   11b2c:	stp	x29, x30, [sp, #-48]!
   11b30:	mov	x29, sp
   11b34:	str	x0, [sp, #24]
   11b38:	str	xzr, [sp, #40]
   11b3c:	ldr	x0, [sp, #24]
   11b40:	bl	11b00 <udev_util_encode_string@@LIBUDEV_183+0x62d0>
   11b44:	str	w0, [sp, #36]
   11b48:	ldr	w0, [sp, #36]
   11b4c:	and	w0, w0, #0x3f
   11b50:	mov	x1, #0x1                   	// #1
   11b54:	lsl	x0, x1, x0
   11b58:	ldr	x1, [sp, #40]
   11b5c:	orr	x0, x1, x0
   11b60:	str	x0, [sp, #40]
   11b64:	ldr	w0, [sp, #36]
   11b68:	lsr	w0, w0, #6
   11b6c:	and	w0, w0, #0x3f
   11b70:	mov	x1, #0x1                   	// #1
   11b74:	lsl	x0, x1, x0
   11b78:	ldr	x1, [sp, #40]
   11b7c:	orr	x0, x1, x0
   11b80:	str	x0, [sp, #40]
   11b84:	ldr	w0, [sp, #36]
   11b88:	lsr	w0, w0, #12
   11b8c:	and	w0, w0, #0x3f
   11b90:	mov	x1, #0x1                   	// #1
   11b94:	lsl	x0, x1, x0
   11b98:	ldr	x1, [sp, #40]
   11b9c:	orr	x0, x1, x0
   11ba0:	str	x0, [sp, #40]
   11ba4:	ldr	w0, [sp, #36]
   11ba8:	lsr	w0, w0, #18
   11bac:	and	w0, w0, #0x3f
   11bb0:	mov	x1, #0x1                   	// #1
   11bb4:	lsl	x0, x1, x0
   11bb8:	ldr	x1, [sp, #40]
   11bbc:	orr	x0, x1, x0
   11bc0:	str	x0, [sp, #40]
   11bc4:	ldr	x0, [sp, #40]
   11bc8:	ldp	x29, x30, [sp], #48
   11bcc:	ret
   11bd0:	sub	sp, sp, #0x20
   11bd4:	str	x0, [sp, #24]
   11bd8:	str	x1, [sp, #16]
   11bdc:	strh	w2, [sp, #14]
   11be0:	str	w3, [sp, #8]
   11be4:	ldr	x0, [sp, #16]
   11be8:	ldr	w0, [x0]
   11bec:	add	w2, w0, #0x1
   11bf0:	ldr	x1, [sp, #16]
   11bf4:	str	w2, [x1]
   11bf8:	mov	w0, w0
   11bfc:	lsl	x0, x0, #3
   11c00:	ldr	x1, [sp, #24]
   11c04:	add	x0, x1, x0
   11c08:	str	xzr, [x0]
   11c0c:	ldrh	w1, [sp, #14]
   11c10:	strh	w1, [x0]
   11c14:	ldr	w1, [sp, #8]
   11c18:	str	w1, [x0, #4]
   11c1c:	nop
   11c20:	add	sp, sp, #0x20
   11c24:	ret
   11c28:	sub	sp, sp, #0x20
   11c2c:	str	x0, [sp, #24]
   11c30:	str	x1, [sp, #16]
   11c34:	strh	w2, [sp, #14]
   11c38:	str	w3, [sp, #8]
   11c3c:	strh	w4, [sp, #12]
   11c40:	strh	w5, [sp, #6]
   11c44:	ldr	x0, [sp, #16]
   11c48:	ldr	w0, [x0]
   11c4c:	add	w2, w0, #0x1
   11c50:	ldr	x1, [sp, #16]
   11c54:	str	w2, [x1]
   11c58:	mov	w0, w0
   11c5c:	lsl	x0, x0, #3
   11c60:	ldr	x1, [sp, #24]
   11c64:	add	x0, x1, x0
   11c68:	ldrh	w1, [sp, #12]
   11c6c:	and	w3, w1, #0xff
   11c70:	ldrh	w1, [sp, #6]
   11c74:	and	w2, w1, #0xff
   11c78:	ldrh	w1, [sp, #14]
   11c7c:	strh	w1, [x0]
   11c80:	mov	w1, w3
   11c84:	strb	w1, [x0, #2]
   11c88:	mov	w1, w2
   11c8c:	strb	w1, [x0, #3]
   11c90:	ldr	w1, [sp, #8]
   11c94:	str	w1, [x0, #4]
   11c98:	nop
   11c9c:	add	sp, sp, #0x20
   11ca0:	ret
   11ca4:	mov	x12, #0x1080                	// #4224
   11ca8:	sub	sp, sp, x12
   11cac:	stp	x29, x30, [sp]
   11cb0:	mov	x29, sp
   11cb4:	str	x0, [sp, #24]
   11cb8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   11cbc:	ldr	x0, [x0, #4016]
   11cc0:	ldr	x1, [x0]
   11cc4:	str	x1, [sp, #4216]
   11cc8:	mov	x1, #0x0                   	// #0
   11ccc:	add	x0, sp, #0x78
   11cd0:	mov	x1, #0x1000                	// #4096
   11cd4:	mov	x2, x1
   11cd8:	mov	w1, #0x0                   	// #0
   11cdc:	bl	5290 <memset@plt>
   11ce0:	str	wzr, [sp, #36]
   11ce4:	ldr	x0, [sp, #24]
   11ce8:	cmp	x0, #0x0
   11cec:	cset	w0, ne  // ne = any
   11cf0:	and	w0, w0, #0xff
   11cf4:	and	x0, x0, #0xff
   11cf8:	cmp	x0, #0x0
   11cfc:	b.ne	11d30 <udev_util_encode_string@@LIBUDEV_183+0x6500>  // b.any
   11d00:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11d04:	add	x1, x0, #0x9ab
   11d08:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   11d0c:	add	x4, x0, #0x2a0
   11d10:	mov	w3, #0x24f                 	// #591
   11d14:	mov	x2, x1
   11d18:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   11d1c:	add	x1, x0, #0x9d8
   11d20:	mov	w0, #0x0                   	// #0
   11d24:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   11d28:	mov	w0, #0x1                   	// #1
   11d2c:	b	11d34 <udev_util_encode_string@@LIBUDEV_183+0x6504>
   11d30:	mov	w0, #0x0                   	// #0
   11d34:	cmp	w0, #0x0
   11d38:	b.eq	11d44 <udev_util_encode_string@@LIBUDEV_183+0x6514>  // b.none
   11d3c:	mov	w0, #0xffffffea            	// #-22
   11d40:	b	120e0 <udev_util_encode_string@@LIBUDEV_183+0x68b0>
   11d44:	ldr	x0, [sp, #24]
   11d48:	ldrb	w0, [x0, #288]
   11d4c:	cmp	w0, #0x0
   11d50:	b.eq	11d5c <udev_util_encode_string@@LIBUDEV_183+0x652c>  // b.none
   11d54:	mov	w0, #0x0                   	// #0
   11d58:	b	120e0 <udev_util_encode_string@@LIBUDEV_183+0x68b0>
   11d5c:	ldr	x0, [sp, #24]
   11d60:	ldr	x0, [x0, #272]
   11d64:	bl	ff30 <udev_util_encode_string@@LIBUDEV_183+0x4700>
   11d68:	and	w0, w0, #0xff
   11d6c:	cmp	w0, #0x0
   11d70:	b.eq	11da0 <udev_util_encode_string@@LIBUDEV_183+0x6570>  // b.none
   11d74:	ldr	x0, [sp, #24]
   11d78:	ldr	x0, [x0, #280]
   11d7c:	bl	ffd4 <udev_util_encode_string@@LIBUDEV_183+0x47a4>
   11d80:	and	w0, w0, #0xff
   11d84:	cmp	w0, #0x0
   11d88:	b.eq	11da0 <udev_util_encode_string@@LIBUDEV_183+0x6570>  // b.none
   11d8c:	ldr	x0, [sp, #24]
   11d90:	mov	w1, #0x1                   	// #1
   11d94:	strb	w1, [x0, #288]
   11d98:	mov	w0, #0x0                   	// #0
   11d9c:	b	120e0 <udev_util_encode_string@@LIBUDEV_183+0x68b0>
   11da0:	add	x1, sp, #0x24
   11da4:	add	x0, sp, #0x78
   11da8:	mov	w3, #0x8                   	// #8
   11dac:	mov	w2, #0x20                  	// #32
   11db0:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11db4:	add	x1, sp, #0x24
   11db8:	add	x0, sp, #0x78
   11dbc:	mov	w5, #0x0                   	// #0
   11dc0:	mov	w4, #0x1                   	// #1
   11dc4:	mov	w3, #0xcafe                	// #51966
   11dc8:	movk	w3, #0xfeed, lsl #16
   11dcc:	mov	w2, #0x15                  	// #21
   11dd0:	bl	11c28 <udev_util_encode_string@@LIBUDEV_183+0x63f8>
   11dd4:	add	x1, sp, #0x24
   11dd8:	add	x0, sp, #0x78
   11ddc:	mov	w3, #0xffffffff            	// #-1
   11de0:	mov	w2, #0x6                   	// #6
   11de4:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11de8:	ldr	x0, [sp, #24]
   11dec:	ldr	x0, [x0, #280]
   11df0:	bl	ffd4 <udev_util_encode_string@@LIBUDEV_183+0x47a4>
   11df4:	and	w0, w0, #0xff
   11df8:	eor	w0, w0, #0x1
   11dfc:	and	w0, w0, #0xff
   11e00:	cmp	w0, #0x0
   11e04:	b.eq	11f38 <udev_util_encode_string@@LIBUDEV_183+0x6708>  // b.none
   11e08:	ldr	x0, [sp, #24]
   11e0c:	ldr	x0, [x0, #280]
   11e10:	bl	ffb8 <udev_util_encode_string@@LIBUDEV_183+0x4788>
   11e14:	str	w0, [sp, #40]
   11e18:	mov	w0, #0xfffffffe            	// #-2
   11e1c:	str	w0, [sp, #104]
   11e20:	str	xzr, [sp, #112]
   11e24:	b	11f04 <udev_util_encode_string@@LIBUDEV_183+0x66d4>
   11e28:	ldr	x0, [sp, #72]
   11e2c:	bl	11b2c <udev_util_encode_string@@LIBUDEV_183+0x62fc>
   11e30:	str	x0, [sp, #80]
   11e34:	ldr	x0, [sp, #80]
   11e38:	lsr	x0, x0, #32
   11e3c:	str	w0, [sp, #44]
   11e40:	ldr	x0, [sp, #80]
   11e44:	str	w0, [sp, #48]
   11e48:	add	x1, sp, #0x24
   11e4c:	add	x0, sp, #0x78
   11e50:	mov	w3, #0x20                  	// #32
   11e54:	mov	w2, #0x20                  	// #32
   11e58:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11e5c:	add	x1, sp, #0x24
   11e60:	add	x0, sp, #0x78
   11e64:	ldr	w3, [sp, #44]
   11e68:	mov	w2, #0x54                  	// #84
   11e6c:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11e70:	add	x1, sp, #0x24
   11e74:	add	x0, sp, #0x78
   11e78:	mov	w5, #0x3                   	// #3
   11e7c:	mov	w4, #0x0                   	// #0
   11e80:	ldr	w3, [sp, #44]
   11e84:	mov	w2, #0x15                  	// #21
   11e88:	bl	11c28 <udev_util_encode_string@@LIBUDEV_183+0x63f8>
   11e8c:	add	x1, sp, #0x24
   11e90:	add	x0, sp, #0x78
   11e94:	mov	w3, #0x24                  	// #36
   11e98:	mov	w2, #0x20                  	// #32
   11e9c:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11ea0:	add	x1, sp, #0x24
   11ea4:	add	x0, sp, #0x78
   11ea8:	ldr	w3, [sp, #48]
   11eac:	mov	w2, #0x54                  	// #84
   11eb0:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11eb4:	ldr	w0, [sp, #40]
   11eb8:	sub	w0, w0, #0x1
   11ebc:	str	w0, [sp, #40]
   11ec0:	ldr	w0, [sp, #40]
   11ec4:	and	w0, w0, #0xffff
   11ec8:	mov	w1, w0
   11ecc:	mov	w0, w1
   11ed0:	ubfiz	w0, w0, #1, #15
   11ed4:	add	w0, w0, w1
   11ed8:	ubfiz	w0, w0, #1, #15
   11edc:	and	w0, w0, #0xffff
   11ee0:	add	w0, w0, #0x1
   11ee4:	and	w2, w0, #0xffff
   11ee8:	add	x1, sp, #0x24
   11eec:	add	x0, sp, #0x78
   11ef0:	mov	w5, #0x0                   	// #0
   11ef4:	mov	w4, w2
   11ef8:	ldr	w3, [sp, #48]
   11efc:	mov	w2, #0x15                  	// #21
   11f00:	bl	11c28 <udev_util_encode_string@@LIBUDEV_183+0x63f8>
   11f04:	ldr	x0, [sp, #24]
   11f08:	ldr	x0, [x0, #280]
   11f0c:	add	x2, sp, #0x48
   11f10:	add	x1, sp, #0x68
   11f14:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   11f18:	and	w0, w0, #0xff
   11f1c:	cmp	w0, #0x0
   11f20:	b.ne	11e28 <udev_util_encode_string@@LIBUDEV_183+0x65f8>  // b.any
   11f24:	add	x1, sp, #0x24
   11f28:	add	x0, sp, #0x78
   11f2c:	mov	w3, #0x0                   	// #0
   11f30:	mov	w2, #0x6                   	// #6
   11f34:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11f38:	ldr	x0, [sp, #24]
   11f3c:	ldr	x0, [x0, #272]
   11f40:	bl	ff30 <udev_util_encode_string@@LIBUDEV_183+0x4700>
   11f44:	and	w0, w0, #0xff
   11f48:	eor	w0, w0, #0x1
   11f4c:	and	w0, w0, #0xff
   11f50:	cmp	w0, #0x0
   11f54:	b.eq	12070 <udev_util_encode_string@@LIBUDEV_183+0x6840>  // b.none
   11f58:	mov	w0, #0xfffffffe            	// #-2
   11f5c:	str	w0, [sp, #104]
   11f60:	str	xzr, [sp, #112]
   11f64:	b	12038 <udev_util_encode_string@@LIBUDEV_183+0x6808>
   11f68:	ldr	x0, [sp, #56]
   11f6c:	bl	11b00 <udev_util_encode_string@@LIBUDEV_183+0x62d0>
   11f70:	str	w0, [sp, #52]
   11f74:	add	x1, sp, #0x24
   11f78:	add	x0, sp, #0x78
   11f7c:	mov	w3, #0x18                  	// #24
   11f80:	mov	w2, #0x20                  	// #32
   11f84:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11f88:	ldr	x0, [sp, #64]
   11f8c:	cmp	x0, #0x0
   11f90:	b.ne	11fb4 <udev_util_encode_string@@LIBUDEV_183+0x6784>  // b.any
   11f94:	add	x1, sp, #0x24
   11f98:	add	x0, sp, #0x78
   11f9c:	mov	w5, #0x1                   	// #1
   11fa0:	mov	w4, #0x0                   	// #0
   11fa4:	ldr	w3, [sp, #52]
   11fa8:	mov	w2, #0x15                  	// #21
   11fac:	bl	11c28 <udev_util_encode_string@@LIBUDEV_183+0x63f8>
   11fb0:	b	1200c <udev_util_encode_string@@LIBUDEV_183+0x67dc>
   11fb4:	add	x1, sp, #0x24
   11fb8:	add	x0, sp, #0x78
   11fbc:	mov	w5, #0x3                   	// #3
   11fc0:	mov	w4, #0x0                   	// #0
   11fc4:	ldr	w3, [sp, #52]
   11fc8:	mov	w2, #0x15                  	// #21
   11fcc:	bl	11c28 <udev_util_encode_string@@LIBUDEV_183+0x63f8>
   11fd0:	add	x1, sp, #0x24
   11fd4:	add	x0, sp, #0x78
   11fd8:	mov	w3, #0x1c                  	// #28
   11fdc:	mov	w2, #0x20                  	// #32
   11fe0:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   11fe4:	ldr	x0, [sp, #64]
   11fe8:	bl	11b00 <udev_util_encode_string@@LIBUDEV_183+0x62d0>
   11fec:	str	w0, [sp, #52]
   11ff0:	add	x1, sp, #0x24
   11ff4:	add	x0, sp, #0x78
   11ff8:	mov	w5, #0x1                   	// #1
   11ffc:	mov	w4, #0x0                   	// #0
   12000:	ldr	w3, [sp, #52]
   12004:	mov	w2, #0x15                  	// #21
   12008:	bl	11c28 <udev_util_encode_string@@LIBUDEV_183+0x63f8>
   1200c:	add	x1, sp, #0x24
   12010:	add	x0, sp, #0x78
   12014:	mov	w3, #0xffffffff            	// #-1
   12018:	mov	w2, #0x6                   	// #6
   1201c:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   12020:	ldr	w0, [sp, #36]
   12024:	add	w0, w0, #0x1
   12028:	cmp	w0, #0x1ff
   1202c:	b.ls	12038 <udev_util_encode_string@@LIBUDEV_183+0x6808>  // b.plast
   12030:	mov	w0, #0xfffffff9            	// #-7
   12034:	b	120e0 <udev_util_encode_string@@LIBUDEV_183+0x68b0>
   12038:	ldr	x0, [sp, #24]
   1203c:	ldr	x0, [x0, #272]
   12040:	add	x3, sp, #0x38
   12044:	add	x2, sp, #0x40
   12048:	add	x1, sp, #0x68
   1204c:	bl	ff58 <udev_util_encode_string@@LIBUDEV_183+0x4728>
   12050:	and	w0, w0, #0xff
   12054:	cmp	w0, #0x0
   12058:	b.ne	11f68 <udev_util_encode_string@@LIBUDEV_183+0x6738>  // b.any
   1205c:	add	x1, sp, #0x24
   12060:	add	x0, sp, #0x78
   12064:	mov	w3, #0x0                   	// #0
   12068:	mov	w2, #0x6                   	// #6
   1206c:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   12070:	add	x1, sp, #0x24
   12074:	add	x0, sp, #0x78
   12078:	mov	w3, #0xffffffff            	// #-1
   1207c:	mov	w2, #0x6                   	// #6
   12080:	bl	11bd0 <udev_util_encode_string@@LIBUDEV_183+0x63a0>
   12084:	ldr	w0, [sp, #36]
   12088:	and	w0, w0, #0xffff
   1208c:	strh	w0, [sp, #88]
   12090:	add	x0, sp, #0x78
   12094:	str	x0, [sp, #96]
   12098:	ldr	x0, [sp, #24]
   1209c:	ldr	w0, [x0, #4]
   120a0:	add	x1, sp, #0x58
   120a4:	mov	w4, #0x10                  	// #16
   120a8:	mov	x3, x1
   120ac:	mov	w2, #0x1a                  	// #26
   120b0:	mov	w1, #0x1                   	// #1
   120b4:	bl	5230 <setsockopt@plt>
   120b8:	cmp	w0, #0x0
   120bc:	b.ge	120d0 <udev_util_encode_string@@LIBUDEV_183+0x68a0>  // b.tcont
   120c0:	bl	57d0 <__errno_location@plt>
   120c4:	ldr	w0, [x0]
   120c8:	neg	w0, w0
   120cc:	b	120e0 <udev_util_encode_string@@LIBUDEV_183+0x68b0>
   120d0:	ldr	x0, [sp, #24]
   120d4:	mov	w1, #0x1                   	// #1
   120d8:	strb	w1, [x0, #288]
   120dc:	mov	w0, #0x0                   	// #0
   120e0:	mov	w1, w0
   120e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   120e8:	ldr	x0, [x0, #4016]
   120ec:	ldr	x2, [sp, #4216]
   120f0:	ldr	x0, [x0]
   120f4:	eor	x0, x2, x0
   120f8:	cmp	x0, #0x0
   120fc:	b.eq	12104 <udev_util_encode_string@@LIBUDEV_183+0x68d4>  // b.none
   12100:	bl	5390 <__stack_chk_fail@plt>
   12104:	mov	w0, w1
   12108:	ldp	x29, x30, [sp]
   1210c:	mov	x12, #0x1080                	// #4224
   12110:	add	sp, sp, x12
   12114:	ret
   12118:	stp	x29, x30, [sp, #-96]!
   1211c:	mov	x29, sp
   12120:	str	x19, [sp, #16]
   12124:	str	x0, [sp, #56]
   12128:	str	x1, [sp, #48]
   1212c:	str	x2, [sp, #40]
   12130:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12134:	ldr	x0, [x0, #4016]
   12138:	ldr	x1, [x0]
   1213c:	str	x1, [sp, #88]
   12140:	mov	x1, #0x0                   	// #0
   12144:	str	xzr, [sp, #72]
   12148:	str	xzr, [sp, #80]
   1214c:	ldr	x0, [sp, #56]
   12150:	cmp	x0, #0x0
   12154:	cset	w0, ne  // ne = any
   12158:	and	w0, w0, #0xff
   1215c:	and	x0, x0, #0xff
   12160:	cmp	x0, #0x0
   12164:	b.ne	12198 <udev_util_encode_string@@LIBUDEV_183+0x6968>  // b.any
   12168:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1216c:	add	x1, x0, #0x9ab
   12170:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12174:	add	x4, x0, #0x2c0
   12178:	mov	w3, #0x2b0                 	// #688
   1217c:	mov	x2, x1
   12180:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   12184:	add	x1, x0, #0x9d8
   12188:	mov	w0, #0x0                   	// #0
   1218c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   12190:	mov	w0, #0x1                   	// #1
   12194:	b	1219c <udev_util_encode_string@@LIBUDEV_183+0x696c>
   12198:	mov	w0, #0x0                   	// #0
   1219c:	cmp	w0, #0x0
   121a0:	b.eq	121ac <udev_util_encode_string@@LIBUDEV_183+0x697c>  // b.none
   121a4:	mov	w19, #0xffffffea            	// #-22
   121a8:	b	122c4 <udev_util_encode_string@@LIBUDEV_183+0x6a94>
   121ac:	ldr	x0, [sp, #48]
   121b0:	cmp	x0, #0x0
   121b4:	cset	w0, ne  // ne = any
   121b8:	and	w0, w0, #0xff
   121bc:	and	x0, x0, #0xff
   121c0:	cmp	x0, #0x0
   121c4:	b.ne	121f8 <udev_util_encode_string@@LIBUDEV_183+0x69c8>  // b.any
   121c8:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   121cc:	add	x1, x0, #0x9ab
   121d0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   121d4:	add	x4, x0, #0x2c0
   121d8:	mov	w3, #0x2b1                 	// #689
   121dc:	mov	x2, x1
   121e0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   121e4:	add	x1, x0, #0xe0
   121e8:	mov	w0, #0x0                   	// #0
   121ec:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   121f0:	mov	w0, #0x1                   	// #1
   121f4:	b	121fc <udev_util_encode_string@@LIBUDEV_183+0x69cc>
   121f8:	mov	w0, #0x0                   	// #0
   121fc:	cmp	w0, #0x0
   12200:	b.eq	1220c <udev_util_encode_string@@LIBUDEV_183+0x69dc>  // b.none
   12204:	mov	w19, #0xffffffea            	// #-22
   12208:	b	122c4 <udev_util_encode_string@@LIBUDEV_183+0x6a94>
   1220c:	ldr	x0, [sp, #48]
   12210:	bl	5370 <strdup@plt>
   12214:	str	x0, [sp, #72]
   12218:	ldr	x0, [sp, #72]
   1221c:	cmp	x0, #0x0
   12220:	b.ne	1222c <udev_util_encode_string@@LIBUDEV_183+0x69fc>  // b.any
   12224:	mov	w19, #0xfffffff4            	// #-12
   12228:	b	122c4 <udev_util_encode_string@@LIBUDEV_183+0x6a94>
   1222c:	ldr	x0, [sp, #40]
   12230:	cmp	x0, #0x0
   12234:	b.eq	12258 <udev_util_encode_string@@LIBUDEV_183+0x6a28>  // b.none
   12238:	ldr	x0, [sp, #40]
   1223c:	bl	5370 <strdup@plt>
   12240:	str	x0, [sp, #80]
   12244:	ldr	x0, [sp, #80]
   12248:	cmp	x0, #0x0
   1224c:	b.ne	12258 <udev_util_encode_string@@LIBUDEV_183+0x6a28>  // b.any
   12250:	mov	w19, #0xfffffff4            	// #-12
   12254:	b	122c4 <udev_util_encode_string@@LIBUDEV_183+0x6a94>
   12258:	ldr	x0, [sp, #56]
   1225c:	add	x0, x0, #0x110
   12260:	mov	x1, #0x0                   	// #0
   12264:	bl	286f0 <udev_util_encode_string@@LIBUDEV_183+0x1cec0>
   12268:	str	w0, [sp, #68]
   1226c:	ldr	w0, [sp, #68]
   12270:	cmp	w0, #0x0
   12274:	b.ge	12280 <udev_util_encode_string@@LIBUDEV_183+0x6a50>  // b.tcont
   12278:	ldr	w19, [sp, #68]
   1227c:	b	122c4 <udev_util_encode_string@@LIBUDEV_183+0x6a94>
   12280:	ldr	x0, [sp, #56]
   12284:	ldr	x0, [x0, #272]
   12288:	ldr	x1, [sp, #72]
   1228c:	ldr	x2, [sp, #80]
   12290:	bl	2969c <udev_util_encode_string@@LIBUDEV_183+0x1de6c>
   12294:	str	w0, [sp, #68]
   12298:	ldr	w0, [sp, #68]
   1229c:	cmp	w0, #0x0
   122a0:	b.ge	122ac <udev_util_encode_string@@LIBUDEV_183+0x6a7c>  // b.tcont
   122a4:	ldr	w19, [sp, #68]
   122a8:	b	122c4 <udev_util_encode_string@@LIBUDEV_183+0x6a94>
   122ac:	str	xzr, [sp, #80]
   122b0:	ldr	x0, [sp, #80]
   122b4:	str	x0, [sp, #72]
   122b8:	ldr	x0, [sp, #56]
   122bc:	strb	wzr, [x0, #288]
   122c0:	mov	w19, #0x0                   	// #0
   122c4:	add	x0, sp, #0x50
   122c8:	bl	fdd0 <udev_util_encode_string@@LIBUDEV_183+0x45a0>
   122cc:	add	x0, sp, #0x48
   122d0:	bl	fdd0 <udev_util_encode_string@@LIBUDEV_183+0x45a0>
   122d4:	mov	w1, w19
   122d8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   122dc:	ldr	x0, [x0, #4016]
   122e0:	ldr	x2, [sp, #88]
   122e4:	ldr	x0, [x0]
   122e8:	eor	x0, x2, x0
   122ec:	cmp	x0, #0x0
   122f0:	b.eq	122f8 <udev_util_encode_string@@LIBUDEV_183+0x6ac8>  // b.none
   122f4:	bl	5390 <__stack_chk_fail@plt>
   122f8:	mov	w0, w1
   122fc:	ldr	x19, [sp, #16]
   12300:	ldp	x29, x30, [sp], #96
   12304:	ret
   12308:	stp	x29, x30, [sp, #-80]!
   1230c:	mov	x29, sp
   12310:	str	x19, [sp, #16]
   12314:	str	x0, [sp, #40]
   12318:	str	x1, [sp, #32]
   1231c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12320:	ldr	x0, [x0, #4016]
   12324:	ldr	x1, [x0]
   12328:	str	x1, [sp, #72]
   1232c:	mov	x1, #0x0                   	// #0
   12330:	str	xzr, [sp, #56]
   12334:	ldr	x0, [sp, #40]
   12338:	cmp	x0, #0x0
   1233c:	cset	w0, ne  // ne = any
   12340:	and	w0, w0, #0xff
   12344:	and	x0, x0, #0xff
   12348:	cmp	x0, #0x0
   1234c:	b.ne	12380 <udev_util_encode_string@@LIBUDEV_183+0x6b50>  // b.any
   12350:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   12354:	add	x1, x0, #0x9ab
   12358:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1235c:	add	x4, x0, #0x2f8
   12360:	mov	w3, #0x2cf                 	// #719
   12364:	mov	x2, x1
   12368:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   1236c:	add	x1, x0, #0x9d8
   12370:	mov	w0, #0x0                   	// #0
   12374:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   12378:	mov	w0, #0x1                   	// #1
   1237c:	b	12384 <udev_util_encode_string@@LIBUDEV_183+0x6b54>
   12380:	mov	w0, #0x0                   	// #0
   12384:	cmp	w0, #0x0
   12388:	b.eq	12394 <udev_util_encode_string@@LIBUDEV_183+0x6b64>  // b.none
   1238c:	mov	w19, #0xffffffea            	// #-22
   12390:	b	12498 <udev_util_encode_string@@LIBUDEV_183+0x6c68>
   12394:	ldr	x0, [sp, #32]
   12398:	cmp	x0, #0x0
   1239c:	cset	w0, ne  // ne = any
   123a0:	and	w0, w0, #0xff
   123a4:	and	x0, x0, #0xff
   123a8:	cmp	x0, #0x0
   123ac:	b.ne	123e0 <udev_util_encode_string@@LIBUDEV_183+0x6bb0>  // b.any
   123b0:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   123b4:	add	x1, x0, #0x9ab
   123b8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   123bc:	add	x4, x0, #0x2f8
   123c0:	mov	w3, #0x2d0                 	// #720
   123c4:	mov	x2, x1
   123c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   123cc:	add	x1, x0, #0xf0
   123d0:	mov	w0, #0x0                   	// #0
   123d4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   123d8:	mov	w0, #0x1                   	// #1
   123dc:	b	123e4 <udev_util_encode_string@@LIBUDEV_183+0x6bb4>
   123e0:	mov	w0, #0x0                   	// #0
   123e4:	cmp	w0, #0x0
   123e8:	b.eq	123f4 <udev_util_encode_string@@LIBUDEV_183+0x6bc4>  // b.none
   123ec:	mov	w19, #0xffffffea            	// #-22
   123f0:	b	12498 <udev_util_encode_string@@LIBUDEV_183+0x6c68>
   123f4:	ldr	x0, [sp, #32]
   123f8:	bl	5370 <strdup@plt>
   123fc:	str	x0, [sp, #56]
   12400:	ldr	x0, [sp, #56]
   12404:	cmp	x0, #0x0
   12408:	b.ne	12414 <udev_util_encode_string@@LIBUDEV_183+0x6be4>  // b.any
   1240c:	mov	w19, #0xfffffff4            	// #-12
   12410:	b	12498 <udev_util_encode_string@@LIBUDEV_183+0x6c68>
   12414:	ldr	x0, [sp, #40]
   12418:	add	x2, x0, #0x118
   1241c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12420:	ldr	x1, [x0, #4064]
   12424:	mov	x0, x2
   12428:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
   1242c:	str	w0, [sp, #52]
   12430:	ldr	w0, [sp, #52]
   12434:	cmp	w0, #0x0
   12438:	b.ge	12444 <udev_util_encode_string@@LIBUDEV_183+0x6c14>  // b.tcont
   1243c:	ldr	w19, [sp, #52]
   12440:	b	12498 <udev_util_encode_string@@LIBUDEV_183+0x6c68>
   12444:	ldr	x0, [sp, #40]
   12448:	ldr	x0, [x0, #280]
   1244c:	ldr	x1, [sp, #56]
   12450:	bl	297dc <udev_util_encode_string@@LIBUDEV_183+0x1dfac>
   12454:	str	w0, [sp, #52]
   12458:	ldr	w0, [sp, #52]
   1245c:	cmn	w0, #0x11
   12460:	b.ne	1246c <udev_util_encode_string@@LIBUDEV_183+0x6c3c>  // b.any
   12464:	mov	w19, #0x0                   	// #0
   12468:	b	12498 <udev_util_encode_string@@LIBUDEV_183+0x6c68>
   1246c:	ldr	w0, [sp, #52]
   12470:	cmp	w0, #0x0
   12474:	b.ge	12480 <udev_util_encode_string@@LIBUDEV_183+0x6c50>  // b.tcont
   12478:	ldr	w19, [sp, #52]
   1247c:	b	12498 <udev_util_encode_string@@LIBUDEV_183+0x6c68>
   12480:	ldr	x0, [sp, #56]
   12484:	str	x0, [sp, #64]
   12488:	str	xzr, [sp, #56]
   1248c:	ldr	x0, [sp, #40]
   12490:	strb	wzr, [x0, #288]
   12494:	mov	w19, #0x0                   	// #0
   12498:	add	x0, sp, #0x38
   1249c:	bl	fdd0 <udev_util_encode_string@@LIBUDEV_183+0x45a0>
   124a0:	mov	w1, w19
   124a4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   124a8:	ldr	x0, [x0, #4016]
   124ac:	ldr	x2, [sp, #72]
   124b0:	ldr	x0, [x0]
   124b4:	eor	x0, x2, x0
   124b8:	cmp	x0, #0x0
   124bc:	b.eq	124c4 <udev_util_encode_string@@LIBUDEV_183+0x6c94>  // b.none
   124c0:	bl	5390 <__stack_chk_fail@plt>
   124c4:	mov	w0, w1
   124c8:	ldr	x19, [sp, #16]
   124cc:	ldp	x29, x30, [sp], #80
   124d0:	ret
   124d4:	stp	x29, x30, [sp, #-32]!
   124d8:	mov	x29, sp
   124dc:	str	x0, [sp, #24]
   124e0:	ldr	x0, [sp, #24]
   124e4:	cmp	x0, #0x0
   124e8:	cset	w0, ne  // ne = any
   124ec:	and	w0, w0, #0xff
   124f0:	and	x0, x0, #0xff
   124f4:	cmp	x0, #0x0
   124f8:	b.ne	1252c <udev_util_encode_string@@LIBUDEV_183+0x6cfc>  // b.any
   124fc:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   12500:	add	x1, x0, #0x9ab
   12504:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12508:	add	x4, x0, #0x320
   1250c:	mov	w3, #0x2e9                 	// #745
   12510:	mov	x2, x1
   12514:	adrp	x0, 37000 <udev_util_encode_string@@LIBUDEV_183+0x2b7d0>
   12518:	add	x1, x0, #0x9d8
   1251c:	mov	w0, #0x0                   	// #0
   12520:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   12524:	mov	w0, #0x1                   	// #1
   12528:	b	12530 <udev_util_encode_string@@LIBUDEV_183+0x6d00>
   1252c:	mov	w0, #0x0                   	// #0
   12530:	cmp	w0, #0x0
   12534:	b.eq	12540 <udev_util_encode_string@@LIBUDEV_183+0x6d10>  // b.none
   12538:	mov	w0, #0xffffffea            	// #-22
   1253c:	b	125bc <udev_util_encode_string@@LIBUDEV_183+0x6d8c>
   12540:	ldr	x0, [sp, #24]
   12544:	ldr	x0, [x0, #272]
   12548:	bl	fee8 <udev_util_encode_string@@LIBUDEV_183+0x46b8>
   1254c:	mov	x1, x0
   12550:	ldr	x0, [sp, #24]
   12554:	str	x1, [x0, #272]
   12558:	ldr	x0, [sp, #24]
   1255c:	ldr	x0, [x0, #280]
   12560:	bl	ff90 <udev_util_encode_string@@LIBUDEV_183+0x4760>
   12564:	mov	x1, x0
   12568:	ldr	x0, [sp, #24]
   1256c:	str	x1, [x0, #280]
   12570:	ldr	x0, [sp, #24]
   12574:	ldr	w5, [x0, #4]
   12578:	mov	w4, #0x10                  	// #16
   1257c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12580:	add	x3, x0, #0x340
   12584:	mov	w2, #0x1b                  	// #27
   12588:	mov	w1, #0x1                   	// #1
   1258c:	mov	w0, w5
   12590:	bl	5230 <setsockopt@plt>
   12594:	cmp	w0, #0x0
   12598:	b.ge	125ac <udev_util_encode_string@@LIBUDEV_183+0x6d7c>  // b.tcont
   1259c:	bl	57d0 <__errno_location@plt>
   125a0:	ldr	w0, [x0]
   125a4:	neg	w0, w0
   125a8:	b	125bc <udev_util_encode_string@@LIBUDEV_183+0x6d8c>
   125ac:	ldr	x0, [sp, #24]
   125b0:	mov	w1, #0x1                   	// #1
   125b4:	strb	w1, [x0, #288]
   125b8:	mov	w0, #0x0                   	// #0
   125bc:	ldp	x29, x30, [sp], #32
   125c0:	ret
   125c4:	stp	x29, x30, [sp, #-32]!
   125c8:	mov	x29, sp
   125cc:	str	x0, [sp, #24]
   125d0:	ldr	x0, [sp, #24]
   125d4:	ldr	x0, [x0]
   125d8:	cmp	x0, #0x0
   125dc:	b.eq	125ec <udev_util_encode_string@@LIBUDEV_183+0x6dbc>  // b.none
   125e0:	ldr	x0, [sp, #24]
   125e4:	ldr	x0, [x0]
   125e8:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
   125ec:	nop
   125f0:	ldp	x29, x30, [sp], #32
   125f4:	ret
   125f8:	sub	sp, sp, #0x10
   125fc:	str	x0, [sp, #8]
   12600:	str	x1, [sp]
   12604:	ldr	x0, [sp]
   12608:	cmp	x0, #0x0
   1260c:	cset	w0, ne  // ne = any
   12610:	and	w0, w0, #0xff
   12614:	and	x0, x0, #0xff
   12618:	cmp	x0, #0x0
   1261c:	b.eq	12660 <udev_util_encode_string@@LIBUDEV_183+0x6e30>  // b.none
   12620:	mov	x2, #0x0                   	// #0
   12624:	ldr	x1, [sp, #8]
   12628:	ldr	x0, [sp]
   1262c:	umulh	x0, x1, x0
   12630:	cmp	x0, #0x0
   12634:	b.eq	1263c <udev_util_encode_string@@LIBUDEV_183+0x6e0c>  // b.none
   12638:	mov	x2, #0x1                   	// #1
   1263c:	mov	x0, x2
   12640:	cmp	x0, #0x0
   12644:	cset	w0, ne  // ne = any
   12648:	and	w0, w0, #0xff
   1264c:	and	x0, x0, #0xff
   12650:	cmp	x0, #0x0
   12654:	b.eq	12660 <udev_util_encode_string@@LIBUDEV_183+0x6e30>  // b.none
   12658:	mov	w0, #0x1                   	// #1
   1265c:	b	12664 <udev_util_encode_string@@LIBUDEV_183+0x6e34>
   12660:	mov	w0, #0x0                   	// #0
   12664:	and	w0, w0, #0x1
   12668:	and	w0, w0, #0xff
   1266c:	add	sp, sp, #0x10
   12670:	ret
   12674:	stp	x29, x30, [sp, #-32]!
   12678:	mov	x29, sp
   1267c:	str	x0, [sp, #24]
   12680:	str	x1, [sp, #16]
   12684:	ldr	x2, [sp, #16]
   12688:	mov	w1, #0x0                   	// #0
   1268c:	ldr	x0, [sp, #24]
   12690:	bl	302ec <udev_util_encode_string@@LIBUDEV_183+0x24abc>
   12694:	ldp	x29, x30, [sp], #32
   12698:	ret
   1269c:	stp	x29, x30, [sp, #-32]!
   126a0:	mov	x29, sp
   126a4:	str	x0, [sp, #24]
   126a8:	str	x1, [sp, #16]
   126ac:	ldr	x1, [sp, #16]
   126b0:	ldr	x0, [sp, #24]
   126b4:	bl	30678 <udev_util_encode_string@@LIBUDEV_183+0x24e48>
   126b8:	ldp	x29, x30, [sp], #32
   126bc:	ret
   126c0:	stp	x29, x30, [sp, #-32]!
   126c4:	mov	x29, sp
   126c8:	str	x0, [sp, #24]
   126cc:	ldr	x0, [sp, #24]
   126d0:	cmp	x0, #0x0
   126d4:	cset	w0, eq  // eq = none
   126d8:	and	w0, w0, #0xff
   126dc:	and	x0, x0, #0xff
   126e0:	cmp	x0, #0x0
   126e4:	b.eq	12710 <udev_util_encode_string@@LIBUDEV_183+0x6ee0>  // b.none
   126e8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   126ec:	add	x1, x0, #0x353
   126f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   126f4:	add	x4, x0, #0xa90
   126f8:	mov	w3, #0x38                  	// #56
   126fc:	mov	x2, x1
   12700:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12704:	add	x1, x0, #0x380
   12708:	mov	w0, #0x0                   	// #0
   1270c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12710:	ldr	x0, [sp, #24]
   12714:	ldrb	w1, [x0, #331]
   12718:	orr	w1, w1, #0x1
   1271c:	strb	w1, [x0, #331]
   12720:	nop
   12724:	ldp	x29, x30, [sp], #32
   12728:	ret
   1272c:	stp	x29, x30, [sp, #-32]!
   12730:	mov	x29, sp
   12734:	str	x0, [sp, #24]
   12738:	ldr	x0, [sp, #24]
   1273c:	cmp	x0, #0x0
   12740:	cset	w0, eq  // eq = none
   12744:	and	w0, w0, #0xff
   12748:	and	x0, x0, #0xff
   1274c:	cmp	x0, #0x0
   12750:	b.eq	1277c <udev_util_encode_string@@LIBUDEV_183+0x6f4c>  // b.none
   12754:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12758:	add	x1, x0, #0x353
   1275c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12760:	add	x4, x0, #0xab0
   12764:	mov	w3, #0x4b                  	// #75
   12768:	mov	x2, x1
   1276c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12770:	add	x1, x0, #0x380
   12774:	mov	w0, #0x0                   	// #0
   12778:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1277c:	ldr	x0, [sp, #24]
   12780:	ldr	x0, [x0, #40]
   12784:	ldp	x29, x30, [sp], #32
   12788:	ret
   1278c:	stp	x29, x30, [sp, #-32]!
   12790:	mov	x29, sp
   12794:	str	x0, [sp, #24]
   12798:	ldr	x0, [sp, #24]
   1279c:	cmp	x0, #0x0
   127a0:	cset	w0, eq  // eq = none
   127a4:	and	w0, w0, #0xff
   127a8:	and	x0, x0, #0xff
   127ac:	cmp	x0, #0x0
   127b0:	b.eq	127dc <udev_util_encode_string@@LIBUDEV_183+0x6fac>  // b.none
   127b4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   127b8:	add	x1, x0, #0x353
   127bc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   127c0:	add	x4, x0, #0xad8
   127c4:	mov	w3, #0x51                  	// #81
   127c8:	mov	x2, x1
   127cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   127d0:	add	x1, x0, #0x380
   127d4:	mov	w0, #0x0                   	// #0
   127d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   127dc:	ldr	x0, [sp, #24]
   127e0:	ldr	x0, [x0, #120]
   127e4:	ldp	x29, x30, [sp], #32
   127e8:	ret
   127ec:	stp	x29, x30, [sp, #-32]!
   127f0:	mov	x29, sp
   127f4:	str	x0, [sp, #24]
   127f8:	ldr	x0, [sp, #24]
   127fc:	cmp	x0, #0x0
   12800:	cset	w0, eq  // eq = none
   12804:	and	w0, w0, #0xff
   12808:	and	x0, x0, #0xff
   1280c:	cmp	x0, #0x0
   12810:	b.eq	1283c <udev_util_encode_string@@LIBUDEV_183+0x700c>  // b.none
   12814:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12818:	add	x1, x0, #0x353
   1281c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12820:	add	x4, x0, #0xaf8
   12824:	mov	w3, #0x57                  	// #87
   12828:	mov	x2, x1
   1282c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12830:	add	x1, x0, #0x380
   12834:	mov	w0, #0x0                   	// #0
   12838:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1283c:	ldr	x0, [sp, #24]
   12840:	ldr	x0, [x0, #160]
   12844:	ldp	x29, x30, [sp], #32
   12848:	ret
   1284c:	stp	x29, x30, [sp, #-48]!
   12850:	mov	x29, sp
   12854:	str	x0, [sp, #24]
   12858:	str	x1, [sp, #16]
   1285c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12860:	ldr	x0, [x0, #4016]
   12864:	ldr	x1, [x0]
   12868:	str	x1, [sp, #40]
   1286c:	mov	x1, #0x0                   	// #0
   12870:	ldr	x0, [sp, #24]
   12874:	cmp	x0, #0x0
   12878:	cset	w0, eq  // eq = none
   1287c:	and	w0, w0, #0xff
   12880:	and	x0, x0, #0xff
   12884:	cmp	x0, #0x0
   12888:	b.eq	128b4 <udev_util_encode_string@@LIBUDEV_183+0x7084>  // b.none
   1288c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12890:	add	x1, x0, #0x353
   12894:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12898:	add	x4, x0, #0xb18
   1289c:	mov	w3, #0x84                  	// #132
   128a0:	mov	x2, x1
   128a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   128a8:	add	x1, x0, #0x380
   128ac:	mov	w0, #0x0                   	// #0
   128b0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   128b4:	ldr	x0, [sp, #16]
   128b8:	cmp	x0, #0x0
   128bc:	cset	w0, eq  // eq = none
   128c0:	and	w0, w0, #0xff
   128c4:	and	x0, x0, #0xff
   128c8:	cmp	x0, #0x0
   128cc:	b.eq	128f8 <udev_util_encode_string@@LIBUDEV_183+0x70c8>  // b.none
   128d0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   128d4:	add	x1, x0, #0x353
   128d8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   128dc:	add	x4, x0, #0xb18
   128e0:	mov	w3, #0x85                  	// #133
   128e4:	mov	x2, x1
   128e8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   128ec:	add	x1, x0, #0x390
   128f0:	mov	w0, #0x0                   	// #0
   128f4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   128f8:	add	x0, sp, #0x20
   128fc:	mov	x1, x0
   12900:	ldr	x0, [sp, #16]
   12904:	bl	12674 <udev_util_encode_string@@LIBUDEV_183+0x6e44>
   12908:	str	w0, [sp, #36]
   1290c:	ldr	w0, [sp, #36]
   12910:	cmp	w0, #0x0
   12914:	b.ge	12920 <udev_util_encode_string@@LIBUDEV_183+0x70f0>  // b.tcont
   12918:	ldr	w0, [sp, #36]
   1291c:	b	1295c <udev_util_encode_string@@LIBUDEV_183+0x712c>
   12920:	ldr	x2, [sp, #16]
   12924:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12928:	add	x1, x0, #0x398
   1292c:	ldr	x0, [sp, #24]
   12930:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   12934:	str	w0, [sp, #36]
   12938:	ldr	w0, [sp, #36]
   1293c:	cmp	w0, #0x0
   12940:	b.ge	1294c <udev_util_encode_string@@LIBUDEV_183+0x711c>  // b.tcont
   12944:	ldr	w0, [sp, #36]
   12948:	b	1295c <udev_util_encode_string@@LIBUDEV_183+0x712c>
   1294c:	ldr	w1, [sp, #32]
   12950:	ldr	x0, [sp, #24]
   12954:	str	w1, [x0, #308]
   12958:	mov	w0, #0x0                   	// #0
   1295c:	mov	w1, w0
   12960:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12964:	ldr	x0, [x0, #4016]
   12968:	ldr	x2, [sp, #40]
   1296c:	ldr	x0, [x0]
   12970:	eor	x0, x2, x0
   12974:	cmp	x0, #0x0
   12978:	b.eq	12980 <udev_util_encode_string@@LIBUDEV_183+0x7150>  // b.none
   1297c:	bl	5390 <__stack_chk_fail@plt>
   12980:	mov	w0, w1
   12984:	ldp	x29, x30, [sp], #48
   12988:	ret
   1298c:	stp	x29, x30, [sp, #-48]!
   12990:	mov	x29, sp
   12994:	str	x0, [sp, #24]
   12998:	str	x1, [sp, #16]
   1299c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   129a0:	ldr	x0, [x0, #4016]
   129a4:	ldr	x1, [x0]
   129a8:	str	x1, [sp, #40]
   129ac:	mov	x1, #0x0                   	// #0
   129b0:	ldr	x0, [sp, #24]
   129b4:	cmp	x0, #0x0
   129b8:	cset	w0, eq  // eq = none
   129bc:	and	w0, w0, #0xff
   129c0:	and	x0, x0, #0xff
   129c4:	cmp	x0, #0x0
   129c8:	b.eq	129f4 <udev_util_encode_string@@LIBUDEV_183+0x71c4>  // b.none
   129cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   129d0:	add	x1, x0, #0x353
   129d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   129d8:	add	x4, x0, #0xb30
   129dc:	mov	w3, #0xaa                  	// #170
   129e0:	mov	x2, x1
   129e4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   129e8:	add	x1, x0, #0x380
   129ec:	mov	w0, #0x0                   	// #0
   129f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   129f4:	ldr	x0, [sp, #16]
   129f8:	cmp	x0, #0x0
   129fc:	cset	w0, eq  // eq = none
   12a00:	and	w0, w0, #0xff
   12a04:	and	x0, x0, #0xff
   12a08:	cmp	x0, #0x0
   12a0c:	b.eq	12a38 <udev_util_encode_string@@LIBUDEV_183+0x7208>  // b.none
   12a10:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12a14:	add	x1, x0, #0x353
   12a18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12a1c:	add	x4, x0, #0xb30
   12a20:	mov	w3, #0xab                  	// #171
   12a24:	mov	x2, x1
   12a28:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12a2c:	add	x1, x0, #0x3a0
   12a30:	mov	w0, #0x0                   	// #0
   12a34:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12a38:	add	x0, sp, #0x20
   12a3c:	mov	x1, x0
   12a40:	ldr	x0, [sp, #16]
   12a44:	bl	12674 <udev_util_encode_string@@LIBUDEV_183+0x6e44>
   12a48:	str	w0, [sp, #36]
   12a4c:	ldr	w0, [sp, #36]
   12a50:	cmp	w0, #0x0
   12a54:	b.ge	12a60 <udev_util_encode_string@@LIBUDEV_183+0x7230>  // b.tcont
   12a58:	ldr	w0, [sp, #36]
   12a5c:	b	12a9c <udev_util_encode_string@@LIBUDEV_183+0x726c>
   12a60:	ldr	x2, [sp, #16]
   12a64:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12a68:	add	x1, x0, #0x3a8
   12a6c:	ldr	x0, [sp, #24]
   12a70:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   12a74:	str	w0, [sp, #36]
   12a78:	ldr	w0, [sp, #36]
   12a7c:	cmp	w0, #0x0
   12a80:	b.ge	12a8c <udev_util_encode_string@@LIBUDEV_183+0x725c>  // b.tcont
   12a84:	ldr	w0, [sp, #36]
   12a88:	b	12a9c <udev_util_encode_string@@LIBUDEV_183+0x726c>
   12a8c:	ldr	w1, [sp, #32]
   12a90:	ldr	x0, [sp, #24]
   12a94:	str	w1, [x0, #312]
   12a98:	mov	w0, #0x0                   	// #0
   12a9c:	mov	w1, w0
   12aa0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12aa4:	ldr	x0, [x0, #4016]
   12aa8:	ldr	x2, [sp, #40]
   12aac:	ldr	x0, [x0]
   12ab0:	eor	x0, x2, x0
   12ab4:	cmp	x0, #0x0
   12ab8:	b.eq	12ac0 <udev_util_encode_string@@LIBUDEV_183+0x7290>  // b.none
   12abc:	bl	5390 <__stack_chk_fail@plt>
   12ac0:	mov	w0, w1
   12ac4:	ldp	x29, x30, [sp], #48
   12ac8:	ret
   12acc:	stp	x29, x30, [sp, #-32]!
   12ad0:	mov	x29, sp
   12ad4:	str	x0, [sp, #24]
   12ad8:	str	x1, [sp, #16]
   12adc:	ldr	x0, [sp, #24]
   12ae0:	cmp	x0, #0x0
   12ae4:	cset	w0, eq  // eq = none
   12ae8:	and	w0, w0, #0xff
   12aec:	and	x0, x0, #0xff
   12af0:	cmp	x0, #0x0
   12af4:	b.eq	12b20 <udev_util_encode_string@@LIBUDEV_183+0x72f0>  // b.none
   12af8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12afc:	add	x1, x0, #0x353
   12b00:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12b04:	add	x4, x0, #0xb48
   12b08:	mov	w3, #0xbb                  	// #187
   12b0c:	mov	x2, x1
   12b10:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12b14:	add	x1, x0, #0x380
   12b18:	mov	w0, #0x0                   	// #0
   12b1c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12b20:	ldr	x0, [sp, #24]
   12b24:	ldr	w0, [x0, #316]
   12b28:	cmp	w0, #0x0
   12b2c:	b.ge	12b38 <udev_util_encode_string@@LIBUDEV_183+0x7308>  // b.tcont
   12b30:	mov	w0, #0xfffffffe            	// #-2
   12b34:	b	12b58 <udev_util_encode_string@@LIBUDEV_183+0x7328>
   12b38:	ldr	x0, [sp, #16]
   12b3c:	cmp	x0, #0x0
   12b40:	b.eq	12b54 <udev_util_encode_string@@LIBUDEV_183+0x7324>  // b.none
   12b44:	ldr	x0, [sp, #24]
   12b48:	ldr	w1, [x0, #316]
   12b4c:	ldr	x0, [sp, #16]
   12b50:	str	w1, [x0]
   12b54:	mov	w0, #0x0                   	// #0
   12b58:	ldp	x29, x30, [sp], #32
   12b5c:	ret
   12b60:	stp	x29, x30, [sp, #-48]!
   12b64:	mov	x29, sp
   12b68:	str	x0, [sp, #24]
   12b6c:	str	x1, [sp, #16]
   12b70:	ldr	x0, [sp, #24]
   12b74:	cmp	x0, #0x0
   12b78:	cset	w0, eq  // eq = none
   12b7c:	and	w0, w0, #0xff
   12b80:	and	x0, x0, #0xff
   12b84:	cmp	x0, #0x0
   12b88:	b.eq	12bb4 <udev_util_encode_string@@LIBUDEV_183+0x7384>  // b.none
   12b8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12b90:	add	x1, x0, #0x353
   12b94:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12b98:	add	x4, x0, #0xb60
   12b9c:	mov	w3, #0xca                  	// #202
   12ba0:	mov	x2, x1
   12ba4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12ba8:	add	x1, x0, #0x380
   12bac:	mov	w0, #0x0                   	// #0
   12bb0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12bb4:	ldr	x0, [sp, #16]
   12bb8:	cmp	x0, #0x0
   12bbc:	cset	w0, eq  // eq = none
   12bc0:	and	w0, w0, #0xff
   12bc4:	and	x0, x0, #0xff
   12bc8:	cmp	x0, #0x0
   12bcc:	b.eq	12bf8 <udev_util_encode_string@@LIBUDEV_183+0x73c8>  // b.none
   12bd0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12bd4:	add	x1, x0, #0x353
   12bd8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12bdc:	add	x4, x0, #0xb60
   12be0:	mov	w3, #0xcb                  	// #203
   12be4:	mov	x2, x1
   12be8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12bec:	add	x1, x0, #0x3b0
   12bf0:	mov	w0, #0x0                   	// #0
   12bf4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12bf8:	ldr	x0, [sp, #16]
   12bfc:	bl	14ef0 <udev_util_encode_string@@LIBUDEV_183+0x96c0>
   12c00:	str	w0, [sp, #40]
   12c04:	ldr	w0, [sp, #40]
   12c08:	cmp	w0, #0x0
   12c0c:	b.ge	12c18 <udev_util_encode_string@@LIBUDEV_183+0x73e8>  // b.tcont
   12c10:	mov	w0, #0xffffffea            	// #-22
   12c14:	b	12c54 <udev_util_encode_string@@LIBUDEV_183+0x7424>
   12c18:	ldr	x2, [sp, #16]
   12c1c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12c20:	add	x1, x0, #0x3b8
   12c24:	ldr	x0, [sp, #24]
   12c28:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   12c2c:	str	w0, [sp, #44]
   12c30:	ldr	w0, [sp, #44]
   12c34:	cmp	w0, #0x0
   12c38:	b.ge	12c44 <udev_util_encode_string@@LIBUDEV_183+0x7414>  // b.tcont
   12c3c:	ldr	w0, [sp, #44]
   12c40:	b	12c54 <udev_util_encode_string@@LIBUDEV_183+0x7424>
   12c44:	ldr	x0, [sp, #24]
   12c48:	ldr	w1, [sp, #40]
   12c4c:	str	w1, [x0, #316]
   12c50:	mov	w0, #0x0                   	// #0
   12c54:	ldp	x29, x30, [sp], #48
   12c58:	ret
   12c5c:	stp	x29, x30, [sp, #-32]!
   12c60:	mov	x29, sp
   12c64:	str	x0, [sp, #24]
   12c68:	str	x1, [sp, #16]
   12c6c:	ldr	x0, [sp, #24]
   12c70:	cmp	x0, #0x0
   12c74:	cset	w0, eq  // eq = none
   12c78:	and	w0, w0, #0xff
   12c7c:	and	x0, x0, #0xff
   12c80:	cmp	x0, #0x0
   12c84:	b.eq	12cb0 <udev_util_encode_string@@LIBUDEV_183+0x7480>  // b.none
   12c88:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12c8c:	add	x1, x0, #0x353
   12c90:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12c94:	add	x4, x0, #0xb78
   12c98:	mov	w3, #0xdb                  	// #219
   12c9c:	mov	x2, x1
   12ca0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12ca4:	add	x1, x0, #0x380
   12ca8:	mov	w0, #0x0                   	// #0
   12cac:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12cb0:	ldr	x0, [sp, #24]
   12cb4:	ldr	x0, [x0, #320]
   12cb8:	cmp	x0, #0x0
   12cbc:	b.ne	12cc8 <udev_util_encode_string@@LIBUDEV_183+0x7498>  // b.any
   12cc0:	mov	w0, #0xfffffffe            	// #-2
   12cc4:	b	12ce8 <udev_util_encode_string@@LIBUDEV_183+0x74b8>
   12cc8:	ldr	x0, [sp, #16]
   12ccc:	cmp	x0, #0x0
   12cd0:	b.eq	12ce4 <udev_util_encode_string@@LIBUDEV_183+0x74b4>  // b.none
   12cd4:	ldr	x0, [sp, #24]
   12cd8:	ldr	x1, [x0, #320]
   12cdc:	ldr	x0, [sp, #16]
   12ce0:	str	x1, [x0]
   12ce4:	mov	w0, #0x0                   	// #0
   12ce8:	ldp	x29, x30, [sp], #32
   12cec:	ret
   12cf0:	stp	x29, x30, [sp, #-64]!
   12cf4:	mov	x29, sp
   12cf8:	str	x0, [sp, #24]
   12cfc:	str	x1, [sp, #16]
   12d00:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12d04:	ldr	x0, [x0, #4016]
   12d08:	ldr	x1, [x0]
   12d0c:	str	x1, [sp, #56]
   12d10:	mov	x1, #0x0                   	// #0
   12d14:	ldr	x0, [sp, #24]
   12d18:	cmp	x0, #0x0
   12d1c:	cset	w0, eq  // eq = none
   12d20:	and	w0, w0, #0xff
   12d24:	and	x0, x0, #0xff
   12d28:	cmp	x0, #0x0
   12d2c:	b.eq	12d58 <udev_util_encode_string@@LIBUDEV_183+0x7528>  // b.none
   12d30:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12d34:	add	x1, x0, #0x353
   12d38:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12d3c:	add	x4, x0, #0xb90
   12d40:	mov	w3, #0xea                  	// #234
   12d44:	mov	x2, x1
   12d48:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12d4c:	add	x1, x0, #0x380
   12d50:	mov	w0, #0x0                   	// #0
   12d54:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12d58:	ldr	x0, [sp, #16]
   12d5c:	cmp	x0, #0x0
   12d60:	cset	w0, eq  // eq = none
   12d64:	and	w0, w0, #0xff
   12d68:	and	x0, x0, #0xff
   12d6c:	cmp	x0, #0x0
   12d70:	b.eq	12d9c <udev_util_encode_string@@LIBUDEV_183+0x756c>  // b.none
   12d74:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12d78:	add	x1, x0, #0x353
   12d7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12d80:	add	x4, x0, #0xb90
   12d84:	mov	w3, #0xeb                  	// #235
   12d88:	mov	x2, x1
   12d8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12d90:	add	x1, x0, #0x3c0
   12d94:	mov	w0, #0x0                   	// #0
   12d98:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12d9c:	add	x0, sp, #0x30
   12da0:	mov	x1, x0
   12da4:	ldr	x0, [sp, #16]
   12da8:	bl	1269c <udev_util_encode_string@@LIBUDEV_183+0x6e6c>
   12dac:	str	w0, [sp, #44]
   12db0:	ldr	w0, [sp, #44]
   12db4:	cmp	w0, #0x0
   12db8:	b.ge	12dc4 <udev_util_encode_string@@LIBUDEV_183+0x7594>  // b.tcont
   12dbc:	ldr	w0, [sp, #44]
   12dc0:	b	12e14 <udev_util_encode_string@@LIBUDEV_183+0x75e4>
   12dc4:	ldr	x0, [sp, #48]
   12dc8:	cmp	x0, #0x0
   12dcc:	b.ne	12dd8 <udev_util_encode_string@@LIBUDEV_183+0x75a8>  // b.any
   12dd0:	mov	w0, #0xffffffea            	// #-22
   12dd4:	b	12e14 <udev_util_encode_string@@LIBUDEV_183+0x75e4>
   12dd8:	ldr	x2, [sp, #16]
   12ddc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12de0:	add	x1, x0, #0x3c8
   12de4:	ldr	x0, [sp, #24]
   12de8:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   12dec:	str	w0, [sp, #44]
   12df0:	ldr	w0, [sp, #44]
   12df4:	cmp	w0, #0x0
   12df8:	b.ge	12e04 <udev_util_encode_string@@LIBUDEV_183+0x75d4>  // b.tcont
   12dfc:	ldr	w0, [sp, #44]
   12e00:	b	12e14 <udev_util_encode_string@@LIBUDEV_183+0x75e4>
   12e04:	ldr	x1, [sp, #48]
   12e08:	ldr	x0, [sp, #24]
   12e0c:	str	x1, [x0, #320]
   12e10:	mov	w0, #0x0                   	// #0
   12e14:	mov	w1, w0
   12e18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12e1c:	ldr	x0, [x0, #4016]
   12e20:	ldr	x2, [sp, #56]
   12e24:	ldr	x0, [x0]
   12e28:	eor	x0, x2, x0
   12e2c:	cmp	x0, #0x0
   12e30:	b.eq	12e38 <udev_util_encode_string@@LIBUDEV_183+0x7608>  // b.none
   12e34:	bl	5390 <__stack_chk_fail@plt>
   12e38:	mov	w0, w1
   12e3c:	ldp	x29, x30, [sp], #64
   12e40:	ret
   12e44:	sub	sp, sp, #0x280
   12e48:	stp	x29, x30, [sp, #32]
   12e4c:	add	x29, sp, #0x20
   12e50:	stp	x19, x20, [sp, #48]
   12e54:	stp	x21, x22, [sp, #64]
   12e58:	stp	x23, x24, [sp, #80]
   12e5c:	stp	x25, x26, [sp, #96]
   12e60:	str	x27, [sp, #112]
   12e64:	str	x0, [x29, #184]
   12e68:	str	x1, [x29, #176]
   12e6c:	str	x2, [x29, #168]
   12e70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   12e74:	ldr	x0, [x0, #4016]
   12e78:	ldr	x1, [x0]
   12e7c:	str	x1, [x29, #600]
   12e80:	mov	x1, #0x0                   	// #0
   12e84:	ldr	x0, [x29, #184]
   12e88:	cmp	x0, #0x0
   12e8c:	cset	w0, eq  // eq = none
   12e90:	and	w0, w0, #0xff
   12e94:	and	x0, x0, #0xff
   12e98:	cmp	x0, #0x0
   12e9c:	b.eq	12ec8 <udev_util_encode_string@@LIBUDEV_183+0x7698>  // b.none
   12ea0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12ea4:	add	x1, x0, #0x353
   12ea8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12eac:	add	x4, x0, #0xba8
   12eb0:	mov	w3, #0xff                  	// #255
   12eb4:	mov	x2, x1
   12eb8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12ebc:	add	x1, x0, #0x380
   12ec0:	mov	w0, #0x0                   	// #0
   12ec4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12ec8:	ldr	x0, [x29, #176]
   12ecc:	cmp	x0, #0x0
   12ed0:	cset	w0, eq  // eq = none
   12ed4:	and	w0, w0, #0xff
   12ed8:	and	x0, x0, #0xff
   12edc:	cmp	x0, #0x0
   12ee0:	b.eq	12f0c <udev_util_encode_string@@LIBUDEV_183+0x76dc>  // b.none
   12ee4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12ee8:	add	x1, x0, #0x353
   12eec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12ef0:	add	x4, x0, #0xba8
   12ef4:	mov	w3, #0x100                 	// #256
   12ef8:	mov	x2, x1
   12efc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12f00:	add	x1, x0, #0x388
   12f04:	mov	w0, #0x0                   	// #0
   12f08:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12f0c:	ldr	x0, [x29, #168]
   12f10:	cmp	x0, #0x0
   12f14:	cset	w0, eq  // eq = none
   12f18:	and	w0, w0, #0xff
   12f1c:	and	x0, x0, #0xff
   12f20:	cmp	x0, #0x0
   12f24:	b.eq	12f50 <udev_util_encode_string@@LIBUDEV_183+0x7720>  // b.none
   12f28:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12f2c:	add	x1, x0, #0x353
   12f30:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12f34:	add	x4, x0, #0xba8
   12f38:	mov	w3, #0x101                 	// #257
   12f3c:	mov	x2, x1
   12f40:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12f44:	add	x1, x0, #0x3d0
   12f48:	mov	w0, #0x0                   	// #0
   12f4c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   12f50:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12f54:	add	x1, x0, #0x3d8
   12f58:	ldr	x0, [x29, #176]
   12f5c:	bl	5440 <strcmp@plt>
   12f60:	cmp	w0, #0x0
   12f64:	b.ne	131f0 <udev_util_encode_string@@LIBUDEV_183+0x79c0>  // b.any
   12f68:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   12f6c:	add	x0, x0, #0x3e0
   12f70:	str	x0, [x29, #584]
   12f74:	ldr	x0, [x29, #168]
   12f78:	str	x0, [x29, #592]
   12f7c:	str	xzr, [x29, #384]
   12f80:	str	xzr, [x29, #376]
   12f84:	b	12fb8 <udev_util_encode_string@@LIBUDEV_183+0x7788>
   12f88:	ldr	x0, [x29, #376]
   12f8c:	lsl	x0, x0, #3
   12f90:	add	x1, x29, #0x248
   12f94:	ldr	x0, [x1, x0]
   12f98:	bl	5040 <strlen@plt>
   12f9c:	mov	x1, x0
   12fa0:	ldr	x0, [x29, #384]
   12fa4:	add	x0, x0, x1
   12fa8:	str	x0, [x29, #384]
   12fac:	ldr	x0, [x29, #376]
   12fb0:	add	x0, x0, #0x1
   12fb4:	str	x0, [x29, #376]
   12fb8:	ldr	x0, [x29, #376]
   12fbc:	cmp	x0, #0x1
   12fc0:	b.hi	12fdc <udev_util_encode_string@@LIBUDEV_183+0x77ac>  // b.pmore
   12fc4:	ldr	x0, [x29, #376]
   12fc8:	lsl	x0, x0, #3
   12fcc:	add	x1, x29, #0x248
   12fd0:	ldr	x0, [x1, x0]
   12fd4:	cmp	x0, #0x0
   12fd8:	b.ne	12f88 <udev_util_encode_string@@LIBUDEV_183+0x7758>  // b.any
   12fdc:	ldr	x0, [x29, #384]
   12fe0:	add	x0, x0, #0x1
   12fe4:	str	x0, [x29, #552]
   12fe8:	ldr	x1, [x29, #552]
   12fec:	mov	x0, #0x1                   	// #1
   12ff0:	bl	125f8 <udev_util_encode_string@@LIBUDEV_183+0x6dc8>
   12ff4:	and	w0, w0, #0xff
   12ff8:	and	x0, x0, #0xff
   12ffc:	cmp	x0, #0x0
   13000:	b.eq	1302c <udev_util_encode_string@@LIBUDEV_183+0x77fc>  // b.none
   13004:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13008:	add	x1, x0, #0x353
   1300c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13010:	add	x4, x0, #0xba8
   13014:	mov	w3, #0x106                 	// #262
   13018:	mov	x2, x1
   1301c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13020:	add	x1, x0, #0x3e8
   13024:	mov	w0, #0x0                   	// #0
   13028:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1302c:	ldr	x0, [x29, #552]
   13030:	cmp	x0, #0x400, lsl #12
   13034:	cset	w0, hi  // hi = pmore
   13038:	and	w0, w0, #0xff
   1303c:	and	x0, x0, #0xff
   13040:	cmp	x0, #0x0
   13044:	b.eq	13070 <udev_util_encode_string@@LIBUDEV_183+0x7840>  // b.none
   13048:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1304c:	add	x1, x0, #0x353
   13050:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13054:	add	x4, x0, #0xba8
   13058:	mov	w3, #0x106                 	// #262
   1305c:	mov	x2, x1
   13060:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13064:	add	x1, x0, #0x418
   13068:	mov	w0, #0x0                   	// #0
   1306c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   13070:	ldr	x0, [x29, #552]
   13074:	add	x0, x0, #0xf
   13078:	lsr	x0, x0, #4
   1307c:	lsl	x0, x0, #4
   13080:	sub	sp, sp, x0
   13084:	add	x0, sp, #0x20
   13088:	add	x0, x0, #0xf
   1308c:	lsr	x0, x0, #4
   13090:	lsl	x0, x0, #4
   13094:	str	x0, [x29, #560]
   13098:	ldr	x0, [x29, #560]
   1309c:	str	x0, [x29, #392]
   130a0:	str	xzr, [x29, #376]
   130a4:	b	130d4 <udev_util_encode_string@@LIBUDEV_183+0x78a4>
   130a8:	ldr	x0, [x29, #376]
   130ac:	lsl	x0, x0, #3
   130b0:	add	x1, x29, #0x248
   130b4:	ldr	x0, [x1, x0]
   130b8:	mov	x1, x0
   130bc:	ldr	x0, [x29, #392]
   130c0:	bl	51b0 <stpcpy@plt>
   130c4:	str	x0, [x29, #392]
   130c8:	ldr	x0, [x29, #376]
   130cc:	add	x0, x0, #0x1
   130d0:	str	x0, [x29, #376]
   130d4:	ldr	x0, [x29, #376]
   130d8:	cmp	x0, #0x1
   130dc:	b.hi	130f8 <udev_util_encode_string@@LIBUDEV_183+0x78c8>  // b.pmore
   130e0:	ldr	x0, [x29, #376]
   130e4:	lsl	x0, x0, #3
   130e8:	add	x1, x29, #0x248
   130ec:	ldr	x0, [x1, x0]
   130f0:	cmp	x0, #0x0
   130f4:	b.ne	130a8 <udev_util_encode_string@@LIBUDEV_183+0x7878>  // b.any
   130f8:	ldr	x0, [x29, #392]
   130fc:	strb	wzr, [x0]
   13100:	ldr	x0, [x29, #560]
   13104:	str	x0, [x29, #568]
   13108:	mov	w2, #0x0                   	// #0
   1310c:	ldr	x1, [x29, #568]
   13110:	ldr	x0, [x29, #184]
   13114:	bl	159c4 <udev_util_encode_string@@LIBUDEV_183+0xa194>
   13118:	str	w0, [x29, #204]
   1311c:	ldr	w0, [x29, #204]
   13120:	cmp	w0, #0x0
   13124:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13128:	str	xzr, [x29, #352]
   1312c:	ldr	x0, [x29, #184]
   13130:	str	x0, [x29, #576]
   13134:	mov	w0, #0x7                   	// #7
   13138:	str	w0, [x29, #328]
   1313c:	ldr	w0, [x29, #204]
   13140:	str	w0, [x29, #332]
   13144:	ldr	x0, [x29, #576]
   13148:	cmp	x0, #0x0
   1314c:	b.eq	13188 <udev_util_encode_string@@LIBUDEV_183+0x7958>  // b.none
   13150:	mov	w0, #0x0                   	// #0
   13154:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13158:	mov	w1, w0
   1315c:	ldr	w0, [x29, #328]
   13160:	cmp	w0, w1
   13164:	cset	w0, le
   13168:	and	w0, w0, #0xff
   1316c:	and	x0, x0, #0xff
   13170:	cmp	x0, #0x0
   13174:	b.eq	13188 <udev_util_encode_string@@LIBUDEV_183+0x7958>  // b.none
   13178:	add	x0, x29, #0x160
   1317c:	mov	x1, x0
   13180:	ldr	x0, [x29, #576]
   13184:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13188:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1318c:	add	x2, x0, #0x353
   13190:	ldr	x0, [x29, #352]
   13194:	cmp	x0, #0x0
   13198:	b.eq	131a8 <udev_util_encode_string@@LIBUDEV_183+0x7978>  // b.none
   1319c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   131a0:	add	x0, x0, #0x438
   131a4:	b	131ac <udev_util_encode_string@@LIBUDEV_183+0x797c>
   131a8:	mov	x0, #0x0                   	// #0
   131ac:	ldr	x3, [x29, #352]
   131b0:	ldr	x1, [x29, #568]
   131b4:	str	x1, [sp, #16]
   131b8:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   131bc:	add	x1, x1, #0x440
   131c0:	str	x1, [sp, #8]
   131c4:	str	xzr, [sp]
   131c8:	mov	x7, #0x0                   	// #0
   131cc:	mov	x6, x3
   131d0:	mov	x5, x0
   131d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   131d8:	add	x4, x0, #0xbb8
   131dc:	mov	w3, #0x10b                 	// #267
   131e0:	ldr	w1, [x29, #332]
   131e4:	ldr	w0, [x29, #328]
   131e8:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   131ec:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   131f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   131f4:	add	x1, x0, #0x470
   131f8:	ldr	x0, [x29, #176]
   131fc:	bl	5440 <strcmp@plt>
   13200:	cmp	w0, #0x0
   13204:	b.ne	132ec <udev_util_encode_string@@LIBUDEV_183+0x7abc>  // b.any
   13208:	ldr	x1, [x29, #168]
   1320c:	ldr	x0, [x29, #184]
   13210:	bl	197cc <udev_util_encode_string@@LIBUDEV_183+0xdf9c>
   13214:	str	w0, [x29, #204]
   13218:	ldr	w0, [x29, #204]
   1321c:	cmp	w0, #0x0
   13220:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13224:	str	xzr, [x29, #352]
   13228:	ldr	x0, [x29, #184]
   1322c:	str	x0, [x29, #544]
   13230:	mov	w0, #0x7                   	// #7
   13234:	str	w0, [x29, #320]
   13238:	ldr	w0, [x29, #204]
   1323c:	str	w0, [x29, #324]
   13240:	ldr	x0, [x29, #544]
   13244:	cmp	x0, #0x0
   13248:	b.eq	13284 <udev_util_encode_string@@LIBUDEV_183+0x7a54>  // b.none
   1324c:	mov	w0, #0x0                   	// #0
   13250:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13254:	mov	w1, w0
   13258:	ldr	w0, [x29, #320]
   1325c:	cmp	w0, w1
   13260:	cset	w0, le
   13264:	and	w0, w0, #0xff
   13268:	and	x0, x0, #0xff
   1326c:	cmp	x0, #0x0
   13270:	b.eq	13284 <udev_util_encode_string@@LIBUDEV_183+0x7a54>  // b.none
   13274:	add	x0, x29, #0x160
   13278:	mov	x1, x0
   1327c:	ldr	x0, [x29, #544]
   13280:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13284:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13288:	add	x2, x0, #0x353
   1328c:	ldr	x0, [x29, #352]
   13290:	cmp	x0, #0x0
   13294:	b.eq	132a4 <udev_util_encode_string@@LIBUDEV_183+0x7a74>  // b.none
   13298:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1329c:	add	x0, x0, #0x438
   132a0:	b	132a8 <udev_util_encode_string@@LIBUDEV_183+0x7a78>
   132a4:	mov	x0, #0x0                   	// #0
   132a8:	ldr	x3, [x29, #352]
   132ac:	ldr	x1, [x29, #168]
   132b0:	str	x1, [sp, #16]
   132b4:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   132b8:	add	x1, x1, #0x480
   132bc:	str	x1, [sp, #8]
   132c0:	str	xzr, [sp]
   132c4:	mov	x7, #0x0                   	// #0
   132c8:	mov	x6, x3
   132cc:	mov	x5, x0
   132d0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   132d4:	add	x4, x0, #0xbb8
   132d8:	mov	w3, #0x10f                 	// #271
   132dc:	ldr	w1, [x29, #324]
   132e0:	ldr	w0, [x29, #320]
   132e4:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   132e8:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   132ec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   132f0:	add	x1, x0, #0x4b0
   132f4:	ldr	x0, [x29, #176]
   132f8:	bl	5440 <strcmp@plt>
   132fc:	cmp	w0, #0x0
   13300:	b.ne	133e8 <udev_util_encode_string@@LIBUDEV_183+0x7bb8>  // b.any
   13304:	ldr	x1, [x29, #168]
   13308:	ldr	x0, [x29, #184]
   1330c:	bl	17c80 <udev_util_encode_string@@LIBUDEV_183+0xc450>
   13310:	str	w0, [x29, #204]
   13314:	ldr	w0, [x29, #204]
   13318:	cmp	w0, #0x0
   1331c:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13320:	str	xzr, [x29, #352]
   13324:	ldr	x0, [x29, #184]
   13328:	str	x0, [x29, #536]
   1332c:	mov	w0, #0x7                   	// #7
   13330:	str	w0, [x29, #312]
   13334:	ldr	w0, [x29, #204]
   13338:	str	w0, [x29, #316]
   1333c:	ldr	x0, [x29, #536]
   13340:	cmp	x0, #0x0
   13344:	b.eq	13380 <udev_util_encode_string@@LIBUDEV_183+0x7b50>  // b.none
   13348:	mov	w0, #0x0                   	// #0
   1334c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13350:	mov	w1, w0
   13354:	ldr	w0, [x29, #312]
   13358:	cmp	w0, w1
   1335c:	cset	w0, le
   13360:	and	w0, w0, #0xff
   13364:	and	x0, x0, #0xff
   13368:	cmp	x0, #0x0
   1336c:	b.eq	13380 <udev_util_encode_string@@LIBUDEV_183+0x7b50>  // b.none
   13370:	add	x0, x29, #0x160
   13374:	mov	x1, x0
   13378:	ldr	x0, [x29, #536]
   1337c:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13380:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13384:	add	x2, x0, #0x353
   13388:	ldr	x0, [x29, #352]
   1338c:	cmp	x0, #0x0
   13390:	b.eq	133a0 <udev_util_encode_string@@LIBUDEV_183+0x7b70>  // b.none
   13394:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13398:	add	x0, x0, #0x438
   1339c:	b	133a4 <udev_util_encode_string@@LIBUDEV_183+0x7b74>
   133a0:	mov	x0, #0x0                   	// #0
   133a4:	ldr	x3, [x29, #352]
   133a8:	ldr	x1, [x29, #168]
   133ac:	str	x1, [sp, #16]
   133b0:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   133b4:	add	x1, x1, #0x4b8
   133b8:	str	x1, [sp, #8]
   133bc:	str	xzr, [sp]
   133c0:	mov	x7, #0x0                   	// #0
   133c4:	mov	x6, x3
   133c8:	mov	x5, x0
   133cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   133d0:	add	x4, x0, #0xbb8
   133d4:	mov	w3, #0x113                 	// #275
   133d8:	ldr	w1, [x29, #316]
   133dc:	ldr	w0, [x29, #312]
   133e0:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   133e4:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   133e8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   133ec:	add	x1, x0, #0x4e8
   133f0:	ldr	x0, [x29, #176]
   133f4:	bl	5440 <strcmp@plt>
   133f8:	cmp	w0, #0x0
   133fc:	b.ne	134e4 <udev_util_encode_string@@LIBUDEV_183+0x7cb4>  // b.any
   13400:	ldr	x1, [x29, #168]
   13404:	ldr	x0, [x29, #184]
   13408:	bl	17f20 <udev_util_encode_string@@LIBUDEV_183+0xc6f0>
   1340c:	str	w0, [x29, #204]
   13410:	ldr	w0, [x29, #204]
   13414:	cmp	w0, #0x0
   13418:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   1341c:	str	xzr, [x29, #352]
   13420:	ldr	x0, [x29, #184]
   13424:	str	x0, [x29, #528]
   13428:	mov	w0, #0x7                   	// #7
   1342c:	str	w0, [x29, #304]
   13430:	ldr	w0, [x29, #204]
   13434:	str	w0, [x29, #308]
   13438:	ldr	x0, [x29, #528]
   1343c:	cmp	x0, #0x0
   13440:	b.eq	1347c <udev_util_encode_string@@LIBUDEV_183+0x7c4c>  // b.none
   13444:	mov	w0, #0x0                   	// #0
   13448:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1344c:	mov	w1, w0
   13450:	ldr	w0, [x29, #304]
   13454:	cmp	w0, w1
   13458:	cset	w0, le
   1345c:	and	w0, w0, #0xff
   13460:	and	x0, x0, #0xff
   13464:	cmp	x0, #0x0
   13468:	b.eq	1347c <udev_util_encode_string@@LIBUDEV_183+0x7c4c>  // b.none
   1346c:	add	x0, x29, #0x160
   13470:	mov	x1, x0
   13474:	ldr	x0, [x29, #528]
   13478:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1347c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13480:	add	x2, x0, #0x353
   13484:	ldr	x0, [x29, #352]
   13488:	cmp	x0, #0x0
   1348c:	b.eq	1349c <udev_util_encode_string@@LIBUDEV_183+0x7c6c>  // b.none
   13490:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13494:	add	x0, x0, #0x438
   13498:	b	134a0 <udev_util_encode_string@@LIBUDEV_183+0x7c70>
   1349c:	mov	x0, #0x0                   	// #0
   134a0:	ldr	x3, [x29, #352]
   134a4:	ldr	x1, [x29, #168]
   134a8:	str	x1, [sp, #16]
   134ac:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   134b0:	add	x1, x1, #0x4f0
   134b4:	str	x1, [sp, #8]
   134b8:	str	xzr, [sp]
   134bc:	mov	x7, #0x0                   	// #0
   134c0:	mov	x6, x3
   134c4:	mov	x5, x0
   134c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   134cc:	add	x4, x0, #0xbb8
   134d0:	mov	w3, #0x117                 	// #279
   134d4:	ldr	w1, [x29, #308]
   134d8:	ldr	w0, [x29, #304]
   134dc:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   134e0:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   134e4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   134e8:	add	x1, x0, #0x520
   134ec:	ldr	x0, [x29, #176]
   134f0:	bl	5440 <strcmp@plt>
   134f4:	cmp	w0, #0x0
   134f8:	b.ne	136cc <udev_util_encode_string@@LIBUDEV_183+0x7e9c>  // b.any
   134fc:	add	x0, x29, #0x158
   13500:	mov	x1, x0
   13504:	ldr	x0, [x29, #168]
   13508:	bl	1269c <udev_util_encode_string@@LIBUDEV_183+0x6e6c>
   1350c:	str	w0, [x29, #204]
   13510:	ldr	w0, [x29, #204]
   13514:	cmp	w0, #0x0
   13518:	b.ge	135e4 <udev_util_encode_string@@LIBUDEV_183+0x7db4>  // b.tcont
   1351c:	str	xzr, [x29, #352]
   13520:	ldr	x0, [x29, #184]
   13524:	str	x0, [x29, #520]
   13528:	mov	w0, #0x7                   	// #7
   1352c:	str	w0, [x29, #296]
   13530:	ldr	w0, [x29, #204]
   13534:	str	w0, [x29, #300]
   13538:	ldr	x0, [x29, #520]
   1353c:	cmp	x0, #0x0
   13540:	b.eq	1357c <udev_util_encode_string@@LIBUDEV_183+0x7d4c>  // b.none
   13544:	mov	w0, #0x0                   	// #0
   13548:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1354c:	mov	w1, w0
   13550:	ldr	w0, [x29, #296]
   13554:	cmp	w0, w1
   13558:	cset	w0, le
   1355c:	and	w0, w0, #0xff
   13560:	and	x0, x0, #0xff
   13564:	cmp	x0, #0x0
   13568:	b.eq	1357c <udev_util_encode_string@@LIBUDEV_183+0x7d4c>  // b.none
   1356c:	add	x0, x29, #0x160
   13570:	mov	x1, x0
   13574:	ldr	x0, [x29, #520]
   13578:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1357c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13580:	add	x2, x0, #0x353
   13584:	ldr	x0, [x29, #352]
   13588:	cmp	x0, #0x0
   1358c:	b.eq	1359c <udev_util_encode_string@@LIBUDEV_183+0x7d6c>  // b.none
   13590:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13594:	add	x0, x0, #0x438
   13598:	b	135a0 <udev_util_encode_string@@LIBUDEV_183+0x7d70>
   1359c:	mov	x0, #0x0                   	// #0
   135a0:	ldr	x3, [x29, #352]
   135a4:	ldr	x1, [x29, #168]
   135a8:	str	x1, [sp, #16]
   135ac:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   135b0:	add	x1, x1, #0x538
   135b4:	str	x1, [sp, #8]
   135b8:	str	xzr, [sp]
   135bc:	mov	x7, #0x0                   	// #0
   135c0:	mov	x6, x3
   135c4:	mov	x5, x0
   135c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   135cc:	add	x4, x0, #0xbb8
   135d0:	mov	w3, #0x11d                 	// #285
   135d4:	ldr	w1, [x29, #300]
   135d8:	ldr	w0, [x29, #296]
   135dc:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   135e0:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   135e4:	ldr	x0, [x29, #344]
   135e8:	mov	x1, x0
   135ec:	ldr	x0, [x29, #184]
   135f0:	bl	1b8e8 <udev_util_encode_string@@LIBUDEV_183+0x100b8>
   135f4:	str	w0, [x29, #204]
   135f8:	ldr	w0, [x29, #204]
   135fc:	cmp	w0, #0x0
   13600:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13604:	str	xzr, [x29, #352]
   13608:	ldr	x0, [x29, #184]
   1360c:	str	x0, [x29, #512]
   13610:	mov	w0, #0x7                   	// #7
   13614:	str	w0, [x29, #288]
   13618:	ldr	w0, [x29, #204]
   1361c:	str	w0, [x29, #292]
   13620:	ldr	x0, [x29, #512]
   13624:	cmp	x0, #0x0
   13628:	b.eq	13664 <udev_util_encode_string@@LIBUDEV_183+0x7e34>  // b.none
   1362c:	mov	w0, #0x0                   	// #0
   13630:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13634:	mov	w1, w0
   13638:	ldr	w0, [x29, #288]
   1363c:	cmp	w0, w1
   13640:	cset	w0, le
   13644:	and	w0, w0, #0xff
   13648:	and	x0, x0, #0xff
   1364c:	cmp	x0, #0x0
   13650:	b.eq	13664 <udev_util_encode_string@@LIBUDEV_183+0x7e34>  // b.none
   13654:	add	x0, x29, #0x160
   13658:	mov	x1, x0
   1365c:	ldr	x0, [x29, #512]
   13660:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13664:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13668:	add	x2, x0, #0x353
   1366c:	ldr	x0, [x29, #352]
   13670:	cmp	x0, #0x0
   13674:	b.eq	13684 <udev_util_encode_string@@LIBUDEV_183+0x7e54>  // b.none
   13678:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1367c:	add	x0, x0, #0x438
   13680:	b	13688 <udev_util_encode_string@@LIBUDEV_183+0x7e58>
   13684:	mov	x0, #0x0                   	// #0
   13688:	ldr	x3, [x29, #352]
   1368c:	ldr	x1, [x29, #168]
   13690:	str	x1, [sp, #16]
   13694:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13698:	add	x1, x1, #0x568
   1369c:	str	x1, [sp, #8]
   136a0:	str	xzr, [sp]
   136a4:	mov	x7, #0x0                   	// #0
   136a8:	mov	x6, x3
   136ac:	mov	x5, x0
   136b0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   136b4:	add	x4, x0, #0xbb8
   136b8:	mov	w3, #0x121                 	// #289
   136bc:	ldr	w1, [x29, #292]
   136c0:	ldr	w0, [x29, #288]
   136c4:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   136c8:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   136cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   136d0:	add	x1, x0, #0x5a0
   136d4:	ldr	x0, [x29, #176]
   136d8:	bl	5440 <strcmp@plt>
   136dc:	cmp	w0, #0x0
   136e0:	b.ne	137c8 <udev_util_encode_string@@LIBUDEV_183+0x7f98>  // b.any
   136e4:	ldr	x1, [x29, #168]
   136e8:	ldr	x0, [x29, #184]
   136ec:	bl	1a5a0 <udev_util_encode_string@@LIBUDEV_183+0xed70>
   136f0:	str	w0, [x29, #204]
   136f4:	ldr	w0, [x29, #204]
   136f8:	cmp	w0, #0x0
   136fc:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13700:	str	xzr, [x29, #352]
   13704:	ldr	x0, [x29, #184]
   13708:	str	x0, [x29, #504]
   1370c:	mov	w0, #0x7                   	// #7
   13710:	str	w0, [x29, #280]
   13714:	ldr	w0, [x29, #204]
   13718:	str	w0, [x29, #284]
   1371c:	ldr	x0, [x29, #504]
   13720:	cmp	x0, #0x0
   13724:	b.eq	13760 <udev_util_encode_string@@LIBUDEV_183+0x7f30>  // b.none
   13728:	mov	w0, #0x0                   	// #0
   1372c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13730:	mov	w1, w0
   13734:	ldr	w0, [x29, #280]
   13738:	cmp	w0, w1
   1373c:	cset	w0, le
   13740:	and	w0, w0, #0xff
   13744:	and	x0, x0, #0xff
   13748:	cmp	x0, #0x0
   1374c:	b.eq	13760 <udev_util_encode_string@@LIBUDEV_183+0x7f30>  // b.none
   13750:	add	x0, x29, #0x160
   13754:	mov	x1, x0
   13758:	ldr	x0, [x29, #504]
   1375c:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13760:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13764:	add	x2, x0, #0x353
   13768:	ldr	x0, [x29, #352]
   1376c:	cmp	x0, #0x0
   13770:	b.eq	13780 <udev_util_encode_string@@LIBUDEV_183+0x7f50>  // b.none
   13774:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13778:	add	x0, x0, #0x438
   1377c:	b	13784 <udev_util_encode_string@@LIBUDEV_183+0x7f54>
   13780:	mov	x0, #0x0                   	// #0
   13784:	ldr	x3, [x29, #352]
   13788:	ldr	x1, [x29, #168]
   1378c:	str	x1, [sp, #16]
   13790:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13794:	add	x1, x1, #0x5a8
   13798:	str	x1, [sp, #8]
   1379c:	str	xzr, [sp]
   137a0:	mov	x7, #0x0                   	// #0
   137a4:	mov	x6, x3
   137a8:	mov	x5, x0
   137ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   137b0:	add	x4, x0, #0xbb8
   137b4:	mov	w3, #0x125                 	// #293
   137b8:	ldr	w1, [x29, #284]
   137bc:	ldr	w0, [x29, #280]
   137c0:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   137c4:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   137c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   137cc:	add	x1, x0, #0x5d8
   137d0:	ldr	x0, [x29, #176]
   137d4:	bl	5440 <strcmp@plt>
   137d8:	cmp	w0, #0x0
   137dc:	b.ne	138c4 <udev_util_encode_string@@LIBUDEV_183+0x8094>  // b.any
   137e0:	ldr	x1, [x29, #168]
   137e4:	ldr	x0, [x29, #184]
   137e8:	bl	17de0 <udev_util_encode_string@@LIBUDEV_183+0xc5b0>
   137ec:	str	w0, [x29, #204]
   137f0:	ldr	w0, [x29, #204]
   137f4:	cmp	w0, #0x0
   137f8:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   137fc:	str	xzr, [x29, #352]
   13800:	ldr	x0, [x29, #184]
   13804:	str	x0, [x29, #496]
   13808:	mov	w0, #0x7                   	// #7
   1380c:	str	w0, [x29, #272]
   13810:	ldr	w0, [x29, #204]
   13814:	str	w0, [x29, #276]
   13818:	ldr	x0, [x29, #496]
   1381c:	cmp	x0, #0x0
   13820:	b.eq	1385c <udev_util_encode_string@@LIBUDEV_183+0x802c>  // b.none
   13824:	mov	w0, #0x0                   	// #0
   13828:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1382c:	mov	w1, w0
   13830:	ldr	w0, [x29, #272]
   13834:	cmp	w0, w1
   13838:	cset	w0, le
   1383c:	and	w0, w0, #0xff
   13840:	and	x0, x0, #0xff
   13844:	cmp	x0, #0x0
   13848:	b.eq	1385c <udev_util_encode_string@@LIBUDEV_183+0x802c>  // b.none
   1384c:	add	x0, x29, #0x160
   13850:	mov	x1, x0
   13854:	ldr	x0, [x29, #496]
   13858:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1385c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13860:	add	x2, x0, #0x353
   13864:	ldr	x0, [x29, #352]
   13868:	cmp	x0, #0x0
   1386c:	b.eq	1387c <udev_util_encode_string@@LIBUDEV_183+0x804c>  // b.none
   13870:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13874:	add	x0, x0, #0x438
   13878:	b	13880 <udev_util_encode_string@@LIBUDEV_183+0x8050>
   1387c:	mov	x0, #0x0                   	// #0
   13880:	ldr	x3, [x29, #352]
   13884:	ldr	x1, [x29, #168]
   13888:	str	x1, [sp, #16]
   1388c:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13890:	add	x1, x1, #0x5e0
   13894:	str	x1, [sp, #8]
   13898:	str	xzr, [sp]
   1389c:	mov	x7, #0x0                   	// #0
   138a0:	mov	x6, x3
   138a4:	mov	x5, x0
   138a8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   138ac:	add	x4, x0, #0xbb8
   138b0:	mov	w3, #0x129                 	// #297
   138b4:	ldr	w1, [x29, #276]
   138b8:	ldr	w0, [x29, #272]
   138bc:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   138c0:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   138c4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   138c8:	add	x1, x0, #0x610
   138cc:	ldr	x0, [x29, #176]
   138d0:	bl	5440 <strcmp@plt>
   138d4:	cmp	w0, #0x0
   138d8:	b.ne	139c0 <udev_util_encode_string@@LIBUDEV_183+0x8190>  // b.any
   138dc:	ldr	x1, [x29, #168]
   138e0:	ldr	x0, [x29, #184]
   138e4:	bl	180c0 <udev_util_encode_string@@LIBUDEV_183+0xc890>
   138e8:	str	w0, [x29, #204]
   138ec:	ldr	w0, [x29, #204]
   138f0:	cmp	w0, #0x0
   138f4:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   138f8:	str	xzr, [x29, #352]
   138fc:	ldr	x0, [x29, #184]
   13900:	str	x0, [x29, #488]
   13904:	mov	w0, #0x7                   	// #7
   13908:	str	w0, [x29, #264]
   1390c:	ldr	w0, [x29, #204]
   13910:	str	w0, [x29, #268]
   13914:	ldr	x0, [x29, #488]
   13918:	cmp	x0, #0x0
   1391c:	b.eq	13958 <udev_util_encode_string@@LIBUDEV_183+0x8128>  // b.none
   13920:	mov	w0, #0x0                   	// #0
   13924:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13928:	mov	w1, w0
   1392c:	ldr	w0, [x29, #264]
   13930:	cmp	w0, w1
   13934:	cset	w0, le
   13938:	and	w0, w0, #0xff
   1393c:	and	x0, x0, #0xff
   13940:	cmp	x0, #0x0
   13944:	b.eq	13958 <udev_util_encode_string@@LIBUDEV_183+0x8128>  // b.none
   13948:	add	x0, x29, #0x160
   1394c:	mov	x1, x0
   13950:	ldr	x0, [x29, #488]
   13954:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13958:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1395c:	add	x2, x0, #0x353
   13960:	ldr	x0, [x29, #352]
   13964:	cmp	x0, #0x0
   13968:	b.eq	13978 <udev_util_encode_string@@LIBUDEV_183+0x8148>  // b.none
   1396c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13970:	add	x0, x0, #0x438
   13974:	b	1397c <udev_util_encode_string@@LIBUDEV_183+0x814c>
   13978:	mov	x0, #0x0                   	// #0
   1397c:	ldr	x3, [x29, #352]
   13980:	ldr	x1, [x29, #168]
   13984:	str	x1, [sp, #16]
   13988:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1398c:	add	x1, x1, #0x618
   13990:	str	x1, [sp, #8]
   13994:	str	xzr, [sp]
   13998:	mov	x7, #0x0                   	// #0
   1399c:	mov	x6, x3
   139a0:	mov	x5, x0
   139a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   139a8:	add	x4, x0, #0xbb8
   139ac:	mov	w3, #0x12d                 	// #301
   139b0:	ldr	w1, [x29, #268]
   139b4:	ldr	w0, [x29, #264]
   139b8:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   139bc:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   139c0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   139c4:	add	x1, x0, #0x398
   139c8:	ldr	x0, [x29, #176]
   139cc:	bl	5440 <strcmp@plt>
   139d0:	cmp	w0, #0x0
   139d4:	b.ne	13abc <udev_util_encode_string@@LIBUDEV_183+0x828c>  // b.any
   139d8:	ldr	x1, [x29, #168]
   139dc:	ldr	x0, [x29, #184]
   139e0:	bl	1284c <udev_util_encode_string@@LIBUDEV_183+0x701c>
   139e4:	str	w0, [x29, #204]
   139e8:	ldr	w0, [x29, #204]
   139ec:	cmp	w0, #0x0
   139f0:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   139f4:	str	xzr, [x29, #352]
   139f8:	ldr	x0, [x29, #184]
   139fc:	str	x0, [x29, #480]
   13a00:	mov	w0, #0x7                   	// #7
   13a04:	str	w0, [x29, #256]
   13a08:	ldr	w0, [x29, #204]
   13a0c:	str	w0, [x29, #260]
   13a10:	ldr	x0, [x29, #480]
   13a14:	cmp	x0, #0x0
   13a18:	b.eq	13a54 <udev_util_encode_string@@LIBUDEV_183+0x8224>  // b.none
   13a1c:	mov	w0, #0x0                   	// #0
   13a20:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13a24:	mov	w1, w0
   13a28:	ldr	w0, [x29, #256]
   13a2c:	cmp	w0, w1
   13a30:	cset	w0, le
   13a34:	and	w0, w0, #0xff
   13a38:	and	x0, x0, #0xff
   13a3c:	cmp	x0, #0x0
   13a40:	b.eq	13a54 <udev_util_encode_string@@LIBUDEV_183+0x8224>  // b.none
   13a44:	add	x0, x29, #0x160
   13a48:	mov	x1, x0
   13a4c:	ldr	x0, [x29, #480]
   13a50:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13a54:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13a58:	add	x2, x0, #0x353
   13a5c:	ldr	x0, [x29, #352]
   13a60:	cmp	x0, #0x0
   13a64:	b.eq	13a74 <udev_util_encode_string@@LIBUDEV_183+0x8244>  // b.none
   13a68:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13a6c:	add	x0, x0, #0x438
   13a70:	b	13a78 <udev_util_encode_string@@LIBUDEV_183+0x8248>
   13a74:	mov	x0, #0x0                   	// #0
   13a78:	ldr	x3, [x29, #352]
   13a7c:	ldr	x1, [x29, #168]
   13a80:	str	x1, [sp, #16]
   13a84:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13a88:	add	x1, x1, #0x648
   13a8c:	str	x1, [sp, #8]
   13a90:	str	xzr, [sp]
   13a94:	mov	x7, #0x0                   	// #0
   13a98:	mov	x6, x3
   13a9c:	mov	x5, x0
   13aa0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13aa4:	add	x4, x0, #0xbb8
   13aa8:	mov	w3, #0x131                 	// #305
   13aac:	ldr	w1, [x29, #260]
   13ab0:	ldr	w0, [x29, #256]
   13ab4:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   13ab8:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   13abc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13ac0:	add	x1, x0, #0x3a8
   13ac4:	ldr	x0, [x29, #176]
   13ac8:	bl	5440 <strcmp@plt>
   13acc:	cmp	w0, #0x0
   13ad0:	b.ne	13bb8 <udev_util_encode_string@@LIBUDEV_183+0x8388>  // b.any
   13ad4:	ldr	x1, [x29, #168]
   13ad8:	ldr	x0, [x29, #184]
   13adc:	bl	1298c <udev_util_encode_string@@LIBUDEV_183+0x715c>
   13ae0:	str	w0, [x29, #204]
   13ae4:	ldr	w0, [x29, #204]
   13ae8:	cmp	w0, #0x0
   13aec:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13af0:	str	xzr, [x29, #352]
   13af4:	ldr	x0, [x29, #184]
   13af8:	str	x0, [x29, #472]
   13afc:	mov	w0, #0x7                   	// #7
   13b00:	str	w0, [x29, #248]
   13b04:	ldr	w0, [x29, #204]
   13b08:	str	w0, [x29, #252]
   13b0c:	ldr	x0, [x29, #472]
   13b10:	cmp	x0, #0x0
   13b14:	b.eq	13b50 <udev_util_encode_string@@LIBUDEV_183+0x8320>  // b.none
   13b18:	mov	w0, #0x0                   	// #0
   13b1c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13b20:	mov	w1, w0
   13b24:	ldr	w0, [x29, #248]
   13b28:	cmp	w0, w1
   13b2c:	cset	w0, le
   13b30:	and	w0, w0, #0xff
   13b34:	and	x0, x0, #0xff
   13b38:	cmp	x0, #0x0
   13b3c:	b.eq	13b50 <udev_util_encode_string@@LIBUDEV_183+0x8320>  // b.none
   13b40:	add	x0, x29, #0x160
   13b44:	mov	x1, x0
   13b48:	ldr	x0, [x29, #472]
   13b4c:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13b50:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13b54:	add	x2, x0, #0x353
   13b58:	ldr	x0, [x29, #352]
   13b5c:	cmp	x0, #0x0
   13b60:	b.eq	13b70 <udev_util_encode_string@@LIBUDEV_183+0x8340>  // b.none
   13b64:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13b68:	add	x0, x0, #0x438
   13b6c:	b	13b74 <udev_util_encode_string@@LIBUDEV_183+0x8344>
   13b70:	mov	x0, #0x0                   	// #0
   13b74:	ldr	x3, [x29, #352]
   13b78:	ldr	x1, [x29, #168]
   13b7c:	str	x1, [sp, #16]
   13b80:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13b84:	add	x1, x1, #0x678
   13b88:	str	x1, [sp, #8]
   13b8c:	str	xzr, [sp]
   13b90:	mov	x7, #0x0                   	// #0
   13b94:	mov	x6, x3
   13b98:	mov	x5, x0
   13b9c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13ba0:	add	x4, x0, #0xbb8
   13ba4:	mov	w3, #0x135                 	// #309
   13ba8:	ldr	w1, [x29, #252]
   13bac:	ldr	w0, [x29, #248]
   13bb0:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   13bb4:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   13bb8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13bbc:	add	x1, x0, #0x3b8
   13bc0:	ldr	x0, [x29, #176]
   13bc4:	bl	5440 <strcmp@plt>
   13bc8:	cmp	w0, #0x0
   13bcc:	b.ne	13cb4 <udev_util_encode_string@@LIBUDEV_183+0x8484>  // b.any
   13bd0:	ldr	x1, [x29, #168]
   13bd4:	ldr	x0, [x29, #184]
   13bd8:	bl	12b60 <udev_util_encode_string@@LIBUDEV_183+0x7330>
   13bdc:	str	w0, [x29, #204]
   13be0:	ldr	w0, [x29, #204]
   13be4:	cmp	w0, #0x0
   13be8:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13bec:	str	xzr, [x29, #352]
   13bf0:	ldr	x0, [x29, #184]
   13bf4:	str	x0, [x29, #464]
   13bf8:	mov	w0, #0x7                   	// #7
   13bfc:	str	w0, [x29, #240]
   13c00:	ldr	w0, [x29, #204]
   13c04:	str	w0, [x29, #244]
   13c08:	ldr	x0, [x29, #464]
   13c0c:	cmp	x0, #0x0
   13c10:	b.eq	13c4c <udev_util_encode_string@@LIBUDEV_183+0x841c>  // b.none
   13c14:	mov	w0, #0x0                   	// #0
   13c18:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13c1c:	mov	w1, w0
   13c20:	ldr	w0, [x29, #240]
   13c24:	cmp	w0, w1
   13c28:	cset	w0, le
   13c2c:	and	w0, w0, #0xff
   13c30:	and	x0, x0, #0xff
   13c34:	cmp	x0, #0x0
   13c38:	b.eq	13c4c <udev_util_encode_string@@LIBUDEV_183+0x841c>  // b.none
   13c3c:	add	x0, x29, #0x160
   13c40:	mov	x1, x0
   13c44:	ldr	x0, [x29, #464]
   13c48:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13c4c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13c50:	add	x2, x0, #0x353
   13c54:	ldr	x0, [x29, #352]
   13c58:	cmp	x0, #0x0
   13c5c:	b.eq	13c6c <udev_util_encode_string@@LIBUDEV_183+0x843c>  // b.none
   13c60:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13c64:	add	x0, x0, #0x438
   13c68:	b	13c70 <udev_util_encode_string@@LIBUDEV_183+0x8440>
   13c6c:	mov	x0, #0x0                   	// #0
   13c70:	ldr	x3, [x29, #352]
   13c74:	ldr	x1, [x29, #168]
   13c78:	str	x1, [sp, #16]
   13c7c:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13c80:	add	x1, x1, #0x6a8
   13c84:	str	x1, [sp, #8]
   13c88:	str	xzr, [sp]
   13c8c:	mov	x7, #0x0                   	// #0
   13c90:	mov	x6, x3
   13c94:	mov	x5, x0
   13c98:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13c9c:	add	x4, x0, #0xbb8
   13ca0:	mov	w3, #0x139                 	// #313
   13ca4:	ldr	w1, [x29, #244]
   13ca8:	ldr	w0, [x29, #240]
   13cac:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   13cb0:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   13cb4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13cb8:	add	x1, x0, #0x3c8
   13cbc:	ldr	x0, [x29, #176]
   13cc0:	bl	5440 <strcmp@plt>
   13cc4:	cmp	w0, #0x0
   13cc8:	b.ne	13db0 <udev_util_encode_string@@LIBUDEV_183+0x8580>  // b.any
   13ccc:	ldr	x1, [x29, #168]
   13cd0:	ldr	x0, [x29, #184]
   13cd4:	bl	12cf0 <udev_util_encode_string@@LIBUDEV_183+0x74c0>
   13cd8:	str	w0, [x29, #204]
   13cdc:	ldr	w0, [x29, #204]
   13ce0:	cmp	w0, #0x0
   13ce4:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   13ce8:	str	xzr, [x29, #352]
   13cec:	ldr	x0, [x29, #184]
   13cf0:	str	x0, [x29, #456]
   13cf4:	mov	w0, #0x7                   	// #7
   13cf8:	str	w0, [x29, #232]
   13cfc:	ldr	w0, [x29, #204]
   13d00:	str	w0, [x29, #236]
   13d04:	ldr	x0, [x29, #456]
   13d08:	cmp	x0, #0x0
   13d0c:	b.eq	13d48 <udev_util_encode_string@@LIBUDEV_183+0x8518>  // b.none
   13d10:	mov	w0, #0x0                   	// #0
   13d14:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13d18:	mov	w1, w0
   13d1c:	ldr	w0, [x29, #232]
   13d20:	cmp	w0, w1
   13d24:	cset	w0, le
   13d28:	and	w0, w0, #0xff
   13d2c:	and	x0, x0, #0xff
   13d30:	cmp	x0, #0x0
   13d34:	b.eq	13d48 <udev_util_encode_string@@LIBUDEV_183+0x8518>  // b.none
   13d38:	add	x0, x29, #0x160
   13d3c:	mov	x1, x0
   13d40:	ldr	x0, [x29, #456]
   13d44:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13d48:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13d4c:	add	x2, x0, #0x353
   13d50:	ldr	x0, [x29, #352]
   13d54:	cmp	x0, #0x0
   13d58:	b.eq	13d68 <udev_util_encode_string@@LIBUDEV_183+0x8538>  // b.none
   13d5c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13d60:	add	x0, x0, #0x438
   13d64:	b	13d6c <udev_util_encode_string@@LIBUDEV_183+0x853c>
   13d68:	mov	x0, #0x0                   	// #0
   13d6c:	ldr	x3, [x29, #352]
   13d70:	ldr	x1, [x29, #168]
   13d74:	str	x1, [sp, #16]
   13d78:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13d7c:	add	x1, x1, #0x6d8
   13d80:	str	x1, [sp, #8]
   13d84:	str	xzr, [sp]
   13d88:	mov	x7, #0x0                   	// #0
   13d8c:	mov	x6, x3
   13d90:	mov	x5, x0
   13d94:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13d98:	add	x4, x0, #0xbb8
   13d9c:	mov	w3, #0x13d                 	// #317
   13da0:	ldr	w1, [x29, #236]
   13da4:	ldr	w0, [x29, #232]
   13da8:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   13dac:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   13db0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13db4:	add	x1, x0, #0x708
   13db8:	ldr	x0, [x29, #176]
   13dbc:	bl	5440 <strcmp@plt>
   13dc0:	cmp	w0, #0x0
   13dc4:	b.ne	13fbc <udev_util_encode_string@@LIBUDEV_183+0x878c>  // b.any
   13dc8:	ldr	x0, [x29, #168]
   13dcc:	str	x0, [x29, #336]
   13dd0:	add	x1, x29, #0x158
   13dd4:	add	x4, x29, #0x150
   13dd8:	mov	w3, #0x0                   	// #0
   13ddc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13de0:	add	x2, x0, #0x718
   13de4:	mov	x0, x4
   13de8:	bl	342dc <udev_util_encode_string@@LIBUDEV_183+0x28aac>
   13dec:	str	x0, [x29, #368]
   13df0:	b	13fac <udev_util_encode_string@@LIBUDEV_183+0x877c>
   13df4:	mov	x0, sp
   13df8:	mov	x19, x0
   13dfc:	ldr	x0, [x29, #344]
   13e00:	add	x0, x0, #0x1
   13e04:	mov	x1, x0
   13e08:	sub	x1, x1, #0x1
   13e0c:	str	x1, [x29, #432]
   13e10:	str	x0, [x29, #144]
   13e14:	str	xzr, [x29, #152]
   13e18:	ldp	x2, x3, [x29, #144]
   13e1c:	mov	x1, x2
   13e20:	lsr	x1, x1, #61
   13e24:	mov	x4, x3
   13e28:	lsl	x25, x4, #3
   13e2c:	orr	x25, x1, x25
   13e30:	mov	x1, x2
   13e34:	lsl	x24, x1, #3
   13e38:	str	x0, [x29, #128]
   13e3c:	str	xzr, [x29, #136]
   13e40:	ldp	x2, x3, [x29, #128]
   13e44:	mov	x1, x2
   13e48:	lsr	x1, x1, #61
   13e4c:	mov	x4, x3
   13e50:	lsl	x27, x4, #3
   13e54:	orr	x27, x1, x27
   13e58:	mov	x1, x2
   13e5c:	lsl	x26, x1, #3
   13e60:	add	x0, x0, #0xf
   13e64:	lsr	x0, x0, #4
   13e68:	lsl	x0, x0, #4
   13e6c:	sub	sp, sp, x0
   13e70:	add	x0, sp, #0x20
   13e74:	add	x0, x0, #0x0
   13e78:	str	x0, [x29, #440]
   13e7c:	ldr	x0, [x29, #440]
   13e80:	ldr	x1, [x29, #344]
   13e84:	mov	x2, x1
   13e88:	ldr	x1, [x29, #368]
   13e8c:	bl	5790 <strncpy@plt>
   13e90:	ldr	x0, [x29, #344]
   13e94:	ldr	x1, [x29, #440]
   13e98:	strb	wzr, [x1, x0]
   13e9c:	ldr	x0, [x29, #440]
   13ea0:	mov	x1, x0
   13ea4:	ldr	x0, [x29, #184]
   13ea8:	bl	1b61c <udev_util_encode_string@@LIBUDEV_183+0xfdec>
   13eac:	str	w0, [x29, #204]
   13eb0:	ldr	w0, [x29, #204]
   13eb4:	cmp	w0, #0x0
   13eb8:	b.ge	13f88 <udev_util_encode_string@@LIBUDEV_183+0x8758>  // b.tcont
   13ebc:	str	xzr, [x29, #352]
   13ec0:	ldr	x0, [x29, #184]
   13ec4:	str	x0, [x29, #448]
   13ec8:	mov	w0, #0x7                   	// #7
   13ecc:	str	w0, [x29, #224]
   13ed0:	ldr	w0, [x29, #204]
   13ed4:	str	w0, [x29, #228]
   13ed8:	ldr	x0, [x29, #448]
   13edc:	cmp	x0, #0x0
   13ee0:	b.eq	13f1c <udev_util_encode_string@@LIBUDEV_183+0x86ec>  // b.none
   13ee4:	mov	w0, #0x0                   	// #0
   13ee8:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   13eec:	mov	w1, w0
   13ef0:	ldr	w0, [x29, #224]
   13ef4:	cmp	w0, w1
   13ef8:	cset	w0, le
   13efc:	and	w0, w0, #0xff
   13f00:	and	x0, x0, #0xff
   13f04:	cmp	x0, #0x0
   13f08:	b.eq	13f1c <udev_util_encode_string@@LIBUDEV_183+0x86ec>  // b.none
   13f0c:	add	x0, x29, #0x160
   13f10:	mov	x1, x0
   13f14:	ldr	x0, [x29, #448]
   13f18:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   13f1c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13f20:	add	x2, x0, #0x353
   13f24:	ldr	x0, [x29, #352]
   13f28:	cmp	x0, #0x0
   13f2c:	b.eq	13f3c <udev_util_encode_string@@LIBUDEV_183+0x870c>  // b.none
   13f30:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13f34:	add	x0, x0, #0x438
   13f38:	b	13f40 <udev_util_encode_string@@LIBUDEV_183+0x8710>
   13f3c:	mov	x0, #0x0                   	// #0
   13f40:	ldr	x3, [x29, #352]
   13f44:	ldr	x1, [x29, #440]
   13f48:	str	x1, [sp, #16]
   13f4c:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13f50:	add	x1, x1, #0x720
   13f54:	str	x1, [sp, #8]
   13f58:	str	xzr, [sp]
   13f5c:	mov	x7, #0x0                   	// #0
   13f60:	mov	x6, x3
   13f64:	mov	x5, x0
   13f68:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13f6c:	add	x4, x0, #0xbb8
   13f70:	mov	w3, #0x14a                 	// #330
   13f74:	ldr	w1, [x29, #228]
   13f78:	ldr	w0, [x29, #224]
   13f7c:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   13f80:	mov	sp, x19
   13f84:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   13f88:	mov	sp, x19
   13f8c:	add	x1, x29, #0x158
   13f90:	add	x4, x29, #0x150
   13f94:	mov	w3, #0x0                   	// #0
   13f98:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13f9c:	add	x2, x0, #0x718
   13fa0:	mov	x0, x4
   13fa4:	bl	342dc <udev_util_encode_string@@LIBUDEV_183+0x28aac>
   13fa8:	str	x0, [x29, #368]
   13fac:	ldr	x0, [x29, #368]
   13fb0:	cmp	x0, #0x0
   13fb4:	b.ne	13df4 <udev_util_encode_string@@LIBUDEV_183+0x85c4>  // b.any
   13fb8:	b	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>
   13fbc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13fc0:	add	x1, x0, #0x750
   13fc4:	ldr	x0, [x29, #176]
   13fc8:	bl	5440 <strcmp@plt>
   13fcc:	cmp	w0, #0x0
   13fd0:	b.ne	141c8 <udev_util_encode_string@@LIBUDEV_183+0x8998>  // b.any
   13fd4:	ldr	x0, [x29, #168]
   13fd8:	str	x0, [x29, #336]
   13fdc:	add	x1, x29, #0x158
   13fe0:	add	x4, x29, #0x150
   13fe4:	mov	w3, #0x0                   	// #0
   13fe8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   13fec:	add	x2, x0, #0x758
   13ff0:	mov	x0, x4
   13ff4:	bl	342dc <udev_util_encode_string@@LIBUDEV_183+0x28aac>
   13ff8:	str	x0, [x29, #360]
   13ffc:	b	141b8 <udev_util_encode_string@@LIBUDEV_183+0x8988>
   14000:	mov	x0, sp
   14004:	mov	x19, x0
   14008:	ldr	x0, [x29, #344]
   1400c:	add	x0, x0, #0x1
   14010:	mov	x1, x0
   14014:	sub	x1, x1, #0x1
   14018:	str	x1, [x29, #408]
   1401c:	str	x0, [x29, #112]
   14020:	str	xzr, [x29, #120]
   14024:	ldp	x2, x3, [x29, #112]
   14028:	mov	x1, x2
   1402c:	lsr	x1, x1, #61
   14030:	mov	x4, x3
   14034:	lsl	x21, x4, #3
   14038:	orr	x21, x1, x21
   1403c:	mov	x1, x2
   14040:	lsl	x20, x1, #3
   14044:	str	x0, [x29, #96]
   14048:	str	xzr, [x29, #104]
   1404c:	ldp	x2, x3, [x29, #96]
   14050:	mov	x1, x2
   14054:	lsr	x1, x1, #61
   14058:	mov	x4, x3
   1405c:	lsl	x23, x4, #3
   14060:	orr	x23, x1, x23
   14064:	mov	x1, x2
   14068:	lsl	x22, x1, #3
   1406c:	add	x0, x0, #0xf
   14070:	lsr	x0, x0, #4
   14074:	lsl	x0, x0, #4
   14078:	sub	sp, sp, x0
   1407c:	add	x0, sp, #0x20
   14080:	add	x0, x0, #0x0
   14084:	str	x0, [x29, #416]
   14088:	ldr	x0, [x29, #416]
   1408c:	ldr	x1, [x29, #344]
   14090:	mov	x2, x1
   14094:	ldr	x1, [x29, #360]
   14098:	bl	5790 <strncpy@plt>
   1409c:	ldr	x0, [x29, #344]
   140a0:	ldr	x1, [x29, #416]
   140a4:	strb	wzr, [x1, x0]
   140a8:	ldr	x0, [x29, #416]
   140ac:	mov	x1, x0
   140b0:	ldr	x0, [x29, #184]
   140b4:	bl	1b4d8 <udev_util_encode_string@@LIBUDEV_183+0xfca8>
   140b8:	str	w0, [x29, #204]
   140bc:	ldr	w0, [x29, #204]
   140c0:	cmp	w0, #0x0
   140c4:	b.ge	14194 <udev_util_encode_string@@LIBUDEV_183+0x8964>  // b.tcont
   140c8:	str	xzr, [x29, #352]
   140cc:	ldr	x0, [x29, #184]
   140d0:	str	x0, [x29, #424]
   140d4:	mov	w0, #0x7                   	// #7
   140d8:	str	w0, [x29, #216]
   140dc:	ldr	w0, [x29, #204]
   140e0:	str	w0, [x29, #220]
   140e4:	ldr	x0, [x29, #424]
   140e8:	cmp	x0, #0x0
   140ec:	b.eq	14128 <udev_util_encode_string@@LIBUDEV_183+0x88f8>  // b.none
   140f0:	mov	w0, #0x0                   	// #0
   140f4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   140f8:	mov	w1, w0
   140fc:	ldr	w0, [x29, #216]
   14100:	cmp	w0, w1
   14104:	cset	w0, le
   14108:	and	w0, w0, #0xff
   1410c:	and	x0, x0, #0xff
   14110:	cmp	x0, #0x0
   14114:	b.eq	14128 <udev_util_encode_string@@LIBUDEV_183+0x88f8>  // b.none
   14118:	add	x0, x29, #0x160
   1411c:	mov	x1, x0
   14120:	ldr	x0, [x29, #424]
   14124:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   14128:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1412c:	add	x2, x0, #0x353
   14130:	ldr	x0, [x29, #352]
   14134:	cmp	x0, #0x0
   14138:	b.eq	14148 <udev_util_encode_string@@LIBUDEV_183+0x8918>  // b.none
   1413c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14140:	add	x0, x0, #0x438
   14144:	b	1414c <udev_util_encode_string@@LIBUDEV_183+0x891c>
   14148:	mov	x0, #0x0                   	// #0
   1414c:	ldr	x3, [x29, #352]
   14150:	ldr	x1, [x29, #416]
   14154:	str	x1, [sp, #16]
   14158:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1415c:	add	x1, x1, #0x760
   14160:	str	x1, [sp, #8]
   14164:	str	xzr, [sp]
   14168:	mov	x7, #0x0                   	// #0
   1416c:	mov	x6, x3
   14170:	mov	x5, x0
   14174:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14178:	add	x4, x0, #0xbb8
   1417c:	mov	w3, #0x158                 	// #344
   14180:	ldr	w1, [x29, #220]
   14184:	ldr	w0, [x29, #216]
   14188:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1418c:	mov	sp, x19
   14190:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   14194:	mov	sp, x19
   14198:	add	x1, x29, #0x158
   1419c:	add	x4, x29, #0x150
   141a0:	mov	w3, #0x0                   	// #0
   141a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   141a8:	add	x2, x0, #0x758
   141ac:	mov	x0, x4
   141b0:	bl	342dc <udev_util_encode_string@@LIBUDEV_183+0x28aac>
   141b4:	str	x0, [x29, #360]
   141b8:	ldr	x0, [x29, #360]
   141bc:	cmp	x0, #0x0
   141c0:	b.ne	14000 <udev_util_encode_string@@LIBUDEV_183+0x87d0>  // b.any
   141c4:	b	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>
   141c8:	ldr	x2, [x29, #168]
   141cc:	ldr	x1, [x29, #176]
   141d0:	ldr	x0, [x29, #184]
   141d4:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   141d8:	str	w0, [x29, #204]
   141dc:	ldr	w0, [x29, #204]
   141e0:	cmp	w0, #0x0
   141e4:	b.ge	142b8 <udev_util_encode_string@@LIBUDEV_183+0x8a88>  // b.tcont
   141e8:	str	xzr, [x29, #352]
   141ec:	ldr	x0, [x29, #184]
   141f0:	str	x0, [x29, #400]
   141f4:	mov	w0, #0x7                   	// #7
   141f8:	str	w0, [x29, #208]
   141fc:	ldr	w0, [x29, #204]
   14200:	str	w0, [x29, #212]
   14204:	ldr	x0, [x29, #400]
   14208:	cmp	x0, #0x0
   1420c:	b.eq	14248 <udev_util_encode_string@@LIBUDEV_183+0x8a18>  // b.none
   14210:	mov	w0, #0x0                   	// #0
   14214:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   14218:	mov	w1, w0
   1421c:	ldr	w0, [x29, #208]
   14220:	cmp	w0, w1
   14224:	cset	w0, le
   14228:	and	w0, w0, #0xff
   1422c:	and	x0, x0, #0xff
   14230:	cmp	x0, #0x0
   14234:	b.eq	14248 <udev_util_encode_string@@LIBUDEV_183+0x8a18>  // b.none
   14238:	add	x0, x29, #0x160
   1423c:	mov	x1, x0
   14240:	ldr	x0, [x29, #400]
   14244:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   14248:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1424c:	add	x2, x0, #0x353
   14250:	ldr	x0, [x29, #352]
   14254:	cmp	x0, #0x0
   14258:	b.eq	14268 <udev_util_encode_string@@LIBUDEV_183+0x8a38>  // b.none
   1425c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14260:	add	x0, x0, #0x438
   14264:	b	1426c <udev_util_encode_string@@LIBUDEV_183+0x8a3c>
   14268:	mov	x0, #0x0                   	// #0
   1426c:	ldr	x3, [x29, #352]
   14270:	ldr	x1, [x29, #168]
   14274:	str	x1, [sp, #24]
   14278:	ldr	x1, [x29, #176]
   1427c:	str	x1, [sp, #16]
   14280:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14284:	add	x1, x1, #0x788
   14288:	str	x1, [sp, #8]
   1428c:	str	xzr, [sp]
   14290:	mov	x7, #0x0                   	// #0
   14294:	mov	x6, x3
   14298:	mov	x5, x0
   1429c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   142a0:	add	x4, x0, #0xbb8
   142a4:	mov	w3, #0x15d                 	// #349
   142a8:	ldr	w1, [x29, #212]
   142ac:	ldr	w0, [x29, #208]
   142b0:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   142b4:	b	142bc <udev_util_encode_string@@LIBUDEV_183+0x8a8c>
   142b8:	mov	w0, #0x0                   	// #0
   142bc:	mov	w1, w0
   142c0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   142c4:	ldr	x0, [x0, #4016]
   142c8:	ldr	x2, [x29, #600]
   142cc:	ldr	x0, [x0]
   142d0:	eor	x0, x2, x0
   142d4:	cmp	x0, #0x0
   142d8:	b.eq	142e0 <udev_util_encode_string@@LIBUDEV_183+0x8ab0>  // b.none
   142dc:	bl	5390 <__stack_chk_fail@plt>
   142e0:	mov	w0, w1
   142e4:	sub	sp, x29, #0x20
   142e8:	ldp	x19, x20, [sp, #48]
   142ec:	ldp	x21, x22, [sp, #64]
   142f0:	ldp	x23, x24, [sp, #80]
   142f4:	ldp	x25, x26, [sp, #96]
   142f8:	ldr	x27, [sp, #112]
   142fc:	ldp	x29, x30, [sp, #32]
   14300:	add	sp, sp, #0x280
   14304:	ret
   14308:	sub	sp, sp, #0x90
   1430c:	stp	x29, x30, [sp, #32]
   14310:	add	x29, sp, #0x20
   14314:	str	x0, [sp, #72]
   14318:	str	x1, [sp, #64]
   1431c:	str	x2, [sp, #56]
   14320:	str	x3, [sp, #48]
   14324:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14328:	ldr	x0, [x0, #4016]
   1432c:	ldr	x1, [x0]
   14330:	str	x1, [sp, #136]
   14334:	mov	x1, #0x0                   	// #0
   14338:	str	xzr, [sp, #104]
   1433c:	str	xzr, [sp, #112]
   14340:	ldr	x0, [sp, #72]
   14344:	cmp	x0, #0x0
   14348:	cset	w0, eq  // eq = none
   1434c:	and	w0, w0, #0xff
   14350:	and	x0, x0, #0xff
   14354:	cmp	x0, #0x0
   14358:	b.eq	14384 <udev_util_encode_string@@LIBUDEV_183+0x8b54>  // b.none
   1435c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14360:	add	x1, x0, #0x353
   14364:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14368:	add	x4, x0, #0xbc8
   1436c:	mov	w3, #0x168                 	// #360
   14370:	mov	x2, x1
   14374:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14378:	add	x1, x0, #0x380
   1437c:	mov	w0, #0x0                   	// #0
   14380:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14384:	ldr	x0, [sp, #64]
   14388:	cmp	x0, #0x0
   1438c:	cset	w0, eq  // eq = none
   14390:	and	w0, w0, #0xff
   14394:	and	x0, x0, #0xff
   14398:	cmp	x0, #0x0
   1439c:	b.eq	143c8 <udev_util_encode_string@@LIBUDEV_183+0x8b98>  // b.none
   143a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   143a4:	add	x1, x0, #0x353
   143a8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   143ac:	add	x4, x0, #0xbc8
   143b0:	mov	w3, #0x169                 	// #361
   143b4:	mov	x2, x1
   143b8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   143bc:	add	x1, x0, #0x388
   143c0:	mov	w0, #0x0                   	// #0
   143c4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   143c8:	ldr	x0, [sp, #56]
   143cc:	cmp	x0, #0x0
   143d0:	cset	w0, eq  // eq = none
   143d4:	and	w0, w0, #0xff
   143d8:	and	x0, x0, #0xff
   143dc:	cmp	x0, #0x0
   143e0:	b.eq	1440c <udev_util_encode_string@@LIBUDEV_183+0x8bdc>  // b.none
   143e4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   143e8:	add	x1, x0, #0x353
   143ec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   143f0:	add	x4, x0, #0xbc8
   143f4:	mov	w3, #0x16a                 	// #362
   143f8:	mov	x2, x1
   143fc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14400:	add	x1, x0, #0x7b8
   14404:	mov	w0, #0x0                   	// #0
   14408:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1440c:	ldr	x0, [sp, #48]
   14410:	cmp	x0, #0x0
   14414:	cset	w0, eq  // eq = none
   14418:	and	w0, w0, #0xff
   1441c:	and	x0, x0, #0xff
   14420:	cmp	x0, #0x0
   14424:	b.eq	14450 <udev_util_encode_string@@LIBUDEV_183+0x8c20>  // b.none
   14428:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1442c:	add	x1, x0, #0x353
   14430:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14434:	add	x4, x0, #0xbc8
   14438:	mov	w3, #0x16b                 	// #363
   1443c:	mov	x2, x1
   14440:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14444:	add	x1, x0, #0x7c0
   14448:	mov	w0, #0x0                   	// #0
   1444c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14450:	mov	w1, #0x3d                  	// #61
   14454:	ldr	x0, [sp, #64]
   14458:	bl	5570 <strchr@plt>
   1445c:	str	x0, [sp, #120]
   14460:	ldr	x0, [sp, #120]
   14464:	cmp	x0, #0x0
   14468:	b.ne	14534 <udev_util_encode_string@@LIBUDEV_183+0x8d04>  // b.any
   1446c:	str	xzr, [sp, #96]
   14470:	ldr	x0, [sp, #72]
   14474:	str	x0, [sp, #128]
   14478:	mov	w0, #0x7                   	// #7
   1447c:	str	w0, [sp, #88]
   14480:	str	wzr, [sp, #92]
   14484:	ldr	x0, [sp, #128]
   14488:	cmp	x0, #0x0
   1448c:	b.eq	144c8 <udev_util_encode_string@@LIBUDEV_183+0x8c98>  // b.none
   14490:	mov	w0, #0x0                   	// #0
   14494:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   14498:	mov	w1, w0
   1449c:	ldr	w0, [sp, #88]
   144a0:	cmp	w0, w1
   144a4:	cset	w0, le
   144a8:	and	w0, w0, #0xff
   144ac:	and	x0, x0, #0xff
   144b0:	cmp	x0, #0x0
   144b4:	b.eq	144c8 <udev_util_encode_string@@LIBUDEV_183+0x8c98>  // b.none
   144b8:	add	x0, sp, #0x60
   144bc:	mov	x1, x0
   144c0:	ldr	x0, [sp, #128]
   144c4:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   144c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   144cc:	add	x2, x0, #0x353
   144d0:	ldr	x0, [sp, #96]
   144d4:	cmp	x0, #0x0
   144d8:	b.eq	144e8 <udev_util_encode_string@@LIBUDEV_183+0x8cb8>  // b.none
   144dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   144e0:	add	x0, x0, #0x438
   144e4:	b	144ec <udev_util_encode_string@@LIBUDEV_183+0x8cbc>
   144e8:	mov	x0, #0x0                   	// #0
   144ec:	ldr	x3, [sp, #96]
   144f0:	ldr	x1, [sp, #64]
   144f4:	str	x1, [sp, #16]
   144f8:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   144fc:	add	x1, x1, #0x7c8
   14500:	str	x1, [sp, #8]
   14504:	str	xzr, [sp]
   14508:	mov	x7, #0x0                   	// #0
   1450c:	mov	x6, x3
   14510:	mov	x5, x0
   14514:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14518:	add	x4, x0, #0xbd8
   1451c:	mov	w3, #0x16f                 	// #367
   14520:	ldr	w1, [sp, #92]
   14524:	ldr	w0, [sp, #88]
   14528:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1452c:	mov	w0, #0xffffffea            	// #-22
   14530:	b	145ec <udev_util_encode_string@@LIBUDEV_183+0x8dbc>
   14534:	ldr	x0, [sp, #120]
   14538:	strb	wzr, [x0]
   1453c:	ldr	x0, [sp, #120]
   14540:	add	x0, x0, #0x1
   14544:	str	x0, [sp, #120]
   14548:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1454c:	add	x1, x0, #0x7f0
   14550:	ldr	x0, [sp, #64]
   14554:	bl	5440 <strcmp@plt>
   14558:	cmp	w0, #0x0
   1455c:	b.ne	1456c <udev_util_encode_string@@LIBUDEV_183+0x8d3c>  // b.any
   14560:	ldr	x0, [sp, #120]
   14564:	str	x0, [sp, #104]
   14568:	b	145b8 <udev_util_encode_string@@LIBUDEV_183+0x8d88>
   1456c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14570:	add	x1, x0, #0x7f8
   14574:	ldr	x0, [sp, #64]
   14578:	bl	5440 <strcmp@plt>
   1457c:	cmp	w0, #0x0
   14580:	b.ne	14590 <udev_util_encode_string@@LIBUDEV_183+0x8d60>  // b.any
   14584:	ldr	x0, [sp, #120]
   14588:	str	x0, [sp, #112]
   1458c:	b	145b8 <udev_util_encode_string@@LIBUDEV_183+0x8d88>
   14590:	ldr	x2, [sp, #120]
   14594:	ldr	x1, [sp, #64]
   14598:	ldr	x0, [sp, #72]
   1459c:	bl	12e44 <udev_util_encode_string@@LIBUDEV_183+0x7614>
   145a0:	str	w0, [sp, #84]
   145a4:	ldr	w0, [sp, #84]
   145a8:	cmp	w0, #0x0
   145ac:	b.ge	145b8 <udev_util_encode_string@@LIBUDEV_183+0x8d88>  // b.tcont
   145b0:	ldr	w0, [sp, #84]
   145b4:	b	145ec <udev_util_encode_string@@LIBUDEV_183+0x8dbc>
   145b8:	ldr	x0, [sp, #104]
   145bc:	cmp	x0, #0x0
   145c0:	b.eq	145d0 <udev_util_encode_string@@LIBUDEV_183+0x8da0>  // b.none
   145c4:	ldr	x0, [sp, #56]
   145c8:	ldr	x1, [sp, #104]
   145cc:	str	x1, [x0]
   145d0:	ldr	x0, [sp, #112]
   145d4:	cmp	x0, #0x0
   145d8:	b.eq	145e8 <udev_util_encode_string@@LIBUDEV_183+0x8db8>  // b.none
   145dc:	ldr	x0, [sp, #48]
   145e0:	ldr	x1, [sp, #112]
   145e4:	str	x1, [x0]
   145e8:	mov	w0, #0x0                   	// #0
   145ec:	mov	w1, w0
   145f0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   145f4:	ldr	x0, [x0, #4016]
   145f8:	ldr	x2, [sp, #136]
   145fc:	ldr	x0, [x0]
   14600:	eor	x0, x2, x0
   14604:	cmp	x0, #0x0
   14608:	b.eq	14610 <udev_util_encode_string@@LIBUDEV_183+0x8de0>  // b.none
   1460c:	bl	5390 <__stack_chk_fail@plt>
   14610:	mov	w0, w1
   14614:	ldp	x29, x30, [sp, #32]
   14618:	add	sp, sp, #0x90
   1461c:	ret
   14620:	sub	sp, sp, #0x50
   14624:	stp	x29, x30, [sp, #16]
   14628:	add	x29, sp, #0x10
   1462c:	str	x0, [sp, #40]
   14630:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14634:	ldr	x0, [x0, #4016]
   14638:	ldr	x1, [x0]
   1463c:	str	x1, [sp, #72]
   14640:	mov	x1, #0x0                   	// #0
   14644:	ldr	x0, [sp, #40]
   14648:	cmp	x0, #0x0
   1464c:	cset	w0, eq  // eq = none
   14650:	and	w0, w0, #0xff
   14654:	and	x0, x0, #0xff
   14658:	cmp	x0, #0x0
   1465c:	b.eq	14688 <udev_util_encode_string@@LIBUDEV_183+0x8e58>  // b.none
   14660:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14664:	add	x1, x0, #0x353
   14668:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1466c:	add	x4, x0, #0xbe8
   14670:	mov	w3, #0x191                 	// #401
   14674:	mov	x2, x1
   14678:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1467c:	add	x1, x0, #0x380
   14680:	mov	w0, #0x0                   	// #0
   14684:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14688:	ldr	x0, [sp, #40]
   1468c:	ldr	x0, [x0, #240]
   14690:	cmp	x0, #0x0
   14694:	b.eq	146c8 <udev_util_encode_string@@LIBUDEV_183+0x8e98>  // b.none
   14698:	ldr	x0, [sp, #40]
   1469c:	ldr	x0, [x0, #264]
   146a0:	cmp	x0, #0x0
   146a4:	b.eq	146c8 <udev_util_encode_string@@LIBUDEV_183+0x8e98>  // b.none
   146a8:	ldr	x0, [sp, #40]
   146ac:	ldr	w0, [x0, #316]
   146b0:	cmp	w0, #0x0
   146b4:	b.lt	146c8 <udev_util_encode_string@@LIBUDEV_183+0x8e98>  // b.tstop
   146b8:	ldr	x0, [sp, #40]
   146bc:	ldr	x0, [x0, #320]
   146c0:	cmp	x0, #0x0
   146c4:	b.ne	14788 <udev_util_encode_string@@LIBUDEV_183+0x8f58>  // b.any
   146c8:	str	xzr, [sp, #56]
   146cc:	ldr	x0, [sp, #40]
   146d0:	str	x0, [sp, #64]
   146d4:	mov	w0, #0x7                   	// #7
   146d8:	str	w0, [sp, #48]
   146dc:	str	wzr, [sp, #52]
   146e0:	ldr	x0, [sp, #64]
   146e4:	cmp	x0, #0x0
   146e8:	b.eq	14724 <udev_util_encode_string@@LIBUDEV_183+0x8ef4>  // b.none
   146ec:	mov	w0, #0x0                   	// #0
   146f0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   146f4:	mov	w1, w0
   146f8:	ldr	w0, [sp, #48]
   146fc:	cmp	w0, w1
   14700:	cset	w0, le
   14704:	and	w0, w0, #0xff
   14708:	and	x0, x0, #0xff
   1470c:	cmp	x0, #0x0
   14710:	b.eq	14724 <udev_util_encode_string@@LIBUDEV_183+0x8ef4>  // b.none
   14714:	add	x0, sp, #0x38
   14718:	mov	x1, x0
   1471c:	ldr	x0, [sp, #64]
   14720:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   14724:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14728:	add	x2, x0, #0x353
   1472c:	ldr	x0, [sp, #56]
   14730:	cmp	x0, #0x0
   14734:	b.eq	14744 <udev_util_encode_string@@LIBUDEV_183+0x8f14>  // b.none
   14738:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1473c:	add	x0, x0, #0x438
   14740:	b	14748 <udev_util_encode_string@@LIBUDEV_183+0x8f18>
   14744:	mov	x0, #0x0                   	// #0
   14748:	ldr	x3, [sp, #56]
   1474c:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14750:	add	x1, x1, #0x800
   14754:	str	x1, [sp, #8]
   14758:	str	xzr, [sp]
   1475c:	mov	x7, #0x0                   	// #0
   14760:	mov	x6, x3
   14764:	mov	x5, x0
   14768:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1476c:	add	x4, x0, #0xbf8
   14770:	mov	w3, #0x194                 	// #404
   14774:	ldr	w1, [sp, #52]
   14778:	ldr	w0, [sp, #48]
   1477c:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   14780:	mov	w0, #0xffffffea            	// #-22
   14784:	b	1479c <udev_util_encode_string@@LIBUDEV_183+0x8f6c>
   14788:	ldr	x0, [sp, #40]
   1478c:	ldrb	w1, [x0, #331]
   14790:	orr	w1, w1, #0x2
   14794:	strb	w1, [x0, #331]
   14798:	mov	w0, #0x0                   	// #0
   1479c:	mov	w1, w0
   147a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   147a4:	ldr	x0, [x0, #4016]
   147a8:	ldr	x2, [sp, #72]
   147ac:	ldr	x0, [x0]
   147b0:	eor	x0, x2, x0
   147b4:	cmp	x0, #0x0
   147b8:	b.eq	147c0 <udev_util_encode_string@@LIBUDEV_183+0x8f90>  // b.none
   147bc:	bl	5390 <__stack_chk_fail@plt>
   147c0:	mov	w0, w1
   147c4:	ldp	x29, x30, [sp, #16]
   147c8:	add	sp, sp, #0x50
   147cc:	ret
   147d0:	sub	sp, sp, #0xa0
   147d4:	stp	x29, x30, [sp, #32]
   147d8:	add	x29, sp, #0x20
   147dc:	str	x19, [sp, #48]
   147e0:	str	x0, [sp, #72]
   147e4:	str	x1, [sp, #64]
   147e8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   147ec:	ldr	x0, [x0, #4016]
   147f0:	ldr	x1, [x0]
   147f4:	str	x1, [sp, #152]
   147f8:	mov	x1, #0x0                   	// #0
   147fc:	str	xzr, [sp, #96]
   14800:	str	xzr, [sp, #104]
   14804:	str	xzr, [sp, #112]
   14808:	ldr	x0, [sp, #72]
   1480c:	cmp	x0, #0x0
   14810:	cset	w0, eq  // eq = none
   14814:	and	w0, w0, #0xff
   14818:	and	x0, x0, #0xff
   1481c:	cmp	x0, #0x0
   14820:	b.eq	1484c <udev_util_encode_string@@LIBUDEV_183+0x901c>  // b.none
   14824:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14828:	add	x1, x0, #0x353
   1482c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14830:	add	x4, x0, #0xc08
   14834:	mov	w3, #0x1a3                 	// #419
   14838:	mov	x2, x1
   1483c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14840:	add	x1, x0, #0x860
   14844:	mov	w0, #0x0                   	// #0
   14848:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1484c:	ldr	x0, [sp, #64]
   14850:	cmp	x0, #0x0
   14854:	cset	w0, eq  // eq = none
   14858:	and	w0, w0, #0xff
   1485c:	and	x0, x0, #0xff
   14860:	cmp	x0, #0x0
   14864:	b.eq	14890 <udev_util_encode_string@@LIBUDEV_183+0x9060>  // b.none
   14868:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1486c:	add	x1, x0, #0x353
   14870:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14874:	add	x4, x0, #0xc08
   14878:	mov	w3, #0x1a4                 	// #420
   1487c:	mov	x2, x1
   14880:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14884:	add	x1, x0, #0x868
   14888:	mov	w0, #0x0                   	// #0
   1488c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14890:	add	x0, sp, #0x60
   14894:	bl	1537c <udev_util_encode_string@@LIBUDEV_183+0x9b4c>
   14898:	str	w0, [sp, #84]
   1489c:	ldr	w0, [sp, #84]
   148a0:	cmp	w0, #0x0
   148a4:	b.ge	148b0 <udev_util_encode_string@@LIBUDEV_183+0x9080>  // b.tcont
   148a8:	ldr	w19, [sp, #84]
   148ac:	b	14a64 <udev_util_encode_string@@LIBUDEV_183+0x9234>
   148b0:	ldr	x0, [sp, #64]
   148b4:	str	x0, [sp, #128]
   148b8:	b	14908 <udev_util_encode_string@@LIBUDEV_183+0x90d8>
   148bc:	ldr	x4, [sp, #96]
   148c0:	ldr	x0, [sp, #128]
   148c4:	ldr	x0, [x0]
   148c8:	add	x2, sp, #0x70
   148cc:	add	x1, sp, #0x68
   148d0:	mov	x3, x2
   148d4:	mov	x2, x1
   148d8:	mov	x1, x0
   148dc:	mov	x0, x4
   148e0:	bl	14308 <udev_util_encode_string@@LIBUDEV_183+0x8ad8>
   148e4:	str	w0, [sp, #84]
   148e8:	ldr	w0, [sp, #84]
   148ec:	cmp	w0, #0x0
   148f0:	b.ge	148fc <udev_util_encode_string@@LIBUDEV_183+0x90cc>  // b.tcont
   148f4:	ldr	w19, [sp, #84]
   148f8:	b	14a64 <udev_util_encode_string@@LIBUDEV_183+0x9234>
   148fc:	ldr	x0, [sp, #128]
   14900:	add	x0, x0, #0x8
   14904:	str	x0, [sp, #128]
   14908:	ldr	x0, [sp, #128]
   1490c:	cmp	x0, #0x0
   14910:	b.eq	14924 <udev_util_encode_string@@LIBUDEV_183+0x90f4>  // b.none
   14914:	ldr	x0, [sp, #128]
   14918:	ldr	x0, [x0]
   1491c:	cmp	x0, #0x0
   14920:	b.ne	148bc <udev_util_encode_string@@LIBUDEV_183+0x908c>  // b.any
   14924:	ldr	x0, [sp, #104]
   14928:	cmp	x0, #0x0
   1492c:	b.eq	14a28 <udev_util_encode_string@@LIBUDEV_183+0x91f8>  // b.none
   14930:	ldr	x0, [sp, #96]
   14934:	ldr	x1, [sp, #104]
   14938:	ldr	x2, [sp, #112]
   1493c:	bl	18214 <udev_util_encode_string@@LIBUDEV_183+0xc9e4>
   14940:	str	w0, [sp, #84]
   14944:	ldr	w0, [sp, #84]
   14948:	cmp	w0, #0x0
   1494c:	b.ge	14a28 <udev_util_encode_string@@LIBUDEV_183+0x91f8>  // b.tcont
   14950:	str	xzr, [sp, #120]
   14954:	ldr	x0, [sp, #96]
   14958:	str	x0, [sp, #136]
   1495c:	mov	w0, #0x7                   	// #7
   14960:	str	w0, [sp, #88]
   14964:	ldr	w0, [sp, #84]
   14968:	str	w0, [sp, #92]
   1496c:	ldr	x0, [sp, #136]
   14970:	cmp	x0, #0x0
   14974:	b.eq	149b0 <udev_util_encode_string@@LIBUDEV_183+0x9180>  // b.none
   14978:	mov	w0, #0x0                   	// #0
   1497c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   14980:	mov	w1, w0
   14984:	ldr	w0, [sp, #88]
   14988:	cmp	w0, w1
   1498c:	cset	w0, le
   14990:	and	w0, w0, #0xff
   14994:	and	x0, x0, #0xff
   14998:	cmp	x0, #0x0
   1499c:	b.eq	149b0 <udev_util_encode_string@@LIBUDEV_183+0x9180>  // b.none
   149a0:	add	x0, sp, #0x78
   149a4:	mov	x1, x0
   149a8:	ldr	x0, [sp, #136]
   149ac:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   149b0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   149b4:	add	x8, x0, #0x353
   149b8:	ldr	x0, [sp, #120]
   149bc:	cmp	x0, #0x0
   149c0:	b.eq	149d0 <udev_util_encode_string@@LIBUDEV_183+0x91a0>  // b.none
   149c4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   149c8:	add	x0, x0, #0x438
   149cc:	b	149d4 <udev_util_encode_string@@LIBUDEV_183+0x91a4>
   149d0:	mov	x0, #0x0                   	// #0
   149d4:	ldr	x3, [sp, #120]
   149d8:	ldr	x1, [sp, #104]
   149dc:	ldr	x2, [sp, #112]
   149e0:	str	x2, [sp, #24]
   149e4:	str	x1, [sp, #16]
   149e8:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   149ec:	add	x1, x1, #0x870
   149f0:	str	x1, [sp, #8]
   149f4:	str	xzr, [sp]
   149f8:	mov	x7, #0x0                   	// #0
   149fc:	mov	x6, x3
   14a00:	mov	x5, x0
   14a04:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14a08:	add	x4, x0, #0xc20
   14a0c:	mov	w3, #0x1b3                 	// #435
   14a10:	mov	x2, x8
   14a14:	ldr	w1, [sp, #92]
   14a18:	ldr	w0, [sp, #88]
   14a1c:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   14a20:	mov	w19, w0
   14a24:	b	14a64 <udev_util_encode_string@@LIBUDEV_183+0x9234>
   14a28:	ldr	x0, [sp, #96]
   14a2c:	bl	14620 <udev_util_encode_string@@LIBUDEV_183+0x8df0>
   14a30:	str	w0, [sp, #84]
   14a34:	ldr	w0, [sp, #84]
   14a38:	cmp	w0, #0x0
   14a3c:	b.ge	14a48 <udev_util_encode_string@@LIBUDEV_183+0x9218>  // b.tcont
   14a40:	ldr	w19, [sp, #84]
   14a44:	b	14a64 <udev_util_encode_string@@LIBUDEV_183+0x9234>
   14a48:	ldr	x0, [sp, #96]
   14a4c:	str	x0, [sp, #144]
   14a50:	str	xzr, [sp, #96]
   14a54:	ldr	x1, [sp, #144]
   14a58:	ldr	x0, [sp, #72]
   14a5c:	str	x1, [x0]
   14a60:	mov	w19, #0x0                   	// #0
   14a64:	add	x0, sp, #0x60
   14a68:	bl	125c4 <udev_util_encode_string@@LIBUDEV_183+0x6d94>
   14a6c:	mov	w1, w19
   14a70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14a74:	ldr	x0, [x0, #4016]
   14a78:	ldr	x2, [sp, #152]
   14a7c:	ldr	x0, [x0]
   14a80:	eor	x0, x2, x0
   14a84:	cmp	x0, #0x0
   14a88:	b.eq	14a90 <udev_util_encode_string@@LIBUDEV_183+0x9260>  // b.none
   14a8c:	bl	5390 <__stack_chk_fail@plt>
   14a90:	mov	w0, w1
   14a94:	ldr	x19, [sp, #48]
   14a98:	ldp	x29, x30, [sp, #32]
   14a9c:	add	sp, sp, #0xa0
   14aa0:	ret
   14aa4:	sub	sp, sp, #0xd0
   14aa8:	stp	x29, x30, [sp, #32]
   14aac:	add	x29, sp, #0x20
   14ab0:	str	x19, [sp, #48]
   14ab4:	str	x0, [sp, #88]
   14ab8:	str	x1, [sp, #80]
   14abc:	str	x2, [sp, #72]
   14ac0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14ac4:	ldr	x0, [x0, #4016]
   14ac8:	ldr	x1, [x0]
   14acc:	str	x1, [sp, #200]
   14ad0:	mov	x1, #0x0                   	// #0
   14ad4:	str	xzr, [sp, #128]
   14ad8:	str	xzr, [sp, #136]
   14adc:	str	xzr, [sp, #144]
   14ae0:	str	wzr, [sp, #104]
   14ae4:	ldr	x0, [sp, #88]
   14ae8:	cmp	x0, #0x0
   14aec:	cset	w0, eq  // eq = none
   14af0:	and	w0, w0, #0xff
   14af4:	and	x0, x0, #0xff
   14af8:	cmp	x0, #0x0
   14afc:	b.eq	14b28 <udev_util_encode_string@@LIBUDEV_183+0x92f8>  // b.none
   14b00:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b04:	add	x1, x0, #0x353
   14b08:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b0c:	add	x4, x0, #0xc38
   14b10:	mov	w3, #0x1c5                 	// #453
   14b14:	mov	x2, x1
   14b18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b1c:	add	x1, x0, #0x860
   14b20:	mov	w0, #0x0                   	// #0
   14b24:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14b28:	ldr	x0, [sp, #80]
   14b2c:	cmp	x0, #0x0
   14b30:	cset	w0, eq  // eq = none
   14b34:	and	w0, w0, #0xff
   14b38:	and	x0, x0, #0xff
   14b3c:	cmp	x0, #0x0
   14b40:	b.eq	14b6c <udev_util_encode_string@@LIBUDEV_183+0x933c>  // b.none
   14b44:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b48:	add	x1, x0, #0x353
   14b4c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b50:	add	x4, x0, #0xc38
   14b54:	mov	w3, #0x1c6                 	// #454
   14b58:	mov	x2, x1
   14b5c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b60:	add	x1, x0, #0x8a0
   14b64:	mov	w0, #0x0                   	// #0
   14b68:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14b6c:	ldr	x0, [sp, #72]
   14b70:	cmp	x0, #0x0
   14b74:	cset	w0, eq  // eq = none
   14b78:	and	w0, w0, #0xff
   14b7c:	and	x0, x0, #0xff
   14b80:	cmp	x0, #0x0
   14b84:	b.eq	14bb0 <udev_util_encode_string@@LIBUDEV_183+0x9380>  // b.none
   14b88:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b8c:	add	x1, x0, #0x353
   14b90:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14b94:	add	x4, x0, #0xc38
   14b98:	mov	w3, #0x1c7                 	// #455
   14b9c:	mov	x2, x1
   14ba0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14ba4:	add	x1, x0, #0x8a8
   14ba8:	mov	w0, #0x0                   	// #0
   14bac:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   14bb0:	add	x0, sp, #0x80
   14bb4:	bl	1537c <udev_util_encode_string@@LIBUDEV_183+0x9b4c>
   14bb8:	str	w0, [sp, #108]
   14bbc:	ldr	w0, [sp, #108]
   14bc0:	cmp	w0, #0x0
   14bc4:	b.ge	14d20 <udev_util_encode_string@@LIBUDEV_183+0x94f0>  // b.tcont
   14bc8:	ldr	w19, [sp, #108]
   14bcc:	b	14e70 <udev_util_encode_string@@LIBUDEV_183+0x9640>
   14bd0:	ldr	w0, [sp, #104]
   14bd4:	ldr	x1, [sp, #80]
   14bd8:	add	x0, x1, x0
   14bdc:	str	x0, [sp, #176]
   14be0:	ldr	w0, [sp, #104]
   14be4:	ldr	x1, [sp, #72]
   14be8:	sub	x0, x1, x0
   14bec:	mov	x2, x0
   14bf0:	mov	w1, #0x0                   	// #0
   14bf4:	ldr	x0, [sp, #176]
   14bf8:	bl	5690 <memchr@plt>
   14bfc:	str	x0, [sp, #184]
   14c00:	ldr	x0, [sp, #184]
   14c04:	cmp	x0, #0x0
   14c08:	b.ne	14ccc <udev_util_encode_string@@LIBUDEV_183+0x949c>  // b.any
   14c0c:	str	xzr, [sp, #152]
   14c10:	ldr	x0, [sp, #128]
   14c14:	str	x0, [sp, #192]
   14c18:	mov	w0, #0x7                   	// #7
   14c1c:	str	w0, [sp, #120]
   14c20:	str	wzr, [sp, #124]
   14c24:	ldr	x0, [sp, #192]
   14c28:	cmp	x0, #0x0
   14c2c:	b.eq	14c68 <udev_util_encode_string@@LIBUDEV_183+0x9438>  // b.none
   14c30:	mov	w0, #0x0                   	// #0
   14c34:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   14c38:	mov	w1, w0
   14c3c:	ldr	w0, [sp, #120]
   14c40:	cmp	w0, w1
   14c44:	cset	w0, le
   14c48:	and	w0, w0, #0xff
   14c4c:	and	x0, x0, #0xff
   14c50:	cmp	x0, #0x0
   14c54:	b.eq	14c68 <udev_util_encode_string@@LIBUDEV_183+0x9438>  // b.none
   14c58:	add	x0, sp, #0x98
   14c5c:	mov	x1, x0
   14c60:	ldr	x0, [sp, #192]
   14c64:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   14c68:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14c6c:	add	x2, x0, #0x353
   14c70:	ldr	x0, [sp, #152]
   14c74:	cmp	x0, #0x0
   14c78:	b.eq	14c88 <udev_util_encode_string@@LIBUDEV_183+0x9458>  // b.none
   14c7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14c80:	add	x0, x0, #0x438
   14c84:	b	14c8c <udev_util_encode_string@@LIBUDEV_183+0x945c>
   14c88:	mov	x0, #0x0                   	// #0
   14c8c:	ldr	x3, [sp, #152]
   14c90:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14c94:	add	x1, x1, #0x8b0
   14c98:	str	x1, [sp, #8]
   14c9c:	str	xzr, [sp]
   14ca0:	mov	x7, #0x0                   	// #0
   14ca4:	mov	x6, x3
   14ca8:	mov	x5, x0
   14cac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14cb0:	add	x4, x0, #0xc50
   14cb4:	mov	w3, #0x1d4                 	// #468
   14cb8:	ldr	w1, [sp, #124]
   14cbc:	ldr	w0, [sp, #120]
   14cc0:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   14cc4:	mov	w19, #0xffffffea            	// #-22
   14cc8:	b	14e70 <udev_util_encode_string@@LIBUDEV_183+0x9640>
   14ccc:	ldr	x1, [sp, #184]
   14cd0:	ldr	x0, [sp, #176]
   14cd4:	sub	x0, x1, x0
   14cd8:	mov	w1, w0
   14cdc:	ldr	w0, [sp, #104]
   14ce0:	add	w0, w1, w0
   14ce4:	add	w0, w0, #0x1
   14ce8:	str	w0, [sp, #104]
   14cec:	ldr	x0, [sp, #128]
   14cf0:	add	x2, sp, #0x90
   14cf4:	add	x1, sp, #0x88
   14cf8:	mov	x3, x2
   14cfc:	mov	x2, x1
   14d00:	ldr	x1, [sp, #176]
   14d04:	bl	14308 <udev_util_encode_string@@LIBUDEV_183+0x8ad8>
   14d08:	str	w0, [sp, #108]
   14d0c:	ldr	w0, [sp, #108]
   14d10:	cmp	w0, #0x0
   14d14:	b.ge	14d20 <udev_util_encode_string@@LIBUDEV_183+0x94f0>  // b.tcont
   14d18:	ldr	w19, [sp, #108]
   14d1c:	b	14e70 <udev_util_encode_string@@LIBUDEV_183+0x9640>
   14d20:	ldr	w0, [sp, #104]
   14d24:	ldr	x1, [sp, #72]
   14d28:	cmp	x1, x0
   14d2c:	b.hi	14bd0 <udev_util_encode_string@@LIBUDEV_183+0x93a0>  // b.pmore
   14d30:	ldr	x0, [sp, #136]
   14d34:	cmp	x0, #0x0
   14d38:	b.eq	14e34 <udev_util_encode_string@@LIBUDEV_183+0x9604>  // b.none
   14d3c:	ldr	x0, [sp, #128]
   14d40:	ldr	x1, [sp, #136]
   14d44:	ldr	x2, [sp, #144]
   14d48:	bl	18214 <udev_util_encode_string@@LIBUDEV_183+0xc9e4>
   14d4c:	str	w0, [sp, #108]
   14d50:	ldr	w0, [sp, #108]
   14d54:	cmp	w0, #0x0
   14d58:	b.ge	14e34 <udev_util_encode_string@@LIBUDEV_183+0x9604>  // b.tcont
   14d5c:	str	xzr, [sp, #152]
   14d60:	ldr	x0, [sp, #128]
   14d64:	str	x0, [sp, #160]
   14d68:	mov	w0, #0x7                   	// #7
   14d6c:	str	w0, [sp, #112]
   14d70:	ldr	w0, [sp, #108]
   14d74:	str	w0, [sp, #116]
   14d78:	ldr	x0, [sp, #160]
   14d7c:	cmp	x0, #0x0
   14d80:	b.eq	14dbc <udev_util_encode_string@@LIBUDEV_183+0x958c>  // b.none
   14d84:	mov	w0, #0x0                   	// #0
   14d88:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   14d8c:	mov	w1, w0
   14d90:	ldr	w0, [sp, #112]
   14d94:	cmp	w0, w1
   14d98:	cset	w0, le
   14d9c:	and	w0, w0, #0xff
   14da0:	and	x0, x0, #0xff
   14da4:	cmp	x0, #0x0
   14da8:	b.eq	14dbc <udev_util_encode_string@@LIBUDEV_183+0x958c>  // b.none
   14dac:	add	x0, sp, #0x98
   14db0:	mov	x1, x0
   14db4:	ldr	x0, [sp, #160]
   14db8:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   14dbc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14dc0:	add	x8, x0, #0x353
   14dc4:	ldr	x0, [sp, #152]
   14dc8:	cmp	x0, #0x0
   14dcc:	b.eq	14ddc <udev_util_encode_string@@LIBUDEV_183+0x95ac>  // b.none
   14dd0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14dd4:	add	x0, x0, #0x438
   14dd8:	b	14de0 <udev_util_encode_string@@LIBUDEV_183+0x95b0>
   14ddc:	mov	x0, #0x0                   	// #0
   14de0:	ldr	x3, [sp, #152]
   14de4:	ldr	x1, [sp, #136]
   14de8:	ldr	x2, [sp, #144]
   14dec:	str	x2, [sp, #24]
   14df0:	str	x1, [sp, #16]
   14df4:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14df8:	add	x1, x1, #0x870
   14dfc:	str	x1, [sp, #8]
   14e00:	str	xzr, [sp]
   14e04:	mov	x7, #0x0                   	// #0
   14e08:	mov	x6, x3
   14e0c:	mov	x5, x0
   14e10:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   14e14:	add	x4, x0, #0xc50
   14e18:	mov	w3, #0x1e1                 	// #481
   14e1c:	mov	x2, x8
   14e20:	ldr	w1, [sp, #116]
   14e24:	ldr	w0, [sp, #112]
   14e28:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   14e2c:	mov	w19, w0
   14e30:	b	14e70 <udev_util_encode_string@@LIBUDEV_183+0x9640>
   14e34:	ldr	x0, [sp, #128]
   14e38:	bl	14620 <udev_util_encode_string@@LIBUDEV_183+0x8df0>
   14e3c:	str	w0, [sp, #108]
   14e40:	ldr	w0, [sp, #108]
   14e44:	cmp	w0, #0x0
   14e48:	b.ge	14e54 <udev_util_encode_string@@LIBUDEV_183+0x9624>  // b.tcont
   14e4c:	ldr	w19, [sp, #108]
   14e50:	b	14e70 <udev_util_encode_string@@LIBUDEV_183+0x9640>
   14e54:	ldr	x0, [sp, #128]
   14e58:	str	x0, [sp, #168]
   14e5c:	str	xzr, [sp, #128]
   14e60:	ldr	x1, [sp, #168]
   14e64:	ldr	x0, [sp, #88]
   14e68:	str	x1, [x0]
   14e6c:	mov	w19, #0x0                   	// #0
   14e70:	add	x0, sp, #0x80
   14e74:	bl	125c4 <udev_util_encode_string@@LIBUDEV_183+0x6d94>
   14e78:	mov	w1, w19
   14e7c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14e80:	ldr	x0, [x0, #4016]
   14e84:	ldr	x2, [sp, #200]
   14e88:	ldr	x0, [x0]
   14e8c:	eor	x0, x2, x0
   14e90:	cmp	x0, #0x0
   14e94:	b.eq	14e9c <udev_util_encode_string@@LIBUDEV_183+0x966c>  // b.none
   14e98:	bl	5390 <__stack_chk_fail@plt>
   14e9c:	mov	w0, w1
   14ea0:	ldr	x19, [sp, #48]
   14ea4:	ldp	x29, x30, [sp, #32]
   14ea8:	add	sp, sp, #0xd0
   14eac:	ret
   14eb0:	sub	sp, sp, #0x10
   14eb4:	str	w0, [sp, #12]
   14eb8:	ldr	w0, [sp, #12]
   14ebc:	cmp	w0, #0x0
   14ec0:	b.lt	14ed0 <udev_util_encode_string@@LIBUDEV_183+0x96a0>  // b.tstop
   14ec4:	ldr	w0, [sp, #12]
   14ec8:	cmp	w0, #0x7
   14ecc:	b.le	14ed8 <udev_util_encode_string@@LIBUDEV_183+0x96a8>
   14ed0:	mov	x0, #0x0                   	// #0
   14ed4:	b	14ee8 <udev_util_encode_string@@LIBUDEV_183+0x96b8>
   14ed8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14edc:	add	x0, x0, #0x600
   14ee0:	ldrsw	x1, [sp, #12]
   14ee4:	ldr	x0, [x0, x1, lsl #3]
   14ee8:	add	sp, sp, #0x10
   14eec:	ret
   14ef0:	stp	x29, x30, [sp, #-32]!
   14ef4:	mov	x29, sp
   14ef8:	str	x0, [sp, #24]
   14efc:	ldr	x2, [sp, #24]
   14f00:	mov	x1, #0x8                   	// #8
   14f04:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   14f08:	add	x0, x0, #0x600
   14f0c:	bl	33e74 <udev_util_encode_string@@LIBUDEV_183+0x28644>
   14f10:	ldp	x29, x30, [sp], #32
   14f14:	ret
   14f18:	stp	x29, x30, [sp, #-32]!
   14f1c:	mov	x29, sp
   14f20:	str	x0, [sp, #24]
   14f24:	ldr	x0, [sp, #24]
   14f28:	ldr	x0, [x0]
   14f2c:	cmp	x0, #0x0
   14f30:	b.eq	14f40 <udev_util_encode_string@@LIBUDEV_183+0x9710>  // b.none
   14f34:	ldr	x0, [sp, #24]
   14f38:	ldr	x0, [x0]
   14f3c:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
   14f40:	nop
   14f44:	ldp	x29, x30, [sp], #32
   14f48:	ret
   14f4c:	stp	x29, x30, [sp, #-32]!
   14f50:	mov	x29, sp
   14f54:	str	x0, [sp, #24]
   14f58:	ldr	x0, [sp, #24]
   14f5c:	bl	54b0 <free@plt>
   14f60:	mov	x0, #0x0                   	// #0
   14f64:	ldp	x29, x30, [sp], #32
   14f68:	ret
   14f6c:	stp	x29, x30, [sp, #-32]!
   14f70:	mov	x29, sp
   14f74:	str	x0, [sp, #24]
   14f78:	ldr	x0, [sp, #24]
   14f7c:	ldr	x0, [x0]
   14f80:	bl	54b0 <free@plt>
   14f84:	nop
   14f88:	ldp	x29, x30, [sp], #32
   14f8c:	ret
   14f90:	sub	sp, sp, #0x10
   14f94:	str	x0, [sp, #8]
   14f98:	str	x1, [sp]
   14f9c:	ldr	x0, [sp]
   14fa0:	cmp	x0, #0x0
   14fa4:	cset	w0, ne  // ne = any
   14fa8:	and	w0, w0, #0xff
   14fac:	and	x0, x0, #0xff
   14fb0:	cmp	x0, #0x0
   14fb4:	b.eq	14ff8 <udev_util_encode_string@@LIBUDEV_183+0x97c8>  // b.none
   14fb8:	mov	x2, #0x0                   	// #0
   14fbc:	ldr	x1, [sp, #8]
   14fc0:	ldr	x0, [sp]
   14fc4:	umulh	x0, x1, x0
   14fc8:	cmp	x0, #0x0
   14fcc:	b.eq	14fd4 <udev_util_encode_string@@LIBUDEV_183+0x97a4>  // b.none
   14fd0:	mov	x2, #0x1                   	// #1
   14fd4:	mov	x0, x2
   14fd8:	cmp	x0, #0x0
   14fdc:	cset	w0, ne  // ne = any
   14fe0:	and	w0, w0, #0xff
   14fe4:	and	x0, x0, #0xff
   14fe8:	cmp	x0, #0x0
   14fec:	b.eq	14ff8 <udev_util_encode_string@@LIBUDEV_183+0x97c8>  // b.none
   14ff0:	mov	w0, #0x1                   	// #1
   14ff4:	b	14ffc <udev_util_encode_string@@LIBUDEV_183+0x97cc>
   14ff8:	mov	w0, #0x0                   	// #0
   14ffc:	and	w0, w0, #0x1
   15000:	and	w0, w0, #0xff
   15004:	add	sp, sp, #0x10
   15008:	ret
   1500c:	stp	x29, x30, [sp, #-32]!
   15010:	mov	x29, sp
   15014:	str	x0, [sp, #24]
   15018:	str	x1, [sp, #16]
   1501c:	ldr	x1, [sp, #16]
   15020:	ldr	x0, [sp, #24]
   15024:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   15028:	and	w0, w0, #0xff
   1502c:	cmp	w0, #0x0
   15030:	b.eq	1503c <udev_util_encode_string@@LIBUDEV_183+0x980c>  // b.none
   15034:	mov	x0, #0x0                   	// #0
   15038:	b	15058 <udev_util_encode_string@@LIBUDEV_183+0x9828>
   1503c:	ldr	x1, [sp, #24]
   15040:	ldr	x0, [sp, #16]
   15044:	mul	x0, x1, x0
   15048:	cmp	x0, #0x0
   1504c:	b.ne	15054 <udev_util_encode_string@@LIBUDEV_183+0x9824>  // b.any
   15050:	mov	x0, #0x1                   	// #1
   15054:	bl	5220 <malloc@plt>
   15058:	ldp	x29, x30, [sp], #32
   1505c:	ret
   15060:	stp	x29, x30, [sp, #-32]!
   15064:	mov	x29, sp
   15068:	str	x0, [sp, #24]
   1506c:	mov	w1, #0x0                   	// #0
   15070:	ldr	x0, [sp, #24]
   15074:	bl	1c8b4 <udev_util_encode_string@@LIBUDEV_183+0x11084>
   15078:	ldp	x29, x30, [sp], #32
   1507c:	ret
   15080:	stp	x29, x30, [sp, #-32]!
   15084:	mov	x29, sp
   15088:	str	x0, [sp, #24]
   1508c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   15090:	ldr	x2, [x0, #4040]
   15094:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   15098:	ldr	x1, [x0, #4040]
   1509c:	ldr	x0, [sp, #24]
   150a0:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
   150a4:	ldp	x29, x30, [sp], #32
   150a8:	ret
   150ac:	stp	x29, x30, [sp, #-32]!
   150b0:	mov	x29, sp
   150b4:	str	x0, [sp, #24]
   150b8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   150bc:	ldr	x2, [x0, #4040]
   150c0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   150c4:	ldr	x1, [x0, #4040]
   150c8:	ldr	x0, [sp, #24]
   150cc:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
   150d0:	ldp	x29, x30, [sp], #32
   150d4:	ret
   150d8:	stp	x29, x30, [sp, #-48]!
   150dc:	mov	x29, sp
   150e0:	str	x0, [sp, #40]
   150e4:	str	x1, [sp, #32]
   150e8:	str	x2, [sp, #24]
   150ec:	ldr	x2, [sp, #24]
   150f0:	ldr	x1, [sp, #32]
   150f4:	ldr	x0, [sp, #40]
   150f8:	bl	298e0 <udev_util_encode_string@@LIBUDEV_183+0x1e0b0>
   150fc:	ldp	x29, x30, [sp], #48
   15100:	ret
   15104:	stp	x29, x30, [sp, #-32]!
   15108:	mov	x29, sp
   1510c:	str	x0, [sp, #24]
   15110:	str	x1, [sp, #16]
   15114:	ldr	x1, [sp, #16]
   15118:	ldr	x0, [sp, #24]
   1511c:	bl	29a24 <udev_util_encode_string@@LIBUDEV_183+0x1e1f4>
   15120:	ldp	x29, x30, [sp], #32
   15124:	ret
   15128:	stp	x29, x30, [sp, #-48]!
   1512c:	mov	x29, sp
   15130:	str	x0, [sp, #40]
   15134:	str	x1, [sp, #32]
   15138:	str	x2, [sp, #24]
   1513c:	ldr	x2, [sp, #24]
   15140:	ldr	x1, [sp, #32]
   15144:	ldr	x0, [sp, #40]
   15148:	bl	29aa4 <udev_util_encode_string@@LIBUDEV_183+0x1e274>
   1514c:	ldp	x29, x30, [sp], #48
   15150:	ret
   15154:	stp	x29, x30, [sp, #-48]!
   15158:	mov	x29, sp
   1515c:	str	x0, [sp, #40]
   15160:	str	x1, [sp, #32]
   15164:	str	x2, [sp, #24]
   15168:	ldr	x2, [sp, #24]
   1516c:	ldr	x1, [sp, #32]
   15170:	ldr	x0, [sp, #40]
   15174:	bl	29c2c <udev_util_encode_string@@LIBUDEV_183+0x1e3fc>
   15178:	ldp	x29, x30, [sp], #48
   1517c:	ret
   15180:	stp	x29, x30, [sp, #-48]!
   15184:	mov	x29, sp
   15188:	str	x0, [sp, #40]
   1518c:	str	x1, [sp, #32]
   15190:	str	x2, [sp, #24]
   15194:	str	x3, [sp, #16]
   15198:	ldr	x3, [sp, #16]
   1519c:	ldr	x2, [sp, #24]
   151a0:	ldr	x1, [sp, #32]
   151a4:	ldr	x0, [sp, #40]
   151a8:	bl	28328 <udev_util_encode_string@@LIBUDEV_183+0x1caf8>
   151ac:	and	w0, w0, #0xff
   151b0:	ldp	x29, x30, [sp], #48
   151b4:	ret
   151b8:	stp	x29, x30, [sp, #-32]!
   151bc:	mov	x29, sp
   151c0:	str	x0, [sp, #24]
   151c4:	mov	x2, #0x0                   	// #0
   151c8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   151cc:	ldr	x1, [x0, #4040]
   151d0:	ldr	x0, [sp, #24]
   151d4:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
   151d8:	ldp	x29, x30, [sp], #32
   151dc:	ret
   151e0:	stp	x29, x30, [sp, #-32]!
   151e4:	mov	x29, sp
   151e8:	str	x0, [sp, #24]
   151ec:	str	x1, [sp, #16]
   151f0:	ldr	x1, [sp, #16]
   151f4:	ldr	x0, [sp, #24]
   151f8:	bl	29b40 <udev_util_encode_string@@LIBUDEV_183+0x1e310>
   151fc:	and	w0, w0, #0xff
   15200:	ldp	x29, x30, [sp], #32
   15204:	ret
   15208:	stp	x29, x30, [sp, #-32]!
   1520c:	mov	x29, sp
   15210:	str	x0, [sp, #24]
   15214:	str	x1, [sp, #16]
   15218:	ldr	x1, [sp, #16]
   1521c:	ldr	x0, [sp, #24]
   15220:	bl	3406c <udev_util_encode_string@@LIBUDEV_183+0x2883c>
   15224:	cmp	w0, #0x0
   15228:	cset	w0, eq  // eq = none
   1522c:	and	w0, w0, #0xff
   15230:	ldp	x29, x30, [sp], #32
   15234:	ret
   15238:	sub	sp, sp, #0x10
   1523c:	str	x0, [sp, #8]
   15240:	ldr	x0, [sp, #8]
   15244:	cmp	x0, #0x0
   15248:	b.eq	1525c <udev_util_encode_string@@LIBUDEV_183+0x9a2c>  // b.none
   1524c:	ldr	x0, [sp, #8]
   15250:	ldrb	w0, [x0]
   15254:	cmp	w0, #0x0
   15258:	b.ne	15264 <udev_util_encode_string@@LIBUDEV_183+0x9a34>  // b.any
   1525c:	mov	w0, #0x1                   	// #1
   15260:	b	15268 <udev_util_encode_string@@LIBUDEV_183+0x9a38>
   15264:	mov	w0, #0x0                   	// #0
   15268:	and	w0, w0, #0x1
   1526c:	and	w0, w0, #0xff
   15270:	add	sp, sp, #0x10
   15274:	ret
   15278:	stp	x29, x30, [sp, #-32]!
   1527c:	mov	x29, sp
   15280:	str	x0, [sp, #24]
   15284:	ldr	x0, [sp, #24]
   15288:	ldr	w0, [x0]
   1528c:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   15290:	nop
   15294:	ldp	x29, x30, [sp], #32
   15298:	ret
   1529c:	stp	x29, x30, [sp, #-32]!
   152a0:	mov	x29, sp
   152a4:	str	x0, [sp, #24]
   152a8:	ldr	x0, [sp, #24]
   152ac:	ldr	x0, [x0]
   152b0:	cmp	x0, #0x0
   152b4:	b.eq	152c4 <udev_util_encode_string@@LIBUDEV_183+0x9a94>  // b.none
   152b8:	ldr	x0, [sp, #24]
   152bc:	ldr	x0, [x0]
   152c0:	bl	5380 <closedir@plt>
   152c4:	nop
   152c8:	ldp	x29, x30, [sp], #32
   152cc:	ret
   152d0:	stp	x29, x30, [sp, #-48]!
   152d4:	mov	x29, sp
   152d8:	str	x0, [sp, #40]
   152dc:	str	x1, [sp, #32]
   152e0:	str	w2, [sp, #28]
   152e4:	mov	x3, #0x0                   	// #0
   152e8:	ldr	w2, [sp, #28]
   152ec:	ldr	x1, [sp, #32]
   152f0:	ldr	x0, [sp, #40]
   152f4:	bl	23c88 <udev_util_encode_string@@LIBUDEV_183+0x18458>
   152f8:	ldp	x29, x30, [sp], #48
   152fc:	ret
   15300:	stp	x29, x30, [sp, #-48]!
   15304:	mov	x29, sp
   15308:	str	x0, [sp, #40]
   1530c:	str	x1, [sp, #32]
   15310:	str	x2, [sp, #24]
   15314:	ldr	x3, [sp, #24]
   15318:	ldr	x2, [sp, #32]
   1531c:	mov	w1, #0x0                   	// #0
   15320:	ldr	x0, [sp, #40]
   15324:	bl	24b50 <udev_util_encode_string@@LIBUDEV_183+0x19320>
   15328:	ldp	x29, x30, [sp], #48
   1532c:	ret
   15330:	stp	x29, x30, [sp, #-32]!
   15334:	mov	x29, sp
   15338:	str	x0, [sp, #24]
   1533c:	str	x1, [sp, #16]
   15340:	ldr	x2, [sp, #16]
   15344:	mov	w1, #0x0                   	// #0
   15348:	ldr	x0, [sp, #24]
   1534c:	bl	302ec <udev_util_encode_string@@LIBUDEV_183+0x24abc>
   15350:	ldp	x29, x30, [sp], #32
   15354:	ret
   15358:	stp	x29, x30, [sp, #-32]!
   1535c:	mov	x29, sp
   15360:	str	x0, [sp, #24]
   15364:	str	x1, [sp, #16]
   15368:	ldr	x1, [sp, #16]
   1536c:	ldr	x0, [sp, #24]
   15370:	bl	30678 <udev_util_encode_string@@LIBUDEV_183+0x24e48>
   15374:	ldp	x29, x30, [sp], #32
   15378:	ret
   1537c:	stp	x29, x30, [sp, #-384]!
   15380:	mov	x29, sp
   15384:	str	x0, [sp, #24]
   15388:	ldr	x0, [sp, #24]
   1538c:	cmp	x0, #0x0
   15390:	cset	w0, eq  // eq = none
   15394:	and	w0, w0, #0xff
   15398:	and	x0, x0, #0xff
   1539c:	cmp	x0, #0x0
   153a0:	b.eq	153cc <udev_util_encode_string@@LIBUDEV_183+0x9b9c>  // b.none
   153a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   153a8:	add	x1, x0, #0xcab
   153ac:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   153b0:	add	x4, x0, #0x4f8
   153b4:	mov	w3, #0x22                  	// #34
   153b8:	mov	x2, x1
   153bc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   153c0:	add	x1, x0, #0xcd0
   153c4:	mov	w0, #0x0                   	// #0
   153c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   153cc:	mov	x1, #0x1                   	// #1
   153d0:	mov	x0, #0x150                 	// #336
   153d4:	bl	1500c <udev_util_encode_string@@LIBUDEV_183+0x97dc>
   153d8:	str	x0, [sp, #40]
   153dc:	ldr	x0, [sp, #40]
   153e0:	cmp	x0, #0x0
   153e4:	b.ne	153f0 <udev_util_encode_string@@LIBUDEV_183+0x9bc0>  // b.any
   153e8:	mov	w0, #0xfffffff4            	// #-12
   153ec:	b	15464 <udev_util_encode_string@@LIBUDEV_183+0x9c34>
   153f0:	ldr	x0, [sp, #40]
   153f4:	mov	x3, x0
   153f8:	mov	x0, #0x150                 	// #336
   153fc:	mov	x2, x0
   15400:	mov	w1, #0x0                   	// #0
   15404:	mov	x0, x3
   15408:	bl	5290 <memset@plt>
   1540c:	ldr	x0, [sp, #40]
   15410:	mov	w1, #0x1                   	// #1
   15414:	str	w1, [x0]
   15418:	ldr	x0, [sp, #40]
   1541c:	mov	w1, #0xffffffff            	// #-1
   15420:	str	w1, [x0, #4]
   15424:	ldr	x0, [sp, #40]
   15428:	mov	w1, #0xffffffff            	// #-1
   1542c:	str	w1, [x0, #304]
   15430:	ldr	x0, [sp, #40]
   15434:	mov	w1, #0xffffffff            	// #-1
   15438:	str	w1, [x0, #308]
   1543c:	ldr	x0, [sp, #40]
   15440:	mov	w1, #0xffffffff            	// #-1
   15444:	str	w1, [x0, #312]
   15448:	ldr	x0, [sp, #40]
   1544c:	mov	w1, #0xffffffff            	// #-1
   15450:	str	w1, [x0, #316]
   15454:	ldr	x0, [sp, #24]
   15458:	ldr	x1, [sp, #40]
   1545c:	str	x1, [x0]
   15460:	mov	w0, #0x0                   	// #0
   15464:	ldp	x29, x30, [sp], #384
   15468:	ret
   1546c:	stp	x29, x30, [sp, #-32]!
   15470:	mov	x29, sp
   15474:	str	x0, [sp, #24]
   15478:	ldr	x0, [sp, #24]
   1547c:	cmp	x0, #0x0
   15480:	cset	w0, eq  // eq = none
   15484:	and	w0, w0, #0xff
   15488:	and	x0, x0, #0xff
   1548c:	cmp	x0, #0x0
   15490:	b.eq	154bc <udev_util_encode_string@@LIBUDEV_183+0x9c8c>  // b.none
   15494:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15498:	add	x1, x0, #0xcab
   1549c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   154a0:	add	x4, x0, #0x508
   154a4:	mov	w3, #0x36                  	// #54
   154a8:	mov	x2, x1
   154ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   154b0:	add	x1, x0, #0xcd8
   154b4:	mov	w0, #0x0                   	// #0
   154b8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   154bc:	ldr	x0, [sp, #24]
   154c0:	ldr	x0, [x0, #8]
   154c4:	bl	15620 <udev_util_encode_string@@LIBUDEV_183+0x9df0>
   154c8:	ldr	x0, [sp, #24]
   154cc:	ldr	x0, [x0, #232]
   154d0:	bl	54b0 <free@plt>
   154d4:	ldr	x0, [sp, #24]
   154d8:	ldr	x0, [x0, #256]
   154dc:	bl	54b0 <free@plt>
   154e0:	ldr	x0, [sp, #24]
   154e4:	ldr	x0, [x0, #184]
   154e8:	bl	54b0 <free@plt>
   154ec:	ldr	x0, [sp, #24]
   154f0:	ldr	x0, [x0, #192]
   154f4:	bl	54b0 <free@plt>
   154f8:	ldr	x0, [sp, #24]
   154fc:	ldr	x0, [x0, #264]
   15500:	bl	54b0 <free@plt>
   15504:	ldr	x0, [sp, #24]
   15508:	ldr	x0, [x0, #272]
   1550c:	bl	54b0 <free@plt>
   15510:	ldr	x0, [sp, #24]
   15514:	ldr	x0, [x0, #280]
   15518:	bl	54b0 <free@plt>
   1551c:	ldr	x0, [sp, #24]
   15520:	ldr	x0, [x0, #288]
   15524:	bl	54b0 <free@plt>
   15528:	ldr	x0, [sp, #24]
   1552c:	ldr	x0, [x0, #208]
   15530:	bl	54b0 <free@plt>
   15534:	ldr	x0, [sp, #24]
   15538:	ldr	x0, [x0, #216]
   1553c:	bl	54b0 <free@plt>
   15540:	ldr	x0, [sp, #24]
   15544:	ldr	x0, [x0, #16]
   15548:	bl	150ac <udev_util_encode_string@@LIBUDEV_183+0x987c>
   1554c:	ldr	x0, [sp, #24]
   15550:	ldr	x0, [x0, #56]
   15554:	bl	150ac <udev_util_encode_string@@LIBUDEV_183+0x987c>
   15558:	ldr	x0, [sp, #24]
   1555c:	ldr	x0, [x0, #64]
   15560:	bl	15080 <udev_util_encode_string@@LIBUDEV_183+0x9850>
   15564:	ldr	x0, [sp, #24]
   15568:	ldr	x0, [x0, #72]
   1556c:	bl	151b8 <udev_util_encode_string@@LIBUDEV_183+0x9988>
   15570:	ldr	x0, [sp, #24]
   15574:	ldr	x0, [x0, #96]
   15578:	bl	151b8 <udev_util_encode_string@@LIBUDEV_183+0x9988>
   1557c:	ldr	x0, [sp, #24]
   15580:	ldr	x0, [x0, #136]
   15584:	bl	151b8 <udev_util_encode_string@@LIBUDEV_183+0x9988>
   15588:	ldr	x0, [sp, #24]
   1558c:	bl	14f4c <udev_util_encode_string@@LIBUDEV_183+0x971c>
   15590:	ldp	x29, x30, [sp], #32
   15594:	ret
   15598:	stp	x29, x30, [sp, #-32]!
   1559c:	mov	x29, sp
   155a0:	str	x0, [sp, #24]
   155a4:	ldr	x0, [sp, #24]
   155a8:	cmp	x0, #0x0
   155ac:	b.ne	155b8 <udev_util_encode_string@@LIBUDEV_183+0x9d88>  // b.any
   155b0:	mov	x0, #0x0                   	// #0
   155b4:	b	15618 <udev_util_encode_string@@LIBUDEV_183+0x9de8>
   155b8:	ldr	x0, [sp, #24]
   155bc:	ldr	w0, [x0]
   155c0:	cmp	w0, #0x0
   155c4:	cset	w0, eq  // eq = none
   155c8:	and	w0, w0, #0xff
   155cc:	and	x0, x0, #0xff
   155d0:	cmp	x0, #0x0
   155d4:	b.eq	15600 <udev_util_encode_string@@LIBUDEV_183+0x9dd0>  // b.none
   155d8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   155dc:	add	x1, x0, #0xcab
   155e0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   155e4:	add	x4, x0, #0x518
   155e8:	mov	w3, #0x4e                  	// #78
   155ec:	mov	x2, x1
   155f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   155f4:	add	x1, x0, #0xce0
   155f8:	mov	w0, #0x0                   	// #0
   155fc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15600:	ldr	x0, [sp, #24]
   15604:	ldr	w0, [x0]
   15608:	add	w1, w0, #0x1
   1560c:	ldr	x0, [sp, #24]
   15610:	str	w1, [x0]
   15614:	ldr	x0, [sp, #24]
   15618:	ldp	x29, x30, [sp], #32
   1561c:	ret
   15620:	stp	x29, x30, [sp, #-32]!
   15624:	mov	x29, sp
   15628:	str	x0, [sp, #24]
   1562c:	ldr	x0, [sp, #24]
   15630:	cmp	x0, #0x0
   15634:	b.ne	15640 <udev_util_encode_string@@LIBUDEV_183+0x9e10>  // b.any
   15638:	mov	x0, #0x0                   	// #0
   1563c:	b	156bc <udev_util_encode_string@@LIBUDEV_183+0x9e8c>
   15640:	ldr	x0, [sp, #24]
   15644:	ldr	w0, [x0]
   15648:	cmp	w0, #0x0
   1564c:	cset	w0, eq  // eq = none
   15650:	and	w0, w0, #0xff
   15654:	and	x0, x0, #0xff
   15658:	cmp	x0, #0x0
   1565c:	b.eq	15688 <udev_util_encode_string@@LIBUDEV_183+0x9e58>  // b.none
   15660:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15664:	add	x1, x0, #0xcab
   15668:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1566c:	add	x4, x0, #0x528
   15670:	mov	w3, #0x4e                  	// #78
   15674:	mov	x2, x1
   15678:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1567c:	add	x1, x0, #0xce0
   15680:	mov	w0, #0x0                   	// #0
   15684:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15688:	ldr	x0, [sp, #24]
   1568c:	ldr	w0, [x0]
   15690:	sub	w1, w0, #0x1
   15694:	ldr	x0, [sp, #24]
   15698:	str	w1, [x0]
   1569c:	ldr	x0, [sp, #24]
   156a0:	ldr	w0, [x0]
   156a4:	cmp	w0, #0x0
   156a8:	b.eq	156b4 <udev_util_encode_string@@LIBUDEV_183+0x9e84>  // b.none
   156ac:	mov	x0, #0x0                   	// #0
   156b0:	b	156bc <udev_util_encode_string@@LIBUDEV_183+0x9e8c>
   156b4:	ldr	x0, [sp, #24]
   156b8:	bl	1546c <udev_util_encode_string@@LIBUDEV_183+0x9c3c>
   156bc:	ldp	x29, x30, [sp], #32
   156c0:	ret
   156c4:	stp	x29, x30, [sp, #-128]!
   156c8:	mov	x29, sp
   156cc:	stp	x19, x20, [sp, #16]
   156d0:	str	x0, [sp, #56]
   156d4:	str	x1, [sp, #48]
   156d8:	str	x2, [sp, #40]
   156dc:	strb	w3, [sp, #39]
   156e0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   156e4:	ldr	x0, [x0, #4016]
   156e8:	ldr	x1, [x0]
   156ec:	str	x1, [sp, #120]
   156f0:	mov	x1, #0x0                   	// #0
   156f4:	ldr	x0, [sp, #56]
   156f8:	cmp	x0, #0x0
   156fc:	cset	w0, eq  // eq = none
   15700:	and	w0, w0, #0xff
   15704:	and	x0, x0, #0xff
   15708:	cmp	x0, #0x0
   1570c:	b.eq	15738 <udev_util_encode_string@@LIBUDEV_183+0x9f08>  // b.none
   15710:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15714:	add	x1, x0, #0xcab
   15718:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1571c:	add	x4, x0, #0x538
   15720:	mov	w3, #0x53                  	// #83
   15724:	mov	x2, x1
   15728:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1572c:	add	x1, x0, #0xcd8
   15730:	mov	w0, #0x0                   	// #0
   15734:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15738:	ldr	x0, [sp, #48]
   1573c:	cmp	x0, #0x0
   15740:	cset	w0, eq  // eq = none
   15744:	and	w0, w0, #0xff
   15748:	and	x0, x0, #0xff
   1574c:	cmp	x0, #0x0
   15750:	b.eq	1577c <udev_util_encode_string@@LIBUDEV_183+0x9f4c>  // b.none
   15754:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15758:	add	x1, x0, #0xcab
   1575c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15760:	add	x4, x0, #0x538
   15764:	mov	w3, #0x54                  	// #84
   15768:	mov	x2, x1
   1576c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15770:	add	x1, x0, #0xcf0
   15774:	mov	w0, #0x0                   	// #0
   15778:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1577c:	ldrb	w0, [sp, #39]
   15780:	cmp	w0, #0x0
   15784:	b.eq	15798 <udev_util_encode_string@@LIBUDEV_183+0x9f68>  // b.none
   15788:	ldr	x0, [sp, #56]
   1578c:	add	x0, x0, #0x38
   15790:	str	x0, [sp, #112]
   15794:	b	157a4 <udev_util_encode_string@@LIBUDEV_183+0x9f74>
   15798:	ldr	x0, [sp, #56]
   1579c:	add	x0, x0, #0x10
   157a0:	str	x0, [sp, #112]
   157a4:	ldr	x0, [sp, #40]
   157a8:	cmp	x0, #0x0
   157ac:	b.eq	158f0 <udev_util_encode_string@@LIBUDEV_183+0xa0c0>  // b.none
   157b0:	str	xzr, [sp, #80]
   157b4:	str	xzr, [sp, #88]
   157b8:	str	xzr, [sp, #96]
   157bc:	str	xzr, [sp, #104]
   157c0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   157c4:	ldr	x1, [x0, #4064]
   157c8:	ldr	x0, [sp, #112]
   157cc:	bl	28718 <udev_util_encode_string@@LIBUDEV_183+0x1cee8>
   157d0:	str	w0, [sp, #76]
   157d4:	ldr	w0, [sp, #76]
   157d8:	cmp	w0, #0x0
   157dc:	b.ge	157ec <udev_util_encode_string@@LIBUDEV_183+0x9fbc>  // b.tcont
   157e0:	ldr	w19, [sp, #76]
   157e4:	mov	w20, #0x0                   	// #0
   157e8:	b	15888 <udev_util_encode_string@@LIBUDEV_183+0xa058>
   157ec:	ldr	x0, [sp, #48]
   157f0:	bl	5370 <strdup@plt>
   157f4:	str	x0, [sp, #80]
   157f8:	ldr	x0, [sp, #80]
   157fc:	cmp	x0, #0x0
   15800:	b.ne	15810 <udev_util_encode_string@@LIBUDEV_183+0x9fe0>  // b.any
   15804:	mov	w19, #0xfffffff4            	// #-12
   15808:	mov	w20, #0x0                   	// #0
   1580c:	b	15888 <udev_util_encode_string@@LIBUDEV_183+0xa058>
   15810:	ldr	x0, [sp, #40]
   15814:	bl	5370 <strdup@plt>
   15818:	str	x0, [sp, #88]
   1581c:	ldr	x0, [sp, #88]
   15820:	cmp	x0, #0x0
   15824:	b.ne	15834 <udev_util_encode_string@@LIBUDEV_183+0xa004>  // b.any
   15828:	mov	w19, #0xfffffff4            	// #-12
   1582c:	mov	w20, #0x0                   	// #0
   15830:	b	15888 <udev_util_encode_string@@LIBUDEV_183+0xa058>
   15834:	ldr	x0, [sp, #112]
   15838:	ldr	x0, [x0]
   1583c:	ldr	x1, [sp, #80]
   15840:	add	x2, sp, #0x60
   15844:	bl	15128 <udev_util_encode_string@@LIBUDEV_183+0x98f8>
   15848:	str	x0, [sp, #104]
   1584c:	ldr	x0, [sp, #112]
   15850:	ldr	x0, [x0]
   15854:	ldr	x1, [sp, #80]
   15858:	ldr	x2, [sp, #88]
   1585c:	bl	150d8 <udev_util_encode_string@@LIBUDEV_183+0x98a8>
   15860:	str	w0, [sp, #76]
   15864:	ldr	w0, [sp, #76]
   15868:	cmp	w0, #0x0
   1586c:	b.ge	1587c <udev_util_encode_string@@LIBUDEV_183+0xa04c>  // b.tcont
   15870:	ldr	w19, [sp, #76]
   15874:	mov	w20, #0x0                   	// #0
   15878:	b	15888 <udev_util_encode_string@@LIBUDEV_183+0xa058>
   1587c:	str	xzr, [sp, #80]
   15880:	str	xzr, [sp, #88]
   15884:	mov	w20, #0x1                   	// #1
   15888:	add	x0, sp, #0x68
   1588c:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   15890:	cmp	w20, #0x1
   15894:	b.eq	158a0 <udev_util_encode_string@@LIBUDEV_183+0xa070>  // b.none
   15898:	mov	w20, #0x0                   	// #0
   1589c:	b	158a4 <udev_util_encode_string@@LIBUDEV_183+0xa074>
   158a0:	mov	w20, #0x1                   	// #1
   158a4:	add	x0, sp, #0x60
   158a8:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   158ac:	cmp	w20, #0x1
   158b0:	b.eq	158bc <udev_util_encode_string@@LIBUDEV_183+0xa08c>  // b.none
   158b4:	mov	w20, #0x0                   	// #0
   158b8:	b	158c0 <udev_util_encode_string@@LIBUDEV_183+0xa090>
   158bc:	mov	w20, #0x1                   	// #1
   158c0:	add	x0, sp, #0x58
   158c4:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   158c8:	cmp	w20, #0x1
   158cc:	b.eq	158d8 <udev_util_encode_string@@LIBUDEV_183+0xa0a8>  // b.none
   158d0:	mov	w20, #0x0                   	// #0
   158d4:	b	158dc <udev_util_encode_string@@LIBUDEV_183+0xa0ac>
   158d8:	mov	w20, #0x1                   	// #1
   158dc:	add	x0, sp, #0x50
   158e0:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   158e4:	cmp	w20, #0x1
   158e8:	b.ne	15960 <udev_util_encode_string@@LIBUDEV_183+0xa130>  // b.any
   158ec:	b	15924 <udev_util_encode_string@@LIBUDEV_183+0xa0f4>
   158f0:	str	xzr, [sp, #96]
   158f4:	str	xzr, [sp, #104]
   158f8:	ldr	x0, [sp, #112]
   158fc:	ldr	x0, [x0]
   15900:	add	x1, sp, #0x60
   15904:	mov	x2, x1
   15908:	ldr	x1, [sp, #48]
   1590c:	bl	15154 <udev_util_encode_string@@LIBUDEV_183+0x9924>
   15910:	str	x0, [sp, #104]
   15914:	add	x0, sp, #0x68
   15918:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1591c:	add	x0, sp, #0x60
   15920:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   15924:	ldrb	w0, [sp, #39]
   15928:	eor	w0, w0, #0x1
   1592c:	and	w0, w0, #0xff
   15930:	cmp	w0, #0x0
   15934:	b.eq	1595c <udev_util_encode_string@@LIBUDEV_183+0xa12c>  // b.none
   15938:	ldr	x0, [sp, #56]
   1593c:	ldr	x0, [x0, #40]
   15940:	add	x1, x0, #0x1
   15944:	ldr	x0, [sp, #56]
   15948:	str	x1, [x0, #40]
   1594c:	ldr	x0, [sp, #56]
   15950:	ldrb	w1, [x0, #328]
   15954:	orr	w1, w1, #0x10
   15958:	strb	w1, [x0, #328]
   1595c:	mov	w19, #0x0                   	// #0
   15960:	mov	w1, w19
   15964:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   15968:	ldr	x0, [x0, #4016]
   1596c:	ldr	x2, [sp, #120]
   15970:	ldr	x0, [x0]
   15974:	eor	x0, x2, x0
   15978:	cmp	x0, #0x0
   1597c:	b.eq	15984 <udev_util_encode_string@@LIBUDEV_183+0xa154>  // b.none
   15980:	bl	5390 <__stack_chk_fail@plt>
   15984:	mov	w0, w1
   15988:	ldp	x19, x20, [sp, #16]
   1598c:	ldp	x29, x30, [sp], #128
   15990:	ret
   15994:	stp	x29, x30, [sp, #-48]!
   15998:	mov	x29, sp
   1599c:	str	x0, [sp, #40]
   159a0:	str	x1, [sp, #32]
   159a4:	str	x2, [sp, #24]
   159a8:	mov	w3, #0x0                   	// #0
   159ac:	ldr	x2, [sp, #24]
   159b0:	ldr	x1, [sp, #32]
   159b4:	ldr	x0, [sp, #40]
   159b8:	bl	156c4 <udev_util_encode_string@@LIBUDEV_183+0x9e94>
   159bc:	ldp	x29, x30, [sp], #48
   159c0:	ret
   159c4:	stp	x29, x30, [sp, #-240]!
   159c8:	mov	x29, sp
   159cc:	stp	x19, x20, [sp, #16]
   159d0:	str	x0, [x29, #56]
   159d4:	str	x1, [x29, #48]
   159d8:	strb	w2, [x29, #47]
   159dc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   159e0:	ldr	x0, [x0, #4016]
   159e4:	ldr	x1, [x0]
   159e8:	str	x1, [x29, #232]
   159ec:	mov	x1, #0x0                   	// #0
   159f0:	str	xzr, [x29, #128]
   159f4:	ldr	x0, [x29, #56]
   159f8:	cmp	x0, #0x0
   159fc:	cset	w0, eq  // eq = none
   15a00:	and	w0, w0, #0xff
   15a04:	and	x0, x0, #0xff
   15a08:	cmp	x0, #0x0
   15a0c:	b.eq	15a38 <udev_util_encode_string@@LIBUDEV_183+0xa208>  // b.none
   15a10:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15a14:	add	x1, x0, #0xcab
   15a18:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15a1c:	add	x4, x0, #0x550
   15a20:	mov	w3, #0x8b                  	// #139
   15a24:	mov	x2, x1
   15a28:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15a2c:	add	x1, x0, #0xcd8
   15a30:	mov	w0, #0x0                   	// #0
   15a34:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15a38:	ldr	x0, [x29, #48]
   15a3c:	cmp	x0, #0x0
   15a40:	cset	w0, eq  // eq = none
   15a44:	and	w0, w0, #0xff
   15a48:	and	x0, x0, #0xff
   15a4c:	cmp	x0, #0x0
   15a50:	b.eq	15a7c <udev_util_encode_string@@LIBUDEV_183+0xa24c>  // b.none
   15a54:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15a58:	add	x1, x0, #0xcab
   15a5c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15a60:	add	x4, x0, #0x550
   15a64:	mov	w3, #0x8c                  	// #140
   15a68:	mov	x2, x1
   15a6c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15a70:	add	x1, x0, #0xcf8
   15a74:	mov	w0, #0x0                   	// #0
   15a78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15a7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15a80:	add	x1, x0, #0xd08
   15a84:	ldr	x0, [x29, #48]
   15a88:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   15a8c:	cmp	x0, #0x0
   15a90:	b.ne	15b28 <udev_util_encode_string@@LIBUDEV_183+0xa2f8>  // b.any
   15a94:	mov	w0, #0x7                   	// #7
   15a98:	str	w0, [x29, #116]
   15a9c:	mov	w0, #0x16                  	// #22
   15aa0:	movk	w0, #0x4000, lsl #16
   15aa4:	str	w0, [x29, #120]
   15aa8:	str	wzr, [x29, #124]
   15aac:	ldr	w0, [x29, #124]
   15ab0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   15ab4:	mov	w1, w0
   15ab8:	ldr	w0, [x29, #116]
   15abc:	and	w0, w0, #0x7
   15ac0:	cmp	w1, w0
   15ac4:	b.lt	15b10 <udev_util_encode_string@@LIBUDEV_183+0xa2e0>  // b.tstop
   15ac8:	ldr	w0, [x29, #124]
   15acc:	lsl	w1, w0, #10
   15ad0:	ldr	w0, [x29, #116]
   15ad4:	orr	w7, w1, w0
   15ad8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15adc:	add	x1, x0, #0xcab
   15ae0:	ldr	x6, [x29, #48]
   15ae4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15ae8:	add	x5, x0, #0xd10
   15aec:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15af0:	add	x4, x0, #0x568
   15af4:	mov	w3, #0x90                  	// #144
   15af8:	mov	x2, x1
   15afc:	ldr	w1, [x29, #120]
   15b00:	mov	w0, w7
   15b04:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   15b08:	mov	w19, w0
   15b0c:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   15b10:	ldr	w0, [x29, #120]
   15b14:	cmp	w0, #0x0
   15b18:	cneg	w0, w0, lt  // lt = tstop
   15b1c:	and	w0, w0, #0xff
   15b20:	neg	w19, w0
   15b24:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   15b28:	ldrb	w0, [x29, #47]
   15b2c:	cmp	w0, #0x0
   15b30:	b.eq	160cc <udev_util_encode_string@@LIBUDEV_183+0xa89c>  // b.none
   15b34:	add	x0, x29, #0x80
   15b38:	mov	x4, #0x0                   	// #0
   15b3c:	mov	x3, x0
   15b40:	mov	w2, #0x0                   	// #0
   15b44:	mov	x1, #0x0                   	// #0
   15b48:	ldr	x0, [x29, #48]
   15b4c:	bl	25c1c <udev_util_encode_string@@LIBUDEV_183+0x1a3ec>
   15b50:	str	w0, [x29, #64]
   15b54:	ldr	w0, [x29, #64]
   15b58:	cmn	w0, #0x2
   15b5c:	b.ne	15b68 <udev_util_encode_string@@LIBUDEV_183+0xa338>  // b.any
   15b60:	mov	w19, #0xffffffed            	// #-19
   15b64:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   15b68:	ldr	w0, [x29, #64]
   15b6c:	cmp	w0, #0x0
   15b70:	b.ge	15c04 <udev_util_encode_string@@LIBUDEV_183+0xa3d4>  // b.tcont
   15b74:	mov	w0, #0x7                   	// #7
   15b78:	str	w0, [x29, #104]
   15b7c:	ldr	w0, [x29, #64]
   15b80:	str	w0, [x29, #108]
   15b84:	str	wzr, [x29, #112]
   15b88:	ldr	w0, [x29, #112]
   15b8c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   15b90:	mov	w1, w0
   15b94:	ldr	w0, [x29, #104]
   15b98:	and	w0, w0, #0x7
   15b9c:	cmp	w1, w0
   15ba0:	b.lt	15bec <udev_util_encode_string@@LIBUDEV_183+0xa3bc>  // b.tstop
   15ba4:	ldr	w0, [x29, #112]
   15ba8:	lsl	w1, w0, #10
   15bac:	ldr	w0, [x29, #104]
   15bb0:	orr	w7, w1, w0
   15bb4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15bb8:	add	x1, x0, #0xcab
   15bbc:	ldr	x6, [x29, #48]
   15bc0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15bc4:	add	x5, x0, #0xd48
   15bc8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15bcc:	add	x4, x0, #0x568
   15bd0:	mov	w3, #0x99                  	// #153
   15bd4:	mov	x2, x1
   15bd8:	ldr	w1, [x29, #108]
   15bdc:	mov	w0, w7
   15be0:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   15be4:	mov	w19, w0
   15be8:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   15bec:	ldr	w0, [x29, #108]
   15bf0:	cmp	w0, #0x0
   15bf4:	cneg	w0, w0, lt  // lt = tstop
   15bf8:	and	w0, w0, #0xff
   15bfc:	neg	w19, w0
   15c00:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   15c04:	ldr	x2, [x29, #128]
   15c08:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15c0c:	add	x1, x0, #0xd78
   15c10:	mov	x0, x2
   15c14:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   15c18:	cmp	x0, #0x0
   15c1c:	b.ne	15e28 <udev_util_encode_string@@LIBUDEV_183+0xa5f8>  // b.any
   15c20:	str	xzr, [x29, #136]
   15c24:	str	xzr, [x29, #144]
   15c28:	add	x0, x29, #0x88
   15c2c:	mov	x4, #0x0                   	// #0
   15c30:	mov	x3, x0
   15c34:	mov	w2, #0x0                   	// #0
   15c38:	mov	x1, #0x0                   	// #0
   15c3c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15c40:	add	x0, x0, #0xd78
   15c44:	bl	25c1c <udev_util_encode_string@@LIBUDEV_183+0x1a3ec>
   15c48:	str	w0, [x29, #64]
   15c4c:	ldr	w0, [x29, #64]
   15c50:	cmp	w0, #0x0
   15c54:	b.ge	15ce8 <udev_util_encode_string@@LIBUDEV_183+0xa4b8>  // b.tcont
   15c58:	mov	w0, #0x7                   	// #7
   15c5c:	str	w0, [x29, #80]
   15c60:	ldr	w0, [x29, #64]
   15c64:	str	w0, [x29, #84]
   15c68:	str	wzr, [x29, #88]
   15c6c:	ldr	w0, [x29, #88]
   15c70:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   15c74:	mov	w1, w0
   15c78:	ldr	w0, [x29, #80]
   15c7c:	and	w0, w0, #0x7
   15c80:	cmp	w1, w0
   15c84:	b.lt	15ccc <udev_util_encode_string@@LIBUDEV_183+0xa49c>  // b.tstop
   15c88:	ldr	w0, [x29, #88]
   15c8c:	lsl	w1, w0, #10
   15c90:	ldr	w0, [x29, #80]
   15c94:	orr	w6, w1, w0
   15c98:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15c9c:	add	x1, x0, #0xcab
   15ca0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15ca4:	add	x5, x0, #0xd80
   15ca8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15cac:	add	x4, x0, #0x568
   15cb0:	mov	w3, #0xa2                  	// #162
   15cb4:	mov	x2, x1
   15cb8:	ldr	w1, [x29, #84]
   15cbc:	mov	w0, w6
   15cc0:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   15cc4:	mov	w19, w0
   15cc8:	b	15ce0 <udev_util_encode_string@@LIBUDEV_183+0xa4b0>
   15ccc:	ldr	w0, [x29, #84]
   15cd0:	cmp	w0, #0x0
   15cd4:	cneg	w0, w0, lt  // lt = tstop
   15cd8:	and	w0, w0, #0xff
   15cdc:	neg	w19, w0
   15ce0:	mov	w20, #0x0                   	// #0
   15ce4:	b	15dfc <udev_util_encode_string@@LIBUDEV_183+0xa5cc>
   15ce8:	ldr	x0, [x29, #128]
   15cec:	ldr	x1, [x29, #136]
   15cf0:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   15cf4:	str	x0, [x29, #176]
   15cf8:	ldr	x0, [x29, #176]
   15cfc:	cmp	x0, #0x0
   15d00:	b.ne	15da8 <udev_util_encode_string@@LIBUDEV_183+0xa578>  // b.any
   15d04:	mov	w0, #0x7                   	// #7
   15d08:	str	w0, [x29, #68]
   15d0c:	mov	w0, #0x13                  	// #19
   15d10:	movk	w0, #0x4000, lsl #16
   15d14:	str	w0, [x29, #72]
   15d18:	str	wzr, [x29, #76]
   15d1c:	ldr	w0, [x29, #76]
   15d20:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   15d24:	mov	w1, w0
   15d28:	ldr	w0, [x29, #68]
   15d2c:	and	w0, w0, #0x7
   15d30:	cmp	w1, w0
   15d34:	b.lt	15d8c <udev_util_encode_string@@LIBUDEV_183+0xa55c>  // b.tstop
   15d38:	ldr	w0, [x29, #76]
   15d3c:	lsl	w1, w0, #10
   15d40:	ldr	w0, [x29, #68]
   15d44:	orr	w8, w1, w0
   15d48:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15d4c:	add	x1, x0, #0xcab
   15d50:	ldr	x0, [x29, #128]
   15d54:	ldr	x2, [x29, #136]
   15d58:	mov	x7, x2
   15d5c:	mov	x6, x0
   15d60:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15d64:	add	x5, x0, #0xdb0
   15d68:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15d6c:	add	x4, x0, #0x568
   15d70:	mov	w3, #0xa6                  	// #166
   15d74:	mov	x2, x1
   15d78:	ldr	w1, [x29, #72]
   15d7c:	mov	w0, w8
   15d80:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   15d84:	mov	w19, w0
   15d88:	b	15da0 <udev_util_encode_string@@LIBUDEV_183+0xa570>
   15d8c:	ldr	w0, [x29, #72]
   15d90:	cmp	w0, #0x0
   15d94:	cneg	w0, w0, lt  // lt = tstop
   15d98:	and	w0, w0, #0xff
   15d9c:	neg	w19, w0
   15da0:	mov	w20, #0x0                   	// #0
   15da4:	b	15dfc <udev_util_encode_string@@LIBUDEV_183+0xa5cc>
   15da8:	mov	x2, #0xffffffffffffffff    	// #-1
   15dac:	ldr	x1, [x29, #176]
   15db0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15db4:	add	x0, x0, #0xd78
   15db8:	bl	31588 <udev_util_encode_string@@LIBUDEV_183+0x25d58>
   15dbc:	str	x0, [x29, #144]
   15dc0:	ldr	x0, [x29, #144]
   15dc4:	cmp	x0, #0x0
   15dc8:	b.ne	15dd8 <udev_util_encode_string@@LIBUDEV_183+0xa5a8>  // b.any
   15dcc:	mov	w19, #0xfffffff4            	// #-12
   15dd0:	mov	w20, #0x0                   	// #0
   15dd4:	b	15dfc <udev_util_encode_string@@LIBUDEV_183+0xa5cc>
   15dd8:	ldr	x0, [x29, #128]
   15ddc:	bl	54b0 <free@plt>
   15de0:	ldr	x0, [x29, #144]
   15de4:	str	x0, [x29, #128]
   15de8:	str	xzr, [x29, #144]
   15dec:	ldr	x0, [x29, #128]
   15df0:	mov	w1, #0x0                   	// #0
   15df4:	bl	30ec4 <udev_util_encode_string@@LIBUDEV_183+0x25694>
   15df8:	mov	w20, #0x1                   	// #1
   15dfc:	add	x0, x29, #0x90
   15e00:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   15e04:	cmp	w20, #0x1
   15e08:	b.eq	15e14 <udev_util_encode_string@@LIBUDEV_183+0xa5e4>  // b.none
   15e0c:	mov	w20, #0x0                   	// #0
   15e10:	b	15e18 <udev_util_encode_string@@LIBUDEV_183+0xa5e8>
   15e14:	mov	w20, #0x1                   	// #1
   15e18:	add	x0, x29, #0x88
   15e1c:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   15e20:	cmp	w20, #0x1
   15e24:	b.ne	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>  // b.any
   15e28:	ldr	x2, [x29, #128]
   15e2c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15e30:	add	x1, x0, #0xe00
   15e34:	mov	x0, x2
   15e38:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   15e3c:	cmp	x0, #0x0
   15e40:	b.eq	160b0 <udev_util_encode_string@@LIBUDEV_183+0xa880>  // b.none
   15e44:	ldr	x0, [x29, #128]
   15e48:	str	x0, [x29, #216]
   15e4c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15e50:	add	x0, x0, #0xe10
   15e54:	str	x0, [x29, #224]
   15e58:	str	xzr, [x29, #160]
   15e5c:	str	xzr, [x29, #168]
   15e60:	b	15e94 <udev_util_encode_string@@LIBUDEV_183+0xa664>
   15e64:	ldr	x0, [x29, #168]
   15e68:	lsl	x0, x0, #3
   15e6c:	add	x1, x29, #0xd8
   15e70:	ldr	x0, [x1, x0]
   15e74:	bl	5040 <strlen@plt>
   15e78:	mov	x1, x0
   15e7c:	ldr	x0, [x29, #160]
   15e80:	add	x0, x0, x1
   15e84:	str	x0, [x29, #160]
   15e88:	ldr	x0, [x29, #168]
   15e8c:	add	x0, x0, #0x1
   15e90:	str	x0, [x29, #168]
   15e94:	ldr	x0, [x29, #168]
   15e98:	cmp	x0, #0x1
   15e9c:	b.hi	15eb8 <udev_util_encode_string@@LIBUDEV_183+0xa688>  // b.pmore
   15ea0:	ldr	x0, [x29, #168]
   15ea4:	lsl	x0, x0, #3
   15ea8:	add	x1, x29, #0xd8
   15eac:	ldr	x0, [x1, x0]
   15eb0:	cmp	x0, #0x0
   15eb4:	b.ne	15e64 <udev_util_encode_string@@LIBUDEV_183+0xa634>  // b.any
   15eb8:	ldr	x0, [x29, #160]
   15ebc:	add	x0, x0, #0x1
   15ec0:	str	x0, [x29, #184]
   15ec4:	ldr	x1, [x29, #184]
   15ec8:	mov	x0, #0x1                   	// #1
   15ecc:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   15ed0:	and	w0, w0, #0xff
   15ed4:	and	x0, x0, #0xff
   15ed8:	cmp	x0, #0x0
   15edc:	b.eq	15f08 <udev_util_encode_string@@LIBUDEV_183+0xa6d8>  // b.none
   15ee0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15ee4:	add	x1, x0, #0xcab
   15ee8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15eec:	add	x4, x0, #0x550
   15ef0:	mov	w3, #0xb6                  	// #182
   15ef4:	mov	x2, x1
   15ef8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15efc:	add	x1, x0, #0xe18
   15f00:	mov	w0, #0x0                   	// #0
   15f04:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15f08:	ldr	x0, [x29, #184]
   15f0c:	cmp	x0, #0x400, lsl #12
   15f10:	cset	w0, hi  // hi = pmore
   15f14:	and	w0, w0, #0xff
   15f18:	and	x0, x0, #0xff
   15f1c:	cmp	x0, #0x0
   15f20:	b.eq	15f4c <udev_util_encode_string@@LIBUDEV_183+0xa71c>  // b.none
   15f24:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15f28:	add	x1, x0, #0xcab
   15f2c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   15f30:	add	x4, x0, #0x550
   15f34:	mov	w3, #0xb6                  	// #182
   15f38:	mov	x2, x1
   15f3c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   15f40:	add	x1, x0, #0xe48
   15f44:	mov	w0, #0x0                   	// #0
   15f48:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   15f4c:	ldr	x0, [x29, #184]
   15f50:	add	x0, x0, #0xf
   15f54:	lsr	x0, x0, #4
   15f58:	lsl	x0, x0, #4
   15f5c:	sub	sp, sp, x0
   15f60:	mov	x0, sp
   15f64:	add	x0, x0, #0xf
   15f68:	lsr	x0, x0, #4
   15f6c:	lsl	x0, x0, #4
   15f70:	str	x0, [x29, #192]
   15f74:	ldr	x0, [x29, #192]
   15f78:	str	x0, [x29, #152]
   15f7c:	str	xzr, [x29, #168]
   15f80:	b	15fb0 <udev_util_encode_string@@LIBUDEV_183+0xa780>
   15f84:	ldr	x0, [x29, #168]
   15f88:	lsl	x0, x0, #3
   15f8c:	add	x1, x29, #0xd8
   15f90:	ldr	x0, [x1, x0]
   15f94:	mov	x1, x0
   15f98:	ldr	x0, [x29, #152]
   15f9c:	bl	51b0 <stpcpy@plt>
   15fa0:	str	x0, [x29, #152]
   15fa4:	ldr	x0, [x29, #168]
   15fa8:	add	x0, x0, #0x1
   15fac:	str	x0, [x29, #168]
   15fb0:	ldr	x0, [x29, #168]
   15fb4:	cmp	x0, #0x1
   15fb8:	b.hi	15fd4 <udev_util_encode_string@@LIBUDEV_183+0xa7a4>  // b.pmore
   15fbc:	ldr	x0, [x29, #168]
   15fc0:	lsl	x0, x0, #3
   15fc4:	add	x1, x29, #0xd8
   15fc8:	ldr	x0, [x1, x0]
   15fcc:	cmp	x0, #0x0
   15fd0:	b.ne	15f84 <udev_util_encode_string@@LIBUDEV_183+0xa754>  // b.any
   15fd4:	ldr	x0, [x29, #152]
   15fd8:	strb	wzr, [x0]
   15fdc:	ldr	x0, [x29, #192]
   15fe0:	str	x0, [x29, #200]
   15fe4:	mov	w1, #0x0                   	// #0
   15fe8:	ldr	x0, [x29, #200]
   15fec:	bl	53e0 <access@plt>
   15ff0:	str	w0, [x29, #64]
   15ff4:	ldr	w0, [x29, #64]
   15ff8:	cmp	w0, #0x0
   15ffc:	b.ge	160ec <udev_util_encode_string@@LIBUDEV_183+0xa8bc>  // b.tcont
   16000:	bl	57d0 <__errno_location@plt>
   16004:	ldr	w0, [x0]
   16008:	cmp	w0, #0x2
   1600c:	b.ne	16018 <udev_util_encode_string@@LIBUDEV_183+0xa7e8>  // b.any
   16010:	mov	w19, #0xffffffed            	// #-19
   16014:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   16018:	mov	w0, #0x7                   	// #7
   1601c:	str	w0, [x29, #92]
   16020:	bl	57d0 <__errno_location@plt>
   16024:	ldr	w0, [x0]
   16028:	str	w0, [x29, #96]
   1602c:	str	wzr, [x29, #100]
   16030:	ldr	w0, [x29, #100]
   16034:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   16038:	mov	w1, w0
   1603c:	ldr	w0, [x29, #92]
   16040:	and	w0, w0, #0x7
   16044:	cmp	w1, w0
   16048:	b.lt	16098 <udev_util_encode_string@@LIBUDEV_183+0xa868>  // b.tstop
   1604c:	ldr	w0, [x29, #100]
   16050:	lsl	w1, w0, #10
   16054:	ldr	w0, [x29, #92]
   16058:	orr	w7, w1, w0
   1605c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16060:	add	x1, x0, #0xcab
   16064:	ldr	x0, [x29, #128]
   16068:	mov	x6, x0
   1606c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16070:	add	x5, x0, #0xe68
   16074:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16078:	add	x4, x0, #0x568
   1607c:	mov	w3, #0xbd                  	// #189
   16080:	mov	x2, x1
   16084:	ldr	w1, [x29, #96]
   16088:	mov	w0, w7
   1608c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   16090:	mov	w19, w0
   16094:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   16098:	ldr	w0, [x29, #96]
   1609c:	cmp	w0, #0x0
   160a0:	cneg	w0, w0, lt  // lt = tstop
   160a4:	and	w0, w0, #0xff
   160a8:	neg	w19, w0
   160ac:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   160b0:	ldr	x0, [x29, #128]
   160b4:	mov	w1, #0x0                   	// #0
   160b8:	bl	33ad4 <udev_util_encode_string@@LIBUDEV_183+0x282a4>
   160bc:	cmp	w0, #0x0
   160c0:	b.ne	160ec <udev_util_encode_string@@LIBUDEV_183+0xa8bc>  // b.any
   160c4:	mov	w19, #0xffffffed            	// #-19
   160c8:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   160cc:	ldr	x0, [x29, #48]
   160d0:	bl	5370 <strdup@plt>
   160d4:	str	x0, [x29, #128]
   160d8:	ldr	x0, [x29, #128]
   160dc:	cmp	x0, #0x0
   160e0:	b.ne	160ec <udev_util_encode_string@@LIBUDEV_183+0xa8bc>  // b.any
   160e4:	mov	w19, #0xfffffff4            	// #-12
   160e8:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   160ec:	ldr	x0, [x29, #128]
   160f0:	add	x0, x0, #0x4
   160f4:	str	x0, [x29, #208]
   160f8:	ldr	x0, [x29, #208]
   160fc:	ldrb	w0, [x0]
   16100:	cmp	w0, #0x0
   16104:	b.ne	16110 <udev_util_encode_string@@LIBUDEV_183+0xa8e0>  // b.any
   16108:	mov	w19, #0xffffffed            	// #-19
   1610c:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   16110:	ldr	x2, [x29, #208]
   16114:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16118:	add	x1, x0, #0xe98
   1611c:	ldr	x0, [x29, #56]
   16120:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   16124:	str	w0, [x29, #64]
   16128:	ldr	w0, [x29, #64]
   1612c:	cmp	w0, #0x0
   16130:	b.ge	1613c <udev_util_encode_string@@LIBUDEV_183+0xa90c>  // b.tcont
   16134:	ldr	w19, [x29, #64]
   16138:	b	16168 <udev_util_encode_string@@LIBUDEV_183+0xa938>
   1613c:	ldr	x0, [x29, #56]
   16140:	ldr	x0, [x0, #232]
   16144:	bl	54b0 <free@plt>
   16148:	ldr	x1, [x29, #128]
   1614c:	ldr	x0, [x29, #56]
   16150:	str	x1, [x0, #232]
   16154:	str	xzr, [x29, #128]
   16158:	ldr	x0, [x29, #56]
   1615c:	ldr	x1, [x29, #208]
   16160:	str	x1, [x0, #240]
   16164:	mov	w19, #0x0                   	// #0
   16168:	add	x0, x29, #0x80
   1616c:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   16170:	mov	w1, w19
   16174:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   16178:	ldr	x0, [x0, #4016]
   1617c:	ldr	x2, [x29, #232]
   16180:	ldr	x0, [x0]
   16184:	eor	x0, x2, x0
   16188:	cmp	x0, #0x0
   1618c:	b.eq	16194 <udev_util_encode_string@@LIBUDEV_183+0xa964>  // b.none
   16190:	bl	5390 <__stack_chk_fail@plt>
   16194:	mov	w0, w1
   16198:	mov	sp, x29
   1619c:	ldp	x19, x20, [sp, #16]
   161a0:	ldp	x29, x30, [sp], #240
   161a4:	ret
   161a8:	stp	x29, x30, [sp, #-80]!
   161ac:	mov	x29, sp
   161b0:	str	x19, [sp, #16]
   161b4:	str	x0, [sp, #40]
   161b8:	str	x1, [sp, #32]
   161bc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   161c0:	ldr	x0, [x0, #4016]
   161c4:	ldr	x1, [x0]
   161c8:	str	x1, [sp, #72]
   161cc:	mov	x1, #0x0                   	// #0
   161d0:	str	xzr, [sp, #56]
   161d4:	ldr	x0, [sp, #40]
   161d8:	cmp	x0, #0x0
   161dc:	cset	w0, ne  // ne = any
   161e0:	and	w0, w0, #0xff
   161e4:	and	x0, x0, #0xff
   161e8:	cmp	x0, #0x0
   161ec:	b.ne	16220 <udev_util_encode_string@@LIBUDEV_183+0xa9f0>  // b.any
   161f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   161f4:	add	x1, x0, #0xcab
   161f8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   161fc:	add	x4, x0, #0x580
   16200:	mov	w3, #0xdd                  	// #221
   16204:	mov	x2, x1
   16208:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1620c:	add	x1, x0, #0xcd0
   16210:	mov	w0, #0x0                   	// #0
   16214:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   16218:	mov	w0, #0x1                   	// #1
   1621c:	b	16224 <udev_util_encode_string@@LIBUDEV_183+0xa9f4>
   16220:	mov	w0, #0x0                   	// #0
   16224:	cmp	w0, #0x0
   16228:	b.eq	16234 <udev_util_encode_string@@LIBUDEV_183+0xaa04>  // b.none
   1622c:	mov	w19, #0xffffffea            	// #-22
   16230:	b	162f8 <udev_util_encode_string@@LIBUDEV_183+0xaac8>
   16234:	ldr	x0, [sp, #32]
   16238:	cmp	x0, #0x0
   1623c:	cset	w0, ne  // ne = any
   16240:	and	w0, w0, #0xff
   16244:	and	x0, x0, #0xff
   16248:	cmp	x0, #0x0
   1624c:	b.ne	16280 <udev_util_encode_string@@LIBUDEV_183+0xaa50>  // b.any
   16250:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16254:	add	x1, x0, #0xcab
   16258:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1625c:	add	x4, x0, #0x580
   16260:	mov	w3, #0xde                  	// #222
   16264:	mov	x2, x1
   16268:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1626c:	add	x1, x0, #0xea0
   16270:	mov	w0, #0x0                   	// #0
   16274:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   16278:	mov	w0, #0x1                   	// #1
   1627c:	b	16284 <udev_util_encode_string@@LIBUDEV_183+0xaa54>
   16280:	mov	w0, #0x0                   	// #0
   16284:	cmp	w0, #0x0
   16288:	b.eq	16294 <udev_util_encode_string@@LIBUDEV_183+0xaa64>  // b.none
   1628c:	mov	w19, #0xffffffea            	// #-22
   16290:	b	162f8 <udev_util_encode_string@@LIBUDEV_183+0xaac8>
   16294:	add	x0, sp, #0x38
   16298:	bl	1537c <udev_util_encode_string@@LIBUDEV_183+0x9b4c>
   1629c:	str	w0, [sp, #52]
   162a0:	ldr	w0, [sp, #52]
   162a4:	cmp	w0, #0x0
   162a8:	b.ge	162b4 <udev_util_encode_string@@LIBUDEV_183+0xaa84>  // b.tcont
   162ac:	ldr	w19, [sp, #52]
   162b0:	b	162f8 <udev_util_encode_string@@LIBUDEV_183+0xaac8>
   162b4:	ldr	x0, [sp, #56]
   162b8:	mov	w2, #0x1                   	// #1
   162bc:	ldr	x1, [sp, #32]
   162c0:	bl	159c4 <udev_util_encode_string@@LIBUDEV_183+0xa194>
   162c4:	str	w0, [sp, #52]
   162c8:	ldr	w0, [sp, #52]
   162cc:	cmp	w0, #0x0
   162d0:	b.ge	162dc <udev_util_encode_string@@LIBUDEV_183+0xaaac>  // b.tcont
   162d4:	ldr	w19, [sp, #52]
   162d8:	b	162f8 <udev_util_encode_string@@LIBUDEV_183+0xaac8>
   162dc:	ldr	x0, [sp, #56]
   162e0:	str	x0, [sp, #64]
   162e4:	str	xzr, [sp, #56]
   162e8:	ldr	x1, [sp, #64]
   162ec:	ldr	x0, [sp, #40]
   162f0:	str	x1, [x0]
   162f4:	mov	w19, #0x0                   	// #0
   162f8:	add	x0, sp, #0x38
   162fc:	bl	14f18 <udev_util_encode_string@@LIBUDEV_183+0x96e8>
   16300:	mov	w1, w19
   16304:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   16308:	ldr	x0, [x0, #4016]
   1630c:	ldr	x2, [sp, #72]
   16310:	ldr	x0, [x0]
   16314:	eor	x0, x2, x0
   16318:	cmp	x0, #0x0
   1631c:	b.eq	16324 <udev_util_encode_string@@LIBUDEV_183+0xaaf4>  // b.none
   16320:	bl	5390 <__stack_chk_fail@plt>
   16324:	mov	w0, w1
   16328:	ldr	x19, [sp, #16]
   1632c:	ldp	x29, x30, [sp], #80
   16330:	ret
   16334:	stp	x29, x30, [sp, #-192]!
   16338:	mov	x29, sp
   1633c:	str	x19, [sp, #16]
   16340:	str	x0, [x29, #56]
   16344:	strb	w1, [x29, #55]
   16348:	str	x2, [x29, #40]
   1634c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   16350:	ldr	x0, [x0, #4016]
   16354:	ldr	x1, [x0]
   16358:	str	x1, [x29, #184]
   1635c:	mov	x1, #0x0                   	// #0
   16360:	ldr	x0, [x29, #56]
   16364:	cmp	x0, #0x0
   16368:	cset	w0, ne  // ne = any
   1636c:	and	w0, w0, #0xff
   16370:	and	x0, x0, #0xff
   16374:	cmp	x0, #0x0
   16378:	b.ne	163ac <udev_util_encode_string@@LIBUDEV_183+0xab7c>  // b.any
   1637c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16380:	add	x1, x0, #0xcab
   16384:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16388:	add	x4, x0, #0x5a0
   1638c:	mov	w3, #0xf0                  	// #240
   16390:	mov	x2, x1
   16394:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16398:	add	x1, x0, #0xcd0
   1639c:	mov	w0, #0x0                   	// #0
   163a0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   163a4:	mov	w0, #0x1                   	// #1
   163a8:	b	163b0 <udev_util_encode_string@@LIBUDEV_183+0xab80>
   163ac:	mov	w0, #0x0                   	// #0
   163b0:	cmp	w0, #0x0
   163b4:	b.eq	163c0 <udev_util_encode_string@@LIBUDEV_183+0xab90>  // b.none
   163b8:	mov	w0, #0xffffffea            	// #-22
   163bc:	b	166a4 <udev_util_encode_string@@LIBUDEV_183+0xae74>
   163c0:	strb	wzr, [x29, #71]
   163c4:	ldrb	w0, [x29, #55]
   163c8:	sub	w0, w0, #0x62
   163cc:	cmp	w0, #0x1
   163d0:	b.hi	163dc <udev_util_encode_string@@LIBUDEV_183+0xabac>  // b.pmore
   163d4:	mov	w0, #0x1                   	// #1
   163d8:	strb	w0, [x29, #71]
   163dc:	nop
   163e0:	ldrb	w0, [x29, #71]
   163e4:	and	x0, x0, #0xff
   163e8:	cmp	x0, #0x0
   163ec:	b.ne	16420 <udev_util_encode_string@@LIBUDEV_183+0xabf0>  // b.any
   163f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   163f4:	add	x1, x0, #0xcab
   163f8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   163fc:	add	x4, x0, #0x5a0
   16400:	mov	w3, #0xf1                  	// #241
   16404:	mov	x2, x1
   16408:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1640c:	add	x1, x0, #0xea8
   16410:	mov	w0, #0x0                   	// #0
   16414:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   16418:	mov	w0, #0x1                   	// #1
   1641c:	b	16424 <udev_util_encode_string@@LIBUDEV_183+0xabf4>
   16420:	mov	w0, #0x0                   	// #0
   16424:	cmp	w0, #0x0
   16428:	b.eq	16434 <udev_util_encode_string@@LIBUDEV_183+0xac04>  // b.none
   1642c:	mov	w0, #0xffffffea            	// #-22
   16430:	b	166a4 <udev_util_encode_string@@LIBUDEV_183+0xae74>
   16434:	ldr	x0, [x29, #40]
   16438:	bl	53f0 <gnu_dev_major@plt>
   1643c:	mov	w19, w0
   16440:	ldr	x0, [x29, #40]
   16444:	bl	5610 <gnu_dev_minor@plt>
   16448:	add	x5, x29, #0x98
   1644c:	mov	w4, w0
   16450:	mov	w3, w19
   16454:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16458:	add	x2, x0, #0xec0
   1645c:	mov	x1, #0x19                  	// #25
   16460:	mov	x0, x5
   16464:	bl	5190 <snprintf@plt>
   16468:	cmp	w0, #0x18
   1646c:	cset	w0, hi  // hi = pmore
   16470:	and	w0, w0, #0xff
   16474:	and	x0, x0, #0xff
   16478:	cmp	x0, #0x0
   1647c:	b.eq	164a8 <udev_util_encode_string@@LIBUDEV_183+0xac78>  // b.none
   16480:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16484:	add	x1, x0, #0xcab
   16488:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1648c:	add	x4, x0, #0x5a0
   16490:	mov	w3, #0xf4                  	// #244
   16494:	mov	x2, x1
   16498:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1649c:	add	x1, x0, #0xec8
   164a0:	mov	w0, #0x0                   	// #0
   164a4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   164a8:	add	x0, x29, #0xc8
   164ac:	sub	x0, x0, #0x50
   164b0:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   164b4:	add	x1, x1, #0xef0
   164b8:	str	x1, [x0]
   164bc:	ldrb	w0, [x29, #55]
   164c0:	cmp	w0, #0x62
   164c4:	b.ne	164d4 <udev_util_encode_string@@LIBUDEV_183+0xaca4>  // b.any
   164c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   164cc:	add	x0, x0, #0xf00
   164d0:	b	164dc <udev_util_encode_string@@LIBUDEV_183+0xacac>
   164d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   164d8:	add	x0, x0, #0xf08
   164dc:	add	x1, x29, #0xc8
   164e0:	sub	x1, x1, #0x50
   164e4:	str	x0, [x1, #8]
   164e8:	add	x0, x29, #0xc8
   164ec:	sub	x0, x0, #0x50
   164f0:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   164f4:	add	x1, x1, #0xf10
   164f8:	str	x1, [x0, #16]
   164fc:	add	x0, x29, #0xc8
   16500:	sub	x0, x0, #0x50
   16504:	add	x1, x29, #0x98
   16508:	str	x1, [x0, #24]
   1650c:	str	xzr, [x29, #80]
   16510:	str	xzr, [x29, #88]
   16514:	b	16548 <udev_util_encode_string@@LIBUDEV_183+0xad18>
   16518:	add	x0, x29, #0xc8
   1651c:	sub	x0, x0, #0x50
   16520:	ldr	x1, [x29, #88]
   16524:	ldr	x0, [x0, x1, lsl #3]
   16528:	bl	5040 <strlen@plt>
   1652c:	mov	x1, x0
   16530:	ldr	x0, [x29, #80]
   16534:	add	x0, x0, x1
   16538:	str	x0, [x29, #80]
   1653c:	ldr	x0, [x29, #88]
   16540:	add	x0, x0, #0x1
   16544:	str	x0, [x29, #88]
   16548:	ldr	x0, [x29, #88]
   1654c:	cmp	x0, #0x3
   16550:	b.hi	1656c <udev_util_encode_string@@LIBUDEV_183+0xad3c>  // b.pmore
   16554:	add	x0, x29, #0xc8
   16558:	sub	x0, x0, #0x50
   1655c:	ldr	x1, [x29, #88]
   16560:	ldr	x0, [x0, x1, lsl #3]
   16564:	cmp	x0, #0x0
   16568:	b.ne	16518 <udev_util_encode_string@@LIBUDEV_183+0xace8>  // b.any
   1656c:	ldr	x0, [x29, #80]
   16570:	add	x0, x0, #0x1
   16574:	str	x0, [x29, #96]
   16578:	ldr	x1, [x29, #96]
   1657c:	mov	x0, #0x1                   	// #1
   16580:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   16584:	and	w0, w0, #0xff
   16588:	and	x0, x0, #0xff
   1658c:	cmp	x0, #0x0
   16590:	b.eq	165bc <udev_util_encode_string@@LIBUDEV_183+0xad8c>  // b.none
   16594:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16598:	add	x1, x0, #0xcab
   1659c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   165a0:	add	x4, x0, #0x5a0
   165a4:	mov	w3, #0xf6                  	// #246
   165a8:	mov	x2, x1
   165ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   165b0:	add	x1, x0, #0xe18
   165b4:	mov	w0, #0x0                   	// #0
   165b8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   165bc:	ldr	x0, [x29, #96]
   165c0:	cmp	x0, #0x400, lsl #12
   165c4:	cset	w0, hi  // hi = pmore
   165c8:	and	w0, w0, #0xff
   165cc:	and	x0, x0, #0xff
   165d0:	cmp	x0, #0x0
   165d4:	b.eq	16600 <udev_util_encode_string@@LIBUDEV_183+0xadd0>  // b.none
   165d8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   165dc:	add	x1, x0, #0xcab
   165e0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   165e4:	add	x4, x0, #0x5a0
   165e8:	mov	w3, #0xf6                  	// #246
   165ec:	mov	x2, x1
   165f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   165f4:	add	x1, x0, #0xe48
   165f8:	mov	w0, #0x0                   	// #0
   165fc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16600:	ldr	x0, [x29, #96]
   16604:	add	x0, x0, #0xf
   16608:	lsr	x0, x0, #4
   1660c:	lsl	x0, x0, #4
   16610:	sub	sp, sp, x0
   16614:	mov	x0, sp
   16618:	add	x0, x0, #0xf
   1661c:	lsr	x0, x0, #4
   16620:	lsl	x0, x0, #4
   16624:	str	x0, [x29, #104]
   16628:	ldr	x0, [x29, #104]
   1662c:	str	x0, [x29, #72]
   16630:	str	xzr, [x29, #88]
   16634:	b	16664 <udev_util_encode_string@@LIBUDEV_183+0xae34>
   16638:	add	x0, x29, #0xc8
   1663c:	sub	x0, x0, #0x50
   16640:	ldr	x1, [x29, #88]
   16644:	ldr	x0, [x0, x1, lsl #3]
   16648:	mov	x1, x0
   1664c:	ldr	x0, [x29, #72]
   16650:	bl	51b0 <stpcpy@plt>
   16654:	str	x0, [x29, #72]
   16658:	ldr	x0, [x29, #88]
   1665c:	add	x0, x0, #0x1
   16660:	str	x0, [x29, #88]
   16664:	ldr	x0, [x29, #88]
   16668:	cmp	x0, #0x3
   1666c:	b.hi	16688 <udev_util_encode_string@@LIBUDEV_183+0xae58>  // b.pmore
   16670:	add	x0, x29, #0xc8
   16674:	sub	x0, x0, #0x50
   16678:	ldr	x1, [x29, #88]
   1667c:	ldr	x0, [x0, x1, lsl #3]
   16680:	cmp	x0, #0x0
   16684:	b.ne	16638 <udev_util_encode_string@@LIBUDEV_183+0xae08>  // b.any
   16688:	ldr	x0, [x29, #72]
   1668c:	strb	wzr, [x0]
   16690:	ldr	x0, [x29, #104]
   16694:	str	x0, [x29, #112]
   16698:	ldr	x1, [x29, #112]
   1669c:	ldr	x0, [x29, #56]
   166a0:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   166a4:	mov	w1, w0
   166a8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   166ac:	ldr	x0, [x0, #4016]
   166b0:	ldr	x2, [x29, #184]
   166b4:	ldr	x0, [x0]
   166b8:	eor	x0, x2, x0
   166bc:	cmp	x0, #0x0
   166c0:	b.eq	166c8 <udev_util_encode_string@@LIBUDEV_183+0xae98>  // b.none
   166c4:	bl	5390 <__stack_chk_fail@plt>
   166c8:	mov	w0, w1
   166cc:	mov	sp, x29
   166d0:	ldr	x19, [sp, #16]
   166d4:	ldp	x29, x30, [sp], #192
   166d8:	ret
   166dc:	mov	x12, #0x1220                	// #4640
   166e0:	sub	sp, sp, x12
   166e4:	stp	x29, x30, [sp]
   166e8:	mov	x29, sp
   166ec:	str	x0, [x29, #40]
   166f0:	str	x1, [x29, #32]
   166f4:	str	x2, [x29, #24]
   166f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   166fc:	ldr	x0, [x0, #4016]
   16700:	ldr	x1, [x0]
   16704:	str	x1, [x29, #4632]
   16708:	mov	x1, #0x0                   	// #0
   1670c:	str	xzr, [x29, #48]
   16710:	ldr	x0, [x29, #40]
   16714:	cmp	x0, #0x0
   16718:	cset	w0, ne  // ne = any
   1671c:	and	w0, w0, #0xff
   16720:	and	x0, x0, #0xff
   16724:	cmp	x0, #0x0
   16728:	b.ne	1675c <udev_util_encode_string@@LIBUDEV_183+0xaf2c>  // b.any
   1672c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16730:	add	x1, x0, #0xcab
   16734:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16738:	add	x4, x0, #0x5c0
   1673c:	mov	w3, #0xff                  	// #255
   16740:	mov	x2, x1
   16744:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16748:	add	x1, x0, #0xcd0
   1674c:	mov	w0, #0x0                   	// #0
   16750:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   16754:	mov	w0, #0x1                   	// #1
   16758:	b	16760 <udev_util_encode_string@@LIBUDEV_183+0xaf30>
   1675c:	mov	w0, #0x0                   	// #0
   16760:	cmp	w0, #0x0
   16764:	b.eq	16770 <udev_util_encode_string@@LIBUDEV_183+0xaf40>  // b.none
   16768:	mov	w0, #0xffffffea            	// #-22
   1676c:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   16770:	ldr	x0, [x29, #32]
   16774:	cmp	x0, #0x0
   16778:	cset	w0, ne  // ne = any
   1677c:	and	w0, w0, #0xff
   16780:	and	x0, x0, #0xff
   16784:	cmp	x0, #0x0
   16788:	b.ne	167bc <udev_util_encode_string@@LIBUDEV_183+0xaf8c>  // b.any
   1678c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16790:	add	x1, x0, #0xcab
   16794:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16798:	add	x4, x0, #0x5c0
   1679c:	mov	w3, #0x100                 	// #256
   167a0:	mov	x2, x1
   167a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   167a8:	add	x1, x0, #0xc90
   167ac:	mov	w0, #0x0                   	// #0
   167b0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   167b4:	mov	w0, #0x1                   	// #1
   167b8:	b	167c0 <udev_util_encode_string@@LIBUDEV_183+0xaf90>
   167bc:	mov	w0, #0x0                   	// #0
   167c0:	cmp	w0, #0x0
   167c4:	b.eq	167d0 <udev_util_encode_string@@LIBUDEV_183+0xafa0>  // b.none
   167c8:	mov	w0, #0xffffffea            	// #-22
   167cc:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   167d0:	ldr	x0, [x29, #24]
   167d4:	cmp	x0, #0x0
   167d8:	cset	w0, ne  // ne = any
   167dc:	and	w0, w0, #0xff
   167e0:	and	x0, x0, #0xff
   167e4:	cmp	x0, #0x0
   167e8:	b.ne	1681c <udev_util_encode_string@@LIBUDEV_183+0xafec>  // b.any
   167ec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   167f0:	add	x1, x0, #0xcab
   167f4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   167f8:	add	x4, x0, #0x5c0
   167fc:	mov	w3, #0x101                 	// #257
   16800:	mov	x2, x1
   16804:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16808:	add	x1, x0, #0xf18
   1680c:	mov	w0, #0x0                   	// #0
   16810:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   16814:	mov	w0, #0x1                   	// #1
   16818:	b	16820 <udev_util_encode_string@@LIBUDEV_183+0xaff0>
   1681c:	mov	w0, #0x0                   	// #0
   16820:	cmp	w0, #0x0
   16824:	b.eq	16830 <udev_util_encode_string@@LIBUDEV_183+0xb000>  // b.none
   16828:	mov	w0, #0xffffffea            	// #-22
   1682c:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   16830:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16834:	add	x1, x0, #0xc90
   16838:	ldr	x0, [x29, #32]
   1683c:	bl	5440 <strcmp@plt>
   16840:	cmp	w0, #0x0
   16844:	b.ne	16d94 <udev_util_encode_string@@LIBUDEV_183+0xb564>  // b.any
   16848:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1684c:	add	x0, x0, #0xf20
   16850:	str	x0, [x29, #504]
   16854:	ldr	x0, [x29, #24]
   16858:	str	x0, [x29, #512]
   1685c:	str	xzr, [x29, #64]
   16860:	str	xzr, [x29, #72]
   16864:	b	16898 <udev_util_encode_string@@LIBUDEV_183+0xb068>
   16868:	ldr	x0, [x29, #72]
   1686c:	lsl	x0, x0, #3
   16870:	add	x1, x29, #0x1f8
   16874:	ldr	x0, [x1, x0]
   16878:	bl	5040 <strlen@plt>
   1687c:	mov	x1, x0
   16880:	ldr	x0, [x29, #64]
   16884:	add	x0, x0, x1
   16888:	str	x0, [x29, #64]
   1688c:	ldr	x0, [x29, #72]
   16890:	add	x0, x0, #0x1
   16894:	str	x0, [x29, #72]
   16898:	ldr	x0, [x29, #72]
   1689c:	cmp	x0, #0x1
   168a0:	b.hi	168bc <udev_util_encode_string@@LIBUDEV_183+0xb08c>  // b.pmore
   168a4:	ldr	x0, [x29, #72]
   168a8:	lsl	x0, x0, #3
   168ac:	add	x1, x29, #0x1f8
   168b0:	ldr	x0, [x1, x0]
   168b4:	cmp	x0, #0x0
   168b8:	b.ne	16868 <udev_util_encode_string@@LIBUDEV_183+0xb038>  // b.any
   168bc:	ldr	x0, [x29, #64]
   168c0:	add	x0, x0, #0x1
   168c4:	str	x0, [x29, #360]
   168c8:	ldr	x1, [x29, #360]
   168cc:	mov	x0, #0x1                   	// #1
   168d0:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   168d4:	and	w0, w0, #0xff
   168d8:	and	x0, x0, #0xff
   168dc:	cmp	x0, #0x0
   168e0:	b.eq	1690c <udev_util_encode_string@@LIBUDEV_183+0xb0dc>  // b.none
   168e4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   168e8:	add	x1, x0, #0xcab
   168ec:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   168f0:	add	x4, x0, #0x5c0
   168f4:	mov	w3, #0x104                 	// #260
   168f8:	mov	x2, x1
   168fc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16900:	add	x1, x0, #0xe18
   16904:	mov	w0, #0x0                   	// #0
   16908:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1690c:	ldr	x0, [x29, #360]
   16910:	cmp	x0, #0x400, lsl #12
   16914:	cset	w0, hi  // hi = pmore
   16918:	and	w0, w0, #0xff
   1691c:	and	x0, x0, #0xff
   16920:	cmp	x0, #0x0
   16924:	b.eq	16950 <udev_util_encode_string@@LIBUDEV_183+0xb120>  // b.none
   16928:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1692c:	add	x1, x0, #0xcab
   16930:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16934:	add	x4, x0, #0x5c0
   16938:	mov	w3, #0x104                 	// #260
   1693c:	mov	x2, x1
   16940:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16944:	add	x1, x0, #0xe48
   16948:	mov	w0, #0x0                   	// #0
   1694c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16950:	ldr	x0, [x29, #360]
   16954:	add	x0, x0, #0xf
   16958:	lsr	x0, x0, #4
   1695c:	lsl	x0, x0, #4
   16960:	sub	sp, sp, x0
   16964:	mov	x0, sp
   16968:	add	x0, x0, #0xf
   1696c:	lsr	x0, x0, #4
   16970:	lsl	x0, x0, #4
   16974:	str	x0, [x29, #368]
   16978:	ldr	x0, [x29, #368]
   1697c:	str	x0, [x29, #56]
   16980:	str	xzr, [x29, #72]
   16984:	b	169b4 <udev_util_encode_string@@LIBUDEV_183+0xb184>
   16988:	ldr	x0, [x29, #72]
   1698c:	lsl	x0, x0, #3
   16990:	add	x1, x29, #0x1f8
   16994:	ldr	x0, [x1, x0]
   16998:	mov	x1, x0
   1699c:	ldr	x0, [x29, #56]
   169a0:	bl	51b0 <stpcpy@plt>
   169a4:	str	x0, [x29, #56]
   169a8:	ldr	x0, [x29, #72]
   169ac:	add	x0, x0, #0x1
   169b0:	str	x0, [x29, #72]
   169b4:	ldr	x0, [x29, #72]
   169b8:	cmp	x0, #0x1
   169bc:	b.hi	169d8 <udev_util_encode_string@@LIBUDEV_183+0xb1a8>  // b.pmore
   169c0:	ldr	x0, [x29, #72]
   169c4:	lsl	x0, x0, #3
   169c8:	add	x1, x29, #0x1f8
   169cc:	ldr	x0, [x1, x0]
   169d0:	cmp	x0, #0x0
   169d4:	b.ne	16988 <udev_util_encode_string@@LIBUDEV_183+0xb158>  // b.any
   169d8:	ldr	x0, [x29, #56]
   169dc:	strb	wzr, [x0]
   169e0:	ldr	x0, [x29, #368]
   169e4:	str	x0, [x29, #320]
   169e8:	mov	w1, #0x0                   	// #0
   169ec:	ldr	x0, [x29, #320]
   169f0:	bl	53e0 <access@plt>
   169f4:	cmp	w0, #0x0
   169f8:	b.lt	16a0c <udev_util_encode_string@@LIBUDEV_183+0xb1dc>  // b.tstop
   169fc:	ldr	x1, [x29, #320]
   16a00:	ldr	x0, [x29, #40]
   16a04:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   16a08:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   16a0c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16a10:	add	x0, x0, #0xf30
   16a14:	str	x0, [x29, #504]
   16a18:	ldr	x0, [x29, #24]
   16a1c:	str	x0, [x29, #512]
   16a20:	str	xzr, [x29, #88]
   16a24:	str	xzr, [x29, #96]
   16a28:	b	16a5c <udev_util_encode_string@@LIBUDEV_183+0xb22c>
   16a2c:	ldr	x0, [x29, #96]
   16a30:	lsl	x0, x0, #3
   16a34:	add	x1, x29, #0x1f8
   16a38:	ldr	x0, [x1, x0]
   16a3c:	bl	5040 <strlen@plt>
   16a40:	mov	x1, x0
   16a44:	ldr	x0, [x29, #88]
   16a48:	add	x0, x0, x1
   16a4c:	str	x0, [x29, #88]
   16a50:	ldr	x0, [x29, #96]
   16a54:	add	x0, x0, #0x1
   16a58:	str	x0, [x29, #96]
   16a5c:	ldr	x0, [x29, #96]
   16a60:	cmp	x0, #0x1
   16a64:	b.hi	16a80 <udev_util_encode_string@@LIBUDEV_183+0xb250>  // b.pmore
   16a68:	ldr	x0, [x29, #96]
   16a6c:	lsl	x0, x0, #3
   16a70:	add	x1, x29, #0x1f8
   16a74:	ldr	x0, [x1, x0]
   16a78:	cmp	x0, #0x0
   16a7c:	b.ne	16a2c <udev_util_encode_string@@LIBUDEV_183+0xb1fc>  // b.any
   16a80:	ldr	x0, [x29, #88]
   16a84:	add	x0, x0, #0x1
   16a88:	str	x0, [x29, #376]
   16a8c:	ldr	x1, [x29, #376]
   16a90:	mov	x0, #0x1                   	// #1
   16a94:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   16a98:	and	w0, w0, #0xff
   16a9c:	and	x0, x0, #0xff
   16aa0:	cmp	x0, #0x0
   16aa4:	b.eq	16ad0 <udev_util_encode_string@@LIBUDEV_183+0xb2a0>  // b.none
   16aa8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16aac:	add	x1, x0, #0xcab
   16ab0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16ab4:	add	x4, x0, #0x5c0
   16ab8:	mov	w3, #0x108                 	// #264
   16abc:	mov	x2, x1
   16ac0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16ac4:	add	x1, x0, #0xe18
   16ac8:	mov	w0, #0x0                   	// #0
   16acc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16ad0:	ldr	x0, [x29, #376]
   16ad4:	cmp	x0, #0x400, lsl #12
   16ad8:	cset	w0, hi  // hi = pmore
   16adc:	and	w0, w0, #0xff
   16ae0:	and	x0, x0, #0xff
   16ae4:	cmp	x0, #0x0
   16ae8:	b.eq	16b14 <udev_util_encode_string@@LIBUDEV_183+0xb2e4>  // b.none
   16aec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16af0:	add	x1, x0, #0xcab
   16af4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16af8:	add	x4, x0, #0x5c0
   16afc:	mov	w3, #0x108                 	// #264
   16b00:	mov	x2, x1
   16b04:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16b08:	add	x1, x0, #0xe48
   16b0c:	mov	w0, #0x0                   	// #0
   16b10:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16b14:	ldr	x0, [x29, #376]
   16b18:	add	x0, x0, #0xf
   16b1c:	lsr	x0, x0, #4
   16b20:	lsl	x0, x0, #4
   16b24:	sub	sp, sp, x0
   16b28:	mov	x0, sp
   16b2c:	add	x0, x0, #0xf
   16b30:	lsr	x0, x0, #4
   16b34:	lsl	x0, x0, #4
   16b38:	str	x0, [x29, #384]
   16b3c:	ldr	x0, [x29, #384]
   16b40:	str	x0, [x29, #80]
   16b44:	str	xzr, [x29, #96]
   16b48:	b	16b78 <udev_util_encode_string@@LIBUDEV_183+0xb348>
   16b4c:	ldr	x0, [x29, #96]
   16b50:	lsl	x0, x0, #3
   16b54:	add	x1, x29, #0x1f8
   16b58:	ldr	x0, [x1, x0]
   16b5c:	mov	x1, x0
   16b60:	ldr	x0, [x29, #80]
   16b64:	bl	51b0 <stpcpy@plt>
   16b68:	str	x0, [x29, #80]
   16b6c:	ldr	x0, [x29, #96]
   16b70:	add	x0, x0, #0x1
   16b74:	str	x0, [x29, #96]
   16b78:	ldr	x0, [x29, #96]
   16b7c:	cmp	x0, #0x1
   16b80:	b.hi	16b9c <udev_util_encode_string@@LIBUDEV_183+0xb36c>  // b.pmore
   16b84:	ldr	x0, [x29, #96]
   16b88:	lsl	x0, x0, #3
   16b8c:	add	x1, x29, #0x1f8
   16b90:	ldr	x0, [x1, x0]
   16b94:	cmp	x0, #0x0
   16b98:	b.ne	16b4c <udev_util_encode_string@@LIBUDEV_183+0xb31c>  // b.any
   16b9c:	ldr	x0, [x29, #80]
   16ba0:	strb	wzr, [x0]
   16ba4:	ldr	x0, [x29, #384]
   16ba8:	str	x0, [x29, #320]
   16bac:	mov	w1, #0x0                   	// #0
   16bb0:	ldr	x0, [x29, #320]
   16bb4:	bl	53e0 <access@plt>
   16bb8:	cmp	w0, #0x0
   16bbc:	b.lt	16bd0 <udev_util_encode_string@@LIBUDEV_183+0xb3a0>  // b.tstop
   16bc0:	ldr	x1, [x29, #320]
   16bc4:	ldr	x0, [x29, #40]
   16bc8:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   16bcc:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   16bd0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16bd4:	add	x0, x0, #0xf40
   16bd8:	str	x0, [x29, #504]
   16bdc:	ldr	x0, [x29, #24]
   16be0:	str	x0, [x29, #512]
   16be4:	str	xzr, [x29, #112]
   16be8:	str	xzr, [x29, #120]
   16bec:	b	16c20 <udev_util_encode_string@@LIBUDEV_183+0xb3f0>
   16bf0:	ldr	x0, [x29, #120]
   16bf4:	lsl	x0, x0, #3
   16bf8:	add	x1, x29, #0x1f8
   16bfc:	ldr	x0, [x1, x0]
   16c00:	bl	5040 <strlen@plt>
   16c04:	mov	x1, x0
   16c08:	ldr	x0, [x29, #112]
   16c0c:	add	x0, x0, x1
   16c10:	str	x0, [x29, #112]
   16c14:	ldr	x0, [x29, #120]
   16c18:	add	x0, x0, #0x1
   16c1c:	str	x0, [x29, #120]
   16c20:	ldr	x0, [x29, #120]
   16c24:	cmp	x0, #0x1
   16c28:	b.hi	16c44 <udev_util_encode_string@@LIBUDEV_183+0xb414>  // b.pmore
   16c2c:	ldr	x0, [x29, #120]
   16c30:	lsl	x0, x0, #3
   16c34:	add	x1, x29, #0x1f8
   16c38:	ldr	x0, [x1, x0]
   16c3c:	cmp	x0, #0x0
   16c40:	b.ne	16bf0 <udev_util_encode_string@@LIBUDEV_183+0xb3c0>  // b.any
   16c44:	ldr	x0, [x29, #112]
   16c48:	add	x0, x0, #0x1
   16c4c:	str	x0, [x29, #392]
   16c50:	ldr	x1, [x29, #392]
   16c54:	mov	x0, #0x1                   	// #1
   16c58:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   16c5c:	and	w0, w0, #0xff
   16c60:	and	x0, x0, #0xff
   16c64:	cmp	x0, #0x0
   16c68:	b.eq	16c94 <udev_util_encode_string@@LIBUDEV_183+0xb464>  // b.none
   16c6c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16c70:	add	x1, x0, #0xcab
   16c74:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16c78:	add	x4, x0, #0x5c0
   16c7c:	mov	w3, #0x10c                 	// #268
   16c80:	mov	x2, x1
   16c84:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16c88:	add	x1, x0, #0xe18
   16c8c:	mov	w0, #0x0                   	// #0
   16c90:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16c94:	ldr	x0, [x29, #392]
   16c98:	cmp	x0, #0x400, lsl #12
   16c9c:	cset	w0, hi  // hi = pmore
   16ca0:	and	w0, w0, #0xff
   16ca4:	and	x0, x0, #0xff
   16ca8:	cmp	x0, #0x0
   16cac:	b.eq	16cd8 <udev_util_encode_string@@LIBUDEV_183+0xb4a8>  // b.none
   16cb0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16cb4:	add	x1, x0, #0xcab
   16cb8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16cbc:	add	x4, x0, #0x5c0
   16cc0:	mov	w3, #0x10c                 	// #268
   16cc4:	mov	x2, x1
   16cc8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16ccc:	add	x1, x0, #0xe48
   16cd0:	mov	w0, #0x0                   	// #0
   16cd4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16cd8:	ldr	x0, [x29, #392]
   16cdc:	add	x0, x0, #0xf
   16ce0:	lsr	x0, x0, #4
   16ce4:	lsl	x0, x0, #4
   16ce8:	sub	sp, sp, x0
   16cec:	mov	x0, sp
   16cf0:	add	x0, x0, #0xf
   16cf4:	lsr	x0, x0, #4
   16cf8:	lsl	x0, x0, #4
   16cfc:	str	x0, [x29, #400]
   16d00:	ldr	x0, [x29, #400]
   16d04:	str	x0, [x29, #104]
   16d08:	str	xzr, [x29, #120]
   16d0c:	b	16d3c <udev_util_encode_string@@LIBUDEV_183+0xb50c>
   16d10:	ldr	x0, [x29, #120]
   16d14:	lsl	x0, x0, #3
   16d18:	add	x1, x29, #0x1f8
   16d1c:	ldr	x0, [x1, x0]
   16d20:	mov	x1, x0
   16d24:	ldr	x0, [x29, #104]
   16d28:	bl	51b0 <stpcpy@plt>
   16d2c:	str	x0, [x29, #104]
   16d30:	ldr	x0, [x29, #120]
   16d34:	add	x0, x0, #0x1
   16d38:	str	x0, [x29, #120]
   16d3c:	ldr	x0, [x29, #120]
   16d40:	cmp	x0, #0x1
   16d44:	b.hi	16d60 <udev_util_encode_string@@LIBUDEV_183+0xb530>  // b.pmore
   16d48:	ldr	x0, [x29, #120]
   16d4c:	lsl	x0, x0, #3
   16d50:	add	x1, x29, #0x1f8
   16d54:	ldr	x0, [x1, x0]
   16d58:	cmp	x0, #0x0
   16d5c:	b.ne	16d10 <udev_util_encode_string@@LIBUDEV_183+0xb4e0>  // b.any
   16d60:	ldr	x0, [x29, #104]
   16d64:	strb	wzr, [x0]
   16d68:	ldr	x0, [x29, #400]
   16d6c:	str	x0, [x29, #320]
   16d70:	mov	w1, #0x0                   	// #0
   16d74:	ldr	x0, [x29, #320]
   16d78:	bl	53e0 <access@plt>
   16d7c:	cmp	w0, #0x0
   16d80:	b.lt	173b8 <udev_util_encode_string@@LIBUDEV_183+0xbb88>  // b.tstop
   16d84:	ldr	x1, [x29, #320]
   16d88:	ldr	x0, [x29, #40]
   16d8c:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   16d90:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   16d94:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16d98:	add	x1, x0, #0xca0
   16d9c:	ldr	x0, [x29, #32]
   16da0:	bl	5440 <strcmp@plt>
   16da4:	cmp	w0, #0x0
   16da8:	b.ne	16f70 <udev_util_encode_string@@LIBUDEV_183+0xb740>  // b.any
   16dac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16db0:	add	x0, x0, #0xf50
   16db4:	str	x0, [x29, #504]
   16db8:	ldr	x0, [x29, #24]
   16dbc:	str	x0, [x29, #512]
   16dc0:	str	xzr, [x29, #136]
   16dc4:	str	xzr, [x29, #144]
   16dc8:	b	16dfc <udev_util_encode_string@@LIBUDEV_183+0xb5cc>
   16dcc:	ldr	x0, [x29, #144]
   16dd0:	lsl	x0, x0, #3
   16dd4:	add	x1, x29, #0x1f8
   16dd8:	ldr	x0, [x1, x0]
   16ddc:	bl	5040 <strlen@plt>
   16de0:	mov	x1, x0
   16de4:	ldr	x0, [x29, #136]
   16de8:	add	x0, x0, x1
   16dec:	str	x0, [x29, #136]
   16df0:	ldr	x0, [x29, #144]
   16df4:	add	x0, x0, #0x1
   16df8:	str	x0, [x29, #144]
   16dfc:	ldr	x0, [x29, #144]
   16e00:	cmp	x0, #0x1
   16e04:	b.hi	16e20 <udev_util_encode_string@@LIBUDEV_183+0xb5f0>  // b.pmore
   16e08:	ldr	x0, [x29, #144]
   16e0c:	lsl	x0, x0, #3
   16e10:	add	x1, x29, #0x1f8
   16e14:	ldr	x0, [x1, x0]
   16e18:	cmp	x0, #0x0
   16e1c:	b.ne	16dcc <udev_util_encode_string@@LIBUDEV_183+0xb59c>  // b.any
   16e20:	ldr	x0, [x29, #136]
   16e24:	add	x0, x0, #0x1
   16e28:	str	x0, [x29, #344]
   16e2c:	ldr	x1, [x29, #344]
   16e30:	mov	x0, #0x1                   	// #1
   16e34:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   16e38:	and	w0, w0, #0xff
   16e3c:	and	x0, x0, #0xff
   16e40:	cmp	x0, #0x0
   16e44:	b.eq	16e70 <udev_util_encode_string@@LIBUDEV_183+0xb640>  // b.none
   16e48:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16e4c:	add	x1, x0, #0xcab
   16e50:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16e54:	add	x4, x0, #0x5c0
   16e58:	mov	w3, #0x110                 	// #272
   16e5c:	mov	x2, x1
   16e60:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16e64:	add	x1, x0, #0xe18
   16e68:	mov	w0, #0x0                   	// #0
   16e6c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16e70:	ldr	x0, [x29, #344]
   16e74:	cmp	x0, #0x400, lsl #12
   16e78:	cset	w0, hi  // hi = pmore
   16e7c:	and	w0, w0, #0xff
   16e80:	and	x0, x0, #0xff
   16e84:	cmp	x0, #0x0
   16e88:	b.eq	16eb4 <udev_util_encode_string@@LIBUDEV_183+0xb684>  // b.none
   16e8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16e90:	add	x1, x0, #0xcab
   16e94:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   16e98:	add	x4, x0, #0x5c0
   16e9c:	mov	w3, #0x110                 	// #272
   16ea0:	mov	x2, x1
   16ea4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16ea8:	add	x1, x0, #0xe48
   16eac:	mov	w0, #0x0                   	// #0
   16eb0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   16eb4:	ldr	x0, [x29, #344]
   16eb8:	add	x0, x0, #0xf
   16ebc:	lsr	x0, x0, #4
   16ec0:	lsl	x0, x0, #4
   16ec4:	sub	sp, sp, x0
   16ec8:	mov	x0, sp
   16ecc:	add	x0, x0, #0xf
   16ed0:	lsr	x0, x0, #4
   16ed4:	lsl	x0, x0, #4
   16ed8:	str	x0, [x29, #352]
   16edc:	ldr	x0, [x29, #352]
   16ee0:	str	x0, [x29, #128]
   16ee4:	str	xzr, [x29, #144]
   16ee8:	b	16f18 <udev_util_encode_string@@LIBUDEV_183+0xb6e8>
   16eec:	ldr	x0, [x29, #144]
   16ef0:	lsl	x0, x0, #3
   16ef4:	add	x1, x29, #0x1f8
   16ef8:	ldr	x0, [x1, x0]
   16efc:	mov	x1, x0
   16f00:	ldr	x0, [x29, #128]
   16f04:	bl	51b0 <stpcpy@plt>
   16f08:	str	x0, [x29, #128]
   16f0c:	ldr	x0, [x29, #144]
   16f10:	add	x0, x0, #0x1
   16f14:	str	x0, [x29, #144]
   16f18:	ldr	x0, [x29, #144]
   16f1c:	cmp	x0, #0x1
   16f20:	b.hi	16f3c <udev_util_encode_string@@LIBUDEV_183+0xb70c>  // b.pmore
   16f24:	ldr	x0, [x29, #144]
   16f28:	lsl	x0, x0, #3
   16f2c:	add	x1, x29, #0x1f8
   16f30:	ldr	x0, [x1, x0]
   16f34:	cmp	x0, #0x0
   16f38:	b.ne	16eec <udev_util_encode_string@@LIBUDEV_183+0xb6bc>  // b.any
   16f3c:	ldr	x0, [x29, #128]
   16f40:	strb	wzr, [x0]
   16f44:	ldr	x0, [x29, #352]
   16f48:	str	x0, [x29, #320]
   16f4c:	mov	w1, #0x0                   	// #0
   16f50:	ldr	x0, [x29, #320]
   16f54:	bl	53e0 <access@plt>
   16f58:	cmp	w0, #0x0
   16f5c:	b.lt	173b8 <udev_util_encode_string@@LIBUDEV_183+0xbb88>  // b.tstop
   16f60:	ldr	x1, [x29, #320]
   16f64:	ldr	x0, [x29, #40]
   16f68:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   16f6c:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   16f70:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16f74:	add	x1, x0, #0xf60
   16f78:	ldr	x0, [x29, #32]
   16f7c:	bl	5440 <strcmp@plt>
   16f80:	cmp	w0, #0x0
   16f84:	b.ne	173b8 <udev_util_encode_string@@LIBUDEV_183+0xbb88>  // b.any
   16f88:	add	x0, x29, #0x218
   16f8c:	ldr	x2, [x29, #24]
   16f90:	mov	x1, #0x1000                	// #4096
   16f94:	bl	35078 <udev_util_encode_string@@LIBUDEV_183+0x29848>
   16f98:	add	x0, x29, #0x218
   16f9c:	mov	w1, #0x3a                  	// #58
   16fa0:	bl	5570 <strchr@plt>
   16fa4:	str	x0, [x29, #296]
   16fa8:	ldr	x0, [x29, #296]
   16fac:	cmp	x0, #0x0
   16fb0:	b.eq	173b8 <udev_util_encode_string@@LIBUDEV_183+0xbb88>  // b.none
   16fb4:	ldr	x0, [x29, #296]
   16fb8:	strb	wzr, [x0]
   16fbc:	ldr	x0, [x29, #296]
   16fc0:	add	x0, x0, #0x1
   16fc4:	str	x0, [x29, #296]
   16fc8:	add	x0, x29, #0x228
   16fcc:	sub	x0, x0, #0x30
   16fd0:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16fd4:	add	x1, x1, #0xf20
   16fd8:	str	x1, [x0]
   16fdc:	add	x0, x29, #0x228
   16fe0:	sub	x0, x0, #0x30
   16fe4:	add	x1, x29, #0x218
   16fe8:	str	x1, [x0, #8]
   16fec:	add	x0, x29, #0x228
   16ff0:	sub	x0, x0, #0x30
   16ff4:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   16ff8:	add	x1, x1, #0xf68
   16ffc:	str	x1, [x0, #16]
   17000:	add	x0, x29, #0x228
   17004:	sub	x0, x0, #0x30
   17008:	ldr	x1, [x29, #296]
   1700c:	str	x1, [x0, #24]
   17010:	str	xzr, [x29, #160]
   17014:	str	xzr, [x29, #168]
   17018:	b	1704c <udev_util_encode_string@@LIBUDEV_183+0xb81c>
   1701c:	add	x0, x29, #0x228
   17020:	sub	x0, x0, #0x30
   17024:	ldr	x1, [x29, #168]
   17028:	ldr	x0, [x0, x1, lsl #3]
   1702c:	bl	5040 <strlen@plt>
   17030:	mov	x1, x0
   17034:	ldr	x0, [x29, #160]
   17038:	add	x0, x0, x1
   1703c:	str	x0, [x29, #160]
   17040:	ldr	x0, [x29, #168]
   17044:	add	x0, x0, #0x1
   17048:	str	x0, [x29, #168]
   1704c:	ldr	x0, [x29, #168]
   17050:	cmp	x0, #0x3
   17054:	b.hi	17070 <udev_util_encode_string@@LIBUDEV_183+0xb840>  // b.pmore
   17058:	add	x0, x29, #0x228
   1705c:	sub	x0, x0, #0x30
   17060:	ldr	x1, [x29, #168]
   17064:	ldr	x0, [x0, x1, lsl #3]
   17068:	cmp	x0, #0x0
   1706c:	b.ne	1701c <udev_util_encode_string@@LIBUDEV_183+0xb7ec>  // b.any
   17070:	ldr	x0, [x29, #160]
   17074:	add	x0, x0, #0x1
   17078:	str	x0, [x29, #304]
   1707c:	ldr	x1, [x29, #304]
   17080:	mov	x0, #0x1                   	// #1
   17084:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   17088:	and	w0, w0, #0xff
   1708c:	and	x0, x0, #0xff
   17090:	cmp	x0, #0x0
   17094:	b.eq	170c0 <udev_util_encode_string@@LIBUDEV_183+0xb890>  // b.none
   17098:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1709c:	add	x1, x0, #0xcab
   170a0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   170a4:	add	x4, x0, #0x5c0
   170a8:	mov	w3, #0x11d                 	// #285
   170ac:	mov	x2, x1
   170b0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   170b4:	add	x1, x0, #0xe18
   170b8:	mov	w0, #0x0                   	// #0
   170bc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   170c0:	ldr	x0, [x29, #304]
   170c4:	cmp	x0, #0x400, lsl #12
   170c8:	cset	w0, hi  // hi = pmore
   170cc:	and	w0, w0, #0xff
   170d0:	and	x0, x0, #0xff
   170d4:	cmp	x0, #0x0
   170d8:	b.eq	17104 <udev_util_encode_string@@LIBUDEV_183+0xb8d4>  // b.none
   170dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   170e0:	add	x1, x0, #0xcab
   170e4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   170e8:	add	x4, x0, #0x5c0
   170ec:	mov	w3, #0x11d                 	// #285
   170f0:	mov	x2, x1
   170f4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   170f8:	add	x1, x0, #0xe48
   170fc:	mov	w0, #0x0                   	// #0
   17100:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17104:	ldr	x0, [x29, #304]
   17108:	add	x0, x0, #0xf
   1710c:	lsr	x0, x0, #4
   17110:	lsl	x0, x0, #4
   17114:	sub	sp, sp, x0
   17118:	mov	x0, sp
   1711c:	add	x0, x0, #0xf
   17120:	lsr	x0, x0, #4
   17124:	lsl	x0, x0, #4
   17128:	str	x0, [x29, #312]
   1712c:	ldr	x0, [x29, #312]
   17130:	str	x0, [x29, #152]
   17134:	str	xzr, [x29, #168]
   17138:	b	17168 <udev_util_encode_string@@LIBUDEV_183+0xb938>
   1713c:	add	x0, x29, #0x228
   17140:	sub	x0, x0, #0x30
   17144:	ldr	x1, [x29, #168]
   17148:	ldr	x0, [x0, x1, lsl #3]
   1714c:	mov	x1, x0
   17150:	ldr	x0, [x29, #152]
   17154:	bl	51b0 <stpcpy@plt>
   17158:	str	x0, [x29, #152]
   1715c:	ldr	x0, [x29, #168]
   17160:	add	x0, x0, #0x1
   17164:	str	x0, [x29, #168]
   17168:	ldr	x0, [x29, #168]
   1716c:	cmp	x0, #0x3
   17170:	b.hi	1718c <udev_util_encode_string@@LIBUDEV_183+0xb95c>  // b.pmore
   17174:	add	x0, x29, #0x228
   17178:	sub	x0, x0, #0x30
   1717c:	ldr	x1, [x29, #168]
   17180:	ldr	x0, [x0, x1, lsl #3]
   17184:	cmp	x0, #0x0
   17188:	b.ne	1713c <udev_util_encode_string@@LIBUDEV_183+0xb90c>  // b.any
   1718c:	ldr	x0, [x29, #152]
   17190:	strb	wzr, [x0]
   17194:	ldr	x0, [x29, #312]
   17198:	str	x0, [x29, #320]
   1719c:	mov	w1, #0x0                   	// #0
   171a0:	ldr	x0, [x29, #320]
   171a4:	bl	53e0 <access@plt>
   171a8:	cmp	w0, #0x0
   171ac:	b.lt	171c0 <udev_util_encode_string@@LIBUDEV_183+0xb990>  // b.tstop
   171b0:	ldr	x1, [x29, #320]
   171b4:	ldr	x0, [x29, #40]
   171b8:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   171bc:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   171c0:	add	x0, x29, #0x228
   171c4:	sub	x0, x0, #0x30
   171c8:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   171cc:	add	x1, x1, #0xf30
   171d0:	str	x1, [x0]
   171d4:	add	x0, x29, #0x228
   171d8:	sub	x0, x0, #0x30
   171dc:	add	x1, x29, #0x218
   171e0:	str	x1, [x0, #8]
   171e4:	add	x0, x29, #0x228
   171e8:	sub	x0, x0, #0x30
   171ec:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   171f0:	add	x1, x1, #0xf68
   171f4:	str	x1, [x0, #16]
   171f8:	add	x0, x29, #0x228
   171fc:	sub	x0, x0, #0x30
   17200:	ldr	x1, [x29, #296]
   17204:	str	x1, [x0, #24]
   17208:	str	xzr, [x29, #184]
   1720c:	str	xzr, [x29, #192]
   17210:	b	17244 <udev_util_encode_string@@LIBUDEV_183+0xba14>
   17214:	add	x0, x29, #0x228
   17218:	sub	x0, x0, #0x30
   1721c:	ldr	x1, [x29, #192]
   17220:	ldr	x0, [x0, x1, lsl #3]
   17224:	bl	5040 <strlen@plt>
   17228:	mov	x1, x0
   1722c:	ldr	x0, [x29, #184]
   17230:	add	x0, x0, x1
   17234:	str	x0, [x29, #184]
   17238:	ldr	x0, [x29, #192]
   1723c:	add	x0, x0, #0x1
   17240:	str	x0, [x29, #192]
   17244:	ldr	x0, [x29, #192]
   17248:	cmp	x0, #0x3
   1724c:	b.hi	17268 <udev_util_encode_string@@LIBUDEV_183+0xba38>  // b.pmore
   17250:	add	x0, x29, #0x228
   17254:	sub	x0, x0, #0x30
   17258:	ldr	x1, [x29, #192]
   1725c:	ldr	x0, [x0, x1, lsl #3]
   17260:	cmp	x0, #0x0
   17264:	b.ne	17214 <udev_util_encode_string@@LIBUDEV_183+0xb9e4>  // b.any
   17268:	ldr	x0, [x29, #184]
   1726c:	add	x0, x0, #0x1
   17270:	str	x0, [x29, #328]
   17274:	ldr	x1, [x29, #328]
   17278:	mov	x0, #0x1                   	// #1
   1727c:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   17280:	and	w0, w0, #0xff
   17284:	and	x0, x0, #0xff
   17288:	cmp	x0, #0x0
   1728c:	b.eq	172b8 <udev_util_encode_string@@LIBUDEV_183+0xba88>  // b.none
   17290:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17294:	add	x1, x0, #0xcab
   17298:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1729c:	add	x4, x0, #0x5c0
   172a0:	mov	w3, #0x121                 	// #289
   172a4:	mov	x2, x1
   172a8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   172ac:	add	x1, x0, #0xe18
   172b0:	mov	w0, #0x0                   	// #0
   172b4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   172b8:	ldr	x0, [x29, #328]
   172bc:	cmp	x0, #0x400, lsl #12
   172c0:	cset	w0, hi  // hi = pmore
   172c4:	and	w0, w0, #0xff
   172c8:	and	x0, x0, #0xff
   172cc:	cmp	x0, #0x0
   172d0:	b.eq	172fc <udev_util_encode_string@@LIBUDEV_183+0xbacc>  // b.none
   172d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   172d8:	add	x1, x0, #0xcab
   172dc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   172e0:	add	x4, x0, #0x5c0
   172e4:	mov	w3, #0x121                 	// #289
   172e8:	mov	x2, x1
   172ec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   172f0:	add	x1, x0, #0xe48
   172f4:	mov	w0, #0x0                   	// #0
   172f8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   172fc:	ldr	x0, [x29, #328]
   17300:	add	x0, x0, #0xf
   17304:	lsr	x0, x0, #4
   17308:	lsl	x0, x0, #4
   1730c:	sub	sp, sp, x0
   17310:	mov	x0, sp
   17314:	add	x0, x0, #0xf
   17318:	lsr	x0, x0, #4
   1731c:	lsl	x0, x0, #4
   17320:	str	x0, [x29, #336]
   17324:	ldr	x0, [x29, #336]
   17328:	str	x0, [x29, #176]
   1732c:	str	xzr, [x29, #192]
   17330:	b	17360 <udev_util_encode_string@@LIBUDEV_183+0xbb30>
   17334:	add	x0, x29, #0x228
   17338:	sub	x0, x0, #0x30
   1733c:	ldr	x1, [x29, #192]
   17340:	ldr	x0, [x0, x1, lsl #3]
   17344:	mov	x1, x0
   17348:	ldr	x0, [x29, #176]
   1734c:	bl	51b0 <stpcpy@plt>
   17350:	str	x0, [x29, #176]
   17354:	ldr	x0, [x29, #192]
   17358:	add	x0, x0, #0x1
   1735c:	str	x0, [x29, #192]
   17360:	ldr	x0, [x29, #192]
   17364:	cmp	x0, #0x3
   17368:	b.hi	17384 <udev_util_encode_string@@LIBUDEV_183+0xbb54>  // b.pmore
   1736c:	add	x0, x29, #0x228
   17370:	sub	x0, x0, #0x30
   17374:	ldr	x1, [x29, #192]
   17378:	ldr	x0, [x0, x1, lsl #3]
   1737c:	cmp	x0, #0x0
   17380:	b.ne	17334 <udev_util_encode_string@@LIBUDEV_183+0xbb04>  // b.any
   17384:	ldr	x0, [x29, #176]
   17388:	strb	wzr, [x0]
   1738c:	ldr	x0, [x29, #336]
   17390:	str	x0, [x29, #320]
   17394:	mov	w1, #0x0                   	// #0
   17398:	ldr	x0, [x29, #320]
   1739c:	bl	53e0 <access@plt>
   173a0:	cmp	w0, #0x0
   173a4:	b.lt	173b8 <udev_util_encode_string@@LIBUDEV_183+0xbb88>  // b.tstop
   173a8:	ldr	x1, [x29, #320]
   173ac:	ldr	x0, [x29, #40]
   173b0:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   173b4:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   173b8:	ldr	x0, [x29, #24]
   173bc:	str	x0, [x29, #408]
   173c0:	ldr	x0, [x29, #408]
   173c4:	bl	5040 <strlen@plt>
   173c8:	add	x0, x0, #0x1
   173cc:	str	x0, [x29, #416]
   173d0:	ldr	x0, [x29, #416]
   173d4:	add	x0, x0, #0xf
   173d8:	lsr	x0, x0, #4
   173dc:	lsl	x0, x0, #4
   173e0:	sub	sp, sp, x0
   173e4:	mov	x0, sp
   173e8:	add	x0, x0, #0xf
   173ec:	lsr	x0, x0, #4
   173f0:	lsl	x0, x0, #4
   173f4:	str	x0, [x29, #424]
   173f8:	ldr	x2, [x29, #416]
   173fc:	ldr	x1, [x29, #408]
   17400:	ldr	x0, [x29, #424]
   17404:	bl	5010 <memcpy@plt>
   17408:	str	x0, [x29, #432]
   1740c:	b	17448 <udev_util_encode_string@@LIBUDEV_183+0xbc18>
   17410:	ldr	x1, [x29, #432]
   17414:	ldr	x0, [x29, #48]
   17418:	add	x0, x1, x0
   1741c:	ldrb	w0, [x0]
   17420:	cmp	w0, #0x2f
   17424:	b.ne	1743c <udev_util_encode_string@@LIBUDEV_183+0xbc0c>  // b.any
   17428:	ldr	x1, [x29, #432]
   1742c:	ldr	x0, [x29, #48]
   17430:	add	x0, x1, x0
   17434:	mov	w1, #0x21                  	// #33
   17438:	strb	w1, [x0]
   1743c:	ldr	x0, [x29, #48]
   17440:	add	x0, x0, #0x1
   17444:	str	x0, [x29, #48]
   17448:	ldr	x1, [x29, #432]
   1744c:	ldr	x0, [x29, #48]
   17450:	add	x0, x1, x0
   17454:	ldrb	w0, [x0]
   17458:	cmp	w0, #0x0
   1745c:	b.ne	17410 <udev_util_encode_string@@LIBUDEV_183+0xbbe0>  // b.any
   17460:	add	x0, x29, #0x228
   17464:	sub	x0, x0, #0x30
   17468:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1746c:	add	x1, x1, #0xf20
   17470:	str	x1, [x0]
   17474:	add	x0, x29, #0x228
   17478:	sub	x0, x0, #0x30
   1747c:	ldr	x1, [x29, #32]
   17480:	str	x1, [x0, #8]
   17484:	add	x0, x29, #0x228
   17488:	sub	x0, x0, #0x30
   1748c:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17490:	add	x1, x1, #0xf78
   17494:	str	x1, [x0, #16]
   17498:	add	x0, x29, #0x228
   1749c:	sub	x0, x0, #0x30
   174a0:	ldr	x1, [x29, #432]
   174a4:	str	x1, [x0, #24]
   174a8:	str	xzr, [x29, #208]
   174ac:	str	xzr, [x29, #216]
   174b0:	b	174e4 <udev_util_encode_string@@LIBUDEV_183+0xbcb4>
   174b4:	add	x0, x29, #0x228
   174b8:	sub	x0, x0, #0x30
   174bc:	ldr	x1, [x29, #216]
   174c0:	ldr	x0, [x0, x1, lsl #3]
   174c4:	bl	5040 <strlen@plt>
   174c8:	mov	x1, x0
   174cc:	ldr	x0, [x29, #208]
   174d0:	add	x0, x0, x1
   174d4:	str	x0, [x29, #208]
   174d8:	ldr	x0, [x29, #216]
   174dc:	add	x0, x0, #0x1
   174e0:	str	x0, [x29, #216]
   174e4:	ldr	x0, [x29, #216]
   174e8:	cmp	x0, #0x3
   174ec:	b.hi	17508 <udev_util_encode_string@@LIBUDEV_183+0xbcd8>  // b.pmore
   174f0:	add	x0, x29, #0x228
   174f4:	sub	x0, x0, #0x30
   174f8:	ldr	x1, [x29, #216]
   174fc:	ldr	x0, [x0, x1, lsl #3]
   17500:	cmp	x0, #0x0
   17504:	b.ne	174b4 <udev_util_encode_string@@LIBUDEV_183+0xbc84>  // b.any
   17508:	ldr	x0, [x29, #208]
   1750c:	add	x0, x0, #0x1
   17510:	str	x0, [x29, #440]
   17514:	ldr	x1, [x29, #440]
   17518:	mov	x0, #0x1                   	// #1
   1751c:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   17520:	and	w0, w0, #0xff
   17524:	and	x0, x0, #0xff
   17528:	cmp	x0, #0x0
   1752c:	b.eq	17558 <udev_util_encode_string@@LIBUDEV_183+0xbd28>  // b.none
   17530:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17534:	add	x1, x0, #0xcab
   17538:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1753c:	add	x4, x0, #0x5c0
   17540:	mov	w3, #0x130                 	// #304
   17544:	mov	x2, x1
   17548:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1754c:	add	x1, x0, #0xe18
   17550:	mov	w0, #0x0                   	// #0
   17554:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17558:	ldr	x0, [x29, #440]
   1755c:	cmp	x0, #0x400, lsl #12
   17560:	cset	w0, hi  // hi = pmore
   17564:	and	w0, w0, #0xff
   17568:	and	x0, x0, #0xff
   1756c:	cmp	x0, #0x0
   17570:	b.eq	1759c <udev_util_encode_string@@LIBUDEV_183+0xbd6c>  // b.none
   17574:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17578:	add	x1, x0, #0xcab
   1757c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17580:	add	x4, x0, #0x5c0
   17584:	mov	w3, #0x130                 	// #304
   17588:	mov	x2, x1
   1758c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17590:	add	x1, x0, #0xe48
   17594:	mov	w0, #0x0                   	// #0
   17598:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1759c:	ldr	x0, [x29, #440]
   175a0:	add	x0, x0, #0xf
   175a4:	lsr	x0, x0, #4
   175a8:	lsl	x0, x0, #4
   175ac:	sub	sp, sp, x0
   175b0:	mov	x0, sp
   175b4:	add	x0, x0, #0xf
   175b8:	lsr	x0, x0, #4
   175bc:	lsl	x0, x0, #4
   175c0:	str	x0, [x29, #448]
   175c4:	ldr	x0, [x29, #448]
   175c8:	str	x0, [x29, #200]
   175cc:	str	xzr, [x29, #216]
   175d0:	b	17600 <udev_util_encode_string@@LIBUDEV_183+0xbdd0>
   175d4:	add	x0, x29, #0x228
   175d8:	sub	x0, x0, #0x30
   175dc:	ldr	x1, [x29, #216]
   175e0:	ldr	x0, [x0, x1, lsl #3]
   175e4:	mov	x1, x0
   175e8:	ldr	x0, [x29, #200]
   175ec:	bl	51b0 <stpcpy@plt>
   175f0:	str	x0, [x29, #200]
   175f4:	ldr	x0, [x29, #216]
   175f8:	add	x0, x0, #0x1
   175fc:	str	x0, [x29, #216]
   17600:	ldr	x0, [x29, #216]
   17604:	cmp	x0, #0x3
   17608:	b.hi	17624 <udev_util_encode_string@@LIBUDEV_183+0xbdf4>  // b.pmore
   1760c:	add	x0, x29, #0x228
   17610:	sub	x0, x0, #0x30
   17614:	ldr	x1, [x29, #216]
   17618:	ldr	x0, [x0, x1, lsl #3]
   1761c:	cmp	x0, #0x0
   17620:	b.ne	175d4 <udev_util_encode_string@@LIBUDEV_183+0xbda4>  // b.any
   17624:	ldr	x0, [x29, #200]
   17628:	strb	wzr, [x0]
   1762c:	ldr	x0, [x29, #448]
   17630:	str	x0, [x29, #320]
   17634:	mov	w1, #0x0                   	// #0
   17638:	ldr	x0, [x29, #320]
   1763c:	bl	53e0 <access@plt>
   17640:	cmp	w0, #0x0
   17644:	b.lt	17658 <udev_util_encode_string@@LIBUDEV_183+0xbe28>  // b.tstop
   17648:	ldr	x1, [x29, #320]
   1764c:	ldr	x0, [x29, #40]
   17650:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   17654:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   17658:	add	x0, x29, #0x228
   1765c:	sub	x0, x0, #0x30
   17660:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17664:	add	x1, x1, #0xf30
   17668:	str	x1, [x0]
   1766c:	add	x0, x29, #0x228
   17670:	sub	x0, x0, #0x30
   17674:	ldr	x1, [x29, #32]
   17678:	str	x1, [x0, #8]
   1767c:	add	x0, x29, #0x228
   17680:	sub	x0, x0, #0x30
   17684:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17688:	add	x1, x1, #0xf78
   1768c:	str	x1, [x0, #16]
   17690:	add	x0, x29, #0x228
   17694:	sub	x0, x0, #0x30
   17698:	ldr	x1, [x29, #432]
   1769c:	str	x1, [x0, #24]
   176a0:	str	xzr, [x29, #232]
   176a4:	str	xzr, [x29, #240]
   176a8:	b	176dc <udev_util_encode_string@@LIBUDEV_183+0xbeac>
   176ac:	add	x0, x29, #0x228
   176b0:	sub	x0, x0, #0x30
   176b4:	ldr	x1, [x29, #240]
   176b8:	ldr	x0, [x0, x1, lsl #3]
   176bc:	bl	5040 <strlen@plt>
   176c0:	mov	x1, x0
   176c4:	ldr	x0, [x29, #232]
   176c8:	add	x0, x0, x1
   176cc:	str	x0, [x29, #232]
   176d0:	ldr	x0, [x29, #240]
   176d4:	add	x0, x0, #0x1
   176d8:	str	x0, [x29, #240]
   176dc:	ldr	x0, [x29, #240]
   176e0:	cmp	x0, #0x3
   176e4:	b.hi	17700 <udev_util_encode_string@@LIBUDEV_183+0xbed0>  // b.pmore
   176e8:	add	x0, x29, #0x228
   176ec:	sub	x0, x0, #0x30
   176f0:	ldr	x1, [x29, #240]
   176f4:	ldr	x0, [x0, x1, lsl #3]
   176f8:	cmp	x0, #0x0
   176fc:	b.ne	176ac <udev_util_encode_string@@LIBUDEV_183+0xbe7c>  // b.any
   17700:	ldr	x0, [x29, #232]
   17704:	add	x0, x0, #0x1
   17708:	str	x0, [x29, #456]
   1770c:	ldr	x1, [x29, #456]
   17710:	mov	x0, #0x1                   	// #1
   17714:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   17718:	and	w0, w0, #0xff
   1771c:	and	x0, x0, #0xff
   17720:	cmp	x0, #0x0
   17724:	b.eq	17750 <udev_util_encode_string@@LIBUDEV_183+0xbf20>  // b.none
   17728:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1772c:	add	x1, x0, #0xcab
   17730:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17734:	add	x4, x0, #0x5c0
   17738:	mov	w3, #0x134                 	// #308
   1773c:	mov	x2, x1
   17740:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17744:	add	x1, x0, #0xe18
   17748:	mov	w0, #0x0                   	// #0
   1774c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17750:	ldr	x0, [x29, #456]
   17754:	cmp	x0, #0x400, lsl #12
   17758:	cset	w0, hi  // hi = pmore
   1775c:	and	w0, w0, #0xff
   17760:	and	x0, x0, #0xff
   17764:	cmp	x0, #0x0
   17768:	b.eq	17794 <udev_util_encode_string@@LIBUDEV_183+0xbf64>  // b.none
   1776c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17770:	add	x1, x0, #0xcab
   17774:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17778:	add	x4, x0, #0x5c0
   1777c:	mov	w3, #0x134                 	// #308
   17780:	mov	x2, x1
   17784:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17788:	add	x1, x0, #0xe48
   1778c:	mov	w0, #0x0                   	// #0
   17790:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17794:	ldr	x0, [x29, #456]
   17798:	add	x0, x0, #0xf
   1779c:	lsr	x0, x0, #4
   177a0:	lsl	x0, x0, #4
   177a4:	sub	sp, sp, x0
   177a8:	mov	x0, sp
   177ac:	add	x0, x0, #0xf
   177b0:	lsr	x0, x0, #4
   177b4:	lsl	x0, x0, #4
   177b8:	str	x0, [x29, #464]
   177bc:	ldr	x0, [x29, #464]
   177c0:	str	x0, [x29, #224]
   177c4:	str	xzr, [x29, #240]
   177c8:	b	177f8 <udev_util_encode_string@@LIBUDEV_183+0xbfc8>
   177cc:	add	x0, x29, #0x228
   177d0:	sub	x0, x0, #0x30
   177d4:	ldr	x1, [x29, #240]
   177d8:	ldr	x0, [x0, x1, lsl #3]
   177dc:	mov	x1, x0
   177e0:	ldr	x0, [x29, #224]
   177e4:	bl	51b0 <stpcpy@plt>
   177e8:	str	x0, [x29, #224]
   177ec:	ldr	x0, [x29, #240]
   177f0:	add	x0, x0, #0x1
   177f4:	str	x0, [x29, #240]
   177f8:	ldr	x0, [x29, #240]
   177fc:	cmp	x0, #0x3
   17800:	b.hi	1781c <udev_util_encode_string@@LIBUDEV_183+0xbfec>  // b.pmore
   17804:	add	x0, x29, #0x228
   17808:	sub	x0, x0, #0x30
   1780c:	ldr	x1, [x29, #240]
   17810:	ldr	x0, [x0, x1, lsl #3]
   17814:	cmp	x0, #0x0
   17818:	b.ne	177cc <udev_util_encode_string@@LIBUDEV_183+0xbf9c>  // b.any
   1781c:	ldr	x0, [x29, #224]
   17820:	strb	wzr, [x0]
   17824:	ldr	x0, [x29, #464]
   17828:	str	x0, [x29, #320]
   1782c:	mov	w1, #0x0                   	// #0
   17830:	ldr	x0, [x29, #320]
   17834:	bl	53e0 <access@plt>
   17838:	cmp	w0, #0x0
   1783c:	b.lt	17850 <udev_util_encode_string@@LIBUDEV_183+0xc020>  // b.tstop
   17840:	ldr	x1, [x29, #320]
   17844:	ldr	x0, [x29, #40]
   17848:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   1784c:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   17850:	add	x0, x29, #0x228
   17854:	sub	x0, x0, #0x30
   17858:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1785c:	add	x1, x1, #0xf40
   17860:	str	x1, [x0]
   17864:	add	x0, x29, #0x228
   17868:	sub	x0, x0, #0x30
   1786c:	ldr	x1, [x29, #32]
   17870:	str	x1, [x0, #8]
   17874:	add	x0, x29, #0x228
   17878:	sub	x0, x0, #0x30
   1787c:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17880:	add	x1, x1, #0xf10
   17884:	str	x1, [x0, #16]
   17888:	add	x0, x29, #0x228
   1788c:	sub	x0, x0, #0x30
   17890:	ldr	x1, [x29, #432]
   17894:	str	x1, [x0, #24]
   17898:	str	xzr, [x29, #256]
   1789c:	str	xzr, [x29, #264]
   178a0:	b	178d4 <udev_util_encode_string@@LIBUDEV_183+0xc0a4>
   178a4:	add	x0, x29, #0x228
   178a8:	sub	x0, x0, #0x30
   178ac:	ldr	x1, [x29, #264]
   178b0:	ldr	x0, [x0, x1, lsl #3]
   178b4:	bl	5040 <strlen@plt>
   178b8:	mov	x1, x0
   178bc:	ldr	x0, [x29, #256]
   178c0:	add	x0, x0, x1
   178c4:	str	x0, [x29, #256]
   178c8:	ldr	x0, [x29, #264]
   178cc:	add	x0, x0, #0x1
   178d0:	str	x0, [x29, #264]
   178d4:	ldr	x0, [x29, #264]
   178d8:	cmp	x0, #0x3
   178dc:	b.hi	178f8 <udev_util_encode_string@@LIBUDEV_183+0xc0c8>  // b.pmore
   178e0:	add	x0, x29, #0x228
   178e4:	sub	x0, x0, #0x30
   178e8:	ldr	x1, [x29, #264]
   178ec:	ldr	x0, [x0, x1, lsl #3]
   178f0:	cmp	x0, #0x0
   178f4:	b.ne	178a4 <udev_util_encode_string@@LIBUDEV_183+0xc074>  // b.any
   178f8:	ldr	x0, [x29, #256]
   178fc:	add	x0, x0, #0x1
   17900:	str	x0, [x29, #472]
   17904:	ldr	x1, [x29, #472]
   17908:	mov	x0, #0x1                   	// #1
   1790c:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   17910:	and	w0, w0, #0xff
   17914:	and	x0, x0, #0xff
   17918:	cmp	x0, #0x0
   1791c:	b.eq	17948 <udev_util_encode_string@@LIBUDEV_183+0xc118>  // b.none
   17920:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17924:	add	x1, x0, #0xcab
   17928:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1792c:	add	x4, x0, #0x5c0
   17930:	mov	w3, #0x138                 	// #312
   17934:	mov	x2, x1
   17938:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1793c:	add	x1, x0, #0xe18
   17940:	mov	w0, #0x0                   	// #0
   17944:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17948:	ldr	x0, [x29, #472]
   1794c:	cmp	x0, #0x400, lsl #12
   17950:	cset	w0, hi  // hi = pmore
   17954:	and	w0, w0, #0xff
   17958:	and	x0, x0, #0xff
   1795c:	cmp	x0, #0x0
   17960:	b.eq	1798c <udev_util_encode_string@@LIBUDEV_183+0xc15c>  // b.none
   17964:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17968:	add	x1, x0, #0xcab
   1796c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17970:	add	x4, x0, #0x5c0
   17974:	mov	w3, #0x138                 	// #312
   17978:	mov	x2, x1
   1797c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17980:	add	x1, x0, #0xe48
   17984:	mov	w0, #0x0                   	// #0
   17988:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1798c:	ldr	x0, [x29, #472]
   17990:	add	x0, x0, #0xf
   17994:	lsr	x0, x0, #4
   17998:	lsl	x0, x0, #4
   1799c:	sub	sp, sp, x0
   179a0:	mov	x0, sp
   179a4:	add	x0, x0, #0xf
   179a8:	lsr	x0, x0, #4
   179ac:	lsl	x0, x0, #4
   179b0:	str	x0, [x29, #480]
   179b4:	ldr	x0, [x29, #480]
   179b8:	str	x0, [x29, #248]
   179bc:	str	xzr, [x29, #264]
   179c0:	b	179f0 <udev_util_encode_string@@LIBUDEV_183+0xc1c0>
   179c4:	add	x0, x29, #0x228
   179c8:	sub	x0, x0, #0x30
   179cc:	ldr	x1, [x29, #264]
   179d0:	ldr	x0, [x0, x1, lsl #3]
   179d4:	mov	x1, x0
   179d8:	ldr	x0, [x29, #248]
   179dc:	bl	51b0 <stpcpy@plt>
   179e0:	str	x0, [x29, #248]
   179e4:	ldr	x0, [x29, #264]
   179e8:	add	x0, x0, #0x1
   179ec:	str	x0, [x29, #264]
   179f0:	ldr	x0, [x29, #264]
   179f4:	cmp	x0, #0x3
   179f8:	b.hi	17a14 <udev_util_encode_string@@LIBUDEV_183+0xc1e4>  // b.pmore
   179fc:	add	x0, x29, #0x228
   17a00:	sub	x0, x0, #0x30
   17a04:	ldr	x1, [x29, #264]
   17a08:	ldr	x0, [x0, x1, lsl #3]
   17a0c:	cmp	x0, #0x0
   17a10:	b.ne	179c4 <udev_util_encode_string@@LIBUDEV_183+0xc194>  // b.any
   17a14:	ldr	x0, [x29, #248]
   17a18:	strb	wzr, [x0]
   17a1c:	ldr	x0, [x29, #480]
   17a20:	str	x0, [x29, #320]
   17a24:	mov	w1, #0x0                   	// #0
   17a28:	ldr	x0, [x29, #320]
   17a2c:	bl	53e0 <access@plt>
   17a30:	cmp	w0, #0x0
   17a34:	b.lt	17a48 <udev_util_encode_string@@LIBUDEV_183+0xc218>  // b.tstop
   17a38:	ldr	x1, [x29, #320]
   17a3c:	ldr	x0, [x29, #40]
   17a40:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   17a44:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   17a48:	add	x0, x29, #0x228
   17a4c:	sub	x0, x0, #0x30
   17a50:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17a54:	add	x1, x1, #0xf88
   17a58:	str	x1, [x0]
   17a5c:	add	x0, x29, #0x228
   17a60:	sub	x0, x0, #0x30
   17a64:	ldr	x1, [x29, #32]
   17a68:	str	x1, [x0, #8]
   17a6c:	add	x0, x29, #0x228
   17a70:	sub	x0, x0, #0x30
   17a74:	adrp	x1, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17a78:	add	x1, x1, #0xf10
   17a7c:	str	x1, [x0, #16]
   17a80:	add	x0, x29, #0x228
   17a84:	sub	x0, x0, #0x30
   17a88:	ldr	x1, [x29, #24]
   17a8c:	str	x1, [x0, #24]
   17a90:	str	xzr, [x29, #280]
   17a94:	str	xzr, [x29, #288]
   17a98:	b	17acc <udev_util_encode_string@@LIBUDEV_183+0xc29c>
   17a9c:	add	x0, x29, #0x228
   17aa0:	sub	x0, x0, #0x30
   17aa4:	ldr	x1, [x29, #288]
   17aa8:	ldr	x0, [x0, x1, lsl #3]
   17aac:	bl	5040 <strlen@plt>
   17ab0:	mov	x1, x0
   17ab4:	ldr	x0, [x29, #280]
   17ab8:	add	x0, x0, x1
   17abc:	str	x0, [x29, #280]
   17ac0:	ldr	x0, [x29, #288]
   17ac4:	add	x0, x0, #0x1
   17ac8:	str	x0, [x29, #288]
   17acc:	ldr	x0, [x29, #288]
   17ad0:	cmp	x0, #0x3
   17ad4:	b.hi	17af0 <udev_util_encode_string@@LIBUDEV_183+0xc2c0>  // b.pmore
   17ad8:	add	x0, x29, #0x228
   17adc:	sub	x0, x0, #0x30
   17ae0:	ldr	x1, [x29, #288]
   17ae4:	ldr	x0, [x0, x1, lsl #3]
   17ae8:	cmp	x0, #0x0
   17aec:	b.ne	17a9c <udev_util_encode_string@@LIBUDEV_183+0xc26c>  // b.any
   17af0:	ldr	x0, [x29, #280]
   17af4:	add	x0, x0, #0x1
   17af8:	str	x0, [x29, #488]
   17afc:	ldr	x1, [x29, #488]
   17b00:	mov	x0, #0x1                   	// #1
   17b04:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   17b08:	and	w0, w0, #0xff
   17b0c:	and	x0, x0, #0xff
   17b10:	cmp	x0, #0x0
   17b14:	b.eq	17b40 <udev_util_encode_string@@LIBUDEV_183+0xc310>  // b.none
   17b18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17b1c:	add	x1, x0, #0xcab
   17b20:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17b24:	add	x4, x0, #0x5c0
   17b28:	mov	w3, #0x13c                 	// #316
   17b2c:	mov	x2, x1
   17b30:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17b34:	add	x1, x0, #0xe18
   17b38:	mov	w0, #0x0                   	// #0
   17b3c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17b40:	ldr	x0, [x29, #488]
   17b44:	cmp	x0, #0x400, lsl #12
   17b48:	cset	w0, hi  // hi = pmore
   17b4c:	and	w0, w0, #0xff
   17b50:	and	x0, x0, #0xff
   17b54:	cmp	x0, #0x0
   17b58:	b.eq	17b84 <udev_util_encode_string@@LIBUDEV_183+0xc354>  // b.none
   17b5c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17b60:	add	x1, x0, #0xcab
   17b64:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17b68:	add	x4, x0, #0x5c0
   17b6c:	mov	w3, #0x13c                 	// #316
   17b70:	mov	x2, x1
   17b74:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17b78:	add	x1, x0, #0xe48
   17b7c:	mov	w0, #0x0                   	// #0
   17b80:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17b84:	ldr	x0, [x29, #488]
   17b88:	add	x0, x0, #0xf
   17b8c:	lsr	x0, x0, #4
   17b90:	lsl	x0, x0, #4
   17b94:	sub	sp, sp, x0
   17b98:	mov	x0, sp
   17b9c:	add	x0, x0, #0xf
   17ba0:	lsr	x0, x0, #4
   17ba4:	lsl	x0, x0, #4
   17ba8:	str	x0, [x29, #496]
   17bac:	ldr	x0, [x29, #496]
   17bb0:	str	x0, [x29, #272]
   17bb4:	str	xzr, [x29, #288]
   17bb8:	b	17be8 <udev_util_encode_string@@LIBUDEV_183+0xc3b8>
   17bbc:	add	x0, x29, #0x228
   17bc0:	sub	x0, x0, #0x30
   17bc4:	ldr	x1, [x29, #288]
   17bc8:	ldr	x0, [x0, x1, lsl #3]
   17bcc:	mov	x1, x0
   17bd0:	ldr	x0, [x29, #272]
   17bd4:	bl	51b0 <stpcpy@plt>
   17bd8:	str	x0, [x29, #272]
   17bdc:	ldr	x0, [x29, #288]
   17be0:	add	x0, x0, #0x1
   17be4:	str	x0, [x29, #288]
   17be8:	ldr	x0, [x29, #288]
   17bec:	cmp	x0, #0x3
   17bf0:	b.hi	17c0c <udev_util_encode_string@@LIBUDEV_183+0xc3dc>  // b.pmore
   17bf4:	add	x0, x29, #0x228
   17bf8:	sub	x0, x0, #0x30
   17bfc:	ldr	x1, [x29, #288]
   17c00:	ldr	x0, [x0, x1, lsl #3]
   17c04:	cmp	x0, #0x0
   17c08:	b.ne	17bbc <udev_util_encode_string@@LIBUDEV_183+0xc38c>  // b.any
   17c0c:	ldr	x0, [x29, #272]
   17c10:	strb	wzr, [x0]
   17c14:	ldr	x0, [x29, #496]
   17c18:	str	x0, [x29, #320]
   17c1c:	mov	w1, #0x0                   	// #0
   17c20:	ldr	x0, [x29, #320]
   17c24:	bl	53e0 <access@plt>
   17c28:	cmp	w0, #0x0
   17c2c:	b.lt	17c40 <udev_util_encode_string@@LIBUDEV_183+0xc410>  // b.tstop
   17c30:	ldr	x1, [x29, #320]
   17c34:	ldr	x0, [x29, #40]
   17c38:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   17c3c:	b	17c44 <udev_util_encode_string@@LIBUDEV_183+0xc414>
   17c40:	mov	w0, #0xffffffed            	// #-19
   17c44:	mov	w1, w0
   17c48:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   17c4c:	ldr	x0, [x0, #4016]
   17c50:	ldr	x2, [x29, #4632]
   17c54:	ldr	x0, [x0]
   17c58:	eor	x0, x2, x0
   17c5c:	cmp	x0, #0x0
   17c60:	b.eq	17c68 <udev_util_encode_string@@LIBUDEV_183+0xc438>  // b.none
   17c64:	bl	5390 <__stack_chk_fail@plt>
   17c68:	mov	w0, w1
   17c6c:	mov	sp, x29
   17c70:	ldp	x29, x30, [sp]
   17c74:	mov	x12, #0x1220                	// #4640
   17c78:	add	sp, sp, x12
   17c7c:	ret
   17c80:	stp	x29, x30, [sp, #-80]!
   17c84:	mov	x29, sp
   17c88:	str	x19, [sp, #16]
   17c8c:	str	x0, [sp, #40]
   17c90:	str	x1, [sp, #32]
   17c94:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   17c98:	ldr	x0, [x0, #4016]
   17c9c:	ldr	x1, [x0]
   17ca0:	str	x1, [sp, #72]
   17ca4:	mov	x1, #0x0                   	// #0
   17ca8:	str	xzr, [sp, #64]
   17cac:	ldr	x0, [sp, #40]
   17cb0:	cmp	x0, #0x0
   17cb4:	cset	w0, eq  // eq = none
   17cb8:	and	w0, w0, #0xff
   17cbc:	and	x0, x0, #0xff
   17cc0:	cmp	x0, #0x0
   17cc4:	b.eq	17cf0 <udev_util_encode_string@@LIBUDEV_183+0xc4c0>  // b.none
   17cc8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17ccc:	add	x1, x0, #0xcab
   17cd0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17cd4:	add	x4, x0, #0x5e8
   17cd8:	mov	w3, #0x147                 	// #327
   17cdc:	mov	x2, x1
   17ce0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17ce4:	add	x1, x0, #0xcd8
   17ce8:	mov	w0, #0x0                   	// #0
   17cec:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17cf0:	ldr	x0, [sp, #32]
   17cf4:	cmp	x0, #0x0
   17cf8:	cset	w0, eq  // eq = none
   17cfc:	and	w0, w0, #0xff
   17d00:	and	x0, x0, #0xff
   17d04:	cmp	x0, #0x0
   17d08:	b.eq	17d34 <udev_util_encode_string@@LIBUDEV_183+0xc504>  // b.none
   17d0c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17d10:	add	x1, x0, #0xcab
   17d14:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17d18:	add	x4, x0, #0x5e8
   17d1c:	mov	w3, #0x148                 	// #328
   17d20:	mov	x2, x1
   17d24:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17d28:	add	x1, x0, #0xf98
   17d2c:	mov	w0, #0x0                   	// #0
   17d30:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17d34:	ldr	x0, [sp, #32]
   17d38:	bl	5370 <strdup@plt>
   17d3c:	str	x0, [sp, #64]
   17d40:	ldr	x0, [sp, #64]
   17d44:	cmp	x0, #0x0
   17d48:	b.ne	17d54 <udev_util_encode_string@@LIBUDEV_183+0xc524>  // b.any
   17d4c:	mov	w19, #0xfffffff4            	// #-12
   17d50:	b	17da4 <udev_util_encode_string@@LIBUDEV_183+0xc574>
   17d54:	ldr	x0, [sp, #64]
   17d58:	mov	x2, x0
   17d5c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17d60:	add	x1, x0, #0xfa8
   17d64:	ldr	x0, [sp, #40]
   17d68:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   17d6c:	str	w0, [sp, #60]
   17d70:	ldr	w0, [sp, #60]
   17d74:	cmp	w0, #0x0
   17d78:	b.ge	17d84 <udev_util_encode_string@@LIBUDEV_183+0xc554>  // b.tcont
   17d7c:	ldr	w19, [sp, #60]
   17d80:	b	17da4 <udev_util_encode_string@@LIBUDEV_183+0xc574>
   17d84:	ldr	x0, [sp, #40]
   17d88:	ldr	x0, [x0, #184]
   17d8c:	bl	54b0 <free@plt>
   17d90:	ldr	x1, [sp, #64]
   17d94:	ldr	x0, [sp, #40]
   17d98:	str	x1, [x0, #184]
   17d9c:	str	xzr, [sp, #64]
   17da0:	mov	w19, #0x0                   	// #0
   17da4:	add	x0, sp, #0x40
   17da8:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   17dac:	mov	w1, w19
   17db0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   17db4:	ldr	x0, [x0, #4016]
   17db8:	ldr	x2, [sp, #72]
   17dbc:	ldr	x0, [x0]
   17dc0:	eor	x0, x2, x0
   17dc4:	cmp	x0, #0x0
   17dc8:	b.eq	17dd0 <udev_util_encode_string@@LIBUDEV_183+0xc5a0>  // b.none
   17dcc:	bl	5390 <__stack_chk_fail@plt>
   17dd0:	mov	w0, w1
   17dd4:	ldr	x19, [sp, #16]
   17dd8:	ldp	x29, x30, [sp], #80
   17ddc:	ret
   17de0:	stp	x29, x30, [sp, #-48]!
   17de4:	mov	x29, sp
   17de8:	str	x0, [sp, #24]
   17dec:	str	x1, [sp, #16]
   17df0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   17df4:	ldr	x0, [x0, #4016]
   17df8:	ldr	x1, [x0]
   17dfc:	str	x1, [sp, #40]
   17e00:	mov	x1, #0x0                   	// #0
   17e04:	ldr	x0, [sp, #24]
   17e08:	cmp	x0, #0x0
   17e0c:	cset	w0, eq  // eq = none
   17e10:	and	w0, w0, #0xff
   17e14:	and	x0, x0, #0xff
   17e18:	cmp	x0, #0x0
   17e1c:	b.eq	17e48 <udev_util_encode_string@@LIBUDEV_183+0xc618>  // b.none
   17e20:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17e24:	add	x1, x0, #0xcab
   17e28:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17e2c:	add	x4, x0, #0x600
   17e30:	mov	w3, #0x15a                 	// #346
   17e34:	mov	x2, x1
   17e38:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17e3c:	add	x1, x0, #0xcd8
   17e40:	mov	w0, #0x0                   	// #0
   17e44:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17e48:	ldr	x0, [sp, #16]
   17e4c:	cmp	x0, #0x0
   17e50:	cset	w0, eq  // eq = none
   17e54:	and	w0, w0, #0xff
   17e58:	and	x0, x0, #0xff
   17e5c:	cmp	x0, #0x0
   17e60:	b.eq	17e8c <udev_util_encode_string@@LIBUDEV_183+0xc65c>  // b.none
   17e64:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17e68:	add	x1, x0, #0xcab
   17e6c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17e70:	add	x4, x0, #0x600
   17e74:	mov	w3, #0x15b                 	// #347
   17e78:	mov	x2, x1
   17e7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17e80:	add	x1, x0, #0xfb0
   17e84:	mov	w0, #0x0                   	// #0
   17e88:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17e8c:	add	x0, sp, #0x20
   17e90:	mov	x1, x0
   17e94:	ldr	x0, [sp, #16]
   17e98:	bl	301c4 <udev_util_encode_string@@LIBUDEV_183+0x24994>
   17e9c:	str	w0, [sp, #36]
   17ea0:	ldr	w0, [sp, #36]
   17ea4:	cmp	w0, #0x0
   17ea8:	b.ge	17eb4 <udev_util_encode_string@@LIBUDEV_183+0xc684>  // b.tcont
   17eac:	ldr	w0, [sp, #36]
   17eb0:	b	17ef0 <udev_util_encode_string@@LIBUDEV_183+0xc6c0>
   17eb4:	ldr	x2, [sp, #16]
   17eb8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17ebc:	add	x1, x0, #0xfc0
   17ec0:	ldr	x0, [sp, #24]
   17ec4:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   17ec8:	str	w0, [sp, #36]
   17ecc:	ldr	w0, [sp, #36]
   17ed0:	cmp	w0, #0x0
   17ed4:	b.ge	17ee0 <udev_util_encode_string@@LIBUDEV_183+0xc6b0>  // b.tcont
   17ed8:	ldr	w0, [sp, #36]
   17edc:	b	17ef0 <udev_util_encode_string@@LIBUDEV_183+0xc6c0>
   17ee0:	ldr	w1, [sp, #32]
   17ee4:	ldr	x0, [sp, #24]
   17ee8:	str	w1, [x0, #180]
   17eec:	mov	w0, #0x0                   	// #0
   17ef0:	mov	w1, w0
   17ef4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   17ef8:	ldr	x0, [x0, #4016]
   17efc:	ldr	x2, [sp, #40]
   17f00:	ldr	x0, [x0]
   17f04:	eor	x0, x2, x0
   17f08:	cmp	x0, #0x0
   17f0c:	b.eq	17f14 <udev_util_encode_string@@LIBUDEV_183+0xc6e4>  // b.none
   17f10:	bl	5390 <__stack_chk_fail@plt>
   17f14:	mov	w0, w1
   17f18:	ldp	x29, x30, [sp], #48
   17f1c:	ret
   17f20:	stp	x29, x30, [sp, #-80]!
   17f24:	mov	x29, sp
   17f28:	str	x19, [sp, #16]
   17f2c:	str	x0, [sp, #40]
   17f30:	str	x1, [sp, #32]
   17f34:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   17f38:	ldr	x0, [x0, #4016]
   17f3c:	ldr	x1, [x0]
   17f40:	str	x1, [sp, #72]
   17f44:	mov	x1, #0x0                   	// #0
   17f48:	str	xzr, [sp, #64]
   17f4c:	ldr	x0, [sp, #40]
   17f50:	cmp	x0, #0x0
   17f54:	cset	w0, eq  // eq = none
   17f58:	and	w0, w0, #0xff
   17f5c:	and	x0, x0, #0xff
   17f60:	cmp	x0, #0x0
   17f64:	b.eq	17f90 <udev_util_encode_string@@LIBUDEV_183+0xc760>  // b.none
   17f68:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17f6c:	add	x1, x0, #0xcab
   17f70:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17f74:	add	x4, x0, #0x618
   17f78:	mov	w3, #0x16e                 	// #366
   17f7c:	mov	x2, x1
   17f80:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17f84:	add	x1, x0, #0xcd8
   17f88:	mov	w0, #0x0                   	// #0
   17f8c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17f90:	ldr	x0, [sp, #32]
   17f94:	cmp	x0, #0x0
   17f98:	cset	w0, eq  // eq = none
   17f9c:	and	w0, w0, #0xff
   17fa0:	and	x0, x0, #0xff
   17fa4:	cmp	x0, #0x0
   17fa8:	b.eq	17fd4 <udev_util_encode_string@@LIBUDEV_183+0xc7a4>  // b.none
   17fac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17fb0:	add	x1, x0, #0xcab
   17fb4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   17fb8:	add	x4, x0, #0x618
   17fbc:	mov	w3, #0x16f                 	// #367
   17fc0:	mov	x2, x1
   17fc4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17fc8:	add	x1, x0, #0xfc8
   17fcc:	mov	w0, #0x0                   	// #0
   17fd0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   17fd4:	ldr	x0, [sp, #32]
   17fd8:	ldrb	w0, [x0]
   17fdc:	cmp	w0, #0x2f
   17fe0:	b.eq	18014 <udev_util_encode_string@@LIBUDEV_183+0xc7e4>  // b.none
   17fe4:	add	x3, sp, #0x40
   17fe8:	ldr	x2, [sp, #32]
   17fec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   17ff0:	add	x1, x0, #0xfd8
   17ff4:	mov	x0, x3
   17ff8:	bl	5160 <asprintf@plt>
   17ffc:	str	w0, [sp, #60]
   18000:	ldr	w0, [sp, #60]
   18004:	cmp	w0, #0x0
   18008:	b.ge	18034 <udev_util_encode_string@@LIBUDEV_183+0xc804>  // b.tcont
   1800c:	mov	w19, #0xfffffff4            	// #-12
   18010:	b	18084 <udev_util_encode_string@@LIBUDEV_183+0xc854>
   18014:	ldr	x0, [sp, #32]
   18018:	bl	5370 <strdup@plt>
   1801c:	str	x0, [sp, #64]
   18020:	ldr	x0, [sp, #64]
   18024:	cmp	x0, #0x0
   18028:	b.ne	18034 <udev_util_encode_string@@LIBUDEV_183+0xc804>  // b.any
   1802c:	mov	w19, #0xfffffff4            	// #-12
   18030:	b	18084 <udev_util_encode_string@@LIBUDEV_183+0xc854>
   18034:	ldr	x0, [sp, #64]
   18038:	mov	x2, x0
   1803c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18040:	add	x1, x0, #0xfe0
   18044:	ldr	x0, [sp, #40]
   18048:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   1804c:	str	w0, [sp, #60]
   18050:	ldr	w0, [sp, #60]
   18054:	cmp	w0, #0x0
   18058:	b.ge	18064 <udev_util_encode_string@@LIBUDEV_183+0xc834>  // b.tcont
   1805c:	ldr	w19, [sp, #60]
   18060:	b	18084 <udev_util_encode_string@@LIBUDEV_183+0xc854>
   18064:	ldr	x0, [sp, #40]
   18068:	ldr	x0, [x0, #192]
   1806c:	bl	54b0 <free@plt>
   18070:	ldr	x1, [sp, #64]
   18074:	ldr	x0, [sp, #40]
   18078:	str	x1, [x0, #192]
   1807c:	str	xzr, [sp, #64]
   18080:	mov	w19, #0x0                   	// #0
   18084:	add	x0, sp, #0x40
   18088:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1808c:	mov	w1, w19
   18090:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   18094:	ldr	x0, [x0, #4016]
   18098:	ldr	x2, [sp, #72]
   1809c:	ldr	x0, [x0]
   180a0:	eor	x0, x2, x0
   180a4:	cmp	x0, #0x0
   180a8:	b.eq	180b0 <udev_util_encode_string@@LIBUDEV_183+0xc880>  // b.none
   180ac:	bl	5390 <__stack_chk_fail@plt>
   180b0:	mov	w0, w1
   180b4:	ldr	x19, [sp, #16]
   180b8:	ldp	x29, x30, [sp], #80
   180bc:	ret
   180c0:	stp	x29, x30, [sp, #-48]!
   180c4:	mov	x29, sp
   180c8:	str	x0, [sp, #24]
   180cc:	str	x1, [sp, #16]
   180d0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   180d4:	ldr	x0, [x0, #4016]
   180d8:	ldr	x1, [x0]
   180dc:	str	x1, [sp, #40]
   180e0:	mov	x1, #0x0                   	// #0
   180e4:	ldr	x0, [sp, #24]
   180e8:	cmp	x0, #0x0
   180ec:	cset	w0, eq  // eq = none
   180f0:	and	w0, w0, #0xff
   180f4:	and	x0, x0, #0xff
   180f8:	cmp	x0, #0x0
   180fc:	b.eq	18128 <udev_util_encode_string@@LIBUDEV_183+0xc8f8>  // b.none
   18100:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18104:	add	x1, x0, #0xcab
   18108:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1810c:	add	x4, x0, #0x630
   18110:	mov	w3, #0x188                 	// #392
   18114:	mov	x2, x1
   18118:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1811c:	add	x1, x0, #0xcd8
   18120:	mov	w0, #0x0                   	// #0
   18124:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   18128:	ldr	x0, [sp, #16]
   1812c:	cmp	x0, #0x0
   18130:	cset	w0, eq  // eq = none
   18134:	and	w0, w0, #0xff
   18138:	and	x0, x0, #0xff
   1813c:	cmp	x0, #0x0
   18140:	b.eq	1816c <udev_util_encode_string@@LIBUDEV_183+0xc93c>  // b.none
   18144:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18148:	add	x1, x0, #0xcab
   1814c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18150:	add	x4, x0, #0x630
   18154:	mov	w3, #0x189                 	// #393
   18158:	mov	x2, x1
   1815c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18160:	add	x1, x0, #0xfe8
   18164:	mov	w0, #0x0                   	// #0
   18168:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1816c:	add	x0, sp, #0x20
   18170:	mov	x1, x0
   18174:	ldr	x0, [sp, #16]
   18178:	bl	15330 <udev_util_encode_string@@LIBUDEV_183+0x9b00>
   1817c:	str	w0, [sp, #36]
   18180:	ldr	w0, [sp, #36]
   18184:	cmp	w0, #0x0
   18188:	b.ge	18194 <udev_util_encode_string@@LIBUDEV_183+0xc964>  // b.tcont
   1818c:	ldr	w0, [sp, #36]
   18190:	b	181e4 <udev_util_encode_string@@LIBUDEV_183+0xc9b4>
   18194:	ldr	w0, [sp, #32]
   18198:	cmp	w0, #0xfff
   1819c:	b.ls	181a8 <udev_util_encode_string@@LIBUDEV_183+0xc978>  // b.plast
   181a0:	mov	w0, #0xffffffea            	// #-22
   181a4:	b	181e4 <udev_util_encode_string@@LIBUDEV_183+0xc9b4>
   181a8:	ldr	x2, [sp, #16]
   181ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   181b0:	add	x1, x0, #0xff8
   181b4:	ldr	x0, [sp, #24]
   181b8:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   181bc:	str	w0, [sp, #36]
   181c0:	ldr	w0, [sp, #36]
   181c4:	cmp	w0, #0x0
   181c8:	b.ge	181d4 <udev_util_encode_string@@LIBUDEV_183+0xc9a4>  // b.tcont
   181cc:	ldr	w0, [sp, #36]
   181d0:	b	181e4 <udev_util_encode_string@@LIBUDEV_183+0xc9b4>
   181d4:	ldr	w1, [sp, #32]
   181d8:	ldr	x0, [sp, #24]
   181dc:	str	w1, [x0, #304]
   181e0:	mov	w0, #0x0                   	// #0
   181e4:	mov	w1, w0
   181e8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   181ec:	ldr	x0, [x0, #4016]
   181f0:	ldr	x2, [sp, #40]
   181f4:	ldr	x0, [x0]
   181f8:	eor	x0, x2, x0
   181fc:	cmp	x0, #0x0
   18200:	b.eq	18208 <udev_util_encode_string@@LIBUDEV_183+0xc9d8>  // b.none
   18204:	bl	5390 <__stack_chk_fail@plt>
   18208:	mov	w0, w1
   1820c:	ldp	x29, x30, [sp], #48
   18210:	ret
   18214:	stp	x29, x30, [sp, #-80]!
   18218:	mov	x29, sp
   1821c:	str	x0, [sp, #40]
   18220:	str	x1, [sp, #32]
   18224:	str	x2, [sp, #24]
   18228:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1822c:	ldr	x0, [x0, #4016]
   18230:	ldr	x1, [x0]
   18234:	str	x1, [sp, #72]
   18238:	mov	x1, #0x0                   	// #0
   1823c:	str	wzr, [sp, #60]
   18240:	str	wzr, [sp, #64]
   18244:	ldr	x0, [sp, #40]
   18248:	cmp	x0, #0x0
   1824c:	cset	w0, eq  // eq = none
   18250:	and	w0, w0, #0xff
   18254:	and	x0, x0, #0xff
   18258:	cmp	x0, #0x0
   1825c:	b.eq	18288 <udev_util_encode_string@@LIBUDEV_183+0xca58>  // b.none
   18260:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18264:	add	x1, x0, #0xcab
   18268:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1826c:	add	x4, x0, #0x648
   18270:	mov	w3, #0x19f                 	// #415
   18274:	mov	x2, x1
   18278:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1827c:	add	x1, x0, #0xcd8
   18280:	mov	w0, #0x0                   	// #0
   18284:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   18288:	ldr	x0, [sp, #32]
   1828c:	cmp	x0, #0x0
   18290:	cset	w0, eq  // eq = none
   18294:	and	w0, w0, #0xff
   18298:	and	x0, x0, #0xff
   1829c:	cmp	x0, #0x0
   182a0:	b.eq	182cc <udev_util_encode_string@@LIBUDEV_183+0xca9c>  // b.none
   182a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   182a8:	add	x1, x0, #0xcab
   182ac:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   182b0:	add	x4, x0, #0x648
   182b4:	mov	w3, #0x1a0                 	// #416
   182b8:	mov	x2, x1
   182bc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   182c0:	add	x1, x0, #0x0
   182c4:	mov	w0, #0x0                   	// #0
   182c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   182cc:	add	x0, sp, #0x3c
   182d0:	mov	x1, x0
   182d4:	ldr	x0, [sp, #32]
   182d8:	bl	15330 <udev_util_encode_string@@LIBUDEV_183+0x9b00>
   182dc:	str	w0, [sp, #68]
   182e0:	ldr	w0, [sp, #68]
   182e4:	cmp	w0, #0x0
   182e8:	b.ge	182f4 <udev_util_encode_string@@LIBUDEV_183+0xcac4>  // b.tcont
   182ec:	ldr	w0, [sp, #68]
   182f0:	b	183bc <udev_util_encode_string@@LIBUDEV_183+0xcb8c>
   182f4:	ldr	w0, [sp, #60]
   182f8:	cmp	w0, #0x0
   182fc:	b.ne	18308 <udev_util_encode_string@@LIBUDEV_183+0xcad8>  // b.any
   18300:	mov	w0, #0x0                   	// #0
   18304:	b	183bc <udev_util_encode_string@@LIBUDEV_183+0xcb8c>
   18308:	ldr	x0, [sp, #24]
   1830c:	cmp	x0, #0x0
   18310:	b.eq	1833c <udev_util_encode_string@@LIBUDEV_183+0xcb0c>  // b.none
   18314:	add	x0, sp, #0x40
   18318:	mov	x1, x0
   1831c:	ldr	x0, [sp, #24]
   18320:	bl	15330 <udev_util_encode_string@@LIBUDEV_183+0x9b00>
   18324:	str	w0, [sp, #68]
   18328:	ldr	w0, [sp, #68]
   1832c:	cmp	w0, #0x0
   18330:	b.ge	1833c <udev_util_encode_string@@LIBUDEV_183+0xcb0c>  // b.tcont
   18334:	ldr	w0, [sp, #68]
   18338:	b	183bc <udev_util_encode_string@@LIBUDEV_183+0xcb8c>
   1833c:	ldr	x2, [sp, #32]
   18340:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18344:	add	x1, x0, #0x8
   18348:	ldr	x0, [sp, #40]
   1834c:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   18350:	str	w0, [sp, #68]
   18354:	ldr	w0, [sp, #68]
   18358:	cmp	w0, #0x0
   1835c:	b.ge	18368 <udev_util_encode_string@@LIBUDEV_183+0xcb38>  // b.tcont
   18360:	ldr	w0, [sp, #68]
   18364:	b	183bc <udev_util_encode_string@@LIBUDEV_183+0xcb8c>
   18368:	ldr	x0, [sp, #24]
   1836c:	cmp	x0, #0x0
   18370:	b.eq	183a0 <udev_util_encode_string@@LIBUDEV_183+0xcb70>  // b.none
   18374:	ldr	x2, [sp, #24]
   18378:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1837c:	add	x1, x0, #0x10
   18380:	ldr	x0, [sp, #40]
   18384:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   18388:	str	w0, [sp, #68]
   1838c:	ldr	w0, [sp, #68]
   18390:	cmp	w0, #0x0
   18394:	b.ge	183a0 <udev_util_encode_string@@LIBUDEV_183+0xcb70>  // b.tcont
   18398:	ldr	w0, [sp, #68]
   1839c:	b	183bc <udev_util_encode_string@@LIBUDEV_183+0xcb8c>
   183a0:	ldr	w0, [sp, #60]
   183a4:	ldr	w1, [sp, #64]
   183a8:	bl	51a0 <gnu_dev_makedev@plt>
   183ac:	mov	x1, x0
   183b0:	ldr	x0, [sp, #40]
   183b4:	str	x1, [x0, #200]
   183b8:	mov	w0, #0x0                   	// #0
   183bc:	mov	w1, w0
   183c0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   183c4:	ldr	x0, [x0, #4016]
   183c8:	ldr	x2, [sp, #72]
   183cc:	ldr	x0, [x0]
   183d0:	eor	x0, x2, x0
   183d4:	cmp	x0, #0x0
   183d8:	b.eq	183e0 <udev_util_encode_string@@LIBUDEV_183+0xcbb0>  // b.none
   183dc:	bl	5390 <__stack_chk_fail@plt>
   183e0:	mov	w0, w1
   183e4:	ldp	x29, x30, [sp], #80
   183e8:	ret
   183ec:	stp	x29, x30, [sp, #-80]!
   183f0:	mov	x29, sp
   183f4:	str	x0, [sp, #56]
   183f8:	str	x1, [sp, #48]
   183fc:	str	x2, [sp, #40]
   18400:	str	x3, [sp, #32]
   18404:	str	x4, [sp, #24]
   18408:	ldr	x0, [sp, #56]
   1840c:	cmp	x0, #0x0
   18410:	cset	w0, eq  // eq = none
   18414:	and	w0, w0, #0xff
   18418:	and	x0, x0, #0xff
   1841c:	cmp	x0, #0x0
   18420:	b.eq	1844c <udev_util_encode_string@@LIBUDEV_183+0xcc1c>  // b.none
   18424:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18428:	add	x1, x0, #0xcab
   1842c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18430:	add	x4, x0, #0x660
   18434:	mov	w3, #0x1c0                 	// #448
   18438:	mov	x2, x1
   1843c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18440:	add	x1, x0, #0xcd8
   18444:	mov	w0, #0x0                   	// #0
   18448:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1844c:	ldr	x0, [sp, #48]
   18450:	cmp	x0, #0x0
   18454:	cset	w0, eq  // eq = none
   18458:	and	w0, w0, #0xff
   1845c:	and	x0, x0, #0xff
   18460:	cmp	x0, #0x0
   18464:	b.eq	18490 <udev_util_encode_string@@LIBUDEV_183+0xcc60>  // b.none
   18468:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1846c:	add	x1, x0, #0xcab
   18470:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18474:	add	x4, x0, #0x660
   18478:	mov	w3, #0x1c1                 	// #449
   1847c:	mov	x2, x1
   18480:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18484:	add	x1, x0, #0x18
   18488:	mov	w0, #0x0                   	// #0
   1848c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   18490:	ldr	x0, [sp, #40]
   18494:	cmp	x0, #0x0
   18498:	cset	w0, eq  // eq = none
   1849c:	and	w0, w0, #0xff
   184a0:	and	x0, x0, #0xff
   184a4:	cmp	x0, #0x0
   184a8:	b.eq	184d4 <udev_util_encode_string@@LIBUDEV_183+0xcca4>  // b.none
   184ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   184b0:	add	x1, x0, #0xcab
   184b4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   184b8:	add	x4, x0, #0x660
   184bc:	mov	w3, #0x1c2                 	// #450
   184c0:	mov	x2, x1
   184c4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   184c8:	add	x1, x0, #0x20
   184cc:	mov	w0, #0x0                   	// #0
   184d0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   184d4:	ldr	x0, [sp, #32]
   184d8:	cmp	x0, #0x0
   184dc:	cset	w0, eq  // eq = none
   184e0:	and	w0, w0, #0xff
   184e4:	and	x0, x0, #0xff
   184e8:	cmp	x0, #0x0
   184ec:	b.eq	18518 <udev_util_encode_string@@LIBUDEV_183+0xcce8>  // b.none
   184f0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   184f4:	add	x1, x0, #0xcab
   184f8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   184fc:	add	x4, x0, #0x660
   18500:	mov	w3, #0x1c3                 	// #451
   18504:	mov	x2, x1
   18508:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1850c:	add	x1, x0, #0x0
   18510:	mov	w0, #0x0                   	// #0
   18514:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   18518:	ldr	x0, [sp, #24]
   1851c:	cmp	x0, #0x0
   18520:	cset	w0, eq  // eq = none
   18524:	and	w0, w0, #0xff
   18528:	and	x0, x0, #0xff
   1852c:	cmp	x0, #0x0
   18530:	b.eq	1855c <udev_util_encode_string@@LIBUDEV_183+0xcd2c>  // b.none
   18534:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18538:	add	x1, x0, #0xcab
   1853c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18540:	add	x4, x0, #0x660
   18544:	mov	w3, #0x1c4                 	// #452
   18548:	mov	x2, x1
   1854c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18550:	add	x1, x0, #0x28
   18554:	mov	w0, #0x0                   	// #0
   18558:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1855c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18560:	add	x1, x0, #0xfa8
   18564:	ldr	x0, [sp, #48]
   18568:	bl	5440 <strcmp@plt>
   1856c:	cmp	w0, #0x0
   18570:	b.ne	18598 <udev_util_encode_string@@LIBUDEV_183+0xcd68>  // b.any
   18574:	ldr	x1, [sp, #40]
   18578:	ldr	x0, [sp, #56]
   1857c:	bl	17c80 <udev_util_encode_string@@LIBUDEV_183+0xc450>
   18580:	str	w0, [sp, #76]
   18584:	ldr	w0, [sp, #76]
   18588:	cmp	w0, #0x0
   1858c:	b.ge	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>  // b.tcont
   18590:	ldr	w0, [sp, #76]
   18594:	b	186c8 <udev_util_encode_string@@LIBUDEV_183+0xce98>
   18598:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1859c:	add	x1, x0, #0xfc0
   185a0:	ldr	x0, [sp, #48]
   185a4:	bl	5440 <strcmp@plt>
   185a8:	cmp	w0, #0x0
   185ac:	b.ne	185d4 <udev_util_encode_string@@LIBUDEV_183+0xcda4>  // b.any
   185b0:	ldr	x1, [sp, #40]
   185b4:	ldr	x0, [sp, #56]
   185b8:	bl	17de0 <udev_util_encode_string@@LIBUDEV_183+0xc5b0>
   185bc:	str	w0, [sp, #76]
   185c0:	ldr	w0, [sp, #76]
   185c4:	cmp	w0, #0x0
   185c8:	b.ge	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>  // b.tcont
   185cc:	ldr	w0, [sp, #76]
   185d0:	b	186c8 <udev_util_encode_string@@LIBUDEV_183+0xce98>
   185d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   185d8:	add	x1, x0, #0xfe0
   185dc:	ldr	x0, [sp, #48]
   185e0:	bl	5440 <strcmp@plt>
   185e4:	cmp	w0, #0x0
   185e8:	b.ne	18610 <udev_util_encode_string@@LIBUDEV_183+0xcde0>  // b.any
   185ec:	ldr	x1, [sp, #40]
   185f0:	ldr	x0, [sp, #56]
   185f4:	bl	17f20 <udev_util_encode_string@@LIBUDEV_183+0xc6f0>
   185f8:	str	w0, [sp, #76]
   185fc:	ldr	w0, [sp, #76]
   18600:	cmp	w0, #0x0
   18604:	b.ge	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>  // b.tcont
   18608:	ldr	w0, [sp, #76]
   1860c:	b	186c8 <udev_util_encode_string@@LIBUDEV_183+0xce98>
   18610:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18614:	add	x1, x0, #0xff8
   18618:	ldr	x0, [sp, #48]
   1861c:	bl	5440 <strcmp@plt>
   18620:	cmp	w0, #0x0
   18624:	b.ne	1864c <udev_util_encode_string@@LIBUDEV_183+0xce1c>  // b.any
   18628:	ldr	x1, [sp, #40]
   1862c:	ldr	x0, [sp, #56]
   18630:	bl	180c0 <udev_util_encode_string@@LIBUDEV_183+0xc890>
   18634:	str	w0, [sp, #76]
   18638:	ldr	w0, [sp, #76]
   1863c:	cmp	w0, #0x0
   18640:	b.ge	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>  // b.tcont
   18644:	ldr	w0, [sp, #76]
   18648:	b	186c8 <udev_util_encode_string@@LIBUDEV_183+0xce98>
   1864c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18650:	add	x1, x0, #0x8
   18654:	ldr	x0, [sp, #48]
   18658:	bl	5440 <strcmp@plt>
   1865c:	cmp	w0, #0x0
   18660:	b.ne	18674 <udev_util_encode_string@@LIBUDEV_183+0xce44>  // b.any
   18664:	ldr	x0, [sp, #32]
   18668:	ldr	x1, [sp, #40]
   1866c:	str	x1, [x0]
   18670:	b	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>
   18674:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18678:	add	x1, x0, #0x10
   1867c:	ldr	x0, [sp, #48]
   18680:	bl	5440 <strcmp@plt>
   18684:	cmp	w0, #0x0
   18688:	b.ne	1869c <udev_util_encode_string@@LIBUDEV_183+0xce6c>  // b.any
   1868c:	ldr	x0, [sp, #24]
   18690:	ldr	x1, [sp, #40]
   18694:	str	x1, [x0]
   18698:	b	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>
   1869c:	ldr	x2, [sp, #40]
   186a0:	ldr	x1, [sp, #48]
   186a4:	ldr	x0, [sp, #56]
   186a8:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   186ac:	str	w0, [sp, #76]
   186b0:	ldr	w0, [sp, #76]
   186b4:	cmp	w0, #0x0
   186b8:	b.ge	186c4 <udev_util_encode_string@@LIBUDEV_183+0xce94>  // b.tcont
   186bc:	ldr	w0, [sp, #76]
   186c0:	b	186c8 <udev_util_encode_string@@LIBUDEV_183+0xce98>
   186c4:	mov	w0, #0x0                   	// #0
   186c8:	ldp	x29, x30, [sp], #80
   186cc:	ret
   186d0:	stp	x29, x30, [sp, #-272]!
   186d4:	mov	x29, sp
   186d8:	str	x19, [sp, #16]
   186dc:	sub	sp, sp, #0x30
   186e0:	str	x0, [x29, #40]
   186e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   186e8:	ldr	x0, [x0, #4016]
   186ec:	ldr	x1, [x0]
   186f0:	str	x1, [x29, #264]
   186f4:	mov	x1, #0x0                   	// #0
   186f8:	str	xzr, [x29, #104]
   186fc:	str	xzr, [x29, #152]
   18700:	str	xzr, [x29, #160]
   18704:	str	xzr, [x29, #120]
   18708:	str	xzr, [x29, #128]
   1870c:	str	wzr, [x29, #64]
   18710:	ldr	x0, [x29, #40]
   18714:	cmp	x0, #0x0
   18718:	cset	w0, eq  // eq = none
   1871c:	and	w0, w0, #0xff
   18720:	and	x0, x0, #0xff
   18724:	cmp	x0, #0x0
   18728:	b.eq	18754 <udev_util_encode_string@@LIBUDEV_183+0xcf24>  // b.none
   1872c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18730:	add	x1, x0, #0xcab
   18734:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18738:	add	x4, x0, #0x678
   1873c:	mov	w3, #0x1f3                 	// #499
   18740:	mov	x2, x1
   18744:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18748:	add	x1, x0, #0xcd8
   1874c:	mov	w0, #0x0                   	// #0
   18750:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   18754:	ldr	x0, [x29, #40]
   18758:	ldrb	w0, [x0, #329]
   1875c:	and	w0, w0, #0x2
   18760:	and	w0, w0, #0xff
   18764:	cmp	w0, #0x0
   18768:	b.ne	18784 <udev_util_encode_string@@LIBUDEV_183+0xcf54>  // b.any
   1876c:	ldr	x0, [x29, #40]
   18770:	ldrb	w0, [x0, #331]
   18774:	and	w0, w0, #0x2
   18778:	and	w0, w0, #0xff
   1877c:	cmp	w0, #0x0
   18780:	b.eq	1878c <udev_util_encode_string@@LIBUDEV_183+0xcf5c>  // b.none
   18784:	mov	w19, #0x0                   	// #0
   18788:	b	18f18 <udev_util_encode_string@@LIBUDEV_183+0xd6e8>
   1878c:	add	x0, x29, #0x70
   18790:	mov	x1, x0
   18794:	ldr	x0, [x29, #40]
   18798:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   1879c:	str	w0, [x29, #68]
   187a0:	ldr	w0, [x29, #68]
   187a4:	cmp	w0, #0x0
   187a8:	b.ge	187b4 <udev_util_encode_string@@LIBUDEV_183+0xcf84>  // b.tcont
   187ac:	ldr	w19, [x29, #68]
   187b0:	b	18f18 <udev_util_encode_string@@LIBUDEV_183+0xd6e8>
   187b4:	ldr	x0, [x29, #112]
   187b8:	str	x0, [x29, #248]
   187bc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   187c0:	add	x0, x0, #0xe10
   187c4:	str	x0, [x29, #256]
   187c8:	str	xzr, [x29, #176]
   187cc:	str	xzr, [x29, #184]
   187d0:	b	18804 <udev_util_encode_string@@LIBUDEV_183+0xcfd4>
   187d4:	ldr	x0, [x29, #184]
   187d8:	lsl	x0, x0, #3
   187dc:	add	x1, x29, #0xf8
   187e0:	ldr	x0, [x1, x0]
   187e4:	bl	5040 <strlen@plt>
   187e8:	mov	x1, x0
   187ec:	ldr	x0, [x29, #176]
   187f0:	add	x0, x0, x1
   187f4:	str	x0, [x29, #176]
   187f8:	ldr	x0, [x29, #184]
   187fc:	add	x0, x0, #0x1
   18800:	str	x0, [x29, #184]
   18804:	ldr	x0, [x29, #184]
   18808:	cmp	x0, #0x1
   1880c:	b.hi	18828 <udev_util_encode_string@@LIBUDEV_183+0xcff8>  // b.pmore
   18810:	ldr	x0, [x29, #184]
   18814:	lsl	x0, x0, #3
   18818:	add	x1, x29, #0xf8
   1881c:	ldr	x0, [x1, x0]
   18820:	cmp	x0, #0x0
   18824:	b.ne	187d4 <udev_util_encode_string@@LIBUDEV_183+0xcfa4>  // b.any
   18828:	ldr	x0, [x29, #176]
   1882c:	add	x0, x0, #0x1
   18830:	str	x0, [x29, #192]
   18834:	ldr	x1, [x29, #192]
   18838:	mov	x0, #0x1                   	// #1
   1883c:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   18840:	and	w0, w0, #0xff
   18844:	and	x0, x0, #0xff
   18848:	cmp	x0, #0x0
   1884c:	b.eq	18878 <udev_util_encode_string@@LIBUDEV_183+0xd048>  // b.none
   18850:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18854:	add	x1, x0, #0xcab
   18858:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1885c:	add	x4, x0, #0x678
   18860:	mov	w3, #0x1fc                 	// #508
   18864:	mov	x2, x1
   18868:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1886c:	add	x1, x0, #0xe18
   18870:	mov	w0, #0x0                   	// #0
   18874:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   18878:	ldr	x0, [x29, #192]
   1887c:	cmp	x0, #0x400, lsl #12
   18880:	cset	w0, hi  // hi = pmore
   18884:	and	w0, w0, #0xff
   18888:	and	x0, x0, #0xff
   1888c:	cmp	x0, #0x0
   18890:	b.eq	188bc <udev_util_encode_string@@LIBUDEV_183+0xd08c>  // b.none
   18894:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18898:	add	x1, x0, #0xcab
   1889c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   188a0:	add	x4, x0, #0x678
   188a4:	mov	w3, #0x1fc                 	// #508
   188a8:	mov	x2, x1
   188ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   188b0:	add	x1, x0, #0xe48
   188b4:	mov	w0, #0x0                   	// #0
   188b8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   188bc:	ldr	x0, [x29, #192]
   188c0:	add	x0, x0, #0xf
   188c4:	lsr	x0, x0, #4
   188c8:	lsl	x0, x0, #4
   188cc:	sub	sp, sp, x0
   188d0:	add	x0, sp, #0x30
   188d4:	add	x0, x0, #0xf
   188d8:	lsr	x0, x0, #4
   188dc:	lsl	x0, x0, #4
   188e0:	str	x0, [x29, #200]
   188e4:	ldr	x0, [x29, #200]
   188e8:	str	x0, [x29, #168]
   188ec:	str	xzr, [x29, #184]
   188f0:	b	18920 <udev_util_encode_string@@LIBUDEV_183+0xd0f0>
   188f4:	ldr	x0, [x29, #184]
   188f8:	lsl	x0, x0, #3
   188fc:	add	x1, x29, #0xf8
   18900:	ldr	x0, [x1, x0]
   18904:	mov	x1, x0
   18908:	ldr	x0, [x29, #168]
   1890c:	bl	51b0 <stpcpy@plt>
   18910:	str	x0, [x29, #168]
   18914:	ldr	x0, [x29, #184]
   18918:	add	x0, x0, #0x1
   1891c:	str	x0, [x29, #184]
   18920:	ldr	x0, [x29, #184]
   18924:	cmp	x0, #0x1
   18928:	b.hi	18944 <udev_util_encode_string@@LIBUDEV_183+0xd114>  // b.pmore
   1892c:	ldr	x0, [x29, #184]
   18930:	lsl	x0, x0, #3
   18934:	add	x1, x29, #0xf8
   18938:	ldr	x0, [x1, x0]
   1893c:	cmp	x0, #0x0
   18940:	b.ne	188f4 <udev_util_encode_string@@LIBUDEV_183+0xd0c4>  // b.any
   18944:	ldr	x0, [x29, #168]
   18948:	strb	wzr, [x0]
   1894c:	ldr	x0, [x29, #200]
   18950:	str	x0, [x29, #208]
   18954:	add	x1, x29, #0x88
   18958:	add	x0, x29, #0x68
   1895c:	mov	x2, x1
   18960:	mov	x1, x0
   18964:	ldr	x0, [x29, #208]
   18968:	bl	15300 <udev_util_encode_string@@LIBUDEV_183+0x9ad0>
   1896c:	str	w0, [x29, #68]
   18970:	ldr	w0, [x29, #68]
   18974:	cmn	w0, #0xd
   18978:	b.ne	18994 <udev_util_encode_string@@LIBUDEV_183+0xd164>  // b.any
   1897c:	ldr	x0, [x29, #40]
   18980:	ldrb	w1, [x0, #329]
   18984:	orr	w1, w1, #0x2
   18988:	strb	w1, [x0, #329]
   1898c:	mov	w19, #0x0                   	// #0
   18990:	b	18f18 <udev_util_encode_string@@LIBUDEV_183+0xd6e8>
   18994:	ldr	w0, [x29, #68]
   18998:	cmn	w0, #0x2
   1899c:	b.ne	189a8 <udev_util_encode_string@@LIBUDEV_183+0xd178>  // b.any
   189a0:	mov	w19, #0x0                   	// #0
   189a4:	b	18f18 <udev_util_encode_string@@LIBUDEV_183+0xd6e8>
   189a8:	ldr	w0, [x29, #68]
   189ac:	cmp	w0, #0x0
   189b0:	b.ge	18a80 <udev_util_encode_string@@LIBUDEV_183+0xd250>  // b.tcont
   189b4:	str	xzr, [x29, #144]
   189b8:	ldr	x0, [x29, #40]
   189bc:	str	x0, [x29, #240]
   189c0:	mov	w0, #0x7                   	// #7
   189c4:	str	w0, [x29, #96]
   189c8:	ldr	w0, [x29, #68]
   189cc:	str	w0, [x29, #100]
   189d0:	ldr	x0, [x29, #240]
   189d4:	cmp	x0, #0x0
   189d8:	b.eq	18a14 <udev_util_encode_string@@LIBUDEV_183+0xd1e4>  // b.none
   189dc:	mov	w0, #0x0                   	// #0
   189e0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   189e4:	mov	w1, w0
   189e8:	ldr	w0, [x29, #96]
   189ec:	cmp	w0, w1
   189f0:	cset	w0, le
   189f4:	and	w0, w0, #0xff
   189f8:	and	x0, x0, #0xff
   189fc:	cmp	x0, #0x0
   18a00:	b.eq	18a14 <udev_util_encode_string@@LIBUDEV_183+0xd1e4>  // b.none
   18a04:	add	x0, x29, #0x90
   18a08:	mov	x1, x0
   18a0c:	ldr	x0, [x29, #240]
   18a10:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   18a14:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18a18:	add	x2, x0, #0xcab
   18a1c:	ldr	x0, [x29, #144]
   18a20:	cmp	x0, #0x0
   18a24:	b.eq	18a34 <udev_util_encode_string@@LIBUDEV_183+0xd204>  // b.none
   18a28:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18a2c:	add	x0, x0, #0x30
   18a30:	b	18a38 <udev_util_encode_string@@LIBUDEV_183+0xd208>
   18a34:	mov	x0, #0x0                   	// #0
   18a38:	ldr	x3, [x29, #144]
   18a3c:	ldr	x1, [x29, #208]
   18a40:	str	x1, [sp, #16]
   18a44:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18a48:	add	x1, x1, #0x38
   18a4c:	str	x1, [sp, #8]
   18a50:	str	xzr, [sp]
   18a54:	mov	x7, #0x0                   	// #0
   18a58:	mov	x6, x3
   18a5c:	mov	x5, x0
   18a60:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18a64:	add	x4, x0, #0x690
   18a68:	mov	w3, #0x208                 	// #520
   18a6c:	ldr	w1, [x29, #100]
   18a70:	ldr	w0, [x29, #96]
   18a74:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   18a78:	mov	w19, w0
   18a7c:	b	18f18 <udev_util_encode_string@@LIBUDEV_183+0xd6e8>
   18a80:	ldr	x0, [x29, #40]
   18a84:	ldrb	w1, [x0, #329]
   18a88:	orr	w1, w1, #0x2
   18a8c:	strb	w1, [x0, #329]
   18a90:	str	wzr, [x29, #60]
   18a94:	b	18df8 <udev_util_encode_string@@LIBUDEV_183+0xd5c8>
   18a98:	ldr	w0, [x29, #64]
   18a9c:	cmp	w0, #0x3
   18aa0:	b.eq	18c74 <udev_util_encode_string@@LIBUDEV_183+0xd444>  // b.none
   18aa4:	ldr	w0, [x29, #64]
   18aa8:	cmp	w0, #0x3
   18aac:	b.hi	18db0 <udev_util_encode_string@@LIBUDEV_183+0xd580>  // b.pmore
   18ab0:	ldr	w0, [x29, #64]
   18ab4:	cmp	w0, #0x2
   18ab8:	b.eq	18c5c <udev_util_encode_string@@LIBUDEV_183+0xd42c>  // b.none
   18abc:	ldr	w0, [x29, #64]
   18ac0:	cmp	w0, #0x2
   18ac4:	b.hi	18db0 <udev_util_encode_string@@LIBUDEV_183+0xd580>  // b.pmore
   18ac8:	ldr	w0, [x29, #64]
   18acc:	cmp	w0, #0x0
   18ad0:	b.eq	18ae4 <udev_util_encode_string@@LIBUDEV_183+0xd2b4>  // b.none
   18ad4:	ldr	w0, [x29, #64]
   18ad8:	cmp	w0, #0x1
   18adc:	b.eq	18b28 <udev_util_encode_string@@LIBUDEV_183+0xd2f8>  // b.none
   18ae0:	b	18db0 <udev_util_encode_string@@LIBUDEV_183+0xd580>
   18ae4:	ldr	x1, [x29, #104]
   18ae8:	ldr	w0, [x29, #60]
   18aec:	add	x0, x1, x0
   18af0:	ldrb	w0, [x0]
   18af4:	mov	w1, w0
   18af8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18afc:	add	x0, x0, #0x68
   18b00:	bl	5570 <strchr@plt>
   18b04:	cmp	x0, #0x0
   18b08:	b.ne	18dd8 <udev_util_encode_string@@LIBUDEV_183+0xd5a8>  // b.any
   18b0c:	ldr	x1, [x29, #104]
   18b10:	ldr	w0, [x29, #60]
   18b14:	add	x0, x1, x0
   18b18:	str	x0, [x29, #152]
   18b1c:	mov	w0, #0x1                   	// #1
   18b20:	str	w0, [x29, #64]
   18b24:	b	18dd8 <udev_util_encode_string@@LIBUDEV_183+0xd5a8>
   18b28:	ldr	x1, [x29, #104]
   18b2c:	ldr	w0, [x29, #60]
   18b30:	add	x0, x1, x0
   18b34:	ldrb	w0, [x0]
   18b38:	cmp	w0, #0x3d
   18b3c:	b.ne	18b5c <udev_util_encode_string@@LIBUDEV_183+0xd32c>  // b.any
   18b40:	ldr	x1, [x29, #104]
   18b44:	ldr	w0, [x29, #60]
   18b48:	add	x0, x1, x0
   18b4c:	strb	wzr, [x0]
   18b50:	mov	w0, #0x2                   	// #2
   18b54:	str	w0, [x29, #64]
   18b58:	b	18de0 <udev_util_encode_string@@LIBUDEV_183+0xd5b0>
   18b5c:	ldr	x1, [x29, #104]
   18b60:	ldr	w0, [x29, #60]
   18b64:	add	x0, x1, x0
   18b68:	ldrb	w0, [x0]
   18b6c:	mov	w1, w0
   18b70:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18b74:	add	x0, x0, #0x68
   18b78:	bl	5570 <strchr@plt>
   18b7c:	cmp	x0, #0x0
   18b80:	b.eq	18de0 <udev_util_encode_string@@LIBUDEV_183+0xd5b0>  // b.none
   18b84:	ldr	x1, [x29, #104]
   18b88:	ldr	w0, [x29, #60]
   18b8c:	add	x0, x1, x0
   18b90:	strb	wzr, [x0]
   18b94:	str	xzr, [x29, #144]
   18b98:	ldr	x0, [x29, #40]
   18b9c:	str	x0, [x29, #232]
   18ba0:	mov	w0, #0x7                   	// #7
   18ba4:	str	w0, [x29, #88]
   18ba8:	str	wzr, [x29, #92]
   18bac:	ldr	x0, [x29, #232]
   18bb0:	cmp	x0, #0x0
   18bb4:	b.eq	18bf0 <udev_util_encode_string@@LIBUDEV_183+0xd3c0>  // b.none
   18bb8:	mov	w0, #0x0                   	// #0
   18bbc:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   18bc0:	mov	w1, w0
   18bc4:	ldr	w0, [x29, #88]
   18bc8:	cmp	w0, w1
   18bcc:	cset	w0, le
   18bd0:	and	w0, w0, #0xff
   18bd4:	and	x0, x0, #0xff
   18bd8:	cmp	x0, #0x0
   18bdc:	b.eq	18bf0 <udev_util_encode_string@@LIBUDEV_183+0xd3c0>  // b.none
   18be0:	add	x0, x29, #0x90
   18be4:	mov	x1, x0
   18be8:	ldr	x0, [x29, #232]
   18bec:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   18bf0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18bf4:	add	x2, x0, #0xcab
   18bf8:	ldr	x0, [x29, #144]
   18bfc:	cmp	x0, #0x0
   18c00:	b.eq	18c10 <udev_util_encode_string@@LIBUDEV_183+0xd3e0>  // b.none
   18c04:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18c08:	add	x0, x0, #0x30
   18c0c:	b	18c14 <udev_util_encode_string@@LIBUDEV_183+0xd3e4>
   18c10:	mov	x0, #0x0                   	// #0
   18c14:	ldr	x3, [x29, #144]
   18c18:	ldr	x1, [x29, #152]
   18c1c:	str	x1, [sp, #16]
   18c20:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18c24:	add	x1, x1, #0x70
   18c28:	str	x1, [sp, #8]
   18c2c:	str	xzr, [sp]
   18c30:	mov	x7, #0x0                   	// #0
   18c34:	mov	x6, x3
   18c38:	mov	x5, x0
   18c3c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18c40:	add	x4, x0, #0x690
   18c44:	mov	w3, #0x21d                 	// #541
   18c48:	ldr	w1, [x29, #92]
   18c4c:	ldr	w0, [x29, #88]
   18c50:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   18c54:	str	wzr, [x29, #64]
   18c58:	b	18de0 <udev_util_encode_string@@LIBUDEV_183+0xd5b0>
   18c5c:	ldr	x1, [x29, #104]
   18c60:	ldr	w0, [x29, #60]
   18c64:	add	x0, x1, x0
   18c68:	str	x0, [x29, #160]
   18c6c:	mov	w0, #0x3                   	// #3
   18c70:	str	w0, [x29, #64]
   18c74:	ldr	x1, [x29, #104]
   18c78:	ldr	w0, [x29, #60]
   18c7c:	add	x0, x1, x0
   18c80:	ldrb	w0, [x0]
   18c84:	mov	w1, w0
   18c88:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18c8c:	add	x0, x0, #0x68
   18c90:	bl	5570 <strchr@plt>
   18c94:	cmp	x0, #0x0
   18c98:	b.eq	18de8 <udev_util_encode_string@@LIBUDEV_183+0xd5b8>  // b.none
   18c9c:	ldr	x1, [x29, #104]
   18ca0:	ldr	w0, [x29, #60]
   18ca4:	add	x0, x1, x0
   18ca8:	strb	wzr, [x0]
   18cac:	add	x1, x29, #0x80
   18cb0:	add	x0, x29, #0x78
   18cb4:	mov	x4, x1
   18cb8:	mov	x3, x0
   18cbc:	ldr	x2, [x29, #160]
   18cc0:	ldr	x1, [x29, #152]
   18cc4:	ldr	x0, [x29, #40]
   18cc8:	bl	183ec <udev_util_encode_string@@LIBUDEV_183+0xcbbc>
   18ccc:	str	w0, [x29, #68]
   18cd0:	ldr	w0, [x29, #68]
   18cd4:	cmp	w0, #0x0
   18cd8:	b.ge	18da8 <udev_util_encode_string@@LIBUDEV_183+0xd578>  // b.tcont
   18cdc:	str	xzr, [x29, #144]
   18ce0:	ldr	x0, [x29, #40]
   18ce4:	str	x0, [x29, #224]
   18ce8:	mov	w0, #0x7                   	// #7
   18cec:	str	w0, [x29, #80]
   18cf0:	ldr	w0, [x29, #68]
   18cf4:	str	w0, [x29, #84]
   18cf8:	ldr	x0, [x29, #224]
   18cfc:	cmp	x0, #0x0
   18d00:	b.eq	18d3c <udev_util_encode_string@@LIBUDEV_183+0xd50c>  // b.none
   18d04:	mov	w0, #0x0                   	// #0
   18d08:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   18d0c:	mov	w1, w0
   18d10:	ldr	w0, [x29, #80]
   18d14:	cmp	w0, w1
   18d18:	cset	w0, le
   18d1c:	and	w0, w0, #0xff
   18d20:	and	x0, x0, #0xff
   18d24:	cmp	x0, #0x0
   18d28:	b.eq	18d3c <udev_util_encode_string@@LIBUDEV_183+0xd50c>  // b.none
   18d2c:	add	x0, x29, #0x90
   18d30:	mov	x1, x0
   18d34:	ldr	x0, [x29, #224]
   18d38:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   18d3c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18d40:	add	x2, x0, #0xcab
   18d44:	ldr	x0, [x29, #144]
   18d48:	cmp	x0, #0x0
   18d4c:	b.eq	18d5c <udev_util_encode_string@@LIBUDEV_183+0xd52c>  // b.none
   18d50:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18d54:	add	x0, x0, #0x30
   18d58:	b	18d60 <udev_util_encode_string@@LIBUDEV_183+0xd530>
   18d5c:	mov	x0, #0x0                   	// #0
   18d60:	ldr	x3, [x29, #144]
   18d64:	ldr	x1, [x29, #160]
   18d68:	str	x1, [sp, #24]
   18d6c:	ldr	x1, [x29, #152]
   18d70:	str	x1, [sp, #16]
   18d74:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18d78:	add	x1, x1, #0xa0
   18d7c:	str	x1, [sp, #8]
   18d80:	str	xzr, [sp]
   18d84:	mov	x7, #0x0                   	// #0
   18d88:	mov	x6, x3
   18d8c:	mov	x5, x0
   18d90:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18d94:	add	x4, x0, #0x690
   18d98:	mov	w3, #0x22e                 	// #558
   18d9c:	ldr	w1, [x29, #84]
   18da0:	ldr	w0, [x29, #80]
   18da4:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   18da8:	str	wzr, [x29, #64]
   18dac:	b	18de8 <udev_util_encode_string@@LIBUDEV_183+0xd5b8>
   18db0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18db4:	add	x1, x0, #0xcab
   18db8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18dbc:	add	x4, x0, #0x678
   18dc0:	mov	w3, #0x235                 	// #565
   18dc4:	mov	x2, x1
   18dc8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18dcc:	add	x1, x0, #0xe0
   18dd0:	mov	w0, #0x0                   	// #0
   18dd4:	bl	2dc30 <udev_util_encode_string@@LIBUDEV_183+0x22400>
   18dd8:	nop
   18ddc:	b	18dec <udev_util_encode_string@@LIBUDEV_183+0xd5bc>
   18de0:	nop
   18de4:	b	18dec <udev_util_encode_string@@LIBUDEV_183+0xd5bc>
   18de8:	nop
   18dec:	ldr	w0, [x29, #60]
   18df0:	add	w0, w0, #0x1
   18df4:	str	w0, [x29, #60]
   18df8:	ldr	w1, [x29, #60]
   18dfc:	ldr	x0, [x29, #136]
   18e00:	cmp	x1, x0
   18e04:	b.cc	18a98 <udev_util_encode_string@@LIBUDEV_183+0xd268>  // b.lo, b.ul, b.last
   18e08:	ldr	x0, [x29, #120]
   18e0c:	cmp	x0, #0x0
   18e10:	b.eq	18f14 <udev_util_encode_string@@LIBUDEV_183+0xd6e4>  // b.none
   18e14:	ldr	x0, [x29, #120]
   18e18:	ldr	x1, [x29, #128]
   18e1c:	mov	x2, x1
   18e20:	mov	x1, x0
   18e24:	ldr	x0, [x29, #40]
   18e28:	bl	18214 <udev_util_encode_string@@LIBUDEV_183+0xc9e4>
   18e2c:	str	w0, [x29, #68]
   18e30:	ldr	w0, [x29, #68]
   18e34:	cmp	w0, #0x0
   18e38:	b.ge	18f14 <udev_util_encode_string@@LIBUDEV_183+0xd6e4>  // b.tcont
   18e3c:	str	xzr, [x29, #144]
   18e40:	ldr	x0, [x29, #40]
   18e44:	str	x0, [x29, #216]
   18e48:	mov	w0, #0x7                   	// #7
   18e4c:	str	w0, [x29, #72]
   18e50:	ldr	w0, [x29, #68]
   18e54:	str	w0, [x29, #76]
   18e58:	ldr	x0, [x29, #216]
   18e5c:	cmp	x0, #0x0
   18e60:	b.eq	18e9c <udev_util_encode_string@@LIBUDEV_183+0xd66c>  // b.none
   18e64:	mov	w0, #0x0                   	// #0
   18e68:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   18e6c:	mov	w1, w0
   18e70:	ldr	w0, [x29, #72]
   18e74:	cmp	w0, w1
   18e78:	cset	w0, le
   18e7c:	and	w0, w0, #0xff
   18e80:	and	x0, x0, #0xff
   18e84:	cmp	x0, #0x0
   18e88:	b.eq	18e9c <udev_util_encode_string@@LIBUDEV_183+0xd66c>  // b.none
   18e8c:	add	x0, x29, #0x90
   18e90:	mov	x1, x0
   18e94:	ldr	x0, [x29, #216]
   18e98:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   18e9c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18ea0:	add	x8, x0, #0xcab
   18ea4:	ldr	x0, [x29, #144]
   18ea8:	cmp	x0, #0x0
   18eac:	b.eq	18ebc <udev_util_encode_string@@LIBUDEV_183+0xd68c>  // b.none
   18eb0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18eb4:	add	x0, x0, #0x30
   18eb8:	b	18ec0 <udev_util_encode_string@@LIBUDEV_183+0xd690>
   18ebc:	mov	x0, #0x0                   	// #0
   18ec0:	ldr	x4, [x29, #144]
   18ec4:	ldr	x1, [x29, #120]
   18ec8:	ldr	x2, [x29, #128]
   18ecc:	ldr	x3, [x29, #208]
   18ed0:	str	x3, [sp, #32]
   18ed4:	str	x2, [sp, #24]
   18ed8:	str	x1, [sp, #16]
   18edc:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18ee0:	add	x1, x1, #0x108
   18ee4:	str	x1, [sp, #8]
   18ee8:	str	xzr, [sp]
   18eec:	mov	x7, #0x0                   	// #0
   18ef0:	mov	x6, x4
   18ef4:	mov	x5, x0
   18ef8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18efc:	add	x4, x0, #0x690
   18f00:	mov	w3, #0x23b                 	// #571
   18f04:	mov	x2, x8
   18f08:	ldr	w1, [x29, #76]
   18f0c:	ldr	w0, [x29, #72]
   18f10:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   18f14:	mov	w19, #0x0                   	// #0
   18f18:	add	x0, x29, #0x68
   18f1c:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   18f20:	mov	w1, w19
   18f24:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   18f28:	ldr	x0, [x0, #4016]
   18f2c:	ldr	x2, [x29, #264]
   18f30:	ldr	x0, [x0]
   18f34:	eor	x0, x2, x0
   18f38:	cmp	x0, #0x0
   18f3c:	b.eq	18f44 <udev_util_encode_string@@LIBUDEV_183+0xd714>  // b.none
   18f40:	bl	5390 <__stack_chk_fail@plt>
   18f44:	mov	w0, w1
   18f48:	mov	sp, x29
   18f4c:	ldr	x19, [sp, #16]
   18f50:	ldp	x29, x30, [sp], #272
   18f54:	ret
   18f58:	stp	x29, x30, [sp, #-48]!
   18f5c:	mov	x29, sp
   18f60:	str	x0, [sp, #24]
   18f64:	str	x1, [sp, #16]
   18f68:	ldr	x0, [sp, #24]
   18f6c:	cmp	x0, #0x0
   18f70:	cset	w0, ne  // ne = any
   18f74:	and	w0, w0, #0xff
   18f78:	and	x0, x0, #0xff
   18f7c:	cmp	x0, #0x0
   18f80:	b.ne	18fb4 <udev_util_encode_string@@LIBUDEV_183+0xd784>  // b.any
   18f84:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18f88:	add	x1, x0, #0xcab
   18f8c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   18f90:	add	x4, x0, #0x6a8
   18f94:	mov	w3, #0x244                 	// #580
   18f98:	mov	x2, x1
   18f9c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   18fa0:	add	x1, x0, #0xcd8
   18fa4:	mov	w0, #0x0                   	// #0
   18fa8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   18fac:	mov	w0, #0x1                   	// #1
   18fb0:	b	18fb8 <udev_util_encode_string@@LIBUDEV_183+0xd788>
   18fb4:	mov	w0, #0x0                   	// #0
   18fb8:	cmp	w0, #0x0
   18fbc:	b.eq	18fc8 <udev_util_encode_string@@LIBUDEV_183+0xd798>  // b.none
   18fc0:	mov	w0, #0xffffffea            	// #-22
   18fc4:	b	19020 <udev_util_encode_string@@LIBUDEV_183+0xd7f0>
   18fc8:	ldr	x0, [sp, #24]
   18fcc:	bl	186d0 <udev_util_encode_string@@LIBUDEV_183+0xcea0>
   18fd0:	str	w0, [sp, #44]
   18fd4:	ldr	w0, [sp, #44]
   18fd8:	cmp	w0, #0x0
   18fdc:	b.ge	18fe8 <udev_util_encode_string@@LIBUDEV_183+0xd7b8>  // b.tcont
   18fe0:	ldr	w0, [sp, #44]
   18fe4:	b	19020 <udev_util_encode_string@@LIBUDEV_183+0xd7f0>
   18fe8:	ldr	x0, [sp, #24]
   18fec:	ldr	w0, [x0, #180]
   18ff0:	cmp	w0, #0x0
   18ff4:	b.gt	19000 <udev_util_encode_string@@LIBUDEV_183+0xd7d0>
   18ff8:	mov	w0, #0xfffffffe            	// #-2
   18ffc:	b	19020 <udev_util_encode_string@@LIBUDEV_183+0xd7f0>
   19000:	ldr	x0, [sp, #16]
   19004:	cmp	x0, #0x0
   19008:	b.eq	1901c <udev_util_encode_string@@LIBUDEV_183+0xd7ec>  // b.none
   1900c:	ldr	x0, [sp, #24]
   19010:	ldr	w1, [x0, #180]
   19014:	ldr	x0, [sp, #16]
   19018:	str	w1, [x0]
   1901c:	mov	w0, #0x0                   	// #0
   19020:	ldp	x29, x30, [sp], #48
   19024:	ret
   19028:	mov	x12, #0x1090                	// #4240
   1902c:	sub	sp, sp, x12
   19030:	stp	x29, x30, [sp]
   19034:	mov	x29, sp
   19038:	str	x19, [sp, #16]
   1903c:	str	x0, [sp, #40]
   19040:	str	x1, [sp, #32]
   19044:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   19048:	ldr	x0, [x0, #4016]
   1904c:	ldr	x1, [x0]
   19050:	str	x1, [sp, #4232]
   19054:	mov	x1, #0x0                   	// #0
   19058:	ldr	x0, [sp, #40]
   1905c:	cmp	x0, #0x0
   19060:	cset	w0, ne  // ne = any
   19064:	and	w0, w0, #0xff
   19068:	and	x0, x0, #0xff
   1906c:	cmp	x0, #0x0
   19070:	b.ne	190a4 <udev_util_encode_string@@LIBUDEV_183+0xd874>  // b.any
   19074:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19078:	add	x1, x0, #0xcab
   1907c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19080:	add	x4, x0, #0x6c0
   19084:	mov	w3, #0x256                 	// #598
   19088:	mov	x2, x1
   1908c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19090:	add	x1, x0, #0xcd0
   19094:	mov	w0, #0x0                   	// #0
   19098:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1909c:	mov	w0, #0x1                   	// #1
   190a0:	b	190a8 <udev_util_encode_string@@LIBUDEV_183+0xd878>
   190a4:	mov	w0, #0x0                   	// #0
   190a8:	cmp	w0, #0x0
   190ac:	b.eq	190b8 <udev_util_encode_string@@LIBUDEV_183+0xd888>  // b.none
   190b0:	mov	w19, #0xffffffea            	// #-22
   190b4:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   190b8:	ldr	x0, [sp, #32]
   190bc:	cmp	x0, #0x0
   190c0:	cset	w0, ne  // ne = any
   190c4:	and	w0, w0, #0xff
   190c8:	and	x0, x0, #0xff
   190cc:	cmp	x0, #0x0
   190d0:	b.ne	19104 <udev_util_encode_string@@LIBUDEV_183+0xd8d4>  // b.any
   190d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   190d8:	add	x1, x0, #0xcab
   190dc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   190e0:	add	x4, x0, #0x6c0
   190e4:	mov	w3, #0x257                 	// #599
   190e8:	mov	x2, x1
   190ec:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   190f0:	add	x1, x0, #0x158
   190f4:	mov	w0, #0x0                   	// #0
   190f8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   190fc:	mov	w0, #0x1                   	// #1
   19100:	b	19108 <udev_util_encode_string@@LIBUDEV_183+0xd8d8>
   19104:	mov	w0, #0x0                   	// #0
   19108:	cmp	w0, #0x0
   1910c:	b.eq	19118 <udev_util_encode_string@@LIBUDEV_183+0xd8e8>  // b.none
   19110:	mov	w19, #0xffffffea            	// #-22
   19114:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   19118:	ldr	x0, [sp, #32]
   1911c:	ldrb	w0, [x0]
   19120:	cmp	w0, #0x6e
   19124:	b.eq	191b0 <udev_util_encode_string@@LIBUDEV_183+0xd980>  // b.none
   19128:	cmp	w0, #0x6e
   1912c:	b.gt	19358 <udev_util_encode_string@@LIBUDEV_183+0xdb28>
   19130:	cmp	w0, #0x2b
   19134:	b.eq	192ec <udev_util_encode_string@@LIBUDEV_183+0xdabc>  // b.none
   19138:	cmp	w0, #0x2b
   1913c:	b.lt	19358 <udev_util_encode_string@@LIBUDEV_183+0xdb28>  // b.tstop
   19140:	sub	w0, w0, #0x62
   19144:	cmp	w0, #0x1
   19148:	b.hi	19358 <udev_util_encode_string@@LIBUDEV_183+0xdb28>  // b.pmore
   1914c:	ldr	x0, [sp, #32]
   19150:	bl	15238 <udev_util_encode_string@@LIBUDEV_183+0x9a08>
   19154:	and	w0, w0, #0xff
   19158:	cmp	w0, #0x0
   1915c:	b.eq	19168 <udev_util_encode_string@@LIBUDEV_183+0xd938>  // b.none
   19160:	mov	w19, #0xffffffea            	// #-22
   19164:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   19168:	ldr	x0, [sp, #32]
   1916c:	add	x0, x0, #0x1
   19170:	add	x1, sp, #0x48
   19174:	bl	30814 <udev_util_encode_string@@LIBUDEV_183+0x24fe4>
   19178:	str	w0, [sp, #68]
   1917c:	ldr	w0, [sp, #68]
   19180:	cmp	w0, #0x0
   19184:	b.ge	19190 <udev_util_encode_string@@LIBUDEV_183+0xd960>  // b.tcont
   19188:	ldr	w19, [sp, #68]
   1918c:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   19190:	ldr	x0, [sp, #32]
   19194:	ldrb	w1, [x0]
   19198:	ldr	x0, [sp, #72]
   1919c:	mov	x2, x0
   191a0:	ldr	x0, [sp, #40]
   191a4:	bl	16334 <udev_util_encode_string@@LIBUDEV_183+0xab04>
   191a8:	mov	w19, w0
   191ac:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   191b0:	str	xzr, [sp, #72]
   191b4:	mov	w0, #0xffffffff            	// #-1
   191b8:	str	w0, [sp, #60]
   191bc:	stp	xzr, xzr, [sp, #96]
   191c0:	stp	xzr, xzr, [sp, #112]
   191c4:	str	xzr, [sp, #128]
   191c8:	ldr	x0, [sp, #32]
   191cc:	add	x2, x0, #0x1
   191d0:	add	x0, sp, #0x60
   191d4:	add	x0, x0, #0x10
   191d8:	mov	x1, x0
   191dc:	mov	x0, x2
   191e0:	bl	301c4 <udev_util_encode_string@@LIBUDEV_183+0x24994>
   191e4:	str	w0, [sp, #68]
   191e8:	ldr	w0, [sp, #68]
   191ec:	cmp	w0, #0x0
   191f0:	b.ge	191fc <udev_util_encode_string@@LIBUDEV_183+0xd9cc>  // b.tcont
   191f4:	ldr	w19, [sp, #68]
   191f8:	b	192d8 <udev_util_encode_string@@LIBUDEV_183+0xdaa8>
   191fc:	bl	33a68 <udev_util_encode_string@@LIBUDEV_183+0x28238>
   19200:	str	w0, [sp, #60]
   19204:	ldr	w0, [sp, #60]
   19208:	cmp	w0, #0x0
   1920c:	b.ge	19218 <udev_util_encode_string@@LIBUDEV_183+0xd9e8>  // b.tcont
   19210:	ldr	w19, [sp, #60]
   19214:	b	192d8 <udev_util_encode_string@@LIBUDEV_183+0xdaa8>
   19218:	ldr	w0, [sp, #60]
   1921c:	add	x1, sp, #0x60
   19220:	mov	x2, x1
   19224:	mov	x1, #0x8910                	// #35088
   19228:	bl	5860 <ioctl@plt>
   1922c:	str	w0, [sp, #68]
   19230:	ldr	w0, [sp, #68]
   19234:	cmp	w0, #0x0
   19238:	b.ge	1924c <udev_util_encode_string@@LIBUDEV_183+0xda1c>  // b.tcont
   1923c:	bl	57d0 <__errno_location@plt>
   19240:	ldr	w0, [x0]
   19244:	neg	w19, w0
   19248:	b	192d8 <udev_util_encode_string@@LIBUDEV_183+0xdaa8>
   1924c:	add	x0, sp, #0x60
   19250:	add	x3, sp, #0x48
   19254:	mov	x2, x0
   19258:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1925c:	add	x1, x0, #0x160
   19260:	mov	x0, x3
   19264:	bl	166dc <udev_util_encode_string@@LIBUDEV_183+0xaeac>
   19268:	str	w0, [sp, #68]
   1926c:	ldr	w0, [sp, #68]
   19270:	cmp	w0, #0x0
   19274:	b.ge	19280 <udev_util_encode_string@@LIBUDEV_183+0xda50>  // b.tcont
   19278:	ldr	w19, [sp, #68]
   1927c:	b	192d8 <udev_util_encode_string@@LIBUDEV_183+0xdaa8>
   19280:	ldr	x0, [sp, #72]
   19284:	add	x1, sp, #0x40
   19288:	bl	18f58 <udev_util_encode_string@@LIBUDEV_183+0xd728>
   1928c:	str	w0, [sp, #68]
   19290:	ldr	w0, [sp, #68]
   19294:	cmp	w0, #0x0
   19298:	b.ge	192a4 <udev_util_encode_string@@LIBUDEV_183+0xda74>  // b.tcont
   1929c:	ldr	w19, [sp, #68]
   192a0:	b	192d8 <udev_util_encode_string@@LIBUDEV_183+0xdaa8>
   192a4:	ldr	w1, [sp, #112]
   192a8:	ldr	w0, [sp, #64]
   192ac:	cmp	w1, w0
   192b0:	b.eq	192bc <udev_util_encode_string@@LIBUDEV_183+0xda8c>  // b.none
   192b4:	mov	w19, #0xffffffed            	// #-19
   192b8:	b	192d8 <udev_util_encode_string@@LIBUDEV_183+0xdaa8>
   192bc:	ldr	x0, [sp, #72]
   192c0:	str	x0, [sp, #80]
   192c4:	str	xzr, [sp, #72]
   192c8:	ldr	x1, [sp, #80]
   192cc:	ldr	x0, [sp, #40]
   192d0:	str	x1, [x0]
   192d4:	mov	w19, #0x0                   	// #0
   192d8:	add	x0, sp, #0x3c
   192dc:	bl	15278 <udev_util_encode_string@@LIBUDEV_183+0x9a48>
   192e0:	add	x0, sp, #0x48
   192e4:	bl	14f18 <udev_util_encode_string@@LIBUDEV_183+0x96e8>
   192e8:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   192ec:	ldr	x0, [sp, #32]
   192f0:	add	x1, x0, #0x1
   192f4:	add	x0, sp, #0x88
   192f8:	mov	x2, x1
   192fc:	mov	x1, #0x1000                	// #4096
   19300:	bl	35078 <udev_util_encode_string@@LIBUDEV_183+0x29848>
   19304:	add	x0, sp, #0x88
   19308:	mov	w1, #0x3a                  	// #58
   1930c:	bl	5570 <strchr@plt>
   19310:	str	x0, [sp, #88]
   19314:	ldr	x0, [sp, #88]
   19318:	cmp	x0, #0x0
   1931c:	b.ne	19328 <udev_util_encode_string@@LIBUDEV_183+0xdaf8>  // b.any
   19320:	mov	w19, #0xffffffea            	// #-22
   19324:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   19328:	ldr	x0, [sp, #88]
   1932c:	strb	wzr, [x0]
   19330:	ldr	x0, [sp, #88]
   19334:	add	x0, x0, #0x1
   19338:	str	x0, [sp, #88]
   1933c:	add	x0, sp, #0x88
   19340:	ldr	x2, [sp, #88]
   19344:	mov	x1, x0
   19348:	ldr	x0, [sp, #40]
   1934c:	bl	166dc <udev_util_encode_string@@LIBUDEV_183+0xaeac>
   19350:	mov	w19, w0
   19354:	b	1935c <udev_util_encode_string@@LIBUDEV_183+0xdb2c>
   19358:	mov	w19, #0xffffffea            	// #-22
   1935c:	mov	w1, w19
   19360:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   19364:	ldr	x0, [x0, #4016]
   19368:	ldr	x2, [sp, #4232]
   1936c:	ldr	x0, [x0]
   19370:	eor	x0, x2, x0
   19374:	cmp	x0, #0x0
   19378:	b.eq	19380 <udev_util_encode_string@@LIBUDEV_183+0xdb50>  // b.none
   1937c:	bl	5390 <__stack_chk_fail@plt>
   19380:	mov	w0, w1
   19384:	ldr	x19, [sp, #16]
   19388:	ldp	x29, x30, [sp]
   1938c:	mov	x12, #0x1090                	// #4240
   19390:	add	sp, sp, x12
   19394:	ret
   19398:	stp	x29, x30, [sp, #-32]!
   1939c:	mov	x29, sp
   193a0:	str	x0, [sp, #24]
   193a4:	str	x1, [sp, #16]
   193a8:	ldr	x0, [sp, #24]
   193ac:	cmp	x0, #0x0
   193b0:	cset	w0, ne  // ne = any
   193b4:	and	w0, w0, #0xff
   193b8:	and	x0, x0, #0xff
   193bc:	cmp	x0, #0x0
   193c0:	b.ne	193f4 <udev_util_encode_string@@LIBUDEV_183+0xdbc4>  // b.any
   193c4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   193c8:	add	x1, x0, #0xcab
   193cc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   193d0:	add	x4, x0, #0x6e0
   193d4:	mov	w3, #0x29f                 	// #671
   193d8:	mov	x2, x1
   193dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   193e0:	add	x1, x0, #0xcd8
   193e4:	mov	w0, #0x0                   	// #0
   193e8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   193ec:	mov	w0, #0x1                   	// #1
   193f0:	b	193f8 <udev_util_encode_string@@LIBUDEV_183+0xdbc8>
   193f4:	mov	w0, #0x0                   	// #0
   193f8:	cmp	w0, #0x0
   193fc:	b.eq	19408 <udev_util_encode_string@@LIBUDEV_183+0xdbd8>  // b.none
   19400:	mov	w0, #0xffffffea            	// #-22
   19404:	b	194d4 <udev_util_encode_string@@LIBUDEV_183+0xdca4>
   19408:	ldr	x0, [sp, #16]
   1940c:	cmp	x0, #0x0
   19410:	cset	w0, ne  // ne = any
   19414:	and	w0, w0, #0xff
   19418:	and	x0, x0, #0xff
   1941c:	cmp	x0, #0x0
   19420:	b.ne	19454 <udev_util_encode_string@@LIBUDEV_183+0xdc24>  // b.any
   19424:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19428:	add	x1, x0, #0xcab
   1942c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19430:	add	x4, x0, #0x6e0
   19434:	mov	w3, #0x2a0                 	// #672
   19438:	mov	x2, x1
   1943c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19440:	add	x1, x0, #0xcd0
   19444:	mov	w0, #0x0                   	// #0
   19448:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1944c:	mov	w0, #0x1                   	// #1
   19450:	b	19458 <udev_util_encode_string@@LIBUDEV_183+0xdc28>
   19454:	mov	w0, #0x0                   	// #0
   19458:	cmp	w0, #0x0
   1945c:	b.eq	19468 <udev_util_encode_string@@LIBUDEV_183+0xdc38>  // b.none
   19460:	mov	w0, #0xffffffea            	// #-22
   19464:	b	194d4 <udev_util_encode_string@@LIBUDEV_183+0xdca4>
   19468:	ldr	x0, [sp, #24]
   1946c:	ldr	x2, [x0, #232]
   19470:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19474:	add	x1, x0, #0xd08
   19478:	mov	x0, x2
   1947c:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   19480:	cmp	x0, #0x0
   19484:	cset	w0, eq  // eq = none
   19488:	and	w0, w0, #0xff
   1948c:	and	x0, x0, #0xff
   19490:	cmp	x0, #0x0
   19494:	b.eq	194c0 <udev_util_encode_string@@LIBUDEV_183+0xdc90>  // b.none
   19498:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1949c:	add	x1, x0, #0xcab
   194a0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   194a4:	add	x4, x0, #0x6e0
   194a8:	mov	w3, #0x2a2                 	// #674
   194ac:	mov	x2, x1
   194b0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   194b4:	add	x1, x0, #0x168
   194b8:	mov	w0, #0x0                   	// #0
   194bc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   194c0:	ldr	x0, [sp, #24]
   194c4:	ldr	x1, [x0, #232]
   194c8:	ldr	x0, [sp, #16]
   194cc:	str	x1, [x0]
   194d0:	mov	w0, #0x0                   	// #0
   194d4:	ldp	x29, x30, [sp], #32
   194d8:	ret
   194dc:	stp	x29, x30, [sp, #-96]!
   194e0:	mov	x29, sp
   194e4:	str	x19, [sp, #16]
   194e8:	str	x0, [sp, #40]
   194ec:	str	x1, [sp, #32]
   194f0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   194f4:	ldr	x0, [x0, #4016]
   194f8:	ldr	x1, [x0]
   194fc:	str	x1, [sp, #88]
   19500:	mov	x1, #0x0                   	// #0
   19504:	str	xzr, [sp, #56]
   19508:	ldr	x0, [sp, #40]
   1950c:	cmp	x0, #0x0
   19510:	cset	w0, eq  // eq = none
   19514:	and	w0, w0, #0xff
   19518:	and	x0, x0, #0xff
   1951c:	cmp	x0, #0x0
   19520:	b.eq	1954c <udev_util_encode_string@@LIBUDEV_183+0xdd1c>  // b.none
   19524:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19528:	add	x1, x0, #0xcab
   1952c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19530:	add	x4, x0, #0x6f8
   19534:	mov	w3, #0x2ae                 	// #686
   19538:	mov	x2, x1
   1953c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19540:	add	x1, x0, #0xcd0
   19544:	mov	w0, #0x0                   	// #0
   19548:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1954c:	ldr	x0, [sp, #32]
   19550:	cmp	x0, #0x0
   19554:	cset	w0, eq  // eq = none
   19558:	and	w0, w0, #0xff
   1955c:	and	x0, x0, #0xff
   19560:	cmp	x0, #0x0
   19564:	b.eq	19590 <udev_util_encode_string@@LIBUDEV_183+0xdd60>  // b.none
   19568:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1956c:	add	x1, x0, #0xcab
   19570:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19574:	add	x4, x0, #0x6f8
   19578:	mov	w3, #0x2af                 	// #687
   1957c:	mov	x2, x1
   19580:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19584:	add	x1, x0, #0x198
   19588:	mov	w0, #0x0                   	// #0
   1958c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   19590:	add	x0, sp, #0x40
   19594:	mov	x1, x0
   19598:	ldr	x0, [sp, #32]
   1959c:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   195a0:	str	w0, [sp, #52]
   195a4:	ldr	w0, [sp, #52]
   195a8:	cmp	w0, #0x0
   195ac:	b.ge	195b8 <udev_util_encode_string@@LIBUDEV_183+0xdd88>  // b.tcont
   195b0:	ldr	w19, [sp, #52]
   195b4:	b	1964c <udev_util_encode_string@@LIBUDEV_183+0xde1c>
   195b8:	ldr	x0, [sp, #64]
   195bc:	bl	5370 <strdup@plt>
   195c0:	str	x0, [sp, #56]
   195c4:	ldr	x0, [sp, #56]
   195c8:	cmp	x0, #0x0
   195cc:	b.ne	195d8 <udev_util_encode_string@@LIBUDEV_183+0xdda8>  // b.any
   195d0:	mov	w19, #0xfffffff4            	// #-12
   195d4:	b	1964c <udev_util_encode_string@@LIBUDEV_183+0xde1c>
   195d8:	ldr	x0, [sp, #56]
   195dc:	add	x0, x0, #0x4
   195e0:	str	x0, [sp, #72]
   195e4:	mov	w1, #0x2f                  	// #47
   195e8:	ldr	x0, [sp, #72]
   195ec:	bl	53b0 <strrchr@plt>
   195f0:	str	x0, [sp, #80]
   195f4:	ldr	x0, [sp, #80]
   195f8:	cmp	x0, #0x0
   195fc:	b.eq	19648 <udev_util_encode_string@@LIBUDEV_183+0xde18>  // b.none
   19600:	ldr	x0, [sp, #72]
   19604:	add	x0, x0, #0x2
   19608:	ldr	x1, [sp, #80]
   1960c:	cmp	x1, x0
   19610:	b.cc	19648 <udev_util_encode_string@@LIBUDEV_183+0xde18>  // b.lo, b.ul, b.last
   19614:	ldr	x0, [sp, #80]
   19618:	strb	wzr, [x0]
   1961c:	ldr	x0, [sp, #56]
   19620:	mov	x1, x0
   19624:	ldr	x0, [sp, #40]
   19628:	bl	161a8 <udev_util_encode_string@@LIBUDEV_183+0xa978>
   1962c:	str	w0, [sp, #52]
   19630:	ldr	w0, [sp, #52]
   19634:	cmp	w0, #0x0
   19638:	b.ge	19640 <udev_util_encode_string@@LIBUDEV_183+0xde10>  // b.tcont
   1963c:	b	195e4 <udev_util_encode_string@@LIBUDEV_183+0xddb4>
   19640:	mov	w19, #0x0                   	// #0
   19644:	b	1964c <udev_util_encode_string@@LIBUDEV_183+0xde1c>
   19648:	mov	w19, #0xffffffed            	// #-19
   1964c:	add	x0, sp, #0x38
   19650:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   19654:	mov	w1, w19
   19658:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1965c:	ldr	x0, [x0, #4016]
   19660:	ldr	x2, [sp, #88]
   19664:	ldr	x0, [x0]
   19668:	eor	x0, x2, x0
   1966c:	cmp	x0, #0x0
   19670:	b.eq	19678 <udev_util_encode_string@@LIBUDEV_183+0xde48>  // b.none
   19674:	bl	5390 <__stack_chk_fail@plt>
   19678:	mov	w0, w1
   1967c:	ldr	x19, [sp, #16]
   19680:	ldp	x29, x30, [sp], #96
   19684:	ret
   19688:	stp	x29, x30, [sp, #-32]!
   1968c:	mov	x29, sp
   19690:	str	x0, [sp, #24]
   19694:	str	x1, [sp, #16]
   19698:	ldr	x0, [sp, #16]
   1969c:	cmp	x0, #0x0
   196a0:	cset	w0, ne  // ne = any
   196a4:	and	w0, w0, #0xff
   196a8:	and	x0, x0, #0xff
   196ac:	cmp	x0, #0x0
   196b0:	b.ne	196e4 <udev_util_encode_string@@LIBUDEV_183+0xdeb4>  // b.any
   196b4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   196b8:	add	x1, x0, #0xcab
   196bc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   196c0:	add	x4, x0, #0x710
   196c4:	mov	w3, #0x2cf                 	// #719
   196c8:	mov	x2, x1
   196cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   196d0:	add	x1, x0, #0xcd0
   196d4:	mov	w0, #0x0                   	// #0
   196d8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   196dc:	mov	w0, #0x1                   	// #1
   196e0:	b	196e8 <udev_util_encode_string@@LIBUDEV_183+0xdeb8>
   196e4:	mov	w0, #0x0                   	// #0
   196e8:	cmp	w0, #0x0
   196ec:	b.eq	196f8 <udev_util_encode_string@@LIBUDEV_183+0xdec8>  // b.none
   196f0:	mov	w0, #0xffffffea            	// #-22
   196f4:	b	197c4 <udev_util_encode_string@@LIBUDEV_183+0xdf94>
   196f8:	ldr	x0, [sp, #24]
   196fc:	cmp	x0, #0x0
   19700:	cset	w0, ne  // ne = any
   19704:	and	w0, w0, #0xff
   19708:	and	x0, x0, #0xff
   1970c:	cmp	x0, #0x0
   19710:	b.ne	19744 <udev_util_encode_string@@LIBUDEV_183+0xdf14>  // b.any
   19714:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19718:	add	x1, x0, #0xcab
   1971c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19720:	add	x4, x0, #0x710
   19724:	mov	w3, #0x2d0                 	// #720
   19728:	mov	x2, x1
   1972c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19730:	add	x1, x0, #0x198
   19734:	mov	w0, #0x0                   	// #0
   19738:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1973c:	mov	w0, #0x1                   	// #1
   19740:	b	19748 <udev_util_encode_string@@LIBUDEV_183+0xdf18>
   19744:	mov	w0, #0x0                   	// #0
   19748:	cmp	w0, #0x0
   1974c:	b.eq	19758 <udev_util_encode_string@@LIBUDEV_183+0xdf28>  // b.none
   19750:	mov	w0, #0xffffffea            	// #-22
   19754:	b	197c4 <udev_util_encode_string@@LIBUDEV_183+0xdf94>
   19758:	ldr	x0, [sp, #24]
   1975c:	ldrb	w0, [x0, #328]
   19760:	ubfx	x0, x0, #0, #1
   19764:	and	w0, w0, #0xff
   19768:	eor	w0, w0, #0x1
   1976c:	and	w0, w0, #0xff
   19770:	cmp	w0, #0x0
   19774:	b.eq	19798 <udev_util_encode_string@@LIBUDEV_183+0xdf68>  // b.none
   19778:	ldr	x0, [sp, #24]
   1977c:	ldrb	w1, [x0, #328]
   19780:	orr	w1, w1, #0x1
   19784:	strb	w1, [x0, #328]
   19788:	ldr	x0, [sp, #24]
   1978c:	add	x0, x0, #0x8
   19790:	ldr	x1, [sp, #24]
   19794:	bl	194dc <udev_util_encode_string@@LIBUDEV_183+0xdcac>
   19798:	ldr	x0, [sp, #24]
   1979c:	ldr	x0, [x0, #8]
   197a0:	cmp	x0, #0x0
   197a4:	b.ne	197b0 <udev_util_encode_string@@LIBUDEV_183+0xdf80>  // b.any
   197a8:	mov	w0, #0xfffffffe            	// #-2
   197ac:	b	197c4 <udev_util_encode_string@@LIBUDEV_183+0xdf94>
   197b0:	ldr	x0, [sp, #24]
   197b4:	ldr	x1, [x0, #8]
   197b8:	ldr	x0, [sp, #16]
   197bc:	str	x1, [x0]
   197c0:	mov	w0, #0x0                   	// #0
   197c4:	ldp	x29, x30, [sp], #32
   197c8:	ret
   197cc:	stp	x29, x30, [sp, #-80]!
   197d0:	mov	x29, sp
   197d4:	str	x19, [sp, #16]
   197d8:	str	x0, [sp, #40]
   197dc:	str	x1, [sp, #32]
   197e0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   197e4:	ldr	x0, [x0, #4016]
   197e8:	ldr	x1, [x0]
   197ec:	str	x1, [sp, #72]
   197f0:	mov	x1, #0x0                   	// #0
   197f4:	str	xzr, [sp, #64]
   197f8:	ldr	x0, [sp, #40]
   197fc:	cmp	x0, #0x0
   19800:	cset	w0, eq  // eq = none
   19804:	and	w0, w0, #0xff
   19808:	and	x0, x0, #0xff
   1980c:	cmp	x0, #0x0
   19810:	b.eq	1983c <udev_util_encode_string@@LIBUDEV_183+0xe00c>  // b.none
   19814:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19818:	add	x1, x0, #0xcab
   1981c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19820:	add	x4, x0, #0x728
   19824:	mov	w3, #0x2e3                 	// #739
   19828:	mov	x2, x1
   1982c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19830:	add	x1, x0, #0xcd8
   19834:	mov	w0, #0x0                   	// #0
   19838:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1983c:	ldr	x0, [sp, #32]
   19840:	cmp	x0, #0x0
   19844:	cset	w0, eq  // eq = none
   19848:	and	w0, w0, #0xff
   1984c:	and	x0, x0, #0xff
   19850:	cmp	x0, #0x0
   19854:	b.eq	19880 <udev_util_encode_string@@LIBUDEV_183+0xe050>  // b.none
   19858:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1985c:	add	x1, x0, #0xcab
   19860:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19864:	add	x4, x0, #0x728
   19868:	mov	w3, #0x2e4                 	// #740
   1986c:	mov	x2, x1
   19870:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19874:	add	x1, x0, #0x1a0
   19878:	mov	w0, #0x0                   	// #0
   1987c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   19880:	ldr	x0, [sp, #32]
   19884:	bl	5370 <strdup@plt>
   19888:	str	x0, [sp, #64]
   1988c:	ldr	x0, [sp, #64]
   19890:	cmp	x0, #0x0
   19894:	b.ne	198a0 <udev_util_encode_string@@LIBUDEV_183+0xe070>  // b.any
   19898:	mov	w19, #0xfffffff4            	// #-12
   1989c:	b	19904 <udev_util_encode_string@@LIBUDEV_183+0xe0d4>
   198a0:	ldr	x0, [sp, #64]
   198a4:	mov	x2, x0
   198a8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   198ac:	add	x1, x0, #0x1b0
   198b0:	ldr	x0, [sp, #40]
   198b4:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   198b8:	str	w0, [sp, #60]
   198bc:	ldr	w0, [sp, #60]
   198c0:	cmp	w0, #0x0
   198c4:	b.ge	198d0 <udev_util_encode_string@@LIBUDEV_183+0xe0a0>  // b.tcont
   198c8:	ldr	w19, [sp, #60]
   198cc:	b	19904 <udev_util_encode_string@@LIBUDEV_183+0xe0d4>
   198d0:	ldr	x0, [sp, #40]
   198d4:	ldrb	w1, [x0, #328]
   198d8:	orr	w1, w1, #0x40
   198dc:	strb	w1, [x0, #328]
   198e0:	ldr	x0, [sp, #40]
   198e4:	ldr	x0, [x0, #264]
   198e8:	bl	54b0 <free@plt>
   198ec:	ldr	x1, [sp, #64]
   198f0:	ldr	x0, [sp, #40]
   198f4:	str	x1, [x0, #264]
   198f8:	str	xzr, [sp, #64]
   198fc:	mov	w19, #0x0                   	// #0
   19900:	nop
   19904:	add	x0, sp, #0x40
   19908:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1990c:	mov	w1, w19
   19910:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   19914:	ldr	x0, [x0, #4016]
   19918:	ldr	x2, [sp, #72]
   1991c:	ldr	x0, [x0]
   19920:	eor	x0, x2, x0
   19924:	cmp	x0, #0x0
   19928:	b.eq	19930 <udev_util_encode_string@@LIBUDEV_183+0xe100>  // b.none
   1992c:	bl	5390 <__stack_chk_fail@plt>
   19930:	mov	w0, w1
   19934:	ldr	x19, [sp, #16]
   19938:	ldp	x29, x30, [sp], #80
   1993c:	ret
   19940:	stp	x29, x30, [sp, #-80]!
   19944:	mov	x29, sp
   19948:	str	x19, [sp, #16]
   1994c:	str	x0, [sp, #40]
   19950:	str	x1, [sp, #32]
   19954:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   19958:	ldr	x0, [x0, #4016]
   1995c:	ldr	x1, [x0]
   19960:	str	x1, [sp, #72]
   19964:	mov	x1, #0x0                   	// #0
   19968:	str	xzr, [sp, #64]
   1996c:	ldr	x0, [sp, #40]
   19970:	cmp	x0, #0x0
   19974:	cset	w0, eq  // eq = none
   19978:	and	w0, w0, #0xff
   1997c:	and	x0, x0, #0xff
   19980:	cmp	x0, #0x0
   19984:	b.eq	199b0 <udev_util_encode_string@@LIBUDEV_183+0xe180>  // b.none
   19988:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1998c:	add	x1, x0, #0xcab
   19990:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19994:	add	x4, x0, #0x740
   19998:	mov	w3, #0x2f6                 	// #758
   1999c:	mov	x2, x1
   199a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   199a4:	add	x1, x0, #0xcd8
   199a8:	mov	w0, #0x0                   	// #0
   199ac:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   199b0:	ldr	x0, [sp, #32]
   199b4:	cmp	x0, #0x0
   199b8:	cset	w0, eq  // eq = none
   199bc:	and	w0, w0, #0xff
   199c0:	and	x0, x0, #0xff
   199c4:	cmp	x0, #0x0
   199c8:	b.eq	199f4 <udev_util_encode_string@@LIBUDEV_183+0xe1c4>  // b.none
   199cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   199d0:	add	x1, x0, #0xcab
   199d4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   199d8:	add	x4, x0, #0x740
   199dc:	mov	w3, #0x2f7                 	// #759
   199e0:	mov	x2, x1
   199e4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   199e8:	add	x1, x0, #0x1a0
   199ec:	mov	w0, #0x0                   	// #0
   199f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   199f4:	ldr	x0, [sp, #32]
   199f8:	ldrb	w0, [x0]
   199fc:	cmp	w0, #0x0
   19a00:	cset	w0, eq  // eq = none
   19a04:	and	w0, w0, #0xff
   19a08:	and	x0, x0, #0xff
   19a0c:	cmp	x0, #0x0
   19a10:	b.eq	19a3c <udev_util_encode_string@@LIBUDEV_183+0xe20c>  // b.none
   19a14:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19a18:	add	x1, x0, #0xcab
   19a1c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19a20:	add	x4, x0, #0x740
   19a24:	mov	w3, #0x2f8                 	// #760
   19a28:	mov	x2, x1
   19a2c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19a30:	add	x1, x0, #0x1c0
   19a34:	mov	w0, #0x0                   	// #0
   19a38:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   19a3c:	ldr	x0, [sp, #32]
   19a40:	bl	5370 <strdup@plt>
   19a44:	str	x0, [sp, #64]
   19a48:	ldr	x0, [sp, #64]
   19a4c:	cmp	x0, #0x0
   19a50:	b.ne	19a5c <udev_util_encode_string@@LIBUDEV_183+0xe22c>  // b.any
   19a54:	mov	w19, #0xfffffff4            	// #-12
   19a58:	b	19aa8 <udev_util_encode_string@@LIBUDEV_183+0xe278>
   19a5c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19a60:	add	x1, x0, #0xf60
   19a64:	ldr	x0, [sp, #40]
   19a68:	bl	197cc <udev_util_encode_string@@LIBUDEV_183+0xdf9c>
   19a6c:	str	w0, [sp, #60]
   19a70:	ldr	w0, [sp, #60]
   19a74:	cmp	w0, #0x0
   19a78:	b.ge	19a84 <udev_util_encode_string@@LIBUDEV_183+0xe254>  // b.tcont
   19a7c:	ldr	w19, [sp, #60]
   19a80:	b	19aa8 <udev_util_encode_string@@LIBUDEV_183+0xe278>
   19a84:	ldr	x0, [sp, #40]
   19a88:	ldr	x0, [x0, #272]
   19a8c:	bl	54b0 <free@plt>
   19a90:	ldr	x1, [sp, #64]
   19a94:	ldr	x0, [sp, #40]
   19a98:	str	x1, [x0, #272]
   19a9c:	str	xzr, [sp, #64]
   19aa0:	mov	w19, #0x0                   	// #0
   19aa4:	nop
   19aa8:	add	x0, sp, #0x40
   19aac:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   19ab0:	mov	w1, w19
   19ab4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   19ab8:	ldr	x0, [x0, #4016]
   19abc:	ldr	x2, [sp, #72]
   19ac0:	ldr	x0, [x0]
   19ac4:	eor	x0, x2, x0
   19ac8:	cmp	x0, #0x0
   19acc:	b.eq	19ad4 <udev_util_encode_string@@LIBUDEV_183+0xe2a4>  // b.none
   19ad0:	bl	5390 <__stack_chk_fail@plt>
   19ad4:	mov	w0, w1
   19ad8:	ldr	x19, [sp, #16]
   19adc:	ldp	x29, x30, [sp], #80
   19ae0:	ret
   19ae4:	stp	x29, x30, [sp, #-224]!
   19ae8:	mov	x29, sp
   19aec:	stp	x19, x20, [sp, #16]
   19af0:	sub	sp, sp, #0x20
   19af4:	str	x0, [x29, #40]
   19af8:	str	x1, [x29, #32]
   19afc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   19b00:	ldr	x0, [x0, #4016]
   19b04:	ldr	x1, [x0]
   19b08:	str	x1, [x29, #216]
   19b0c:	mov	x1, #0x0                   	// #0
   19b10:	str	xzr, [x29, #104]
   19b14:	ldr	x0, [x29, #32]
   19b18:	cmp	x0, #0x0
   19b1c:	cset	w0, ne  // ne = any
   19b20:	and	w0, w0, #0xff
   19b24:	and	x0, x0, #0xff
   19b28:	cmp	x0, #0x0
   19b2c:	b.ne	19b60 <udev_util_encode_string@@LIBUDEV_183+0xe330>  // b.any
   19b30:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19b34:	add	x1, x0, #0xcab
   19b38:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19b3c:	add	x4, x0, #0x760
   19b40:	mov	w3, #0x309                 	// #777
   19b44:	mov	x2, x1
   19b48:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19b4c:	add	x1, x0, #0xcd0
   19b50:	mov	w0, #0x0                   	// #0
   19b54:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   19b58:	mov	w0, #0x1                   	// #1
   19b5c:	b	19b64 <udev_util_encode_string@@LIBUDEV_183+0xe334>
   19b60:	mov	w0, #0x0                   	// #0
   19b64:	cmp	w0, #0x0
   19b68:	b.eq	19b74 <udev_util_encode_string@@LIBUDEV_183+0xe344>  // b.none
   19b6c:	mov	w19, #0xffffffea            	// #-22
   19b70:	b	1a1d0 <udev_util_encode_string@@LIBUDEV_183+0xe9a0>
   19b74:	ldr	x0, [x29, #40]
   19b78:	cmp	x0, #0x0
   19b7c:	cset	w0, ne  // ne = any
   19b80:	and	w0, w0, #0xff
   19b84:	and	x0, x0, #0xff
   19b88:	cmp	x0, #0x0
   19b8c:	b.ne	19bc0 <udev_util_encode_string@@LIBUDEV_183+0xe390>  // b.any
   19b90:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19b94:	add	x1, x0, #0xcab
   19b98:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19b9c:	add	x4, x0, #0x760
   19ba0:	mov	w3, #0x30a                 	// #778
   19ba4:	mov	x2, x1
   19ba8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19bac:	add	x1, x0, #0xcd8
   19bb0:	mov	w0, #0x0                   	// #0
   19bb4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   19bb8:	mov	w0, #0x1                   	// #1
   19bbc:	b	19bc4 <udev_util_encode_string@@LIBUDEV_183+0xe394>
   19bc0:	mov	w0, #0x0                   	// #0
   19bc4:	cmp	w0, #0x0
   19bc8:	b.eq	19bd4 <udev_util_encode_string@@LIBUDEV_183+0xe3a4>  // b.none
   19bcc:	mov	w19, #0xffffffea            	// #-22
   19bd0:	b	1a1d0 <udev_util_encode_string@@LIBUDEV_183+0xe9a0>
   19bd4:	add	x0, x29, #0x50
   19bd8:	mov	x1, x0
   19bdc:	ldr	x0, [x29, #40]
   19be0:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   19be4:	str	w0, [x29, #60]
   19be8:	ldr	w0, [x29, #60]
   19bec:	cmp	w0, #0x0
   19bf0:	b.ge	19bfc <udev_util_encode_string@@LIBUDEV_183+0xe3cc>  // b.tcont
   19bf4:	ldr	w19, [x29, #60]
   19bf8:	b	1a1d0 <udev_util_encode_string@@LIBUDEV_183+0xe9a0>
   19bfc:	ldr	x0, [x29, #40]
   19c00:	ldrb	w0, [x0, #328]
   19c04:	ubfx	x0, x0, #6, #1
   19c08:	and	w0, w0, #0xff
   19c0c:	eor	w0, w0, #0x1
   19c10:	and	w0, w0, #0xff
   19c14:	cmp	w0, #0x0
   19c18:	b.eq	19fb4 <udev_util_encode_string@@LIBUDEV_183+0xe784>  // b.none
   19c1c:	str	xzr, [x29, #88]
   19c20:	ldr	x0, [x29, #80]
   19c24:	str	x0, [x29, #184]
   19c28:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19c2c:	add	x0, x0, #0x1d0
   19c30:	str	x0, [x29, #192]
   19c34:	str	xzr, [x29, #120]
   19c38:	str	xzr, [x29, #128]
   19c3c:	b	19c70 <udev_util_encode_string@@LIBUDEV_183+0xe440>
   19c40:	ldr	x0, [x29, #128]
   19c44:	lsl	x0, x0, #3
   19c48:	add	x1, x29, #0xb8
   19c4c:	ldr	x0, [x1, x0]
   19c50:	bl	5040 <strlen@plt>
   19c54:	mov	x1, x0
   19c58:	ldr	x0, [x29, #120]
   19c5c:	add	x0, x0, x1
   19c60:	str	x0, [x29, #120]
   19c64:	ldr	x0, [x29, #128]
   19c68:	add	x0, x0, #0x1
   19c6c:	str	x0, [x29, #128]
   19c70:	ldr	x0, [x29, #128]
   19c74:	cmp	x0, #0x1
   19c78:	b.hi	19c94 <udev_util_encode_string@@LIBUDEV_183+0xe464>  // b.pmore
   19c7c:	ldr	x0, [x29, #128]
   19c80:	lsl	x0, x0, #3
   19c84:	add	x1, x29, #0xb8
   19c88:	ldr	x0, [x1, x0]
   19c8c:	cmp	x0, #0x0
   19c90:	b.ne	19c40 <udev_util_encode_string@@LIBUDEV_183+0xe410>  // b.any
   19c94:	ldr	x0, [x29, #120]
   19c98:	add	x0, x0, #0x1
   19c9c:	str	x0, [x29, #136]
   19ca0:	ldr	x1, [x29, #136]
   19ca4:	mov	x0, #0x1                   	// #1
   19ca8:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   19cac:	and	w0, w0, #0xff
   19cb0:	and	x0, x0, #0xff
   19cb4:	cmp	x0, #0x0
   19cb8:	b.eq	19ce4 <udev_util_encode_string@@LIBUDEV_183+0xe4b4>  // b.none
   19cbc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19cc0:	add	x1, x0, #0xcab
   19cc4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19cc8:	add	x4, x0, #0x760
   19ccc:	mov	w3, #0x315                 	// #789
   19cd0:	mov	x2, x1
   19cd4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19cd8:	add	x1, x0, #0xe18
   19cdc:	mov	w0, #0x0                   	// #0
   19ce0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   19ce4:	ldr	x0, [x29, #136]
   19ce8:	cmp	x0, #0x400, lsl #12
   19cec:	cset	w0, hi  // hi = pmore
   19cf0:	and	w0, w0, #0xff
   19cf4:	and	x0, x0, #0xff
   19cf8:	cmp	x0, #0x0
   19cfc:	b.eq	19d28 <udev_util_encode_string@@LIBUDEV_183+0xe4f8>  // b.none
   19d00:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19d04:	add	x1, x0, #0xcab
   19d08:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19d0c:	add	x4, x0, #0x760
   19d10:	mov	w3, #0x315                 	// #789
   19d14:	mov	x2, x1
   19d18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19d1c:	add	x1, x0, #0xe48
   19d20:	mov	w0, #0x0                   	// #0
   19d24:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   19d28:	ldr	x0, [x29, #136]
   19d2c:	add	x0, x0, #0xf
   19d30:	lsr	x0, x0, #4
   19d34:	lsl	x0, x0, #4
   19d38:	sub	sp, sp, x0
   19d3c:	add	x0, sp, #0x20
   19d40:	add	x0, x0, #0xf
   19d44:	lsr	x0, x0, #4
   19d48:	lsl	x0, x0, #4
   19d4c:	str	x0, [x29, #144]
   19d50:	ldr	x0, [x29, #144]
   19d54:	str	x0, [x29, #112]
   19d58:	str	xzr, [x29, #128]
   19d5c:	b	19d8c <udev_util_encode_string@@LIBUDEV_183+0xe55c>
   19d60:	ldr	x0, [x29, #128]
   19d64:	lsl	x0, x0, #3
   19d68:	add	x1, x29, #0xb8
   19d6c:	ldr	x0, [x1, x0]
   19d70:	mov	x1, x0
   19d74:	ldr	x0, [x29, #112]
   19d78:	bl	51b0 <stpcpy@plt>
   19d7c:	str	x0, [x29, #112]
   19d80:	ldr	x0, [x29, #128]
   19d84:	add	x0, x0, #0x1
   19d88:	str	x0, [x29, #128]
   19d8c:	ldr	x0, [x29, #128]
   19d90:	cmp	x0, #0x1
   19d94:	b.hi	19db0 <udev_util_encode_string@@LIBUDEV_183+0xe580>  // b.pmore
   19d98:	ldr	x0, [x29, #128]
   19d9c:	lsl	x0, x0, #3
   19da0:	add	x1, x29, #0xb8
   19da4:	ldr	x0, [x1, x0]
   19da8:	cmp	x0, #0x0
   19dac:	b.ne	19d60 <udev_util_encode_string@@LIBUDEV_183+0xe530>  // b.any
   19db0:	ldr	x0, [x29, #112]
   19db4:	strb	wzr, [x0]
   19db8:	ldr	x0, [x29, #144]
   19dbc:	str	x0, [x29, #152]
   19dc0:	add	x0, x29, #0x58
   19dc4:	mov	x1, x0
   19dc8:	ldr	x0, [x29, #152]
   19dcc:	bl	257dc <udev_util_encode_string@@LIBUDEV_183+0x19fac>
   19dd0:	str	w0, [x29, #60]
   19dd4:	ldr	w0, [x29, #60]
   19dd8:	cmp	w0, #0x0
   19ddc:	b.lt	19df8 <udev_util_encode_string@@LIBUDEV_183+0xe5c8>  // b.tstop
   19de0:	ldr	x0, [x29, #88]
   19de4:	mov	x1, x0
   19de8:	ldr	x0, [x29, #40]
   19dec:	bl	197cc <udev_util_encode_string@@LIBUDEV_183+0xdf9c>
   19df0:	str	w0, [x29, #60]
   19df4:	b	19ea0 <udev_util_encode_string@@LIBUDEV_183+0xe670>
   19df8:	ldr	x0, [x29, #40]
   19dfc:	ldr	x2, [x0, #240]
   19e00:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19e04:	add	x1, x0, #0x1e0
   19e08:	mov	x0, x2
   19e0c:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   19e10:	cmp	x0, #0x0
   19e14:	b.eq	19e30 <udev_util_encode_string@@LIBUDEV_183+0xe600>  // b.none
   19e18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19e1c:	add	x1, x0, #0xca0
   19e20:	ldr	x0, [x29, #40]
   19e24:	bl	197cc <udev_util_encode_string@@LIBUDEV_183+0xdf9c>
   19e28:	str	w0, [x29, #60]
   19e2c:	b	19ea0 <udev_util_encode_string@@LIBUDEV_183+0xe670>
   19e30:	ldr	x2, [x29, #80]
   19e34:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19e38:	add	x1, x0, #0xf68
   19e3c:	mov	x0, x2
   19e40:	bl	56f0 <strstr@plt>
   19e44:	str	x0, [x29, #104]
   19e48:	ldr	x0, [x29, #104]
   19e4c:	cmp	x0, #0x0
   19e50:	b.ne	19ea0 <udev_util_encode_string@@LIBUDEV_183+0xe670>  // b.any
   19e54:	ldr	x0, [x29, #40]
   19e58:	ldr	x2, [x0, #240]
   19e5c:	add	x0, x29, #0xe8
   19e60:	sub	x0, x0, #0x30
   19e64:	adrp	x1, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   19e68:	add	x1, x1, #0x8
   19e6c:	ld1	{v0.16b, v1.16b}, [x1]
   19e70:	st1	{v0.16b, v1.16b}, [x0]
   19e74:	add	x0, x29, #0xb8
   19e78:	mov	x1, x0
   19e7c:	mov	x0, x2
   19e80:	bl	30e48 <udev_util_encode_string@@LIBUDEV_183+0x25618>
   19e84:	cmp	x0, #0x0
   19e88:	b.eq	19ea0 <udev_util_encode_string@@LIBUDEV_183+0xe670>  // b.none
   19e8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19e90:	add	x1, x0, #0xc90
   19e94:	ldr	x0, [x29, #40]
   19e98:	bl	197cc <udev_util_encode_string@@LIBUDEV_183+0xdf9c>
   19e9c:	str	w0, [x29, #60]
   19ea0:	ldr	w0, [x29, #60]
   19ea4:	cmp	w0, #0x0
   19ea8:	b.ge	19f8c <udev_util_encode_string@@LIBUDEV_183+0xe75c>  // b.tcont
   19eac:	ldr	w0, [x29, #60]
   19eb0:	cmn	w0, #0x2
   19eb4:	b.eq	19f8c <udev_util_encode_string@@LIBUDEV_183+0xe75c>  // b.none
   19eb8:	str	xzr, [x29, #96]
   19ebc:	ldr	x0, [x29, #40]
   19ec0:	str	x0, [x29, #160]
   19ec4:	mov	w0, #0x7                   	// #7
   19ec8:	str	w0, [x29, #64]
   19ecc:	ldr	w0, [x29, #60]
   19ed0:	str	w0, [x29, #68]
   19ed4:	ldr	x0, [x29, #160]
   19ed8:	cmp	x0, #0x0
   19edc:	b.eq	19f18 <udev_util_encode_string@@LIBUDEV_183+0xe6e8>  // b.none
   19ee0:	mov	w0, #0x0                   	// #0
   19ee4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   19ee8:	mov	w1, w0
   19eec:	ldr	w0, [x29, #64]
   19ef0:	cmp	w0, w1
   19ef4:	cset	w0, le
   19ef8:	and	w0, w0, #0xff
   19efc:	and	x0, x0, #0xff
   19f00:	cmp	x0, #0x0
   19f04:	b.eq	19f18 <udev_util_encode_string@@LIBUDEV_183+0xe6e8>  // b.none
   19f08:	add	x0, x29, #0x60
   19f0c:	mov	x1, x0
   19f10:	ldr	x0, [x29, #160]
   19f14:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   19f18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19f1c:	add	x2, x0, #0xcab
   19f20:	ldr	x0, [x29, #96]
   19f24:	cmp	x0, #0x0
   19f28:	b.eq	19f38 <udev_util_encode_string@@LIBUDEV_183+0xe708>  // b.none
   19f2c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19f30:	add	x0, x0, #0x30
   19f34:	b	19f3c <udev_util_encode_string@@LIBUDEV_183+0xe70c>
   19f38:	mov	x0, #0x0                   	// #0
   19f3c:	ldr	x3, [x29, #96]
   19f40:	ldr	x1, [x29, #40]
   19f44:	ldr	x1, [x1, #240]
   19f48:	str	x1, [sp, #16]
   19f4c:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19f50:	add	x1, x1, #0x1f0
   19f54:	str	x1, [sp, #8]
   19f58:	str	xzr, [sp]
   19f5c:	mov	x7, #0x0                   	// #0
   19f60:	mov	x6, x3
   19f64:	mov	x5, x0
   19f68:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   19f6c:	add	x4, x0, #0x778
   19f70:	mov	w3, #0x322                 	// #802
   19f74:	ldr	w1, [x29, #68]
   19f78:	ldr	w0, [x29, #64]
   19f7c:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   19f80:	mov	w19, w0
   19f84:	mov	w20, #0x0                   	// #0
   19f88:	b	19fa0 <udev_util_encode_string@@LIBUDEV_183+0xe770>
   19f8c:	ldr	x0, [x29, #40]
   19f90:	ldrb	w1, [x0, #328]
   19f94:	orr	w1, w1, #0x40
   19f98:	strb	w1, [x0, #328]
   19f9c:	mov	w20, #0x1                   	// #1
   19fa0:	add	x0, x29, #0x58
   19fa4:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   19fa8:	cmp	w20, #0x1
   19fac:	b.ne	1a1d0 <udev_util_encode_string@@LIBUDEV_183+0xe9a0>  // b.any
   19fb0:	b	19fec <udev_util_encode_string@@LIBUDEV_183+0xe7bc>
   19fb4:	ldr	x0, [x29, #40]
   19fb8:	ldrb	w0, [x0, #328]
   19fbc:	ubfx	x0, x0, #7, #1
   19fc0:	and	w0, w0, #0xff
   19fc4:	eor	w0, w0, #0x1
   19fc8:	and	w0, w0, #0xff
   19fcc:	cmp	w0, #0x0
   19fd0:	b.eq	19fec <udev_util_encode_string@@LIBUDEV_183+0xe7bc>  // b.none
   19fd4:	ldr	x2, [x29, #80]
   19fd8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   19fdc:	add	x1, x0, #0xf68
   19fe0:	mov	x0, x2
   19fe4:	bl	56f0 <strstr@plt>
   19fe8:	str	x0, [x29, #104]
   19fec:	ldr	x0, [x29, #40]
   19ff0:	ldrb	w0, [x0, #328]
   19ff4:	ubfx	x0, x0, #7, #1
   19ff8:	and	w0, w0, #0xff
   19ffc:	eor	w0, w0, #0x1
   1a000:	and	w0, w0, #0xff
   1a004:	cmp	w0, #0x0
   1a008:	b.eq	1a1a4 <udev_util_encode_string@@LIBUDEV_183+0xe974>  // b.none
   1a00c:	ldr	x0, [x29, #104]
   1a010:	cmp	x0, #0x0
   1a014:	b.eq	1a194 <udev_util_encode_string@@LIBUDEV_183+0xe964>  // b.none
   1a018:	str	xzr, [x29, #88]
   1a01c:	ldr	x2, [x29, #80]
   1a020:	ldr	x0, [x29, #80]
   1a024:	ldr	x1, [x29, #104]
   1a028:	sub	x0, x1, x0
   1a02c:	mov	x1, x0
   1a030:	mov	x0, x2
   1a034:	bl	5550 <strndup@plt>
   1a038:	str	x0, [x29, #88]
   1a03c:	ldr	x0, [x29, #88]
   1a040:	cmp	x0, #0x0
   1a044:	b.ne	1a054 <udev_util_encode_string@@LIBUDEV_183+0xe824>  // b.any
   1a048:	mov	w0, #0xfffffff4            	// #-12
   1a04c:	str	w0, [x29, #60]
   1a050:	b	1a094 <udev_util_encode_string@@LIBUDEV_183+0xe864>
   1a054:	ldr	x0, [x29, #88]
   1a058:	mov	w1, #0x2f                  	// #47
   1a05c:	bl	53b0 <strrchr@plt>
   1a060:	str	x0, [x29, #168]
   1a064:	ldr	x0, [x29, #168]
   1a068:	cmp	x0, #0x0
   1a06c:	b.ne	1a07c <udev_util_encode_string@@LIBUDEV_183+0xe84c>  // b.any
   1a070:	mov	w0, #0xffffffea            	// #-22
   1a074:	str	w0, [x29, #60]
   1a078:	b	1a094 <udev_util_encode_string@@LIBUDEV_183+0xe864>
   1a07c:	ldr	x0, [x29, #168]
   1a080:	add	x0, x0, #0x1
   1a084:	mov	x1, x0
   1a088:	ldr	x0, [x29, #40]
   1a08c:	bl	19940 <udev_util_encode_string@@LIBUDEV_183+0xe110>
   1a090:	str	w0, [x29, #60]
   1a094:	ldr	w0, [x29, #60]
   1a098:	cmp	w0, #0x0
   1a09c:	b.ge	1a180 <udev_util_encode_string@@LIBUDEV_183+0xe950>  // b.tcont
   1a0a0:	ldr	w0, [x29, #60]
   1a0a4:	cmn	w0, #0x2
   1a0a8:	b.eq	1a180 <udev_util_encode_string@@LIBUDEV_183+0xe950>  // b.none
   1a0ac:	str	xzr, [x29, #96]
   1a0b0:	ldr	x0, [x29, #40]
   1a0b4:	str	x0, [x29, #176]
   1a0b8:	mov	w0, #0x7                   	// #7
   1a0bc:	str	w0, [x29, #72]
   1a0c0:	ldr	w0, [x29, #60]
   1a0c4:	str	w0, [x29, #76]
   1a0c8:	ldr	x0, [x29, #176]
   1a0cc:	cmp	x0, #0x0
   1a0d0:	b.eq	1a10c <udev_util_encode_string@@LIBUDEV_183+0xe8dc>  // b.none
   1a0d4:	mov	w0, #0x0                   	// #0
   1a0d8:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1a0dc:	mov	w1, w0
   1a0e0:	ldr	w0, [x29, #72]
   1a0e4:	cmp	w0, w1
   1a0e8:	cset	w0, le
   1a0ec:	and	w0, w0, #0xff
   1a0f0:	and	x0, x0, #0xff
   1a0f4:	cmp	x0, #0x0
   1a0f8:	b.eq	1a10c <udev_util_encode_string@@LIBUDEV_183+0xe8dc>  // b.none
   1a0fc:	add	x0, x29, #0x60
   1a100:	mov	x1, x0
   1a104:	ldr	x0, [x29, #176]
   1a108:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1a10c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a110:	add	x2, x0, #0xcab
   1a114:	ldr	x0, [x29, #96]
   1a118:	cmp	x0, #0x0
   1a11c:	b.eq	1a12c <udev_util_encode_string@@LIBUDEV_183+0xe8fc>  // b.none
   1a120:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a124:	add	x0, x0, #0x30
   1a128:	b	1a130 <udev_util_encode_string@@LIBUDEV_183+0xe900>
   1a12c:	mov	x0, #0x0                   	// #0
   1a130:	ldr	x3, [x29, #96]
   1a134:	ldr	x1, [x29, #40]
   1a138:	ldr	x1, [x1, #240]
   1a13c:	str	x1, [sp, #16]
   1a140:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a144:	add	x1, x1, #0x220
   1a148:	str	x1, [sp, #8]
   1a14c:	str	xzr, [sp]
   1a150:	mov	x7, #0x0                   	// #0
   1a154:	mov	x6, x3
   1a158:	mov	x5, x0
   1a15c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a160:	add	x4, x0, #0x778
   1a164:	mov	w3, #0x339                 	// #825
   1a168:	ldr	w1, [x29, #76]
   1a16c:	ldr	w0, [x29, #72]
   1a170:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1a174:	mov	w19, w0
   1a178:	mov	w20, #0x0                   	// #0
   1a17c:	b	1a184 <udev_util_encode_string@@LIBUDEV_183+0xe954>
   1a180:	mov	w20, #0x1                   	// #1
   1a184:	add	x0, x29, #0x58
   1a188:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1a18c:	cmp	w20, #0x1
   1a190:	b.ne	1a1d0 <udev_util_encode_string@@LIBUDEV_183+0xe9a0>  // b.any
   1a194:	ldr	x0, [x29, #40]
   1a198:	ldrb	w1, [x0, #328]
   1a19c:	orr	w1, w1, #0xffffff80
   1a1a0:	strb	w1, [x0, #328]
   1a1a4:	ldr	x0, [x29, #40]
   1a1a8:	ldr	x0, [x0, #264]
   1a1ac:	cmp	x0, #0x0
   1a1b0:	b.ne	1a1bc <udev_util_encode_string@@LIBUDEV_183+0xe98c>  // b.any
   1a1b4:	mov	w19, #0xfffffffe            	// #-2
   1a1b8:	b	1a1d0 <udev_util_encode_string@@LIBUDEV_183+0xe9a0>
   1a1bc:	ldr	x0, [x29, #40]
   1a1c0:	ldr	x1, [x0, #264]
   1a1c4:	ldr	x0, [x29, #32]
   1a1c8:	str	x1, [x0]
   1a1cc:	mov	w19, #0x0                   	// #0
   1a1d0:	mov	w1, w19
   1a1d4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1a1d8:	ldr	x0, [x0, #4016]
   1a1dc:	ldr	x2, [x29, #216]
   1a1e0:	ldr	x0, [x0]
   1a1e4:	eor	x0, x2, x0
   1a1e8:	cmp	x0, #0x0
   1a1ec:	b.eq	1a1f4 <udev_util_encode_string@@LIBUDEV_183+0xe9c4>  // b.none
   1a1f0:	bl	5390 <__stack_chk_fail@plt>
   1a1f4:	mov	w0, w1
   1a1f8:	mov	sp, x29
   1a1fc:	ldp	x19, x20, [sp, #16]
   1a200:	ldp	x29, x30, [sp], #224
   1a204:	ret
   1a208:	stp	x29, x30, [sp, #-48]!
   1a20c:	mov	x29, sp
   1a210:	str	x0, [sp, #24]
   1a214:	str	x1, [sp, #16]
   1a218:	ldr	x0, [sp, #24]
   1a21c:	cmp	x0, #0x0
   1a220:	cset	w0, ne  // ne = any
   1a224:	and	w0, w0, #0xff
   1a228:	and	x0, x0, #0xff
   1a22c:	cmp	x0, #0x0
   1a230:	b.ne	1a264 <udev_util_encode_string@@LIBUDEV_183+0xea34>  // b.any
   1a234:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a238:	add	x1, x0, #0xcab
   1a23c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a240:	add	x4, x0, #0x790
   1a244:	mov	w3, #0x349                 	// #841
   1a248:	mov	x2, x1
   1a24c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a250:	add	x1, x0, #0xcd8
   1a254:	mov	w0, #0x0                   	// #0
   1a258:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1a25c:	mov	w0, #0x1                   	// #1
   1a260:	b	1a268 <udev_util_encode_string@@LIBUDEV_183+0xea38>
   1a264:	mov	w0, #0x0                   	// #0
   1a268:	cmp	w0, #0x0
   1a26c:	b.eq	1a278 <udev_util_encode_string@@LIBUDEV_183+0xea48>  // b.none
   1a270:	mov	w0, #0xffffffea            	// #-22
   1a274:	b	1a2e0 <udev_util_encode_string@@LIBUDEV_183+0xeab0>
   1a278:	ldr	x0, [sp, #24]
   1a27c:	bl	186d0 <udev_util_encode_string@@LIBUDEV_183+0xcea0>
   1a280:	str	w0, [sp, #44]
   1a284:	ldr	w0, [sp, #44]
   1a288:	cmp	w0, #0x0
   1a28c:	b.ge	1a298 <udev_util_encode_string@@LIBUDEV_183+0xea68>  // b.tcont
   1a290:	ldr	w0, [sp, #44]
   1a294:	b	1a2e0 <udev_util_encode_string@@LIBUDEV_183+0xeab0>
   1a298:	ldr	x0, [sp, #24]
   1a29c:	ldr	x0, [x0, #184]
   1a2a0:	cmp	x0, #0x0
   1a2a4:	b.ne	1a2b0 <udev_util_encode_string@@LIBUDEV_183+0xea80>  // b.any
   1a2a8:	mov	w0, #0xfffffffe            	// #-2
   1a2ac:	b	1a2e0 <udev_util_encode_string@@LIBUDEV_183+0xeab0>
   1a2b0:	ldr	x0, [sp, #16]
   1a2b4:	cmp	x0, #0x0
   1a2b8:	b.eq	1a2cc <udev_util_encode_string@@LIBUDEV_183+0xea9c>  // b.none
   1a2bc:	ldr	x0, [sp, #24]
   1a2c0:	ldr	x1, [x0, #184]
   1a2c4:	ldr	x0, [sp, #16]
   1a2c8:	str	x1, [x0]
   1a2cc:	ldr	x0, [sp, #24]
   1a2d0:	ldr	x0, [x0, #184]
   1a2d4:	cmp	x0, #0x0
   1a2d8:	cset	w0, ne  // ne = any
   1a2dc:	and	w0, w0, #0xff
   1a2e0:	ldp	x29, x30, [sp], #48
   1a2e4:	ret
   1a2e8:	stp	x29, x30, [sp, #-96]!
   1a2ec:	mov	x29, sp
   1a2f0:	str	x0, [sp, #40]
   1a2f4:	str	x1, [sp, #32]
   1a2f8:	str	x2, [sp, #24]
   1a2fc:	str	x3, [sp, #16]
   1a300:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1a304:	ldr	x0, [x0, #4016]
   1a308:	ldr	x1, [x0]
   1a30c:	str	x1, [sp, #88]
   1a310:	mov	x1, #0x0                   	// #0
   1a314:	str	xzr, [sp, #64]
   1a318:	ldr	x0, [sp, #40]
   1a31c:	cmp	x0, #0x0
   1a320:	cset	w0, ne  // ne = any
   1a324:	and	w0, w0, #0xff
   1a328:	and	x0, x0, #0xff
   1a32c:	cmp	x0, #0x0
   1a330:	b.ne	1a364 <udev_util_encode_string@@LIBUDEV_183+0xeb34>  // b.any
   1a334:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a338:	add	x1, x0, #0xcab
   1a33c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a340:	add	x4, x0, #0x7a8
   1a344:	mov	w3, #0x35c                 	// #860
   1a348:	mov	x2, x1
   1a34c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a350:	add	x1, x0, #0x198
   1a354:	mov	w0, #0x0                   	// #0
   1a358:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1a35c:	mov	w0, #0x1                   	// #1
   1a360:	b	1a368 <udev_util_encode_string@@LIBUDEV_183+0xeb38>
   1a364:	mov	w0, #0x0                   	// #0
   1a368:	cmp	w0, #0x0
   1a36c:	b.eq	1a378 <udev_util_encode_string@@LIBUDEV_183+0xeb48>  // b.none
   1a370:	mov	w0, #0xffffffea            	// #-22
   1a374:	b	1a49c <udev_util_encode_string@@LIBUDEV_183+0xec6c>
   1a378:	ldr	x0, [sp, #32]
   1a37c:	cmp	x0, #0x0
   1a380:	cset	w0, ne  // ne = any
   1a384:	and	w0, w0, #0xff
   1a388:	and	x0, x0, #0xff
   1a38c:	cmp	x0, #0x0
   1a390:	b.ne	1a3c4 <udev_util_encode_string@@LIBUDEV_183+0xeb94>  // b.any
   1a394:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a398:	add	x1, x0, #0xcab
   1a39c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a3a0:	add	x4, x0, #0x7a8
   1a3a4:	mov	w3, #0x35d                 	// #861
   1a3a8:	mov	x2, x1
   1a3ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a3b0:	add	x1, x0, #0xc90
   1a3b4:	mov	w0, #0x0                   	// #0
   1a3b8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1a3bc:	mov	w0, #0x1                   	// #1
   1a3c0:	b	1a3c8 <udev_util_encode_string@@LIBUDEV_183+0xeb98>
   1a3c4:	mov	w0, #0x0                   	// #0
   1a3c8:	cmp	w0, #0x0
   1a3cc:	b.eq	1a3d8 <udev_util_encode_string@@LIBUDEV_183+0xeba8>  // b.none
   1a3d0:	mov	w0, #0xffffffea            	// #-22
   1a3d4:	b	1a49c <udev_util_encode_string@@LIBUDEV_183+0xec6c>
   1a3d8:	add	x0, sp, #0x40
   1a3dc:	mov	x1, x0
   1a3e0:	ldr	x0, [sp, #40]
   1a3e4:	bl	19688 <udev_util_encode_string@@LIBUDEV_183+0xde58>
   1a3e8:	str	w0, [sp, #60]
   1a3ec:	b	1a45c <udev_util_encode_string@@LIBUDEV_183+0xec2c>
   1a3f0:	str	xzr, [sp, #72]
   1a3f4:	str	xzr, [sp, #80]
   1a3f8:	ldr	x0, [sp, #64]
   1a3fc:	add	x1, sp, #0x48
   1a400:	bl	19ae4 <udev_util_encode_string@@LIBUDEV_183+0xe2b4>
   1a404:	ldr	x0, [sp, #72]
   1a408:	ldr	x1, [sp, #32]
   1a40c:	bl	15208 <udev_util_encode_string@@LIBUDEV_183+0x99d8>
   1a410:	and	w0, w0, #0xff
   1a414:	cmp	w0, #0x0
   1a418:	b.eq	1a44c <udev_util_encode_string@@LIBUDEV_183+0xec1c>  // b.none
   1a41c:	ldr	x0, [sp, #24]
   1a420:	cmp	x0, #0x0
   1a424:	b.eq	1a46c <udev_util_encode_string@@LIBUDEV_183+0xec3c>  // b.none
   1a428:	ldr	x0, [sp, #64]
   1a42c:	add	x1, sp, #0x50
   1a430:	bl	1a208 <udev_util_encode_string@@LIBUDEV_183+0xe9d8>
   1a434:	ldr	x0, [sp, #80]
   1a438:	ldr	x1, [sp, #24]
   1a43c:	bl	15208 <udev_util_encode_string@@LIBUDEV_183+0x99d8>
   1a440:	and	w0, w0, #0xff
   1a444:	cmp	w0, #0x0
   1a448:	b.ne	1a474 <udev_util_encode_string@@LIBUDEV_183+0xec44>  // b.any
   1a44c:	ldr	x0, [sp, #64]
   1a450:	add	x1, sp, #0x40
   1a454:	bl	19688 <udev_util_encode_string@@LIBUDEV_183+0xde58>
   1a458:	str	w0, [sp, #60]
   1a45c:	ldr	w0, [sp, #60]
   1a460:	cmp	w0, #0x0
   1a464:	b.ge	1a3f0 <udev_util_encode_string@@LIBUDEV_183+0xebc0>  // b.tcont
   1a468:	b	1a478 <udev_util_encode_string@@LIBUDEV_183+0xec48>
   1a46c:	nop
   1a470:	b	1a478 <udev_util_encode_string@@LIBUDEV_183+0xec48>
   1a474:	nop
   1a478:	ldr	w0, [sp, #60]
   1a47c:	cmp	w0, #0x0
   1a480:	b.ge	1a48c <udev_util_encode_string@@LIBUDEV_183+0xec5c>  // b.tcont
   1a484:	ldr	w0, [sp, #60]
   1a488:	b	1a49c <udev_util_encode_string@@LIBUDEV_183+0xec6c>
   1a48c:	ldr	x1, [sp, #64]
   1a490:	ldr	x0, [sp, #16]
   1a494:	str	x1, [x0]
   1a498:	mov	w0, #0x0                   	// #0
   1a49c:	mov	w1, w0
   1a4a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1a4a4:	ldr	x0, [x0, #4016]
   1a4a8:	ldr	x2, [sp, #88]
   1a4ac:	ldr	x0, [x0]
   1a4b0:	eor	x0, x2, x0
   1a4b4:	cmp	x0, #0x0
   1a4b8:	b.eq	1a4c0 <udev_util_encode_string@@LIBUDEV_183+0xec90>  // b.none
   1a4bc:	bl	5390 <__stack_chk_fail@plt>
   1a4c0:	mov	w0, w1
   1a4c4:	ldp	x29, x30, [sp], #96
   1a4c8:	ret
   1a4cc:	stp	x29, x30, [sp, #-48]!
   1a4d0:	mov	x29, sp
   1a4d4:	str	x0, [sp, #24]
   1a4d8:	str	x1, [sp, #16]
   1a4dc:	ldr	x0, [sp, #24]
   1a4e0:	cmp	x0, #0x0
   1a4e4:	cset	w0, ne  // ne = any
   1a4e8:	and	w0, w0, #0xff
   1a4ec:	and	x0, x0, #0xff
   1a4f0:	cmp	x0, #0x0
   1a4f4:	b.ne	1a528 <udev_util_encode_string@@LIBUDEV_183+0xecf8>  // b.any
   1a4f8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a4fc:	add	x1, x0, #0xcab
   1a500:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a504:	add	x4, x0, #0x7d8
   1a508:	mov	w3, #0x37a                 	// #890
   1a50c:	mov	x2, x1
   1a510:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a514:	add	x1, x0, #0xcd8
   1a518:	mov	w0, #0x0                   	// #0
   1a51c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1a520:	mov	w0, #0x1                   	// #1
   1a524:	b	1a52c <udev_util_encode_string@@LIBUDEV_183+0xecfc>
   1a528:	mov	w0, #0x0                   	// #0
   1a52c:	cmp	w0, #0x0
   1a530:	b.eq	1a53c <udev_util_encode_string@@LIBUDEV_183+0xed0c>  // b.none
   1a534:	mov	w0, #0xffffffea            	// #-22
   1a538:	b	1a598 <udev_util_encode_string@@LIBUDEV_183+0xed68>
   1a53c:	ldr	x0, [sp, #24]
   1a540:	bl	186d0 <udev_util_encode_string@@LIBUDEV_183+0xcea0>
   1a544:	str	w0, [sp, #44]
   1a548:	ldr	w0, [sp, #44]
   1a54c:	cmp	w0, #0x0
   1a550:	b.ge	1a55c <udev_util_encode_string@@LIBUDEV_183+0xed2c>  // b.tcont
   1a554:	ldr	w0, [sp, #44]
   1a558:	b	1a598 <udev_util_encode_string@@LIBUDEV_183+0xed68>
   1a55c:	ldr	x0, [sp, #24]
   1a560:	ldr	x0, [x0, #200]
   1a564:	bl	53f0 <gnu_dev_major@plt>
   1a568:	cmp	w0, #0x0
   1a56c:	b.ne	1a578 <udev_util_encode_string@@LIBUDEV_183+0xed48>  // b.any
   1a570:	mov	w0, #0xfffffffe            	// #-2
   1a574:	b	1a598 <udev_util_encode_string@@LIBUDEV_183+0xed68>
   1a578:	ldr	x0, [sp, #16]
   1a57c:	cmp	x0, #0x0
   1a580:	b.eq	1a594 <udev_util_encode_string@@LIBUDEV_183+0xed64>  // b.none
   1a584:	ldr	x0, [sp, #24]
   1a588:	ldr	x1, [x0, #200]
   1a58c:	ldr	x0, [sp, #16]
   1a590:	str	x1, [x0]
   1a594:	mov	w0, #0x0                   	// #0
   1a598:	ldp	x29, x30, [sp], #48
   1a59c:	ret
   1a5a0:	stp	x29, x30, [sp, #-80]!
   1a5a4:	mov	x29, sp
   1a5a8:	str	x19, [sp, #16]
   1a5ac:	str	x0, [sp, #40]
   1a5b0:	str	x1, [sp, #32]
   1a5b4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1a5b8:	ldr	x0, [x0, #4016]
   1a5bc:	ldr	x1, [x0]
   1a5c0:	str	x1, [sp, #72]
   1a5c4:	mov	x1, #0x0                   	// #0
   1a5c8:	str	xzr, [sp, #64]
   1a5cc:	ldr	x0, [sp, #40]
   1a5d0:	cmp	x0, #0x0
   1a5d4:	cset	w0, eq  // eq = none
   1a5d8:	and	w0, w0, #0xff
   1a5dc:	and	x0, x0, #0xff
   1a5e0:	cmp	x0, #0x0
   1a5e4:	b.eq	1a610 <udev_util_encode_string@@LIBUDEV_183+0xede0>  // b.none
   1a5e8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a5ec:	add	x1, x0, #0xcab
   1a5f0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a5f4:	add	x4, x0, #0x7f0
   1a5f8:	mov	w3, #0x38d                 	// #909
   1a5fc:	mov	x2, x1
   1a600:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a604:	add	x1, x0, #0xcd8
   1a608:	mov	w0, #0x0                   	// #0
   1a60c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1a610:	ldr	x0, [sp, #32]
   1a614:	cmp	x0, #0x0
   1a618:	cset	w0, eq  // eq = none
   1a61c:	and	w0, w0, #0xff
   1a620:	and	x0, x0, #0xff
   1a624:	cmp	x0, #0x0
   1a628:	b.eq	1a654 <udev_util_encode_string@@LIBUDEV_183+0xee24>  // b.none
   1a62c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a630:	add	x1, x0, #0xcab
   1a634:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a638:	add	x4, x0, #0x7f0
   1a63c:	mov	w3, #0x38e                 	// #910
   1a640:	mov	x2, x1
   1a644:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a648:	add	x1, x0, #0x258
   1a64c:	mov	w0, #0x0                   	// #0
   1a650:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1a654:	ldr	x0, [sp, #32]
   1a658:	bl	5370 <strdup@plt>
   1a65c:	str	x0, [sp, #64]
   1a660:	ldr	x0, [sp, #64]
   1a664:	cmp	x0, #0x0
   1a668:	b.ne	1a674 <udev_util_encode_string@@LIBUDEV_183+0xee44>  // b.any
   1a66c:	mov	w19, #0xfffffff4            	// #-12
   1a670:	b	1a6d8 <udev_util_encode_string@@LIBUDEV_183+0xeea8>
   1a674:	ldr	x0, [sp, #64]
   1a678:	mov	x2, x0
   1a67c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a680:	add	x1, x0, #0x260
   1a684:	ldr	x0, [sp, #40]
   1a688:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   1a68c:	str	w0, [sp, #60]
   1a690:	ldr	w0, [sp, #60]
   1a694:	cmp	w0, #0x0
   1a698:	b.ge	1a6a4 <udev_util_encode_string@@LIBUDEV_183+0xee74>  // b.tcont
   1a69c:	ldr	w19, [sp, #60]
   1a6a0:	b	1a6d8 <udev_util_encode_string@@LIBUDEV_183+0xeea8>
   1a6a4:	ldr	x0, [sp, #40]
   1a6a8:	ldrb	w1, [x0, #329]
   1a6ac:	orr	w1, w1, #0x1
   1a6b0:	strb	w1, [x0, #329]
   1a6b4:	ldr	x0, [sp, #40]
   1a6b8:	ldr	x0, [x0, #280]
   1a6bc:	bl	54b0 <free@plt>
   1a6c0:	ldr	x1, [sp, #64]
   1a6c4:	ldr	x0, [sp, #40]
   1a6c8:	str	x1, [x0, #280]
   1a6cc:	str	xzr, [sp, #64]
   1a6d0:	mov	w19, #0x0                   	// #0
   1a6d4:	nop
   1a6d8:	add	x0, sp, #0x40
   1a6dc:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1a6e0:	mov	w1, w19
   1a6e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1a6e8:	ldr	x0, [x0, #4016]
   1a6ec:	ldr	x2, [sp, #72]
   1a6f0:	ldr	x0, [x0]
   1a6f4:	eor	x0, x2, x0
   1a6f8:	cmp	x0, #0x0
   1a6fc:	b.eq	1a704 <udev_util_encode_string@@LIBUDEV_183+0xeed4>  // b.none
   1a700:	bl	5390 <__stack_chk_fail@plt>
   1a704:	mov	w0, w1
   1a708:	ldr	x19, [sp, #16]
   1a70c:	ldp	x29, x30, [sp], #80
   1a710:	ret
   1a714:	stp	x29, x30, [sp, #-192]!
   1a718:	mov	x29, sp
   1a71c:	stp	x19, x20, [sp, #16]
   1a720:	sub	sp, sp, #0x20
   1a724:	str	x0, [x29, #40]
   1a728:	str	x1, [x29, #32]
   1a72c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1a730:	ldr	x0, [x0, #4016]
   1a734:	ldr	x1, [x0]
   1a738:	str	x1, [x29, #184]
   1a73c:	mov	x1, #0x0                   	// #0
   1a740:	ldr	x0, [x29, #40]
   1a744:	cmp	x0, #0x0
   1a748:	cset	w0, ne  // ne = any
   1a74c:	and	w0, w0, #0xff
   1a750:	and	x0, x0, #0xff
   1a754:	cmp	x0, #0x0
   1a758:	b.ne	1a78c <udev_util_encode_string@@LIBUDEV_183+0xef5c>  // b.any
   1a75c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a760:	add	x1, x0, #0xcab
   1a764:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a768:	add	x4, x0, #0x808
   1a76c:	mov	w3, #0x39d                 	// #925
   1a770:	mov	x2, x1
   1a774:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a778:	add	x1, x0, #0xcd8
   1a77c:	mov	w0, #0x0                   	// #0
   1a780:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1a784:	mov	w0, #0x1                   	// #1
   1a788:	b	1a790 <udev_util_encode_string@@LIBUDEV_183+0xef60>
   1a78c:	mov	w0, #0x0                   	// #0
   1a790:	cmp	w0, #0x0
   1a794:	b.eq	1a7a0 <udev_util_encode_string@@LIBUDEV_183+0xef70>  // b.none
   1a798:	mov	w19, #0xffffffea            	// #-22
   1a79c:	b	1ac38 <udev_util_encode_string@@LIBUDEV_183+0xf408>
   1a7a0:	ldr	x0, [x29, #32]
   1a7a4:	cmp	x0, #0x0
   1a7a8:	cset	w0, ne  // ne = any
   1a7ac:	and	w0, w0, #0xff
   1a7b0:	and	x0, x0, #0xff
   1a7b4:	cmp	x0, #0x0
   1a7b8:	b.ne	1a7ec <udev_util_encode_string@@LIBUDEV_183+0xefbc>  // b.any
   1a7bc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a7c0:	add	x1, x0, #0xcab
   1a7c4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a7c8:	add	x4, x0, #0x808
   1a7cc:	mov	w3, #0x39e                 	// #926
   1a7d0:	mov	x2, x1
   1a7d4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a7d8:	add	x1, x0, #0xcd0
   1a7dc:	mov	w0, #0x0                   	// #0
   1a7e0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1a7e4:	mov	w0, #0x1                   	// #1
   1a7e8:	b	1a7f0 <udev_util_encode_string@@LIBUDEV_183+0xefc0>
   1a7ec:	mov	w0, #0x0                   	// #0
   1a7f0:	cmp	w0, #0x0
   1a7f4:	b.eq	1a800 <udev_util_encode_string@@LIBUDEV_183+0xefd0>  // b.none
   1a7f8:	mov	w19, #0xffffffea            	// #-22
   1a7fc:	b	1ac38 <udev_util_encode_string@@LIBUDEV_183+0xf408>
   1a800:	ldr	x0, [x29, #40]
   1a804:	ldrb	w0, [x0, #329]
   1a808:	ubfx	x0, x0, #0, #1
   1a80c:	and	w0, w0, #0xff
   1a810:	eor	w0, w0, #0x1
   1a814:	and	w0, w0, #0xff
   1a818:	cmp	w0, #0x0
   1a81c:	b.eq	1ac0c <udev_util_encode_string@@LIBUDEV_183+0xf3dc>  // b.none
   1a820:	str	xzr, [x29, #80]
   1a824:	add	x0, x29, #0x58
   1a828:	mov	x1, x0
   1a82c:	ldr	x0, [x29, #40]
   1a830:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   1a834:	str	w0, [x29, #60]
   1a838:	ldr	w0, [x29, #60]
   1a83c:	cmp	w0, #0x0
   1a840:	b.ge	1a850 <udev_util_encode_string@@LIBUDEV_183+0xf020>  // b.tcont
   1a844:	ldr	w19, [x29, #60]
   1a848:	mov	w20, #0x0                   	// #0
   1a84c:	b	1abfc <udev_util_encode_string@@LIBUDEV_183+0xf3cc>
   1a850:	ldr	x0, [x29, #88]
   1a854:	str	x0, [x29, #168]
   1a858:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a85c:	add	x0, x0, #0x268
   1a860:	str	x0, [x29, #176]
   1a864:	str	xzr, [x29, #112]
   1a868:	str	xzr, [x29, #120]
   1a86c:	b	1a8a0 <udev_util_encode_string@@LIBUDEV_183+0xf070>
   1a870:	ldr	x0, [x29, #120]
   1a874:	lsl	x0, x0, #3
   1a878:	add	x1, x29, #0xa8
   1a87c:	ldr	x0, [x1, x0]
   1a880:	bl	5040 <strlen@plt>
   1a884:	mov	x1, x0
   1a888:	ldr	x0, [x29, #112]
   1a88c:	add	x0, x0, x1
   1a890:	str	x0, [x29, #112]
   1a894:	ldr	x0, [x29, #120]
   1a898:	add	x0, x0, #0x1
   1a89c:	str	x0, [x29, #120]
   1a8a0:	ldr	x0, [x29, #120]
   1a8a4:	cmp	x0, #0x1
   1a8a8:	b.hi	1a8c4 <udev_util_encode_string@@LIBUDEV_183+0xf094>  // b.pmore
   1a8ac:	ldr	x0, [x29, #120]
   1a8b0:	lsl	x0, x0, #3
   1a8b4:	add	x1, x29, #0xa8
   1a8b8:	ldr	x0, [x1, x0]
   1a8bc:	cmp	x0, #0x0
   1a8c0:	b.ne	1a870 <udev_util_encode_string@@LIBUDEV_183+0xf040>  // b.any
   1a8c4:	ldr	x0, [x29, #112]
   1a8c8:	add	x0, x0, #0x1
   1a8cc:	str	x0, [x29, #128]
   1a8d0:	ldr	x1, [x29, #128]
   1a8d4:	mov	x0, #0x1                   	// #1
   1a8d8:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   1a8dc:	and	w0, w0, #0xff
   1a8e0:	and	x0, x0, #0xff
   1a8e4:	cmp	x0, #0x0
   1a8e8:	b.eq	1a914 <udev_util_encode_string@@LIBUDEV_183+0xf0e4>  // b.none
   1a8ec:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a8f0:	add	x1, x0, #0xcab
   1a8f4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a8f8:	add	x4, x0, #0x808
   1a8fc:	mov	w3, #0x3aa                 	// #938
   1a900:	mov	x2, x1
   1a904:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a908:	add	x1, x0, #0xe18
   1a90c:	mov	w0, #0x0                   	// #0
   1a910:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1a914:	ldr	x0, [x29, #128]
   1a918:	cmp	x0, #0x400, lsl #12
   1a91c:	cset	w0, hi  // hi = pmore
   1a920:	and	w0, w0, #0xff
   1a924:	and	x0, x0, #0xff
   1a928:	cmp	x0, #0x0
   1a92c:	b.eq	1a958 <udev_util_encode_string@@LIBUDEV_183+0xf128>  // b.none
   1a930:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a934:	add	x1, x0, #0xcab
   1a938:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1a93c:	add	x4, x0, #0x808
   1a940:	mov	w3, #0x3aa                 	// #938
   1a944:	mov	x2, x1
   1a948:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1a94c:	add	x1, x0, #0xe48
   1a950:	mov	w0, #0x0                   	// #0
   1a954:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1a958:	ldr	x0, [x29, #128]
   1a95c:	add	x0, x0, #0xf
   1a960:	lsr	x0, x0, #4
   1a964:	lsl	x0, x0, #4
   1a968:	sub	sp, sp, x0
   1a96c:	add	x0, sp, #0x20
   1a970:	add	x0, x0, #0xf
   1a974:	lsr	x0, x0, #4
   1a978:	lsl	x0, x0, #4
   1a97c:	str	x0, [x29, #136]
   1a980:	ldr	x0, [x29, #136]
   1a984:	str	x0, [x29, #104]
   1a988:	str	xzr, [x29, #120]
   1a98c:	b	1a9bc <udev_util_encode_string@@LIBUDEV_183+0xf18c>
   1a990:	ldr	x0, [x29, #120]
   1a994:	lsl	x0, x0, #3
   1a998:	add	x1, x29, #0xa8
   1a99c:	ldr	x0, [x1, x0]
   1a9a0:	mov	x1, x0
   1a9a4:	ldr	x0, [x29, #104]
   1a9a8:	bl	51b0 <stpcpy@plt>
   1a9ac:	str	x0, [x29, #104]
   1a9b0:	ldr	x0, [x29, #120]
   1a9b4:	add	x0, x0, #0x1
   1a9b8:	str	x0, [x29, #120]
   1a9bc:	ldr	x0, [x29, #120]
   1a9c0:	cmp	x0, #0x1
   1a9c4:	b.hi	1a9e0 <udev_util_encode_string@@LIBUDEV_183+0xf1b0>  // b.pmore
   1a9c8:	ldr	x0, [x29, #120]
   1a9cc:	lsl	x0, x0, #3
   1a9d0:	add	x1, x29, #0xa8
   1a9d4:	ldr	x0, [x1, x0]
   1a9d8:	cmp	x0, #0x0
   1a9dc:	b.ne	1a990 <udev_util_encode_string@@LIBUDEV_183+0xf160>  // b.any
   1a9e0:	ldr	x0, [x29, #104]
   1a9e4:	strb	wzr, [x0]
   1a9e8:	ldr	x0, [x29, #136]
   1a9ec:	str	x0, [x29, #144]
   1a9f0:	add	x0, x29, #0x50
   1a9f4:	mov	x1, x0
   1a9f8:	ldr	x0, [x29, #144]
   1a9fc:	bl	257dc <udev_util_encode_string@@LIBUDEV_183+0x19fac>
   1aa00:	str	w0, [x29, #60]
   1aa04:	ldr	w0, [x29, #60]
   1aa08:	cmp	w0, #0x0
   1aa0c:	b.lt	1ab04 <udev_util_encode_string@@LIBUDEV_183+0xf2d4>  // b.tstop
   1aa10:	ldr	x0, [x29, #80]
   1aa14:	mov	x1, x0
   1aa18:	ldr	x0, [x29, #40]
   1aa1c:	bl	1a5a0 <udev_util_encode_string@@LIBUDEV_183+0xed70>
   1aa20:	str	w0, [x29, #60]
   1aa24:	ldr	w0, [x29, #60]
   1aa28:	cmp	w0, #0x0
   1aa2c:	b.ge	1abf8 <udev_util_encode_string@@LIBUDEV_183+0xf3c8>  // b.tcont
   1aa30:	str	xzr, [x29, #96]
   1aa34:	ldr	x0, [x29, #40]
   1aa38:	str	x0, [x29, #160]
   1aa3c:	mov	w0, #0x7                   	// #7
   1aa40:	str	w0, [x29, #72]
   1aa44:	ldr	w0, [x29, #60]
   1aa48:	str	w0, [x29, #76]
   1aa4c:	ldr	x0, [x29, #160]
   1aa50:	cmp	x0, #0x0
   1aa54:	b.eq	1aa90 <udev_util_encode_string@@LIBUDEV_183+0xf260>  // b.none
   1aa58:	mov	w0, #0x0                   	// #0
   1aa5c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1aa60:	mov	w1, w0
   1aa64:	ldr	w0, [x29, #72]
   1aa68:	cmp	w0, w1
   1aa6c:	cset	w0, le
   1aa70:	and	w0, w0, #0xff
   1aa74:	and	x0, x0, #0xff
   1aa78:	cmp	x0, #0x0
   1aa7c:	b.eq	1aa90 <udev_util_encode_string@@LIBUDEV_183+0xf260>  // b.none
   1aa80:	add	x0, x29, #0x60
   1aa84:	mov	x1, x0
   1aa88:	ldr	x0, [x29, #160]
   1aa8c:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1aa90:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1aa94:	add	x2, x0, #0xcab
   1aa98:	ldr	x0, [x29, #96]
   1aa9c:	cmp	x0, #0x0
   1aaa0:	b.eq	1aab0 <udev_util_encode_string@@LIBUDEV_183+0xf280>  // b.none
   1aaa4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1aaa8:	add	x0, x0, #0x30
   1aaac:	b	1aab4 <udev_util_encode_string@@LIBUDEV_183+0xf284>
   1aab0:	mov	x0, #0x0                   	// #0
   1aab4:	ldr	x3, [x29, #96]
   1aab8:	ldr	x1, [x29, #40]
   1aabc:	ldr	x1, [x1, #240]
   1aac0:	str	x1, [sp, #16]
   1aac4:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1aac8:	add	x1, x1, #0x270
   1aacc:	str	x1, [sp, #8]
   1aad0:	str	xzr, [sp]
   1aad4:	mov	x7, #0x0                   	// #0
   1aad8:	mov	x6, x3
   1aadc:	mov	x5, x0
   1aae0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1aae4:	add	x4, x0, #0x820
   1aae8:	mov	w3, #0x3af                 	// #943
   1aaec:	ldr	w1, [x29, #76]
   1aaf0:	ldr	w0, [x29, #72]
   1aaf4:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1aaf8:	mov	w19, w0
   1aafc:	mov	w20, #0x0                   	// #0
   1ab00:	b	1abfc <udev_util_encode_string@@LIBUDEV_183+0xf3cc>
   1ab04:	ldr	w0, [x29, #60]
   1ab08:	cmn	w0, #0x2
   1ab0c:	b.ne	1ab24 <udev_util_encode_string@@LIBUDEV_183+0xf2f4>  // b.any
   1ab10:	ldr	x0, [x29, #40]
   1ab14:	ldrb	w1, [x0, #329]
   1ab18:	orr	w1, w1, #0x1
   1ab1c:	strb	w1, [x0, #329]
   1ab20:	b	1abf8 <udev_util_encode_string@@LIBUDEV_183+0xf3c8>
   1ab24:	str	xzr, [x29, #96]
   1ab28:	ldr	x0, [x29, #40]
   1ab2c:	str	x0, [x29, #152]
   1ab30:	mov	w0, #0x7                   	// #7
   1ab34:	str	w0, [x29, #64]
   1ab38:	ldr	w0, [x29, #60]
   1ab3c:	str	w0, [x29, #68]
   1ab40:	ldr	x0, [x29, #152]
   1ab44:	cmp	x0, #0x0
   1ab48:	b.eq	1ab84 <udev_util_encode_string@@LIBUDEV_183+0xf354>  // b.none
   1ab4c:	mov	w0, #0x0                   	// #0
   1ab50:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1ab54:	mov	w1, w0
   1ab58:	ldr	w0, [x29, #64]
   1ab5c:	cmp	w0, w1
   1ab60:	cset	w0, le
   1ab64:	and	w0, w0, #0xff
   1ab68:	and	x0, x0, #0xff
   1ab6c:	cmp	x0, #0x0
   1ab70:	b.eq	1ab84 <udev_util_encode_string@@LIBUDEV_183+0xf354>  // b.none
   1ab74:	add	x0, x29, #0x60
   1ab78:	mov	x1, x0
   1ab7c:	ldr	x0, [x29, #152]
   1ab80:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1ab84:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ab88:	add	x2, x0, #0xcab
   1ab8c:	ldr	x0, [x29, #96]
   1ab90:	cmp	x0, #0x0
   1ab94:	b.eq	1aba4 <udev_util_encode_string@@LIBUDEV_183+0xf374>  // b.none
   1ab98:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ab9c:	add	x0, x0, #0x30
   1aba0:	b	1aba8 <udev_util_encode_string@@LIBUDEV_183+0xf378>
   1aba4:	mov	x0, #0x0                   	// #0
   1aba8:	ldr	x3, [x29, #96]
   1abac:	ldr	x1, [x29, #40]
   1abb0:	ldr	x1, [x1, #240]
   1abb4:	str	x1, [sp, #16]
   1abb8:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1abbc:	add	x1, x1, #0x270
   1abc0:	str	x1, [sp, #8]
   1abc4:	str	xzr, [sp]
   1abc8:	mov	x7, #0x0                   	// #0
   1abcc:	mov	x6, x3
   1abd0:	mov	x5, x0
   1abd4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1abd8:	add	x4, x0, #0x820
   1abdc:	mov	w3, #0x3b3                 	// #947
   1abe0:	ldr	w1, [x29, #68]
   1abe4:	ldr	w0, [x29, #64]
   1abe8:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1abec:	mov	w19, w0
   1abf0:	mov	w20, #0x0                   	// #0
   1abf4:	b	1abfc <udev_util_encode_string@@LIBUDEV_183+0xf3cc>
   1abf8:	mov	w20, #0x1                   	// #1
   1abfc:	add	x0, x29, #0x50
   1ac00:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1ac04:	cmp	w20, #0x1
   1ac08:	b.ne	1ac38 <udev_util_encode_string@@LIBUDEV_183+0xf408>  // b.any
   1ac0c:	ldr	x0, [x29, #40]
   1ac10:	ldr	x0, [x0, #280]
   1ac14:	cmp	x0, #0x0
   1ac18:	b.ne	1ac24 <udev_util_encode_string@@LIBUDEV_183+0xf3f4>  // b.any
   1ac1c:	mov	w19, #0xfffffffe            	// #-2
   1ac20:	b	1ac38 <udev_util_encode_string@@LIBUDEV_183+0xf408>
   1ac24:	ldr	x0, [x29, #40]
   1ac28:	ldr	x1, [x0, #280]
   1ac2c:	ldr	x0, [x29, #32]
   1ac30:	str	x1, [x0]
   1ac34:	mov	w19, #0x0                   	// #0
   1ac38:	mov	w1, w19
   1ac3c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1ac40:	ldr	x0, [x0, #4016]
   1ac44:	ldr	x2, [x29, #184]
   1ac48:	ldr	x0, [x0]
   1ac4c:	eor	x0, x2, x0
   1ac50:	cmp	x0, #0x0
   1ac54:	b.eq	1ac5c <udev_util_encode_string@@LIBUDEV_183+0xf42c>  // b.none
   1ac58:	bl	5390 <__stack_chk_fail@plt>
   1ac5c:	mov	w0, w1
   1ac60:	mov	sp, x29
   1ac64:	ldp	x19, x20, [sp, #16]
   1ac68:	ldp	x29, x30, [sp], #192
   1ac6c:	ret
   1ac70:	stp	x29, x30, [sp, #-32]!
   1ac74:	mov	x29, sp
   1ac78:	str	x0, [sp, #24]
   1ac7c:	str	x1, [sp, #16]
   1ac80:	ldr	x0, [sp, #24]
   1ac84:	cmp	x0, #0x0
   1ac88:	cset	w0, ne  // ne = any
   1ac8c:	and	w0, w0, #0xff
   1ac90:	and	x0, x0, #0xff
   1ac94:	cmp	x0, #0x0
   1ac98:	b.ne	1accc <udev_util_encode_string@@LIBUDEV_183+0xf49c>  // b.any
   1ac9c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1aca0:	add	x1, x0, #0xcab
   1aca4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1aca8:	add	x4, x0, #0x838
   1acac:	mov	w3, #0x3be                 	// #958
   1acb0:	mov	x2, x1
   1acb4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1acb8:	add	x1, x0, #0xcd8
   1acbc:	mov	w0, #0x0                   	// #0
   1acc0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1acc4:	mov	w0, #0x1                   	// #1
   1acc8:	b	1acd0 <udev_util_encode_string@@LIBUDEV_183+0xf4a0>
   1accc:	mov	w0, #0x0                   	// #0
   1acd0:	cmp	w0, #0x0
   1acd4:	b.eq	1ace0 <udev_util_encode_string@@LIBUDEV_183+0xf4b0>  // b.none
   1acd8:	mov	w0, #0xffffffea            	// #-22
   1acdc:	b	1ade8 <udev_util_encode_string@@LIBUDEV_183+0xf5b8>
   1ace0:	ldr	x0, [sp, #16]
   1ace4:	cmp	x0, #0x0
   1ace8:	cset	w0, ne  // ne = any
   1acec:	and	w0, w0, #0xff
   1acf0:	and	x0, x0, #0xff
   1acf4:	cmp	x0, #0x0
   1acf8:	b.ne	1ad2c <udev_util_encode_string@@LIBUDEV_183+0xf4fc>  // b.any
   1acfc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ad00:	add	x1, x0, #0xcab
   1ad04:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ad08:	add	x4, x0, #0x838
   1ad0c:	mov	w3, #0x3bf                 	// #959
   1ad10:	mov	x2, x1
   1ad14:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ad18:	add	x1, x0, #0x2a0
   1ad1c:	mov	w0, #0x0                   	// #0
   1ad20:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1ad24:	mov	w0, #0x1                   	// #1
   1ad28:	b	1ad30 <udev_util_encode_string@@LIBUDEV_183+0xf500>
   1ad2c:	mov	w0, #0x0                   	// #0
   1ad30:	cmp	w0, #0x0
   1ad34:	b.eq	1ad40 <udev_util_encode_string@@LIBUDEV_183+0xf510>  // b.none
   1ad38:	mov	w0, #0xffffffea            	// #-22
   1ad3c:	b	1ade8 <udev_util_encode_string@@LIBUDEV_183+0xf5b8>
   1ad40:	ldr	x0, [sp, #24]
   1ad44:	ldr	x0, [x0, #240]
   1ad48:	cmp	x0, #0x0
   1ad4c:	cset	w0, eq  // eq = none
   1ad50:	and	w0, w0, #0xff
   1ad54:	and	x0, x0, #0xff
   1ad58:	cmp	x0, #0x0
   1ad5c:	b.eq	1ad88 <udev_util_encode_string@@LIBUDEV_183+0xf558>  // b.none
   1ad60:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ad64:	add	x1, x0, #0xcab
   1ad68:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ad6c:	add	x4, x0, #0x838
   1ad70:	mov	w3, #0x3c1                 	// #961
   1ad74:	mov	x2, x1
   1ad78:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ad7c:	add	x1, x0, #0x2a8
   1ad80:	mov	w0, #0x0                   	// #0
   1ad84:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1ad88:	ldr	x0, [sp, #24]
   1ad8c:	ldr	x0, [x0, #240]
   1ad90:	ldrb	w0, [x0]
   1ad94:	cmp	w0, #0x2f
   1ad98:	cset	w0, ne  // ne = any
   1ad9c:	and	w0, w0, #0xff
   1ada0:	and	x0, x0, #0xff
   1ada4:	cmp	x0, #0x0
   1ada8:	b.eq	1add4 <udev_util_encode_string@@LIBUDEV_183+0xf5a4>  // b.none
   1adac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1adb0:	add	x1, x0, #0xcab
   1adb4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1adb8:	add	x4, x0, #0x838
   1adbc:	mov	w3, #0x3c2                 	// #962
   1adc0:	mov	x2, x1
   1adc4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1adc8:	add	x1, x0, #0x2b8
   1adcc:	mov	w0, #0x0                   	// #0
   1add0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1add4:	ldr	x0, [sp, #24]
   1add8:	ldr	x1, [x0, #240]
   1addc:	ldr	x0, [sp, #16]
   1ade0:	str	x1, [x0]
   1ade4:	mov	w0, #0x0                   	// #0
   1ade8:	ldp	x29, x30, [sp], #32
   1adec:	ret
   1adf0:	stp	x29, x30, [sp, #-48]!
   1adf4:	mov	x29, sp
   1adf8:	str	x0, [sp, #24]
   1adfc:	str	x1, [sp, #16]
   1ae00:	ldr	x0, [sp, #24]
   1ae04:	cmp	x0, #0x0
   1ae08:	cset	w0, ne  // ne = any
   1ae0c:	and	w0, w0, #0xff
   1ae10:	and	x0, x0, #0xff
   1ae14:	cmp	x0, #0x0
   1ae18:	b.ne	1ae4c <udev_util_encode_string@@LIBUDEV_183+0xf61c>  // b.any
   1ae1c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ae20:	add	x1, x0, #0xcab
   1ae24:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ae28:	add	x4, x0, #0x850
   1ae2c:	mov	w3, #0x3cb                 	// #971
   1ae30:	mov	x2, x1
   1ae34:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ae38:	add	x1, x0, #0xcd8
   1ae3c:	mov	w0, #0x0                   	// #0
   1ae40:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1ae44:	mov	w0, #0x1                   	// #1
   1ae48:	b	1ae50 <udev_util_encode_string@@LIBUDEV_183+0xf620>
   1ae4c:	mov	w0, #0x0                   	// #0
   1ae50:	cmp	w0, #0x0
   1ae54:	b.eq	1ae60 <udev_util_encode_string@@LIBUDEV_183+0xf630>  // b.none
   1ae58:	mov	w0, #0xffffffea            	// #-22
   1ae5c:	b	1af64 <udev_util_encode_string@@LIBUDEV_183+0xf734>
   1ae60:	ldr	x0, [sp, #16]
   1ae64:	cmp	x0, #0x0
   1ae68:	cset	w0, ne  // ne = any
   1ae6c:	and	w0, w0, #0xff
   1ae70:	and	x0, x0, #0xff
   1ae74:	cmp	x0, #0x0
   1ae78:	b.ne	1aeac <udev_util_encode_string@@LIBUDEV_183+0xf67c>  // b.any
   1ae7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ae80:	add	x1, x0, #0xcab
   1ae84:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ae88:	add	x4, x0, #0x850
   1ae8c:	mov	w3, #0x3cc                 	// #972
   1ae90:	mov	x2, x1
   1ae94:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ae98:	add	x1, x0, #0x2d8
   1ae9c:	mov	w0, #0x0                   	// #0
   1aea0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1aea4:	mov	w0, #0x1                   	// #1
   1aea8:	b	1aeb0 <udev_util_encode_string@@LIBUDEV_183+0xf680>
   1aeac:	mov	w0, #0x0                   	// #0
   1aeb0:	cmp	w0, #0x0
   1aeb4:	b.eq	1aec0 <udev_util_encode_string@@LIBUDEV_183+0xf690>  // b.none
   1aeb8:	mov	w0, #0xffffffea            	// #-22
   1aebc:	b	1af64 <udev_util_encode_string@@LIBUDEV_183+0xf734>
   1aec0:	ldr	x0, [sp, #24]
   1aec4:	bl	186d0 <udev_util_encode_string@@LIBUDEV_183+0xcea0>
   1aec8:	str	w0, [sp, #44]
   1aecc:	ldr	w0, [sp, #44]
   1aed0:	cmp	w0, #0x0
   1aed4:	b.ge	1aee0 <udev_util_encode_string@@LIBUDEV_183+0xf6b0>  // b.tcont
   1aed8:	ldr	w0, [sp, #44]
   1aedc:	b	1af64 <udev_util_encode_string@@LIBUDEV_183+0xf734>
   1aee0:	ldr	x0, [sp, #24]
   1aee4:	ldr	x0, [x0, #192]
   1aee8:	cmp	x0, #0x0
   1aeec:	b.ne	1aef8 <udev_util_encode_string@@LIBUDEV_183+0xf6c8>  // b.any
   1aef0:	mov	w0, #0xfffffffe            	// #-2
   1aef4:	b	1af64 <udev_util_encode_string@@LIBUDEV_183+0xf734>
   1aef8:	ldr	x0, [sp, #24]
   1aefc:	ldr	x2, [x0, #192]
   1af00:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1af04:	add	x1, x0, #0x2e0
   1af08:	mov	x0, x2
   1af0c:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   1af10:	cmp	x0, #0x0
   1af14:	cset	w0, eq  // eq = none
   1af18:	and	w0, w0, #0xff
   1af1c:	and	x0, x0, #0xff
   1af20:	cmp	x0, #0x0
   1af24:	b.eq	1af50 <udev_util_encode_string@@LIBUDEV_183+0xf720>  // b.none
   1af28:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1af2c:	add	x1, x0, #0xcab
   1af30:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1af34:	add	x4, x0, #0x850
   1af38:	mov	w3, #0x3d5                 	// #981
   1af3c:	mov	x2, x1
   1af40:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1af44:	add	x1, x0, #0x2e8
   1af48:	mov	w0, #0x0                   	// #0
   1af4c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1af50:	ldr	x0, [sp, #24]
   1af54:	ldr	x1, [x0, #192]
   1af58:	ldr	x0, [sp, #16]
   1af5c:	str	x1, [x0]
   1af60:	mov	w0, #0x0                   	// #0
   1af64:	ldp	x29, x30, [sp], #48
   1af68:	ret
   1af6c:	stp	x29, x30, [sp, #-96]!
   1af70:	mov	x29, sp
   1af74:	str	x19, [sp, #16]
   1af78:	str	x0, [sp, #40]
   1af7c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1af80:	ldr	x0, [x0, #4016]
   1af84:	ldr	x1, [x0]
   1af88:	str	x1, [sp, #88]
   1af8c:	mov	x1, #0x0                   	// #0
   1af90:	str	xzr, [sp, #56]
   1af94:	str	xzr, [sp, #64]
   1af98:	str	xzr, [sp, #72]
   1af9c:	ldr	x0, [sp, #40]
   1afa0:	ldr	x0, [x0, #240]
   1afa4:	cmp	x0, #0x0
   1afa8:	b.ne	1afb4 <udev_util_encode_string@@LIBUDEV_183+0xf784>  // b.any
   1afac:	mov	w19, #0xffffffea            	// #-22
   1afb0:	b	1b134 <udev_util_encode_string@@LIBUDEV_183+0xf904>
   1afb4:	ldr	x0, [sp, #40]
   1afb8:	ldr	x0, [x0, #240]
   1afbc:	mov	w1, #0x2f                  	// #47
   1afc0:	bl	53b0 <strrchr@plt>
   1afc4:	str	x0, [sp, #80]
   1afc8:	ldr	x0, [sp, #80]
   1afcc:	cmp	x0, #0x0
   1afd0:	b.ne	1afdc <udev_util_encode_string@@LIBUDEV_183+0xf7ac>  // b.any
   1afd4:	mov	w19, #0xffffffea            	// #-22
   1afd8:	b	1b134 <udev_util_encode_string@@LIBUDEV_183+0xf904>
   1afdc:	ldr	x0, [sp, #80]
   1afe0:	add	x0, x0, #0x1
   1afe4:	str	x0, [sp, #80]
   1afe8:	ldr	x0, [sp, #80]
   1afec:	ldrb	w0, [x0]
   1aff0:	cmp	w0, #0x0
   1aff4:	b.eq	1b00c <udev_util_encode_string@@LIBUDEV_183+0xf7dc>  // b.none
   1aff8:	ldr	x0, [sp, #40]
   1affc:	ldr	x0, [x0, #240]
   1b000:	ldr	x1, [sp, #80]
   1b004:	cmp	x1, x0
   1b008:	b.hi	1b014 <udev_util_encode_string@@LIBUDEV_183+0xf7e4>  // b.pmore
   1b00c:	mov	w19, #0xffffffea            	// #-22
   1b010:	b	1b134 <udev_util_encode_string@@LIBUDEV_183+0xf904>
   1b014:	ldr	x0, [sp, #80]
   1b018:	bl	5370 <strdup@plt>
   1b01c:	str	x0, [sp, #56]
   1b020:	ldr	x0, [sp, #56]
   1b024:	cmp	x0, #0x0
   1b028:	b.ne	1b06c <udev_util_encode_string@@LIBUDEV_183+0xf83c>  // b.any
   1b02c:	mov	w19, #0xfffffff4            	// #-12
   1b030:	b	1b134 <udev_util_encode_string@@LIBUDEV_183+0xf904>
   1b034:	ldr	x1, [sp, #56]
   1b038:	ldr	x0, [sp, #72]
   1b03c:	add	x0, x1, x0
   1b040:	ldrb	w0, [x0]
   1b044:	cmp	w0, #0x21
   1b048:	b.ne	1b060 <udev_util_encode_string@@LIBUDEV_183+0xf830>  // b.any
   1b04c:	ldr	x1, [sp, #56]
   1b050:	ldr	x0, [sp, #72]
   1b054:	add	x0, x1, x0
   1b058:	mov	w1, #0x2f                  	// #47
   1b05c:	strb	w1, [x0]
   1b060:	ldr	x0, [sp, #72]
   1b064:	add	x0, x0, #0x1
   1b068:	str	x0, [sp, #72]
   1b06c:	ldr	x1, [sp, #56]
   1b070:	ldr	x0, [sp, #72]
   1b074:	add	x0, x1, x0
   1b078:	ldrb	w0, [x0]
   1b07c:	cmp	w0, #0x0
   1b080:	b.ne	1b034 <udev_util_encode_string@@LIBUDEV_183+0xf804>  // b.any
   1b084:	b	1b098 <udev_util_encode_string@@LIBUDEV_183+0xf868>
   1b088:	ldr	x1, [sp, #56]
   1b08c:	ldr	x0, [sp, #72]
   1b090:	add	x0, x1, x0
   1b094:	str	x0, [sp, #64]
   1b098:	ldr	x0, [sp, #72]
   1b09c:	cmp	x0, #0x0
   1b0a0:	b.eq	1b0e4 <udev_util_encode_string@@LIBUDEV_183+0xf8b4>  // b.none
   1b0a4:	bl	5460 <__ctype_b_loc@plt>
   1b0a8:	ldr	x1, [x0]
   1b0ac:	ldr	x2, [sp, #56]
   1b0b0:	ldr	x0, [sp, #72]
   1b0b4:	sub	x0, x0, #0x1
   1b0b8:	str	x0, [sp, #72]
   1b0bc:	ldr	x0, [sp, #72]
   1b0c0:	add	x0, x2, x0
   1b0c4:	ldrb	w0, [x0]
   1b0c8:	and	x0, x0, #0xff
   1b0cc:	lsl	x0, x0, #1
   1b0d0:	add	x0, x1, x0
   1b0d4:	ldrh	w0, [x0]
   1b0d8:	and	w0, w0, #0x800
   1b0dc:	cmp	w0, #0x0
   1b0e0:	b.ne	1b088 <udev_util_encode_string@@LIBUDEV_183+0xf858>  // b.any
   1b0e4:	ldr	x0, [sp, #72]
   1b0e8:	cmp	x0, #0x0
   1b0ec:	b.ne	1b0f4 <udev_util_encode_string@@LIBUDEV_183+0xf8c4>  // b.any
   1b0f0:	str	xzr, [sp, #64]
   1b0f4:	ldr	x0, [sp, #40]
   1b0f8:	ldrb	w1, [x0, #328]
   1b0fc:	orr	w1, w1, #0x20
   1b100:	strb	w1, [x0, #328]
   1b104:	ldr	x0, [sp, #40]
   1b108:	ldr	x1, [sp, #64]
   1b10c:	str	x1, [x0, #248]
   1b110:	ldr	x0, [sp, #40]
   1b114:	ldr	x0, [x0, #256]
   1b118:	bl	54b0 <free@plt>
   1b11c:	ldr	x1, [sp, #56]
   1b120:	ldr	x0, [sp, #40]
   1b124:	str	x1, [x0, #256]
   1b128:	str	xzr, [sp, #56]
   1b12c:	mov	w19, #0x0                   	// #0
   1b130:	nop
   1b134:	add	x0, sp, #0x38
   1b138:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1b13c:	mov	w1, w19
   1b140:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b144:	ldr	x0, [x0, #4016]
   1b148:	ldr	x2, [sp, #88]
   1b14c:	ldr	x0, [x0]
   1b150:	eor	x0, x2, x0
   1b154:	cmp	x0, #0x0
   1b158:	b.eq	1b160 <udev_util_encode_string@@LIBUDEV_183+0xf930>  // b.none
   1b15c:	bl	5390 <__stack_chk_fail@plt>
   1b160:	mov	w0, w1
   1b164:	ldr	x19, [sp, #16]
   1b168:	ldp	x29, x30, [sp], #96
   1b16c:	ret
   1b170:	stp	x29, x30, [sp, #-48]!
   1b174:	mov	x29, sp
   1b178:	str	x0, [sp, #24]
   1b17c:	str	x1, [sp, #16]
   1b180:	ldr	x0, [sp, #24]
   1b184:	cmp	x0, #0x0
   1b188:	cset	w0, ne  // ne = any
   1b18c:	and	w0, w0, #0xff
   1b190:	and	x0, x0, #0xff
   1b194:	cmp	x0, #0x0
   1b198:	b.ne	1b1cc <udev_util_encode_string@@LIBUDEV_183+0xf99c>  // b.any
   1b19c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b1a0:	add	x1, x0, #0xcab
   1b1a4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b1a8:	add	x4, x0, #0x868
   1b1ac:	mov	w3, #0x408                 	// #1032
   1b1b0:	mov	x2, x1
   1b1b4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b1b8:	add	x1, x0, #0xcd8
   1b1bc:	mov	w0, #0x0                   	// #0
   1b1c0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1b1c4:	mov	w0, #0x1                   	// #1
   1b1c8:	b	1b1d0 <udev_util_encode_string@@LIBUDEV_183+0xf9a0>
   1b1cc:	mov	w0, #0x0                   	// #0
   1b1d0:	cmp	w0, #0x0
   1b1d4:	b.eq	1b1e0 <udev_util_encode_string@@LIBUDEV_183+0xf9b0>  // b.none
   1b1d8:	mov	w0, #0xffffffea            	// #-22
   1b1dc:	b	1b2f8 <udev_util_encode_string@@LIBUDEV_183+0xfac8>
   1b1e0:	ldr	x0, [sp, #16]
   1b1e4:	cmp	x0, #0x0
   1b1e8:	cset	w0, ne  // ne = any
   1b1ec:	and	w0, w0, #0xff
   1b1f0:	and	x0, x0, #0xff
   1b1f4:	cmp	x0, #0x0
   1b1f8:	b.ne	1b22c <udev_util_encode_string@@LIBUDEV_183+0xf9fc>  // b.any
   1b1fc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b200:	add	x1, x0, #0xcab
   1b204:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b208:	add	x4, x0, #0x868
   1b20c:	mov	w3, #0x409                 	// #1033
   1b210:	mov	x2, x1
   1b214:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b218:	add	x1, x0, #0xcd0
   1b21c:	mov	w0, #0x0                   	// #0
   1b220:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1b224:	mov	w0, #0x1                   	// #1
   1b228:	b	1b230 <udev_util_encode_string@@LIBUDEV_183+0xfa00>
   1b22c:	mov	w0, #0x0                   	// #0
   1b230:	cmp	w0, #0x0
   1b234:	b.eq	1b240 <udev_util_encode_string@@LIBUDEV_183+0xfa10>  // b.none
   1b238:	mov	w0, #0xffffffea            	// #-22
   1b23c:	b	1b2f8 <udev_util_encode_string@@LIBUDEV_183+0xfac8>
   1b240:	ldr	x0, [sp, #24]
   1b244:	ldrb	w0, [x0, #328]
   1b248:	ubfx	x0, x0, #5, #1
   1b24c:	and	w0, w0, #0xff
   1b250:	eor	w0, w0, #0x1
   1b254:	and	w0, w0, #0xff
   1b258:	cmp	w0, #0x0
   1b25c:	b.eq	1b280 <udev_util_encode_string@@LIBUDEV_183+0xfa50>  // b.none
   1b260:	ldr	x0, [sp, #24]
   1b264:	bl	1af6c <udev_util_encode_string@@LIBUDEV_183+0xf73c>
   1b268:	str	w0, [sp, #44]
   1b26c:	ldr	w0, [sp, #44]
   1b270:	cmp	w0, #0x0
   1b274:	b.ge	1b280 <udev_util_encode_string@@LIBUDEV_183+0xfa50>  // b.tcont
   1b278:	ldr	w0, [sp, #44]
   1b27c:	b	1b2f8 <udev_util_encode_string@@LIBUDEV_183+0xfac8>
   1b280:	ldr	x0, [sp, #24]
   1b284:	ldr	x0, [x0, #256]
   1b288:	cmp	x0, #0x0
   1b28c:	cset	w0, ne  // ne = any
   1b290:	and	w0, w0, #0xff
   1b294:	and	x0, x0, #0xff
   1b298:	cmp	x0, #0x0
   1b29c:	b.ne	1b2d0 <udev_util_encode_string@@LIBUDEV_183+0xfaa0>  // b.any
   1b2a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b2a4:	add	x1, x0, #0xcab
   1b2a8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b2ac:	add	x4, x0, #0x868
   1b2b0:	mov	w3, #0x411                 	// #1041
   1b2b4:	mov	x2, x1
   1b2b8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b2bc:	add	x1, x0, #0x318
   1b2c0:	mov	w0, #0x0                   	// #0
   1b2c4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1b2c8:	mov	w0, #0x1                   	// #1
   1b2cc:	b	1b2d4 <udev_util_encode_string@@LIBUDEV_183+0xfaa4>
   1b2d0:	mov	w0, #0x0                   	// #0
   1b2d4:	cmp	w0, #0x0
   1b2d8:	b.eq	1b2e4 <udev_util_encode_string@@LIBUDEV_183+0xfab4>  // b.none
   1b2dc:	mov	w0, #0xfffffffe            	// #-2
   1b2e0:	b	1b2f8 <udev_util_encode_string@@LIBUDEV_183+0xfac8>
   1b2e4:	ldr	x0, [sp, #24]
   1b2e8:	ldr	x1, [x0, #256]
   1b2ec:	ldr	x0, [sp, #16]
   1b2f0:	str	x1, [x0]
   1b2f4:	mov	w0, #0x0                   	// #0
   1b2f8:	ldp	x29, x30, [sp], #48
   1b2fc:	ret
   1b300:	stp	x29, x30, [sp, #-48]!
   1b304:	mov	x29, sp
   1b308:	str	x0, [sp, #24]
   1b30c:	str	x1, [sp, #16]
   1b310:	ldr	x0, [sp, #24]
   1b314:	cmp	x0, #0x0
   1b318:	cset	w0, ne  // ne = any
   1b31c:	and	w0, w0, #0xff
   1b320:	and	x0, x0, #0xff
   1b324:	cmp	x0, #0x0
   1b328:	b.ne	1b35c <udev_util_encode_string@@LIBUDEV_183+0xfb2c>  // b.any
   1b32c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b330:	add	x1, x0, #0xcab
   1b334:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b338:	add	x4, x0, #0x880
   1b33c:	mov	w3, #0x41a                 	// #1050
   1b340:	mov	x2, x1
   1b344:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b348:	add	x1, x0, #0xcd8
   1b34c:	mov	w0, #0x0                   	// #0
   1b350:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1b354:	mov	w0, #0x1                   	// #1
   1b358:	b	1b360 <udev_util_encode_string@@LIBUDEV_183+0xfb30>
   1b35c:	mov	w0, #0x0                   	// #0
   1b360:	cmp	w0, #0x0
   1b364:	b.eq	1b370 <udev_util_encode_string@@LIBUDEV_183+0xfb40>  // b.none
   1b368:	mov	w0, #0xffffffea            	// #-22
   1b36c:	b	1b43c <udev_util_encode_string@@LIBUDEV_183+0xfc0c>
   1b370:	ldr	x0, [sp, #16]
   1b374:	cmp	x0, #0x0
   1b378:	cset	w0, ne  // ne = any
   1b37c:	and	w0, w0, #0xff
   1b380:	and	x0, x0, #0xff
   1b384:	cmp	x0, #0x0
   1b388:	b.ne	1b3bc <udev_util_encode_string@@LIBUDEV_183+0xfb8c>  // b.any
   1b38c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b390:	add	x1, x0, #0xcab
   1b394:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b398:	add	x4, x0, #0x880
   1b39c:	mov	w3, #0x41b                 	// #1051
   1b3a0:	mov	x2, x1
   1b3a4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b3a8:	add	x1, x0, #0xcd0
   1b3ac:	mov	w0, #0x0                   	// #0
   1b3b0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1b3b4:	mov	w0, #0x1                   	// #1
   1b3b8:	b	1b3c0 <udev_util_encode_string@@LIBUDEV_183+0xfb90>
   1b3bc:	mov	w0, #0x0                   	// #0
   1b3c0:	cmp	w0, #0x0
   1b3c4:	b.eq	1b3d0 <udev_util_encode_string@@LIBUDEV_183+0xfba0>  // b.none
   1b3c8:	mov	w0, #0xffffffea            	// #-22
   1b3cc:	b	1b43c <udev_util_encode_string@@LIBUDEV_183+0xfc0c>
   1b3d0:	ldr	x0, [sp, #24]
   1b3d4:	ldrb	w0, [x0, #328]
   1b3d8:	ubfx	x0, x0, #5, #1
   1b3dc:	and	w0, w0, #0xff
   1b3e0:	eor	w0, w0, #0x1
   1b3e4:	and	w0, w0, #0xff
   1b3e8:	cmp	w0, #0x0
   1b3ec:	b.eq	1b410 <udev_util_encode_string@@LIBUDEV_183+0xfbe0>  // b.none
   1b3f0:	ldr	x0, [sp, #24]
   1b3f4:	bl	1af6c <udev_util_encode_string@@LIBUDEV_183+0xf73c>
   1b3f8:	str	w0, [sp, #44]
   1b3fc:	ldr	w0, [sp, #44]
   1b400:	cmp	w0, #0x0
   1b404:	b.ge	1b410 <udev_util_encode_string@@LIBUDEV_183+0xfbe0>  // b.tcont
   1b408:	ldr	w0, [sp, #44]
   1b40c:	b	1b43c <udev_util_encode_string@@LIBUDEV_183+0xfc0c>
   1b410:	ldr	x0, [sp, #24]
   1b414:	ldr	x0, [x0, #248]
   1b418:	cmp	x0, #0x0
   1b41c:	b.ne	1b428 <udev_util_encode_string@@LIBUDEV_183+0xfbf8>  // b.any
   1b420:	mov	w0, #0xfffffffe            	// #-2
   1b424:	b	1b43c <udev_util_encode_string@@LIBUDEV_183+0xfc0c>
   1b428:	ldr	x0, [sp, #24]
   1b42c:	ldr	x1, [x0, #248]
   1b430:	ldr	x0, [sp, #16]
   1b434:	str	x1, [x0]
   1b438:	mov	w0, #0x0                   	// #0
   1b43c:	ldp	x29, x30, [sp], #48
   1b440:	ret
   1b444:	stp	x29, x30, [sp, #-32]!
   1b448:	mov	x29, sp
   1b44c:	str	x0, [sp, #24]
   1b450:	ldr	x0, [sp, #24]
   1b454:	cmp	x0, #0x0
   1b458:	cset	w0, eq  // eq = none
   1b45c:	and	w0, w0, #0xff
   1b460:	and	x0, x0, #0xff
   1b464:	cmp	x0, #0x0
   1b468:	b.eq	1b494 <udev_util_encode_string@@LIBUDEV_183+0xfc64>  // b.none
   1b46c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b470:	add	x1, x0, #0xcab
   1b474:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b478:	add	x4, x0, #0x898
   1b47c:	mov	w3, #0x42b                 	// #1067
   1b480:	mov	x2, x1
   1b484:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b488:	add	x1, x0, #0x328
   1b48c:	mov	w0, #0x0                   	// #0
   1b490:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b494:	mov	w1, #0x3a                  	// #58
   1b498:	ldr	x0, [sp, #24]
   1b49c:	bl	5570 <strchr@plt>
   1b4a0:	cmp	x0, #0x0
   1b4a4:	b.ne	1b4c4 <udev_util_encode_string@@LIBUDEV_183+0xfc94>  // b.any
   1b4a8:	mov	w1, #0x20                  	// #32
   1b4ac:	ldr	x0, [sp, #24]
   1b4b0:	bl	5570 <strchr@plt>
   1b4b4:	cmp	x0, #0x0
   1b4b8:	b.ne	1b4c4 <udev_util_encode_string@@LIBUDEV_183+0xfc94>  // b.any
   1b4bc:	mov	w0, #0x1                   	// #1
   1b4c0:	b	1b4c8 <udev_util_encode_string@@LIBUDEV_183+0xfc98>
   1b4c4:	mov	w0, #0x0                   	// #0
   1b4c8:	and	w0, w0, #0x1
   1b4cc:	and	w0, w0, #0xff
   1b4d0:	ldp	x29, x30, [sp], #32
   1b4d4:	ret
   1b4d8:	stp	x29, x30, [sp, #-48]!
   1b4dc:	mov	x29, sp
   1b4e0:	str	x0, [sp, #24]
   1b4e4:	str	x1, [sp, #16]
   1b4e8:	ldr	x0, [sp, #24]
   1b4ec:	cmp	x0, #0x0
   1b4f0:	cset	w0, eq  // eq = none
   1b4f4:	and	w0, w0, #0xff
   1b4f8:	and	x0, x0, #0xff
   1b4fc:	cmp	x0, #0x0
   1b500:	b.eq	1b52c <udev_util_encode_string@@LIBUDEV_183+0xfcfc>  // b.none
   1b504:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b508:	add	x1, x0, #0xcab
   1b50c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b510:	add	x4, x0, #0x8a8
   1b514:	mov	w3, #0x433                 	// #1075
   1b518:	mov	x2, x1
   1b51c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b520:	add	x1, x0, #0xcd8
   1b524:	mov	w0, #0x0                   	// #0
   1b528:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b52c:	ldr	x0, [sp, #16]
   1b530:	cmp	x0, #0x0
   1b534:	cset	w0, eq  // eq = none
   1b538:	and	w0, w0, #0xff
   1b53c:	and	x0, x0, #0xff
   1b540:	cmp	x0, #0x0
   1b544:	b.eq	1b570 <udev_util_encode_string@@LIBUDEV_183+0xfd40>  // b.none
   1b548:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b54c:	add	x1, x0, #0xcab
   1b550:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b554:	add	x4, x0, #0x8a8
   1b558:	mov	w3, #0x434                 	// #1076
   1b55c:	mov	x2, x1
   1b560:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b564:	add	x1, x0, #0x328
   1b568:	mov	w0, #0x0                   	// #0
   1b56c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b570:	ldr	x0, [sp, #16]
   1b574:	bl	1b444 <udev_util_encode_string@@LIBUDEV_183+0xfc14>
   1b578:	and	w0, w0, #0xff
   1b57c:	eor	w0, w0, #0x1
   1b580:	and	w0, w0, #0xff
   1b584:	cmp	w0, #0x0
   1b588:	b.eq	1b594 <udev_util_encode_string@@LIBUDEV_183+0xfd64>  // b.none
   1b58c:	mov	w0, #0xffffffea            	// #-22
   1b590:	b	1b614 <udev_util_encode_string@@LIBUDEV_183+0xfde4>
   1b594:	ldr	x0, [sp, #24]
   1b598:	add	x2, x0, #0x60
   1b59c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b5a0:	ldr	x1, [x0, #4064]
   1b5a4:	mov	x0, x2
   1b5a8:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
   1b5ac:	str	w0, [sp, #44]
   1b5b0:	ldr	w0, [sp, #44]
   1b5b4:	cmp	w0, #0x0
   1b5b8:	b.ge	1b5c4 <udev_util_encode_string@@LIBUDEV_183+0xfd94>  // b.tcont
   1b5bc:	ldr	w0, [sp, #44]
   1b5c0:	b	1b614 <udev_util_encode_string@@LIBUDEV_183+0xfde4>
   1b5c4:	ldr	x0, [sp, #24]
   1b5c8:	ldr	x0, [x0, #96]
   1b5cc:	ldr	x1, [sp, #16]
   1b5d0:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
   1b5d4:	str	w0, [sp, #44]
   1b5d8:	ldr	w0, [sp, #44]
   1b5dc:	cmp	w0, #0x0
   1b5e0:	b.ge	1b5ec <udev_util_encode_string@@LIBUDEV_183+0xfdbc>  // b.tcont
   1b5e4:	ldr	w0, [sp, #44]
   1b5e8:	b	1b614 <udev_util_encode_string@@LIBUDEV_183+0xfde4>
   1b5ec:	ldr	x0, [sp, #24]
   1b5f0:	ldr	x0, [x0, #120]
   1b5f4:	add	x1, x0, #0x1
   1b5f8:	ldr	x0, [sp, #24]
   1b5fc:	str	x1, [x0, #120]
   1b600:	ldr	x0, [sp, #24]
   1b604:	ldrb	w1, [x0, #328]
   1b608:	orr	w1, w1, #0x4
   1b60c:	strb	w1, [x0, #328]
   1b610:	mov	w0, #0x0                   	// #0
   1b614:	ldp	x29, x30, [sp], #48
   1b618:	ret
   1b61c:	stp	x29, x30, [sp, #-48]!
   1b620:	mov	x29, sp
   1b624:	str	x0, [sp, #24]
   1b628:	str	x1, [sp, #16]
   1b62c:	ldr	x0, [sp, #24]
   1b630:	cmp	x0, #0x0
   1b634:	cset	w0, eq  // eq = none
   1b638:	and	w0, w0, #0xff
   1b63c:	and	x0, x0, #0xff
   1b640:	cmp	x0, #0x0
   1b644:	b.eq	1b670 <udev_util_encode_string@@LIBUDEV_183+0xfe40>  // b.none
   1b648:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b64c:	add	x1, x0, #0xcab
   1b650:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b654:	add	x4, x0, #0x8b8
   1b658:	mov	w3, #0x44a                 	// #1098
   1b65c:	mov	x2, x1
   1b660:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b664:	add	x1, x0, #0xcd8
   1b668:	mov	w0, #0x0                   	// #0
   1b66c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b670:	ldr	x0, [sp, #16]
   1b674:	cmp	x0, #0x0
   1b678:	cset	w0, eq  // eq = none
   1b67c:	and	w0, w0, #0xff
   1b680:	and	x0, x0, #0xff
   1b684:	cmp	x0, #0x0
   1b688:	b.eq	1b6b4 <udev_util_encode_string@@LIBUDEV_183+0xfe84>  // b.none
   1b68c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b690:	add	x1, x0, #0xcab
   1b694:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b698:	add	x4, x0, #0x8b8
   1b69c:	mov	w3, #0x44b                 	// #1099
   1b6a0:	mov	x2, x1
   1b6a4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b6a8:	add	x1, x0, #0x330
   1b6ac:	mov	w0, #0x0                   	// #0
   1b6b0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b6b4:	ldr	x0, [sp, #24]
   1b6b8:	add	x2, x0, #0x88
   1b6bc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b6c0:	ldr	x1, [x0, #4064]
   1b6c4:	mov	x0, x2
   1b6c8:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
   1b6cc:	str	w0, [sp, #44]
   1b6d0:	ldr	w0, [sp, #44]
   1b6d4:	cmp	w0, #0x0
   1b6d8:	b.ge	1b6e4 <udev_util_encode_string@@LIBUDEV_183+0xfeb4>  // b.tcont
   1b6dc:	ldr	w0, [sp, #44]
   1b6e0:	b	1b734 <udev_util_encode_string@@LIBUDEV_183+0xff04>
   1b6e4:	ldr	x0, [sp, #24]
   1b6e8:	ldr	x0, [x0, #136]
   1b6ec:	ldr	x1, [sp, #16]
   1b6f0:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
   1b6f4:	str	w0, [sp, #44]
   1b6f8:	ldr	w0, [sp, #44]
   1b6fc:	cmp	w0, #0x0
   1b700:	b.ge	1b70c <udev_util_encode_string@@LIBUDEV_183+0xfedc>  // b.tcont
   1b704:	ldr	w0, [sp, #44]
   1b708:	b	1b734 <udev_util_encode_string@@LIBUDEV_183+0xff04>
   1b70c:	ldr	x0, [sp, #24]
   1b710:	ldr	x0, [x0, #160]
   1b714:	add	x1, x0, #0x1
   1b718:	ldr	x0, [sp, #24]
   1b71c:	str	x1, [x0, #160]
   1b720:	ldr	x0, [sp, #24]
   1b724:	ldrb	w1, [x0, #328]
   1b728:	orr	w1, w1, #0x8
   1b72c:	strb	w1, [x0, #328]
   1b730:	mov	w0, #0x0                   	// #0
   1b734:	ldp	x29, x30, [sp], #48
   1b738:	ret
   1b73c:	stp	x29, x30, [sp, #-80]!
   1b740:	mov	x29, sp
   1b744:	str	x19, [sp, #16]
   1b748:	str	x0, [sp, #40]
   1b74c:	str	x1, [sp, #32]
   1b750:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b754:	ldr	x0, [x0, #4016]
   1b758:	ldr	x1, [x0]
   1b75c:	str	x1, [sp, #72]
   1b760:	mov	x1, #0x0                   	// #0
   1b764:	str	xzr, [sp, #56]
   1b768:	ldr	x0, [sp, #40]
   1b76c:	cmp	x0, #0x0
   1b770:	cset	w0, eq  // eq = none
   1b774:	and	w0, w0, #0xff
   1b778:	and	x0, x0, #0xff
   1b77c:	cmp	x0, #0x0
   1b780:	b.eq	1b7ac <udev_util_encode_string@@LIBUDEV_183+0xff7c>  // b.none
   1b784:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b788:	add	x1, x0, #0xcab
   1b78c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b790:	add	x4, x0, #0x8d0
   1b794:	mov	w3, #0x460                 	// #1120
   1b798:	mov	x2, x1
   1b79c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b7a0:	add	x1, x0, #0xcd8
   1b7a4:	mov	w0, #0x0                   	// #0
   1b7a8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b7ac:	ldr	x0, [sp, #32]
   1b7b0:	cmp	x0, #0x0
   1b7b4:	cset	w0, eq  // eq = none
   1b7b8:	and	w0, w0, #0xff
   1b7bc:	and	x0, x0, #0xff
   1b7c0:	cmp	x0, #0x0
   1b7c4:	b.eq	1b7f0 <udev_util_encode_string@@LIBUDEV_183+0xffc0>  // b.none
   1b7c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b7cc:	add	x1, x0, #0xcab
   1b7d0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b7d4:	add	x4, x0, #0x8d0
   1b7d8:	mov	w3, #0x461                 	// #1121
   1b7dc:	mov	x2, x1
   1b7e0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b7e4:	add	x1, x0, #0x338
   1b7e8:	mov	w0, #0x0                   	// #0
   1b7ec:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b7f0:	ldr	x0, [sp, #32]
   1b7f4:	bl	5370 <strdup@plt>
   1b7f8:	str	x0, [sp, #56]
   1b7fc:	ldr	x0, [sp, #56]
   1b800:	cmp	x0, #0x0
   1b804:	b.ne	1b810 <udev_util_encode_string@@LIBUDEV_183+0xffe0>  // b.any
   1b808:	mov	w19, #0xfffffff4            	// #-12
   1b80c:	b	1b8ac <udev_util_encode_string@@LIBUDEV_183+0x1007c>
   1b810:	ldr	x0, [sp, #56]
   1b814:	mov	w1, #0x3d                  	// #61
   1b818:	bl	5570 <strchr@plt>
   1b81c:	str	x0, [sp, #64]
   1b820:	ldr	x0, [sp, #64]
   1b824:	cmp	x0, #0x0
   1b828:	b.ne	1b834 <udev_util_encode_string@@LIBUDEV_183+0x10004>  // b.any
   1b82c:	mov	w19, #0xffffffea            	// #-22
   1b830:	b	1b8ac <udev_util_encode_string@@LIBUDEV_183+0x1007c>
   1b834:	ldr	x0, [sp, #64]
   1b838:	strb	wzr, [x0]
   1b83c:	ldr	x0, [sp, #64]
   1b840:	add	x0, x0, #0x1
   1b844:	str	x0, [sp, #64]
   1b848:	ldr	x0, [sp, #64]
   1b84c:	bl	15238 <udev_util_encode_string@@LIBUDEV_183+0x9a08>
   1b850:	and	w0, w0, #0xff
   1b854:	cmp	w0, #0x0
   1b858:	b.eq	1b860 <udev_util_encode_string@@LIBUDEV_183+0x10030>  // b.none
   1b85c:	str	xzr, [sp, #64]
   1b860:	ldr	x0, [sp, #56]
   1b864:	mov	w3, #0x0                   	// #0
   1b868:	ldr	x2, [sp, #64]
   1b86c:	mov	x1, x0
   1b870:	ldr	x0, [sp, #40]
   1b874:	bl	156c4 <udev_util_encode_string@@LIBUDEV_183+0x9e94>
   1b878:	str	w0, [sp, #52]
   1b87c:	ldr	w0, [sp, #52]
   1b880:	cmp	w0, #0x0
   1b884:	b.ge	1b890 <udev_util_encode_string@@LIBUDEV_183+0x10060>  // b.tcont
   1b888:	ldr	w19, [sp, #52]
   1b88c:	b	1b8ac <udev_util_encode_string@@LIBUDEV_183+0x1007c>
   1b890:	ldr	x0, [sp, #56]
   1b894:	mov	w3, #0x1                   	// #1
   1b898:	ldr	x2, [sp, #64]
   1b89c:	mov	x1, x0
   1b8a0:	ldr	x0, [sp, #40]
   1b8a4:	bl	156c4 <udev_util_encode_string@@LIBUDEV_183+0x9e94>
   1b8a8:	mov	w19, w0
   1b8ac:	add	x0, sp, #0x38
   1b8b0:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1b8b4:	mov	w1, w19
   1b8b8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b8bc:	ldr	x0, [x0, #4016]
   1b8c0:	ldr	x2, [sp, #72]
   1b8c4:	ldr	x0, [x0]
   1b8c8:	eor	x0, x2, x0
   1b8cc:	cmp	x0, #0x0
   1b8d0:	b.eq	1b8d8 <udev_util_encode_string@@LIBUDEV_183+0x100a8>  // b.none
   1b8d4:	bl	5390 <__stack_chk_fail@plt>
   1b8d8:	mov	w0, w1
   1b8dc:	ldr	x19, [sp, #16]
   1b8e0:	ldp	x29, x30, [sp], #80
   1b8e4:	ret
   1b8e8:	stp	x29, x30, [sp, #-80]!
   1b8ec:	mov	x29, sp
   1b8f0:	str	x0, [sp, #24]
   1b8f4:	str	x1, [sp, #16]
   1b8f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b8fc:	ldr	x0, [x0, #4016]
   1b900:	ldr	x1, [x0]
   1b904:	str	x1, [sp, #72]
   1b908:	mov	x1, #0x0                   	// #0
   1b90c:	ldr	x0, [sp, #24]
   1b910:	cmp	x0, #0x0
   1b914:	cset	w0, eq  // eq = none
   1b918:	and	w0, w0, #0xff
   1b91c:	and	x0, x0, #0xff
   1b920:	cmp	x0, #0x0
   1b924:	b.eq	1b950 <udev_util_encode_string@@LIBUDEV_183+0x10120>  // b.none
   1b928:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b92c:	add	x1, x0, #0xcab
   1b930:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b934:	add	x4, x0, #0x900
   1b938:	mov	w3, #0x47d                 	// #1149
   1b93c:	mov	x2, x1
   1b940:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b944:	add	x1, x0, #0xcd8
   1b948:	mov	w0, #0x0                   	// #0
   1b94c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b950:	add	x4, sp, #0x30
   1b954:	ldr	x3, [sp, #16]
   1b958:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b95c:	add	x2, x0, #0x340
   1b960:	mov	x1, #0x16                  	// #22
   1b964:	mov	x0, x4
   1b968:	bl	5190 <snprintf@plt>
   1b96c:	cmp	w0, #0x15
   1b970:	cset	w0, hi  // hi = pmore
   1b974:	and	w0, w0, #0xff
   1b978:	and	x0, x0, #0xff
   1b97c:	cmp	x0, #0x0
   1b980:	b.eq	1b9ac <udev_util_encode_string@@LIBUDEV_183+0x1017c>  // b.none
   1b984:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1b988:	add	x1, x0, #0xcab
   1b98c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b990:	add	x4, x0, #0x900
   1b994:	mov	w3, #0x47f                 	// #1151
   1b998:	mov	x2, x1
   1b99c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b9a0:	add	x1, x0, #0x348
   1b9a4:	mov	w0, #0x0                   	// #0
   1b9a8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1b9ac:	add	x0, sp, #0x30
   1b9b0:	mov	x2, x0
   1b9b4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1b9b8:	add	x1, x0, #0x370
   1b9bc:	ldr	x0, [sp, #24]
   1b9c0:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   1b9c4:	str	w0, [sp, #44]
   1b9c8:	ldr	w0, [sp, #44]
   1b9cc:	cmp	w0, #0x0
   1b9d0:	b.ge	1b9dc <udev_util_encode_string@@LIBUDEV_183+0x101ac>  // b.tcont
   1b9d4:	ldr	w0, [sp, #44]
   1b9d8:	b	1b9ec <udev_util_encode_string@@LIBUDEV_183+0x101bc>
   1b9dc:	ldr	x0, [sp, #24]
   1b9e0:	ldr	x1, [sp, #16]
   1b9e4:	str	x1, [x0, #296]
   1b9e8:	mov	w0, #0x0                   	// #0
   1b9ec:	mov	w1, w0
   1b9f0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1b9f4:	ldr	x0, [x0, #4016]
   1b9f8:	ldr	x2, [sp, #72]
   1b9fc:	ldr	x0, [x0]
   1ba00:	eor	x0, x2, x0
   1ba04:	cmp	x0, #0x0
   1ba08:	b.eq	1ba10 <udev_util_encode_string@@LIBUDEV_183+0x101e0>  // b.none
   1ba0c:	bl	5390 <__stack_chk_fail@plt>
   1ba10:	mov	w0, w1
   1ba14:	ldp	x29, x30, [sp], #80
   1ba18:	ret
   1ba1c:	stp	x29, x30, [sp, #-160]!
   1ba20:	mov	x29, sp
   1ba24:	sub	sp, sp, #0x20
   1ba28:	str	x0, [x29, #40]
   1ba2c:	strb	w1, [x29, #39]
   1ba30:	str	x2, [x29, #24]
   1ba34:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1ba38:	ldr	x0, [x0, #4016]
   1ba3c:	ldr	x1, [x0]
   1ba40:	str	x1, [x29, #152]
   1ba44:	mov	x1, #0x0                   	// #0
   1ba48:	ldr	x0, [x29, #40]
   1ba4c:	cmp	x0, #0x0
   1ba50:	cset	w0, eq  // eq = none
   1ba54:	and	w0, w0, #0xff
   1ba58:	and	x0, x0, #0xff
   1ba5c:	cmp	x0, #0x0
   1ba60:	b.eq	1ba8c <udev_util_encode_string@@LIBUDEV_183+0x1025c>  // b.none
   1ba64:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ba68:	add	x1, x0, #0xcab
   1ba6c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ba70:	add	x4, x0, #0x920
   1ba74:	mov	w3, #0x48d                 	// #1165
   1ba78:	mov	x2, x1
   1ba7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ba80:	add	x1, x0, #0xcd8
   1ba84:	mov	w0, #0x0                   	// #0
   1ba88:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1ba8c:	ldr	x0, [x29, #24]
   1ba90:	cmp	x0, #0x0
   1ba94:	cset	w0, eq  // eq = none
   1ba98:	and	w0, w0, #0xff
   1ba9c:	and	x0, x0, #0xff
   1baa0:	cmp	x0, #0x0
   1baa4:	b.eq	1bad0 <udev_util_encode_string@@LIBUDEV_183+0x102a0>  // b.none
   1baa8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1baac:	add	x1, x0, #0xcab
   1bab0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bab4:	add	x4, x0, #0x920
   1bab8:	mov	w3, #0x48e                 	// #1166
   1babc:	mov	x2, x1
   1bac0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bac4:	add	x1, x0, #0x20
   1bac8:	mov	w0, #0x0                   	// #0
   1bacc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1bad0:	ldrb	w0, [x29, #39]
   1bad4:	cmp	w0, #0x57
   1bad8:	b.eq	1bdac <udev_util_encode_string@@LIBUDEV_183+0x1057c>  // b.none
   1badc:	cmp	w0, #0x57
   1bae0:	b.gt	1bdd8 <udev_util_encode_string@@LIBUDEV_183+0x105a8>
   1bae4:	cmp	w0, #0x53
   1bae8:	b.eq	1bb48 <udev_util_encode_string@@LIBUDEV_183+0x10318>  // b.none
   1baec:	cmp	w0, #0x53
   1baf0:	b.gt	1bdd8 <udev_util_encode_string@@LIBUDEV_183+0x105a8>
   1baf4:	cmp	w0, #0x4c
   1baf8:	b.eq	1bd80 <udev_util_encode_string@@LIBUDEV_183+0x10550>  // b.none
   1bafc:	cmp	w0, #0x4c
   1bb00:	b.gt	1bdd8 <udev_util_encode_string@@LIBUDEV_183+0x105a8>
   1bb04:	cmp	w0, #0x49
   1bb08:	b.eq	1bd30 <udev_util_encode_string@@LIBUDEV_183+0x10500>  // b.none
   1bb0c:	cmp	w0, #0x49
   1bb10:	b.gt	1bdd8 <udev_util_encode_string@@LIBUDEV_183+0x105a8>
   1bb14:	cmp	w0, #0x45
   1bb18:	b.eq	1bd0c <udev_util_encode_string@@LIBUDEV_183+0x104dc>  // b.none
   1bb1c:	cmp	w0, #0x47
   1bb20:	b.ne	1bdd8 <udev_util_encode_string@@LIBUDEV_183+0x105a8>  // b.any
   1bb24:	ldr	x1, [x29, #24]
   1bb28:	ldr	x0, [x29, #40]
   1bb2c:	bl	1b4d8 <udev_util_encode_string@@LIBUDEV_183+0xfca8>
   1bb30:	str	w0, [x29, #60]
   1bb34:	ldr	w0, [x29, #60]
   1bb38:	cmp	w0, #0x0
   1bb3c:	b.ge	1be9c <udev_util_encode_string@@LIBUDEV_183+0x1066c>  // b.tcont
   1bb40:	ldr	w0, [x29, #60]
   1bb44:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bb48:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bb4c:	add	x0, x0, #0x2e0
   1bb50:	str	x0, [x29, #136]
   1bb54:	ldr	x0, [x29, #24]
   1bb58:	str	x0, [x29, #144]
   1bb5c:	str	xzr, [x29, #88]
   1bb60:	str	xzr, [x29, #96]
   1bb64:	b	1bb98 <udev_util_encode_string@@LIBUDEV_183+0x10368>
   1bb68:	ldr	x0, [x29, #96]
   1bb6c:	lsl	x0, x0, #3
   1bb70:	add	x1, x29, #0x88
   1bb74:	ldr	x0, [x1, x0]
   1bb78:	bl	5040 <strlen@plt>
   1bb7c:	mov	x1, x0
   1bb80:	ldr	x0, [x29, #88]
   1bb84:	add	x0, x0, x1
   1bb88:	str	x0, [x29, #88]
   1bb8c:	ldr	x0, [x29, #96]
   1bb90:	add	x0, x0, #0x1
   1bb94:	str	x0, [x29, #96]
   1bb98:	ldr	x0, [x29, #96]
   1bb9c:	cmp	x0, #0x1
   1bba0:	b.hi	1bbbc <udev_util_encode_string@@LIBUDEV_183+0x1038c>  // b.pmore
   1bba4:	ldr	x0, [x29, #96]
   1bba8:	lsl	x0, x0, #3
   1bbac:	add	x1, x29, #0x88
   1bbb0:	ldr	x0, [x1, x0]
   1bbb4:	cmp	x0, #0x0
   1bbb8:	b.ne	1bb68 <udev_util_encode_string@@LIBUDEV_183+0x10338>  // b.any
   1bbbc:	ldr	x0, [x29, #88]
   1bbc0:	add	x0, x0, #0x1
   1bbc4:	str	x0, [x29, #104]
   1bbc8:	ldr	x1, [x29, #104]
   1bbcc:	mov	x0, #0x1                   	// #1
   1bbd0:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   1bbd4:	and	w0, w0, #0xff
   1bbd8:	and	x0, x0, #0xff
   1bbdc:	cmp	x0, #0x0
   1bbe0:	b.eq	1bc0c <udev_util_encode_string@@LIBUDEV_183+0x103dc>  // b.none
   1bbe4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bbe8:	add	x1, x0, #0xcab
   1bbec:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bbf0:	add	x4, x0, #0x920
   1bbf4:	mov	w3, #0x498                 	// #1176
   1bbf8:	mov	x2, x1
   1bbfc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bc00:	add	x1, x0, #0xe18
   1bc04:	mov	w0, #0x0                   	// #0
   1bc08:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1bc0c:	ldr	x0, [x29, #104]
   1bc10:	cmp	x0, #0x400, lsl #12
   1bc14:	cset	w0, hi  // hi = pmore
   1bc18:	and	w0, w0, #0xff
   1bc1c:	and	x0, x0, #0xff
   1bc20:	cmp	x0, #0x0
   1bc24:	b.eq	1bc50 <udev_util_encode_string@@LIBUDEV_183+0x10420>  // b.none
   1bc28:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bc2c:	add	x1, x0, #0xcab
   1bc30:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bc34:	add	x4, x0, #0x920
   1bc38:	mov	w3, #0x498                 	// #1176
   1bc3c:	mov	x2, x1
   1bc40:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bc44:	add	x1, x0, #0xe48
   1bc48:	mov	w0, #0x0                   	// #0
   1bc4c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1bc50:	ldr	x0, [x29, #104]
   1bc54:	add	x0, x0, #0xf
   1bc58:	lsr	x0, x0, #4
   1bc5c:	lsl	x0, x0, #4
   1bc60:	sub	sp, sp, x0
   1bc64:	add	x0, sp, #0x20
   1bc68:	add	x0, x0, #0xf
   1bc6c:	lsr	x0, x0, #4
   1bc70:	lsl	x0, x0, #4
   1bc74:	str	x0, [x29, #112]
   1bc78:	ldr	x0, [x29, #112]
   1bc7c:	str	x0, [x29, #80]
   1bc80:	str	xzr, [x29, #96]
   1bc84:	b	1bcb4 <udev_util_encode_string@@LIBUDEV_183+0x10484>
   1bc88:	ldr	x0, [x29, #96]
   1bc8c:	lsl	x0, x0, #3
   1bc90:	add	x1, x29, #0x88
   1bc94:	ldr	x0, [x1, x0]
   1bc98:	mov	x1, x0
   1bc9c:	ldr	x0, [x29, #80]
   1bca0:	bl	51b0 <stpcpy@plt>
   1bca4:	str	x0, [x29, #80]
   1bca8:	ldr	x0, [x29, #96]
   1bcac:	add	x0, x0, #0x1
   1bcb0:	str	x0, [x29, #96]
   1bcb4:	ldr	x0, [x29, #96]
   1bcb8:	cmp	x0, #0x1
   1bcbc:	b.hi	1bcd8 <udev_util_encode_string@@LIBUDEV_183+0x104a8>  // b.pmore
   1bcc0:	ldr	x0, [x29, #96]
   1bcc4:	lsl	x0, x0, #3
   1bcc8:	add	x1, x29, #0x88
   1bccc:	ldr	x0, [x1, x0]
   1bcd0:	cmp	x0, #0x0
   1bcd4:	b.ne	1bc88 <udev_util_encode_string@@LIBUDEV_183+0x10458>  // b.any
   1bcd8:	ldr	x0, [x29, #80]
   1bcdc:	strb	wzr, [x0]
   1bce0:	ldr	x0, [x29, #112]
   1bce4:	str	x0, [x29, #120]
   1bce8:	ldr	x1, [x29, #120]
   1bcec:	ldr	x0, [x29, #40]
   1bcf0:	bl	1b61c <udev_util_encode_string@@LIBUDEV_183+0xfdec>
   1bcf4:	str	w0, [x29, #60]
   1bcf8:	ldr	w0, [x29, #60]
   1bcfc:	cmp	w0, #0x0
   1bd00:	b.ge	1bea4 <udev_util_encode_string@@LIBUDEV_183+0x10674>  // b.tcont
   1bd04:	ldr	w0, [x29, #60]
   1bd08:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bd0c:	ldr	x1, [x29, #24]
   1bd10:	ldr	x0, [x29, #40]
   1bd14:	bl	1b73c <udev_util_encode_string@@LIBUDEV_183+0xff0c>
   1bd18:	str	w0, [x29, #60]
   1bd1c:	ldr	w0, [x29, #60]
   1bd20:	cmp	w0, #0x0
   1bd24:	b.ge	1beac <udev_util_encode_string@@LIBUDEV_183+0x1067c>  // b.tcont
   1bd28:	ldr	w0, [x29, #60]
   1bd2c:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bd30:	add	x0, x29, #0x48
   1bd34:	mov	x1, x0
   1bd38:	ldr	x0, [x29, #24]
   1bd3c:	bl	15358 <udev_util_encode_string@@LIBUDEV_183+0x9b28>
   1bd40:	str	w0, [x29, #60]
   1bd44:	ldr	w0, [x29, #60]
   1bd48:	cmp	w0, #0x0
   1bd4c:	b.ge	1bd58 <udev_util_encode_string@@LIBUDEV_183+0x10528>  // b.tcont
   1bd50:	ldr	w0, [x29, #60]
   1bd54:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bd58:	ldr	x0, [x29, #72]
   1bd5c:	mov	x1, x0
   1bd60:	ldr	x0, [x29, #40]
   1bd64:	bl	1b8e8 <udev_util_encode_string@@LIBUDEV_183+0x100b8>
   1bd68:	str	w0, [x29, #60]
   1bd6c:	ldr	w0, [x29, #60]
   1bd70:	cmp	w0, #0x0
   1bd74:	b.ge	1beb4 <udev_util_encode_string@@LIBUDEV_183+0x10684>  // b.tcont
   1bd78:	ldr	w0, [x29, #60]
   1bd7c:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bd80:	ldr	x0, [x29, #40]
   1bd84:	add	x0, x0, #0xb0
   1bd88:	mov	x1, x0
   1bd8c:	ldr	x0, [x29, #24]
   1bd90:	bl	304f4 <udev_util_encode_string@@LIBUDEV_183+0x24cc4>
   1bd94:	str	w0, [x29, #60]
   1bd98:	ldr	w0, [x29, #60]
   1bd9c:	cmp	w0, #0x0
   1bda0:	b.ge	1bebc <udev_util_encode_string@@LIBUDEV_183+0x1068c>  // b.tcont
   1bda4:	ldr	w0, [x29, #60]
   1bda8:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bdac:	ldr	x0, [x29, #40]
   1bdb0:	add	x0, x0, #0x4
   1bdb4:	mov	x1, x0
   1bdb8:	ldr	x0, [x29, #24]
   1bdbc:	bl	304f4 <udev_util_encode_string@@LIBUDEV_183+0x24cc4>
   1bdc0:	str	w0, [x29, #60]
   1bdc4:	ldr	w0, [x29, #60]
   1bdc8:	cmp	w0, #0x0
   1bdcc:	b.ge	1bec4 <udev_util_encode_string@@LIBUDEV_183+0x10694>  // b.tcont
   1bdd0:	ldr	w0, [x29, #60]
   1bdd4:	b	1becc <udev_util_encode_string@@LIBUDEV_183+0x1069c>
   1bdd8:	str	xzr, [x29, #72]
   1bddc:	ldr	x0, [x29, #40]
   1bde0:	str	x0, [x29, #128]
   1bde4:	mov	w0, #0x7                   	// #7
   1bde8:	str	w0, [x29, #64]
   1bdec:	str	wzr, [x29, #68]
   1bdf0:	ldr	x0, [x29, #128]
   1bdf4:	cmp	x0, #0x0
   1bdf8:	b.eq	1be34 <udev_util_encode_string@@LIBUDEV_183+0x10604>  // b.none
   1bdfc:	mov	w0, #0x0                   	// #0
   1be00:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1be04:	mov	w1, w0
   1be08:	ldr	w0, [x29, #64]
   1be0c:	cmp	w0, w1
   1be10:	cset	w0, le
   1be14:	and	w0, w0, #0xff
   1be18:	and	x0, x0, #0xff
   1be1c:	cmp	x0, #0x0
   1be20:	b.eq	1be34 <udev_util_encode_string@@LIBUDEV_183+0x10604>  // b.none
   1be24:	add	x0, x29, #0x48
   1be28:	mov	x1, x0
   1be2c:	ldr	x0, [x29, #128]
   1be30:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1be34:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1be38:	add	x2, x0, #0xcab
   1be3c:	ldr	x0, [x29, #72]
   1be40:	cmp	x0, #0x0
   1be44:	b.eq	1be54 <udev_util_encode_string@@LIBUDEV_183+0x10624>  // b.none
   1be48:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1be4c:	add	x0, x0, #0x30
   1be50:	b	1be58 <udev_util_encode_string@@LIBUDEV_183+0x10628>
   1be54:	mov	x0, #0x0                   	// #0
   1be58:	ldr	x3, [x29, #72]
   1be5c:	ldrb	w1, [x29, #39]
   1be60:	str	w1, [sp, #16]
   1be64:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1be68:	add	x1, x1, #0x388
   1be6c:	str	x1, [sp, #8]
   1be70:	str	xzr, [sp]
   1be74:	mov	x7, #0x0                   	// #0
   1be78:	mov	x6, x3
   1be7c:	mov	x5, x0
   1be80:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1be84:	add	x4, x0, #0x930
   1be88:	mov	w3, #0x4be                 	// #1214
   1be8c:	ldr	w1, [x29, #68]
   1be90:	ldr	w0, [x29, #64]
   1be94:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1be98:	b	1bec8 <udev_util_encode_string@@LIBUDEV_183+0x10698>
   1be9c:	nop
   1bea0:	b	1bec8 <udev_util_encode_string@@LIBUDEV_183+0x10698>
   1bea4:	nop
   1bea8:	b	1bec8 <udev_util_encode_string@@LIBUDEV_183+0x10698>
   1beac:	nop
   1beb0:	b	1bec8 <udev_util_encode_string@@LIBUDEV_183+0x10698>
   1beb4:	nop
   1beb8:	b	1bec8 <udev_util_encode_string@@LIBUDEV_183+0x10698>
   1bebc:	nop
   1bec0:	b	1bec8 <udev_util_encode_string@@LIBUDEV_183+0x10698>
   1bec4:	nop
   1bec8:	mov	w0, #0x0                   	// #0
   1becc:	mov	w1, w0
   1bed0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1bed4:	ldr	x0, [x0, #4016]
   1bed8:	ldr	x2, [x29, #152]
   1bedc:	ldr	x0, [x0]
   1bee0:	eor	x0, x2, x0
   1bee4:	cmp	x0, #0x0
   1bee8:	b.eq	1bef0 <udev_util_encode_string@@LIBUDEV_183+0x106c0>  // b.none
   1beec:	bl	5390 <__stack_chk_fail@plt>
   1bef0:	mov	w0, w1
   1bef4:	mov	sp, x29
   1bef8:	ldp	x29, x30, [sp], #160
   1befc:	ret
   1bf00:	stp	x29, x30, [sp, #-128]!
   1bf04:	mov	x29, sp
   1bf08:	stp	x19, x20, [sp, #16]
   1bf0c:	str	x21, [sp, #32]
   1bf10:	str	x0, [sp, #56]
   1bf14:	str	x1, [sp, #48]
   1bf18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1bf1c:	ldr	x0, [x0, #4016]
   1bf20:	ldr	x1, [x0]
   1bf24:	str	x1, [sp, #120]
   1bf28:	mov	x1, #0x0                   	// #0
   1bf2c:	ldr	x0, [sp, #56]
   1bf30:	cmp	x0, #0x0
   1bf34:	cset	w0, eq  // eq = none
   1bf38:	and	w0, w0, #0xff
   1bf3c:	and	x0, x0, #0xff
   1bf40:	cmp	x0, #0x0
   1bf44:	b.eq	1bf70 <udev_util_encode_string@@LIBUDEV_183+0x10740>  // b.none
   1bf48:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bf4c:	add	x1, x0, #0xcab
   1bf50:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bf54:	add	x4, x0, #0x940
   1bf58:	mov	w3, #0x4c5                 	// #1221
   1bf5c:	mov	x2, x1
   1bf60:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bf64:	add	x1, x0, #0xcd8
   1bf68:	mov	w0, #0x0                   	// #0
   1bf6c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1bf70:	ldr	x0, [sp, #48]
   1bf74:	cmp	x0, #0x0
   1bf78:	cset	w0, eq  // eq = none
   1bf7c:	and	w0, w0, #0xff
   1bf80:	and	x0, x0, #0xff
   1bf84:	cmp	x0, #0x0
   1bf88:	b.eq	1bfb4 <udev_util_encode_string@@LIBUDEV_183+0x10784>  // b.none
   1bf8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bf90:	add	x1, x0, #0xcab
   1bf94:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1bf98:	add	x4, x0, #0x940
   1bf9c:	mov	w3, #0x4c6                 	// #1222
   1bfa0:	mov	x2, x1
   1bfa4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1bfa8:	add	x1, x0, #0xcd0
   1bfac:	mov	w0, #0x0                   	// #0
   1bfb0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1bfb4:	ldr	x0, [sp, #56]
   1bfb8:	ldr	x0, [x0, #288]
   1bfbc:	cmp	x0, #0x0
   1bfc0:	b.ne	1c21c <udev_util_encode_string@@LIBUDEV_183+0x109ec>  // b.any
   1bfc4:	str	xzr, [sp, #80]
   1bfc8:	add	x0, sp, #0x58
   1bfcc:	mov	x1, x0
   1bfd0:	ldr	x0, [sp, #56]
   1bfd4:	bl	19ae4 <udev_util_encode_string@@LIBUDEV_183+0xe2b4>
   1bfd8:	str	w0, [sp, #76]
   1bfdc:	ldr	w0, [sp, #76]
   1bfe0:	cmp	w0, #0x0
   1bfe4:	b.ge	1bff4 <udev_util_encode_string@@LIBUDEV_183+0x107c4>  // b.tcont
   1bfe8:	ldr	w19, [sp, #76]
   1bfec:	mov	w20, #0x0                   	// #0
   1bff0:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1bff4:	add	x0, sp, #0x60
   1bff8:	mov	x1, x0
   1bffc:	ldr	x0, [sp, #56]
   1c000:	bl	1a4cc <udev_util_encode_string@@LIBUDEV_183+0xec9c>
   1c004:	cmp	w0, #0x0
   1c008:	b.lt	1c0c8 <udev_util_encode_string@@LIBUDEV_183+0x10898>  // b.tstop
   1c00c:	ldr	x0, [sp, #88]
   1c010:	cmp	x0, #0x0
   1c014:	cset	w0, eq  // eq = none
   1c018:	and	w0, w0, #0xff
   1c01c:	and	x0, x0, #0xff
   1c020:	cmp	x0, #0x0
   1c024:	b.eq	1c050 <udev_util_encode_string@@LIBUDEV_183+0x10820>  // b.none
   1c028:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c02c:	add	x1, x0, #0xcab
   1c030:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c034:	add	x4, x0, #0x940
   1c038:	mov	w3, #0x4d3                 	// #1235
   1c03c:	mov	x2, x1
   1c040:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c044:	add	x1, x0, #0xc90
   1c048:	mov	w0, #0x0                   	// #0
   1c04c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1c050:	ldr	x2, [sp, #88]
   1c054:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c058:	add	x1, x0, #0xf00
   1c05c:	mov	x0, x2
   1c060:	bl	5440 <strcmp@plt>
   1c064:	cmp	w0, #0x0
   1c068:	b.ne	1c074 <udev_util_encode_string@@LIBUDEV_183+0x10844>  // b.any
   1c06c:	mov	w20, #0x62                  	// #98
   1c070:	b	1c078 <udev_util_encode_string@@LIBUDEV_183+0x10848>
   1c074:	mov	w20, #0x63                  	// #99
   1c078:	ldr	x0, [sp, #96]
   1c07c:	bl	53f0 <gnu_dev_major@plt>
   1c080:	mov	w21, w0
   1c084:	ldr	x0, [sp, #96]
   1c088:	bl	5610 <gnu_dev_minor@plt>
   1c08c:	add	x5, sp, #0x50
   1c090:	mov	w4, w0
   1c094:	mov	w3, w21
   1c098:	mov	w2, w20
   1c09c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c0a0:	add	x1, x0, #0x3c0
   1c0a4:	mov	x0, x5
   1c0a8:	bl	5160 <asprintf@plt>
   1c0ac:	str	w0, [sp, #76]
   1c0b0:	ldr	w0, [sp, #76]
   1c0b4:	cmp	w0, #0x0
   1c0b8:	b.ge	1c1f0 <udev_util_encode_string@@LIBUDEV_183+0x109c0>  // b.tcont
   1c0bc:	mov	w19, #0xfffffff4            	// #-12
   1c0c0:	mov	w20, #0x0                   	// #0
   1c0c4:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1c0c8:	add	x0, sp, #0x48
   1c0cc:	mov	x1, x0
   1c0d0:	ldr	x0, [sp, #56]
   1c0d4:	bl	18f58 <udev_util_encode_string@@LIBUDEV_183+0xd728>
   1c0d8:	cmp	w0, #0x0
   1c0dc:	b.lt	1c118 <udev_util_encode_string@@LIBUDEV_183+0x108e8>  // b.tstop
   1c0e0:	ldr	w0, [sp, #72]
   1c0e4:	add	x3, sp, #0x50
   1c0e8:	mov	w2, w0
   1c0ec:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c0f0:	add	x1, x0, #0x3c8
   1c0f4:	mov	x0, x3
   1c0f8:	bl	5160 <asprintf@plt>
   1c0fc:	str	w0, [sp, #76]
   1c100:	ldr	w0, [sp, #76]
   1c104:	cmp	w0, #0x0
   1c108:	b.ge	1c1f0 <udev_util_encode_string@@LIBUDEV_183+0x109c0>  // b.tcont
   1c10c:	mov	w19, #0xfffffff4            	// #-12
   1c110:	mov	w20, #0x0                   	// #0
   1c114:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1c118:	ldr	x0, [sp, #56]
   1c11c:	ldr	x0, [x0, #240]
   1c120:	bl	5450 <basename@plt>
   1c124:	str	x0, [sp, #104]
   1c128:	ldr	x0, [sp, #104]
   1c12c:	cmp	x0, #0x0
   1c130:	b.ne	1c140 <udev_util_encode_string@@LIBUDEV_183+0x10910>  // b.any
   1c134:	mov	w19, #0xffffffea            	// #-22
   1c138:	mov	w20, #0x0                   	// #0
   1c13c:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1c140:	ldr	x0, [sp, #88]
   1c144:	cmp	x0, #0x0
   1c148:	b.ne	1c158 <udev_util_encode_string@@LIBUDEV_183+0x10928>  // b.any
   1c14c:	mov	w19, #0xffffffea            	// #-22
   1c150:	mov	w20, #0x0                   	// #0
   1c154:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1c158:	ldr	x2, [sp, #88]
   1c15c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c160:	add	x1, x0, #0xf60
   1c164:	mov	x0, x2
   1c168:	bl	5440 <strcmp@plt>
   1c16c:	cmp	w0, #0x0
   1c170:	b.ne	1c1b4 <udev_util_encode_string@@LIBUDEV_183+0x10984>  // b.any
   1c174:	ldr	x0, [sp, #56]
   1c178:	ldr	x0, [x0, #272]
   1c17c:	add	x4, sp, #0x50
   1c180:	ldr	x3, [sp, #104]
   1c184:	mov	x2, x0
   1c188:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c18c:	add	x1, x0, #0x3d0
   1c190:	mov	x0, x4
   1c194:	bl	5160 <asprintf@plt>
   1c198:	str	w0, [sp, #76]
   1c19c:	ldr	w0, [sp, #76]
   1c1a0:	cmp	w0, #0x0
   1c1a4:	b.ge	1c1f0 <udev_util_encode_string@@LIBUDEV_183+0x109c0>  // b.tcont
   1c1a8:	mov	w19, #0xfffffff4            	// #-12
   1c1ac:	mov	w20, #0x0                   	// #0
   1c1b0:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1c1b4:	ldr	x0, [sp, #88]
   1c1b8:	add	x4, sp, #0x50
   1c1bc:	ldr	x3, [sp, #104]
   1c1c0:	mov	x2, x0
   1c1c4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c1c8:	add	x1, x0, #0x3e0
   1c1cc:	mov	x0, x4
   1c1d0:	bl	5160 <asprintf@plt>
   1c1d4:	str	w0, [sp, #76]
   1c1d8:	ldr	w0, [sp, #76]
   1c1dc:	cmp	w0, #0x0
   1c1e0:	b.ge	1c1f0 <udev_util_encode_string@@LIBUDEV_183+0x109c0>  // b.tcont
   1c1e4:	mov	w19, #0xfffffff4            	// #-12
   1c1e8:	mov	w20, #0x0                   	// #0
   1c1ec:	b	1c20c <udev_util_encode_string@@LIBUDEV_183+0x109dc>
   1c1f0:	ldr	x0, [sp, #80]
   1c1f4:	str	x0, [sp, #112]
   1c1f8:	str	xzr, [sp, #80]
   1c1fc:	ldr	x1, [sp, #112]
   1c200:	ldr	x0, [sp, #56]
   1c204:	str	x1, [x0, #288]
   1c208:	mov	w20, #0x1                   	// #1
   1c20c:	add	x0, sp, #0x50
   1c210:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1c214:	cmp	w20, #0x1
   1c218:	b.ne	1c230 <udev_util_encode_string@@LIBUDEV_183+0x10a00>  // b.any
   1c21c:	ldr	x0, [sp, #56]
   1c220:	ldr	x1, [x0, #288]
   1c224:	ldr	x0, [sp, #48]
   1c228:	str	x1, [x0]
   1c22c:	mov	w19, #0x0                   	// #0
   1c230:	mov	w1, w19
   1c234:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1c238:	ldr	x0, [x0, #4016]
   1c23c:	ldr	x2, [sp, #120]
   1c240:	ldr	x0, [x0]
   1c244:	eor	x0, x2, x0
   1c248:	cmp	x0, #0x0
   1c24c:	b.eq	1c254 <udev_util_encode_string@@LIBUDEV_183+0x10a24>  // b.none
   1c250:	bl	5390 <__stack_chk_fail@plt>
   1c254:	mov	w0, w1
   1c258:	ldp	x19, x20, [sp, #16]
   1c25c:	ldr	x21, [sp, #32]
   1c260:	ldp	x29, x30, [sp], #128
   1c264:	ret
   1c268:	sub	sp, sp, #0xd0
   1c26c:	stp	x29, x30, [sp, #32]
   1c270:	add	x29, sp, #0x20
   1c274:	str	x19, [sp, #48]
   1c278:	str	x0, [sp, #72]
   1c27c:	str	x1, [sp, #64]
   1c280:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1c284:	ldr	x0, [x0, #4016]
   1c288:	ldr	x1, [x0]
   1c28c:	str	x1, [sp, #200]
   1c290:	mov	x1, #0x0                   	// #0
   1c294:	str	xzr, [sp, #128]
   1c298:	str	wzr, [sp, #88]
   1c29c:	ldr	x0, [sp, #72]
   1c2a0:	cmp	x0, #0x0
   1c2a4:	cset	w0, eq  // eq = none
   1c2a8:	and	w0, w0, #0xff
   1c2ac:	and	x0, x0, #0xff
   1c2b0:	cmp	x0, #0x0
   1c2b4:	b.eq	1c2e0 <udev_util_encode_string@@LIBUDEV_183+0x10ab0>  // b.none
   1c2b8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c2bc:	add	x1, x0, #0xcab
   1c2c0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c2c4:	add	x4, x0, #0x958
   1c2c8:	mov	w3, #0x510                 	// #1296
   1c2cc:	mov	x2, x1
   1c2d0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c2d4:	add	x1, x0, #0xcd8
   1c2d8:	mov	w0, #0x0                   	// #0
   1c2dc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1c2e0:	ldr	x0, [sp, #64]
   1c2e4:	cmp	x0, #0x0
   1c2e8:	cset	w0, eq  // eq = none
   1c2ec:	and	w0, w0, #0xff
   1c2f0:	and	x0, x0, #0xff
   1c2f4:	cmp	x0, #0x0
   1c2f8:	b.eq	1c324 <udev_util_encode_string@@LIBUDEV_183+0x10af4>  // b.none
   1c2fc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c300:	add	x1, x0, #0xcab
   1c304:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c308:	add	x4, x0, #0x958
   1c30c:	mov	w3, #0x511                 	// #1297
   1c310:	mov	x2, x1
   1c314:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c318:	add	x1, x0, #0x3e8
   1c31c:	mov	w0, #0x0                   	// #0
   1c320:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1c324:	add	x1, sp, #0x88
   1c328:	add	x0, sp, #0x80
   1c32c:	mov	x2, x1
   1c330:	mov	x1, x0
   1c334:	ldr	x0, [sp, #64]
   1c338:	bl	15300 <udev_util_encode_string@@LIBUDEV_183+0x9ad0>
   1c33c:	str	w0, [sp, #92]
   1c340:	ldr	w0, [sp, #92]
   1c344:	cmp	w0, #0x0
   1c348:	b.ge	1c42c <udev_util_encode_string@@LIBUDEV_183+0x10bfc>  // b.tcont
   1c34c:	ldr	w0, [sp, #92]
   1c350:	cmn	w0, #0x2
   1c354:	b.ne	1c360 <udev_util_encode_string@@LIBUDEV_183+0x10b30>  // b.any
   1c358:	mov	w19, #0x0                   	// #0
   1c35c:	b	1c874 <udev_util_encode_string@@LIBUDEV_183+0x11044>
   1c360:	str	xzr, [sp, #144]
   1c364:	ldr	x0, [sp, #72]
   1c368:	str	x0, [sp, #192]
   1c36c:	mov	w0, #0x7                   	// #7
   1c370:	str	w0, [sp, #120]
   1c374:	ldr	w0, [sp, #92]
   1c378:	str	w0, [sp, #124]
   1c37c:	ldr	x0, [sp, #192]
   1c380:	cmp	x0, #0x0
   1c384:	b.eq	1c3c0 <udev_util_encode_string@@LIBUDEV_183+0x10b90>  // b.none
   1c388:	mov	w0, #0x0                   	// #0
   1c38c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1c390:	mov	w1, w0
   1c394:	ldr	w0, [sp, #120]
   1c398:	cmp	w0, w1
   1c39c:	cset	w0, le
   1c3a0:	and	w0, w0, #0xff
   1c3a4:	and	x0, x0, #0xff
   1c3a8:	cmp	x0, #0x0
   1c3ac:	b.eq	1c3c0 <udev_util_encode_string@@LIBUDEV_183+0x10b90>  // b.none
   1c3b0:	add	x0, sp, #0x90
   1c3b4:	mov	x1, x0
   1c3b8:	ldr	x0, [sp, #192]
   1c3bc:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1c3c0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c3c4:	add	x2, x0, #0xcab
   1c3c8:	ldr	x0, [sp, #144]
   1c3cc:	cmp	x0, #0x0
   1c3d0:	b.eq	1c3e0 <udev_util_encode_string@@LIBUDEV_183+0x10bb0>  // b.none
   1c3d4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c3d8:	add	x0, x0, #0x30
   1c3dc:	b	1c3e4 <udev_util_encode_string@@LIBUDEV_183+0x10bb4>
   1c3e0:	mov	x0, #0x0                   	// #0
   1c3e4:	ldr	x3, [sp, #144]
   1c3e8:	ldr	x1, [sp, #64]
   1c3ec:	str	x1, [sp, #16]
   1c3f0:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c3f4:	add	x1, x1, #0x3f8
   1c3f8:	str	x1, [sp, #8]
   1c3fc:	str	xzr, [sp]
   1c400:	mov	x7, #0x0                   	// #0
   1c404:	mov	x6, x3
   1c408:	mov	x5, x0
   1c40c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c410:	add	x4, x0, #0x980
   1c414:	mov	w3, #0x518                 	// #1304
   1c418:	ldr	w1, [sp, #124]
   1c41c:	ldr	w0, [sp, #120]
   1c420:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1c424:	mov	w19, w0
   1c428:	b	1c874 <udev_util_encode_string@@LIBUDEV_183+0x11044>
   1c42c:	ldr	x0, [sp, #72]
   1c430:	ldrb	w1, [x0, #331]
   1c434:	orr	w1, w1, #0x1
   1c438:	strb	w1, [x0, #331]
   1c43c:	ldr	x0, [sp, #72]
   1c440:	mov	w1, #0x1                   	// #1
   1c444:	strb	w1, [x0, #330]
   1c448:	str	xzr, [sp, #160]
   1c44c:	b	1c860 <udev_util_encode_string@@LIBUDEV_183+0x11030>
   1c450:	ldr	w0, [sp, #88]
   1c454:	cmp	w0, #0x4
   1c458:	b.eq	1c618 <udev_util_encode_string@@LIBUDEV_183+0x10de8>  // b.none
   1c45c:	ldr	w0, [sp, #88]
   1c460:	cmp	w0, #0x4
   1c464:	b.hi	1c778 <udev_util_encode_string@@LIBUDEV_183+0x10f48>  // b.pmore
   1c468:	ldr	w0, [sp, #88]
   1c46c:	cmp	w0, #0x3
   1c470:	b.eq	1c648 <udev_util_encode_string@@LIBUDEV_183+0x10e18>  // b.none
   1c474:	ldr	w0, [sp, #88]
   1c478:	cmp	w0, #0x3
   1c47c:	b.hi	1c778 <udev_util_encode_string@@LIBUDEV_183+0x10f48>  // b.pmore
   1c480:	ldr	w0, [sp, #88]
   1c484:	cmp	w0, #0x2
   1c488:	b.eq	1c5fc <udev_util_encode_string@@LIBUDEV_183+0x10dcc>  // b.none
   1c48c:	ldr	w0, [sp, #88]
   1c490:	cmp	w0, #0x2
   1c494:	b.hi	1c778 <udev_util_encode_string@@LIBUDEV_183+0x10f48>  // b.pmore
   1c498:	ldr	w0, [sp, #88]
   1c49c:	cmp	w0, #0x0
   1c4a0:	b.eq	1c4b4 <udev_util_encode_string@@LIBUDEV_183+0x10c84>  // b.none
   1c4a4:	ldr	w0, [sp, #88]
   1c4a8:	cmp	w0, #0x1
   1c4ac:	b.eq	1c4fc <udev_util_encode_string@@LIBUDEV_183+0x10ccc>  // b.none
   1c4b0:	b	1c778 <udev_util_encode_string@@LIBUDEV_183+0x10f48>
   1c4b4:	ldr	x1, [sp, #128]
   1c4b8:	ldr	x0, [sp, #160]
   1c4bc:	add	x0, x1, x0
   1c4c0:	ldrb	w0, [x0]
   1c4c4:	mov	w1, w0
   1c4c8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c4cc:	add	x0, x0, #0x68
   1c4d0:	bl	5570 <strchr@plt>
   1c4d4:	cmp	x0, #0x0
   1c4d8:	b.ne	1c840 <udev_util_encode_string@@LIBUDEV_183+0x11010>  // b.any
   1c4dc:	ldr	x1, [sp, #128]
   1c4e0:	ldr	x0, [sp, #160]
   1c4e4:	add	x0, x1, x0
   1c4e8:	ldrb	w0, [x0]
   1c4ec:	strb	w0, [sp, #87]
   1c4f0:	mov	w0, #0x1                   	// #1
   1c4f4:	str	w0, [sp, #88]
   1c4f8:	b	1c840 <udev_util_encode_string@@LIBUDEV_183+0x11010>
   1c4fc:	ldr	x1, [sp, #128]
   1c500:	ldr	x0, [sp, #160]
   1c504:	add	x0, x1, x0
   1c508:	ldrb	w0, [x0]
   1c50c:	cmp	w0, #0x3a
   1c510:	b.eq	1c5e0 <udev_util_encode_string@@LIBUDEV_183+0x10db0>  // b.none
   1c514:	str	xzr, [sp, #144]
   1c518:	ldr	x0, [sp, #72]
   1c51c:	str	x0, [sp, #176]
   1c520:	mov	w0, #0x7                   	// #7
   1c524:	str	w0, [sp, #104]
   1c528:	str	wzr, [sp, #108]
   1c52c:	ldr	x0, [sp, #176]
   1c530:	cmp	x0, #0x0
   1c534:	b.eq	1c570 <udev_util_encode_string@@LIBUDEV_183+0x10d40>  // b.none
   1c538:	mov	w0, #0x0                   	// #0
   1c53c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1c540:	mov	w1, w0
   1c544:	ldr	w0, [sp, #104]
   1c548:	cmp	w0, w1
   1c54c:	cset	w0, le
   1c550:	and	w0, w0, #0xff
   1c554:	and	x0, x0, #0xff
   1c558:	cmp	x0, #0x0
   1c55c:	b.eq	1c570 <udev_util_encode_string@@LIBUDEV_183+0x10d40>  // b.none
   1c560:	add	x0, sp, #0x90
   1c564:	mov	x1, x0
   1c568:	ldr	x0, [sp, #176]
   1c56c:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1c570:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c574:	add	x2, x0, #0xcab
   1c578:	ldr	x0, [sp, #144]
   1c57c:	cmp	x0, #0x0
   1c580:	b.eq	1c590 <udev_util_encode_string@@LIBUDEV_183+0x10d60>  // b.none
   1c584:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c588:	add	x0, x0, #0x30
   1c58c:	b	1c594 <udev_util_encode_string@@LIBUDEV_183+0x10d64>
   1c590:	mov	x0, #0x0                   	// #0
   1c594:	ldr	x3, [sp, #144]
   1c598:	ldrb	w1, [sp, #87]
   1c59c:	str	w1, [sp, #16]
   1c5a0:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c5a4:	add	x1, x1, #0x420
   1c5a8:	str	x1, [sp, #8]
   1c5ac:	str	xzr, [sp]
   1c5b0:	mov	x7, #0x0                   	// #0
   1c5b4:	mov	x6, x3
   1c5b8:	mov	x5, x0
   1c5bc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c5c0:	add	x4, x0, #0x980
   1c5c4:	mov	w3, #0x52c                 	// #1324
   1c5c8:	ldr	w1, [sp, #108]
   1c5cc:	ldr	w0, [sp, #104]
   1c5d0:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1c5d4:	mov	w0, #0x4                   	// #4
   1c5d8:	str	w0, [sp, #88]
   1c5dc:	b	1c854 <udev_util_encode_string@@LIBUDEV_183+0x11024>
   1c5e0:	ldr	x1, [sp, #128]
   1c5e4:	ldr	x0, [sp, #160]
   1c5e8:	add	x0, x1, x0
   1c5ec:	strb	wzr, [x0]
   1c5f0:	mov	w0, #0x2                   	// #2
   1c5f4:	str	w0, [sp, #88]
   1c5f8:	b	1c854 <udev_util_encode_string@@LIBUDEV_183+0x11024>
   1c5fc:	ldr	x1, [sp, #128]
   1c600:	ldr	x0, [sp, #160]
   1c604:	add	x0, x1, x0
   1c608:	str	x0, [sp, #152]
   1c60c:	mov	w0, #0x3                   	// #3
   1c610:	str	w0, [sp, #88]
   1c614:	b	1c854 <udev_util_encode_string@@LIBUDEV_183+0x11024>
   1c618:	ldr	x1, [sp, #128]
   1c61c:	ldr	x0, [sp, #160]
   1c620:	add	x0, x1, x0
   1c624:	ldrb	w0, [x0]
   1c628:	mov	w1, w0
   1c62c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c630:	add	x0, x0, #0x68
   1c634:	bl	5570 <strchr@plt>
   1c638:	cmp	x0, #0x0
   1c63c:	b.eq	1c848 <udev_util_encode_string@@LIBUDEV_183+0x11018>  // b.none
   1c640:	str	wzr, [sp, #88]
   1c644:	b	1c848 <udev_util_encode_string@@LIBUDEV_183+0x11018>
   1c648:	ldr	x1, [sp, #128]
   1c64c:	ldr	x0, [sp, #160]
   1c650:	add	x0, x1, x0
   1c654:	ldrb	w0, [x0]
   1c658:	mov	w1, w0
   1c65c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c660:	add	x0, x0, #0x68
   1c664:	bl	5570 <strchr@plt>
   1c668:	cmp	x0, #0x0
   1c66c:	b.eq	1c850 <udev_util_encode_string@@LIBUDEV_183+0x11020>  // b.none
   1c670:	ldr	x1, [sp, #128]
   1c674:	ldr	x0, [sp, #160]
   1c678:	add	x0, x1, x0
   1c67c:	strb	wzr, [x0]
   1c680:	ldr	x2, [sp, #152]
   1c684:	ldrb	w1, [sp, #87]
   1c688:	ldr	x0, [sp, #72]
   1c68c:	bl	1ba1c <udev_util_encode_string@@LIBUDEV_183+0x101ec>
   1c690:	str	w0, [sp, #92]
   1c694:	ldr	w0, [sp, #92]
   1c698:	cmp	w0, #0x0
   1c69c:	b.ge	1c770 <udev_util_encode_string@@LIBUDEV_183+0x10f40>  // b.tcont
   1c6a0:	str	xzr, [sp, #144]
   1c6a4:	ldr	x0, [sp, #72]
   1c6a8:	str	x0, [sp, #168]
   1c6ac:	mov	w0, #0x7                   	// #7
   1c6b0:	str	w0, [sp, #96]
   1c6b4:	ldr	w0, [sp, #92]
   1c6b8:	str	w0, [sp, #100]
   1c6bc:	ldr	x0, [sp, #168]
   1c6c0:	cmp	x0, #0x0
   1c6c4:	b.eq	1c700 <udev_util_encode_string@@LIBUDEV_183+0x10ed0>  // b.none
   1c6c8:	mov	w0, #0x0                   	// #0
   1c6cc:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1c6d0:	mov	w1, w0
   1c6d4:	ldr	w0, [sp, #96]
   1c6d8:	cmp	w0, w1
   1c6dc:	cset	w0, le
   1c6e0:	and	w0, w0, #0xff
   1c6e4:	and	x0, x0, #0xff
   1c6e8:	cmp	x0, #0x0
   1c6ec:	b.eq	1c700 <udev_util_encode_string@@LIBUDEV_183+0x10ed0>  // b.none
   1c6f0:	add	x0, sp, #0x90
   1c6f4:	mov	x1, x0
   1c6f8:	ldr	x0, [sp, #168]
   1c6fc:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1c700:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c704:	add	x8, x0, #0xcab
   1c708:	ldr	x0, [sp, #144]
   1c70c:	cmp	x0, #0x0
   1c710:	b.eq	1c720 <udev_util_encode_string@@LIBUDEV_183+0x10ef0>  // b.none
   1c714:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c718:	add	x0, x0, #0x30
   1c71c:	b	1c724 <udev_util_encode_string@@LIBUDEV_183+0x10ef4>
   1c720:	mov	x0, #0x0                   	// #0
   1c724:	ldr	x3, [sp, #144]
   1c728:	ldrb	w1, [sp, #87]
   1c72c:	ldr	x2, [sp, #152]
   1c730:	str	x2, [sp, #24]
   1c734:	str	w1, [sp, #16]
   1c738:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c73c:	add	x1, x1, #0x458
   1c740:	str	x1, [sp, #8]
   1c744:	str	xzr, [sp]
   1c748:	mov	x7, #0x0                   	// #0
   1c74c:	mov	x6, x3
   1c750:	mov	x5, x0
   1c754:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c758:	add	x4, x0, #0x980
   1c75c:	mov	w3, #0x546                 	// #1350
   1c760:	mov	x2, x8
   1c764:	ldr	w1, [sp, #100]
   1c768:	ldr	w0, [sp, #96]
   1c76c:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1c770:	str	wzr, [sp, #88]
   1c774:	b	1c850 <udev_util_encode_string@@LIBUDEV_183+0x11020>
   1c778:	str	xzr, [sp, #144]
   1c77c:	ldr	x0, [sp, #72]
   1c780:	str	x0, [sp, #184]
   1c784:	mov	w0, #0x7                   	// #7
   1c788:	str	w0, [sp, #112]
   1c78c:	mov	w0, #0x16                  	// #22
   1c790:	movk	w0, #0x4000, lsl #16
   1c794:	str	w0, [sp, #116]
   1c798:	ldr	x0, [sp, #184]
   1c79c:	cmp	x0, #0x0
   1c7a0:	b.eq	1c7dc <udev_util_encode_string@@LIBUDEV_183+0x10fac>  // b.none
   1c7a4:	mov	w0, #0x0                   	// #0
   1c7a8:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1c7ac:	mov	w1, w0
   1c7b0:	ldr	w0, [sp, #112]
   1c7b4:	cmp	w0, w1
   1c7b8:	cset	w0, le
   1c7bc:	and	w0, w0, #0xff
   1c7c0:	and	x0, x0, #0xff
   1c7c4:	cmp	x0, #0x0
   1c7c8:	b.eq	1c7dc <udev_util_encode_string@@LIBUDEV_183+0x10fac>  // b.none
   1c7cc:	add	x0, sp, #0x90
   1c7d0:	mov	x1, x0
   1c7d4:	ldr	x0, [sp, #184]
   1c7d8:	bl	1b170 <udev_util_encode_string@@LIBUDEV_183+0xf940>
   1c7dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c7e0:	add	x2, x0, #0xcab
   1c7e4:	ldr	x0, [sp, #144]
   1c7e8:	cmp	x0, #0x0
   1c7ec:	b.eq	1c7fc <udev_util_encode_string@@LIBUDEV_183+0x10fcc>  // b.none
   1c7f0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c7f4:	add	x0, x0, #0x30
   1c7f8:	b	1c800 <udev_util_encode_string@@LIBUDEV_183+0x10fd0>
   1c7fc:	mov	x0, #0x0                   	// #0
   1c800:	ldr	x3, [sp, #144]
   1c804:	adrp	x1, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c808:	add	x1, x1, #0x498
   1c80c:	str	x1, [sp, #8]
   1c810:	str	xzr, [sp]
   1c814:	mov	x7, #0x0                   	// #0
   1c818:	mov	x6, x3
   1c81c:	mov	x5, x0
   1c820:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c824:	add	x4, x0, #0x980
   1c828:	mov	w3, #0x54d                 	// #1357
   1c82c:	ldr	w1, [sp, #116]
   1c830:	ldr	w0, [sp, #112]
   1c834:	bl	2d9d8 <udev_util_encode_string@@LIBUDEV_183+0x221a8>
   1c838:	mov	w19, w0
   1c83c:	b	1c874 <udev_util_encode_string@@LIBUDEV_183+0x11044>
   1c840:	nop
   1c844:	b	1c854 <udev_util_encode_string@@LIBUDEV_183+0x11024>
   1c848:	nop
   1c84c:	b	1c854 <udev_util_encode_string@@LIBUDEV_183+0x11024>
   1c850:	nop
   1c854:	ldr	x0, [sp, #160]
   1c858:	add	x0, x0, #0x1
   1c85c:	str	x0, [sp, #160]
   1c860:	ldr	x0, [sp, #136]
   1c864:	ldr	x1, [sp, #160]
   1c868:	cmp	x1, x0
   1c86c:	b.cc	1c450 <udev_util_encode_string@@LIBUDEV_183+0x10c20>  // b.lo, b.ul, b.last
   1c870:	mov	w19, #0x0                   	// #0
   1c874:	add	x0, sp, #0x80
   1c878:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1c87c:	mov	w1, w19
   1c880:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1c884:	ldr	x0, [x0, #4016]
   1c888:	ldr	x2, [sp, #200]
   1c88c:	ldr	x0, [x0]
   1c890:	eor	x0, x2, x0
   1c894:	cmp	x0, #0x0
   1c898:	b.eq	1c8a0 <udev_util_encode_string@@LIBUDEV_183+0x11070>  // b.none
   1c89c:	bl	5390 <__stack_chk_fail@plt>
   1c8a0:	mov	w0, w1
   1c8a4:	ldr	x19, [sp, #48]
   1c8a8:	ldp	x29, x30, [sp, #32]
   1c8ac:	add	sp, sp, #0xd0
   1c8b0:	ret
   1c8b4:	stp	x29, x30, [sp, #-128]!
   1c8b8:	mov	x29, sp
   1c8bc:	str	x0, [x29, #24]
   1c8c0:	strb	w1, [x29, #23]
   1c8c4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1c8c8:	ldr	x0, [x0, #4016]
   1c8cc:	ldr	x1, [x0]
   1c8d0:	str	x1, [x29, #120]
   1c8d4:	mov	x1, #0x0                   	// #0
   1c8d8:	ldr	x0, [x29, #24]
   1c8dc:	cmp	x0, #0x0
   1c8e0:	cset	w0, eq  // eq = none
   1c8e4:	and	w0, w0, #0xff
   1c8e8:	and	x0, x0, #0xff
   1c8ec:	cmp	x0, #0x0
   1c8f0:	b.eq	1c91c <udev_util_encode_string@@LIBUDEV_183+0x110ec>  // b.none
   1c8f4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c8f8:	add	x1, x0, #0xcab
   1c8fc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c900:	add	x4, x0, #0x9a8
   1c904:	mov	w3, #0x558                 	// #1368
   1c908:	mov	x2, x1
   1c90c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1c910:	add	x1, x0, #0xcd8
   1c914:	mov	w0, #0x0                   	// #0
   1c918:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1c91c:	ldr	x0, [x29, #24]
   1c920:	ldrb	w0, [x0, #330]
   1c924:	cmp	w0, #0x0
   1c928:	b.ne	1c958 <udev_util_encode_string@@LIBUDEV_183+0x11128>  // b.any
   1c92c:	ldrb	w0, [x29, #23]
   1c930:	eor	w0, w0, #0x1
   1c934:	and	w0, w0, #0xff
   1c938:	cmp	w0, #0x0
   1c93c:	b.eq	1c960 <udev_util_encode_string@@LIBUDEV_183+0x11130>  // b.none
   1c940:	ldr	x0, [x29, #24]
   1c944:	ldrb	w0, [x0, #331]
   1c948:	and	w0, w0, #0x2
   1c94c:	and	w0, w0, #0xff
   1c950:	cmp	w0, #0x0
   1c954:	b.eq	1c960 <udev_util_encode_string@@LIBUDEV_183+0x11130>  // b.none
   1c958:	mov	w0, #0x0                   	// #0
   1c95c:	b	1cb34 <udev_util_encode_string@@LIBUDEV_183+0x11304>
   1c960:	add	x0, x29, #0x30
   1c964:	mov	x1, x0
   1c968:	ldr	x0, [x29, #24]
   1c96c:	bl	1bf00 <udev_util_encode_string@@LIBUDEV_183+0x106d0>
   1c970:	str	w0, [x29, #44]
   1c974:	ldr	w0, [x29, #44]
   1c978:	cmp	w0, #0x0
   1c97c:	b.ge	1c988 <udev_util_encode_string@@LIBUDEV_183+0x11158>  // b.tcont
   1c980:	ldr	w0, [x29, #44]
   1c984:	b	1cb34 <udev_util_encode_string@@LIBUDEV_183+0x11304>
   1c988:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1c98c:	add	x0, x0, #0x4b8
   1c990:	str	x0, [x29, #104]
   1c994:	ldr	x0, [x29, #48]
   1c998:	str	x0, [x29, #112]
   1c99c:	str	xzr, [x29, #64]
   1c9a0:	str	xzr, [x29, #72]
   1c9a4:	b	1c9d8 <udev_util_encode_string@@LIBUDEV_183+0x111a8>
   1c9a8:	ldr	x0, [x29, #72]
   1c9ac:	lsl	x0, x0, #3
   1c9b0:	add	x1, x29, #0x68
   1c9b4:	ldr	x0, [x1, x0]
   1c9b8:	bl	5040 <strlen@plt>
   1c9bc:	mov	x1, x0
   1c9c0:	ldr	x0, [x29, #64]
   1c9c4:	add	x0, x0, x1
   1c9c8:	str	x0, [x29, #64]
   1c9cc:	ldr	x0, [x29, #72]
   1c9d0:	add	x0, x0, #0x1
   1c9d4:	str	x0, [x29, #72]
   1c9d8:	ldr	x0, [x29, #72]
   1c9dc:	cmp	x0, #0x1
   1c9e0:	b.hi	1c9fc <udev_util_encode_string@@LIBUDEV_183+0x111cc>  // b.pmore
   1c9e4:	ldr	x0, [x29, #72]
   1c9e8:	lsl	x0, x0, #3
   1c9ec:	add	x1, x29, #0x68
   1c9f0:	ldr	x0, [x1, x0]
   1c9f4:	cmp	x0, #0x0
   1c9f8:	b.ne	1c9a8 <udev_util_encode_string@@LIBUDEV_183+0x11178>  // b.any
   1c9fc:	ldr	x0, [x29, #64]
   1ca00:	add	x0, x0, #0x1
   1ca04:	str	x0, [x29, #80]
   1ca08:	ldr	x1, [x29, #80]
   1ca0c:	mov	x0, #0x1                   	// #1
   1ca10:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   1ca14:	and	w0, w0, #0xff
   1ca18:	and	x0, x0, #0xff
   1ca1c:	cmp	x0, #0x0
   1ca20:	b.eq	1ca4c <udev_util_encode_string@@LIBUDEV_183+0x1121c>  // b.none
   1ca24:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ca28:	add	x1, x0, #0xcab
   1ca2c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ca30:	add	x4, x0, #0x9a8
   1ca34:	mov	w3, #0x561                 	// #1377
   1ca38:	mov	x2, x1
   1ca3c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ca40:	add	x1, x0, #0xe18
   1ca44:	mov	w0, #0x0                   	// #0
   1ca48:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1ca4c:	ldr	x0, [x29, #80]
   1ca50:	cmp	x0, #0x400, lsl #12
   1ca54:	cset	w0, hi  // hi = pmore
   1ca58:	and	w0, w0, #0xff
   1ca5c:	and	x0, x0, #0xff
   1ca60:	cmp	x0, #0x0
   1ca64:	b.eq	1ca90 <udev_util_encode_string@@LIBUDEV_183+0x11260>  // b.none
   1ca68:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ca6c:	add	x1, x0, #0xcab
   1ca70:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ca74:	add	x4, x0, #0x9a8
   1ca78:	mov	w3, #0x561                 	// #1377
   1ca7c:	mov	x2, x1
   1ca80:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ca84:	add	x1, x0, #0xe48
   1ca88:	mov	w0, #0x0                   	// #0
   1ca8c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1ca90:	ldr	x0, [x29, #80]
   1ca94:	add	x0, x0, #0xf
   1ca98:	lsr	x0, x0, #4
   1ca9c:	lsl	x0, x0, #4
   1caa0:	sub	sp, sp, x0
   1caa4:	mov	x0, sp
   1caa8:	add	x0, x0, #0xf
   1caac:	lsr	x0, x0, #4
   1cab0:	lsl	x0, x0, #4
   1cab4:	str	x0, [x29, #88]
   1cab8:	ldr	x0, [x29, #88]
   1cabc:	str	x0, [x29, #56]
   1cac0:	str	xzr, [x29, #72]
   1cac4:	b	1caf4 <udev_util_encode_string@@LIBUDEV_183+0x112c4>
   1cac8:	ldr	x0, [x29, #72]
   1cacc:	lsl	x0, x0, #3
   1cad0:	add	x1, x29, #0x68
   1cad4:	ldr	x0, [x1, x0]
   1cad8:	mov	x1, x0
   1cadc:	ldr	x0, [x29, #56]
   1cae0:	bl	51b0 <stpcpy@plt>
   1cae4:	str	x0, [x29, #56]
   1cae8:	ldr	x0, [x29, #72]
   1caec:	add	x0, x0, #0x1
   1caf0:	str	x0, [x29, #72]
   1caf4:	ldr	x0, [x29, #72]
   1caf8:	cmp	x0, #0x1
   1cafc:	b.hi	1cb18 <udev_util_encode_string@@LIBUDEV_183+0x112e8>  // b.pmore
   1cb00:	ldr	x0, [x29, #72]
   1cb04:	lsl	x0, x0, #3
   1cb08:	add	x1, x29, #0x68
   1cb0c:	ldr	x0, [x1, x0]
   1cb10:	cmp	x0, #0x0
   1cb14:	b.ne	1cac8 <udev_util_encode_string@@LIBUDEV_183+0x11298>  // b.any
   1cb18:	ldr	x0, [x29, #56]
   1cb1c:	strb	wzr, [x0]
   1cb20:	ldr	x0, [x29, #88]
   1cb24:	str	x0, [x29, #96]
   1cb28:	ldr	x1, [x29, #96]
   1cb2c:	ldr	x0, [x29, #24]
   1cb30:	bl	1c268 <udev_util_encode_string@@LIBUDEV_183+0x10a38>
   1cb34:	mov	w1, w0
   1cb38:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1cb3c:	ldr	x0, [x0, #4016]
   1cb40:	ldr	x2, [x29, #120]
   1cb44:	ldr	x0, [x0]
   1cb48:	eor	x0, x2, x0
   1cb4c:	cmp	x0, #0x0
   1cb50:	b.eq	1cb58 <udev_util_encode_string@@LIBUDEV_183+0x11328>  // b.none
   1cb54:	bl	5390 <__stack_chk_fail@plt>
   1cb58:	mov	w0, w1
   1cb5c:	mov	sp, x29
   1cb60:	ldp	x29, x30, [sp], #128
   1cb64:	ret
   1cb68:	stp	x29, x30, [sp, #-48]!
   1cb6c:	mov	x29, sp
   1cb70:	str	x0, [sp, #24]
   1cb74:	ldr	x0, [sp, #24]
   1cb78:	cmp	x0, #0x0
   1cb7c:	cset	w0, ne  // ne = any
   1cb80:	and	w0, w0, #0xff
   1cb84:	and	x0, x0, #0xff
   1cb88:	cmp	x0, #0x0
   1cb8c:	b.ne	1cbc0 <udev_util_encode_string@@LIBUDEV_183+0x11390>  // b.any
   1cb90:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cb94:	add	x1, x0, #0xcab
   1cb98:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1cb9c:	add	x4, x0, #0x9c0
   1cba0:	mov	w3, #0x569                 	// #1385
   1cba4:	mov	x2, x1
   1cba8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cbac:	add	x1, x0, #0xcd8
   1cbb0:	mov	w0, #0x0                   	// #0
   1cbb4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1cbb8:	mov	w0, #0x1                   	// #1
   1cbbc:	b	1cbc4 <udev_util_encode_string@@LIBUDEV_183+0x11394>
   1cbc0:	mov	w0, #0x0                   	// #0
   1cbc4:	cmp	w0, #0x0
   1cbc8:	b.eq	1cbd4 <udev_util_encode_string@@LIBUDEV_183+0x113a4>  // b.none
   1cbcc:	mov	w0, #0xffffffea            	// #-22
   1cbd0:	b	1cc04 <udev_util_encode_string@@LIBUDEV_183+0x113d4>
   1cbd4:	ldr	x0, [sp, #24]
   1cbd8:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1cbdc:	str	w0, [sp, #44]
   1cbe0:	ldr	w0, [sp, #44]
   1cbe4:	cmp	w0, #0x0
   1cbe8:	b.ge	1cbf4 <udev_util_encode_string@@LIBUDEV_183+0x113c4>  // b.tcont
   1cbec:	ldr	w0, [sp, #44]
   1cbf0:	b	1cc04 <udev_util_encode_string@@LIBUDEV_183+0x113d4>
   1cbf4:	ldr	x0, [sp, #24]
   1cbf8:	ldrb	w0, [x0, #331]
   1cbfc:	ubfx	x0, x0, #0, #1
   1cc00:	and	w0, w0, #0xff
   1cc04:	ldp	x29, x30, [sp], #48
   1cc08:	ret
   1cc0c:	stp	x29, x30, [sp, #-48]!
   1cc10:	mov	x29, sp
   1cc14:	str	x0, [sp, #24]
   1cc18:	str	x1, [sp, #16]
   1cc1c:	ldr	x0, [sp, #24]
   1cc20:	cmp	x0, #0x0
   1cc24:	cset	w0, ne  // ne = any
   1cc28:	and	w0, w0, #0xff
   1cc2c:	and	x0, x0, #0xff
   1cc30:	cmp	x0, #0x0
   1cc34:	b.ne	1cc68 <udev_util_encode_string@@LIBUDEV_183+0x11438>  // b.any
   1cc38:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cc3c:	add	x1, x0, #0xcab
   1cc40:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1cc44:	add	x4, x0, #0x9e0
   1cc48:	mov	w3, #0x576                 	// #1398
   1cc4c:	mov	x2, x1
   1cc50:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cc54:	add	x1, x0, #0xcd8
   1cc58:	mov	w0, #0x0                   	// #0
   1cc5c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1cc60:	mov	w0, #0x1                   	// #1
   1cc64:	b	1cc6c <udev_util_encode_string@@LIBUDEV_183+0x1143c>
   1cc68:	mov	w0, #0x0                   	// #0
   1cc6c:	cmp	w0, #0x0
   1cc70:	b.eq	1cc7c <udev_util_encode_string@@LIBUDEV_183+0x1144c>  // b.none
   1cc74:	mov	w0, #0xffffffea            	// #-22
   1cc78:	b	1cd80 <udev_util_encode_string@@LIBUDEV_183+0x11550>
   1cc7c:	ldr	x0, [sp, #16]
   1cc80:	cmp	x0, #0x0
   1cc84:	cset	w0, ne  // ne = any
   1cc88:	and	w0, w0, #0xff
   1cc8c:	and	x0, x0, #0xff
   1cc90:	cmp	x0, #0x0
   1cc94:	b.ne	1ccc8 <udev_util_encode_string@@LIBUDEV_183+0x11498>  // b.any
   1cc98:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cc9c:	add	x1, x0, #0xcab
   1cca0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1cca4:	add	x4, x0, #0x9e0
   1cca8:	mov	w3, #0x577                 	// #1399
   1ccac:	mov	x2, x1
   1ccb0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ccb4:	add	x1, x0, #0x4c8
   1ccb8:	mov	w0, #0x0                   	// #0
   1ccbc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1ccc0:	mov	w0, #0x1                   	// #1
   1ccc4:	b	1cccc <udev_util_encode_string@@LIBUDEV_183+0x1149c>
   1ccc8:	mov	w0, #0x0                   	// #0
   1cccc:	cmp	w0, #0x0
   1ccd0:	b.eq	1ccdc <udev_util_encode_string@@LIBUDEV_183+0x114ac>  // b.none
   1ccd4:	mov	w0, #0xffffffea            	// #-22
   1ccd8:	b	1cd80 <udev_util_encode_string@@LIBUDEV_183+0x11550>
   1ccdc:	ldr	x0, [sp, #24]
   1cce0:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1cce4:	str	w0, [sp, #36]
   1cce8:	ldr	w0, [sp, #36]
   1ccec:	cmp	w0, #0x0
   1ccf0:	b.ge	1ccfc <udev_util_encode_string@@LIBUDEV_183+0x114cc>  // b.tcont
   1ccf4:	ldr	w0, [sp, #36]
   1ccf8:	b	1cd80 <udev_util_encode_string@@LIBUDEV_183+0x11550>
   1ccfc:	ldr	x0, [sp, #24]
   1cd00:	ldrb	w0, [x0, #331]
   1cd04:	ubfx	x0, x0, #0, #1
   1cd08:	and	w0, w0, #0xff
   1cd0c:	eor	w0, w0, #0x1
   1cd10:	and	w0, w0, #0xff
   1cd14:	cmp	w0, #0x0
   1cd18:	b.eq	1cd24 <udev_util_encode_string@@LIBUDEV_183+0x114f4>  // b.none
   1cd1c:	mov	w0, #0xfffffff0            	// #-16
   1cd20:	b	1cd80 <udev_util_encode_string@@LIBUDEV_183+0x11550>
   1cd24:	ldr	x0, [sp, #24]
   1cd28:	ldr	x0, [x0, #296]
   1cd2c:	cmp	x0, #0x0
   1cd30:	b.ne	1cd3c <udev_util_encode_string@@LIBUDEV_183+0x1150c>  // b.any
   1cd34:	mov	w0, #0xffffffc3            	// #-61
   1cd38:	b	1cd80 <udev_util_encode_string@@LIBUDEV_183+0x11550>
   1cd3c:	bl	35830 <udev_util_encode_string@@LIBUDEV_183+0x2a000>
   1cd40:	bl	353f0 <udev_util_encode_string@@LIBUDEV_183+0x29bc0>
   1cd44:	str	x0, [sp, #40]
   1cd48:	ldr	x0, [sp, #24]
   1cd4c:	ldr	x0, [x0, #296]
   1cd50:	ldr	x1, [sp, #40]
   1cd54:	cmp	x1, x0
   1cd58:	b.cs	1cd64 <udev_util_encode_string@@LIBUDEV_183+0x11534>  // b.hs, b.nlast
   1cd5c:	mov	w0, #0xfffffffb            	// #-5
   1cd60:	b	1cd80 <udev_util_encode_string@@LIBUDEV_183+0x11550>
   1cd64:	ldr	x0, [sp, #24]
   1cd68:	ldr	x0, [x0, #296]
   1cd6c:	ldr	x1, [sp, #40]
   1cd70:	sub	x1, x1, x0
   1cd74:	ldr	x0, [sp, #16]
   1cd78:	str	x1, [x0]
   1cd7c:	mov	w0, #0x0                   	// #0
   1cd80:	ldp	x29, x30, [sp], #48
   1cd84:	ret
   1cd88:	stp	x29, x30, [sp, #-48]!
   1cd8c:	mov	x29, sp
   1cd90:	str	x0, [sp, #24]
   1cd94:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1cd98:	ldr	x0, [x0, #4016]
   1cd9c:	ldr	x1, [x0]
   1cda0:	str	x1, [sp, #40]
   1cda4:	mov	x1, #0x0                   	// #0
   1cda8:	ldr	x0, [sp, #24]
   1cdac:	cmp	x0, #0x0
   1cdb0:	cset	w0, ne  // ne = any
   1cdb4:	and	w0, w0, #0xff
   1cdb8:	and	x0, x0, #0xff
   1cdbc:	cmp	x0, #0x0
   1cdc0:	b.ne	1cdf4 <udev_util_encode_string@@LIBUDEV_183+0x115c4>  // b.any
   1cdc4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cdc8:	add	x1, x0, #0xcab
   1cdcc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1cdd0:	add	x4, x0, #0xa08
   1cdd4:	mov	w3, #0x58f                 	// #1423
   1cdd8:	mov	x2, x1
   1cddc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cde0:	add	x1, x0, #0xcd8
   1cde4:	mov	w0, #0x0                   	// #0
   1cde8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1cdec:	mov	w0, #0x1                   	// #1
   1cdf0:	b	1cdf8 <udev_util_encode_string@@LIBUDEV_183+0x115c8>
   1cdf4:	mov	w0, #0x0                   	// #0
   1cdf8:	cmp	w0, #0x0
   1cdfc:	b.eq	1ce08 <udev_util_encode_string@@LIBUDEV_183+0x115d8>  // b.none
   1ce00:	mov	x0, #0x0                   	// #0
   1ce04:	b	1ce5c <udev_util_encode_string@@LIBUDEV_183+0x1162c>
   1ce08:	ldr	x0, [sp, #24]
   1ce0c:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1ce10:	ldr	x0, [sp, #24]
   1ce14:	ldr	x1, [x0, #120]
   1ce18:	ldr	x0, [sp, #24]
   1ce1c:	str	x1, [x0, #128]
   1ce20:	ldr	x0, [sp, #24]
   1ce24:	mov	w1, #0xfffffffe            	// #-2
   1ce28:	str	w1, [x0, #104]
   1ce2c:	ldr	x0, [sp, #24]
   1ce30:	str	xzr, [x0, #112]
   1ce34:	ldr	x0, [sp, #24]
   1ce38:	ldr	x3, [x0, #96]
   1ce3c:	ldr	x0, [sp, #24]
   1ce40:	add	x0, x0, #0x68
   1ce44:	add	x1, sp, #0x20
   1ce48:	mov	x2, x1
   1ce4c:	mov	x1, x0
   1ce50:	mov	x0, x3
   1ce54:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   1ce58:	ldr	x0, [sp, #32]
   1ce5c:	mov	x1, x0
   1ce60:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1ce64:	ldr	x0, [x0, #4016]
   1ce68:	ldr	x2, [sp, #40]
   1ce6c:	ldr	x0, [x0]
   1ce70:	eor	x0, x2, x0
   1ce74:	cmp	x0, #0x0
   1ce78:	b.eq	1ce80 <udev_util_encode_string@@LIBUDEV_183+0x11650>  // b.none
   1ce7c:	bl	5390 <__stack_chk_fail@plt>
   1ce80:	mov	x0, x1
   1ce84:	ldp	x29, x30, [sp], #48
   1ce88:	ret
   1ce8c:	stp	x29, x30, [sp, #-48]!
   1ce90:	mov	x29, sp
   1ce94:	str	x0, [sp, #24]
   1ce98:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1ce9c:	ldr	x0, [x0, #4016]
   1cea0:	ldr	x1, [x0]
   1cea4:	str	x1, [sp, #40]
   1cea8:	mov	x1, #0x0                   	// #0
   1ceac:	ldr	x0, [sp, #24]
   1ceb0:	cmp	x0, #0x0
   1ceb4:	cset	w0, ne  // ne = any
   1ceb8:	and	w0, w0, #0xff
   1cebc:	and	x0, x0, #0xff
   1cec0:	cmp	x0, #0x0
   1cec4:	b.ne	1cef8 <udev_util_encode_string@@LIBUDEV_183+0x116c8>  // b.any
   1cec8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cecc:	add	x1, x0, #0xcab
   1ced0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ced4:	add	x4, x0, #0xa20
   1ced8:	mov	w3, #0x59d                 	// #1437
   1cedc:	mov	x2, x1
   1cee0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cee4:	add	x1, x0, #0xcd8
   1cee8:	mov	w0, #0x0                   	// #0
   1ceec:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1cef0:	mov	w0, #0x1                   	// #1
   1cef4:	b	1cefc <udev_util_encode_string@@LIBUDEV_183+0x116cc>
   1cef8:	mov	w0, #0x0                   	// #0
   1cefc:	cmp	w0, #0x0
   1cf00:	b.eq	1cf0c <udev_util_encode_string@@LIBUDEV_183+0x116dc>  // b.none
   1cf04:	mov	x0, #0x0                   	// #0
   1cf08:	b	1cf5c <udev_util_encode_string@@LIBUDEV_183+0x1172c>
   1cf0c:	ldr	x0, [sp, #24]
   1cf10:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1cf14:	ldr	x0, [sp, #24]
   1cf18:	ldr	x1, [x0, #128]
   1cf1c:	ldr	x0, [sp, #24]
   1cf20:	ldr	x0, [x0, #120]
   1cf24:	cmp	x1, x0
   1cf28:	b.eq	1cf34 <udev_util_encode_string@@LIBUDEV_183+0x11704>  // b.none
   1cf2c:	mov	x0, #0x0                   	// #0
   1cf30:	b	1cf5c <udev_util_encode_string@@LIBUDEV_183+0x1172c>
   1cf34:	ldr	x0, [sp, #24]
   1cf38:	ldr	x3, [x0, #96]
   1cf3c:	ldr	x0, [sp, #24]
   1cf40:	add	x0, x0, #0x68
   1cf44:	add	x1, sp, #0x20
   1cf48:	mov	x2, x1
   1cf4c:	mov	x1, x0
   1cf50:	mov	x0, x3
   1cf54:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   1cf58:	ldr	x0, [sp, #32]
   1cf5c:	mov	x1, x0
   1cf60:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1cf64:	ldr	x0, [x0, #4016]
   1cf68:	ldr	x2, [sp, #40]
   1cf6c:	ldr	x0, [x0]
   1cf70:	eor	x0, x2, x0
   1cf74:	cmp	x0, #0x0
   1cf78:	b.eq	1cf80 <udev_util_encode_string@@LIBUDEV_183+0x11750>  // b.none
   1cf7c:	bl	5390 <__stack_chk_fail@plt>
   1cf80:	mov	x0, x1
   1cf84:	ldp	x29, x30, [sp], #48
   1cf88:	ret
   1cf8c:	stp	x29, x30, [sp, #-48]!
   1cf90:	mov	x29, sp
   1cf94:	str	x0, [sp, #24]
   1cf98:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1cf9c:	ldr	x0, [x0, #4016]
   1cfa0:	ldr	x1, [x0]
   1cfa4:	str	x1, [sp, #40]
   1cfa8:	mov	x1, #0x0                   	// #0
   1cfac:	ldr	x0, [sp, #24]
   1cfb0:	cmp	x0, #0x0
   1cfb4:	cset	w0, ne  // ne = any
   1cfb8:	and	w0, w0, #0xff
   1cfbc:	and	x0, x0, #0xff
   1cfc0:	cmp	x0, #0x0
   1cfc4:	b.ne	1cff8 <udev_util_encode_string@@LIBUDEV_183+0x117c8>  // b.any
   1cfc8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cfcc:	add	x1, x0, #0xcab
   1cfd0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1cfd4:	add	x4, x0, #0xa38
   1cfd8:	mov	w3, #0x5ab                 	// #1451
   1cfdc:	mov	x2, x1
   1cfe0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1cfe4:	add	x1, x0, #0xcd8
   1cfe8:	mov	w0, #0x0                   	// #0
   1cfec:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1cff0:	mov	w0, #0x1                   	// #1
   1cff4:	b	1cffc <udev_util_encode_string@@LIBUDEV_183+0x117cc>
   1cff8:	mov	w0, #0x0                   	// #0
   1cffc:	cmp	w0, #0x0
   1d000:	b.eq	1d00c <udev_util_encode_string@@LIBUDEV_183+0x117dc>  // b.none
   1d004:	mov	x0, #0x0                   	// #0
   1d008:	b	1d060 <udev_util_encode_string@@LIBUDEV_183+0x11830>
   1d00c:	ldr	x0, [sp, #24]
   1d010:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1d014:	ldr	x0, [sp, #24]
   1d018:	ldr	x1, [x0, #160]
   1d01c:	ldr	x0, [sp, #24]
   1d020:	str	x1, [x0, #168]
   1d024:	ldr	x0, [sp, #24]
   1d028:	mov	w1, #0xfffffffe            	// #-2
   1d02c:	str	w1, [x0, #144]
   1d030:	ldr	x0, [sp, #24]
   1d034:	str	xzr, [x0, #152]
   1d038:	ldr	x0, [sp, #24]
   1d03c:	ldr	x3, [x0, #136]
   1d040:	ldr	x0, [sp, #24]
   1d044:	add	x0, x0, #0x90
   1d048:	add	x1, sp, #0x20
   1d04c:	mov	x2, x1
   1d050:	mov	x1, x0
   1d054:	mov	x0, x3
   1d058:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   1d05c:	ldr	x0, [sp, #32]
   1d060:	mov	x1, x0
   1d064:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d068:	ldr	x0, [x0, #4016]
   1d06c:	ldr	x2, [sp, #40]
   1d070:	ldr	x0, [x0]
   1d074:	eor	x0, x2, x0
   1d078:	cmp	x0, #0x0
   1d07c:	b.eq	1d084 <udev_util_encode_string@@LIBUDEV_183+0x11854>  // b.none
   1d080:	bl	5390 <__stack_chk_fail@plt>
   1d084:	mov	x0, x1
   1d088:	ldp	x29, x30, [sp], #48
   1d08c:	ret
   1d090:	stp	x29, x30, [sp, #-48]!
   1d094:	mov	x29, sp
   1d098:	str	x0, [sp, #24]
   1d09c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d0a0:	ldr	x0, [x0, #4016]
   1d0a4:	ldr	x1, [x0]
   1d0a8:	str	x1, [sp, #40]
   1d0ac:	mov	x1, #0x0                   	// #0
   1d0b0:	ldr	x0, [sp, #24]
   1d0b4:	cmp	x0, #0x0
   1d0b8:	cset	w0, ne  // ne = any
   1d0bc:	and	w0, w0, #0xff
   1d0c0:	and	x0, x0, #0xff
   1d0c4:	cmp	x0, #0x0
   1d0c8:	b.ne	1d0fc <udev_util_encode_string@@LIBUDEV_183+0x118cc>  // b.any
   1d0cc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d0d0:	add	x1, x0, #0xcab
   1d0d4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d0d8:	add	x4, x0, #0xa58
   1d0dc:	mov	w3, #0x5b9                 	// #1465
   1d0e0:	mov	x2, x1
   1d0e4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d0e8:	add	x1, x0, #0xcd8
   1d0ec:	mov	w0, #0x0                   	// #0
   1d0f0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1d0f4:	mov	w0, #0x1                   	// #1
   1d0f8:	b	1d100 <udev_util_encode_string@@LIBUDEV_183+0x118d0>
   1d0fc:	mov	w0, #0x0                   	// #0
   1d100:	cmp	w0, #0x0
   1d104:	b.eq	1d110 <udev_util_encode_string@@LIBUDEV_183+0x118e0>  // b.none
   1d108:	mov	x0, #0x0                   	// #0
   1d10c:	b	1d160 <udev_util_encode_string@@LIBUDEV_183+0x11930>
   1d110:	ldr	x0, [sp, #24]
   1d114:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1d118:	ldr	x0, [sp, #24]
   1d11c:	ldr	x1, [x0, #168]
   1d120:	ldr	x0, [sp, #24]
   1d124:	ldr	x0, [x0, #160]
   1d128:	cmp	x1, x0
   1d12c:	b.eq	1d138 <udev_util_encode_string@@LIBUDEV_183+0x11908>  // b.none
   1d130:	mov	x0, #0x0                   	// #0
   1d134:	b	1d160 <udev_util_encode_string@@LIBUDEV_183+0x11930>
   1d138:	ldr	x0, [sp, #24]
   1d13c:	ldr	x3, [x0, #136]
   1d140:	ldr	x0, [sp, #24]
   1d144:	add	x0, x0, #0x90
   1d148:	add	x1, sp, #0x20
   1d14c:	mov	x2, x1
   1d150:	mov	x1, x0
   1d154:	mov	x0, x3
   1d158:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   1d15c:	ldr	x0, [sp, #32]
   1d160:	mov	x1, x0
   1d164:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d168:	ldr	x0, [x0, #4016]
   1d16c:	ldr	x2, [sp, #40]
   1d170:	ldr	x0, [x0]
   1d174:	eor	x0, x2, x0
   1d178:	cmp	x0, #0x0
   1d17c:	b.eq	1d184 <udev_util_encode_string@@LIBUDEV_183+0x11954>  // b.none
   1d180:	bl	5390 <__stack_chk_fail@plt>
   1d184:	mov	x0, x1
   1d188:	ldp	x29, x30, [sp], #48
   1d18c:	ret
   1d190:	stp	x29, x30, [sp, #-128]!
   1d194:	mov	x29, sp
   1d198:	stp	x19, x20, [sp, #16]
   1d19c:	str	x0, [sp, #40]
   1d1a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d1a4:	ldr	x0, [x0, #4016]
   1d1a8:	ldr	x1, [x0]
   1d1ac:	str	x1, [sp, #120]
   1d1b0:	mov	x1, #0x0                   	// #0
   1d1b4:	ldr	x0, [sp, #40]
   1d1b8:	cmp	x0, #0x0
   1d1bc:	cset	w0, eq  // eq = none
   1d1c0:	and	w0, w0, #0xff
   1d1c4:	and	x0, x0, #0xff
   1d1c8:	cmp	x0, #0x0
   1d1cc:	b.eq	1d1f8 <udev_util_encode_string@@LIBUDEV_183+0x119c8>  // b.none
   1d1d0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d1d4:	add	x1, x0, #0xcab
   1d1d8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d1dc:	add	x4, x0, #0xa78
   1d1e0:	mov	w3, #0x5c7                 	// #1479
   1d1e4:	mov	x2, x1
   1d1e8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d1ec:	add	x1, x0, #0xcd8
   1d1f0:	mov	w0, #0x0                   	// #0
   1d1f4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1d1f8:	ldr	x0, [sp, #40]
   1d1fc:	bl	186d0 <udev_util_encode_string@@LIBUDEV_183+0xcea0>
   1d200:	str	w0, [sp, #52]
   1d204:	ldr	w0, [sp, #52]
   1d208:	cmp	w0, #0x0
   1d20c:	b.ge	1d218 <udev_util_encode_string@@LIBUDEV_183+0x119e8>  // b.tcont
   1d210:	ldr	w19, [sp, #52]
   1d214:	b	1d4c0 <udev_util_encode_string@@LIBUDEV_183+0x11c90>
   1d218:	ldr	x0, [sp, #40]
   1d21c:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1d220:	str	w0, [sp, #52]
   1d224:	ldr	w0, [sp, #52]
   1d228:	cmp	w0, #0x0
   1d22c:	b.ge	1d238 <udev_util_encode_string@@LIBUDEV_183+0x11a08>  // b.tcont
   1d230:	ldr	w19, [sp, #52]
   1d234:	b	1d4c0 <udev_util_encode_string@@LIBUDEV_183+0x11c90>
   1d238:	ldr	x0, [sp, #40]
   1d23c:	ldrb	w0, [x0, #328]
   1d240:	and	w0, w0, #0x8
   1d244:	and	w0, w0, #0xff
   1d248:	cmp	w0, #0x0
   1d24c:	b.eq	1d368 <udev_util_encode_string@@LIBUDEV_183+0x11b38>  // b.none
   1d250:	str	xzr, [sp, #56]
   1d254:	str	xzr, [sp, #64]
   1d258:	str	xzr, [sp, #72]
   1d25c:	ldr	x0, [sp, #40]
   1d260:	bl	1cf8c <udev_util_encode_string@@LIBUDEV_183+0x1175c>
   1d264:	str	x0, [sp, #80]
   1d268:	b	1d304 <udev_util_encode_string@@LIBUDEV_183+0x11ad4>
   1d26c:	ldr	x0, [sp, #80]
   1d270:	bl	5040 <strlen@plt>
   1d274:	mov	x1, x0
   1d278:	ldr	x0, [sp, #72]
   1d27c:	add	x0, x1, x0
   1d280:	add	x2, x0, #0x2
   1d284:	add	x1, sp, #0x40
   1d288:	add	x0, sp, #0x38
   1d28c:	mov	x3, #0x1                   	// #1
   1d290:	bl	22988 <udev_util_encode_string@@LIBUDEV_183+0x17158>
   1d294:	cmp	x0, #0x0
   1d298:	b.ne	1d2a8 <udev_util_encode_string@@LIBUDEV_183+0x11a78>  // b.any
   1d29c:	mov	w19, #0xfffffff4            	// #-12
   1d2a0:	mov	w20, #0x0                   	// #0
   1d2a4:	b	1d358 <udev_util_encode_string@@LIBUDEV_183+0x11b28>
   1d2a8:	ldr	x0, [sp, #72]
   1d2ac:	cmp	x0, #0x0
   1d2b0:	b.eq	1d2d0 <udev_util_encode_string@@LIBUDEV_183+0x11aa0>  // b.none
   1d2b4:	ldr	x1, [sp, #56]
   1d2b8:	ldr	x0, [sp, #72]
   1d2bc:	add	x2, x0, #0x1
   1d2c0:	str	x2, [sp, #72]
   1d2c4:	add	x0, x1, x0
   1d2c8:	mov	w1, #0x20                  	// #32
   1d2cc:	strh	w1, [x0]
   1d2d0:	ldr	x1, [sp, #56]
   1d2d4:	ldr	x0, [sp, #72]
   1d2d8:	add	x0, x1, x0
   1d2dc:	ldr	x1, [sp, #80]
   1d2e0:	bl	51b0 <stpcpy@plt>
   1d2e4:	str	x0, [sp, #104]
   1d2e8:	ldr	x0, [sp, #56]
   1d2ec:	ldr	x1, [sp, #104]
   1d2f0:	sub	x0, x1, x0
   1d2f4:	str	x0, [sp, #72]
   1d2f8:	ldr	x0, [sp, #40]
   1d2fc:	bl	1d090 <udev_util_encode_string@@LIBUDEV_183+0x11860>
   1d300:	str	x0, [sp, #80]
   1d304:	ldr	x0, [sp, #80]
   1d308:	cmp	x0, #0x0
   1d30c:	b.ne	1d26c <udev_util_encode_string@@LIBUDEV_183+0x11a3c>  // b.any
   1d310:	ldr	x0, [sp, #56]
   1d314:	mov	x2, x0
   1d318:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d31c:	add	x1, x0, #0x4d0
   1d320:	ldr	x0, [sp, #40]
   1d324:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   1d328:	str	w0, [sp, #52]
   1d32c:	ldr	w0, [sp, #52]
   1d330:	cmp	w0, #0x0
   1d334:	b.ge	1d344 <udev_util_encode_string@@LIBUDEV_183+0x11b14>  // b.tcont
   1d338:	ldr	w19, [sp, #52]
   1d33c:	mov	w20, #0x0                   	// #0
   1d340:	b	1d358 <udev_util_encode_string@@LIBUDEV_183+0x11b28>
   1d344:	ldr	x0, [sp, #40]
   1d348:	ldrb	w1, [x0, #328]
   1d34c:	and	w1, w1, #0xfffffff7
   1d350:	strb	w1, [x0, #328]
   1d354:	mov	w20, #0x1                   	// #1
   1d358:	add	x0, sp, #0x38
   1d35c:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1d360:	cmp	w20, #0x1
   1d364:	b.ne	1d4c0 <udev_util_encode_string@@LIBUDEV_183+0x11c90>  // b.any
   1d368:	ldr	x0, [sp, #40]
   1d36c:	ldrb	w0, [x0, #328]
   1d370:	and	w0, w0, #0x4
   1d374:	and	w0, w0, #0xff
   1d378:	cmp	w0, #0x0
   1d37c:	b.eq	1d4bc <udev_util_encode_string@@LIBUDEV_183+0x11c8c>  // b.none
   1d380:	str	xzr, [sp, #56]
   1d384:	str	xzr, [sp, #64]
   1d388:	str	xzr, [sp, #88]
   1d38c:	add	x1, sp, #0x40
   1d390:	add	x0, sp, #0x38
   1d394:	mov	x3, #0x1                   	// #1
   1d398:	mov	x2, #0x2                   	// #2
   1d39c:	bl	22988 <udev_util_encode_string@@LIBUDEV_183+0x17158>
   1d3a0:	cmp	x0, #0x0
   1d3a4:	b.ne	1d3b4 <udev_util_encode_string@@LIBUDEV_183+0x11b84>  // b.any
   1d3a8:	mov	w19, #0xfffffff4            	// #-12
   1d3ac:	mov	w20, #0x0                   	// #0
   1d3b0:	b	1d4ac <udev_util_encode_string@@LIBUDEV_183+0x11c7c>
   1d3b4:	ldr	x0, [sp, #56]
   1d3b8:	mov	w1, #0x3a                  	// #58
   1d3bc:	strh	w1, [x0]
   1d3c0:	ldr	x0, [sp, #88]
   1d3c4:	add	x0, x0, #0x1
   1d3c8:	str	x0, [sp, #88]
   1d3cc:	ldr	x0, [sp, #40]
   1d3d0:	bl	1cd88 <udev_util_encode_string@@LIBUDEV_183+0x11558>
   1d3d4:	str	x0, [sp, #96]
   1d3d8:	b	1d458 <udev_util_encode_string@@LIBUDEV_183+0x11c28>
   1d3dc:	ldr	x0, [sp, #96]
   1d3e0:	bl	5040 <strlen@plt>
   1d3e4:	mov	x1, x0
   1d3e8:	ldr	x0, [sp, #88]
   1d3ec:	add	x0, x1, x0
   1d3f0:	add	x2, x0, #0x2
   1d3f4:	add	x1, sp, #0x40
   1d3f8:	add	x0, sp, #0x38
   1d3fc:	mov	x3, #0x1                   	// #1
   1d400:	bl	22988 <udev_util_encode_string@@LIBUDEV_183+0x17158>
   1d404:	cmp	x0, #0x0
   1d408:	b.ne	1d418 <udev_util_encode_string@@LIBUDEV_183+0x11be8>  // b.any
   1d40c:	mov	w19, #0xfffffff4            	// #-12
   1d410:	mov	w20, #0x0                   	// #0
   1d414:	b	1d4ac <udev_util_encode_string@@LIBUDEV_183+0x11c7c>
   1d418:	ldr	x1, [sp, #56]
   1d41c:	ldr	x0, [sp, #88]
   1d420:	add	x0, x1, x0
   1d424:	ldr	x1, [sp, #96]
   1d428:	bl	51b0 <stpcpy@plt>
   1d42c:	mov	w1, #0x3a                  	// #58
   1d430:	strh	w1, [x0]
   1d434:	add	x0, x0, #0x1
   1d438:	str	x0, [sp, #112]
   1d43c:	ldr	x0, [sp, #56]
   1d440:	ldr	x1, [sp, #112]
   1d444:	sub	x0, x1, x0
   1d448:	str	x0, [sp, #88]
   1d44c:	ldr	x0, [sp, #40]
   1d450:	bl	1ce8c <udev_util_encode_string@@LIBUDEV_183+0x1165c>
   1d454:	str	x0, [sp, #96]
   1d458:	ldr	x0, [sp, #96]
   1d45c:	cmp	x0, #0x0
   1d460:	b.ne	1d3dc <udev_util_encode_string@@LIBUDEV_183+0x11bac>  // b.any
   1d464:	ldr	x0, [sp, #56]
   1d468:	mov	x2, x0
   1d46c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d470:	add	x1, x0, #0x4e0
   1d474:	ldr	x0, [sp, #40]
   1d478:	bl	15994 <udev_util_encode_string@@LIBUDEV_183+0xa164>
   1d47c:	str	w0, [sp, #52]
   1d480:	ldr	w0, [sp, #52]
   1d484:	cmp	w0, #0x0
   1d488:	b.ge	1d498 <udev_util_encode_string@@LIBUDEV_183+0x11c68>  // b.tcont
   1d48c:	ldr	w19, [sp, #52]
   1d490:	mov	w20, #0x0                   	// #0
   1d494:	b	1d4ac <udev_util_encode_string@@LIBUDEV_183+0x11c7c>
   1d498:	ldr	x0, [sp, #40]
   1d49c:	ldrb	w1, [x0, #328]
   1d4a0:	and	w1, w1, #0xfffffffb
   1d4a4:	strb	w1, [x0, #328]
   1d4a8:	mov	w20, #0x1                   	// #1
   1d4ac:	add	x0, sp, #0x38
   1d4b0:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1d4b4:	cmp	w20, #0x1
   1d4b8:	b.ne	1d4c0 <udev_util_encode_string@@LIBUDEV_183+0x11c90>  // b.any
   1d4bc:	mov	w19, #0x0                   	// #0
   1d4c0:	mov	w1, w19
   1d4c4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d4c8:	ldr	x0, [x0, #4016]
   1d4cc:	ldr	x2, [sp, #120]
   1d4d0:	ldr	x0, [x0]
   1d4d4:	eor	x0, x2, x0
   1d4d8:	cmp	x0, #0x0
   1d4dc:	b.eq	1d4e4 <udev_util_encode_string@@LIBUDEV_183+0x11cb4>  // b.none
   1d4e0:	bl	5390 <__stack_chk_fail@plt>
   1d4e4:	mov	w0, w1
   1d4e8:	ldp	x19, x20, [sp, #16]
   1d4ec:	ldp	x29, x30, [sp], #128
   1d4f0:	ret
   1d4f4:	stp	x29, x30, [sp, #-64]!
   1d4f8:	mov	x29, sp
   1d4fc:	str	x0, [sp, #24]
   1d500:	str	x1, [sp, #16]
   1d504:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d508:	ldr	x0, [x0, #4016]
   1d50c:	ldr	x1, [x0]
   1d510:	str	x1, [sp, #56]
   1d514:	mov	x1, #0x0                   	// #0
   1d518:	ldr	x0, [sp, #24]
   1d51c:	cmp	x0, #0x0
   1d520:	cset	w0, ne  // ne = any
   1d524:	and	w0, w0, #0xff
   1d528:	and	x0, x0, #0xff
   1d52c:	cmp	x0, #0x0
   1d530:	b.ne	1d564 <udev_util_encode_string@@LIBUDEV_183+0x11d34>  // b.any
   1d534:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d538:	add	x1, x0, #0xcab
   1d53c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d540:	add	x4, x0, #0xa98
   1d544:	mov	w3, #0x609                 	// #1545
   1d548:	mov	x2, x1
   1d54c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d550:	add	x1, x0, #0xcd8
   1d554:	mov	w0, #0x0                   	// #0
   1d558:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1d55c:	mov	w0, #0x1                   	// #1
   1d560:	b	1d568 <udev_util_encode_string@@LIBUDEV_183+0x11d38>
   1d564:	mov	w0, #0x0                   	// #0
   1d568:	cmp	w0, #0x0
   1d56c:	b.eq	1d578 <udev_util_encode_string@@LIBUDEV_183+0x11d48>  // b.none
   1d570:	mov	x0, #0x0                   	// #0
   1d574:	b	1d5e8 <udev_util_encode_string@@LIBUDEV_183+0x11db8>
   1d578:	ldr	x0, [sp, #24]
   1d57c:	bl	1d190 <udev_util_encode_string@@LIBUDEV_183+0x11960>
   1d580:	str	w0, [sp, #44]
   1d584:	ldr	w0, [sp, #44]
   1d588:	cmp	w0, #0x0
   1d58c:	b.ge	1d598 <udev_util_encode_string@@LIBUDEV_183+0x11d68>  // b.tcont
   1d590:	mov	x0, #0x0                   	// #0
   1d594:	b	1d5e8 <udev_util_encode_string@@LIBUDEV_183+0x11db8>
   1d598:	ldr	x0, [sp, #24]
   1d59c:	ldr	x1, [x0, #40]
   1d5a0:	ldr	x0, [sp, #24]
   1d5a4:	str	x1, [x0, #48]
   1d5a8:	ldr	x0, [sp, #24]
   1d5ac:	mov	w1, #0xfffffffe            	// #-2
   1d5b0:	str	w1, [x0, #24]
   1d5b4:	ldr	x0, [sp, #24]
   1d5b8:	str	xzr, [x0, #32]
   1d5bc:	ldr	x0, [sp, #24]
   1d5c0:	ldr	x4, [x0, #16]
   1d5c4:	ldr	x0, [sp, #24]
   1d5c8:	add	x0, x0, #0x18
   1d5cc:	add	x1, sp, #0x30
   1d5d0:	mov	x3, x1
   1d5d4:	ldr	x2, [sp, #16]
   1d5d8:	mov	x1, x0
   1d5dc:	mov	x0, x4
   1d5e0:	bl	15180 <udev_util_encode_string@@LIBUDEV_183+0x9950>
   1d5e4:	ldr	x0, [sp, #48]
   1d5e8:	mov	x1, x0
   1d5ec:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d5f0:	ldr	x0, [x0, #4016]
   1d5f4:	ldr	x2, [sp, #56]
   1d5f8:	ldr	x0, [x0]
   1d5fc:	eor	x0, x2, x0
   1d600:	cmp	x0, #0x0
   1d604:	b.eq	1d60c <udev_util_encode_string@@LIBUDEV_183+0x11ddc>  // b.none
   1d608:	bl	5390 <__stack_chk_fail@plt>
   1d60c:	mov	x0, x1
   1d610:	ldp	x29, x30, [sp], #64
   1d614:	ret
   1d618:	stp	x29, x30, [sp, #-64]!
   1d61c:	mov	x29, sp
   1d620:	str	x0, [sp, #24]
   1d624:	str	x1, [sp, #16]
   1d628:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d62c:	ldr	x0, [x0, #4016]
   1d630:	ldr	x1, [x0]
   1d634:	str	x1, [sp, #56]
   1d638:	mov	x1, #0x0                   	// #0
   1d63c:	ldr	x0, [sp, #24]
   1d640:	cmp	x0, #0x0
   1d644:	cset	w0, ne  // ne = any
   1d648:	and	w0, w0, #0xff
   1d64c:	and	x0, x0, #0xff
   1d650:	cmp	x0, #0x0
   1d654:	b.ne	1d688 <udev_util_encode_string@@LIBUDEV_183+0x11e58>  // b.any
   1d658:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d65c:	add	x1, x0, #0xcab
   1d660:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d664:	add	x4, x0, #0xab8
   1d668:	mov	w3, #0x61a                 	// #1562
   1d66c:	mov	x2, x1
   1d670:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d674:	add	x1, x0, #0xcd8
   1d678:	mov	w0, #0x0                   	// #0
   1d67c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1d680:	mov	w0, #0x1                   	// #1
   1d684:	b	1d68c <udev_util_encode_string@@LIBUDEV_183+0x11e5c>
   1d688:	mov	w0, #0x0                   	// #0
   1d68c:	cmp	w0, #0x0
   1d690:	b.eq	1d69c <udev_util_encode_string@@LIBUDEV_183+0x11e6c>  // b.none
   1d694:	mov	x0, #0x0                   	// #0
   1d698:	b	1d708 <udev_util_encode_string@@LIBUDEV_183+0x11ed8>
   1d69c:	ldr	x0, [sp, #24]
   1d6a0:	bl	1d190 <udev_util_encode_string@@LIBUDEV_183+0x11960>
   1d6a4:	str	w0, [sp, #44]
   1d6a8:	ldr	w0, [sp, #44]
   1d6ac:	cmp	w0, #0x0
   1d6b0:	b.ge	1d6bc <udev_util_encode_string@@LIBUDEV_183+0x11e8c>  // b.tcont
   1d6b4:	mov	x0, #0x0                   	// #0
   1d6b8:	b	1d708 <udev_util_encode_string@@LIBUDEV_183+0x11ed8>
   1d6bc:	ldr	x0, [sp, #24]
   1d6c0:	ldr	x1, [x0, #48]
   1d6c4:	ldr	x0, [sp, #24]
   1d6c8:	ldr	x0, [x0, #40]
   1d6cc:	cmp	x1, x0
   1d6d0:	b.eq	1d6dc <udev_util_encode_string@@LIBUDEV_183+0x11eac>  // b.none
   1d6d4:	mov	x0, #0x0                   	// #0
   1d6d8:	b	1d708 <udev_util_encode_string@@LIBUDEV_183+0x11ed8>
   1d6dc:	ldr	x0, [sp, #24]
   1d6e0:	ldr	x4, [x0, #16]
   1d6e4:	ldr	x0, [sp, #24]
   1d6e8:	add	x0, x0, #0x18
   1d6ec:	add	x1, sp, #0x30
   1d6f0:	mov	x3, x1
   1d6f4:	ldr	x2, [sp, #16]
   1d6f8:	mov	x1, x0
   1d6fc:	mov	x0, x4
   1d700:	bl	15180 <udev_util_encode_string@@LIBUDEV_183+0x9950>
   1d704:	ldr	x0, [sp, #48]
   1d708:	mov	x1, x0
   1d70c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d710:	ldr	x0, [x0, #4016]
   1d714:	ldr	x2, [sp, #56]
   1d718:	ldr	x0, [x0]
   1d71c:	eor	x0, x2, x0
   1d720:	cmp	x0, #0x0
   1d724:	b.eq	1d72c <udev_util_encode_string@@LIBUDEV_183+0x11efc>  // b.none
   1d728:	bl	5390 <__stack_chk_fail@plt>
   1d72c:	mov	x0, x1
   1d730:	ldp	x29, x30, [sp], #64
   1d734:	ret
   1d738:	stp	x29, x30, [sp, #-224]!
   1d73c:	mov	x29, sp
   1d740:	stp	x19, x20, [sp, #16]
   1d744:	str	x0, [sp, #40]
   1d748:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d74c:	ldr	x0, [x0, #4016]
   1d750:	ldr	x1, [x0]
   1d754:	str	x1, [sp, #216]
   1d758:	mov	x1, #0x0                   	// #0
   1d75c:	str	xzr, [sp, #56]
   1d760:	ldr	x0, [sp, #40]
   1d764:	cmp	x0, #0x0
   1d768:	cset	w0, eq  // eq = none
   1d76c:	and	w0, w0, #0xff
   1d770:	and	x0, x0, #0xff
   1d774:	cmp	x0, #0x0
   1d778:	b.eq	1d7a4 <udev_util_encode_string@@LIBUDEV_183+0x11f74>  // b.none
   1d77c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d780:	add	x1, x0, #0xcab
   1d784:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1d788:	add	x4, x0, #0xad8
   1d78c:	mov	w3, #0x62d                 	// #1581
   1d790:	mov	x2, x1
   1d794:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1d798:	add	x1, x0, #0xcd8
   1d79c:	mov	w0, #0x0                   	// #0
   1d7a0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1d7a4:	ldr	x0, [sp, #40]
   1d7a8:	ldrb	w0, [x0, #328]
   1d7ac:	and	w0, w0, #0x2
   1d7b0:	and	w0, w0, #0xff
   1d7b4:	cmp	w0, #0x0
   1d7b8:	b.eq	1d7c4 <udev_util_encode_string@@LIBUDEV_183+0x11f94>  // b.none
   1d7bc:	mov	w19, #0x0                   	// #0
   1d7c0:	b	1d9bc <udev_util_encode_string@@LIBUDEV_183+0x1218c>
   1d7c4:	add	x0, sp, #0x40
   1d7c8:	mov	x1, x0
   1d7cc:	ldr	x0, [sp, #40]
   1d7d0:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   1d7d4:	str	w0, [sp, #52]
   1d7d8:	ldr	w0, [sp, #52]
   1d7dc:	cmp	w0, #0x0
   1d7e0:	b.ge	1d7ec <udev_util_encode_string@@LIBUDEV_183+0x11fbc>  // b.tcont
   1d7e4:	ldr	w19, [sp, #52]
   1d7e8:	b	1d9bc <udev_util_encode_string@@LIBUDEV_183+0x1218c>
   1d7ec:	ldr	x0, [sp, #64]
   1d7f0:	bl	5100 <opendir@plt>
   1d7f4:	str	x0, [sp, #56]
   1d7f8:	ldr	x0, [sp, #56]
   1d7fc:	cmp	x0, #0x0
   1d800:	b.ne	1d814 <udev_util_encode_string@@LIBUDEV_183+0x11fe4>  // b.any
   1d804:	bl	57d0 <__errno_location@plt>
   1d808:	ldr	w0, [x0]
   1d80c:	neg	w19, w0
   1d810:	b	1d9bc <udev_util_encode_string@@LIBUDEV_183+0x1218c>
   1d814:	ldr	x0, [sp, #40]
   1d818:	add	x2, x0, #0x48
   1d81c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d820:	ldr	x1, [x0, #4064]
   1d824:	mov	x0, x2
   1d828:	bl	28740 <udev_util_encode_string@@LIBUDEV_183+0x1cf10>
   1d82c:	str	w0, [sp, #52]
   1d830:	ldr	w0, [sp, #52]
   1d834:	cmp	w0, #0x0
   1d838:	b.ge	1d844 <udev_util_encode_string@@LIBUDEV_183+0x12014>  // b.tcont
   1d83c:	ldr	w19, [sp, #52]
   1d840:	b	1d9bc <udev_util_encode_string@@LIBUDEV_183+0x1218c>
   1d844:	bl	57d0 <__errno_location@plt>
   1d848:	str	wzr, [x0]
   1d84c:	ldr	x0, [sp, #56]
   1d850:	bl	5510 <readdir64@plt>
   1d854:	str	x0, [sp, #80]
   1d858:	ldr	x0, [sp, #80]
   1d85c:	cmp	x0, #0x0
   1d860:	b.ne	1d884 <udev_util_encode_string@@LIBUDEV_183+0x12054>  // b.any
   1d864:	bl	57d0 <__errno_location@plt>
   1d868:	ldr	w0, [x0]
   1d86c:	cmp	w0, #0x0
   1d870:	b.le	1d9a4 <udev_util_encode_string@@LIBUDEV_183+0x12174>
   1d874:	bl	57d0 <__errno_location@plt>
   1d878:	ldr	w0, [x0]
   1d87c:	neg	w19, w0
   1d880:	b	1d9bc <udev_util_encode_string@@LIBUDEV_183+0x1218c>
   1d884:	str	xzr, [sp, #72]
   1d888:	strb	wzr, [sp, #51]
   1d88c:	ldr	x0, [sp, #80]
   1d890:	ldrb	w0, [x0, #18]
   1d894:	cmp	w0, #0x8
   1d898:	b.eq	1d8a4 <udev_util_encode_string@@LIBUDEV_183+0x12074>  // b.none
   1d89c:	cmp	w0, #0xa
   1d8a0:	b.ne	1d8ac <udev_util_encode_string@@LIBUDEV_183+0x1207c>  // b.any
   1d8a4:	mov	w0, #0x1                   	// #1
   1d8a8:	strb	w0, [sp, #51]
   1d8ac:	nop
   1d8b0:	ldrb	w0, [sp, #51]
   1d8b4:	eor	w0, w0, #0x1
   1d8b8:	and	w0, w0, #0xff
   1d8bc:	cmp	w0, #0x0
   1d8c0:	b.eq	1d8cc <udev_util_encode_string@@LIBUDEV_183+0x1209c>  // b.none
   1d8c4:	mov	w20, #0x0                   	// #0
   1d8c8:	b	1d974 <udev_util_encode_string@@LIBUDEV_183+0x12144>
   1d8cc:	ldr	x3, [sp, #64]
   1d8d0:	ldr	x0, [sp, #80]
   1d8d4:	add	x0, x0, #0x13
   1d8d8:	mov	x2, #0xffffffffffffffff    	// #-1
   1d8dc:	mov	x1, x0
   1d8e0:	mov	x0, x3
   1d8e4:	bl	31588 <udev_util_encode_string@@LIBUDEV_183+0x25d58>
   1d8e8:	str	x0, [sp, #72]
   1d8ec:	ldr	x0, [sp, #72]
   1d8f0:	cmp	x0, #0x0
   1d8f4:	b.ne	1d904 <udev_util_encode_string@@LIBUDEV_183+0x120d4>  // b.any
   1d8f8:	mov	w19, #0xfffffff4            	// #-12
   1d8fc:	mov	w20, #0x1                   	// #1
   1d900:	b	1d974 <udev_util_encode_string@@LIBUDEV_183+0x12144>
   1d904:	ldr	x0, [sp, #72]
   1d908:	add	x1, sp, #0x58
   1d90c:	bl	36500 <udev_util_encode_string@@LIBUDEV_183+0x2acd0>
   1d910:	cmp	w0, #0x0
   1d914:	b.eq	1d920 <udev_util_encode_string@@LIBUDEV_183+0x120f0>  // b.none
   1d918:	mov	w20, #0x0                   	// #0
   1d91c:	b	1d974 <udev_util_encode_string@@LIBUDEV_183+0x12144>
   1d920:	ldr	w0, [sp, #104]
   1d924:	and	w0, w0, #0x100
   1d928:	cmp	w0, #0x0
   1d92c:	b.ne	1d938 <udev_util_encode_string@@LIBUDEV_183+0x12108>  // b.any
   1d930:	mov	w20, #0x0                   	// #0
   1d934:	b	1d974 <udev_util_encode_string@@LIBUDEV_183+0x12144>
   1d938:	ldr	x0, [sp, #40]
   1d93c:	ldr	x2, [x0, #72]
   1d940:	ldr	x0, [sp, #80]
   1d944:	add	x0, x0, #0x13
   1d948:	mov	x1, x0
   1d94c:	mov	x0, x2
   1d950:	bl	29f3c <udev_util_encode_string@@LIBUDEV_183+0x1e70c>
   1d954:	str	w0, [sp, #52]
   1d958:	ldr	w0, [sp, #52]
   1d95c:	cmp	w0, #0x0
   1d960:	b.ge	1d970 <udev_util_encode_string@@LIBUDEV_183+0x12140>  // b.tcont
   1d964:	ldr	w19, [sp, #52]
   1d968:	mov	w20, #0x1                   	// #1
   1d96c:	b	1d974 <udev_util_encode_string@@LIBUDEV_183+0x12144>
   1d970:	mov	w20, #0x2                   	// #2
   1d974:	add	x0, sp, #0x48
   1d978:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1d97c:	cmp	w20, #0x0
   1d980:	b.eq	1d98c <udev_util_encode_string@@LIBUDEV_183+0x1215c>  // b.none
   1d984:	cmp	w20, #0x2
   1d988:	b.ne	1d9bc <udev_util_encode_string@@LIBUDEV_183+0x1218c>  // b.any
   1d98c:	bl	57d0 <__errno_location@plt>
   1d990:	str	wzr, [x0]
   1d994:	ldr	x0, [sp, #56]
   1d998:	bl	5510 <readdir64@plt>
   1d99c:	str	x0, [sp, #80]
   1d9a0:	b	1d858 <udev_util_encode_string@@LIBUDEV_183+0x12028>
   1d9a4:	nop
   1d9a8:	ldr	x0, [sp, #40]
   1d9ac:	ldrb	w1, [x0, #328]
   1d9b0:	orr	w1, w1, #0x2
   1d9b4:	strb	w1, [x0, #328]
   1d9b8:	mov	w19, #0x0                   	// #0
   1d9bc:	add	x0, sp, #0x38
   1d9c0:	bl	1529c <udev_util_encode_string@@LIBUDEV_183+0x9a6c>
   1d9c4:	mov	w1, w19
   1d9c8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1d9cc:	ldr	x0, [x0, #4016]
   1d9d0:	ldr	x2, [sp, #216]
   1d9d4:	ldr	x0, [x0]
   1d9d8:	eor	x0, x2, x0
   1d9dc:	cmp	x0, #0x0
   1d9e0:	b.eq	1d9e8 <udev_util_encode_string@@LIBUDEV_183+0x121b8>  // b.none
   1d9e4:	bl	5390 <__stack_chk_fail@plt>
   1d9e8:	mov	w0, w1
   1d9ec:	ldp	x19, x20, [sp, #16]
   1d9f0:	ldp	x29, x30, [sp], #224
   1d9f4:	ret
   1d9f8:	stp	x29, x30, [sp, #-64]!
   1d9fc:	mov	x29, sp
   1da00:	str	x0, [sp, #24]
   1da04:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1da08:	ldr	x0, [x0, #4016]
   1da0c:	ldr	x1, [x0]
   1da10:	str	x1, [sp, #56]
   1da14:	mov	x1, #0x0                   	// #0
   1da18:	ldr	x0, [sp, #24]
   1da1c:	cmp	x0, #0x0
   1da20:	cset	w0, ne  // ne = any
   1da24:	and	w0, w0, #0xff
   1da28:	and	x0, x0, #0xff
   1da2c:	cmp	x0, #0x0
   1da30:	b.ne	1da64 <udev_util_encode_string@@LIBUDEV_183+0x12234>  // b.any
   1da34:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1da38:	add	x1, x0, #0xcab
   1da3c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1da40:	add	x4, x0, #0xaf8
   1da44:	mov	w3, #0x65e                 	// #1630
   1da48:	mov	x2, x1
   1da4c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1da50:	add	x1, x0, #0xcd8
   1da54:	mov	w0, #0x0                   	// #0
   1da58:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1da5c:	mov	w0, #0x1                   	// #1
   1da60:	b	1da68 <udev_util_encode_string@@LIBUDEV_183+0x12238>
   1da64:	mov	w0, #0x0                   	// #0
   1da68:	cmp	w0, #0x0
   1da6c:	b.eq	1da78 <udev_util_encode_string@@LIBUDEV_183+0x12248>  // b.none
   1da70:	mov	x0, #0x0                   	// #0
   1da74:	b	1db08 <udev_util_encode_string@@LIBUDEV_183+0x122d8>
   1da78:	ldr	x0, [sp, #24]
   1da7c:	ldrb	w0, [x0, #328]
   1da80:	ubfx	x0, x0, #1, #1
   1da84:	and	w0, w0, #0xff
   1da88:	eor	w0, w0, #0x1
   1da8c:	and	w0, w0, #0xff
   1da90:	cmp	w0, #0x0
   1da94:	b.eq	1dacc <udev_util_encode_string@@LIBUDEV_183+0x1229c>  // b.none
   1da98:	ldr	x0, [sp, #24]
   1da9c:	bl	1d738 <udev_util_encode_string@@LIBUDEV_183+0x11f08>
   1daa0:	str	w0, [sp, #44]
   1daa4:	ldr	w0, [sp, #44]
   1daa8:	cmp	w0, #0x0
   1daac:	b.ge	1dacc <udev_util_encode_string@@LIBUDEV_183+0x1229c>  // b.tcont
   1dab0:	bl	57d0 <__errno_location@plt>
   1dab4:	mov	x1, x0
   1dab8:	ldr	w0, [sp, #44]
   1dabc:	neg	w0, w0
   1dac0:	str	w0, [x1]
   1dac4:	mov	x0, #0x0                   	// #0
   1dac8:	b	1db08 <udev_util_encode_string@@LIBUDEV_183+0x122d8>
   1dacc:	ldr	x0, [sp, #24]
   1dad0:	mov	w1, #0xfffffffe            	// #-2
   1dad4:	str	w1, [x0, #80]
   1dad8:	ldr	x0, [sp, #24]
   1dadc:	str	xzr, [x0, #88]
   1dae0:	ldr	x0, [sp, #24]
   1dae4:	ldr	x3, [x0, #72]
   1dae8:	ldr	x0, [sp, #24]
   1daec:	add	x0, x0, #0x50
   1daf0:	add	x1, sp, #0x30
   1daf4:	mov	x2, x1
   1daf8:	mov	x1, x0
   1dafc:	mov	x0, x3
   1db00:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   1db04:	ldr	x0, [sp, #48]
   1db08:	mov	x1, x0
   1db0c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1db10:	ldr	x0, [x0, #4016]
   1db14:	ldr	x2, [sp, #56]
   1db18:	ldr	x0, [x0]
   1db1c:	eor	x0, x2, x0
   1db20:	cmp	x0, #0x0
   1db24:	b.eq	1db2c <udev_util_encode_string@@LIBUDEV_183+0x122fc>  // b.none
   1db28:	bl	5390 <__stack_chk_fail@plt>
   1db2c:	mov	x0, x1
   1db30:	ldp	x29, x30, [sp], #64
   1db34:	ret
   1db38:	stp	x29, x30, [sp, #-48]!
   1db3c:	mov	x29, sp
   1db40:	str	x0, [sp, #24]
   1db44:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1db48:	ldr	x0, [x0, #4016]
   1db4c:	ldr	x1, [x0]
   1db50:	str	x1, [sp, #40]
   1db54:	mov	x1, #0x0                   	// #0
   1db58:	ldr	x0, [sp, #24]
   1db5c:	cmp	x0, #0x0
   1db60:	cset	w0, ne  // ne = any
   1db64:	and	w0, w0, #0xff
   1db68:	and	x0, x0, #0xff
   1db6c:	cmp	x0, #0x0
   1db70:	b.ne	1dba4 <udev_util_encode_string@@LIBUDEV_183+0x12374>  // b.any
   1db74:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1db78:	add	x1, x0, #0xcab
   1db7c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1db80:	add	x4, x0, #0xb18
   1db84:	mov	w3, #0x671                 	// #1649
   1db88:	mov	x2, x1
   1db8c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1db90:	add	x1, x0, #0xcd8
   1db94:	mov	w0, #0x0                   	// #0
   1db98:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1db9c:	mov	w0, #0x1                   	// #1
   1dba0:	b	1dba8 <udev_util_encode_string@@LIBUDEV_183+0x12378>
   1dba4:	mov	w0, #0x0                   	// #0
   1dba8:	cmp	w0, #0x0
   1dbac:	b.eq	1dbb8 <udev_util_encode_string@@LIBUDEV_183+0x12388>  // b.none
   1dbb0:	mov	x0, #0x0                   	// #0
   1dbb4:	b	1dc08 <udev_util_encode_string@@LIBUDEV_183+0x123d8>
   1dbb8:	ldr	x0, [sp, #24]
   1dbbc:	ldrb	w0, [x0, #328]
   1dbc0:	ubfx	x0, x0, #1, #1
   1dbc4:	and	w0, w0, #0xff
   1dbc8:	eor	w0, w0, #0x1
   1dbcc:	and	w0, w0, #0xff
   1dbd0:	cmp	w0, #0x0
   1dbd4:	b.eq	1dbe0 <udev_util_encode_string@@LIBUDEV_183+0x123b0>  // b.none
   1dbd8:	mov	x0, #0x0                   	// #0
   1dbdc:	b	1dc08 <udev_util_encode_string@@LIBUDEV_183+0x123d8>
   1dbe0:	ldr	x0, [sp, #24]
   1dbe4:	ldr	x3, [x0, #72]
   1dbe8:	ldr	x0, [sp, #24]
   1dbec:	add	x0, x0, #0x50
   1dbf0:	add	x1, sp, #0x20
   1dbf4:	mov	x2, x1
   1dbf8:	mov	x1, x0
   1dbfc:	mov	x0, x3
   1dc00:	bl	283ec <udev_util_encode_string@@LIBUDEV_183+0x1cbbc>
   1dc04:	ldr	x0, [sp, #32]
   1dc08:	mov	x1, x0
   1dc0c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1dc10:	ldr	x0, [x0, #4016]
   1dc14:	ldr	x2, [sp, #40]
   1dc18:	ldr	x0, [x0]
   1dc1c:	eor	x0, x2, x0
   1dc20:	cmp	x0, #0x0
   1dc24:	b.eq	1dc2c <udev_util_encode_string@@LIBUDEV_183+0x123fc>  // b.none
   1dc28:	bl	5390 <__stack_chk_fail@plt>
   1dc2c:	mov	x0, x1
   1dc30:	ldp	x29, x30, [sp], #48
   1dc34:	ret
   1dc38:	stp	x29, x30, [sp, #-32]!
   1dc3c:	mov	x29, sp
   1dc40:	str	x0, [sp, #24]
   1dc44:	str	x1, [sp, #16]
   1dc48:	ldr	x0, [sp, #24]
   1dc4c:	cmp	x0, #0x0
   1dc50:	cset	w0, ne  // ne = any
   1dc54:	and	w0, w0, #0xff
   1dc58:	and	x0, x0, #0xff
   1dc5c:	cmp	x0, #0x0
   1dc60:	b.ne	1dc94 <udev_util_encode_string@@LIBUDEV_183+0x12464>  // b.any
   1dc64:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1dc68:	add	x1, x0, #0xcab
   1dc6c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1dc70:	add	x4, x0, #0xb38
   1dc74:	mov	w3, #0x67b                 	// #1659
   1dc78:	mov	x2, x1
   1dc7c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1dc80:	add	x1, x0, #0xcd8
   1dc84:	mov	w0, #0x0                   	// #0
   1dc88:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1dc8c:	mov	w0, #0x1                   	// #1
   1dc90:	b	1dc98 <udev_util_encode_string@@LIBUDEV_183+0x12468>
   1dc94:	mov	w0, #0x0                   	// #0
   1dc98:	cmp	w0, #0x0
   1dc9c:	b.eq	1dca8 <udev_util_encode_string@@LIBUDEV_183+0x12478>  // b.none
   1dca0:	mov	w0, #0xffffffea            	// #-22
   1dca4:	b	1dd24 <udev_util_encode_string@@LIBUDEV_183+0x124f4>
   1dca8:	ldr	x0, [sp, #16]
   1dcac:	cmp	x0, #0x0
   1dcb0:	cset	w0, ne  // ne = any
   1dcb4:	and	w0, w0, #0xff
   1dcb8:	and	x0, x0, #0xff
   1dcbc:	cmp	x0, #0x0
   1dcc0:	b.ne	1dcf4 <udev_util_encode_string@@LIBUDEV_183+0x124c4>  // b.any
   1dcc4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1dcc8:	add	x1, x0, #0xcab
   1dccc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1dcd0:	add	x4, x0, #0xb38
   1dcd4:	mov	w3, #0x67c                 	// #1660
   1dcd8:	mov	x2, x1
   1dcdc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1dce0:	add	x1, x0, #0x328
   1dce4:	mov	w0, #0x0                   	// #0
   1dce8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1dcec:	mov	w0, #0x1                   	// #1
   1dcf0:	b	1dcf8 <udev_util_encode_string@@LIBUDEV_183+0x124c8>
   1dcf4:	mov	w0, #0x0                   	// #0
   1dcf8:	cmp	w0, #0x0
   1dcfc:	b.eq	1dd08 <udev_util_encode_string@@LIBUDEV_183+0x124d8>  // b.none
   1dd00:	mov	w0, #0xffffffea            	// #-22
   1dd04:	b	1dd24 <udev_util_encode_string@@LIBUDEV_183+0x124f4>
   1dd08:	ldr	x0, [sp, #24]
   1dd0c:	bl	15060 <udev_util_encode_string@@LIBUDEV_183+0x9830>
   1dd10:	ldr	x0, [sp, #24]
   1dd14:	ldr	x0, [x0, #96]
   1dd18:	ldr	x1, [sp, #16]
   1dd1c:	bl	151e0 <udev_util_encode_string@@LIBUDEV_183+0x99b0>
   1dd20:	and	w0, w0, #0xff
   1dd24:	ldp	x29, x30, [sp], #32
   1dd28:	ret
   1dd2c:	stp	x29, x30, [sp, #-64]!
   1dd30:	mov	x29, sp
   1dd34:	str	x0, [sp, #40]
   1dd38:	str	x1, [sp, #32]
   1dd3c:	str	x2, [sp, #24]
   1dd40:	ldr	x0, [sp, #40]
   1dd44:	cmp	x0, #0x0
   1dd48:	cset	w0, ne  // ne = any
   1dd4c:	and	w0, w0, #0xff
   1dd50:	and	x0, x0, #0xff
   1dd54:	cmp	x0, #0x0
   1dd58:	b.ne	1dd8c <udev_util_encode_string@@LIBUDEV_183+0x1255c>  // b.any
   1dd5c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1dd60:	add	x1, x0, #0xcab
   1dd64:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1dd68:	add	x4, x0, #0xb50
   1dd6c:	mov	w3, #0x687                 	// #1671
   1dd70:	mov	x2, x1
   1dd74:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1dd78:	add	x1, x0, #0xcd8
   1dd7c:	mov	w0, #0x0                   	// #0
   1dd80:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1dd84:	mov	w0, #0x1                   	// #1
   1dd88:	b	1dd90 <udev_util_encode_string@@LIBUDEV_183+0x12560>
   1dd8c:	mov	w0, #0x0                   	// #0
   1dd90:	cmp	w0, #0x0
   1dd94:	b.eq	1dda0 <udev_util_encode_string@@LIBUDEV_183+0x12570>  // b.none
   1dd98:	mov	w0, #0xffffffea            	// #-22
   1dd9c:	b	1de64 <udev_util_encode_string@@LIBUDEV_183+0x12634>
   1dda0:	ldr	x0, [sp, #32]
   1dda4:	cmp	x0, #0x0
   1dda8:	cset	w0, ne  // ne = any
   1ddac:	and	w0, w0, #0xff
   1ddb0:	and	x0, x0, #0xff
   1ddb4:	cmp	x0, #0x0
   1ddb8:	b.ne	1ddec <udev_util_encode_string@@LIBUDEV_183+0x125bc>  // b.any
   1ddbc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ddc0:	add	x1, x0, #0xcab
   1ddc4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ddc8:	add	x4, x0, #0xb50
   1ddcc:	mov	w3, #0x688                 	// #1672
   1ddd0:	mov	x2, x1
   1ddd4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ddd8:	add	x1, x0, #0x18
   1dddc:	mov	w0, #0x0                   	// #0
   1dde0:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1dde4:	mov	w0, #0x1                   	// #1
   1dde8:	b	1ddf0 <udev_util_encode_string@@LIBUDEV_183+0x125c0>
   1ddec:	mov	w0, #0x0                   	// #0
   1ddf0:	cmp	w0, #0x0
   1ddf4:	b.eq	1de00 <udev_util_encode_string@@LIBUDEV_183+0x125d0>  // b.none
   1ddf8:	mov	w0, #0xffffffea            	// #-22
   1ddfc:	b	1de64 <udev_util_encode_string@@LIBUDEV_183+0x12634>
   1de00:	ldr	x0, [sp, #40]
   1de04:	bl	1d190 <udev_util_encode_string@@LIBUDEV_183+0x11960>
   1de08:	str	w0, [sp, #52]
   1de0c:	ldr	w0, [sp, #52]
   1de10:	cmp	w0, #0x0
   1de14:	b.ge	1de20 <udev_util_encode_string@@LIBUDEV_183+0x125f0>  // b.tcont
   1de18:	ldr	w0, [sp, #52]
   1de1c:	b	1de64 <udev_util_encode_string@@LIBUDEV_183+0x12634>
   1de20:	ldr	x0, [sp, #40]
   1de24:	ldr	x0, [x0, #16]
   1de28:	ldr	x1, [sp, #32]
   1de2c:	bl	15104 <udev_util_encode_string@@LIBUDEV_183+0x98d4>
   1de30:	str	x0, [sp, #56]
   1de34:	ldr	x0, [sp, #56]
   1de38:	cmp	x0, #0x0
   1de3c:	b.ne	1de48 <udev_util_encode_string@@LIBUDEV_183+0x12618>  // b.any
   1de40:	mov	w0, #0xfffffffe            	// #-2
   1de44:	b	1de64 <udev_util_encode_string@@LIBUDEV_183+0x12634>
   1de48:	ldr	x0, [sp, #24]
   1de4c:	cmp	x0, #0x0
   1de50:	b.eq	1de60 <udev_util_encode_string@@LIBUDEV_183+0x12630>  // b.none
   1de54:	ldr	x0, [sp, #24]
   1de58:	ldr	x1, [sp, #56]
   1de5c:	str	x1, [x0]
   1de60:	mov	w0, #0x0                   	// #0
   1de64:	ldp	x29, x30, [sp], #64
   1de68:	ret
   1de6c:	stp	x29, x30, [sp, #-112]!
   1de70:	mov	x29, sp
   1de74:	str	x19, [sp, #16]
   1de78:	str	x0, [sp, #56]
   1de7c:	str	x1, [sp, #48]
   1de80:	str	x2, [sp, #40]
   1de84:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1de88:	ldr	x0, [x0, #4016]
   1de8c:	ldr	x1, [x0]
   1de90:	str	x1, [sp, #104]
   1de94:	mov	x1, #0x0                   	// #0
   1de98:	str	xzr, [sp, #80]
   1de9c:	str	xzr, [sp, #88]
   1dea0:	ldr	x0, [sp, #56]
   1dea4:	cmp	x0, #0x0
   1dea8:	cset	w0, eq  // eq = none
   1deac:	and	w0, w0, #0xff
   1deb0:	and	x0, x0, #0xff
   1deb4:	cmp	x0, #0x0
   1deb8:	b.eq	1dee4 <udev_util_encode_string@@LIBUDEV_183+0x126b4>  // b.none
   1debc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1dec0:	add	x1, x0, #0xcab
   1dec4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1dec8:	add	x4, x0, #0xb70
   1decc:	mov	w3, #0x69d                 	// #1693
   1ded0:	mov	x2, x1
   1ded4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1ded8:	add	x1, x0, #0xcd8
   1dedc:	mov	w0, #0x0                   	// #0
   1dee0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1dee4:	ldr	x0, [sp, #48]
   1dee8:	cmp	x0, #0x0
   1deec:	cset	w0, eq  // eq = none
   1def0:	and	w0, w0, #0xff
   1def4:	and	x0, x0, #0xff
   1def8:	cmp	x0, #0x0
   1defc:	b.eq	1df28 <udev_util_encode_string@@LIBUDEV_183+0x126f8>  // b.none
   1df00:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1df04:	add	x1, x0, #0xcab
   1df08:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1df0c:	add	x4, x0, #0xb70
   1df10:	mov	w3, #0x69e                 	// #1694
   1df14:	mov	x2, x1
   1df18:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1df1c:	add	x1, x0, #0xcf0
   1df20:	mov	w0, #0x0                   	// #0
   1df24:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1df28:	ldr	x0, [sp, #56]
   1df2c:	add	x2, x0, #0x40
   1df30:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1df34:	ldr	x1, [x0, #4064]
   1df38:	mov	x0, x2
   1df3c:	bl	286f0 <udev_util_encode_string@@LIBUDEV_183+0x1cec0>
   1df40:	str	w0, [sp, #76]
   1df44:	ldr	w0, [sp, #76]
   1df48:	cmp	w0, #0x0
   1df4c:	b.ge	1df58 <udev_util_encode_string@@LIBUDEV_183+0x12728>  // b.tcont
   1df50:	ldr	w19, [sp, #76]
   1df54:	b	1dfdc <udev_util_encode_string@@LIBUDEV_183+0x127ac>
   1df58:	ldr	x0, [sp, #56]
   1df5c:	ldr	x0, [x0, #64]
   1df60:	add	x1, sp, #0x50
   1df64:	mov	x2, x1
   1df68:	ldr	x1, [sp, #48]
   1df6c:	bl	29c2c <udev_util_encode_string@@LIBUDEV_183+0x1e3fc>
   1df70:	str	x0, [sp, #88]
   1df74:	ldr	x0, [sp, #80]
   1df78:	cmp	x0, #0x0
   1df7c:	b.ne	1dfa0 <udev_util_encode_string@@LIBUDEV_183+0x12770>  // b.any
   1df80:	ldr	x0, [sp, #48]
   1df84:	bl	5370 <strdup@plt>
   1df88:	str	x0, [sp, #80]
   1df8c:	ldr	x0, [sp, #80]
   1df90:	cmp	x0, #0x0
   1df94:	b.ne	1dfa0 <udev_util_encode_string@@LIBUDEV_183+0x12770>  // b.any
   1df98:	mov	w19, #0xfffffff4            	// #-12
   1df9c:	b	1dfdc <udev_util_encode_string@@LIBUDEV_183+0x127ac>
   1dfa0:	ldr	x0, [sp, #56]
   1dfa4:	ldr	x0, [x0, #64]
   1dfa8:	ldr	x1, [sp, #80]
   1dfac:	ldr	x2, [sp, #40]
   1dfb0:	bl	2969c <udev_util_encode_string@@LIBUDEV_183+0x1de6c>
   1dfb4:	str	w0, [sp, #76]
   1dfb8:	ldr	w0, [sp, #76]
   1dfbc:	cmp	w0, #0x0
   1dfc0:	b.ge	1dfcc <udev_util_encode_string@@LIBUDEV_183+0x1279c>  // b.tcont
   1dfc4:	ldr	w19, [sp, #76]
   1dfc8:	b	1dfdc <udev_util_encode_string@@LIBUDEV_183+0x127ac>
   1dfcc:	ldr	x0, [sp, #80]
   1dfd0:	str	x0, [sp, #96]
   1dfd4:	str	xzr, [sp, #80]
   1dfd8:	mov	w19, #0x0                   	// #0
   1dfdc:	add	x0, sp, #0x58
   1dfe0:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1dfe4:	add	x0, sp, #0x50
   1dfe8:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1dfec:	mov	w1, w19
   1dff0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1dff4:	ldr	x0, [x0, #4016]
   1dff8:	ldr	x2, [sp, #104]
   1dffc:	ldr	x0, [x0]
   1e000:	eor	x0, x2, x0
   1e004:	cmp	x0, #0x0
   1e008:	b.eq	1e010 <udev_util_encode_string@@LIBUDEV_183+0x127e0>  // b.none
   1e00c:	bl	5390 <__stack_chk_fail@plt>
   1e010:	mov	w0, w1
   1e014:	ldr	x19, [sp, #16]
   1e018:	ldp	x29, x30, [sp], #112
   1e01c:	ret
   1e020:	stp	x29, x30, [sp, #-80]!
   1e024:	mov	x29, sp
   1e028:	str	x0, [sp, #40]
   1e02c:	str	x1, [sp, #32]
   1e030:	str	x2, [sp, #24]
   1e034:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e038:	ldr	x0, [x0, #4016]
   1e03c:	ldr	x1, [x0]
   1e040:	str	x1, [sp, #72]
   1e044:	mov	x1, #0x0                   	// #0
   1e048:	str	xzr, [sp, #56]
   1e04c:	ldr	x0, [sp, #40]
   1e050:	cmp	x0, #0x0
   1e054:	cset	w0, eq  // eq = none
   1e058:	and	w0, w0, #0xff
   1e05c:	and	x0, x0, #0xff
   1e060:	cmp	x0, #0x0
   1e064:	b.eq	1e090 <udev_util_encode_string@@LIBUDEV_183+0x12860>  // b.none
   1e068:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e06c:	add	x1, x0, #0xcab
   1e070:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e074:	add	x4, x0, #0xb90
   1e078:	mov	w3, #0x6b6                 	// #1718
   1e07c:	mov	x2, x1
   1e080:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e084:	add	x1, x0, #0xcd8
   1e088:	mov	w0, #0x0                   	// #0
   1e08c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e090:	ldr	x0, [sp, #32]
   1e094:	cmp	x0, #0x0
   1e098:	cset	w0, eq  // eq = none
   1e09c:	and	w0, w0, #0xff
   1e0a0:	and	x0, x0, #0xff
   1e0a4:	cmp	x0, #0x0
   1e0a8:	b.eq	1e0d4 <udev_util_encode_string@@LIBUDEV_183+0x128a4>  // b.none
   1e0ac:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e0b0:	add	x1, x0, #0xcab
   1e0b4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e0b8:	add	x4, x0, #0xb90
   1e0bc:	mov	w3, #0x6b7                 	// #1719
   1e0c0:	mov	x2, x1
   1e0c4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e0c8:	add	x1, x0, #0xcf0
   1e0cc:	mov	w0, #0x0                   	// #0
   1e0d0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e0d4:	ldr	x0, [sp, #40]
   1e0d8:	ldr	x0, [x0, #64]
   1e0dc:	add	x1, sp, #0x38
   1e0e0:	mov	x2, x1
   1e0e4:	ldr	x1, [sp, #32]
   1e0e8:	bl	29aa4 <udev_util_encode_string@@LIBUDEV_183+0x1e274>
   1e0ec:	str	x0, [sp, #64]
   1e0f0:	ldr	x0, [sp, #56]
   1e0f4:	cmp	x0, #0x0
   1e0f8:	b.ne	1e104 <udev_util_encode_string@@LIBUDEV_183+0x128d4>  // b.any
   1e0fc:	mov	w0, #0xfffffffe            	// #-2
   1e100:	b	1e120 <udev_util_encode_string@@LIBUDEV_183+0x128f0>
   1e104:	ldr	x0, [sp, #24]
   1e108:	cmp	x0, #0x0
   1e10c:	b.eq	1e11c <udev_util_encode_string@@LIBUDEV_183+0x128ec>  // b.none
   1e110:	ldr	x0, [sp, #24]
   1e114:	ldr	x1, [sp, #64]
   1e118:	str	x1, [x0]
   1e11c:	mov	w0, #0x0                   	// #0
   1e120:	mov	w1, w0
   1e124:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e128:	ldr	x0, [x0, #4016]
   1e12c:	ldr	x2, [sp, #72]
   1e130:	ldr	x0, [x0]
   1e134:	eor	x0, x2, x0
   1e138:	cmp	x0, #0x0
   1e13c:	b.eq	1e144 <udev_util_encode_string@@LIBUDEV_183+0x12914>  // b.none
   1e140:	bl	5390 <__stack_chk_fail@plt>
   1e144:	mov	w0, w1
   1e148:	ldp	x29, x30, [sp], #80
   1e14c:	ret
   1e150:	stp	x29, x30, [sp, #-352]!
   1e154:	mov	x29, sp
   1e158:	str	x19, [sp, #16]
   1e15c:	str	x0, [x29, #56]
   1e160:	str	x1, [x29, #48]
   1e164:	str	x2, [x29, #40]
   1e168:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e16c:	ldr	x0, [x0, #4016]
   1e170:	ldr	x1, [x0]
   1e174:	str	x1, [x29, #344]
   1e178:	mov	x1, #0x0                   	// #0
   1e17c:	str	xzr, [x29, #80]
   1e180:	str	xzr, [x29, #96]
   1e184:	ldr	x0, [x29, #56]
   1e188:	cmp	x0, #0x0
   1e18c:	cset	w0, ne  // ne = any
   1e190:	and	w0, w0, #0xff
   1e194:	and	x0, x0, #0xff
   1e198:	cmp	x0, #0x0
   1e19c:	b.ne	1e1d0 <udev_util_encode_string@@LIBUDEV_183+0x129a0>  // b.any
   1e1a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e1a4:	add	x1, x0, #0xcab
   1e1a8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e1ac:	add	x4, x0, #0xbb0
   1e1b0:	mov	w3, #0x6ca                 	// #1738
   1e1b4:	mov	x2, x1
   1e1b8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e1bc:	add	x1, x0, #0xcd8
   1e1c0:	mov	w0, #0x0                   	// #0
   1e1c4:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1e1c8:	mov	w0, #0x1                   	// #1
   1e1cc:	b	1e1d4 <udev_util_encode_string@@LIBUDEV_183+0x129a4>
   1e1d0:	mov	w0, #0x0                   	// #0
   1e1d4:	cmp	w0, #0x0
   1e1d8:	b.eq	1e1e4 <udev_util_encode_string@@LIBUDEV_183+0x129b4>  // b.none
   1e1dc:	mov	w19, #0xffffffea            	// #-22
   1e1e0:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e1e4:	ldr	x0, [x29, #48]
   1e1e8:	cmp	x0, #0x0
   1e1ec:	cset	w0, ne  // ne = any
   1e1f0:	and	w0, w0, #0xff
   1e1f4:	and	x0, x0, #0xff
   1e1f8:	cmp	x0, #0x0
   1e1fc:	b.ne	1e230 <udev_util_encode_string@@LIBUDEV_183+0x12a00>  // b.any
   1e200:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e204:	add	x1, x0, #0xcab
   1e208:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e20c:	add	x4, x0, #0xbb0
   1e210:	mov	w3, #0x6cb                 	// #1739
   1e214:	mov	x2, x1
   1e218:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e21c:	add	x1, x0, #0x4e8
   1e220:	mov	w0, #0x0                   	// #0
   1e224:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1e228:	mov	w0, #0x1                   	// #1
   1e22c:	b	1e234 <udev_util_encode_string@@LIBUDEV_183+0x12a04>
   1e230:	mov	w0, #0x0                   	// #0
   1e234:	cmp	w0, #0x0
   1e238:	b.eq	1e244 <udev_util_encode_string@@LIBUDEV_183+0x12a14>  // b.none
   1e23c:	mov	w19, #0xffffffea            	// #-22
   1e240:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e244:	add	x0, x29, #0x60
   1e248:	mov	x2, x0
   1e24c:	ldr	x1, [x29, #48]
   1e250:	ldr	x0, [x29, #56]
   1e254:	bl	1e020 <udev_util_encode_string@@LIBUDEV_183+0x127f0>
   1e258:	str	w0, [x29, #76]
   1e25c:	ldr	w0, [x29, #76]
   1e260:	cmn	w0, #0x2
   1e264:	b.eq	1e2b0 <udev_util_encode_string@@LIBUDEV_183+0x12a80>  // b.none
   1e268:	ldr	w0, [x29, #76]
   1e26c:	cmp	w0, #0x0
   1e270:	b.ge	1e27c <udev_util_encode_string@@LIBUDEV_183+0x12a4c>  // b.tcont
   1e274:	ldr	w19, [x29, #76]
   1e278:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e27c:	ldr	x0, [x29, #96]
   1e280:	cmp	x0, #0x0
   1e284:	b.ne	1e290 <udev_util_encode_string@@LIBUDEV_183+0x12a60>  // b.any
   1e288:	mov	w19, #0xfffffffe            	// #-2
   1e28c:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e290:	ldr	x0, [x29, #40]
   1e294:	cmp	x0, #0x0
   1e298:	b.eq	1e2a8 <udev_util_encode_string@@LIBUDEV_183+0x12a78>  // b.none
   1e29c:	ldr	x1, [x29, #96]
   1e2a0:	ldr	x0, [x29, #40]
   1e2a4:	str	x1, [x0]
   1e2a8:	mov	w19, #0x0                   	// #0
   1e2ac:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e2b0:	add	x0, x29, #0x58
   1e2b4:	mov	x1, x0
   1e2b8:	ldr	x0, [x29, #56]
   1e2bc:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   1e2c0:	str	w0, [x29, #76]
   1e2c4:	ldr	w0, [x29, #76]
   1e2c8:	cmp	w0, #0x0
   1e2cc:	b.ge	1e2d8 <udev_util_encode_string@@LIBUDEV_183+0x12aa8>  // b.tcont
   1e2d0:	ldr	w19, [x29, #76]
   1e2d4:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e2d8:	ldr	x0, [x29, #48]
   1e2dc:	str	x0, [x29, #112]
   1e2e0:	ldr	x0, [x29, #88]
   1e2e4:	str	x0, [x29, #136]
   1e2e8:	b	1e2f8 <udev_util_encode_string@@LIBUDEV_183+0x12ac8>
   1e2ec:	ldr	x0, [x29, #112]
   1e2f0:	add	x0, x0, #0x1
   1e2f4:	str	x0, [x29, #112]
   1e2f8:	ldr	x0, [x29, #112]
   1e2fc:	ldrb	w0, [x0]
   1e300:	cmp	w0, #0x2f
   1e304:	b.ne	1e31c <udev_util_encode_string@@LIBUDEV_183+0x12aec>  // b.any
   1e308:	ldr	x0, [x29, #112]
   1e30c:	add	x0, x0, #0x1
   1e310:	ldrb	w0, [x0]
   1e314:	cmp	w0, #0x2f
   1e318:	b.eq	1e2ec <udev_util_encode_string@@LIBUDEV_183+0x12abc>  // b.none
   1e31c:	ldr	x0, [x29, #136]
   1e320:	bl	15238 <udev_util_encode_string@@LIBUDEV_183+0x9a08>
   1e324:	and	w0, w0, #0xff
   1e328:	cmp	w0, #0x0
   1e32c:	b.eq	1e33c <udev_util_encode_string@@LIBUDEV_183+0x12b0c>  // b.none
   1e330:	ldr	x0, [x29, #112]
   1e334:	str	x0, [x29, #120]
   1e338:	b	1e490 <udev_util_encode_string@@LIBUDEV_183+0x12c60>
   1e33c:	ldr	x0, [x29, #136]
   1e340:	bl	5040 <strlen@plt>
   1e344:	mov	x19, x0
   1e348:	ldr	x0, [x29, #112]
   1e34c:	bl	5040 <strlen@plt>
   1e350:	add	x0, x19, x0
   1e354:	add	x0, x0, #0x2
   1e358:	str	x0, [x29, #144]
   1e35c:	ldr	x0, [x29, #144]
   1e360:	str	x0, [x29, #152]
   1e364:	ldr	x1, [x29, #152]
   1e368:	mov	x0, #0x1                   	// #1
   1e36c:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   1e370:	and	w0, w0, #0xff
   1e374:	and	x0, x0, #0xff
   1e378:	cmp	x0, #0x0
   1e37c:	b.eq	1e3a8 <udev_util_encode_string@@LIBUDEV_183+0x12b78>  // b.none
   1e380:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e384:	add	x1, x0, #0xcab
   1e388:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e38c:	add	x4, x0, #0xbb0
   1e390:	mov	w3, #0x6e1                 	// #1761
   1e394:	mov	x2, x1
   1e398:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e39c:	add	x1, x0, #0xe18
   1e3a0:	mov	w0, #0x0                   	// #0
   1e3a4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e3a8:	ldr	x0, [x29, #152]
   1e3ac:	cmp	x0, #0x400, lsl #12
   1e3b0:	cset	w0, hi  // hi = pmore
   1e3b4:	and	w0, w0, #0xff
   1e3b8:	and	x0, x0, #0xff
   1e3bc:	cmp	x0, #0x0
   1e3c0:	b.eq	1e3ec <udev_util_encode_string@@LIBUDEV_183+0x12bbc>  // b.none
   1e3c4:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e3c8:	add	x1, x0, #0xcab
   1e3cc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e3d0:	add	x4, x0, #0xbb0
   1e3d4:	mov	w3, #0x6e1                 	// #1761
   1e3d8:	mov	x2, x1
   1e3dc:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e3e0:	add	x1, x0, #0xe48
   1e3e4:	mov	w0, #0x0                   	// #0
   1e3e8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e3ec:	ldr	x0, [x29, #152]
   1e3f0:	add	x0, x0, #0xf
   1e3f4:	lsr	x0, x0, #4
   1e3f8:	lsl	x0, x0, #4
   1e3fc:	sub	sp, sp, x0
   1e400:	mov	x0, sp
   1e404:	add	x0, x0, #0xf
   1e408:	lsr	x0, x0, #4
   1e40c:	lsl	x0, x0, #4
   1e410:	str	x0, [x29, #160]
   1e414:	ldr	x1, [x29, #136]
   1e418:	ldr	x0, [x29, #160]
   1e41c:	bl	51b0 <stpcpy@plt>
   1e420:	str	x0, [x29, #128]
   1e424:	b	1e434 <udev_util_encode_string@@LIBUDEV_183+0x12c04>
   1e428:	ldr	x0, [x29, #128]
   1e42c:	sub	x0, x0, #0x1
   1e430:	str	x0, [x29, #128]
   1e434:	ldr	x1, [x29, #128]
   1e438:	ldr	x0, [x29, #160]
   1e43c:	cmp	x1, x0
   1e440:	b.ls	1e458 <udev_util_encode_string@@LIBUDEV_183+0x12c28>  // b.plast
   1e444:	ldr	x0, [x29, #128]
   1e448:	sub	x0, x0, #0x1
   1e44c:	ldrb	w0, [x0]
   1e450:	cmp	w0, #0x2f
   1e454:	b.eq	1e428 <udev_util_encode_string@@LIBUDEV_183+0x12bf8>  // b.none
   1e458:	ldr	x0, [x29, #112]
   1e45c:	ldrb	w0, [x0]
   1e460:	cmp	w0, #0x2f
   1e464:	b.eq	1e47c <udev_util_encode_string@@LIBUDEV_183+0x12c4c>  // b.none
   1e468:	ldr	x0, [x29, #128]
   1e46c:	add	x1, x0, #0x1
   1e470:	str	x1, [x29, #128]
   1e474:	mov	w1, #0x2f                  	// #47
   1e478:	strb	w1, [x0]
   1e47c:	ldr	x1, [x29, #112]
   1e480:	ldr	x0, [x29, #128]
   1e484:	bl	5630 <strcpy@plt>
   1e488:	ldr	x0, [x29, #160]
   1e48c:	str	x0, [x29, #120]
   1e490:	ldr	x0, [x29, #120]
   1e494:	str	x0, [x29, #168]
   1e498:	add	x0, x29, #0xd8
   1e49c:	mov	x1, x0
   1e4a0:	ldr	x0, [x29, #168]
   1e4a4:	bl	36500 <udev_util_encode_string@@LIBUDEV_183+0x2acd0>
   1e4a8:	str	w0, [x29, #76]
   1e4ac:	ldr	w0, [x29, #76]
   1e4b0:	cmp	w0, #0x0
   1e4b4:	b.ge	1e4e8 <udev_util_encode_string@@LIBUDEV_183+0x12cb8>  // b.tcont
   1e4b8:	mov	x2, #0x0                   	// #0
   1e4bc:	ldr	x1, [x29, #48]
   1e4c0:	ldr	x0, [x29, #56]
   1e4c4:	bl	1de6c <udev_util_encode_string@@LIBUDEV_183+0x1263c>
   1e4c8:	str	w0, [x29, #76]
   1e4cc:	ldr	w0, [x29, #76]
   1e4d0:	cmp	w0, #0x0
   1e4d4:	b.ge	1e4e0 <udev_util_encode_string@@LIBUDEV_183+0x12cb0>  // b.tcont
   1e4d8:	ldr	w19, [x29, #76]
   1e4dc:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e4e0:	mov	w19, #0xfffffffe            	// #-2
   1e4e4:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e4e8:	ldr	w0, [x29, #232]
   1e4ec:	and	w0, w0, #0xf000
   1e4f0:	cmp	w0, #0xa, lsl #12
   1e4f4:	b.ne	1e554 <udev_util_encode_string@@LIBUDEV_183+0x12d24>  // b.any
   1e4f8:	add	x0, x29, #0x168
   1e4fc:	sub	x0, x0, #0xb0
   1e500:	adrp	x1, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   1e504:	add	x1, x1, #0x28
   1e508:	ld1	{v0.16b, v1.16b}, [x1]
   1e50c:	st1	{v0.16b, v1.16b}, [x0]
   1e510:	add	x0, x29, #0xb8
   1e514:	ldr	x1, [x29, #48]
   1e518:	bl	34d68 <udev_util_encode_string@@LIBUDEV_183+0x29538>
   1e51c:	cmp	x0, #0x0
   1e520:	b.eq	1e54c <udev_util_encode_string@@LIBUDEV_183+0x12d1c>  // b.none
   1e524:	add	x0, x29, #0x50
   1e528:	mov	x1, x0
   1e52c:	ldr	x0, [x29, #168]
   1e530:	bl	257dc <udev_util_encode_string@@LIBUDEV_183+0x19fac>
   1e534:	str	w0, [x29, #76]
   1e538:	ldr	w0, [x29, #76]
   1e53c:	cmp	w0, #0x0
   1e540:	b.ge	1e5f4 <udev_util_encode_string@@LIBUDEV_183+0x12dc4>  // b.tcont
   1e544:	ldr	w19, [x29, #76]
   1e548:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e54c:	mov	w19, #0xffffffea            	// #-22
   1e550:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e554:	ldr	w0, [x29, #232]
   1e558:	and	w0, w0, #0xf000
   1e55c:	cmp	w0, #0x4, lsl #12
   1e560:	b.ne	1e56c <udev_util_encode_string@@LIBUDEV_183+0x12d3c>  // b.any
   1e564:	mov	w19, #0xffffffea            	// #-22
   1e568:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e56c:	ldr	w0, [x29, #232]
   1e570:	and	w0, w0, #0x100
   1e574:	cmp	w0, #0x0
   1e578:	b.ne	1e584 <udev_util_encode_string@@LIBUDEV_183+0x12d54>  // b.any
   1e57c:	mov	w19, #0xffffffff            	// #-1
   1e580:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e584:	add	x1, x29, #0x68
   1e588:	add	x0, x29, #0x50
   1e58c:	mov	x2, x1
   1e590:	mov	x1, x0
   1e594:	ldr	x0, [x29, #168]
   1e598:	bl	242c8 <udev_util_encode_string@@LIBUDEV_183+0x18a98>
   1e59c:	str	w0, [x29, #76]
   1e5a0:	ldr	w0, [x29, #76]
   1e5a4:	cmp	w0, #0x0
   1e5a8:	b.ge	1e5c4 <udev_util_encode_string@@LIBUDEV_183+0x12d94>  // b.tcont
   1e5ac:	ldr	w19, [x29, #76]
   1e5b0:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e5b4:	ldr	x1, [x29, #80]
   1e5b8:	ldr	x0, [x29, #104]
   1e5bc:	add	x0, x1, x0
   1e5c0:	strb	wzr, [x0]
   1e5c4:	ldr	x0, [x29, #104]
   1e5c8:	cmp	x0, #0x0
   1e5cc:	b.eq	1e5f4 <udev_util_encode_string@@LIBUDEV_183+0x12dc4>  // b.none
   1e5d0:	ldr	x1, [x29, #80]
   1e5d4:	ldr	x0, [x29, #104]
   1e5d8:	sub	x0, x0, #0x1
   1e5dc:	str	x0, [x29, #104]
   1e5e0:	ldr	x0, [x29, #104]
   1e5e4:	add	x0, x1, x0
   1e5e8:	ldrb	w0, [x0]
   1e5ec:	cmp	w0, #0xa
   1e5f0:	b.eq	1e5b4 <udev_util_encode_string@@LIBUDEV_183+0x12d84>  // b.none
   1e5f4:	ldr	x0, [x29, #80]
   1e5f8:	mov	x2, x0
   1e5fc:	ldr	x1, [x29, #48]
   1e600:	ldr	x0, [x29, #56]
   1e604:	bl	1de6c <udev_util_encode_string@@LIBUDEV_183+0x1263c>
   1e608:	str	w0, [x29, #76]
   1e60c:	ldr	w0, [x29, #76]
   1e610:	cmp	w0, #0x0
   1e614:	b.ge	1e620 <udev_util_encode_string@@LIBUDEV_183+0x12df0>  // b.tcont
   1e618:	ldr	w19, [x29, #76]
   1e61c:	b	1e63c <udev_util_encode_string@@LIBUDEV_183+0x12e0c>
   1e620:	ldr	x0, [x29, #80]
   1e624:	str	x0, [x29, #176]
   1e628:	str	xzr, [x29, #80]
   1e62c:	ldr	x1, [x29, #176]
   1e630:	ldr	x0, [x29, #40]
   1e634:	str	x1, [x0]
   1e638:	mov	w19, #0x0                   	// #0
   1e63c:	add	x0, x29, #0x50
   1e640:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1e644:	mov	w1, w19
   1e648:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e64c:	ldr	x0, [x0, #4016]
   1e650:	ldr	x2, [x29, #344]
   1e654:	ldr	x0, [x0]
   1e658:	eor	x0, x2, x0
   1e65c:	cmp	x0, #0x0
   1e660:	b.eq	1e668 <udev_util_encode_string@@LIBUDEV_183+0x12e38>  // b.none
   1e664:	bl	5390 <__stack_chk_fail@plt>
   1e668:	mov	w0, w1
   1e66c:	mov	sp, x29
   1e670:	ldr	x19, [sp, #16]
   1e674:	ldp	x29, x30, [sp], #352
   1e678:	ret
   1e67c:	stp	x29, x30, [sp, #-48]!
   1e680:	mov	x29, sp
   1e684:	str	x0, [sp, #24]
   1e688:	str	x1, [sp, #16]
   1e68c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e690:	ldr	x0, [x0, #4016]
   1e694:	ldr	x1, [x0]
   1e698:	str	x1, [sp, #40]
   1e69c:	mov	x1, #0x0                   	// #0
   1e6a0:	str	xzr, [sp, #32]
   1e6a4:	ldr	x0, [sp, #24]
   1e6a8:	cmp	x0, #0x0
   1e6ac:	cset	w0, eq  // eq = none
   1e6b0:	and	w0, w0, #0xff
   1e6b4:	and	x0, x0, #0xff
   1e6b8:	cmp	x0, #0x0
   1e6bc:	b.eq	1e6e8 <udev_util_encode_string@@LIBUDEV_183+0x12eb8>  // b.none
   1e6c0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e6c4:	add	x1, x0, #0xcab
   1e6c8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e6cc:	add	x4, x0, #0xbd0
   1e6d0:	mov	w3, #0x712                 	// #1810
   1e6d4:	mov	x2, x1
   1e6d8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e6dc:	add	x1, x0, #0xcd8
   1e6e0:	mov	w0, #0x0                   	// #0
   1e6e4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e6e8:	ldr	x0, [sp, #16]
   1e6ec:	cmp	x0, #0x0
   1e6f0:	cset	w0, eq  // eq = none
   1e6f4:	and	w0, w0, #0xff
   1e6f8:	and	x0, x0, #0xff
   1e6fc:	cmp	x0, #0x0
   1e700:	b.eq	1e72c <udev_util_encode_string@@LIBUDEV_183+0x12efc>  // b.none
   1e704:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e708:	add	x1, x0, #0xcab
   1e70c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e710:	add	x4, x0, #0xbd0
   1e714:	mov	w3, #0x713                 	// #1811
   1e718:	mov	x2, x1
   1e71c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e720:	add	x1, x0, #0xcf0
   1e724:	mov	w0, #0x0                   	// #0
   1e728:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e72c:	ldr	x0, [sp, #24]
   1e730:	ldr	x0, [x0, #64]
   1e734:	add	x1, sp, #0x20
   1e738:	mov	x2, x1
   1e73c:	ldr	x1, [sp, #16]
   1e740:	bl	29c2c <udev_util_encode_string@@LIBUDEV_183+0x1e3fc>
   1e744:	bl	54b0 <free@plt>
   1e748:	add	x0, sp, #0x20
   1e74c:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1e750:	nop
   1e754:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e758:	ldr	x0, [x0, #4016]
   1e75c:	ldr	x1, [sp, #40]
   1e760:	ldr	x0, [x0]
   1e764:	eor	x0, x1, x0
   1e768:	cmp	x0, #0x0
   1e76c:	b.eq	1e774 <udev_util_encode_string@@LIBUDEV_183+0x12f44>  // b.none
   1e770:	bl	5390 <__stack_chk_fail@plt>
   1e774:	ldp	x29, x30, [sp], #48
   1e778:	ret
   1e77c:	stp	x29, x30, [sp, #-192]!
   1e780:	mov	x29, sp
   1e784:	str	x19, [sp, #16]
   1e788:	str	x0, [x29, #56]
   1e78c:	str	x1, [x29, #48]
   1e790:	str	x2, [x29, #40]
   1e794:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1e798:	ldr	x0, [x0, #4016]
   1e79c:	ldr	x1, [x0]
   1e7a0:	str	x1, [x29, #184]
   1e7a4:	mov	x1, #0x0                   	// #0
   1e7a8:	str	xzr, [x29, #80]
   1e7ac:	ldr	x0, [x29, #56]
   1e7b0:	cmp	x0, #0x0
   1e7b4:	cset	w0, ne  // ne = any
   1e7b8:	and	w0, w0, #0xff
   1e7bc:	and	x0, x0, #0xff
   1e7c0:	cmp	x0, #0x0
   1e7c4:	b.ne	1e7f8 <udev_util_encode_string@@LIBUDEV_183+0x12fc8>  // b.any
   1e7c8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e7cc:	add	x1, x0, #0xcab
   1e7d0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e7d4:	add	x4, x0, #0xbf0
   1e7d8:	mov	w3, #0x720                 	// #1824
   1e7dc:	mov	x2, x1
   1e7e0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e7e4:	add	x1, x0, #0xcd8
   1e7e8:	mov	w0, #0x0                   	// #0
   1e7ec:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1e7f0:	mov	w0, #0x1                   	// #1
   1e7f4:	b	1e7fc <udev_util_encode_string@@LIBUDEV_183+0x12fcc>
   1e7f8:	mov	w0, #0x0                   	// #0
   1e7fc:	cmp	w0, #0x0
   1e800:	b.eq	1e80c <udev_util_encode_string@@LIBUDEV_183+0x12fdc>  // b.none
   1e804:	mov	w19, #0xffffffea            	// #-22
   1e808:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1e80c:	ldr	x0, [x29, #48]
   1e810:	cmp	x0, #0x0
   1e814:	cset	w0, ne  // ne = any
   1e818:	and	w0, w0, #0xff
   1e81c:	and	x0, x0, #0xff
   1e820:	cmp	x0, #0x0
   1e824:	b.ne	1e858 <udev_util_encode_string@@LIBUDEV_183+0x13028>  // b.any
   1e828:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e82c:	add	x1, x0, #0xcab
   1e830:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e834:	add	x4, x0, #0xbf0
   1e838:	mov	w3, #0x721                 	// #1825
   1e83c:	mov	x2, x1
   1e840:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e844:	add	x1, x0, #0x4e8
   1e848:	mov	w0, #0x0                   	// #0
   1e84c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1e850:	mov	w0, #0x1                   	// #1
   1e854:	b	1e85c <udev_util_encode_string@@LIBUDEV_183+0x1302c>
   1e858:	mov	w0, #0x0                   	// #0
   1e85c:	cmp	w0, #0x0
   1e860:	b.eq	1e86c <udev_util_encode_string@@LIBUDEV_183+0x1303c>  // b.none
   1e864:	mov	w19, #0xffffffea            	// #-22
   1e868:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1e86c:	ldr	x0, [x29, #40]
   1e870:	cmp	x0, #0x0
   1e874:	b.ne	1e88c <udev_util_encode_string@@LIBUDEV_183+0x1305c>  // b.any
   1e878:	ldr	x1, [x29, #48]
   1e87c:	ldr	x0, [x29, #56]
   1e880:	bl	1e67c <udev_util_encode_string@@LIBUDEV_183+0x12e4c>
   1e884:	mov	w19, #0x0                   	// #0
   1e888:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1e88c:	add	x0, x29, #0x58
   1e890:	mov	x1, x0
   1e894:	ldr	x0, [x29, #56]
   1e898:	bl	19398 <udev_util_encode_string@@LIBUDEV_183+0xdb68>
   1e89c:	str	w0, [x29, #76]
   1e8a0:	ldr	w0, [x29, #76]
   1e8a4:	cmp	w0, #0x0
   1e8a8:	b.ge	1e8b4 <udev_util_encode_string@@LIBUDEV_183+0x13084>  // b.tcont
   1e8ac:	ldr	w19, [x29, #76]
   1e8b0:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1e8b4:	ldr	x0, [x29, #48]
   1e8b8:	str	x0, [x29, #104]
   1e8bc:	ldr	x0, [x29, #88]
   1e8c0:	str	x0, [x29, #128]
   1e8c4:	b	1e8d4 <udev_util_encode_string@@LIBUDEV_183+0x130a4>
   1e8c8:	ldr	x0, [x29, #104]
   1e8cc:	add	x0, x0, #0x1
   1e8d0:	str	x0, [x29, #104]
   1e8d4:	ldr	x0, [x29, #104]
   1e8d8:	ldrb	w0, [x0]
   1e8dc:	cmp	w0, #0x2f
   1e8e0:	b.ne	1e8f8 <udev_util_encode_string@@LIBUDEV_183+0x130c8>  // b.any
   1e8e4:	ldr	x0, [x29, #104]
   1e8e8:	add	x0, x0, #0x1
   1e8ec:	ldrb	w0, [x0]
   1e8f0:	cmp	w0, #0x2f
   1e8f4:	b.eq	1e8c8 <udev_util_encode_string@@LIBUDEV_183+0x13098>  // b.none
   1e8f8:	ldr	x0, [x29, #128]
   1e8fc:	bl	15238 <udev_util_encode_string@@LIBUDEV_183+0x9a08>
   1e900:	and	w0, w0, #0xff
   1e904:	cmp	w0, #0x0
   1e908:	b.eq	1e918 <udev_util_encode_string@@LIBUDEV_183+0x130e8>  // b.none
   1e90c:	ldr	x0, [x29, #104]
   1e910:	str	x0, [x29, #112]
   1e914:	b	1ea6c <udev_util_encode_string@@LIBUDEV_183+0x1323c>
   1e918:	ldr	x0, [x29, #128]
   1e91c:	bl	5040 <strlen@plt>
   1e920:	mov	x19, x0
   1e924:	ldr	x0, [x29, #104]
   1e928:	bl	5040 <strlen@plt>
   1e92c:	add	x0, x19, x0
   1e930:	add	x0, x0, #0x2
   1e934:	str	x0, [x29, #136]
   1e938:	ldr	x0, [x29, #136]
   1e93c:	str	x0, [x29, #144]
   1e940:	ldr	x1, [x29, #144]
   1e944:	mov	x0, #0x1                   	// #1
   1e948:	bl	14f90 <udev_util_encode_string@@LIBUDEV_183+0x9760>
   1e94c:	and	w0, w0, #0xff
   1e950:	and	x0, x0, #0xff
   1e954:	cmp	x0, #0x0
   1e958:	b.eq	1e984 <udev_util_encode_string@@LIBUDEV_183+0x13154>  // b.none
   1e95c:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e960:	add	x1, x0, #0xcab
   1e964:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e968:	add	x4, x0, #0xbf0
   1e96c:	mov	w3, #0x72c                 	// #1836
   1e970:	mov	x2, x1
   1e974:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e978:	add	x1, x0, #0xe18
   1e97c:	mov	w0, #0x0                   	// #0
   1e980:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e984:	ldr	x0, [x29, #144]
   1e988:	cmp	x0, #0x400, lsl #12
   1e98c:	cset	w0, hi  // hi = pmore
   1e990:	and	w0, w0, #0xff
   1e994:	and	x0, x0, #0xff
   1e998:	cmp	x0, #0x0
   1e99c:	b.eq	1e9c8 <udev_util_encode_string@@LIBUDEV_183+0x13198>  // b.none
   1e9a0:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e9a4:	add	x1, x0, #0xcab
   1e9a8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1e9ac:	add	x4, x0, #0xbf0
   1e9b0:	mov	w3, #0x72c                 	// #1836
   1e9b4:	mov	x2, x1
   1e9b8:	adrp	x0, 38000 <udev_util_encode_string@@LIBUDEV_183+0x2c7d0>
   1e9bc:	add	x1, x0, #0xe48
   1e9c0:	mov	w0, #0x0                   	// #0
   1e9c4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1e9c8:	ldr	x0, [x29, #144]
   1e9cc:	add	x0, x0, #0xf
   1e9d0:	lsr	x0, x0, #4
   1e9d4:	lsl	x0, x0, #4
   1e9d8:	sub	sp, sp, x0
   1e9dc:	mov	x0, sp
   1e9e0:	add	x0, x0, #0xf
   1e9e4:	lsr	x0, x0, #4
   1e9e8:	lsl	x0, x0, #4
   1e9ec:	str	x0, [x29, #152]
   1e9f0:	ldr	x1, [x29, #128]
   1e9f4:	ldr	x0, [x29, #152]
   1e9f8:	bl	51b0 <stpcpy@plt>
   1e9fc:	str	x0, [x29, #120]
   1ea00:	b	1ea10 <udev_util_encode_string@@LIBUDEV_183+0x131e0>
   1ea04:	ldr	x0, [x29, #120]
   1ea08:	sub	x0, x0, #0x1
   1ea0c:	str	x0, [x29, #120]
   1ea10:	ldr	x1, [x29, #120]
   1ea14:	ldr	x0, [x29, #152]
   1ea18:	cmp	x1, x0
   1ea1c:	b.ls	1ea34 <udev_util_encode_string@@LIBUDEV_183+0x13204>  // b.plast
   1ea20:	ldr	x0, [x29, #120]
   1ea24:	sub	x0, x0, #0x1
   1ea28:	ldrb	w0, [x0]
   1ea2c:	cmp	w0, #0x2f
   1ea30:	b.eq	1ea04 <udev_util_encode_string@@LIBUDEV_183+0x131d4>  // b.none
   1ea34:	ldr	x0, [x29, #104]
   1ea38:	ldrb	w0, [x0]
   1ea3c:	cmp	w0, #0x2f
   1ea40:	b.eq	1ea58 <udev_util_encode_string@@LIBUDEV_183+0x13228>  // b.none
   1ea44:	ldr	x0, [x29, #120]
   1ea48:	add	x1, x0, #0x1
   1ea4c:	str	x1, [x29, #120]
   1ea50:	mov	w1, #0x2f                  	// #47
   1ea54:	strb	w1, [x0]
   1ea58:	ldr	x1, [x29, #104]
   1ea5c:	ldr	x0, [x29, #120]
   1ea60:	bl	5630 <strcpy@plt>
   1ea64:	ldr	x0, [x29, #152]
   1ea68:	str	x0, [x29, #112]
   1ea6c:	ldr	x0, [x29, #112]
   1ea70:	str	x0, [x29, #160]
   1ea74:	ldr	x0, [x29, #40]
   1ea78:	bl	5040 <strlen@plt>
   1ea7c:	str	x0, [x29, #96]
   1ea80:	b	1ea90 <udev_util_encode_string@@LIBUDEV_183+0x13260>
   1ea84:	ldr	x0, [x29, #96]
   1ea88:	sub	x0, x0, #0x1
   1ea8c:	str	x0, [x29, #96]
   1ea90:	ldr	x0, [x29, #96]
   1ea94:	cmp	x0, #0x0
   1ea98:	b.eq	1eab8 <udev_util_encode_string@@LIBUDEV_183+0x13288>  // b.none
   1ea9c:	ldr	x0, [x29, #96]
   1eaa0:	sub	x0, x0, #0x1
   1eaa4:	ldr	x1, [x29, #40]
   1eaa8:	add	x0, x1, x0
   1eaac:	ldrb	w0, [x0]
   1eab0:	cmp	w0, #0xa
   1eab4:	b.eq	1ea84 <udev_util_encode_string@@LIBUDEV_183+0x13254>  // b.none
   1eab8:	ldr	x0, [x29, #96]
   1eabc:	cmp	x0, #0x1, lsl #12
   1eac0:	b.ls	1eacc <udev_util_encode_string@@LIBUDEV_183+0x1329c>  // b.plast
   1eac4:	mov	w19, #0xffffffea            	// #-22
   1eac8:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eacc:	ldr	x1, [x29, #96]
   1ead0:	ldr	x0, [x29, #40]
   1ead4:	bl	5550 <strndup@plt>
   1ead8:	str	x0, [x29, #80]
   1eadc:	ldr	x0, [x29, #80]
   1eae0:	cmp	x0, #0x0
   1eae4:	b.ne	1eaf0 <udev_util_encode_string@@LIBUDEV_183+0x132c0>  // b.any
   1eae8:	mov	w19, #0xfffffff4            	// #-12
   1eaec:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eaf0:	ldr	x0, [x29, #80]
   1eaf4:	mov	w2, #0x60                  	// #96
   1eaf8:	mov	x1, x0
   1eafc:	ldr	x0, [x29, #160]
   1eb00:	bl	152d0 <udev_util_encode_string@@LIBUDEV_183+0x9aa0>
   1eb04:	str	w0, [x29, #76]
   1eb08:	ldr	w0, [x29, #76]
   1eb0c:	cmp	w0, #0x0
   1eb10:	b.ge	1eba8 <udev_util_encode_string@@LIBUDEV_183+0x13378>  // b.tcont
   1eb14:	ldr	w0, [x29, #76]
   1eb18:	cmn	w0, #0x28
   1eb1c:	b.ne	1eb28 <udev_util_encode_string@@LIBUDEV_183+0x132f8>  // b.any
   1eb20:	mov	w19, #0xffffffea            	// #-22
   1eb24:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eb28:	ldr	w0, [x29, #76]
   1eb2c:	cmn	w0, #0x15
   1eb30:	b.ne	1eb3c <udev_util_encode_string@@LIBUDEV_183+0x1330c>  // b.any
   1eb34:	ldr	w19, [x29, #76]
   1eb38:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eb3c:	add	x2, x29, #0x50
   1eb40:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1eb44:	add	x1, x0, #0x4f0
   1eb48:	mov	x0, x2
   1eb4c:	bl	34c9c <udev_util_encode_string@@LIBUDEV_183+0x2946c>
   1eb50:	str	w0, [x29, #76]
   1eb54:	ldr	w0, [x29, #76]
   1eb58:	cmp	w0, #0x0
   1eb5c:	b.ge	1eb68 <udev_util_encode_string@@LIBUDEV_183+0x13338>  // b.tcont
   1eb60:	ldr	w19, [x29, #76]
   1eb64:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eb68:	ldr	x0, [x29, #80]
   1eb6c:	mov	x2, x0
   1eb70:	ldr	x1, [x29, #48]
   1eb74:	ldr	x0, [x29, #56]
   1eb78:	bl	1de6c <udev_util_encode_string@@LIBUDEV_183+0x1263c>
   1eb7c:	str	w0, [x29, #76]
   1eb80:	ldr	w0, [x29, #76]
   1eb84:	cmp	w0, #0x0
   1eb88:	b.ge	1eb94 <udev_util_encode_string@@LIBUDEV_183+0x13364>  // b.tcont
   1eb8c:	ldr	w19, [x29, #76]
   1eb90:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eb94:	ldr	x0, [x29, #80]
   1eb98:	str	x0, [x29, #176]
   1eb9c:	str	xzr, [x29, #80]
   1eba0:	mov	w19, #0xfffffffa            	// #-6
   1eba4:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1eba8:	ldr	x0, [x29, #80]
   1ebac:	mov	x2, x0
   1ebb0:	ldr	x1, [x29, #48]
   1ebb4:	ldr	x0, [x29, #56]
   1ebb8:	bl	1de6c <udev_util_encode_string@@LIBUDEV_183+0x1263c>
   1ebbc:	str	w0, [x29, #76]
   1ebc0:	ldr	w0, [x29, #76]
   1ebc4:	cmp	w0, #0x0
   1ebc8:	b.ge	1ebd4 <udev_util_encode_string@@LIBUDEV_183+0x133a4>  // b.tcont
   1ebcc:	ldr	w19, [x29, #76]
   1ebd0:	b	1ebe4 <udev_util_encode_string@@LIBUDEV_183+0x133b4>
   1ebd4:	ldr	x0, [x29, #80]
   1ebd8:	str	x0, [x29, #168]
   1ebdc:	str	xzr, [x29, #80]
   1ebe0:	mov	w19, #0x0                   	// #0
   1ebe4:	add	x0, x29, #0x50
   1ebe8:	bl	14f6c <udev_util_encode_string@@LIBUDEV_183+0x973c>
   1ebec:	mov	w1, w19
   1ebf0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1ebf4:	ldr	x0, [x0, #4016]
   1ebf8:	ldr	x2, [x29, #184]
   1ebfc:	ldr	x0, [x0]
   1ec00:	eor	x0, x2, x0
   1ec04:	cmp	x0, #0x0
   1ec08:	b.eq	1ec10 <udev_util_encode_string@@LIBUDEV_183+0x133e0>  // b.none
   1ec0c:	bl	5390 <__stack_chk_fail@plt>
   1ec10:	mov	w0, w1
   1ec14:	mov	sp, x29
   1ec18:	ldr	x19, [sp, #16]
   1ec1c:	ldp	x29, x30, [sp], #192
   1ec20:	ret
   1ec24:	stp	x29, x30, [sp, #-32]!
   1ec28:	mov	x29, sp
   1ec2c:	str	x0, [sp, #24]
   1ec30:	ldr	x0, [sp, #24]
   1ec34:	ldr	x0, [x0]
   1ec38:	cmp	x0, #0x0
   1ec3c:	b.eq	1ec4c <udev_util_encode_string@@LIBUDEV_183+0x1341c>  // b.none
   1ec40:	ldr	x0, [sp, #24]
   1ec44:	ldr	x0, [x0]
   1ec48:	bl	203ac <udev_util_encode_string@@LIBUDEV_183+0x14b7c>
   1ec4c:	nop
   1ec50:	ldp	x29, x30, [sp], #32
   1ec54:	ret
   1ec58:	stp	x29, x30, [sp, #-32]!
   1ec5c:	mov	x29, sp
   1ec60:	str	x0, [sp, #24]
   1ec64:	ldr	x0, [sp, #24]
   1ec68:	bl	54b0 <free@plt>
   1ec6c:	mov	x0, #0x0                   	// #0
   1ec70:	ldp	x29, x30, [sp], #32
   1ec74:	ret
   1ec78:	stp	x29, x30, [sp, #-32]!
   1ec7c:	mov	x29, sp
   1ec80:	str	x0, [sp, #24]
   1ec84:	mov	x2, #0x0                   	// #0
   1ec88:	mov	x1, #0x0                   	// #0
   1ec8c:	ldr	x0, [sp, #24]
   1ec90:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
   1ec94:	ldp	x29, x30, [sp], #32
   1ec98:	ret
   1ec9c:	stp	x29, x30, [sp, #-48]!
   1eca0:	mov	x29, sp
   1eca4:	str	x0, [sp, #40]
   1eca8:	str	x1, [sp, #32]
   1ecac:	str	x2, [sp, #24]
   1ecb0:	ldr	x2, [sp, #24]
   1ecb4:	ldr	x1, [sp, #32]
   1ecb8:	ldr	x0, [sp, #40]
   1ecbc:	bl	298e0 <udev_util_encode_string@@LIBUDEV_183+0x1e0b0>
   1ecc0:	ldp	x29, x30, [sp], #48
   1ecc4:	ret
   1ecc8:	stp	x29, x30, [sp, #-32]!
   1eccc:	mov	x29, sp
   1ecd0:	str	x0, [sp, #24]
   1ecd4:	str	x1, [sp, #16]
   1ecd8:	ldr	x1, [sp, #16]
   1ecdc:	ldr	x0, [sp, #24]
   1ece0:	bl	29a24 <udev_util_encode_string@@LIBUDEV_183+0x1e1f4>
   1ece4:	ldp	x29, x30, [sp], #32
   1ece8:	ret
   1ecec:	stp	x29, x30, [sp, #-48]!
   1ecf0:	mov	x29, sp
   1ecf4:	str	x0, [sp, #40]
   1ecf8:	str	x1, [sp, #32]
   1ecfc:	str	x2, [sp, #24]
   1ed00:	str	x3, [sp, #16]
   1ed04:	ldr	x3, [sp, #16]
   1ed08:	ldr	x2, [sp, #24]
   1ed0c:	ldr	x1, [sp, #32]
   1ed10:	ldr	x0, [sp, #40]
   1ed14:	bl	28328 <udev_util_encode_string@@LIBUDEV_183+0x1caf8>
   1ed18:	and	w0, w0, #0xff
   1ed1c:	ldp	x29, x30, [sp], #48
   1ed20:	ret
   1ed24:	stp	x29, x30, [sp, #-32]!
   1ed28:	mov	x29, sp
   1ed2c:	str	x0, [sp, #24]
   1ed30:	mov	x2, #0x0                   	// #0
   1ed34:	mov	x1, #0x0                   	// #0
   1ed38:	ldr	x0, [sp, #24]
   1ed3c:	bl	28900 <udev_util_encode_string@@LIBUDEV_183+0x1d0d0>
   1ed40:	nop
   1ed44:	ldp	x29, x30, [sp], #32
   1ed48:	ret
   1ed4c:	sub	sp, sp, #0x10
   1ed50:	str	x0, [sp, #8]
   1ed54:	ldr	x0, [sp, #8]
   1ed58:	add	sp, sp, #0x10
   1ed5c:	ret
   1ed60:	sub	sp, sp, #0x10
   1ed64:	str	x0, [sp, #8]
   1ed68:	ldr	x0, [sp, #8]
   1ed6c:	str	xzr, [x0, #2048]
   1ed70:	ldr	x0, [sp, #8]
   1ed74:	str	xzr, [x0, #2056]
   1ed78:	nop
   1ed7c:	add	sp, sp, #0x10
   1ed80:	ret
   1ed84:	sub	sp, sp, #0x10
   1ed88:	str	x0, [sp, #8]
   1ed8c:	ldr	x0, [sp, #8]
   1ed90:	ldr	x0, [x0, #2056]
   1ed94:	add	x0, x0, #0x1
   1ed98:	cmp	x0, #0x7ff
   1ed9c:	b.ls	1eda8 <udev_util_encode_string@@LIBUDEV_183+0x13578>  // b.plast
   1eda0:	mov	x0, #0x0                   	// #0
   1eda4:	b	1edbc <udev_util_encode_string@@LIBUDEV_183+0x1358c>
   1eda8:	ldr	x0, [sp, #8]
   1edac:	ldr	x0, [x0, #2056]
   1edb0:	ldr	x1, [sp, #8]
   1edb4:	strb	wzr, [x1, x0]
   1edb8:	ldr	x0, [sp, #8]
   1edbc:	add	sp, sp, #0x10
   1edc0:	ret
   1edc4:	stp	x29, x30, [sp, #-48]!
   1edc8:	mov	x29, sp
   1edcc:	str	x0, [sp, #40]
   1edd0:	str	x1, [sp, #32]
   1edd4:	str	x2, [sp, #24]
   1edd8:	ldr	x0, [sp, #40]
   1eddc:	ldr	x1, [x0, #2056]
   1ede0:	ldr	x0, [sp, #24]
   1ede4:	add	x0, x1, x0
   1ede8:	cmp	x0, #0x7ff
   1edec:	b.ls	1edf8 <udev_util_encode_string@@LIBUDEV_183+0x135c8>  // b.plast
   1edf0:	mov	w0, #0x0                   	// #0
   1edf4:	b	1ee30 <udev_util_encode_string@@LIBUDEV_183+0x13600>
   1edf8:	ldr	x1, [sp, #40]
   1edfc:	ldr	x0, [sp, #40]
   1ee00:	ldr	x0, [x0, #2056]
   1ee04:	add	x0, x1, x0
   1ee08:	ldr	x2, [sp, #24]
   1ee0c:	ldr	x1, [sp, #32]
   1ee10:	bl	5010 <memcpy@plt>
   1ee14:	ldr	x0, [sp, #40]
   1ee18:	ldr	x1, [x0, #2056]
   1ee1c:	ldr	x0, [sp, #24]
   1ee20:	add	x1, x1, x0
   1ee24:	ldr	x0, [sp, #40]
   1ee28:	str	x1, [x0, #2056]
   1ee2c:	mov	w0, #0x1                   	// #1
   1ee30:	ldp	x29, x30, [sp], #48
   1ee34:	ret
   1ee38:	sub	sp, sp, #0x10
   1ee3c:	str	x0, [sp, #8]
   1ee40:	strb	w1, [sp, #7]
   1ee44:	ldr	x0, [sp, #8]
   1ee48:	ldr	x0, [x0, #2056]
   1ee4c:	add	x0, x0, #0x1
   1ee50:	cmp	x0, #0x7ff
   1ee54:	b.ls	1ee60 <udev_util_encode_string@@LIBUDEV_183+0x13630>  // b.plast
   1ee58:	mov	w0, #0x0                   	// #0
   1ee5c:	b	1ee84 <udev_util_encode_string@@LIBUDEV_183+0x13654>
   1ee60:	ldr	x0, [sp, #8]
   1ee64:	ldr	x0, [x0, #2056]
   1ee68:	add	x2, x0, #0x1
   1ee6c:	ldr	x1, [sp, #8]
   1ee70:	str	x2, [x1, #2056]
   1ee74:	ldr	x1, [sp, #8]
   1ee78:	ldrb	w2, [sp, #7]
   1ee7c:	strb	w2, [x1, x0]
   1ee80:	mov	w0, #0x1                   	// #1
   1ee84:	add	sp, sp, #0x10
   1ee88:	ret
   1ee8c:	stp	x29, x30, [sp, #-32]!
   1ee90:	mov	x29, sp
   1ee94:	str	x0, [sp, #24]
   1ee98:	str	x1, [sp, #16]
   1ee9c:	ldr	x0, [sp, #24]
   1eea0:	ldr	x0, [x0, #2056]
   1eea4:	ldr	x1, [sp, #16]
   1eea8:	cmp	x1, x0
   1eeac:	cset	w0, hi  // hi = pmore
   1eeb0:	and	w0, w0, #0xff
   1eeb4:	and	x0, x0, #0xff
   1eeb8:	cmp	x0, #0x0
   1eebc:	b.eq	1eee8 <udev_util_encode_string@@LIBUDEV_183+0x136b8>  // b.none
   1eec0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1eec4:	add	x1, x0, #0xc13
   1eec8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1eecc:	add	x4, x0, #0xec8
   1eed0:	mov	w3, #0x4a                  	// #74
   1eed4:	mov	x2, x1
   1eed8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1eedc:	add	x1, x0, #0xc38
   1eee0:	mov	w0, #0x0                   	// #0
   1eee4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1eee8:	ldr	x0, [sp, #24]
   1eeec:	ldr	x1, [x0, #2056]
   1eef0:	ldr	x0, [sp, #16]
   1eef4:	sub	x1, x1, x0
   1eef8:	ldr	x0, [sp, #24]
   1eefc:	str	x1, [x0, #2056]
   1ef00:	nop
   1ef04:	ldp	x29, x30, [sp], #32
   1ef08:	ret
   1ef0c:	stp	x29, x30, [sp, #-32]!
   1ef10:	mov	x29, sp
   1ef14:	str	x0, [sp, #24]
   1ef18:	mov	x1, #0x1                   	// #1
   1ef1c:	ldr	x0, [sp, #24]
   1ef20:	bl	1ee8c <udev_util_encode_string@@LIBUDEV_183+0x1365c>
   1ef24:	nop
   1ef28:	ldp	x29, x30, [sp], #32
   1ef2c:	ret
   1ef30:	stp	x29, x30, [sp, #-64]!
   1ef34:	mov	x29, sp
   1ef38:	str	x0, [sp, #40]
   1ef3c:	str	x1, [sp, #32]
   1ef40:	str	x2, [sp, #24]
   1ef44:	ldr	x0, [sp, #32]
   1ef48:	str	x0, [sp, #56]
   1ef4c:	ldr	x0, [sp, #40]
   1ef50:	ldr	x0, [x0, #144]
   1ef54:	ldr	x0, [x0, #32]
   1ef58:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1ef5c:	mov	x1, x0
   1ef60:	ldr	x0, [sp, #56]
   1ef64:	add	x0, x0, x1
   1ef68:	str	x0, [sp, #56]
   1ef6c:	ldr	x0, [sp, #40]
   1ef70:	ldr	x0, [x0, #144]
   1ef74:	ldr	x0, [x0, #40]
   1ef78:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1ef7c:	mov	x1, x0
   1ef80:	ldr	x0, [sp, #24]
   1ef84:	mul	x0, x1, x0
   1ef88:	ldr	x1, [sp, #56]
   1ef8c:	add	x0, x1, x0
   1ef90:	str	x0, [sp, #56]
   1ef94:	ldr	x0, [sp, #56]
   1ef98:	ldp	x29, x30, [sp], #64
   1ef9c:	ret
   1efa0:	stp	x29, x30, [sp, #-80]!
   1efa4:	mov	x29, sp
   1efa8:	str	x19, [sp, #16]
   1efac:	str	x0, [sp, #56]
   1efb0:	str	x1, [sp, #48]
   1efb4:	str	x2, [sp, #40]
   1efb8:	ldr	x0, [sp, #48]
   1efbc:	str	x0, [sp, #72]
   1efc0:	ldr	x0, [sp, #56]
   1efc4:	ldr	x0, [x0, #144]
   1efc8:	ldr	x0, [x0, #32]
   1efcc:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1efd0:	mov	x1, x0
   1efd4:	ldr	x0, [sp, #72]
   1efd8:	add	x0, x0, x1
   1efdc:	str	x0, [sp, #72]
   1efe0:	ldr	x0, [sp, #48]
   1efe4:	ldrb	w0, [x0, #8]
   1efe8:	and	x19, x0, #0xff
   1efec:	ldr	x0, [sp, #56]
   1eff0:	ldr	x0, [x0, #144]
   1eff4:	ldr	x0, [x0, #40]
   1eff8:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1effc:	mul	x0, x19, x0
   1f000:	ldr	x1, [sp, #72]
   1f004:	add	x0, x1, x0
   1f008:	str	x0, [sp, #72]
   1f00c:	ldr	x0, [sp, #56]
   1f010:	ldr	x0, [x0, #144]
   1f014:	ldr	x0, [x0, #48]
   1f018:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f01c:	mov	x1, x0
   1f020:	ldr	x0, [sp, #40]
   1f024:	mul	x0, x1, x0
   1f028:	ldr	x1, [sp, #72]
   1f02c:	add	x0, x1, x0
   1f030:	str	x0, [sp, #72]
   1f034:	ldr	x0, [sp, #72]
   1f038:	ldr	x19, [sp, #16]
   1f03c:	ldp	x29, x30, [sp], #80
   1f040:	ret
   1f044:	stp	x29, x30, [sp, #-48]!
   1f048:	mov	x29, sp
   1f04c:	str	x19, [sp, #16]
   1f050:	str	x0, [sp, #40]
   1f054:	str	x1, [sp, #32]
   1f058:	ldr	x0, [sp, #40]
   1f05c:	ldr	x19, [x0, #144]
   1f060:	ldr	x0, [sp, #32]
   1f064:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f068:	add	x0, x19, x0
   1f06c:	ldr	x19, [sp, #16]
   1f070:	ldp	x29, x30, [sp], #48
   1f074:	ret
   1f078:	stp	x29, x30, [sp, #-48]!
   1f07c:	mov	x29, sp
   1f080:	str	x19, [sp, #16]
   1f084:	str	x0, [sp, #40]
   1f088:	str	x1, [sp, #32]
   1f08c:	ldr	x0, [sp, #40]
   1f090:	ldr	x19, [x0, #144]
   1f094:	ldr	x0, [sp, #32]
   1f098:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f09c:	add	x0, x19, x0
   1f0a0:	ldr	x19, [sp, #16]
   1f0a4:	ldp	x29, x30, [sp], #48
   1f0a8:	ret
   1f0ac:	sub	sp, sp, #0x20
   1f0b0:	str	x0, [sp, #8]
   1f0b4:	str	x1, [sp]
   1f0b8:	ldr	x0, [sp, #8]
   1f0bc:	str	x0, [sp, #16]
   1f0c0:	ldr	x0, [sp]
   1f0c4:	str	x0, [sp, #24]
   1f0c8:	ldr	x0, [sp, #16]
   1f0cc:	ldrb	w0, [x0]
   1f0d0:	mov	w1, w0
   1f0d4:	ldr	x0, [sp, #24]
   1f0d8:	ldrb	w0, [x0]
   1f0dc:	sub	w0, w1, w0
   1f0e0:	add	sp, sp, #0x20
   1f0e4:	ret
   1f0e8:	stp	x29, x30, [sp, #-96]!
   1f0ec:	mov	x29, sp
   1f0f0:	stp	x19, x20, [sp, #16]
   1f0f4:	str	x0, [sp, #56]
   1f0f8:	str	x1, [sp, #48]
   1f0fc:	strb	w2, [sp, #47]
   1f100:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1f104:	ldr	x0, [x0, #4016]
   1f108:	ldr	x1, [x0]
   1f10c:	str	x1, [sp, #88]
   1f110:	mov	x1, #0x0                   	// #0
   1f114:	ldrb	w0, [sp, #47]
   1f118:	strb	w0, [sp, #72]
   1f11c:	ldr	x0, [sp, #56]
   1f120:	ldr	x0, [x0, #144]
   1f124:	ldr	x0, [x0, #32]
   1f128:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f12c:	mov	x1, x0
   1f130:	ldr	x0, [sp, #48]
   1f134:	add	x19, x0, x1
   1f138:	ldr	x0, [sp, #48]
   1f13c:	ldrb	w0, [x0, #8]
   1f140:	and	x20, x0, #0xff
   1f144:	ldr	x0, [sp, #56]
   1f148:	ldr	x0, [x0, #144]
   1f14c:	ldr	x0, [x0, #40]
   1f150:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f154:	mov	x1, x0
   1f158:	add	x5, sp, #0x48
   1f15c:	adrp	x0, 1f000 <udev_util_encode_string@@LIBUDEV_183+0x137d0>
   1f160:	add	x4, x0, #0xac
   1f164:	mov	x3, x1
   1f168:	mov	x2, x20
   1f16c:	mov	x1, x19
   1f170:	mov	x0, x5
   1f174:	bl	5300 <bsearch@plt>
   1f178:	str	x0, [sp, #64]
   1f17c:	ldr	x0, [sp, #64]
   1f180:	cmp	x0, #0x0
   1f184:	b.eq	1f1a0 <udev_util_encode_string@@LIBUDEV_183+0x13970>  // b.none
   1f188:	ldr	x0, [sp, #64]
   1f18c:	ldr	x0, [x0, #8]
   1f190:	mov	x1, x0
   1f194:	ldr	x0, [sp, #56]
   1f198:	bl	1f044 <udev_util_encode_string@@LIBUDEV_183+0x13814>
   1f19c:	b	1f1a4 <udev_util_encode_string@@LIBUDEV_183+0x13974>
   1f1a0:	mov	x0, #0x0                   	// #0
   1f1a4:	mov	x1, x0
   1f1a8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1f1ac:	ldr	x0, [x0, #4016]
   1f1b0:	ldr	x2, [sp, #88]
   1f1b4:	ldr	x0, [x0]
   1f1b8:	eor	x0, x2, x0
   1f1bc:	cmp	x0, #0x0
   1f1c0:	b.eq	1f1c8 <udev_util_encode_string@@LIBUDEV_183+0x13998>  // b.none
   1f1c4:	bl	5390 <__stack_chk_fail@plt>
   1f1c8:	mov	x0, x1
   1f1cc:	ldp	x19, x20, [sp, #16]
   1f1d0:	ldp	x29, x30, [sp], #96
   1f1d4:	ret
   1f1d8:	stp	x29, x30, [sp, #-64]!
   1f1dc:	mov	x29, sp
   1f1e0:	str	x0, [sp, #24]
   1f1e4:	str	x1, [sp, #16]
   1f1e8:	ldr	x0, [sp, #24]
   1f1ec:	cmp	x0, #0x0
   1f1f0:	cset	w0, eq  // eq = none
   1f1f4:	and	w0, w0, #0xff
   1f1f8:	and	x0, x0, #0xff
   1f1fc:	cmp	x0, #0x0
   1f200:	b.eq	1f22c <udev_util_encode_string@@LIBUDEV_183+0x139fc>  // b.none
   1f204:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1f208:	add	x1, x0, #0xc13
   1f20c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1f210:	add	x4, x0, #0xed8
   1f214:	mov	w3, #0x82                  	// #130
   1f218:	mov	x2, x1
   1f21c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1f220:	add	x1, x0, #0xc50
   1f224:	mov	w0, #0x0                   	// #0
   1f228:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   1f22c:	ldr	x0, [sp, #16]
   1f230:	ldr	x0, [x0]
   1f234:	mov	x1, x0
   1f238:	ldr	x0, [sp, #24]
   1f23c:	bl	1f078 <udev_util_encode_string@@LIBUDEV_183+0x13848>
   1f240:	str	x0, [sp, #40]
   1f244:	ldr	x0, [sp, #40]
   1f248:	ldrb	w0, [x0]
   1f24c:	cmp	w0, #0x20
   1f250:	b.eq	1f25c <udev_util_encode_string@@LIBUDEV_183+0x13a2c>  // b.none
   1f254:	mov	w0, #0x0                   	// #0
   1f258:	b	1f404 <udev_util_encode_string@@LIBUDEV_183+0x13bd4>
   1f25c:	ldr	x0, [sp, #40]
   1f260:	add	x0, x0, #0x1
   1f264:	str	x0, [sp, #40]
   1f268:	ldr	x0, [sp, #24]
   1f26c:	ldr	x0, [x0, #144]
   1f270:	ldr	x0, [x0, #48]
   1f274:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f278:	cmp	x0, #0x1f
   1f27c:	b.ls	1f398 <udev_util_encode_string@@LIBUDEV_183+0x13b68>  // b.plast
   1f280:	ldr	x0, [sp, #16]
   1f284:	str	x0, [sp, #48]
   1f288:	ldr	x0, [sp, #24]
   1f28c:	ldr	x0, [x0, #152]
   1f290:	ldr	x1, [sp, #40]
   1f294:	bl	1ecc8 <udev_util_encode_string@@LIBUDEV_183+0x13498>
   1f298:	str	x0, [sp, #56]
   1f29c:	ldr	x0, [sp, #56]
   1f2a0:	cmp	x0, #0x0
   1f2a4:	b.eq	1f398 <udev_util_encode_string@@LIBUDEV_183+0x13b68>  // b.none
   1f2a8:	ldr	x0, [sp, #48]
   1f2ac:	ldrh	w0, [x0, #28]
   1f2b0:	cmp	w0, #0x0
   1f2b4:	b.ne	1f320 <udev_util_encode_string@@LIBUDEV_183+0x13af0>  // b.any
   1f2b8:	ldr	x0, [sp, #48]
   1f2bc:	ldr	x1, [x0, #16]
   1f2c0:	ldr	x0, [sp, #56]
   1f2c4:	ldr	x0, [x0, #16]
   1f2c8:	cmp	x1, x0
   1f2cc:	b.cc	1f300 <udev_util_encode_string@@LIBUDEV_183+0x13ad0>  // b.lo, b.ul, b.last
   1f2d0:	ldr	x0, [sp, #48]
   1f2d4:	ldr	x1, [x0, #16]
   1f2d8:	ldr	x0, [sp, #56]
   1f2dc:	ldr	x0, [x0, #16]
   1f2e0:	cmp	x1, x0
   1f2e4:	b.ne	1f308 <udev_util_encode_string@@LIBUDEV_183+0x13ad8>  // b.any
   1f2e8:	ldr	x0, [sp, #48]
   1f2ec:	ldr	w1, [x0, #24]
   1f2f0:	ldr	x0, [sp, #56]
   1f2f4:	ldr	w0, [x0, #24]
   1f2f8:	cmp	w1, w0
   1f2fc:	b.cs	1f308 <udev_util_encode_string@@LIBUDEV_183+0x13ad8>  // b.hs, b.nlast
   1f300:	mov	w0, #0x1                   	// #1
   1f304:	b	1f30c <udev_util_encode_string@@LIBUDEV_183+0x13adc>
   1f308:	mov	w0, #0x0                   	// #0
   1f30c:	strb	w0, [sp, #35]
   1f310:	ldrb	w0, [sp, #35]
   1f314:	and	w0, w0, #0x1
   1f318:	strb	w0, [sp, #35]
   1f31c:	b	1f384 <udev_util_encode_string@@LIBUDEV_183+0x13b54>
   1f320:	ldr	x0, [sp, #48]
   1f324:	ldrh	w1, [x0, #28]
   1f328:	ldr	x0, [sp, #56]
   1f32c:	ldrh	w0, [x0, #28]
   1f330:	cmp	w1, w0
   1f334:	b.cc	1f368 <udev_util_encode_string@@LIBUDEV_183+0x13b38>  // b.lo, b.ul, b.last
   1f338:	ldr	x0, [sp, #48]
   1f33c:	ldrh	w1, [x0, #28]
   1f340:	ldr	x0, [sp, #56]
   1f344:	ldrh	w0, [x0, #28]
   1f348:	cmp	w1, w0
   1f34c:	b.ne	1f370 <udev_util_encode_string@@LIBUDEV_183+0x13b40>  // b.any
   1f350:	ldr	x0, [sp, #48]
   1f354:	ldr	w1, [x0, #24]
   1f358:	ldr	x0, [sp, #56]
   1f35c:	ldr	w0, [x0, #24]
   1f360:	cmp	w1, w0
   1f364:	b.cs	1f370 <udev_util_encode_string@@LIBUDEV_183+0x13b40>  // b.hs, b.nlast
   1f368:	mov	w0, #0x1                   	// #1
   1f36c:	b	1f374 <udev_util_encode_string@@LIBUDEV_183+0x13b44>
   1f370:	mov	w0, #0x0                   	// #0
   1f374:	strb	w0, [sp, #35]
   1f378:	ldrb	w0, [sp, #35]
   1f37c:	and	w0, w0, #0x1
   1f380:	strb	w0, [sp, #35]
   1f384:	ldrb	w0, [sp, #35]
   1f388:	cmp	w0, #0x0
   1f38c:	b.eq	1f398 <udev_util_encode_string@@LIBUDEV_183+0x13b68>  // b.none
   1f390:	mov	w0, #0x0                   	// #0
   1f394:	b	1f404 <udev_util_encode_string@@LIBUDEV_183+0x13bd4>
   1f398:	ldr	x0, [sp, #24]
   1f39c:	add	x2, x0, #0x98
   1f3a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1f3a4:	ldr	x1, [x0, #4064]
   1f3a8:	mov	x0, x2
   1f3ac:	bl	28718 <udev_util_encode_string@@LIBUDEV_183+0x1cee8>
   1f3b0:	str	w0, [sp, #36]
   1f3b4:	ldr	w0, [sp, #36]
   1f3b8:	cmp	w0, #0x0
   1f3bc:	b.ge	1f3c8 <udev_util_encode_string@@LIBUDEV_183+0x13b98>  // b.tcont
   1f3c0:	ldr	w0, [sp, #36]
   1f3c4:	b	1f404 <udev_util_encode_string@@LIBUDEV_183+0x13bd4>
   1f3c8:	ldr	x0, [sp, #24]
   1f3cc:	ldr	x0, [x0, #152]
   1f3d0:	ldr	x2, [sp, #16]
   1f3d4:	ldr	x1, [sp, #40]
   1f3d8:	bl	1ec9c <udev_util_encode_string@@LIBUDEV_183+0x1346c>
   1f3dc:	str	w0, [sp, #36]
   1f3e0:	ldr	w0, [sp, #36]
   1f3e4:	cmp	w0, #0x0
   1f3e8:	b.ge	1f3f4 <udev_util_encode_string@@LIBUDEV_183+0x13bc4>  // b.tcont
   1f3ec:	ldr	w0, [sp, #36]
   1f3f0:	b	1f404 <udev_util_encode_string@@LIBUDEV_183+0x13bd4>
   1f3f4:	ldr	x0, [sp, #24]
   1f3f8:	mov	w1, #0x1                   	// #1
   1f3fc:	strb	w1, [x0, #176]
   1f400:	mov	w0, #0x0                   	// #0
   1f404:	ldp	x29, x30, [sp], #64
   1f408:	ret
   1f40c:	stp	x29, x30, [sp, #-112]!
   1f410:	mov	x29, sp
   1f414:	str	x0, [sp, #56]
   1f418:	str	x1, [sp, #48]
   1f41c:	str	x2, [sp, #40]
   1f420:	str	x3, [sp, #32]
   1f424:	str	x4, [sp, #24]
   1f428:	ldr	x0, [sp, #48]
   1f42c:	ldr	x0, [x0]
   1f430:	mov	x1, x0
   1f434:	ldr	x0, [sp, #56]
   1f438:	bl	1f078 <udev_util_encode_string@@LIBUDEV_183+0x13848>
   1f43c:	str	x0, [sp, #88]
   1f440:	ldr	x1, [sp, #88]
   1f444:	ldr	x0, [sp, #40]
   1f448:	add	x0, x1, x0
   1f44c:	bl	5040 <strlen@plt>
   1f450:	str	x0, [sp, #96]
   1f454:	ldr	x1, [sp, #88]
   1f458:	ldr	x0, [sp, #40]
   1f45c:	add	x0, x1, x0
   1f460:	ldr	x2, [sp, #96]
   1f464:	mov	x1, x0
   1f468:	ldr	x0, [sp, #32]
   1f46c:	bl	1edc4 <udev_util_encode_string@@LIBUDEV_183+0x13594>
   1f470:	str	xzr, [sp, #80]
   1f474:	b	1f4f8 <udev_util_encode_string@@LIBUDEV_183+0x13cc8>
   1f478:	ldr	x2, [sp, #80]
   1f47c:	ldr	x1, [sp, #48]
   1f480:	ldr	x0, [sp, #56]
   1f484:	bl	1ef30 <udev_util_encode_string@@LIBUDEV_183+0x13700>
   1f488:	str	x0, [sp, #104]
   1f48c:	ldr	x0, [sp, #104]
   1f490:	ldrb	w0, [x0]
   1f494:	mov	w1, w0
   1f498:	ldr	x0, [sp, #32]
   1f49c:	bl	1ee38 <udev_util_encode_string@@LIBUDEV_183+0x13608>
   1f4a0:	ldr	x0, [sp, #104]
   1f4a4:	ldr	x0, [x0, #8]
   1f4a8:	mov	x1, x0
   1f4ac:	ldr	x0, [sp, #56]
   1f4b0:	bl	1f044 <udev_util_encode_string@@LIBUDEV_183+0x13814>
   1f4b4:	ldr	x4, [sp, #24]
   1f4b8:	ldr	x3, [sp, #32]
   1f4bc:	mov	x2, #0x0                   	// #0
   1f4c0:	mov	x1, x0
   1f4c4:	ldr	x0, [sp, #56]
   1f4c8:	bl	1f40c <udev_util_encode_string@@LIBUDEV_183+0x13bdc>
   1f4cc:	str	w0, [sp, #76]
   1f4d0:	ldr	w0, [sp, #76]
   1f4d4:	cmp	w0, #0x0
   1f4d8:	b.ge	1f4e4 <udev_util_encode_string@@LIBUDEV_183+0x13cb4>  // b.tcont
   1f4dc:	ldr	w0, [sp, #76]
   1f4e0:	b	1f5b4 <udev_util_encode_string@@LIBUDEV_183+0x13d84>
   1f4e4:	ldr	x0, [sp, #32]
   1f4e8:	bl	1ef0c <udev_util_encode_string@@LIBUDEV_183+0x136dc>
   1f4ec:	ldr	x0, [sp, #80]
   1f4f0:	add	x0, x0, #0x1
   1f4f4:	str	x0, [sp, #80]
   1f4f8:	ldr	x0, [sp, #48]
   1f4fc:	ldrb	w0, [x0, #8]
   1f500:	and	x0, x0, #0xff
   1f504:	ldr	x1, [sp, #80]
   1f508:	cmp	x1, x0
   1f50c:	b.cc	1f478 <udev_util_encode_string@@LIBUDEV_183+0x13c48>  // b.lo, b.ul, b.last
   1f510:	ldr	x0, [sp, #48]
   1f514:	ldr	x0, [x0, #16]
   1f518:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f51c:	cmp	x0, #0x0
   1f520:	b.eq	1f5a4 <udev_util_encode_string@@LIBUDEV_183+0x13d74>  // b.none
   1f524:	ldr	x0, [sp, #32]
   1f528:	bl	1ed84 <udev_util_encode_string@@LIBUDEV_183+0x13554>
   1f52c:	mov	w2, #0x0                   	// #0
   1f530:	ldr	x1, [sp, #24]
   1f534:	bl	55b0 <fnmatch@plt>
   1f538:	cmp	w0, #0x0
   1f53c:	b.ne	1f5a4 <udev_util_encode_string@@LIBUDEV_183+0x13d74>  // b.any
   1f540:	str	xzr, [sp, #80]
   1f544:	b	1f588 <udev_util_encode_string@@LIBUDEV_183+0x13d58>
   1f548:	ldr	x2, [sp, #80]
   1f54c:	ldr	x1, [sp, #48]
   1f550:	ldr	x0, [sp, #56]
   1f554:	bl	1efa0 <udev_util_encode_string@@LIBUDEV_183+0x13770>
   1f558:	mov	x1, x0
   1f55c:	ldr	x0, [sp, #56]
   1f560:	bl	1f1d8 <udev_util_encode_string@@LIBUDEV_183+0x139a8>
   1f564:	str	w0, [sp, #76]
   1f568:	ldr	w0, [sp, #76]
   1f56c:	cmp	w0, #0x0
   1f570:	b.ge	1f57c <udev_util_encode_string@@LIBUDEV_183+0x13d4c>  // b.tcont
   1f574:	ldr	w0, [sp, #76]
   1f578:	b	1f5b4 <udev_util_encode_string@@LIBUDEV_183+0x13d84>
   1f57c:	ldr	x0, [sp, #80]
   1f580:	add	x0, x0, #0x1
   1f584:	str	x0, [sp, #80]
   1f588:	ldr	x0, [sp, #48]
   1f58c:	ldr	x0, [x0, #16]
   1f590:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f594:	mov	x1, x0
   1f598:	ldr	x0, [sp, #80]
   1f59c:	cmp	x0, x1
   1f5a0:	b.cc	1f548 <udev_util_encode_string@@LIBUDEV_183+0x13d18>  // b.lo, b.ul, b.last
   1f5a4:	ldr	x1, [sp, #96]
   1f5a8:	ldr	x0, [sp, #32]
   1f5ac:	bl	1ee8c <udev_util_encode_string@@LIBUDEV_183+0x1365c>
   1f5b0:	mov	w0, #0x0                   	// #0
   1f5b4:	ldp	x29, x30, [sp], #112
   1f5b8:	ret
   1f5bc:	sub	sp, sp, #0x870
   1f5c0:	stp	x29, x30, [sp]
   1f5c4:	mov	x29, sp
   1f5c8:	str	x0, [sp, #24]
   1f5cc:	str	x1, [sp, #16]
   1f5d0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1f5d4:	ldr	x0, [x0, #4016]
   1f5d8:	ldr	x1, [x0]
   1f5dc:	str	x1, [sp, #2152]
   1f5e0:	mov	x1, #0x0                   	// #0
   1f5e4:	str	xzr, [sp, #56]
   1f5e8:	add	x0, sp, #0x58
   1f5ec:	bl	1ed60 <udev_util_encode_string@@LIBUDEV_183+0x13530>
   1f5f0:	ldr	x0, [sp, #24]
   1f5f4:	ldr	x0, [x0, #144]
   1f5f8:	ldr	x0, [x0, #56]
   1f5fc:	mov	x1, x0
   1f600:	ldr	x0, [sp, #24]
   1f604:	bl	1f044 <udev_util_encode_string@@LIBUDEV_183+0x13814>
   1f608:	str	x0, [sp, #48]
   1f60c:	b	1f954 <udev_util_encode_string@@LIBUDEV_183+0x14124>
   1f610:	str	xzr, [sp, #64]
   1f614:	ldr	x0, [sp, #48]
   1f618:	ldr	x0, [x0]
   1f61c:	cmp	x0, #0x0
   1f620:	b.eq	1f73c <udev_util_encode_string@@LIBUDEV_183+0x13f0c>  // b.none
   1f624:	b	1f6f8 <udev_util_encode_string@@LIBUDEV_183+0x13ec8>
   1f628:	strb	wzr, [sp, #42]
   1f62c:	ldrb	w0, [sp, #43]
   1f630:	sub	w0, w0, #0x2a
   1f634:	cmp	w0, #0x31
   1f638:	cset	w1, hi  // hi = pmore
   1f63c:	and	w1, w1, #0xff
   1f640:	cmp	w1, #0x0
   1f644:	b.ne	1f67c <udev_util_encode_string@@LIBUDEV_183+0x13e4c>  // b.any
   1f648:	mov	x1, #0x1                   	// #1
   1f64c:	lsl	x1, x1, x0
   1f650:	mov	x0, #0x1                   	// #1
   1f654:	movk	x0, #0x20, lsl #16
   1f658:	movk	x0, #0x2, lsl #48
   1f65c:	and	x0, x1, x0
   1f660:	cmp	x0, #0x0
   1f664:	cset	w0, ne  // ne = any
   1f668:	and	w0, w0, #0xff
   1f66c:	cmp	w0, #0x0
   1f670:	b.eq	1f67c <udev_util_encode_string@@LIBUDEV_183+0x13e4c>  // b.none
   1f674:	mov	w0, #0x1                   	// #1
   1f678:	strb	w0, [sp, #42]
   1f67c:	nop
   1f680:	ldrb	w0, [sp, #42]
   1f684:	cmp	w0, #0x0
   1f688:	b.eq	1f6c0 <udev_util_encode_string@@LIBUDEV_183+0x13e90>  // b.none
   1f68c:	ldr	x1, [sp, #56]
   1f690:	ldr	x0, [sp, #64]
   1f694:	add	x0, x1, x0
   1f698:	ldr	x1, [sp, #16]
   1f69c:	add	x1, x1, x0
   1f6a0:	add	x0, sp, #0x58
   1f6a4:	mov	x4, x1
   1f6a8:	mov	x3, x0
   1f6ac:	ldr	x2, [sp, #64]
   1f6b0:	ldr	x1, [sp, #48]
   1f6b4:	ldr	x0, [sp, #24]
   1f6b8:	bl	1f40c <udev_util_encode_string@@LIBUDEV_183+0x13bdc>
   1f6bc:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f6c0:	ldr	x1, [sp, #56]
   1f6c4:	ldr	x0, [sp, #64]
   1f6c8:	add	x0, x1, x0
   1f6cc:	ldr	x1, [sp, #16]
   1f6d0:	add	x0, x1, x0
   1f6d4:	ldrb	w0, [x0]
   1f6d8:	ldrb	w1, [sp, #43]
   1f6dc:	cmp	w1, w0
   1f6e0:	b.eq	1f6ec <udev_util_encode_string@@LIBUDEV_183+0x13ebc>  // b.none
   1f6e4:	mov	w0, #0x0                   	// #0
   1f6e8:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f6ec:	ldr	x0, [sp, #64]
   1f6f0:	add	x0, x0, #0x1
   1f6f4:	str	x0, [sp, #64]
   1f6f8:	ldr	x0, [sp, #48]
   1f6fc:	ldr	x0, [x0]
   1f700:	mov	x1, x0
   1f704:	ldr	x0, [sp, #24]
   1f708:	bl	1f078 <udev_util_encode_string@@LIBUDEV_183+0x13848>
   1f70c:	mov	x1, x0
   1f710:	ldr	x0, [sp, #64]
   1f714:	add	x0, x1, x0
   1f718:	ldrb	w0, [x0]
   1f71c:	strb	w0, [sp, #43]
   1f720:	ldrb	w0, [sp, #43]
   1f724:	cmp	w0, #0x0
   1f728:	b.ne	1f628 <udev_util_encode_string@@LIBUDEV_183+0x13df8>  // b.any
   1f72c:	ldr	x1, [sp, #56]
   1f730:	ldr	x0, [sp, #64]
   1f734:	add	x0, x1, x0
   1f738:	str	x0, [sp, #56]
   1f73c:	mov	w2, #0x2a                  	// #42
   1f740:	ldr	x1, [sp, #48]
   1f744:	ldr	x0, [sp, #24]
   1f748:	bl	1f0e8 <udev_util_encode_string@@LIBUDEV_183+0x138b8>
   1f74c:	str	x0, [sp, #80]
   1f750:	ldr	x0, [sp, #80]
   1f754:	cmp	x0, #0x0
   1f758:	b.eq	1f7b0 <udev_util_encode_string@@LIBUDEV_183+0x13f80>  // b.none
   1f75c:	add	x0, sp, #0x58
   1f760:	mov	w1, #0x2a                  	// #42
   1f764:	bl	1ee38 <udev_util_encode_string@@LIBUDEV_183+0x13608>
   1f768:	ldr	x1, [sp, #16]
   1f76c:	ldr	x0, [sp, #56]
   1f770:	add	x1, x1, x0
   1f774:	add	x0, sp, #0x58
   1f778:	mov	x4, x1
   1f77c:	mov	x3, x0
   1f780:	mov	x2, #0x0                   	// #0
   1f784:	ldr	x1, [sp, #80]
   1f788:	ldr	x0, [sp, #24]
   1f78c:	bl	1f40c <udev_util_encode_string@@LIBUDEV_183+0x13bdc>
   1f790:	str	w0, [sp, #44]
   1f794:	ldr	w0, [sp, #44]
   1f798:	cmp	w0, #0x0
   1f79c:	b.ge	1f7a8 <udev_util_encode_string@@LIBUDEV_183+0x13f78>  // b.tcont
   1f7a0:	ldr	w0, [sp, #44]
   1f7a4:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f7a8:	add	x0, sp, #0x58
   1f7ac:	bl	1ef0c <udev_util_encode_string@@LIBUDEV_183+0x136dc>
   1f7b0:	mov	w2, #0x3f                  	// #63
   1f7b4:	ldr	x1, [sp, #48]
   1f7b8:	ldr	x0, [sp, #24]
   1f7bc:	bl	1f0e8 <udev_util_encode_string@@LIBUDEV_183+0x138b8>
   1f7c0:	str	x0, [sp, #80]
   1f7c4:	ldr	x0, [sp, #80]
   1f7c8:	cmp	x0, #0x0
   1f7cc:	b.eq	1f824 <udev_util_encode_string@@LIBUDEV_183+0x13ff4>  // b.none
   1f7d0:	add	x0, sp, #0x58
   1f7d4:	mov	w1, #0x3f                  	// #63
   1f7d8:	bl	1ee38 <udev_util_encode_string@@LIBUDEV_183+0x13608>
   1f7dc:	ldr	x1, [sp, #16]
   1f7e0:	ldr	x0, [sp, #56]
   1f7e4:	add	x1, x1, x0
   1f7e8:	add	x0, sp, #0x58
   1f7ec:	mov	x4, x1
   1f7f0:	mov	x3, x0
   1f7f4:	mov	x2, #0x0                   	// #0
   1f7f8:	ldr	x1, [sp, #80]
   1f7fc:	ldr	x0, [sp, #24]
   1f800:	bl	1f40c <udev_util_encode_string@@LIBUDEV_183+0x13bdc>
   1f804:	str	w0, [sp, #44]
   1f808:	ldr	w0, [sp, #44]
   1f80c:	cmp	w0, #0x0
   1f810:	b.ge	1f81c <udev_util_encode_string@@LIBUDEV_183+0x13fec>  // b.tcont
   1f814:	ldr	w0, [sp, #44]
   1f818:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f81c:	add	x0, sp, #0x58
   1f820:	bl	1ef0c <udev_util_encode_string@@LIBUDEV_183+0x136dc>
   1f824:	mov	w2, #0x5b                  	// #91
   1f828:	ldr	x1, [sp, #48]
   1f82c:	ldr	x0, [sp, #24]
   1f830:	bl	1f0e8 <udev_util_encode_string@@LIBUDEV_183+0x138b8>
   1f834:	str	x0, [sp, #80]
   1f838:	ldr	x0, [sp, #80]
   1f83c:	cmp	x0, #0x0
   1f840:	b.eq	1f898 <udev_util_encode_string@@LIBUDEV_183+0x14068>  // b.none
   1f844:	add	x0, sp, #0x58
   1f848:	mov	w1, #0x5b                  	// #91
   1f84c:	bl	1ee38 <udev_util_encode_string@@LIBUDEV_183+0x13608>
   1f850:	ldr	x1, [sp, #16]
   1f854:	ldr	x0, [sp, #56]
   1f858:	add	x1, x1, x0
   1f85c:	add	x0, sp, #0x58
   1f860:	mov	x4, x1
   1f864:	mov	x3, x0
   1f868:	mov	x2, #0x0                   	// #0
   1f86c:	ldr	x1, [sp, #80]
   1f870:	ldr	x0, [sp, #24]
   1f874:	bl	1f40c <udev_util_encode_string@@LIBUDEV_183+0x13bdc>
   1f878:	str	w0, [sp, #44]
   1f87c:	ldr	w0, [sp, #44]
   1f880:	cmp	w0, #0x0
   1f884:	b.ge	1f890 <udev_util_encode_string@@LIBUDEV_183+0x14060>  // b.tcont
   1f888:	ldr	w0, [sp, #44]
   1f88c:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f890:	add	x0, sp, #0x58
   1f894:	bl	1ef0c <udev_util_encode_string@@LIBUDEV_183+0x136dc>
   1f898:	ldr	x1, [sp, #16]
   1f89c:	ldr	x0, [sp, #56]
   1f8a0:	add	x0, x1, x0
   1f8a4:	ldrb	w0, [x0]
   1f8a8:	cmp	w0, #0x0
   1f8ac:	b.ne	1f91c <udev_util_encode_string@@LIBUDEV_183+0x140ec>  // b.any
   1f8b0:	str	xzr, [sp, #72]
   1f8b4:	b	1f8f8 <udev_util_encode_string@@LIBUDEV_183+0x140c8>
   1f8b8:	ldr	x2, [sp, #72]
   1f8bc:	ldr	x1, [sp, #48]
   1f8c0:	ldr	x0, [sp, #24]
   1f8c4:	bl	1efa0 <udev_util_encode_string@@LIBUDEV_183+0x13770>
   1f8c8:	mov	x1, x0
   1f8cc:	ldr	x0, [sp, #24]
   1f8d0:	bl	1f1d8 <udev_util_encode_string@@LIBUDEV_183+0x139a8>
   1f8d4:	str	w0, [sp, #44]
   1f8d8:	ldr	w0, [sp, #44]
   1f8dc:	cmp	w0, #0x0
   1f8e0:	b.ge	1f8ec <udev_util_encode_string@@LIBUDEV_183+0x140bc>  // b.tcont
   1f8e4:	ldr	w0, [sp, #44]
   1f8e8:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f8ec:	ldr	x0, [sp, #72]
   1f8f0:	add	x0, x0, #0x1
   1f8f4:	str	x0, [sp, #72]
   1f8f8:	ldr	x0, [sp, #48]
   1f8fc:	ldr	x0, [x0, #16]
   1f900:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1f904:	mov	x1, x0
   1f908:	ldr	x0, [sp, #72]
   1f90c:	cmp	x0, x1
   1f910:	b.cc	1f8b8 <udev_util_encode_string@@LIBUDEV_183+0x14088>  // b.lo, b.ul, b.last
   1f914:	mov	w0, #0x0                   	// #0
   1f918:	b	1f964 <udev_util_encode_string@@LIBUDEV_183+0x14134>
   1f91c:	ldr	x1, [sp, #16]
   1f920:	ldr	x0, [sp, #56]
   1f924:	add	x0, x1, x0
   1f928:	ldrb	w0, [x0]
   1f92c:	mov	w2, w0
   1f930:	ldr	x1, [sp, #48]
   1f934:	ldr	x0, [sp, #24]
   1f938:	bl	1f0e8 <udev_util_encode_string@@LIBUDEV_183+0x138b8>
   1f93c:	str	x0, [sp, #80]
   1f940:	ldr	x0, [sp, #80]
   1f944:	str	x0, [sp, #48]
   1f948:	ldr	x0, [sp, #56]
   1f94c:	add	x0, x0, #0x1
   1f950:	str	x0, [sp, #56]
   1f954:	ldr	x0, [sp, #48]
   1f958:	cmp	x0, #0x0
   1f95c:	b.ne	1f610 <udev_util_encode_string@@LIBUDEV_183+0x13de0>  // b.any
   1f960:	mov	w0, #0x0                   	// #0
   1f964:	mov	w1, w0
   1f968:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1f96c:	ldr	x0, [x0, #4016]
   1f970:	ldr	x2, [sp, #2152]
   1f974:	ldr	x0, [x0]
   1f978:	eor	x0, x2, x0
   1f97c:	cmp	x0, #0x0
   1f980:	b.eq	1f988 <udev_util_encode_string@@LIBUDEV_183+0x14158>  // b.none
   1f984:	bl	5390 <__stack_chk_fail@plt>
   1f988:	mov	w0, w1
   1f98c:	ldp	x29, x30, [sp]
   1f990:	add	sp, sp, #0x870
   1f994:	ret
   1f998:	stp	x29, x30, [sp, #-256]!
   1f99c:	mov	x29, sp
   1f9a0:	stp	x19, x20, [sp, #16]
   1f9a4:	str	x0, [sp, #40]
   1f9a8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   1f9ac:	ldr	x0, [x0, #4016]
   1f9b0:	ldr	x1, [x0]
   1f9b4:	str	x1, [sp, #248]
   1f9b8:	mov	x1, #0x0                   	// #0
   1f9bc:	str	xzr, [sp, #216]
   1f9c0:	mov	x0, #0x534b                	// #21323
   1f9c4:	movk	x0, #0x504c, lsl #16
   1f9c8:	movk	x0, #0x4848, lsl #32
   1f9cc:	movk	x0, #0x4852, lsl #48
   1f9d0:	str	x0, [sp, #240]
   1f9d4:	ldr	x0, [sp, #40]
   1f9d8:	cmp	x0, #0x0
   1f9dc:	cset	w0, ne  // ne = any
   1f9e0:	and	w0, w0, #0xff
   1f9e4:	and	x0, x0, #0xff
   1f9e8:	cmp	x0, #0x0
   1f9ec:	b.ne	1fa20 <udev_util_encode_string@@LIBUDEV_183+0x141f0>  // b.any
   1f9f0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1f9f4:	add	x1, x0, #0xc13
   1f9f8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1f9fc:	add	x4, x0, #0xef0
   1fa00:	mov	w3, #0x139                 	// #313
   1fa04:	mov	x2, x1
   1fa08:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fa0c:	add	x1, x0, #0xc58
   1fa10:	mov	w0, #0x0                   	// #0
   1fa14:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   1fa18:	mov	w0, #0x1                   	// #1
   1fa1c:	b	1fa24 <udev_util_encode_string@@LIBUDEV_183+0x141f4>
   1fa20:	mov	w0, #0x0                   	// #0
   1fa24:	cmp	w0, #0x0
   1fa28:	b.eq	1fa34 <udev_util_encode_string@@LIBUDEV_183+0x14204>  // b.none
   1fa2c:	mov	w19, #0xffffffea            	// #-22
   1fa30:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fa34:	mov	x1, #0xb8                  	// #184
   1fa38:	mov	x0, #0x1                   	// #1
   1fa3c:	bl	52f0 <calloc@plt>
   1fa40:	str	x0, [sp, #216]
   1fa44:	ldr	x0, [sp, #216]
   1fa48:	cmp	x0, #0x0
   1fa4c:	b.ne	1fa58 <udev_util_encode_string@@LIBUDEV_183+0x14228>  // b.any
   1fa50:	mov	w19, #0xfffffff4            	// #-12
   1fa54:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fa58:	ldr	x0, [sp, #216]
   1fa5c:	mov	w1, #0x1                   	// #1
   1fa60:	str	w1, [x0]
   1fa64:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fa68:	add	x0, x0, #0xe48
   1fa6c:	str	x0, [sp, #224]
   1fa70:	b	1fbd4 <udev_util_encode_string@@LIBUDEV_183+0x143a4>
   1fa74:	mov	w0, #0x7                   	// #7
   1fa78:	str	w0, [sp, #60]
   1fa7c:	str	wzr, [sp, #64]
   1fa80:	str	wzr, [sp, #68]
   1fa84:	ldr	w0, [sp, #68]
   1fa88:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1fa8c:	mov	w1, w0
   1fa90:	ldr	w0, [sp, #60]
   1fa94:	and	w0, w0, #0x7
   1fa98:	cmp	w1, w0
   1fa9c:	b.lt	1fae4 <udev_util_encode_string@@LIBUDEV_183+0x142b4>  // b.tstop
   1faa0:	ldr	w0, [sp, #68]
   1faa4:	lsl	w1, w0, #10
   1faa8:	ldr	w0, [sp, #60]
   1faac:	orr	w7, w1, w0
   1fab0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fab4:	add	x1, x0, #0xc13
   1fab8:	ldr	x6, [sp, #224]
   1fabc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fac0:	add	x5, x0, #0xc60
   1fac4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fac8:	add	x4, x0, #0xf00
   1facc:	mov	w3, #0x143                 	// #323
   1fad0:	mov	x2, x1
   1fad4:	ldr	w1, [sp, #64]
   1fad8:	mov	w0, w7
   1fadc:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1fae0:	b	1faec <udev_util_encode_string@@LIBUDEV_183+0x142bc>
   1fae4:	ldr	w0, [sp, #64]
   1fae8:	cmp	w0, #0x0
   1faec:	ldr	x19, [sp, #216]
   1faf0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1faf4:	add	x1, x0, #0xc78
   1faf8:	ldr	x0, [sp, #224]
   1fafc:	bl	5650 <fopen64@plt>
   1fb00:	str	x0, [x19, #8]
   1fb04:	ldr	x0, [sp, #216]
   1fb08:	ldr	x0, [x0, #8]
   1fb0c:	cmp	x0, #0x0
   1fb10:	b.ne	1fbf4 <udev_util_encode_string@@LIBUDEV_183+0x143c4>  // b.any
   1fb14:	bl	57d0 <__errno_location@plt>
   1fb18:	ldr	w0, [x0]
   1fb1c:	cmp	w0, #0x2
   1fb20:	b.eq	1fbb8 <udev_util_encode_string@@LIBUDEV_183+0x14388>  // b.none
   1fb24:	mov	w0, #0x7                   	// #7
   1fb28:	str	w0, [sp, #72]
   1fb2c:	bl	57d0 <__errno_location@plt>
   1fb30:	ldr	w0, [x0]
   1fb34:	str	w0, [sp, #76]
   1fb38:	str	wzr, [sp, #80]
   1fb3c:	ldr	w0, [sp, #80]
   1fb40:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1fb44:	mov	w1, w0
   1fb48:	ldr	w0, [sp, #72]
   1fb4c:	and	w0, w0, #0x7
   1fb50:	cmp	w1, w0
   1fb54:	b.lt	1fba0 <udev_util_encode_string@@LIBUDEV_183+0x14370>  // b.tstop
   1fb58:	ldr	w0, [sp, #80]
   1fb5c:	lsl	w1, w0, #10
   1fb60:	ldr	w0, [sp, #72]
   1fb64:	orr	w7, w1, w0
   1fb68:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fb6c:	add	x1, x0, #0xc13
   1fb70:	ldr	x6, [sp, #224]
   1fb74:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fb78:	add	x5, x0, #0xc80
   1fb7c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fb80:	add	x4, x0, #0xf00
   1fb84:	mov	w3, #0x148                 	// #328
   1fb88:	mov	x2, x1
   1fb8c:	ldr	w1, [sp, #76]
   1fb90:	mov	w0, w7
   1fb94:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1fb98:	mov	w19, w0
   1fb9c:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fba0:	ldr	w0, [sp, #76]
   1fba4:	cmp	w0, #0x0
   1fba8:	cneg	w0, w0, lt  // lt = tstop
   1fbac:	and	w0, w0, #0xff
   1fbb0:	neg	w19, w0
   1fbb4:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fbb8:	ldr	x0, [sp, #224]
   1fbbc:	bl	5040 <strlen@plt>
   1fbc0:	mov	x1, x0
   1fbc4:	ldr	x0, [sp, #224]
   1fbc8:	add	x0, x0, x1
   1fbcc:	add	x0, x0, #0x1
   1fbd0:	str	x0, [sp, #224]
   1fbd4:	ldr	x0, [sp, #224]
   1fbd8:	cmp	x0, #0x0
   1fbdc:	b.eq	1fbf8 <udev_util_encode_string@@LIBUDEV_183+0x143c8>  // b.none
   1fbe0:	ldr	x0, [sp, #224]
   1fbe4:	ldrb	w0, [x0]
   1fbe8:	cmp	w0, #0x0
   1fbec:	b.ne	1fa74 <udev_util_encode_string@@LIBUDEV_183+0x14244>  // b.any
   1fbf0:	b	1fbf8 <udev_util_encode_string@@LIBUDEV_183+0x143c8>
   1fbf4:	nop
   1fbf8:	ldr	x0, [sp, #216]
   1fbfc:	ldr	x0, [x0, #8]
   1fc00:	cmp	x0, #0x0
   1fc04:	b.ne	1fc98 <udev_util_encode_string@@LIBUDEV_183+0x14468>  // b.any
   1fc08:	mov	w0, #0x7                   	// #7
   1fc0c:	str	w0, [sp, #204]
   1fc10:	mov	w0, #0x2                   	// #2
   1fc14:	movk	w0, #0x4000, lsl #16
   1fc18:	str	w0, [sp, #208]
   1fc1c:	str	wzr, [sp, #212]
   1fc20:	ldr	w0, [sp, #212]
   1fc24:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1fc28:	mov	w1, w0
   1fc2c:	ldr	w0, [sp, #204]
   1fc30:	and	w0, w0, #0x7
   1fc34:	cmp	w1, w0
   1fc38:	b.lt	1fc80 <udev_util_encode_string@@LIBUDEV_183+0x14450>  // b.tstop
   1fc3c:	ldr	w0, [sp, #212]
   1fc40:	lsl	w1, w0, #10
   1fc44:	ldr	w0, [sp, #204]
   1fc48:	orr	w6, w1, w0
   1fc4c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fc50:	add	x1, x0, #0xc13
   1fc54:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fc58:	add	x5, x0, #0xc98
   1fc5c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fc60:	add	x4, x0, #0xf00
   1fc64:	mov	w3, #0x14c                 	// #332
   1fc68:	mov	x2, x1
   1fc6c:	ldr	w1, [sp, #208]
   1fc70:	mov	w0, w6
   1fc74:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1fc78:	mov	w19, w0
   1fc7c:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fc80:	ldr	w0, [sp, #208]
   1fc84:	cmp	w0, #0x0
   1fc88:	cneg	w0, w0, lt  // lt = tstop
   1fc8c:	and	w0, w0, #0xff
   1fc90:	neg	w19, w0
   1fc94:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fc98:	ldr	x0, [sp, #216]
   1fc9c:	ldr	x0, [x0, #8]
   1fca0:	bl	51c0 <fileno@plt>
   1fca4:	mov	w2, w0
   1fca8:	ldr	x0, [sp, #216]
   1fcac:	add	x0, x0, #0x10
   1fcb0:	mov	x1, x0
   1fcb4:	mov	w0, w2
   1fcb8:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   1fcbc:	cmp	w0, #0x0
   1fcc0:	b.ge	1fd58 <udev_util_encode_string@@LIBUDEV_183+0x14528>  // b.tcont
   1fcc4:	mov	w0, #0x7                   	// #7
   1fcc8:	str	w0, [sp, #192]
   1fccc:	bl	57d0 <__errno_location@plt>
   1fcd0:	ldr	w0, [x0]
   1fcd4:	str	w0, [sp, #196]
   1fcd8:	str	wzr, [sp, #200]
   1fcdc:	ldr	w0, [sp, #200]
   1fce0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1fce4:	mov	w1, w0
   1fce8:	ldr	w0, [sp, #192]
   1fcec:	and	w0, w0, #0x7
   1fcf0:	cmp	w1, w0
   1fcf4:	b.lt	1fd40 <udev_util_encode_string@@LIBUDEV_183+0x14510>  // b.tstop
   1fcf8:	ldr	w0, [sp, #200]
   1fcfc:	lsl	w1, w0, #10
   1fd00:	ldr	w0, [sp, #192]
   1fd04:	orr	w7, w1, w0
   1fd08:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fd0c:	add	x1, x0, #0xc13
   1fd10:	ldr	x6, [sp, #224]
   1fd14:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fd18:	add	x5, x0, #0xcd8
   1fd1c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fd20:	add	x4, x0, #0xf00
   1fd24:	mov	w3, #0x150                 	// #336
   1fd28:	mov	x2, x1
   1fd2c:	ldr	w1, [sp, #196]
   1fd30:	mov	w0, w7
   1fd34:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1fd38:	mov	w19, w0
   1fd3c:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fd40:	ldr	w0, [sp, #196]
   1fd44:	cmp	w0, #0x0
   1fd48:	cneg	w0, w0, lt  // lt = tstop
   1fd4c:	and	w0, w0, #0xff
   1fd50:	neg	w19, w0
   1fd54:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fd58:	ldr	x0, [sp, #216]
   1fd5c:	ldr	x0, [x0, #64]
   1fd60:	cmp	x0, #0x4f
   1fd64:	b.gt	1fdfc <udev_util_encode_string@@LIBUDEV_183+0x145cc>
   1fd68:	mov	w0, #0x7                   	// #7
   1fd6c:	str	w0, [sp, #180]
   1fd70:	mov	w0, #0x5                   	// #5
   1fd74:	movk	w0, #0x4000, lsl #16
   1fd78:	str	w0, [sp, #184]
   1fd7c:	str	wzr, [sp, #188]
   1fd80:	ldr	w0, [sp, #188]
   1fd84:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1fd88:	mov	w1, w0
   1fd8c:	ldr	w0, [sp, #180]
   1fd90:	and	w0, w0, #0x7
   1fd94:	cmp	w1, w0
   1fd98:	b.lt	1fde4 <udev_util_encode_string@@LIBUDEV_183+0x145b4>  // b.tstop
   1fd9c:	ldr	w0, [sp, #188]
   1fda0:	lsl	w1, w0, #10
   1fda4:	ldr	w0, [sp, #180]
   1fda8:	orr	w7, w1, w0
   1fdac:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fdb0:	add	x1, x0, #0xc13
   1fdb4:	ldr	x6, [sp, #224]
   1fdb8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fdbc:	add	x5, x0, #0xcf0
   1fdc0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fdc4:	add	x4, x0, #0xf00
   1fdc8:	mov	w3, #0x152                 	// #338
   1fdcc:	mov	x2, x1
   1fdd0:	ldr	w1, [sp, #184]
   1fdd4:	mov	w0, w7
   1fdd8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1fddc:	mov	w19, w0
   1fde0:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fde4:	ldr	w0, [sp, #184]
   1fde8:	cmp	w0, #0x0
   1fdec:	cneg	w0, w0, lt  // lt = tstop
   1fdf0:	and	w0, w0, #0xff
   1fdf4:	neg	w19, w0
   1fdf8:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fdfc:	ldr	x0, [sp, #216]
   1fe00:	ldr	x0, [x0, #64]
   1fe04:	mov	x20, x0
   1fe08:	ldr	x0, [sp, #216]
   1fe0c:	ldr	x0, [x0, #8]
   1fe10:	bl	51c0 <fileno@plt>
   1fe14:	ldr	x19, [sp, #216]
   1fe18:	mov	x5, #0x0                   	// #0
   1fe1c:	mov	w4, w0
   1fe20:	mov	w3, #0x1                   	// #1
   1fe24:	mov	w2, #0x1                   	// #1
   1fe28:	mov	x1, x20
   1fe2c:	mov	x0, #0x0                   	// #0
   1fe30:	bl	57e0 <mmap64@plt>
   1fe34:	str	x0, [x19, #144]
   1fe38:	ldr	x0, [sp, #216]
   1fe3c:	ldr	x0, [x0, #144]
   1fe40:	cmn	x0, #0x1
   1fe44:	b.ne	1fedc <udev_util_encode_string@@LIBUDEV_183+0x146ac>  // b.any
   1fe48:	mov	w0, #0x7                   	// #7
   1fe4c:	str	w0, [sp, #168]
   1fe50:	bl	57d0 <__errno_location@plt>
   1fe54:	ldr	w0, [x0]
   1fe58:	str	w0, [sp, #172]
   1fe5c:	str	wzr, [sp, #176]
   1fe60:	ldr	w0, [sp, #176]
   1fe64:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1fe68:	mov	w1, w0
   1fe6c:	ldr	w0, [sp, #168]
   1fe70:	and	w0, w0, #0x7
   1fe74:	cmp	w1, w0
   1fe78:	b.lt	1fec4 <udev_util_encode_string@@LIBUDEV_183+0x14694>  // b.tstop
   1fe7c:	ldr	w0, [sp, #176]
   1fe80:	lsl	w1, w0, #10
   1fe84:	ldr	w0, [sp, #168]
   1fe88:	orr	w7, w1, w0
   1fe8c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fe90:	add	x1, x0, #0xc13
   1fe94:	ldr	x6, [sp, #224]
   1fe98:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fe9c:	add	x5, x0, #0xd10
   1fea0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1fea4:	add	x4, x0, #0xf00
   1fea8:	mov	w3, #0x157                 	// #343
   1feac:	mov	x2, x1
   1feb0:	ldr	w1, [sp, #172]
   1feb4:	mov	w0, w7
   1feb8:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1febc:	mov	w19, w0
   1fec0:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fec4:	ldr	w0, [sp, #172]
   1fec8:	cmp	w0, #0x0
   1fecc:	cneg	w0, w0, lt  // lt = tstop
   1fed0:	and	w0, w0, #0xff
   1fed4:	neg	w19, w0
   1fed8:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1fedc:	ldr	x0, [sp, #216]
   1fee0:	ldr	x0, [x0, #144]
   1fee4:	add	x1, sp, #0xf0
   1fee8:	mov	x2, #0x8                   	// #8
   1feec:	bl	5410 <memcmp@plt>
   1fef0:	cmp	w0, #0x0
   1fef4:	b.ne	1ff1c <udev_util_encode_string@@LIBUDEV_183+0x146ec>  // b.any
   1fef8:	ldr	x0, [sp, #216]
   1fefc:	ldr	x0, [x0, #64]
   1ff00:	mov	x19, x0
   1ff04:	ldr	x0, [sp, #216]
   1ff08:	ldr	x0, [x0, #144]
   1ff0c:	ldr	x0, [x0, #16]
   1ff10:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   1ff14:	cmp	x19, x0
   1ff18:	b.eq	1ff9c <udev_util_encode_string@@LIBUDEV_183+0x1476c>  // b.none
   1ff1c:	mov	w0, #0x7                   	// #7
   1ff20:	str	w0, [sp, #156]
   1ff24:	str	wzr, [sp, #160]
   1ff28:	str	wzr, [sp, #164]
   1ff2c:	ldr	w0, [sp, #164]
   1ff30:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1ff34:	mov	w1, w0
   1ff38:	ldr	w0, [sp, #156]
   1ff3c:	and	w0, w0, #0x7
   1ff40:	cmp	w1, w0
   1ff44:	b.lt	1ff8c <udev_util_encode_string@@LIBUDEV_183+0x1475c>  // b.tstop
   1ff48:	ldr	w0, [sp, #164]
   1ff4c:	lsl	w1, w0, #10
   1ff50:	ldr	w0, [sp, #156]
   1ff54:	orr	w7, w1, w0
   1ff58:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ff5c:	add	x1, x0, #0xc13
   1ff60:	ldr	x6, [sp, #224]
   1ff64:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ff68:	add	x5, x0, #0xd28
   1ff6c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ff70:	add	x4, x0, #0xf00
   1ff74:	mov	w3, #0x15b                 	// #347
   1ff78:	mov	x2, x1
   1ff7c:	ldr	w1, [sp, #160]
   1ff80:	mov	w0, w7
   1ff84:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   1ff88:	b	1ff94 <udev_util_encode_string@@LIBUDEV_183+0x14764>
   1ff8c:	ldr	w0, [sp, #160]
   1ff90:	cmp	w0, #0x0
   1ff94:	mov	w19, #0xffffffea            	// #-22
   1ff98:	b	202cc <udev_util_encode_string@@LIBUDEV_183+0x14a9c>
   1ff9c:	mov	w0, #0x7                   	// #7
   1ffa0:	str	w0, [sp, #84]
   1ffa4:	str	wzr, [sp, #88]
   1ffa8:	str	wzr, [sp, #92]
   1ffac:	ldr	w0, [sp, #92]
   1ffb0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   1ffb4:	mov	w1, w0
   1ffb8:	ldr	w0, [sp, #84]
   1ffbc:	and	w0, w0, #0x7
   1ffc0:	cmp	w1, w0
   1ffc4:	b.lt	20008 <udev_util_encode_string@@LIBUDEV_183+0x147d8>  // b.tstop
   1ffc8:	ldr	w0, [sp, #92]
   1ffcc:	lsl	w1, w0, #10
   1ffd0:	ldr	w0, [sp, #84]
   1ffd4:	orr	w6, w1, w0
   1ffd8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ffdc:	add	x1, x0, #0xc13
   1ffe0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ffe4:	add	x5, x0, #0xd50
   1ffe8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   1ffec:	add	x4, x0, #0xf00
   1fff0:	mov	w3, #0x15f                 	// #351
   1fff4:	mov	x2, x1
   1fff8:	ldr	w1, [sp, #88]
   1fffc:	mov	w0, w6
   20000:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   20004:	b	20010 <udev_util_encode_string@@LIBUDEV_183+0x147e0>
   20008:	ldr	w0, [sp, #88]
   2000c:	cmp	w0, #0x0
   20010:	mov	w0, #0x7                   	// #7
   20014:	str	w0, [sp, #96]
   20018:	str	wzr, [sp, #100]
   2001c:	str	wzr, [sp, #104]
   20020:	ldr	w0, [sp, #104]
   20024:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   20028:	mov	w1, w0
   2002c:	ldr	w0, [sp, #96]
   20030:	and	w0, w0, #0x7
   20034:	cmp	w1, w0
   20038:	b.lt	20090 <udev_util_encode_string@@LIBUDEV_183+0x14860>  // b.tstop
   2003c:	ldr	w0, [sp, #104]
   20040:	lsl	w1, w0, #10
   20044:	ldr	w0, [sp, #96]
   20048:	orr	w19, w1, w0
   2004c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20050:	add	x20, x0, #0xc13
   20054:	ldr	x0, [sp, #216]
   20058:	ldr	x0, [x0, #144]
   2005c:	ldr	x0, [x0, #8]
   20060:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   20064:	mov	x6, x0
   20068:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2006c:	add	x5, x0, #0xd68
   20070:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20074:	add	x4, x0, #0xf00
   20078:	mov	w3, #0x160                 	// #352
   2007c:	mov	x2, x20
   20080:	ldr	w1, [sp, #100]
   20084:	mov	w0, w19
   20088:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   2008c:	b	20098 <udev_util_encode_string@@LIBUDEV_183+0x14868>
   20090:	ldr	w0, [sp, #100]
   20094:	cmp	w0, #0x0
   20098:	mov	w0, #0x7                   	// #7
   2009c:	str	w0, [sp, #108]
   200a0:	str	wzr, [sp, #112]
   200a4:	str	wzr, [sp, #116]
   200a8:	ldr	w0, [sp, #116]
   200ac:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   200b0:	mov	w1, w0
   200b4:	ldr	w0, [sp, #108]
   200b8:	and	w0, w0, #0x7
   200bc:	cmp	w1, w0
   200c0:	b.lt	20110 <udev_util_encode_string@@LIBUDEV_183+0x148e0>  // b.tstop
   200c4:	ldr	w0, [sp, #116]
   200c8:	lsl	w1, w0, #10
   200cc:	ldr	w0, [sp, #108]
   200d0:	orr	w7, w1, w0
   200d4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   200d8:	add	x1, x0, #0xc13
   200dc:	ldr	x0, [sp, #216]
   200e0:	ldr	x0, [x0, #64]
   200e4:	mov	x6, x0
   200e8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   200ec:	add	x5, x0, #0xd88
   200f0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   200f4:	add	x4, x0, #0xf00
   200f8:	mov	w3, #0x161                 	// #353
   200fc:	mov	x2, x1
   20100:	ldr	w1, [sp, #112]
   20104:	mov	w0, w7
   20108:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   2010c:	b	20118 <udev_util_encode_string@@LIBUDEV_183+0x148e8>
   20110:	ldr	w0, [sp, #112]
   20114:	cmp	w0, #0x0
   20118:	mov	w0, #0x7                   	// #7
   2011c:	str	w0, [sp, #120]
   20120:	str	wzr, [sp, #124]
   20124:	str	wzr, [sp, #128]
   20128:	ldr	w0, [sp, #128]
   2012c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   20130:	mov	w1, w0
   20134:	ldr	w0, [sp, #120]
   20138:	and	w0, w0, #0x7
   2013c:	cmp	w1, w0
   20140:	b.lt	20198 <udev_util_encode_string@@LIBUDEV_183+0x14968>  // b.tstop
   20144:	ldr	w0, [sp, #128]
   20148:	lsl	w1, w0, #10
   2014c:	ldr	w0, [sp, #120]
   20150:	orr	w19, w1, w0
   20154:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20158:	add	x20, x0, #0xc13
   2015c:	ldr	x0, [sp, #216]
   20160:	ldr	x0, [x0, #144]
   20164:	ldr	x0, [x0, #24]
   20168:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   2016c:	mov	x6, x0
   20170:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20174:	add	x5, x0, #0xda8
   20178:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2017c:	add	x4, x0, #0xf00
   20180:	mov	w3, #0x162                 	// #354
   20184:	mov	x2, x20
   20188:	ldr	w1, [sp, #124]
   2018c:	mov	w0, w19
   20190:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   20194:	b	201a0 <udev_util_encode_string@@LIBUDEV_183+0x14970>
   20198:	ldr	w0, [sp, #124]
   2019c:	cmp	w0, #0x0
   201a0:	mov	w0, #0x7                   	// #7
   201a4:	str	w0, [sp, #132]
   201a8:	str	wzr, [sp, #136]
   201ac:	str	wzr, [sp, #140]
   201b0:	ldr	w0, [sp, #140]
   201b4:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   201b8:	mov	w1, w0
   201bc:	ldr	w0, [sp, #132]
   201c0:	and	w0, w0, #0x7
   201c4:	cmp	w1, w0
   201c8:	b.lt	20220 <udev_util_encode_string@@LIBUDEV_183+0x149f0>  // b.tstop
   201cc:	ldr	w0, [sp, #140]
   201d0:	lsl	w1, w0, #10
   201d4:	ldr	w0, [sp, #132]
   201d8:	orr	w19, w1, w0
   201dc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   201e0:	add	x20, x0, #0xc13
   201e4:	ldr	x0, [sp, #216]
   201e8:	ldr	x0, [x0, #144]
   201ec:	ldr	x0, [x0, #72]
   201f0:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   201f4:	mov	x6, x0
   201f8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   201fc:	add	x5, x0, #0xdc8
   20200:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20204:	add	x4, x0, #0xf00
   20208:	mov	w3, #0x163                 	// #355
   2020c:	mov	x2, x20
   20210:	ldr	w1, [sp, #136]
   20214:	mov	w0, w19
   20218:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   2021c:	b	20228 <udev_util_encode_string@@LIBUDEV_183+0x149f8>
   20220:	ldr	w0, [sp, #136]
   20224:	cmp	w0, #0x0
   20228:	mov	w0, #0x7                   	// #7
   2022c:	str	w0, [sp, #144]
   20230:	str	wzr, [sp, #148]
   20234:	str	wzr, [sp, #152]
   20238:	ldr	w0, [sp, #152]
   2023c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   20240:	mov	w1, w0
   20244:	ldr	w0, [sp, #144]
   20248:	and	w0, w0, #0x7
   2024c:	cmp	w1, w0
   20250:	b.lt	202a8 <udev_util_encode_string@@LIBUDEV_183+0x14a78>  // b.tstop
   20254:	ldr	w0, [sp, #152]
   20258:	lsl	w1, w0, #10
   2025c:	ldr	w0, [sp, #144]
   20260:	orr	w19, w1, w0
   20264:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20268:	add	x20, x0, #0xc13
   2026c:	ldr	x0, [sp, #216]
   20270:	ldr	x0, [x0, #144]
   20274:	ldr	x0, [x0, #64]
   20278:	bl	1ed4c <udev_util_encode_string@@LIBUDEV_183+0x1351c>
   2027c:	mov	x6, x0
   20280:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20284:	add	x5, x0, #0xde8
   20288:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2028c:	add	x4, x0, #0xf00
   20290:	mov	w3, #0x164                 	// #356
   20294:	mov	x2, x20
   20298:	ldr	w1, [sp, #148]
   2029c:	mov	w0, w19
   202a0:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   202a4:	b	202b0 <udev_util_encode_string@@LIBUDEV_183+0x14a80>
   202a8:	ldr	w0, [sp, #148]
   202ac:	cmp	w0, #0x0
   202b0:	ldr	x0, [sp, #216]
   202b4:	str	x0, [sp, #232]
   202b8:	str	xzr, [sp, #216]
   202bc:	ldr	x1, [sp, #232]
   202c0:	ldr	x0, [sp, #40]
   202c4:	str	x1, [x0]
   202c8:	mov	w19, #0x0                   	// #0
   202cc:	add	x0, sp, #0xd8
   202d0:	bl	1ec24 <udev_util_encode_string@@LIBUDEV_183+0x133f4>
   202d4:	mov	w1, w19
   202d8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   202dc:	ldr	x0, [x0, #4016]
   202e0:	ldr	x2, [sp, #248]
   202e4:	ldr	x0, [x0]
   202e8:	eor	x0, x2, x0
   202ec:	cmp	x0, #0x0
   202f0:	b.eq	202f8 <udev_util_encode_string@@LIBUDEV_183+0x14ac8>  // b.none
   202f4:	bl	5390 <__stack_chk_fail@plt>
   202f8:	mov	w0, w1
   202fc:	ldp	x19, x20, [sp, #16]
   20300:	ldp	x29, x30, [sp], #256
   20304:	ret
   20308:	stp	x29, x30, [sp, #-32]!
   2030c:	mov	x29, sp
   20310:	str	x0, [sp, #24]
   20314:	ldr	x0, [sp, #24]
   20318:	cmp	x0, #0x0
   2031c:	cset	w0, eq  // eq = none
   20320:	and	w0, w0, #0xff
   20324:	and	x0, x0, #0xff
   20328:	cmp	x0, #0x0
   2032c:	b.eq	20358 <udev_util_encode_string@@LIBUDEV_183+0x14b28>  // b.none
   20330:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20334:	add	x1, x0, #0xc13
   20338:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2033c:	add	x4, x0, #0xf10
   20340:	mov	w3, #0x16c                 	// #364
   20344:	mov	x2, x1
   20348:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2034c:	add	x1, x0, #0xc50
   20350:	mov	w0, #0x0                   	// #0
   20354:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20358:	ldr	x0, [sp, #24]
   2035c:	ldr	x0, [x0, #144]
   20360:	cmp	x0, #0x0
   20364:	b.eq	20384 <udev_util_encode_string@@LIBUDEV_183+0x14b54>  // b.none
   20368:	ldr	x0, [sp, #24]
   2036c:	ldr	x2, [x0, #144]
   20370:	ldr	x0, [sp, #24]
   20374:	ldr	x0, [x0, #64]
   20378:	mov	x1, x0
   2037c:	mov	x0, x2
   20380:	bl	55f0 <munmap@plt>
   20384:	ldr	x0, [sp, #24]
   20388:	ldr	x0, [x0, #8]
   2038c:	bl	23070 <udev_util_encode_string@@LIBUDEV_183+0x17840>
   20390:	ldr	x0, [sp, #24]
   20394:	ldr	x0, [x0, #152]
   20398:	bl	1ec78 <udev_util_encode_string@@LIBUDEV_183+0x13448>
   2039c:	ldr	x0, [sp, #24]
   203a0:	bl	1ec58 <udev_util_encode_string@@LIBUDEV_183+0x13428>
   203a4:	ldp	x29, x30, [sp], #32
   203a8:	ret
   203ac:	stp	x29, x30, [sp, #-32]!
   203b0:	mov	x29, sp
   203b4:	str	x0, [sp, #24]
   203b8:	ldr	x0, [sp, #24]
   203bc:	cmp	x0, #0x0
   203c0:	b.ne	203cc <udev_util_encode_string@@LIBUDEV_183+0x14b9c>  // b.any
   203c4:	mov	x0, #0x0                   	// #0
   203c8:	b	20448 <udev_util_encode_string@@LIBUDEV_183+0x14c18>
   203cc:	ldr	x0, [sp, #24]
   203d0:	ldr	w0, [x0]
   203d4:	cmp	w0, #0x0
   203d8:	cset	w0, eq  // eq = none
   203dc:	and	w0, w0, #0xff
   203e0:	and	x0, x0, #0xff
   203e4:	cmp	x0, #0x0
   203e8:	b.eq	20414 <udev_util_encode_string@@LIBUDEV_183+0x14be4>  // b.none
   203ec:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   203f0:	add	x1, x0, #0xc13
   203f4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   203f8:	add	x4, x0, #0xf20
   203fc:	mov	w3, #0x175                 	// #373
   20400:	mov	x2, x1
   20404:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20408:	add	x1, x0, #0xe08
   2040c:	mov	w0, #0x0                   	// #0
   20410:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20414:	ldr	x0, [sp, #24]
   20418:	ldr	w0, [x0]
   2041c:	sub	w1, w0, #0x1
   20420:	ldr	x0, [sp, #24]
   20424:	str	w1, [x0]
   20428:	ldr	x0, [sp, #24]
   2042c:	ldr	w0, [x0]
   20430:	cmp	w0, #0x0
   20434:	b.eq	20440 <udev_util_encode_string@@LIBUDEV_183+0x14c10>  // b.none
   20438:	mov	x0, #0x0                   	// #0
   2043c:	b	20448 <udev_util_encode_string@@LIBUDEV_183+0x14c18>
   20440:	ldr	x0, [sp, #24]
   20444:	bl	20308 <udev_util_encode_string@@LIBUDEV_183+0x14ad8>
   20448:	ldp	x29, x30, [sp], #32
   2044c:	ret
   20450:	stp	x29, x30, [sp, #-32]!
   20454:	mov	x29, sp
   20458:	str	x0, [sp, #24]
   2045c:	str	x1, [sp, #16]
   20460:	ldr	x0, [sp, #24]
   20464:	cmp	x0, #0x0
   20468:	cset	w0, eq  // eq = none
   2046c:	and	w0, w0, #0xff
   20470:	and	x0, x0, #0xff
   20474:	cmp	x0, #0x0
   20478:	b.eq	204a4 <udev_util_encode_string@@LIBUDEV_183+0x14c74>  // b.none
   2047c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20480:	add	x1, x0, #0xc13
   20484:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20488:	add	x4, x0, #0xf30
   2048c:	mov	w3, #0x190                 	// #400
   20490:	mov	x2, x1
   20494:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20498:	add	x1, x0, #0xc50
   2049c:	mov	w0, #0x0                   	// #0
   204a0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   204a4:	ldr	x0, [sp, #16]
   204a8:	cmp	x0, #0x0
   204ac:	cset	w0, eq  // eq = none
   204b0:	and	w0, w0, #0xff
   204b4:	and	x0, x0, #0xff
   204b8:	cmp	x0, #0x0
   204bc:	b.eq	204e8 <udev_util_encode_string@@LIBUDEV_183+0x14cb8>  // b.none
   204c0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   204c4:	add	x1, x0, #0xc13
   204c8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   204cc:	add	x4, x0, #0xf30
   204d0:	mov	w3, #0x191                 	// #401
   204d4:	mov	x2, x1
   204d8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   204dc:	add	x1, x0, #0xe18
   204e0:	mov	w0, #0x0                   	// #0
   204e4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   204e8:	ldr	x0, [sp, #24]
   204ec:	ldr	x0, [x0, #152]
   204f0:	bl	1ed24 <udev_util_encode_string@@LIBUDEV_183+0x134f4>
   204f4:	ldr	x0, [sp, #24]
   204f8:	mov	w1, #0x1                   	// #1
   204fc:	strb	w1, [x0, #176]
   20500:	ldr	x1, [sp, #16]
   20504:	ldr	x0, [sp, #24]
   20508:	bl	1f5bc <udev_util_encode_string@@LIBUDEV_183+0x13d8c>
   2050c:	ldp	x29, x30, [sp], #32
   20510:	ret
   20514:	stp	x29, x30, [sp, #-48]!
   20518:	mov	x29, sp
   2051c:	str	x0, [sp, #24]
   20520:	str	x1, [sp, #16]
   20524:	ldr	x0, [sp, #24]
   20528:	cmp	x0, #0x0
   2052c:	cset	w0, ne  // ne = any
   20530:	and	w0, w0, #0xff
   20534:	and	x0, x0, #0xff
   20538:	cmp	x0, #0x0
   2053c:	b.ne	20570 <udev_util_encode_string@@LIBUDEV_183+0x14d40>  // b.any
   20540:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20544:	add	x1, x0, #0xc13
   20548:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2054c:	add	x4, x0, #0xf48
   20550:	mov	w3, #0x1b2                 	// #434
   20554:	mov	x2, x1
   20558:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2055c:	add	x1, x0, #0xc50
   20560:	mov	w0, #0x0                   	// #0
   20564:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   20568:	mov	w0, #0x1                   	// #1
   2056c:	b	20574 <udev_util_encode_string@@LIBUDEV_183+0x14d44>
   20570:	mov	w0, #0x0                   	// #0
   20574:	cmp	w0, #0x0
   20578:	b.eq	20584 <udev_util_encode_string@@LIBUDEV_183+0x14d54>  // b.none
   2057c:	mov	w0, #0xffffffea            	// #-22
   20580:	b	2068c <udev_util_encode_string@@LIBUDEV_183+0x14e5c>
   20584:	ldr	x0, [sp, #24]
   20588:	ldr	x0, [x0, #8]
   2058c:	cmp	x0, #0x0
   20590:	cset	w0, ne  // ne = any
   20594:	and	w0, w0, #0xff
   20598:	and	x0, x0, #0xff
   2059c:	cmp	x0, #0x0
   205a0:	b.ne	205d4 <udev_util_encode_string@@LIBUDEV_183+0x14da4>  // b.any
   205a4:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   205a8:	add	x1, x0, #0xc13
   205ac:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   205b0:	add	x4, x0, #0xf48
   205b4:	mov	w3, #0x1b3                 	// #435
   205b8:	mov	x2, x1
   205bc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   205c0:	add	x1, x0, #0xe28
   205c4:	mov	w0, #0x0                   	// #0
   205c8:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   205cc:	mov	w0, #0x1                   	// #1
   205d0:	b	205d8 <udev_util_encode_string@@LIBUDEV_183+0x14da8>
   205d4:	mov	w0, #0x0                   	// #0
   205d8:	cmp	w0, #0x0
   205dc:	b.eq	205e8 <udev_util_encode_string@@LIBUDEV_183+0x14db8>  // b.none
   205e0:	mov	w0, #0xffffffea            	// #-22
   205e4:	b	2068c <udev_util_encode_string@@LIBUDEV_183+0x14e5c>
   205e8:	ldr	x0, [sp, #16]
   205ec:	cmp	x0, #0x0
   205f0:	cset	w0, ne  // ne = any
   205f4:	and	w0, w0, #0xff
   205f8:	and	x0, x0, #0xff
   205fc:	cmp	x0, #0x0
   20600:	b.ne	20634 <udev_util_encode_string@@LIBUDEV_183+0x14e04>  // b.any
   20604:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20608:	add	x1, x0, #0xc13
   2060c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20610:	add	x4, x0, #0xf48
   20614:	mov	w3, #0x1b4                 	// #436
   20618:	mov	x2, x1
   2061c:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20620:	add	x1, x0, #0xe18
   20624:	mov	w0, #0x0                   	// #0
   20628:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   2062c:	mov	w0, #0x1                   	// #1
   20630:	b	20638 <udev_util_encode_string@@LIBUDEV_183+0x14e08>
   20634:	mov	w0, #0x0                   	// #0
   20638:	cmp	w0, #0x0
   2063c:	b.eq	20648 <udev_util_encode_string@@LIBUDEV_183+0x14e18>  // b.none
   20640:	mov	w0, #0xffffffea            	// #-22
   20644:	b	2068c <udev_util_encode_string@@LIBUDEV_183+0x14e5c>
   20648:	ldr	x1, [sp, #16]
   2064c:	ldr	x0, [sp, #24]
   20650:	bl	20450 <udev_util_encode_string@@LIBUDEV_183+0x14c20>
   20654:	str	w0, [sp, #44]
   20658:	ldr	w0, [sp, #44]
   2065c:	cmp	w0, #0x0
   20660:	b.ge	2066c <udev_util_encode_string@@LIBUDEV_183+0x14e3c>  // b.tcont
   20664:	ldr	w0, [sp, #44]
   20668:	b	2068c <udev_util_encode_string@@LIBUDEV_183+0x14e5c>
   2066c:	ldr	x0, [sp, #24]
   20670:	strb	wzr, [x0, #176]
   20674:	ldr	x0, [sp, #24]
   20678:	mov	w1, #0xfffffffe            	// #-2
   2067c:	str	w1, [x0, #160]
   20680:	ldr	x0, [sp, #24]
   20684:	str	xzr, [x0, #168]
   20688:	mov	w0, #0x0                   	// #0
   2068c:	ldp	x29, x30, [sp], #48
   20690:	ret
   20694:	stp	x29, x30, [sp, #-80]!
   20698:	mov	x29, sp
   2069c:	str	x0, [sp, #40]
   206a0:	str	x1, [sp, #32]
   206a4:	str	x2, [sp, #24]
   206a8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   206ac:	ldr	x0, [x0, #4016]
   206b0:	ldr	x1, [x0]
   206b4:	str	x1, [sp, #72]
   206b8:	mov	x1, #0x0                   	// #0
   206bc:	ldr	x0, [sp, #40]
   206c0:	cmp	x0, #0x0
   206c4:	cset	w0, ne  // ne = any
   206c8:	and	w0, w0, #0xff
   206cc:	and	x0, x0, #0xff
   206d0:	cmp	x0, #0x0
   206d4:	b.ne	20708 <udev_util_encode_string@@LIBUDEV_183+0x14ed8>  // b.any
   206d8:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   206dc:	add	x1, x0, #0xc13
   206e0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   206e4:	add	x4, x0, #0xf58
   206e8:	mov	w3, #0x1c4                 	// #452
   206ec:	mov	x2, x1
   206f0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   206f4:	add	x1, x0, #0xc50
   206f8:	mov	w0, #0x0                   	// #0
   206fc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   20700:	mov	w0, #0x1                   	// #1
   20704:	b	2070c <udev_util_encode_string@@LIBUDEV_183+0x14edc>
   20708:	mov	w0, #0x0                   	// #0
   2070c:	cmp	w0, #0x0
   20710:	b.eq	2071c <udev_util_encode_string@@LIBUDEV_183+0x14eec>  // b.none
   20714:	mov	w0, #0xffffffea            	// #-22
   20718:	b	2086c <udev_util_encode_string@@LIBUDEV_183+0x1503c>
   2071c:	ldr	x0, [sp, #32]
   20720:	cmp	x0, #0x0
   20724:	cset	w0, ne  // ne = any
   20728:	and	w0, w0, #0xff
   2072c:	and	x0, x0, #0xff
   20730:	cmp	x0, #0x0
   20734:	b.ne	20768 <udev_util_encode_string@@LIBUDEV_183+0x14f38>  // b.any
   20738:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2073c:	add	x1, x0, #0xc13
   20740:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20744:	add	x4, x0, #0xf58
   20748:	mov	w3, #0x1c5                 	// #453
   2074c:	mov	x2, x1
   20750:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   20754:	add	x1, x0, #0xe38
   20758:	mov	w0, #0x0                   	// #0
   2075c:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   20760:	mov	w0, #0x1                   	// #1
   20764:	b	2076c <udev_util_encode_string@@LIBUDEV_183+0x14f3c>
   20768:	mov	w0, #0x0                   	// #0
   2076c:	cmp	w0, #0x0
   20770:	b.eq	2077c <udev_util_encode_string@@LIBUDEV_183+0x14f4c>  // b.none
   20774:	mov	w0, #0xffffffea            	// #-22
   20778:	b	2086c <udev_util_encode_string@@LIBUDEV_183+0x1503c>
   2077c:	ldr	x0, [sp, #24]
   20780:	cmp	x0, #0x0
   20784:	cset	w0, ne  // ne = any
   20788:	and	w0, w0, #0xff
   2078c:	and	x0, x0, #0xff
   20790:	cmp	x0, #0x0
   20794:	b.ne	207c8 <udev_util_encode_string@@LIBUDEV_183+0x14f98>  // b.any
   20798:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   2079c:	add	x1, x0, #0xc13
   207a0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   207a4:	add	x4, x0, #0xf58
   207a8:	mov	w3, #0x1c6                 	// #454
   207ac:	mov	x2, x1
   207b0:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   207b4:	add	x1, x0, #0xe40
   207b8:	mov	w0, #0x0                   	// #0
   207bc:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   207c0:	mov	w0, #0x1                   	// #1
   207c4:	b	207cc <udev_util_encode_string@@LIBUDEV_183+0x14f9c>
   207c8:	mov	w0, #0x0                   	// #0
   207cc:	cmp	w0, #0x0
   207d0:	b.eq	207dc <udev_util_encode_string@@LIBUDEV_183+0x14fac>  // b.none
   207d4:	mov	w0, #0xffffffea            	// #-22
   207d8:	b	2086c <udev_util_encode_string@@LIBUDEV_183+0x1503c>
   207dc:	ldr	x0, [sp, #40]
   207e0:	ldrb	w0, [x0, #176]
   207e4:	cmp	w0, #0x0
   207e8:	b.eq	207f4 <udev_util_encode_string@@LIBUDEV_183+0x14fc4>  // b.none
   207ec:	mov	w0, #0xfffffff5            	// #-11
   207f0:	b	2086c <udev_util_encode_string@@LIBUDEV_183+0x1503c>
   207f4:	ldr	x0, [sp, #40]
   207f8:	ldr	x4, [x0, #152]
   207fc:	ldr	x0, [sp, #40]
   20800:	add	x0, x0, #0xa0
   20804:	add	x2, sp, #0x40
   20808:	add	x1, sp, #0x38
   2080c:	mov	x3, x2
   20810:	mov	x2, x1
   20814:	mov	x1, x0
   20818:	mov	x0, x4
   2081c:	bl	1ecec <udev_util_encode_string@@LIBUDEV_183+0x134bc>
   20820:	and	w0, w0, #0xff
   20824:	eor	w0, w0, #0x1
   20828:	and	w0, w0, #0xff
   2082c:	cmp	w0, #0x0
   20830:	b.eq	2083c <udev_util_encode_string@@LIBUDEV_183+0x1500c>  // b.none
   20834:	mov	w0, #0x0                   	// #0
   20838:	b	2086c <udev_util_encode_string@@LIBUDEV_183+0x1503c>
   2083c:	ldr	x1, [sp, #64]
   20840:	ldr	x0, [sp, #32]
   20844:	str	x1, [x0]
   20848:	ldr	x0, [sp, #56]
   2084c:	ldr	x0, [x0, #8]
   20850:	mov	x1, x0
   20854:	ldr	x0, [sp, #40]
   20858:	bl	1f078 <udev_util_encode_string@@LIBUDEV_183+0x13848>
   2085c:	mov	x1, x0
   20860:	ldr	x0, [sp, #24]
   20864:	str	x1, [x0]
   20868:	mov	w0, #0x1                   	// #1
   2086c:	mov	w1, w0
   20870:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   20874:	ldr	x0, [x0, #4016]
   20878:	ldr	x2, [sp, #72]
   2087c:	ldr	x0, [x0]
   20880:	eor	x0, x2, x0
   20884:	cmp	x0, #0x0
   20888:	b.eq	20890 <udev_util_encode_string@@LIBUDEV_183+0x15060>  // b.none
   2088c:	bl	5390 <__stack_chk_fail@plt>
   20890:	mov	w0, w1
   20894:	ldp	x29, x30, [sp], #80
   20898:	ret
   2089c:	stp	x29, x30, [sp, #-32]!
   208a0:	mov	x29, sp
   208a4:	str	x0, [sp, #24]
   208a8:	ldr	x0, [sp, #24]
   208ac:	bl	54b0 <free@plt>
   208b0:	mov	x0, #0x0                   	// #0
   208b4:	ldp	x29, x30, [sp], #32
   208b8:	ret
   208bc:	stp	x29, x30, [sp, #-32]!
   208c0:	mov	x29, sp
   208c4:	str	x0, [sp, #24]
   208c8:	mov	x2, #0x0                   	// #0
   208cc:	mov	x1, #0x0                   	// #0
   208d0:	ldr	x0, [sp, #24]
   208d4:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
   208d8:	ldp	x29, x30, [sp], #32
   208dc:	ret
   208e0:	stp	x29, x30, [sp, #-32]!
   208e4:	mov	x29, sp
   208e8:	str	x0, [sp, #24]
   208ec:	str	x1, [sp, #16]
   208f0:	ldr	x1, [sp, #16]
   208f4:	ldr	x0, [sp, #24]
   208f8:	bl	29a24 <udev_util_encode_string@@LIBUDEV_183+0x1e1f4>
   208fc:	ldp	x29, x30, [sp], #32
   20900:	ret
   20904:	stp	x29, x30, [sp, #-32]!
   20908:	mov	x29, sp
   2090c:	str	x0, [sp, #24]
   20910:	str	x1, [sp, #16]
   20914:	ldr	x1, [sp, #16]
   20918:	ldr	x0, [sp, #24]
   2091c:	bl	29b98 <udev_util_encode_string@@LIBUDEV_183+0x1e368>
   20920:	ldp	x29, x30, [sp], #32
   20924:	ret
   20928:	stp	x29, x30, [sp, #-32]!
   2092c:	mov	x29, sp
   20930:	str	x0, [sp, #24]
   20934:	ldr	x0, [sp, #24]
   20938:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
   2093c:	ldp	x29, x30, [sp], #32
   20940:	ret
   20944:	stp	x29, x30, [sp, #-32]!
   20948:	mov	x29, sp
   2094c:	str	x0, [sp, #24]
   20950:	ldr	x0, [sp, #24]
   20954:	bl	20928 <udev_util_encode_string@@LIBUDEV_183+0x150f8>
   20958:	cmp	w0, #0x0
   2095c:	cset	w0, eq  // eq = none
   20960:	and	w0, w0, #0xff
   20964:	ldp	x29, x30, [sp], #32
   20968:	ret
   2096c:	sub	sp, sp, #0x10
   20970:	str	w0, [sp, #12]
   20974:	ldrsw	x0, [sp, #12]
   20978:	add	sp, sp, #0x10
   2097c:	ret
   20980:	stp	x29, x30, [sp, #-32]!
   20984:	mov	x29, sp
   20988:	str	x0, [sp, #24]
   2098c:	mov	x2, #0x0                   	// #0
   20990:	mov	x1, #0x0                   	// #0
   20994:	ldr	x0, [sp, #24]
   20998:	bl	288bc <udev_util_encode_string@@LIBUDEV_183+0x1d08c>
   2099c:	ldp	x29, x30, [sp], #32
   209a0:	ret
   209a4:	stp	x29, x30, [sp, #-32]!
   209a8:	mov	x29, sp
   209ac:	str	x0, [sp, #24]
   209b0:	str	x1, [sp, #16]
   209b4:	ldr	x1, [sp, #16]
   209b8:	ldr	x0, [sp, #24]
   209bc:	bl	29b98 <udev_util_encode_string@@LIBUDEV_183+0x1e368>
   209c0:	ldp	x29, x30, [sp], #32
   209c4:	ret
   209c8:	sub	sp, sp, #0x10
   209cc:	str	x0, [sp, #8]
   209d0:	ldr	x0, [sp, #8]
   209d4:	cmp	x0, #0x0
   209d8:	b.ne	209e4 <udev_util_encode_string@@LIBUDEV_183+0x151b4>  // b.any
   209dc:	adrp	x0, 39000 <udev_util_encode_string@@LIBUDEV_183+0x2d7d0>
   209e0:	add	x0, x0, #0xf70
   209e4:	add	sp, sp, #0x10
   209e8:	ret
   209ec:	sub	sp, sp, #0x10
   209f0:	str	w0, [sp, #12]
   209f4:	ldr	w0, [sp, #12]
   209f8:	cmp	w0, #0x0
   209fc:	b.lt	20a0c <udev_util_encode_string@@LIBUDEV_183+0x151dc>  // b.tstop
   20a00:	ldr	w0, [sp, #12]
   20a04:	cmp	w0, #0xc
   20a08:	b.le	20a14 <udev_util_encode_string@@LIBUDEV_183+0x151e4>
   20a0c:	mov	x0, #0x0                   	// #0
   20a10:	b	20a24 <udev_util_encode_string@@LIBUDEV_183+0x151f4>
   20a14:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   20a18:	add	x0, x0, #0x640
   20a1c:	ldrsw	x1, [sp, #12]
   20a20:	ldr	x0, [x0, x1, lsl #3]
   20a24:	add	sp, sp, #0x10
   20a28:	ret
   20a2c:	stp	x29, x30, [sp, #-32]!
   20a30:	mov	x29, sp
   20a34:	str	x0, [sp, #24]
   20a38:	ldr	x0, [sp, #24]
   20a3c:	cmp	x0, #0x0
   20a40:	cset	w0, eq  // eq = none
   20a44:	and	w0, w0, #0xff
   20a48:	and	x0, x0, #0xff
   20a4c:	cmp	x0, #0x0
   20a50:	b.eq	20a7c <udev_util_encode_string@@LIBUDEV_183+0x1524c>  // b.none
   20a54:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20a58:	add	x1, x0, #0xb
   20a5c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20a60:	add	x4, x0, #0xc88
   20a64:	mov	w3, #0xeb                  	// #235
   20a68:	mov	x2, x1
   20a6c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20a70:	add	x1, x0, #0xd8
   20a74:	mov	w0, #0x0                   	// #0
   20a78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20a7c:	ldr	x0, [sp, #24]
   20a80:	ldr	w0, [x0]
   20a84:	cmp	w0, #0x2
   20a88:	cset	w0, ne  // ne = any
   20a8c:	and	w0, w0, #0xff
   20a90:	and	x0, x0, #0xff
   20a94:	cmp	x0, #0x0
   20a98:	b.eq	20ac4 <udev_util_encode_string@@LIBUDEV_183+0x15294>  // b.none
   20a9c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20aa0:	add	x1, x0, #0xb
   20aa4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20aa8:	add	x4, x0, #0xc88
   20aac:	mov	w3, #0xec                  	// #236
   20ab0:	mov	x2, x1
   20ab4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20ab8:	add	x1, x0, #0xe0
   20abc:	mov	w0, #0x0                   	// #0
   20ac0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20ac4:	ldr	x0, [sp, #24]
   20ac8:	ldr	w0, [x0, #4]
   20acc:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   20ad0:	ldr	x0, [sp, #24]
   20ad4:	ldr	x0, [x0, #8]
   20ad8:	bl	31c78 <udev_util_encode_string@@LIBUDEV_183+0x26448>
   20adc:	ldr	x0, [sp, #24]
   20ae0:	ldr	x0, [x0, #16]
   20ae4:	bl	31c78 <udev_util_encode_string@@LIBUDEV_183+0x26448>
   20ae8:	nop
   20aec:	ldp	x29, x30, [sp], #32
   20af0:	ret
   20af4:	stp	x29, x30, [sp, #-48]!
   20af8:	mov	x29, sp
   20afc:	str	x0, [sp, #24]
   20b00:	ldr	x0, [sp, #24]
   20b04:	cmp	x0, #0x0
   20b08:	cset	w0, eq  // eq = none
   20b0c:	and	w0, w0, #0xff
   20b10:	and	x0, x0, #0xff
   20b14:	cmp	x0, #0x0
   20b18:	b.eq	20ba0 <udev_util_encode_string@@LIBUDEV_183+0x15370>  // b.none
   20b1c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20b20:	add	x1, x0, #0xb
   20b24:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20b28:	add	x4, x0, #0xc98
   20b2c:	mov	w3, #0xf6                  	// #246
   20b30:	mov	x2, x1
   20b34:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20b38:	add	x1, x0, #0x100
   20b3c:	mov	w0, #0x0                   	// #0
   20b40:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20b44:	ldr	x0, [sp, #40]
   20b48:	ldrb	w0, [x0, #41]
   20b4c:	ubfx	x0, x0, #2, #1
   20b50:	and	w0, w0, #0xff
   20b54:	eor	w0, w0, #0x1
   20b58:	and	w0, w0, #0xff
   20b5c:	and	x0, x0, #0xff
   20b60:	cmp	x0, #0x0
   20b64:	b.eq	20b90 <udev_util_encode_string@@LIBUDEV_183+0x15360>  // b.none
   20b68:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20b6c:	add	x1, x0, #0xb
   20b70:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20b74:	add	x4, x0, #0xc98
   20b78:	mov	w3, #0xf9                  	// #249
   20b7c:	mov	x2, x1
   20b80:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20b84:	add	x1, x0, #0x108
   20b88:	mov	w0, #0x0                   	// #0
   20b8c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20b90:	ldr	x0, [sp, #40]
   20b94:	bl	21588 <udev_util_encode_string@@LIBUDEV_183+0x15d58>
   20b98:	ldr	x0, [sp, #40]
   20b9c:	bl	226c0 <udev_util_encode_string@@LIBUDEV_183+0x16e90>
   20ba0:	ldr	x0, [sp, #24]
   20ba4:	ldr	x0, [x0, #400]
   20ba8:	str	x0, [sp, #40]
   20bac:	ldr	x0, [sp, #40]
   20bb0:	cmp	x0, #0x0
   20bb4:	b.ne	20b44 <udev_util_encode_string@@LIBUDEV_183+0x15314>  // b.any
   20bb8:	ldr	x0, [sp, #24]
   20bbc:	ldr	w0, [x0, #392]
   20bc0:	cmp	w0, #0x0
   20bc4:	cset	w0, ne  // ne = any
   20bc8:	and	w0, w0, #0xff
   20bcc:	and	x0, x0, #0xff
   20bd0:	cmp	x0, #0x0
   20bd4:	b.eq	20c00 <udev_util_encode_string@@LIBUDEV_183+0x153d0>  // b.none
   20bd8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20bdc:	add	x1, x0, #0xb
   20be0:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20be4:	add	x4, x0, #0xc98
   20be8:	mov	w3, #0xfe                  	// #254
   20bec:	mov	x2, x1
   20bf0:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20bf4:	add	x1, x0, #0x118
   20bf8:	mov	w0, #0x0                   	// #0
   20bfc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20c00:	ldr	x0, [sp, #24]
   20c04:	ldr	x0, [x0, #368]
   20c08:	cmp	x0, #0x0
   20c0c:	b.eq	20c1c <udev_util_encode_string@@LIBUDEV_183+0x153ec>  // b.none
   20c10:	ldr	x0, [sp, #24]
   20c14:	ldr	x0, [x0, #368]
   20c18:	str	xzr, [x0]
   20c1c:	ldr	x0, [sp, #24]
   20c20:	ldr	w0, [x0, #4]
   20c24:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   20c28:	ldr	x0, [sp, #24]
   20c2c:	ldr	w0, [x0, #8]
   20c30:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   20c34:	ldr	x0, [sp, #24]
   20c38:	add	x0, x0, #0x20
   20c3c:	bl	20a2c <udev_util_encode_string@@LIBUDEV_183+0x151fc>
   20c40:	ldr	x0, [sp, #24]
   20c44:	add	x0, x0, #0x48
   20c48:	bl	20a2c <udev_util_encode_string@@LIBUDEV_183+0x151fc>
   20c4c:	ldr	x0, [sp, #24]
   20c50:	add	x0, x0, #0x70
   20c54:	bl	20a2c <udev_util_encode_string@@LIBUDEV_183+0x151fc>
   20c58:	ldr	x0, [sp, #24]
   20c5c:	add	x0, x0, #0x98
   20c60:	bl	20a2c <udev_util_encode_string@@LIBUDEV_183+0x151fc>
   20c64:	ldr	x0, [sp, #24]
   20c68:	add	x0, x0, #0xc0
   20c6c:	bl	20a2c <udev_util_encode_string@@LIBUDEV_183+0x151fc>
   20c70:	ldr	x0, [sp, #24]
   20c74:	ldr	x0, [x0, #16]
   20c78:	bl	31c78 <udev_util_encode_string@@LIBUDEV_183+0x26448>
   20c7c:	ldr	x0, [sp, #24]
   20c80:	ldr	x0, [x0, #24]
   20c84:	bl	31c78 <udev_util_encode_string@@LIBUDEV_183+0x26448>
   20c88:	ldr	x0, [sp, #24]
   20c8c:	ldr	x0, [x0, #280]
   20c90:	bl	31c78 <udev_util_encode_string@@LIBUDEV_183+0x26448>
   20c94:	ldr	x0, [sp, #24]
   20c98:	ldr	x0, [x0, #240]
   20c9c:	bl	54b0 <free@plt>
   20ca0:	ldr	x0, [sp, #24]
   20ca4:	ldr	x0, [x0, #248]
   20ca8:	bl	208bc <udev_util_encode_string@@LIBUDEV_183+0x1508c>
   20cac:	ldr	x0, [sp, #24]
   20cb0:	ldr	x0, [x0, #288]
   20cb4:	bl	208bc <udev_util_encode_string@@LIBUDEV_183+0x1508c>
   20cb8:	ldr	x0, [sp, #24]
   20cbc:	ldr	x0, [x0, #256]
   20cc0:	bl	208bc <udev_util_encode_string@@LIBUDEV_183+0x1508c>
   20cc4:	ldr	x0, [sp, #24]
   20cc8:	ldr	x0, [x0, #272]
   20ccc:	bl	20980 <udev_util_encode_string@@LIBUDEV_183+0x15150>
   20cd0:	ldr	x0, [sp, #24]
   20cd4:	bl	2089c <udev_util_encode_string@@LIBUDEV_183+0x1506c>
   20cd8:	ldp	x29, x30, [sp], #48
   20cdc:	ret
   20ce0:	stp	x29, x30, [sp, #-32]!
   20ce4:	mov	x29, sp
   20ce8:	str	x0, [sp, #24]
   20cec:	ldr	x0, [sp, #24]
   20cf0:	cmp	x0, #0x0
   20cf4:	b.ne	20d00 <udev_util_encode_string@@LIBUDEV_183+0x154d0>  // b.any
   20cf8:	mov	x0, #0x0                   	// #0
   20cfc:	b	20d7c <udev_util_encode_string@@LIBUDEV_183+0x1554c>
   20d00:	ldr	x0, [sp, #24]
   20d04:	ldr	w0, [x0]
   20d08:	cmp	w0, #0x0
   20d0c:	cset	w0, eq  // eq = none
   20d10:	and	w0, w0, #0xff
   20d14:	and	x0, x0, #0xff
   20d18:	cmp	x0, #0x0
   20d1c:	b.eq	20d48 <udev_util_encode_string@@LIBUDEV_183+0x15518>  // b.none
   20d20:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20d24:	add	x1, x0, #0xb
   20d28:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20d2c:	add	x4, x0, #0xca8
   20d30:	mov	w3, #0x155                 	// #341
   20d34:	mov	x2, x1
   20d38:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20d3c:	add	x1, x0, #0x1d8
   20d40:	mov	w0, #0x0                   	// #0
   20d44:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20d48:	ldr	x0, [sp, #24]
   20d4c:	ldr	w0, [x0]
   20d50:	sub	w1, w0, #0x1
   20d54:	ldr	x0, [sp, #24]
   20d58:	str	w1, [x0]
   20d5c:	ldr	x0, [sp, #24]
   20d60:	ldr	w0, [x0]
   20d64:	cmp	w0, #0x0
   20d68:	b.eq	20d74 <udev_util_encode_string@@LIBUDEV_183+0x15544>  // b.none
   20d6c:	mov	x0, #0x0                   	// #0
   20d70:	b	20d7c <udev_util_encode_string@@LIBUDEV_183+0x1554c>
   20d74:	ldr	x0, [sp, #24]
   20d78:	bl	20af4 <udev_util_encode_string@@LIBUDEV_183+0x152c4>
   20d7c:	ldp	x29, x30, [sp], #32
   20d80:	ret
   20d84:	stp	x29, x30, [sp, #-48]!
   20d88:	mov	x29, sp
   20d8c:	str	x19, [sp, #16]
   20d90:	str	x0, [sp, #40]
   20d94:	ldr	x0, [sp, #40]
   20d98:	cmp	x0, #0x0
   20d9c:	cset	w0, eq  // eq = none
   20da0:	and	w0, w0, #0xff
   20da4:	and	x0, x0, #0xff
   20da8:	cmp	x0, #0x0
   20dac:	b.eq	20dd8 <udev_util_encode_string@@LIBUDEV_183+0x155a8>  // b.none
   20db0:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20db4:	add	x1, x0, #0xb
   20db8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20dbc:	add	x4, x0, #0xcb8
   20dc0:	mov	w3, #0x15e                 	// #350
   20dc4:	mov	x2, x1
   20dc8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20dcc:	add	x1, x0, #0x100
   20dd0:	mov	w0, #0x0                   	// #0
   20dd4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20dd8:	ldr	x0, [sp, #40]
   20ddc:	ldr	w19, [x0, #312]
   20de0:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   20de4:	cmp	w19, w0
   20de8:	cset	w0, ne  // ne = any
   20dec:	and	w0, w0, #0xff
   20df0:	ldr	x19, [sp, #16]
   20df4:	ldp	x29, x30, [sp], #48
   20df8:	ret
   20dfc:	stp	x29, x30, [sp, #-80]!
   20e00:	mov	x29, sp
   20e04:	stp	x19, x20, [sp, #16]
   20e08:	str	x21, [sp, #32]
   20e0c:	str	x0, [sp, #56]
   20e10:	ldr	x0, [sp, #56]
   20e14:	cmp	x0, #0x0
   20e18:	cset	w0, eq  // eq = none
   20e1c:	and	w0, w0, #0xff
   20e20:	and	x0, x0, #0xff
   20e24:	cmp	x0, #0x0
   20e28:	b.eq	20e54 <udev_util_encode_string@@LIBUDEV_183+0x15624>  // b.none
   20e2c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20e30:	add	x1, x0, #0xb
   20e34:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20e38:	add	x4, x0, #0xcd0
   20e3c:	mov	w3, #0x169                 	// #361
   20e40:	mov	x2, x1
   20e44:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20e48:	add	x1, x0, #0x1e8
   20e4c:	mov	w0, #0x0                   	// #0
   20e50:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20e54:	ldr	x0, [sp, #56]
   20e58:	ldrb	w0, [x0, #40]
   20e5c:	and	w0, w0, #0x1f
   20e60:	and	w0, w0, #0xff
   20e64:	cmp	w0, #0x0
   20e68:	cset	w0, ne  // ne = any
   20e6c:	and	w0, w0, #0xff
   20e70:	and	x0, x0, #0xff
   20e74:	cmp	x0, #0x0
   20e78:	b.eq	20ea4 <udev_util_encode_string@@LIBUDEV_183+0x15674>  // b.none
   20e7c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20e80:	add	x1, x0, #0xb
   20e84:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20e88:	add	x4, x0, #0xcd0
   20e8c:	mov	w3, #0x16a                 	// #362
   20e90:	mov	x2, x1
   20e94:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20e98:	add	x1, x0, #0x1f0
   20e9c:	mov	w0, #0x0                   	// #0
   20ea0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   20ea4:	ldr	x0, [sp, #56]
   20ea8:	ldr	x0, [x0, #8]
   20eac:	bl	20d84 <udev_util_encode_string@@LIBUDEV_183+0x15554>
   20eb0:	and	w0, w0, #0xff
   20eb4:	cmp	w0, #0x0
   20eb8:	b.ne	20fd0 <udev_util_encode_string@@LIBUDEV_183+0x157a0>  // b.any
   20ebc:	ldr	x0, [sp, #56]
   20ec0:	ldrb	w0, [x0, #124]
   20ec4:	ubfx	x0, x0, #0, #1
   20ec8:	and	w0, w0, #0xff
   20ecc:	eor	w0, w0, #0x1
   20ed0:	and	w0, w0, #0xff
   20ed4:	cmp	w0, #0x0
   20ed8:	b.ne	20fd8 <udev_util_encode_string@@LIBUDEV_183+0x157a8>  // b.any
   20edc:	ldr	x0, [sp, #56]
   20ee0:	ldr	x0, [x0, #8]
   20ee4:	ldr	w4, [x0, #4]
   20ee8:	ldr	x0, [sp, #56]
   20eec:	ldr	w0, [x0, #112]
   20ef0:	mov	x3, #0x0                   	// #0
   20ef4:	mov	w2, w0
   20ef8:	mov	w1, #0x2                   	// #2
   20efc:	mov	w0, w4
   20f00:	bl	5620 <epoll_ctl@plt>
   20f04:	str	w0, [sp, #64]
   20f08:	ldr	w0, [sp, #64]
   20f0c:	cmp	w0, #0x0
   20f10:	b.ge	20fbc <udev_util_encode_string@@LIBUDEV_183+0x1578c>  // b.tcont
   20f14:	mov	w0, #0x7                   	// #7
   20f18:	str	w0, [sp, #68]
   20f1c:	bl	57d0 <__errno_location@plt>
   20f20:	ldr	w0, [x0]
   20f24:	str	w0, [sp, #72]
   20f28:	str	wzr, [sp, #76]
   20f2c:	ldr	w0, [sp, #76]
   20f30:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   20f34:	mov	w1, w0
   20f38:	ldr	w0, [sp, #68]
   20f3c:	and	w0, w0, #0x7
   20f40:	cmp	w1, w0
   20f44:	b.lt	20fb4 <udev_util_encode_string@@LIBUDEV_183+0x15784>  // b.tstop
   20f48:	ldr	w0, [sp, #76]
   20f4c:	lsl	w1, w0, #10
   20f50:	ldr	w0, [sp, #68]
   20f54:	orr	w19, w1, w0
   20f58:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20f5c:	add	x20, x0, #0xb
   20f60:	ldr	x0, [sp, #56]
   20f64:	ldr	x0, [x0, #32]
   20f68:	bl	209c8 <udev_util_encode_string@@LIBUDEV_183+0x15198>
   20f6c:	mov	x21, x0
   20f70:	ldr	x0, [sp, #56]
   20f74:	ldrb	w0, [x0, #40]
   20f78:	sbfx	x0, x0, #0, #5
   20f7c:	sxtb	w0, w0
   20f80:	bl	209ec <udev_util_encode_string@@LIBUDEV_183+0x151bc>
   20f84:	mov	x7, x0
   20f88:	mov	x6, x21
   20f8c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20f90:	add	x5, x0, #0x208
   20f94:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   20f98:	add	x4, x0, #0xce8
   20f9c:	mov	w3, #0x174                 	// #372
   20fa0:	mov	x2, x20
   20fa4:	ldr	w1, [sp, #72]
   20fa8:	mov	w0, w19
   20fac:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   20fb0:	b	20fbc <udev_util_encode_string@@LIBUDEV_183+0x1578c>
   20fb4:	ldr	w0, [sp, #72]
   20fb8:	cmp	w0, #0x0
   20fbc:	ldr	x0, [sp, #56]
   20fc0:	ldrb	w1, [x0, #124]
   20fc4:	and	w1, w1, #0xfffffffe
   20fc8:	strb	w1, [x0, #124]
   20fcc:	b	20fdc <udev_util_encode_string@@LIBUDEV_183+0x157ac>
   20fd0:	nop
   20fd4:	b	20fdc <udev_util_encode_string@@LIBUDEV_183+0x157ac>
   20fd8:	nop
   20fdc:	ldp	x19, x20, [sp, #16]
   20fe0:	ldr	x21, [sp, #32]
   20fe4:	ldp	x29, x30, [sp], #80
   20fe8:	ret
   20fec:	stp	x29, x30, [sp, #-32]!
   20ff0:	mov	x29, sp
   20ff4:	str	x0, [sp, #24]
   20ff8:	str	w1, [sp, #20]
   20ffc:	ldr	x0, [sp, #24]
   21000:	cmp	x0, #0x0
   21004:	cset	w0, eq  // eq = none
   21008:	and	w0, w0, #0xff
   2100c:	and	x0, x0, #0xff
   21010:	cmp	x0, #0x0
   21014:	b.eq	21040 <udev_util_encode_string@@LIBUDEV_183+0x15810>  // b.none
   21018:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2101c:	add	x1, x0, #0xb
   21020:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21024:	add	x4, x0, #0xd00
   21028:	mov	w3, #0x1c8                 	// #456
   2102c:	mov	x2, x1
   21030:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21034:	add	x1, x0, #0x100
   21038:	mov	w0, #0x0                   	// #0
   2103c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21040:	ldr	w0, [sp, #20]
   21044:	cmp	w0, #0x5
   21048:	b.eq	210d4 <udev_util_encode_string@@LIBUDEV_183+0x158a4>  // b.none
   2104c:	ldr	w0, [sp, #20]
   21050:	cmp	w0, #0x5
   21054:	b.gt	210e0 <udev_util_encode_string@@LIBUDEV_183+0x158b0>
   21058:	ldr	w0, [sp, #20]
   2105c:	cmp	w0, #0x4
   21060:	b.eq	210c8 <udev_util_encode_string@@LIBUDEV_183+0x15898>  // b.none
   21064:	ldr	w0, [sp, #20]
   21068:	cmp	w0, #0x4
   2106c:	b.gt	210e0 <udev_util_encode_string@@LIBUDEV_183+0x158b0>
   21070:	ldr	w0, [sp, #20]
   21074:	cmp	w0, #0x3
   21078:	b.eq	210bc <udev_util_encode_string@@LIBUDEV_183+0x1588c>  // b.none
   2107c:	ldr	w0, [sp, #20]
   21080:	cmp	w0, #0x3
   21084:	b.gt	210e0 <udev_util_encode_string@@LIBUDEV_183+0x158b0>
   21088:	ldr	w0, [sp, #20]
   2108c:	cmp	w0, #0x1
   21090:	b.eq	210a4 <udev_util_encode_string@@LIBUDEV_183+0x15874>  // b.none
   21094:	ldr	w0, [sp, #20]
   21098:	cmp	w0, #0x2
   2109c:	b.eq	210b0 <udev_util_encode_string@@LIBUDEV_183+0x15880>  // b.none
   210a0:	b	210e0 <udev_util_encode_string@@LIBUDEV_183+0x158b0>
   210a4:	ldr	x0, [sp, #24]
   210a8:	add	x0, x0, #0x20
   210ac:	b	210e4 <udev_util_encode_string@@LIBUDEV_183+0x158b4>
   210b0:	ldr	x0, [sp, #24]
   210b4:	add	x0, x0, #0x48
   210b8:	b	210e4 <udev_util_encode_string@@LIBUDEV_183+0x158b4>
   210bc:	ldr	x0, [sp, #24]
   210c0:	add	x0, x0, #0x70
   210c4:	b	210e4 <udev_util_encode_string@@LIBUDEV_183+0x158b4>
   210c8:	ldr	x0, [sp, #24]
   210cc:	add	x0, x0, #0x98
   210d0:	b	210e4 <udev_util_encode_string@@LIBUDEV_183+0x158b4>
   210d4:	ldr	x0, [sp, #24]
   210d8:	add	x0, x0, #0xc0
   210dc:	b	210e4 <udev_util_encode_string@@LIBUDEV_183+0x158b4>
   210e0:	mov	x0, #0x0                   	// #0
   210e4:	ldp	x29, x30, [sp], #32
   210e8:	ret
   210ec:	stp	x29, x30, [sp, #-32]!
   210f0:	mov	x29, sp
   210f4:	str	x0, [sp, #24]
   210f8:	str	x1, [sp, #16]
   210fc:	ldr	x0, [sp, #24]
   21100:	cmp	x0, #0x0
   21104:	cset	w0, eq  // eq = none
   21108:	and	w0, w0, #0xff
   2110c:	and	x0, x0, #0xff
   21110:	cmp	x0, #0x0
   21114:	b.eq	21140 <udev_util_encode_string@@LIBUDEV_183+0x15910>  // b.none
   21118:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2111c:	add	x1, x0, #0xb
   21120:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21124:	add	x4, x0, #0xd18
   21128:	mov	w3, #0x1e1                 	// #481
   2112c:	mov	x2, x1
   21130:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21134:	add	x1, x0, #0x100
   21138:	mov	w0, #0x0                   	// #0
   2113c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21140:	ldr	x0, [sp, #16]
   21144:	cmp	x0, #0x0
   21148:	b.eq	21180 <udev_util_encode_string@@LIBUDEV_183+0x15950>  // b.none
   2114c:	ldr	x0, [sp, #24]
   21150:	ldr	x2, [x0, #248]
   21154:	ldr	x0, [sp, #16]
   21158:	add	x0, x0, #0x8
   2115c:	mov	x1, x0
   21160:	mov	x0, x2
   21164:	bl	20904 <udev_util_encode_string@@LIBUDEV_183+0x150d4>
   21168:	ldr	x0, [sp, #16]
   2116c:	ldr	w0, [x0, #4]
   21170:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   21174:	ldr	x0, [sp, #16]
   21178:	bl	54b0 <free@plt>
   2117c:	b	21184 <udev_util_encode_string@@LIBUDEV_183+0x15954>
   21180:	nop
   21184:	ldp	x29, x30, [sp], #32
   21188:	ret
   2118c:	stp	x29, x30, [sp, #-64]!
   21190:	mov	x29, sp
   21194:	str	x0, [sp, #40]
   21198:	str	x1, [sp, #32]
   2119c:	str	w2, [sp, #28]
   211a0:	ldr	x0, [sp, #40]
   211a4:	cmp	x0, #0x0
   211a8:	cset	w0, eq  // eq = none
   211ac:	and	w0, w0, #0xff
   211b0:	and	x0, x0, #0xff
   211b4:	cmp	x0, #0x0
   211b8:	b.eq	211e4 <udev_util_encode_string@@LIBUDEV_183+0x159b4>  // b.none
   211bc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   211c0:	add	x1, x0, #0xb
   211c4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   211c8:	add	x4, x0, #0xd30
   211cc:	mov	w3, #0x24b                 	// #587
   211d0:	mov	x2, x1
   211d4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   211d8:	add	x1, x0, #0x100
   211dc:	mov	w0, #0x0                   	// #0
   211e0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   211e4:	ldr	x0, [sp, #32]
   211e8:	cmp	x0, #0x0
   211ec:	cset	w0, eq  // eq = none
   211f0:	and	w0, w0, #0xff
   211f4:	and	x0, x0, #0xff
   211f8:	cmp	x0, #0x0
   211fc:	b.eq	21228 <udev_util_encode_string@@LIBUDEV_183+0x159f8>  // b.none
   21200:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21204:	add	x1, x0, #0xb
   21208:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2120c:	add	x4, x0, #0xd30
   21210:	mov	w3, #0x24c                 	// #588
   21214:	mov	x2, x1
   21218:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2121c:	add	x1, x0, #0xd8
   21220:	mov	w0, #0x0                   	// #0
   21224:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21228:	ldr	x0, [sp, #32]
   2122c:	add	x0, x0, #0x10
   21230:	ldr	w1, [sp, #28]
   21234:	bl	5430 <sigismember@plt>
   21238:	cmp	w0, #0x0
   2123c:	b.eq	213a0 <udev_util_encode_string@@LIBUDEV_183+0x15b70>  // b.none
   21240:	ldr	x0, [sp, #32]
   21244:	add	x0, x0, #0x10
   21248:	ldr	w1, [sp, #28]
   2124c:	bl	5770 <sigdelset@plt>
   21250:	lsr	w0, w0, #31
   21254:	and	w0, w0, #0xff
   21258:	and	x0, x0, #0xff
   2125c:	cmp	x0, #0x0
   21260:	b.eq	2128c <udev_util_encode_string@@LIBUDEV_183+0x15a5c>  // b.none
   21264:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21268:	add	x1, x0, #0xb
   2126c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21270:	add	x4, x0, #0xd30
   21274:	mov	w3, #0x255                 	// #597
   21278:	mov	x2, x1
   2127c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21280:	add	x1, x0, #0x278
   21284:	mov	w0, #0x0                   	// #0
   21288:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2128c:	ldr	x0, [sp, #32]
   21290:	add	x0, x0, #0x10
   21294:	bl	54d0 <sigisemptyset@plt>
   21298:	cmp	w0, #0x0
   2129c:	b.eq	212b0 <udev_util_encode_string@@LIBUDEV_183+0x15a80>  // b.none
   212a0:	ldr	x1, [sp, #32]
   212a4:	ldr	x0, [sp, #40]
   212a8:	bl	210ec <udev_util_encode_string@@LIBUDEV_183+0x158bc>
   212ac:	b	213a4 <udev_util_encode_string@@LIBUDEV_183+0x15b74>
   212b0:	ldr	x0, [sp, #32]
   212b4:	ldr	w0, [x0, #4]
   212b8:	lsr	w0, w0, #31
   212bc:	and	w0, w0, #0xff
   212c0:	and	x0, x0, #0xff
   212c4:	cmp	x0, #0x0
   212c8:	b.eq	212f4 <udev_util_encode_string@@LIBUDEV_183+0x15ac4>  // b.none
   212cc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   212d0:	add	x1, x0, #0xb
   212d4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   212d8:	add	x4, x0, #0xd30
   212dc:	mov	w3, #0x25d                 	// #605
   212e0:	mov	x2, x1
   212e4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   212e8:	add	x1, x0, #0x298
   212ec:	mov	w0, #0x0                   	// #0
   212f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   212f4:	ldr	x0, [sp, #32]
   212f8:	ldr	w3, [x0, #4]
   212fc:	ldr	x0, [sp, #32]
   21300:	add	x0, x0, #0x10
   21304:	mov	w2, #0x800                 	// #2048
   21308:	movk	w2, #0x8, lsl #16
   2130c:	mov	x1, x0
   21310:	mov	w0, w3
   21314:	bl	5070 <signalfd@plt>
   21318:	cmp	w0, #0x0
   2131c:	b.ge	213a4 <udev_util_encode_string@@LIBUDEV_183+0x15b74>  // b.tcont
   21320:	mov	w0, #0x7                   	// #7
   21324:	str	w0, [sp, #52]
   21328:	bl	57d0 <__errno_location@plt>
   2132c:	ldr	w0, [x0]
   21330:	str	w0, [sp, #56]
   21334:	str	wzr, [sp, #60]
   21338:	ldr	w0, [sp, #60]
   2133c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   21340:	mov	w1, w0
   21344:	ldr	w0, [sp, #52]
   21348:	and	w0, w0, #0x7
   2134c:	cmp	w1, w0
   21350:	b.lt	21394 <udev_util_encode_string@@LIBUDEV_183+0x15b64>  // b.tstop
   21354:	ldr	w0, [sp, #60]
   21358:	lsl	w1, w0, #10
   2135c:	ldr	w0, [sp, #52]
   21360:	orr	w6, w1, w0
   21364:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21368:	add	x1, x0, #0xb
   2136c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21370:	add	x5, x0, #0x2a8
   21374:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21378:	add	x4, x0, #0xd50
   2137c:	mov	w3, #0x260                 	// #608
   21380:	mov	x2, x1
   21384:	ldr	w1, [sp, #56]
   21388:	mov	w0, w6
   2138c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   21390:	b	213a4 <udev_util_encode_string@@LIBUDEV_183+0x15b74>
   21394:	ldr	w0, [sp, #56]
   21398:	cmp	w0, #0x0
   2139c:	b	213a4 <udev_util_encode_string@@LIBUDEV_183+0x15b74>
   213a0:	nop
   213a4:	ldp	x29, x30, [sp], #64
   213a8:	ret
   213ac:	stp	x29, x30, [sp, #-64]!
   213b0:	mov	x29, sp
   213b4:	str	x0, [sp, #40]
   213b8:	str	x1, [sp, #32]
   213bc:	str	w2, [sp, #28]
   213c0:	ldr	x0, [sp, #40]
   213c4:	cmp	x0, #0x0
   213c8:	cset	w0, eq  // eq = none
   213cc:	and	w0, w0, #0xff
   213d0:	and	x0, x0, #0xff
   213d4:	cmp	x0, #0x0
   213d8:	b.eq	21404 <udev_util_encode_string@@LIBUDEV_183+0x15bd4>  // b.none
   213dc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   213e0:	add	x1, x0, #0xb
   213e4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   213e8:	add	x4, x0, #0xd70
   213ec:	mov	w3, #0x267                 	// #615
   213f0:	mov	x2, x1
   213f4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   213f8:	add	x1, x0, #0x100
   213fc:	mov	w0, #0x0                   	// #0
   21400:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21404:	ldr	w0, [sp, #28]
   21408:	cmp	w0, #0x11
   2140c:	b.ne	21420 <udev_util_encode_string@@LIBUDEV_183+0x15bf0>  // b.any
   21410:	ldr	x0, [sp, #40]
   21414:	ldr	w0, [x0, #264]
   21418:	cmp	w0, #0x0
   2141c:	b.ne	21574 <udev_util_encode_string@@LIBUDEV_183+0x15d44>  // b.any
   21420:	ldr	x0, [sp, #40]
   21424:	ldr	x0, [x0, #240]
   21428:	cmp	x0, #0x0
   2142c:	b.eq	2147c <udev_util_encode_string@@LIBUDEV_183+0x15c4c>  // b.none
   21430:	ldr	x0, [sp, #40]
   21434:	ldr	x1, [x0, #240]
   21438:	ldrsw	x0, [sp, #28]
   2143c:	lsl	x0, x0, #3
   21440:	add	x0, x1, x0
   21444:	ldr	x0, [x0]
   21448:	cmp	x0, #0x0
   2144c:	b.eq	2147c <udev_util_encode_string@@LIBUDEV_183+0x15c4c>  // b.none
   21450:	ldr	x0, [sp, #40]
   21454:	ldr	x1, [x0, #240]
   21458:	ldrsw	x0, [sp, #28]
   2145c:	lsl	x0, x0, #3
   21460:	add	x0, x1, x0
   21464:	ldr	x0, [x0]
   21468:	ldrb	w0, [x0, #40]
   2146c:	and	w0, w0, #0xffffffe0
   21470:	and	w0, w0, #0xff
   21474:	cmp	w0, #0x0
   21478:	b.ne	2157c <udev_util_encode_string@@LIBUDEV_183+0x15d4c>  // b.any
   2147c:	ldr	x0, [sp, #32]
   21480:	cmp	x0, #0x0
   21484:	b.eq	214b8 <udev_util_encode_string@@LIBUDEV_183+0x15c88>  // b.none
   21488:	ldr	x0, [sp, #40]
   2148c:	ldr	x0, [x0, #248]
   21490:	ldr	x1, [sp, #32]
   21494:	bl	208e0 <udev_util_encode_string@@LIBUDEV_183+0x150b0>
   21498:	str	x0, [sp, #56]
   2149c:	ldr	x0, [sp, #56]
   214a0:	cmp	x0, #0x0
   214a4:	b.eq	214b8 <udev_util_encode_string@@LIBUDEV_183+0x15c88>  // b.none
   214a8:	ldr	w2, [sp, #28]
   214ac:	ldr	x1, [sp, #56]
   214b0:	ldr	x0, [sp, #40]
   214b4:	bl	2118c <udev_util_encode_string@@LIBUDEV_183+0x1595c>
   214b8:	ldr	x0, [sp, #40]
   214bc:	ldr	x0, [x0, #240]
   214c0:	cmp	x0, #0x0
   214c4:	b.eq	21538 <udev_util_encode_string@@LIBUDEV_183+0x15d08>  // b.none
   214c8:	ldr	x0, [sp, #40]
   214cc:	ldr	x1, [x0, #240]
   214d0:	ldrsw	x0, [sp, #28]
   214d4:	lsl	x0, x0, #3
   214d8:	add	x0, x1, x0
   214dc:	ldr	x0, [x0]
   214e0:	cmp	x0, #0x0
   214e4:	b.eq	21538 <udev_util_encode_string@@LIBUDEV_183+0x15d08>  // b.none
   214e8:	ldr	x0, [sp, #40]
   214ec:	ldr	x2, [x0, #248]
   214f0:	ldr	x0, [sp, #40]
   214f4:	ldr	x1, [x0, #240]
   214f8:	ldrsw	x0, [sp, #28]
   214fc:	lsl	x0, x0, #3
   21500:	add	x0, x1, x0
   21504:	ldr	x0, [x0]
   21508:	add	x0, x0, #0x30
   2150c:	mov	x1, x0
   21510:	mov	x0, x2
   21514:	bl	208e0 <udev_util_encode_string@@LIBUDEV_183+0x150b0>
   21518:	str	x0, [sp, #56]
   2151c:	ldr	x0, [sp, #56]
   21520:	cmp	x0, #0x0
   21524:	b.eq	21538 <udev_util_encode_string@@LIBUDEV_183+0x15d08>  // b.none
   21528:	ldr	w2, [sp, #28]
   2152c:	ldr	x1, [sp, #56]
   21530:	ldr	x0, [sp, #40]
   21534:	bl	2118c <udev_util_encode_string@@LIBUDEV_183+0x1595c>
   21538:	ldr	x0, [sp, #40]
   2153c:	ldr	x2, [x0, #248]
   21540:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21544:	add	x1, x0, #0xd88
   21548:	mov	x0, x2
   2154c:	bl	208e0 <udev_util_encode_string@@LIBUDEV_183+0x150b0>
   21550:	str	x0, [sp, #56]
   21554:	ldr	x0, [sp, #56]
   21558:	cmp	x0, #0x0
   2155c:	b.eq	21580 <udev_util_encode_string@@LIBUDEV_183+0x15d50>  // b.none
   21560:	ldr	w2, [sp, #28]
   21564:	ldr	x1, [sp, #56]
   21568:	ldr	x0, [sp, #40]
   2156c:	bl	2118c <udev_util_encode_string@@LIBUDEV_183+0x1595c>
   21570:	b	21580 <udev_util_encode_string@@LIBUDEV_183+0x15d50>
   21574:	nop
   21578:	b	21580 <udev_util_encode_string@@LIBUDEV_183+0x15d50>
   2157c:	nop
   21580:	ldp	x29, x30, [sp], #64
   21584:	ret
   21588:	stp	x29, x30, [sp, #-112]!
   2158c:	mov	x29, sp
   21590:	str	x19, [sp, #16]
   21594:	str	x0, [sp, #40]
   21598:	ldr	x0, [sp, #40]
   2159c:	cmp	x0, #0x0
   215a0:	cset	w0, eq  // eq = none
   215a4:	and	w0, w0, #0xff
   215a8:	and	x0, x0, #0xff
   215ac:	cmp	x0, #0x0
   215b0:	b.eq	215dc <udev_util_encode_string@@LIBUDEV_183+0x15dac>  // b.none
   215b4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   215b8:	add	x1, x0, #0xb
   215bc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   215c0:	add	x4, x0, #0xd90
   215c4:	mov	w3, #0x294                 	// #660
   215c8:	mov	x2, x1
   215cc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   215d0:	add	x1, x0, #0x1e8
   215d4:	mov	w0, #0x0                   	// #0
   215d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   215dc:	ldr	x0, [sp, #40]
   215e0:	ldr	x0, [x0, #8]
   215e4:	cmp	x0, #0x0
   215e8:	b.eq	21d5c <udev_util_encode_string@@LIBUDEV_183+0x1652c>  // b.none
   215ec:	ldr	x0, [sp, #40]
   215f0:	ldr	x0, [x0, #8]
   215f4:	ldr	w0, [x0, #392]
   215f8:	cmp	w0, #0x0
   215fc:	cset	w0, eq  // eq = none
   21600:	and	w0, w0, #0xff
   21604:	and	x0, x0, #0xff
   21608:	cmp	x0, #0x0
   2160c:	b.eq	21638 <udev_util_encode_string@@LIBUDEV_183+0x15e08>  // b.none
   21610:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21614:	add	x1, x0, #0xb
   21618:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2161c:	add	x4, x0, #0xd90
   21620:	mov	w3, #0x299                 	// #665
   21624:	mov	x2, x1
   21628:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2162c:	add	x1, x0, #0x2d8
   21630:	mov	w0, #0x0                   	// #0
   21634:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21638:	ldr	x0, [sp, #40]
   2163c:	ldrb	w0, [x0, #40]
   21640:	sbfx	x0, x0, #0, #5
   21644:	sxtb	w0, w0
   21648:	cmp	w0, #0xc
   2164c:	b.eq	21924 <udev_util_encode_string@@LIBUDEV_183+0x160f4>  // b.none
   21650:	cmp	w0, #0xc
   21654:	b.gt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>
   21658:	cmp	w0, #0xa
   2165c:	b.eq	218fc <udev_util_encode_string@@LIBUDEV_183+0x160cc>  // b.none
   21660:	cmp	w0, #0xa
   21664:	b.gt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>
   21668:	cmp	w0, #0x9
   2166c:	b.eq	218e4 <udev_util_encode_string@@LIBUDEV_183+0x160b4>  // b.none
   21670:	cmp	w0, #0x9
   21674:	b.gt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>
   21678:	cmp	w0, #0x8
   2167c:	b.eq	21b5c <udev_util_encode_string@@LIBUDEV_183+0x1632c>  // b.none
   21680:	cmp	w0, #0x8
   21684:	b.gt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>
   21688:	cmp	w0, #0x7
   2168c:	b.eq	21814 <udev_util_encode_string@@LIBUDEV_183+0x15fe4>  // b.none
   21690:	cmp	w0, #0x7
   21694:	b.gt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>
   21698:	cmp	w0, #0x6
   2169c:	b.eq	217a4 <udev_util_encode_string@@LIBUDEV_183+0x15f74>  // b.none
   216a0:	cmp	w0, #0x6
   216a4:	b.gt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>
   216a8:	cmp	w0, #0x0
   216ac:	b.eq	216c8 <udev_util_encode_string@@LIBUDEV_183+0x15e98>  // b.none
   216b0:	cmp	w0, #0x0
   216b4:	b.lt	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>  // b.tstop
   216b8:	sub	w0, w0, #0x1
   216bc:	cmp	w0, #0x4
   216c0:	b.hi	21b34 <udev_util_encode_string@@LIBUDEV_183+0x16304>  // b.pmore
   216c4:	b	216e4 <udev_util_encode_string@@LIBUDEV_183+0x15eb4>
   216c8:	ldr	x0, [sp, #40]
   216cc:	ldr	w0, [x0, #112]
   216d0:	cmp	w0, #0x0
   216d4:	b.lt	21b64 <udev_util_encode_string@@LIBUDEV_183+0x16334>  // b.tstop
   216d8:	ldr	x0, [sp, #40]
   216dc:	bl	20dfc <udev_util_encode_string@@LIBUDEV_183+0x155cc>
   216e0:	b	21b64 <udev_util_encode_string@@LIBUDEV_183+0x16334>
   216e4:	ldr	x0, [sp, #40]
   216e8:	ldr	x2, [x0, #8]
   216ec:	ldr	x0, [sp, #40]
   216f0:	ldrb	w0, [x0, #40]
   216f4:	sbfx	x0, x0, #0, #5
   216f8:	sxtb	w0, w0
   216fc:	mov	w1, w0
   21700:	mov	x0, x2
   21704:	bl	20fec <udev_util_encode_string@@LIBUDEV_183+0x157bc>
   21708:	str	x0, [sp, #80]
   2170c:	ldr	x0, [sp, #80]
   21710:	cmp	x0, #0x0
   21714:	cset	w0, eq  // eq = none
   21718:	and	w0, w0, #0xff
   2171c:	and	x0, x0, #0xff
   21720:	cmp	x0, #0x0
   21724:	b.eq	21750 <udev_util_encode_string@@LIBUDEV_183+0x15f20>  // b.none
   21728:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2172c:	add	x1, x0, #0xb
   21730:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21734:	add	x4, x0, #0xd90
   21738:	mov	w3, #0x2ab                 	// #683
   2173c:	mov	x2, x1
   21740:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21744:	add	x1, x0, #0xd8
   21748:	mov	w0, #0x0                   	// #0
   2174c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21750:	ldr	x0, [sp, #80]
   21754:	ldr	x3, [x0, #8]
   21758:	ldr	x0, [sp, #40]
   2175c:	add	x0, x0, #0x80
   21760:	mov	x2, x0
   21764:	ldr	x1, [sp, #40]
   21768:	mov	x0, x3
   2176c:	bl	325b8 <udev_util_encode_string@@LIBUDEV_183+0x26d88>
   21770:	ldr	x0, [sp, #80]
   21774:	ldr	x3, [x0, #16]
   21778:	ldr	x0, [sp, #40]
   2177c:	add	x0, x0, #0x84
   21780:	mov	x2, x0
   21784:	ldr	x1, [sp, #40]
   21788:	mov	x0, x3
   2178c:	bl	325b8 <udev_util_encode_string@@LIBUDEV_183+0x26d88>
   21790:	ldr	x0, [sp, #80]
   21794:	ldrb	w1, [x0, #32]
   21798:	orr	w1, w1, #0x1
   2179c:	strb	w1, [x0, #32]
   217a0:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   217a4:	ldr	x0, [sp, #40]
   217a8:	ldr	w0, [x0, #240]
   217ac:	cmp	w0, #0x0
   217b0:	b.le	21b6c <udev_util_encode_string@@LIBUDEV_183+0x1633c>
   217b4:	ldr	x0, [sp, #40]
   217b8:	ldr	x0, [x0, #8]
   217bc:	ldr	x0, [x0, #240]
   217c0:	cmp	x0, #0x0
   217c4:	b.eq	217ec <udev_util_encode_string@@LIBUDEV_183+0x15fbc>  // b.none
   217c8:	ldr	x0, [sp, #40]
   217cc:	ldr	x0, [x0, #8]
   217d0:	ldr	x1, [x0, #240]
   217d4:	ldr	x0, [sp, #40]
   217d8:	ldr	w0, [x0, #240]
   217dc:	sxtw	x0, w0
   217e0:	lsl	x0, x0, #3
   217e4:	add	x0, x1, x0
   217e8:	str	xzr, [x0]
   217ec:	ldr	x0, [sp, #40]
   217f0:	ldr	x3, [x0, #8]
   217f4:	ldr	x0, [sp, #40]
   217f8:	add	x1, x0, #0x30
   217fc:	ldr	x0, [sp, #40]
   21800:	ldr	w0, [x0, #240]
   21804:	mov	w2, w0
   21808:	mov	x0, x3
   2180c:	bl	213ac <udev_util_encode_string@@LIBUDEV_183+0x15b7c>
   21810:	b	21b6c <udev_util_encode_string@@LIBUDEV_183+0x1633c>
   21814:	ldr	x0, [sp, #40]
   21818:	ldr	w0, [x0, #240]
   2181c:	cmp	w0, #0x0
   21820:	b.le	21b74 <udev_util_encode_string@@LIBUDEV_183+0x16344>
   21824:	ldr	x0, [sp, #40]
   21828:	ldrb	w0, [x0, #40]
   2182c:	and	w0, w0, #0xffffffe0
   21830:	and	w0, w0, #0xff
   21834:	cmp	w0, #0x0
   21838:	b.eq	2189c <udev_util_encode_string@@LIBUDEV_183+0x1606c>  // b.none
   2183c:	ldr	x0, [sp, #40]
   21840:	ldr	x0, [x0, #8]
   21844:	ldr	w0, [x0, #264]
   21848:	cmp	w0, #0x0
   2184c:	cset	w0, eq  // eq = none
   21850:	and	w0, w0, #0xff
   21854:	and	x0, x0, #0xff
   21858:	cmp	x0, #0x0
   2185c:	b.eq	21888 <udev_util_encode_string@@LIBUDEV_183+0x16058>  // b.none
   21860:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21864:	add	x1, x0, #0xb
   21868:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2186c:	add	x4, x0, #0xd90
   21870:	mov	w3, #0x2c1                 	// #705
   21874:	mov	x2, x1
   21878:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2187c:	add	x1, x0, #0x2f0
   21880:	mov	w0, #0x0                   	// #0
   21884:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21888:	ldr	x0, [sp, #40]
   2188c:	ldr	x0, [x0, #8]
   21890:	ldr	w1, [x0, #264]
   21894:	sub	w1, w1, #0x1
   21898:	str	w1, [x0, #264]
   2189c:	ldr	x0, [sp, #40]
   218a0:	ldr	x0, [x0, #8]
   218a4:	ldr	x19, [x0, #256]
   218a8:	ldr	x0, [sp, #40]
   218ac:	ldr	w0, [x0, #240]
   218b0:	bl	2096c <udev_util_encode_string@@LIBUDEV_183+0x1513c>
   218b4:	mov	x1, x0
   218b8:	mov	x0, x19
   218bc:	bl	20904 <udev_util_encode_string@@LIBUDEV_183+0x150d4>
   218c0:	ldr	x0, [sp, #40]
   218c4:	ldr	x3, [x0, #8]
   218c8:	ldr	x0, [sp, #40]
   218cc:	add	x0, x0, #0x30
   218d0:	mov	w2, #0x11                  	// #17
   218d4:	mov	x1, x0
   218d8:	mov	x0, x3
   218dc:	bl	213ac <udev_util_encode_string@@LIBUDEV_183+0x15b7c>
   218e0:	b	21b74 <udev_util_encode_string@@LIBUDEV_183+0x16344>
   218e4:	ldr	x0, [sp, #40]
   218e8:	ldr	x0, [x0, #8]
   218ec:	ldr	x0, [x0, #272]
   218f0:	ldr	x1, [sp, #40]
   218f4:	bl	209a4 <udev_util_encode_string@@LIBUDEV_183+0x15174>
   218f8:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   218fc:	ldr	x0, [sp, #40]
   21900:	ldr	x0, [x0, #8]
   21904:	ldr	x3, [x0, #280]
   21908:	ldr	x0, [sp, #40]
   2190c:	add	x0, x0, #0x70
   21910:	mov	x2, x0
   21914:	ldr	x1, [sp, #40]
   21918:	mov	x0, x3
   2191c:	bl	325b8 <udev_util_encode_string@@LIBUDEV_183+0x26d88>
   21920:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   21924:	ldr	x0, [sp, #40]
   21928:	ldr	x0, [x0, #120]
   2192c:	str	x0, [sp, #48]
   21930:	ldr	x0, [sp, #48]
   21934:	cmp	x0, #0x0
   21938:	b.eq	21b7c <udev_util_encode_string@@LIBUDEV_183+0x1634c>  // b.none
   2193c:	ldr	x0, [sp, #48]
   21940:	ldr	x0, [x0, #40]
   21944:	str	x0, [sp, #56]
   21948:	ldr	x0, [sp, #56]
   2194c:	cmp	x0, #0x0
   21950:	cset	w0, eq  // eq = none
   21954:	and	w0, w0, #0xff
   21958:	and	x0, x0, #0xff
   2195c:	cmp	x0, #0x0
   21960:	b.eq	2198c <udev_util_encode_string@@LIBUDEV_183+0x1615c>  // b.none
   21964:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21968:	add	x1, x0, #0xb
   2196c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21970:	add	x4, x0, #0xd90
   21974:	mov	w3, #0x2dd                 	// #733
   21978:	mov	x2, x1
   2197c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21980:	add	x1, x0, #0x318
   21984:	mov	w0, #0x0                   	// #0
   21988:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2198c:	ldr	x0, [sp, #48]
   21990:	add	x0, x0, #0x20
   21994:	str	x0, [sp, #64]
   21998:	ldr	x0, [sp, #40]
   2199c:	str	x0, [sp, #72]
   219a0:	ldr	x0, [sp, #72]
   219a4:	cmp	x0, #0x0
   219a8:	cset	w0, eq  // eq = none
   219ac:	and	w0, w0, #0xff
   219b0:	and	x0, x0, #0xff
   219b4:	cmp	x0, #0x0
   219b8:	b.eq	219e4 <udev_util_encode_string@@LIBUDEV_183+0x161b4>  // b.none
   219bc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   219c0:	add	x1, x0, #0xb
   219c4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   219c8:	add	x4, x0, #0xd90
   219cc:	mov	w3, #0x2e0                 	// #736
   219d0:	mov	x2, x1
   219d4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   219d8:	add	x1, x0, #0x340
   219dc:	mov	w0, #0x0                   	// #0
   219e0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   219e4:	ldr	x0, [sp, #72]
   219e8:	ldr	x0, [x0, #128]
   219ec:	cmp	x0, #0x0
   219f0:	b.eq	21a08 <udev_util_encode_string@@LIBUDEV_183+0x161d8>  // b.none
   219f4:	ldr	x0, [sp, #72]
   219f8:	ldr	x0, [x0, #128]
   219fc:	ldr	x1, [sp, #72]
   21a00:	ldr	x1, [x1, #136]
   21a04:	str	x1, [x0, #136]
   21a08:	ldr	x0, [sp, #72]
   21a0c:	ldr	x0, [x0, #136]
   21a10:	cmp	x0, #0x0
   21a14:	b.eq	21a30 <udev_util_encode_string@@LIBUDEV_183+0x16200>  // b.none
   21a18:	ldr	x0, [sp, #72]
   21a1c:	ldr	x0, [x0, #136]
   21a20:	ldr	x1, [sp, #72]
   21a24:	ldr	x1, [x1, #128]
   21a28:	str	x1, [x0, #128]
   21a2c:	b	21a8c <udev_util_encode_string@@LIBUDEV_183+0x1625c>
   21a30:	ldr	x0, [sp, #64]
   21a34:	ldr	x0, [x0]
   21a38:	ldr	x1, [sp, #72]
   21a3c:	cmp	x1, x0
   21a40:	cset	w0, ne  // ne = any
   21a44:	and	w0, w0, #0xff
   21a48:	and	x0, x0, #0xff
   21a4c:	cmp	x0, #0x0
   21a50:	b.eq	21a7c <udev_util_encode_string@@LIBUDEV_183+0x1624c>  // b.none
   21a54:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21a58:	add	x1, x0, #0xb
   21a5c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21a60:	add	x4, x0, #0xd90
   21a64:	mov	w3, #0x2e0                 	// #736
   21a68:	mov	x2, x1
   21a6c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21a70:	add	x1, x0, #0x348
   21a74:	mov	w0, #0x0                   	// #0
   21a78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21a7c:	ldr	x0, [sp, #72]
   21a80:	ldr	x1, [x0, #128]
   21a84:	ldr	x0, [sp, #64]
   21a88:	str	x1, [x0]
   21a8c:	ldr	x0, [sp, #72]
   21a90:	str	xzr, [x0, #136]
   21a94:	ldr	x0, [sp, #72]
   21a98:	ldr	x1, [x0, #136]
   21a9c:	ldr	x0, [sp, #72]
   21aa0:	str	x1, [x0, #128]
   21aa4:	ldr	x0, [sp, #40]
   21aa8:	str	xzr, [x0, #120]
   21aac:	ldr	x0, [sp, #40]
   21ab0:	ldrb	w0, [x0, #41]
   21ab4:	and	w0, w0, #0x1
   21ab8:	and	w0, w0, #0xff
   21abc:	cmp	w0, #0x0
   21ac0:	b.eq	21b20 <udev_util_encode_string@@LIBUDEV_183+0x162f0>  // b.none
   21ac4:	ldr	x0, [sp, #56]
   21ac8:	ldr	w0, [x0, #312]
   21acc:	cmp	w0, #0x0
   21ad0:	cset	w0, eq  // eq = none
   21ad4:	and	w0, w0, #0xff
   21ad8:	and	x0, x0, #0xff
   21adc:	cmp	x0, #0x0
   21ae0:	b.eq	21b0c <udev_util_encode_string@@LIBUDEV_183+0x162dc>  // b.none
   21ae4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21ae8:	add	x1, x0, #0xb
   21aec:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21af0:	add	x4, x0, #0xd90
   21af4:	mov	w3, #0x2e4                 	// #740
   21af8:	mov	x2, x1
   21afc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21b00:	add	x1, x0, #0x358
   21b04:	mov	w0, #0x0                   	// #0
   21b08:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21b0c:	ldr	x0, [sp, #56]
   21b10:	ldr	w0, [x0, #312]
   21b14:	sub	w1, w0, #0x1
   21b18:	ldr	x0, [sp, #56]
   21b1c:	str	w1, [x0, #312]
   21b20:	ldr	x0, [sp, #40]
   21b24:	ldr	x0, [x0, #8]
   21b28:	ldr	x1, [sp, #48]
   21b2c:	bl	22578 <udev_util_encode_string@@LIBUDEV_183+0x16d48>
   21b30:	b	21b7c <udev_util_encode_string@@LIBUDEV_183+0x1634c>
   21b34:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21b38:	add	x1, x0, #0xb
   21b3c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21b40:	add	x4, x0, #0xd90
   21b44:	mov	w3, #0x2fb                 	// #763
   21b48:	mov	x2, x1
   21b4c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21b50:	add	x1, x0, #0x378
   21b54:	mov	w0, #0x0                   	// #0
   21b58:	bl	2dc30 <udev_util_encode_string@@LIBUDEV_183+0x22400>
   21b5c:	nop
   21b60:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   21b64:	nop
   21b68:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   21b6c:	nop
   21b70:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   21b74:	nop
   21b78:	b	21b80 <udev_util_encode_string@@LIBUDEV_183+0x16350>
   21b7c:	nop
   21b80:	ldr	x0, [sp, #40]
   21b84:	ldrb	w0, [x0, #41]
   21b88:	and	w0, w0, #0x1
   21b8c:	and	w0, w0, #0xff
   21b90:	cmp	w0, #0x0
   21b94:	b.eq	21bbc <udev_util_encode_string@@LIBUDEV_183+0x1638c>  // b.none
   21b98:	ldr	x0, [sp, #40]
   21b9c:	ldr	x0, [x0, #8]
   21ba0:	ldr	x3, [x0, #16]
   21ba4:	ldr	x0, [sp, #40]
   21ba8:	add	x0, x0, #0x38
   21bac:	mov	x2, x0
   21bb0:	ldr	x1, [sp, #40]
   21bb4:	mov	x0, x3
   21bb8:	bl	325b8 <udev_util_encode_string@@LIBUDEV_183+0x26d88>
   21bbc:	ldr	x0, [sp, #40]
   21bc0:	ldr	x0, [x0, #24]
   21bc4:	cmp	x0, #0x0
   21bc8:	b.eq	21bf0 <udev_util_encode_string@@LIBUDEV_183+0x163c0>  // b.none
   21bcc:	ldr	x0, [sp, #40]
   21bd0:	ldr	x0, [x0, #8]
   21bd4:	ldr	x3, [x0, #24]
   21bd8:	ldr	x0, [sp, #40]
   21bdc:	add	x0, x0, #0x3c
   21be0:	mov	x2, x0
   21be4:	ldr	x1, [sp, #40]
   21be8:	mov	x0, x3
   21bec:	bl	325b8 <udev_util_encode_string@@LIBUDEV_183+0x26d88>
   21bf0:	ldr	x0, [sp, #40]
   21bf4:	ldr	x0, [x0, #8]
   21bf8:	str	x0, [sp, #88]
   21bfc:	ldr	x0, [sp, #40]
   21c00:	str	xzr, [x0, #8]
   21c04:	ldr	x0, [sp, #88]
   21c08:	add	x0, x0, #0x190
   21c0c:	str	x0, [sp, #96]
   21c10:	ldr	x0, [sp, #40]
   21c14:	str	x0, [sp, #104]
   21c18:	ldr	x0, [sp, #104]
   21c1c:	cmp	x0, #0x0
   21c20:	cset	w0, eq  // eq = none
   21c24:	and	w0, w0, #0xff
   21c28:	and	x0, x0, #0xff
   21c2c:	cmp	x0, #0x0
   21c30:	b.eq	21c5c <udev_util_encode_string@@LIBUDEV_183+0x1642c>  // b.none
   21c34:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21c38:	add	x1, x0, #0xb
   21c3c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21c40:	add	x4, x0, #0xd90
   21c44:	mov	w3, #0x307                 	// #775
   21c48:	mov	x2, x1
   21c4c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21c50:	add	x1, x0, #0x340
   21c54:	mov	w0, #0x0                   	// #0
   21c58:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21c5c:	ldr	x0, [sp, #104]
   21c60:	ldr	x0, [x0, #88]
   21c64:	cmp	x0, #0x0
   21c68:	b.eq	21c80 <udev_util_encode_string@@LIBUDEV_183+0x16450>  // b.none
   21c6c:	ldr	x0, [sp, #104]
   21c70:	ldr	x0, [x0, #88]
   21c74:	ldr	x1, [sp, #104]
   21c78:	ldr	x1, [x1, #96]
   21c7c:	str	x1, [x0, #96]
   21c80:	ldr	x0, [sp, #104]
   21c84:	ldr	x0, [x0, #96]
   21c88:	cmp	x0, #0x0
   21c8c:	b.eq	21ca8 <udev_util_encode_string@@LIBUDEV_183+0x16478>  // b.none
   21c90:	ldr	x0, [sp, #104]
   21c94:	ldr	x0, [x0, #96]
   21c98:	ldr	x1, [sp, #104]
   21c9c:	ldr	x1, [x1, #88]
   21ca0:	str	x1, [x0, #88]
   21ca4:	b	21d04 <udev_util_encode_string@@LIBUDEV_183+0x164d4>
   21ca8:	ldr	x0, [sp, #96]
   21cac:	ldr	x0, [x0]
   21cb0:	ldr	x1, [sp, #104]
   21cb4:	cmp	x1, x0
   21cb8:	cset	w0, ne  // ne = any
   21cbc:	and	w0, w0, #0xff
   21cc0:	and	x0, x0, #0xff
   21cc4:	cmp	x0, #0x0
   21cc8:	b.eq	21cf4 <udev_util_encode_string@@LIBUDEV_183+0x164c4>  // b.none
   21ccc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21cd0:	add	x1, x0, #0xb
   21cd4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21cd8:	add	x4, x0, #0xd90
   21cdc:	mov	w3, #0x307                 	// #775
   21ce0:	mov	x2, x1
   21ce4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21ce8:	add	x1, x0, #0x348
   21cec:	mov	w0, #0x0                   	// #0
   21cf0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21cf4:	ldr	x0, [sp, #104]
   21cf8:	ldr	x1, [x0, #88]
   21cfc:	ldr	x0, [sp, #96]
   21d00:	str	x1, [x0]
   21d04:	ldr	x0, [sp, #104]
   21d08:	str	xzr, [x0, #96]
   21d0c:	ldr	x0, [sp, #104]
   21d10:	ldr	x1, [x0, #96]
   21d14:	ldr	x0, [sp, #104]
   21d18:	str	x1, [x0, #88]
   21d1c:	ldr	x0, [sp, #88]
   21d20:	ldr	w0, [x0, #392]
   21d24:	sub	w1, w0, #0x1
   21d28:	ldr	x0, [sp, #88]
   21d2c:	str	w1, [x0, #392]
   21d30:	ldr	x0, [sp, #40]
   21d34:	ldrb	w0, [x0, #41]
   21d38:	ubfx	x0, x0, #2, #1
   21d3c:	and	w0, w0, #0xff
   21d40:	eor	w0, w0, #0x1
   21d44:	and	w0, w0, #0xff
   21d48:	cmp	w0, #0x0
   21d4c:	b.eq	21d60 <udev_util_encode_string@@LIBUDEV_183+0x16530>  // b.none
   21d50:	ldr	x0, [sp, #88]
   21d54:	bl	20ce0 <udev_util_encode_string@@LIBUDEV_183+0x154b0>
   21d58:	b	21d60 <udev_util_encode_string@@LIBUDEV_183+0x16530>
   21d5c:	nop
   21d60:	ldr	x19, [sp, #16]
   21d64:	ldp	x29, x30, [sp], #112
   21d68:	ret
   21d6c:	stp	x29, x30, [sp, #-32]!
   21d70:	mov	x29, sp
   21d74:	str	x0, [sp, #24]
   21d78:	ldr	x0, [sp, #24]
   21d7c:	cmp	x0, #0x0
   21d80:	cset	w0, eq  // eq = none
   21d84:	and	w0, w0, #0xff
   21d88:	and	x0, x0, #0xff
   21d8c:	cmp	x0, #0x0
   21d90:	b.eq	21dbc <udev_util_encode_string@@LIBUDEV_183+0x1658c>  // b.none
   21d94:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21d98:	add	x1, x0, #0xb
   21d9c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21da0:	add	x4, x0, #0xda8
   21da4:	mov	w3, #0x312                 	// #786
   21da8:	mov	x2, x1
   21dac:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21db0:	add	x1, x0, #0x1e8
   21db4:	mov	w0, #0x0                   	// #0
   21db8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21dbc:	ldr	x0, [sp, #24]
   21dc0:	bl	21588 <udev_util_encode_string@@LIBUDEV_183+0x15d58>
   21dc4:	ldr	x0, [sp, #24]
   21dc8:	ldrb	w0, [x0, #40]
   21dcc:	and	w0, w0, #0x1f
   21dd0:	and	w0, w0, #0xff
   21dd4:	cmp	w0, #0x0
   21dd8:	b.ne	21e0c <udev_util_encode_string@@LIBUDEV_183+0x165dc>  // b.any
   21ddc:	ldr	x0, [sp, #24]
   21de0:	ldrb	w0, [x0, #124]
   21de4:	and	w0, w0, #0x2
   21de8:	and	w0, w0, #0xff
   21dec:	cmp	w0, #0x0
   21df0:	b.eq	21e0c <udev_util_encode_string@@LIBUDEV_183+0x165dc>  // b.none
   21df4:	ldr	x0, [sp, #24]
   21df8:	ldr	w0, [x0, #112]
   21dfc:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   21e00:	mov	w1, w0
   21e04:	ldr	x0, [sp, #24]
   21e08:	str	w1, [x0, #112]
   21e0c:	ldr	x0, [sp, #24]
   21e10:	ldr	x0, [x0, #80]
   21e14:	cmp	x0, #0x0
   21e18:	b.eq	21e30 <udev_util_encode_string@@LIBUDEV_183+0x16600>  // b.none
   21e1c:	ldr	x0, [sp, #24]
   21e20:	ldr	x1, [x0, #80]
   21e24:	ldr	x0, [sp, #24]
   21e28:	ldr	x0, [x0, #16]
   21e2c:	blr	x1
   21e30:	ldr	x0, [sp, #24]
   21e34:	ldr	x0, [x0, #32]
   21e38:	bl	54b0 <free@plt>
   21e3c:	ldr	x0, [sp, #24]
   21e40:	bl	54b0 <free@plt>
   21e44:	nop
   21e48:	ldp	x29, x30, [sp], #32
   21e4c:	ret
   21e50:	stp	x29, x30, [sp, #-64]!
   21e54:	mov	x29, sp
   21e58:	str	x0, [sp, #24]
   21e5c:	str	x1, [sp, #16]
   21e60:	ldr	x0, [sp, #24]
   21e64:	cmp	x0, #0x0
   21e68:	cset	w0, eq  // eq = none
   21e6c:	and	w0, w0, #0xff
   21e70:	and	x0, x0, #0xff
   21e74:	cmp	x0, #0x0
   21e78:	b.eq	21ea4 <udev_util_encode_string@@LIBUDEV_183+0x16674>  // b.none
   21e7c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21e80:	add	x1, x0, #0xb
   21e84:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21e88:	add	x4, x0, #0xdb8
   21e8c:	mov	w3, #0x511                 	// #1297
   21e90:	mov	x2, x1
   21e94:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21e98:	add	x1, x0, #0x100
   21e9c:	mov	w0, #0x0                   	// #0
   21ea0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21ea4:	ldr	x0, [sp, #16]
   21ea8:	cmp	x0, #0x0
   21eac:	b.eq	221bc <udev_util_encode_string@@LIBUDEV_183+0x1698c>  // b.none
   21eb0:	ldr	x0, [sp, #16]
   21eb4:	ldr	x0, [x0, #16]
   21eb8:	bl	20944 <udev_util_encode_string@@LIBUDEV_183+0x15114>
   21ebc:	and	w0, w0, #0xff
   21ec0:	eor	w0, w0, #0x1
   21ec4:	and	w0, w0, #0xff
   21ec8:	and	x0, x0, #0xff
   21ecc:	cmp	x0, #0x0
   21ed0:	b.eq	21efc <udev_util_encode_string@@LIBUDEV_183+0x166cc>  // b.none
   21ed4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21ed8:	add	x1, x0, #0xb
   21edc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21ee0:	add	x4, x0, #0xdb8
   21ee4:	mov	w3, #0x516                 	// #1302
   21ee8:	mov	x2, x1
   21eec:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21ef0:	add	x1, x0, #0x590
   21ef4:	mov	w0, #0x0                   	// #0
   21ef8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21efc:	ldr	x0, [sp, #16]
   21f00:	ldr	x0, [x0, #24]
   21f04:	bl	20944 <udev_util_encode_string@@LIBUDEV_183+0x15114>
   21f08:	and	w0, w0, #0xff
   21f0c:	eor	w0, w0, #0x1
   21f10:	and	w0, w0, #0xff
   21f14:	and	x0, x0, #0xff
   21f18:	cmp	x0, #0x0
   21f1c:	b.eq	21f48 <udev_util_encode_string@@LIBUDEV_183+0x16718>  // b.none
   21f20:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21f24:	add	x1, x0, #0xb
   21f28:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21f2c:	add	x4, x0, #0xdb8
   21f30:	mov	w3, #0x517                 	// #1303
   21f34:	mov	x2, x1
   21f38:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21f3c:	add	x1, x0, #0x5b0
   21f40:	mov	w0, #0x0                   	// #0
   21f44:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21f48:	ldr	x0, [sp, #16]
   21f4c:	ldr	x0, [x0, #304]
   21f50:	cmp	x0, #0x0
   21f54:	b.eq	22070 <udev_util_encode_string@@LIBUDEV_183+0x16840>  // b.none
   21f58:	ldr	x0, [sp, #24]
   21f5c:	add	x0, x0, #0x130
   21f60:	str	x0, [sp, #48]
   21f64:	ldr	x0, [sp, #16]
   21f68:	str	x0, [sp, #56]
   21f6c:	ldr	x0, [sp, #56]
   21f70:	cmp	x0, #0x0
   21f74:	cset	w0, eq  // eq = none
   21f78:	and	w0, w0, #0xff
   21f7c:	and	x0, x0, #0xff
   21f80:	cmp	x0, #0x0
   21f84:	b.eq	21fb0 <udev_util_encode_string@@LIBUDEV_183+0x16780>  // b.none
   21f88:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21f8c:	add	x1, x0, #0xb
   21f90:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21f94:	add	x4, x0, #0xdb8
   21f98:	mov	w3, #0x51a                 	// #1306
   21f9c:	mov	x2, x1
   21fa0:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   21fa4:	add	x1, x0, #0x340
   21fa8:	mov	w0, #0x0                   	// #0
   21fac:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   21fb0:	ldr	x0, [sp, #56]
   21fb4:	ldr	x0, [x0, #320]
   21fb8:	cmp	x0, #0x0
   21fbc:	b.eq	21fd4 <udev_util_encode_string@@LIBUDEV_183+0x167a4>  // b.none
   21fc0:	ldr	x0, [sp, #56]
   21fc4:	ldr	x0, [x0, #320]
   21fc8:	ldr	x1, [sp, #56]
   21fcc:	ldr	x1, [x1, #328]
   21fd0:	str	x1, [x0, #328]
   21fd4:	ldr	x0, [sp, #56]
   21fd8:	ldr	x0, [x0, #328]
   21fdc:	cmp	x0, #0x0
   21fe0:	b.eq	21ffc <udev_util_encode_string@@LIBUDEV_183+0x167cc>  // b.none
   21fe4:	ldr	x0, [sp, #56]
   21fe8:	ldr	x0, [x0, #328]
   21fec:	ldr	x1, [sp, #56]
   21ff0:	ldr	x1, [x1, #320]
   21ff4:	str	x1, [x0, #320]
   21ff8:	b	22058 <udev_util_encode_string@@LIBUDEV_183+0x16828>
   21ffc:	ldr	x0, [sp, #48]
   22000:	ldr	x0, [x0]
   22004:	ldr	x1, [sp, #56]
   22008:	cmp	x1, x0
   2200c:	cset	w0, ne  // ne = any
   22010:	and	w0, w0, #0xff
   22014:	and	x0, x0, #0xff
   22018:	cmp	x0, #0x0
   2201c:	b.eq	22048 <udev_util_encode_string@@LIBUDEV_183+0x16818>  // b.none
   22020:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22024:	add	x1, x0, #0xb
   22028:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2202c:	add	x4, x0, #0xdb8
   22030:	mov	w3, #0x51a                 	// #1306
   22034:	mov	x2, x1
   22038:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2203c:	add	x1, x0, #0x348
   22040:	mov	w0, #0x0                   	// #0
   22044:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22048:	ldr	x0, [sp, #56]
   2204c:	ldr	x1, [x0, #320]
   22050:	ldr	x0, [sp, #48]
   22054:	str	x1, [x0]
   22058:	ldr	x0, [sp, #56]
   2205c:	str	xzr, [x0, #328]
   22060:	ldr	x0, [sp, #56]
   22064:	ldr	x1, [x0, #328]
   22068:	ldr	x0, [sp, #56]
   2206c:	str	x1, [x0, #320]
   22070:	ldr	x0, [sp, #16]
   22074:	ldr	x0, [x0, #16]
   22078:	bl	208bc <udev_util_encode_string@@LIBUDEV_183+0x1508c>
   2207c:	ldr	x0, [sp, #16]
   22080:	ldr	x0, [x0, #24]
   22084:	bl	208bc <udev_util_encode_string@@LIBUDEV_183+0x1508c>
   22088:	ldr	x0, [sp, #24]
   2208c:	ldr	x2, [x0, #288]
   22090:	ldr	x0, [sp, #16]
   22094:	add	x0, x0, #0x8
   22098:	mov	x1, x0
   2209c:	mov	x0, x2
   220a0:	bl	20904 <udev_util_encode_string@@LIBUDEV_183+0x150d4>
   220a4:	mov	x1, x0
   220a8:	ldr	x0, [sp, #16]
   220ac:	cmp	x0, x1
   220b0:	cset	w0, ne  // ne = any
   220b4:	and	w0, w0, #0xff
   220b8:	and	x0, x0, #0xff
   220bc:	cmp	x0, #0x0
   220c0:	b.eq	220ec <udev_util_encode_string@@LIBUDEV_183+0x168bc>  // b.none
   220c4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   220c8:	add	x1, x0, #0xb
   220cc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   220d0:	add	x4, x0, #0xdb8
   220d4:	mov	w3, #0x51f                 	// #1311
   220d8:	mov	x2, x1
   220dc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   220e0:	add	x1, x0, #0x5c8
   220e4:	mov	w0, #0x0                   	// #0
   220e8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   220ec:	ldr	x0, [sp, #16]
   220f0:	ldr	w0, [x0, #4]
   220f4:	cmp	w0, #0x0
   220f8:	b.lt	221b0 <udev_util_encode_string@@LIBUDEV_183+0x16980>  // b.tstop
   220fc:	ldr	x0, [sp, #24]
   22100:	ldr	w4, [x0, #4]
   22104:	ldr	x0, [sp, #16]
   22108:	ldr	w0, [x0, #4]
   2210c:	mov	x3, #0x0                   	// #0
   22110:	mov	w2, w0
   22114:	mov	w1, #0x2                   	// #2
   22118:	mov	w0, w4
   2211c:	bl	5620 <epoll_ctl@plt>
   22120:	cmp	w0, #0x0
   22124:	b.ge	221a4 <udev_util_encode_string@@LIBUDEV_183+0x16974>  // b.tcont
   22128:	mov	w0, #0x7                   	// #7
   2212c:	str	w0, [sp, #36]
   22130:	bl	57d0 <__errno_location@plt>
   22134:	ldr	w0, [x0]
   22138:	str	w0, [sp, #40]
   2213c:	str	wzr, [sp, #44]
   22140:	ldr	w0, [sp, #44]
   22144:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   22148:	mov	w1, w0
   2214c:	ldr	w0, [sp, #36]
   22150:	and	w0, w0, #0x7
   22154:	cmp	w1, w0
   22158:	b.lt	2219c <udev_util_encode_string@@LIBUDEV_183+0x1696c>  // b.tstop
   2215c:	ldr	w0, [sp, #44]
   22160:	lsl	w1, w0, #10
   22164:	ldr	w0, [sp, #36]
   22168:	orr	w6, w1, w0
   2216c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22170:	add	x1, x0, #0xb
   22174:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22178:	add	x5, x0, #0x600
   2217c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22180:	add	x4, x0, #0xdd0
   22184:	mov	w3, #0x523                 	// #1315
   22188:	mov	x2, x1
   2218c:	ldr	w1, [sp, #40]
   22190:	mov	w0, w6
   22194:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   22198:	b	221a4 <udev_util_encode_string@@LIBUDEV_183+0x16974>
   2219c:	ldr	w0, [sp, #40]
   221a0:	cmp	w0, #0x0
   221a4:	ldr	x0, [sp, #16]
   221a8:	ldr	w0, [x0, #4]
   221ac:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   221b0:	ldr	x0, [sp, #16]
   221b4:	bl	54b0 <free@plt>
   221b8:	b	221c0 <udev_util_encode_string@@LIBUDEV_183+0x16990>
   221bc:	nop
   221c0:	ldp	x29, x30, [sp], #64
   221c4:	ret
   221c8:	stp	x29, x30, [sp, #-64]!
   221cc:	mov	x29, sp
   221d0:	str	x0, [sp, #24]
   221d4:	str	x1, [sp, #16]
   221d8:	ldr	x0, [sp, #24]
   221dc:	cmp	x0, #0x0
   221e0:	cset	w0, eq  // eq = none
   221e4:	and	w0, w0, #0xff
   221e8:	and	x0, x0, #0xff
   221ec:	cmp	x0, #0x0
   221f0:	b.eq	2221c <udev_util_encode_string@@LIBUDEV_183+0x169ec>  // b.none
   221f4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   221f8:	add	x1, x0, #0xb
   221fc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22200:	add	x4, x0, #0xde8
   22204:	mov	w3, #0x586                 	// #1414
   22208:	mov	x2, x1
   2220c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22210:	add	x1, x0, #0x100
   22214:	mov	w0, #0x0                   	// #0
   22218:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2221c:	ldr	x0, [sp, #16]
   22220:	cmp	x0, #0x0
   22224:	b.eq	2256c <udev_util_encode_string@@LIBUDEV_183+0x16d3c>  // b.none
   22228:	ldr	x0, [sp, #16]
   2222c:	ldr	x0, [x0, #32]
   22230:	cmp	x0, #0x0
   22234:	cset	w0, ne  // ne = any
   22238:	and	w0, w0, #0xff
   2223c:	and	x0, x0, #0xff
   22240:	cmp	x0, #0x0
   22244:	b.eq	22270 <udev_util_encode_string@@LIBUDEV_183+0x16a40>  // b.none
   22248:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2224c:	add	x1, x0, #0xb
   22250:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22254:	add	x4, x0, #0xde8
   22258:	mov	w3, #0x58b                 	// #1419
   2225c:	mov	x2, x1
   22260:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22264:	add	x1, x0, #0x648
   22268:	mov	w0, #0x0                   	// #0
   2226c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22270:	ldr	x0, [sp, #16]
   22274:	ldr	w0, [x0, #16]
   22278:	cmp	w0, #0x0
   2227c:	b.lt	223a4 <udev_util_encode_string@@LIBUDEV_183+0x16b74>  // b.tstop
   22280:	ldr	x0, [sp, #24]
   22284:	add	x0, x0, #0x128
   22288:	str	x0, [sp, #48]
   2228c:	ldr	x0, [sp, #16]
   22290:	str	x0, [sp, #56]
   22294:	ldr	x0, [sp, #56]
   22298:	cmp	x0, #0x0
   2229c:	cset	w0, eq  // eq = none
   222a0:	and	w0, w0, #0xff
   222a4:	and	x0, x0, #0xff
   222a8:	cmp	x0, #0x0
   222ac:	b.eq	222d8 <udev_util_encode_string@@LIBUDEV_183+0x16aa8>  // b.none
   222b0:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   222b4:	add	x1, x0, #0xb
   222b8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   222bc:	add	x4, x0, #0xde8
   222c0:	mov	w3, #0x58e                 	// #1422
   222c4:	mov	x2, x1
   222c8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   222cc:	add	x1, x0, #0x340
   222d0:	mov	w0, #0x0                   	// #0
   222d4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   222d8:	ldr	x0, [sp, #56]
   222dc:	ldr	x0, [x0, #48]
   222e0:	cmp	x0, #0x0
   222e4:	b.eq	222fc <udev_util_encode_string@@LIBUDEV_183+0x16acc>  // b.none
   222e8:	ldr	x0, [sp, #56]
   222ec:	ldr	x0, [x0, #48]
   222f0:	ldr	x1, [sp, #56]
   222f4:	ldr	x1, [x1, #56]
   222f8:	str	x1, [x0, #56]
   222fc:	ldr	x0, [sp, #56]
   22300:	ldr	x0, [x0, #56]
   22304:	cmp	x0, #0x0
   22308:	b.eq	22324 <udev_util_encode_string@@LIBUDEV_183+0x16af4>  // b.none
   2230c:	ldr	x0, [sp, #56]
   22310:	ldr	x0, [x0, #56]
   22314:	ldr	x1, [sp, #56]
   22318:	ldr	x1, [x1, #48]
   2231c:	str	x1, [x0, #48]
   22320:	b	22380 <udev_util_encode_string@@LIBUDEV_183+0x16b50>
   22324:	ldr	x0, [sp, #48]
   22328:	ldr	x0, [x0]
   2232c:	ldr	x1, [sp, #56]
   22330:	cmp	x1, x0
   22334:	cset	w0, ne  // ne = any
   22338:	and	w0, w0, #0xff
   2233c:	and	x0, x0, #0xff
   22340:	cmp	x0, #0x0
   22344:	b.eq	22370 <udev_util_encode_string@@LIBUDEV_183+0x16b40>  // b.none
   22348:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2234c:	add	x1, x0, #0xb
   22350:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22354:	add	x4, x0, #0xde8
   22358:	mov	w3, #0x58e                 	// #1422
   2235c:	mov	x2, x1
   22360:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22364:	add	x1, x0, #0x348
   22368:	mov	w0, #0x0                   	// #0
   2236c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22370:	ldr	x0, [sp, #56]
   22374:	ldr	x1, [x0, #48]
   22378:	ldr	x0, [sp, #48]
   2237c:	str	x1, [x0]
   22380:	ldr	x0, [sp, #56]
   22384:	str	xzr, [x0, #56]
   22388:	ldr	x0, [sp, #56]
   2238c:	ldr	x1, [x0, #56]
   22390:	ldr	x0, [sp, #56]
   22394:	str	x1, [x0, #48]
   22398:	ldr	x0, [sp, #16]
   2239c:	ldr	w0, [x0, #16]
   223a0:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   223a4:	ldr	x0, [sp, #16]
   223a8:	ldr	x0, [x0, #40]
   223ac:	cmp	x0, #0x0
   223b0:	b.eq	22560 <udev_util_encode_string@@LIBUDEV_183+0x16d30>  // b.none
   223b4:	ldr	x0, [sp, #16]
   223b8:	ldr	w0, [x0, #20]
   223bc:	cmp	w0, #0x0
   223c0:	b.lt	22504 <udev_util_encode_string@@LIBUDEV_183+0x16cd4>  // b.tstop
   223c4:	ldr	x0, [sp, #16]
   223c8:	ldr	x0, [x0, #40]
   223cc:	ldr	w0, [x0, #4]
   223d0:	cmp	w0, #0x0
   223d4:	b.lt	22498 <udev_util_encode_string@@LIBUDEV_183+0x16c68>  // b.tstop
   223d8:	ldr	x0, [sp, #16]
   223dc:	ldr	x0, [x0, #40]
   223e0:	ldr	w2, [x0, #4]
   223e4:	ldr	x0, [sp, #16]
   223e8:	ldr	w0, [x0, #20]
   223ec:	mov	w1, w0
   223f0:	mov	w0, w2
   223f4:	bl	5340 <inotify_rm_watch@plt>
   223f8:	cmp	w0, #0x0
   223fc:	b.ge	22498 <udev_util_encode_string@@LIBUDEV_183+0x16c68>  // b.tcont
   22400:	bl	57d0 <__errno_location@plt>
   22404:	ldr	w0, [x0]
   22408:	cmp	w0, #0x16
   2240c:	b.eq	22498 <udev_util_encode_string@@LIBUDEV_183+0x16c68>  // b.none
   22410:	mov	w0, #0x7                   	// #7
   22414:	str	w0, [sp, #36]
   22418:	bl	57d0 <__errno_location@plt>
   2241c:	ldr	w0, [x0]
   22420:	str	w0, [sp, #40]
   22424:	str	wzr, [sp, #44]
   22428:	ldr	w0, [sp, #44]
   2242c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   22430:	mov	w1, w0
   22434:	ldr	w0, [sp, #36]
   22438:	and	w0, w0, #0x7
   2243c:	cmp	w1, w0
   22440:	b.lt	22490 <udev_util_encode_string@@LIBUDEV_183+0x16c60>  // b.tstop
   22444:	ldr	w0, [sp, #44]
   22448:	lsl	w1, w0, #10
   2244c:	ldr	w0, [sp, #36]
   22450:	orr	w7, w1, w0
   22454:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22458:	add	x1, x0, #0xb
   2245c:	ldr	x0, [sp, #16]
   22460:	ldr	w0, [x0, #20]
   22464:	mov	w6, w0
   22468:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2246c:	add	x5, x0, #0x660
   22470:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22474:	add	x4, x0, #0xe00
   22478:	mov	w3, #0x59c                 	// #1436
   2247c:	mov	x2, x1
   22480:	ldr	w1, [sp, #40]
   22484:	mov	w0, w7
   22488:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   2248c:	b	22498 <udev_util_encode_string@@LIBUDEV_183+0x16c68>
   22490:	ldr	w0, [sp, #40]
   22494:	cmp	w0, #0x0
   22498:	ldr	x0, [sp, #16]
   2249c:	ldr	x0, [x0, #40]
   224a0:	ldr	x2, [x0, #24]
   224a4:	ldr	x0, [sp, #16]
   224a8:	ldr	w0, [x0, #20]
   224ac:	sxtw	x0, w0
   224b0:	mov	x1, x0
   224b4:	mov	x0, x2
   224b8:	bl	20904 <udev_util_encode_string@@LIBUDEV_183+0x150d4>
   224bc:	mov	x1, x0
   224c0:	ldr	x0, [sp, #16]
   224c4:	cmp	x0, x1
   224c8:	cset	w0, ne  // ne = any
   224cc:	and	w0, w0, #0xff
   224d0:	and	x0, x0, #0xff
   224d4:	cmp	x0, #0x0
   224d8:	b.eq	22504 <udev_util_encode_string@@LIBUDEV_183+0x16cd4>  // b.none
   224dc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   224e0:	add	x1, x0, #0xb
   224e4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   224e8:	add	x4, x0, #0xde8
   224ec:	mov	w3, #0x59f                 	// #1439
   224f0:	mov	x2, x1
   224f4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   224f8:	add	x1, x0, #0x6a0
   224fc:	mov	w0, #0x0                   	// #0
   22500:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22504:	ldr	x0, [sp, #16]
   22508:	ldr	x0, [x0, #40]
   2250c:	ldr	x0, [x0, #16]
   22510:	ldr	x1, [sp, #16]
   22514:	bl	20904 <udev_util_encode_string@@LIBUDEV_183+0x150d4>
   22518:	mov	x1, x0
   2251c:	ldr	x0, [sp, #16]
   22520:	cmp	x0, x1
   22524:	cset	w0, ne  // ne = any
   22528:	and	w0, w0, #0xff
   2252c:	and	x0, x0, #0xff
   22530:	cmp	x0, #0x0
   22534:	b.eq	22560 <udev_util_encode_string@@LIBUDEV_183+0x16d30>  // b.none
   22538:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2253c:	add	x1, x0, #0xb
   22540:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22544:	add	x4, x0, #0xde8
   22548:	mov	w3, #0x5a2                 	// #1442
   2254c:	mov	x2, x1
   22550:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22554:	add	x1, x0, #0x6e0
   22558:	mov	w0, #0x0                   	// #0
   2255c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22560:	ldr	x0, [sp, #16]
   22564:	bl	54b0 <free@plt>
   22568:	b	22570 <udev_util_encode_string@@LIBUDEV_183+0x16d40>
   2256c:	nop
   22570:	ldp	x29, x30, [sp], #64
   22574:	ret
   22578:	stp	x29, x30, [sp, #-48]!
   2257c:	mov	x29, sp
   22580:	str	x0, [sp, #24]
   22584:	str	x1, [sp, #16]
   22588:	ldr	x0, [sp, #24]
   2258c:	cmp	x0, #0x0
   22590:	cset	w0, eq  // eq = none
   22594:	and	w0, w0, #0xff
   22598:	and	x0, x0, #0xff
   2259c:	cmp	x0, #0x0
   225a0:	b.eq	225cc <udev_util_encode_string@@LIBUDEV_183+0x16d9c>  // b.none
   225a4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   225a8:	add	x1, x0, #0xb
   225ac:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   225b0:	add	x4, x0, #0xe18
   225b4:	mov	w3, #0x5ae                 	// #1454
   225b8:	mov	x2, x1
   225bc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   225c0:	add	x1, x0, #0x100
   225c4:	mov	w0, #0x0                   	// #0
   225c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   225cc:	ldr	x0, [sp, #16]
   225d0:	cmp	x0, #0x0
   225d4:	b.eq	22634 <udev_util_encode_string@@LIBUDEV_183+0x16e04>  // b.none
   225d8:	ldr	x0, [sp, #16]
   225dc:	ldr	x0, [x0, #32]
   225e0:	cmp	x0, #0x0
   225e4:	b.ne	2263c <udev_util_encode_string@@LIBUDEV_183+0x16e0c>  // b.any
   225e8:	ldr	x0, [sp, #16]
   225ec:	ldr	x0, [x0, #40]
   225f0:	str	x0, [sp, #40]
   225f4:	ldr	x1, [sp, #16]
   225f8:	ldr	x0, [sp, #24]
   225fc:	bl	221c8 <udev_util_encode_string@@LIBUDEV_183+0x16998>
   22600:	ldr	x0, [sp, #40]
   22604:	cmp	x0, #0x0
   22608:	b.eq	22640 <udev_util_encode_string@@LIBUDEV_183+0x16e10>  // b.none
   2260c:	ldr	x0, [sp, #40]
   22610:	ldr	x0, [x0, #16]
   22614:	bl	20944 <udev_util_encode_string@@LIBUDEV_183+0x15114>
   22618:	and	w0, w0, #0xff
   2261c:	cmp	w0, #0x0
   22620:	b.eq	22640 <udev_util_encode_string@@LIBUDEV_183+0x16e10>  // b.none
   22624:	ldr	x1, [sp, #40]
   22628:	ldr	x0, [sp, #24]
   2262c:	bl	21e50 <udev_util_encode_string@@LIBUDEV_183+0x16620>
   22630:	b	22640 <udev_util_encode_string@@LIBUDEV_183+0x16e10>
   22634:	nop
   22638:	b	22640 <udev_util_encode_string@@LIBUDEV_183+0x16e10>
   2263c:	nop
   22640:	ldp	x29, x30, [sp], #48
   22644:	ret
   22648:	stp	x29, x30, [sp, #-32]!
   2264c:	mov	x29, sp
   22650:	str	x0, [sp, #24]
   22654:	ldr	x0, [sp, #24]
   22658:	cmp	x0, #0x0
   2265c:	b.ne	22668 <udev_util_encode_string@@LIBUDEV_183+0x16e38>  // b.any
   22660:	mov	x0, #0x0                   	// #0
   22664:	b	226b8 <udev_util_encode_string@@LIBUDEV_183+0x16e88>
   22668:	ldr	x0, [sp, #24]
   2266c:	ldrb	w0, [x0, #41]
   22670:	and	w0, w0, #0x2
   22674:	and	w0, w0, #0xff
   22678:	cmp	w0, #0x0
   2267c:	b.eq	226ac <udev_util_encode_string@@LIBUDEV_183+0x16e7c>  // b.none
   22680:	ldr	x0, [sp, #24]
   22684:	ldrb	w0, [x0, #40]
   22688:	and	w0, w0, #0x1f
   2268c:	and	w0, w0, #0xff
   22690:	cmp	w0, #0x0
   22694:	b.ne	226a0 <udev_util_encode_string@@LIBUDEV_183+0x16e70>  // b.any
   22698:	ldr	x0, [sp, #24]
   2269c:	bl	20dfc <udev_util_encode_string@@LIBUDEV_183+0x155cc>
   226a0:	ldr	x0, [sp, #24]
   226a4:	bl	21588 <udev_util_encode_string@@LIBUDEV_183+0x15d58>
   226a8:	b	226b4 <udev_util_encode_string@@LIBUDEV_183+0x16e84>
   226ac:	ldr	x0, [sp, #24]
   226b0:	bl	21d6c <udev_util_encode_string@@LIBUDEV_183+0x1653c>
   226b4:	mov	x0, #0x0                   	// #0
   226b8:	ldp	x29, x30, [sp], #32
   226bc:	ret
   226c0:	stp	x29, x30, [sp, #-32]!
   226c4:	mov	x29, sp
   226c8:	str	x0, [sp, #24]
   226cc:	ldr	x0, [sp, #24]
   226d0:	cmp	x0, #0x0
   226d4:	b.ne	226e0 <udev_util_encode_string@@LIBUDEV_183+0x16eb0>  // b.any
   226d8:	mov	x0, #0x0                   	// #0
   226dc:	b	2275c <udev_util_encode_string@@LIBUDEV_183+0x16f2c>
   226e0:	ldr	x0, [sp, #24]
   226e4:	ldr	w0, [x0, #4]
   226e8:	cmp	w0, #0x0
   226ec:	cset	w0, eq  // eq = none
   226f0:	and	w0, w0, #0xff
   226f4:	and	x0, x0, #0xff
   226f8:	cmp	x0, #0x0
   226fc:	b.eq	22728 <udev_util_encode_string@@LIBUDEV_183+0x16ef8>  // b.none
   22700:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22704:	add	x1, x0, #0xb
   22708:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2270c:	add	x4, x0, #0xe30
   22710:	mov	w3, #0x69e                 	// #1694
   22714:	mov	x2, x1
   22718:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2271c:	add	x1, x0, #0x1d8
   22720:	mov	w0, #0x0                   	// #0
   22724:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22728:	ldr	x0, [sp, #24]
   2272c:	ldr	w0, [x0, #4]
   22730:	sub	w1, w0, #0x1
   22734:	ldr	x0, [sp, #24]
   22738:	str	w1, [x0, #4]
   2273c:	ldr	x0, [sp, #24]
   22740:	ldr	w0, [x0, #4]
   22744:	cmp	w0, #0x0
   22748:	b.eq	22754 <udev_util_encode_string@@LIBUDEV_183+0x16f24>  // b.none
   2274c:	mov	x0, #0x0                   	// #0
   22750:	b	2275c <udev_util_encode_string@@LIBUDEV_183+0x16f2c>
   22754:	ldr	x0, [sp, #24]
   22758:	bl	22648 <udev_util_encode_string@@LIBUDEV_183+0x16e18>
   2275c:	ldp	x29, x30, [sp], #32
   22760:	ret
   22764:	sub	sp, sp, #0x30
   22768:	str	x0, [sp, #8]
   2276c:	str	w1, [sp, #4]
   22770:	str	w2, [sp]
   22774:	mov	w0, #0xe995                	// #59797
   22778:	movk	w0, #0x5bd1, lsl #16
   2277c:	str	w0, [sp, #28]
   22780:	mov	w0, #0x18                  	// #24
   22784:	str	w0, [sp, #32]
   22788:	ldr	w0, [sp, #4]
   2278c:	ldr	w1, [sp]
   22790:	eor	w0, w1, w0
   22794:	str	w0, [sp, #24]
   22798:	ldr	x0, [sp, #8]
   2279c:	str	x0, [sp, #40]
   227a0:	b	22820 <udev_util_encode_string@@LIBUDEV_183+0x16ff0>
   227a4:	ldr	x0, [sp, #40]
   227a8:	ldr	w0, [x0]
   227ac:	str	w0, [sp, #36]
   227b0:	ldr	w1, [sp, #36]
   227b4:	ldr	w0, [sp, #28]
   227b8:	mul	w0, w1, w0
   227bc:	str	w0, [sp, #36]
   227c0:	ldr	w0, [sp, #32]
   227c4:	ldr	w1, [sp, #36]
   227c8:	lsr	w0, w1, w0
   227cc:	ldr	w1, [sp, #36]
   227d0:	eor	w0, w1, w0
   227d4:	str	w0, [sp, #36]
   227d8:	ldr	w1, [sp, #36]
   227dc:	ldr	w0, [sp, #28]
   227e0:	mul	w0, w1, w0
   227e4:	str	w0, [sp, #36]
   227e8:	ldr	w1, [sp, #24]
   227ec:	ldr	w0, [sp, #28]
   227f0:	mul	w0, w1, w0
   227f4:	str	w0, [sp, #24]
   227f8:	ldr	w1, [sp, #24]
   227fc:	ldr	w0, [sp, #36]
   22800:	eor	w0, w1, w0
   22804:	str	w0, [sp, #24]
   22808:	ldr	x0, [sp, #40]
   2280c:	add	x0, x0, #0x4
   22810:	str	x0, [sp, #40]
   22814:	ldr	w0, [sp, #4]
   22818:	sub	w0, w0, #0x4
   2281c:	str	w0, [sp, #4]
   22820:	ldr	w0, [sp, #4]
   22824:	cmp	w0, #0x3
   22828:	b.gt	227a4 <udev_util_encode_string@@LIBUDEV_183+0x16f74>
   2282c:	ldr	w0, [sp, #4]
   22830:	cmp	w0, #0x3
   22834:	b.eq	22860 <udev_util_encode_string@@LIBUDEV_183+0x17030>  // b.none
   22838:	ldr	w0, [sp, #4]
   2283c:	cmp	w0, #0x3
   22840:	b.gt	228c8 <udev_util_encode_string@@LIBUDEV_183+0x17098>
   22844:	ldr	w0, [sp, #4]
   22848:	cmp	w0, #0x1
   2284c:	b.eq	228a0 <udev_util_encode_string@@LIBUDEV_183+0x17070>  // b.none
   22850:	ldr	w0, [sp, #4]
   22854:	cmp	w0, #0x2
   22858:	b.eq	22880 <udev_util_encode_string@@LIBUDEV_183+0x17050>  // b.none
   2285c:	b	228c8 <udev_util_encode_string@@LIBUDEV_183+0x17098>
   22860:	ldr	x0, [sp, #40]
   22864:	add	x0, x0, #0x2
   22868:	ldrb	w0, [x0]
   2286c:	lsl	w0, w0, #16
   22870:	mov	w1, w0
   22874:	ldr	w0, [sp, #24]
   22878:	eor	w0, w0, w1
   2287c:	str	w0, [sp, #24]
   22880:	ldr	x0, [sp, #40]
   22884:	add	x0, x0, #0x1
   22888:	ldrb	w0, [x0]
   2288c:	lsl	w0, w0, #8
   22890:	mov	w1, w0
   22894:	ldr	w0, [sp, #24]
   22898:	eor	w0, w0, w1
   2289c:	str	w0, [sp, #24]
   228a0:	ldr	x0, [sp, #40]
   228a4:	ldrb	w0, [x0]
   228a8:	mov	w1, w0
   228ac:	ldr	w0, [sp, #24]
   228b0:	eor	w0, w0, w1
   228b4:	str	w0, [sp, #24]
   228b8:	ldr	w1, [sp, #24]
   228bc:	ldr	w0, [sp, #28]
   228c0:	mul	w0, w1, w0
   228c4:	str	w0, [sp, #24]
   228c8:	ldr	w0, [sp, #24]
   228cc:	lsr	w0, w0, #13
   228d0:	ldr	w1, [sp, #24]
   228d4:	eor	w0, w1, w0
   228d8:	str	w0, [sp, #24]
   228dc:	ldr	w1, [sp, #24]
   228e0:	ldr	w0, [sp, #28]
   228e4:	mul	w0, w1, w0
   228e8:	str	w0, [sp, #24]
   228ec:	ldr	w0, [sp, #24]
   228f0:	lsr	w0, w0, #15
   228f4:	ldr	w1, [sp, #24]
   228f8:	eor	w0, w1, w0
   228fc:	str	w0, [sp, #24]
   22900:	ldr	w0, [sp, #24]
   22904:	add	sp, sp, #0x30
   22908:	ret
   2290c:	sub	sp, sp, #0x10
   22910:	str	x0, [sp, #8]
   22914:	str	x1, [sp]
   22918:	ldr	x0, [sp]
   2291c:	cmp	x0, #0x0
   22920:	cset	w0, ne  // ne = any
   22924:	and	w0, w0, #0xff
   22928:	and	x0, x0, #0xff
   2292c:	cmp	x0, #0x0
   22930:	b.eq	22974 <udev_util_encode_string@@LIBUDEV_183+0x17144>  // b.none
   22934:	mov	x2, #0x0                   	// #0
   22938:	ldr	x1, [sp, #8]
   2293c:	ldr	x0, [sp]
   22940:	umulh	x0, x1, x0
   22944:	cmp	x0, #0x0
   22948:	b.eq	22950 <udev_util_encode_string@@LIBUDEV_183+0x17120>  // b.none
   2294c:	mov	x2, #0x1                   	// #1
   22950:	mov	x0, x2
   22954:	cmp	x0, #0x0
   22958:	cset	w0, ne  // ne = any
   2295c:	and	w0, w0, #0xff
   22960:	and	x0, x0, #0xff
   22964:	cmp	x0, #0x0
   22968:	b.eq	22974 <udev_util_encode_string@@LIBUDEV_183+0x17144>  // b.none
   2296c:	mov	w0, #0x1                   	// #1
   22970:	b	22978 <udev_util_encode_string@@LIBUDEV_183+0x17148>
   22974:	mov	w0, #0x0                   	// #0
   22978:	and	w0, w0, #0x1
   2297c:	and	w0, w0, #0xff
   22980:	add	sp, sp, #0x10
   22984:	ret
   22988:	stp	x29, x30, [sp, #-96]!
   2298c:	mov	x29, sp
   22990:	str	x0, [sp, #40]
   22994:	str	x1, [sp, #32]
   22998:	str	x2, [sp, #24]
   2299c:	str	x3, [sp, #16]
   229a0:	ldr	x0, [sp, #40]
   229a4:	cmp	x0, #0x0
   229a8:	cset	w0, eq  // eq = none
   229ac:	and	w0, w0, #0xff
   229b0:	and	x0, x0, #0xff
   229b4:	cmp	x0, #0x0
   229b8:	b.eq	229e4 <udev_util_encode_string@@LIBUDEV_183+0x171b4>  // b.none
   229bc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   229c0:	add	x1, x0, #0xe4b
   229c4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   229c8:	add	x4, x0, #0xe90
   229cc:	mov	w3, #0x2e                  	// #46
   229d0:	mov	x2, x1
   229d4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   229d8:	add	x1, x0, #0xe78
   229dc:	mov	w0, #0x0                   	// #0
   229e0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   229e4:	ldr	x0, [sp, #32]
   229e8:	cmp	x0, #0x0
   229ec:	cset	w0, eq  // eq = none
   229f0:	and	w0, w0, #0xff
   229f4:	and	x0, x0, #0xff
   229f8:	cmp	x0, #0x0
   229fc:	b.eq	22a28 <udev_util_encode_string@@LIBUDEV_183+0x171f8>  // b.none
   22a00:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22a04:	add	x1, x0, #0xe4b
   22a08:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22a0c:	add	x4, x0, #0xe90
   22a10:	mov	w3, #0x2f                  	// #47
   22a14:	mov	x2, x1
   22a18:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22a1c:	add	x1, x0, #0xe80
   22a20:	mov	w0, #0x0                   	// #0
   22a24:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22a28:	ldr	x0, [sp, #32]
   22a2c:	ldr	x0, [x0]
   22a30:	ldr	x1, [sp, #24]
   22a34:	cmp	x1, x0
   22a38:	b.hi	22a48 <udev_util_encode_string@@LIBUDEV_183+0x17218>  // b.pmore
   22a3c:	ldr	x0, [sp, #40]
   22a40:	ldr	x0, [x0]
   22a44:	b	22b90 <udev_util_encode_string@@LIBUDEV_183+0x17360>
   22a48:	ldr	x0, [sp, #24]
   22a4c:	lsr	x0, x0, #63
   22a50:	and	w0, w0, #0xff
   22a54:	and	x0, x0, #0xff
   22a58:	cmp	x0, #0x0
   22a5c:	b.eq	22a68 <udev_util_encode_string@@LIBUDEV_183+0x17238>  // b.none
   22a60:	mov	x0, #0x0                   	// #0
   22a64:	b	22b90 <udev_util_encode_string@@LIBUDEV_183+0x17360>
   22a68:	ldr	x0, [sp, #24]
   22a6c:	lsl	x0, x0, #1
   22a70:	str	x0, [sp, #64]
   22a74:	ldr	x1, [sp, #16]
   22a78:	ldr	x0, [sp, #64]
   22a7c:	bl	2290c <udev_util_encode_string@@LIBUDEV_183+0x170dc>
   22a80:	and	w0, w0, #0xff
   22a84:	cmp	w0, #0x0
   22a88:	b.eq	22a94 <udev_util_encode_string@@LIBUDEV_183+0x17264>  // b.none
   22a8c:	mov	x0, #0x0                   	// #0
   22a90:	b	22b90 <udev_util_encode_string@@LIBUDEV_183+0x17360>
   22a94:	ldr	x1, [sp, #64]
   22a98:	ldr	x0, [sp, #16]
   22a9c:	mul	x0, x1, x0
   22aa0:	str	x0, [sp, #56]
   22aa4:	ldr	x0, [sp, #56]
   22aa8:	cmp	x0, #0x3f
   22aac:	b.hi	22ab8 <udev_util_encode_string@@LIBUDEV_183+0x17288>  // b.pmore
   22ab0:	mov	x0, #0x40                  	// #64
   22ab4:	str	x0, [sp, #56]
   22ab8:	ldr	x0, [sp, #40]
   22abc:	ldr	x0, [x0]
   22ac0:	ldr	x1, [sp, #56]
   22ac4:	bl	5330 <realloc@plt>
   22ac8:	str	x0, [sp, #72]
   22acc:	ldr	x0, [sp, #72]
   22ad0:	cmp	x0, #0x0
   22ad4:	b.ne	22ae0 <udev_util_encode_string@@LIBUDEV_183+0x172b0>  // b.any
   22ad8:	mov	x0, #0x0                   	// #0
   22adc:	b	22b90 <udev_util_encode_string@@LIBUDEV_183+0x17360>
   22ae0:	ldr	x0, [sp, #16]
   22ae4:	cmp	x0, #0x0
   22ae8:	b.eq	22b74 <udev_util_encode_string@@LIBUDEV_183+0x17344>  // b.none
   22aec:	ldr	x1, [sp, #56]
   22af0:	ldr	x0, [sp, #16]
   22af4:	udiv	x0, x1, x0
   22af8:	str	x0, [sp, #64]
   22afc:	ldr	x0, [sp, #72]
   22b00:	bl	5200 <malloc_usable_size@plt>
   22b04:	mov	x1, x0
   22b08:	ldr	x0, [sp, #16]
   22b0c:	udiv	x0, x1, x0
   22b10:	str	x0, [sp, #80]
   22b14:	ldr	x1, [sp, #80]
   22b18:	ldr	x0, [sp, #64]
   22b1c:	cmp	x1, x0
   22b20:	b.ls	22b74 <udev_util_encode_string@@LIBUDEV_183+0x17344>  // b.plast
   22b24:	ldr	x2, [sp, #16]
   22b28:	ldr	x1, [sp, #80]
   22b2c:	ldr	x0, [sp, #72]
   22b30:	bl	50d0 <reallocarray@plt>
   22b34:	str	x0, [sp, #88]
   22b38:	ldr	x0, [sp, #88]
   22b3c:	cmp	x0, #0x0
   22b40:	cset	w0, ne  // ne = any
   22b44:	and	w0, w0, #0xff
   22b48:	and	x0, x0, #0xff
   22b4c:	cmp	x0, #0x0
   22b50:	b.eq	22b74 <udev_util_encode_string@@LIBUDEV_183+0x17344>  // b.none
   22b54:	ldr	x0, [sp, #40]
   22b58:	ldr	x1, [sp, #88]
   22b5c:	str	x1, [x0]
   22b60:	ldr	x0, [sp, #32]
   22b64:	ldr	x1, [sp, #80]
   22b68:	str	x1, [x0]
   22b6c:	ldr	x0, [sp, #88]
   22b70:	b	22b90 <udev_util_encode_string@@LIBUDEV_183+0x17360>
   22b74:	ldr	x0, [sp, #40]
   22b78:	ldr	x1, [sp, #72]
   22b7c:	str	x1, [x0]
   22b80:	ldr	x0, [sp, #32]
   22b84:	ldr	x1, [sp, #64]
   22b88:	str	x1, [x0]
   22b8c:	ldr	x0, [sp, #72]
   22b90:	ldp	x29, x30, [sp], #96
   22b94:	ret
   22b98:	stp	x29, x30, [sp, #-32]!
   22b9c:	mov	x29, sp
   22ba0:	strb	w0, [sp, #31]
   22ba4:	str	x1, [sp, #16]
   22ba8:	ldrb	w0, [sp, #31]
   22bac:	cmp	w0, #0x2f
   22bb0:	b.ls	22bc0 <udev_util_encode_string@@LIBUDEV_183+0x17390>  // b.plast
   22bb4:	ldrb	w0, [sp, #31]
   22bb8:	cmp	w0, #0x39
   22bbc:	b.ls	22c30 <udev_util_encode_string@@LIBUDEV_183+0x17400>  // b.plast
   22bc0:	ldrb	w0, [sp, #31]
   22bc4:	cmp	w0, #0x40
   22bc8:	b.ls	22bd8 <udev_util_encode_string@@LIBUDEV_183+0x173a8>  // b.plast
   22bcc:	ldrb	w0, [sp, #31]
   22bd0:	cmp	w0, #0x5a
   22bd4:	b.ls	22c30 <udev_util_encode_string@@LIBUDEV_183+0x17400>  // b.plast
   22bd8:	ldrb	w0, [sp, #31]
   22bdc:	cmp	w0, #0x60
   22be0:	b.ls	22bf0 <udev_util_encode_string@@LIBUDEV_183+0x173c0>  // b.plast
   22be4:	ldrb	w0, [sp, #31]
   22be8:	cmp	w0, #0x7a
   22bec:	b.ls	22c30 <udev_util_encode_string@@LIBUDEV_183+0x17400>  // b.plast
   22bf0:	ldrb	w0, [sp, #31]
   22bf4:	mov	w1, w0
   22bf8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22bfc:	add	x0, x0, #0xea0
   22c00:	bl	5570 <strchr@plt>
   22c04:	cmp	x0, #0x0
   22c08:	b.ne	22c30 <udev_util_encode_string@@LIBUDEV_183+0x17400>  // b.any
   22c0c:	ldr	x0, [sp, #16]
   22c10:	cmp	x0, #0x0
   22c14:	b.eq	22c38 <udev_util_encode_string@@LIBUDEV_183+0x17408>  // b.none
   22c18:	ldrb	w0, [sp, #31]
   22c1c:	mov	w1, w0
   22c20:	ldr	x0, [sp, #16]
   22c24:	bl	5570 <strchr@plt>
   22c28:	cmp	x0, #0x0
   22c2c:	b.eq	22c38 <udev_util_encode_string@@LIBUDEV_183+0x17408>  // b.none
   22c30:	mov	w0, #0x1                   	// #1
   22c34:	b	22c3c <udev_util_encode_string@@LIBUDEV_183+0x1740c>
   22c38:	mov	w0, #0x0                   	// #0
   22c3c:	ldp	x29, x30, [sp], #32
   22c40:	ret
   22c44:	stp	x29, x30, [sp, #-80]!
   22c48:	mov	x29, sp
   22c4c:	str	x0, [sp, #40]
   22c50:	str	x1, [sp, #32]
   22c54:	str	x2, [sp, #24]
   22c58:	ldr	x0, [sp, #40]
   22c5c:	cmp	x0, #0x0
   22c60:	b.eq	22c70 <udev_util_encode_string@@LIBUDEV_183+0x17440>  // b.none
   22c64:	ldr	x0, [sp, #32]
   22c68:	cmp	x0, #0x0
   22c6c:	b.ne	22c78 <udev_util_encode_string@@LIBUDEV_183+0x17448>  // b.any
   22c70:	mov	w0, #0xffffffea            	// #-22
   22c74:	b	22e48 <udev_util_encode_string@@LIBUDEV_183+0x17618>
   22c78:	str	xzr, [sp, #64]
   22c7c:	str	xzr, [sp, #72]
   22c80:	b	22e04 <udev_util_encode_string@@LIBUDEV_183+0x175d4>
   22c84:	ldr	x1, [sp, #40]
   22c88:	ldr	x0, [sp, #64]
   22c8c:	add	x0, x1, x0
   22c90:	mov	x1, #0xffffffffffffffff    	// #-1
   22c94:	bl	361d4 <udev_util_encode_string@@LIBUDEV_183+0x2a9a4>
   22c98:	str	w0, [sp, #60]
   22c9c:	ldr	w0, [sp, #60]
   22ca0:	cmp	w0, #0x1
   22ca4:	b.le	22d20 <udev_util_encode_string@@LIBUDEV_183+0x174f0>
   22ca8:	ldr	x1, [sp, #24]
   22cac:	ldr	x0, [sp, #72]
   22cb0:	sub	x1, x1, x0
   22cb4:	ldrsw	x0, [sp, #60]
   22cb8:	cmp	x1, x0
   22cbc:	b.cs	22cc8 <udev_util_encode_string@@LIBUDEV_183+0x17498>  // b.hs, b.nlast
   22cc0:	mov	w0, #0xffffffea            	// #-22
   22cc4:	b	22e48 <udev_util_encode_string@@LIBUDEV_183+0x17618>
   22cc8:	ldr	x1, [sp, #32]
   22ccc:	ldr	x0, [sp, #72]
   22cd0:	add	x3, x1, x0
   22cd4:	ldr	x1, [sp, #40]
   22cd8:	ldr	x0, [sp, #64]
   22cdc:	add	x0, x1, x0
   22ce0:	ldrsw	x1, [sp, #60]
   22ce4:	mov	x2, x1
   22ce8:	mov	x1, x0
   22cec:	mov	x0, x3
   22cf0:	bl	5010 <memcpy@plt>
   22cf4:	ldrsw	x0, [sp, #60]
   22cf8:	ldr	x1, [sp, #72]
   22cfc:	add	x0, x1, x0
   22d00:	str	x0, [sp, #72]
   22d04:	ldr	w0, [sp, #60]
   22d08:	sub	w0, w0, #0x1
   22d0c:	sxtw	x0, w0
   22d10:	ldr	x1, [sp, #64]
   22d14:	add	x0, x1, x0
   22d18:	str	x0, [sp, #64]
   22d1c:	b	22df8 <udev_util_encode_string@@LIBUDEV_183+0x175c8>
   22d20:	ldr	x1, [sp, #40]
   22d24:	ldr	x0, [sp, #64]
   22d28:	add	x0, x1, x0
   22d2c:	ldrb	w0, [x0]
   22d30:	cmp	w0, #0x5c
   22d34:	b.eq	22d58 <udev_util_encode_string@@LIBUDEV_183+0x17528>  // b.none
   22d38:	ldr	x1, [sp, #40]
   22d3c:	ldr	x0, [sp, #64]
   22d40:	add	x0, x1, x0
   22d44:	ldrb	w0, [x0]
   22d48:	mov	x1, #0x0                   	// #0
   22d4c:	bl	22b98 <udev_util_encode_string@@LIBUDEV_183+0x17368>
   22d50:	cmp	w0, #0x0
   22d54:	b.ne	22db4 <udev_util_encode_string@@LIBUDEV_183+0x17584>  // b.any
   22d58:	ldr	x1, [sp, #24]
   22d5c:	ldr	x0, [sp, #72]
   22d60:	sub	x0, x1, x0
   22d64:	cmp	x0, #0x3
   22d68:	b.hi	22d74 <udev_util_encode_string@@LIBUDEV_183+0x17544>  // b.pmore
   22d6c:	mov	w0, #0xffffffea            	// #-22
   22d70:	b	22e48 <udev_util_encode_string@@LIBUDEV_183+0x17618>
   22d74:	ldr	x1, [sp, #32]
   22d78:	ldr	x0, [sp, #72]
   22d7c:	add	x3, x1, x0
   22d80:	ldr	x1, [sp, #40]
   22d84:	ldr	x0, [sp, #64]
   22d88:	add	x0, x1, x0
   22d8c:	ldrb	w0, [x0]
   22d90:	mov	w2, w0
   22d94:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22d98:	add	x1, x0, #0xeb0
   22d9c:	mov	x0, x3
   22da0:	bl	50f0 <sprintf@plt>
   22da4:	ldr	x0, [sp, #72]
   22da8:	add	x0, x0, #0x4
   22dac:	str	x0, [sp, #72]
   22db0:	b	22df8 <udev_util_encode_string@@LIBUDEV_183+0x175c8>
   22db4:	ldr	x1, [sp, #24]
   22db8:	ldr	x0, [sp, #72]
   22dbc:	cmp	x1, x0
   22dc0:	b.ne	22dcc <udev_util_encode_string@@LIBUDEV_183+0x1759c>  // b.any
   22dc4:	mov	w0, #0xffffffea            	// #-22
   22dc8:	b	22e48 <udev_util_encode_string@@LIBUDEV_183+0x17618>
   22dcc:	ldr	x1, [sp, #40]
   22dd0:	ldr	x0, [sp, #64]
   22dd4:	add	x1, x1, x0
   22dd8:	ldr	x2, [sp, #32]
   22ddc:	ldr	x0, [sp, #72]
   22de0:	add	x0, x2, x0
   22de4:	ldrb	w1, [x1]
   22de8:	strb	w1, [x0]
   22dec:	ldr	x0, [sp, #72]
   22df0:	add	x0, x0, #0x1
   22df4:	str	x0, [sp, #72]
   22df8:	ldr	x0, [sp, #64]
   22dfc:	add	x0, x0, #0x1
   22e00:	str	x0, [sp, #64]
   22e04:	ldr	x1, [sp, #40]
   22e08:	ldr	x0, [sp, #64]
   22e0c:	add	x0, x1, x0
   22e10:	ldrb	w0, [x0]
   22e14:	cmp	w0, #0x0
   22e18:	b.ne	22c84 <udev_util_encode_string@@LIBUDEV_183+0x17454>  // b.any
   22e1c:	ldr	x1, [sp, #24]
   22e20:	ldr	x0, [sp, #72]
   22e24:	cmp	x1, x0
   22e28:	b.ne	22e34 <udev_util_encode_string@@LIBUDEV_183+0x17604>  // b.any
   22e2c:	mov	w0, #0xffffffea            	// #-22
   22e30:	b	22e48 <udev_util_encode_string@@LIBUDEV_183+0x17618>
   22e34:	ldr	x1, [sp, #32]
   22e38:	ldr	x0, [sp, #72]
   22e3c:	add	x0, x1, x0
   22e40:	strb	wzr, [x0]
   22e44:	mov	w0, #0x0                   	// #0
   22e48:	ldp	x29, x30, [sp], #80
   22e4c:	ret
   22e50:	stp	x29, x30, [sp, #-32]!
   22e54:	mov	x29, sp
   22e58:	str	x0, [sp, #24]
   22e5c:	ldr	x0, [sp, #24]
   22e60:	ldr	w0, [x0]
   22e64:	cmp	w0, #0x0
   22e68:	b.lt	22e84 <udev_util_encode_string@@LIBUDEV_183+0x17654>  // b.tstop
   22e6c:	bl	57d0 <__errno_location@plt>
   22e70:	mov	x1, x0
   22e74:	ldr	x0, [sp, #24]
   22e78:	ldr	w0, [x0]
   22e7c:	str	w0, [x1]
   22e80:	b	22e88 <udev_util_encode_string@@LIBUDEV_183+0x17658>
   22e84:	nop
   22e88:	ldp	x29, x30, [sp], #32
   22e8c:	ret
   22e90:	stp	x29, x30, [sp, #-32]!
   22e94:	mov	x29, sp
   22e98:	str	w0, [sp, #28]
   22e9c:	ldr	w0, [sp, #28]
   22ea0:	lsr	w0, w0, #31
   22ea4:	and	w0, w0, #0xff
   22ea8:	and	x0, x0, #0xff
   22eac:	cmp	x0, #0x0
   22eb0:	b.eq	22edc <udev_util_encode_string@@LIBUDEV_183+0x176ac>  // b.none
   22eb4:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22eb8:	add	x1, x0, #0xebb
   22ebc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   22ec0:	add	x4, x0, #0x188
   22ec4:	mov	w3, #0x21                  	// #33
   22ec8:	mov	x2, x1
   22ecc:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22ed0:	add	x1, x0, #0xed0
   22ed4:	mov	w0, #0x0                   	// #0
   22ed8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22edc:	ldr	w0, [sp, #28]
   22ee0:	bl	53a0 <close@plt>
   22ee4:	cmp	w0, #0x0
   22ee8:	b.lt	22ef4 <udev_util_encode_string@@LIBUDEV_183+0x176c4>  // b.tstop
   22eec:	mov	w0, #0x0                   	// #0
   22ef0:	b	22f18 <udev_util_encode_string@@LIBUDEV_183+0x176e8>
   22ef4:	bl	57d0 <__errno_location@plt>
   22ef8:	ldr	w0, [x0]
   22efc:	cmp	w0, #0x4
   22f00:	b.ne	22f0c <udev_util_encode_string@@LIBUDEV_183+0x176dc>  // b.any
   22f04:	mov	w0, #0x0                   	// #0
   22f08:	b	22f18 <udev_util_encode_string@@LIBUDEV_183+0x176e8>
   22f0c:	bl	57d0 <__errno_location@plt>
   22f10:	ldr	w0, [x0]
   22f14:	neg	w0, w0
   22f18:	ldp	x29, x30, [sp], #32
   22f1c:	ret
   22f20:	stp	x29, x30, [sp, #-48]!
   22f24:	mov	x29, sp
   22f28:	str	w0, [sp, #28]
   22f2c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   22f30:	ldr	x0, [x0, #4016]
   22f34:	ldr	x1, [x0]
   22f38:	str	x1, [sp, #40]
   22f3c:	mov	x1, #0x0                   	// #0
   22f40:	ldr	w0, [sp, #28]
   22f44:	cmp	w0, #0x0
   22f48:	b.lt	22fa8 <udev_util_encode_string@@LIBUDEV_183+0x17778>  // b.tstop
   22f4c:	bl	57d0 <__errno_location@plt>
   22f50:	ldr	w0, [x0]
   22f54:	str	w0, [sp, #36]
   22f58:	ldr	w0, [sp, #28]
   22f5c:	bl	22e90 <udev_util_encode_string@@LIBUDEV_183+0x17660>
   22f60:	cmn	w0, #0x9
   22f64:	cset	w0, eq  // eq = none
   22f68:	and	w0, w0, #0xff
   22f6c:	and	x0, x0, #0xff
   22f70:	cmp	x0, #0x0
   22f74:	b.eq	22fa0 <udev_util_encode_string@@LIBUDEV_183+0x17770>  // b.none
   22f78:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22f7c:	add	x1, x0, #0xebb
   22f80:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   22f84:	add	x4, x0, #0x198
   22f88:	mov	w3, #0x47                  	// #71
   22f8c:	mov	x2, x1
   22f90:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   22f94:	add	x1, x0, #0xed8
   22f98:	mov	w0, #0x0                   	// #0
   22f9c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   22fa0:	add	x0, sp, #0x24
   22fa4:	bl	22e50 <udev_util_encode_string@@LIBUDEV_183+0x17620>
   22fa8:	mov	w0, #0xffffffff            	// #-1
   22fac:	mov	w1, w0
   22fb0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   22fb4:	ldr	x0, [x0, #4016]
   22fb8:	ldr	x2, [sp, #40]
   22fbc:	ldr	x0, [x0]
   22fc0:	eor	x0, x2, x0
   22fc4:	cmp	x0, #0x0
   22fc8:	b.eq	22fd0 <udev_util_encode_string@@LIBUDEV_183+0x177a0>  // b.none
   22fcc:	bl	5390 <__stack_chk_fail@plt>
   22fd0:	mov	w0, w1
   22fd4:	ldp	x29, x30, [sp], #48
   22fd8:	ret
   22fdc:	stp	x29, x30, [sp, #-32]!
   22fe0:	mov	x29, sp
   22fe4:	str	x0, [sp, #24]
   22fe8:	ldr	x0, [sp, #24]
   22fec:	cmp	x0, #0x0
   22ff0:	cset	w0, eq  // eq = none
   22ff4:	and	w0, w0, #0xff
   22ff8:	and	x0, x0, #0xff
   22ffc:	cmp	x0, #0x0
   23000:	b.eq	2302c <udev_util_encode_string@@LIBUDEV_183+0x177fc>  // b.none
   23004:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   23008:	add	x1, x0, #0xebb
   2300c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23010:	add	x4, x0, #0x1a8
   23014:	mov	w3, #0x65                  	// #101
   23018:	mov	x2, x1
   2301c:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   23020:	add	x1, x0, #0xf18
   23024:	mov	w0, #0x0                   	// #0
   23028:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2302c:	ldr	x0, [sp, #24]
   23030:	bl	51e0 <fclose@plt>
   23034:	cmp	w0, #0x0
   23038:	b.ne	23044 <udev_util_encode_string@@LIBUDEV_183+0x17814>  // b.any
   2303c:	mov	w0, #0x0                   	// #0
   23040:	b	23068 <udev_util_encode_string@@LIBUDEV_183+0x17838>
   23044:	bl	57d0 <__errno_location@plt>
   23048:	ldr	w0, [x0]
   2304c:	cmp	w0, #0x4
   23050:	b.ne	2305c <udev_util_encode_string@@LIBUDEV_183+0x1782c>  // b.any
   23054:	mov	w0, #0x0                   	// #0
   23058:	b	23068 <udev_util_encode_string@@LIBUDEV_183+0x17838>
   2305c:	bl	57d0 <__errno_location@plt>
   23060:	ldr	w0, [x0]
   23064:	neg	w0, w0
   23068:	ldp	x29, x30, [sp], #32
   2306c:	ret
   23070:	stp	x29, x30, [sp, #-48]!
   23074:	mov	x29, sp
   23078:	str	x0, [sp, #24]
   2307c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23080:	ldr	x0, [x0, #4016]
   23084:	ldr	x1, [x0]
   23088:	str	x1, [sp, #40]
   2308c:	mov	x1, #0x0                   	// #0
   23090:	ldr	x0, [sp, #24]
   23094:	cmp	x0, #0x0
   23098:	b.eq	230f8 <udev_util_encode_string@@LIBUDEV_183+0x178c8>  // b.none
   2309c:	bl	57d0 <__errno_location@plt>
   230a0:	ldr	w0, [x0]
   230a4:	str	w0, [sp, #36]
   230a8:	ldr	x0, [sp, #24]
   230ac:	bl	22fdc <udev_util_encode_string@@LIBUDEV_183+0x177ac>
   230b0:	cmn	w0, #0x9
   230b4:	cset	w0, eq  // eq = none
   230b8:	and	w0, w0, #0xff
   230bc:	and	x0, x0, #0xff
   230c0:	cmp	x0, #0x0
   230c4:	b.eq	230f0 <udev_util_encode_string@@LIBUDEV_183+0x178c0>  // b.none
   230c8:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   230cc:	add	x1, x0, #0xebb
   230d0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   230d4:	add	x4, x0, #0x1b8
   230d8:	mov	w3, #0x79                  	// #121
   230dc:	mov	x2, x1
   230e0:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   230e4:	add	x1, x0, #0xf20
   230e8:	mov	w0, #0x0                   	// #0
   230ec:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   230f0:	add	x0, sp, #0x24
   230f4:	bl	22e50 <udev_util_encode_string@@LIBUDEV_183+0x17620>
   230f8:	mov	x0, #0x0                   	// #0
   230fc:	mov	x1, x0
   23100:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23104:	ldr	x0, [x0, #4016]
   23108:	ldr	x2, [sp, #40]
   2310c:	ldr	x0, [x0]
   23110:	eor	x0, x2, x0
   23114:	cmp	x0, #0x0
   23118:	b.eq	23120 <udev_util_encode_string@@LIBUDEV_183+0x178f0>  // b.none
   2311c:	bl	5390 <__stack_chk_fail@plt>
   23120:	mov	x0, x1
   23124:	ldp	x29, x30, [sp], #48
   23128:	ret
   2312c:	stp	x29, x30, [sp, #-80]!
   23130:	mov	x29, sp
   23134:	str	w0, [sp, #28]
   23138:	str	x1, [sp, #16]
   2313c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23140:	ldr	x0, [x0, #4016]
   23144:	ldr	x1, [x0]
   23148:	str	x1, [sp, #72]
   2314c:	mov	x1, #0x0                   	// #0
   23150:	add	x4, sp, #0x28
   23154:	ldr	w3, [sp, #28]
   23158:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2315c:	add	x2, x0, #0x8
   23160:	mov	x1, #0x1a                  	// #26
   23164:	mov	x0, x4
   23168:	bl	5190 <snprintf@plt>
   2316c:	cmp	w0, #0x19
   23170:	cset	w0, hi  // hi = pmore
   23174:	and	w0, w0, #0xff
   23178:	and	x0, x0, #0xff
   2317c:	cmp	x0, #0x0
   23180:	b.eq	231ac <udev_util_encode_string@@LIBUDEV_183+0x1797c>  // b.none
   23184:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   23188:	add	x1, x0, #0xebb
   2318c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23190:	add	x4, x0, #0x1c8
   23194:	mov	w3, #0x182                 	// #386
   23198:	mov	x2, x1
   2319c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   231a0:	add	x1, x0, #0x20
   231a4:	mov	w0, #0x0                   	// #0
   231a8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   231ac:	add	x0, sp, #0x28
   231b0:	ldr	x1, [sp, #16]
   231b4:	bl	257b4 <udev_util_encode_string@@LIBUDEV_183+0x19f84>
   231b8:	str	w0, [sp, #36]
   231bc:	ldr	w0, [sp, #36]
   231c0:	cmn	w0, #0x2
   231c4:	b.ne	23210 <udev_util_encode_string@@LIBUDEV_183+0x179e0>  // b.any
   231c8:	mov	w1, #0x0                   	// #0
   231cc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   231d0:	add	x0, x0, #0x50
   231d4:	bl	53e0 <access@plt>
   231d8:	cmp	w0, #0x0
   231dc:	b.ge	23208 <udev_util_encode_string@@LIBUDEV_183+0x179d8>  // b.tcont
   231e0:	bl	57d0 <__errno_location@plt>
   231e4:	ldr	w0, [x0]
   231e8:	cmp	w0, #0x2
   231ec:	b.eq	23200 <udev_util_encode_string@@LIBUDEV_183+0x179d0>  // b.none
   231f0:	bl	57d0 <__errno_location@plt>
   231f4:	ldr	w0, [x0]
   231f8:	neg	w0, w0
   231fc:	b	23214 <udev_util_encode_string@@LIBUDEV_183+0x179e4>
   23200:	mov	w0, #0xffffffa1            	// #-95
   23204:	b	23214 <udev_util_encode_string@@LIBUDEV_183+0x179e4>
   23208:	mov	w0, #0xfffffff7            	// #-9
   2320c:	b	23214 <udev_util_encode_string@@LIBUDEV_183+0x179e4>
   23210:	ldr	w0, [sp, #36]
   23214:	mov	w1, w0
   23218:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2321c:	ldr	x0, [x0, #4016]
   23220:	ldr	x2, [sp, #72]
   23224:	ldr	x0, [x0]
   23228:	eor	x0, x2, x0
   2322c:	cmp	x0, #0x0
   23230:	b.eq	23238 <udev_util_encode_string@@LIBUDEV_183+0x17a08>  // b.none
   23234:	bl	5390 <__stack_chk_fail@plt>
   23238:	mov	w0, w1
   2323c:	ldp	x29, x30, [sp], #80
   23240:	ret
   23244:	stp	x29, x30, [sp, #-80]!
   23248:	mov	x29, sp
   2324c:	str	x19, [sp, #16]
   23250:	str	w0, [sp, #44]
   23254:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23258:	ldr	x0, [x0, #4016]
   2325c:	ldr	x1, [x0]
   23260:	str	x1, [sp, #72]
   23264:	mov	x1, #0x0                   	// #0
   23268:	bl	57d0 <__errno_location@plt>
   2326c:	ldr	w0, [x0]
   23270:	str	w0, [sp, #60]
   23274:	ldr	w0, [sp, #44]
   23278:	cmp	w0, #0x0
   2327c:	b.lt	2328c <udev_util_encode_string@@LIBUDEV_183+0x17a5c>  // b.tstop
   23280:	ldr	w0, [sp, #44]
   23284:	cmp	w0, #0x2
   23288:	b.le	23294 <udev_util_encode_string@@LIBUDEV_183+0x17a64>
   2328c:	ldr	w19, [sp, #44]
   23290:	b	2335c <udev_util_encode_string@@LIBUDEV_183+0x17b2c>
   23294:	mov	w2, #0x0                   	// #0
   23298:	mov	w1, #0x1                   	// #1
   2329c:	ldr	w0, [sp, #44]
   232a0:	bl	55d0 <fcntl64@plt>
   232a4:	str	w0, [sp, #68]
   232a8:	ldr	w0, [sp, #68]
   232ac:	cmp	w0, #0x0
   232b0:	b.ge	232bc <udev_util_encode_string@@LIBUDEV_183+0x17a8c>  // b.tcont
   232b4:	ldr	w19, [sp, #44]
   232b8:	b	2335c <udev_util_encode_string@@LIBUDEV_183+0x17b2c>
   232bc:	ldr	w0, [sp, #68]
   232c0:	and	w0, w0, #0x1
   232c4:	cmp	w0, #0x0
   232c8:	b.eq	232e4 <udev_util_encode_string@@LIBUDEV_183+0x17ab4>  // b.none
   232cc:	mov	w2, #0x3                   	// #3
   232d0:	mov	w1, #0x406                 	// #1030
   232d4:	ldr	w0, [sp, #44]
   232d8:	bl	55d0 <fcntl64@plt>
   232dc:	str	w0, [sp, #64]
   232e0:	b	232f8 <udev_util_encode_string@@LIBUDEV_183+0x17ac8>
   232e4:	mov	w2, #0x3                   	// #3
   232e8:	mov	w1, #0x0                   	// #0
   232ec:	ldr	w0, [sp, #44]
   232f0:	bl	55d0 <fcntl64@plt>
   232f4:	str	w0, [sp, #64]
   232f8:	ldr	w0, [sp, #64]
   232fc:	cmp	w0, #0x0
   23300:	b.ge	2330c <udev_util_encode_string@@LIBUDEV_183+0x17adc>  // b.tcont
   23304:	ldr	w19, [sp, #44]
   23308:	b	2335c <udev_util_encode_string@@LIBUDEV_183+0x17b2c>
   2330c:	ldr	w0, [sp, #64]
   23310:	cmp	w0, #0x2
   23314:	cset	w0, le
   23318:	and	w0, w0, #0xff
   2331c:	and	x0, x0, #0xff
   23320:	cmp	x0, #0x0
   23324:	b.eq	23350 <udev_util_encode_string@@LIBUDEV_183+0x17b20>  // b.none
   23328:	adrp	x0, 3a000 <udev_util_encode_string@@LIBUDEV_183+0x2e7d0>
   2332c:	add	x1, x0, #0xebb
   23330:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23334:	add	x4, x0, #0x1d8
   23338:	mov	w3, #0x330                 	// #816
   2333c:	mov	x2, x1
   23340:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23344:	add	x1, x0, #0xc8
   23348:	mov	w0, #0x0                   	// #0
   2334c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23350:	ldr	w0, [sp, #44]
   23354:	bl	53a0 <close@plt>
   23358:	ldr	w19, [sp, #64]
   2335c:	add	x0, sp, #0x3c
   23360:	bl	22e50 <udev_util_encode_string@@LIBUDEV_183+0x17620>
   23364:	mov	w1, w19
   23368:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2336c:	ldr	x0, [x0, #4016]
   23370:	ldr	x2, [sp, #72]
   23374:	ldr	x0, [x0]
   23378:	eor	x0, x2, x0
   2337c:	cmp	x0, #0x0
   23380:	b.eq	23388 <udev_util_encode_string@@LIBUDEV_183+0x17b58>  // b.none
   23384:	bl	5390 <__stack_chk_fail@plt>
   23388:	mov	w0, w1
   2338c:	ldr	x19, [sp, #16]
   23390:	ldp	x29, x30, [sp], #80
   23394:	ret
   23398:	stp	x29, x30, [sp, #-32]!
   2339c:	mov	x29, sp
   233a0:	str	x0, [sp, #24]
   233a4:	ldr	x0, [sp, #24]
   233a8:	bl	54b0 <free@plt>
   233ac:	mov	x0, #0x0                   	// #0
   233b0:	ldp	x29, x30, [sp], #32
   233b4:	ret
   233b8:	stp	x29, x30, [sp, #-32]!
   233bc:	mov	x29, sp
   233c0:	str	x0, [sp, #24]
   233c4:	ldr	x0, [sp, #24]
   233c8:	ldr	x0, [x0]
   233cc:	bl	54b0 <free@plt>
   233d0:	nop
   233d4:	ldp	x29, x30, [sp], #32
   233d8:	ret
   233dc:	sub	sp, sp, #0x10
   233e0:	str	x0, [sp, #8]
   233e4:	str	x1, [sp]
   233e8:	ldr	x0, [sp]
   233ec:	cmp	x0, #0x0
   233f0:	cset	w0, ne  // ne = any
   233f4:	and	w0, w0, #0xff
   233f8:	and	x0, x0, #0xff
   233fc:	cmp	x0, #0x0
   23400:	b.eq	23444 <udev_util_encode_string@@LIBUDEV_183+0x17c14>  // b.none
   23404:	mov	x2, #0x0                   	// #0
   23408:	ldr	x1, [sp, #8]
   2340c:	ldr	x0, [sp]
   23410:	umulh	x0, x1, x0
   23414:	cmp	x0, #0x0
   23418:	b.eq	23420 <udev_util_encode_string@@LIBUDEV_183+0x17bf0>  // b.none
   2341c:	mov	x2, #0x1                   	// #1
   23420:	mov	x0, x2
   23424:	cmp	x0, #0x0
   23428:	cset	w0, ne  // ne = any
   2342c:	and	w0, w0, #0xff
   23430:	and	x0, x0, #0xff
   23434:	cmp	x0, #0x0
   23438:	b.eq	23444 <udev_util_encode_string@@LIBUDEV_183+0x17c14>  // b.none
   2343c:	mov	w0, #0x1                   	// #1
   23440:	b	23448 <udev_util_encode_string@@LIBUDEV_183+0x17c18>
   23444:	mov	w0, #0x0                   	// #0
   23448:	and	w0, w0, #0x1
   2344c:	and	w0, w0, #0xff
   23450:	add	sp, sp, #0x10
   23454:	ret
   23458:	stp	x29, x30, [sp, #-32]!
   2345c:	mov	x29, sp
   23460:	str	x0, [sp, #24]
   23464:	ldr	x0, [sp, #24]
   23468:	ldr	w0, [x0]
   2346c:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   23470:	nop
   23474:	ldp	x29, x30, [sp], #32
   23478:	ret
   2347c:	stp	x29, x30, [sp, #-32]!
   23480:	mov	x29, sp
   23484:	str	x0, [sp, #24]
   23488:	ldr	x0, [sp, #24]
   2348c:	ldr	x0, [x0]
   23490:	bl	23070 <udev_util_encode_string@@LIBUDEV_183+0x17840>
   23494:	nop
   23498:	ldp	x29, x30, [sp], #32
   2349c:	ret
   234a0:	stp	x29, x30, [sp, #-32]!
   234a4:	mov	x29, sp
   234a8:	str	w0, [sp, #28]
   234ac:	bl	57d0 <__errno_location@plt>
   234b0:	ldr	w0, [x0]
   234b4:	cmp	w0, #0x0
   234b8:	b.le	234cc <udev_util_encode_string@@LIBUDEV_183+0x17c9c>
   234bc:	bl	57d0 <__errno_location@plt>
   234c0:	ldr	w0, [x0]
   234c4:	neg	w0, w0
   234c8:	b	234dc <udev_util_encode_string@@LIBUDEV_183+0x17cac>
   234cc:	ldr	w0, [sp, #28]
   234d0:	cmp	w0, #0x0
   234d4:	cneg	w0, w0, lt  // lt = tstop
   234d8:	neg	w0, w0
   234dc:	ldp	x29, x30, [sp], #32
   234e0:	ret
   234e4:	stp	x29, x30, [sp, #-48]!
   234e8:	mov	x29, sp
   234ec:	str	x0, [sp, #40]
   234f0:	str	x1, [sp, #32]
   234f4:	str	x2, [sp, #24]
   234f8:	ldr	x0, [sp, #24]
   234fc:	cmp	x0, #0x0
   23500:	b.eq	2355c <udev_util_encode_string@@LIBUDEV_183+0x17d2c>  // b.none
   23504:	ldr	x0, [sp, #32]
   23508:	cmp	x0, #0x0
   2350c:	cset	w0, eq  // eq = none
   23510:	and	w0, w0, #0xff
   23514:	and	x0, x0, #0xff
   23518:	cmp	x0, #0x0
   2351c:	b.eq	23548 <udev_util_encode_string@@LIBUDEV_183+0x17d18>  // b.none
   23520:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23524:	add	x1, x0, #0x1f3
   23528:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2352c:	add	x4, x0, #0x5f0
   23530:	mov	w3, #0x14                  	// #20
   23534:	mov	x2, x1
   23538:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2353c:	add	x1, x0, #0x210
   23540:	mov	w0, #0x0                   	// #0
   23544:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23548:	ldr	x2, [sp, #24]
   2354c:	ldr	x1, [sp, #32]
   23550:	ldr	x0, [sp, #40]
   23554:	bl	5010 <memcpy@plt>
   23558:	b	23560 <udev_util_encode_string@@LIBUDEV_183+0x17d30>
   2355c:	nop
   23560:	ldp	x29, x30, [sp], #48
   23564:	ret
   23568:	stp	x29, x30, [sp, #-32]!
   2356c:	mov	x29, sp
   23570:	str	x0, [sp, #24]
   23574:	str	x1, [sp, #16]
   23578:	ldr	x0, [sp, #16]
   2357c:	cmp	x0, #0x0
   23580:	b.eq	23590 <udev_util_encode_string@@LIBUDEV_183+0x17d60>  // b.none
   23584:	ldr	x1, [sp, #16]
   23588:	ldr	x0, [sp, #24]
   2358c:	bl	5750 <explicit_bzero@plt>
   23590:	ldr	x0, [sp, #24]
   23594:	ldp	x29, x30, [sp], #32
   23598:	ret
   2359c:	stp	x29, x30, [sp, #-64]!
   235a0:	mov	x29, sp
   235a4:	str	x0, [sp, #40]
   235a8:	str	x1, [sp, #32]
   235ac:	str	x2, [sp, #24]
   235b0:	ldr	x0, [sp, #24]
   235b4:	cmp	x0, #0x0
   235b8:	cset	w0, eq  // eq = none
   235bc:	and	w0, w0, #0xff
   235c0:	and	x0, x0, #0xff
   235c4:	cmp	x0, #0x0
   235c8:	b.eq	235f4 <udev_util_encode_string@@LIBUDEV_183+0x17dc4>  // b.none
   235cc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   235d0:	add	x1, x0, #0x21b
   235d4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   235d8:	add	x4, x0, #0x540
   235dc:	mov	w3, #0x20                  	// #32
   235e0:	mov	x2, x1
   235e4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   235e8:	add	x1, x0, #0x230
   235ec:	mov	w0, #0x0                   	// #0
   235f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   235f4:	ldr	x1, [sp, #32]
   235f8:	ldr	x0, [sp, #40]
   235fc:	bl	5650 <fopen64@plt>
   23600:	str	x0, [sp, #56]
   23604:	ldr	x0, [sp, #56]
   23608:	cmp	x0, #0x0
   2360c:	b.ne	23620 <udev_util_encode_string@@LIBUDEV_183+0x17df0>  // b.any
   23610:	bl	57d0 <__errno_location@plt>
   23614:	ldr	w0, [x0]
   23618:	neg	w0, w0
   2361c:	b	2363c <udev_util_encode_string@@LIBUDEV_183+0x17e0c>
   23620:	mov	w1, #0x2                   	// #2
   23624:	ldr	x0, [sp, #56]
   23628:	bl	5780 <__fsetlocking@plt>
   2362c:	ldr	x0, [sp, #24]
   23630:	ldr	x1, [sp, #56]
   23634:	str	x1, [x0]
   23638:	mov	w0, #0x0                   	// #0
   2363c:	ldp	x29, x30, [sp], #64
   23640:	ret
   23644:	stp	x29, x30, [sp, #-64]!
   23648:	mov	x29, sp
   2364c:	str	w0, [sp, #44]
   23650:	str	x1, [sp, #32]
   23654:	str	x2, [sp, #24]
   23658:	ldr	x0, [sp, #24]
   2365c:	cmp	x0, #0x0
   23660:	cset	w0, eq  // eq = none
   23664:	and	w0, w0, #0xff
   23668:	and	x0, x0, #0xff
   2366c:	cmp	x0, #0x0
   23670:	b.eq	2369c <udev_util_encode_string@@LIBUDEV_183+0x17e6c>  // b.none
   23674:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23678:	add	x1, x0, #0x21b
   2367c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23680:	add	x4, x0, #0x550
   23684:	mov	w3, #0x2d                  	// #45
   23688:	mov	x2, x1
   2368c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23690:	add	x1, x0, #0x230
   23694:	mov	w0, #0x0                   	// #0
   23698:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2369c:	ldr	x1, [sp, #32]
   236a0:	ldr	w0, [sp, #44]
   236a4:	bl	52a0 <fdopen@plt>
   236a8:	str	x0, [sp, #56]
   236ac:	ldr	x0, [sp, #56]
   236b0:	cmp	x0, #0x0
   236b4:	b.ne	236c8 <udev_util_encode_string@@LIBUDEV_183+0x17e98>  // b.any
   236b8:	bl	57d0 <__errno_location@plt>
   236bc:	ldr	w0, [x0]
   236c0:	neg	w0, w0
   236c4:	b	236e4 <udev_util_encode_string@@LIBUDEV_183+0x17eb4>
   236c8:	mov	w1, #0x2                   	// #2
   236cc:	ldr	x0, [sp, #56]
   236d0:	bl	5780 <__fsetlocking@plt>
   236d4:	ldr	x0, [sp, #24]
   236d8:	ldr	x1, [sp, #56]
   236dc:	str	x1, [x0]
   236e0:	mov	w0, #0x0                   	// #0
   236e4:	ldp	x29, x30, [sp], #64
   236e8:	ret
   236ec:	stp	x29, x30, [sp, #-144]!
   236f0:	mov	x29, sp
   236f4:	str	x0, [x29, #40]
   236f8:	str	x1, [x29, #32]
   236fc:	str	w2, [x29, #28]
   23700:	str	x3, [x29, #16]
   23704:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23708:	ldr	x0, [x0, #4016]
   2370c:	ldr	x1, [x0]
   23710:	str	x1, [x29, #136]
   23714:	mov	x1, #0x0                   	// #0
   23718:	ldr	x0, [x29, #40]
   2371c:	cmp	x0, #0x0
   23720:	cset	w0, eq  // eq = none
   23724:	and	w0, w0, #0xff
   23728:	and	x0, x0, #0xff
   2372c:	cmp	x0, #0x0
   23730:	b.eq	2375c <udev_util_encode_string@@LIBUDEV_183+0x17f2c>  // b.none
   23734:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23738:	add	x1, x0, #0x21b
   2373c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23740:	add	x4, x0, #0x560
   23744:	mov	w3, #0x56                  	// #86
   23748:	mov	x2, x1
   2374c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23750:	add	x1, x0, #0x238
   23754:	mov	w0, #0x0                   	// #0
   23758:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2375c:	ldr	x0, [x29, #32]
   23760:	cmp	x0, #0x0
   23764:	cset	w0, eq  // eq = none
   23768:	and	w0, w0, #0xff
   2376c:	and	x0, x0, #0xff
   23770:	cmp	x0, #0x0
   23774:	b.eq	237a0 <udev_util_encode_string@@LIBUDEV_183+0x17f70>  // b.none
   23778:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2377c:	add	x1, x0, #0x21b
   23780:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23784:	add	x4, x0, #0x560
   23788:	mov	w3, #0x57                  	// #87
   2378c:	mov	x2, x1
   23790:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23794:	add	x1, x0, #0x240
   23798:	mov	w0, #0x0                   	// #0
   2379c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   237a0:	ldr	x0, [x29, #40]
   237a4:	bl	5880 <ferror@plt>
   237a8:	cmp	w0, #0x0
   237ac:	b.eq	237b8 <udev_util_encode_string@@LIBUDEV_183+0x17f88>  // b.none
   237b0:	mov	w0, #0xfffffffb            	// #-5
   237b4:	b	23aac <udev_util_encode_string@@LIBUDEV_183+0x1827c>
   237b8:	ldr	w0, [x29, #28]
   237bc:	and	w0, w0, #0x4
   237c0:	cmp	w0, #0x0
   237c4:	b.ne	237e8 <udev_util_encode_string@@LIBUDEV_183+0x17fb8>  // b.any
   237c8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   237cc:	add	x1, x0, #0x248
   237d0:	ldr	x0, [x29, #32]
   237d4:	bl	340f0 <udev_util_encode_string@@LIBUDEV_183+0x288c0>
   237d8:	cmp	x0, #0x0
   237dc:	b.ne	237e8 <udev_util_encode_string@@LIBUDEV_183+0x17fb8>  // b.any
   237e0:	mov	w0, #0x1                   	// #1
   237e4:	b	237ec <udev_util_encode_string@@LIBUDEV_183+0x17fbc>
   237e8:	mov	w0, #0x0                   	// #0
   237ec:	strb	w0, [x29, #59]
   237f0:	ldrb	w0, [x29, #59]
   237f4:	and	w0, w0, #0x1
   237f8:	strb	w0, [x29, #59]
   237fc:	ldrb	w0, [x29, #59]
   23800:	cmp	w0, #0x0
   23804:	b.eq	239bc <udev_util_encode_string@@LIBUDEV_183+0x1818c>  // b.none
   23808:	ldr	w0, [x29, #28]
   2380c:	and	w0, w0, #0x20
   23810:	cmp	w0, #0x0
   23814:	b.eq	239bc <udev_util_encode_string@@LIBUDEV_183+0x1818c>  // b.none
   23818:	ldr	x0, [x29, #32]
   2381c:	str	x0, [x29, #104]
   23820:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23824:	add	x0, x0, #0x248
   23828:	str	x0, [x29, #112]
   2382c:	str	xzr, [x29, #72]
   23830:	str	xzr, [x29, #80]
   23834:	b	23868 <udev_util_encode_string@@LIBUDEV_183+0x18038>
   23838:	ldr	x0, [x29, #80]
   2383c:	lsl	x0, x0, #3
   23840:	add	x1, x29, #0x68
   23844:	ldr	x0, [x1, x0]
   23848:	bl	5040 <strlen@plt>
   2384c:	mov	x1, x0
   23850:	ldr	x0, [x29, #72]
   23854:	add	x0, x0, x1
   23858:	str	x0, [x29, #72]
   2385c:	ldr	x0, [x29, #80]
   23860:	add	x0, x0, #0x1
   23864:	str	x0, [x29, #80]
   23868:	ldr	x0, [x29, #80]
   2386c:	cmp	x0, #0x1
   23870:	b.hi	2388c <udev_util_encode_string@@LIBUDEV_183+0x1805c>  // b.pmore
   23874:	ldr	x0, [x29, #80]
   23878:	lsl	x0, x0, #3
   2387c:	add	x1, x29, #0x68
   23880:	ldr	x0, [x1, x0]
   23884:	cmp	x0, #0x0
   23888:	b.ne	23838 <udev_util_encode_string@@LIBUDEV_183+0x18008>  // b.any
   2388c:	ldr	x0, [x29, #72]
   23890:	add	x0, x0, #0x1
   23894:	str	x0, [x29, #88]
   23898:	ldr	x1, [x29, #88]
   2389c:	mov	x0, #0x1                   	// #1
   238a0:	bl	233dc <udev_util_encode_string@@LIBUDEV_183+0x17bac>
   238a4:	and	w0, w0, #0xff
   238a8:	and	x0, x0, #0xff
   238ac:	cmp	x0, #0x0
   238b0:	b.eq	238dc <udev_util_encode_string@@LIBUDEV_183+0x180ac>  // b.none
   238b4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   238b8:	add	x1, x0, #0x21b
   238bc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   238c0:	add	x4, x0, #0x560
   238c4:	mov	w3, #0x62                  	// #98
   238c8:	mov	x2, x1
   238cc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   238d0:	add	x1, x0, #0x250
   238d4:	mov	w0, #0x0                   	// #0
   238d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   238dc:	ldr	x0, [x29, #88]
   238e0:	cmp	x0, #0x400, lsl #12
   238e4:	cset	w0, hi  // hi = pmore
   238e8:	and	w0, w0, #0xff
   238ec:	and	x0, x0, #0xff
   238f0:	cmp	x0, #0x0
   238f4:	b.eq	23920 <udev_util_encode_string@@LIBUDEV_183+0x180f0>  // b.none
   238f8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   238fc:	add	x1, x0, #0x21b
   23900:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23904:	add	x4, x0, #0x560
   23908:	mov	w3, #0x62                  	// #98
   2390c:	mov	x2, x1
   23910:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23914:	add	x1, x0, #0x280
   23918:	mov	w0, #0x0                   	// #0
   2391c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23920:	ldr	x0, [x29, #88]
   23924:	add	x0, x0, #0xf
   23928:	lsr	x0, x0, #4
   2392c:	lsl	x0, x0, #4
   23930:	sub	sp, sp, x0
   23934:	mov	x0, sp
   23938:	add	x0, x0, #0xf
   2393c:	lsr	x0, x0, #4
   23940:	lsl	x0, x0, #4
   23944:	str	x0, [x29, #96]
   23948:	ldr	x0, [x29, #96]
   2394c:	str	x0, [x29, #64]
   23950:	str	xzr, [x29, #80]
   23954:	b	23984 <udev_util_encode_string@@LIBUDEV_183+0x18154>
   23958:	ldr	x0, [x29, #80]
   2395c:	lsl	x0, x0, #3
   23960:	add	x1, x29, #0x68
   23964:	ldr	x0, [x1, x0]
   23968:	mov	x1, x0
   2396c:	ldr	x0, [x29, #64]
   23970:	bl	51b0 <stpcpy@plt>
   23974:	str	x0, [x29, #64]
   23978:	ldr	x0, [x29, #80]
   2397c:	add	x0, x0, #0x1
   23980:	str	x0, [x29, #80]
   23984:	ldr	x0, [x29, #80]
   23988:	cmp	x0, #0x1
   2398c:	b.hi	239a8 <udev_util_encode_string@@LIBUDEV_183+0x18178>  // b.pmore
   23990:	ldr	x0, [x29, #80]
   23994:	lsl	x0, x0, #3
   23998:	add	x1, x29, #0x68
   2399c:	ldr	x0, [x1, x0]
   239a0:	cmp	x0, #0x0
   239a4:	b.ne	23958 <udev_util_encode_string@@LIBUDEV_183+0x18128>  // b.any
   239a8:	ldr	x0, [x29, #64]
   239ac:	strb	wzr, [x0]
   239b0:	ldr	x0, [x29, #96]
   239b4:	str	x0, [x29, #32]
   239b8:	strb	wzr, [x29, #59]
   239bc:	ldr	x1, [x29, #40]
   239c0:	ldr	x0, [x29, #32]
   239c4:	bl	5050 <fputs@plt>
   239c8:	cmn	w0, #0x1
   239cc:	b.ne	239e0 <udev_util_encode_string@@LIBUDEV_183+0x181b0>  // b.any
   239d0:	bl	57d0 <__errno_location@plt>
   239d4:	ldr	w0, [x0]
   239d8:	neg	w0, w0
   239dc:	b	23aac <udev_util_encode_string@@LIBUDEV_183+0x1827c>
   239e0:	ldrb	w0, [x29, #59]
   239e4:	cmp	w0, #0x0
   239e8:	b.eq	23a10 <udev_util_encode_string@@LIBUDEV_183+0x181e0>  // b.none
   239ec:	ldr	x1, [x29, #40]
   239f0:	mov	w0, #0xa                   	// #10
   239f4:	bl	5120 <fputc@plt>
   239f8:	cmn	w0, #0x1
   239fc:	b.ne	23a10 <udev_util_encode_string@@LIBUDEV_183+0x181e0>  // b.any
   23a00:	bl	57d0 <__errno_location@plt>
   23a04:	ldr	w0, [x0]
   23a08:	neg	w0, w0
   23a0c:	b	23aac <udev_util_encode_string@@LIBUDEV_183+0x1827c>
   23a10:	ldr	w0, [x29, #28]
   23a14:	and	w0, w0, #0x10
   23a18:	cmp	w0, #0x0
   23a1c:	b.eq	23a30 <udev_util_encode_string@@LIBUDEV_183+0x18200>  // b.none
   23a20:	ldr	x0, [x29, #40]
   23a24:	bl	24d1c <udev_util_encode_string@@LIBUDEV_183+0x194ec>
   23a28:	str	w0, [x29, #60]
   23a2c:	b	23a3c <udev_util_encode_string@@LIBUDEV_183+0x1820c>
   23a30:	ldr	x0, [x29, #40]
   23a34:	bl	24c94 <udev_util_encode_string@@LIBUDEV_183+0x19464>
   23a38:	str	w0, [x29, #60]
   23a3c:	ldr	w0, [x29, #60]
   23a40:	cmp	w0, #0x0
   23a44:	b.ge	23a50 <udev_util_encode_string@@LIBUDEV_183+0x18220>  // b.tcont
   23a48:	ldr	w0, [x29, #60]
   23a4c:	b	23aac <udev_util_encode_string@@LIBUDEV_183+0x1827c>
   23a50:	ldr	x0, [x29, #16]
   23a54:	cmp	x0, #0x0
   23a58:	b.eq	23aa8 <udev_util_encode_string@@LIBUDEV_183+0x18278>  // b.none
   23a5c:	ldr	x0, [x29, #16]
   23a60:	ldp	x0, x1, [x0]
   23a64:	stp	x0, x1, [x29, #104]
   23a68:	ldr	x0, [x29, #16]
   23a6c:	ldp	x0, x1, [x0]
   23a70:	stp	x0, x1, [x29, #120]
   23a74:	ldr	x0, [x29, #40]
   23a78:	bl	51c0 <fileno@plt>
   23a7c:	mov	w2, w0
   23a80:	add	x0, x29, #0x68
   23a84:	mov	x1, x0
   23a88:	mov	w0, w2
   23a8c:	bl	5260 <futimens@plt>
   23a90:	cmp	w0, #0x0
   23a94:	b.ge	23aa8 <udev_util_encode_string@@LIBUDEV_183+0x18278>  // b.tcont
   23a98:	bl	57d0 <__errno_location@plt>
   23a9c:	ldr	w0, [x0]
   23aa0:	neg	w0, w0
   23aa4:	b	23aac <udev_util_encode_string@@LIBUDEV_183+0x1827c>
   23aa8:	mov	w0, #0x0                   	// #0
   23aac:	mov	w1, w0
   23ab0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23ab4:	ldr	x0, [x0, #4016]
   23ab8:	ldr	x2, [x29, #136]
   23abc:	ldr	x0, [x0]
   23ac0:	eor	x0, x2, x0
   23ac4:	cmp	x0, #0x0
   23ac8:	b.eq	23ad0 <udev_util_encode_string@@LIBUDEV_183+0x182a0>  // b.none
   23acc:	bl	5390 <__stack_chk_fail@plt>
   23ad0:	mov	w0, w1
   23ad4:	mov	sp, x29
   23ad8:	ldp	x29, x30, [sp], #144
   23adc:	ret
   23ae0:	stp	x29, x30, [sp, #-96]!
   23ae4:	mov	x29, sp
   23ae8:	str	x19, [sp, #16]
   23aec:	str	x0, [sp, #56]
   23af0:	str	x1, [sp, #48]
   23af4:	str	w2, [sp, #44]
   23af8:	str	x3, [sp, #32]
   23afc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23b00:	ldr	x0, [x0, #4016]
   23b04:	ldr	x1, [x0]
   23b08:	str	x1, [sp, #88]
   23b0c:	mov	x1, #0x0                   	// #0
   23b10:	str	xzr, [sp, #72]
   23b14:	str	xzr, [sp, #80]
   23b18:	ldr	x0, [sp, #56]
   23b1c:	cmp	x0, #0x0
   23b20:	cset	w0, eq  // eq = none
   23b24:	and	w0, w0, #0xff
   23b28:	and	x0, x0, #0xff
   23b2c:	cmp	x0, #0x0
   23b30:	b.eq	23b5c <udev_util_encode_string@@LIBUDEV_183+0x1832c>  // b.none
   23b34:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23b38:	add	x1, x0, #0x21b
   23b3c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23b40:	add	x4, x0, #0x578
   23b44:	mov	w3, #0x88                  	// #136
   23b48:	mov	x2, x1
   23b4c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23b50:	add	x1, x0, #0x2a0
   23b54:	mov	w0, #0x0                   	// #0
   23b58:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23b5c:	ldr	x0, [sp, #48]
   23b60:	cmp	x0, #0x0
   23b64:	cset	w0, eq  // eq = none
   23b68:	and	w0, w0, #0xff
   23b6c:	and	x0, x0, #0xff
   23b70:	cmp	x0, #0x0
   23b74:	b.eq	23ba0 <udev_util_encode_string@@LIBUDEV_183+0x18370>  // b.none
   23b78:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23b7c:	add	x1, x0, #0x21b
   23b80:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23b84:	add	x4, x0, #0x578
   23b88:	mov	w3, #0x89                  	// #137
   23b8c:	mov	x2, x1
   23b90:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23b94:	add	x1, x0, #0x240
   23b98:	mov	w0, #0x0                   	// #0
   23b9c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23ba0:	add	x1, sp, #0x50
   23ba4:	add	x0, sp, #0x48
   23ba8:	mov	x2, x1
   23bac:	mov	x1, x0
   23bb0:	ldr	x0, [sp, #56]
   23bb4:	bl	359b8 <udev_util_encode_string@@LIBUDEV_183+0x2a188>
   23bb8:	str	w0, [sp, #68]
   23bbc:	ldr	w0, [sp, #68]
   23bc0:	cmp	w0, #0x0
   23bc4:	b.ge	23bd0 <udev_util_encode_string@@LIBUDEV_183+0x183a0>  // b.tcont
   23bc8:	ldr	w19, [sp, #68]
   23bcc:	b	23c44 <udev_util_encode_string@@LIBUDEV_183+0x18414>
   23bd0:	ldr	x0, [sp, #72]
   23bd4:	bl	51c0 <fileno@plt>
   23bd8:	mov	w1, #0x1a4                 	// #420
   23bdc:	bl	258bc <udev_util_encode_string@@LIBUDEV_183+0x1a08c>
   23be0:	ldr	x0, [sp, #72]
   23be4:	ldr	x3, [sp, #32]
   23be8:	ldr	w2, [sp, #44]
   23bec:	ldr	x1, [sp, #48]
   23bf0:	bl	236ec <udev_util_encode_string@@LIBUDEV_183+0x17ebc>
   23bf4:	str	w0, [sp, #68]
   23bf8:	ldr	w0, [sp, #68]
   23bfc:	cmp	w0, #0x0
   23c00:	b.lt	23c34 <udev_util_encode_string@@LIBUDEV_183+0x18404>  // b.tstop
   23c04:	ldr	x0, [sp, #80]
   23c08:	ldr	x1, [sp, #56]
   23c0c:	bl	5590 <rename@plt>
   23c10:	cmp	w0, #0x0
   23c14:	b.ge	23c2c <udev_util_encode_string@@LIBUDEV_183+0x183fc>  // b.tcont
   23c18:	bl	57d0 <__errno_location@plt>
   23c1c:	ldr	w0, [x0]
   23c20:	neg	w0, w0
   23c24:	str	w0, [sp, #68]
   23c28:	b	23c38 <udev_util_encode_string@@LIBUDEV_183+0x18408>
   23c2c:	mov	w19, #0x0                   	// #0
   23c30:	b	23c44 <udev_util_encode_string@@LIBUDEV_183+0x18414>
   23c34:	nop
   23c38:	ldr	x0, [sp, #80]
   23c3c:	bl	5830 <unlink@plt>
   23c40:	ldr	w19, [sp, #68]
   23c44:	add	x0, sp, #0x50
   23c48:	bl	233b8 <udev_util_encode_string@@LIBUDEV_183+0x17b88>
   23c4c:	add	x0, sp, #0x48
   23c50:	bl	2347c <udev_util_encode_string@@LIBUDEV_183+0x17c4c>
   23c54:	mov	w1, w19
   23c58:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23c5c:	ldr	x0, [x0, #4016]
   23c60:	ldr	x2, [sp, #88]
   23c64:	ldr	x0, [x0]
   23c68:	eor	x0, x2, x0
   23c6c:	cmp	x0, #0x0
   23c70:	b.eq	23c78 <udev_util_encode_string@@LIBUDEV_183+0x18448>  // b.none
   23c74:	bl	5390 <__stack_chk_fail@plt>
   23c78:	mov	w0, w1
   23c7c:	ldr	x19, [sp, #16]
   23c80:	ldp	x29, x30, [sp], #96
   23c84:	ret
   23c88:	stp	x29, x30, [sp, #-96]!
   23c8c:	mov	x29, sp
   23c90:	str	x19, [sp, #16]
   23c94:	str	x0, [sp, #56]
   23c98:	str	x1, [sp, #48]
   23c9c:	str	w2, [sp, #44]
   23ca0:	str	x3, [sp, #32]
   23ca4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   23ca8:	ldr	x0, [x0, #4016]
   23cac:	ldr	x1, [x0]
   23cb0:	str	x1, [sp, #88]
   23cb4:	mov	x1, #0x0                   	// #0
   23cb8:	str	xzr, [sp, #80]
   23cbc:	ldr	x0, [sp, #56]
   23cc0:	cmp	x0, #0x0
   23cc4:	cset	w0, eq  // eq = none
   23cc8:	and	w0, w0, #0xff
   23ccc:	and	x0, x0, #0xff
   23cd0:	cmp	x0, #0x0
   23cd4:	b.eq	23d00 <udev_util_encode_string@@LIBUDEV_183+0x184d0>  // b.none
   23cd8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23cdc:	add	x1, x0, #0x21b
   23ce0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23ce4:	add	x4, x0, #0x598
   23ce8:	mov	w3, #0xaa                  	// #170
   23cec:	mov	x2, x1
   23cf0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23cf4:	add	x1, x0, #0x2a0
   23cf8:	mov	w0, #0x0                   	// #0
   23cfc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23d00:	ldr	x0, [sp, #48]
   23d04:	cmp	x0, #0x0
   23d08:	cset	w0, eq  // eq = none
   23d0c:	and	w0, w0, #0xff
   23d10:	and	x0, x0, #0xff
   23d14:	cmp	x0, #0x0
   23d18:	b.eq	23d44 <udev_util_encode_string@@LIBUDEV_183+0x18514>  // b.none
   23d1c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23d20:	add	x1, x0, #0x21b
   23d24:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23d28:	add	x4, x0, #0x598
   23d2c:	mov	w3, #0xab                  	// #171
   23d30:	mov	x2, x1
   23d34:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23d38:	add	x1, x0, #0x240
   23d3c:	mov	w0, #0x0                   	// #0
   23d40:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23d44:	ldr	w0, [sp, #44]
   23d48:	and	w0, w0, #0x8
   23d4c:	cmp	w0, #0x0
   23d50:	cset	w0, ne  // ne = any
   23d54:	and	w0, w0, #0xff
   23d58:	and	x0, x0, #0xff
   23d5c:	cmp	x0, #0x0
   23d60:	b.eq	23dac <udev_util_encode_string@@LIBUDEV_183+0x1857c>  // b.none
   23d64:	ldr	w0, [sp, #44]
   23d68:	and	w0, w0, #0x10
   23d6c:	cmp	w0, #0x0
   23d70:	cset	w0, ne  // ne = any
   23d74:	and	w0, w0, #0xff
   23d78:	and	x0, x0, #0xff
   23d7c:	cmp	x0, #0x0
   23d80:	b.eq	23dac <udev_util_encode_string@@LIBUDEV_183+0x1857c>  // b.none
   23d84:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23d88:	add	x1, x0, #0x21b
   23d8c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23d90:	add	x4, x0, #0x598
   23d94:	mov	w3, #0xae                  	// #174
   23d98:	mov	x2, x1
   23d9c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23da0:	add	x1, x0, #0x2a8
   23da4:	mov	w0, #0x0                   	// #0
   23da8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23dac:	ldr	w0, [sp, #44]
   23db0:	and	w0, w0, #0x80
   23db4:	cmp	w0, #0x0
   23db8:	b.eq	23de0 <udev_util_encode_string@@LIBUDEV_183+0x185b0>  // b.none
   23dbc:	mov	w1, #0x1ed                 	// #493
   23dc0:	ldr	x0, [sp, #56]
   23dc4:	bl	2f778 <udev_util_encode_string@@LIBUDEV_183+0x23f48>
   23dc8:	str	w0, [sp, #68]
   23dcc:	ldr	w0, [sp, #68]
   23dd0:	cmp	w0, #0x0
   23dd4:	b.ge	23de0 <udev_util_encode_string@@LIBUDEV_183+0x185b0>  // b.tcont
   23dd8:	ldr	w19, [sp, #68]
   23ddc:	b	24020 <udev_util_encode_string@@LIBUDEV_183+0x187f0>
   23de0:	ldr	w0, [sp, #44]
   23de4:	and	w0, w0, #0x2
   23de8:	cmp	w0, #0x0
   23dec:	b.eq	23e64 <udev_util_encode_string@@LIBUDEV_183+0x18634>  // b.none
   23df0:	ldr	w0, [sp, #44]
   23df4:	and	w0, w0, #0x1
   23df8:	cmp	w0, #0x0
   23dfc:	cset	w0, eq  // eq = none
   23e00:	and	w0, w0, #0xff
   23e04:	and	x0, x0, #0xff
   23e08:	cmp	x0, #0x0
   23e0c:	b.eq	23e38 <udev_util_encode_string@@LIBUDEV_183+0x18608>  // b.none
   23e10:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23e14:	add	x1, x0, #0x21b
   23e18:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23e1c:	add	x4, x0, #0x598
   23e20:	mov	w3, #0xb7                  	// #183
   23e24:	mov	x2, x1
   23e28:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23e2c:	add	x1, x0, #0x300
   23e30:	mov	w0, #0x0                   	// #0
   23e34:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23e38:	ldr	x3, [sp, #32]
   23e3c:	ldr	w2, [sp, #44]
   23e40:	ldr	x1, [sp, #48]
   23e44:	ldr	x0, [sp, #56]
   23e48:	bl	23ae0 <udev_util_encode_string@@LIBUDEV_183+0x182b0>
   23e4c:	str	w0, [sp, #68]
   23e50:	ldr	w0, [sp, #68]
   23e54:	cmp	w0, #0x0
   23e58:	b.lt	23fb0 <udev_util_encode_string@@LIBUDEV_183+0x18780>  // b.tstop
   23e5c:	ldr	w19, [sp, #68]
   23e60:	b	24020 <udev_util_encode_string@@LIBUDEV_183+0x187f0>
   23e64:	ldr	x0, [sp, #32]
   23e68:	cmp	x0, #0x0
   23e6c:	cset	w0, ne  // ne = any
   23e70:	and	w0, w0, #0xff
   23e74:	and	x0, x0, #0xff
   23e78:	cmp	x0, #0x0
   23e7c:	b.eq	23ea8 <udev_util_encode_string@@LIBUDEV_183+0x18678>  // b.none
   23e80:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23e84:	add	x1, x0, #0x21b
   23e88:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23e8c:	add	x4, x0, #0x598
   23e90:	mov	w3, #0xbf                  	// #191
   23e94:	mov	x2, x1
   23e98:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23e9c:	add	x1, x0, #0x328
   23ea0:	mov	w0, #0x0                   	// #0
   23ea4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   23ea8:	ldr	w0, [sp, #44]
   23eac:	and	w0, w0, #0x1
   23eb0:	cmp	w0, #0x0
   23eb4:	b.eq	23ee4 <udev_util_encode_string@@LIBUDEV_183+0x186b4>  // b.none
   23eb8:	add	x0, sp, #0x50
   23ebc:	mov	x2, x0
   23ec0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23ec4:	add	x1, x0, #0x330
   23ec8:	ldr	x0, [sp, #56]
   23ecc:	bl	2359c <udev_util_encode_string@@LIBUDEV_183+0x17d6c>
   23ed0:	str	w0, [sp, #68]
   23ed4:	ldr	w0, [sp, #68]
   23ed8:	cmp	w0, #0x0
   23edc:	b.ge	23f60 <udev_util_encode_string@@LIBUDEV_183+0x18730>  // b.tcont
   23ee0:	b	23fbc <udev_util_encode_string@@LIBUDEV_183+0x1878c>
   23ee4:	ldr	w0, [sp, #44]
   23ee8:	lsl	w0, w0, #9
   23eec:	and	w1, w0, #0x8000
   23ef0:	mov	w0, #0x101                 	// #257
   23ef4:	movk	w0, #0x8, lsl #16
   23ef8:	orr	w0, w1, w0
   23efc:	mov	w1, w0
   23f00:	ldr	x0, [sp, #56]
   23f04:	bl	56c0 <open64@plt>
   23f08:	str	w0, [sp, #72]
   23f0c:	ldr	w0, [sp, #72]
   23f10:	cmp	w0, #0x0
   23f14:	b.ge	23f2c <udev_util_encode_string@@LIBUDEV_183+0x186fc>  // b.tcont
   23f18:	bl	57d0 <__errno_location@plt>
   23f1c:	ldr	w0, [x0]
   23f20:	neg	w0, w0
   23f24:	str	w0, [sp, #68]
   23f28:	b	23fbc <udev_util_encode_string@@LIBUDEV_183+0x1878c>
   23f2c:	add	x0, sp, #0x50
   23f30:	mov	x2, x0
   23f34:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   23f38:	add	x1, x0, #0x338
   23f3c:	ldr	w0, [sp, #72]
   23f40:	bl	23644 <udev_util_encode_string@@LIBUDEV_183+0x17e14>
   23f44:	str	w0, [sp, #68]
   23f48:	ldr	w0, [sp, #68]
   23f4c:	cmp	w0, #0x0
   23f50:	b.ge	23f60 <udev_util_encode_string@@LIBUDEV_183+0x18730>  // b.tcont
   23f54:	ldr	w0, [sp, #72]
   23f58:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   23f5c:	b	23fbc <udev_util_encode_string@@LIBUDEV_183+0x1878c>
   23f60:	ldr	w0, [sp, #44]
   23f64:	and	w0, w0, #0x20
   23f68:	cmp	w0, #0x0
   23f6c:	b.eq	23f84 <udev_util_encode_string@@LIBUDEV_183+0x18754>  // b.none
   23f70:	ldr	x0, [sp, #80]
   23f74:	mov	x3, #0x0                   	// #0
   23f78:	mov	w2, #0x2                   	// #2
   23f7c:	mov	x1, #0x0                   	// #0
   23f80:	bl	5150 <setvbuf@plt>
   23f84:	ldr	x0, [sp, #80]
   23f88:	ldr	x3, [sp, #32]
   23f8c:	ldr	w2, [sp, #44]
   23f90:	ldr	x1, [sp, #48]
   23f94:	bl	236ec <udev_util_encode_string@@LIBUDEV_183+0x17ebc>
   23f98:	str	w0, [sp, #68]
   23f9c:	ldr	w0, [sp, #68]
   23fa0:	cmp	w0, #0x0
   23fa4:	b.lt	23fb8 <udev_util_encode_string@@LIBUDEV_183+0x18788>  // b.tstop
   23fa8:	mov	w19, #0x0                   	// #0
   23fac:	b	24020 <udev_util_encode_string@@LIBUDEV_183+0x187f0>
   23fb0:	nop
   23fb4:	b	23fbc <udev_util_encode_string@@LIBUDEV_183+0x1878c>
   23fb8:	nop
   23fbc:	ldr	w0, [sp, #44]
   23fc0:	and	w0, w0, #0x8
   23fc4:	cmp	w0, #0x0
   23fc8:	b.ne	23fd4 <udev_util_encode_string@@LIBUDEV_183+0x187a4>  // b.any
   23fcc:	ldr	w19, [sp, #68]
   23fd0:	b	24020 <udev_util_encode_string@@LIBUDEV_183+0x187f0>
   23fd4:	ldr	x0, [sp, #80]
   23fd8:	bl	23070 <udev_util_encode_string@@LIBUDEV_183+0x17840>
   23fdc:	str	x0, [sp, #80]
   23fe0:	ldr	w0, [sp, #44]
   23fe4:	and	w0, w0, #0x4
   23fe8:	cmp	w0, #0x0
   23fec:	cset	w0, eq  // eq = none
   23ff0:	and	w0, w0, #0xff
   23ff4:	mov	w2, w0
   23ff8:	ldr	x1, [sp, #48]
   23ffc:	ldr	x0, [sp, #56]
   24000:	bl	2405c <udev_util_encode_string@@LIBUDEV_183+0x1882c>
   24004:	str	w0, [sp, #76]
   24008:	ldr	w0, [sp, #76]
   2400c:	cmp	w0, #0x0
   24010:	b.gt	2401c <udev_util_encode_string@@LIBUDEV_183+0x187ec>
   24014:	ldr	w19, [sp, #68]
   24018:	b	24020 <udev_util_encode_string@@LIBUDEV_183+0x187f0>
   2401c:	mov	w19, #0x0                   	// #0
   24020:	add	x0, sp, #0x50
   24024:	bl	2347c <udev_util_encode_string@@LIBUDEV_183+0x17c4c>
   24028:	mov	w1, w19
   2402c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   24030:	ldr	x0, [x0, #4016]
   24034:	ldr	x2, [sp, #88]
   24038:	ldr	x0, [x0]
   2403c:	eor	x0, x2, x0
   24040:	cmp	x0, #0x0
   24044:	b.eq	2404c <udev_util_encode_string@@LIBUDEV_183+0x1881c>  // b.none
   24048:	bl	5390 <__stack_chk_fail@plt>
   2404c:	mov	w0, w1
   24050:	ldr	x19, [sp, #16]
   24054:	ldp	x29, x30, [sp], #96
   24058:	ret
   2405c:	stp	x29, x30, [sp, #-112]!
   24060:	mov	x29, sp
   24064:	str	x19, [sp, #16]
   24068:	str	x0, [sp, #56]
   2406c:	str	x1, [sp, #48]
   24070:	strb	w2, [sp, #47]
   24074:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   24078:	ldr	x0, [x0, #4016]
   2407c:	ldr	x1, [x0]
   24080:	str	x1, [sp, #104]
   24084:	mov	x1, #0x0                   	// #0
   24088:	str	xzr, [sp, #72]
   2408c:	str	xzr, [sp, #80]
   24090:	ldr	x0, [sp, #56]
   24094:	cmp	x0, #0x0
   24098:	cset	w0, eq  // eq = none
   2409c:	and	w0, w0, #0xff
   240a0:	and	x0, x0, #0xff
   240a4:	cmp	x0, #0x0
   240a8:	b.eq	240d4 <udev_util_encode_string@@LIBUDEV_183+0x188a4>  // b.none
   240ac:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   240b0:	add	x1, x0, #0x21b
   240b4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   240b8:	add	x4, x0, #0x5b0
   240bc:	mov	w3, #0x117                 	// #279
   240c0:	mov	x2, x1
   240c4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   240c8:	add	x1, x0, #0x2a0
   240cc:	mov	w0, #0x0                   	// #0
   240d0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   240d4:	ldr	x0, [sp, #48]
   240d8:	cmp	x0, #0x0
   240dc:	cset	w0, eq  // eq = none
   240e0:	and	w0, w0, #0xff
   240e4:	and	x0, x0, #0xff
   240e8:	cmp	x0, #0x0
   240ec:	b.eq	24118 <udev_util_encode_string@@LIBUDEV_183+0x188e8>  // b.none
   240f0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   240f4:	add	x1, x0, #0x21b
   240f8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   240fc:	add	x4, x0, #0x5b0
   24100:	mov	w3, #0x118                 	// #280
   24104:	mov	x2, x1
   24108:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2410c:	add	x1, x0, #0x348
   24110:	mov	w0, #0x0                   	// #0
   24114:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24118:	ldr	x0, [sp, #48]
   2411c:	bl	5040 <strlen@plt>
   24120:	str	x0, [sp, #88]
   24124:	ldrb	w0, [sp, #47]
   24128:	cmp	w0, #0x0
   2412c:	b.eq	2414c <udev_util_encode_string@@LIBUDEV_183+0x1891c>  // b.none
   24130:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24134:	add	x1, x0, #0x248
   24138:	ldr	x0, [sp, #48]
   2413c:	bl	340f0 <udev_util_encode_string@@LIBUDEV_183+0x288c0>
   24140:	cmp	x0, #0x0
   24144:	b.eq	2414c <udev_util_encode_string@@LIBUDEV_183+0x1891c>  // b.none
   24148:	strb	wzr, [sp, #47]
   2414c:	ldrb	w1, [sp, #47]
   24150:	ldr	x0, [sp, #88]
   24154:	add	x0, x1, x0
   24158:	add	x0, x0, #0x1
   2415c:	bl	5220 <malloc@plt>
   24160:	str	x0, [sp, #80]
   24164:	ldr	x0, [sp, #80]
   24168:	cmp	x0, #0x0
   2416c:	b.ne	24178 <udev_util_encode_string@@LIBUDEV_183+0x18948>  // b.any
   24170:	mov	w19, #0xfffffff4            	// #-12
   24174:	b	24284 <udev_util_encode_string@@LIBUDEV_183+0x18a54>
   24178:	add	x0, sp, #0x48
   2417c:	mov	x2, x0
   24180:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24184:	add	x1, x0, #0x340
   24188:	ldr	x0, [sp, #56]
   2418c:	bl	2359c <udev_util_encode_string@@LIBUDEV_183+0x17d6c>
   24190:	str	w0, [sp, #68]
   24194:	ldr	w0, [sp, #68]
   24198:	cmp	w0, #0x0
   2419c:	b.ge	241a8 <udev_util_encode_string@@LIBUDEV_183+0x18978>  // b.tcont
   241a0:	ldr	w19, [sp, #68]
   241a4:	b	24284 <udev_util_encode_string@@LIBUDEV_183+0x18a54>
   241a8:	bl	57d0 <__errno_location@plt>
   241ac:	str	wzr, [x0]
   241b0:	ldr	x4, [sp, #80]
   241b4:	ldrb	w1, [sp, #47]
   241b8:	ldr	x0, [sp, #88]
   241bc:	add	x0, x1, x0
   241c0:	add	x0, x0, #0x1
   241c4:	ldr	x1, [sp, #72]
   241c8:	mov	x3, x1
   241cc:	mov	x2, x0
   241d0:	mov	x1, #0x1                   	// #1
   241d4:	mov	x0, x4
   241d8:	bl	5490 <fread@plt>
   241dc:	str	x0, [sp, #96]
   241e0:	ldr	x0, [sp, #72]
   241e4:	bl	5880 <ferror@plt>
   241e8:	cmp	w0, #0x0
   241ec:	b.eq	24200 <udev_util_encode_string@@LIBUDEV_183+0x189d0>  // b.none
   241f0:	mov	w0, #0x5                   	// #5
   241f4:	bl	234a0 <udev_util_encode_string@@LIBUDEV_183+0x17c70>
   241f8:	mov	w19, w0
   241fc:	b	24284 <udev_util_encode_string@@LIBUDEV_183+0x18a54>
   24200:	ldr	x1, [sp, #96]
   24204:	ldr	x0, [sp, #88]
   24208:	cmp	x1, x0
   2420c:	b.eq	24230 <udev_util_encode_string@@LIBUDEV_183+0x18a00>  // b.none
   24210:	ldrb	w1, [sp, #47]
   24214:	ldr	x0, [sp, #88]
   24218:	add	x0, x1, x0
   2421c:	ldr	x1, [sp, #96]
   24220:	cmp	x1, x0
   24224:	b.eq	24230 <udev_util_encode_string@@LIBUDEV_183+0x18a00>  // b.none
   24228:	mov	w19, #0x0                   	// #0
   2422c:	b	24284 <udev_util_encode_string@@LIBUDEV_183+0x18a54>
   24230:	ldr	x0, [sp, #80]
   24234:	ldr	x2, [sp, #88]
   24238:	ldr	x1, [sp, #48]
   2423c:	bl	5410 <memcmp@plt>
   24240:	cmp	w0, #0x0
   24244:	b.eq	24250 <udev_util_encode_string@@LIBUDEV_183+0x18a20>  // b.none
   24248:	mov	w19, #0x0                   	// #0
   2424c:	b	24284 <udev_util_encode_string@@LIBUDEV_183+0x18a54>
   24250:	ldr	x1, [sp, #96]
   24254:	ldr	x0, [sp, #88]
   24258:	cmp	x1, x0
   2425c:	b.ls	24280 <udev_util_encode_string@@LIBUDEV_183+0x18a50>  // b.plast
   24260:	ldr	x1, [sp, #80]
   24264:	ldr	x0, [sp, #88]
   24268:	add	x0, x1, x0
   2426c:	ldrb	w0, [x0]
   24270:	cmp	w0, #0xa
   24274:	b.eq	24280 <udev_util_encode_string@@LIBUDEV_183+0x18a50>  // b.none
   24278:	mov	w19, #0x0                   	// #0
   2427c:	b	24284 <udev_util_encode_string@@LIBUDEV_183+0x18a54>
   24280:	mov	w19, #0x1                   	// #1
   24284:	add	x0, sp, #0x50
   24288:	bl	233b8 <udev_util_encode_string@@LIBUDEV_183+0x17b88>
   2428c:	add	x0, sp, #0x48
   24290:	bl	2347c <udev_util_encode_string@@LIBUDEV_183+0x17c4c>
   24294:	mov	w1, w19
   24298:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2429c:	ldr	x0, [x0, #4016]
   242a0:	ldr	x2, [sp, #104]
   242a4:	ldr	x0, [x0]
   242a8:	eor	x0, x2, x0
   242ac:	cmp	x0, #0x0
   242b0:	b.eq	242b8 <udev_util_encode_string@@LIBUDEV_183+0x18a88>  // b.none
   242b4:	bl	5390 <__stack_chk_fail@plt>
   242b8:	mov	w0, w1
   242bc:	ldr	x19, [sp, #16]
   242c0:	ldp	x29, x30, [sp], #112
   242c4:	ret
   242c8:	stp	x29, x30, [sp, #-272]!
   242cc:	mov	x29, sp
   242d0:	str	x19, [sp, #16]
   242d4:	str	x0, [sp, #56]
   242d8:	str	x1, [sp, #48]
   242dc:	str	x2, [sp, #40]
   242e0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   242e4:	ldr	x0, [x0, #4016]
   242e8:	ldr	x1, [x0]
   242ec:	str	x1, [sp, #264]
   242f0:	mov	x1, #0x0                   	// #0
   242f4:	str	xzr, [sp, #72]
   242f8:	mov	w0, #0xffffffff            	// #-1
   242fc:	str	w0, [sp, #64]
   24300:	ldr	x0, [sp, #48]
   24304:	cmp	x0, #0x0
   24308:	cset	w0, eq  // eq = none
   2430c:	and	w0, w0, #0xff
   24310:	and	x0, x0, #0xff
   24314:	cmp	x0, #0x0
   24318:	b.eq	24344 <udev_util_encode_string@@LIBUDEV_183+0x18b14>  // b.none
   2431c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24320:	add	x1, x0, #0x21b
   24324:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24328:	add	x4, x0, #0x5c0
   2432c:	mov	w3, #0x13f                 	// #319
   24330:	mov	x2, x1
   24334:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24338:	add	x1, x0, #0x350
   2433c:	mov	w0, #0x0                   	// #0
   24340:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24344:	mov	w1, #0x80000               	// #524288
   24348:	ldr	x0, [sp, #56]
   2434c:	bl	56c0 <open64@plt>
   24350:	str	w0, [sp, #64]
   24354:	ldr	w0, [sp, #64]
   24358:	cmp	w0, #0x0
   2435c:	b.ge	24370 <udev_util_encode_string@@LIBUDEV_183+0x18b40>  // b.tcont
   24360:	bl	57d0 <__errno_location@plt>
   24364:	ldr	w0, [x0]
   24368:	neg	w19, w0
   2436c:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   24370:	mov	x0, #0x400                 	// #1024
   24374:	str	x0, [sp, #80]
   24378:	mov	w0, #0x3                   	// #3
   2437c:	str	w0, [sp, #68]
   24380:	ldr	w0, [sp, #68]
   24384:	cmp	w0, #0x0
   24388:	b.gt	24394 <udev_util_encode_string@@LIBUDEV_183+0x18b64>
   2438c:	mov	w19, #0xfffffffb            	// #-5
   24390:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   24394:	ldr	w0, [sp, #64]
   24398:	add	x1, sp, #0x88
   2439c:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   243a0:	cmp	w0, #0x0
   243a4:	b.ge	243b8 <udev_util_encode_string@@LIBUDEV_183+0x18b88>  // b.tcont
   243a8:	bl	57d0 <__errno_location@plt>
   243ac:	ldr	w0, [x0]
   243b0:	neg	w19, w0
   243b4:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   243b8:	ldr	w0, [sp, #152]
   243bc:	and	w0, w0, #0xf000
   243c0:	cmp	w0, #0x8, lsl #12
   243c4:	b.eq	243d0 <udev_util_encode_string@@LIBUDEV_183+0x18ba0>  // b.none
   243c8:	mov	w19, #0xfffffff7            	// #-9
   243cc:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   243d0:	ldr	x0, [sp, #184]
   243d4:	cmp	x0, #0x0
   243d8:	b.le	243f4 <udev_util_encode_string@@LIBUDEV_183+0x18bc4>
   243dc:	ldr	x0, [sp, #184]
   243e0:	str	x0, [sp, #80]
   243e4:	ldr	w0, [sp, #68]
   243e8:	sub	w0, w0, #0x1
   243ec:	str	w0, [sp, #68]
   243f0:	b	24400 <udev_util_encode_string@@LIBUDEV_183+0x18bd0>
   243f4:	ldr	x0, [sp, #80]
   243f8:	lsl	x0, x0, #1
   243fc:	str	x0, [sp, #80]
   24400:	ldr	x0, [sp, #80]
   24404:	cmp	x0, #0x400, lsl #12
   24408:	b.ls	24414 <udev_util_encode_string@@LIBUDEV_183+0x18be4>  // b.plast
   2440c:	mov	w19, #0xfffffff9            	// #-7
   24410:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   24414:	ldr	x2, [sp, #72]
   24418:	ldr	x0, [sp, #80]
   2441c:	add	x0, x0, #0x1
   24420:	mov	x1, x0
   24424:	mov	x0, x2
   24428:	bl	5330 <realloc@plt>
   2442c:	str	x0, [sp, #88]
   24430:	ldr	x0, [sp, #88]
   24434:	cmp	x0, #0x0
   24438:	b.ne	24444 <udev_util_encode_string@@LIBUDEV_183+0x18c14>  // b.any
   2443c:	mov	w19, #0xfffffff4            	// #-12
   24440:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   24444:	ldr	x0, [sp, #88]
   24448:	str	x0, [sp, #96]
   2444c:	str	xzr, [sp, #88]
   24450:	ldr	x0, [sp, #96]
   24454:	str	x0, [sp, #72]
   24458:	ldr	w3, [sp, #64]
   2445c:	ldr	x1, [sp, #72]
   24460:	ldr	x0, [sp, #80]
   24464:	add	x0, x0, #0x1
   24468:	mov	x2, x0
   2446c:	mov	w0, w3
   24470:	bl	5680 <read@plt>
   24474:	str	x0, [sp, #104]
   24478:	ldr	x0, [sp, #104]
   2447c:	cmp	x0, #0x0
   24480:	b.lt	244a4 <udev_util_encode_string@@LIBUDEV_183+0x18c74>  // b.tstop
   24484:	ldr	x0, [sp, #104]
   24488:	str	x0, [sp, #112]
   2448c:	nop
   24490:	ldr	x1, [sp, #112]
   24494:	ldr	x0, [sp, #80]
   24498:	cmp	x1, x0
   2449c:	b.hi	244c4 <udev_util_encode_string@@LIBUDEV_183+0x18c94>  // b.pmore
   244a0:	b	244ec <udev_util_encode_string@@LIBUDEV_183+0x18cbc>
   244a4:	bl	57d0 <__errno_location@plt>
   244a8:	ldr	w0, [x0]
   244ac:	cmn	w0, #0x4
   244b0:	b.eq	24458 <udev_util_encode_string@@LIBUDEV_183+0x18c28>  // b.none
   244b4:	bl	57d0 <__errno_location@plt>
   244b8:	ldr	w0, [x0]
   244bc:	neg	w19, w0
   244c0:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   244c4:	ldr	w0, [sp, #64]
   244c8:	mov	w2, #0x0                   	// #0
   244cc:	mov	x1, #0x0                   	// #0
   244d0:	bl	52c0 <lseek64@plt>
   244d4:	cmp	x0, #0x0
   244d8:	b.ge	24380 <udev_util_encode_string@@LIBUDEV_183+0x18b50>  // b.tcont
   244dc:	bl	57d0 <__errno_location@plt>
   244e0:	ldr	w0, [x0]
   244e4:	neg	w19, w0
   244e8:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   244ec:	ldr	x1, [sp, #112]
   244f0:	ldr	x0, [sp, #80]
   244f4:	cmp	x1, x0
   244f8:	b.cs	24540 <udev_util_encode_string@@LIBUDEV_183+0x18d10>  // b.hs, b.nlast
   244fc:	ldr	x2, [sp, #72]
   24500:	ldr	x0, [sp, #112]
   24504:	add	x0, x0, #0x1
   24508:	mov	x1, x0
   2450c:	mov	x0, x2
   24510:	bl	5330 <realloc@plt>
   24514:	str	x0, [sp, #88]
   24518:	ldr	x0, [sp, #88]
   2451c:	cmp	x0, #0x0
   24520:	b.ne	2452c <udev_util_encode_string@@LIBUDEV_183+0x18cfc>  // b.any
   24524:	mov	w19, #0xfffffff4            	// #-12
   24528:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   2452c:	ldr	x0, [sp, #88]
   24530:	str	x0, [sp, #120]
   24534:	str	xzr, [sp, #88]
   24538:	ldr	x0, [sp, #120]
   2453c:	str	x0, [sp, #72]
   24540:	ldr	x0, [sp, #40]
   24544:	cmp	x0, #0x0
   24548:	b.ne	2456c <udev_util_encode_string@@LIBUDEV_183+0x18d3c>  // b.any
   2454c:	ldr	x0, [sp, #72]
   24550:	ldr	x2, [sp, #112]
   24554:	mov	w1, #0x0                   	// #0
   24558:	bl	5690 <memchr@plt>
   2455c:	cmp	x0, #0x0
   24560:	b.eq	24578 <udev_util_encode_string@@LIBUDEV_183+0x18d48>  // b.none
   24564:	mov	w19, #0xffffffb6            	// #-74
   24568:	b	245a4 <udev_util_encode_string@@LIBUDEV_183+0x18d74>
   2456c:	ldr	x0, [sp, #40]
   24570:	ldr	x1, [sp, #112]
   24574:	str	x1, [x0]
   24578:	ldr	x1, [sp, #72]
   2457c:	ldr	x0, [sp, #112]
   24580:	add	x0, x1, x0
   24584:	strb	wzr, [x0]
   24588:	ldr	x0, [sp, #72]
   2458c:	str	x0, [sp, #128]
   24590:	str	xzr, [sp, #72]
   24594:	ldr	x1, [sp, #128]
   24598:	ldr	x0, [sp, #48]
   2459c:	str	x1, [x0]
   245a0:	mov	w19, #0x0                   	// #0
   245a4:	add	x0, sp, #0x40
   245a8:	bl	23458 <udev_util_encode_string@@LIBUDEV_183+0x17c28>
   245ac:	add	x0, sp, #0x48
   245b0:	bl	233b8 <udev_util_encode_string@@LIBUDEV_183+0x17b88>
   245b4:	mov	w1, w19
   245b8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   245bc:	ldr	x0, [x0, #4016]
   245c0:	ldr	x2, [sp, #264]
   245c4:	ldr	x0, [x0]
   245c8:	eor	x0, x2, x0
   245cc:	cmp	x0, #0x0
   245d0:	b.eq	245d8 <udev_util_encode_string@@LIBUDEV_183+0x18da8>  // b.none
   245d4:	bl	5390 <__stack_chk_fail@plt>
   245d8:	mov	w0, w1
   245dc:	ldr	x19, [sp, #16]
   245e0:	ldp	x29, x30, [sp], #272
   245e4:	ret
   245e8:	stp	x29, x30, [sp, #-304]!
   245ec:	mov	x29, sp
   245f0:	str	x19, [sp, #16]
   245f4:	str	x0, [sp, #72]
   245f8:	str	x1, [sp, #64]
   245fc:	str	w2, [sp, #60]
   24600:	str	x3, [sp, #48]
   24604:	str	x4, [sp, #40]
   24608:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2460c:	ldr	x0, [x0, #4016]
   24610:	ldr	x1, [x0]
   24614:	str	x1, [sp, #296]
   24618:	mov	x1, #0x0                   	// #0
   2461c:	str	xzr, [sp, #104]
   24620:	ldr	x0, [sp, #72]
   24624:	cmp	x0, #0x0
   24628:	cset	w0, eq  // eq = none
   2462c:	and	w0, w0, #0xff
   24630:	and	x0, x0, #0xff
   24634:	cmp	x0, #0x0
   24638:	b.eq	24664 <udev_util_encode_string@@LIBUDEV_183+0x18e34>  // b.none
   2463c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24640:	add	x1, x0, #0x21b
   24644:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24648:	add	x4, x0, #0x5d8
   2464c:	mov	w3, #0x1ae                 	// #430
   24650:	mov	x2, x1
   24654:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24658:	add	x1, x0, #0x238
   2465c:	mov	w0, #0x0                   	// #0
   24660:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24664:	ldr	x0, [sp, #48]
   24668:	cmp	x0, #0x0
   2466c:	cset	w0, eq  // eq = none
   24670:	and	w0, w0, #0xff
   24674:	and	x0, x0, #0xff
   24678:	cmp	x0, #0x0
   2467c:	b.eq	246a8 <udev_util_encode_string@@LIBUDEV_183+0x18e78>  // b.none
   24680:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24684:	add	x1, x0, #0x21b
   24688:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2468c:	add	x4, x0, #0x5d8
   24690:	mov	w3, #0x1af                 	// #431
   24694:	mov	x2, x1
   24698:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2469c:	add	x1, x0, #0x350
   246a0:	mov	w0, #0x0                   	// #0
   246a4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   246a8:	ldr	w0, [sp, #60]
   246ac:	mvn	w0, w0
   246b0:	and	w0, w0, #0x6
   246b4:	cmp	w0, #0x0
   246b8:	cset	w0, eq  // eq = none
   246bc:	and	w0, w0, #0xff
   246c0:	and	x0, x0, #0xff
   246c4:	cmp	x0, #0x0
   246c8:	b.eq	246f4 <udev_util_encode_string@@LIBUDEV_183+0x18ec4>  // b.none
   246cc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   246d0:	add	x1, x0, #0x21b
   246d4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   246d8:	add	x4, x0, #0x5d8
   246dc:	mov	w3, #0x1b0                 	// #432
   246e0:	mov	x2, x1
   246e4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   246e8:	add	x1, x0, #0x360
   246ec:	mov	w0, #0x0                   	// #0
   246f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   246f4:	ldr	w0, [sp, #60]
   246f8:	and	w0, w0, #0x6
   246fc:	cmp	w0, #0x0
   24700:	cset	w0, ne  // ne = any
   24704:	and	w0, w0, #0xff
   24708:	and	x0, x0, #0xff
   2470c:	cmp	x0, #0x0
   24710:	b.eq	24758 <udev_util_encode_string@@LIBUDEV_183+0x18f28>  // b.none
   24714:	ldr	x0, [sp, #40]
   24718:	cmp	x0, #0x0
   2471c:	cset	w0, eq  // eq = none
   24720:	and	w0, w0, #0xff
   24724:	and	x0, x0, #0xff
   24728:	cmp	x0, #0x0
   2472c:	b.eq	24758 <udev_util_encode_string@@LIBUDEV_183+0x18f28>  // b.none
   24730:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24734:	add	x1, x0, #0x21b
   24738:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2473c:	add	x4, x0, #0x5d8
   24740:	mov	w3, #0x1b1                 	// #433
   24744:	mov	x2, x1
   24748:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2474c:	add	x1, x0, #0x3a8
   24750:	mov	w0, #0x0                   	// #0
   24754:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24758:	mov	x0, #0x800                 	// #2048
   2475c:	str	x0, [sp, #120]
   24760:	ldr	x0, [sp, #72]
   24764:	bl	51c0 <fileno@plt>
   24768:	str	w0, [sp, #96]
   2476c:	ldr	w0, [sp, #96]
   24770:	cmp	w0, #0x0
   24774:	b.lt	24804 <udev_util_encode_string@@LIBUDEV_183+0x18fd4>  // b.tstop
   24778:	add	x0, sp, #0xa8
   2477c:	mov	x1, x0
   24780:	ldr	w0, [sp, #96]
   24784:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   24788:	cmp	w0, #0x0
   2478c:	b.ge	247a0 <udev_util_encode_string@@LIBUDEV_183+0x18f70>  // b.tcont
   24790:	bl	57d0 <__errno_location@plt>
   24794:	ldr	w0, [x0]
   24798:	neg	w19, w0
   2479c:	b	24b14 <udev_util_encode_string@@LIBUDEV_183+0x192e4>
   247a0:	ldr	w0, [sp, #184]
   247a4:	and	w0, w0, #0xf000
   247a8:	cmp	w0, #0x8, lsl #12
   247ac:	b.ne	24804 <udev_util_encode_string@@LIBUDEV_183+0x18fd4>  // b.any
   247b0:	ldr	x0, [sp, #216]
   247b4:	cmp	x0, #0x400, lsl #12
   247b8:	b.le	247c4 <udev_util_encode_string@@LIBUDEV_183+0x18f94>
   247bc:	mov	w19, #0xfffffff9            	// #-7
   247c0:	b	24b14 <udev_util_encode_string@@LIBUDEV_183+0x192e4>
   247c4:	ldr	x0, [sp, #216]
   247c8:	cmp	x0, #0x0
   247cc:	b.le	247dc <udev_util_encode_string@@LIBUDEV_183+0x18fac>
   247d0:	ldr	x0, [sp, #216]
   247d4:	add	x0, x0, #0x1
   247d8:	str	x0, [sp, #120]
   247dc:	ldr	w0, [sp, #60]
   247e0:	and	w0, w0, #0x1
   247e4:	cmp	w0, #0x0
   247e8:	b.eq	24804 <udev_util_encode_string@@LIBUDEV_183+0x18fd4>  // b.none
   247ec:	add	x0, sp, #0xa8
   247f0:	mov	w3, #0x0                   	// #0
   247f4:	mov	x2, #0x0                   	// #0
   247f8:	mov	x1, x0
   247fc:	ldr	x0, [sp, #64]
   24800:	bl	252a8 <udev_util_encode_string@@LIBUDEV_183+0x19a78>
   24804:	str	xzr, [sp, #128]
   24808:	ldr	x0, [sp, #128]
   2480c:	str	x0, [sp, #112]
   24810:	ldr	w0, [sp, #60]
   24814:	and	w0, w0, #0x1
   24818:	cmp	w0, #0x0
   2481c:	b.eq	24878 <udev_util_encode_string@@LIBUDEV_183+0x19048>  // b.none
   24820:	ldr	x0, [sp, #120]
   24824:	add	x0, x0, #0x1
   24828:	bl	5220 <malloc@plt>
   2482c:	str	x0, [sp, #136]
   24830:	ldr	x0, [sp, #136]
   24834:	cmp	x0, #0x0
   24838:	b.ne	24848 <udev_util_encode_string@@LIBUDEV_183+0x19018>  // b.any
   2483c:	mov	w0, #0xfffffff4            	// #-12
   24840:	str	w0, [sp, #92]
   24844:	b	24af4 <udev_util_encode_string@@LIBUDEV_183+0x192c4>
   24848:	ldr	x0, [sp, #104]
   2484c:	ldr	x2, [sp, #112]
   24850:	mov	x1, x0
   24854:	ldr	x0, [sp, #136]
   24858:	bl	234e4 <udev_util_encode_string@@LIBUDEV_183+0x17cb4>
   2485c:	ldr	x0, [sp, #104]
   24860:	ldr	x1, [sp, #112]
   24864:	bl	23568 <udev_util_encode_string@@LIBUDEV_183+0x17d38>
   24868:	ldr	x0, [sp, #104]
   2486c:	bl	23398 <udev_util_encode_string@@LIBUDEV_183+0x17b68>
   24870:	str	x0, [sp, #104]
   24874:	b	248a8 <udev_util_encode_string@@LIBUDEV_183+0x19078>
   24878:	ldr	x2, [sp, #104]
   2487c:	ldr	x0, [sp, #120]
   24880:	add	x0, x0, #0x1
   24884:	mov	x1, x0
   24888:	mov	x0, x2
   2488c:	bl	5330 <realloc@plt>
   24890:	str	x0, [sp, #136]
   24894:	ldr	x0, [sp, #136]
   24898:	cmp	x0, #0x0
   2489c:	b.ne	248a8 <udev_util_encode_string@@LIBUDEV_183+0x19078>  // b.any
   248a0:	mov	w19, #0xfffffff4            	// #-12
   248a4:	b	24b14 <udev_util_encode_string@@LIBUDEV_183+0x192e4>
   248a8:	ldr	x0, [sp, #136]
   248ac:	str	x0, [sp, #104]
   248b0:	ldr	x0, [sp, #120]
   248b4:	str	x0, [sp, #112]
   248b8:	bl	57d0 <__errno_location@plt>
   248bc:	str	wzr, [x0]
   248c0:	ldr	x1, [sp, #104]
   248c4:	ldr	x0, [sp, #128]
   248c8:	add	x4, x1, x0
   248cc:	ldr	x1, [sp, #112]
   248d0:	ldr	x0, [sp, #128]
   248d4:	sub	x0, x1, x0
   248d8:	ldr	x3, [sp, #72]
   248dc:	mov	x2, x0
   248e0:	mov	x1, #0x1                   	// #1
   248e4:	mov	x0, x4
   248e8:	bl	5490 <fread@plt>
   248ec:	str	x0, [sp, #144]
   248f0:	ldr	x0, [sp, #144]
   248f4:	cmp	x0, #0x0
   248f8:	b.eq	2490c <udev_util_encode_string@@LIBUDEV_183+0x190dc>  // b.none
   248fc:	ldr	x1, [sp, #128]
   24900:	ldr	x0, [sp, #144]
   24904:	add	x0, x1, x0
   24908:	str	x0, [sp, #128]
   2490c:	ldr	x0, [sp, #72]
   24910:	bl	5880 <ferror@plt>
   24914:	cmp	w0, #0x0
   24918:	b.eq	2492c <udev_util_encode_string@@LIBUDEV_183+0x190fc>  // b.none
   2491c:	mov	w0, #0x5                   	// #5
   24920:	bl	234a0 <udev_util_encode_string@@LIBUDEV_183+0x17c70>
   24924:	str	w0, [sp, #92]
   24928:	b	24af4 <udev_util_encode_string@@LIBUDEV_183+0x192c4>
   2492c:	ldr	x0, [sp, #72]
   24930:	bl	5400 <feof@plt>
   24934:	cmp	w0, #0x0
   24938:	b.ne	249d0 <udev_util_encode_string@@LIBUDEV_183+0x191a0>  // b.any
   2493c:	ldr	x1, [sp, #128]
   24940:	ldr	x0, [sp, #112]
   24944:	cmp	x1, x0
   24948:	cset	w0, ne  // ne = any
   2494c:	and	w0, w0, #0xff
   24950:	and	x0, x0, #0xff
   24954:	cmp	x0, #0x0
   24958:	b.eq	24984 <udev_util_encode_string@@LIBUDEV_183+0x19154>  // b.none
   2495c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24960:	add	x1, x0, #0x21b
   24964:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24968:	add	x4, x0, #0x5d8
   2496c:	mov	w3, #0x1f4                 	// #500
   24970:	mov	x2, x1
   24974:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24978:	add	x1, x0, #0x3f0
   2497c:	mov	w0, #0x0                   	// #0
   24980:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24984:	ldr	x1, [sp, #112]
   24988:	mov	x0, #0x3fffff              	// #4194303
   2498c:	cmp	x1, x0
   24990:	b.ls	249a0 <udev_util_encode_string@@LIBUDEV_183+0x19170>  // b.plast
   24994:	mov	w0, #0xfffffff9            	// #-7
   24998:	str	w0, [sp, #92]
   2499c:	b	24af4 <udev_util_encode_string@@LIBUDEV_183+0x192c4>
   249a0:	ldr	x0, [sp, #112]
   249a4:	lsl	x0, x0, #1
   249a8:	str	x0, [sp, #152]
   249ac:	mov	w0, #0x400000              	// #4194304
   249b0:	str	w0, [sp, #100]
   249b4:	ldr	w0, [sp, #100]
   249b8:	ldr	x2, [sp, #152]
   249bc:	ldr	x1, [sp, #152]
   249c0:	cmp	x2, x0
   249c4:	csel	x0, x1, x0, ls  // ls = plast
   249c8:	str	x0, [sp, #120]
   249cc:	b	24810 <udev_util_encode_string@@LIBUDEV_183+0x18fe0>
   249d0:	nop
   249d4:	ldr	w0, [sp, #60]
   249d8:	and	w0, w0, #0x6
   249dc:	cmp	w0, #0x0
   249e0:	b.eq	24a7c <udev_util_encode_string@@LIBUDEV_183+0x1924c>  // b.none
   249e4:	ldr	x1, [sp, #104]
   249e8:	ldr	x0, [sp, #128]
   249ec:	add	x2, x0, #0x1
   249f0:	str	x2, [sp, #128]
   249f4:	add	x0, x1, x0
   249f8:	strb	wzr, [x0]
   249fc:	ldr	w0, [sp, #60]
   24a00:	and	w0, w0, #0x2
   24a04:	cmp	w0, #0x0
   24a08:	b.eq	24a44 <udev_util_encode_string@@LIBUDEV_183+0x19214>  // b.none
   24a0c:	ldr	x5, [sp, #104]
   24a10:	ldr	w0, [sp, #60]
   24a14:	and	w0, w0, #0x1
   24a18:	cmp	w0, #0x0
   24a1c:	cset	w0, ne  // ne = any
   24a20:	and	w0, w0, #0xff
   24a24:	ldr	x4, [sp, #40]
   24a28:	ldr	x3, [sp, #48]
   24a2c:	mov	w2, w0
   24a30:	ldr	x1, [sp, #128]
   24a34:	mov	x0, x5
   24a38:	bl	2a7ec <udev_util_encode_string@@LIBUDEV_183+0x1efbc>
   24a3c:	str	w0, [sp, #92]
   24a40:	b	24af4 <udev_util_encode_string@@LIBUDEV_183+0x192c4>
   24a44:	ldr	x5, [sp, #104]
   24a48:	ldr	w0, [sp, #60]
   24a4c:	and	w0, w0, #0x1
   24a50:	cmp	w0, #0x0
   24a54:	cset	w0, ne  // ne = any
   24a58:	and	w0, w0, #0xff
   24a5c:	ldr	x4, [sp, #40]
   24a60:	ldr	x3, [sp, #48]
   24a64:	mov	w2, w0
   24a68:	ldr	x1, [sp, #128]
   24a6c:	mov	x0, x5
   24a70:	bl	2a298 <udev_util_encode_string@@LIBUDEV_183+0x1ea68>
   24a74:	str	w0, [sp, #92]
   24a78:	b	24af4 <udev_util_encode_string@@LIBUDEV_183+0x192c4>
   24a7c:	ldr	x0, [sp, #40]
   24a80:	cmp	x0, #0x0
   24a84:	b.ne	24aac <udev_util_encode_string@@LIBUDEV_183+0x1927c>  // b.any
   24a88:	ldr	x0, [sp, #104]
   24a8c:	ldr	x2, [sp, #128]
   24a90:	mov	w1, #0x0                   	// #0
   24a94:	bl	5690 <memchr@plt>
   24a98:	cmp	x0, #0x0
   24a9c:	b.eq	24aac <udev_util_encode_string@@LIBUDEV_183+0x1927c>  // b.none
   24aa0:	mov	w0, #0xffffffb6            	// #-74
   24aa4:	str	w0, [sp, #92]
   24aa8:	b	24af4 <udev_util_encode_string@@LIBUDEV_183+0x192c4>
   24aac:	ldr	x1, [sp, #104]
   24ab0:	ldr	x0, [sp, #128]
   24ab4:	add	x0, x1, x0
   24ab8:	strb	wzr, [x0]
   24abc:	ldr	x0, [sp, #104]
   24ac0:	str	x0, [sp, #160]
   24ac4:	str	xzr, [sp, #104]
   24ac8:	ldr	x1, [sp, #160]
   24acc:	ldr	x0, [sp, #48]
   24ad0:	str	x1, [x0]
   24ad4:	ldr	x0, [sp, #40]
   24ad8:	cmp	x0, #0x0
   24adc:	b.eq	24aec <udev_util_encode_string@@LIBUDEV_183+0x192bc>  // b.none
   24ae0:	ldr	x0, [sp, #40]
   24ae4:	ldr	x1, [sp, #128]
   24ae8:	str	x1, [x0]
   24aec:	mov	w19, #0x0                   	// #0
   24af0:	b	24b14 <udev_util_encode_string@@LIBUDEV_183+0x192e4>
   24af4:	ldr	w0, [sp, #60]
   24af8:	and	w0, w0, #0x1
   24afc:	cmp	w0, #0x0
   24b00:	b.eq	24b10 <udev_util_encode_string@@LIBUDEV_183+0x192e0>  // b.none
   24b04:	ldr	x0, [sp, #104]
   24b08:	ldr	x1, [sp, #112]
   24b0c:	bl	23568 <udev_util_encode_string@@LIBUDEV_183+0x17d38>
   24b10:	ldr	w19, [sp, #92]
   24b14:	add	x0, sp, #0x68
   24b18:	bl	233b8 <udev_util_encode_string@@LIBUDEV_183+0x17b88>
   24b1c:	mov	w1, w19
   24b20:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   24b24:	ldr	x0, [x0, #4016]
   24b28:	ldr	x2, [sp, #296]
   24b2c:	ldr	x0, [x0]
   24b30:	eor	x0, x2, x0
   24b34:	cmp	x0, #0x0
   24b38:	b.eq	24b40 <udev_util_encode_string@@LIBUDEV_183+0x19310>  // b.none
   24b3c:	bl	5390 <__stack_chk_fail@plt>
   24b40:	mov	w0, w1
   24b44:	ldr	x19, [sp, #16]
   24b48:	ldp	x29, x30, [sp], #304
   24b4c:	ret
   24b50:	stp	x29, x30, [sp, #-96]!
   24b54:	mov	x29, sp
   24b58:	str	x19, [sp, #16]
   24b5c:	str	x0, [sp, #56]
   24b60:	str	w1, [sp, #52]
   24b64:	str	x2, [sp, #40]
   24b68:	str	x3, [sp, #32]
   24b6c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   24b70:	ldr	x0, [x0, #4016]
   24b74:	ldr	x1, [x0]
   24b78:	str	x1, [sp, #88]
   24b7c:	mov	x1, #0x0                   	// #0
   24b80:	str	xzr, [sp, #80]
   24b84:	ldr	x0, [sp, #56]
   24b88:	cmp	x0, #0x0
   24b8c:	cset	w0, eq  // eq = none
   24b90:	and	w0, w0, #0xff
   24b94:	and	x0, x0, #0xff
   24b98:	cmp	x0, #0x0
   24b9c:	b.eq	24bc8 <udev_util_encode_string@@LIBUDEV_183+0x19398>  // b.none
   24ba0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24ba4:	add	x1, x0, #0x21b
   24ba8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24bac:	add	x4, x0, #0x600
   24bb0:	mov	w3, #0x226                 	// #550
   24bb4:	mov	x2, x1
   24bb8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24bbc:	add	x1, x0, #0x3f8
   24bc0:	mov	w0, #0x0                   	// #0
   24bc4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24bc8:	ldr	x0, [sp, #40]
   24bcc:	cmp	x0, #0x0
   24bd0:	cset	w0, eq  // eq = none
   24bd4:	and	w0, w0, #0xff
   24bd8:	and	x0, x0, #0xff
   24bdc:	cmp	x0, #0x0
   24be0:	b.eq	24c0c <udev_util_encode_string@@LIBUDEV_183+0x193dc>  // b.none
   24be4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24be8:	add	x1, x0, #0x21b
   24bec:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24bf0:	add	x4, x0, #0x600
   24bf4:	mov	w3, #0x227                 	// #551
   24bf8:	mov	x2, x1
   24bfc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24c00:	add	x1, x0, #0x408
   24c04:	mov	w0, #0x0                   	// #0
   24c08:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24c0c:	add	x0, sp, #0x50
   24c10:	mov	x2, x0
   24c14:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24c18:	add	x1, x0, #0x340
   24c1c:	ldr	x0, [sp, #56]
   24c20:	bl	2359c <udev_util_encode_string@@LIBUDEV_183+0x17d6c>
   24c24:	str	w0, [sp, #76]
   24c28:	ldr	w0, [sp, #76]
   24c2c:	cmp	w0, #0x0
   24c30:	b.ge	24c3c <udev_util_encode_string@@LIBUDEV_183+0x1940c>  // b.tcont
   24c34:	ldr	w19, [sp, #76]
   24c38:	b	24c58 <udev_util_encode_string@@LIBUDEV_183+0x19428>
   24c3c:	ldr	x0, [sp, #80]
   24c40:	ldr	x4, [sp, #32]
   24c44:	ldr	x3, [sp, #40]
   24c48:	ldr	w2, [sp, #52]
   24c4c:	ldr	x1, [sp, #56]
   24c50:	bl	245e8 <udev_util_encode_string@@LIBUDEV_183+0x18db8>
   24c54:	mov	w19, w0
   24c58:	add	x0, sp, #0x50
   24c5c:	bl	2347c <udev_util_encode_string@@LIBUDEV_183+0x17c4c>
   24c60:	mov	w1, w19
   24c64:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   24c68:	ldr	x0, [x0, #4016]
   24c6c:	ldr	x2, [sp, #88]
   24c70:	ldr	x0, [x0]
   24c74:	eor	x0, x2, x0
   24c78:	cmp	x0, #0x0
   24c7c:	b.eq	24c84 <udev_util_encode_string@@LIBUDEV_183+0x19454>  // b.none
   24c80:	bl	5390 <__stack_chk_fail@plt>
   24c84:	mov	w0, w1
   24c88:	ldr	x19, [sp, #16]
   24c8c:	ldp	x29, x30, [sp], #96
   24c90:	ret
   24c94:	stp	x29, x30, [sp, #-32]!
   24c98:	mov	x29, sp
   24c9c:	str	x0, [sp, #24]
   24ca0:	ldr	x0, [sp, #24]
   24ca4:	cmp	x0, #0x0
   24ca8:	cset	w0, eq  // eq = none
   24cac:	and	w0, w0, #0xff
   24cb0:	and	x0, x0, #0xff
   24cb4:	cmp	x0, #0x0
   24cb8:	b.eq	24ce4 <udev_util_encode_string@@LIBUDEV_183+0x194b4>  // b.none
   24cbc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24cc0:	add	x1, x0, #0x21b
   24cc4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24cc8:	add	x4, x0, #0x618
   24ccc:	mov	w3, #0x2fb                 	// #763
   24cd0:	mov	x2, x1
   24cd4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24cd8:	add	x1, x0, #0x238
   24cdc:	mov	w0, #0x0                   	// #0
   24ce0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24ce4:	bl	57d0 <__errno_location@plt>
   24ce8:	str	wzr, [x0]
   24cec:	ldr	x0, [sp, #24]
   24cf0:	bl	5600 <fflush@plt>
   24cf4:	ldr	x0, [sp, #24]
   24cf8:	bl	5880 <ferror@plt>
   24cfc:	cmp	w0, #0x0
   24d00:	b.eq	24d10 <udev_util_encode_string@@LIBUDEV_183+0x194e0>  // b.none
   24d04:	mov	w0, #0x5                   	// #5
   24d08:	bl	234a0 <udev_util_encode_string@@LIBUDEV_183+0x17c70>
   24d0c:	b	24d14 <udev_util_encode_string@@LIBUDEV_183+0x194e4>
   24d10:	mov	w0, #0x0                   	// #0
   24d14:	ldp	x29, x30, [sp], #32
   24d18:	ret
   24d1c:	stp	x29, x30, [sp, #-48]!
   24d20:	mov	x29, sp
   24d24:	str	x0, [sp, #24]
   24d28:	ldr	x0, [sp, #24]
   24d2c:	cmp	x0, #0x0
   24d30:	cset	w0, eq  // eq = none
   24d34:	and	w0, w0, #0xff
   24d38:	and	x0, x0, #0xff
   24d3c:	cmp	x0, #0x0
   24d40:	b.eq	24d6c <udev_util_encode_string@@LIBUDEV_183+0x1953c>  // b.none
   24d44:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24d48:	add	x1, x0, #0x21b
   24d4c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24d50:	add	x4, x0, #0x630
   24d54:	mov	w3, #0x309                 	// #777
   24d58:	mov	x2, x1
   24d5c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24d60:	add	x1, x0, #0x238
   24d64:	mov	w0, #0x0                   	// #0
   24d68:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24d6c:	ldr	x0, [sp, #24]
   24d70:	bl	24c94 <udev_util_encode_string@@LIBUDEV_183+0x19464>
   24d74:	str	w0, [sp, #44]
   24d78:	ldr	w0, [sp, #44]
   24d7c:	cmp	w0, #0x0
   24d80:	b.ge	24d8c <udev_util_encode_string@@LIBUDEV_183+0x1955c>  // b.tcont
   24d84:	ldr	w0, [sp, #44]
   24d88:	b	24dd8 <udev_util_encode_string@@LIBUDEV_183+0x195a8>
   24d8c:	ldr	x0, [sp, #24]
   24d90:	bl	51c0 <fileno@plt>
   24d94:	bl	51f0 <fsync@plt>
   24d98:	cmp	w0, #0x0
   24d9c:	b.ge	24db0 <udev_util_encode_string@@LIBUDEV_183+0x19580>  // b.tcont
   24da0:	bl	57d0 <__errno_location@plt>
   24da4:	ldr	w0, [x0]
   24da8:	neg	w0, w0
   24dac:	b	24dd8 <udev_util_encode_string@@LIBUDEV_183+0x195a8>
   24db0:	ldr	x0, [sp, #24]
   24db4:	bl	51c0 <fileno@plt>
   24db8:	bl	26bc4 <udev_util_encode_string@@LIBUDEV_183+0x1b394>
   24dbc:	str	w0, [sp, #44]
   24dc0:	ldr	w0, [sp, #44]
   24dc4:	cmp	w0, #0x0
   24dc8:	b.ge	24dd4 <udev_util_encode_string@@LIBUDEV_183+0x195a4>  // b.tcont
   24dcc:	ldr	w0, [sp, #44]
   24dd0:	b	24dd8 <udev_util_encode_string@@LIBUDEV_183+0x195a8>
   24dd4:	mov	w0, #0x0                   	// #0
   24dd8:	ldp	x29, x30, [sp], #48
   24ddc:	ret
   24de0:	sub	sp, sp, #0x20
   24de4:	strb	w0, [sp, #15]
   24de8:	str	w1, [sp, #8]
   24dec:	strb	wzr, [sp, #31]
   24df0:	ldr	w0, [sp, #8]
   24df4:	cmp	w0, #0x1
   24df8:	b.ne	24e04 <udev_util_encode_string@@LIBUDEV_183+0x195d4>  // b.any
   24dfc:	mov	w0, #0x1                   	// #1
   24e00:	strb	w0, [sp, #31]
   24e04:	nop
   24e08:	ldrb	w0, [sp, #31]
   24e0c:	eor	w0, w0, #0x1
   24e10:	and	w0, w0, #0xff
   24e14:	cmp	w0, #0x0
   24e18:	b.eq	24e44 <udev_util_encode_string@@LIBUDEV_183+0x19614>  // b.none
   24e1c:	ldrb	w0, [sp, #15]
   24e20:	cmp	w0, #0xa
   24e24:	b.ne	24e30 <udev_util_encode_string@@LIBUDEV_183+0x19600>  // b.any
   24e28:	mov	w0, #0x2                   	// #2
   24e2c:	b	24e5c <udev_util_encode_string@@LIBUDEV_183+0x1962c>
   24e30:	ldrb	w0, [sp, #15]
   24e34:	cmp	w0, #0xd
   24e38:	b.ne	24e44 <udev_util_encode_string@@LIBUDEV_183+0x19614>  // b.any
   24e3c:	mov	w0, #0x4                   	// #4
   24e40:	b	24e5c <udev_util_encode_string@@LIBUDEV_183+0x1962c>
   24e44:	ldrb	w0, [sp, #15]
   24e48:	cmp	w0, #0x0
   24e4c:	b.ne	24e58 <udev_util_encode_string@@LIBUDEV_183+0x19628>  // b.any
   24e50:	mov	w0, #0x1                   	// #1
   24e54:	b	24e5c <udev_util_encode_string@@LIBUDEV_183+0x1962c>
   24e58:	mov	w0, #0x0                   	// #0
   24e5c:	add	sp, sp, #0x20
   24e60:	ret
   24e64:	stp	x29, x30, [sp, #-32]!
   24e68:	mov	x29, sp
   24e6c:	str	x0, [sp, #24]
   24e70:	ldr	x0, [sp, #24]
   24e74:	ldr	x0, [x0]
   24e78:	cmp	x0, #0x0
   24e7c:	b.eq	24e8c <udev_util_encode_string@@LIBUDEV_183+0x1965c>  // b.none
   24e80:	ldr	x0, [sp, #24]
   24e84:	ldr	x0, [x0]
   24e88:	bl	5240 <funlockfile@plt>
   24e8c:	nop
   24e90:	ldp	x29, x30, [sp], #32
   24e94:	ret
   24e98:	stp	x29, x30, [sp, #-144]!
   24e9c:	mov	x29, sp
   24ea0:	stp	x19, x20, [sp, #16]
   24ea4:	str	x0, [sp, #56]
   24ea8:	str	x1, [sp, #48]
   24eac:	str	w2, [sp, #44]
   24eb0:	str	x3, [sp, #32]
   24eb4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   24eb8:	ldr	x0, [x0, #4016]
   24ebc:	ldr	x1, [x0]
   24ec0:	str	x1, [sp, #136]
   24ec4:	mov	x1, #0x0                   	// #0
   24ec8:	str	xzr, [sp, #112]
   24ecc:	str	xzr, [sp, #88]
   24ed0:	str	xzr, [sp, #120]
   24ed4:	str	xzr, [sp, #96]
   24ed8:	mov	w0, #0xffffffff            	// #-1
   24edc:	str	w0, [sp, #72]
   24ee0:	ldr	x0, [sp, #56]
   24ee4:	cmp	x0, #0x0
   24ee8:	cset	w0, eq  // eq = none
   24eec:	and	w0, w0, #0xff
   24ef0:	and	x0, x0, #0xff
   24ef4:	cmp	x0, #0x0
   24ef8:	b.eq	24f24 <udev_util_encode_string@@LIBUDEV_183+0x196f4>  // b.none
   24efc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24f00:	add	x1, x0, #0x21b
   24f04:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24f08:	add	x4, x0, #0x648
   24f0c:	mov	w3, #0x376                 	// #886
   24f10:	mov	x2, x1
   24f14:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   24f18:	add	x1, x0, #0x238
   24f1c:	mov	w0, #0x0                   	// #0
   24f20:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   24f24:	ldr	x0, [sp, #32]
   24f28:	cmp	x0, #0x0
   24f2c:	b.eq	24f54 <udev_util_encode_string@@LIBUDEV_183+0x19724>  // b.none
   24f30:	add	x1, sp, #0x58
   24f34:	add	x0, sp, #0x60
   24f38:	mov	x3, #0x1                   	// #1
   24f3c:	mov	x2, #0x1                   	// #1
   24f40:	bl	22988 <udev_util_encode_string@@LIBUDEV_183+0x17158>
   24f44:	cmp	x0, #0x0
   24f48:	b.ne	24f54 <udev_util_encode_string@@LIBUDEV_183+0x19724>  // b.any
   24f4c:	mov	w19, #0xfffffff4            	// #-12
   24f50:	b	25198 <udev_util_encode_string@@LIBUDEV_183+0x19968>
   24f54:	ldr	x0, [sp, #56]
   24f58:	str	x0, [sp, #104]
   24f5c:	str	wzr, [sp, #76]
   24f60:	ldr	x0, [sp, #56]
   24f64:	bl	5060 <flockfile@plt>
   24f68:	ldr	x1, [sp, #112]
   24f6c:	ldr	x0, [sp, #48]
   24f70:	cmp	x1, x0
   24f74:	b.cc	24f80 <udev_util_encode_string@@LIBUDEV_183+0x19750>  // b.lo, b.ul, b.last
   24f78:	mov	w19, #0xffffff97            	// #-105
   24f7c:	b	25128 <udev_util_encode_string@@LIBUDEV_183+0x198f8>
   24f80:	ldr	x1, [sp, #120]
   24f84:	mov	x0, #0x7ffffffe            	// #2147483646
   24f88:	cmp	x1, x0
   24f8c:	b.ls	24f98 <udev_util_encode_string@@LIBUDEV_183+0x19768>  // b.plast
   24f90:	mov	w19, #0xffffff97            	// #-105
   24f94:	b	25128 <udev_util_encode_string@@LIBUDEV_183+0x198f8>
   24f98:	add	x0, sp, #0x47
   24f9c:	mov	x1, x0
   24fa0:	ldr	x0, [sp, #56]
   24fa4:	bl	251d4 <udev_util_encode_string@@LIBUDEV_183+0x199a4>
   24fa8:	str	w0, [sp, #80]
   24fac:	ldr	w0, [sp, #80]
   24fb0:	cmp	w0, #0x0
   24fb4:	b.ge	24fc0 <udev_util_encode_string@@LIBUDEV_183+0x19790>  // b.tcont
   24fb8:	ldr	w19, [sp, #80]
   24fbc:	b	25128 <udev_util_encode_string@@LIBUDEV_183+0x198f8>
   24fc0:	ldr	w0, [sp, #80]
   24fc4:	cmp	w0, #0x0
   24fc8:	b.eq	25130 <udev_util_encode_string@@LIBUDEV_183+0x19900>  // b.none
   24fcc:	ldrb	w0, [sp, #71]
   24fd0:	ldr	w1, [sp, #44]
   24fd4:	bl	24de0 <udev_util_encode_string@@LIBUDEV_183+0x195b0>
   24fd8:	str	w0, [sp, #84]
   24fdc:	ldr	w0, [sp, #76]
   24fe0:	and	w0, w0, #0x1
   24fe4:	cmp	w0, #0x0
   24fe8:	b.ne	25024 <udev_util_encode_string@@LIBUDEV_183+0x197f4>  // b.any
   24fec:	ldr	w0, [sp, #84]
   24ff0:	cmp	w0, #0x0
   24ff4:	b.ne	25004 <udev_util_encode_string@@LIBUDEV_183+0x197d4>  // b.any
   24ff8:	ldr	w0, [sp, #76]
   24ffc:	cmp	w0, #0x0
   25000:	b.ne	25024 <udev_util_encode_string@@LIBUDEV_183+0x197f4>  // b.any
   25004:	ldr	w0, [sp, #84]
   25008:	cmp	w0, #0x0
   2500c:	b.eq	25070 <udev_util_encode_string@@LIBUDEV_183+0x19840>  // b.none
   25010:	ldr	w1, [sp, #76]
   25014:	ldr	w0, [sp, #84]
   25018:	and	w0, w1, w0
   2501c:	cmp	w0, #0x0
   25020:	b.eq	25070 <udev_util_encode_string@@LIBUDEV_183+0x19840>  // b.none
   25024:	ldrb	w0, [sp, #71]
   25028:	ldr	x1, [sp, #56]
   2502c:	bl	54c0 <ungetc@plt>
   25030:	cmn	w0, #0x1
   25034:	cset	w0, eq  // eq = none
   25038:	and	w0, w0, #0xff
   2503c:	and	x0, x0, #0xff
   25040:	cmp	x0, #0x0
   25044:	b.eq	25138 <udev_util_encode_string@@LIBUDEV_183+0x19908>  // b.none
   25048:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2504c:	add	x1, x0, #0x21b
   25050:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25054:	add	x4, x0, #0x648
   25058:	mov	w3, #0x3b8                 	// #952
   2505c:	mov	x2, x1
   25060:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25064:	add	x1, x0, #0x4c0
   25068:	mov	w0, #0x0                   	// #0
   2506c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   25070:	ldr	x0, [sp, #120]
   25074:	add	x0, x0, #0x1
   25078:	str	x0, [sp, #120]
   2507c:	ldr	w0, [sp, #84]
   25080:	cmp	w0, #0x0
   25084:	b.eq	250b0 <udev_util_encode_string@@LIBUDEV_183+0x19880>  // b.none
   25088:	ldr	w0, [sp, #72]
   2508c:	cmp	w0, #0x0
   25090:	b.ge	250a4 <udev_util_encode_string@@LIBUDEV_183+0x19874>  // b.tcont
   25094:	ldr	x0, [sp, #56]
   25098:	bl	51c0 <fileno@plt>
   2509c:	bl	56a0 <isatty@plt>
   250a0:	str	w0, [sp, #72]
   250a4:	ldr	w0, [sp, #72]
   250a8:	cmp	w0, #0x0
   250ac:	b.gt	25140 <udev_util_encode_string@@LIBUDEV_183+0x19910>
   250b0:	ldr	w0, [sp, #84]
   250b4:	cmp	w0, #0x0
   250b8:	b.eq	250d0 <udev_util_encode_string@@LIBUDEV_183+0x198a0>  // b.none
   250bc:	ldr	w1, [sp, #76]
   250c0:	ldr	w0, [sp, #84]
   250c4:	orr	w0, w1, w0
   250c8:	str	w0, [sp, #76]
   250cc:	b	24f68 <udev_util_encode_string@@LIBUDEV_183+0x19738>
   250d0:	ldr	x0, [sp, #32]
   250d4:	cmp	x0, #0x0
   250d8:	b.eq	25118 <udev_util_encode_string@@LIBUDEV_183+0x198e8>  // b.none
   250dc:	ldr	x0, [sp, #112]
   250e0:	add	x2, x0, #0x2
   250e4:	add	x1, sp, #0x58
   250e8:	add	x0, sp, #0x60
   250ec:	mov	x3, #0x1                   	// #1
   250f0:	bl	22988 <udev_util_encode_string@@LIBUDEV_183+0x17158>
   250f4:	cmp	x0, #0x0
   250f8:	b.ne	25104 <udev_util_encode_string@@LIBUDEV_183+0x198d4>  // b.any
   250fc:	mov	w19, #0xfffffff4            	// #-12
   25100:	b	25128 <udev_util_encode_string@@LIBUDEV_183+0x198f8>
   25104:	ldr	x1, [sp, #96]
   25108:	ldr	x0, [sp, #112]
   2510c:	add	x0, x1, x0
   25110:	ldrb	w1, [sp, #71]
   25114:	strb	w1, [x0]
   25118:	ldr	x0, [sp, #112]
   2511c:	add	x0, x0, #0x1
   25120:	str	x0, [sp, #112]
   25124:	b	24f68 <udev_util_encode_string@@LIBUDEV_183+0x19738>
   25128:	mov	w20, #0x0                   	// #0
   2512c:	b	25148 <udev_util_encode_string@@LIBUDEV_183+0x19918>
   25130:	nop
   25134:	b	25144 <udev_util_encode_string@@LIBUDEV_183+0x19914>
   25138:	nop
   2513c:	b	25144 <udev_util_encode_string@@LIBUDEV_183+0x19914>
   25140:	nop
   25144:	mov	w20, #0x1                   	// #1
   25148:	add	x0, sp, #0x68
   2514c:	bl	24e64 <udev_util_encode_string@@LIBUDEV_183+0x19634>
   25150:	cmp	w20, #0x1
   25154:	b.ne	25198 <udev_util_encode_string@@LIBUDEV_183+0x19968>  // b.any
   25158:	nop
   2515c:	ldr	x0, [sp, #32]
   25160:	cmp	x0, #0x0
   25164:	b.eq	25190 <udev_util_encode_string@@LIBUDEV_183+0x19960>  // b.none
   25168:	ldr	x1, [sp, #96]
   2516c:	ldr	x0, [sp, #112]
   25170:	add	x0, x1, x0
   25174:	strb	wzr, [x0]
   25178:	ldr	x0, [sp, #96]
   2517c:	str	x0, [sp, #128]
   25180:	str	xzr, [sp, #96]
   25184:	ldr	x1, [sp, #128]
   25188:	ldr	x0, [sp, #32]
   2518c:	str	x1, [x0]
   25190:	ldr	x0, [sp, #120]
   25194:	mov	w19, w0
   25198:	add	x0, sp, #0x60
   2519c:	bl	233b8 <udev_util_encode_string@@LIBUDEV_183+0x17b88>
   251a0:	mov	w1, w19
   251a4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   251a8:	ldr	x0, [x0, #4016]
   251ac:	ldr	x2, [sp, #136]
   251b0:	ldr	x0, [x0]
   251b4:	eor	x0, x2, x0
   251b8:	cmp	x0, #0x0
   251bc:	b.eq	251c4 <udev_util_encode_string@@LIBUDEV_183+0x19994>  // b.none
   251c0:	bl	5390 <__stack_chk_fail@plt>
   251c4:	mov	w0, w1
   251c8:	ldp	x19, x20, [sp, #16]
   251cc:	ldp	x29, x30, [sp], #144
   251d0:	ret
   251d4:	stp	x29, x30, [sp, #-48]!
   251d8:	mov	x29, sp
   251dc:	str	x0, [sp, #24]
   251e0:	str	x1, [sp, #16]
   251e4:	ldr	x0, [sp, #24]
   251e8:	cmp	x0, #0x0
   251ec:	cset	w0, eq  // eq = none
   251f0:	and	w0, w0, #0xff
   251f4:	and	x0, x0, #0xff
   251f8:	cmp	x0, #0x0
   251fc:	b.eq	25228 <udev_util_encode_string@@LIBUDEV_183+0x199f8>  // b.none
   25200:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25204:	add	x1, x0, #0x21b
   25208:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2520c:	add	x4, x0, #0x658
   25210:	mov	w3, #0x3e5                 	// #997
   25214:	mov	x2, x1
   25218:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2521c:	add	x1, x0, #0x238
   25220:	mov	w0, #0x0                   	// #0
   25224:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   25228:	bl	57d0 <__errno_location@plt>
   2522c:	str	wzr, [x0]
   25230:	ldr	x0, [sp, #24]
   25234:	bl	5280 <fgetc@plt>
   25238:	str	w0, [sp, #44]
   2523c:	ldr	w0, [sp, #44]
   25240:	cmn	w0, #0x1
   25244:	b.ne	25280 <udev_util_encode_string@@LIBUDEV_183+0x19a50>  // b.any
   25248:	ldr	x0, [sp, #24]
   2524c:	bl	5880 <ferror@plt>
   25250:	cmp	w0, #0x0
   25254:	b.eq	25264 <udev_util_encode_string@@LIBUDEV_183+0x19a34>  // b.none
   25258:	mov	w0, #0x5                   	// #5
   2525c:	bl	234a0 <udev_util_encode_string@@LIBUDEV_183+0x17c70>
   25260:	b	252a0 <udev_util_encode_string@@LIBUDEV_183+0x19a70>
   25264:	ldr	x0, [sp, #16]
   25268:	cmp	x0, #0x0
   2526c:	b.eq	25278 <udev_util_encode_string@@LIBUDEV_183+0x19a48>  // b.none
   25270:	ldr	x0, [sp, #16]
   25274:	strb	wzr, [x0]
   25278:	mov	w0, #0x0                   	// #0
   2527c:	b	252a0 <udev_util_encode_string@@LIBUDEV_183+0x19a70>
   25280:	ldr	x0, [sp, #16]
   25284:	cmp	x0, #0x0
   25288:	b.eq	2529c <udev_util_encode_string@@LIBUDEV_183+0x19a6c>  // b.none
   2528c:	ldr	w0, [sp, #44]
   25290:	and	w1, w0, #0xff
   25294:	ldr	x0, [sp, #16]
   25298:	strb	w1, [x0]
   2529c:	mov	w0, #0x1                   	// #1
   252a0:	ldp	x29, x30, [sp], #48
   252a4:	ret
   252a8:	sub	sp, sp, #0xf0
   252ac:	stp	x29, x30, [sp, #32]
   252b0:	add	x29, sp, #0x20
   252b4:	str	x0, [sp, #72]
   252b8:	str	x1, [sp, #64]
   252bc:	str	x2, [sp, #56]
   252c0:	str	w3, [sp, #52]
   252c4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   252c8:	ldr	x0, [x0, #4016]
   252cc:	ldr	x1, [x0]
   252d0:	str	x1, [sp, #232]
   252d4:	mov	x1, #0x0                   	// #0
   252d8:	ldr	x0, [sp, #72]
   252dc:	cmp	x0, #0x0
   252e0:	b.ne	252ec <udev_util_encode_string@@LIBUDEV_183+0x19abc>  // b.any
   252e4:	mov	w0, #0x0                   	// #0
   252e8:	b	25468 <udev_util_encode_string@@LIBUDEV_183+0x19c38>
   252ec:	ldr	x0, [sp, #64]
   252f0:	cmp	x0, #0x0
   252f4:	b.ne	25328 <udev_util_encode_string@@LIBUDEV_183+0x19af8>  // b.any
   252f8:	add	x0, sp, #0x68
   252fc:	mov	x1, x0
   25300:	ldr	x0, [sp, #72]
   25304:	bl	364e0 <udev_util_encode_string@@LIBUDEV_183+0x2acb0>
   25308:	cmp	w0, #0x0
   2530c:	b.ge	25320 <udev_util_encode_string@@LIBUDEV_183+0x19af0>  // b.tcont
   25310:	bl	57d0 <__errno_location@plt>
   25314:	ldr	w0, [x0]
   25318:	neg	w0, w0
   2531c:	b	25468 <udev_util_encode_string@@LIBUDEV_183+0x19c38>
   25320:	add	x0, sp, #0x68
   25324:	str	x0, [sp, #64]
   25328:	ldr	x0, [sp, #64]
   2532c:	ldr	w0, [x0, #16]
   25330:	and	w0, w0, #0x7
   25334:	cmp	w0, #0x0
   25338:	b.ne	25344 <udev_util_encode_string@@LIBUDEV_183+0x19b14>  // b.any
   2533c:	mov	w0, #0x0                   	// #0
   25340:	b	25468 <udev_util_encode_string@@LIBUDEV_183+0x19c38>
   25344:	ldr	x0, [sp, #56]
   25348:	cmp	x0, #0x0
   2534c:	b.eq	253dc <udev_util_encode_string@@LIBUDEV_183+0x19bac>  // b.none
   25350:	mov	w0, #0x4                   	// #4
   25354:	str	w0, [sp, #96]
   25358:	str	wzr, [sp, #100]
   2535c:	mov	w0, #0x0                   	// #0
   25360:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   25364:	mov	w1, w0
   25368:	ldr	w0, [sp, #96]
   2536c:	and	w0, w0, #0x7
   25370:	cmp	w1, w0
   25374:	b.lt	253d0 <udev_util_encode_string@@LIBUDEV_183+0x19ba0>  // b.tstop
   25378:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2537c:	add	x1, x0, #0x21b
   25380:	ldr	x0, [sp, #64]
   25384:	ldr	w0, [x0, #16]
   25388:	and	w0, w0, #0xfff
   2538c:	str	w0, [sp, #16]
   25390:	ldr	x0, [sp, #72]
   25394:	str	x0, [sp, #8]
   25398:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2539c:	add	x0, x0, #0x4e8
   253a0:	str	x0, [sp]
   253a4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   253a8:	add	x7, x0, #0x668
   253ac:	mov	w6, #0x40d                 	// #1037
   253b0:	mov	x5, x1
   253b4:	ldr	w4, [sp, #100]
   253b8:	ldr	w3, [sp, #52]
   253bc:	ldr	x2, [sp, #72]
   253c0:	ldr	w1, [sp, #96]
   253c4:	ldr	x0, [sp, #56]
   253c8:	bl	2ec6c <udev_util_encode_string@@LIBUDEV_183+0x2343c>
   253cc:	b	25464 <udev_util_encode_string@@LIBUDEV_183+0x19c34>
   253d0:	ldr	w0, [sp, #100]
   253d4:	cmp	w0, #0x0
   253d8:	b	25464 <udev_util_encode_string@@LIBUDEV_183+0x19c34>
   253dc:	mov	w0, #0x4                   	// #4
   253e0:	str	w0, [sp, #84]
   253e4:	str	wzr, [sp, #88]
   253e8:	str	wzr, [sp, #92]
   253ec:	ldr	w0, [sp, #92]
   253f0:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   253f4:	mov	w1, w0
   253f8:	ldr	w0, [sp, #84]
   253fc:	and	w0, w0, #0x7
   25400:	cmp	w1, w0
   25404:	b.lt	2545c <udev_util_encode_string@@LIBUDEV_183+0x19c2c>  // b.tstop
   25408:	ldr	w0, [sp, #92]
   2540c:	lsl	w1, w0, #10
   25410:	ldr	w0, [sp, #84]
   25414:	orr	w8, w1, w0
   25418:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2541c:	add	x1, x0, #0x21b
   25420:	ldr	x0, [sp, #64]
   25424:	ldr	w0, [x0, #16]
   25428:	and	w0, w0, #0xfff
   2542c:	mov	w7, w0
   25430:	ldr	x6, [sp, #72]
   25434:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25438:	add	x5, x0, #0x4e8
   2543c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25440:	add	x4, x0, #0x668
   25444:	mov	w3, #0x411                 	// #1041
   25448:	mov	x2, x1
   2544c:	ldr	w1, [sp, #88]
   25450:	mov	w0, w8
   25454:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   25458:	b	25464 <udev_util_encode_string@@LIBUDEV_183+0x19c34>
   2545c:	ldr	w0, [sp, #88]
   25460:	cmp	w0, #0x0
   25464:	mov	w0, #0x0                   	// #0
   25468:	mov	w1, w0
   2546c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25470:	ldr	x0, [x0, #4016]
   25474:	ldr	x2, [sp, #232]
   25478:	ldr	x0, [x0]
   2547c:	eor	x0, x2, x0
   25480:	cmp	x0, #0x0
   25484:	b.eq	2548c <udev_util_encode_string@@LIBUDEV_183+0x19c5c>  // b.none
   25488:	bl	5390 <__stack_chk_fail@plt>
   2548c:	mov	w0, w1
   25490:	ldp	x29, x30, [sp, #32]
   25494:	add	sp, sp, #0xf0
   25498:	ret
   2549c:	stp	x29, x30, [sp, #-32]!
   254a0:	mov	x29, sp
   254a4:	str	x0, [sp, #24]
   254a8:	ldr	x0, [sp, #24]
   254ac:	ldr	x0, [x0]
   254b0:	bl	54b0 <free@plt>
   254b4:	nop
   254b8:	ldp	x29, x30, [sp], #32
   254bc:	ret
   254c0:	sub	sp, sp, #0x10
   254c4:	str	x0, [sp, #8]
   254c8:	str	x1, [sp]
   254cc:	ldr	x0, [sp]
   254d0:	cmp	x0, #0x0
   254d4:	cset	w0, ne  // ne = any
   254d8:	and	w0, w0, #0xff
   254dc:	and	x0, x0, #0xff
   254e0:	cmp	x0, #0x0
   254e4:	b.eq	25528 <udev_util_encode_string@@LIBUDEV_183+0x19cf8>  // b.none
   254e8:	mov	x2, #0x0                   	// #0
   254ec:	ldr	x1, [sp, #8]
   254f0:	ldr	x0, [sp]
   254f4:	umulh	x0, x1, x0
   254f8:	cmp	x0, #0x0
   254fc:	b.eq	25504 <udev_util_encode_string@@LIBUDEV_183+0x19cd4>  // b.none
   25500:	mov	x2, #0x1                   	// #1
   25504:	mov	x0, x2
   25508:	cmp	x0, #0x0
   2550c:	cset	w0, ne  // ne = any
   25510:	and	w0, w0, #0xff
   25514:	and	x0, x0, #0xff
   25518:	cmp	x0, #0x0
   2551c:	b.eq	25528 <udev_util_encode_string@@LIBUDEV_183+0x19cf8>  // b.none
   25520:	mov	w0, #0x1                   	// #1
   25524:	b	2552c <udev_util_encode_string@@LIBUDEV_183+0x19cfc>
   25528:	mov	w0, #0x0                   	// #0
   2552c:	and	w0, w0, #0x1
   25530:	and	w0, w0, #0xff
   25534:	add	sp, sp, #0x10
   25538:	ret
   2553c:	stp	x29, x30, [sp, #-32]!
   25540:	mov	x29, sp
   25544:	str	x0, [sp, #24]
   25548:	str	x1, [sp, #16]
   2554c:	ldr	x1, [sp, #16]
   25550:	ldr	x0, [sp, #24]
   25554:	bl	254c0 <udev_util_encode_string@@LIBUDEV_183+0x19c90>
   25558:	and	w0, w0, #0xff
   2555c:	cmp	w0, #0x0
   25560:	b.eq	2556c <udev_util_encode_string@@LIBUDEV_183+0x19d3c>  // b.none
   25564:	mov	x0, #0x0                   	// #0
   25568:	b	25588 <udev_util_encode_string@@LIBUDEV_183+0x19d58>
   2556c:	ldr	x1, [sp, #24]
   25570:	ldr	x0, [sp, #16]
   25574:	mul	x0, x1, x0
   25578:	cmp	x0, #0x0
   2557c:	b.ne	25584 <udev_util_encode_string@@LIBUDEV_183+0x19d54>  // b.any
   25580:	mov	x0, #0x1                   	// #1
   25584:	bl	5220 <malloc@plt>
   25588:	ldp	x29, x30, [sp], #32
   2558c:	ret
   25590:	stp	x29, x30, [sp, #-32]!
   25594:	mov	x29, sp
   25598:	str	x0, [sp, #24]
   2559c:	str	x1, [sp, #16]
   255a0:	ldr	x1, [sp, #16]
   255a4:	ldr	x0, [sp, #24]
   255a8:	bl	3406c <udev_util_encode_string@@LIBUDEV_183+0x2883c>
   255ac:	cmp	w0, #0x0
   255b0:	cset	w0, eq  // eq = none
   255b4:	and	w0, w0, #0xff
   255b8:	ldp	x29, x30, [sp], #32
   255bc:	ret
   255c0:	sub	sp, sp, #0x10
   255c4:	str	x0, [sp, #8]
   255c8:	ldr	x0, [sp, #8]
   255cc:	cmp	x0, #0x0
   255d0:	b.ne	255dc <udev_util_encode_string@@LIBUDEV_183+0x19dac>  // b.any
   255d4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   255d8:	add	x0, x0, #0x688
   255dc:	add	sp, sp, #0x10
   255e0:	ret
   255e4:	sub	sp, sp, #0x10
   255e8:	str	x0, [sp, #8]
   255ec:	ldr	x0, [sp, #8]
   255f0:	cmp	x0, #0x0
   255f4:	b.eq	25608 <udev_util_encode_string@@LIBUDEV_183+0x19dd8>  // b.none
   255f8:	ldr	x0, [sp, #8]
   255fc:	ldrb	w0, [x0]
   25600:	cmp	w0, #0x0
   25604:	b.ne	25610 <udev_util_encode_string@@LIBUDEV_183+0x19de0>  // b.any
   25608:	mov	w0, #0x1                   	// #1
   2560c:	b	25614 <udev_util_encode_string@@LIBUDEV_183+0x19de4>
   25610:	mov	w0, #0x0                   	// #0
   25614:	and	w0, w0, #0x1
   25618:	and	w0, w0, #0xff
   2561c:	add	sp, sp, #0x10
   25620:	ret
   25624:	stp	x29, x30, [sp, #-32]!
   25628:	mov	x29, sp
   2562c:	str	x0, [sp, #24]
   25630:	ldr	x0, [sp, #24]
   25634:	ldr	w0, [x0]
   25638:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2563c:	nop
   25640:	ldp	x29, x30, [sp], #32
   25644:	ret
   25648:	stp	x29, x30, [sp, #-80]!
   2564c:	mov	x29, sp
   25650:	str	w0, [sp, #44]
   25654:	str	x1, [sp, #32]
   25658:	str	x2, [sp, #24]
   2565c:	mov	x0, #0x1001                	// #4097
   25660:	str	x0, [sp, #56]
   25664:	ldr	x0, [sp, #32]
   25668:	cmp	x0, #0x0
   2566c:	cset	w0, eq  // eq = none
   25670:	and	w0, w0, #0xff
   25674:	and	x0, x0, #0xff
   25678:	cmp	x0, #0x0
   2567c:	b.eq	256a8 <udev_util_encode_string@@LIBUDEV_183+0x19e78>  // b.none
   25680:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25684:	add	x1, x0, #0x693
   25688:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2568c:	add	x4, x0, #0xc00
   25690:	mov	w3, #0x8a                  	// #138
   25694:	mov	x2, x1
   25698:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2569c:	add	x1, x0, #0x6b8
   256a0:	mov	w0, #0x0                   	// #0
   256a4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   256a8:	ldr	x0, [sp, #24]
   256ac:	cmp	x0, #0x0
   256b0:	cset	w0, eq  // eq = none
   256b4:	and	w0, w0, #0xff
   256b8:	and	x0, x0, #0xff
   256bc:	cmp	x0, #0x0
   256c0:	b.eq	256ec <udev_util_encode_string@@LIBUDEV_183+0x19ebc>  // b.none
   256c4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   256c8:	add	x1, x0, #0x693
   256cc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   256d0:	add	x4, x0, #0xc00
   256d4:	mov	w3, #0x8b                  	// #139
   256d8:	mov	x2, x1
   256dc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   256e0:	add	x1, x0, #0x6c0
   256e4:	mov	w0, #0x0                   	// #0
   256e8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   256ec:	ldr	x1, [sp, #56]
   256f0:	mov	x0, #0x1                   	// #1
   256f4:	bl	2553c <udev_util_encode_string@@LIBUDEV_183+0x19d0c>
   256f8:	str	x0, [sp, #64]
   256fc:	ldr	x0, [sp, #64]
   25700:	cmp	x0, #0x0
   25704:	b.ne	25710 <udev_util_encode_string@@LIBUDEV_183+0x19ee0>  // b.any
   25708:	mov	w0, #0xfffffff4            	// #-12
   2570c:	b	257ac <udev_util_encode_string@@LIBUDEV_183+0x19f7c>
   25710:	ldr	x0, [sp, #56]
   25714:	sub	x0, x0, #0x1
   25718:	mov	x3, x0
   2571c:	ldr	x2, [sp, #64]
   25720:	ldr	x1, [sp, #32]
   25724:	ldr	w0, [sp, #44]
   25728:	bl	5890 <readlinkat@plt>
   2572c:	str	x0, [sp, #72]
   25730:	ldr	x0, [sp, #72]
   25734:	cmp	x0, #0x0
   25738:	b.ge	2575c <udev_util_encode_string@@LIBUDEV_183+0x19f2c>  // b.tcont
   2573c:	bl	57d0 <__errno_location@plt>
   25740:	ldr	w0, [x0]
   25744:	neg	w0, w0
   25748:	str	w0, [sp, #52]
   2574c:	ldr	x0, [sp, #64]
   25750:	bl	54b0 <free@plt>
   25754:	ldr	w0, [sp, #52]
   25758:	b	257ac <udev_util_encode_string@@LIBUDEV_183+0x19f7c>
   2575c:	ldr	x0, [sp, #56]
   25760:	sub	x1, x0, #0x1
   25764:	ldr	x0, [sp, #72]
   25768:	cmp	x1, x0
   2576c:	b.ls	25794 <udev_util_encode_string@@LIBUDEV_183+0x19f64>  // b.plast
   25770:	ldr	x0, [sp, #72]
   25774:	ldr	x1, [sp, #64]
   25778:	add	x0, x1, x0
   2577c:	strb	wzr, [x0]
   25780:	ldr	x0, [sp, #24]
   25784:	ldr	x1, [sp, #64]
   25788:	str	x1, [x0]
   2578c:	mov	w0, #0x0                   	// #0
   25790:	b	257ac <udev_util_encode_string@@LIBUDEV_183+0x19f7c>
   25794:	ldr	x0, [sp, #64]
   25798:	bl	54b0 <free@plt>
   2579c:	ldr	x0, [sp, #56]
   257a0:	lsl	x0, x0, #1
   257a4:	str	x0, [sp, #56]
   257a8:	b	256ec <udev_util_encode_string@@LIBUDEV_183+0x19ebc>
   257ac:	ldp	x29, x30, [sp], #80
   257b0:	ret
   257b4:	stp	x29, x30, [sp, #-32]!
   257b8:	mov	x29, sp
   257bc:	str	x0, [sp, #24]
   257c0:	str	x1, [sp, #16]
   257c4:	ldr	x2, [sp, #16]
   257c8:	ldr	x1, [sp, #24]
   257cc:	mov	w0, #0xffffff9c            	// #-100
   257d0:	bl	25648 <udev_util_encode_string@@LIBUDEV_183+0x19e18>
   257d4:	ldp	x29, x30, [sp], #32
   257d8:	ret
   257dc:	stp	x29, x30, [sp, #-80]!
   257e0:	mov	x29, sp
   257e4:	str	x19, [sp, #16]
   257e8:	str	x0, [sp, #40]
   257ec:	str	x1, [sp, #32]
   257f0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   257f4:	ldr	x0, [x0, #4016]
   257f8:	ldr	x1, [x0]
   257fc:	str	x1, [sp, #72]
   25800:	mov	x1, #0x0                   	// #0
   25804:	str	xzr, [sp, #56]
   25808:	add	x0, sp, #0x38
   2580c:	mov	x1, x0
   25810:	ldr	x0, [sp, #40]
   25814:	bl	257b4 <udev_util_encode_string@@LIBUDEV_183+0x19f84>
   25818:	str	w0, [sp, #52]
   2581c:	ldr	w0, [sp, #52]
   25820:	cmp	w0, #0x0
   25824:	b.ge	25830 <udev_util_encode_string@@LIBUDEV_183+0x1a000>  // b.tcont
   25828:	ldr	w19, [sp, #52]
   2582c:	b	25880 <udev_util_encode_string@@LIBUDEV_183+0x1a050>
   25830:	ldr	x0, [sp, #56]
   25834:	bl	5450 <basename@plt>
   25838:	str	x0, [sp, #64]
   2583c:	ldr	x0, [sp, #64]
   25840:	cmp	x0, #0x0
   25844:	b.ne	25850 <udev_util_encode_string@@LIBUDEV_183+0x1a020>  // b.any
   25848:	mov	w19, #0xfffffffe            	// #-2
   2584c:	b	25880 <udev_util_encode_string@@LIBUDEV_183+0x1a050>
   25850:	ldr	x0, [sp, #64]
   25854:	bl	5370 <strdup@plt>
   25858:	str	x0, [sp, #64]
   2585c:	ldr	x0, [sp, #64]
   25860:	cmp	x0, #0x0
   25864:	b.ne	25870 <udev_util_encode_string@@LIBUDEV_183+0x1a040>  // b.any
   25868:	mov	w19, #0xfffffff4            	// #-12
   2586c:	b	25880 <udev_util_encode_string@@LIBUDEV_183+0x1a050>
   25870:	ldr	x0, [sp, #32]
   25874:	ldr	x1, [sp, #64]
   25878:	str	x1, [x0]
   2587c:	mov	w19, #0x0                   	// #0
   25880:	add	x0, sp, #0x38
   25884:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   25888:	mov	w1, w19
   2588c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25890:	ldr	x0, [x0, #4016]
   25894:	ldr	x2, [sp, #72]
   25898:	ldr	x0, [x0]
   2589c:	eor	x0, x2, x0
   258a0:	cmp	x0, #0x0
   258a4:	b.eq	258ac <udev_util_encode_string@@LIBUDEV_183+0x1a07c>  // b.none
   258a8:	bl	5390 <__stack_chk_fail@plt>
   258ac:	mov	w0, w1
   258b0:	ldr	x19, [sp, #16]
   258b4:	ldp	x29, x30, [sp], #80
   258b8:	ret
   258bc:	stp	x29, x30, [sp, #-48]!
   258c0:	mov	x29, sp
   258c4:	str	w0, [sp, #28]
   258c8:	str	w1, [sp, #24]
   258cc:	mov	w0, #0x1ff                 	// #511
   258d0:	bl	57b0 <umask@plt>
   258d4:	str	w0, [sp, #40]
   258d8:	ldr	w0, [sp, #40]
   258dc:	mvn	w1, w0
   258e0:	ldr	w0, [sp, #24]
   258e4:	and	w0, w1, w0
   258e8:	mov	w1, w0
   258ec:	ldr	w0, [sp, #28]
   258f0:	bl	52d0 <fchmod@plt>
   258f4:	cmp	w0, #0x0
   258f8:	b.ge	2590c <udev_util_encode_string@@LIBUDEV_183+0x1a0dc>  // b.tcont
   258fc:	bl	57d0 <__errno_location@plt>
   25900:	ldr	w0, [x0]
   25904:	neg	w0, w0
   25908:	b	25910 <udev_util_encode_string@@LIBUDEV_183+0x1a0e0>
   2590c:	mov	w0, #0x0                   	// #0
   25910:	str	w0, [sp, #44]
   25914:	ldr	w0, [sp, #40]
   25918:	bl	57b0 <umask@plt>
   2591c:	ldr	w0, [sp, #44]
   25920:	ldp	x29, x30, [sp], #48
   25924:	ret
   25928:	sub	sp, sp, #0x10
   2592c:	str	x0, [sp, #8]
   25930:	str	x1, [sp]
   25934:	ldr	x0, [sp, #8]
   25938:	ldr	w0, [x0, #24]
   2593c:	cmp	w0, #0x0
   25940:	b.ne	2594c <udev_util_encode_string@@LIBUDEV_183+0x1a11c>  // b.any
   25944:	mov	w0, #0x0                   	// #0
   25948:	b	25968 <udev_util_encode_string@@LIBUDEV_183+0x1a138>
   2594c:	ldr	x0, [sp, #8]
   25950:	ldr	w1, [x0, #24]
   25954:	ldr	x0, [sp]
   25958:	ldr	w0, [x0, #24]
   2595c:	cmp	w1, w0
   25960:	cset	w0, ne  // ne = any
   25964:	and	w0, w0, #0xff
   25968:	add	sp, sp, #0x10
   2596c:	ret
   25970:	sub	sp, sp, #0x90
   25974:	stp	x29, x30, [sp, #16]
   25978:	add	x29, sp, #0x10
   2597c:	stp	x19, x20, [sp, #32]
   25980:	str	x21, [sp, #48]
   25984:	str	w0, [sp, #92]
   25988:	str	w1, [sp, #88]
   2598c:	str	x2, [sp, #80]
   25990:	str	w3, [sp, #76]
   25994:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25998:	ldr	x0, [x0, #4016]
   2599c:	ldr	x1, [x0]
   259a0:	str	x1, [sp, #136]
   259a4:	mov	x1, #0x0                   	// #0
   259a8:	str	xzr, [sp, #120]
   259ac:	str	xzr, [sp, #128]
   259b0:	ldr	w0, [sp, #76]
   259b4:	and	w0, w0, #0x80
   259b8:	cmp	w0, #0x0
   259bc:	b.ne	259c8 <udev_util_encode_string@@LIBUDEV_183+0x1a198>  // b.any
   259c0:	mov	w19, #0xffffffbd            	// #-67
   259c4:	b	25aa0 <udev_util_encode_string@@LIBUDEV_183+0x1a270>
   259c8:	add	x0, sp, #0x78
   259cc:	mov	x1, x0
   259d0:	ldr	w0, [sp, #92]
   259d4:	bl	2312c <udev_util_encode_string@@LIBUDEV_183+0x178fc>
   259d8:	add	x0, sp, #0x80
   259dc:	mov	x1, x0
   259e0:	ldr	w0, [sp, #88]
   259e4:	bl	2312c <udev_util_encode_string@@LIBUDEV_183+0x178fc>
   259e8:	mov	w0, #0x4                   	// #4
   259ec:	str	w0, [sp, #108]
   259f0:	mov	w0, #0x43                  	// #67
   259f4:	movk	w0, #0x4000, lsl #16
   259f8:	str	w0, [sp, #112]
   259fc:	str	wzr, [sp, #116]
   25a00:	ldr	w0, [sp, #116]
   25a04:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   25a08:	mov	w1, w0
   25a0c:	ldr	w0, [sp, #108]
   25a10:	and	w0, w0, #0x7
   25a14:	cmp	w1, w0
   25a18:	b.lt	25a88 <udev_util_encode_string@@LIBUDEV_183+0x1a258>  // b.tstop
   25a1c:	ldr	w0, [sp, #116]
   25a20:	lsl	w1, w0, #10
   25a24:	ldr	w0, [sp, #108]
   25a28:	orr	w19, w1, w0
   25a2c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25a30:	add	x20, x0, #0x693
   25a34:	ldr	x21, [sp, #120]
   25a38:	mov	w0, #0x7                   	// #7
   25a3c:	bl	2b4b8 <udev_util_encode_string@@LIBUDEV_183+0x1fc88>
   25a40:	mov	x2, x0
   25a44:	ldr	x0, [sp, #128]
   25a48:	ldr	x1, [sp, #80]
   25a4c:	str	x1, [sp, #8]
   25a50:	str	x0, [sp]
   25a54:	mov	x7, x2
   25a58:	mov	x6, x21
   25a5c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25a60:	add	x5, x0, #0x9d0
   25a64:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25a68:	add	x4, x0, #0xc18
   25a6c:	mov	w3, #0x2b5                 	// #693
   25a70:	mov	x2, x20
   25a74:	ldr	w1, [sp, #112]
   25a78:	mov	w0, w19
   25a7c:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   25a80:	mov	w19, w0
   25a84:	b	25a9c <udev_util_encode_string@@LIBUDEV_183+0x1a26c>
   25a88:	ldr	w0, [sp, #112]
   25a8c:	cmp	w0, #0x0
   25a90:	cneg	w0, w0, lt  // lt = tstop
   25a94:	and	w0, w0, #0xff
   25a98:	neg	w19, w0
   25a9c:	nop
   25aa0:	add	x0, sp, #0x80
   25aa4:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   25aa8:	add	x0, sp, #0x78
   25aac:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   25ab0:	mov	w1, w19
   25ab4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25ab8:	ldr	x0, [x0, #4016]
   25abc:	ldr	x2, [sp, #136]
   25ac0:	ldr	x0, [x0]
   25ac4:	eor	x0, x2, x0
   25ac8:	cmp	x0, #0x0
   25acc:	b.eq	25ad4 <udev_util_encode_string@@LIBUDEV_183+0x1a2a4>  // b.none
   25ad0:	bl	5390 <__stack_chk_fail@plt>
   25ad4:	mov	w0, w1
   25ad8:	ldp	x19, x20, [sp, #32]
   25adc:	ldr	x21, [sp, #48]
   25ae0:	ldp	x29, x30, [sp, #16]
   25ae4:	add	sp, sp, #0x90
   25ae8:	ret
   25aec:	stp	x29, x30, [sp, #-80]!
   25af0:	mov	x29, sp
   25af4:	str	x19, [sp, #16]
   25af8:	str	w0, [sp, #44]
   25afc:	str	x1, [sp, #32]
   25b00:	str	w2, [sp, #40]
   25b04:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25b08:	ldr	x0, [x0, #4016]
   25b0c:	ldr	x1, [x0]
   25b10:	str	x1, [sp, #72]
   25b14:	mov	x1, #0x0                   	// #0
   25b18:	str	xzr, [sp, #64]
   25b1c:	ldr	w0, [sp, #40]
   25b20:	and	w0, w0, #0x80
   25b24:	cmp	w0, #0x0
   25b28:	b.ne	25b34 <udev_util_encode_string@@LIBUDEV_183+0x1a304>  // b.any
   25b2c:	mov	w19, #0xffffffbe            	// #-66
   25b30:	b	25be0 <udev_util_encode_string@@LIBUDEV_183+0x1a3b0>
   25b34:	add	x0, sp, #0x40
   25b38:	mov	x1, x0
   25b3c:	ldr	w0, [sp, #44]
   25b40:	bl	2312c <udev_util_encode_string@@LIBUDEV_183+0x178fc>
   25b44:	mov	w0, #0x4                   	// #4
   25b48:	str	w0, [sp, #52]
   25b4c:	mov	w0, #0x42                  	// #66
   25b50:	movk	w0, #0x4000, lsl #16
   25b54:	str	w0, [sp, #56]
   25b58:	str	wzr, [sp, #60]
   25b5c:	ldr	w0, [sp, #60]
   25b60:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   25b64:	mov	w1, w0
   25b68:	ldr	w0, [sp, #52]
   25b6c:	and	w0, w0, #0x7
   25b70:	cmp	w1, w0
   25b74:	b.lt	25bc8 <udev_util_encode_string@@LIBUDEV_183+0x1a398>  // b.tstop
   25b78:	ldr	w0, [sp, #60]
   25b7c:	lsl	w1, w0, #10
   25b80:	ldr	w0, [sp, #52]
   25b84:	orr	w8, w1, w0
   25b88:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25b8c:	add	x1, x0, #0x693
   25b90:	ldr	x0, [sp, #64]
   25b94:	ldr	x7, [sp, #32]
   25b98:	mov	x6, x0
   25b9c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25ba0:	add	x5, x0, #0xa18
   25ba4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25ba8:	add	x4, x0, #0xc30
   25bac:	mov	w3, #0x2c2                 	// #706
   25bb0:	mov	x2, x1
   25bb4:	ldr	w1, [sp, #56]
   25bb8:	mov	w0, w8
   25bbc:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   25bc0:	mov	w19, w0
   25bc4:	b	25bdc <udev_util_encode_string@@LIBUDEV_183+0x1a3ac>
   25bc8:	ldr	w0, [sp, #56]
   25bcc:	cmp	w0, #0x0
   25bd0:	cneg	w0, w0, lt  // lt = tstop
   25bd4:	and	w0, w0, #0xff
   25bd8:	neg	w19, w0
   25bdc:	nop
   25be0:	add	x0, sp, #0x40
   25be4:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   25be8:	mov	w1, w19
   25bec:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25bf0:	ldr	x0, [x0, #4016]
   25bf4:	ldr	x2, [sp, #72]
   25bf8:	ldr	x0, [x0]
   25bfc:	eor	x0, x2, x0
   25c00:	cmp	x0, #0x0
   25c04:	b.eq	25c0c <udev_util_encode_string@@LIBUDEV_183+0x1a3dc>  // b.none
   25c08:	bl	5390 <__stack_chk_fail@plt>
   25c0c:	mov	w0, w1
   25c10:	ldr	x19, [sp, #16]
   25c14:	ldp	x29, x30, [sp], #80
   25c18:	ret
   25c1c:	sub	sp, sp, #0x220
   25c20:	stp	x29, x30, [sp]
   25c24:	mov	x29, sp
   25c28:	stp	x19, x20, [sp, #16]
   25c2c:	str	x0, [x29, #72]
   25c30:	str	x1, [x29, #64]
   25c34:	str	w2, [x29, #60]
   25c38:	str	x3, [x29, #48]
   25c3c:	str	x4, [x29, #40]
   25c40:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   25c44:	ldr	x0, [x0, #4016]
   25c48:	ldr	x1, [x0]
   25c4c:	str	x1, [x29, #536]
   25c50:	mov	x1, #0x0                   	// #0
   25c54:	str	xzr, [x29, #128]
   25c58:	str	xzr, [x29, #136]
   25c5c:	str	xzr, [x29, #144]
   25c60:	mov	w0, #0xffffffff            	// #-1
   25c64:	str	w0, [x29, #96]
   25c68:	mov	w0, #0x20                  	// #32
   25c6c:	str	w0, [x29, #108]
   25c70:	mov	w0, #0x1                   	// #1
   25c74:	strb	w0, [x29, #95]
   25c78:	ldr	x0, [x29, #72]
   25c7c:	cmp	x0, #0x0
   25c80:	cset	w0, eq  // eq = none
   25c84:	and	w0, w0, #0xff
   25c88:	and	x0, x0, #0xff
   25c8c:	cmp	x0, #0x0
   25c90:	b.eq	25cbc <udev_util_encode_string@@LIBUDEV_183+0x1a48c>  // b.none
   25c94:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25c98:	add	x1, x0, #0x693
   25c9c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25ca0:	add	x4, x0, #0xc48
   25ca4:	mov	w3, #0x2d0                 	// #720
   25ca8:	mov	x2, x1
   25cac:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25cb0:	add	x1, x0, #0x6a8
   25cb4:	mov	w0, #0x0                   	// #0
   25cb8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   25cbc:	ldr	w0, [x29, #60]
   25cc0:	and	w0, w0, #0x2
   25cc4:	cmp	w0, #0x0
   25cc8:	b.eq	25ce0 <udev_util_encode_string@@LIBUDEV_183+0x1a4b0>  // b.none
   25ccc:	ldr	x0, [x29, #40]
   25cd0:	cmp	x0, #0x0
   25cd4:	b.eq	25ce0 <udev_util_encode_string@@LIBUDEV_183+0x1a4b0>  // b.none
   25cd8:	mov	w19, #0xffffffea            	// #-22
   25cdc:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25ce0:	ldr	w0, [x29, #60]
   25ce4:	and	w0, w0, #0x20
   25ce8:	cmp	w0, #0x0
   25cec:	b.eq	25d04 <udev_util_encode_string@@LIBUDEV_183+0x1a4d4>  // b.none
   25cf0:	ldr	x0, [x29, #40]
   25cf4:	cmp	x0, #0x0
   25cf8:	b.eq	25d04 <udev_util_encode_string@@LIBUDEV_183+0x1a4d4>  // b.none
   25cfc:	mov	w19, #0xffffffea            	// #-22
   25d00:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25d04:	ldr	x0, [x29, #72]
   25d08:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   25d0c:	and	w0, w0, #0xff
   25d10:	cmp	w0, #0x0
   25d14:	b.eq	25d20 <udev_util_encode_string@@LIBUDEV_183+0x1a4f0>  // b.none
   25d18:	mov	w19, #0xffffffea            	// #-22
   25d1c:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25d20:	ldr	x0, [x29, #64]
   25d24:	bl	31c04 <udev_util_encode_string@@LIBUDEV_183+0x263d4>
   25d28:	and	w0, w0, #0xff
   25d2c:	cmp	w0, #0x0
   25d30:	b.eq	25d38 <udev_util_encode_string@@LIBUDEV_183+0x1a508>  // b.none
   25d34:	str	xzr, [x29, #64]
   25d38:	ldr	x0, [x29, #64]
   25d3c:	cmp	x0, #0x0
   25d40:	b.ne	25dc4 <udev_util_encode_string@@LIBUDEV_183+0x1a594>  // b.any
   25d44:	ldr	x0, [x29, #48]
   25d48:	cmp	x0, #0x0
   25d4c:	b.ne	25dc4 <udev_util_encode_string@@LIBUDEV_183+0x1a594>  // b.any
   25d50:	ldr	w1, [x29, #60]
   25d54:	mov	w0, #0x2e                  	// #46
   25d58:	and	w0, w1, w0
   25d5c:	cmp	w0, #0x0
   25d60:	b.ne	25dc4 <udev_util_encode_string@@LIBUDEV_183+0x1a594>  // b.any
   25d64:	ldr	x0, [x29, #40]
   25d68:	cmp	x0, #0x0
   25d6c:	b.eq	25dc4 <udev_util_encode_string@@LIBUDEV_183+0x1a594>  // b.none
   25d70:	ldr	w0, [x29, #60]
   25d74:	lsl	w0, w0, #9
   25d78:	and	w1, w0, #0x8000
   25d7c:	mov	w0, #0x280000              	// #2621440
   25d80:	orr	w0, w1, w0
   25d84:	mov	w1, w0
   25d88:	ldr	x0, [x29, #72]
   25d8c:	bl	56c0 <open64@plt>
   25d90:	str	w0, [x29, #112]
   25d94:	ldr	w0, [x29, #112]
   25d98:	cmp	w0, #0x0
   25d9c:	b.ge	25db0 <udev_util_encode_string@@LIBUDEV_183+0x1a580>  // b.tcont
   25da0:	bl	57d0 <__errno_location@plt>
   25da4:	ldr	w0, [x0]
   25da8:	neg	w19, w0
   25dac:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25db0:	ldr	x0, [x29, #40]
   25db4:	ldr	w1, [x29, #112]
   25db8:	str	w1, [x0]
   25dbc:	mov	w19, #0x0                   	// #0
   25dc0:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25dc4:	ldr	x0, [x29, #64]
   25dc8:	cmp	x0, #0x0
   25dcc:	b.eq	25fec <udev_util_encode_string@@LIBUDEV_183+0x1a7bc>  // b.none
   25dd0:	add	x0, x29, #0x90
   25dd4:	mov	x1, x0
   25dd8:	ldr	x0, [x29, #64]
   25ddc:	bl	30ccc <udev_util_encode_string@@LIBUDEV_183+0x2549c>
   25de0:	str	w0, [x29, #112]
   25de4:	ldr	w0, [x29, #112]
   25de8:	cmp	w0, #0x0
   25dec:	b.ge	25df8 <udev_util_encode_string@@LIBUDEV_183+0x1a5c8>  // b.tcont
   25df0:	ldr	w19, [x29, #112]
   25df4:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25df8:	ldr	w0, [x29, #60]
   25dfc:	and	w0, w0, #0x1
   25e00:	cmp	w0, #0x0
   25e04:	b.eq	25fec <udev_util_encode_string@@LIBUDEV_183+0x1a7bc>  // b.none
   25e08:	ldr	x0, [x29, #72]
   25e0c:	bl	30c48 <udev_util_encode_string@@LIBUDEV_183+0x25418>
   25e10:	and	w0, w0, #0xff
   25e14:	eor	w0, w0, #0x1
   25e18:	and	w0, w0, #0xff
   25e1c:	cmp	w0, #0x0
   25e20:	b.eq	25e2c <udev_util_encode_string@@LIBUDEV_183+0x1a5fc>  // b.none
   25e24:	mov	w19, #0xffffffea            	// #-22
   25e28:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   25e2c:	ldr	x0, [x29, #72]
   25e30:	str	x0, [x29, #176]
   25e34:	ldr	x0, [x29, #144]
   25e38:	str	x0, [x29, #208]
   25e3c:	b	25e4c <udev_util_encode_string@@LIBUDEV_183+0x1a61c>
   25e40:	ldr	x0, [x29, #176]
   25e44:	add	x0, x0, #0x1
   25e48:	str	x0, [x29, #176]
   25e4c:	ldr	x0, [x29, #176]
   25e50:	ldrb	w0, [x0]
   25e54:	cmp	w0, #0x2f
   25e58:	b.ne	25e70 <udev_util_encode_string@@LIBUDEV_183+0x1a640>  // b.any
   25e5c:	ldr	x0, [x29, #176]
   25e60:	add	x0, x0, #0x1
   25e64:	ldrb	w0, [x0]
   25e68:	cmp	w0, #0x2f
   25e6c:	b.eq	25e40 <udev_util_encode_string@@LIBUDEV_183+0x1a610>  // b.none
   25e70:	ldr	x0, [x29, #208]
   25e74:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   25e78:	and	w0, w0, #0xff
   25e7c:	cmp	w0, #0x0
   25e80:	b.eq	25e90 <udev_util_encode_string@@LIBUDEV_183+0x1a660>  // b.none
   25e84:	ldr	x0, [x29, #176]
   25e88:	str	x0, [x29, #184]
   25e8c:	b	25fe4 <udev_util_encode_string@@LIBUDEV_183+0x1a7b4>
   25e90:	ldr	x0, [x29, #208]
   25e94:	bl	5040 <strlen@plt>
   25e98:	mov	x20, x0
   25e9c:	ldr	x0, [x29, #176]
   25ea0:	bl	5040 <strlen@plt>
   25ea4:	add	x0, x20, x0
   25ea8:	add	x0, x0, #0x2
   25eac:	str	x0, [x29, #216]
   25eb0:	ldr	x0, [x29, #216]
   25eb4:	str	x0, [x29, #224]
   25eb8:	ldr	x1, [x29, #224]
   25ebc:	mov	x0, #0x1                   	// #1
   25ec0:	bl	254c0 <udev_util_encode_string@@LIBUDEV_183+0x19c90>
   25ec4:	and	w0, w0, #0xff
   25ec8:	and	x0, x0, #0xff
   25ecc:	cmp	x0, #0x0
   25ed0:	b.eq	25efc <udev_util_encode_string@@LIBUDEV_183+0x1a6cc>  // b.none
   25ed4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25ed8:	add	x1, x0, #0x693
   25edc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25ee0:	add	x4, x0, #0xc48
   25ee4:	mov	w3, #0x325                 	// #805
   25ee8:	mov	x2, x1
   25eec:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25ef0:	add	x1, x0, #0xa58
   25ef4:	mov	w0, #0x0                   	// #0
   25ef8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   25efc:	ldr	x0, [x29, #224]
   25f00:	cmp	x0, #0x400, lsl #12
   25f04:	cset	w0, hi  // hi = pmore
   25f08:	and	w0, w0, #0xff
   25f0c:	and	x0, x0, #0xff
   25f10:	cmp	x0, #0x0
   25f14:	b.eq	25f40 <udev_util_encode_string@@LIBUDEV_183+0x1a710>  // b.none
   25f18:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25f1c:	add	x1, x0, #0x693
   25f20:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25f24:	add	x4, x0, #0xc48
   25f28:	mov	w3, #0x325                 	// #805
   25f2c:	mov	x2, x1
   25f30:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   25f34:	add	x1, x0, #0xa88
   25f38:	mov	w0, #0x0                   	// #0
   25f3c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   25f40:	ldr	x0, [x29, #224]
   25f44:	add	x0, x0, #0xf
   25f48:	lsr	x0, x0, #4
   25f4c:	lsl	x0, x0, #4
   25f50:	sub	sp, sp, x0
   25f54:	mov	x0, sp
   25f58:	add	x0, x0, #0xf
   25f5c:	lsr	x0, x0, #4
   25f60:	lsl	x0, x0, #4
   25f64:	str	x0, [x29, #232]
   25f68:	ldr	x1, [x29, #208]
   25f6c:	ldr	x0, [x29, #232]
   25f70:	bl	51b0 <stpcpy@plt>
   25f74:	str	x0, [x29, #192]
   25f78:	b	25f88 <udev_util_encode_string@@LIBUDEV_183+0x1a758>
   25f7c:	ldr	x0, [x29, #192]
   25f80:	sub	x0, x0, #0x1
   25f84:	str	x0, [x29, #192]
   25f88:	ldr	x1, [x29, #192]
   25f8c:	ldr	x0, [x29, #232]
   25f90:	cmp	x1, x0
   25f94:	b.ls	25fac <udev_util_encode_string@@LIBUDEV_183+0x1a77c>  // b.plast
   25f98:	ldr	x0, [x29, #192]
   25f9c:	sub	x0, x0, #0x1
   25fa0:	ldrb	w0, [x0]
   25fa4:	cmp	w0, #0x2f
   25fa8:	b.eq	25f7c <udev_util_encode_string@@LIBUDEV_183+0x1a74c>  // b.none
   25fac:	ldr	x0, [x29, #176]
   25fb0:	ldrb	w0, [x0]
   25fb4:	cmp	w0, #0x2f
   25fb8:	b.eq	25fd0 <udev_util_encode_string@@LIBUDEV_183+0x1a7a0>  // b.none
   25fbc:	ldr	x0, [x29, #192]
   25fc0:	add	x1, x0, #0x1
   25fc4:	str	x1, [x29, #192]
   25fc8:	mov	w1, #0x2f                  	// #47
   25fcc:	strb	w1, [x0]
   25fd0:	ldr	x1, [x29, #176]
   25fd4:	ldr	x0, [x29, #192]
   25fd8:	bl	5630 <strcpy@plt>
   25fdc:	ldr	x0, [x29, #232]
   25fe0:	str	x0, [x29, #184]
   25fe4:	ldr	x0, [x29, #184]
   25fe8:	str	x0, [x29, #72]
   25fec:	add	x0, x29, #0x80
   25ff0:	mov	x1, x0
   25ff4:	ldr	x0, [x29, #72]
   25ff8:	bl	30ccc <udev_util_encode_string@@LIBUDEV_183+0x2549c>
   25ffc:	str	w0, [x29, #112]
   26000:	ldr	w0, [x29, #112]
   26004:	cmp	w0, #0x0
   26008:	b.ge	26014 <udev_util_encode_string@@LIBUDEV_183+0x1a7e4>  // b.tcont
   2600c:	ldr	w19, [x29, #112]
   26010:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   26014:	mov	w1, #0x8000                	// #32768
   26018:	movk	w1, #0x28, lsl #16
   2601c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26020:	add	x0, x0, #0xaa8
   26024:	bl	56c0 <open64@plt>
   26028:	str	w0, [x29, #96]
   2602c:	ldr	w0, [x29, #96]
   26030:	cmp	w0, #0x0
   26034:	b.ge	26048 <udev_util_encode_string@@LIBUDEV_183+0x1a818>  // b.tcont
   26038:	bl	57d0 <__errno_location@plt>
   2603c:	ldr	w0, [x0]
   26040:	neg	w19, w0
   26044:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   26048:	ldr	w0, [x29, #60]
   2604c:	and	w0, w0, #0x8
   26050:	cmp	w0, #0x0
   26054:	b.eq	2607c <udev_util_encode_string@@LIBUDEV_183+0x1a84c>  // b.none
   26058:	ldr	w0, [x29, #96]
   2605c:	add	x1, x29, #0x118
   26060:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   26064:	cmp	w0, #0x0
   26068:	b.ge	2607c <udev_util_encode_string@@LIBUDEV_183+0x1a84c>  // b.tcont
   2606c:	bl	57d0 <__errno_location@plt>
   26070:	ldr	w0, [x0]
   26074:	neg	w19, w0
   26078:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   2607c:	ldr	x0, [x29, #128]
   26080:	str	x0, [x29, #168]
   26084:	str	xzr, [x29, #152]
   26088:	mov	w0, #0xffffffff            	// #-1
   2608c:	str	w0, [x29, #100]
   26090:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26094:	add	x1, x0, #0xaa8
   26098:	ldr	x0, [x29, #168]
   2609c:	bl	5560 <strspn@plt>
   260a0:	str	x0, [x29, #240]
   260a4:	ldr	x1, [x29, #168]
   260a8:	ldr	x0, [x29, #240]
   260ac:	add	x2, x1, x0
   260b0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   260b4:	add	x1, x0, #0xaa8
   260b8:	mov	x0, x2
   260bc:	bl	57c0 <strcspn@plt>
   260c0:	mov	x1, x0
   260c4:	ldr	x0, [x29, #240]
   260c8:	add	x0, x0, x1
   260cc:	str	x0, [x29, #248]
   260d0:	ldr	x1, [x29, #248]
   260d4:	ldr	x0, [x29, #168]
   260d8:	bl	5550 <strndup@plt>
   260dc:	str	x0, [x29, #152]
   260e0:	ldr	x0, [x29, #152]
   260e4:	cmp	x0, #0x0
   260e8:	b.ne	260f8 <udev_util_encode_string@@LIBUDEV_183+0x1a8c8>  // b.any
   260ec:	mov	w19, #0xfffffff4            	// #-12
   260f0:	mov	w20, #0x0                   	// #0
   260f4:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   260f8:	ldr	x1, [x29, #168]
   260fc:	ldr	x0, [x29, #248]
   26100:	add	x0, x1, x0
   26104:	str	x0, [x29, #168]
   26108:	ldr	x0, [x29, #152]
   2610c:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   26110:	and	w0, w0, #0xff
   26114:	cmp	w0, #0x0
   26118:	b.eq	26124 <udev_util_encode_string@@LIBUDEV_183+0x1a8f4>  // b.none
   2611c:	mov	w20, #0x1                   	// #1
   26120:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26124:	ldr	x2, [x29, #152]
   26128:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2612c:	add	x1, x0, #0xaa8
   26130:	mov	x0, x2
   26134:	bl	31558 <udev_util_encode_string@@LIBUDEV_183+0x25d28>
   26138:	and	w0, w0, #0xff
   2613c:	cmp	w0, #0x0
   26140:	b.eq	2618c <udev_util_encode_string@@LIBUDEV_183+0x1a95c>  // b.none
   26144:	ldr	w0, [x29, #60]
   26148:	and	w0, w0, #0x10
   2614c:	cmp	w0, #0x0
   26150:	b.eq	26184 <udev_util_encode_string@@LIBUDEV_183+0x1a954>  // b.none
   26154:	add	x4, x29, #0x88
   26158:	mov	x3, #0x0                   	// #0
   2615c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26160:	add	x2, x0, #0xaa8
   26164:	mov	x1, #0x0                   	// #0
   26168:	mov	x0, x4
   2616c:	bl	348c8 <udev_util_encode_string@@LIBUDEV_183+0x29098>
   26170:	cmp	x0, #0x0
   26174:	b.ne	26184 <udev_util_encode_string@@LIBUDEV_183+0x1a954>  // b.any
   26178:	mov	w19, #0xfffffff4            	// #-12
   2617c:	mov	w20, #0x0                   	// #0
   26180:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26184:	mov	w20, #0x1                   	// #1
   26188:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   2618c:	ldr	x2, [x29, #152]
   26190:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26194:	add	x1, x0, #0xab0
   26198:	mov	x0, x2
   2619c:	bl	31558 <udev_util_encode_string@@LIBUDEV_183+0x25d28>
   261a0:	and	w0, w0, #0xff
   261a4:	cmp	w0, #0x0
   261a8:	b.eq	261b4 <udev_util_encode_string@@LIBUDEV_183+0x1a984>  // b.none
   261ac:	mov	w20, #0x2                   	// #2
   261b0:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   261b4:	ldr	x2, [x29, #152]
   261b8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   261bc:	add	x1, x0, #0xab8
   261c0:	mov	x0, x2
   261c4:	bl	31558 <udev_util_encode_string@@LIBUDEV_183+0x25d28>
   261c8:	and	w0, w0, #0xff
   261cc:	cmp	w0, #0x0
   261d0:	b.eq	2640c <udev_util_encode_string@@LIBUDEV_183+0x1abdc>  // b.none
   261d4:	str	xzr, [x29, #160]
   261d8:	mov	w0, #0xffffffff            	// #-1
   261dc:	str	w0, [x29, #104]
   261e0:	ldr	x0, [x29, #136]
   261e4:	bl	31c04 <udev_util_encode_string@@LIBUDEV_183+0x263d4>
   261e8:	and	w0, w0, #0xff
   261ec:	cmp	w0, #0x0
   261f0:	b.eq	261fc <udev_util_encode_string@@LIBUDEV_183+0x1a9cc>  // b.none
   261f4:	mov	w20, #0x0                   	// #0
   261f8:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   261fc:	ldr	x0, [x29, #136]
   26200:	bl	31888 <udev_util_encode_string@@LIBUDEV_183+0x26058>
   26204:	str	x0, [x29, #160]
   26208:	ldr	x0, [x29, #160]
   2620c:	cmp	x0, #0x0
   26210:	b.ne	26220 <udev_util_encode_string@@LIBUDEV_183+0x1a9f0>  // b.any
   26214:	mov	w19, #0xfffffff4            	// #-12
   26218:	mov	w20, #0x1                   	// #1
   2621c:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   26220:	ldr	x0, [x29, #144]
   26224:	cmp	x0, #0x0
   26228:	b.eq	2625c <udev_util_encode_string@@LIBUDEV_183+0x1aa2c>  // b.none
   2622c:	ldr	x0, [x29, #136]
   26230:	ldr	x1, [x29, #144]
   26234:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   26238:	cmp	x0, #0x0
   2623c:	b.eq	2625c <udev_util_encode_string@@LIBUDEV_183+0x1aa2c>  // b.none
   26240:	ldr	x0, [x29, #160]
   26244:	ldr	x1, [x29, #144]
   26248:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   2624c:	cmp	x0, #0x0
   26250:	b.ne	2625c <udev_util_encode_string@@LIBUDEV_183+0x1aa2c>  // b.any
   26254:	mov	w20, #0x0                   	// #0
   26258:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   2625c:	ldr	x0, [x29, #136]
   26260:	bl	54b0 <free@plt>
   26264:	ldr	x0, [x29, #160]
   26268:	str	x0, [x29, #136]
   2626c:	str	xzr, [x29, #160]
   26270:	ldr	w0, [x29, #60]
   26274:	and	w0, w0, #0x20
   26278:	cmp	w0, #0x0
   2627c:	b.eq	26288 <udev_util_encode_string@@LIBUDEV_183+0x1aa58>  // b.none
   26280:	mov	w20, #0x2                   	// #2
   26284:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   26288:	ldr	w3, [x29, #96]
   2628c:	mov	w2, #0x8000                	// #32768
   26290:	movk	w2, #0x28, lsl #16
   26294:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26298:	add	x1, x0, #0xac0
   2629c:	mov	w0, w3
   262a0:	bl	5310 <openat64@plt>
   262a4:	str	w0, [x29, #104]
   262a8:	ldr	w0, [x29, #104]
   262ac:	cmp	w0, #0x0
   262b0:	b.ge	262c8 <udev_util_encode_string@@LIBUDEV_183+0x1aa98>  // b.tcont
   262b4:	bl	57d0 <__errno_location@plt>
   262b8:	ldr	w0, [x0]
   262bc:	neg	w19, w0
   262c0:	mov	w20, #0x1                   	// #1
   262c4:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   262c8:	ldr	w0, [x29, #60]
   262cc:	and	w0, w0, #0x8
   262d0:	cmp	w0, #0x0
   262d4:	b.eq	26380 <udev_util_encode_string@@LIBUDEV_183+0x1ab50>  // b.none
   262d8:	ldr	w0, [x29, #104]
   262dc:	add	x1, x29, #0x198
   262e0:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   262e4:	cmp	w0, #0x0
   262e8:	b.ge	26300 <udev_util_encode_string@@LIBUDEV_183+0x1aad0>  // b.tcont
   262ec:	bl	57d0 <__errno_location@plt>
   262f0:	ldr	w0, [x0]
   262f4:	neg	w19, w0
   262f8:	mov	w20, #0x1                   	// #1
   262fc:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   26300:	add	x1, x29, #0x198
   26304:	add	x0, x29, #0x118
   26308:	bl	25928 <udev_util_encode_string@@LIBUDEV_183+0x1a0f8>
   2630c:	and	w0, w0, #0xff
   26310:	cmp	w0, #0x0
   26314:	b.eq	26338 <udev_util_encode_string@@LIBUDEV_183+0x1ab08>  // b.none
   26318:	ldr	w0, [x29, #96]
   2631c:	ldr	w1, [x29, #104]
   26320:	ldr	w3, [x29, #60]
   26324:	ldr	x2, [x29, #72]
   26328:	bl	25970 <udev_util_encode_string@@LIBUDEV_183+0x1a140>
   2632c:	mov	w19, w0
   26330:	mov	w20, #0x1                   	// #1
   26334:	b	263a8 <udev_util_encode_string@@LIBUDEV_183+0x1ab78>
   26338:	add	x0, x29, #0x118
   2633c:	add	x1, x29, #0x198
   26340:	ldp	x2, x3, [x1]
   26344:	stp	x2, x3, [x0]
   26348:	ldp	x2, x3, [x1, #16]
   2634c:	stp	x2, x3, [x0, #16]
   26350:	ldp	x2, x3, [x1, #32]
   26354:	stp	x2, x3, [x0, #32]
   26358:	ldp	x2, x3, [x1, #48]
   2635c:	stp	x2, x3, [x0, #48]
   26360:	ldp	x2, x3, [x1, #64]
   26364:	stp	x2, x3, [x0, #64]
   26368:	ldp	x2, x3, [x1, #80]
   2636c:	stp	x2, x3, [x0, #80]
   26370:	ldp	x2, x3, [x1, #96]
   26374:	stp	x2, x3, [x0, #96]
   26378:	ldp	x2, x3, [x1, #112]
   2637c:	stp	x2, x3, [x0, #112]
   26380:	ldr	w0, [x29, #96]
   26384:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   26388:	ldr	w0, [x29, #104]
   2638c:	str	w0, [x29, #120]
   26390:	mov	w0, #0xffffffff            	// #-1
   26394:	str	w0, [x29, #104]
   26398:	ldr	w0, [x29, #120]
   2639c:	str	w0, [x29, #96]
   263a0:	mov	w20, #0x0                   	// #0
   263a4:	nop
   263a8:	add	x0, x29, #0x68
   263ac:	bl	25624 <udev_util_encode_string@@LIBUDEV_183+0x19df4>
   263b0:	cmp	w20, #0x0
   263b4:	b.eq	263c4 <udev_util_encode_string@@LIBUDEV_183+0x1ab94>  // b.none
   263b8:	cmp	w20, #0x1
   263bc:	b.eq	263cc <udev_util_encode_string@@LIBUDEV_183+0x1ab9c>  // b.none
   263c0:	b	263d4 <udev_util_encode_string@@LIBUDEV_183+0x1aba4>
   263c4:	mov	w20, #0x0                   	// #0
   263c8:	b	263d8 <udev_util_encode_string@@LIBUDEV_183+0x1aba8>
   263cc:	mov	w20, #0x1                   	// #1
   263d0:	b	263d8 <udev_util_encode_string@@LIBUDEV_183+0x1aba8>
   263d4:	mov	w20, #0x2                   	// #2
   263d8:	add	x0, x29, #0xa0
   263dc:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   263e0:	cmp	w20, #0x0
   263e4:	b.eq	263f4 <udev_util_encode_string@@LIBUDEV_183+0x1abc4>  // b.none
   263e8:	cmp	w20, #0x1
   263ec:	b.eq	263fc <udev_util_encode_string@@LIBUDEV_183+0x1abcc>  // b.none
   263f0:	b	26404 <udev_util_encode_string@@LIBUDEV_183+0x1abd4>
   263f4:	mov	w20, #0x2                   	// #2
   263f8:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   263fc:	mov	w20, #0x0                   	// #0
   26400:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26404:	mov	w20, #0x3                   	// #3
   26408:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   2640c:	ldr	w3, [x29, #96]
   26410:	ldr	x1, [x29, #152]
   26414:	ldr	x0, [x29, #240]
   26418:	add	x0, x1, x0
   2641c:	mov	w2, #0x8000                	// #32768
   26420:	movk	w2, #0x28, lsl #16
   26424:	mov	x1, x0
   26428:	mov	w0, w3
   2642c:	bl	5310 <openat64@plt>
   26430:	str	w0, [x29, #100]
   26434:	ldr	w0, [x29, #100]
   26438:	cmp	w0, #0x0
   2643c:	b.ge	26500 <udev_util_encode_string@@LIBUDEV_183+0x1acd0>  // b.tcont
   26440:	bl	57d0 <__errno_location@plt>
   26444:	ldr	w0, [x0]
   26448:	cmp	w0, #0x2
   2644c:	b.ne	264ec <udev_util_encode_string@@LIBUDEV_183+0x1acbc>  // b.any
   26450:	ldr	w0, [x29, #60]
   26454:	and	w0, w0, #0x2
   26458:	cmp	w0, #0x0
   2645c:	b.eq	264ec <udev_util_encode_string@@LIBUDEV_183+0x1acbc>  // b.none
   26460:	ldr	x0, [x29, #168]
   26464:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   26468:	and	w0, w0, #0xff
   2646c:	cmp	w0, #0x0
   26470:	b.ne	26488 <udev_util_encode_string@@LIBUDEV_183+0x1ac58>  // b.any
   26474:	ldr	x0, [x29, #168]
   26478:	bl	31a60 <udev_util_encode_string@@LIBUDEV_183+0x26230>
   2647c:	and	w0, w0, #0xff
   26480:	cmp	w0, #0x0
   26484:	b.eq	264ec <udev_util_encode_string@@LIBUDEV_183+0x1acbc>  // b.none
   26488:	ldr	x2, [x29, #136]
   2648c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26490:	add	x1, x0, #0xaa8
   26494:	mov	x0, x2
   26498:	bl	25590 <udev_util_encode_string@@LIBUDEV_183+0x19d60>
   2649c:	and	w0, w0, #0xff
   264a0:	cmp	w0, #0x0
   264a4:	b.eq	264b0 <udev_util_encode_string@@LIBUDEV_183+0x1ac80>  // b.none
   264a8:	ldr	x0, [x29, #136]
   264ac:	strb	wzr, [x0]
   264b0:	ldr	x1, [x29, #152]
   264b4:	add	x0, x29, #0x88
   264b8:	mov	x4, #0x0                   	// #0
   264bc:	ldr	x3, [x29, #168]
   264c0:	mov	x2, x1
   264c4:	mov	x1, #0x0                   	// #0
   264c8:	bl	348c8 <udev_util_encode_string@@LIBUDEV_183+0x29098>
   264cc:	cmp	x0, #0x0
   264d0:	b.ne	264e0 <udev_util_encode_string@@LIBUDEV_183+0x1acb0>  // b.any
   264d4:	mov	w19, #0xfffffff4            	// #-12
   264d8:	mov	w20, #0x0                   	// #0
   264dc:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   264e0:	strb	wzr, [x29, #95]
   264e4:	mov	w20, #0x1                   	// #1
   264e8:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   264ec:	bl	57d0 <__errno_location@plt>
   264f0:	ldr	w0, [x0]
   264f4:	neg	w19, w0
   264f8:	mov	w20, #0x0                   	// #0
   264fc:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26500:	ldr	w0, [x29, #100]
   26504:	add	x1, x29, #0x198
   26508:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   2650c:	cmp	w0, #0x0
   26510:	b.ge	26528 <udev_util_encode_string@@LIBUDEV_183+0x1acf8>  // b.tcont
   26514:	bl	57d0 <__errno_location@plt>
   26518:	ldr	w0, [x0]
   2651c:	neg	w19, w0
   26520:	mov	w20, #0x0                   	// #0
   26524:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26528:	ldr	w0, [x29, #60]
   2652c:	and	w0, w0, #0x8
   26530:	cmp	w0, #0x0
   26534:	b.eq	265a4 <udev_util_encode_string@@LIBUDEV_183+0x1ad74>  // b.none
   26538:	ldr	x0, [x29, #144]
   2653c:	bl	31c04 <udev_util_encode_string@@LIBUDEV_183+0x263d4>
   26540:	and	w0, w0, #0xff
   26544:	cmp	w0, #0x0
   26548:	b.ne	2656c <udev_util_encode_string@@LIBUDEV_183+0x1ad3c>  // b.any
   2654c:	ldr	x0, [x29, #128]
   26550:	ldr	x1, [x29, #168]
   26554:	sub	x0, x1, x0
   26558:	mov	x20, x0
   2655c:	ldr	x0, [x29, #144]
   26560:	bl	5040 <strlen@plt>
   26564:	cmp	x20, x0
   26568:	b.ls	265a4 <udev_util_encode_string@@LIBUDEV_183+0x1ad74>  // b.plast
   2656c:	add	x1, x29, #0x198
   26570:	add	x0, x29, #0x118
   26574:	bl	25928 <udev_util_encode_string@@LIBUDEV_183+0x1a0f8>
   26578:	and	w0, w0, #0xff
   2657c:	cmp	w0, #0x0
   26580:	b.eq	265a4 <udev_util_encode_string@@LIBUDEV_183+0x1ad74>  // b.none
   26584:	ldr	w0, [x29, #96]
   26588:	ldr	w1, [x29, #100]
   2658c:	ldr	w3, [x29, #60]
   26590:	ldr	x2, [x29, #72]
   26594:	bl	25970 <udev_util_encode_string@@LIBUDEV_183+0x1a140>
   26598:	mov	w19, w0
   2659c:	mov	w20, #0x0                   	// #0
   265a0:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   265a4:	add	x0, x29, #0x118
   265a8:	add	x1, x29, #0x198
   265ac:	ldp	x2, x3, [x1]
   265b0:	stp	x2, x3, [x0]
   265b4:	ldp	x2, x3, [x1, #16]
   265b8:	stp	x2, x3, [x0, #16]
   265bc:	ldp	x2, x3, [x1, #32]
   265c0:	stp	x2, x3, [x0, #32]
   265c4:	ldp	x2, x3, [x1, #48]
   265c8:	stp	x2, x3, [x0, #48]
   265cc:	ldp	x2, x3, [x1, #64]
   265d0:	stp	x2, x3, [x0, #64]
   265d4:	ldp	x2, x3, [x1, #80]
   265d8:	stp	x2, x3, [x0, #80]
   265dc:	ldp	x2, x3, [x1, #96]
   265e0:	stp	x2, x3, [x0, #96]
   265e4:	ldp	x2, x3, [x1, #112]
   265e8:	stp	x2, x3, [x0, #112]
   265ec:	ldr	w0, [x29, #60]
   265f0:	and	w0, w0, #0x4
   265f4:	cmp	w0, #0x0
   265f8:	b.eq	2662c <udev_util_encode_string@@LIBUDEV_183+0x1adfc>  // b.none
   265fc:	ldr	w0, [x29, #100]
   26600:	mov	x1, #0x187                 	// #391
   26604:	bl	33c48 <udev_util_encode_string@@LIBUDEV_183+0x28418>
   26608:	cmp	w0, #0x0
   2660c:	b.le	2662c <udev_util_encode_string@@LIBUDEV_183+0x1adfc>
   26610:	ldr	w0, [x29, #100]
   26614:	ldr	w2, [x29, #60]
   26618:	ldr	x1, [x29, #72]
   2661c:	bl	25aec <udev_util_encode_string@@LIBUDEV_183+0x1a2bc>
   26620:	mov	w19, w0
   26624:	mov	w20, #0x0                   	// #0
   26628:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   2662c:	ldr	w0, [x29, #424]
   26630:	and	w0, w0, #0xf000
   26634:	cmp	w0, #0xa, lsl #12
   26638:	b.ne	2690c <udev_util_encode_string@@LIBUDEV_183+0x1b0dc>  // b.any
   2663c:	ldr	w0, [x29, #60]
   26640:	and	w0, w0, #0x40
   26644:	cmp	w0, #0x0
   26648:	b.eq	26668 <udev_util_encode_string@@LIBUDEV_183+0x1ae38>  // b.none
   2664c:	ldr	x0, [x29, #168]
   26650:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   26654:	and	w0, w0, #0xff
   26658:	eor	w0, w0, #0x1
   2665c:	and	w0, w0, #0xff
   26660:	cmp	w0, #0x0
   26664:	b.eq	2690c <udev_util_encode_string@@LIBUDEV_183+0x1b0dc>  // b.none
   26668:	str	xzr, [x29, #160]
   2666c:	ldr	w0, [x29, #108]
   26670:	sub	w0, w0, #0x1
   26674:	str	w0, [x29, #108]
   26678:	ldr	w0, [x29, #108]
   2667c:	cmp	w0, #0x0
   26680:	b.ne	26690 <udev_util_encode_string@@LIBUDEV_183+0x1ae60>  // b.any
   26684:	mov	w19, #0xffffffd8            	// #-40
   26688:	mov	w20, #0x0                   	// #0
   2668c:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   26690:	ldr	w3, [x29, #96]
   26694:	ldr	x1, [x29, #152]
   26698:	ldr	x0, [x29, #240]
   2669c:	add	x0, x1, x0
   266a0:	add	x1, x29, #0xa0
   266a4:	mov	x2, x1
   266a8:	mov	x1, x0
   266ac:	mov	w0, w3
   266b0:	bl	25648 <udev_util_encode_string@@LIBUDEV_183+0x19e18>
   266b4:	str	w0, [x29, #112]
   266b8:	ldr	w0, [x29, #112]
   266bc:	cmp	w0, #0x0
   266c0:	b.ge	266d0 <udev_util_encode_string@@LIBUDEV_183+0x1aea0>  // b.tcont
   266c4:	ldr	w19, [x29, #112]
   266c8:	mov	w20, #0x0                   	// #0
   266cc:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   266d0:	ldr	x0, [x29, #160]
   266d4:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   266d8:	and	w0, w0, #0xff
   266dc:	cmp	w0, #0x0
   266e0:	b.eq	266f0 <udev_util_encode_string@@LIBUDEV_183+0x1aec0>  // b.none
   266e4:	mov	w19, #0xffffffea            	// #-22
   266e8:	mov	w20, #0x0                   	// #0
   266ec:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   266f0:	ldr	x0, [x29, #160]
   266f4:	bl	30c48 <udev_util_encode_string@@LIBUDEV_183+0x25418>
   266f8:	and	w0, w0, #0xff
   266fc:	cmp	w0, #0x0
   26700:	b.eq	26868 <udev_util_encode_string@@LIBUDEV_183+0x1b038>  // b.none
   26704:	ldr	w0, [x29, #96]
   26708:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2670c:	ldr	x0, [x29, #144]
   26710:	cmp	x0, #0x0
   26714:	b.ne	26720 <udev_util_encode_string@@LIBUDEV_183+0x1aef0>  // b.any
   26718:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2671c:	add	x0, x0, #0xaa8
   26720:	mov	w1, #0x8000                	// #32768
   26724:	movk	w1, #0x28, lsl #16
   26728:	bl	56c0 <open64@plt>
   2672c:	str	w0, [x29, #96]
   26730:	ldr	w0, [x29, #96]
   26734:	cmp	w0, #0x0
   26738:	b.ge	26750 <udev_util_encode_string@@LIBUDEV_183+0x1af20>  // b.tcont
   2673c:	bl	57d0 <__errno_location@plt>
   26740:	ldr	w0, [x0]
   26744:	neg	w19, w0
   26748:	mov	w20, #0x0                   	// #0
   2674c:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   26750:	ldr	w0, [x29, #60]
   26754:	and	w0, w0, #0x8
   26758:	cmp	w0, #0x0
   2675c:	b.eq	26808 <udev_util_encode_string@@LIBUDEV_183+0x1afd8>  // b.none
   26760:	ldr	w0, [x29, #96]
   26764:	add	x1, x29, #0x198
   26768:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   2676c:	cmp	w0, #0x0
   26770:	b.ge	26788 <udev_util_encode_string@@LIBUDEV_183+0x1af58>  // b.tcont
   26774:	bl	57d0 <__errno_location@plt>
   26778:	ldr	w0, [x0]
   2677c:	neg	w19, w0
   26780:	mov	w20, #0x0                   	// #0
   26784:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   26788:	add	x1, x29, #0x198
   2678c:	add	x0, x29, #0x118
   26790:	bl	25928 <udev_util_encode_string@@LIBUDEV_183+0x1a0f8>
   26794:	and	w0, w0, #0xff
   26798:	cmp	w0, #0x0
   2679c:	b.eq	267c0 <udev_util_encode_string@@LIBUDEV_183+0x1af90>  // b.none
   267a0:	ldr	w0, [x29, #100]
   267a4:	ldr	w1, [x29, #96]
   267a8:	ldr	w3, [x29, #60]
   267ac:	ldr	x2, [x29, #72]
   267b0:	bl	25970 <udev_util_encode_string@@LIBUDEV_183+0x1a140>
   267b4:	mov	w19, w0
   267b8:	mov	w20, #0x0                   	// #0
   267bc:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   267c0:	add	x0, x29, #0x118
   267c4:	add	x1, x29, #0x198
   267c8:	ldp	x2, x3, [x1]
   267cc:	stp	x2, x3, [x0]
   267d0:	ldp	x2, x3, [x1, #16]
   267d4:	stp	x2, x3, [x0, #16]
   267d8:	ldp	x2, x3, [x1, #32]
   267dc:	stp	x2, x3, [x0, #32]
   267e0:	ldp	x2, x3, [x1, #48]
   267e4:	stp	x2, x3, [x0, #48]
   267e8:	ldp	x2, x3, [x1, #64]
   267ec:	stp	x2, x3, [x0, #64]
   267f0:	ldp	x2, x3, [x1, #80]
   267f4:	stp	x2, x3, [x0, #80]
   267f8:	ldp	x2, x3, [x1, #96]
   267fc:	stp	x2, x3, [x0, #96]
   26800:	ldp	x2, x3, [x1, #112]
   26804:	stp	x2, x3, [x0, #112]
   26808:	ldr	x0, [x29, #136]
   2680c:	bl	54b0 <free@plt>
   26810:	ldr	x0, [x29, #144]
   26814:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   26818:	and	w0, w0, #0xff
   2681c:	cmp	w0, #0x0
   26820:	b.eq	2682c <udev_util_encode_string@@LIBUDEV_183+0x1affc>  // b.none
   26824:	str	xzr, [x29, #136]
   26828:	b	26850 <udev_util_encode_string@@LIBUDEV_183+0x1b020>
   2682c:	ldr	x0, [x29, #144]
   26830:	bl	5370 <strdup@plt>
   26834:	str	x0, [x29, #136]
   26838:	ldr	x0, [x29, #136]
   2683c:	cmp	x0, #0x0
   26840:	b.ne	26850 <udev_util_encode_string@@LIBUDEV_183+0x1b020>  // b.any
   26844:	mov	w19, #0xfffffff4            	// #-12
   26848:	mov	w20, #0x0                   	// #0
   2684c:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   26850:	ldr	x0, [x29, #160]
   26854:	mov	x2, #0xffffffffffffffff    	// #-1
   26858:	ldr	x1, [x29, #168]
   2685c:	bl	31588 <udev_util_encode_string@@LIBUDEV_183+0x25d58>
   26860:	str	x0, [x29, #200]
   26864:	b	26888 <udev_util_encode_string@@LIBUDEV_183+0x1b058>
   26868:	ldr	x0, [x29, #160]
   2686c:	mov	x3, #0xffffffffffffffff    	// #-1
   26870:	ldr	x2, [x29, #168]
   26874:	mov	x1, x0
   26878:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2687c:	add	x0, x0, #0xaa8
   26880:	bl	31588 <udev_util_encode_string@@LIBUDEV_183+0x25d58>
   26884:	str	x0, [x29, #200]
   26888:	ldr	x0, [x29, #200]
   2688c:	cmp	x0, #0x0
   26890:	b.ne	268a0 <udev_util_encode_string@@LIBUDEV_183+0x1b070>  // b.any
   26894:	mov	w19, #0xfffffff4            	// #-12
   26898:	mov	w20, #0x0                   	// #0
   2689c:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   268a0:	ldr	x0, [x29, #128]
   268a4:	bl	54b0 <free@plt>
   268a8:	ldr	x0, [x29, #200]
   268ac:	str	x0, [x29, #128]
   268b0:	ldr	x0, [x29, #128]
   268b4:	str	x0, [x29, #168]
   268b8:	ldr	w0, [x29, #60]
   268bc:	and	w0, w0, #0x20
   268c0:	cmp	w0, #0x0
   268c4:	b.eq	268d0 <udev_util_encode_string@@LIBUDEV_183+0x1b0a0>  // b.none
   268c8:	mov	w20, #0x1                   	// #1
   268cc:	b	268d8 <udev_util_encode_string@@LIBUDEV_183+0x1b0a8>
   268d0:	mov	w20, #0x2                   	// #2
   268d4:	nop
   268d8:	add	x0, x29, #0xa0
   268dc:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   268e0:	cmp	w20, #0x0
   268e4:	b.eq	268f4 <udev_util_encode_string@@LIBUDEV_183+0x1b0c4>  // b.none
   268e8:	cmp	w20, #0x1
   268ec:	b.eq	268fc <udev_util_encode_string@@LIBUDEV_183+0x1b0cc>  // b.none
   268f0:	b	26904 <udev_util_encode_string@@LIBUDEV_183+0x1b0d4>
   268f4:	mov	w20, #0x0                   	// #0
   268f8:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   268fc:	mov	w20, #0x3                   	// #3
   26900:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26904:	mov	w20, #0x2                   	// #2
   26908:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   2690c:	ldr	x0, [x29, #136]
   26910:	cmp	x0, #0x0
   26914:	b.ne	26930 <udev_util_encode_string@@LIBUDEV_183+0x1b100>  // b.any
   26918:	ldr	x0, [x29, #152]
   2691c:	str	x0, [x29, #256]
   26920:	str	xzr, [x29, #152]
   26924:	ldr	x0, [x29, #256]
   26928:	str	x0, [x29, #136]
   2692c:	b	26980 <udev_util_encode_string@@LIBUDEV_183+0x1b150>
   26930:	ldr	x2, [x29, #136]
   26934:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26938:	add	x1, x0, #0xaa8
   2693c:	mov	x0, x2
   26940:	bl	5440 <strcmp@plt>
   26944:	cmp	w0, #0x0
   26948:	b.ne	26954 <udev_util_encode_string@@LIBUDEV_183+0x1b124>  // b.any
   2694c:	ldr	x0, [x29, #136]
   26950:	strb	wzr, [x0]
   26954:	ldr	x1, [x29, #152]
   26958:	add	x0, x29, #0x88
   2695c:	mov	x3, #0x0                   	// #0
   26960:	mov	x2, x1
   26964:	mov	x1, #0x0                   	// #0
   26968:	bl	348c8 <udev_util_encode_string@@LIBUDEV_183+0x29098>
   2696c:	cmp	x0, #0x0
   26970:	b.ne	26980 <udev_util_encode_string@@LIBUDEV_183+0x1b150>  // b.any
   26974:	mov	w19, #0xfffffff4            	// #-12
   26978:	mov	w20, #0x0                   	// #0
   2697c:	b	269a4 <udev_util_encode_string@@LIBUDEV_183+0x1b174>
   26980:	ldr	w0, [x29, #96]
   26984:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   26988:	ldr	w0, [x29, #100]
   2698c:	str	w0, [x29, #116]
   26990:	mov	w0, #0xffffffff            	// #-1
   26994:	str	w0, [x29, #100]
   26998:	ldr	w0, [x29, #116]
   2699c:	str	w0, [x29, #96]
   269a0:	mov	w20, #0x4                   	// #4
   269a4:	add	x0, x29, #0x64
   269a8:	bl	25624 <udev_util_encode_string@@LIBUDEV_183+0x19df4>
   269ac:	cmp	w20, #0x4
   269b0:	b.eq	26a00 <udev_util_encode_string@@LIBUDEV_183+0x1b1d0>  // b.none
   269b4:	cmp	w20, #0x4
   269b8:	b.gt	269f8 <udev_util_encode_string@@LIBUDEV_183+0x1b1c8>
   269bc:	cmp	w20, #0x2
   269c0:	b.eq	269f0 <udev_util_encode_string@@LIBUDEV_183+0x1b1c0>  // b.none
   269c4:	cmp	w20, #0x2
   269c8:	b.gt	269f8 <udev_util_encode_string@@LIBUDEV_183+0x1b1c8>
   269cc:	cmp	w20, #0x0
   269d0:	b.eq	269e0 <udev_util_encode_string@@LIBUDEV_183+0x1b1b0>  // b.none
   269d4:	cmp	w20, #0x1
   269d8:	b.eq	269e8 <udev_util_encode_string@@LIBUDEV_183+0x1b1b8>  // b.none
   269dc:	b	269f8 <udev_util_encode_string@@LIBUDEV_183+0x1b1c8>
   269e0:	mov	w20, #0x0                   	// #0
   269e4:	b	26a04 <udev_util_encode_string@@LIBUDEV_183+0x1b1d4>
   269e8:	mov	w20, #0x1                   	// #1
   269ec:	b	26a04 <udev_util_encode_string@@LIBUDEV_183+0x1b1d4>
   269f0:	mov	w20, #0x2                   	// #2
   269f4:	b	26a04 <udev_util_encode_string@@LIBUDEV_183+0x1b1d4>
   269f8:	mov	w20, #0x3                   	// #3
   269fc:	b	26a04 <udev_util_encode_string@@LIBUDEV_183+0x1b1d4>
   26a00:	mov	w20, #0x4                   	// #4
   26a04:	add	x0, x29, #0x98
   26a08:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   26a0c:	cmp	w20, #0x4
   26a10:	b.eq	26a4c <udev_util_encode_string@@LIBUDEV_183+0x1b21c>  // b.none
   26a14:	cmp	w20, #0x4
   26a18:	b.gt	26b20 <udev_util_encode_string@@LIBUDEV_183+0x1b2f0>
   26a1c:	cmp	w20, #0x2
   26a20:	b.eq	26084 <udev_util_encode_string@@LIBUDEV_183+0x1a854>  // b.none
   26a24:	cmp	w20, #0x2
   26a28:	b.gt	26b20 <udev_util_encode_string@@LIBUDEV_183+0x1b2f0>
   26a2c:	cmp	w20, #0x0
   26a30:	b.eq	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>  // b.none
   26a34:	cmp	w20, #0x1
   26a38:	b.ne	26b20 <udev_util_encode_string@@LIBUDEV_183+0x1b2f0>  // b.any
   26a3c:	ldr	x0, [x29, #136]
   26a40:	cmp	x0, #0x0
   26a44:	b.eq	26a50 <udev_util_encode_string@@LIBUDEV_183+0x1b220>  // b.none
   26a48:	b	26a74 <udev_util_encode_string@@LIBUDEV_183+0x1b244>
   26a4c:	b	26084 <udev_util_encode_string@@LIBUDEV_183+0x1a854>
   26a50:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26a54:	add	x0, x0, #0xaa8
   26a58:	bl	5370 <strdup@plt>
   26a5c:	str	x0, [x29, #136]
   26a60:	ldr	x0, [x29, #136]
   26a64:	cmp	x0, #0x0
   26a68:	b.ne	26a74 <udev_util_encode_string@@LIBUDEV_183+0x1b244>  // b.any
   26a6c:	mov	w19, #0xfffffff4            	// #-12
   26a70:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   26a74:	ldr	x0, [x29, #48]
   26a78:	cmp	x0, #0x0
   26a7c:	b.eq	26a98 <udev_util_encode_string@@LIBUDEV_183+0x1b268>  // b.none
   26a80:	ldr	x0, [x29, #136]
   26a84:	str	x0, [x29, #264]
   26a88:	str	xzr, [x29, #136]
   26a8c:	ldr	x1, [x29, #264]
   26a90:	ldr	x0, [x29, #48]
   26a94:	str	x1, [x0]
   26a98:	ldr	x0, [x29, #40]
   26a9c:	cmp	x0, #0x0
   26aa0:	b.eq	26b00 <udev_util_encode_string@@LIBUDEV_183+0x1b2d0>  // b.none
   26aa4:	ldr	w0, [x29, #96]
   26aa8:	lsr	w0, w0, #31
   26aac:	and	w0, w0, #0xff
   26ab0:	and	x0, x0, #0xff
   26ab4:	cmp	x0, #0x0
   26ab8:	b.eq	26ae4 <udev_util_encode_string@@LIBUDEV_183+0x1b2b4>  // b.none
   26abc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26ac0:	add	x1, x0, #0x693
   26ac4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26ac8:	add	x4, x0, #0xc48
   26acc:	mov	w3, #0x40d                 	// #1037
   26ad0:	mov	x2, x1
   26ad4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26ad8:	add	x1, x0, #0xac8
   26adc:	mov	w0, #0x0                   	// #0
   26ae0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   26ae4:	ldr	w0, [x29, #96]
   26ae8:	str	w0, [x29, #124]
   26aec:	mov	w0, #0xffffffff            	// #-1
   26af0:	str	w0, [x29, #96]
   26af4:	ldr	w1, [x29, #124]
   26af8:	ldr	x0, [x29, #40]
   26afc:	str	w1, [x0]
   26b00:	ldr	w0, [x29, #60]
   26b04:	and	w0, w0, #0x20
   26b08:	cmp	w0, #0x0
   26b0c:	b.eq	26b18 <udev_util_encode_string@@LIBUDEV_183+0x1b2e8>  // b.none
   26b10:	mov	w19, #0x1                   	// #1
   26b14:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   26b18:	ldrb	w19, [x29, #95]
   26b1c:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   26b20:	ldr	x0, [x29, #48]
   26b24:	cmp	x0, #0x0
   26b28:	b.eq	26b64 <udev_util_encode_string@@LIBUDEV_183+0x1b334>  // b.none
   26b2c:	ldr	x0, [x29, #136]
   26b30:	bl	255c0 <udev_util_encode_string@@LIBUDEV_183+0x19d90>
   26b34:	mov	x2, #0x0                   	// #0
   26b38:	ldr	x1, [x29, #168]
   26b3c:	bl	34654 <udev_util_encode_string@@LIBUDEV_183+0x28e24>
   26b40:	str	x0, [x29, #272]
   26b44:	ldr	x0, [x29, #272]
   26b48:	cmp	x0, #0x0
   26b4c:	b.ne	26b58 <udev_util_encode_string@@LIBUDEV_183+0x1b328>  // b.any
   26b50:	mov	w19, #0xfffffff4            	// #-12
   26b54:	b	26b68 <udev_util_encode_string@@LIBUDEV_183+0x1b338>
   26b58:	ldr	x0, [x29, #48]
   26b5c:	ldr	x1, [x29, #272]
   26b60:	str	x1, [x0]
   26b64:	mov	w19, #0x0                   	// #0
   26b68:	add	x0, x29, #0x60
   26b6c:	bl	25624 <udev_util_encode_string@@LIBUDEV_183+0x19df4>
   26b70:	add	x0, x29, #0x90
   26b74:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   26b78:	add	x0, x29, #0x88
   26b7c:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   26b80:	add	x0, x29, #0x80
   26b84:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   26b88:	mov	w1, w19
   26b8c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   26b90:	ldr	x0, [x0, #4016]
   26b94:	ldr	x2, [x29, #536]
   26b98:	ldr	x0, [x0]
   26b9c:	eor	x0, x2, x0
   26ba0:	cmp	x0, #0x0
   26ba4:	b.eq	26bac <udev_util_encode_string@@LIBUDEV_183+0x1b37c>  // b.none
   26ba8:	bl	5390 <__stack_chk_fail@plt>
   26bac:	mov	w0, w1
   26bb0:	mov	sp, x29
   26bb4:	ldp	x19, x20, [sp, #16]
   26bb8:	ldp	x29, x30, [sp]
   26bbc:	add	sp, sp, #0x220
   26bc0:	ret
   26bc4:	stp	x29, x30, [sp, #-96]!
   26bc8:	mov	x29, sp
   26bcc:	str	x19, [sp, #16]
   26bd0:	str	w0, [sp, #44]
   26bd4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   26bd8:	ldr	x0, [x0, #4016]
   26bdc:	ldr	x1, [x0]
   26be0:	str	x1, [sp, #88]
   26be4:	mov	x1, #0x0                   	// #0
   26be8:	str	xzr, [sp, #80]
   26bec:	mov	w0, #0xffffffff            	// #-1
   26bf0:	str	w0, [sp, #60]
   26bf4:	ldr	w0, [sp, #44]
   26bf8:	bl	33d84 <udev_util_encode_string@@LIBUDEV_183+0x28554>
   26bfc:	str	w0, [sp, #64]
   26c00:	ldr	w0, [sp, #64]
   26c04:	cmp	w0, #0x0
   26c08:	b.ge	26c14 <udev_util_encode_string@@LIBUDEV_183+0x1b3e4>  // b.tcont
   26c0c:	ldr	w19, [sp, #64]
   26c10:	b	26d60 <udev_util_encode_string@@LIBUDEV_183+0x1b530>
   26c14:	add	x0, sp, #0x50
   26c18:	mov	x1, x0
   26c1c:	ldr	w0, [sp, #44]
   26c20:	bl	2312c <udev_util_encode_string@@LIBUDEV_183+0x178fc>
   26c24:	str	w0, [sp, #64]
   26c28:	ldr	w0, [sp, #64]
   26c2c:	cmp	w0, #0x0
   26c30:	b.ge	26cf0 <udev_util_encode_string@@LIBUDEV_183+0x1b4c0>  // b.tcont
   26c34:	mov	w0, #0x7                   	// #7
   26c38:	str	w0, [sp, #68]
   26c3c:	ldr	w0, [sp, #64]
   26c40:	str	w0, [sp, #72]
   26c44:	str	wzr, [sp, #76]
   26c48:	ldr	w0, [sp, #76]
   26c4c:	bl	2ec4c <udev_util_encode_string@@LIBUDEV_183+0x2341c>
   26c50:	mov	w1, w0
   26c54:	ldr	w0, [sp, #68]
   26c58:	and	w0, w0, #0x7
   26c5c:	cmp	w1, w0
   26c60:	b.lt	26ccc <udev_util_encode_string@@LIBUDEV_183+0x1b49c>  // b.tstop
   26c64:	ldr	w0, [sp, #76]
   26c68:	lsl	w1, w0, #10
   26c6c:	ldr	w0, [sp, #68]
   26c70:	orr	w8, w1, w0
   26c74:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26c78:	add	x1, x0, #0x693
   26c7c:	ldr	w0, [sp, #64]
   26c80:	cmn	w0, #0x5f
   26c84:	b.ne	26c94 <udev_util_encode_string@@LIBUDEV_183+0x1b464>  // b.any
   26c88:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26c8c:	add	x0, x0, #0xbc0
   26c90:	b	26c9c <udev_util_encode_string@@LIBUDEV_183+0x1b46c>
   26c94:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26c98:	add	x0, x0, #0x688
   26c9c:	mov	x7, x0
   26ca0:	ldr	w6, [sp, #44]
   26ca4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26ca8:	add	x5, x0, #0xbd0
   26cac:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26cb0:	add	x4, x0, #0xc58
   26cb4:	mov	w3, #0x508                 	// #1288
   26cb8:	mov	x2, x1
   26cbc:	ldr	w1, [sp, #72]
   26cc0:	mov	w0, w8
   26cc4:	bl	2d5a8 <udev_util_encode_string@@LIBUDEV_183+0x21d78>
   26cc8:	b	26cd4 <udev_util_encode_string@@LIBUDEV_183+0x1b4a4>
   26ccc:	ldr	w0, [sp, #72]
   26cd0:	cmp	w0, #0x0
   26cd4:	ldr	w0, [sp, #64]
   26cd8:	cmn	w0, #0x5f
   26cdc:	b.ne	26ce8 <udev_util_encode_string@@LIBUDEV_183+0x1b4b8>  // b.any
   26ce0:	mov	w19, #0x0                   	// #0
   26ce4:	b	26d60 <udev_util_encode_string@@LIBUDEV_183+0x1b530>
   26ce8:	ldr	w19, [sp, #64]
   26cec:	b	26d60 <udev_util_encode_string@@LIBUDEV_183+0x1b530>
   26cf0:	ldr	x0, [sp, #80]
   26cf4:	bl	30c48 <udev_util_encode_string@@LIBUDEV_183+0x25418>
   26cf8:	and	w0, w0, #0xff
   26cfc:	eor	w0, w0, #0x1
   26d00:	and	w0, w0, #0xff
   26d04:	cmp	w0, #0x0
   26d08:	b.eq	26d14 <udev_util_encode_string@@LIBUDEV_183+0x1b4e4>  // b.none
   26d0c:	mov	w19, #0xffffffea            	// #-22
   26d10:	b	26d60 <udev_util_encode_string@@LIBUDEV_183+0x1b530>
   26d14:	ldr	x0, [sp, #80]
   26d18:	mov	w2, #0x0                   	// #0
   26d1c:	mov	w1, #0x80000               	// #524288
   26d20:	bl	26da4 <udev_util_encode_string@@LIBUDEV_183+0x1b574>
   26d24:	str	w0, [sp, #60]
   26d28:	ldr	w0, [sp, #60]
   26d2c:	cmp	w0, #0x0
   26d30:	b.ge	26d3c <udev_util_encode_string@@LIBUDEV_183+0x1b50c>  // b.tcont
   26d34:	ldr	w19, [sp, #60]
   26d38:	b	26d60 <udev_util_encode_string@@LIBUDEV_183+0x1b530>
   26d3c:	ldr	w0, [sp, #60]
   26d40:	bl	51f0 <fsync@plt>
   26d44:	cmp	w0, #0x0
   26d48:	b.ge	26d5c <udev_util_encode_string@@LIBUDEV_183+0x1b52c>  // b.tcont
   26d4c:	bl	57d0 <__errno_location@plt>
   26d50:	ldr	w0, [x0]
   26d54:	neg	w19, w0
   26d58:	b	26d60 <udev_util_encode_string@@LIBUDEV_183+0x1b530>
   26d5c:	mov	w19, #0x0                   	// #0
   26d60:	add	x0, sp, #0x3c
   26d64:	bl	25624 <udev_util_encode_string@@LIBUDEV_183+0x19df4>
   26d68:	add	x0, sp, #0x50
   26d6c:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   26d70:	mov	w1, w19
   26d74:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   26d78:	ldr	x0, [x0, #4016]
   26d7c:	ldr	x2, [sp, #88]
   26d80:	ldr	x0, [x0]
   26d84:	eor	x0, x2, x0
   26d88:	cmp	x0, #0x0
   26d8c:	b.eq	26d94 <udev_util_encode_string@@LIBUDEV_183+0x1b564>  // b.none
   26d90:	bl	5390 <__stack_chk_fail@plt>
   26d94:	mov	w0, w1
   26d98:	ldr	x19, [sp, #16]
   26d9c:	ldp	x29, x30, [sp], #96
   26da0:	ret
   26da4:	stp	x29, x30, [sp, #-80]!
   26da8:	mov	x29, sp
   26dac:	str	x19, [sp, #16]
   26db0:	str	x0, [sp, #40]
   26db4:	str	w1, [sp, #36]
   26db8:	str	w2, [sp, #32]
   26dbc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   26dc0:	ldr	x0, [x0, #4016]
   26dc4:	ldr	x1, [x0]
   26dc8:	str	x1, [sp, #72]
   26dcc:	mov	x1, #0x0                   	// #0
   26dd0:	str	xzr, [sp, #64]
   26dd4:	ldr	x0, [sp, #40]
   26dd8:	bl	255e4 <udev_util_encode_string@@LIBUDEV_183+0x19db4>
   26ddc:	and	w0, w0, #0xff
   26de0:	cmp	w0, #0x0
   26de4:	b.eq	26df0 <udev_util_encode_string@@LIBUDEV_183+0x1b5c0>  // b.none
   26de8:	mov	w19, #0xffffffea            	// #-22
   26dec:	b	26eb0 <udev_util_encode_string@@LIBUDEV_183+0x1b680>
   26df0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26df4:	add	x1, x0, #0xaa8
   26df8:	ldr	x0, [sp, #40]
   26dfc:	bl	31558 <udev_util_encode_string@@LIBUDEV_183+0x25d28>
   26e00:	and	w0, w0, #0xff
   26e04:	cmp	w0, #0x0
   26e08:	b.eq	26e14 <udev_util_encode_string@@LIBUDEV_183+0x1b5e4>  // b.none
   26e0c:	mov	w19, #0xffffffea            	// #-22
   26e10:	b	26eb0 <udev_util_encode_string@@LIBUDEV_183+0x1b680>
   26e14:	ldr	x0, [sp, #40]
   26e18:	bl	31888 <udev_util_encode_string@@LIBUDEV_183+0x26058>
   26e1c:	str	x0, [sp, #64]
   26e20:	ldr	x0, [sp, #64]
   26e24:	cmp	x0, #0x0
   26e28:	b.ne	26e34 <udev_util_encode_string@@LIBUDEV_183+0x1b604>  // b.any
   26e2c:	mov	w19, #0xfffffff4            	// #-12
   26e30:	b	26eb0 <udev_util_encode_string@@LIBUDEV_183+0x1b680>
   26e34:	ldr	w0, [sp, #36]
   26e38:	and	w0, w0, #0x200000
   26e3c:	cmp	w0, #0x0
   26e40:	b.eq	26e54 <udev_util_encode_string@@LIBUDEV_183+0x1b624>  // b.none
   26e44:	ldr	w0, [sp, #36]
   26e48:	orr	w0, w0, #0x4000
   26e4c:	str	w0, [sp, #36]
   26e50:	b	26e7c <udev_util_encode_string@@LIBUDEV_183+0x1b64c>
   26e54:	ldr	w0, [sp, #36]
   26e58:	mvn	w1, w0
   26e5c:	mov	w0, #0x4000                	// #16384
   26e60:	movk	w0, #0x40, lsl #16
   26e64:	and	w0, w1, w0
   26e68:	cmp	w0, #0x0
   26e6c:	b.eq	26e7c <udev_util_encode_string@@LIBUDEV_183+0x1b64c>  // b.none
   26e70:	ldr	w0, [sp, #36]
   26e74:	orr	w0, w0, #0x4000
   26e78:	str	w0, [sp, #36]
   26e7c:	ldr	x0, [sp, #64]
   26e80:	ldr	w2, [sp, #32]
   26e84:	ldr	w1, [sp, #36]
   26e88:	bl	56c0 <open64@plt>
   26e8c:	str	w0, [sp, #60]
   26e90:	ldr	w0, [sp, #60]
   26e94:	cmp	w0, #0x0
   26e98:	b.ge	26eac <udev_util_encode_string@@LIBUDEV_183+0x1b67c>  // b.tcont
   26e9c:	bl	57d0 <__errno_location@plt>
   26ea0:	ldr	w0, [x0]
   26ea4:	neg	w19, w0
   26ea8:	b	26eb0 <udev_util_encode_string@@LIBUDEV_183+0x1b680>
   26eac:	ldr	w19, [sp, #60]
   26eb0:	add	x0, sp, #0x40
   26eb4:	bl	2549c <udev_util_encode_string@@LIBUDEV_183+0x19c6c>
   26eb8:	mov	w1, w19
   26ebc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   26ec0:	ldr	x0, [x0, #4016]
   26ec4:	ldr	x2, [sp, #72]
   26ec8:	ldr	x0, [x0]
   26ecc:	eor	x0, x2, x0
   26ed0:	cmp	x0, #0x0
   26ed4:	b.eq	26edc <udev_util_encode_string@@LIBUDEV_183+0x1b6ac>  // b.none
   26ed8:	bl	5390 <__stack_chk_fail@plt>
   26edc:	mov	w0, w1
   26ee0:	ldr	x19, [sp, #16]
   26ee4:	ldp	x29, x30, [sp], #80
   26ee8:	ret
   26eec:	stp	x29, x30, [sp, #-32]!
   26ef0:	mov	x29, sp
   26ef4:	str	x0, [sp, #24]
   26ef8:	str	x1, [sp, #16]
   26efc:	ldr	x0, [sp, #24]
   26f00:	bl	5040 <strlen@plt>
   26f04:	add	x0, x0, #0x1
   26f08:	ldr	x2, [sp, #16]
   26f0c:	mov	x1, x0
   26f10:	ldr	x0, [sp, #24]
   26f14:	bl	332c4 <udev_util_encode_string@@LIBUDEV_183+0x27a94>
   26f18:	nop
   26f1c:	ldp	x29, x30, [sp], #32
   26f20:	ret
   26f24:	stp	x29, x30, [sp, #-32]!
   26f28:	mov	x29, sp
   26f2c:	str	x0, [sp, #24]
   26f30:	str	x1, [sp, #16]
   26f34:	add	x0, sp, #0x18
   26f38:	ldr	x2, [sp, #16]
   26f3c:	mov	x1, #0x8                   	// #8
   26f40:	bl	332c4 <udev_util_encode_string@@LIBUDEV_183+0x27a94>
   26f44:	nop
   26f48:	ldp	x29, x30, [sp], #32
   26f4c:	ret
   26f50:	sub	sp, sp, #0x20
   26f54:	str	x0, [sp, #8]
   26f58:	str	x1, [sp]
   26f5c:	ldr	x0, [sp, #8]
   26f60:	str	x0, [sp, #16]
   26f64:	ldr	x0, [sp]
   26f68:	str	x0, [sp, #24]
   26f6c:	ldr	x1, [sp, #16]
   26f70:	ldr	x0, [sp, #24]
   26f74:	cmp	x1, x0
   26f78:	b.cc	26f94 <udev_util_encode_string@@LIBUDEV_183+0x1b764>  // b.lo, b.ul, b.last
   26f7c:	ldr	x1, [sp, #16]
   26f80:	ldr	x0, [sp, #24]
   26f84:	cmp	x1, x0
   26f88:	cset	w0, hi  // hi = pmore
   26f8c:	and	w0, w0, #0xff
   26f90:	b	26f98 <udev_util_encode_string@@LIBUDEV_183+0x1b768>
   26f94:	mov	w0, #0xffffffff            	// #-1
   26f98:	add	sp, sp, #0x20
   26f9c:	ret
   26fa0:	stp	x29, x30, [sp, #-32]!
   26fa4:	mov	x29, sp
   26fa8:	str	w0, [sp, #28]
   26fac:	ldr	w0, [sp, #28]
   26fb0:	cmp	w0, #0x0
   26fb4:	cset	w0, eq  // eq = none
   26fb8:	and	w0, w0, #0xff
   26fbc:	and	x0, x0, #0xff
   26fc0:	cmp	x0, #0x0
   26fc4:	b.eq	26ff0 <udev_util_encode_string@@LIBUDEV_183+0x1b7c0>  // b.none
   26fc8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26fcc:	add	x1, x0, #0xc73
   26fd0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   26fd4:	add	x4, x0, #0x118
   26fd8:	mov	w3, #0x30                  	// #48
   26fdc:	mov	x2, x1
   26fe0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   26fe4:	add	x1, x0, #0xc88
   26fe8:	mov	w0, #0x0                   	// #0
   26fec:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   26ff0:	ldr	w0, [sp, #28]
   26ff4:	clz	w0, w0
   26ff8:	mov	w1, w0
   26ffc:	mov	w0, #0x1f                  	// #31
   27000:	sub	w0, w0, w1
   27004:	ldp	x29, x30, [sp], #32
   27008:	ret
   2700c:	stp	x29, x30, [sp, #-32]!
   27010:	mov	x29, sp
   27014:	str	w0, [sp, #28]
   27018:	ldr	w0, [sp, #28]
   2701c:	cmp	w0, #0x0
   27020:	cset	w0, eq  // eq = none
   27024:	and	w0, w0, #0xff
   27028:	and	x0, x0, #0xff
   2702c:	cmp	x0, #0x0
   27030:	b.eq	2705c <udev_util_encode_string@@LIBUDEV_183+0x1b82c>  // b.none
   27034:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27038:	add	x1, x0, #0xc73
   2703c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27040:	add	x4, x0, #0x108
   27044:	mov	w3, #0x36                  	// #54
   27048:	mov	x2, x1
   2704c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27050:	add	x1, x0, #0xc88
   27054:	mov	w0, #0x0                   	// #0
   27058:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2705c:	ldr	w0, [sp, #28]
   27060:	cmp	w0, #0x1
   27064:	b.ne	27070 <udev_util_encode_string@@LIBUDEV_183+0x1b840>  // b.any
   27068:	mov	w0, #0x0                   	// #0
   2706c:	b	27080 <udev_util_encode_string@@LIBUDEV_183+0x1b850>
   27070:	ldr	w0, [sp, #28]
   27074:	sub	w0, w0, #0x1
   27078:	bl	26fa0 <udev_util_encode_string@@LIBUDEV_183+0x1b770>
   2707c:	add	w0, w0, #0x1
   27080:	ldp	x29, x30, [sp], #32
   27084:	ret
   27088:	stp	x29, x30, [sp, #-48]!
   2708c:	mov	x29, sp
   27090:	str	x0, [sp, #40]
   27094:	str	w1, [sp, #36]
   27098:	str	x2, [sp, #24]
   2709c:	ldr	x2, [sp, #24]
   270a0:	ldr	w1, [sp, #36]
   270a4:	ldr	x0, [sp, #40]
   270a8:	bl	5290 <memset@plt>
   270ac:	ldr	x1, [sp, #40]
   270b0:	ldr	x0, [sp, #24]
   270b4:	add	x0, x1, x0
   270b8:	ldp	x29, x30, [sp], #48
   270bc:	ret
   270c0:	stp	x29, x30, [sp, #-32]!
   270c4:	mov	x29, sp
   270c8:	str	x0, [sp, #24]
   270cc:	str	x1, [sp, #16]
   270d0:	ldr	x1, [sp, #16]
   270d4:	ldr	x0, [sp, #24]
   270d8:	bl	29b40 <udev_util_encode_string@@LIBUDEV_183+0x1e310>
   270dc:	and	w0, w0, #0xff
   270e0:	ldp	x29, x30, [sp], #32
   270e4:	ret
   270e8:	sub	sp, sp, #0x10
   270ec:	str	x0, [sp, #8]
   270f0:	ldr	x0, [sp, #8]
   270f4:	ldrb	w0, [x0, #47]
   270f8:	and	w0, w0, #0x4
   270fc:	and	w0, w0, #0xff
   27100:	cmp	w0, #0x0
   27104:	b.eq	27114 <udev_util_encode_string@@LIBUDEV_183+0x1b8e4>  // b.none
   27108:	ldr	x0, [sp, #8]
   2710c:	ldr	w0, [x0, #36]
   27110:	b	27140 <udev_util_encode_string@@LIBUDEV_183+0x1b910>
   27114:	ldr	x0, [sp, #8]
   27118:	ldrb	w0, [x0, #47]
   2711c:	ubfx	x0, x0, #0, #2
   27120:	and	w0, w0, #0xff
   27124:	mov	w2, w0
   27128:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2712c:	add	x1, x0, #0x6a8
   27130:	sxtw	x0, w2
   27134:	lsl	x0, x0, #5
   27138:	add	x0, x1, x0
   2713c:	ldr	w0, [x0, #24]
   27140:	add	sp, sp, #0x10
   27144:	ret
   27148:	sub	sp, sp, #0x10
   2714c:	str	x0, [sp, #8]
   27150:	ldr	x0, [sp, #8]
   27154:	ldrb	w0, [x0, #47]
   27158:	and	w0, w0, #0x4
   2715c:	and	w0, w0, #0xff
   27160:	cmp	w0, #0x0
   27164:	b.eq	27174 <udev_util_encode_string@@LIBUDEV_183+0x1b944>  // b.none
   27168:	ldr	x0, [sp, #8]
   2716c:	ldr	w0, [x0, #32]
   27170:	b	27184 <udev_util_encode_string@@LIBUDEV_183+0x1b954>
   27174:	ldr	x0, [sp, #8]
   27178:	ldrb	w0, [x0, #47]
   2717c:	ubfx	x0, x0, #3, #3
   27180:	and	w0, w0, #0xff
   27184:	add	sp, sp, #0x10
   27188:	ret
   2718c:	sub	sp, sp, #0x10
   27190:	str	x0, [sp, #8]
   27194:	ldr	x0, [sp, #8]
   27198:	ldrb	w0, [x0, #47]
   2719c:	and	w0, w0, #0x4
   271a0:	and	w0, w0, #0xff
   271a4:	cmp	w0, #0x0
   271a8:	b.eq	271c4 <udev_util_encode_string@@LIBUDEV_183+0x1b994>  // b.none
   271ac:	ldr	x0, [sp, #8]
   271b0:	ldr	w0, [x0, #32]
   271b4:	add	w1, w0, #0x1
   271b8:	ldr	x0, [sp, #8]
   271bc:	str	w1, [x0, #32]
   271c0:	b	271f0 <udev_util_encode_string@@LIBUDEV_183+0x1b9c0>
   271c4:	ldr	x0, [sp, #8]
   271c8:	ldrb	w0, [x0, #47]
   271cc:	ubfx	x0, x0, #3, #3
   271d0:	and	w0, w0, #0xff
   271d4:	add	w0, w0, #0x1
   271d8:	and	w0, w0, #0x7
   271dc:	and	w2, w0, #0xff
   271e0:	ldr	x1, [sp, #8]
   271e4:	ldrb	w0, [x1, #47]
   271e8:	bfi	w0, w2, #3, #3
   271ec:	strb	w0, [x1, #47]
   271f0:	nop
   271f4:	add	sp, sp, #0x10
   271f8:	ret
   271fc:	sub	sp, sp, #0x10
   27200:	str	x0, [sp, #8]
   27204:	ldr	x0, [sp, #8]
   27208:	ldrb	w0, [x0, #47]
   2720c:	and	w0, w0, #0x4
   27210:	and	w0, w0, #0xff
   27214:	cmp	w0, #0x0
   27218:	b.eq	27234 <udev_util_encode_string@@LIBUDEV_183+0x1ba04>  // b.none
   2721c:	ldr	x0, [sp, #8]
   27220:	ldr	w0, [x0, #32]
   27224:	sub	w1, w0, #0x1
   27228:	ldr	x0, [sp, #8]
   2722c:	str	w1, [x0, #32]
   27230:	b	27260 <udev_util_encode_string@@LIBUDEV_183+0x1ba30>
   27234:	ldr	x0, [sp, #8]
   27238:	ldrb	w0, [x0, #47]
   2723c:	ubfx	x0, x0, #3, #3
   27240:	and	w0, w0, #0xff
   27244:	add	w0, w0, #0x7
   27248:	and	w0, w0, #0x7
   2724c:	and	w2, w0, #0xff
   27250:	ldr	x1, [sp, #8]
   27254:	ldrb	w0, [x1, #47]
   27258:	bfi	w0, w2, #3, #3
   2725c:	strb	w0, [x1, #47]
   27260:	nop
   27264:	add	sp, sp, #0x10
   27268:	ret
   2726c:	sub	sp, sp, #0x10
   27270:	str	x0, [sp, #8]
   27274:	ldr	x0, [sp, #8]
   27278:	ldrb	w0, [x0, #47]
   2727c:	and	w0, w0, #0x4
   27280:	and	w0, w0, #0xff
   27284:	cmp	w0, #0x0
   27288:	b.eq	27298 <udev_util_encode_string@@LIBUDEV_183+0x1ba68>  // b.none
   2728c:	ldr	x0, [sp, #8]
   27290:	ldr	x0, [x0, #8]
   27294:	b	272a0 <udev_util_encode_string@@LIBUDEV_183+0x1ba70>
   27298:	ldr	x0, [sp, #8]
   2729c:	add	x0, x0, #0x8
   272a0:	add	sp, sp, #0x10
   272a4:	ret
   272a8:	sub	sp, sp, #0x10
   272ac:	str	x0, [sp, #8]
   272b0:	ldr	x0, [sp, #8]
   272b4:	ldrb	w0, [x0, #47]
   272b8:	and	w0, w0, #0x4
   272bc:	and	w0, w0, #0xff
   272c0:	cmp	w0, #0x0
   272c4:	b.eq	272d4 <udev_util_encode_string@@LIBUDEV_183+0x1baa4>  // b.none
   272c8:	ldr	x0, [sp, #8]
   272cc:	add	x0, x0, #0x10
   272d0:	b	272dc <udev_util_encode_string@@LIBUDEV_183+0x1baac>
   272d4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   272d8:	add	x0, x0, #0xf0
   272dc:	add	sp, sp, #0x10
   272e0:	ret
   272e4:	stp	x29, x30, [sp, #-96]!
   272e8:	mov	x29, sp
   272ec:	str	x0, [sp, #24]
   272f0:	str	x1, [sp, #16]
   272f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   272f8:	ldr	x0, [x0, #4016]
   272fc:	ldr	x1, [x0]
   27300:	str	x1, [sp, #88]
   27304:	mov	x1, #0x0                   	// #0
   27308:	ldr	x0, [sp, #24]
   2730c:	bl	272a8 <udev_util_encode_string@@LIBUDEV_183+0x1ba78>
   27310:	mov	x1, x0
   27314:	add	x0, sp, #0x28
   27318:	bl	33174 <udev_util_encode_string@@LIBUDEV_183+0x27944>
   2731c:	ldr	x0, [sp, #24]
   27320:	ldr	x0, [x0]
   27324:	ldr	x2, [x0]
   27328:	add	x0, sp, #0x28
   2732c:	mov	x1, x0
   27330:	ldr	x0, [sp, #16]
   27334:	blr	x2
   27338:	add	x0, sp, #0x28
   2733c:	bl	336e8 <udev_util_encode_string@@LIBUDEV_183+0x27eb8>
   27340:	str	x0, [sp, #32]
   27344:	ldr	x0, [sp, #24]
   27348:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   2734c:	mov	w1, w0
   27350:	ldr	x0, [sp, #32]
   27354:	udiv	x2, x0, x1
   27358:	mul	x1, x2, x1
   2735c:	sub	x0, x0, x1
   27360:	mov	w1, w0
   27364:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   27368:	ldr	x0, [x0, #4016]
   2736c:	ldr	x2, [sp, #88]
   27370:	ldr	x0, [x0]
   27374:	eor	x0, x2, x0
   27378:	cmp	x0, #0x0
   2737c:	b.eq	27384 <udev_util_encode_string@@LIBUDEV_183+0x1bb54>  // b.none
   27380:	bl	5390 <__stack_chk_fail@plt>
   27384:	mov	w0, w1
   27388:	ldp	x29, x30, [sp], #96
   2738c:	ret
   27390:	sub	sp, sp, #0x10
   27394:	str	x0, [sp, #8]
   27398:	ldr	x0, [sp, #8]
   2739c:	ldrb	w1, [x0, #47]
   273a0:	orr	w1, w1, #0xffffff80
   273a4:	strb	w1, [x0, #47]
   273a8:	nop
   273ac:	add	sp, sp, #0x10
   273b0:	ret
   273b4:	stp	x29, x30, [sp, #-32]!
   273b8:	mov	x29, sp
   273bc:	str	x0, [sp, #24]
   273c0:	strb	w1, [sp, #23]
   273c4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   273c8:	add	x0, x0, #0x101
   273cc:	ldrb	w0, [x0]
   273d0:	eor	w0, w0, #0x1
   273d4:	and	w0, w0, #0xff
   273d8:	cmp	w0, #0x0
   273dc:	b.ne	273f4 <udev_util_encode_string@@LIBUDEV_183+0x1bbc4>  // b.any
   273e0:	ldrb	w0, [sp, #23]
   273e4:	eor	w0, w0, #0x1
   273e8:	and	w0, w0, #0xff
   273ec:	cmp	w0, #0x0
   273f0:	b.eq	27414 <udev_util_encode_string@@LIBUDEV_183+0x1bbe4>  // b.none
   273f4:	mov	x1, #0x10                  	// #16
   273f8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   273fc:	add	x0, x0, #0x108
   27400:	bl	32d94 <udev_util_encode_string@@LIBUDEV_183+0x27564>
   27404:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   27408:	add	x0, x0, #0x101
   2740c:	mov	w1, #0x1                   	// #1
   27410:	strb	w1, [x0]
   27414:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   27418:	add	x0, x0, #0x108
   2741c:	ldp	x0, x1, [x0]
   27420:	ldr	x2, [sp, #24]
   27424:	stp	x0, x1, [x2]
   27428:	nop
   2742c:	ldp	x29, x30, [sp], #32
   27430:	ret
   27434:	stp	x29, x30, [sp, #-32]!
   27438:	mov	x29, sp
   2743c:	str	x0, [sp, #24]
   27440:	str	w1, [sp, #20]
   27444:	ldr	x0, [sp, #24]
   27448:	bl	2726c <udev_util_encode_string@@LIBUDEV_183+0x1ba3c>
   2744c:	mov	x3, x0
   27450:	ldr	w1, [sp, #20]
   27454:	ldr	x0, [sp, #24]
   27458:	ldrb	w0, [x0, #47]
   2745c:	ubfx	x0, x0, #0, #2
   27460:	and	w0, w0, #0xff
   27464:	mov	w4, w0
   27468:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2746c:	add	x2, x0, #0x6a8
   27470:	sxtw	x0, w4
   27474:	lsl	x0, x0, #5
   27478:	add	x0, x2, x0
   2747c:	ldr	x0, [x0, #8]
   27480:	mul	x0, x1, x0
   27484:	add	x0, x3, x0
   27488:	ldp	x29, x30, [sp], #32
   2748c:	ret
   27490:	stp	x29, x30, [sp, #-32]!
   27494:	mov	x29, sp
   27498:	str	x0, [sp, #24]
   2749c:	str	w1, [sp, #20]
   274a0:	ldr	w1, [sp, #20]
   274a4:	ldr	x0, [sp, #24]
   274a8:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   274ac:	ldp	x29, x30, [sp], #32
   274b0:	ret
   274b4:	stp	x29, x30, [sp, #-32]!
   274b8:	mov	x29, sp
   274bc:	str	x0, [sp, #24]
   274c0:	str	w1, [sp, #20]
   274c4:	ldr	w1, [sp, #20]
   274c8:	ldr	x0, [sp, #24]
   274cc:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   274d0:	ldp	x29, x30, [sp], #32
   274d4:	ret
   274d8:	sub	sp, sp, #0x10
   274dc:	str	x0, [sp, #8]
   274e0:	str	w1, [sp, #4]
   274e4:	ldr	w0, [sp, #4]
   274e8:	add	w0, w0, #0x4
   274ec:	mov	w1, w0
   274f0:	mov	x0, x1
   274f4:	lsl	x0, x0, #1
   274f8:	add	x0, x0, x1
   274fc:	lsl	x0, x0, #3
   27500:	ldr	x1, [sp, #8]
   27504:	add	x0, x1, x0
   27508:	add	sp, sp, #0x10
   2750c:	ret
   27510:	stp	x29, x30, [sp, #-48]!
   27514:	mov	x29, sp
   27518:	str	x0, [sp, #40]
   2751c:	str	x1, [sp, #32]
   27520:	str	w2, [sp, #28]
   27524:	ldr	w0, [sp, #28]
   27528:	cmn	w0, #0x5
   2752c:	b.hi	27540 <udev_util_encode_string@@LIBUDEV_183+0x1bd10>  // b.pmore
   27530:	ldr	w1, [sp, #28]
   27534:	ldr	x0, [sp, #40]
   27538:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   2753c:	b	27584 <udev_util_encode_string@@LIBUDEV_183+0x1bd54>
   27540:	ldr	w0, [sp, #28]
   27544:	cmn	w0, #0x3
   27548:	b.hi	2755c <udev_util_encode_string@@LIBUDEV_183+0x1bd2c>  // b.pmore
   2754c:	ldr	w1, [sp, #28]
   27550:	ldr	x0, [sp, #32]
   27554:	bl	274d8 <udev_util_encode_string@@LIBUDEV_183+0x1bca8>
   27558:	b	27584 <udev_util_encode_string@@LIBUDEV_183+0x1bd54>
   2755c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27560:	add	x1, x0, #0xc93
   27564:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27568:	add	x4, x0, #0xfe8
   2756c:	mov	w3, #0x197                 	// #407
   27570:	mov	x2, x1
   27574:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27578:	add	x1, x0, #0xca8
   2757c:	mov	w0, #0x0                   	// #0
   27580:	bl	2dc30 <udev_util_encode_string@@LIBUDEV_183+0x22400>
   27584:	ldp	x29, x30, [sp], #48
   27588:	ret
   2758c:	stp	x29, x30, [sp, #-48]!
   27590:	mov	x29, sp
   27594:	stp	x19, x20, [sp, #16]
   27598:	str	x0, [sp, #40]
   2759c:	ldr	x0, [sp, #40]
   275a0:	bl	2726c <udev_util_encode_string@@LIBUDEV_183+0x1ba3c>
   275a4:	mov	x20, x0
   275a8:	ldr	x0, [sp, #40]
   275ac:	ldrb	w0, [x0, #47]
   275b0:	ubfx	x0, x0, #0, #2
   275b4:	and	w0, w0, #0xff
   275b8:	mov	w2, w0
   275bc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   275c0:	add	x1, x0, #0x6a8
   275c4:	sxtw	x0, w2
   275c8:	lsl	x0, x0, #5
   275cc:	add	x0, x1, x0
   275d0:	ldr	x19, [x0, #8]
   275d4:	ldr	x0, [sp, #40]
   275d8:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   275dc:	mov	w0, w0
   275e0:	mul	x0, x19, x0
   275e4:	add	x0, x20, x0
   275e8:	ldp	x19, x20, [sp, #16]
   275ec:	ldp	x29, x30, [sp], #48
   275f0:	ret
   275f4:	stp	x29, x30, [sp, #-32]!
   275f8:	mov	x29, sp
   275fc:	str	x0, [sp, #24]
   27600:	str	w1, [sp, #20]
   27604:	str	w2, [sp, #16]
   27608:	ldr	w1, [sp, #20]
   2760c:	ldr	w0, [sp, #16]
   27610:	cmp	w1, w0
   27614:	b.cc	27628 <udev_util_encode_string@@LIBUDEV_183+0x1bdf8>  // b.lo, b.ul, b.last
   27618:	ldr	w1, [sp, #20]
   2761c:	ldr	w0, [sp, #16]
   27620:	sub	w0, w1, w0
   27624:	b	27644 <udev_util_encode_string@@LIBUDEV_183+0x1be14>
   27628:	ldr	x0, [sp, #24]
   2762c:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   27630:	mov	w1, w0
   27634:	ldr	w0, [sp, #20]
   27638:	add	w1, w1, w0
   2763c:	ldr	w0, [sp, #16]
   27640:	sub	w0, w1, w0
   27644:	ldp	x29, x30, [sp], #32
   27648:	ret
   2764c:	stp	x29, x30, [sp, #-48]!
   27650:	mov	x29, sp
   27654:	str	x0, [sp, #24]
   27658:	str	w1, [sp, #20]
   2765c:	strb	w2, [sp, #19]
   27660:	ldrb	w0, [sp, #19]
   27664:	cmp	w0, #0xff
   27668:	b.ne	27674 <udev_util_encode_string@@LIBUDEV_183+0x1be44>  // b.any
   2766c:	mov	w0, #0xffffffff            	// #-1
   27670:	b	276c8 <udev_util_encode_string@@LIBUDEV_183+0x1be98>
   27674:	ldrb	w0, [sp, #19]
   27678:	cmp	w0, #0xfc
   2767c:	cset	w0, ls  // ls = plast
   27680:	and	w0, w0, #0xff
   27684:	and	x0, x0, #0xff
   27688:	cmp	x0, #0x0
   2768c:	b.eq	27698 <udev_util_encode_string@@LIBUDEV_183+0x1be68>  // b.none
   27690:	ldrb	w0, [sp, #19]
   27694:	b	276c8 <udev_util_encode_string@@LIBUDEV_183+0x1be98>
   27698:	ldr	w1, [sp, #20]
   2769c:	ldr	x0, [sp, #24]
   276a0:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   276a4:	ldr	x0, [x0]
   276a8:	mov	x1, x0
   276ac:	ldr	x0, [sp, #24]
   276b0:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   276b4:	str	w0, [sp, #44]
   276b8:	ldr	w2, [sp, #44]
   276bc:	ldr	w1, [sp, #20]
   276c0:	ldr	x0, [sp, #24]
   276c4:	bl	275f4 <udev_util_encode_string@@LIBUDEV_183+0x1bdc4>
   276c8:	ldp	x29, x30, [sp], #48
   276cc:	ret
   276d0:	stp	x29, x30, [sp, #-64]!
   276d4:	mov	x29, sp
   276d8:	str	x19, [sp, #16]
   276dc:	str	x0, [sp, #40]
   276e0:	str	w1, [sp, #36]
   276e4:	str	w2, [sp, #32]
   276e8:	ldr	w0, [sp, #32]
   276ec:	cmn	w0, #0x1
   276f0:	b.eq	27720 <udev_util_encode_string@@LIBUDEV_183+0x1bef0>  // b.none
   276f4:	ldr	w0, [sp, #32]
   276f8:	str	w0, [sp, #60]
   276fc:	mov	w0, #0xfffffffd            	// #-3
   27700:	strb	w0, [sp, #59]
   27704:	ldrb	w0, [sp, #59]
   27708:	ldr	w2, [sp, #60]
   2770c:	ldr	w1, [sp, #60]
   27710:	cmp	w2, w0
   27714:	csel	w0, w1, w0, ls  // ls = plast
   27718:	and	w19, w0, #0xff
   2771c:	b	27724 <udev_util_encode_string@@LIBUDEV_183+0x1bef4>
   27720:	mov	w19, #0xff                  	// #255
   27724:	ldr	x0, [sp, #40]
   27728:	bl	2758c <udev_util_encode_string@@LIBUDEV_183+0x1bd5c>
   2772c:	mov	x1, x0
   27730:	ldr	w0, [sp, #36]
   27734:	add	x0, x1, x0
   27738:	mov	w1, w19
   2773c:	strb	w1, [x0]
   27740:	nop
   27744:	ldr	x19, [sp, #16]
   27748:	ldp	x29, x30, [sp], #64
   2774c:	ret
   27750:	stp	x29, x30, [sp, #-48]!
   27754:	mov	x29, sp
   27758:	str	x0, [sp, #24]
   2775c:	str	w1, [sp, #20]
   27760:	ldr	x0, [sp, #24]
   27764:	bl	2758c <udev_util_encode_string@@LIBUDEV_183+0x1bd5c>
   27768:	str	x0, [sp, #40]
   2776c:	b	2779c <udev_util_encode_string@@LIBUDEV_183+0x1bf6c>
   27770:	ldr	w0, [sp, #20]
   27774:	ldr	x1, [sp, #40]
   27778:	add	x0, x1, x0
   2777c:	ldrb	w0, [x0]
   27780:	cmp	w0, #0xff
   27784:	b.eq	27790 <udev_util_encode_string@@LIBUDEV_183+0x1bf60>  // b.none
   27788:	ldr	w0, [sp, #20]
   2778c:	b	277b8 <udev_util_encode_string@@LIBUDEV_183+0x1bf88>
   27790:	ldr	w0, [sp, #20]
   27794:	add	w0, w0, #0x1
   27798:	str	w0, [sp, #20]
   2779c:	ldr	x0, [sp, #24]
   277a0:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   277a4:	mov	w1, w0
   277a8:	ldr	w0, [sp, #20]
   277ac:	cmp	w0, w1
   277b0:	b.cc	27770 <udev_util_encode_string@@LIBUDEV_183+0x1bf40>  // b.lo, b.ul, b.last
   277b4:	mov	w0, #0xffffffff            	// #-1
   277b8:	ldp	x29, x30, [sp], #48
   277bc:	ret
   277c0:	stp	x29, x30, [sp, #-48]!
   277c4:	mov	x29, sp
   277c8:	str	x0, [sp, #24]
   277cc:	str	w1, [sp, #20]
   277d0:	ldr	x0, [sp, #24]
   277d4:	ldrb	w0, [x0, #47]
   277d8:	ubfx	x0, x0, #0, #2
   277dc:	and	w0, w0, #0xff
   277e0:	mov	w2, w0
   277e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   277e8:	add	x1, x0, #0x6a8
   277ec:	sxtw	x0, w2
   277f0:	lsl	x0, x0, #5
   277f4:	add	x0, x1, x0
   277f8:	ldr	x0, [x0, #8]
   277fc:	str	x0, [sp, #40]
   27800:	ldr	x0, [sp, #40]
   27804:	cmp	x0, #0x0
   27808:	b.eq	27824 <udev_util_encode_string@@LIBUDEV_183+0x1bff4>  // b.none
   2780c:	ldr	w1, [sp, #20]
   27810:	ldr	x0, [sp, #24]
   27814:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   27818:	ldr	x2, [sp, #40]
   2781c:	mov	w1, #0x0                   	// #0
   27820:	bl	5290 <memset@plt>
   27824:	mov	w2, #0xffffffff            	// #-1
   27828:	ldr	w1, [sp, #20]
   2782c:	ldr	x0, [sp, #24]
   27830:	bl	276d0 <udev_util_encode_string@@LIBUDEV_183+0x1bea0>
   27834:	nop
   27838:	ldp	x29, x30, [sp], #48
   2783c:	ret
   27840:	stp	x29, x30, [sp, #-96]!
   27844:	mov	x29, sp
   27848:	str	x0, [sp, #40]
   2784c:	str	x1, [sp, #32]
   27850:	str	w2, [sp, #28]
   27854:	str	w3, [sp, #24]
   27858:	ldr	w1, [sp, #28]
   2785c:	ldr	w0, [sp, #24]
   27860:	cmp	w1, w0
   27864:	cset	w0, eq  // eq = none
   27868:	and	w0, w0, #0xff
   2786c:	and	x0, x0, #0xff
   27870:	cmp	x0, #0x0
   27874:	b.eq	278a0 <udev_util_encode_string@@LIBUDEV_183+0x1c070>  // b.none
   27878:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2787c:	add	x1, x0, #0xc93
   27880:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27884:	add	x4, x0, #0x0
   27888:	mov	w3, #0x1d4                 	// #468
   2788c:	mov	x2, x1
   27890:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27894:	add	x1, x0, #0xcb8
   27898:	mov	w0, #0x0                   	// #0
   2789c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   278a0:	ldr	w2, [sp, #28]
   278a4:	ldr	x1, [sp, #32]
   278a8:	ldr	x0, [sp, #40]
   278ac:	bl	27510 <udev_util_encode_string@@LIBUDEV_183+0x1bce0>
   278b0:	str	x0, [sp, #56]
   278b4:	ldr	w2, [sp, #24]
   278b8:	ldr	x1, [sp, #32]
   278bc:	ldr	x0, [sp, #40]
   278c0:	bl	27510 <udev_util_encode_string@@LIBUDEV_183+0x1bce0>
   278c4:	str	x0, [sp, #64]
   278c8:	ldr	x0, [sp, #40]
   278cc:	ldrb	w0, [x0, #47]
   278d0:	ubfx	x0, x0, #0, #2
   278d4:	and	w0, w0, #0xff
   278d8:	mov	w2, w0
   278dc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   278e0:	add	x1, x0, #0x6a8
   278e4:	sxtw	x0, w2
   278e8:	lsl	x0, x0, #5
   278ec:	add	x0, x1, x0
   278f0:	ldr	x0, [x0, #8]
   278f4:	mov	x2, x0
   278f8:	ldr	x1, [sp, #56]
   278fc:	ldr	x0, [sp, #64]
   27900:	bl	5010 <memcpy@plt>
   27904:	ldr	x0, [sp, #40]
   27908:	ldrb	w0, [x0, #47]
   2790c:	and	w0, w0, #0x3
   27910:	and	w0, w0, #0xff
   27914:	cmp	w0, #0x1
   27918:	b.ne	279dc <udev_util_encode_string@@LIBUDEV_183+0x1c1ac>  // b.any
   2791c:	ldr	x0, [sp, #40]
   27920:	str	x0, [sp, #72]
   27924:	ldr	x0, [sp, #64]
   27928:	str	x0, [sp, #80]
   2792c:	ldr	x0, [sp, #80]
   27930:	ldr	w0, [x0, #16]
   27934:	cmn	w0, #0x1
   27938:	b.eq	27964 <udev_util_encode_string@@LIBUDEV_183+0x1c134>  // b.none
   2793c:	ldr	x0, [sp, #80]
   27940:	ldr	w0, [x0, #16]
   27944:	mov	w2, w0
   27948:	ldr	x1, [sp, #32]
   2794c:	ldr	x0, [sp, #40]
   27950:	bl	27510 <udev_util_encode_string@@LIBUDEV_183+0x1bce0>
   27954:	str	x0, [sp, #88]
   27958:	ldr	x0, [sp, #88]
   2795c:	ldr	w1, [sp, #24]
   27960:	str	w1, [x0, #20]
   27964:	ldr	x0, [sp, #80]
   27968:	ldr	w0, [x0, #20]
   2796c:	cmn	w0, #0x1
   27970:	b.eq	2799c <udev_util_encode_string@@LIBUDEV_183+0x1c16c>  // b.none
   27974:	ldr	x0, [sp, #80]
   27978:	ldr	w0, [x0, #20]
   2797c:	mov	w2, w0
   27980:	ldr	x1, [sp, #32]
   27984:	ldr	x0, [sp, #40]
   27988:	bl	27510 <udev_util_encode_string@@LIBUDEV_183+0x1bce0>
   2798c:	str	x0, [sp, #88]
   27990:	ldr	x0, [sp, #88]
   27994:	ldr	w1, [sp, #24]
   27998:	str	w1, [x0, #16]
   2799c:	ldr	x0, [sp, #72]
   279a0:	ldr	w0, [x0, #56]
   279a4:	ldr	w1, [sp, #28]
   279a8:	cmp	w1, w0
   279ac:	b.ne	279bc <udev_util_encode_string@@LIBUDEV_183+0x1c18c>  // b.any
   279b0:	ldr	x0, [sp, #72]
   279b4:	ldr	w1, [sp, #24]
   279b8:	str	w1, [x0, #56]
   279bc:	ldr	x0, [sp, #72]
   279c0:	ldr	w0, [x0, #60]
   279c4:	ldr	w1, [sp, #28]
   279c8:	cmp	w1, w0
   279cc:	b.ne	279dc <udev_util_encode_string@@LIBUDEV_183+0x1c1ac>  // b.any
   279d0:	ldr	x0, [sp, #72]
   279d4:	ldr	w1, [sp, #24]
   279d8:	str	w1, [x0, #60]
   279dc:	nop
   279e0:	ldp	x29, x30, [sp], #96
   279e4:	ret
   279e8:	stp	x29, x30, [sp, #-48]!
   279ec:	mov	x29, sp
   279f0:	str	x19, [sp, #16]
   279f4:	str	x0, [sp, #40]
   279f8:	str	w1, [sp, #36]
   279fc:	ldr	w0, [sp, #36]
   27a00:	add	w19, w0, #0x1
   27a04:	ldr	x0, [sp, #40]
   27a08:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   27a0c:	udiv	w1, w19, w0
   27a10:	mul	w0, w1, w0
   27a14:	sub	w0, w19, w0
   27a18:	ldr	x19, [sp, #16]
   27a1c:	ldp	x29, x30, [sp], #48
   27a20:	ret
   27a24:	stp	x29, x30, [sp, #-48]!
   27a28:	mov	x29, sp
   27a2c:	str	x19, [sp, #16]
   27a30:	str	x0, [sp, #40]
   27a34:	str	w1, [sp, #36]
   27a38:	ldr	x0, [sp, #40]
   27a3c:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   27a40:	mov	w1, w0
   27a44:	ldr	w0, [sp, #36]
   27a48:	add	w0, w1, w0
   27a4c:	sub	w19, w0, #0x1
   27a50:	ldr	x0, [sp, #40]
   27a54:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   27a58:	udiv	w1, w19, w0
   27a5c:	mul	w0, w1, w0
   27a60:	sub	w0, w19, w0
   27a64:	ldr	x19, [sp, #16]
   27a68:	ldp	x29, x30, [sp], #48
   27a6c:	ret
   27a70:	stp	x29, x30, [sp, #-32]!
   27a74:	mov	x29, sp
   27a78:	str	x0, [sp, #24]
   27a7c:	str	x1, [sp, #16]
   27a80:	ldr	x0, [sp, #24]
   27a84:	ldrb	w0, [x0, #47]
   27a88:	ubfx	x0, x0, #0, #2
   27a8c:	and	w0, w0, #0xff
   27a90:	cmp	w0, #0x1
   27a94:	b.gt	27aa4 <udev_util_encode_string@@LIBUDEV_183+0x1c274>
   27a98:	cmp	w0, #0x0
   27a9c:	b.ge	27ab0 <udev_util_encode_string@@LIBUDEV_183+0x1c280>  // b.tcont
   27aa0:	b	27ac8 <udev_util_encode_string@@LIBUDEV_183+0x1c298>
   27aa4:	cmp	w0, #0x2
   27aa8:	b.eq	27abc <udev_util_encode_string@@LIBUDEV_183+0x1c28c>  // b.none
   27aac:	b	27ac8 <udev_util_encode_string@@LIBUDEV_183+0x1c298>
   27ab0:	ldr	x0, [sp, #16]
   27ab4:	ldr	x0, [x0, #8]
   27ab8:	b	27af0 <udev_util_encode_string@@LIBUDEV_183+0x1c2c0>
   27abc:	ldr	x0, [sp, #16]
   27ac0:	ldr	x0, [x0]
   27ac4:	b	27af0 <udev_util_encode_string@@LIBUDEV_183+0x1c2c0>
   27ac8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27acc:	add	x1, x0, #0xc93
   27ad0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27ad4:	add	x4, x0, #0x18
   27ad8:	mov	w3, #0x207                 	// #519
   27adc:	mov	x2, x1
   27ae0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27ae4:	add	x1, x0, #0xcc8
   27ae8:	mov	w0, #0x0                   	// #0
   27aec:	bl	2dc30 <udev_util_encode_string@@LIBUDEV_183+0x22400>
   27af0:	ldp	x29, x30, [sp], #32
   27af4:	ret
   27af8:	stp	x29, x30, [sp, #-80]!
   27afc:	mov	x29, sp
   27b00:	str	x0, [sp, #24]
   27b04:	str	w1, [sp, #20]
   27b08:	ldr	x0, [sp, #24]
   27b0c:	bl	2758c <udev_util_encode_string@@LIBUDEV_183+0x1bd5c>
   27b10:	str	x0, [sp, #56]
   27b14:	ldr	w0, [sp, #20]
   27b18:	ldr	x1, [sp, #56]
   27b1c:	add	x0, x1, x0
   27b20:	ldrb	w0, [x0]
   27b24:	cmp	w0, #0xff
   27b28:	cset	w0, eq  // eq = none
   27b2c:	and	w0, w0, #0xff
   27b30:	and	x0, x0, #0xff
   27b34:	cmp	x0, #0x0
   27b38:	b.eq	27b64 <udev_util_encode_string@@LIBUDEV_183+0x1c334>  // b.none
   27b3c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27b40:	add	x1, x0, #0xc93
   27b44:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27b48:	add	x4, x0, #0x28
   27b4c:	mov	w3, #0x210                 	// #528
   27b50:	mov	x2, x1
   27b54:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27b58:	add	x1, x0, #0xce0
   27b5c:	mov	w0, #0x0                   	// #0
   27b60:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   27b64:	ldr	w0, [sp, #20]
   27b68:	str	w0, [sp, #40]
   27b6c:	ldr	w1, [sp, #40]
   27b70:	ldr	x0, [sp, #24]
   27b74:	bl	279e8 <udev_util_encode_string@@LIBUDEV_183+0x1c1b8>
   27b78:	str	w0, [sp, #44]
   27b7c:	ldr	w0, [sp, #44]
   27b80:	ldr	x1, [sp, #56]
   27b84:	add	x0, x1, x0
   27b88:	ldrb	w0, [x0]
   27b8c:	strb	w0, [sp, #39]
   27b90:	strb	wzr, [sp, #38]
   27b94:	ldrb	w0, [sp, #39]
   27b98:	cmp	w0, #0x0
   27b9c:	b.eq	27ba8 <udev_util_encode_string@@LIBUDEV_183+0x1c378>  // b.none
   27ba0:	cmp	w0, #0xff
   27ba4:	b.ne	27bb0 <udev_util_encode_string@@LIBUDEV_183+0x1c380>  // b.any
   27ba8:	mov	w0, #0x1                   	// #1
   27bac:	strb	w0, [sp, #38]
   27bb0:	nop
   27bb4:	ldrb	w0, [sp, #38]
   27bb8:	cmp	w0, #0x0
   27bbc:	b.ne	27c1c <udev_util_encode_string@@LIBUDEV_183+0x1c3ec>  // b.any
   27bc0:	ldr	w1, [sp, #40]
   27bc4:	ldr	w0, [sp, #44]
   27bc8:	cmp	w1, w0
   27bcc:	cset	w0, eq  // eq = none
   27bd0:	and	w0, w0, #0xff
   27bd4:	and	x0, x0, #0xff
   27bd8:	cmp	x0, #0x0
   27bdc:	b.eq	27c08 <udev_util_encode_string@@LIBUDEV_183+0x1c3d8>  // b.none
   27be0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27be4:	add	x1, x0, #0xc93
   27be8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27bec:	add	x4, x0, #0x28
   27bf0:	mov	w3, #0x221                 	// #545
   27bf4:	mov	x2, x1
   27bf8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27bfc:	add	x1, x0, #0xd00
   27c00:	mov	w0, #0x0                   	// #0
   27c04:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   27c08:	ldr	w1, [sp, #44]
   27c0c:	ldr	x0, [sp, #24]
   27c10:	bl	279e8 <udev_util_encode_string@@LIBUDEV_183+0x1c1b8>
   27c14:	str	w0, [sp, #44]
   27c18:	b	27b7c <udev_util_encode_string@@LIBUDEV_183+0x1c34c>
   27c1c:	nop
   27c20:	ldr	x0, [sp, #24]
   27c24:	ldrb	w0, [x0, #47]
   27c28:	and	w0, w0, #0x3
   27c2c:	and	w0, w0, #0xff
   27c30:	cmp	w0, #0x1
   27c34:	b.ne	27ce0 <udev_util_encode_string@@LIBUDEV_183+0x1c4b0>  // b.any
   27c38:	ldr	x0, [sp, #24]
   27c3c:	str	x0, [sp, #64]
   27c40:	ldr	w1, [sp, #20]
   27c44:	ldr	x0, [sp, #64]
   27c48:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27c4c:	str	x0, [sp, #72]
   27c50:	ldr	x0, [sp, #72]
   27c54:	ldr	w0, [x0, #16]
   27c58:	cmn	w0, #0x1
   27c5c:	b.eq	27c88 <udev_util_encode_string@@LIBUDEV_183+0x1c458>  // b.none
   27c60:	ldr	x0, [sp, #72]
   27c64:	ldr	w0, [x0, #16]
   27c68:	mov	w1, w0
   27c6c:	ldr	x0, [sp, #64]
   27c70:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27c74:	mov	x1, x0
   27c78:	ldr	x0, [sp, #72]
   27c7c:	ldr	w0, [x0, #20]
   27c80:	str	w0, [x1, #20]
   27c84:	b	27c98 <udev_util_encode_string@@LIBUDEV_183+0x1c468>
   27c88:	ldr	x0, [sp, #72]
   27c8c:	ldr	w1, [x0, #20]
   27c90:	ldr	x0, [sp, #64]
   27c94:	str	w1, [x0, #60]
   27c98:	ldr	x0, [sp, #72]
   27c9c:	ldr	w0, [x0, #20]
   27ca0:	cmn	w0, #0x1
   27ca4:	b.eq	27cd0 <udev_util_encode_string@@LIBUDEV_183+0x1c4a0>  // b.none
   27ca8:	ldr	x0, [sp, #72]
   27cac:	ldr	w0, [x0, #20]
   27cb0:	mov	w1, w0
   27cb4:	ldr	x0, [sp, #64]
   27cb8:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27cbc:	mov	x1, x0
   27cc0:	ldr	x0, [sp, #72]
   27cc4:	ldr	w0, [x0, #16]
   27cc8:	str	w0, [x1, #16]
   27ccc:	b	27ce0 <udev_util_encode_string@@LIBUDEV_183+0x1c4b0>
   27cd0:	ldr	x0, [sp, #72]
   27cd4:	ldr	w1, [x0, #16]
   27cd8:	ldr	x0, [sp, #64]
   27cdc:	str	w1, [x0, #56]
   27ce0:	ldr	w0, [sp, #40]
   27ce4:	str	w0, [sp, #48]
   27ce8:	ldr	w1, [sp, #40]
   27cec:	ldr	x0, [sp, #24]
   27cf0:	bl	279e8 <udev_util_encode_string@@LIBUDEV_183+0x1c1b8>
   27cf4:	str	w0, [sp, #40]
   27cf8:	b	27da8 <udev_util_encode_string@@LIBUDEV_183+0x1c578>
   27cfc:	ldr	w0, [sp, #40]
   27d00:	ldr	x1, [sp, #56]
   27d04:	add	x0, x1, x0
   27d08:	ldrb	w0, [x0]
   27d0c:	mov	w2, w0
   27d10:	ldr	w1, [sp, #40]
   27d14:	ldr	x0, [sp, #24]
   27d18:	bl	2764c <udev_util_encode_string@@LIBUDEV_183+0x1be1c>
   27d1c:	str	w0, [sp, #52]
   27d20:	ldr	w0, [sp, #52]
   27d24:	cmp	w0, #0x0
   27d28:	cset	w0, eq  // eq = none
   27d2c:	and	w0, w0, #0xff
   27d30:	and	x0, x0, #0xff
   27d34:	cmp	x0, #0x0
   27d38:	b.eq	27d64 <udev_util_encode_string@@LIBUDEV_183+0x1c534>  // b.none
   27d3c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27d40:	add	x1, x0, #0xc93
   27d44:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27d48:	add	x4, x0, #0x28
   27d4c:	mov	w3, #0x237                 	// #567
   27d50:	mov	x2, x1
   27d54:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27d58:	add	x1, x0, #0xd10
   27d5c:	mov	w0, #0x0                   	// #0
   27d60:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   27d64:	ldr	w3, [sp, #48]
   27d68:	ldr	w2, [sp, #40]
   27d6c:	mov	x1, #0x0                   	// #0
   27d70:	ldr	x0, [sp, #24]
   27d74:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   27d78:	ldr	w0, [sp, #52]
   27d7c:	sub	w0, w0, #0x1
   27d80:	mov	w2, w0
   27d84:	ldr	w1, [sp, #48]
   27d88:	ldr	x0, [sp, #24]
   27d8c:	bl	276d0 <udev_util_encode_string@@LIBUDEV_183+0x1bea0>
   27d90:	ldr	w0, [sp, #40]
   27d94:	str	w0, [sp, #48]
   27d98:	ldr	w1, [sp, #40]
   27d9c:	ldr	x0, [sp, #24]
   27da0:	bl	279e8 <udev_util_encode_string@@LIBUDEV_183+0x1c1b8>
   27da4:	str	w0, [sp, #40]
   27da8:	ldr	w1, [sp, #40]
   27dac:	ldr	w0, [sp, #44]
   27db0:	cmp	w1, w0
   27db4:	b.ne	27cfc <udev_util_encode_string@@LIBUDEV_183+0x1c4cc>  // b.any
   27db8:	ldr	w1, [sp, #48]
   27dbc:	ldr	x0, [sp, #24]
   27dc0:	bl	277c0 <udev_util_encode_string@@LIBUDEV_183+0x1bf90>
   27dc4:	ldr	x0, [sp, #24]
   27dc8:	bl	271fc <udev_util_encode_string@@LIBUDEV_183+0x1b9cc>
   27dcc:	ldr	x0, [sp, #24]
   27dd0:	bl	27390 <udev_util_encode_string@@LIBUDEV_183+0x1bb60>
   27dd4:	nop
   27dd8:	ldp	x29, x30, [sp], #80
   27ddc:	ret
   27de0:	stp	x29, x30, [sp, #-64]!
   27de4:	mov	x29, sp
   27de8:	str	x0, [sp, #24]
   27dec:	str	x1, [sp, #16]
   27df0:	ldr	x0, [sp, #24]
   27df4:	cmp	x0, #0x0
   27df8:	cset	w0, eq  // eq = none
   27dfc:	and	w0, w0, #0xff
   27e00:	and	x0, x0, #0xff
   27e04:	cmp	x0, #0x0
   27e08:	b.eq	27e34 <udev_util_encode_string@@LIBUDEV_183+0x1c604>  // b.none
   27e0c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27e10:	add	x1, x0, #0xc93
   27e14:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27e18:	add	x4, x0, #0x40
   27e1c:	mov	w3, #0x246                 	// #582
   27e20:	mov	x2, x1
   27e24:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27e28:	add	x1, x0, #0xd20
   27e2c:	mov	w0, #0x0                   	// #0
   27e30:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   27e34:	ldr	x0, [sp, #16]
   27e38:	cmp	x0, #0x0
   27e3c:	cset	w0, eq  // eq = none
   27e40:	and	w0, w0, #0xff
   27e44:	and	x0, x0, #0xff
   27e48:	cmp	x0, #0x0
   27e4c:	b.eq	27e78 <udev_util_encode_string@@LIBUDEV_183+0x1c648>  // b.none
   27e50:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27e54:	add	x1, x0, #0xc93
   27e58:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27e5c:	add	x4, x0, #0x40
   27e60:	mov	w3, #0x247                 	// #583
   27e64:	mov	x2, x1
   27e68:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27e6c:	add	x1, x0, #0xd28
   27e70:	mov	w0, #0x0                   	// #0
   27e74:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   27e78:	ldr	x0, [sp, #16]
   27e7c:	ldr	w0, [x0]
   27e80:	cmn	w0, #0x1
   27e84:	b.eq	27fdc <udev_util_encode_string@@LIBUDEV_183+0x1c7ac>  // b.none
   27e88:	ldr	x0, [sp, #16]
   27e8c:	ldr	w0, [x0]
   27e90:	cmn	w0, #0x2
   27e94:	b.ne	27ea8 <udev_util_encode_string@@LIBUDEV_183+0x1c678>  // b.any
   27e98:	ldr	x0, [sp, #24]
   27e9c:	ldr	w0, [x0, #56]
   27ea0:	cmn	w0, #0x1
   27ea4:	b.eq	27fe4 <udev_util_encode_string@@LIBUDEV_183+0x1c7b4>  // b.none
   27ea8:	ldr	x0, [sp, #16]
   27eac:	ldr	w0, [x0]
   27eb0:	cmn	w0, #0x2
   27eb4:	b.ne	27ed8 <udev_util_encode_string@@LIBUDEV_183+0x1c6a8>  // b.any
   27eb8:	ldr	x0, [sp, #24]
   27ebc:	ldr	w0, [x0, #56]
   27ec0:	str	w0, [sp, #44]
   27ec4:	ldr	w1, [sp, #44]
   27ec8:	ldr	x0, [sp, #24]
   27ecc:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27ed0:	str	x0, [sp, #48]
   27ed4:	b	27f7c <udev_util_encode_string@@LIBUDEV_183+0x1c74c>
   27ed8:	ldr	x0, [sp, #16]
   27edc:	ldr	w0, [x0]
   27ee0:	str	w0, [sp, #44]
   27ee4:	ldr	w1, [sp, #44]
   27ee8:	ldr	x0, [sp, #24]
   27eec:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27ef0:	str	x0, [sp, #48]
   27ef4:	ldr	x0, [sp, #48]
   27ef8:	ldr	x1, [x0]
   27efc:	ldr	x0, [sp, #16]
   27f00:	ldr	x0, [x0, #8]
   27f04:	cmp	x1, x0
   27f08:	b.eq	27f2c <udev_util_encode_string@@LIBUDEV_183+0x1c6fc>  // b.none
   27f0c:	ldr	w1, [sp, #44]
   27f10:	ldr	x0, [sp, #24]
   27f14:	bl	27a24 <udev_util_encode_string@@LIBUDEV_183+0x1c1f4>
   27f18:	str	w0, [sp, #44]
   27f1c:	ldr	w1, [sp, #44]
   27f20:	ldr	x0, [sp, #24]
   27f24:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27f28:	str	x0, [sp, #48]
   27f2c:	ldr	x0, [sp, #48]
   27f30:	ldr	x1, [x0]
   27f34:	ldr	x0, [sp, #16]
   27f38:	ldr	x0, [x0, #8]
   27f3c:	cmp	x1, x0
   27f40:	cset	w0, ne  // ne = any
   27f44:	and	w0, w0, #0xff
   27f48:	and	x0, x0, #0xff
   27f4c:	cmp	x0, #0x0
   27f50:	b.eq	27f7c <udev_util_encode_string@@LIBUDEV_183+0x1c74c>  // b.none
   27f54:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27f58:	add	x1, x0, #0xc93
   27f5c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   27f60:	add	x4, x0, #0x40
   27f64:	mov	w3, #0x25f                 	// #607
   27f68:	mov	x2, x1
   27f6c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   27f70:	add	x1, x0, #0xd30
   27f74:	mov	w0, #0x0                   	// #0
   27f78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   27f7c:	ldr	x0, [sp, #48]
   27f80:	ldr	w0, [x0, #16]
   27f84:	cmn	w0, #0x1
   27f88:	b.eq	27fc8 <udev_util_encode_string@@LIBUDEV_183+0x1c798>  // b.none
   27f8c:	ldr	x0, [sp, #48]
   27f90:	ldr	w1, [x0, #16]
   27f94:	ldr	x0, [sp, #16]
   27f98:	str	w1, [x0]
   27f9c:	ldr	x0, [sp, #16]
   27fa0:	ldr	w0, [x0]
   27fa4:	mov	w1, w0
   27fa8:	ldr	x0, [sp, #24]
   27fac:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   27fb0:	str	x0, [sp, #56]
   27fb4:	ldr	x0, [sp, #56]
   27fb8:	ldr	x1, [x0]
   27fbc:	ldr	x0, [sp, #16]
   27fc0:	str	x1, [x0, #8]
   27fc4:	b	27fd4 <udev_util_encode_string@@LIBUDEV_183+0x1c7a4>
   27fc8:	ldr	x0, [sp, #16]
   27fcc:	mov	w1, #0xffffffff            	// #-1
   27fd0:	str	w1, [x0]
   27fd4:	ldr	w0, [sp, #44]
   27fd8:	b	27ff8 <udev_util_encode_string@@LIBUDEV_183+0x1c7c8>
   27fdc:	nop
   27fe0:	b	27fe8 <udev_util_encode_string@@LIBUDEV_183+0x1c7b8>
   27fe4:	nop
   27fe8:	ldr	x0, [sp, #16]
   27fec:	mov	w1, #0xffffffff            	// #-1
   27ff0:	str	w1, [x0]
   27ff4:	mov	w0, #0xffffffff            	// #-1
   27ff8:	ldp	x29, x30, [sp], #64
   27ffc:	ret
   28000:	stp	x29, x30, [sp, #-48]!
   28004:	mov	x29, sp
   28008:	str	x0, [sp, #24]
   2800c:	str	x1, [sp, #16]
   28010:	ldr	x0, [sp, #24]
   28014:	cmp	x0, #0x0
   28018:	cset	w0, eq  // eq = none
   2801c:	and	w0, w0, #0xff
   28020:	and	x0, x0, #0xff
   28024:	cmp	x0, #0x0
   28028:	b.eq	28054 <udev_util_encode_string@@LIBUDEV_183+0x1c824>  // b.none
   2802c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28030:	add	x1, x0, #0xc93
   28034:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28038:	add	x4, x0, #0x68
   2803c:	mov	w3, #0x278                 	// #632
   28040:	mov	x2, x1
   28044:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28048:	add	x1, x0, #0xd20
   2804c:	mov	w0, #0x0                   	// #0
   28050:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28054:	ldr	x0, [sp, #16]
   28058:	cmp	x0, #0x0
   2805c:	cset	w0, eq  // eq = none
   28060:	and	w0, w0, #0xff
   28064:	and	x0, x0, #0xff
   28068:	cmp	x0, #0x0
   2806c:	b.eq	28098 <udev_util_encode_string@@LIBUDEV_183+0x1c868>  // b.none
   28070:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28074:	add	x1, x0, #0xc93
   28078:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2807c:	add	x4, x0, #0x68
   28080:	mov	w3, #0x279                 	// #633
   28084:	mov	x2, x1
   28088:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2808c:	add	x1, x0, #0xd28
   28090:	mov	w0, #0x0                   	// #0
   28094:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28098:	ldr	x0, [sp, #16]
   2809c:	ldr	w0, [x0]
   280a0:	cmn	w0, #0x1
   280a4:	b.eq	2829c <udev_util_encode_string@@LIBUDEV_183+0x1ca6c>  // b.none
   280a8:	ldr	x0, [sp, #16]
   280ac:	ldr	w0, [x0]
   280b0:	cmn	w0, #0x2
   280b4:	b.ne	28130 <udev_util_encode_string@@LIBUDEV_183+0x1c900>  // b.any
   280b8:	ldr	x0, [sp, #24]
   280bc:	ldrb	w0, [x0, #47]
   280c0:	and	w0, w0, #0x4
   280c4:	and	w0, w0, #0xff
   280c8:	cmp	w0, #0x0
   280cc:	b.eq	28104 <udev_util_encode_string@@LIBUDEV_183+0x1c8d4>  // b.none
   280d0:	ldr	x0, [sp, #24]
   280d4:	ldr	w0, [x0, #40]
   280d8:	mov	w1, w0
   280dc:	ldr	x0, [sp, #24]
   280e0:	bl	27750 <udev_util_encode_string@@LIBUDEV_183+0x1bf20>
   280e4:	mov	w1, w0
   280e8:	ldr	x0, [sp, #16]
   280ec:	str	w1, [x0]
   280f0:	ldr	x0, [sp, #16]
   280f4:	ldr	w1, [x0]
   280f8:	ldr	x0, [sp, #24]
   280fc:	str	w1, [x0, #40]
   28100:	b	2811c <udev_util_encode_string@@LIBUDEV_183+0x1c8ec>
   28104:	mov	w1, #0x0                   	// #0
   28108:	ldr	x0, [sp, #24]
   2810c:	bl	27750 <udev_util_encode_string@@LIBUDEV_183+0x1bf20>
   28110:	mov	w1, w0
   28114:	ldr	x0, [sp, #16]
   28118:	str	w1, [x0]
   2811c:	ldr	x0, [sp, #16]
   28120:	ldr	w0, [x0]
   28124:	cmn	w0, #0x1
   28128:	b.ne	28224 <udev_util_encode_string@@LIBUDEV_183+0x1c9f4>  // b.any
   2812c:	b	282a0 <udev_util_encode_string@@LIBUDEV_183+0x1ca70>
   28130:	ldr	x0, [sp, #16]
   28134:	ldr	w0, [x0]
   28138:	cmp	w0, #0x0
   2813c:	cset	w0, eq  // eq = none
   28140:	and	w0, w0, #0xff
   28144:	and	x0, x0, #0xff
   28148:	cmp	x0, #0x0
   2814c:	b.eq	28178 <udev_util_encode_string@@LIBUDEV_183+0x1c948>  // b.none
   28150:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28154:	add	x1, x0, #0xc93
   28158:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2815c:	add	x4, x0, #0x68
   28160:	mov	w3, #0x28b                 	// #651
   28164:	mov	x2, x1
   28168:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2816c:	add	x1, x0, #0xd50
   28170:	mov	w0, #0x0                   	// #0
   28174:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28178:	ldr	x0, [sp, #16]
   2817c:	ldr	w0, [x0]
   28180:	mov	w1, w0
   28184:	ldr	x0, [sp, #24]
   28188:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   2818c:	str	x0, [sp, #40]
   28190:	ldr	x0, [sp, #40]
   28194:	ldr	x1, [x0]
   28198:	ldr	x0, [sp, #16]
   2819c:	ldr	x0, [x0, #8]
   281a0:	cmp	x1, x0
   281a4:	b.eq	281d4 <udev_util_encode_string@@LIBUDEV_183+0x1c9a4>  // b.none
   281a8:	ldr	x0, [sp, #16]
   281ac:	ldr	w0, [x0]
   281b0:	sub	w1, w0, #0x1
   281b4:	ldr	x0, [sp, #16]
   281b8:	str	w1, [x0]
   281bc:	ldr	x0, [sp, #16]
   281c0:	ldr	w0, [x0]
   281c4:	mov	w1, w0
   281c8:	ldr	x0, [sp, #24]
   281cc:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   281d0:	str	x0, [sp, #40]
   281d4:	ldr	x0, [sp, #40]
   281d8:	ldr	x1, [x0]
   281dc:	ldr	x0, [sp, #16]
   281e0:	ldr	x0, [x0, #8]
   281e4:	cmp	x1, x0
   281e8:	cset	w0, ne  // ne = any
   281ec:	and	w0, w0, #0xff
   281f0:	and	x0, x0, #0xff
   281f4:	cmp	x0, #0x0
   281f8:	b.eq	28224 <udev_util_encode_string@@LIBUDEV_183+0x1c9f4>  // b.none
   281fc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28200:	add	x1, x0, #0xc93
   28204:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28208:	add	x4, x0, #0x68
   2820c:	mov	w3, #0x297                 	// #663
   28210:	mov	x2, x1
   28214:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28218:	add	x1, x0, #0xd60
   2821c:	mov	w0, #0x0                   	// #0
   28220:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28224:	ldr	x0, [sp, #16]
   28228:	ldr	w0, [x0]
   2822c:	str	w0, [sp, #36]
   28230:	ldr	x0, [sp, #16]
   28234:	ldr	w0, [x0]
   28238:	add	w0, w0, #0x1
   2823c:	mov	w1, w0
   28240:	ldr	x0, [sp, #24]
   28244:	bl	27750 <udev_util_encode_string@@LIBUDEV_183+0x1bf20>
   28248:	mov	w1, w0
   2824c:	ldr	x0, [sp, #16]
   28250:	str	w1, [x0]
   28254:	ldr	x0, [sp, #16]
   28258:	ldr	w0, [x0]
   2825c:	cmn	w0, #0x1
   28260:	b.eq	28288 <udev_util_encode_string@@LIBUDEV_183+0x1ca58>  // b.none
   28264:	ldr	x0, [sp, #16]
   28268:	ldr	w0, [x0]
   2826c:	mov	w1, w0
   28270:	ldr	x0, [sp, #24]
   28274:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   28278:	ldr	x1, [x0]
   2827c:	ldr	x0, [sp, #16]
   28280:	str	x1, [x0, #8]
   28284:	b	28294 <udev_util_encode_string@@LIBUDEV_183+0x1ca64>
   28288:	ldr	x0, [sp, #16]
   2828c:	mov	w1, #0xffffffff            	// #-1
   28290:	str	w1, [x0]
   28294:	ldr	w0, [sp, #36]
   28298:	b	282b0 <udev_util_encode_string@@LIBUDEV_183+0x1ca80>
   2829c:	nop
   282a0:	ldr	x0, [sp, #16]
   282a4:	mov	w1, #0xffffffff            	// #-1
   282a8:	str	w1, [x0]
   282ac:	mov	w0, #0xffffffff            	// #-1
   282b0:	ldp	x29, x30, [sp], #48
   282b4:	ret
   282b8:	stp	x29, x30, [sp, #-32]!
   282bc:	mov	x29, sp
   282c0:	str	x0, [sp, #24]
   282c4:	str	x1, [sp, #16]
   282c8:	ldr	x0, [sp, #24]
   282cc:	cmp	x0, #0x0
   282d0:	b.ne	282e8 <udev_util_encode_string@@LIBUDEV_183+0x1cab8>  // b.any
   282d4:	ldr	x0, [sp, #16]
   282d8:	mov	w1, #0xffffffff            	// #-1
   282dc:	str	w1, [x0]
   282e0:	mov	w0, #0xffffffff            	// #-1
   282e4:	b	28320 <udev_util_encode_string@@LIBUDEV_183+0x1caf0>
   282e8:	ldr	x0, [sp, #24]
   282ec:	ldrb	w0, [x0, #47]
   282f0:	and	w0, w0, #0x3
   282f4:	and	w0, w0, #0xff
   282f8:	cmp	w0, #0x1
   282fc:	b.ne	28310 <udev_util_encode_string@@LIBUDEV_183+0x1cae0>  // b.any
   28300:	ldr	x1, [sp, #16]
   28304:	ldr	x0, [sp, #24]
   28308:	bl	27de0 <udev_util_encode_string@@LIBUDEV_183+0x1c5b0>
   2830c:	b	2831c <udev_util_encode_string@@LIBUDEV_183+0x1caec>
   28310:	ldr	x1, [sp, #16]
   28314:	ldr	x0, [sp, #24]
   28318:	bl	28000 <udev_util_encode_string@@LIBUDEV_183+0x1c7d0>
   2831c:	nop
   28320:	ldp	x29, x30, [sp], #32
   28324:	ret
   28328:	stp	x29, x30, [sp, #-80]!
   2832c:	mov	x29, sp
   28330:	str	x0, [sp, #40]
   28334:	str	x1, [sp, #32]
   28338:	str	x2, [sp, #24]
   2833c:	str	x3, [sp, #16]
   28340:	ldr	x1, [sp, #32]
   28344:	ldr	x0, [sp, #40]
   28348:	bl	282b8 <udev_util_encode_string@@LIBUDEV_183+0x1ca88>
   2834c:	str	w0, [sp, #60]
   28350:	ldr	w0, [sp, #60]
   28354:	cmn	w0, #0x1
   28358:	b.ne	2838c <udev_util_encode_string@@LIBUDEV_183+0x1cb5c>  // b.any
   2835c:	ldr	x0, [sp, #24]
   28360:	cmp	x0, #0x0
   28364:	b.eq	28370 <udev_util_encode_string@@LIBUDEV_183+0x1cb40>  // b.none
   28368:	ldr	x0, [sp, #24]
   2836c:	str	xzr, [x0]
   28370:	ldr	x0, [sp, #16]
   28374:	cmp	x0, #0x0
   28378:	b.eq	28384 <udev_util_encode_string@@LIBUDEV_183+0x1cb54>  // b.none
   2837c:	ldr	x0, [sp, #16]
   28380:	str	xzr, [x0]
   28384:	mov	w0, #0x0                   	// #0
   28388:	b	283e4 <udev_util_encode_string@@LIBUDEV_183+0x1cbb4>
   2838c:	ldr	w1, [sp, #60]
   28390:	ldr	x0, [sp, #40]
   28394:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   28398:	str	x0, [sp, #64]
   2839c:	ldr	x1, [sp, #64]
   283a0:	ldr	x0, [sp, #40]
   283a4:	bl	27a70 <udev_util_encode_string@@LIBUDEV_183+0x1c240>
   283a8:	str	x0, [sp, #72]
   283ac:	ldr	x0, [sp, #24]
   283b0:	cmp	x0, #0x0
   283b4:	b.eq	283c4 <udev_util_encode_string@@LIBUDEV_183+0x1cb94>  // b.none
   283b8:	ldr	x0, [sp, #24]
   283bc:	ldr	x1, [sp, #72]
   283c0:	str	x1, [x0]
   283c4:	ldr	x0, [sp, #16]
   283c8:	cmp	x0, #0x0
   283cc:	b.eq	283e0 <udev_util_encode_string@@LIBUDEV_183+0x1cbb0>  // b.none
   283d0:	ldr	x0, [sp, #64]
   283d4:	ldr	x1, [x0]
   283d8:	ldr	x0, [sp, #16]
   283dc:	str	x1, [x0]
   283e0:	mov	w0, #0x1                   	// #1
   283e4:	ldp	x29, x30, [sp], #80
   283e8:	ret
   283ec:	stp	x29, x30, [sp, #-48]!
   283f0:	mov	x29, sp
   283f4:	str	x0, [sp, #40]
   283f8:	str	x1, [sp, #32]
   283fc:	str	x2, [sp, #24]
   28400:	mov	x3, #0x0                   	// #0
   28404:	ldr	x2, [sp, #24]
   28408:	ldr	x1, [sp, #32]
   2840c:	ldr	x0, [sp, #40]
   28410:	bl	28328 <udev_util_encode_string@@LIBUDEV_183+0x1caf8>
   28414:	and	w0, w0, #0xff
   28418:	ldp	x29, x30, [sp], #48
   2841c:	ret
   28420:	stp	x29, x30, [sp, #-48]!
   28424:	mov	x29, sp
   28428:	str	x0, [sp, #24]
   2842c:	ldr	x0, [sp, #24]
   28430:	ldrb	w0, [x0, #47]
   28434:	ubfx	x0, x0, #0, #2
   28438:	and	w0, w0, #0xff
   2843c:	sxtw	x0, w0
   28440:	lsl	x1, x0, #5
   28444:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   28448:	add	x0, x0, #0x6a8
   2844c:	add	x0, x1, x0
   28450:	str	x0, [sp, #32]
   28454:	ldr	x0, [sp, #24]
   28458:	ldrb	w0, [x0, #47]
   2845c:	and	w0, w0, #0x4
   28460:	and	w0, w0, #0xff
   28464:	cmp	w0, #0x0
   28468:	cset	w0, ne  // ne = any
   2846c:	and	w0, w0, #0xff
   28470:	and	x0, x0, #0xff
   28474:	cmp	x0, #0x0
   28478:	b.eq	284a4 <udev_util_encode_string@@LIBUDEV_183+0x1cc74>  // b.none
   2847c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28480:	add	x1, x0, #0xc93
   28484:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28488:	add	x4, x0, #0x90
   2848c:	mov	w3, #0x2ff                 	// #767
   28490:	mov	x2, x1
   28494:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28498:	add	x1, x0, #0xd88
   2849c:	mov	w0, #0x0                   	// #0
   284a0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   284a4:	ldr	x0, [sp, #24]
   284a8:	add	x3, x0, #0x8
   284ac:	ldr	x0, [sp, #32]
   284b0:	ldr	x1, [x0, #8]
   284b4:	ldr	x0, [sp, #32]
   284b8:	ldr	w0, [x0, #24]
   284bc:	mov	w0, w0
   284c0:	mul	x0, x1, x0
   284c4:	mov	x2, x0
   284c8:	mov	w1, #0x0                   	// #0
   284cc:	mov	x0, x3
   284d0:	bl	27088 <udev_util_encode_string@@LIBUDEV_183+0x1b858>
   284d4:	str	x0, [sp, #40]
   284d8:	ldr	x0, [sp, #32]
   284dc:	ldr	w0, [x0, #24]
   284e0:	mov	w0, w0
   284e4:	mov	x2, x0
   284e8:	mov	w1, #0xff                  	// #255
   284ec:	ldr	x0, [sp, #40]
   284f0:	bl	5290 <memset@plt>
   284f4:	nop
   284f8:	ldp	x29, x30, [sp], #48
   284fc:	ret
   28500:	stp	x29, x30, [sp, #-64]!
   28504:	mov	x29, sp
   28508:	str	x0, [sp, #24]
   2850c:	str	w1, [sp, #20]
   28510:	ldr	w0, [sp, #20]
   28514:	lsl	x1, x0, #5
   28518:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2851c:	add	x0, x0, #0x6a8
   28520:	add	x0, x1, x0
   28524:	str	x0, [sp, #40]
   28528:	bl	2f2e0 <udev_util_encode_string@@LIBUDEV_183+0x23ab0>
   2852c:	strb	w0, [sp, #39]
   28530:	ldrb	w0, [sp, #39]
   28534:	cmp	w0, #0x0
   28538:	b.eq	2854c <udev_util_encode_string@@LIBUDEV_183+0x1cd1c>  // b.none
   2853c:	ldr	x0, [sp, #40]
   28540:	ldr	x0, [x0, #16]
   28544:	bl	2f254 <udev_util_encode_string@@LIBUDEV_183+0x23a24>
   28548:	b	28560 <udev_util_encode_string@@LIBUDEV_183+0x1cd30>
   2854c:	ldr	x0, [sp, #40]
   28550:	ldr	x0, [x0]
   28554:	mov	x1, x0
   28558:	mov	x0, #0x1                   	// #1
   2855c:	bl	52f0 <calloc@plt>
   28560:	str	x0, [sp, #48]
   28564:	ldr	x0, [sp, #48]
   28568:	cmp	x0, #0x0
   2856c:	b.ne	28578 <udev_util_encode_string@@LIBUDEV_183+0x1cd48>  // b.any
   28570:	mov	x0, #0x0                   	// #0
   28574:	b	2863c <udev_util_encode_string@@LIBUDEV_183+0x1ce0c>
   28578:	ldr	w0, [sp, #20]
   2857c:	and	w0, w0, #0x3
   28580:	and	w2, w0, #0xff
   28584:	ldr	x1, [sp, #48]
   28588:	ldrb	w0, [x1, #47]
   2858c:	bfxil	w0, w2, #0, #2
   28590:	strb	w0, [x1, #47]
   28594:	ldr	x1, [sp, #48]
   28598:	ldrb	w0, [x1, #47]
   2859c:	ldrb	w2, [sp, #39]
   285a0:	bfi	w0, w2, #6, #1
   285a4:	strb	w0, [x1, #47]
   285a8:	ldr	x0, [sp, #24]
   285ac:	cmp	x0, #0x0
   285b0:	b.ne	285bc <udev_util_encode_string@@LIBUDEV_183+0x1cd8c>  // b.any
   285b4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   285b8:	ldr	x0, [x0, #3968]
   285bc:	ldr	x1, [sp, #48]
   285c0:	str	x0, [x1]
   285c4:	ldr	w0, [sp, #20]
   285c8:	cmp	w0, #0x1
   285cc:	b.ne	285f4 <udev_util_encode_string@@LIBUDEV_183+0x1cdc4>  // b.any
   285d0:	ldr	x0, [sp, #48]
   285d4:	str	x0, [sp, #56]
   285d8:	ldr	x0, [sp, #56]
   285dc:	mov	w1, #0xffffffff            	// #-1
   285e0:	str	w1, [x0, #60]
   285e4:	ldr	x0, [sp, #56]
   285e8:	ldr	w1, [x0, #60]
   285ec:	ldr	x0, [sp, #56]
   285f0:	str	w1, [x0, #56]
   285f4:	ldr	x0, [sp, #48]
   285f8:	bl	28420 <udev_util_encode_string@@LIBUDEV_183+0x1cbf0>
   285fc:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   28600:	add	x0, x0, #0x100
   28604:	ldrb	w0, [x0]
   28608:	eor	w0, w0, #0x1
   2860c:	and	w0, w0, #0xff
   28610:	cmp	w0, #0x0
   28614:	b.eq	28638 <udev_util_encode_string@@LIBUDEV_183+0x1ce08>  // b.none
   28618:	mov	x1, #0x10                  	// #16
   2861c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   28620:	add	x0, x0, #0xf0
   28624:	bl	32d94 <udev_util_encode_string@@LIBUDEV_183+0x27564>
   28628:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2862c:	add	x0, x0, #0x100
   28630:	mov	w1, #0x1                   	// #1
   28634:	strb	w1, [x0]
   28638:	ldr	x0, [sp, #48]
   2863c:	ldp	x29, x30, [sp], #64
   28640:	ret
   28644:	stp	x29, x30, [sp, #-64]!
   28648:	mov	x29, sp
   2864c:	str	x0, [sp, #40]
   28650:	str	x1, [sp, #32]
   28654:	str	w2, [sp, #28]
   28658:	ldr	x0, [sp, #40]
   2865c:	cmp	x0, #0x0
   28660:	cset	w0, eq  // eq = none
   28664:	and	w0, w0, #0xff
   28668:	and	x0, x0, #0xff
   2866c:	cmp	x0, #0x0
   28670:	b.eq	2869c <udev_util_encode_string@@LIBUDEV_183+0x1ce6c>  // b.none
   28674:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28678:	add	x1, x0, #0xc93
   2867c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28680:	add	x4, x0, #0xa8
   28684:	mov	w3, #0x33c                 	// #828
   28688:	mov	x2, x1
   2868c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28690:	add	x1, x0, #0xd20
   28694:	mov	w0, #0x0                   	// #0
   28698:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2869c:	ldr	x0, [sp, #40]
   286a0:	ldr	x0, [x0]
   286a4:	cmp	x0, #0x0
   286a8:	b.eq	286b4 <udev_util_encode_string@@LIBUDEV_183+0x1ce84>  // b.none
   286ac:	mov	w0, #0x0                   	// #0
   286b0:	b	286e8 <udev_util_encode_string@@LIBUDEV_183+0x1ceb8>
   286b4:	ldr	w1, [sp, #28]
   286b8:	ldr	x0, [sp, #32]
   286bc:	bl	28500 <udev_util_encode_string@@LIBUDEV_183+0x1ccd0>
   286c0:	str	x0, [sp, #56]
   286c4:	ldr	x0, [sp, #56]
   286c8:	cmp	x0, #0x0
   286cc:	b.ne	286d8 <udev_util_encode_string@@LIBUDEV_183+0x1cea8>  // b.any
   286d0:	mov	w0, #0xfffffff4            	// #-12
   286d4:	b	286e8 <udev_util_encode_string@@LIBUDEV_183+0x1ceb8>
   286d8:	ldr	x0, [sp, #40]
   286dc:	ldr	x1, [sp, #56]
   286e0:	str	x1, [x0]
   286e4:	mov	w0, #0x0                   	// #0
   286e8:	ldp	x29, x30, [sp], #64
   286ec:	ret
   286f0:	stp	x29, x30, [sp, #-32]!
   286f4:	mov	x29, sp
   286f8:	str	x0, [sp, #24]
   286fc:	str	x1, [sp, #16]
   28700:	mov	w2, #0x0                   	// #0
   28704:	ldr	x1, [sp, #16]
   28708:	ldr	x0, [sp, #24]
   2870c:	bl	28644 <udev_util_encode_string@@LIBUDEV_183+0x1ce14>
   28710:	ldp	x29, x30, [sp], #32
   28714:	ret
   28718:	stp	x29, x30, [sp, #-32]!
   2871c:	mov	x29, sp
   28720:	str	x0, [sp, #24]
   28724:	str	x1, [sp, #16]
   28728:	mov	w2, #0x1                   	// #1
   2872c:	ldr	x1, [sp, #16]
   28730:	ldr	x0, [sp, #24]
   28734:	bl	28644 <udev_util_encode_string@@LIBUDEV_183+0x1ce14>
   28738:	ldp	x29, x30, [sp], #32
   2873c:	ret
   28740:	stp	x29, x30, [sp, #-32]!
   28744:	mov	x29, sp
   28748:	str	x0, [sp, #24]
   2874c:	str	x1, [sp, #16]
   28750:	mov	w2, #0x2                   	// #2
   28754:	ldr	x1, [sp, #16]
   28758:	ldr	x0, [sp, #24]
   2875c:	bl	28644 <udev_util_encode_string@@LIBUDEV_183+0x1ce14>
   28760:	ldp	x29, x30, [sp], #32
   28764:	ret
   28768:	stp	x29, x30, [sp, #-32]!
   2876c:	mov	x29, sp
   28770:	str	x0, [sp, #24]
   28774:	ldr	x0, [sp, #24]
   28778:	ldrb	w0, [x0, #47]
   2877c:	and	w0, w0, #0x4
   28780:	and	w0, w0, #0xff
   28784:	cmp	w0, #0x0
   28788:	cset	w0, ne  // ne = any
   2878c:	and	w0, w0, #0xff
   28790:	and	x0, x0, #0xff
   28794:	cmp	x0, #0x0
   28798:	b.eq	287c4 <udev_util_encode_string@@LIBUDEV_183+0x1cf94>  // b.none
   2879c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   287a0:	add	x1, x0, #0xc93
   287a4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   287a8:	add	x4, x0, #0xc8
   287ac:	mov	w3, #0x356                 	// #854
   287b0:	mov	x2, x1
   287b4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   287b8:	add	x1, x0, #0xd88
   287bc:	mov	w0, #0x0                   	// #0
   287c0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   287c4:	ldr	x0, [sp, #24]
   287c8:	ldrb	w0, [x0, #47]
   287cc:	and	w0, w0, #0x38
   287d0:	and	w0, w0, #0xff
   287d4:	cmp	w0, #0x0
   287d8:	cset	w0, ne  // ne = any
   287dc:	and	w0, w0, #0xff
   287e0:	and	x0, x0, #0xff
   287e4:	cmp	x0, #0x0
   287e8:	b.eq	28814 <udev_util_encode_string@@LIBUDEV_183+0x1cfe4>  // b.none
   287ec:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   287f0:	add	x1, x0, #0xc93
   287f4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   287f8:	add	x4, x0, #0xc8
   287fc:	mov	w3, #0x357                 	// #855
   28800:	mov	x2, x1
   28804:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28808:	add	x1, x0, #0xda0
   2880c:	mov	w0, #0x0                   	// #0
   28810:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28814:	ldr	x0, [sp, #24]
   28818:	ldrb	w0, [x0, #47]
   2881c:	and	w0, w0, #0x40
   28820:	and	w0, w0, #0xff
   28824:	cmp	w0, #0x0
   28828:	b.eq	288a8 <udev_util_encode_string@@LIBUDEV_183+0x1d078>  // b.none
   2882c:	bl	32638 <udev_util_encode_string@@LIBUDEV_183+0x26e08>
   28830:	and	w0, w0, #0xff
   28834:	eor	w0, w0, #0x1
   28838:	and	w0, w0, #0xff
   2883c:	and	x0, x0, #0xff
   28840:	cmp	x0, #0x0
   28844:	b.eq	28870 <udev_util_encode_string@@LIBUDEV_183+0x1d040>  // b.none
   28848:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2884c:	add	x1, x0, #0xc93
   28850:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28854:	add	x4, x0, #0xc8
   28858:	mov	w3, #0x361                 	// #865
   2885c:	mov	x2, x1
   28860:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28864:	add	x1, x0, #0xdc0
   28868:	mov	w0, #0x0                   	// #0
   2886c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28870:	ldr	x0, [sp, #24]
   28874:	ldrb	w0, [x0, #47]
   28878:	ubfx	x0, x0, #0, #2
   2887c:	and	w0, w0, #0xff
   28880:	mov	w2, w0
   28884:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   28888:	add	x1, x0, #0x6a8
   2888c:	sxtw	x0, w2
   28890:	lsl	x0, x0, #5
   28894:	add	x0, x1, x0
   28898:	ldr	x0, [x0, #16]
   2889c:	ldr	x1, [sp, #24]
   288a0:	bl	2f2ac <udev_util_encode_string@@LIBUDEV_183+0x23a7c>
   288a4:	b	288b0 <udev_util_encode_string@@LIBUDEV_183+0x1d080>
   288a8:	ldr	x0, [sp, #24]
   288ac:	bl	54b0 <free@plt>
   288b0:	nop
   288b4:	ldp	x29, x30, [sp], #32
   288b8:	ret
   288bc:	stp	x29, x30, [sp, #-48]!
   288c0:	mov	x29, sp
   288c4:	str	x0, [sp, #40]
   288c8:	str	x1, [sp, #32]
   288cc:	str	x2, [sp, #24]
   288d0:	ldr	x0, [sp, #40]
   288d4:	cmp	x0, #0x0
   288d8:	b.eq	288f4 <udev_util_encode_string@@LIBUDEV_183+0x1d0c4>  // b.none
   288dc:	ldr	x2, [sp, #24]
   288e0:	ldr	x1, [sp, #32]
   288e4:	ldr	x0, [sp, #40]
   288e8:	bl	28900 <udev_util_encode_string@@LIBUDEV_183+0x1d0d0>
   288ec:	ldr	x0, [sp, #40]
   288f0:	bl	28768 <udev_util_encode_string@@LIBUDEV_183+0x1cf38>
   288f4:	mov	x0, #0x0                   	// #0
   288f8:	ldp	x29, x30, [sp], #48
   288fc:	ret
   28900:	stp	x29, x30, [sp, #-96]!
   28904:	mov	x29, sp
   28908:	str	x0, [sp, #40]
   2890c:	str	x1, [sp, #32]
   28910:	str	x2, [sp, #24]
   28914:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   28918:	ldr	x0, [x0, #4016]
   2891c:	ldr	x1, [x0]
   28920:	str	x1, [sp, #88]
   28924:	mov	x1, #0x0                   	// #0
   28928:	ldr	x0, [sp, #40]
   2892c:	cmp	x0, #0x0
   28930:	b.eq	28a98 <udev_util_encode_string@@LIBUDEV_183+0x1d268>  // b.none
   28934:	ldr	x0, [sp, #40]
   28938:	ldr	x0, [x0]
   2893c:	ldr	x0, [x0, #16]
   28940:	cmp	x0, #0x0
   28944:	b.eq	28958 <udev_util_encode_string@@LIBUDEV_183+0x1d128>  // b.none
   28948:	ldr	x0, [sp, #40]
   2894c:	ldr	x0, [x0]
   28950:	ldr	x0, [x0, #16]
   28954:	b	2895c <udev_util_encode_string@@LIBUDEV_183+0x1d12c>
   28958:	ldr	x0, [sp, #32]
   2895c:	str	x0, [sp, #56]
   28960:	ldr	x0, [sp, #40]
   28964:	ldr	x0, [x0]
   28968:	ldr	x0, [x0, #24]
   2896c:	cmp	x0, #0x0
   28970:	b.eq	28984 <udev_util_encode_string@@LIBUDEV_183+0x1d154>  // b.none
   28974:	ldr	x0, [sp, #40]
   28978:	ldr	x0, [x0]
   2897c:	ldr	x0, [x0, #24]
   28980:	b	28988 <udev_util_encode_string@@LIBUDEV_183+0x1d158>
   28984:	ldr	x0, [sp, #24]
   28988:	str	x0, [sp, #64]
   2898c:	ldr	x0, [sp, #56]
   28990:	cmp	x0, #0x0
   28994:	b.ne	289f4 <udev_util_encode_string@@LIBUDEV_183+0x1d1c4>  // b.any
   28998:	ldr	x0, [sp, #64]
   2899c:	cmp	x0, #0x0
   289a0:	b.eq	28a04 <udev_util_encode_string@@LIBUDEV_183+0x1d1d4>  // b.none
   289a4:	b	289f4 <udev_util_encode_string@@LIBUDEV_183+0x1d1c4>
   289a8:	str	xzr, [sp, #48]
   289ac:	add	x0, sp, #0x30
   289b0:	mov	x2, x0
   289b4:	mov	w1, #0x1                   	// #1
   289b8:	ldr	x0, [sp, #40]
   289bc:	bl	29d94 <udev_util_encode_string@@LIBUDEV_183+0x1e564>
   289c0:	str	x0, [sp, #72]
   289c4:	ldr	x0, [sp, #56]
   289c8:	cmp	x0, #0x0
   289cc:	b.eq	289dc <udev_util_encode_string@@LIBUDEV_183+0x1d1ac>  // b.none
   289d0:	ldr	x0, [sp, #48]
   289d4:	ldr	x1, [sp, #56]
   289d8:	blr	x1
   289dc:	ldr	x0, [sp, #64]
   289e0:	cmp	x0, #0x0
   289e4:	b.eq	289f4 <udev_util_encode_string@@LIBUDEV_183+0x1d1c4>  // b.none
   289e8:	ldr	x1, [sp, #64]
   289ec:	ldr	x0, [sp, #72]
   289f0:	blr	x1
   289f4:	ldr	x0, [sp, #40]
   289f8:	bl	29e44 <udev_util_encode_string@@LIBUDEV_183+0x1e614>
   289fc:	cmp	w0, #0x0
   28a00:	b.ne	289a8 <udev_util_encode_string@@LIBUDEV_183+0x1d178>  // b.any
   28a04:	ldr	x0, [sp, #40]
   28a08:	ldrb	w0, [x0, #47]
   28a0c:	and	w0, w0, #0x4
   28a10:	and	w0, w0, #0xff
   28a14:	cmp	w0, #0x0
   28a18:	b.eq	28a38 <udev_util_encode_string@@LIBUDEV_183+0x1d208>  // b.none
   28a1c:	ldr	x0, [sp, #40]
   28a20:	ldr	x0, [x0, #8]
   28a24:	bl	54b0 <free@plt>
   28a28:	ldr	x0, [sp, #40]
   28a2c:	ldrb	w1, [x0, #47]
   28a30:	and	w1, w1, #0xfffffffb
   28a34:	strb	w1, [x0, #47]
   28a38:	ldr	x0, [sp, #40]
   28a3c:	ldrb	w1, [x0, #47]
   28a40:	and	w1, w1, #0xffffffc7
   28a44:	strb	w1, [x0, #47]
   28a48:	ldr	x0, [sp, #40]
   28a4c:	bl	28420 <udev_util_encode_string@@LIBUDEV_183+0x1cbf0>
   28a50:	ldr	x0, [sp, #40]
   28a54:	ldrb	w0, [x0, #47]
   28a58:	and	w0, w0, #0x3
   28a5c:	and	w0, w0, #0xff
   28a60:	cmp	w0, #0x1
   28a64:	b.ne	28a8c <udev_util_encode_string@@LIBUDEV_183+0x1d25c>  // b.any
   28a68:	ldr	x0, [sp, #40]
   28a6c:	str	x0, [sp, #80]
   28a70:	ldr	x0, [sp, #80]
   28a74:	mov	w1, #0xffffffff            	// #-1
   28a78:	str	w1, [x0, #60]
   28a7c:	ldr	x0, [sp, #80]
   28a80:	ldr	w1, [x0, #60]
   28a84:	ldr	x0, [sp, #80]
   28a88:	str	w1, [x0, #56]
   28a8c:	ldr	x0, [sp, #40]
   28a90:	bl	27390 <udev_util_encode_string@@LIBUDEV_183+0x1bb60>
   28a94:	b	28a9c <udev_util_encode_string@@LIBUDEV_183+0x1d26c>
   28a98:	nop
   28a9c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   28aa0:	ldr	x0, [x0, #4016]
   28aa4:	ldr	x1, [sp, #88]
   28aa8:	ldr	x0, [x0]
   28aac:	eor	x0, x1, x0
   28ab0:	cmp	x0, #0x0
   28ab4:	b.eq	28abc <udev_util_encode_string@@LIBUDEV_183+0x1d28c>  // b.none
   28ab8:	bl	5390 <__stack_chk_fail@plt>
   28abc:	ldp	x29, x30, [sp], #96
   28ac0:	ret
   28ac4:	stp	x29, x30, [sp, #-80]!
   28ac8:	mov	x29, sp
   28acc:	str	x0, [sp, #40]
   28ad0:	str	w1, [sp, #36]
   28ad4:	str	x2, [sp, #24]
   28ad8:	ldr	x0, [sp, #40]
   28adc:	bl	2758c <udev_util_encode_string@@LIBUDEV_183+0x1bd5c>
   28ae0:	str	x0, [sp, #72]
   28ae4:	str	wzr, [sp, #64]
   28ae8:	ldr	w0, [sp, #36]
   28aec:	ldr	x1, [sp, #72]
   28af0:	add	x0, x1, x0
   28af4:	ldrb	w0, [x0]
   28af8:	strb	w0, [sp, #63]
   28afc:	strb	wzr, [sp, #62]
   28b00:	ldrb	w0, [sp, #63]
   28b04:	sub	w0, w0, #0xfe
   28b08:	cmp	w0, #0x1
   28b0c:	b.hi	28b18 <udev_util_encode_string@@LIBUDEV_183+0x1d2e8>  // b.pmore
   28b10:	mov	w0, #0x1                   	// #1
   28b14:	strb	w0, [sp, #62]
   28b18:	nop
   28b1c:	ldrb	w0, [sp, #62]
   28b20:	cmp	w0, #0x0
   28b24:	b.eq	28bd4 <udev_util_encode_string@@LIBUDEV_183+0x1d3a4>  // b.none
   28b28:	ldrb	w0, [sp, #63]
   28b2c:	cmp	w0, #0xfe
   28b30:	b.ne	28b48 <udev_util_encode_string@@LIBUDEV_183+0x1d318>  // b.any
   28b34:	mov	w3, #0xfffffffd            	// #-3
   28b38:	ldr	w2, [sp, #36]
   28b3c:	ldr	x1, [sp, #24]
   28b40:	ldr	x0, [sp, #40]
   28b44:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   28b48:	ldr	x0, [sp, #40]
   28b4c:	ldrb	w0, [x0, #47]
   28b50:	and	w0, w0, #0x4
   28b54:	and	w0, w0, #0xff
   28b58:	cmp	w0, #0x0
   28b5c:	b.eq	28b80 <udev_util_encode_string@@LIBUDEV_183+0x1d350>  // b.none
   28b60:	ldr	x0, [sp, #40]
   28b64:	ldr	w0, [x0, #40]
   28b68:	ldr	w1, [sp, #36]
   28b6c:	cmp	w1, w0
   28b70:	b.cs	28b80 <udev_util_encode_string@@LIBUDEV_183+0x1d350>  // b.hs, b.nlast
   28b74:	ldr	x0, [sp, #40]
   28b78:	ldr	w1, [sp, #36]
   28b7c:	str	w1, [x0, #40]
   28b80:	ldr	w2, [sp, #64]
   28b84:	ldr	w1, [sp, #36]
   28b88:	ldr	x0, [sp, #40]
   28b8c:	bl	276d0 <udev_util_encode_string@@LIBUDEV_183+0x1bea0>
   28b90:	ldr	w3, [sp, #36]
   28b94:	mov	w2, #0xfffffffc            	// #-4
   28b98:	ldr	x1, [sp, #24]
   28b9c:	ldr	x0, [sp, #40]
   28ba0:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   28ba4:	ldrb	w0, [sp, #63]
   28ba8:	cmp	w0, #0xfe
   28bac:	b.ne	28bcc <udev_util_encode_string@@LIBUDEV_183+0x1d39c>  // b.any
   28bb0:	mov	w3, #0xfffffffc            	// #-4
   28bb4:	mov	w2, #0xfffffffd            	// #-3
   28bb8:	ldr	x1, [sp, #24]
   28bbc:	ldr	x0, [sp, #40]
   28bc0:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   28bc4:	mov	w0, #0x1                   	// #1
   28bc8:	b	28c6c <udev_util_encode_string@@LIBUDEV_183+0x1d43c>
   28bcc:	mov	w0, #0x0                   	// #0
   28bd0:	b	28c6c <udev_util_encode_string@@LIBUDEV_183+0x1d43c>
   28bd4:	ldrb	w2, [sp, #63]
   28bd8:	ldr	w1, [sp, #36]
   28bdc:	ldr	x0, [sp, #40]
   28be0:	bl	2764c <udev_util_encode_string@@LIBUDEV_183+0x1be1c>
   28be4:	str	w0, [sp, #68]
   28be8:	ldr	w1, [sp, #68]
   28bec:	ldr	w0, [sp, #64]
   28bf0:	cmp	w1, w0
   28bf4:	b.cs	28c4c <udev_util_encode_string@@LIBUDEV_183+0x1d41c>  // b.hs, b.nlast
   28bf8:	ldr	w2, [sp, #64]
   28bfc:	ldr	w1, [sp, #36]
   28c00:	ldr	x0, [sp, #40]
   28c04:	bl	276d0 <udev_util_encode_string@@LIBUDEV_183+0x1bea0>
   28c08:	mov	w3, #0xfffffffd            	// #-3
   28c0c:	ldr	w2, [sp, #36]
   28c10:	ldr	x1, [sp, #24]
   28c14:	ldr	x0, [sp, #40]
   28c18:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   28c1c:	ldr	w3, [sp, #36]
   28c20:	mov	w2, #0xfffffffc            	// #-4
   28c24:	ldr	x1, [sp, #24]
   28c28:	ldr	x0, [sp, #40]
   28c2c:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   28c30:	mov	w3, #0xfffffffc            	// #-4
   28c34:	mov	w2, #0xfffffffd            	// #-3
   28c38:	ldr	x1, [sp, #24]
   28c3c:	ldr	x0, [sp, #40]
   28c40:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   28c44:	ldr	w0, [sp, #68]
   28c48:	str	w0, [sp, #64]
   28c4c:	ldr	w1, [sp, #36]
   28c50:	ldr	x0, [sp, #40]
   28c54:	bl	279e8 <udev_util_encode_string@@LIBUDEV_183+0x1c1b8>
   28c58:	str	w0, [sp, #36]
   28c5c:	ldr	w0, [sp, #64]
   28c60:	add	w0, w0, #0x1
   28c64:	str	w0, [sp, #64]
   28c68:	b	28ae8 <udev_util_encode_string@@LIBUDEV_183+0x1d2b8>
   28c6c:	ldp	x29, x30, [sp], #80
   28c70:	ret
   28c74:	stp	x29, x30, [sp, #-96]!
   28c78:	mov	x29, sp
   28c7c:	str	x19, [sp, #16]
   28c80:	str	x0, [sp, #56]
   28c84:	str	w1, [sp, #52]
   28c88:	str	x2, [sp, #40]
   28c8c:	strb	w3, [sp, #51]
   28c90:	ldr	x0, [sp, #56]
   28c94:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   28c98:	mov	w1, w0
   28c9c:	ldr	w0, [sp, #52]
   28ca0:	cmp	w0, w1
   28ca4:	cset	w0, cs  // cs = hs, nlast
   28ca8:	and	w0, w0, #0xff
   28cac:	and	x0, x0, #0xff
   28cb0:	cmp	x0, #0x0
   28cb4:	b.eq	28ce0 <udev_util_encode_string@@LIBUDEV_183+0x1d4b0>  // b.none
   28cb8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28cbc:	add	x1, x0, #0xc93
   28cc0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28cc4:	add	x4, x0, #0xe0
   28cc8:	mov	w3, #0x3e6                 	// #998
   28ccc:	mov	x2, x1
   28cd0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28cd4:	add	x1, x0, #0xdd8
   28cd8:	mov	w0, #0x0                   	// #0
   28cdc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28ce0:	mov	w1, #0xfffffffc            	// #-4
   28ce4:	ldr	x0, [sp, #40]
   28ce8:	bl	274d8 <udev_util_encode_string@@LIBUDEV_183+0x1bca8>
   28cec:	str	x0, [sp, #72]
   28cf0:	ldrb	w0, [sp, #51]
   28cf4:	cmp	w0, #0x0
   28cf8:	b.eq	28d44 <udev_util_encode_string@@LIBUDEV_183+0x1d514>  // b.none
   28cfc:	mov	w1, #0x1                   	// #1
   28d00:	ldr	x0, [sp, #56]
   28d04:	bl	28ee0 <udev_util_encode_string@@LIBUDEV_183+0x1d6b0>
   28d08:	str	w0, [sp, #68]
   28d0c:	ldr	w0, [sp, #68]
   28d10:	cmp	w0, #0x0
   28d14:	b.ge	28d20 <udev_util_encode_string@@LIBUDEV_183+0x1d4f0>  // b.tcont
   28d18:	ldr	w0, [sp, #68]
   28d1c:	b	28ed4 <udev_util_encode_string@@LIBUDEV_183+0x1d6a4>
   28d20:	ldr	w0, [sp, #68]
   28d24:	cmp	w0, #0x0
   28d28:	b.le	28d44 <udev_util_encode_string@@LIBUDEV_183+0x1d514>
   28d2c:	ldr	x0, [sp, #72]
   28d30:	ldr	x0, [x0]
   28d34:	mov	x1, x0
   28d38:	ldr	x0, [sp, #56]
   28d3c:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   28d40:	str	w0, [sp, #52]
   28d44:	ldr	x0, [sp, #56]
   28d48:	bl	27148 <udev_util_encode_string@@LIBUDEV_183+0x1b918>
   28d4c:	mov	w19, w0
   28d50:	ldr	x0, [sp, #56]
   28d54:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   28d58:	cmp	w19, w0
   28d5c:	cset	w0, cs  // cs = hs, nlast
   28d60:	and	w0, w0, #0xff
   28d64:	and	x0, x0, #0xff
   28d68:	cmp	x0, #0x0
   28d6c:	b.eq	28d98 <udev_util_encode_string@@LIBUDEV_183+0x1d568>  // b.none
   28d70:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28d74:	add	x1, x0, #0xc93
   28d78:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28d7c:	add	x4, x0, #0xe0
   28d80:	mov	w3, #0x3f1                 	// #1009
   28d84:	mov	x2, x1
   28d88:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28d8c:	add	x1, x0, #0xdf0
   28d90:	mov	w0, #0x0                   	// #0
   28d94:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28d98:	ldr	x0, [sp, #56]
   28d9c:	ldrb	w0, [x0, #47]
   28da0:	and	w0, w0, #0x3
   28da4:	and	w0, w0, #0xff
   28da8:	cmp	w0, #0x1
   28dac:	b.ne	28e78 <udev_util_encode_string@@LIBUDEV_183+0x1d648>  // b.any
   28db0:	ldr	x0, [sp, #56]
   28db4:	str	x0, [sp, #80]
   28db8:	ldr	x0, [sp, #72]
   28dbc:	mov	w1, #0xffffffff            	// #-1
   28dc0:	str	w1, [x0, #16]
   28dc4:	ldr	x0, [sp, #80]
   28dc8:	ldr	w1, [x0, #60]
   28dcc:	ldr	x0, [sp, #72]
   28dd0:	str	w1, [x0, #20]
   28dd4:	ldr	x0, [sp, #80]
   28dd8:	ldr	w0, [x0, #60]
   28ddc:	cmn	w0, #0x1
   28de0:	b.eq	28e50 <udev_util_encode_string@@LIBUDEV_183+0x1d620>  // b.none
   28de4:	ldr	x0, [sp, #80]
   28de8:	ldr	w0, [x0, #60]
   28dec:	mov	w1, w0
   28df0:	ldr	x0, [sp, #80]
   28df4:	bl	274b4 <udev_util_encode_string@@LIBUDEV_183+0x1bc84>
   28df8:	str	x0, [sp, #88]
   28dfc:	ldr	x0, [sp, #88]
   28e00:	ldr	w0, [x0, #16]
   28e04:	cmn	w0, #0x1
   28e08:	cset	w0, ne  // ne = any
   28e0c:	and	w0, w0, #0xff
   28e10:	and	x0, x0, #0xff
   28e14:	cmp	x0, #0x0
   28e18:	b.eq	28e44 <udev_util_encode_string@@LIBUDEV_183+0x1d614>  // b.none
   28e1c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28e20:	add	x1, x0, #0xc93
   28e24:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28e28:	add	x4, x0, #0xe0
   28e2c:	mov	w3, #0x3fd                 	// #1021
   28e30:	mov	x2, x1
   28e34:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28e38:	add	x1, x0, #0xe10
   28e3c:	mov	w0, #0x0                   	// #0
   28e40:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28e44:	ldr	x0, [sp, #88]
   28e48:	mov	w1, #0xfffffffc            	// #-4
   28e4c:	str	w1, [x0, #16]
   28e50:	ldr	x0, [sp, #80]
   28e54:	mov	w1, #0xfffffffc            	// #-4
   28e58:	str	w1, [x0, #60]
   28e5c:	ldr	x0, [sp, #80]
   28e60:	ldr	w0, [x0, #56]
   28e64:	cmn	w0, #0x1
   28e68:	b.ne	28e78 <udev_util_encode_string@@LIBUDEV_183+0x1d648>  // b.any
   28e6c:	ldr	x0, [sp, #80]
   28e70:	mov	w1, #0xfffffffc            	// #-4
   28e74:	str	w1, [x0, #56]
   28e78:	ldr	x2, [sp, #40]
   28e7c:	ldr	w1, [sp, #52]
   28e80:	ldr	x0, [sp, #56]
   28e84:	bl	28ac4 <udev_util_encode_string@@LIBUDEV_183+0x1d294>
   28e88:	and	w0, w0, #0xff
   28e8c:	and	x0, x0, #0xff
   28e90:	cmp	x0, #0x0
   28e94:	b.eq	28ec0 <udev_util_encode_string@@LIBUDEV_183+0x1d690>  // b.none
   28e98:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28e9c:	add	x1, x0, #0xc93
   28ea0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28ea4:	add	x4, x0, #0xe0
   28ea8:	mov	w3, #0x406                 	// #1030
   28eac:	mov	x2, x1
   28eb0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28eb4:	add	x1, x0, #0xe38
   28eb8:	mov	w0, #0x0                   	// #0
   28ebc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28ec0:	ldr	x0, [sp, #56]
   28ec4:	bl	2718c <udev_util_encode_string@@LIBUDEV_183+0x1b95c>
   28ec8:	ldr	x0, [sp, #56]
   28ecc:	bl	27390 <udev_util_encode_string@@LIBUDEV_183+0x1bb60>
   28ed0:	mov	w0, #0x1                   	// #1
   28ed4:	ldr	x19, [sp, #16]
   28ed8:	ldp	x29, x30, [sp], #96
   28edc:	ret
   28ee0:	stp	x29, x30, [sp, #-208]!
   28ee4:	mov	x29, sp
   28ee8:	str	x19, [sp, #16]
   28eec:	str	x0, [sp, #40]
   28ef0:	str	w1, [sp, #36]
   28ef4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   28ef8:	ldr	x0, [x0, #4016]
   28efc:	ldr	x1, [x0]
   28f00:	str	x1, [sp, #200]
   28f04:	mov	x1, #0x0                   	// #0
   28f08:	ldr	x0, [sp, #40]
   28f0c:	cmp	x0, #0x0
   28f10:	cset	w0, eq  // eq = none
   28f14:	and	w0, w0, #0xff
   28f18:	and	x0, x0, #0xff
   28f1c:	cmp	x0, #0x0
   28f20:	b.eq	28f4c <udev_util_encode_string@@LIBUDEV_183+0x1d71c>  // b.none
   28f24:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28f28:	add	x1, x0, #0xc93
   28f2c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   28f30:	add	x4, x0, #0xf8
   28f34:	mov	w3, #0x423                 	// #1059
   28f38:	mov	x2, x1
   28f3c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   28f40:	add	x1, x0, #0xd20
   28f44:	mov	w0, #0x0                   	// #0
   28f48:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   28f4c:	ldr	x0, [sp, #40]
   28f50:	ldrb	w0, [x0, #47]
   28f54:	ubfx	x0, x0, #0, #2
   28f58:	and	w0, w0, #0xff
   28f5c:	sxtw	x0, w0
   28f60:	lsl	x1, x0, #5
   28f64:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   28f68:	add	x0, x0, #0x6a8
   28f6c:	add	x0, x1, x0
   28f70:	str	x0, [sp, #88]
   28f74:	ldr	x0, [sp, #40]
   28f78:	bl	27148 <udev_util_encode_string@@LIBUDEV_183+0x1b918>
   28f7c:	mov	w1, w0
   28f80:	ldr	w0, [sp, #36]
   28f84:	add	w0, w0, w1
   28f88:	str	w0, [sp, #76]
   28f8c:	ldr	w1, [sp, #76]
   28f90:	ldr	w0, [sp, #36]
   28f94:	cmp	w1, w0
   28f98:	cset	w0, cc  // cc = lo, ul, last
   28f9c:	and	w0, w0, #0xff
   28fa0:	and	x0, x0, #0xff
   28fa4:	cmp	x0, #0x0
   28fa8:	b.eq	28fb4 <udev_util_encode_string@@LIBUDEV_183+0x1d784>  // b.none
   28fac:	mov	w0, #0xfffffff4            	// #-12
   28fb0:	b	29524 <udev_util_encode_string@@LIBUDEV_183+0x1dcf4>
   28fb4:	ldr	x0, [sp, #40]
   28fb8:	ldrb	w0, [x0, #47]
   28fbc:	ubfx	x0, x0, #2, #1
   28fc0:	and	w0, w0, #0xff
   28fc4:	eor	w0, w0, #0x1
   28fc8:	and	w0, w0, #0xff
   28fcc:	cmp	w0, #0x0
   28fd0:	b.eq	28ff0 <udev_util_encode_string@@LIBUDEV_183+0x1d7c0>  // b.none
   28fd4:	ldr	x0, [sp, #88]
   28fd8:	ldr	w0, [x0, #24]
   28fdc:	ldr	w1, [sp, #76]
   28fe0:	cmp	w1, w0
   28fe4:	b.hi	28ff0 <udev_util_encode_string@@LIBUDEV_183+0x1d7c0>  // b.pmore
   28fe8:	mov	w0, #0x0                   	// #0
   28fec:	b	29524 <udev_util_encode_string@@LIBUDEV_183+0x1dcf4>
   28ff0:	ldr	w0, [sp, #76]
   28ff4:	lsr	w0, w0, #2
   28ff8:	ldr	w1, [sp, #76]
   28ffc:	add	w0, w1, w0
   29000:	str	w0, [sp, #80]
   29004:	ldr	w1, [sp, #80]
   29008:	ldr	w0, [sp, #76]
   2900c:	cmp	w1, w0
   29010:	cset	w0, cc  // cc = lo, ul, last
   29014:	and	w0, w0, #0xff
   29018:	and	x0, x0, #0xff
   2901c:	cmp	x0, #0x0
   29020:	b.eq	2902c <udev_util_encode_string@@LIBUDEV_183+0x1d7fc>  // b.none
   29024:	mov	w0, #0xfffffff4            	// #-12
   29028:	b	29524 <udev_util_encode_string@@LIBUDEV_183+0x1dcf4>
   2902c:	ldr	w1, [sp, #80]
   29030:	ldr	x0, [sp, #88]
   29034:	ldr	x0, [x0, #8]
   29038:	add	x0, x0, #0x1
   2903c:	mov	x2, #0xffffffff            	// #4294967295
   29040:	udiv	x0, x2, x0
   29044:	cmp	x1, x0
   29048:	cset	w0, hi  // hi = pmore
   2904c:	and	w0, w0, #0xff
   29050:	and	x0, x0, #0xff
   29054:	cmp	x0, #0x0
   29058:	b.eq	29064 <udev_util_encode_string@@LIBUDEV_183+0x1d834>  // b.none
   2905c:	mov	w0, #0xfffffff4            	// #-12
   29060:	b	29524 <udev_util_encode_string@@LIBUDEV_183+0x1dcf4>
   29064:	ldr	x0, [sp, #40]
   29068:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   2906c:	str	w0, [sp, #84]
   29070:	ldr	w1, [sp, #80]
   29074:	ldr	w0, [sp, #84]
   29078:	cmp	w1, w0
   2907c:	cset	w0, ls  // ls = plast
   29080:	and	w0, w0, #0xff
   29084:	and	x0, x0, #0xff
   29088:	cmp	x0, #0x0
   2908c:	b.eq	29098 <udev_util_encode_string@@LIBUDEV_183+0x1d868>  // b.none
   29090:	mov	w0, #0x0                   	// #0
   29094:	b	29524 <udev_util_encode_string@@LIBUDEV_183+0x1dcf4>
   29098:	ldr	w1, [sp, #80]
   2909c:	ldr	x0, [sp, #88]
   290a0:	ldr	x0, [x0, #8]
   290a4:	add	x0, x0, #0x1
   290a8:	mul	x0, x1, x0
   290ac:	str	x0, [sp, #96]
   290b0:	mov	x0, #0x4e                  	// #78
   290b4:	str	x0, [sp, #104]
   290b8:	ldr	x0, [sp, #96]
   290bc:	ldr	x2, [sp, #104]
   290c0:	ldr	x1, [sp, #104]
   290c4:	cmp	x2, x0
   290c8:	csel	x0, x1, x0, cs  // cs = hs, nlast
   290cc:	bl	2700c <udev_util_encode_string@@LIBUDEV_183+0x1b7dc>
   290d0:	strb	w0, [sp, #62]
   290d4:	ldr	x0, [sp, #40]
   290d8:	ldrb	w0, [x0, #47]
   290dc:	and	w0, w0, #0x4
   290e0:	and	w0, w0, #0xff
   290e4:	cmp	w0, #0x0
   290e8:	b.eq	290f8 <udev_util_encode_string@@LIBUDEV_183+0x1d8c8>  // b.none
   290ec:	ldr	x0, [sp, #40]
   290f0:	ldr	x0, [x0, #8]
   290f4:	b	290fc <udev_util_encode_string@@LIBUDEV_183+0x1d8cc>
   290f8:	mov	x0, #0x0                   	// #0
   290fc:	ldrb	w1, [sp, #62]
   29100:	mov	w2, #0x1                   	// #1
   29104:	lsl	w1, w2, w1
   29108:	mov	w1, w1
   2910c:	bl	5330 <realloc@plt>
   29110:	str	x0, [sp, #112]
   29114:	ldr	x0, [sp, #112]
   29118:	cmp	x0, #0x0
   2911c:	b.ne	29128 <udev_util_encode_string@@LIBUDEV_183+0x1d8f8>  // b.any
   29120:	mov	w0, #0xfffffff4            	// #-12
   29124:	b	29524 <udev_util_encode_string@@LIBUDEV_183+0x1dcf4>
   29128:	ldr	x0, [sp, #40]
   2912c:	ldrb	w0, [x0, #47]
   29130:	ubfx	x0, x0, #2, #1
   29134:	and	w0, w0, #0xff
   29138:	eor	w0, w0, #0x1
   2913c:	and	w0, w0, #0xff
   29140:	cmp	w0, #0x0
   29144:	b.eq	291a8 <udev_util_encode_string@@LIBUDEV_183+0x1d978>  // b.none
   29148:	ldr	x0, [sp, #40]
   2914c:	add	x3, x0, #0x8
   29150:	ldr	w1, [sp, #84]
   29154:	ldr	x0, [sp, #88]
   29158:	ldr	x0, [x0, #8]
   2915c:	add	x0, x0, #0x1
   29160:	mul	x0, x1, x0
   29164:	mov	x2, x0
   29168:	mov	x1, x3
   2916c:	ldr	x0, [sp, #112]
   29170:	bl	5010 <memcpy@plt>
   29174:	ldr	x0, [sp, #40]
   29178:	ldrb	w0, [x0, #47]
   2917c:	ubfx	x0, x0, #3, #3
   29180:	and	w0, w0, #0xff
   29184:	mov	w1, w0
   29188:	ldr	x0, [sp, #40]
   2918c:	str	w1, [x0, #32]
   29190:	ldr	x0, [sp, #40]
   29194:	str	wzr, [x0, #40]
   29198:	ldr	x0, [sp, #40]
   2919c:	ldrb	w1, [x0, #47]
   291a0:	and	w1, w1, #0xffffffc7
   291a4:	strb	w1, [x0, #47]
   291a8:	ldr	x0, [sp, #40]
   291ac:	add	x2, x0, #0x10
   291b0:	ldr	x0, [sp, #40]
   291b4:	ldrb	w0, [x0, #47]
   291b8:	ubfx	x0, x0, #2, #1
   291bc:	and	w0, w0, #0xff
   291c0:	cmp	w0, #0x0
   291c4:	cset	w0, ne  // ne = any
   291c8:	and	w0, w0, #0xff
   291cc:	eor	w0, w0, #0x1
   291d0:	and	w0, w0, #0xff
   291d4:	and	w0, w0, #0x1
   291d8:	and	w0, w0, #0xff
   291dc:	mov	w1, w0
   291e0:	mov	x0, x2
   291e4:	bl	273b4 <udev_util_encode_string@@LIBUDEV_183+0x1bb84>
   291e8:	ldr	x0, [sp, #40]
   291ec:	ldrb	w1, [x0, #47]
   291f0:	orr	w1, w1, #0x4
   291f4:	strb	w1, [x0, #47]
   291f8:	ldr	x0, [sp, #40]
   291fc:	ldr	x1, [sp, #112]
   29200:	str	x1, [x0, #8]
   29204:	ldrb	w0, [sp, #62]
   29208:	mov	w1, #0x1                   	// #1
   2920c:	lsl	w0, w1, w0
   29210:	mov	w1, w0
   29214:	ldr	x0, [sp, #88]
   29218:	ldr	x0, [x0, #8]
   2921c:	add	x0, x0, #0x1
   29220:	udiv	x0, x1, x0
   29224:	mov	w1, w0
   29228:	ldr	x0, [sp, #40]
   2922c:	str	w1, [x0, #36]
   29230:	ldr	x0, [sp, #88]
   29234:	ldr	x1, [x0, #8]
   29238:	ldr	w0, [sp, #84]
   2923c:	mul	x0, x1, x0
   29240:	ldr	x1, [sp, #112]
   29244:	add	x0, x1, x0
   29248:	str	x0, [sp, #120]
   2924c:	ldr	x0, [sp, #40]
   29250:	bl	2758c <udev_util_encode_string@@LIBUDEV_183+0x1bd5c>
   29254:	str	x0, [sp, #128]
   29258:	str	wzr, [sp, #64]
   2925c:	b	292f0 <udev_util_encode_string@@LIBUDEV_183+0x1dac0>
   29260:	ldr	w0, [sp, #64]
   29264:	ldr	x1, [sp, #120]
   29268:	add	x0, x1, x0
   2926c:	ldrb	w0, [x0]
   29270:	cmp	w0, #0xfe
   29274:	cset	w0, eq  // eq = none
   29278:	and	w0, w0, #0xff
   2927c:	and	x0, x0, #0xff
   29280:	cmp	x0, #0x0
   29284:	b.eq	292b0 <udev_util_encode_string@@LIBUDEV_183+0x1da80>  // b.none
   29288:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   2928c:	add	x1, x0, #0xc93
   29290:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29294:	add	x4, x0, #0xf8
   29298:	mov	w3, #0x468                 	// #1128
   2929c:	mov	x2, x1
   292a0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   292a4:	add	x1, x0, #0xe68
   292a8:	mov	w0, #0x0                   	// #0
   292ac:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   292b0:	ldr	w0, [sp, #64]
   292b4:	ldr	x1, [sp, #120]
   292b8:	add	x0, x1, x0
   292bc:	ldrb	w0, [x0]
   292c0:	cmp	w0, #0xff
   292c4:	b.ne	292d0 <udev_util_encode_string@@LIBUDEV_183+0x1daa0>  // b.any
   292c8:	mov	w0, #0xff                  	// #255
   292cc:	b	292d4 <udev_util_encode_string@@LIBUDEV_183+0x1daa4>
   292d0:	mov	w0, #0xfe                  	// #254
   292d4:	ldr	w1, [sp, #64]
   292d8:	ldr	x2, [sp, #128]
   292dc:	add	x1, x2, x1
   292e0:	strb	w0, [x1]
   292e4:	ldr	w0, [sp, #64]
   292e8:	add	w0, w0, #0x1
   292ec:	str	w0, [sp, #64]
   292f0:	ldr	w1, [sp, #64]
   292f4:	ldr	w0, [sp, #84]
   292f8:	cmp	w1, w0
   292fc:	b.cc	29260 <udev_util_encode_string@@LIBUDEV_183+0x1da30>  // b.lo, b.ul, b.last
   29300:	ldr	x0, [sp, #40]
   29304:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   29308:	mov	w1, w0
   2930c:	ldr	w0, [sp, #84]
   29310:	sub	w0, w1, w0
   29314:	mov	w1, w0
   29318:	ldr	x0, [sp, #88]
   2931c:	ldr	x0, [x0, #8]
   29320:	mul	x0, x1, x0
   29324:	str	x0, [sp, #136]
   29328:	ldr	x0, [sp, #136]
   2932c:	cmp	x0, #0x0
   29330:	b.eq	2934c <udev_util_encode_string@@LIBUDEV_183+0x1db1c>  // b.none
   29334:	ldr	w1, [sp, #84]
   29338:	ldr	x0, [sp, #40]
   2933c:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   29340:	ldr	x2, [sp, #136]
   29344:	mov	w1, #0x0                   	// #0
   29348:	bl	5290 <memset@plt>
   2934c:	ldr	w0, [sp, #84]
   29350:	ldr	x1, [sp, #128]
   29354:	add	x19, x1, x0
   29358:	ldr	x0, [sp, #40]
   2935c:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   29360:	mov	w1, w0
   29364:	ldr	w0, [sp, #84]
   29368:	sub	w0, w1, w0
   2936c:	mov	w0, w0
   29370:	mov	x2, x0
   29374:	mov	w1, #0xff                  	// #255
   29378:	mov	x0, x19
   2937c:	bl	5290 <memset@plt>
   29380:	str	wzr, [sp, #72]
   29384:	str	wzr, [sp, #64]
   29388:	b	294c0 <udev_util_encode_string@@LIBUDEV_183+0x1dc90>
   2938c:	ldr	w0, [sp, #64]
   29390:	ldr	x1, [sp, #128]
   29394:	add	x0, x1, x0
   29398:	ldrb	w0, [x0]
   2939c:	cmp	w0, #0xfe
   293a0:	b.ne	294b0 <udev_util_encode_string@@LIBUDEV_183+0x1dc80>  // b.any
   293a4:	ldr	w1, [sp, #64]
   293a8:	ldr	x0, [sp, #40]
   293ac:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   293b0:	ldr	x0, [x0]
   293b4:	mov	x1, x0
   293b8:	ldr	x0, [sp, #40]
   293bc:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   293c0:	str	w0, [sp, #68]
   293c4:	ldr	w1, [sp, #68]
   293c8:	ldr	w0, [sp, #64]
   293cc:	cmp	w1, w0
   293d0:	b.ne	293f4 <udev_util_encode_string@@LIBUDEV_183+0x1dbc4>  // b.any
   293d4:	ldr	w0, [sp, #64]
   293d8:	ldr	x1, [sp, #128]
   293dc:	add	x0, x1, x0
   293e0:	strb	wzr, [x0]
   293e4:	ldr	w0, [sp, #72]
   293e8:	add	w0, w0, #0x1
   293ec:	str	w0, [sp, #72]
   293f0:	b	294b4 <udev_util_encode_string@@LIBUDEV_183+0x1dc84>
   293f4:	ldr	w0, [sp, #64]
   293f8:	ldr	x1, [sp, #128]
   293fc:	add	x0, x1, x0
   29400:	mov	w1, #0xffffffff            	// #-1
   29404:	strb	w1, [x0]
   29408:	add	x0, sp, #0x98
   2940c:	mov	w3, #0xfffffffc            	// #-4
   29410:	ldr	w2, [sp, #64]
   29414:	mov	x1, x0
   29418:	ldr	x0, [sp, #40]
   2941c:	bl	27840 <udev_util_encode_string@@LIBUDEV_183+0x1c010>
   29420:	ldr	x0, [sp, #88]
   29424:	ldr	x0, [x0, #8]
   29428:	str	x0, [sp, #144]
   2942c:	ldr	x0, [sp, #144]
   29430:	cmp	x0, #0x0
   29434:	b.eq	29450 <udev_util_encode_string@@LIBUDEV_183+0x1dc20>  // b.none
   29438:	ldr	w1, [sp, #64]
   2943c:	ldr	x0, [sp, #40]
   29440:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   29444:	ldr	x2, [sp, #144]
   29448:	mov	w1, #0x0                   	// #0
   2944c:	bl	5290 <memset@plt>
   29450:	add	x0, sp, #0x98
   29454:	mov	x2, x0
   29458:	ldr	w1, [sp, #68]
   2945c:	ldr	x0, [sp, #40]
   29460:	bl	28ac4 <udev_util_encode_string@@LIBUDEV_183+0x1d294>
   29464:	strb	w0, [sp, #63]
   29468:	ldr	w0, [sp, #72]
   2946c:	add	w0, w0, #0x1
   29470:	str	w0, [sp, #72]
   29474:	ldrb	w0, [sp, #63]
   29478:	cmp	w0, #0x0
   2947c:	b.eq	294a0 <udev_util_encode_string@@LIBUDEV_183+0x1dc70>  // b.none
   29480:	add	x0, sp, #0x98
   29484:	mov	w1, #0xfffffffc            	// #-4
   29488:	bl	274d8 <udev_util_encode_string@@LIBUDEV_183+0x1bca8>
   2948c:	ldr	x0, [x0]
   29490:	mov	x1, x0
   29494:	ldr	x0, [sp, #40]
   29498:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   2949c:	str	w0, [sp, #68]
   294a0:	ldrb	w0, [sp, #63]
   294a4:	cmp	w0, #0x0
   294a8:	b.ne	29450 <udev_util_encode_string@@LIBUDEV_183+0x1dc20>  // b.any
   294ac:	b	294b4 <udev_util_encode_string@@LIBUDEV_183+0x1dc84>
   294b0:	nop
   294b4:	ldr	w0, [sp, #64]
   294b8:	add	w0, w0, #0x1
   294bc:	str	w0, [sp, #64]
   294c0:	ldr	w1, [sp, #64]
   294c4:	ldr	w0, [sp, #84]
   294c8:	cmp	w1, w0
   294cc:	b.cc	2938c <udev_util_encode_string@@LIBUDEV_183+0x1db5c>  // b.lo, b.ul, b.last
   294d0:	ldr	x0, [sp, #40]
   294d4:	bl	27148 <udev_util_encode_string@@LIBUDEV_183+0x1b918>
   294d8:	mov	w1, w0
   294dc:	ldr	w0, [sp, #72]
   294e0:	cmp	w0, w1
   294e4:	cset	w0, ne  // ne = any
   294e8:	and	w0, w0, #0xff
   294ec:	and	x0, x0, #0xff
   294f0:	cmp	x0, #0x0
   294f4:	b.eq	29520 <udev_util_encode_string@@LIBUDEV_183+0x1dcf0>  // b.none
   294f8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   294fc:	add	x1, x0, #0xc93
   29500:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29504:	add	x4, x0, #0xf8
   29508:	mov	w3, #0x49a                 	// #1178
   2950c:	mov	x2, x1
   29510:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29514:	add	x1, x0, #0xe88
   29518:	mov	w0, #0x0                   	// #0
   2951c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29520:	mov	w0, #0x1                   	// #1
   29524:	mov	w1, w0
   29528:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2952c:	ldr	x0, [x0, #4016]
   29530:	ldr	x2, [sp, #200]
   29534:	ldr	x0, [x0]
   29538:	eor	x0, x2, x0
   2953c:	cmp	x0, #0x0
   29540:	b.eq	29548 <udev_util_encode_string@@LIBUDEV_183+0x1dd18>  // b.none
   29544:	bl	5390 <__stack_chk_fail@plt>
   29548:	mov	w0, w1
   2954c:	ldr	x19, [sp, #16]
   29550:	ldp	x29, x30, [sp], #208
   29554:	ret
   29558:	stp	x29, x30, [sp, #-80]!
   2955c:	mov	x29, sp
   29560:	str	x0, [sp, #40]
   29564:	str	w1, [sp, #36]
   29568:	str	x2, [sp, #24]
   2956c:	ldr	x0, [sp, #40]
   29570:	bl	2758c <udev_util_encode_string@@LIBUDEV_183+0x1bd5c>
   29574:	str	x0, [sp, #64]
   29578:	ldr	x0, [sp, #40]
   2957c:	bl	270e8 <udev_util_encode_string@@LIBUDEV_183+0x1b8b8>
   29580:	mov	w1, w0
   29584:	ldr	w0, [sp, #36]
   29588:	cmp	w0, w1
   2958c:	cset	w0, cs  // cs = hs, nlast
   29590:	and	w0, w0, #0xff
   29594:	and	x0, x0, #0xff
   29598:	cmp	x0, #0x0
   2959c:	b.eq	295c8 <udev_util_encode_string@@LIBUDEV_183+0x1dd98>  // b.none
   295a0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   295a4:	add	x1, x0, #0xc93
   295a8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   295ac:	add	x4, x0, #0x120
   295b0:	mov	w3, #0x4a8                 	// #1192
   295b4:	mov	x2, x1
   295b8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   295bc:	add	x1, x0, #0xdd8
   295c0:	mov	w0, #0x0                   	// #0
   295c4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   295c8:	str	wzr, [sp, #56]
   295cc:	ldr	w0, [sp, #36]
   295d0:	ldr	x1, [sp, #64]
   295d4:	add	x0, x1, x0
   295d8:	ldrb	w0, [x0]
   295dc:	cmp	w0, #0xff
   295e0:	b.ne	295ec <udev_util_encode_string@@LIBUDEV_183+0x1ddbc>  // b.any
   295e4:	mov	w0, #0xffffffff            	// #-1
   295e8:	b	29694 <udev_util_encode_string@@LIBUDEV_183+0x1de64>
   295ec:	ldr	w0, [sp, #36]
   295f0:	ldr	x1, [sp, #64]
   295f4:	add	x0, x1, x0
   295f8:	ldrb	w0, [x0]
   295fc:	mov	w2, w0
   29600:	ldr	w1, [sp, #36]
   29604:	ldr	x0, [sp, #40]
   29608:	bl	2764c <udev_util_encode_string@@LIBUDEV_183+0x1be1c>
   2960c:	str	w0, [sp, #60]
   29610:	ldr	w1, [sp, #60]
   29614:	ldr	w0, [sp, #56]
   29618:	cmp	w1, w0
   2961c:	b.cs	29628 <udev_util_encode_string@@LIBUDEV_183+0x1ddf8>  // b.hs, b.nlast
   29620:	mov	w0, #0xffffffff            	// #-1
   29624:	b	29694 <udev_util_encode_string@@LIBUDEV_183+0x1de64>
   29628:	ldr	w1, [sp, #60]
   2962c:	ldr	w0, [sp, #56]
   29630:	cmp	w1, w0
   29634:	b.ne	29674 <udev_util_encode_string@@LIBUDEV_183+0x1de44>  // b.any
   29638:	ldr	w1, [sp, #36]
   2963c:	ldr	x0, [sp, #40]
   29640:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   29644:	str	x0, [sp, #72]
   29648:	ldr	x0, [sp, #40]
   2964c:	ldr	x0, [x0]
   29650:	ldr	x2, [x0, #8]
   29654:	ldr	x0, [sp, #72]
   29658:	ldr	x0, [x0]
   2965c:	ldr	x1, [sp, #24]
   29660:	blr	x2
   29664:	cmp	w0, #0x0
   29668:	b.ne	29674 <udev_util_encode_string@@LIBUDEV_183+0x1de44>  // b.any
   2966c:	ldr	w0, [sp, #36]
   29670:	b	29694 <udev_util_encode_string@@LIBUDEV_183+0x1de64>
   29674:	ldr	w1, [sp, #36]
   29678:	ldr	x0, [sp, #40]
   2967c:	bl	279e8 <udev_util_encode_string@@LIBUDEV_183+0x1c1b8>
   29680:	str	w0, [sp, #36]
   29684:	ldr	w0, [sp, #56]
   29688:	add	w0, w0, #0x1
   2968c:	str	w0, [sp, #56]
   29690:	b	295cc <udev_util_encode_string@@LIBUDEV_183+0x1dd9c>
   29694:	ldp	x29, x30, [sp], #80
   29698:	ret
   2969c:	stp	x29, x30, [sp, #-128]!
   296a0:	mov	x29, sp
   296a4:	str	x0, [sp, #40]
   296a8:	str	x1, [sp, #32]
   296ac:	str	x2, [sp, #24]
   296b0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   296b4:	ldr	x0, [x0, #4016]
   296b8:	ldr	x1, [x0]
   296bc:	str	x1, [sp, #120]
   296c0:	mov	x1, #0x0                   	// #0
   296c4:	ldr	x0, [sp, #40]
   296c8:	cmp	x0, #0x0
   296cc:	cset	w0, eq  // eq = none
   296d0:	and	w0, w0, #0xff
   296d4:	and	x0, x0, #0xff
   296d8:	cmp	x0, #0x0
   296dc:	b.eq	29708 <udev_util_encode_string@@LIBUDEV_183+0x1ded8>  // b.none
   296e0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   296e4:	add	x1, x0, #0xc93
   296e8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   296ec:	add	x4, x0, #0x138
   296f0:	mov	w3, #0x4c2                 	// #1218
   296f4:	mov	x2, x1
   296f8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   296fc:	add	x1, x0, #0xd20
   29700:	mov	w0, #0x0                   	// #0
   29704:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29708:	ldr	x1, [sp, #32]
   2970c:	ldr	x0, [sp, #40]
   29710:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29714:	str	w0, [sp, #56]
   29718:	ldr	x2, [sp, #32]
   2971c:	ldr	w1, [sp, #56]
   29720:	ldr	x0, [sp, #40]
   29724:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29728:	str	w0, [sp, #60]
   2972c:	ldr	w0, [sp, #60]
   29730:	cmn	w0, #0x1
   29734:	b.eq	2976c <udev_util_encode_string@@LIBUDEV_183+0x1df3c>  // b.none
   29738:	ldr	w1, [sp, #60]
   2973c:	ldr	x0, [sp, #40]
   29740:	bl	27490 <udev_util_encode_string@@LIBUDEV_183+0x1bc60>
   29744:	str	x0, [sp, #64]
   29748:	ldr	x0, [sp, #64]
   2974c:	ldr	x0, [x0, #8]
   29750:	ldr	x1, [sp, #24]
   29754:	cmp	x1, x0
   29758:	b.ne	29764 <udev_util_encode_string@@LIBUDEV_183+0x1df34>  // b.any
   2975c:	mov	w0, #0x0                   	// #0
   29760:	b	297ac <udev_util_encode_string@@LIBUDEV_183+0x1df7c>
   29764:	mov	w0, #0xffffffef            	// #-17
   29768:	b	297ac <udev_util_encode_string@@LIBUDEV_183+0x1df7c>
   2976c:	add	x0, sp, #0x48
   29770:	mov	w1, #0xfffffffc            	// #-4
   29774:	bl	274d8 <udev_util_encode_string@@LIBUDEV_183+0x1bca8>
   29778:	str	x0, [sp, #64]
   2977c:	ldr	x0, [sp, #64]
   29780:	ldr	x1, [sp, #32]
   29784:	str	x1, [x0]
   29788:	ldr	x0, [sp, #64]
   2978c:	ldr	x1, [sp, #24]
   29790:	str	x1, [x0, #8]
   29794:	add	x0, sp, #0x48
   29798:	mov	w3, #0x1                   	// #1
   2979c:	mov	x2, x0
   297a0:	ldr	w1, [sp, #56]
   297a4:	ldr	x0, [sp, #40]
   297a8:	bl	28c74 <udev_util_encode_string@@LIBUDEV_183+0x1d444>
   297ac:	mov	w1, w0
   297b0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   297b4:	ldr	x0, [x0, #4016]
   297b8:	ldr	x2, [sp, #120]
   297bc:	ldr	x0, [x0]
   297c0:	eor	x0, x2, x0
   297c4:	cmp	x0, #0x0
   297c8:	b.eq	297d0 <udev_util_encode_string@@LIBUDEV_183+0x1dfa0>  // b.none
   297cc:	bl	5390 <__stack_chk_fail@plt>
   297d0:	mov	w0, w1
   297d4:	ldp	x29, x30, [sp], #128
   297d8:	ret
   297dc:	stp	x29, x30, [sp, #-112]!
   297e0:	mov	x29, sp
   297e4:	str	x0, [sp, #24]
   297e8:	str	x1, [sp, #16]
   297ec:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   297f0:	ldr	x0, [x0, #4016]
   297f4:	ldr	x1, [x0]
   297f8:	str	x1, [sp, #104]
   297fc:	mov	x1, #0x0                   	// #0
   29800:	ldr	x0, [sp, #24]
   29804:	cmp	x0, #0x0
   29808:	cset	w0, eq  // eq = none
   2980c:	and	w0, w0, #0xff
   29810:	and	x0, x0, #0xff
   29814:	cmp	x0, #0x0
   29818:	b.eq	29844 <udev_util_encode_string@@LIBUDEV_183+0x1e014>  // b.none
   2981c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29820:	add	x1, x0, #0xc93
   29824:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29828:	add	x4, x0, #0x148
   2982c:	mov	w3, #0x4d8                 	// #1240
   29830:	mov	x2, x1
   29834:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29838:	add	x1, x0, #0xea8
   2983c:	mov	w0, #0x0                   	// #0
   29840:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29844:	ldr	x1, [sp, #16]
   29848:	ldr	x0, [sp, #24]
   2984c:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29850:	str	w0, [sp, #40]
   29854:	ldr	x2, [sp, #16]
   29858:	ldr	w1, [sp, #40]
   2985c:	ldr	x0, [sp, #24]
   29860:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29864:	str	w0, [sp, #44]
   29868:	ldr	w0, [sp, #44]
   2986c:	cmn	w0, #0x1
   29870:	b.eq	2987c <udev_util_encode_string@@LIBUDEV_183+0x1e04c>  // b.none
   29874:	mov	w0, #0x0                   	// #0
   29878:	b	298b0 <udev_util_encode_string@@LIBUDEV_183+0x1e080>
   2987c:	add	x0, sp, #0x38
   29880:	mov	w1, #0xfffffffc            	// #-4
   29884:	bl	274d8 <udev_util_encode_string@@LIBUDEV_183+0x1bca8>
   29888:	str	x0, [sp, #48]
   2988c:	ldr	x0, [sp, #48]
   29890:	ldr	x1, [sp, #16]
   29894:	str	x1, [x0]
   29898:	add	x0, sp, #0x38
   2989c:	mov	w3, #0x1                   	// #1
   298a0:	mov	x2, x0
   298a4:	ldr	w1, [sp, #40]
   298a8:	ldr	x0, [sp, #24]
   298ac:	bl	28c74 <udev_util_encode_string@@LIBUDEV_183+0x1d444>
   298b0:	mov	w1, w0
   298b4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   298b8:	ldr	x0, [x0, #4016]
   298bc:	ldr	x2, [sp, #104]
   298c0:	ldr	x0, [x0]
   298c4:	eor	x0, x2, x0
   298c8:	cmp	x0, #0x0
   298cc:	b.eq	298d4 <udev_util_encode_string@@LIBUDEV_183+0x1e0a4>  // b.none
   298d0:	bl	5390 <__stack_chk_fail@plt>
   298d4:	mov	w0, w1
   298d8:	ldp	x29, x30, [sp], #112
   298dc:	ret
   298e0:	stp	x29, x30, [sp, #-128]!
   298e4:	mov	x29, sp
   298e8:	str	x0, [sp, #40]
   298ec:	str	x1, [sp, #32]
   298f0:	str	x2, [sp, #24]
   298f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   298f8:	ldr	x0, [x0, #4016]
   298fc:	ldr	x1, [x0]
   29900:	str	x1, [sp, #120]
   29904:	mov	x1, #0x0                   	// #0
   29908:	ldr	x0, [sp, #40]
   2990c:	cmp	x0, #0x0
   29910:	cset	w0, eq  // eq = none
   29914:	and	w0, w0, #0xff
   29918:	and	x0, x0, #0xff
   2991c:	cmp	x0, #0x0
   29920:	b.eq	2994c <udev_util_encode_string@@LIBUDEV_183+0x1e11c>  // b.none
   29924:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29928:	add	x1, x0, #0xc93
   2992c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29930:	add	x4, x0, #0x150
   29934:	mov	w3, #0x4e9                 	// #1257
   29938:	mov	x2, x1
   2993c:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29940:	add	x1, x0, #0xd20
   29944:	mov	w0, #0x0                   	// #0
   29948:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2994c:	ldr	x1, [sp, #32]
   29950:	ldr	x0, [sp, #40]
   29954:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29958:	str	w0, [sp, #56]
   2995c:	ldr	x2, [sp, #32]
   29960:	ldr	w1, [sp, #56]
   29964:	ldr	x0, [sp, #40]
   29968:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   2996c:	str	w0, [sp, #60]
   29970:	ldr	w0, [sp, #60]
   29974:	cmn	w0, #0x1
   29978:	b.eq	299b4 <udev_util_encode_string@@LIBUDEV_183+0x1e184>  // b.none
   2997c:	ldr	w1, [sp, #60]
   29980:	ldr	x0, [sp, #40]
   29984:	bl	27490 <udev_util_encode_string@@LIBUDEV_183+0x1bc60>
   29988:	str	x0, [sp, #64]
   2998c:	ldr	x0, [sp, #64]
   29990:	ldr	x1, [sp, #32]
   29994:	str	x1, [x0]
   29998:	ldr	x0, [sp, #64]
   2999c:	ldr	x1, [sp, #24]
   299a0:	str	x1, [x0, #8]
   299a4:	ldr	x0, [sp, #40]
   299a8:	bl	27390 <udev_util_encode_string@@LIBUDEV_183+0x1bb60>
   299ac:	mov	w0, #0x0                   	// #0
   299b0:	b	299f4 <udev_util_encode_string@@LIBUDEV_183+0x1e1c4>
   299b4:	add	x0, sp, #0x48
   299b8:	mov	w1, #0xfffffffc            	// #-4
   299bc:	bl	274d8 <udev_util_encode_string@@LIBUDEV_183+0x1bca8>
   299c0:	str	x0, [sp, #64]
   299c4:	ldr	x0, [sp, #64]
   299c8:	ldr	x1, [sp, #32]
   299cc:	str	x1, [x0]
   299d0:	ldr	x0, [sp, #64]
   299d4:	ldr	x1, [sp, #24]
   299d8:	str	x1, [x0, #8]
   299dc:	add	x0, sp, #0x48
   299e0:	mov	w3, #0x1                   	// #1
   299e4:	mov	x2, x0
   299e8:	ldr	w1, [sp, #56]
   299ec:	ldr	x0, [sp, #40]
   299f0:	bl	28c74 <udev_util_encode_string@@LIBUDEV_183+0x1d444>
   299f4:	mov	w1, w0
   299f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   299fc:	ldr	x0, [x0, #4016]
   29a00:	ldr	x2, [sp, #120]
   29a04:	ldr	x0, [x0]
   29a08:	eor	x0, x2, x0
   29a0c:	cmp	x0, #0x0
   29a10:	b.eq	29a18 <udev_util_encode_string@@LIBUDEV_183+0x1e1e8>  // b.none
   29a14:	bl	5390 <__stack_chk_fail@plt>
   29a18:	mov	w0, w1
   29a1c:	ldp	x29, x30, [sp], #128
   29a20:	ret
   29a24:	stp	x29, x30, [sp, #-48]!
   29a28:	mov	x29, sp
   29a2c:	str	x0, [sp, #24]
   29a30:	str	x1, [sp, #16]
   29a34:	ldr	x0, [sp, #24]
   29a38:	cmp	x0, #0x0
   29a3c:	b.ne	29a48 <udev_util_encode_string@@LIBUDEV_183+0x1e218>  // b.any
   29a40:	mov	x0, #0x0                   	// #0
   29a44:	b	29a9c <udev_util_encode_string@@LIBUDEV_183+0x1e26c>
   29a48:	ldr	x1, [sp, #16]
   29a4c:	ldr	x0, [sp, #24]
   29a50:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29a54:	str	w0, [sp, #32]
   29a58:	ldr	x2, [sp, #16]
   29a5c:	ldr	w1, [sp, #32]
   29a60:	ldr	x0, [sp, #24]
   29a64:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29a68:	str	w0, [sp, #36]
   29a6c:	ldr	w0, [sp, #36]
   29a70:	cmn	w0, #0x1
   29a74:	b.ne	29a80 <udev_util_encode_string@@LIBUDEV_183+0x1e250>  // b.any
   29a78:	mov	x0, #0x0                   	// #0
   29a7c:	b	29a9c <udev_util_encode_string@@LIBUDEV_183+0x1e26c>
   29a80:	ldr	w1, [sp, #36]
   29a84:	ldr	x0, [sp, #24]
   29a88:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   29a8c:	str	x0, [sp, #40]
   29a90:	ldr	x1, [sp, #40]
   29a94:	ldr	x0, [sp, #24]
   29a98:	bl	27a70 <udev_util_encode_string@@LIBUDEV_183+0x1c240>
   29a9c:	ldp	x29, x30, [sp], #48
   29aa0:	ret
   29aa4:	stp	x29, x30, [sp, #-64]!
   29aa8:	mov	x29, sp
   29aac:	str	x0, [sp, #40]
   29ab0:	str	x1, [sp, #32]
   29ab4:	str	x2, [sp, #24]
   29ab8:	ldr	x0, [sp, #40]
   29abc:	cmp	x0, #0x0
   29ac0:	b.ne	29acc <udev_util_encode_string@@LIBUDEV_183+0x1e29c>  // b.any
   29ac4:	mov	x0, #0x0                   	// #0
   29ac8:	b	29b38 <udev_util_encode_string@@LIBUDEV_183+0x1e308>
   29acc:	ldr	x1, [sp, #32]
   29ad0:	ldr	x0, [sp, #40]
   29ad4:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29ad8:	str	w0, [sp, #48]
   29adc:	ldr	x2, [sp, #32]
   29ae0:	ldr	w1, [sp, #48]
   29ae4:	ldr	x0, [sp, #40]
   29ae8:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29aec:	str	w0, [sp, #52]
   29af0:	ldr	w0, [sp, #52]
   29af4:	cmn	w0, #0x1
   29af8:	b.ne	29b04 <udev_util_encode_string@@LIBUDEV_183+0x1e2d4>  // b.any
   29afc:	mov	x0, #0x0                   	// #0
   29b00:	b	29b38 <udev_util_encode_string@@LIBUDEV_183+0x1e308>
   29b04:	ldr	w1, [sp, #52]
   29b08:	ldr	x0, [sp, #40]
   29b0c:	bl	27490 <udev_util_encode_string@@LIBUDEV_183+0x1bc60>
   29b10:	str	x0, [sp, #56]
   29b14:	ldr	x0, [sp, #24]
   29b18:	cmp	x0, #0x0
   29b1c:	b.eq	29b30 <udev_util_encode_string@@LIBUDEV_183+0x1e300>  // b.none
   29b20:	ldr	x0, [sp, #56]
   29b24:	ldr	x1, [x0]
   29b28:	ldr	x0, [sp, #24]
   29b2c:	str	x1, [x0]
   29b30:	ldr	x0, [sp, #56]
   29b34:	ldr	x0, [x0, #8]
   29b38:	ldp	x29, x30, [sp], #64
   29b3c:	ret
   29b40:	stp	x29, x30, [sp, #-48]!
   29b44:	mov	x29, sp
   29b48:	str	x0, [sp, #24]
   29b4c:	str	x1, [sp, #16]
   29b50:	ldr	x0, [sp, #24]
   29b54:	cmp	x0, #0x0
   29b58:	b.ne	29b64 <udev_util_encode_string@@LIBUDEV_183+0x1e334>  // b.any
   29b5c:	mov	w0, #0x0                   	// #0
   29b60:	b	29b90 <udev_util_encode_string@@LIBUDEV_183+0x1e360>
   29b64:	ldr	x1, [sp, #16]
   29b68:	ldr	x0, [sp, #24]
   29b6c:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29b70:	str	w0, [sp, #44]
   29b74:	ldr	x2, [sp, #16]
   29b78:	ldr	w1, [sp, #44]
   29b7c:	ldr	x0, [sp, #24]
   29b80:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29b84:	cmn	w0, #0x1
   29b88:	cset	w0, ne  // ne = any
   29b8c:	and	w0, w0, #0xff
   29b90:	ldp	x29, x30, [sp], #48
   29b94:	ret
   29b98:	stp	x29, x30, [sp, #-64]!
   29b9c:	mov	x29, sp
   29ba0:	str	x0, [sp, #24]
   29ba4:	str	x1, [sp, #16]
   29ba8:	ldr	x0, [sp, #24]
   29bac:	cmp	x0, #0x0
   29bb0:	b.ne	29bbc <udev_util_encode_string@@LIBUDEV_183+0x1e38c>  // b.any
   29bb4:	mov	x0, #0x0                   	// #0
   29bb8:	b	29c24 <udev_util_encode_string@@LIBUDEV_183+0x1e3f4>
   29bbc:	ldr	x1, [sp, #16]
   29bc0:	ldr	x0, [sp, #24]
   29bc4:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29bc8:	str	w0, [sp, #40]
   29bcc:	ldr	x2, [sp, #16]
   29bd0:	ldr	w1, [sp, #40]
   29bd4:	ldr	x0, [sp, #24]
   29bd8:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29bdc:	str	w0, [sp, #44]
   29be0:	ldr	w0, [sp, #44]
   29be4:	cmn	w0, #0x1
   29be8:	b.ne	29bf4 <udev_util_encode_string@@LIBUDEV_183+0x1e3c4>  // b.any
   29bec:	mov	x0, #0x0                   	// #0
   29bf0:	b	29c24 <udev_util_encode_string@@LIBUDEV_183+0x1e3f4>
   29bf4:	ldr	w1, [sp, #44]
   29bf8:	ldr	x0, [sp, #24]
   29bfc:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   29c00:	str	x0, [sp, #48]
   29c04:	ldr	x1, [sp, #48]
   29c08:	ldr	x0, [sp, #24]
   29c0c:	bl	27a70 <udev_util_encode_string@@LIBUDEV_183+0x1c240>
   29c10:	str	x0, [sp, #56]
   29c14:	ldr	w1, [sp, #44]
   29c18:	ldr	x0, [sp, #24]
   29c1c:	bl	27af8 <udev_util_encode_string@@LIBUDEV_183+0x1c2c8>
   29c20:	ldr	x0, [sp, #56]
   29c24:	ldp	x29, x30, [sp], #64
   29c28:	ret
   29c2c:	stp	x29, x30, [sp, #-80]!
   29c30:	mov	x29, sp
   29c34:	str	x0, [sp, #40]
   29c38:	str	x1, [sp, #32]
   29c3c:	str	x2, [sp, #24]
   29c40:	ldr	x0, [sp, #40]
   29c44:	cmp	x0, #0x0
   29c48:	b.ne	29c68 <udev_util_encode_string@@LIBUDEV_183+0x1e438>  // b.any
   29c4c:	ldr	x0, [sp, #24]
   29c50:	cmp	x0, #0x0
   29c54:	b.eq	29c60 <udev_util_encode_string@@LIBUDEV_183+0x1e430>  // b.none
   29c58:	ldr	x0, [sp, #24]
   29c5c:	str	xzr, [x0]
   29c60:	mov	x0, #0x0                   	// #0
   29c64:	b	29cfc <udev_util_encode_string@@LIBUDEV_183+0x1e4cc>
   29c68:	ldr	x1, [sp, #32]
   29c6c:	ldr	x0, [sp, #40]
   29c70:	bl	272e4 <udev_util_encode_string@@LIBUDEV_183+0x1bab4>
   29c74:	str	w0, [sp, #56]
   29c78:	ldr	x2, [sp, #32]
   29c7c:	ldr	w1, [sp, #56]
   29c80:	ldr	x0, [sp, #40]
   29c84:	bl	29558 <udev_util_encode_string@@LIBUDEV_183+0x1dd28>
   29c88:	str	w0, [sp, #60]
   29c8c:	ldr	w0, [sp, #60]
   29c90:	cmn	w0, #0x1
   29c94:	b.ne	29cb4 <udev_util_encode_string@@LIBUDEV_183+0x1e484>  // b.any
   29c98:	ldr	x0, [sp, #24]
   29c9c:	cmp	x0, #0x0
   29ca0:	b.eq	29cac <udev_util_encode_string@@LIBUDEV_183+0x1e47c>  // b.none
   29ca4:	ldr	x0, [sp, #24]
   29ca8:	str	xzr, [x0]
   29cac:	mov	x0, #0x0                   	// #0
   29cb0:	b	29cfc <udev_util_encode_string@@LIBUDEV_183+0x1e4cc>
   29cb4:	ldr	w1, [sp, #60]
   29cb8:	ldr	x0, [sp, #40]
   29cbc:	bl	27490 <udev_util_encode_string@@LIBUDEV_183+0x1bc60>
   29cc0:	str	x0, [sp, #64]
   29cc4:	ldr	x0, [sp, #64]
   29cc8:	ldr	x0, [x0, #8]
   29ccc:	str	x0, [sp, #72]
   29cd0:	ldr	x0, [sp, #24]
   29cd4:	cmp	x0, #0x0
   29cd8:	b.eq	29cec <udev_util_encode_string@@LIBUDEV_183+0x1e4bc>  // b.none
   29cdc:	ldr	x0, [sp, #64]
   29ce0:	ldr	x1, [x0]
   29ce4:	ldr	x0, [sp, #24]
   29ce8:	str	x1, [x0]
   29cec:	ldr	w1, [sp, #60]
   29cf0:	ldr	x0, [sp, #40]
   29cf4:	bl	27af8 <udev_util_encode_string@@LIBUDEV_183+0x1c2c8>
   29cf8:	ldr	x0, [sp, #72]
   29cfc:	ldp	x29, x30, [sp], #80
   29d00:	ret
   29d04:	stp	x29, x30, [sp, #-64]!
   29d08:	mov	x29, sp
   29d0c:	str	x0, [sp, #24]
   29d10:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   29d14:	ldr	x0, [x0, #4016]
   29d18:	ldr	x1, [x0]
   29d1c:	str	x1, [sp, #56]
   29d20:	mov	x1, #0x0                   	// #0
   29d24:	mov	w0, #0xfffffffe            	// #-2
   29d28:	str	w0, [sp, #40]
   29d2c:	str	xzr, [sp, #48]
   29d30:	ldr	x0, [sp, #24]
   29d34:	cmp	x0, #0x0
   29d38:	b.eq	29d4c <udev_util_encode_string@@LIBUDEV_183+0x1e51c>  // b.none
   29d3c:	ldr	x0, [sp, #24]
   29d40:	bl	27148 <udev_util_encode_string@@LIBUDEV_183+0x1b918>
   29d44:	cmp	w0, #0x0
   29d48:	b.ne	29d54 <udev_util_encode_string@@LIBUDEV_183+0x1e524>  // b.any
   29d4c:	mov	w0, #0xffffffff            	// #-1
   29d50:	b	29d64 <udev_util_encode_string@@LIBUDEV_183+0x1e534>
   29d54:	add	x0, sp, #0x28
   29d58:	mov	x1, x0
   29d5c:	ldr	x0, [sp, #24]
   29d60:	bl	282b8 <udev_util_encode_string@@LIBUDEV_183+0x1ca88>
   29d64:	mov	w1, w0
   29d68:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   29d6c:	ldr	x0, [x0, #4016]
   29d70:	ldr	x2, [sp, #56]
   29d74:	ldr	x0, [x0]
   29d78:	eor	x0, x2, x0
   29d7c:	cmp	x0, #0x0
   29d80:	b.eq	29d88 <udev_util_encode_string@@LIBUDEV_183+0x1e558>  // b.none
   29d84:	bl	5390 <__stack_chk_fail@plt>
   29d88:	mov	w0, w1
   29d8c:	ldp	x29, x30, [sp], #64
   29d90:	ret
   29d94:	stp	x29, x30, [sp, #-80]!
   29d98:	mov	x29, sp
   29d9c:	str	x0, [sp, #40]
   29da0:	strb	w1, [sp, #39]
   29da4:	str	x2, [sp, #24]
   29da8:	ldr	x0, [sp, #40]
   29dac:	bl	29d04 <udev_util_encode_string@@LIBUDEV_183+0x1e4d4>
   29db0:	str	w0, [sp, #52]
   29db4:	ldr	w0, [sp, #52]
   29db8:	cmn	w0, #0x1
   29dbc:	b.ne	29ddc <udev_util_encode_string@@LIBUDEV_183+0x1e5ac>  // b.any
   29dc0:	ldr	x0, [sp, #24]
   29dc4:	cmp	x0, #0x0
   29dc8:	b.eq	29dd4 <udev_util_encode_string@@LIBUDEV_183+0x1e5a4>  // b.none
   29dcc:	ldr	x0, [sp, #24]
   29dd0:	str	xzr, [x0]
   29dd4:	mov	x0, #0x0                   	// #0
   29dd8:	b	29e3c <udev_util_encode_string@@LIBUDEV_183+0x1e60c>
   29ddc:	ldr	w1, [sp, #52]
   29de0:	ldr	x0, [sp, #40]
   29de4:	bl	27434 <udev_util_encode_string@@LIBUDEV_183+0x1bc04>
   29de8:	str	x0, [sp, #56]
   29dec:	ldr	x0, [sp, #56]
   29df0:	ldr	x0, [x0]
   29df4:	str	x0, [sp, #64]
   29df8:	ldr	x1, [sp, #56]
   29dfc:	ldr	x0, [sp, #40]
   29e00:	bl	27a70 <udev_util_encode_string@@LIBUDEV_183+0x1c240>
   29e04:	str	x0, [sp, #72]
   29e08:	ldrb	w0, [sp, #39]
   29e0c:	cmp	w0, #0x0
   29e10:	b.eq	29e20 <udev_util_encode_string@@LIBUDEV_183+0x1e5f0>  // b.none
   29e14:	ldr	w1, [sp, #52]
   29e18:	ldr	x0, [sp, #40]
   29e1c:	bl	27af8 <udev_util_encode_string@@LIBUDEV_183+0x1c2c8>
   29e20:	ldr	x0, [sp, #24]
   29e24:	cmp	x0, #0x0
   29e28:	b.eq	29e38 <udev_util_encode_string@@LIBUDEV_183+0x1e608>  // b.none
   29e2c:	ldr	x0, [sp, #24]
   29e30:	ldr	x1, [sp, #64]
   29e34:	str	x1, [x0]
   29e38:	ldr	x0, [sp, #72]
   29e3c:	ldp	x29, x30, [sp], #80
   29e40:	ret
   29e44:	stp	x29, x30, [sp, #-32]!
   29e48:	mov	x29, sp
   29e4c:	str	x0, [sp, #24]
   29e50:	ldr	x0, [sp, #24]
   29e54:	cmp	x0, #0x0
   29e58:	b.ne	29e64 <udev_util_encode_string@@LIBUDEV_183+0x1e634>  // b.any
   29e5c:	mov	w0, #0x0                   	// #0
   29e60:	b	29e6c <udev_util_encode_string@@LIBUDEV_183+0x1e63c>
   29e64:	ldr	x0, [sp, #24]
   29e68:	bl	27148 <udev_util_encode_string@@LIBUDEV_183+0x1b918>
   29e6c:	ldp	x29, x30, [sp], #32
   29e70:	ret
   29e74:	stp	x29, x30, [sp, #-48]!
   29e78:	mov	x29, sp
   29e7c:	str	x0, [sp, #24]
   29e80:	str	x1, [sp, #16]
   29e84:	ldr	x0, [sp, #24]
   29e88:	cmp	x0, #0x0
   29e8c:	cset	w0, eq  // eq = none
   29e90:	and	w0, w0, #0xff
   29e94:	and	x0, x0, #0xff
   29e98:	cmp	x0, #0x0
   29e9c:	b.eq	29ec8 <udev_util_encode_string@@LIBUDEV_183+0x1e698>  // b.none
   29ea0:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29ea4:	add	x1, x0, #0xc93
   29ea8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29eac:	add	x4, x0, #0x160
   29eb0:	mov	w3, #0x6e0                 	// #1760
   29eb4:	mov	x2, x1
   29eb8:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29ebc:	add	x1, x0, #0xea8
   29ec0:	mov	w0, #0x0                   	// #0
   29ec4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29ec8:	ldr	x0, [sp, #16]
   29ecc:	cmp	x0, #0x0
   29ed0:	cset	w0, eq  // eq = none
   29ed4:	and	w0, w0, #0xff
   29ed8:	and	x0, x0, #0xff
   29edc:	cmp	x0, #0x0
   29ee0:	b.eq	29f0c <udev_util_encode_string@@LIBUDEV_183+0x1e6dc>  // b.none
   29ee4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29ee8:	add	x1, x0, #0xc93
   29eec:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29ef0:	add	x4, x0, #0x160
   29ef4:	mov	w3, #0x6e1                 	// #1761
   29ef8:	mov	x2, x1
   29efc:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29f00:	add	x1, x0, #0xfa8
   29f04:	mov	w0, #0x0                   	// #0
   29f08:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29f0c:	ldr	x1, [sp, #16]
   29f10:	ldr	x0, [sp, #24]
   29f14:	bl	297dc <udev_util_encode_string@@LIBUDEV_183+0x1dfac>
   29f18:	str	w0, [sp, #44]
   29f1c:	ldr	w0, [sp, #44]
   29f20:	cmp	w0, #0x0
   29f24:	b.gt	29f30 <udev_util_encode_string@@LIBUDEV_183+0x1e700>
   29f28:	ldr	x0, [sp, #16]
   29f2c:	bl	54b0 <free@plt>
   29f30:	ldr	w0, [sp, #44]
   29f34:	ldp	x29, x30, [sp], #48
   29f38:	ret
   29f3c:	stp	x29, x30, [sp, #-48]!
   29f40:	mov	x29, sp
   29f44:	str	x0, [sp, #24]
   29f48:	str	x1, [sp, #16]
   29f4c:	ldr	x0, [sp, #24]
   29f50:	cmp	x0, #0x0
   29f54:	cset	w0, eq  // eq = none
   29f58:	and	w0, w0, #0xff
   29f5c:	and	x0, x0, #0xff
   29f60:	cmp	x0, #0x0
   29f64:	b.eq	29f90 <udev_util_encode_string@@LIBUDEV_183+0x1e760>  // b.none
   29f68:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29f6c:	add	x1, x0, #0xc93
   29f70:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29f74:	add	x4, x0, #0x170
   29f78:	mov	w3, #0x707                 	// #1799
   29f7c:	mov	x2, x1
   29f80:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29f84:	add	x1, x0, #0xea8
   29f88:	mov	w0, #0x0                   	// #0
   29f8c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29f90:	ldr	x0, [sp, #16]
   29f94:	cmp	x0, #0x0
   29f98:	cset	w0, eq  // eq = none
   29f9c:	and	w0, w0, #0xff
   29fa0:	and	x0, x0, #0xff
   29fa4:	cmp	x0, #0x0
   29fa8:	b.eq	29fd4 <udev_util_encode_string@@LIBUDEV_183+0x1e7a4>  // b.none
   29fac:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29fb0:	add	x1, x0, #0xc93
   29fb4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   29fb8:	add	x4, x0, #0x170
   29fbc:	mov	w3, #0x708                 	// #1800
   29fc0:	mov	x2, x1
   29fc4:	adrp	x0, 3b000 <udev_util_encode_string@@LIBUDEV_183+0x2f7d0>
   29fc8:	add	x1, x0, #0xfb8
   29fcc:	mov	w0, #0x0                   	// #0
   29fd0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   29fd4:	ldr	x1, [sp, #16]
   29fd8:	ldr	x0, [sp, #24]
   29fdc:	bl	270c0 <udev_util_encode_string@@LIBUDEV_183+0x1b890>
   29fe0:	and	w0, w0, #0xff
   29fe4:	cmp	w0, #0x0
   29fe8:	b.eq	29ff4 <udev_util_encode_string@@LIBUDEV_183+0x1e7c4>  // b.none
   29fec:	mov	w0, #0x0                   	// #0
   29ff0:	b	2a020 <udev_util_encode_string@@LIBUDEV_183+0x1e7f0>
   29ff4:	ldr	x0, [sp, #16]
   29ff8:	bl	5370 <strdup@plt>
   29ffc:	str	x0, [sp, #40]
   2a000:	ldr	x0, [sp, #40]
   2a004:	cmp	x0, #0x0
   2a008:	b.ne	2a014 <udev_util_encode_string@@LIBUDEV_183+0x1e7e4>  // b.any
   2a00c:	mov	w0, #0xfffffff4            	// #-12
   2a010:	b	2a020 <udev_util_encode_string@@LIBUDEV_183+0x1e7f0>
   2a014:	ldr	x1, [sp, #40]
   2a018:	ldr	x0, [sp, #24]
   2a01c:	bl	29e74 <udev_util_encode_string@@LIBUDEV_183+0x1e644>
   2a020:	ldp	x29, x30, [sp], #48
   2a024:	ret
   2a028:	stp	x29, x30, [sp, #-32]!
   2a02c:	mov	x29, sp
   2a030:	str	x0, [sp, #24]
   2a034:	ldr	x0, [sp, #24]
   2a038:	ldr	x0, [x0]
   2a03c:	bl	54b0 <free@plt>
   2a040:	nop
   2a044:	ldp	x29, x30, [sp], #32
   2a048:	ret
   2a04c:	stp	x29, x30, [sp, #-32]!
   2a050:	mov	x29, sp
   2a054:	str	x0, [sp, #24]
   2a058:	str	x1, [sp, #16]
   2a05c:	ldr	x0, [sp, #16]
   2a060:	cmp	x0, #0x0
   2a064:	b.eq	2a074 <udev_util_encode_string@@LIBUDEV_183+0x1e844>  // b.none
   2a068:	ldr	x1, [sp, #16]
   2a06c:	ldr	x0, [sp, #24]
   2a070:	bl	5750 <explicit_bzero@plt>
   2a074:	ldr	x0, [sp, #24]
   2a078:	ldp	x29, x30, [sp], #32
   2a07c:	ret
   2a080:	sub	sp, sp, #0x10
   2a084:	strb	w0, [sp, #15]
   2a088:	ldrb	w0, [sp, #15]
   2a08c:	cmp	w0, #0x2f
   2a090:	b.ls	2a0ac <udev_util_encode_string@@LIBUDEV_183+0x1e87c>  // b.plast
   2a094:	ldrb	w0, [sp, #15]
   2a098:	cmp	w0, #0x39
   2a09c:	b.hi	2a0ac <udev_util_encode_string@@LIBUDEV_183+0x1e87c>  // b.pmore
   2a0a0:	ldrb	w0, [sp, #15]
   2a0a4:	sub	w0, w0, #0x30
   2a0a8:	b	2a0f8 <udev_util_encode_string@@LIBUDEV_183+0x1e8c8>
   2a0ac:	ldrb	w0, [sp, #15]
   2a0b0:	cmp	w0, #0x60
   2a0b4:	b.ls	2a0d0 <udev_util_encode_string@@LIBUDEV_183+0x1e8a0>  // b.plast
   2a0b8:	ldrb	w0, [sp, #15]
   2a0bc:	cmp	w0, #0x66
   2a0c0:	b.hi	2a0d0 <udev_util_encode_string@@LIBUDEV_183+0x1e8a0>  // b.pmore
   2a0c4:	ldrb	w0, [sp, #15]
   2a0c8:	sub	w0, w0, #0x57
   2a0cc:	b	2a0f8 <udev_util_encode_string@@LIBUDEV_183+0x1e8c8>
   2a0d0:	ldrb	w0, [sp, #15]
   2a0d4:	cmp	w0, #0x40
   2a0d8:	b.ls	2a0f4 <udev_util_encode_string@@LIBUDEV_183+0x1e8c4>  // b.plast
   2a0dc:	ldrb	w0, [sp, #15]
   2a0e0:	cmp	w0, #0x46
   2a0e4:	b.hi	2a0f4 <udev_util_encode_string@@LIBUDEV_183+0x1e8c4>  // b.pmore
   2a0e8:	ldrb	w0, [sp, #15]
   2a0ec:	sub	w0, w0, #0x37
   2a0f0:	b	2a0f8 <udev_util_encode_string@@LIBUDEV_183+0x1e8c8>
   2a0f4:	mov	w0, #0xffffffea            	// #-22
   2a0f8:	add	sp, sp, #0x10
   2a0fc:	ret
   2a100:	stp	x29, x30, [sp, #-48]!
   2a104:	mov	x29, sp
   2a108:	str	x0, [sp, #24]
   2a10c:	str	x1, [sp, #16]
   2a110:	ldr	x0, [sp, #24]
   2a114:	cmp	x0, #0x0
   2a118:	cset	w0, eq  // eq = none
   2a11c:	and	w0, w0, #0xff
   2a120:	and	x0, x0, #0xff
   2a124:	cmp	x0, #0x0
   2a128:	b.eq	2a154 <udev_util_encode_string@@LIBUDEV_183+0x1e924>  // b.none
   2a12c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a130:	add	x1, x0, #0x1ab
   2a134:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a138:	add	x4, x0, #0x270
   2a13c:	mov	w3, #0x4e                  	// #78
   2a140:	mov	x2, x1
   2a144:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a148:	add	x1, x0, #0x1c8
   2a14c:	mov	w0, #0x0                   	// #0
   2a150:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a154:	ldr	x0, [sp, #16]
   2a158:	cmp	x0, #0x0
   2a15c:	cset	w0, eq  // eq = none
   2a160:	and	w0, w0, #0xff
   2a164:	and	x0, x0, #0xff
   2a168:	cmp	x0, #0x0
   2a16c:	b.eq	2a198 <udev_util_encode_string@@LIBUDEV_183+0x1e968>  // b.none
   2a170:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a174:	add	x1, x0, #0x1ab
   2a178:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a17c:	add	x4, x0, #0x270
   2a180:	mov	w3, #0x4f                  	// #79
   2a184:	mov	x2, x1
   2a188:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a18c:	add	x1, x0, #0x1d0
   2a190:	mov	w0, #0x0                   	// #0
   2a194:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a198:	ldr	x0, [sp, #16]
   2a19c:	ldr	x0, [x0]
   2a1a0:	cmp	x0, #0x0
   2a1a4:	b.ne	2a1b0 <udev_util_encode_string@@LIBUDEV_183+0x1e980>  // b.any
   2a1a8:	mov	w0, #0xffffffe0            	// #-32
   2a1ac:	b	2a290 <udev_util_encode_string@@LIBUDEV_183+0x1ea60>
   2a1b0:	ldr	x0, [sp, #24]
   2a1b4:	ldr	x0, [x0]
   2a1b8:	ldrb	w0, [x0]
   2a1bc:	mov	w1, w0
   2a1c0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a1c4:	add	x0, x0, #0x1d8
   2a1c8:	bl	5570 <strchr@plt>
   2a1cc:	cmp	x0, #0x0
   2a1d0:	b.eq	2a200 <udev_util_encode_string@@LIBUDEV_183+0x1e9d0>  // b.none
   2a1d4:	ldr	x0, [sp, #24]
   2a1d8:	ldr	x0, [x0]
   2a1dc:	add	x1, x0, #0x1
   2a1e0:	ldr	x0, [sp, #24]
   2a1e4:	str	x1, [x0]
   2a1e8:	ldr	x0, [sp, #16]
   2a1ec:	ldr	x0, [x0]
   2a1f0:	sub	x1, x0, #0x1
   2a1f4:	ldr	x0, [sp, #16]
   2a1f8:	str	x1, [x0]
   2a1fc:	b	2a198 <udev_util_encode_string@@LIBUDEV_183+0x1e968>
   2a200:	nop
   2a204:	ldr	x0, [sp, #24]
   2a208:	ldr	x0, [x0]
   2a20c:	ldrb	w0, [x0]
   2a210:	bl	2a080 <udev_util_encode_string@@LIBUDEV_183+0x1e850>
   2a214:	str	w0, [sp, #44]
   2a218:	ldr	w0, [sp, #44]
   2a21c:	cmp	w0, #0x0
   2a220:	b.ge	2a22c <udev_util_encode_string@@LIBUDEV_183+0x1e9fc>  // b.tcont
   2a224:	ldr	w0, [sp, #44]
   2a228:	b	2a290 <udev_util_encode_string@@LIBUDEV_183+0x1ea60>
   2a22c:	ldr	x0, [sp, #24]
   2a230:	ldr	x0, [x0]
   2a234:	add	x1, x0, #0x1
   2a238:	ldr	x0, [sp, #24]
   2a23c:	str	x1, [x0]
   2a240:	ldr	x0, [sp, #16]
   2a244:	ldr	x0, [x0]
   2a248:	sub	x1, x0, #0x1
   2a24c:	ldr	x0, [sp, #16]
   2a250:	str	x1, [x0]
   2a254:	ldr	x0, [sp, #16]
   2a258:	ldr	x0, [x0]
   2a25c:	cmp	x0, #0x0
   2a260:	b.eq	2a28c <udev_util_encode_string@@LIBUDEV_183+0x1ea5c>  // b.none
   2a264:	ldr	x0, [sp, #24]
   2a268:	ldr	x0, [x0]
   2a26c:	ldrb	w0, [x0]
   2a270:	mov	w1, w0
   2a274:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a278:	add	x0, x0, #0x1d8
   2a27c:	bl	5570 <strchr@plt>
   2a280:	cmp	x0, #0x0
   2a284:	b.eq	2a28c <udev_util_encode_string@@LIBUDEV_183+0x1ea5c>  // b.none
   2a288:	b	2a22c <udev_util_encode_string@@LIBUDEV_183+0x1e9fc>
   2a28c:	ldr	w0, [sp, #44]
   2a290:	ldp	x29, x30, [sp], #48
   2a294:	ret
   2a298:	stp	x29, x30, [sp, #-144]!
   2a29c:	mov	x29, sp
   2a2a0:	str	x19, [sp, #16]
   2a2a4:	str	x0, [sp, #72]
   2a2a8:	str	x1, [sp, #64]
   2a2ac:	strb	w2, [sp, #63]
   2a2b0:	str	x3, [sp, #48]
   2a2b4:	str	x4, [sp, #40]
   2a2b8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2a2bc:	ldr	x0, [x0, #4016]
   2a2c0:	ldr	x1, [x0]
   2a2c4:	str	x1, [sp, #136]
   2a2c8:	mov	x1, #0x0                   	// #0
   2a2cc:	str	xzr, [sp, #96]
   2a2d0:	ldr	x0, [sp, #48]
   2a2d4:	cmp	x0, #0x0
   2a2d8:	cset	w0, eq  // eq = none
   2a2dc:	and	w0, w0, #0xff
   2a2e0:	and	x0, x0, #0xff
   2a2e4:	cmp	x0, #0x0
   2a2e8:	b.eq	2a314 <udev_util_encode_string@@LIBUDEV_183+0x1eae4>  // b.none
   2a2ec:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a2f0:	add	x1, x0, #0x1ab
   2a2f4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a2f8:	add	x4, x0, #0x280
   2a2fc:	mov	w3, #0x76                  	// #118
   2a300:	mov	x2, x1
   2a304:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a308:	add	x1, x0, #0x1e0
   2a30c:	mov	w0, #0x0                   	// #0
   2a310:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a314:	ldr	x0, [sp, #40]
   2a318:	cmp	x0, #0x0
   2a31c:	cset	w0, eq  // eq = none
   2a320:	and	w0, w0, #0xff
   2a324:	and	x0, x0, #0xff
   2a328:	cmp	x0, #0x0
   2a32c:	b.eq	2a358 <udev_util_encode_string@@LIBUDEV_183+0x1eb28>  // b.none
   2a330:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a334:	add	x1, x0, #0x1ab
   2a338:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a33c:	add	x4, x0, #0x280
   2a340:	mov	w3, #0x77                  	// #119
   2a344:	mov	x2, x1
   2a348:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a34c:	add	x1, x0, #0x1e8
   2a350:	mov	w0, #0x0                   	// #0
   2a354:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a358:	ldr	x0, [sp, #72]
   2a35c:	cmp	x0, #0x0
   2a360:	cset	w0, eq  // eq = none
   2a364:	and	w0, w0, #0xff
   2a368:	and	x0, x0, #0xff
   2a36c:	cmp	x0, #0x0
   2a370:	b.eq	2a3b8 <udev_util_encode_string@@LIBUDEV_183+0x1eb88>  // b.none
   2a374:	ldr	x0, [sp, #64]
   2a378:	cmp	x0, #0x0
   2a37c:	cset	w0, ne  // ne = any
   2a380:	and	w0, w0, #0xff
   2a384:	and	x0, x0, #0xff
   2a388:	cmp	x0, #0x0
   2a38c:	b.eq	2a3b8 <udev_util_encode_string@@LIBUDEV_183+0x1eb88>  // b.none
   2a390:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a394:	add	x1, x0, #0x1ab
   2a398:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a39c:	add	x4, x0, #0x280
   2a3a0:	mov	w3, #0x78                  	// #120
   2a3a4:	mov	x2, x1
   2a3a8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a3ac:	add	x1, x0, #0x1f0
   2a3b0:	mov	w0, #0x0                   	// #0
   2a3b4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a3b8:	ldr	x0, [sp, #64]
   2a3bc:	cmn	x0, #0x1
   2a3c0:	b.ne	2a3d0 <udev_util_encode_string@@LIBUDEV_183+0x1eba0>  // b.any
   2a3c4:	ldr	x0, [sp, #72]
   2a3c8:	bl	5040 <strlen@plt>
   2a3cc:	str	x0, [sp, #64]
   2a3d0:	ldr	x0, [sp, #64]
   2a3d4:	add	x0, x0, #0x1
   2a3d8:	lsr	x0, x0, #1
   2a3dc:	add	x0, x0, #0x1
   2a3e0:	str	x0, [sp, #120]
   2a3e4:	ldr	x0, [sp, #120]
   2a3e8:	bl	5220 <malloc@plt>
   2a3ec:	str	x0, [sp, #96]
   2a3f0:	ldr	x0, [sp, #96]
   2a3f4:	cmp	x0, #0x0
   2a3f8:	b.ne	2a404 <udev_util_encode_string@@LIBUDEV_183+0x1ebd4>  // b.any
   2a3fc:	mov	w19, #0xfffffff4            	// #-12
   2a400:	b	2a508 <udev_util_encode_string@@LIBUDEV_183+0x1ecd8>
   2a404:	ldr	x0, [sp, #72]
   2a408:	str	x0, [sp, #104]
   2a40c:	ldr	x0, [sp, #96]
   2a410:	str	x0, [sp, #112]
   2a414:	add	x1, sp, #0x40
   2a418:	add	x0, sp, #0x68
   2a41c:	bl	2a100 <udev_util_encode_string@@LIBUDEV_183+0x1e8d0>
   2a420:	str	w0, [sp, #88]
   2a424:	ldr	w0, [sp, #88]
   2a428:	cmn	w0, #0x20
   2a42c:	b.eq	2a4a8 <udev_util_encode_string@@LIBUDEV_183+0x1ec78>  // b.none
   2a430:	ldr	w0, [sp, #88]
   2a434:	cmp	w0, #0x0
   2a438:	b.ge	2a448 <udev_util_encode_string@@LIBUDEV_183+0x1ec18>  // b.tcont
   2a43c:	ldr	w0, [sp, #88]
   2a440:	str	w0, [sp, #84]
   2a444:	b	2a4ec <udev_util_encode_string@@LIBUDEV_183+0x1ecbc>
   2a448:	add	x1, sp, #0x40
   2a44c:	add	x0, sp, #0x68
   2a450:	bl	2a100 <udev_util_encode_string@@LIBUDEV_183+0x1e8d0>
   2a454:	str	w0, [sp, #92]
   2a458:	ldr	w0, [sp, #92]
   2a45c:	cmp	w0, #0x0
   2a460:	b.ge	2a470 <udev_util_encode_string@@LIBUDEV_183+0x1ec40>  // b.tcont
   2a464:	ldr	w0, [sp, #92]
   2a468:	str	w0, [sp, #84]
   2a46c:	b	2a4ec <udev_util_encode_string@@LIBUDEV_183+0x1ecbc>
   2a470:	ldr	w0, [sp, #88]
   2a474:	and	w0, w0, #0xff
   2a478:	lsl	w0, w0, #4
   2a47c:	sxtb	w1, w0
   2a480:	ldr	w0, [sp, #92]
   2a484:	sxtb	w0, w0
   2a488:	orr	w0, w1, w0
   2a48c:	sxtb	w2, w0
   2a490:	ldr	x0, [sp, #112]
   2a494:	add	x1, x0, #0x1
   2a498:	str	x1, [sp, #112]
   2a49c:	and	w1, w2, #0xff
   2a4a0:	strb	w1, [x0]
   2a4a4:	b	2a414 <udev_util_encode_string@@LIBUDEV_183+0x1ebe4>
   2a4a8:	nop
   2a4ac:	ldr	x0, [sp, #112]
   2a4b0:	strb	wzr, [x0]
   2a4b4:	ldr	x0, [sp, #96]
   2a4b8:	ldr	x1, [sp, #112]
   2a4bc:	sub	x0, x1, x0
   2a4c0:	mov	x1, x0
   2a4c4:	ldr	x0, [sp, #40]
   2a4c8:	str	x1, [x0]
   2a4cc:	ldr	x0, [sp, #96]
   2a4d0:	str	x0, [sp, #128]
   2a4d4:	str	xzr, [sp, #96]
   2a4d8:	ldr	x1, [sp, #128]
   2a4dc:	ldr	x0, [sp, #48]
   2a4e0:	str	x1, [x0]
   2a4e4:	mov	w19, #0x0                   	// #0
   2a4e8:	b	2a508 <udev_util_encode_string@@LIBUDEV_183+0x1ecd8>
   2a4ec:	ldrb	w0, [sp, #63]
   2a4f0:	cmp	w0, #0x0
   2a4f4:	b.eq	2a504 <udev_util_encode_string@@LIBUDEV_183+0x1ecd4>  // b.none
   2a4f8:	ldr	x0, [sp, #96]
   2a4fc:	ldr	x1, [sp, #120]
   2a500:	bl	2a04c <udev_util_encode_string@@LIBUDEV_183+0x1e81c>
   2a504:	ldr	w19, [sp, #84]
   2a508:	add	x0, sp, #0x60
   2a50c:	bl	2a028 <udev_util_encode_string@@LIBUDEV_183+0x1e7f8>
   2a510:	mov	w1, w19
   2a514:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2a518:	ldr	x0, [x0, #4016]
   2a51c:	ldr	x2, [sp, #136]
   2a520:	ldr	x0, [x0]
   2a524:	eor	x0, x2, x0
   2a528:	cmp	x0, #0x0
   2a52c:	b.eq	2a534 <udev_util_encode_string@@LIBUDEV_183+0x1ed04>  // b.none
   2a530:	bl	5390 <__stack_chk_fail@plt>
   2a534:	mov	w0, w1
   2a538:	ldr	x19, [sp, #16]
   2a53c:	ldp	x29, x30, [sp], #144
   2a540:	ret
   2a544:	sub	sp, sp, #0x20
   2a548:	strb	w0, [sp, #15]
   2a54c:	ldrb	w0, [sp, #15]
   2a550:	cmp	w0, #0x40
   2a554:	b.ls	2a570 <udev_util_encode_string@@LIBUDEV_183+0x1ed40>  // b.plast
   2a558:	ldrb	w0, [sp, #15]
   2a55c:	cmp	w0, #0x5a
   2a560:	b.hi	2a570 <udev_util_encode_string@@LIBUDEV_183+0x1ed40>  // b.pmore
   2a564:	ldrb	w0, [sp, #15]
   2a568:	sub	w0, w0, #0x41
   2a56c:	b	2a620 <udev_util_encode_string@@LIBUDEV_183+0x1edf0>
   2a570:	mov	w0, #0x1a                  	// #26
   2a574:	str	w0, [sp, #28]
   2a578:	ldrb	w0, [sp, #15]
   2a57c:	cmp	w0, #0x60
   2a580:	b.ls	2a5a4 <udev_util_encode_string@@LIBUDEV_183+0x1ed74>  // b.plast
   2a584:	ldrb	w0, [sp, #15]
   2a588:	cmp	w0, #0x7a
   2a58c:	b.hi	2a5a4 <udev_util_encode_string@@LIBUDEV_183+0x1ed74>  // b.pmore
   2a590:	ldrb	w1, [sp, #15]
   2a594:	ldr	w0, [sp, #28]
   2a598:	add	w0, w1, w0
   2a59c:	sub	w0, w0, #0x61
   2a5a0:	b	2a620 <udev_util_encode_string@@LIBUDEV_183+0x1edf0>
   2a5a4:	ldr	w0, [sp, #28]
   2a5a8:	add	w0, w0, #0x1a
   2a5ac:	str	w0, [sp, #28]
   2a5b0:	ldrb	w0, [sp, #15]
   2a5b4:	cmp	w0, #0x2f
   2a5b8:	b.ls	2a5dc <udev_util_encode_string@@LIBUDEV_183+0x1edac>  // b.plast
   2a5bc:	ldrb	w0, [sp, #15]
   2a5c0:	cmp	w0, #0x39
   2a5c4:	b.hi	2a5dc <udev_util_encode_string@@LIBUDEV_183+0x1edac>  // b.pmore
   2a5c8:	ldrb	w1, [sp, #15]
   2a5cc:	ldr	w0, [sp, #28]
   2a5d0:	add	w0, w1, w0
   2a5d4:	sub	w0, w0, #0x30
   2a5d8:	b	2a620 <udev_util_encode_string@@LIBUDEV_183+0x1edf0>
   2a5dc:	ldr	w0, [sp, #28]
   2a5e0:	add	w0, w0, #0xa
   2a5e4:	str	w0, [sp, #28]
   2a5e8:	ldrb	w0, [sp, #15]
   2a5ec:	cmp	w0, #0x2b
   2a5f0:	b.ne	2a5fc <udev_util_encode_string@@LIBUDEV_183+0x1edcc>  // b.any
   2a5f4:	ldr	w0, [sp, #28]
   2a5f8:	b	2a620 <udev_util_encode_string@@LIBUDEV_183+0x1edf0>
   2a5fc:	ldr	w0, [sp, #28]
   2a600:	add	w0, w0, #0x1
   2a604:	str	w0, [sp, #28]
   2a608:	ldrb	w0, [sp, #15]
   2a60c:	cmp	w0, #0x2f
   2a610:	b.ne	2a61c <udev_util_encode_string@@LIBUDEV_183+0x1edec>  // b.any
   2a614:	ldr	w0, [sp, #28]
   2a618:	b	2a620 <udev_util_encode_string@@LIBUDEV_183+0x1edf0>
   2a61c:	mov	w0, #0xffffffea            	// #-22
   2a620:	add	sp, sp, #0x20
   2a624:	ret
   2a628:	stp	x29, x30, [sp, #-48]!
   2a62c:	mov	x29, sp
   2a630:	str	x0, [sp, #24]
   2a634:	str	x1, [sp, #16]
   2a638:	ldr	x0, [sp, #24]
   2a63c:	cmp	x0, #0x0
   2a640:	cset	w0, eq  // eq = none
   2a644:	and	w0, w0, #0xff
   2a648:	and	x0, x0, #0xff
   2a64c:	cmp	x0, #0x0
   2a650:	b.eq	2a67c <udev_util_encode_string@@LIBUDEV_183+0x1ee4c>  // b.none
   2a654:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a658:	add	x1, x0, #0x1ab
   2a65c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a660:	add	x4, x0, #0x290
   2a664:	mov	w3, #0x296                 	// #662
   2a668:	mov	x2, x1
   2a66c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a670:	add	x1, x0, #0x1c8
   2a674:	mov	w0, #0x0                   	// #0
   2a678:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a67c:	ldr	x0, [sp, #16]
   2a680:	cmp	x0, #0x0
   2a684:	cset	w0, eq  // eq = none
   2a688:	and	w0, w0, #0xff
   2a68c:	and	x0, x0, #0xff
   2a690:	cmp	x0, #0x0
   2a694:	b.eq	2a6c0 <udev_util_encode_string@@LIBUDEV_183+0x1ee90>  // b.none
   2a698:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a69c:	add	x1, x0, #0x1ab
   2a6a0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a6a4:	add	x4, x0, #0x290
   2a6a8:	mov	w3, #0x297                 	// #663
   2a6ac:	mov	x2, x1
   2a6b0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a6b4:	add	x1, x0, #0x1d0
   2a6b8:	mov	w0, #0x0                   	// #0
   2a6bc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a6c0:	ldr	x0, [sp, #16]
   2a6c4:	ldr	x0, [x0]
   2a6c8:	cmp	x0, #0x0
   2a6cc:	b.ne	2a6d8 <udev_util_encode_string@@LIBUDEV_183+0x1eea8>  // b.any
   2a6d0:	mov	w0, #0xffffffe0            	// #-32
   2a6d4:	b	2a7e4 <udev_util_encode_string@@LIBUDEV_183+0x1efb4>
   2a6d8:	ldr	x0, [sp, #24]
   2a6dc:	ldr	x0, [x0]
   2a6e0:	ldrb	w0, [x0]
   2a6e4:	mov	w1, w0
   2a6e8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a6ec:	add	x0, x0, #0x1d8
   2a6f0:	bl	5570 <strchr@plt>
   2a6f4:	cmp	x0, #0x0
   2a6f8:	b.eq	2a728 <udev_util_encode_string@@LIBUDEV_183+0x1eef8>  // b.none
   2a6fc:	ldr	x0, [sp, #24]
   2a700:	ldr	x0, [x0]
   2a704:	add	x1, x0, #0x1
   2a708:	ldr	x0, [sp, #24]
   2a70c:	str	x1, [x0]
   2a710:	ldr	x0, [sp, #16]
   2a714:	ldr	x0, [x0]
   2a718:	sub	x1, x0, #0x1
   2a71c:	ldr	x0, [sp, #16]
   2a720:	str	x1, [x0]
   2a724:	b	2a6c0 <udev_util_encode_string@@LIBUDEV_183+0x1ee90>
   2a728:	nop
   2a72c:	ldr	x0, [sp, #24]
   2a730:	ldr	x0, [x0]
   2a734:	ldrb	w0, [x0]
   2a738:	cmp	w0, #0x3d
   2a73c:	b.ne	2a74c <udev_util_encode_string@@LIBUDEV_183+0x1ef1c>  // b.any
   2a740:	mov	w0, #0x7fffffff            	// #2147483647
   2a744:	str	w0, [sp, #44]
   2a748:	b	2a774 <udev_util_encode_string@@LIBUDEV_183+0x1ef44>
   2a74c:	ldr	x0, [sp, #24]
   2a750:	ldr	x0, [x0]
   2a754:	ldrb	w0, [x0]
   2a758:	bl	2a544 <udev_util_encode_string@@LIBUDEV_183+0x1ed14>
   2a75c:	str	w0, [sp, #44]
   2a760:	ldr	w0, [sp, #44]
   2a764:	cmp	w0, #0x0
   2a768:	b.ge	2a774 <udev_util_encode_string@@LIBUDEV_183+0x1ef44>  // b.tcont
   2a76c:	ldr	w0, [sp, #44]
   2a770:	b	2a7e4 <udev_util_encode_string@@LIBUDEV_183+0x1efb4>
   2a774:	ldr	x0, [sp, #24]
   2a778:	ldr	x0, [x0]
   2a77c:	add	x1, x0, #0x1
   2a780:	ldr	x0, [sp, #24]
   2a784:	str	x1, [x0]
   2a788:	ldr	x0, [sp, #16]
   2a78c:	ldr	x0, [x0]
   2a790:	sub	x1, x0, #0x1
   2a794:	ldr	x0, [sp, #16]
   2a798:	str	x1, [x0]
   2a79c:	ldr	x0, [sp, #16]
   2a7a0:	ldr	x0, [x0]
   2a7a4:	cmp	x0, #0x0
   2a7a8:	b.eq	2a7d4 <udev_util_encode_string@@LIBUDEV_183+0x1efa4>  // b.none
   2a7ac:	ldr	x0, [sp, #24]
   2a7b0:	ldr	x0, [x0]
   2a7b4:	ldrb	w0, [x0]
   2a7b8:	mov	w1, w0
   2a7bc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a7c0:	add	x0, x0, #0x1d8
   2a7c4:	bl	5570 <strchr@plt>
   2a7c8:	cmp	x0, #0x0
   2a7cc:	b.eq	2a7dc <udev_util_encode_string@@LIBUDEV_183+0x1efac>  // b.none
   2a7d0:	b	2a774 <udev_util_encode_string@@LIBUDEV_183+0x1ef44>
   2a7d4:	nop
   2a7d8:	b	2a7e0 <udev_util_encode_string@@LIBUDEV_183+0x1efb0>
   2a7dc:	nop
   2a7e0:	ldr	w0, [sp, #44]
   2a7e4:	ldp	x29, x30, [sp], #48
   2a7e8:	ret
   2a7ec:	stp	x29, x30, [sp, #-160]!
   2a7f0:	mov	x29, sp
   2a7f4:	str	x19, [sp, #16]
   2a7f8:	str	x0, [sp, #72]
   2a7fc:	str	x1, [sp, #64]
   2a800:	strb	w2, [sp, #63]
   2a804:	str	x3, [sp, #48]
   2a808:	str	x4, [sp, #40]
   2a80c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2a810:	ldr	x0, [x0, #4016]
   2a814:	ldr	x1, [x0]
   2a818:	str	x1, [sp, #152]
   2a81c:	mov	x1, #0x0                   	// #0
   2a820:	str	xzr, [sp, #112]
   2a824:	ldr	x0, [sp, #72]
   2a828:	cmp	x0, #0x0
   2a82c:	cset	w0, eq  // eq = none
   2a830:	and	w0, w0, #0xff
   2a834:	and	x0, x0, #0xff
   2a838:	cmp	x0, #0x0
   2a83c:	b.eq	2a884 <udev_util_encode_string@@LIBUDEV_183+0x1f054>  // b.none
   2a840:	ldr	x0, [sp, #64]
   2a844:	cmp	x0, #0x0
   2a848:	cset	w0, ne  // ne = any
   2a84c:	and	w0, w0, #0xff
   2a850:	and	x0, x0, #0xff
   2a854:	cmp	x0, #0x0
   2a858:	b.eq	2a884 <udev_util_encode_string@@LIBUDEV_183+0x1f054>  // b.none
   2a85c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a860:	add	x1, x0, #0x1ab
   2a864:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a868:	add	x4, x0, #0x2a0
   2a86c:	mov	w3, #0x2c4                 	// #708
   2a870:	mov	x2, x1
   2a874:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a878:	add	x1, x0, #0x1f0
   2a87c:	mov	w0, #0x0                   	// #0
   2a880:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a884:	ldr	x0, [sp, #48]
   2a888:	cmp	x0, #0x0
   2a88c:	cset	w0, eq  // eq = none
   2a890:	and	w0, w0, #0xff
   2a894:	and	x0, x0, #0xff
   2a898:	cmp	x0, #0x0
   2a89c:	b.eq	2a8c8 <udev_util_encode_string@@LIBUDEV_183+0x1f098>  // b.none
   2a8a0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a8a4:	add	x1, x0, #0x1ab
   2a8a8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a8ac:	add	x4, x0, #0x2a0
   2a8b0:	mov	w3, #0x2c5                 	// #709
   2a8b4:	mov	x2, x1
   2a8b8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a8bc:	add	x1, x0, #0x1e0
   2a8c0:	mov	w0, #0x0                   	// #0
   2a8c4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a8c8:	ldr	x0, [sp, #40]
   2a8cc:	cmp	x0, #0x0
   2a8d0:	cset	w0, eq  // eq = none
   2a8d4:	and	w0, w0, #0xff
   2a8d8:	and	x0, x0, #0xff
   2a8dc:	cmp	x0, #0x0
   2a8e0:	b.eq	2a90c <udev_util_encode_string@@LIBUDEV_183+0x1f0dc>  // b.none
   2a8e4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a8e8:	add	x1, x0, #0x1ab
   2a8ec:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a8f0:	add	x4, x0, #0x2a0
   2a8f4:	mov	w3, #0x2c6                 	// #710
   2a8f8:	mov	x2, x1
   2a8fc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2a900:	add	x1, x0, #0x238
   2a904:	mov	w0, #0x0                   	// #0
   2a908:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2a90c:	ldr	x0, [sp, #64]
   2a910:	cmn	x0, #0x1
   2a914:	b.ne	2a924 <udev_util_encode_string@@LIBUDEV_183+0x1f0f4>  // b.any
   2a918:	ldr	x0, [sp, #72]
   2a91c:	bl	5040 <strlen@plt>
   2a920:	str	x0, [sp, #64]
   2a924:	ldr	x0, [sp, #64]
   2a928:	lsr	x1, x0, #2
   2a92c:	mov	x0, x1
   2a930:	lsl	x0, x0, #1
   2a934:	add	x1, x0, x1
   2a938:	ldr	x0, [sp, #64]
   2a93c:	and	x0, x0, #0x3
   2a940:	cmp	x0, #0x0
   2a944:	b.eq	2a958 <udev_util_encode_string@@LIBUDEV_183+0x1f128>  // b.none
   2a948:	ldr	x0, [sp, #64]
   2a94c:	and	x0, x0, #0x3
   2a950:	sub	x0, x0, #0x1
   2a954:	b	2a95c <udev_util_encode_string@@LIBUDEV_183+0x1f12c>
   2a958:	mov	x0, #0x0                   	// #0
   2a95c:	add	x0, x0, x1
   2a960:	str	x0, [sp, #136]
   2a964:	ldr	x0, [sp, #136]
   2a968:	add	x0, x0, #0x1
   2a96c:	bl	5220 <malloc@plt>
   2a970:	str	x0, [sp, #112]
   2a974:	ldr	x0, [sp, #112]
   2a978:	cmp	x0, #0x0
   2a97c:	b.ne	2a988 <udev_util_encode_string@@LIBUDEV_183+0x1f158>  // b.any
   2a980:	mov	w19, #0xfffffff4            	// #-12
   2a984:	b	2acf8 <udev_util_encode_string@@LIBUDEV_183+0x1f4c8>
   2a988:	ldr	x0, [sp, #72]
   2a98c:	str	x0, [sp, #120]
   2a990:	ldr	x0, [sp, #112]
   2a994:	str	x0, [sp, #128]
   2a998:	add	x1, sp, #0x40
   2a99c:	add	x0, sp, #0x78
   2a9a0:	bl	2a628 <udev_util_encode_string@@LIBUDEV_183+0x1edf8>
   2a9a4:	str	w0, [sp, #96]
   2a9a8:	ldr	w0, [sp, #96]
   2a9ac:	cmn	w0, #0x20
   2a9b0:	b.eq	2ac98 <udev_util_encode_string@@LIBUDEV_183+0x1f468>  // b.none
   2a9b4:	ldr	w0, [sp, #96]
   2a9b8:	cmp	w0, #0x0
   2a9bc:	b.ge	2a9cc <udev_util_encode_string@@LIBUDEV_183+0x1f19c>  // b.tcont
   2a9c0:	ldr	w0, [sp, #96]
   2a9c4:	str	w0, [sp, #92]
   2a9c8:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2a9cc:	ldr	w1, [sp, #96]
   2a9d0:	mov	w0, #0x7fffffff            	// #2147483647
   2a9d4:	cmp	w1, w0
   2a9d8:	b.ne	2a9e8 <udev_util_encode_string@@LIBUDEV_183+0x1f1b8>  // b.any
   2a9dc:	mov	w0, #0xffffffea            	// #-22
   2a9e0:	str	w0, [sp, #92]
   2a9e4:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2a9e8:	add	x1, sp, #0x40
   2a9ec:	add	x0, sp, #0x78
   2a9f0:	bl	2a628 <udev_util_encode_string@@LIBUDEV_183+0x1edf8>
   2a9f4:	str	w0, [sp, #100]
   2a9f8:	ldr	w0, [sp, #100]
   2a9fc:	cmp	w0, #0x0
   2aa00:	b.ge	2aa10 <udev_util_encode_string@@LIBUDEV_183+0x1f1e0>  // b.tcont
   2aa04:	ldr	w0, [sp, #100]
   2aa08:	str	w0, [sp, #92]
   2aa0c:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aa10:	ldr	w1, [sp, #100]
   2aa14:	mov	w0, #0x7fffffff            	// #2147483647
   2aa18:	cmp	w1, w0
   2aa1c:	b.ne	2aa2c <udev_util_encode_string@@LIBUDEV_183+0x1f1fc>  // b.any
   2aa20:	mov	w0, #0xffffffea            	// #-22
   2aa24:	str	w0, [sp, #92]
   2aa28:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aa2c:	add	x1, sp, #0x40
   2aa30:	add	x0, sp, #0x78
   2aa34:	bl	2a628 <udev_util_encode_string@@LIBUDEV_183+0x1edf8>
   2aa38:	str	w0, [sp, #104]
   2aa3c:	ldr	w0, [sp, #104]
   2aa40:	cmp	w0, #0x0
   2aa44:	b.ge	2aa54 <udev_util_encode_string@@LIBUDEV_183+0x1f224>  // b.tcont
   2aa48:	ldr	w0, [sp, #104]
   2aa4c:	str	w0, [sp, #92]
   2aa50:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aa54:	add	x1, sp, #0x40
   2aa58:	add	x0, sp, #0x78
   2aa5c:	bl	2a628 <udev_util_encode_string@@LIBUDEV_183+0x1edf8>
   2aa60:	str	w0, [sp, #108]
   2aa64:	ldr	w0, [sp, #108]
   2aa68:	cmp	w0, #0x0
   2aa6c:	b.ge	2aa7c <udev_util_encode_string@@LIBUDEV_183+0x1f24c>  // b.tcont
   2aa70:	ldr	w0, [sp, #108]
   2aa74:	str	w0, [sp, #92]
   2aa78:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aa7c:	ldr	w1, [sp, #104]
   2aa80:	mov	w0, #0x7fffffff            	// #2147483647
   2aa84:	cmp	w1, w0
   2aa88:	b.ne	2ab18 <udev_util_encode_string@@LIBUDEV_183+0x1f2e8>  // b.any
   2aa8c:	ldr	w1, [sp, #108]
   2aa90:	mov	w0, #0x7fffffff            	// #2147483647
   2aa94:	cmp	w1, w0
   2aa98:	b.eq	2aaa8 <udev_util_encode_string@@LIBUDEV_183+0x1f278>  // b.none
   2aa9c:	mov	w0, #0xffffffea            	// #-22
   2aaa0:	str	w0, [sp, #92]
   2aaa4:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aaa8:	ldr	w0, [sp, #100]
   2aaac:	and	w0, w0, #0xf
   2aab0:	cmp	w0, #0x0
   2aab4:	b.eq	2aac4 <udev_util_encode_string@@LIBUDEV_183+0x1f294>  // b.none
   2aab8:	mov	w0, #0xffffffea            	// #-22
   2aabc:	str	w0, [sp, #92]
   2aac0:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aac4:	ldr	x0, [sp, #64]
   2aac8:	cmp	x0, #0x0
   2aacc:	b.eq	2aadc <udev_util_encode_string@@LIBUDEV_183+0x1f2ac>  // b.none
   2aad0:	mov	w0, #0xffffffdc            	// #-36
   2aad4:	str	w0, [sp, #92]
   2aad8:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2aadc:	ldr	w0, [sp, #96]
   2aae0:	and	w0, w0, #0xff
   2aae4:	lsl	w0, w0, #2
   2aae8:	sxtb	w1, w0
   2aaec:	ldr	w0, [sp, #100]
   2aaf0:	asr	w0, w0, #4
   2aaf4:	sxtb	w0, w0
   2aaf8:	orr	w0, w1, w0
   2aafc:	sxtb	w2, w0
   2ab00:	ldr	x0, [sp, #128]
   2ab04:	add	x1, x0, #0x1
   2ab08:	str	x1, [sp, #128]
   2ab0c:	and	w1, w2, #0xff
   2ab10:	strb	w1, [x0]
   2ab14:	b	2ac9c <udev_util_encode_string@@LIBUDEV_183+0x1f46c>
   2ab18:	ldr	w1, [sp, #108]
   2ab1c:	mov	w0, #0x7fffffff            	// #2147483647
   2ab20:	cmp	w1, w0
   2ab24:	b.ne	2abe0 <udev_util_encode_string@@LIBUDEV_183+0x1f3b0>  // b.any
   2ab28:	ldr	w0, [sp, #104]
   2ab2c:	and	w0, w0, #0x3
   2ab30:	cmp	w0, #0x0
   2ab34:	b.eq	2ab44 <udev_util_encode_string@@LIBUDEV_183+0x1f314>  // b.none
   2ab38:	mov	w0, #0xffffffea            	// #-22
   2ab3c:	str	w0, [sp, #92]
   2ab40:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2ab44:	ldr	x0, [sp, #64]
   2ab48:	cmp	x0, #0x0
   2ab4c:	b.eq	2ab5c <udev_util_encode_string@@LIBUDEV_183+0x1f32c>  // b.none
   2ab50:	mov	w0, #0xffffffdc            	// #-36
   2ab54:	str	w0, [sp, #92]
   2ab58:	b	2acdc <udev_util_encode_string@@LIBUDEV_183+0x1f4ac>
   2ab5c:	ldr	w0, [sp, #96]
   2ab60:	and	w0, w0, #0xff
   2ab64:	lsl	w0, w0, #2
   2ab68:	sxtb	w1, w0
   2ab6c:	ldr	w0, [sp, #100]
   2ab70:	and	w0, w0, #0xff
   2ab74:	lsr	w0, w0, #4
   2ab78:	and	w0, w0, #0xff
   2ab7c:	sxtb	w0, w0
   2ab80:	orr	w0, w1, w0
   2ab84:	sxtb	w2, w0
   2ab88:	ldr	x0, [sp, #128]
   2ab8c:	add	x1, x0, #0x1
   2ab90:	str	x1, [sp, #128]
   2ab94:	and	w1, w2, #0xff
   2ab98:	strb	w1, [x0]
   2ab9c:	ldr	w0, [sp, #100]
   2aba0:	and	w0, w0, #0xff
   2aba4:	lsl	w0, w0, #4
   2aba8:	sxtb	w1, w0
   2abac:	ldr	w0, [sp, #104]
   2abb0:	and	w0, w0, #0xff
   2abb4:	lsr	w0, w0, #2
   2abb8:	and	w0, w0, #0xff
   2abbc:	sxtb	w0, w0
   2abc0:	orr	w0, w1, w0
   2abc4:	sxtb	w2, w0
   2abc8:	ldr	x0, [sp, #128]
   2abcc:	add	x1, x0, #0x1
   2abd0:	str	x1, [sp, #128]
   2abd4:	and	w1, w2, #0xff
   2abd8:	strb	w1, [x0]
   2abdc:	b	2ac9c <udev_util_encode_string@@LIBUDEV_183+0x1f46c>
   2abe0:	ldr	w0, [sp, #96]
   2abe4:	and	w0, w0, #0xff
   2abe8:	lsl	w0, w0, #2
   2abec:	sxtb	w1, w0
   2abf0:	ldr	w0, [sp, #100]
   2abf4:	and	w0, w0, #0xff
   2abf8:	lsr	w0, w0, #4
   2abfc:	and	w0, w0, #0xff
   2ac00:	sxtb	w0, w0
   2ac04:	orr	w0, w1, w0
   2ac08:	sxtb	w2, w0
   2ac0c:	ldr	x0, [sp, #128]
   2ac10:	add	x1, x0, #0x1
   2ac14:	str	x1, [sp, #128]
   2ac18:	and	w1, w2, #0xff
   2ac1c:	strb	w1, [x0]
   2ac20:	ldr	w0, [sp, #100]
   2ac24:	and	w0, w0, #0xff
   2ac28:	lsl	w0, w0, #4
   2ac2c:	sxtb	w1, w0
   2ac30:	ldr	w0, [sp, #104]
   2ac34:	and	w0, w0, #0xff
   2ac38:	lsr	w0, w0, #2
   2ac3c:	and	w0, w0, #0xff
   2ac40:	sxtb	w0, w0
   2ac44:	orr	w0, w1, w0
   2ac48:	sxtb	w2, w0
   2ac4c:	ldr	x0, [sp, #128]
   2ac50:	add	x1, x0, #0x1
   2ac54:	str	x1, [sp, #128]
   2ac58:	and	w1, w2, #0xff
   2ac5c:	strb	w1, [x0]
   2ac60:	ldr	w0, [sp, #104]
   2ac64:	and	w0, w0, #0xff
   2ac68:	lsl	w0, w0, #6
   2ac6c:	sxtb	w1, w0
   2ac70:	ldr	w0, [sp, #108]
   2ac74:	sxtb	w0, w0
   2ac78:	orr	w0, w1, w0
   2ac7c:	sxtb	w2, w0
   2ac80:	ldr	x0, [sp, #128]
   2ac84:	add	x1, x0, #0x1
   2ac88:	str	x1, [sp, #128]
   2ac8c:	and	w1, w2, #0xff
   2ac90:	strb	w1, [x0]
   2ac94:	b	2a998 <udev_util_encode_string@@LIBUDEV_183+0x1f168>
   2ac98:	nop
   2ac9c:	ldr	x0, [sp, #128]
   2aca0:	strb	wzr, [x0]
   2aca4:	ldr	x0, [sp, #112]
   2aca8:	ldr	x1, [sp, #128]
   2acac:	sub	x0, x1, x0
   2acb0:	mov	x1, x0
   2acb4:	ldr	x0, [sp, #40]
   2acb8:	str	x1, [x0]
   2acbc:	ldr	x0, [sp, #112]
   2acc0:	str	x0, [sp, #144]
   2acc4:	str	xzr, [sp, #112]
   2acc8:	ldr	x1, [sp, #144]
   2accc:	ldr	x0, [sp, #48]
   2acd0:	str	x1, [x0]
   2acd4:	mov	w19, #0x0                   	// #0
   2acd8:	b	2acf8 <udev_util_encode_string@@LIBUDEV_183+0x1f4c8>
   2acdc:	ldrb	w0, [sp, #63]
   2ace0:	cmp	w0, #0x0
   2ace4:	b.eq	2acf4 <udev_util_encode_string@@LIBUDEV_183+0x1f4c4>  // b.none
   2ace8:	ldr	x0, [sp, #112]
   2acec:	ldr	x1, [sp, #136]
   2acf0:	bl	2a04c <udev_util_encode_string@@LIBUDEV_183+0x1e81c>
   2acf4:	ldr	w19, [sp, #92]
   2acf8:	add	x0, sp, #0x70
   2acfc:	bl	2a028 <udev_util_encode_string@@LIBUDEV_183+0x1e7f8>
   2ad00:	mov	w1, w19
   2ad04:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ad08:	ldr	x0, [x0, #4016]
   2ad0c:	ldr	x2, [sp, #152]
   2ad10:	ldr	x0, [x0]
   2ad14:	eor	x0, x2, x0
   2ad18:	cmp	x0, #0x0
   2ad1c:	b.eq	2ad24 <udev_util_encode_string@@LIBUDEV_183+0x1f4f4>  // b.none
   2ad20:	bl	5390 <__stack_chk_fail@plt>
   2ad24:	mov	w0, w1
   2ad28:	ldr	x19, [sp, #16]
   2ad2c:	ldp	x29, x30, [sp], #160
   2ad30:	ret
   2ad34:	sub	sp, sp, #0x840
   2ad38:	stp	x29, x30, [sp]
   2ad3c:	mov	x29, sp
   2ad40:	str	w0, [sp, #28]
   2ad44:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ad48:	ldr	x0, [x0, #4016]
   2ad4c:	ldr	x1, [x0]
   2ad50:	str	x1, [sp, #2104]
   2ad54:	mov	x1, #0x0                   	// #0
   2ad58:	str	xzr, [sp, #40]
   2ad5c:	ldr	w0, [sp, #28]
   2ad60:	str	w0, [sp, #40]
   2ad64:	mov	w0, #0x1                   	// #1
   2ad68:	strh	w0, [sp, #44]
   2ad6c:	str	wzr, [sp, #32]
   2ad70:	add	x0, sp, #0x28
   2ad74:	mov	w2, #0x0                   	// #0
   2ad78:	mov	x1, #0x1                   	// #1
   2ad7c:	bl	5250 <poll@plt>
   2ad80:	str	w0, [sp, #36]
   2ad84:	ldr	w0, [sp, #36]
   2ad88:	cmp	w0, #0x0
   2ad8c:	b.ge	2adb0 <udev_util_encode_string@@LIBUDEV_183+0x1f580>  // b.tcont
   2ad90:	bl	57d0 <__errno_location@plt>
   2ad94:	ldr	w0, [x0]
   2ad98:	cmp	w0, #0x4
   2ad9c:	b.eq	2ae4c <udev_util_encode_string@@LIBUDEV_183+0x1f61c>  // b.none
   2ada0:	bl	57d0 <__errno_location@plt>
   2ada4:	ldr	w0, [x0]
   2ada8:	neg	w0, w0
   2adac:	b	2ae5c <udev_util_encode_string@@LIBUDEV_183+0x1f62c>
   2adb0:	ldr	w0, [sp, #36]
   2adb4:	cmp	w0, #0x0
   2adb8:	b.ne	2adc4 <udev_util_encode_string@@LIBUDEV_183+0x1f594>  // b.any
   2adbc:	ldr	w0, [sp, #32]
   2adc0:	b	2ae5c <udev_util_encode_string@@LIBUDEV_183+0x1f62c>
   2adc4:	add	x0, sp, #0x38
   2adc8:	mov	x2, #0x800                 	// #2048
   2adcc:	mov	x1, x0
   2add0:	ldr	w0, [sp, #28]
   2add4:	bl	5680 <read@plt>
   2add8:	str	x0, [sp, #48]
   2addc:	ldr	x0, [sp, #48]
   2ade0:	cmp	x0, #0x0
   2ade4:	b.ge	2ae20 <udev_util_encode_string@@LIBUDEV_183+0x1f5f0>  // b.tcont
   2ade8:	bl	57d0 <__errno_location@plt>
   2adec:	ldr	w0, [x0]
   2adf0:	cmp	w0, #0x4
   2adf4:	b.eq	2ae54 <udev_util_encode_string@@LIBUDEV_183+0x1f624>  // b.none
   2adf8:	bl	57d0 <__errno_location@plt>
   2adfc:	ldr	w0, [x0]
   2ae00:	cmp	w0, #0xb
   2ae04:	b.ne	2ae10 <udev_util_encode_string@@LIBUDEV_183+0x1f5e0>  // b.any
   2ae08:	ldr	w0, [sp, #32]
   2ae0c:	b	2ae5c <udev_util_encode_string@@LIBUDEV_183+0x1f62c>
   2ae10:	bl	57d0 <__errno_location@plt>
   2ae14:	ldr	w0, [x0]
   2ae18:	neg	w0, w0
   2ae1c:	b	2ae5c <udev_util_encode_string@@LIBUDEV_183+0x1f62c>
   2ae20:	ldr	x0, [sp, #48]
   2ae24:	cmp	x0, #0x0
   2ae28:	b.ne	2ae34 <udev_util_encode_string@@LIBUDEV_183+0x1f604>  // b.any
   2ae2c:	ldr	w0, [sp, #32]
   2ae30:	b	2ae5c <udev_util_encode_string@@LIBUDEV_183+0x1f62c>
   2ae34:	ldr	x0, [sp, #48]
   2ae38:	mov	w1, w0
   2ae3c:	ldr	w0, [sp, #32]
   2ae40:	add	w0, w0, w1
   2ae44:	str	w0, [sp, #32]
   2ae48:	b	2ad70 <udev_util_encode_string@@LIBUDEV_183+0x1f540>
   2ae4c:	nop
   2ae50:	b	2ad70 <udev_util_encode_string@@LIBUDEV_183+0x1f540>
   2ae54:	nop
   2ae58:	b	2ad70 <udev_util_encode_string@@LIBUDEV_183+0x1f540>
   2ae5c:	mov	w1, w0
   2ae60:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ae64:	ldr	x0, [x0, #4016]
   2ae68:	ldr	x2, [sp, #2104]
   2ae6c:	ldr	x0, [x0]
   2ae70:	eor	x0, x2, x0
   2ae74:	cmp	x0, #0x0
   2ae78:	b.eq	2ae80 <udev_util_encode_string@@LIBUDEV_183+0x1f650>  // b.none
   2ae7c:	bl	5390 <__stack_chk_fail@plt>
   2ae80:	mov	w0, w1
   2ae84:	ldp	x29, x30, [sp]
   2ae88:	add	sp, sp, #0x840
   2ae8c:	ret
   2ae90:	stp	x29, x30, [sp, #-80]!
   2ae94:	mov	x29, sp
   2ae98:	str	w0, [sp, #44]
   2ae9c:	str	x1, [sp, #32]
   2aea0:	str	x2, [sp, #24]
   2aea4:	strb	w3, [sp, #43]
   2aea8:	ldr	x0, [sp, #32]
   2aeac:	str	x0, [sp, #56]
   2aeb0:	str	xzr, [sp, #64]
   2aeb4:	ldr	w0, [sp, #44]
   2aeb8:	lsr	w0, w0, #31
   2aebc:	and	w0, w0, #0xff
   2aec0:	and	x0, x0, #0xff
   2aec4:	cmp	x0, #0x0
   2aec8:	b.eq	2aef4 <udev_util_encode_string@@LIBUDEV_183+0x1f6c4>  // b.none
   2aecc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2aed0:	add	x1, x0, #0x2bb
   2aed4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2aed8:	add	x4, x0, #0x2f8
   2aedc:	mov	w3, #0x3d                  	// #61
   2aee0:	mov	x2, x1
   2aee4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2aee8:	add	x1, x0, #0x2d0
   2aeec:	mov	w0, #0x0                   	// #0
   2aef0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2aef4:	ldr	x0, [sp, #32]
   2aef8:	cmp	x0, #0x0
   2aefc:	cset	w0, eq  // eq = none
   2af00:	and	w0, w0, #0xff
   2af04:	and	x0, x0, #0xff
   2af08:	cmp	x0, #0x0
   2af0c:	b.eq	2af38 <udev_util_encode_string@@LIBUDEV_183+0x1f708>  // b.none
   2af10:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2af14:	add	x1, x0, #0x2bb
   2af18:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2af1c:	add	x4, x0, #0x2f8
   2af20:	mov	w3, #0x3e                  	// #62
   2af24:	mov	x2, x1
   2af28:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2af2c:	add	x1, x0, #0x2d8
   2af30:	mov	w0, #0x0                   	// #0
   2af34:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2af38:	ldr	x0, [sp, #24]
   2af3c:	cmp	x0, #0x0
   2af40:	b.ge	2af4c <udev_util_encode_string@@LIBUDEV_183+0x1f71c>  // b.tcont
   2af44:	mov	x0, #0xffffffffffffffea    	// #-22
   2af48:	b	2b078 <udev_util_encode_string@@LIBUDEV_183+0x1f848>
   2af4c:	ldr	x2, [sp, #24]
   2af50:	ldr	x1, [sp, #56]
   2af54:	ldr	w0, [sp, #44]
   2af58:	bl	5680 <read@plt>
   2af5c:	str	x0, [sp, #72]
   2af60:	ldr	x0, [sp, #72]
   2af64:	cmp	x0, #0x0
   2af68:	b.ge	2afd4 <udev_util_encode_string@@LIBUDEV_183+0x1f7a4>  // b.tcont
   2af6c:	bl	57d0 <__errno_location@plt>
   2af70:	ldr	w0, [x0]
   2af74:	cmp	w0, #0x4
   2af78:	b.eq	2b064 <udev_util_encode_string@@LIBUDEV_183+0x1f834>  // b.none
   2af7c:	bl	57d0 <__errno_location@plt>
   2af80:	ldr	w0, [x0]
   2af84:	cmp	w0, #0xb
   2af88:	b.ne	2afac <udev_util_encode_string@@LIBUDEV_183+0x1f77c>  // b.any
   2af8c:	ldrb	w0, [sp, #43]
   2af90:	cmp	w0, #0x0
   2af94:	b.eq	2afac <udev_util_encode_string@@LIBUDEV_183+0x1f77c>  // b.none
   2af98:	mov	x2, #0xffffffffffffffff    	// #-1
   2af9c:	mov	w1, #0x1                   	// #1
   2afa0:	ldr	w0, [sp, #44]
   2afa4:	bl	2b0e8 <udev_util_encode_string@@LIBUDEV_183+0x1f8b8>
   2afa8:	b	2b068 <udev_util_encode_string@@LIBUDEV_183+0x1f838>
   2afac:	ldr	x0, [sp, #64]
   2afb0:	cmp	x0, #0x0
   2afb4:	b.gt	2afcc <udev_util_encode_string@@LIBUDEV_183+0x1f79c>
   2afb8:	bl	57d0 <__errno_location@plt>
   2afbc:	ldr	w0, [x0]
   2afc0:	neg	w0, w0
   2afc4:	sxtw	x0, w0
   2afc8:	b	2b078 <udev_util_encode_string@@LIBUDEV_183+0x1f848>
   2afcc:	ldr	x0, [sp, #64]
   2afd0:	b	2b078 <udev_util_encode_string@@LIBUDEV_183+0x1f848>
   2afd4:	ldr	x0, [sp, #72]
   2afd8:	cmp	x0, #0x0
   2afdc:	b.ne	2afe8 <udev_util_encode_string@@LIBUDEV_183+0x1f7b8>  // b.any
   2afe0:	ldr	x0, [sp, #64]
   2afe4:	b	2b078 <udev_util_encode_string@@LIBUDEV_183+0x1f848>
   2afe8:	ldr	x0, [sp, #72]
   2afec:	ldr	x1, [sp, #24]
   2aff0:	cmp	x1, x0
   2aff4:	cset	w0, cc  // cc = lo, ul, last
   2aff8:	and	w0, w0, #0xff
   2affc:	and	x0, x0, #0xff
   2b000:	cmp	x0, #0x0
   2b004:	b.eq	2b030 <udev_util_encode_string@@LIBUDEV_183+0x1f800>  // b.none
   2b008:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b00c:	add	x1, x0, #0x2bb
   2b010:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b014:	add	x4, x0, #0x2f8
   2b018:	mov	w3, #0x5e                  	// #94
   2b01c:	mov	x2, x1
   2b020:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b024:	add	x1, x0, #0x2e0
   2b028:	mov	w0, #0x0                   	// #0
   2b02c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2b030:	ldr	x0, [sp, #72]
   2b034:	ldr	x1, [sp, #56]
   2b038:	add	x0, x1, x0
   2b03c:	str	x0, [sp, #56]
   2b040:	ldr	x0, [sp, #72]
   2b044:	ldr	x1, [sp, #24]
   2b048:	sub	x0, x1, x0
   2b04c:	str	x0, [sp, #24]
   2b050:	ldr	x1, [sp, #64]
   2b054:	ldr	x0, [sp, #72]
   2b058:	add	x0, x1, x0
   2b05c:	str	x0, [sp, #64]
   2b060:	b	2b068 <udev_util_encode_string@@LIBUDEV_183+0x1f838>
   2b064:	nop
   2b068:	ldr	x0, [sp, #24]
   2b06c:	cmp	x0, #0x0
   2b070:	b.ne	2af4c <udev_util_encode_string@@LIBUDEV_183+0x1f71c>  // b.any
   2b074:	ldr	x0, [sp, #64]
   2b078:	ldp	x29, x30, [sp], #80
   2b07c:	ret
   2b080:	stp	x29, x30, [sp, #-64]!
   2b084:	mov	x29, sp
   2b088:	str	w0, [sp, #44]
   2b08c:	str	x1, [sp, #32]
   2b090:	str	x2, [sp, #24]
   2b094:	strb	w3, [sp, #43]
   2b098:	ldrb	w3, [sp, #43]
   2b09c:	ldr	x2, [sp, #24]
   2b0a0:	ldr	x1, [sp, #32]
   2b0a4:	ldr	w0, [sp, #44]
   2b0a8:	bl	2ae90 <udev_util_encode_string@@LIBUDEV_183+0x1f660>
   2b0ac:	str	x0, [sp, #56]
   2b0b0:	ldr	x0, [sp, #56]
   2b0b4:	cmp	x0, #0x0
   2b0b8:	b.ge	2b0c4 <udev_util_encode_string@@LIBUDEV_183+0x1f894>  // b.tcont
   2b0bc:	ldr	x0, [sp, #56]
   2b0c0:	b	2b0e0 <udev_util_encode_string@@LIBUDEV_183+0x1f8b0>
   2b0c4:	ldr	x0, [sp, #24]
   2b0c8:	ldr	x1, [sp, #56]
   2b0cc:	cmp	x1, x0
   2b0d0:	b.eq	2b0dc <udev_util_encode_string@@LIBUDEV_183+0x1f8ac>  // b.none
   2b0d4:	mov	w0, #0xfffffffb            	// #-5
   2b0d8:	b	2b0e0 <udev_util_encode_string@@LIBUDEV_183+0x1f8b0>
   2b0dc:	mov	w0, #0x0                   	// #0
   2b0e0:	ldp	x29, x30, [sp], #64
   2b0e4:	ret
   2b0e8:	stp	x29, x30, [sp, #-80]!
   2b0ec:	mov	x29, sp
   2b0f0:	str	w0, [sp, #28]
   2b0f4:	str	w1, [sp, #24]
   2b0f8:	str	x2, [sp, #16]
   2b0fc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b100:	ldr	x0, [x0, #4016]
   2b104:	ldr	x1, [x0]
   2b108:	str	x1, [sp, #72]
   2b10c:	mov	x1, #0x0                   	// #0
   2b110:	str	xzr, [sp, #48]
   2b114:	ldr	w0, [sp, #28]
   2b118:	str	w0, [sp, #48]
   2b11c:	ldr	w0, [sp, #24]
   2b120:	sxth	w0, w0
   2b124:	strh	w0, [sp, #52]
   2b128:	ldr	x0, [sp, #16]
   2b12c:	cmn	x0, #0x1
   2b130:	b.eq	2b148 <udev_util_encode_string@@LIBUDEV_183+0x1f918>  // b.none
   2b134:	add	x0, sp, #0x38
   2b138:	ldr	x1, [sp, #16]
   2b13c:	bl	355c0 <udev_util_encode_string@@LIBUDEV_183+0x29d90>
   2b140:	mov	x1, x0
   2b144:	b	2b14c <udev_util_encode_string@@LIBUDEV_183+0x1f91c>
   2b148:	mov	x1, #0x0                   	// #0
   2b14c:	add	x0, sp, #0x30
   2b150:	mov	x3, #0x0                   	// #0
   2b154:	mov	x2, x1
   2b158:	mov	x1, #0x1                   	// #1
   2b15c:	bl	5670 <ppoll@plt>
   2b160:	str	w0, [sp, #44]
   2b164:	ldr	w0, [sp, #44]
   2b168:	cmp	w0, #0x0
   2b16c:	b.ge	2b180 <udev_util_encode_string@@LIBUDEV_183+0x1f950>  // b.tcont
   2b170:	bl	57d0 <__errno_location@plt>
   2b174:	ldr	w0, [x0]
   2b178:	neg	w0, w0
   2b17c:	b	2b198 <udev_util_encode_string@@LIBUDEV_183+0x1f968>
   2b180:	ldr	w0, [sp, #44]
   2b184:	cmp	w0, #0x0
   2b188:	b.ne	2b194 <udev_util_encode_string@@LIBUDEV_183+0x1f964>  // b.any
   2b18c:	mov	w0, #0x0                   	// #0
   2b190:	b	2b198 <udev_util_encode_string@@LIBUDEV_183+0x1f968>
   2b194:	ldrsh	w0, [sp, #54]
   2b198:	mov	w1, w0
   2b19c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b1a0:	ldr	x0, [x0, #4016]
   2b1a4:	ldr	x2, [sp, #72]
   2b1a8:	ldr	x0, [x0]
   2b1ac:	eor	x0, x2, x0
   2b1b0:	cmp	x0, #0x0
   2b1b4:	b.eq	2b1bc <udev_util_encode_string@@LIBUDEV_183+0x1f98c>  // b.none
   2b1b8:	bl	5390 <__stack_chk_fail@plt>
   2b1bc:	mov	w0, w1
   2b1c0:	ldp	x29, x30, [sp], #80
   2b1c4:	ret
   2b1c8:	stp	x29, x30, [sp, #-64]!
   2b1cc:	mov	x29, sp
   2b1d0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b1d4:	ldr	x0, [x0, #4016]
   2b1d8:	ldr	x1, [x0]
   2b1dc:	str	x1, [sp, #56]
   2b1e0:	mov	x1, #0x0                   	// #0
   2b1e4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b1e8:	add	x0, x0, #0xb8
   2b1ec:	ldr	w0, [x0]
   2b1f0:	cmp	w0, #0x0
   2b1f4:	b.ge	2b338 <udev_util_encode_string@@LIBUDEV_183+0x1fb08>  // b.tcont
   2b1f8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b1fc:	add	x1, x0, #0x400
   2b200:	mov	w0, #0x6                   	// #6
   2b204:	bl	5870 <setlocale@plt>
   2b208:	cmp	x0, #0x0
   2b20c:	b.ne	2b224 <udev_util_encode_string@@LIBUDEV_183+0x1f9f4>  // b.any
   2b210:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b214:	add	x0, x0, #0xb8
   2b218:	mov	w1, #0x1                   	// #1
   2b21c:	str	w1, [x0]
   2b220:	b	2b33c <udev_util_encode_string@@LIBUDEV_183+0x1fb0c>
   2b224:	mov	w0, #0xe                   	// #14
   2b228:	bl	5210 <nl_langinfo@plt>
   2b22c:	str	x0, [sp, #24]
   2b230:	ldr	x0, [sp, #24]
   2b234:	cmp	x0, #0x0
   2b238:	b.ne	2b250 <udev_util_encode_string@@LIBUDEV_183+0x1fa20>  // b.any
   2b23c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b240:	add	x0, x0, #0xb8
   2b244:	mov	w1, #0x1                   	// #1
   2b248:	str	w1, [x0]
   2b24c:	b	2b33c <udev_util_encode_string@@LIBUDEV_183+0x1fb0c>
   2b250:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b254:	add	x1, x0, #0x398
   2b258:	ldr	x0, [sp, #24]
   2b25c:	bl	5440 <strcmp@plt>
   2b260:	cmp	w0, #0x0
   2b264:	b.ne	2b27c <udev_util_encode_string@@LIBUDEV_183+0x1fa4c>  // b.any
   2b268:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b26c:	add	x0, x0, #0xb8
   2b270:	mov	w1, #0x1                   	// #1
   2b274:	str	w1, [x0]
   2b278:	b	2b33c <udev_util_encode_string@@LIBUDEV_183+0x1fb0c>
   2b27c:	mov	x1, #0x0                   	// #0
   2b280:	mov	w0, #0x0                   	// #0
   2b284:	bl	5870 <setlocale@plt>
   2b288:	str	x0, [sp, #24]
   2b28c:	ldr	x0, [sp, #24]
   2b290:	cmp	x0, #0x0
   2b294:	b.ne	2b2ac <udev_util_encode_string@@LIBUDEV_183+0x1fa7c>  // b.any
   2b298:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b29c:	add	x0, x0, #0xb8
   2b2a0:	mov	w1, #0x1                   	// #1
   2b2a4:	str	w1, [x0]
   2b2a8:	b	2b33c <udev_util_encode_string@@LIBUDEV_183+0x1fb0c>
   2b2ac:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b2b0:	add	x0, x0, #0x88
   2b2b4:	add	x2, sp, #0x20
   2b2b8:	mov	x3, x0
   2b2bc:	ldp	x0, x1, [x3]
   2b2c0:	stp	x0, x1, [x2]
   2b2c4:	ldr	x0, [x3, #16]
   2b2c8:	str	x0, [x2, #16]
   2b2cc:	add	x0, sp, #0x20
   2b2d0:	ldr	x1, [sp, #24]
   2b2d4:	bl	34d68 <udev_util_encode_string@@LIBUDEV_183+0x29538>
   2b2d8:	cmp	x0, #0x0
   2b2dc:	b.eq	2b324 <udev_util_encode_string@@LIBUDEV_183+0x1faf4>  // b.none
   2b2e0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b2e4:	add	x0, x0, #0x410
   2b2e8:	bl	57f0 <getenv@plt>
   2b2ec:	cmp	x0, #0x0
   2b2f0:	b.ne	2b324 <udev_util_encode_string@@LIBUDEV_183+0x1faf4>  // b.any
   2b2f4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b2f8:	add	x0, x0, #0x418
   2b2fc:	bl	57f0 <getenv@plt>
   2b300:	cmp	x0, #0x0
   2b304:	b.ne	2b324 <udev_util_encode_string@@LIBUDEV_183+0x1faf4>  // b.any
   2b308:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b30c:	add	x0, x0, #0x428
   2b310:	bl	57f0 <getenv@plt>
   2b314:	cmp	x0, #0x0
   2b318:	b.ne	2b324 <udev_util_encode_string@@LIBUDEV_183+0x1faf4>  // b.any
   2b31c:	mov	w0, #0x1                   	// #1
   2b320:	b	2b328 <udev_util_encode_string@@LIBUDEV_183+0x1faf8>
   2b324:	mov	w0, #0x0                   	// #0
   2b328:	adrp	x1, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b32c:	add	x1, x1, #0xb8
   2b330:	str	w0, [x1]
   2b334:	b	2b33c <udev_util_encode_string@@LIBUDEV_183+0x1fb0c>
   2b338:	nop
   2b33c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b340:	add	x0, x0, #0xb8
   2b344:	ldr	w0, [x0]
   2b348:	cmp	w0, #0x0
   2b34c:	cset	w0, ne  // ne = any
   2b350:	and	w0, w0, #0xff
   2b354:	mov	w1, w0
   2b358:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b35c:	ldr	x0, [x0, #4016]
   2b360:	ldr	x2, [sp, #56]
   2b364:	ldr	x0, [x0]
   2b368:	eor	x0, x2, x0
   2b36c:	cmp	x0, #0x0
   2b370:	b.eq	2b378 <udev_util_encode_string@@LIBUDEV_183+0x1fb48>  // b.none
   2b374:	bl	5390 <__stack_chk_fail@plt>
   2b378:	mov	w0, w1
   2b37c:	ldp	x29, x30, [sp], #64
   2b380:	ret
   2b384:	stp	x29, x30, [sp, #-64]!
   2b388:	mov	x29, sp
   2b38c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b390:	ldr	x0, [x0, #4016]
   2b394:	ldr	x1, [x0]
   2b398:	str	x1, [sp, #56]
   2b39c:	mov	x1, #0x0                   	// #0
   2b3a0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b3a4:	add	x0, x0, #0xbc
   2b3a8:	ldr	w0, [x0]
   2b3ac:	cmp	w0, #0x0
   2b3b0:	b.ge	2b470 <udev_util_encode_string@@LIBUDEV_183+0x1fc40>  // b.tcont
   2b3b4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b3b8:	add	x0, x0, #0x430
   2b3bc:	bl	363b4 <udev_util_encode_string@@LIBUDEV_183+0x2ab84>
   2b3c0:	str	w0, [sp, #20]
   2b3c4:	ldr	w0, [sp, #20]
   2b3c8:	cmp	w0, #0x0
   2b3cc:	b.ge	2b460 <udev_util_encode_string@@LIBUDEV_183+0x1fc30>  // b.tcont
   2b3d0:	bl	2b1c8 <udev_util_encode_string@@LIBUDEV_183+0x1f998>
   2b3d4:	and	w0, w0, #0xff
   2b3d8:	cmp	w0, #0x0
   2b3dc:	b.eq	2b44c <udev_util_encode_string@@LIBUDEV_183+0x1fc1c>  // b.none
   2b3e0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b3e4:	add	x0, x0, #0x440
   2b3e8:	bl	57f0 <getenv@plt>
   2b3ec:	str	x0, [sp, #24]
   2b3f0:	ldr	x0, [sp, #24]
   2b3f4:	cmp	x0, #0x0
   2b3f8:	b.eq	2b438 <udev_util_encode_string@@LIBUDEV_183+0x1fc08>  // b.none
   2b3fc:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b400:	add	x0, x0, #0xa0
   2b404:	add	x2, sp, #0x20
   2b408:	mov	x3, x0
   2b40c:	ldp	x0, x1, [x3]
   2b410:	stp	x0, x1, [x2]
   2b414:	ldr	x0, [x3, #16]
   2b418:	str	x0, [x2, #16]
   2b41c:	add	x0, sp, #0x20
   2b420:	ldr	x1, [sp, #24]
   2b424:	bl	34d68 <udev_util_encode_string@@LIBUDEV_183+0x29538>
   2b428:	cmp	x0, #0x0
   2b42c:	b.eq	2b438 <udev_util_encode_string@@LIBUDEV_183+0x1fc08>  // b.none
   2b430:	mov	w0, #0x1                   	// #1
   2b434:	b	2b43c <udev_util_encode_string@@LIBUDEV_183+0x1fc0c>
   2b438:	mov	w0, #0x0                   	// #0
   2b43c:	cmp	w0, #0x0
   2b440:	b.ne	2b44c <udev_util_encode_string@@LIBUDEV_183+0x1fc1c>  // b.any
   2b444:	mov	w0, #0x1                   	// #1
   2b448:	b	2b450 <udev_util_encode_string@@LIBUDEV_183+0x1fc20>
   2b44c:	mov	w0, #0x0                   	// #0
   2b450:	adrp	x1, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b454:	add	x1, x1, #0xbc
   2b458:	str	w0, [x1]
   2b45c:	b	2b470 <udev_util_encode_string@@LIBUDEV_183+0x1fc40>
   2b460:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b464:	add	x0, x0, #0xbc
   2b468:	ldr	w1, [sp, #20]
   2b46c:	str	w1, [x0]
   2b470:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b474:	add	x0, x0, #0xbc
   2b478:	ldr	w0, [x0]
   2b47c:	cmp	w0, #0x0
   2b480:	cset	w0, ne  // ne = any
   2b484:	and	w0, w0, #0xff
   2b488:	mov	w1, w0
   2b48c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b490:	ldr	x0, [x0, #4016]
   2b494:	ldr	x2, [sp, #56]
   2b498:	ldr	x0, [x0]
   2b49c:	eor	x0, x2, x0
   2b4a0:	cmp	x0, #0x0
   2b4a4:	b.eq	2b4ac <udev_util_encode_string@@LIBUDEV_183+0x1fc7c>  // b.none
   2b4a8:	bl	5390 <__stack_chk_fail@plt>
   2b4ac:	mov	w0, w1
   2b4b0:	ldp	x29, x30, [sp], #64
   2b4b4:	ret
   2b4b8:	stp	x29, x30, [sp, #-32]!
   2b4bc:	mov	x29, sp
   2b4c0:	str	w0, [sp, #28]
   2b4c4:	ldr	w0, [sp, #28]
   2b4c8:	cmp	w0, #0x13
   2b4cc:	cset	w0, hi  // hi = pmore
   2b4d0:	and	w0, w0, #0xff
   2b4d4:	and	x0, x0, #0xff
   2b4d8:	cmp	x0, #0x0
   2b4dc:	b.eq	2b508 <udev_util_encode_string@@LIBUDEV_183+0x1fcd8>  // b.none
   2b4e0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b4e4:	add	x1, x0, #0x3a3
   2b4e8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b4ec:	add	x4, x0, #0x648
   2b4f0:	mov	w3, #0x181                 	// #385
   2b4f4:	mov	x2, x1
   2b4f8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b4fc:	add	x1, x0, #0x448
   2b500:	mov	w0, #0x0                   	// #0
   2b504:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2b508:	ldr	w0, [sp, #28]
   2b50c:	cmp	w0, #0xc
   2b510:	b.ls	2b524 <udev_util_encode_string@@LIBUDEV_183+0x1fcf4>  // b.plast
   2b514:	bl	2b384 <udev_util_encode_string@@LIBUDEV_183+0x1fb54>
   2b518:	and	w0, w0, #0xff
   2b51c:	mov	w1, w0
   2b520:	b	2b530 <udev_util_encode_string@@LIBUDEV_183+0x1fd00>
   2b524:	bl	2b1c8 <udev_util_encode_string@@LIBUDEV_183+0x1f998>
   2b528:	and	w0, w0, #0xff
   2b52c:	mov	w1, w0
   2b530:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2b534:	add	x2, x0, #0x708
   2b538:	ldr	w3, [sp, #28]
   2b53c:	sxtw	x1, w1
   2b540:	mov	x0, x1
   2b544:	lsl	x0, x0, #2
   2b548:	add	x0, x0, x1
   2b54c:	lsl	x0, x0, #2
   2b550:	add	x0, x0, x3
   2b554:	ldr	x0, [x2, x0, lsl #3]
   2b558:	ldp	x29, x30, [sp], #32
   2b55c:	ret
   2b560:	sub	sp, sp, #0x10
   2b564:	str	x0, [sp, #8]
   2b568:	str	x1, [sp]
   2b56c:	ldr	x0, [sp]
   2b570:	cmp	x0, #0x0
   2b574:	cset	w0, ne  // ne = any
   2b578:	and	w0, w0, #0xff
   2b57c:	and	x0, x0, #0xff
   2b580:	cmp	x0, #0x0
   2b584:	b.eq	2b5c8 <udev_util_encode_string@@LIBUDEV_183+0x1fd98>  // b.none
   2b588:	mov	x2, #0x0                   	// #0
   2b58c:	ldr	x1, [sp, #8]
   2b590:	ldr	x0, [sp]
   2b594:	umulh	x0, x1, x0
   2b598:	cmp	x0, #0x0
   2b59c:	b.eq	2b5a4 <udev_util_encode_string@@LIBUDEV_183+0x1fd74>  // b.none
   2b5a0:	mov	x2, #0x1                   	// #1
   2b5a4:	mov	x0, x2
   2b5a8:	cmp	x0, #0x0
   2b5ac:	cset	w0, ne  // ne = any
   2b5b0:	and	w0, w0, #0xff
   2b5b4:	and	x0, x0, #0xff
   2b5b8:	cmp	x0, #0x0
   2b5bc:	b.eq	2b5c8 <udev_util_encode_string@@LIBUDEV_183+0x1fd98>  // b.none
   2b5c0:	mov	w0, #0x1                   	// #1
   2b5c4:	b	2b5cc <udev_util_encode_string@@LIBUDEV_183+0x1fd9c>
   2b5c8:	mov	w0, #0x0                   	// #0
   2b5cc:	and	w0, w0, #0x1
   2b5d0:	and	w0, w0, #0xff
   2b5d4:	add	sp, sp, #0x10
   2b5d8:	ret
   2b5dc:	stp	x29, x30, [sp, #-32]!
   2b5e0:	mov	x29, sp
   2b5e4:	str	x0, [sp, #24]
   2b5e8:	ldr	x0, [sp, #24]
   2b5ec:	ldr	w0, [x0]
   2b5f0:	cmp	w0, #0x0
   2b5f4:	b.lt	2b610 <udev_util_encode_string@@LIBUDEV_183+0x1fde0>  // b.tstop
   2b5f8:	bl	57d0 <__errno_location@plt>
   2b5fc:	mov	x1, x0
   2b600:	ldr	x0, [sp, #24]
   2b604:	ldr	w0, [x0]
   2b608:	str	w0, [x1]
   2b60c:	b	2b614 <udev_util_encode_string@@LIBUDEV_183+0x1fde4>
   2b610:	nop
   2b614:	ldp	x29, x30, [sp], #32
   2b618:	ret
   2b61c:	stp	x29, x30, [sp, #-32]!
   2b620:	mov	x29, sp
   2b624:	str	w0, [sp, #28]
   2b628:	ldr	w0, [sp, #28]
   2b62c:	cmp	w0, #0x2
   2b630:	b.gt	2b63c <udev_util_encode_string@@LIBUDEV_183+0x1fe0c>
   2b634:	mov	w0, #0xffffffff            	// #-1
   2b638:	b	2b644 <udev_util_encode_string@@LIBUDEV_183+0x1fe14>
   2b63c:	ldr	w0, [sp, #28]
   2b640:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2b644:	ldp	x29, x30, [sp], #32
   2b648:	ret
   2b64c:	sub	sp, sp, #0x20
   2b650:	str	x0, [sp, #8]
   2b654:	str	x1, [sp]
   2b658:	str	xzr, [sp, #24]
   2b65c:	str	xzr, [sp, #16]
   2b660:	b	2b690 <udev_util_encode_string@@LIBUDEV_183+0x1fe60>
   2b664:	ldr	x0, [sp, #16]
   2b668:	lsl	x0, x0, #4
   2b66c:	ldr	x1, [sp, #8]
   2b670:	add	x0, x1, x0
   2b674:	ldr	x0, [x0, #8]
   2b678:	ldr	x1, [sp, #24]
   2b67c:	add	x0, x1, x0
   2b680:	str	x0, [sp, #24]
   2b684:	ldr	x0, [sp, #16]
   2b688:	add	x0, x0, #0x1
   2b68c:	str	x0, [sp, #16]
   2b690:	ldr	x1, [sp, #16]
   2b694:	ldr	x0, [sp]
   2b698:	cmp	x1, x0
   2b69c:	b.cc	2b664 <udev_util_encode_string@@LIBUDEV_183+0x1fe34>  // b.lo, b.ul, b.last
   2b6a0:	ldr	x0, [sp, #24]
   2b6a4:	add	sp, sp, #0x20
   2b6a8:	ret
   2b6ac:	sub	sp, sp, #0x40
   2b6b0:	str	x0, [sp, #24]
   2b6b4:	str	x1, [sp, #16]
   2b6b8:	str	x2, [sp, #8]
   2b6bc:	str	xzr, [sp, #32]
   2b6c0:	b	2b794 <udev_util_encode_string@@LIBUDEV_183+0x1ff64>
   2b6c4:	ldr	x0, [sp, #8]
   2b6c8:	cmp	x0, #0x0
   2b6cc:	cset	w0, eq  // eq = none
   2b6d0:	and	w0, w0, #0xff
   2b6d4:	and	x0, x0, #0xff
   2b6d8:	cmp	x0, #0x0
   2b6dc:	b.ne	2b7a8 <udev_util_encode_string@@LIBUDEV_183+0x1ff78>  // b.any
   2b6e0:	ldr	x0, [sp, #32]
   2b6e4:	lsl	x0, x0, #4
   2b6e8:	ldr	x1, [sp, #24]
   2b6ec:	add	x0, x1, x0
   2b6f0:	ldr	x0, [x0, #8]
   2b6f4:	str	x0, [sp, #40]
   2b6f8:	ldr	x0, [sp, #8]
   2b6fc:	str	x0, [sp, #48]
   2b700:	ldr	x0, [sp, #40]
   2b704:	ldr	x2, [sp, #48]
   2b708:	ldr	x1, [sp, #48]
   2b70c:	cmp	x2, x0
   2b710:	csel	x0, x1, x0, ls  // ls = plast
   2b714:	str	x0, [sp, #56]
   2b718:	ldr	x0, [sp, #32]
   2b71c:	lsl	x0, x0, #4
   2b720:	ldr	x1, [sp, #24]
   2b724:	add	x0, x1, x0
   2b728:	ldr	x2, [x0, #8]
   2b72c:	ldr	x0, [sp, #32]
   2b730:	lsl	x0, x0, #4
   2b734:	ldr	x1, [sp, #24]
   2b738:	add	x0, x1, x0
   2b73c:	ldr	x1, [sp, #56]
   2b740:	sub	x1, x2, x1
   2b744:	str	x1, [x0, #8]
   2b748:	ldr	x0, [sp, #32]
   2b74c:	lsl	x0, x0, #4
   2b750:	ldr	x1, [sp, #24]
   2b754:	add	x0, x1, x0
   2b758:	ldr	x2, [x0]
   2b75c:	ldr	x0, [sp, #32]
   2b760:	lsl	x0, x0, #4
   2b764:	ldr	x1, [sp, #24]
   2b768:	add	x0, x1, x0
   2b76c:	ldr	x1, [sp, #56]
   2b770:	add	x1, x2, x1
   2b774:	str	x1, [x0]
   2b778:	ldr	x1, [sp, #8]
   2b77c:	ldr	x0, [sp, #56]
   2b780:	sub	x0, x1, x0
   2b784:	str	x0, [sp, #8]
   2b788:	ldr	x0, [sp, #32]
   2b78c:	add	x0, x0, #0x1
   2b790:	str	x0, [sp, #32]
   2b794:	ldr	x1, [sp, #32]
   2b798:	ldr	x0, [sp, #16]
   2b79c:	cmp	x1, x0
   2b7a0:	b.cc	2b6c4 <udev_util_encode_string@@LIBUDEV_183+0x1fe94>  // b.lo, b.ul, b.last
   2b7a4:	b	2b7ac <udev_util_encode_string@@LIBUDEV_183+0x1ff7c>
   2b7a8:	nop
   2b7ac:	ldr	x0, [sp, #8]
   2b7b0:	add	sp, sp, #0x40
   2b7b4:	ret
   2b7b8:	sub	sp, sp, #0x10
   2b7bc:	str	x0, [sp, #8]
   2b7c0:	ldr	x0, [sp, #8]
   2b7c4:	cmp	x0, #0x0
   2b7c8:	b.eq	2b7dc <udev_util_encode_string@@LIBUDEV_183+0x1ffac>  // b.none
   2b7cc:	ldr	x0, [sp, #8]
   2b7d0:	ldrb	w0, [x0]
   2b7d4:	cmp	w0, #0x0
   2b7d8:	b.ne	2b7e4 <udev_util_encode_string@@LIBUDEV_183+0x1ffb4>  // b.any
   2b7dc:	mov	w0, #0x1                   	// #1
   2b7e0:	b	2b7e8 <udev_util_encode_string@@LIBUDEV_183+0x1ffb8>
   2b7e4:	mov	w0, #0x0                   	// #0
   2b7e8:	and	w0, w0, #0x1
   2b7ec:	and	w0, w0, #0xff
   2b7f0:	add	sp, sp, #0x10
   2b7f4:	ret
   2b7f8:	stp	x29, x30, [sp, #-48]!
   2b7fc:	mov	x29, sp
   2b800:	str	x0, [sp, #24]
   2b804:	str	x1, [sp, #16]
   2b808:	ldr	x0, [sp, #16]
   2b80c:	bl	5040 <strlen@plt>
   2b810:	str	x0, [sp, #40]
   2b814:	ldr	x2, [sp, #40]
   2b818:	ldr	x1, [sp, #16]
   2b81c:	ldr	x0, [sp, #24]
   2b820:	bl	5270 <strncmp@plt>
   2b824:	cmp	w0, #0x0
   2b828:	b.ne	2b83c <udev_util_encode_string@@LIBUDEV_183+0x2000c>  // b.any
   2b82c:	ldr	x1, [sp, #24]
   2b830:	ldr	x0, [sp, #40]
   2b834:	add	x0, x1, x0
   2b838:	b	2b840 <udev_util_encode_string@@LIBUDEV_183+0x20010>
   2b83c:	mov	x0, #0x0                   	// #0
   2b840:	ldp	x29, x30, [sp], #48
   2b844:	ret
   2b848:	stp	x29, x30, [sp, #-16]!
   2b84c:	mov	x29, sp
   2b850:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b854:	add	x0, x0, #0xcc
   2b858:	ldr	w0, [x0]
   2b85c:	bl	2b61c <udev_util_encode_string@@LIBUDEV_183+0x1fdec>
   2b860:	mov	w1, w0
   2b864:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b868:	add	x0, x0, #0xcc
   2b86c:	str	w1, [x0]
   2b870:	nop
   2b874:	ldp	x29, x30, [sp], #16
   2b878:	ret
   2b87c:	stp	x29, x30, [sp, #-32]!
   2b880:	mov	x29, sp
   2b884:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b888:	add	x0, x0, #0x11f
   2b88c:	ldrb	w0, [x0]
   2b890:	eor	w0, w0, #0x1
   2b894:	and	w0, w0, #0xff
   2b898:	cmp	w0, #0x0
   2b89c:	b.eq	2b8b8 <udev_util_encode_string@@LIBUDEV_183+0x20088>  // b.none
   2b8a0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b8a4:	add	x0, x0, #0xcc
   2b8a8:	mov	w1, #0x2                   	// #2
   2b8ac:	str	w1, [x0]
   2b8b0:	mov	w0, #0x0                   	// #0
   2b8b4:	b	2b914 <udev_util_encode_string@@LIBUDEV_183+0x200e4>
   2b8b8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b8bc:	add	x0, x0, #0xcc
   2b8c0:	ldr	w0, [x0]
   2b8c4:	cmp	w0, #0x2
   2b8c8:	b.gt	2b910 <udev_util_encode_string@@LIBUDEV_183+0x200e0>
   2b8cc:	mov	w1, #0x101                 	// #257
   2b8d0:	movk	w1, #0x8, lsl #16
   2b8d4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b8d8:	add	x0, x0, #0x6f0
   2b8dc:	bl	35138 <udev_util_encode_string@@LIBUDEV_183+0x29908>
   2b8e0:	str	w0, [sp, #28]
   2b8e4:	ldr	w0, [sp, #28]
   2b8e8:	cmp	w0, #0x0
   2b8ec:	b.ge	2b8f8 <udev_util_encode_string@@LIBUDEV_183+0x200c8>  // b.tcont
   2b8f0:	ldr	w0, [sp, #28]
   2b8f4:	b	2b914 <udev_util_encode_string@@LIBUDEV_183+0x200e4>
   2b8f8:	ldr	w0, [sp, #28]
   2b8fc:	bl	23244 <udev_util_encode_string@@LIBUDEV_183+0x17a14>
   2b900:	mov	w1, w0
   2b904:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b908:	add	x0, x0, #0xcc
   2b90c:	str	w1, [x0]
   2b910:	mov	w0, #0x0                   	// #0
   2b914:	ldp	x29, x30, [sp], #32
   2b918:	ret
   2b91c:	stp	x29, x30, [sp, #-16]!
   2b920:	mov	x29, sp
   2b924:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b928:	add	x0, x0, #0xd4
   2b92c:	ldr	w0, [x0]
   2b930:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2b934:	mov	w1, w0
   2b938:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b93c:	add	x0, x0, #0xd4
   2b940:	str	w1, [x0]
   2b944:	nop
   2b948:	ldp	x29, x30, [sp], #16
   2b94c:	ret
   2b950:	stp	x29, x30, [sp, #-16]!
   2b954:	mov	x29, sp
   2b958:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b95c:	add	x0, x0, #0xd4
   2b960:	ldr	w0, [x0]
   2b964:	cmp	w0, #0x0
   2b968:	b.lt	2b974 <udev_util_encode_string@@LIBUDEV_183+0x20144>  // b.tstop
   2b96c:	mov	w0, #0x0                   	// #0
   2b970:	b	2b9e0 <udev_util_encode_string@@LIBUDEV_183+0x201b0>
   2b974:	mov	w1, #0x101                 	// #257
   2b978:	movk	w1, #0x8, lsl #16
   2b97c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2b980:	add	x0, x0, #0x700
   2b984:	bl	56c0 <open64@plt>
   2b988:	mov	w1, w0
   2b98c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b990:	add	x0, x0, #0xd4
   2b994:	str	w1, [x0]
   2b998:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b99c:	add	x0, x0, #0xd4
   2b9a0:	ldr	w0, [x0]
   2b9a4:	cmp	w0, #0x0
   2b9a8:	b.ge	2b9bc <udev_util_encode_string@@LIBUDEV_183+0x2018c>  // b.tcont
   2b9ac:	bl	57d0 <__errno_location@plt>
   2b9b0:	ldr	w0, [x0]
   2b9b4:	neg	w0, w0
   2b9b8:	b	2b9e0 <udev_util_encode_string@@LIBUDEV_183+0x201b0>
   2b9bc:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b9c0:	add	x0, x0, #0xd4
   2b9c4:	ldr	w0, [x0]
   2b9c8:	bl	23244 <udev_util_encode_string@@LIBUDEV_183+0x17a14>
   2b9cc:	mov	w1, w0
   2b9d0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b9d4:	add	x0, x0, #0xd4
   2b9d8:	str	w1, [x0]
   2b9dc:	mov	w0, #0x0                   	// #0
   2b9e0:	ldp	x29, x30, [sp], #16
   2b9e4:	ret
   2b9e8:	stp	x29, x30, [sp, #-16]!
   2b9ec:	mov	x29, sp
   2b9f0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2b9f4:	add	x0, x0, #0xd0
   2b9f8:	ldr	w0, [x0]
   2b9fc:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2ba00:	mov	w1, w0
   2ba04:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2ba08:	add	x0, x0, #0xd0
   2ba0c:	str	w1, [x0]
   2ba10:	nop
   2ba14:	ldp	x29, x30, [sp], #16
   2ba18:	ret
   2ba1c:	stp	x29, x30, [sp, #-64]!
   2ba20:	mov	x29, sp
   2ba24:	str	w0, [sp, #28]
   2ba28:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ba2c:	ldr	x0, [x0, #4016]
   2ba30:	ldr	x1, [x0]
   2ba34:	str	x1, [sp, #56]
   2ba38:	mov	x1, #0x0                   	// #0
   2ba3c:	ldr	w0, [sp, #28]
   2ba40:	orr	w0, w0, #0x80000
   2ba44:	mov	w2, #0x0                   	// #0
   2ba48:	mov	w1, w0
   2ba4c:	mov	w0, #0x1                   	// #1
   2ba50:	bl	55e0 <socket@plt>
   2ba54:	str	w0, [sp, #36]
   2ba58:	ldr	w0, [sp, #36]
   2ba5c:	cmp	w0, #0x0
   2ba60:	b.ge	2ba74 <udev_util_encode_string@@LIBUDEV_183+0x20244>  // b.tcont
   2ba64:	bl	57d0 <__errno_location@plt>
   2ba68:	ldr	w0, [x0]
   2ba6c:	neg	w0, w0
   2ba70:	b	2bad8 <udev_util_encode_string@@LIBUDEV_183+0x202a8>
   2ba74:	ldr	w0, [sp, #36]
   2ba78:	bl	23244 <udev_util_encode_string@@LIBUDEV_183+0x17a14>
   2ba7c:	str	w0, [sp, #36]
   2ba80:	mov	x1, #0x800000              	// #8388608
   2ba84:	ldr	w0, [sp, #36]
   2ba88:	bl	3395c <udev_util_encode_string@@LIBUDEV_183+0x2812c>
   2ba8c:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   2ba90:	cmp	w0, #0x1
   2ba94:	b.ne	2baa8 <udev_util_encode_string@@LIBUDEV_183+0x20278>  // b.any
   2ba98:	add	x0, sp, #0x28
   2ba9c:	mov	x1, #0x2710                	// #10000
   2baa0:	bl	356c4 <udev_util_encode_string@@LIBUDEV_183+0x29e94>
   2baa4:	b	2bab8 <udev_util_encode_string@@LIBUDEV_183+0x20288>
   2baa8:	add	x0, sp, #0x28
   2baac:	mov	x1, #0x9680                	// #38528
   2bab0:	movk	x1, #0x98, lsl #16
   2bab4:	bl	356c4 <udev_util_encode_string@@LIBUDEV_183+0x29e94>
   2bab8:	add	x0, sp, #0x28
   2babc:	mov	w4, #0x10                  	// #16
   2bac0:	mov	x3, x0
   2bac4:	mov	w2, #0x15                  	// #21
   2bac8:	mov	w1, #0x1                   	// #1
   2bacc:	ldr	w0, [sp, #36]
   2bad0:	bl	5230 <setsockopt@plt>
   2bad4:	ldr	w0, [sp, #36]
   2bad8:	mov	w1, w0
   2badc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2bae0:	ldr	x0, [x0, #4016]
   2bae4:	ldr	x2, [sp, #56]
   2bae8:	ldr	x0, [x0]
   2baec:	eor	x0, x2, x0
   2baf0:	cmp	x0, #0x0
   2baf4:	b.eq	2bafc <udev_util_encode_string@@LIBUDEV_183+0x202cc>  // b.none
   2baf8:	bl	5390 <__stack_chk_fail@plt>
   2bafc:	mov	w0, w1
   2bb00:	ldp	x29, x30, [sp], #64
   2bb04:	ret
   2bb08:	stp	x29, x30, [sp, #-64]!
   2bb0c:	mov	x29, sp
   2bb10:	stp	x19, x20, [sp, #16]
   2bb14:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bb18:	add	x0, x0, #0xd0
   2bb1c:	ldr	w0, [x0]
   2bb20:	cmp	w0, #0x0
   2bb24:	b.lt	2bb30 <udev_util_encode_string@@LIBUDEV_183+0x20300>  // b.tstop
   2bb28:	mov	w0, #0x0                   	// #0
   2bb2c:	b	2bd84 <udev_util_encode_string@@LIBUDEV_183+0x20554>
   2bb30:	mov	w0, #0x2                   	// #2
   2bb34:	bl	2ba1c <udev_util_encode_string@@LIBUDEV_183+0x201ec>
   2bb38:	mov	w1, w0
   2bb3c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bb40:	add	x0, x0, #0xd0
   2bb44:	str	w1, [x0]
   2bb48:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bb4c:	add	x0, x0, #0xd0
   2bb50:	ldr	w0, [x0]
   2bb54:	cmp	w0, #0x0
   2bb58:	b.ge	2bb70 <udev_util_encode_string@@LIBUDEV_183+0x20340>  // b.tcont
   2bb5c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bb60:	add	x0, x0, #0xd0
   2bb64:	ldr	w0, [x0]
   2bb68:	str	w0, [sp, #44]
   2bb6c:	b	2bd7c <udev_util_encode_string@@LIBUDEV_183+0x2054c>
   2bb70:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bb74:	add	x0, x0, #0xd0
   2bb78:	ldr	w19, [x0]
   2bb7c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bb80:	add	x20, x0, #0xe78
   2bb84:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bb88:	add	x0, x0, #0xe78
   2bb8c:	str	x0, [sp, #48]
   2bb90:	ldr	x0, [sp, #48]
   2bb94:	ldrh	w0, [x0]
   2bb98:	cmp	w0, #0x1
   2bb9c:	cset	w0, ne  // ne = any
   2bba0:	and	w0, w0, #0xff
   2bba4:	and	x0, x0, #0xff
   2bba8:	cmp	x0, #0x0
   2bbac:	b.eq	2bbd8 <udev_util_encode_string@@LIBUDEV_183+0x203a8>  // b.none
   2bbb0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bbb4:	add	x1, x0, #0x713
   2bbb8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bbbc:	add	x4, x0, #0xef8
   2bbc0:	mov	w3, #0x9f                  	// #159
   2bbc4:	mov	x2, x1
   2bbc8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bbcc:	add	x1, x0, #0x728
   2bbd0:	mov	w0, #0x0                   	// #0
   2bbd4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2bbd8:	ldr	x0, [sp, #48]
   2bbdc:	ldrb	w0, [x0, #2]
   2bbe0:	cmp	w0, #0x0
   2bbe4:	b.ne	2bc04 <udev_util_encode_string@@LIBUDEV_183+0x203d4>  // b.any
   2bbe8:	ldr	x0, [sp, #48]
   2bbec:	add	x0, x0, #0x2
   2bbf0:	add	x0, x0, #0x1
   2bbf4:	mov	x1, #0x6b                  	// #107
   2bbf8:	bl	5080 <strnlen@plt>
   2bbfc:	add	x0, x0, #0x3
   2bc00:	b	2bc18 <udev_util_encode_string@@LIBUDEV_183+0x203e8>
   2bc04:	ldr	x0, [sp, #48]
   2bc08:	add	x0, x0, #0x2
   2bc0c:	mov	x1, #0x6c                  	// #108
   2bc10:	bl	5080 <strnlen@plt>
   2bc14:	add	x0, x0, #0x3
   2bc18:	mov	w2, w0
   2bc1c:	mov	x1, x20
   2bc20:	mov	w0, w19
   2bc24:	bl	5540 <connect@plt>
   2bc28:	cmp	w0, #0x0
   2bc2c:	b.ge	2bd68 <udev_util_encode_string@@LIBUDEV_183+0x20538>  // b.tcont
   2bc30:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bc34:	add	x0, x0, #0xd0
   2bc38:	ldr	w0, [x0]
   2bc3c:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2bc40:	mov	w0, #0x1                   	// #1
   2bc44:	bl	2ba1c <udev_util_encode_string@@LIBUDEV_183+0x201ec>
   2bc48:	mov	w1, w0
   2bc4c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bc50:	add	x0, x0, #0xd0
   2bc54:	str	w1, [x0]
   2bc58:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bc5c:	add	x0, x0, #0xd0
   2bc60:	ldr	w0, [x0]
   2bc64:	cmp	w0, #0x0
   2bc68:	b.ge	2bc80 <udev_util_encode_string@@LIBUDEV_183+0x20450>  // b.tcont
   2bc6c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bc70:	add	x0, x0, #0xd0
   2bc74:	ldr	w0, [x0]
   2bc78:	str	w0, [sp, #44]
   2bc7c:	b	2bd7c <udev_util_encode_string@@LIBUDEV_183+0x2054c>
   2bc80:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bc84:	add	x0, x0, #0xd0
   2bc88:	ldr	w19, [x0]
   2bc8c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bc90:	add	x20, x0, #0xe78
   2bc94:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bc98:	add	x0, x0, #0xe78
   2bc9c:	str	x0, [sp, #56]
   2bca0:	ldr	x0, [sp, #56]
   2bca4:	ldrh	w0, [x0]
   2bca8:	cmp	w0, #0x1
   2bcac:	cset	w0, ne  // ne = any
   2bcb0:	and	w0, w0, #0xff
   2bcb4:	and	x0, x0, #0xff
   2bcb8:	cmp	x0, #0x0
   2bcbc:	b.eq	2bce8 <udev_util_encode_string@@LIBUDEV_183+0x204b8>  // b.none
   2bcc0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bcc4:	add	x1, x0, #0x713
   2bcc8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bccc:	add	x4, x0, #0xef8
   2bcd0:	mov	w3, #0xab                  	// #171
   2bcd4:	mov	x2, x1
   2bcd8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2bcdc:	add	x1, x0, #0x728
   2bce0:	mov	w0, #0x0                   	// #0
   2bce4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2bce8:	ldr	x0, [sp, #56]
   2bcec:	ldrb	w0, [x0, #2]
   2bcf0:	cmp	w0, #0x0
   2bcf4:	b.ne	2bd14 <udev_util_encode_string@@LIBUDEV_183+0x204e4>  // b.any
   2bcf8:	ldr	x0, [sp, #56]
   2bcfc:	add	x0, x0, #0x2
   2bd00:	add	x0, x0, #0x1
   2bd04:	mov	x1, #0x6b                  	// #107
   2bd08:	bl	5080 <strnlen@plt>
   2bd0c:	add	x0, x0, #0x3
   2bd10:	b	2bd28 <udev_util_encode_string@@LIBUDEV_183+0x204f8>
   2bd14:	ldr	x0, [sp, #56]
   2bd18:	add	x0, x0, #0x2
   2bd1c:	mov	x1, #0x6c                  	// #108
   2bd20:	bl	5080 <strnlen@plt>
   2bd24:	add	x0, x0, #0x3
   2bd28:	mov	w2, w0
   2bd2c:	mov	x1, x20
   2bd30:	mov	w0, w19
   2bd34:	bl	5540 <connect@plt>
   2bd38:	cmp	w0, #0x0
   2bd3c:	b.ge	2bd54 <udev_util_encode_string@@LIBUDEV_183+0x20524>  // b.tcont
   2bd40:	bl	57d0 <__errno_location@plt>
   2bd44:	ldr	w0, [x0]
   2bd48:	neg	w0, w0
   2bd4c:	str	w0, [sp, #44]
   2bd50:	b	2bd7c <udev_util_encode_string@@LIBUDEV_183+0x2054c>
   2bd54:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bd58:	add	x0, x0, #0x11c
   2bd5c:	mov	w1, #0x1                   	// #1
   2bd60:	strb	w1, [x0]
   2bd64:	b	2bd74 <udev_util_encode_string@@LIBUDEV_183+0x20544>
   2bd68:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bd6c:	add	x0, x0, #0x11c
   2bd70:	strb	wzr, [x0]
   2bd74:	mov	w0, #0x0                   	// #0
   2bd78:	b	2bd84 <udev_util_encode_string@@LIBUDEV_183+0x20554>
   2bd7c:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2bd80:	ldr	w0, [sp, #44]
   2bd84:	ldp	x19, x20, [sp, #16]
   2bd88:	ldp	x29, x30, [sp], #64
   2bd8c:	ret
   2bd90:	stp	x29, x30, [sp, #-16]!
   2bd94:	mov	x29, sp
   2bd98:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bd9c:	add	x0, x0, #0xd8
   2bda0:	ldr	w0, [x0]
   2bda4:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2bda8:	mov	w1, w0
   2bdac:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bdb0:	add	x0, x0, #0xd8
   2bdb4:	str	w1, [x0]
   2bdb8:	nop
   2bdbc:	ldp	x29, x30, [sp], #16
   2bdc0:	ret
   2bdc4:	stp	x29, x30, [sp, #-48]!
   2bdc8:	mov	x29, sp
   2bdcc:	stp	x19, x20, [sp, #16]
   2bdd0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bdd4:	add	x0, x0, #0xd8
   2bdd8:	ldr	w0, [x0]
   2bddc:	cmp	w0, #0x0
   2bde0:	b.lt	2bdec <udev_util_encode_string@@LIBUDEV_183+0x205bc>  // b.tstop
   2bde4:	mov	w0, #0x0                   	// #0
   2bde8:	b	2bf10 <udev_util_encode_string@@LIBUDEV_183+0x206e0>
   2bdec:	mov	w0, #0x2                   	// #2
   2bdf0:	bl	2ba1c <udev_util_encode_string@@LIBUDEV_183+0x201ec>
   2bdf4:	mov	w1, w0
   2bdf8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bdfc:	add	x0, x0, #0xd8
   2be00:	str	w1, [x0]
   2be04:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2be08:	add	x0, x0, #0xd8
   2be0c:	ldr	w0, [x0]
   2be10:	cmp	w0, #0x0
   2be14:	b.ge	2be2c <udev_util_encode_string@@LIBUDEV_183+0x205fc>  // b.tcont
   2be18:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2be1c:	add	x0, x0, #0xd8
   2be20:	ldr	w0, [x0]
   2be24:	str	w0, [sp, #36]
   2be28:	b	2bf08 <udev_util_encode_string@@LIBUDEV_183+0x206d8>
   2be2c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2be30:	add	x0, x0, #0xd8
   2be34:	ldr	w19, [x0]
   2be38:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2be3c:	add	x20, x0, #0xf08
   2be40:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2be44:	add	x0, x0, #0xf08
   2be48:	str	x0, [sp, #40]
   2be4c:	ldr	x0, [sp, #40]
   2be50:	ldrh	w0, [x0]
   2be54:	cmp	w0, #0x1
   2be58:	cset	w0, ne  // ne = any
   2be5c:	and	w0, w0, #0xff
   2be60:	and	x0, x0, #0xff
   2be64:	cmp	x0, #0x0
   2be68:	b.eq	2be94 <udev_util_encode_string@@LIBUDEV_183+0x20664>  // b.none
   2be6c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2be70:	add	x1, x0, #0x713
   2be74:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2be78:	add	x4, x0, #0xf88
   2be7c:	mov	w3, #0xd1                  	// #209
   2be80:	mov	x2, x1
   2be84:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2be88:	add	x1, x0, #0x728
   2be8c:	mov	w0, #0x0                   	// #0
   2be90:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2be94:	ldr	x0, [sp, #40]
   2be98:	ldrb	w0, [x0, #2]
   2be9c:	cmp	w0, #0x0
   2bea0:	b.ne	2bec0 <udev_util_encode_string@@LIBUDEV_183+0x20690>  // b.any
   2bea4:	ldr	x0, [sp, #40]
   2bea8:	add	x0, x0, #0x2
   2beac:	add	x0, x0, #0x1
   2beb0:	mov	x1, #0x6b                  	// #107
   2beb4:	bl	5080 <strnlen@plt>
   2beb8:	add	x0, x0, #0x3
   2bebc:	b	2bed4 <udev_util_encode_string@@LIBUDEV_183+0x206a4>
   2bec0:	ldr	x0, [sp, #40]
   2bec4:	add	x0, x0, #0x2
   2bec8:	mov	x1, #0x6c                  	// #108
   2becc:	bl	5080 <strnlen@plt>
   2bed0:	add	x0, x0, #0x3
   2bed4:	mov	w2, w0
   2bed8:	mov	x1, x20
   2bedc:	mov	w0, w19
   2bee0:	bl	5540 <connect@plt>
   2bee4:	cmp	w0, #0x0
   2bee8:	b.ge	2bf00 <udev_util_encode_string@@LIBUDEV_183+0x206d0>  // b.tcont
   2beec:	bl	57d0 <__errno_location@plt>
   2bef0:	ldr	w0, [x0]
   2bef4:	neg	w0, w0
   2bef8:	str	w0, [sp, #36]
   2befc:	b	2bf08 <udev_util_encode_string@@LIBUDEV_183+0x206d8>
   2bf00:	mov	w0, #0x0                   	// #0
   2bf04:	b	2bf10 <udev_util_encode_string@@LIBUDEV_183+0x206e0>
   2bf08:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2bf0c:	ldr	w0, [sp, #36]
   2bf10:	ldp	x19, x20, [sp, #16]
   2bf14:	ldp	x29, x30, [sp], #48
   2bf18:	ret
   2bf1c:	stp	x29, x30, [sp, #-32]!
   2bf20:	mov	x29, sp
   2bf24:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bf28:	add	x0, x0, #0x118
   2bf2c:	ldr	w0, [x0]
   2bf30:	cmp	w0, #0x8
   2bf34:	b.ne	2bf4c <udev_util_encode_string@@LIBUDEV_183+0x2071c>  // b.any
   2bf38:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2bf3c:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2bf40:	bl	2b848 <udev_util_encode_string@@LIBUDEV_183+0x20018>
   2bf44:	mov	w0, #0x0                   	// #0
   2bf48:	b	2c108 <udev_util_encode_string@@LIBUDEV_183+0x208d8>
   2bf4c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bf50:	add	x0, x0, #0x118
   2bf54:	ldr	w0, [x0]
   2bf58:	cmp	w0, #0x7
   2bf5c:	b.ne	2bf7c <udev_util_encode_string@@LIBUDEV_183+0x2074c>  // b.any
   2bf60:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   2bf64:	cmp	w0, #0x1
   2bf68:	b.eq	2bf7c <udev_util_encode_string@@LIBUDEV_183+0x2074c>  // b.none
   2bf6c:	mov	w0, #0x2                   	// #2
   2bf70:	bl	56a0 <isatty@plt>
   2bf74:	cmp	w0, #0x0
   2bf78:	b.gt	2c0fc <udev_util_encode_string@@LIBUDEV_183+0x208cc>
   2bf7c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bf80:	add	x0, x0, #0x121
   2bf84:	ldrb	w0, [x0]
   2bf88:	eor	w0, w0, #0x1
   2bf8c:	and	w0, w0, #0xff
   2bf90:	cmp	w0, #0x0
   2bf94:	b.eq	2c000 <udev_util_encode_string@@LIBUDEV_183+0x207d0>  // b.none
   2bf98:	strb	wzr, [sp, #25]
   2bf9c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2bfa0:	add	x0, x0, #0x118
   2bfa4:	ldr	w0, [x0]
   2bfa8:	cmp	w0, #0x4
   2bfac:	b.gt	2bfbc <udev_util_encode_string@@LIBUDEV_183+0x2078c>
   2bfb0:	cmp	w0, #0x3
   2bfb4:	b.ge	2bfc4 <udev_util_encode_string@@LIBUDEV_183+0x20794>  // b.tcont
   2bfb8:	b	2bfcc <udev_util_encode_string@@LIBUDEV_183+0x2079c>
   2bfbc:	cmp	w0, #0x7
   2bfc0:	b.ne	2bfcc <udev_util_encode_string@@LIBUDEV_183+0x2079c>  // b.any
   2bfc4:	mov	w0, #0x1                   	// #1
   2bfc8:	strb	w0, [sp, #25]
   2bfcc:	nop
   2bfd0:	ldrb	w0, [sp, #25]
   2bfd4:	cmp	w0, #0x0
   2bfd8:	b.eq	2c000 <udev_util_encode_string@@LIBUDEV_183+0x207d0>  // b.none
   2bfdc:	bl	2bdc4 <udev_util_encode_string@@LIBUDEV_183+0x20594>
   2bfe0:	str	w0, [sp, #28]
   2bfe4:	ldr	w0, [sp, #28]
   2bfe8:	cmp	w0, #0x0
   2bfec:	b.lt	2c000 <udev_util_encode_string@@LIBUDEV_183+0x207d0>  // b.tstop
   2bff0:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2bff4:	bl	2b848 <udev_util_encode_string@@LIBUDEV_183+0x20018>
   2bff8:	ldr	w0, [sp, #28]
   2bffc:	b	2c108 <udev_util_encode_string@@LIBUDEV_183+0x208d8>
   2c000:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c004:	add	x0, x0, #0x121
   2c008:	ldrb	w0, [x0]
   2c00c:	eor	w0, w0, #0x1
   2c010:	and	w0, w0, #0xff
   2c014:	cmp	w0, #0x0
   2c018:	b.eq	2c074 <udev_util_encode_string@@LIBUDEV_183+0x20844>  // b.none
   2c01c:	strb	wzr, [sp, #26]
   2c020:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c024:	add	x0, x0, #0x118
   2c028:	ldr	w0, [x0]
   2c02c:	sub	w0, w0, #0x5
   2c030:	cmp	w0, #0x1
   2c034:	b.hi	2c040 <udev_util_encode_string@@LIBUDEV_183+0x20810>  // b.pmore
   2c038:	mov	w0, #0x1                   	// #1
   2c03c:	strb	w0, [sp, #26]
   2c040:	nop
   2c044:	ldrb	w0, [sp, #26]
   2c048:	cmp	w0, #0x0
   2c04c:	b.eq	2c074 <udev_util_encode_string@@LIBUDEV_183+0x20844>  // b.none
   2c050:	bl	2bb08 <udev_util_encode_string@@LIBUDEV_183+0x202d8>
   2c054:	str	w0, [sp, #28]
   2c058:	ldr	w0, [sp, #28]
   2c05c:	cmp	w0, #0x0
   2c060:	b.lt	2c074 <udev_util_encode_string@@LIBUDEV_183+0x20844>  // b.tstop
   2c064:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2c068:	bl	2b848 <udev_util_encode_string@@LIBUDEV_183+0x20018>
   2c06c:	ldr	w0, [sp, #28]
   2c070:	b	2c108 <udev_util_encode_string@@LIBUDEV_183+0x208d8>
   2c074:	strb	wzr, [sp, #27]
   2c078:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c07c:	add	x0, x0, #0x118
   2c080:	ldr	w0, [x0]
   2c084:	cmp	w0, #0x7
   2c088:	cset	w1, hi  // hi = pmore
   2c08c:	and	w1, w1, #0xff
   2c090:	cmp	w1, #0x0
   2c094:	b.ne	2c0c4 <udev_util_encode_string@@LIBUDEV_183+0x20894>  // b.any
   2c098:	mov	x1, #0x1                   	// #1
   2c09c:	lsl	x1, x1, x0
   2c0a0:	mov	x0, #0xd4                  	// #212
   2c0a4:	and	x0, x1, x0
   2c0a8:	cmp	x0, #0x0
   2c0ac:	cset	w0, ne  // ne = any
   2c0b0:	and	w0, w0, #0xff
   2c0b4:	cmp	w0, #0x0
   2c0b8:	b.eq	2c0c4 <udev_util_encode_string@@LIBUDEV_183+0x20894>  // b.none
   2c0bc:	mov	w0, #0x1                   	// #1
   2c0c0:	strb	w0, [sp, #27]
   2c0c4:	nop
   2c0c8:	ldrb	w0, [sp, #27]
   2c0cc:	cmp	w0, #0x0
   2c0d0:	b.eq	2c0fc <udev_util_encode_string@@LIBUDEV_183+0x208cc>  // b.none
   2c0d4:	bl	2b950 <udev_util_encode_string@@LIBUDEV_183+0x20120>
   2c0d8:	str	w0, [sp, #28]
   2c0dc:	ldr	w0, [sp, #28]
   2c0e0:	cmp	w0, #0x0
   2c0e4:	b.lt	2c0fc <udev_util_encode_string@@LIBUDEV_183+0x208cc>  // b.tstop
   2c0e8:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2c0ec:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2c0f0:	bl	2b848 <udev_util_encode_string@@LIBUDEV_183+0x20018>
   2c0f4:	ldr	w0, [sp, #28]
   2c0f8:	b	2c108 <udev_util_encode_string@@LIBUDEV_183+0x208d8>
   2c0fc:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2c100:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2c104:	bl	2b87c <udev_util_encode_string@@LIBUDEV_183+0x2004c>
   2c108:	ldp	x29, x30, [sp], #32
   2c10c:	ret
   2c110:	stp	x29, x30, [sp, #-16]!
   2c114:	mov	x29, sp
   2c118:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2c11c:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2c120:	bl	2b91c <udev_util_encode_string@@LIBUDEV_183+0x200ec>
   2c124:	bl	2b848 <udev_util_encode_string@@LIBUDEV_183+0x20018>
   2c128:	nop
   2c12c:	ldp	x29, x30, [sp], #16
   2c130:	ret
   2c134:	stp	x29, x30, [sp, #-32]!
   2c138:	mov	x29, sp
   2c13c:	str	w0, [sp, #28]
   2c140:	str	w1, [sp, #24]
   2c144:	ldr	w0, [sp, #24]
   2c148:	and	w0, w0, #0x7
   2c14c:	ldr	w1, [sp, #24]
   2c150:	cmp	w1, w0
   2c154:	cset	w0, ne  // ne = any
   2c158:	and	w0, w0, #0xff
   2c15c:	and	x0, x0, #0xff
   2c160:	cmp	x0, #0x0
   2c164:	b.eq	2c190 <udev_util_encode_string@@LIBUDEV_183+0x20960>  // b.none
   2c168:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c16c:	add	x1, x0, #0x713
   2c170:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c174:	add	x4, x0, #0xfa0
   2c178:	mov	w3, #0x13d                 	// #317
   2c17c:	mov	x2, x1
   2c180:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c184:	add	x1, x0, #0x778
   2c188:	mov	w0, #0x0                   	// #0
   2c18c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2c190:	ldr	w0, [sp, #28]
   2c194:	cmp	w0, #0x1
   2c198:	cset	w0, hi  // hi = pmore
   2c19c:	and	w0, w0, #0xff
   2c1a0:	and	x0, x0, #0xff
   2c1a4:	cmp	x0, #0x0
   2c1a8:	b.eq	2c1d4 <udev_util_encode_string@@LIBUDEV_183+0x209a4>  // b.none
   2c1ac:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c1b0:	add	x1, x0, #0x713
   2c1b4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c1b8:	add	x4, x0, #0xfa0
   2c1bc:	mov	w3, #0x13e                 	// #318
   2c1c0:	mov	x2, x1
   2c1c4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c1c8:	add	x1, x0, #0x798
   2c1cc:	mov	w0, #0x0                   	// #0
   2c1d0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2c1d4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c1d8:	add	x0, x0, #0xc0
   2c1dc:	ldr	w1, [sp, #28]
   2c1e0:	ldr	w2, [sp, #24]
   2c1e4:	str	w2, [x0, x1, lsl #2]
   2c1e8:	nop
   2c1ec:	ldp	x29, x30, [sp], #32
   2c1f0:	ret
   2c1f4:	stp	x29, x30, [sp, #-496]!
   2c1f8:	mov	x29, sp
   2c1fc:	stp	x19, x20, [sp, #16]
   2c200:	str	w0, [sp, #76]
   2c204:	str	w1, [sp, #72]
   2c208:	str	x2, [sp, #64]
   2c20c:	str	w3, [sp, #60]
   2c210:	str	x4, [sp, #48]
   2c214:	str	x5, [sp, #40]
   2c218:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c21c:	ldr	x0, [x0, #4016]
   2c220:	ldr	x1, [x0]
   2c224:	str	x1, [sp, #488]
   2c228:	mov	x1, #0x0                   	// #0
   2c22c:	stp	xzr, xzr, [sp, #120]
   2c230:	stp	xzr, xzr, [sp, #136]
   2c234:	stp	xzr, xzr, [sp, #152]
   2c238:	stp	xzr, xzr, [sp, #168]
   2c23c:	stp	xzr, xzr, [sp, #184]
   2c240:	stp	xzr, xzr, [sp, #200]
   2c244:	str	xzr, [sp, #80]
   2c248:	str	xzr, [sp, #88]
   2c24c:	str	xzr, [sp, #96]
   2c250:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c254:	add	x0, x0, #0xcc
   2c258:	ldr	w0, [x0]
   2c25c:	cmp	w0, #0x0
   2c260:	b.ge	2c26c <udev_util_encode_string@@LIBUDEV_183+0x20a3c>  // b.tcont
   2c264:	mov	w0, #0x0                   	// #0
   2c268:	b	2c580 <udev_util_encode_string@@LIBUDEV_183+0x20d50>
   2c26c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c270:	add	x0, x0, #0x118
   2c274:	ldr	w0, [x0]
   2c278:	cmp	w0, #0x1
   2c27c:	b.ne	2c310 <udev_util_encode_string@@LIBUDEV_183+0x20ae0>  // b.any
   2c280:	add	x4, sp, #0xd8
   2c284:	ldr	w3, [sp, #76]
   2c288:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c28c:	add	x2, x0, #0x7c0
   2c290:	mov	x1, #0xf                   	// #15
   2c294:	mov	x0, x4
   2c298:	bl	5190 <snprintf@plt>
   2c29c:	cmp	w0, #0xe
   2c2a0:	cset	w0, hi  // hi = pmore
   2c2a4:	and	w0, w0, #0xff
   2c2a8:	and	x0, x0, #0xff
   2c2ac:	cmp	x0, #0x0
   2c2b0:	b.eq	2c2dc <udev_util_encode_string@@LIBUDEV_183+0x20aac>  // b.none
   2c2b4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c2b8:	add	x1, x0, #0x713
   2c2bc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c2c0:	add	x4, x0, #0xfb8
   2c2c4:	mov	w3, #0x158                 	// #344
   2c2c8:	mov	x2, x1
   2c2cc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c2d0:	add	x1, x0, #0x7c8
   2c2d4:	mov	w0, #0x0                   	// #0
   2c2d8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2c2dc:	ldr	x19, [sp, #96]
   2c2e0:	add	x0, x19, #0x1
   2c2e4:	str	x0, [sp, #96]
   2c2e8:	add	x0, sp, #0xd8
   2c2ec:	bl	5040 <strlen@plt>
   2c2f0:	mov	x3, x0
   2c2f4:	lsl	x0, x19, #4
   2c2f8:	add	x1, sp, #0x78
   2c2fc:	add	x2, sp, #0xd8
   2c300:	str	x2, [x1, x0]
   2c304:	lsl	x0, x19, #4
   2c308:	add	x1, sp, #0x80
   2c30c:	str	x3, [x1, x0]
   2c310:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c314:	add	x0, x0, #0x11d
   2c318:	ldrb	w0, [x0]
   2c31c:	cmp	w0, #0x0
   2c320:	b.eq	2c33c <udev_util_encode_string@@LIBUDEV_183+0x20b0c>  // b.none
   2c324:	ldr	w0, [sp, #76]
   2c328:	and	w0, w0, #0x7
   2c32c:	add	x2, sp, #0x58
   2c330:	add	x1, sp, #0x50
   2c334:	mov	x3, #0x0                   	// #0
   2c338:	bl	35208 <udev_util_encode_string@@LIBUDEV_183+0x299d8>
   2c33c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c340:	add	x0, x0, #0x11e
   2c344:	ldrb	w0, [x0]
   2c348:	cmp	w0, #0x0
   2c34c:	b.eq	2c3f0 <udev_util_encode_string@@LIBUDEV_183+0x20bc0>  // b.none
   2c350:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c354:	add	x0, x0, #0x7f0
   2c358:	str	x0, [sp, #104]
   2c35c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c360:	add	x0, x0, #0x7f0
   2c364:	str	x0, [sp, #112]
   2c368:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c36c:	add	x0, x0, #0x11d
   2c370:	ldrb	w0, [x0]
   2c374:	cmp	w0, #0x0
   2c378:	b.eq	2c394 <udev_util_encode_string@@LIBUDEV_183+0x20b64>  // b.none
   2c37c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c380:	add	x0, x0, #0x7f8
   2c384:	str	x0, [sp, #104]
   2c388:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c38c:	add	x0, x0, #0x808
   2c390:	str	x0, [sp, #112]
   2c394:	add	x7, sp, #0xe8
   2c398:	ldr	x6, [sp, #112]
   2c39c:	ldr	w5, [sp, #60]
   2c3a0:	ldr	x4, [sp, #64]
   2c3a4:	ldr	x3, [sp, #104]
   2c3a8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c3ac:	add	x2, x0, #0x810
   2c3b0:	mov	x1, #0x100                 	// #256
   2c3b4:	mov	x0, x7
   2c3b8:	bl	5190 <snprintf@plt>
   2c3bc:	ldr	x19, [sp, #96]
   2c3c0:	add	x0, x19, #0x1
   2c3c4:	str	x0, [sp, #96]
   2c3c8:	add	x0, sp, #0xe8
   2c3cc:	bl	5040 <strlen@plt>
   2c3d0:	mov	x3, x0
   2c3d4:	lsl	x0, x19, #4
   2c3d8:	add	x1, sp, #0x78
   2c3dc:	add	x2, sp, #0xe8
   2c3e0:	str	x2, [x1, x0]
   2c3e4:	lsl	x0, x19, #4
   2c3e8:	add	x1, sp, #0x80
   2c3ec:	str	x3, [x1, x0]
   2c3f0:	ldr	x0, [sp, #80]
   2c3f4:	cmp	x0, #0x0
   2c3f8:	b.eq	2c430 <udev_util_encode_string@@LIBUDEV_183+0x20c00>  // b.none
   2c3fc:	ldr	x19, [sp, #96]
   2c400:	add	x0, x19, #0x1
   2c404:	str	x0, [sp, #96]
   2c408:	ldr	x20, [sp, #80]
   2c40c:	ldr	x0, [sp, #80]
   2c410:	bl	5040 <strlen@plt>
   2c414:	mov	x2, x0
   2c418:	lsl	x0, x19, #4
   2c41c:	add	x1, sp, #0x78
   2c420:	str	x20, [x1, x0]
   2c424:	lsl	x0, x19, #4
   2c428:	add	x1, sp, #0x80
   2c42c:	str	x2, [x1, x0]
   2c430:	ldr	x19, [sp, #96]
   2c434:	add	x0, x19, #0x1
   2c438:	str	x0, [sp, #96]
   2c43c:	ldr	x0, [sp, #40]
   2c440:	bl	5040 <strlen@plt>
   2c444:	mov	x3, x0
   2c448:	lsl	x0, x19, #4
   2c44c:	add	x1, sp, #0x78
   2c450:	ldr	x2, [sp, #40]
   2c454:	str	x2, [x1, x0]
   2c458:	lsl	x0, x19, #4
   2c45c:	add	x1, sp, #0x80
   2c460:	str	x3, [x1, x0]
   2c464:	ldr	x0, [sp, #88]
   2c468:	cmp	x0, #0x0
   2c46c:	b.eq	2c4a4 <udev_util_encode_string@@LIBUDEV_183+0x20c74>  // b.none
   2c470:	ldr	x19, [sp, #96]
   2c474:	add	x0, x19, #0x1
   2c478:	str	x0, [sp, #96]
   2c47c:	ldr	x20, [sp, #88]
   2c480:	ldr	x0, [sp, #88]
   2c484:	bl	5040 <strlen@plt>
   2c488:	mov	x2, x0
   2c48c:	lsl	x0, x19, #4
   2c490:	add	x1, sp, #0x78
   2c494:	str	x20, [x1, x0]
   2c498:	lsl	x0, x19, #4
   2c49c:	add	x1, sp, #0x80
   2c4a0:	str	x2, [x1, x0]
   2c4a4:	ldr	x0, [sp, #96]
   2c4a8:	add	x1, x0, #0x1
   2c4ac:	str	x1, [sp, #96]
   2c4b0:	lsl	x1, x0, #4
   2c4b4:	add	x2, sp, #0x78
   2c4b8:	adrp	x3, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c4bc:	add	x3, x3, #0x820
   2c4c0:	str	x3, [x2, x1]
   2c4c4:	lsl	x0, x0, #4
   2c4c8:	add	x1, sp, #0x80
   2c4cc:	mov	x2, #0x1                   	// #1
   2c4d0:	str	x2, [x1, x0]
   2c4d4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c4d8:	add	x0, x0, #0xcc
   2c4dc:	ldr	w0, [x0]
   2c4e0:	ldr	x1, [sp, #96]
   2c4e4:	mov	w2, w1
   2c4e8:	add	x1, sp, #0x78
   2c4ec:	bl	5740 <writev@plt>
   2c4f0:	cmp	x0, #0x0
   2c4f4:	b.ge	2c57c <udev_util_encode_string@@LIBUDEV_183+0x20d4c>  // b.tcont
   2c4f8:	bl	57d0 <__errno_location@plt>
   2c4fc:	ldr	w0, [x0]
   2c500:	cmp	w0, #0x5
   2c504:	b.ne	2c56c <udev_util_encode_string@@LIBUDEV_183+0x20d3c>  // b.any
   2c508:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   2c50c:	cmp	w0, #0x1
   2c510:	b.ne	2c56c <udev_util_encode_string@@LIBUDEV_183+0x20d3c>  // b.any
   2c514:	bl	2b848 <udev_util_encode_string@@LIBUDEV_183+0x20018>
   2c518:	bl	2b87c <udev_util_encode_string@@LIBUDEV_183+0x2004c>
   2c51c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c520:	add	x0, x0, #0xcc
   2c524:	ldr	w0, [x0]
   2c528:	cmp	w0, #0x0
   2c52c:	b.ge	2c538 <udev_util_encode_string@@LIBUDEV_183+0x20d08>  // b.tcont
   2c530:	mov	w0, #0x0                   	// #0
   2c534:	b	2c580 <udev_util_encode_string@@LIBUDEV_183+0x20d50>
   2c538:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c53c:	add	x0, x0, #0xcc
   2c540:	ldr	w0, [x0]
   2c544:	ldr	x1, [sp, #96]
   2c548:	mov	w2, w1
   2c54c:	add	x1, sp, #0x78
   2c550:	bl	5740 <writev@plt>
   2c554:	cmp	x0, #0x0
   2c558:	b.ge	2c57c <udev_util_encode_string@@LIBUDEV_183+0x20d4c>  // b.tcont
   2c55c:	bl	57d0 <__errno_location@plt>
   2c560:	ldr	w0, [x0]
   2c564:	neg	w0, w0
   2c568:	b	2c580 <udev_util_encode_string@@LIBUDEV_183+0x20d50>
   2c56c:	bl	57d0 <__errno_location@plt>
   2c570:	ldr	w0, [x0]
   2c574:	neg	w0, w0
   2c578:	b	2c580 <udev_util_encode_string@@LIBUDEV_183+0x20d50>
   2c57c:	mov	w0, #0x1                   	// #1
   2c580:	mov	w1, w0
   2c584:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c588:	ldr	x0, [x0, #4016]
   2c58c:	ldr	x2, [sp, #488]
   2c590:	ldr	x0, [x0]
   2c594:	eor	x0, x2, x0
   2c598:	cmp	x0, #0x0
   2c59c:	b.eq	2c5a4 <udev_util_encode_string@@LIBUDEV_183+0x20d74>  // b.none
   2c5a0:	bl	5390 <__stack_chk_fail@plt>
   2c5a4:	mov	w0, w1
   2c5a8:	ldp	x19, x20, [sp, #16]
   2c5ac:	ldp	x29, x30, [sp], #496
   2c5b0:	ret
   2c5b4:	stp	x29, x30, [sp, #-400]!
   2c5b8:	mov	x29, sp
   2c5bc:	str	x19, [sp, #16]
   2c5c0:	str	w0, [sp, #76]
   2c5c4:	str	w1, [sp, #72]
   2c5c8:	str	x2, [sp, #64]
   2c5cc:	str	w3, [sp, #60]
   2c5d0:	str	x4, [sp, #48]
   2c5d4:	str	x5, [sp, #40]
   2c5d8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c5dc:	ldr	x0, [x0, #4016]
   2c5e0:	ldr	x1, [x0]
   2c5e4:	str	x1, [sp, #392]
   2c5e8:	mov	x1, #0x0                   	// #0
   2c5ec:	stp	xzr, xzr, [sp, #208]
   2c5f0:	stp	xzr, xzr, [sp, #224]
   2c5f4:	stp	xzr, xzr, [sp, #240]
   2c5f8:	stp	xzr, xzr, [sp, #256]
   2c5fc:	stp	xzr, xzr, [sp, #272]
   2c600:	stp	xzr, xzr, [sp, #96]
   2c604:	stp	xzr, xzr, [sp, #112]
   2c608:	stp	xzr, xzr, [sp, #128]
   2c60c:	str	xzr, [sp, #144]
   2c610:	add	x0, sp, #0xd0
   2c614:	str	x0, [sp, #112]
   2c618:	mov	x0, #0x5                   	// #5
   2c61c:	str	x0, [sp, #120]
   2c620:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c624:	add	x0, x0, #0xd0
   2c628:	ldr	w0, [x0]
   2c62c:	cmp	w0, #0x0
   2c630:	b.ge	2c63c <udev_util_encode_string@@LIBUDEV_183+0x20e0c>  // b.tcont
   2c634:	mov	w0, #0x0                   	// #0
   2c638:	b	2c89c <udev_util_encode_string@@LIBUDEV_183+0x2106c>
   2c63c:	add	x4, sp, #0x120
   2c640:	ldr	w3, [sp, #76]
   2c644:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c648:	add	x2, x0, #0x7c0
   2c64c:	mov	x1, #0xf                   	// #15
   2c650:	mov	x0, x4
   2c654:	bl	5190 <snprintf@plt>
   2c658:	cmp	w0, #0xe
   2c65c:	cset	w0, hi  // hi = pmore
   2c660:	and	w0, w0, #0xff
   2c664:	and	x0, x0, #0xff
   2c668:	cmp	x0, #0x0
   2c66c:	b.eq	2c698 <udev_util_encode_string@@LIBUDEV_183+0x20e68>  // b.none
   2c670:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c674:	add	x1, x0, #0x713
   2c678:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c67c:	add	x4, x0, #0xfd0
   2c680:	mov	w3, #0x19c                 	// #412
   2c684:	mov	x2, x1
   2c688:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c68c:	add	x1, x0, #0x828
   2c690:	mov	w0, #0x0                   	// #0
   2c694:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2c698:	mov	w0, #0x0                   	// #0
   2c69c:	bl	353f0 <udev_util_encode_string@@LIBUDEV_183+0x29bc0>
   2c6a0:	mov	x1, x0
   2c6a4:	mov	x0, #0x34db                	// #13531
   2c6a8:	movk	x0, #0xd7b6, lsl #16
   2c6ac:	movk	x0, #0xde82, lsl #32
   2c6b0:	movk	x0, #0x431b, lsl #48
   2c6b4:	umulh	x0, x1, x0
   2c6b8:	lsr	x0, x0, #18
   2c6bc:	str	x0, [sp, #80]
   2c6c0:	add	x1, sp, #0x98
   2c6c4:	add	x0, sp, #0x50
   2c6c8:	bl	50b0 <localtime_r@plt>
   2c6cc:	cmp	x0, #0x0
   2c6d0:	b.ne	2c6dc <udev_util_encode_string@@LIBUDEV_183+0x20eac>  // b.any
   2c6d4:	mov	w0, #0xffffffea            	// #-22
   2c6d8:	b	2c89c <udev_util_encode_string@@LIBUDEV_183+0x2106c>
   2c6dc:	add	x0, sp, #0x98
   2c6e0:	add	x4, sp, #0x148
   2c6e4:	mov	x3, x0
   2c6e8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c6ec:	add	x2, x0, #0x858
   2c6f0:	mov	x1, #0x40                  	// #64
   2c6f4:	mov	x0, x4
   2c6f8:	bl	5110 <strftime@plt>
   2c6fc:	cmp	x0, #0x0
   2c700:	b.ne	2c70c <udev_util_encode_string@@LIBUDEV_183+0x20edc>  // b.any
   2c704:	mov	w0, #0xffffffea            	// #-22
   2c708:	b	2c89c <udev_util_encode_string@@LIBUDEV_183+0x2106c>
   2c70c:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   2c710:	add	x4, sp, #0x130
   2c714:	mov	w3, w0
   2c718:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c71c:	add	x2, x0, #0x868
   2c720:	mov	x1, #0x11                  	// #17
   2c724:	mov	x0, x4
   2c728:	bl	5190 <snprintf@plt>
   2c72c:	cmp	w0, #0x10
   2c730:	cset	w0, hi  // hi = pmore
   2c734:	and	w0, w0, #0xff
   2c738:	and	x0, x0, #0xff
   2c73c:	cmp	x0, #0x0
   2c740:	b.eq	2c76c <udev_util_encode_string@@LIBUDEV_183+0x20f3c>  // b.none
   2c744:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c748:	add	x1, x0, #0x713
   2c74c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c750:	add	x4, x0, #0xfd0
   2c754:	mov	w3, #0x1a5                 	// #421
   2c758:	mov	x2, x1
   2c75c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c760:	add	x1, x0, #0x870
   2c764:	mov	w0, #0x0                   	// #0
   2c768:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2c76c:	add	x0, sp, #0x120
   2c770:	bl	5040 <strlen@plt>
   2c774:	mov	x1, x0
   2c778:	add	x0, sp, #0x120
   2c77c:	str	x0, [sp, #208]
   2c780:	str	x1, [sp, #216]
   2c784:	add	x0, sp, #0x148
   2c788:	bl	5040 <strlen@plt>
   2c78c:	mov	x1, x0
   2c790:	add	x0, sp, #0x148
   2c794:	str	x0, [sp, #224]
   2c798:	str	x1, [sp, #232]
   2c79c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c7a0:	ldr	x0, [x0, #4056]
   2c7a4:	ldr	x19, [x0]
   2c7a8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c7ac:	ldr	x0, [x0, #4056]
   2c7b0:	ldr	x0, [x0]
   2c7b4:	bl	5040 <strlen@plt>
   2c7b8:	str	x19, [sp, #240]
   2c7bc:	str	x0, [sp, #248]
   2c7c0:	add	x0, sp, #0x130
   2c7c4:	bl	5040 <strlen@plt>
   2c7c8:	mov	x1, x0
   2c7cc:	add	x0, sp, #0x130
   2c7d0:	str	x0, [sp, #256]
   2c7d4:	str	x1, [sp, #264]
   2c7d8:	ldr	x0, [sp, #40]
   2c7dc:	bl	5040 <strlen@plt>
   2c7e0:	mov	x1, x0
   2c7e4:	ldr	x0, [sp, #40]
   2c7e8:	str	x0, [sp, #272]
   2c7ec:	str	x1, [sp, #280]
   2c7f0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c7f4:	add	x0, x0, #0x11c
   2c7f8:	ldrb	w0, [x0]
   2c7fc:	cmp	w0, #0x0
   2c800:	b.eq	2c810 <udev_util_encode_string@@LIBUDEV_183+0x20fe0>  // b.none
   2c804:	ldr	x0, [sp, #280]
   2c808:	add	x0, x0, #0x1
   2c80c:	str	x0, [sp, #280]
   2c810:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c814:	add	x0, x0, #0xd0
   2c818:	ldr	w0, [x0]
   2c81c:	add	x1, sp, #0x60
   2c820:	mov	w2, #0x4000                	// #16384
   2c824:	bl	52e0 <sendmsg@plt>
   2c828:	str	x0, [sp, #88]
   2c82c:	ldr	x0, [sp, #88]
   2c830:	cmp	x0, #0x0
   2c834:	b.ge	2c848 <udev_util_encode_string@@LIBUDEV_183+0x21018>  // b.tcont
   2c838:	bl	57d0 <__errno_location@plt>
   2c83c:	ldr	w0, [x0]
   2c840:	neg	w0, w0
   2c844:	b	2c89c <udev_util_encode_string@@LIBUDEV_183+0x2106c>
   2c848:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c84c:	add	x0, x0, #0x11c
   2c850:	ldrb	w0, [x0]
   2c854:	eor	w0, w0, #0x1
   2c858:	and	w0, w0, #0xff
   2c85c:	cmp	w0, #0x0
   2c860:	b.ne	2c898 <udev_util_encode_string@@LIBUDEV_183+0x21068>  // b.any
   2c864:	add	x0, sp, #0xd0
   2c868:	mov	x1, #0x5                   	// #5
   2c86c:	bl	2b64c <udev_util_encode_string@@LIBUDEV_183+0x1fe1c>
   2c870:	mov	x1, x0
   2c874:	ldr	x0, [sp, #88]
   2c878:	cmp	x1, x0
   2c87c:	b.ls	2c898 <udev_util_encode_string@@LIBUDEV_183+0x21068>  // b.plast
   2c880:	ldr	x1, [sp, #88]
   2c884:	add	x0, sp, #0xd0
   2c888:	mov	x2, x1
   2c88c:	mov	x1, #0x5                   	// #5
   2c890:	bl	2b6ac <udev_util_encode_string@@LIBUDEV_183+0x1fe7c>
   2c894:	b	2c810 <udev_util_encode_string@@LIBUDEV_183+0x20fe0>
   2c898:	mov	w0, #0x1                   	// #1
   2c89c:	mov	w1, w0
   2c8a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c8a4:	ldr	x0, [x0, #4016]
   2c8a8:	ldr	x2, [sp, #392]
   2c8ac:	ldr	x0, [x0]
   2c8b0:	eor	x0, x2, x0
   2c8b4:	cmp	x0, #0x0
   2c8b8:	b.eq	2c8c0 <udev_util_encode_string@@LIBUDEV_183+0x21090>  // b.none
   2c8bc:	bl	5390 <__stack_chk_fail@plt>
   2c8c0:	mov	w0, w1
   2c8c4:	ldr	x19, [sp, #16]
   2c8c8:	ldp	x29, x30, [sp], #400
   2c8cc:	ret
   2c8d0:	stp	x29, x30, [sp, #-208]!
   2c8d4:	mov	x29, sp
   2c8d8:	str	x19, [sp, #16]
   2c8dc:	str	w0, [sp, #76]
   2c8e0:	str	w1, [sp, #72]
   2c8e4:	str	x2, [sp, #64]
   2c8e8:	str	w3, [sp, #60]
   2c8ec:	str	x4, [sp, #48]
   2c8f0:	str	x5, [sp, #40]
   2c8f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c8f8:	ldr	x0, [x0, #4016]
   2c8fc:	ldr	x1, [x0]
   2c900:	str	x1, [sp, #200]
   2c904:	mov	x1, #0x0                   	// #0
   2c908:	stp	xzr, xzr, [sp, #80]
   2c90c:	stp	xzr, xzr, [sp, #96]
   2c910:	stp	xzr, xzr, [sp, #112]
   2c914:	stp	xzr, xzr, [sp, #128]
   2c918:	stp	xzr, xzr, [sp, #144]
   2c91c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2c920:	add	x0, x0, #0xd4
   2c924:	ldr	w0, [x0]
   2c928:	cmp	w0, #0x0
   2c92c:	b.ge	2c938 <udev_util_encode_string@@LIBUDEV_183+0x21108>  // b.tcont
   2c930:	mov	w0, #0x0                   	// #0
   2c934:	b	2cae0 <udev_util_encode_string@@LIBUDEV_183+0x212b0>
   2c938:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2c93c:	ldr	x1, [x0, #3912]
   2c940:	add	x0, x0, #0xf48
   2c944:	blr	x1
   2c948:	mrs	x1, tpidr_el0
   2c94c:	add	x0, x1, x0
   2c950:	bl	32dd8 <udev_util_encode_string@@LIBUDEV_183+0x275a8>
   2c954:	and	w0, w0, #0xff
   2c958:	eor	w0, w0, #0x1
   2c95c:	and	w0, w0, #0xff
   2c960:	cmp	w0, #0x0
   2c964:	b.eq	2c970 <udev_util_encode_string@@LIBUDEV_183+0x21140>  // b.none
   2c968:	mov	w0, #0x0                   	// #0
   2c96c:	b	2cae0 <udev_util_encode_string@@LIBUDEV_183+0x212b0>
   2c970:	add	x4, sp, #0xa0
   2c974:	ldr	w3, [sp, #76]
   2c978:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c97c:	add	x2, x0, #0x7c0
   2c980:	mov	x1, #0xf                   	// #15
   2c984:	mov	x0, x4
   2c988:	bl	5190 <snprintf@plt>
   2c98c:	cmp	w0, #0xe
   2c990:	cset	w0, hi  // hi = pmore
   2c994:	and	w0, w0, #0xff
   2c998:	and	x0, x0, #0xff
   2c99c:	cmp	x0, #0x0
   2c9a0:	b.eq	2c9cc <udev_util_encode_string@@LIBUDEV_183+0x2119c>  // b.none
   2c9a4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c9a8:	add	x1, x0, #0x713
   2c9ac:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c9b0:	add	x4, x0, #0xfe0
   2c9b4:	mov	w3, #0x1dd                 	// #477
   2c9b8:	mov	x2, x1
   2c9bc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c9c0:	add	x1, x0, #0x828
   2c9c4:	mov	w0, #0x0                   	// #0
   2c9c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2c9cc:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   2c9d0:	add	x4, sp, #0xb0
   2c9d4:	mov	w3, w0
   2c9d8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2c9dc:	add	x2, x0, #0x868
   2c9e0:	mov	x1, #0x11                  	// #17
   2c9e4:	mov	x0, x4
   2c9e8:	bl	5190 <snprintf@plt>
   2c9ec:	cmp	w0, #0x10
   2c9f0:	cset	w0, hi  // hi = pmore
   2c9f4:	and	w0, w0, #0xff
   2c9f8:	and	x0, x0, #0xff
   2c9fc:	cmp	x0, #0x0
   2ca00:	b.eq	2ca2c <udev_util_encode_string@@LIBUDEV_183+0x211fc>  // b.none
   2ca04:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ca08:	add	x1, x0, #0x713
   2ca0c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ca10:	add	x4, x0, #0xfe0
   2ca14:	mov	w3, #0x1de                 	// #478
   2ca18:	mov	x2, x1
   2ca1c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ca20:	add	x1, x0, #0x870
   2ca24:	mov	w0, #0x0                   	// #0
   2ca28:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2ca2c:	add	x0, sp, #0xa0
   2ca30:	bl	5040 <strlen@plt>
   2ca34:	mov	x1, x0
   2ca38:	add	x0, sp, #0xa0
   2ca3c:	str	x0, [sp, #80]
   2ca40:	str	x1, [sp, #88]
   2ca44:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ca48:	ldr	x0, [x0, #4056]
   2ca4c:	ldr	x19, [x0]
   2ca50:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ca54:	ldr	x0, [x0, #4056]
   2ca58:	ldr	x0, [x0]
   2ca5c:	bl	5040 <strlen@plt>
   2ca60:	str	x19, [sp, #96]
   2ca64:	str	x0, [sp, #104]
   2ca68:	add	x0, sp, #0xb0
   2ca6c:	bl	5040 <strlen@plt>
   2ca70:	mov	x1, x0
   2ca74:	add	x0, sp, #0xb0
   2ca78:	str	x0, [sp, #112]
   2ca7c:	str	x1, [sp, #120]
   2ca80:	ldr	x0, [sp, #40]
   2ca84:	bl	5040 <strlen@plt>
   2ca88:	mov	x1, x0
   2ca8c:	ldr	x0, [sp, #40]
   2ca90:	str	x0, [sp, #128]
   2ca94:	str	x1, [sp, #136]
   2ca98:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ca9c:	add	x0, x0, #0x820
   2caa0:	str	x0, [sp, #144]
   2caa4:	mov	x0, #0x1                   	// #1
   2caa8:	str	x0, [sp, #152]
   2caac:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2cab0:	add	x0, x0, #0xd4
   2cab4:	ldr	w0, [x0]
   2cab8:	add	x1, sp, #0x50
   2cabc:	mov	w2, #0x5                   	// #5
   2cac0:	bl	5740 <writev@plt>
   2cac4:	cmp	x0, #0x0
   2cac8:	b.ge	2cadc <udev_util_encode_string@@LIBUDEV_183+0x212ac>  // b.tcont
   2cacc:	bl	57d0 <__errno_location@plt>
   2cad0:	ldr	w0, [x0]
   2cad4:	neg	w0, w0
   2cad8:	b	2cae0 <udev_util_encode_string@@LIBUDEV_183+0x212b0>
   2cadc:	mov	w0, #0x1                   	// #1
   2cae0:	mov	w1, w0
   2cae4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2cae8:	ldr	x0, [x0, #4016]
   2caec:	ldr	x2, [sp, #200]
   2caf0:	ldr	x0, [x0]
   2caf4:	eor	x0, x2, x0
   2caf8:	cmp	x0, #0x0
   2cafc:	b.eq	2cb04 <udev_util_encode_string@@LIBUDEV_183+0x212d4>  // b.none
   2cb00:	bl	5390 <__stack_chk_fail@plt>
   2cb04:	mov	w0, w1
   2cb08:	ldr	x19, [sp, #16]
   2cb0c:	ldp	x29, x30, [sp], #208
   2cb10:	ret
   2cb14:	sub	sp, sp, #0x170
   2cb18:	stp	x29, x30, [sp, #144]
   2cb1c:	add	x29, sp, #0x90
   2cb20:	stp	x19, x20, [sp, #160]
   2cb24:	stp	x21, x22, [sp, #176]
   2cb28:	stp	x23, x24, [sp, #192]
   2cb2c:	stp	x25, x26, [sp, #208]
   2cb30:	stp	x27, x28, [sp, #224]
   2cb34:	str	x0, [sp, #344]
   2cb38:	str	x1, [sp, #336]
   2cb3c:	str	w2, [sp, #332]
   2cb40:	str	w3, [sp, #328]
   2cb44:	str	x4, [sp, #320]
   2cb48:	str	w5, [sp, #316]
   2cb4c:	str	x6, [sp, #304]
   2cb50:	str	x7, [sp, #296]
   2cb54:	ldr	w0, [sp, #328]
   2cb58:	and	w0, w0, #0x40000000
   2cb5c:	cmp	w0, #0x0
   2cb60:	b.ne	2cb78 <udev_util_encode_string@@LIBUDEV_183+0x21348>  // b.any
   2cb64:	ldr	w0, [sp, #328]
   2cb68:	cmp	w0, #0x0
   2cb6c:	cneg	w0, w0, lt  // lt = tstop
   2cb70:	and	w0, w0, #0xff
   2cb74:	b	2cb7c <udev_util_encode_string@@LIBUDEV_183+0x2134c>
   2cb78:	mov	w0, #0x0                   	// #0
   2cb7c:	str	w0, [sp, #328]
   2cb80:	ldr	w0, [sp, #332]
   2cb84:	and	w0, w0, #0x7
   2cb88:	str	w0, [sp, #284]
   2cb8c:	ldr	w0, [sp, #332]
   2cb90:	asr	w0, w0, #3
   2cb94:	and	w0, w0, #0x7f
   2cb98:	str	w0, [sp, #312]
   2cb9c:	ldr	x0, [sp, #320]
   2cba0:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cba4:	and	w0, w0, #0xff
   2cba8:	cmp	w0, #0x0
   2cbac:	b.eq	2cbc0 <udev_util_encode_string@@LIBUDEV_183+0x21390>  // b.none
   2cbb0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cbb4:	add	x0, x0, #0x7f0
   2cbb8:	str	x0, [sp, #240]
   2cbbc:	b	2cbcc <udev_util_encode_string@@LIBUDEV_183+0x2139c>
   2cbc0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cbc4:	add	x0, x0, #0x8a0
   2cbc8:	str	x0, [sp, #240]
   2cbcc:	ldr	x0, [sp, #320]
   2cbd0:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cbd4:	and	w0, w0, #0xff
   2cbd8:	cmp	w0, #0x0
   2cbdc:	b.ne	2cbec <udev_util_encode_string@@LIBUDEV_183+0x213bc>  // b.any
   2cbe0:	ldr	x0, [sp, #320]
   2cbe4:	str	x0, [sp, #248]
   2cbe8:	b	2cbf8 <udev_util_encode_string@@LIBUDEV_183+0x213c8>
   2cbec:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cbf0:	add	x0, x0, #0x7f0
   2cbf4:	str	x0, [sp, #248]
   2cbf8:	ldr	x0, [sp, #320]
   2cbfc:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cc00:	and	w0, w0, #0xff
   2cc04:	cmp	w0, #0x0
   2cc08:	b.eq	2cc1c <udev_util_encode_string@@LIBUDEV_183+0x213ec>  // b.none
   2cc0c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc10:	add	x0, x0, #0x7f0
   2cc14:	str	x0, [sp, #256]
   2cc18:	b	2cc28 <udev_util_encode_string@@LIBUDEV_183+0x213f8>
   2cc1c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc20:	add	x0, x0, #0x820
   2cc24:	str	x0, [sp, #256]
   2cc28:	ldr	w0, [sp, #316]
   2cc2c:	cmp	w0, #0x0
   2cc30:	b.eq	2cc40 <udev_util_encode_string@@LIBUDEV_183+0x21410>  // b.none
   2cc34:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc38:	add	x19, x0, #0x8b0
   2cc3c:	b	2cc48 <udev_util_encode_string@@LIBUDEV_183+0x21418>
   2cc40:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc44:	add	x19, x0, #0x7f0
   2cc48:	ldr	w0, [sp, #316]
   2cc4c:	cmp	w0, #0x0
   2cc50:	cset	w0, ne  // ne = any
   2cc54:	and	w0, w0, #0xff
   2cc58:	str	w0, [sp, #288]
   2cc5c:	ldr	w0, [sp, #316]
   2cc60:	cmp	w0, #0x0
   2cc64:	b.eq	2cc74 <udev_util_encode_string@@LIBUDEV_183+0x21444>  // b.none
   2cc68:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc6c:	add	x20, x0, #0x820
   2cc70:	b	2cc7c <udev_util_encode_string@@LIBUDEV_183+0x2144c>
   2cc74:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc78:	add	x20, x0, #0x7f0
   2cc7c:	ldr	x0, [sp, #304]
   2cc80:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cc84:	and	w0, w0, #0xff
   2cc88:	cmp	w0, #0x0
   2cc8c:	b.eq	2cc9c <udev_util_encode_string@@LIBUDEV_183+0x2146c>  // b.none
   2cc90:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cc94:	add	x21, x0, #0x7f0
   2cc98:	b	2cca4 <udev_util_encode_string@@LIBUDEV_183+0x21474>
   2cc9c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cca0:	add	x21, x0, #0x8c0
   2cca4:	ldr	x0, [sp, #304]
   2cca8:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2ccac:	and	w0, w0, #0xff
   2ccb0:	cmp	w0, #0x0
   2ccb4:	b.ne	2ccc0 <udev_util_encode_string@@LIBUDEV_183+0x21490>  // b.any
   2ccb8:	ldr	x22, [sp, #304]
   2ccbc:	b	2ccc8 <udev_util_encode_string@@LIBUDEV_183+0x21498>
   2ccc0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ccc4:	add	x22, x0, #0x7f0
   2ccc8:	ldr	x0, [sp, #304]
   2cccc:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2ccd0:	and	w0, w0, #0xff
   2ccd4:	cmp	w0, #0x0
   2ccd8:	b.eq	2cce8 <udev_util_encode_string@@LIBUDEV_183+0x214b8>  // b.none
   2ccdc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cce0:	add	x23, x0, #0x7f0
   2cce4:	b	2ccf0 <udev_util_encode_string@@LIBUDEV_183+0x214c0>
   2cce8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ccec:	add	x23, x0, #0x820
   2ccf0:	ldr	w0, [sp, #328]
   2ccf4:	cmp	w0, #0x0
   2ccf8:	b.eq	2cd08 <udev_util_encode_string@@LIBUDEV_183+0x214d8>  // b.none
   2ccfc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cd00:	add	x24, x0, #0x8d0
   2cd04:	b	2cd10 <udev_util_encode_string@@LIBUDEV_183+0x214e0>
   2cd08:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cd0c:	add	x24, x0, #0x7f0
   2cd10:	ldr	w0, [sp, #328]
   2cd14:	cmp	w0, #0x0
   2cd18:	cset	w0, ne  // ne = any
   2cd1c:	and	w0, w0, #0xff
   2cd20:	str	w0, [sp, #292]
   2cd24:	ldr	w0, [sp, #328]
   2cd28:	cmp	w0, #0x0
   2cd2c:	b.eq	2cd3c <udev_util_encode_string@@LIBUDEV_183+0x2150c>  // b.none
   2cd30:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cd34:	add	x25, x0, #0x820
   2cd38:	b	2cd44 <udev_util_encode_string@@LIBUDEV_183+0x21514>
   2cd3c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cd40:	add	x25, x0, #0x7f0
   2cd44:	ldr	x0, [sp, #368]
   2cd48:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cd4c:	and	w0, w0, #0xff
   2cd50:	cmp	w0, #0x0
   2cd54:	b.ne	2cd60 <udev_util_encode_string@@LIBUDEV_183+0x21530>  // b.any
   2cd58:	ldr	x26, [sp, #296]
   2cd5c:	b	2cd68 <udev_util_encode_string@@LIBUDEV_183+0x21538>
   2cd60:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cd64:	add	x26, x0, #0x7f0
   2cd68:	ldr	x0, [sp, #368]
   2cd6c:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cd70:	and	w0, w0, #0xff
   2cd74:	cmp	w0, #0x0
   2cd78:	b.ne	2cd84 <udev_util_encode_string@@LIBUDEV_183+0x21554>  // b.any
   2cd7c:	ldr	x27, [sp, #368]
   2cd80:	b	2cd8c <udev_util_encode_string@@LIBUDEV_183+0x2155c>
   2cd84:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cd88:	add	x27, x0, #0x7f0
   2cd8c:	ldr	x0, [sp, #368]
   2cd90:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cd94:	and	w0, w0, #0xff
   2cd98:	cmp	w0, #0x0
   2cd9c:	b.eq	2cdac <udev_util_encode_string@@LIBUDEV_183+0x2157c>  // b.none
   2cda0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cda4:	add	x28, x0, #0x7f0
   2cda8:	b	2cdb4 <udev_util_encode_string@@LIBUDEV_183+0x21584>
   2cdac:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cdb0:	add	x28, x0, #0x820
   2cdb4:	ldr	x0, [sp, #384]
   2cdb8:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cdbc:	and	w0, w0, #0xff
   2cdc0:	cmp	w0, #0x0
   2cdc4:	b.ne	2cdd4 <udev_util_encode_string@@LIBUDEV_183+0x215a4>  // b.any
   2cdc8:	ldr	x0, [sp, #376]
   2cdcc:	str	x0, [sp, #264]
   2cdd0:	b	2cde0 <udev_util_encode_string@@LIBUDEV_183+0x215b0>
   2cdd4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cdd8:	add	x0, x0, #0x7f0
   2cddc:	str	x0, [sp, #264]
   2cde0:	ldr	x0, [sp, #384]
   2cde4:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2cde8:	and	w0, w0, #0xff
   2cdec:	cmp	w0, #0x0
   2cdf0:	b.ne	2ce00 <udev_util_encode_string@@LIBUDEV_183+0x215d0>  // b.any
   2cdf4:	ldr	x0, [sp, #384]
   2cdf8:	str	x0, [sp, #272]
   2cdfc:	b	2ce0c <udev_util_encode_string@@LIBUDEV_183+0x215dc>
   2ce00:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ce04:	add	x0, x0, #0x7f0
   2ce08:	str	x0, [sp, #272]
   2ce0c:	ldr	x0, [sp, #384]
   2ce10:	bl	2b7b8 <udev_util_encode_string@@LIBUDEV_183+0x1ff88>
   2ce14:	and	w0, w0, #0xff
   2ce18:	cmp	w0, #0x0
   2ce1c:	b.eq	2ce2c <udev_util_encode_string@@LIBUDEV_183+0x215fc>  // b.none
   2ce20:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ce24:	add	x0, x0, #0x7f0
   2ce28:	b	2ce34 <udev_util_encode_string@@LIBUDEV_183+0x21604>
   2ce2c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ce30:	add	x0, x0, #0x820
   2ce34:	adrp	x1, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ce38:	ldr	x1, [x1, #4056]
   2ce3c:	ldr	x1, [x1]
   2ce40:	str	x1, [sp, #136]
   2ce44:	str	x0, [sp, #128]
   2ce48:	ldr	x0, [sp, #272]
   2ce4c:	str	x0, [sp, #120]
   2ce50:	ldr	x0, [sp, #264]
   2ce54:	str	x0, [sp, #112]
   2ce58:	str	x28, [sp, #104]
   2ce5c:	str	x27, [sp, #96]
   2ce60:	str	x26, [sp, #88]
   2ce64:	str	x25, [sp, #80]
   2ce68:	ldr	w0, [sp, #328]
   2ce6c:	str	w0, [sp, #72]
   2ce70:	ldr	w0, [sp, #292]
   2ce74:	str	w0, [sp, #64]
   2ce78:	str	x24, [sp, #56]
   2ce7c:	str	x23, [sp, #48]
   2ce80:	str	x22, [sp, #40]
   2ce84:	str	x21, [sp, #32]
   2ce88:	str	x20, [sp, #24]
   2ce8c:	ldr	w0, [sp, #316]
   2ce90:	str	w0, [sp, #16]
   2ce94:	ldr	w0, [sp, #288]
   2ce98:	str	w0, [sp, #8]
   2ce9c:	str	x19, [sp]
   2cea0:	ldr	x7, [sp, #256]
   2cea4:	ldr	x6, [sp, #248]
   2cea8:	ldr	x5, [sp, #240]
   2ceac:	ldr	w4, [sp, #312]
   2ceb0:	ldr	w3, [sp, #284]
   2ceb4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ceb8:	add	x2, x0, #0x8d8
   2cebc:	ldr	x1, [sp, #336]
   2cec0:	ldr	x0, [sp, #344]
   2cec4:	bl	5190 <snprintf@plt>
   2cec8:	str	w0, [sp, #364]
   2cecc:	ldrsw	x0, [sp, #364]
   2ced0:	ldr	x1, [sp, #336]
   2ced4:	cmp	x1, x0
   2ced8:	cset	w0, ls  // ls = plast
   2cedc:	and	w0, w0, #0xff
   2cee0:	and	x0, x0, #0xff
   2cee4:	cmp	x0, #0x0
   2cee8:	b.eq	2cf14 <udev_util_encode_string@@LIBUDEV_183+0x216e4>  // b.none
   2ceec:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2cef0:	ldr	x0, [x0, #3992]
   2cef4:	ldr	x0, [x0]
   2cef8:	mov	x3, x0
   2cefc:	mov	x2, #0x12                  	// #18
   2cf00:	mov	x1, #0x1                   	// #1
   2cf04:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2cf08:	add	x0, x0, #0x950
   2cf0c:	bl	55a0 <fwrite@plt>
   2cf10:	bl	53d0 <abort@plt>
   2cf14:	mov	w0, #0x0                   	// #0
   2cf18:	ldp	x19, x20, [sp, #160]
   2cf1c:	ldp	x21, x22, [sp, #176]
   2cf20:	ldp	x23, x24, [sp, #192]
   2cf24:	ldp	x25, x26, [sp, #208]
   2cf28:	ldp	x27, x28, [sp, #224]
   2cf2c:	ldp	x29, x30, [sp, #144]
   2cf30:	add	sp, sp, #0x170
   2cf34:	ret
   2cf38:	sub	sp, sp, #0x900
   2cf3c:	stp	x29, x30, [sp, #32]
   2cf40:	add	x29, sp, #0x20
   2cf44:	str	w0, [sp, #124]
   2cf48:	str	w1, [sp, #120]
   2cf4c:	str	x2, [sp, #112]
   2cf50:	str	w3, [sp, #108]
   2cf54:	str	x4, [sp, #96]
   2cf58:	str	x5, [sp, #88]
   2cf5c:	str	x6, [sp, #80]
   2cf60:	str	x7, [sp, #72]
   2cf64:	ldr	x0, [sp, #2304]
   2cf68:	str	x0, [sp, #64]
   2cf6c:	ldr	x0, [sp, #2312]
   2cf70:	str	x0, [sp, #56]
   2cf74:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2cf78:	ldr	x0, [x0, #4016]
   2cf7c:	ldr	x1, [x0]
   2cf80:	str	x1, [sp, #2296]
   2cf84:	mov	x1, #0x0                   	// #0
   2cf88:	stp	xzr, xzr, [sp, #184]
   2cf8c:	stp	xzr, xzr, [sp, #200]
   2cf90:	stp	xzr, xzr, [sp, #216]
   2cf94:	stp	xzr, xzr, [sp, #232]
   2cf98:	stp	xzr, xzr, [sp, #128]
   2cf9c:	stp	xzr, xzr, [sp, #144]
   2cfa0:	stp	xzr, xzr, [sp, #160]
   2cfa4:	str	xzr, [sp, #176]
   2cfa8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2cfac:	add	x0, x0, #0xd8
   2cfb0:	ldr	w0, [x0]
   2cfb4:	cmp	w0, #0x0
   2cfb8:	b.ge	2cfc4 <udev_util_encode_string@@LIBUDEV_183+0x21794>  // b.tcont
   2cfbc:	mov	w0, #0x0                   	// #0
   2cfc0:	b	2d0a0 <udev_util_encode_string@@LIBUDEV_183+0x21870>
   2cfc4:	add	x8, sp, #0xf8
   2cfc8:	ldr	x0, [sp, #64]
   2cfcc:	str	x0, [sp, #16]
   2cfd0:	ldr	x0, [sp, #72]
   2cfd4:	str	x0, [sp, #8]
   2cfd8:	ldr	x0, [sp, #80]
   2cfdc:	str	x0, [sp]
   2cfe0:	ldr	x7, [sp, #88]
   2cfe4:	ldr	x6, [sp, #96]
   2cfe8:	ldr	w5, [sp, #108]
   2cfec:	ldr	x4, [sp, #112]
   2cff0:	ldr	w3, [sp, #120]
   2cff4:	ldr	w2, [sp, #124]
   2cff8:	mov	x1, #0x800                 	// #2048
   2cffc:	mov	x0, x8
   2d000:	bl	2cb14 <udev_util_encode_string@@LIBUDEV_183+0x212e4>
   2d004:	add	x0, sp, #0xf8
   2d008:	bl	5040 <strlen@plt>
   2d00c:	mov	x1, x0
   2d010:	add	x0, sp, #0xf8
   2d014:	str	x0, [sp, #184]
   2d018:	str	x1, [sp, #192]
   2d01c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d020:	add	x0, x0, #0x968
   2d024:	str	x0, [sp, #200]
   2d028:	mov	x0, #0x8                   	// #8
   2d02c:	str	x0, [sp, #208]
   2d030:	ldr	x0, [sp, #56]
   2d034:	bl	5040 <strlen@plt>
   2d038:	mov	x1, x0
   2d03c:	ldr	x0, [sp, #56]
   2d040:	str	x0, [sp, #216]
   2d044:	str	x1, [sp, #224]
   2d048:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d04c:	add	x0, x0, #0x820
   2d050:	str	x0, [sp, #232]
   2d054:	mov	x0, #0x1                   	// #1
   2d058:	str	x0, [sp, #240]
   2d05c:	add	x0, sp, #0xb8
   2d060:	str	x0, [sp, #144]
   2d064:	mov	x0, #0x4                   	// #4
   2d068:	str	x0, [sp, #152]
   2d06c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d070:	add	x0, x0, #0xd8
   2d074:	ldr	w0, [x0]
   2d078:	add	x1, sp, #0x80
   2d07c:	mov	w2, #0x4000                	// #16384
   2d080:	bl	52e0 <sendmsg@plt>
   2d084:	cmp	x0, #0x0
   2d088:	b.ge	2d09c <udev_util_encode_string@@LIBUDEV_183+0x2186c>  // b.tcont
   2d08c:	bl	57d0 <__errno_location@plt>
   2d090:	ldr	w0, [x0]
   2d094:	neg	w0, w0
   2d098:	b	2d0a0 <udev_util_encode_string@@LIBUDEV_183+0x21870>
   2d09c:	mov	w0, #0x1                   	// #1
   2d0a0:	mov	w1, w0
   2d0a4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d0a8:	ldr	x0, [x0, #4016]
   2d0ac:	ldr	x2, [sp, #2296]
   2d0b0:	ldr	x0, [x0]
   2d0b4:	eor	x0, x2, x0
   2d0b8:	cmp	x0, #0x0
   2d0bc:	b.eq	2d0c4 <udev_util_encode_string@@LIBUDEV_183+0x21894>  // b.none
   2d0c0:	bl	5390 <__stack_chk_fail@plt>
   2d0c4:	mov	w0, w1
   2d0c8:	ldp	x29, x30, [sp, #32]
   2d0cc:	add	sp, sp, #0x900
   2d0d0:	ret
   2d0d4:	sub	sp, sp, #0x70
   2d0d8:	stp	x29, x30, [sp, #16]
   2d0dc:	add	x29, sp, #0x10
   2d0e0:	str	w0, [sp, #92]
   2d0e4:	str	w1, [sp, #88]
   2d0e8:	str	x2, [sp, #80]
   2d0ec:	str	w3, [sp, #76]
   2d0f0:	str	x4, [sp, #64]
   2d0f4:	str	x5, [sp, #56]
   2d0f8:	str	x6, [sp, #48]
   2d0fc:	str	x7, [sp, #40]
   2d100:	ldr	x0, [sp, #120]
   2d104:	cmp	x0, #0x0
   2d108:	cset	w0, eq  // eq = none
   2d10c:	and	w0, w0, #0xff
   2d110:	and	x0, x0, #0xff
   2d114:	cmp	x0, #0x0
   2d118:	b.eq	2d144 <udev_util_encode_string@@LIBUDEV_183+0x21914>  // b.none
   2d11c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d120:	ldr	x0, [x0, #3992]
   2d124:	ldr	x0, [x0]
   2d128:	mov	x3, x0
   2d12c:	mov	x2, #0x7                   	// #7
   2d130:	mov	x1, #0x1                   	// #1
   2d134:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d138:	add	x0, x0, #0x978
   2d13c:	bl	55a0 <fwrite@plt>
   2d140:	bl	53d0 <abort@plt>
   2d144:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d148:	add	x0, x0, #0x118
   2d14c:	ldr	w0, [x0]
   2d150:	cmp	w0, #0x8
   2d154:	b.ne	2d170 <udev_util_encode_string@@LIBUDEV_183+0x21940>  // b.any
   2d158:	ldr	w0, [sp, #88]
   2d15c:	cmp	w0, #0x0
   2d160:	cneg	w0, w0, lt  // lt = tstop
   2d164:	and	w0, w0, #0xff
   2d168:	neg	w0, w0
   2d16c:	b	2d43c <udev_util_encode_string@@LIBUDEV_183+0x21c0c>
   2d170:	ldr	w0, [sp, #92]
   2d174:	and	w0, w0, #0x3f8
   2d178:	cmp	w0, #0x0
   2d17c:	b.ne	2d198 <udev_util_encode_string@@LIBUDEV_183+0x21968>  // b.any
   2d180:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d184:	add	x0, x0, #0xc8
   2d188:	ldr	w0, [x0]
   2d18c:	ldr	w1, [sp, #92]
   2d190:	orr	w0, w1, w0
   2d194:	str	w0, [sp, #92]
   2d198:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d19c:	add	x0, x0, #0x120
   2d1a0:	ldrb	w0, [x0]
   2d1a4:	cmp	w0, #0x0
   2d1a8:	b.eq	2d1b0 <udev_util_encode_string@@LIBUDEV_183+0x21980>  // b.none
   2d1ac:	bl	2bf1c <udev_util_encode_string@@LIBUDEV_183+0x206ec>
   2d1b0:	str	wzr, [sp, #100]
   2d1b4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d1b8:	add	x1, x0, #0x980
   2d1bc:	ldr	x0, [sp, #120]
   2d1c0:	bl	5560 <strspn@plt>
   2d1c4:	mov	x1, x0
   2d1c8:	ldr	x0, [sp, #120]
   2d1cc:	add	x0, x0, x1
   2d1d0:	str	x0, [sp, #120]
   2d1d4:	ldr	x0, [sp, #120]
   2d1d8:	ldrb	w0, [x0]
   2d1dc:	cmp	w0, #0x0
   2d1e0:	b.eq	2d40c <udev_util_encode_string@@LIBUDEV_183+0x21bdc>  // b.none
   2d1e4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d1e8:	add	x1, x0, #0x980
   2d1ec:	ldr	x0, [sp, #120]
   2d1f0:	bl	52b0 <strpbrk@plt>
   2d1f4:	str	x0, [sp, #104]
   2d1f8:	ldr	x0, [sp, #104]
   2d1fc:	cmp	x0, #0x0
   2d200:	b.eq	2d214 <udev_util_encode_string@@LIBUDEV_183+0x219e4>  // b.none
   2d204:	ldr	x0, [sp, #104]
   2d208:	add	x1, x0, #0x1
   2d20c:	str	x1, [sp, #104]
   2d210:	strb	wzr, [x0]
   2d214:	strb	wzr, [sp, #97]
   2d218:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d21c:	add	x0, x0, #0x118
   2d220:	ldr	w0, [x0]
   2d224:	cmp	w0, #0x4
   2d228:	b.gt	2d238 <udev_util_encode_string@@LIBUDEV_183+0x21a08>
   2d22c:	cmp	w0, #0x3
   2d230:	b.ge	2d240 <udev_util_encode_string@@LIBUDEV_183+0x21a10>  // b.tcont
   2d234:	b	2d248 <udev_util_encode_string@@LIBUDEV_183+0x21a18>
   2d238:	cmp	w0, #0x7
   2d23c:	b.ne	2d248 <udev_util_encode_string@@LIBUDEV_183+0x21a18>  // b.any
   2d240:	mov	w0, #0x1                   	// #1
   2d244:	strb	w0, [sp, #97]
   2d248:	nop
   2d24c:	ldrb	w0, [sp, #97]
   2d250:	cmp	w0, #0x0
   2d254:	b.eq	2d2ac <udev_util_encode_string@@LIBUDEV_183+0x21a7c>  // b.none
   2d258:	ldr	x0, [sp, #120]
   2d25c:	str	x0, [sp, #8]
   2d260:	ldr	x0, [sp, #112]
   2d264:	str	x0, [sp]
   2d268:	ldr	x7, [sp, #40]
   2d26c:	ldr	x6, [sp, #48]
   2d270:	ldr	x5, [sp, #56]
   2d274:	ldr	x4, [sp, #64]
   2d278:	ldr	w3, [sp, #76]
   2d27c:	ldr	x2, [sp, #80]
   2d280:	ldr	w1, [sp, #88]
   2d284:	ldr	w0, [sp, #92]
   2d288:	bl	2cf38 <udev_util_encode_string@@LIBUDEV_183+0x21708>
   2d28c:	str	w0, [sp, #100]
   2d290:	ldr	w0, [sp, #100]
   2d294:	cmp	w0, #0x0
   2d298:	b.ge	2d2ac <udev_util_encode_string@@LIBUDEV_183+0x21a7c>  // b.tcont
   2d29c:	ldr	w0, [sp, #100]
   2d2a0:	cmn	w0, #0xb
   2d2a4:	b.eq	2d2ac <udev_util_encode_string@@LIBUDEV_183+0x21a7c>  // b.none
   2d2a8:	bl	2bd90 <udev_util_encode_string@@LIBUDEV_183+0x20560>
   2d2ac:	strb	wzr, [sp, #98]
   2d2b0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d2b4:	add	x0, x0, #0x118
   2d2b8:	ldr	w0, [x0]
   2d2bc:	sub	w0, w0, #0x5
   2d2c0:	cmp	w0, #0x1
   2d2c4:	b.hi	2d2d0 <udev_util_encode_string@@LIBUDEV_183+0x21aa0>  // b.pmore
   2d2c8:	mov	w0, #0x1                   	// #1
   2d2cc:	strb	w0, [sp, #98]
   2d2d0:	nop
   2d2d4:	ldrb	w0, [sp, #98]
   2d2d8:	cmp	w0, #0x0
   2d2dc:	b.eq	2d31c <udev_util_encode_string@@LIBUDEV_183+0x21aec>  // b.none
   2d2e0:	ldr	x5, [sp, #120]
   2d2e4:	ldr	x4, [sp, #64]
   2d2e8:	ldr	w3, [sp, #76]
   2d2ec:	ldr	x2, [sp, #80]
   2d2f0:	ldr	w1, [sp, #88]
   2d2f4:	ldr	w0, [sp, #92]
   2d2f8:	bl	2c5b4 <udev_util_encode_string@@LIBUDEV_183+0x20d84>
   2d2fc:	str	w0, [sp, #100]
   2d300:	ldr	w0, [sp, #100]
   2d304:	cmp	w0, #0x0
   2d308:	b.ge	2d31c <udev_util_encode_string@@LIBUDEV_183+0x21aec>  // b.tcont
   2d30c:	ldr	w0, [sp, #100]
   2d310:	cmn	w0, #0xb
   2d314:	b.eq	2d31c <udev_util_encode_string@@LIBUDEV_183+0x21aec>  // b.none
   2d318:	bl	2b9e8 <udev_util_encode_string@@LIBUDEV_183+0x201b8>
   2d31c:	ldr	w0, [sp, #100]
   2d320:	cmp	w0, #0x0
   2d324:	b.gt	2d3cc <udev_util_encode_string@@LIBUDEV_183+0x21b9c>
   2d328:	strb	wzr, [sp, #99]
   2d32c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d330:	add	x0, x0, #0x118
   2d334:	ldr	w0, [x0]
   2d338:	cmp	w0, #0x7
   2d33c:	cset	w1, hi  // hi = pmore
   2d340:	and	w1, w1, #0xff
   2d344:	cmp	w1, #0x0
   2d348:	b.ne	2d378 <udev_util_encode_string@@LIBUDEV_183+0x21b48>  // b.any
   2d34c:	mov	x1, #0x1                   	// #1
   2d350:	lsl	x1, x1, x0
   2d354:	mov	x0, #0xd4                  	// #212
   2d358:	and	x0, x1, x0
   2d35c:	cmp	x0, #0x0
   2d360:	cset	w0, ne  // ne = any
   2d364:	and	w0, w0, #0xff
   2d368:	cmp	w0, #0x0
   2d36c:	b.eq	2d378 <udev_util_encode_string@@LIBUDEV_183+0x21b48>  // b.none
   2d370:	mov	w0, #0x1                   	// #1
   2d374:	strb	w0, [sp, #99]
   2d378:	nop
   2d37c:	ldrb	w0, [sp, #99]
   2d380:	cmp	w0, #0x0
   2d384:	b.eq	2d3cc <udev_util_encode_string@@LIBUDEV_183+0x21b9c>  // b.none
   2d388:	ldr	w0, [sp, #100]
   2d38c:	cmp	w0, #0x0
   2d390:	b.ge	2d398 <udev_util_encode_string@@LIBUDEV_183+0x21b68>  // b.tcont
   2d394:	bl	2b950 <udev_util_encode_string@@LIBUDEV_183+0x20120>
   2d398:	ldr	x5, [sp, #120]
   2d39c:	ldr	x4, [sp, #64]
   2d3a0:	ldr	w3, [sp, #76]
   2d3a4:	ldr	x2, [sp, #80]
   2d3a8:	ldr	w1, [sp, #88]
   2d3ac:	ldr	w0, [sp, #92]
   2d3b0:	bl	2c8d0 <udev_util_encode_string@@LIBUDEV_183+0x210a0>
   2d3b4:	str	w0, [sp, #100]
   2d3b8:	ldr	w0, [sp, #100]
   2d3bc:	cmp	w0, #0x0
   2d3c0:	b.ge	2d3cc <udev_util_encode_string@@LIBUDEV_183+0x21b9c>  // b.tcont
   2d3c4:	bl	2b91c <udev_util_encode_string@@LIBUDEV_183+0x200ec>
   2d3c8:	bl	2b87c <udev_util_encode_string@@LIBUDEV_183+0x2004c>
   2d3cc:	ldr	w0, [sp, #100]
   2d3d0:	cmp	w0, #0x0
   2d3d4:	b.gt	2d3f4 <udev_util_encode_string@@LIBUDEV_183+0x21bc4>
   2d3d8:	ldr	x5, [sp, #120]
   2d3dc:	ldr	x4, [sp, #64]
   2d3e0:	ldr	w3, [sp, #76]
   2d3e4:	ldr	x2, [sp, #80]
   2d3e8:	ldr	w1, [sp, #88]
   2d3ec:	ldr	w0, [sp, #92]
   2d3f0:	bl	2c1f4 <udev_util_encode_string@@LIBUDEV_183+0x209c4>
   2d3f4:	ldr	x0, [sp, #104]
   2d3f8:	str	x0, [sp, #120]
   2d3fc:	ldr	x0, [sp, #120]
   2d400:	cmp	x0, #0x0
   2d404:	b.ne	2d1b0 <udev_util_encode_string@@LIBUDEV_183+0x21980>  // b.any
   2d408:	b	2d410 <udev_util_encode_string@@LIBUDEV_183+0x21be0>
   2d40c:	nop
   2d410:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d414:	add	x0, x0, #0x120
   2d418:	ldrb	w0, [x0]
   2d41c:	cmp	w0, #0x0
   2d420:	b.eq	2d428 <udev_util_encode_string@@LIBUDEV_183+0x21bf8>  // b.none
   2d424:	bl	2c110 <udev_util_encode_string@@LIBUDEV_183+0x208e0>
   2d428:	ldr	w0, [sp, #88]
   2d42c:	cmp	w0, #0x0
   2d430:	cneg	w0, w0, lt  // lt = tstop
   2d434:	and	w0, w0, #0xff
   2d438:	neg	w0, w0
   2d43c:	ldp	x29, x30, [sp, #16]
   2d440:	add	sp, sp, #0x70
   2d444:	ret
   2d448:	sub	sp, sp, #0x890
   2d44c:	stp	x29, x30, [sp, #16]
   2d450:	add	x29, sp, #0x10
   2d454:	stp	x19, x20, [sp, #32]
   2d458:	str	w0, [sp, #124]
   2d45c:	str	w1, [sp, #120]
   2d460:	str	x2, [sp, #112]
   2d464:	str	w3, [sp, #108]
   2d468:	str	x4, [sp, #96]
   2d46c:	str	x5, [sp, #88]
   2d470:	mov	x20, x6
   2d474:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d478:	ldr	x0, [x0, #4016]
   2d47c:	ldr	x1, [x0]
   2d480:	str	x1, [sp, #2184]
   2d484:	mov	x1, #0x0                   	// #0
   2d488:	ldr	w0, [sp, #124]
   2d48c:	asr	w0, w0, #10
   2d490:	str	w0, [sp, #132]
   2d494:	bl	57d0 <__errno_location@plt>
   2d498:	ldr	w0, [x0]
   2d49c:	str	w0, [sp, #128]
   2d4a0:	ldr	w0, [sp, #124]
   2d4a4:	and	w1, w0, #0x7
   2d4a8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d4ac:	add	x0, x0, #0xc0
   2d4b0:	ldr	w2, [sp, #132]
   2d4b4:	ldr	w0, [x0, x2, lsl #2]
   2d4b8:	cmp	w1, w0
   2d4bc:	cset	w0, gt
   2d4c0:	and	w0, w0, #0xff
   2d4c4:	and	x0, x0, #0xff
   2d4c8:	cmp	x0, #0x0
   2d4cc:	b.eq	2d4e8 <udev_util_encode_string@@LIBUDEV_183+0x21cb8>  // b.none
   2d4d0:	ldr	w0, [sp, #120]
   2d4d4:	cmp	w0, #0x0
   2d4d8:	cneg	w0, w0, lt  // lt = tstop
   2d4dc:	and	w0, w0, #0xff
   2d4e0:	neg	w19, w0
   2d4e4:	b	2d568 <udev_util_encode_string@@LIBUDEV_183+0x21d38>
   2d4e8:	ldr	w0, [sp, #120]
   2d4ec:	cmp	w0, #0x0
   2d4f0:	cneg	w19, w0, lt  // lt = tstop
   2d4f4:	bl	57d0 <__errno_location@plt>
   2d4f8:	mov	x1, x0
   2d4fc:	and	w0, w19, #0xff
   2d500:	str	w0, [x1]
   2d504:	add	x2, sp, #0x30
   2d508:	mov	x3, x20
   2d50c:	ldp	x0, x1, [x3]
   2d510:	stp	x0, x1, [x2]
   2d514:	ldp	x0, x1, [x3, #16]
   2d518:	stp	x0, x1, [x2, #16]
   2d51c:	add	x1, sp, #0x30
   2d520:	add	x0, sp, #0x88
   2d524:	mov	x3, x1
   2d528:	ldr	x2, [sp, #88]
   2d52c:	mov	x1, #0x800                 	// #2048
   2d530:	bl	5730 <vsnprintf@plt>
   2d534:	add	x0, sp, #0x88
   2d538:	str	x0, [sp, #8]
   2d53c:	str	xzr, [sp]
   2d540:	mov	x7, #0x0                   	// #0
   2d544:	mov	x6, #0x0                   	// #0
   2d548:	mov	x5, #0x0                   	// #0
   2d54c:	ldr	x4, [sp, #96]
   2d550:	ldr	w3, [sp, #108]
   2d554:	ldr	x2, [sp, #112]
   2d558:	ldr	w1, [sp, #120]
   2d55c:	ldr	w0, [sp, #124]
   2d560:	bl	2d0d4 <udev_util_encode_string@@LIBUDEV_183+0x218a4>
   2d564:	mov	w19, w0
   2d568:	add	x0, sp, #0x80
   2d56c:	bl	2b5dc <udev_util_encode_string@@LIBUDEV_183+0x1fdac>
   2d570:	mov	w1, w19
   2d574:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d578:	ldr	x0, [x0, #4016]
   2d57c:	ldr	x2, [sp, #2184]
   2d580:	ldr	x0, [x0]
   2d584:	eor	x0, x2, x0
   2d588:	cmp	x0, #0x0
   2d58c:	b.eq	2d594 <udev_util_encode_string@@LIBUDEV_183+0x21d64>  // b.none
   2d590:	bl	5390 <__stack_chk_fail@plt>
   2d594:	mov	w0, w1
   2d598:	ldp	x19, x20, [sp, #32]
   2d59c:	ldp	x29, x30, [sp, #16]
   2d5a0:	add	sp, sp, #0x890
   2d5a4:	ret
   2d5a8:	stp	x29, x30, [sp, #-288]!
   2d5ac:	mov	x29, sp
   2d5b0:	str	w0, [sp, #92]
   2d5b4:	str	w1, [sp, #88]
   2d5b8:	str	x2, [sp, #80]
   2d5bc:	str	w3, [sp, #76]
   2d5c0:	str	x4, [sp, #64]
   2d5c4:	str	x5, [sp, #56]
   2d5c8:	str	x6, [sp, #272]
   2d5cc:	str	x7, [sp, #280]
   2d5d0:	str	q0, [sp, #144]
   2d5d4:	str	q1, [sp, #160]
   2d5d8:	str	q2, [sp, #176]
   2d5dc:	str	q3, [sp, #192]
   2d5e0:	str	q4, [sp, #208]
   2d5e4:	str	q5, [sp, #224]
   2d5e8:	str	q6, [sp, #240]
   2d5ec:	str	q7, [sp, #256]
   2d5f0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d5f4:	ldr	x0, [x0, #4016]
   2d5f8:	ldr	x1, [x0]
   2d5fc:	str	x1, [sp, #136]
   2d600:	mov	x1, #0x0                   	// #0
   2d604:	add	x0, sp, #0x120
   2d608:	str	x0, [sp, #104]
   2d60c:	add	x0, sp, #0x120
   2d610:	str	x0, [sp, #112]
   2d614:	add	x0, sp, #0x110
   2d618:	str	x0, [sp, #120]
   2d61c:	mov	w0, #0xfffffff0            	// #-16
   2d620:	str	w0, [sp, #128]
   2d624:	mov	w0, #0xffffff80            	// #-128
   2d628:	str	w0, [sp, #132]
   2d62c:	add	x2, sp, #0x10
   2d630:	add	x3, sp, #0x68
   2d634:	ldp	x0, x1, [x3]
   2d638:	stp	x0, x1, [x2]
   2d63c:	ldp	x0, x1, [x3, #16]
   2d640:	stp	x0, x1, [x2, #16]
   2d644:	add	x0, sp, #0x10
   2d648:	mov	x6, x0
   2d64c:	ldr	x5, [sp, #56]
   2d650:	ldr	x4, [sp, #64]
   2d654:	ldr	w3, [sp, #76]
   2d658:	ldr	x2, [sp, #80]
   2d65c:	ldr	w1, [sp, #88]
   2d660:	ldr	w0, [sp, #92]
   2d664:	bl	2d448 <udev_util_encode_string@@LIBUDEV_183+0x21c18>
   2d668:	str	w0, [sp, #100]
   2d66c:	ldr	w0, [sp, #100]
   2d670:	mov	w1, w0
   2d674:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d678:	ldr	x0, [x0, #4016]
   2d67c:	ldr	x2, [sp, #136]
   2d680:	ldr	x0, [x0]
   2d684:	eor	x0, x2, x0
   2d688:	cmp	x0, #0x0
   2d68c:	b.eq	2d694 <udev_util_encode_string@@LIBUDEV_183+0x21e64>  // b.none
   2d690:	bl	5390 <__stack_chk_fail@plt>
   2d694:	mov	w0, w1
   2d698:	ldp	x29, x30, [sp], #288
   2d69c:	ret
   2d6a0:	stp	x29, x30, [sp, #-208]!
   2d6a4:	mov	x29, sp
   2d6a8:	stp	x19, x20, [sp, #16]
   2d6ac:	sub	sp, sp, #0x10
   2d6b0:	str	w0, [x29, #140]
   2d6b4:	str	w1, [x29, #136]
   2d6b8:	str	x2, [x29, #128]
   2d6bc:	str	w3, [x29, #124]
   2d6c0:	str	x4, [x29, #112]
   2d6c4:	str	x5, [x29, #104]
   2d6c8:	str	x6, [x29, #96]
   2d6cc:	str	x7, [x29, #88]
   2d6d0:	ldr	x20, [x29, #224]
   2d6d4:	ldr	x0, [x29, #208]
   2d6d8:	str	x0, [x29, #80]
   2d6dc:	ldr	x0, [x29, #216]
   2d6e0:	str	x0, [x29, #72]
   2d6e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d6e8:	ldr	x0, [x0, #4016]
   2d6ec:	ldr	x1, [x0]
   2d6f0:	str	x1, [x29, #200]
   2d6f4:	mov	x1, #0x0                   	// #0
   2d6f8:	bl	57d0 <__errno_location@plt>
   2d6fc:	ldr	w0, [x0]
   2d700:	str	w0, [x29, #156]
   2d704:	ldr	w0, [x29, #140]
   2d708:	and	w1, w0, #0x7
   2d70c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2d710:	add	x0, x0, #0xc0
   2d714:	ldr	w0, [x0]
   2d718:	cmp	w1, w0
   2d71c:	cset	w0, gt
   2d720:	and	w0, w0, #0xff
   2d724:	and	x0, x0, #0xff
   2d728:	cmp	x0, #0x0
   2d72c:	b.eq	2d748 <udev_util_encode_string@@LIBUDEV_183+0x21f18>  // b.none
   2d730:	ldr	w0, [x29, #136]
   2d734:	cmp	w0, #0x0
   2d738:	cneg	w0, w0, lt  // lt = tstop
   2d73c:	and	w0, w0, #0xff
   2d740:	neg	w19, w0
   2d744:	b	2d998 <udev_util_encode_string@@LIBUDEV_183+0x22168>
   2d748:	ldr	w0, [x29, #136]
   2d74c:	cmp	w0, #0x0
   2d750:	cneg	w19, w0, lt  // lt = tstop
   2d754:	bl	57d0 <__errno_location@plt>
   2d758:	mov	x1, x0
   2d75c:	and	w0, w19, #0xff
   2d760:	str	w0, [x1]
   2d764:	ldr	x0, [x29, #96]
   2d768:	cmp	x0, #0x0
   2d76c:	b.eq	2d870 <udev_util_encode_string@@LIBUDEV_183+0x22040>  // b.none
   2d770:	ldr	x0, [x29, #96]
   2d774:	bl	5040 <strlen@plt>
   2d778:	str	x0, [x29, #184]
   2d77c:	ldr	x0, [x29, #184]
   2d780:	add	x0, x0, #0x802
   2d784:	str	x0, [x29, #192]
   2d788:	ldr	x1, [x29, #192]
   2d78c:	mov	x0, #0x1                   	// #1
   2d790:	bl	2b560 <udev_util_encode_string@@LIBUDEV_183+0x1fd30>
   2d794:	and	w0, w0, #0xff
   2d798:	and	x0, x0, #0xff
   2d79c:	cmp	x0, #0x0
   2d7a0:	b.eq	2d7cc <udev_util_encode_string@@LIBUDEV_183+0x21f9c>  // b.none
   2d7a4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d7a8:	add	x1, x0, #0x713
   2d7ac:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d7b0:	add	x4, x0, #0xff0
   2d7b4:	mov	w3, #0x2e8                 	// #744
   2d7b8:	mov	x2, x1
   2d7bc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d7c0:	add	x1, x0, #0x988
   2d7c4:	mov	w0, #0x0                   	// #0
   2d7c8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2d7cc:	ldr	x0, [x29, #192]
   2d7d0:	cmp	x0, #0x400, lsl #12
   2d7d4:	cset	w0, hi  // hi = pmore
   2d7d8:	and	w0, w0, #0xff
   2d7dc:	and	x0, x0, #0xff
   2d7e0:	cmp	x0, #0x0
   2d7e4:	b.eq	2d810 <udev_util_encode_string@@LIBUDEV_183+0x21fe0>  // b.none
   2d7e8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d7ec:	add	x1, x0, #0x713
   2d7f0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d7f4:	add	x4, x0, #0xff0
   2d7f8:	mov	w3, #0x2e8                 	// #744
   2d7fc:	mov	x2, x1
   2d800:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d804:	add	x1, x0, #0x9b8
   2d808:	mov	w0, #0x0                   	// #0
   2d80c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2d810:	ldr	x0, [x29, #192]
   2d814:	add	x0, x0, #0xf
   2d818:	lsr	x0, x0, #4
   2d81c:	lsl	x0, x0, #4
   2d820:	sub	sp, sp, x0
   2d824:	add	x0, sp, #0x10
   2d828:	add	x0, x0, #0xf
   2d82c:	lsr	x0, x0, #4
   2d830:	lsl	x0, x0, #4
   2d834:	str	x0, [x29, #160]
   2d838:	ldr	x1, [x29, #96]
   2d83c:	ldr	x0, [x29, #160]
   2d840:	bl	51b0 <stpcpy@plt>
   2d844:	mov	x2, x0
   2d848:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d84c:	add	x1, x0, #0x9d8
   2d850:	mov	x0, x2
   2d854:	ldrh	w3, [x1]
   2d858:	strh	w3, [x0]
   2d85c:	ldrb	w1, [x1, #2]
   2d860:	strb	w1, [x0, #2]
   2d864:	add	x0, x2, #0x2
   2d868:	str	x0, [x29, #168]
   2d86c:	b	2d930 <udev_util_encode_string@@LIBUDEV_183+0x22100>
   2d870:	mov	x0, #0x800                 	// #2048
   2d874:	str	x0, [x29, #176]
   2d878:	ldr	x1, [x29, #176]
   2d87c:	mov	x0, #0x1                   	// #1
   2d880:	bl	2b560 <udev_util_encode_string@@LIBUDEV_183+0x1fd30>
   2d884:	and	w0, w0, #0xff
   2d888:	and	x0, x0, #0xff
   2d88c:	cmp	x0, #0x0
   2d890:	b.eq	2d8bc <udev_util_encode_string@@LIBUDEV_183+0x2208c>  // b.none
   2d894:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d898:	add	x1, x0, #0x713
   2d89c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d8a0:	add	x4, x0, #0xff0
   2d8a4:	mov	w3, #0x2eb                 	// #747
   2d8a8:	mov	x2, x1
   2d8ac:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d8b0:	add	x1, x0, #0x988
   2d8b4:	mov	w0, #0x0                   	// #0
   2d8b8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2d8bc:	ldr	x0, [x29, #176]
   2d8c0:	cmp	x0, #0x400, lsl #12
   2d8c4:	cset	w0, hi  // hi = pmore
   2d8c8:	and	w0, w0, #0xff
   2d8cc:	and	x0, x0, #0xff
   2d8d0:	cmp	x0, #0x0
   2d8d4:	b.eq	2d900 <udev_util_encode_string@@LIBUDEV_183+0x220d0>  // b.none
   2d8d8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d8dc:	add	x1, x0, #0x713
   2d8e0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d8e4:	add	x4, x0, #0xff0
   2d8e8:	mov	w3, #0x2eb                 	// #747
   2d8ec:	mov	x2, x1
   2d8f0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2d8f4:	add	x1, x0, #0x9b8
   2d8f8:	mov	w0, #0x0                   	// #0
   2d8fc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2d900:	ldr	x0, [x29, #176]
   2d904:	add	x0, x0, #0xf
   2d908:	lsr	x0, x0, #4
   2d90c:	lsl	x0, x0, #4
   2d910:	sub	sp, sp, x0
   2d914:	add	x0, sp, #0x10
   2d918:	add	x0, x0, #0xf
   2d91c:	lsr	x0, x0, #4
   2d920:	lsl	x0, x0, #4
   2d924:	str	x0, [x29, #160]
   2d928:	ldr	x0, [x29, #160]
   2d92c:	str	x0, [x29, #168]
   2d930:	add	x2, x29, #0x20
   2d934:	mov	x3, x20
   2d938:	ldp	x0, x1, [x3]
   2d93c:	stp	x0, x1, [x2]
   2d940:	ldp	x0, x1, [x3, #16]
   2d944:	stp	x0, x1, [x2, #16]
   2d948:	add	x0, x29, #0x20
   2d94c:	mov	x3, x0
   2d950:	ldr	x2, [x29, #72]
   2d954:	mov	x1, #0x800                 	// #2048
   2d958:	ldr	x0, [x29, #168]
   2d95c:	bl	5730 <vsnprintf@plt>
   2d960:	ldr	x0, [x29, #160]
   2d964:	str	x0, [sp, #8]
   2d968:	ldr	x0, [x29, #80]
   2d96c:	str	x0, [sp]
   2d970:	ldr	x7, [x29, #88]
   2d974:	ldr	x6, [x29, #96]
   2d978:	ldr	x5, [x29, #104]
   2d97c:	ldr	x4, [x29, #112]
   2d980:	ldr	w3, [x29, #124]
   2d984:	ldr	x2, [x29, #128]
   2d988:	ldr	w1, [x29, #136]
   2d98c:	ldr	w0, [x29, #140]
   2d990:	bl	2d0d4 <udev_util_encode_string@@LIBUDEV_183+0x218a4>
   2d994:	mov	w19, w0
   2d998:	add	x0, x29, #0x9c
   2d99c:	bl	2b5dc <udev_util_encode_string@@LIBUDEV_183+0x1fdac>
   2d9a0:	mov	w1, w19
   2d9a4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2d9a8:	ldr	x0, [x0, #4016]
   2d9ac:	ldr	x2, [x29, #200]
   2d9b0:	ldr	x0, [x0]
   2d9b4:	eor	x0, x2, x0
   2d9b8:	cmp	x0, #0x0
   2d9bc:	b.eq	2d9c4 <udev_util_encode_string@@LIBUDEV_183+0x22194>  // b.none
   2d9c0:	bl	5390 <__stack_chk_fail@plt>
   2d9c4:	mov	w0, w1
   2d9c8:	mov	sp, x29
   2d9cc:	ldp	x19, x20, [sp, #16]
   2d9d0:	ldp	x29, x30, [sp], #208
   2d9d4:	ret
   2d9d8:	sub	sp, sp, #0x150
   2d9dc:	stp	x29, x30, [sp, #32]
   2d9e0:	add	x29, sp, #0x20
   2d9e4:	str	w0, [sp, #156]
   2d9e8:	str	w1, [sp, #152]
   2d9ec:	str	x2, [sp, #144]
   2d9f0:	str	w3, [sp, #140]
   2d9f4:	str	x4, [sp, #128]
   2d9f8:	str	x5, [sp, #120]
   2d9fc:	str	x6, [sp, #112]
   2da00:	str	x7, [sp, #104]
   2da04:	str	q0, [sp, #208]
   2da08:	str	q1, [sp, #224]
   2da0c:	str	q2, [sp, #240]
   2da10:	str	q3, [sp, #256]
   2da14:	str	q4, [sp, #272]
   2da18:	str	q5, [sp, #288]
   2da1c:	str	q6, [sp, #304]
   2da20:	str	q7, [sp, #320]
   2da24:	ldr	x0, [sp, #336]
   2da28:	str	x0, [sp, #96]
   2da2c:	ldr	x0, [sp, #344]
   2da30:	str	x0, [sp, #88]
   2da34:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2da38:	ldr	x0, [x0, #4016]
   2da3c:	ldr	x1, [x0]
   2da40:	str	x1, [sp, #200]
   2da44:	mov	x1, #0x0                   	// #0
   2da48:	add	x0, sp, #0x160
   2da4c:	str	x0, [sp, #168]
   2da50:	add	x0, sp, #0x150
   2da54:	str	x0, [sp, #176]
   2da58:	add	x0, sp, #0x150
   2da5c:	str	x0, [sp, #184]
   2da60:	str	wzr, [sp, #192]
   2da64:	mov	w0, #0xffffff80            	// #-128
   2da68:	str	w0, [sp, #196]
   2da6c:	add	x2, sp, #0x30
   2da70:	add	x3, sp, #0xa8
   2da74:	ldp	x0, x1, [x3]
   2da78:	stp	x0, x1, [x2]
   2da7c:	ldp	x0, x1, [x3, #16]
   2da80:	stp	x0, x1, [x2, #16]
   2da84:	add	x0, sp, #0x30
   2da88:	str	x0, [sp, #16]
   2da8c:	ldr	x0, [sp, #88]
   2da90:	str	x0, [sp, #8]
   2da94:	ldr	x0, [sp, #96]
   2da98:	str	x0, [sp]
   2da9c:	ldr	x7, [sp, #104]
   2daa0:	ldr	x6, [sp, #112]
   2daa4:	ldr	x5, [sp, #120]
   2daa8:	ldr	x4, [sp, #128]
   2daac:	ldr	w3, [sp, #140]
   2dab0:	ldr	x2, [sp, #144]
   2dab4:	ldr	w1, [sp, #152]
   2dab8:	ldr	w0, [sp, #156]
   2dabc:	bl	2d6a0 <udev_util_encode_string@@LIBUDEV_183+0x21e70>
   2dac0:	str	w0, [sp, #164]
   2dac4:	ldr	w0, [sp, #164]
   2dac8:	mov	w1, w0
   2dacc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2dad0:	ldr	x0, [x0, #4016]
   2dad4:	ldr	x2, [sp, #200]
   2dad8:	ldr	x0, [x0]
   2dadc:	eor	x0, x2, x0
   2dae0:	cmp	x0, #0x0
   2dae4:	b.eq	2daec <udev_util_encode_string@@LIBUDEV_183+0x222bc>  // b.none
   2dae8:	bl	5390 <__stack_chk_fail@plt>
   2daec:	mov	w0, w1
   2daf0:	ldp	x29, x30, [sp, #32]
   2daf4:	add	sp, sp, #0x150
   2daf8:	ret
   2dafc:	sub	sp, sp, #0x60
   2db00:	stp	x29, x30, [sp, #16]
   2db04:	add	x29, sp, #0x10
   2db08:	str	w0, [sp, #76]
   2db0c:	str	x1, [sp, #64]
   2db10:	str	x2, [sp, #56]
   2db14:	str	w3, [sp, #72]
   2db18:	str	x4, [sp, #48]
   2db1c:	str	x5, [sp, #40]
   2db20:	ldr	w0, [sp, #76]
   2db24:	asr	w0, w0, #10
   2db28:	str	w0, [sp, #92]
   2db2c:	ldr	w0, [sp, #76]
   2db30:	and	w1, w0, #0x7
   2db34:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2db38:	add	x0, x0, #0xc0
   2db3c:	ldr	w2, [sp, #92]
   2db40:	ldr	w0, [x0, x2, lsl #2]
   2db44:	cmp	w1, w0
   2db48:	cset	w0, gt
   2db4c:	and	w0, w0, #0xff
   2db50:	and	x0, x0, #0xff
   2db54:	cmp	x0, #0x0
   2db58:	b.ne	2dbcc <udev_util_encode_string@@LIBUDEV_183+0x2239c>  // b.any
   2db5c:	ldr	x6, [sp, #48]
   2db60:	ldr	w5, [sp, #72]
   2db64:	ldr	x4, [sp, #56]
   2db68:	ldr	x3, [sp, #64]
   2db6c:	ldr	x2, [sp, #40]
   2db70:	mov	x1, #0x800                 	// #2048
   2db74:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2db78:	add	x0, x0, #0x130
   2db7c:	bl	5190 <snprintf@plt>
   2db80:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2db84:	add	x0, x0, #0x128
   2db88:	adrp	x1, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2db8c:	add	x1, x1, #0x130
   2db90:	str	x1, [x0]
   2db94:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2db98:	add	x0, x0, #0x130
   2db9c:	str	x0, [sp, #8]
   2dba0:	str	xzr, [sp]
   2dba4:	mov	x7, #0x0                   	// #0
   2dba8:	mov	x6, #0x0                   	// #0
   2dbac:	mov	x5, #0x0                   	// #0
   2dbb0:	ldr	x4, [sp, #48]
   2dbb4:	ldr	w3, [sp, #72]
   2dbb8:	ldr	x2, [sp, #56]
   2dbbc:	mov	w1, #0x0                   	// #0
   2dbc0:	ldr	w0, [sp, #76]
   2dbc4:	bl	2d0d4 <udev_util_encode_string@@LIBUDEV_183+0x218a4>
   2dbc8:	b	2dbd0 <udev_util_encode_string@@LIBUDEV_183+0x223a0>
   2dbcc:	nop
   2dbd0:	ldp	x29, x30, [sp, #16]
   2dbd4:	add	sp, sp, #0x60
   2dbd8:	ret
   2dbdc:	stp	x29, x30, [sp, #-48]!
   2dbe0:	mov	x29, sp
   2dbe4:	str	w0, [sp, #44]
   2dbe8:	str	x1, [sp, #32]
   2dbec:	str	x2, [sp, #24]
   2dbf0:	str	w3, [sp, #40]
   2dbf4:	str	x4, [sp, #16]
   2dbf8:	bl	2bf1c <udev_util_encode_string@@LIBUDEV_183+0x206ec>
   2dbfc:	ldr	w0, [sp, #44]
   2dc00:	lsl	w0, w0, #10
   2dc04:	orr	w0, w0, #0x2
   2dc08:	mov	w6, w0
   2dc0c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2dc10:	add	x5, x0, #0x9e0
   2dc14:	ldr	x4, [sp, #16]
   2dc18:	ldr	w3, [sp, #40]
   2dc1c:	ldr	x2, [sp, #24]
   2dc20:	ldr	x1, [sp, #32]
   2dc24:	mov	w0, w6
   2dc28:	bl	2dafc <udev_util_encode_string@@LIBUDEV_183+0x222cc>
   2dc2c:	bl	53d0 <abort@plt>
   2dc30:	stp	x29, x30, [sp, #-48]!
   2dc34:	mov	x29, sp
   2dc38:	str	w0, [sp, #44]
   2dc3c:	str	x1, [sp, #32]
   2dc40:	str	x2, [sp, #24]
   2dc44:	str	w3, [sp, #40]
   2dc48:	str	x4, [sp, #16]
   2dc4c:	bl	2bf1c <udev_util_encode_string@@LIBUDEV_183+0x206ec>
   2dc50:	ldr	w0, [sp, #44]
   2dc54:	lsl	w0, w0, #10
   2dc58:	orr	w0, w0, #0x2
   2dc5c:	mov	w6, w0
   2dc60:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2dc64:	add	x5, x0, #0xa20
   2dc68:	ldr	x4, [sp, #16]
   2dc6c:	ldr	w3, [sp, #40]
   2dc70:	ldr	x2, [sp, #24]
   2dc74:	ldr	x1, [sp, #32]
   2dc78:	mov	w0, w6
   2dc7c:	bl	2dafc <udev_util_encode_string@@LIBUDEV_183+0x222cc>
   2dc80:	bl	53d0 <abort@plt>
   2dc84:	stp	x29, x30, [sp, #-64]!
   2dc88:	mov	x29, sp
   2dc8c:	str	w0, [sp, #44]
   2dc90:	str	x1, [sp, #32]
   2dc94:	str	x2, [sp, #24]
   2dc98:	str	w3, [sp, #40]
   2dc9c:	str	x4, [sp, #16]
   2dca0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2dca4:	ldr	x0, [x0, #4016]
   2dca8:	ldr	x1, [x0]
   2dcac:	str	x1, [sp, #56]
   2dcb0:	mov	x1, #0x0                   	// #0
   2dcb4:	bl	57d0 <__errno_location@plt>
   2dcb8:	ldr	w0, [x0]
   2dcbc:	str	w0, [sp, #52]
   2dcc0:	ldr	w0, [sp, #44]
   2dcc4:	lsl	w0, w0, #10
   2dcc8:	orr	w0, w0, #0x7
   2dccc:	mov	w6, w0
   2dcd0:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2dcd4:	add	x5, x0, #0xa68
   2dcd8:	ldr	x4, [sp, #16]
   2dcdc:	ldr	w3, [sp, #40]
   2dce0:	ldr	x2, [sp, #24]
   2dce4:	ldr	x1, [sp, #32]
   2dce8:	mov	w0, w6
   2dcec:	bl	2dafc <udev_util_encode_string@@LIBUDEV_183+0x222cc>
   2dcf0:	add	x0, sp, #0x34
   2dcf4:	bl	2b5dc <udev_util_encode_string@@LIBUDEV_183+0x1fdac>
   2dcf8:	nop
   2dcfc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2dd00:	ldr	x0, [x0, #4016]
   2dd04:	ldr	x1, [sp, #56]
   2dd08:	ldr	x0, [x0]
   2dd0c:	eor	x0, x1, x0
   2dd10:	cmp	x0, #0x0
   2dd14:	b.eq	2dd1c <udev_util_encode_string@@LIBUDEV_183+0x224ec>  // b.none
   2dd18:	bl	5390 <__stack_chk_fail@plt>
   2dd1c:	ldp	x29, x30, [sp], #64
   2dd20:	ret
   2dd24:	sub	sp, sp, #0x2d0
   2dd28:	stp	x29, x30, [sp]
   2dd2c:	mov	x29, sp
   2dd30:	stp	x19, x20, [sp, #16]
   2dd34:	str	x21, [sp, #32]
   2dd38:	str	x0, [sp, #120]
   2dd3c:	str	x1, [sp, #112]
   2dd40:	str	x2, [sp, #104]
   2dd44:	strb	w3, [sp, #103]
   2dd48:	str	w4, [sp, #96]
   2dd4c:	str	x5, [sp, #88]
   2dd50:	mov	x19, x6
   2dd54:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2dd58:	ldr	x0, [x0, #4016]
   2dd5c:	ldr	x1, [x0]
   2dd60:	str	x1, [sp, #712]
   2dd64:	mov	x1, #0x0                   	// #0
   2dd68:	b	2e2bc <udev_util_encode_string@@LIBUDEV_183+0x22a8c>
   2dd6c:	ldr	w0, [sp, #96]
   2dd70:	cmp	w0, #0x0
   2dd74:	cneg	w20, w0, lt  // lt = tstop
   2dd78:	bl	57d0 <__errno_location@plt>
   2dd7c:	mov	x1, x0
   2dd80:	and	w0, w20, #0xff
   2dd84:	str	w0, [x1]
   2dd88:	add	x2, sp, #0xa8
   2dd8c:	mov	x3, x19
   2dd90:	ldp	x0, x1, [x3]
   2dd94:	stp	x0, x1, [x2]
   2dd98:	ldp	x0, x1, [x3, #16]
   2dd9c:	stp	x0, x1, [x2, #16]
   2dda0:	add	x2, sp, #0x30
   2dda4:	add	x3, sp, #0xa8
   2dda8:	ldp	x0, x1, [x3]
   2ddac:	stp	x0, x1, [x2]
   2ddb0:	ldp	x0, x1, [x3, #16]
   2ddb4:	stp	x0, x1, [x2, #16]
   2ddb8:	add	x1, sp, #0x30
   2ddbc:	add	x0, sp, #0x90
   2ddc0:	mov	x2, x1
   2ddc4:	ldr	x1, [sp, #88]
   2ddc8:	bl	5530 <vasprintf@plt>
   2ddcc:	str	w0, [sp, #140]
   2ddd0:	ldr	w0, [sp, #140]
   2ddd4:	cmp	w0, #0x0
   2ddd8:	b.ge	2dde4 <udev_util_encode_string@@LIBUDEV_183+0x225b4>  // b.tcont
   2dddc:	mov	w0, #0xffffffea            	// #-22
   2dde0:	b	2e2e4 <udev_util_encode_string@@LIBUDEV_183+0x22ab4>
   2dde4:	add	x0, sp, #0xc8
   2dde8:	mov	x2, x0
   2ddec:	mov	x1, #0x80                  	// #128
   2ddf0:	ldr	x0, [sp, #88]
   2ddf4:	bl	5710 <parse_printf_format@plt>
   2ddf8:	str	x0, [sp, #160]
   2ddfc:	ldr	x0, [sp, #160]
   2de00:	cmp	x0, #0x7f
   2de04:	cset	w0, hi  // hi = pmore
   2de08:	and	w0, w0, #0xff
   2de0c:	and	x0, x0, #0xff
   2de10:	cmp	x0, #0x0
   2de14:	b.eq	2de40 <udev_util_encode_string@@LIBUDEV_183+0x22610>  // b.none
   2de18:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2de1c:	add	x1, x0, #0x713
   2de20:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2de24:	add	x4, x0, #0x8
   2de28:	mov	w3, #0x366                 	// #870
   2de2c:	mov	x2, x1
   2de30:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2de34:	add	x1, x0, #0xab8
   2de38:	mov	w0, #0x0                   	// #0
   2de3c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2de40:	str	xzr, [sp, #152]
   2de44:	b	2e1d8 <udev_util_encode_string@@LIBUDEV_183+0x229a8>
   2de48:	ldr	x0, [sp, #152]
   2de4c:	lsl	x0, x0, #2
   2de50:	add	x1, sp, #0xc8
   2de54:	ldr	w0, [x1, x0]
   2de58:	and	w0, w0, #0x800
   2de5c:	cmp	w0, #0x0
   2de60:	b.eq	2deb8 <udev_util_encode_string@@LIBUDEV_183+0x22688>  // b.none
   2de64:	ldr	w1, [x19, #24]
   2de68:	ldr	x0, [x19]
   2de6c:	cmp	w1, #0x0
   2de70:	b.lt	2de84 <udev_util_encode_string@@LIBUDEV_183+0x22654>  // b.tstop
   2de74:	add	x0, x0, #0xf
   2de78:	and	x0, x0, #0xfffffffffffffff8
   2de7c:	str	x0, [x19]
   2de80:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2de84:	add	w2, w1, #0x8
   2de88:	str	w2, [x19, #24]
   2de8c:	ldr	w2, [x19, #24]
   2de90:	cmp	w2, #0x0
   2de94:	b.le	2dea8 <udev_util_encode_string@@LIBUDEV_183+0x22678>
   2de98:	add	x0, x0, #0xf
   2de9c:	and	x0, x0, #0xfffffffffffffff8
   2dea0:	str	x0, [x19]
   2dea4:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2dea8:	ldr	x2, [x19, #8]
   2deac:	sxtw	x0, w1
   2deb0:	add	x0, x2, x0
   2deb4:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2deb8:	ldr	x0, [sp, #152]
   2debc:	lsl	x0, x0, #2
   2dec0:	add	x1, sp, #0xc8
   2dec4:	ldr	w0, [x1, x0]
   2dec8:	cmp	w0, #0x400
   2decc:	b.eq	2df48 <udev_util_encode_string@@LIBUDEV_183+0x22718>  // b.none
   2ded0:	cmp	w0, #0x400
   2ded4:	b.gt	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2ded8:	cmp	w0, #0x200
   2dedc:	b.eq	2df9c <udev_util_encode_string@@LIBUDEV_183+0x2276c>  // b.none
   2dee0:	cmp	w0, #0x200
   2dee4:	b.gt	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2dee8:	cmp	w0, #0x107
   2deec:	b.eq	2e140 <udev_util_encode_string@@LIBUDEV_183+0x22910>  // b.none
   2def0:	cmp	w0, #0x107
   2def4:	b.gt	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2def8:	cmp	w0, #0x100
   2defc:	b.eq	2dff0 <udev_util_encode_string@@LIBUDEV_183+0x227c0>  // b.none
   2df00:	cmp	w0, #0x100
   2df04:	b.gt	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2df08:	cmp	w0, #0x7
   2df0c:	b.gt	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2df10:	cmp	w0, #0x6
   2df14:	b.ge	2e0ec <udev_util_encode_string@@LIBUDEV_183+0x228bc>  // b.tcont
   2df18:	cmp	w0, #0x5
   2df1c:	b.gt	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2df20:	cmp	w0, #0x3
   2df24:	b.ge	2e098 <udev_util_encode_string@@LIBUDEV_183+0x22868>  // b.tcont
   2df28:	cmp	w0, #0x1
   2df2c:	b.gt	2df3c <udev_util_encode_string@@LIBUDEV_183+0x2270c>
   2df30:	cmp	w0, #0x0
   2df34:	b.ge	2df48 <udev_util_encode_string@@LIBUDEV_183+0x22718>  // b.tcont
   2df38:	b	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2df3c:	cmp	w0, #0x2
   2df40:	b.eq	2e044 <udev_util_encode_string@@LIBUDEV_183+0x22814>  // b.none
   2df44:	b	2e1a4 <udev_util_encode_string@@LIBUDEV_183+0x22974>
   2df48:	ldr	w1, [x19, #24]
   2df4c:	ldr	x0, [x19]
   2df50:	cmp	w1, #0x0
   2df54:	b.lt	2df68 <udev_util_encode_string@@LIBUDEV_183+0x22738>  // b.tstop
   2df58:	add	x0, x0, #0xb
   2df5c:	and	x0, x0, #0xfffffffffffffff8
   2df60:	str	x0, [x19]
   2df64:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2df68:	add	w2, w1, #0x8
   2df6c:	str	w2, [x19, #24]
   2df70:	ldr	w2, [x19, #24]
   2df74:	cmp	w2, #0x0
   2df78:	b.le	2df8c <udev_util_encode_string@@LIBUDEV_183+0x2275c>
   2df7c:	add	x0, x0, #0xb
   2df80:	and	x0, x0, #0xfffffffffffffff8
   2df84:	str	x0, [x19]
   2df88:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2df8c:	ldr	x2, [x19, #8]
   2df90:	sxtw	x0, w1
   2df94:	add	x0, x2, x0
   2df98:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2df9c:	ldr	w1, [x19, #24]
   2dfa0:	ldr	x0, [x19]
   2dfa4:	cmp	w1, #0x0
   2dfa8:	b.lt	2dfbc <udev_util_encode_string@@LIBUDEV_183+0x2278c>  // b.tstop
   2dfac:	add	x0, x0, #0xf
   2dfb0:	and	x0, x0, #0xfffffffffffffff8
   2dfb4:	str	x0, [x19]
   2dfb8:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2dfbc:	add	w2, w1, #0x8
   2dfc0:	str	w2, [x19, #24]
   2dfc4:	ldr	w2, [x19, #24]
   2dfc8:	cmp	w2, #0x0
   2dfcc:	b.le	2dfe0 <udev_util_encode_string@@LIBUDEV_183+0x227b0>
   2dfd0:	add	x0, x0, #0xf
   2dfd4:	and	x0, x0, #0xfffffffffffffff8
   2dfd8:	str	x0, [x19]
   2dfdc:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2dfe0:	ldr	x2, [x19, #8]
   2dfe4:	sxtw	x0, w1
   2dfe8:	add	x0, x2, x0
   2dfec:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2dff0:	ldr	w1, [x19, #24]
   2dff4:	ldr	x0, [x19]
   2dff8:	cmp	w1, #0x0
   2dffc:	b.lt	2e010 <udev_util_encode_string@@LIBUDEV_183+0x227e0>  // b.tstop
   2e000:	add	x0, x0, #0xf
   2e004:	and	x0, x0, #0xfffffffffffffff8
   2e008:	str	x0, [x19]
   2e00c:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e010:	add	w2, w1, #0x8
   2e014:	str	w2, [x19, #24]
   2e018:	ldr	w2, [x19, #24]
   2e01c:	cmp	w2, #0x0
   2e020:	b.le	2e034 <udev_util_encode_string@@LIBUDEV_183+0x22804>
   2e024:	add	x0, x0, #0xf
   2e028:	and	x0, x0, #0xfffffffffffffff8
   2e02c:	str	x0, [x19]
   2e030:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e034:	ldr	x2, [x19, #8]
   2e038:	sxtw	x0, w1
   2e03c:	add	x0, x2, x0
   2e040:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e044:	ldr	w1, [x19, #24]
   2e048:	ldr	x0, [x19]
   2e04c:	cmp	w1, #0x0
   2e050:	b.lt	2e064 <udev_util_encode_string@@LIBUDEV_183+0x22834>  // b.tstop
   2e054:	add	x0, x0, #0xb
   2e058:	and	x0, x0, #0xfffffffffffffff8
   2e05c:	str	x0, [x19]
   2e060:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e064:	add	w2, w1, #0x8
   2e068:	str	w2, [x19, #24]
   2e06c:	ldr	w2, [x19, #24]
   2e070:	cmp	w2, #0x0
   2e074:	b.le	2e088 <udev_util_encode_string@@LIBUDEV_183+0x22858>
   2e078:	add	x0, x0, #0xb
   2e07c:	and	x0, x0, #0xfffffffffffffff8
   2e080:	str	x0, [x19]
   2e084:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e088:	ldr	x2, [x19, #8]
   2e08c:	sxtw	x0, w1
   2e090:	add	x0, x2, x0
   2e094:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e098:	ldr	w1, [x19, #24]
   2e09c:	ldr	x0, [x19]
   2e0a0:	cmp	w1, #0x0
   2e0a4:	b.lt	2e0b8 <udev_util_encode_string@@LIBUDEV_183+0x22888>  // b.tstop
   2e0a8:	add	x0, x0, #0xf
   2e0ac:	and	x0, x0, #0xfffffffffffffff8
   2e0b0:	str	x0, [x19]
   2e0b4:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e0b8:	add	w2, w1, #0x8
   2e0bc:	str	w2, [x19, #24]
   2e0c0:	ldr	w2, [x19, #24]
   2e0c4:	cmp	w2, #0x0
   2e0c8:	b.le	2e0dc <udev_util_encode_string@@LIBUDEV_183+0x228ac>
   2e0cc:	add	x0, x0, #0xf
   2e0d0:	and	x0, x0, #0xfffffffffffffff8
   2e0d4:	str	x0, [x19]
   2e0d8:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e0dc:	ldr	x2, [x19, #8]
   2e0e0:	sxtw	x0, w1
   2e0e4:	add	x0, x2, x0
   2e0e8:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e0ec:	ldr	w1, [x19, #28]
   2e0f0:	ldr	x0, [x19]
   2e0f4:	cmp	w1, #0x0
   2e0f8:	b.lt	2e10c <udev_util_encode_string@@LIBUDEV_183+0x228dc>  // b.tstop
   2e0fc:	add	x0, x0, #0xf
   2e100:	and	x0, x0, #0xfffffffffffffff8
   2e104:	str	x0, [x19]
   2e108:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e10c:	add	w2, w1, #0x10
   2e110:	str	w2, [x19, #28]
   2e114:	ldr	w2, [x19, #28]
   2e118:	cmp	w2, #0x0
   2e11c:	b.le	2e130 <udev_util_encode_string@@LIBUDEV_183+0x22900>
   2e120:	add	x0, x0, #0xf
   2e124:	and	x0, x0, #0xfffffffffffffff8
   2e128:	str	x0, [x19]
   2e12c:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e130:	ldr	x2, [x19, #16]
   2e134:	sxtw	x0, w1
   2e138:	add	x0, x2, x0
   2e13c:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e140:	ldr	w0, [x19, #28]
   2e144:	ldr	x1, [x19]
   2e148:	cmp	w0, #0x0
   2e14c:	b.lt	2e168 <udev_util_encode_string@@LIBUDEV_183+0x22938>  // b.tstop
   2e150:	add	x0, x1, #0xf
   2e154:	and	x0, x0, #0xfffffffffffffff0
   2e158:	add	x0, x0, #0x17
   2e15c:	and	x0, x0, #0xfffffffffffffff8
   2e160:	str	x0, [x19]
   2e164:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e168:	add	w2, w0, #0x10
   2e16c:	str	w2, [x19, #28]
   2e170:	ldr	w2, [x19, #28]
   2e174:	cmp	w2, #0x0
   2e178:	b.le	2e194 <udev_util_encode_string@@LIBUDEV_183+0x22964>
   2e17c:	add	x0, x1, #0xf
   2e180:	and	x0, x0, #0xfffffffffffffff0
   2e184:	add	x0, x0, #0x17
   2e188:	and	x0, x0, #0xfffffffffffffff8
   2e18c:	str	x0, [x19]
   2e190:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e194:	ldr	x1, [x19, #16]
   2e198:	sxtw	x0, w0
   2e19c:	add	x0, x1, x0
   2e1a0:	b	2e1cc <udev_util_encode_string@@LIBUDEV_183+0x2299c>
   2e1a4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2e1a8:	add	x1, x0, #0x713
   2e1ac:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2e1b0:	add	x4, x0, #0x8
   2e1b4:	mov	w3, #0x366                 	// #870
   2e1b8:	mov	x2, x1
   2e1bc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2e1c0:	add	x1, x0, #0xad8
   2e1c4:	mov	w0, #0x0                   	// #0
   2e1c8:	bl	2dc30 <udev_util_encode_string@@LIBUDEV_183+0x22400>
   2e1cc:	ldr	x0, [sp, #152]
   2e1d0:	add	x0, x0, #0x1
   2e1d4:	str	x0, [sp, #152]
   2e1d8:	ldr	x1, [sp, #152]
   2e1dc:	ldr	x0, [sp, #160]
   2e1e0:	cmp	x1, x0
   2e1e4:	b.cc	2de48 <udev_util_encode_string@@LIBUDEV_183+0x22618>  // b.lo, b.ul, b.last
   2e1e8:	ldr	x0, [sp, #104]
   2e1ec:	ldr	x0, [x0]
   2e1f0:	add	x2, x0, #0x1
   2e1f4:	ldr	x1, [sp, #104]
   2e1f8:	str	x2, [x1]
   2e1fc:	lsl	x0, x0, #4
   2e200:	ldr	x1, [sp, #120]
   2e204:	add	x20, x1, x0
   2e208:	ldr	x21, [sp, #144]
   2e20c:	ldr	x0, [sp, #144]
   2e210:	bl	5040 <strlen@plt>
   2e214:	str	x21, [x20]
   2e218:	str	x0, [x20, #8]
   2e21c:	ldrb	w0, [sp, #103]
   2e220:	cmp	w0, #0x0
   2e224:	b.eq	2e264 <udev_util_encode_string@@LIBUDEV_183+0x22a34>  // b.none
   2e228:	ldr	x0, [sp, #104]
   2e22c:	ldr	x0, [x0]
   2e230:	lsl	x0, x0, #4
   2e234:	ldr	x1, [sp, #120]
   2e238:	add	x0, x1, x0
   2e23c:	adrp	x1, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2e240:	add	x1, x1, #0x19
   2e244:	str	x1, [x0]
   2e248:	mov	x1, #0x1                   	// #1
   2e24c:	str	x1, [x0, #8]
   2e250:	ldr	x0, [sp, #104]
   2e254:	ldr	x0, [x0]
   2e258:	add	x1, x0, #0x1
   2e25c:	ldr	x0, [sp, #104]
   2e260:	str	x1, [x0]
   2e264:	ldr	w1, [x19, #24]
   2e268:	ldr	x0, [x19]
   2e26c:	cmp	w1, #0x0
   2e270:	b.lt	2e284 <udev_util_encode_string@@LIBUDEV_183+0x22a54>  // b.tstop
   2e274:	add	x1, x0, #0xf
   2e278:	and	x1, x1, #0xfffffffffffffff8
   2e27c:	str	x1, [x19]
   2e280:	b	2e2b4 <udev_util_encode_string@@LIBUDEV_183+0x22a84>
   2e284:	add	w2, w1, #0x8
   2e288:	str	w2, [x19, #24]
   2e28c:	ldr	w2, [x19, #24]
   2e290:	cmp	w2, #0x0
   2e294:	b.le	2e2a8 <udev_util_encode_string@@LIBUDEV_183+0x22a78>
   2e298:	add	x1, x0, #0xf
   2e29c:	and	x1, x1, #0xfffffffffffffff8
   2e2a0:	str	x1, [x19]
   2e2a4:	b	2e2b4 <udev_util_encode_string@@LIBUDEV_183+0x22a84>
   2e2a8:	ldr	x2, [x19, #8]
   2e2ac:	sxtw	x0, w1
   2e2b0:	add	x0, x2, x0
   2e2b4:	ldr	x0, [x0]
   2e2b8:	str	x0, [sp, #88]
   2e2bc:	ldr	x0, [sp, #88]
   2e2c0:	cmp	x0, #0x0
   2e2c4:	b.eq	2e2e0 <udev_util_encode_string@@LIBUDEV_183+0x22ab0>  // b.none
   2e2c8:	ldr	x0, [sp, #104]
   2e2cc:	ldr	x0, [x0]
   2e2d0:	add	x0, x0, #0x1
   2e2d4:	ldr	x1, [sp, #112]
   2e2d8:	cmp	x1, x0
   2e2dc:	b.hi	2dd6c <udev_util_encode_string@@LIBUDEV_183+0x2253c>  // b.pmore
   2e2e0:	mov	w0, #0x0                   	// #0
   2e2e4:	mov	w1, w0
   2e2e8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2e2ec:	ldr	x0, [x0, #4016]
   2e2f0:	ldr	x2, [sp, #712]
   2e2f4:	ldr	x0, [x0]
   2e2f8:	eor	x0, x2, x0
   2e2fc:	cmp	x0, #0x0
   2e300:	b.eq	2e308 <udev_util_encode_string@@LIBUDEV_183+0x22ad8>  // b.none
   2e304:	bl	5390 <__stack_chk_fail@plt>
   2e308:	mov	w0, w1
   2e30c:	ldp	x19, x20, [sp, #16]
   2e310:	ldr	x21, [sp, #32]
   2e314:	ldp	x29, x30, [sp]
   2e318:	add	sp, sp, #0x2d0
   2e31c:	ret
   2e320:	sub	sp, sp, #0xbb0
   2e324:	stp	x29, x30, [sp, #32]
   2e328:	add	x29, sp, #0x20
   2e32c:	str	x19, [sp, #48]
   2e330:	str	w0, [sp, #140]
   2e334:	str	w1, [sp, #136]
   2e338:	str	x2, [sp, #128]
   2e33c:	str	w3, [sp, #124]
   2e340:	str	x4, [sp, #112]
   2e344:	str	x5, [sp, #104]
   2e348:	str	x6, [sp, #2976]
   2e34c:	str	x7, [sp, #2984]
   2e350:	add	x0, sp, #0xc00
   2e354:	stur	q0, [x0, #-224]
   2e358:	add	x0, sp, #0xc00
   2e35c:	stur	q1, [x0, #-208]
   2e360:	add	x0, sp, #0xc00
   2e364:	stur	q2, [x0, #-192]
   2e368:	add	x0, sp, #0xc00
   2e36c:	stur	q3, [x0, #-176]
   2e370:	add	x0, sp, #0xc00
   2e374:	stur	q4, [x0, #-160]
   2e378:	add	x0, sp, #0xc00
   2e37c:	stur	q5, [x0, #-144]
   2e380:	add	x0, sp, #0xc00
   2e384:	stur	q6, [x0, #-128]
   2e388:	add	x0, sp, #0xc00
   2e38c:	stur	q7, [x0, #-112]
   2e390:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2e394:	ldr	x0, [x0, #4016]
   2e398:	ldr	x1, [x0]
   2e39c:	str	x1, [sp, #2840]
   2e3a0:	mov	x1, #0x0                   	// #0
   2e3a4:	ldr	w0, [sp, #140]
   2e3a8:	asr	w0, w0, #10
   2e3ac:	str	w0, [sp, #152]
   2e3b0:	strb	wzr, [sp, #145]
   2e3b4:	bl	57d0 <__errno_location@plt>
   2e3b8:	ldr	w0, [x0]
   2e3bc:	str	w0, [sp, #148]
   2e3c0:	ldr	w0, [sp, #140]
   2e3c4:	and	w1, w0, #0x7
   2e3c8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e3cc:	add	x0, x0, #0xc0
   2e3d0:	ldr	w2, [sp, #152]
   2e3d4:	ldr	w0, [x0, x2, lsl #2]
   2e3d8:	cmp	w1, w0
   2e3dc:	cset	w0, gt
   2e3e0:	and	w0, w0, #0xff
   2e3e4:	and	x0, x0, #0xff
   2e3e8:	cmp	x0, #0x0
   2e3ec:	b.ne	2e404 <udev_util_encode_string@@LIBUDEV_183+0x22bd4>  // b.any
   2e3f0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e3f4:	add	x0, x0, #0x118
   2e3f8:	ldr	w0, [x0]
   2e3fc:	cmp	w0, #0x8
   2e400:	b.ne	2e41c <udev_util_encode_string@@LIBUDEV_183+0x22bec>  // b.any
   2e404:	ldr	w0, [sp, #136]
   2e408:	cmp	w0, #0x0
   2e40c:	cneg	w0, w0, lt  // lt = tstop
   2e410:	and	w0, w0, #0xff
   2e414:	neg	w19, w0
   2e418:	b	2ec0c <udev_util_encode_string@@LIBUDEV_183+0x233dc>
   2e41c:	ldr	w0, [sp, #140]
   2e420:	and	w0, w0, #0x3f8
   2e424:	cmp	w0, #0x0
   2e428:	b.ne	2e444 <udev_util_encode_string@@LIBUDEV_183+0x22c14>  // b.any
   2e42c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e430:	add	x0, x0, #0xc8
   2e434:	ldr	w0, [x0]
   2e438:	ldr	w1, [sp, #140]
   2e43c:	orr	w0, w1, w0
   2e440:	str	w0, [sp, #140]
   2e444:	strb	wzr, [sp, #146]
   2e448:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e44c:	add	x0, x0, #0x118
   2e450:	ldr	w0, [x0]
   2e454:	cmp	w0, #0x4
   2e458:	b.gt	2e468 <udev_util_encode_string@@LIBUDEV_183+0x22c38>
   2e45c:	cmp	w0, #0x3
   2e460:	b.ge	2e470 <udev_util_encode_string@@LIBUDEV_183+0x22c40>  // b.tcont
   2e464:	b	2e478 <udev_util_encode_string@@LIBUDEV_183+0x22c48>
   2e468:	cmp	w0, #0x7
   2e46c:	b.ne	2e478 <udev_util_encode_string@@LIBUDEV_183+0x22c48>  // b.any
   2e470:	mov	w0, #0x1                   	// #1
   2e474:	strb	w0, [sp, #146]
   2e478:	nop
   2e47c:	ldrb	w0, [sp, #146]
   2e480:	cmp	w0, #0x0
   2e484:	b.eq	2e670 <udev_util_encode_string@@LIBUDEV_183+0x22e40>  // b.none
   2e488:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e48c:	add	x0, x0, #0x120
   2e490:	ldrb	w0, [x0]
   2e494:	cmp	w0, #0x0
   2e498:	b.eq	2e4a0 <udev_util_encode_string@@LIBUDEV_183+0x22c70>  // b.none
   2e49c:	bl	2bdc4 <udev_util_encode_string@@LIBUDEV_183+0x20594>
   2e4a0:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e4a4:	add	x0, x0, #0xd8
   2e4a8:	ldr	w0, [x0]
   2e4ac:	cmp	w0, #0x0
   2e4b0:	b.lt	2e670 <udev_util_encode_string@@LIBUDEV_183+0x22e40>  // b.tstop
   2e4b4:	add	x0, sp, #0x118
   2e4b8:	mov	x1, #0x110                 	// #272
   2e4bc:	mov	x2, x1
   2e4c0:	mov	w1, #0x0                   	// #0
   2e4c4:	bl	5290 <memset@plt>
   2e4c8:	str	xzr, [sp, #160]
   2e4cc:	stp	xzr, xzr, [sp, #224]
   2e4d0:	stp	xzr, xzr, [sp, #240]
   2e4d4:	stp	xzr, xzr, [sp, #256]
   2e4d8:	str	xzr, [sp, #272]
   2e4dc:	add	x0, sp, #0x118
   2e4e0:	str	x0, [sp, #240]
   2e4e4:	strb	wzr, [sp, #147]
   2e4e8:	add	x0, sp, #0x318
   2e4ec:	str	xzr, [sp, #16]
   2e4f0:	str	xzr, [sp, #8]
   2e4f4:	str	xzr, [sp]
   2e4f8:	mov	x7, #0x0                   	// #0
   2e4fc:	ldr	x6, [sp, #112]
   2e500:	ldr	w5, [sp, #124]
   2e504:	ldr	x4, [sp, #128]
   2e508:	ldr	w3, [sp, #136]
   2e50c:	ldr	w2, [sp, #140]
   2e510:	mov	x1, #0x800                 	// #2048
   2e514:	bl	2cb14 <udev_util_encode_string@@LIBUDEV_183+0x212e4>
   2e518:	ldr	x19, [sp, #160]
   2e51c:	add	x0, x19, #0x1
   2e520:	str	x0, [sp, #160]
   2e524:	add	x0, sp, #0x318
   2e528:	bl	5040 <strlen@plt>
   2e52c:	mov	x3, x0
   2e530:	lsl	x0, x19, #4
   2e534:	add	x1, sp, #0x118
   2e538:	add	x2, sp, #0x318
   2e53c:	str	x2, [x1, x0]
   2e540:	lsl	x0, x19, #4
   2e544:	add	x1, sp, #0x120
   2e548:	str	x3, [x1, x0]
   2e54c:	add	x0, sp, #0xbb0
   2e550:	str	x0, [sp, #192]
   2e554:	add	x0, sp, #0xbb0
   2e558:	str	x0, [sp, #200]
   2e55c:	add	x0, sp, #0xba0
   2e560:	str	x0, [sp, #208]
   2e564:	mov	w0, #0xfffffff0            	// #-16
   2e568:	str	w0, [sp, #216]
   2e56c:	mov	w0, #0xffffff80            	// #-128
   2e570:	str	w0, [sp, #220]
   2e574:	add	x2, sp, #0x40
   2e578:	add	x3, sp, #0xc0
   2e57c:	ldp	x0, x1, [x3]
   2e580:	stp	x0, x1, [x2]
   2e584:	ldp	x0, x1, [x3, #16]
   2e588:	stp	x0, x1, [x2, #16]
   2e58c:	add	x2, sp, #0x40
   2e590:	add	x1, sp, #0xa0
   2e594:	add	x0, sp, #0x118
   2e598:	mov	x6, x2
   2e59c:	ldr	x5, [sp, #104]
   2e5a0:	ldr	w4, [sp, #136]
   2e5a4:	mov	w3, #0x1                   	// #1
   2e5a8:	mov	x2, x1
   2e5ac:	mov	x1, #0x11                  	// #17
   2e5b0:	bl	2dd24 <udev_util_encode_string@@LIBUDEV_183+0x224f4>
   2e5b4:	str	w0, [sp, #156]
   2e5b8:	ldr	w0, [sp, #156]
   2e5bc:	cmp	w0, #0x0
   2e5c0:	b.ge	2e5d0 <udev_util_encode_string@@LIBUDEV_183+0x22da0>  // b.tcont
   2e5c4:	mov	w0, #0x1                   	// #1
   2e5c8:	strb	w0, [sp, #147]
   2e5cc:	b	2e5f0 <udev_util_encode_string@@LIBUDEV_183+0x22dc0>
   2e5d0:	ldr	x0, [sp, #160]
   2e5d4:	str	x0, [sp, #248]
   2e5d8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e5dc:	add	x0, x0, #0xd8
   2e5e0:	ldr	w0, [x0]
   2e5e4:	add	x1, sp, #0xe0
   2e5e8:	mov	w2, #0x4000                	// #16384
   2e5ec:	bl	52e0 <sendmsg@plt>
   2e5f0:	mov	x0, #0x1                   	// #1
   2e5f4:	str	x0, [sp, #168]
   2e5f8:	b	2e61c <udev_util_encode_string@@LIBUDEV_183+0x22dec>
   2e5fc:	ldr	x0, [sp, #168]
   2e600:	lsl	x0, x0, #4
   2e604:	add	x1, sp, #0x118
   2e608:	ldr	x0, [x1, x0]
   2e60c:	bl	54b0 <free@plt>
   2e610:	ldr	x0, [sp, #168]
   2e614:	add	x0, x0, #0x2
   2e618:	str	x0, [sp, #168]
   2e61c:	ldr	x0, [sp, #160]
   2e620:	ldr	x1, [sp, #168]
   2e624:	cmp	x1, x0
   2e628:	b.cc	2e5fc <udev_util_encode_string@@LIBUDEV_183+0x22dcc>  // b.lo, b.ul, b.last
   2e62c:	ldrb	w0, [sp, #147]
   2e630:	eor	w0, w0, #0x1
   2e634:	and	w0, w0, #0xff
   2e638:	cmp	w0, #0x0
   2e63c:	b.eq	2e670 <udev_util_encode_string@@LIBUDEV_183+0x22e40>  // b.none
   2e640:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2e644:	add	x0, x0, #0x120
   2e648:	ldrb	w0, [x0]
   2e64c:	cmp	w0, #0x0
   2e650:	b.eq	2e658 <udev_util_encode_string@@LIBUDEV_183+0x22e28>  // b.none
   2e654:	bl	2c110 <udev_util_encode_string@@LIBUDEV_183+0x208e0>
   2e658:	ldr	w0, [sp, #136]
   2e65c:	cmp	w0, #0x0
   2e660:	cneg	w0, w0, lt  // lt = tstop
   2e664:	and	w0, w0, #0xff
   2e668:	neg	w19, w0
   2e66c:	b	2ec0c <udev_util_encode_string@@LIBUDEV_183+0x233dc>
   2e670:	add	x0, sp, #0xbb0
   2e674:	str	x0, [sp, #192]
   2e678:	add	x0, sp, #0xbb0
   2e67c:	str	x0, [sp, #200]
   2e680:	add	x0, sp, #0xba0
   2e684:	str	x0, [sp, #208]
   2e688:	mov	w0, #0xfffffff0            	// #-16
   2e68c:	str	w0, [sp, #216]
   2e690:	mov	w0, #0xffffff80            	// #-128
   2e694:	str	w0, [sp, #220]
   2e698:	b	2eb84 <udev_util_encode_string@@LIBUDEV_183+0x23354>
   2e69c:	ldr	w0, [sp, #136]
   2e6a0:	cmp	w0, #0x0
   2e6a4:	cneg	w19, w0, lt  // lt = tstop
   2e6a8:	bl	57d0 <__errno_location@plt>
   2e6ac:	mov	x1, x0
   2e6b0:	and	w0, w19, #0xff
   2e6b4:	str	w0, [x1]
   2e6b8:	add	x2, sp, #0xe0
   2e6bc:	add	x3, sp, #0xc0
   2e6c0:	ldp	x0, x1, [x3]
   2e6c4:	stp	x0, x1, [x2]
   2e6c8:	ldp	x0, x1, [x3, #16]
   2e6cc:	stp	x0, x1, [x2, #16]
   2e6d0:	add	x2, sp, #0x40
   2e6d4:	add	x3, sp, #0xe0
   2e6d8:	ldp	x0, x1, [x3]
   2e6dc:	stp	x0, x1, [x2]
   2e6e0:	ldp	x0, x1, [x3, #16]
   2e6e4:	stp	x0, x1, [x2, #16]
   2e6e8:	add	x1, sp, #0x40
   2e6ec:	add	x0, sp, #0x318
   2e6f0:	mov	x3, x1
   2e6f4:	ldr	x2, [sp, #104]
   2e6f8:	mov	x1, #0x800                 	// #2048
   2e6fc:	bl	5730 <vsnprintf@plt>
   2e700:	add	x2, sp, #0x318
   2e704:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2e708:	add	x1, x0, #0x968
   2e70c:	mov	x0, x2
   2e710:	bl	2b7f8 <udev_util_encode_string@@LIBUDEV_183+0x1ffc8>
   2e714:	cmp	x0, #0x0
   2e718:	b.eq	2e728 <udev_util_encode_string@@LIBUDEV_183+0x22ef8>  // b.none
   2e71c:	mov	w0, #0x1                   	// #1
   2e720:	strb	w0, [sp, #145]
   2e724:	b	2eb90 <udev_util_encode_string@@LIBUDEV_183+0x23360>
   2e728:	add	x0, sp, #0x118
   2e72c:	mov	x2, x0
   2e730:	mov	x1, #0x80                  	// #128
   2e734:	ldr	x0, [sp, #104]
   2e738:	bl	5710 <parse_printf_format@plt>
   2e73c:	str	x0, [sp, #184]
   2e740:	ldr	x0, [sp, #184]
   2e744:	cmp	x0, #0x7f
   2e748:	cset	w0, hi  // hi = pmore
   2e74c:	and	w0, w0, #0xff
   2e750:	and	x0, x0, #0xff
   2e754:	cmp	x0, #0x0
   2e758:	b.eq	2e784 <udev_util_encode_string@@LIBUDEV_183+0x22f54>  // b.none
   2e75c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2e760:	add	x1, x0, #0x713
   2e764:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2e768:	add	x4, x0, #0x20
   2e76c:	mov	w3, #0x3c7                 	// #967
   2e770:	mov	x2, x1
   2e774:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2e778:	add	x1, x0, #0xab8
   2e77c:	mov	w0, #0x0                   	// #0
   2e780:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2e784:	str	xzr, [sp, #176]
   2e788:	b	2eb1c <udev_util_encode_string@@LIBUDEV_183+0x232ec>
   2e78c:	ldr	x0, [sp, #176]
   2e790:	lsl	x0, x0, #2
   2e794:	add	x1, sp, #0x118
   2e798:	ldr	w0, [x1, x0]
   2e79c:	and	w0, w0, #0x800
   2e7a0:	cmp	w0, #0x0
   2e7a4:	b.eq	2e7fc <udev_util_encode_string@@LIBUDEV_183+0x22fcc>  // b.none
   2e7a8:	ldr	w1, [sp, #216]
   2e7ac:	ldr	x0, [sp, #192]
   2e7b0:	cmp	w1, #0x0
   2e7b4:	b.lt	2e7c8 <udev_util_encode_string@@LIBUDEV_183+0x22f98>  // b.tstop
   2e7b8:	add	x0, x0, #0xf
   2e7bc:	and	x0, x0, #0xfffffffffffffff8
   2e7c0:	str	x0, [sp, #192]
   2e7c4:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e7c8:	add	w2, w1, #0x8
   2e7cc:	str	w2, [sp, #216]
   2e7d0:	ldr	w2, [sp, #216]
   2e7d4:	cmp	w2, #0x0
   2e7d8:	b.le	2e7ec <udev_util_encode_string@@LIBUDEV_183+0x22fbc>
   2e7dc:	add	x0, x0, #0xf
   2e7e0:	and	x0, x0, #0xfffffffffffffff8
   2e7e4:	str	x0, [sp, #192]
   2e7e8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e7ec:	ldr	x2, [sp, #200]
   2e7f0:	sxtw	x0, w1
   2e7f4:	add	x0, x2, x0
   2e7f8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e7fc:	ldr	x0, [sp, #176]
   2e800:	lsl	x0, x0, #2
   2e804:	add	x1, sp, #0x118
   2e808:	ldr	w0, [x1, x0]
   2e80c:	cmp	w0, #0x400
   2e810:	b.eq	2e88c <udev_util_encode_string@@LIBUDEV_183+0x2305c>  // b.none
   2e814:	cmp	w0, #0x400
   2e818:	b.gt	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e81c:	cmp	w0, #0x200
   2e820:	b.eq	2e8e0 <udev_util_encode_string@@LIBUDEV_183+0x230b0>  // b.none
   2e824:	cmp	w0, #0x200
   2e828:	b.gt	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e82c:	cmp	w0, #0x107
   2e830:	b.eq	2ea84 <udev_util_encode_string@@LIBUDEV_183+0x23254>  // b.none
   2e834:	cmp	w0, #0x107
   2e838:	b.gt	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e83c:	cmp	w0, #0x100
   2e840:	b.eq	2e934 <udev_util_encode_string@@LIBUDEV_183+0x23104>  // b.none
   2e844:	cmp	w0, #0x100
   2e848:	b.gt	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e84c:	cmp	w0, #0x7
   2e850:	b.gt	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e854:	cmp	w0, #0x6
   2e858:	b.ge	2ea30 <udev_util_encode_string@@LIBUDEV_183+0x23200>  // b.tcont
   2e85c:	cmp	w0, #0x5
   2e860:	b.gt	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e864:	cmp	w0, #0x3
   2e868:	b.ge	2e9dc <udev_util_encode_string@@LIBUDEV_183+0x231ac>  // b.tcont
   2e86c:	cmp	w0, #0x1
   2e870:	b.gt	2e880 <udev_util_encode_string@@LIBUDEV_183+0x23050>
   2e874:	cmp	w0, #0x0
   2e878:	b.ge	2e88c <udev_util_encode_string@@LIBUDEV_183+0x2305c>  // b.tcont
   2e87c:	b	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e880:	cmp	w0, #0x2
   2e884:	b.eq	2e988 <udev_util_encode_string@@LIBUDEV_183+0x23158>  // b.none
   2e888:	b	2eae8 <udev_util_encode_string@@LIBUDEV_183+0x232b8>
   2e88c:	ldr	w1, [sp, #216]
   2e890:	ldr	x0, [sp, #192]
   2e894:	cmp	w1, #0x0
   2e898:	b.lt	2e8ac <udev_util_encode_string@@LIBUDEV_183+0x2307c>  // b.tstop
   2e89c:	add	x0, x0, #0xb
   2e8a0:	and	x0, x0, #0xfffffffffffffff8
   2e8a4:	str	x0, [sp, #192]
   2e8a8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e8ac:	add	w2, w1, #0x8
   2e8b0:	str	w2, [sp, #216]
   2e8b4:	ldr	w2, [sp, #216]
   2e8b8:	cmp	w2, #0x0
   2e8bc:	b.le	2e8d0 <udev_util_encode_string@@LIBUDEV_183+0x230a0>
   2e8c0:	add	x0, x0, #0xb
   2e8c4:	and	x0, x0, #0xfffffffffffffff8
   2e8c8:	str	x0, [sp, #192]
   2e8cc:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e8d0:	ldr	x2, [sp, #200]
   2e8d4:	sxtw	x0, w1
   2e8d8:	add	x0, x2, x0
   2e8dc:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e8e0:	ldr	w1, [sp, #216]
   2e8e4:	ldr	x0, [sp, #192]
   2e8e8:	cmp	w1, #0x0
   2e8ec:	b.lt	2e900 <udev_util_encode_string@@LIBUDEV_183+0x230d0>  // b.tstop
   2e8f0:	add	x0, x0, #0xf
   2e8f4:	and	x0, x0, #0xfffffffffffffff8
   2e8f8:	str	x0, [sp, #192]
   2e8fc:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e900:	add	w2, w1, #0x8
   2e904:	str	w2, [sp, #216]
   2e908:	ldr	w2, [sp, #216]
   2e90c:	cmp	w2, #0x0
   2e910:	b.le	2e924 <udev_util_encode_string@@LIBUDEV_183+0x230f4>
   2e914:	add	x0, x0, #0xf
   2e918:	and	x0, x0, #0xfffffffffffffff8
   2e91c:	str	x0, [sp, #192]
   2e920:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e924:	ldr	x2, [sp, #200]
   2e928:	sxtw	x0, w1
   2e92c:	add	x0, x2, x0
   2e930:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e934:	ldr	w1, [sp, #216]
   2e938:	ldr	x0, [sp, #192]
   2e93c:	cmp	w1, #0x0
   2e940:	b.lt	2e954 <udev_util_encode_string@@LIBUDEV_183+0x23124>  // b.tstop
   2e944:	add	x0, x0, #0xf
   2e948:	and	x0, x0, #0xfffffffffffffff8
   2e94c:	str	x0, [sp, #192]
   2e950:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e954:	add	w2, w1, #0x8
   2e958:	str	w2, [sp, #216]
   2e95c:	ldr	w2, [sp, #216]
   2e960:	cmp	w2, #0x0
   2e964:	b.le	2e978 <udev_util_encode_string@@LIBUDEV_183+0x23148>
   2e968:	add	x0, x0, #0xf
   2e96c:	and	x0, x0, #0xfffffffffffffff8
   2e970:	str	x0, [sp, #192]
   2e974:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e978:	ldr	x2, [sp, #200]
   2e97c:	sxtw	x0, w1
   2e980:	add	x0, x2, x0
   2e984:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e988:	ldr	w1, [sp, #216]
   2e98c:	ldr	x0, [sp, #192]
   2e990:	cmp	w1, #0x0
   2e994:	b.lt	2e9a8 <udev_util_encode_string@@LIBUDEV_183+0x23178>  // b.tstop
   2e998:	add	x0, x0, #0xb
   2e99c:	and	x0, x0, #0xfffffffffffffff8
   2e9a0:	str	x0, [sp, #192]
   2e9a4:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e9a8:	add	w2, w1, #0x8
   2e9ac:	str	w2, [sp, #216]
   2e9b0:	ldr	w2, [sp, #216]
   2e9b4:	cmp	w2, #0x0
   2e9b8:	b.le	2e9cc <udev_util_encode_string@@LIBUDEV_183+0x2319c>
   2e9bc:	add	x0, x0, #0xb
   2e9c0:	and	x0, x0, #0xfffffffffffffff8
   2e9c4:	str	x0, [sp, #192]
   2e9c8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e9cc:	ldr	x2, [sp, #200]
   2e9d0:	sxtw	x0, w1
   2e9d4:	add	x0, x2, x0
   2e9d8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e9dc:	ldr	w1, [sp, #216]
   2e9e0:	ldr	x0, [sp, #192]
   2e9e4:	cmp	w1, #0x0
   2e9e8:	b.lt	2e9fc <udev_util_encode_string@@LIBUDEV_183+0x231cc>  // b.tstop
   2e9ec:	add	x0, x0, #0xf
   2e9f0:	and	x0, x0, #0xfffffffffffffff8
   2e9f4:	str	x0, [sp, #192]
   2e9f8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2e9fc:	add	w2, w1, #0x8
   2ea00:	str	w2, [sp, #216]
   2ea04:	ldr	w2, [sp, #216]
   2ea08:	cmp	w2, #0x0
   2ea0c:	b.le	2ea20 <udev_util_encode_string@@LIBUDEV_183+0x231f0>
   2ea10:	add	x0, x0, #0xf
   2ea14:	and	x0, x0, #0xfffffffffffffff8
   2ea18:	str	x0, [sp, #192]
   2ea1c:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2ea20:	ldr	x2, [sp, #200]
   2ea24:	sxtw	x0, w1
   2ea28:	add	x0, x2, x0
   2ea2c:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2ea30:	ldr	w1, [sp, #220]
   2ea34:	ldr	x0, [sp, #192]
   2ea38:	cmp	w1, #0x0
   2ea3c:	b.lt	2ea50 <udev_util_encode_string@@LIBUDEV_183+0x23220>  // b.tstop
   2ea40:	add	x0, x0, #0xf
   2ea44:	and	x0, x0, #0xfffffffffffffff8
   2ea48:	str	x0, [sp, #192]
   2ea4c:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2ea50:	add	w2, w1, #0x10
   2ea54:	str	w2, [sp, #220]
   2ea58:	ldr	w2, [sp, #220]
   2ea5c:	cmp	w2, #0x0
   2ea60:	b.le	2ea74 <udev_util_encode_string@@LIBUDEV_183+0x23244>
   2ea64:	add	x0, x0, #0xf
   2ea68:	and	x0, x0, #0xfffffffffffffff8
   2ea6c:	str	x0, [sp, #192]
   2ea70:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2ea74:	ldr	x2, [sp, #208]
   2ea78:	sxtw	x0, w1
   2ea7c:	add	x0, x2, x0
   2ea80:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2ea84:	ldr	w0, [sp, #220]
   2ea88:	ldr	x1, [sp, #192]
   2ea8c:	cmp	w0, #0x0
   2ea90:	b.lt	2eaac <udev_util_encode_string@@LIBUDEV_183+0x2327c>  // b.tstop
   2ea94:	add	x0, x1, #0xf
   2ea98:	and	x0, x0, #0xfffffffffffffff0
   2ea9c:	add	x0, x0, #0x17
   2eaa0:	and	x0, x0, #0xfffffffffffffff8
   2eaa4:	str	x0, [sp, #192]
   2eaa8:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2eaac:	add	w2, w0, #0x10
   2eab0:	str	w2, [sp, #220]
   2eab4:	ldr	w2, [sp, #220]
   2eab8:	cmp	w2, #0x0
   2eabc:	b.le	2ead8 <udev_util_encode_string@@LIBUDEV_183+0x232a8>
   2eac0:	add	x0, x1, #0xf
   2eac4:	and	x0, x0, #0xfffffffffffffff0
   2eac8:	add	x0, x0, #0x17
   2eacc:	and	x0, x0, #0xfffffffffffffff8
   2ead0:	str	x0, [sp, #192]
   2ead4:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2ead8:	ldr	x1, [sp, #208]
   2eadc:	sxtw	x0, w0
   2eae0:	add	x0, x1, x0
   2eae4:	b	2eb10 <udev_util_encode_string@@LIBUDEV_183+0x232e0>
   2eae8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2eaec:	add	x1, x0, #0x713
   2eaf0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2eaf4:	add	x4, x0, #0x20
   2eaf8:	mov	w3, #0x3c7                 	// #967
   2eafc:	mov	x2, x1
   2eb00:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2eb04:	add	x1, x0, #0xad8
   2eb08:	mov	w0, #0x0                   	// #0
   2eb0c:	bl	2dc30 <udev_util_encode_string@@LIBUDEV_183+0x22400>
   2eb10:	ldr	x0, [sp, #176]
   2eb14:	add	x0, x0, #0x1
   2eb18:	str	x0, [sp, #176]
   2eb1c:	ldr	x1, [sp, #176]
   2eb20:	ldr	x0, [sp, #184]
   2eb24:	cmp	x1, x0
   2eb28:	b.cc	2e78c <udev_util_encode_string@@LIBUDEV_183+0x22f5c>  // b.lo, b.ul, b.last
   2eb2c:	ldr	w1, [sp, #216]
   2eb30:	ldr	x0, [sp, #192]
   2eb34:	cmp	w1, #0x0
   2eb38:	b.lt	2eb4c <udev_util_encode_string@@LIBUDEV_183+0x2331c>  // b.tstop
   2eb3c:	add	x1, x0, #0xf
   2eb40:	and	x1, x1, #0xfffffffffffffff8
   2eb44:	str	x1, [sp, #192]
   2eb48:	b	2eb7c <udev_util_encode_string@@LIBUDEV_183+0x2334c>
   2eb4c:	add	w2, w1, #0x8
   2eb50:	str	w2, [sp, #216]
   2eb54:	ldr	w2, [sp, #216]
   2eb58:	cmp	w2, #0x0
   2eb5c:	b.le	2eb70 <udev_util_encode_string@@LIBUDEV_183+0x23340>
   2eb60:	add	x1, x0, #0xf
   2eb64:	and	x1, x1, #0xfffffffffffffff8
   2eb68:	str	x1, [sp, #192]
   2eb6c:	b	2eb7c <udev_util_encode_string@@LIBUDEV_183+0x2334c>
   2eb70:	ldr	x2, [sp, #200]
   2eb74:	sxtw	x0, w1
   2eb78:	add	x0, x2, x0
   2eb7c:	ldr	x0, [x0]
   2eb80:	str	x0, [sp, #104]
   2eb84:	ldr	x0, [sp, #104]
   2eb88:	cmp	x0, #0x0
   2eb8c:	b.ne	2e69c <udev_util_encode_string@@LIBUDEV_183+0x22e6c>  // b.any
   2eb90:	ldrb	w0, [sp, #145]
   2eb94:	eor	w0, w0, #0x1
   2eb98:	and	w0, w0, #0xff
   2eb9c:	cmp	w0, #0x0
   2eba0:	b.eq	2ebd4 <udev_util_encode_string@@LIBUDEV_183+0x233a4>  // b.none
   2eba4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2eba8:	add	x0, x0, #0x120
   2ebac:	ldrb	w0, [x0]
   2ebb0:	cmp	w0, #0x0
   2ebb4:	b.eq	2ebbc <udev_util_encode_string@@LIBUDEV_183+0x2338c>  // b.none
   2ebb8:	bl	2c110 <udev_util_encode_string@@LIBUDEV_183+0x208e0>
   2ebbc:	ldr	w0, [sp, #136]
   2ebc0:	cmp	w0, #0x0
   2ebc4:	cneg	w0, w0, lt  // lt = tstop
   2ebc8:	and	w0, w0, #0xff
   2ebcc:	neg	w19, w0
   2ebd0:	b	2ec0c <udev_util_encode_string@@LIBUDEV_183+0x233dc>
   2ebd4:	add	x0, sp, #0x318
   2ebd8:	add	x0, x0, #0x8
   2ebdc:	str	x0, [sp, #8]
   2ebe0:	str	xzr, [sp]
   2ebe4:	mov	x7, #0x0                   	// #0
   2ebe8:	mov	x6, #0x0                   	// #0
   2ebec:	mov	x5, #0x0                   	// #0
   2ebf0:	ldr	x4, [sp, #112]
   2ebf4:	ldr	w3, [sp, #124]
   2ebf8:	ldr	x2, [sp, #128]
   2ebfc:	ldr	w1, [sp, #136]
   2ec00:	ldr	w0, [sp, #140]
   2ec04:	bl	2d0d4 <udev_util_encode_string@@LIBUDEV_183+0x218a4>
   2ec08:	mov	w19, w0
   2ec0c:	add	x0, sp, #0x94
   2ec10:	bl	2b5dc <udev_util_encode_string@@LIBUDEV_183+0x1fdac>
   2ec14:	mov	w1, w19
   2ec18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ec1c:	ldr	x0, [x0, #4016]
   2ec20:	ldr	x2, [sp, #2840]
   2ec24:	ldr	x0, [x0]
   2ec28:	eor	x0, x2, x0
   2ec2c:	cmp	x0, #0x0
   2ec30:	b.eq	2ec38 <udev_util_encode_string@@LIBUDEV_183+0x23408>  // b.none
   2ec34:	bl	5390 <__stack_chk_fail@plt>
   2ec38:	mov	w0, w1
   2ec3c:	ldr	x19, [sp, #48]
   2ec40:	ldp	x29, x30, [sp, #32]
   2ec44:	add	sp, sp, #0xbb0
   2ec48:	ret
   2ec4c:	sub	sp, sp, #0x10
   2ec50:	str	w0, [sp, #12]
   2ec54:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2ec58:	add	x0, x0, #0xc0
   2ec5c:	ldr	w1, [sp, #12]
   2ec60:	ldr	w0, [x0, x1, lsl #2]
   2ec64:	add	sp, sp, #0x10
   2ec68:	ret
   2ec6c:	sub	sp, sp, #0x990
   2ec70:	stp	x29, x30, [sp, #80]
   2ec74:	add	x29, sp, #0x50
   2ec78:	str	x19, [sp, #96]
   2ec7c:	str	x0, [sp, #200]
   2ec80:	str	w1, [sp, #196]
   2ec84:	str	x2, [sp, #184]
   2ec88:	str	w3, [sp, #192]
   2ec8c:	str	w4, [sp, #180]
   2ec90:	str	x5, [sp, #168]
   2ec94:	str	w6, [sp, #176]
   2ec98:	str	x7, [sp, #160]
   2ec9c:	add	x0, sp, #0xa00
   2eca0:	stur	q0, [x0, #-240]
   2eca4:	add	x0, sp, #0xa00
   2eca8:	stur	q1, [x0, #-224]
   2ecac:	add	x0, sp, #0xa00
   2ecb0:	stur	q2, [x0, #-208]
   2ecb4:	add	x0, sp, #0xa00
   2ecb8:	stur	q3, [x0, #-192]
   2ecbc:	add	x0, sp, #0xa00
   2ecc0:	stur	q4, [x0, #-176]
   2ecc4:	add	x0, sp, #0xa00
   2ecc8:	stur	q5, [x0, #-160]
   2eccc:	add	x0, sp, #0xa00
   2ecd0:	stur	q6, [x0, #-144]
   2ecd4:	add	x0, sp, #0xa00
   2ecd8:	stur	q7, [x0, #-128]
   2ecdc:	ldr	x0, [sp, #2448]
   2ece0:	str	x0, [sp, #152]
   2ece4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2ece8:	ldr	x0, [x0, #4016]
   2ecec:	ldr	x1, [x0]
   2ecf0:	str	x1, [sp, #2312]
   2ecf4:	mov	x1, #0x0                   	// #0
   2ecf8:	bl	57d0 <__errno_location@plt>
   2ecfc:	ldr	w0, [x0]
   2ed00:	str	w0, [sp, #220]
   2ed04:	str	xzr, [sp, #224]
   2ed08:	ldr	w0, [sp, #196]
   2ed0c:	and	w1, w0, #0x7
   2ed10:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2ed14:	add	x0, x0, #0xc0
   2ed18:	ldr	w0, [x0]
   2ed1c:	cmp	w1, w0
   2ed20:	cset	w0, gt
   2ed24:	and	w0, w0, #0xff
   2ed28:	and	x0, x0, #0xff
   2ed2c:	cmp	x0, #0x0
   2ed30:	b.ne	2ed48 <udev_util_encode_string@@LIBUDEV_183+0x23518>  // b.any
   2ed34:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2ed38:	add	x0, x0, #0x118
   2ed3c:	ldr	w0, [x0]
   2ed40:	cmp	w0, #0x8
   2ed44:	b.ne	2ed60 <udev_util_encode_string@@LIBUDEV_183+0x23530>  // b.any
   2ed48:	ldr	w0, [sp, #180]
   2ed4c:	cmp	w0, #0x0
   2ed50:	cneg	w0, w0, lt  // lt = tstop
   2ed54:	and	w0, w0, #0xff
   2ed58:	neg	w19, w0
   2ed5c:	b	2ef90 <udev_util_encode_string@@LIBUDEV_183+0x23760>
   2ed60:	ldr	w0, [sp, #180]
   2ed64:	cmp	w0, #0x0
   2ed68:	cneg	w19, w0, lt  // lt = tstop
   2ed6c:	bl	57d0 <__errno_location@plt>
   2ed70:	mov	x1, x0
   2ed74:	and	w0, w19, #0xff
   2ed78:	str	w0, [x1]
   2ed7c:	add	x0, sp, #0x998
   2ed80:	str	x0, [sp, #232]
   2ed84:	add	x0, sp, #0x990
   2ed88:	str	x0, [sp, #240]
   2ed8c:	add	x0, sp, #0x990
   2ed90:	str	x0, [sp, #248]
   2ed94:	str	wzr, [sp, #256]
   2ed98:	mov	w0, #0xffffff80            	// #-128
   2ed9c:	str	w0, [sp, #260]
   2eda0:	add	x2, sp, #0x70
   2eda4:	add	x3, sp, #0xe8
   2eda8:	ldp	x0, x1, [x3]
   2edac:	stp	x0, x1, [x2]
   2edb0:	ldp	x0, x1, [x3, #16]
   2edb4:	stp	x0, x1, [x2, #16]
   2edb8:	add	x1, sp, #0x70
   2edbc:	add	x0, sp, #0x108
   2edc0:	mov	x3, x1
   2edc4:	ldr	x2, [sp, #152]
   2edc8:	mov	x1, #0x800                 	// #2048
   2edcc:	bl	5730 <vsnprintf@plt>
   2edd0:	ldr	x0, [sp, #200]
   2edd4:	cmp	x0, #0x0
   2edd8:	b.eq	2ee00 <udev_util_encode_string@@LIBUDEV_183+0x235d0>  // b.none
   2eddc:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   2ede0:	cmp	w0, #0x1
   2ede4:	b.ne	2edf4 <udev_util_encode_string@@LIBUDEV_183+0x235c4>  // b.any
   2ede8:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2edec:	add	x0, x0, #0xda0
   2edf0:	b	2edfc <udev_util_encode_string@@LIBUDEV_183+0x235cc>
   2edf4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2edf8:	add	x0, x0, #0xda8
   2edfc:	str	x0, [sp, #224]
   2ee00:	ldr	x0, [sp, #184]
   2ee04:	cmp	x0, #0x0
   2ee08:	b.eq	2eefc <udev_util_encode_string@@LIBUDEV_183+0x236cc>  // b.none
   2ee0c:	ldr	w0, [sp, #192]
   2ee10:	cmp	w0, #0x0
   2ee14:	b.eq	2ee98 <udev_util_encode_string@@LIBUDEV_183+0x23668>  // b.none
   2ee18:	str	xzr, [sp, #64]
   2ee1c:	ldr	x0, [sp, #200]
   2ee20:	str	x0, [sp, #56]
   2ee24:	ldr	x0, [sp, #224]
   2ee28:	str	x0, [sp, #48]
   2ee2c:	add	x0, sp, #0x108
   2ee30:	str	x0, [sp, #40]
   2ee34:	ldr	w0, [sp, #192]
   2ee38:	str	w0, [sp, #32]
   2ee3c:	ldr	x0, [sp, #184]
   2ee40:	str	x0, [sp, #24]
   2ee44:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ee48:	add	x0, x0, #0xdf8
   2ee4c:	str	x0, [sp, #16]
   2ee50:	ldr	w0, [sp, #192]
   2ee54:	str	w0, [sp, #8]
   2ee58:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ee5c:	add	x0, x0, #0xe10
   2ee60:	str	x0, [sp]
   2ee64:	ldr	x7, [sp, #184]
   2ee68:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ee6c:	add	x6, x0, #0xdb8
   2ee70:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ee74:	add	x5, x0, #0xdc8
   2ee78:	ldr	x4, [sp, #160]
   2ee7c:	ldr	w3, [sp, #176]
   2ee80:	ldr	x2, [sp, #168]
   2ee84:	ldr	w1, [sp, #180]
   2ee88:	ldr	w0, [sp, #196]
   2ee8c:	bl	2e320 <udev_util_encode_string@@LIBUDEV_183+0x22af0>
   2ee90:	mov	w19, w0
   2ee94:	b	2ef90 <udev_util_encode_string@@LIBUDEV_183+0x23760>
   2ee98:	str	xzr, [sp, #40]
   2ee9c:	ldr	x0, [sp, #200]
   2eea0:	str	x0, [sp, #32]
   2eea4:	ldr	x0, [sp, #224]
   2eea8:	str	x0, [sp, #24]
   2eeac:	add	x0, sp, #0x108
   2eeb0:	str	x0, [sp, #16]
   2eeb4:	ldr	x0, [sp, #184]
   2eeb8:	str	x0, [sp, #8]
   2eebc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2eec0:	add	x0, x0, #0xe20
   2eec4:	str	x0, [sp]
   2eec8:	ldr	x7, [sp, #184]
   2eecc:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2eed0:	add	x6, x0, #0xdb8
   2eed4:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2eed8:	add	x5, x0, #0xdc8
   2eedc:	ldr	x4, [sp, #160]
   2eee0:	ldr	w3, [sp, #176]
   2eee4:	ldr	x2, [sp, #168]
   2eee8:	ldr	w1, [sp, #180]
   2eeec:	ldr	w0, [sp, #196]
   2eef0:	bl	2e320 <udev_util_encode_string@@LIBUDEV_183+0x22af0>
   2eef4:	mov	w19, w0
   2eef8:	b	2ef90 <udev_util_encode_string@@LIBUDEV_183+0x23760>
   2eefc:	ldr	x0, [sp, #200]
   2ef00:	cmp	x0, #0x0
   2ef04:	b.eq	2ef58 <udev_util_encode_string@@LIBUDEV_183+0x23728>  // b.none
   2ef08:	str	xzr, [sp, #24]
   2ef0c:	ldr	x0, [sp, #200]
   2ef10:	str	x0, [sp, #16]
   2ef14:	ldr	x0, [sp, #224]
   2ef18:	str	x0, [sp, #8]
   2ef1c:	add	x0, sp, #0x108
   2ef20:	str	x0, [sp]
   2ef24:	ldr	x7, [sp, #200]
   2ef28:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ef2c:	add	x6, x0, #0xe20
   2ef30:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ef34:	add	x5, x0, #0xdc8
   2ef38:	ldr	x4, [sp, #160]
   2ef3c:	ldr	w3, [sp, #176]
   2ef40:	ldr	x2, [sp, #168]
   2ef44:	ldr	w1, [sp, #180]
   2ef48:	ldr	w0, [sp, #196]
   2ef4c:	bl	2e320 <udev_util_encode_string@@LIBUDEV_183+0x22af0>
   2ef50:	mov	w19, w0
   2ef54:	b	2ef90 <udev_util_encode_string@@LIBUDEV_183+0x23760>
   2ef58:	add	x0, sp, #0x108
   2ef5c:	str	xzr, [sp]
   2ef60:	mov	x7, x0
   2ef64:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ef68:	add	x6, x0, #0xe30
   2ef6c:	adrp	x0, 3c000 <udev_util_encode_string@@LIBUDEV_183+0x307d0>
   2ef70:	add	x5, x0, #0xdc8
   2ef74:	ldr	x4, [sp, #160]
   2ef78:	ldr	w3, [sp, #176]
   2ef7c:	ldr	x2, [sp, #168]
   2ef80:	ldr	w1, [sp, #180]
   2ef84:	ldr	w0, [sp, #196]
   2ef88:	bl	2e320 <udev_util_encode_string@@LIBUDEV_183+0x22af0>
   2ef8c:	mov	w19, w0
   2ef90:	add	x0, sp, #0xdc
   2ef94:	bl	2b5dc <udev_util_encode_string@@LIBUDEV_183+0x1fdac>
   2ef98:	mov	w1, w19
   2ef9c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2efa0:	ldr	x0, [x0, #4016]
   2efa4:	ldr	x2, [sp, #2312]
   2efa8:	ldr	x0, [x0]
   2efac:	eor	x0, x2, x0
   2efb0:	cmp	x0, #0x0
   2efb4:	b.eq	2efbc <udev_util_encode_string@@LIBUDEV_183+0x2378c>  // b.none
   2efb8:	bl	5390 <__stack_chk_fail@plt>
   2efbc:	mov	w0, w1
   2efc0:	ldr	x19, [sp, #96]
   2efc4:	ldp	x29, x30, [sp, #80]
   2efc8:	add	sp, sp, #0x990
   2efcc:	ret
   2efd0:	sub	sp, sp, #0x10
   2efd4:	str	x0, [sp, #8]
   2efd8:	str	x1, [sp]
   2efdc:	ldr	x1, [sp, #8]
   2efe0:	ldr	x0, [sp]
   2efe4:	add	x0, x1, x0
   2efe8:	sub	x1, x0, #0x1
   2efec:	ldr	x0, [sp]
   2eff0:	neg	x0, x0
   2eff4:	and	x0, x1, x0
   2eff8:	add	sp, sp, #0x10
   2effc:	ret
   2f000:	stp	x29, x30, [sp, #-112]!
   2f004:	mov	x29, sp
   2f008:	str	x19, [sp, #16]
   2f00c:	str	x0, [sp, #40]
   2f010:	ldr	x0, [sp, #40]
   2f014:	ldr	x0, [x0, #16]
   2f018:	cmp	x0, #0x7
   2f01c:	cset	w0, ls  // ls = plast
   2f020:	and	w0, w0, #0xff
   2f024:	and	x0, x0, #0xff
   2f028:	cmp	x0, #0x0
   2f02c:	b.eq	2f058 <udev_util_encode_string@@LIBUDEV_183+0x23828>  // b.none
   2f030:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f034:	add	x1, x0, #0x3b
   2f038:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f03c:	add	x4, x0, #0x98
   2f040:	mov	w3, #0x19                  	// #25
   2f044:	mov	x2, x1
   2f048:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f04c:	add	x1, x0, #0x50
   2f050:	mov	w0, #0x0                   	// #0
   2f054:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2f058:	ldr	x0, [sp, #40]
   2f05c:	ldr	w0, [x0, #24]
   2f060:	cmp	w0, #0x0
   2f064:	cset	w0, eq  // eq = none
   2f068:	and	w0, w0, #0xff
   2f06c:	and	x0, x0, #0xff
   2f070:	cmp	x0, #0x0
   2f074:	b.eq	2f0a0 <udev_util_encode_string@@LIBUDEV_183+0x23870>  // b.none
   2f078:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f07c:	add	x1, x0, #0x3b
   2f080:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f084:	add	x4, x0, #0x98
   2f088:	mov	w3, #0x1a                  	// #26
   2f08c:	mov	x2, x1
   2f090:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f094:	add	x1, x0, #0x70
   2f098:	mov	w0, #0x0                   	// #0
   2f09c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2f0a0:	ldr	x0, [sp, #40]
   2f0a4:	ldr	x0, [x0, #8]
   2f0a8:	cmp	x0, #0x0
   2f0ac:	b.eq	2f0d8 <udev_util_encode_string@@LIBUDEV_183+0x238a8>  // b.none
   2f0b0:	ldr	x0, [sp, #40]
   2f0b4:	ldr	x0, [x0, #8]
   2f0b8:	str	x0, [sp, #104]
   2f0bc:	ldr	x0, [sp, #40]
   2f0c0:	ldr	x0, [x0, #8]
   2f0c4:	ldr	x1, [x0]
   2f0c8:	ldr	x0, [sp, #40]
   2f0cc:	str	x1, [x0, #8]
   2f0d0:	ldr	x0, [sp, #104]
   2f0d4:	b	2f248 <udev_util_encode_string@@LIBUDEV_183+0x23a18>
   2f0d8:	ldr	x0, [sp, #40]
   2f0dc:	ldr	x0, [x0]
   2f0e0:	cmp	x0, #0x0
   2f0e4:	cset	w0, eq  // eq = none
   2f0e8:	and	w0, w0, #0xff
   2f0ec:	and	x0, x0, #0xff
   2f0f0:	cmp	x0, #0x0
   2f0f4:	b.ne	2f128 <udev_util_encode_string@@LIBUDEV_183+0x238f8>  // b.any
   2f0f8:	ldr	x0, [sp, #40]
   2f0fc:	ldr	x0, [x0]
   2f100:	ldr	x1, [x0, #16]
   2f104:	ldr	x0, [sp, #40]
   2f108:	ldr	x0, [x0]
   2f10c:	ldr	x0, [x0, #8]
   2f110:	cmp	x1, x0
   2f114:	cset	w0, cs  // cs = hs, nlast
   2f118:	and	w0, w0, #0xff
   2f11c:	and	x0, x0, #0xff
   2f120:	cmp	x0, #0x0
   2f124:	b.eq	2f210 <udev_util_encode_string@@LIBUDEV_183+0x239e0>  // b.none
   2f128:	ldr	x0, [sp, #40]
   2f12c:	ldr	x0, [x0]
   2f130:	cmp	x0, #0x0
   2f134:	b.eq	2f148 <udev_util_encode_string@@LIBUDEV_183+0x23918>  // b.none
   2f138:	ldr	x0, [sp, #40]
   2f13c:	ldr	x0, [x0]
   2f140:	ldr	x0, [x0, #8]
   2f144:	b	2f14c <udev_util_encode_string@@LIBUDEV_183+0x2391c>
   2f148:	mov	x0, #0x0                   	// #0
   2f14c:	str	x0, [sp, #64]
   2f150:	ldr	x0, [sp, #40]
   2f154:	ldr	w0, [x0, #24]
   2f158:	str	w0, [sp, #60]
   2f15c:	ldr	x0, [sp, #64]
   2f160:	lsl	x0, x0, #1
   2f164:	str	x0, [sp, #72]
   2f168:	ldr	w0, [sp, #60]
   2f16c:	ldr	x2, [sp, #72]
   2f170:	ldr	x1, [sp, #72]
   2f174:	cmp	x2, x0
   2f178:	csel	x0, x1, x0, cs  // cs = hs, nlast
   2f17c:	str	x0, [sp, #64]
   2f180:	ldr	x0, [sp, #40]
   2f184:	ldr	x1, [x0, #16]
   2f188:	ldr	x0, [sp, #64]
   2f18c:	mul	x0, x1, x0
   2f190:	add	x19, x0, #0x18
   2f194:	bl	363f0 <udev_util_encode_string@@LIBUDEV_183+0x2abc0>
   2f198:	mov	x1, x0
   2f19c:	mov	x0, x19
   2f1a0:	bl	2efd0 <udev_util_encode_string@@LIBUDEV_183+0x237a0>
   2f1a4:	str	x0, [sp, #80]
   2f1a8:	ldr	x0, [sp, #80]
   2f1ac:	sub	x1, x0, #0x18
   2f1b0:	ldr	x0, [sp, #40]
   2f1b4:	ldr	x0, [x0, #16]
   2f1b8:	udiv	x0, x1, x0
   2f1bc:	str	x0, [sp, #64]
   2f1c0:	ldr	x0, [sp, #80]
   2f1c4:	bl	5220 <malloc@plt>
   2f1c8:	str	x0, [sp, #88]
   2f1cc:	ldr	x0, [sp, #88]
   2f1d0:	cmp	x0, #0x0
   2f1d4:	b.ne	2f1e0 <udev_util_encode_string@@LIBUDEV_183+0x239b0>  // b.any
   2f1d8:	mov	x0, #0x0                   	// #0
   2f1dc:	b	2f248 <udev_util_encode_string@@LIBUDEV_183+0x23a18>
   2f1e0:	ldr	x0, [sp, #40]
   2f1e4:	ldr	x1, [x0]
   2f1e8:	ldr	x0, [sp, #88]
   2f1ec:	str	x1, [x0]
   2f1f0:	ldr	x0, [sp, #88]
   2f1f4:	ldr	x1, [sp, #64]
   2f1f8:	str	x1, [x0, #8]
   2f1fc:	ldr	x0, [sp, #88]
   2f200:	str	xzr, [x0, #16]
   2f204:	ldr	x0, [sp, #40]
   2f208:	ldr	x1, [sp, #88]
   2f20c:	str	x1, [x0]
   2f210:	ldr	x0, [sp, #40]
   2f214:	ldr	x1, [x0]
   2f218:	ldr	x0, [x1, #16]
   2f21c:	add	x2, x0, #0x1
   2f220:	str	x2, [x1, #16]
   2f224:	str	x0, [sp, #96]
   2f228:	ldr	x0, [sp, #40]
   2f22c:	ldr	x1, [x0]
   2f230:	ldr	x0, [sp, #40]
   2f234:	ldr	x2, [x0, #16]
   2f238:	ldr	x0, [sp, #96]
   2f23c:	mul	x0, x2, x0
   2f240:	add	x0, x0, #0x18
   2f244:	add	x0, x1, x0
   2f248:	ldr	x19, [sp, #16]
   2f24c:	ldp	x29, x30, [sp], #112
   2f250:	ret
   2f254:	stp	x29, x30, [sp, #-48]!
   2f258:	mov	x29, sp
   2f25c:	str	x0, [sp, #24]
   2f260:	ldr	x0, [sp, #24]
   2f264:	bl	2f000 <udev_util_encode_string@@LIBUDEV_183+0x237d0>
   2f268:	str	x0, [sp, #32]
   2f26c:	ldr	x0, [sp, #32]
   2f270:	cmp	x0, #0x0
   2f274:	b.eq	2f2a0 <udev_util_encode_string@@LIBUDEV_183+0x23a70>  // b.none
   2f278:	ldr	x0, [sp, #24]
   2f27c:	ldr	x0, [x0, #16]
   2f280:	str	x0, [sp, #40]
   2f284:	ldr	x0, [sp, #40]
   2f288:	cmp	x0, #0x0
   2f28c:	b.eq	2f2a0 <udev_util_encode_string@@LIBUDEV_183+0x23a70>  // b.none
   2f290:	ldr	x2, [sp, #40]
   2f294:	mov	w1, #0x0                   	// #0
   2f298:	ldr	x0, [sp, #32]
   2f29c:	bl	5290 <memset@plt>
   2f2a0:	ldr	x0, [sp, #32]
   2f2a4:	ldp	x29, x30, [sp], #48
   2f2a8:	ret
   2f2ac:	sub	sp, sp, #0x10
   2f2b0:	str	x0, [sp, #8]
   2f2b4:	str	x1, [sp]
   2f2b8:	ldr	x0, [sp, #8]
   2f2bc:	ldr	x1, [x0, #8]
   2f2c0:	ldr	x0, [sp]
   2f2c4:	str	x1, [x0]
   2f2c8:	ldr	x0, [sp, #8]
   2f2cc:	ldr	x1, [sp]
   2f2d0:	str	x1, [x0, #8]
   2f2d4:	nop
   2f2d8:	add	sp, sp, #0x10
   2f2dc:	ret
   2f2e0:	stp	x29, x30, [sp, #-16]!
   2f2e4:	mov	x29, sp
   2f2e8:	bl	32638 <udev_util_encode_string@@LIBUDEV_183+0x26e08>
   2f2ec:	and	w0, w0, #0xff
   2f2f0:	eor	w0, w0, #0x1
   2f2f4:	and	w0, w0, #0xff
   2f2f8:	cmp	w0, #0x0
   2f2fc:	b.eq	2f308 <udev_util_encode_string@@LIBUDEV_183+0x23ad8>  // b.none
   2f300:	mov	w0, #0x0                   	// #0
   2f304:	b	2f384 <udev_util_encode_string@@LIBUDEV_183+0x23b54>
   2f308:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2f30c:	ldr	x0, [x0, #4000]
   2f310:	ldrb	w0, [x0]
   2f314:	eor	w0, w0, #0x1
   2f318:	and	w0, w0, #0xff
   2f31c:	cmp	w0, #0x0
   2f320:	b.eq	2f330 <udev_util_encode_string@@LIBUDEV_183+0x23b00>  // b.none
   2f324:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2f328:	add	x0, x0, #0xdc
   2f32c:	str	wzr, [x0]
   2f330:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2f334:	add	x0, x0, #0xdc
   2f338:	ldr	w0, [x0]
   2f33c:	cmp	w0, #0x0
   2f340:	b.ge	2f36c <udev_util_encode_string@@LIBUDEV_183+0x23b3c>  // b.tcont
   2f344:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f348:	add	x0, x0, #0x88
   2f34c:	bl	363b4 <udev_util_encode_string@@LIBUDEV_183+0x2ab84>
   2f350:	cmp	w0, #0x0
   2f354:	cset	w0, ne  // ne = any
   2f358:	and	w0, w0, #0xff
   2f35c:	mov	w1, w0
   2f360:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2f364:	add	x0, x0, #0xdc
   2f368:	str	w1, [x0]
   2f36c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   2f370:	add	x0, x0, #0xdc
   2f374:	ldr	w0, [x0]
   2f378:	cmp	w0, #0x0
   2f37c:	cset	w0, ne  // ne = any
   2f380:	and	w0, w0, #0xff
   2f384:	ldp	x29, x30, [sp], #16
   2f388:	ret
   2f38c:	stp	x29, x30, [sp, #-32]!
   2f390:	mov	x29, sp
   2f394:	str	x0, [sp, #24]
   2f398:	str	w1, [sp, #20]
   2f39c:	ldr	w1, [sp, #20]
   2f3a0:	ldr	x0, [sp, #24]
   2f3a4:	bl	5840 <mkdir@plt>
   2f3a8:	cmp	w0, #0x0
   2f3ac:	b.ge	2f3c0 <udev_util_encode_string@@LIBUDEV_183+0x23b90>  // b.tcont
   2f3b0:	bl	57d0 <__errno_location@plt>
   2f3b4:	ldr	w0, [x0]
   2f3b8:	neg	w0, w0
   2f3bc:	b	2f3c4 <udev_util_encode_string@@LIBUDEV_183+0x23b94>
   2f3c0:	mov	w0, #0x0                   	// #0
   2f3c4:	ldp	x29, x30, [sp], #32
   2f3c8:	ret
   2f3cc:	stp	x29, x30, [sp, #-208]!
   2f3d0:	mov	x29, sp
   2f3d4:	stp	x19, x20, [sp, #16]
   2f3d8:	stp	x21, x22, [sp, #32]
   2f3dc:	stp	x23, x24, [sp, #48]
   2f3e0:	stp	x25, x26, [sp, #64]
   2f3e4:	str	x27, [sp, #80]
   2f3e8:	str	x0, [x29, #120]
   2f3ec:	str	x1, [x29, #112]
   2f3f0:	str	w2, [x29, #108]
   2f3f4:	str	x3, [x29, #96]
   2f3f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2f3fc:	ldr	x0, [x0, #4016]
   2f400:	ldr	x1, [x0]
   2f404:	str	x1, [x29, #200]
   2f408:	mov	x1, #0x0                   	// #0
   2f40c:	ldr	x0, [x29, #112]
   2f410:	cmp	x0, #0x0
   2f414:	cset	w0, eq  // eq = none
   2f418:	and	w0, w0, #0xff
   2f41c:	and	x0, x0, #0xff
   2f420:	cmp	x0, #0x0
   2f424:	b.eq	2f450 <udev_util_encode_string@@LIBUDEV_183+0x23c20>  // b.none
   2f428:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f42c:	add	x1, x0, #0xb3
   2f430:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f434:	add	x4, x0, #0x250
   2f438:	mov	w3, #0x61                  	// #97
   2f43c:	mov	x2, x1
   2f440:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f444:	add	x1, x0, #0x240
   2f448:	mov	w0, #0x0                   	// #0
   2f44c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2f450:	ldr	x1, [x29, #96]
   2f454:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2f458:	ldr	x0, [x0, #4088]
   2f45c:	cmp	x1, x0
   2f460:	cset	w0, eq  // eq = none
   2f464:	and	w0, w0, #0xff
   2f468:	and	x0, x0, #0xff
   2f46c:	cmp	x0, #0x0
   2f470:	b.eq	2f49c <udev_util_encode_string@@LIBUDEV_183+0x23c6c>  // b.none
   2f474:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f478:	add	x1, x0, #0xb3
   2f47c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f480:	add	x4, x0, #0x250
   2f484:	mov	w3, #0x62                  	// #98
   2f488:	mov	x2, x1
   2f48c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f490:	add	x1, x0, #0xc8
   2f494:	mov	w0, #0x0                   	// #0
   2f498:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2f49c:	ldr	x0, [x29, #120]
   2f4a0:	cmp	x0, #0x0
   2f4a4:	b.eq	2f4c4 <udev_util_encode_string@@LIBUDEV_183+0x23c94>  // b.none
   2f4a8:	ldr	x1, [x29, #120]
   2f4ac:	ldr	x0, [x29, #112]
   2f4b0:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   2f4b4:	cmp	x0, #0x0
   2f4b8:	b.ne	2f4c4 <udev_util_encode_string@@LIBUDEV_183+0x23c94>  // b.any
   2f4bc:	mov	w0, #0xffffffec            	// #-20
   2f4c0:	b	2f730 <udev_util_encode_string@@LIBUDEV_183+0x23f00>
   2f4c4:	mov	w1, #0x2f                  	// #47
   2f4c8:	ldr	x0, [x29, #112]
   2f4cc:	bl	53b0 <strrchr@plt>
   2f4d0:	str	x0, [x29, #152]
   2f4d4:	ldr	x0, [x29, #152]
   2f4d8:	cmp	x0, #0x0
   2f4dc:	b.ne	2f4e8 <udev_util_encode_string@@LIBUDEV_183+0x23cb8>  // b.any
   2f4e0:	mov	w0, #0xffffffea            	// #-22
   2f4e4:	b	2f730 <udev_util_encode_string@@LIBUDEV_183+0x23f00>
   2f4e8:	ldr	x1, [x29, #152]
   2f4ec:	ldr	x0, [x29, #112]
   2f4f0:	cmp	x1, x0
   2f4f4:	b.ne	2f500 <udev_util_encode_string@@LIBUDEV_183+0x23cd0>  // b.any
   2f4f8:	mov	w0, #0x0                   	// #0
   2f4fc:	b	2f730 <udev_util_encode_string@@LIBUDEV_183+0x23f00>
   2f500:	ldr	x0, [x29, #112]
   2f504:	str	x0, [x29, #160]
   2f508:	ldr	x1, [x29, #152]
   2f50c:	ldr	x0, [x29, #112]
   2f510:	sub	x0, x1, x0
   2f514:	mov	x1, x0
   2f518:	ldr	x0, [x29, #160]
   2f51c:	bl	5080 <strnlen@plt>
   2f520:	str	x0, [x29, #168]
   2f524:	ldr	x0, [x29, #168]
   2f528:	add	x0, x0, #0x1
   2f52c:	add	x0, x0, #0xf
   2f530:	lsr	x0, x0, #4
   2f534:	lsl	x0, x0, #4
   2f538:	sub	sp, sp, x0
   2f53c:	mov	x0, sp
   2f540:	add	x0, x0, #0xf
   2f544:	lsr	x0, x0, #4
   2f548:	lsl	x0, x0, #4
   2f54c:	str	x0, [x29, #176]
   2f550:	ldr	x1, [x29, #176]
   2f554:	ldr	x0, [x29, #168]
   2f558:	add	x0, x1, x0
   2f55c:	strb	wzr, [x0]
   2f560:	ldr	x2, [x29, #168]
   2f564:	ldr	x1, [x29, #160]
   2f568:	ldr	x0, [x29, #176]
   2f56c:	bl	5010 <memcpy@plt>
   2f570:	str	x0, [x29, #144]
   2f574:	mov	w1, #0x1                   	// #1
   2f578:	ldr	x0, [x29, #144]
   2f57c:	bl	33ad4 <udev_util_encode_string@@LIBUDEV_183+0x282a4>
   2f580:	str	w0, [x29, #140]
   2f584:	ldr	w0, [x29, #140]
   2f588:	cmp	w0, #0x0
   2f58c:	b.le	2f598 <udev_util_encode_string@@LIBUDEV_183+0x23d68>
   2f590:	mov	w0, #0x0                   	// #0
   2f594:	b	2f730 <udev_util_encode_string@@LIBUDEV_183+0x23f00>
   2f598:	ldr	w0, [x29, #140]
   2f59c:	cmp	w0, #0x0
   2f5a0:	b.ne	2f5ac <udev_util_encode_string@@LIBUDEV_183+0x23d7c>  // b.any
   2f5a4:	mov	w0, #0xffffffec            	// #-20
   2f5a8:	b	2f730 <udev_util_encode_string@@LIBUDEV_183+0x23f00>
   2f5ac:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f5b0:	add	x1, x0, #0x248
   2f5b4:	ldr	x0, [x29, #112]
   2f5b8:	bl	5560 <strspn@plt>
   2f5bc:	mov	x1, x0
   2f5c0:	ldr	x0, [x29, #112]
   2f5c4:	add	x0, x0, x1
   2f5c8:	str	x0, [x29, #144]
   2f5cc:	mov	x0, sp
   2f5d0:	mov	x19, x0
   2f5d4:	ldr	x0, [x29, #112]
   2f5d8:	bl	5040 <strlen@plt>
   2f5dc:	add	x0, x0, #0x1
   2f5e0:	mov	x1, x0
   2f5e4:	sub	x1, x1, #0x1
   2f5e8:	str	x1, [x29, #184]
   2f5ec:	mov	x24, x0
   2f5f0:	mov	x25, #0x0                   	// #0
   2f5f4:	lsr	x1, x24, #61
   2f5f8:	lsl	x21, x25, #3
   2f5fc:	orr	x21, x1, x21
   2f600:	lsl	x20, x24, #3
   2f604:	mov	x26, x0
   2f608:	mov	x27, #0x0                   	// #0
   2f60c:	lsr	x1, x26, #61
   2f610:	lsl	x23, x27, #3
   2f614:	orr	x23, x1, x23
   2f618:	lsl	x22, x26, #3
   2f61c:	add	x0, x0, #0xf
   2f620:	lsr	x0, x0, #4
   2f624:	lsl	x0, x0, #4
   2f628:	sub	sp, sp, x0
   2f62c:	mov	x0, sp
   2f630:	add	x0, x0, #0x0
   2f634:	str	x0, [x29, #192]
   2f638:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f63c:	add	x1, x0, #0x248
   2f640:	ldr	x0, [x29, #144]
   2f644:	bl	57c0 <strcspn@plt>
   2f648:	mov	x1, x0
   2f64c:	ldr	x0, [x29, #144]
   2f650:	add	x0, x0, x1
   2f654:	str	x0, [x29, #152]
   2f658:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2f65c:	add	x1, x0, #0x248
   2f660:	ldr	x0, [x29, #152]
   2f664:	bl	5560 <strspn@plt>
   2f668:	mov	x1, x0
   2f66c:	ldr	x0, [x29, #152]
   2f670:	add	x0, x0, x1
   2f674:	str	x0, [x29, #144]
   2f678:	ldr	x0, [x29, #144]
   2f67c:	ldrb	w0, [x0]
   2f680:	cmp	w0, #0x0
   2f684:	b.ne	2f690 <udev_util_encode_string@@LIBUDEV_183+0x23e60>  // b.any
   2f688:	mov	w0, #0x0                   	// #0
   2f68c:	b	2f72c <udev_util_encode_string@@LIBUDEV_183+0x23efc>
   2f690:	ldr	x3, [x29, #192]
   2f694:	ldr	x1, [x29, #152]
   2f698:	ldr	x0, [x29, #112]
   2f69c:	sub	x0, x1, x0
   2f6a0:	mov	x2, x0
   2f6a4:	ldr	x1, [x29, #112]
   2f6a8:	mov	x0, x3
   2f6ac:	bl	5010 <memcpy@plt>
   2f6b0:	ldr	x1, [x29, #152]
   2f6b4:	ldr	x0, [x29, #112]
   2f6b8:	sub	x0, x1, x0
   2f6bc:	ldr	x1, [x29, #192]
   2f6c0:	strb	wzr, [x1, x0]
   2f6c4:	ldr	x0, [x29, #120]
   2f6c8:	cmp	x0, #0x0
   2f6cc:	b.eq	2f6f0 <udev_util_encode_string@@LIBUDEV_183+0x23ec0>  // b.none
   2f6d0:	ldr	x0, [x29, #192]
   2f6d4:	mov	x1, x0
   2f6d8:	ldr	x0, [x29, #120]
   2f6dc:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   2f6e0:	cmp	x0, #0x0
   2f6e4:	b.eq	2f6f0 <udev_util_encode_string@@LIBUDEV_183+0x23ec0>  // b.none
   2f6e8:	mov	sp, x19
   2f6ec:	b	2f5cc <udev_util_encode_string@@LIBUDEV_183+0x23d9c>
   2f6f0:	ldr	x0, [x29, #192]
   2f6f4:	ldr	x2, [x29, #96]
   2f6f8:	ldr	w1, [x29, #108]
   2f6fc:	blr	x2
   2f700:	str	w0, [x29, #140]
   2f704:	ldr	w0, [x29, #140]
   2f708:	cmp	w0, #0x0
   2f70c:	b.ge	2f724 <udev_util_encode_string@@LIBUDEV_183+0x23ef4>  // b.tcont
   2f710:	ldr	w0, [x29, #140]
   2f714:	cmn	w0, #0x11
   2f718:	b.eq	2f724 <udev_util_encode_string@@LIBUDEV_183+0x23ef4>  // b.none
   2f71c:	ldr	w0, [x29, #140]
   2f720:	b	2f72c <udev_util_encode_string@@LIBUDEV_183+0x23efc>
   2f724:	mov	sp, x19
   2f728:	b	2f5cc <udev_util_encode_string@@LIBUDEV_183+0x23d9c>
   2f72c:	mov	sp, x19
   2f730:	mov	w1, w0
   2f734:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2f738:	ldr	x0, [x0, #4016]
   2f73c:	ldr	x2, [x29, #200]
   2f740:	ldr	x0, [x0]
   2f744:	eor	x0, x2, x0
   2f748:	cmp	x0, #0x0
   2f74c:	b.eq	2f754 <udev_util_encode_string@@LIBUDEV_183+0x23f24>  // b.none
   2f750:	bl	5390 <__stack_chk_fail@plt>
   2f754:	mov	w0, w1
   2f758:	mov	sp, x29
   2f75c:	ldp	x19, x20, [sp, #16]
   2f760:	ldp	x21, x22, [sp, #32]
   2f764:	ldp	x23, x24, [sp, #48]
   2f768:	ldp	x25, x26, [sp, #64]
   2f76c:	ldr	x27, [sp, #80]
   2f770:	ldp	x29, x30, [sp], #208
   2f774:	ret
   2f778:	stp	x29, x30, [sp, #-32]!
   2f77c:	mov	x29, sp
   2f780:	str	x0, [sp, #24]
   2f784:	str	w1, [sp, #20]
   2f788:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2f78c:	ldr	x3, [x0, #4032]
   2f790:	ldr	w2, [sp, #20]
   2f794:	ldr	x1, [sp, #24]
   2f798:	mov	x0, #0x0                   	// #0
   2f79c:	bl	2f3cc <udev_util_encode_string@@LIBUDEV_183+0x23b9c>
   2f7a0:	ldp	x29, x30, [sp], #32
   2f7a4:	ret
   2f7a8:	stp	x29, x30, [sp, #-32]!
   2f7ac:	mov	x29, sp
   2f7b0:	str	x0, [sp, #24]
   2f7b4:	ldr	x0, [sp, #24]
   2f7b8:	bl	54b0 <free@plt>
   2f7bc:	mov	x0, #0x0                   	// #0
   2f7c0:	ldp	x29, x30, [sp], #32
   2f7c4:	ret
   2f7c8:	stp	x29, x30, [sp, #-32]!
   2f7cc:	mov	x29, sp
   2f7d0:	str	x0, [sp, #24]
   2f7d4:	ldr	x0, [sp, #24]
   2f7d8:	ldr	x0, [x0]
   2f7dc:	bl	54b0 <free@plt>
   2f7e0:	nop
   2f7e4:	ldp	x29, x30, [sp], #32
   2f7e8:	ret
   2f7ec:	stp	x29, x30, [sp, #-32]!
   2f7f0:	mov	x29, sp
   2f7f4:	str	x0, [sp, #24]
   2f7f8:	ldr	x0, [sp, #24]
   2f7fc:	ldr	w0, [x0]
   2f800:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   2f804:	nop
   2f808:	ldp	x29, x30, [sp], #32
   2f80c:	ret
   2f810:	stp	x29, x30, [sp, #-32]!
   2f814:	mov	x29, sp
   2f818:	str	x0, [sp, #24]
   2f81c:	ldr	x0, [sp, #24]
   2f820:	ldr	x0, [x0]
   2f824:	bl	23070 <udev_util_encode_string@@LIBUDEV_183+0x17840>
   2f828:	nop
   2f82c:	ldp	x29, x30, [sp], #32
   2f830:	ret
   2f834:	stp	x29, x30, [sp, #-48]!
   2f838:	mov	x29, sp
   2f83c:	str	x0, [sp, #40]
   2f840:	str	x1, [sp, #32]
   2f844:	str	x2, [sp, #24]
   2f848:	ldr	x3, [sp, #24]
   2f84c:	ldr	x2, [sp, #32]
   2f850:	mov	w1, #0x0                   	// #0
   2f854:	ldr	x0, [sp, #40]
   2f858:	bl	24b50 <udev_util_encode_string@@LIBUDEV_183+0x19320>
   2f85c:	ldp	x29, x30, [sp], #48
   2f860:	ret
   2f864:	stp	x29, x30, [sp, #-48]!
   2f868:	mov	x29, sp
   2f86c:	str	x0, [sp, #40]
   2f870:	str	x1, [sp, #32]
   2f874:	str	x2, [sp, #24]
   2f878:	ldr	x3, [sp, #24]
   2f87c:	mov	w2, #0x0                   	// #0
   2f880:	ldr	x1, [sp, #32]
   2f884:	ldr	x0, [sp, #40]
   2f888:	bl	24e98 <udev_util_encode_string@@LIBUDEV_183+0x19668>
   2f88c:	ldp	x29, x30, [sp], #48
   2f890:	ret
   2f894:	sub	sp, sp, #0x10
   2f898:	str	x0, [sp, #8]
   2f89c:	ldr	x0, [sp, #8]
   2f8a0:	cmp	x0, #0x0
   2f8a4:	b.eq	2f8b8 <udev_util_encode_string@@LIBUDEV_183+0x24088>  // b.none
   2f8a8:	ldr	x0, [sp, #8]
   2f8ac:	ldrb	w0, [x0]
   2f8b0:	cmp	w0, #0x0
   2f8b4:	b.ne	2f8c0 <udev_util_encode_string@@LIBUDEV_183+0x24090>  // b.any
   2f8b8:	mov	w0, #0x1                   	// #1
   2f8bc:	b	2f8c4 <udev_util_encode_string@@LIBUDEV_183+0x24094>
   2f8c0:	mov	w0, #0x0                   	// #0
   2f8c4:	and	w0, w0, #0x1
   2f8c8:	and	w0, w0, #0xff
   2f8cc:	add	sp, sp, #0x10
   2f8d0:	ret
   2f8d4:	stp	x29, x30, [sp, #-48]!
   2f8d8:	mov	x29, sp
   2f8dc:	str	x0, [sp, #24]
   2f8e0:	str	x1, [sp, #16]
   2f8e4:	ldr	x0, [sp, #16]
   2f8e8:	bl	5040 <strlen@plt>
   2f8ec:	str	x0, [sp, #40]
   2f8f0:	ldr	x2, [sp, #40]
   2f8f4:	ldr	x1, [sp, #16]
   2f8f8:	ldr	x0, [sp, #24]
   2f8fc:	bl	5270 <strncmp@plt>
   2f900:	cmp	w0, #0x0
   2f904:	b.ne	2f918 <udev_util_encode_string@@LIBUDEV_183+0x240e8>  // b.any
   2f908:	ldr	x1, [sp, #24]
   2f90c:	ldr	x0, [sp, #40]
   2f910:	add	x0, x1, x0
   2f914:	b	2f91c <udev_util_encode_string@@LIBUDEV_183+0x240ec>
   2f918:	mov	x0, #0x0                   	// #0
   2f91c:	ldp	x29, x30, [sp], #48
   2f920:	ret
   2f924:	stp	x29, x30, [sp, #-112]!
   2f928:	mov	x29, sp
   2f92c:	str	x19, [sp, #16]
   2f930:	str	w0, [sp, #60]
   2f934:	str	x1, [sp, #48]
   2f938:	str	x2, [sp, #40]
   2f93c:	str	x3, [sp, #32]
   2f940:	str	w4, [sp, #56]
   2f944:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2f948:	ldr	x0, [x0, #4016]
   2f94c:	ldr	x1, [x0]
   2f950:	str	x1, [sp, #104]
   2f954:	mov	x1, #0x0                   	// #0
   2f958:	str	xzr, [sp, #80]
   2f95c:	mov	x0, #0x80                  	// #128
   2f960:	str	x0, [sp, #88]
   2f964:	mov	w0, #0xffffffff            	// #-1
   2f968:	str	w0, [sp, #76]
   2f96c:	ldr	x0, [sp, #88]
   2f970:	add	x0, x0, #0x8
   2f974:	mov	x1, x0
   2f978:	mov	x0, #0x1                   	// #1
   2f97c:	bl	52f0 <calloc@plt>
   2f980:	str	x0, [sp, #80]
   2f984:	ldr	x0, [sp, #80]
   2f988:	cmp	x0, #0x0
   2f98c:	b.ne	2f998 <udev_util_encode_string@@LIBUDEV_183+0x24168>  // b.any
   2f990:	mov	w19, #0xfffffff4            	// #-12
   2f994:	b	2fabc <udev_util_encode_string@@LIBUDEV_183+0x2428c>
   2f998:	ldr	x0, [sp, #80]
   2f99c:	ldr	x1, [sp, #88]
   2f9a0:	str	w1, [x0]
   2f9a4:	ldr	x0, [sp, #80]
   2f9a8:	add	x1, sp, #0x4c
   2f9ac:	ldr	w4, [sp, #56]
   2f9b0:	mov	x3, x1
   2f9b4:	mov	x2, x0
   2f9b8:	ldr	x1, [sp, #48]
   2f9bc:	ldr	w0, [sp, #60]
   2f9c0:	bl	5500 <name_to_handle_at@plt>
   2f9c4:	cmp	w0, #0x0
   2f9c8:	b.lt	2fa10 <udev_util_encode_string@@LIBUDEV_183+0x241e0>  // b.tstop
   2f9cc:	ldr	x0, [sp, #40]
   2f9d0:	cmp	x0, #0x0
   2f9d4:	b.eq	2f9f0 <udev_util_encode_string@@LIBUDEV_183+0x241c0>  // b.none
   2f9d8:	ldr	x0, [sp, #80]
   2f9dc:	str	x0, [sp, #96]
   2f9e0:	str	xzr, [sp, #80]
   2f9e4:	ldr	x1, [sp, #96]
   2f9e8:	ldr	x0, [sp, #40]
   2f9ec:	str	x1, [x0]
   2f9f0:	ldr	x0, [sp, #32]
   2f9f4:	cmp	x0, #0x0
   2f9f8:	b.eq	2fa08 <udev_util_encode_string@@LIBUDEV_183+0x241d8>  // b.none
   2f9fc:	ldr	w1, [sp, #76]
   2fa00:	ldr	x0, [sp, #32]
   2fa04:	str	w1, [x0]
   2fa08:	mov	w19, #0x0                   	// #0
   2fa0c:	b	2fabc <udev_util_encode_string@@LIBUDEV_183+0x2428c>
   2fa10:	bl	57d0 <__errno_location@plt>
   2fa14:	ldr	w0, [x0]
   2fa18:	cmp	w0, #0x4b
   2fa1c:	b.eq	2fa30 <udev_util_encode_string@@LIBUDEV_183+0x24200>  // b.none
   2fa20:	bl	57d0 <__errno_location@plt>
   2fa24:	ldr	w0, [x0]
   2fa28:	neg	w19, w0
   2fa2c:	b	2fabc <udev_util_encode_string@@LIBUDEV_183+0x2428c>
   2fa30:	ldr	x0, [sp, #40]
   2fa34:	cmp	x0, #0x0
   2fa38:	b.ne	2fa68 <udev_util_encode_string@@LIBUDEV_183+0x24238>  // b.any
   2fa3c:	ldr	x0, [sp, #32]
   2fa40:	cmp	x0, #0x0
   2fa44:	b.eq	2fa68 <udev_util_encode_string@@LIBUDEV_183+0x24238>  // b.none
   2fa48:	ldr	w0, [sp, #76]
   2fa4c:	cmp	w0, #0x0
   2fa50:	b.lt	2fa68 <udev_util_encode_string@@LIBUDEV_183+0x24238>  // b.tstop
   2fa54:	ldr	w1, [sp, #76]
   2fa58:	ldr	x0, [sp, #32]
   2fa5c:	str	w1, [x0]
   2fa60:	mov	w19, #0x0                   	// #0
   2fa64:	b	2fabc <udev_util_encode_string@@LIBUDEV_183+0x2428c>
   2fa68:	ldr	x0, [sp, #80]
   2fa6c:	ldr	w0, [x0]
   2fa70:	mov	w0, w0
   2fa74:	ldr	x1, [sp, #88]
   2fa78:	cmp	x1, x0
   2fa7c:	b.cc	2fa88 <udev_util_encode_string@@LIBUDEV_183+0x24258>  // b.lo, b.ul, b.last
   2fa80:	mov	w19, #0xffffffb5            	// #-75
   2fa84:	b	2fabc <udev_util_encode_string@@LIBUDEV_183+0x2428c>
   2fa88:	ldr	x0, [sp, #80]
   2fa8c:	ldr	w0, [x0]
   2fa90:	mov	w0, w0
   2fa94:	str	x0, [sp, #88]
   2fa98:	ldr	x0, [sp, #88]
   2fa9c:	cmn	x0, #0x9
   2faa0:	b.ls	2faac <udev_util_encode_string@@LIBUDEV_183+0x2427c>  // b.plast
   2faa4:	mov	w19, #0xffffffb5            	// #-75
   2faa8:	b	2fabc <udev_util_encode_string@@LIBUDEV_183+0x2428c>
   2faac:	ldr	x0, [sp, #80]
   2fab0:	bl	2f7a8 <udev_util_encode_string@@LIBUDEV_183+0x23f78>
   2fab4:	str	x0, [sp, #80]
   2fab8:	b	2f964 <udev_util_encode_string@@LIBUDEV_183+0x24134>
   2fabc:	add	x0, sp, #0x50
   2fac0:	bl	2f7c8 <udev_util_encode_string@@LIBUDEV_183+0x23f98>
   2fac4:	mov	w1, w19
   2fac8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2facc:	ldr	x0, [x0, #4016]
   2fad0:	ldr	x2, [sp, #104]
   2fad4:	ldr	x0, [x0]
   2fad8:	eor	x0, x2, x0
   2fadc:	cmp	x0, #0x0
   2fae0:	b.eq	2fae8 <udev_util_encode_string@@LIBUDEV_183+0x242b8>  // b.none
   2fae4:	bl	5390 <__stack_chk_fail@plt>
   2fae8:	mov	w0, w1
   2faec:	ldr	x19, [sp, #16]
   2faf0:	ldp	x29, x30, [sp], #112
   2faf4:	ret
   2faf8:	stp	x29, x30, [sp, #-128]!
   2fafc:	mov	x29, sp
   2fb00:	str	x19, [sp, #16]
   2fb04:	str	w0, [sp, #60]
   2fb08:	str	x1, [sp, #48]
   2fb0c:	str	w2, [sp, #56]
   2fb10:	str	x3, [sp, #40]
   2fb14:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2fb18:	ldr	x0, [x0, #4016]
   2fb1c:	ldr	x1, [x0]
   2fb20:	str	x1, [sp, #120]
   2fb24:	mov	x1, #0x0                   	// #0
   2fb28:	str	xzr, [sp, #72]
   2fb2c:	mov	w0, #0xffffffff            	// #-1
   2fb30:	str	w0, [sp, #64]
   2fb34:	ldr	w0, [sp, #56]
   2fb38:	and	w0, w0, #0x1000
   2fb3c:	cmp	w0, #0x0
   2fb40:	b.eq	2fbb4 <udev_util_encode_string@@LIBUDEV_183+0x24384>  // b.none
   2fb44:	ldr	x0, [sp, #48]
   2fb48:	bl	2f894 <udev_util_encode_string@@LIBUDEV_183+0x24064>
   2fb4c:	and	w0, w0, #0xff
   2fb50:	cmp	w0, #0x0
   2fb54:	b.eq	2fbb4 <udev_util_encode_string@@LIBUDEV_183+0x24384>  // b.none
   2fb58:	add	x4, sp, #0x58
   2fb5c:	ldr	w3, [sp, #60]
   2fb60:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fb64:	add	x2, x0, #0x438
   2fb68:	mov	x1, #0x1e                  	// #30
   2fb6c:	mov	x0, x4
   2fb70:	bl	5190 <snprintf@plt>
   2fb74:	cmp	w0, #0x1d
   2fb78:	cset	w0, hi  // hi = pmore
   2fb7c:	and	w0, w0, #0xff
   2fb80:	and	x0, x0, #0xff
   2fb84:	cmp	x0, #0x0
   2fb88:	b.eq	2fc64 <udev_util_encode_string@@LIBUDEV_183+0x24434>  // b.none
   2fb8c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fb90:	add	x1, x0, #0x453
   2fb94:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fb98:	add	x4, x0, #0x568
   2fb9c:	mov	w3, #0x61                  	// #97
   2fba0:	mov	x2, x1
   2fba4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fba8:	add	x1, x0, #0x470
   2fbac:	mov	w0, #0x0                   	// #0
   2fbb0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2fbb4:	ldr	w0, [sp, #56]
   2fbb8:	and	w0, w0, #0x400
   2fbbc:	cmp	w0, #0x0
   2fbc0:	b.eq	2fbcc <udev_util_encode_string@@LIBUDEV_183+0x2439c>  // b.none
   2fbc4:	mov	w0, #0x280000              	// #2621440
   2fbc8:	b	2fbd4 <udev_util_encode_string@@LIBUDEV_183+0x243a4>
   2fbcc:	mov	w0, #0x8000                	// #32768
   2fbd0:	movk	w0, #0x28, lsl #16
   2fbd4:	mov	w2, w0
   2fbd8:	ldr	x1, [sp, #48]
   2fbdc:	ldr	w0, [sp, #60]
   2fbe0:	bl	5310 <openat64@plt>
   2fbe4:	str	w0, [sp, #64]
   2fbe8:	ldr	w0, [sp, #64]
   2fbec:	cmp	w0, #0x0
   2fbf0:	b.ge	2fc04 <udev_util_encode_string@@LIBUDEV_183+0x243d4>  // b.tcont
   2fbf4:	bl	57d0 <__errno_location@plt>
   2fbf8:	ldr	w0, [x0]
   2fbfc:	neg	w19, w0
   2fc00:	b	2fd4c <udev_util_encode_string@@LIBUDEV_183+0x2451c>
   2fc04:	ldr	w0, [sp, #64]
   2fc08:	add	x4, sp, #0x58
   2fc0c:	mov	w3, w0
   2fc10:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fc14:	add	x2, x0, #0x438
   2fc18:	mov	x1, #0x1e                  	// #30
   2fc1c:	mov	x0, x4
   2fc20:	bl	5190 <snprintf@plt>
   2fc24:	cmp	w0, #0x1d
   2fc28:	cset	w0, hi  // hi = pmore
   2fc2c:	and	w0, w0, #0xff
   2fc30:	and	x0, x0, #0xff
   2fc34:	cmp	x0, #0x0
   2fc38:	b.eq	2fc64 <udev_util_encode_string@@LIBUDEV_183+0x24434>  // b.none
   2fc3c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fc40:	add	x1, x0, #0x453
   2fc44:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fc48:	add	x4, x0, #0x568
   2fc4c:	mov	w3, #0x67                  	// #103
   2fc50:	mov	x2, x1
   2fc54:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fc58:	add	x1, x0, #0x470
   2fc5c:	mov	w0, #0x0                   	// #0
   2fc60:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   2fc64:	add	x1, sp, #0x48
   2fc68:	add	x0, sp, #0x58
   2fc6c:	mov	x2, #0x0                   	// #0
   2fc70:	bl	2f834 <udev_util_encode_string@@LIBUDEV_183+0x24004>
   2fc74:	str	w0, [sp, #68]
   2fc78:	ldr	w0, [sp, #68]
   2fc7c:	cmn	w0, #0x2
   2fc80:	b.ne	2fc8c <udev_util_encode_string@@LIBUDEV_183+0x2445c>  // b.any
   2fc84:	mov	w19, #0xffffffa1            	// #-95
   2fc88:	b	2fd4c <udev_util_encode_string@@LIBUDEV_183+0x2451c>
   2fc8c:	ldr	w0, [sp, #68]
   2fc90:	cmp	w0, #0x0
   2fc94:	b.ge	2fca0 <udev_util_encode_string@@LIBUDEV_183+0x24470>  // b.tcont
   2fc98:	ldr	w19, [sp, #68]
   2fc9c:	b	2fd4c <udev_util_encode_string@@LIBUDEV_183+0x2451c>
   2fca0:	ldr	x2, [sp, #72]
   2fca4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fca8:	add	x1, x0, #0x498
   2fcac:	mov	x0, x2
   2fcb0:	bl	2f8d4 <udev_util_encode_string@@LIBUDEV_183+0x240a4>
   2fcb4:	str	x0, [sp, #80]
   2fcb8:	ldr	x0, [sp, #80]
   2fcbc:	cmp	x0, #0x0
   2fcc0:	b.ne	2fcfc <udev_util_encode_string@@LIBUDEV_183+0x244cc>  // b.any
   2fcc4:	ldr	x2, [sp, #72]
   2fcc8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fccc:	add	x1, x0, #0x4a0
   2fcd0:	mov	x0, x2
   2fcd4:	bl	56f0 <strstr@plt>
   2fcd8:	str	x0, [sp, #80]
   2fcdc:	ldr	x0, [sp, #80]
   2fce0:	cmp	x0, #0x0
   2fce4:	b.ne	2fcf0 <udev_util_encode_string@@LIBUDEV_183+0x244c0>  // b.any
   2fce8:	mov	w19, #0xffffffa1            	// #-95
   2fcec:	b	2fd4c <udev_util_encode_string@@LIBUDEV_183+0x2451c>
   2fcf0:	ldr	x0, [sp, #80]
   2fcf4:	add	x0, x0, #0x8
   2fcf8:	str	x0, [sp, #80]
   2fcfc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fd00:	add	x1, x0, #0x4b0
   2fd04:	ldr	x0, [sp, #80]
   2fd08:	bl	5560 <strspn@plt>
   2fd0c:	mov	x1, x0
   2fd10:	ldr	x0, [sp, #80]
   2fd14:	add	x0, x0, x1
   2fd18:	str	x0, [sp, #80]
   2fd1c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fd20:	add	x1, x0, #0x4b0
   2fd24:	ldr	x0, [sp, #80]
   2fd28:	bl	57c0 <strcspn@plt>
   2fd2c:	mov	x1, x0
   2fd30:	ldr	x0, [sp, #80]
   2fd34:	add	x0, x0, x1
   2fd38:	strb	wzr, [x0]
   2fd3c:	ldr	x1, [sp, #40]
   2fd40:	ldr	x0, [sp, #80]
   2fd44:	bl	304f4 <udev_util_encode_string@@LIBUDEV_183+0x24cc4>
   2fd48:	mov	w19, w0
   2fd4c:	add	x0, sp, #0x40
   2fd50:	bl	2f7ec <udev_util_encode_string@@LIBUDEV_183+0x23fbc>
   2fd54:	add	x0, sp, #0x48
   2fd58:	bl	2f7c8 <udev_util_encode_string@@LIBUDEV_183+0x23f98>
   2fd5c:	mov	w1, w19
   2fd60:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2fd64:	ldr	x0, [x0, #4016]
   2fd68:	ldr	x2, [sp, #120]
   2fd6c:	ldr	x0, [x0]
   2fd70:	eor	x0, x2, x0
   2fd74:	cmp	x0, #0x0
   2fd78:	b.eq	2fd80 <udev_util_encode_string@@LIBUDEV_183+0x24550>  // b.none
   2fd7c:	bl	5390 <__stack_chk_fail@plt>
   2fd80:	mov	w0, w1
   2fd84:	ldr	x19, [sp, #16]
   2fd88:	ldp	x29, x30, [sp], #128
   2fd8c:	ret
   2fd90:	stp	x29, x30, [sp, #-48]!
   2fd94:	mov	x29, sp
   2fd98:	str	x0, [sp, #24]
   2fd9c:	str	x1, [sp, #16]
   2fda0:	mov	w4, #0x0                   	// #0
   2fda4:	ldr	x3, [sp, #16]
   2fda8:	mov	x2, #0x0                   	// #0
   2fdac:	ldr	x1, [sp, #24]
   2fdb0:	mov	w0, #0xffffff9c            	// #-100
   2fdb4:	bl	2f924 <udev_util_encode_string@@LIBUDEV_183+0x240f4>
   2fdb8:	str	w0, [sp, #44]
   2fdbc:	strb	wzr, [sp, #43]
   2fdc0:	ldr	w0, [sp, #44]
   2fdc4:	cmp	w0, #0x0
   2fdc8:	b.ge	2fe30 <udev_util_encode_string@@LIBUDEV_183+0x24600>  // b.tcont
   2fdcc:	ldr	w0, [sp, #44]
   2fdd0:	cmn	w0, #0x26
   2fdd4:	b.ge	2fdf4 <udev_util_encode_string@@LIBUDEV_183+0x245c4>  // b.tcont
   2fdd8:	ldr	w0, [sp, #44]
   2fddc:	cmn	w0, #0x5f
   2fde0:	b.eq	2fe28 <udev_util_encode_string@@LIBUDEV_183+0x245f8>  // b.none
   2fde4:	ldr	w0, [sp, #44]
   2fde8:	cmn	w0, #0x4b
   2fdec:	b.eq	2fe28 <udev_util_encode_string@@LIBUDEV_183+0x245f8>  // b.none
   2fdf0:	b	2fe30 <udev_util_encode_string@@LIBUDEV_183+0x24600>
   2fdf4:	ldr	w0, [sp, #44]
   2fdf8:	add	w0, w0, #0x26
   2fdfc:	mov	x1, #0x1                   	// #1
   2fe00:	lsl	x1, x1, x0
   2fe04:	mov	x0, #0x1                   	// #1
   2fe08:	movk	x0, #0x201, lsl #16
   2fe0c:	movk	x0, #0x20, lsl #32
   2fe10:	and	x0, x1, x0
   2fe14:	cmp	x0, #0x0
   2fe18:	cset	w0, ne  // ne = any
   2fe1c:	and	w0, w0, #0xff
   2fe20:	cmp	w0, #0x0
   2fe24:	b.eq	2fe30 <udev_util_encode_string@@LIBUDEV_183+0x24600>  // b.none
   2fe28:	mov	w0, #0x1                   	// #1
   2fe2c:	strb	w0, [sp, #43]
   2fe30:	nop
   2fe34:	ldrb	w0, [sp, #43]
   2fe38:	cmp	w0, #0x0
   2fe3c:	b.eq	2fe58 <udev_util_encode_string@@LIBUDEV_183+0x24628>  // b.none
   2fe40:	ldr	x3, [sp, #16]
   2fe44:	mov	w2, #0x0                   	// #0
   2fe48:	ldr	x1, [sp, #24]
   2fe4c:	mov	w0, #0xffffff9c            	// #-100
   2fe50:	bl	2faf8 <udev_util_encode_string@@LIBUDEV_183+0x242c8>
   2fe54:	b	2fe5c <udev_util_encode_string@@LIBUDEV_183+0x2462c>
   2fe58:	ldr	w0, [sp, #44]
   2fe5c:	ldp	x29, x30, [sp], #48
   2fe60:	ret
   2fe64:	stp	x29, x30, [sp, #-80]!
   2fe68:	mov	x29, sp
   2fe6c:	stp	x19, x20, [sp, #16]
   2fe70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   2fe74:	ldr	x0, [x0, #4016]
   2fe78:	ldr	x1, [x0]
   2fe7c:	str	x1, [sp, #72]
   2fe80:	mov	x1, #0x0                   	// #0
   2fe84:	str	xzr, [sp, #48]
   2fe88:	add	x0, sp, #0x24
   2fe8c:	mov	x1, x0
   2fe90:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fe94:	add	x0, x0, #0x518
   2fe98:	bl	2fd90 <udev_util_encode_string@@LIBUDEV_183+0x24560>
   2fe9c:	str	w0, [sp, #44]
   2fea0:	ldr	w0, [sp, #44]
   2fea4:	cmp	w0, #0x0
   2fea8:	b.ge	2feb4 <udev_util_encode_string@@LIBUDEV_183+0x24684>  // b.tcont
   2feac:	ldr	w20, [sp, #44]
   2feb0:	b	30004 <udev_util_encode_string@@LIBUDEV_183+0x247d4>
   2feb4:	add	x0, sp, #0x30
   2feb8:	mov	x2, x0
   2febc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fec0:	add	x1, x0, #0x520
   2fec4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2fec8:	add	x0, x0, #0x528
   2fecc:	bl	2359c <udev_util_encode_string@@LIBUDEV_183+0x17d6c>
   2fed0:	str	w0, [sp, #44]
   2fed4:	ldr	w0, [sp, #44]
   2fed8:	cmp	w0, #0x0
   2fedc:	b.ge	2fee8 <udev_util_encode_string@@LIBUDEV_183+0x246b8>  // b.tcont
   2fee0:	ldr	w20, [sp, #44]
   2fee4:	b	30004 <udev_util_encode_string@@LIBUDEV_183+0x247d4>
   2fee8:	str	xzr, [sp, #56]
   2feec:	ldr	x0, [sp, #48]
   2fef0:	add	x1, sp, #0x38
   2fef4:	mov	x2, x1
   2fef8:	mov	x1, #0x100000              	// #1048576
   2fefc:	bl	2f864 <udev_util_encode_string@@LIBUDEV_183+0x24034>
   2ff00:	str	w0, [sp, #44]
   2ff04:	ldr	w0, [sp, #44]
   2ff08:	cmp	w0, #0x0
   2ff0c:	b.ge	2ff1c <udev_util_encode_string@@LIBUDEV_183+0x246ec>  // b.tcont
   2ff10:	ldr	w20, [sp, #44]
   2ff14:	mov	w19, #0x0                   	// #0
   2ff18:	b	2ffd0 <udev_util_encode_string@@LIBUDEV_183+0x247a0>
   2ff1c:	ldr	w0, [sp, #44]
   2ff20:	cmp	w0, #0x0
   2ff24:	b.ne	2ff30 <udev_util_encode_string@@LIBUDEV_183+0x24700>  // b.any
   2ff28:	mov	w19, #0x1                   	// #1
   2ff2c:	b	2ffd0 <udev_util_encode_string@@LIBUDEV_183+0x247a0>
   2ff30:	ldr	x3, [sp, #56]
   2ff34:	add	x0, sp, #0x28
   2ff38:	mov	x2, x0
   2ff3c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2ff40:	add	x1, x0, #0x540
   2ff44:	mov	x0, x3
   2ff48:	bl	5720 <__isoc99_sscanf@plt>
   2ff4c:	cmp	w0, #0x1
   2ff50:	b.eq	2ff5c <udev_util_encode_string@@LIBUDEV_183+0x2472c>  // b.none
   2ff54:	mov	w19, #0x2                   	// #2
   2ff58:	b	2ffd0 <udev_util_encode_string@@LIBUDEV_183+0x247a0>
   2ff5c:	ldr	w1, [sp, #40]
   2ff60:	ldr	w0, [sp, #36]
   2ff64:	cmp	w1, w0
   2ff68:	b.eq	2ff74 <udev_util_encode_string@@LIBUDEV_183+0x24744>  // b.none
   2ff6c:	mov	w19, #0x2                   	// #2
   2ff70:	b	2ffd0 <udev_util_encode_string@@LIBUDEV_183+0x247a0>
   2ff74:	ldr	x2, [sp, #56]
   2ff78:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2ff7c:	add	x1, x0, #0x548
   2ff80:	mov	x0, x2
   2ff84:	bl	56f0 <strstr@plt>
   2ff88:	str	x0, [sp, #64]
   2ff8c:	ldr	x0, [sp, #64]
   2ff90:	cmp	x0, #0x0
   2ff94:	b.ne	2ffa0 <udev_util_encode_string@@LIBUDEV_183+0x24770>  // b.any
   2ff98:	mov	w19, #0x2                   	// #2
   2ff9c:	b	2ffd0 <udev_util_encode_string@@LIBUDEV_183+0x247a0>
   2ffa0:	ldr	x0, [sp, #64]
   2ffa4:	add	x2, x0, #0x3
   2ffa8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   2ffac:	add	x1, x0, #0x338
   2ffb0:	mov	x0, x2
   2ffb4:	bl	2f8d4 <udev_util_encode_string@@LIBUDEV_183+0x240a4>
   2ffb8:	cmp	x0, #0x0
   2ffbc:	b.eq	2ffcc <udev_util_encode_string@@LIBUDEV_183+0x2479c>  // b.none
   2ffc0:	mov	w20, #0x1                   	// #1
   2ffc4:	mov	w19, #0x0                   	// #0
   2ffc8:	b	2ffd0 <udev_util_encode_string@@LIBUDEV_183+0x247a0>
   2ffcc:	mov	w19, #0x3                   	// #3
   2ffd0:	add	x0, sp, #0x38
   2ffd4:	bl	2f7c8 <udev_util_encode_string@@LIBUDEV_183+0x23f98>
   2ffd8:	cmp	w19, #0x3
   2ffdc:	b.eq	30000 <udev_util_encode_string@@LIBUDEV_183+0x247d0>  // b.none
   2ffe0:	cmp	w19, #0x3
   2ffe4:	b.gt	2fee8 <udev_util_encode_string@@LIBUDEV_183+0x246b8>
   2ffe8:	cmp	w19, #0x0
   2ffec:	b.eq	30004 <udev_util_encode_string@@LIBUDEV_183+0x247d4>  // b.none
   2fff0:	cmp	w19, #0x1
   2fff4:	b.ne	30000 <udev_util_encode_string@@LIBUDEV_183+0x247d0>  // b.any
   2fff8:	mov	w20, #0x0                   	// #0
   2fffc:	b	30004 <udev_util_encode_string@@LIBUDEV_183+0x247d4>
   30000:	b	2fee8 <udev_util_encode_string@@LIBUDEV_183+0x246b8>
   30004:	add	x0, sp, #0x30
   30008:	bl	2f810 <udev_util_encode_string@@LIBUDEV_183+0x23fe0>
   3000c:	mov	w1, w20
   30010:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30014:	ldr	x0, [x0, #4016]
   30018:	ldr	x2, [sp, #72]
   3001c:	ldr	x0, [x0]
   30020:	eor	x0, x2, x0
   30024:	cmp	x0, #0x0
   30028:	b.eq	30030 <udev_util_encode_string@@LIBUDEV_183+0x24800>  // b.none
   3002c:	bl	5390 <__stack_chk_fail@plt>
   30030:	mov	w0, w1
   30034:	ldp	x19, x20, [sp, #16]
   30038:	ldp	x29, x30, [sp], #80
   3003c:	ret
   30040:	stp	x29, x30, [sp, #-32]!
   30044:	mov	x29, sp
   30048:	str	x0, [sp, #24]
   3004c:	str	x1, [sp, #16]
   30050:	ldr	x2, [sp, #16]
   30054:	mov	w1, #0x0                   	// #0
   30058:	ldr	x0, [sp, #24]
   3005c:	bl	302ec <udev_util_encode_string@@LIBUDEV_183+0x24abc>
   30060:	ldp	x29, x30, [sp], #32
   30064:	ret
   30068:	stp	x29, x30, [sp, #-32]!
   3006c:	mov	x29, sp
   30070:	str	x0, [sp, #24]
   30074:	ldr	x0, [sp, #24]
   30078:	cmp	x0, #0x0
   3007c:	b.ne	30088 <udev_util_encode_string@@LIBUDEV_183+0x24858>  // b.any
   30080:	mov	w0, #0xffffffea            	// #-22
   30084:	b	301bc <udev_util_encode_string@@LIBUDEV_183+0x2498c>
   30088:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3008c:	add	x1, x0, #0x580
   30090:	ldr	x0, [sp, #24]
   30094:	bl	5440 <strcmp@plt>
   30098:	cmp	w0, #0x0
   3009c:	b.eq	30118 <udev_util_encode_string@@LIBUDEV_183+0x248e8>  // b.none
   300a0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   300a4:	add	x1, x0, #0x588
   300a8:	ldr	x0, [sp, #24]
   300ac:	bl	5320 <strcasecmp@plt>
   300b0:	cmp	w0, #0x0
   300b4:	b.eq	30118 <udev_util_encode_string@@LIBUDEV_183+0x248e8>  // b.none
   300b8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   300bc:	add	x1, x0, #0x590
   300c0:	ldr	x0, [sp, #24]
   300c4:	bl	5320 <strcasecmp@plt>
   300c8:	cmp	w0, #0x0
   300cc:	b.eq	30118 <udev_util_encode_string@@LIBUDEV_183+0x248e8>  // b.none
   300d0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   300d4:	add	x1, x0, #0x598
   300d8:	ldr	x0, [sp, #24]
   300dc:	bl	5320 <strcasecmp@plt>
   300e0:	cmp	w0, #0x0
   300e4:	b.eq	30118 <udev_util_encode_string@@LIBUDEV_183+0x248e8>  // b.none
   300e8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   300ec:	add	x1, x0, #0x5a0
   300f0:	ldr	x0, [sp, #24]
   300f4:	bl	5320 <strcasecmp@plt>
   300f8:	cmp	w0, #0x0
   300fc:	b.eq	30118 <udev_util_encode_string@@LIBUDEV_183+0x248e8>  // b.none
   30100:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30104:	add	x1, x0, #0x5a8
   30108:	ldr	x0, [sp, #24]
   3010c:	bl	5320 <strcasecmp@plt>
   30110:	cmp	w0, #0x0
   30114:	b.ne	30120 <udev_util_encode_string@@LIBUDEV_183+0x248f0>  // b.any
   30118:	mov	w0, #0x1                   	// #1
   3011c:	b	301bc <udev_util_encode_string@@LIBUDEV_183+0x2498c>
   30120:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30124:	add	x1, x0, #0x5b0
   30128:	ldr	x0, [sp, #24]
   3012c:	bl	5440 <strcmp@plt>
   30130:	cmp	w0, #0x0
   30134:	b.eq	301b0 <udev_util_encode_string@@LIBUDEV_183+0x24980>  // b.none
   30138:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3013c:	add	x1, x0, #0x5b8
   30140:	ldr	x0, [sp, #24]
   30144:	bl	5320 <strcasecmp@plt>
   30148:	cmp	w0, #0x0
   3014c:	b.eq	301b0 <udev_util_encode_string@@LIBUDEV_183+0x24980>  // b.none
   30150:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30154:	add	x1, x0, #0x5c0
   30158:	ldr	x0, [sp, #24]
   3015c:	bl	5320 <strcasecmp@plt>
   30160:	cmp	w0, #0x0
   30164:	b.eq	301b0 <udev_util_encode_string@@LIBUDEV_183+0x24980>  // b.none
   30168:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3016c:	add	x1, x0, #0x5c8
   30170:	ldr	x0, [sp, #24]
   30174:	bl	5320 <strcasecmp@plt>
   30178:	cmp	w0, #0x0
   3017c:	b.eq	301b0 <udev_util_encode_string@@LIBUDEV_183+0x24980>  // b.none
   30180:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30184:	add	x1, x0, #0x5d0
   30188:	ldr	x0, [sp, #24]
   3018c:	bl	5320 <strcasecmp@plt>
   30190:	cmp	w0, #0x0
   30194:	b.eq	301b0 <udev_util_encode_string@@LIBUDEV_183+0x24980>  // b.none
   30198:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3019c:	add	x1, x0, #0x5d8
   301a0:	ldr	x0, [sp, #24]
   301a4:	bl	5320 <strcasecmp@plt>
   301a8:	cmp	w0, #0x0
   301ac:	b.ne	301b8 <udev_util_encode_string@@LIBUDEV_183+0x24988>  // b.any
   301b0:	mov	w0, #0x0                   	// #0
   301b4:	b	301bc <udev_util_encode_string@@LIBUDEV_183+0x2498c>
   301b8:	mov	w0, #0xffffffea            	// #-22
   301bc:	ldp	x29, x30, [sp], #32
   301c0:	ret
   301c4:	stp	x29, x30, [sp, #-48]!
   301c8:	mov	x29, sp
   301cc:	str	x0, [sp, #24]
   301d0:	str	x1, [sp, #16]
   301d4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   301d8:	ldr	x0, [x0, #4016]
   301dc:	ldr	x1, [x0]
   301e0:	str	x1, [sp, #40]
   301e4:	mov	x1, #0x0                   	// #0
   301e8:	ldr	x0, [sp, #24]
   301ec:	cmp	x0, #0x0
   301f0:	cset	w0, eq  // eq = none
   301f4:	and	w0, w0, #0xff
   301f8:	and	x0, x0, #0xff
   301fc:	cmp	x0, #0x0
   30200:	b.eq	3022c <udev_util_encode_string@@LIBUDEV_183+0x249fc>  // b.none
   30204:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30208:	add	x1, x0, #0x5e3
   3020c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30210:	add	x4, x0, #0x718
   30214:	mov	w3, #0x55                  	// #85
   30218:	mov	x2, x1
   3021c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30220:	add	x1, x0, #0x600
   30224:	mov	w0, #0x0                   	// #0
   30228:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3022c:	ldr	x0, [sp, #16]
   30230:	cmp	x0, #0x0
   30234:	cset	w0, eq  // eq = none
   30238:	and	w0, w0, #0xff
   3023c:	and	x0, x0, #0xff
   30240:	cmp	x0, #0x0
   30244:	b.eq	30270 <udev_util_encode_string@@LIBUDEV_183+0x24a40>  // b.none
   30248:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3024c:	add	x1, x0, #0x5e3
   30250:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30254:	add	x4, x0, #0x718
   30258:	mov	w3, #0x56                  	// #86
   3025c:	mov	x2, x1
   30260:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30264:	add	x1, x0, #0x610
   30268:	mov	w0, #0x0                   	// #0
   3026c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   30270:	add	x0, sp, #0x20
   30274:	mov	x1, x0
   30278:	ldr	x0, [sp, #24]
   3027c:	bl	304f4 <udev_util_encode_string@@LIBUDEV_183+0x24cc4>
   30280:	str	w0, [sp, #36]
   30284:	ldr	w0, [sp, #36]
   30288:	cmp	w0, #0x0
   3028c:	b.ge	30298 <udev_util_encode_string@@LIBUDEV_183+0x24a68>  // b.tcont
   30290:	ldr	w0, [sp, #36]
   30294:	b	302bc <udev_util_encode_string@@LIBUDEV_183+0x24a8c>
   30298:	ldr	w0, [sp, #32]
   3029c:	cmp	w0, #0x0
   302a0:	b.gt	302ac <udev_util_encode_string@@LIBUDEV_183+0x24a7c>
   302a4:	mov	w0, #0xffffffea            	// #-22
   302a8:	b	302bc <udev_util_encode_string@@LIBUDEV_183+0x24a8c>
   302ac:	ldr	w1, [sp, #32]
   302b0:	ldr	x0, [sp, #16]
   302b4:	str	w1, [x0]
   302b8:	mov	w0, #0x0                   	// #0
   302bc:	mov	w1, w0
   302c0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   302c4:	ldr	x0, [x0, #4016]
   302c8:	ldr	x2, [sp, #40]
   302cc:	ldr	x0, [x0]
   302d0:	eor	x0, x2, x0
   302d4:	cmp	x0, #0x0
   302d8:	b.eq	302e0 <udev_util_encode_string@@LIBUDEV_183+0x24ab0>  // b.none
   302dc:	bl	5390 <__stack_chk_fail@plt>
   302e0:	mov	w0, w1
   302e4:	ldp	x29, x30, [sp], #48
   302e8:	ret
   302ec:	stp	x29, x30, [sp, #-80]!
   302f0:	mov	x29, sp
   302f4:	str	x0, [sp, #40]
   302f8:	str	w1, [sp, #36]
   302fc:	str	x2, [sp, #24]
   30300:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30304:	ldr	x0, [x0, #4016]
   30308:	ldr	x1, [x0]
   3030c:	str	x1, [sp, #72]
   30310:	mov	x1, #0x0                   	// #0
   30314:	str	xzr, [sp, #56]
   30318:	ldr	x0, [sp, #40]
   3031c:	cmp	x0, #0x0
   30320:	cset	w0, eq  // eq = none
   30324:	and	w0, w0, #0xff
   30328:	and	x0, x0, #0xff
   3032c:	cmp	x0, #0x0
   30330:	b.eq	3035c <udev_util_encode_string@@LIBUDEV_183+0x24b2c>  // b.none
   30334:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30338:	add	x1, x0, #0x5e3
   3033c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30340:	add	x4, x0, #0x728
   30344:	mov	w3, #0x16f                 	// #367
   30348:	mov	x2, x1
   3034c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30350:	add	x1, x0, #0x600
   30354:	mov	w0, #0x0                   	// #0
   30358:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3035c:	ldr	x0, [sp, #24]
   30360:	cmp	x0, #0x0
   30364:	cset	w0, eq  // eq = none
   30368:	and	w0, w0, #0xff
   3036c:	and	x0, x0, #0xff
   30370:	cmp	x0, #0x0
   30374:	b.eq	303a0 <udev_util_encode_string@@LIBUDEV_183+0x24b70>  // b.none
   30378:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3037c:	add	x1, x0, #0x5e3
   30380:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30384:	add	x4, x0, #0x728
   30388:	mov	w3, #0x170                 	// #368
   3038c:	mov	x2, x1
   30390:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30394:	add	x1, x0, #0x678
   30398:	mov	w0, #0x0                   	// #0
   3039c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   303a0:	ldr	w0, [sp, #36]
   303a4:	cmp	w0, #0x10
   303a8:	cset	w0, hi  // hi = pmore
   303ac:	and	w0, w0, #0xff
   303b0:	and	x0, x0, #0xff
   303b4:	cmp	x0, #0x0
   303b8:	b.eq	303e4 <udev_util_encode_string@@LIBUDEV_183+0x24bb4>  // b.none
   303bc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   303c0:	add	x1, x0, #0x5e3
   303c4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   303c8:	add	x4, x0, #0x728
   303cc:	mov	w3, #0x171                 	// #369
   303d0:	mov	x2, x1
   303d4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   303d8:	add	x1, x0, #0x680
   303dc:	mov	w0, #0x0                   	// #0
   303e0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   303e4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   303e8:	add	x1, x0, #0x618
   303ec:	ldr	x0, [sp, #40]
   303f0:	bl	5560 <strspn@plt>
   303f4:	mov	x1, x0
   303f8:	ldr	x0, [sp, #40]
   303fc:	add	x0, x0, x1
   30400:	str	x0, [sp, #40]
   30404:	bl	57d0 <__errno_location@plt>
   30408:	str	wzr, [x0]
   3040c:	ldr	w1, [sp, #36]
   30410:	add	x0, sp, #0x38
   30414:	mov	w2, w1
   30418:	mov	x1, x0
   3041c:	ldr	x0, [sp, #40]
   30420:	bl	5030 <strtoul@plt>
   30424:	str	x0, [sp, #64]
   30428:	bl	57d0 <__errno_location@plt>
   3042c:	ldr	w0, [x0]
   30430:	cmp	w0, #0x0
   30434:	b.le	30448 <udev_util_encode_string@@LIBUDEV_183+0x24c18>
   30438:	bl	57d0 <__errno_location@plt>
   3043c:	ldr	w0, [x0]
   30440:	neg	w0, w0
   30444:	b	304c4 <udev_util_encode_string@@LIBUDEV_183+0x24c94>
   30448:	ldr	x0, [sp, #56]
   3044c:	cmp	x0, #0x0
   30450:	b.eq	30474 <udev_util_encode_string@@LIBUDEV_183+0x24c44>  // b.none
   30454:	ldr	x0, [sp, #56]
   30458:	ldr	x1, [sp, #40]
   3045c:	cmp	x1, x0
   30460:	b.eq	30474 <udev_util_encode_string@@LIBUDEV_183+0x24c44>  // b.none
   30464:	ldr	x0, [sp, #56]
   30468:	ldrb	w0, [x0]
   3046c:	cmp	w0, #0x0
   30470:	b.eq	3047c <udev_util_encode_string@@LIBUDEV_183+0x24c4c>  // b.none
   30474:	mov	w0, #0xffffffea            	// #-22
   30478:	b	304c4 <udev_util_encode_string@@LIBUDEV_183+0x24c94>
   3047c:	ldr	x0, [sp, #40]
   30480:	ldrb	w0, [x0]
   30484:	cmp	w0, #0x2d
   30488:	b.ne	30494 <udev_util_encode_string@@LIBUDEV_183+0x24c64>  // b.any
   3048c:	mov	w0, #0xffffffde            	// #-34
   30490:	b	304c4 <udev_util_encode_string@@LIBUDEV_183+0x24c94>
   30494:	ldr	x0, [sp, #64]
   30498:	mov	w0, w0
   3049c:	ldr	x1, [sp, #64]
   304a0:	cmp	x1, x0
   304a4:	b.eq	304b0 <udev_util_encode_string@@LIBUDEV_183+0x24c80>  // b.none
   304a8:	mov	w0, #0xffffffde            	// #-34
   304ac:	b	304c4 <udev_util_encode_string@@LIBUDEV_183+0x24c94>
   304b0:	ldr	x0, [sp, #64]
   304b4:	mov	w1, w0
   304b8:	ldr	x0, [sp, #24]
   304bc:	str	w1, [x0]
   304c0:	mov	w0, #0x0                   	// #0
   304c4:	mov	w1, w0
   304c8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   304cc:	ldr	x0, [x0, #4016]
   304d0:	ldr	x2, [sp, #72]
   304d4:	ldr	x0, [x0]
   304d8:	eor	x0, x2, x0
   304dc:	cmp	x0, #0x0
   304e0:	b.eq	304e8 <udev_util_encode_string@@LIBUDEV_183+0x24cb8>  // b.none
   304e4:	bl	5390 <__stack_chk_fail@plt>
   304e8:	mov	w0, w1
   304ec:	ldp	x29, x30, [sp], #80
   304f0:	ret
   304f4:	stp	x29, x30, [sp, #-64]!
   304f8:	mov	x29, sp
   304fc:	str	x0, [sp, #24]
   30500:	str	x1, [sp, #16]
   30504:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30508:	ldr	x0, [x0, #4016]
   3050c:	ldr	x1, [x0]
   30510:	str	x1, [sp, #56]
   30514:	mov	x1, #0x0                   	// #0
   30518:	str	xzr, [sp, #40]
   3051c:	ldr	x0, [sp, #24]
   30520:	cmp	x0, #0x0
   30524:	cset	w0, eq  // eq = none
   30528:	and	w0, w0, #0xff
   3052c:	and	x0, x0, #0xff
   30530:	cmp	x0, #0x0
   30534:	b.eq	30560 <udev_util_encode_string@@LIBUDEV_183+0x24d30>  // b.none
   30538:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3053c:	add	x1, x0, #0x5e3
   30540:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30544:	add	x4, x0, #0x738
   30548:	mov	w3, #0x190                 	// #400
   3054c:	mov	x2, x1
   30550:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30554:	add	x1, x0, #0x600
   30558:	mov	w0, #0x0                   	// #0
   3055c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   30560:	ldr	x0, [sp, #16]
   30564:	cmp	x0, #0x0
   30568:	cset	w0, eq  // eq = none
   3056c:	and	w0, w0, #0xff
   30570:	and	x0, x0, #0xff
   30574:	cmp	x0, #0x0
   30578:	b.eq	305a4 <udev_util_encode_string@@LIBUDEV_183+0x24d74>  // b.none
   3057c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30580:	add	x1, x0, #0x5e3
   30584:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30588:	add	x4, x0, #0x738
   3058c:	mov	w3, #0x191                 	// #401
   30590:	mov	x2, x1
   30594:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30598:	add	x1, x0, #0x690
   3059c:	mov	w0, #0x0                   	// #0
   305a0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   305a4:	bl	57d0 <__errno_location@plt>
   305a8:	str	wzr, [x0]
   305ac:	add	x0, sp, #0x28
   305b0:	mov	w2, #0x0                   	// #0
   305b4:	mov	x1, x0
   305b8:	ldr	x0, [sp, #24]
   305bc:	bl	5470 <strtol@plt>
   305c0:	str	x0, [sp, #48]
   305c4:	bl	57d0 <__errno_location@plt>
   305c8:	ldr	w0, [x0]
   305cc:	cmp	w0, #0x0
   305d0:	b.le	305e4 <udev_util_encode_string@@LIBUDEV_183+0x24db4>
   305d4:	bl	57d0 <__errno_location@plt>
   305d8:	ldr	w0, [x0]
   305dc:	neg	w0, w0
   305e0:	b	30648 <udev_util_encode_string@@LIBUDEV_183+0x24e18>
   305e4:	ldr	x0, [sp, #40]
   305e8:	cmp	x0, #0x0
   305ec:	b.eq	30610 <udev_util_encode_string@@LIBUDEV_183+0x24de0>  // b.none
   305f0:	ldr	x0, [sp, #40]
   305f4:	ldr	x1, [sp, #24]
   305f8:	cmp	x1, x0
   305fc:	b.eq	30610 <udev_util_encode_string@@LIBUDEV_183+0x24de0>  // b.none
   30600:	ldr	x0, [sp, #40]
   30604:	ldrb	w0, [x0]
   30608:	cmp	w0, #0x0
   3060c:	b.eq	30618 <udev_util_encode_string@@LIBUDEV_183+0x24de8>  // b.none
   30610:	mov	w0, #0xffffffea            	// #-22
   30614:	b	30648 <udev_util_encode_string@@LIBUDEV_183+0x24e18>
   30618:	ldr	x0, [sp, #48]
   3061c:	sxtw	x0, w0
   30620:	ldr	x1, [sp, #48]
   30624:	cmp	x1, x0
   30628:	b.eq	30634 <udev_util_encode_string@@LIBUDEV_183+0x24e04>  // b.none
   3062c:	mov	w0, #0xffffffde            	// #-34
   30630:	b	30648 <udev_util_encode_string@@LIBUDEV_183+0x24e18>
   30634:	ldr	x0, [sp, #48]
   30638:	mov	w1, w0
   3063c:	ldr	x0, [sp, #16]
   30640:	str	w1, [x0]
   30644:	mov	w0, #0x0                   	// #0
   30648:	mov	w1, w0
   3064c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30650:	ldr	x0, [x0, #4016]
   30654:	ldr	x2, [sp, #56]
   30658:	ldr	x0, [x0]
   3065c:	eor	x0, x2, x0
   30660:	cmp	x0, #0x0
   30664:	b.eq	3066c <udev_util_encode_string@@LIBUDEV_183+0x24e3c>  // b.none
   30668:	bl	5390 <__stack_chk_fail@plt>
   3066c:	mov	w0, w1
   30670:	ldp	x29, x30, [sp], #64
   30674:	ret
   30678:	stp	x29, x30, [sp, #-64]!
   3067c:	mov	x29, sp
   30680:	str	x0, [sp, #24]
   30684:	str	x1, [sp, #16]
   30688:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3068c:	ldr	x0, [x0, #4016]
   30690:	ldr	x1, [x0]
   30694:	str	x1, [sp, #56]
   30698:	mov	x1, #0x0                   	// #0
   3069c:	str	xzr, [sp, #40]
   306a0:	ldr	x0, [sp, #24]
   306a4:	cmp	x0, #0x0
   306a8:	cset	w0, eq  // eq = none
   306ac:	and	w0, w0, #0xff
   306b0:	and	x0, x0, #0xff
   306b4:	cmp	x0, #0x0
   306b8:	b.eq	306e4 <udev_util_encode_string@@LIBUDEV_183+0x24eb4>  // b.none
   306bc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   306c0:	add	x1, x0, #0x5e3
   306c4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   306c8:	add	x4, x0, #0x748
   306cc:	mov	w3, #0x1a4                 	// #420
   306d0:	mov	x2, x1
   306d4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   306d8:	add	x1, x0, #0x600
   306dc:	mov	w0, #0x0                   	// #0
   306e0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   306e4:	ldr	x0, [sp, #16]
   306e8:	cmp	x0, #0x0
   306ec:	cset	w0, eq  // eq = none
   306f0:	and	w0, w0, #0xff
   306f4:	and	x0, x0, #0xff
   306f8:	cmp	x0, #0x0
   306fc:	b.eq	30728 <udev_util_encode_string@@LIBUDEV_183+0x24ef8>  // b.none
   30700:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30704:	add	x1, x0, #0x5e3
   30708:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3070c:	add	x4, x0, #0x748
   30710:	mov	w3, #0x1a5                 	// #421
   30714:	mov	x2, x1
   30718:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3071c:	add	x1, x0, #0x698
   30720:	mov	w0, #0x0                   	// #0
   30724:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   30728:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3072c:	add	x1, x0, #0x618
   30730:	ldr	x0, [sp, #24]
   30734:	bl	5560 <strspn@plt>
   30738:	mov	x1, x0
   3073c:	ldr	x0, [sp, #24]
   30740:	add	x0, x0, x1
   30744:	str	x0, [sp, #24]
   30748:	bl	57d0 <__errno_location@plt>
   3074c:	str	wzr, [x0]
   30750:	add	x0, sp, #0x28
   30754:	mov	w2, #0x0                   	// #0
   30758:	mov	x1, x0
   3075c:	ldr	x0, [sp, #24]
   30760:	bl	5580 <strtoull@plt>
   30764:	str	x0, [sp, #48]
   30768:	bl	57d0 <__errno_location@plt>
   3076c:	ldr	w0, [x0]
   30770:	cmp	w0, #0x0
   30774:	b.le	30788 <udev_util_encode_string@@LIBUDEV_183+0x24f58>
   30778:	bl	57d0 <__errno_location@plt>
   3077c:	ldr	w0, [x0]
   30780:	neg	w0, w0
   30784:	b	307e4 <udev_util_encode_string@@LIBUDEV_183+0x24fb4>
   30788:	ldr	x0, [sp, #40]
   3078c:	cmp	x0, #0x0
   30790:	b.eq	307b4 <udev_util_encode_string@@LIBUDEV_183+0x24f84>  // b.none
   30794:	ldr	x0, [sp, #40]
   30798:	ldr	x1, [sp, #24]
   3079c:	cmp	x1, x0
   307a0:	b.eq	307b4 <udev_util_encode_string@@LIBUDEV_183+0x24f84>  // b.none
   307a4:	ldr	x0, [sp, #40]
   307a8:	ldrb	w0, [x0]
   307ac:	cmp	w0, #0x0
   307b0:	b.eq	307bc <udev_util_encode_string@@LIBUDEV_183+0x24f8c>  // b.none
   307b4:	mov	w0, #0xffffffea            	// #-22
   307b8:	b	307e4 <udev_util_encode_string@@LIBUDEV_183+0x24fb4>
   307bc:	ldr	x0, [sp, #24]
   307c0:	ldrb	w0, [x0]
   307c4:	cmp	w0, #0x2d
   307c8:	b.ne	307d4 <udev_util_encode_string@@LIBUDEV_183+0x24fa4>  // b.any
   307cc:	mov	w0, #0xffffffde            	// #-34
   307d0:	b	307e4 <udev_util_encode_string@@LIBUDEV_183+0x24fb4>
   307d4:	ldr	x0, [sp, #16]
   307d8:	ldr	x1, [sp, #48]
   307dc:	str	x1, [x0]
   307e0:	mov	w0, #0x0                   	// #0
   307e4:	mov	w1, w0
   307e8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   307ec:	ldr	x0, [x0, #4016]
   307f0:	ldr	x2, [sp, #56]
   307f4:	ldr	x0, [x0]
   307f8:	eor	x0, x2, x0
   307fc:	cmp	x0, #0x0
   30800:	b.eq	30808 <udev_util_encode_string@@LIBUDEV_183+0x24fd8>  // b.none
   30804:	bl	5390 <__stack_chk_fail@plt>
   30808:	mov	w0, w1
   3080c:	ldp	x29, x30, [sp], #64
   30810:	ret
   30814:	stp	x29, x30, [sp, #-112]!
   30818:	mov	x29, sp
   3081c:	str	x0, [x29, #24]
   30820:	str	x1, [x29, #16]
   30824:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30828:	ldr	x0, [x0, #4016]
   3082c:	ldr	x1, [x0]
   30830:	str	x1, [x29, #104]
   30834:	mov	x1, #0x0                   	// #0
   30838:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3083c:	add	x1, x0, #0x6b8
   30840:	ldr	x0, [x29, #24]
   30844:	bl	5560 <strspn@plt>
   30848:	str	x0, [x29, #64]
   3084c:	ldr	x0, [x29, #64]
   30850:	cmp	x0, #0x0
   30854:	b.ne	30860 <udev_util_encode_string@@LIBUDEV_183+0x25030>  // b.any
   30858:	mov	w0, #0xffffffea            	// #-22
   3085c:	b	309e0 <udev_util_encode_string@@LIBUDEV_183+0x251b0>
   30860:	ldr	x1, [x29, #24]
   30864:	ldr	x0, [x29, #64]
   30868:	add	x0, x1, x0
   3086c:	ldrb	w0, [x0]
   30870:	cmp	w0, #0x3a
   30874:	b.eq	30880 <udev_util_encode_string@@LIBUDEV_183+0x25050>  // b.none
   30878:	mov	w0, #0xffffffea            	// #-22
   3087c:	b	309e0 <udev_util_encode_string@@LIBUDEV_183+0x251b0>
   30880:	ldr	x0, [x29, #24]
   30884:	str	x0, [x29, #72]
   30888:	ldr	x1, [x29, #64]
   3088c:	ldr	x0, [x29, #72]
   30890:	bl	5080 <strnlen@plt>
   30894:	str	x0, [x29, #80]
   30898:	ldr	x0, [x29, #80]
   3089c:	add	x0, x0, #0x1
   308a0:	add	x0, x0, #0xf
   308a4:	lsr	x0, x0, #4
   308a8:	lsl	x0, x0, #4
   308ac:	sub	sp, sp, x0
   308b0:	mov	x0, sp
   308b4:	add	x0, x0, #0xf
   308b8:	lsr	x0, x0, #4
   308bc:	lsl	x0, x0, #4
   308c0:	str	x0, [x29, #88]
   308c4:	ldr	x1, [x29, #88]
   308c8:	ldr	x0, [x29, #80]
   308cc:	add	x0, x1, x0
   308d0:	strb	wzr, [x0]
   308d4:	ldr	x2, [x29, #80]
   308d8:	ldr	x1, [x29, #72]
   308dc:	ldr	x0, [x29, #88]
   308e0:	bl	5010 <memcpy@plt>
   308e4:	str	x0, [x29, #96]
   308e8:	add	x0, x29, #0x24
   308ec:	mov	x1, x0
   308f0:	ldr	x0, [x29, #96]
   308f4:	bl	30040 <udev_util_encode_string@@LIBUDEV_183+0x24810>
   308f8:	str	w0, [x29, #44]
   308fc:	ldr	w0, [x29, #44]
   30900:	cmp	w0, #0x0
   30904:	b.ge	30910 <udev_util_encode_string@@LIBUDEV_183+0x250e0>  // b.tcont
   30908:	ldr	w0, [x29, #44]
   3090c:	b	309e0 <udev_util_encode_string@@LIBUDEV_183+0x251b0>
   30910:	ldr	x0, [x29, #64]
   30914:	add	x0, x0, #0x1
   30918:	ldr	x1, [x29, #24]
   3091c:	add	x0, x1, x0
   30920:	add	x1, x29, #0x28
   30924:	bl	30040 <udev_util_encode_string@@LIBUDEV_183+0x24810>
   30928:	str	w0, [x29, #44]
   3092c:	ldr	w0, [x29, #44]
   30930:	cmp	w0, #0x0
   30934:	b.ge	30940 <udev_util_encode_string@@LIBUDEV_183+0x25110>  // b.tcont
   30938:	ldr	w0, [x29, #44]
   3093c:	b	309e0 <udev_util_encode_string@@LIBUDEV_183+0x251b0>
   30940:	ldr	w0, [x29, #36]
   30944:	str	w0, [x29, #48]
   30948:	str	wzr, [x29, #52]
   3094c:	ldr	w1, [x29, #48]
   30950:	ldr	w0, [x29, #52]
   30954:	cmp	w1, w0
   30958:	b.cc	30970 <udev_util_encode_string@@LIBUDEV_183+0x25140>  // b.lo, b.ul, b.last
   3095c:	ldr	w0, [x29, #48]
   30960:	cmp	w0, #0xfff
   30964:	b.hi	30970 <udev_util_encode_string@@LIBUDEV_183+0x25140>  // b.pmore
   30968:	mov	w0, #0x1                   	// #1
   3096c:	b	30974 <udev_util_encode_string@@LIBUDEV_183+0x25144>
   30970:	mov	w0, #0x0                   	// #0
   30974:	cmp	w0, #0x0
   30978:	b.eq	309bc <udev_util_encode_string@@LIBUDEV_183+0x2518c>  // b.none
   3097c:	ldr	w0, [x29, #40]
   30980:	str	w0, [x29, #56]
   30984:	str	wzr, [x29, #60]
   30988:	ldr	w1, [x29, #56]
   3098c:	ldr	w0, [x29, #60]
   30990:	cmp	w1, w0
   30994:	b.cc	309b0 <udev_util_encode_string@@LIBUDEV_183+0x25180>  // b.lo, b.ul, b.last
   30998:	ldr	w1, [x29, #56]
   3099c:	mov	w0, #0xfffff               	// #1048575
   309a0:	cmp	w1, w0
   309a4:	b.hi	309b0 <udev_util_encode_string@@LIBUDEV_183+0x25180>  // b.pmore
   309a8:	mov	w0, #0x1                   	// #1
   309ac:	b	309b4 <udev_util_encode_string@@LIBUDEV_183+0x25184>
   309b0:	mov	w0, #0x0                   	// #0
   309b4:	cmp	w0, #0x0
   309b8:	b.ne	309c4 <udev_util_encode_string@@LIBUDEV_183+0x25194>  // b.any
   309bc:	mov	w0, #0xffffffde            	// #-34
   309c0:	b	309e0 <udev_util_encode_string@@LIBUDEV_183+0x251b0>
   309c4:	ldr	w0, [x29, #36]
   309c8:	ldr	w1, [x29, #40]
   309cc:	bl	51a0 <gnu_dev_makedev@plt>
   309d0:	mov	x1, x0
   309d4:	ldr	x0, [x29, #16]
   309d8:	str	x1, [x0]
   309dc:	mov	w0, #0x0                   	// #0
   309e0:	mov	w1, w0
   309e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   309e8:	ldr	x0, [x0, #4016]
   309ec:	ldr	x2, [x29, #104]
   309f0:	ldr	x0, [x0]
   309f4:	eor	x0, x2, x0
   309f8:	cmp	x0, #0x0
   309fc:	b.eq	30a04 <udev_util_encode_string@@LIBUDEV_183+0x251d4>  // b.none
   30a00:	bl	5390 <__stack_chk_fail@plt>
   30a04:	mov	w0, w1
   30a08:	mov	sp, x29
   30a0c:	ldp	x29, x30, [sp], #112
   30a10:	ret
   30a14:	stp	x29, x30, [sp, #-32]!
   30a18:	mov	x29, sp
   30a1c:	str	x0, [sp, #24]
   30a20:	ldr	x0, [sp, #24]
   30a24:	ldr	x0, [x0]
   30a28:	bl	54b0 <free@plt>
   30a2c:	nop
   30a30:	ldp	x29, x30, [sp], #32
   30a34:	ret
   30a38:	sub	sp, sp, #0x10
   30a3c:	str	x0, [sp, #8]
   30a40:	str	x1, [sp]
   30a44:	ldr	x0, [sp]
   30a48:	cmp	x0, #0x0
   30a4c:	cset	w0, ne  // ne = any
   30a50:	and	w0, w0, #0xff
   30a54:	and	x0, x0, #0xff
   30a58:	cmp	x0, #0x0
   30a5c:	b.eq	30aa0 <udev_util_encode_string@@LIBUDEV_183+0x25270>  // b.none
   30a60:	mov	x2, #0x0                   	// #0
   30a64:	ldr	x1, [sp, #8]
   30a68:	ldr	x0, [sp]
   30a6c:	umulh	x0, x1, x0
   30a70:	cmp	x0, #0x0
   30a74:	b.eq	30a7c <udev_util_encode_string@@LIBUDEV_183+0x2524c>  // b.none
   30a78:	mov	x2, #0x1                   	// #1
   30a7c:	mov	x0, x2
   30a80:	cmp	x0, #0x0
   30a84:	cset	w0, ne  // ne = any
   30a88:	and	w0, w0, #0xff
   30a8c:	and	x0, x0, #0xff
   30a90:	cmp	x0, #0x0
   30a94:	b.eq	30aa0 <udev_util_encode_string@@LIBUDEV_183+0x25270>  // b.none
   30a98:	mov	w0, #0x1                   	// #1
   30a9c:	b	30aa4 <udev_util_encode_string@@LIBUDEV_183+0x25274>
   30aa0:	mov	w0, #0x0                   	// #0
   30aa4:	and	w0, w0, #0x1
   30aa8:	and	w0, w0, #0xff
   30aac:	add	sp, sp, #0x10
   30ab0:	ret
   30ab4:	stp	x29, x30, [sp, #-32]!
   30ab8:	mov	x29, sp
   30abc:	str	x0, [sp, #24]
   30ac0:	str	x1, [sp, #16]
   30ac4:	ldr	x1, [sp, #16]
   30ac8:	ldr	x0, [sp, #24]
   30acc:	bl	30a38 <udev_util_encode_string@@LIBUDEV_183+0x25208>
   30ad0:	and	w0, w0, #0xff
   30ad4:	cmp	w0, #0x0
   30ad8:	b.eq	30ae4 <udev_util_encode_string@@LIBUDEV_183+0x252b4>  // b.none
   30adc:	mov	x0, #0x0                   	// #0
   30ae0:	b	30b00 <udev_util_encode_string@@LIBUDEV_183+0x252d0>
   30ae4:	ldr	x1, [sp, #24]
   30ae8:	ldr	x0, [sp, #16]
   30aec:	mul	x0, x1, x0
   30af0:	cmp	x0, #0x0
   30af4:	b.ne	30afc <udev_util_encode_string@@LIBUDEV_183+0x252cc>  // b.any
   30af8:	mov	x0, #0x1                   	// #1
   30afc:	bl	5220 <malloc@plt>
   30b00:	ldp	x29, x30, [sp], #32
   30b04:	ret
   30b08:	stp	x29, x30, [sp, #-16]!
   30b0c:	mov	x29, sp
   30b10:	bl	57d0 <__errno_location@plt>
   30b14:	ldr	w0, [x0]
   30b18:	cmp	w0, #0x0
   30b1c:	cset	w0, gt
   30b20:	and	w0, w0, #0xff
   30b24:	and	x0, x0, #0xff
   30b28:	cmp	x0, #0x0
   30b2c:	b.ne	30b60 <udev_util_encode_string@@LIBUDEV_183+0x25330>  // b.any
   30b30:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30b34:	add	x1, x0, #0x893
   30b38:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30b3c:	add	x4, x0, #0xd48
   30b40:	mov	w3, #0x1e                  	// #30
   30b44:	mov	x2, x1
   30b48:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30b4c:	add	x1, x0, #0x8b0
   30b50:	mov	w0, #0x0                   	// #0
   30b54:	bl	2dc84 <udev_util_encode_string@@LIBUDEV_183+0x22454>
   30b58:	mov	w0, #0x1                   	// #1
   30b5c:	b	30b64 <udev_util_encode_string@@LIBUDEV_183+0x25334>
   30b60:	mov	w0, #0x0                   	// #0
   30b64:	cmp	w0, #0x0
   30b68:	b.eq	30b74 <udev_util_encode_string@@LIBUDEV_183+0x25344>  // b.none
   30b6c:	mov	w0, #0xffffffea            	// #-22
   30b70:	b	30b80 <udev_util_encode_string@@LIBUDEV_183+0x25350>
   30b74:	bl	57d0 <__errno_location@plt>
   30b78:	ldr	w0, [x0]
   30b7c:	neg	w0, w0
   30b80:	ldp	x29, x30, [sp], #16
   30b84:	ret
   30b88:	sub	sp, sp, #0x10
   30b8c:	str	x0, [sp, #8]
   30b90:	ldr	x0, [sp, #8]
   30b94:	cmp	x0, #0x0
   30b98:	b.eq	30bac <udev_util_encode_string@@LIBUDEV_183+0x2537c>  // b.none
   30b9c:	ldr	x0, [sp, #8]
   30ba0:	ldrb	w0, [x0]
   30ba4:	cmp	w0, #0x0
   30ba8:	b.ne	30bb4 <udev_util_encode_string@@LIBUDEV_183+0x25384>  // b.any
   30bac:	mov	w0, #0x1                   	// #1
   30bb0:	b	30bb8 <udev_util_encode_string@@LIBUDEV_183+0x25388>
   30bb4:	mov	w0, #0x0                   	// #0
   30bb8:	and	w0, w0, #0x1
   30bbc:	and	w0, w0, #0xff
   30bc0:	add	sp, sp, #0x10
   30bc4:	ret
   30bc8:	stp	x29, x30, [sp, #-48]!
   30bcc:	mov	x29, sp
   30bd0:	str	x0, [sp, #24]
   30bd4:	str	x1, [sp, #16]
   30bd8:	ldr	x0, [sp, #16]
   30bdc:	bl	5040 <strlen@plt>
   30be0:	str	x0, [sp, #40]
   30be4:	ldr	x2, [sp, #40]
   30be8:	ldr	x1, [sp, #16]
   30bec:	ldr	x0, [sp, #24]
   30bf0:	bl	5270 <strncmp@plt>
   30bf4:	cmp	w0, #0x0
   30bf8:	b.ne	30c0c <udev_util_encode_string@@LIBUDEV_183+0x253dc>  // b.any
   30bfc:	ldr	x1, [sp, #24]
   30c00:	ldr	x0, [sp, #40]
   30c04:	add	x0, x1, x0
   30c08:	b	30c10 <udev_util_encode_string@@LIBUDEV_183+0x253e0>
   30c0c:	mov	x0, #0x0                   	// #0
   30c10:	ldp	x29, x30, [sp], #48
   30c14:	ret
   30c18:	stp	x29, x30, [sp, #-32]!
   30c1c:	mov	x29, sp
   30c20:	str	x0, [sp, #24]
   30c24:	ldr	x0, [sp, #24]
   30c28:	cmp	x0, #0x0
   30c2c:	b.ne	30c38 <udev_util_encode_string@@LIBUDEV_183+0x25408>  // b.any
   30c30:	mov	x0, #0x0                   	// #0
   30c34:	b	30c40 <udev_util_encode_string@@LIBUDEV_183+0x25410>
   30c38:	ldr	x0, [sp, #24]
   30c3c:	bl	5040 <strlen@plt>
   30c40:	ldp	x29, x30, [sp], #32
   30c44:	ret
   30c48:	sub	sp, sp, #0x10
   30c4c:	str	x0, [sp, #8]
   30c50:	ldr	x0, [sp, #8]
   30c54:	ldrb	w0, [x0]
   30c58:	cmp	w0, #0x2f
   30c5c:	cset	w0, eq  // eq = none
   30c60:	and	w0, w0, #0xff
   30c64:	add	sp, sp, #0x10
   30c68:	ret
   30c6c:	stp	x29, x30, [sp, #-48]!
   30c70:	mov	x29, sp
   30c74:	str	x0, [sp, #24]
   30c78:	bl	5640 <get_current_dir_name@plt>
   30c7c:	str	x0, [sp, #40]
   30c80:	ldr	x0, [sp, #40]
   30c84:	cmp	x0, #0x0
   30c88:	b.ne	30c94 <udev_util_encode_string@@LIBUDEV_183+0x25464>  // b.any
   30c8c:	bl	30b08 <udev_util_encode_string@@LIBUDEV_183+0x252d8>
   30c90:	b	30cc4 <udev_util_encode_string@@LIBUDEV_183+0x25494>
   30c94:	ldr	x0, [sp, #40]
   30c98:	ldrb	w0, [x0]
   30c9c:	cmp	w0, #0x2f
   30ca0:	b.eq	30cb4 <udev_util_encode_string@@LIBUDEV_183+0x25484>  // b.none
   30ca4:	ldr	x0, [sp, #40]
   30ca8:	bl	54b0 <free@plt>
   30cac:	mov	w0, #0xffffff85            	// #-123
   30cb0:	b	30cc4 <udev_util_encode_string@@LIBUDEV_183+0x25494>
   30cb4:	ldr	x0, [sp, #24]
   30cb8:	ldr	x1, [sp, #40]
   30cbc:	str	x1, [x0]
   30cc0:	mov	w0, #0x0                   	// #0
   30cc4:	ldp	x29, x30, [sp], #48
   30cc8:	ret
   30ccc:	stp	x29, x30, [sp, #-80]!
   30cd0:	mov	x29, sp
   30cd4:	stp	x19, x20, [sp, #16]
   30cd8:	str	x0, [sp, #40]
   30cdc:	str	x1, [sp, #32]
   30ce0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30ce4:	ldr	x0, [x0, #4016]
   30ce8:	ldr	x1, [x0]
   30cec:	str	x1, [sp, #72]
   30cf0:	mov	x1, #0x0                   	// #0
   30cf4:	ldr	x0, [sp, #40]
   30cf8:	cmp	x0, #0x0
   30cfc:	cset	w0, eq  // eq = none
   30d00:	and	w0, w0, #0xff
   30d04:	and	x0, x0, #0xff
   30d08:	cmp	x0, #0x0
   30d0c:	b.eq	30d38 <udev_util_encode_string@@LIBUDEV_183+0x25508>  // b.none
   30d10:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30d14:	add	x1, x0, #0x8c3
   30d18:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30d1c:	add	x4, x0, #0xd58
   30d20:	mov	w3, #0x5d                  	// #93
   30d24:	mov	x2, x1
   30d28:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30d2c:	add	x1, x0, #0x8e0
   30d30:	mov	w0, #0x0                   	// #0
   30d34:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   30d38:	ldr	x0, [sp, #32]
   30d3c:	cmp	x0, #0x0
   30d40:	cset	w0, eq  // eq = none
   30d44:	and	w0, w0, #0xff
   30d48:	and	x0, x0, #0xff
   30d4c:	cmp	x0, #0x0
   30d50:	b.eq	30d7c <udev_util_encode_string@@LIBUDEV_183+0x2554c>  // b.none
   30d54:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30d58:	add	x1, x0, #0x8c3
   30d5c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30d60:	add	x4, x0, #0xd58
   30d64:	mov	w3, #0x5e                  	// #94
   30d68:	mov	x2, x1
   30d6c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30d70:	add	x1, x0, #0x8e8
   30d74:	mov	w0, #0x0                   	// #0
   30d78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   30d7c:	ldr	x0, [sp, #40]
   30d80:	bl	30c48 <udev_util_encode_string@@LIBUDEV_183+0x25418>
   30d84:	and	w0, w0, #0xff
   30d88:	cmp	w0, #0x0
   30d8c:	b.eq	30da0 <udev_util_encode_string@@LIBUDEV_183+0x25570>  // b.none
   30d90:	ldr	x0, [sp, #40]
   30d94:	bl	5370 <strdup@plt>
   30d98:	str	x0, [sp, #64]
   30d9c:	b	30df0 <udev_util_encode_string@@LIBUDEV_183+0x255c0>
   30da0:	str	xzr, [sp, #56]
   30da4:	add	x0, sp, #0x38
   30da8:	bl	30c6c <udev_util_encode_string@@LIBUDEV_183+0x2543c>
   30dac:	str	w0, [sp, #52]
   30db0:	ldr	w0, [sp, #52]
   30db4:	cmp	w0, #0x0
   30db8:	b.ge	30dc8 <udev_util_encode_string@@LIBUDEV_183+0x25598>  // b.tcont
   30dbc:	ldr	w19, [sp, #52]
   30dc0:	mov	w20, #0x0                   	// #0
   30dc4:	b	30de0 <udev_util_encode_string@@LIBUDEV_183+0x255b0>
   30dc8:	ldr	x0, [sp, #56]
   30dcc:	mov	x2, #0xffffffffffffffff    	// #-1
   30dd0:	ldr	x1, [sp, #40]
   30dd4:	bl	31588 <udev_util_encode_string@@LIBUDEV_183+0x25d58>
   30dd8:	str	x0, [sp, #64]
   30ddc:	mov	w20, #0x1                   	// #1
   30de0:	add	x0, sp, #0x38
   30de4:	bl	30a14 <udev_util_encode_string@@LIBUDEV_183+0x251e4>
   30de8:	cmp	w20, #0x1
   30dec:	b.ne	30e14 <udev_util_encode_string@@LIBUDEV_183+0x255e4>  // b.any
   30df0:	ldr	x0, [sp, #64]
   30df4:	cmp	x0, #0x0
   30df8:	b.ne	30e04 <udev_util_encode_string@@LIBUDEV_183+0x255d4>  // b.any
   30dfc:	mov	w19, #0xfffffff4            	// #-12
   30e00:	b	30e14 <udev_util_encode_string@@LIBUDEV_183+0x255e4>
   30e04:	ldr	x0, [sp, #32]
   30e08:	ldr	x1, [sp, #64]
   30e0c:	str	x1, [x0]
   30e10:	mov	w19, #0x0                   	// #0
   30e14:	mov	w1, w19
   30e18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   30e1c:	ldr	x0, [x0, #4016]
   30e20:	ldr	x2, [sp, #72]
   30e24:	ldr	x0, [x0]
   30e28:	eor	x0, x2, x0
   30e2c:	cmp	x0, #0x0
   30e30:	b.eq	30e38 <udev_util_encode_string@@LIBUDEV_183+0x25608>  // b.none
   30e34:	bl	5390 <__stack_chk_fail@plt>
   30e38:	mov	w0, w1
   30e3c:	ldp	x19, x20, [sp, #16]
   30e40:	ldp	x29, x30, [sp], #80
   30e44:	ret
   30e48:	stp	x29, x30, [sp, #-48]!
   30e4c:	mov	x29, sp
   30e50:	str	x0, [sp, #24]
   30e54:	str	x1, [sp, #16]
   30e58:	ldr	x0, [sp, #16]
   30e5c:	str	x0, [sp, #32]
   30e60:	b	30e9c <udev_util_encode_string@@LIBUDEV_183+0x2566c>
   30e64:	ldr	x0, [sp, #32]
   30e68:	ldr	x0, [x0]
   30e6c:	mov	x1, x0
   30e70:	ldr	x0, [sp, #24]
   30e74:	bl	31104 <udev_util_encode_string@@LIBUDEV_183+0x258d4>
   30e78:	str	x0, [sp, #40]
   30e7c:	ldr	x0, [sp, #40]
   30e80:	cmp	x0, #0x0
   30e84:	b.eq	30e90 <udev_util_encode_string@@LIBUDEV_183+0x25660>  // b.none
   30e88:	ldr	x0, [sp, #40]
   30e8c:	b	30ebc <udev_util_encode_string@@LIBUDEV_183+0x2568c>
   30e90:	ldr	x0, [sp, #32]
   30e94:	add	x0, x0, #0x8
   30e98:	str	x0, [sp, #32]
   30e9c:	ldr	x0, [sp, #32]
   30ea0:	cmp	x0, #0x0
   30ea4:	b.eq	30eb8 <udev_util_encode_string@@LIBUDEV_183+0x25688>  // b.none
   30ea8:	ldr	x0, [sp, #32]
   30eac:	ldr	x0, [x0]
   30eb0:	cmp	x0, #0x0
   30eb4:	b.ne	30e64 <udev_util_encode_string@@LIBUDEV_183+0x25634>  // b.any
   30eb8:	mov	x0, #0x0                   	// #0
   30ebc:	ldp	x29, x30, [sp], #48
   30ec0:	ret
   30ec4:	stp	x29, x30, [sp, #-64]!
   30ec8:	mov	x29, sp
   30ecc:	str	x0, [sp, #24]
   30ed0:	strb	w1, [sp, #23]
   30ed4:	strb	wzr, [sp, #43]
   30ed8:	strb	wzr, [sp, #44]
   30edc:	ldr	x0, [sp, #24]
   30ee0:	cmp	x0, #0x0
   30ee4:	cset	w0, eq  // eq = none
   30ee8:	and	w0, w0, #0xff
   30eec:	and	x0, x0, #0xff
   30ef0:	cmp	x0, #0x0
   30ef4:	b.eq	30f20 <udev_util_encode_string@@LIBUDEV_183+0x256f0>  // b.none
   30ef8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30efc:	add	x1, x0, #0x8c3
   30f00:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30f04:	add	x4, x0, #0xd70
   30f08:	mov	w3, #0x152                 	// #338
   30f0c:	mov	x2, x1
   30f10:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   30f14:	add	x1, x0, #0x930
   30f18:	mov	w0, #0x0                   	// #0
   30f1c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   30f20:	ldr	x0, [sp, #24]
   30f24:	bl	30b88 <udev_util_encode_string@@LIBUDEV_183+0x25358>
   30f28:	and	w0, w0, #0xff
   30f2c:	cmp	w0, #0x0
   30f30:	b.eq	30f3c <udev_util_encode_string@@LIBUDEV_183+0x2570c>  // b.none
   30f34:	ldr	x0, [sp, #24]
   30f38:	b	310fc <udev_util_encode_string@@LIBUDEV_183+0x258cc>
   30f3c:	ldr	x0, [sp, #24]
   30f40:	bl	30c48 <udev_util_encode_string@@LIBUDEV_183+0x25418>
   30f44:	strb	w0, [sp, #47]
   30f48:	ldr	x0, [sp, #24]
   30f4c:	str	x0, [sp, #48]
   30f50:	ldrb	w0, [sp, #23]
   30f54:	cmp	w0, #0x0
   30f58:	b.eq	30fb8 <udev_util_encode_string@@LIBUDEV_183+0x25788>  // b.none
   30f5c:	ldr	x0, [sp, #48]
   30f60:	ldrb	w0, [x0]
   30f64:	cmp	w0, #0x2e
   30f68:	b.ne	30fb8 <udev_util_encode_string@@LIBUDEV_183+0x25788>  // b.any
   30f6c:	strb	wzr, [sp, #45]
   30f70:	ldr	x0, [sp, #48]
   30f74:	add	x0, x0, #0x1
   30f78:	ldrb	w0, [x0]
   30f7c:	cmp	w0, #0x0
   30f80:	b.eq	30f8c <udev_util_encode_string@@LIBUDEV_183+0x2575c>  // b.none
   30f84:	cmp	w0, #0x2f
   30f88:	b.ne	30f94 <udev_util_encode_string@@LIBUDEV_183+0x25764>  // b.any
   30f8c:	mov	w0, #0x1                   	// #1
   30f90:	strb	w0, [sp, #45]
   30f94:	nop
   30f98:	ldrb	w0, [sp, #45]
   30f9c:	cmp	w0, #0x0
   30fa0:	b.eq	30fb8 <udev_util_encode_string@@LIBUDEV_183+0x25788>  // b.none
   30fa4:	mov	w0, #0x1                   	// #1
   30fa8:	strb	w0, [sp, #44]
   30fac:	ldr	x0, [sp, #48]
   30fb0:	add	x0, x0, #0x1
   30fb4:	str	x0, [sp, #48]
   30fb8:	ldr	x0, [sp, #24]
   30fbc:	str	x0, [sp, #56]
   30fc0:	b	31098 <udev_util_encode_string@@LIBUDEV_183+0x25868>
   30fc4:	ldr	x0, [sp, #48]
   30fc8:	ldrb	w0, [x0]
   30fcc:	cmp	w0, #0x2f
   30fd0:	b.ne	30fe0 <udev_util_encode_string@@LIBUDEV_183+0x257b0>  // b.any
   30fd4:	mov	w0, #0x1                   	// #1
   30fd8:	strb	w0, [sp, #43]
   30fdc:	b	3108c <udev_util_encode_string@@LIBUDEV_183+0x2585c>
   30fe0:	ldrb	w0, [sp, #43]
   30fe4:	cmp	w0, #0x0
   30fe8:	b.eq	3106c <udev_util_encode_string@@LIBUDEV_183+0x2583c>  // b.none
   30fec:	ldrb	w0, [sp, #23]
   30ff0:	cmp	w0, #0x0
   30ff4:	b.eq	31040 <udev_util_encode_string@@LIBUDEV_183+0x25810>  // b.none
   30ff8:	ldr	x0, [sp, #48]
   30ffc:	ldrb	w0, [x0]
   31000:	cmp	w0, #0x2e
   31004:	b.ne	31040 <udev_util_encode_string@@LIBUDEV_183+0x25810>  // b.any
   31008:	strb	wzr, [sp, #46]
   3100c:	ldr	x0, [sp, #48]
   31010:	add	x0, x0, #0x1
   31014:	ldrb	w0, [x0]
   31018:	cmp	w0, #0x0
   3101c:	b.eq	31028 <udev_util_encode_string@@LIBUDEV_183+0x257f8>  // b.none
   31020:	cmp	w0, #0x2f
   31024:	b.ne	31030 <udev_util_encode_string@@LIBUDEV_183+0x25800>  // b.any
   31028:	mov	w0, #0x1                   	// #1
   3102c:	strb	w0, [sp, #46]
   31030:	nop
   31034:	ldrb	w0, [sp, #46]
   31038:	cmp	w0, #0x0
   3103c:	b.ne	31088 <udev_util_encode_string@@LIBUDEV_183+0x25858>  // b.any
   31040:	strb	wzr, [sp, #43]
   31044:	ldrb	w0, [sp, #44]
   31048:	cmp	w0, #0x0
   3104c:	b.eq	31058 <udev_util_encode_string@@LIBUDEV_183+0x25828>  // b.none
   31050:	strb	wzr, [sp, #44]
   31054:	b	3106c <udev_util_encode_string@@LIBUDEV_183+0x2583c>
   31058:	ldr	x0, [sp, #56]
   3105c:	add	x1, x0, #0x1
   31060:	str	x1, [sp, #56]
   31064:	mov	w1, #0x2f                  	// #47
   31068:	strb	w1, [x0]
   3106c:	ldr	x0, [sp, #56]
   31070:	add	x1, x0, #0x1
   31074:	str	x1, [sp, #56]
   31078:	ldr	x1, [sp, #48]
   3107c:	ldrb	w1, [x1]
   31080:	strb	w1, [x0]
   31084:	b	3108c <udev_util_encode_string@@LIBUDEV_183+0x2585c>
   31088:	nop
   3108c:	ldr	x0, [sp, #48]
   31090:	add	x0, x0, #0x1
   31094:	str	x0, [sp, #48]
   31098:	ldr	x0, [sp, #48]
   3109c:	ldrb	w0, [x0]
   310a0:	cmp	w0, #0x0
   310a4:	b.ne	30fc4 <udev_util_encode_string@@LIBUDEV_183+0x25794>  // b.any
   310a8:	ldr	x1, [sp, #56]
   310ac:	ldr	x0, [sp, #24]
   310b0:	cmp	x1, x0
   310b4:	b.ne	310f0 <udev_util_encode_string@@LIBUDEV_183+0x258c0>  // b.any
   310b8:	ldrb	w0, [sp, #47]
   310bc:	cmp	w0, #0x0
   310c0:	b.eq	310dc <udev_util_encode_string@@LIBUDEV_183+0x258ac>  // b.none
   310c4:	ldr	x0, [sp, #56]
   310c8:	add	x1, x0, #0x1
   310cc:	str	x1, [sp, #56]
   310d0:	mov	w1, #0x2f                  	// #47
   310d4:	strb	w1, [x0]
   310d8:	b	310f0 <udev_util_encode_string@@LIBUDEV_183+0x258c0>
   310dc:	ldr	x0, [sp, #56]
   310e0:	add	x1, x0, #0x1
   310e4:	str	x1, [sp, #56]
   310e8:	mov	w1, #0x2e                  	// #46
   310ec:	strb	w1, [x0]
   310f0:	ldr	x0, [sp, #56]
   310f4:	strb	wzr, [x0]
   310f8:	ldr	x0, [sp, #24]
   310fc:	ldp	x29, x30, [sp], #64
   31100:	ret
   31104:	stp	x29, x30, [sp, #-48]!
   31108:	mov	x29, sp
   3110c:	str	x0, [sp, #24]
   31110:	str	x1, [sp, #16]
   31114:	ldr	x0, [sp, #24]
   31118:	cmp	x0, #0x0
   3111c:	cset	w0, eq  // eq = none
   31120:	and	w0, w0, #0xff
   31124:	and	x0, x0, #0xff
   31128:	cmp	x0, #0x0
   3112c:	b.eq	31158 <udev_util_encode_string@@LIBUDEV_183+0x25928>  // b.none
   31130:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31134:	add	x1, x0, #0x8c3
   31138:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3113c:	add	x4, x0, #0xd80
   31140:	mov	w3, #0x1b9                 	// #441
   31144:	mov	x2, x1
   31148:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3114c:	add	x1, x0, #0x930
   31150:	mov	w0, #0x0                   	// #0
   31154:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31158:	ldr	x0, [sp, #16]
   3115c:	cmp	x0, #0x0
   31160:	cset	w0, eq  // eq = none
   31164:	and	w0, w0, #0xff
   31168:	and	x0, x0, #0xff
   3116c:	cmp	x0, #0x0
   31170:	b.eq	3119c <udev_util_encode_string@@LIBUDEV_183+0x2596c>  // b.none
   31174:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31178:	add	x1, x0, #0x8c3
   3117c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31180:	add	x4, x0, #0xd80
   31184:	mov	w3, #0x1ba                 	// #442
   31188:	mov	x2, x1
   3118c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31190:	add	x1, x0, #0xa28
   31194:	mov	w0, #0x0                   	// #0
   31198:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3119c:	ldr	x0, [sp, #24]
   311a0:	ldrb	w0, [x0]
   311a4:	cmp	w0, #0x2f
   311a8:	cset	w0, eq  // eq = none
   311ac:	and	w1, w0, #0xff
   311b0:	ldr	x0, [sp, #16]
   311b4:	ldrb	w0, [x0]
   311b8:	cmp	w0, #0x2f
   311bc:	cset	w0, eq  // eq = none
   311c0:	and	w0, w0, #0xff
   311c4:	eor	w0, w1, w0
   311c8:	and	w0, w0, #0xff
   311cc:	cmp	w0, #0x0
   311d0:	b.eq	311dc <udev_util_encode_string@@LIBUDEV_183+0x259ac>  // b.none
   311d4:	mov	x0, #0x0                   	// #0
   311d8:	b	312d0 <udev_util_encode_string@@LIBUDEV_183+0x25aa0>
   311dc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   311e0:	add	x1, x0, #0x920
   311e4:	ldr	x0, [sp, #24]
   311e8:	bl	5560 <strspn@plt>
   311ec:	mov	x1, x0
   311f0:	ldr	x0, [sp, #24]
   311f4:	add	x0, x0, x1
   311f8:	str	x0, [sp, #24]
   311fc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31200:	add	x1, x0, #0x920
   31204:	ldr	x0, [sp, #16]
   31208:	bl	5560 <strspn@plt>
   3120c:	mov	x1, x0
   31210:	ldr	x0, [sp, #16]
   31214:	add	x0, x0, x1
   31218:	str	x0, [sp, #16]
   3121c:	ldr	x0, [sp, #16]
   31220:	ldrb	w0, [x0]
   31224:	cmp	w0, #0x0
   31228:	b.ne	31234 <udev_util_encode_string@@LIBUDEV_183+0x25a04>  // b.any
   3122c:	ldr	x0, [sp, #24]
   31230:	b	312d0 <udev_util_encode_string@@LIBUDEV_183+0x25aa0>
   31234:	ldr	x0, [sp, #24]
   31238:	ldrb	w0, [x0]
   3123c:	cmp	w0, #0x0
   31240:	b.ne	3124c <udev_util_encode_string@@LIBUDEV_183+0x25a1c>  // b.any
   31244:	mov	x0, #0x0                   	// #0
   31248:	b	312d0 <udev_util_encode_string@@LIBUDEV_183+0x25aa0>
   3124c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31250:	add	x1, x0, #0x920
   31254:	ldr	x0, [sp, #24]
   31258:	bl	57c0 <strcspn@plt>
   3125c:	str	x0, [sp, #32]
   31260:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31264:	add	x1, x0, #0x920
   31268:	ldr	x0, [sp, #16]
   3126c:	bl	57c0 <strcspn@plt>
   31270:	str	x0, [sp, #40]
   31274:	ldr	x1, [sp, #32]
   31278:	ldr	x0, [sp, #40]
   3127c:	cmp	x1, x0
   31280:	b.eq	3128c <udev_util_encode_string@@LIBUDEV_183+0x25a5c>  // b.none
   31284:	mov	x0, #0x0                   	// #0
   31288:	b	312d0 <udev_util_encode_string@@LIBUDEV_183+0x25aa0>
   3128c:	ldr	x2, [sp, #32]
   31290:	ldr	x1, [sp, #16]
   31294:	ldr	x0, [sp, #24]
   31298:	bl	5410 <memcmp@plt>
   3129c:	cmp	w0, #0x0
   312a0:	b.eq	312ac <udev_util_encode_string@@LIBUDEV_183+0x25a7c>  // b.none
   312a4:	mov	x0, #0x0                   	// #0
   312a8:	b	312d0 <udev_util_encode_string@@LIBUDEV_183+0x25aa0>
   312ac:	ldr	x1, [sp, #24]
   312b0:	ldr	x0, [sp, #32]
   312b4:	add	x0, x1, x0
   312b8:	str	x0, [sp, #24]
   312bc:	ldr	x1, [sp, #16]
   312c0:	ldr	x0, [sp, #40]
   312c4:	add	x0, x1, x0
   312c8:	str	x0, [sp, #16]
   312cc:	b	311dc <udev_util_encode_string@@LIBUDEV_183+0x259ac>
   312d0:	ldp	x29, x30, [sp], #48
   312d4:	ret
   312d8:	stp	x29, x30, [sp, #-80]!
   312dc:	mov	x29, sp
   312e0:	str	x0, [sp, #24]
   312e4:	str	x1, [sp, #16]
   312e8:	ldr	x0, [sp, #24]
   312ec:	cmp	x0, #0x0
   312f0:	cset	w0, eq  // eq = none
   312f4:	and	w0, w0, #0xff
   312f8:	and	x0, x0, #0xff
   312fc:	cmp	x0, #0x0
   31300:	b.eq	3132c <udev_util_encode_string@@LIBUDEV_183+0x25afc>  // b.none
   31304:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31308:	add	x1, x0, #0x8c3
   3130c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31310:	add	x4, x0, #0xd90
   31314:	mov	w3, #0x1e6                 	// #486
   31318:	mov	x2, x1
   3131c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31320:	add	x1, x0, #0xa30
   31324:	mov	w0, #0x0                   	// #0
   31328:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3132c:	ldr	x0, [sp, #16]
   31330:	cmp	x0, #0x0
   31334:	cset	w0, eq  // eq = none
   31338:	and	w0, w0, #0xff
   3133c:	and	x0, x0, #0xff
   31340:	cmp	x0, #0x0
   31344:	b.eq	31370 <udev_util_encode_string@@LIBUDEV_183+0x25b40>  // b.none
   31348:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3134c:	add	x1, x0, #0x8c3
   31350:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31354:	add	x4, x0, #0xd90
   31358:	mov	w3, #0x1e7                 	// #487
   3135c:	mov	x2, x1
   31360:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31364:	add	x1, x0, #0xa38
   31368:	mov	w0, #0x0                   	// #0
   3136c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31370:	ldr	x0, [sp, #24]
   31374:	ldrb	w0, [x0]
   31378:	cmp	w0, #0x2f
   3137c:	cset	w0, eq  // eq = none
   31380:	and	w0, w0, #0xff
   31384:	mov	w1, w0
   31388:	ldr	x0, [sp, #16]
   3138c:	ldrb	w0, [x0]
   31390:	cmp	w0, #0x2f
   31394:	cset	w0, eq  // eq = none
   31398:	and	w0, w0, #0xff
   3139c:	sub	w0, w1, w0
   313a0:	str	w0, [sp, #44]
   313a4:	ldr	w0, [sp, #44]
   313a8:	cmp	w0, #0x0
   313ac:	b.eq	313b8 <udev_util_encode_string@@LIBUDEV_183+0x25b88>  // b.none
   313b0:	ldr	w0, [sp, #44]
   313b4:	b	31550 <udev_util_encode_string@@LIBUDEV_183+0x25d20>
   313b8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   313bc:	add	x1, x0, #0x920
   313c0:	ldr	x0, [sp, #24]
   313c4:	bl	5560 <strspn@plt>
   313c8:	mov	x1, x0
   313cc:	ldr	x0, [sp, #24]
   313d0:	add	x0, x0, x1
   313d4:	str	x0, [sp, #24]
   313d8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   313dc:	add	x1, x0, #0x920
   313e0:	ldr	x0, [sp, #16]
   313e4:	bl	5560 <strspn@plt>
   313e8:	mov	x1, x0
   313ec:	ldr	x0, [sp, #16]
   313f0:	add	x0, x0, x1
   313f4:	str	x0, [sp, #16]
   313f8:	ldr	x0, [sp, #24]
   313fc:	ldrb	w0, [x0]
   31400:	cmp	w0, #0x0
   31404:	b.ne	31420 <udev_util_encode_string@@LIBUDEV_183+0x25bf0>  // b.any
   31408:	ldr	x0, [sp, #16]
   3140c:	ldrb	w0, [x0]
   31410:	cmp	w0, #0x0
   31414:	b.ne	31420 <udev_util_encode_string@@LIBUDEV_183+0x25bf0>  // b.any
   31418:	mov	w0, #0x0                   	// #0
   3141c:	b	31550 <udev_util_encode_string@@LIBUDEV_183+0x25d20>
   31420:	ldr	x0, [sp, #24]
   31424:	ldrb	w0, [x0]
   31428:	cmp	w0, #0x0
   3142c:	b.ne	31438 <udev_util_encode_string@@LIBUDEV_183+0x25c08>  // b.any
   31430:	mov	w0, #0xffffffff            	// #-1
   31434:	b	31550 <udev_util_encode_string@@LIBUDEV_183+0x25d20>
   31438:	ldr	x0, [sp, #16]
   3143c:	ldrb	w0, [x0]
   31440:	cmp	w0, #0x0
   31444:	b.ne	31450 <udev_util_encode_string@@LIBUDEV_183+0x25c20>  // b.any
   31448:	mov	w0, #0x1                   	// #1
   3144c:	b	31550 <udev_util_encode_string@@LIBUDEV_183+0x25d20>
   31450:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31454:	add	x1, x0, #0x920
   31458:	ldr	x0, [sp, #24]
   3145c:	bl	57c0 <strcspn@plt>
   31460:	str	x0, [sp, #48]
   31464:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31468:	add	x1, x0, #0x920
   3146c:	ldr	x0, [sp, #16]
   31470:	bl	57c0 <strcspn@plt>
   31474:	str	x0, [sp, #56]
   31478:	ldr	x0, [sp, #48]
   3147c:	str	x0, [sp, #64]
   31480:	ldr	x0, [sp, #56]
   31484:	str	x0, [sp, #72]
   31488:	ldr	x0, [sp, #64]
   3148c:	ldr	x2, [sp, #72]
   31490:	ldr	x1, [sp, #72]
   31494:	cmp	x2, x0
   31498:	csel	x0, x1, x0, ls  // ls = plast
   3149c:	mov	x2, x0
   314a0:	ldr	x1, [sp, #16]
   314a4:	ldr	x0, [sp, #24]
   314a8:	bl	5410 <memcmp@plt>
   314ac:	str	w0, [sp, #44]
   314b0:	ldr	w0, [sp, #44]
   314b4:	cmp	w0, #0x0
   314b8:	b.eq	314e4 <udev_util_encode_string@@LIBUDEV_183+0x25cb4>  // b.none
   314bc:	ldr	w0, [sp, #44]
   314c0:	cmp	w0, #0x0
   314c4:	cset	w0, gt
   314c8:	and	w0, w0, #0xff
   314cc:	mov	w1, w0
   314d0:	ldr	w0, [sp, #44]
   314d4:	lsr	w0, w0, #31
   314d8:	and	w0, w0, #0xff
   314dc:	sub	w0, w1, w0
   314e0:	b	31550 <udev_util_encode_string@@LIBUDEV_183+0x25d20>
   314e4:	ldr	x1, [sp, #48]
   314e8:	ldr	x0, [sp, #56]
   314ec:	cmp	x1, x0
   314f0:	cset	w0, hi  // hi = pmore
   314f4:	and	w0, w0, #0xff
   314f8:	mov	w2, w0
   314fc:	ldr	x1, [sp, #48]
   31500:	ldr	x0, [sp, #56]
   31504:	cmp	x1, x0
   31508:	cset	w0, cc  // cc = lo, ul, last
   3150c:	and	w0, w0, #0xff
   31510:	sub	w0, w2, w0
   31514:	str	w0, [sp, #44]
   31518:	ldr	w0, [sp, #44]
   3151c:	cmp	w0, #0x0
   31520:	b.eq	3152c <udev_util_encode_string@@LIBUDEV_183+0x25cfc>  // b.none
   31524:	ldr	w0, [sp, #44]
   31528:	b	31550 <udev_util_encode_string@@LIBUDEV_183+0x25d20>
   3152c:	ldr	x1, [sp, #24]
   31530:	ldr	x0, [sp, #48]
   31534:	add	x0, x1, x0
   31538:	str	x0, [sp, #24]
   3153c:	ldr	x1, [sp, #16]
   31540:	ldr	x0, [sp, #56]
   31544:	add	x0, x1, x0
   31548:	str	x0, [sp, #16]
   3154c:	b	313b8 <udev_util_encode_string@@LIBUDEV_183+0x25b88>
   31550:	ldp	x29, x30, [sp], #80
   31554:	ret
   31558:	stp	x29, x30, [sp, #-32]!
   3155c:	mov	x29, sp
   31560:	str	x0, [sp, #24]
   31564:	str	x1, [sp, #16]
   31568:	ldr	x1, [sp, #16]
   3156c:	ldr	x0, [sp, #24]
   31570:	bl	312d8 <udev_util_encode_string@@LIBUDEV_183+0x25aa8>
   31574:	cmp	w0, #0x0
   31578:	cset	w0, eq  // eq = none
   3157c:	and	w0, w0, #0xff
   31580:	ldp	x29, x30, [sp], #32
   31584:	ret
   31588:	stp	x29, x30, [sp, #-304]!
   3158c:	mov	x29, sp
   31590:	str	x0, [sp, #24]
   31594:	str	x1, [sp, #248]
   31598:	str	x2, [sp, #256]
   3159c:	str	x3, [sp, #264]
   315a0:	str	x4, [sp, #272]
   315a4:	str	x5, [sp, #280]
   315a8:	str	x6, [sp, #288]
   315ac:	str	x7, [sp, #296]
   315b0:	str	q0, [sp, #112]
   315b4:	str	q1, [sp, #128]
   315b8:	str	q2, [sp, #144]
   315bc:	str	q3, [sp, #160]
   315c0:	str	q4, [sp, #176]
   315c4:	str	q5, [sp, #192]
   315c8:	str	q6, [sp, #208]
   315cc:	str	q7, [sp, #224]
   315d0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   315d4:	ldr	x0, [x0, #4016]
   315d8:	ldr	x1, [x0]
   315dc:	str	x1, [sp, #104]
   315e0:	mov	x1, #0x0                   	// #0
   315e4:	ldr	x0, [sp, #24]
   315e8:	bl	30c18 <udev_util_encode_string@@LIBUDEV_183+0x253e8>
   315ec:	str	x0, [sp, #48]
   315f0:	add	x0, sp, #0x130
   315f4:	str	x0, [sp, #72]
   315f8:	add	x0, sp, #0x130
   315fc:	str	x0, [sp, #80]
   31600:	add	x0, sp, #0xf0
   31604:	str	x0, [sp, #88]
   31608:	mov	w0, #0xffffffc8            	// #-56
   3160c:	str	w0, [sp, #96]
   31610:	mov	w0, #0xffffff80            	// #-128
   31614:	str	w0, [sp, #100]
   31618:	b	31654 <udev_util_encode_string@@LIBUDEV_183+0x25e24>
   3161c:	ldr	x0, [sp, #56]
   31620:	bl	30b88 <udev_util_encode_string@@LIBUDEV_183+0x25358>
   31624:	and	w0, w0, #0xff
   31628:	eor	w0, w0, #0x1
   3162c:	and	w0, w0, #0xff
   31630:	cmp	w0, #0x0
   31634:	b.eq	31654 <udev_util_encode_string@@LIBUDEV_183+0x25e24>  // b.none
   31638:	ldr	x0, [sp, #56]
   3163c:	bl	5040 <strlen@plt>
   31640:	mov	x1, x0
   31644:	ldr	x0, [sp, #48]
   31648:	add	x0, x1, x0
   3164c:	add	x0, x0, #0x1
   31650:	str	x0, [sp, #48]
   31654:	ldr	w1, [sp, #96]
   31658:	ldr	x0, [sp, #72]
   3165c:	cmp	w1, #0x0
   31660:	b.lt	31674 <udev_util_encode_string@@LIBUDEV_183+0x25e44>  // b.tstop
   31664:	add	x1, x0, #0xf
   31668:	and	x1, x1, #0xfffffffffffffff8
   3166c:	str	x1, [sp, #72]
   31670:	b	316a4 <udev_util_encode_string@@LIBUDEV_183+0x25e74>
   31674:	add	w2, w1, #0x8
   31678:	str	w2, [sp, #96]
   3167c:	ldr	w2, [sp, #96]
   31680:	cmp	w2, #0x0
   31684:	b.le	31698 <udev_util_encode_string@@LIBUDEV_183+0x25e68>
   31688:	add	x1, x0, #0xf
   3168c:	and	x1, x1, #0xfffffffffffffff8
   31690:	str	x1, [sp, #72]
   31694:	b	316a4 <udev_util_encode_string@@LIBUDEV_183+0x25e74>
   31698:	ldr	x2, [sp, #80]
   3169c:	sxtw	x0, w1
   316a0:	add	x0, x2, x0
   316a4:	ldr	x0, [x0]
   316a8:	str	x0, [sp, #56]
   316ac:	ldr	x0, [sp, #56]
   316b0:	cmn	x0, #0x1
   316b4:	b.ne	3161c <udev_util_encode_string@@LIBUDEV_183+0x25dec>  // b.any
   316b8:	ldr	x0, [sp, #48]
   316bc:	add	x0, x0, #0x1
   316c0:	mov	x1, x0
   316c4:	mov	x0, #0x1                   	// #1
   316c8:	bl	30ab4 <udev_util_encode_string@@LIBUDEV_183+0x25284>
   316cc:	str	x0, [sp, #64]
   316d0:	ldr	x0, [sp, #64]
   316d4:	cmp	x0, #0x0
   316d8:	b.ne	316e4 <udev_util_encode_string@@LIBUDEV_183+0x25eb4>  // b.any
   316dc:	mov	x0, #0x0                   	// #0
   316e0:	b	31858 <udev_util_encode_string@@LIBUDEV_183+0x26028>
   316e4:	ldr	x0, [sp, #24]
   316e8:	bl	30b88 <udev_util_encode_string@@LIBUDEV_183+0x25358>
   316ec:	and	w0, w0, #0xff
   316f0:	eor	w0, w0, #0x1
   316f4:	and	w0, w0, #0xff
   316f8:	cmp	w0, #0x0
   316fc:	b.eq	31730 <udev_util_encode_string@@LIBUDEV_183+0x25f00>  // b.none
   31700:	ldr	x1, [sp, #24]
   31704:	ldr	x0, [sp, #64]
   31708:	bl	51b0 <stpcpy@plt>
   3170c:	str	x0, [sp, #40]
   31710:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31714:	add	x1, x0, #0x920
   31718:	ldr	x0, [sp, #24]
   3171c:	bl	340f0 <udev_util_encode_string@@LIBUDEV_183+0x288c0>
   31720:	cmp	x0, #0x0
   31724:	cset	w0, ne  // ne = any
   31728:	strb	w0, [sp, #39]
   3172c:	b	31748 <udev_util_encode_string@@LIBUDEV_183+0x25f18>
   31730:	ldr	x0, [sp, #64]
   31734:	strb	wzr, [x0]
   31738:	ldr	x0, [sp, #64]
   3173c:	str	x0, [sp, #40]
   31740:	mov	w0, #0x1                   	// #1
   31744:	strb	w0, [sp, #39]
   31748:	add	x0, sp, #0x130
   3174c:	str	x0, [sp, #72]
   31750:	add	x0, sp, #0x130
   31754:	str	x0, [sp, #80]
   31758:	add	x0, sp, #0xf0
   3175c:	str	x0, [sp, #88]
   31760:	mov	w0, #0xffffffc8            	// #-56
   31764:	str	w0, [sp, #96]
   31768:	mov	w0, #0xffffff80            	// #-128
   3176c:	str	w0, [sp, #100]
   31770:	b	317f0 <udev_util_encode_string@@LIBUDEV_183+0x25fc0>
   31774:	ldr	x0, [sp, #56]
   31778:	bl	30b88 <udev_util_encode_string@@LIBUDEV_183+0x25358>
   3177c:	and	w0, w0, #0xff
   31780:	cmp	w0, #0x0
   31784:	b.eq	3178c <udev_util_encode_string@@LIBUDEV_183+0x25f5c>  // b.none
   31788:	b	317f0 <udev_util_encode_string@@LIBUDEV_183+0x25fc0>
   3178c:	ldrb	w0, [sp, #39]
   31790:	eor	w0, w0, #0x1
   31794:	and	w0, w0, #0xff
   31798:	cmp	w0, #0x0
   3179c:	b.eq	317c4 <udev_util_encode_string@@LIBUDEV_183+0x25f94>  // b.none
   317a0:	ldr	x0, [sp, #56]
   317a4:	ldrb	w0, [x0]
   317a8:	cmp	w0, #0x2f
   317ac:	b.eq	317c4 <udev_util_encode_string@@LIBUDEV_183+0x25f94>  // b.none
   317b0:	ldr	x0, [sp, #40]
   317b4:	add	x1, x0, #0x1
   317b8:	str	x1, [sp, #40]
   317bc:	mov	w1, #0x2f                  	// #47
   317c0:	strb	w1, [x0]
   317c4:	ldr	x1, [sp, #56]
   317c8:	ldr	x0, [sp, #40]
   317cc:	bl	51b0 <stpcpy@plt>
   317d0:	str	x0, [sp, #40]
   317d4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   317d8:	add	x1, x0, #0x920
   317dc:	ldr	x0, [sp, #56]
   317e0:	bl	340f0 <udev_util_encode_string@@LIBUDEV_183+0x288c0>
   317e4:	cmp	x0, #0x0
   317e8:	cset	w0, ne  // ne = any
   317ec:	strb	w0, [sp, #39]
   317f0:	ldr	w1, [sp, #96]
   317f4:	ldr	x0, [sp, #72]
   317f8:	cmp	w1, #0x0
   317fc:	b.lt	31810 <udev_util_encode_string@@LIBUDEV_183+0x25fe0>  // b.tstop
   31800:	add	x1, x0, #0xf
   31804:	and	x1, x1, #0xfffffffffffffff8
   31808:	str	x1, [sp, #72]
   3180c:	b	31840 <udev_util_encode_string@@LIBUDEV_183+0x26010>
   31810:	add	w2, w1, #0x8
   31814:	str	w2, [sp, #96]
   31818:	ldr	w2, [sp, #96]
   3181c:	cmp	w2, #0x0
   31820:	b.le	31834 <udev_util_encode_string@@LIBUDEV_183+0x26004>
   31824:	add	x1, x0, #0xf
   31828:	and	x1, x1, #0xfffffffffffffff8
   3182c:	str	x1, [sp, #72]
   31830:	b	31840 <udev_util_encode_string@@LIBUDEV_183+0x26010>
   31834:	ldr	x2, [sp, #80]
   31838:	sxtw	x0, w1
   3183c:	add	x0, x2, x0
   31840:	ldr	x0, [x0]
   31844:	str	x0, [sp, #56]
   31848:	ldr	x0, [sp, #56]
   3184c:	cmn	x0, #0x1
   31850:	b.ne	31774 <udev_util_encode_string@@LIBUDEV_183+0x25f44>  // b.any
   31854:	ldr	x0, [sp, #64]
   31858:	mov	x1, x0
   3185c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   31860:	ldr	x0, [x0, #4016]
   31864:	ldr	x2, [sp, #104]
   31868:	ldr	x0, [x0]
   3186c:	eor	x0, x2, x0
   31870:	cmp	x0, #0x0
   31874:	b.eq	3187c <udev_util_encode_string@@LIBUDEV_183+0x2604c>  // b.none
   31878:	bl	5390 <__stack_chk_fail@plt>
   3187c:	mov	x0, x1
   31880:	ldp	x29, x30, [sp], #304
   31884:	ret
   31888:	stp	x29, x30, [sp, #-64]!
   3188c:	mov	x29, sp
   31890:	str	x0, [sp, #24]
   31894:	ldr	x0, [sp, #24]
   31898:	cmp	x0, #0x0
   3189c:	cset	w0, eq  // eq = none
   318a0:	and	w0, w0, #0xff
   318a4:	and	x0, x0, #0xff
   318a8:	cmp	x0, #0x0
   318ac:	b.eq	318d8 <udev_util_encode_string@@LIBUDEV_183+0x260a8>  // b.none
   318b0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   318b4:	add	x1, x0, #0x8c3
   318b8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   318bc:	add	x4, x0, #0xda0
   318c0:	mov	w3, #0x30a                 	// #778
   318c4:	mov	x2, x1
   318c8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   318cc:	add	x1, x0, #0x930
   318d0:	mov	w0, #0x0                   	// #0
   318d4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   318d8:	ldr	x0, [sp, #24]
   318dc:	bl	5370 <strdup@plt>
   318e0:	str	x0, [sp, #40]
   318e4:	ldr	x0, [sp, #40]
   318e8:	cmp	x0, #0x0
   318ec:	b.ne	318f8 <udev_util_encode_string@@LIBUDEV_183+0x260c8>  // b.any
   318f0:	mov	x0, #0x0                   	// #0
   318f4:	b	31978 <udev_util_encode_string@@LIBUDEV_183+0x26148>
   318f8:	ldr	x0, [sp, #40]
   318fc:	bl	55c0 <dirname@plt>
   31900:	str	x0, [sp, #48]
   31904:	ldr	x0, [sp, #48]
   31908:	cmp	x0, #0x0
   3190c:	cset	w0, eq  // eq = none
   31910:	and	w0, w0, #0xff
   31914:	and	x0, x0, #0xff
   31918:	cmp	x0, #0x0
   3191c:	b.eq	31948 <udev_util_encode_string@@LIBUDEV_183+0x26118>  // b.none
   31920:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31924:	add	x1, x0, #0x8c3
   31928:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3192c:	add	x4, x0, #0xda0
   31930:	mov	w3, #0x311                 	// #785
   31934:	mov	x2, x1
   31938:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3193c:	add	x1, x0, #0xb68
   31940:	mov	w0, #0x0                   	// #0
   31944:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31948:	ldr	x1, [sp, #48]
   3194c:	ldr	x0, [sp, #40]
   31950:	cmp	x1, x0
   31954:	b.ne	31960 <udev_util_encode_string@@LIBUDEV_183+0x26130>  // b.any
   31958:	ldr	x0, [sp, #40]
   3195c:	b	31978 <udev_util_encode_string@@LIBUDEV_183+0x26148>
   31960:	ldr	x0, [sp, #48]
   31964:	bl	5370 <strdup@plt>
   31968:	str	x0, [sp, #56]
   3196c:	ldr	x0, [sp, #40]
   31970:	bl	54b0 <free@plt>
   31974:	ldr	x0, [sp, #56]
   31978:	ldp	x29, x30, [sp], #64
   3197c:	ret
   31980:	stp	x29, x30, [sp, #-48]!
   31984:	mov	x29, sp
   31988:	str	x0, [sp, #24]
   3198c:	ldr	x0, [sp, #24]
   31990:	bl	30b88 <udev_util_encode_string@@LIBUDEV_183+0x25358>
   31994:	and	w0, w0, #0xff
   31998:	cmp	w0, #0x0
   3199c:	b.eq	319a8 <udev_util_encode_string@@LIBUDEV_183+0x26178>  // b.none
   319a0:	mov	w0, #0x0                   	// #0
   319a4:	b	31a0c <udev_util_encode_string@@LIBUDEV_183+0x261dc>
   319a8:	ldr	x0, [sp, #24]
   319ac:	bl	31b78 <udev_util_encode_string@@LIBUDEV_183+0x26348>
   319b0:	and	w0, w0, #0xff
   319b4:	cmp	w0, #0x0
   319b8:	b.eq	319c4 <udev_util_encode_string@@LIBUDEV_183+0x26194>  // b.none
   319bc:	mov	w0, #0x0                   	// #0
   319c0:	b	31a0c <udev_util_encode_string@@LIBUDEV_183+0x261dc>
   319c4:	mov	w1, #0x2f                  	// #47
   319c8:	ldr	x0, [sp, #24]
   319cc:	bl	56e0 <strchrnul@plt>
   319d0:	str	x0, [sp, #40]
   319d4:	ldr	x0, [sp, #40]
   319d8:	ldrb	w0, [x0]
   319dc:	cmp	w0, #0x0
   319e0:	b.eq	319ec <udev_util_encode_string@@LIBUDEV_183+0x261bc>  // b.none
   319e4:	mov	w0, #0x0                   	// #0
   319e8:	b	31a0c <udev_util_encode_string@@LIBUDEV_183+0x261dc>
   319ec:	ldr	x1, [sp, #40]
   319f0:	ldr	x0, [sp, #24]
   319f4:	sub	x0, x1, x0
   319f8:	cmp	x0, #0x1, lsl #12
   319fc:	b.le	31a08 <udev_util_encode_string@@LIBUDEV_183+0x261d8>
   31a00:	mov	w0, #0x0                   	// #0
   31a04:	b	31a0c <udev_util_encode_string@@LIBUDEV_183+0x261dc>
   31a08:	mov	w0, #0x1                   	// #1
   31a0c:	ldp	x29, x30, [sp], #48
   31a10:	ret
   31a14:	stp	x29, x30, [sp, #-32]!
   31a18:	mov	x29, sp
   31a1c:	str	x0, [sp, #24]
   31a20:	ldr	x0, [sp, #24]
   31a24:	bl	30b88 <udev_util_encode_string@@LIBUDEV_183+0x25358>
   31a28:	and	w0, w0, #0xff
   31a2c:	cmp	w0, #0x0
   31a30:	b.eq	31a3c <udev_util_encode_string@@LIBUDEV_183+0x2620c>  // b.none
   31a34:	mov	w0, #0x0                   	// #0
   31a38:	b	31a58 <udev_util_encode_string@@LIBUDEV_183+0x26228>
   31a3c:	ldr	x0, [sp, #24]
   31a40:	bl	5040 <strlen@plt>
   31a44:	cmp	x0, #0xfff
   31a48:	b.ls	31a54 <udev_util_encode_string@@LIBUDEV_183+0x26224>  // b.plast
   31a4c:	mov	w0, #0x0                   	// #0
   31a50:	b	31a58 <udev_util_encode_string@@LIBUDEV_183+0x26228>
   31a54:	mov	w0, #0x1                   	// #1
   31a58:	ldp	x29, x30, [sp], #32
   31a5c:	ret
   31a60:	stp	x29, x30, [sp, #-32]!
   31a64:	mov	x29, sp
   31a68:	str	x0, [sp, #24]
   31a6c:	ldr	x0, [sp, #24]
   31a70:	bl	31a14 <udev_util_encode_string@@LIBUDEV_183+0x261e4>
   31a74:	and	w0, w0, #0xff
   31a78:	eor	w0, w0, #0x1
   31a7c:	and	w0, w0, #0xff
   31a80:	cmp	w0, #0x0
   31a84:	b.eq	31a90 <udev_util_encode_string@@LIBUDEV_183+0x26260>  // b.none
   31a88:	mov	w0, #0x0                   	// #0
   31a8c:	b	31b70 <udev_util_encode_string@@LIBUDEV_183+0x26340>
   31a90:	ldr	x0, [sp, #24]
   31a94:	bl	31b78 <udev_util_encode_string@@LIBUDEV_183+0x26348>
   31a98:	and	w0, w0, #0xff
   31a9c:	cmp	w0, #0x0
   31aa0:	b.eq	31aac <udev_util_encode_string@@LIBUDEV_183+0x2627c>  // b.none
   31aa4:	mov	w0, #0x0                   	// #0
   31aa8:	b	31b70 <udev_util_encode_string@@LIBUDEV_183+0x26340>
   31aac:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31ab0:	add	x1, x0, #0x928
   31ab4:	ldr	x0, [sp, #24]
   31ab8:	bl	30bc8 <udev_util_encode_string@@LIBUDEV_183+0x25398>
   31abc:	cmp	x0, #0x0
   31ac0:	b.ne	31af4 <udev_util_encode_string@@LIBUDEV_183+0x262c4>  // b.any
   31ac4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31ac8:	add	x1, x0, #0xb70
   31acc:	ldr	x0, [sp, #24]
   31ad0:	bl	340f0 <udev_util_encode_string@@LIBUDEV_183+0x288c0>
   31ad4:	cmp	x0, #0x0
   31ad8:	b.ne	31af4 <udev_util_encode_string@@LIBUDEV_183+0x262c4>  // b.any
   31adc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31ae0:	add	x1, x0, #0xb78
   31ae4:	ldr	x0, [sp, #24]
   31ae8:	bl	56f0 <strstr@plt>
   31aec:	cmp	x0, #0x0
   31af0:	b.eq	31afc <udev_util_encode_string@@LIBUDEV_183+0x262cc>  // b.none
   31af4:	mov	w0, #0x0                   	// #0
   31af8:	b	31b70 <udev_util_encode_string@@LIBUDEV_183+0x26340>
   31afc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31b00:	add	x1, x0, #0xb80
   31b04:	ldr	x0, [sp, #24]
   31b08:	bl	30bc8 <udev_util_encode_string@@LIBUDEV_183+0x25398>
   31b0c:	cmp	x0, #0x0
   31b10:	b.ne	31b44 <udev_util_encode_string@@LIBUDEV_183+0x26314>  // b.any
   31b14:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31b18:	add	x1, x0, #0xb88
   31b1c:	ldr	x0, [sp, #24]
   31b20:	bl	340f0 <udev_util_encode_string@@LIBUDEV_183+0x288c0>
   31b24:	cmp	x0, #0x0
   31b28:	b.ne	31b44 <udev_util_encode_string@@LIBUDEV_183+0x26314>  // b.any
   31b2c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31b30:	add	x1, x0, #0xb90
   31b34:	ldr	x0, [sp, #24]
   31b38:	bl	56f0 <strstr@plt>
   31b3c:	cmp	x0, #0x0
   31b40:	b.eq	31b4c <udev_util_encode_string@@LIBUDEV_183+0x2631c>  // b.none
   31b44:	mov	w0, #0x0                   	// #0
   31b48:	b	31b70 <udev_util_encode_string@@LIBUDEV_183+0x26340>
   31b4c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31b50:	add	x1, x0, #0xb98
   31b54:	ldr	x0, [sp, #24]
   31b58:	bl	56f0 <strstr@plt>
   31b5c:	cmp	x0, #0x0
   31b60:	b.eq	31b6c <udev_util_encode_string@@LIBUDEV_183+0x2633c>  // b.none
   31b64:	mov	w0, #0x0                   	// #0
   31b68:	b	31b70 <udev_util_encode_string@@LIBUDEV_183+0x26340>
   31b6c:	mov	w0, #0x1                   	// #1
   31b70:	ldp	x29, x30, [sp], #32
   31b74:	ret
   31b78:	sub	sp, sp, #0x10
   31b7c:	str	x0, [sp, #8]
   31b80:	ldr	x0, [sp, #8]
   31b84:	cmp	x0, #0x0
   31b88:	b.ne	31b94 <udev_util_encode_string@@LIBUDEV_183+0x26364>  // b.any
   31b8c:	mov	w0, #0x0                   	// #0
   31b90:	b	31bfc <udev_util_encode_string@@LIBUDEV_183+0x263cc>
   31b94:	ldr	x0, [sp, #8]
   31b98:	ldrb	w0, [x0]
   31b9c:	cmp	w0, #0x2e
   31ba0:	b.eq	31bac <udev_util_encode_string@@LIBUDEV_183+0x2637c>  // b.none
   31ba4:	mov	w0, #0x0                   	// #0
   31ba8:	b	31bfc <udev_util_encode_string@@LIBUDEV_183+0x263cc>
   31bac:	ldr	x0, [sp, #8]
   31bb0:	add	x0, x0, #0x1
   31bb4:	ldrb	w0, [x0]
   31bb8:	cmp	w0, #0x0
   31bbc:	b.ne	31bc8 <udev_util_encode_string@@LIBUDEV_183+0x26398>  // b.any
   31bc0:	mov	w0, #0x1                   	// #1
   31bc4:	b	31bfc <udev_util_encode_string@@LIBUDEV_183+0x263cc>
   31bc8:	ldr	x0, [sp, #8]
   31bcc:	add	x0, x0, #0x1
   31bd0:	ldrb	w0, [x0]
   31bd4:	cmp	w0, #0x2e
   31bd8:	b.eq	31be4 <udev_util_encode_string@@LIBUDEV_183+0x263b4>  // b.none
   31bdc:	mov	w0, #0x0                   	// #0
   31be0:	b	31bfc <udev_util_encode_string@@LIBUDEV_183+0x263cc>
   31be4:	ldr	x0, [sp, #8]
   31be8:	add	x0, x0, #0x2
   31bec:	ldrb	w0, [x0]
   31bf0:	cmp	w0, #0x0
   31bf4:	cset	w0, eq  // eq = none
   31bf8:	and	w0, w0, #0xff
   31bfc:	add	sp, sp, #0x10
   31c00:	ret
   31c04:	stp	x29, x30, [sp, #-32]!
   31c08:	mov	x29, sp
   31c0c:	str	x0, [sp, #24]
   31c10:	ldr	x0, [sp, #24]
   31c14:	cmp	x0, #0x0
   31c18:	b.ne	31c24 <udev_util_encode_string@@LIBUDEV_183+0x263f4>  // b.any
   31c1c:	mov	w0, #0x1                   	// #1
   31c20:	b	31c50 <udev_util_encode_string@@LIBUDEV_183+0x26420>
   31c24:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31c28:	add	x1, x0, #0x920
   31c2c:	ldr	x0, [sp, #24]
   31c30:	bl	5560 <strspn@plt>
   31c34:	mov	x1, x0
   31c38:	ldr	x0, [sp, #24]
   31c3c:	add	x0, x0, x1
   31c40:	ldrb	w0, [x0]
   31c44:	cmp	w0, #0x0
   31c48:	cset	w0, eq  // eq = none
   31c4c:	and	w0, w0, #0xff
   31c50:	ldp	x29, x30, [sp], #32
   31c54:	ret
   31c58:	stp	x29, x30, [sp, #-32]!
   31c5c:	mov	x29, sp
   31c60:	str	x0, [sp, #24]
   31c64:	ldr	x0, [sp, #24]
   31c68:	bl	54b0 <free@plt>
   31c6c:	mov	x0, #0x0                   	// #0
   31c70:	ldp	x29, x30, [sp], #32
   31c74:	ret
   31c78:	stp	x29, x30, [sp, #-32]!
   31c7c:	mov	x29, sp
   31c80:	str	x0, [sp, #24]
   31c84:	ldr	x0, [sp, #24]
   31c88:	cmp	x0, #0x0
   31c8c:	b.ne	31c98 <udev_util_encode_string@@LIBUDEV_183+0x26468>  // b.any
   31c90:	mov	x0, #0x0                   	// #0
   31c94:	b	31cac <udev_util_encode_string@@LIBUDEV_183+0x2647c>
   31c98:	ldr	x0, [sp, #24]
   31c9c:	ldr	x0, [x0, #16]
   31ca0:	bl	54b0 <free@plt>
   31ca4:	ldr	x0, [sp, #24]
   31ca8:	bl	31c58 <udev_util_encode_string@@LIBUDEV_183+0x26428>
   31cac:	ldp	x29, x30, [sp], #32
   31cb0:	ret
   31cb4:	stp	x29, x30, [sp, #-48]!
   31cb8:	mov	x29, sp
   31cbc:	str	x0, [sp, #24]
   31cc0:	str	w1, [sp, #20]
   31cc4:	str	w2, [sp, #16]
   31cc8:	ldr	x0, [sp, #24]
   31ccc:	cmp	x0, #0x0
   31cd0:	cset	w0, eq  // eq = none
   31cd4:	and	w0, w0, #0xff
   31cd8:	and	x0, x0, #0xff
   31cdc:	cmp	x0, #0x0
   31ce0:	b.eq	31d0c <udev_util_encode_string@@LIBUDEV_183+0x264dc>  // b.none
   31ce4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31ce8:	add	x1, x0, #0xdb3
   31cec:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31cf0:	add	x4, x0, #0xe70
   31cf4:	mov	w3, #0x44                  	// #68
   31cf8:	mov	x2, x1
   31cfc:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d00:	add	x1, x0, #0xdc8
   31d04:	mov	w0, #0x0                   	// #0
   31d08:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31d0c:	ldr	x0, [sp, #24]
   31d10:	ldr	w0, [x0, #8]
   31d14:	ldr	w1, [sp, #20]
   31d18:	cmp	w1, w0
   31d1c:	cset	w0, cs  // cs = hs, nlast
   31d20:	and	w0, w0, #0xff
   31d24:	and	x0, x0, #0xff
   31d28:	cmp	x0, #0x0
   31d2c:	b.eq	31d58 <udev_util_encode_string@@LIBUDEV_183+0x26528>  // b.none
   31d30:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d34:	add	x1, x0, #0xdb3
   31d38:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d3c:	add	x4, x0, #0xe70
   31d40:	mov	w3, #0x45                  	// #69
   31d44:	mov	x2, x1
   31d48:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d4c:	add	x1, x0, #0xdd0
   31d50:	mov	w0, #0x0                   	// #0
   31d54:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31d58:	ldr	x0, [sp, #24]
   31d5c:	ldr	w0, [x0, #8]
   31d60:	ldr	w1, [sp, #16]
   31d64:	cmp	w1, w0
   31d68:	cset	w0, cs  // cs = hs, nlast
   31d6c:	and	w0, w0, #0xff
   31d70:	and	x0, x0, #0xff
   31d74:	cmp	x0, #0x0
   31d78:	b.eq	31da4 <udev_util_encode_string@@LIBUDEV_183+0x26574>  // b.none
   31d7c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d80:	add	x1, x0, #0xdb3
   31d84:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d88:	add	x4, x0, #0xe70
   31d8c:	mov	w3, #0x46                  	// #70
   31d90:	mov	x2, x1
   31d94:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31d98:	add	x1, x0, #0xde0
   31d9c:	mov	w0, #0x0                   	// #0
   31da0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31da4:	ldr	x0, [sp, #24]
   31da8:	ldr	x1, [x0, #16]
   31dac:	ldr	w0, [sp, #20]
   31db0:	lsl	x0, x0, #4
   31db4:	add	x0, x1, x0
   31db8:	ldr	x0, [x0, #8]
   31dbc:	cmp	x0, #0x0
   31dc0:	cset	w0, ne  // ne = any
   31dc4:	and	w0, w0, #0xff
   31dc8:	and	x0, x0, #0xff
   31dcc:	cmp	x0, #0x0
   31dd0:	b.eq	31e34 <udev_util_encode_string@@LIBUDEV_183+0x26604>  // b.none
   31dd4:	ldr	x0, [sp, #24]
   31dd8:	ldr	x1, [x0, #16]
   31ddc:	ldr	w0, [sp, #20]
   31de0:	lsl	x0, x0, #4
   31de4:	add	x0, x1, x0
   31de8:	ldr	x0, [x0, #8]
   31dec:	ldr	w0, [x0]
   31df0:	ldr	w1, [sp, #20]
   31df4:	cmp	w1, w0
   31df8:	cset	w0, ne  // ne = any
   31dfc:	and	w0, w0, #0xff
   31e00:	and	x0, x0, #0xff
   31e04:	cmp	x0, #0x0
   31e08:	b.eq	31e34 <udev_util_encode_string@@LIBUDEV_183+0x26604>  // b.none
   31e0c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31e10:	add	x1, x0, #0xdb3
   31e14:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31e18:	add	x4, x0, #0xe70
   31e1c:	mov	w3, #0x48                  	// #72
   31e20:	mov	x2, x1
   31e24:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31e28:	add	x1, x0, #0xdf0
   31e2c:	mov	w0, #0x0                   	// #0
   31e30:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31e34:	ldr	x0, [sp, #24]
   31e38:	ldr	x1, [x0, #16]
   31e3c:	ldr	w0, [sp, #16]
   31e40:	lsl	x0, x0, #4
   31e44:	add	x0, x1, x0
   31e48:	ldr	x0, [x0, #8]
   31e4c:	cmp	x0, #0x0
   31e50:	cset	w0, ne  // ne = any
   31e54:	and	w0, w0, #0xff
   31e58:	and	x0, x0, #0xff
   31e5c:	cmp	x0, #0x0
   31e60:	b.eq	31ec4 <udev_util_encode_string@@LIBUDEV_183+0x26694>  // b.none
   31e64:	ldr	x0, [sp, #24]
   31e68:	ldr	x1, [x0, #16]
   31e6c:	ldr	w0, [sp, #16]
   31e70:	lsl	x0, x0, #4
   31e74:	add	x0, x1, x0
   31e78:	ldr	x0, [x0, #8]
   31e7c:	ldr	w0, [x0]
   31e80:	ldr	w1, [sp, #16]
   31e84:	cmp	w1, w0
   31e88:	cset	w0, ne  // ne = any
   31e8c:	and	w0, w0, #0xff
   31e90:	and	x0, x0, #0xff
   31e94:	cmp	x0, #0x0
   31e98:	b.eq	31ec4 <udev_util_encode_string@@LIBUDEV_183+0x26694>  // b.none
   31e9c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31ea0:	add	x1, x0, #0xdb3
   31ea4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31ea8:	add	x4, x0, #0xe70
   31eac:	mov	w3, #0x49                  	// #73
   31eb0:	mov	x2, x1
   31eb4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   31eb8:	add	x1, x0, #0xe20
   31ebc:	mov	w0, #0x0                   	// #0
   31ec0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   31ec4:	ldr	x0, [sp, #24]
   31ec8:	ldr	x1, [x0, #16]
   31ecc:	ldr	w0, [sp, #20]
   31ed0:	lsl	x0, x0, #4
   31ed4:	add	x0, x1, x0
   31ed8:	ldr	x0, [x0]
   31edc:	str	x0, [sp, #32]
   31ee0:	ldr	x0, [sp, #24]
   31ee4:	ldr	x1, [x0, #16]
   31ee8:	ldr	w0, [sp, #16]
   31eec:	lsl	x0, x0, #4
   31ef0:	add	x1, x1, x0
   31ef4:	ldr	x0, [sp, #24]
   31ef8:	ldr	x2, [x0, #16]
   31efc:	ldr	w0, [sp, #20]
   31f00:	lsl	x0, x0, #4
   31f04:	add	x0, x2, x0
   31f08:	ldr	x1, [x1]
   31f0c:	str	x1, [x0]
   31f10:	ldr	x0, [sp, #24]
   31f14:	ldr	x1, [x0, #16]
   31f18:	ldr	w0, [sp, #16]
   31f1c:	lsl	x0, x0, #4
   31f20:	add	x0, x1, x0
   31f24:	ldr	x1, [sp, #32]
   31f28:	str	x1, [x0]
   31f2c:	ldr	x0, [sp, #24]
   31f30:	ldr	x1, [x0, #16]
   31f34:	ldr	w0, [sp, #20]
   31f38:	lsl	x0, x0, #4
   31f3c:	add	x0, x1, x0
   31f40:	ldr	x0, [x0, #8]
   31f44:	str	x0, [sp, #40]
   31f48:	ldr	x0, [sp, #24]
   31f4c:	ldr	x1, [x0, #16]
   31f50:	ldr	w0, [sp, #16]
   31f54:	lsl	x0, x0, #4
   31f58:	add	x1, x1, x0
   31f5c:	ldr	x0, [sp, #24]
   31f60:	ldr	x2, [x0, #16]
   31f64:	ldr	w0, [sp, #20]
   31f68:	lsl	x0, x0, #4
   31f6c:	add	x0, x2, x0
   31f70:	ldr	x1, [x1, #8]
   31f74:	str	x1, [x0, #8]
   31f78:	ldr	x0, [sp, #24]
   31f7c:	ldr	x1, [x0, #16]
   31f80:	ldr	w0, [sp, #16]
   31f84:	lsl	x0, x0, #4
   31f88:	add	x0, x1, x0
   31f8c:	ldr	x1, [sp, #40]
   31f90:	str	x1, [x0, #8]
   31f94:	ldr	x0, [sp, #24]
   31f98:	ldr	x1, [x0, #16]
   31f9c:	ldr	w0, [sp, #20]
   31fa0:	lsl	x0, x0, #4
   31fa4:	add	x0, x1, x0
   31fa8:	ldr	x0, [x0, #8]
   31fac:	cmp	x0, #0x0
   31fb0:	b.eq	31fd4 <udev_util_encode_string@@LIBUDEV_183+0x267a4>  // b.none
   31fb4:	ldr	x0, [sp, #24]
   31fb8:	ldr	x1, [x0, #16]
   31fbc:	ldr	w0, [sp, #20]
   31fc0:	lsl	x0, x0, #4
   31fc4:	add	x0, x1, x0
   31fc8:	ldr	x0, [x0, #8]
   31fcc:	ldr	w1, [sp, #20]
   31fd0:	str	w1, [x0]
   31fd4:	ldr	x0, [sp, #24]
   31fd8:	ldr	x1, [x0, #16]
   31fdc:	ldr	w0, [sp, #16]
   31fe0:	lsl	x0, x0, #4
   31fe4:	add	x0, x1, x0
   31fe8:	ldr	x0, [x0, #8]
   31fec:	cmp	x0, #0x0
   31ff0:	b.eq	32014 <udev_util_encode_string@@LIBUDEV_183+0x267e4>  // b.none
   31ff4:	ldr	x0, [sp, #24]
   31ff8:	ldr	x1, [x0, #16]
   31ffc:	ldr	w0, [sp, #16]
   32000:	lsl	x0, x0, #4
   32004:	add	x0, x1, x0
   32008:	ldr	x0, [x0, #8]
   3200c:	ldr	w1, [sp, #16]
   32010:	str	w1, [x0]
   32014:	nop
   32018:	ldp	x29, x30, [sp], #48
   3201c:	ret
   32020:	stp	x29, x30, [sp, #-48]!
   32024:	mov	x29, sp
   32028:	str	x0, [sp, #24]
   3202c:	str	w1, [sp, #20]
   32030:	ldr	x0, [sp, #24]
   32034:	cmp	x0, #0x0
   32038:	cset	w0, eq  // eq = none
   3203c:	and	w0, w0, #0xff
   32040:	and	x0, x0, #0xff
   32044:	cmp	x0, #0x0
   32048:	b.eq	32074 <udev_util_encode_string@@LIBUDEV_183+0x26844>  // b.none
   3204c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32050:	add	x1, x0, #0xdb3
   32054:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32058:	add	x4, x0, #0xe78
   3205c:	mov	w3, #0x56                  	// #86
   32060:	mov	x2, x1
   32064:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32068:	add	x1, x0, #0xdc8
   3206c:	mov	w0, #0x0                   	// #0
   32070:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   32074:	ldr	x0, [sp, #24]
   32078:	ldr	w0, [x0, #8]
   3207c:	ldr	w1, [sp, #20]
   32080:	cmp	w1, w0
   32084:	cset	w0, cs  // cs = hs, nlast
   32088:	and	w0, w0, #0xff
   3208c:	and	x0, x0, #0xff
   32090:	cmp	x0, #0x0
   32094:	b.eq	32134 <udev_util_encode_string@@LIBUDEV_183+0x26904>  // b.none
   32098:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3209c:	add	x1, x0, #0xdb3
   320a0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   320a4:	add	x4, x0, #0xe78
   320a8:	mov	w3, #0x57                  	// #87
   320ac:	mov	x2, x1
   320b0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   320b4:	add	x1, x0, #0xe50
   320b8:	mov	w0, #0x0                   	// #0
   320bc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   320c0:	ldr	w0, [sp, #20]
   320c4:	sub	w0, w0, #0x1
   320c8:	lsr	w0, w0, #1
   320cc:	str	w0, [sp, #44]
   320d0:	ldr	x0, [sp, #24]
   320d4:	ldr	x2, [x0]
   320d8:	ldr	x0, [sp, #24]
   320dc:	ldr	x1, [x0, #16]
   320e0:	ldr	w0, [sp, #44]
   320e4:	lsl	x0, x0, #4
   320e8:	add	x0, x1, x0
   320ec:	ldr	x3, [x0]
   320f0:	ldr	x0, [sp, #24]
   320f4:	ldr	x1, [x0, #16]
   320f8:	ldr	w0, [sp, #20]
   320fc:	lsl	x0, x0, #4
   32100:	add	x0, x1, x0
   32104:	ldr	x0, [x0]
   32108:	mov	x1, x0
   3210c:	mov	x0, x3
   32110:	blr	x2
   32114:	cmp	w0, #0x0
   32118:	b.le	32144 <udev_util_encode_string@@LIBUDEV_183+0x26914>
   3211c:	ldr	w2, [sp, #44]
   32120:	ldr	w1, [sp, #20]
   32124:	ldr	x0, [sp, #24]
   32128:	bl	31cb4 <udev_util_encode_string@@LIBUDEV_183+0x26484>
   3212c:	ldr	w0, [sp, #44]
   32130:	str	w0, [sp, #20]
   32134:	ldr	w0, [sp, #20]
   32138:	cmp	w0, #0x0
   3213c:	b.ne	320c0 <udev_util_encode_string@@LIBUDEV_183+0x26890>  // b.any
   32140:	b	32148 <udev_util_encode_string@@LIBUDEV_183+0x26918>
   32144:	nop
   32148:	ldr	w0, [sp, #20]
   3214c:	ldp	x29, x30, [sp], #48
   32150:	ret
   32154:	stp	x29, x30, [sp, #-48]!
   32158:	mov	x29, sp
   3215c:	str	x0, [sp, #24]
   32160:	str	w1, [sp, #20]
   32164:	ldr	x0, [sp, #24]
   32168:	cmp	x0, #0x0
   3216c:	cset	w0, eq  // eq = none
   32170:	and	w0, w0, #0xff
   32174:	and	x0, x0, #0xff
   32178:	cmp	x0, #0x0
   3217c:	b.eq	321a8 <udev_util_encode_string@@LIBUDEV_183+0x26978>  // b.none
   32180:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32184:	add	x1, x0, #0xdb3
   32188:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3218c:	add	x4, x0, #0xe88
   32190:	mov	w3, #0x69                  	// #105
   32194:	mov	x2, x1
   32198:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3219c:	add	x1, x0, #0xdc8
   321a0:	mov	w0, #0x0                   	// #0
   321a4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   321a8:	ldr	w0, [sp, #20]
   321ac:	add	w0, w0, #0x1
   321b0:	lsl	w0, w0, #1
   321b4:	str	w0, [sp, #40]
   321b8:	ldr	w0, [sp, #40]
   321bc:	sub	w0, w0, #0x1
   321c0:	str	w0, [sp, #44]
   321c4:	ldr	x0, [sp, #24]
   321c8:	ldr	w0, [x0, #8]
   321cc:	ldr	w1, [sp, #44]
   321d0:	cmp	w1, w0
   321d4:	b.cs	322cc <udev_util_encode_string@@LIBUDEV_183+0x26a9c>  // b.hs, b.nlast
   321d8:	ldr	x0, [sp, #24]
   321dc:	ldr	x2, [x0]
   321e0:	ldr	x0, [sp, #24]
   321e4:	ldr	x1, [x0, #16]
   321e8:	ldr	w0, [sp, #44]
   321ec:	lsl	x0, x0, #4
   321f0:	add	x0, x1, x0
   321f4:	ldr	x3, [x0]
   321f8:	ldr	x0, [sp, #24]
   321fc:	ldr	x1, [x0, #16]
   32200:	ldr	w0, [sp, #20]
   32204:	lsl	x0, x0, #4
   32208:	add	x0, x1, x0
   3220c:	ldr	x0, [x0]
   32210:	mov	x1, x0
   32214:	mov	x0, x3
   32218:	blr	x2
   3221c:	cmp	w0, #0x0
   32220:	b.ge	32230 <udev_util_encode_string@@LIBUDEV_183+0x26a00>  // b.tcont
   32224:	ldr	w0, [sp, #44]
   32228:	str	w0, [sp, #36]
   3222c:	b	32238 <udev_util_encode_string@@LIBUDEV_183+0x26a08>
   32230:	ldr	w0, [sp, #20]
   32234:	str	w0, [sp, #36]
   32238:	ldr	x0, [sp, #24]
   3223c:	ldr	w0, [x0, #8]
   32240:	ldr	w1, [sp, #40]
   32244:	cmp	w1, w0
   32248:	b.cs	322a0 <udev_util_encode_string@@LIBUDEV_183+0x26a70>  // b.hs, b.nlast
   3224c:	ldr	x0, [sp, #24]
   32250:	ldr	x2, [x0]
   32254:	ldr	x0, [sp, #24]
   32258:	ldr	x1, [x0, #16]
   3225c:	ldr	w0, [sp, #40]
   32260:	lsl	x0, x0, #4
   32264:	add	x0, x1, x0
   32268:	ldr	x3, [x0]
   3226c:	ldr	x0, [sp, #24]
   32270:	ldr	x1, [x0, #16]
   32274:	ldr	w0, [sp, #36]
   32278:	lsl	x0, x0, #4
   3227c:	add	x0, x1, x0
   32280:	ldr	x0, [x0]
   32284:	mov	x1, x0
   32288:	mov	x0, x3
   3228c:	blr	x2
   32290:	cmp	w0, #0x0
   32294:	b.ge	322a0 <udev_util_encode_string@@LIBUDEV_183+0x26a70>  // b.tcont
   32298:	ldr	w0, [sp, #40]
   3229c:	str	w0, [sp, #36]
   322a0:	ldr	w1, [sp, #36]
   322a4:	ldr	w0, [sp, #20]
   322a8:	cmp	w1, w0
   322ac:	b.eq	322d4 <udev_util_encode_string@@LIBUDEV_183+0x26aa4>  // b.none
   322b0:	ldr	w2, [sp, #36]
   322b4:	ldr	w1, [sp, #20]
   322b8:	ldr	x0, [sp, #24]
   322bc:	bl	31cb4 <udev_util_encode_string@@LIBUDEV_183+0x26484>
   322c0:	ldr	w0, [sp, #36]
   322c4:	str	w0, [sp, #20]
   322c8:	b	321a8 <udev_util_encode_string@@LIBUDEV_183+0x26978>
   322cc:	nop
   322d0:	b	322d8 <udev_util_encode_string@@LIBUDEV_183+0x26aa8>
   322d4:	nop
   322d8:	ldr	w0, [sp, #20]
   322dc:	ldp	x29, x30, [sp], #48
   322e0:	ret
   322e4:	stp	x29, x30, [sp, #-48]!
   322e8:	mov	x29, sp
   322ec:	str	x0, [sp, #24]
   322f0:	str	x1, [sp, #16]
   322f4:	ldr	x0, [sp, #24]
   322f8:	cmp	x0, #0x0
   322fc:	cset	w0, eq  // eq = none
   32300:	and	w0, w0, #0xff
   32304:	and	x0, x0, #0xff
   32308:	cmp	x0, #0x0
   3230c:	b.eq	32338 <udev_util_encode_string@@LIBUDEV_183+0x26b08>  // b.none
   32310:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32314:	add	x1, x0, #0xdb3
   32318:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3231c:	add	x4, x0, #0xe98
   32320:	mov	w3, #0xb3                  	// #179
   32324:	mov	x2, x1
   32328:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3232c:	add	x1, x0, #0xdc8
   32330:	mov	w0, #0x0                   	// #0
   32334:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   32338:	ldr	x0, [sp, #16]
   3233c:	cmp	x0, #0x0
   32340:	cset	w0, eq  // eq = none
   32344:	and	w0, w0, #0xff
   32348:	and	x0, x0, #0xff
   3234c:	cmp	x0, #0x0
   32350:	b.eq	3237c <udev_util_encode_string@@LIBUDEV_183+0x26b4c>  // b.none
   32354:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32358:	add	x1, x0, #0xdb3
   3235c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32360:	add	x4, x0, #0xe98
   32364:	mov	w3, #0xb4                  	// #180
   32368:	mov	x2, x1
   3236c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32370:	add	x1, x0, #0xe68
   32374:	mov	w0, #0x0                   	// #0
   32378:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3237c:	ldr	x0, [sp, #24]
   32380:	ldr	x1, [x0, #16]
   32384:	ldr	x0, [sp, #24]
   32388:	ldr	w0, [x0, #8]
   3238c:	mov	w0, w0
   32390:	lsl	x0, x0, #4
   32394:	sub	x0, x0, #0x10
   32398:	add	x0, x1, x0
   3239c:	str	x0, [sp, #40]
   323a0:	ldr	x1, [sp, #16]
   323a4:	ldr	x0, [sp, #40]
   323a8:	cmp	x1, x0
   323ac:	b.ne	323c8 <udev_util_encode_string@@LIBUDEV_183+0x26b98>  // b.any
   323b0:	ldr	x0, [sp, #24]
   323b4:	ldr	w0, [x0, #8]
   323b8:	sub	w1, w0, #0x1
   323bc:	ldr	x0, [sp, #24]
   323c0:	str	w1, [x0, #8]
   323c4:	b	32450 <udev_util_encode_string@@LIBUDEV_183+0x26c20>
   323c8:	ldr	x0, [sp, #24]
   323cc:	ldr	x0, [x0, #16]
   323d0:	ldr	x1, [sp, #16]
   323d4:	sub	x0, x1, x0
   323d8:	asr	x0, x0, #4
   323dc:	str	w0, [sp, #36]
   323e0:	ldr	x0, [sp, #40]
   323e4:	ldr	x1, [x0]
   323e8:	ldr	x0, [sp, #16]
   323ec:	str	x1, [x0]
   323f0:	ldr	x0, [sp, #40]
   323f4:	ldr	x1, [x0, #8]
   323f8:	ldr	x0, [sp, #16]
   323fc:	str	x1, [x0, #8]
   32400:	ldr	x0, [sp, #16]
   32404:	ldr	x0, [x0, #8]
   32408:	cmp	x0, #0x0
   3240c:	b.eq	32420 <udev_util_encode_string@@LIBUDEV_183+0x26bf0>  // b.none
   32410:	ldr	x0, [sp, #16]
   32414:	ldr	x0, [x0, #8]
   32418:	ldr	w1, [sp, #36]
   3241c:	str	w1, [x0]
   32420:	ldr	x0, [sp, #24]
   32424:	ldr	w0, [x0, #8]
   32428:	sub	w1, w0, #0x1
   3242c:	ldr	x0, [sp, #24]
   32430:	str	w1, [x0, #8]
   32434:	ldr	w1, [sp, #36]
   32438:	ldr	x0, [sp, #24]
   3243c:	bl	32154 <udev_util_encode_string@@LIBUDEV_183+0x26924>
   32440:	str	w0, [sp, #36]
   32444:	ldr	w1, [sp, #36]
   32448:	ldr	x0, [sp, #24]
   3244c:	bl	32020 <udev_util_encode_string@@LIBUDEV_183+0x267f0>
   32450:	nop
   32454:	ldp	x29, x30, [sp], #48
   32458:	ret
   3245c:	stp	x29, x30, [sp, #-64]!
   32460:	mov	x29, sp
   32464:	str	x0, [sp, #40]
   32468:	str	x1, [sp, #32]
   3246c:	str	x2, [sp, #24]
   32470:	ldr	x0, [sp, #40]
   32474:	cmp	x0, #0x0
   32478:	cset	w0, eq  // eq = none
   3247c:	and	w0, w0, #0xff
   32480:	and	x0, x0, #0xff
   32484:	cmp	x0, #0x0
   32488:	b.eq	324b4 <udev_util_encode_string@@LIBUDEV_183+0x26c84>  // b.none
   3248c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32490:	add	x1, x0, #0xdb3
   32494:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32498:	add	x4, x0, #0xea8
   3249c:	mov	w3, #0xd1                  	// #209
   324a0:	mov	x2, x1
   324a4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   324a8:	add	x1, x0, #0xdc8
   324ac:	mov	w0, #0x0                   	// #0
   324b0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   324b4:	ldr	x0, [sp, #40]
   324b8:	ldr	w0, [x0, #8]
   324bc:	cmp	w0, #0x0
   324c0:	b.ne	324cc <udev_util_encode_string@@LIBUDEV_183+0x26c9c>  // b.any
   324c4:	mov	x0, #0x0                   	// #0
   324c8:	b	325b0 <udev_util_encode_string@@LIBUDEV_183+0x26d80>
   324cc:	ldr	x0, [sp, #24]
   324d0:	cmp	x0, #0x0
   324d4:	b.eq	3254c <udev_util_encode_string@@LIBUDEV_183+0x26d1c>  // b.none
   324d8:	ldr	x0, [sp, #24]
   324dc:	ldr	w0, [x0]
   324e0:	cmn	w0, #0x1
   324e4:	b.eq	32500 <udev_util_encode_string@@LIBUDEV_183+0x26cd0>  // b.none
   324e8:	ldr	x0, [sp, #24]
   324ec:	ldr	w1, [x0]
   324f0:	ldr	x0, [sp, #40]
   324f4:	ldr	w0, [x0, #8]
   324f8:	cmp	w1, w0
   324fc:	b.cc	32508 <udev_util_encode_string@@LIBUDEV_183+0x26cd8>  // b.lo, b.ul, b.last
   32500:	mov	x0, #0x0                   	// #0
   32504:	b	325b0 <udev_util_encode_string@@LIBUDEV_183+0x26d80>
   32508:	ldr	x0, [sp, #40]
   3250c:	ldr	x1, [x0, #16]
   32510:	ldr	x0, [sp, #24]
   32514:	ldr	w0, [x0]
   32518:	mov	w0, w0
   3251c:	lsl	x0, x0, #4
   32520:	add	x0, x1, x0
   32524:	str	x0, [sp, #56]
   32528:	ldr	x0, [sp, #56]
   3252c:	ldr	x0, [x0]
   32530:	ldr	x1, [sp, #32]
   32534:	cmp	x1, x0
   32538:	b.eq	32544 <udev_util_encode_string@@LIBUDEV_183+0x26d14>  // b.none
   3253c:	mov	x0, #0x0                   	// #0
   32540:	b	325b0 <udev_util_encode_string@@LIBUDEV_183+0x26d80>
   32544:	ldr	x0, [sp, #56]
   32548:	b	325b0 <udev_util_encode_string@@LIBUDEV_183+0x26d80>
   3254c:	ldr	x0, [sp, #40]
   32550:	ldr	x0, [x0, #16]
   32554:	str	x0, [sp, #56]
   32558:	b	32584 <udev_util_encode_string@@LIBUDEV_183+0x26d54>
   3255c:	ldr	x0, [sp, #56]
   32560:	ldr	x0, [x0]
   32564:	ldr	x1, [sp, #32]
   32568:	cmp	x1, x0
   3256c:	b.ne	32578 <udev_util_encode_string@@LIBUDEV_183+0x26d48>  // b.any
   32570:	ldr	x0, [sp, #56]
   32574:	b	325b0 <udev_util_encode_string@@LIBUDEV_183+0x26d80>
   32578:	ldr	x0, [sp, #56]
   3257c:	add	x0, x0, #0x10
   32580:	str	x0, [sp, #56]
   32584:	ldr	x0, [sp, #40]
   32588:	ldr	x1, [x0, #16]
   3258c:	ldr	x0, [sp, #40]
   32590:	ldr	w0, [x0, #8]
   32594:	mov	w0, w0
   32598:	lsl	x0, x0, #4
   3259c:	add	x0, x1, x0
   325a0:	ldr	x1, [sp, #56]
   325a4:	cmp	x1, x0
   325a8:	b.cc	3255c <udev_util_encode_string@@LIBUDEV_183+0x26d2c>  // b.lo, b.ul, b.last
   325ac:	mov	x0, #0x0                   	// #0
   325b0:	ldp	x29, x30, [sp], #64
   325b4:	ret
   325b8:	stp	x29, x30, [sp, #-64]!
   325bc:	mov	x29, sp
   325c0:	str	x0, [sp, #40]
   325c4:	str	x1, [sp, #32]
   325c8:	str	x2, [sp, #24]
   325cc:	ldr	x0, [sp, #40]
   325d0:	cmp	x0, #0x0
   325d4:	b.ne	325e0 <udev_util_encode_string@@LIBUDEV_183+0x26db0>  // b.any
   325d8:	mov	w0, #0x0                   	// #0
   325dc:	b	32618 <udev_util_encode_string@@LIBUDEV_183+0x26de8>
   325e0:	ldr	x2, [sp, #24]
   325e4:	ldr	x1, [sp, #32]
   325e8:	ldr	x0, [sp, #40]
   325ec:	bl	3245c <udev_util_encode_string@@LIBUDEV_183+0x26c2c>
   325f0:	str	x0, [sp, #56]
   325f4:	ldr	x0, [sp, #56]
   325f8:	cmp	x0, #0x0
   325fc:	b.ne	32608 <udev_util_encode_string@@LIBUDEV_183+0x26dd8>  // b.any
   32600:	mov	w0, #0x0                   	// #0
   32604:	b	32618 <udev_util_encode_string@@LIBUDEV_183+0x26de8>
   32608:	ldr	x1, [sp, #56]
   3260c:	ldr	x0, [sp, #40]
   32610:	bl	322e4 <udev_util_encode_string@@LIBUDEV_183+0x26ab4>
   32614:	mov	w0, #0x1                   	// #1
   32618:	ldp	x29, x30, [sp], #64
   3261c:	ret
   32620:	stp	x29, x30, [sp, #-16]!
   32624:	mov	x29, sp
   32628:	mov	x0, #0xac                  	// #172
   3262c:	bl	5800 <syscall@plt>
   32630:	ldp	x29, x30, [sp], #16
   32634:	ret
   32638:	stp	x29, x30, [sp, #-32]!
   3263c:	mov	x29, sp
   32640:	str	x19, [sp, #16]
   32644:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   32648:	ldr	x1, [x0, #3928]
   3264c:	add	x0, x0, #0xf58
   32650:	blr	x1
   32654:	mrs	x1, tpidr_el0
   32658:	add	x0, x1, x0
   3265c:	ldr	w0, [x0]
   32660:	cmp	w0, #0x0
   32664:	cset	w0, eq  // eq = none
   32668:	and	w0, w0, #0xff
   3266c:	and	x0, x0, #0xff
   32670:	cmp	x0, #0x0
   32674:	b.eq	326b4 <udev_util_encode_string@@LIBUDEV_183+0x26e84>  // b.none
   32678:	bl	326fc <udev_util_encode_string@@LIBUDEV_183+0x26ecc>
   3267c:	mov	w19, w0
   32680:	bl	50a0 <gettid@plt>
   32684:	cmp	w19, w0
   32688:	b.ne	32694 <udev_util_encode_string@@LIBUDEV_183+0x26e64>  // b.any
   3268c:	mov	w1, #0x1                   	// #1
   32690:	b	32698 <udev_util_encode_string@@LIBUDEV_183+0x26e68>
   32694:	mov	w1, #0xffffffff            	// #-1
   32698:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3269c:	ldr	x2, [x0, #3928]
   326a0:	add	x0, x0, #0xf58
   326a4:	blr	x2
   326a8:	mrs	x2, tpidr_el0
   326ac:	add	x0, x2, x0
   326b0:	str	w1, [x0]
   326b4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   326b8:	ldr	x1, [x0, #3928]
   326bc:	add	x0, x0, #0xf58
   326c0:	blr	x1
   326c4:	mrs	x1, tpidr_el0
   326c8:	add	x0, x1, x0
   326cc:	ldr	w0, [x0]
   326d0:	cmp	w0, #0x0
   326d4:	cset	w0, gt
   326d8:	and	w0, w0, #0xff
   326dc:	ldr	x19, [sp, #16]
   326e0:	ldp	x29, x30, [sp], #32
   326e4:	ret
   326e8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   326ec:	add	x0, x0, #0x930
   326f0:	str	wzr, [x0]
   326f4:	nop
   326f8:	ret
   326fc:	stp	x29, x30, [sp, #-32]!
   32700:	mov	x29, sp
   32704:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32708:	add	x1, x0, #0x930
   3270c:	mov	w2, #0xffffffff            	// #-1
   32710:	ldxr	w0, [x1]
   32714:	cbnz	w0, 32720 <udev_util_encode_string@@LIBUDEV_183+0x26ef0>
   32718:	stlxr	w3, w2, [x1]
   3271c:	cbnz	w3, 32710 <udev_util_encode_string@@LIBUDEV_183+0x26ee0>
   32720:	cmp	w0, #0x0
   32724:	dmb	ish
   32728:	str	w0, [sp, #24]
   3272c:	ldr	w0, [sp, #24]
   32730:	cmn	w0, #0x1
   32734:	b.eq	327d0 <udev_util_encode_string@@LIBUDEV_183+0x26fa0>  // b.none
   32738:	ldr	w0, [sp, #24]
   3273c:	cmp	w0, #0x0
   32740:	b.ne	327d8 <udev_util_encode_string@@LIBUDEV_183+0x26fa8>  // b.any
   32744:	bl	32620 <udev_util_encode_string@@LIBUDEV_183+0x26df0>
   32748:	str	w0, [sp, #28]
   3274c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32750:	add	x0, x0, #0x934
   32754:	ldrb	w0, [x0]
   32758:	eor	w0, w0, #0x1
   3275c:	and	w0, w0, #0xff
   32760:	cmp	w0, #0x0
   32764:	b.eq	327b8 <udev_util_encode_string@@LIBUDEV_183+0x26f88>  // b.none
   32768:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3276c:	ldr	x0, [x0, #4024]
   32770:	ldr	x0, [x0]
   32774:	mov	x3, x0
   32778:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3277c:	ldr	x2, [x0, #4080]
   32780:	mov	x1, #0x0                   	// #0
   32784:	mov	x0, #0x0                   	// #0
   32788:	bl	5170 <__register_atfork@plt>
   3278c:	cmp	w0, #0x0
   32790:	b.eq	327a8 <udev_util_encode_string@@LIBUDEV_183+0x26f78>  // b.none
   32794:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32798:	add	x0, x0, #0x930
   3279c:	str	wzr, [x0]
   327a0:	ldr	w0, [sp, #28]
   327a4:	b	327dc <udev_util_encode_string@@LIBUDEV_183+0x26fac>
   327a8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   327ac:	add	x0, x0, #0x934
   327b0:	mov	w1, #0x1                   	// #1
   327b4:	strb	w1, [x0]
   327b8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   327bc:	add	x0, x0, #0x930
   327c0:	ldr	w1, [sp, #28]
   327c4:	str	w1, [x0]
   327c8:	ldr	w0, [sp, #28]
   327cc:	b	327dc <udev_util_encode_string@@LIBUDEV_183+0x26fac>
   327d0:	bl	32620 <udev_util_encode_string@@LIBUDEV_183+0x26df0>
   327d4:	b	327dc <udev_util_encode_string@@LIBUDEV_183+0x26fac>
   327d8:	ldr	w0, [sp, #24]
   327dc:	ldp	x29, x30, [sp], #32
   327e0:	ret
   327e4:	stp	x29, x30, [sp, #-32]!
   327e8:	mov	x29, sp
   327ec:	str	x0, [sp, #24]
   327f0:	ldr	x0, [sp, #24]
   327f4:	ldr	w0, [x0]
   327f8:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   327fc:	nop
   32800:	ldp	x29, x30, [sp], #32
   32804:	ret
   32808:	sub	sp, sp, #0x10
   3280c:	str	x0, [sp, #8]
   32810:	mov	w0, #0xffffffa1            	// #-95
   32814:	add	sp, sp, #0x10
   32818:	ret
   3281c:	stp	x29, x30, [sp, #-128]!
   32820:	mov	x29, sp
   32824:	str	x19, [sp, #16]
   32828:	str	x0, [sp, #56]
   3282c:	str	x1, [sp, #48]
   32830:	str	w2, [sp, #44]
   32834:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   32838:	ldr	x0, [x0, #4016]
   3283c:	ldr	x1, [x0]
   32840:	str	x1, [sp, #120]
   32844:	mov	x1, #0x0                   	// #0
   32848:	mov	w0, #0xffffffff            	// #-1
   3284c:	str	w0, [sp, #80]
   32850:	strb	wzr, [sp, #79]
   32854:	ldr	x0, [sp, #48]
   32858:	cmp	x0, #0x0
   3285c:	b.ne	32868 <udev_util_encode_string@@LIBUDEV_183+0x27038>  // b.any
   32860:	mov	w19, #0x0                   	// #0
   32864:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32868:	ldr	w0, [sp, #44]
   3286c:	and	w0, w0, #0x8
   32870:	cmp	w0, #0x0
   32874:	b.eq	32938 <udev_util_encode_string@@LIBUDEV_183+0x27108>  // b.none
   32878:	add	x0, sp, #0x58
   3287c:	bl	32808 <udev_util_encode_string@@LIBUDEV_183+0x26fd8>
   32880:	cmp	w0, #0x0
   32884:	b.ge	328b8 <udev_util_encode_string@@LIBUDEV_183+0x27088>  // b.tcont
   32888:	ldrb	w0, [sp, #79]
   3288c:	cmp	w0, #0x0
   32890:	b.eq	32934 <udev_util_encode_string@@LIBUDEV_183+0x27104>  // b.none
   32894:	ldr	w0, [sp, #44]
   32898:	and	w0, w0, #0x1
   3289c:	cmp	w0, #0x0
   328a0:	b.eq	32934 <udev_util_encode_string@@LIBUDEV_183+0x27104>  // b.none
   328a4:	ldr	x1, [sp, #48]
   328a8:	ldr	x0, [sp, #56]
   328ac:	bl	32cb8 <udev_util_encode_string@@LIBUDEV_183+0x27488>
   328b0:	mov	w19, #0x0                   	// #0
   328b4:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   328b8:	mov	x0, #0x8                   	// #8
   328bc:	str	x0, [sp, #96]
   328c0:	ldr	x0, [sp, #48]
   328c4:	str	x0, [sp, #104]
   328c8:	ldr	x0, [sp, #96]
   328cc:	ldr	x2, [sp, #104]
   328d0:	ldr	x1, [sp, #104]
   328d4:	cmp	x2, x0
   328d8:	csel	x0, x1, x0, ls  // ls = plast
   328dc:	str	x0, [sp, #112]
   328e0:	add	x0, sp, #0x58
   328e4:	ldr	x2, [sp, #112]
   328e8:	mov	x1, x0
   328ec:	ldr	x0, [sp, #56]
   328f0:	bl	5010 <memcpy@plt>
   328f4:	ldr	x1, [sp, #56]
   328f8:	ldr	x0, [sp, #112]
   328fc:	add	x0, x1, x0
   32900:	str	x0, [sp, #56]
   32904:	ldr	x1, [sp, #48]
   32908:	ldr	x0, [sp, #112]
   3290c:	sub	x0, x1, x0
   32910:	str	x0, [sp, #48]
   32914:	ldr	x0, [sp, #48]
   32918:	cmp	x0, #0x0
   3291c:	b.ne	32928 <udev_util_encode_string@@LIBUDEV_183+0x270f8>  // b.any
   32920:	mov	w19, #0x0                   	// #0
   32924:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32928:	mov	w0, #0x1                   	// #1
   3292c:	strb	w0, [sp, #79]
   32930:	b	32878 <udev_util_encode_string@@LIBUDEV_183+0x27048>
   32934:	nop
   32938:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   3293c:	add	x0, x0, #0xe0
   32940:	ldr	w0, [x0]
   32944:	cmp	w0, #0x0
   32948:	b.eq	32b18 <udev_util_encode_string@@LIBUDEV_183+0x272e8>  // b.none
   3294c:	ldr	w0, [sp, #44]
   32950:	and	w0, w0, #0x2
   32954:	cmp	w0, #0x0
   32958:	cset	w0, eq  // eq = none
   3295c:	and	w0, w0, #0xff
   32960:	mov	w2, w0
   32964:	ldr	x1, [sp, #48]
   32968:	ldr	x0, [sp, #56]
   3296c:	bl	57a0 <getrandom@plt>
   32970:	str	w0, [sp, #84]
   32974:	ldr	w0, [sp, #84]
   32978:	cmp	w0, #0x0
   3297c:	b.le	32a50 <udev_util_encode_string@@LIBUDEV_183+0x27220>
   32980:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32984:	add	x0, x0, #0xe0
   32988:	mov	w1, #0x1                   	// #1
   3298c:	str	w1, [x0]
   32990:	ldrsw	x0, [sp, #84]
   32994:	ldr	x1, [sp, #48]
   32998:	cmp	x1, x0
   3299c:	b.ne	329a8 <udev_util_encode_string@@LIBUDEV_183+0x27178>  // b.any
   329a0:	mov	w19, #0x0                   	// #0
   329a4:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   329a8:	ldrsw	x0, [sp, #84]
   329ac:	ldr	x1, [sp, #48]
   329b0:	cmp	x1, x0
   329b4:	cset	w0, ls  // ls = plast
   329b8:	and	w0, w0, #0xff
   329bc:	and	x0, x0, #0xff
   329c0:	cmp	x0, #0x0
   329c4:	b.eq	329f0 <udev_util_encode_string@@LIBUDEV_183+0x271c0>  // b.none
   329c8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   329cc:	add	x1, x0, #0xebb
   329d0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   329d4:	add	x4, x0, #0xf70
   329d8:	mov	w3, #0xd6                  	// #214
   329dc:	mov	x2, x1
   329e0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   329e4:	add	x1, x0, #0xed8
   329e8:	mov	w0, #0x0                   	// #0
   329ec:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   329f0:	ldrsw	x0, [sp, #84]
   329f4:	ldr	x1, [sp, #56]
   329f8:	add	x0, x1, x0
   329fc:	str	x0, [sp, #56]
   32a00:	ldrsw	x0, [sp, #84]
   32a04:	ldr	x1, [sp, #48]
   32a08:	sub	x0, x1, x0
   32a0c:	str	x0, [sp, #48]
   32a10:	ldr	w0, [sp, #44]
   32a14:	and	w0, w0, #0x1
   32a18:	cmp	w0, #0x0
   32a1c:	b.eq	32a34 <udev_util_encode_string@@LIBUDEV_183+0x27204>  // b.none
   32a20:	ldr	x1, [sp, #48]
   32a24:	ldr	x0, [sp, #56]
   32a28:	bl	32cb8 <udev_util_encode_string@@LIBUDEV_183+0x27488>
   32a2c:	mov	w19, #0x0                   	// #0
   32a30:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32a34:	mov	w0, #0x1                   	// #1
   32a38:	strb	w0, [sp, #79]
   32a3c:	ldr	w0, [sp, #44]
   32a40:	and	w0, w0, #0x2
   32a44:	cmp	w0, #0x0
   32a48:	b.eq	32b0c <udev_util_encode_string@@LIBUDEV_183+0x272dc>  // b.none
   32a4c:	b	3294c <udev_util_encode_string@@LIBUDEV_183+0x2711c>
   32a50:	ldr	w0, [sp, #84]
   32a54:	cmp	w0, #0x0
   32a58:	b.ne	32a74 <udev_util_encode_string@@LIBUDEV_183+0x27244>  // b.any
   32a5c:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32a60:	add	x0, x0, #0xe0
   32a64:	mov	w1, #0x1                   	// #1
   32a68:	str	w1, [x0]
   32a6c:	mov	w19, #0xfffffffb            	// #-5
   32a70:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32a74:	bl	57d0 <__errno_location@plt>
   32a78:	ldr	w0, [x0]
   32a7c:	cmp	w0, #0x26
   32a80:	b.ne	32a94 <udev_util_encode_string@@LIBUDEV_183+0x27264>  // b.any
   32a84:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32a88:	add	x0, x0, #0xe0
   32a8c:	str	wzr, [x0]
   32a90:	b	32b18 <udev_util_encode_string@@LIBUDEV_183+0x272e8>
   32a94:	bl	57d0 <__errno_location@plt>
   32a98:	ldr	w0, [x0]
   32a9c:	cmp	w0, #0xb
   32aa0:	b.ne	32afc <udev_util_encode_string@@LIBUDEV_183+0x272cc>  // b.any
   32aa4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32aa8:	add	x0, x0, #0xe0
   32aac:	mov	w1, #0x1                   	// #1
   32ab0:	str	w1, [x0]
   32ab4:	ldrb	w0, [sp, #79]
   32ab8:	cmp	w0, #0x0
   32abc:	b.eq	32ae4 <udev_util_encode_string@@LIBUDEV_183+0x272b4>  // b.none
   32ac0:	ldr	w0, [sp, #44]
   32ac4:	and	w0, w0, #0x1
   32ac8:	cmp	w0, #0x0
   32acc:	b.eq	32ae4 <udev_util_encode_string@@LIBUDEV_183+0x272b4>  // b.none
   32ad0:	ldr	x1, [sp, #48]
   32ad4:	ldr	x0, [sp, #56]
   32ad8:	bl	32cb8 <udev_util_encode_string@@LIBUDEV_183+0x27488>
   32adc:	mov	w19, #0x0                   	// #0
   32ae0:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32ae4:	ldr	w0, [sp, #44]
   32ae8:	and	w0, w0, #0x4
   32aec:	cmp	w0, #0x0
   32af0:	b.eq	32b14 <udev_util_encode_string@@LIBUDEV_183+0x272e4>  // b.none
   32af4:	mov	w19, #0xffffffc3            	// #-61
   32af8:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32afc:	bl	57d0 <__errno_location@plt>
   32b00:	ldr	w0, [x0]
   32b04:	neg	w19, w0
   32b08:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32b0c:	nop
   32b10:	b	32b18 <udev_util_encode_string@@LIBUDEV_183+0x272e8>
   32b14:	nop
   32b18:	mov	w1, #0x100                 	// #256
   32b1c:	movk	w1, #0x8, lsl #16
   32b20:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32b24:	add	x0, x0, #0xee8
   32b28:	bl	56c0 <open64@plt>
   32b2c:	str	w0, [sp, #80]
   32b30:	ldr	w0, [sp, #80]
   32b34:	cmp	w0, #0x0
   32b38:	b.ge	32b64 <udev_util_encode_string@@LIBUDEV_183+0x27334>  // b.tcont
   32b3c:	bl	57d0 <__errno_location@plt>
   32b40:	ldr	w0, [x0]
   32b44:	cmp	w0, #0x2
   32b48:	b.eq	32b5c <udev_util_encode_string@@LIBUDEV_183+0x2732c>  // b.none
   32b4c:	bl	57d0 <__errno_location@plt>
   32b50:	ldr	w0, [x0]
   32b54:	neg	w19, w0
   32b58:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32b5c:	mov	w19, #0xffffffda            	// #-38
   32b60:	b	32b7c <udev_util_encode_string@@LIBUDEV_183+0x2734c>
   32b64:	ldr	w0, [sp, #80]
   32b68:	mov	w3, #0x1                   	// #1
   32b6c:	ldr	x2, [sp, #48]
   32b70:	ldr	x1, [sp, #56]
   32b74:	bl	2b080 <udev_util_encode_string@@LIBUDEV_183+0x1f850>
   32b78:	mov	w19, w0
   32b7c:	add	x0, sp, #0x50
   32b80:	bl	327e4 <udev_util_encode_string@@LIBUDEV_183+0x26fb4>
   32b84:	mov	w1, w19
   32b88:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   32b8c:	ldr	x0, [x0, #4016]
   32b90:	ldr	x2, [sp, #120]
   32b94:	ldr	x0, [x0]
   32b98:	eor	x0, x2, x0
   32b9c:	cmp	x0, #0x0
   32ba0:	b.eq	32ba8 <udev_util_encode_string@@LIBUDEV_183+0x27378>  // b.none
   32ba4:	bl	5390 <__stack_chk_fail@plt>
   32ba8:	mov	w0, w1
   32bac:	ldr	x19, [sp, #16]
   32bb0:	ldp	x29, x30, [sp], #128
   32bb4:	ret
   32bb8:	stp	x29, x30, [sp, #-48]!
   32bbc:	mov	x29, sp
   32bc0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   32bc4:	ldr	x0, [x0, #4016]
   32bc8:	ldr	x1, [x0]
   32bcc:	str	x1, [sp, #40]
   32bd0:	mov	x1, #0x0                   	// #0
   32bd4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32bd8:	add	x0, x0, #0x935
   32bdc:	ldrb	w0, [x0]
   32be0:	cmp	w0, #0x0
   32be4:	b.ne	32c8c <udev_util_encode_string@@LIBUDEV_183+0x2745c>  // b.any
   32be8:	mov	x0, #0x19                  	// #25
   32bec:	bl	5180 <getauxval@plt>
   32bf0:	str	x0, [sp, #32]
   32bf4:	ldr	x0, [sp, #32]
   32bf8:	cmp	x0, #0x0
   32bfc:	b.eq	32c1c <udev_util_encode_string@@LIBUDEV_183+0x273ec>  // b.none
   32c00:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32c04:	add	x2, x0, #0xf88
   32c08:	mov	x1, #0x10                  	// #16
   32c0c:	ldr	x0, [sp, #32]
   32c10:	bl	337fc <udev_util_encode_string@@LIBUDEV_183+0x27fcc>
   32c14:	str	w0, [sp, #20]
   32c18:	b	32c20 <udev_util_encode_string@@LIBUDEV_183+0x273f0>
   32c1c:	str	wzr, [sp, #20]
   32c20:	mov	w0, #0x0                   	// #0
   32c24:	bl	353f0 <udev_util_encode_string@@LIBUDEV_183+0x29bc0>
   32c28:	mov	w1, w0
   32c2c:	ldr	w0, [sp, #20]
   32c30:	eor	w0, w0, w1
   32c34:	str	w0, [sp, #20]
   32c38:	bl	50a0 <gettid@plt>
   32c3c:	mov	w1, w0
   32c40:	ldr	w0, [sp, #20]
   32c44:	eor	w0, w0, w1
   32c48:	str	w0, [sp, #20]
   32c4c:	add	x0, sp, #0x18
   32c50:	bl	32808 <udev_util_encode_string@@LIBUDEV_183+0x26fd8>
   32c54:	cmp	w0, #0x0
   32c58:	b.lt	32c70 <udev_util_encode_string@@LIBUDEV_183+0x27440>  // b.tstop
   32c5c:	ldr	x0, [sp, #24]
   32c60:	mov	w1, w0
   32c64:	ldr	w0, [sp, #20]
   32c68:	eor	w0, w0, w1
   32c6c:	str	w0, [sp, #20]
   32c70:	ldr	w0, [sp, #20]
   32c74:	bl	56d0 <srand@plt>
   32c78:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   32c7c:	add	x0, x0, #0x935
   32c80:	mov	w1, #0x1                   	// #1
   32c84:	strb	w1, [x0]
   32c88:	b	32c90 <udev_util_encode_string@@LIBUDEV_183+0x27460>
   32c8c:	nop
   32c90:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   32c94:	ldr	x0, [x0, #4016]
   32c98:	ldr	x1, [sp, #40]
   32c9c:	ldr	x0, [x0]
   32ca0:	eor	x0, x1, x0
   32ca4:	cmp	x0, #0x0
   32ca8:	b.eq	32cb0 <udev_util_encode_string@@LIBUDEV_183+0x27480>  // b.none
   32cac:	bl	5390 <__stack_chk_fail@plt>
   32cb0:	ldp	x29, x30, [sp], #48
   32cb4:	ret
   32cb8:	stp	x29, x30, [sp, #-48]!
   32cbc:	mov	x29, sp
   32cc0:	str	x0, [sp, #24]
   32cc4:	str	x1, [sp, #16]
   32cc8:	bl	32bb8 <udev_util_encode_string@@LIBUDEV_183+0x27388>
   32ccc:	ldr	x0, [sp, #24]
   32cd0:	str	x0, [sp, #40]
   32cd4:	b	32d6c <udev_util_encode_string@@LIBUDEV_183+0x2753c>
   32cd8:	bl	5360 <rand@plt>
   32cdc:	str	w0, [sp, #36]
   32ce0:	ldr	x1, [sp, #40]
   32ce4:	ldr	x0, [sp, #24]
   32ce8:	sub	x0, x1, x0
   32cec:	add	x0, x0, #0x2
   32cf0:	mov	x1, x0
   32cf4:	ldr	x0, [sp, #16]
   32cf8:	cmp	x0, x1
   32cfc:	b.ls	32d18 <udev_util_encode_string@@LIBUDEV_183+0x274e8>  // b.plast
   32d00:	ldr	w0, [sp, #36]
   32d04:	lsr	w1, w0, #16
   32d08:	ldr	x0, [sp, #40]
   32d0c:	add	x0, x0, #0x2
   32d10:	and	w1, w1, #0xff
   32d14:	strb	w1, [x0]
   32d18:	ldr	x1, [sp, #40]
   32d1c:	ldr	x0, [sp, #24]
   32d20:	sub	x0, x1, x0
   32d24:	add	x0, x0, #0x1
   32d28:	mov	x1, x0
   32d2c:	ldr	x0, [sp, #16]
   32d30:	cmp	x0, x1
   32d34:	b.ls	32d50 <udev_util_encode_string@@LIBUDEV_183+0x27520>  // b.plast
   32d38:	ldr	w0, [sp, #36]
   32d3c:	lsr	w1, w0, #8
   32d40:	ldr	x0, [sp, #40]
   32d44:	add	x0, x0, #0x1
   32d48:	and	w1, w1, #0xff
   32d4c:	strb	w1, [x0]
   32d50:	ldr	w0, [sp, #36]
   32d54:	and	w1, w0, #0xff
   32d58:	ldr	x0, [sp, #40]
   32d5c:	strb	w1, [x0]
   32d60:	ldr	x0, [sp, #40]
   32d64:	add	x0, x0, #0x3
   32d68:	str	x0, [sp, #40]
   32d6c:	ldr	x1, [sp, #24]
   32d70:	ldr	x0, [sp, #16]
   32d74:	add	x0, x1, x0
   32d78:	ldr	x1, [sp, #40]
   32d7c:	cmp	x1, x0
   32d80:	b.cc	32cd8 <udev_util_encode_string@@LIBUDEV_183+0x274a8>  // b.lo, b.ul, b.last
   32d84:	nop
   32d88:	nop
   32d8c:	ldp	x29, x30, [sp], #48
   32d90:	ret
   32d94:	stp	x29, x30, [sp, #-32]!
   32d98:	mov	x29, sp
   32d9c:	str	x0, [sp, #24]
   32da0:	str	x1, [sp, #16]
   32da4:	mov	w2, #0xd                   	// #13
   32da8:	ldr	x1, [sp, #16]
   32dac:	ldr	x0, [sp, #24]
   32db0:	bl	3281c <udev_util_encode_string@@LIBUDEV_183+0x26fec>
   32db4:	cmp	w0, #0x0
   32db8:	b.ge	32dcc <udev_util_encode_string@@LIBUDEV_183+0x2759c>  // b.tcont
   32dbc:	ldr	x1, [sp, #16]
   32dc0:	ldr	x0, [sp, #24]
   32dc4:	bl	32cb8 <udev_util_encode_string@@LIBUDEV_183+0x27488>
   32dc8:	b	32dd0 <udev_util_encode_string@@LIBUDEV_183+0x275a0>
   32dcc:	nop
   32dd0:	ldp	x29, x30, [sp], #32
   32dd4:	ret
   32dd8:	stp	x29, x30, [sp, #-48]!
   32ddc:	mov	x29, sp
   32de0:	str	x0, [sp, #24]
   32de4:	ldr	x0, [sp, #24]
   32de8:	cmp	x0, #0x0
   32dec:	cset	w0, eq  // eq = none
   32df0:	and	w0, w0, #0xff
   32df4:	and	x0, x0, #0xff
   32df8:	cmp	x0, #0x0
   32dfc:	b.eq	32e28 <udev_util_encode_string@@LIBUDEV_183+0x275f8>  // b.none
   32e00:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32e04:	add	x1, x0, #0xf9b
   32e08:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32e0c:	add	x4, x0, #0xfc0
   32e10:	mov	w3, #0xe                   	// #14
   32e14:	mov	x2, x1
   32e18:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32e1c:	add	x1, x0, #0xfb8
   32e20:	mov	w0, #0x0                   	// #0
   32e24:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   32e28:	ldr	x0, [sp, #24]
   32e2c:	ldr	x0, [x0]
   32e30:	cmp	x0, #0x0
   32e34:	b.eq	32e48 <udev_util_encode_string@@LIBUDEV_183+0x27618>  // b.none
   32e38:	ldr	x0, [sp, #24]
   32e3c:	ldr	w0, [x0, #8]
   32e40:	cmp	w0, #0x0
   32e44:	b.ne	32e50 <udev_util_encode_string@@LIBUDEV_183+0x27620>  // b.any
   32e48:	mov	w0, #0x1                   	// #1
   32e4c:	b	32ee0 <udev_util_encode_string@@LIBUDEV_183+0x276b0>
   32e50:	mov	w0, #0x1                   	// #1
   32e54:	bl	353f0 <udev_util_encode_string@@LIBUDEV_183+0x29bc0>
   32e58:	str	x0, [sp, #40]
   32e5c:	ldr	x0, [sp, #24]
   32e60:	ldr	x0, [x0, #16]
   32e64:	cmp	x0, #0x0
   32e68:	b.eq	32e8c <udev_util_encode_string@@LIBUDEV_183+0x2765c>  // b.none
   32e6c:	ldr	x0, [sp, #24]
   32e70:	ldr	x1, [x0, #16]
   32e74:	ldr	x0, [sp, #24]
   32e78:	ldr	x0, [x0]
   32e7c:	add	x0, x1, x0
   32e80:	ldr	x1, [sp, #40]
   32e84:	cmp	x1, x0
   32e88:	b.ls	32ea4 <udev_util_encode_string@@LIBUDEV_183+0x27674>  // b.plast
   32e8c:	ldr	x0, [sp, #24]
   32e90:	ldr	x1, [sp, #40]
   32e94:	str	x1, [x0, #16]
   32e98:	ldr	x0, [sp, #24]
   32e9c:	str	wzr, [x0, #12]
   32ea0:	b	32ec8 <udev_util_encode_string@@LIBUDEV_183+0x27698>
   32ea4:	ldr	x0, [sp, #24]
   32ea8:	ldr	w1, [x0, #12]
   32eac:	ldr	x0, [sp, #24]
   32eb0:	ldr	w0, [x0, #8]
   32eb4:	cmp	w1, w0
   32eb8:	b.cc	32ec4 <udev_util_encode_string@@LIBUDEV_183+0x27694>  // b.lo, b.ul, b.last
   32ebc:	mov	w0, #0x0                   	// #0
   32ec0:	b	32ee0 <udev_util_encode_string@@LIBUDEV_183+0x276b0>
   32ec4:	nop
   32ec8:	ldr	x0, [sp, #24]
   32ecc:	ldr	w0, [x0, #12]
   32ed0:	add	w1, w0, #0x1
   32ed4:	ldr	x0, [sp, #24]
   32ed8:	str	w1, [x0, #12]
   32edc:	mov	w0, #0x1                   	// #1
   32ee0:	ldp	x29, x30, [sp], #48
   32ee4:	ret
   32ee8:	sub	sp, sp, #0x10
   32eec:	str	x0, [sp, #8]
   32ef0:	ldr	x0, [sp, #8]
   32ef4:	add	sp, sp, #0x10
   32ef8:	ret
   32efc:	stp	x29, x30, [sp, #-48]!
   32f00:	mov	x29, sp
   32f04:	str	x0, [sp, #24]
   32f08:	ldr	x0, [sp, #24]
   32f0c:	str	x0, [sp, #40]
   32f10:	ldr	x0, [sp, #40]
   32f14:	ldr	x0, [x0]
   32f18:	bl	32ee8 <udev_util_encode_string@@LIBUDEV_183+0x276b8>
   32f1c:	ldp	x29, x30, [sp], #48
   32f20:	ret
   32f24:	stp	x29, x30, [sp, #-32]!
   32f28:	mov	x29, sp
   32f2c:	str	x0, [sp, #24]
   32f30:	strb	w1, [sp, #23]
   32f34:	ldrb	w0, [sp, #23]
   32f38:	cmp	w0, #0x3f
   32f3c:	cset	w0, hi  // hi = pmore
   32f40:	and	w0, w0, #0xff
   32f44:	and	x0, x0, #0xff
   32f48:	cmp	x0, #0x0
   32f4c:	b.eq	32f78 <udev_util_encode_string@@LIBUDEV_183+0x27748>  // b.none
   32f50:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32f54:	add	x1, x0, #0xfd3
   32f58:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   32f5c:	add	x4, x0, #0x10
   32f60:	mov	w3, #0x1b                  	// #27
   32f64:	mov	x2, x1
   32f68:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32f6c:	add	x1, x0, #0xff0
   32f70:	mov	w0, #0x0                   	// #0
   32f74:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   32f78:	ldrb	w0, [sp, #23]
   32f7c:	ldr	x1, [sp, #24]
   32f80:	neg	w0, w0
   32f84:	ror	x0, x1, x0
   32f88:	ldp	x29, x30, [sp], #32
   32f8c:	ret
   32f90:	stp	x29, x30, [sp, #-32]!
   32f94:	mov	x29, sp
   32f98:	str	x0, [sp, #24]
   32f9c:	ldr	x0, [sp, #24]
   32fa0:	cmp	x0, #0x0
   32fa4:	cset	w0, eq  // eq = none
   32fa8:	and	w0, w0, #0xff
   32fac:	and	x0, x0, #0xff
   32fb0:	cmp	x0, #0x0
   32fb4:	b.eq	32fe0 <udev_util_encode_string@@LIBUDEV_183+0x277b0>  // b.none
   32fb8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32fbc:	add	x1, x0, #0xfd3
   32fc0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   32fc4:	add	x4, x0, #0x20
   32fc8:	mov	w3, #0x21                  	// #33
   32fcc:	mov	x2, x1
   32fd0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   32fd4:	add	x1, x0, #0xff8
   32fd8:	mov	w0, #0x0                   	// #0
   32fdc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   32fe0:	ldr	x0, [sp, #24]
   32fe4:	ldr	x1, [x0]
   32fe8:	ldr	x0, [sp, #24]
   32fec:	ldr	x0, [x0, #8]
   32ff0:	add	x1, x1, x0
   32ff4:	ldr	x0, [sp, #24]
   32ff8:	str	x1, [x0]
   32ffc:	ldr	x0, [sp, #24]
   33000:	ldr	x0, [x0, #8]
   33004:	mov	w1, #0xd                   	// #13
   33008:	bl	32f24 <udev_util_encode_string@@LIBUDEV_183+0x276f4>
   3300c:	mov	x1, x0
   33010:	ldr	x0, [sp, #24]
   33014:	str	x1, [x0, #8]
   33018:	ldr	x0, [sp, #24]
   3301c:	ldr	x1, [x0, #8]
   33020:	ldr	x0, [sp, #24]
   33024:	ldr	x0, [x0]
   33028:	eor	x1, x1, x0
   3302c:	ldr	x0, [sp, #24]
   33030:	str	x1, [x0, #8]
   33034:	ldr	x0, [sp, #24]
   33038:	ldr	x0, [x0]
   3303c:	mov	w1, #0x20                  	// #32
   33040:	bl	32f24 <udev_util_encode_string@@LIBUDEV_183+0x276f4>
   33044:	mov	x1, x0
   33048:	ldr	x0, [sp, #24]
   3304c:	str	x1, [x0]
   33050:	ldr	x0, [sp, #24]
   33054:	ldr	x1, [x0, #16]
   33058:	ldr	x0, [sp, #24]
   3305c:	ldr	x0, [x0, #24]
   33060:	add	x1, x1, x0
   33064:	ldr	x0, [sp, #24]
   33068:	str	x1, [x0, #16]
   3306c:	ldr	x0, [sp, #24]
   33070:	ldr	x0, [x0, #24]
   33074:	mov	w1, #0x10                  	// #16
   33078:	bl	32f24 <udev_util_encode_string@@LIBUDEV_183+0x276f4>
   3307c:	mov	x1, x0
   33080:	ldr	x0, [sp, #24]
   33084:	str	x1, [x0, #24]
   33088:	ldr	x0, [sp, #24]
   3308c:	ldr	x1, [x0, #24]
   33090:	ldr	x0, [sp, #24]
   33094:	ldr	x0, [x0, #16]
   33098:	eor	x1, x1, x0
   3309c:	ldr	x0, [sp, #24]
   330a0:	str	x1, [x0, #24]
   330a4:	ldr	x0, [sp, #24]
   330a8:	ldr	x1, [x0]
   330ac:	ldr	x0, [sp, #24]
   330b0:	ldr	x0, [x0, #24]
   330b4:	add	x1, x1, x0
   330b8:	ldr	x0, [sp, #24]
   330bc:	str	x1, [x0]
   330c0:	ldr	x0, [sp, #24]
   330c4:	ldr	x0, [x0, #24]
   330c8:	mov	w1, #0x15                  	// #21
   330cc:	bl	32f24 <udev_util_encode_string@@LIBUDEV_183+0x276f4>
   330d0:	mov	x1, x0
   330d4:	ldr	x0, [sp, #24]
   330d8:	str	x1, [x0, #24]
   330dc:	ldr	x0, [sp, #24]
   330e0:	ldr	x1, [x0, #24]
   330e4:	ldr	x0, [sp, #24]
   330e8:	ldr	x0, [x0]
   330ec:	eor	x1, x1, x0
   330f0:	ldr	x0, [sp, #24]
   330f4:	str	x1, [x0, #24]
   330f8:	ldr	x0, [sp, #24]
   330fc:	ldr	x1, [x0, #16]
   33100:	ldr	x0, [sp, #24]
   33104:	ldr	x0, [x0, #8]
   33108:	add	x1, x1, x0
   3310c:	ldr	x0, [sp, #24]
   33110:	str	x1, [x0, #16]
   33114:	ldr	x0, [sp, #24]
   33118:	ldr	x0, [x0, #8]
   3311c:	mov	w1, #0x11                  	// #17
   33120:	bl	32f24 <udev_util_encode_string@@LIBUDEV_183+0x276f4>
   33124:	mov	x1, x0
   33128:	ldr	x0, [sp, #24]
   3312c:	str	x1, [x0, #8]
   33130:	ldr	x0, [sp, #24]
   33134:	ldr	x1, [x0, #8]
   33138:	ldr	x0, [sp, #24]
   3313c:	ldr	x0, [x0, #16]
   33140:	eor	x1, x1, x0
   33144:	ldr	x0, [sp, #24]
   33148:	str	x1, [x0, #8]
   3314c:	ldr	x0, [sp, #24]
   33150:	ldr	x0, [x0, #16]
   33154:	mov	w1, #0x20                  	// #32
   33158:	bl	32f24 <udev_util_encode_string@@LIBUDEV_183+0x276f4>
   3315c:	mov	x1, x0
   33160:	ldr	x0, [sp, #24]
   33164:	str	x1, [x0, #16]
   33168:	nop
   3316c:	ldp	x29, x30, [sp], #32
   33170:	ret
   33174:	stp	x29, x30, [sp, #-96]!
   33178:	mov	x29, sp
   3317c:	str	x0, [sp, #24]
   33180:	str	x1, [sp, #16]
   33184:	ldr	x0, [sp, #24]
   33188:	cmp	x0, #0x0
   3318c:	cset	w0, eq  // eq = none
   33190:	and	w0, w0, #0xff
   33194:	and	x0, x0, #0xff
   33198:	cmp	x0, #0x0
   3319c:	b.eq	331c8 <udev_util_encode_string@@LIBUDEV_183+0x27998>  // b.none
   331a0:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   331a4:	add	x1, x0, #0xfd3
   331a8:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   331ac:	add	x4, x0, #0x30
   331b0:	mov	w3, #0x36                  	// #54
   331b4:	mov	x2, x1
   331b8:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   331bc:	add	x1, x0, #0xff8
   331c0:	mov	w0, #0x0                   	// #0
   331c4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   331c8:	ldr	x0, [sp, #16]
   331cc:	cmp	x0, #0x0
   331d0:	cset	w0, eq  // eq = none
   331d4:	and	w0, w0, #0xff
   331d8:	and	x0, x0, #0xff
   331dc:	cmp	x0, #0x0
   331e0:	b.eq	3320c <udev_util_encode_string@@LIBUDEV_183+0x279dc>  // b.none
   331e4:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   331e8:	add	x1, x0, #0xfd3
   331ec:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   331f0:	add	x4, x0, #0x30
   331f4:	mov	w3, #0x37                  	// #55
   331f8:	mov	x2, x1
   331fc:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33200:	add	x1, x0, #0x0
   33204:	mov	w0, #0x0                   	// #0
   33208:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3320c:	ldr	x0, [sp, #16]
   33210:	bl	32efc <udev_util_encode_string@@LIBUDEV_183+0x276cc>
   33214:	str	x0, [sp, #32]
   33218:	ldr	x0, [sp, #16]
   3321c:	add	x0, x0, #0x8
   33220:	bl	32efc <udev_util_encode_string@@LIBUDEV_183+0x276cc>
   33224:	str	x0, [sp, #40]
   33228:	ldr	x1, [sp, #32]
   3322c:	mov	x0, #0x6575                	// #25973
   33230:	movk	x0, #0x7073, lsl #16
   33234:	movk	x0, #0x6d65, lsl #32
   33238:	movk	x0, #0x736f, lsl #48
   3323c:	eor	x4, x1, x0
   33240:	ldr	x1, [sp, #40]
   33244:	mov	x0, #0x6f6d                	// #28525
   33248:	movk	x0, #0x6e64, lsl #16
   3324c:	movk	x0, #0x7261, lsl #32
   33250:	movk	x0, #0x646f, lsl #48
   33254:	eor	x3, x1, x0
   33258:	ldr	x1, [sp, #32]
   3325c:	mov	x0, #0x7261                	// #29281
   33260:	movk	x0, #0x6e65, lsl #16
   33264:	movk	x0, #0x6765, lsl #32
   33268:	movk	x0, #0x6c79, lsl #48
   3326c:	eor	x2, x1, x0
   33270:	ldr	x1, [sp, #40]
   33274:	mov	x0, #0x6573                	// #25971
   33278:	movk	x0, #0x7974, lsl #16
   3327c:	movk	x0, #0x6462, lsl #32
   33280:	movk	x0, #0x7465, lsl #48
   33284:	eor	x1, x1, x0
   33288:	ldr	x0, [sp, #24]
   3328c:	str	x4, [x0]
   33290:	ldr	x0, [sp, #24]
   33294:	str	x3, [x0, #8]
   33298:	ldr	x0, [sp, #24]
   3329c:	str	x2, [x0, #16]
   332a0:	ldr	x0, [sp, #24]
   332a4:	str	x1, [x0, #24]
   332a8:	ldr	x0, [sp, #24]
   332ac:	str	xzr, [x0, #32]
   332b0:	ldr	x0, [sp, #24]
   332b4:	str	xzr, [x0, #40]
   332b8:	nop
   332bc:	ldp	x29, x30, [sp], #96
   332c0:	ret
   332c4:	stp	x29, x30, [sp, #-80]!
   332c8:	mov	x29, sp
   332cc:	str	x0, [sp, #40]
   332d0:	str	x1, [sp, #32]
   332d4:	str	x2, [sp, #24]
   332d8:	ldr	x0, [sp, #40]
   332dc:	str	x0, [sp, #48]
   332e0:	ldr	x1, [sp, #48]
   332e4:	ldr	x0, [sp, #32]
   332e8:	add	x0, x1, x0
   332ec:	str	x0, [sp, #64]
   332f0:	ldr	x0, [sp, #24]
   332f4:	ldr	x0, [x0, #40]
   332f8:	and	x0, x0, #0x7
   332fc:	str	x0, [sp, #56]
   33300:	ldr	x0, [sp, #48]
   33304:	cmp	x0, #0x0
   33308:	cset	w0, eq  // eq = none
   3330c:	and	w0, w0, #0xff
   33310:	and	x0, x0, #0xff
   33314:	cmp	x0, #0x0
   33318:	b.eq	33344 <udev_util_encode_string@@LIBUDEV_183+0x27b14>  // b.none
   3331c:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   33320:	add	x1, x0, #0xfd3
   33324:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33328:	add	x4, x0, #0x40
   3332c:	mov	w3, #0x4e                  	// #78
   33330:	mov	x2, x1
   33334:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33338:	add	x1, x0, #0x8
   3333c:	mov	w0, #0x0                   	// #0
   33340:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33344:	ldr	x0, [sp, #24]
   33348:	cmp	x0, #0x0
   3334c:	cset	w0, eq  // eq = none
   33350:	and	w0, w0, #0xff
   33354:	and	x0, x0, #0xff
   33358:	cmp	x0, #0x0
   3335c:	b.eq	33388 <udev_util_encode_string@@LIBUDEV_183+0x27b58>  // b.none
   33360:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   33364:	add	x1, x0, #0xfd3
   33368:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3336c:	add	x4, x0, #0x40
   33370:	mov	w3, #0x4f                  	// #79
   33374:	mov	x2, x1
   33378:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3337c:	add	x1, x0, #0xff8
   33380:	mov	w0, #0x0                   	// #0
   33384:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33388:	ldr	x0, [sp, #24]
   3338c:	ldr	x1, [x0, #40]
   33390:	ldr	x0, [sp, #32]
   33394:	add	x1, x1, x0
   33398:	ldr	x0, [sp, #24]
   3339c:	str	x1, [x0, #40]
   333a0:	ldr	x0, [sp, #56]
   333a4:	cmp	x0, #0x0
   333a8:	b.eq	3347c <udev_util_encode_string@@LIBUDEV_183+0x27c4c>  // b.none
   333ac:	b	333f4 <udev_util_encode_string@@LIBUDEV_183+0x27bc4>
   333b0:	ldr	x0, [sp, #24]
   333b4:	ldr	x1, [x0, #32]
   333b8:	ldr	x0, [sp, #48]
   333bc:	ldrb	w0, [x0]
   333c0:	and	x2, x0, #0xff
   333c4:	ldr	x0, [sp, #56]
   333c8:	lsl	w0, w0, #3
   333cc:	lsl	x0, x2, x0
   333d0:	orr	x1, x1, x0
   333d4:	ldr	x0, [sp, #24]
   333d8:	str	x1, [x0, #32]
   333dc:	ldr	x0, [sp, #48]
   333e0:	add	x0, x0, #0x1
   333e4:	str	x0, [sp, #48]
   333e8:	ldr	x0, [sp, #56]
   333ec:	add	x0, x0, #0x1
   333f0:	str	x0, [sp, #56]
   333f4:	ldr	x1, [sp, #48]
   333f8:	ldr	x0, [sp, #64]
   333fc:	cmp	x1, x0
   33400:	b.cs	33410 <udev_util_encode_string@@LIBUDEV_183+0x27be0>  // b.hs, b.nlast
   33404:	ldr	x0, [sp, #56]
   33408:	cmp	x0, #0x7
   3340c:	b.ls	333b0 <udev_util_encode_string@@LIBUDEV_183+0x27b80>  // b.plast
   33410:	ldr	x1, [sp, #48]
   33414:	ldr	x0, [sp, #64]
   33418:	cmp	x1, x0
   3341c:	b.ne	3342c <udev_util_encode_string@@LIBUDEV_183+0x27bfc>  // b.any
   33420:	ldr	x0, [sp, #56]
   33424:	cmp	x0, #0x7
   33428:	b.ls	336d4 <udev_util_encode_string@@LIBUDEV_183+0x27ea4>  // b.plast
   3342c:	ldr	x0, [sp, #24]
   33430:	ldr	x1, [x0, #24]
   33434:	ldr	x0, [sp, #24]
   33438:	ldr	x0, [x0, #32]
   3343c:	eor	x1, x1, x0
   33440:	ldr	x0, [sp, #24]
   33444:	str	x1, [x0, #24]
   33448:	ldr	x0, [sp, #24]
   3344c:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   33450:	ldr	x0, [sp, #24]
   33454:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   33458:	ldr	x0, [sp, #24]
   3345c:	ldr	x1, [x0]
   33460:	ldr	x0, [sp, #24]
   33464:	ldr	x0, [x0, #32]
   33468:	eor	x1, x1, x0
   3346c:	ldr	x0, [sp, #24]
   33470:	str	x1, [x0]
   33474:	ldr	x0, [sp, #24]
   33478:	str	xzr, [x0, #32]
   3347c:	ldr	x0, [sp, #24]
   33480:	ldr	x0, [x0, #40]
   33484:	and	x0, x0, #0x7
   33488:	neg	x0, x0
   3348c:	ldr	x1, [sp, #64]
   33490:	add	x0, x1, x0
   33494:	str	x0, [sp, #64]
   33498:	b	334f4 <udev_util_encode_string@@LIBUDEV_183+0x27cc4>
   3349c:	ldr	x0, [sp, #48]
   334a0:	bl	32efc <udev_util_encode_string@@LIBUDEV_183+0x276cc>
   334a4:	str	x0, [sp, #72]
   334a8:	ldr	x0, [sp, #24]
   334ac:	ldr	x1, [x0, #24]
   334b0:	ldr	x0, [sp, #72]
   334b4:	eor	x1, x1, x0
   334b8:	ldr	x0, [sp, #24]
   334bc:	str	x1, [x0, #24]
   334c0:	ldr	x0, [sp, #24]
   334c4:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   334c8:	ldr	x0, [sp, #24]
   334cc:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   334d0:	ldr	x0, [sp, #24]
   334d4:	ldr	x1, [x0]
   334d8:	ldr	x0, [sp, #72]
   334dc:	eor	x1, x1, x0
   334e0:	ldr	x0, [sp, #24]
   334e4:	str	x1, [x0]
   334e8:	ldr	x0, [sp, #48]
   334ec:	add	x0, x0, #0x8
   334f0:	str	x0, [sp, #48]
   334f4:	ldr	x1, [sp, #48]
   334f8:	ldr	x0, [sp, #64]
   334fc:	cmp	x1, x0
   33500:	b.cc	3349c <udev_util_encode_string@@LIBUDEV_183+0x27c6c>  // b.lo, b.ul, b.last
   33504:	ldr	x0, [sp, #24]
   33508:	ldr	x0, [x0, #40]
   3350c:	and	x0, x0, #0x7
   33510:	str	x0, [sp, #56]
   33514:	ldr	x0, [sp, #56]
   33518:	cmp	x0, #0x7
   3351c:	b.eq	335c0 <udev_util_encode_string@@LIBUDEV_183+0x27d90>  // b.none
   33520:	ldr	x0, [sp, #56]
   33524:	cmp	x0, #0x7
   33528:	b.hi	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>  // b.pmore
   3352c:	ldr	x0, [sp, #56]
   33530:	cmp	x0, #0x6
   33534:	b.eq	335e8 <udev_util_encode_string@@LIBUDEV_183+0x27db8>  // b.none
   33538:	ldr	x0, [sp, #56]
   3353c:	cmp	x0, #0x6
   33540:	b.hi	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>  // b.pmore
   33544:	ldr	x0, [sp, #56]
   33548:	cmp	x0, #0x5
   3354c:	b.eq	33610 <udev_util_encode_string@@LIBUDEV_183+0x27de0>  // b.none
   33550:	ldr	x0, [sp, #56]
   33554:	cmp	x0, #0x5
   33558:	b.hi	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>  // b.pmore
   3355c:	ldr	x0, [sp, #56]
   33560:	cmp	x0, #0x4
   33564:	b.eq	33638 <udev_util_encode_string@@LIBUDEV_183+0x27e08>  // b.none
   33568:	ldr	x0, [sp, #56]
   3356c:	cmp	x0, #0x4
   33570:	b.hi	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>  // b.pmore
   33574:	ldr	x0, [sp, #56]
   33578:	cmp	x0, #0x3
   3357c:	b.eq	33660 <udev_util_encode_string@@LIBUDEV_183+0x27e30>  // b.none
   33580:	ldr	x0, [sp, #56]
   33584:	cmp	x0, #0x3
   33588:	b.hi	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>  // b.pmore
   3358c:	ldr	x0, [sp, #56]
   33590:	cmp	x0, #0x2
   33594:	b.eq	33688 <udev_util_encode_string@@LIBUDEV_183+0x27e58>  // b.none
   33598:	ldr	x0, [sp, #56]
   3359c:	cmp	x0, #0x2
   335a0:	b.hi	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>  // b.pmore
   335a4:	ldr	x0, [sp, #56]
   335a8:	cmp	x0, #0x0
   335ac:	b.eq	336dc <udev_util_encode_string@@LIBUDEV_183+0x27eac>  // b.none
   335b0:	ldr	x0, [sp, #56]
   335b4:	cmp	x0, #0x1
   335b8:	b.eq	336b0 <udev_util_encode_string@@LIBUDEV_183+0x27e80>  // b.none
   335bc:	b	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>
   335c0:	ldr	x0, [sp, #24]
   335c4:	ldr	x1, [x0, #32]
   335c8:	ldr	x0, [sp, #48]
   335cc:	add	x0, x0, #0x6
   335d0:	ldrb	w0, [x0]
   335d4:	and	x0, x0, #0xff
   335d8:	lsl	x0, x0, #48
   335dc:	orr	x1, x1, x0
   335e0:	ldr	x0, [sp, #24]
   335e4:	str	x1, [x0, #32]
   335e8:	ldr	x0, [sp, #24]
   335ec:	ldr	x1, [x0, #32]
   335f0:	ldr	x0, [sp, #48]
   335f4:	add	x0, x0, #0x5
   335f8:	ldrb	w0, [x0]
   335fc:	and	x0, x0, #0xff
   33600:	lsl	x0, x0, #40
   33604:	orr	x1, x1, x0
   33608:	ldr	x0, [sp, #24]
   3360c:	str	x1, [x0, #32]
   33610:	ldr	x0, [sp, #24]
   33614:	ldr	x1, [x0, #32]
   33618:	ldr	x0, [sp, #48]
   3361c:	add	x0, x0, #0x4
   33620:	ldrb	w0, [x0]
   33624:	and	x0, x0, #0xff
   33628:	lsl	x0, x0, #32
   3362c:	orr	x1, x1, x0
   33630:	ldr	x0, [sp, #24]
   33634:	str	x1, [x0, #32]
   33638:	ldr	x0, [sp, #24]
   3363c:	ldr	x1, [x0, #32]
   33640:	ldr	x0, [sp, #48]
   33644:	add	x0, x0, #0x3
   33648:	ldrb	w0, [x0]
   3364c:	and	x0, x0, #0xff
   33650:	lsl	x0, x0, #24
   33654:	orr	x1, x1, x0
   33658:	ldr	x0, [sp, #24]
   3365c:	str	x1, [x0, #32]
   33660:	ldr	x0, [sp, #24]
   33664:	ldr	x1, [x0, #32]
   33668:	ldr	x0, [sp, #48]
   3366c:	add	x0, x0, #0x2
   33670:	ldrb	w0, [x0]
   33674:	and	x0, x0, #0xff
   33678:	lsl	x0, x0, #16
   3367c:	orr	x1, x1, x0
   33680:	ldr	x0, [sp, #24]
   33684:	str	x1, [x0, #32]
   33688:	ldr	x0, [sp, #24]
   3368c:	ldr	x1, [x0, #32]
   33690:	ldr	x0, [sp, #48]
   33694:	add	x0, x0, #0x1
   33698:	ldrb	w0, [x0]
   3369c:	and	x0, x0, #0xff
   336a0:	lsl	x0, x0, #8
   336a4:	orr	x1, x1, x0
   336a8:	ldr	x0, [sp, #24]
   336ac:	str	x1, [x0, #32]
   336b0:	ldr	x0, [sp, #24]
   336b4:	ldr	x1, [x0, #32]
   336b8:	ldr	x0, [sp, #48]
   336bc:	ldrb	w0, [x0]
   336c0:	and	x0, x0, #0xff
   336c4:	orr	x1, x1, x0
   336c8:	ldr	x0, [sp, #24]
   336cc:	str	x1, [x0, #32]
   336d0:	b	336dc <udev_util_encode_string@@LIBUDEV_183+0x27eac>
   336d4:	nop
   336d8:	b	336e0 <udev_util_encode_string@@LIBUDEV_183+0x27eb0>
   336dc:	nop
   336e0:	ldp	x29, x30, [sp], #80
   336e4:	ret
   336e8:	stp	x29, x30, [sp, #-48]!
   336ec:	mov	x29, sp
   336f0:	str	x0, [sp, #24]
   336f4:	ldr	x0, [sp, #24]
   336f8:	cmp	x0, #0x0
   336fc:	cset	w0, eq  // eq = none
   33700:	and	w0, w0, #0xff
   33704:	and	x0, x0, #0xff
   33708:	cmp	x0, #0x0
   3370c:	b.eq	33738 <udev_util_encode_string@@LIBUDEV_183+0x27f08>  // b.none
   33710:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   33714:	add	x1, x0, #0xfd3
   33718:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3371c:	add	x4, x0, #0x58
   33720:	mov	w3, #0xa3                  	// #163
   33724:	mov	x2, x1
   33728:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   3372c:	add	x1, x0, #0xff8
   33730:	mov	w0, #0x0                   	// #0
   33734:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33738:	ldr	x0, [sp, #24]
   3373c:	ldr	x1, [x0, #32]
   33740:	ldr	x0, [sp, #24]
   33744:	ldr	x0, [x0, #40]
   33748:	lsl	x0, x0, #56
   3374c:	orr	x0, x1, x0
   33750:	str	x0, [sp, #40]
   33754:	ldr	x0, [sp, #24]
   33758:	ldr	x1, [x0, #24]
   3375c:	ldr	x0, [sp, #40]
   33760:	eor	x1, x1, x0
   33764:	ldr	x0, [sp, #24]
   33768:	str	x1, [x0, #24]
   3376c:	ldr	x0, [sp, #24]
   33770:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   33774:	ldr	x0, [sp, #24]
   33778:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   3377c:	ldr	x0, [sp, #24]
   33780:	ldr	x1, [x0]
   33784:	ldr	x0, [sp, #40]
   33788:	eor	x1, x1, x0
   3378c:	ldr	x0, [sp, #24]
   33790:	str	x1, [x0]
   33794:	ldr	x0, [sp, #24]
   33798:	ldr	x0, [x0, #16]
   3379c:	eor	x1, x0, #0xff
   337a0:	ldr	x0, [sp, #24]
   337a4:	str	x1, [x0, #16]
   337a8:	ldr	x0, [sp, #24]
   337ac:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   337b0:	ldr	x0, [sp, #24]
   337b4:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   337b8:	ldr	x0, [sp, #24]
   337bc:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   337c0:	ldr	x0, [sp, #24]
   337c4:	bl	32f90 <udev_util_encode_string@@LIBUDEV_183+0x27760>
   337c8:	ldr	x0, [sp, #24]
   337cc:	ldr	x1, [x0]
   337d0:	ldr	x0, [sp, #24]
   337d4:	ldr	x0, [x0, #8]
   337d8:	eor	x1, x1, x0
   337dc:	ldr	x0, [sp, #24]
   337e0:	ldr	x0, [x0, #16]
   337e4:	eor	x1, x1, x0
   337e8:	ldr	x0, [sp, #24]
   337ec:	ldr	x0, [x0, #24]
   337f0:	eor	x0, x1, x0
   337f4:	ldp	x29, x30, [sp], #48
   337f8:	ret
   337fc:	stp	x29, x30, [sp, #-112]!
   33800:	mov	x29, sp
   33804:	str	x0, [sp, #40]
   33808:	str	x1, [sp, #32]
   3380c:	str	x2, [sp, #24]
   33810:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33814:	ldr	x0, [x0, #4016]
   33818:	ldr	x1, [x0]
   3381c:	str	x1, [sp, #104]
   33820:	mov	x1, #0x0                   	// #0
   33824:	ldr	x0, [sp, #40]
   33828:	cmp	x0, #0x0
   3382c:	cset	w0, eq  // eq = none
   33830:	and	w0, w0, #0xff
   33834:	and	x0, x0, #0xff
   33838:	cmp	x0, #0x0
   3383c:	b.eq	33868 <udev_util_encode_string@@LIBUDEV_183+0x28038>  // b.none
   33840:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   33844:	add	x1, x0, #0xfd3
   33848:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3384c:	add	x4, x0, #0x70
   33850:	mov	w3, #0xc7                  	// #199
   33854:	mov	x2, x1
   33858:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3385c:	add	x1, x0, #0x8
   33860:	mov	w0, #0x0                   	// #0
   33864:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33868:	ldr	x0, [sp, #24]
   3386c:	cmp	x0, #0x0
   33870:	cset	w0, eq  // eq = none
   33874:	and	w0, w0, #0xff
   33878:	and	x0, x0, #0xff
   3387c:	cmp	x0, #0x0
   33880:	b.eq	338ac <udev_util_encode_string@@LIBUDEV_183+0x2807c>  // b.none
   33884:	adrp	x0, 3d000 <udev_util_encode_string@@LIBUDEV_183+0x317d0>
   33888:	add	x1, x0, #0xfd3
   3388c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33890:	add	x4, x0, #0x70
   33894:	mov	w3, #0xc8                  	// #200
   33898:	mov	x2, x1
   3389c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   338a0:	add	x1, x0, #0x0
   338a4:	mov	w0, #0x0                   	// #0
   338a8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   338ac:	add	x0, sp, #0x38
   338b0:	ldr	x1, [sp, #24]
   338b4:	bl	33174 <udev_util_encode_string@@LIBUDEV_183+0x27944>
   338b8:	add	x0, sp, #0x38
   338bc:	mov	x2, x0
   338c0:	ldr	x1, [sp, #32]
   338c4:	ldr	x0, [sp, #40]
   338c8:	bl	332c4 <udev_util_encode_string@@LIBUDEV_183+0x27a94>
   338cc:	add	x0, sp, #0x38
   338d0:	bl	336e8 <udev_util_encode_string@@LIBUDEV_183+0x27eb8>
   338d4:	mov	x1, x0
   338d8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   338dc:	ldr	x0, [x0, #4016]
   338e0:	ldr	x2, [sp, #104]
   338e4:	ldr	x0, [x0]
   338e8:	eor	x0, x2, x0
   338ec:	cmp	x0, #0x0
   338f0:	b.eq	338f8 <udev_util_encode_string@@LIBUDEV_183+0x280c8>  // b.none
   338f4:	bl	5390 <__stack_chk_fail@plt>
   338f8:	mov	x0, x1
   338fc:	ldp	x29, x30, [sp], #112
   33900:	ret
   33904:	stp	x29, x30, [sp, #-32]!
   33908:	mov	x29, sp
   3390c:	str	w0, [sp, #28]
   33910:	str	w1, [sp, #24]
   33914:	str	w2, [sp, #20]
   33918:	str	w3, [sp, #16]
   3391c:	add	x0, sp, #0x10
   33920:	mov	w4, #0x4                   	// #4
   33924:	mov	x3, x0
   33928:	ldr	w2, [sp, #20]
   3392c:	ldr	w1, [sp, #24]
   33930:	ldr	w0, [sp, #28]
   33934:	bl	5230 <setsockopt@plt>
   33938:	cmp	w0, #0x0
   3393c:	b.ge	33950 <udev_util_encode_string@@LIBUDEV_183+0x28120>  // b.tcont
   33940:	bl	57d0 <__errno_location@plt>
   33944:	ldr	w0, [x0]
   33948:	neg	w0, w0
   3394c:	b	33954 <udev_util_encode_string@@LIBUDEV_183+0x28124>
   33950:	mov	w0, #0x0                   	// #0
   33954:	ldp	x29, x30, [sp], #32
   33958:	ret
   3395c:	stp	x29, x30, [sp, #-64]!
   33960:	mov	x29, sp
   33964:	str	w0, [sp, #28]
   33968:	str	x1, [sp, #16]
   3396c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33970:	ldr	x0, [x0, #4016]
   33974:	ldr	x1, [x0]
   33978:	str	x1, [sp, #56]
   3397c:	mov	x1, #0x0                   	// #0
   33980:	mov	w0, #0x4                   	// #4
   33984:	str	w0, [sp, #48]
   33988:	add	x1, sp, #0x30
   3398c:	add	x0, sp, #0x2c
   33990:	mov	x4, x1
   33994:	mov	x3, x0
   33998:	mov	w2, #0x7                   	// #7
   3399c:	mov	w1, #0x1                   	// #1
   339a0:	ldr	w0, [sp, #28]
   339a4:	bl	5660 <getsockopt@plt>
   339a8:	str	w0, [sp, #52]
   339ac:	ldr	w0, [sp, #52]
   339b0:	cmp	w0, #0x0
   339b4:	b.lt	339e4 <udev_util_encode_string@@LIBUDEV_183+0x281b4>  // b.tstop
   339b8:	ldr	w0, [sp, #48]
   339bc:	cmp	w0, #0x4
   339c0:	b.ne	339e4 <udev_util_encode_string@@LIBUDEV_183+0x281b4>  // b.any
   339c4:	ldr	w0, [sp, #44]
   339c8:	sxtw	x1, w0
   339cc:	ldr	x0, [sp, #16]
   339d0:	lsl	x0, x0, #1
   339d4:	cmp	x1, x0
   339d8:	b.cc	339e4 <udev_util_encode_string@@LIBUDEV_183+0x281b4>  // b.lo, b.ul, b.last
   339dc:	mov	w0, #0x0                   	// #0
   339e0:	b	33a38 <udev_util_encode_string@@LIBUDEV_183+0x28208>
   339e4:	ldr	x0, [sp, #16]
   339e8:	mov	w3, w0
   339ec:	mov	w2, #0x7                   	// #7
   339f0:	mov	w1, #0x1                   	// #1
   339f4:	ldr	w0, [sp, #28]
   339f8:	bl	33904 <udev_util_encode_string@@LIBUDEV_183+0x280d4>
   339fc:	cmp	w0, #0x0
   33a00:	b.ge	33a34 <udev_util_encode_string@@LIBUDEV_183+0x28204>  // b.tcont
   33a04:	ldr	x0, [sp, #16]
   33a08:	mov	w3, w0
   33a0c:	mov	w2, #0x20                  	// #32
   33a10:	mov	w1, #0x1                   	// #1
   33a14:	ldr	w0, [sp, #28]
   33a18:	bl	33904 <udev_util_encode_string@@LIBUDEV_183+0x280d4>
   33a1c:	str	w0, [sp, #52]
   33a20:	ldr	w0, [sp, #52]
   33a24:	cmp	w0, #0x0
   33a28:	b.ge	33a34 <udev_util_encode_string@@LIBUDEV_183+0x28204>  // b.tcont
   33a2c:	ldr	w0, [sp, #52]
   33a30:	b	33a38 <udev_util_encode_string@@LIBUDEV_183+0x28208>
   33a34:	mov	w0, #0x1                   	// #1
   33a38:	mov	w1, w0
   33a3c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33a40:	ldr	x0, [x0, #4016]
   33a44:	ldr	x2, [sp, #56]
   33a48:	ldr	x0, [x0]
   33a4c:	eor	x0, x2, x0
   33a50:	cmp	x0, #0x0
   33a54:	b.eq	33a5c <udev_util_encode_string@@LIBUDEV_183+0x2822c>  // b.none
   33a58:	bl	5390 <__stack_chk_fail@plt>
   33a5c:	mov	w0, w1
   33a60:	ldp	x29, x30, [sp], #64
   33a64:	ret
   33a68:	stp	x29, x30, [sp, #-32]!
   33a6c:	mov	x29, sp
   33a70:	mov	w2, #0x0                   	// #0
   33a74:	mov	w1, #0x2                   	// #2
   33a78:	movk	w1, #0x8, lsl #16
   33a7c:	mov	w0, #0x2                   	// #2
   33a80:	bl	55e0 <socket@plt>
   33a84:	str	w0, [sp, #28]
   33a88:	ldr	w0, [sp, #28]
   33a8c:	cmp	w0, #0x0
   33a90:	b.ge	33aac <udev_util_encode_string@@LIBUDEV_183+0x2827c>  // b.tcont
   33a94:	mov	w2, #0x10                  	// #16
   33a98:	mov	w1, #0x3                   	// #3
   33a9c:	movk	w1, #0x8, lsl #16
   33aa0:	mov	w0, #0x10                  	// #16
   33aa4:	bl	55e0 <socket@plt>
   33aa8:	str	w0, [sp, #28]
   33aac:	ldr	w0, [sp, #28]
   33ab0:	cmp	w0, #0x0
   33ab4:	b.ge	33ac8 <udev_util_encode_string@@LIBUDEV_183+0x28298>  // b.tcont
   33ab8:	bl	57d0 <__errno_location@plt>
   33abc:	ldr	w0, [x0]
   33ac0:	neg	w0, w0
   33ac4:	b	33acc <udev_util_encode_string@@LIBUDEV_183+0x2829c>
   33ac8:	ldr	w0, [sp, #28]
   33acc:	ldp	x29, x30, [sp], #32
   33ad0:	ret
   33ad4:	stp	x29, x30, [sp, #-176]!
   33ad8:	mov	x29, sp
   33adc:	str	x0, [sp, #24]
   33ae0:	strb	w1, [sp, #23]
   33ae4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33ae8:	ldr	x0, [x0, #4016]
   33aec:	ldr	x1, [x0]
   33af0:	str	x1, [sp, #168]
   33af4:	mov	x1, #0x0                   	// #0
   33af8:	ldr	x0, [sp, #24]
   33afc:	cmp	x0, #0x0
   33b00:	cset	w0, eq  // eq = none
   33b04:	and	w0, w0, #0xff
   33b08:	and	x0, x0, #0xff
   33b0c:	cmp	x0, #0x0
   33b10:	b.eq	33b3c <udev_util_encode_string@@LIBUDEV_183+0x2830c>  // b.none
   33b14:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33b18:	add	x1, x0, #0x83
   33b1c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33b20:	add	x4, x0, #0x160
   33b24:	mov	w3, #0x24                  	// #36
   33b28:	mov	x2, x1
   33b2c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33b30:	add	x1, x0, #0xa0
   33b34:	mov	w0, #0x0                   	// #0
   33b38:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33b3c:	ldrb	w0, [sp, #23]
   33b40:	cmp	w0, #0x0
   33b44:	b.eq	33b60 <udev_util_encode_string@@LIBUDEV_183+0x28330>  // b.none
   33b48:	add	x0, sp, #0x28
   33b4c:	mov	x1, x0
   33b50:	ldr	x0, [sp, #24]
   33b54:	bl	364e0 <udev_util_encode_string@@LIBUDEV_183+0x2acb0>
   33b58:	str	w0, [sp, #36]
   33b5c:	b	33b74 <udev_util_encode_string@@LIBUDEV_183+0x28344>
   33b60:	add	x0, sp, #0x28
   33b64:	mov	x1, x0
   33b68:	ldr	x0, [sp, #24]
   33b6c:	bl	36500 <udev_util_encode_string@@LIBUDEV_183+0x2acd0>
   33b70:	str	w0, [sp, #36]
   33b74:	ldr	w0, [sp, #36]
   33b78:	cmp	w0, #0x0
   33b7c:	b.ge	33b90 <udev_util_encode_string@@LIBUDEV_183+0x28360>  // b.tcont
   33b80:	bl	57d0 <__errno_location@plt>
   33b84:	ldr	w0, [x0]
   33b88:	neg	w0, w0
   33b8c:	b	33ba4 <udev_util_encode_string@@LIBUDEV_183+0x28374>
   33b90:	ldr	w0, [sp, #56]
   33b94:	and	w0, w0, #0xf000
   33b98:	cmp	w0, #0x4, lsl #12
   33b9c:	cset	w0, eq  // eq = none
   33ba0:	and	w0, w0, #0xff
   33ba4:	mov	w1, w0
   33ba8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33bac:	ldr	x0, [x0, #4016]
   33bb0:	ldr	x2, [sp, #168]
   33bb4:	ldr	x0, [x0]
   33bb8:	eor	x0, x2, x0
   33bbc:	cmp	x0, #0x0
   33bc0:	b.eq	33bc8 <udev_util_encode_string@@LIBUDEV_183+0x28398>  // b.none
   33bc4:	bl	5390 <__stack_chk_fail@plt>
   33bc8:	mov	w0, w1
   33bcc:	ldp	x29, x30, [sp], #176
   33bd0:	ret
   33bd4:	stp	x29, x30, [sp, #-32]!
   33bd8:	mov	x29, sp
   33bdc:	str	x0, [sp, #24]
   33be0:	str	x1, [sp, #16]
   33be4:	ldr	x0, [sp, #24]
   33be8:	cmp	x0, #0x0
   33bec:	cset	w0, eq  // eq = none
   33bf0:	and	w0, w0, #0xff
   33bf4:	and	x0, x0, #0xff
   33bf8:	cmp	x0, #0x0
   33bfc:	b.eq	33c28 <udev_util_encode_string@@LIBUDEV_183+0x283f8>  // b.none
   33c00:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33c04:	add	x1, x0, #0x83
   33c08:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33c0c:	add	x4, x0, #0x168
   33c10:	mov	w3, #0xa5                  	// #165
   33c14:	mov	x2, x1
   33c18:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33c1c:	add	x1, x0, #0xd0
   33c20:	mov	w0, #0x0                   	// #0
   33c24:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33c28:	ldr	x0, [sp, #24]
   33c2c:	ldr	x0, [x0]
   33c30:	ldr	x1, [sp, #16]
   33c34:	cmp	x1, x0
   33c38:	cset	w0, eq  // eq = none
   33c3c:	and	w0, w0, #0xff
   33c40:	ldp	x29, x30, [sp], #32
   33c44:	ret
   33c48:	stp	x29, x30, [sp, #-160]!
   33c4c:	mov	x29, sp
   33c50:	str	w0, [sp, #28]
   33c54:	str	x1, [sp, #16]
   33c58:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33c5c:	ldr	x0, [x0, #4016]
   33c60:	ldr	x1, [x0]
   33c64:	str	x1, [sp, #152]
   33c68:	mov	x1, #0x0                   	// #0
   33c6c:	add	x0, sp, #0x20
   33c70:	mov	x1, x0
   33c74:	ldr	w0, [sp, #28]
   33c78:	bl	5350 <fstatfs64@plt>
   33c7c:	cmp	w0, #0x0
   33c80:	b.ge	33c94 <udev_util_encode_string@@LIBUDEV_183+0x28464>  // b.tcont
   33c84:	bl	57d0 <__errno_location@plt>
   33c88:	ldr	w0, [x0]
   33c8c:	neg	w0, w0
   33c90:	b	33ca4 <udev_util_encode_string@@LIBUDEV_183+0x28474>
   33c94:	add	x0, sp, #0x20
   33c98:	ldr	x1, [sp, #16]
   33c9c:	bl	33bd4 <udev_util_encode_string@@LIBUDEV_183+0x283a4>
   33ca0:	and	w0, w0, #0xff
   33ca4:	mov	w1, w0
   33ca8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33cac:	ldr	x0, [x0, #4016]
   33cb0:	ldr	x2, [sp, #152]
   33cb4:	ldr	x0, [x0]
   33cb8:	eor	x0, x2, x0
   33cbc:	cmp	x0, #0x0
   33cc0:	b.eq	33cc8 <udev_util_encode_string@@LIBUDEV_183+0x28498>  // b.none
   33cc4:	bl	5390 <__stack_chk_fail@plt>
   33cc8:	mov	w0, w1
   33ccc:	ldp	x29, x30, [sp], #160
   33cd0:	ret
   33cd4:	stp	x29, x30, [sp, #-32]!
   33cd8:	mov	x29, sp
   33cdc:	str	x0, [sp, #24]
   33ce0:	ldr	x0, [sp, #24]
   33ce4:	cmp	x0, #0x0
   33ce8:	cset	w0, eq  // eq = none
   33cec:	and	w0, w0, #0xff
   33cf0:	and	x0, x0, #0xff
   33cf4:	cmp	x0, #0x0
   33cf8:	b.eq	33d24 <udev_util_encode_string@@LIBUDEV_183+0x284f4>  // b.none
   33cfc:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33d00:	add	x1, x0, #0x83
   33d04:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33d08:	add	x4, x0, #0x178
   33d0c:	mov	w3, #0xeb                  	// #235
   33d10:	mov	x2, x1
   33d14:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33d18:	add	x1, x0, #0xa8
   33d1c:	mov	w0, #0x0                   	// #0
   33d20:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33d24:	ldr	x0, [sp, #24]
   33d28:	ldr	w0, [x0, #16]
   33d2c:	and	w0, w0, #0xf000
   33d30:	cmp	w0, #0x4, lsl #12
   33d34:	b.ne	33d40 <udev_util_encode_string@@LIBUDEV_183+0x28510>  // b.any
   33d38:	mov	w0, #0xffffffeb            	// #-21
   33d3c:	b	33d7c <udev_util_encode_string@@LIBUDEV_183+0x2854c>
   33d40:	ldr	x0, [sp, #24]
   33d44:	ldr	w0, [x0, #16]
   33d48:	and	w0, w0, #0xf000
   33d4c:	cmp	w0, #0xa, lsl #12
   33d50:	b.ne	33d5c <udev_util_encode_string@@LIBUDEV_183+0x2852c>  // b.any
   33d54:	mov	w0, #0xffffffd8            	// #-40
   33d58:	b	33d7c <udev_util_encode_string@@LIBUDEV_183+0x2854c>
   33d5c:	ldr	x0, [sp, #24]
   33d60:	ldr	w0, [x0, #16]
   33d64:	and	w0, w0, #0xf000
   33d68:	cmp	w0, #0x8, lsl #12
   33d6c:	b.eq	33d78 <udev_util_encode_string@@LIBUDEV_183+0x28548>  // b.none
   33d70:	mov	w0, #0xffffffb3            	// #-77
   33d74:	b	33d7c <udev_util_encode_string@@LIBUDEV_183+0x2854c>
   33d78:	mov	w0, #0x0                   	// #0
   33d7c:	ldp	x29, x30, [sp], #32
   33d80:	ret
   33d84:	stp	x29, x30, [sp, #-176]!
   33d88:	mov	x29, sp
   33d8c:	str	w0, [sp, #28]
   33d90:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33d94:	ldr	x0, [x0, #4016]
   33d98:	ldr	x1, [x0]
   33d9c:	str	x1, [sp, #168]
   33da0:	mov	x1, #0x0                   	// #0
   33da4:	ldr	w0, [sp, #28]
   33da8:	lsr	w0, w0, #31
   33dac:	and	w0, w0, #0xff
   33db0:	and	x0, x0, #0xff
   33db4:	cmp	x0, #0x0
   33db8:	b.eq	33de4 <udev_util_encode_string@@LIBUDEV_183+0x285b4>  // b.none
   33dbc:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33dc0:	add	x1, x0, #0x83
   33dc4:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33dc8:	add	x4, x0, #0x190
   33dcc:	mov	w3, #0xff                  	// #255
   33dd0:	mov	x2, x1
   33dd4:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   33dd8:	add	x1, x0, #0xb8
   33ddc:	mov	w0, #0x0                   	// #0
   33de0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   33de4:	add	x0, sp, #0x28
   33de8:	mov	x1, x0
   33dec:	ldr	w0, [sp, #28]
   33df0:	bl	364f0 <udev_util_encode_string@@LIBUDEV_183+0x2acc0>
   33df4:	cmp	w0, #0x0
   33df8:	b.ge	33e0c <udev_util_encode_string@@LIBUDEV_183+0x285dc>  // b.tcont
   33dfc:	bl	57d0 <__errno_location@plt>
   33e00:	ldr	w0, [x0]
   33e04:	neg	w0, w0
   33e08:	b	33e14 <udev_util_encode_string@@LIBUDEV_183+0x285e4>
   33e0c:	add	x0, sp, #0x28
   33e10:	bl	33cd4 <udev_util_encode_string@@LIBUDEV_183+0x284a4>
   33e14:	mov	w1, w0
   33e18:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   33e1c:	ldr	x0, [x0, #4016]
   33e20:	ldr	x2, [sp, #168]
   33e24:	ldr	x0, [x0]
   33e28:	eor	x0, x2, x0
   33e2c:	cmp	x0, #0x0
   33e30:	b.eq	33e38 <udev_util_encode_string@@LIBUDEV_183+0x28608>  // b.none
   33e34:	bl	5390 <__stack_chk_fail@plt>
   33e38:	mov	w0, w1
   33e3c:	ldp	x29, x30, [sp], #176
   33e40:	ret
   33e44:	stp	x29, x30, [sp, #-32]!
   33e48:	mov	x29, sp
   33e4c:	str	x0, [sp, #24]
   33e50:	str	x1, [sp, #16]
   33e54:	ldr	x1, [sp, #16]
   33e58:	ldr	x0, [sp, #24]
   33e5c:	bl	3406c <udev_util_encode_string@@LIBUDEV_183+0x2883c>
   33e60:	cmp	w0, #0x0
   33e64:	cset	w0, eq  // eq = none
   33e68:	and	w0, w0, #0xff
   33e6c:	ldp	x29, x30, [sp], #32
   33e70:	ret
   33e74:	stp	x29, x30, [sp, #-64]!
   33e78:	mov	x29, sp
   33e7c:	str	x0, [sp, #40]
   33e80:	str	x1, [sp, #32]
   33e84:	str	x2, [sp, #24]
   33e88:	ldr	x0, [sp, #24]
   33e8c:	cmp	x0, #0x0
   33e90:	b.ne	33e9c <udev_util_encode_string@@LIBUDEV_183+0x2866c>  // b.any
   33e94:	mov	x0, #0xffffffffffffffff    	// #-1
   33e98:	b	33ef4 <udev_util_encode_string@@LIBUDEV_183+0x286c4>
   33e9c:	str	xzr, [sp, #56]
   33ea0:	b	33ee0 <udev_util_encode_string@@LIBUDEV_183+0x286b0>
   33ea4:	ldr	x0, [sp, #56]
   33ea8:	lsl	x0, x0, #3
   33eac:	ldr	x1, [sp, #40]
   33eb0:	add	x0, x1, x0
   33eb4:	ldr	x0, [x0]
   33eb8:	ldr	x1, [sp, #24]
   33ebc:	bl	33e44 <udev_util_encode_string@@LIBUDEV_183+0x28614>
   33ec0:	and	w0, w0, #0xff
   33ec4:	cmp	w0, #0x0
   33ec8:	b.eq	33ed4 <udev_util_encode_string@@LIBUDEV_183+0x286a4>  // b.none
   33ecc:	ldr	x0, [sp, #56]
   33ed0:	b	33ef4 <udev_util_encode_string@@LIBUDEV_183+0x286c4>
   33ed4:	ldr	x0, [sp, #56]
   33ed8:	add	x0, x0, #0x1
   33edc:	str	x0, [sp, #56]
   33ee0:	ldr	x1, [sp, #56]
   33ee4:	ldr	x0, [sp, #32]
   33ee8:	cmp	x1, x0
   33eec:	b.cc	33ea4 <udev_util_encode_string@@LIBUDEV_183+0x28674>  // b.lo, b.ul, b.last
   33ef0:	mov	x0, #0xffffffffffffffff    	// #-1
   33ef4:	ldp	x29, x30, [sp], #64
   33ef8:	ret
   33efc:	sub	sp, sp, #0x10
   33f00:	str	x0, [sp, #8]
   33f04:	str	x1, [sp]
   33f08:	ldr	x0, [sp]
   33f0c:	cmp	x0, #0x0
   33f10:	cset	w0, ne  // ne = any
   33f14:	and	w0, w0, #0xff
   33f18:	and	x0, x0, #0xff
   33f1c:	cmp	x0, #0x0
   33f20:	b.eq	33f64 <udev_util_encode_string@@LIBUDEV_183+0x28734>  // b.none
   33f24:	mov	x2, #0x0                   	// #0
   33f28:	ldr	x1, [sp, #8]
   33f2c:	ldr	x0, [sp]
   33f30:	umulh	x0, x1, x0
   33f34:	cmp	x0, #0x0
   33f38:	b.eq	33f40 <udev_util_encode_string@@LIBUDEV_183+0x28710>  // b.none
   33f3c:	mov	x2, #0x1                   	// #1
   33f40:	mov	x0, x2
   33f44:	cmp	x0, #0x0
   33f48:	cset	w0, ne  // ne = any
   33f4c:	and	w0, w0, #0xff
   33f50:	and	x0, x0, #0xff
   33f54:	cmp	x0, #0x0
   33f58:	b.eq	33f64 <udev_util_encode_string@@LIBUDEV_183+0x28734>  // b.none
   33f5c:	mov	w0, #0x1                   	// #1
   33f60:	b	33f68 <udev_util_encode_string@@LIBUDEV_183+0x28738>
   33f64:	mov	w0, #0x0                   	// #0
   33f68:	and	w0, w0, #0x1
   33f6c:	and	w0, w0, #0xff
   33f70:	add	sp, sp, #0x10
   33f74:	ret
   33f78:	stp	x29, x30, [sp, #-32]!
   33f7c:	mov	x29, sp
   33f80:	str	x0, [sp, #24]
   33f84:	str	x1, [sp, #16]
   33f88:	ldr	x1, [sp, #16]
   33f8c:	ldr	x0, [sp, #24]
   33f90:	bl	33efc <udev_util_encode_string@@LIBUDEV_183+0x286cc>
   33f94:	and	w0, w0, #0xff
   33f98:	cmp	w0, #0x0
   33f9c:	b.eq	33fa8 <udev_util_encode_string@@LIBUDEV_183+0x28778>  // b.none
   33fa0:	mov	x0, #0x0                   	// #0
   33fa4:	b	33fc4 <udev_util_encode_string@@LIBUDEV_183+0x28794>
   33fa8:	ldr	x1, [sp, #24]
   33fac:	ldr	x0, [sp, #16]
   33fb0:	mul	x0, x1, x0
   33fb4:	cmp	x0, #0x0
   33fb8:	b.ne	33fc0 <udev_util_encode_string@@LIBUDEV_183+0x28790>  // b.any
   33fbc:	mov	x0, #0x1                   	// #1
   33fc0:	bl	5220 <malloc@plt>
   33fc4:	ldp	x29, x30, [sp], #32
   33fc8:	ret
   33fcc:	stp	x29, x30, [sp, #-32]!
   33fd0:	mov	x29, sp
   33fd4:	str	x0, [sp, #24]
   33fd8:	str	x1, [sp, #16]
   33fdc:	ldr	x1, [sp, #16]
   33fe0:	ldr	x0, [sp, #24]
   33fe4:	bl	3406c <udev_util_encode_string@@LIBUDEV_183+0x2883c>
   33fe8:	cmp	w0, #0x0
   33fec:	cset	w0, eq  // eq = none
   33ff0:	and	w0, w0, #0xff
   33ff4:	ldp	x29, x30, [sp], #32
   33ff8:	ret
   33ffc:	sub	sp, sp, #0x10
   34000:	str	x0, [sp, #8]
   34004:	ldr	x0, [sp, #8]
   34008:	cmp	x0, #0x0
   3400c:	b.eq	34020 <udev_util_encode_string@@LIBUDEV_183+0x287f0>  // b.none
   34010:	ldr	x0, [sp, #8]
   34014:	ldrb	w0, [x0]
   34018:	cmp	w0, #0x0
   3401c:	b.ne	34028 <udev_util_encode_string@@LIBUDEV_183+0x287f8>  // b.any
   34020:	mov	w0, #0x1                   	// #1
   34024:	b	3402c <udev_util_encode_string@@LIBUDEV_183+0x287fc>
   34028:	mov	w0, #0x0                   	// #0
   3402c:	and	w0, w0, #0x1
   34030:	and	w0, w0, #0xff
   34034:	add	sp, sp, #0x10
   34038:	ret
   3403c:	stp	x29, x30, [sp, #-32]!
   34040:	mov	x29, sp
   34044:	str	x0, [sp, #24]
   34048:	ldr	x0, [sp, #24]
   3404c:	cmp	x0, #0x0
   34050:	b.ne	3405c <udev_util_encode_string@@LIBUDEV_183+0x2882c>  // b.any
   34054:	mov	x0, #0x0                   	// #0
   34058:	b	34064 <udev_util_encode_string@@LIBUDEV_183+0x28834>
   3405c:	ldr	x0, [sp, #24]
   34060:	bl	5040 <strlen@plt>
   34064:	ldp	x29, x30, [sp], #32
   34068:	ret
   3406c:	stp	x29, x30, [sp, #-32]!
   34070:	mov	x29, sp
   34074:	str	x0, [sp, #24]
   34078:	str	x1, [sp, #16]
   3407c:	ldr	x0, [sp, #24]
   34080:	cmp	x0, #0x0
   34084:	b.eq	340a4 <udev_util_encode_string@@LIBUDEV_183+0x28874>  // b.none
   34088:	ldr	x0, [sp, #16]
   3408c:	cmp	x0, #0x0
   34090:	b.eq	340a4 <udev_util_encode_string@@LIBUDEV_183+0x28874>  // b.none
   34094:	ldr	x1, [sp, #16]
   34098:	ldr	x0, [sp, #24]
   3409c:	bl	5440 <strcmp@plt>
   340a0:	b	340e8 <udev_util_encode_string@@LIBUDEV_183+0x288b8>
   340a4:	ldr	x0, [sp, #24]
   340a8:	cmp	x0, #0x0
   340ac:	b.ne	340c4 <udev_util_encode_string@@LIBUDEV_183+0x28894>  // b.any
   340b0:	ldr	x0, [sp, #16]
   340b4:	cmp	x0, #0x0
   340b8:	b.eq	340c4 <udev_util_encode_string@@LIBUDEV_183+0x28894>  // b.none
   340bc:	mov	w0, #0xffffffff            	// #-1
   340c0:	b	340e8 <udev_util_encode_string@@LIBUDEV_183+0x288b8>
   340c4:	ldr	x0, [sp, #24]
   340c8:	cmp	x0, #0x0
   340cc:	b.eq	340e4 <udev_util_encode_string@@LIBUDEV_183+0x288b4>  // b.none
   340d0:	ldr	x0, [sp, #16]
   340d4:	cmp	x0, #0x0
   340d8:	b.ne	340e4 <udev_util_encode_string@@LIBUDEV_183+0x288b4>  // b.any
   340dc:	mov	w0, #0x1                   	// #1
   340e0:	b	340e8 <udev_util_encode_string@@LIBUDEV_183+0x288b8>
   340e4:	mov	w0, #0x0                   	// #0
   340e8:	ldp	x29, x30, [sp], #32
   340ec:	ret
   340f0:	stp	x29, x30, [sp, #-48]!
   340f4:	mov	x29, sp
   340f8:	str	x0, [sp, #24]
   340fc:	str	x1, [sp, #16]
   34100:	ldr	x0, [sp, #24]
   34104:	cmp	x0, #0x0
   34108:	cset	w0, eq  // eq = none
   3410c:	and	w0, w0, #0xff
   34110:	and	x0, x0, #0xff
   34114:	cmp	x0, #0x0
   34118:	b.eq	34144 <udev_util_encode_string@@LIBUDEV_183+0x28914>  // b.none
   3411c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34120:	add	x1, x0, #0x1bb
   34124:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34128:	add	x4, x0, #0x3e0
   3412c:	mov	w3, #0x27                  	// #39
   34130:	mov	x2, x1
   34134:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34138:	add	x1, x0, #0x1d8
   3413c:	mov	w0, #0x0                   	// #0
   34140:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34144:	ldr	x0, [sp, #16]
   34148:	cmp	x0, #0x0
   3414c:	cset	w0, eq  // eq = none
   34150:	and	w0, w0, #0xff
   34154:	and	x0, x0, #0xff
   34158:	cmp	x0, #0x0
   3415c:	b.eq	34188 <udev_util_encode_string@@LIBUDEV_183+0x28958>  // b.none
   34160:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34164:	add	x1, x0, #0x1bb
   34168:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3416c:	add	x4, x0, #0x3e0
   34170:	mov	w3, #0x28                  	// #40
   34174:	mov	x2, x1
   34178:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3417c:	add	x1, x0, #0x1e0
   34180:	mov	w0, #0x0                   	// #0
   34184:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34188:	ldr	x0, [sp, #24]
   3418c:	bl	5040 <strlen@plt>
   34190:	str	x0, [sp, #32]
   34194:	ldr	x0, [sp, #16]
   34198:	bl	5040 <strlen@plt>
   3419c:	str	x0, [sp, #40]
   341a0:	ldr	x0, [sp, #40]
   341a4:	cmp	x0, #0x0
   341a8:	b.ne	341bc <udev_util_encode_string@@LIBUDEV_183+0x2898c>  // b.any
   341ac:	ldr	x1, [sp, #24]
   341b0:	ldr	x0, [sp, #32]
   341b4:	add	x0, x1, x0
   341b8:	b	34218 <udev_util_encode_string@@LIBUDEV_183+0x289e8>
   341bc:	ldr	x1, [sp, #32]
   341c0:	ldr	x0, [sp, #40]
   341c4:	cmp	x1, x0
   341c8:	b.cs	341d4 <udev_util_encode_string@@LIBUDEV_183+0x289a4>  // b.hs, b.nlast
   341cc:	mov	x0, #0x0                   	// #0
   341d0:	b	34218 <udev_util_encode_string@@LIBUDEV_183+0x289e8>
   341d4:	ldr	x1, [sp, #32]
   341d8:	ldr	x0, [sp, #40]
   341dc:	sub	x0, x1, x0
   341e0:	ldr	x1, [sp, #24]
   341e4:	add	x0, x1, x0
   341e8:	ldr	x2, [sp, #40]
   341ec:	ldr	x1, [sp, #16]
   341f0:	bl	5410 <memcmp@plt>
   341f4:	cmp	w0, #0x0
   341f8:	b.eq	34204 <udev_util_encode_string@@LIBUDEV_183+0x289d4>  // b.none
   341fc:	mov	x0, #0x0                   	// #0
   34200:	b	34218 <udev_util_encode_string@@LIBUDEV_183+0x289e8>
   34204:	ldr	x1, [sp, #32]
   34208:	ldr	x0, [sp, #40]
   3420c:	sub	x0, x1, x0
   34210:	ldr	x1, [sp, #24]
   34214:	add	x0, x1, x0
   34218:	ldp	x29, x30, [sp], #48
   3421c:	ret
   34220:	stp	x29, x30, [sp, #-48]!
   34224:	mov	x29, sp
   34228:	str	x0, [sp, #24]
   3422c:	str	x1, [sp, #16]
   34230:	strb	wzr, [sp, #43]
   34234:	str	wzr, [sp, #44]
   34238:	b	342a4 <udev_util_encode_string@@LIBUDEV_183+0x28a74>
   3423c:	ldrb	w0, [sp, #43]
   34240:	cmp	w0, #0x0
   34244:	b.eq	34250 <udev_util_encode_string@@LIBUDEV_183+0x28a20>  // b.none
   34248:	strb	wzr, [sp, #43]
   3424c:	b	34298 <udev_util_encode_string@@LIBUDEV_183+0x28a68>
   34250:	ldrsw	x0, [sp, #44]
   34254:	ldr	x1, [sp, #24]
   34258:	add	x0, x1, x0
   3425c:	ldrb	w0, [x0]
   34260:	cmp	w0, #0x5c
   34264:	b.ne	34274 <udev_util_encode_string@@LIBUDEV_183+0x28a44>  // b.any
   34268:	mov	w0, #0x1                   	// #1
   3426c:	strb	w0, [sp, #43]
   34270:	b	34298 <udev_util_encode_string@@LIBUDEV_183+0x28a68>
   34274:	ldrsw	x0, [sp, #44]
   34278:	ldr	x1, [sp, #24]
   3427c:	add	x0, x1, x0
   34280:	ldrb	w0, [x0]
   34284:	mov	w1, w0
   34288:	ldr	x0, [sp, #16]
   3428c:	bl	5570 <strchr@plt>
   34290:	cmp	x0, #0x0
   34294:	b.ne	342c0 <udev_util_encode_string@@LIBUDEV_183+0x28a90>  // b.any
   34298:	ldr	w0, [sp, #44]
   3429c:	add	w0, w0, #0x1
   342a0:	str	w0, [sp, #44]
   342a4:	ldrsw	x0, [sp, #44]
   342a8:	ldr	x1, [sp, #24]
   342ac:	add	x0, x1, x0
   342b0:	ldrb	w0, [x0]
   342b4:	cmp	w0, #0x0
   342b8:	b.ne	3423c <udev_util_encode_string@@LIBUDEV_183+0x28a0c>  // b.any
   342bc:	b	342c4 <udev_util_encode_string@@LIBUDEV_183+0x28a94>
   342c0:	nop
   342c4:	ldrb	w0, [sp, #43]
   342c8:	ldr	w1, [sp, #44]
   342cc:	sub	w0, w1, w0
   342d0:	sxtw	x0, w0
   342d4:	ldp	x29, x30, [sp], #48
   342d8:	ret
   342dc:	stp	x29, x30, [sp, #-80]!
   342e0:	mov	x29, sp
   342e4:	str	x0, [sp, #40]
   342e8:	str	x1, [sp, #32]
   342ec:	str	x2, [sp, #24]
   342f0:	str	w3, [sp, #20]
   342f4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   342f8:	ldr	x0, [x0, #4016]
   342fc:	ldr	x1, [x0]
   34300:	str	x1, [sp, #72]
   34304:	mov	x1, #0x0                   	// #0
   34308:	ldr	x0, [sp, #40]
   3430c:	ldr	x0, [x0]
   34310:	str	x0, [sp, #56]
   34314:	ldr	x0, [sp, #56]
   34318:	ldrb	w0, [x0]
   3431c:	cmp	w0, #0x0
   34320:	b.ne	34378 <udev_util_encode_string@@LIBUDEV_183+0x28b48>  // b.any
   34324:	ldr	x0, [sp, #40]
   34328:	ldr	x0, [x0]
   3432c:	ldrb	w0, [x0]
   34330:	cmp	w0, #0x0
   34334:	cset	w0, ne  // ne = any
   34338:	and	w0, w0, #0xff
   3433c:	and	x0, x0, #0xff
   34340:	cmp	x0, #0x0
   34344:	b.eq	34370 <udev_util_encode_string@@LIBUDEV_183+0x28b40>  // b.none
   34348:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3434c:	add	x1, x0, #0x1bb
   34350:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34354:	add	x4, x0, #0x3f0
   34358:	mov	w3, #0x88                  	// #136
   3435c:	mov	x2, x1
   34360:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34364:	add	x1, x0, #0x1f0
   34368:	mov	w0, #0x0                   	// #0
   3436c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34370:	mov	x0, #0x0                   	// #0
   34374:	b	34624 <udev_util_encode_string@@LIBUDEV_183+0x28df4>
   34378:	ldr	x1, [sp, #24]
   3437c:	ldr	x0, [sp, #56]
   34380:	bl	5560 <strspn@plt>
   34384:	mov	x1, x0
   34388:	ldr	x0, [sp, #56]
   3438c:	add	x0, x0, x1
   34390:	str	x0, [sp, #56]
   34394:	ldr	x0, [sp, #56]
   34398:	ldrb	w0, [x0]
   3439c:	cmp	w0, #0x0
   343a0:	b.ne	343b8 <udev_util_encode_string@@LIBUDEV_183+0x28b88>  // b.any
   343a4:	ldr	x0, [sp, #40]
   343a8:	ldr	x1, [sp, #56]
   343ac:	str	x1, [x0]
   343b0:	mov	x0, #0x0                   	// #0
   343b4:	b	34624 <udev_util_encode_string@@LIBUDEV_183+0x28df4>
   343b8:	ldr	w0, [sp, #20]
   343bc:	and	w0, w0, #0x1
   343c0:	cmp	w0, #0x0
   343c4:	b.eq	34544 <udev_util_encode_string@@LIBUDEV_183+0x28d14>  // b.none
   343c8:	ldr	x0, [sp, #56]
   343cc:	ldrb	w0, [x0]
   343d0:	mov	w1, w0
   343d4:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   343d8:	add	x0, x0, #0x200
   343dc:	bl	5570 <strchr@plt>
   343e0:	cmp	x0, #0x0
   343e4:	b.eq	34544 <udev_util_encode_string@@LIBUDEV_183+0x28d14>  // b.none
   343e8:	ldr	x0, [sp, #56]
   343ec:	ldrb	w0, [x0]
   343f0:	strb	w0, [sp, #64]
   343f4:	strb	wzr, [sp, #65]
   343f8:	ldr	x0, [sp, #56]
   343fc:	add	x0, x0, #0x1
   34400:	add	x1, sp, #0x40
   34404:	bl	34220 <udev_util_encode_string@@LIBUDEV_183+0x289f0>
   34408:	mov	x1, x0
   3440c:	ldr	x0, [sp, #32]
   34410:	str	x1, [x0]
   34414:	ldr	x0, [sp, #32]
   34418:	ldr	x0, [x0]
   3441c:	add	x0, x0, #0x1
   34420:	ldr	x1, [sp, #56]
   34424:	add	x0, x1, x0
   34428:	ldrb	w0, [x0]
   3442c:	cmp	w0, #0x0
   34430:	b.eq	344a4 <udev_util_encode_string@@LIBUDEV_183+0x28c74>  // b.none
   34434:	ldr	x0, [sp, #32]
   34438:	ldr	x0, [x0]
   3443c:	add	x0, x0, #0x1
   34440:	ldr	x1, [sp, #56]
   34444:	add	x0, x1, x0
   34448:	ldrb	w1, [x0]
   3444c:	ldrb	w0, [sp, #64]
   34450:	cmp	w1, w0
   34454:	b.ne	344a4 <udev_util_encode_string@@LIBUDEV_183+0x28c74>  // b.any
   34458:	ldr	x0, [sp, #32]
   3445c:	ldr	x0, [x0]
   34460:	add	x0, x0, #0x2
   34464:	ldr	x1, [sp, #56]
   34468:	add	x0, x1, x0
   3446c:	ldrb	w0, [x0]
   34470:	cmp	w0, #0x0
   34474:	b.eq	3451c <udev_util_encode_string@@LIBUDEV_183+0x28cec>  // b.none
   34478:	ldr	x0, [sp, #32]
   3447c:	ldr	x0, [x0]
   34480:	add	x0, x0, #0x2
   34484:	ldr	x1, [sp, #56]
   34488:	add	x0, x1, x0
   3448c:	ldrb	w0, [x0]
   34490:	mov	w1, w0
   34494:	ldr	x0, [sp, #24]
   34498:	bl	5570 <strchr@plt>
   3449c:	cmp	x0, #0x0
   344a0:	b.ne	3451c <udev_util_encode_string@@LIBUDEV_183+0x28cec>  // b.any
   344a4:	ldr	w0, [sp, #20]
   344a8:	and	w0, w0, #0x2
   344ac:	cmp	w0, #0x0
   344b0:	b.eq	34508 <udev_util_encode_string@@LIBUDEV_183+0x28cd8>  // b.none
   344b4:	ldr	x0, [sp, #32]
   344b8:	ldr	x1, [x0]
   344bc:	ldr	x0, [sp, #32]
   344c0:	ldr	x0, [x0]
   344c4:	add	x0, x0, #0x1
   344c8:	ldr	x2, [sp, #56]
   344cc:	add	x0, x2, x0
   344d0:	ldrb	w0, [x0]
   344d4:	cmp	w0, #0x0
   344d8:	cset	w0, ne  // ne = any
   344dc:	and	w0, w0, #0xff
   344e0:	and	x0, x0, #0xff
   344e4:	add	x0, x1, x0
   344e8:	add	x0, x0, #0x1
   344ec:	ldr	x1, [sp, #56]
   344f0:	add	x1, x1, x0
   344f4:	ldr	x0, [sp, #40]
   344f8:	str	x1, [x0]
   344fc:	ldr	x0, [sp, #56]
   34500:	add	x0, x0, #0x1
   34504:	b	34624 <udev_util_encode_string@@LIBUDEV_183+0x28df4>
   34508:	ldr	x0, [sp, #40]
   3450c:	ldr	x1, [sp, #56]
   34510:	str	x1, [x0]
   34514:	mov	x0, #0x0                   	// #0
   34518:	b	34624 <udev_util_encode_string@@LIBUDEV_183+0x28df4>
   3451c:	ldr	x0, [sp, #56]
   34520:	add	x1, x0, #0x1
   34524:	str	x1, [sp, #56]
   34528:	ldr	x1, [sp, #32]
   3452c:	ldr	x1, [x1]
   34530:	add	x1, x1, #0x2
   34534:	add	x1, x0, x1
   34538:	ldr	x0, [sp, #40]
   3453c:	str	x1, [x0]
   34540:	b	34620 <udev_util_encode_string@@LIBUDEV_183+0x28df0>
   34544:	ldr	w0, [sp, #20]
   34548:	and	w0, w0, #0x1
   3454c:	cmp	w0, #0x0
   34550:	b.eq	345f0 <udev_util_encode_string@@LIBUDEV_183+0x28dc0>  // b.none
   34554:	ldr	x1, [sp, #24]
   34558:	ldr	x0, [sp, #56]
   3455c:	bl	34220 <udev_util_encode_string@@LIBUDEV_183+0x289f0>
   34560:	mov	x1, x0
   34564:	ldr	x0, [sp, #32]
   34568:	str	x1, [x0]
   3456c:	ldr	x0, [sp, #32]
   34570:	ldr	x0, [x0]
   34574:	ldr	x1, [sp, #56]
   34578:	add	x0, x1, x0
   3457c:	ldrb	w0, [x0]
   34580:	cmp	w0, #0x0
   34584:	b.eq	345d4 <udev_util_encode_string@@LIBUDEV_183+0x28da4>  // b.none
   34588:	ldr	x0, [sp, #32]
   3458c:	ldr	x0, [x0]
   34590:	ldr	x1, [sp, #56]
   34594:	add	x0, x1, x0
   34598:	ldrb	w0, [x0]
   3459c:	mov	w1, w0
   345a0:	ldr	x0, [sp, #24]
   345a4:	bl	5570 <strchr@plt>
   345a8:	cmp	x0, #0x0
   345ac:	b.ne	345d4 <udev_util_encode_string@@LIBUDEV_183+0x28da4>  // b.any
   345b0:	ldr	w0, [sp, #20]
   345b4:	and	w0, w0, #0x2
   345b8:	cmp	w0, #0x0
   345bc:	b.ne	345d4 <udev_util_encode_string@@LIBUDEV_183+0x28da4>  // b.any
   345c0:	ldr	x0, [sp, #40]
   345c4:	ldr	x1, [sp, #56]
   345c8:	str	x1, [x0]
   345cc:	mov	x0, #0x0                   	// #0
   345d0:	b	34624 <udev_util_encode_string@@LIBUDEV_183+0x28df4>
   345d4:	ldr	x0, [sp, #32]
   345d8:	ldr	x0, [x0]
   345dc:	ldr	x1, [sp, #56]
   345e0:	add	x1, x1, x0
   345e4:	ldr	x0, [sp, #40]
   345e8:	str	x1, [x0]
   345ec:	b	34620 <udev_util_encode_string@@LIBUDEV_183+0x28df0>
   345f0:	ldr	x1, [sp, #24]
   345f4:	ldr	x0, [sp, #56]
   345f8:	bl	57c0 <strcspn@plt>
   345fc:	mov	x1, x0
   34600:	ldr	x0, [sp, #32]
   34604:	str	x1, [x0]
   34608:	ldr	x0, [sp, #32]
   3460c:	ldr	x0, [x0]
   34610:	ldr	x1, [sp, #56]
   34614:	add	x1, x1, x0
   34618:	ldr	x0, [sp, #40]
   3461c:	str	x1, [x0]
   34620:	ldr	x0, [sp, #56]
   34624:	mov	x1, x0
   34628:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3462c:	ldr	x0, [x0, #4016]
   34630:	ldr	x2, [sp, #72]
   34634:	ldr	x0, [x0]
   34638:	eor	x0, x2, x0
   3463c:	cmp	x0, #0x0
   34640:	b.eq	34648 <udev_util_encode_string@@LIBUDEV_183+0x28e18>  // b.none
   34644:	bl	5390 <__stack_chk_fail@plt>
   34648:	mov	x0, x1
   3464c:	ldp	x29, x30, [sp], #80
   34650:	ret
   34654:	stp	x29, x30, [sp, #-320]!
   34658:	mov	x29, sp
   3465c:	str	x0, [sp, #24]
   34660:	str	x1, [sp, #264]
   34664:	str	x2, [sp, #272]
   34668:	str	x3, [sp, #280]
   3466c:	str	x4, [sp, #288]
   34670:	str	x5, [sp, #296]
   34674:	str	x6, [sp, #304]
   34678:	str	x7, [sp, #312]
   3467c:	str	q0, [sp, #128]
   34680:	str	q1, [sp, #144]
   34684:	str	q2, [sp, #160]
   34688:	str	q3, [sp, #176]
   3468c:	str	q4, [sp, #192]
   34690:	str	q5, [sp, #208]
   34694:	str	q6, [sp, #224]
   34698:	str	q7, [sp, #240]
   3469c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   346a0:	ldr	x0, [x0, #4016]
   346a4:	ldr	x1, [x0]
   346a8:	str	x1, [sp, #120]
   346ac:	mov	x1, #0x0                   	// #0
   346b0:	add	x0, sp, #0x140
   346b4:	str	x0, [sp, #88]
   346b8:	add	x0, sp, #0x140
   346bc:	str	x0, [sp, #96]
   346c0:	add	x0, sp, #0x100
   346c4:	str	x0, [sp, #104]
   346c8:	mov	w0, #0xffffffc8            	// #-56
   346cc:	str	w0, [sp, #112]
   346d0:	mov	w0, #0xffffff80            	// #-128
   346d4:	str	w0, [sp, #116]
   346d8:	ldr	x0, [sp, #24]
   346dc:	cmp	x0, #0x0
   346e0:	b.eq	34790 <udev_util_encode_string@@LIBUDEV_183+0x28f60>  // b.none
   346e4:	ldr	x0, [sp, #24]
   346e8:	bl	5040 <strlen@plt>
   346ec:	str	x0, [sp, #40]
   346f0:	ldr	w1, [sp, #112]
   346f4:	ldr	x0, [sp, #88]
   346f8:	cmp	w1, #0x0
   346fc:	b.lt	34710 <udev_util_encode_string@@LIBUDEV_183+0x28ee0>  // b.tstop
   34700:	add	x1, x0, #0xf
   34704:	and	x1, x1, #0xfffffffffffffff8
   34708:	str	x1, [sp, #88]
   3470c:	b	34740 <udev_util_encode_string@@LIBUDEV_183+0x28f10>
   34710:	add	w2, w1, #0x8
   34714:	str	w2, [sp, #112]
   34718:	ldr	w2, [sp, #112]
   3471c:	cmp	w2, #0x0
   34720:	b.le	34734 <udev_util_encode_string@@LIBUDEV_183+0x28f04>
   34724:	add	x1, x0, #0xf
   34728:	and	x1, x1, #0xfffffffffffffff8
   3472c:	str	x1, [sp, #88]
   34730:	b	34740 <udev_util_encode_string@@LIBUDEV_183+0x28f10>
   34734:	ldr	x2, [sp, #96]
   34738:	sxtw	x0, w1
   3473c:	add	x0, x2, x0
   34740:	ldr	x0, [x0]
   34744:	str	x0, [sp, #56]
   34748:	ldr	x0, [sp, #56]
   3474c:	cmp	x0, #0x0
   34750:	b.eq	34798 <udev_util_encode_string@@LIBUDEV_183+0x28f68>  // b.none
   34754:	ldr	x0, [sp, #56]
   34758:	bl	5040 <strlen@plt>
   3475c:	str	x0, [sp, #64]
   34760:	ldr	x0, [sp, #40]
   34764:	mvn	x0, x0
   34768:	ldr	x1, [sp, #64]
   3476c:	cmp	x1, x0
   34770:	b.ls	3477c <udev_util_encode_string@@LIBUDEV_183+0x28f4c>  // b.plast
   34774:	mov	x0, #0x0                   	// #0
   34778:	b	34898 <udev_util_encode_string@@LIBUDEV_183+0x29068>
   3477c:	ldr	x1, [sp, #40]
   34780:	ldr	x0, [sp, #64]
   34784:	add	x0, x1, x0
   34788:	str	x0, [sp, #40]
   3478c:	b	346f0 <udev_util_encode_string@@LIBUDEV_183+0x28ec0>
   34790:	str	xzr, [sp, #40]
   34794:	b	3479c <udev_util_encode_string@@LIBUDEV_183+0x28f6c>
   34798:	nop
   3479c:	ldr	x0, [sp, #40]
   347a0:	add	x0, x0, #0x1
   347a4:	mov	x1, x0
   347a8:	mov	x0, #0x1                   	// #1
   347ac:	bl	33f78 <udev_util_encode_string@@LIBUDEV_183+0x28748>
   347b0:	str	x0, [sp, #72]
   347b4:	ldr	x0, [sp, #72]
   347b8:	cmp	x0, #0x0
   347bc:	b.ne	347c8 <udev_util_encode_string@@LIBUDEV_183+0x28f98>  // b.any
   347c0:	mov	x0, #0x0                   	// #0
   347c4:	b	34898 <udev_util_encode_string@@LIBUDEV_183+0x29068>
   347c8:	ldr	x0, [sp, #24]
   347cc:	cmp	x0, #0x0
   347d0:	b.eq	34884 <udev_util_encode_string@@LIBUDEV_183+0x29054>  // b.none
   347d4:	ldr	x1, [sp, #24]
   347d8:	ldr	x0, [sp, #72]
   347dc:	bl	51b0 <stpcpy@plt>
   347e0:	str	x0, [sp, #48]
   347e4:	add	x0, sp, #0x140
   347e8:	str	x0, [sp, #88]
   347ec:	add	x0, sp, #0x140
   347f0:	str	x0, [sp, #96]
   347f4:	add	x0, sp, #0x100
   347f8:	str	x0, [sp, #104]
   347fc:	mov	w0, #0xffffffc8            	// #-56
   34800:	str	w0, [sp, #112]
   34804:	mov	w0, #0xffffff80            	// #-128
   34808:	str	w0, [sp, #116]
   3480c:	ldr	w1, [sp, #112]
   34810:	ldr	x0, [sp, #88]
   34814:	cmp	w1, #0x0
   34818:	b.lt	3482c <udev_util_encode_string@@LIBUDEV_183+0x28ffc>  // b.tstop
   3481c:	add	x1, x0, #0xf
   34820:	and	x1, x1, #0xfffffffffffffff8
   34824:	str	x1, [sp, #88]
   34828:	b	3485c <udev_util_encode_string@@LIBUDEV_183+0x2902c>
   3482c:	add	w2, w1, #0x8
   34830:	str	w2, [sp, #112]
   34834:	ldr	w2, [sp, #112]
   34838:	cmp	w2, #0x0
   3483c:	b.le	34850 <udev_util_encode_string@@LIBUDEV_183+0x29020>
   34840:	add	x1, x0, #0xf
   34844:	and	x1, x1, #0xfffffffffffffff8
   34848:	str	x1, [sp, #88]
   3484c:	b	3485c <udev_util_encode_string@@LIBUDEV_183+0x2902c>
   34850:	ldr	x2, [sp, #96]
   34854:	sxtw	x0, w1
   34858:	add	x0, x2, x0
   3485c:	ldr	x0, [x0]
   34860:	str	x0, [sp, #80]
   34864:	ldr	x0, [sp, #80]
   34868:	cmp	x0, #0x0
   3486c:	b.eq	34890 <udev_util_encode_string@@LIBUDEV_183+0x29060>  // b.none
   34870:	ldr	x1, [sp, #80]
   34874:	ldr	x0, [sp, #48]
   34878:	bl	51b0 <stpcpy@plt>
   3487c:	str	x0, [sp, #48]
   34880:	b	3480c <udev_util_encode_string@@LIBUDEV_183+0x28fdc>
   34884:	ldr	x0, [sp, #72]
   34888:	strb	wzr, [x0]
   3488c:	b	34894 <udev_util_encode_string@@LIBUDEV_183+0x29064>
   34890:	nop
   34894:	ldr	x0, [sp, #72]
   34898:	mov	x1, x0
   3489c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   348a0:	ldr	x0, [x0, #4016]
   348a4:	ldr	x2, [sp, #120]
   348a8:	ldr	x0, [x0]
   348ac:	eor	x0, x2, x0
   348b0:	cmp	x0, #0x0
   348b4:	b.eq	348bc <udev_util_encode_string@@LIBUDEV_183+0x2908c>  // b.none
   348b8:	bl	5390 <__stack_chk_fail@plt>
   348bc:	mov	x0, x1
   348c0:	ldp	x29, x30, [sp], #320
   348c4:	ret
   348c8:	stp	x29, x30, [sp, #-320]!
   348cc:	mov	x29, sp
   348d0:	str	x0, [sp, #24]
   348d4:	str	x1, [sp, #16]
   348d8:	str	x2, [sp, #272]
   348dc:	str	x3, [sp, #280]
   348e0:	str	x4, [sp, #288]
   348e4:	str	x5, [sp, #296]
   348e8:	str	x6, [sp, #304]
   348ec:	str	x7, [sp, #312]
   348f0:	str	q0, [sp, #144]
   348f4:	str	q1, [sp, #160]
   348f8:	str	q2, [sp, #176]
   348fc:	str	q3, [sp, #192]
   34900:	str	q4, [sp, #208]
   34904:	str	q5, [sp, #224]
   34908:	str	q6, [sp, #240]
   3490c:	str	q7, [sp, #256]
   34910:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   34914:	ldr	x0, [x0, #4016]
   34918:	ldr	x1, [x0]
   3491c:	str	x1, [sp, #136]
   34920:	mov	x1, #0x0                   	// #0
   34924:	ldr	x0, [sp, #24]
   34928:	cmp	x0, #0x0
   3492c:	cset	w0, eq  // eq = none
   34930:	and	w0, w0, #0xff
   34934:	and	x0, x0, #0xff
   34938:	cmp	x0, #0x0
   3493c:	b.eq	34968 <udev_util_encode_string@@LIBUDEV_183+0x29138>  // b.none
   34940:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34944:	add	x1, x0, #0x1bb
   34948:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3494c:	add	x4, x0, #0x3f8
   34950:	mov	w3, #0x377                 	// #887
   34954:	mov	x2, x1
   34958:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3495c:	add	x1, x0, #0x378
   34960:	mov	w0, #0x0                   	// #0
   34964:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34968:	ldr	x0, [sp, #24]
   3496c:	ldr	x0, [x0]
   34970:	bl	3403c <udev_util_encode_string@@LIBUDEV_183+0x2880c>
   34974:	str	x0, [sp, #64]
   34978:	ldr	x0, [sp, #64]
   3497c:	str	x0, [sp, #40]
   34980:	ldr	x0, [sp, #24]
   34984:	ldr	x0, [x0]
   34988:	bl	33ffc <udev_util_encode_string@@LIBUDEV_183+0x287cc>
   3498c:	and	w0, w0, #0xff
   34990:	cmp	w0, #0x0
   34994:	cset	w0, ne  // ne = any
   34998:	and	w0, w0, #0xff
   3499c:	eor	w0, w0, #0x1
   349a0:	and	w0, w0, #0xff
   349a4:	strb	w0, [sp, #39]
   349a8:	ldrb	w0, [sp, #39]
   349ac:	and	w0, w0, #0x1
   349b0:	strb	w0, [sp, #39]
   349b4:	ldr	x0, [sp, #16]
   349b8:	bl	3403c <udev_util_encode_string@@LIBUDEV_183+0x2880c>
   349bc:	str	x0, [sp, #72]
   349c0:	add	x0, sp, #0x140
   349c4:	str	x0, [sp, #104]
   349c8:	add	x0, sp, #0x140
   349cc:	str	x0, [sp, #112]
   349d0:	add	x0, sp, #0x110
   349d4:	str	x0, [sp, #120]
   349d8:	mov	w0, #0xffffffd0            	// #-48
   349dc:	str	w0, [sp, #128]
   349e0:	mov	w0, #0xffffff80            	// #-128
   349e4:	str	w0, [sp, #132]
   349e8:	ldr	w1, [sp, #128]
   349ec:	ldr	x0, [sp, #104]
   349f0:	cmp	w1, #0x0
   349f4:	b.lt	34a08 <udev_util_encode_string@@LIBUDEV_183+0x291d8>  // b.tstop
   349f8:	add	x1, x0, #0xf
   349fc:	and	x1, x1, #0xfffffffffffffff8
   34a00:	str	x1, [sp, #104]
   34a04:	b	34a38 <udev_util_encode_string@@LIBUDEV_183+0x29208>
   34a08:	add	w2, w1, #0x8
   34a0c:	str	w2, [sp, #128]
   34a10:	ldr	w2, [sp, #128]
   34a14:	cmp	w2, #0x0
   34a18:	b.le	34a2c <udev_util_encode_string@@LIBUDEV_183+0x291fc>
   34a1c:	add	x1, x0, #0xf
   34a20:	and	x1, x1, #0xfffffffffffffff8
   34a24:	str	x1, [sp, #104]
   34a28:	b	34a38 <udev_util_encode_string@@LIBUDEV_183+0x29208>
   34a2c:	ldr	x2, [sp, #112]
   34a30:	sxtw	x0, w1
   34a34:	add	x0, x2, x0
   34a38:	ldr	x0, [x0]
   34a3c:	str	x0, [sp, #80]
   34a40:	ldr	x0, [sp, #80]
   34a44:	cmp	x0, #0x0
   34a48:	b.eq	34aac <udev_util_encode_string@@LIBUDEV_183+0x2927c>  // b.none
   34a4c:	ldr	x0, [sp, #80]
   34a50:	bl	5040 <strlen@plt>
   34a54:	str	x0, [sp, #56]
   34a58:	ldrb	w0, [sp, #39]
   34a5c:	cmp	w0, #0x0
   34a60:	b.eq	34a74 <udev_util_encode_string@@LIBUDEV_183+0x29244>  // b.none
   34a64:	ldr	x1, [sp, #56]
   34a68:	ldr	x0, [sp, #72]
   34a6c:	add	x0, x1, x0
   34a70:	str	x0, [sp, #56]
   34a74:	ldr	x0, [sp, #40]
   34a78:	mvn	x0, x0
   34a7c:	ldr	x1, [sp, #56]
   34a80:	cmp	x1, x0
   34a84:	b.ls	34a90 <udev_util_encode_string@@LIBUDEV_183+0x29260>  // b.plast
   34a88:	mov	x0, #0x0                   	// #0
   34a8c:	b	34c6c <udev_util_encode_string@@LIBUDEV_183+0x2943c>
   34a90:	ldr	x1, [sp, #40]
   34a94:	ldr	x0, [sp, #56]
   34a98:	add	x0, x1, x0
   34a9c:	str	x0, [sp, #40]
   34aa0:	mov	w0, #0x1                   	// #1
   34aa4:	strb	w0, [sp, #39]
   34aa8:	b	349e8 <udev_util_encode_string@@LIBUDEV_183+0x291b8>
   34aac:	nop
   34ab0:	ldr	x0, [sp, #24]
   34ab4:	ldr	x0, [x0]
   34ab8:	bl	33ffc <udev_util_encode_string@@LIBUDEV_183+0x287cc>
   34abc:	and	w0, w0, #0xff
   34ac0:	cmp	w0, #0x0
   34ac4:	cset	w0, ne  // ne = any
   34ac8:	and	w0, w0, #0xff
   34acc:	eor	w0, w0, #0x1
   34ad0:	and	w0, w0, #0xff
   34ad4:	strb	w0, [sp, #39]
   34ad8:	ldrb	w0, [sp, #39]
   34adc:	and	w0, w0, #0x1
   34ae0:	strb	w0, [sp, #39]
   34ae4:	ldr	x0, [sp, #24]
   34ae8:	ldr	x2, [x0]
   34aec:	ldr	x0, [sp, #40]
   34af0:	add	x0, x0, #0x1
   34af4:	mov	x1, x0
   34af8:	mov	x0, x2
   34afc:	bl	5330 <realloc@plt>
   34b00:	str	x0, [sp, #88]
   34b04:	ldr	x0, [sp, #88]
   34b08:	cmp	x0, #0x0
   34b0c:	b.ne	34b18 <udev_util_encode_string@@LIBUDEV_183+0x292e8>  // b.any
   34b10:	mov	x0, #0x0                   	// #0
   34b14:	b	34c6c <udev_util_encode_string@@LIBUDEV_183+0x2943c>
   34b18:	ldr	x1, [sp, #88]
   34b1c:	ldr	x0, [sp, #64]
   34b20:	add	x0, x1, x0
   34b24:	str	x0, [sp, #48]
   34b28:	add	x0, sp, #0x140
   34b2c:	str	x0, [sp, #104]
   34b30:	add	x0, sp, #0x140
   34b34:	str	x0, [sp, #112]
   34b38:	add	x0, sp, #0x110
   34b3c:	str	x0, [sp, #120]
   34b40:	mov	w0, #0xffffffd0            	// #-48
   34b44:	str	w0, [sp, #128]
   34b48:	mov	w0, #0xffffff80            	// #-128
   34b4c:	str	w0, [sp, #132]
   34b50:	ldr	w1, [sp, #128]
   34b54:	ldr	x0, [sp, #104]
   34b58:	cmp	w1, #0x0
   34b5c:	b.lt	34b70 <udev_util_encode_string@@LIBUDEV_183+0x29340>  // b.tstop
   34b60:	add	x1, x0, #0xf
   34b64:	and	x1, x1, #0xfffffffffffffff8
   34b68:	str	x1, [sp, #104]
   34b6c:	b	34ba0 <udev_util_encode_string@@LIBUDEV_183+0x29370>
   34b70:	add	w2, w1, #0x8
   34b74:	str	w2, [sp, #128]
   34b78:	ldr	w2, [sp, #128]
   34b7c:	cmp	w2, #0x0
   34b80:	b.le	34b94 <udev_util_encode_string@@LIBUDEV_183+0x29364>
   34b84:	add	x1, x0, #0xf
   34b88:	and	x1, x1, #0xfffffffffffffff8
   34b8c:	str	x1, [sp, #104]
   34b90:	b	34ba0 <udev_util_encode_string@@LIBUDEV_183+0x29370>
   34b94:	ldr	x2, [sp, #112]
   34b98:	sxtw	x0, w1
   34b9c:	add	x0, x2, x0
   34ba0:	ldr	x0, [x0]
   34ba4:	str	x0, [sp, #96]
   34ba8:	ldr	x0, [sp, #96]
   34bac:	cmp	x0, #0x0
   34bb0:	b.eq	34bf8 <udev_util_encode_string@@LIBUDEV_183+0x293c8>  // b.none
   34bb4:	ldrb	w0, [sp, #39]
   34bb8:	cmp	w0, #0x0
   34bbc:	b.eq	34bdc <udev_util_encode_string@@LIBUDEV_183+0x293ac>  // b.none
   34bc0:	ldr	x0, [sp, #16]
   34bc4:	cmp	x0, #0x0
   34bc8:	b.eq	34bdc <udev_util_encode_string@@LIBUDEV_183+0x293ac>  // b.none
   34bcc:	ldr	x1, [sp, #16]
   34bd0:	ldr	x0, [sp, #48]
   34bd4:	bl	51b0 <stpcpy@plt>
   34bd8:	str	x0, [sp, #48]
   34bdc:	ldr	x1, [sp, #96]
   34be0:	ldr	x0, [sp, #48]
   34be4:	bl	51b0 <stpcpy@plt>
   34be8:	str	x0, [sp, #48]
   34bec:	mov	w0, #0x1                   	// #1
   34bf0:	strb	w0, [sp, #39]
   34bf4:	b	34b50 <udev_util_encode_string@@LIBUDEV_183+0x29320>
   34bf8:	nop
   34bfc:	ldr	x1, [sp, #88]
   34c00:	ldr	x0, [sp, #40]
   34c04:	add	x0, x1, x0
   34c08:	ldr	x1, [sp, #48]
   34c0c:	cmp	x1, x0
   34c10:	cset	w0, ne  // ne = any
   34c14:	and	w0, w0, #0xff
   34c18:	and	x0, x0, #0xff
   34c1c:	cmp	x0, #0x0
   34c20:	b.eq	34c4c <udev_util_encode_string@@LIBUDEV_183+0x2941c>  // b.none
   34c24:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34c28:	add	x1, x0, #0x1bb
   34c2c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34c30:	add	x4, x0, #0x3f8
   34c34:	mov	w3, #0x3af                 	// #943
   34c38:	mov	x2, x1
   34c3c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34c40:	add	x1, x0, #0x380
   34c44:	mov	w0, #0x0                   	// #0
   34c48:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34c4c:	ldr	x0, [sp, #48]
   34c50:	strb	wzr, [x0]
   34c54:	ldr	x0, [sp, #24]
   34c58:	ldr	x1, [sp, #88]
   34c5c:	str	x1, [x0]
   34c60:	ldr	x1, [sp, #88]
   34c64:	ldr	x0, [sp, #40]
   34c68:	add	x0, x1, x0
   34c6c:	mov	x1, x0
   34c70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   34c74:	ldr	x0, [x0, #4016]
   34c78:	ldr	x2, [sp, #136]
   34c7c:	ldr	x0, [x0]
   34c80:	eor	x0, x2, x0
   34c84:	cmp	x0, #0x0
   34c88:	b.eq	34c90 <udev_util_encode_string@@LIBUDEV_183+0x29460>  // b.none
   34c8c:	bl	5390 <__stack_chk_fail@plt>
   34c90:	mov	x0, x1
   34c94:	ldp	x29, x30, [sp], #320
   34c98:	ret
   34c9c:	stp	x29, x30, [sp, #-48]!
   34ca0:	mov	x29, sp
   34ca4:	str	x0, [sp, #24]
   34ca8:	str	x1, [sp, #16]
   34cac:	ldr	x0, [sp, #24]
   34cb0:	cmp	x0, #0x0
   34cb4:	cset	w0, eq  // eq = none
   34cb8:	and	w0, w0, #0xff
   34cbc:	and	x0, x0, #0xff
   34cc0:	cmp	x0, #0x0
   34cc4:	b.eq	34cf0 <udev_util_encode_string@@LIBUDEV_183+0x294c0>  // b.none
   34cc8:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34ccc:	add	x1, x0, #0x1bb
   34cd0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34cd4:	add	x4, x0, #0x418
   34cd8:	mov	w3, #0x3ec                 	// #1004
   34cdc:	mov	x2, x1
   34ce0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34ce4:	add	x1, x0, #0x228
   34ce8:	mov	w0, #0x0                   	// #0
   34cec:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34cf0:	ldr	x0, [sp, #24]
   34cf4:	ldr	x0, [x0]
   34cf8:	ldr	x1, [sp, #16]
   34cfc:	bl	33fcc <udev_util_encode_string@@LIBUDEV_183+0x2879c>
   34d00:	and	w0, w0, #0xff
   34d04:	cmp	w0, #0x0
   34d08:	b.eq	34d14 <udev_util_encode_string@@LIBUDEV_183+0x294e4>  // b.none
   34d0c:	mov	w0, #0x0                   	// #0
   34d10:	b	34d60 <udev_util_encode_string@@LIBUDEV_183+0x29530>
   34d14:	ldr	x0, [sp, #16]
   34d18:	cmp	x0, #0x0
   34d1c:	b.eq	34d40 <udev_util_encode_string@@LIBUDEV_183+0x29510>  // b.none
   34d20:	ldr	x0, [sp, #16]
   34d24:	bl	5370 <strdup@plt>
   34d28:	str	x0, [sp, #40]
   34d2c:	ldr	x0, [sp, #40]
   34d30:	cmp	x0, #0x0
   34d34:	b.ne	34d44 <udev_util_encode_string@@LIBUDEV_183+0x29514>  // b.any
   34d38:	mov	w0, #0xfffffff4            	// #-12
   34d3c:	b	34d60 <udev_util_encode_string@@LIBUDEV_183+0x29530>
   34d40:	str	xzr, [sp, #40]
   34d44:	ldr	x0, [sp, #24]
   34d48:	ldr	x0, [x0]
   34d4c:	bl	54b0 <free@plt>
   34d50:	ldr	x0, [sp, #24]
   34d54:	ldr	x1, [sp, #40]
   34d58:	str	x1, [x0]
   34d5c:	mov	w0, #0x1                   	// #1
   34d60:	ldp	x29, x30, [sp], #48
   34d64:	ret
   34d68:	stp	x29, x30, [sp, #-48]!
   34d6c:	mov	x29, sp
   34d70:	str	x0, [sp, #24]
   34d74:	str	x1, [sp, #16]
   34d78:	ldr	x0, [sp, #16]
   34d7c:	cmp	x0, #0x0
   34d80:	cset	w0, eq  // eq = none
   34d84:	and	w0, w0, #0xff
   34d88:	and	x0, x0, #0xff
   34d8c:	cmp	x0, #0x0
   34d90:	b.eq	34dbc <udev_util_encode_string@@LIBUDEV_183+0x2958c>  // b.none
   34d94:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34d98:	add	x1, x0, #0x453
   34d9c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34da0:	add	x4, x0, #0x500
   34da4:	mov	w3, #0x16                  	// #22
   34da8:	mov	x2, x1
   34dac:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34db0:	add	x1, x0, #0x468
   34db4:	mov	w0, #0x0                   	// #0
   34db8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34dbc:	ldr	x0, [sp, #24]
   34dc0:	str	x0, [sp, #40]
   34dc4:	b	34df8 <udev_util_encode_string@@LIBUDEV_183+0x295c8>
   34dc8:	ldr	x0, [sp, #40]
   34dcc:	ldr	x0, [x0]
   34dd0:	ldr	x1, [sp, #16]
   34dd4:	bl	5440 <strcmp@plt>
   34dd8:	cmp	w0, #0x0
   34ddc:	b.ne	34dec <udev_util_encode_string@@LIBUDEV_183+0x295bc>  // b.any
   34de0:	ldr	x0, [sp, #40]
   34de4:	ldr	x0, [x0]
   34de8:	b	34e18 <udev_util_encode_string@@LIBUDEV_183+0x295e8>
   34dec:	ldr	x0, [sp, #40]
   34df0:	add	x0, x0, #0x8
   34df4:	str	x0, [sp, #40]
   34df8:	ldr	x0, [sp, #40]
   34dfc:	cmp	x0, #0x0
   34e00:	b.eq	34e14 <udev_util_encode_string@@LIBUDEV_183+0x295e4>  // b.none
   34e04:	ldr	x0, [sp, #40]
   34e08:	ldr	x0, [x0]
   34e0c:	cmp	x0, #0x0
   34e10:	b.ne	34dc8 <udev_util_encode_string@@LIBUDEV_183+0x29598>  // b.any
   34e14:	mov	x0, #0x0                   	// #0
   34e18:	ldp	x29, x30, [sp], #48
   34e1c:	ret
   34e20:	stp	x29, x30, [sp, #-48]!
   34e24:	mov	x29, sp
   34e28:	str	x0, [sp, #40]
   34e2c:	str	x1, [sp, #32]
   34e30:	str	x2, [sp, #24]
   34e34:	str	x3, [sp, #16]
   34e38:	ldr	x0, [sp, #40]
   34e3c:	cmp	x0, #0x0
   34e40:	cset	w0, eq  // eq = none
   34e44:	and	w0, w0, #0xff
   34e48:	and	x0, x0, #0xff
   34e4c:	cmp	x0, #0x0
   34e50:	b.eq	34e7c <udev_util_encode_string@@LIBUDEV_183+0x2964c>  // b.none
   34e54:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34e58:	add	x1, x0, #0x513
   34e5c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34e60:	add	x4, x0, #0x538
   34e64:	mov	w3, #0x15                  	// #21
   34e68:	mov	x2, x1
   34e6c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34e70:	add	x1, x0, #0x528
   34e74:	mov	w0, #0x0                   	// #0
   34e78:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34e7c:	ldr	x0, [sp, #24]
   34e80:	cmp	x0, #0x0
   34e84:	cset	w0, eq  // eq = none
   34e88:	and	w0, w0, #0xff
   34e8c:	and	x0, x0, #0xff
   34e90:	cmp	x0, #0x0
   34e94:	b.eq	34ec0 <udev_util_encode_string@@LIBUDEV_183+0x29690>  // b.none
   34e98:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34e9c:	add	x1, x0, #0x513
   34ea0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34ea4:	add	x4, x0, #0x538
   34ea8:	mov	w3, #0x16                  	// #22
   34eac:	mov	x2, x1
   34eb0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34eb4:	add	x1, x0, #0x530
   34eb8:	mov	w0, #0x0                   	// #0
   34ebc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34ec0:	ldr	x0, [sp, #32]
   34ec4:	cmp	x0, #0x0
   34ec8:	b.ne	34ed4 <udev_util_encode_string@@LIBUDEV_183+0x296a4>  // b.any
   34ecc:	mov	x0, #0x0                   	// #0
   34ed0:	b	34f70 <udev_util_encode_string@@LIBUDEV_183+0x29740>
   34ed4:	ldr	x1, [sp, #16]
   34ed8:	ldr	x0, [sp, #32]
   34edc:	cmp	x1, x0
   34ee0:	b.cc	34f24 <udev_util_encode_string@@LIBUDEV_183+0x296f4>  // b.lo, b.ul, b.last
   34ee4:	ldr	x0, [sp, #32]
   34ee8:	cmp	x0, #0x1
   34eec:	b.ls	34f1c <udev_util_encode_string@@LIBUDEV_183+0x296ec>  // b.plast
   34ef0:	ldr	x0, [sp, #40]
   34ef4:	ldr	x3, [x0]
   34ef8:	ldr	x0, [sp, #32]
   34efc:	sub	x0, x0, #0x1
   34f00:	mov	x2, x0
   34f04:	ldr	x1, [sp, #24]
   34f08:	mov	x0, x3
   34f0c:	bl	54e0 <mempcpy@plt>
   34f10:	mov	x1, x0
   34f14:	ldr	x0, [sp, #40]
   34f18:	str	x1, [x0]
   34f1c:	str	xzr, [sp, #32]
   34f20:	b	34f60 <udev_util_encode_string@@LIBUDEV_183+0x29730>
   34f24:	ldr	x0, [sp, #16]
   34f28:	cmp	x0, #0x0
   34f2c:	b.eq	34f60 <udev_util_encode_string@@LIBUDEV_183+0x29730>  // b.none
   34f30:	ldr	x0, [sp, #40]
   34f34:	ldr	x0, [x0]
   34f38:	ldr	x2, [sp, #16]
   34f3c:	ldr	x1, [sp, #24]
   34f40:	bl	54e0 <mempcpy@plt>
   34f44:	mov	x1, x0
   34f48:	ldr	x0, [sp, #40]
   34f4c:	str	x1, [x0]
   34f50:	ldr	x1, [sp, #32]
   34f54:	ldr	x0, [sp, #16]
   34f58:	sub	x0, x1, x0
   34f5c:	str	x0, [sp, #32]
   34f60:	ldr	x0, [sp, #40]
   34f64:	ldr	x0, [x0]
   34f68:	strb	wzr, [x0]
   34f6c:	ldr	x0, [sp, #32]
   34f70:	ldp	x29, x30, [sp], #48
   34f74:	ret
   34f78:	stp	x29, x30, [sp, #-64]!
   34f7c:	mov	x29, sp
   34f80:	str	x0, [sp, #40]
   34f84:	str	x1, [sp, #32]
   34f88:	str	x2, [sp, #24]
   34f8c:	str	x3, [sp, #16]
   34f90:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   34f94:	ldr	x0, [x0, #4016]
   34f98:	ldr	x1, [x0]
   34f9c:	str	x1, [sp, #56]
   34fa0:	mov	x1, #0x0                   	// #0
   34fa4:	ldr	x0, [sp, #40]
   34fa8:	cmp	x0, #0x0
   34fac:	cset	w0, eq  // eq = none
   34fb0:	and	w0, w0, #0xff
   34fb4:	and	x0, x0, #0xff
   34fb8:	cmp	x0, #0x0
   34fbc:	b.eq	34fe8 <udev_util_encode_string@@LIBUDEV_183+0x297b8>  // b.none
   34fc0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34fc4:	add	x1, x0, #0x513
   34fc8:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34fcc:	add	x4, x0, #0x548
   34fd0:	mov	w3, #0x56                  	// #86
   34fd4:	mov	x2, x1
   34fd8:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   34fdc:	add	x1, x0, #0x528
   34fe0:	mov	w0, #0x0                   	// #0
   34fe4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   34fe8:	ldr	x0, [sp, #24]
   34fec:	cmp	x0, #0x0
   34ff0:	cset	w0, eq  // eq = none
   34ff4:	and	w0, w0, #0xff
   34ff8:	and	x0, x0, #0xff
   34ffc:	cmp	x0, #0x0
   35000:	b.eq	3502c <udev_util_encode_string@@LIBUDEV_183+0x297fc>  // b.none
   35004:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35008:	add	x1, x0, #0x513
   3500c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35010:	add	x4, x0, #0x548
   35014:	mov	w3, #0x57                  	// #87
   35018:	mov	x2, x1
   3501c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35020:	add	x1, x0, #0x530
   35024:	mov	w0, #0x0                   	// #0
   35028:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3502c:	ldr	x0, [sp, #40]
   35030:	str	x0, [sp, #48]
   35034:	add	x0, sp, #0x30
   35038:	ldr	x3, [sp, #16]
   3503c:	ldr	x2, [sp, #24]
   35040:	ldr	x1, [sp, #32]
   35044:	bl	34e20 <udev_util_encode_string@@LIBUDEV_183+0x295f0>
   35048:	mov	x1, x0
   3504c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   35050:	ldr	x0, [x0, #4016]
   35054:	ldr	x2, [sp, #56]
   35058:	ldr	x0, [x0]
   3505c:	eor	x0, x2, x0
   35060:	cmp	x0, #0x0
   35064:	b.eq	3506c <udev_util_encode_string@@LIBUDEV_183+0x2983c>  // b.none
   35068:	bl	5390 <__stack_chk_fail@plt>
   3506c:	mov	x0, x1
   35070:	ldp	x29, x30, [sp], #64
   35074:	ret
   35078:	stp	x29, x30, [sp, #-48]!
   3507c:	mov	x29, sp
   35080:	str	x0, [sp, #40]
   35084:	str	x1, [sp, #32]
   35088:	str	x2, [sp, #24]
   3508c:	ldr	x0, [sp, #40]
   35090:	cmp	x0, #0x0
   35094:	cset	w0, eq  // eq = none
   35098:	and	w0, w0, #0xff
   3509c:	and	x0, x0, #0xff
   350a0:	cmp	x0, #0x0
   350a4:	b.eq	350d0 <udev_util_encode_string@@LIBUDEV_183+0x298a0>  // b.none
   350a8:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   350ac:	add	x1, x0, #0x513
   350b0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   350b4:	add	x4, x0, #0x558
   350b8:	mov	w3, #0x5e                  	// #94
   350bc:	mov	x2, x1
   350c0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   350c4:	add	x1, x0, #0x528
   350c8:	mov	w0, #0x0                   	// #0
   350cc:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   350d0:	ldr	x0, [sp, #24]
   350d4:	cmp	x0, #0x0
   350d8:	cset	w0, eq  // eq = none
   350dc:	and	w0, w0, #0xff
   350e0:	and	x0, x0, #0xff
   350e4:	cmp	x0, #0x0
   350e8:	b.eq	35114 <udev_util_encode_string@@LIBUDEV_183+0x298e4>  // b.none
   350ec:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   350f0:	add	x1, x0, #0x513
   350f4:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   350f8:	add	x4, x0, #0x558
   350fc:	mov	w3, #0x5f                  	// #95
   35100:	mov	x2, x1
   35104:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35108:	add	x1, x0, #0x530
   3510c:	mov	w0, #0x0                   	// #0
   35110:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35114:	ldr	x0, [sp, #24]
   35118:	bl	5040 <strlen@plt>
   3511c:	mov	x3, x0
   35120:	ldr	x2, [sp, #24]
   35124:	ldr	x1, [sp, #32]
   35128:	ldr	x0, [sp, #40]
   3512c:	bl	34f78 <udev_util_encode_string@@LIBUDEV_183+0x29748>
   35130:	ldp	x29, x30, [sp], #48
   35134:	ret
   35138:	stp	x29, x30, [sp, #-48]!
   3513c:	mov	x29, sp
   35140:	str	x0, [sp, #24]
   35144:	str	w1, [sp, #20]
   35148:	str	wzr, [sp, #40]
   3514c:	ldr	w0, [sp, #20]
   35150:	and	w0, w0, #0x40
   35154:	cmp	w0, #0x0
   35158:	b.eq	35164 <udev_util_encode_string@@LIBUDEV_183+0x29934>  // b.none
   3515c:	mov	w0, #0xffffffea            	// #-22
   35160:	b	35200 <udev_util_encode_string@@LIBUDEV_183+0x299d0>
   35164:	mov	w2, #0x0                   	// #0
   35168:	ldr	w1, [sp, #20]
   3516c:	ldr	x0, [sp, #24]
   35170:	bl	56c0 <open64@plt>
   35174:	str	w0, [sp, #44]
   35178:	ldr	w0, [sp, #44]
   3517c:	cmp	w0, #0x0
   35180:	b.ge	351d8 <udev_util_encode_string@@LIBUDEV_183+0x299a8>  // b.tcont
   35184:	bl	57d0 <__errno_location@plt>
   35188:	ldr	w0, [x0]
   3518c:	cmp	w0, #0x5
   35190:	b.eq	351a4 <udev_util_encode_string@@LIBUDEV_183+0x29974>  // b.none
   35194:	bl	57d0 <__errno_location@plt>
   35198:	ldr	w0, [x0]
   3519c:	neg	w0, w0
   351a0:	b	35200 <udev_util_encode_string@@LIBUDEV_183+0x299d0>
   351a4:	ldr	w0, [sp, #40]
   351a8:	cmp	w0, #0x13
   351ac:	b.ls	351c0 <udev_util_encode_string@@LIBUDEV_183+0x29990>  // b.plast
   351b0:	bl	57d0 <__errno_location@plt>
   351b4:	ldr	w0, [x0]
   351b8:	neg	w0, w0
   351bc:	b	35200 <udev_util_encode_string@@LIBUDEV_183+0x299d0>
   351c0:	mov	w0, #0xc350                	// #50000
   351c4:	bl	5700 <usleep@plt>
   351c8:	ldr	w0, [sp, #40]
   351cc:	add	w0, w0, #0x1
   351d0:	str	w0, [sp, #40]
   351d4:	b	35164 <udev_util_encode_string@@LIBUDEV_183+0x29934>
   351d8:	nop
   351dc:	ldr	w0, [sp, #44]
   351e0:	bl	56a0 <isatty@plt>
   351e4:	cmp	w0, #0x0
   351e8:	b.gt	351fc <udev_util_encode_string@@LIBUDEV_183+0x299cc>
   351ec:	ldr	w0, [sp, #44]
   351f0:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   351f4:	mov	w0, #0xffffffe7            	// #-25
   351f8:	b	35200 <udev_util_encode_string@@LIBUDEV_183+0x299d0>
   351fc:	ldr	w0, [sp, #44]
   35200:	ldp	x29, x30, [sp], #48
   35204:	ret
   35208:	sub	sp, sp, #0x20
   3520c:	str	w0, [sp, #28]
   35210:	str	x1, [sp, #16]
   35214:	str	x2, [sp, #8]
   35218:	str	x3, [sp]
   3521c:	ldr	w0, [sp, #28]
   35220:	cmp	w0, #0x3
   35224:	b.gt	35280 <udev_util_encode_string@@LIBUDEV_183+0x29a50>
   35228:	ldr	x0, [sp, #16]
   3522c:	cmp	x0, #0x0
   35230:	b.eq	35244 <udev_util_encode_string@@LIBUDEV_183+0x29a14>  // b.none
   35234:	ldr	x0, [sp, #16]
   35238:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3523c:	add	x1, x1, #0xb58
   35240:	str	x1, [x0]
   35244:	ldr	x0, [sp, #8]
   35248:	cmp	x0, #0x0
   3524c:	b.eq	35260 <udev_util_encode_string@@LIBUDEV_183+0x29a30>  // b.none
   35250:	ldr	x0, [sp, #8]
   35254:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35258:	add	x1, x1, #0x5c8
   3525c:	str	x1, [x0]
   35260:	ldr	x0, [sp]
   35264:	cmp	x0, #0x0
   35268:	b.eq	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>  // b.none
   3526c:	ldr	x0, [sp]
   35270:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35274:	add	x1, x1, #0x5b8
   35278:	str	x1, [x0]
   3527c:	b	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>
   35280:	ldr	w0, [sp, #28]
   35284:	cmp	w0, #0x4
   35288:	b.gt	352e4 <udev_util_encode_string@@LIBUDEV_183+0x29ab4>
   3528c:	ldr	x0, [sp, #16]
   35290:	cmp	x0, #0x0
   35294:	b.eq	352a8 <udev_util_encode_string@@LIBUDEV_183+0x29a78>  // b.none
   35298:	ldr	x0, [sp, #16]
   3529c:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   352a0:	add	x1, x1, #0xb68
   352a4:	str	x1, [x0]
   352a8:	ldr	x0, [sp, #8]
   352ac:	cmp	x0, #0x0
   352b0:	b.eq	352c4 <udev_util_encode_string@@LIBUDEV_183+0x29a94>  // b.none
   352b4:	ldr	x0, [sp, #8]
   352b8:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   352bc:	add	x1, x1, #0x5c8
   352c0:	str	x1, [x0]
   352c4:	ldr	x0, [sp]
   352c8:	cmp	x0, #0x0
   352cc:	b.eq	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>  // b.none
   352d0:	ldr	x0, [sp]
   352d4:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   352d8:	add	x1, x1, #0x5b8
   352dc:	str	x1, [x0]
   352e0:	b	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>
   352e4:	ldr	w0, [sp, #28]
   352e8:	cmp	w0, #0x5
   352ec:	b.gt	35348 <udev_util_encode_string@@LIBUDEV_183+0x29b18>
   352f0:	ldr	x0, [sp, #16]
   352f4:	cmp	x0, #0x0
   352f8:	b.eq	3530c <udev_util_encode_string@@LIBUDEV_183+0x29adc>  // b.none
   352fc:	ldr	x0, [sp, #16]
   35300:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35304:	add	x1, x1, #0x5b8
   35308:	str	x1, [x0]
   3530c:	ldr	x0, [sp, #8]
   35310:	cmp	x0, #0x0
   35314:	b.eq	35328 <udev_util_encode_string@@LIBUDEV_183+0x29af8>  // b.none
   35318:	ldr	x0, [sp, #8]
   3531c:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35320:	add	x1, x1, #0x5c8
   35324:	str	x1, [x0]
   35328:	ldr	x0, [sp]
   3532c:	cmp	x0, #0x0
   35330:	b.eq	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>  // b.none
   35334:	ldr	x0, [sp]
   35338:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3533c:	add	x1, x1, #0xb58
   35340:	str	x1, [x0]
   35344:	b	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>
   35348:	ldr	w0, [sp, #28]
   3534c:	cmp	w0, #0x6
   35350:	b.le	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>
   35354:	ldr	x0, [sp, #16]
   35358:	cmp	x0, #0x0
   3535c:	b.eq	35370 <udev_util_encode_string@@LIBUDEV_183+0x29b40>  // b.none
   35360:	ldr	x0, [sp, #16]
   35364:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35368:	add	x1, x1, #0xb78
   3536c:	str	x1, [x0]
   35370:	ldr	x0, [sp, #8]
   35374:	cmp	x0, #0x0
   35378:	b.eq	3538c <udev_util_encode_string@@LIBUDEV_183+0x29b5c>  // b.none
   3537c:	ldr	x0, [sp, #8]
   35380:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35384:	add	x1, x1, #0x5c8
   35388:	str	x1, [x0]
   3538c:	ldr	x0, [sp]
   35390:	cmp	x0, #0x0
   35394:	b.eq	353a8 <udev_util_encode_string@@LIBUDEV_183+0x29b78>  // b.none
   35398:	ldr	x0, [sp]
   3539c:	adrp	x1, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   353a0:	add	x1, x1, #0xb58
   353a4:	str	x1, [x0]
   353a8:	nop
   353ac:	add	sp, sp, #0x20
   353b0:	ret
   353b4:	sub	sp, sp, #0x10
   353b8:	str	w0, [sp, #12]
   353bc:	ldr	w0, [sp, #12]
   353c0:	cmp	w0, #0x8
   353c4:	b.eq	353dc <udev_util_encode_string@@LIBUDEV_183+0x29bac>  // b.none
   353c8:	ldr	w0, [sp, #12]
   353cc:	cmp	w0, #0x9
   353d0:	b.ne	353e4 <udev_util_encode_string@@LIBUDEV_183+0x29bb4>  // b.any
   353d4:	mov	w0, #0x7                   	// #7
   353d8:	b	353e8 <udev_util_encode_string@@LIBUDEV_183+0x29bb8>
   353dc:	mov	w0, #0x0                   	// #0
   353e0:	b	353e8 <udev_util_encode_string@@LIBUDEV_183+0x29bb8>
   353e4:	ldr	w0, [sp, #12]
   353e8:	add	sp, sp, #0x10
   353ec:	ret
   353f0:	stp	x29, x30, [sp, #-64]!
   353f4:	mov	x29, sp
   353f8:	str	w0, [sp, #28]
   353fc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   35400:	ldr	x0, [x0, #4016]
   35404:	ldr	x1, [x0]
   35408:	str	x1, [sp, #56]
   3540c:	mov	x1, #0x0                   	// #0
   35410:	ldr	w0, [sp, #28]
   35414:	bl	353b4 <udev_util_encode_string@@LIBUDEV_183+0x29b84>
   35418:	mov	w2, w0
   3541c:	add	x0, sp, #0x28
   35420:	mov	x1, x0
   35424:	mov	w0, w2
   35428:	bl	5130 <clock_gettime@plt>
   3542c:	cmp	w0, #0x0
   35430:	cset	w0, ne  // ne = any
   35434:	and	w0, w0, #0xff
   35438:	and	x0, x0, #0xff
   3543c:	cmp	x0, #0x0
   35440:	b.eq	3546c <udev_util_encode_string@@LIBUDEV_183+0x29c3c>  // b.none
   35444:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35448:	add	x1, x0, #0xbeb
   3544c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35450:	add	x4, x0, #0x218
   35454:	mov	w3, #0x35                  	// #53
   35458:	mov	x2, x1
   3545c:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35460:	add	x1, x0, #0xc08
   35464:	mov	w0, #0x0                   	// #0
   35468:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3546c:	add	x0, sp, #0x28
   35470:	bl	354a4 <udev_util_encode_string@@LIBUDEV_183+0x29c74>
   35474:	mov	x1, x0
   35478:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3547c:	ldr	x0, [x0, #4016]
   35480:	ldr	x2, [sp, #56]
   35484:	ldr	x0, [x0]
   35488:	eor	x0, x2, x0
   3548c:	cmp	x0, #0x0
   35490:	b.eq	35498 <udev_util_encode_string@@LIBUDEV_183+0x29c68>  // b.none
   35494:	bl	5390 <__stack_chk_fail@plt>
   35498:	mov	x0, x1
   3549c:	ldp	x29, x30, [sp], #64
   354a0:	ret
   354a4:	stp	x29, x30, [sp, #-32]!
   354a8:	mov	x29, sp
   354ac:	str	x0, [sp, #24]
   354b0:	ldr	x0, [sp, #24]
   354b4:	cmp	x0, #0x0
   354b8:	cset	w0, eq  // eq = none
   354bc:	and	w0, w0, #0xff
   354c0:	and	x0, x0, #0xff
   354c4:	cmp	x0, #0x0
   354c8:	b.eq	354f4 <udev_util_encode_string@@LIBUDEV_183+0x29cc4>  // b.none
   354cc:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   354d0:	add	x1, x0, #0xbeb
   354d4:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   354d8:	add	x4, x0, #0x220
   354dc:	mov	w3, #0xad                  	// #173
   354e0:	mov	x2, x1
   354e4:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   354e8:	add	x1, x0, #0xc38
   354ec:	mov	w0, #0x0                   	// #0
   354f0:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   354f4:	ldr	x0, [sp, #24]
   354f8:	ldr	x0, [x0]
   354fc:	cmp	x0, #0x0
   35500:	b.lt	35514 <udev_util_encode_string@@LIBUDEV_183+0x29ce4>  // b.tstop
   35504:	ldr	x0, [sp, #24]
   35508:	ldr	x0, [x0, #8]
   3550c:	cmp	x0, #0x0
   35510:	b.ge	3551c <udev_util_encode_string@@LIBUDEV_183+0x29cec>  // b.tcont
   35514:	mov	x0, #0xffffffffffffffff    	// #-1
   35518:	b	355b8 <udev_util_encode_string@@LIBUDEV_183+0x29d88>
   3551c:	ldr	x0, [sp, #24]
   35520:	ldr	x0, [x0]
   35524:	mov	x2, x0
   35528:	ldr	x0, [sp, #24]
   3552c:	ldr	x0, [x0, #8]
   35530:	lsr	x1, x0, #3
   35534:	mov	x0, #0xf7cf                	// #63439
   35538:	movk	x0, #0xe353, lsl #16
   3553c:	movk	x0, #0x9ba5, lsl #32
   35540:	movk	x0, #0x20c4, lsl #48
   35544:	umulh	x0, x1, x0
   35548:	lsr	x0, x0, #4
   3554c:	mvn	x1, x0
   35550:	mov	x0, #0x34db                	// #13531
   35554:	movk	x0, #0xd7b6, lsl #16
   35558:	movk	x0, #0xde82, lsl #32
   3555c:	movk	x0, #0x431b, lsl #48
   35560:	umulh	x0, x1, x0
   35564:	lsr	x0, x0, #18
   35568:	cmp	x2, x0
   3556c:	b.ls	35578 <udev_util_encode_string@@LIBUDEV_183+0x29d48>  // b.plast
   35570:	mov	x0, #0xffffffffffffffff    	// #-1
   35574:	b	355b8 <udev_util_encode_string@@LIBUDEV_183+0x29d88>
   35578:	ldr	x0, [sp, #24]
   3557c:	ldr	x0, [x0]
   35580:	mov	x1, x0
   35584:	mov	x0, #0x4240                	// #16960
   35588:	movk	x0, #0xf, lsl #16
   3558c:	mul	x1, x1, x0
   35590:	ldr	x0, [sp, #24]
   35594:	ldr	x0, [x0, #8]
   35598:	lsr	x2, x0, #3
   3559c:	mov	x0, #0xf7cf                	// #63439
   355a0:	movk	x0, #0xe353, lsl #16
   355a4:	movk	x0, #0x9ba5, lsl #32
   355a8:	movk	x0, #0x20c4, lsl #48
   355ac:	umulh	x0, x2, x0
   355b0:	lsr	x0, x0, #4
   355b4:	add	x0, x1, x0
   355b8:	ldp	x29, x30, [sp], #32
   355bc:	ret
   355c0:	stp	x29, x30, [sp, #-32]!
   355c4:	mov	x29, sp
   355c8:	str	x0, [sp, #24]
   355cc:	str	x1, [sp, #16]
   355d0:	ldr	x0, [sp, #24]
   355d4:	cmp	x0, #0x0
   355d8:	cset	w0, eq  // eq = none
   355dc:	and	w0, w0, #0xff
   355e0:	and	x0, x0, #0xff
   355e4:	cmp	x0, #0x0
   355e8:	b.eq	35614 <udev_util_encode_string@@LIBUDEV_183+0x29de4>  // b.none
   355ec:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   355f0:	add	x1, x0, #0xbeb
   355f4:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   355f8:	add	x4, x0, #0x230
   355fc:	mov	w3, #0xc7                  	// #199
   35600:	mov	x2, x1
   35604:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   35608:	add	x1, x0, #0xc38
   3560c:	mov	w0, #0x0                   	// #0
   35610:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35614:	ldr	x0, [sp, #16]
   35618:	cmn	x0, #0x1
   3561c:	b.ne	35640 <udev_util_encode_string@@LIBUDEV_183+0x29e10>  // b.any
   35620:	ldr	x0, [sp, #24]
   35624:	mov	x1, #0xffffffffffffffff    	// #-1
   35628:	str	x1, [x0]
   3562c:	ldr	x0, [sp, #24]
   35630:	mov	x1, #0xffffffffffffffff    	// #-1
   35634:	str	x1, [x0, #8]
   35638:	ldr	x0, [sp, #24]
   3563c:	b	356bc <udev_util_encode_string@@LIBUDEV_183+0x29e8c>
   35640:	ldr	x1, [sp, #16]
   35644:	mov	x0, #0x34db                	// #13531
   35648:	movk	x0, #0xd7b6, lsl #16
   3564c:	movk	x0, #0xde82, lsl #32
   35650:	movk	x0, #0x431b, lsl #48
   35654:	umulh	x0, x1, x0
   35658:	lsr	x0, x0, #18
   3565c:	mov	x1, x0
   35660:	ldr	x0, [sp, #24]
   35664:	str	x1, [x0]
   35668:	ldr	x0, [sp, #16]
   3566c:	mov	x1, #0x34db                	// #13531
   35670:	movk	x1, #0xd7b6, lsl #16
   35674:	movk	x1, #0xde82, lsl #32
   35678:	movk	x1, #0x431b, lsl #48
   3567c:	umulh	x1, x0, x1
   35680:	lsr	x1, x1, #18
   35684:	mov	x2, #0x4240                	// #16960
   35688:	movk	x2, #0xf, lsl #16
   3568c:	mul	x1, x1, x2
   35690:	sub	x1, x0, x1
   35694:	mov	x0, x1
   35698:	lsl	x0, x0, #5
   3569c:	sub	x0, x0, x1
   356a0:	lsl	x0, x0, #2
   356a4:	add	x0, x0, x1
   356a8:	lsl	x0, x0, #3
   356ac:	mov	x1, x0
   356b0:	ldr	x0, [sp, #24]
   356b4:	str	x1, [x0, #8]
   356b8:	ldr	x0, [sp, #24]
   356bc:	ldp	x29, x30, [sp], #32
   356c0:	ret
   356c4:	stp	x29, x30, [sp, #-32]!
   356c8:	mov	x29, sp
   356cc:	str	x0, [sp, #24]
   356d0:	str	x1, [sp, #16]
   356d4:	ldr	x0, [sp, #24]
   356d8:	cmp	x0, #0x0
   356dc:	cset	w0, eq  // eq = none
   356e0:	and	w0, w0, #0xff
   356e4:	and	x0, x0, #0xff
   356e8:	cmp	x0, #0x0
   356ec:	b.eq	35718 <udev_util_encode_string@@LIBUDEV_183+0x29ee8>  // b.none
   356f0:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   356f4:	add	x1, x0, #0xbeb
   356f8:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   356fc:	add	x4, x0, #0x240
   35700:	mov	w3, #0xe5                  	// #229
   35704:	mov	x2, x1
   35708:	adrp	x0, 3e000 <udev_util_encode_string@@LIBUDEV_183+0x327d0>
   3570c:	add	x1, x0, #0xc40
   35710:	mov	w0, #0x0                   	// #0
   35714:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35718:	ldr	x0, [sp, #16]
   3571c:	cmn	x0, #0x1
   35720:	b.ne	35740 <udev_util_encode_string@@LIBUDEV_183+0x29f10>  // b.any
   35724:	ldr	x0, [sp, #24]
   35728:	mov	x1, #0xffffffffffffffff    	// #-1
   3572c:	str	x1, [x0]
   35730:	ldr	x0, [sp, #24]
   35734:	mov	x1, #0xffffffffffffffff    	// #-1
   35738:	str	x1, [x0, #8]
   3573c:	b	357a0 <udev_util_encode_string@@LIBUDEV_183+0x29f70>
   35740:	ldr	x1, [sp, #16]
   35744:	mov	x0, #0x34db                	// #13531
   35748:	movk	x0, #0xd7b6, lsl #16
   3574c:	movk	x0, #0xde82, lsl #32
   35750:	movk	x0, #0x431b, lsl #48
   35754:	umulh	x0, x1, x0
   35758:	lsr	x0, x0, #18
   3575c:	mov	x1, x0
   35760:	ldr	x0, [sp, #24]
   35764:	str	x1, [x0]
   35768:	ldr	x1, [sp, #16]
   3576c:	mov	x0, #0x34db                	// #13531
   35770:	movk	x0, #0xd7b6, lsl #16
   35774:	movk	x0, #0xde82, lsl #32
   35778:	movk	x0, #0x431b, lsl #48
   3577c:	umulh	x0, x1, x0
   35780:	lsr	x0, x0, #18
   35784:	mov	x2, #0x4240                	// #16960
   35788:	movk	x2, #0xf, lsl #16
   3578c:	mul	x0, x0, x2
   35790:	sub	x0, x1, x0
   35794:	mov	x1, x0
   35798:	ldr	x0, [sp, #24]
   3579c:	str	x1, [x0, #8]
   357a0:	ldr	x0, [sp, #24]
   357a4:	ldp	x29, x30, [sp], #32
   357a8:	ret
   357ac:	stp	x29, x30, [sp, #-32]!
   357b0:	mov	x29, sp
   357b4:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   357b8:	add	x0, x0, #0xe4
   357bc:	ldr	w0, [x0]
   357c0:	cmp	w0, #0x0
   357c4:	b.ge	35810 <udev_util_encode_string@@LIBUDEV_183+0x29fe0>  // b.tcont
   357c8:	mov	w1, #0x800                 	// #2048
   357cc:	movk	w1, #0x8, lsl #16
   357d0:	mov	w0, #0x7                   	// #7
   357d4:	bl	5760 <timerfd_create@plt>
   357d8:	str	w0, [sp, #28]
   357dc:	ldr	w0, [sp, #28]
   357e0:	cmp	w0, #0x0
   357e4:	b.ge	357f8 <udev_util_encode_string@@LIBUDEV_183+0x29fc8>  // b.tcont
   357e8:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   357ec:	add	x0, x0, #0xe4
   357f0:	str	wzr, [x0]
   357f4:	b	35810 <udev_util_encode_string@@LIBUDEV_183+0x29fe0>
   357f8:	ldr	w0, [sp, #28]
   357fc:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   35800:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   35804:	add	x0, x0, #0xe4
   35808:	mov	w1, #0x1                   	// #1
   3580c:	str	w1, [x0]
   35810:	adrp	x0, 57000 <udev_util_encode_string@@LIBUDEV_183+0x4b7d0>
   35814:	add	x0, x0, #0xe4
   35818:	ldr	w0, [x0]
   3581c:	cmp	w0, #0x0
   35820:	cset	w0, ne  // ne = any
   35824:	and	w0, w0, #0xff
   35828:	ldp	x29, x30, [sp], #32
   3582c:	ret
   35830:	stp	x29, x30, [sp, #-16]!
   35834:	mov	x29, sp
   35838:	bl	357ac <udev_util_encode_string@@LIBUDEV_183+0x29f7c>
   3583c:	and	w0, w0, #0xff
   35840:	cmp	w0, #0x0
   35844:	b.eq	35850 <udev_util_encode_string@@LIBUDEV_183+0x2a020>  // b.none
   35848:	mov	w0, #0x7                   	// #7
   3584c:	b	35854 <udev_util_encode_string@@LIBUDEV_183+0x2a024>
   35850:	mov	w0, #0x1                   	// #1
   35854:	ldp	x29, x30, [sp], #16
   35858:	ret
   3585c:	sub	sp, sp, #0x10
   35860:	str	x0, [sp, #8]
   35864:	str	x1, [sp]
   35868:	ldr	x0, [sp]
   3586c:	cmp	x0, #0x0
   35870:	cset	w0, ne  // ne = any
   35874:	and	w0, w0, #0xff
   35878:	and	x0, x0, #0xff
   3587c:	cmp	x0, #0x0
   35880:	b.eq	358c4 <udev_util_encode_string@@LIBUDEV_183+0x2a094>  // b.none
   35884:	mov	x2, #0x0                   	// #0
   35888:	ldr	x1, [sp, #8]
   3588c:	ldr	x0, [sp]
   35890:	umulh	x0, x1, x0
   35894:	cmp	x0, #0x0
   35898:	b.eq	358a0 <udev_util_encode_string@@LIBUDEV_183+0x2a070>  // b.none
   3589c:	mov	x2, #0x1                   	// #1
   358a0:	mov	x0, x2
   358a4:	cmp	x0, #0x0
   358a8:	cset	w0, ne  // ne = any
   358ac:	and	w0, w0, #0xff
   358b0:	and	x0, x0, #0xff
   358b4:	cmp	x0, #0x0
   358b8:	b.eq	358c4 <udev_util_encode_string@@LIBUDEV_183+0x2a094>  // b.none
   358bc:	mov	w0, #0x1                   	// #1
   358c0:	b	358c8 <udev_util_encode_string@@LIBUDEV_183+0x2a098>
   358c4:	mov	w0, #0x0                   	// #0
   358c8:	and	w0, w0, #0x1
   358cc:	and	w0, w0, #0xff
   358d0:	add	sp, sp, #0x10
   358d4:	ret
   358d8:	stp	x29, x30, [sp, #-32]!
   358dc:	mov	x29, sp
   358e0:	str	x0, [sp, #24]
   358e4:	str	x1, [sp, #16]
   358e8:	ldr	x1, [sp, #16]
   358ec:	ldr	x0, [sp, #24]
   358f0:	bl	3585c <udev_util_encode_string@@LIBUDEV_183+0x2a02c>
   358f4:	and	w0, w0, #0xff
   358f8:	cmp	w0, #0x0
   358fc:	b.eq	35908 <udev_util_encode_string@@LIBUDEV_183+0x2a0d8>  // b.none
   35900:	mov	x0, #0x0                   	// #0
   35904:	b	35924 <udev_util_encode_string@@LIBUDEV_183+0x2a0f4>
   35908:	ldr	x1, [sp, #24]
   3590c:	ldr	x0, [sp, #16]
   35910:	mul	x0, x1, x0
   35914:	cmp	x0, #0x0
   35918:	b.ne	35920 <udev_util_encode_string@@LIBUDEV_183+0x2a0f0>  // b.any
   3591c:	mov	x0, #0x1                   	// #1
   35920:	bl	5220 <malloc@plt>
   35924:	ldp	x29, x30, [sp], #32
   35928:	ret
   3592c:	sub	sp, sp, #0x10
   35930:	str	x0, [sp, #8]
   35934:	ldr	x0, [sp, #8]
   35938:	cmp	x0, #0x0
   3593c:	b.ne	35948 <udev_util_encode_string@@LIBUDEV_183+0x2a118>  // b.any
   35940:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35944:	add	x0, x0, #0x250
   35948:	add	sp, sp, #0x10
   3594c:	ret
   35950:	sub	sp, sp, #0x10
   35954:	str	x0, [sp, #8]
   35958:	ldr	x0, [sp, #8]
   3595c:	cmp	x0, #0x0
   35960:	b.eq	35974 <udev_util_encode_string@@LIBUDEV_183+0x2a144>  // b.none
   35964:	ldr	x0, [sp, #8]
   35968:	ldrb	w0, [x0]
   3596c:	cmp	w0, #0x0
   35970:	b.ne	3597c <udev_util_encode_string@@LIBUDEV_183+0x2a14c>  // b.any
   35974:	mov	w0, #0x1                   	// #1
   35978:	b	35980 <udev_util_encode_string@@LIBUDEV_183+0x2a150>
   3597c:	mov	w0, #0x0                   	// #0
   35980:	and	w0, w0, #0x1
   35984:	and	w0, w0, #0xff
   35988:	add	sp, sp, #0x10
   3598c:	ret
   35990:	stp	x29, x30, [sp, #-32]!
   35994:	mov	x29, sp
   35998:	str	x0, [sp, #24]
   3599c:	ldr	x0, [sp, #24]
   359a0:	ldr	w0, [x0]
   359a4:	and	w0, w0, #0x1ff
   359a8:	bl	57b0 <umask@plt>
   359ac:	nop
   359b0:	ldp	x29, x30, [sp], #32
   359b4:	ret
   359b8:	stp	x29, x30, [sp, #-80]!
   359bc:	mov	x29, sp
   359c0:	str	x0, [sp, #40]
   359c4:	str	x1, [sp, #32]
   359c8:	str	x2, [sp, #24]
   359cc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   359d0:	ldr	x0, [x0, #4016]
   359d4:	ldr	x1, [x0]
   359d8:	str	x1, [sp, #72]
   359dc:	mov	x1, #0x0                   	// #0
   359e0:	ldr	x0, [sp, #40]
   359e4:	cmp	x0, #0x0
   359e8:	cset	w0, eq  // eq = none
   359ec:	and	w0, w0, #0xff
   359f0:	and	x0, x0, #0xff
   359f4:	cmp	x0, #0x0
   359f8:	b.eq	35a24 <udev_util_encode_string@@LIBUDEV_183+0x2a1f4>  // b.none
   359fc:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a00:	add	x1, x0, #0x25b
   35a04:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a08:	add	x4, x0, #0x3d8
   35a0c:	mov	w3, #0x1b                  	// #27
   35a10:	mov	x2, x1
   35a14:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a18:	add	x1, x0, #0x278
   35a1c:	mov	w0, #0x0                   	// #0
   35a20:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35a24:	ldr	x0, [sp, #32]
   35a28:	cmp	x0, #0x0
   35a2c:	cset	w0, eq  // eq = none
   35a30:	and	w0, w0, #0xff
   35a34:	and	x0, x0, #0xff
   35a38:	cmp	x0, #0x0
   35a3c:	b.eq	35a68 <udev_util_encode_string@@LIBUDEV_183+0x2a238>  // b.none
   35a40:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a44:	add	x1, x0, #0x25b
   35a48:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a4c:	add	x4, x0, #0x3d8
   35a50:	mov	w3, #0x1c                  	// #28
   35a54:	mov	x2, x1
   35a58:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a5c:	add	x1, x0, #0x280
   35a60:	mov	w0, #0x0                   	// #0
   35a64:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35a68:	ldr	x0, [sp, #24]
   35a6c:	cmp	x0, #0x0
   35a70:	cset	w0, eq  // eq = none
   35a74:	and	w0, w0, #0xff
   35a78:	and	x0, x0, #0xff
   35a7c:	cmp	x0, #0x0
   35a80:	b.eq	35aac <udev_util_encode_string@@LIBUDEV_183+0x2a27c>  // b.none
   35a84:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a88:	add	x1, x0, #0x25b
   35a8c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35a90:	add	x4, x0, #0x3d8
   35a94:	mov	w3, #0x1d                  	// #29
   35a98:	mov	x2, x1
   35a9c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35aa0:	add	x1, x0, #0x288
   35aa4:	mov	w0, #0x0                   	// #0
   35aa8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35aac:	add	x0, sp, #0x40
   35ab0:	mov	x2, x0
   35ab4:	mov	x1, #0x0                   	// #0
   35ab8:	ldr	x0, [sp, #40]
   35abc:	bl	35c7c <udev_util_encode_string@@LIBUDEV_183+0x2a44c>
   35ac0:	str	w0, [sp, #48]
   35ac4:	ldr	w0, [sp, #48]
   35ac8:	cmp	w0, #0x0
   35acc:	b.ge	35ad8 <udev_util_encode_string@@LIBUDEV_183+0x2a2a8>  // b.tcont
   35ad0:	ldr	w0, [sp, #48]
   35ad4:	b	35b6c <udev_util_encode_string@@LIBUDEV_183+0x2a33c>
   35ad8:	ldr	x0, [sp, #64]
   35adc:	bl	35b9c <udev_util_encode_string@@LIBUDEV_183+0x2a36c>
   35ae0:	str	w0, [sp, #52]
   35ae4:	ldr	w0, [sp, #52]
   35ae8:	cmp	w0, #0x0
   35aec:	b.ge	35b08 <udev_util_encode_string@@LIBUDEV_183+0x2a2d8>  // b.tcont
   35af0:	ldr	x0, [sp, #64]
   35af4:	bl	54b0 <free@plt>
   35af8:	bl	57d0 <__errno_location@plt>
   35afc:	ldr	w0, [x0]
   35b00:	neg	w0, w0
   35b04:	b	35b6c <udev_util_encode_string@@LIBUDEV_183+0x2a33c>
   35b08:	add	x0, sp, #0x38
   35b0c:	mov	x2, x0
   35b10:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35b14:	add	x1, x0, #0x298
   35b18:	ldr	w0, [sp, #52]
   35b1c:	bl	23644 <udev_util_encode_string@@LIBUDEV_183+0x17e14>
   35b20:	str	w0, [sp, #48]
   35b24:	ldr	w0, [sp, #48]
   35b28:	cmp	w0, #0x0
   35b2c:	b.ge	35b50 <udev_util_encode_string@@LIBUDEV_183+0x2a320>  // b.tcont
   35b30:	ldr	x0, [sp, #64]
   35b34:	bl	5830 <unlink@plt>
   35b38:	ldr	x0, [sp, #64]
   35b3c:	bl	54b0 <free@plt>
   35b40:	ldr	w0, [sp, #52]
   35b44:	bl	22f20 <udev_util_encode_string@@LIBUDEV_183+0x176f0>
   35b48:	ldr	w0, [sp, #48]
   35b4c:	b	35b6c <udev_util_encode_string@@LIBUDEV_183+0x2a33c>
   35b50:	ldr	x1, [sp, #56]
   35b54:	ldr	x0, [sp, #32]
   35b58:	str	x1, [x0]
   35b5c:	ldr	x1, [sp, #64]
   35b60:	ldr	x0, [sp, #24]
   35b64:	str	x1, [x0]
   35b68:	mov	w0, #0x0                   	// #0
   35b6c:	mov	w1, w0
   35b70:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   35b74:	ldr	x0, [x0, #4016]
   35b78:	ldr	x2, [sp, #72]
   35b7c:	ldr	x0, [x0]
   35b80:	eor	x0, x2, x0
   35b84:	cmp	x0, #0x0
   35b88:	b.eq	35b90 <udev_util_encode_string@@LIBUDEV_183+0x2a360>  // b.none
   35b8c:	bl	5390 <__stack_chk_fail@plt>
   35b90:	mov	w0, w1
   35b94:	ldp	x29, x30, [sp], #80
   35b98:	ret
   35b9c:	stp	x29, x30, [sp, #-64]!
   35ba0:	mov	x29, sp
   35ba4:	str	x19, [sp, #16]
   35ba8:	str	x0, [sp, #40]
   35bac:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   35bb0:	ldr	x0, [x0, #4016]
   35bb4:	ldr	x1, [x0]
   35bb8:	str	x1, [sp, #56]
   35bbc:	mov	x1, #0x0                   	// #0
   35bc0:	mov	w0, #0x3f                  	// #63
   35bc4:	bl	57b0 <umask@plt>
   35bc8:	str	w0, [sp, #48]
   35bcc:	ldr	x0, [sp, #40]
   35bd0:	cmp	x0, #0x0
   35bd4:	cset	w0, eq  // eq = none
   35bd8:	and	w0, w0, #0xff
   35bdc:	and	x0, x0, #0xff
   35be0:	cmp	x0, #0x0
   35be4:	b.eq	35c10 <udev_util_encode_string@@LIBUDEV_183+0x2a3e0>  // b.none
   35be8:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35bec:	add	x1, x0, #0x25b
   35bf0:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35bf4:	add	x4, x0, #0x3e8
   35bf8:	mov	w3, #0x3f                  	// #63
   35bfc:	mov	x2, x1
   35c00:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35c04:	add	x1, x0, #0x2a0
   35c08:	mov	w0, #0x0                   	// #0
   35c0c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35c10:	mov	w1, #0x80000               	// #524288
   35c14:	ldr	x0, [sp, #40]
   35c18:	bl	5520 <mkostemp64@plt>
   35c1c:	str	w0, [sp, #52]
   35c20:	ldr	w0, [sp, #52]
   35c24:	cmp	w0, #0x0
   35c28:	b.ge	35c3c <udev_util_encode_string@@LIBUDEV_183+0x2a40c>  // b.tcont
   35c2c:	bl	57d0 <__errno_location@plt>
   35c30:	ldr	w0, [x0]
   35c34:	neg	w19, w0
   35c38:	b	35c40 <udev_util_encode_string@@LIBUDEV_183+0x2a410>
   35c3c:	ldr	w19, [sp, #52]
   35c40:	add	x0, sp, #0x30
   35c44:	bl	35990 <udev_util_encode_string@@LIBUDEV_183+0x2a160>
   35c48:	mov	w1, w19
   35c4c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   35c50:	ldr	x0, [x0, #4016]
   35c54:	ldr	x2, [sp, #56]
   35c58:	ldr	x0, [x0]
   35c5c:	eor	x0, x2, x0
   35c60:	cmp	x0, #0x0
   35c64:	b.eq	35c6c <udev_util_encode_string@@LIBUDEV_183+0x2a43c>  // b.none
   35c68:	bl	5390 <__stack_chk_fail@plt>
   35c6c:	mov	w0, w1
   35c70:	ldr	x19, [sp, #16]
   35c74:	ldp	x29, x30, [sp], #64
   35c78:	ret
   35c7c:	stp	x29, x30, [sp, #-80]!
   35c80:	mov	x29, sp
   35c84:	str	x19, [sp, #16]
   35c88:	str	x0, [sp, #56]
   35c8c:	str	x1, [sp, #48]
   35c90:	str	x2, [sp, #40]
   35c94:	ldr	x0, [sp, #40]
   35c98:	cmp	x0, #0x0
   35c9c:	cset	w0, eq  // eq = none
   35ca0:	and	w0, w0, #0xff
   35ca4:	and	x0, x0, #0xff
   35ca8:	cmp	x0, #0x0
   35cac:	b.eq	35cd8 <udev_util_encode_string@@LIBUDEV_183+0x2a4a8>  // b.none
   35cb0:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35cb4:	add	x1, x0, #0x25b
   35cb8:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35cbc:	add	x4, x0, #0x3f8
   35cc0:	mov	w3, #0x5e                  	// #94
   35cc4:	mov	x2, x1
   35cc8:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35ccc:	add	x1, x0, #0x2a8
   35cd0:	mov	w0, #0x0                   	// #0
   35cd4:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35cd8:	ldr	x0, [sp, #56]
   35cdc:	bl	35950 <udev_util_encode_string@@LIBUDEV_183+0x2a120>
   35ce0:	and	w0, w0, #0xff
   35ce4:	cmp	w0, #0x0
   35ce8:	b.eq	35cf4 <udev_util_encode_string@@LIBUDEV_183+0x2a4c4>  // b.none
   35cec:	mov	w0, #0xffffffea            	// #-22
   35cf0:	b	35e20 <udev_util_encode_string@@LIBUDEV_183+0x2a5f0>
   35cf4:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35cf8:	add	x1, x0, #0x2b0
   35cfc:	ldr	x0, [sp, #56]
   35d00:	bl	31558 <udev_util_encode_string@@LIBUDEV_183+0x25d28>
   35d04:	and	w0, w0, #0xff
   35d08:	cmp	w0, #0x0
   35d0c:	b.eq	35d18 <udev_util_encode_string@@LIBUDEV_183+0x2a4e8>  // b.none
   35d10:	mov	w0, #0xffffffea            	// #-22
   35d14:	b	35e20 <udev_util_encode_string@@LIBUDEV_183+0x2a5f0>
   35d18:	ldr	x0, [sp, #56]
   35d1c:	bl	5450 <basename@plt>
   35d20:	str	x0, [sp, #64]
   35d24:	ldr	x0, [sp, #64]
   35d28:	bl	31980 <udev_util_encode_string@@LIBUDEV_183+0x26150>
   35d2c:	and	w0, w0, #0xff
   35d30:	eor	w0, w0, #0x1
   35d34:	and	w0, w0, #0xff
   35d38:	cmp	w0, #0x0
   35d3c:	b.eq	35d48 <udev_util_encode_string@@LIBUDEV_183+0x2a518>  // b.none
   35d40:	mov	w0, #0xffffffea            	// #-22
   35d44:	b	35e20 <udev_util_encode_string@@LIBUDEV_183+0x2a5f0>
   35d48:	ldr	x0, [sp, #48]
   35d4c:	bl	3592c <udev_util_encode_string@@LIBUDEV_183+0x2a0fc>
   35d50:	str	x0, [sp, #48]
   35d54:	ldr	x0, [sp, #56]
   35d58:	bl	5040 <strlen@plt>
   35d5c:	mov	x19, x0
   35d60:	ldr	x0, [sp, #48]
   35d64:	bl	5040 <strlen@plt>
   35d68:	add	x0, x19, x0
   35d6c:	add	x0, x0, #0x9
   35d70:	mov	x1, x0
   35d74:	mov	x0, #0x1                   	// #1
   35d78:	bl	358d8 <udev_util_encode_string@@LIBUDEV_183+0x2a0a8>
   35d7c:	str	x0, [sp, #72]
   35d80:	ldr	x0, [sp, #72]
   35d84:	cmp	x0, #0x0
   35d88:	b.ne	35d94 <udev_util_encode_string@@LIBUDEV_183+0x2a564>  // b.any
   35d8c:	mov	w0, #0xfffffff4            	// #-12
   35d90:	b	35e20 <udev_util_encode_string@@LIBUDEV_183+0x2a5f0>
   35d94:	ldr	x1, [sp, #64]
   35d98:	ldr	x0, [sp, #56]
   35d9c:	sub	x0, x1, x0
   35da0:	mov	x2, x0
   35da4:	ldr	x1, [sp, #56]
   35da8:	ldr	x0, [sp, #72]
   35dac:	bl	54e0 <mempcpy@plt>
   35db0:	mov	x2, x0
   35db4:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35db8:	add	x1, x0, #0x2b8
   35dbc:	mov	x0, x2
   35dc0:	ldrh	w3, [x1]
   35dc4:	strh	w3, [x0]
   35dc8:	ldrb	w1, [x1, #2]
   35dcc:	strb	w1, [x0, #2]
   35dd0:	add	x0, x2, #0x2
   35dd4:	ldr	x1, [sp, #48]
   35dd8:	bl	51b0 <stpcpy@plt>
   35ddc:	ldr	x1, [sp, #64]
   35de0:	bl	51b0 <stpcpy@plt>
   35de4:	mov	x2, x0
   35de8:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35dec:	add	x1, x0, #0x2c0
   35df0:	mov	x0, x2
   35df4:	ldr	w2, [x1]
   35df8:	str	w2, [x0]
   35dfc:	ldur	w1, [x1, #3]
   35e00:	stur	w1, [x0, #3]
   35e04:	mov	w1, #0x0                   	// #0
   35e08:	ldr	x0, [sp, #72]
   35e0c:	bl	30ec4 <udev_util_encode_string@@LIBUDEV_183+0x25694>
   35e10:	mov	x1, x0
   35e14:	ldr	x0, [sp, #40]
   35e18:	str	x1, [x0]
   35e1c:	mov	w0, #0x0                   	// #0
   35e20:	ldr	x19, [sp, #16]
   35e24:	ldp	x29, x30, [sp], #80
   35e28:	ret
   35e2c:	sub	sp, sp, #0x10
   35e30:	str	w0, [sp, #12]
   35e34:	ldr	w1, [sp, #12]
   35e38:	mov	w0, #0x10ffff              	// #1114111
   35e3c:	cmp	w1, w0
   35e40:	b.ls	35e4c <udev_util_encode_string@@LIBUDEV_183+0x2a61c>  // b.plast
   35e44:	mov	w0, #0x0                   	// #0
   35e48:	b	35eb0 <udev_util_encode_string@@LIBUDEV_183+0x2a680>
   35e4c:	ldr	w0, [sp, #12]
   35e50:	and	w1, w0, #0xfffff800
   35e54:	mov	w0, #0xd800                	// #55296
   35e58:	cmp	w1, w0
   35e5c:	b.ne	35e68 <udev_util_encode_string@@LIBUDEV_183+0x2a638>  // b.any
   35e60:	mov	w0, #0x0                   	// #0
   35e64:	b	35eb0 <udev_util_encode_string@@LIBUDEV_183+0x2a680>
   35e68:	ldr	w1, [sp, #12]
   35e6c:	mov	w0, #0xfdcf                	// #64975
   35e70:	cmp	w1, w0
   35e74:	b.ls	35e90 <udev_util_encode_string@@LIBUDEV_183+0x2a660>  // b.plast
   35e78:	ldr	w1, [sp, #12]
   35e7c:	mov	w0, #0xfdef                	// #65007
   35e80:	cmp	w1, w0
   35e84:	b.hi	35e90 <udev_util_encode_string@@LIBUDEV_183+0x2a660>  // b.pmore
   35e88:	mov	w0, #0x0                   	// #0
   35e8c:	b	35eb0 <udev_util_encode_string@@LIBUDEV_183+0x2a680>
   35e90:	ldr	w0, [sp, #12]
   35e94:	and	w1, w0, #0xfffe
   35e98:	mov	w0, #0xfffe                	// #65534
   35e9c:	cmp	w1, w0
   35ea0:	b.ne	35eac <udev_util_encode_string@@LIBUDEV_183+0x2a67c>  // b.any
   35ea4:	mov	w0, #0x0                   	// #0
   35ea8:	b	35eb0 <udev_util_encode_string@@LIBUDEV_183+0x2a680>
   35eac:	mov	w0, #0x1                   	// #1
   35eb0:	add	sp, sp, #0x10
   35eb4:	ret
   35eb8:	sub	sp, sp, #0x10
   35ebc:	strb	w0, [sp, #15]
   35ec0:	ldrsb	w0, [sp, #15]
   35ec4:	cmp	w0, #0x0
   35ec8:	b.lt	35ed4 <udev_util_encode_string@@LIBUDEV_183+0x2a6a4>  // b.tstop
   35ecc:	mov	x0, #0x1                   	// #1
   35ed0:	b	35f50 <udev_util_encode_string@@LIBUDEV_183+0x2a720>
   35ed4:	ldrb	w0, [sp, #15]
   35ed8:	and	w0, w0, #0xe0
   35edc:	cmp	w0, #0xc0
   35ee0:	b.ne	35eec <udev_util_encode_string@@LIBUDEV_183+0x2a6bc>  // b.any
   35ee4:	mov	x0, #0x2                   	// #2
   35ee8:	b	35f50 <udev_util_encode_string@@LIBUDEV_183+0x2a720>
   35eec:	ldrb	w0, [sp, #15]
   35ef0:	and	w0, w0, #0xf0
   35ef4:	cmp	w0, #0xe0
   35ef8:	b.ne	35f04 <udev_util_encode_string@@LIBUDEV_183+0x2a6d4>  // b.any
   35efc:	mov	x0, #0x3                   	// #3
   35f00:	b	35f50 <udev_util_encode_string@@LIBUDEV_183+0x2a720>
   35f04:	ldrb	w0, [sp, #15]
   35f08:	and	w0, w0, #0xf8
   35f0c:	cmp	w0, #0xf0
   35f10:	b.ne	35f1c <udev_util_encode_string@@LIBUDEV_183+0x2a6ec>  // b.any
   35f14:	mov	x0, #0x4                   	// #4
   35f18:	b	35f50 <udev_util_encode_string@@LIBUDEV_183+0x2a720>
   35f1c:	ldrb	w0, [sp, #15]
   35f20:	and	w0, w0, #0xfc
   35f24:	cmp	w0, #0xf8
   35f28:	b.ne	35f34 <udev_util_encode_string@@LIBUDEV_183+0x2a704>  // b.any
   35f2c:	mov	x0, #0x5                   	// #5
   35f30:	b	35f50 <udev_util_encode_string@@LIBUDEV_183+0x2a720>
   35f34:	ldrb	w0, [sp, #15]
   35f38:	and	w0, w0, #0xfe
   35f3c:	cmp	w0, #0xfc
   35f40:	b.ne	35f4c <udev_util_encode_string@@LIBUDEV_183+0x2a71c>  // b.any
   35f44:	mov	x0, #0x6                   	// #6
   35f48:	b	35f50 <udev_util_encode_string@@LIBUDEV_183+0x2a720>
   35f4c:	mov	x0, #0x0                   	// #0
   35f50:	add	sp, sp, #0x10
   35f54:	ret
   35f58:	stp	x29, x30, [sp, #-64]!
   35f5c:	mov	x29, sp
   35f60:	str	x0, [sp, #24]
   35f64:	str	x1, [sp, #16]
   35f68:	ldr	x0, [sp, #24]
   35f6c:	cmp	x0, #0x0
   35f70:	cset	w0, eq  // eq = none
   35f74:	and	w0, w0, #0xff
   35f78:	and	x0, x0, #0xff
   35f7c:	cmp	x0, #0x0
   35f80:	b.eq	35fac <udev_util_encode_string@@LIBUDEV_183+0x2a77c>  // b.none
   35f84:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35f88:	add	x1, x0, #0x40b
   35f8c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35f90:	add	x4, x0, #0x498
   35f94:	mov	w3, #0x56                  	// #86
   35f98:	mov	x2, x1
   35f9c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   35fa0:	add	x1, x0, #0x420
   35fa4:	mov	w0, #0x0                   	// #0
   35fa8:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   35fac:	ldr	x0, [sp, #24]
   35fb0:	ldrb	w0, [x0]
   35fb4:	bl	35eb8 <udev_util_encode_string@@LIBUDEV_183+0x2a688>
   35fb8:	str	x0, [sp, #56]
   35fbc:	ldr	x0, [sp, #56]
   35fc0:	cmp	x0, #0x6
   35fc4:	b.eq	360a4 <udev_util_encode_string@@LIBUDEV_183+0x2a874>  // b.none
   35fc8:	ldr	x0, [sp, #56]
   35fcc:	cmp	x0, #0x6
   35fd0:	b.hi	360b8 <udev_util_encode_string@@LIBUDEV_183+0x2a888>  // b.pmore
   35fd4:	ldr	x0, [sp, #56]
   35fd8:	cmp	x0, #0x5
   35fdc:	b.eq	36090 <udev_util_encode_string@@LIBUDEV_183+0x2a860>  // b.none
   35fe0:	ldr	x0, [sp, #56]
   35fe4:	cmp	x0, #0x5
   35fe8:	b.hi	360b8 <udev_util_encode_string@@LIBUDEV_183+0x2a888>  // b.pmore
   35fec:	ldr	x0, [sp, #56]
   35ff0:	cmp	x0, #0x4
   35ff4:	b.eq	3607c <udev_util_encode_string@@LIBUDEV_183+0x2a84c>  // b.none
   35ff8:	ldr	x0, [sp, #56]
   35ffc:	cmp	x0, #0x4
   36000:	b.hi	360b8 <udev_util_encode_string@@LIBUDEV_183+0x2a888>  // b.pmore
   36004:	ldr	x0, [sp, #56]
   36008:	cmp	x0, #0x3
   3600c:	b.eq	36068 <udev_util_encode_string@@LIBUDEV_183+0x2a838>  // b.none
   36010:	ldr	x0, [sp, #56]
   36014:	cmp	x0, #0x3
   36018:	b.hi	360b8 <udev_util_encode_string@@LIBUDEV_183+0x2a888>  // b.pmore
   3601c:	ldr	x0, [sp, #56]
   36020:	cmp	x0, #0x1
   36024:	b.eq	36038 <udev_util_encode_string@@LIBUDEV_183+0x2a808>  // b.none
   36028:	ldr	x0, [sp, #56]
   3602c:	cmp	x0, #0x2
   36030:	b.eq	36054 <udev_util_encode_string@@LIBUDEV_183+0x2a824>  // b.none
   36034:	b	360b8 <udev_util_encode_string@@LIBUDEV_183+0x2a888>
   36038:	ldr	x0, [sp, #24]
   3603c:	ldrb	w0, [x0]
   36040:	mov	w1, w0
   36044:	ldr	x0, [sp, #16]
   36048:	str	w1, [x0]
   3604c:	mov	w0, #0x0                   	// #0
   36050:	b	36148 <udev_util_encode_string@@LIBUDEV_183+0x2a918>
   36054:	ldr	x0, [sp, #24]
   36058:	ldrb	w0, [x0]
   3605c:	and	w0, w0, #0x1f
   36060:	str	w0, [sp, #44]
   36064:	b	360c0 <udev_util_encode_string@@LIBUDEV_183+0x2a890>
   36068:	ldr	x0, [sp, #24]
   3606c:	ldrb	w0, [x0]
   36070:	and	w0, w0, #0xf
   36074:	str	w0, [sp, #44]
   36078:	b	360c0 <udev_util_encode_string@@LIBUDEV_183+0x2a890>
   3607c:	ldr	x0, [sp, #24]
   36080:	ldrb	w0, [x0]
   36084:	and	w0, w0, #0x7
   36088:	str	w0, [sp, #44]
   3608c:	b	360c0 <udev_util_encode_string@@LIBUDEV_183+0x2a890>
   36090:	ldr	x0, [sp, #24]
   36094:	ldrb	w0, [x0]
   36098:	and	w0, w0, #0x3
   3609c:	str	w0, [sp, #44]
   360a0:	b	360c0 <udev_util_encode_string@@LIBUDEV_183+0x2a890>
   360a4:	ldr	x0, [sp, #24]
   360a8:	ldrb	w0, [x0]
   360ac:	and	w0, w0, #0x1
   360b0:	str	w0, [sp, #44]
   360b4:	b	360c0 <udev_util_encode_string@@LIBUDEV_183+0x2a890>
   360b8:	mov	w0, #0xffffffea            	// #-22
   360bc:	b	36148 <udev_util_encode_string@@LIBUDEV_183+0x2a918>
   360c0:	mov	x0, #0x1                   	// #1
   360c4:	str	x0, [sp, #48]
   360c8:	b	36128 <udev_util_encode_string@@LIBUDEV_183+0x2a8f8>
   360cc:	ldr	x1, [sp, #24]
   360d0:	ldr	x0, [sp, #48]
   360d4:	add	x0, x1, x0
   360d8:	ldrb	w0, [x0]
   360dc:	and	w0, w0, #0xc0
   360e0:	cmp	w0, #0x80
   360e4:	b.eq	360f0 <udev_util_encode_string@@LIBUDEV_183+0x2a8c0>  // b.none
   360e8:	mov	w0, #0xffffffea            	// #-22
   360ec:	b	36148 <udev_util_encode_string@@LIBUDEV_183+0x2a918>
   360f0:	ldr	w0, [sp, #44]
   360f4:	lsl	w0, w0, #6
   360f8:	str	w0, [sp, #44]
   360fc:	ldr	x1, [sp, #24]
   36100:	ldr	x0, [sp, #48]
   36104:	add	x0, x1, x0
   36108:	ldrb	w0, [x0]
   3610c:	and	w0, w0, #0x3f
   36110:	ldr	w1, [sp, #44]
   36114:	orr	w0, w1, w0
   36118:	str	w0, [sp, #44]
   3611c:	ldr	x0, [sp, #48]
   36120:	add	x0, x0, #0x1
   36124:	str	x0, [sp, #48]
   36128:	ldr	x1, [sp, #48]
   3612c:	ldr	x0, [sp, #56]
   36130:	cmp	x1, x0
   36134:	b.cc	360cc <udev_util_encode_string@@LIBUDEV_183+0x2a89c>  // b.lo, b.ul, b.last
   36138:	ldr	x0, [sp, #16]
   3613c:	ldr	w1, [sp, #44]
   36140:	str	w1, [x0]
   36144:	mov	w0, #0x0                   	// #0
   36148:	ldp	x29, x30, [sp], #64
   3614c:	ret
   36150:	sub	sp, sp, #0x10
   36154:	str	w0, [sp, #12]
   36158:	ldr	w0, [sp, #12]
   3615c:	cmp	w0, #0x7f
   36160:	b.hi	3616c <udev_util_encode_string@@LIBUDEV_183+0x2a93c>  // b.pmore
   36164:	mov	w0, #0x1                   	// #1
   36168:	b	361cc <udev_util_encode_string@@LIBUDEV_183+0x2a99c>
   3616c:	ldr	w0, [sp, #12]
   36170:	cmp	w0, #0x7ff
   36174:	b.hi	36180 <udev_util_encode_string@@LIBUDEV_183+0x2a950>  // b.pmore
   36178:	mov	w0, #0x2                   	// #2
   3617c:	b	361cc <udev_util_encode_string@@LIBUDEV_183+0x2a99c>
   36180:	ldr	w1, [sp, #12]
   36184:	mov	w0, #0xffff                	// #65535
   36188:	cmp	w1, w0
   3618c:	b.hi	36198 <udev_util_encode_string@@LIBUDEV_183+0x2a968>  // b.pmore
   36190:	mov	w0, #0x3                   	// #3
   36194:	b	361cc <udev_util_encode_string@@LIBUDEV_183+0x2a99c>
   36198:	ldr	w1, [sp, #12]
   3619c:	mov	w0, #0x1fffff              	// #2097151
   361a0:	cmp	w1, w0
   361a4:	b.hi	361b0 <udev_util_encode_string@@LIBUDEV_183+0x2a980>  // b.pmore
   361a8:	mov	w0, #0x4                   	// #4
   361ac:	b	361cc <udev_util_encode_string@@LIBUDEV_183+0x2a99c>
   361b0:	ldr	w1, [sp, #12]
   361b4:	mov	w0, #0x3ffffff             	// #67108863
   361b8:	cmp	w1, w0
   361bc:	b.hi	361c8 <udev_util_encode_string@@LIBUDEV_183+0x2a998>  // b.pmore
   361c0:	mov	w0, #0x5                   	// #5
   361c4:	b	361cc <udev_util_encode_string@@LIBUDEV_183+0x2a99c>
   361c8:	mov	w0, #0x6                   	// #6
   361cc:	add	sp, sp, #0x10
   361d0:	ret
   361d4:	stp	x29, x30, [sp, #-64]!
   361d8:	mov	x29, sp
   361dc:	str	x0, [sp, #24]
   361e0:	str	x1, [sp, #16]
   361e4:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   361e8:	ldr	x0, [x0, #4016]
   361ec:	ldr	x1, [x0]
   361f0:	str	x1, [sp, #56]
   361f4:	mov	x1, #0x0                   	// #0
   361f8:	ldr	x0, [sp, #24]
   361fc:	cmp	x0, #0x0
   36200:	cset	w0, eq  // eq = none
   36204:	and	w0, w0, #0xff
   36208:	and	x0, x0, #0xff
   3620c:	cmp	x0, #0x0
   36210:	b.eq	3623c <udev_util_encode_string@@LIBUDEV_183+0x2aa0c>  // b.none
   36214:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36218:	add	x1, x0, #0x40b
   3621c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36220:	add	x4, x0, #0x4b0
   36224:	mov	w3, #0x1fb                 	// #507
   36228:	mov	x2, x1
   3622c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36230:	add	x1, x0, #0x420
   36234:	mov	w0, #0x0                   	// #0
   36238:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3623c:	ldr	x0, [sp, #16]
   36240:	cmp	x0, #0x0
   36244:	cset	w0, eq  // eq = none
   36248:	and	w0, w0, #0xff
   3624c:	and	x0, x0, #0xff
   36250:	cmp	x0, #0x0
   36254:	b.eq	36280 <udev_util_encode_string@@LIBUDEV_183+0x2aa50>  // b.none
   36258:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   3625c:	add	x1, x0, #0x40b
   36260:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36264:	add	x4, x0, #0x4b0
   36268:	mov	w3, #0x1fc                 	// #508
   3626c:	mov	x2, x1
   36270:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36274:	add	x1, x0, #0x488
   36278:	mov	w0, #0x0                   	// #0
   3627c:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   36280:	ldr	x0, [sp, #24]
   36284:	ldrb	w0, [x0]
   36288:	bl	35eb8 <udev_util_encode_string@@LIBUDEV_183+0x2a688>
   3628c:	str	x0, [sp, #48]
   36290:	ldr	x0, [sp, #48]
   36294:	cmp	x0, #0x0
   36298:	b.ne	362a4 <udev_util_encode_string@@LIBUDEV_183+0x2aa74>  // b.any
   3629c:	mov	w0, #0xffffffea            	// #-22
   362a0:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   362a4:	ldr	x1, [sp, #48]
   362a8:	ldr	x0, [sp, #16]
   362ac:	cmp	x1, x0
   362b0:	b.ls	362bc <udev_util_encode_string@@LIBUDEV_183+0x2aa8c>  // b.plast
   362b4:	mov	w0, #0xffffffea            	// #-22
   362b8:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   362bc:	ldr	x0, [sp, #48]
   362c0:	cmp	x0, #0x1
   362c4:	b.ne	362d0 <udev_util_encode_string@@LIBUDEV_183+0x2aaa0>  // b.any
   362c8:	mov	w0, #0x1                   	// #1
   362cc:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   362d0:	str	xzr, [sp, #40]
   362d4:	b	36308 <udev_util_encode_string@@LIBUDEV_183+0x2aad8>
   362d8:	ldr	x1, [sp, #24]
   362dc:	ldr	x0, [sp, #40]
   362e0:	add	x0, x1, x0
   362e4:	ldrb	w0, [x0]
   362e8:	sxtb	w0, w0
   362ec:	cmp	w0, #0x0
   362f0:	b.lt	362fc <udev_util_encode_string@@LIBUDEV_183+0x2aacc>  // b.tstop
   362f4:	mov	w0, #0xffffffea            	// #-22
   362f8:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   362fc:	ldr	x0, [sp, #40]
   36300:	add	x0, x0, #0x1
   36304:	str	x0, [sp, #40]
   36308:	ldr	x1, [sp, #40]
   3630c:	ldr	x0, [sp, #48]
   36310:	cmp	x1, x0
   36314:	b.cc	362d8 <udev_util_encode_string@@LIBUDEV_183+0x2aaa8>  // b.lo, b.ul, b.last
   36318:	add	x0, sp, #0x20
   3631c:	mov	x1, x0
   36320:	ldr	x0, [sp, #24]
   36324:	bl	35f58 <udev_util_encode_string@@LIBUDEV_183+0x2a728>
   36328:	str	w0, [sp, #36]
   3632c:	ldr	w0, [sp, #36]
   36330:	cmp	w0, #0x0
   36334:	b.ge	36340 <udev_util_encode_string@@LIBUDEV_183+0x2ab10>  // b.tcont
   36338:	ldr	w0, [sp, #36]
   3633c:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   36340:	ldr	w0, [sp, #32]
   36344:	bl	36150 <udev_util_encode_string@@LIBUDEV_183+0x2a920>
   36348:	ldr	x1, [sp, #48]
   3634c:	cmp	w0, w1
   36350:	b.eq	3635c <udev_util_encode_string@@LIBUDEV_183+0x2ab2c>  // b.none
   36354:	mov	w0, #0xffffffea            	// #-22
   36358:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   3635c:	ldr	w0, [sp, #32]
   36360:	bl	35e2c <udev_util_encode_string@@LIBUDEV_183+0x2a5fc>
   36364:	and	w0, w0, #0xff
   36368:	eor	w0, w0, #0x1
   3636c:	and	w0, w0, #0xff
   36370:	cmp	w0, #0x0
   36374:	b.eq	36380 <udev_util_encode_string@@LIBUDEV_183+0x2ab50>  // b.none
   36378:	mov	w0, #0xffffffea            	// #-22
   3637c:	b	36384 <udev_util_encode_string@@LIBUDEV_183+0x2ab54>
   36380:	ldr	x0, [sp, #48]
   36384:	mov	w1, w0
   36388:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   3638c:	ldr	x0, [x0, #4016]
   36390:	ldr	x2, [sp, #56]
   36394:	ldr	x0, [x0]
   36398:	eor	x0, x2, x0
   3639c:	cmp	x0, #0x0
   363a0:	b.eq	363a8 <udev_util_encode_string@@LIBUDEV_183+0x2ab78>  // b.none
   363a4:	bl	5390 <__stack_chk_fail@plt>
   363a8:	mov	w0, w1
   363ac:	ldp	x29, x30, [sp], #64
   363b0:	ret
   363b4:	stp	x29, x30, [sp, #-48]!
   363b8:	mov	x29, sp
   363bc:	str	x0, [sp, #24]
   363c0:	ldr	x0, [sp, #24]
   363c4:	bl	57f0 <getenv@plt>
   363c8:	str	x0, [sp, #40]
   363cc:	ldr	x0, [sp, #40]
   363d0:	cmp	x0, #0x0
   363d4:	b.ne	363e0 <udev_util_encode_string@@LIBUDEV_183+0x2abb0>  // b.any
   363d8:	mov	w0, #0xfffffffa            	// #-6
   363dc:	b	363e8 <udev_util_encode_string@@LIBUDEV_183+0x2abb8>
   363e0:	ldr	x0, [sp, #40]
   363e4:	bl	30068 <udev_util_encode_string@@LIBUDEV_183+0x24838>
   363e8:	ldp	x29, x30, [sp], #48
   363ec:	ret
   363f0:	stp	x29, x30, [sp, #-32]!
   363f4:	mov	x29, sp
   363f8:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   363fc:	ldr	x1, [x0, #3944]
   36400:	add	x0, x0, #0xf68
   36404:	blr	x1
   36408:	mrs	x1, tpidr_el0
   3640c:	add	x0, x1, x0
   36410:	ldr	x0, [x0]
   36414:	cmp	x0, #0x0
   36418:	cset	w0, ne  // ne = any
   3641c:	and	w0, w0, #0xff
   36420:	and	x0, x0, #0xff
   36424:	cmp	x0, #0x0
   36428:	b.eq	3644c <udev_util_encode_string@@LIBUDEV_183+0x2ac1c>  // b.none
   3642c:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   36430:	ldr	x1, [x0, #3944]
   36434:	add	x0, x0, #0xf68
   36438:	blr	x1
   3643c:	mrs	x1, tpidr_el0
   36440:	add	x0, x1, x0
   36444:	ldr	x0, [x0]
   36448:	b	364d8 <udev_util_encode_string@@LIBUDEV_183+0x2aca8>
   3644c:	mov	w0, #0x1e                  	// #30
   36450:	bl	56b0 <sysconf@plt>
   36454:	str	x0, [sp, #24]
   36458:	ldr	x0, [sp, #24]
   3645c:	cmp	x0, #0x0
   36460:	cset	w0, le
   36464:	and	w0, w0, #0xff
   36468:	and	x0, x0, #0xff
   3646c:	cmp	x0, #0x0
   36470:	b.eq	3649c <udev_util_encode_string@@LIBUDEV_183+0x2ac6c>  // b.none
   36474:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36478:	add	x1, x0, #0x4d3
   3647c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36480:	add	x4, x0, #0x4f8
   36484:	mov	w3, #0xd                   	// #13
   36488:	mov	x2, x1
   3648c:	adrp	x0, 3f000 <udev_util_encode_string@@LIBUDEV_183+0x337d0>
   36490:	add	x1, x0, #0x4f0
   36494:	mov	w0, #0x0                   	// #0
   36498:	bl	2dbdc <udev_util_encode_string@@LIBUDEV_183+0x223ac>
   3649c:	ldr	x1, [sp, #24]
   364a0:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   364a4:	ldr	x2, [x0, #3944]
   364a8:	add	x0, x0, #0xf68
   364ac:	blr	x2
   364b0:	mrs	x2, tpidr_el0
   364b4:	add	x0, x2, x0
   364b8:	str	x1, [x0]
   364bc:	adrp	x0, 56000 <udev_util_encode_string@@LIBUDEV_183+0x4a7d0>
   364c0:	ldr	x1, [x0, #3944]
   364c4:	add	x0, x0, #0xf68
   364c8:	blr	x1
   364cc:	mrs	x1, tpidr_el0
   364d0:	add	x0, x1, x0
   364d4:	ldr	x0, [x0]
   364d8:	ldp	x29, x30, [sp], #32
   364dc:	ret
   364e0:	mov	x2, x1
   364e4:	mov	x1, x0
   364e8:	mov	w0, #0x0                   	// #0
   364ec:	b	5090 <__xstat64@plt>
   364f0:	mov	x2, x1
   364f4:	mov	w1, w0
   364f8:	mov	w0, #0x0                   	// #0
   364fc:	b	54f0 <__fxstat64@plt>
   36500:	mov	x2, x1
   36504:	mov	x1, x0
   36508:	mov	w0, #0x0                   	// #0
   3650c:	b	54a0 <__lxstat64@plt>

Disassembly of section .fini:

0000000000036510 <.fini>:
   36510:	stp	x29, x30, [sp, #-16]!
   36514:	mov	x29, sp
   36518:	ldp	x29, x30, [sp], #16
   3651c:	ret
