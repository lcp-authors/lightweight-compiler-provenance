
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//strtoull_test.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <strtoull_testcase>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #56]
  10:	str	w1, [sp, #52]
  14:	str	x2, [sp, #40]
  18:	str	w3, [sp, #48]
  1c:	str	w4, [sp, #36]
  20:	adrp	x0, 0 <strtoull_testcase>
  24:	add	x0, x0, #0x0
  28:	ldr	x0, [x0]
  2c:	str	wzr, [x0]
  30:	add	x0, sp, #0x40
  34:	ldr	w2, [sp, #52]
  38:	mov	x1, x0
  3c:	ldr	x0, [sp, #56]
  40:	bl	0 <grub_strtoull>
  44:	str	x0, [sp, #72]
  48:	adrp	x0, 0 <strtoull_testcase>
  4c:	add	x0, x0, #0x0
  50:	ldr	x0, [x0]
  54:	ldr	w0, [x0]
  58:	ldr	w1, [sp, #36]
  5c:	cmp	w1, w0
  60:	cset	w0, eq  // eq = none
  64:	and	w0, w0, #0xff
  68:	mov	w8, w0
  6c:	adrp	x0, 0 <strtoull_testcase>
  70:	add	x0, x0, #0x0
  74:	ldr	x0, [x0]
  78:	ldr	w1, [x0]
  7c:	ldr	x0, [sp, #56]
  80:	str	x0, [sp]
  84:	mov	w7, w1
  88:	ldr	w6, [sp, #36]
  8c:	adrp	x0, 0 <strtoull_testcase>
  90:	add	x0, x0, #0x0
  94:	ldr	x5, [x0]
  98:	adrp	x0, 0 <strtoull_testcase>
  9c:	add	x0, x0, #0x0
  a0:	ldr	x4, [x0]
  a4:	mov	w3, #0x20                  	// #32
  a8:	adrp	x0, 0 <strtoull_testcase>
  ac:	add	x0, x0, #0x0
  b0:	ldr	x2, [x0]
  b4:	adrp	x0, 0 <strtoull_testcase>
  b8:	add	x0, x0, #0x0
  bc:	ldr	x1, [x0]
  c0:	mov	w0, w8
  c4:	bl	0 <grub_test_assert_helper>
  c8:	adrp	x0, 0 <strtoull_testcase>
  cc:	add	x0, x0, #0x0
  d0:	ldr	x0, [x0]
  d4:	ldr	w0, [x0]
  d8:	cmp	w0, #0x0
  dc:	b.eq	f4 <strtoull_testcase+0xf4>  // b.none
  e0:	adrp	x0, 0 <strtoull_testcase>
  e4:	add	x0, x0, #0x0
  e8:	ldr	x0, [x0]
  ec:	str	wzr, [x0]
  f0:	b	1d4 <strtoull_testcase+0x1d4>
  f4:	ldrsw	x0, [sp, #48]
  f8:	ldr	x1, [sp, #56]
  fc:	add	x1, x1, x0
 100:	ldr	x0, [sp, #64]
 104:	cmp	x1, x0
 108:	cset	w0, eq  // eq = none
 10c:	and	w0, w0, #0xff
 110:	mov	w8, w0
 114:	ldr	x1, [sp, #64]
 118:	ldr	x0, [sp, #56]
 11c:	sub	x0, x1, x0
 120:	mov	w1, w0
 124:	ldr	x0, [sp, #56]
 128:	str	x0, [sp]
 12c:	mov	w7, w1
 130:	ldr	w6, [sp, #48]
 134:	adrp	x0, 0 <strtoull_testcase>
 138:	add	x0, x0, #0x0
 13c:	ldr	x5, [x0]
 140:	adrp	x0, 0 <strtoull_testcase>
 144:	add	x0, x0, #0x0
 148:	ldr	x4, [x0]
 14c:	mov	w3, #0x28                  	// #40
 150:	adrp	x0, 0 <strtoull_testcase>
 154:	add	x0, x0, #0x0
 158:	ldr	x2, [x0]
 15c:	adrp	x0, 0 <strtoull_testcase>
 160:	add	x0, x0, #0x0
 164:	ldr	x1, [x0]
 168:	mov	w0, w8
 16c:	bl	0 <grub_test_assert_helper>
 170:	ldr	x1, [sp, #72]
 174:	ldr	x0, [sp, #40]
 178:	cmp	x1, x0
 17c:	cset	w0, eq  // eq = none
 180:	and	w0, w0, #0xff
 184:	mov	w8, w0
 188:	ldr	x0, [sp, #56]
 18c:	str	x0, [sp]
 190:	ldr	x7, [sp, #72]
 194:	ldr	x6, [sp, #40]
 198:	adrp	x0, 0 <strtoull_testcase>
 19c:	add	x0, x0, #0x0
 1a0:	ldr	x5, [x0]
 1a4:	adrp	x0, 0 <strtoull_testcase>
 1a8:	add	x0, x0, #0x0
 1ac:	ldr	x4, [x0]
 1b0:	mov	w3, #0x2b                  	// #43
 1b4:	adrp	x0, 0 <strtoull_testcase>
 1b8:	add	x0, x0, #0x0
 1bc:	ldr	x2, [x0]
 1c0:	adrp	x0, 0 <strtoull_testcase>
 1c4:	add	x0, x0, #0x0
 1c8:	ldr	x1, [x0]
 1cc:	mov	w0, w8
 1d0:	bl	0 <grub_test_assert_helper>
 1d4:	ldp	x29, x30, [sp, #16]
 1d8:	add	sp, sp, #0x50
 1dc:	ret
	...

0000000000000228 <strtoull_test>:
 228:	stp	x29, x30, [sp, #-16]!
 22c:	mov	x29, sp
 230:	mov	w4, #0x0                   	// #0
 234:	mov	w3, #0x1                   	// #1
 238:	mov	x2, #0x9                   	// #9
 23c:	mov	w1, #0x0                   	// #0
 240:	adrp	x0, 0 <strtoull_testcase>
 244:	add	x0, x0, #0x0
 248:	ldr	x0, [x0]
 24c:	bl	0 <strtoull_testcase>
 250:	mov	w4, #0x0                   	// #0
 254:	mov	w3, #0x4                   	// #4
 258:	mov	x2, #0xaa                  	// #170
 25c:	mov	w1, #0x0                   	// #0
 260:	adrp	x0, 0 <strtoull_testcase>
 264:	add	x0, x0, #0x0
 268:	ldr	x0, [x0]
 26c:	bl	0 <strtoull_testcase>
 270:	mov	w4, #0x0                   	// #0
 274:	mov	w3, #0x4                   	// #4
 278:	mov	x2, #0xff                  	// #255
 27c:	mov	w1, #0x0                   	// #0
 280:	adrp	x0, 0 <strtoull_testcase>
 284:	add	x0, x0, #0x0
 288:	ldr	x0, [x0]
 28c:	bl	0 <strtoull_testcase>
 290:	mov	w4, #0x0                   	// #0
 294:	mov	w3, #0x1                   	// #1
 298:	mov	x2, #0x0                   	// #0
 29c:	mov	w1, #0xa                   	// #10
 2a0:	adrp	x0, 0 <strtoull_testcase>
 2a4:	add	x0, x0, #0x0
 2a8:	ldr	x0, [x0]
 2ac:	bl	0 <strtoull_testcase>
 2b0:	mov	w4, #0xa                   	// #10
 2b4:	mov	w3, #0x0                   	// #0
 2b8:	mov	x2, #0x0                   	// #0
 2bc:	mov	w1, #0x8                   	// #8
 2c0:	adrp	x0, 0 <strtoull_testcase>
 2c4:	add	x0, x0, #0x0
 2c8:	ldr	x0, [x0]
 2cc:	bl	0 <strtoull_testcase>
 2d0:	mov	w4, #0x0                   	// #0
 2d4:	mov	w3, #0x1                   	// #1
 2d8:	mov	x2, #0x3                   	// #3
 2dc:	mov	w1, #0x8                   	// #8
 2e0:	adrp	x0, 0 <strtoull_testcase>
 2e4:	add	x0, x0, #0x0
 2e8:	ldr	x0, [x0]
 2ec:	bl	0 <strtoull_testcase>
 2f0:	mov	w4, #0x0                   	// #0
 2f4:	mov	w3, #0x1                   	// #1
 2f8:	mov	x2, #0x7                   	// #7
 2fc:	mov	w1, #0x8                   	// #8
 300:	adrp	x0, 0 <strtoull_testcase>
 304:	add	x0, x0, #0x0
 308:	ldr	x0, [x0]
 30c:	bl	0 <strtoull_testcase>
 310:	mov	w4, #0x0                   	// #0
 314:	mov	w3, #0x1                   	// #1
 318:	mov	x2, #0x1                   	// #1
 31c:	mov	w1, #0x10                  	// #16
 320:	adrp	x0, 0 <strtoull_testcase>
 324:	add	x0, x0, #0x0
 328:	ldr	x0, [x0]
 32c:	bl	0 <strtoull_testcase>
 330:	mov	w4, #0xb                   	// #11
 334:	mov	w3, #0x0                   	// #0
 338:	mov	x2, #0x0                   	// #0
 33c:	mov	w1, #0xa                   	// #10
 340:	adrp	x0, 0 <strtoull_testcase>
 344:	add	x0, x0, #0x0
 348:	ldr	x0, [x0]
 34c:	bl	0 <strtoull_testcase>
 350:	nop
 354:	ldp	x29, x30, [sp], #16
 358:	ret
 35c:	nop
	...

00000000000003a8 <grub_mod_init>:
 3a8:	stp	x29, x30, [sp, #-32]!
 3ac:	mov	x29, sp
 3b0:	str	x0, [sp, #24]
 3b4:	adrp	x0, 0 <strtoull_testcase>
 3b8:	add	x0, x0, #0x0
 3bc:	ldr	x1, [x0]
 3c0:	adrp	x0, 0 <strtoull_testcase>
 3c4:	add	x0, x0, #0x0
 3c8:	ldr	x0, [x0]
 3cc:	bl	0 <grub_test_register>
 3d0:	nop
 3d4:	ldp	x29, x30, [sp], #32
 3d8:	ret
 3dc:	nop
	...

00000000000003f0 <grub_mod_fini>:
 3f0:	stp	x29, x30, [sp, #-16]!
 3f4:	mov	x29, sp
 3f8:	adrp	x0, 0 <strtoull_testcase>
 3fc:	add	x0, x0, #0x0
 400:	ldr	x0, [x0]
 404:	bl	0 <grub_test_unregister>
 408:	nop
 40c:	ldp	x29, x30, [sp], #16
 410:	ret
 414:	nop
	...
