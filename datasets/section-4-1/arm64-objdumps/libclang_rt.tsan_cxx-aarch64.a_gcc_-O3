In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.tsan_cxx-aarch64.a_gcc_-O3:

ubsan_handlers_cxx.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>:
   0:	sub	sp, sp, #0x2a0
   4:	stp	x19, x20, [sp]
   8:	mov	x20, x0
   c:	mov	x0, x2
  10:	stp	x21, x22, [sp, #16]
  14:	mov	x22, x1
  18:	mov	x21, x4
  1c:	mov	x1, x3
  20:	str	x30, [sp, #72]
  24:	bl	0 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_>
  28:	tst	w0, #0xff
  2c:	b.eq	48 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x48>  // b.none
  30:	mov	w0, #0x0                   	// #0
  34:	ldp	x19, x20, [sp]
  38:	ldp	x21, x22, [sp, #16]
  3c:	ldr	x30, [sp, #72]
  40:	add	sp, sp, #0x2a0
  44:	ret
  48:	add	x0, x20, #0xc
  4c:	mov	w1, #0xffffffff            	// #-1
  50:	stp	x23, x24, [sp, #32]
  54:	stp	x25, x26, [sp, #48]
  58:	ldxr	w23, [x0]
  5c:	stxr	w2, w1, [x0]
  60:	cbnz	w2, 58 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x58>
  64:	dmb	ish
  68:	ldp	x4, x5, [x21]
  6c:	mov	x1, #0x0                   	// #0
  70:	ldr	w24, [x20, #8]
  74:	add	x19, sp, #0x80
  78:	ldr	x6, [x21, #16]
  7c:	mov	x2, x19
  80:	ldr	x25, [x20]
  84:	bfxil	x1, x24, #0, #32
  88:	mov	w3, #0x1b                  	// #27
  8c:	stp	x4, x5, [sp, #128]
  90:	bfi	x1, x23, #32, #32
  94:	mov	x0, x25
  98:	str	x6, [sp, #144]
  9c:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
  a0:	ands	w0, w0, #0xff
  a4:	b.ne	214 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x214>  // b.any
  a8:	mov	x1, x19
  ac:	mov	w19, #0x1                   	// #1
  b0:	str	w19, [sp, #240]
  b4:	add	x2, sp, #0x50
  b8:	str	x25, [sp, #248]
  bc:	mov	w3, #0x1b                  	// #27
  c0:	str	w24, [sp, #256]
  c4:	add	x26, sp, #0xf0
  c8:	str	w23, [sp, #260]
  cc:	ldp	x4, x5, [sp, #240]
  d0:	stp	x4, x5, [sp, #80]
  d4:	ldp	x4, x5, [sp, #256]
  d8:	stp	x4, x5, [sp, #96]
  dc:	ldr	x4, [sp, #272]
  e0:	str	x4, [sp, #112]
  e4:	ldp	x4, x5, [x21]
  e8:	stp	x4, x5, [sp, #128]
  ec:	ldr	x4, [x21, #16]
  f0:	str	x27, [sp, #64]
  f4:	add	x27, sp, #0xa0
  f8:	str	x4, [sp, #144]
  fc:	mov	x0, x27
 100:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 104:	mov	x0, x22
 108:	bl	0 <_ZN7__ubsan21getSymbolizedLocationEm>
 10c:	mov	x21, x0
 110:	adrp	x3, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 114:	ldr	x1, [x20, #16]
 118:	add	x3, x3, #0x0
 11c:	ldr	x20, [x21, #40]
 120:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 124:	add	x2, x2, #0x0
 128:	mov	x4, #0x1b00000000          	// #115964116992
 12c:	cmp	x20, #0x0
 130:	mov	x0, x26
 134:	csel	x20, x3, x20, eq  // eq = none
 138:	str	w19, [sp, #240]
 13c:	str	x25, [sp, #248]
 140:	str	w24, [sp, #256]
 144:	str	w23, [sp, #260]
 148:	stp	x4, x2, [sp, #280]
 14c:	str	wzr, [sp, #304]
 150:	str	x20, [sp, #320]
 154:	str	w19, [sp, #560]
 158:	str	wzr, [sp, #568]
 15c:	str	xzr, [sp, #576]
 160:	str	xzr, [sp, #584]
 164:	str	wzr, [sp, #608]
 168:	str	xzr, [sp, #616]
 16c:	str	xzr, [sp, #624]
 170:	str	xzr, [sp, #648]
 174:	str	wzr, [sp, #656]
 178:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 17c:	mov	x0, x26
 180:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 184:	adrp	x1, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 188:	mov	x2, #0x1                   	// #1
 18c:	add	x1, x1, #0x0
 190:	mov	w3, #0x3                   	// #3
 194:	movk	x2, #0x1b, lsl #32
 198:	mov	x0, x26
 19c:	str	w3, [sp, #240]
 1a0:	str	xzr, [sp, #248]
 1a4:	str	xzr, [sp, #256]
 1a8:	stp	x21, x2, [sp, #272]
 1ac:	str	x1, [sp, #288]
 1b0:	str	wzr, [sp, #304]
 1b4:	str	x20, [sp, #320]
 1b8:	str	w19, [sp, #560]
 1bc:	str	wzr, [sp, #568]
 1c0:	str	xzr, [sp, #576]
 1c4:	str	xzr, [sp, #584]
 1c8:	str	wzr, [sp, #608]
 1cc:	str	xzr, [sp, #616]
 1d0:	str	xzr, [sp, #624]
 1d4:	str	xzr, [sp, #648]
 1d8:	str	wzr, [sp, #656]
 1dc:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 1e0:	mov	x0, x21
 1e4:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 1e8:	mov	x0, x27
 1ec:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 1f0:	mov	w0, w19
 1f4:	ldp	x19, x20, [sp]
 1f8:	ldp	x21, x22, [sp, #16]
 1fc:	ldp	x23, x24, [sp, #32]
 200:	ldp	x25, x26, [sp, #48]
 204:	ldr	x27, [sp, #64]
 208:	ldr	x30, [sp, #72]
 20c:	add	sp, sp, #0x2a0
 210:	ret
 214:	ldp	x19, x20, [sp]
 218:	ldp	x21, x22, [sp, #16]
 21c:	ldp	x23, x24, [sp, #32]
 220:	ldp	x25, x26, [sp, #48]
 224:	ldr	x30, [sp, #72]
 228:	add	sp, sp, #0x2a0
 22c:	ret

0000000000000230 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>:
 230:	sub	sp, sp, #0x2e0
 234:	stp	x19, x20, [sp]
 238:	mov	x19, x0
 23c:	mov	x20, x1
 240:	mov	x0, x1
 244:	stp	x21, x22, [sp, #16]
 248:	mov	x21, x3
 24c:	ldr	x1, [x19, #24]
 250:	str	x30, [sp, #80]
 254:	bl	0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
 258:	tst	w0, #0xff
 25c:	b.eq	278 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x48>  // b.none
 260:	mov	w0, #0x0                   	// #0
 264:	ldp	x19, x20, [sp]
 268:	ldp	x21, x22, [sp, #16]
 26c:	ldr	x30, [sp, #80]
 270:	add	sp, sp, #0x2e0
 274:	ret
 278:	add	x8, sp, #0xc8
 27c:	mov	x0, x20
 280:	stp	x23, x24, [sp, #32]
 284:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromObjectEPv>
 288:	ldp	x22, x23, [sp, #200]
 28c:	cbz	x22, 2a0 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x70>
 290:	mov	x0, x22
 294:	bl	0 <_ZN7__ubsan21IsVptrCheckSuppressedEPKc>
 298:	tst	w0, #0xff
 29c:	b.ne	49c <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x26c>  // b.any
 2a0:	add	x0, x19, #0xc
 2a4:	mov	w1, #0xffffffff            	// #-1
 2a8:	stp	x25, x26, [sp, #48]
 2ac:	stp	x27, x28, [sp, #64]
 2b0:	ldxr	w24, [x0]
 2b4:	stxr	w2, w1, [x0]
 2b8:	cbnz	w2, 2b0 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x80>
 2bc:	dmb	ish
 2c0:	ldp	x4, x5, [x21]
 2c4:	mov	x1, #0x0                   	// #0
 2c8:	ldr	w25, [x19, #8]
 2cc:	add	x26, sp, #0xa0
 2d0:	ldr	x6, [x21, #16]
 2d4:	mov	x2, x26
 2d8:	ldr	x27, [x19]
 2dc:	bfxil	x1, x25, #0, #32
 2e0:	mov	w3, #0x1e                  	// #30
 2e4:	stp	x4, x5, [sp, #160]
 2e8:	bfi	x1, x24, #32, #32
 2ec:	mov	x0, x27
 2f0:	str	x6, [sp, #176]
 2f4:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
 2f8:	tst	w0, #0xff
 2fc:	b.ne	48c <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x25c>  // b.any
 300:	mov	w28, #0x1                   	// #1
 304:	str	w28, [sp, #304]
 308:	str	x27, [sp, #312]
 30c:	add	x8, sp, #0xe0
 310:	str	w25, [sp, #320]
 314:	mov	x0, x8
 318:	str	w24, [sp, #324]
 31c:	mov	x1, x26
 320:	ldp	x6, x7, [sp, #304]
 324:	stp	x6, x7, [sp, #112]
 328:	add	x2, sp, #0x70
 32c:	ldp	x6, x7, [x21]
 330:	mov	w3, #0x1e                  	// #30
 334:	ldp	x4, x5, [sp, #320]
 338:	stp	x4, x5, [sp, #128]
 33c:	add	x26, sp, #0x130
 340:	ldr	x5, [x21, #16]
 344:	str	x8, [sp, #104]
 348:	ldr	x9, [sp, #336]
 34c:	str	x9, [sp, #144]
 350:	stp	x6, x7, [sp, #160]
 354:	str	x5, [sp, #176]
 358:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 35c:	adrp	x3, 0 <_ZN7__ubsan14TypeCheckKindsE>
 360:	ldrb	w7, [x19, #32]
 364:	ldr	x1, [x19, #16]
 368:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 36c:	ldr	x3, [x3]
 370:	add	x2, x2, #0x0
 374:	mov	w4, #0x2                   	// #2
 378:	mov	x6, #0x1e00000000          	// #128849018880
 37c:	mov	w5, #0x5                   	// #5
 380:	mov	x0, x26
 384:	ldr	x3, [x3, x7, lsl #3]
 388:	str	w28, [sp, #304]
 38c:	str	x27, [sp, #312]
 390:	str	w25, [sp, #320]
 394:	str	w24, [sp, #324]
 398:	stp	x6, x2, [sp, #344]
 39c:	str	wzr, [sp, #368]
 3a0:	str	x3, [sp, #384]
 3a4:	str	w5, [sp, #400]
 3a8:	str	x20, [sp, #416]
 3ac:	str	w4, [sp, #624]
 3b0:	str	wzr, [sp, #632]
 3b4:	str	xzr, [sp, #640]
 3b8:	str	xzr, [sp, #648]
 3bc:	str	wzr, [sp, #672]
 3c0:	str	xzr, [sp, #680]
 3c4:	str	xzr, [sp, #688]
 3c8:	str	xzr, [sp, #712]
 3cc:	str	wzr, [sp, #720]
 3d0:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 3d4:	mov	x0, x26
 3d8:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 3dc:	add	x1, x20, #0x8
 3e0:	mov	w4, #0x2                   	// #2
 3e4:	ldr	x8, [sp, #104]
 3e8:	cbz	x22, 500 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x2d0>
 3ec:	str	x8, [sp, #104]
 3f0:	cbnz	x23, 4a4 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x274>
 3f4:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 3f8:	mov	x5, #0x1                   	// #1
 3fc:	mov	x0, x26
 400:	add	x2, x2, #0x0
 404:	adrp	x3, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 408:	movk	x5, #0x1e, lsl #32
 40c:	add	x3, x3, #0x0
 410:	str	w4, [sp, #304]
 414:	str	xzr, [sp, #312]
 418:	str	xzr, [sp, #320]
 41c:	str	x20, [sp, #328]
 420:	stp	x5, x3, [sp, #344]
 424:	str	w28, [sp, #368]
 428:	str	x22, [sp, #384]
 42c:	str	w28, [sp, #624]
 430:	str	w4, [sp, #632]
 434:	str	xzr, [sp, #640]
 438:	str	xzr, [sp, #648]
 43c:	str	x20, [sp, #656]
 440:	str	w4, [sp, #672]
 444:	str	xzr, [sp, #680]
 448:	str	xzr, [sp, #688]
 44c:	str	x1, [sp, #696]
 450:	str	x2, [sp, #712]
 454:	str	w28, [sp, #720]
 458:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 45c:	ldr	x8, [sp, #104]
 460:	mov	x0, x8
 464:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 468:	mov	w0, #0x1                   	// #1
 46c:	ldp	x19, x20, [sp]
 470:	ldp	x21, x22, [sp, #16]
 474:	ldp	x23, x24, [sp, #32]
 478:	ldp	x25, x26, [sp, #48]
 47c:	ldp	x27, x28, [sp, #64]
 480:	ldr	x30, [sp, #80]
 484:	add	sp, sp, #0x2e0
 488:	ret
 48c:	ldp	x23, x24, [sp, #32]
 490:	ldp	x25, x26, [sp, #48]
 494:	ldp	x27, x28, [sp, #64]
 498:	b	260 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x30>
 49c:	ldp	x23, x24, [sp, #32]
 4a0:	b	260 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x30>
 4a4:	mov	x7, #0x1                   	// #1
 4a8:	sub	x9, x20, x23
 4ac:	ldr	x6, [sp, #216]
 4b0:	adrp	x3, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 4b4:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 4b8:	add	x3, x3, #0x0
 4bc:	movk	x7, #0x1e, lsl #32
 4c0:	mov	w5, #0x3                   	// #3
 4c4:	mov	x0, x26
 4c8:	add	x2, x2, #0x0
 4cc:	str	w4, [sp, #304]
 4d0:	str	xzr, [sp, #312]
 4d4:	str	xzr, [sp, #320]
 4d8:	str	x9, [sp, #328]
 4dc:	stp	x7, x3, [sp, #344]
 4e0:	str	w4, [sp, #368]
 4e4:	stp	x23, xzr, [sp, #384]
 4e8:	str	w28, [sp, #400]
 4ec:	str	x22, [sp, #416]
 4f0:	str	w28, [sp, #432]
 4f4:	str	x6, [sp, #448]
 4f8:	str	w5, [sp, #624]
 4fc:	b	430 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x200>
 500:	add	x23, x23, #0x100, lsl #12
 504:	cmp	x23, #0x200, lsl #12
 508:	b.ls	550 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x320>  // b.plast
 50c:	adrp	x3, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 510:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 514:	mov	x0, x26
 518:	add	x3, x3, #0x0
 51c:	add	x2, x2, #0x0
 520:	str	x8, [sp, #104]
 524:	mov	x5, #0x1                   	// #1
 528:	str	w4, [sp, #304]
 52c:	movk	x5, #0x1e, lsl #32
 530:	str	xzr, [sp, #312]
 534:	str	xzr, [sp, #320]
 538:	str	x20, [sp, #328]
 53c:	stp	x5, x3, [sp, #344]
 540:	str	w28, [sp, #368]
 544:	str	xzr, [sp, #384]
 548:	str	w28, [sp, #624]
 54c:	b	430 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x200>
 550:	adrp	x3, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 554:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 558:	mov	x0, x26
 55c:	add	x3, x3, #0x0
 560:	add	x2, x2, #0x0
 564:	b	524 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x2f4>

0000000000000568 <__ubsan_handle_dynamic_type_cache_miss>:
 568:	stp	x29, x30, [sp, #-80]!
 56c:	mov	x29, sp
 570:	add	x3, x29, #0x10
 574:	stp	xzr, x30, [x29, #56]
 578:	ldp	x4, x5, [x29, #56]
 57c:	stp	x4, x5, [x29, #16]
 580:	str	x29, [x29, #32]
 584:	bl	230 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>
 588:	ldp	x29, x30, [sp], #80
 58c:	ret

0000000000000590 <__ubsan_handle_dynamic_type_cache_miss_abort>:
 590:	stp	x29, x30, [sp, #-80]!
 594:	mov	x29, sp
 598:	add	x3, x29, #0x10
 59c:	stp	xzr, x30, [x29, #56]
 5a0:	ldp	x4, x5, [x29, #56]
 5a4:	stp	x4, x5, [x29, #16]
 5a8:	str	x29, [x29, #32]
 5ac:	bl	230 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>
 5b0:	tst	w0, #0xff
 5b4:	b.ne	5c0 <__ubsan_handle_dynamic_type_cache_miss_abort+0x30>  // b.any
 5b8:	ldp	x29, x30, [sp], #80
 5bc:	ret
 5c0:	bl	0 <_ZN11__sanitizer3DieEv>
 5c4:	nop

00000000000005c8 <__ubsan_handle_cfi_bad_type>:
 5c8:	sub	sp, sp, #0x2d0
 5cc:	stp	x19, x20, [sp]
 5d0:	mov	x20, x3
 5d4:	and	w19, w2, #0xff
 5d8:	stp	x27, x28, [sp, #64]
 5dc:	mov	x27, x0
 5e0:	add	x0, x0, #0x14
 5e4:	stp	x21, x22, [sp, #16]
 5e8:	mov	x21, x1
 5ec:	mov	w1, #0xffffffff            	// #-1
 5f0:	stp	x23, x24, [sp, #32]
 5f4:	stp	x25, x26, [sp, #48]
 5f8:	str	x30, [sp, #80]
 5fc:	ldxr	w22, [x0]
 600:	stxr	w2, w1, [x0]
 604:	cbnz	w2, 5fc <__ubsan_handle_cfi_bad_type+0x34>
 608:	dmb	ish
 60c:	ldp	x4, x5, [x20]
 610:	mov	x1, #0x0                   	// #0
 614:	ldr	w23, [x27, #16]
 618:	add	x26, sp, #0x90
 61c:	ldr	x6, [x20, #16]
 620:	mov	x2, x26
 624:	ldr	x24, [x27, #8]
 628:	bfxil	x1, x23, #0, #32
 62c:	mov	w3, #0x1f                  	// #31
 630:	stp	x4, x5, [sp, #144]
 634:	bfi	x1, x22, #32, #32
 638:	mov	x0, x24
 63c:	str	x6, [sp, #160]
 640:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
 644:	tst	w0, #0xff
 648:	b.ne	878 <__ubsan_handle_cfi_bad_type+0x2b0>  // b.any
 64c:	mov	w0, #0x1                   	// #1
 650:	str	w0, [sp, #288]
 654:	str	x24, [sp, #296]
 658:	add	x25, sp, #0xd0
 65c:	str	w23, [sp, #304]
 660:	mov	x1, x26
 664:	str	w22, [sp, #308]
 668:	add	x2, sp, #0x60
 66c:	ldp	x8, x9, [x20]
 670:	mov	x0, x25
 674:	ldp	x4, x5, [sp, #288]
 678:	stp	x4, x5, [sp, #96]
 67c:	mov	w3, #0x1f                  	// #31
 680:	ldp	x6, x7, [sp, #304]
 684:	mov	x26, #0x0                   	// #0
 688:	ldr	x4, [x20, #16]
 68c:	stp	x6, x7, [sp, #112]
 690:	ldr	x10, [sp, #320]
 694:	str	x10, [sp, #128]
 698:	stp	x8, x9, [sp, #144]
 69c:	str	x4, [sp, #160]
 6a0:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 6a4:	cbnz	w19, 8c8 <__ubsan_handle_cfi_bad_type+0x300>
 6a8:	ldrb	w0, [x27]
 6ac:	cmp	w0, #0x2
 6b0:	b.eq	99c <__ubsan_handle_cfi_bad_type+0x3d4>  // b.none
 6b4:	b.hi	898 <__ubsan_handle_cfi_bad_type+0x2d0>  // b.pmore
 6b8:	cmp	w0, #0x0
 6bc:	adrp	x19, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 6c0:	adrp	x0, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 6c4:	add	x19, x19, #0x0
 6c8:	add	x0, x0, #0x0
 6cc:	csel	x19, x19, x0, ne  // ne = any
 6d0:	ldr	x1, [x27, #24]
 6d4:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 6d8:	add	x2, x2, #0x0
 6dc:	mov	x3, #0x1f00000000          	// #133143986176
 6e0:	add	x27, sp, #0x120
 6e4:	mov	w28, #0x1                   	// #1
 6e8:	mov	x0, x27
 6ec:	str	w28, [sp, #288]
 6f0:	str	x24, [sp, #296]
 6f4:	str	w23, [sp, #304]
 6f8:	str	w22, [sp, #308]
 6fc:	stp	x3, x2, [sp, #328]
 700:	str	wzr, [sp, #608]
 704:	str	wzr, [sp, #616]
 708:	str	xzr, [sp, #624]
 70c:	str	xzr, [sp, #632]
 710:	str	wzr, [sp, #656]
 714:	str	xzr, [sp, #664]
 718:	str	xzr, [sp, #672]
 71c:	str	xzr, [sp, #696]
 720:	str	wzr, [sp, #704]
 724:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 728:	ldr	w3, [x0, #320]
 72c:	mov	x1, x0
 730:	cmp	w3, #0x8
 734:	b.eq	97c <__ubsan_handle_cfi_bad_type+0x3b4>  // b.none
 738:	ubfiz	x2, x3, #5, #32
 73c:	add	w0, w3, #0x1
 740:	add	x2, x2, #0x40
 744:	str	w0, [x1, #320]
 748:	add	x4, x1, x2
 74c:	cmp	w0, #0x8
 750:	str	wzr, [x1, x2]
 754:	str	x19, [x4, #16]
 758:	b.eq	97c <__ubsan_handle_cfi_bad_type+0x3b4>  // b.none
 75c:	ubfiz	x0, x0, #5, #32
 760:	add	w3, w3, #0x2
 764:	add	x2, x0, #0x40
 768:	str	w3, [x1, #320]
 76c:	add	x3, x1, x2
 770:	mov	w4, #0x5                   	// #5
 774:	mov	x0, x27
 778:	str	w4, [x1, x2]
 77c:	str	x21, [x3, #16]
 780:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 784:	cbz	x26, 948 <__ubsan_handle_cfi_bad_type+0x380>
 788:	mov	x2, #0x1                   	// #1
 78c:	mov	x0, x27
 790:	adrp	x1, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 794:	mov	w3, #0x2                   	// #2
 798:	add	x1, x1, #0x0
 79c:	movk	x2, #0x1f, lsl #32
 7a0:	str	w3, [sp, #288]
 7a4:	str	xzr, [sp, #296]
 7a8:	str	xzr, [sp, #304]
 7ac:	str	x21, [sp, #312]
 7b0:	stp	x2, x1, [sp, #328]
 7b4:	str	w28, [sp, #352]
 7b8:	str	x26, [sp, #368]
 7bc:	str	w28, [sp, #608]
 7c0:	str	wzr, [sp, #616]
 7c4:	add	x26, sp, #0xb0
 7c8:	str	xzr, [sp, #624]
 7cc:	adrp	x19, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 7d0:	str	xzr, [sp, #632]
 7d4:	add	x19, x19, #0x0
 7d8:	str	wzr, [sp, #656]
 7dc:	str	xzr, [sp, #664]
 7e0:	str	xzr, [sp, #672]
 7e4:	str	xzr, [sp, #696]
 7e8:	str	wzr, [sp, #704]
 7ec:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 7f0:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 7f4:	str	xzr, [sp, #176]
 7f8:	mov	x1, x21
 7fc:	mov	x2, x26
 800:	mov	x3, x27
 804:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 808:	tst	w0, #0xff
 80c:	b.eq	824 <__ubsan_handle_cfi_bad_type+0x25c>  // b.none
 810:	ldr	x19, [sp, #176]
 814:	adrp	x0, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 818:	add	x0, x0, #0x0
 81c:	cmp	x19, #0x0
 820:	csel	x19, x0, x19, eq  // eq = none
 824:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 828:	str	xzr, [sp, #176]
 82c:	ldr	x1, [x20, #8]
 830:	mov	x2, x26
 834:	mov	x3, x27
 838:	adrp	x20, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 83c:	add	x20, x20, #0x0
 840:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 844:	tst	w0, #0xff
 848:	b.eq	860 <__ubsan_handle_cfi_bad_type+0x298>  // b.none
 84c:	ldr	x20, [sp, #176]
 850:	adrp	x0, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 854:	add	x0, x0, #0x0
 858:	cmp	x20, #0x0
 85c:	csel	x20, x0, x20, eq  // eq = none
 860:	mov	x1, x19
 864:	mov	x0, x20
 868:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 86c:	cbnz	w0, 8dc <__ubsan_handle_cfi_bad_type+0x314>
 870:	mov	x0, x25
 874:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 878:	ldp	x19, x20, [sp]
 87c:	ldp	x21, x22, [sp, #16]
 880:	ldp	x23, x24, [sp, #32]
 884:	ldp	x25, x26, [sp, #48]
 888:	ldp	x27, x28, [sp, #64]
 88c:	ldr	x30, [sp, #80]
 890:	add	sp, sp, #0x2d0
 894:	ret
 898:	cmp	w0, #0x5
 89c:	b.hi	8b4 <__ubsan_handle_cfi_bad_type+0x2ec>  // b.pmore
 8a0:	cmp	w0, #0x3
 8a4:	b.ne	9a8 <__ubsan_handle_cfi_bad_type+0x3e0>  // b.any
 8a8:	adrp	x19, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 8ac:	add	x19, x19, #0x0
 8b0:	b	6d0 <__ubsan_handle_cfi_bad_type+0x108>
 8b4:	cmp	w0, #0x6
 8b8:	adrp	x19, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 8bc:	add	x19, x19, #0x0
 8c0:	csel	x19, x19, xzr, eq  // eq = none
 8c4:	b	6d0 <__ubsan_handle_cfi_bad_type+0x108>
 8c8:	add	x8, sp, #0xb8
 8cc:	mov	x0, x21
 8d0:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>
 8d4:	ldr	x26, [sp, #184]
 8d8:	b	6a8 <__ubsan_handle_cfi_bad_type+0xe0>
 8dc:	adrp	x1, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 8e0:	mov	x3, #0x1                   	// #1
 8e4:	add	x1, x1, #0x0
 8e8:	mov	w4, #0x1                   	// #1
 8ec:	movk	x3, #0x1f, lsl #32
 8f0:	mov	w2, #0x2                   	// #2
 8f4:	mov	x0, x27
 8f8:	str	w4, [sp, #288]
 8fc:	str	x24, [sp, #296]
 900:	str	w23, [sp, #304]
 904:	str	w22, [sp, #308]
 908:	stp	x3, x1, [sp, #328]
 90c:	str	wzr, [sp, #352]
 910:	str	x20, [sp, #368]
 914:	str	wzr, [sp, #384]
 918:	str	x19, [sp, #400]
 91c:	str	w2, [sp, #608]
 920:	str	wzr, [sp, #616]
 924:	str	xzr, [sp, #624]
 928:	str	xzr, [sp, #632]
 92c:	str	wzr, [sp, #656]
 930:	str	xzr, [sp, #664]
 934:	str	xzr, [sp, #672]
 938:	str	xzr, [sp, #696]
 93c:	str	wzr, [sp, #704]
 940:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 944:	b	870 <__ubsan_handle_cfi_bad_type+0x2a8>
 948:	mov	x2, #0x1                   	// #1
 94c:	adrp	x1, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 950:	mov	w3, #0x2                   	// #2
 954:	add	x1, x1, #0x0
 958:	movk	x2, #0x1f, lsl #32
 95c:	mov	x0, x27
 960:	str	w3, [sp, #288]
 964:	str	xzr, [sp, #296]
 968:	str	xzr, [sp, #304]
 96c:	str	x21, [sp, #312]
 970:	stp	x2, x1, [sp, #328]
 974:	str	wzr, [sp, #608]
 978:	b	7c0 <__ubsan_handle_cfi_bad_type+0x1f8>
 97c:	adrp	x2, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 980:	adrp	x0, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 984:	add	x2, x2, #0x0
 988:	add	x0, x0, #0x0
 98c:	mov	x4, #0x0                   	// #0
 990:	mov	x3, #0x0                   	// #0
 994:	mov	w1, #0xc0                  	// #192
 998:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 99c:	adrp	x19, 0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 9a0:	add	x19, x19, #0x0
 9a4:	b	6d0 <__ubsan_handle_cfi_bad_type+0x108>
 9a8:	bl	0 <_ZN11__sanitizer3DieEv>
 9ac:	nop

00000000000009b0 <__ubsan_handle_function_type_mismatch_v1>:
 9b0:	stp	x29, x30, [sp, #-80]!
 9b4:	mov	x29, sp
 9b8:	add	x4, x29, #0x10
 9bc:	stp	xzr, x30, [x29, #56]
 9c0:	ldp	x6, x7, [x29, #56]
 9c4:	stp	x6, x7, [x29, #16]
 9c8:	str	x29, [x29, #32]
 9cc:	bl	0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 9d0:	ldp	x29, x30, [sp], #80
 9d4:	ret

00000000000009d8 <__ubsan_handle_function_type_mismatch_v1_abort>:
 9d8:	stp	x29, x30, [sp, #-80]!
 9dc:	mov	w4, #0x1                   	// #1
 9e0:	mov	x29, sp
 9e4:	strb	w4, [x29, #56]
 9e8:	add	x4, x29, #0x10
 9ec:	stur	wzr, [x29, #57]
 9f0:	sturh	wzr, [x29, #61]
 9f4:	strb	wzr, [x29, #63]
 9f8:	str	x30, [x29, #64]
 9fc:	str	x29, [x29, #32]
 a00:	ldp	x6, x7, [x29, #56]
 a04:	stp	x6, x7, [x29, #16]
 a08:	bl	0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 a0c:	tst	w0, #0xff
 a10:	b.ne	a1c <__ubsan_handle_function_type_mismatch_v1_abort+0x44>  // b.any
 a14:	ldp	x29, x30, [sp], #80
 a18:	ret
 a1c:	bl	0 <_ZN11__sanitizer3DieEv>

ubsan_type_hash.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan28getDynamicTypeInfoFromObjectEPv>:
   0:	ldr	x0, [x0]
   4:	str	x30, [sp, #-16]!
   8:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>
   c:	ldr	x30, [sp], #16
  10:	ret

ubsan_type_hash_itanium.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	mov	x20, x0
   8:	str	x30, [sp, #40]
   c:	cbz	x1, 104 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x104>
  10:	cbz	x0, 10c <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x10c>
  14:	stp	x21, x22, [sp, #16]
  18:	adrp	x22, 0 <_ZTIN10__cxxabiv120__si_class_type_infoE>
  1c:	adrp	x21, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
  20:	ldr	x22, [x22]
  24:	str	x23, [sp, #32]
  28:	ldr	x21, [x21]
  2c:	mov	x23, x1
  30:	b	3c <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x3c>
  34:	ldr	x20, [x0, #16]
  38:	cbz	x20, cc <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xcc>
  3c:	mov	x2, x22
  40:	mov	x1, x21
  44:	mov	x0, x20
  48:	mov	x3, #0x0                   	// #0
  4c:	bl	0 <__dynamic_cast>
  50:	mov	x19, x0
  54:	cbnz	x0, 34 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x34>
  58:	adrp	x2, 0 <_ZTIN10__cxxabiv121__vmi_class_type_infoE>
  5c:	mov	x1, x21
  60:	mov	x0, x20
  64:	mov	x3, #0x0                   	// #0
  68:	ldr	x2, [x2]
  6c:	bl	0 <__dynamic_cast>
  70:	cbz	x0, b4 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb4>
  74:	ldr	w21, [x0, #20]
  78:	cbz	w21, b4 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb4>
  7c:	sub	w21, w21, #0x1
  80:	add	x1, x0, #0x28
  84:	add	x20, x0, #0x18
  88:	add	x21, x1, w21, uxtw #4
  8c:	nop
  90:	ldr	x0, [x20, #8]
  94:	sub	x1, x23, x0, asr #8
  98:	tbnz	w0, #0, a8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xa8>
  9c:	ldr	x0, [x20]
  a0:	bl	0 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
  a4:	cbnz	x0, e8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xe8>
  a8:	add	x20, x20, #0x10
  ac:	cmp	x20, x21
  b0:	b.ne	90 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x90>  // b.any
  b4:	ldp	x21, x22, [sp, #16]
  b8:	ldr	x23, [sp, #32]
  bc:	mov	x0, x19
  c0:	ldr	x30, [sp, #40]
  c4:	ldp	x19, x20, [sp], #48
  c8:	ret
  cc:	mov	x19, #0x0                   	// #0
  d0:	mov	x0, x19
  d4:	ldp	x21, x22, [sp, #16]
  d8:	ldr	x23, [sp, #32]
  dc:	ldr	x30, [sp, #40]
  e0:	ldp	x19, x20, [sp], #48
  e4:	ret
  e8:	mov	x19, x0
  ec:	mov	x0, x19
  f0:	ldp	x21, x22, [sp, #16]
  f4:	ldr	x23, [sp, #32]
  f8:	ldr	x30, [sp, #40]
  fc:	ldp	x19, x20, [sp], #48
 100:	ret
 104:	mov	x19, x0
 108:	b	bc <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xbc>
 10c:	mov	x19, #0x0                   	// #0
 110:	b	bc <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xbc>
 114:	nop

0000000000000118 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>:
 118:	stp	x19, x20, [sp, #-48]!
 11c:	mov	x19, x0
 120:	mov	x20, x1
 124:	ldr	x0, [x0, #8]
 128:	stp	x23, x30, [sp, #32]
 12c:	mov	x23, x2
 130:	ldr	x1, [x1, #8]
 134:	cmp	x0, x1
 138:	b.eq	174 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x5c>  // b.none
 13c:	stp	x21, x22, [sp, #16]
 140:	adrp	x22, 0 <_ZTIN10__cxxabiv120__si_class_type_infoE>
 144:	adrp	x21, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 148:	ldr	x22, [x22]
 14c:	ldr	x21, [x21]
 150:	ldrb	w3, [x0]
 154:	cmp	w3, #0x2a
 158:	b.eq	188 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x70>  // b.none
 15c:	ldrb	w2, [x1]
 160:	cmp	w2, #0x2a
 164:	b.eq	188 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x70>  // b.none
 168:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 16c:	cbnz	w0, 188 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x70>
 170:	ldp	x21, x22, [sp, #16]
 174:	cmp	x23, #0x0
 178:	cset	w0, eq  // eq = none
 17c:	ldp	x23, x30, [sp, #32]
 180:	ldp	x19, x20, [sp], #48
 184:	ret
 188:	mov	x2, x22
 18c:	mov	x1, x21
 190:	mov	x0, x19
 194:	mov	x3, #0x0                   	// #0
 198:	bl	0 <__dynamic_cast>
 19c:	cbz	x0, 1b8 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0xa0>
 1a0:	ldr	x19, [x0, #16]
 1a4:	ldr	x1, [x20, #8]
 1a8:	ldr	x0, [x19, #8]
 1ac:	cmp	x0, x1
 1b0:	b.ne	150 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x38>  // b.any
 1b4:	b	170 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x58>
 1b8:	adrp	x2, 0 <_ZTIN10__cxxabiv121__vmi_class_type_infoE>
 1bc:	mov	x1, x21
 1c0:	mov	x0, x19
 1c4:	mov	x3, #0x0                   	// #0
 1c8:	ldr	x2, [x2]
 1cc:	bl	0 <__dynamic_cast>
 1d0:	mov	x21, x0
 1d4:	cbz	x0, 220 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x108>
 1d8:	ldr	w0, [x0, #20]
 1dc:	cbz	w0, 220 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x108>
 1e0:	mov	w19, #0x0                   	// #0
 1e4:	ubfiz	x3, x19, #4, #32
 1e8:	mov	x1, x20
 1ec:	add	x3, x21, x3
 1f0:	add	w19, w19, #0x1
 1f4:	ldr	x0, [x3, #32]
 1f8:	asr	x2, x0, #8
 1fc:	tbnz	w0, #0, 234 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x11c>
 200:	ldr	x0, [x3, #24]
 204:	sub	x2, x23, x2
 208:	bl	118 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>
 20c:	tst	w0, #0xff
 210:	b.ne	234 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x11c>  // b.any
 214:	ldr	w0, [x21, #20]
 218:	cmp	w0, w19
 21c:	b.ne	1e4 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0xcc>  // b.any
 220:	mov	w0, #0x0                   	// #0
 224:	ldp	x21, x22, [sp, #16]
 228:	ldp	x23, x30, [sp, #32]
 22c:	ldp	x19, x20, [sp], #48
 230:	ret
 234:	mov	w0, #0x1                   	// #1
 238:	ldp	x21, x22, [sp, #16]
 23c:	ldp	x23, x30, [sp, #32]
 240:	ldp	x19, x20, [sp], #48
 244:	ret

0000000000000248 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>:
 248:	stp	x19, x20, [sp, #-48]!
 24c:	mov	x19, x2
 250:	and	w2, w2, #0xffff
 254:	eor	w6, w2, #0x1
 258:	stp	x21, x22, [sp, #16]
 25c:	adrp	x21, 0 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 260:	add	x5, x21, #0x0
 264:	mov	x20, x1
 268:	ldr	x3, [x5, x6, lsl #3]
 26c:	str	x30, [sp, #32]
 270:	cbz	x3, 400 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1b8>
 274:	cmp	x19, x3
 278:	b.eq	3f0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1a8>  // b.none
 27c:	lsr	w1, w19, #16
 280:	add	w3, w6, w1
 284:	add	w2, w3, #0x1
 288:	sub	w3, w3, #0x10, lsl #12
 28c:	cmp	w2, #0x10, lsl #12
 290:	csel	w2, w3, w2, hi  // hi = pmore
 294:	mov	w4, w2
 298:	ldr	x3, [x5, x4, lsl #3]
 29c:	cbz	x3, 3fc <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1b4>
 2a0:	cmp	x19, x3
 2a4:	b.eq	410 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1c8>  // b.none
 2a8:	add	w2, w1, w2
 2ac:	add	w4, w2, #0x1
 2b0:	sub	w2, w2, #0x10, lsl #12
 2b4:	cmp	w4, #0x10, lsl #12
 2b8:	csel	w4, w2, w4, hi  // hi = pmore
 2bc:	mov	w2, w4
 2c0:	ldr	x3, [x5, x2, lsl #3]
 2c4:	cbz	x3, 418 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1d0>
 2c8:	cmp	x19, x3
 2cc:	b.eq	3ec <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1a4>  // b.none
 2d0:	add	w4, w1, w4
 2d4:	add	w2, w4, #0x1
 2d8:	sub	w4, w4, #0x10, lsl #12
 2dc:	cmp	w2, #0x10, lsl #12
 2e0:	csel	w2, w4, w2, hi  // hi = pmore
 2e4:	mov	w4, w2
 2e8:	ldr	x3, [x5, x4, lsl #3]
 2ec:	cbz	x3, 3fc <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1b4>
 2f0:	cmp	x19, x3
 2f4:	b.eq	410 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1c8>  // b.none
 2f8:	add	w1, w1, w2
 2fc:	add	w2, w1, #0x1
 300:	sub	w1, w1, #0x10, lsl #12
 304:	cmp	w2, #0x10, lsl #12
 308:	csel	w2, w1, w2, hi  // hi = pmore
 30c:	mov	w1, w2
 310:	ldr	x3, [x5, x1, lsl #3]
 314:	cbz	x3, 424 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1dc>
 318:	cmp	x19, x3
 31c:	b.eq	430 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1e8>  // b.none
 320:	ldr	x3, [x5, x6, lsl #3]
 324:	add	x21, x5, x6, lsl #3
 328:	cmp	x3, x19
 32c:	b.eq	3c8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x180>  // b.none
 330:	ldr	x22, [x0]
 334:	mov	x1, #0x10                  	// #16
 338:	sub	x0, x22, #0x10
 33c:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 340:	tst	w0, #0xff
 344:	b.eq	3b4 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x16c>  // b.none
 348:	ldur	x0, [x22, #-8]
 34c:	cbz	x0, 3b4 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x16c>
 350:	ldur	x22, [x22, #-16]
 354:	add	x1, x22, #0x100, lsl #12
 358:	cmp	x1, #0x200, lsl #12
 35c:	b.hi	3b4 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x16c>  // b.pmore
 360:	adrp	x2, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 364:	adrp	x1, 0 <_ZTISt9type_info>
 368:	mov	x3, #0x0                   	// #0
 36c:	ldr	x2, [x2]
 370:	ldr	x1, [x1]
 374:	bl	0 <__dynamic_cast>
 378:	cbz	x0, 3b4 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x16c>
 37c:	neg	x2, x22
 380:	mov	x1, x20
 384:	bl	118 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>
 388:	ands	w0, w0, #0xff
 38c:	b.eq	3b4 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x16c>  // b.none
 390:	adrp	x1, 0 <__ubsan_vptr_type_cache>
 394:	and	x2, x19, #0x7f
 398:	str	x19, [x21]
 39c:	ldr	x1, [x1]
 3a0:	ldp	x21, x22, [sp, #16]
 3a4:	str	x19, [x1, x2, lsl #3]
 3a8:	ldr	x30, [sp, #32]
 3ac:	ldp	x19, x20, [sp], #48
 3b0:	ret
 3b4:	mov	w0, #0x0                   	// #0
 3b8:	ldp	x21, x22, [sp, #16]
 3bc:	ldr	x30, [sp, #32]
 3c0:	ldp	x19, x20, [sp], #48
 3c4:	ret
 3c8:	adrp	x1, 0 <__ubsan_vptr_type_cache>
 3cc:	and	x2, x3, #0x7f
 3d0:	mov	w0, #0x1                   	// #1
 3d4:	ldr	x1, [x1]
 3d8:	ldp	x21, x22, [sp, #16]
 3dc:	str	x3, [x1, x2, lsl #3]
 3e0:	ldr	x30, [sp, #32]
 3e4:	ldp	x19, x20, [sp], #48
 3e8:	ret
 3ec:	mov	x6, x2
 3f0:	add	x21, x21, #0x0
 3f4:	add	x21, x21, x6, lsl #3
 3f8:	b	328 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe0>
 3fc:	mov	x6, x4
 400:	mov	x3, #0x0                   	// #0
 404:	add	x21, x21, #0x0
 408:	add	x21, x21, x6, lsl #3
 40c:	b	328 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe0>
 410:	mov	x6, x4
 414:	b	3f0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1a8>
 418:	mov	x6, x2
 41c:	mov	x3, #0x0                   	// #0
 420:	b	404 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1bc>
 424:	mov	x6, x1
 428:	mov	x3, #0x0                   	// #0
 42c:	b	404 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1bc>
 430:	mov	w6, w2
 434:	b	3f0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x1a8>

0000000000000438 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>:
 438:	stp	x19, x20, [sp, #-32]!
 43c:	mov	x1, #0x10                  	// #16
 440:	mov	x20, x0
 444:	mov	x19, x8
 448:	sub	x0, x0, #0x10
 44c:	str	x30, [sp, #24]
 450:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 454:	tst	w0, #0xff
 458:	b.eq	4c8 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x90>  // b.none
 45c:	str	x21, [sp, #16]
 460:	ldur	x21, [x20, #-8]
 464:	cbz	x21, 4c4 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x8c>
 468:	ldur	x1, [x20, #-16]
 46c:	add	x0, x1, #0x100, lsl #12
 470:	cmp	x0, #0x200, lsl #12
 474:	b.ls	490 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x58>  // b.plast
 478:	ldr	x21, [sp, #16]
 47c:	stp	xzr, x1, [x19]
 480:	str	xzr, [x19, #16]
 484:	ldr	x30, [sp, #24]
 488:	ldp	x19, x20, [sp], #32
 48c:	ret
 490:	neg	x20, x1
 494:	mov	x0, x21
 498:	mov	x1, x20
 49c:	bl	0 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 4a0:	ldr	x1, [x21, #8]
 4a4:	cbz	x0, 4dc <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0xa4>
 4a8:	ldr	x0, [x0, #8]
 4ac:	ldr	x21, [sp, #16]
 4b0:	stp	x1, x20, [x19]
 4b4:	str	x0, [x19, #16]
 4b8:	ldr	x30, [sp, #24]
 4bc:	ldp	x19, x20, [sp], #32
 4c0:	ret
 4c4:	ldr	x21, [sp, #16]
 4c8:	stp	xzr, xzr, [x19]
 4cc:	str	xzr, [x19, #16]
 4d0:	ldr	x30, [sp, #24]
 4d4:	ldp	x19, x20, [sp], #32
 4d8:	ret
 4dc:	adrp	x0, 0 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 4e0:	add	x0, x0, #0x0
 4e4:	b	4ac <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x74>

00000000000004e8 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_>:
 4e8:	ldr	x2, [x0, #8]
 4ec:	ldrb	w0, [x2]
 4f0:	cmp	w0, #0x2a
 4f4:	b.eq	52c <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_+0x44>  // b.none
 4f8:	ldr	x1, [x1, #8]
 4fc:	mov	w0, #0x0                   	// #0
 500:	ldrb	w3, [x1]
 504:	cmp	w3, #0x2a
 508:	b.ne	510 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_+0x28>  // b.any
 50c:	ret
 510:	str	x30, [sp, #-16]!
 514:	mov	x0, x2
 518:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 51c:	cmp	w0, #0x0
 520:	cset	w0, eq  // eq = none
 524:	ldr	x30, [sp], #16
 528:	ret
 52c:	mov	w0, #0x0                   	// #0
 530:	ret

ubsan_type_hash_win.cpp.o:     file format elf64-littleaarch64


tsan_new_delete.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN6__tsanL17build_consistencyEv>:
       0:	str	x30, [sp, #-16]!
       4:	bl	0 <_ZN6__tsan25build_consistency_releaseEv>
       8:	ldr	x30, [sp], #16
       c:	b	0 <_ZN6__tsan25build_consistency_nostatsEv>

0000000000000010 <_ZnwmRKSt9nothrow_t>:
      10:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
      14:	ldr	x4, [x4]
      18:	mrs	x5, tpidr_el0
      1c:	stp	x19, x20, [sp, #-64]!
      20:	mov	x3, x30
      24:	add	x4, x5, x4
      28:	mov	x20, x0
      2c:	ldr	x19, [x4, #16]
      30:	str	x30, [sp, #24]
      34:	cbz	x19, a0 <_ZnwmRKSt9nothrow_t+0x90>
      38:	add	x0, x19, #0x1f, lsl #12
      3c:	ldrb	w0, [x0, #3764]
      40:	cbnz	w0, b4 <_ZnwmRKSt9nothrow_t+0xa4>
      44:	str	x21, [sp, #16]
      48:	add	x21, sp, #0x28
      4c:	mov	x1, x19
      50:	mov	x0, x21
      54:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
      58:	add	x2, x2, #0x0
      5c:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
      60:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
      64:	mov	x1, x0
      68:	mov	x2, x20
      6c:	mov	x0, x19
      70:	bl	0 <_ZN6__tsan10user_allocEPNS_11ThreadStateEmm>
      74:	mov	x19, x0
      78:	mov	x0, x21
      7c:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
      80:	mov	x1, x20
      84:	mov	x0, x19
      88:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
      8c:	mov	x0, x19
      90:	ldr	x21, [sp, #16]
      94:	ldr	x30, [sp, #24]
      98:	ldp	x19, x20, [sp], #64
      9c:	ret
      a0:	mov	x19, x4
      a4:	str	x4, [x4, #16]
      a8:	add	x0, x19, #0x1f, lsl #12
      ac:	ldrb	w0, [x0, #3764]
      b0:	cbz	w0, 44 <_ZnwmRKSt9nothrow_t+0x34>
      b4:	mov	x0, x20
      b8:	mov	x2, #0x0                   	// #0
      bc:	mov	x1, #0x0                   	// #0
      c0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
      c4:	mov	x19, x0
      c8:	mov	x0, x19
      cc:	ldr	x30, [sp, #24]
      d0:	ldp	x19, x20, [sp], #64
      d4:	ret

00000000000000d8 <_ZnamRKSt9nothrow_t>:
      d8:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
      dc:	ldr	x4, [x4]
      e0:	mrs	x5, tpidr_el0
      e4:	stp	x19, x20, [sp, #-64]!
      e8:	mov	x3, x30
      ec:	add	x4, x5, x4
      f0:	mov	x20, x0
      f4:	ldr	x19, [x4, #16]
      f8:	str	x30, [sp, #24]
      fc:	cbz	x19, 168 <_ZnamRKSt9nothrow_t+0x90>
     100:	add	x0, x19, #0x1f, lsl #12
     104:	ldrb	w0, [x0, #3764]
     108:	cbnz	w0, 17c <_ZnamRKSt9nothrow_t+0xa4>
     10c:	str	x21, [sp, #16]
     110:	add	x21, sp, #0x28
     114:	mov	x1, x19
     118:	mov	x0, x21
     11c:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     120:	add	x2, x2, #0x0
     124:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     128:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     12c:	mov	x1, x0
     130:	mov	x2, x20
     134:	mov	x0, x19
     138:	bl	0 <_ZN6__tsan10user_allocEPNS_11ThreadStateEmm>
     13c:	mov	x19, x0
     140:	mov	x0, x21
     144:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     148:	mov	x1, x20
     14c:	mov	x0, x19
     150:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
     154:	mov	x0, x19
     158:	ldr	x21, [sp, #16]
     15c:	ldr	x30, [sp, #24]
     160:	ldp	x19, x20, [sp], #64
     164:	ret
     168:	mov	x19, x4
     16c:	str	x4, [x4, #16]
     170:	add	x0, x19, #0x1f, lsl #12
     174:	ldrb	w0, [x0, #3764]
     178:	cbz	w0, 10c <_ZnamRKSt9nothrow_t+0x34>
     17c:	mov	x0, x20
     180:	mov	x2, #0x0                   	// #0
     184:	mov	x1, #0x0                   	// #0
     188:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     18c:	mov	x19, x0
     190:	mov	x0, x19
     194:	ldr	x30, [sp, #24]
     198:	ldp	x19, x20, [sp], #64
     19c:	ret

00000000000001a0 <_ZnwmSt11align_val_tRKSt9nothrow_t>:
     1a0:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
     1a4:	ldr	x4, [x4]
     1a8:	mrs	x2, tpidr_el0
     1ac:	stp	x19, x20, [sp, #-96]!
     1b0:	mov	x3, x30
     1b4:	add	x4, x2, x4
     1b8:	stp	x21, x22, [sp, #16]
     1bc:	mov	x20, x0
     1c0:	mov	x22, x1
     1c4:	ldr	x19, [x4, #16]
     1c8:	str	x30, [sp, #32]
     1cc:	cbz	x19, 23c <_ZnwmSt11align_val_tRKSt9nothrow_t+0x9c>
     1d0:	add	x0, x19, #0x1f, lsl #12
     1d4:	ldrb	w0, [x0, #3764]
     1d8:	cbnz	w0, 250 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xb0>
     1dc:	add	x21, sp, #0x48
     1e0:	mov	x1, x19
     1e4:	mov	x0, x21
     1e8:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     1ec:	add	x2, x2, #0x0
     1f0:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     1f4:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     1f8:	mov	x1, x0
     1fc:	mov	x3, x20
     200:	mov	x2, x22
     204:	mov	x0, x19
     208:	bl	0 <_ZN6__tsan13user_memalignEPNS_11ThreadStateEmmm>
     20c:	mov	x19, x0
     210:	str	x0, [sp, #56]
     214:	mov	x0, x21
     218:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     21c:	mov	x1, x20
     220:	mov	x0, x19
     224:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
     228:	mov	x0, x19
     22c:	ldp	x21, x22, [sp, #16]
     230:	ldr	x30, [sp, #32]
     234:	ldp	x19, x20, [sp], #96
     238:	ret
     23c:	mov	x19, x4
     240:	str	x4, [x4, #16]
     244:	add	x0, x19, #0x1f, lsl #12
     248:	ldrb	w0, [x0, #3764]
     24c:	cbz	w0, 1dc <_ZnwmSt11align_val_tRKSt9nothrow_t+0x3c>
     250:	mov	x2, x22
     254:	mov	x0, x20
     258:	mov	x1, #0x0                   	// #0
     25c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     260:	mov	x19, x0
     264:	mov	x0, x19
     268:	ldp	x21, x22, [sp, #16]
     26c:	ldr	x30, [sp, #32]
     270:	ldp	x19, x20, [sp], #96
     274:	ret

0000000000000278 <_ZnamSt11align_val_tRKSt9nothrow_t>:
     278:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
     27c:	ldr	x4, [x4]
     280:	mrs	x2, tpidr_el0
     284:	stp	x19, x20, [sp, #-80]!
     288:	mov	x3, x30
     28c:	add	x4, x2, x4
     290:	stp	x21, x22, [sp, #16]
     294:	mov	x20, x0
     298:	mov	x22, x1
     29c:	ldr	x19, [x4, #16]
     2a0:	str	x30, [sp, #32]
     2a4:	cbz	x19, 310 <_ZnamSt11align_val_tRKSt9nothrow_t+0x98>
     2a8:	add	x0, x19, #0x1f, lsl #12
     2ac:	ldrb	w0, [x0, #3764]
     2b0:	cbnz	w0, 324 <_ZnamSt11align_val_tRKSt9nothrow_t+0xac>
     2b4:	add	x21, sp, #0x38
     2b8:	mov	x1, x19
     2bc:	mov	x0, x21
     2c0:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     2c4:	add	x2, x2, #0x0
     2c8:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     2cc:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     2d0:	mov	x1, x0
     2d4:	mov	x3, x20
     2d8:	mov	x2, x22
     2dc:	mov	x0, x19
     2e0:	bl	0 <_ZN6__tsan13user_memalignEPNS_11ThreadStateEmmm>
     2e4:	mov	x19, x0
     2e8:	mov	x0, x21
     2ec:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     2f0:	mov	x1, x20
     2f4:	mov	x0, x19
     2f8:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
     2fc:	mov	x0, x19
     300:	ldp	x21, x22, [sp, #16]
     304:	ldr	x30, [sp, #32]
     308:	ldp	x19, x20, [sp], #80
     30c:	ret
     310:	mov	x19, x4
     314:	str	x4, [x4, #16]
     318:	add	x0, x19, #0x1f, lsl #12
     31c:	ldrb	w0, [x0, #3764]
     320:	cbz	w0, 2b4 <_ZnamSt11align_val_tRKSt9nothrow_t+0x3c>
     324:	mov	x2, x22
     328:	mov	x0, x20
     32c:	mov	x1, #0x0                   	// #0
     330:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     334:	mov	x19, x0
     338:	mov	x0, x19
     33c:	ldp	x21, x22, [sp, #16]
     340:	ldr	x30, [sp, #32]
     344:	ldp	x19, x20, [sp], #80
     348:	ret
     34c:	nop

0000000000000350 <_ZdlPv>:
     350:	cbz	x0, 3ec <_ZdlPv+0x9c>
     354:	stp	x19, x20, [sp, #-96]!
     358:	mrs	x20, tpidr_el0
     35c:	mov	x19, x0
     360:	stp	x21, x22, [sp, #16]
     364:	mov	x21, x30
     368:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     36c:	ldr	x22, [x22]
     370:	add	x1, x20, x22
     374:	ldr	x0, [x1, #16]
     378:	str	x30, [sp, #32]
     37c:	cbz	x0, 3f0 <_ZdlPv+0xa0>
     380:	add	x0, x0, #0x1f, lsl #12
     384:	ldrb	w0, [x0, #3764]
     388:	cbnz	w0, 3fc <_ZdlPv+0xac>
     38c:	add	x20, x20, x22
     390:	mov	x0, x19
     394:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     398:	ldr	x22, [x20, #16]
     39c:	cbz	x22, 40c <_ZdlPv+0xbc>
     3a0:	mov	x3, x21
     3a4:	add	x0, sp, #0x48
     3a8:	mov	x1, x22
     3ac:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     3b0:	add	x2, x2, #0x0
     3b4:	str	x0, [sp, #56]
     3b8:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     3bc:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     3c0:	mov	x1, x0
     3c4:	mov	x2, x19
     3c8:	mov	x0, x22
     3cc:	mov	w3, #0x1                   	// #1
     3d0:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     3d4:	ldr	x0, [sp, #56]
     3d8:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     3dc:	ldp	x21, x22, [sp, #16]
     3e0:	ldr	x30, [sp, #32]
     3e4:	ldp	x19, x20, [sp], #96
     3e8:	ret
     3ec:	ret
     3f0:	mov	x0, x1
     3f4:	str	x1, [x1, #16]
     3f8:	b	380 <_ZdlPv+0x30>
     3fc:	mov	x0, x19
     400:	mov	x1, #0x0                   	// #0
     404:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     408:	b	3dc <_ZdlPv+0x8c>
     40c:	mov	x22, x20
     410:	str	x20, [x20, #16]
     414:	b	3a0 <_ZdlPv+0x50>

0000000000000418 <_ZdaPv>:
     418:	cbz	x0, 4b4 <_ZdaPv+0x9c>
     41c:	stp	x19, x20, [sp, #-80]!
     420:	mrs	x20, tpidr_el0
     424:	mov	x19, x0
     428:	stp	x21, x22, [sp, #16]
     42c:	mov	x21, x30
     430:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     434:	ldr	x22, [x22]
     438:	add	x1, x20, x22
     43c:	ldr	x0, [x1, #16]
     440:	str	x30, [sp, #32]
     444:	cbz	x0, 4b8 <_ZdaPv+0xa0>
     448:	add	x0, x0, #0x1f, lsl #12
     44c:	ldrb	w0, [x0, #3764]
     450:	cbnz	w0, 4c4 <_ZdaPv+0xac>
     454:	add	x20, x20, x22
     458:	mov	x0, x19
     45c:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     460:	ldr	x22, [x20, #16]
     464:	cbz	x22, 4d4 <_ZdaPv+0xbc>
     468:	add	x20, sp, #0x38
     46c:	mov	x3, x21
     470:	mov	x1, x22
     474:	mov	x0, x20
     478:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     47c:	add	x2, x2, #0x0
     480:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     484:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     488:	mov	x1, x0
     48c:	mov	x2, x19
     490:	mov	w3, #0x1                   	// #1
     494:	mov	x0, x22
     498:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     49c:	mov	x0, x20
     4a0:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     4a4:	ldp	x21, x22, [sp, #16]
     4a8:	ldr	x30, [sp, #32]
     4ac:	ldp	x19, x20, [sp], #80
     4b0:	ret
     4b4:	ret
     4b8:	mov	x0, x1
     4bc:	str	x1, [x1, #16]
     4c0:	b	448 <_ZdaPv+0x30>
     4c4:	mov	x0, x19
     4c8:	mov	x1, #0x0                   	// #0
     4cc:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     4d0:	b	4a4 <_ZdaPv+0x8c>
     4d4:	mov	x22, x20
     4d8:	str	x20, [x20, #16]
     4dc:	b	468 <_ZdaPv+0x50>

00000000000004e0 <_ZdlPvRKSt9nothrow_t>:
     4e0:	cbz	x0, 57c <_ZdlPvRKSt9nothrow_t+0x9c>
     4e4:	stp	x19, x20, [sp, #-80]!
     4e8:	mrs	x20, tpidr_el0
     4ec:	mov	x19, x0
     4f0:	stp	x21, x22, [sp, #16]
     4f4:	mov	x21, x30
     4f8:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     4fc:	ldr	x22, [x22]
     500:	add	x1, x20, x22
     504:	ldr	x0, [x1, #16]
     508:	str	x30, [sp, #32]
     50c:	cbz	x0, 580 <_ZdlPvRKSt9nothrow_t+0xa0>
     510:	add	x0, x0, #0x1f, lsl #12
     514:	ldrb	w0, [x0, #3764]
     518:	cbnz	w0, 58c <_ZdlPvRKSt9nothrow_t+0xac>
     51c:	add	x20, x20, x22
     520:	mov	x0, x19
     524:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     528:	ldr	x22, [x20, #16]
     52c:	cbz	x22, 59c <_ZdlPvRKSt9nothrow_t+0xbc>
     530:	add	x20, sp, #0x38
     534:	mov	x3, x21
     538:	mov	x1, x22
     53c:	mov	x0, x20
     540:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     544:	add	x2, x2, #0x0
     548:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     54c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     550:	mov	x1, x0
     554:	mov	x2, x19
     558:	mov	w3, #0x1                   	// #1
     55c:	mov	x0, x22
     560:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     564:	mov	x0, x20
     568:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     56c:	ldp	x21, x22, [sp, #16]
     570:	ldr	x30, [sp, #32]
     574:	ldp	x19, x20, [sp], #80
     578:	ret
     57c:	ret
     580:	mov	x0, x1
     584:	str	x1, [x1, #16]
     588:	b	510 <_ZdlPvRKSt9nothrow_t+0x30>
     58c:	mov	x0, x19
     590:	mov	x1, #0x0                   	// #0
     594:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     598:	b	56c <_ZdlPvRKSt9nothrow_t+0x8c>
     59c:	mov	x22, x20
     5a0:	str	x20, [x20, #16]
     5a4:	b	530 <_ZdlPvRKSt9nothrow_t+0x50>

00000000000005a8 <_ZdaPvRKSt9nothrow_t>:
     5a8:	cbz	x0, 644 <_ZdaPvRKSt9nothrow_t+0x9c>
     5ac:	stp	x19, x20, [sp, #-80]!
     5b0:	mrs	x20, tpidr_el0
     5b4:	mov	x19, x0
     5b8:	stp	x21, x22, [sp, #16]
     5bc:	mov	x21, x30
     5c0:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     5c4:	ldr	x22, [x22]
     5c8:	add	x1, x20, x22
     5cc:	ldr	x0, [x1, #16]
     5d0:	str	x30, [sp, #32]
     5d4:	cbz	x0, 648 <_ZdaPvRKSt9nothrow_t+0xa0>
     5d8:	add	x0, x0, #0x1f, lsl #12
     5dc:	ldrb	w0, [x0, #3764]
     5e0:	cbnz	w0, 654 <_ZdaPvRKSt9nothrow_t+0xac>
     5e4:	add	x20, x20, x22
     5e8:	mov	x0, x19
     5ec:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     5f0:	ldr	x22, [x20, #16]
     5f4:	cbz	x22, 664 <_ZdaPvRKSt9nothrow_t+0xbc>
     5f8:	add	x20, sp, #0x38
     5fc:	mov	x3, x21
     600:	mov	x1, x22
     604:	mov	x0, x20
     608:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     60c:	add	x2, x2, #0x0
     610:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     614:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     618:	mov	x1, x0
     61c:	mov	x2, x19
     620:	mov	w3, #0x1                   	// #1
     624:	mov	x0, x22
     628:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     62c:	mov	x0, x20
     630:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     634:	ldp	x21, x22, [sp, #16]
     638:	ldr	x30, [sp, #32]
     63c:	ldp	x19, x20, [sp], #80
     640:	ret
     644:	ret
     648:	mov	x0, x1
     64c:	str	x1, [x1, #16]
     650:	b	5d8 <_ZdaPvRKSt9nothrow_t+0x30>
     654:	mov	x0, x19
     658:	mov	x1, #0x0                   	// #0
     65c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     660:	b	634 <_ZdaPvRKSt9nothrow_t+0x8c>
     664:	mov	x22, x20
     668:	str	x20, [x20, #16]
     66c:	b	5f8 <_ZdaPvRKSt9nothrow_t+0x50>

0000000000000670 <_ZdlPvm>:
     670:	cbz	x0, 70c <_ZdlPvm+0x9c>
     674:	stp	x19, x20, [sp, #-80]!
     678:	mrs	x20, tpidr_el0
     67c:	mov	x19, x0
     680:	stp	x21, x22, [sp, #16]
     684:	mov	x21, x30
     688:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     68c:	ldr	x22, [x22]
     690:	add	x1, x20, x22
     694:	ldr	x0, [x1, #16]
     698:	str	x30, [sp, #32]
     69c:	cbz	x0, 710 <_ZdlPvm+0xa0>
     6a0:	add	x0, x0, #0x1f, lsl #12
     6a4:	ldrb	w0, [x0, #3764]
     6a8:	cbnz	w0, 71c <_ZdlPvm+0xac>
     6ac:	add	x20, x20, x22
     6b0:	mov	x0, x19
     6b4:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     6b8:	ldr	x22, [x20, #16]
     6bc:	cbz	x22, 72c <_ZdlPvm+0xbc>
     6c0:	add	x20, sp, #0x38
     6c4:	mov	x3, x21
     6c8:	mov	x1, x22
     6cc:	mov	x0, x20
     6d0:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     6d4:	add	x2, x2, #0x0
     6d8:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     6dc:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     6e0:	mov	x1, x0
     6e4:	mov	x2, x19
     6e8:	mov	w3, #0x1                   	// #1
     6ec:	mov	x0, x22
     6f0:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     6f4:	mov	x0, x20
     6f8:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     6fc:	ldp	x21, x22, [sp, #16]
     700:	ldr	x30, [sp, #32]
     704:	ldp	x19, x20, [sp], #80
     708:	ret
     70c:	ret
     710:	mov	x0, x1
     714:	str	x1, [x1, #16]
     718:	b	6a0 <_ZdlPvm+0x30>
     71c:	mov	x0, x19
     720:	mov	x1, #0x0                   	// #0
     724:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     728:	b	6fc <_ZdlPvm+0x8c>
     72c:	mov	x22, x20
     730:	str	x20, [x20, #16]
     734:	b	6c0 <_ZdlPvm+0x50>

0000000000000738 <_ZdaPvm>:
     738:	cbz	x0, 7d4 <_ZdaPvm+0x9c>
     73c:	stp	x19, x20, [sp, #-80]!
     740:	mrs	x20, tpidr_el0
     744:	mov	x19, x0
     748:	stp	x21, x22, [sp, #16]
     74c:	mov	x21, x30
     750:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     754:	ldr	x22, [x22]
     758:	add	x1, x20, x22
     75c:	ldr	x0, [x1, #16]
     760:	str	x30, [sp, #32]
     764:	cbz	x0, 7d8 <_ZdaPvm+0xa0>
     768:	add	x0, x0, #0x1f, lsl #12
     76c:	ldrb	w0, [x0, #3764]
     770:	cbnz	w0, 7e4 <_ZdaPvm+0xac>
     774:	add	x20, x20, x22
     778:	mov	x0, x19
     77c:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     780:	ldr	x22, [x20, #16]
     784:	cbz	x22, 7f4 <_ZdaPvm+0xbc>
     788:	add	x20, sp, #0x38
     78c:	mov	x3, x21
     790:	mov	x1, x22
     794:	mov	x0, x20
     798:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     79c:	add	x2, x2, #0x0
     7a0:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     7a4:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     7a8:	mov	x1, x0
     7ac:	mov	x2, x19
     7b0:	mov	w3, #0x1                   	// #1
     7b4:	mov	x0, x22
     7b8:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     7bc:	mov	x0, x20
     7c0:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     7c4:	ldp	x21, x22, [sp, #16]
     7c8:	ldr	x30, [sp, #32]
     7cc:	ldp	x19, x20, [sp], #80
     7d0:	ret
     7d4:	ret
     7d8:	mov	x0, x1
     7dc:	str	x1, [x1, #16]
     7e0:	b	768 <_ZdaPvm+0x30>
     7e4:	mov	x0, x19
     7e8:	mov	x1, #0x0                   	// #0
     7ec:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     7f0:	b	7c4 <_ZdaPvm+0x8c>
     7f4:	mov	x22, x20
     7f8:	str	x20, [x20, #16]
     7fc:	b	788 <_ZdaPvm+0x50>

0000000000000800 <_ZdlPvSt11align_val_t>:
     800:	cbz	x0, 89c <_ZdlPvSt11align_val_t+0x9c>
     804:	stp	x19, x20, [sp, #-80]!
     808:	mrs	x20, tpidr_el0
     80c:	mov	x19, x0
     810:	stp	x21, x22, [sp, #16]
     814:	mov	x21, x30
     818:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     81c:	ldr	x22, [x22]
     820:	add	x1, x20, x22
     824:	ldr	x0, [x1, #16]
     828:	str	x30, [sp, #32]
     82c:	cbz	x0, 8a0 <_ZdlPvSt11align_val_t+0xa0>
     830:	add	x0, x0, #0x1f, lsl #12
     834:	ldrb	w0, [x0, #3764]
     838:	cbnz	w0, 8ac <_ZdlPvSt11align_val_t+0xac>
     83c:	add	x20, x20, x22
     840:	mov	x0, x19
     844:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     848:	ldr	x22, [x20, #16]
     84c:	cbz	x22, 8bc <_ZdlPvSt11align_val_t+0xbc>
     850:	add	x20, sp, #0x38
     854:	mov	x3, x21
     858:	mov	x1, x22
     85c:	mov	x0, x20
     860:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     864:	add	x2, x2, #0x0
     868:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     86c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     870:	mov	x1, x0
     874:	mov	x2, x19
     878:	mov	w3, #0x1                   	// #1
     87c:	mov	x0, x22
     880:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     884:	mov	x0, x20
     888:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     88c:	ldp	x21, x22, [sp, #16]
     890:	ldr	x30, [sp, #32]
     894:	ldp	x19, x20, [sp], #80
     898:	ret
     89c:	ret
     8a0:	mov	x0, x1
     8a4:	str	x1, [x1, #16]
     8a8:	b	830 <_ZdlPvSt11align_val_t+0x30>
     8ac:	mov	x0, x19
     8b0:	mov	x1, #0x0                   	// #0
     8b4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     8b8:	b	88c <_ZdlPvSt11align_val_t+0x8c>
     8bc:	mov	x22, x20
     8c0:	str	x20, [x20, #16]
     8c4:	b	850 <_ZdlPvSt11align_val_t+0x50>

00000000000008c8 <_ZdaPvSt11align_val_t>:
     8c8:	cbz	x0, 964 <_ZdaPvSt11align_val_t+0x9c>
     8cc:	stp	x19, x20, [sp, #-80]!
     8d0:	mrs	x20, tpidr_el0
     8d4:	mov	x19, x0
     8d8:	stp	x21, x22, [sp, #16]
     8dc:	mov	x21, x30
     8e0:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     8e4:	ldr	x22, [x22]
     8e8:	add	x1, x20, x22
     8ec:	ldr	x0, [x1, #16]
     8f0:	str	x30, [sp, #32]
     8f4:	cbz	x0, 968 <_ZdaPvSt11align_val_t+0xa0>
     8f8:	add	x0, x0, #0x1f, lsl #12
     8fc:	ldrb	w0, [x0, #3764]
     900:	cbnz	w0, 974 <_ZdaPvSt11align_val_t+0xac>
     904:	add	x20, x20, x22
     908:	mov	x0, x19
     90c:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     910:	ldr	x22, [x20, #16]
     914:	cbz	x22, 984 <_ZdaPvSt11align_val_t+0xbc>
     918:	add	x20, sp, #0x38
     91c:	mov	x3, x21
     920:	mov	x1, x22
     924:	mov	x0, x20
     928:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     92c:	add	x2, x2, #0x0
     930:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     934:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     938:	mov	x1, x0
     93c:	mov	x2, x19
     940:	mov	w3, #0x1                   	// #1
     944:	mov	x0, x22
     948:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     94c:	mov	x0, x20
     950:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     954:	ldp	x21, x22, [sp, #16]
     958:	ldr	x30, [sp, #32]
     95c:	ldp	x19, x20, [sp], #80
     960:	ret
     964:	ret
     968:	mov	x0, x1
     96c:	str	x1, [x1, #16]
     970:	b	8f8 <_ZdaPvSt11align_val_t+0x30>
     974:	mov	x0, x19
     978:	mov	x1, #0x0                   	// #0
     97c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     980:	b	954 <_ZdaPvSt11align_val_t+0x8c>
     984:	mov	x22, x20
     988:	str	x20, [x20, #16]
     98c:	b	918 <_ZdaPvSt11align_val_t+0x50>

0000000000000990 <_ZdlPvSt11align_val_tRKSt9nothrow_t>:
     990:	cbz	x0, a2c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x9c>
     994:	stp	x19, x20, [sp, #-80]!
     998:	mrs	x20, tpidr_el0
     99c:	mov	x19, x0
     9a0:	stp	x21, x22, [sp, #16]
     9a4:	mov	x21, x30
     9a8:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     9ac:	ldr	x22, [x22]
     9b0:	add	x1, x20, x22
     9b4:	ldr	x0, [x1, #16]
     9b8:	str	x30, [sp, #32]
     9bc:	cbz	x0, a30 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xa0>
     9c0:	add	x0, x0, #0x1f, lsl #12
     9c4:	ldrb	w0, [x0, #3764]
     9c8:	cbnz	w0, a3c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xac>
     9cc:	add	x20, x20, x22
     9d0:	mov	x0, x19
     9d4:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     9d8:	ldr	x22, [x20, #16]
     9dc:	cbz	x22, a4c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xbc>
     9e0:	add	x20, sp, #0x38
     9e4:	mov	x3, x21
     9e8:	mov	x1, x22
     9ec:	mov	x0, x20
     9f0:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     9f4:	add	x2, x2, #0x0
     9f8:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     9fc:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     a00:	mov	x1, x0
     a04:	mov	x2, x19
     a08:	mov	w3, #0x1                   	// #1
     a0c:	mov	x0, x22
     a10:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     a14:	mov	x0, x20
     a18:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     a1c:	ldp	x21, x22, [sp, #16]
     a20:	ldr	x30, [sp, #32]
     a24:	ldp	x19, x20, [sp], #80
     a28:	ret
     a2c:	ret
     a30:	mov	x0, x1
     a34:	str	x1, [x1, #16]
     a38:	b	9c0 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x30>
     a3c:	mov	x0, x19
     a40:	mov	x1, #0x0                   	// #0
     a44:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     a48:	b	a1c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x8c>
     a4c:	mov	x22, x20
     a50:	str	x20, [x20, #16]
     a54:	b	9e0 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x50>

0000000000000a58 <_ZdaPvSt11align_val_tRKSt9nothrow_t>:
     a58:	cbz	x0, af4 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x9c>
     a5c:	stp	x19, x20, [sp, #-80]!
     a60:	mrs	x20, tpidr_el0
     a64:	mov	x19, x0
     a68:	stp	x21, x22, [sp, #16]
     a6c:	mov	x21, x30
     a70:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     a74:	ldr	x22, [x22]
     a78:	add	x1, x20, x22
     a7c:	ldr	x0, [x1, #16]
     a80:	str	x30, [sp, #32]
     a84:	cbz	x0, af8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xa0>
     a88:	add	x0, x0, #0x1f, lsl #12
     a8c:	ldrb	w0, [x0, #3764]
     a90:	cbnz	w0, b04 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xac>
     a94:	add	x20, x20, x22
     a98:	mov	x0, x19
     a9c:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     aa0:	ldr	x22, [x20, #16]
     aa4:	cbz	x22, b14 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xbc>
     aa8:	add	x20, sp, #0x38
     aac:	mov	x3, x21
     ab0:	mov	x1, x22
     ab4:	mov	x0, x20
     ab8:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     abc:	add	x2, x2, #0x0
     ac0:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     ac4:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     ac8:	mov	x1, x0
     acc:	mov	x2, x19
     ad0:	mov	w3, #0x1                   	// #1
     ad4:	mov	x0, x22
     ad8:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     adc:	mov	x0, x20
     ae0:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     ae4:	ldp	x21, x22, [sp, #16]
     ae8:	ldr	x30, [sp, #32]
     aec:	ldp	x19, x20, [sp], #80
     af0:	ret
     af4:	ret
     af8:	mov	x0, x1
     afc:	str	x1, [x1, #16]
     b00:	b	a88 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x30>
     b04:	mov	x0, x19
     b08:	mov	x1, #0x0                   	// #0
     b0c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     b10:	b	ae4 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x8c>
     b14:	mov	x22, x20
     b18:	str	x20, [x20, #16]
     b1c:	b	aa8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x50>

0000000000000b20 <_ZdlPvmSt11align_val_t>:
     b20:	cbz	x0, bbc <_ZdlPvmSt11align_val_t+0x9c>
     b24:	stp	x19, x20, [sp, #-80]!
     b28:	mrs	x20, tpidr_el0
     b2c:	mov	x19, x0
     b30:	stp	x21, x22, [sp, #16]
     b34:	mov	x21, x30
     b38:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     b3c:	ldr	x22, [x22]
     b40:	add	x1, x20, x22
     b44:	ldr	x0, [x1, #16]
     b48:	str	x30, [sp, #32]
     b4c:	cbz	x0, bc0 <_ZdlPvmSt11align_val_t+0xa0>
     b50:	add	x0, x0, #0x1f, lsl #12
     b54:	ldrb	w0, [x0, #3764]
     b58:	cbnz	w0, bcc <_ZdlPvmSt11align_val_t+0xac>
     b5c:	add	x20, x20, x22
     b60:	mov	x0, x19
     b64:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     b68:	ldr	x22, [x20, #16]
     b6c:	cbz	x22, bdc <_ZdlPvmSt11align_val_t+0xbc>
     b70:	add	x20, sp, #0x38
     b74:	mov	x3, x21
     b78:	mov	x1, x22
     b7c:	mov	x0, x20
     b80:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     b84:	add	x2, x2, #0x0
     b88:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     b8c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     b90:	mov	x1, x0
     b94:	mov	x2, x19
     b98:	mov	w3, #0x1                   	// #1
     b9c:	mov	x0, x22
     ba0:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     ba4:	mov	x0, x20
     ba8:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     bac:	ldp	x21, x22, [sp, #16]
     bb0:	ldr	x30, [sp, #32]
     bb4:	ldp	x19, x20, [sp], #80
     bb8:	ret
     bbc:	ret
     bc0:	mov	x0, x1
     bc4:	str	x1, [x1, #16]
     bc8:	b	b50 <_ZdlPvmSt11align_val_t+0x30>
     bcc:	mov	x0, x19
     bd0:	mov	x1, #0x0                   	// #0
     bd4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     bd8:	b	bac <_ZdlPvmSt11align_val_t+0x8c>
     bdc:	mov	x22, x20
     be0:	str	x20, [x20, #16]
     be4:	b	b70 <_ZdlPvmSt11align_val_t+0x50>

0000000000000be8 <_ZdaPvmSt11align_val_t>:
     be8:	cbz	x0, c84 <_ZdaPvmSt11align_val_t+0x9c>
     bec:	stp	x19, x20, [sp, #-80]!
     bf0:	mrs	x20, tpidr_el0
     bf4:	mov	x19, x0
     bf8:	stp	x21, x22, [sp, #16]
     bfc:	mov	x21, x30
     c00:	adrp	x22, 0 <_ZN6__tsan22cur_thread_placeholderE>
     c04:	ldr	x22, [x22]
     c08:	add	x1, x20, x22
     c0c:	ldr	x0, [x1, #16]
     c10:	str	x30, [sp, #32]
     c14:	cbz	x0, c88 <_ZdaPvmSt11align_val_t+0xa0>
     c18:	add	x0, x0, #0x1f, lsl #12
     c1c:	ldrb	w0, [x0, #3764]
     c20:	cbnz	w0, c94 <_ZdaPvmSt11align_val_t+0xac>
     c24:	add	x20, x20, x22
     c28:	mov	x0, x19
     c2c:	bl	0 <_ZN6__tsan16invoke_free_hookEPv>
     c30:	ldr	x22, [x20, #16]
     c34:	cbz	x22, ca4 <_ZdaPvmSt11align_val_t+0xbc>
     c38:	add	x20, sp, #0x38
     c3c:	mov	x3, x21
     c40:	mov	x1, x22
     c44:	mov	x0, x20
     c48:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     c4c:	add	x2, x2, #0x0
     c50:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     c54:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     c58:	mov	x1, x0
     c5c:	mov	x2, x19
     c60:	mov	w3, #0x1                   	// #1
     c64:	mov	x0, x22
     c68:	bl	0 <_ZN6__tsan9user_freeEPNS_11ThreadStateEmPvb>
     c6c:	mov	x0, x20
     c70:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     c74:	ldp	x21, x22, [sp, #16]
     c78:	ldr	x30, [sp, #32]
     c7c:	ldp	x19, x20, [sp], #80
     c80:	ret
     c84:	ret
     c88:	mov	x0, x1
     c8c:	str	x1, [x1, #16]
     c90:	b	c18 <_ZdaPvmSt11align_val_t+0x30>
     c94:	mov	x0, x19
     c98:	mov	x1, #0x0                   	// #0
     c9c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     ca0:	b	c74 <_ZdaPvmSt11align_val_t+0x8c>
     ca4:	mov	x22, x20
     ca8:	str	x20, [x20, #16]
     cac:	b	c38 <_ZdaPvmSt11align_val_t+0x50>

0000000000000cb0 <_Znwm>:
     cb0:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
     cb4:	ldr	x4, [x4]
     cb8:	mrs	x5, tpidr_el0
     cbc:	stp	x19, x20, [sp, #-96]!
     cc0:	mov	x3, x30
     cc4:	add	x4, x5, x4
     cc8:	stp	x21, x22, [sp, #16]
     ccc:	mov	x21, x0
     cd0:	ldr	x20, [x4, #16]
     cd4:	str	x30, [sp, #40]
     cd8:	cbz	x20, d50 <_Znwm+0xa0>
     cdc:	add	x0, x20, #0x1f, lsl #12
     ce0:	ldrb	w0, [x0, #3764]
     ce4:	cbnz	w0, d64 <_Znwm+0xb4>
     ce8:	str	x23, [sp, #32]
     cec:	add	x23, sp, #0x30
     cf0:	mov	x1, x20
     cf4:	mov	x0, x23
     cf8:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     cfc:	add	x2, x2, #0x0
     d00:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     d04:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     d08:	mov	x1, x0
     d0c:	mov	x22, x0
     d10:	mov	x2, x21
     d14:	mov	x0, x20
     d18:	bl	0 <_ZN6__tsan10user_allocEPNS_11ThreadStateEmm>
     d1c:	mov	x19, x0
     d20:	cbz	x0, d8c <_Znwm+0xdc>
     d24:	mov	x0, x23
     d28:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     d2c:	mov	x1, x21
     d30:	mov	x0, x19
     d34:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
     d38:	mov	x0, x19
     d3c:	ldp	x21, x22, [sp, #16]
     d40:	ldr	x23, [sp, #32]
     d44:	ldr	x30, [sp, #40]
     d48:	ldp	x19, x20, [sp], #96
     d4c:	ret
     d50:	mov	x20, x4
     d54:	str	x4, [x4, #16]
     d58:	add	x0, x20, #0x1f, lsl #12
     d5c:	ldrb	w0, [x0, #3764]
     d60:	cbz	w0, ce8 <_Znwm+0x38>
     d64:	mov	x0, x21
     d68:	mov	x2, #0x0                   	// #0
     d6c:	mov	x1, #0x0                   	// #0
     d70:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     d74:	mov	x19, x0
     d78:	mov	x0, x19
     d7c:	ldp	x21, x22, [sp, #16]
     d80:	ldr	x30, [sp, #40]
     d84:	ldp	x19, x20, [sp], #96
     d88:	ret
     d8c:	add	x19, sp, #0x48
     d90:	mov	x0, x19
     d94:	bl	0 <_ZN6__tsan17VarSizeStackTraceC1Ev>
     d98:	mov	x1, x22
     d9c:	mov	x2, x19
     da0:	mov	x3, #0x0                   	// #0
     da4:	mov	x0, x20
     da8:	bl	0 <_ZN6__tsanL17build_consistencyEv>
     dac:	mov	x0, x19
     db0:	bl	0 <_ZN6__tsan17VarSizeStackTrace12ReverseOrderEv>
     db4:	mov	x1, x19
     db8:	mov	x0, x21
     dbc:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

0000000000000dc0 <_Znam>:
     dc0:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
     dc4:	ldr	x4, [x4]
     dc8:	mrs	x5, tpidr_el0
     dcc:	stp	x19, x20, [sp, #-96]!
     dd0:	mov	x3, x30
     dd4:	add	x4, x5, x4
     dd8:	stp	x21, x22, [sp, #16]
     ddc:	mov	x21, x0
     de0:	ldr	x20, [x4, #16]
     de4:	str	x30, [sp, #40]
     de8:	cbz	x20, e60 <_Znam+0xa0>
     dec:	add	x0, x20, #0x1f, lsl #12
     df0:	ldrb	w0, [x0, #3764]
     df4:	cbnz	w0, e74 <_Znam+0xb4>
     df8:	str	x23, [sp, #32]
     dfc:	add	x23, sp, #0x30
     e00:	mov	x1, x20
     e04:	mov	x0, x23
     e08:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     e0c:	add	x2, x2, #0x0
     e10:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     e14:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     e18:	mov	x1, x0
     e1c:	mov	x22, x0
     e20:	mov	x2, x21
     e24:	mov	x0, x20
     e28:	bl	0 <_ZN6__tsan10user_allocEPNS_11ThreadStateEmm>
     e2c:	mov	x19, x0
     e30:	cbz	x0, e9c <_Znam+0xdc>
     e34:	mov	x0, x23
     e38:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     e3c:	mov	x1, x21
     e40:	mov	x0, x19
     e44:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
     e48:	mov	x0, x19
     e4c:	ldp	x21, x22, [sp, #16]
     e50:	ldr	x23, [sp, #32]
     e54:	ldr	x30, [sp, #40]
     e58:	ldp	x19, x20, [sp], #96
     e5c:	ret
     e60:	mov	x20, x4
     e64:	str	x4, [x4, #16]
     e68:	add	x0, x20, #0x1f, lsl #12
     e6c:	ldrb	w0, [x0, #3764]
     e70:	cbz	w0, df8 <_Znam+0x38>
     e74:	mov	x0, x21
     e78:	mov	x2, #0x0                   	// #0
     e7c:	mov	x1, #0x0                   	// #0
     e80:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     e84:	mov	x19, x0
     e88:	mov	x0, x19
     e8c:	ldp	x21, x22, [sp, #16]
     e90:	ldr	x30, [sp, #40]
     e94:	ldp	x19, x20, [sp], #96
     e98:	ret
     e9c:	add	x19, sp, #0x48
     ea0:	mov	x0, x19
     ea4:	bl	0 <_ZN6__tsan17VarSizeStackTraceC1Ev>
     ea8:	mov	x1, x22
     eac:	mov	x2, x19
     eb0:	mov	x3, #0x0                   	// #0
     eb4:	mov	x0, x20
     eb8:	bl	0 <_ZN6__tsanL17build_consistencyEv>
     ebc:	mov	x0, x19
     ec0:	bl	0 <_ZN6__tsan17VarSizeStackTrace12ReverseOrderEv>
     ec4:	mov	x1, x19
     ec8:	mov	x0, x21
     ecc:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

0000000000000ed0 <_ZnwmSt11align_val_t>:
     ed0:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
     ed4:	ldr	x4, [x4]
     ed8:	mrs	x2, tpidr_el0
     edc:	stp	x19, x20, [sp, #-112]!
     ee0:	mov	x3, x30
     ee4:	add	x4, x2, x4
     ee8:	stp	x21, x22, [sp, #16]
     eec:	mov	x19, x1
     ef0:	mov	x21, x0
     ef4:	ldr	x20, [x4, #16]
     ef8:	str	x30, [sp, #40]
     efc:	cbz	x20, f80 <_ZnwmSt11align_val_t+0xb0>
     f00:	add	x0, x20, #0x1f, lsl #12
     f04:	ldrb	w0, [x0, #3764]
     f08:	cbnz	w0, f94 <_ZnwmSt11align_val_t+0xc4>
     f0c:	str	x23, [sp, #32]
     f10:	add	x23, sp, #0x40
     f14:	mov	x1, x20
     f18:	mov	x0, x23
     f1c:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
     f20:	add	x2, x2, #0x0
     f24:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
     f28:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     f2c:	mov	x1, x0
     f30:	mov	x2, x19
     f34:	mov	x22, x0
     f38:	mov	x3, x21
     f3c:	str	x0, [sp, #56]
     f40:	mov	x0, x20
     f44:	bl	0 <_ZN6__tsan13user_memalignEPNS_11ThreadStateEmmm>
     f48:	str	x0, [sp, #56]
     f4c:	mov	x19, x0
     f50:	cbz	x0, fbc <_ZnwmSt11align_val_t+0xec>
     f54:	mov	x0, x23
     f58:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
     f5c:	mov	x1, x21
     f60:	mov	x0, x19
     f64:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
     f68:	mov	x0, x19
     f6c:	ldp	x21, x22, [sp, #16]
     f70:	ldr	x23, [sp, #32]
     f74:	ldr	x30, [sp, #40]
     f78:	ldp	x19, x20, [sp], #112
     f7c:	ret
     f80:	mov	x20, x4
     f84:	str	x4, [x4, #16]
     f88:	add	x0, x20, #0x1f, lsl #12
     f8c:	ldrb	w0, [x0, #3764]
     f90:	cbz	w0, f0c <_ZnwmSt11align_val_t+0x3c>
     f94:	mov	x2, x19
     f98:	mov	x0, x21
     f9c:	mov	x1, #0x0                   	// #0
     fa0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     fa4:	mov	x19, x0
     fa8:	mov	x0, x19
     fac:	ldp	x21, x22, [sp, #16]
     fb0:	ldr	x30, [sp, #40]
     fb4:	ldp	x19, x20, [sp], #112
     fb8:	ret
     fbc:	add	x19, sp, #0x58
     fc0:	mov	x0, x19
     fc4:	bl	0 <_ZN6__tsan17VarSizeStackTraceC1Ev>
     fc8:	mov	x1, x22
     fcc:	mov	x2, x19
     fd0:	mov	x3, #0x0                   	// #0
     fd4:	mov	x0, x20
     fd8:	bl	0 <_ZN6__tsanL17build_consistencyEv>
     fdc:	mov	x0, x19
     fe0:	bl	0 <_ZN6__tsan17VarSizeStackTrace12ReverseOrderEv>
     fe4:	mov	x1, x19
     fe8:	mov	x0, x21
     fec:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

0000000000000ff0 <_ZnamSt11align_val_t>:
     ff0:	adrp	x4, 0 <_ZN6__tsan22cur_thread_placeholderE>
     ff4:	ldr	x4, [x4]
     ff8:	mrs	x2, tpidr_el0
     ffc:	stp	x19, x20, [sp, #-96]!
    1000:	mov	x3, x30
    1004:	add	x4, x2, x4
    1008:	stp	x21, x22, [sp, #16]
    100c:	mov	x19, x1
    1010:	mov	x21, x0
    1014:	ldr	x20, [x4, #16]
    1018:	str	x30, [sp, #40]
    101c:	cbz	x20, 1098 <_ZnamSt11align_val_t+0xa8>
    1020:	add	x0, x20, #0x1f, lsl #12
    1024:	ldrb	w0, [x0, #3764]
    1028:	cbnz	w0, 10ac <_ZnamSt11align_val_t+0xbc>
    102c:	str	x23, [sp, #32]
    1030:	add	x23, sp, #0x30
    1034:	mov	x1, x20
    1038:	mov	x0, x23
    103c:	adrp	x2, 0 <_ZN6__tsanL17build_consistencyEv>
    1040:	add	x2, x2, #0x0
    1044:	bl	0 <_ZN6__tsan17ScopedInterceptorC1EPNS_11ThreadStateEPKcm>
    1048:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    104c:	mov	x1, x0
    1050:	mov	x2, x19
    1054:	mov	x22, x0
    1058:	mov	x3, x21
    105c:	mov	x0, x20
    1060:	bl	0 <_ZN6__tsan13user_memalignEPNS_11ThreadStateEmmm>
    1064:	mov	x19, x0
    1068:	cbz	x0, 10d4 <_ZnamSt11align_val_t+0xe4>
    106c:	mov	x0, x23
    1070:	bl	0 <_ZN6__tsan17ScopedInterceptorD1Ev>
    1074:	mov	x1, x21
    1078:	mov	x0, x19
    107c:	bl	0 <_ZN6__tsan18invoke_malloc_hookEPvm>
    1080:	mov	x0, x19
    1084:	ldp	x21, x22, [sp, #16]
    1088:	ldr	x23, [sp, #32]
    108c:	ldr	x30, [sp, #40]
    1090:	ldp	x19, x20, [sp], #96
    1094:	ret
    1098:	mov	x20, x4
    109c:	str	x4, [x4, #16]
    10a0:	add	x0, x20, #0x1f, lsl #12
    10a4:	ldrb	w0, [x0, #3764]
    10a8:	cbz	w0, 102c <_ZnamSt11align_val_t+0x3c>
    10ac:	mov	x2, x19
    10b0:	mov	x0, x21
    10b4:	mov	x1, #0x0                   	// #0
    10b8:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    10bc:	mov	x19, x0
    10c0:	mov	x0, x19
    10c4:	ldp	x21, x22, [sp, #16]
    10c8:	ldr	x30, [sp, #40]
    10cc:	ldp	x19, x20, [sp], #96
    10d0:	ret
    10d4:	add	x19, sp, #0x48
    10d8:	mov	x0, x19
    10dc:	bl	0 <_ZN6__tsan17VarSizeStackTraceC1Ev>
    10e0:	mov	x1, x22
    10e4:	mov	x2, x19
    10e8:	mov	x3, #0x0                   	// #0
    10ec:	mov	x0, x20
    10f0:	bl	0 <_ZN6__tsanL17build_consistencyEv>
    10f4:	mov	x0, x19
    10f8:	bl	0 <_ZN6__tsan17VarSizeStackTrace12ReverseOrderEv>
    10fc:	mov	x1, x19
    1100:	mov	x0, x21
    1104:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

Disassembly of section .text._ZN6__tsan18ObtainCurrentStackINS_17VarSizeStackTraceEEEvPNS_11ThreadStateEmPT_Pm:

0000000000000000 <_ZN6__tsan18ObtainCurrentStackINS_17VarSizeStackTraceEEEvPNS_11ThreadStateEmPT_Pm>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	cmp	x1, #0x0
   8:	mov	x4, x1
   c:	ldr	x1, [x0, #184]
  10:	mov	x19, x2
  14:	ldr	x0, [x0, #200]
  18:	str	x30, [sp, #16]
  1c:	mov	x20, x3
  20:	sub	x0, x0, x1
  24:	asr	x2, x0, #3
  28:	cinc	x0, x2, ne  // ne = any
  2c:	cmp	x0, #0x100
  30:	b.ls	48 <_ZN6__tsan18ObtainCurrentStackINS_17VarSizeStackTraceEEEvPNS_11ThreadStateEmPT_Pm+0x48>  // b.plast
  34:	cmp	x4, #0x0
  38:	sub	x0, x0, #0x100
  3c:	cset	x2, eq  // eq = none
  40:	add	x1, x1, x0, lsl #3
  44:	add	x2, x2, #0xff
  48:	mov	x0, x19
  4c:	mov	x3, x4
  50:	bl	0 <_ZN6__tsan17VarSizeStackTrace4InitEPKmmm>
  54:	ldr	w0, [x19, #8]
  58:	cmp	w0, #0x1
  5c:	b.ls	98 <_ZN6__tsan18ObtainCurrentStackINS_17VarSizeStackTraceEEEvPNS_11ThreadStateEmPT_Pm+0x98>  // b.plast
  60:	ldr	x1, [x19]
  64:	sub	w0, w0, #0x2
  68:	ldr	x0, [x1, x0, lsl #3]
  6c:	bl	0 <_ZN6__tsan23TagFromShadowStackFrameEm>
  70:	cbz	x0, 98 <_ZN6__tsan18ObtainCurrentStackINS_17VarSizeStackTraceEEEvPNS_11ThreadStateEmPT_Pm+0x98>
  74:	ldr	w1, [x19, #8]
  78:	ldr	x3, [x19, #16]
  7c:	sub	w2, w1, #0x1
  80:	sub	w1, w1, #0x2
  84:	ldr	x4, [x3, w2, uxtw #3]
  88:	str	x4, [x3, x1, lsl #3]
  8c:	str	w2, [x19, #8]
  90:	cbz	x20, 98 <_ZN6__tsan18ObtainCurrentStackINS_17VarSizeStackTraceEEEvPNS_11ThreadStateEmPT_Pm+0x98>
  94:	str	x0, [x20]
  98:	ldr	x30, [sp, #16]
  9c:	ldp	x19, x20, [sp], #32
  a0:	ret
