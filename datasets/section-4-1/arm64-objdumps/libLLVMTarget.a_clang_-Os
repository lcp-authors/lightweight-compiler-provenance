In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTarget.a_clang_-Os:

Target.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>

0000000000000024 <LLVMInitializeTarget>:
  24:	stp	x29, x30, [sp, #-32]!
  28:	str	x19, [sp, #16]
  2c:	mov	x29, sp
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>

0000000000000048 <LLVMGetModuleDataLayout>:
  48:	b	0 <_ZNK4llvm6Module13getDataLayoutEv>

000000000000004c <LLVMSetModuleDataLayout>:
  4c:	b	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>

0000000000000050 <LLVMCreateTargetData>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	stp	x20, x19, [sp, #16]
  58:	mov	x29, sp
  5c:	mov	x19, x0
  60:	mov	w0, #0x1b0                 	// #432
  64:	bl	0 <_Znwm>
  68:	mov	x20, x0
  6c:	cbz	x19, 80 <LLVMCreateTargetData+0x30>
  70:	mov	x0, x19
  74:	bl	0 <strlen>
  78:	mov	x2, x0
  7c:	b	84 <LLVMCreateTargetData+0x34>
  80:	mov	x2, xzr
  84:	mov	x0, x20
  88:	mov	x1, x19
  8c:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  90:	mov	x0, x20
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret

00000000000000a0 <LLVMDisposeTargetData>:
  a0:	cbz	x0, c8 <LLVMDisposeTargetData+0x28>
  a4:	stp	x29, x30, [sp, #-32]!
  a8:	str	x19, [sp, #16]
  ac:	mov	x29, sp
  b0:	mov	x19, x0
  b4:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
  b8:	mov	x0, x19
  bc:	ldr	x19, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	b	0 <_ZdlPv>
  c8:	ret

00000000000000cc <LLVMAddTargetLibraryInfo>:
  cc:	stp	x29, x30, [sp, #-48]!
  d0:	str	x21, [sp, #16]
  d4:	stp	x20, x19, [sp, #32]
  d8:	mov	x29, sp
  dc:	mov	x20, x0
  e0:	mov	w0, #0x118                 	// #280
  e4:	mov	x19, x1
  e8:	bl	0 <_Znwm>
  ec:	mov	x1, x20
  f0:	mov	x21, x0
  f4:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPassC1ERKNS_21TargetLibraryInfoImplE>
  f8:	ldr	x8, [x19]
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x2, [x8, #16]
 10c:	ldr	x21, [sp, #16]
 110:	ldp	x29, x30, [sp], #48
 114:	br	x2

0000000000000118 <LLVMCopyStringRepOfTargetData>:
 118:	sub	sp, sp, #0x40
 11c:	stp	x29, x30, [sp, #32]
 120:	str	x19, [sp, #48]
 124:	add	x29, sp, #0x20
 128:	mov	x8, sp
 12c:	add	x19, x8, #0x10
 130:	str	x19, [sp]
 134:	ldp	x1, x8, [x0, #200]
 138:	mov	x0, sp
 13c:	add	x2, x1, x8
 140:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 144:	ldr	x0, [sp]
 148:	bl	0 <strdup>
 14c:	ldr	x8, [sp]
 150:	cmp	x8, x19
 154:	mov	x19, x0
 158:	b.eq	164 <LLVMCopyStringRepOfTargetData+0x4c>  // b.none
 15c:	mov	x0, x8
 160:	bl	0 <_ZdlPv>
 164:	mov	x0, x19
 168:	ldr	x19, [sp, #48]
 16c:	ldp	x29, x30, [sp, #32]
 170:	add	sp, sp, #0x40
 174:	ret

0000000000000178 <LLVMByteOrder>:
 178:	ldrb	w8, [x0]
 17c:	eor	w0, w8, #0x1
 180:	ret

0000000000000184 <LLVMPointerSize>:
 184:	mov	w1, wzr
 188:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

000000000000018c <LLVMPointerSizeForAS>:
 18c:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

0000000000000190 <LLVMIntPtrType>:
 190:	stp	x29, x30, [sp, #-32]!
 194:	str	x19, [sp, #16]
 198:	mov	x29, sp
 19c:	mov	x19, x0
 1a0:	bl	0 <LLVMGetGlobalContext>
 1a4:	mov	x1, x0
 1a8:	mov	x0, x19
 1ac:	ldr	x19, [sp, #16]
 1b0:	mov	w2, wzr
 1b4:	ldp	x29, x30, [sp], #32
 1b8:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000001bc <LLVMIntPtrTypeForAS>:
 1bc:	stp	x29, x30, [sp, #-32]!
 1c0:	stp	x20, x19, [sp, #16]
 1c4:	mov	x29, sp
 1c8:	mov	w19, w1
 1cc:	mov	x20, x0
 1d0:	bl	0 <LLVMGetGlobalContext>
 1d4:	mov	x1, x0
 1d8:	mov	x0, x20
 1dc:	mov	w2, w19
 1e0:	ldp	x20, x19, [sp, #16]
 1e4:	ldp	x29, x30, [sp], #32
 1e8:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000001ec <LLVMIntPtrTypeInContext>:
 1ec:	mov	x8, x0
 1f0:	mov	x0, x1
 1f4:	mov	x1, x8
 1f8:	mov	w2, wzr
 1fc:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

0000000000000200 <LLVMIntPtrTypeForASInContext>:
 200:	mov	x8, x0
 204:	mov	x0, x1
 208:	mov	x1, x8
 20c:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

0000000000000210 <LLVMSizeOfTypeInBits>:
 210:	stp	x29, x30, [sp, #-16]!
 214:	mov	x29, sp
 218:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 21c:	tst	w1, #0xff
 220:	b.ne	22c <LLVMSizeOfTypeInBits+0x1c>  // b.any
 224:	ldp	x29, x30, [sp], #16
 228:	ret
 22c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 230:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 234:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 238:	add	x0, x0, #0x0
 23c:	add	x1, x1, #0x0
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x7d                  	// #125
 248:	bl	0 <__assert_fail>

000000000000024c <LLVMStoreSizeOfType>:
 24c:	stp	x29, x30, [sp, #-16]!
 250:	mov	x29, sp
 254:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 258:	tst	w1, #0xff
 25c:	b.ne	270 <LLVMStoreSizeOfType+0x24>  // b.any
 260:	add	x8, x0, #0x7
 264:	lsr	x0, x8, #3
 268:	ldp	x29, x30, [sp], #16
 26c:	ret
 270:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 274:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 278:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 27c:	add	x0, x0, #0x0
 280:	add	x1, x1, #0x0
 284:	add	x3, x3, #0x0
 288:	mov	w2, #0x7d                  	// #125
 28c:	bl	0 <__assert_fail>

0000000000000290 <LLVMABISizeOfType>:
 290:	stp	x29, x30, [sp, #-16]!
 294:	mov	x29, sp
 298:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 29c:	tst	w1, #0xff
 2a0:	b.ne	2ac <LLVMABISizeOfType+0x1c>  // b.any
 2a4:	ldp	x29, x30, [sp], #16
 2a8:	ret
 2ac:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2b0:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2b4:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2b8:	add	x0, x0, #0x0
 2bc:	add	x1, x1, #0x0
 2c0:	add	x3, x3, #0x0
 2c4:	mov	w2, #0x7d                  	// #125
 2c8:	bl	0 <__assert_fail>

00000000000002cc <LLVMABIAlignmentOfType>:
 2cc:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>

00000000000002d0 <LLVMCallFrameAlignmentOfType>:
 2d0:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>

00000000000002d4 <LLVMPreferredAlignmentOfType>:
 2d4:	b	0 <_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE>

00000000000002d8 <LLVMPreferredAlignmentOfGlobal>:
 2d8:	stp	x29, x30, [sp, #-16]!
 2dc:	mov	x29, sp
 2e0:	cbz	x1, 2f8 <LLVMPreferredAlignmentOfGlobal+0x20>
 2e4:	ldrb	w8, [x1, #16]
 2e8:	cmp	w8, #0x3
 2ec:	b.ne	318 <LLVMPreferredAlignmentOfGlobal+0x40>  // b.any
 2f0:	ldp	x29, x30, [sp], #16
 2f4:	b	0 <_ZNK4llvm10DataLayout21getPreferredAlignmentEPKNS_14GlobalVariableE>
 2f8:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2fc:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 300:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 304:	add	x0, x0, #0x0
 308:	add	x1, x1, #0x0
 30c:	add	x3, x3, #0x0
 310:	mov	w2, #0x69                  	// #105
 314:	bl	0 <__assert_fail>
 318:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 31c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 320:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 324:	add	x0, x0, #0x0
 328:	add	x1, x1, #0x0
 32c:	add	x3, x3, #0x0
 330:	mov	w2, #0x108                 	// #264
 334:	bl	0 <__assert_fail>

0000000000000338 <LLVMElementAtOffset>:
 338:	stp	x29, x30, [sp, #-32]!
 33c:	str	x19, [sp, #16]
 340:	mov	x29, sp
 344:	cbz	x1, 36c <LLVMElementAtOffset+0x34>
 348:	ldrb	w8, [x1, #8]
 34c:	cmp	w8, #0xd
 350:	b.ne	38c <LLVMElementAtOffset+0x54>  // b.any
 354:	mov	x19, x2
 358:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 35c:	mov	x1, x19
 360:	ldr	x19, [sp, #16]
 364:	ldp	x29, x30, [sp], #32
 368:	b	0 <_ZNK4llvm12StructLayout26getElementContainingOffsetEm>
 36c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 370:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 374:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 378:	add	x0, x0, #0x0
 37c:	add	x1, x1, #0x0
 380:	add	x3, x3, #0x0
 384:	mov	w2, #0x69                  	// #105
 388:	bl	0 <__assert_fail>
 38c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 390:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 394:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 398:	add	x0, x0, #0x0
 39c:	add	x1, x1, #0x0
 3a0:	add	x3, x3, #0x0
 3a4:	mov	w2, #0x108                 	// #264
 3a8:	bl	0 <__assert_fail>

00000000000003ac <LLVMOffsetOfElement>:
 3ac:	stp	x29, x30, [sp, #-32]!
 3b0:	str	x19, [sp, #16]
 3b4:	mov	x29, sp
 3b8:	cbz	x1, 3f4 <LLVMOffsetOfElement+0x48>
 3bc:	ldrb	w8, [x1, #8]
 3c0:	cmp	w8, #0xd
 3c4:	b.ne	414 <LLVMOffsetOfElement+0x68>  // b.any
 3c8:	mov	w19, w2
 3cc:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 3d0:	ldr	w8, [x0, #12]
 3d4:	and	w8, w8, #0x7fffffff
 3d8:	cmp	w8, w19
 3dc:	b.ls	434 <LLVMOffsetOfElement+0x88>  // b.plast
 3e0:	add	x8, x0, w19, uxtw #3
 3e4:	ldr	x0, [x8, #16]
 3e8:	ldr	x19, [sp, #16]
 3ec:	ldp	x29, x30, [sp], #32
 3f0:	ret
 3f4:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3f8:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3fc:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 400:	add	x0, x0, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x3, x3, #0x0
 40c:	mov	w2, #0x69                  	// #105
 410:	bl	0 <__assert_fail>
 414:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 418:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 41c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 420:	add	x0, x0, #0x0
 424:	add	x1, x1, #0x0
 428:	add	x3, x3, #0x0
 42c:	mov	w2, #0x108                 	// #264
 430:	bl	0 <__assert_fail>
 434:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 438:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 43c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 440:	add	x0, x0, #0x0
 444:	add	x1, x1, #0x0
 448:	add	x3, x3, #0x0
 44c:	mov	w2, #0x260                 	// #608
 450:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10DataLayoutC2ENS_9StringRefE:

0000000000000000 <_ZN4llvm10DataLayoutC2ENS_9StringRefE>:
   0:	adrp	x9, 0 <_ZN4llvm10DataLayoutC2ENS_9StringRefE>
   4:	ldr	d0, [x9]
   8:	adrp	x9, 0 <_ZN4llvm10DataLayoutC2ENS_9StringRefE>
   c:	ldr	d1, [x9]
  10:	add	x8, x0, #0x30
  14:	str	x8, [x0, #32]
  18:	add	x8, x0, #0x48
  1c:	mov	x9, x0
  20:	str	x8, [x0, #56]
  24:	add	x8, x0, #0xf8
  28:	strh	wzr, [x0, #8]
  2c:	strh	wzr, [x0, #16]
  30:	str	d0, [x0, #40]
  34:	str	d1, [x0, #64]
  38:	strb	wzr, [x9, #216]!
  3c:	str	x8, [x0, #232]
  40:	add	x8, x0, #0x190
  44:	stp	xzr, x8, [x0, #376]
  48:	str	d0, [x0, #240]
  4c:	stp	x9, xzr, [x0, #200]
  50:	str	d0, [x0, #392]
  54:	b	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>
   c:	add	x8, x0, #0x7
  10:	tst	w1, #0xff
  14:	lsr	x0, x8, #3
  18:	cset	w1, ne  // ne = any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x19, x0
  20:	mov	x20, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 60 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x60>
  34:	mov	w8, w0
  38:	tst	w20, #0xff
  3c:	add	x9, x19, x8
  40:	ldp	x20, x19, [sp, #32]
  44:	ldp	x22, x21, [sp, #16]
  48:	sub	x9, x9, #0x1
  4c:	udiv	x9, x9, x8
  50:	mul	x0, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  64:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0xc7                  	// #199
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

TargetIntrinsicInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm19TargetIntrinsicInfoC2Ev>:
   0:	adrp	x8, 0 <_ZN4llvm19TargetIntrinsicInfoC2Ev>
   4:	ldr	x8, [x8]
   8:	add	x8, x8, #0x10
   c:	str	x8, [x0]
  10:	ret

0000000000000014 <_ZN4llvm19TargetIntrinsicInfoD1Ev>:
  14:	ret

0000000000000018 <_ZN4llvm19TargetIntrinsicInfoD0Ev>:
  18:	brk	#0x1

000000000000001c <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	str	x19, [sp, #16]
  24:	mov	x29, sp
  28:	mov	x19, x0
  2c:	mov	x0, x1
  30:	bl	0 <_ZNK4llvm5Value12getValueNameEv>
  34:	cbz	x0, 58 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x3c>
  38:	mov	x1, x0
  3c:	ldr	w2, [x1], #16
  40:	ldr	x8, [x19]
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldr	x3, [x8, #24]
  50:	ldp	x29, x30, [sp], #32
  54:	br	x3
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

TargetLoweringObjectFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x21, [x0, #808]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	add	x24, x0, #0x334
  24:	str	x1, [x0, #800]
  28:	cbz	x21, 3c <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x3c>
  2c:	ldr	x0, [x21, #8]
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x21
  38:	bl	0 <_ZdlPv>
  3c:	mov	w0, #0x20                  	// #32
  40:	bl	0 <_Znwm>
  44:	movi	v0.2d, #0x0
  48:	mov	w1, wzr
  4c:	mov	x21, x0
  50:	stp	q0, q0, [x0]
  54:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  58:	mov	x0, x19
  5c:	str	x21, [x20, #808]
  60:	add	x21, x20, #0x8
  64:	add	x22, x19, #0x1c0
  68:	bl	0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
  6c:	ldr	x20, [x20, #800]
  70:	mov	w23, w0
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm13TargetMachine12getCodeModelEv>
  7c:	cmp	w0, #0x4
  80:	cset	w4, eq  // eq = none
  84:	and	w2, w23, #0x1
  88:	mov	x0, x21
  8c:	mov	x1, x22
  90:	mov	x3, x20
  94:	bl	0 <_ZN4llvm16MCObjectFileInfo20InitMCObjectFileInfoERKNS_6TripleEbRNS_9MCContextEb>
  98:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  9c:	ldr	d0, [x8]
  a0:	str	xzr, [x24]
  a4:	str	d0, [x24, #8]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldp	x24, x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret

00000000000000bc <_ZN4llvm24TargetLoweringObjectFileD1Ev>:
  bc:	stp	x29, x30, [sp, #-32]!
  c0:	stp	x20, x19, [sp, #16]
  c4:	mov	x29, sp
  c8:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  cc:	ldr	x20, [x0, #808]
  d0:	ldr	x8, [x8]
  d4:	mov	x19, x0
  d8:	add	x8, x8, #0x10
  dc:	str	x8, [x0]
  e0:	cbz	x20, f4 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x38>
  e4:	ldr	x0, [x20, #8]
  e8:	bl	0 <_ZdlPv>
  ec:	mov	x0, x20
  f0:	bl	0 <_ZdlPv>
  f4:	ldr	x0, [x19, #728]
  f8:	add	x8, x19, #0x2e8
  fc:	add	x19, x19, #0x8
 100:	cmp	x0, x8
 104:	b.eq	10c <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x50>  // b.none
 108:	bl	0 <_ZdlPv>
 10c:	ldr	x0, [x19, #456]
 110:	bl	0 <_ZdlPv>
 114:	ldr	x8, [x19, #448]
 118:	add	x8, x8, #0x1
 11c:	str	x8, [x19, #448]
 120:	ldp	x20, x19, [sp, #16]
 124:	ldp	x29, x30, [sp], #32
 128:	ret

000000000000012c <_ZN4llvm24TargetLoweringObjectFileD0Ev>:
 12c:	brk	#0x1

0000000000000130 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE>:
 130:	sub	sp, sp, #0xb0
 134:	stp	x29, x30, [sp, #112]
 138:	stp	x24, x23, [sp, #128]
 13c:	stp	x22, x21, [sp, #144]
 140:	stp	x20, x19, [sp, #160]
 144:	add	x29, sp, #0x70
 148:	cbz	x3, 210 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xe0>
 14c:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 150:	ldr	d0, [x8]
 154:	add	x8, sp, #0x20
 158:	add	x24, x8, #0x10
 15c:	str	x24, [sp, #32]
 160:	str	d0, [sp, #40]
 164:	mov	x19, x0
 168:	ldr	x0, [x1, #40]
 16c:	mov	x22, x4
 170:	mov	x21, x3
 174:	mov	x20, x2
 178:	mov	x23, x1
 17c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 180:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 184:	mov	x8, x0
 188:	add	x2, x0, x1
 18c:	add	x0, sp, #0x20
 190:	mov	x1, x8
 194:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 198:	ldr	x3, [x19, #808]
 19c:	add	x1, sp, #0x20
 1a0:	mov	x0, x22
 1a4:	mov	x2, x23
 1a8:	mov	w4, wzr
 1ac:	bl	0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 1b0:	add	x2, x20, x21
 1b4:	add	x0, sp, #0x20
 1b8:	mov	x1, x20
 1bc:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1c0:	ldr	x19, [x19, #800]
 1c4:	add	x0, sp, #0x8
 1c8:	add	x1, sp, #0x20
 1cc:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1d0:	add	x1, sp, #0x8
 1d4:	mov	x0, x19
 1d8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 1dc:	ldr	x8, [sp, #32]
 1e0:	mov	x19, x0
 1e4:	cmp	x8, x24
 1e8:	b.eq	1f4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xc4>  // b.none
 1ec:	mov	x0, x8
 1f0:	bl	0 <free>
 1f4:	mov	x0, x19
 1f8:	ldp	x20, x19, [sp, #160]
 1fc:	ldp	x22, x21, [sp, #144]
 200:	ldp	x24, x23, [sp, #128]
 204:	ldp	x29, x30, [sp, #112]
 208:	add	sp, sp, #0xb0
 20c:	ret
 210:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 214:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 218:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 21c:	add	x0, x0, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x3, x3, #0x0
 228:	mov	w2, #0x76                  	// #118
 22c:	bl	0 <__assert_fail>

0000000000000230 <_ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueERKNS_13TargetMachineEPNS_17MachineModuleInfoE>:
 230:	mov	x0, x2
 234:	b	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>

0000000000000238 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>:
 238:	ret

000000000000023c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE>:
 23c:	stp	x29, x30, [sp, #-64]!
 240:	str	x23, [sp, #16]
 244:	stp	x22, x21, [sp, #32]
 248:	stp	x20, x19, [sp, #48]
 24c:	mov	x29, sp
 250:	mov	x21, x1
 254:	mov	x19, x0
 258:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 25c:	tbnz	w0, #0, 4b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x278>
 260:	ldr	w9, [x19, #32]
 264:	and	w8, w9, #0xf
 268:	cmp	w8, #0x1
 26c:	b.eq	4b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x278>  // b.none
 270:	ldrb	w10, [x19, #16]
 274:	cbz	w10, 2a4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x68>
 278:	cmp	w10, #0x3
 27c:	b.ne	4d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x298>  // b.any
 280:	tst	w9, #0x1c00
 284:	b.eq	2b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x78>  // b.none
 288:	mov	x0, x19
 28c:	bl	5b0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>
 290:	tbz	w0, #0, 2ac <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x70>
 294:	ldrb	w8, [x21, #776]
 298:	tbnz	w8, #7, 2ac <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x70>
 29c:	mov	w0, #0xb                   	// #11
 2a0:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 2a4:	mov	w0, #0x1                   	// #1
 2a8:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 2ac:	mov	w0, #0xc                   	// #12
 2b0:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 2b4:	cmp	w8, #0xa
 2b8:	b.ne	2c4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x88>  // b.any
 2bc:	mov	w0, #0x10                  	// #16
 2c0:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 2c4:	mov	x0, x19
 2c8:	bl	5b0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>
 2cc:	tbz	w0, #0, 2f4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xb8>
 2d0:	ldrb	w8, [x21, #776]
 2d4:	tbnz	w8, #7, 2f4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xb8>
 2d8:	ldr	w8, [x19, #32]
 2dc:	and	w8, w8, #0xf
 2e0:	sub	w9, w8, #0x7
 2e4:	cmp	w9, #0x2
 2e8:	b.cs	3cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x190>  // b.hs, b.nlast
 2ec:	mov	w0, #0xe                   	// #14
 2f0:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 2f4:	ldrb	w8, [x19, #80]
 2f8:	tbnz	w8, #0, 304 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xc8>
 2fc:	mov	w0, #0x11                  	// #17
 300:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 304:	mov	x0, x19
 308:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 30c:	tbnz	w0, #0, 4f4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b8>
 310:	ldur	x20, [x19, #-24]
 314:	mov	x0, x20
 318:	bl	0 <_ZNK4llvm8Constant15needsRelocationEv>
 31c:	tbz	w0, #0, 340 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x104>
 320:	mov	x0, x21
 324:	bl	0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 328:	cmp	w0, #0x6
 32c:	b.cs	3e0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1a4>  // b.hs, b.nlast
 330:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 334:	add	x8, x8, #0x0
 338:	ldr	x0, [x8, w0, sxtw #3]
 33c:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 340:	ldr	w8, [x19, #32]
 344:	and	w8, w8, #0xc0
 348:	cmp	w8, #0x80
 34c:	b.ne	440 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x204>  // b.any
 350:	ldr	x8, [x20]
 354:	cbz	x8, 514 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2d8>
 358:	ldrb	w9, [x8, #8]
 35c:	cmp	w9, #0xe
 360:	b.ne	408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>  // b.any
 364:	ldr	x23, [x8, #24]
 368:	cbz	x23, 550 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x314>
 36c:	ldr	w9, [x23, #8]
 370:	and	w10, w9, #0xff
 374:	cmp	w10, #0xb
 378:	b.ne	408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>  // b.any
 37c:	lsr	w9, w9, #8
 380:	cmp	w9, #0x20
 384:	b.hi	408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>  // b.pmore
 388:	mov	w10, #0x1                   	// #1
 38c:	lsl	x9, x10, x9
 390:	mov	x10, #0x100                 	// #256
 394:	movk	x10, #0x1, lsl #16
 398:	movk	x10, #0x1, lsl #32
 39c:	tst	x9, x10
 3a0:	b.eq	408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>  // b.none
 3a4:	ldrb	w9, [x20, #16]
 3a8:	sub	w10, w9, #0xb
 3ac:	cmp	w10, #0x1
 3b0:	b.ls	3e8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1ac>  // b.plast
 3b4:	cmp	w9, #0xa
 3b8:	b.ne	408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>  // b.any
 3bc:	ldr	x8, [x8, #32]
 3c0:	cmp	x8, #0x1
 3c4:	b.ne	408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>  // b.any
 3c8:	b	47c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x240>
 3cc:	cmp	w8, #0x0
 3d0:	mov	w8, #0xd                   	// #13
 3d4:	mov	w9, #0xf                   	// #15
 3d8:	csel	x0, x9, x8, eq  // eq = none
 3dc:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 3e0:	mov	w0, #0x12                  	// #18
 3e4:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 3e8:	mov	x0, x20
 3ec:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
 3f0:	cbz	w0, 570 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x334>
 3f4:	sub	w21, w0, #0x1
 3f8:	mov	x0, x20
 3fc:	mov	w1, w21
 400:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 404:	cbz	x0, 458 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x21c>
 408:	ldr	x0, [x19, #40]
 40c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 410:	ldr	x1, [x20]
 414:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 418:	tst	w1, #0xff
 41c:	b.ne	530 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2f4>  // b.any
 420:	sub	x8, x0, #0x4
 424:	ror	x8, x8, #2
 428:	cmp	x8, #0x8
 42c:	b.cs	440 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x204>  // b.hs, b.nlast
 430:	adrp	x9, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 434:	add	x9, x9, #0x0
 438:	ldr	x0, [x9, x8, lsl #3]
 43c:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 440:	mov	w0, #0x3                   	// #3
 444:	ldp	x20, x19, [sp, #48]
 448:	ldp	x22, x21, [sp, #32]
 44c:	ldr	x23, [sp, #16]
 450:	ldp	x29, x30, [sp], #64
 454:	ret
 458:	cbz	w21, 47c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x240>
 45c:	mov	w22, wzr
 460:	mov	x0, x20
 464:	mov	w1, w22
 468:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 46c:	cbz	x0, 408 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1cc>
 470:	add	w22, w22, #0x1
 474:	cmp	w21, w22
 478:	b.ne	460 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x224>  // b.any
 47c:	ldr	w8, [x23, #8]
 480:	lsr	w8, w8, #8
 484:	cmp	w8, #0x8
 488:	b.eq	4ac <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>  // b.none
 48c:	cmp	w8, #0x10
 490:	b.eq	4a4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x268>  // b.none
 494:	cmp	w8, #0x20
 498:	b.ne	590 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x354>  // b.any
 49c:	mov	w0, #0x6                   	// #6
 4a0:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 4a4:	mov	w0, #0x5                   	// #5
 4a8:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 4ac:	mov	w0, #0x4                   	// #4
 4b0:	b	444 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x208>
 4b4:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4b8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4bc:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4c0:	add	x0, x0, #0x0
 4c4:	add	x1, x1, #0x0
 4c8:	add	x3, x3, #0x0
 4cc:	mov	w2, #0x92                  	// #146
 4d0:	bl	0 <__assert_fail>
 4d4:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4d8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4dc:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4e0:	add	x0, x0, #0x0
 4e4:	add	x1, x1, #0x0
 4e8:	add	x3, x3, #0x0
 4ec:	mov	w2, #0x108                 	// #264
 4f0:	bl	0 <__assert_fail>
 4f4:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4f8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 4fc:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 500:	add	x0, x0, #0x0
 504:	add	x1, x1, #0x0
 508:	add	x3, x3, #0x0
 50c:	mov	w2, #0x89                  	// #137
 510:	bl	0 <__assert_fail>
 514:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 518:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 51c:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 520:	add	x0, x0, #0x0
 524:	add	x1, x1, #0x0
 528:	add	x3, x3, #0x0
 52c:	b	568 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x32c>
 530:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 534:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 538:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 53c:	add	x0, x0, #0x0
 540:	add	x1, x1, #0x0
 544:	add	x3, x3, #0x0
 548:	mov	w2, #0x7d                  	// #125
 54c:	bl	0 <__assert_fail>
 550:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 554:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 558:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 55c:	add	x0, x0, #0x0
 560:	add	x1, x1, #0x0
 564:	add	x3, x3, #0x0
 568:	mov	w2, #0x69                  	// #105
 56c:	bl	0 <__assert_fail>
 570:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 574:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 578:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 57c:	add	x0, x0, #0x0
 580:	add	x1, x1, #0x0
 584:	add	x3, x3, #0x0
 588:	mov	w2, #0x61                  	// #97
 58c:	bl	0 <__assert_fail>
 590:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 594:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 598:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 59c:	add	x0, x0, #0x0
 5a0:	add	x1, x1, #0x0
 5a4:	add	x3, x3, #0x0
 5a8:	mov	w2, #0xcb                  	// #203
 5ac:	bl	0 <__assert_fail>

00000000000005b0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>:
 5b0:	stp	x29, x30, [sp, #-32]!
 5b4:	str	x19, [sp, #16]
 5b8:	mov	x29, sp
 5bc:	mov	x19, x0
 5c0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 5c4:	tbnz	w0, #0, 5fc <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x4c>
 5c8:	ldur	x0, [x19, #-24]
 5cc:	bl	948 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 5d0:	tbz	w0, #0, 5ec <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x3c>
 5d4:	ldrb	w8, [x19, #80]
 5d8:	tbnz	w8, #0, 5ec <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x3c>
 5dc:	ldrb	w8, [x19, #34]
 5e0:	tst	w8, #0x40
 5e4:	cset	w0, eq  // eq = none
 5e8:	b	5f0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x40>
 5ec:	mov	w0, wzr
 5f0:	ldr	x19, [sp, #16]
 5f4:	ldp	x29, x30, [sp], #32
 5f8:	ret
 5fc:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 600:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 604:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 608:	add	x0, x0, #0x0
 60c:	add	x1, x1, #0x0
 610:	add	x3, x3, #0x0
 614:	mov	w2, #0x89                  	// #137
 618:	bl	0 <__assert_fail>

000000000000061c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE>:
 61c:	stp	x29, x30, [sp, #-64]!
 620:	str	x23, [sp, #16]
 624:	stp	x22, x21, [sp, #32]
 628:	stp	x20, x19, [sp, #48]
 62c:	mov	x29, sp
 630:	ldrb	w8, [x1, #34]
 634:	mov	x19, x3
 638:	mov	x22, x2
 63c:	mov	x20, x1
 640:	mov	x21, x0
 644:	tbnz	w8, #6, 71c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x100>
 648:	ldrb	w8, [x20, #16]
 64c:	cmp	w8, #0x3
 650:	b.ne	6f4 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xd8>  // b.any
 654:	ldr	x8, [x20, #72]
 658:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 65c:	add	x1, x1, #0x0
 660:	add	x0, x29, #0x18
 664:	mov	w2, #0xb                   	// #11
 668:	str	x8, [x29, #24]
 66c:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 670:	sub	w8, w22, #0xd
 674:	and	w8, w8, #0xff
 678:	cmp	w8, #0x2
 67c:	b.hi	684 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x68>  // b.pmore
 680:	tbnz	w0, #0, 710 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 684:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 688:	add	x1, x1, #0x0
 68c:	add	x0, x29, #0x18
 690:	mov	w2, #0xc                   	// #12
 694:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 698:	and	w23, w22, #0xff
 69c:	cmp	w23, #0x11
 6a0:	b.ne	6a8 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x8c>  // b.any
 6a4:	tbnz	w0, #0, 710 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 6a8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6ac:	add	x1, x1, #0x0
 6b0:	add	x0, x29, #0x18
 6b4:	mov	w2, #0xd                   	// #13
 6b8:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 6bc:	cmp	w23, #0x12
 6c0:	b.ne	6c8 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xac>  // b.any
 6c4:	tbnz	w0, #0, 710 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 6c8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6cc:	add	x1, x1, #0x0
 6d0:	add	x0, x29, #0x18
 6d4:	mov	w2, #0xe                   	// #14
 6d8:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 6dc:	sub	w8, w22, #0x3
 6e0:	and	w8, w8, #0xff
 6e4:	cmp	w8, #0x7
 6e8:	b.hi	6f0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xd4>  // b.pmore
 6ec:	tbnz	w0, #0, 710 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 6f0:	ldrb	w8, [x20, #16]
 6f4:	cbnz	w8, 748 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x12c>
 6f8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6fc:	add	x0, x20, #0x70
 700:	add	x1, x1, #0x0
 704:	mov	w2, #0x15                  	// #21
 708:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 70c:	tbz	w0, #0, 748 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x12c>
 710:	ldr	x8, [x21]
 714:	ldr	x8, [x8, #80]
 718:	b	750 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>
 71c:	ldr	x8, [x21]
 720:	and	x2, x22, #0xffffffff
 724:	mov	x0, x21
 728:	mov	x1, x20
 72c:	ldr	x4, [x8, #80]
 730:	mov	x3, x19
 734:	ldp	x20, x19, [sp, #48]
 738:	ldp	x22, x21, [sp, #32]
 73c:	ldr	x23, [sp, #16]
 740:	ldp	x29, x30, [sp], #64
 744:	br	x4
 748:	ldr	x8, [x21]
 74c:	ldr	x8, [x8, #168]
 750:	and	x2, x22, #0xffffffff
 754:	mov	x0, x21
 758:	mov	x1, x20
 75c:	mov	x3, x19
 760:	blr	x8
 764:	ldp	x20, x19, [sp, #48]
 768:	ldp	x22, x21, [sp, #32]
 76c:	ldr	x23, [sp, #16]
 770:	ldp	x29, x30, [sp], #64
 774:	ret

0000000000000778 <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE>:
 778:	stp	x29, x30, [sp, #-32]!
 77c:	str	x19, [sp, #16]
 780:	mov	x29, sp
 784:	str	wzr, [x29, #28]
 788:	ldr	x8, [x1, #40]
 78c:	mov	x19, x0
 790:	mov	x0, x8
 794:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 798:	ldr	x8, [x19]
 79c:	mov	x1, x0
 7a0:	add	x4, x29, #0x1c
 7a4:	mov	w2, #0x3                   	// #3
 7a8:	ldr	x8, [x8, #48]
 7ac:	mov	x0, x19
 7b0:	mov	x3, xzr
 7b4:	blr	x8
 7b8:	ldr	x19, [sp, #16]
 7bc:	ldp	x29, x30, [sp], #32
 7c0:	ret

00000000000007c4 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE>:
 7c4:	tbz	w1, #0, 7d0 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0xc>
 7c8:	mov	w0, #0x1                   	// #1
 7cc:	ret
 7d0:	ldr	w8, [x2, #32]
 7d4:	and	w8, w8, #0xf
 7d8:	sub	w8, w8, #0x2
 7dc:	cmp	w8, #0x8
 7e0:	b.hi	7f4 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x30>  // b.pmore
 7e4:	mov	w9, #0x18f                 	// #399
 7e8:	lsr	w8, w9, w8
 7ec:	and	w0, w8, #0x1
 7f0:	ret
 7f4:	mov	w0, wzr
 7f8:	ret

00000000000007fc <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj>:
 7fc:	sub	w8, w2, #0x3
 800:	and	w8, w8, #0xff
 804:	cmp	w8, #0x7
 808:	mov	x8, x0
 80c:	b.hi	81c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x20>  // b.pmore
 810:	ldr	x0, [x8, #48]
 814:	cbz	x0, 81c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x20>
 818:	ret
 81c:	ldr	x0, [x8, #32]
 820:	ret

0000000000000824 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE>:
 824:	stp	x29, x30, [sp, #-48]!
 828:	str	x21, [sp, #16]
 82c:	stp	x20, x19, [sp, #32]
 830:	mov	x29, sp
 834:	mov	x21, x0
 838:	mov	x0, x3
 83c:	mov	x19, x5
 840:	mov	w20, w2
 844:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
 848:	ldr	x2, [x21, #800]
 84c:	mov	w1, wzr
 850:	mov	x3, xzr
 854:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 858:	mov	x1, x0
 85c:	mov	x0, x21
 860:	mov	w2, w20
 864:	mov	x3, x19
 868:	ldp	x20, x19, [sp, #32]
 86c:	ldr	x21, [sp, #16]
 870:	ldp	x29, x30, [sp], #48
 874:	b	878 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>

0000000000000878 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>:
 878:	stp	x29, x30, [sp, #-48]!
 87c:	stp	x22, x21, [sp, #16]
 880:	stp	x20, x19, [sp, #32]
 884:	mov	x29, sp
 888:	mov	x19, x1
 88c:	ands	w8, w2, #0x70
 890:	b.eq	904 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x8c>  // b.none
 894:	cmp	w8, #0x10
 898:	b.ne	918 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0xa0>  // b.any
 89c:	mov	x20, x0
 8a0:	ldr	x0, [x0, #800]
 8a4:	mov	w1, #0x1                   	// #1
 8a8:	mov	x21, x3
 8ac:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 8b0:	ldr	x8, [x21]
 8b4:	mov	x22, x0
 8b8:	mov	x0, x21
 8bc:	mov	x1, x22
 8c0:	ldr	x8, [x8, #176]
 8c4:	mov	x2, xzr
 8c8:	blr	x8
 8cc:	ldr	x2, [x20, #800]
 8d0:	mov	x0, x22
 8d4:	mov	w1, wzr
 8d8:	mov	x3, xzr
 8dc:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 8e0:	ldr	x3, [x20, #800]
 8e4:	mov	x1, x19
 8e8:	ldp	x20, x19, [sp, #32]
 8ec:	ldp	x22, x21, [sp, #16]
 8f0:	mov	x2, x0
 8f4:	mov	w0, #0x11                  	// #17
 8f8:	mov	x4, xzr
 8fc:	ldp	x29, x30, [sp], #48
 900:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 904:	mov	x0, x19
 908:	ldp	x20, x19, [sp, #32]
 90c:	ldp	x22, x21, [sp, #16]
 910:	ldp	x29, x30, [sp], #48
 914:	ret
 918:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 91c:	add	x0, x0, #0x0
 920:	mov	w1, #0x1                   	// #1
 924:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000928 <_ZNK4llvm24TargetLoweringObjectFile25getDebugThreadLocalSymbolEPKNS_8MCSymbolE>:
 928:	ldr	x2, [x0, #800]
 92c:	mov	x0, x1
 930:	mov	w1, wzr
 934:	mov	x3, xzr
 938:	b	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>

000000000000093c <_ZNK4llvm24TargetLoweringObjectFile17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERKNS_13TargetMachineE>:
 93c:	ldr	x0, [x0, #808]
 940:	mov	w3, wzr
 944:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>

0000000000000948 <_ZL13isNullOrUndefPKN4llvm8ConstantE>:
 948:	stp	x29, x30, [sp, #-32]!
 94c:	stp	x20, x19, [sp, #16]
 950:	mov	x29, sp
 954:	mov	x19, x0
 958:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
 95c:	tbnz	w0, #0, 970 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x28>
 960:	cbz	x19, a28 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xe0>
 964:	ldrb	w8, [x19, #16]
 968:	cmp	w8, #0x9
 96c:	b.ne	980 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x38>  // b.any
 970:	mov	w0, #0x1                   	// #1
 974:	ldp	x20, x19, [sp, #16]
 978:	ldp	x29, x30, [sp], #32
 97c:	ret
 980:	sub	w8, w8, #0x6
 984:	cmp	w8, #0x2
 988:	b.hi	9e4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x9c>  // b.pmore
 98c:	ldr	w8, [x19, #20]
 990:	tbnz	w8, #30, 9a8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x60>
 994:	and	w8, w8, #0xfffffff
 998:	mov	w9, #0x18                  	// #24
 99c:	mneg	x9, x8, x9
 9a0:	add	x19, x19, x9
 9a4:	b	9b0 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x68>
 9a8:	ldur	x19, [x19, #-8]
 9ac:	and	x8, x8, #0xfffffff
 9b0:	mov	w9, #0x18                  	// #24
 9b4:	madd	x20, x8, x9, x19
 9b8:	cmp	x20, x19
 9bc:	b.eq	970 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x28>  // b.none
 9c0:	ldr	x0, [x19]
 9c4:	cbz	x0, 9ec <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xa4>
 9c8:	ldrb	w8, [x0, #16]
 9cc:	cmp	w8, #0x11
 9d0:	b.cs	a08 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xc0>  // b.hs, b.nlast
 9d4:	bl	948 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 9d8:	tbz	w0, #0, 9e4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x9c>
 9dc:	add	x19, x19, #0x18
 9e0:	b	9b8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x70>
 9e4:	mov	w0, wzr
 9e8:	b	974 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x2c>
 9ec:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 9f0:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 9f4:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 9f8:	add	x0, x0, #0x0
 9fc:	add	x1, x1, #0x0
 a00:	add	x3, x3, #0x0
 a04:	b	a40 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xf8>
 a08:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a0c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a10:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a14:	add	x0, x0, #0x0
 a18:	add	x1, x1, #0x0
 a1c:	add	x3, x3, #0x0
 a20:	mov	w2, #0x108                 	// #264
 a24:	bl	0 <__assert_fail>
 a28:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a2c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a30:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a34:	add	x0, x0, #0x0
 a38:	add	x1, x1, #0x0
 a3c:	add	x3, x3, #0x0
 a40:	mov	w2, #0x69                  	// #105
 a44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv:

0000000000000000 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	cmp	w8, #0x5
  10:	b.hi	68 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv+0x68>  // b.pmore
  14:	adrp	x9, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  18:	add	x9, x9, #0x0
  1c:	adr	x10, 38 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv+0x38>
  20:	ldrb	w11, [x9, x8]
  24:	add	x10, x10, x11, lsl #2
  28:	adrp	x0, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  2c:	mov	x1, xzr
  30:	add	x0, x0, #0x0
  34:	br	x10
  38:	adrp	x0, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  3c:	add	x0, x0, #0x0
  40:	mov	w1, #0x2                   	// #2
  44:	b	60 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv+0x60>
  48:	adrp	x0, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  4c:	add	x0, x0, #0x0
  50:	b	5c <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv+0x5c>
  54:	adrp	x0, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  58:	add	x0, x0, #0x0
  5c:	mov	w1, #0x1                   	// #1
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  6c:	adrp	x1, 0 <_ZNK4llvm10DataLayout22getPrivateGlobalPrefixEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	mov	w2, #0x14d                 	// #333
  7c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x106                 	// #262
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x128                 	// #296
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x19, x0
  20:	mov	x20, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 60 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x60>
  34:	mov	w8, w0
  38:	tst	w20, #0xff
  3c:	add	x9, x19, x8
  40:	ldp	x20, x19, [sp, #32]
  44:	ldp	x22, x21, [sp, #16]
  48:	sub	x9, x9, #0x1
  4c:	udiv	x9, x9, x8
  50:	mul	x0, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  64:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0xc7                  	// #199
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #840]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #848]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  14:	str	w0, [x19, #24]
  18:	cbz	w0, 3c <_ZN4llvm8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj+0x3c>
  1c:	mov	w8, w0
  20:	lsl	x0, x8, #4
  24:	bl	0 <_Znwm>
  28:	str	x0, [x19, #8]
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4initEj>
  3c:	stp	xzr, xzr, [x19, #8]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj>:
   0:	cbz	w1, 40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E31getMinBucketToReserveForEntriesEj+0x40>
   4:	mov	w9, #0xaaab                	// #43691
   8:	lsl	w8, w1, #2
   c:	movk	w9, #0xaaaa, lsl #16
  10:	umull	x8, w8, w9
  14:	lsr	x8, x8, #33
  18:	add	w8, w8, #0x1
  1c:	orr	x8, x8, x8, lsr #1
  20:	orr	x8, x8, x8, lsr #2
  24:	orr	x8, x8, x8, lsr #4
  28:	orr	x8, x8, x8, lsr #8
  2c:	orr	x8, x8, x8, lsr #16
  30:	lsr	x9, x8, #32
  34:	orr	w8, w9, w8
  38:	add	w0, w8, #0x1
  3c:	ret
  40:	mov	w0, wzr
  44:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x40>  // b.any
  1c:	cbz	w9, 38 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x38>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x9, x9, #4
  28:	mov	x10, #0xfffffffffffffff8    	// #-8
  2c:	subs	x9, x9, #0x10
  30:	str	x10, [x8], #16
  34:	b.ne	2c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv+0x2c>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  44:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  48:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E9initEmptyEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x15c                 	// #348
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm10DataLayout16getTypeStoreSizeEPNS_4TypeE>
   c:	add	x8, x0, #0x7
  10:	tst	w1, #0xff
  14:	lsr	x0, x8, #3
  18:	cset	w1, ne  // ne = any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	sub	x20, x2, x1
  18:	mov	x22, x2
  1c:	mov	x21, x1
  20:	sub	x9, x9, x8
  24:	mov	x19, x0
  28:	cmp	x20, x9
  2c:	b.ls	44 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x44>  // b.plast
  30:	add	x2, x20, x8
  34:	add	x1, x19, #0x10
  38:	mov	w3, #0x1                   	// #1
  3c:	mov	x0, x19
  40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  44:	cmp	x21, x22
  48:	b.eq	64 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x64>  // b.none
  4c:	ldr	x8, [x19]
  50:	ldr	w9, [x19, #8]
  54:	mov	x1, x21
  58:	mov	x2, x20
  5c:	add	x0, x8, x9
  60:	bl	0 <memcpy>
  64:	ldp	w8, w9, [x19, #8]
  68:	add	x8, x20, x8
  6c:	cmp	x8, x9
  70:	b.hi	88 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_+0x88>  // b.pmore
  74:	str	w8, [x19, #8]
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldp	x22, x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  8c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  90:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6appendIPKcvEEvT_S5_>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x43                  	// #67
  a4:	bl	0 <__assert_fail>

TargetMachine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  1c:	ldp	x25, x24, [x29, #88]
  20:	ldr	x20, [x29, #80]
  24:	ldr	x8, [x8]
  28:	mov	x19, x0
  2c:	mov	x22, x6
  30:	mov	x21, x5
  34:	add	x8, x8, #0x10
  38:	stp	x8, x1, [x0], #16
  3c:	mov	x1, x2
  40:	mov	x2, x3
  44:	mov	x23, x4
  48:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  4c:	add	x8, x19, #0x1d0
  50:	str	x8, [x19, #448]
  54:	ldp	x1, x8, [x23]
  58:	add	x0, x19, #0x1c0
  5c:	add	x2, x1, x8
  60:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  64:	ldr	q0, [x23, #32]
  68:	ldr	x8, [x23, #48]
  6c:	add	x9, x19, #0x208
  70:	str	q0, [x19, #480]
  74:	stp	x8, x9, [x19, #496]
  78:	cbz	x21, 90 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x90>
  7c:	add	x0, x19, #0x1f8
  80:	add	x2, x21, x22
  84:	mov	x1, x21
  88:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  8c:	b	98 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x98>
  90:	str	xzr, [x19, #512]
  94:	strb	wzr, [x19, #520]
  98:	add	x8, x19, #0x228
  9c:	str	x8, [x19, #536]
  a0:	cbz	x20, b8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xb8>
  a4:	add	x0, x19, #0x218
  a8:	add	x2, x20, x25
  ac:	mov	x1, x20
  b0:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  b4:	b	c0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xc0>
  b8:	str	xzr, [x19, #544]
  bc:	strb	wzr, [x19, #552]
  c0:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  c4:	ldr	d0, [x8]
  c8:	mov	w9, #0x2                   	// #2
  cc:	add	x8, x19, #0x248
  d0:	movi	v1.2d, #0x0
  d4:	str	w9, [x19, #576]
  d8:	str	d0, [x19, #568]
  dc:	stp	q1, q1, [x8]
  e0:	ldrb	w8, [x19, #616]
  e4:	add	x9, x19, #0x270
  e8:	add	x10, x19, #0x2c0
  ec:	add	x0, x19, #0x2b0
  f0:	and	w8, w8, #0xfc
  f4:	strb	w8, [x19, #616]
  f8:	ldr	x8, [x24, #48]
  fc:	ldp	q1, q0, [x24, #16]
 100:	ldr	q2, [x24]
 104:	str	x8, [x19, #672]
 108:	stp	q1, q0, [x19, #640]
 10c:	str	q2, [x19, #624]
 110:	ldr	x8, [x24, #56]
 114:	str	x8, [x9, #56]
 118:	str	x10, [x19, #688]
 11c:	ldp	x1, x8, [x24, #64]
 120:	add	x2, x1, x8
 124:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 128:	add	x8, x19, #0x2e0
 12c:	str	x8, [x19, #720]
 130:	ldp	x1, x8, [x24, #96]
 134:	add	x0, x19, #0x2d0
 138:	add	x2, x1, x8
 13c:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 140:	add	x20, x24, #0x80
 144:	add	x0, x19, #0x2f0
 148:	mov	x1, x20
 14c:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 150:	ldp	q2, q0, [x24, #16]
 154:	ldr	x8, [x24, #48]
 158:	ldr	q1, [x24]
 15c:	add	x21, x19, #0x308
 160:	stp	q2, q0, [x21, #16]
 164:	str	x8, [x21, #48]
 168:	str	q1, [x21]
 16c:	ldr	x8, [x24, #56]
 170:	add	x9, x21, #0x50
 174:	mov	x0, x21
 178:	str	x8, [x19, #832]
 17c:	str	x9, [x0, #64]!
 180:	ldp	x1, x8, [x24, #64]
 184:	add	x2, x1, x8
 188:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 18c:	add	x8, x21, #0x70
 190:	str	x8, [x21, #96]!
 194:	ldp	x1, x8, [x24, #96]
 198:	mov	x0, x21
 19c:	add	x2, x1, x8
 1a0:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 1a4:	add	x0, x21, #0x20
 1a8:	mov	x1, x20
 1ac:	ldp	x20, x19, [sp, #64]
 1b0:	ldp	x22, x21, [sp, #48]
 1b4:	ldp	x24, x23, [sp, #32]
 1b8:	ldr	x25, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #80
 1c0:	b	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>

00000000000001c4 <_ZN4llvm13TargetMachineD1Ev>:
 1c4:	stp	x29, x30, [sp, #-32]!
 1c8:	str	x19, [sp, #16]
 1cc:	mov	x29, sp
 1d0:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 1d4:	ldr	x8, [x8]
 1d8:	mov	x19, x0
 1dc:	add	x8, x8, #0x10
 1e0:	str	x8, [x0]
 1e4:	add	x0, x0, #0x388
 1e8:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 1ec:	ldr	x0, [x19, #872]
 1f0:	add	x8, x19, #0x378
 1f4:	cmp	x0, x8
 1f8:	b.eq	200 <_ZN4llvm13TargetMachineD1Ev+0x3c>  // b.none
 1fc:	bl	0 <_ZdlPv>
 200:	ldr	x0, [x19, #840]
 204:	add	x8, x19, #0x358
 208:	cmp	x0, x8
 20c:	b.eq	214 <_ZN4llvm13TargetMachineD1Ev+0x50>  // b.none
 210:	bl	0 <_ZdlPv>
 214:	add	x0, x19, #0x2f0
 218:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 21c:	ldr	x0, [x19, #720]
 220:	add	x8, x19, #0x2e0
 224:	cmp	x0, x8
 228:	b.eq	230 <_ZN4llvm13TargetMachineD1Ev+0x6c>  // b.none
 22c:	bl	0 <_ZdlPv>
 230:	ldr	x0, [x19, #688]
 234:	add	x8, x19, #0x2c0
 238:	cmp	x0, x8
 23c:	b.eq	244 <_ZN4llvm13TargetMachineD1Ev+0x80>  // b.none
 240:	bl	0 <_ZdlPv>
 244:	ldr	x0, [x19, #608]
 248:	cbz	x0, 258 <_ZN4llvm13TargetMachineD1Ev+0x94>
 24c:	ldr	x8, [x0]
 250:	ldr	x8, [x8, #8]
 254:	blr	x8
 258:	ldr	x0, [x19, #600]
 25c:	str	xzr, [x19, #608]
 260:	cbz	x0, 268 <_ZN4llvm13TargetMachineD1Ev+0xa4>
 264:	bl	0 <_ZdlPv>
 268:	add	x0, x19, #0x250
 26c:	str	xzr, [x19, #600]
 270:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 274:	ldr	x0, [x19, #584]
 278:	cbz	x0, 288 <_ZN4llvm13TargetMachineD1Ev+0xc4>
 27c:	ldr	x8, [x0]
 280:	ldr	x8, [x8, #8]
 284:	blr	x8
 288:	ldr	x0, [x19, #536]
 28c:	add	x8, x19, #0x228
 290:	str	xzr, [x19, #584]
 294:	cmp	x0, x8
 298:	b.eq	2a0 <_ZN4llvm13TargetMachineD1Ev+0xdc>  // b.none
 29c:	bl	0 <_ZdlPv>
 2a0:	ldr	x0, [x19, #504]
 2a4:	add	x8, x19, #0x208
 2a8:	cmp	x0, x8
 2ac:	b.eq	2b4 <_ZN4llvm13TargetMachineD1Ev+0xf0>  // b.none
 2b0:	bl	0 <_ZdlPv>
 2b4:	ldr	x0, [x19, #448]
 2b8:	add	x8, x19, #0x1d0
 2bc:	cmp	x0, x8
 2c0:	b.eq	2c8 <_ZN4llvm13TargetMachineD1Ev+0x104>  // b.none
 2c4:	bl	0 <_ZdlPv>
 2c8:	add	x0, x19, #0x10
 2cc:	ldr	x19, [sp, #16]
 2d0:	ldp	x29, x30, [sp], #32
 2d4:	b	0 <_ZN4llvm10DataLayoutD1Ev>

00000000000002d8 <_ZN4llvm13TargetMachineD0Ev>:
 2d8:	stp	x29, x30, [sp, #-32]!
 2dc:	str	x19, [sp, #16]
 2e0:	mov	x29, sp
 2e4:	mov	x19, x0
 2e8:	bl	1c4 <_ZN4llvm13TargetMachineD1Ev>
 2ec:	mov	x0, x19
 2f0:	ldr	x19, [sp, #16]
 2f4:	ldp	x29, x30, [sp], #32
 2f8:	b	0 <_ZdlPv>

00000000000002fc <_ZNK4llvm13TargetMachine21isPositionIndependentEv>:
 2fc:	ldr	w8, [x0, #568]
 300:	cmp	w8, #0x1
 304:	cset	w0, eq  // eq = none
 308:	ret

000000000000030c <_ZNK4llvm13TargetMachine18getRelocationModelEv>:
 30c:	ldr	w0, [x0, #568]
 310:	ret

0000000000000314 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE>:
 314:	stp	x29, x30, [sp, #-48]!
 318:	str	x21, [sp, #16]
 31c:	stp	x20, x19, [sp, #32]
 320:	mov	x29, sp
 324:	add	x20, x1, #0x70
 328:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 32c:	mov	x19, x0
 330:	mov	w21, #0x7274                	// #29300
 334:	add	x1, x1, #0x0
 338:	mov	w2, #0xe                   	// #14
 33c:	mov	x0, x20
 340:	movk	w21, #0x6575, lsl #16
 344:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 348:	tbz	w0, #0, 38c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x78>
 34c:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 350:	add	x2, x2, #0x0
 354:	mov	w1, #0xffffffff            	// #-1
 358:	mov	w3, #0xe                   	// #14
 35c:	mov	x0, x20
 360:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 364:	str	x0, [x29, #24]
 368:	add	x0, x29, #0x18
 36c:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 370:	cmp	x1, #0x4
 374:	b.ne	3a4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x90>  // b.any
 378:	ldr	w8, [x0]
 37c:	cmp	w8, w21
 380:	cset	w8, eq  // eq = none
 384:	lsl	w8, w8, #1
 388:	b	3a8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x94>
 38c:	ldrh	w8, [x19, #624]
 390:	ldrh	w9, [x19, #776]
 394:	and	w8, w8, #0x2
 398:	and	w9, w9, #0xfffffffd
 39c:	orr	w8, w9, w8
 3a0:	b	3b4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xa0>
 3a4:	mov	w8, wzr
 3a8:	ldrh	w9, [x19, #776]
 3ac:	and	w9, w9, #0xfffffffd
 3b0:	orr	w8, w8, w9
 3b4:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 3b8:	add	x1, x1, #0x0
 3bc:	mov	w2, #0xf                   	// #15
 3c0:	mov	x0, x20
 3c4:	strh	w8, [x19, #776]
 3c8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 3cc:	tbz	w0, #0, 410 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xfc>
 3d0:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 3d4:	add	x2, x2, #0x0
 3d8:	mov	w1, #0xffffffff            	// #-1
 3dc:	mov	w3, #0xf                   	// #15
 3e0:	mov	x0, x20
 3e4:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 3e8:	str	x0, [x29, #24]
 3ec:	add	x0, x29, #0x18
 3f0:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 3f4:	cmp	x1, #0x4
 3f8:	b.ne	428 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x114>  // b.any
 3fc:	ldr	w8, [x0]
 400:	cmp	w8, w21
 404:	cset	w8, eq  // eq = none
 408:	lsl	w8, w8, #2
 40c:	b	42c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x118>
 410:	ldrh	w8, [x19, #624]
 414:	ldrh	w9, [x19, #776]
 418:	and	w8, w8, #0x4
 41c:	and	w9, w9, #0xfffffffb
 420:	orr	w8, w9, w8
 424:	b	438 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x124>
 428:	mov	w8, wzr
 42c:	ldrh	w9, [x19, #776]
 430:	and	w9, w9, #0xfffffffb
 434:	orr	w8, w8, w9
 438:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 43c:	add	x1, x1, #0x0
 440:	mov	w2, #0xf                   	// #15
 444:	mov	x0, x20
 448:	strh	w8, [x19, #776]
 44c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 450:	tbz	w0, #0, 494 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x180>
 454:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 458:	add	x2, x2, #0x0
 45c:	mov	w1, #0xffffffff            	// #-1
 460:	mov	w3, #0xf                   	// #15
 464:	mov	x0, x20
 468:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 46c:	str	x0, [x29, #24]
 470:	add	x0, x29, #0x18
 474:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 478:	cmp	x1, #0x4
 47c:	b.ne	4ac <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x198>  // b.any
 480:	ldr	w8, [x0]
 484:	cmp	w8, w21
 488:	cset	w8, eq  // eq = none
 48c:	lsl	w8, w8, #3
 490:	b	4b0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x19c>
 494:	ldrh	w8, [x19, #624]
 498:	ldrh	w9, [x19, #776]
 49c:	and	w8, w8, #0x8
 4a0:	and	w9, w9, #0xfffffff7
 4a4:	orr	w8, w9, w8
 4a8:	b	4bc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1a8>
 4ac:	mov	w8, wzr
 4b0:	ldrh	w9, [x19, #776]
 4b4:	and	w9, w9, #0xfffffff7
 4b8:	orr	w8, w8, w9
 4bc:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 4c0:	add	x1, x1, #0x0
 4c4:	mov	w2, #0x17                  	// #23
 4c8:	mov	x0, x20
 4cc:	strh	w8, [x19, #776]
 4d0:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 4d4:	tbz	w0, #0, 518 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x204>
 4d8:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 4dc:	add	x2, x2, #0x0
 4e0:	mov	w1, #0xffffffff            	// #-1
 4e4:	mov	w3, #0x17                  	// #23
 4e8:	mov	x0, x20
 4ec:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 4f0:	str	x0, [x29, #24]
 4f4:	add	x0, x29, #0x18
 4f8:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 4fc:	cmp	x1, #0x4
 500:	b.ne	530 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x21c>  // b.any
 504:	ldr	w8, [x0]
 508:	cmp	w8, w21
 50c:	cset	w8, eq  // eq = none
 510:	lsl	w8, w8, #5
 514:	b	534 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x220>
 518:	ldrh	w8, [x19, #624]
 51c:	ldrh	w9, [x19, #776]
 520:	and	w8, w8, #0x20
 524:	and	w9, w9, #0xffffffdf
 528:	orr	w8, w9, w8
 52c:	b	540 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x22c>
 530:	mov	w8, wzr
 534:	ldrh	w9, [x19, #776]
 538:	and	w9, w9, #0xffffffdf
 53c:	orr	w8, w8, w9
 540:	strh	w8, [x19, #776]
 544:	ldp	x20, x19, [sp, #32]
 548:	ldr	x21, [sp, #16]
 54c:	ldp	x29, x30, [sp], #48
 550:	ret

0000000000000554 <_ZNK4llvm13TargetMachine12getCodeModelEv>:
 554:	ldr	w0, [x0, #572]
 558:	ret

000000000000055c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>:
 55c:	stp	x29, x30, [sp, #-48]!
 560:	stp	x22, x21, [sp, #16]
 564:	stp	x20, x19, [sp, #32]
 568:	mov	x29, sp
 56c:	mov	x19, x2
 570:	mov	x21, x1
 574:	mov	x20, x0
 578:	cbz	x2, 584 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x28>
 57c:	ldrb	w8, [x19, #33]
 580:	tbnz	w8, #6, 63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 584:	mov	x0, x21
 588:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
 58c:	cbnz	x19, 594 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x38>
 590:	tbnz	w0, #0, 5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 594:	ldr	w22, [x20, #568]
 598:	cbz	x19, 5b4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x58>
 59c:	ldr	w8, [x19, #32]
 5a0:	and	w8, w8, #0x300
 5a4:	cmp	w8, #0x100
 5a8:	b.ne	5b4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x58>  // b.any
 5ac:	mov	w0, wzr
 5b0:	b	640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 5b4:	ldr	w8, [x20, #492]
 5b8:	cmp	w8, #0xf
 5bc:	b.ne	604 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>  // b.any
 5c0:	ldr	w8, [x20, #496]
 5c4:	cmp	w8, #0x1
 5c8:	b.ne	604 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>  // b.any
 5cc:	cbz	x19, 604 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>
 5d0:	ldr	w8, [x20, #500]
 5d4:	cmp	w8, #0x1
 5d8:	b.ne	604 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>  // b.any
 5dc:	ldr	w8, [x19, #32]
 5e0:	and	w8, w8, #0xf
 5e4:	cmp	w8, #0x1
 5e8:	b.eq	5f8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x9c>  // b.none
 5ec:	mov	x0, x19
 5f0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 5f4:	tbz	w0, #0, 604 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>
 5f8:	ldrb	w8, [x19, #16]
 5fc:	cmp	w8, #0x3
 600:	b.eq	5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.none
 604:	ldr	w8, [x20, #500]
 608:	cbz	x19, 628 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xcc>
 60c:	cmp	w8, #0x1
 610:	b.ne	628 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xcc>  // b.any
 614:	ldr	w8, [x19, #32]
 618:	and	w8, w8, #0xf
 61c:	cmp	w8, #0x9
 620:	cset	w0, ne  // ne = any
 624:	b	640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 628:	cmp	w8, #0x1
 62c:	b.eq	63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.none
 630:	ldr	w9, [x20, #492]
 634:	cmp	w9, #0xf
 638:	b.ne	650 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xf4>  // b.any
 63c:	mov	w0, #0x1                   	// #1
 640:	ldp	x20, x19, [sp, #32]
 644:	ldp	x22, x21, [sp, #16]
 648:	ldp	x29, x30, [sp], #48
 64c:	ret
 650:	cbz	x19, 678 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x11c>
 654:	ldr	w10, [x20, #568]
 658:	ldr	w9, [x19, #32]
 65c:	cmp	w10, #0x1
 660:	b.ne	670 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x114>  // b.any
 664:	and	w10, w9, #0xf
 668:	cmp	w10, #0x9
 66c:	b.eq	5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.none
 670:	tst	w9, #0x30
 674:	b.ne	63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.any
 678:	sub	w8, w8, #0x2
 67c:	cmp	w8, #0x3
 680:	b.hi	744 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1e8>  // b.pmore
 684:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 688:	add	x9, x9, #0x0
 68c:	adr	x10, 640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 690:	ldrb	w11, [x9, x8]
 694:	add	x10, x10, x11, lsl #2
 698:	mov	w0, wzr
 69c:	br	x10
 6a0:	cmp	w22, #0x2
 6a4:	b.eq	764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x208>  // b.none
 6a8:	cbz	w22, 6b8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
 6ac:	mov	x0, x21
 6b0:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 6b4:	cbz	w0, 640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 6b8:	cbz	x19, 6f0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x194>
 6bc:	ldr	w8, [x19, #32]
 6c0:	and	w8, w8, #0xf
 6c4:	cmp	w8, #0x1
 6c8:	b.eq	6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x17c>  // b.none
 6cc:	mov	x0, x19
 6d0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 6d4:	tbz	w0, #0, 63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 6d8:	ldrb	w8, [x19, #16]
 6dc:	cbnz	w8, 6f0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x194>
 6e0:	add	x0, x19, #0x70
 6e4:	mov	w1, #0x22                  	// #34
 6e8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9Attribute8AttrKindE>
 6ec:	tbnz	w0, #0, 5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 6f0:	ldr	w8, [x20, #480]
 6f4:	sub	w8, w8, #0x10
 6f8:	cmp	w8, #0x3
 6fc:	b.cc	5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.lo, b.ul, b.last
 700:	cbz	x19, 73c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1e0>
 704:	ldr	w8, [x19, #32]
 708:	and	w8, w8, #0x1c00
 70c:	orr	w8, w8, w22
 710:	cbnz	w8, 5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 714:	b	63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 718:	cmp	w22, #0x0
 71c:	cset	w0, eq  // eq = none
 720:	cbz	x19, 640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 724:	cbz	w22, 640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 728:	mov	x0, x19
 72c:	ldp	x20, x19, [sp, #32]
 730:	ldp	x22, x21, [sp, #16]
 734:	ldp	x29, x30, [sp], #48
 738:	b	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 73c:	cbnz	w22, 5ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 740:	b	63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 744:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 748:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 74c:	adrp	x3, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 750:	add	x0, x0, #0x0
 754:	add	x1, x1, #0x0
 758:	add	x3, x3, #0x0
 75c:	mov	w2, #0xab                  	// #171
 760:	bl	0 <__assert_fail>
 764:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 768:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 76c:	adrp	x3, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 770:	add	x0, x0, #0x0
 774:	add	x1, x1, #0x0
 778:	add	x3, x3, #0x0
 77c:	mov	w2, #0xac                  	// #172
 780:	bl	0 <__assert_fail>

0000000000000784 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv>:
 784:	ldr	w8, [x0, #800]
 788:	tbnz	w8, #15, 7b8 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x34>
 78c:	ldr	w8, [x0, #496]
 790:	cmp	w8, #0xa
 794:	b.eq	7c0 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 798:	ldr	w9, [x0, #492]
 79c:	cmp	w9, #0xd
 7a0:	b.eq	7c0 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 7a4:	cmp	w9, #0xf
 7a8:	b.ne	7c8 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x44>  // b.any
 7ac:	cmp	w8, #0x10
 7b0:	cset	w0, eq  // eq = none
 7b4:	ret
 7b8:	ubfx	w0, w8, #14, #1
 7bc:	ret
 7c0:	mov	w0, #0x1                   	// #1
 7c4:	ret
 7c8:	mov	w0, wzr
 7cc:	ret

00000000000007d0 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE>:
 7d0:	stp	x29, x30, [sp, #-48]!
 7d4:	stp	x22, x21, [sp, #16]
 7d8:	stp	x20, x19, [sp, #32]
 7dc:	mov	x29, sp
 7e0:	ldr	x8, [x1, #40]
 7e4:	mov	x20, x0
 7e8:	mov	x19, x1
 7ec:	mov	x0, x8
 7f0:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 7f4:	ldr	x1, [x19, #40]
 7f8:	ldr	w22, [x20, #568]
 7fc:	mov	w21, w0
 800:	mov	x0, x20
 804:	mov	x2, x19
 808:	bl	55c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>
 80c:	ldr	w9, [x19, #32]
 810:	tst	w0, #0x1
 814:	mov	w8, #0x2                   	// #2
 818:	cinc	w8, w8, ne  // ne = any
 81c:	cmp	w22, #0x1
 820:	ccmp	w21, #0x0, #0x0, eq  // eq = none
 824:	and	w10, w0, #0x1
 828:	ubfx	w9, w9, #10, #3
 82c:	csel	w8, w10, w8, eq  // eq = none
 830:	cmp	w9, #0x4
 834:	b.hi	880 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xb0>  // b.pmore
 838:	adrp	x10, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 83c:	add	x10, x10, #0x0
 840:	adr	x11, 854 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x84>
 844:	ldrb	w12, [x10, x9]
 848:	add	x11, x11, x12, lsl #2
 84c:	mov	w9, wzr
 850:	br	x11
 854:	mov	w9, #0x1                   	// #1
 858:	b	868 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x98>
 85c:	mov	w9, #0x3                   	// #3
 860:	b	868 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x98>
 864:	mov	w9, #0x2                   	// #2
 868:	ldp	x20, x19, [sp, #32]
 86c:	ldp	x22, x21, [sp, #16]
 870:	cmp	w9, w8
 874:	csel	w0, w9, w8, hi  // hi = pmore
 878:	ldp	x29, x30, [sp], #48
 87c:	ret
 880:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 884:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 888:	add	x0, x0, #0x0
 88c:	add	x1, x1, #0x0
 890:	mov	w2, #0x5b                  	// #91
 894:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 898:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 89c:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 8a0:	add	x0, x0, #0x0
 8a4:	add	x1, x1, #0x0
 8a8:	mov	w2, #0x50                  	// #80
 8ac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000008b0 <_ZNK4llvm13TargetMachine11getOptLevelEv>:
 8b0:	ldr	w0, [x0, #576]
 8b4:	ret

00000000000008b8 <_ZN4llvm13TargetMachine11setOptLevelENS_10CodeGenOpt5LevelE>:
 8b8:	str	w1, [x0, #576]
 8bc:	ret

00000000000008c0 <_ZN4llvm13TargetMachine22getTargetTransformInfoERKNS_8FunctionE>:
 8c0:	stp	x29, x30, [sp, #-32]!
 8c4:	str	x19, [sp, #16]
 8c8:	mov	x29, sp
 8cc:	ldr	x0, [x1, #40]
 8d0:	mov	x19, x8
 8d4:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 8d8:	mov	x1, x0
 8dc:	mov	x0, x19
 8e0:	ldr	x19, [sp, #16]
 8e4:	ldp	x29, x30, [sp], #32
 8e8:	b	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>

00000000000008ec <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>:
 8ec:	stp	x29, x30, [sp, #-48]!
 8f0:	str	x21, [sp, #16]
 8f4:	stp	x20, x19, [sp, #32]
 8f8:	mov	x29, sp
 8fc:	mov	x19, x2
 900:	mov	x20, x1
 904:	tbnz	w4, #0, 94c <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x60>
 908:	ldr	w8, [x19, #32]
 90c:	and	w8, w8, #0xf
 910:	cmp	w8, #0x8
 914:	b.ne	94c <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x60>  // b.any
 918:	ldr	x8, [x0]
 91c:	mov	x21, x0
 920:	ldr	x8, [x8, #24]
 924:	blr	x8
 928:	ldr	x8, [x0]
 92c:	mov	x1, x20
 930:	mov	x2, x19
 934:	mov	x3, x21
 938:	ldr	x4, [x8, #56]
 93c:	ldp	x20, x19, [sp, #32]
 940:	ldr	x21, [sp, #16]
 944:	ldp	x29, x30, [sp], #48
 948:	br	x4
 94c:	mov	x1, x20
 950:	mov	x2, x19
 954:	ldp	x20, x19, [sp, #32]
 958:	ldr	x21, [sp, #16]
 95c:	mov	x0, x3
 960:	mov	w3, wzr
 964:	ldp	x29, x30, [sp], #48
 968:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>

000000000000096c <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>:
 96c:	sub	sp, sp, #0xe0
 970:	stp	x29, x30, [sp, #176]
 974:	stp	x22, x21, [sp, #192]
 978:	stp	x20, x19, [sp, #208]
 97c:	add	x29, sp, #0xb0
 980:	ldr	x8, [x0]
 984:	mov	x19, x0
 988:	mov	x20, x1
 98c:	ldr	x8, [x8, #24]
 990:	blr	x8
 994:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 998:	ldr	d0, [x8]
 99c:	add	x8, sp, #0x20
 9a0:	add	x22, x8, #0x10
 9a4:	str	x22, [sp, #32]
 9a8:	str	d0, [sp, #40]
 9ac:	ldr	x3, [x0, #808]
 9b0:	mov	x21, x0
 9b4:	add	x1, sp, #0x20
 9b8:	mov	x0, x19
 9bc:	mov	x2, x20
 9c0:	mov	w4, wzr
 9c4:	bl	8ec <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 9c8:	ldr	x19, [x21, #800]
 9cc:	add	x0, sp, #0x8
 9d0:	add	x1, sp, #0x20
 9d4:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 9d8:	add	x1, sp, #0x8
 9dc:	mov	x0, x19
 9e0:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 9e4:	ldr	x8, [sp, #32]
 9e8:	mov	x19, x0
 9ec:	cmp	x8, x22
 9f0:	b.eq	9fc <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x90>  // b.none
 9f4:	mov	x0, x8
 9f8:	bl	0 <free>
 9fc:	mov	x0, x19
 a00:	ldp	x20, x19, [sp, #208]
 a04:	ldp	x22, x21, [sp, #192]
 a08:	ldp	x29, x30, [sp, #176]
 a0c:	add	sp, sp, #0xe0
 a10:	ret

0000000000000a14 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>:
 a14:	sub	sp, sp, #0x30
 a18:	stp	x29, x30, [sp, #32]
 a1c:	add	x29, sp, #0x20
 a20:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a24:	adrp	x10, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a28:	add	x9, x9, #0x0
 a2c:	add	x10, x10, #0x0
 a30:	str	x0, [sp]
 a34:	mov	x1, sp
 a38:	mov	x0, x8
 a3c:	stp	x10, x9, [sp, #16]
 a40:	bl	0 <_ZN4llvm16TargetIRAnalysisC1ESt8functionIFNS_19TargetTransformInfoERKNS_8FunctionEEE>
 a44:	ldr	x8, [sp, #16]
 a48:	cbz	x8, a5c <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv+0x48>
 a4c:	mov	x0, sp
 a50:	mov	x1, sp
 a54:	mov	w2, #0x3                   	// #3
 a58:	blr	x8
 a5c:	ldp	x29, x30, [sp, #32]
 a60:	add	sp, sp, #0x30
 a64:	ret

0000000000000a68 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvE3$_0E9_M_invokeERKSt9_Any_dataS4_>:
 a68:	ldr	x0, [x0]
 a6c:	ldr	x9, [x0]
 a70:	ldr	x2, [x9, #64]
 a74:	br	x2

0000000000000a78 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
 a78:	cmp	w2, #0x2
 a7c:	b.eq	a90 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x18>  // b.none
 a80:	cmp	w2, #0x1
 a84:	b.ne	a98 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x20>  // b.any
 a88:	str	x1, [x0]
 a8c:	b	a98 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x20>
 a90:	ldr	x8, [x1]
 a94:	str	x8, [x0]
 a98:	mov	w0, wzr
 a9c:	ret

Disassembly of section .text._ZN4llvm10DataLayoutC2ENS_9StringRefE:

0000000000000000 <_ZN4llvm10DataLayoutC2ENS_9StringRefE>:
   0:	adrp	x9, 0 <_ZN4llvm10DataLayoutC2ENS_9StringRefE>
   4:	ldr	d0, [x9]
   8:	adrp	x9, 0 <_ZN4llvm10DataLayoutC2ENS_9StringRefE>
   c:	ldr	d1, [x9]
  10:	add	x8, x0, #0x30
  14:	str	x8, [x0, #32]
  18:	add	x8, x0, #0x48
  1c:	mov	x9, x0
  20:	str	x8, [x0, #56]
  24:	add	x8, x0, #0xf8
  28:	strh	wzr, [x0, #8]
  2c:	strh	wzr, [x0, #16]
  30:	str	d0, [x0, #40]
  34:	str	d1, [x0, #64]
  38:	strb	wzr, [x9, #216]!
  3c:	str	x8, [x0, #232]
  40:	add	x8, x0, #0x190
  44:	stp	xzr, x8, [x0, #376]
  48:	str	d0, [x0, #240]
  4c:	stp	x9, xzr, [x0, #200]
  50:	str	d0, [x0, #392]
  54:	b	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>

Disassembly of section .text._ZNSt10unique_ptrIKN4llvm14MCRegisterInfoESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIKN4llvm14MCRegisterInfoESt14default_deleteIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 3c <_ZNSt10unique_ptrIKN4llvm14MCRegisterInfoESt14default_deleteIS2_EED2Ev+0x3c>
  18:	ldr	x0, [x20, #200]
  1c:	bl	0 <_ZdlPv>
  20:	ldr	x8, [x20, #192]
  24:	ldr	x0, [x20, #168]
  28:	add	x8, x8, #0x1
  2c:	str	x8, [x20, #192]
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x20
  38:	bl	0 <_ZdlPv>
  3c:	str	xzr, [x19]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv:

0000000000000000 <_ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #32]
  10:	and	w8, w8, #0xf
  14:	cmp	w8, #0x1
  18:	b.eq	28 <_ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv+0x28>  // b.none
  1c:	mov	x19, x0
  20:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  24:	tbz	w0, #0, 38 <_ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv+0x38>
  28:	mov	w0, wzr
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldr	w8, [x19, #32]
  3c:	and	w8, w8, #0xf
  40:	sub	w8, w8, #0x2
  44:	cmp	w8, #0x8
  48:	b.hi	5c <_ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv+0x5c>  // b.pmore
  4c:	mov	w9, #0x70                  	// #112
  50:	lsr	w8, w9, w8
  54:	and	w0, w8, #0x1
  58:	b	2c <_ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv+0x2c>
  5c:	mov	w0, #0x1                   	// #1
  60:	b	2c <_ZNK4llvm11GlobalValue27isStrongDefinitionForLinkerEv+0x2c>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x106                 	// #262
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_15SmallVectorImplIcEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x128                 	// #296
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine18getObjFileLoweringEv:

0000000000000000 <_ZNK4llvm13TargetMachine18getObjFileLoweringEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv:

0000000000000000 <_ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE:

0000000000000000 <_ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getIntrinsicInfoEv:

0000000000000000 <_ZNK4llvm13TargetMachine16getIntrinsicInfoEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE:

0000000000000000 <_ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE>:
   0:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb:

0000000000000000 <_ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv:

0000000000000000 <_ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x9, x8, [x1]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	stp	xzr, xzr, [x0]
  20:	sub	x21, x8, x9
  24:	asr	x1, x21, #5
  28:	str	xzr, [x0, #16]
  2c:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>
  30:	add	x8, x0, x21
  34:	stp	x0, x0, [x19]
  38:	str	x8, [x19, #16]
  3c:	ldp	x21, x22, [x20]
  40:	cmp	x21, x22
  44:	b.eq	74 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x74>  // b.none
  48:	mov	x20, x0
  4c:	add	x8, x0, #0x10
  50:	str	x8, [x20], #32
  54:	ldp	x1, x8, [x21]
  58:	add	x2, x1, x8
  5c:	bl	0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>
  60:	add	x21, x21, #0x20
  64:	cmp	x21, x22
  68:	mov	x0, x20
  6c:	b.ne	4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x4c>  // b.any
  70:	b	78 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x78>
  74:	mov	x20, x0
  78:	str	x20, [x19, #8]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldp	x22, x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #58
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #5
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x40>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19], #16
  24:	cmp	x0, x19
  28:	b.eq	30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x30>  // b.none
  2c:	bl	0 <_ZdlPv>
  30:	add	x19, x19, #0x10
  34:	cmp	x19, x21
  38:	b.ne	20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x20>  // b.any
  3c:	ldr	x19, [x20]
  40:	cbz	x19, 58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x58>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

TargetMachineC.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMGetFirstTarget>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  18:	cmp	x19, x1
  1c:	b.eq	48 <LLVMGetFirstTarget+0x48>  // b.none
  20:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  24:	cbnz	x0, 4c <LLVMGetFirstTarget+0x4c>
  28:	adrp	x0, 0 <LLVMGetFirstTarget>
  2c:	adrp	x1, 0 <LLVMGetFirstTarget>
  30:	adrp	x3, 0 <LLVMGetFirstTarget>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x277                 	// #631
  44:	bl	0 <__assert_fail>
  48:	mov	x0, xzr
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

0000000000000058 <LLVMGetNextTarget>:
  58:	ldr	x0, [x0]
  5c:	ret

0000000000000060 <LLVMGetTargetFromName>:
  60:	stp	x29, x30, [sp, #-64]!
  64:	str	x23, [sp, #16]
  68:	stp	x22, x21, [sp, #32]
  6c:	stp	x20, x19, [sp, #48]
  70:	mov	x29, sp
  74:	mov	x20, x0
  78:	cbz	x0, 8c <LLVMGetTargetFromName+0x2c>
  7c:	mov	x0, x20
  80:	bl	0 <strlen>
  84:	mov	x21, x0
  88:	b	90 <LLVMGetTargetFromName+0x30>
  8c:	mov	x21, xzr
  90:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  94:	mov	x19, x0
  98:	cmp	x1, x0
  9c:	b.eq	ec <LLVMGetTargetFromName+0x8c>  // b.none
  a0:	mov	x22, x1
  a4:	cbz	x19, fc <LLVMGetTargetFromName+0x9c>
  a8:	ldr	x23, [x19, #16]
  ac:	cbz	x23, bc <LLVMGetTargetFromName+0x5c>
  b0:	mov	x0, x23
  b4:	bl	0 <strlen>
  b8:	b	c0 <LLVMGetTargetFromName+0x60>
  bc:	mov	x0, xzr
  c0:	cmp	x0, x21
  c4:	b.ne	e0 <LLVMGetTargetFromName+0x80>  // b.any
  c8:	cbz	x21, ec <LLVMGetTargetFromName+0x8c>
  cc:	mov	x0, x23
  d0:	mov	x1, x20
  d4:	mov	x2, x21
  d8:	bl	0 <bcmp>
  dc:	cbz	w0, ec <LLVMGetTargetFromName+0x8c>
  e0:	ldr	x19, [x19]
  e4:	cmp	x22, x19
  e8:	b.ne	a4 <LLVMGetTargetFromName+0x44>  // b.any
  ec:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  f0:	cmp	x19, x1
  f4:	b.eq	11c <LLVMGetTargetFromName+0xbc>  // b.none
  f8:	cbnz	x19, 120 <LLVMGetTargetFromName+0xc0>
  fc:	adrp	x0, 0 <LLVMGetFirstTarget>
 100:	adrp	x1, 0 <LLVMGetFirstTarget>
 104:	adrp	x3, 0 <LLVMGetFirstTarget>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x277                 	// #631
 118:	bl	0 <__assert_fail>
 11c:	mov	x19, xzr
 120:	mov	x0, x19
 124:	ldp	x20, x19, [sp, #48]
 128:	ldp	x22, x21, [sp, #32]
 12c:	ldr	x23, [sp, #16]
 130:	ldp	x29, x30, [sp], #64
 134:	ret

0000000000000138 <LLVMGetTargetFromTriple>:
 138:	sub	sp, sp, #0x80
 13c:	stp	x29, x30, [sp, #80]
 140:	stp	x22, x21, [sp, #96]
 144:	stp	x20, x19, [sp, #112]
 148:	add	x29, sp, #0x50
 14c:	sub	x8, x29, #0x20
 150:	mov	x19, x2
 154:	mov	x20, x1
 158:	mov	x1, x0
 15c:	add	x21, x8, #0x10
 160:	add	x0, sp, #0x10
 164:	add	x2, sp, #0x8
 168:	stp	x21, xzr, [x29, #-32]
 16c:	sturb	wzr, [x29, #-16]
 170:	add	x22, sp, #0x10
 174:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
 178:	add	x0, sp, #0x10
 17c:	sub	x1, x29, #0x20
 180:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
 184:	str	x0, [x20]
 188:	ldr	x8, [sp, #16]
 18c:	add	x9, x22, #0x10
 190:	cmp	x8, x9
 194:	b.eq	1a4 <LLVMGetTargetFromTriple+0x6c>  // b.none
 198:	mov	x0, x8
 19c:	bl	0 <_ZdlPv>
 1a0:	ldr	x0, [x20]
 1a4:	cbz	x0, 1b0 <LLVMGetTargetFromTriple+0x78>
 1a8:	mov	w19, wzr
 1ac:	b	1c4 <LLVMGetTargetFromTriple+0x8c>
 1b0:	cbz	x19, 1c0 <LLVMGetTargetFromTriple+0x88>
 1b4:	ldur	x0, [x29, #-32]
 1b8:	bl	0 <strdup>
 1bc:	str	x0, [x19]
 1c0:	mov	w19, #0x1                   	// #1
 1c4:	ldur	x0, [x29, #-32]
 1c8:	cmp	x0, x21
 1cc:	b.eq	1d4 <LLVMGetTargetFromTriple+0x9c>  // b.none
 1d0:	bl	0 <_ZdlPv>
 1d4:	mov	w0, w19
 1d8:	ldp	x20, x19, [sp, #112]
 1dc:	ldp	x22, x21, [sp, #96]
 1e0:	ldp	x29, x30, [sp, #80]
 1e4:	add	sp, sp, #0x80
 1e8:	ret

00000000000001ec <LLVMGetTargetName>:
 1ec:	ldr	x0, [x0, #16]
 1f0:	ret

00000000000001f4 <LLVMGetTargetDescription>:
 1f4:	ldr	x0, [x0, #24]
 1f8:	ret

00000000000001fc <LLVMTargetHasJIT>:
 1fc:	ldrb	w0, [x0, #40]
 200:	ret

0000000000000204 <LLVMTargetHasTargetMachine>:
 204:	ldr	x8, [x0, #88]
 208:	cmp	x8, #0x0
 20c:	cset	w0, ne  // ne = any
 210:	ret

0000000000000214 <LLVMTargetHasAsmBackend>:
 214:	ldr	x8, [x0, #96]
 218:	cmp	x8, #0x0
 21c:	cset	w0, ne  // ne = any
 220:	ret

0000000000000224 <LLVMCreateTargetMachine>:
 224:	sub	sp, sp, #0x130
 228:	stp	x29, x30, [sp, #208]
 22c:	stp	x28, x27, [sp, #224]
 230:	stp	x26, x25, [sp, #240]
 234:	stp	x24, x23, [sp, #256]
 238:	stp	x22, x21, [sp, #272]
 23c:	stp	x20, x19, [sp, #288]
 240:	add	x29, sp, #0xd0
 244:	sub	w8, w5, #0x1
 248:	cmp	w8, #0x6
 24c:	mov	x19, x3
 250:	mov	x20, x2
 254:	mov	x21, x1
 258:	cset	w27, cc  // cc = lo, ul, last
 25c:	csel	w8, w8, wzr, cc  // cc = lo, ul, last
 260:	cmp	w6, #0x6
 264:	stp	x8, x0, [sp, #32]
 268:	b.hi	2a4 <LLVMCreateTargetMachine+0x80>  // b.pmore
 26c:	adrp	x9, 0 <LLVMGetFirstTarget>
 270:	mov	w8, w6
 274:	add	x9, x9, #0x0
 278:	adr	x10, 294 <LLVMCreateTargetMachine+0x70>
 27c:	ldrb	w11, [x9, x8]
 280:	add	x10, x10, x11, lsl #2
 284:	mov	w26, wzr
 288:	mov	x28, xzr
 28c:	mov	x22, xzr
 290:	br	x10
 294:	mov	x28, xzr
 298:	mov	x22, xzr
 29c:	mov	w26, #0x1                   	// #1
 2a0:	b	2f0 <LLVMCreateTargetMachine+0xcc>
 2a4:	mov	w26, wzr
 2a8:	mov	x28, #0x100000000           	// #4294967296
 2ac:	mov	w22, #0x1                   	// #1
 2b0:	b	2f0 <LLVMCreateTargetMachine+0xcc>
 2b4:	mov	w26, wzr
 2b8:	mov	x22, xzr
 2bc:	mov	x28, #0x100000000           	// #4294967296
 2c0:	b	2f0 <LLVMCreateTargetMachine+0xcc>
 2c4:	mov	w26, wzr
 2c8:	mov	x28, #0x100000000           	// #4294967296
 2cc:	mov	w22, #0x2                   	// #2
 2d0:	b	2f0 <LLVMCreateTargetMachine+0xcc>
 2d4:	mov	w26, wzr
 2d8:	mov	x28, #0x100000000           	// #4294967296
 2dc:	mov	w22, #0x3                   	// #3
 2e0:	b	2f0 <LLVMCreateTargetMachine+0xcc>
 2e4:	mov	w26, wzr
 2e8:	mov	x28, #0x100000000           	// #4294967296
 2ec:	mov	w22, #0x4                   	// #4
 2f0:	cmp	w4, #0x4
 2f4:	mov	w8, #0x2                   	// #2
 2f8:	add	x0, sp, #0x30
 2fc:	csel	w25, w4, w8, cc  // cc = lo, ul, last
 300:	bl	0 <LLVMGetFirstTarget>
 304:	cbz	x21, 328 <LLVMCreateTargetMachine+0x104>
 308:	mov	x0, x21
 30c:	bl	0 <strlen>
 310:	mov	x23, x0
 314:	cbz	x20, 330 <LLVMCreateTargetMachine+0x10c>
 318:	mov	x0, x20
 31c:	bl	0 <strlen>
 320:	mov	x24, x0
 324:	b	334 <LLVMCreateTargetMachine+0x110>
 328:	mov	x23, xzr
 32c:	cbnz	x20, 318 <LLVMCreateTargetMachine+0xf4>
 330:	mov	x24, xzr
 334:	lsl	x27, x27, #32
 338:	orr	x22, x22, x28
 33c:	cbz	x19, 350 <LLVMCreateTargetMachine+0x12c>
 340:	mov	x0, x19
 344:	bl	0 <strlen>
 348:	mov	x6, x0
 34c:	b	354 <LLVMCreateTargetMachine+0x130>
 350:	mov	x6, xzr
 354:	ldp	x8, x0, [sp, #32]
 358:	add	x7, sp, #0x30
 35c:	mov	x1, x21
 360:	mov	x2, x23
 364:	orr	x8, x27, x8
 368:	mov	x3, x20
 36c:	mov	x4, x24
 370:	mov	x5, x19
 374:	strb	w26, [sp, #24]
 378:	str	w25, [sp, #16]
 37c:	stp	x8, x22, [sp]
 380:	add	x22, sp, #0x30
 384:	bl	0 <LLVMGetFirstTarget>
 388:	mov	x19, x0
 38c:	add	x0, x22, #0x80
 390:	bl	0 <LLVMGetFirstTarget>
 394:	ldr	x0, [sp, #144]
 398:	add	x8, x22, #0x70
 39c:	cmp	x0, x8
 3a0:	b.eq	3a8 <LLVMCreateTargetMachine+0x184>  // b.none
 3a4:	bl	0 <_ZdlPv>
 3a8:	ldr	x0, [sp, #112]
 3ac:	add	x8, x22, #0x50
 3b0:	cmp	x0, x8
 3b4:	b.eq	3bc <LLVMCreateTargetMachine+0x198>  // b.none
 3b8:	bl	0 <_ZdlPv>
 3bc:	mov	x0, x19
 3c0:	ldp	x20, x19, [sp, #288]
 3c4:	ldp	x22, x21, [sp, #272]
 3c8:	ldp	x24, x23, [sp, #256]
 3cc:	ldp	x26, x25, [sp, #240]
 3d0:	ldp	x28, x27, [sp, #224]
 3d4:	ldp	x29, x30, [sp, #208]
 3d8:	add	sp, sp, #0x130
 3dc:	ret

00000000000003e0 <LLVMDisposeTargetMachine>:
 3e0:	cbz	x0, 3f0 <LLVMDisposeTargetMachine+0x10>
 3e4:	ldr	x8, [x0]
 3e8:	ldr	x1, [x8, #8]
 3ec:	br	x1
 3f0:	ret

00000000000003f4 <LLVMGetTargetMachineTarget>:
 3f4:	ldr	x0, [x0, #8]
 3f8:	ret

00000000000003fc <LLVMGetTargetMachineTriple>:
 3fc:	sub	sp, sp, #0x40
 400:	stp	x29, x30, [sp, #32]
 404:	str	x19, [sp, #48]
 408:	add	x29, sp, #0x20
 40c:	mov	x8, sp
 410:	add	x19, x8, #0x10
 414:	str	x19, [sp]
 418:	ldp	x1, x8, [x0, #448]
 41c:	mov	x0, sp
 420:	add	x2, x1, x8
 424:	bl	0 <LLVMGetFirstTarget>
 428:	ldr	x0, [sp]
 42c:	bl	0 <strdup>
 430:	ldr	x8, [sp]
 434:	cmp	x8, x19
 438:	mov	x19, x0
 43c:	b.eq	448 <LLVMGetTargetMachineTriple+0x4c>  // b.none
 440:	mov	x0, x8
 444:	bl	0 <_ZdlPv>
 448:	mov	x0, x19
 44c:	ldr	x19, [sp, #48]
 450:	ldp	x29, x30, [sp, #32]
 454:	add	sp, sp, #0x40
 458:	ret

000000000000045c <LLVMGetTargetMachineCPU>:
 45c:	sub	sp, sp, #0x40
 460:	stp	x29, x30, [sp, #32]
 464:	str	x19, [sp, #48]
 468:	add	x29, sp, #0x20
 46c:	ldp	x1, x8, [x0, #504]
 470:	mov	x9, sp
 474:	add	x19, x9, #0x10
 478:	str	x19, [sp]
 47c:	cbz	x1, 494 <LLVMGetTargetMachineCPU+0x38>
 480:	add	x2, x1, x8
 484:	mov	x0, sp
 488:	bl	0 <LLVMGetFirstTarget>
 48c:	ldr	x0, [sp]
 490:	b	4a0 <LLVMGetTargetMachineCPU+0x44>
 494:	str	xzr, [sp, #8]
 498:	strb	wzr, [sp, #16]
 49c:	mov	x0, x19
 4a0:	bl	0 <strdup>
 4a4:	ldr	x8, [sp]
 4a8:	cmp	x8, x19
 4ac:	mov	x19, x0
 4b0:	b.eq	4bc <LLVMGetTargetMachineCPU+0x60>  // b.none
 4b4:	mov	x0, x8
 4b8:	bl	0 <_ZdlPv>
 4bc:	mov	x0, x19
 4c0:	ldr	x19, [sp, #48]
 4c4:	ldp	x29, x30, [sp, #32]
 4c8:	add	sp, sp, #0x40
 4cc:	ret

00000000000004d0 <LLVMGetTargetMachineFeatureString>:
 4d0:	sub	sp, sp, #0x40
 4d4:	stp	x29, x30, [sp, #32]
 4d8:	str	x19, [sp, #48]
 4dc:	add	x29, sp, #0x20
 4e0:	ldr	x1, [x0, #536]
 4e4:	ldr	x8, [x0, #544]
 4e8:	mov	x9, sp
 4ec:	add	x19, x9, #0x10
 4f0:	str	x19, [sp]
 4f4:	cbz	x1, 50c <LLVMGetTargetMachineFeatureString+0x3c>
 4f8:	add	x2, x1, x8
 4fc:	mov	x0, sp
 500:	bl	0 <LLVMGetFirstTarget>
 504:	ldr	x0, [sp]
 508:	b	518 <LLVMGetTargetMachineFeatureString+0x48>
 50c:	str	xzr, [sp, #8]
 510:	strb	wzr, [sp, #16]
 514:	mov	x0, x19
 518:	bl	0 <strdup>
 51c:	ldr	x8, [sp]
 520:	cmp	x8, x19
 524:	mov	x19, x0
 528:	b.eq	534 <LLVMGetTargetMachineFeatureString+0x64>  // b.none
 52c:	mov	x0, x8
 530:	bl	0 <_ZdlPv>
 534:	mov	x0, x19
 538:	ldr	x19, [sp, #48]
 53c:	ldp	x29, x30, [sp, #32]
 540:	add	sp, sp, #0x40
 544:	ret

0000000000000548 <LLVMSetTargetMachineAsmVerbosity>:
 548:	ldrh	w8, [x0, #832]
 54c:	cmp	w1, #0x0
 550:	cset	w9, ne  // ne = any
 554:	and	w8, w8, #0xfffffbff
 558:	orr	w8, w8, w9, lsl #10
 55c:	strh	w8, [x0, #832]
 560:	ret

0000000000000564 <LLVMCreateTargetDataLayout>:
 564:	stp	x29, x30, [sp, #-32]!
 568:	stp	x20, x19, [sp, #16]
 56c:	mov	x29, sp
 570:	mov	x19, x0
 574:	mov	w0, #0x1b0                 	// #432
 578:	bl	0 <_Znwm>
 57c:	add	x1, x19, #0x10
 580:	mov	x20, x0
 584:	bl	0 <LLVMGetFirstTarget>
 588:	mov	x0, x20
 58c:	ldp	x20, x19, [sp, #16]
 590:	ldp	x29, x30, [sp], #32
 594:	ret

0000000000000598 <LLVMTargetMachineEmitToFile>:
 598:	sub	sp, sp, #0xc0
 59c:	stp	x29, x30, [sp, #128]
 5a0:	str	x23, [sp, #144]
 5a4:	stp	x22, x21, [sp, #160]
 5a8:	stp	x20, x19, [sp, #176]
 5ac:	add	x29, sp, #0x80
 5b0:	mov	x19, x4
 5b4:	mov	w20, w3
 5b8:	mov	x23, x2
 5bc:	mov	x21, x1
 5c0:	mov	x22, x0
 5c4:	stur	wzr, [x29, #-16]
 5c8:	bl	0 <_ZNSt3_V215system_categoryEv>
 5cc:	stur	x0, [x29, #-8]
 5d0:	cbz	x23, 5e4 <LLVMTargetMachineEmitToFile+0x4c>
 5d4:	mov	x0, x23
 5d8:	bl	0 <strlen>
 5dc:	mov	x2, x0
 5e0:	b	5e8 <LLVMTargetMachineEmitToFile+0x50>
 5e4:	mov	x2, xzr
 5e8:	add	x0, sp, #0x28
 5ec:	sub	x3, x29, #0x10
 5f0:	mov	x1, x23
 5f4:	mov	w4, wzr
 5f8:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
 5fc:	ldur	w1, [x29, #-16]
 600:	cbz	w1, 644 <LLVMTargetMachineEmitToFile+0xac>
 604:	ldur	x0, [x29, #-8]
 608:	add	x20, sp, #0x8
 60c:	ldr	x8, [x0]
 610:	ldr	x9, [x8, #32]
 614:	add	x8, sp, #0x8
 618:	blr	x9
 61c:	ldr	x0, [sp, #8]
 620:	bl	0 <strdup>
 624:	str	x0, [x19]
 628:	ldr	x0, [sp, #8]
 62c:	add	x8, x20, #0x10
 630:	cmp	x0, x8
 634:	b.eq	63c <LLVMTargetMachineEmitToFile+0xa4>  // b.none
 638:	bl	0 <_ZdlPv>
 63c:	mov	w19, #0x1                   	// #1
 640:	b	680 <LLVMTargetMachineEmitToFile+0xe8>
 644:	add	x2, sp, #0x28
 648:	mov	x0, x22
 64c:	mov	x1, x21
 650:	mov	w3, w20
 654:	mov	x4, x19
 658:	bl	6a4 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
 65c:	ldr	x8, [sp, #64]
 660:	ldr	x9, [sp, #48]
 664:	mov	w19, w0
 668:	cmp	x8, x9
 66c:	b.eq	678 <LLVMTargetMachineEmitToFile+0xe0>  // b.none
 670:	add	x0, sp, #0x28
 674:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 678:	cmp	w19, #0x0
 67c:	cset	w19, ne  // ne = any
 680:	add	x0, sp, #0x28
 684:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 688:	mov	w0, w19
 68c:	ldp	x20, x19, [sp, #176]
 690:	ldp	x22, x21, [sp, #160]
 694:	ldr	x23, [sp, #144]
 698:	ldp	x29, x30, [sp, #128]
 69c:	add	sp, sp, #0xc0
 6a0:	ret

00000000000006a4 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>:
 6a4:	stp	x29, x30, [sp, #-80]!
 6a8:	str	x28, [sp, #16]
 6ac:	stp	x24, x23, [sp, #32]
 6b0:	stp	x22, x21, [sp, #48]
 6b4:	stp	x20, x19, [sp, #64]
 6b8:	mov	x29, sp
 6bc:	sub	sp, sp, #0x1e0
 6c0:	mov	x23, x0
 6c4:	sub	x0, x29, #0x10
 6c8:	mov	x19, x4
 6cc:	mov	w22, w3
 6d0:	mov	x20, x2
 6d4:	mov	x21, x1
 6d8:	bl	0 <_ZN4llvm6legacy11PassManagerC1Ev>
 6dc:	sub	x8, x29, #0x30
 6e0:	add	x24, x8, #0x10
 6e4:	add	x1, x23, #0x10
 6e8:	mov	x0, sp
 6ec:	sturb	wzr, [x29, #-32]
 6f0:	stp	x24, xzr, [x29, #-48]
 6f4:	bl	0 <LLVMGetFirstTarget>
 6f8:	mov	x1, sp
 6fc:	mov	x0, x21
 700:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
 704:	mov	x0, sp
 708:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 70c:	ldr	x8, [x23]
 710:	cmp	w22, #0x0
 714:	cset	w4, ne  // ne = any
 718:	sub	x1, x29, #0x10
 71c:	ldr	x8, [x8, #80]
 720:	mov	w5, #0x1                   	// #1
 724:	mov	x0, x23
 728:	mov	x2, x20
 72c:	mov	x3, xzr
 730:	mov	x6, xzr
 734:	blr	x8
 738:	tbz	w0, #0, 76c <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0xc8>
 73c:	ldur	x2, [x29, #-40]
 740:	adrp	x3, 0 <LLVMGetFirstTarget>
 744:	add	x3, x3, #0x0
 748:	sub	x0, x29, #0x30
 74c:	mov	w4, #0x2c                  	// #44
 750:	mov	x1, xzr
 754:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 758:	ldur	x0, [x29, #-48]
 75c:	bl	0 <strdup>
 760:	str	x0, [x19]
 764:	mov	w19, #0x1                   	// #1
 768:	b	794 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0xf0>
 76c:	sub	x0, x29, #0x10
 770:	mov	x1, x21
 774:	bl	0 <_ZN4llvm6legacy11PassManager3runERNS_6ModuleE>
 778:	ldr	x8, [x20, #24]
 77c:	ldr	x9, [x20, #8]
 780:	cmp	x8, x9
 784:	b.eq	790 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0xec>  // b.none
 788:	mov	x0, x20
 78c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 790:	mov	w19, wzr
 794:	ldur	x0, [x29, #-48]
 798:	cmp	x0, x24
 79c:	b.eq	7a4 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x100>  // b.none
 7a0:	bl	0 <_ZdlPv>
 7a4:	sub	x0, x29, #0x10
 7a8:	bl	0 <_ZN4llvm6legacy11PassManagerD1Ev>
 7ac:	mov	w0, w19
 7b0:	add	sp, sp, #0x1e0
 7b4:	ldp	x20, x19, [sp, #64]
 7b8:	ldp	x22, x21, [sp, #48]
 7bc:	ldp	x24, x23, [sp, #32]
 7c0:	ldr	x28, [sp, #16]
 7c4:	ldp	x29, x30, [sp], #80
 7c8:	ret

00000000000007cc <LLVMTargetMachineEmitToMemoryBuffer>:
 7cc:	sub	sp, sp, #0x80
 7d0:	stp	x29, x30, [sp, #64]
 7d4:	stp	x24, x23, [sp, #80]
 7d8:	stp	x22, x21, [sp, #96]
 7dc:	stp	x20, x19, [sp, #112]
 7e0:	add	x29, sp, #0x40
 7e4:	stur	xzr, [x29, #-8]
 7e8:	stp	xzr, xzr, [sp, #16]
 7ec:	adrp	x10, 0 <_ZTVN4llvm19raw_svector_ostreamE>
 7f0:	ldr	x10, [x10]
 7f4:	sub	x8, x29, #0x10
 7f8:	mov	w9, #0x1                   	// #1
 7fc:	mov	x23, x0
 800:	str	w9, [sp, #32]
 804:	add	x24, x8, #0x10
 808:	add	x9, x10, #0x10
 80c:	mov	x0, sp
 810:	mov	x20, x4
 814:	mov	x19, x3
 818:	mov	w21, w2
 81c:	mov	x22, x1
 820:	stur	x24, [x29, #-16]
 824:	stp	x9, xzr, [sp]
 828:	str	x8, [sp, #40]
 82c:	bl	0 <LLVMGetFirstTarget>
 830:	mov	x2, sp
 834:	mov	x0, x23
 838:	mov	x1, x22
 83c:	mov	w3, w21
 840:	mov	x4, x19
 844:	bl	6a4 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
 848:	ldr	x9, [sp, #40]
 84c:	adrp	x2, 0 <LLVMGetFirstTarget>
 850:	cmp	w0, #0x0
 854:	add	x2, x2, #0x0
 858:	ldr	x8, [x9]
 85c:	ldr	w1, [x9, #8]
 860:	cset	w19, ne  // ne = any
 864:	mov	x0, x8
 868:	bl	0 <LLVMCreateMemoryBufferWithMemoryRangeCopy>
 86c:	str	x0, [x20]
 870:	mov	x0, sp
 874:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
 878:	ldur	x0, [x29, #-16]
 87c:	cmp	x0, x24
 880:	b.eq	888 <LLVMTargetMachineEmitToMemoryBuffer+0xbc>  // b.none
 884:	bl	0 <free>
 888:	mov	w0, w19
 88c:	ldp	x20, x19, [sp, #112]
 890:	ldp	x22, x21, [sp, #96]
 894:	ldp	x24, x23, [sp, #80]
 898:	ldp	x29, x30, [sp, #64]
 89c:	add	sp, sp, #0x80
 8a0:	ret

00000000000008a4 <LLVMGetDefaultTargetTriple>:
 8a4:	sub	sp, sp, #0x40
 8a8:	stp	x29, x30, [sp, #32]
 8ac:	str	x19, [sp, #48]
 8b0:	add	x29, sp, #0x20
 8b4:	mov	x8, sp
 8b8:	mov	x19, sp
 8bc:	bl	0 <_ZN4llvm3sys22getDefaultTargetTripleB5cxx11Ev>
 8c0:	ldr	x0, [sp]
 8c4:	bl	0 <strdup>
 8c8:	ldr	x8, [sp]
 8cc:	add	x9, x19, #0x10
 8d0:	mov	x19, x0
 8d4:	cmp	x8, x9
 8d8:	b.eq	8e4 <LLVMGetDefaultTargetTriple+0x40>  // b.none
 8dc:	mov	x0, x8
 8e0:	bl	0 <_ZdlPv>
 8e4:	mov	x0, x19
 8e8:	ldr	x19, [sp, #48]
 8ec:	ldp	x29, x30, [sp, #32]
 8f0:	add	sp, sp, #0x40
 8f4:	ret

00000000000008f8 <LLVMNormalizeTargetTriple>:
 8f8:	sub	sp, sp, #0x40
 8fc:	stp	x29, x30, [sp, #32]
 900:	stp	x20, x19, [sp, #48]
 904:	add	x29, sp, #0x20
 908:	mov	x19, x0
 90c:	cbz	x0, 920 <LLVMNormalizeTargetTriple+0x28>
 910:	mov	x0, x19
 914:	bl	0 <strlen>
 918:	mov	x1, x0
 91c:	b	924 <LLVMNormalizeTargetTriple+0x2c>
 920:	mov	x1, xzr
 924:	mov	x8, sp
 928:	mov	x0, x19
 92c:	mov	x20, sp
 930:	bl	0 <_ZN4llvm6Triple9normalizeB5cxx11ENS_9StringRefE>
 934:	ldr	x0, [sp]
 938:	bl	0 <strdup>
 93c:	ldr	x8, [sp]
 940:	add	x9, x20, #0x10
 944:	mov	x19, x0
 948:	cmp	x8, x9
 94c:	b.eq	958 <LLVMNormalizeTargetTriple+0x60>  // b.none
 950:	mov	x0, x8
 954:	bl	0 <_ZdlPv>
 958:	mov	x0, x19
 95c:	ldp	x20, x19, [sp, #48]
 960:	ldp	x29, x30, [sp, #32]
 964:	add	sp, sp, #0x40
 968:	ret

000000000000096c <LLVMGetHostCPUName>:
 96c:	stp	x29, x30, [sp, #-16]!
 970:	mov	x29, sp
 974:	bl	0 <_ZN4llvm3sys14getHostCPUNameEv>
 978:	ldp	x29, x30, [sp], #16
 97c:	b	0 <strdup>

0000000000000980 <LLVMGetHostCPUFeatures>:
 980:	sub	sp, sp, #0x80
 984:	stp	x29, x30, [sp, #96]
 988:	stp	x20, x19, [sp, #112]
 98c:	add	x29, sp, #0x60
 990:	adrp	x1, 0 <LLVMGetFirstTarget>
 994:	add	x1, x1, #0x0
 998:	sub	x0, x29, #0x18
 99c:	mov	x2, xzr
 9a0:	bl	0 <_ZN4llvm17SubtargetFeaturesC1ENS_9StringRefE>
 9a4:	mov	x8, #0x1000000000          	// #68719476736
 9a8:	add	x0, sp, #0x28
 9ac:	stp	xzr, xzr, [sp, #40]
 9b0:	str	x8, [sp, #56]
 9b4:	bl	0 <_ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE>
 9b8:	tbz	w0, #0, a2c <LLVMGetHostCPUFeatures+0xac>
 9bc:	ldr	w8, [sp, #48]
 9c0:	ldr	x9, [sp, #40]
 9c4:	cbz	w8, 9ec <LLVMGetHostCPUFeatures+0x6c>
 9c8:	add	x10, x9, #0x8
 9cc:	mov	x19, x9
 9d0:	ldur	x11, [x10, #-8]
 9d4:	cbz	x11, 9e0 <LLVMGetHostCPUFeatures+0x60>
 9d8:	cmn	x11, #0x8
 9dc:	b.ne	9f0 <LLVMGetHostCPUFeatures+0x70>  // b.any
 9e0:	mov	x19, x10
 9e4:	add	x10, x10, #0x8
 9e8:	b	9d0 <LLVMGetHostCPUFeatures+0x50>
 9ec:	mov	x19, x9
 9f0:	add	x20, x9, x8, lsl #3
 9f4:	cmp	x20, x19
 9f8:	b.eq	a2c <LLVMGetHostCPUFeatures+0xac>  // b.none
 9fc:	ldr	x8, [x19], #8
 a00:	sub	x0, x29, #0x18
 a04:	ldr	x2, [x8]
 a08:	ldrb	w3, [x8, #8]
 a0c:	add	x1, x8, #0x10
 a10:	bl	0 <_ZN4llvm17SubtargetFeatures10AddFeatureENS_9StringRefEb>
 a14:	ldr	x8, [x19]
 a18:	cbz	x8, a24 <LLVMGetHostCPUFeatures+0xa4>
 a1c:	cmn	x8, #0x8
 a20:	b.ne	9f4 <LLVMGetHostCPUFeatures+0x74>  // b.any
 a24:	add	x19, x19, #0x8
 a28:	b	a14 <LLVMGetHostCPUFeatures+0x94>
 a2c:	add	x8, sp, #0x8
 a30:	sub	x0, x29, #0x18
 a34:	add	x19, sp, #0x8
 a38:	bl	0 <_ZNK4llvm17SubtargetFeatures9getStringB5cxx11Ev>
 a3c:	ldr	x0, [sp, #8]
 a40:	bl	0 <strdup>
 a44:	ldr	x8, [sp, #8]
 a48:	add	x9, x19, #0x10
 a4c:	mov	x19, x0
 a50:	cmp	x8, x9
 a54:	b.eq	a60 <LLVMGetHostCPUFeatures+0xe0>  // b.none
 a58:	mov	x0, x8
 a5c:	bl	0 <_ZdlPv>
 a60:	add	x0, sp, #0x28
 a64:	bl	0 <LLVMGetFirstTarget>
 a68:	sub	x0, x29, #0x18
 a6c:	bl	0 <LLVMGetFirstTarget>
 a70:	mov	x0, x19
 a74:	ldp	x20, x19, [sp, #112]
 a78:	ldp	x29, x30, [sp, #96]
 a7c:	add	sp, sp, #0x80
 a80:	ret

0000000000000a84 <LLVMAddAnalysisPasses>:
 a84:	sub	sp, sp, #0x40
 a88:	stp	x29, x30, [sp, #32]
 a8c:	str	x19, [sp, #48]
 a90:	add	x29, sp, #0x20
 a94:	mov	x8, sp
 a98:	mov	x19, x1
 a9c:	bl	0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>
 aa0:	mov	x0, sp
 aa4:	bl	0 <_ZN4llvm36createTargetTransformInfoWrapperPassENS_16TargetIRAnalysisE>
 aa8:	ldr	x8, [x19]
 aac:	mov	x1, x0
 ab0:	mov	x0, x19
 ab4:	ldr	x8, [x8, #16]
 ab8:	blr	x8
 abc:	ldr	x8, [sp, #16]
 ac0:	cbz	x8, ad4 <LLVMAddAnalysisPasses+0x50>
 ac4:	mov	x0, sp
 ac8:	mov	x1, sp
 acc:	mov	w2, #0x3                   	// #3
 ad0:	blr	x8
 ad4:	ldr	x19, [sp, #48]
 ad8:	ldp	x29, x30, [sp, #32]
 adc:	add	sp, sp, #0x40
 ae0:	ret

Disassembly of section .text._ZN4llvm13TargetOptionsC2Ev:

0000000000000000 <_ZN4llvm13TargetOptionsC2Ev>:
   0:	ldrb	w9, [x0, #16]
   4:	mov	w8, #0x1                   	// #1
   8:	str	w8, [x0, #12]
   c:	adrp	x8, 0 <_ZN4llvm13TargetOptionsC2Ev>
  10:	ldr	q0, [x8]
  14:	ldrh	w8, [x0]
  18:	and	w9, w9, #0xfc
  1c:	strb	w9, [x0, #16]
  20:	ldrb	w9, [x0, #8]
  24:	and	w8, w8, #0xfe00
  28:	orr	w8, w8, #0x10
  2c:	strh	w8, [x0]
  30:	and	w8, w9, #0xf8
  34:	orr	w8, w8, #0x1
  38:	strb	w8, [x0, #8]
  3c:	ldr	w8, [x0, #24]
  40:	str	wzr, [x0, #4]
  44:	str	xzr, [x0, #48]
  48:	str	wzr, [x0, #44]
  4c:	and	w8, w8, #0xff800000
  50:	orr	w8, w8, #0x8
  54:	stp	wzr, w8, [x0, #20]
  58:	add	x8, x0, #0x38
  5c:	stur	q0, [x0, #28]
  60:	mov	x0, x8
  64:	b	0 <_ZN4llvm15MCTargetOptionsC1Ev>

Disassembly of section .text._ZNK4llvm6Target19createTargetMachineENS_9StringRefES1_S1_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENS5_INS_9CodeModel5ModelEEENS_10CodeGenOpt5LevelEb:

0000000000000000 <_ZNK4llvm6Target19createTargetMachineENS_9StringRefES1_S1_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENS5_INS_9CodeModel5ModelEEENS_10CodeGenOpt5LevelEb>:
   0:	sub	sp, sp, #0xe0
   4:	stp	x29, x30, [sp, #128]
   8:	stp	x28, x27, [sp, #144]
   c:	stp	x26, x25, [sp, #160]
  10:	stp	x24, x23, [sp, #176]
  14:	stp	x22, x21, [sp, #192]
  18:	stp	x20, x19, [sp, #208]
  1c:	add	x29, sp, #0x80
  20:	stp	x1, x2, [x29, #-16]
  24:	ldr	x26, [x0, #88]
  28:	cbz	x26, c4 <_ZNK4llvm6Target19createTargetMachineENS_9StringRefES1_S1_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENS5_INS_9CodeModel5ModelEEENS_10CodeGenOpt5LevelEb+0xc4>
  2c:	ldp	x8, x19, [x29, #96]
  30:	ldrb	w27, [x29, #120]
  34:	ldr	w28, [x29, #112]
  38:	mov	x23, x0
  3c:	add	x0, sp, #0x20
  40:	sub	x1, x29, #0x10
  44:	mov	x21, x5
  48:	mov	x22, x4
  4c:	mov	x24, x3
  50:	str	x8, [sp, #24]
  54:	mov	x20, x7
  58:	mov	x25, x6
  5c:	bl	0 <_ZNK4llvm6Target19createTargetMachineENS_9StringRefES1_S1_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENS5_INS_9CodeModel5ModelEEENS_10CodeGenOpt5LevelEb>
  60:	add	x0, sp, #0x38
  64:	add	x1, sp, #0x20
  68:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
  6c:	ldr	x7, [sp, #24]
  70:	and	w8, w27, #0x1
  74:	add	x1, sp, #0x38
  78:	mov	x0, x23
  7c:	mov	x2, x24
  80:	mov	x3, x22
  84:	mov	x4, x21
  88:	mov	x5, x25
  8c:	mov	x6, x20
  90:	str	w28, [sp, #8]
  94:	strb	w8, [sp, #16]
  98:	str	x19, [sp]
  9c:	blr	x26
  a0:	ldr	x8, [sp, #56]
  a4:	add	x9, sp, #0x38
  a8:	add	x9, x9, #0x10
  ac:	mov	x19, x0
  b0:	cmp	x8, x9
  b4:	b.eq	c8 <_ZNK4llvm6Target19createTargetMachineENS_9StringRefES1_S1_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENS5_INS_9CodeModel5ModelEEENS_10CodeGenOpt5LevelEb+0xc8>  // b.none
  b8:	mov	x0, x8
  bc:	bl	0 <_ZdlPv>
  c0:	b	c8 <_ZNK4llvm6Target19createTargetMachineENS_9StringRefES1_S1_RKNS_13TargetOptionsENS_8OptionalINS_5Reloc5ModelEEENS5_INS_9CodeModel5ModelEEENS_10CodeGenOpt5LevelEb+0xc8>
  c4:	mov	x19, xzr
  c8:	mov	x0, x19
  cc:	ldp	x20, x19, [sp, #208]
  d0:	ldp	x22, x21, [sp, #192]
  d4:	ldp	x24, x23, [sp, #176]
  d8:	ldp	x26, x25, [sp, #160]
  dc:	ldp	x28, x27, [sp, #144]
  e0:	ldp	x29, x30, [sp, #128]
  e4:	add	sp, sp, #0xe0
  e8:	ret

Disassembly of section .text._ZN4llvm9StringMapIbNS_15MallocAllocatorEED2Ev:

0000000000000000 <_ZN4llvm9StringMapIbNS_15MallocAllocatorEED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x0
  18:	cbz	w8, 50 <_ZN4llvm9StringMapIbNS_15MallocAllocatorEED2Ev+0x50>
  1c:	ldr	w8, [x19, #8]
  20:	cbz	w8, 50 <_ZN4llvm9StringMapIbNS_15MallocAllocatorEED2Ev+0x50>
  24:	mov	x20, xzr
  28:	lsl	x21, x8, #3
  2c:	ldr	x8, [x19]
  30:	ldr	x0, [x8, x20]
  34:	cmn	x0, #0x8
  38:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  3c:	b.eq	44 <_ZN4llvm9StringMapIbNS_15MallocAllocatorEED2Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	add	x20, x20, #0x8
  48:	cmp	x21, x20
  4c:	b.ne	2c <_ZN4llvm9StringMapIbNS_15MallocAllocatorEED2Ev+0x2c>  // b.any
  50:	ldr	x0, [x19]
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <free>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x40>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19], #16
  24:	cmp	x0, x19
  28:	b.eq	30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x30>  // b.none
  2c:	bl	0 <_ZdlPv>
  30:	add	x19, x19, #0x10
  34:	cmp	x19, x21
  38:	b.ne	20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x20>  // b.any
  3c:	ldr	x19, [x20]
  40:	cbz	x19, 58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x58>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm10DataLayoutC2ERKS0_:

0000000000000000 <_ZN4llvm10DataLayoutC2ERKS0_>:
   0:	adrp	x9, 0 <_ZN4llvm10DataLayoutC2ERKS0_>
   4:	ldr	d0, [x9]
   8:	adrp	x9, 0 <_ZN4llvm10DataLayoutC2ERKS0_>
   c:	ldr	d1, [x9]
  10:	add	x8, x0, #0x30
  14:	str	x8, [x0, #32]
  18:	add	x8, x0, #0x48
  1c:	mov	x9, x0
  20:	str	x8, [x0, #56]
  24:	add	x8, x0, #0xf8
  28:	strh	wzr, [x0, #8]
  2c:	strh	wzr, [x0, #16]
  30:	str	d0, [x0, #40]
  34:	str	d1, [x0, #64]
  38:	strb	wzr, [x9, #216]!
  3c:	str	x8, [x0, #232]
  40:	add	x8, x0, #0x190
  44:	stp	xzr, x8, [x0, #376]
  48:	str	d0, [x0, #240]
  4c:	stp	x9, xzr, [x0, #200]
  50:	str	d0, [x0, #392]
  54:	b	0 <_ZN4llvm10DataLayoutC2ERKS0_>

Disassembly of section .text._ZN4llvm10DataLayoutaSERKS0_:

0000000000000000 <_ZN4llvm10DataLayoutaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm10DataLayout5clearEv>
  18:	add	x1, x19, #0xc8
  1c:	add	x0, x20, #0xc8
  20:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  24:	ldrb	w8, [x19]
  28:	add	x0, x20, #0x20
  2c:	add	x1, x19, #0x20
  30:	strb	w8, [x20]
  34:	ldr	w8, [x19, #4]
  38:	str	w8, [x20, #4]
  3c:	ldrh	w8, [x19, #8]
  40:	strh	w8, [x20, #8]
  44:	ldrh	w8, [x19, #16]
  48:	strh	w8, [x20, #16]
  4c:	ldr	w8, [x19, #12]
  50:	str	w8, [x20, #12]
  54:	ldur	x8, [x19, #20]
  58:	stur	x8, [x20, #20]
  5c:	bl	0 <_ZN4llvm10DataLayoutaSERKS0_>
  60:	add	x0, x20, #0x38
  64:	add	x1, x19, #0x38
  68:	bl	0 <_ZN4llvm10DataLayoutaSERKS0_>
  6c:	add	x0, x20, #0xe8
  70:	add	x1, x19, #0xe8
  74:	bl	0 <_ZN4llvm10DataLayoutaSERKS0_>
  78:	add	x0, x20, #0x180
  7c:	add	x1, x19, #0x180
  80:	bl	0 <_ZN4llvm10DataLayoutaSERKS0_>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIhEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x1                   	// #1
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	mov	x2, x20
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	mov	x2, x22
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22
  a4:	add	x8, x9, x8
  a8:	add	x0, x10, x22
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #3
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #3
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #3
  a4:	add	x8, x9, x8, lsl #3
  a8:	add	x0, x10, x22, lsl #3
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x10                  	// #16
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #4
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #4
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #4
  a4:	add	x8, x9, x8, lsl #4
  a8:	add	x0, x10, x22, lsl #4
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIjEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x4                   	// #4
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #2
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #2
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #2
  a4:	add	x8, x9, x8, lsl #2
  a8:	add	x0, x10, x22, lsl #2
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostream13SetUnbufferedEv:

0000000000000000 <_ZN4llvm11raw_ostream13SetUnbufferedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm11raw_ostream13SetUnbufferedEv+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	mov	x1, xzr
  34:	mov	x2, xzr
  38:	mov	w3, wzr
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>
