
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix2.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_minix_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <grub_get_indir>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	w1, w1
  24:	ubfiz	x2, x2, #2, #32
  28:	mov	x29, sp
  2c:	ldrh	w5, [x0, #10]
  30:	add	x4, sp, #0x1c
  34:	ldr	x0, [x0, #96]
  38:	add	w5, w5, #0x1
  3c:	mov	x3, #0x4                   	// #4
  40:	lsl	x1, x1, x5
  44:	bl	0 <grub_disk_read>
  48:	ldr	w0, [sp, #28]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

0000000000000054 <grub_minix_read_file>:
  54:	stp	x29, x30, [sp, #-144]!
  58:	mov	x29, sp
  5c:	stp	x19, x20, [sp, #16]
  60:	stp	x21, x22, [sp, #32]
  64:	stp	x23, x24, [sp, #48]
  68:	stp	x25, x26, [sp, #64]
  6c:	mov	x26, x0
  70:	ldr	w0, [x0, #28]
  74:	stp	x27, x28, [sp, #80]
  78:	cmp	x0, x3
  7c:	stp	x1, x2, [sp, #128]
  80:	b.cs	b4 <grub_minix_read_file+0x60>  // b.hs, b.nlast
  84:	adrp	x0, 0 <grub_minix_close>
  88:	ldr	x1, [x0]
  8c:	mov	w0, #0xb                   	// #11
  90:	bl	0 <grub_error>
  94:	mov	x0, #0xffffffffffffffff    	// #-1
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x21, x22, [sp, #32]
  a0:	ldp	x23, x24, [sp, #48]
  a4:	ldp	x25, x26, [sp, #64]
  a8:	ldp	x27, x28, [sp, #80]
  ac:	ldp	x29, x30, [sp], #144
  b0:	ret
  b4:	add	x1, x3, x4
  b8:	mov	x19, x4
  bc:	mov	x23, x5
  c0:	cmp	x0, x1
  c4:	b.cs	cc <grub_minix_read_file+0x78>  // b.hs, b.nlast
  c8:	sub	x19, x0, x3
  cc:	cbz	x19, 2a4 <grub_minix_read_file+0x250>
  d0:	add	x24, x19, x3
  d4:	adrp	x27, 0 <grub_minix_close>
  d8:	sub	x0, x24, #0x1
  dc:	and	x24, x24, #0xffffffff
  e0:	ldr	x22, [x26, #112]
  e4:	ubfx	x0, x0, #9, #32
  e8:	adrp	x28, 0 <grub_minix_close>
  ec:	udiv	x0, x0, x22
  f0:	lsl	x22, x22, #9
  f4:	udiv	x20, x3, x22
  f8:	str	w0, [sp, #108]
  fc:	add	w0, w0, #0x1
 100:	str	w0, [sp, #120]
 104:	msub	x22, x20, x22, x3
 108:	add	x25, x26, x20, lsl #2
 10c:	str	w20, [sp, #124]
 110:	ldr	w0, [sp, #120]
 114:	cmp	w20, w0
 118:	b.cc	124 <grub_minix_read_file+0xd0>  // b.lo, b.ul, b.last
 11c:	mov	x0, x19
 120:	b	98 <grub_minix_read_file+0x44>
 124:	ldr	x0, [x26, #112]
 128:	str	x0, [sp, #112]
 12c:	cmp	w20, #0x6
 130:	b.hi	1d0 <grub_minix_read_file+0x17c>  // b.pmore
 134:	ldr	w1, [x25, #44]
 138:	ldr	x7, [x28]
 13c:	ldr	w0, [x7]
 140:	cbnz	w0, 94 <grub_minix_read_file+0x40>
 144:	ldr	w0, [sp, #108]
 148:	cmp	w0, w20
 14c:	b.eq	280 <grub_minix_read_file+0x22c>  // b.none
 150:	ldr	x0, [sp, #112]
 154:	lsl	x3, x0, #9
 158:	ldr	w0, [sp, #124]
 15c:	cmp	w20, w0
 160:	b.ne	29c <grub_minix_read_file+0x248>  // b.any
 164:	sub	x3, x3, x22
 168:	mov	x21, x22
 16c:	ldr	x0, [x26, #96]
 170:	mov	w1, w1
 174:	ldrh	w5, [x26, #10]
 178:	mov	x4, x23
 17c:	ldr	x2, [sp, #128]
 180:	add	w5, w5, #0x1
 184:	str	x2, [x0, #48]
 188:	add	x25, x25, #0x4
 18c:	ldr	x2, [sp, #136]
 190:	str	x2, [x0, #56]
 194:	lsl	x1, x1, x5
 198:	mov	x2, x21
 19c:	bl	0 <grub_disk_read>
 1a0:	ldr	x0, [x26, #96]
 1a4:	str	xzr, [x0, #48]
 1a8:	adrp	x0, 0 <grub_minix_close>
 1ac:	add	x0, x0, #0x0
 1b0:	ldr	x7, [x0]
 1b4:	ldr	w0, [x7]
 1b8:	cbnz	w0, 94 <grub_minix_read_file+0x40>
 1bc:	ldr	x5, [x26, #112]
 1c0:	add	w20, w20, #0x1
 1c4:	add	x23, x23, x5, lsl #9
 1c8:	sub	x23, x23, x21
 1cc:	b	110 <grub_minix_read_file+0xbc>
 1d0:	ldr	w0, [x26, #84]
 1d4:	sub	w2, w20, #0x7
 1d8:	cmp	w0, w2
 1dc:	b.ls	1f4 <grub_minix_read_file+0x1a0>  // b.plast
 1e0:	ldr	w1, [x26, #72]
 1e4:	mov	x0, x26
 1e8:	bl	1c <grub_get_indir>
 1ec:	mov	w1, w0
 1f0:	b	138 <grub_minix_read_file+0xe4>
 1f4:	umull	x4, w0, w0
 1f8:	sub	w21, w2, w0
 1fc:	sub	w2, w2, w0
 200:	mov	w1, w0
 204:	cmp	x2, x4
 208:	b.cs	230 <grub_minix_read_file+0x1dc>  // b.hs, b.nlast
 20c:	udiv	w2, w21, w0
 210:	ldr	w1, [x26, #76]
 214:	mov	x0, x26
 218:	bl	1c <grub_get_indir>
 21c:	ldr	w2, [x26, #84]
 220:	udiv	w1, w21, w2
 224:	msub	w2, w1, w2, w21
 228:	mov	w1, w0
 22c:	b	1e4 <grub_minix_read_file+0x190>
 230:	msub	w21, w0, w0, w21
 234:	mul	x1, x1, x4
 238:	cmp	x1, w21, uxtw
 23c:	b.ls	26c <grub_minix_read_file+0x218>  // b.plast
 240:	udiv	w2, w21, w0
 244:	ldr	w1, [x26, #80]
 248:	udiv	w2, w2, w0
 24c:	mov	x0, x26
 250:	bl	1c <grub_get_indir>
 254:	ldr	w4, [x26, #84]
 258:	udiv	w2, w21, w4
 25c:	udiv	w1, w2, w4
 260:	msub	w2, w1, w4, w2
 264:	mov	w1, w0
 268:	b	214 <grub_minix_read_file+0x1c0>
 26c:	ldr	x1, [x27]
 270:	mov	w0, #0xb                   	// #11
 274:	bl	0 <grub_error>
 278:	mov	w1, #0x0                   	// #0
 27c:	b	138 <grub_minix_read_file+0xe4>
 280:	ldr	x0, [x26, #112]
 284:	lsl	x0, x0, #9
 288:	udiv	x3, x24, x0
 28c:	msub	x3, x3, x0, x24
 290:	cmp	x3, #0x0
 294:	csel	x3, x3, x0, ne  // ne = any
 298:	b	158 <grub_minix_read_file+0x104>
 29c:	mov	x21, #0x0                   	// #0
 2a0:	b	16c <grub_minix_read_file+0x118>
 2a4:	mov	x0, #0x0                   	// #0
 2a8:	b	98 <grub_minix_read_file+0x44>
 2ac:	nop
	...

00000000000002c8 <grub_minix_read>:
 2c8:	mov	x5, x1
 2cc:	mov	x4, x2
 2d0:	ldp	x1, x2, [x0, #88]
 2d4:	ldr	x3, [x0, #24]
 2d8:	ldr	x0, [x0, #80]
 2dc:	b	54 <grub_minix_read_file>

00000000000002e0 <grub_minix_read_inode>:
 2e0:	stp	x29, x30, [sp, #-16]!
 2e4:	and	w1, w1, #0xffff
 2e8:	sub	w2, w1, #0x1
 2ec:	mov	x29, sp
 2f0:	ldrh	w5, [x0, #4]
 2f4:	add	x4, x0, #0x14
 2f8:	strh	w1, [x0, #88]
 2fc:	mov	x3, #0x40                  	// #64
 300:	ldrh	w1, [x0, #6]
 304:	add	w5, w5, #0x2
 308:	add	w5, w5, w1
 30c:	ldrh	w1, [x0, #10]
 310:	ldr	x0, [x0, #96]
 314:	add	w1, w1, #0x1
 318:	sxtw	x5, w5
 31c:	lsl	x5, x5, x1
 320:	ubfx	x1, x2, #3, #13
 324:	add	x1, x5, x1
 328:	ubfiz	x2, x2, #6, #3
 32c:	bl	0 <grub_disk_read>
 330:	mov	w0, #0x0                   	// #0
 334:	ldp	x29, x30, [sp], #16
 338:	ret

000000000000033c <grub_minix_mount>:
 33c:	stp	x29, x30, [sp, #-32]!
 340:	mov	x29, sp
 344:	stp	x19, x20, [sp, #16]
 348:	mov	x20, x0
 34c:	mov	x0, #0x78                  	// #120
 350:	bl	0 <grub_malloc>
 354:	mov	x19, x0
 358:	cbz	x0, 3c8 <grub_minix_mount+0x8c>
 35c:	mov	x4, x0
 360:	mov	x3, #0x14                  	// #20
 364:	mov	x0, x20
 368:	mov	x2, #0x0                   	// #0
 36c:	mov	x1, #0x2                   	// #2
 370:	bl	0 <grub_disk_read>
 374:	adrp	x0, 0 <grub_minix_close>
 378:	ldr	x0, [x0]
 37c:	ldr	w0, [x0]
 380:	cbnz	w0, 3ec <grub_minix_mount+0xb0>
 384:	ldrh	w0, [x19, #16]
 388:	mov	w1, #0x2468                	// #9320
 38c:	cmp	w0, w1
 390:	b.ne	3d8 <grub_minix_mount+0x9c>  // b.any
 394:	mov	w0, #0xe                   	// #14
 398:	ldrh	w1, [x19, #10]
 39c:	str	w0, [x19, #104]
 3a0:	cmp	w1, #0x13
 3a4:	b.hi	3ec <grub_minix_mount+0xb0>  // b.pmore
 3a8:	add	w1, w1, #0x9
 3ac:	mov	x0, #0x2                   	// #2
 3b0:	str	x0, [x19, #112]
 3b4:	lsl	x0, x0, x1
 3b8:	str	wzr, [x19, #92]
 3bc:	lsr	x0, x0, #2
 3c0:	str	w0, [x19, #84]
 3c4:	str	x20, [x19, #96]
 3c8:	mov	x0, x19
 3cc:	ldp	x19, x20, [sp, #16]
 3d0:	ldp	x29, x30, [sp], #32
 3d4:	ret
 3d8:	mov	w1, #0x2478                	// #9336
 3dc:	cmp	w0, w1
 3e0:	b.ne	3ec <grub_minix_mount+0xb0>  // b.any
 3e4:	mov	w0, #0x1e                  	// #30
 3e8:	b	398 <grub_minix_mount+0x5c>
 3ec:	mov	x0, x19
 3f0:	bl	0 <grub_free>
 3f4:	adrp	x0, 0 <grub_minix_close>
 3f8:	mov	x19, #0x0                   	// #0
 3fc:	ldr	x1, [x0]
 400:	mov	w0, #0x9                   	// #9
 404:	bl	0 <grub_error>
 408:	b	3c8 <grub_minix_mount+0x8c>
 40c:	nop
	...

0000000000000420 <grub_minix_find_file>:
 420:	stp	x29, x30, [sp, #-128]!
 424:	mov	x29, sp
 428:	stp	x19, x20, [sp, #16]
 42c:	mov	x19, x0
 430:	stp	x21, x22, [sp, #32]
 434:	mov	x21, x1
 438:	stp	x23, x24, [sp, #48]
 43c:	mov	x23, x1
 440:	add	x24, sp, #0x60
 444:	stp	x25, x26, [sp, #64]
 448:	mov	x20, x21
 44c:	ldrb	w0, [x20]
 450:	cmp	w0, #0x2f
 454:	b.eq	48c <grub_minix_find_file+0x6c>  // b.none
 458:	cbz	w0, 610 <grub_minix_find_file+0x1f0>
 45c:	ldrh	w0, [x19, #20]
 460:	tbnz	w0, #14, 494 <grub_minix_find_file+0x74>
 464:	adrp	x0, 0 <grub_minix_close>
 468:	ldr	x1, [x0]
 46c:	mov	w0, #0x4                   	// #4
 470:	bl	0 <grub_error>
 474:	ldp	x19, x20, [sp, #16]
 478:	ldp	x21, x22, [sp, #32]
 47c:	ldp	x23, x24, [sp, #48]
 480:	ldp	x25, x26, [sp, #64]
 484:	ldp	x29, x30, [sp], #128
 488:	ret
 48c:	add	x20, x20, #0x1
 490:	b	44c <grub_minix_find_file+0x2c>
 494:	mov	x21, x20
 498:	ldrb	w0, [x21, #1]!
 49c:	cmp	w0, #0x2f
 4a0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 4a4:	b.ne	498 <grub_minix_find_file+0x78>  // b.any
 4a8:	sub	x25, x21, x20
 4ac:	mov	w22, #0x0                   	// #0
 4b0:	ldr	w0, [x19, #28]
 4b4:	cmp	w0, w22
 4b8:	b.hi	4e0 <grub_minix_find_file+0xc0>  // b.pmore
 4bc:	adrp	x0, 0 <grub_minix_close>
 4c0:	mov	x2, x23
 4c4:	ldr	x1, [x0]
 4c8:	mov	w0, #0x5                   	// #5
 4cc:	bl	0 <grub_error>
 4d0:	adrp	x0, 0 <grub_minix_close>
 4d4:	ldr	x0, [x0]
 4d8:	ldr	w0, [x0]
 4dc:	b	474 <grub_minix_find_file+0x54>
 4e0:	mov	w26, w22
 4e4:	add	x5, sp, #0x5e
 4e8:	mov	x3, x26
 4ec:	mov	x0, x19
 4f0:	mov	x4, #0x2                   	// #2
 4f4:	mov	x2, #0x0                   	// #0
 4f8:	mov	x1, #0x0                   	// #0
 4fc:	bl	54 <grub_minix_read_file>
 500:	tbnz	x0, #63, 4d0 <grub_minix_find_file+0xb0>
 504:	ldrsw	x4, [x19, #104]
 508:	mov	x5, x24
 50c:	add	x3, x26, #0x2
 510:	mov	x0, x19
 514:	mov	x2, #0x0                   	// #0
 518:	mov	x1, #0x0                   	// #0
 51c:	bl	54 <grub_minix_read_file>
 520:	tbnz	x0, #63, 4d0 <grub_minix_find_file+0xb0>
 524:	ldr	w0, [x19, #104]
 528:	mov	x2, x25
 52c:	add	w1, w0, #0x2
 530:	add	w22, w22, w1
 534:	mov	x1, x24
 538:	strb	wzr, [x24, w0, sxtw]
 53c:	mov	x0, x20
 540:	bl	0 <grub_strncmp>
 544:	cbnz	w0, 4b0 <grub_minix_find_file+0x90>
 548:	ldrb	w0, [x24, x25]
 54c:	cbnz	w0, 4b0 <grub_minix_find_file+0x90>
 550:	ldrh	w1, [sp, #94]
 554:	mov	x0, x19
 558:	ldrh	w25, [x19, #88]
 55c:	bl	2e0 <grub_minix_read_inode>
 560:	ldrh	w0, [x19, #20]
 564:	mov	w1, #0xa000                	// #40960
 568:	and	w0, w0, w1
 56c:	cmp	w0, w1
 570:	b.ne	448 <grub_minix_find_file+0x28>  // b.any
 574:	ldr	w0, [x19, #92]
 578:	ldr	w22, [x19, #28]
 57c:	add	w0, w0, #0x1
 580:	str	w0, [x19, #92]
 584:	cmp	w0, #0x8
 588:	b.le	5b0 <grub_minix_find_file+0x190>
 58c:	adrp	x0, 0 <grub_minix_close>
 590:	ldr	x1, [x0]
 594:	mov	w0, #0x19                  	// #25
 598:	bl	0 <grub_error>
 59c:	adrp	x0, 0 <grub_minix_close>
 5a0:	ldr	x0, [x0]
 5a4:	ldr	w0, [x0]
 5a8:	cbz	w0, 448 <grub_minix_find_file+0x28>
 5ac:	b	474 <grub_minix_find_file+0x54>
 5b0:	mov	w22, w22
 5b4:	add	x0, x22, #0x1
 5b8:	bl	0 <grub_malloc>
 5bc:	mov	x20, x0
 5c0:	cbz	x0, 59c <grub_minix_find_file+0x17c>
 5c4:	mov	x5, x0
 5c8:	mov	x4, x22
 5cc:	mov	x0, x19
 5d0:	mov	x3, #0x0                   	// #0
 5d4:	mov	x2, #0x0                   	// #0
 5d8:	mov	x1, #0x0                   	// #0
 5dc:	bl	54 <grub_minix_read_file>
 5e0:	tbnz	x0, #63, 59c <grub_minix_find_file+0x17c>
 5e4:	strb	wzr, [x20, x22]
 5e8:	ldrb	w0, [x20]
 5ec:	cmp	w0, #0x2f
 5f0:	mov	x0, x19
 5f4:	csinc	w1, w25, wzr, ne  // ne = any
 5f8:	bl	2e0 <grub_minix_read_inode>
 5fc:	cbnz	w0, 59c <grub_minix_find_file+0x17c>
 600:	mov	x1, x20
 604:	mov	x0, x19
 608:	bl	420 <grub_minix_find_file>
 60c:	b	59c <grub_minix_find_file+0x17c>
 610:	mov	w0, #0x0                   	// #0
 614:	b	474 <grub_minix_find_file+0x54>
	...

0000000000000638 <grub_minix_dir>:
 638:	stp	x29, x30, [sp, #-144]!
 63c:	mov	x29, sp
 640:	ldr	x0, [x0]
 644:	stp	x19, x20, [sp, #16]
 648:	mov	x20, x1
 64c:	stp	x21, x22, [sp, #32]
 650:	mov	x22, x2
 654:	stp	x23, x24, [sp, #48]
 658:	mov	x23, x3
 65c:	stp	x25, x26, [sp, #64]
 660:	bl	33c <grub_minix_mount>
 664:	adrp	x1, 0 <grub_minix_close>
 668:	ldr	x21, [x1]
 66c:	cbnz	x0, 68c <grub_minix_dir+0x54>
 670:	ldr	w0, [x21]
 674:	ldp	x19, x20, [sp, #16]
 678:	ldp	x21, x22, [sp, #32]
 67c:	ldp	x23, x24, [sp, #48]
 680:	ldp	x25, x26, [sp, #64]
 684:	ldp	x29, x30, [sp], #144
 688:	ret
 68c:	mov	x19, x0
 690:	mov	w1, #0x1                   	// #1
 694:	bl	2e0 <grub_minix_read_inode>
 698:	ldr	w0, [x21]
 69c:	cbnz	w0, 750 <grub_minix_dir+0x118>
 6a0:	mov	x1, x20
 6a4:	mov	x0, x19
 6a8:	bl	420 <grub_minix_find_file>
 6ac:	ldr	w20, [x21]
 6b0:	cbnz	w20, 750 <grub_minix_dir+0x118>
 6b4:	ldrh	w0, [x19, #20]
 6b8:	tbz	w0, #14, 740 <grub_minix_dir+0x108>
 6bc:	add	x24, sp, #0x70
 6c0:	ldr	w0, [x19, #28]
 6c4:	cmp	w0, w20
 6c8:	b.ls	750 <grub_minix_dir+0x118>  // b.plast
 6cc:	mov	x2, #0x10                  	// #16
 6d0:	mov	w1, #0x0                   	// #0
 6d4:	ldrh	w25, [x19, #88]
 6d8:	add	x0, sp, #0x60
 6dc:	mov	w26, w20
 6e0:	bl	0 <grub_memset>
 6e4:	add	x5, sp, #0x5e
 6e8:	mov	x3, x26
 6ec:	mov	x0, x19
 6f0:	mov	x4, #0x2                   	// #2
 6f4:	mov	x2, #0x0                   	// #0
 6f8:	mov	x1, #0x0                   	// #0
 6fc:	bl	54 <grub_minix_read_file>
 700:	tbnz	x0, #63, 670 <grub_minix_dir+0x38>
 704:	ldrsw	x4, [x19, #104]
 708:	mov	x5, x24
 70c:	add	x3, x26, #0x2
 710:	mov	x0, x19
 714:	mov	x2, #0x0                   	// #0
 718:	mov	x1, #0x0                   	// #0
 71c:	bl	54 <grub_minix_read_file>
 720:	tbnz	x0, #63, 670 <grub_minix_dir+0x38>
 724:	ldr	w0, [x19, #104]
 728:	ldrh	w1, [sp, #94]
 72c:	strb	wzr, [x24, w0, sxtw]
 730:	cbnz	w1, 75c <grub_minix_dir+0x124>
 734:	add	w0, w0, #0x2
 738:	add	w20, w20, w0
 73c:	b	6c0 <grub_minix_dir+0x88>
 740:	adrp	x0, 0 <grub_minix_close>
 744:	ldr	x1, [x0]
 748:	mov	w0, #0x4                   	// #4
 74c:	bl	0 <grub_error>
 750:	mov	x0, x19
 754:	bl	0 <grub_free>
 758:	b	670 <grub_minix_dir+0x38>
 75c:	mov	x0, x19
 760:	bl	2e0 <grub_minix_read_inode>
 764:	ldrh	w0, [x19, #20]
 768:	mov	x2, x23
 76c:	ldrb	w1, [sp, #96]
 770:	ubfx	x0, x0, #14, #1
 774:	and	w1, w1, #0xfffffffc
 778:	orr	w0, w0, #0x2
 77c:	orr	w0, w0, w1
 780:	strb	w0, [sp, #96]
 784:	ldr	w0, [x19, #36]
 788:	add	x1, sp, #0x60
 78c:	str	w0, [sp, #100]
 790:	mov	x0, x24
 794:	blr	x22
 798:	cbnz	w0, 750 <grub_minix_dir+0x118>
 79c:	mov	w1, w25
 7a0:	mov	x0, x19
 7a4:	bl	2e0 <grub_minix_read_inode>
 7a8:	ldr	w0, [x19, #104]
 7ac:	b	734 <grub_minix_dir+0xfc>
	...

00000000000007c0 <grub_minix_open>:
 7c0:	stp	x29, x30, [sp, #-48]!
 7c4:	mov	x29, sp
 7c8:	stp	x21, x22, [sp, #32]
 7cc:	mov	x22, x0
 7d0:	mov	x21, x1
 7d4:	ldr	x0, [x0, #8]
 7d8:	stp	x19, x20, [sp, #16]
 7dc:	ldr	x0, [x0]
 7e0:	bl	33c <grub_minix_mount>
 7e4:	adrp	x1, 0 <grub_minix_close>
 7e8:	ldr	x20, [x1]
 7ec:	cbnz	x0, 804 <grub_minix_open+0x44>
 7f0:	ldr	w0, [x20]
 7f4:	ldp	x19, x20, [sp, #16]
 7f8:	ldp	x21, x22, [sp, #32]
 7fc:	ldp	x29, x30, [sp], #48
 800:	ret
 804:	mov	x19, x0
 808:	mov	w1, #0x1                   	// #1
 80c:	bl	2e0 <grub_minix_read_inode>
 810:	ldr	w0, [x20]
 814:	cbz	w0, 824 <grub_minix_open+0x64>
 818:	mov	x0, x19
 81c:	bl	0 <grub_free>
 820:	b	7f0 <grub_minix_open+0x30>
 824:	cbz	x21, 834 <grub_minix_open+0x74>
 828:	ldrb	w0, [x21]
 82c:	cmp	w0, #0x2f
 830:	b.eq	84c <grub_minix_open+0x8c>  // b.none
 834:	adrp	x0, 0 <grub_minix_close>
 838:	mov	x2, x21
 83c:	ldr	x1, [x0]
 840:	mov	w0, #0x7                   	// #7
 844:	bl	0 <grub_error>
 848:	b	7f0 <grub_minix_open+0x30>
 84c:	mov	x1, x21
 850:	mov	x0, x19
 854:	bl	420 <grub_minix_find_file>
 858:	ldr	w0, [x20]
 85c:	cbnz	w0, 818 <grub_minix_open+0x58>
 860:	ldr	w1, [x19, #28]
 864:	str	x1, [x22, #64]
 868:	str	x19, [x22, #80]
 86c:	b	7f4 <grub_minix_open+0x34>
	...

0000000000000880 <grub_mod_init>:
 880:	adrp	x0, 0 <grub_minix_close>
 884:	ldr	x1, [x0]
 888:	adrp	x0, 0 <grub_minix_close>
 88c:	ldr	x0, [x0]
 890:	b	0 <grub_list_push>
 894:	nop
	...

00000000000008a8 <grub_mod_fini>:
 8a8:	adrp	x0, 0 <grub_minix_close>
 8ac:	ldr	x0, [x0]
 8b0:	b	0 <grub_list_remove>
 8b4:	nop
	...
