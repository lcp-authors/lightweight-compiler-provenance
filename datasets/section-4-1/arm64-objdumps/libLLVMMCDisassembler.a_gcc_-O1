In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCDisassembler.a_gcc_-O1:

Disassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMDisasmDispose>:
       0:	cbz	x0, 168 <LLVMDisasmDispose+0x168>
       4:	stp	x29, x30, [sp, #-32]!
       8:	mov	x29, sp
       c:	stp	x19, x20, [sp, #16]
      10:	mov	x19, x0
      14:	adrp	x0, 0 <_ZTVN4llvm17raw_pwrite_streamE>
      18:	ldr	x0, [x0]
      1c:	add	x0, x0, #0x10
      20:	str	x0, [x19, #312]
      24:	add	x0, x19, #0x138
      28:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
      2c:	ldr	x0, [x19, #168]
      30:	add	x1, x19, #0xb8
      34:	cmp	x0, x1
      38:	b.eq	40 <LLVMDisasmDispose+0x40>  // b.none
      3c:	bl	0 <free>
      40:	ldr	x0, [x19, #136]
      44:	add	x1, x19, #0x98
      48:	cmp	x0, x1
      4c:	b.eq	54 <LLVMDisasmDispose+0x54>  // b.none
      50:	bl	0 <_ZdlPv>
      54:	ldr	x0, [x19, #120]
      58:	cbz	x0, 68 <LLVMDisasmDispose+0x68>
      5c:	ldr	x1, [x0]
      60:	ldr	x1, [x1, #8]
      64:	blr	x1
      68:	ldr	x0, [x19, #112]
      6c:	cbz	x0, 7c <LLVMDisasmDispose+0x7c>
      70:	ldr	x1, [x0]
      74:	ldr	x1, [x1, #8]
      78:	blr	x1
      7c:	ldr	x20, [x19, #104]
      80:	cbz	x20, 98 <LLVMDisasmDispose+0x98>
      84:	mov	x0, x20
      88:	bl	0 <_ZN4llvm9MCContextD1Ev>
      8c:	mov	x1, #0x6b8                 	// #1720
      90:	mov	x0, x20
      94:	bl	0 <_ZdlPvm>
      98:	ldr	x0, [x19, #96]
      9c:	cbz	x0, a8 <LLVMDisasmDispose+0xa8>
      a0:	mov	x1, #0x20                  	// #32
      a4:	bl	0 <_ZdlPvm>
      a8:	ldr	x0, [x19, #88]
      ac:	cbz	x0, bc <LLVMDisasmDispose+0xbc>
      b0:	ldr	x1, [x0]
      b4:	ldr	x1, [x1, #8]
      b8:	blr	x1
      bc:	ldr	x20, [x19, #80]
      c0:	cbz	x20, 128 <LLVMDisasmDispose+0x128>
      c4:	ldr	w1, [x20, #216]
      c8:	cbz	w1, e0 <LLVMDisasmDispose+0xe0>
      cc:	ldr	x0, [x20, #200]
      d0:	add	x1, x0, w1, uxtw #3
      d4:	add	x0, x0, #0x8
      d8:	cmp	x1, x0
      dc:	b.ne	d4 <LLVMDisasmDispose+0xd4>  // b.any
      e0:	ldr	w1, [x20, #216]
      e4:	lsl	x1, x1, #3
      e8:	ldr	x0, [x20, #200]
      ec:	bl	0 <_ZdlPvm>
      f0:	ldr	w1, [x20, #184]
      f4:	cbz	w1, 10c <LLVMDisasmDispose+0x10c>
      f8:	ldr	x0, [x20, #168]
      fc:	add	x1, x0, w1, uxtw #3
     100:	add	x0, x0, #0x8
     104:	cmp	x1, x0
     108:	b.ne	100 <LLVMDisasmDispose+0x100>  // b.any
     10c:	ldr	w1, [x20, #184]
     110:	lsl	x1, x1, #3
     114:	ldr	x0, [x20, #168]
     118:	bl	0 <_ZdlPvm>
     11c:	mov	x1, #0xe0                  	// #224
     120:	mov	x0, x20
     124:	bl	0 <_ZdlPvm>
     128:	ldr	x0, [x19, #72]
     12c:	cbz	x0, 13c <LLVMDisasmDispose+0x13c>
     130:	ldr	x1, [x0]
     134:	ldr	x1, [x1, #8]
     138:	blr	x1
     13c:	mov	x1, x19
     140:	ldr	x0, [x1], #16
     144:	cmp	x0, x1
     148:	b.eq	150 <LLVMDisasmDispose+0x150>  // b.none
     14c:	bl	0 <_ZdlPv>
     150:	mov	x1, #0x168                 	// #360
     154:	mov	x0, x19
     158:	bl	0 <_ZdlPvm>
     15c:	ldp	x19, x20, [sp, #16]
     160:	ldp	x29, x30, [sp], #32
     164:	ret
     168:	ret

000000000000016c <LLVMDisasmInstruction>:
     16c:	sub	sp, sp, #0x2c0
     170:	stp	x29, x30, [sp]
     174:	mov	x29, sp
     178:	stp	x19, x20, [sp, #16]
     17c:	stp	x21, x22, [sp, #32]
     180:	stp	x23, x24, [sp, #48]
     184:	stp	x25, x26, [sp, #64]
     188:	mov	x22, x0
     18c:	mov	x21, x1
     190:	mov	x20, x2
     194:	mov	x19, x3
     198:	str	x4, [sp, #104]
     19c:	str	x5, [sp, #96]
     1a0:	str	wzr, [sp, #536]
     1a4:	str	wzr, [sp, #540]
     1a8:	str	xzr, [sp, #544]
     1ac:	add	x24, sp, #0x218
     1b0:	add	x0, sp, #0x238
     1b4:	str	x0, [sp, #552]
     1b8:	str	wzr, [sp, #560]
     1bc:	mov	w0, #0x8                   	// #8
     1c0:	str	w0, [sp, #564]
     1c4:	ldr	x23, [x22, #112]
     1c8:	ldr	x25, [x22, #120]
     1cc:	add	x1, sp, #0x1c8
     1d0:	add	x0, sp, #0x1d8
     1d4:	str	x0, [sp, #456]
     1d8:	str	wzr, [sp, #464]
     1dc:	mov	w0, #0x40                  	// #64
     1e0:	str	w0, [sp, #468]
     1e4:	mov	w0, #0x1                   	// #1
     1e8:	str	w0, [sp, #440]
     1ec:	str	xzr, [sp, #432]
     1f0:	str	xzr, [sp, #424]
     1f4:	str	xzr, [sp, #416]
     1f8:	adrp	x0, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     1fc:	ldr	x0, [x0]
     200:	add	x0, x0, #0x10
     204:	str	x0, [sp, #408]
     208:	str	x1, [sp, #448]
     20c:	add	x26, sp, #0x198
     210:	mov	w3, #0x0                   	// #0
     214:	mov	x2, #0x0                   	// #0
     218:	mov	x1, #0x0                   	// #0
     21c:	mov	x0, x26
     220:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     224:	ldr	x0, [x23]
     228:	ldr	x7, [x0, #16]
     22c:	mov	x6, x26
     230:	mov	x5, x19
     234:	mov	x3, x21
     238:	mov	x4, x20
     23c:	add	x2, sp, #0x2b8
     240:	mov	x1, x24
     244:	mov	x0, x23
     248:	blr	x7
     24c:	cmp	w0, #0x1
     250:	b.ls	978 <LLVMDisasmInstruction+0x80c>  // b.plast
     254:	stp	x27, x28, [sp, #80]
     258:	cmp	w0, #0x3
     25c:	b.ne	960 <LLVMDisasmInstruction+0x7f4>  // b.any
     260:	ldr	x0, [sp, #448]
     264:	ldr	w21, [x0, #8]
     268:	ldr	x23, [x0]
     26c:	add	x1, sp, #0xe0
     270:	add	x0, sp, #0xf0
     274:	str	x0, [sp, #224]
     278:	str	wzr, [sp, #232]
     27c:	mov	w0, #0x40                  	// #64
     280:	str	w0, [sp, #236]
     284:	mov	w24, #0x1                   	// #1
     288:	str	w24, [sp, #144]
     28c:	str	xzr, [sp, #136]
     290:	str	xzr, [sp, #128]
     294:	str	xzr, [sp, #120]
     298:	adrp	x0, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     29c:	ldr	x0, [x0]
     2a0:	add	x0, x0, #0x10
     2a4:	str	x0, [sp, #112]
     2a8:	str	x1, [sp, #152]
     2ac:	add	x20, sp, #0x70
     2b0:	mov	w3, #0x0                   	// #0
     2b4:	mov	x2, #0x0                   	// #0
     2b8:	mov	x1, #0x0                   	// #0
     2bc:	mov	x0, x20
     2c0:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     2c4:	str	w24, [sp, #192]
     2c8:	str	xzr, [sp, #184]
     2cc:	str	xzr, [sp, #176]
     2d0:	str	xzr, [sp, #168]
     2d4:	adrp	x0, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     2d8:	ldr	x0, [x0]
     2dc:	add	x0, x0, #0x10
     2e0:	str	x0, [sp, #160]
     2e4:	str	wzr, [sp, #208]
     2e8:	str	wzr, [sp, #212]
     2ec:	str	x20, [sp, #200]
     2f0:	ldr	w0, [sp, #144]
     2f4:	cbz	w0, 300 <LLVMDisasmInstruction+0x194>
     2f8:	ldr	x0, [sp, #120]
     2fc:	cbz	x0, 328 <LLVMDisasmInstruction+0x1bc>
     300:	ldr	x2, [sp, #128]
     304:	ldr	x0, [sp, #120]
     308:	subs	x20, x2, x0
     30c:	b.ne	358 <LLVMDisasmInstruction+0x1ec>  // b.any
     310:	mov	w3, #0x0                   	// #0
     314:	mov	x2, #0x0                   	// #0
     318:	mov	x1, #0x0                   	// #0
     31c:	add	x0, sp, #0xa0
     320:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     324:	b	374 <LLVMDisasmInstruction+0x208>
     328:	ldr	x0, [sp, #112]
     32c:	ldr	x1, [x0, #80]
     330:	add	x0, sp, #0x70
     334:	blr	x1
     338:	mov	x20, x0
     33c:	cbz	x0, 3fc <LLVMDisasmInstruction+0x290>
     340:	ldr	x1, [sp, #184]
     344:	ldr	x0, [sp, #168]
     348:	cmp	x1, x0
     34c:	b.eq	358 <LLVMDisasmInstruction+0x1ec>  // b.none
     350:	add	x0, sp, #0xa0
     354:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     358:	mov	x0, x20
     35c:	bl	0 <_Znam>
     360:	mov	w3, #0x1                   	// #1
     364:	mov	x2, x20
     368:	mov	x1, x0
     36c:	add	x0, sp, #0xa0
     370:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     374:	ldr	x20, [sp, #200]
     378:	ldr	x1, [x20, #24]
     37c:	ldr	x0, [x20, #8]
     380:	cmp	x1, x0
     384:	b.eq	390 <LLVMDisasmInstruction+0x224>  // b.none
     388:	mov	x0, x20
     38c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     390:	mov	w3, #0x0                   	// #0
     394:	mov	x2, #0x0                   	// #0
     398:	mov	x1, #0x0                   	// #0
     39c:	mov	x0, x20
     3a0:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     3a4:	str	xzr, [sp, #216]
     3a8:	ldr	x0, [x25]
     3ac:	ldr	x7, [x0, #24]
     3b0:	add	x6, sp, #0xa0
     3b4:	ldr	x5, [x22, #88]
     3b8:	mov	x3, x23
     3bc:	mov	x4, x21
     3c0:	mov	x2, x19
     3c4:	add	x1, sp, #0x218
     3c8:	mov	x0, x25
     3cc:	blr	x7
     3d0:	ldr	x0, [x22, #128]
     3d4:	tbnz	w0, #4, 418 <LLVMDisasmInstruction+0x2ac>
     3d8:	ldr	x23, [x22, #168]
     3dc:	ldr	w21, [x22, #176]
     3e0:	ldr	x0, [x22, #72]
     3e4:	ldr	x28, [x0, #48]
     3e8:	ldr	x25, [x0, #56]
     3ec:	cbz	x21, 7dc <LLVMDisasmInstruction+0x670>
     3f0:	add	x26, sp, #0xa0
     3f4:	mov	w27, #0x20                  	// #32
     3f8:	b	6a0 <LLVMDisasmInstruction+0x534>
     3fc:	ldr	x1, [sp, #184]
     400:	ldr	x0, [sp, #168]
     404:	cmp	x1, x0
     408:	b.eq	310 <LLVMDisasmInstruction+0x1a4>  // b.none
     40c:	add	x0, sp, #0xa0
     410:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     414:	b	310 <LLVMDisasmInstruction+0x1a4>
     418:	ldr	x0, [x22, #88]
     41c:	ldr	x2, [x0, #152]
     420:	ldr	x4, [x2, #40]
     424:	ldr	w5, [x2, #52]
     428:	cbz	x4, 4e8 <LLVMDisasmInstruction+0x37c>
     42c:	ldr	x1, [x22, #96]
     430:	ldr	w2, [sp, #536]
     434:	ldr	w3, [x1, #24]
     438:	cmp	w2, w3
     43c:	b.cs	5bc <LLVMDisasmInstruction+0x450>  // b.hs, b.nlast
     440:	ldr	x3, [x1]
     444:	ubfiz	x2, x2, #6, #32
     448:	add	x2, x3, x2
     44c:	ldrh	w1, [x2, #6]
     450:	cmp	w5, w1
     454:	b.ls	5dc <LLVMDisasmInstruction+0x470>  // b.plast
     458:	ubfiz	x2, x1, #1, #16
     45c:	add	x1, x2, w1, uxth
     460:	add	x1, x4, x1, lsl #3
     464:	ldrh	w2, [x1, #8]
     468:	and	w2, w2, #0x3fff
     46c:	sub	w2, w2, #0x3, lsl #12
     470:	sub	w2, w2, #0xffe
     474:	and	w2, w2, #0xffff
     478:	cmp	w2, #0x1
     47c:	b.ls	3d8 <LLVMDisasmInstruction+0x26c>  // b.plast
     480:	ldrh	w5, [x1, #16]
     484:	cbz	w5, 5fc <LLVMDisasmInstruction+0x490>
     488:	ldr	x3, [x0, #136]
     48c:	ldrh	w1, [x1, #14]
     490:	add	w5, w5, w1
     494:	sub	w6, w5, #0x1
     498:	mov	w0, #0x0                   	// #0
     49c:	ubfiz	x2, x1, #2, #32
     4a0:	ldrsh	w4, [x3, x2]
     4a4:	ldrh	w2, [x3, x2]
     4a8:	cmp	w4, w0
     4ac:	csel	w0, w2, w0, ge  // ge = tcont
     4b0:	sxth	w0, w0
     4b4:	cmp	w6, w1
     4b8:	b.eq	600 <LLVMDisasmInstruction+0x494>  // b.none
     4bc:	add	w1, w1, #0x1
     4c0:	cmp	w5, w1
     4c4:	b.ne	49c <LLVMDisasmInstruction+0x330>  // b.any
     4c8:	adrp	x3, 0 <LLVMDisasmDispose>
     4cc:	add	x3, x3, #0x0
     4d0:	mov	w2, #0xab                  	// #171
     4d4:	adrp	x1, 0 <LLVMDisasmDispose>
     4d8:	add	x1, x1, #0x0
     4dc:	adrp	x0, 0 <LLVMDisasmDispose>
     4e0:	add	x0, x0, #0x0
     4e4:	bl	0 <__assert_fail>
     4e8:	ldr	x1, [x22, #136]
     4ec:	ldr	x2, [x22, #144]
     4f0:	cbz	x2, 5b4 <LLVMDisasmInstruction+0x448>
     4f4:	add	x8, sp, #0x130
     4f8:	bl	0 <_ZNK4llvm15MCSubtargetInfo23getInstrItineraryForCPUENS_9StringRefE>
     4fc:	ldr	x1, [x22, #96]
     500:	ldr	w0, [sp, #536]
     504:	ldr	w2, [x1, #24]
     508:	cmp	w0, w2
     50c:	b.cs	57c <LLVMDisasmInstruction+0x410>  // b.hs, b.nlast
     510:	ldr	x1, [x1]
     514:	ubfiz	x0, x0, #6, #32
     518:	add	x0, x1, x0
     51c:	ldrh	w0, [x0, #6]
     520:	ldr	w4, [sp, #560]
     524:	cbz	w4, 5ac <LLVMDisasmInstruction+0x440>
     528:	ldr	x5, [sp, #400]
     52c:	ubfiz	x2, x0, #2, #16
     530:	add	x0, x2, w0, uxth
     534:	add	x2, x5, x0, lsl #1
     538:	ldr	x6, [sp, #384]
     53c:	mov	w19, #0x0                   	// #0
     540:	mov	w1, #0x0                   	// #0
     544:	mov	w7, #0xffffffff            	// #-1
     548:	cbz	x5, 59c <LLVMDisasmInstruction+0x430>
     54c:	ldrh	w0, [x2, #6]
     550:	add	w0, w0, w1
     554:	ldrh	w3, [x2, #8]
     558:	cmp	w3, w0
     55c:	b.ls	5a4 <LLVMDisasmInstruction+0x438>  // b.plast
     560:	ldr	w0, [x6, w0, uxtw #2]
     564:	cmp	w19, w0
     568:	csel	w19, w19, w0, ge  // ge = tcont
     56c:	add	w1, w1, #0x1
     570:	cmp	w4, w1
     574:	b.ne	548 <LLVMDisasmInstruction+0x3dc>  // b.any
     578:	b	604 <LLVMDisasmInstruction+0x498>
     57c:	adrp	x3, 0 <LLVMDisasmDispose>
     580:	add	x3, x3, #0x0
     584:	mov	w2, #0x2d                  	// #45
     588:	adrp	x1, 0 <LLVMDisasmDispose>
     58c:	add	x1, x1, #0x0
     590:	adrp	x0, 0 <LLVMDisasmDispose>
     594:	add	x0, x0, #0x0
     598:	bl	0 <__assert_fail>
     59c:	mov	w0, w7
     5a0:	b	564 <LLVMDisasmInstruction+0x3f8>
     5a4:	mov	w0, w7
     5a8:	b	564 <LLVMDisasmInstruction+0x3f8>
     5ac:	mov	w19, #0x0                   	// #0
     5b0:	b	604 <LLVMDisasmInstruction+0x498>
     5b4:	mov	w19, #0xffffffff            	// #-1
     5b8:	b	604 <LLVMDisasmInstruction+0x498>
     5bc:	adrp	x3, 0 <LLVMDisasmDispose>
     5c0:	add	x3, x3, #0x0
     5c4:	mov	w2, #0x2d                  	// #45
     5c8:	adrp	x1, 0 <LLVMDisasmDispose>
     5cc:	add	x1, x1, #0x0
     5d0:	adrp	x0, 0 <LLVMDisasmDispose>
     5d4:	add	x0, x0, #0x0
     5d8:	bl	0 <__assert_fail>
     5dc:	adrp	x3, 0 <LLVMDisasmDispose>
     5e0:	add	x3, x3, #0x0
     5e4:	mov	w2, #0x15d                 	// #349
     5e8:	adrp	x1, 0 <LLVMDisasmDispose>
     5ec:	add	x1, x1, #0x0
     5f0:	adrp	x0, 0 <LLVMDisasmDispose>
     5f4:	add	x0, x0, #0x0
     5f8:	bl	0 <__assert_fail>
     5fc:	mov	w0, #0x0                   	// #0
     600:	mov	w19, w0
     604:	cmp	w19, #0x1
     608:	b.le	3d8 <LLVMDisasmInstruction+0x26c>
     60c:	add	x0, x22, #0x138
     610:	ldr	x2, [x0, #24]
     614:	ldr	x1, [x0, #16]
     618:	sub	x1, x1, x2
     61c:	cmp	x1, #0x8
     620:	b.ls	64c <LLVMDisasmInstruction+0x4e0>  // b.plast
     624:	adrp	x1, 0 <LLVMDisasmDispose>
     628:	add	x1, x1, #0x0
     62c:	ldr	x3, [x1]
     630:	str	x3, [x2]
     634:	ldrb	w1, [x1, #8]
     638:	strb	w1, [x2, #8]
     63c:	ldr	x1, [x22, #336]
     640:	add	x1, x1, #0x9
     644:	str	x1, [x22, #336]
     648:	b	65c <LLVMDisasmInstruction+0x4f0>
     64c:	mov	x2, #0x9                   	// #9
     650:	adrp	x1, 0 <LLVMDisasmDispose>
     654:	add	x1, x1, #0x0
     658:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     65c:	sxtw	x1, w19
     660:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     664:	ldr	x1, [x0, #24]
     668:	ldr	x2, [x0, #16]
     66c:	cmp	x1, x2
     670:	b.cs	688 <LLVMDisasmInstruction+0x51c>  // b.hs, b.nlast
     674:	add	x2, x1, #0x1
     678:	str	x2, [x0, #24]
     67c:	mov	w0, #0xa                   	// #10
     680:	strb	w0, [x1]
     684:	b	3d8 <LLVMDisasmInstruction+0x26c>
     688:	mov	w1, #0xa                   	// #10
     68c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     690:	b	3d8 <LLVMDisasmInstruction+0x26c>
     694:	mov	w1, #0xa                   	// #10
     698:	mov	x0, x26
     69c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     6a0:	mov	w1, #0x28                  	// #40
     6a4:	mov	x0, x26
     6a8:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     6ac:	mov	x20, #0xffffffffffffffff    	// #-1
     6b0:	cbz	x21, 6d0 <LLVMDisasmInstruction+0x564>
     6b4:	mov	x2, x21
     6b8:	mov	w1, #0xa                   	// #10
     6bc:	mov	x0, x23
     6c0:	bl	0 <memchr>
     6c4:	sub	x20, x0, x23
     6c8:	cmp	x0, #0x0
     6cc:	csinv	x20, x20, xzr, ne  // ne = any
     6d0:	ldr	x0, [sp, #184]
     6d4:	ldr	x1, [sp, #176]
     6d8:	sub	x1, x1, x0
     6dc:	cmp	x25, x1
     6e0:	b.hi	764 <LLVMDisasmInstruction+0x5f8>  // b.pmore
     6e4:	mov	x19, x26
     6e8:	cbnz	x25, 77c <LLVMDisasmInstruction+0x610>
     6ec:	ldr	x0, [x19, #24]
     6f0:	ldr	x1, [x19, #16]
     6f4:	cmp	x0, x1
     6f8:	b.cs	798 <LLVMDisasmInstruction+0x62c>  // b.hs, b.nlast
     6fc:	add	x1, x0, #0x1
     700:	str	x1, [x19, #24]
     704:	strb	w27, [x0]
     708:	cmp	x20, x21
     70c:	csel	x24, x20, x21, ls  // ls = plast
     710:	ldr	x0, [x19, #24]
     714:	ldr	x1, [x19, #16]
     718:	sub	x1, x1, x0
     71c:	cmp	x1, x24
     720:	b.cc	7ac <LLVMDisasmInstruction+0x640>  // b.lo, b.ul, b.last
     724:	cbnz	x24, 7c0 <LLVMDisasmInstruction+0x654>
     728:	add	x20, x20, #0x1
     72c:	cmp	x20, x21
     730:	csel	x20, x20, x21, ls  // ls = plast
     734:	add	x23, x23, x20
     738:	subs	x21, x21, x20
     73c:	b.eq	7dc <LLVMDisasmInstruction+0x670>  // b.none
     740:	ldr	x0, [sp, #184]
     744:	ldr	x1, [sp, #176]
     748:	cmp	x0, x1
     74c:	b.cs	694 <LLVMDisasmInstruction+0x528>  // b.hs, b.nlast
     750:	add	x1, x0, #0x1
     754:	str	x1, [sp, #184]
     758:	mov	w1, #0xa                   	// #10
     75c:	strb	w1, [x0]
     760:	b	6a0 <LLVMDisasmInstruction+0x534>
     764:	mov	x2, x25
     768:	mov	x1, x28
     76c:	mov	x0, x26
     770:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     774:	mov	x19, x0
     778:	b	6ec <LLVMDisasmInstruction+0x580>
     77c:	mov	x2, x25
     780:	mov	x1, x28
     784:	bl	0 <memcpy>
     788:	ldr	x0, [sp, #184]
     78c:	add	x0, x0, x25
     790:	str	x0, [sp, #184]
     794:	b	6ec <LLVMDisasmInstruction+0x580>
     798:	mov	w1, w27
     79c:	mov	x0, x19
     7a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     7a4:	mov	x19, x0
     7a8:	b	708 <LLVMDisasmInstruction+0x59c>
     7ac:	mov	x2, x24
     7b0:	mov	x1, x23
     7b4:	mov	x0, x19
     7b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7bc:	b	728 <LLVMDisasmInstruction+0x5bc>
     7c0:	mov	x2, x24
     7c4:	mov	x1, x23
     7c8:	bl	0 <memcpy>
     7cc:	ldr	x0, [x19, #24]
     7d0:	add	x24, x0, x24
     7d4:	str	x24, [x19, #24]
     7d8:	b	728 <LLVMDisasmInstruction+0x5bc>
     7dc:	ldr	x1, [sp, #184]
     7e0:	ldr	x0, [sp, #168]
     7e4:	cmp	x1, x0
     7e8:	b.eq	7f4 <LLVMDisasmInstruction+0x688>  // b.none
     7ec:	add	x0, sp, #0xa0
     7f0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     7f4:	str	wzr, [x22, #176]
     7f8:	ldr	x0, [sp, #96]
     7fc:	cbz	x0, 8f4 <LLVMDisasmInstruction+0x788>
     800:	ldr	x0, [sp, #96]
     804:	sub	x19, x0, #0x1
     808:	ldr	w0, [sp, #232]
     80c:	cmp	x19, x0
     810:	csel	x19, x19, x0, ls  // ls = plast
     814:	mov	x2, x19
     818:	ldr	x1, [sp, #224]
     81c:	ldr	x20, [sp, #104]
     820:	mov	x0, x20
     824:	bl	0 <memcpy>
     828:	strb	wzr, [x20, x19]
     82c:	ldr	x19, [sp, #696]
     830:	adrp	x0, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     834:	ldr	x0, [x0]
     838:	add	x0, x0, #0x10
     83c:	str	x0, [sp, #160]
     840:	ldr	x1, [sp, #184]
     844:	ldr	x0, [sp, #168]
     848:	cmp	x1, x0
     84c:	b.eq	858 <LLVMDisasmInstruction+0x6ec>  // b.none
     850:	add	x0, sp, #0xa0
     854:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     858:	ldr	x0, [sp, #200]
     85c:	cbz	x0, 8b8 <LLVMDisasmInstruction+0x74c>
     860:	ldr	w0, [sp, #192]
     864:	cbz	w0, 870 <LLVMDisasmInstruction+0x704>
     868:	ldr	x0, [sp, #168]
     86c:	cbz	x0, 914 <LLVMDisasmInstruction+0x7a8>
     870:	ldr	x20, [sp, #176]
     874:	ldr	x0, [sp, #168]
     878:	sub	x20, x20, x0
     87c:	cbz	x20, 92c <LLVMDisasmInstruction+0x7c0>
     880:	ldr	x21, [sp, #200]
     884:	ldr	x1, [x21, #24]
     888:	ldr	x0, [x21, #8]
     88c:	cmp	x1, x0
     890:	b.eq	89c <LLVMDisasmInstruction+0x730>  // b.none
     894:	mov	x0, x21
     898:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     89c:	mov	x0, x20
     8a0:	bl	0 <_Znam>
     8a4:	mov	w3, #0x1                   	// #1
     8a8:	mov	x2, x20
     8ac:	mov	x1, x0
     8b0:	mov	x0, x21
     8b4:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     8b8:	add	x0, sp, #0xa0
     8bc:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     8c0:	adrp	x0, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     8c4:	ldr	x0, [x0]
     8c8:	add	x0, x0, #0x10
     8cc:	str	x0, [sp, #112]
     8d0:	add	x0, sp, #0x70
     8d4:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     8d8:	ldr	x0, [sp, #224]
     8dc:	add	x1, sp, #0xf0
     8e0:	cmp	x0, x1
     8e4:	b.eq	9dc <LLVMDisasmInstruction+0x870>  // b.none
     8e8:	bl	0 <free>
     8ec:	ldp	x27, x28, [sp, #80]
     8f0:	b	97c <LLVMDisasmInstruction+0x810>
     8f4:	adrp	x3, 0 <LLVMDisasmDispose>
     8f8:	add	x3, x3, #0x0
     8fc:	mov	w2, #0x11f                 	// #287
     900:	adrp	x1, 0 <LLVMDisasmDispose>
     904:	add	x1, x1, #0x0
     908:	adrp	x0, 0 <LLVMDisasmDispose>
     90c:	add	x0, x0, #0x0
     910:	bl	0 <__assert_fail>
     914:	ldr	x0, [sp, #160]
     918:	ldr	x1, [x0, #80]
     91c:	add	x0, sp, #0xa0
     920:	blr	x1
     924:	mov	x20, x0
     928:	b	87c <LLVMDisasmInstruction+0x710>
     92c:	ldr	x20, [sp, #200]
     930:	ldr	x1, [x20, #24]
     934:	ldr	x0, [x20, #8]
     938:	cmp	x1, x0
     93c:	b.eq	948 <LLVMDisasmInstruction+0x7dc>  // b.none
     940:	mov	x0, x20
     944:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     948:	mov	w3, #0x0                   	// #0
     94c:	mov	x2, #0x0                   	// #0
     950:	mov	x1, #0x0                   	// #0
     954:	mov	x0, x20
     958:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     95c:	b	8b8 <LLVMDisasmInstruction+0x74c>
     960:	mov	w2, #0x127                 	// #295
     964:	adrp	x1, 0 <LLVMDisasmDispose>
     968:	add	x1, x1, #0x0
     96c:	adrp	x0, 0 <LLVMDisasmDispose>
     970:	add	x0, x0, #0x0
     974:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     978:	mov	x19, #0x0                   	// #0
     97c:	adrp	x0, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     980:	ldr	x0, [x0]
     984:	add	x0, x0, #0x10
     988:	str	x0, [sp, #408]
     98c:	add	x0, sp, #0x198
     990:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     994:	ldr	x0, [sp, #456]
     998:	add	x1, sp, #0x1d8
     99c:	cmp	x0, x1
     9a0:	b.eq	9a8 <LLVMDisasmInstruction+0x83c>  // b.none
     9a4:	bl	0 <free>
     9a8:	ldr	x0, [sp, #552]
     9ac:	add	x1, sp, #0x238
     9b0:	cmp	x0, x1
     9b4:	b.eq	9bc <LLVMDisasmInstruction+0x850>  // b.none
     9b8:	bl	0 <free>
     9bc:	mov	x0, x19
     9c0:	ldp	x19, x20, [sp, #16]
     9c4:	ldp	x21, x22, [sp, #32]
     9c8:	ldp	x23, x24, [sp, #48]
     9cc:	ldp	x25, x26, [sp, #64]
     9d0:	ldp	x29, x30, [sp]
     9d4:	add	sp, sp, #0x2c0
     9d8:	ret
     9dc:	ldp	x27, x28, [sp, #80]
     9e0:	b	97c <LLVMDisasmInstruction+0x810>

00000000000009e4 <LLVMSetDisasmOptions>:
     9e4:	stp	x29, x30, [sp, #-160]!
     9e8:	mov	x29, sp
     9ec:	stp	x19, x20, [sp, #16]
     9f0:	mov	x20, x0
     9f4:	mov	x19, x1
     9f8:	tbz	w1, #0, a18 <LLVMSetDisasmOptions+0x34>
     9fc:	ldr	x0, [x0, #120]
     a00:	mov	w1, #0x1                   	// #1
     a04:	strb	w1, [x0, #40]
     a08:	ldr	x0, [x20, #128]
     a0c:	orr	x0, x0, #0x1
     a10:	str	x0, [x20, #128]
     a14:	and	x19, x19, #0xfffffffffffffffe
     a18:	tbz	w19, #1, a38 <LLVMSetDisasmOptions+0x54>
     a1c:	ldr	x0, [x20, #120]
     a20:	mov	w1, #0x1                   	// #1
     a24:	strb	w1, [x0, #41]
     a28:	ldr	x0, [x20, #128]
     a2c:	orr	x0, x0, #0x2
     a30:	str	x0, [x20, #128]
     a34:	and	x19, x19, #0xfffffffffffffffd
     a38:	tbz	w19, #2, afc <LLVMSetDisasmOptions+0x118>
     a3c:	stp	x21, x22, [sp, #32]
     a40:	stp	x23, x24, [sp, #48]
     a44:	str	x25, [sp, #64]
     a48:	ldr	x22, [x20, #72]
     a4c:	ldr	x24, [x20, #96]
     a50:	ldr	x25, [x20, #80]
     a54:	ldr	w0, [x22, #168]
     a58:	cmp	w0, #0x0
     a5c:	cset	w23, eq  // eq = none
     a60:	ldr	x21, [x20, #64]
     a64:	str	xzr, [sp, #144]
     a68:	mov	w0, #0x4                   	// #4
     a6c:	strb	w0, [sp, #152]
     a70:	mov	w0, #0x1                   	// #1
     a74:	strb	w0, [sp, #153]
     a78:	str	x20, [sp, #136]
     a7c:	add	x1, sp, #0x88
     a80:	add	x0, sp, #0x50
     a84:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     a88:	ldr	x5, [x21, #128]
     a8c:	cbz	x5, b54 <LLVMSetDisasmOptions+0x170>
     a90:	add	x21, sp, #0x50
     a94:	mov	x4, x25
     a98:	mov	x3, x24
     a9c:	mov	x2, x22
     aa0:	mov	w1, w23
     aa4:	mov	x0, x21
     aa8:	blr	x5
     aac:	mov	x22, x0
     ab0:	ldr	x0, [sp, #80]
     ab4:	add	x21, x21, #0x10
     ab8:	cmp	x0, x21
     abc:	b.eq	ac4 <LLVMSetDisasmOptions+0xe0>  // b.none
     ac0:	bl	0 <_ZdlPv>
     ac4:	cbz	x22, b44 <LLVMSetDisasmOptions+0x160>
     ac8:	ldr	x0, [x20, #120]
     acc:	str	x22, [x20, #120]
     ad0:	cbz	x0, ae0 <LLVMSetDisasmOptions+0xfc>
     ad4:	ldr	x1, [x0]
     ad8:	ldr	x1, [x1, #8]
     adc:	blr	x1
     ae0:	ldr	x0, [x20, #128]
     ae4:	orr	x0, x0, #0x4
     ae8:	str	x0, [x20, #128]
     aec:	and	x19, x19, #0xfffffffffffffffb
     af0:	ldp	x21, x22, [sp, #32]
     af4:	ldp	x23, x24, [sp, #48]
     af8:	ldr	x25, [sp, #64]
     afc:	tbz	w19, #3, b1c <LLVMSetDisasmOptions+0x138>
     b00:	ldr	x0, [x20, #120]
     b04:	add	x1, x20, #0x138
     b08:	str	x1, [x0, #8]
     b0c:	ldr	x0, [x20, #128]
     b10:	orr	x0, x0, #0x8
     b14:	str	x0, [x20, #128]
     b18:	and	x19, x19, #0xfffffffffffffff7
     b1c:	tbz	w19, #4, b30 <LLVMSetDisasmOptions+0x14c>
     b20:	ldr	x0, [x20, #128]
     b24:	orr	x0, x0, #0x10
     b28:	str	x0, [x20, #128]
     b2c:	and	x19, x19, #0xffffffffffffffef
     b30:	cmp	x19, #0x0
     b34:	cset	w0, eq  // eq = none
     b38:	ldp	x19, x20, [sp, #16]
     b3c:	ldp	x29, x30, [sp], #160
     b40:	ret
     b44:	ldp	x21, x22, [sp, #32]
     b48:	ldp	x23, x24, [sp, #48]
     b4c:	ldr	x25, [sp, #64]
     b50:	b	afc <LLVMSetDisasmOptions+0x118>
     b54:	ldr	x0, [sp, #80]
     b58:	mov	x22, #0x0                   	// #0
     b5c:	add	x1, sp, #0x60
     b60:	cmp	x0, x1
     b64:	b.ne	ac0 <LLVMSetDisasmOptions+0xdc>  // b.any
     b68:	ldp	x21, x22, [sp, #32]
     b6c:	ldp	x23, x24, [sp, #48]
     b70:	ldr	x25, [sp, #64]
     b74:	b	afc <LLVMSetDisasmOptions+0x118>

0000000000000b78 <LLVMCreateDisasmCPUFeatures>:
     b78:	sub	sp, sp, #0x200
     b7c:	stp	x29, x30, [sp]
     b80:	mov	x29, sp
     b84:	stp	x19, x20, [sp, #16]
     b88:	stp	x21, x22, [sp, #32]
     b8c:	stp	x23, x24, [sp, #48]
     b90:	stp	x25, x26, [sp, #64]
     b94:	mov	x19, x0
     b98:	mov	x23, x1
     b9c:	mov	x25, x2
     ba0:	str	x3, [sp, #96]
     ba4:	str	w4, [sp, #124]
     ba8:	str	x5, [sp, #104]
     bac:	str	x6, [sp, #112]
     bb0:	add	x0, sp, #0x158
     bb4:	str	x0, [sp, #328]
     bb8:	str	xzr, [sp, #336]
     bbc:	strb	wzr, [sp, #344]
     bc0:	add	x0, sp, #0xb8
     bc4:	str	x0, [sp, #168]
     bc8:	mov	x2, #0xffffffffffffffff    	// #-1
     bcc:	cbz	x19, bdc <LLVMCreateDisasmCPUFeatures+0x64>
     bd0:	mov	x0, x19
     bd4:	bl	0 <strlen>
     bd8:	add	x2, x19, x0
     bdc:	add	x21, sp, #0xa8
     be0:	mov	w3, #0x0                   	// #0
     be4:	mov	x1, x19
     be8:	mov	x0, x21
     bec:	bl	0 <LLVMDisasmDispose>
     bf0:	add	x1, sp, #0x148
     bf4:	mov	x0, x21
     bf8:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     bfc:	mov	x20, x0
     c00:	ldr	x0, [sp, #168]
     c04:	add	x21, x21, #0x10
     c08:	cmp	x0, x21
     c0c:	b.eq	c14 <LLVMCreateDisasmCPUFeatures+0x9c>  // b.none
     c10:	bl	0 <_ZdlPv>
     c14:	cbz	x20, 125c <LLVMCreateDisasmCPUFeatures+0x6e4>
     c18:	mov	x0, #0x0                   	// #0
     c1c:	cbz	x19, c28 <LLVMCreateDisasmCPUFeatures+0xb0>
     c20:	mov	x0, x19
     c24:	bl	0 <strlen>
     c28:	str	x19, [sp, #152]
     c2c:	str	x0, [sp, #160]
     c30:	ldr	x21, [x20, #72]
     c34:	cbz	x21, 12c8 <LLVMCreateDisasmCPUFeatures+0x750>
     c38:	str	xzr, [sp, #400]
     c3c:	mov	w0, #0x5                   	// #5
     c40:	strb	w0, [sp, #408]
     c44:	mov	w0, #0x1                   	// #1
     c48:	strb	w0, [sp, #409]
     c4c:	add	x0, sp, #0x98
     c50:	str	x0, [sp, #392]
     c54:	add	x22, sp, #0xa8
     c58:	add	x1, sp, #0x188
     c5c:	mov	x0, x22
     c60:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     c64:	mov	x0, x22
     c68:	blr	x21
     c6c:	mov	x21, x0
     c70:	ldr	x0, [sp, #168]
     c74:	add	x22, x22, #0x10
     c78:	cmp	x0, x22
     c7c:	b.eq	c84 <LLVMCreateDisasmCPUFeatures+0x10c>  // b.none
     c80:	bl	0 <_ZdlPv>
     c84:	cbz	x21, 12c8 <LLVMCreateDisasmCPUFeatures+0x750>
     c88:	add	x0, sp, #0xe8
     c8c:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     c90:	mov	x0, #0x0                   	// #0
     c94:	cbz	x19, ca0 <LLVMCreateDisasmCPUFeatures+0x128>
     c98:	mov	x0, x19
     c9c:	bl	0 <strlen>
     ca0:	str	x19, [sp, #152]
     ca4:	str	x0, [sp, #160]
     ca8:	ldr	x22, [x20, #48]
     cac:	cbz	x22, 12d0 <LLVMCreateDisasmCPUFeatures+0x758>
     cb0:	str	xzr, [sp, #424]
     cb4:	mov	w0, #0x5                   	// #5
     cb8:	strb	w0, [sp, #432]
     cbc:	mov	w0, #0x1                   	// #1
     cc0:	strb	w0, [sp, #433]
     cc4:	add	x0, sp, #0x98
     cc8:	str	x0, [sp, #416]
     ccc:	add	x24, sp, #0xa8
     cd0:	add	x1, sp, #0x1a0
     cd4:	mov	x0, x24
     cd8:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     cdc:	add	x2, sp, #0xe8
     ce0:	mov	x1, x24
     ce4:	mov	x0, x21
     ce8:	blr	x22
     cec:	mov	x22, x0
     cf0:	ldr	x0, [sp, #168]
     cf4:	add	x24, x24, #0x10
     cf8:	cmp	x0, x24
     cfc:	b.eq	d04 <LLVMCreateDisasmCPUFeatures+0x18c>  // b.none
     d00:	bl	0 <_ZdlPv>
     d04:	cbz	x22, 12d0 <LLVMCreateDisasmCPUFeatures+0x758>
     d08:	ldr	x0, [x20, #56]
     d0c:	cbz	x0, 12d8 <LLVMCreateDisasmCPUFeatures+0x760>
     d10:	blr	x0
     d14:	mov	x24, x0
     d18:	cbz	x0, 12d8 <LLVMCreateDisasmCPUFeatures+0x760>
     d1c:	stp	x27, x28, [sp, #80]
     d20:	mov	x26, #0x0                   	// #0
     d24:	cbz	x19, d34 <LLVMCreateDisasmCPUFeatures+0x1bc>
     d28:	mov	x0, x19
     d2c:	bl	0 <strlen>
     d30:	mov	x26, x0
     d34:	str	xzr, [sp, #128]
     d38:	cbz	x23, d48 <LLVMCreateDisasmCPUFeatures+0x1d0>
     d3c:	mov	x0, x23
     d40:	bl	0 <strlen>
     d44:	str	x0, [sp, #128]
     d48:	mov	x28, #0x0                   	// #0
     d4c:	cbz	x25, d5c <LLVMCreateDisasmCPUFeatures+0x1e4>
     d50:	mov	x0, x25
     d54:	bl	0 <strlen>
     d58:	mov	x28, x0
     d5c:	str	x19, [sp, #152]
     d60:	str	x26, [sp, #160]
     d64:	ldr	x27, [x20, #80]
     d68:	cbz	x27, 12e0 <LLVMCreateDisasmCPUFeatures+0x768>
     d6c:	str	xzr, [sp, #448]
     d70:	mov	w0, #0x5                   	// #5
     d74:	strb	w0, [sp, #456]
     d78:	mov	w0, #0x1                   	// #1
     d7c:	strb	w0, [sp, #457]
     d80:	add	x0, sp, #0x98
     d84:	str	x0, [sp, #440]
     d88:	add	x26, sp, #0xa8
     d8c:	add	x1, sp, #0x1b8
     d90:	mov	x0, x26
     d94:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     d98:	mov	x3, x25
     d9c:	mov	x4, x28
     da0:	mov	x1, x23
     da4:	ldr	x2, [sp, #128]
     da8:	mov	x0, x26
     dac:	blr	x27
     db0:	mov	x25, x0
     db4:	ldr	x0, [sp, #168]
     db8:	add	x26, x26, #0x10
     dbc:	cmp	x0, x26
     dc0:	b.eq	dc8 <LLVMCreateDisasmCPUFeatures+0x250>  // b.none
     dc4:	bl	0 <_ZdlPv>
     dc8:	cbz	x25, 12e0 <LLVMCreateDisasmCPUFeatures+0x768>
     dcc:	mov	x0, #0x6b8                 	// #1720
     dd0:	bl	0 <_Znwm>
     dd4:	mov	x26, x0
     dd8:	mov	w6, #0x1                   	// #1
     ddc:	mov	x5, #0x0                   	// #0
     de0:	mov	x4, #0x0                   	// #0
     de4:	mov	x3, #0x0                   	// #0
     de8:	mov	x2, x21
     dec:	mov	x1, x22
     df0:	bl	0 <_ZN4llvm9MCContextC1EPKNS_9MCAsmInfoEPKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrEPKNS_15MCTargetOptionsEb>
     df4:	ldr	x3, [x20, #120]
     df8:	cbz	x3, 12e8 <LLVMCreateDisasmCPUFeatures+0x770>
     dfc:	mov	x2, x26
     e00:	mov	x1, x25
     e04:	mov	x0, x20
     e08:	blr	x3
     e0c:	mov	x27, x0
     e10:	cbz	x0, 12e8 <LLVMCreateDisasmCPUFeatures+0x770>
     e14:	mov	x0, #0x0                   	// #0
     e18:	cbz	x19, e24 <LLVMCreateDisasmCPUFeatures+0x2ac>
     e1c:	mov	x0, x19
     e20:	bl	0 <strlen>
     e24:	str	x19, [sp, #152]
     e28:	str	x0, [sp, #160]
     e2c:	ldr	x28, [x20, #200]
     e30:	adrp	x0, 0 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>
     e34:	ldr	x0, [x0]
     e38:	cmp	x28, #0x0
     e3c:	csel	x28, x0, x28, eq  // eq = none
     e40:	str	xzr, [sp, #472]
     e44:	mov	w0, #0x5                   	// #5
     e48:	strb	w0, [sp, #480]
     e4c:	mov	w0, #0x1                   	// #1
     e50:	strb	w0, [sp, #481]
     e54:	add	x0, sp, #0x98
     e58:	str	x0, [sp, #464]
     e5c:	add	x0, sp, #0xa8
     e60:	add	x1, sp, #0x1d0
     e64:	str	x0, [sp, #128]
     e68:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     e6c:	mov	x1, x26
     e70:	ldr	x0, [sp, #128]
     e74:	blr	x28
     e78:	mov	x28, x0
     e7c:	ldr	x0, [sp, #168]
     e80:	ldr	x1, [sp, #128]
     e84:	add	x1, x1, #0x10
     e88:	cmp	x0, x1
     e8c:	b.eq	e94 <LLVMCreateDisasmCPUFeatures+0x31c>  // b.none
     e90:	bl	0 <_ZdlPv>
     e94:	str	x28, [sp, #224]
     e98:	cbz	x28, 12f8 <LLVMCreateDisasmCPUFeatures+0x780>
     e9c:	mov	x0, #0x0                   	// #0
     ea0:	cbz	x19, eac <LLVMCreateDisasmCPUFeatures+0x334>
     ea4:	mov	x0, x19
     ea8:	bl	0 <strlen>
     eac:	str	x19, [sp, #152]
     eb0:	str	x0, [sp, #160]
     eb4:	ldr	x28, [x20, #208]
     eb8:	adrp	x0, 0 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>
     ebc:	ldr	x0, [x0]
     ec0:	cmp	x28, #0x0
     ec4:	csel	x28, x0, x28, eq  // eq = none
     ec8:	str	xzr, [sp, #496]
     ecc:	mov	w0, #0x5                   	// #5
     ed0:	strb	w0, [sp, #504]
     ed4:	mov	w0, #0x1                   	// #1
     ed8:	strb	w0, [sp, #505]
     edc:	add	x0, sp, #0x98
     ee0:	str	x0, [sp, #488]
     ee4:	add	x0, sp, #0xa8
     ee8:	add	x1, sp, #0x1e8
     eec:	str	x0, [sp, #128]
     ef0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     ef4:	add	x5, sp, #0xe0
     ef8:	mov	x4, x26
     efc:	ldr	x3, [sp, #96]
     f00:	ldr	x2, [sp, #112]
     f04:	ldr	x1, [sp, #104]
     f08:	ldr	x0, [sp, #128]
     f0c:	blr	x28
     f10:	mov	x28, x0
     f14:	ldr	x0, [sp, #168]
     f18:	ldr	x1, [sp, #128]
     f1c:	add	x1, x1, #0x10
     f20:	cmp	x0, x1
     f24:	b.eq	f2c <LLVMCreateDisasmCPUFeatures+0x3b4>  // b.none
     f28:	bl	0 <_ZdlPv>
     f2c:	str	x28, [sp, #360]
     f30:	add	x1, sp, #0x168
     f34:	mov	x0, x27
     f38:	bl	0 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>
     f3c:	ldr	x0, [sp, #360]
     f40:	cbz	x0, f50 <LLVMCreateDisasmCPUFeatures+0x3d8>
     f44:	ldr	x1, [x0]
     f48:	ldr	x1, [x1, #8]
     f4c:	blr	x1
     f50:	ldr	w28, [x22, #168]
     f54:	str	xzr, [sp, #368]
     f58:	str	xzr, [sp, #376]
     f5c:	mov	w0, #0x1                   	// #1
     f60:	strb	w0, [sp, #384]
     f64:	strb	w0, [sp, #385]
     f68:	ldrb	w0, [x19]
     f6c:	cbz	w0, f7c <LLVMCreateDisasmCPUFeatures+0x404>
     f70:	str	x19, [sp, #368]
     f74:	mov	w0, #0x3                   	// #3
     f78:	strb	w0, [sp, #384]
     f7c:	add	x1, sp, #0x170
     f80:	add	x0, sp, #0xa8
     f84:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     f88:	ldr	x5, [x20, #128]
     f8c:	cbz	x5, 1300 <LLVMCreateDisasmCPUFeatures+0x788>
     f90:	add	x0, sp, #0xa8
     f94:	mov	x4, x21
     f98:	mov	x3, x24
     f9c:	mov	x2, x22
     fa0:	mov	w1, w28
     fa4:	mov	x28, x0
     fa8:	blr	x5
     fac:	str	x0, [sp, #128]
     fb0:	ldr	x0, [sp, #168]
     fb4:	add	x28, x28, #0x10
     fb8:	cmp	x0, x28
     fbc:	b.eq	fc4 <LLVMCreateDisasmCPUFeatures+0x44c>  // b.none
     fc0:	bl	0 <_ZdlPv>
     fc4:	ldr	x0, [sp, #128]
     fc8:	cbz	x0, 12f0 <LLVMCreateDisasmCPUFeatures+0x778>
     fcc:	add	x0, sp, #0xa8
     fd0:	str	x0, [sp, #136]
     fd4:	add	x28, sp, #0xb8
     fd8:	str	x28, [sp, #168]
     fdc:	mov	x0, x19
     fe0:	bl	0 <strlen>
     fe4:	mov	w3, #0x0                   	// #0
     fe8:	add	x2, x19, x0
     fec:	mov	x1, x19
     ff0:	ldr	x0, [sp, #136]
     ff4:	bl	0 <LLVMDisasmDispose>
     ff8:	mov	x0, #0x168                 	// #360
     ffc:	bl	0 <_Znwm>
    1000:	mov	x19, x0
    1004:	add	x0, x0, #0x10
    1008:	str	x0, [x19]
    100c:	ldr	x0, [sp, #168]
    1010:	cmp	x0, x28
    1014:	b.eq	1290 <LLVMCreateDisasmCPUFeatures+0x718>  // b.none
    1018:	str	x0, [x19]
    101c:	ldr	x0, [sp, #184]
    1020:	str	x0, [x19, #16]
    1024:	ldr	x0, [sp, #176]
    1028:	str	x0, [x19, #8]
    102c:	add	x28, sp, #0xb8
    1030:	str	x28, [sp, #168]
    1034:	str	xzr, [sp, #176]
    1038:	strb	wzr, [sp, #184]
    103c:	ldr	x0, [sp, #96]
    1040:	str	x0, [x19, #32]
    1044:	ldr	w0, [sp, #124]
    1048:	str	w0, [x19, #40]
    104c:	ldr	x0, [sp, #104]
    1050:	str	x0, [x19, #48]
    1054:	ldr	x0, [sp, #112]
    1058:	str	x0, [x19, #56]
    105c:	str	x20, [x19, #64]
    1060:	str	x22, [x19, #72]
    1064:	str	x21, [x19, #80]
    1068:	str	x25, [x19, #88]
    106c:	str	x24, [x19, #96]
    1070:	str	x26, [x19, #104]
    1074:	str	x27, [x19, #112]
    1078:	ldr	x0, [sp, #128]
    107c:	str	x0, [x19, #120]
    1080:	str	xzr, [x19, #128]
    1084:	add	x0, x19, #0x98
    1088:	str	x0, [x19, #136]
    108c:	str	xzr, [x19, #144]
    1090:	strb	wzr, [x19, #152]
    1094:	add	x0, x19, #0xb8
    1098:	str	x0, [x19, #168]
    109c:	str	wzr, [x19, #176]
    10a0:	mov	w0, #0x80                  	// #128
    10a4:	str	w0, [x19, #180]
    10a8:	add	x0, x19, #0x138
    10ac:	mov	w1, #0x1                   	// #1
    10b0:	str	w1, [x0, #32]
    10b4:	str	xzr, [x0, #24]
    10b8:	str	xzr, [x0, #16]
    10bc:	str	xzr, [x0, #8]
    10c0:	adrp	x1, 0 <_ZTVN4llvm19raw_svector_ostreamE>
    10c4:	ldr	x1, [x1]
    10c8:	add	x1, x1, #0x10
    10cc:	str	x1, [x19, #312]
    10d0:	add	x1, x19, #0xa8
    10d4:	str	x1, [x0, #40]
    10d8:	mov	w3, #0x0                   	// #0
    10dc:	mov	x2, #0x0                   	// #0
    10e0:	mov	x1, #0x0                   	// #0
    10e4:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
    10e8:	ldr	x0, [sp, #168]
    10ec:	cmp	x0, x28
    10f0:	b.eq	10f8 <LLVMCreateDisasmCPUFeatures+0x580>  // b.none
    10f4:	bl	0 <_ZdlPv>
    10f8:	mov	x0, x23
    10fc:	bl	0 <strlen>
    1100:	mov	x4, x0
    1104:	add	x0, x19, #0x88
    1108:	mov	x3, x23
    110c:	ldr	x2, [x0, #8]
    1110:	mov	x1, #0x0                   	// #0
    1114:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1118:	mov	x20, x19
    111c:	mov	x26, #0x0                   	// #0
    1120:	mov	x25, #0x0                   	// #0
    1124:	mov	x24, #0x0                   	// #0
    1128:	mov	x22, #0x0                   	// #0
    112c:	mov	x21, #0x0                   	// #0
    1130:	mov	x27, #0x0                   	// #0
    1134:	ldr	x0, [sp, #224]
    1138:	cbz	x0, 1148 <LLVMCreateDisasmCPUFeatures+0x5d0>
    113c:	ldr	x1, [x0]
    1140:	ldr	x1, [x1, #8]
    1144:	blr	x1
    1148:	cbz	x27, 115c <LLVMCreateDisasmCPUFeatures+0x5e4>
    114c:	ldr	x0, [x27]
    1150:	ldr	x1, [x0, #8]
    1154:	mov	x0, x27
    1158:	blr	x1
    115c:	cbz	x26, 1174 <LLVMCreateDisasmCPUFeatures+0x5fc>
    1160:	mov	x0, x26
    1164:	bl	0 <_ZN4llvm9MCContextD1Ev>
    1168:	mov	x1, #0x6b8                 	// #1720
    116c:	mov	x0, x26
    1170:	bl	0 <_ZdlPvm>
    1174:	cbz	x25, 1188 <LLVMCreateDisasmCPUFeatures+0x610>
    1178:	ldr	x0, [x25]
    117c:	ldr	x1, [x0, #8]
    1180:	mov	x0, x25
    1184:	blr	x1
    1188:	cbz	x24, 1198 <LLVMCreateDisasmCPUFeatures+0x620>
    118c:	mov	x1, #0x20                  	// #32
    1190:	mov	x0, x24
    1194:	bl	0 <_ZdlPvm>
    1198:	cbz	x22, 129c <LLVMCreateDisasmCPUFeatures+0x724>
    119c:	ldp	x27, x28, [sp, #80]
    11a0:	ldr	x0, [x22]
    11a4:	ldr	x1, [x0, #8]
    11a8:	mov	x0, x22
    11ac:	blr	x1
    11b0:	ldr	x19, [sp, #304]
    11b4:	ldr	x22, [sp, #312]
    11b8:	cmp	x19, x22
    11bc:	b.ne	12b4 <LLVMCreateDisasmCPUFeatures+0x73c>  // b.any
    11c0:	ldr	x0, [sp, #304]
    11c4:	cbz	x0, 11cc <LLVMCreateDisasmCPUFeatures+0x654>
    11c8:	bl	0 <_ZdlPv>
    11cc:	ldr	x0, [sp, #272]
    11d0:	add	x1, sp, #0x120
    11d4:	cmp	x0, x1
    11d8:	b.eq	11e0 <LLVMCreateDisasmCPUFeatures+0x668>  // b.none
    11dc:	bl	0 <_ZdlPv>
    11e0:	ldr	x0, [sp, #240]
    11e4:	add	x1, sp, #0x100
    11e8:	cmp	x0, x1
    11ec:	b.eq	11f4 <LLVMCreateDisasmCPUFeatures+0x67c>  // b.none
    11f0:	bl	0 <_ZdlPv>
    11f4:	cbz	x21, 125c <LLVMCreateDisasmCPUFeatures+0x6e4>
    11f8:	ldr	w1, [x21, #216]
    11fc:	cbz	w1, 1214 <LLVMCreateDisasmCPUFeatures+0x69c>
    1200:	ldr	x0, [x21, #200]
    1204:	add	x1, x0, w1, uxtw #3
    1208:	add	x0, x0, #0x8
    120c:	cmp	x1, x0
    1210:	b.ne	1208 <LLVMCreateDisasmCPUFeatures+0x690>  // b.any
    1214:	ldr	w1, [x21, #216]
    1218:	lsl	x1, x1, #3
    121c:	ldr	x0, [x21, #200]
    1220:	bl	0 <_ZdlPvm>
    1224:	ldr	w1, [x21, #184]
    1228:	cbz	w1, 1240 <LLVMCreateDisasmCPUFeatures+0x6c8>
    122c:	ldr	x0, [x21, #168]
    1230:	add	x1, x0, w1, uxtw #3
    1234:	add	x0, x0, #0x8
    1238:	cmp	x1, x0
    123c:	b.ne	1234 <LLVMCreateDisasmCPUFeatures+0x6bc>  // b.any
    1240:	ldr	w1, [x21, #184]
    1244:	lsl	x1, x1, #3
    1248:	ldr	x0, [x21, #168]
    124c:	bl	0 <_ZdlPvm>
    1250:	mov	x1, #0xe0                  	// #224
    1254:	mov	x0, x21
    1258:	bl	0 <_ZdlPvm>
    125c:	ldr	x0, [sp, #328]
    1260:	add	x1, sp, #0x158
    1264:	cmp	x0, x1
    1268:	b.eq	1270 <LLVMCreateDisasmCPUFeatures+0x6f8>  // b.none
    126c:	bl	0 <_ZdlPv>
    1270:	mov	x0, x20
    1274:	ldp	x19, x20, [sp, #16]
    1278:	ldp	x21, x22, [sp, #32]
    127c:	ldp	x23, x24, [sp, #48]
    1280:	ldp	x25, x26, [sp, #64]
    1284:	ldp	x29, x30, [sp]
    1288:	add	sp, sp, #0x200
    128c:	ret
    1290:	ldp	x0, x1, [sp, #184]
    1294:	stp	x0, x1, [x19, #16]
    1298:	b	1024 <LLVMCreateDisasmCPUFeatures+0x4ac>
    129c:	ldp	x27, x28, [sp, #80]
    12a0:	b	11b0 <LLVMCreateDisasmCPUFeatures+0x638>
    12a4:	bl	0 <_ZdlPv>
    12a8:	add	x19, x19, #0x20
    12ac:	cmp	x22, x19
    12b0:	b.eq	11c0 <LLVMCreateDisasmCPUFeatures+0x648>  // b.none
    12b4:	mov	x1, x19
    12b8:	ldr	x0, [x1], #16
    12bc:	cmp	x0, x1
    12c0:	b.ne	12a4 <LLVMCreateDisasmCPUFeatures+0x72c>  // b.any
    12c4:	b	12a8 <LLVMCreateDisasmCPUFeatures+0x730>
    12c8:	mov	x20, #0x0                   	// #0
    12cc:	b	125c <LLVMCreateDisasmCPUFeatures+0x6e4>
    12d0:	mov	x20, #0x0                   	// #0
    12d4:	b	11b0 <LLVMCreateDisasmCPUFeatures+0x638>
    12d8:	mov	x20, #0x0                   	// #0
    12dc:	b	11a0 <LLVMCreateDisasmCPUFeatures+0x628>
    12e0:	mov	x20, #0x0                   	// #0
    12e4:	b	118c <LLVMCreateDisasmCPUFeatures+0x614>
    12e8:	mov	x20, #0x0                   	// #0
    12ec:	b	1160 <LLVMCreateDisasmCPUFeatures+0x5e8>
    12f0:	ldr	x20, [sp, #128]
    12f4:	b	1134 <LLVMCreateDisasmCPUFeatures+0x5bc>
    12f8:	mov	x20, x28
    12fc:	b	114c <LLVMCreateDisasmCPUFeatures+0x5d4>
    1300:	ldr	x0, [sp, #168]
    1304:	str	xzr, [sp, #128]
    1308:	add	x1, sp, #0xb8
    130c:	cmp	x0, x1
    1310:	b.ne	fc0 <LLVMCreateDisasmCPUFeatures+0x448>  // b.any
    1314:	mov	x20, #0x0                   	// #0
    1318:	b	1134 <LLVMCreateDisasmCPUFeatures+0x5bc>

000000000000131c <LLVMCreateDisasmCPU>:
    131c:	stp	x29, x30, [sp, #-16]!
    1320:	mov	x29, sp
    1324:	mov	x6, x5
    1328:	mov	x5, x4
    132c:	mov	w4, w3
    1330:	mov	x3, x2
    1334:	adrp	x2, 0 <LLVMDisasmDispose>
    1338:	add	x2, x2, #0x0
    133c:	bl	b78 <LLVMCreateDisasmCPUFeatures>
    1340:	ldp	x29, x30, [sp], #16
    1344:	ret

0000000000001348 <LLVMCreateDisasm>:
    1348:	stp	x29, x30, [sp, #-16]!
    134c:	mov	x29, sp
    1350:	mov	x8, x1
    1354:	adrp	x7, 0 <LLVMDisasmDispose>
    1358:	add	x1, x7, #0x0
    135c:	mov	x6, x4
    1360:	mov	x5, x3
    1364:	mov	w4, w2
    1368:	mov	x3, x8
    136c:	mov	x2, x1
    1370:	bl	b78 <LLVMCreateDisasmCPUFeatures>
    1374:	ldp	x29, x30, [sp], #16
    1378:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>

MCDisassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>:
   0:	str	xzr, [x3]
   4:	mov	w0, #0x3                   	// #3
   8:	ret

000000000000000c <_ZN4llvm14MCDisassemblerD1Ev>:
   c:	adrp	x1, 0 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>
  10:	ldr	x1, [x1]
  14:	add	x1, x1, #0x10
  18:	str	x1, [x0]
  1c:	ldr	x0, [x0, #24]
  20:	cbz	x0, 40 <_ZN4llvm14MCDisassemblerD1Ev+0x34>
  24:	stp	x29, x30, [sp, #-16]!
  28:	mov	x29, sp
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #8]
  34:	blr	x1
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	ret

0000000000000044 <_ZN4llvm14MCDisassemblerD0Ev>:
  44:	stp	x29, x30, [sp, #-32]!
  48:	mov	x29, sp
  4c:	str	x19, [sp, #16]
  50:	mov	x19, x0
  54:	bl	c <_ZN4llvm14MCDisassemblerD1Ev>
  58:	mov	x1, #0x28                  	// #40
  5c:	mov	x0, x19
  60:	bl	0 <_ZdlPvm>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

0000000000000070 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>:
  70:	mov	x8, x0
  74:	ldr	x0, [x0, #24]
  78:	cbz	x0, b8 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm+0x48>
  7c:	stp	x29, x30, [sp, #-16]!
  80:	mov	x29, sp
  84:	and	w4, w4, #0xff
  88:	mov	x7, x6
  8c:	ldr	x6, [x0]
  90:	ldr	x9, [x6, #16]
  94:	mov	x6, x5
  98:	mov	w5, w4
  9c:	mov	x4, x3
  a0:	mov	x3, x2
  a4:	ldr	x2, [x8, #32]
  a8:	blr	x9
  ac:	and	w0, w0, #0xff
  b0:	ldp	x29, x30, [sp], #16
  b4:	ret
  b8:	mov	w0, #0x0                   	// #0
  bc:	ret

00000000000000c0 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm>:
  c0:	mov	x4, x0
  c4:	ldr	x0, [x0, #24]
  c8:	cbz	x0, f4 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm+0x34>
  cc:	stp	x29, x30, [sp, #-16]!
  d0:	mov	x29, sp
  d4:	mov	x3, x2
  d8:	ldr	x2, [x0]
  dc:	ldr	x5, [x2, #24]
  e0:	mov	x2, x1
  e4:	ldr	x1, [x4, #32]
  e8:	blr	x5
  ec:	ldp	x29, x30, [sp], #16
  f0:	ret
  f4:	ret

00000000000000f8 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>:
  f8:	mov	x2, x0
  fc:	ldr	x3, [x1]
 100:	str	xzr, [x1]
 104:	ldr	x0, [x0, #24]
 108:	str	x3, [x2, #24]
 10c:	cbz	x0, 12c <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE+0x34>
 110:	stp	x29, x30, [sp, #-16]!
 114:	mov	x29, sp
 118:	ldr	x1, [x0]
 11c:	ldr	x1, [x1, #8]
 120:	blr	x1
 124:	ldp	x29, x30, [sp], #16
 128:	ret
 12c:	ret

MCExternalSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>:
   0:	ldr	x6, [x0, #32]
   4:	cbz	x6, 630 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x630>
   8:	stp	x29, x30, [sp, #-64]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x5, x0
  18:	mov	x19, x1
  1c:	mov	x1, x2
  20:	mov	x0, #0x2                   	// #2
  24:	str	x0, [sp, #48]
  28:	add	x4, sp, #0x38
  2c:	add	x2, sp, #0x30
  30:	ldr	x0, [x5, #40]
  34:	blr	x6
  38:	ldr	x0, [sp, #48]
  3c:	cmp	x0, #0x2
  40:	b.eq	80 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x80>  // b.none
  44:	cmp	x0, #0x3
  48:	b.eq	144 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x144>  // b.none
  4c:	cmp	x0, #0x4
  50:	b.eq	1fc <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1fc>  // b.none
  54:	cmp	x0, #0x5
  58:	b.eq	2f8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2f8>  // b.none
  5c:	cmp	x0, #0x6
  60:	b.eq	3b4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3b4>  // b.none
  64:	cmp	x0, #0x7
  68:	b.eq	470 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x470>  // b.none
  6c:	cmp	x0, #0x8
  70:	b.eq	52c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x52c>  // b.none
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #64
  7c:	ret
  80:	str	x21, [sp, #32]
  84:	ldr	x1, [x19, #24]
  88:	ldr	x0, [x19, #16]
  8c:	sub	x0, x0, x1
  90:	cmp	x0, #0x1c
  94:	b.ls	c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xc8>  // b.plast
  98:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
  9c:	add	x0, x0, #0x0
  a0:	ldp	x2, x3, [x0]
  a4:	stp	x2, x3, [x1]
  a8:	ldr	x2, [x0, #16]
  ac:	str	x2, [x1, #16]
  b0:	ldur	x0, [x0, #21]
  b4:	stur	x0, [x1, #21]
  b8:	ldr	x0, [x19, #24]
  bc:	add	x0, x0, #0x1d
  c0:	str	x0, [x19, #24]
  c4:	b	e0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xe0>
  c8:	mov	x2, #0x1d                  	// #29
  cc:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
  d0:	add	x1, x1, #0x0
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  dc:	mov	x19, x0
  e0:	ldr	x21, [sp, #56]
  e4:	cbz	x21, 5e0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x5e0>
  e8:	mov	x0, x21
  ec:	bl	0 <strlen>
  f0:	mov	x20, x0
  f4:	ldr	x0, [x19, #24]
  f8:	ldr	x1, [x19, #16]
  fc:	sub	x1, x1, x0
 100:	cmp	x20, x1
 104:	b.hi	12c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x12c>  // b.pmore
 108:	cbz	x20, 5e8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x5e8>
 10c:	mov	x2, x20
 110:	mov	x1, x21
 114:	bl	0 <memcpy>
 118:	ldr	x0, [x19, #24]
 11c:	add	x20, x0, x20
 120:	str	x20, [x19, #24]
 124:	ldr	x21, [sp, #32]
 128:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 12c:	mov	x2, x20
 130:	mov	x1, x21
 134:	mov	x0, x19
 138:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 13c:	ldr	x21, [sp, #32]
 140:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 144:	ldr	x1, [x19, #24]
 148:	ldr	x0, [x19, #16]
 14c:	sub	x0, x0, x1
 150:	cmp	x0, #0x12
 154:	b.ls	180 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x180>  // b.plast
 158:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 15c:	add	x0, x0, #0x0
 160:	ldp	x2, x3, [x0]
 164:	stp	x2, x3, [x1]
 168:	ldur	w0, [x0, #15]
 16c:	stur	w0, [x1, #15]
 170:	ldr	x0, [x19, #24]
 174:	add	x0, x0, #0x13
 178:	str	x0, [x19, #24]
 17c:	b	194 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x194>
 180:	mov	x2, #0x13                  	// #19
 184:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 188:	add	x1, x1, #0x0
 18c:	mov	x0, x19
 190:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 194:	ldr	x20, [sp, #56]
 198:	mov	x2, #0x0                   	// #0
 19c:	cbz	x20, 1ac <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1ac>
 1a0:	mov	x0, x20
 1a4:	bl	0 <strlen>
 1a8:	mov	x2, x0
 1ac:	mov	w3, #0x0                   	// #0
 1b0:	mov	x1, x20
 1b4:	mov	x0, x19
 1b8:	bl	0 <_ZN4llvm11raw_ostream13write_escapedENS_9StringRefEb>
 1bc:	ldr	x0, [x19, #24]
 1c0:	ldr	x1, [x19, #16]
 1c4:	cmp	x1, x0
 1c8:	b.eq	1e4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1e4>  // b.none
 1cc:	mov	w1, #0x22                  	// #34
 1d0:	strb	w1, [x0]
 1d4:	ldr	x0, [x19, #24]
 1d8:	add	x0, x0, #0x1
 1dc:	str	x0, [x19, #24]
 1e0:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 1e4:	mov	x2, #0x1                   	// #1
 1e8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 1ec:	add	x1, x1, #0x0
 1f0:	mov	x0, x19
 1f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1f8:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 1fc:	str	x21, [sp, #32]
 200:	ldr	x1, [x19, #24]
 204:	ldr	x0, [x19, #16]
 208:	sub	x0, x0, x1
 20c:	cmp	x0, #0x14
 210:	b.ls	23c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x23c>  // b.plast
 214:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 218:	add	x0, x0, #0x0
 21c:	ldp	x2, x3, [x0]
 220:	stp	x2, x3, [x1]
 224:	ldur	x0, [x0, #13]
 228:	stur	x0, [x1, #13]
 22c:	ldr	x0, [x19, #24]
 230:	add	x0, x0, #0x15
 234:	str	x0, [x19, #24]
 238:	b	254 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x254>
 23c:	mov	x2, #0x15                  	// #21
 240:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 244:	add	x1, x1, #0x0
 248:	mov	x0, x19
 24c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 250:	mov	x19, x0
 254:	ldr	x21, [sp, #56]
 258:	cbz	x21, 2b0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2b0>
 25c:	mov	x0, x21
 260:	bl	0 <strlen>
 264:	mov	x20, x0
 268:	ldr	x0, [x19, #24]
 26c:	ldr	x1, [x19, #16]
 270:	sub	x1, x1, x0
 274:	cmp	x20, x1
 278:	b.hi	29c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x29c>  // b.pmore
 27c:	cbz	x20, 2b0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2b0>
 280:	mov	x2, x20
 284:	mov	x1, x21
 288:	bl	0 <memcpy>
 28c:	ldr	x0, [x19, #24]
 290:	add	x20, x0, x20
 294:	str	x20, [x19, #24]
 298:	b	2b0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2b0>
 29c:	mov	x2, x20
 2a0:	mov	x1, x21
 2a4:	mov	x0, x19
 2a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2ac:	mov	x19, x0
 2b0:	ldr	x0, [x19, #24]
 2b4:	ldr	x1, [x19, #16]
 2b8:	cmp	x1, x0
 2bc:	b.eq	2dc <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2dc>  // b.none
 2c0:	mov	w1, #0x22                  	// #34
 2c4:	strb	w1, [x0]
 2c8:	ldr	x0, [x19, #24]
 2cc:	add	x0, x0, #0x1
 2d0:	str	x0, [x19, #24]
 2d4:	ldr	x21, [sp, #32]
 2d8:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 2dc:	mov	x2, #0x1                   	// #1
 2e0:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 2e4:	add	x1, x1, #0x0
 2e8:	mov	x0, x19
 2ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2f0:	ldr	x21, [sp, #32]
 2f4:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 2f8:	str	x21, [sp, #32]
 2fc:	ldr	x1, [x19, #24]
 300:	ldr	x0, [x19, #16]
 304:	sub	x0, x0, x1
 308:	cmp	x0, #0xd
 30c:	b.ls	338 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x338>  // b.plast
 310:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 314:	add	x0, x0, #0x0
 318:	ldr	x2, [x0]
 31c:	str	x2, [x1]
 320:	ldur	x0, [x0, #6]
 324:	stur	x0, [x1, #6]
 328:	ldr	x0, [x19, #24]
 32c:	add	x0, x0, #0xe
 330:	str	x0, [x19, #24]
 334:	b	350 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x350>
 338:	mov	x2, #0xe                   	// #14
 33c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 340:	add	x1, x1, #0x0
 344:	mov	x0, x19
 348:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 34c:	mov	x19, x0
 350:	ldr	x21, [sp, #56]
 354:	cbz	x21, 5f0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x5f0>
 358:	mov	x0, x21
 35c:	bl	0 <strlen>
 360:	mov	x20, x0
 364:	ldr	x0, [x19, #24]
 368:	ldr	x1, [x19, #16]
 36c:	sub	x1, x1, x0
 370:	cmp	x20, x1
 374:	b.hi	39c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x39c>  // b.pmore
 378:	cbz	x20, 5f8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x5f8>
 37c:	mov	x2, x20
 380:	mov	x1, x21
 384:	bl	0 <memcpy>
 388:	ldr	x0, [x19, #24]
 38c:	add	x20, x0, x20
 390:	str	x20, [x19, #24]
 394:	ldr	x21, [sp, #32]
 398:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 39c:	mov	x2, x20
 3a0:	mov	x1, x21
 3a4:	mov	x0, x19
 3a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3ac:	ldr	x21, [sp, #32]
 3b0:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 3b4:	str	x21, [sp, #32]
 3b8:	ldr	x1, [x19, #24]
 3bc:	ldr	x0, [x19, #16]
 3c0:	sub	x0, x0, x1
 3c4:	cmp	x0, #0x11
 3c8:	b.ls	3f4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f4>  // b.plast
 3cc:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 3d0:	add	x0, x0, #0x0
 3d4:	ldp	x2, x3, [x0]
 3d8:	stp	x2, x3, [x1]
 3dc:	ldrh	w0, [x0, #16]
 3e0:	strh	w0, [x1, #16]
 3e4:	ldr	x0, [x19, #24]
 3e8:	add	x0, x0, #0x12
 3ec:	str	x0, [x19, #24]
 3f0:	b	40c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x40c>
 3f4:	mov	x2, #0x12                  	// #18
 3f8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 3fc:	add	x1, x1, #0x0
 400:	mov	x0, x19
 404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 408:	mov	x19, x0
 40c:	ldr	x21, [sp, #56]
 410:	cbz	x21, 600 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x600>
 414:	mov	x0, x21
 418:	bl	0 <strlen>
 41c:	mov	x20, x0
 420:	ldr	x0, [x19, #24]
 424:	ldr	x1, [x19, #16]
 428:	sub	x1, x1, x0
 42c:	cmp	x20, x1
 430:	b.hi	458 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x458>  // b.pmore
 434:	cbz	x20, 608 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x608>
 438:	mov	x2, x20
 43c:	mov	x1, x21
 440:	bl	0 <memcpy>
 444:	ldr	x0, [x19, #24]
 448:	add	x20, x0, x20
 44c:	str	x20, [x19, #24]
 450:	ldr	x21, [sp, #32]
 454:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 458:	mov	x2, x20
 45c:	mov	x1, x21
 460:	mov	x0, x19
 464:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 468:	ldr	x21, [sp, #32]
 46c:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 470:	str	x21, [sp, #32]
 474:	ldr	x1, [x19, #24]
 478:	ldr	x0, [x19, #16]
 47c:	sub	x0, x0, x1
 480:	cmp	x0, #0x12
 484:	b.ls	4b0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x4b0>  // b.plast
 488:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 48c:	add	x0, x0, #0x0
 490:	ldp	x2, x3, [x0]
 494:	stp	x2, x3, [x1]
 498:	ldur	w0, [x0, #15]
 49c:	stur	w0, [x1, #15]
 4a0:	ldr	x0, [x19, #24]
 4a4:	add	x0, x0, #0x13
 4a8:	str	x0, [x19, #24]
 4ac:	b	4c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x4c8>
 4b0:	mov	x2, #0x13                  	// #19
 4b4:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 4b8:	add	x1, x1, #0x0
 4bc:	mov	x0, x19
 4c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4c4:	mov	x19, x0
 4c8:	ldr	x21, [sp, #56]
 4cc:	cbz	x21, 610 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x610>
 4d0:	mov	x0, x21
 4d4:	bl	0 <strlen>
 4d8:	mov	x20, x0
 4dc:	ldr	x0, [x19, #24]
 4e0:	ldr	x1, [x19, #16]
 4e4:	sub	x1, x1, x0
 4e8:	cmp	x20, x1
 4ec:	b.hi	514 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x514>  // b.pmore
 4f0:	cbz	x20, 618 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x618>
 4f4:	mov	x2, x20
 4f8:	mov	x1, x21
 4fc:	bl	0 <memcpy>
 500:	ldr	x0, [x19, #24]
 504:	add	x20, x0, x20
 508:	str	x20, [x19, #24]
 50c:	ldr	x21, [sp, #32]
 510:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 514:	mov	x2, x20
 518:	mov	x1, x21
 51c:	mov	x0, x19
 520:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 524:	ldr	x21, [sp, #32]
 528:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 52c:	str	x21, [sp, #32]
 530:	ldr	x1, [x19, #24]
 534:	ldr	x0, [x19, #16]
 538:	sub	x0, x0, x1
 53c:	cmp	x0, #0xf
 540:	b.ls	564 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x564>  // b.plast
 544:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 548:	add	x0, x0, #0x0
 54c:	ldp	x2, x3, [x0]
 550:	stp	x2, x3, [x1]
 554:	ldr	x0, [x19, #24]
 558:	add	x0, x0, #0x10
 55c:	str	x0, [x19, #24]
 560:	b	57c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x57c>
 564:	mov	x2, #0x10                  	// #16
 568:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 56c:	add	x1, x1, #0x0
 570:	mov	x0, x19
 574:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 578:	mov	x19, x0
 57c:	ldr	x21, [sp, #56]
 580:	cbz	x21, 620 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x620>
 584:	mov	x0, x21
 588:	bl	0 <strlen>
 58c:	mov	x20, x0
 590:	ldr	x0, [x19, #24]
 594:	ldr	x1, [x19, #16]
 598:	sub	x1, x1, x0
 59c:	cmp	x20, x1
 5a0:	b.hi	5c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x5c8>  // b.pmore
 5a4:	cbz	x20, 628 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x628>
 5a8:	mov	x2, x20
 5ac:	mov	x1, x21
 5b0:	bl	0 <memcpy>
 5b4:	ldr	x0, [x19, #24]
 5b8:	add	x20, x0, x20
 5bc:	str	x20, [x19, #24]
 5c0:	ldr	x21, [sp, #32]
 5c4:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 5c8:	mov	x2, x20
 5cc:	mov	x1, x21
 5d0:	mov	x0, x19
 5d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 5d8:	ldr	x21, [sp, #32]
 5dc:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 5e0:	ldr	x21, [sp, #32]
 5e4:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 5e8:	ldr	x21, [sp, #32]
 5ec:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 5f0:	ldr	x21, [sp, #32]
 5f4:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 5f8:	ldr	x21, [sp, #32]
 5fc:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 600:	ldr	x21, [sp, #32]
 604:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 608:	ldr	x21, [sp, #32]
 60c:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 610:	ldr	x21, [sp, #32]
 614:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 618:	ldr	x21, [sp, #32]
 61c:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 620:	ldr	x21, [sp, #32]
 624:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 628:	ldr	x21, [sp, #32]
 62c:	b	74 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x74>
 630:	ret

0000000000000634 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>:
 634:	stp	x29, x30, [sp, #-224]!
 638:	mov	x29, sp
 63c:	stp	x19, x20, [sp, #16]
 640:	stp	x21, x22, [sp, #32]
 644:	stp	x23, x24, [sp, #48]
 648:	stp	x25, x26, [sp, #64]
 64c:	mov	x19, x0
 650:	mov	x20, x1
 654:	mov	x24, x2
 658:	mov	x21, x3
 65c:	mov	x23, x4
 660:	and	w25, w5, #0xff
 664:	mov	x2, x6
 668:	mov	x22, x7
 66c:	stp	xzr, xzr, [sp, #112]
 670:	stp	xzr, xzr, [sp, #128]
 674:	stp	xzr, xzr, [sp, #144]
 678:	stp	xzr, xzr, [sp, #160]
 67c:	str	x3, [sp, #160]
 680:	ldr	x6, [x0, #24]
 684:	cbz	x6, 6a4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x70>
 688:	add	x5, sp, #0x70
 68c:	mov	w4, #0x1                   	// #1
 690:	mov	x3, x7
 694:	mov	x1, x23
 698:	ldr	x0, [x0, #40]
 69c:	blr	x6
 6a0:	cbnz	w0, 72c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xf8>
 6a4:	stp	xzr, xzr, [sp, #112]
 6a8:	stp	xzr, xzr, [sp, #128]
 6ac:	stp	xzr, xzr, [sp, #144]
 6b0:	stp	xzr, xzr, [sp, #160]
 6b4:	ldr	x5, [x19, #32]
 6b8:	cbz	x5, a88 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x454>
 6bc:	eor	w26, w25, #0x1
 6c0:	cmp	w26, #0x0
 6c4:	ccmp	x22, #0x1, #0x0, ne  // ne = any
 6c8:	b.eq	a88 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x454>  // b.none
 6cc:	and	x0, x25, #0xff
 6d0:	str	x0, [sp, #88]
 6d4:	add	x4, sp, #0x60
 6d8:	mov	x3, x23
 6dc:	add	x2, sp, #0x58
 6e0:	mov	x1, x21
 6e4:	ldr	x0, [x19, #40]
 6e8:	blr	x5
 6ec:	mov	x22, x0
 6f0:	cbz	x0, 91c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2e8>
 6f4:	str	x0, [sp, #120]
 6f8:	mov	x0, #0x1                   	// #1
 6fc:	str	x0, [sp, #112]
 700:	ldr	x0, [sp, #88]
 704:	cmp	x0, #0x9
 708:	b.eq	8c0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x28c>  // b.none
 70c:	ldr	x0, [sp, #88]
 710:	cmp	x0, #0x1
 714:	b.eq	928 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2f4>  // b.none
 718:	cmp	x0, #0x5
 71c:	b.eq	9d8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3a4>  // b.none
 720:	cmp	x22, #0x0
 724:	ccmp	w26, #0x0, #0x4, eq  // eq = none
 728:	b.ne	a88 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x454>  // b.any
 72c:	ldr	x0, [sp, #112]
 730:	mov	x21, #0x0                   	// #0
 734:	cbz	x0, 788 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x154>
 738:	ldr	x0, [sp, #120]
 73c:	cbz	x0, a90 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x45c>
 740:	str	x0, [sp, #96]
 744:	bl	0 <strlen>
 748:	str	x0, [sp, #104]
 74c:	str	xzr, [sp, #184]
 750:	mov	w0, #0x5                   	// #5
 754:	strb	w0, [sp, #192]
 758:	mov	w0, #0x1                   	// #1
 75c:	strb	w0, [sp, #193]
 760:	add	x0, sp, #0x60
 764:	str	x0, [sp, #176]
 768:	add	x1, sp, #0xb0
 76c:	ldr	x0, [x19, #8]
 770:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 774:	mov	x3, #0x0                   	// #0
 778:	ldr	x2, [x19, #8]
 77c:	mov	w1, #0x0                   	// #0
 780:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 784:	mov	x21, x0
 788:	ldr	x0, [sp, #136]
 78c:	cbz	x0, b64 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x530>
 790:	ldr	x0, [sp, #144]
 794:	cbz	x0, aa8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x474>
 798:	str	x0, [sp, #96]
 79c:	bl	0 <strlen>
 7a0:	str	x0, [sp, #104]
 7a4:	str	xzr, [sp, #208]
 7a8:	mov	w0, #0x5                   	// #5
 7ac:	strb	w0, [sp, #216]
 7b0:	mov	w0, #0x1                   	// #1
 7b4:	strb	w0, [sp, #217]
 7b8:	add	x0, sp, #0x60
 7bc:	str	x0, [sp, #200]
 7c0:	add	x1, sp, #0xc8
 7c4:	ldr	x0, [x19, #8]
 7c8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 7cc:	mov	x3, #0x0                   	// #0
 7d0:	ldr	x2, [x19, #8]
 7d4:	mov	w1, #0x0                   	// #0
 7d8:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 7dc:	mov	x22, x0
 7e0:	ldr	x0, [sp, #160]
 7e4:	mov	x23, #0x0                   	// #0
 7e8:	cbnz	x0, ac4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x490>
 7ec:	cbz	x22, af4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4c0>
 7f0:	cbz	x21, ad8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4a4>
 7f4:	mov	x4, #0x0                   	// #0
 7f8:	ldr	x3, [x19, #8]
 7fc:	mov	x2, x22
 800:	mov	x1, x21
 804:	mov	w0, #0x11                  	// #17
 808:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 80c:	mov	x21, x0
 810:	cbz	x23, 830 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>
 814:	mov	x4, #0x0                   	// #0
 818:	ldr	x3, [x19, #8]
 81c:	mov	x2, x23
 820:	mov	x1, x21
 824:	mov	w0, #0x0                   	// #0
 828:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 82c:	mov	x21, x0
 830:	ldr	x0, [x19, #16]
 834:	ldr	x1, [x0]
 838:	ldr	x3, [x1, #16]
 83c:	ldr	w2, [sp, #168]
 840:	mov	x1, x21
 844:	blr	x3
 848:	cbz	x0, b5c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x528>
 84c:	mov	x21, #0x0                   	// #0
 850:	mov	x1, #0x4                   	// #4
 854:	bfxil	x21, x1, #0, #8
 858:	mov	x19, x0
 85c:	ldr	w1, [x20, #24]
 860:	ldr	w0, [x20, #28]
 864:	cmp	w1, w0
 868:	b.cs	b24 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4f0>  // b.hs, b.nlast
 86c:	ldr	w0, [x20, #24]
 870:	ldr	x1, [x20, #16]
 874:	lsl	x0, x0, #4
 878:	add	x2, x1, x0
 87c:	str	x21, [x1, x0]
 880:	str	x19, [x2, #8]
 884:	ldr	w0, [x20, #24]
 888:	mov	w1, w0
 88c:	add	x1, x1, #0x1
 890:	ldr	w2, [x20, #28]
 894:	cmp	x1, x2
 898:	b.hi	b3c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x508>  // b.pmore
 89c:	add	w0, w0, #0x1
 8a0:	str	w0, [x20, #24]
 8a4:	mov	w0, #0x1                   	// #1
 8a8:	ldp	x19, x20, [sp, #16]
 8ac:	ldp	x21, x22, [sp, #32]
 8b0:	ldp	x23, x24, [sp, #48]
 8b4:	ldp	x25, x26, [sp, #64]
 8b8:	ldp	x29, x30, [sp], #224
 8bc:	ret
 8c0:	ldr	x23, [sp, #96]
 8c4:	cbz	x23, 70c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd8>
 8c8:	mov	x0, x23
 8cc:	bl	0 <strlen>
 8d0:	mov	x21, x0
 8d4:	ldr	x0, [x24, #24]
 8d8:	ldr	x1, [x24, #16]
 8dc:	sub	x1, x1, x0
 8e0:	cmp	x21, x1
 8e4:	b.hi	908 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2d4>  // b.pmore
 8e8:	cbz	x21, 70c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd8>
 8ec:	mov	x2, x21
 8f0:	mov	x1, x23
 8f4:	bl	0 <memcpy>
 8f8:	ldr	x0, [x24, #24]
 8fc:	add	x21, x0, x21
 900:	str	x21, [x24, #24]
 904:	b	70c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd8>
 908:	mov	x2, x21
 90c:	mov	x1, x23
 910:	mov	x0, x24
 914:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 918:	b	70c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd8>
 91c:	cbz	w25, 70c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd8>
 920:	str	x21, [sp, #160]
 924:	b	70c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xd8>
 928:	ldr	x1, [x24, #24]
 92c:	ldr	x0, [x24, #16]
 930:	sub	x0, x0, x1
 934:	cmp	x0, #0x10
 938:	b.ls	964 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x330>  // b.plast
 93c:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 940:	add	x0, x0, #0x0
 944:	ldp	x2, x3, [x0]
 948:	stp	x2, x3, [x1]
 94c:	ldrb	w0, [x0, #16]
 950:	strb	w0, [x1, #16]
 954:	ldr	x0, [x24, #24]
 958:	add	x0, x0, #0x11
 95c:	str	x0, [x24, #24]
 960:	b	97c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x348>
 964:	mov	x2, #0x11                  	// #17
 968:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 96c:	add	x1, x1, #0x0
 970:	mov	x0, x24
 974:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 978:	mov	x24, x0
 97c:	ldr	x23, [sp, #96]
 980:	cbz	x23, 720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 984:	mov	x0, x23
 988:	bl	0 <strlen>
 98c:	mov	x21, x0
 990:	ldr	x0, [x24, #24]
 994:	ldr	x1, [x24, #16]
 998:	sub	x1, x1, x0
 99c:	cmp	x21, x1
 9a0:	b.hi	9c4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x390>  // b.pmore
 9a4:	cbz	x21, 720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 9a8:	mov	x2, x21
 9ac:	mov	x1, x23
 9b0:	bl	0 <memcpy>
 9b4:	ldr	x0, [x24, #24]
 9b8:	add	x21, x0, x21
 9bc:	str	x21, [x24, #24]
 9c0:	b	720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 9c4:	mov	x2, x21
 9c8:	mov	x1, x23
 9cc:	mov	x0, x24
 9d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 9d4:	b	720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 9d8:	ldr	x1, [x24, #24]
 9dc:	ldr	x0, [x24, #16]
 9e0:	sub	x0, x0, x1
 9e4:	cmp	x0, #0xd
 9e8:	b.ls	a14 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3e0>  // b.plast
 9ec:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 9f0:	add	x0, x0, #0x0
 9f4:	ldr	x2, [x0]
 9f8:	str	x2, [x1]
 9fc:	ldur	x0, [x0, #6]
 a00:	stur	x0, [x1, #6]
 a04:	ldr	x0, [x24, #24]
 a08:	add	x0, x0, #0xe
 a0c:	str	x0, [x24, #24]
 a10:	b	a2c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3f8>
 a14:	mov	x2, #0xe                   	// #14
 a18:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 a1c:	add	x1, x1, #0x0
 a20:	mov	x0, x24
 a24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 a28:	mov	x24, x0
 a2c:	ldr	x23, [sp, #96]
 a30:	cbz	x23, 720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 a34:	mov	x0, x23
 a38:	bl	0 <strlen>
 a3c:	mov	x21, x0
 a40:	ldr	x0, [x24, #24]
 a44:	ldr	x1, [x24, #16]
 a48:	sub	x1, x1, x0
 a4c:	cmp	x21, x1
 a50:	b.hi	a74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>  // b.pmore
 a54:	cbz	x21, 720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 a58:	mov	x2, x21
 a5c:	mov	x1, x23
 a60:	bl	0 <memcpy>
 a64:	ldr	x0, [x24, #24]
 a68:	add	x21, x0, x21
 a6c:	str	x21, [x24, #24]
 a70:	b	720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 a74:	mov	x2, x21
 a78:	mov	x1, x23
 a7c:	mov	x0, x24
 a80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 a84:	b	720 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xec>
 a88:	mov	w0, #0x0                   	// #0
 a8c:	b	8a8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x274>
 a90:	mov	w2, #0x0                   	// #0
 a94:	ldr	x1, [x19, #8]
 a98:	ldrsw	x0, [sp, #128]
 a9c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 aa0:	mov	x21, x0
 aa4:	b	788 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x154>
 aa8:	mov	w2, #0x0                   	// #0
 aac:	ldr	x1, [x19, #8]
 ab0:	ldrsw	x0, [sp, #152]
 ab4:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 ab8:	mov	x22, x0
 abc:	b	7e0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1ac>
 ac0:	mov	x22, #0x0                   	// #0
 ac4:	mov	w2, #0x0                   	// #0
 ac8:	ldr	x1, [x19, #8]
 acc:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 ad0:	mov	x23, x0
 ad4:	b	7ec <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1b8>
 ad8:	mov	x3, #0x0                   	// #0
 adc:	ldr	x2, [x19, #8]
 ae0:	mov	x1, x22
 ae4:	mov	w0, #0x1                   	// #1
 ae8:	bl	0 <_ZN4llvm11MCUnaryExpr6createENS0_6OpcodeEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>
 aec:	mov	x21, x0
 af0:	b	810 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1dc>
 af4:	cbz	x21, b1c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4e8>
 af8:	cbz	x23, 830 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>
 afc:	mov	x4, #0x0                   	// #0
 b00:	ldr	x3, [x19, #8]
 b04:	mov	x2, x23
 b08:	mov	x1, x21
 b0c:	mov	w0, #0x0                   	// #0
 b10:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 b14:	mov	x21, x0
 b18:	b	830 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>
 b1c:	mov	x21, x23
 b20:	b	b70 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x53c>
 b24:	mov	x3, #0x10                  	// #16
 b28:	mov	x2, #0x0                   	// #0
 b2c:	add	x1, x20, #0x20
 b30:	add	x0, x20, x3
 b34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 b38:	b	86c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x238>
 b3c:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 b40:	add	x3, x3, #0x0
 b44:	mov	w2, #0x43                  	// #67
 b48:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 b4c:	add	x1, x1, #0x0
 b50:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 b54:	add	x0, x0, #0x0
 b58:	bl	0 <__assert_fail>
 b5c:	mov	w0, #0x0                   	// #0
 b60:	b	8a8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x274>
 b64:	ldr	x0, [sp, #160]
 b68:	cbnz	x0, ac0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x48c>
 b6c:	cbnz	x21, 830 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>
 b70:	cbnz	x21, 830 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>
 b74:	mov	w2, #0x0                   	// #0
 b78:	ldr	x1, [x19, #8]
 b7c:	mov	x0, #0x0                   	// #0
 b80:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 b84:	mov	x21, x0
 b88:	b	830 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>

0000000000000b8c <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>:
 b8c:	stp	x29, x30, [sp, #-64]!
 b90:	mov	x29, sp
 b94:	stp	x19, x20, [sp, #16]
 b98:	stp	x21, x22, [sp, #32]
 b9c:	str	x23, [sp, #48]
 ba0:	cbz	x4, bfc <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE+0x70>
 ba4:	mov	x22, x1
 ba8:	mov	x21, x2
 bac:	mov	x20, x3
 bb0:	mov	x19, x4
 bb4:	ldr	x23, [x5]
 bb8:	str	xzr, [x5]
 bbc:	mov	x0, #0x30                  	// #48
 bc0:	bl	0 <_Znwm>
 bc4:	str	x19, [x0, #8]
 bc8:	str	x23, [x0, #16]
 bcc:	adrp	x4, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 bd0:	ldr	x4, [x4]
 bd4:	add	x4, x4, #0x10
 bd8:	str	x4, [x0]
 bdc:	str	x22, [x0, #24]
 be0:	str	x21, [x0, #32]
 be4:	str	x20, [x0, #40]
 be8:	ldp	x19, x20, [sp, #16]
 bec:	ldp	x21, x22, [sp, #32]
 bf0:	ldr	x23, [sp, #48]
 bf4:	ldp	x29, x30, [sp], #64
 bf8:	ret
 bfc:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 c00:	add	x3, x3, #0x0
 c04:	mov	w2, #0xc2                  	// #194
 c08:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 c0c:	add	x1, x1, #0x0
 c10:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>
 c14:	add	x0, x0, #0x0
 c18:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD2Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD1Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizerD1Ev>
   c:	ldr	x1, [x1]
  10:	add	x1, x1, #0x10
  14:	str	x1, [x0]
  18:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizerD0Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  24:	mov	x1, #0x30                  	// #48
  28:	mov	x0, x19
  2c:	bl	0 <_ZdlPvm>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

MCRelocationInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16MCRelocationInfoD1Ev>:
   0:	ret

0000000000000004 <_ZN4llvm16MCRelocationInfo28createExprForCAPIVariantKindEPKNS_6MCExprEj>:
   4:	cmp	w2, #0x0
   8:	csel	x0, x1, xzr, eq  // eq = none
   c:	ret

0000000000000010 <_ZN4llvm16MCRelocationInfoD0Ev>:
  10:	stp	x29, x30, [sp, #-32]!
  14:	mov	x29, sp
  18:	str	x19, [sp, #16]
  1c:	mov	x19, x0
  20:	bl	0 <_ZN4llvm16MCRelocationInfoD1Ev>
  24:	mov	x1, #0x10                  	// #16
  28:	mov	x0, x19
  2c:	bl	0 <_ZdlPvm>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

000000000000003c <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>:
  3c:	adrp	x2, 0 <_ZN4llvm16MCRelocationInfoD1Ev>
  40:	ldr	x2, [x2]
  44:	add	x2, x2, #0x10
  48:	str	x2, [x0]
  4c:	str	x1, [x0, #8]
  50:	ret

0000000000000054 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>:
  54:	stp	x29, x30, [sp, #-32]!
  58:	mov	x29, sp
  5c:	stp	x19, x20, [sp, #16]
  60:	mov	x20, x1
  64:	mov	x0, #0x10                  	// #16
  68:	bl	0 <_Znwm>
  6c:	mov	x19, x0
  70:	mov	x1, x20
  74:	bl	3c <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret

MCSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12MCSymbolizerD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm12MCSymbolizerD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	ldr	x0, [x0, #16]
  14:	cbz	x0, 34 <_ZN4llvm12MCSymbolizerD1Ev+0x34>
  18:	stp	x29, x30, [sp, #-16]!
  1c:	mov	x29, sp
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #8]
  28:	blr	x1
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ret

0000000000000038 <_ZN4llvm12MCSymbolizerD0Ev>:
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	str	x19, [sp, #16]
  44:	mov	x19, x0
  48:	bl	0 <_ZN4llvm12MCSymbolizerD1Ev>
  4c:	mov	x1, #0x18                  	// #24
  50:	mov	x0, x19
  54:	bl	0 <_ZdlPvm>
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
