In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAggressiveInstCombine.a_gcc_-O2:

AggressiveInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x20, x0
      10:	bl	0 <_ZN4llvm38initializeDominatorTreeWrapperPassPassERNS_12PassRegistryE>
      14:	mov	x0, x20
      18:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
      1c:	mov	x0, #0x50                  	// #80
      20:	bl	0 <_Znwm>
      24:	mov	x19, x0
      28:	mov	x3, #0x21                  	// #33
      2c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      30:	add	x0, x1, #0x0
      34:	mov	x5, #0x16                  	// #22
      38:	adrp	x2, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      3c:	stp	x0, x3, [x19]
      40:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      44:	add	x3, x3, #0x0
      48:	add	x2, x2, #0x0
      4c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      50:	add	x1, x1, #0x0
      54:	mov	x0, x20
      58:	stp	x2, x5, [x19, #16]
      5c:	mov	w2, #0x1                   	// #1
      60:	str	x1, [x19, #32]
      64:	mov	x1, x19
      68:	strh	wzr, [x19, #40]
      6c:	strb	wzr, [x19, #42]
      70:	stp	xzr, xzr, [x19, #48]
      74:	str	xzr, [x19, #64]
      78:	str	x3, [x19, #72]
      7c:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
      80:	mov	x0, x19
      84:	ldp	x19, x20, [sp, #16]
      88:	ldp	x29, x30, [sp], #32
      8c:	ret

0000000000000090 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD1Ev>:
      90:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      94:	ldr	x1, [x1]
      98:	add	x1, x1, #0x10
      9c:	str	x1, [x0]
      a0:	b	0 <_ZN4llvm4PassD2Ev>
      a4:	nop

00000000000000a8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD0Ev>:
      a8:	stp	x29, x30, [sp, #-32]!
      ac:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      b0:	mov	x29, sp
      b4:	ldr	x1, [x1]
      b8:	str	x19, [sp, #16]
      bc:	mov	x19, x0
      c0:	add	x1, x1, #0x10
      c4:	str	x1, [x0]
      c8:	bl	0 <_ZN4llvm4PassD2Ev>
      cc:	mov	x0, x19
      d0:	mov	x1, #0x20                  	// #32
      d4:	ldr	x19, [sp, #16]
      d8:	ldp	x29, x30, [sp], #32
      dc:	b	0 <_ZdlPvm>

00000000000000e0 <_ZN4llvm3isaINS_11InstructionEPKNS_5ValueEEEbRKT0_.isra.0.part.0>:
      e0:	stp	x29, x30, [sp, #-16]!
      e4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      e8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      ec:	mov	x29, sp
      f0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
      f4:	add	x3, x3, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x0, x0, #0x0
     100:	mov	w2, #0x69                  	// #105
     104:	bl	0 <__assert_fail>

0000000000000108 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
     108:	stp	x29, x30, [sp, #-16]!
     10c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     110:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     114:	mov	x29, sp
     118:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     11c:	add	x3, x3, #0x0
     120:	add	x1, x1, #0x0
     124:	add	x0, x0, #0x0
     128:	mov	w2, #0x69                  	// #105
     12c:	bl	0 <__assert_fail>

0000000000000130 <_ZN4llvm3isaINS_11ConstantIntEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
     130:	stp	x29, x30, [sp, #-16]!
     134:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     138:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     13c:	mov	x29, sp
     140:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     144:	add	x3, x3, #0x0
     148:	add	x1, x1, #0x0
     14c:	add	x0, x0, #0x0
     150:	mov	w2, #0x69                  	// #105
     154:	bl	0 <__assert_fail>

0000000000000158 <_ZN4llvm13isa_impl_wrapINS_12ConstantExprEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>:
     158:	stp	x29, x30, [sp, #-16]!
     15c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     160:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     164:	mov	x29, sp
     168:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     16c:	add	x3, x3, #0x0
     170:	add	x1, x1, #0x0
     174:	add	x0, x0, #0x0
     178:	mov	w2, #0x69                  	// #105
     17c:	bl	0 <__assert_fail>

0000000000000180 <_ZN4llvm13isa_impl_wrapINS_10VectorTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>:
     180:	stp	x29, x30, [sp, #-16]!
     184:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     188:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     18c:	mov	x29, sp
     190:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     194:	add	x3, x3, #0x0
     198:	add	x1, x1, #0x0
     19c:	add	x0, x0, #0x0
     1a0:	mov	w2, #0x69                  	// #105
     1a4:	bl	0 <__assert_fail>

00000000000001a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>:
     1a8:	stp	x29, x30, [sp, #-16]!
     1ac:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1b0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1b4:	mov	x29, sp
     1b8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1bc:	add	x3, x3, #0x0
     1c0:	add	x1, x1, #0x0
     1c4:	add	x0, x0, #0x0
     1c8:	mov	w2, #0x69                  	// #105
     1cc:	bl	0 <__assert_fail>

00000000000001d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>:
     1d0:	stp	x29, x30, [sp, #-16]!
     1d4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1d8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1dc:	mov	x29, sp
     1e0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     1e4:	add	x3, x3, #0x0
     1e8:	add	x1, x1, #0x0
     1ec:	add	x0, x0, #0x0
     1f0:	mov	w2, #0x69                  	// #105
     1f4:	bl	0 <__assert_fail>

00000000000001f8 <_ZN4llvm3isaINS_11ConstantIntEPNS_8ConstantEEEbRKT0_.isra.0.part.0>:
     1f8:	stp	x29, x30, [sp, #-16]!
     1fc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     200:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     204:	mov	x29, sp
     208:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     20c:	add	x3, x3, #0x0
     210:	add	x1, x1, #0x0
     214:	add	x0, x0, #0x0
     218:	mov	w2, #0x69                  	// #105
     21c:	bl	0 <__assert_fail>

0000000000000220 <_ZN4llvm3isaINS_12ConstantExprEPNS_8ConstantEEEbRKT0_.isra.0.part.0>:
     220:	stp	x29, x30, [sp, #-16]!
     224:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     228:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     22c:	mov	x29, sp
     230:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     234:	add	x3, x3, #0x0
     238:	add	x1, x1, #0x0
     23c:	add	x0, x0, #0x0
     240:	mov	w2, #0x69                  	// #105
     244:	bl	0 <__assert_fail>

0000000000000248 <_ZN4llvm3isaINS_10BasicBlockEPS1_EEbRKT0_.isra.0.part.0>:
     248:	stp	x29, x30, [sp, #-16]!
     24c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     250:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     254:	mov	x29, sp
     258:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     25c:	add	x3, x3, #0x0
     260:	add	x1, x1, #0x0
     264:	add	x0, x0, #0x0
     268:	mov	w2, #0x69                  	// #105
     26c:	bl	0 <__assert_fail>

0000000000000270 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     270:	stp	x29, x30, [sp, #-48]!
     274:	mov	x0, x1
     278:	mov	x29, sp
     27c:	stp	x19, x20, [sp, #16]
     280:	adrp	x20, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     284:	mov	x19, x1
     288:	str	x21, [sp, #32]
     28c:	bl	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>
     290:	ldr	x1, [x20]
     294:	mov	x0, x19
     298:	add	x21, x19, #0x70
     29c:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2a0:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
     2a4:	mov	x0, x19
     2a8:	ldr	x1, [x1]
     2ac:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2b0:	ldp	w1, w0, [x19, #120]
     2b4:	cmp	w1, w0
     2b8:	b.cs	390 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x120>  // b.hs, b.nlast
     2bc:	ldr	x2, [x19, #112]
     2c0:	adrp	x0, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     2c4:	ldr	x0, [x0]
     2c8:	str	x0, [x2, w1, uxtw #3]
     2cc:	ldp	w0, w2, [x19, #120]
     2d0:	mov	w1, w0
     2d4:	add	x1, x1, #0x1
     2d8:	cmp	x1, w2, uxtw
     2dc:	b.hi	400 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     2e0:	add	w0, w0, #0x1
     2e4:	str	w0, [x19, #120]
     2e8:	cmp	w2, w0
     2ec:	b.ls	3ac <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x13c>  // b.plast
     2f0:	ldr	x2, [x19, #112]
     2f4:	adrp	x1, 0 <_ZN4llvm18BasicAAWrapperPass2IDE>
     2f8:	ldr	x1, [x1]
     2fc:	str	x1, [x2, w0, uxtw #3]
     300:	ldp	w0, w2, [x19, #120]
     304:	mov	w1, w0
     308:	add	x1, x1, #0x1
     30c:	cmp	x1, w2, uxtw
     310:	b.hi	400 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     314:	add	w0, w0, #0x1
     318:	str	w0, [x19, #120]
     31c:	cmp	w2, w0
     320:	b.ls	3e4 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x174>  // b.plast
     324:	ldr	x1, [x19, #112]
     328:	ldr	x20, [x20]
     32c:	str	x20, [x1, w0, uxtw #3]
     330:	ldp	w0, w2, [x19, #120]
     334:	mov	w1, w0
     338:	add	x1, x1, #0x1
     33c:	cmp	x1, w2, uxtw
     340:	b.hi	400 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     344:	add	w0, w0, #0x1
     348:	str	w0, [x19, #120]
     34c:	cmp	w2, w0
     350:	b.ls	3c8 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x158>  // b.plast
     354:	ldr	x2, [x19, #112]
     358:	adrp	x1, 0 <_ZN4llvm20GlobalsAAWrapperPass2IDE>
     35c:	ldr	x1, [x1]
     360:	str	x1, [x2, w0, uxtw #3]
     364:	ldp	w0, w2, [x19, #120]
     368:	mov	w1, w0
     36c:	add	x1, x1, #0x1
     370:	cmp	x1, x2
     374:	b.hi	400 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x190>  // b.pmore
     378:	add	w0, w0, #0x1
     37c:	ldr	x21, [sp, #32]
     380:	str	w0, [x19, #120]
     384:	ldp	x19, x20, [sp, #16]
     388:	ldp	x29, x30, [sp], #48
     38c:	ret
     390:	add	x1, x19, #0x80
     394:	mov	x0, x21
     398:	mov	x3, #0x8                   	// #8
     39c:	mov	x2, #0x0                   	// #0
     3a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3a4:	ldr	w1, [x19, #120]
     3a8:	b	2bc <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x4c>
     3ac:	mov	x0, x21
     3b0:	add	x1, x19, #0x80
     3b4:	mov	x3, #0x8                   	// #8
     3b8:	mov	x2, #0x0                   	// #0
     3bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3c0:	ldr	w0, [x19, #120]
     3c4:	b	2f0 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x80>
     3c8:	mov	x0, x21
     3cc:	add	x1, x19, #0x80
     3d0:	mov	x3, #0x8                   	// #8
     3d4:	mov	x2, #0x0                   	// #0
     3d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3dc:	ldr	w0, [x19, #120]
     3e0:	b	354 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0xe4>
     3e4:	mov	x0, x21
     3e8:	add	x1, x19, #0x80
     3ec:	mov	x3, #0x8                   	// #8
     3f0:	mov	x2, #0x0                   	// #0
     3f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3f8:	ldr	w0, [x19, #120]
     3fc:	b	324 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE+0xb4>
     400:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     404:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     408:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     40c:	add	x3, x3, #0x0
     410:	add	x1, x1, #0x0
     414:	add	x0, x0, #0x0
     418:	mov	w2, #0x43                  	// #67
     41c:	bl	0 <__assert_fail>

0000000000000420 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>:
     420:	stp	x29, x30, [sp, #-96]!
     424:	mov	x29, sp
     428:	stp	x19, x20, [sp, #16]
     42c:	mov	x19, x0
     430:	mov	x20, x1
     434:	stp	x21, x22, [sp, #32]
     438:	mov	x21, #0x1                   	// #1
     43c:	mov	w22, w21
     440:	stp	x23, x24, [sp, #48]
     444:	ldrb	w1, [x20, #24]
     448:	ldrb	w0, [x19, #16]
     44c:	cbz	w1, 4e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xc0>
     450:	cmp	w0, #0x34
     454:	b.eq	594 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x174>  // b.none
     458:	cmp	w0, #0x5
     45c:	b.ne	4f0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xd0>  // b.any
     460:	ldrh	w1, [x19, #18]
     464:	cmp	w1, #0x1c
     468:	mov	w0, w1
     46c:	b.eq	704 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x2e4>  // b.none
     470:	cmp	w0, #0x1a
     474:	b.eq	6a4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x284>  // b.none
     478:	ldr	x1, [x20]
     47c:	mov	x0, #0x0                   	// #0
     480:	cbz	x1, 548 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x128>
     484:	ldr	w1, [x20, #16]
     488:	cmp	x0, w1, uxtw
     48c:	b.cs	558 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x138>  // b.hs, b.nlast
     490:	cmp	w0, w1
     494:	mov	w3, w0
     498:	b.cs	a3c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x61c>  // b.hs, b.nlast
     49c:	mov	x2, #0x1                   	// #1
     4a0:	cmp	w1, #0x40
     4a4:	lsl	x0, x2, x0
     4a8:	ldr	x1, [x20, #8]
     4ac:	b.ls	664 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x244>  // b.plast
     4b0:	lsr	w3, w3, #6
     4b4:	ldr	x2, [x1, x3, lsl #3]
     4b8:	orr	x0, x2, x0
     4bc:	str	x0, [x1, x3, lsl #3]
     4c0:	ldr	x0, [x20]
     4c4:	ldp	x21, x22, [sp, #32]
     4c8:	cmp	x0, x19
     4cc:	cset	w0, eq  // eq = none
     4d0:	ldp	x19, x20, [sp, #16]
     4d4:	ldp	x23, x24, [sp, #48]
     4d8:	ldp	x29, x30, [sp], #96
     4dc:	ret
     4e0:	cmp	w0, #0x35
     4e4:	b.eq	570 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x150>  // b.none
     4e8:	cmp	w0, #0x5
     4ec:	b.eq	5e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1c0>  // b.none
     4f0:	cmp	w0, #0x32
     4f4:	b.ne	478 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.any
     4f8:	ldur	x22, [x19, #-48]
     4fc:	cbz	x22, 5d4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     500:	ldur	x21, [x19, #-24]
     504:	cbz	x21, 9fc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5dc>
     508:	ldrb	w0, [x21, #16]
     50c:	cmp	w0, #0xd
     510:	b.ne	478 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.any
     514:	ldr	w23, [x21, #32]
     518:	cmp	w23, #0x40
     51c:	b.ls	7d0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3b0>  // b.plast
     520:	add	x0, x21, #0x18
     524:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     528:	sub	w23, w23, w0
     52c:	cmp	w23, #0x40
     530:	b.hi	478 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.pmore
     534:	ldr	x0, [x21, #24]
     538:	mov	x19, x22
     53c:	ldr	x0, [x0]
     540:	ldr	x1, [x20]
     544:	cbnz	x1, 484 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x64>
     548:	ldr	w1, [x20, #16]
     54c:	str	x19, [x20]
     550:	cmp	x0, w1, uxtw
     554:	b.cc	490 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x70>  // b.lo, b.ul, b.last
     558:	mov	w0, #0x0                   	// #0
     55c:	ldp	x19, x20, [sp, #16]
     560:	ldp	x21, x22, [sp, #32]
     564:	ldp	x23, x24, [sp, #48]
     568:	ldp	x29, x30, [sp], #96
     56c:	ret
     570:	ldur	x0, [x19, #-48]
     574:	cbz	x0, 5d4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     578:	ldur	x19, [x19, #-24]
     57c:	cbz	x19, 5d4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     580:	mov	x1, x20
     584:	bl	420 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     588:	tst	w0, #0xff
     58c:	b.eq	558 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x138>  // b.none
     590:	b	444 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x24>
     594:	ldur	x24, [x19, #-48]
     598:	cbz	x24, 5d4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1b4>
     59c:	ldur	x23, [x19, #-24]
     5a0:	cbz	x23, 9fc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5dc>
     5a4:	stp	x25, x26, [sp, #64]
     5a8:	ldrb	w0, [x23, #16]
     5ac:	cmp	w0, #0xd
     5b0:	b.eq	670 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x250>  // b.none
     5b4:	ldr	x1, [x23]
     5b8:	ldrb	w1, [x1, #8]
     5bc:	cmp	w1, #0x10
     5c0:	ccmp	w0, #0x10, #0x2, eq  // eq = none
     5c4:	b.ls	810 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3f0>  // b.plast
     5c8:	ldp	x25, x26, [sp, #64]
     5cc:	mov	x0, x24
     5d0:	cbnz	x24, 578 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x158>
     5d4:	stp	x25, x26, [sp, #64]
     5d8:	str	x27, [sp, #80]
     5dc:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
     5e0:	ldrh	w0, [x19, #18]
     5e4:	cmp	w0, #0x1d
     5e8:	b.ne	470 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x50>  // b.any
     5ec:	ldr	w2, [x19, #20]
     5f0:	ubfx	x2, x2, #0, #28
     5f4:	cbz	w2, a08 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>
     5f8:	mov	w1, w2
     5fc:	ubfiz	x0, x2, #2, #28
     600:	sub	x0, x1, x0
     604:	ldr	x0, [x19, x0, lsl #3]
     608:	cbz	x0, a30 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     60c:	ldrb	w3, [x0, #16]
     610:	cmp	w3, #0x10
     614:	b.hi	63c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     618:	cmp	w2, #0x1
     61c:	b.ls	a08 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>  // b.plast
     620:	sub	x1, x21, x1
     624:	add	x1, x1, x1, lsl #1
     628:	ldr	x19, [x19, x1, lsl #3]
     62c:	cbz	x19, a30 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     630:	ldrb	w1, [x19, #16]
     634:	cmp	w1, #0x10
     638:	b.ls	580 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x160>  // b.plast
     63c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     640:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     644:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     648:	add	x3, x3, #0x0
     64c:	add	x1, x1, #0x0
     650:	add	x0, x0, #0x0
     654:	mov	w2, #0x134                 	// #308
     658:	stp	x25, x26, [sp, #64]
     65c:	str	x27, [sp, #80]
     660:	bl	0 <__assert_fail>
     664:	orr	x0, x1, x0
     668:	str	x0, [x20, #8]
     66c:	b	4c0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xa0>
     670:	ldr	w25, [x23, #32]
     674:	cmp	w25, #0x40
     678:	b.ls	784 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x364>  // b.plast
     67c:	sub	w25, w25, #0x1
     680:	add	x0, x23, #0x18
     684:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     688:	cmp	w25, w0
     68c:	cset	w25, eq  // eq = none
     690:	cbz	w25, 7f0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3d0>
     694:	mov	x19, x24
     698:	ldp	x25, x26, [sp, #64]
     69c:	strb	w22, [x20, #25]
     6a0:	b	444 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x24>
     6a4:	ldr	w0, [x19, #20]
     6a8:	ubfx	x0, x0, #0, #28
     6ac:	cbz	w0, a08 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>
     6b0:	mov	w2, w0
     6b4:	ubfiz	x1, x0, #2, #28
     6b8:	sub	x1, x2, x1
     6bc:	ldr	x22, [x19, x1, lsl #3]
     6c0:	cbz	x22, a30 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     6c4:	ldrb	w1, [x22, #16]
     6c8:	cmp	w1, #0x10
     6cc:	b.hi	63c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     6d0:	cmp	w0, #0x1
     6d4:	b.ls	a08 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>  // b.plast
     6d8:	mov	x0, #0x1                   	// #1
     6dc:	sub	x0, x0, x2
     6e0:	add	x0, x0, x0, lsl #1
     6e4:	ldr	x21, [x19, x0, lsl #3]
     6e8:	cbz	x21, a64 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x644>
     6ec:	ldrb	w0, [x21, #16]
     6f0:	cmp	w0, #0x10
     6f4:	b.hi	63c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     6f8:	cmp	w0, #0xd
     6fc:	b.ne	478 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x58>  // b.any
     700:	b	514 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xf4>
     704:	ldr	w2, [x19, #20]
     708:	ubfx	x2, x2, #0, #28
     70c:	cbz	w2, a08 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>
     710:	mov	w0, w2
     714:	ubfiz	x3, x2, #2, #28
     718:	sub	x3, x0, x3
     71c:	ldr	x24, [x19, x3, lsl #3]
     720:	cbz	x24, a30 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x610>
     724:	ldrb	w3, [x24, #16]
     728:	cmp	w3, #0x10
     72c:	b.hi	63c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     730:	cmp	w2, #0x1
     734:	b.ls	a08 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5e8>  // b.plast
     738:	sub	x0, x21, x0
     73c:	add	x0, x0, x0, lsl #1
     740:	ldr	x23, [x19, x0, lsl #3]
     744:	cbz	x23, a64 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x644>
     748:	ldrb	w0, [x23, #16]
     74c:	cmp	w0, #0x10
     750:	b.hi	63c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x21c>  // b.pmore
     754:	str	x27, [sp, #80]
     758:	cmp	w0, #0xd
     75c:	b.eq	794 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x374>  // b.none
     760:	ldr	x0, [x23]
     764:	ldrb	w0, [x0, #8]
     768:	cmp	w0, #0x10
     76c:	b.eq	8e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4c0>  // b.none
     770:	ldr	x27, [sp, #80]
     774:	cmp	w1, #0x1c
     778:	mov	w0, w1
     77c:	b.eq	5ec <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1cc>  // b.none
     780:	b	470 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x50>
     784:	ldr	x0, [x23, #24]
     788:	cmp	x0, #0x1
     78c:	cset	w25, eq  // eq = none
     790:	b	690 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     794:	stp	x25, x26, [sp, #64]
     798:	ldr	w25, [x23, #32]
     79c:	cmp	w25, #0x40
     7a0:	b.ls	7dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3bc>  // b.plast
     7a4:	sub	w25, w25, #0x1
     7a8:	add	x0, x23, #0x18
     7ac:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     7b0:	cmp	w25, w0
     7b4:	ldp	x25, x26, [sp, #64]
     7b8:	cset	w27, eq  // eq = none
     7bc:	cbz	w27, a70 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x650>
     7c0:	mov	x19, x24
     7c4:	ldr	x27, [sp, #80]
     7c8:	strb	w22, [x20, #25]
     7cc:	b	444 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x24>
     7d0:	mov	x19, x22
     7d4:	ldr	x0, [x21, #24]
     7d8:	b	540 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x120>
     7dc:	ldr	x0, [x23, #24]
     7e0:	ldp	x25, x26, [sp, #64]
     7e4:	cmp	x0, #0x1
     7e8:	cset	w27, eq  // eq = none
     7ec:	b	7bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     7f0:	ldp	x25, x26, [sp, #64]
     7f4:	ldrb	w0, [x19, #16]
     7f8:	cmp	w0, #0x34
     7fc:	b.eq	8d8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4b8>  // b.none
     800:	cmp	w0, #0x5
     804:	b.ne	4f0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xd0>  // b.any
     808:	ldrh	w1, [x19, #18]
     80c:	b	774 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x354>
     810:	mov	x0, x23
     814:	mov	w1, #0x0                   	// #0
     818:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
     81c:	cbz	x0, 82c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x40c>
     820:	ldrb	w1, [x0, #16]
     824:	cmp	w1, #0xd
     828:	b.eq	994 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x574>  // b.none
     82c:	ldr	x0, [x23]
     830:	str	x27, [sp, #80]
     834:	cbz	x0, acc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x6ac>
     838:	ldrb	w1, [x0, #8]
     83c:	cmp	w1, #0x10
     840:	b.ne	aac <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x68c>  // b.any
     844:	ldr	x0, [x0, #32]
     848:	mov	w26, w0
     84c:	cbz	w0, a9c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x67c>
     850:	mov	w25, #0x0                   	// #0
     854:	mov	w27, #0x0                   	// #0
     858:	mov	w1, w27
     85c:	mov	x0, x23
     860:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
     864:	cbz	x0, 87c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     868:	ldrb	w1, [x0, #16]
     86c:	cmp	w1, #0x9
     870:	b.eq	8b0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x490>  // b.none
     874:	cmp	w1, #0xd
     878:	b.eq	88c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x46c>  // b.none
     87c:	ldrb	w0, [x19, #16]
     880:	ldp	x25, x26, [sp, #64]
     884:	ldr	x27, [sp, #80]
     888:	b	7f8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3d8>
     88c:	ldr	w25, [x0, #32]
     890:	cmp	w25, #0x40
     894:	b.ls	8c4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4a4>  // b.plast
     898:	sub	w25, w25, #0x1
     89c:	add	x0, x0, #0x18
     8a0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     8a4:	cmp	w25, w0
     8a8:	cset	w25, eq  // eq = none
     8ac:	cbz	w25, 87c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     8b0:	add	w27, w27, #0x1
     8b4:	cmp	w26, w27
     8b8:	b.ne	858 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x438>  // b.any
     8bc:	ldr	x27, [sp, #80]
     8c0:	b	690 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     8c4:	ldr	x0, [x0, #24]
     8c8:	cmp	x0, #0x1
     8cc:	cset	w25, eq  // eq = none
     8d0:	cbnz	w25, 8b0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x490>
     8d4:	b	87c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     8d8:	ldur	x24, [x19, #-48]
     8dc:	b	5cc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x1ac>
     8e0:	mov	x0, x23
     8e4:	mov	w1, #0x0                   	// #0
     8e8:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
     8ec:	cbz	x0, 8fc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x4dc>
     8f0:	ldrb	w1, [x0, #16]
     8f4:	cmp	w1, #0xd
     8f8:	b.eq	9b8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x598>  // b.none
     8fc:	ldr	x0, [x23]
     900:	stp	x25, x26, [sp, #64]
     904:	cbz	x0, acc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x6ac>
     908:	ldrb	w1, [x0, #8]
     90c:	cmp	w1, #0x10
     910:	b.ne	aac <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x68c>  // b.any
     914:	ldr	x0, [x0, #32]
     918:	mov	w26, w0
     91c:	cbz	w0, a7c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x65c>
     920:	mov	w27, #0x0                   	// #0
     924:	mov	w25, #0x0                   	// #0
     928:	mov	w1, w25
     92c:	mov	x0, x23
     930:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
     934:	cbz	x0, 87c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     938:	ldrb	w1, [x0, #16]
     93c:	cmp	w1, #0x9
     940:	b.eq	970 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x550>  // b.none
     944:	cmp	w1, #0xd
     948:	b.ne	87c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>  // b.any
     94c:	ldr	w27, [x0, #32]
     950:	cmp	w27, #0x40
     954:	b.ls	984 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x564>  // b.plast
     958:	sub	w27, w27, #0x1
     95c:	add	x0, x0, #0x18
     960:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     964:	cmp	w27, w0
     968:	cset	w27, eq  // eq = none
     96c:	cbz	w27, 87c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x45c>
     970:	add	w25, w25, #0x1
     974:	cmp	w26, w25
     978:	b.ne	928 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x508>  // b.any
     97c:	ldp	x25, x26, [sp, #64]
     980:	b	7bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     984:	ldr	x0, [x0, #24]
     988:	cmp	x0, #0x1
     98c:	cset	w27, eq  // eq = none
     990:	b	96c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x54c>
     994:	ldr	w23, [x0, #32]
     998:	cmp	w23, #0x40
     99c:	b.ls	9dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5bc>  // b.plast
     9a0:	sub	w23, w23, #0x1
     9a4:	add	x0, x0, #0x18
     9a8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     9ac:	cmp	w23, w0
     9b0:	cset	w25, eq  // eq = none
     9b4:	b	690 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     9b8:	ldr	w23, [x0, #32]
     9bc:	cmp	w23, #0x40
     9c0:	b.ls	9ec <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5cc>  // b.plast
     9c4:	sub	w23, w23, #0x1
     9c8:	add	x0, x0, #0x18
     9cc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
     9d0:	cmp	w23, w0
     9d4:	cset	w27, eq  // eq = none
     9d8:	b	7bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     9dc:	ldr	x0, [x0, #24]
     9e0:	cmp	x0, #0x1
     9e4:	cset	w25, eq  // eq = none
     9e8:	b	690 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x270>
     9ec:	ldr	x0, [x0, #24]
     9f0:	cmp	x0, #0x1
     9f4:	cset	w27, eq  // eq = none
     9f8:	b	7bc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x39c>
     9fc:	stp	x25, x26, [sp, #64]
     a00:	str	x27, [sp, #80]
     a04:	bl	130 <_ZN4llvm3isaINS_11ConstantIntEPNS_5ValueEEEbRKT0_.isra.0.part.0>
     a08:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a0c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a10:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a14:	add	x3, x3, #0x0
     a18:	add	x1, x1, #0x0
     a1c:	add	x0, x0, #0x0
     a20:	mov	w2, #0x4fa                 	// #1274
     a24:	stp	x25, x26, [sp, #64]
     a28:	str	x27, [sp, #80]
     a2c:	bl	0 <__assert_fail>
     a30:	stp	x25, x26, [sp, #64]
     a34:	str	x27, [sp, #80]
     a38:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
     a3c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a40:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a44:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a48:	add	x3, x3, #0x0
     a4c:	add	x1, x1, #0x0
     a50:	add	x0, x0, #0x0
     a54:	mov	w2, #0x59d                 	// #1437
     a58:	stp	x25, x26, [sp, #64]
     a5c:	str	x27, [sp, #80]
     a60:	bl	0 <__assert_fail>
     a64:	stp	x25, x26, [sp, #64]
     a68:	str	x27, [sp, #80]
     a6c:	bl	1f8 <_ZN4llvm3isaINS_11ConstantIntEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
     a70:	ldrb	w0, [x19, #16]
     a74:	ldr	x27, [sp, #80]
     a78:	b	7f8 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x3d8>
     a7c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a80:	add	x3, x3, #0x0
     a84:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a88:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     a8c:	add	x1, x1, #0x0
     a90:	add	x0, x0, #0x0
     a94:	mov	w2, #0xeb                  	// #235
     a98:	bl	0 <__assert_fail>
     a9c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     aa0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     aa4:	add	x3, x3, #0x0
     aa8:	b	a88 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x668>
     aac:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     ab0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     ab4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     ab8:	add	x3, x3, #0x0
     abc:	add	x1, x1, #0x0
     ac0:	add	x0, x0, #0x0
     ac4:	mov	w2, #0x108                 	// #264
     ac8:	bl	0 <__assert_fail>
     acc:	bl	180 <_ZN4llvm13isa_impl_wrapINS_10VectorTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>

0000000000000ad0 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>:
     ad0:	stp	x29, x30, [sp, #-48]!
     ad4:	mov	x6, x0
     ad8:	adrp	x0, 0 <_ZSt15__once_callable>
     adc:	ldr	x4, [x0]
     ae0:	add	x0, x0, #0x0
     ae4:	blr	x4
     ae8:	add	x4, sp, #0x20
     aec:	mrs	x1, tpidr_el0
     af0:	adrp	x2, 0 <__pthread_key_create>
     af4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     af8:	mov	x29, sp
     afc:	ldr	x2, [x2]
     b00:	str	x4, [x1, x0]
     b04:	ldr	x3, [x3]
     b08:	adrp	x0, 0 <_ZSt11__once_call>
     b0c:	ldr	x4, [x0]
     b10:	add	x0, x0, #0x0
     b14:	blr	x4
     b18:	add	x4, sp, #0x18
     b1c:	adrp	x5, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b20:	add	x5, x5, #0x0
     b24:	str	x3, [x1, x0]
     b28:	stp	x6, x5, [sp, #24]
     b2c:	str	x4, [sp, #40]
     b30:	cbz	x2, b58 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x88>
     b34:	adrp	x1, 0 <__once_proxy>
     b38:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b3c:	add	x0, x0, #0x0
     b40:	ldr	x1, [x1]
     b44:	add	x0, x0, #0x8
     b48:	bl	0 <pthread_once>
     b4c:	cbnz	w0, b5c <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x8c>
     b50:	ldp	x29, x30, [sp], #48
     b54:	ret
     b58:	mov	w0, #0xffffffff            	// #-1
     b5c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000b60 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassEEEPNS_4PassEv>:
     b60:	stp	x29, x30, [sp, #-32]!
     b64:	mov	x0, #0x20                  	// #32
     b68:	mov	x29, sp
     b6c:	str	x19, [sp, #16]
     b70:	bl	0 <_Znwm>
     b74:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b78:	add	x1, x1, #0x0
     b7c:	mov	x19, x0
     b80:	add	x1, x1, #0x10
     b84:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     b88:	add	x0, x0, #0x0
     b8c:	mov	w2, #0x2                   	// #2
     b90:	stp	x1, xzr, [x19]
     b94:	str	x0, [x19, #16]
     b98:	str	w2, [x19, #24]
     b9c:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     ba0:	bl	ad0 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     ba4:	mov	x0, x19
     ba8:	ldr	x19, [sp, #16]
     bac:	ldp	x29, x30, [sp], #32
     bb0:	ret
     bb4:	nop

0000000000000bb8 <_ZN4llvm31initializeAggressiveInstCombineERNS_12PassRegistryE>:
     bb8:	b	ad0 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     bbc:	nop

0000000000000bc0 <LLVMInitializeAggressiveInstCombiner>:
     bc0:	b	ad0 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     bc4:	nop

0000000000000bc8 <_ZN4llvm32createAggressiveInstCombinerPassEv>:
     bc8:	stp	x29, x30, [sp, #-32]!
     bcc:	mov	x0, #0x20                  	// #32
     bd0:	mov	x29, sp
     bd4:	str	x19, [sp, #16]
     bd8:	bl	0 <_Znwm>
     bdc:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     be0:	add	x1, x1, #0x0
     be4:	mov	x19, x0
     be8:	add	x1, x1, #0x10
     bec:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     bf0:	add	x0, x0, #0x0
     bf4:	mov	w2, #0x2                   	// #2
     bf8:	stp	x1, xzr, [x19]
     bfc:	str	x0, [x19, #16]
     c00:	str	w2, [x19, #24]
     c04:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     c08:	bl	ad0 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     c0c:	mov	x0, x19
     c10:	ldr	x19, [sp, #16]
     c14:	ldp	x29, x30, [sp], #32
     c18:	ret
     c1c:	nop

0000000000000c20 <LLVMAddAggressiveInstCombinerPass>:
     c20:	stp	x29, x30, [sp, #-32]!
     c24:	mov	x29, sp
     c28:	stp	x19, x20, [sp, #16]
     c2c:	mov	x19, x0
     c30:	ldr	x0, [x0]
     c34:	ldr	x20, [x0, #16]
     c38:	bl	bc8 <_ZN4llvm32createAggressiveInstCombinerPassEv>
     c3c:	mov	x1, x0
     c40:	mov	x0, x19
     c44:	mov	x16, x20
     c48:	ldp	x19, x20, [sp, #16]
     c4c:	ldp	x29, x30, [sp], #32
     c50:	br	x16
     c54:	nop

0000000000000c58 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>:
     c58:	stp	x29, x30, [sp, #-320]!
     c5c:	mov	x29, sp
     c60:	stp	x19, x20, [sp, #16]
     c64:	mov	x19, x0
     c68:	add	x20, sp, #0x68
     c6c:	ldr	x0, [x0]
     c70:	stp	x21, x22, [sp, #32]
     c74:	mov	x21, x1
     c78:	mov	x22, x2
     c7c:	stp	x23, x24, [sp, #48]
     c80:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     c84:	add	x3, sp, #0x70
     c88:	mov	w4, w0
     c8c:	mov	w1, #0x40                  	// #64
     c90:	mov	x0, x19
     c94:	add	x23, sp, #0x58
     c98:	add	x24, sp, #0x60
     c9c:	str	x4, [sp, #120]
     ca0:	str	w1, [sp, #128]
     ca4:	str	x3, [sp, #136]
     ca8:	stp	x23, x24, [sp, #176]
     cac:	stp	x20, x4, [sp, #192]
     cb0:	str	w1, [sp, #208]
     cb4:	str	x3, [sp, #216]
     cb8:	str	x3, [sp, #248]
     cbc:	str	x3, [sp, #312]
     cc0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     cc4:	ldr	x0, [x19, #8]
     cc8:	cbz	x0, cd4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>
     ccc:	ldr	x0, [x0, #8]
     cd0:	cbz	x0, f64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x30c>
     cd4:	ldr	w1, [sp, #128]
     cd8:	str	x20, [sp, #144]
     cdc:	str	w1, [sp, #160]
     ce0:	cmp	w1, #0x40
     ce4:	b.hi	ec0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x268>  // b.pmore
     ce8:	ldr	x0, [sp, #120]
     cec:	str	x0, [sp, #152]
     cf0:	ldr	x0, [sp, #136]
     cf4:	str	x0, [sp, #168]
     cf8:	stp	x23, x24, [sp, #272]
     cfc:	str	x20, [sp, #288]
     d00:	ldr	x2, [sp, #152]
     d04:	str	w1, [sp, #256]
     d08:	str	x2, [sp, #296]
     d0c:	ldr	x0, [sp, #168]
     d10:	str	x0, [sp, #312]
     d14:	ldp	x2, x3, [sp, #272]
     d18:	stp	x2, x3, [sp, #224]
     d1c:	ldr	x1, [sp, #288]
     d20:	str	x1, [sp, #240]
     d24:	ldr	x0, [sp, #296]
     d28:	str	x0, [sp, #248]
     d2c:	ldr	x0, [sp, #312]
     d30:	str	x0, [sp, #264]
     d34:	ldr	w0, [sp, #160]
     d38:	cmp	w0, #0x40
     d3c:	b.ls	d4c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xf4>  // b.plast
     d40:	ldr	x0, [sp, #152]
     d44:	cbz	x0, d4c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xf4>
     d48:	bl	0 <_ZdaPv>
     d4c:	mov	x0, x19
     d50:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     d54:	ldr	x0, [x19, #8]
     d58:	cbz	x0, d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>
     d5c:	ldr	x0, [x0, #8]
     d60:	cbz	x0, dc8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x170>
     d64:	mov	w19, #0x0                   	// #0
     d68:	ldr	w0, [sp, #256]
     d6c:	cmp	w0, #0x40
     d70:	b.ls	d80 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x128>  // b.plast
     d74:	ldr	x0, [sp, #248]
     d78:	cbz	x0, d80 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x128>
     d7c:	bl	0 <_ZdaPv>
     d80:	ldr	w0, [sp, #208]
     d84:	cmp	w0, #0x40
     d88:	b.ls	d98 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x140>  // b.plast
     d8c:	ldr	x0, [sp, #200]
     d90:	cbz	x0, d98 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x140>
     d94:	bl	0 <_ZdaPv>
     d98:	ldr	w0, [sp, #128]
     d9c:	cmp	w0, #0x40
     da0:	b.ls	db0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x158>  // b.plast
     da4:	ldr	x0, [sp, #120]
     da8:	cbz	x0, db0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x158>
     dac:	bl	0 <_ZdaPv>
     db0:	mov	w0, w19
     db4:	ldp	x19, x20, [sp, #16]
     db8:	ldp	x21, x22, [sp, #32]
     dbc:	ldp	x23, x24, [sp, #48]
     dc0:	ldp	x29, x30, [sp], #320
     dc4:	ret
     dc8:	ldrb	w0, [x19, #16]
     dcc:	cmp	w0, #0x35
     dd0:	b.eq	10a8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x450>  // b.none
     dd4:	cmp	w0, #0x5
     dd8:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     ddc:	ldrh	w0, [x19, #18]
     de0:	cmp	w0, #0x1d
     de4:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     de8:	mov	w1, #0x0                   	// #0
     dec:	mov	x0, x19
     df0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     df4:	ldrb	w1, [x0, #16]
     df8:	mov	x20, x0
     dfc:	cmp	w1, #0x32
     e00:	b.eq	1390 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x738>  // b.none
     e04:	cmp	w1, #0x5
     e08:	b.eq	1314 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x6bc>  // b.none
     e0c:	mov	w1, #0x1                   	// #1
     e10:	mov	x0, x19
     e14:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e18:	ldrb	w1, [x0, #16]
     e1c:	mov	x20, x0
     e20:	cmp	w1, #0x32
     e24:	b.eq	13cc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x774>  // b.none
     e28:	cmp	w1, #0x5
     e2c:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     e30:	ldrh	w1, [x20, #18]
     e34:	cmp	w1, #0x1a
     e38:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     e3c:	mov	w1, #0x0                   	// #0
     e40:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e44:	mov	x2, x0
     e48:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
     e4c:	ldr	x3, [sp, #224]
     e50:	mov	x0, x20
     e54:	mov	w1, #0x1                   	// #1
     e58:	str	x2, [x3]
     e5c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e60:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
     e64:	ldr	x1, [sp, #232]
     e68:	str	x0, [x1]
     e6c:	mov	w1, #0x0                   	// #0
     e70:	mov	x0, x19
     e74:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e78:	mov	x1, x0
     e7c:	add	x0, sp, #0xf0
     e80:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     e84:	tst	w0, #0xff
     e88:	b.eq	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.none
     e8c:	nop
     e90:	ldr	x0, [sp, #88]
     e94:	ldr	x1, [sp, #104]
     e98:	cmp	x0, x1
     e9c:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     ea0:	ldr	x1, [sp, #96]
     ea4:	ldr	x2, [sp, #112]
     ea8:	cmp	x1, x2
     eac:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
     eb0:	str	x0, [x21]
     eb4:	mov	w19, #0x83                  	// #131
     eb8:	str	x1, [x22]
     ebc:	b	d68 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x110>
     ec0:	str	x25, [sp, #64]
     ec4:	add	x25, sp, #0x98
     ec8:	add	x1, sp, #0x78
     ecc:	mov	x0, x25
     ed0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     ed4:	stp	x23, x24, [sp, #272]
     ed8:	ldr	w1, [sp, #160]
     edc:	ldr	x0, [sp, #136]
     ee0:	str	x0, [sp, #168]
     ee4:	ldr	x0, [sp, #144]
     ee8:	str	x0, [sp, #288]
     eec:	str	w1, [sp, #304]
     ef0:	cmp	w1, #0x40
     ef4:	b.ls	13f4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x79c>  // b.plast
     ef8:	add	x20, sp, #0x128
     efc:	mov	x1, x25
     f00:	mov	x0, x20
     f04:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     f08:	ldr	x0, [sp, #168]
     f0c:	str	x0, [sp, #312]
     f10:	ldp	x0, x1, [sp, #272]
     f14:	stp	x0, x1, [sp, #224]
     f18:	ldr	w0, [sp, #304]
     f1c:	ldr	x1, [sp, #288]
     f20:	str	x1, [sp, #240]
     f24:	str	w0, [sp, #256]
     f28:	cmp	w0, #0x40
     f2c:	b.ls	13fc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7a4>  // b.plast
     f30:	mov	x1, x20
     f34:	add	x0, sp, #0xf8
     f38:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
     f3c:	ldr	x1, [sp, #312]
     f40:	str	x1, [sp, #264]
     f44:	ldr	w0, [sp, #304]
     f48:	cmp	w0, #0x40
     f4c:	b.ls	1064 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x40c>  // b.plast
     f50:	ldr	x0, [sp, #296]
     f54:	cbz	x0, 1064 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x40c>
     f58:	bl	0 <_ZdaPv>
     f5c:	ldr	x25, [sp, #64]
     f60:	b	d34 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xdc>
     f64:	ldrb	w0, [x19, #16]
     f68:	cmp	w0, #0x35
     f6c:	b.eq	106c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x414>  // b.none
     f70:	cmp	w0, #0x5
     f74:	b.ne	cd4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>  // b.any
     f78:	ldrh	w0, [x19, #18]
     f7c:	cmp	w0, #0x1d
     f80:	b.ne	cd4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>  // b.any
     f84:	mov	w1, #0x0                   	// #0
     f88:	mov	x0, x19
     f8c:	str	x25, [sp, #64]
     f90:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     f94:	ldrb	w1, [x0, #16]
     f98:	mov	x25, x0
     f9c:	cmp	w1, #0x31
     fa0:	b.eq	1374 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x71c>  // b.none
     fa4:	cmp	w1, #0x5
     fa8:	b.eq	12b4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x65c>  // b.none
     fac:	mov	w1, #0x1                   	// #1
     fb0:	mov	x0, x19
     fb4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     fb8:	ldrb	w1, [x0, #16]
     fbc:	mov	x25, x0
     fc0:	cmp	w1, #0x31
     fc4:	b.eq	13b0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x758>  // b.none
     fc8:	cmp	w1, #0x5
     fcc:	b.ne	10a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
     fd0:	ldrh	w1, [x25, #18]
     fd4:	cmp	w1, #0x19
     fd8:	b.ne	10a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
     fdc:	mov	w1, #0x0                   	// #0
     fe0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
     fe4:	mov	x2, x0
     fe8:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
     fec:	ldr	x3, [sp, #176]
     ff0:	mov	x0, x25
     ff4:	mov	w1, #0x1                   	// #1
     ff8:	str	x2, [x3]
     ffc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1000:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1004:	ldr	x1, [sp, #184]
    1008:	str	x0, [x1]
    100c:	mov	w1, #0x0                   	// #0
    1010:	mov	x0, x19
    1014:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1018:	mov	x1, x0
    101c:	add	x0, sp, #0xc0
    1020:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1024:	tst	w0, #0xff
    1028:	b.eq	10a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.none
    102c:	nop
    1030:	ldr	x0, [sp, #88]
    1034:	ldr	x1, [sp, #104]
    1038:	cmp	x0, x1
    103c:	b.ne	10a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
    1040:	ldr	x1, [sp, #96]
    1044:	ldr	x2, [sp, #112]
    1048:	cmp	x1, x2
    104c:	b.ne	10a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
    1050:	ldr	x25, [sp, #64]
    1054:	str	x0, [x21]
    1058:	mov	w19, #0x82                  	// #130
    105c:	str	x1, [x22]
    1060:	b	d80 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x128>
    1064:	ldr	x25, [sp, #64]
    1068:	b	d34 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xdc>
    106c:	str	x25, [sp, #64]
    1070:	ldur	x25, [x19, #-48]
    1074:	ldrb	w0, [x25, #16]
    1078:	cmp	w0, #0x31
    107c:	b.eq	123c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5e4>  // b.none
    1080:	cmp	w0, #0x5
    1084:	b.eq	1130 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x4d8>  // b.none
    1088:	ldur	x25, [x19, #-24]
    108c:	ldrb	w0, [x25, #16]
    1090:	cmp	w0, #0x31
    1094:	b.eq	1278 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x620>  // b.none
    1098:	cmp	w0, #0x5
    109c:	b.eq	11e0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x588>  // b.none
    10a0:	ldr	x25, [sp, #64]
    10a4:	b	cd4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>
    10a8:	ldur	x20, [x19, #-48]
    10ac:	ldrb	w0, [x20, #16]
    10b0:	cmp	w0, #0x32
    10b4:	b.eq	1258 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x600>  // b.none
    10b8:	cmp	w0, #0x5
    10bc:	b.eq	1188 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x530>  // b.none
    10c0:	ldur	x20, [x19, #-24]
    10c4:	ldrb	w0, [x20, #16]
    10c8:	cmp	w0, #0x32
    10cc:	b.eq	1294 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x63c>  // b.none
    10d0:	cmp	w0, #0x5
    10d4:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
    10d8:	ldrh	w0, [x20, #18]
    10dc:	cmp	w0, #0x1a
    10e0:	b.ne	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>  // b.any
    10e4:	mov	x0, x20
    10e8:	mov	w1, #0x0                   	// #0
    10ec:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    10f0:	mov	x2, x0
    10f4:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    10f8:	ldr	x3, [sp, #224]
    10fc:	mov	x0, x20
    1100:	mov	w1, #0x1                   	// #1
    1104:	str	x2, [x3]
    1108:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    110c:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1110:	ldr	x1, [sp, #232]
    1114:	str	x0, [x1]
    1118:	add	x0, sp, #0xf0
    111c:	ldur	x1, [x19, #-48]
    1120:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1124:	tst	w0, #0xff
    1128:	b.ne	e90 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x238>  // b.any
    112c:	b	d64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x10c>
    1130:	ldrh	w0, [x25, #18]
    1134:	cmp	w0, #0x19
    1138:	b.ne	1088 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x430>  // b.any
    113c:	mov	x0, x25
    1140:	mov	w1, #0x0                   	// #0
    1144:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1148:	mov	x2, x0
    114c:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1150:	ldr	x3, [sp, #176]
    1154:	mov	x0, x25
    1158:	mov	w1, #0x1                   	// #1
    115c:	str	x2, [x3]
    1160:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1164:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1168:	ldr	x1, [sp, #184]
    116c:	str	x0, [x1]
    1170:	add	x0, sp, #0xc0
    1174:	ldur	x1, [x19, #-24]
    1178:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    117c:	tst	w0, #0xff
    1180:	b.eq	1088 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x430>  // b.none
    1184:	b	1030 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3d8>
    1188:	ldrh	w0, [x20, #18]
    118c:	cmp	w0, #0x1a
    1190:	b.ne	10c0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x468>  // b.any
    1194:	mov	x0, x20
    1198:	mov	w1, #0x0                   	// #0
    119c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11a0:	mov	x2, x0
    11a4:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    11a8:	ldr	x3, [sp, #224]
    11ac:	mov	x0, x20
    11b0:	mov	w1, #0x1                   	// #1
    11b4:	str	x2, [x3]
    11b8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11bc:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    11c0:	ldr	x1, [sp, #232]
    11c4:	str	x0, [x1]
    11c8:	add	x0, sp, #0xf0
    11cc:	ldur	x1, [x19, #-24]
    11d0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11d4:	tst	w0, #0xff
    11d8:	b.eq	10c0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x468>  // b.none
    11dc:	b	e90 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x238>
    11e0:	ldrh	w0, [x25, #18]
    11e4:	cmp	w0, #0x19
    11e8:	b.ne	10a0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x448>  // b.any
    11ec:	mov	x0, x25
    11f0:	mov	w1, #0x0                   	// #0
    11f4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    11f8:	mov	x2, x0
    11fc:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1200:	ldr	x3, [sp, #176]
    1204:	mov	x0, x25
    1208:	mov	w1, #0x1                   	// #1
    120c:	str	x2, [x3]
    1210:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1214:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    1218:	ldr	x1, [sp, #184]
    121c:	str	x0, [x1]
    1220:	add	x0, sp, #0xc0
    1224:	ldur	x1, [x19, #-48]
    1228:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    122c:	tst	w0, #0xff
    1230:	b.ne	1030 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3d8>  // b.any
    1234:	ldr	x25, [sp, #64]
    1238:	b	cd4 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x7c>
    123c:	ldur	x0, [x25, #-48]
    1240:	cbz	x0, 1254 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    1244:	ldr	x1, [sp, #176]
    1248:	str	x0, [x1]
    124c:	ldur	x0, [x25, #-24]
    1250:	cbnz	x0, 1168 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x510>
    1254:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1258:	ldur	x0, [x20, #-48]
    125c:	cbz	x0, 1270 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    1260:	ldr	x1, [sp, #224]
    1264:	str	x0, [x1]
    1268:	ldur	x0, [x20, #-24]
    126c:	cbnz	x0, 11c0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x568>
    1270:	str	x25, [sp, #64]
    1274:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1278:	ldur	x0, [x25, #-48]
    127c:	cbz	x0, 1254 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    1280:	ldr	x1, [sp, #176]
    1284:	str	x0, [x1]
    1288:	ldur	x0, [x25, #-24]
    128c:	cbnz	x0, 1218 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5c0>
    1290:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1294:	ldur	x0, [x20, #-48]
    1298:	cbz	x0, 1270 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    129c:	ldr	x1, [sp, #224]
    12a0:	str	x0, [x1]
    12a4:	ldur	x0, [x20, #-24]
    12a8:	cbnz	x0, 1110 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x4b8>
    12ac:	str	x25, [sp, #64]
    12b0:	b	1274 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x61c>
    12b4:	ldrh	w1, [x0, #18]
    12b8:	cmp	w1, #0x19
    12bc:	b.ne	fac <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x354>  // b.any
    12c0:	mov	w1, #0x0                   	// #0
    12c4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12c8:	mov	x2, x0
    12cc:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    12d0:	ldr	x3, [sp, #176]
    12d4:	mov	x0, x25
    12d8:	mov	w1, #0x1                   	// #1
    12dc:	str	x2, [x3]
    12e0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12e4:	cbz	x0, 13f0 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x798>
    12e8:	ldr	x1, [sp, #184]
    12ec:	str	x0, [x1]
    12f0:	mov	w1, #0x1                   	// #1
    12f4:	mov	x0, x19
    12f8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    12fc:	mov	x1, x0
    1300:	add	x0, sp, #0xc0
    1304:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1308:	tst	w0, #0xff
    130c:	b.ne	1030 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3d8>  // b.any
    1310:	b	fac <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x354>
    1314:	ldrh	w1, [x0, #18]
    1318:	cmp	w1, #0x1a
    131c:	b.ne	e0c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1b4>  // b.any
    1320:	mov	w1, #0x0                   	// #0
    1324:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1328:	mov	x2, x0
    132c:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1330:	ldr	x3, [sp, #224]
    1334:	mov	x0, x20
    1338:	mov	w1, #0x1                   	// #1
    133c:	str	x2, [x3]
    1340:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1344:	cbz	x0, 13ec <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x794>
    1348:	ldr	x1, [sp, #232]
    134c:	str	x0, [x1]
    1350:	mov	w1, #0x1                   	// #1
    1354:	mov	x0, x19
    1358:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    135c:	mov	x1, x0
    1360:	add	x0, sp, #0xf0
    1364:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1368:	tst	w0, #0xff
    136c:	b.ne	e90 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x238>  // b.any
    1370:	b	e0c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1b4>
    1374:	ldur	x0, [x0, #-48]
    1378:	cbz	x0, 1254 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    137c:	ldr	x1, [sp, #176]
    1380:	str	x0, [x1]
    1384:	ldur	x0, [x25, #-24]
    1388:	cbnz	x0, 12e8 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x690>
    138c:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    1390:	ldur	x0, [x0, #-48]
    1394:	cbz	x0, 1270 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    1398:	ldr	x1, [sp, #224]
    139c:	str	x0, [x1]
    13a0:	ldur	x0, [x20, #-24]
    13a4:	cbnz	x0, 1348 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x6f0>
    13a8:	str	x25, [sp, #64]
    13ac:	b	1274 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x61c>
    13b0:	ldur	x0, [x25, #-48]
    13b4:	cbz	x0, 1254 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x5fc>
    13b8:	ldr	x1, [sp, #176]
    13bc:	str	x0, [x1]
    13c0:	ldur	x0, [x25, #-24]
    13c4:	cbnz	x0, 1004 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x3ac>
    13c8:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    13cc:	ldur	x0, [x20, #-48]
    13d0:	cbz	x0, 1270 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x618>
    13d4:	ldr	x1, [sp, #224]
    13d8:	str	x0, [x1]
    13dc:	ldur	x0, [x20, #-24]
    13e0:	cbnz	x0, e64 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x20c>
    13e4:	str	x25, [sp, #64]
    13e8:	b	1274 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x61c>
    13ec:	str	x25, [sp, #64]
    13f0:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    13f4:	ldr	x25, [sp, #64]
    13f8:	b	d00 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xa8>
    13fc:	ldr	x25, [sp, #64]
    1400:	b	d24 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0xcc>
    1404:	nop

0000000000001408 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE>:
    1408:	stp	x29, x30, [sp, #-416]!
    140c:	mov	x29, sp
    1410:	stp	x19, x20, [sp, #16]
    1414:	mov	x19, x0
    1418:	ldrb	w0, [x0, #16]
    141c:	cmp	w0, #0x32
    1420:	b.ne	143c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x34>  // b.any
    1424:	ldr	x0, [x19]
    1428:	ldrb	w1, [x0, #8]
    142c:	cmp	w1, #0x10
    1430:	b.eq	16d0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2c8>  // b.none
    1434:	cmp	w1, #0xb
    1438:	b.eq	1450 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x48>  // b.none
    143c:	mov	w20, #0x0                   	// #0
    1440:	mov	w0, w20
    1444:	ldp	x19, x20, [sp, #16]
    1448:	ldp	x29, x30, [sp], #416
    144c:	ret
    1450:	stp	x21, x22, [sp, #32]
    1454:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1458:	sub	w1, w0, #0x9
    145c:	mov	w21, w0
    1460:	cmp	w1, #0x77
    1464:	b.hi	16e8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2e0>  // b.pmore
    1468:	tst	x21, #0x7
    146c:	mov	w20, #0x0                   	// #0
    1470:	b.ne	16f4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2ec>  // b.any
    1474:	mov	w2, #0x8                   	// #8
    1478:	mov	x3, #0x55                  	// #85
    147c:	add	x22, sp, #0x158
    1480:	stp	x25, x26, [sp, #64]
    1484:	add	x25, sp, #0x70
    1488:	mov	x1, x22
    148c:	mov	x8, x25
    1490:	stp	x23, x24, [sp, #48]
    1494:	str	x3, [sp, #344]
    1498:	str	w2, [sp, #352]
    149c:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    14a0:	ldr	w0, [sp, #352]
    14a4:	cmp	w0, #0x40
    14a8:	b.ls	14b8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb0>  // b.plast
    14ac:	ldr	x0, [sp, #344]
    14b0:	cbz	x0, 14b8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb0>
    14b4:	bl	0 <_ZdaPv>
    14b8:	mov	w2, #0x8                   	// #8
    14bc:	mov	x3, #0x33                  	// #51
    14c0:	add	x23, sp, #0x80
    14c4:	mov	w0, w21
    14c8:	mov	x8, x23
    14cc:	mov	x1, x22
    14d0:	str	x3, [sp, #344]
    14d4:	str	w2, [sp, #352]
    14d8:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    14dc:	ldr	w0, [sp, #352]
    14e0:	cmp	w0, #0x40
    14e4:	b.ls	14f4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xec>  // b.plast
    14e8:	ldr	x0, [sp, #344]
    14ec:	cbz	x0, 14f4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xec>
    14f0:	bl	0 <_ZdaPv>
    14f4:	mov	w2, #0x8                   	// #8
    14f8:	mov	x3, #0xf                   	// #15
    14fc:	add	x24, sp, #0x90
    1500:	mov	w0, w21
    1504:	mov	x8, x24
    1508:	mov	x1, x22
    150c:	str	x3, [sp, #344]
    1510:	str	w2, [sp, #352]
    1514:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    1518:	ldr	w0, [sp, #352]
    151c:	cmp	w0, #0x40
    1520:	b.ls	1530 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x128>  // b.plast
    1524:	ldr	x0, [sp, #344]
    1528:	cbz	x0, 1530 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x128>
    152c:	bl	0 <_ZdaPv>
    1530:	mov	w2, #0x8                   	// #8
    1534:	mov	x3, #0x1                   	// #1
    1538:	add	x20, sp, #0xa0
    153c:	mov	w0, w21
    1540:	mov	x8, x20
    1544:	mov	x1, x22
    1548:	str	x3, [sp, #344]
    154c:	str	w2, [sp, #352]
    1550:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
    1554:	ldr	w0, [sp, #352]
    1558:	cmp	w0, #0x40
    155c:	b.ls	156c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x164>  // b.plast
    1560:	ldr	x0, [sp, #344]
    1564:	cbz	x0, 156c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x164>
    1568:	bl	0 <_ZdaPv>
    156c:	str	w21, [sp, #184]
    1570:	cmp	w21, #0x40
    1574:	sub	w1, w21, #0x8
    1578:	b.ls	16fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2f4>  // b.plast
    157c:	add	x0, sp, #0xb0
    1580:	mov	w2, #0x0                   	// #0
    1584:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1588:	ldr	w0, [x19, #20]
    158c:	ubfx	x0, x0, #0, #28
    1590:	cbz	w0, 17e8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3e0>
    1594:	ldrb	w1, [x19, #23]
    1598:	tbz	w1, #6, 17d4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3cc>
    159c:	ldur	x1, [x19, #-8]
    15a0:	cmp	w0, #0x1
    15a4:	ldr	x21, [x1]
    15a8:	b.ls	17e8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3e0>  // b.plast
    15ac:	ldr	w0, [sp, #168]
    15b0:	ldr	x26, [x1, #24]
    15b4:	str	w0, [sp, #248]
    15b8:	cmp	w0, #0x40
    15bc:	b.hi	183c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x434>  // b.pmore
    15c0:	ldr	x1, [sp, #160]
    15c4:	add	x2, sp, #0x58
    15c8:	str	x1, [sp, #240]
    15cc:	str	wzr, [sp, #248]
    15d0:	str	x1, [sp, #256]
    15d4:	str	w0, [sp, #264]
    15d8:	str	x2, [sp, #344]
    15dc:	str	w0, [sp, #360]
    15e0:	str	x1, [sp, #352]
    15e4:	ldrb	w0, [x21, #16]
    15e8:	cmp	w0, #0x29
    15ec:	b.eq	1808 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x400>  // b.none
    15f0:	cmp	w0, #0x5
    15f4:	b.eq	1714 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x30c>  // b.none
    15f8:	mov	w20, #0x0                   	// #0
    15fc:	ldr	w0, [sp, #360]
    1600:	cmp	w0, #0x40
    1604:	b.ls	1614 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x20c>  // b.plast
    1608:	ldr	x0, [sp, #352]
    160c:	cbz	x0, 1614 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x20c>
    1610:	bl	0 <_ZdaPv>
    1614:	ldr	w0, [sp, #264]
    1618:	cmp	w0, #0x40
    161c:	b.ls	162c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x224>  // b.plast
    1620:	ldr	x0, [sp, #256]
    1624:	cbz	x0, 162c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x224>
    1628:	bl	0 <_ZdaPv>
    162c:	ldr	w0, [sp, #248]
    1630:	cmp	w0, #0x40
    1634:	b.ls	1644 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x23c>  // b.plast
    1638:	ldr	x0, [sp, #240]
    163c:	cbz	x0, 1644 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x23c>
    1640:	bl	0 <_ZdaPv>
    1644:	cbnz	w20, 1880 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x478>
    1648:	ldr	w0, [sp, #184]
    164c:	cmp	w0, #0x40
    1650:	b.ls	1660 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x258>  // b.plast
    1654:	ldr	x0, [sp, #176]
    1658:	cbz	x0, 1660 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x258>
    165c:	bl	0 <_ZdaPv>
    1660:	ldr	w0, [sp, #168]
    1664:	cmp	w0, #0x40
    1668:	b.ls	1678 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x270>  // b.plast
    166c:	ldr	x0, [sp, #160]
    1670:	cbz	x0, 1678 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x270>
    1674:	bl	0 <_ZdaPv>
    1678:	ldr	w0, [sp, #152]
    167c:	cmp	w0, #0x40
    1680:	b.ls	1690 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x288>  // b.plast
    1684:	ldr	x0, [sp, #144]
    1688:	cbz	x0, 1690 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x288>
    168c:	bl	0 <_ZdaPv>
    1690:	ldr	w0, [sp, #136]
    1694:	cmp	w0, #0x40
    1698:	b.ls	16a8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2a0>  // b.plast
    169c:	ldr	x0, [sp, #128]
    16a0:	cbz	x0, 16a8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x2a0>
    16a4:	bl	0 <_ZdaPv>
    16a8:	ldr	w0, [sp, #120]
    16ac:	cmp	w0, #0x40
    16b0:	b.ls	17c4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3bc>  // b.plast
    16b4:	ldr	x0, [sp, #112]
    16b8:	cbz	x0, 17c4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3bc>
    16bc:	bl	0 <_ZdaPv>
    16c0:	ldp	x21, x22, [sp, #32]
    16c4:	ldp	x23, x24, [sp, #48]
    16c8:	ldp	x25, x26, [sp, #64]
    16cc:	b	1440 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    16d0:	ldr	x1, [x0, #16]
    16d4:	ldr	x1, [x1]
    16d8:	ldrb	w1, [x1, #8]
    16dc:	cmp	w1, #0xb
    16e0:	b.ne	143c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x34>  // b.any
    16e4:	b	1450 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x48>
    16e8:	mov	w20, #0x0                   	// #0
    16ec:	ldp	x21, x22, [sp, #32]
    16f0:	b	1440 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    16f4:	ldp	x21, x22, [sp, #32]
    16f8:	b	1440 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    16fc:	neg	w21, w21
    1700:	mov	x2, #0xffffffffffffffff    	// #-1
    1704:	lsr	x21, x2, x21
    1708:	and	x21, x21, x1
    170c:	str	x21, [sp, #176]
    1710:	b	1588 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x180>
    1714:	ldrh	w0, [x21, #18]
    1718:	cmp	w0, #0x11
    171c:	b.ne	15f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f0>  // b.any
    1720:	mov	x0, x21
    1724:	mov	w1, #0x0                   	// #0
    1728:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    172c:	mov	x2, x0
    1730:	cbz	x0, 239c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf94>
    1734:	ldr	x3, [sp, #344]
    1738:	mov	w1, #0x1                   	// #1
    173c:	mov	x0, x21
    1740:	str	x2, [x3]
    1744:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1748:	mov	x1, x0
    174c:	add	x0, x22, #0x8
    1750:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1754:	tst	w0, #0xff
    1758:	b.eq	15f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f0>  // b.none
    175c:	ldr	w2, [sp, #184]
    1760:	str	w2, [sp, #288]
    1764:	cmp	w2, #0x40
    1768:	b.hi	1f44 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb3c>  // b.pmore
    176c:	ldr	x3, [sp, #176]
    1770:	str	x3, [sp, #280]
    1774:	mov	x1, x26
    1778:	add	x0, sp, #0x130
    177c:	str	wzr, [sp, #288]
    1780:	str	x3, [sp, #304]
    1784:	str	w2, [sp, #312]
    1788:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    178c:	ldr	w1, [sp, #312]
    1790:	and	w20, w0, #0xff
    1794:	cmp	w1, #0x40
    1798:	b.ls	17a8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3a0>  // b.plast
    179c:	ldr	x0, [sp, #304]
    17a0:	cbz	x0, 17a8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x3a0>
    17a4:	bl	0 <_ZdaPv>
    17a8:	ldr	w0, [sp, #288]
    17ac:	cmp	w0, #0x40
    17b0:	b.ls	15fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f4>  // b.plast
    17b4:	ldr	x0, [sp, #280]
    17b8:	cbz	x0, 15fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f4>
    17bc:	bl	0 <_ZdaPv>
    17c0:	b	15fc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f4>
    17c4:	ldp	x21, x22, [sp, #32]
    17c8:	ldp	x23, x24, [sp, #48]
    17cc:	ldp	x25, x26, [sp, #64]
    17d0:	b	1440 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x38>
    17d4:	mov	w1, #0x18                  	// #24
    17d8:	cmp	w0, #0x1
    17dc:	umsubl	x1, w0, w1, x19
    17e0:	ldr	x21, [x1]
    17e4:	b.hi	15ac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1a4>  // b.pmore
    17e8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    17ec:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    17f0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    17f4:	add	x3, x3, #0x0
    17f8:	add	x1, x1, #0x0
    17fc:	add	x0, x0, #0x0
    1800:	mov	w2, #0xaa                  	// #170
    1804:	bl	0 <__assert_fail>
    1808:	mov	x0, x21
    180c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1810:	ldur	x2, [x0, #-48]
    1814:	mov	x1, x0
    1818:	cbz	x2, 21bc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdb4>
    181c:	ldr	x3, [sp, #344]
    1820:	add	x0, x22, #0x8
    1824:	str	x2, [x3]
    1828:	ldur	x1, [x1, #-24]
    182c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1830:	tst	w0, #0xff
    1834:	b.ne	175c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x354>  // b.any
    1838:	b	15f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1f0>
    183c:	mov	x1, x20
    1840:	add	x0, sp, #0xf0
    1844:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1848:	ldr	w0, [sp, #248]
    184c:	add	x2, sp, #0x58
    1850:	ldr	x1, [sp, #240]
    1854:	str	wzr, [sp, #248]
    1858:	str	x1, [sp, #256]
    185c:	cmp	w0, #0x40
    1860:	str	w0, [sp, #264]
    1864:	str	x2, [sp, #344]
    1868:	str	w0, [sp, #360]
    186c:	b.ls	15e0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1d8>  // b.plast
    1870:	add	x1, sp, #0x100
    1874:	add	x0, x22, #0x8
    1878:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    187c:	b	15e4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x1dc>
    1880:	ldr	w0, [sp, #152]
    1884:	add	x1, sp, #0x60
    1888:	mov	w2, #0x40                  	// #64
    188c:	mov	x3, #0x4                   	// #4
    1890:	str	w0, [sp, #264]
    1894:	cmp	w0, w2
    1898:	stp	x1, x3, [sp, #304]
    189c:	str	w2, [sp, #320]
    18a0:	str	x1, [sp, #328]
    18a4:	ldr	x20, [sp, #88]
    18a8:	b.hi	2028 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc20>  // b.pmore
    18ac:	ldr	x3, [sp, #144]
    18b0:	str	x3, [sp, #256]
    18b4:	str	wzr, [sp, #264]
    18b8:	str	x3, [sp, #280]
    18bc:	str	w0, [sp, #288]
    18c0:	str	x1, [sp, #344]
    18c4:	str	w2, [sp, #360]
    18c8:	ldr	x1, [sp, #312]
    18cc:	str	x1, [sp, #352]
    18d0:	ldr	x1, [sp, #328]
    18d4:	str	x1, [sp, #368]
    18d8:	str	w0, [sp, #384]
    18dc:	cmp	w0, #0x40
    18e0:	b.hi	2018 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc10>  // b.pmore
    18e4:	ldr	x0, [sp, #280]
    18e8:	str	x0, [sp, #376]
    18ec:	ldrb	w0, [x20, #16]
    18f0:	cmp	w0, #0x34
    18f4:	b.eq	1f5c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb54>  // b.none
    18f8:	cmp	w0, #0x5
    18fc:	b.eq	1b88 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x780>  // b.none
    1900:	mov	w20, #0x0                   	// #0
    1904:	ldr	w0, [sp, #384]
    1908:	cmp	w0, #0x40
    190c:	b.ls	191c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x514>  // b.plast
    1910:	ldr	x0, [sp, #376]
    1914:	cbz	x0, 191c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x514>
    1918:	bl	0 <_ZdaPv>
    191c:	ldr	w0, [sp, #360]
    1920:	cmp	w0, #0x40
    1924:	b.ls	1934 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x52c>  // b.plast
    1928:	ldr	x0, [sp, #352]
    192c:	cbz	x0, 1934 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x52c>
    1930:	bl	0 <_ZdaPv>
    1934:	ldr	w0, [sp, #288]
    1938:	cmp	w0, #0x40
    193c:	b.ls	194c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x544>  // b.plast
    1940:	ldr	x0, [sp, #280]
    1944:	cbz	x0, 194c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x544>
    1948:	bl	0 <_ZdaPv>
    194c:	ldr	w0, [sp, #264]
    1950:	cmp	w0, #0x40
    1954:	b.ls	1964 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x55c>  // b.plast
    1958:	ldr	x0, [sp, #256]
    195c:	cbz	x0, 1964 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x55c>
    1960:	bl	0 <_ZdaPv>
    1964:	ldr	w0, [sp, #320]
    1968:	cmp	w0, #0x40
    196c:	b.ls	197c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x574>  // b.plast
    1970:	ldr	x0, [sp, #312]
    1974:	cbz	x0, 197c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x574>
    1978:	bl	0 <_ZdaPv>
    197c:	cbz	w20, 1b80 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>
    1980:	ldr	w0, [sp, #136]
    1984:	str	w0, [sp, #200]
    1988:	cmp	w0, #0x40
    198c:	ldr	x21, [sp, #96]
    1990:	b.hi	2100 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xcf8>  // b.pmore
    1994:	ldr	x1, [sp, #128]
    1998:	add	x20, sp, #0x68
    199c:	str	x1, [sp, #192]
    19a0:	str	wzr, [sp, #200]
    19a4:	str	x1, [sp, #208]
    19a8:	str	w0, [sp, #216]
    19ac:	str	x20, [sp, #256]
    19b0:	str	w0, [sp, #272]
    19b4:	str	x1, [sp, #264]
    19b8:	mov	w1, #0x40                  	// #64
    19bc:	mov	x2, #0x2                   	// #2
    19c0:	str	w0, [sp, #232]
    19c4:	cmp	w0, w1
    19c8:	stp	x20, x2, [sp, #280]
    19cc:	str	w1, [sp, #296]
    19d0:	b.hi	20b4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xcac>  // b.pmore
    19d4:	ldr	x2, [sp, #128]
    19d8:	str	x2, [sp, #224]
    19dc:	str	wzr, [sp, #232]
    19e0:	str	x2, [sp, #240]
    19e4:	str	w0, [sp, #248]
    19e8:	str	x20, [sp, #304]
    19ec:	str	w1, [sp, #320]
    19f0:	ldr	x1, [sp, #288]
    19f4:	str	x1, [sp, #312]
    19f8:	str	w0, [sp, #336]
    19fc:	cmp	w0, #0x40
    1a00:	b.hi	20a4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc9c>  // b.pmore
    1a04:	ldr	x0, [sp, #240]
    1a08:	str	x0, [sp, #328]
    1a0c:	ldr	x0, [sp, #256]
    1a10:	str	x0, [sp, #344]
    1a14:	ldr	w0, [sp, #272]
    1a18:	str	w0, [sp, #360]
    1a1c:	cmp	w0, #0x40
    1a20:	b.hi	2094 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc8c>  // b.pmore
    1a24:	ldr	x0, [sp, #264]
    1a28:	str	x0, [sp, #352]
    1a2c:	ldr	x0, [sp, #304]
    1a30:	str	x0, [sp, #368]
    1a34:	ldr	w0, [sp, #320]
    1a38:	str	w0, [sp, #384]
    1a3c:	cmp	w0, #0x40
    1a40:	b.hi	2084 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc7c>  // b.pmore
    1a44:	ldr	x0, [sp, #312]
    1a48:	str	x0, [sp, #376]
    1a4c:	ldr	w0, [sp, #336]
    1a50:	str	w0, [sp, #400]
    1a54:	cmp	w0, #0x40
    1a58:	b.hi	2074 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xc6c>  // b.pmore
    1a5c:	ldr	x0, [sp, #328]
    1a60:	str	x0, [sp, #392]
    1a64:	mov	x1, x21
    1a68:	mov	x0, x22
    1a6c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1a70:	and	w20, w0, #0xff
    1a74:	ldr	w1, [sp, #400]
    1a78:	cmp	w1, #0x40
    1a7c:	b.ls	1a8c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x684>  // b.plast
    1a80:	ldr	x0, [sp, #392]
    1a84:	cbz	x0, 1a8c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x684>
    1a88:	bl	0 <_ZdaPv>
    1a8c:	ldr	w0, [sp, #384]
    1a90:	cmp	w0, #0x40
    1a94:	b.ls	1aa4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x69c>  // b.plast
    1a98:	ldr	x0, [sp, #376]
    1a9c:	cbz	x0, 1aa4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x69c>
    1aa0:	bl	0 <_ZdaPv>
    1aa4:	ldr	w0, [sp, #360]
    1aa8:	cmp	w0, #0x40
    1aac:	b.ls	1abc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6b4>  // b.plast
    1ab0:	ldr	x0, [sp, #352]
    1ab4:	cbz	x0, 1abc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6b4>
    1ab8:	bl	0 <_ZdaPv>
    1abc:	ldr	w0, [sp, #336]
    1ac0:	cmp	w0, #0x40
    1ac4:	b.ls	1ad4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6cc>  // b.plast
    1ac8:	ldr	x0, [sp, #328]
    1acc:	cbz	x0, 1ad4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6cc>
    1ad0:	bl	0 <_ZdaPv>
    1ad4:	ldr	w0, [sp, #320]
    1ad8:	cmp	w0, #0x40
    1adc:	b.ls	1aec <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6e4>  // b.plast
    1ae0:	ldr	x0, [sp, #312]
    1ae4:	cbz	x0, 1aec <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6e4>
    1ae8:	bl	0 <_ZdaPv>
    1aec:	ldr	w0, [sp, #248]
    1af0:	cmp	w0, #0x40
    1af4:	b.ls	1b04 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6fc>  // b.plast
    1af8:	ldr	x0, [sp, #240]
    1afc:	cbz	x0, 1b04 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x6fc>
    1b00:	bl	0 <_ZdaPv>
    1b04:	ldr	w0, [sp, #232]
    1b08:	cmp	w0, #0x40
    1b0c:	b.ls	1b1c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x714>  // b.plast
    1b10:	ldr	x0, [sp, #224]
    1b14:	cbz	x0, 1b1c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x714>
    1b18:	bl	0 <_ZdaPv>
    1b1c:	ldr	w0, [sp, #296]
    1b20:	cmp	w0, #0x40
    1b24:	b.ls	1b34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x72c>  // b.plast
    1b28:	ldr	x0, [sp, #288]
    1b2c:	cbz	x0, 1b34 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x72c>
    1b30:	bl	0 <_ZdaPv>
    1b34:	ldr	w0, [sp, #272]
    1b38:	cmp	w0, #0x40
    1b3c:	b.ls	1b4c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x744>  // b.plast
    1b40:	ldr	x0, [sp, #264]
    1b44:	cbz	x0, 1b4c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x744>
    1b48:	bl	0 <_ZdaPv>
    1b4c:	ldr	w0, [sp, #216]
    1b50:	cmp	w0, #0x40
    1b54:	b.ls	1b64 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x75c>  // b.plast
    1b58:	ldr	x0, [sp, #208]
    1b5c:	cbz	x0, 1b64 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x75c>
    1b60:	bl	0 <_ZdaPv>
    1b64:	ldr	w0, [sp, #200]
    1b68:	cmp	w0, #0x40
    1b6c:	b.ls	1b7c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x774>  // b.plast
    1b70:	ldr	x0, [sp, #192]
    1b74:	cbz	x0, 1b7c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x774>
    1b78:	bl	0 <_ZdaPv>
    1b7c:	cbnz	w20, 1c58 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x850>
    1b80:	mov	w20, #0x0                   	// #0
    1b84:	b	1648 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x240>
    1b88:	ldrh	w0, [x20, #18]
    1b8c:	cmp	w0, #0x1c
    1b90:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1b94:	mov	w1, #0x0                   	// #0
    1b98:	mov	x0, x20
    1b9c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ba0:	ldrb	w1, [x0, #16]
    1ba4:	mov	x21, x0
    1ba8:	cmp	w1, #0x25
    1bac:	b.eq	21c8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdc0>  // b.none
    1bb0:	cmp	w1, #0x5
    1bb4:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1bb8:	ldrh	w1, [x0, #18]
    1bbc:	cmp	w1, #0xd
    1bc0:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1bc4:	mov	w1, #0x0                   	// #0
    1bc8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1bcc:	mov	x1, x0
    1bd0:	mov	x0, x22
    1bd4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1bd8:	tst	w0, #0xff
    1bdc:	b.eq	1bfc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x7f4>  // b.none
    1be0:	mov	w1, #0x1                   	// #1
    1be4:	mov	x0, x21
    1be8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1bec:	ldr	x1, [sp, #368]
    1bf0:	ldr	x1, [x1]
    1bf4:	cmp	x1, x0
    1bf8:	b.eq	1c38 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x830>  // b.none
    1bfc:	mov	w1, #0x1                   	// #1
    1c00:	mov	x0, x21
    1c04:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c08:	mov	x1, x0
    1c0c:	mov	x0, x22
    1c10:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c14:	tst	w0, #0xff
    1c18:	b.eq	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    1c1c:	mov	w1, #0x0                   	// #0
    1c20:	mov	x0, x21
    1c24:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c28:	ldr	x1, [sp, #368]
    1c2c:	ldr	x1, [x1]
    1c30:	cmp	x1, x0
    1c34:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1c38:	mov	x0, x20
    1c3c:	mov	w1, #0x1                   	// #1
    1c40:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c44:	mov	x1, x0
    1c48:	add	x0, x22, #0x20
    1c4c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c50:	and	w20, w0, #0xff
    1c54:	b	1904 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4fc>
    1c58:	ldr	x20, [sp, #104]
    1c5c:	ldrb	w0, [x20, #16]
    1c60:	cmp	w0, #0x27
    1c64:	b.eq	21a4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xd9c>  // b.none
    1c68:	cmp	w0, #0x5
    1c6c:	b.ne	1b80 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>  // b.any
    1c70:	ldrh	w0, [x20, #18]
    1c74:	cmp	w0, #0xf
    1c78:	b.ne	1b80 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>  // b.any
    1c7c:	mov	x0, x20
    1c80:	mov	w1, #0x0                   	// #0
    1c84:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c88:	mov	x21, x0
    1c8c:	cbz	x0, 239c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf94>
    1c90:	mov	x0, x20
    1c94:	mov	w1, #0x1                   	// #1
    1c98:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1c9c:	mov	x20, x0
    1ca0:	cbz	x0, 239c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf94>
    1ca4:	ldr	w0, [sp, #120]
    1ca8:	mov	w1, #0x40                  	// #64
    1cac:	mov	x2, #0x1                   	// #1
    1cb0:	str	w0, [sp, #264]
    1cb4:	stp	x21, x2, [sp, #304]
    1cb8:	cmp	w0, w1
    1cbc:	str	w1, [sp, #320]
    1cc0:	b.hi	229c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe94>  // b.pmore
    1cc4:	ldr	x0, [sp, #112]
    1cc8:	str	x0, [sp, #256]
    1ccc:	ldr	x0, [sp, #256]
    1cd0:	str	x0, [sp, #280]
    1cd4:	ldr	w2, [sp, #264]
    1cd8:	ldr	w0, [sp, #320]
    1cdc:	ldr	x1, [sp, #304]
    1ce0:	str	wzr, [sp, #264]
    1ce4:	str	w2, [sp, #288]
    1ce8:	cmp	w0, #0x40
    1cec:	str	x1, [sp, #344]
    1cf0:	str	w0, [sp, #360]
    1cf4:	b.hi	2318 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf10>  // b.pmore
    1cf8:	ldr	x0, [sp, #312]
    1cfc:	str	x0, [sp, #352]
    1d00:	ldr	w0, [sp, #288]
    1d04:	str	w0, [sp, #376]
    1d08:	cmp	w0, #0x40
    1d0c:	b.hi	2308 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf00>  // b.pmore
    1d10:	ldr	x0, [sp, #280]
    1d14:	str	x0, [sp, #368]
    1d18:	ldrb	w0, [x20, #16]
    1d1c:	cmp	w0, #0x34
    1d20:	b.eq	2220 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe18>  // b.none
    1d24:	cmp	w0, #0x5
    1d28:	b.eq	1eb4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xaac>  // b.none
    1d2c:	mov	w20, #0x0                   	// #0
    1d30:	ldr	w0, [sp, #376]
    1d34:	cmp	w0, #0x40
    1d38:	b.ls	1d48 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x940>  // b.plast
    1d3c:	ldr	x0, [sp, #368]
    1d40:	cbz	x0, 1d48 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x940>
    1d44:	bl	0 <_ZdaPv>
    1d48:	ldr	w0, [sp, #360]
    1d4c:	cmp	w0, #0x40
    1d50:	b.ls	1d60 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x958>  // b.plast
    1d54:	ldr	x0, [sp, #352]
    1d58:	cbz	x0, 1d60 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x958>
    1d5c:	bl	0 <_ZdaPv>
    1d60:	ldr	w0, [sp, #288]
    1d64:	cmp	w0, #0x40
    1d68:	b.ls	1d78 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x970>  // b.plast
    1d6c:	ldr	x0, [sp, #280]
    1d70:	cbz	x0, 1d78 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x970>
    1d74:	bl	0 <_ZdaPv>
    1d78:	ldr	w0, [sp, #264]
    1d7c:	cmp	w0, #0x40
    1d80:	b.ls	1d90 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x988>  // b.plast
    1d84:	ldr	x0, [sp, #256]
    1d88:	cbz	x0, 1d90 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x988>
    1d8c:	bl	0 <_ZdaPv>
    1d90:	ldr	w0, [sp, #320]
    1d94:	cmp	w0, #0x40
    1d98:	b.ls	1da8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9a0>  // b.plast
    1d9c:	ldr	x0, [sp, #312]
    1da0:	cbz	x0, 1da8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9a0>
    1da4:	bl	0 <_ZdaPv>
    1da8:	cbz	w20, 1b80 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x778>
    1dac:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1db0:	ldr	x0, [x0]
    1db4:	ldrb	w0, [x0]
    1db8:	cbnz	w0, 22ac <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xea4>
    1dbc:	mov	x0, x19
    1dc0:	bl	0 <_ZNK4llvm5Value10getContextEv>
    1dc4:	ldr	x1, [x19, #40]
    1dc8:	add	x2, x19, #0x18
    1dcc:	mov	w3, #0x200                 	// #512
    1dd0:	stp	xzr, x1, [sp, #344]
    1dd4:	add	x1, x1, #0x28
    1dd8:	stp	x2, x0, [sp, #360]
    1ddc:	cmp	x2, x1
    1de0:	str	xzr, [sp, #376]
    1de4:	str	wzr, [sp, #384]
    1de8:	strh	w3, [sp, #388]
    1dec:	strb	wzr, [sp, #390]
    1df0:	stp	xzr, xzr, [sp, #392]
    1df4:	b.eq	2374 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf6c>  // b.none
    1df8:	ldr	x1, [x19, #48]
    1dfc:	str	x1, [sp, #304]
    1e00:	add	x23, sp, #0x130
    1e04:	cbz	x1, 1e3c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xa34>
    1e08:	mov	x0, x23
    1e0c:	mov	x2, #0x2                   	// #2
    1e10:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    1e14:	ldr	x1, [sp, #344]
    1e18:	cbz	x1, 1e24 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xa1c>
    1e1c:	mov	x0, x22
    1e20:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1e24:	ldr	x1, [sp, #304]
    1e28:	str	x1, [sp, #344]
    1e2c:	cbz	x1, 1e3c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xa34>
    1e30:	mov	x2, x22
    1e34:	mov	x0, x23
    1e38:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    1e3c:	mov	x0, x19
    1e40:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1e44:	ldr	x4, [x19]
    1e48:	mov	x2, x23
    1e4c:	mov	x3, #0x1                   	// #1
    1e50:	mov	w1, #0x27                  	// #39
    1e54:	str	x4, [sp, #304]
    1e58:	add	x25, sp, #0x118
    1e5c:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    1e60:	mov	x24, x0
    1e64:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1e68:	mov	x0, x23
    1e6c:	add	x1, x1, #0x0
    1e70:	str	x21, [sp, #280]
    1e74:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1e78:	mov	x4, x23
    1e7c:	mov	x2, x25
    1e80:	mov	x5, #0x0                   	// #0
    1e84:	mov	x3, #0x1                   	// #1
    1e88:	mov	x1, x24
    1e8c:	mov	x0, x22
    1e90:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1e94:	mov	x1, x0
    1e98:	mov	x0, x19
    1e9c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1ea0:	ldr	x1, [sp, #344]
    1ea4:	cbz	x1, 1648 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x240>
    1ea8:	mov	x0, x22
    1eac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1eb0:	b	1648 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x240>
    1eb4:	ldrh	w0, [x20, #18]
    1eb8:	cmp	w0, #0x1c
    1ebc:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1ec0:	mov	w1, #0x0                   	// #0
    1ec4:	mov	x0, x20
    1ec8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ecc:	ldrb	w1, [x0, #16]
    1ed0:	mov	x23, x0
    1ed4:	cmp	w1, #0x32
    1ed8:	b.eq	23a0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf98>  // b.none
    1edc:	cmp	w1, #0x5
    1ee0:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1ee4:	ldrh	w1, [x0, #18]
    1ee8:	cmp	w1, #0x1a
    1eec:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1ef0:	mov	w1, #0x0                   	// #0
    1ef4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ef8:	ldr	x1, [sp, #344]
    1efc:	cmp	x1, x0
    1f00:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    1f04:	mov	w1, #0x1                   	// #1
    1f08:	mov	x0, x23
    1f0c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f10:	mov	x1, x0
    1f14:	add	x0, x22, #0x8
    1f18:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f1c:	tst	w0, #0xff
    1f20:	b.eq	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    1f24:	mov	x0, x20
    1f28:	mov	w1, #0x1                   	// #1
    1f2c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f30:	mov	x1, x0
    1f34:	add	x0, x22, #0x18
    1f38:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f3c:	and	w20, w0, #0xff
    1f40:	b	1d30 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x928>
    1f44:	add	x1, sp, #0xb0
    1f48:	add	x0, sp, #0x118
    1f4c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    1f50:	ldr	w2, [sp, #288]
    1f54:	ldr	x3, [sp, #280]
    1f58:	b	1774 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x36c>
    1f5c:	mov	x0, x20
    1f60:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f64:	ldur	x21, [x0, #-48]
    1f68:	mov	x20, x0
    1f6c:	ldrb	w0, [x21, #16]
    1f70:	cmp	w0, #0x25
    1f74:	b.eq	2148 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xd40>  // b.none
    1f78:	cmp	w0, #0x5
    1f7c:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1f80:	ldrh	w0, [x21, #18]
    1f84:	cmp	w0, #0xd
    1f88:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    1f8c:	mov	w1, #0x0                   	// #0
    1f90:	mov	x0, x21
    1f94:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1f98:	mov	x1, x0
    1f9c:	mov	x0, x22
    1fa0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fa4:	tst	w0, #0xff
    1fa8:	b.eq	1fc8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbc0>  // b.none
    1fac:	mov	w1, #0x1                   	// #1
    1fb0:	mov	x0, x21
    1fb4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fb8:	ldr	x1, [sp, #368]
    1fbc:	ldr	x1, [x1]
    1fc0:	cmp	x1, x0
    1fc4:	b.eq	2004 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbfc>  // b.none
    1fc8:	mov	w1, #0x1                   	// #1
    1fcc:	mov	x0, x21
    1fd0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fd4:	mov	x1, x0
    1fd8:	mov	x0, x22
    1fdc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1fe0:	tst	w0, #0xff
    1fe4:	b.eq	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    1fe8:	mov	w1, #0x0                   	// #0
    1fec:	mov	x0, x21
    1ff0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    1ff4:	ldr	x1, [sp, #368]
    1ff8:	ldr	x1, [x1]
    1ffc:	cmp	x1, x0
    2000:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    2004:	ldur	x1, [x20, #-24]
    2008:	add	x0, x22, #0x20
    200c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2010:	and	w20, w0, #0xff
    2014:	b	1904 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4fc>
    2018:	add	x1, sp, #0x118
    201c:	add	x0, x22, #0x20
    2020:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2024:	b	18ec <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4e4>
    2028:	mov	x1, x24
    202c:	add	x0, sp, #0x100
    2030:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2034:	ldr	x1, [sp, #256]
    2038:	str	x1, [sp, #280]
    203c:	ldr	w0, [sp, #264]
    2040:	ldr	w1, [sp, #320]
    2044:	ldr	x2, [sp, #304]
    2048:	str	wzr, [sp, #264]
    204c:	str	w0, [sp, #288]
    2050:	cmp	w1, #0x40
    2054:	str	x2, [sp, #344]
    2058:	str	w1, [sp, #360]
    205c:	b.ls	18c8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4c0>  // b.plast
    2060:	add	x0, x22, #0x8
    2064:	add	x1, sp, #0x138
    2068:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    206c:	ldr	w0, [sp, #288]
    2070:	b	18d0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4c8>
    2074:	add	x1, sp, #0x148
    2078:	add	x0, x22, #0x30
    207c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2080:	b	1a64 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x65c>
    2084:	add	x1, sp, #0x138
    2088:	add	x0, x22, #0x20
    208c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2090:	b	1a4c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x644>
    2094:	add	x1, sp, #0x108
    2098:	add	x0, x22, #0x8
    209c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20a0:	b	1a2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x624>
    20a4:	add	x1, sp, #0xf0
    20a8:	add	x0, sp, #0x148
    20ac:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20b0:	b	1a0c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x604>
    20b4:	mov	x1, x23
    20b8:	add	x0, sp, #0xe0
    20bc:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20c0:	ldr	x1, [sp, #224]
    20c4:	str	x1, [sp, #240]
    20c8:	ldr	w0, [sp, #232]
    20cc:	ldr	w1, [sp, #296]
    20d0:	ldr	x2, [sp, #280]
    20d4:	str	wzr, [sp, #232]
    20d8:	str	w0, [sp, #248]
    20dc:	cmp	w1, #0x40
    20e0:	str	x2, [sp, #304]
    20e4:	str	w1, [sp, #320]
    20e8:	b.ls	19f0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5e8>  // b.plast
    20ec:	add	x0, sp, #0x138
    20f0:	add	x1, sp, #0x120
    20f4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    20f8:	ldr	w0, [sp, #248]
    20fc:	b	19f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5f0>
    2100:	mov	x1, x23
    2104:	add	x0, sp, #0xc0
    2108:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    210c:	add	x20, sp, #0x68
    2110:	ldr	w0, [sp, #200]
    2114:	ldr	x1, [sp, #192]
    2118:	str	wzr, [sp, #200]
    211c:	str	x1, [sp, #208]
    2120:	cmp	w0, #0x40
    2124:	str	w0, [sp, #216]
    2128:	str	x20, [sp, #256]
    212c:	str	w0, [sp, #272]
    2130:	b.ls	2394 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf8c>  // b.plast
    2134:	add	x0, sp, #0x108
    2138:	add	x1, sp, #0xd0
    213c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2140:	ldr	w0, [sp, #136]
    2144:	b	19b8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5b0>
    2148:	mov	x0, x21
    214c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2150:	mov	x21, x0
    2154:	mov	x0, x22
    2158:	ldur	x1, [x21, #-48]
    215c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2160:	tst	w0, #0xff
    2164:	b.eq	21c0 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdb8>  // b.none
    2168:	ldr	x0, [sp, #368]
    216c:	ldur	x1, [x21, #-24]
    2170:	ldr	x0, [x0]
    2174:	cmp	x1, x0
    2178:	b.eq	2004 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbfc>  // b.none
    217c:	mov	x0, x22
    2180:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2184:	tst	w0, #0xff
    2188:	b.eq	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    218c:	ldr	x1, [sp, #368]
    2190:	ldur	x0, [x21, #-48]
    2194:	ldr	x1, [x1]
    2198:	cmp	x1, x0
    219c:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    21a0:	b	2004 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xbfc>
    21a4:	mov	x0, x20
    21a8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    21ac:	ldur	x21, [x0, #-48]
    21b0:	cbz	x21, 21bc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdb4>
    21b4:	ldur	x20, [x0, #-24]
    21b8:	cbnz	x20, 1ca4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x89c>
    21bc:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    21c0:	ldur	x1, [x21, #-24]
    21c4:	b	217c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xd74>
    21c8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    21cc:	mov	x21, x0
    21d0:	mov	x0, x22
    21d4:	ldur	x1, [x21, #-48]
    21d8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    21dc:	tst	w0, #0xff
    21e0:	b.eq	2328 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf20>  // b.none
    21e4:	ldr	x0, [sp, #368]
    21e8:	ldur	x1, [x21, #-24]
    21ec:	ldr	x0, [x0]
    21f0:	cmp	x0, x1
    21f4:	b.eq	1c38 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x830>  // b.none
    21f8:	mov	x0, x22
    21fc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2200:	tst	w0, #0xff
    2204:	b.eq	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.none
    2208:	ldr	x1, [sp, #368]
    220c:	ldur	x0, [x21, #-48]
    2210:	ldr	x1, [x1]
    2214:	cmp	x1, x0
    2218:	b.ne	1900 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x4f8>  // b.any
    221c:	b	1c38 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x830>
    2220:	mov	x0, x20
    2224:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2228:	ldur	x20, [x0, #-48]
    222c:	mov	x23, x0
    2230:	ldrb	w0, [x20, #16]
    2234:	cmp	w0, #0x32
    2238:	b.eq	2330 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf28>  // b.none
    223c:	cmp	w0, #0x5
    2240:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2244:	ldrh	w0, [x20, #18]
    2248:	cmp	w0, #0x1a
    224c:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2250:	mov	w1, #0x0                   	// #0
    2254:	mov	x0, x20
    2258:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    225c:	ldr	x1, [sp, #344]
    2260:	cmp	x1, x0
    2264:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2268:	mov	w1, #0x1                   	// #1
    226c:	mov	x0, x20
    2270:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2274:	mov	x1, x0
    2278:	add	x0, x22, #0x8
    227c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2280:	tst	w0, #0xff
    2284:	b.eq	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    2288:	ldur	x1, [x23, #-24]
    228c:	add	x0, x22, #0x18
    2290:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2294:	and	w20, w0, #0xff
    2298:	b	1d30 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x928>
    229c:	mov	x1, x25
    22a0:	add	x0, sp, #0x100
    22a4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    22a8:	b	1ccc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x8c4>
    22ac:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    22b0:	add	x0, x0, #0x0
    22b4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    22b8:	tst	w0, #0xff
    22bc:	b.eq	1dbc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9b4>  // b.none
    22c0:	bl	0 <_ZN4llvm4dbgsEv>
    22c4:	mov	x1, x0
    22c8:	ldp	x2, x4, [x0, #16]
    22cc:	sub	x2, x2, x4
    22d0:	cmp	x2, #0x1d
    22d4:	b.ls	2360 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xf58>  // b.plast
    22d8:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    22dc:	add	x0, x0, #0x0
    22e0:	ldr	x2, [x0, #16]
    22e4:	str	x2, [x4, #16]
    22e8:	ldp	x2, x3, [x0]
    22ec:	stp	x2, x3, [x4]
    22f0:	ldur	x0, [x0, #22]
    22f4:	stur	x0, [x4, #22]
    22f8:	ldr	x0, [x1, #24]
    22fc:	add	x0, x0, #0x1e
    2300:	str	x0, [x1, #24]
    2304:	b	1dbc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9b4>
    2308:	add	x1, sp, #0x118
    230c:	add	x0, x22, #0x18
    2310:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2314:	b	1d18 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x910>
    2318:	add	x1, sp, #0x138
    231c:	add	x0, x22, #0x8
    2320:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    2324:	b	1d00 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x8f8>
    2328:	ldur	x1, [x21, #-24]
    232c:	b	21f8 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xdf0>
    2330:	mov	x0, x20
    2334:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2338:	ldur	x1, [x0, #-48]
    233c:	ldr	x2, [sp, #344]
    2340:	cmp	x2, x1
    2344:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    2348:	ldur	x1, [x0, #-24]
    234c:	add	x0, x22, #0x8
    2350:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2354:	tst	w0, #0xff
    2358:	b.eq	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    235c:	b	2288 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xe80>
    2360:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2364:	mov	x2, #0x1e                  	// #30
    2368:	add	x1, x1, #0x0
    236c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2370:	b	1dbc <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x9b4>
    2374:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2378:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    237c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2380:	add	x3, x3, #0x0
    2384:	add	x1, x1, #0x0
    2388:	add	x0, x0, #0x0
    238c:	mov	w2, #0x8e                  	// #142
    2390:	bl	0 <__assert_fail>
    2394:	ldr	w0, [sp, #136]
    2398:	b	19b4 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x5ac>
    239c:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    23a0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    23a4:	ldur	x1, [x0, #-48]
    23a8:	ldr	x2, [sp, #344]
    23ac:	cmp	x2, x1
    23b0:	b.ne	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.any
    23b4:	ldur	x1, [x0, #-24]
    23b8:	add	x0, x22, #0x8
    23bc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    23c0:	tst	w0, #0xff
    23c4:	b.eq	1d2c <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0x924>  // b.none
    23c8:	b	1f24 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE+0xb1c>
    23cc:	nop

00000000000023d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE>:
    23d0:	sub	sp, sp, #0x200
    23d4:	stp	x29, x30, [sp, #16]
    23d8:	add	x29, sp, #0x10
    23dc:	str	x1, [sp, #168]
    23e0:	add	x1, x0, #0x48
    23e4:	str	x0, [sp, #192]
    23e8:	ldr	x0, [x0, #80]
    23ec:	stp	x21, x22, [sp, #48]
    23f0:	str	x0, [sp, #120]
    23f4:	cmp	x0, x1
    23f8:	str	x1, [sp, #176]
    23fc:	b.eq	3640 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1270>  // b.none
    2400:	stp	x25, x26, [sp, #80]
    2404:	add	x25, sp, #0x198
    2408:	add	x0, x25, #0x8
    240c:	stp	x27, x28, [sp, #96]
    2410:	add	x27, sp, #0x1b8
    2414:	mov	w22, #0x0                   	// #0
    2418:	stp	x19, x20, [sp, #32]
    241c:	stp	x23, x24, [sp, #64]
    2420:	str	x0, [sp, #128]
    2424:	add	x0, x27, #0x2
    2428:	str	x0, [sp, #184]
    242c:	nop
    2430:	ldr	x0, [sp, #120]
    2434:	ldr	x0, [x0]
    2438:	tst	w0, #0x4
    243c:	b.ne	36cc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12fc>  // b.any
    2440:	ldr	x0, [sp, #168]
    2444:	ldr	w1, [x0, #48]
    2448:	ldr	x2, [x0, #32]
    244c:	cbz	w1, 2928 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x558>
    2450:	ldr	x4, [sp, #120]
    2454:	cmp	x4, #0x8
    2458:	sub	x3, x4, #0x18
    245c:	cset	w0, ne  // ne = any
    2460:	cmp	x4, #0x10
    2464:	csel	w0, w0, wzr, ne  // ne = any
    2468:	str	w0, [sp, #116]
    246c:	cbz	w0, 36dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x130c>
    2470:	lsr	w0, w3, #9
    2474:	sub	w6, w1, #0x1
    2478:	eor	w0, w0, w3, lsr #4
    247c:	and	w0, w0, w6
    2480:	lsl	w5, w0, #4
    2484:	add	x4, x2, x5
    2488:	ldr	x5, [x2, x5]
    248c:	cmp	x3, x5
    2490:	b.ne	291c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x54c>  // b.any
    2494:	ubfiz	x1, x1, #4, #32
    2498:	add	x1, x2, x1
    249c:	cmp	x4, x1
    24a0:	b.eq	2928 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x558>  // b.none
    24a4:	ldr	x0, [x4, #8]
    24a8:	cbz	x0, 2928 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x558>
    24ac:	ldr	x26, [sp, #120]
    24b0:	ldr	x19, [x26, #16]!
    24b4:	and	x19, x19, #0xfffffffffffffff8
    24b8:	cmp	x26, x19
    24bc:	b.eq	2928 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x558>  // b.none
    24c0:	add	x24, sp, #0x180
    24c4:	b	2598 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1c8>
    24c8:	cmp	w0, #0x5
    24cc:	b.eq	2664 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x294>  // b.none
    24d0:	cmp	w0, #0x4f
    24d4:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    24d8:	ldr	w0, [x21, #20]
    24dc:	ubfx	x0, x0, #0, #28
    24e0:	cmp	w0, #0x2
    24e4:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    24e8:	ldur	x0, [x19, #-24]
    24ec:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    24f0:	cbz	w0, 2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    24f4:	sub	w1, w0, #0x1
    24f8:	tst	w1, w0
    24fc:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    2500:	ldrb	w0, [x21, #23]
    2504:	tbz	w0, #6, 2fd0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc00>
    2508:	ldur	x4, [x19, #-32]
    250c:	add	x28, sp, #0x168
    2510:	ldr	x5, [x4, #24]
    2514:	add	x1, sp, #0x150
    2518:	ldr	x23, [x4]
    251c:	mov	x2, x28
    2520:	str	x5, [sp, #136]
    2524:	mov	x0, x23
    2528:	str	x1, [sp, #160]
    252c:	bl	c58 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>
    2530:	mov	w4, w0
    2534:	ldr	x5, [sp, #136]
    2538:	ldr	x1, [sp, #160]
    253c:	cbz	w0, 254c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x17c>
    2540:	ldr	x0, [sp, #336]
    2544:	cmp	x0, x5
    2548:	b.eq	343c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x106c>  // b.none
    254c:	mov	x2, x28
    2550:	mov	x0, x5
    2554:	str	x5, [sp, #136]
    2558:	bl	c58 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>
    255c:	mov	w4, w0
    2560:	cbz	w0, 2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    2564:	ldr	x3, [sp, #336]
    2568:	cmp	x3, x23
    256c:	b.eq	3190 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xdc0>  // b.none
    2570:	mov	x0, x21
    2574:	bl	1408 <_ZL22tryToRecognizePopCountRN4llvm11InstructionE>
    2578:	ldr	x19, [x19]
    257c:	tst	w0, #0xff
    2580:	ccmp	w20, #0x0, #0x0, eq  // eq = none
    2584:	cset	w0, ne  // ne = any
    2588:	and	x19, x19, #0xfffffffffffffff8
    258c:	orr	w22, w22, w0
    2590:	cmp	x26, x19
    2594:	b.eq	2928 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x558>  // b.none
    2598:	ldr	x20, [x19]
    259c:	tst	w20, #0x4
    25a0:	ubfx	w20, w20, #2, #1
    25a4:	b.ne	3620 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1250>  // b.any
    25a8:	ldurb	w0, [x19, #-8]
    25ac:	sub	x21, x19, #0x18
    25b0:	cmp	w0, #0x34
    25b4:	b.ne	24c8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xf8>  // b.any
    25b8:	ldur	x23, [x19, #-72]
    25bc:	mov	x0, x23
    25c0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    25c4:	ldr	x0, [x23, #8]
    25c8:	cbz	x0, 25d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x204>
    25cc:	ldr	x0, [x0, #8]
    25d0:	cbz	x0, 29a4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5d4>
    25d4:	ldur	x23, [x19, #-48]
    25d8:	mov	x0, x23
    25dc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    25e0:	ldr	x0, [x23, #8]
    25e4:	cbz	x0, 25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>
    25e8:	ldr	x0, [x0, #8]
    25ec:	cbz	x0, 2fd8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc08>
    25f0:	ldurb	w0, [x19, #-8]
    25f4:	cmp	w0, #0x34
    25f8:	b.ne	348c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x10bc>  // b.any
    25fc:	ldur	x23, [x19, #-72]
    2600:	mov	x0, x23
    2604:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2608:	ldr	x0, [x23, #8]
    260c:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    2610:	ldr	x0, [x0, #8]
    2614:	cbz	x0, 2620 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x250>
    2618:	ldurb	w0, [x19, #-8]
    261c:	b	24d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x100>
    2620:	ldrb	w0, [x23, #16]
    2624:	cmp	w0, #0x35
    2628:	b.eq	3074 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xca4>  // b.none
    262c:	cmp	w0, #0x5
    2630:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    2634:	ldrh	w0, [x23, #18]
    2638:	cmp	w0, #0x1d
    263c:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    2640:	mov	x0, x23
    2644:	mov	w1, #0x0                   	// #0
    2648:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    264c:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2650:	mov	x0, x23
    2654:	mov	w1, #0x1                   	// #1
    2658:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    265c:	cbnz	x0, 308c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xcbc>
    2660:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    2664:	ldurh	w0, [x19, #-6]
    2668:	cmp	w0, #0x1c
    266c:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    2670:	ldr	w0, [x21, #20]
    2674:	ubfx	x0, x0, #0, #28
    2678:	cbz	w0, 37bc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13ec>
    267c:	mov	w1, w0
    2680:	ubfiz	x0, x0, #2, #28
    2684:	sub	x0, x1, x0
    2688:	ldr	x23, [x21, x0, lsl #3]
    268c:	cbz	x23, 388c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x14bc>
    2690:	ldrb	w0, [x23, #16]
    2694:	cmp	w0, #0x10
    2698:	b.hi	370c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x133c>  // b.pmore
    269c:	mov	x0, x23
    26a0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    26a4:	ldr	x0, [x23, #8]
    26a8:	cbz	x0, 26b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x2e4>
    26ac:	ldr	x0, [x0, #8]
    26b0:	cbz	x0, 3030 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc60>
    26b4:	mov	w1, #0x1                   	// #1
    26b8:	mov	x0, x21
    26bc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    26c0:	mov	x23, x0
    26c4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    26c8:	ldr	x0, [x23, #8]
    26cc:	cbz	x0, 25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>
    26d0:	ldr	x0, [x0, #8]
    26d4:	cbnz	x0, 25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>
    26d8:	ldrb	w0, [x23, #16]
    26dc:	cmp	w0, #0x34
    26e0:	b.eq	3508 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1138>  // b.none
    26e4:	cmp	w0, #0x5
    26e8:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    26ec:	ldrh	w0, [x23, #18]
    26f0:	cmp	w0, #0x1c
    26f4:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    26f8:	mov	x0, x23
    26fc:	mov	w1, #0x0                   	// #0
    2700:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2704:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2708:	mov	x0, x23
    270c:	mov	w1, #0x1                   	// #1
    2710:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2714:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2718:	mov	x0, x21
    271c:	mov	w1, #0x0                   	// #0
    2720:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    2724:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    2728:	ldr	w23, [sp, #116]
    272c:	ldur	x0, [x19, #-24]
    2730:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2734:	str	xzr, [sp, #408]
    2738:	str	w0, [sp, #424]
    273c:	cbz	w0, 3600 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1230>
    2740:	cmp	w0, #0x40
    2744:	b.hi	2a98 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6c8>  // b.pmore
    2748:	str	xzr, [sp, #416]
    274c:	strb	w23, [sp, #432]
    2750:	strb	wzr, [sp, #433]
    2754:	cbz	w23, 2a70 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6a0>
    2758:	ldurb	w0, [x19, #-8]
    275c:	sub	w0, w0, #0x25
    2760:	cmp	w0, #0x11
    2764:	b.hi	3648 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1278>  // b.pmore
    2768:	mov	x1, x25
    276c:	mov	x0, x21
    2770:	bl	420 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
    2774:	tst	w0, #0xff
    2778:	b.eq	28fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x52c>  // b.none
    277c:	ldrb	w0, [sp, #433]
    2780:	cbz	w0, 28fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x52c>
    2784:	mov	x0, x21
    2788:	bl	0 <_ZNK4llvm5Value10getContextEv>
    278c:	mov	w1, #0x200                 	// #512
    2790:	str	xzr, [sp, #456]
    2794:	strh	w1, [sp, #484]
    2798:	stp	xzr, xzr, [sp, #488]
    279c:	ldr	x1, [x19, #16]
    27a0:	str	xzr, [sp, #440]
    27a4:	stp	x1, x19, [sp, #448]
    27a8:	add	x1, x1, #0x28
    27ac:	stp	x0, xzr, [sp, #464]
    27b0:	cmp	x19, x1
    27b4:	str	wzr, [sp, #480]
    27b8:	strb	wzr, [sp, #486]
    27bc:	b.eq	3668 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1298>  // b.none
    27c0:	ldr	x1, [x19, #24]
    27c4:	str	x1, [sp, #384]
    27c8:	cbz	x1, 2800 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x430>
    27cc:	mov	x0, x24
    27d0:	mov	x2, #0x2                   	// #2
    27d4:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    27d8:	ldr	x1, [sp, #440]
    27dc:	cbz	x1, 27e8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x418>
    27e0:	mov	x0, x27
    27e4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    27e8:	ldr	x1, [sp, #384]
    27ec:	str	x1, [sp, #440]
    27f0:	cbz	x1, 2800 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x430>
    27f4:	mov	x2, x27
    27f8:	mov	x0, x24
    27fc:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2800:	ldur	x0, [x19, #-24]
    2804:	add	x1, x25, #0x8
    2808:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
    280c:	stp	xzr, xzr, [sp, #288]
    2810:	mov	w1, #0x101                 	// #257
    2814:	strh	w1, [sp, #304]
    2818:	mov	x22, x0
    281c:	ldr	x28, [sp, #408]
    2820:	cbz	x0, 35e0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1210>
    2824:	ldrb	w0, [x22, #16]
    2828:	cmp	w0, #0x10
    282c:	b.hi	2aac <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6dc>  // b.pmore
    2830:	cmp	w0, #0xd
    2834:	b.eq	29f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x620>  // b.none
    2838:	cbz	x28, 35e0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1210>
    283c:	ldrb	w0, [x28, #16]
    2840:	cmp	w0, #0x10
    2844:	b.hi	2aac <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x6dc>  // b.pmore
    2848:	mov	x0, x28
    284c:	mov	x1, x22
    2850:	bl	0 <_ZN4llvm12ConstantExpr6getAndEPNS_8ConstantES2_>
    2854:	mov	x28, x0
    2858:	cbz	w23, 2a20 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x650>
    285c:	mov	w0, #0x101                 	// #257
    2860:	stp	xzr, xzr, [sp, #264]
    2864:	strh	w0, [sp, #280]
    2868:	cbz	x28, 35e0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1210>
    286c:	ldrb	w0, [x28, #16]
    2870:	cmp	w0, #0x10
    2874:	b.hi	2b94 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x7c4>  // b.pmore
    2878:	ldrb	w0, [x22, #16]
    287c:	cmp	w0, #0x10
    2880:	b.hi	2b94 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x7c4>  // b.pmore
    2884:	mov	x2, x22
    2888:	mov	x1, x28
    288c:	mov	w3, #0x0                   	// #0
    2890:	mov	w0, #0x20                  	// #32
    2894:	bl	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
    2898:	mov	x23, x0
    289c:	nop
    28a0:	ldur	x2, [x19, #-24]
    28a4:	mov	w5, #0x101                 	// #257
    28a8:	ldr	x0, [x23]
    28ac:	stp	xzr, xzr, [sp, #216]
    28b0:	strh	w5, [sp, #232]
    28b4:	cmp	x2, x0
    28b8:	b.eq	28dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x50c>  // b.none
    28bc:	ldrb	w0, [x23, #16]
    28c0:	mov	x1, x23
    28c4:	cmp	w0, #0x10
    28c8:	b.hi	2ebc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xaec>  // b.pmore
    28cc:	mov	w3, #0x0                   	// #0
    28d0:	mov	w0, #0x27                  	// #39
    28d4:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    28d8:	mov	x23, x0
    28dc:	mov	x1, x23
    28e0:	mov	x0, x21
    28e4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    28e8:	ldr	x1, [sp, #440]
    28ec:	cbz	x1, 28f8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x528>
    28f0:	mov	x0, x27
    28f4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    28f8:	ldr	w22, [sp, #116]
    28fc:	ldr	w0, [sp, #424]
    2900:	cmp	w0, #0x40
    2904:	b.ls	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.plast
    2908:	ldr	x0, [sp, #416]
    290c:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    2910:	bl	0 <_ZdaPv>
    2914:	ldurb	w0, [x19, #-8]
    2918:	b	24d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x100>
    291c:	mov	w4, #0x1                   	// #1
    2920:	cmn	x5, #0x8
    2924:	b.ne	3574 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x11a4>  // b.any
    2928:	ldr	x0, [sp, #120]
    292c:	ldr	x1, [sp, #176]
    2930:	ldr	x0, [x0, #8]
    2934:	str	x0, [sp, #120]
    2938:	cmp	x1, x0
    293c:	b.ne	2430 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x60>  // b.any
    2940:	cbz	w22, 2980 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5b0>
    2944:	ldr	x0, [sp, #192]
    2948:	ldr	x19, [x0, #80]
    294c:	ldr	x0, [sp, #120]
    2950:	cmp	x0, x19
    2954:	b.eq	2980 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5b0>  // b.none
    2958:	ldr	x0, [x19]
    295c:	tst	w0, #0x4
    2960:	b.ne	36cc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12fc>  // b.any
    2964:	sub	x0, x19, #0x18
    2968:	mov	x1, #0x0                   	// #0
    296c:	bl	0 <_ZN4llvm27SimplifyInstructionsInBlockEPNS_10BasicBlockEPKNS_17TargetLibraryInfoE>
    2970:	ldr	x19, [x19, #8]
    2974:	ldr	x0, [sp, #120]
    2978:	cmp	x0, x19
    297c:	b.ne	2958 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x588>  // b.any
    2980:	ldp	x19, x20, [sp, #32]
    2984:	ldp	x23, x24, [sp, #64]
    2988:	ldp	x25, x26, [sp, #80]
    298c:	ldp	x27, x28, [sp, #96]
    2990:	mov	w0, w22
    2994:	ldp	x29, x30, [sp, #16]
    2998:	ldp	x21, x22, [sp, #48]
    299c:	add	sp, sp, #0x200
    29a0:	ret
    29a4:	ldrb	w0, [x23, #16]
    29a8:	cmp	w0, #0x34
    29ac:	b.eq	2fbc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbec>  // b.none
    29b0:	cmp	w0, #0x5
    29b4:	b.ne	25d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x204>  // b.any
    29b8:	ldrh	w0, [x23, #18]
    29bc:	cmp	w0, #0x1c
    29c0:	b.ne	25d4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x204>  // b.any
    29c4:	mov	x0, x23
    29c8:	mov	w1, #0x0                   	// #0
    29cc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    29d0:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    29d4:	mov	x0, x23
    29d8:	mov	w1, #0x1                   	// #1
    29dc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    29e0:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    29e4:	ldur	x0, [x19, #-48]
    29e8:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    29ec:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    29f0:	ldr	w1, [x22, #32]
    29f4:	cmp	w1, #0x40
    29f8:	b.ls	2f9c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbcc>  // b.plast
    29fc:	add	x0, x22, #0x18
    2a00:	str	w1, [sp, #136]
    2a04:	bl	0 <_ZNK4llvm5APInt25countTrailingOnesSlowCaseEv>
    2a08:	ldr	w1, [sp, #136]
    2a0c:	cmp	w1, w0
    2a10:	cset	w0, eq  // eq = none
    2a14:	cbz	w0, 2838 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x468>
    2a18:	cbnz	w23, 285c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x48c>
    2a1c:	nop
    2a20:	ldr	x0, [x28]
    2a24:	mov	w1, #0x101                 	// #257
    2a28:	stp	xzr, xzr, [sp, #240]
    2a2c:	strh	w1, [sp, #256]
    2a30:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    2a34:	ldrb	w1, [x28, #16]
    2a38:	mov	x22, x0
    2a3c:	cmp	w1, #0x10
    2a40:	b.hi	2cf4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x924>  // b.pmore
    2a44:	cbz	x0, 35e0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1210>
    2a48:	ldrb	w0, [x0, #16]
    2a4c:	cmp	w0, #0x10
    2a50:	b.hi	2cf4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x924>  // b.pmore
    2a54:	mov	x2, x22
    2a58:	mov	x1, x28
    2a5c:	mov	w3, #0x0                   	// #0
    2a60:	mov	w0, #0x21                  	// #33
    2a64:	bl	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
    2a68:	mov	x23, x0
    2a6c:	b	28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2a70:	ldurb	w0, [x19, #-8]
    2a74:	sub	w0, w0, #0x25
    2a78:	cmp	w0, #0x11
    2a7c:	b.hi	3648 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1278>  // b.pmore
    2a80:	ldur	x0, [x19, #-72]
    2a84:	mov	x1, x25
    2a88:	bl	420 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
    2a8c:	tst	w0, #0xff
    2a90:	b.ne	2784 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x3b4>  // b.any
    2a94:	b	28fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x52c>
    2a98:	ldr	x0, [sp, #128]
    2a9c:	mov	w2, #0x0                   	// #0
    2aa0:	mov	x1, #0x0                   	// #0
    2aa4:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    2aa8:	b	274c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x37c>
    2aac:	mov	w5, #0x101                 	// #257
    2ab0:	mov	x1, x28
    2ab4:	add	x3, sp, #0x138
    2ab8:	mov	x2, x22
    2abc:	mov	x4, #0x0                   	// #0
    2ac0:	mov	w0, #0x1c                  	// #28
    2ac4:	stp	xzr, xzr, [sp, #312]
    2ac8:	strh	w5, [sp, #328]
    2acc:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
    2ad0:	ldr	x1, [sp, #448]
    2ad4:	mov	x28, x0
    2ad8:	cbz	x1, 2b2c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x75c>
    2adc:	ldr	x2, [sp, #456]
    2ae0:	add	x0, x1, #0x28
    2ae4:	mov	x1, x28
    2ae8:	str	x2, [sp, #136]
    2aec:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2af0:	ldr	x2, [sp, #136]
    2af4:	add	x5, x28, #0x18
    2af8:	ldr	x1, [x28, #24]
    2afc:	tst	x5, #0x7
    2b00:	ldr	x3, [x2]
    2b04:	and	x1, x1, #0x7
    2b08:	and	x3, x3, #0xfffffffffffffff8
    2b0c:	orr	x1, x1, x3
    2b10:	stp	x1, x2, [x28, #24]
    2b14:	ldr	x0, [x2]
    2b18:	str	x5, [x3, #8]
    2b1c:	b.ne	373c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x136c>  // b.any
    2b20:	and	x0, x0, #0x7
    2b24:	orr	x0, x0, x5
    2b28:	str	x0, [x2]
    2b2c:	add	x1, sp, #0x120
    2b30:	mov	x0, x28
    2b34:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2b38:	ldr	x1, [sp, #440]
    2b3c:	cbz	x1, 2858 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x488>
    2b40:	add	x3, x28, #0x30
    2b44:	mov	x0, x24
    2b48:	mov	x2, #0x2                   	// #2
    2b4c:	str	x3, [sp, #136]
    2b50:	str	x1, [sp, #384]
    2b54:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2b58:	ldr	x3, [sp, #136]
    2b5c:	cmp	x3, x24
    2b60:	b.eq	2f88 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xbb8>  // b.none
    2b64:	ldr	x1, [x28, #48]
    2b68:	cbz	x1, 2b78 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x7a8>
    2b6c:	mov	x0, x3
    2b70:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2b74:	ldr	x3, [sp, #136]
    2b78:	ldr	x1, [sp, #384]
    2b7c:	str	x1, [x3]
    2b80:	cbz	x1, 2858 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x488>
    2b84:	mov	x2, x3
    2b88:	mov	x0, x24
    2b8c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2b90:	b	2858 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x488>
    2b94:	mov	w2, #0x101                 	// #257
    2b98:	mov	w1, #0x2                   	// #2
    2b9c:	mov	x0, #0x38                  	// #56
    2ba0:	stp	xzr, xzr, [sp, #336]
    2ba4:	strh	w2, [sp, #352]
    2ba8:	bl	0 <_ZN4llvm4UsernwEmj>
    2bac:	ldr	x1, [x28]
    2bb0:	mov	x23, x0
    2bb4:	cbz	x1, 36bc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12ec>
    2bb8:	ldrb	w2, [x1, #8]
    2bbc:	ldr	x0, [x1]
    2bc0:	cmp	w2, #0x10
    2bc4:	b.eq	2e7c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xaac>  // b.none
    2bc8:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2bcc:	mov	x1, x0
    2bd0:	str	xzr, [sp]
    2bd4:	mov	x0, x23
    2bd8:	mov	x5, x22
    2bdc:	mov	x4, x28
    2be0:	add	x6, sp, #0x150
    2be4:	mov	x7, #0x0                   	// #0
    2be8:	mov	w3, #0x20                  	// #32
    2bec:	mov	w2, #0x35                  	// #53
    2bf0:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
    2bf4:	ldrh	w0, [x23, #18]
    2bf8:	and	w0, w0, #0xffff7fff
    2bfc:	sub	w0, w0, #0x20
    2c00:	cmp	w0, #0x9
    2c04:	b.hi	386c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x149c>  // b.pmore
    2c08:	ldur	x1, [x23, #-48]
    2c0c:	ldur	x0, [x23, #-24]
    2c10:	ldr	x1, [x1]
    2c14:	ldr	x0, [x0]
    2c18:	cmp	x1, x0
    2c1c:	b.ne	384c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x147c>  // b.any
    2c20:	ldrb	w0, [x1, #8]
    2c24:	cmp	w0, #0x10
    2c28:	b.ne	2c38 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x868>  // b.any
    2c2c:	ldr	x0, [x1, #16]
    2c30:	ldr	x0, [x0]
    2c34:	ldrb	w0, [x0, #8]
    2c38:	and	w0, w0, #0xfffffffb
    2c3c:	and	w0, w0, #0xff
    2c40:	cmp	w0, #0xb
    2c44:	b.ne	37fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x142c>  // b.any
    2c48:	ldr	x0, [sp, #448]
    2c4c:	cbz	x0, 2c98 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x8c8>
    2c50:	ldr	x22, [sp, #456]
    2c54:	add	x0, x0, #0x28
    2c58:	mov	x1, x23
    2c5c:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2c60:	ldr	x0, [x23, #24]
    2c64:	add	x2, x23, #0x18
    2c68:	ldr	x1, [x22]
    2c6c:	and	x0, x0, #0x7
    2c70:	tst	x2, #0x7
    2c74:	and	x1, x1, #0xfffffffffffffff8
    2c78:	orr	x0, x0, x1
    2c7c:	stp	x0, x22, [x23, #24]
    2c80:	ldr	x0, [x22]
    2c84:	str	x2, [x1, #8]
    2c88:	b.ne	373c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x136c>  // b.any
    2c8c:	and	x0, x0, #0x7
    2c90:	orr	x0, x0, x2
    2c94:	str	x0, [x22]
    2c98:	add	x1, sp, #0x108
    2c9c:	mov	x0, x23
    2ca0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2ca4:	ldr	x1, [sp, #440]
    2ca8:	cbz	x1, 28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2cac:	mov	x0, x24
    2cb0:	add	x22, x23, #0x30
    2cb4:	mov	x2, #0x2                   	// #2
    2cb8:	str	x1, [sp, #384]
    2cbc:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2cc0:	cmp	x22, x24
    2cc4:	b.eq	2e28 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xa58>  // b.none
    2cc8:	ldr	x1, [x23, #48]
    2ccc:	cbz	x1, 2cd8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x908>
    2cd0:	mov	x0, x22
    2cd4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2cd8:	ldr	x1, [sp, #384]
    2cdc:	str	x1, [x22]
    2ce0:	cbz	x1, 28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2ce4:	mov	x2, x22
    2ce8:	mov	x0, x24
    2cec:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2cf0:	b	28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2cf4:	mov	w2, #0x101                 	// #257
    2cf8:	mov	w1, #0x2                   	// #2
    2cfc:	mov	x0, #0x38                  	// #56
    2d00:	stp	xzr, xzr, [sp, #360]
    2d04:	strh	w2, [sp, #376]
    2d08:	bl	0 <_ZN4llvm4UsernwEmj>
    2d0c:	ldr	x1, [x28]
    2d10:	mov	x23, x0
    2d14:	cbz	x1, 36bc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12ec>
    2d18:	ldrb	w2, [x1, #8]
    2d1c:	ldr	x0, [x1]
    2d20:	cmp	w2, #0x10
    2d24:	b.eq	2e3c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xa6c>  // b.none
    2d28:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2d2c:	mov	x1, x0
    2d30:	str	xzr, [sp]
    2d34:	mov	x0, x23
    2d38:	mov	x5, x22
    2d3c:	mov	x4, x28
    2d40:	add	x6, sp, #0x168
    2d44:	mov	x7, #0x0                   	// #0
    2d48:	mov	w3, #0x21                  	// #33
    2d4c:	mov	w2, #0x35                  	// #53
    2d50:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
    2d54:	ldrh	w0, [x23, #18]
    2d58:	and	w0, w0, #0xffff7fff
    2d5c:	sub	w0, w0, #0x20
    2d60:	cmp	w0, #0x9
    2d64:	b.hi	386c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x149c>  // b.pmore
    2d68:	ldur	x1, [x23, #-48]
    2d6c:	ldur	x0, [x23, #-24]
    2d70:	ldr	x1, [x1]
    2d74:	ldr	x0, [x0]
    2d78:	cmp	x1, x0
    2d7c:	b.ne	384c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x147c>  // b.any
    2d80:	ldrb	w0, [x1, #8]
    2d84:	cmp	w0, #0x10
    2d88:	b.ne	2d98 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x9c8>  // b.any
    2d8c:	ldr	x0, [x1, #16]
    2d90:	ldr	x0, [x0]
    2d94:	ldrb	w0, [x0, #8]
    2d98:	and	w0, w0, #0xfffffffb
    2d9c:	and	w0, w0, #0xff
    2da0:	cmp	w0, #0xb
    2da4:	b.ne	37fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x142c>  // b.any
    2da8:	ldr	x0, [sp, #448]
    2dac:	cbz	x0, 2df8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xa28>
    2db0:	ldr	x22, [sp, #456]
    2db4:	add	x0, x0, #0x28
    2db8:	mov	x1, x23
    2dbc:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2dc0:	ldr	x0, [x23, #24]
    2dc4:	add	x2, x23, #0x18
    2dc8:	ldr	x1, [x22]
    2dcc:	and	x0, x0, #0x7
    2dd0:	tst	x2, #0x7
    2dd4:	and	x1, x1, #0xfffffffffffffff8
    2dd8:	orr	x0, x0, x1
    2ddc:	stp	x0, x22, [x23, #24]
    2de0:	ldr	x0, [x22]
    2de4:	str	x2, [x1, #8]
    2de8:	b.ne	373c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x136c>  // b.any
    2dec:	and	x0, x0, #0x7
    2df0:	orr	x0, x0, x2
    2df4:	str	x0, [x22]
    2df8:	add	x1, sp, #0xf0
    2dfc:	mov	x0, x23
    2e00:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2e04:	ldr	x1, [sp, #440]
    2e08:	cbz	x1, 28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2e0c:	mov	x0, x24
    2e10:	add	x22, x23, #0x30
    2e14:	mov	x2, #0x2                   	// #2
    2e18:	str	x1, [sp, #384]
    2e1c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2e20:	cmp	x22, x24
    2e24:	b.ne	2cc8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x8f8>  // b.any
    2e28:	ldr	x1, [sp, #384]
    2e2c:	cbz	x1, 28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2e30:	mov	x0, x24
    2e34:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2e38:	b	28a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x4d0>
    2e3c:	str	x1, [sp, #136]
    2e40:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2e44:	ldr	x1, [sp, #136]
    2e48:	mov	x3, #0xffffffff            	// #4294967295
    2e4c:	ldr	x2, [x1, #32]
    2e50:	cmp	x2, x3
    2e54:	b.hi	37dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x140c>  // b.pmore
    2e58:	ldr	x3, [sp, #144]
    2e5c:	ldrb	w1, [x1, #40]
    2e60:	bfxil	x3, x2, #0, #32
    2e64:	bfi	x3, x1, #32, #8
    2e68:	str	x3, [sp, #144]
    2e6c:	mov	x1, x3
    2e70:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
    2e74:	mov	x1, x0
    2e78:	b	2d30 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x960>
    2e7c:	str	x1, [sp, #136]
    2e80:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    2e84:	ldr	x1, [sp, #136]
    2e88:	mov	x3, #0xffffffff            	// #4294967295
    2e8c:	ldr	x2, [x1, #32]
    2e90:	cmp	x2, x3
    2e94:	b.hi	37dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x140c>  // b.pmore
    2e98:	ldr	x3, [sp, #152]
    2e9c:	ldrb	w1, [x1, #40]
    2ea0:	bfxil	x3, x2, #0, #32
    2ea4:	bfi	x3, x1, #32, #8
    2ea8:	str	x3, [sp, #152]
    2eac:	mov	x1, x3
    2eb0:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
    2eb4:	mov	x1, x0
    2eb8:	b	2bd0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x800>
    2ebc:	mov	x3, x24
    2ec0:	mov	x4, #0x0                   	// #0
    2ec4:	mov	w0, #0x27                  	// #39
    2ec8:	stp	xzr, xzr, [sp, #384]
    2ecc:	strh	w5, [sp, #400]
    2ed0:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    2ed4:	ldr	x1, [sp, #448]
    2ed8:	mov	x23, x0
    2edc:	cbz	x1, 2f28 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xb58>
    2ee0:	ldr	x22, [sp, #456]
    2ee4:	add	x0, x1, #0x28
    2ee8:	mov	x1, x23
    2eec:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
    2ef0:	ldr	x0, [x23, #24]
    2ef4:	add	x2, x23, #0x18
    2ef8:	ldr	x1, [x22]
    2efc:	and	x0, x0, #0x7
    2f00:	tst	x2, #0x7
    2f04:	and	x1, x1, #0xfffffffffffffff8
    2f08:	orr	x0, x0, x1
    2f0c:	stp	x0, x22, [x23, #24]
    2f10:	ldr	x0, [x22]
    2f14:	str	x2, [x1, #8]
    2f18:	b.ne	373c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x136c>  // b.any
    2f1c:	and	x0, x0, #0x7
    2f20:	orr	x0, x0, x2
    2f24:	str	x0, [x22]
    2f28:	add	x1, sp, #0xd8
    2f2c:	mov	x0, x23
    2f30:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    2f34:	ldr	x1, [sp, #440]
    2f38:	cbz	x1, 28dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x50c>
    2f3c:	add	x28, sp, #0x168
    2f40:	add	x22, x23, #0x30
    2f44:	mov	x0, x28
    2f48:	mov	x2, #0x2                   	// #2
    2f4c:	str	x1, [sp, #360]
    2f50:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    2f54:	cmp	x22, x28
    2f58:	b.eq	301c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc4c>  // b.none
    2f5c:	ldr	x1, [x23, #48]
    2f60:	cbz	x1, 2f6c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xb9c>
    2f64:	mov	x0, x22
    2f68:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2f6c:	ldr	x1, [sp, #360]
    2f70:	str	x1, [x22]
    2f74:	cbz	x1, 28dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x50c>
    2f78:	mov	x2, x22
    2f7c:	mov	x0, x28
    2f80:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    2f84:	b	28dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x50c>
    2f88:	ldr	x1, [sp, #384]
    2f8c:	cbz	x1, 2858 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x488>
    2f90:	mov	x0, x24
    2f94:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2f98:	b	2858 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x488>
    2f9c:	ldr	x2, [x22, #24]
    2fa0:	neg	w1, w1
    2fa4:	mov	x0, #0xffffffffffffffff    	// #-1
    2fa8:	lsr	x1, x0, x1
    2fac:	cmp	x1, x2
    2fb0:	cset	w0, eq  // eq = none
    2fb4:	cbz	w0, 2838 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x468>
    2fb8:	b	2a18 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x648>
    2fbc:	ldur	x0, [x23, #-48]
    2fc0:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    2fc4:	ldur	x0, [x23, #-24]
    2fc8:	cbnz	x0, 29e4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x614>
    2fcc:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    2fd0:	sub	x4, x19, #0x48
    2fd4:	b	250c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13c>
    2fd8:	ldrb	w0, [x23, #16]
    2fdc:	cmp	w0, #0x34
    2fe0:	b.eq	3444 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1074>  // b.none
    2fe4:	cmp	w0, #0x5
    2fe8:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    2fec:	ldrh	w0, [x23, #18]
    2ff0:	cmp	w0, #0x1c
    2ff4:	b.ne	25f0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x220>  // b.any
    2ff8:	mov	x0, x23
    2ffc:	mov	w1, #0x0                   	// #0
    3000:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3004:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    3008:	mov	x0, x23
    300c:	mov	w1, #0x1                   	// #1
    3010:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3014:	cbnz	x0, 345c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x108c>
    3018:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    301c:	ldr	x1, [sp, #360]
    3020:	cbz	x1, 28dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x50c>
    3024:	mov	x0, x22
    3028:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    302c:	b	28dc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x50c>
    3030:	ldrb	w0, [x23, #16]
    3034:	cmp	w0, #0x34
    3038:	b.eq	3468 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1098>  // b.none
    303c:	cmp	w0, #0x5
    3040:	b.ne	26b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x2e4>  // b.any
    3044:	ldrh	w0, [x23, #18]
    3048:	cmp	w0, #0x1c
    304c:	b.ne	26b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x2e4>  // b.any
    3050:	mov	x0, x23
    3054:	mov	w1, #0x0                   	// #0
    3058:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    305c:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    3060:	mov	x0, x23
    3064:	mov	w1, #0x1                   	// #1
    3068:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    306c:	cbnz	x0, 3478 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x10a8>
    3070:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    3074:	mov	x0, x23
    3078:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    307c:	ldur	x1, [x0, #-48]
    3080:	cbz	x1, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3084:	ldur	x0, [x0, #-24]
    3088:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    308c:	ldur	x28, [x19, #-48]
    3090:	cbz	x28, 36fc <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x132c>
    3094:	ldrb	w0, [x28, #16]
    3098:	cmp	w0, #0xd
    309c:	b.eq	3168 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd98>  // b.none
    30a0:	ldr	x0, [x28]
    30a4:	ldrb	w0, [x0, #8]
    30a8:	cmp	w0, #0x10
    30ac:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    30b0:	mov	x0, x28
    30b4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    30b8:	str	x0, [sp, #136]
    30bc:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    30c0:	mov	w1, #0x0                   	// #0
    30c4:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
    30c8:	cbz	x0, 30d8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd08>
    30cc:	ldrb	w1, [x0, #16]
    30d0:	cmp	w1, #0xd
    30d4:	b.eq	35b0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x11e0>  // b.none
    30d8:	ldr	x0, [x28]
    30dc:	cbz	x0, 37b8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13e8>
    30e0:	ldrb	w1, [x0, #8]
    30e4:	cmp	w1, #0x10
    30e8:	b.ne	37a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13d8>  // b.any
    30ec:	ldr	x0, [x0, #32]
    30f0:	str	w0, [sp, #160]
    30f4:	cbz	w0, 3788 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13b8>
    30f8:	mov	w28, #0x0                   	// #0
    30fc:	mov	w23, #0x0                   	// #0
    3100:	ldr	x0, [sp, #136]
    3104:	mov	w1, w23
    3108:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
    310c:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    3110:	ldrb	w3, [x0, #16]
    3114:	cmp	w3, #0x9
    3118:	b.eq	3148 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd78>  // b.none
    311c:	cmp	w3, #0xd
    3120:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    3124:	ldr	w28, [x0, #32]
    3128:	cmp	w28, #0x40
    312c:	b.ls	35a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x11d0>  // b.plast
    3130:	add	x0, x0, #0x18
    3134:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3138:	sub	w2, w28, #0x1
    313c:	cmp	w2, w0
    3140:	cset	w28, eq  // eq = none
    3144:	cbz	w28, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    3148:	ldr	w0, [sp, #160]
    314c:	add	w23, w23, #0x1
    3150:	cmp	w0, w23
    3154:	b.ne	3100 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd30>  // b.any
    3158:	cbz	w28, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    315c:	nop
    3160:	mov	w23, #0x0                   	// #0
    3164:	b	272c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x35c>
    3168:	ldr	w23, [x28, #32]
    316c:	cmp	w23, #0x40
    3170:	b.ls	3428 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1058>  // b.plast
    3174:	sub	w23, w23, #0x1
    3178:	add	x0, x28, #0x18
    317c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3180:	cmp	w23, w0
    3184:	cset	w28, eq  // eq = none
    3188:	cbnz	w28, 3160 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd90>
    318c:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    3190:	sub	w0, w0, #0x82
    3194:	cmp	w0, #0x1
    3198:	ldr	x5, [sp, #136]
    319c:	b.hi	382c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x145c>  // b.pmore
    31a0:	ldrb	w1, [x21, #23]
    31a4:	cmp	x3, x5
    31a8:	cset	w0, eq  // eq = none
    31ac:	tbz	w1, #6, 3414 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1044>
    31b0:	ldur	x2, [x19, #-32]
    31b4:	mov	w7, #0x18                  	// #24
    31b8:	ldr	w1, [x21, #56]
    31bc:	mov	x6, #0x8                   	// #8
    31c0:	and	x0, x0, #0xff
    31c4:	cmp	x3, x5
    31c8:	cset	x3, ne  // ne = any
    31cc:	str	w4, [sp, #136]
    31d0:	add	x0, x2, x0, lsl #3
    31d4:	umaddl	x1, w1, w7, x6
    31d8:	add	x2, x2, x3, lsl #3
    31dc:	ldr	x0, [x0, x1]
    31e0:	ldr	x23, [x2, x1]
    31e4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    31e8:	mov	x2, x0
    31ec:	ldr	x28, [x19, #16]
    31f0:	add	x1, sp, #0x138
    31f4:	ldr	x3, [sp, #360]
    31f8:	stp	x1, x3, [sp, #440]
    31fc:	ldr	w4, [sp, #136]
    3200:	stp	x28, x23, [sp, #464]
    3204:	cbz	x0, 381c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x144c>
    3208:	ldrb	w0, [x0, #16]
    320c:	cmp	w0, #0x1a
    3210:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3214:	ldr	w0, [x2, #20]
    3218:	ubfx	x0, x0, #0, #28
    321c:	cmp	w0, #0x3
    3220:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3224:	ldur	x6, [x2, #-72]
    3228:	cbz	x6, 372c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x135c>
    322c:	ldrb	w0, [x6, #16]
    3230:	cmp	w0, #0x4d
    3234:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3238:	ldur	x0, [x6, #-48]
    323c:	cmp	x3, x0
    3240:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    3244:	ldur	x1, [x6, #-24]
    3248:	add	x0, x27, #0x10
    324c:	str	x6, [sp, #136]
    3250:	str	w4, [sp, #160]
    3254:	str	x2, [sp, #200]
    3258:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    325c:	ldr	w4, [sp, #160]
    3260:	ands	w23, w0, #0xff
    3264:	ldr	x6, [sp, #136]
    3268:	ldr	x2, [sp, #200]
    326c:	b.eq	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.none
    3270:	ldr	x3, [sp, #440]
    3274:	ldrh	w1, [x6, #18]
    3278:	ldur	x0, [x2, #-24]
    327c:	and	w1, w1, #0xffff7fff
    3280:	str	w1, [x3]
    3284:	cbz	x0, 376c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x139c>
    3288:	ldrb	w1, [x0, #16]
    328c:	cmp	w1, #0x12
    3290:	b.ne	375c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x138c>  // b.any
    3294:	ldr	x1, [sp, #464]
    3298:	cmp	x1, x0
    329c:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    32a0:	ldr	w0, [x2, #20]
    32a4:	ubfx	x0, x0, #0, #28
    32a8:	cmp	w0, #0x3
    32ac:	b.ne	3688 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12b8>  // b.any
    32b0:	ldur	x0, [x2, #-48]
    32b4:	cbz	x0, 376c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x139c>
    32b8:	ldrb	w1, [x0, #16]
    32bc:	cmp	w1, #0x12
    32c0:	b.ne	375c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x138c>  // b.any
    32c4:	ldr	x1, [sp, #472]
    32c8:	cmp	x1, x0
    32cc:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    32d0:	ldr	w0, [sp, #312]
    32d4:	cmp	w0, #0x20
    32d8:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    32dc:	mov	x0, x28
    32e0:	str	w4, [sp, #136]
    32e4:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    32e8:	mov	x20, x0
    32ec:	mov	x0, x28
    32f0:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    32f4:	mov	w2, #0x200                 	// #512
    32f8:	stp	xzr, x28, [sp, #440]
    32fc:	add	x1, x28, #0x28
    3300:	stp	x20, x0, [sp, #456]
    3304:	cmp	x20, x1
    3308:	ldr	w4, [sp, #136]
    330c:	str	xzr, [sp, #472]
    3310:	str	wzr, [sp, #480]
    3314:	strh	w2, [sp, #484]
    3318:	strb	wzr, [sp, #486]
    331c:	stp	xzr, xzr, [sp, #488]
    3320:	b.eq	3388 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfb8>  // b.none
    3324:	ldr	x0, [x20]
    3328:	tst	w0, #0x4
    332c:	b.ne	3778 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13a8>  // b.any
    3330:	ldr	x1, [x20, #24]
    3334:	str	x1, [sp, #408]
    3338:	cbz	x1, 3388 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfb8>
    333c:	mov	x0, x25
    3340:	mov	x2, #0x2                   	// #2
    3344:	str	w4, [sp, #136]
    3348:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
    334c:	ldr	x1, [sp, #440]
    3350:	ldr	w4, [sp, #136]
    3354:	cbz	x1, 3770 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x13a0>
    3358:	mov	x0, x27
    335c:	str	w4, [sp, #136]
    3360:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3364:	ldr	w4, [sp, #136]
    3368:	ldr	x1, [sp, #408]
    336c:	str	x1, [sp, #440]
    3370:	cbz	x1, 3388 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xfb8>
    3374:	mov	x2, x27
    3378:	mov	x0, x25
    337c:	str	w4, [sp, #136]
    3380:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
    3384:	ldr	w4, [sp, #136]
    3388:	mov	x0, x21
    338c:	str	w4, [sp, #136]
    3390:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    3394:	mov	w20, w23
    3398:	ldr	w4, [sp, #136]
    339c:	mov	x2, x25
    33a0:	ldur	x5, [x19, #-24]
    33a4:	mov	w1, w4
    33a8:	mov	x3, #0x1                   	// #1
    33ac:	str	x5, [sp, #408]
    33b0:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    33b4:	mov	x28, x0
    33b8:	ldr	x2, [sp, #336]
    33bc:	mov	x0, x24
    33c0:	ldr	x3, [sp, #360]
    33c4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    33c8:	add	x1, x1, #0x0
    33cc:	stp	x2, x2, [sp, #408]
    33d0:	str	x3, [sp, #424]
    33d4:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    33d8:	mov	x4, x24
    33dc:	mov	x2, x25
    33e0:	mov	x5, #0x0                   	// #0
    33e4:	mov	x3, #0x3                   	// #3
    33e8:	mov	x1, x28
    33ec:	mov	x0, x27
    33f0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    33f4:	mov	x1, x0
    33f8:	mov	x0, x21
    33fc:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3400:	ldr	x1, [sp, #440]
    3404:	cbz	x1, 2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    3408:	mov	x0, x27
    340c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3410:	b	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>
    3414:	ldr	w2, [x21, #20]
    3418:	mov	w1, #0x18                  	// #24
    341c:	ubfx	x2, x2, #0, #28
    3420:	umsubl	x2, w2, w1, x21
    3424:	b	31b4 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xde4>
    3428:	ldr	x0, [x28, #24]
    342c:	cmp	x0, #0x1
    3430:	cset	w28, eq  // eq = none
    3434:	cbnz	w28, 3160 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd90>
    3438:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    343c:	mov	x3, x5
    3440:	b	31a0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xdd0>
    3444:	mov	x0, x23
    3448:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    344c:	ldur	x1, [x0, #-48]
    3450:	cbz	x1, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3454:	ldur	x0, [x0, #-24]
    3458:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    345c:	ldur	x0, [x19, #-72]
    3460:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    3464:	bl	1a8 <_ZN4llvm3isaINS_5ValueEPS1_EEbRKT0_.isra.0.part.0>
    3468:	ldur	x0, [x23, #-48]
    346c:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3470:	ldur	x0, [x23, #-24]
    3474:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3478:	mov	x0, x21
    347c:	mov	w1, #0x1                   	// #1
    3480:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3484:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    3488:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    348c:	cmp	w0, #0x5
    3490:	b.ne	24d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x100>  // b.any
    3494:	ldurh	w0, [x19, #-6]
    3498:	cmp	w0, #0x1c
    349c:	b.ne	2570 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1a0>  // b.any
    34a0:	mov	w1, #0x0                   	// #0
    34a4:	mov	x0, x21
    34a8:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    34ac:	mov	x23, x0
    34b0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    34b4:	ldr	x0, [x23, #8]
    34b8:	cbz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    34bc:	ldr	x0, [x0, #8]
    34c0:	cbnz	x0, 2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    34c4:	ldrb	w0, [x23, #16]
    34c8:	cmp	w0, #0x35
    34cc:	b.eq	3534 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1164>  // b.none
    34d0:	cmp	w0, #0x5
    34d4:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    34d8:	ldrh	w0, [x23, #18]
    34dc:	cmp	w0, #0x1d
    34e0:	b.ne	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.any
    34e4:	mov	x0, x23
    34e8:	mov	w1, #0x0                   	// #0
    34ec:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    34f0:	cbz	x0, 2660 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x290>
    34f4:	mov	x0, x23
    34f8:	mov	w1, #0x1                   	// #1
    34fc:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3500:	cbnz	x0, 354c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x117c>
    3504:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    3508:	mov	x0, x23
    350c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3510:	ldur	x1, [x0, #-48]
    3514:	cbz	x1, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3518:	ldur	x0, [x0, #-24]
    351c:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3520:	mov	x0, x21
    3524:	mov	w1, #0x0                   	// #0
    3528:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    352c:	cbnz	x0, 2728 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x358>
    3530:	bl	1d0 <_ZN4llvm3isaINS_5ValueEPNS_8ConstantEEEbRKT0_.isra.0.part.0>
    3534:	mov	x0, x23
    3538:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    353c:	ldur	x1, [x0, #-48]
    3540:	cbz	x1, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    3544:	ldur	x0, [x0, #-24]
    3548:	cbz	x0, 29ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x61c>
    354c:	mov	w1, #0x1                   	// #1
    3550:	mov	x0, x21
    3554:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3558:	mov	x1, x0
    355c:	ldr	x0, [sp, #184]
    3560:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3564:	tst	w0, #0xff
    3568:	b.eq	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>  // b.none
    356c:	mov	w23, #0x0                   	// #0
    3570:	b	272c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x35c>
    3574:	add	w0, w0, w4
    3578:	add	w7, w4, #0x1
    357c:	and	w5, w6, w0
    3580:	and	w0, w6, w0
    3584:	lsl	x5, x5, #4
    3588:	add	x4, x2, x5
    358c:	ldr	x5, [x2, x5]
    3590:	cmp	x3, x5
    3594:	b.eq	2494 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xc4>  // b.none
    3598:	mov	w4, w7
    359c:	b	2920 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x550>
    35a0:	ldr	x0, [x0, #24]
    35a4:	cmp	x0, #0x1
    35a8:	cset	w28, eq  // eq = none
    35ac:	b	3144 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd74>
    35b0:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    35b4:	cbz	x0, 30d8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd08>
    35b8:	ldr	w23, [x0, #32]
    35bc:	cmp	w23, #0x40
    35c0:	b.ls	36a8 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x12d8>  // b.plast
    35c4:	sub	w23, w23, #0x1
    35c8:	add	x0, x0, #0x18
    35cc:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    35d0:	cmp	w23, w0
    35d4:	cset	w28, eq  // eq = none
    35d8:	cbnz	w28, 3160 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd90>
    35dc:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    35e0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    35e4:	add	x3, x3, #0x0
    35e8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    35ec:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    35f0:	add	x1, x1, #0x0
    35f4:	add	x0, x0, #0x0
    35f8:	mov	w2, #0x69                  	// #105
    35fc:	bl	0 <__assert_fail>
    3600:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3604:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3608:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    360c:	add	x3, x3, #0x0
    3610:	add	x1, x1, #0x0
    3614:	add	x0, x0, #0x0
    3618:	mov	w2, #0x117                 	// #279
    361c:	bl	0 <__assert_fail>
    3620:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3624:	add	x3, x3, #0x0
    3628:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    362c:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3630:	add	x1, x1, #0x0
    3634:	add	x0, x0, #0x0
    3638:	mov	w2, #0x8b                  	// #139
    363c:	bl	0 <__assert_fail>
    3640:	mov	w22, #0x0                   	// #0
    3644:	b	2990 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x5c0>
    3648:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    364c:	add	x3, x3, #0x0
    3650:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3654:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3658:	add	x1, x1, #0x0
    365c:	add	x0, x0, #0x0
    3660:	mov	w2, #0x108                 	// #264
    3664:	bl	0 <__assert_fail>
    3668:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    366c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3670:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3674:	add	x3, x3, #0x0
    3678:	add	x1, x1, #0x0
    367c:	add	x0, x0, #0x0
    3680:	mov	w2, #0x8e                  	// #142
    3684:	bl	0 <__assert_fail>
    3688:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    368c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3690:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3694:	add	x3, x3, #0x0
    3698:	add	x1, x1, #0x0
    369c:	add	x0, x0, #0x0
    36a0:	mov	w2, #0xc03                 	// #3075
    36a4:	bl	0 <__assert_fail>
    36a8:	ldr	x0, [x0, #24]
    36ac:	cmp	x0, #0x1
    36b0:	cset	w28, eq  // eq = none
    36b4:	cbnz	w28, 3160 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xd90>
    36b8:	b	2618 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x248>
    36bc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36c0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36c4:	add	x3, x3, #0x0
    36c8:	b	35ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x121c>
    36cc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36d0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36d4:	add	x3, x3, #0x0
    36d8:	b	362c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x125c>
    36dc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36e0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36e4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    36e8:	add	x3, x3, #0x0
    36ec:	add	x1, x1, #0x0
    36f0:	add	x0, x0, #0x0
    36f4:	mov	w2, #0x250                 	// #592
    36f8:	bl	0 <__assert_fail>
    36fc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3700:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3704:	add	x3, x3, #0x0
    3708:	b	35ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x121c>
    370c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3710:	add	x3, x3, #0x0
    3714:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3718:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    371c:	add	x1, x1, #0x0
    3720:	add	x0, x0, #0x0
    3724:	mov	w2, #0x134                 	// #308
    3728:	bl	0 <__assert_fail>
    372c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3730:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3734:	add	x3, x3, #0x0
    3738:	b	35ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x121c>
    373c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3740:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3744:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3748:	add	x3, x3, #0x0
    374c:	add	x1, x1, #0x0
    3750:	add	x0, x0, #0x0
    3754:	mov	w2, #0xb2                  	// #178
    3758:	bl	0 <__assert_fail>
    375c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3760:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3764:	add	x3, x3, #0x0
    3768:	b	3718 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1348>
    376c:	bl	248 <_ZN4llvm3isaINS_10BasicBlockEPS1_EEbRKT0_.isra.0.part.0>
    3770:	ldr	x1, [sp, #408]
    3774:	b	336c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0xf9c>
    3778:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    377c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3780:	add	x3, x3, #0x0
    3784:	b	362c <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x125c>
    3788:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    378c:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3790:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3794:	add	x3, x3, #0x0
    3798:	add	x1, x1, #0x0
    379c:	add	x0, x0, #0x0
    37a0:	mov	w2, #0xeb                  	// #235
    37a4:	bl	0 <__assert_fail>
    37a8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37ac:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37b0:	add	x3, x3, #0x0
    37b4:	b	3654 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x1284>
    37b8:	bl	180 <_ZN4llvm13isa_impl_wrapINS_10VectorTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
    37bc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37c0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37c4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37c8:	add	x3, x3, #0x0
    37cc:	add	x1, x1, #0x0
    37d0:	add	x0, x0, #0x0
    37d4:	mov	w2, #0x4fa                 	// #1274
    37d8:	bl	0 <__assert_fail>
    37dc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37e0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37e4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    37e8:	add	x3, x3, #0x0
    37ec:	add	x1, x1, #0x0
    37f0:	add	x0, x0, #0x0
    37f4:	mov	w2, #0x220                 	// #544
    37f8:	bl	0 <__assert_fail>
    37fc:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3800:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3804:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3808:	add	x3, x3, #0x0
    380c:	add	x1, x1, #0x0
    3810:	add	x0, x0, #0x0
    3814:	mov	w2, #0x48d                 	// #1165
    3818:	bl	0 <__assert_fail>
    381c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3820:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3824:	add	x3, x3, #0x0
    3828:	b	35ec <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE+0x121c>
    382c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3830:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3834:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3838:	add	x3, x3, #0x0
    383c:	add	x1, x1, #0x0
    3840:	add	x0, x0, #0x0
    3844:	mov	w2, #0x73                  	// #115
    3848:	bl	0 <__assert_fail>
    384c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3850:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3854:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3858:	add	x3, x3, #0x0
    385c:	add	x1, x1, #0x0
    3860:	add	x0, x0, #0x0
    3864:	mov	w2, #0x48a                 	// #1162
    3868:	bl	0 <__assert_fail>
    386c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3870:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3874:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3878:	add	x3, x3, #0x0
    387c:	add	x1, x1, #0x0
    3880:	add	x0, x0, #0x0
    3884:	mov	w2, #0x488                 	// #1160
    3888:	bl	0 <__assert_fail>
    388c:	mov	x0, #0x0                   	// #0
    3890:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3894:	ldr	x0, [x23, #8]
    3898:	brk	#0x3e8
    389c:	nop

00000000000038a0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>:
    38a0:	stp	x29, x30, [sp, #-192]!
    38a4:	mov	x29, sp
    38a8:	stp	x21, x22, [sp, #32]
    38ac:	mov	x21, x0
    38b0:	mov	x22, x2
    38b4:	ldr	x0, [x0, #40]
    38b8:	stp	x19, x20, [sp, #16]
    38bc:	mov	x19, x1
    38c0:	add	x20, sp, #0x38
    38c4:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    38c8:	mov	x4, x0
    38cc:	add	x3, x20, #0x28
    38d0:	mov	x2, #0x400000000           	// #17179869184
    38d4:	mov	x1, x21
    38d8:	mov	x0, x20
    38dc:	stp	x19, x4, [sp, #56]
    38e0:	stp	x22, x3, [sp, #72]
    38e4:	str	x2, [sp, #88]
    38e8:	stp	xzr, xzr, [sp, #128]
    38ec:	stp	xzr, xzr, [sp, #144]
    38f0:	str	wzr, [sp, #160]
    38f4:	stp	xzr, xzr, [sp, #168]
    38f8:	str	xzr, [sp, #184]
    38fc:	bl	0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>
    3900:	mov	x1, x22
    3904:	and	w19, w0, #0xff
    3908:	mov	x0, x21
    390c:	bl	23d0 <_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE>
    3910:	ldr	x2, [sp, #168]
    3914:	and	w1, w0, #0xff
    3918:	orr	w19, w19, w1
    391c:	cbz	x2, 3928 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x88>
    3920:	mov	x0, x2
    3924:	bl	0 <_ZdlPv>
    3928:	ldr	x0, [sp, #144]
    392c:	add	x20, x20, #0x28
    3930:	ldr	w1, [sp, #160]
    3934:	lsl	x1, x1, #4
    3938:	bl	0 <_ZdlPvm>
    393c:	ldr	x0, [sp, #80]
    3940:	cmp	x0, x20
    3944:	b.eq	394c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xac>  // b.none
    3948:	bl	0 <free>
    394c:	mov	w0, w19
    3950:	ldp	x19, x20, [sp, #16]
    3954:	ldp	x21, x22, [sp, #32]
    3958:	ldp	x29, x30, [sp], #192
    395c:	ret

0000000000003960 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE>:
    3960:	stp	x29, x30, [sp, #-224]!
    3964:	mov	x29, sp
    3968:	stp	x21, x22, [sp, #32]
    396c:	mov	x22, x0
    3970:	ldr	x0, [x0, #8]
    3974:	stp	x19, x20, [sp, #16]
    3978:	stp	x23, x24, [sp, #48]
    397c:	stp	x25, x26, [sp, #64]
    3980:	cbz	x0, 3d5c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3fc>
    3984:	ldp	x2, x0, [x0]
    3988:	cmp	x2, x0
    398c:	b.eq	3d4c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ec>  // b.none
    3990:	mov	x21, x1
    3994:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
    3998:	ldr	x1, [x1]
    399c:	b	39ac <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x4c>
    39a0:	add	x2, x2, #0x10
    39a4:	cmp	x0, x2
    39a8:	b.eq	3d4c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ec>  // b.none
    39ac:	ldr	x3, [x2]
    39b0:	cmp	x3, x1
    39b4:	b.ne	39a0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x40>  // b.any
    39b8:	ldr	x0, [x2, #8]
    39bc:	cbz	x0, 3d4c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ec>
    39c0:	ldr	x2, [x0]
    39c4:	add	x20, sp, #0x58
    39c8:	ldr	x2, [x2, #96]
    39cc:	blr	x2
    39d0:	mov	x19, x0
    39d4:	mov	x8, x20
    39d8:	add	x0, x0, #0x20
    39dc:	add	x2, sp, #0x78
    39e0:	mov	x1, x21
    39e4:	stp	xzr, xzr, [sp, #120]
    39e8:	add	x23, x19, #0xf0
    39ec:	str	xzr, [sp, #136]
    39f0:	str	wzr, [sp, #144]
    39f4:	stp	xzr, xzr, [sp, #152]
    39f8:	str	xzr, [sp, #168]
    39fc:	str	wzr, [sp, #176]
    3a00:	stp	xzr, xzr, [sp, #184]
    3a04:	str	xzr, [sp, #200]
    3a08:	str	wzr, [sp, #208]
    3a0c:	strb	wzr, [sp, #216]
    3a10:	bl	0 <_ZN4llvm21TargetLibraryAnalysis3runERKNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>
    3a14:	ldrb	w0, [x19, #272]
    3a18:	cbnz	w0, 3bc4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x264>
    3a1c:	ldr	w0, [sp, #112]
    3a20:	ldr	x1, [sp, #88]
    3a24:	stp	x1, xzr, [x19, #240]
    3a28:	str	xzr, [x19, #256]
    3a2c:	str	w0, [x19, #264]
    3a30:	cbnz	w0, 3c38 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2d8>
    3a34:	ldr	x24, [sp, #96]
    3a38:	mov	w0, #0x1                   	// #1
    3a3c:	strb	w0, [x23, #32]
    3a40:	mov	x0, x24
    3a44:	bl	0 <free>
    3a48:	ldrb	w0, [x23, #32]
    3a4c:	cbz	w0, 3d6c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x40c>
    3a50:	ldr	w2, [sp, #208]
    3a54:	mov	w1, #0x18                  	// #24
    3a58:	ldr	x0, [sp, #192]
    3a5c:	umull	x1, w2, w1
    3a60:	bl	0 <_ZdlPvm>
    3a64:	ldr	w1, [sp, #176]
    3a68:	cbz	w1, 3af0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x190>
    3a6c:	ldr	x20, [sp, #160]
    3a70:	ubfiz	x1, x1, #5, #32
    3a74:	add	x25, x20, x1
    3a78:	add	x24, x20, #0x8
    3a7c:	b	3a90 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x130>
    3a80:	add	x20, x20, #0x20
    3a84:	add	x24, x24, #0x20
    3a88:	cmp	x25, x20
    3a8c:	b.eq	3aec <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x18c>  // b.none
    3a90:	ldr	x0, [x20]
    3a94:	cmn	x0, #0x8
    3a98:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    3a9c:	b.eq	3a80 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x120>  // b.none
    3aa0:	ldr	x19, [x24]
    3aa4:	cmp	x19, x24
    3aa8:	b.eq	3a80 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x120>  // b.none
    3aac:	nop
    3ab0:	mov	x26, x19
    3ab4:	ldr	x19, [x19]
    3ab8:	ldr	x0, [x26, #24]
    3abc:	cbz	x0, 3acc <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x16c>
    3ac0:	ldr	x1, [x0]
    3ac4:	ldr	x1, [x1, #8]
    3ac8:	blr	x1
    3acc:	mov	x0, x26
    3ad0:	bl	0 <_ZdlPv>
    3ad4:	cmp	x19, x24
    3ad8:	b.ne	3ab0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x150>  // b.any
    3adc:	add	x20, x20, #0x20
    3ae0:	add	x24, x24, #0x20
    3ae4:	cmp	x25, x20
    3ae8:	b.ne	3a90 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x130>  // b.any
    3aec:	ldr	w1, [sp, #176]
    3af0:	ldr	x0, [sp, #160]
    3af4:	ubfiz	x1, x1, #5, #32
    3af8:	bl	0 <_ZdlPvm>
    3afc:	ldr	w1, [sp, #144]
    3b00:	cbz	w1, 3b44 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1e4>
    3b04:	ldr	x20, [sp, #128]
    3b08:	ubfiz	x2, x1, #4, #32
    3b0c:	add	x19, x20, x2
    3b10:	ldr	x0, [x20]
    3b14:	cmn	x0, #0x10
    3b18:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    3b1c:	b.eq	3b34 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1d4>  // b.none
    3b20:	ldr	x0, [x20, #8]
    3b24:	cbz	x0, 3b34 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1d4>
    3b28:	ldr	x1, [x0]
    3b2c:	ldr	x1, [x1, #8]
    3b30:	blr	x1
    3b34:	add	x20, x20, #0x10
    3b38:	cmp	x19, x20
    3b3c:	b.ne	3b10 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x1b0>  // b.any
    3b40:	ldr	w1, [sp, #144]
    3b44:	ldr	x0, [sp, #128]
    3b48:	ubfiz	x1, x1, #4, #32
    3b4c:	bl	0 <_ZdlPvm>
    3b50:	ldr	x1, [x22, #8]
    3b54:	cbz	x1, 3d0c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3ac>
    3b58:	ldp	x0, x2, [x1]
    3b5c:	cmp	x0, x2
    3b60:	b.eq	3d2c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3cc>  // b.none
    3b64:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
    3b68:	ldr	x1, [x1]
    3b6c:	b	3b7c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x21c>
    3b70:	add	x0, x0, #0x10
    3b74:	cmp	x2, x0
    3b78:	b.eq	3d2c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3cc>  // b.none
    3b7c:	ldr	x3, [x0]
    3b80:	cmp	x3, x1
    3b84:	b.ne	3b70 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x210>  // b.any
    3b88:	ldr	x0, [x0, #8]
    3b8c:	cbz	x0, 3d2c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3cc>
    3b90:	ldr	x2, [x0]
    3b94:	ldr	x2, [x2, #96]
    3b98:	blr	x2
    3b9c:	add	x2, x0, #0x20
    3ba0:	mov	x1, x23
    3ba4:	mov	x0, x21
    3ba8:	bl	38a0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    3bac:	ldp	x19, x20, [sp, #16]
    3bb0:	ldp	x21, x22, [sp, #32]
    3bb4:	ldp	x23, x24, [sp, #48]
    3bb8:	ldp	x25, x26, [sp, #64]
    3bbc:	ldp	x29, x30, [sp], #224
    3bc0:	ret
    3bc4:	ldr	x0, [sp, #88]
    3bc8:	str	x0, [x19, #240]
    3bcc:	add	x20, x20, #0x8
    3bd0:	add	x24, x19, #0xf8
    3bd4:	cmp	x20, x24
    3bd8:	b.eq	3c30 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2d0>  // b.none
    3bdc:	ldr	x2, [x19, #256]
    3be0:	ldr	w1, [sp, #112]
    3be4:	str	w1, [x24, #16]
    3be8:	add	w20, w1, #0x3f
    3bec:	lsl	x0, x2, #6
    3bf0:	cmp	x0, w1, uxtw
    3bf4:	lsr	w20, w20, #6
    3bf8:	b.cs	3c70 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x310>  // b.hs, b.nlast
    3bfc:	cbz	w20, 3da4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x444>
    3c00:	ubfiz	x25, x20, #3, #26
    3c04:	mov	x0, x25
    3c08:	bl	0 <malloc>
    3c0c:	mov	x24, x0
    3c10:	cbz	x0, 3dc4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x464>
    3c14:	ldr	x1, [sp, #96]
    3c18:	mov	x2, x25
    3c1c:	mov	x0, x24
    3c20:	bl	0 <memcpy>
    3c24:	ldr	x0, [x19, #248]
    3c28:	bl	0 <free>
    3c2c:	stp	x24, x20, [x19, #248]
    3c30:	ldr	x24, [sp, #96]
    3c34:	b	3a40 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe0>
    3c38:	add	w0, w0, #0x3f
    3c3c:	lsr	w20, w0, #6
    3c40:	lsl	x26, x20, #3
    3c44:	mov	x0, x26
    3c48:	bl	0 <malloc>
    3c4c:	mov	x25, x0
    3c50:	cbz	x0, 3d8c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x42c>
    3c54:	ldr	x24, [sp, #96]
    3c58:	stp	x25, x20, [x19, #248]
    3c5c:	mov	x2, x26
    3c60:	mov	x0, x25
    3c64:	mov	x1, x24
    3c68:	bl	0 <memcpy>
    3c6c:	b	3a38 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xd8>
    3c70:	mov	w0, w20
    3c74:	cbnz	w1, 3cdc <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x37c>
    3c78:	cmp	x2, x0
    3c7c:	b.ls	3c30 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2d0>  // b.plast
    3c80:	subs	x2, x2, x0
    3c84:	b.ne	3cc4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x364>  // b.any
    3c88:	ldr	w1, [x24, #16]
    3c8c:	ands	w1, w1, #0x3f
    3c90:	b.eq	3c30 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2d0>  // b.none
    3c94:	ldr	x2, [x19, #256]
    3c98:	sub	w20, w20, #0x1
    3c9c:	mov	x0, #0xffffffffffffffff    	// #-1
    3ca0:	cmp	x20, x2
    3ca4:	lsl	x1, x0, x1
    3ca8:	b.cs	3dd8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x478>  // b.hs, b.nlast
    3cac:	ldr	x0, [x19, #248]
    3cb0:	ldr	x24, [sp, #96]
    3cb4:	ldr	x2, [x0, x20, lsl #3]
    3cb8:	bic	x1, x2, x1
    3cbc:	str	x1, [x0, x20, lsl #3]
    3cc0:	b	3a40 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe0>
    3cc4:	ldr	x3, [x19, #248]
    3cc8:	lsl	x2, x2, #3
    3ccc:	mov	w1, #0x0                   	// #0
    3cd0:	add	x0, x3, x0, lsl #3
    3cd4:	bl	0 <memset>
    3cd8:	b	3c88 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x328>
    3cdc:	lsl	x2, x0, #3
    3ce0:	ldr	x1, [sp, #96]
    3ce4:	ldr	x0, [x19, #248]
    3ce8:	bl	0 <memcpy>
    3cec:	ldr	w1, [x24, #16]
    3cf0:	ldr	x2, [x19, #256]
    3cf4:	add	w20, w1, #0x3f
    3cf8:	lsr	w0, w20, #6
    3cfc:	lsr	w20, w20, #6
    3d00:	cmp	x2, x0
    3d04:	b.ls	3c8c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x32c>  // b.plast
    3d08:	b	3c80 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x320>
    3d0c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d10:	add	x3, x3, #0x0
    3d14:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d18:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d1c:	add	x1, x1, #0x0
    3d20:	add	x0, x0, #0x0
    3d24:	mov	w2, #0xdd                  	// #221
    3d28:	bl	0 <__assert_fail>
    3d2c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d30:	add	x3, x3, #0x0
    3d34:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d38:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d3c:	add	x1, x1, #0x0
    3d40:	add	x0, x0, #0x0
    3d44:	mov	w2, #0xe9                  	// #233
    3d48:	bl	0 <__assert_fail>
    3d4c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d50:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d54:	add	x3, x3, #0x0
    3d58:	b	3d38 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3d8>
    3d5c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d60:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d64:	add	x3, x3, #0x0
    3d68:	b	3d18 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3b8>
    3d6c:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d70:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d74:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d78:	add	x3, x3, #0x0
    3d7c:	add	x1, x1, #0x0
    3d80:	add	x0, x0, #0x0
    3d84:	mov	w2, #0x49                  	// #73
    3d88:	bl	0 <__assert_fail>
    3d8c:	cbz	x26, 3df8 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x498>
    3d90:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3d94:	mov	w1, #0x1                   	// #1
    3d98:	add	x0, x0, #0x0
    3d9c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3da0:	b	3c54 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2f4>
    3da4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3da8:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3dac:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3db0:	add	x3, x3, #0x0
    3db4:	add	x1, x1, #0x0
    3db8:	add	x0, x0, #0x0
    3dbc:	mov	w2, #0x2dc                 	// #732
    3dc0:	bl	0 <__assert_fail>
    3dc4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3dc8:	mov	w1, #0x1                   	// #1
    3dcc:	add	x0, x0, #0x0
    3dd0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3dd4:	b	3c14 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2b4>
    3dd8:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ddc:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3de0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3de4:	add	x3, x3, #0x0
    3de8:	add	x1, x1, #0x0
    3dec:	add	x0, x0, #0x0
    3df0:	mov	w2, #0x1ab                 	// #427
    3df4:	bl	0 <__assert_fail>
    3df8:	mov	x0, #0x1                   	// #1
    3dfc:	bl	0 <malloc>
    3e00:	cbz	x0, 3d90 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x430>
    3e04:	mov	x25, x0
    3e08:	b	3c54 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x2f4>
    3e0c:	nop

0000000000003e10 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>:
    3e10:	stp	x29, x30, [sp, #-192]!
    3e14:	mov	x29, sp
    3e18:	ldr	w3, [x2, #24]
    3e1c:	stp	x19, x20, [sp, #16]
    3e20:	stp	x21, x22, [sp, #32]
    3e24:	stp	x23, x24, [sp, #48]
    3e28:	str	x25, [sp, #64]
    3e2c:	cbz	w3, 3ff0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1e0>
    3e30:	mov	x21, x1
    3e34:	adrp	x1, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    3e38:	mov	x19, x2
    3e3c:	ldr	x2, [x1]
    3e40:	cmn	x2, #0x10
    3e44:	ccmn	x2, #0x8, #0x4, ne  // ne = any
    3e48:	b.eq	40ac <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x29c>  // b.none
    3e4c:	lsr	w0, w2, #9
    3e50:	sub	w3, w3, #0x1
    3e54:	eor	w0, w0, w2, lsr #4
    3e58:	mov	x20, x8
    3e5c:	and	w0, w0, w3
    3e60:	ldr	x5, [x19, #8]
    3e64:	lsl	w4, w0, #4
    3e68:	ldr	x4, [x5, x4]
    3e6c:	cmp	x4, x2
    3e70:	b.ne	3fe4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1d4>  // b.any
    3e74:	ldr	x1, [x1]
    3e78:	mov	x2, x21
    3e7c:	mov	x0, x19
    3e80:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    3e84:	mov	x22, x0
    3e88:	ldr	w3, [x19, #24]
    3e8c:	cbz	w3, 3fc4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1b4>
    3e90:	adrp	x1, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    3e94:	ldr	x4, [x1]
    3e98:	cmn	x4, #0x8
    3e9c:	ccmn	x4, #0x10, #0x4, ne  // ne = any
    3ea0:	b.eq	40ac <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x29c>  // b.none
    3ea4:	lsr	w2, w4, #9
    3ea8:	sub	w3, w3, #0x1
    3eac:	eor	w2, w2, w4, lsr #4
    3eb0:	and	w2, w2, w3
    3eb4:	ldr	x5, [x19, #8]
    3eb8:	lsl	w0, w2, #4
    3ebc:	ldr	x0, [x5, x0]
    3ec0:	cmp	x0, x4
    3ec4:	b.ne	407c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x26c>  // b.any
    3ec8:	ldr	x1, [x1]
    3ecc:	mov	x2, x21
    3ed0:	mov	x0, x19
    3ed4:	add	x25, x20, #0x28
    3ed8:	add	x23, x20, #0x38
    3edc:	add	x24, x20, #0x60
    3ee0:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    3ee4:	add	x2, x0, #0x8
    3ee8:	add	x1, x22, #0x8
    3eec:	mov	x0, x21
    3ef0:	bl	38a0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    3ef4:	tst	w0, #0xff
    3ef8:	b.eq	4000 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1f0>  // b.none
    3efc:	adrp	x1, 0 <_ZN4llvm9AAManager3KeyE>
    3f00:	adrp	x3, 0 <_ZN4llvm11CFGAnalyses6SetKeyE>
    3f04:	add	x4, sp, #0x78
    3f08:	add	x2, sp, #0xb0
    3f0c:	ldr	x3, [x3]
    3f10:	mov	w5, #0x1                   	// #1
    3f14:	ldr	x1, [x1]
    3f18:	mov	x6, #0x1                   	// #1
    3f1c:	add	x19, sp, #0x50
    3f20:	mov	w21, #0x2                   	// #2
    3f24:	mov	x0, x19
    3f28:	mov	x22, #0x2                   	// #2
    3f2c:	stp	x6, x4, [sp, #80]
    3f30:	str	x4, [sp, #96]
    3f34:	stp	w21, w5, [sp, #104]
    3f38:	str	wzr, [sp, #112]
    3f3c:	str	x3, [sp, #120]
    3f40:	stp	xzr, x2, [sp, #136]
    3f44:	stp	x2, x22, [sp, #152]
    3f48:	str	wzr, [sp, #168]
    3f4c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3f50:	adrp	x1, 0 <_ZN4llvm9GlobalsAA3KeyE>
    3f54:	mov	x0, x19
    3f58:	ldr	x1, [x1]
    3f5c:	bl	0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3f60:	mov	x3, x19
    3f64:	mov	w2, w22
    3f68:	mov	x1, x25
    3f6c:	mov	x0, x20
    3f70:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    3f74:	mov	x1, x24
    3f78:	mov	x0, x23
    3f7c:	add	x3, x19, #0x38
    3f80:	mov	w2, w21
    3f84:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    3f88:	ldp	x1, x0, [sp, #144]
    3f8c:	cmp	x1, x0
    3f90:	b.eq	3f98 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x188>  // b.none
    3f94:	bl	0 <free>
    3f98:	ldp	x1, x0, [sp, #88]
    3f9c:	cmp	x1, x0
    3fa0:	b.eq	3fa8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x198>  // b.none
    3fa4:	bl	0 <free>
    3fa8:	mov	x0, x20
    3fac:	ldp	x19, x20, [sp, #16]
    3fb0:	ldp	x21, x22, [sp, #32]
    3fb4:	ldp	x23, x24, [sp, #48]
    3fb8:	ldr	x25, [sp, #64]
    3fbc:	ldp	x29, x30, [sp], #192
    3fc0:	ret
    3fc4:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3fc8:	add	x3, x3, #0x0
    3fcc:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3fd0:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3fd4:	add	x1, x1, #0x0
    3fd8:	add	x0, x0, #0x0
    3fdc:	mov	w2, #0x30a                 	// #778
    3fe0:	bl	0 <__assert_fail>
    3fe4:	mov	w6, #0x1                   	// #1
    3fe8:	cmn	x4, #0x8
    3fec:	b.ne	4058 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x248>  // b.any
    3ff0:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ff4:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    3ff8:	add	x3, x3, #0x0
    3ffc:	b	3fd0 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1c0>
    4000:	stp	x25, x25, [x20, #8]
    4004:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    4008:	mov	x3, #0x2                   	// #2
    400c:	str	xzr, [x20, #56]
    4010:	mov	x1, #0x2                   	// #2
    4014:	stp	x24, x24, [x23, #8]
    4018:	movk	x1, #0x1, lsl #32
    401c:	mov	x2, #0x1                   	// #1
    4020:	str	x3, [x20, #80]
    4024:	ldr	x0, [x0]
    4028:	str	wzr, [x23, #32]
    402c:	str	x2, [x20]
    4030:	str	x1, [x20, #24]
    4034:	str	wzr, [x20, #32]
    4038:	str	x0, [x20, #40]
    403c:	mov	x0, x20
    4040:	ldp	x19, x20, [sp, #16]
    4044:	ldp	x21, x22, [sp, #32]
    4048:	ldp	x23, x24, [sp, #48]
    404c:	ldr	x25, [sp, #64]
    4050:	ldp	x29, x30, [sp], #192
    4054:	ret
    4058:	add	w0, w0, w6
    405c:	add	w6, w6, #0x1
    4060:	and	w4, w3, w0
    4064:	and	w0, w3, w0
    4068:	lsl	x4, x4, #4
    406c:	ldr	x4, [x5, x4]
    4070:	cmp	x4, x2
    4074:	b.eq	3e74 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x64>  // b.none
    4078:	b	3fe8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1d8>
    407c:	mov	w6, #0x1                   	// #1
    4080:	cmn	x0, #0x8
    4084:	b.eq	3fc4 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x1b4>  // b.none
    4088:	add	w2, w6, w2
    408c:	add	w6, w6, #0x1
    4090:	and	w0, w3, w2
    4094:	and	w2, w3, w2
    4098:	lsl	x0, x0, #4
    409c:	ldr	x0, [x5, x0]
    40a0:	cmp	x0, x4
    40a4:	b.eq	3ec8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0xb8>  // b.none
    40a8:	b	4080 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x270>
    40ac:	adrp	x3, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    40b0:	adrp	x1, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    40b4:	adrp	x0, 0 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>
    40b8:	add	x3, x3, #0x0
    40bc:	add	x1, x1, #0x0
    40c0:	add	x0, x0, #0x0
    40c4:	mov	w2, #0x250                 	// #592
    40c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv>:
   0:	mrs	x1, tpidr_el0
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x2, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x2
  18:	mov	x29, sp
  1c:	ldr	x0, [x1, x0]
  20:	ldp	x29, x30, [sp], #16
  24:	ldp	x1, x2, [x0]
  28:	ldr	x0, [x2]
  2c:	mov	x16, x1
  30:	br	x16

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	ldrb	w2, [x1]
   4:	mov	w3, #0x101                 	// #257
   8:	stp	xzr, xzr, [x0]
   c:	strh	w3, [x0, #16]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	mov	w2, #0x3                   	// #3
  18:	str	x1, [x0]
  1c:	strb	w2, [x0, #16]
  20:	ret

Disassembly of section .text._ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE:

0000000000000000 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x0, [x0, #64]
  18:	ldr	x2, [x19, #72]
  1c:	str	x21, [sp, #32]
  20:	cmp	x0, x2
  24:	b.eq	1a8 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1a8>  // b.none
  28:	add	x21, x19, #0x38
  2c:	mov	x0, x21
  30:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  34:	ldr	x1, [x0]
  38:	cmp	x20, x1
  3c:	b.eq	f8 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xf8>  // b.none
  40:	ldp	x0, x1, [x19, #64]
  44:	cmp	x0, x1
  48:	b.eq	1f0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1f0>  // b.none
  4c:	ldp	x1, x3, [x19, #8]
  50:	ldr	w4, [x21, #32]
  54:	ldr	w5, [x19, #84]
  58:	cmp	w5, w4
  5c:	mov	x0, x1
  60:	mov	x2, x3
  64:	b.ne	14c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x14c>  // b.any
  68:	cmp	x1, x3
  6c:	b.eq	200 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x200>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
  74:	mov	x0, x19
  78:	ldr	x21, [x21]
  7c:	mov	x1, x21
  80:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  84:	ldr	x1, [x0]
  88:	cmp	x1, x21
  8c:	ldp	x1, x3, [x19, #8]
  90:	b.eq	26c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x26c>  // b.none
  94:	cmp	x1, x3
  98:	b.eq	2f8 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2f8>  // b.none
  9c:	mov	x0, x1
  a0:	mov	x2, x3
  a4:	cmp	x3, x1
  a8:	b.ne	154 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x154>  // b.any
  ac:	nop
  b0:	ldr	w5, [x19, #28]
  b4:	ubfiz	x6, x5, #3, #32
  b8:	add	x4, x3, x6
  bc:	cmp	x4, x3
  c0:	b.eq	2bc <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2bc>  // b.none
  c4:	mov	x3, #0x0                   	// #0
  c8:	b	e0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xe0>
  cc:	cmn	x1, #0x2
  d0:	csel	x3, x3, x0, ne  // ne = any
  d4:	add	x0, x0, #0x8
  d8:	cmp	x4, x0
  dc:	b.eq	240 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x240>  // b.none
  e0:	ldr	x1, [x0]
  e4:	cmp	x20, x1
  e8:	b.ne	cc <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xcc>  // b.any
  ec:	ldr	w1, [x19, #28]
  f0:	add	x2, x2, x1, lsl #3
  f4:	b	174 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x174>
  f8:	ldp	x3, x1, [x19, #64]
  fc:	cmp	x3, x1
 100:	b.eq	354 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x354>  // b.none
 104:	ldr	w2, [x21, #24]
 108:	add	x2, x1, x2, lsl #3
 10c:	cmp	x2, x0
 110:	b.eq	4c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x4c>  // b.none
 114:	ldr	x1, [x0]
 118:	cmp	x20, x1
 11c:	b.ne	328 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x328>  // b.any
 120:	ldr	w4, [x21, #32]
 124:	mov	x1, #0xfffffffffffffffe    	// #-2
 128:	str	x1, [x0]
 12c:	add	w4, w4, #0x1
 130:	str	w4, [x21, #32]
 134:	ldp	x1, x3, [x19, #8]
 138:	ldr	w5, [x19, #84]
 13c:	cmp	w5, w4
 140:	mov	x0, x1
 144:	mov	x2, x3
 148:	b.eq	68 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x68>  // b.none
 14c:	cmp	x3, x1
 150:	b.eq	b0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xb0>  // b.none
 154:	mov	x1, x20
 158:	mov	x0, x19
 15c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
 160:	ldp	x1, x2, [x19, #8]
 164:	cmp	x1, x2
 168:	b.eq	ec <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0xec>  // b.none
 16c:	ldr	w1, [x19, #24]
 170:	add	x2, x2, x1, lsl #3
 174:	cmp	x2, x0
 178:	b.cc	308 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x308>  // b.lo, b.ul, b.last
 17c:	b.eq	198 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x198>  // b.none
 180:	ldr	x1, [x0]
 184:	cmn	x1, #0x2
 188:	b.cc	198 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x198>  // b.lo, b.ul, b.last
 18c:	add	x0, x0, #0x8
 190:	cmp	x2, x0
 194:	b.ne	180 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x180>  // b.any
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldr	x21, [sp, #32]
 1a0:	ldp	x29, x30, [sp], #48
 1a4:	ret
 1a8:	ldr	w1, [x19, #84]
 1ac:	add	x21, x19, #0x38
 1b0:	lsl	x1, x1, #3
 1b4:	add	x4, x0, x1
 1b8:	cmp	x0, x4
 1bc:	b.ne	1d0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1d0>  // b.any
 1c0:	b	1e4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1e4>
 1c4:	add	x0, x0, #0x8
 1c8:	cmp	x4, x0
 1cc:	b.eq	1e4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1e4>  // b.none
 1d0:	ldr	x3, [x0]
 1d4:	cmp	x20, x3
 1d8:	b.ne	1c4 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x1c4>  // b.any
 1dc:	add	x2, x2, x1
 1e0:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>
 1e4:	add	x0, x2, x1
 1e8:	mov	x2, x0
 1ec:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>
 1f0:	ldr	w2, [x21, #28]
 1f4:	add	x0, x0, x2, lsl #3
 1f8:	mov	x2, x0
 1fc:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>
 200:	ldr	w2, [x19, #28]
 204:	lsl	x2, x2, #3
 208:	add	x6, x1, x2
 20c:	cmp	x6, x1
 210:	b.eq	2ec <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2ec>  // b.none
 214:	adrp	x5, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
 218:	ldr	x5, [x5]
 21c:	b	22c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x22c>
 220:	add	x0, x0, #0x8
 224:	cmp	x6, x0
 228:	b.eq	2ec <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2ec>  // b.none
 22c:	ldr	x4, [x0]
 230:	cmp	x4, x5
 234:	b.ne	220 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x220>  // b.any
 238:	add	x2, x3, x2
 23c:	b	27c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x27c>
 240:	cbz	x3, 2bc <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x2bc>
 244:	ldr	x2, [x19]
 248:	mov	x0, x3
 24c:	ldr	w1, [x19, #32]
 250:	str	x20, [x3]
 254:	add	x2, x2, #0x1
 258:	sub	w1, w1, #0x1
 25c:	str	x2, [x19]
 260:	str	w1, [x19, #32]
 264:	ldp	x1, x2, [x19, #8]
 268:	b	164 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x164>
 26c:	cmp	x1, x3
 270:	b.eq	348 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x348>  // b.none
 274:	ldr	w2, [x19, #24]
 278:	add	x2, x3, x2, lsl #3
 27c:	cmp	x2, x0
 280:	b.cc	308 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x308>  // b.lo, b.ul, b.last
 284:	b.ne	298 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x298>  // b.any
 288:	b	9c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x9c>
 28c:	add	x0, x0, #0x8
 290:	cmp	x2, x0
 294:	b.eq	9c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x9c>  // b.none
 298:	ldr	x4, [x0]
 29c:	cmn	x4, #0x2
 2a0:	b.cs	28c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x28c>  // b.hs, b.nlast
 2a4:	cmp	x2, x0
 2a8:	b.eq	9c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x9c>  // b.none
 2ac:	ldp	x19, x20, [sp, #16]
 2b0:	ldr	x21, [sp, #32]
 2b4:	ldp	x29, x30, [sp], #48
 2b8:	ret
 2bc:	ldr	w0, [x19, #24]
 2c0:	cmp	w5, w0
 2c4:	b.cs	154 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x154>  // b.hs, b.nlast
 2c8:	add	w5, w5, #0x1
 2cc:	str	w5, [x19, #28]
 2d0:	ldr	x0, [x19]
 2d4:	str	x20, [x4]
 2d8:	ldp	x1, x2, [x19, #8]
 2dc:	add	x0, x0, #0x1
 2e0:	str	x0, [x19]
 2e4:	add	x0, x1, x6
 2e8:	b	164 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x164>
 2ec:	add	x0, x3, x2
 2f0:	mov	x2, x0
 2f4:	b	27c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x27c>
 2f8:	ldr	w0, [x19, #28]
 2fc:	add	x0, x1, x0, lsl #3
 300:	mov	x2, x0
 304:	b	27c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x27c>
 308:	adrp	x3, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 30c:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 310:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 314:	add	x3, x3, #0x0
 318:	add	x1, x1, #0x0
 31c:	add	x0, x0, #0x0
 320:	mov	w2, #0xf8                  	// #248
 324:	bl	0 <__assert_fail>
 328:	adrp	x3, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 32c:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 330:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
 334:	add	x3, x3, #0x0
 338:	add	x1, x1, #0x0
 33c:	add	x0, x0, #0x0
 340:	mov	w2, #0xa7                  	// #167
 344:	bl	0 <__assert_fail>
 348:	ldr	w2, [x19, #28]
 34c:	add	x2, x1, x2, lsl #3
 350:	b	27c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x27c>
 354:	ldr	w2, [x21, #28]
 358:	add	x2, x3, x2, lsl #3
 35c:	b	10c <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x10c>

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	ubfx	x2, x2, #0, #28
  10:	cmp	w1, w2
  14:	b.cs	44 <_ZNK4llvm12ConstantExpr10getOperandEj+0x44>  // b.hs, b.nlast
  18:	mov	w1, w1
  1c:	mov	w2, w2
  20:	sub	x1, x1, x2
  24:	add	x1, x1, x1, lsl #1
  28:	ldr	x0, [x0, x1, lsl #3]
  2c:	cbz	x0, 3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>
  30:	ldrb	w1, [x0, #16]
  34:	cmp	w1, #0x10
  38:	b.hi	64 <_ZNK4llvm12ConstantExpr10getOperandEj+0x64>  // b.pmore
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  48:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  4c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  50:	add	x3, x3, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x0, x0, #0x0
  5c:	mov	w2, #0x4fa                 	// #1274
  60:	bl	0 <__assert_fail>
  64:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  68:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  6c:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  70:	add	x3, x3, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	w2, #0x134                 	// #308
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x0, [x1]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	stp	x23, x24, [sp, #48]
  20:	ldrb	w1, [x0, #8]
  24:	stp	x25, x26, [sp, #64]
  28:	cmp	w1, #0xf
  2c:	stp	x27, x28, [sp, #80]
  30:	stp	x4, x5, [sp, #96]
  34:	b.ne	408 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x408>  // b.any
  38:	ldr	x0, [x0, #16]
  3c:	ldr	x28, [x0]
  40:	cbz	x28, 3f8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3f8>
  44:	ldrb	w0, [x28, #8]
  48:	cmp	w0, #0xc
  4c:	b.ne	428 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x428>  // b.any
  50:	ldp	x25, x23, [x20, #48]
  54:	mov	w0, #0x101                 	// #257
  58:	stp	xzr, xzr, [sp, #120]
  5c:	mov	x22, x2
  60:	mov	x27, x3
  64:	strh	w0, [sp, #136]
  68:	lsl	x26, x23, #3
  6c:	sub	x26, x26, x23
  70:	add	x26, x25, x26, lsl #3
  74:	cmp	x26, x25
  78:	b.eq	3b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3b0>  // b.none
  7c:	mov	x2, x25
  80:	mov	w3, #0x0                   	// #0
  84:	nop
  88:	ldp	x1, x0, [x2, #32]
  8c:	add	x2, x2, #0x38
  90:	cmp	x26, x2
  94:	sub	x0, x0, x1
  98:	asr	x0, x0, #3
  9c:	add	w3, w3, w0
  a0:	b.ne	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x88>  // b.any
  a4:	add	w1, w27, #0x1
  a8:	lsl	w2, w23, #4
  ac:	add	w1, w1, w3
  b0:	mov	x0, #0x48                  	// #72
  b4:	bl	0 <_ZN4llvm4UsernwEmjj>
  b8:	mov	x24, x25
  bc:	ldr	x1, [x28, #16]
  c0:	mov	x19, x0
  c4:	mov	x2, x25
  c8:	mov	w7, #0x0                   	// #0
  cc:	ldr	x1, [x1]
  d0:	ldp	x3, x0, [x2, #32]
  d4:	add	x2, x2, #0x38
  d8:	cmp	x26, x2
  dc:	sub	x0, x0, x3
  e0:	asr	x0, x0, #3
  e4:	add	w7, w7, w0
  e8:	b.ne	d0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0xd0>  // b.any
  ec:	add	x7, x27, w7, uxtw
  f0:	mov	x3, #0xffffffffffffffe8    	// #-24
  f4:	mov	w4, #0x0                   	// #0
  f8:	add	x7, x7, x7, lsl #1
  fc:	sub	x7, x3, x7, lsl #3
 100:	add	x3, x19, x7
 104:	nop
 108:	ldp	x2, x0, [x25, #32]
 10c:	add	x25, x25, #0x38
 110:	cmp	x26, x25
 114:	sub	x0, x0, x2
 118:	asr	x0, x0, #3
 11c:	add	w4, w4, w0
 120:	b.ne	108 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x108>  // b.any
 124:	add	w4, w4, w27
 128:	add	w4, w4, #0x1
 12c:	mov	x0, x19
 130:	mov	x5, #0x0                   	// #0
 134:	mov	w2, #0x38                  	// #56
 138:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 13c:	str	xzr, [x19, #56]
 140:	add	x25, sp, #0x78
 144:	mov	x0, x19
 148:	mov	x5, x24
 14c:	mov	x6, x23
 150:	mov	x3, x22
 154:	mov	x4, x27
 158:	mov	x2, x21
 15c:	mov	x1, x28
 160:	mov	x7, x25
 164:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 168:	ldrb	w0, [x20, #44]
 16c:	cbnz	w0, 2a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x2a4>
 170:	ldrb	w1, [x19, #16]
 174:	cmp	w1, #0x17
 178:	sub	w2, w1, #0x18
 17c:	b.ls	310 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x310>  // b.plast
 180:	cmp	w2, #0x39
 184:	b.hi	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>  // b.pmore
 188:	mov	x1, #0x5000                	// #20480
 18c:	mov	x0, #0x1                   	// #1
 190:	movk	x1, #0x125, lsl #16
 194:	lsl	x0, x0, x2
 198:	movk	x1, #0x40, lsl #48
 19c:	tst	x0, x1
 1a0:	b.ne	34c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x34c>  // b.any
 1a4:	tst	x0, #0x380000000000000
 1a8:	b.ne	320 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x320>  // b.any
 1ac:	ldr	x0, [x20, #8]
 1b0:	cbz	x0, 1fc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1fc>
 1b4:	ldr	x21, [x20, #16]
 1b8:	add	x0, x0, #0x28
 1bc:	mov	x1, x19
 1c0:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
 1c4:	ldr	x0, [x19, #24]
 1c8:	add	x2, x19, #0x18
 1cc:	ldr	x1, [x21]
 1d0:	and	x0, x0, #0x7
 1d4:	tst	x2, #0x7
 1d8:	and	x1, x1, #0xfffffffffffffff8
 1dc:	orr	x0, x0, x1
 1e0:	stp	x0, x21, [x19, #24]
 1e4:	ldr	x0, [x21]
 1e8:	str	x2, [x1, #8]
 1ec:	b.ne	448 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x448>  // b.any
 1f0:	and	x0, x0, #0x7
 1f4:	orr	x0, x0, x2
 1f8:	str	x0, [x21]
 1fc:	ldr	x1, [sp, #96]
 200:	mov	x0, x19
 204:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
 208:	ldr	x1, [x20]
 20c:	cbz	x1, 254 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x254>
 210:	mov	x0, x25
 214:	add	x20, x19, #0x30
 218:	mov	x2, #0x2                   	// #2
 21c:	str	x1, [sp, #120]
 220:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
 224:	cmp	x20, x25
 228:	b.eq	274 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x274>  // b.none
 22c:	ldr	x1, [x19, #48]
 230:	cbz	x1, 23c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x23c>
 234:	mov	x0, x20
 238:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 23c:	ldr	x1, [sp, #120]
 240:	str	x1, [x19, #48]
 244:	cbz	x1, 254 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x254>
 248:	mov	x2, x20
 24c:	mov	x0, x25
 250:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
 254:	mov	x0, x19
 258:	ldp	x19, x20, [sp, #16]
 25c:	ldp	x21, x22, [sp, #32]
 260:	ldp	x23, x24, [sp, #48]
 264:	ldp	x25, x26, [sp, #64]
 268:	ldp	x27, x28, [sp, #80]
 26c:	ldp	x29, x30, [sp], #144
 270:	ret
 274:	ldr	x1, [sp, #120]
 278:	cbz	x1, 254 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x254>
 27c:	mov	x0, x25
 280:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 284:	mov	x0, x19
 288:	ldp	x19, x20, [sp, #16]
 28c:	ldp	x21, x22, [sp, #32]
 290:	ldp	x23, x24, [sp, #48]
 294:	ldp	x25, x26, [sp, #64]
 298:	ldp	x27, x28, [sp, #80]
 29c:	ldp	x29, x30, [sp], #144
 2a0:	ret
 2a4:	add	x0, x19, #0x38
 2a8:	mov	w2, #0x39                  	// #57
 2ac:	mov	w1, #0xffffffff            	// #-1
 2b0:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
 2b4:	tst	w0, #0xff
 2b8:	b.ne	170 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x170>  // b.any
 2bc:	mov	x0, x19
 2c0:	mov	w1, #0x39                  	// #57
 2c4:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
 2c8:	tst	w0, #0xff
 2cc:	b.ne	170 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x170>  // b.any
 2d0:	ldr	x1, [x19, #56]
 2d4:	mov	x0, x19
 2d8:	str	x1, [sp, #120]
 2dc:	bl	0 <_ZNK4llvm5Value10getContextEv>
 2e0:	mov	x1, x0
 2e4:	mov	w2, #0xffffffff            	// #-1
 2e8:	mov	x0, x25
 2ec:	mov	w3, #0x39                  	// #57
 2f0:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 2f4:	str	x0, [sp, #120]
 2f8:	str	x0, [x19, #56]
 2fc:	ldrb	w1, [x19, #16]
 300:	cmp	w1, #0x17
 304:	sub	w2, w1, #0x18
 308:	b.hi	180 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x180>  // b.pmore
 30c:	nop
 310:	cmp	w1, #0x5
 314:	b.ne	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>  // b.any
 318:	ldrh	w2, [x19, #18]
 31c:	b	180 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x180>
 320:	ldr	x0, [x19]
 324:	cbz	x0, 380 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x380>
 328:	ldrb	w1, [x0, #8]
 32c:	cmp	w1, #0xe
 330:	b.eq	378 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x378>  // b.none
 334:	cmp	w1, #0x10
 338:	b.eq	3e8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3e8>  // b.none
 33c:	sub	w1, w1, #0x1
 340:	and	w1, w1, #0xff
 344:	cmp	w1, #0x5
 348:	b.hi	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>  // b.pmore
 34c:	ldr	x0, [sp, #104]
 350:	ldr	w21, [x20, #40]
 354:	cbz	x0, 3a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x3a0>
 358:	ldr	x2, [sp, #104]
 35c:	mov	x0, x19
 360:	mov	w1, #0x3                   	// #3
 364:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 368:	mov	w1, w21
 36c:	mov	x0, x19
 370:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 374:	b	1ac <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x1ac>
 378:	ldr	x0, [x0, #24]
 37c:	cbnz	x0, 328 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x328>
 380:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 384:	add	x3, x3, #0x0
 388:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 38c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 390:	add	x1, x1, #0x0
 394:	add	x0, x0, #0x0
 398:	mov	w2, #0x69                  	// #105
 39c:	bl	0 <__assert_fail>
 3a0:	ldr	x0, [x20, #32]
 3a4:	str	x0, [sp, #104]
 3a8:	cbz	x0, 368 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x368>
 3ac:	b	358 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x358>
 3b0:	add	w1, w3, #0x1
 3b4:	lsl	w2, w23, #4
 3b8:	mov	x0, #0x48                  	// #72
 3bc:	bl	0 <_ZN4llvm4UsernwEmjj>
 3c0:	ldr	x2, [x28, #16]
 3c4:	add	x1, x27, x27, lsl #1
 3c8:	mov	x3, #0xffffffffffffffe8    	// #-24
 3cc:	mov	x19, x0
 3d0:	sub	x1, x3, x1, lsl #3
 3d4:	mov	x24, x26
 3d8:	add	x3, x0, x1
 3dc:	mov	w4, w27
 3e0:	ldr	x1, [x2]
 3e4:	b	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x128>
 3e8:	ldr	x0, [x0, #16]
 3ec:	ldr	x0, [x0]
 3f0:	ldrb	w1, [x0, #8]
 3f4:	b	33c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x33c>
 3f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 3fc:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 400:	add	x3, x3, #0x0
 404:	b	38c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x38c>
 408:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 40c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 410:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 414:	add	x3, x3, #0x0
 418:	add	x1, x1, #0x0
 41c:	add	x0, x0, #0x0
 420:	mov	w2, #0x17e                 	// #382
 424:	bl	0 <__assert_fail>
 428:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 42c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 430:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 434:	add	x3, x3, #0x0
 438:	add	x1, x1, #0x0
 43c:	add	x0, x0, #0x0
 440:	mov	w2, #0x108                 	// #264
 444:	bl	0 <__assert_fail>
 448:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 44c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 450:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
 454:	add	x3, x3, #0x0
 458:	add	x1, x1, #0x0
 45c:	add	x0, x0, #0x0
 460:	mov	w2, #0xb2                  	// #178
 464:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 14 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x14>
   4:	ldrb	w1, [x0, #16]
   8:	cmp	w1, #0x10
   c:	csel	x0, x0, xzr, ls  // ls = plast
  10:	ret
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>

Disassembly of section .text._ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 20 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x20>
   c:	ldrb	w1, [x0, #16]
  10:	cmp	w1, #0xd
  14:	b.ne	24 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x24>  // b.any
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	bl	0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x3, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x1, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	adrp	x0, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x108                 	// #264
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 198 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x198>
  10:	mov	x19, x0
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0xd
  1c:	b.eq	68 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x68>  // b.none
  20:	ldr	x2, [x1]
  24:	ldrb	w2, [x2, #8]
  28:	cmp	w2, #0x10
  2c:	ccmp	w0, #0x10, #0x2, eq  // eq = none
  30:	b.ls	48 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x48>  // b.plast
  34:	mov	w19, #0x0                   	// #0
  38:	mov	w0, w19
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #80
  44:	ret
  48:	mov	x0, x1
  4c:	mov	w1, #0x0                   	// #0
  50:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  54:	mov	x1, x0
  58:	cbz	x0, 34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x34>
  5c:	ldrb	w0, [x0, #16]
  60:	cmp	w0, #0xd
  64:	b.ne	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x34>  // b.any
  68:	ldr	w2, [x19, #8]
  6c:	add	x20, x1, #0x18
  70:	ldr	w1, [x1, #32]
  74:	cmp	w1, w2
  78:	b.eq	140 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x140>  // b.none
  7c:	stp	x21, x22, [sp, #32]
  80:	b.ls	e0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xe0>  // b.plast
  84:	add	x22, sp, #0x40
  88:	mov	x0, x19
  8c:	mov	x8, x22
  90:	bl	0 <_ZNK4llvm5APInt4zextEj>
  94:	ldr	w0, [x20, #8]
  98:	ldr	w21, [sp, #72]
  9c:	cmp	w0, w21
  a0:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x1a0>  // b.any
  a4:	cmp	w21, #0x40
  a8:	b.ls	170 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x170>  // b.plast
  ac:	mov	x1, x22
  b0:	mov	x0, x20
  b4:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
  b8:	and	w19, w0, #0xff
  bc:	cmp	w21, #0x40
  c0:	b.ls	cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xcc>  // b.plast
  c4:	ldr	x0, [sp, #64]
  c8:	cbnz	x0, 128 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x128>
  cc:	mov	w0, w19
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	add	x21, sp, #0x30
  e4:	mov	w1, w2
  e8:	mov	x0, x20
  ec:	mov	x8, x21
  f0:	bl	0 <_ZNK4llvm5APInt4zextEj>
  f4:	ldr	w1, [x19, #8]
  f8:	ldr	w0, [sp, #56]
  fc:	cmp	w0, w1
 100:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x1a0>  // b.any
 104:	cmp	w0, #0x40
 108:	ldr	x20, [sp, #48]
 10c:	b.ls	15c <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x15c>  // b.plast
 110:	mov	x1, x19
 114:	mov	x0, x21
 118:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 11c:	and	w19, w0, #0xff
 120:	cbz	x20, cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xcc>
 124:	mov	x0, x20
 128:	bl	0 <_ZdaPv>
 12c:	mov	w0, w19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	cmp	w1, #0x40
 144:	b.ls	184 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x184>  // b.plast
 148:	mov	x1, x19
 14c:	mov	x0, x20
 150:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 154:	and	w19, w0, #0xff
 158:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 15c:	ldr	x0, [x19]
 160:	ldp	x21, x22, [sp, #32]
 164:	cmp	x20, x0
 168:	cset	w19, eq  // eq = none
 16c:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 170:	ldr	x1, [x20]
 174:	ldr	x0, [sp, #64]
 178:	cmp	x1, x0
 17c:	cset	w19, eq  // eq = none
 180:	b	bc <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0xbc>
 184:	ldr	x0, [x19]
 188:	ldr	x1, [x20]
 18c:	cmp	x1, x0
 190:	cset	w19, eq  // eq = none
 194:	b	38 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x38>
 198:	stp	x21, x22, [sp, #32]
 19c:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1a4:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1a8:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
 1ac:	add	x3, x3, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x0, x0, #0x0
 1b8:	mov	w2, #0x47f                 	// #1151
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 48 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x48>
   c:	ldrb	w1, [x0, #16]
  10:	sub	w1, w1, #0x25
  14:	and	w1, w1, #0xff
  18:	cmp	w1, #0x11
  1c:	b.ls	40 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.plast
  20:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x108                 	// #264
  3c:	bl	0 <__assert_fail>
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 184 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x184>
  10:	ldrb	w0, [x1, #16]
  14:	mov	x19, x1
  18:	cmp	w0, #0xd
  1c:	b.eq	44 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x44>  // b.none
  20:	ldr	x0, [x1]
  24:	ldrb	w0, [x0, #8]
  28:	cmp	w0, #0x10
  2c:	b.eq	90 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x90>  // b.none
  30:	mov	w20, #0x0                   	// #0
  34:	mov	w0, w20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret
  44:	ldr	w20, [x1, #32]
  48:	cmp	w20, #0x40
  4c:	b.ls	74 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x74>  // b.plast
  50:	sub	w20, w20, #0x1
  54:	add	x0, x1, #0x18
  58:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  5c:	cmp	w20, w0
  60:	cset	w20, eq  // eq = none
  64:	mov	w0, w20
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ldr	x0, [x1, #24]
  78:	cmp	x0, #0x1
  7c:	cset	w20, eq  // eq = none
  80:	mov	w0, w20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x0, x19
  94:	mov	w1, #0x0                   	// #0
  98:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  9c:	cbz	x0, ac <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xac>
  a0:	ldrb	w1, [x0, #16]
  a4:	cmp	w1, #0xd
  a8:	b.eq	140 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x140>  // b.none
  ac:	ldr	x0, [x19]
  b0:	stp	x21, x22, [sp, #32]
  b4:	cbz	x0, 1cc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1cc>
  b8:	ldrb	w1, [x0, #8]
  bc:	cmp	w1, #0x10
  c0:	b.ne	1ac <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x1ac>  // b.any
  c4:	ldr	x0, [x0, #32]
  c8:	mov	w22, w0
  cc:	cbz	w0, 18c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x18c>
  d0:	mov	w21, #0x0                   	// #0
  d4:	mov	w20, #0x0                   	// #0
  d8:	mov	w1, w21
  dc:	mov	x0, x19
  e0:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  e4:	cbz	x0, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xfc>
  e8:	ldrb	w1, [x0, #16]
  ec:	cmp	w1, #0x9
  f0:	b.eq	12c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x12c>  // b.none
  f4:	cmp	w1, #0xd
  f8:	b.eq	108 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x108>  // b.none
  fc:	mov	w20, #0x0                   	// #0
 100:	ldp	x21, x22, [sp, #32]
 104:	b	34 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x34>
 108:	ldr	w20, [x0, #32]
 10c:	cmp	w20, #0x40
 110:	b.ls	164 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x164>  // b.plast
 114:	sub	w20, w20, #0x1
 118:	add	x0, x0, #0x18
 11c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 120:	cmp	w20, w0
 124:	cset	w20, eq  // eq = none
 128:	cbz	w20, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xfc>
 12c:	add	w21, w21, #0x1
 130:	cmp	w21, w22
 134:	b.ne	d8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xd8>  // b.any
 138:	ldp	x21, x22, [sp, #32]
 13c:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x64>
 140:	ldr	w19, [x0, #32]
 144:	cmp	w19, #0x40
 148:	b.ls	174 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x174>  // b.plast
 14c:	sub	w19, w19, #0x1
 150:	add	x0, x0, #0x18
 154:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 158:	cmp	w19, w0
 15c:	cset	w20, eq  // eq = none
 160:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x64>
 164:	ldr	x0, [x0, #24]
 168:	cmp	x0, #0x1
 16c:	cset	w20, eq  // eq = none
 170:	b	128 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x128>
 174:	ldr	x0, [x0, #24]
 178:	cmp	x0, #0x1
 17c:	cset	w20, eq  // eq = none
 180:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x64>
 184:	stp	x21, x22, [sp, #32]
 188:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 18c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 190:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 194:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 198:	add	x3, x3, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x0, x0, #0x0
 1a4:	mov	w2, #0xeb                  	// #235
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 1b0:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 1b4:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
 1b8:	add	x3, x3, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x0, x0, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 198 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x198>
  10:	mov	x19, x0
  14:	ldrb	w0, [x1, #16]
  18:	cmp	w0, #0xd
  1c:	b.eq	68 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x68>  // b.none
  20:	ldr	x0, [x1]
  24:	ldrb	w0, [x0, #8]
  28:	cmp	w0, #0x10
  2c:	b.eq	44 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x44>  // b.none
  30:	mov	w19, #0x0                   	// #0
  34:	mov	w0, w19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #80
  40:	ret
  44:	mov	x0, x1
  48:	mov	w1, #0x0                   	// #0
  4c:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  50:	mov	x1, x0
  54:	cbz	x0, 30 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x30>
  58:	ldrb	w0, [x0, #16]
  5c:	cmp	w0, #0xd
  60:	b.ne	30 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x30>  // b.any
  64:	nop
  68:	ldr	w2, [x19, #8]
  6c:	add	x20, x1, #0x18
  70:	ldr	w1, [x1, #32]
  74:	cmp	w1, w2
  78:	b.eq	140 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x140>  // b.none
  7c:	stp	x21, x22, [sp, #32]
  80:	b.ls	e0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xe0>  // b.plast
  84:	add	x22, sp, #0x40
  88:	mov	x0, x19
  8c:	mov	x8, x22
  90:	bl	0 <_ZNK4llvm5APInt4zextEj>
  94:	ldr	w0, [x20, #8]
  98:	ldr	w21, [sp, #72]
  9c:	cmp	w0, w21
  a0:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1a0>  // b.any
  a4:	cmp	w21, #0x40
  a8:	b.ls	170 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x170>  // b.plast
  ac:	mov	x1, x22
  b0:	mov	x0, x20
  b4:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
  b8:	and	w19, w0, #0xff
  bc:	cmp	w21, #0x40
  c0:	b.ls	cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xcc>  // b.plast
  c4:	ldr	x0, [sp, #64]
  c8:	cbnz	x0, 128 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x128>
  cc:	mov	w0, w19
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	add	x21, sp, #0x30
  e4:	mov	w1, w2
  e8:	mov	x0, x20
  ec:	mov	x8, x21
  f0:	bl	0 <_ZNK4llvm5APInt4zextEj>
  f4:	ldr	w1, [x19, #8]
  f8:	ldr	w0, [sp, #56]
  fc:	cmp	w0, w1
 100:	b.ne	1a0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x1a0>  // b.any
 104:	cmp	w0, #0x40
 108:	ldr	x20, [sp, #48]
 10c:	b.ls	15c <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x15c>  // b.plast
 110:	mov	x1, x19
 114:	mov	x0, x21
 118:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 11c:	and	w19, w0, #0xff
 120:	cbz	x20, cc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xcc>
 124:	mov	x0, x20
 128:	bl	0 <_ZdaPv>
 12c:	mov	w0, w19
 130:	ldp	x19, x20, [sp, #16]
 134:	ldp	x21, x22, [sp, #32]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	cmp	w1, #0x40
 144:	b.ls	184 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x184>  // b.plast
 148:	mov	x1, x19
 14c:	mov	x0, x20
 150:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 154:	and	w19, w0, #0xff
 158:	b	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x34>
 15c:	ldr	x0, [x19]
 160:	ldp	x21, x22, [sp, #32]
 164:	cmp	x20, x0
 168:	cset	w19, eq  // eq = none
 16c:	b	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x34>
 170:	ldr	x1, [x20]
 174:	ldr	x0, [sp, #64]
 178:	cmp	x1, x0
 17c:	cset	w19, eq  // eq = none
 180:	b	bc <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0xbc>
 184:	ldr	x0, [x19]
 188:	ldr	x1, [x20]
 18c:	cmp	x1, x0
 190:	cset	w19, eq  // eq = none
 194:	b	34 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x34>
 198:	stp	x21, x22, [sp, #32]
 19c:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1a0:	adrp	x3, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1a4:	adrp	x1, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1a8:	adrp	x0, 0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
 1ac:	add	x3, x3, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x0, x0, #0x0
 1b8:	mov	w2, #0x47f                 	// #1151
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x31
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x19
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x31
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x19
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
  44:	ldr	w2, [x1, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x2, x2, #0, #28
  50:	cbz	w2, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
  54:	mov	w4, w2
  58:	ubfiz	x3, x2, #2, #28
  5c:	sub	x3, x4, x3
  60:	ldr	x3, [x1, x3, lsl #3]
  64:	cbz	x3, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
  68:	ldrb	w0, [x3, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  74:	ldr	x0, [x20]
  78:	cmp	w2, #0x1
  7c:	str	x3, [x0]
  80:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
  84:	mov	x0, #0x1                   	// #1
  88:	sub	x0, x0, x4
  8c:	add	x0, x0, x0, lsl #1
  90:	ldr	x21, [x1, x0, lsl #3]
  94:	cbz	x21, 1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1ec>
  98:	ldrb	w0, [x21, #16]
  9c:	cmp	w0, #0x10
  a0:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
  a4:	cmp	w0, #0x5
  a8:	b.eq	1ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1ac>  // b.none
  ac:	nop
  b0:	ldr	x21, [sp, #32]
  b4:	b	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>
  b8:	ldur	x0, [x1, #-48]
  bc:	str	x21, [sp, #32]
  c0:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
  c4:	ldr	x2, [x20]
  c8:	str	x0, [x2]
  cc:	ldur	x21, [x1, #-24]
  d0:	ldrb	w0, [x21, #16]
  d4:	cmp	w0, #0x27
  d8:	b.eq	180 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x180>  // b.none
  dc:	cmp	w0, #0x5
  e0:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  e4:	ldrh	w0, [x21, #18]
  e8:	cmp	w0, #0xf
  ec:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  f0:	ldr	w1, [x21, #20]
  f4:	add	x0, x20, #0x8
  f8:	ubfx	x1, x1, #0, #28
  fc:	cbz	w1, 1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>
 100:	mov	w2, w1
 104:	ubfiz	x1, x1, #2, #28
 108:	sub	x1, x2, x1
 10c:	ldr	x1, [x21, x1, lsl #3]
 110:	cbz	x1, 120 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x120>
 114:	ldrb	w2, [x1, #16]
 118:	cmp	w2, #0x10
 11c:	b.hi	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x160>  // b.pmore
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 124:	ands	w19, w0, #0xff
 128:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 12c:	ldr	w0, [x21, #20]
 130:	ubfx	x0, x0, #0, #28
 134:	cmp	w0, #0x1
 138:	b.ls	1f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f8>  // b.plast
 13c:	mov	w1, w0
 140:	mov	x0, #0x1                   	// #1
 144:	sub	x0, x0, x1
 148:	add	x0, x0, x0, lsl #1
 14c:	ldr	x0, [x21, x0, lsl #3]
 150:	cbz	x0, 1e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1e8>
 154:	ldrb	w1, [x0, #16]
 158:	cmp	w1, #0x10
 15c:	b.ls	19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>  // b.plast
 160:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 164:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 168:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 16c:	add	x3, x3, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x0, x0, #0x0
 178:	mov	w2, #0x134                 	// #308
 17c:	bl	0 <__assert_fail>
 180:	ldur	x1, [x21, #-48]
 184:	add	x0, x20, #0x8
 188:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 18c:	ands	w19, w0, #0xff
 190:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 194:	ldur	x0, [x21, #-24]
 198:	cbz	x0, 1f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1f4>
 19c:	ldr	x1, [x20, #24]
 1a0:	ldr	x21, [sp, #32]
 1a4:	str	x0, [x1]
 1a8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1ac:	ldrh	w0, [x21, #18]
 1b0:	cmp	w0, #0xf
 1b4:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
 1b8:	mov	w1, #0x0                   	// #0
 1bc:	mov	x0, x21
 1c0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1c4:	mov	x1, x0
 1c8:	add	x0, x20, #0x8
 1cc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1d0:	ands	w19, w0, #0xff
 1d4:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
 1d8:	mov	x0, x21
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1e4:	cbnz	x0, 19c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x19c>
 1e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1ec:	ldrb	w0, [x21, #16]
 1f0:	brk	#0x3e8
 1f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1f8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 1fc:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 200:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 204:	add	x3, x3, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x0, x0, #0x0
 210:	mov	w2, #0x4fa                 	// #1274
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.eq	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x84>  // b.none
  20:	cmp	w1, #0x5
  24:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0x1c
  40:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  44:	ldr	w0, [x19, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x0, x0, #0, #28
  50:	cbz	w0, 200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x200>
  54:	mov	w1, w0
  58:	ubfiz	x0, x0, #2, #28
  5c:	sub	x0, x1, x0
  60:	ldr	x21, [x19, x0, lsl #3]
  64:	cbz	x21, 1d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1d0>
  68:	ldrb	w0, [x21, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1dc>  // b.pmore
  74:	cmp	w0, #0x5
  78:	b.eq	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x140>  // b.none
  7c:	ldr	x21, [sp, #32]
  80:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>
  84:	ldur	x0, [x19, #-48]
  88:	ldrb	w1, [x0, #16]
  8c:	cmp	w1, #0x32
  90:	b.eq	114 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x114>  // b.none
  94:	cmp	w1, #0x5
  98:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  9c:	ldrh	w1, [x0, #18]
  a0:	cmp	w1, #0x1a
  a4:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  a8:	ldr	w1, [x0, #20]
  ac:	ubfx	x1, x1, #0, #28
  b0:	cbz	w1, 1fc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1fc>
  b4:	mov	w2, w1
  b8:	ubfiz	x1, x1, #2, #28
  bc:	sub	x1, x2, x1
  c0:	ldr	x1, [x0, x1, lsl #3]
  c4:	cbz	x1, d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xd4>
  c8:	ldrb	w2, [x1, #16]
  cc:	cmp	w2, #0x10
  d0:	b.hi	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1d8>  // b.pmore
  d4:	ldr	x2, [x20]
  d8:	ldr	x2, [x2]
  dc:	cmp	x2, x1
  e0:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
  e4:	mov	w1, #0x1                   	// #1
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  ec:	mov	x1, x0
  f0:	add	x0, x20, #0x8
  f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  f8:	tst	w0, #0xff
  fc:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.none
 100:	add	x0, x20, #0x18
 104:	ldur	x1, [x19, #-24]
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 114:	ldr	x2, [x20]
 118:	ldur	x1, [x0, #-48]
 11c:	ldr	x2, [x2]
 120:	cmp	x2, x1
 124:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.any
 128:	ldur	x1, [x0, #-24]
 12c:	add	x0, x20, #0x8
 130:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 134:	tst	w0, #0xff
 138:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x28>  // b.none
 13c:	b	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x100>
 140:	ldrh	w0, [x21, #18]
 144:	cmp	w0, #0x1a
 148:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x7c>  // b.any
 14c:	mov	w1, #0x0                   	// #0
 150:	mov	x0, x21
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 158:	ldr	x1, [x20]
 15c:	ldr	x1, [x1]
 160:	cmp	x1, x0
 164:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x7c>  // b.any
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x0, x21
 170:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 174:	mov	x1, x0
 178:	add	x0, x20, #0x8
 17c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 180:	tst	w0, #0xff
 184:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x7c>  // b.none
 188:	ldr	w1, [x19, #20]
 18c:	add	x0, x20, #0x18
 190:	ubfx	x1, x1, #0, #28
 194:	cmp	w1, #0x1
 198:	b.ls	200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x200>  // b.plast
 19c:	mov	w2, w1
 1a0:	mov	x1, #0x1                   	// #1
 1a4:	sub	x1, x1, x2
 1a8:	add	x1, x1, x1, lsl #1
 1ac:	ldr	x1, [x19, x1, lsl #3]
 1b0:	cbz	x1, 1c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1c0>
 1b4:	ldrb	w2, [x1, #16]
 1b8:	cmp	w2, #0x10
 1bc:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x1dc>  // b.pmore
 1c0:	ldp	x19, x20, [sp, #16]
 1c4:	ldr	x21, [sp, #32]
 1c8:	ldp	x29, x30, [sp], #48
 1cc:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1d0:	ldrb	w0, [x21, #16]
 1d4:	brk	#0x3e8
 1d8:	str	x21, [sp, #32]
 1dc:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1e0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1e4:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 1e8:	add	x3, x3, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x0, x0, #0x0
 1f4:	mov	w2, #0x134                 	// #308
 1f8:	bl	0 <__assert_fail>
 1fc:	str	x21, [sp, #32]
 200:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 204:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 208:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
 20c:	add	x3, x3, #0x0
 210:	add	x1, x1, #0x0
 214:	add	x0, x0, #0x0
 218:	mov	w2, #0x4fa                 	// #1274
 21c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.eq	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x84>  // b.none
  20:	cmp	w1, #0x5
  24:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0x1c
  40:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  44:	ldr	w0, [x19, #20]
  48:	str	x21, [sp, #32]
  4c:	ubfx	x0, x0, #0, #28
  50:	cbz	w0, 200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x200>
  54:	mov	w1, w0
  58:	ubfiz	x0, x0, #2, #28
  5c:	sub	x0, x1, x0
  60:	ldr	x21, [x19, x0, lsl #3]
  64:	cbz	x21, 1d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1d0>
  68:	ldrb	w0, [x21, #16]
  6c:	cmp	w0, #0x10
  70:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1dc>  // b.pmore
  74:	cmp	w0, #0x5
  78:	b.eq	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x140>  // b.none
  7c:	ldr	x21, [sp, #32]
  80:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
  84:	ldur	x0, [x19, #-48]
  88:	ldrb	w1, [x0, #16]
  8c:	cmp	w1, #0x32
  90:	b.eq	114 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x114>  // b.none
  94:	cmp	w1, #0x5
  98:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  9c:	ldrh	w1, [x0, #18]
  a0:	cmp	w1, #0x1a
  a4:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  a8:	ldr	w1, [x0, #20]
  ac:	ubfx	x1, x1, #0, #28
  b0:	cbz	w1, 1fc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1fc>
  b4:	mov	w2, w1
  b8:	ubfiz	x1, x1, #2, #28
  bc:	sub	x1, x2, x1
  c0:	ldr	x1, [x0, x1, lsl #3]
  c4:	cbz	x1, d4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xd4>
  c8:	ldrb	w2, [x1, #16]
  cc:	cmp	w2, #0x10
  d0:	b.hi	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1d8>  // b.pmore
  d4:	ldr	x2, [x20]
  d8:	ldr	x2, [x2]
  dc:	cmp	x2, x1
  e0:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
  e4:	mov	w1, #0x1                   	// #1
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  ec:	mov	x1, x0
  f0:	add	x0, x20, #0x8
  f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  f8:	tst	w0, #0xff
  fc:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.none
 100:	add	x0, x20, #0x18
 104:	ldur	x1, [x19, #-24]
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 114:	ldr	x2, [x20]
 118:	ldur	x1, [x0, #-48]
 11c:	ldr	x2, [x2]
 120:	cmp	x2, x1
 124:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.any
 128:	ldur	x1, [x0, #-24]
 12c:	add	x0, x20, #0x8
 130:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 134:	tst	w0, #0xff
 138:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x28>  // b.none
 13c:	b	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x100>
 140:	ldrh	w0, [x21, #18]
 144:	cmp	w0, #0x1a
 148:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.any
 14c:	mov	w1, #0x0                   	// #0
 150:	mov	x0, x21
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 158:	ldr	x1, [x20]
 15c:	ldr	x1, [x1]
 160:	cmp	x1, x0
 164:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.any
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x0, x21
 170:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 174:	mov	x1, x0
 178:	add	x0, x20, #0x8
 17c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 180:	tst	w0, #0xff
 184:	b.eq	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x7c>  // b.none
 188:	ldr	w1, [x19, #20]
 18c:	add	x0, x20, #0x18
 190:	ubfx	x1, x1, #0, #28
 194:	cmp	w1, #0x1
 198:	b.ls	200 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x200>  // b.plast
 19c:	mov	w2, w1
 1a0:	mov	x1, #0x1                   	// #1
 1a4:	sub	x1, x1, x2
 1a8:	add	x1, x1, x1, lsl #1
 1ac:	ldr	x1, [x19, x1, lsl #3]
 1b0:	cbz	x1, 1c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1c0>
 1b4:	ldrb	w2, [x1, #16]
 1b8:	cmp	w2, #0x10
 1bc:	b.hi	1dc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x1dc>  // b.pmore
 1c0:	ldp	x19, x20, [sp, #16]
 1c4:	ldr	x21, [sp, #32]
 1c8:	ldp	x29, x30, [sp], #48
 1cc:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1d0:	ldrb	w0, [x21, #16]
 1d4:	brk	#0x3e8
 1d8:	str	x21, [sp, #32]
 1dc:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1e0:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1e4:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 1e8:	add	x3, x3, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x0, x0, #0x0
 1f4:	mov	w2, #0x134                 	// #308
 1f8:	bl	0 <__assert_fail>
 1fc:	str	x21, [sp, #32]
 200:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 204:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 208:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
 20c:	add	x3, x3, #0x0
 210:	add	x1, x1, #0x0
 214:	add	x0, x0, #0x0
 218:	mov	w2, #0x4fa                 	// #1274
 21c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x25
  1c:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb8>  // b.none
  20:	cmp	w1, #0x5
  24:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x38>  // b.none
  28:	mov	w0, #0x0                   	// #0
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #64
  34:	ret
  38:	ldrh	w0, [x19, #18]
  3c:	cmp	w0, #0xd
  40:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.any
  44:	ldr	w0, [x19, #20]
  48:	ubfx	x0, x0, #0, #28
  4c:	cbz	w0, 414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>
  50:	mov	w1, w0
  54:	ubfiz	x2, x0, #2, #28
  58:	sub	x1, x1, x2
  5c:	stp	x21, x22, [sp, #32]
  60:	ldr	x21, [x19, x1, lsl #3]
  64:	cbz	x21, 3a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3a8>
  68:	ldrb	w1, [x21, #16]
  6c:	cmp	w1, #0x10
  70:	b.hi	3c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c0>  // b.pmore
  74:	cmp	w1, #0x5
  78:	b.eq	2bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x2bc>  // b.none
  7c:	cmp	w0, #0x1
  80:	b.ls	3f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f0>  // b.plast
  84:	mov	w0, w0
  88:	mov	x22, #0x1                   	// #1
  8c:	sub	x0, x22, x0
  90:	add	x0, x0, x0, lsl #1
  94:	ldr	x21, [x19, x0, lsl #3]
  98:	cbz	x21, 3a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3a8>
  9c:	ldrb	w0, [x21, #16]
  a0:	cmp	w0, #0x10
  a4:	b.hi	3c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c0>  // b.pmore
  a8:	cmp	w0, #0x5
  ac:	b.eq	260 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x260>  // b.none
  b0:	ldp	x21, x22, [sp, #32]
  b4:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>
  b8:	ldur	x1, [x19, #-48]
  bc:	ldrb	w0, [x1, #16]
  c0:	cmp	w0, #0x34
  c4:	b.eq	1f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x1f0>  // b.none
  c8:	cmp	w0, #0x5
  cc:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x174>  // b.none
  d0:	ldur	x1, [x19, #-24]
  d4:	ldrb	w0, [x1, #16]
  d8:	cmp	w0, #0x34
  dc:	b.eq	238 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x238>  // b.none
  e0:	cmp	w0, #0x5
  e4:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.any
  e8:	ldrh	w0, [x1, #18]
  ec:	cmp	w0, #0x1c
  f0:	b.ne	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.any
  f4:	ldr	w2, [x1, #20]
  f8:	ubfx	x2, x2, #0, #28
  fc:	cbz	w2, 414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>
 100:	mov	w4, w2
 104:	ubfiz	x0, x2, #2, #28
 108:	sub	x0, x4, x0
 10c:	ldr	x3, [x1, x0, lsl #3]
 110:	cbz	x3, 3b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3b4>
 114:	ldrb	w0, [x3, #16]
 118:	cmp	w0, #0x10
 11c:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 120:	mov	x0, x20
 124:	cmp	w2, #0x1
 128:	ldr	x2, [x0], #8
 12c:	str	x3, [x2]
 130:	b.ls	414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>  // b.plast
 134:	mov	x2, #0x1                   	// #1
 138:	sub	x2, x2, x4
 13c:	add	x2, x2, x2, lsl #1
 140:	ldr	x1, [x1, x2, lsl #3]
 144:	cbz	x1, 154 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x154>
 148:	ldrb	w2, [x1, #16]
 14c:	cmp	w2, #0x10
 150:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 158:	tst	w0, #0xff
 15c:	b.eq	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>  // b.none
 160:	add	x0, x20, #0x18
 164:	ldur	x1, [x19, #-48]
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x29, x30, [sp], #64
 170:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 174:	ldrh	w0, [x1, #18]
 178:	cmp	w0, #0x1c
 17c:	b.ne	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>  // b.any
 180:	ldr	w2, [x1, #20]
 184:	ubfx	x2, x2, #0, #28
 188:	cbz	w2, 414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>
 18c:	mov	w4, w2
 190:	ubfiz	x0, x2, #2, #28
 194:	sub	x0, x4, x0
 198:	ldr	x3, [x1, x0, lsl #3]
 19c:	cbz	x3, 3b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3b4>
 1a0:	ldrb	w0, [x3, #16]
 1a4:	cmp	w0, #0x10
 1a8:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 1ac:	mov	x0, x20
 1b0:	cmp	w2, #0x1
 1b4:	ldr	x2, [x0], #8
 1b8:	str	x3, [x2]
 1bc:	b.ls	414 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x414>  // b.plast
 1c0:	mov	x2, #0x1                   	// #1
 1c4:	sub	x2, x2, x4
 1c8:	add	x2, x2, x2, lsl #1
 1cc:	ldr	x1, [x1, x2, lsl #3]
 1d0:	cbz	x1, 1e0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x1e0>
 1d4:	ldrb	w2, [x1, #16]
 1d8:	cmp	w2, #0x10
 1dc:	b.hi	428 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x428>  // b.pmore
 1e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 1e4:	tst	w0, #0xff
 1e8:	b.ne	214 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x214>  // b.any
 1ec:	b	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>
 1f0:	ldur	x2, [x1, #-48]
 1f4:	cbz	x2, 3e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3e4>
 1f8:	mov	x0, x20
 1fc:	ldr	x3, [x0], #8
 200:	str	x2, [x3]
 204:	ldur	x1, [x1, #-24]
 208:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 20c:	tst	w0, #0xff
 210:	b.eq	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>  // b.none
 214:	ldur	x1, [x19, #-24]
 218:	add	x0, x20, #0x18
 21c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 220:	tst	w0, #0xff
 224:	b.eq	d0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xd0>  // b.none
 228:	mov	w0, #0x1                   	// #1
 22c:	ldp	x19, x20, [sp, #16]
 230:	ldp	x29, x30, [sp], #64
 234:	ret
 238:	ldur	x2, [x1, #-48]
 23c:	cbz	x2, 3e4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3e4>
 240:	mov	x0, x20
 244:	ldr	x3, [x0], #8
 248:	str	x2, [x3]
 24c:	ldur	x1, [x1, #-24]
 250:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 254:	tst	w0, #0xff
 258:	b.ne	160 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x160>  // b.any
 25c:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>
 260:	ldrh	w0, [x21, #18]
 264:	cmp	w0, #0x1c
 268:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb0>  // b.any
 26c:	mov	x0, x21
 270:	mov	w1, #0x0                   	// #0
 274:	str	x23, [sp, #48]
 278:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 27c:	mov	x2, x0
 280:	cbz	x0, 3bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3bc>
 284:	mov	x23, x20
 288:	mov	w1, w22
 28c:	mov	x0, x21
 290:	ldr	x3, [x23], #8
 294:	str	x2, [x3]
 298:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 29c:	mov	x1, x0
 2a0:	mov	x0, x23
 2a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 2a8:	tst	w0, #0xff
 2ac:	b.ne	364 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x364>  // b.any
 2b0:	ldp	x21, x22, [sp, #32]
 2b4:	ldr	x23, [sp, #48]
 2b8:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x28>
 2bc:	ldrh	w1, [x21, #18]
 2c0:	cmp	w1, #0x1c
 2c4:	b.ne	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x7c>  // b.any
 2c8:	mov	x0, x21
 2cc:	mov	w1, #0x0                   	// #0
 2d0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 2d4:	mov	x2, x0
 2d8:	cbz	x0, 420 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x420>
 2dc:	mov	x22, x20
 2e0:	mov	w1, #0x1                   	// #1
 2e4:	mov	x0, x21
 2e8:	ldr	x3, [x22], #8
 2ec:	str	x2, [x3]
 2f0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 2f4:	mov	x1, x0
 2f8:	mov	x0, x22
 2fc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 300:	tst	w0, #0xff
 304:	b.ne	314 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x314>  // b.any
 308:	ldr	w0, [x19, #20]
 30c:	ubfx	x0, x0, #0, #28
 310:	b	7c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x7c>
 314:	ldr	w1, [x19, #20]
 318:	add	x0, x20, #0x18
 31c:	ubfx	x1, x1, #0, #28
 320:	cmp	w1, #0x1
 324:	b.ls	3f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f0>  // b.plast
 328:	mov	w2, w1
 32c:	mov	x1, #0x1                   	// #1
 330:	sub	x1, x1, x2
 334:	add	x1, x1, x1, lsl #1
 338:	ldr	x1, [x19, x1, lsl #3]
 33c:	cbz	x1, 34c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x34c>
 340:	ldrb	w2, [x1, #16]
 344:	cmp	w2, #0x10
 348:	b.hi	3c0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c0>  // b.pmore
 34c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 350:	tst	w0, #0xff
 354:	b.eq	308 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x308>  // b.none
 358:	mov	w0, #0x1                   	// #1
 35c:	ldp	x21, x22, [sp, #32]
 360:	b	22c <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x22c>
 364:	ldr	w1, [x19, #20]
 368:	add	x0, x20, #0x18
 36c:	ubfx	x1, x1, #0, #28
 370:	cbz	w1, 3f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f4>
 374:	mov	w2, w1
 378:	ubfiz	x1, x1, #2, #28
 37c:	sub	x1, x2, x1
 380:	ldr	x1, [x19, x1, lsl #3]
 384:	cbz	x1, 394 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x394>
 388:	ldrb	w2, [x1, #16]
 38c:	cmp	w2, #0x10
 390:	b.hi	3c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c4>  // b.pmore
 394:	ldp	x19, x20, [sp, #16]
 398:	ldp	x21, x22, [sp, #32]
 39c:	ldr	x23, [sp, #48]
 3a0:	ldp	x29, x30, [sp], #64
 3a4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3a8:	str	x23, [sp, #48]
 3ac:	ldrb	w0, [x21, #16]
 3b0:	brk	#0x3e8
 3b4:	stp	x21, x22, [sp, #32]
 3b8:	str	x23, [sp, #48]
 3bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3c0:	str	x23, [sp, #48]
 3c4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3c8:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3cc:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3d0:	add	x3, x3, #0x0
 3d4:	add	x1, x1, #0x0
 3d8:	add	x0, x0, #0x0
 3dc:	mov	w2, #0x134                 	// #308
 3e0:	bl	0 <__assert_fail>
 3e4:	stp	x21, x22, [sp, #32]
 3e8:	str	x23, [sp, #48]
 3ec:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3f0:	str	x23, [sp, #48]
 3f4:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3f8:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 3fc:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 400:	add	x3, x3, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x0, x0, #0x0
 40c:	mov	w2, #0x4fa                 	// #1274
 410:	bl	0 <__assert_fail>
 414:	stp	x21, x22, [sp, #32]
 418:	str	x23, [sp, #48]
 41c:	b	3f4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3f4>
 420:	str	x23, [sp, #48]
 424:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 428:	stp	x21, x22, [sp, #32]
 42c:	str	x23, [sp, #48]
 430:	b	3c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x3c4>

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 48 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x48>
   c:	ldrb	w1, [x0, #16]
  10:	sub	w1, w1, #0x25
  14:	and	w1, w1, #0xff
  18:	cmp	w1, #0x11
  1c:	b.ls	40 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>  // b.plast
  20:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x108                 	// #264
  3c:	bl	0 <__assert_fail>
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  50:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cbz	x1, 17c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x17c>
  10:	ldrb	w0, [x1, #16]
  14:	mov	x19, x1
  18:	cmp	w0, #0xd
  1c:	b.eq	48 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x48>  // b.none
  20:	ldr	x1, [x1]
  24:	ldrb	w1, [x1, #8]
  28:	cmp	w1, #0x10
  2c:	ccmp	w0, #0x10, #0x2, eq  // eq = none
  30:	b.ls	90 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x90>  // b.plast
  34:	mov	w20, #0x0                   	// #0
  38:	mov	w0, w20
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret
  48:	ldr	w20, [x1, #32]
  4c:	cmp	w20, #0x40
  50:	b.ls	74 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x74>  // b.plast
  54:	add	x0, x1, #0x18
  58:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  5c:	cmp	w0, w20
  60:	cset	w20, eq  // eq = none
  64:	mov	w0, w20
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	ldr	x0, [x1, #24]
  78:	cmp	x0, #0x0
  7c:	cset	w20, eq  // eq = none
  80:	mov	w0, w20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x0, x19
  94:	mov	w1, #0x0                   	// #0
  98:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  9c:	cbz	x0, ac <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xac>
  a0:	ldrb	w1, [x0, #16]
  a4:	cmp	w1, #0xd
  a8:	b.eq	14c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x14c>  // b.none
  ac:	ldr	x0, [x19]
  b0:	stp	x21, x22, [sp, #32]
  b4:	cbz	x0, 1c4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x1c4>
  b8:	ldrb	w1, [x0, #8]
  bc:	cmp	w1, #0x10
  c0:	b.ne	1a4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x1a4>  // b.any
  c4:	ldr	x0, [x0, #32]
  c8:	mov	w22, w0
  cc:	cbz	w0, 184 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x184>
  d0:	mov	w21, #0x0                   	// #0
  d4:	mov	w20, #0x0                   	// #0
  d8:	mov	w1, w21
  dc:	mov	x0, x19
  e0:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  e4:	cbz	x0, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xfc>
  e8:	ldrb	w1, [x0, #16]
  ec:	cmp	w1, #0x9
  f0:	b.eq	128 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x128>  // b.none
  f4:	cmp	w1, #0xd
  f8:	b.eq	108 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x108>  // b.none
  fc:	mov	w20, #0x0                   	// #0
 100:	ldp	x21, x22, [sp, #32]
 104:	b	38 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x38>
 108:	ldr	w20, [x0, #32]
 10c:	cmp	w20, #0x40
 110:	b.ls	13c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x13c>  // b.plast
 114:	add	x0, x0, #0x18
 118:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 11c:	cmp	w20, w0
 120:	cset	w20, eq  // eq = none
 124:	cbz	w20, fc <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xfc>
 128:	add	w21, w21, #0x1
 12c:	cmp	w21, w22
 130:	b.ne	d8 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xd8>  // b.any
 134:	ldp	x21, x22, [sp, #32]
 138:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x64>
 13c:	ldr	x0, [x0, #24]
 140:	cmp	x0, #0x0
 144:	cset	w20, eq  // eq = none
 148:	b	124 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x124>
 14c:	ldr	w19, [x0, #32]
 150:	cmp	w19, #0x40
 154:	b.ls	16c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x16c>  // b.plast
 158:	add	x0, x0, #0x18
 15c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
 160:	cmp	w19, w0
 164:	cset	w20, eq  // eq = none
 168:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x64>
 16c:	ldr	x0, [x0, #24]
 170:	cmp	x0, #0x0
 174:	cset	w20, eq  // eq = none
 178:	b	64 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x64>
 17c:	stp	x21, x22, [sp, #32]
 180:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 184:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 188:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 18c:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 190:	add	x3, x3, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x0, x0, #0x0
 19c:	mov	w2, #0xeb                  	// #235
 1a0:	bl	0 <__assert_fail>
 1a4:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 1a8:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 1ac:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
 1b0:	add	x3, x3, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x0, x0, #0x0
 1bc:	mov	w2, #0x108                 	// #264
 1c0:	bl	0 <__assert_fail>
 1c4:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #80
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
  44:	ldr	w3, [x1, #20]
  48:	ubfx	x3, x3, #0, #28
  4c:	cbz	w3, 268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x268>
  50:	mov	w5, w3
  54:	ubfiz	x0, x3, #2, #28
  58:	sub	x0, x5, x0
  5c:	ldr	x4, [x1, x0, lsl #3]
  60:	cbz	x4, 29c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x29c>
  64:	ldrb	w0, [x4, #16]
  68:	cmp	w0, #0x10
  6c:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x224>  // b.pmore
  70:	mov	x0, x19
  74:	cmp	w3, #0x1
  78:	ldr	x2, [x0], #8
  7c:	str	x4, [x2]
  80:	b.ls	268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x268>  // b.plast
  84:	mov	x2, #0x1                   	// #1
  88:	sub	x2, x2, x5
  8c:	add	x2, x2, x2, lsl #1
  90:	ldr	x1, [x1, x2, lsl #3]
  94:	cbz	x1, a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xa4>
  98:	ldrb	w2, [x1, #16]
  9c:	cmp	w2, #0x10
  a0:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x224>  // b.pmore
  a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  a8:	and	w19, w0, #0xff
  ac:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
  b0:	ldur	x0, [x1, #-48]
  b4:	cbz	x0, 28c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28c>
  b8:	ldr	x2, [x19]
  bc:	str	x0, [x2]
  c0:	ldur	x0, [x1, #-24]
  c4:	cbz	x0, 294 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x294>
  c8:	ldrb	w1, [x0, #16]
  cc:	cmp	w1, #0xd
  d0:	b.eq	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x100>  // b.none
  d4:	ldr	x2, [x0]
  d8:	ldrb	w2, [x2, #8]
  dc:	cmp	w2, #0x10
  e0:	ccmp	w1, #0x10, #0x2, eq  // eq = none
  e4:	b.hi	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.pmore
  e8:	mov	w1, #0x0                   	// #0
  ec:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  f0:	cbz	x0, 24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>
  f4:	ldrb	w1, [x0, #16]
  f8:	cmp	w1, #0xd
  fc:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x24>  // b.any
 100:	ldr	w1, [x19, #16]
 104:	add	x20, x0, #0x18
 108:	ldr	w0, [x0, #32]
 10c:	stp	x21, x22, [sp, #32]
 110:	add	x21, x19, #0x8
 114:	cmp	w0, w1
 118:	b.eq	1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1ec>  // b.none
 11c:	b.ls	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x174>  // b.plast
 120:	add	x19, sp, #0x40
 124:	mov	w1, w0
 128:	mov	x8, x19
 12c:	mov	x0, x21
 130:	bl	0 <_ZNK4llvm5APInt4zextEj>
 134:	ldr	w21, [sp, #72]
 138:	ldr	w0, [x20, #8]
 13c:	cmp	w0, w21
 140:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x248>  // b.any
 144:	cmp	w21, #0x40
 148:	b.ls	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1d8>  // b.plast
 14c:	mov	x1, x19
 150:	mov	x0, x20
 154:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 158:	and	w19, w0, #0xff
 15c:	cmp	w21, #0x40
 160:	b.ls	16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x16c>  // b.plast
 164:	ldr	x0, [sp, #64]
 168:	cbnz	x0, 1b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1b8>
 16c:	ldp	x21, x22, [sp, #32]
 170:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 174:	add	x22, sp, #0x30
 178:	mov	x0, x20
 17c:	mov	x8, x22
 180:	bl	0 <_ZNK4llvm5APInt4zextEj>
 184:	ldr	w1, [x21, #8]
 188:	ldr	w0, [sp, #56]
 18c:	cmp	w0, w1
 190:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x248>  // b.any
 194:	cmp	w0, #0x40
 198:	ldr	x20, [sp, #48]
 19c:	b.ls	1c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x1c4>  // b.plast
 1a0:	mov	x1, x21
 1a4:	mov	x0, x22
 1a8:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 1ac:	and	w19, w0, #0xff
 1b0:	cbz	x20, 16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x16c>
 1b4:	mov	x0, x20
 1b8:	bl	0 <_ZdaPv>
 1bc:	ldp	x21, x22, [sp, #32]
 1c0:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 1c4:	ldr	x0, [x19, #8]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	cmp	x20, x0
 1d0:	cset	w19, eq  // eq = none
 1d4:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 1d8:	ldr	x1, [x20]
 1dc:	ldr	x0, [sp, #64]
 1e0:	cmp	x1, x0
 1e4:	cset	w19, eq  // eq = none
 1e8:	b	15c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x15c>
 1ec:	cmp	w0, #0x40
 1f0:	b.ls	20c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x20c>  // b.plast
 1f4:	mov	x1, x21
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 200:	and	w19, w0, #0xff
 204:	ldp	x21, x22, [sp, #32]
 208:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 20c:	ldr	x1, [x20]
 210:	ldr	x0, [x19, #8]
 214:	ldp	x21, x22, [sp, #32]
 218:	cmp	x1, x0
 21c:	cset	w19, eq  // eq = none
 220:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x28>
 224:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 228:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 22c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 230:	add	x3, x3, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x0, x0, #0x0
 23c:	mov	w2, #0x134                 	// #308
 240:	stp	x21, x22, [sp, #32]
 244:	bl	0 <__assert_fail>
 248:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 24c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 250:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x47f                 	// #1151
 264:	bl	0 <__assert_fail>
 268:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 26c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 270:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x4fa                 	// #1274
 284:	stp	x21, x22, [sp, #32]
 288:	bl	0 <__assert_fail>
 28c:	stp	x21, x22, [sp, #32]
 290:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 294:	stp	x21, x22, [sp, #32]
 298:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
 29c:	stp	x21, x22, [sp, #32]
 2a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w2, [x1, #16]
  14:	cmp	w2, #0x32
  18:	b.eq	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.none
  1c:	cmp	w2, #0x5
  20:	b.eq	38 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x38>  // b.none
  24:	mov	w19, #0x0                   	// #0
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #80
  34:	ret
  38:	ldrh	w0, [x1, #18]
  3c:	cmp	w0, #0x1a
  40:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
  44:	ldr	w3, [x1, #20]
  48:	ubfx	x3, x3, #0, #28
  4c:	cbz	w3, 268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x268>
  50:	mov	w5, w3
  54:	ubfiz	x0, x3, #2, #28
  58:	sub	x0, x5, x0
  5c:	ldr	x4, [x1, x0, lsl #3]
  60:	cbz	x4, 29c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x29c>
  64:	ldrb	w0, [x4, #16]
  68:	cmp	w0, #0x10
  6c:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x224>  // b.pmore
  70:	mov	x0, x19
  74:	cmp	w3, #0x1
  78:	ldr	x2, [x0], #8
  7c:	str	x4, [x2]
  80:	b.ls	268 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x268>  // b.plast
  84:	mov	x2, #0x1                   	// #1
  88:	sub	x2, x2, x5
  8c:	add	x2, x2, x2, lsl #1
  90:	ldr	x1, [x1, x2, lsl #3]
  94:	cbz	x1, a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa4>
  98:	ldrb	w2, [x1, #16]
  9c:	cmp	w2, #0x10
  a0:	b.hi	224 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x224>  // b.pmore
  a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a8:	and	w19, w0, #0xff
  ac:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
  b0:	ldur	x0, [x1, #-48]
  b4:	cbz	x0, 28c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28c>
  b8:	ldr	x2, [x19]
  bc:	str	x0, [x2]
  c0:	ldur	x0, [x1, #-24]
  c4:	cbz	x0, 294 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x294>
  c8:	ldrb	w1, [x0, #16]
  cc:	cmp	w1, #0xd
  d0:	b.eq	100 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x100>  // b.none
  d4:	ldr	x2, [x0]
  d8:	ldrb	w2, [x2, #8]
  dc:	cmp	w2, #0x10
  e0:	ccmp	w1, #0x10, #0x2, eq  // eq = none
  e4:	b.hi	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.pmore
  e8:	mov	w1, #0x0                   	// #0
  ec:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  f0:	cbz	x0, 24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>
  f4:	ldrb	w1, [x0, #16]
  f8:	cmp	w1, #0xd
  fc:	b.ne	24 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x24>  // b.any
 100:	ldr	w1, [x19, #16]
 104:	add	x20, x0, #0x18
 108:	ldr	w0, [x0, #32]
 10c:	stp	x21, x22, [sp, #32]
 110:	add	x21, x19, #0x8
 114:	cmp	w0, w1
 118:	b.eq	1ec <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1ec>  // b.none
 11c:	b.ls	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x174>  // b.plast
 120:	add	x19, sp, #0x40
 124:	mov	w1, w0
 128:	mov	x8, x19
 12c:	mov	x0, x21
 130:	bl	0 <_ZNK4llvm5APInt4zextEj>
 134:	ldr	w21, [sp, #72]
 138:	ldr	w0, [x20, #8]
 13c:	cmp	w0, w21
 140:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x248>  // b.any
 144:	cmp	w21, #0x40
 148:	b.ls	1d8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1d8>  // b.plast
 14c:	mov	x1, x19
 150:	mov	x0, x20
 154:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 158:	and	w19, w0, #0xff
 15c:	cmp	w21, #0x40
 160:	b.ls	16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x16c>  // b.plast
 164:	ldr	x0, [sp, #64]
 168:	cbnz	x0, 1b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1b8>
 16c:	ldp	x21, x22, [sp, #32]
 170:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 174:	add	x22, sp, #0x30
 178:	mov	x0, x20
 17c:	mov	x8, x22
 180:	bl	0 <_ZNK4llvm5APInt4zextEj>
 184:	ldr	w1, [x21, #8]
 188:	ldr	w0, [sp, #56]
 18c:	cmp	w0, w1
 190:	b.ne	248 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x248>  // b.any
 194:	cmp	w0, #0x40
 198:	ldr	x20, [sp, #48]
 19c:	b.ls	1c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x1c4>  // b.plast
 1a0:	mov	x1, x21
 1a4:	mov	x0, x22
 1a8:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 1ac:	and	w19, w0, #0xff
 1b0:	cbz	x20, 16c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x16c>
 1b4:	mov	x0, x20
 1b8:	bl	0 <_ZdaPv>
 1bc:	ldp	x21, x22, [sp, #32]
 1c0:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1c4:	ldr	x0, [x19, #8]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	cmp	x20, x0
 1d0:	cset	w19, eq  // eq = none
 1d4:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 1d8:	ldr	x1, [x20]
 1dc:	ldr	x0, [sp, #64]
 1e0:	cmp	x1, x0
 1e4:	cset	w19, eq  // eq = none
 1e8:	b	15c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x15c>
 1ec:	cmp	w0, #0x40
 1f0:	b.ls	20c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x20c>  // b.plast
 1f4:	mov	x1, x21
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>
 200:	and	w19, w0, #0xff
 204:	ldp	x21, x22, [sp, #32]
 208:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 20c:	ldr	x1, [x20]
 210:	ldr	x0, [x19, #8]
 214:	ldp	x21, x22, [sp, #32]
 218:	cmp	x1, x0
 21c:	cset	w19, eq  // eq = none
 220:	b	28 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x28>
 224:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 228:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 22c:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 230:	add	x3, x3, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x0, x0, #0x0
 23c:	mov	w2, #0x134                 	// #308
 240:	stp	x21, x22, [sp, #32]
 244:	bl	0 <__assert_fail>
 248:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 24c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 250:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x47f                 	// #1151
 264:	bl	0 <__assert_fail>
 268:	adrp	x3, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 26c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 270:	adrp	x0, 0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x4fa                 	// #1274
 284:	stp	x21, x22, [sp, #32]
 288:	bl	0 <__assert_fail>
 28c:	stp	x21, x22, [sp, #32]
 290:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 294:	stp	x21, x22, [sp, #32]
 298:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
 29c:	stp	x21, x22, [sp, #32]
 2a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>

TruncInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
       8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x69                  	// #105
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>:
      28:	stp	x29, x30, [sp, #-16]!
      2c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      30:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      34:	mov	x29, sp
      38:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      3c:	add	x3, x3, #0x0
      40:	add	x1, x1, #0x0
      44:	add	x0, x0, #0x0
      48:	mov	w2, #0x69                  	// #105
      4c:	bl	0 <__assert_fail>

0000000000000050 <_ZN4llvm3isaINS_12ConstantExprEPKNS_5ValueEEEbRKT0_.isra.0.part.0>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      58:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      5c:	mov	x29, sp
      60:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      64:	add	x3, x3, #0x0
      68:	add	x1, x1, #0x0
      6c:	add	x0, x0, #0x0
      70:	mov	w2, #0x69                  	// #105
      74:	bl	0 <__assert_fail>

0000000000000078 <_ZN4llvm3isaINS_10VectorTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>:
      78:	stp	x29, x30, [sp, #-16]!
      7c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      80:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      84:	mov	x29, sp
      88:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      8c:	add	x3, x3, #0x0
      90:	add	x1, x1, #0x0
      94:	add	x0, x0, #0x0
      98:	mov	w2, #0x69                  	// #105
      9c:	bl	0 <__assert_fail>

00000000000000a0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>:
      a0:	stp	x29, x30, [sp, #-16]!
      a4:	mov	x29, sp
      a8:	cbz	x1, e8 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x48>
      ac:	mov	x2, x0
      b0:	mov	x0, x1
      b4:	ldrb	w1, [x1, #8]
      b8:	cmp	w1, #0x10
      bc:	b.eq	e8 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x48>  // b.none
      c0:	ldr	x1, [x2]
      c4:	cbz	x1, 108 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x68>
      c8:	ldrb	w2, [x1, #8]
      cc:	cmp	w2, #0x10
      d0:	b.eq	dc <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x3c>  // b.none
      d4:	ldp	x29, x30, [sp], #16
      d8:	ret
      dc:	ldp	x29, x30, [sp], #16
      e0:	ldr	w1, [x1, #32]
      e4:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
      e8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      ec:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      f0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
      f4:	add	x3, x3, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x0, x0, #0x0
     100:	mov	w2, #0x116                 	// #278
     104:	bl	0 <__assert_fail>
     108:	bl	78 <_ZN4llvm3isaINS_10VectorTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>
     10c:	nop

0000000000000110 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>:
     110:	stp	x29, x30, [sp, #-48]!
     114:	mov	x29, sp
     118:	stp	x19, x20, [sp, #16]
     11c:	mov	x20, x0
     120:	mov	x19, x1
     124:	ldrb	w0, [x0, #16]
     128:	sub	w1, w0, #0x18
     12c:	cmp	w1, #0x28
     130:	b.hi	154 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x44>  // b.pmore
     134:	mov	x0, #0x1                   	// #1
     138:	mov	x2, #0xa000                	// #40960
     13c:	movk	x2, #0x7002, lsl #16
     140:	lsl	x0, x0, x1
     144:	tst	x0, x2
     148:	b.ne	170 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x60>  // b.any
     14c:	tst	x0, #0x1c000000000
     150:	b.ne	210 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x100>  // b.any
     154:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     158:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     15c:	add	x1, x1, #0x0
     160:	add	x0, x0, #0x0
     164:	mov	w2, #0x3c                  	// #60
     168:	str	x21, [sp, #32]
     16c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     170:	ldr	w0, [x20, #20]
     174:	str	x21, [sp, #32]
     178:	ubfx	x0, x0, #0, #28
     17c:	cbz	w0, 28c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x17c>
     180:	ldrb	w1, [x20, #23]
     184:	tbz	w1, #6, 21c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x10c>
     188:	ldur	x0, [x20, #-8]
     18c:	ldp	w1, w2, [x19, #8]
     190:	ldr	x21, [x0]
     194:	cmp	w1, w2
     198:	b.cs	234 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x124>  // b.hs, b.nlast
     19c:	ldr	x0, [x19]
     1a0:	str	x21, [x0, w1, uxtw #3]
     1a4:	ldp	w1, w2, [x19, #8]
     1a8:	mov	w0, w1
     1ac:	add	x0, x0, #0x1
     1b0:	cmp	x0, w2, uxtw
     1b4:	b.hi	26c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x15c>  // b.pmore
     1b8:	ldr	w0, [x20, #20]
     1bc:	add	w1, w1, #0x1
     1c0:	str	w1, [x19, #8]
     1c4:	ubfx	x0, x0, #0, #28
     1c8:	cmp	w0, #0x1
     1cc:	b.ls	28c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x17c>  // b.plast
     1d0:	ldrb	w3, [x20, #23]
     1d4:	tbz	w3, #6, 228 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x118>
     1d8:	ldur	x0, [x20, #-8]
     1dc:	cmp	w2, w1
     1e0:	ldr	x20, [x0, #24]
     1e4:	b.ls	250 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x140>  // b.plast
     1e8:	ldr	x0, [x19]
     1ec:	str	x20, [x0, w1, uxtw #3]
     1f0:	ldp	w0, w2, [x19, #8]
     1f4:	mov	w1, w0
     1f8:	add	x1, x1, #0x1
     1fc:	cmp	x1, x2
     200:	b.hi	26c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x15c>  // b.pmore
     204:	add	w0, w0, #0x1
     208:	ldr	x21, [sp, #32]
     20c:	str	w0, [x19, #8]
     210:	ldp	x19, x20, [sp, #16]
     214:	ldp	x29, x30, [sp], #48
     218:	ret
     21c:	mov	w1, #0x18                  	// #24
     220:	umsubl	x0, w0, w1, x20
     224:	b	18c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x7c>
     228:	mov	w3, #0x18                  	// #24
     22c:	umsubl	x0, w0, w3, x20
     230:	b	1dc <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0xcc>
     234:	add	x1, x19, #0x10
     238:	mov	x0, x19
     23c:	mov	x3, #0x8                   	// #8
     240:	mov	x2, #0x0                   	// #0
     244:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     248:	ldr	w1, [x19, #8]
     24c:	b	19c <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x8c>
     250:	add	x1, x19, #0x10
     254:	mov	x0, x19
     258:	mov	x3, #0x8                   	// #8
     25c:	mov	x2, #0x0                   	// #0
     260:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     264:	ldr	w1, [x19, #8]
     268:	b	1e8 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0xd8>
     26c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     270:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     274:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     278:	add	x3, x3, #0x0
     27c:	add	x1, x1, #0x0
     280:	add	x0, x0, #0x0
     284:	mov	w2, #0x43                  	// #67
     288:	bl	0 <__assert_fail>
     28c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     290:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     294:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     298:	add	x3, x3, #0x0
     29c:	add	x1, x1, #0x0
     2a0:	add	x0, x0, #0x0
     2a4:	mov	w2, #0xaa                  	// #170
     2a8:	bl	0 <__assert_fail>
     2ac:	nop

00000000000002b0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>:
     2b0:	stp	x29, x30, [sp, #-32]!
     2b4:	mov	x29, sp
     2b8:	stp	x19, x20, [sp, #16]
     2bc:	mov	x19, x1
     2c0:	mov	x20, x0
     2c4:	mov	x1, x2
     2c8:	mov	x0, x19
     2cc:	bl	a0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     2d0:	cbz	x19, 3e0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x130>
     2d4:	mov	x1, x0
     2d8:	ldrb	w0, [x19, #16]
     2dc:	cmp	w0, #0x10
     2e0:	b.hi	310 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x60>  // b.pmore
     2e4:	mov	x0, x19
     2e8:	mov	w2, #0x0                   	// #0
     2ec:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     2f0:	mov	x19, x0
     2f4:	ldp	x2, x1, [x20]
     2f8:	bl	0 <_ZN4llvm20ConstantFoldConstantEPKNS_8ConstantERKNS_10DataLayoutEPKNS_17TargetLibraryInfoE>
     2fc:	cmp	x0, #0x0
     300:	csel	x0, x0, x19, ne  // ne = any
     304:	ldp	x19, x20, [sp, #16]
     308:	ldp	x29, x30, [sp], #32
     30c:	ret
     310:	cmp	w0, #0x17
     314:	b.ls	404 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x154>  // b.plast
     318:	ldr	w1, [x20, #104]
     31c:	ldr	x2, [x20, #88]
     320:	cbz	w1, 394 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xe4>
     324:	cmn	x19, #0x8
     328:	ccmn	x19, #0x10, #0x4, ne  // ne = any
     32c:	b.eq	3e4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x134>  // b.none
     330:	lsr	w0, w19, #9
     334:	sub	w5, w1, #0x1
     338:	eor	w0, w0, w19, lsr #4
     33c:	and	w0, w0, w5
     340:	lsl	w3, w0, #4
     344:	add	x4, x2, x3
     348:	ldr	x3, [x2, x3]
     34c:	cmp	x19, x3
     350:	b.ne	388 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xd8>  // b.any
     354:	ubfiz	x1, x1, #4, #32
     358:	add	x1, x2, x1
     35c:	cmp	x4, x1
     360:	b.eq	394 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xe4>  // b.none
     364:	ldr	w0, [x4, #8]
     368:	mov	w2, #0x18                  	// #24
     36c:	ldr	x1, [x20, #112]
     370:	umaddl	x0, w0, w2, x1
     374:	ldr	x0, [x0, #16]
     378:	cbz	x0, 394 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xe4>
     37c:	ldp	x19, x20, [sp, #16]
     380:	ldp	x29, x30, [sp], #32
     384:	ret
     388:	mov	w4, #0x1                   	// #1
     38c:	cmn	x3, #0x8
     390:	b.ne	3b4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x104>  // b.any
     394:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     398:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     39c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3a0:	add	x3, x3, #0x0
     3a4:	add	x1, x1, #0x0
     3a8:	add	x0, x0, #0x0
     3ac:	mov	w2, #0x128                 	// #296
     3b0:	bl	0 <__assert_fail>
     3b4:	add	w0, w0, w4
     3b8:	add	w6, w4, #0x1
     3bc:	and	w3, w5, w0
     3c0:	and	w0, w5, w0
     3c4:	lsl	x3, x3, #4
     3c8:	add	x4, x2, x3
     3cc:	ldr	x3, [x2, x3]
     3d0:	cmp	x19, x3
     3d4:	b.eq	354 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xa4>  // b.none
     3d8:	mov	w4, w6
     3dc:	b	38c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0xdc>
     3e0:	bl	28 <_ZN4llvm3isaINS_8ConstantEPNS_5ValueEEEbRKT0_.isra.0.part.0>
     3e4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3e8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3ec:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     3f0:	add	x3, x3, #0x0
     3f4:	add	x1, x1, #0x0
     3f8:	add	x0, x0, #0x0
     3fc:	mov	w2, #0x250                 	// #592
     400:	bl	0 <__assert_fail>
     404:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     408:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     40c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     410:	add	x3, x3, #0x0
     414:	add	x1, x1, #0x0
     418:	add	x0, x0, #0x0
     41c:	mov	w2, #0x108                 	// #264
     420:	bl	0 <__assert_fail>
     424:	nop

0000000000000428 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>:
     428:	stp	x29, x30, [sp, #-400]!
     42c:	mov	x29, sp
     430:	stp	x19, x20, [sp, #16]
     434:	stp	x21, x22, [sp, #32]
     438:	mov	x21, x0
     43c:	ldp	x20, x0, [x0, #112]
     440:	stp	x23, x24, [sp, #48]
     444:	mov	x23, x1
     448:	str	x0, [sp, #104]
     44c:	cmp	x20, x0
     450:	b.eq	630 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x208>  // b.none
     454:	add	x22, sp, #0x148
     458:	add	x24, sp, #0x100
     45c:	stp	x25, x26, [sp, #64]
     460:	mov	x26, #0xa000                	// #40960
     464:	add	x0, sp, #0xd0
     468:	movk	x26, #0x7002, lsl #16
     46c:	stp	x27, x28, [sp, #80]
     470:	str	x0, [sp, #120]
     474:	nop
     478:	ldr	x0, [x20, #16]
     47c:	ldr	x19, [x20]
     480:	cbnz	x0, dc8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9a0>
     484:	mov	x0, x19
     488:	bl	0 <_ZNK4llvm5Value10getContextEv>
     48c:	mov	w1, #0x200                 	// #512
     490:	strh	w1, [sp, #300]
     494:	stp	xzr, xzr, [sp, #304]
     498:	add	x2, x19, #0x18
     49c:	ldr	x1, [x19, #40]
     4a0:	str	xzr, [sp, #256]
     4a4:	stp	x1, x2, [sp, #264]
     4a8:	add	x1, x1, #0x28
     4ac:	stp	x0, xzr, [sp, #280]
     4b0:	cmp	x2, x1
     4b4:	str	wzr, [sp, #296]
     4b8:	strb	wzr, [sp, #302]
     4bc:	b.eq	df0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9c8>  // b.none
     4c0:	ldr	x1, [x19, #48]
     4c4:	str	x1, [sp, #328]
     4c8:	cbz	x1, 500 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xd8>
     4cc:	mov	x0, x22
     4d0:	mov	x2, #0x2                   	// #2
     4d4:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     4d8:	ldr	x1, [sp, #256]
     4dc:	cbz	x1, 4e8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xc0>
     4e0:	mov	x0, x24
     4e4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     4e8:	ldr	x1, [sp, #328]
     4ec:	str	x1, [sp, #256]
     4f0:	cbz	x1, 500 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xd8>
     4f4:	mov	x2, x24
     4f8:	mov	x0, x22
     4fc:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     500:	ldrb	w5, [x19, #16]
     504:	sub	w28, w5, #0x18
     508:	cmp	w28, #0x28
     50c:	b.hi	528 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x100>  // b.pmore
     510:	mov	x0, #0x1                   	// #1
     514:	lsl	x0, x0, x28
     518:	tst	x0, x26
     51c:	b.ne	540 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x118>  // b.any
     520:	tst	x0, #0x1c000000000
     524:	b.ne	7b0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x388>  // b.any
     528:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     52c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     530:	add	x1, x1, #0x0
     534:	add	x0, x0, #0x0
     538:	mov	w2, #0x163                 	// #355
     53c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     540:	ldr	w0, [x19, #20]
     544:	ubfx	x0, x0, #0, #28
     548:	cbz	w0, da8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x980>
     54c:	ldrb	w1, [x19, #23]
     550:	tbz	w1, #6, a28 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x600>
     554:	ldur	x0, [x19, #-8]
     558:	mov	x2, x23
     55c:	ldr	x1, [x0]
     560:	mov	x0, x21
     564:	bl	2b0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     568:	mov	x25, x0
     56c:	ldr	w1, [x19, #20]
     570:	ubfx	x1, x1, #0, #28
     574:	cmp	w1, #0x1
     578:	b.ls	da8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x980>  // b.plast
     57c:	ldrb	w0, [x19, #23]
     580:	tbz	w0, #6, a34 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x60c>
     584:	ldur	x1, [x19, #-8]
     588:	mov	x2, x23
     58c:	ldr	x1, [x1, #24]
     590:	mov	x0, x21
     594:	bl	2b0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     598:	stp	xzr, xzr, [sp, #160]
     59c:	mov	w1, #0x101                 	// #257
     5a0:	strh	w1, [sp, #176]
     5a4:	mov	x2, x0
     5a8:	cbz	x25, d74 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x94c>
     5ac:	ldrb	w0, [x25, #16]
     5b0:	cmp	w0, #0x10
     5b4:	b.hi	8e0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4b8>  // b.pmore
     5b8:	cbz	x2, d74 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x94c>
     5bc:	ldrb	w0, [x2, #16]
     5c0:	cmp	w0, #0x10
     5c4:	b.hi	8e4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4bc>  // b.pmore
     5c8:	mov	x1, x25
     5cc:	mov	w0, w28
     5d0:	mov	x4, #0x0                   	// #0
     5d4:	mov	w3, #0x0                   	// #0
     5d8:	str	x2, [sp, #112]
     5dc:	bl	0 <_ZN4llvm12ConstantExpr3getEjPNS_8ConstantES2_jPNS_4TypeE>
     5e0:	mov	x27, x0
     5e4:	ldr	x2, [sp, #112]
     5e8:	cbz	x0, 8e4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4bc>
     5ec:	str	x27, [x20, #16]
     5f0:	ldrb	w0, [x27, #16]
     5f4:	cmp	w0, #0x17
     5f8:	b.ls	608 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1e0>  // b.plast
     5fc:	mov	x1, x19
     600:	mov	x0, x27
     604:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     608:	ldr	x1, [sp, #256]
     60c:	cbz	x1, 618 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1f0>
     610:	mov	x0, x24
     614:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     618:	ldr	x0, [sp, #104]
     61c:	add	x20, x20, #0x18
     620:	cmp	x0, x20
     624:	b.ne	478 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x50>  // b.any
     628:	ldp	x25, x26, [sp, #64]
     62c:	ldp	x27, x28, [sp, #80]
     630:	mov	x2, x23
     634:	ldr	x1, [x21, #72]
     638:	mov	x0, x21
     63c:	ldur	x1, [x1, #-24]
     640:	bl	2b0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     644:	mov	x19, x0
     648:	ldr	x20, [x21, #72]
     64c:	ldr	x0, [x0]
     650:	ldr	x22, [x20]
     654:	cmp	x22, x0
     658:	b.eq	744 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x31c>  // b.none
     65c:	mov	x0, x20
     660:	bl	0 <_ZNK4llvm5Value10getContextEv>
     664:	mov	w1, #0x200                 	// #512
     668:	strh	w1, [sp, #372]
     66c:	stp	xzr, xzr, [sp, #376]
     670:	add	x2, x20, #0x18
     674:	ldr	x1, [x20, #40]
     678:	str	xzr, [sp, #328]
     67c:	stp	x1, x2, [sp, #336]
     680:	add	x1, x1, #0x28
     684:	stp	x0, xzr, [sp, #352]
     688:	cmp	x2, x1
     68c:	str	wzr, [sp, #368]
     690:	strb	wzr, [sp, #374]
     694:	b.eq	de8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9c0>  // b.none
     698:	ldr	x1, [x20, #48]
     69c:	str	x1, [sp, #256]
     6a0:	cbz	x1, 6dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2b4>
     6a4:	add	x20, sp, #0x100
     6a8:	mov	x2, #0x2                   	// #2
     6ac:	mov	x0, x20
     6b0:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     6b4:	ldr	x1, [sp, #328]
     6b8:	cbz	x1, 6c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x29c>
     6bc:	add	x0, sp, #0x148
     6c0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     6c4:	ldr	x1, [sp, #256]
     6c8:	str	x1, [sp, #328]
     6cc:	cbz	x1, 6dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2b4>
     6d0:	mov	x0, x20
     6d4:	add	x2, sp, #0x148
     6d8:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     6dc:	ldr	x0, [x19]
     6e0:	mov	w5, #0x101                 	// #257
     6e4:	stp	xzr, xzr, [sp, #184]
     6e8:	cmp	x22, x0
     6ec:	strh	w5, [sp, #200]
     6f0:	b.eq	718 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2f0>  // b.none
     6f4:	ldrb	w0, [x19, #16]
     6f8:	mov	x1, x22
     6fc:	cmp	w0, #0x10
     700:	mov	x0, x19
     704:	b.hi	c84 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x85c>  // b.pmore
     708:	mov	w2, #0x0                   	// #0
     70c:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     710:	mov	x19, x0
     714:	cbz	x19, e68 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa40>
     718:	ldrb	w0, [x19, #16]
     71c:	cmp	w0, #0x17
     720:	b.ls	730 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x308>  // b.plast
     724:	ldr	x1, [x21, #72]
     728:	mov	x0, x19
     72c:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     730:	ldr	x1, [sp, #328]
     734:	cbz	x1, 740 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x318>
     738:	add	x0, sp, #0x148
     73c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     740:	ldr	x20, [x21, #72]
     744:	mov	x1, x19
     748:	mov	x0, x20
     74c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     750:	ldr	x0, [x21, #72]
     754:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     758:	ldp	x22, x19, [x21, #112]
     75c:	cmp	x22, x19
     760:	b.ne	774 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x34c>  // b.any
     764:	b	79c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>
     768:	sub	x19, x19, #0x18
     76c:	cmp	x22, x19
     770:	b.eq	79c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x374>  // b.none
     774:	ldur	x20, [x19, #-24]
     778:	mov	x0, x20
     77c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     780:	ldr	x0, [x20, #8]
     784:	cbnz	x0, 768 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x340>
     788:	ldur	x0, [x19, #-24]
     78c:	sub	x19, x19, #0x18
     790:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     794:	cmp	x22, x19
     798:	b.ne	774 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x34c>  // b.any
     79c:	ldp	x19, x20, [sp, #16]
     7a0:	ldp	x21, x22, [sp, #32]
     7a4:	ldp	x23, x24, [sp, #48]
     7a8:	ldp	x29, x30, [sp], #400
     7ac:	ret
     7b0:	mov	x1, x23
     7b4:	mov	x0, x19
     7b8:	bl	a0 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     7bc:	mov	x1, x0
     7c0:	ldr	w2, [x19, #20]
     7c4:	ubfx	x2, x2, #0, #28
     7c8:	cbz	w2, da8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x980>
     7cc:	ldrb	w0, [x19, #23]
     7d0:	tbz	w0, #6, 9f4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5cc>
     7d4:	ldur	x2, [x19, #-8]
     7d8:	ldr	x0, [x2]
     7dc:	ldr	x2, [x0]
     7e0:	cmp	x1, x2
     7e4:	b.eq	a0c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5e4>  // b.none
     7e8:	mov	w6, #0x101                 	// #257
     7ec:	strh	w6, [sp, #152]
     7f0:	stp	xzr, xzr, [sp, #136]
     7f4:	cmp	w28, #0x28
     7f8:	ldrb	w3, [x0, #16]
     7fc:	cset	w2, eq  // eq = none
     800:	cmp	w3, #0x10
     804:	b.hi	ab8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x690>  // b.pmore
     808:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     80c:	mov	x27, x0
     810:	ldr	w6, [x21, #32]
     814:	ldr	x5, [x21, #24]
     818:	mov	w7, w6
     81c:	ubfiz	x0, x6, #3, #32
     820:	add	x2, x5, x0
     824:	cmp	xzr, x0, asr #5
     828:	asr	x1, x0, #3
     82c:	asr	x0, x0, #5
     830:	b.eq	c7c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x854>  // b.none
     834:	add	x0, x5, x0, lsl #5
     838:	mov	x3, x5
     83c:	b	870 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x448>
     840:	ldr	x1, [x3, #8]
     844:	cmp	x19, x1
     848:	b.eq	b7c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x754>  // b.none
     84c:	ldr	x1, [x3, #16]
     850:	cmp	x19, x1
     854:	b.eq	b84 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x75c>  // b.none
     858:	ldr	x1, [x3, #24]
     85c:	cmp	x19, x1
     860:	b.eq	b8c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x764>  // b.none
     864:	add	x3, x3, #0x20
     868:	cmp	x0, x3
     86c:	b.eq	b94 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x76c>  // b.none
     870:	ldr	x1, [x3]
     874:	cmp	x19, x1
     878:	b.ne	840 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x418>  // b.any
     87c:	cmp	x2, x3
     880:	b.eq	a78 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x650>  // b.none
     884:	cbz	x27, e10 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9e8>
     888:	ldrb	w0, [x27, #16]
     88c:	cmp	w0, #0x3e
     890:	b.eq	a40 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x618>  // b.none
     894:	cmp	x5, x3
     898:	b.hi	ec4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa9c>  // b.pmore
     89c:	cmp	x2, x3
     8a0:	b.ls	ea4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa7c>  // b.plast
     8a4:	add	x1, x3, #0x8
     8a8:	cmp	x2, x1
     8ac:	b.eq	8c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x49c>  // b.none
     8b0:	sub	x2, x2, x1
     8b4:	mov	x0, x3
     8b8:	bl	0 <memmove>
     8bc:	ldr	w6, [x21, #32]
     8c0:	mov	w7, w6
     8c4:	ldr	w0, [x21, #36]
     8c8:	sub	x7, x7, #0x1
     8cc:	cmp	x7, x0
     8d0:	b.hi	e84 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa5c>  // b.pmore
     8d4:	sub	w6, w6, #0x1
     8d8:	str	w6, [x21, #32]
     8dc:	b	5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     8e0:	cbz	x2, d74 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x94c>
     8e4:	mov	w5, #0x101                 	// #257
     8e8:	mov	x1, x25
     8ec:	mov	w0, w28
     8f0:	mov	x3, x22
     8f4:	mov	x4, #0x0                   	// #0
     8f8:	stp	xzr, xzr, [sp, #328]
     8fc:	strh	w5, [sp, #344]
     900:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
     904:	mov	x27, x0
     908:	cbz	x0, e74 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa4c>
     90c:	ldrb	w0, [x27, #16]
     910:	cmp	w0, #0x17
     914:	sub	w1, w0, #0x18
     918:	b.ls	c48 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x820>  // b.plast
     91c:	cmp	w1, #0x39
     920:	b.hi	948 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x520>  // b.pmore
     924:	mov	x0, #0x1                   	// #1
     928:	lsl	x0, x0, x1
     92c:	mov	x1, #0x5000                	// #20480
     930:	movk	x1, #0x125, lsl #16
     934:	movk	x1, #0x40, lsl #48
     938:	tst	x0, x1
     93c:	b.ne	bf4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7cc>  // b.any
     940:	tst	x0, #0x380000000000000
     944:	b.ne	bc4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x79c>  // b.any
     948:	ldr	x0, [sp, #264]
     94c:	cbz	x0, 998 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x570>
     950:	ldr	x25, [sp, #272]
     954:	add	x0, x0, #0x28
     958:	mov	x1, x27
     95c:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     960:	ldr	x1, [x27, #24]
     964:	add	x5, x27, #0x18
     968:	ldr	x3, [x25]
     96c:	and	x1, x1, #0x7
     970:	tst	x5, #0x7
     974:	and	x3, x3, #0xfffffffffffffff8
     978:	orr	x1, x1, x3
     97c:	stp	x1, x25, [x27, #24]
     980:	ldr	x0, [x25]
     984:	str	x5, [x3, #8]
     988:	b.ne	e48 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa20>  // b.any
     98c:	and	x0, x0, #0x7
     990:	orr	x0, x0, x5
     994:	str	x0, [x25]
     998:	add	x1, sp, #0xa0
     99c:	mov	x0, x27
     9a0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     9a4:	ldr	x1, [sp, #256]
     9a8:	cbz	x1, 5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     9ac:	mov	x0, x22
     9b0:	add	x25, x27, #0x30
     9b4:	mov	x2, #0x2                   	// #2
     9b8:	str	x1, [sp, #328]
     9bc:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     9c0:	cmp	x25, x22
     9c4:	b.eq	c34 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x80c>  // b.none
     9c8:	ldr	x1, [x27, #48]
     9cc:	cbz	x1, 9d8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x5b0>
     9d0:	mov	x0, x25
     9d4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     9d8:	ldr	x1, [sp, #328]
     9dc:	str	x1, [x25]
     9e0:	cbz	x1, 5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     9e4:	mov	x2, x25
     9e8:	mov	x0, x22
     9ec:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     9f0:	b	5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     9f4:	mov	w0, #0x18                  	// #24
     9f8:	umsubl	x2, w2, w0, x19
     9fc:	ldr	x0, [x2]
     a00:	ldr	x2, [x0]
     a04:	cmp	x1, x2
     a08:	b.ne	7e8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3c0>  // b.any
     a0c:	ldrb	w1, [x19, #16]
     a10:	cmp	w1, #0x3e
     a14:	b.eq	e20 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9f8>  // b.none
     a18:	ldr	x1, [sp, #256]
     a1c:	str	x0, [x20, #16]
     a20:	cbnz	x1, 610 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1e8>
     a24:	b	618 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1f0>
     a28:	mov	w1, #0x18                  	// #24
     a2c:	umsubl	x0, w0, w1, x19
     a30:	b	558 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x130>
     a34:	mov	w0, #0x18                  	// #24
     a38:	umsubl	x1, w1, w0, x19
     a3c:	b	588 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x160>
     a40:	str	x27, [x3]
     a44:	b	5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     a48:	ldr	x0, [x3]
     a4c:	cmp	x19, x0
     a50:	b.eq	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>  // b.none
     a54:	add	x3, x3, #0x8
     a58:	ldr	x0, [x3]
     a5c:	cmp	x19, x0
     a60:	b.eq	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>  // b.none
     a64:	ldr	x0, [x3, #8]
     a68:	add	x3, x3, #0x8
     a6c:	cmp	x19, x0
     a70:	b.eq	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>  // b.none
     a74:	nop
     a78:	cbz	x27, e10 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x9e8>
     a7c:	ldrb	w0, [x27, #16]
     a80:	cmp	w0, #0x3e
     a84:	b.ne	5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>  // b.any
     a88:	ldr	w0, [x21, #36]
     a8c:	cmp	w6, w0
     a90:	b.cs	d50 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x928>  // b.hs, b.nlast
     a94:	str	x27, [x2]
     a98:	ldp	w0, w2, [x21, #32]
     a9c:	mov	w1, w0
     aa0:	add	x1, x1, #0x1
     aa4:	cmp	x1, x2
     aa8:	b.hi	e84 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa5c>  // b.pmore
     aac:	add	w0, w0, #0x1
     ab0:	str	w0, [x21, #32]
     ab4:	b	5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     ab8:	ldr	x3, [sp, #120]
     abc:	mov	x4, #0x0                   	// #0
     ac0:	stp	xzr, xzr, [sp, #208]
     ac4:	strh	w6, [sp, #224]
     ac8:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
     acc:	ldr	x1, [sp, #264]
     ad0:	mov	x27, x0
     ad4:	cbz	x1, b20 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x6f8>
     ad8:	ldr	x25, [sp, #272]
     adc:	add	x0, x1, #0x28
     ae0:	mov	x1, x27
     ae4:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     ae8:	ldr	x0, [x27, #24]
     aec:	add	x3, x27, #0x18
     af0:	ldr	x1, [x25]
     af4:	and	x0, x0, #0x7
     af8:	tst	x3, #0x7
     afc:	and	x1, x1, #0xfffffffffffffff8
     b00:	orr	x0, x0, x1
     b04:	stp	x0, x25, [x27, #24]
     b08:	ldr	x0, [x25]
     b0c:	str	x3, [x1, #8]
     b10:	b.ne	e48 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa20>  // b.any
     b14:	and	x0, x0, #0x7
     b18:	orr	x0, x0, x3
     b1c:	str	x0, [x25]
     b20:	add	x1, sp, #0x88
     b24:	mov	x0, x27
     b28:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     b2c:	ldr	x1, [sp, #256]
     b30:	cbz	x1, 810 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3e8>
     b34:	mov	x0, x22
     b38:	add	x25, x27, #0x30
     b3c:	mov	x2, #0x2                   	// #2
     b40:	str	x1, [sp, #328]
     b44:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     b48:	cmp	x25, x22
     b4c:	b.eq	c68 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x840>  // b.none
     b50:	ldr	x1, [x27, #48]
     b54:	cbz	x1, b60 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x738>
     b58:	mov	x0, x25
     b5c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     b60:	ldr	x1, [sp, #328]
     b64:	str	x1, [x25]
     b68:	cbz	x1, 810 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3e8>
     b6c:	mov	x2, x25
     b70:	mov	x0, x22
     b74:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     b78:	b	810 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3e8>
     b7c:	add	x3, x3, #0x8
     b80:	b	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>
     b84:	add	x3, x3, #0x10
     b88:	b	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>
     b8c:	add	x3, x3, #0x18
     b90:	b	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>
     b94:	sub	x1, x2, x3
     b98:	asr	x1, x1, #3
     b9c:	cmp	x1, #0x2
     ba0:	b.eq	a58 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x630>  // b.none
     ba4:	cmp	x1, #0x3
     ba8:	b.eq	a48 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x620>  // b.none
     bac:	cmp	x1, #0x1
     bb0:	b.ne	a78 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x650>  // b.any
     bb4:	ldr	x0, [x3]
     bb8:	cmp	x19, x0
     bbc:	b.ne	a78 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x650>  // b.any
     bc0:	b	87c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x454>
     bc4:	ldr	x0, [x27]
     bc8:	cbz	x0, c24 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7fc>
     bcc:	nop
     bd0:	ldrb	w1, [x0, #8]
     bd4:	cmp	w1, #0xe
     bd8:	b.eq	c1c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7f4>  // b.none
     bdc:	cmp	w1, #0x10
     be0:	b.eq	c58 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x830>  // b.none
     be4:	sub	w1, w1, #0x1
     be8:	and	w1, w1, #0xff
     bec:	cmp	w1, #0x5
     bf0:	b.hi	948 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x520>  // b.pmore
     bf4:	ldr	x2, [sp, #288]
     bf8:	ldr	w25, [sp, #296]
     bfc:	cbz	x2, c0c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7e4>
     c00:	mov	x0, x27
     c04:	mov	w1, #0x3                   	// #3
     c08:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
     c0c:	mov	w1, w25
     c10:	mov	x0, x27
     c14:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
     c18:	b	948 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x520>
     c1c:	ldr	x0, [x0, #24]
     c20:	cbnz	x0, bd0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7a8>
     c24:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     c28:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     c2c:	add	x3, x3, #0x0
     c30:	b	d80 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x958>
     c34:	ldr	x1, [sp, #328]
     c38:	cbz	x1, 5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     c3c:	mov	x0, x22
     c40:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     c44:	b	5ec <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1c4>
     c48:	cmp	w0, #0x5
     c4c:	b.ne	948 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x520>  // b.any
     c50:	ldrh	w1, [x27, #18]
     c54:	b	91c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x4f4>
     c58:	ldr	x0, [x0, #16]
     c5c:	ldr	x0, [x0]
     c60:	ldrb	w1, [x0, #8]
     c64:	b	be4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7bc>
     c68:	ldr	x1, [sp, #328]
     c6c:	cbz	x1, 810 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3e8>
     c70:	mov	x0, x22
     c74:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     c78:	b	810 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3e8>
     c7c:	mov	x3, x5
     c80:	b	b9c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x774>
     c84:	add	x3, sp, #0xe8
     c88:	mov	x4, #0x0                   	// #0
     c8c:	mov	w2, #0x0                   	// #0
     c90:	stp	xzr, xzr, [sp, #232]
     c94:	strh	w5, [sp, #248]
     c98:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
     c9c:	ldr	x1, [sp, #336]
     ca0:	mov	x19, x0
     ca4:	cbz	x1, cf0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x8c8>
     ca8:	ldr	x20, [sp, #344]
     cac:	add	x0, x1, #0x28
     cb0:	mov	x1, x19
     cb4:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     cb8:	ldr	x0, [x19, #24]
     cbc:	add	x2, x19, #0x18
     cc0:	ldr	x1, [x20]
     cc4:	and	x0, x0, #0x7
     cc8:	tst	x2, #0x7
     ccc:	and	x1, x1, #0xfffffffffffffff8
     cd0:	orr	x0, x0, x1
     cd4:	stp	x0, x20, [x19, #24]
     cd8:	ldr	x0, [x20]
     cdc:	str	x2, [x1, #8]
     ce0:	b.ne	e40 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0xa18>  // b.any
     ce4:	and	x0, x0, #0x7
     ce8:	orr	x0, x0, x2
     cec:	str	x0, [x20]
     cf0:	add	x1, sp, #0xb8
     cf4:	mov	x0, x19
     cf8:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     cfc:	ldr	x1, [sp, #328]
     d00:	cbz	x1, 714 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2ec>
     d04:	add	x20, sp, #0x100
     d08:	add	x22, x19, #0x30
     d0c:	mov	x0, x20
     d10:	mov	x2, #0x2                   	// #2
     d14:	str	x1, [sp, #256]
     d18:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
     d1c:	cmp	x22, x20
     d20:	b.eq	d94 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x96c>  // b.none
     d24:	ldr	x1, [x19, #48]
     d28:	cbz	x1, d34 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x90c>
     d2c:	mov	x0, x22
     d30:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     d34:	ldr	x1, [sp, #256]
     d38:	str	x1, [x19, #48]
     d3c:	cbz	x1, 714 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2ec>
     d40:	mov	x2, x22
     d44:	mov	x0, x20
     d48:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
     d4c:	b	714 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2ec>
     d50:	add	x0, x21, #0x18
     d54:	mov	x2, #0x0                   	// #0
     d58:	add	x1, x21, #0x28
     d5c:	mov	x3, #0x8                   	// #8
     d60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     d64:	ldr	x0, [x21, #24]
     d68:	ldr	w2, [x21, #32]
     d6c:	add	x2, x0, x2, lsl #3
     d70:	b	a94 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x66c>
     d74:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     d78:	add	x3, x3, #0x0
     d7c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     d80:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     d84:	add	x1, x1, #0x0
     d88:	add	x0, x0, #0x0
     d8c:	mov	w2, #0x69                  	// #105
     d90:	bl	0 <__assert_fail>
     d94:	ldr	x1, [sp, #256]
     d98:	cbz	x1, 714 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2ec>
     d9c:	mov	x0, x22
     da0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     da4:	b	714 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2ec>
     da8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     dac:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     db0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     db4:	add	x3, x3, #0x0
     db8:	add	x1, x1, #0x0
     dbc:	add	x0, x0, #0x0
     dc0:	mov	w2, #0xaa                  	// #170
     dc4:	bl	0 <__assert_fail>
     dc8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     dcc:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     dd0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     dd4:	add	x3, x3, #0x0
     dd8:	add	x1, x1, #0x0
     ddc:	add	x0, x0, #0x0
     de0:	mov	w2, #0x131                 	// #305
     de4:	bl	0 <__assert_fail>
     de8:	stp	x25, x26, [sp, #64]
     dec:	stp	x27, x28, [sp, #80]
     df0:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     df4:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     df8:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     dfc:	add	x3, x3, #0x0
     e00:	add	x1, x1, #0x0
     e04:	add	x0, x0, #0x0
     e08:	mov	w2, #0x8e                  	// #142
     e0c:	bl	0 <__assert_fail>
     e10:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e14:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e18:	add	x3, x3, #0x0
     e1c:	b	d80 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x958>
     e20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e24:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e28:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e2c:	add	x3, x3, #0x0
     e30:	add	x1, x1, #0x0
     e34:	add	x0, x0, #0x0
     e38:	mov	w2, #0x13f                 	// #319
     e3c:	bl	0 <__assert_fail>
     e40:	stp	x25, x26, [sp, #64]
     e44:	stp	x27, x28, [sp, #80]
     e48:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e4c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e50:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e54:	add	x3, x3, #0x0
     e58:	add	x1, x1, #0x0
     e5c:	add	x0, x0, #0x0
     e60:	mov	w2, #0xb2                  	// #178
     e64:	bl	0 <__assert_fail>
     e68:	stp	x25, x26, [sp, #64]
     e6c:	stp	x27, x28, [sp, #80]
     e70:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e74:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e78:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e7c:	add	x3, x3, #0x0
     e80:	b	d80 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x958>
     e84:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e88:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e8c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     e90:	add	x3, x3, #0x0
     e94:	add	x1, x1, #0x0
     e98:	add	x0, x0, #0x0
     e9c:	mov	w2, #0x43                  	// #67
     ea0:	bl	0 <__assert_fail>
     ea4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ea8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     eac:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     eb0:	add	x3, x3, #0x0
     eb4:	add	x1, x1, #0x0
     eb8:	add	x0, x0, #0x0
     ebc:	mov	w2, #0x1b7                 	// #439
     ec0:	bl	0 <__assert_fail>
     ec4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ec8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ecc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
     ed0:	add	x3, x3, #0x0
     ed4:	add	x1, x1, #0x0
     ed8:	add	x0, x0, #0x0
     edc:	mov	w2, #0x1b6                 	// #438
     ee0:	bl	0 <__assert_fail>
     ee4:	nop

0000000000000ee8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>:
     ee8:	stp	x29, x30, [sp, #-304]!
     eec:	mov	x1, #0x800000000           	// #34359738368
     ef0:	mov	x29, sp
     ef4:	stp	x25, x26, [sp, #64]
     ef8:	mov	x25, x0
     efc:	stp	x19, x20, [sp, #16]
     f00:	add	x20, sp, #0x90
     f04:	add	x0, x20, #0x10
     f08:	stp	x0, x1, [sp, #144]
     f0c:	ldr	w2, [x25, #96]
     f10:	ldr	x0, [x25, #80]
     f14:	stp	x21, x22, [sp, #32]
     f18:	add	x21, sp, #0xe0
     f1c:	add	x3, x21, #0x10
     f20:	add	x0, x0, #0x1
     f24:	str	x0, [x25, #80]
     f28:	stp	x3, x1, [sp, #224]
     f2c:	cbnz	w2, 1080 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x198>
     f30:	ldr	w0, [x25, #100]
     f34:	cbz	w0, 10c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1e0>
     f38:	ldr	w1, [x25, #104]
     f3c:	ldr	x0, [x25, #88]
     f40:	cmp	w1, #0x40
     f44:	ubfiz	x1, x1, #4, #32
     f48:	b.ls	10a4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1bc>  // b.plast
     f4c:	bl	0 <_ZdlPvm>
     f50:	stp	xzr, xzr, [x25, #88]
     f54:	str	wzr, [x25, #104]
     f58:	ldp	x1, x3, [x25, #112]
     f5c:	ldr	x2, [x25, #72]
     f60:	ldp	w0, w4, [sp, #152]
     f64:	cmp	x3, x1
     f68:	ldur	x19, [x2, #-24]
     f6c:	b.eq	f74 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8c>  // b.none
     f70:	str	x1, [x25, #120]
     f74:	cmp	w0, w4
     f78:	b.cs	12f4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x40c>  // b.hs, b.nlast
     f7c:	ubfiz	x0, x0, #3, #32
     f80:	ldr	x1, [sp, #144]
     f84:	str	x19, [x1, x0]
     f88:	ldp	w1, w2, [sp, #152]
     f8c:	mov	w0, w1
     f90:	add	x0, x0, #0x1
     f94:	cmp	x0, x2
     f98:	b.hi	1914 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa2c>  // b.pmore
     f9c:	add	w1, w1, #0x1
     fa0:	str	w1, [sp, #152]
     fa4:	cbz	w1, 1078 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x190>
     fa8:	add	x22, sp, #0x70
     fac:	mov	x26, #0xa000                	// #40960
     fb0:	stp	x23, x24, [sp, #48]
     fb4:	add	x23, x22, #0x10
     fb8:	add	x24, x20, #0x10
     fbc:	movk	x26, #0x7002, lsl #16
     fc0:	mov	x0, #0xfffffffffffffff8    	// #-8
     fc4:	mov	w2, w1
     fc8:	ldr	x4, [sp, #144]
     fcc:	add	x3, x0, w1, uxtw #3
     fd0:	ldr	x19, [x4, x3]
     fd4:	cbz	x19, 1864 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x97c>
     fd8:	ldrb	w3, [x19, #16]
     fdc:	cmp	w3, #0x10
     fe0:	b.ls	1058 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x170>  // b.plast
     fe4:	cmp	w3, #0x17
     fe8:	b.ls	1150 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x268>  // b.plast
     fec:	ldr	w3, [sp, #232]
     ff0:	cbz	w3, 100c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x124>
     ff4:	ldr	x4, [sp, #224]
     ff8:	add	x0, x0, w3, uxtw #3
     ffc:	mov	w5, w3
    1000:	ldr	x0, [x4, x0]
    1004:	cmp	x19, x0
    1008:	b.eq	1270 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x388>  // b.none
    100c:	ldr	w4, [x25, #104]
    1010:	ldr	x5, [x25, #88]
    1014:	cbz	w4, 10f8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x210>
    1018:	cmn	x19, #0x10
    101c:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    1020:	b.eq	1840 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x958>  // b.none
    1024:	lsr	w0, w19, #9
    1028:	sub	w7, w4, #0x1
    102c:	eor	w0, w0, w19, lsr #4
    1030:	and	w0, w0, w7
    1034:	lsl	w6, w0, #4
    1038:	add	x8, x5, x6
    103c:	ldr	x6, [x5, x6]
    1040:	cmp	x19, x6
    1044:	b.ne	10ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x204>  // b.any
    1048:	ubfiz	x4, x4, #4, #32
    104c:	add	x4, x5, x4
    1050:	cmp	x8, x4
    1054:	b.eq	10f8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x210>  // b.none
    1058:	ldr	w0, [sp, #156]
    105c:	sub	x2, x2, #0x1
    1060:	cmp	x2, x0
    1064:	b.hi	17e8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x900>  // b.pmore
    1068:	sub	w1, w1, #0x1
    106c:	str	w1, [sp, #152]
    1070:	cbnz	w1, fc0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd8>
    1074:	ldp	x23, x24, [sp, #48]
    1078:	mov	w19, #0x1                   	// #1
    107c:	b	1158 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x270>
    1080:	lsl	w0, w2, #2
    1084:	ldr	w1, [x25, #104]
    1088:	cmp	w0, #0x40
    108c:	mov	w3, #0x40                  	// #64
    1090:	csel	w0, w0, w3, cs  // cs = hs, nlast
    1094:	cmp	w0, w1
    1098:	b.cc	1314 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x42c>  // b.lo, b.ul, b.last
    109c:	ldr	x0, [x25, #88]
    10a0:	ubfiz	x1, x1, #4, #32
    10a4:	add	x1, x0, x1
    10a8:	mov	x2, #0xfffffffffffffff8    	// #-8
    10ac:	cmp	x1, x0
    10b0:	b.eq	10c4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1dc>  // b.none
    10b4:	nop
    10b8:	str	x2, [x0], #16
    10bc:	cmp	x1, x0
    10c0:	b.ne	10b8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1d0>  // b.any
    10c4:	str	xzr, [x25, #96]
    10c8:	ldp	x1, x2, [x25, #112]
    10cc:	mov	w4, #0x8                   	// #8
    10d0:	ldr	x3, [x25, #72]
    10d4:	mov	w0, #0x0                   	// #0
    10d8:	cmp	x2, x1
    10dc:	ldur	x19, [x3, #-24]
    10e0:	b.ne	f70 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x88>  // b.any
    10e4:	mov	x0, #0x0                   	// #0
    10e8:	b	f80 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x98>
    10ec:	mov	w8, #0x1                   	// #1
    10f0:	cmn	x6, #0x8
    10f4:	b.ne	13c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4e0>  // b.any
    10f8:	ldr	w0, [sp, #236]
    10fc:	cmp	w3, w0
    1100:	b.cs	1254 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x36c>  // b.hs, b.nlast
    1104:	ldr	x0, [sp, #224]
    1108:	str	x19, [x0, w3, uxtw #3]
    110c:	ldp	w0, w2, [sp, #232]
    1110:	mov	w1, w0
    1114:	add	x1, x1, #0x1
    1118:	cmp	x1, x2
    111c:	b.hi	17e8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x900>  // b.pmore
    1120:	ldrb	w1, [x19, #16]
    1124:	add	w0, w0, #0x1
    1128:	str	w0, [sp, #232]
    112c:	sub	w0, w1, #0x18
    1130:	cmp	w0, #0x28
    1134:	b.hi	1150 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x268>  // b.pmore
    1138:	mov	x1, #0x1                   	// #1
    113c:	lsl	x1, x1, x0
    1140:	tst	x1, x26
    1144:	b.ne	11a4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2bc>  // b.any
    1148:	tst	x1, #0x1c000000000
    114c:	b.ne	1198 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2b0>  // b.any
    1150:	ldp	x23, x24, [sp, #48]
    1154:	mov	w19, #0x0                   	// #0
    1158:	ldr	x0, [sp, #224]
    115c:	add	x21, x21, #0x10
    1160:	cmp	x0, x21
    1164:	b.eq	116c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x284>  // b.none
    1168:	bl	0 <free>
    116c:	ldr	x0, [sp, #144]
    1170:	add	x20, x20, #0x10
    1174:	cmp	x0, x20
    1178:	b.eq	1180 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x298>  // b.none
    117c:	bl	0 <free>
    1180:	mov	w0, w19
    1184:	ldp	x19, x20, [sp, #16]
    1188:	ldp	x21, x22, [sp, #32]
    118c:	ldp	x25, x26, [sp, #64]
    1190:	ldp	x29, x30, [sp], #304
    1194:	ret
    1198:	ldr	w1, [sp, #152]
    119c:	cbnz	w1, fc0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd8>
    11a0:	b	1074 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x18c>
    11a4:	mov	x2, #0x200000000           	// #8589934592
    11a8:	mov	x0, x19
    11ac:	mov	x1, x22
    11b0:	stp	x27, x28, [sp, #80]
    11b4:	stp	x23, x2, [sp, #112]
    11b8:	bl	110 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    11bc:	ldr	w28, [sp, #120]
    11c0:	ldr	x19, [sp, #112]
    11c4:	add	x28, x19, x28, lsl #3
    11c8:	cmp	x19, x28
    11cc:	b.eq	1218 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x330>  // b.none
    11d0:	ldp	w1, w0, [sp, #152]
    11d4:	nop
    11d8:	cmp	w1, w0
    11dc:	ldr	x27, [x19]
    11e0:	b.cs	1238 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x350>  // b.hs, b.nlast
    11e4:	ldr	x0, [sp, #144]
    11e8:	str	x27, [x0, w1, uxtw #3]
    11ec:	ldp	w1, w0, [sp, #152]
    11f0:	mov	w2, w1
    11f4:	add	x2, x2, #0x1
    11f8:	cmp	x2, w0, uxtw
    11fc:	b.hi	17ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x904>  // b.pmore
    1200:	add	w1, w1, #0x1
    1204:	str	w1, [sp, #152]
    1208:	add	x19, x19, #0x8
    120c:	cmp	x28, x19
    1210:	b.ne	11d8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2f0>  // b.any
    1214:	ldr	x28, [sp, #112]
    1218:	cmp	x28, x23
    121c:	b.eq	1228 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x340>  // b.none
    1220:	mov	x0, x28
    1224:	bl	0 <free>
    1228:	ldr	w1, [sp, #152]
    122c:	ldp	x27, x28, [sp, #80]
    1230:	cbnz	w1, fc0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd8>
    1234:	b	1074 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x18c>
    1238:	mov	x1, x24
    123c:	mov	x0, x20
    1240:	mov	x3, #0x8                   	// #8
    1244:	mov	x2, #0x0                   	// #0
    1248:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    124c:	ldr	w1, [sp, #152]
    1250:	b	11e4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x2fc>
    1254:	mov	x3, #0x8                   	// #8
    1258:	add	x1, x21, #0x10
    125c:	mov	x0, x21
    1260:	mov	x2, #0x0                   	// #0
    1264:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1268:	ldr	w3, [sp, #232]
    126c:	b	1104 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x21c>
    1270:	ldr	w0, [sp, #156]
    1274:	sub	x2, x2, #0x1
    1278:	stp	x27, x28, [sp, #80]
    127c:	cmp	x2, x0
    1280:	b.hi	17ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x904>  // b.pmore
    1284:	ldr	w0, [sp, #236]
    1288:	sub	w1, w1, #0x1
    128c:	str	w1, [sp, #152]
    1290:	sub	x5, x5, #0x1
    1294:	cmp	x5, x0
    1298:	b.hi	17ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x904>  // b.pmore
    129c:	ldr	w28, [x25, #104]
    12a0:	sub	w3, w3, #0x1
    12a4:	stp	x19, xzr, [sp, #112]
    12a8:	str	xzr, [sp, #128]
    12ac:	str	w3, [sp, #232]
    12b0:	ldr	x3, [x25, #88]
    12b4:	cbz	w28, 15dc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6f4>
    12b8:	cmn	x19, #0x10
    12bc:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    12c0:	b.eq	1a20 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb38>  // b.none
    12c4:	lsr	w27, w19, #9
    12c8:	sub	w4, w28, #0x1
    12cc:	eor	w27, w27, w19, lsr #4
    12d0:	and	w6, w27, w4
    12d4:	lsl	w0, w6, #4
    12d8:	add	x7, x3, x0
    12dc:	ldr	x5, [x3, x0]
    12e0:	cmp	x19, x5
    12e4:	b.ne	13f4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x50c>  // b.any
    12e8:	ldp	x27, x28, [sp, #80]
    12ec:	cbnz	w1, fc0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd8>
    12f0:	b	1074 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x18c>
    12f4:	mov	x0, x20
    12f8:	add	x1, x20, #0x10
    12fc:	mov	x3, #0x8                   	// #8
    1300:	mov	x2, #0x0                   	// #0
    1304:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1308:	ldr	w0, [sp, #152]
    130c:	lsl	x0, x0, #3
    1310:	b	f80 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x98>
    1314:	subs	w2, w2, #0x1
    1318:	b.eq	15d0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6e8>  // b.none
    131c:	clz	w2, w2
    1320:	mov	w0, #0x21                  	// #33
    1324:	sub	w2, w0, w2
    1328:	mov	w0, #0x1                   	// #1
    132c:	lsl	w0, w0, w2
    1330:	cmp	w0, #0x40
    1334:	csel	w0, w0, w3, ge  // ge = tcont
    1338:	cmp	w0, w1
    133c:	b.eq	15a0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6b8>  // b.none
    1340:	lsl	w0, w0, #2
    1344:	mov	w2, #0xaaab                	// #43691
    1348:	movk	w2, #0xaaaa, lsl #16
    134c:	umull	x0, w0, w2
    1350:	lsr	x0, x0, #33
    1354:	add	w0, w0, #0x1
    1358:	orr	x0, x0, x0, lsr #1
    135c:	orr	x0, x0, x0, lsr #2
    1360:	orr	x0, x0, x0, lsr #4
    1364:	orr	x0, x0, x0, lsr #8
    1368:	orr	x0, x0, x0, lsr #16
    136c:	add	x19, x0, #0x1
    1370:	mov	w22, w19
    1374:	lsl	x19, x19, #4
    1378:	ldr	x0, [x25, #88]
    137c:	ubfiz	x1, x1, #4, #32
    1380:	bl	0 <_ZdlPvm>
    1384:	str	w22, [x25, #104]
    1388:	mov	x0, x19
    138c:	bl	0 <_Znwm>
    1390:	stp	x0, xzr, [x25, #88]
    1394:	ldr	w1, [x25, #104]
    1398:	sub	w2, w1, #0x1
    139c:	tst	w2, w1
    13a0:	b.ne	19c4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xadc>  // b.any
    13a4:	ubfiz	x1, x1, #4, #32
    13a8:	add	x1, x0, x1
    13ac:	cmp	x0, x1
    13b0:	b.eq	f58 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x70>  // b.none
    13b4:	mov	x2, #0xfffffffffffffff8    	// #-8
    13b8:	str	x2, [x0], #16
    13bc:	cmp	x1, x0
    13c0:	b.ne	13b8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x4d0>  // b.any
    13c4:	b	f58 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x70>
    13c8:	add	w0, w8, w0
    13cc:	add	w9, w8, #0x1
    13d0:	and	w6, w7, w0
    13d4:	and	w0, w7, w0
    13d8:	lsl	x6, x6, #4
    13dc:	add	x8, x5, x6
    13e0:	ldr	x6, [x5, x6]
    13e4:	cmp	x19, x6
    13e8:	b.eq	1048 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x160>  // b.none
    13ec:	mov	w8, w9
    13f0:	b	10f0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x208>
    13f4:	mov	w0, #0x1                   	// #1
    13f8:	mov	x2, #0x0                   	// #0
    13fc:	cmn	x5, #0x8
    1400:	b.ne	1888 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9a0>  // b.any
    1404:	ldr	x6, [x25, #80]
    1408:	lsl	w0, w28, #1
    140c:	ldr	w1, [x25, #96]
    1410:	cmp	x2, #0x0
    1414:	add	x6, x6, #0x1
    1418:	str	x6, [x25, #80]
    141c:	add	w1, w1, #0x1
    1420:	add	w6, w0, w28
    1424:	csel	x2, x2, x7, ne  // ne = any
    1428:	cmp	w6, w1, lsl #2
    142c:	b.ls	15ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x704>  // b.plast
    1430:	ldr	w0, [x25, #100]
    1434:	sub	w0, w28, w0
    1438:	sub	w0, w0, w1
    143c:	cmp	w0, w28, lsr #3
    1440:	b.ls	14ac <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x5c4>  // b.plast
    1444:	ldr	x0, [x2]
    1448:	str	w1, [x25, #96]
    144c:	cmn	x0, #0x8
    1450:	b.eq	1460 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x578>  // b.none
    1454:	ldr	w0, [x25, #100]
    1458:	sub	w0, w0, #0x1
    145c:	str	w0, [x25, #100]
    1460:	str	x19, [x2]
    1464:	mov	x1, x22
    1468:	str	wzr, [x2, #8]
    146c:	add	x0, x25, #0x70
    1470:	str	x2, [sp, #96]
    1474:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1478:	ldp	x3, x0, [x25, #112]
    147c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1480:	movk	x1, #0xaaab
    1484:	ldr	x2, [sp, #96]
    1488:	ldp	x27, x28, [sp, #80]
    148c:	sub	x0, x0, x3
    1490:	asr	x0, x0, #3
    1494:	mul	x0, x0, x1
    1498:	sub	w0, w0, #0x1
    149c:	str	w0, [x2, #8]
    14a0:	ldr	w1, [sp, #152]
    14a4:	cbnz	w1, fc0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xd8>
    14a8:	b	1074 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x18c>
    14ac:	mov	w1, w4
    14b0:	lsr	w0, w4, #1
    14b4:	orr	x0, x0, x1
    14b8:	mov	w1, #0x40                  	// #64
    14bc:	stp	x3, x5, [sp, #96]
    14c0:	orr	x0, x0, x0, lsr #2
    14c4:	orr	x0, x0, x0, lsr #4
    14c8:	orr	x0, x0, x0, lsr #8
    14cc:	orr	x0, x0, x0, lsr #16
    14d0:	add	x0, x0, #0x1
    14d4:	cmp	w0, w1
    14d8:	csel	w0, w0, w1, cs  // cs = hs, nlast
    14dc:	str	w0, [x25, #104]
    14e0:	ubfiz	x0, x0, #4, #32
    14e4:	bl	0 <_Znwm>
    14e8:	ldp	x3, x5, [sp, #96]
    14ec:	mov	x6, x0
    14f0:	ldr	w2, [x25, #104]
    14f4:	stp	x6, xzr, [x25, #88]
    14f8:	sub	w0, w2, #0x1
    14fc:	and	w0, w0, w2
    1500:	cbz	x3, 18c0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9d8>
    1504:	ubfiz	x1, x28, #4, #32
    1508:	add	x7, x3, x1
    150c:	cbnz	w0, 19cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xae4>
    1510:	ubfiz	x0, x2, #4, #32
    1514:	mov	x2, x6
    1518:	add	x0, x6, x0
    151c:	cmp	x6, x0
    1520:	b.eq	1530 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x648>  // b.none
    1524:	str	x5, [x2], #16
    1528:	cmp	x0, x2
    152c:	b.ne	1524 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x63c>  // b.any
    1530:	mov	x0, x3
    1534:	b	1544 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x65c>
    1538:	add	x0, x0, #0x10
    153c:	cmp	x7, x0
    1540:	b.eq	1770 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x888>  // b.none
    1544:	ldr	x2, [x0]
    1548:	cmn	x2, #0x8
    154c:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1550:	b.eq	1538 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x650>  // b.none
    1554:	ldr	w5, [x25, #104]
    1558:	cbz	w5, 1a30 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb48>
    155c:	lsr	w4, w2, #9
    1560:	sub	w5, w5, #0x1
    1564:	eor	w4, w4, w2, lsr #4
    1568:	and	w4, w4, w5
    156c:	lsl	w8, w4, #4
    1570:	add	x9, x6, x8
    1574:	ldr	x8, [x6, x8]
    1578:	cmp	x2, x8
    157c:	b.ne	180c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x924>  // b.any
    1580:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1584:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1588:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    158c:	add	x3, x3, #0x0
    1590:	add	x1, x1, #0x0
    1594:	add	x0, x0, #0x0
    1598:	mov	w2, #0x17a                 	// #378
    159c:	bl	0 <__assert_fail>
    15a0:	str	xzr, [x25, #96]
    15a4:	sub	w1, w0, #0x1
    15a8:	tst	w1, w0
    15ac:	b.ne	19c4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xadc>  // b.any
    15b0:	ldr	x1, [x25, #88]
    15b4:	ubfiz	x0, x0, #4, #32
    15b8:	mov	x2, #0xfffffffffffffff8    	// #-8
    15bc:	add	x0, x1, x0
    15c0:	str	x2, [x1], #16
    15c4:	cmp	x0, x1
    15c8:	b.ne	15c0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x6d8>  // b.any
    15cc:	b	10c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1e0>
    15d0:	mov	x19, #0x800                 	// #2048
    15d4:	mov	w22, #0x80                  	// #128
    15d8:	b	1378 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x490>
    15dc:	ldr	x1, [x25, #80]
    15e0:	mov	w0, #0x0                   	// #0
    15e4:	add	x1, x1, #0x1
    15e8:	str	x1, [x25, #80]
    15ec:	sub	w0, w0, #0x1
    15f0:	mov	w1, #0x40                  	// #64
    15f4:	str	x3, [sp, #96]
    15f8:	orr	x0, x0, x0, lsr #1
    15fc:	orr	x0, x0, x0, lsr #2
    1600:	orr	x0, x0, x0, lsr #4
    1604:	orr	x0, x0, x0, lsr #8
    1608:	orr	x0, x0, x0, lsr #16
    160c:	add	x0, x0, #0x1
    1610:	cmp	w0, w1
    1614:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1618:	str	w0, [x25, #104]
    161c:	ubfiz	x0, x0, #4, #32
    1620:	bl	0 <_Znwm>
    1624:	ldr	x3, [sp, #96]
    1628:	mov	x6, x0
    162c:	ldr	w2, [x25, #104]
    1630:	stp	x6, xzr, [x25, #88]
    1634:	sub	w0, w2, #0x1
    1638:	and	w0, w0, w2
    163c:	cbz	x3, 18e8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa00>
    1640:	ubfiz	x1, x28, #4, #32
    1644:	add	x7, x3, x1
    1648:	cbnz	w0, 19cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xae4>
    164c:	ubfiz	x0, x2, #4, #32
    1650:	mov	x4, #0xfffffffffffffff8    	// #-8
    1654:	add	x0, x6, x0
    1658:	mov	x2, x6
    165c:	cmp	x6, x0
    1660:	b.eq	1670 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x788>  // b.none
    1664:	str	x4, [x2], #16
    1668:	cmp	x0, x2
    166c:	b.ne	1664 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x77c>  // b.any
    1670:	cmp	x3, x7
    1674:	mov	x0, x3
    1678:	b.ne	168c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7a4>  // b.any
    167c:	b	16fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x814>
    1680:	add	x0, x0, #0x10
    1684:	cmp	x7, x0
    1688:	b.eq	16fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x814>  // b.none
    168c:	ldr	x2, [x0]
    1690:	cmn	x2, #0x8
    1694:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1698:	b.eq	1680 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x798>  // b.none
    169c:	ldr	w5, [x25, #104]
    16a0:	cbz	w5, 1a30 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb48>
    16a4:	lsr	w4, w2, #9
    16a8:	sub	w5, w5, #0x1
    16ac:	eor	w4, w4, w2, lsr #4
    16b0:	and	w4, w4, w5
    16b4:	lsl	w8, w4, #4
    16b8:	add	x10, x6, x8
    16bc:	ldr	x8, [x6, x8]
    16c0:	cmp	x8, x2
    16c4:	b.eq	1580 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x698>  // b.none
    16c8:	mov	w11, #0x1                   	// #1
    16cc:	mov	x9, #0x0                   	// #0
    16d0:	cmn	x8, #0x8
    16d4:	b.ne	1958 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa70>  // b.any
    16d8:	cmp	x9, #0x0
    16dc:	ldr	w4, [x0, #8]
    16e0:	csel	x9, x9, x10, ne  // ne = any
    16e4:	str	w4, [x9, #8]
    16e8:	str	x2, [x9]
    16ec:	ldr	w2, [x25, #96]
    16f0:	add	w2, w2, #0x1
    16f4:	str	w2, [x25, #96]
    16f8:	b	1680 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x798>
    16fc:	mov	x0, x3
    1700:	bl	0 <_ZdlPvm>
    1704:	ldr	w2, [x25, #104]
    1708:	ldr	x6, [x25, #88]
    170c:	cbz	w2, 17c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8e0>
    1710:	cmn	x19, #0x10
    1714:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    1718:	b.eq	1a20 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb38>  // b.none
    171c:	lsr	w3, w19, #9
    1720:	sub	w0, w2, #0x1
    1724:	eor	w3, w3, w19, lsr #4
    1728:	ldr	w1, [x25, #96]
    172c:	and	w3, w3, w0
    1730:	add	w1, w1, #0x1
    1734:	lsl	w4, w3, #4
    1738:	add	x2, x6, x4
    173c:	ldr	x7, [x6, x4]
    1740:	cmp	x19, x7
    1744:	b.ne	1750 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x868>  // b.any
    1748:	str	w1, [x25, #96]
    174c:	b	1454 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x56c>
    1750:	mov	w5, #0x1                   	// #1
    1754:	mov	x4, #0x0                   	// #0
    1758:	cmn	x7, #0x8
    175c:	b.ne	198c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xaa4>  // b.any
    1760:	cbz	x4, 1444 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x55c>
    1764:	mov	x2, x4
    1768:	ldr	x0, [x4]
    176c:	b	1448 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x560>
    1770:	mov	x0, x3
    1774:	bl	0 <_ZdlPvm>
    1778:	ldr	w2, [x25, #104]
    177c:	ldr	x6, [x25, #88]
    1780:	cbz	w2, 17c8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8e0>
    1784:	sub	w0, w2, #0x1
    1788:	ldr	w1, [x25, #96]
    178c:	and	w27, w27, w0
    1790:	add	w1, w1, #0x1
    1794:	lsl	w3, w27, #4
    1798:	add	x2, x6, x3
    179c:	ldr	x5, [x6, x3]
    17a0:	cmp	x19, x5
    17a4:	b.eq	1748 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x860>  // b.none
    17a8:	mov	w4, #0x1                   	// #1
    17ac:	mov	x3, #0x0                   	// #0
    17b0:	cmn	x5, #0x8
    17b4:	b.ne	1920 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa38>  // b.any
    17b8:	cbz	x3, 1444 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x55c>
    17bc:	mov	x2, x3
    17c0:	ldr	x0, [x3]
    17c4:	b	1448 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x560>
    17c8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    17cc:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    17d0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    17d4:	add	x3, x3, #0x0
    17d8:	add	x1, x1, #0x0
    17dc:	add	x0, x0, #0x0
    17e0:	mov	w2, #0x22f                 	// #559
    17e4:	bl	0 <__assert_fail>
    17e8:	stp	x27, x28, [sp, #80]
    17ec:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    17f0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    17f4:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    17f8:	add	x3, x3, #0x0
    17fc:	add	x1, x1, #0x0
    1800:	add	x0, x0, #0x0
    1804:	mov	w2, #0x43                  	// #67
    1808:	bl	0 <__assert_fail>
    180c:	mov	w11, #0x1                   	// #1
    1810:	mov	x10, #0x0                   	// #0
    1814:	cmn	x8, #0x8
    1818:	b.ne	19ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb04>  // b.any
    181c:	cmp	x10, #0x0
    1820:	ldr	w4, [x0, #8]
    1824:	csel	x9, x9, x10, eq  // eq = none
    1828:	str	w4, [x9, #8]
    182c:	str	x2, [x9]
    1830:	ldr	w2, [x25, #96]
    1834:	add	w2, w2, #0x1
    1838:	str	w2, [x25, #96]
    183c:	b	1538 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x650>
    1840:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1844:	add	x3, x3, #0x0
    1848:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    184c:	stp	x27, x28, [sp, #80]
    1850:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1854:	add	x1, x1, #0x0
    1858:	add	x0, x0, #0x0
    185c:	mov	w2, #0x250                 	// #592
    1860:	bl	0 <__assert_fail>
    1864:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1868:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    186c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1870:	add	x3, x3, #0x0
    1874:	add	x1, x1, #0x0
    1878:	add	x0, x0, #0x0
    187c:	mov	w2, #0x69                  	// #105
    1880:	stp	x27, x28, [sp, #80]
    1884:	bl	0 <__assert_fail>
    1888:	add	w6, w6, w0
    188c:	cmp	x2, #0x0
    1890:	and	w8, w4, w6
    1894:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    1898:	csel	x2, x2, x7, ne  // ne = any
    189c:	add	w0, w0, #0x1
    18a0:	lsl	x5, x8, #4
    18a4:	and	w6, w4, w6
    18a8:	add	x7, x3, x5
    18ac:	ldr	x5, [x3, x5]
    18b0:	cmp	x19, x5
    18b4:	b.ne	13fc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x514>  // b.any
    18b8:	ldp	x27, x28, [sp, #80]
    18bc:	b	12ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x404>
    18c0:	cbnz	w0, 19cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xae4>
    18c4:	ubfiz	x0, x2, #4, #32
    18c8:	add	x0, x6, x0
    18cc:	cmp	x6, x0
    18d0:	b.eq	1780 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x898>  // b.none
    18d4:	mov	x1, x6
    18d8:	str	x5, [x1], #16
    18dc:	cmp	x0, x1
    18e0:	b.ne	18d8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x9f0>  // b.any
    18e4:	b	1780 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x898>
    18e8:	cbnz	w0, 19cc <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xae4>
    18ec:	ubfiz	x0, x2, #4, #32
    18f0:	add	x0, x6, x0
    18f4:	cmp	x6, x0
    18f8:	b.eq	170c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x824>  // b.none
    18fc:	mov	x1, x6
    1900:	mov	x3, #0xfffffffffffffff8    	// #-8
    1904:	str	x3, [x1], #16
    1908:	cmp	x0, x1
    190c:	b.ne	1904 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xa1c>  // b.any
    1910:	b	170c <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x824>
    1914:	stp	x23, x24, [sp, #48]
    1918:	stp	x27, x28, [sp, #80]
    191c:	b	17ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x904>
    1920:	add	w27, w27, w4
    1924:	cmp	x3, #0x0
    1928:	and	w7, w0, w27
    192c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    1930:	csel	x3, x3, x2, ne  // ne = any
    1934:	add	w4, w4, #0x1
    1938:	lsl	x5, x7, #4
    193c:	and	w27, w0, w27
    1940:	add	x2, x6, x7, lsl #4
    1944:	ldr	x5, [x6, x5]
    1948:	cmp	x19, x5
    194c:	b.ne	17b0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x8c8>  // b.any
    1950:	str	w1, [x25, #96]
    1954:	b	1454 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x56c>
    1958:	add	w4, w11, w4
    195c:	cmp	x9, #0x0
    1960:	and	w12, w5, w4
    1964:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    1968:	csel	x9, x9, x10, ne  // ne = any
    196c:	add	w11, w11, #0x1
    1970:	lsl	x8, x12, #4
    1974:	and	w4, w5, w4
    1978:	add	x10, x6, x12, lsl #4
    197c:	ldr	x8, [x6, x8]
    1980:	cmp	x2, x8
    1984:	b.eq	1580 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x698>  // b.none
    1988:	b	16d0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x7e8>
    198c:	add	w3, w5, w3
    1990:	cmp	x4, #0x0
    1994:	and	w8, w0, w3
    1998:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    199c:	csel	x4, x4, x2, ne  // ne = any
    19a0:	add	w5, w5, #0x1
    19a4:	lsl	x7, x8, #4
    19a8:	and	w3, w0, w3
    19ac:	add	x2, x6, x8, lsl #4
    19b0:	ldr	x7, [x6, x7]
    19b4:	cmp	x19, x7
    19b8:	b.ne	1758 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x870>  // b.any
    19bc:	str	w1, [x25, #96]
    19c0:	b	1454 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x56c>
    19c4:	stp	x23, x24, [sp, #48]
    19c8:	stp	x27, x28, [sp, #80]
    19cc:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    19d0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    19d4:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    19d8:	add	x3, x3, #0x0
    19dc:	add	x1, x1, #0x0
    19e0:	add	x0, x0, #0x0
    19e4:	mov	w2, #0x15b                 	// #347
    19e8:	bl	0 <__assert_fail>
    19ec:	add	w4, w11, w4
    19f0:	cmp	x10, #0x0
    19f4:	and	w12, w5, w4
    19f8:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    19fc:	csel	x10, x10, x9, ne  // ne = any
    1a00:	add	w11, w11, #0x1
    1a04:	lsl	x8, x12, #4
    1a08:	and	w4, w5, w4
    1a0c:	add	x9, x6, x12, lsl #4
    1a10:	ldr	x8, [x6, x8]
    1a14:	cmp	x2, x8
    1a18:	b.eq	1580 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x698>  // b.none
    1a1c:	b	1814 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x92c>
    1a20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1a24:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1a28:	add	x3, x3, #0x0
    1a2c:	b	1850 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x968>
    1a30:	mov	x0, #0x0                   	// #0
    1a34:	str	x2, [x0]
    1a38:	brk	#0x3e8
    1a3c:	nop

0000000000001a40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>:
    1a40:	stp	x29, x30, [sp, #-400]!
    1a44:	mov	x29, sp
    1a48:	stp	x27, x28, [sp, #80]
    1a4c:	mov	x28, x0
    1a50:	add	x0, sp, #0x100
    1a54:	str	x0, [sp, #240]
    1a58:	add	x1, sp, #0xf0
    1a5c:	ldr	x0, [x28, #72]
    1a60:	add	x2, sp, #0x140
    1a64:	str	x1, [sp, #128]
    1a68:	mov	x1, #0x800000000           	// #34359738368
    1a6c:	str	x2, [sp, #144]
    1a70:	add	x2, sp, #0x150
    1a74:	stp	x2, x1, [sp, #320]
    1a78:	stp	x19, x20, [sp, #16]
    1a7c:	ldur	x19, [x0, #-24]
    1a80:	str	x19, [sp, #136]
    1a84:	ldr	x0, [x0]
    1a88:	str	x0, [sp, #152]
    1a8c:	str	x1, [sp, #248]
    1a90:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1a94:	str	w0, [sp, #124]
    1a98:	ldrb	w1, [x19, #16]
    1a9c:	cmp	w1, #0x10
    1aa0:	b.hi	1ab8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78>  // b.pmore
    1aa4:	ldr	w0, [sp, #124]
    1aa8:	ldp	x19, x20, [sp, #16]
    1aac:	ldp	x27, x28, [sp, #80]
    1ab0:	ldp	x29, x30, [sp], #400
    1ab4:	ret
    1ab8:	mov	x20, x19
    1abc:	stp	x21, x22, [sp, #32]
    1ac0:	add	x19, x28, #0x50
    1ac4:	stp	x23, x24, [sp, #48]
    1ac8:	ldr	x0, [x20]
    1acc:	stp	x25, x26, [sp, #64]
    1ad0:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1ad4:	str	x20, [sp, #256]
    1ad8:	mov	w1, #0x1                   	// #1
    1adc:	str	w0, [sp, #168]
    1ae0:	ldrb	w0, [x20, #16]
    1ae4:	str	w1, [sp, #248]
    1ae8:	cmp	w0, #0x17
    1aec:	b.ls	2b50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1110>  // b.plast
    1af0:	ldr	x2, [sp, #136]
    1af4:	add	x21, sp, #0xd0
    1af8:	mov	x1, x21
    1afc:	mov	x0, x19
    1b00:	str	x2, [sp, #208]
    1b04:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1b08:	ldr	w1, [sp, #124]
    1b0c:	str	w1, [x0]
    1b10:	ldr	w0, [sp, #248]
    1b14:	cbz	w0, 1f2c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4ec>
    1b18:	add	x24, sp, #0xb8
    1b1c:	mov	x20, #0xfffffffffffffff8    	// #-8
    1b20:	ldr	x2, [sp, #240]
    1b24:	add	x1, x20, w0, uxtw #3
    1b28:	mov	w3, w0
    1b2c:	ldr	x22, [x2, x1]
    1b30:	cbz	x22, 2b40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1100>
    1b34:	ldrb	w1, [x22, #16]
    1b38:	cmp	w1, #0x10
    1b3c:	b.ls	202c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5ec>  // b.plast
    1b40:	cmp	w1, #0x17
    1b44:	b.ls	2b50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1110>  // b.plast
    1b48:	ldr	w27, [x28, #104]
    1b4c:	ldr	x3, [x28, #88]
    1b50:	cbz	w27, 23ec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9ac>
    1b54:	cmn	x22, #0x10
    1b58:	ccmn	x22, #0x8, #0x4, ne  // ne = any
    1b5c:	b.eq	2b10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10d0>  // b.none
    1b60:	lsr	w23, w22, #9
    1b64:	sub	w1, w27, #0x1
    1b68:	eor	w23, w23, w22, lsr #4
    1b6c:	mov	w6, #0x1                   	// #1
    1b70:	and	w4, w23, w1
    1b74:	mov	x26, #0x0                   	// #0
    1b78:	lsl	w0, w4, #4
    1b7c:	add	x5, x3, x0
    1b80:	ldr	x0, [x3, x0]
    1b84:	cmp	x22, x0
    1b88:	b.ne	1e5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x41c>  // b.any
    1b8c:	ldr	w27, [x5, #8]
    1b90:	ldr	x0, [x28, #112]
    1b94:	add	x3, x21, #0x10
    1b98:	mov	w4, #0x18                  	// #24
    1b9c:	mov	x2, #0x200000000           	// #8589934592
    1ba0:	mov	x1, x21
    1ba4:	stp	x3, x2, [sp, #208]
    1ba8:	umaddl	x27, w27, w4, x0
    1bac:	mov	x0, x22
    1bb0:	bl	110 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    1bb4:	ldr	w1, [sp, #328]
    1bb8:	cbz	w1, 1bd4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x194>
    1bbc:	ldr	x2, [sp, #320]
    1bc0:	add	x0, x20, w1, uxtw #3
    1bc4:	mov	w3, w1
    1bc8:	ldr	x0, [x2, x0]
    1bcc:	cmp	x22, x0
    1bd0:	b.eq	2340 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x900>  // b.none
    1bd4:	ldr	w0, [sp, #332]
    1bd8:	cmp	w1, w0
    1bdc:	b.cs	2298 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x858>  // b.hs, b.nlast
    1be0:	ldr	x0, [sp, #320]
    1be4:	str	x22, [x0, w1, uxtw #3]
    1be8:	ldr	w0, [sp, #328]
    1bec:	ldr	w2, [sp, #332]
    1bf0:	mov	w1, w0
    1bf4:	add	x1, x1, #0x1
    1bf8:	cmp	x1, x2
    1bfc:	b.hi	2b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e0>  // b.pmore
    1c00:	ldp	w25, w1, [x27, #8]
    1c04:	add	w0, w0, #0x1
    1c08:	ldr	x23, [sp, #208]
    1c0c:	cmp	w25, w1
    1c10:	csel	w1, w25, w1, hi  // hi = pmore
    1c14:	str	w1, [x27, #12]
    1c18:	str	w0, [sp, #328]
    1c1c:	ldr	w27, [sp, #216]
    1c20:	add	x27, x23, x27, lsl #3
    1c24:	cmp	x23, x27
    1c28:	b.eq	1f10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4d0>  // b.none
    1c2c:	mov	w26, #0x18                  	// #24
    1c30:	str	x21, [sp, #112]
    1c34:	mov	x21, x24
    1c38:	mov	x24, x19
    1c3c:	mov	w19, w25
    1c40:	b	1d1c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>
    1c44:	cmn	x22, #0x10
    1c48:	ccmn	x22, #0x8, #0x4, ne  // ne = any
    1c4c:	b.eq	2a18 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfd8>  // b.none
    1c50:	lsr	w0, w22, #9
    1c54:	sub	w3, w2, #0x1
    1c58:	eor	w0, w0, w22, lsr #4
    1c5c:	and	w0, w0, w3
    1c60:	lsl	w1, w0, #4
    1c64:	add	x5, x25, x1
    1c68:	ldr	x1, [x25, x1]
    1c6c:	cmp	x22, x1
    1c70:	b.ne	204c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x60c>  // b.any
    1c74:	ubfiz	x1, x2, #4, #32
    1c78:	add	x3, x25, x1
    1c7c:	cmp	x3, x5
    1c80:	ldr	x7, [x24]
    1c84:	b.eq	2c10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11d0>  // b.none
    1c88:	ldr	w0, [x5, #8]
    1c8c:	ldr	x5, [x28, #112]
    1c90:	umaddl	x0, w0, w26, x5
    1c94:	ldr	w0, [x0, #8]
    1c98:	cmp	w0, w19
    1c9c:	b.cs	1d10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2d0>  // b.hs, b.nlast
    1ca0:	cmn	x22, #0x8
    1ca4:	ccmn	x22, #0x10, #0x4, ne  // ne = any
    1ca8:	b.eq	2b10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10d0>  // b.none
    1cac:	lsr	w5, w22, #9
    1cb0:	sub	w8, w2, #0x1
    1cb4:	eor	w5, w5, w22, lsr #4
    1cb8:	and	w9, w5, w8
    1cbc:	lsl	w0, w9, #4
    1cc0:	add	x10, x25, x0
    1cc4:	ldr	x0, [x25, x0]
    1cc8:	cmp	x22, x0
    1ccc:	b.ne	2080 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x640>  // b.any
    1cd0:	ldr	w0, [x10, #8]
    1cd4:	ldr	x1, [x28, #112]
    1cd8:	umaddl	x0, w0, w26, x1
    1cdc:	str	w19, [x0, #8]
    1ce0:	ldp	w0, w1, [sp, #248]
    1ce4:	cmp	w0, w1
    1ce8:	b.cs	2064 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x624>  // b.hs, b.nlast
    1cec:	ldr	x1, [sp, #240]
    1cf0:	str	x22, [x1, w0, uxtw #3]
    1cf4:	ldp	w0, w2, [sp, #248]
    1cf8:	mov	w1, w0
    1cfc:	add	x1, x1, #0x1
    1d00:	cmp	x1, x2
    1d04:	b.hi	2b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e0>  // b.pmore
    1d08:	add	w0, w0, #0x1
    1d0c:	str	w0, [sp, #248]
    1d10:	add	x23, x23, #0x8
    1d14:	cmp	x27, x23
    1d18:	b.eq	1f00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4c0>  // b.none
    1d1c:	ldr	x22, [x23]
    1d20:	cbz	x22, 2980 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf40>
    1d24:	ldrb	w0, [x22, #16]
    1d28:	cmp	w0, #0x17
    1d2c:	b.ls	1d10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2d0>  // b.plast
    1d30:	ldr	w2, [x28, #104]
    1d34:	ldr	x25, [x28, #88]
    1d38:	cbnz	w2, 1c44 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x204>
    1d3c:	mov	x3, x25
    1d40:	mov	x1, #0x0                   	// #0
    1d44:	ldr	x7, [x24]
    1d48:	cbz	w19, 1d10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2d0>
    1d4c:	cbnz	w2, 1ca0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x260>
    1d50:	add	x7, x7, #0x1
    1d54:	mov	w0, #0x0                   	// #0
    1d58:	str	x7, [x28, #80]
    1d5c:	sub	w0, w0, #0x1
    1d60:	mov	w2, #0x40                  	// #64
    1d64:	str	x3, [sp, #104]
    1d68:	orr	x0, x0, x0, lsr #1
    1d6c:	str	x1, [sp, #160]
    1d70:	orr	x0, x0, x0, lsr #2
    1d74:	orr	x0, x0, x0, lsr #4
    1d78:	orr	x0, x0, x0, lsr #8
    1d7c:	orr	x0, x0, x0, lsr #16
    1d80:	add	x0, x0, #0x1
    1d84:	cmp	w0, w2
    1d88:	csel	w0, w0, w2, cs  // cs = hs, nlast
    1d8c:	str	w0, [x28, #104]
    1d90:	ubfiz	x0, x0, #4, #32
    1d94:	bl	0 <_Znwm>
    1d98:	ldr	w2, [x28, #104]
    1d9c:	stp	x0, xzr, [x28, #88]
    1da0:	sub	w5, w2, #0x1
    1da4:	and	w5, w5, w2
    1da8:	ldr	x3, [sp, #104]
    1dac:	ldr	x1, [sp, #160]
    1db0:	cbz	x25, 27c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd88>
    1db4:	cbnz	w5, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    1db8:	ubfiz	x5, x2, #4, #32
    1dbc:	mov	x2, x0
    1dc0:	add	x5, x0, x5
    1dc4:	cmp	x0, x5
    1dc8:	b.eq	1ddc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x39c>  // b.none
    1dcc:	nop
    1dd0:	str	x20, [x2], #16
    1dd4:	cmp	x5, x2
    1dd8:	b.ne	1dd0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x390>  // b.any
    1ddc:	cmp	x3, x25
    1de0:	mov	x2, x25
    1de4:	b.ne	1df8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3b8>  // b.any
    1de8:	b	22b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x874>
    1dec:	add	x2, x2, #0x10
    1df0:	cmp	x3, x2
    1df4:	b.eq	22b4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x874>  // b.none
    1df8:	ldr	x10, [x2]
    1dfc:	cmn	x10, #0x8
    1e00:	ccmn	x10, #0x10, #0x4, ne  // ne = any
    1e04:	b.eq	1dec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3ac>  // b.none
    1e08:	ldr	w5, [x28, #104]
    1e0c:	cbz	w5, 2c30 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11f0>
    1e10:	lsr	w4, w10, #9
    1e14:	sub	w5, w5, #0x1
    1e18:	eor	w4, w4, w10, lsr #4
    1e1c:	and	w4, w4, w5
    1e20:	lsl	w6, w4, #4
    1e24:	add	x7, x0, x6
    1e28:	ldr	x6, [x0, x6]
    1e2c:	cmp	x6, x10
    1e30:	b.ne	2768 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd28>  // b.any
    1e34:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1e38:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1e3c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1e40:	add	x3, x3, #0x0
    1e44:	add	x1, x1, #0x0
    1e48:	add	x0, x0, #0x0
    1e4c:	mov	w2, #0x17a                 	// #378
    1e50:	bl	0 <__assert_fail>
    1e54:	mov	x26, x5
    1e58:	mov	x5, x7
    1e5c:	cmn	x0, #0x8
    1e60:	b.ne	290c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xecc>  // b.any
    1e64:	ldr	x6, [x28, #80]
    1e68:	lsl	w0, w27, #1
    1e6c:	ldr	w4, [x28, #96]
    1e70:	cmp	x26, #0x0
    1e74:	add	x6, x6, #0x1
    1e78:	str	x6, [x28, #80]
    1e7c:	add	w4, w4, #0x1
    1e80:	add	w6, w0, w27
    1e84:	csel	x26, x26, x5, ne  // ne = any
    1e88:	cmp	w6, w4, lsl #2
    1e8c:	b.ls	23fc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x9bc>  // b.plast
    1e90:	ldr	w0, [x28, #100]
    1e94:	sub	w0, w27, w0
    1e98:	sub	w0, w0, w4
    1e9c:	cmp	w0, w27, lsr #3
    1ea0:	b.ls	2508 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xac8>  // b.plast
    1ea4:	ldr	x0, [x26]
    1ea8:	str	w4, [x28, #96]
    1eac:	cmn	x0, #0x8
    1eb0:	b.eq	1ec0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x480>  // b.none
    1eb4:	ldr	w0, [x28, #100]
    1eb8:	sub	w0, w0, #0x1
    1ebc:	str	w0, [x28, #100]
    1ec0:	str	x22, [x26]
    1ec4:	mov	x1, x21
    1ec8:	str	wzr, [x26, #8]
    1ecc:	add	x0, x28, #0x70
    1ed0:	stp	x22, xzr, [sp, #208]
    1ed4:	str	xzr, [sp, #224]
    1ed8:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    1edc:	ldp	x0, x27, [x28, #112]
    1ee0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1ee4:	movk	x1, #0xaaab
    1ee8:	sub	x27, x27, x0
    1eec:	asr	x27, x27, #3
    1ef0:	mul	x27, x27, x1
    1ef4:	sub	w27, w27, #0x1
    1ef8:	str	w27, [x26, #8]
    1efc:	b	1b94 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x154>
    1f00:	mov	x19, x24
    1f04:	mov	x24, x21
    1f08:	ldr	x21, [sp, #112]
    1f0c:	ldr	x27, [sp, #208]
    1f10:	add	x0, x21, #0x10
    1f14:	cmp	x27, x0
    1f18:	b.eq	1f24 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4e4>  // b.none
    1f1c:	mov	x0, x27
    1f20:	bl	0 <free>
    1f24:	ldr	w0, [sp, #248]
    1f28:	cbnz	w0, 1b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe0>
    1f2c:	ldr	x6, [sp, #136]
    1f30:	ldrb	w0, [x6, #16]
    1f34:	cmp	w0, #0x17
    1f38:	b.ls	2b50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1110>  // b.plast
    1f3c:	ldr	w2, [x28, #104]
    1f40:	ldr	x1, [x28, #88]
    1f44:	cbz	w2, 2628 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbe8>
    1f48:	cmn	x6, #0x8
    1f4c:	ccmn	x6, #0x10, #0x4, ne  // ne = any
    1f50:	b.eq	2a18 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfd8>  // b.none
    1f54:	lsr	w0, w6, #9
    1f58:	sub	w5, w2, #0x1
    1f5c:	eor	w0, w0, w6, lsr #4
    1f60:	and	w0, w0, w5
    1f64:	lsl	w3, w0, #4
    1f68:	add	x4, x1, x3
    1f6c:	ldr	x3, [x1, x3]
    1f70:	cmp	x6, x3
    1f74:	b.ne	2944 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf04>  // b.any
    1f78:	ubfiz	x2, x2, #4, #32
    1f7c:	add	x1, x1, x2
    1f80:	cmp	x4, x1
    1f84:	b.eq	2628 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbe8>  // b.none
    1f88:	ldr	w0, [x4, #8]
    1f8c:	mov	w2, #0x18                  	// #24
    1f90:	ldr	x1, [x28, #112]
    1f94:	umaddl	x0, w0, w2, x1
    1f98:	ldr	w2, [x0, #12]
    1f9c:	ldr	w0, [sp, #124]
    1fa0:	cmp	w0, w2
    1fa4:	b.hi	2818 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdd8>  // b.pmore
    1fa8:	b.cs	2610 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbd0>  // b.hs, b.nlast
    1fac:	ldr	x1, [sp, #152]
    1fb0:	ldr	w3, [sp, #168]
    1fb4:	str	w3, [sp, #124]
    1fb8:	ldrb	w0, [x1, #8]
    1fbc:	cmp	w0, #0x10
    1fc0:	b.eq	1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>  // b.none
    1fc4:	ldr	x1, [x1]
    1fc8:	ldr	x0, [x28, #8]
    1fcc:	bl	0 <_ZNK4llvm10DataLayout23getSmallestLegalIntTypeERNS_11LLVMContextEj>
    1fd0:	cbz	x0, 1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>
    1fd4:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1fd8:	str	w0, [sp, #124]
    1fdc:	ldr	x1, [sp, #144]
    1fe0:	ldr	x0, [sp, #320]
    1fe4:	add	x27, x1, #0x10
    1fe8:	cmp	x0, x27
    1fec:	b.eq	1ff4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x5b4>  // b.none
    1ff0:	bl	0 <free>
    1ff4:	ldr	x1, [sp, #128]
    1ff8:	ldr	x0, [sp, #240]
    1ffc:	add	x26, x1, #0x10
    2000:	cmp	x0, x26
    2004:	b.eq	2ba8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1168>  // b.none
    2008:	bl	0 <free>
    200c:	ldr	w0, [sp, #124]
    2010:	ldp	x19, x20, [sp, #16]
    2014:	ldp	x21, x22, [sp, #32]
    2018:	ldp	x23, x24, [sp, #48]
    201c:	ldp	x25, x26, [sp, #64]
    2020:	ldp	x27, x28, [sp, #80]
    2024:	ldp	x29, x30, [sp], #400
    2028:	ret
    202c:	ldr	w1, [sp, #252]
    2030:	sub	x3, x3, #0x1
    2034:	cmp	x3, x1
    2038:	b.hi	2b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e0>  // b.pmore
    203c:	sub	w0, w0, #0x1
    2040:	str	w0, [sp, #248]
    2044:	cbnz	w0, 1b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe0>
    2048:	b	1f2c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4ec>
    204c:	mov	w5, #0x1                   	// #1
    2050:	cmn	x1, #0x8
    2054:	b.ne	279c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd5c>  // b.any
    2058:	ubfiz	x1, x2, #4, #32
    205c:	add	x3, x25, x1
    2060:	b	1d44 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x304>
    2064:	ldr	x0, [sp, #128]
    2068:	mov	x3, #0x8                   	// #8
    206c:	mov	x2, #0x0                   	// #0
    2070:	add	x1, x0, #0x10
    2074:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2078:	ldr	w0, [sp, #248]
    207c:	b	1cec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2ac>
    2080:	mov	w11, #0x1                   	// #1
    2084:	mov	x6, #0x0                   	// #0
    2088:	cmn	x0, #0x8
    208c:	b.ne	2840 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe00>  // b.any
    2090:	ldr	w9, [x28, #96]
    2094:	add	x7, x7, #0x1
    2098:	lsl	w0, w2, #1
    209c:	str	x7, [x28, #80]
    20a0:	add	w7, w9, #0x1
    20a4:	cmp	x6, #0x0
    20a8:	add	w9, w0, w2
    20ac:	csel	x6, x6, x10, ne  // ne = any
    20b0:	cmp	w9, w7, lsl #2
    20b4:	b.ls	1d5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x31c>  // b.plast
    20b8:	ldr	w0, [x28, #100]
    20bc:	add	w0, w7, w0
    20c0:	sub	w0, w2, w0
    20c4:	cmp	w0, w2, lsr #3
    20c8:	b.ls	2130 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6f0>  // b.plast
    20cc:	ldr	x0, [x6]
    20d0:	str	w7, [x28, #96]
    20d4:	cmn	x0, #0x8
    20d8:	b.eq	20e8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x6a8>  // b.none
    20dc:	ldr	w0, [x28, #100]
    20e0:	sub	w0, w0, #0x1
    20e4:	str	w0, [x28, #100]
    20e8:	str	x22, [x6]
    20ec:	mov	x1, x21
    20f0:	str	wzr, [x6, #8]
    20f4:	add	x0, x28, #0x70
    20f8:	str	x6, [sp, #104]
    20fc:	stp	x22, xzr, [sp, #184]
    2100:	str	xzr, [sp, #200]
    2104:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2108:	ldp	x1, x0, [x28, #112]
    210c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2110:	movk	x2, #0xaaab
    2114:	ldr	x6, [sp, #104]
    2118:	sub	x0, x0, x1
    211c:	asr	x0, x0, #3
    2120:	mul	x0, x0, x2
    2124:	sub	w0, w0, #0x1
    2128:	str	w0, [x6, #8]
    212c:	b	1cd8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x298>
    2130:	mov	w2, w8
    2134:	lsr	w0, w8, #1
    2138:	orr	x0, x0, x2
    213c:	mov	w2, #0x40                  	// #64
    2140:	str	x3, [sp, #104]
    2144:	orr	x0, x0, x0, lsr #2
    2148:	str	x1, [sp, #160]
    214c:	str	w5, [sp, #172]
    2150:	orr	x0, x0, x0, lsr #4
    2154:	orr	x0, x0, x0, lsr #8
    2158:	orr	x0, x0, x0, lsr #16
    215c:	add	x0, x0, #0x1
    2160:	cmp	w0, w2
    2164:	csel	w0, w0, w2, cs  // cs = hs, nlast
    2168:	str	w0, [x28, #104]
    216c:	ubfiz	x0, x0, #4, #32
    2170:	bl	0 <_Znwm>
    2174:	ldr	w2, [x28, #104]
    2178:	stp	x0, xzr, [x28, #88]
    217c:	sub	w6, w2, #0x1
    2180:	ldr	w5, [sp, #172]
    2184:	and	w6, w6, w2
    2188:	ldr	x3, [sp, #104]
    218c:	ldr	x1, [sp, #160]
    2190:	cbz	x25, 27f0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdb0>
    2194:	cbnz	w6, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    2198:	ubfiz	x6, x2, #4, #32
    219c:	mov	x2, x0
    21a0:	add	x6, x0, x6
    21a4:	cmp	x0, x6
    21a8:	b.eq	21bc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x77c>  // b.none
    21ac:	nop
    21b0:	str	x20, [x2], #16
    21b4:	cmp	x6, x2
    21b8:	b.ne	21b0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x770>  // b.any
    21bc:	cmp	x25, x3
    21c0:	mov	x2, x25
    21c4:	b.ne	21d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x798>  // b.any
    21c8:	b	2250 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x810>
    21cc:	add	x2, x2, #0x10
    21d0:	cmp	x3, x2
    21d4:	b.eq	2250 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x810>  // b.none
    21d8:	ldr	x12, [x2]
    21dc:	cmn	x12, #0x10
    21e0:	ccmn	x12, #0x8, #0x4, ne  // ne = any
    21e4:	b.eq	21cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x78c>  // b.none
    21e8:	ldr	w6, [x28, #104]
    21ec:	cbz	w6, 2c3c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11fc>
    21f0:	lsr	w4, w12, #9
    21f4:	sub	w6, w6, #0x1
    21f8:	eor	w4, w4, w12, lsr #4
    21fc:	and	w4, w4, w6
    2200:	lsl	w7, w4, #4
    2204:	add	x8, x0, x7
    2208:	ldr	x7, [x0, x7]
    220c:	cmp	x12, x7
    2210:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    2214:	mov	w10, #0x1                   	// #1
    2218:	mov	x9, #0x0                   	// #0
    221c:	cmn	x7, #0x8
    2220:	b.ne	29dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf9c>  // b.any
    2224:	cmp	x9, #0x0
    2228:	ldr	w4, [x2, #8]
    222c:	csel	x9, x9, x8, ne  // ne = any
    2230:	add	x2, x2, #0x10
    2234:	cmp	x3, x2
    2238:	str	w4, [x9, #8]
    223c:	str	x12, [x9]
    2240:	ldr	w4, [x28, #96]
    2244:	add	w4, w4, #0x1
    2248:	str	w4, [x28, #96]
    224c:	b.ne	21d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x798>  // b.any
    2250:	mov	x0, x25
    2254:	str	w5, [sp, #104]
    2258:	bl	0 <_ZdlPvm>
    225c:	ldr	w2, [x28, #104]
    2260:	ldr	w5, [sp, #104]
    2264:	ldr	x0, [x28, #88]
    2268:	cbz	w2, 2320 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e0>
    226c:	sub	w2, w2, #0x1
    2270:	ldr	w7, [x28, #96]
    2274:	and	w5, w5, w2
    2278:	add	w7, w7, #0x1
    227c:	lsl	w1, w5, #4
    2280:	add	x6, x0, x1
    2284:	ldr	x1, [x0, x1]
    2288:	cmp	x22, x1
    228c:	b.ne	289c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe5c>  // b.any
    2290:	str	w7, [x28, #96]
    2294:	b	20dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x69c>
    2298:	ldr	x0, [sp, #144]
    229c:	mov	x3, #0x8                   	// #8
    22a0:	mov	x2, #0x0                   	// #0
    22a4:	add	x1, x0, #0x10
    22a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    22ac:	ldr	w1, [sp, #328]
    22b0:	b	1be0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1a0>
    22b4:	mov	x0, x25
    22b8:	bl	0 <_ZdlPvm>
    22bc:	ldr	w2, [x28, #104]
    22c0:	ldr	x0, [x28, #88]
    22c4:	cbz	w2, 2320 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e0>
    22c8:	cmn	x22, #0x10
    22cc:	ccmn	x22, #0x8, #0x4, ne  // ne = any
    22d0:	b.eq	2b10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10d0>  // b.none
    22d4:	lsr	w1, w22, #9
    22d8:	sub	w2, w2, #0x1
    22dc:	eor	w1, w1, w22, lsr #4
    22e0:	ldr	w7, [x28, #96]
    22e4:	and	w1, w1, w2
    22e8:	add	w7, w7, #0x1
    22ec:	lsl	w3, w1, #4
    22f0:	add	x6, x0, x3
    22f4:	ldr	x3, [x0, x3]
    22f8:	cmp	x22, x3
    22fc:	b.eq	2290 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x850>  // b.none
    2300:	mov	w8, #0x1                   	// #1
    2304:	mov	x5, #0x0                   	// #0
    2308:	cmn	x3, #0x8
    230c:	b.ne	2aa4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1064>  // b.any
    2310:	cbz	x5, 20cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x68c>
    2314:	mov	x6, x5
    2318:	ldr	x0, [x5]
    231c:	b	20d0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x690>
    2320:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2324:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2328:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    232c:	add	x3, x3, #0x0
    2330:	add	x1, x1, #0x0
    2334:	add	x0, x0, #0x0
    2338:	mov	w2, #0x22f                 	// #559
    233c:	bl	0 <__assert_fail>
    2340:	ldp	w0, w4, [sp, #248]
    2344:	mov	w2, w0
    2348:	sub	x2, x2, #0x1
    234c:	cmp	x2, x4
    2350:	b.hi	2b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e0>  // b.pmore
    2354:	ldr	w2, [sp, #332]
    2358:	sub	w0, w0, #0x1
    235c:	str	w0, [sp, #248]
    2360:	sub	x3, x3, #0x1
    2364:	cmp	x3, x2
    2368:	b.hi	2b20 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10e0>  // b.pmore
    236c:	ldr	x0, [sp, #208]
    2370:	sub	w1, w1, #0x1
    2374:	ldr	w23, [sp, #216]
    2378:	str	w1, [sp, #328]
    237c:	mov	x22, x0
    2380:	add	x23, x0, x23, lsl #3
    2384:	cmp	x23, x0
    2388:	b.eq	23d8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x998>  // b.none
    238c:	nop
    2390:	ldr	x2, [x22]
    2394:	cbz	x2, 2980 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf40>
    2398:	ldrb	w0, [x2, #16]
    239c:	cmp	w0, #0x17
    23a0:	b.ls	23c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x988>  // b.plast
    23a4:	mov	x1, x24
    23a8:	mov	x0, x19
    23ac:	str	x2, [sp, #184]
    23b0:	bl	0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    23b4:	ldr	w2, [x27, #12]
    23b8:	ldr	w0, [x0, #4]
    23bc:	cmp	w2, w0
    23c0:	csel	w2, w2, w0, cs  // cs = hs, nlast
    23c4:	str	w2, [x27, #12]
    23c8:	add	x22, x22, #0x8
    23cc:	cmp	x23, x22
    23d0:	b.ne	2390 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x950>  // b.any
    23d4:	ldr	x0, [sp, #208]
    23d8:	add	x1, x21, #0x10
    23dc:	cmp	x0, x1
    23e0:	b.eq	1f24 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4e4>  // b.none
    23e4:	bl	0 <free>
    23e8:	b	1f24 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x4e4>
    23ec:	ldr	x1, [x28, #80]
    23f0:	mov	w0, #0x0                   	// #0
    23f4:	add	x1, x1, #0x1
    23f8:	str	x1, [x28, #80]
    23fc:	sub	w0, w0, #0x1
    2400:	mov	w1, #0x40                  	// #64
    2404:	str	x3, [sp, #104]
    2408:	orr	x0, x0, x0, lsr #1
    240c:	orr	x0, x0, x0, lsr #2
    2410:	orr	x0, x0, x0, lsr #4
    2414:	orr	x0, x0, x0, lsr #8
    2418:	orr	x0, x0, x0, lsr #16
    241c:	add	x0, x0, #0x1
    2420:	cmp	w0, w1
    2424:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2428:	str	w0, [x28, #104]
    242c:	ubfiz	x0, x0, #4, #32
    2430:	bl	0 <_Znwm>
    2434:	ldr	x3, [sp, #104]
    2438:	stp	x0, xzr, [x28, #88]
    243c:	ldr	w2, [x28, #104]
    2440:	sub	w4, w2, #0x1
    2444:	and	w4, w4, w2
    2448:	cbz	x3, 2874 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe34>
    244c:	ubfiz	x1, x27, #4, #32
    2450:	add	x7, x3, x1
    2454:	cbnz	w4, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    2458:	ubfiz	x4, x2, #4, #32
    245c:	mov	x2, x0
    2460:	add	x4, x0, x4
    2464:	cmp	x0, x4
    2468:	b.eq	247c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa3c>  // b.none
    246c:	nop
    2470:	str	x20, [x2], #16
    2474:	cmp	x4, x2
    2478:	b.ne	2470 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa30>  // b.any
    247c:	cmp	x3, x7
    2480:	mov	x2, x3
    2484:	b.ne	2498 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa58>  // b.any
    2488:	b	26b8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc78>
    248c:	add	x2, x2, #0x10
    2490:	cmp	x7, x2
    2494:	b.eq	26b8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc78>  // b.none
    2498:	ldr	x5, [x2]
    249c:	cmn	x5, #0x10
    24a0:	ccmn	x5, #0x8, #0x4, ne  // ne = any
    24a4:	b.eq	248c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa4c>  // b.none
    24a8:	ldr	w6, [x28, #104]
    24ac:	cbz	w6, 2c18 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11d8>
    24b0:	lsr	w4, w5, #9
    24b4:	sub	w6, w6, #0x1
    24b8:	eor	w4, w4, w5, lsr #4
    24bc:	and	w4, w4, w6
    24c0:	lsl	w8, w4, #4
    24c4:	add	x9, x0, x8
    24c8:	ldr	x8, [x0, x8]
    24cc:	cmp	x5, x8
    24d0:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    24d4:	mov	w11, #0x1                   	// #1
    24d8:	mov	x10, #0x0                   	// #0
    24dc:	cmn	x8, #0x8
    24e0:	b.ne	2a38 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xff8>  // b.any
    24e4:	cmp	x10, #0x0
    24e8:	ldr	w4, [x2, #8]
    24ec:	csel	x10, x10, x9, ne  // ne = any
    24f0:	str	w4, [x10, #8]
    24f4:	str	x5, [x10]
    24f8:	ldr	w4, [x28, #96]
    24fc:	add	w4, w4, #0x1
    2500:	str	w4, [x28, #96]
    2504:	b	248c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa4c>
    2508:	mov	w2, w1
    250c:	lsr	w0, w1, #1
    2510:	orr	x0, x0, x2
    2514:	mov	w1, #0x40                  	// #64
    2518:	str	x3, [sp, #104]
    251c:	orr	x0, x0, x0, lsr #2
    2520:	orr	x0, x0, x0, lsr #4
    2524:	orr	x0, x0, x0, lsr #8
    2528:	orr	x0, x0, x0, lsr #16
    252c:	add	x0, x0, #0x1
    2530:	cmp	w0, w1
    2534:	csel	w0, w0, w1, cs  // cs = hs, nlast
    2538:	str	w0, [x28, #104]
    253c:	ubfiz	x0, x0, #4, #32
    2540:	bl	0 <_Znwm>
    2544:	ldr	x3, [sp, #104]
    2548:	stp	x0, xzr, [x28, #88]
    254c:	ldr	w2, [x28, #104]
    2550:	sub	w4, w2, #0x1
    2554:	and	w4, w4, w2
    2558:	cbz	x3, 28e4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xea4>
    255c:	ubfiz	x1, x27, #4, #32
    2560:	add	x6, x3, x1
    2564:	cbnz	w4, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    2568:	ubfiz	x4, x2, #4, #32
    256c:	mov	x2, x0
    2570:	add	x4, x0, x4
    2574:	cmp	x0, x4
    2578:	b.eq	258c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb4c>  // b.none
    257c:	nop
    2580:	str	x20, [x2], #16
    2584:	cmp	x4, x2
    2588:	b.ne	2580 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb40>  // b.any
    258c:	mov	x2, x3
    2590:	b	25a0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb60>
    2594:	add	x2, x2, #0x10
    2598:	cmp	x6, x2
    259c:	b.eq	270c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xccc>  // b.none
    25a0:	ldr	x7, [x2]
    25a4:	cmn	x7, #0x10
    25a8:	ccmn	x7, #0x8, #0x4, ne  // ne = any
    25ac:	b.eq	2594 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb54>  // b.none
    25b0:	ldr	w5, [x28, #104]
    25b4:	cbz	w5, 2c24 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11e4>
    25b8:	lsr	w4, w7, #9
    25bc:	sub	w5, w5, #0x1
    25c0:	eor	w4, w4, w7, lsr #4
    25c4:	and	w4, w4, w5
    25c8:	lsl	w8, w4, #4
    25cc:	add	x9, x0, x8
    25d0:	ldr	x8, [x0, x8]
    25d4:	cmp	x7, x8
    25d8:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    25dc:	mov	w11, #0x1                   	// #1
    25e0:	mov	x10, #0x0                   	// #0
    25e4:	cmn	x8, #0x8
    25e8:	b.ne	2adc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x109c>  // b.any
    25ec:	cmp	x10, #0x0
    25f0:	ldr	w4, [x2, #8]
    25f4:	csel	x10, x10, x9, ne  // ne = any
    25f8:	str	w4, [x10, #8]
    25fc:	str	x7, [x10]
    2600:	ldr	w4, [x28, #96]
    2604:	add	w4, w4, #0x1
    2608:	str	w4, [x28, #96]
    260c:	b	2594 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xb54>
    2610:	mov	w0, #0x1                   	// #1
    2614:	str	w0, [sp, #124]
    2618:	cmp	w2, #0x1
    261c:	b.eq	1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>  // b.none
    2620:	str	w2, [sp, #124]
    2624:	b	2630 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbf0>
    2628:	ldr	w0, [sp, #124]
    262c:	cbnz	w0, 2818 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdd8>
    2630:	ldr	x1, [x28, #8]
    2634:	ldr	x0, [x1, #32]
    2638:	ldr	w2, [x1, #40]
    263c:	add	x2, x0, x2
    2640:	cmp	x0, x2
    2644:	b.eq	1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>  // b.none
    2648:	ldr	w4, [sp, #168]
    264c:	mov	x1, x0
    2650:	b	2660 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc20>
    2654:	add	x1, x1, #0x1
    2658:	cmp	x2, x1
    265c:	b.eq	2838 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdf8>  // b.none
    2660:	ldrb	w3, [x1]
    2664:	cmp	w4, w3
    2668:	b.ne	2654 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc14>  // b.any
    266c:	mov	w3, #0x1                   	// #1
    2670:	ldr	w4, [sp, #124]
    2674:	nop
    2678:	ldrb	w1, [x0]
    267c:	cmp	w1, w4
    2680:	b.eq	1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>  // b.none
    2684:	add	x0, x0, #0x1
    2688:	cmp	x2, x0
    268c:	b.ne	2678 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc38>  // b.any
    2690:	ldr	x0, [sp, #152]
    2694:	ldrb	w0, [x0, #8]
    2698:	cmp	w0, #0x10
    269c:	b.eq	1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>  // b.none
    26a0:	ldr	w0, [sp, #124]
    26a4:	cmp	w3, #0x0
    26a8:	ldr	w1, [sp, #168]
    26ac:	csel	w0, w0, w1, eq  // eq = none
    26b0:	str	w0, [sp, #124]
    26b4:	b	1fdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x59c>
    26b8:	mov	x0, x3
    26bc:	bl	0 <_ZdlPvm>
    26c0:	ldr	w2, [x28, #104]
    26c4:	ldr	x0, [x28, #88]
    26c8:	cbz	w2, 2320 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e0>
    26cc:	cmn	x22, #0x8
    26d0:	ccmn	x22, #0x10, #0x4, ne  // ne = any
    26d4:	b.eq	2b10 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x10d0>  // b.none
    26d8:	lsr	w3, w22, #9
    26dc:	sub	w1, w2, #0x1
    26e0:	eor	w3, w3, w22, lsr #4
    26e4:	ldr	w4, [x28, #96]
    26e8:	and	w3, w3, w1
    26ec:	add	w4, w4, #0x1
    26f0:	lsl	w5, w3, #4
    26f4:	add	x26, x0, x5
    26f8:	ldr	x5, [x0, x5]
    26fc:	cmp	x22, x5
    2700:	b.ne	28c0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe80>  // b.any
    2704:	str	w4, [x28, #96]
    2708:	b	1eb4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x474>
    270c:	mov	x0, x3
    2710:	bl	0 <_ZdlPvm>
    2714:	ldr	w2, [x28, #104]
    2718:	ldr	x0, [x28, #88]
    271c:	cbz	w2, 2320 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8e0>
    2720:	sub	w1, w2, #0x1
    2724:	ldr	w4, [x28, #96]
    2728:	and	w23, w23, w1
    272c:	add	w4, w4, #0x1
    2730:	lsl	w3, w23, #4
    2734:	add	x26, x0, x3
    2738:	ldr	x3, [x0, x3]
    273c:	cmp	x22, x3
    2740:	b.eq	2704 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcc4>  // b.none
    2744:	mov	w2, w23
    2748:	mov	w6, #0x1                   	// #1
    274c:	mov	x5, #0x0                   	// #0
    2750:	cmn	x3, #0x8
    2754:	b.ne	2b70 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1130>  // b.any
    2758:	cbz	x5, 1ea4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x464>
    275c:	mov	x26, x5
    2760:	ldr	x0, [x5]
    2764:	b	1ea8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x468>
    2768:	mov	w9, #0x1                   	// #1
    276c:	mov	x8, #0x0                   	// #0
    2770:	cmn	x6, #0x8
    2774:	b.ne	29a0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf60>  // b.any
    2778:	cmp	x8, #0x0
    277c:	ldr	w4, [x2, #8]
    2780:	csel	x8, x8, x7, ne  // ne = any
    2784:	str	w4, [x8, #8]
    2788:	str	x10, [x8]
    278c:	ldr	w4, [x28, #96]
    2790:	add	w4, w4, #0x1
    2794:	str	w4, [x28, #96]
    2798:	b	1dec <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3ac>
    279c:	add	w0, w5, w0
    27a0:	add	w4, w5, #0x1
    27a4:	and	w1, w3, w0
    27a8:	and	w0, w3, w0
    27ac:	lsl	x1, x1, #4
    27b0:	add	x5, x25, x1
    27b4:	ldr	x1, [x25, x1]
    27b8:	cmp	x22, x1
    27bc:	b.eq	1c74 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x234>  // b.none
    27c0:	mov	w5, w4
    27c4:	b	2050 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x610>
    27c8:	cbnz	w5, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    27cc:	ubfiz	x3, x2, #4, #32
    27d0:	add	x3, x0, x3
    27d4:	cmp	x0, x3
    27d8:	b.eq	22c4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x884>  // b.none
    27dc:	mov	x1, x0
    27e0:	str	x20, [x1], #16
    27e4:	cmp	x3, x1
    27e8:	b.ne	27e0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xda0>  // b.any
    27ec:	b	22c4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x884>
    27f0:	cbnz	w6, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    27f4:	ubfiz	x3, x2, #4, #32
    27f8:	add	x3, x0, x3
    27fc:	cmp	x0, x3
    2800:	b.eq	2268 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x828>  // b.none
    2804:	mov	x1, x0
    2808:	str	x20, [x1], #16
    280c:	cmp	x3, x1
    2810:	b.ne	2808 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xdc8>  // b.any
    2814:	b	2268 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x828>
    2818:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    281c:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2820:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2824:	add	x3, x3, #0x0
    2828:	add	x1, x1, #0x0
    282c:	add	x0, x0, #0x0
    2830:	mov	w2, #0xca                  	// #202
    2834:	bl	0 <__assert_fail>
    2838:	mov	w3, #0x0                   	// #0
    283c:	b	2670 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc30>
    2840:	add	w9, w11, w9
    2844:	cmp	x6, #0x0
    2848:	and	w4, w8, w9
    284c:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    2850:	csel	x6, x6, x10, ne  // ne = any
    2854:	add	w11, w11, #0x1
    2858:	lsl	x0, x4, #4
    285c:	and	w9, w8, w9
    2860:	add	x10, x25, x0
    2864:	ldr	x0, [x25, x0]
    2868:	cmp	x22, x0
    286c:	b.eq	1cd0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x290>  // b.none
    2870:	b	2088 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x648>
    2874:	cbnz	w4, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    2878:	ubfiz	x3, x2, #4, #32
    287c:	add	x3, x0, x3
    2880:	cmp	x0, x3
    2884:	b.eq	26c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc88>  // b.none
    2888:	mov	x1, x0
    288c:	str	x20, [x1], #16
    2890:	cmp	x3, x1
    2894:	b.ne	288c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe4c>  // b.any
    2898:	b	26c8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xc88>
    289c:	mov	w4, w5
    28a0:	mov	w8, #0x1                   	// #1
    28a4:	mov	x3, #0x0                   	// #0
    28a8:	cmn	x1, #0x8
    28ac:	b.ne	2a6c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x102c>  // b.any
    28b0:	cbz	x3, 20cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x68c>
    28b4:	mov	x6, x3
    28b8:	ldr	x0, [x3]
    28bc:	b	20d0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x690>
    28c0:	mov	w2, w3
    28c4:	mov	w7, #0x1                   	// #1
    28c8:	mov	x6, #0x0                   	// #0
    28cc:	cmn	x5, #0x8
    28d0:	b.ne	2bb8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1178>  // b.any
    28d4:	cbz	x6, 1ea4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x464>
    28d8:	mov	x26, x6
    28dc:	ldr	x0, [x6]
    28e0:	b	1ea8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x468>
    28e4:	cbnz	w4, 2bf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x11b0>
    28e8:	ubfiz	x3, x2, #4, #32
    28ec:	add	x3, x0, x3
    28f0:	cmp	x0, x3
    28f4:	b.eq	271c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcdc>  // b.none
    28f8:	mov	x1, x0
    28fc:	str	x20, [x1], #16
    2900:	cmp	x3, x1
    2904:	b.ne	28fc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xebc>  // b.any
    2908:	b	271c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xcdc>
    290c:	add	w4, w4, w6
    2910:	cmp	x26, #0x0
    2914:	and	w2, w1, w4
    2918:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    291c:	csel	x5, x5, x26, eq  // eq = none
    2920:	add	w6, w6, #0x1
    2924:	lsl	x0, x2, #4
    2928:	and	w4, w1, w4
    292c:	add	x7, x3, x0
    2930:	ldr	x0, [x3, x0]
    2934:	cmp	x22, x0
    2938:	b.ne	1e54 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x414>  // b.any
    293c:	mov	x5, x7
    2940:	b	1b8c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x14c>
    2944:	mov	w4, #0x1                   	// #1
    2948:	cmn	x3, #0x8
    294c:	b.eq	2628 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xbe8>  // b.none
    2950:	add	w0, w4, w0
    2954:	add	w4, w4, #0x1
    2958:	and	w3, w5, w0
    295c:	and	w0, w5, w0
    2960:	ldr	x7, [sp, #136]
    2964:	lsl	x3, x3, #4
    2968:	add	x6, x1, x3
    296c:	ldr	x3, [x1, x3]
    2970:	cmp	x7, x3
    2974:	b.ne	2948 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf08>  // b.any
    2978:	mov	x4, x6
    297c:	b	1f78 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x538>
    2980:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2984:	add	x3, x3, #0x0
    2988:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    298c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2990:	add	x1, x1, #0x0
    2994:	add	x0, x0, #0x0
    2998:	mov	w2, #0x69                  	// #105
    299c:	bl	0 <__assert_fail>
    29a0:	add	w4, w9, w4
    29a4:	cmp	x8, #0x0
    29a8:	and	w11, w5, w4
    29ac:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    29b0:	csel	x7, x7, x8, eq  // eq = none
    29b4:	add	w9, w9, #0x1
    29b8:	lsl	x6, x11, #4
    29bc:	and	w4, w5, w4
    29c0:	add	x11, x0, x6
    29c4:	ldr	x6, [x0, x6]
    29c8:	cmp	x10, x6
    29cc:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    29d0:	mov	x8, x7
    29d4:	mov	x7, x11
    29d8:	b	2770 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd30>
    29dc:	add	w4, w4, w10
    29e0:	cmp	x9, #0x0
    29e4:	and	w11, w6, w4
    29e8:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    29ec:	csel	x8, x8, x9, eq  // eq = none
    29f0:	add	w10, w10, #0x1
    29f4:	lsl	x7, x11, #4
    29f8:	and	w4, w6, w4
    29fc:	add	x11, x0, x7
    2a00:	ldr	x7, [x0, x7]
    2a04:	cmp	x12, x7
    2a08:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    2a0c:	mov	x9, x8
    2a10:	mov	x8, x11
    2a14:	b	221c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x7dc>
    2a18:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2a1c:	add	x3, x3, #0x0
    2a20:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2a24:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2a28:	add	x1, x1, #0x0
    2a2c:	add	x0, x0, #0x0
    2a30:	mov	w2, #0x250                 	// #592
    2a34:	bl	0 <__assert_fail>
    2a38:	add	w4, w11, w4
    2a3c:	cmp	x10, #0x0
    2a40:	and	w12, w6, w4
    2a44:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2a48:	csel	x10, x10, x9, ne  // ne = any
    2a4c:	add	w11, w11, #0x1
    2a50:	lsl	x8, x12, #4
    2a54:	and	w4, w6, w4
    2a58:	add	x9, x0, x8
    2a5c:	ldr	x8, [x0, x8]
    2a60:	cmp	x5, x8
    2a64:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    2a68:	b	24dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xa9c>
    2a6c:	add	w4, w4, w8
    2a70:	cmp	x3, #0x0
    2a74:	and	w5, w2, w4
    2a78:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    2a7c:	csel	x3, x3, x6, ne  // ne = any
    2a80:	add	w8, w8, #0x1
    2a84:	lsl	x1, x5, #4
    2a88:	and	w4, w2, w4
    2a8c:	add	x6, x0, x1
    2a90:	ldr	x1, [x0, x1]
    2a94:	cmp	x22, x1
    2a98:	b.ne	28a8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe68>  // b.any
    2a9c:	str	w7, [x28, #96]
    2aa0:	b	20dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x69c>
    2aa4:	add	w1, w8, w1
    2aa8:	cmp	x5, #0x0
    2aac:	and	w4, w2, w1
    2ab0:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2ab4:	csel	x5, x5, x6, ne  // ne = any
    2ab8:	add	w8, w8, #0x1
    2abc:	lsl	x3, x4, #4
    2ac0:	and	w1, w2, w1
    2ac4:	add	x6, x0, x3
    2ac8:	ldr	x3, [x0, x3]
    2acc:	cmp	x22, x3
    2ad0:	b.ne	2308 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x8c8>  // b.any
    2ad4:	str	w7, [x28, #96]
    2ad8:	b	20dc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x69c>
    2adc:	add	w4, w11, w4
    2ae0:	cmp	x10, #0x0
    2ae4:	and	w12, w5, w4
    2ae8:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    2aec:	csel	x10, x10, x9, ne  // ne = any
    2af0:	add	w11, w11, #0x1
    2af4:	lsl	x8, x12, #4
    2af8:	and	w4, w5, w4
    2afc:	add	x9, x0, x8
    2b00:	ldr	x8, [x0, x8]
    2b04:	cmp	x7, x8
    2b08:	b.eq	1e34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x3f4>  // b.none
    2b0c:	b	25e4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xba4>
    2b10:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b14:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b18:	add	x3, x3, #0x0
    2b1c:	b	2a24 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xfe4>
    2b20:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b24:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b28:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b2c:	add	x3, x3, #0x0
    2b30:	add	x1, x1, #0x0
    2b34:	add	x0, x0, #0x0
    2b38:	mov	w2, #0x43                  	// #67
    2b3c:	bl	0 <__assert_fail>
    2b40:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b44:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b48:	add	x3, x3, #0x0
    2b4c:	b	298c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xf4c>
    2b50:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b54:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b58:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2b5c:	add	x3, x3, #0x0
    2b60:	add	x1, x1, #0x0
    2b64:	add	x0, x0, #0x0
    2b68:	mov	w2, #0x108                 	// #264
    2b6c:	bl	0 <__assert_fail>
    2b70:	add	w2, w2, w6
    2b74:	cmp	x5, #0x0
    2b78:	and	w7, w1, w2
    2b7c:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    2b80:	csel	x5, x5, x26, ne  // ne = any
    2b84:	add	w6, w6, #0x1
    2b88:	lsl	x3, x7, #4
    2b8c:	and	w2, w1, w2
    2b90:	add	x26, x0, x3
    2b94:	ldr	x3, [x0, x3]
    2b98:	cmp	x22, x3
    2b9c:	b.ne	2750 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd10>  // b.any
    2ba0:	str	w4, [x28, #96]
    2ba4:	b	1eb4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x474>
    2ba8:	ldp	x21, x22, [sp, #32]
    2bac:	ldp	x23, x24, [sp, #48]
    2bb0:	ldp	x25, x26, [sp, #64]
    2bb4:	b	1aa4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x64>
    2bb8:	add	w2, w7, w2
    2bbc:	cmp	x6, #0x0
    2bc0:	and	w3, w1, w2
    2bc4:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    2bc8:	csel	x6, x6, x26, ne  // ne = any
    2bcc:	add	w7, w7, #0x1
    2bd0:	lsl	x3, x3, #4
    2bd4:	and	w2, w1, w2
    2bd8:	add	x26, x0, x3
    2bdc:	ldr	x5, [x0, x3]
    2be0:	cmp	x22, x5
    2be4:	b.ne	28cc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xe8c>  // b.any
    2be8:	str	w4, [x28, #96]
    2bec:	b	1eb4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x474>
    2bf0:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2bf4:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2bf8:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2bfc:	add	x3, x3, #0x0
    2c00:	add	x1, x1, #0x0
    2c04:	add	x0, x0, #0x0
    2c08:	mov	w2, #0x15b                 	// #347
    2c0c:	bl	0 <__assert_fail>
    2c10:	mov	w0, #0x0                   	// #0
    2c14:	b	1c98 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x258>
    2c18:	mov	x0, #0x0                   	// #0
    2c1c:	str	x5, [x0]
    2c20:	brk	#0x3e8
    2c24:	mov	x0, #0x0                   	// #0
    2c28:	str	x7, [x0]
    2c2c:	brk	#0x3e8
    2c30:	mov	x0, #0x0                   	// #0
    2c34:	str	x10, [x0]
    2c38:	brk	#0x3e8
    2c3c:	mov	x0, #0x0                   	// #0
    2c40:	str	x12, [x0]
    2c44:	brk	#0x3e8

0000000000002c48 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>:
    2c48:	stp	x29, x30, [sp, #-80]!
    2c4c:	mov	x29, sp
    2c50:	stp	x19, x20, [sp, #16]
    2c54:	mov	x20, x0
    2c58:	bl	ee8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>
    2c5c:	tst	w0, #0xff
    2c60:	b.eq	2db0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x168>  // b.none
    2c64:	stp	x23, x24, [sp, #48]
    2c68:	stp	x25, x26, [sp, #64]
    2c6c:	ldp	x24, x26, [x20, #112]
    2c70:	stp	x21, x22, [sp, #32]
    2c74:	cmp	x24, x26
    2c78:	b.eq	2e70 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x228>  // b.none
    2c7c:	mov	w22, #0x0                   	// #0
    2c80:	mov	w25, #0x18                  	// #24
    2c84:	b	2c94 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x4c>
    2c88:	add	x24, x24, #0x18
    2c8c:	cmp	x26, x24
    2c90:	b.eq	2df8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x1b0>  // b.none
    2c94:	ldr	x21, [x24]
    2c98:	mov	x0, x21
    2c9c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2ca0:	ldr	x0, [x21, #8]
    2ca4:	cbz	x0, 2cb0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x68>
    2ca8:	ldr	x0, [x0, #8]
    2cac:	cbz	x0, 2c88 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x40>
    2cb0:	ldrb	w23, [x21, #16]
    2cb4:	mov	x0, x21
    2cb8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2cbc:	ldr	x19, [x21, #8]
    2cc0:	sub	w23, w23, #0x3f
    2cc4:	and	w23, w23, #0xff
    2cc8:	cbnz	x19, 2d18 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xd0>
    2ccc:	b	2c88 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x40>
    2cd0:	cmn	x0, #0x8
    2cd4:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    2cd8:	b.eq	2e9c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x254>  // b.none
    2cdc:	lsr	w1, w0, #9
    2ce0:	sub	w5, w2, #0x1
    2ce4:	eor	w1, w1, w0, lsr #4
    2ce8:	and	w1, w1, w5
    2cec:	lsl	w4, w1, #4
    2cf0:	add	x6, x3, x4
    2cf4:	ldr	x4, [x3, x4]
    2cf8:	cmp	x0, x4
    2cfc:	b.ne	2dc0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x178>  // b.any
    2d00:	ubfiz	x2, x2, #4, #32
    2d04:	add	x2, x3, x2
    2d08:	cmp	x6, x2
    2d0c:	b.eq	2d48 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x100>  // b.none
    2d10:	ldr	x19, [x19, #8]
    2d14:	cbz	x19, 2c88 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x40>
    2d18:	mov	x0, x19
    2d1c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2d20:	cbz	x0, 2e50 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x208>
    2d24:	ldrb	w1, [x0, #16]
    2d28:	cmp	w1, #0x17
    2d2c:	b.ls	2d10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xc8>  // b.plast
    2d30:	ldr	x1, [x20, #72]
    2d34:	cmp	x1, x0
    2d38:	b.eq	2d10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xc8>  // b.none
    2d3c:	ldr	w2, [x20, #104]
    2d40:	ldr	x3, [x20, #88]
    2d44:	cbnz	w2, 2cd0 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x88>
    2d48:	cmp	w23, #0x1
    2d4c:	b.hi	2da4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.pmore
    2d50:	ldr	w0, [x21, #20]
    2d54:	ubfx	x0, x0, #0, #28
    2d58:	cbz	w0, 2ebc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x274>
    2d5c:	ldrb	w1, [x21, #23]
    2d60:	tbz	w1, #6, 2d88 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x140>
    2d64:	ldur	x0, [x21, #-8]
    2d68:	ldr	x0, [x0]
    2d6c:	ldr	x0, [x0]
    2d70:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2d74:	cmp	w22, #0x0
    2d78:	ccmp	w0, w22, #0x4, ne  // ne = any
    2d7c:	b.ne	2da4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.any
    2d80:	mov	w22, w0
    2d84:	b	2d10 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xc8>
    2d88:	umsubl	x0, w0, w25, x21
    2d8c:	ldr	x0, [x0]
    2d90:	ldr	x0, [x0]
    2d94:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2d98:	cmp	w22, #0x0
    2d9c:	ccmp	w0, w22, #0x4, ne  // ne = any
    2da0:	b.eq	2d80 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x138>  // b.none
    2da4:	ldp	x21, x22, [sp, #32]
    2da8:	ldp	x23, x24, [sp, #48]
    2dac:	ldp	x25, x26, [sp, #64]
    2db0:	mov	x0, #0x0                   	// #0
    2db4:	ldp	x19, x20, [sp, #16]
    2db8:	ldp	x29, x30, [sp], #80
    2dbc:	ret
    2dc0:	mov	w6, #0x1                   	// #1
    2dc4:	cmn	x4, #0x8
    2dc8:	b.eq	2d48 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x100>  // b.none
    2dcc:	add	w1, w6, w1
    2dd0:	add	w7, w6, #0x1
    2dd4:	and	w4, w5, w1
    2dd8:	and	w1, w5, w1
    2ddc:	lsl	x4, x4, #4
    2de0:	add	x6, x3, x4
    2de4:	ldr	x4, [x3, x4]
    2de8:	cmp	x0, x4
    2dec:	b.eq	2d00 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xb8>  // b.none
    2df0:	mov	w6, w7
    2df4:	b	2dc4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x17c>
    2df8:	ldr	x0, [x20, #72]
    2dfc:	ldur	x0, [x0, #-24]
    2e00:	ldr	x0, [x0]
    2e04:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2e08:	mov	w21, w0
    2e0c:	mov	x0, x20
    2e10:	bl	1a40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
    2e14:	mov	w19, w0
    2e18:	cmp	w21, w0
    2e1c:	b.ls	2da4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.plast
    2e20:	cmp	w22, #0x0
    2e24:	ccmp	w22, w0, #0x4, ne  // ne = any
    2e28:	b.ne	2da4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>  // b.any
    2e2c:	ldr	x0, [x20, #72]
    2e30:	bl	0 <_ZNK4llvm5Value10getContextEv>
    2e34:	mov	w1, w19
    2e38:	ldp	x19, x20, [sp, #16]
    2e3c:	ldp	x21, x22, [sp, #32]
    2e40:	ldp	x23, x24, [sp, #48]
    2e44:	ldp	x25, x26, [sp, #64]
    2e48:	ldp	x29, x30, [sp], #80
    2e4c:	b	0 <_ZN4llvm11IntegerType3getERNS_11LLVMContextEj>
    2e50:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2e54:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2e58:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2e5c:	add	x3, x3, #0x0
    2e60:	add	x1, x1, #0x0
    2e64:	add	x0, x0, #0x0
    2e68:	mov	w2, #0x69                  	// #105
    2e6c:	bl	0 <__assert_fail>
    2e70:	ldr	x0, [x20, #72]
    2e74:	ldur	x0, [x0, #-24]
    2e78:	ldr	x0, [x0]
    2e7c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    2e80:	mov	w21, w0
    2e84:	mov	x0, x20
    2e88:	bl	1a40 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
    2e8c:	mov	w19, w0
    2e90:	cmp	w21, w0
    2e94:	b.hi	2e2c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x1e4>  // b.pmore
    2e98:	b	2da4 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x15c>
    2e9c:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ea0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ea4:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ea8:	add	x3, x3, #0x0
    2eac:	add	x1, x1, #0x0
    2eb0:	add	x0, x0, #0x0
    2eb4:	mov	w2, #0x250                 	// #592
    2eb8:	bl	0 <__assert_fail>
    2ebc:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ec0:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ec4:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    2ec8:	add	x3, x3, #0x0
    2ecc:	add	x1, x1, #0x0
    2ed0:	add	x0, x0, #0x0
    2ed4:	mov	w2, #0xaa                  	// #170
    2ed8:	bl	0 <__assert_fail>
    2edc:	nop

0000000000002ee0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>:
    2ee0:	stp	x29, x30, [sp, #-80]!
    2ee4:	mov	x29, sp
    2ee8:	str	x25, [sp, #64]
    2eec:	ldr	x25, [x1, #80]
    2ef0:	stp	x19, x20, [sp, #16]
    2ef4:	mov	x20, x0
    2ef8:	stp	x21, x22, [sp, #32]
    2efc:	add	x21, x1, #0x48
    2f00:	add	x22, x0, #0x18
    2f04:	stp	x23, x24, [sp, #48]
    2f08:	cmp	x21, x25
    2f0c:	add	x23, x0, #0x28
    2f10:	b.eq	3004 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x124>  // b.none
    2f14:	nop
    2f18:	ldr	x0, [x25]
    2f1c:	tst	w0, #0x4
    2f20:	b.ne	31e4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x304>  // b.any
    2f24:	ldr	x0, [x20, #16]
    2f28:	ldr	w1, [x0, #48]
    2f2c:	ldr	x2, [x0, #32]
    2f30:	cbz	w1, 2ff8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>
    2f34:	cmp	x25, #0x8
    2f38:	sub	x3, x25, #0x18
    2f3c:	ccmn	x3, #0x8, #0x4, ne  // ne = any
    2f40:	b.eq	31f4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x314>  // b.none
    2f44:	lsr	w0, w3, #9
    2f48:	sub	w6, w1, #0x1
    2f4c:	eor	w0, w0, w3, lsr #4
    2f50:	and	w0, w0, w6
    2f54:	lsl	w5, w0, #4
    2f58:	add	x4, x2, x5
    2f5c:	ldr	x5, [x2, x5]
    2f60:	cmp	x3, x5
    2f64:	b.ne	3098 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1b8>  // b.any
    2f68:	ubfiz	x1, x1, #4, #32
    2f6c:	add	x1, x2, x1
    2f70:	cmp	x4, x1
    2f74:	b.eq	2ff8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>  // b.none
    2f78:	ldr	x0, [x4, #8]
    2f7c:	cbz	x0, 2ff8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>
    2f80:	ldr	x19, [x25, #24]
    2f84:	add	x24, x25, #0x10
    2f88:	cmp	x24, x19
    2f8c:	b.ne	2fa0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc0>  // b.any
    2f90:	b	2ff8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>
    2f94:	ldr	x19, [x19, #8]
    2f98:	cmp	x24, x19
    2f9c:	b.eq	2ff8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>  // b.none
    2fa0:	ldr	x2, [x19]
    2fa4:	tst	w2, #0x4
    2fa8:	b.ne	3180 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2a0>  // b.any
    2fac:	ldurb	w2, [x19, #-8]
    2fb0:	cmp	w2, #0x3e
    2fb4:	b.ne	2f94 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xb4>  // b.any
    2fb8:	ldp	w0, w1, [x20, #32]
    2fbc:	cmp	w0, w1
    2fc0:	b.cs	307c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x19c>  // b.hs, b.nlast
    2fc4:	ldr	x1, [x20, #24]
    2fc8:	sub	x2, x19, #0x18
    2fcc:	str	x2, [x1, w0, uxtw #3]
    2fd0:	ldp	w2, w0, [x20, #32]
    2fd4:	mov	w3, w2
    2fd8:	add	x3, x3, #0x1
    2fdc:	cmp	x3, x0
    2fe0:	b.hi	31b8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2d8>  // b.pmore
    2fe4:	ldr	x19, [x19, #8]
    2fe8:	add	w2, w2, #0x1
    2fec:	str	w2, [x20, #32]
    2ff0:	cmp	x24, x19
    2ff4:	b.ne	2fa0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc0>  // b.any
    2ff8:	ldr	x25, [x25, #8]
    2ffc:	cmp	x21, x25
    3000:	b.ne	2f18 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x38>  // b.any
    3004:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
    3008:	mov	w22, #0x0                   	// #0
    300c:	mov	x19, #0xfffffffffffffff8    	// #-8
    3010:	adrp	x23, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3014:	ldr	x21, [x21]
    3018:	b	3058 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x178>
    301c:	ldr	x3, [x20, #24]
    3020:	add	x2, x19, w0, uxtw #3
    3024:	ldr	w4, [x20, #36]
    3028:	mov	w1, w0
    302c:	sub	x1, x1, #0x1
    3030:	cmp	x1, x4
    3034:	ldr	x1, [x3, x2]
    3038:	b.hi	31b8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2d8>  // b.pmore
    303c:	sub	w0, w0, #0x1
    3040:	str	w0, [x20, #32]
    3044:	str	x1, [x20, #72]
    3048:	mov	x0, x20
    304c:	bl	2c48 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>
    3050:	mov	x24, x0
    3054:	cbnz	x0, 30d0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f0>
    3058:	ldr	w0, [x20, #32]
    305c:	cbnz	w0, 301c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x13c>
    3060:	mov	w0, w22
    3064:	ldp	x19, x20, [sp, #16]
    3068:	ldp	x21, x22, [sp, #32]
    306c:	ldp	x23, x24, [sp, #48]
    3070:	ldr	x25, [sp, #64]
    3074:	ldp	x29, x30, [sp], #80
    3078:	ret
    307c:	mov	x0, x22
    3080:	mov	x1, x23
    3084:	mov	x3, #0x8                   	// #8
    3088:	mov	x2, #0x0                   	// #0
    308c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3090:	ldr	w0, [x20, #32]
    3094:	b	2fc4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xe4>
    3098:	mov	w4, #0x1                   	// #1
    309c:	cmn	x5, #0x8
    30a0:	b.eq	2ff8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x118>  // b.none
    30a4:	add	w0, w0, w4
    30a8:	add	w7, w4, #0x1
    30ac:	and	w5, w6, w0
    30b0:	and	w0, w6, w0
    30b4:	lsl	x5, x5, #4
    30b8:	add	x4, x2, x5
    30bc:	ldr	x5, [x2, x5]
    30c0:	cmp	x3, x5
    30c4:	b.eq	2f68 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x88>  // b.none
    30c8:	mov	w4, w7
    30cc:	b	309c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1bc>
    30d0:	ldrb	w0, [x21]
    30d4:	cbnz	w0, 30ec <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x20c>
    30d8:	mov	x1, x24
    30dc:	mov	x0, x20
    30e0:	mov	w22, #0x1                   	// #1
    30e4:	bl	428 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>
    30e8:	b	3058 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x178>
    30ec:	add	x0, x23, #0x0
    30f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    30f4:	tst	w0, #0xff
    30f8:	b.eq	30d8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f8>  // b.none
    30fc:	bl	0 <_ZN4llvm4dbgsEv>
    3100:	mov	x2, x0
    3104:	ldp	x3, x1, [x0, #16]
    3108:	sub	x3, x3, x1
    310c:	cmp	x3, #0x43
    3110:	b.ls	31a0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2c0>  // b.plast
    3114:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3118:	add	x0, x0, #0x0
    311c:	ldp	x4, x5, [x0]
    3120:	stp	x4, x5, [x1]
    3124:	ldr	w3, [x0, #64]
    3128:	ldp	x4, x5, [x0, #16]
    312c:	stp	x4, x5, [x1, #16]
    3130:	ldp	x4, x5, [x0, #32]
    3134:	stp	x4, x5, [x1, #32]
    3138:	ldp	x4, x5, [x0, #48]
    313c:	stp	x4, x5, [x1, #48]
    3140:	str	w3, [x1, #64]
    3144:	ldr	x0, [x2, #24]
    3148:	add	x0, x0, #0x44
    314c:	str	x0, [x2, #24]
    3150:	ldr	x1, [x20, #72]
    3154:	mov	x0, x2
    3158:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    315c:	mov	x1, x0
    3160:	ldp	x3, x2, [x0, #16]
    3164:	cmp	x2, x3
    3168:	b.cs	31d8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2f8>  // b.hs, b.nlast
    316c:	add	x0, x2, #0x1
    3170:	str	x0, [x1, #24]
    3174:	mov	w0, #0xa                   	// #10
    3178:	strb	w0, [x2]
    317c:	b	30d8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f8>
    3180:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3184:	add	x3, x3, #0x0
    3188:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    318c:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3190:	add	x1, x1, #0x0
    3194:	add	x0, x0, #0x0
    3198:	mov	w2, #0x8b                  	// #139
    319c:	bl	0 <__assert_fail>
    31a0:	mov	x2, #0x44                  	// #68
    31a4:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31a8:	add	x1, x1, #0x0
    31ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    31b0:	mov	x2, x0
    31b4:	b	3150 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x270>
    31b8:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31bc:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31c0:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31c4:	add	x3, x3, #0x0
    31c8:	add	x1, x1, #0x0
    31cc:	add	x0, x0, #0x0
    31d0:	mov	w2, #0x43                  	// #67
    31d4:	bl	0 <__assert_fail>
    31d8:	mov	w1, #0xa                   	// #10
    31dc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    31e0:	b	30d8 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1f8>
    31e4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31e8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31ec:	add	x3, x3, #0x0
    31f0:	b	318c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2ac>
    31f4:	adrp	x3, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31f8:	adrp	x1, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    31fc:	adrp	x0, 0 <_ZN4llvm13isa_impl_wrapINS_11InstructionEPKNS_5ValueES4_E4doitERKS4_.isra.0.part.0>
    3200:	add	x3, x3, #0x0
    3204:	add	x1, x1, #0x0
    3208:	add	x0, x0, #0x0
    320c:	mov	w2, #0x250                 	// #592
    3210:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x25, x26, [sp, #64]
  18:	ldp	x22, x25, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x20, x0
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x24, x1
  2c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  30:	str	x27, [sp, #80]
  34:	movk	x1, #0x555, lsl #48
  38:	sub	x0, x25, x22
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	1b0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x1b0>  // b.none
  4c:	mov	x26, x2
  50:	sub	x27, x24, x22
  54:	cbz	x0, 194 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x194>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x23, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	180 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x180>  // b.plast
  68:	mov	x0, x23
  6c:	bl	0 <_Znwm>
  70:	mov	x21, x0
  74:	add	x23, x0, x23
  78:	add	x19, x0, #0x18
  7c:	add	x0, x21, x27
  80:	cmp	x24, x22
  84:	ldp	x2, x3, [x26]
  88:	ldr	x1, [x26, #16]
  8c:	stp	x2, x3, [x0]
  90:	str	x1, [x0, #16]
  94:	b.eq	f0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xf0>  // b.none
  98:	mov	x4, x21
  9c:	mov	x3, x22
  a0:	ldp	x0, x1, [x3]
  a4:	stp	x0, x1, [x4]
  a8:	add	x3, x3, #0x18
  ac:	ldur	x0, [x3, #-8]
  b0:	str	x0, [x4, #16]
  b4:	cmp	x24, x3
  b8:	add	x4, x4, #0x18
  bc:	b.ne	a0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xa0>  // b.any
  c0:	sub	x19, x24, #0x18
  c4:	mov	x0, #0xaaab                	// #43691
  c8:	sub	x19, x19, x22
  cc:	movk	x0, #0xaaaa, lsl #16
  d0:	movk	x0, #0xaaaa, lsl #32
  d4:	lsr	x19, x19, #3
  d8:	movk	x0, #0xaaa, lsl #48
  dc:	mul	x19, x19, x0
  e0:	and	x19, x19, #0x1fffffffffffffff
  e4:	add	x19, x19, #0x2
  e8:	add	x19, x19, x19, lsl #1
  ec:	add	x19, x21, x19, lsl #3
  f0:	cmp	x24, x25
  f4:	b.eq	150 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x150>  // b.none
  f8:	mov	x2, x24
  fc:	mov	x3, x19
 100:	ldp	x4, x5, [x2]
 104:	stp	x4, x5, [x3]
 108:	add	x2, x2, #0x18
 10c:	ldur	x0, [x2, #-8]
 110:	str	x0, [x3, #16]
 114:	cmp	x2, x25
 118:	add	x3, x3, #0x18
 11c:	b.ne	100 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x100>  // b.any
 120:	sub	x1, x2, x24
 124:	mov	x0, #0xaaab                	// #43691
 128:	sub	x1, x1, #0x18
 12c:	movk	x0, #0xaaaa, lsl #16
 130:	movk	x0, #0xaaaa, lsl #32
 134:	lsr	x1, x1, #3
 138:	movk	x0, #0xaaa, lsl #48
 13c:	mul	x1, x1, x0
 140:	and	x1, x1, #0x1fffffffffffffff
 144:	add	x1, x1, #0x1
 148:	add	x1, x1, x1, lsl #1
 14c:	add	x19, x19, x1, lsl #3
 150:	cbz	x22, 15c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x15c>
 154:	mov	x0, x22
 158:	bl	0 <_ZdlPv>
 15c:	ldp	x25, x26, [sp, #64]
 160:	ldr	x27, [sp, #80]
 164:	stp	x21, x19, [x20]
 168:	str	x23, [x20, #16]
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x29, x30, [sp], #96
 17c:	ret
 180:	cbnz	x0, 19c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x19c>
 184:	mov	x19, #0x18                  	// #24
 188:	mov	x23, #0x0                   	// #0
 18c:	mov	x21, #0x0                   	// #0
 190:	b	7c <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x7c>
 194:	mov	x23, #0x18                  	// #24
 198:	b	68 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x68>
 19c:	cmp	x0, x1
 1a0:	mov	x23, #0x18                  	// #24
 1a4:	csel	x0, x0, x1, ls  // ls = plast
 1a8:	mul	x23, x0, x23
 1ac:	b	68 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x68>
 1b0:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>
 1b4:	add	x0, x0, #0x0
 1b8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	30 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_+0x30>  // b.none
  14:	ldp	x4, x5, [x2]
  18:	stp	x4, x5, [x1]
  1c:	add	x0, x1, #0x18
  20:	ldr	x2, [x2, #16]
  24:	str	x2, [x1, #16]
  28:	str	x0, [x3, #8]
  2c:	ret
  30:	b	0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_>

Disassembly of section .text._ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_:

0000000000000000 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	ldr	w23, [x0, #24]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x1
  20:	stp	x25, x26, [sp, #64]
  24:	ldr	x20, [x1]
  28:	ldr	x25, [x0, #8]
  2c:	cbz	w23, 224 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x224>
  30:	cmn	x20, #0x10
  34:	ccmn	x20, #0x8, #0x4, ne  // ne = any
  38:	b.eq	55c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x55c>  // b.none
  3c:	lsr	w22, w20, #9
  40:	sub	w1, w23, #0x1
  44:	eor	w22, w22, w20, lsr #4
  48:	and	w2, w22, w1
  4c:	lsl	w0, w2, #4
  50:	add	x3, x25, x0
  54:	ldr	x26, [x25, x0]
  58:	cmp	x20, x26
  5c:	b.ne	8c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x8c>  // b.any
  60:	ldr	w1, [x3, #8]
  64:	ldr	x0, [x19, #32]
  68:	mov	w2, #0x18                  	// #24
  6c:	ldp	x19, x20, [sp, #16]
  70:	umaddl	x0, w1, w2, x0
  74:	ldp	x21, x22, [sp, #32]
  78:	add	x0, x0, #0x8
  7c:	ldp	x23, x24, [sp, #48]
  80:	ldp	x25, x26, [sp, #64]
  84:	ldp	x29, x30, [sp], #112
  88:	ret
  8c:	mov	w0, #0x1                   	// #1
  90:	mov	x24, #0x0                   	// #0
  94:	cmn	x26, #0x8
  98:	b.ne	4b0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4b0>  // b.any
  9c:	ldr	x4, [x19]
  a0:	lsl	w0, w23, #1
  a4:	ldr	w2, [x19, #16]
  a8:	cmp	x24, #0x0
  ac:	add	x4, x4, #0x1
  b0:	str	x4, [x19]
  b4:	add	w2, w2, #0x1
  b8:	add	w4, w0, w23
  bc:	csel	x24, x24, x3, ne  // ne = any
  c0:	cmp	w4, w2, lsl #2
  c4:	b.ls	234 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x234>  // b.plast
  c8:	ldr	w0, [x19, #20]
  cc:	sub	w0, w23, w0
  d0:	sub	w0, w0, w2
  d4:	cmp	w0, w23, lsr #3
  d8:	b.ls	13c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x13c>  // b.plast
  dc:	ldr	x0, [x24]
  e0:	str	w2, [x19, #16]
  e4:	cmn	x0, #0x8
  e8:	b.eq	f8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xf8>  // b.none
  ec:	ldr	w0, [x19, #20]
  f0:	sub	w0, w0, #0x1
  f4:	str	w0, [x19, #20]
  f8:	str	x20, [x24]
  fc:	add	x1, sp, #0x58
 100:	str	wzr, [x24, #8]
 104:	add	x0, x19, #0x20
 108:	ldr	x2, [x21]
 10c:	stp	x2, xzr, [sp, #88]
 110:	str	xzr, [sp, #104]
 114:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 118:	ldp	x0, x1, [x19, #32]
 11c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 120:	movk	x2, #0xaaab
 124:	sub	x1, x1, x0
 128:	asr	x1, x1, #3
 12c:	mul	x1, x1, x2
 130:	sub	w1, w1, #0x1
 134:	str	w1, [x24, #8]
 138:	b	68 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x68>
 13c:	mov	w2, w1
 140:	lsr	w0, w1, #1
 144:	orr	x0, x0, x2
 148:	mov	w1, #0x40                  	// #64
 14c:	orr	x0, x0, x0, lsr #2
 150:	orr	x0, x0, x0, lsr #4
 154:	orr	x0, x0, x0, lsr #8
 158:	orr	x0, x0, x0, lsr #16
 15c:	add	x0, x0, #0x1
 160:	cmp	w0, w1
 164:	csel	w0, w0, w1, cs  // cs = hs, nlast
 168:	str	w0, [x19, #24]
 16c:	ubfiz	x0, x0, #4, #32
 170:	bl	0 <_Znwm>
 174:	ldr	w3, [x19, #24]
 178:	stp	x0, xzr, [x19, #8]
 17c:	sub	w1, w3, #0x1
 180:	and	w2, w1, w3
 184:	cbz	x25, 488 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x488>
 188:	ubfiz	x1, x23, #4, #32
 18c:	add	x9, x25, x1
 190:	cbnz	w2, 5ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5ec>
 194:	ubfiz	x3, x3, #4, #32
 198:	mov	x2, x0
 19c:	add	x3, x0, x3
 1a0:	cmp	x0, x3
 1a4:	b.eq	1b4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1b4>  // b.none
 1a8:	str	x26, [x2], #16
 1ac:	cmp	x3, x2
 1b0:	b.ne	1a8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1a8>  // b.any
 1b4:	mov	x2, x25
 1b8:	b	1c8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1c8>
 1bc:	add	x2, x2, #0x10
 1c0:	cmp	x9, x2
 1c4:	b.eq	3ac <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3ac>  // b.none
 1c8:	ldr	x3, [x2]
 1cc:	cmn	x3, #0x10
 1d0:	ccmn	x3, #0x8, #0x4, ne  // ne = any
 1d4:	b.eq	1bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1bc>  // b.none
 1d8:	ldr	w5, [x19, #24]
 1dc:	cbz	w5, 60c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x60c>
 1e0:	lsr	w4, w3, #9
 1e4:	sub	w5, w5, #0x1
 1e8:	eor	w4, w4, w3, lsr #4
 1ec:	and	w4, w4, w5
 1f0:	lsl	w6, w4, #4
 1f4:	add	x7, x0, x6
 1f8:	ldr	x6, [x0, x6]
 1fc:	cmp	x3, x6
 200:	b.ne	424 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x424>  // b.any
 204:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 208:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 20c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 210:	add	x3, x3, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x0, x0, #0x0
 21c:	mov	w2, #0x17a                 	// #378
 220:	bl	0 <__assert_fail>
 224:	ldr	x1, [x19]
 228:	mov	w0, #0x0                   	// #0
 22c:	add	x1, x1, #0x1
 230:	str	x1, [x19]
 234:	sub	w0, w0, #0x1
 238:	mov	w1, #0x40                  	// #64
 23c:	orr	x0, x0, x0, lsr #1
 240:	orr	x0, x0, x0, lsr #2
 244:	orr	x0, x0, x0, lsr #4
 248:	orr	x0, x0, x0, lsr #8
 24c:	orr	x0, x0, x0, lsr #16
 250:	add	x0, x0, #0x1
 254:	cmp	w0, w1
 258:	csel	w0, w0, w1, cs  // cs = hs, nlast
 25c:	str	w0, [x19, #24]
 260:	ubfiz	x0, x0, #4, #32
 264:	bl	0 <_Znwm>
 268:	ldr	w3, [x19, #24]
 26c:	stp	x0, xzr, [x19, #8]
 270:	sub	w1, w3, #0x1
 274:	and	w2, w1, w3
 278:	cbz	x25, 458 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x458>
 27c:	ubfiz	x1, x23, #4, #32
 280:	add	x9, x25, x1
 284:	cbnz	w2, 5ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5ec>
 288:	ubfiz	x3, x3, #4, #32
 28c:	mov	x2, x0
 290:	add	x3, x0, x3
 294:	mov	x4, #0xfffffffffffffff8    	// #-8
 298:	cmp	x0, x3
 29c:	b.eq	2ac <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2ac>  // b.none
 2a0:	str	x4, [x2], #16
 2a4:	cmp	x3, x2
 2a8:	b.ne	2a0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2a0>  // b.any
 2ac:	cmp	x25, x9
 2b0:	mov	x2, x25
 2b4:	b.ne	2c8 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2c8>  // b.any
 2b8:	b	338 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x338>
 2bc:	add	x2, x2, #0x10
 2c0:	cmp	x9, x2
 2c4:	b.eq	338 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x338>  // b.none
 2c8:	ldr	x3, [x2]
 2cc:	cmn	x3, #0x8
 2d0:	ccmn	x3, #0x10, #0x4, ne  // ne = any
 2d4:	b.eq	2bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2bc>  // b.none
 2d8:	ldr	w5, [x19, #24]
 2dc:	cbz	w5, 60c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x60c>
 2e0:	lsr	w4, w3, #9
 2e4:	sub	w5, w5, #0x1
 2e8:	eor	w4, w4, w3, lsr #4
 2ec:	and	w4, w4, w5
 2f0:	lsl	w6, w4, #4
 2f4:	add	x7, x0, x6
 2f8:	ldr	x6, [x0, x6]
 2fc:	cmp	x3, x6
 300:	b.eq	204 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x204>  // b.none
 304:	mov	w10, #0x1                   	// #1
 308:	mov	x8, #0x0                   	// #0
 30c:	cmn	x6, #0x8
 310:	b.ne	4e4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4e4>  // b.any
 314:	cmp	x8, #0x0
 318:	ldr	w4, [x2, #8]
 31c:	csel	x8, x8, x7, ne  // ne = any
 320:	str	w4, [x8, #8]
 324:	str	x3, [x8]
 328:	ldr	w3, [x19, #16]
 32c:	add	w3, w3, #0x1
 330:	str	w3, [x19, #16]
 334:	b	2bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x2bc>
 338:	mov	x0, x25
 33c:	bl	0 <_ZdlPvm>
 340:	ldr	w3, [x19, #24]
 344:	ldr	x0, [x19, #8]
 348:	cbz	w3, 404 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x404>
 34c:	cmn	x20, #0x8
 350:	ccmn	x20, #0x10, #0x4, ne  // ne = any
 354:	b.eq	55c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x55c>  // b.none
 358:	lsr	w1, w20, #9
 35c:	sub	w3, w3, #0x1
 360:	eor	w1, w1, w20, lsr #4
 364:	ldr	w2, [x19, #16]
 368:	and	w1, w1, w3
 36c:	add	w2, w2, #0x1
 370:	lsl	w4, w1, #4
 374:	add	x24, x0, x4
 378:	ldr	x4, [x0, x4]
 37c:	cmp	x20, x4
 380:	b.ne	38c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x38c>  // b.any
 384:	str	w2, [x19, #16]
 388:	b	ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xec>
 38c:	mov	w6, #0x1                   	// #1
 390:	mov	x5, #0x0                   	// #0
 394:	cmn	x4, #0x8
 398:	b.ne	5b4 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5b4>  // b.any
 39c:	cbz	x5, dc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xdc>
 3a0:	mov	x24, x5
 3a4:	ldr	x0, [x5]
 3a8:	b	e0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xe0>
 3ac:	mov	x0, x25
 3b0:	bl	0 <_ZdlPvm>
 3b4:	ldr	w3, [x19, #24]
 3b8:	ldr	x0, [x19, #8]
 3bc:	cbz	w3, 404 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x404>
 3c0:	sub	w3, w3, #0x1
 3c4:	ldr	w2, [x19, #16]
 3c8:	and	w22, w22, w3
 3cc:	add	w2, w2, #0x1
 3d0:	lsl	w1, w22, #4
 3d4:	add	x24, x0, x1
 3d8:	ldr	x1, [x0, x1]
 3dc:	cmp	x20, x1
 3e0:	b.eq	384 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x384>  // b.none
 3e4:	mov	w5, #0x1                   	// #1
 3e8:	mov	x4, #0x0                   	// #0
 3ec:	cmn	x1, #0x8
 3f0:	b.ne	57c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x57c>  // b.any
 3f4:	cbz	x4, dc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xdc>
 3f8:	mov	x24, x4
 3fc:	ldr	x0, [x4]
 400:	b	e0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xe0>
 404:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 408:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 40c:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 410:	add	x3, x3, #0x0
 414:	add	x1, x1, #0x0
 418:	add	x0, x0, #0x0
 41c:	mov	w2, #0x22f                 	// #559
 420:	bl	0 <__assert_fail>
 424:	mov	w10, #0x1                   	// #1
 428:	mov	x8, #0x0                   	// #0
 42c:	cmn	x6, #0x8
 430:	b.ne	520 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x520>  // b.any
 434:	cmp	x8, #0x0
 438:	ldr	w4, [x2, #8]
 43c:	csel	x8, x8, x7, ne  // ne = any
 440:	str	w4, [x8, #8]
 444:	str	x3, [x8]
 448:	ldr	w3, [x19, #16]
 44c:	add	w3, w3, #0x1
 450:	str	w3, [x19, #16]
 454:	b	1bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x1bc>
 458:	cbnz	w2, 5ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5ec>
 45c:	ubfiz	x2, x3, #4, #32
 460:	add	x2, x0, x2
 464:	cmp	x0, x2
 468:	b.eq	348 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x348>  // b.none
 46c:	mov	x1, x0
 470:	mov	x4, #0xfffffffffffffff8    	// #-8
 474:	nop
 478:	str	x4, [x1], #16
 47c:	cmp	x2, x1
 480:	b.ne	478 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x478>  // b.any
 484:	b	348 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x348>
 488:	cbnz	w2, 5ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x5ec>
 48c:	ubfiz	x2, x3, #4, #32
 490:	add	x2, x0, x2
 494:	cmp	x0, x2
 498:	b.eq	3bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3bc>  // b.none
 49c:	mov	x1, x0
 4a0:	str	x26, [x1], #16
 4a4:	cmp	x2, x1
 4a8:	b.ne	4a0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x4a0>  // b.any
 4ac:	b	3bc <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3bc>
 4b0:	add	w2, w0, w2
 4b4:	cmp	x24, #0x0
 4b8:	and	w4, w1, w2
 4bc:	ccmn	x26, #0x10, #0x0, eq  // eq = none
 4c0:	csel	x24, x24, x3, ne  // ne = any
 4c4:	add	w0, w0, #0x1
 4c8:	lsl	x4, x4, #4
 4cc:	and	w2, w1, w2
 4d0:	add	x3, x25, x4
 4d4:	ldr	x26, [x25, x4]
 4d8:	cmp	x20, x26
 4dc:	b.eq	60 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x60>  // b.none
 4e0:	b	94 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x94>
 4e4:	add	w4, w10, w4
 4e8:	cmp	x8, #0x0
 4ec:	and	w11, w5, w4
 4f0:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 4f4:	csel	x7, x7, x8, eq  // eq = none
 4f8:	add	w10, w10, #0x1
 4fc:	lsl	x6, x11, #4
 500:	and	w4, w5, w4
 504:	add	x11, x0, x6
 508:	ldr	x6, [x0, x6]
 50c:	cmp	x3, x6
 510:	b.eq	204 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x204>  // b.none
 514:	mov	x8, x7
 518:	mov	x7, x11
 51c:	b	30c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x30c>
 520:	add	w4, w4, w10
 524:	cmp	x8, #0x0
 528:	and	w11, w5, w4
 52c:	ccmn	x6, #0x10, #0x0, eq  // eq = none
 530:	csel	x7, x7, x8, eq  // eq = none
 534:	add	w10, w10, #0x1
 538:	lsl	x6, x11, #4
 53c:	and	w4, w5, w4
 540:	add	x11, x0, x6
 544:	ldr	x6, [x0, x6]
 548:	cmp	x3, x6
 54c:	b.eq	204 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x204>  // b.none
 550:	mov	x8, x7
 554:	mov	x7, x11
 558:	b	42c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x42c>
 55c:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 560:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 564:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 568:	add	x3, x3, #0x0
 56c:	add	x1, x1, #0x0
 570:	add	x0, x0, #0x0
 574:	mov	w2, #0x250                 	// #592
 578:	bl	0 <__assert_fail>
 57c:	add	w22, w5, w22
 580:	cmp	x4, #0x0
 584:	and	w6, w3, w22
 588:	ccmn	x1, #0x10, #0x0, eq  // eq = none
 58c:	csel	x4, x4, x24, ne  // ne = any
 590:	add	w5, w5, #0x1
 594:	lsl	x1, x6, #4
 598:	and	w22, w3, w22
 59c:	add	x24, x0, x6, lsl #4
 5a0:	ldr	x1, [x0, x1]
 5a4:	cmp	x20, x1
 5a8:	b.ne	3ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x3ec>  // b.any
 5ac:	str	w2, [x19, #16]
 5b0:	b	ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xec>
 5b4:	add	w1, w6, w1
 5b8:	cmp	x5, #0x0
 5bc:	and	w7, w3, w1
 5c0:	ccmn	x4, #0x10, #0x0, eq  // eq = none
 5c4:	csel	x5, x5, x24, ne  // ne = any
 5c8:	add	w6, w6, #0x1
 5cc:	lsl	x4, x7, #4
 5d0:	and	w1, w3, w1
 5d4:	add	x24, x0, x7, lsl #4
 5d8:	ldr	x4, [x0, x4]
 5dc:	cmp	x20, x4
 5e0:	b.ne	394 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x394>  // b.any
 5e4:	str	w2, [x19, #16]
 5e8:	b	ec <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0xec>
 5ec:	adrp	x3, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5f0:	adrp	x1, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5f4:	adrp	x0, 0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
 5f8:	add	x3, x3, #0x0
 5fc:	add	x1, x1, #0x0
 600:	add	x0, x0, #0x0
 604:	mov	w2, #0x15b                 	// #347
 608:	bl	0 <__assert_fail>
 60c:	mov	x0, #0x0                   	// #0
 610:	str	x3, [x0]
 614:	brk	#0x3e8
