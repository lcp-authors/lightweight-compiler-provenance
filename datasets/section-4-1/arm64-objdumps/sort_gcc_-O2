
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004026d8 <.init>:
  4026d8:	stp	x29, x30, [sp, #-16]!
  4026dc:	mov	x29, sp
  4026e0:	bl	4052f8 <ferror@plt+0x24b8>
  4026e4:	ldp	x29, x30, [sp], #16
  4026e8:	ret

Disassembly of section .plt:

00000000004026f0 <mbrtowc@plt-0x20>:
  4026f0:	stp	x16, x30, [sp, #-16]!
  4026f4:	adrp	x16, 428000 <_obstack_memory_used@@Base+0x16498>
  4026f8:	ldr	x17, [x16, #4088]
  4026fc:	add	x16, x16, #0xff8
  402700:	br	x17
  402704:	nop
  402708:	nop
  40270c:	nop

0000000000402710 <mbrtowc@plt>:
  402710:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16]
  402718:	add	x16, x16, #0x0
  40271c:	br	x17

0000000000402720 <memcpy@plt>:
  402720:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #8]
  402728:	add	x16, x16, #0x8
  40272c:	br	x17

0000000000402730 <memmove@plt>:
  402730:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #16]
  402738:	add	x16, x16, #0x10
  40273c:	br	x17

0000000000402740 <pthread_sigmask@plt>:
  402740:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #24]
  402748:	add	x16, x16, #0x18
  40274c:	br	x17

0000000000402750 <_exit@plt>:
  402750:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #32]
  402758:	add	x16, x16, #0x20
  40275c:	br	x17

0000000000402760 <fwrite_unlocked@plt>:
  402760:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #40]
  402768:	add	x16, x16, #0x28
  40276c:	br	x17

0000000000402770 <strtoul@plt>:
  402770:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #48]
  402778:	add	x16, x16, #0x30
  40277c:	br	x17

0000000000402780 <strlen@plt>:
  402780:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #56]
  402788:	add	x16, x16, #0x38
  40278c:	br	x17

0000000000402790 <exit@plt>:
  402790:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #64]
  402798:	add	x16, x16, #0x40
  40279c:	br	x17

00000000004027a0 <raise@plt>:
  4027a0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #72]
  4027a8:	add	x16, x16, #0x48
  4027ac:	br	x17

00000000004027b0 <error@plt>:
  4027b0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #80]
  4027b8:	add	x16, x16, #0x50
  4027bc:	br	x17

00000000004027c0 <sysinfo@plt>:
  4027c0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #88]
  4027c8:	add	x16, x16, #0x58
  4027cc:	br	x17

00000000004027d0 <getuid@plt>:
  4027d0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #96]
  4027d8:	add	x16, x16, #0x60
  4027dc:	br	x17

00000000004027e0 <pipe@plt>:
  4027e0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #104]
  4027e8:	add	x16, x16, #0x68
  4027ec:	br	x17

00000000004027f0 <__cxa_atexit@plt>:
  4027f0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #112]
  4027f8:	add	x16, x16, #0x70
  4027fc:	br	x17

0000000000402800 <iswcntrl@plt>:
  402800:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #120]
  402808:	add	x16, x16, #0x78
  40280c:	br	x17

0000000000402810 <qsort@plt>:
  402810:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #128]
  402818:	add	x16, x16, #0x80
  40281c:	br	x17

0000000000402820 <setvbuf@plt>:
  402820:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #136]
  402828:	add	x16, x16, #0x88
  40282c:	br	x17

0000000000402830 <euidaccess@plt>:
  402830:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #144]
  402838:	add	x16, x16, #0x90
  40283c:	br	x17

0000000000402840 <fork@plt>:
  402840:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #152]
  402848:	add	x16, x16, #0x98
  40284c:	br	x17

0000000000402850 <lseek@plt>:
  402850:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #160]
  402858:	add	x16, x16, #0xa0
  40285c:	br	x17

0000000000402860 <__fpending@plt>:
  402860:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #168]
  402868:	add	x16, x16, #0xa8
  40286c:	br	x17

0000000000402870 <localeconv@plt>:
  402870:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #176]
  402878:	add	x16, x16, #0xb0
  40287c:	br	x17

0000000000402880 <fileno@plt>:
  402880:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #184]
  402888:	add	x16, x16, #0xb8
  40288c:	br	x17

0000000000402890 <signal@plt>:
  402890:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #192]
  402898:	add	x16, x16, #0xc0
  40289c:	br	x17

00000000004028a0 <fclose@plt>:
  4028a0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #200]
  4028a8:	add	x16, x16, #0xc8
  4028ac:	br	x17

00000000004028b0 <getpid@plt>:
  4028b0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #208]
  4028b8:	add	x16, x16, #0xd0
  4028bc:	br	x17

00000000004028c0 <nl_langinfo@plt>:
  4028c0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #216]
  4028c8:	add	x16, x16, #0xd8
  4028cc:	br	x17

00000000004028d0 <fopen@plt>:
  4028d0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #224]
  4028d8:	add	x16, x16, #0xe0
  4028dc:	br	x17

00000000004028e0 <malloc@plt>:
  4028e0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #232]
  4028e8:	add	x16, x16, #0xe8
  4028ec:	br	x17

00000000004028f0 <wcwidth@plt>:
  4028f0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #240]
  4028f8:	add	x16, x16, #0xf0
  4028fc:	br	x17

0000000000402900 <open@plt>:
  402900:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #248]
  402908:	add	x16, x16, #0xf8
  40290c:	br	x17

0000000000402910 <getppid@plt>:
  402910:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #256]
  402918:	add	x16, x16, #0x100
  40291c:	br	x17

0000000000402920 <sigemptyset@plt>:
  402920:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #264]
  402928:	add	x16, x16, #0x108
  40292c:	br	x17

0000000000402930 <pthread_cond_signal@plt>:
  402930:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #272]
  402938:	add	x16, x16, #0x110
  40293c:	br	x17

0000000000402940 <strncmp@plt>:
  402940:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #280]
  402948:	add	x16, x16, #0x118
  40294c:	br	x17

0000000000402950 <bindtextdomain@plt>:
  402950:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #288]
  402958:	add	x16, x16, #0x120
  40295c:	br	x17

0000000000402960 <__libc_start_main@plt>:
  402960:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #296]
  402968:	add	x16, x16, #0x128
  40296c:	br	x17

0000000000402970 <fgetc@plt>:
  402970:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #304]
  402978:	add	x16, x16, #0x130
  40297c:	br	x17

0000000000402980 <__printf_chk@plt>:
  402980:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #312]
  402988:	add	x16, x16, #0x138
  40298c:	br	x17

0000000000402990 <memset@plt>:
  402990:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #320]
  402998:	add	x16, x16, #0x140
  40299c:	br	x17

00000000004029a0 <fdopen@plt>:
  4029a0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #328]
  4029a8:	add	x16, x16, #0x148
  4029ac:	br	x17

00000000004029b0 <gettimeofday@plt>:
  4029b0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #336]
  4029b8:	add	x16, x16, #0x150
  4029bc:	br	x17

00000000004029c0 <__strtoul_internal@plt>:
  4029c0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #344]
  4029c8:	add	x16, x16, #0x158
  4029cc:	br	x17

00000000004029d0 <calloc@plt>:
  4029d0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #352]
  4029d8:	add	x16, x16, #0x160
  4029dc:	br	x17

00000000004029e0 <realloc@plt>:
  4029e0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #360]
  4029e8:	add	x16, x16, #0x168
  4029ec:	br	x17

00000000004029f0 <__ctype_toupper_loc@plt>:
  4029f0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #368]
  4029f8:	add	x16, x16, #0x170
  4029fc:	br	x17

0000000000402a00 <pthread_mutex_init@plt>:
  402a00:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #376]
  402a08:	add	x16, x16, #0x178
  402a0c:	br	x17

0000000000402a10 <close@plt>:
  402a10:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #384]
  402a18:	add	x16, x16, #0x180
  402a1c:	br	x17

0000000000402a20 <sigaction@plt>:
  402a20:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #392]
  402a28:	add	x16, x16, #0x188
  402a2c:	br	x17

0000000000402a30 <strrchr@plt>:
  402a30:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #400]
  402a38:	add	x16, x16, #0x190
  402a3c:	br	x17

0000000000402a40 <pthread_create@plt>:
  402a40:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #408]
  402a48:	add	x16, x16, #0x198
  402a4c:	br	x17

0000000000402a50 <__gmon_start__@plt>:
  402a50:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #416]
  402a58:	add	x16, x16, #0x1a0
  402a5c:	br	x17

0000000000402a60 <write@plt>:
  402a60:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #424]
  402a68:	add	x16, x16, #0x1a8
  402a6c:	br	x17

0000000000402a70 <pthread_join@plt>:
  402a70:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #432]
  402a78:	add	x16, x16, #0x1b0
  402a7c:	br	x17

0000000000402a80 <abort@plt>:
  402a80:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #440]
  402a88:	add	x16, x16, #0x1b8
  402a8c:	br	x17

0000000000402a90 <mkostemp@plt>:
  402a90:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #448]
  402a98:	add	x16, x16, #0x1c0
  402a9c:	br	x17

0000000000402aa0 <sched_getaffinity@plt>:
  402aa0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #456]
  402aa8:	add	x16, x16, #0x1c8
  402aac:	br	x17

0000000000402ab0 <posix_fadvise@plt>:
  402ab0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #464]
  402ab8:	add	x16, x16, #0x1d0
  402abc:	br	x17

0000000000402ac0 <mbsinit@plt>:
  402ac0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #472]
  402ac8:	add	x16, x16, #0x1d8
  402acc:	br	x17

0000000000402ad0 <__overflow@plt>:
  402ad0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #480]
  402ad8:	add	x16, x16, #0x1e0
  402adc:	br	x17

0000000000402ae0 <pipe2@plt>:
  402ae0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #488]
  402ae8:	add	x16, x16, #0x1e8
  402aec:	br	x17

0000000000402af0 <fread_unlocked@plt>:
  402af0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #496]
  402af8:	add	x16, x16, #0x1f0
  402afc:	br	x17

0000000000402b00 <memcmp@plt>:
  402b00:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #504]
  402b08:	add	x16, x16, #0x1f8
  402b0c:	br	x17

0000000000402b10 <textdomain@plt>:
  402b10:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #512]
  402b18:	add	x16, x16, #0x200
  402b1c:	br	x17

0000000000402b20 <getopt_long@plt>:
  402b20:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #520]
  402b28:	add	x16, x16, #0x208
  402b2c:	br	x17

0000000000402b30 <__fprintf_chk@plt>:
  402b30:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #528]
  402b38:	add	x16, x16, #0x210
  402b3c:	br	x17

0000000000402b40 <sigismember@plt>:
  402b40:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #536]
  402b48:	add	x16, x16, #0x218
  402b4c:	br	x17

0000000000402b50 <strcmp@plt>:
  402b50:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #544]
  402b58:	add	x16, x16, #0x220
  402b5c:	br	x17

0000000000402b60 <__ctype_b_loc@plt>:
  402b60:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #552]
  402b68:	add	x16, x16, #0x228
  402b6c:	br	x17

0000000000402b70 <strtol@plt>:
  402b70:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #560]
  402b78:	add	x16, x16, #0x230
  402b7c:	br	x17

0000000000402b80 <fseeko@plt>:
  402b80:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #568]
  402b88:	add	x16, x16, #0x238
  402b8c:	br	x17

0000000000402b90 <strtold@plt>:
  402b90:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #576]
  402b98:	add	x16, x16, #0x240
  402b9c:	br	x17

0000000000402ba0 <free@plt>:
  402ba0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #584]
  402ba8:	add	x16, x16, #0x248
  402bac:	br	x17

0000000000402bb0 <__ctype_get_mb_cur_max@plt>:
  402bb0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #592]
  402bb8:	add	x16, x16, #0x250
  402bbc:	br	x17

0000000000402bc0 <getgid@plt>:
  402bc0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #600]
  402bc8:	add	x16, x16, #0x258
  402bcc:	br	x17

0000000000402bd0 <pthread_cond_wait@plt>:
  402bd0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #608]
  402bd8:	add	x16, x16, #0x260
  402bdc:	br	x17

0000000000402be0 <nanosleep@plt>:
  402be0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #616]
  402be8:	add	x16, x16, #0x268
  402bec:	br	x17

0000000000402bf0 <__stpcpy_chk@plt>:
  402bf0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #624]
  402bf8:	add	x16, x16, #0x270
  402bfc:	br	x17

0000000000402c00 <strchr@plt>:
  402c00:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #632]
  402c08:	add	x16, x16, #0x278
  402c0c:	br	x17

0000000000402c10 <fwrite@plt>:
  402c10:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #640]
  402c18:	add	x16, x16, #0x280
  402c1c:	br	x17

0000000000402c20 <__read_chk@plt>:
  402c20:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #648]
  402c28:	add	x16, x16, #0x288
  402c2c:	br	x17

0000000000402c30 <fflush_unlocked@plt>:
  402c30:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #656]
  402c38:	add	x16, x16, #0x290
  402c3c:	br	x17

0000000000402c40 <__sched_cpucount@plt>:
  402c40:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #664]
  402c48:	add	x16, x16, #0x298
  402c4c:	br	x17

0000000000402c50 <fcntl@plt>:
  402c50:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #672]
  402c58:	add	x16, x16, #0x2a0
  402c5c:	br	x17

0000000000402c60 <strxfrm@plt>:
  402c60:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #680]
  402c68:	add	x16, x16, #0x2a8
  402c6c:	br	x17

0000000000402c70 <dcngettext@plt>:
  402c70:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #688]
  402c78:	add	x16, x16, #0x2b0
  402c7c:	br	x17

0000000000402c80 <fflush@plt>:
  402c80:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #696]
  402c88:	add	x16, x16, #0x2b8
  402c8c:	br	x17

0000000000402c90 <strcpy@plt>:
  402c90:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #704]
  402c98:	add	x16, x16, #0x2c0
  402c9c:	br	x17

0000000000402ca0 <pthread_cond_init@plt>:
  402ca0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #712]
  402ca8:	add	x16, x16, #0x2c8
  402cac:	br	x17

0000000000402cb0 <getrlimit@plt>:
  402cb0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #720]
  402cb8:	add	x16, x16, #0x2d0
  402cbc:	br	x17

0000000000402cc0 <clearerr_unlocked@plt>:
  402cc0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #728]
  402cc8:	add	x16, x16, #0x2d8
  402ccc:	br	x17

0000000000402cd0 <__explicit_bzero_chk@plt>:
  402cd0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #736]
  402cd8:	add	x16, x16, #0x2e0
  402cdc:	br	x17

0000000000402ce0 <memchr@plt>:
  402ce0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #744]
  402ce8:	add	x16, x16, #0x2e8
  402cec:	br	x17

0000000000402cf0 <mkstemp@plt>:
  402cf0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #752]
  402cf8:	add	x16, x16, #0x2f0
  402cfc:	br	x17

0000000000402d00 <sysconf@plt>:
  402d00:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #760]
  402d08:	add	x16, x16, #0x2f8
  402d0c:	br	x17

0000000000402d10 <__fxstat@plt>:
  402d10:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #768]
  402d18:	add	x16, x16, #0x300
  402d1c:	br	x17

0000000000402d20 <dcgettext@plt>:
  402d20:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #776]
  402d28:	add	x16, x16, #0x308
  402d2c:	br	x17

0000000000402d30 <fputs_unlocked@plt>:
  402d30:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #784]
  402d38:	add	x16, x16, #0x310
  402d3c:	br	x17

0000000000402d40 <strcoll@plt>:
  402d40:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #792]
  402d48:	add	x16, x16, #0x318
  402d4c:	br	x17

0000000000402d50 <__freading@plt>:
  402d50:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #800]
  402d58:	add	x16, x16, #0x320
  402d5c:	br	x17

0000000000402d60 <ftruncate@plt>:
  402d60:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #808]
  402d68:	add	x16, x16, #0x328
  402d6c:	br	x17

0000000000402d70 <dup2@plt>:
  402d70:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #816]
  402d78:	add	x16, x16, #0x330
  402d7c:	br	x17

0000000000402d80 <sigaddset@plt>:
  402d80:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #824]
  402d88:	add	x16, x16, #0x338
  402d8c:	br	x17

0000000000402d90 <iswprint@plt>:
  402d90:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #832]
  402d98:	add	x16, x16, #0x340
  402d9c:	br	x17

0000000000402da0 <__assert_fail@plt>:
  402da0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #840]
  402da8:	add	x16, x16, #0x348
  402dac:	br	x17

0000000000402db0 <__errno_location@plt>:
  402db0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #848]
  402db8:	add	x16, x16, #0x350
  402dbc:	br	x17

0000000000402dc0 <execlp@plt>:
  402dc0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #856]
  402dc8:	add	x16, x16, #0x358
  402dcc:	br	x17

0000000000402dd0 <getenv@plt>:
  402dd0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #864]
  402dd8:	add	x16, x16, #0x360
  402ddc:	br	x17

0000000000402de0 <__xstat@plt>:
  402de0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #872]
  402de8:	add	x16, x16, #0x368
  402dec:	br	x17

0000000000402df0 <pthread_mutex_lock@plt>:
  402df0:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #880]
  402df8:	add	x16, x16, #0x370
  402dfc:	br	x17

0000000000402e00 <pthread_mutex_unlock@plt>:
  402e00:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #888]
  402e08:	add	x16, x16, #0x378
  402e0c:	br	x17

0000000000402e10 <waitpid@plt>:
  402e10:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #896]
  402e18:	add	x16, x16, #0x380
  402e1c:	br	x17

0000000000402e20 <unlink@plt>:
  402e20:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #904]
  402e28:	add	x16, x16, #0x388
  402e2c:	br	x17

0000000000402e30 <setlocale@plt>:
  402e30:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #912]
  402e38:	add	x16, x16, #0x390
  402e3c:	br	x17

0000000000402e40 <ferror@plt>:
  402e40:	adrp	x16, 429000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #920]
  402e48:	add	x16, x16, #0x398
  402e4c:	br	x17

Disassembly of section .text:

0000000000402e50 <_obstack_begin@@Base-0xeb08>:
  402e50:	sub	sp, sp, #0x390
  402e54:	stp	x29, x30, [sp]
  402e58:	mov	x29, sp
  402e5c:	stp	x19, x20, [sp, #16]
  402e60:	adrp	x19, 412000 <_obstack_memory_used@@Base+0x498>
  402e64:	add	x19, x19, #0x510
  402e68:	stp	x21, x22, [sp, #32]
  402e6c:	mov	x22, x1
  402e70:	mov	w21, w0
  402e74:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  402e78:	add	x0, x0, #0x948
  402e7c:	stp	x23, x24, [sp, #48]
  402e80:	mov	w24, #0x2                   	// #2
  402e84:	stp	x25, x26, [sp, #64]
  402e88:	adrp	x25, 429000 <_obstack_memory_used@@Base+0x17498>
  402e8c:	add	x20, x25, #0x560
  402e90:	stp	x27, x28, [sp, #80]
  402e94:	str	d8, [sp, #96]
  402e98:	bl	402dd0 <getenv@plt>
  402e9c:	cmp	x0, #0x0
  402ea0:	str	x0, [sp, #176]
  402ea4:	cset	w23, ne  // ne = any
  402ea8:	bl	40ce38 <ferror@plt+0x9ff8>
  402eac:	sub	w1, w0, #0x30, lsl #12
  402eb0:	sub	w1, w1, #0xdb0
  402eb4:	cmp	w1, #0x2b8
  402eb8:	ldr	x0, [x22]
  402ebc:	cset	w1, hi  // hi = pmore
  402ec0:	str	w1, [sp, #120]
  402ec4:	bl	40ced0 <ferror@plt+0xa090>
  402ec8:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x498>
  402ecc:	add	x0, x0, #0xe30
  402ed0:	mov	x1, x0
  402ed4:	str	x0, [sp, #160]
  402ed8:	mov	w0, #0x6                   	// #6
  402edc:	bl	402e30 <setlocale@plt>
  402ee0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  402ee4:	add	x1, x1, #0x958
  402ee8:	str	x0, [sp, #168]
  402eec:	mov	x0, x19
  402ef0:	bl	402950 <bindtextdomain@plt>
  402ef4:	mov	x0, x19
  402ef8:	bl	402b10 <textdomain@plt>
  402efc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  402f00:	mov	w0, #0x3                   	// #3
  402f04:	str	w24, [x1, #1208]
  402f08:	bl	40b3a8 <ferror@plt+0x8568>
  402f0c:	mov	w1, w0
  402f10:	mov	w0, w24
  402f14:	strb	w1, [x20, #1232]
  402f18:	bl	40b3a8 <ferror@plt+0x8568>
  402f1c:	and	w19, w0, #0xff
  402f20:	strb	w0, [x20, #1584]
  402f24:	bl	402870 <localeconv@plt>
  402f28:	ldr	x2, [x0]
  402f2c:	ldrb	w1, [x2]
  402f30:	str	w1, [x20, #4]
  402f34:	cbz	w1, 4032d0 <ferror@plt+0x490>
  402f38:	ldrb	w1, [x2, #1]
  402f3c:	cbnz	w1, 4032d0 <ferror@plt+0x490>
  402f40:	ldr	x1, [x0, #8]
  402f44:	ldrb	w0, [x1]
  402f48:	str	w0, [x25, #1376]
  402f4c:	cbz	w0, 4032c4 <ferror@plt+0x484>
  402f50:	ldrb	w0, [x1, #1]
  402f54:	cbnz	w0, 4032c4 <ferror@plt+0x484>
  402f58:	strb	wzr, [x20, #1528]
  402f5c:	bl	402b60 <__ctype_b_loc@plt>
  402f60:	mov	x25, x0
  402f64:	bl	4029f0 <__ctype_toupper_loc@plt>
  402f68:	add	x6, x20, #0x8
  402f6c:	add	x5, x20, #0x308
  402f70:	add	x9, x20, #0x208
  402f74:	add	x8, x20, #0x108
  402f78:	mov	x1, #0x0                   	// #0
  402f7c:	mov	w7, #0x1                   	// #1
  402f80:	b	402fc0 <ferror@plt+0x180>
  402f84:	cmp	x1, #0xa
  402f88:	b.eq	4032dc <ferror@plt+0x49c>  // b.none
  402f8c:	eor	x3, x2, #0x4000
  402f90:	eor	x2, x2, #0x8
  402f94:	strb	wzr, [x1, x6]
  402f98:	ubfx	w4, w2, #3, #1
  402f9c:	ubfx	x3, x3, #14, #1
  402fa0:	ldr	x2, [x0]
  402fa4:	strb	w3, [x1, x5]
  402fa8:	strb	w4, [x1, x9]
  402fac:	ldr	w2, [x2, x1, lsl #2]
  402fb0:	strb	w2, [x1, x8]
  402fb4:	add	x1, x1, #0x1
  402fb8:	cmp	x1, #0x100
  402fbc:	b.eq	402ffc <ferror@plt+0x1bc>  // b.none
  402fc0:	ldr	x3, [x25]
  402fc4:	ldrh	w2, [x3, x1, lsl #1]
  402fc8:	tbz	w2, #0, 402f84 <ferror@plt+0x144>
  402fcc:	eor	x2, x2, #0x4000
  402fd0:	mov	w4, #0x0                   	// #0
  402fd4:	strb	w7, [x1, x6]
  402fd8:	ubfx	x2, x2, #14, #1
  402fdc:	strb	w2, [x1, x5]
  402fe0:	ldr	x2, [x0]
  402fe4:	strb	w4, [x1, x9]
  402fe8:	ldr	w2, [x2, x1, lsl #2]
  402fec:	strb	w2, [x1, x8]
  402ff0:	add	x1, x1, #0x1
  402ff4:	cmp	x1, #0x100
  402ff8:	b.ne	402fc0 <ferror@plt+0x180>  // b.any
  402ffc:	cbz	w19, 4030b8 <ferror@plt+0x278>
  403000:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403004:	add	x0, x0, #0x3b0
  403008:	mov	x24, x0
  40300c:	add	x27, x20, #0x108
  403010:	mov	x28, #0x1                   	// #1
  403014:	str	x0, [sp, #144]
  403018:	add	w0, w28, #0x20, lsl #12
  40301c:	add	w0, w0, #0xd
  403020:	bl	4028c0 <nl_langinfo@plt>
  403024:	mov	x19, x0
  403028:	bl	402780 <strlen@plt>
  40302c:	mov	x26, x0
  403030:	add	x0, x0, #0x1
  403034:	bl	410220 <ferror@plt+0xd3e0>
  403038:	str	x0, [x24]
  40303c:	str	w28, [x24, #8]
  403040:	cbz	x26, 403afc <ferror@plt+0xcbc>
  403044:	ldr	x9, [x25]
  403048:	mov	x1, x0
  40304c:	add	x4, x19, x26
  403050:	mov	x5, #0x0                   	// #0
  403054:	nop
  403058:	ldrb	w2, [x19]
  40305c:	mov	x6, x1
  403060:	ubfiz	x3, x2, #1, #8
  403064:	ldrh	w3, [x9, x3]
  403068:	tbnz	w3, #0, 403080 <ferror@plt+0x240>
  40306c:	ldrb	w2, [x27, w2, sxtw]
  403070:	add	x5, x5, #0x1
  403074:	strb	w2, [x1]
  403078:	add	x1, x0, x5
  40307c:	mov	x6, x1
  403080:	add	x19, x19, #0x1
  403084:	cmp	x4, x19
  403088:	b.ne	403058 <ferror@plt+0x218>  // b.any
  40308c:	strb	wzr, [x6]
  403090:	add	x28, x28, #0x1
  403094:	cmp	x28, #0xd
  403098:	add	x24, x24, #0x10
  40309c:	b.ne	403018 <ferror@plt+0x1d8>  // b.any
  4030a0:	ldr	x0, [sp, #144]
  4030a4:	adrp	x3, 405000 <ferror@plt+0x21c0>
  4030a8:	mov	x2, #0x10                  	// #16
  4030ac:	add	x3, x3, #0x840
  4030b0:	mov	x1, #0xc                   	// #12
  4030b4:	bl	402810 <qsort@plt>
  4030b8:	adrp	x25, 414000 <_obstack_memory_used@@Base+0x2498>
  4030bc:	add	x25, x25, #0x320
  4030c0:	add	x26, x20, #0x578
  4030c4:	add	x19, x25, #0x180
  4030c8:	mov	x0, x26
  4030cc:	mov	x28, x19
  4030d0:	add	x24, x25, #0x1ac
  4030d4:	mov	w27, #0xe                   	// #14
  4030d8:	bl	402920 <sigemptyset@plt>
  4030dc:	b	4030e4 <ferror@plt+0x2a4>
  4030e0:	ldr	w27, [x28]
  4030e4:	add	x2, sp, #0x270
  4030e8:	mov	w0, w27
  4030ec:	mov	x1, #0x0                   	// #0
  4030f0:	bl	402a20 <sigaction@plt>
  4030f4:	ldr	x0, [sp, #624]
  4030f8:	cmp	x0, #0x1
  4030fc:	b.eq	40310c <ferror@plt+0x2cc>  // b.none
  403100:	mov	w1, w27
  403104:	mov	x0, x26
  403108:	bl	402d80 <sigaddset@plt>
  40310c:	add	x28, x28, #0x4
  403110:	cmp	x24, x28
  403114:	b.ne	4030e0 <ferror@plt+0x2a0>  // b.any
  403118:	add	x0, x20, #0x578
  40311c:	adrp	x1, 405000 <ferror@plt+0x21c0>
  403120:	add	x1, x1, #0x8f0
  403124:	str	x1, [sp, #624]
  403128:	add	x1, sp, #0x270
  40312c:	mov	x26, x0
  403130:	ldp	x2, x3, [x0]
  403134:	mov	w28, #0xe                   	// #14
  403138:	stp	x2, x3, [x1, #8]
  40313c:	ldp	x2, x3, [x0, #16]
  403140:	stp	x2, x3, [x1, #24]
  403144:	ldp	x2, x3, [x0, #32]
  403148:	stp	x2, x3, [x1, #40]
  40314c:	ldp	x2, x3, [x0, #48]
  403150:	stp	x2, x3, [x1, #56]
  403154:	ldp	x2, x3, [x0, #64]
  403158:	stp	x2, x3, [x1, #72]
  40315c:	ldp	x2, x3, [x0, #80]
  403160:	stp	x2, x3, [x1, #88]
  403164:	ldp	x2, x3, [x0, #96]
  403168:	stp	x2, x3, [x1, #104]
  40316c:	add	x2, sp, #0x270
  403170:	str	wzr, [sp, #760]
  403174:	ldp	x0, x1, [x0, #112]
  403178:	stp	x0, x1, [x2, #120]
  40317c:	b	403190 <ferror@plt+0x350>
  403180:	add	x19, x19, #0x4
  403184:	cmp	x24, x19
  403188:	b.eq	4031bc <ferror@plt+0x37c>  // b.none
  40318c:	ldr	w28, [x19]
  403190:	mov	w1, w28
  403194:	mov	x0, x26
  403198:	bl	402b40 <sigismember@plt>
  40319c:	cbz	w0, 403180 <ferror@plt+0x340>
  4031a0:	mov	w0, w28
  4031a4:	add	x1, sp, #0x270
  4031a8:	add	x19, x19, #0x4
  4031ac:	mov	x2, #0x0                   	// #0
  4031b0:	bl	402a20 <sigaction@plt>
  4031b4:	cmp	x24, x19
  4031b8:	b.ne	40318c <ferror@plt+0x34c>  // b.any
  4031bc:	mov	x1, #0x0                   	// #0
  4031c0:	mov	w0, #0x11                  	// #17
  4031c4:	bl	402890 <signal@plt>
  4031c8:	adrp	x0, 406000 <ferror@plt+0x31c0>
  4031cc:	add	x0, x0, #0xe90
  4031d0:	bl	4124c0 <_obstack_memory_used@@Base+0x958>
  4031d4:	stp	xzr, xzr, [sp, #432]
  4031d8:	sxtw	x0, w21
  4031dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4031e0:	str	x2, [sp, #424]
  4031e4:	cmp	xzr, x0, lsr #61
  4031e8:	str	x2, [sp, #440]
  4031ec:	stp	xzr, xzr, [sp, #448]
  4031f0:	add	x1, sp, #0x1b0
  4031f4:	sbfiz	x0, x21, #3, #32
  4031f8:	stp	xzr, xzr, [x1, #32]
  4031fc:	cset	x2, ne  // ne = any
  403200:	stp	xzr, xzr, [x1, #48]
  403204:	tbnz	w21, #31, 405144 <ferror@plt+0x2304>
  403208:	cbnz	x2, 405144 <ferror@plt+0x2304>
  40320c:	bl	410220 <ferror@plt+0xd3e0>
  403210:	mov	x28, #0x0                   	// #0
  403214:	mov	x19, x0
  403218:	adrp	x7, 414000 <_obstack_memory_used@@Base+0x2498>
  40321c:	add	x0, sp, #0x170
  403220:	add	x27, x7, #0x190
  403224:	mov	w24, #0x0                   	// #0
  403228:	mov	w26, #0x0                   	// #0
  40322c:	mov	w5, #0x0                   	// #0
  403230:	stp	xzr, xzr, [sp, #128]
  403234:	str	xzr, [sp, #152]
  403238:	stp	xzr, x0, [sp, #184]
  40323c:	b	4032a4 <ferror@plt+0x464>
  403240:	cmp	x28, #0x0
  403244:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  403248:	b.eq	403328 <ferror@plt+0x4e8>  // b.none
  40324c:	ldr	w2, [sp, #120]
  403250:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  403254:	cmp	w26, #0x0
  403258:	add	x3, x1, #0x538
  40325c:	cset	w0, ne  // ne = any
  403260:	eor	w2, w2, #0x1
  403264:	ldr	w1, [x1, #1336]
  403268:	orr	w0, w0, w2
  40326c:	cbnz	w0, 403288 <ferror@plt+0x448>
  403270:	cmp	w21, w1
  403274:	b.eq	40347c <ferror@plt+0x63c>  // b.none
  403278:	ldr	x0, [x22, w1, sxtw #3]
  40327c:	ldrb	w2, [x0]
  403280:	cmp	w2, #0x2d
  403284:	b.eq	403308 <ferror@plt+0x4c8>  // b.none
  403288:	cmp	w21, w1
  40328c:	b.le	40516c <ferror@plt+0x232c>
  403290:	ldr	x0, [x22, w1, sxtw #3]
  403294:	str	x0, [x19, x28, lsl #3]
  403298:	add	x28, x28, #0x1
  40329c:	add	w1, w1, #0x1
  4032a0:	str	w1, [x3]
  4032a4:	mov	w0, #0xffffffff            	// #-1
  4032a8:	str	w0, [sp, #248]
  4032ac:	cmp	w5, w0
  4032b0:	b.ne	403240 <ferror@plt+0x400>  // b.any
  4032b4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  4032b8:	add	x3, x1, #0x538
  4032bc:	ldr	w1, [x1, #1336]
  4032c0:	b	403288 <ferror@plt+0x448>
  4032c4:	mov	w0, #0xffffffff            	// #-1
  4032c8:	str	w0, [x25, #1376]
  4032cc:	b	402f58 <ferror@plt+0x118>
  4032d0:	mov	w1, #0x2e                  	// #46
  4032d4:	str	w1, [x20, #4]
  4032d8:	b	402f40 <ferror@plt+0x100>
  4032dc:	ldr	x4, [x0]
  4032e0:	mov	x1, #0xb                   	// #11
  4032e4:	ldrh	w2, [x3, #20]
  4032e8:	strb	wzr, [x9, #10]
  4032ec:	eor	x2, x2, #0x4000
  4032f0:	ldr	w3, [x4, #40]
  4032f4:	strb	w7, [x6, #10]
  4032f8:	ubfx	x2, x2, #14, #1
  4032fc:	strb	w3, [x8, #10]
  403300:	strb	w2, [x5, #10]
  403304:	b	402fc0 <ferror@plt+0x180>
  403308:	ldrb	w2, [x0, #1]
  40330c:	cmp	w2, #0x6f
  403310:	b.ne	403288 <ferror@plt+0x448>  // b.any
  403314:	ldrb	w0, [x0, #2]
  403318:	cbnz	w0, 403328 <ferror@plt+0x4e8>
  40331c:	add	w0, w1, #0x1
  403320:	cmp	w0, w21
  403324:	b.eq	403288 <ferror@plt+0x448>  // b.none
  403328:	add	x4, sp, #0xf8
  40332c:	add	x3, x25, #0x1b0
  403330:	add	x2, x25, #0x590
  403334:	mov	x1, x22
  403338:	mov	w0, w21
  40333c:	bl	402b20 <getopt_long@plt>
  403340:	mov	w5, w0
  403344:	cmn	w0, #0x1
  403348:	b.eq	4032b4 <ferror@plt+0x474>  // b.none
  40334c:	cmp	w0, #0x107
  403350:	b.gt	404cb8 <ferror@plt+0x1e78>
  403354:	cmp	w0, #0x42
  403358:	b.le	4033fc <ferror@plt+0x5bc>
  40335c:	sub	w0, w0, #0x43
  403360:	cmp	w0, #0xc4
  403364:	b.hi	404cb8 <ferror@plt+0x1e78>  // b.pmore
  403368:	ldrh	w0, [x27, w0, uxtw #1]
  40336c:	adr	x1, 403378 <ferror@plt+0x538>
  403370:	add	x0, x1, w0, sxth #2
  403374:	br	x0
  403378:	mov	w24, #0x1                   	// #1
  40337c:	b	4032a4 <ferror@plt+0x464>
  403380:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  403384:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  403388:	add	x3, x25, #0x5b8
  40338c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  403390:	ldr	x5, [x2, #1200]
  403394:	add	x0, x0, #0x9d0
  403398:	ldr	x1, [x1, #1328]
  40339c:	add	x2, x25, #0x5c0
  4033a0:	mov	x4, #0x1                   	// #1
  4033a4:	str	x3, [sp, #144]
  4033a8:	bl	409ea0 <ferror@plt+0x7060>
  4033ac:	ldr	x3, [sp, #144]
  4033b0:	ldrb	w5, [x3, x0]
  4033b4:	add	x1, sp, #0x1a8
  4033b8:	add	x0, sp, #0x270
  4033bc:	mov	w2, #0x2                   	// #2
  4033c0:	str	w5, [sp, #144]
  4033c4:	strb	w5, [sp, #624]
  4033c8:	strb	wzr, [sp, #625]
  4033cc:	bl	405730 <ferror@plt+0x28f0>
  4033d0:	ldr	w5, [sp, #144]
  4033d4:	b	4032a4 <ferror@plt+0x464>
  4033d8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  4033dc:	ldr	x1, [x0, #1328]
  4033e0:	cbnz	x1, 404174 <ferror@plt+0x1334>
  4033e4:	mov	w5, #0x63                  	// #99
  4033e8:	cbz	w26, 4033f4 <ferror@plt+0x5b4>
  4033ec:	cmp	w26, w5
  4033f0:	b.ne	4050fc <ferror@plt+0x22bc>  // b.any
  4033f4:	and	w26, w5, #0xff
  4033f8:	b	4032a4 <ferror@plt+0x464>
  4033fc:	cmn	w0, #0x2
  403400:	b.eq	404e84 <ferror@plt+0x2044>  // b.none
  403404:	cmp	w0, #0x1
  403408:	b.ne	403434 <ferror@plt+0x5f4>  // b.any
  40340c:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  403410:	add	x4, x3, #0x530
  403414:	ldr	x0, [x3, #1328]
  403418:	ldrb	w1, [x0]
  40341c:	cmp	w1, #0x2b
  403420:	b.eq	404214 <ferror@plt+0x13d4>  // b.none
  403424:	ldr	x0, [x4]
  403428:	str	x0, [x19, x28, lsl #3]
  40342c:	add	x28, x28, #0x1
  403430:	b	4032a4 <ferror@plt+0x464>
  403434:	cmn	w0, #0x3
  403438:	b.ne	404cb8 <ferror@plt+0x1e78>  // b.any
  40343c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  403440:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403444:	adrp	x5, 413000 <_obstack_memory_used@@Base+0x1498>
  403448:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x1498>
  40344c:	ldr	x3, [x1, #1192]
  403450:	add	x5, x5, #0xbe8
  403454:	ldr	x0, [x0, #1344]
  403458:	add	x4, x4, #0xbf8
  40345c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  403460:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  403464:	add	x2, x2, #0x890
  403468:	add	x1, x1, #0x18
  40346c:	mov	x6, #0x0                   	// #0
  403470:	bl	4100d8 <ferror@plt+0xd298>
  403474:	mov	w0, #0x0                   	// #0
  403478:	bl	402790 <exit@plt>
  40347c:	ldr	x0, [sp, #128]
  403480:	cbnz	x0, 404c4c <ferror@plt+0x1e0c>
  403484:	mov	w26, #0x0                   	// #0
  403488:	ldr	x3, [x20, #1224]
  40348c:	cbz	x3, 404730 <ferror@plt+0x18f0>
  403490:	mov	x4, x3
  403494:	mov	w21, #0x0                   	// #0
  403498:	b	403508 <ferror@plt+0x6c8>
  40349c:	ldrb	w0, [x4, #55]
  4034a0:	cbnz	w0, 403518 <ferror@plt+0x6d8>
  4034a4:	ldr	x2, [sp, #456]
  4034a8:	ldrb	w1, [sp, #480]
  4034ac:	ldrb	w5, [sp, #478]
  4034b0:	ldrb	w7, [sp, #477]
  4034b4:	ldrb	w8, [sp, #476]
  4034b8:	ldrb	w0, [sp, #475]
  4034bc:	ldrb	w9, [sp, #474]
  4034c0:	ldrb	w10, [sp, #473]
  4034c4:	orr	w21, w21, w0
  4034c8:	ldrb	w11, [sp, #472]
  4034cc:	str	x2, [x4, #32]
  4034d0:	ldr	x2, [sp, #464]
  4034d4:	str	x2, [x4, #40]
  4034d8:	ldrb	w2, [sp, #479]
  4034dc:	strb	w11, [x4, #48]
  4034e0:	strb	w10, [x4, #49]
  4034e4:	strb	w9, [x4, #50]
  4034e8:	strb	w0, [x4, #51]
  4034ec:	strb	w8, [x4, #52]
  4034f0:	strb	w7, [x4, #53]
  4034f4:	strb	w5, [x4, #54]
  4034f8:	strb	w2, [x4, #55]
  4034fc:	strb	w1, [x4, #56]
  403500:	ldr	x4, [x4, #64]
  403504:	cbz	x4, 403528 <ferror@plt+0x6e8>
  403508:	mov	x0, x4
  40350c:	bl	4055f8 <ferror@plt+0x27b8>
  403510:	tst	w0, #0xff
  403514:	b.ne	40349c <ferror@plt+0x65c>  // b.any
  403518:	ldrb	w0, [x4, #51]
  40351c:	ldr	x4, [x4, #64]
  403520:	orr	w21, w21, w0
  403524:	cbnz	x4, 403508 <ferror@plt+0x6c8>
  403528:	mov	w23, #0x0                   	// #0
  40352c:	nop
  403530:	ldr	x1, [x3, #32]
  403534:	ldrb	w5, [x3, #52]
  403538:	ldrb	w0, [x3, #50]
  40353c:	cmp	x1, #0x0
  403540:	ldrb	w4, [x3, #51]
  403544:	cset	w1, ne  // ne = any
  403548:	ldrb	w2, [x3, #56]
  40354c:	add	w0, w0, w5
  403550:	ldrb	w5, [x3, #53]
  403554:	orr	w2, w2, w4
  403558:	ldrb	w4, [x3, #54]
  40355c:	add	w0, w0, w5
  403560:	orr	w1, w1, w2
  403564:	add	w0, w0, w4
  403568:	add	w0, w0, w1, uxtb
  40356c:	cmp	w0, #0x1
  403570:	b.gt	404e68 <ferror@plt+0x2028>
  403574:	ldr	x3, [x3, #64]
  403578:	cbnz	x3, 403530 <ferror@plt+0x6f0>
  40357c:	ldrb	w0, [x20, #1529]
  403580:	cbz	w0, 4039ac <ferror@plt+0xb6c>
  403584:	ldr	x0, [sp, #152]
  403588:	cmp	w26, #0x0
  40358c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  403590:	b.ne	404f0c <ferror@plt+0x20cc>  // b.any
  403594:	ldr	x0, [sp, #168]
  403598:	cbz	x0, 404144 <ferror@plt+0x1304>
  40359c:	ldr	x1, [sp, #160]
  4035a0:	mov	w0, #0x3                   	// #3
  4035a4:	bl	402e30 <setlocale@plt>
  4035a8:	cbz	x0, 404144 <ferror@plt+0x1304>
  4035ac:	ldrb	w0, [x20, #1232]
  4035b0:	cbnz	w0, 404104 <ferror@plt+0x12c4>
  4035b4:	mov	w2, #0x5                   	// #5
  4035b8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4035bc:	mov	x0, #0x0                   	// #0
  4035c0:	add	x1, x1, #0xd40
  4035c4:	bl	402d20 <dcgettext@plt>
  4035c8:	mov	x3, x0
  4035cc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  4035d0:	mov	w1, #0x0                   	// #0
  4035d4:	add	x2, x2, #0x6b8
  4035d8:	mov	w0, #0x0                   	// #0
  4035dc:	bl	4027b0 <error@plt>
  4035e0:	add	x0, sp, #0x270
  4035e4:	add	x2, sp, #0x200
  4035e8:	ldr	x27, [x20, #1224]
  4035ec:	mov	x22, #0x1                   	// #1
  4035f0:	ldp	x0, x1, [x0, #-200]
  4035f4:	stp	x0, x1, [sp, #496]
  4035f8:	add	x0, sp, #0x270
  4035fc:	ldp	x0, x1, [x0, #-184]
  403600:	stp	x0, x1, [x2]
  403604:	add	x0, sp, #0x270
  403608:	ldp	x0, x1, [x0, #-168]
  40360c:	stp	x0, x1, [x2, #16]
  403610:	add	x0, sp, #0x270
  403614:	ldp	x0, x1, [x0, #-152]
  403618:	stp	x0, x1, [x2, #32]
  40361c:	ldr	x0, [sp, #488]
  403620:	str	x0, [sp, #560]
  403624:	cbz	x27, 4038ec <ferror@plt+0xaac>
  403628:	add	x0, sp, #0xf8
  40362c:	add	x0, x0, x22
  403630:	str	x0, [sp, #128]
  403634:	add	x0, sp, #0x12b
  403638:	str	x0, [sp, #144]
  40363c:	nop
  403640:	ldrb	w0, [x27, #57]
  403644:	ldr	x25, [x27]
  403648:	ldr	x3, [x27, #16]
  40364c:	cbz	w0, 403794 <ferror@plt+0x954>
  403650:	cmn	x25, #0x1
  403654:	mov	w2, #0x2b                  	// #43
  403658:	csel	x25, x25, xzr, ne  // ne = any
  40365c:	add	x1, sp, #0xe0
  403660:	mov	x0, x25
  403664:	str	x3, [sp, #120]
  403668:	strh	w2, [sp, #248]
  40366c:	bl	40c710 <ferror@plt+0x98d0>
  403670:	mov	x1, x0
  403674:	mov	x2, #0x2d                  	// #45
  403678:	ldr	x0, [sp, #128]
  40367c:	bl	402bf0 <__stpcpy_chk@plt>
  403680:	mov	x1, x0
  403684:	mov	w2, #0x6b2d                	// #27437
  403688:	add	x0, x25, #0x1
  40368c:	movk	w2, #0x20, lsl #16
  403690:	mov	x25, x1
  403694:	add	x1, sp, #0xe0
  403698:	str	w2, [sp, #296]
  40369c:	bl	40c710 <ferror@plt+0x98d0>
  4036a0:	mov	x1, x0
  4036a4:	ldr	x0, [sp, #144]
  4036a8:	mov	x2, #0x2c                  	// #44
  4036ac:	bl	402bf0 <__stpcpy_chk@plt>
  4036b0:	ldr	x1, [x27, #16]
  4036b4:	cmn	x1, #0x1
  4036b8:	b.eq	40373c <ferror@plt+0x8fc>  // b.none
  4036bc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4036c0:	add	x1, x1, #0xd78
  4036c4:	ldr	x3, [sp, #120]
  4036c8:	mov	x4, x25
  4036cc:	ldrb	w7, [x1, #2]
  4036d0:	mov	x2, x0
  4036d4:	ldrh	w0, [x1]
  4036d8:	add	x3, x3, #0x1
  4036dc:	strh	w0, [x25]
  4036e0:	add	x1, sp, #0xe0
  4036e4:	strb	w7, [x4, #2]!
  4036e8:	mov	x0, x3
  4036ec:	stp	x3, x2, [sp, #160]
  4036f0:	str	x4, [sp, #120]
  4036f4:	bl	40c710 <ferror@plt+0x98d0>
  4036f8:	ldr	x4, [sp, #120]
  4036fc:	mov	x1, x0
  403700:	mov	x0, x4
  403704:	bl	402c90 <strcpy@plt>
  403708:	ldp	x3, x2, [sp, #160]
  40370c:	mov	w0, #0x2c                  	// #44
  403710:	add	x1, sp, #0xe0
  403714:	strh	w0, [x2], #1
  403718:	ldr	x0, [x27, #24]
  40371c:	str	x2, [sp, #120]
  403720:	cmn	x0, #0x1
  403724:	cinc	x0, x3, eq  // eq = none
  403728:	bl	40c710 <ferror@plt+0x98d0>
  40372c:	mov	x1, x0
  403730:	ldr	x2, [sp, #120]
  403734:	mov	x0, x2
  403738:	bl	402c90 <strcpy@plt>
  40373c:	mov	w2, #0x5                   	// #5
  403740:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403744:	mov	x0, #0x0                   	// #0
  403748:	add	x1, x1, #0xd80
  40374c:	bl	402d20 <dcgettext@plt>
  403750:	mov	x25, x0
  403754:	add	x1, sp, #0xf8
  403758:	mov	w0, #0x0                   	// #0
  40375c:	bl	40e9c8 <ferror@plt+0xbb88>
  403760:	mov	x3, x0
  403764:	add	x1, sp, #0x128
  403768:	mov	w0, #0x1                   	// #1
  40376c:	str	x3, [sp, #120]
  403770:	bl	40e9c8 <ferror@plt+0xbb88>
  403774:	mov	x4, x0
  403778:	ldr	x3, [sp, #120]
  40377c:	mov	x2, x25
  403780:	mov	w1, #0x0                   	// #0
  403784:	mov	w0, #0x0                   	// #0
  403788:	bl	4027b0 <error@plt>
  40378c:	ldr	x25, [x27]
  403790:	ldr	x3, [x27, #16]
  403794:	cmn	x25, #0x1
  403798:	mov	w1, w23
  40379c:	b.eq	4037d8 <ferror@plt+0x998>  // b.none
  4037a0:	cmp	x25, x3
  4037a4:	b.ls	4037d8 <ferror@plt+0x998>  // b.plast
  4037a8:	mov	w2, #0x5                   	// #5
  4037ac:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4037b0:	mov	x0, #0x0                   	// #0
  4037b4:	add	x1, x1, #0xf18
  4037b8:	bl	402d20 <dcgettext@plt>
  4037bc:	mov	x2, x0
  4037c0:	mov	x3, x22
  4037c4:	mov	w1, #0x0                   	// #0
  4037c8:	mov	w0, #0x0                   	// #0
  4037cc:	bl	4027b0 <error@plt>
  4037d0:	ldr	x3, [x27, #16]
  4037d4:	mov	w1, #0x1                   	// #1
  4037d8:	ldr	x0, [x27, #48]
  4037dc:	mov	w2, #0x1                   	// #1
  4037e0:	and	x0, x0, #0xffffffff0000
  4037e4:	and	x0, x0, #0xffffffff00ffffff
  4037e8:	cbnz	x0, 4037f0 <ferror@plt+0x9b0>
  4037ec:	ldrb	w2, [x27, #54]
  4037f0:	cbnz	x3, 404058 <ferror@plt+0x1218>
  4037f4:	ldr	x3, [x27, #24]
  4037f8:	cbz	x3, 404058 <ferror@plt+0x1218>
  4037fc:	cbz	w1, 4040b8 <ferror@plt+0x1278>
  403800:	cbz	w23, 4040b8 <ferror@plt+0x1278>
  403804:	ldr	x0, [sp, #528]
  403808:	cbz	x0, 403818 <ferror@plt+0x9d8>
  40380c:	ldr	x1, [x27, #32]
  403810:	cmp	x0, x1
  403814:	b.eq	4043d4 <ferror@plt+0x1594>  // b.none
  403818:	ldr	x0, [sp, #536]
  40381c:	cbz	x0, 40382c <ferror@plt+0x9ec>
  403820:	ldr	x1, [x27, #40]
  403824:	cmp	x0, x1
  403828:	b.eq	4043dc <ferror@plt+0x159c>  // b.none
  40382c:	ldrb	w0, [x27, #48]
  403830:	add	x22, x22, #0x1
  403834:	ldrb	w11, [sp, #544]
  403838:	eor	w0, w0, #0x1
  40383c:	ldrb	w10, [x27, #49]
  403840:	ldrb	w9, [x27, #50]
  403844:	and	w0, w0, w11
  403848:	ldrb	w8, [x27, #51]
  40384c:	eor	w10, w10, #0x1
  403850:	ldrb	w7, [x27, #52]
  403854:	eor	w9, w9, #0x1
  403858:	ldrb	w4, [x27, #53]
  40385c:	eor	w8, w8, #0x1
  403860:	ldrb	w3, [x27, #54]
  403864:	eor	w7, w7, #0x1
  403868:	ldrb	w2, [x27, #55]
  40386c:	eor	w4, w4, #0x1
  403870:	ldrb	w1, [x27, #56]
  403874:	eor	w3, w3, #0x1
  403878:	ldrb	w11, [sp, #545]
  40387c:	eor	w2, w2, #0x1
  403880:	ldr	x27, [x27, #64]
  403884:	strb	w0, [sp, #544]
  403888:	ldrb	w0, [sp, #546]
  40388c:	and	w10, w10, w11
  403890:	ldrb	w11, [sp, #547]
  403894:	eor	w1, w1, #0x1
  403898:	and	w9, w9, w0
  40389c:	ldrb	w0, [sp, #548]
  4038a0:	and	w8, w8, w11
  4038a4:	ldrb	w11, [sp, #549]
  4038a8:	and	w7, w7, w0
  4038ac:	ldrb	w0, [sp, #550]
  4038b0:	and	w4, w4, w11
  4038b4:	ldrb	w11, [sp, #551]
  4038b8:	and	w3, w3, w0
  4038bc:	ldrb	w0, [sp, #552]
  4038c0:	and	w2, w2, w11
  4038c4:	strb	w10, [sp, #545]
  4038c8:	and	w0, w1, w0
  4038cc:	strb	w9, [sp, #546]
  4038d0:	strb	w8, [sp, #547]
  4038d4:	strb	w7, [sp, #548]
  4038d8:	strb	w4, [sp, #549]
  4038dc:	strb	w3, [sp, #550]
  4038e0:	strb	w2, [sp, #551]
  4038e4:	strb	w0, [sp, #552]
  4038e8:	cbnz	x27, 403640 <ferror@plt+0x800>
  4038ec:	add	x22, sp, #0x1f0
  4038f0:	mov	x0, x22
  4038f4:	bl	4055f8 <ferror@plt+0x27b8>
  4038f8:	ldrb	w23, [sp, #551]
  4038fc:	tst	w0, #0xff
  403900:	b.ne	404754 <ferror@plt+0x1914>  // b.any
  403904:	ldrb	w0, [x20, #1531]
  403908:	cbnz	w0, 403918 <ferror@plt+0xad8>
  40390c:	ldrb	w0, [x20, #1530]
  403910:	cbnz	w0, 403918 <ferror@plt+0xad8>
  403914:	strb	wzr, [sp, #551]
  403918:	add	x0, sp, #0x128
  40391c:	mov	x1, x0
  403920:	mov	x0, x22
  403924:	mov	x22, x1
  403928:	bl	405650 <ferror@plt+0x2810>
  40392c:	mov	x0, x22
  403930:	bl	402780 <strlen@plt>
  403934:	mov	x3, x0
  403938:	mov	w4, #0x5                   	// #5
  40393c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  403940:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403944:	add	x2, x2, #0xe28
  403948:	add	x1, x1, #0xe48
  40394c:	mov	x0, #0x0                   	// #0
  403950:	bl	402c70 <dcngettext@plt>
  403954:	mov	x2, x0
  403958:	mov	x3, x22
  40395c:	mov	w1, #0x0                   	// #0
  403960:	mov	w0, #0x0                   	// #0
  403964:	bl	4027b0 <error@plt>
  403968:	strb	w23, [sp, #551]
  40396c:	cbz	w23, 4039ac <ferror@plt+0xb6c>
  403970:	ldrb	w0, [x20, #1531]
  403974:	cbnz	w0, 4039ac <ferror@plt+0xb6c>
  403978:	ldrb	w0, [x20, #1530]
  40397c:	cbnz	w0, 4039ac <ferror@plt+0xb6c>
  403980:	ldr	x0, [x20, #1224]
  403984:	cbz	x0, 4039ac <ferror@plt+0xb6c>
  403988:	mov	w2, #0x5                   	// #5
  40398c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403990:	mov	x0, #0x0                   	// #0
  403994:	add	x1, x1, #0xe60
  403998:	bl	402d20 <dcgettext@plt>
  40399c:	mov	x2, x0
  4039a0:	mov	w1, #0x0                   	// #0
  4039a4:	mov	w0, #0x0                   	// #0
  4039a8:	bl	4027b0 <error@plt>
  4039ac:	ldrb	w0, [sp, #479]
  4039b0:	strb	w0, [x20, #1532]
  4039b4:	cbnz	w21, 4046e0 <ferror@plt+0x18a0>
  4039b8:	ldr	x0, [x20, #1176]
  4039bc:	cbz	x0, 404018 <ferror@plt+0x11d8>
  4039c0:	cbz	x28, 404030 <ferror@plt+0x11f0>
  4039c4:	ldr	x1, [x20, #1576]
  4039c8:	cbz	x1, 4039e8 <ferror@plt+0xba8>
  4039cc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  4039d0:	mov	w2, #0x22                  	// #34
  4039d4:	ldr	w0, [x0, #1152]
  4039d8:	umull	x0, w0, w2
  4039dc:	cmp	x0, x1
  4039e0:	csel	x0, x0, x1, cs  // cs = hs, nlast
  4039e4:	str	x0, [x20, #1576]
  4039e8:	cbz	w26, 4043e4 <ferror@plt+0x15a4>
  4039ec:	cmp	x28, #0x1
  4039f0:	b.hi	405108 <ferror@plt+0x22c8>  // b.pmore
  4039f4:	ldr	x0, [sp, #152]
  4039f8:	cbnz	x0, 404fc8 <ferror@plt+0x2188>
  4039fc:	ldr	x25, [x19]
  403a00:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  403a04:	add	x1, x1, #0x7f8
  403a08:	mov	x0, x25
  403a0c:	bl	407300 <ferror@plt+0x44c0>
  403a10:	mov	x24, x0
  403a14:	cbz	x0, 4050f4 <ferror@plt+0x22b4>
  403a18:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403a1c:	ldrb	w21, [x20, #1530]
  403a20:	ldr	x3, [x20, #1576]
  403a24:	add	x22, sp, #0x1f0
  403a28:	ldr	x2, [x0, #1160]
  403a2c:	eor	w21, w21, #0x1
  403a30:	mov	x0, x22
  403a34:	mov	x1, #0x20                  	// #32
  403a38:	cmp	x3, x2
  403a3c:	mov	x27, #0x0                   	// #0
  403a40:	csel	x2, x3, x2, cs  // cs = hs, nlast
  403a44:	mov	x23, #0x0                   	// #0
  403a48:	ldr	x28, [x20, #1224]
  403a4c:	bl	405ae0 <ferror@plt+0x2ca0>
  403a50:	str	xzr, [sp, #296]
  403a54:	mov	x2, x25
  403a58:	mov	x1, x24
  403a5c:	mov	x0, x22
  403a60:	bl	408850 <ferror@plt+0x5a10>
  403a64:	tst	w0, #0xff
  403a68:	b.eq	404d98 <ferror@plt+0x1f58>  // b.none
  403a6c:	ldr	x0, [sp, #496]
  403a70:	ldr	x20, [sp, #512]
  403a74:	ldr	x1, [sp, #520]
  403a78:	add	x0, x0, x1
  403a7c:	sub	x20, x0, x20, lsl #5
  403a80:	sub	x19, x0, #0x20
  403a84:	cbz	x23, 403aa0 <ferror@plt+0xc60>
  403a88:	b	403fb4 <ferror@plt+0x1174>
  403a8c:	sub	x19, x19, #0x20
  403a90:	mov	x1, x19
  403a94:	bl	407920 <ferror@plt+0x4ae0>
  403a98:	cmp	w21, w0
  403a9c:	b.le	403fc8 <ferror@plt+0x1188>
  403aa0:	cmp	x20, x19
  403aa4:	mov	x0, x19
  403aa8:	b.cc	403a8c <ferror@plt+0xc4c>  // b.lo, b.ul, b.last
  403aac:	ldr	x2, [x19, #8]
  403ab0:	ldr	x0, [sp, #512]
  403ab4:	cmp	x23, x2
  403ab8:	add	x27, x27, x0
  403abc:	b.cc	403f8c <ferror@plt+0x114c>  // b.lo, b.ul, b.last
  403ac0:	ldr	x1, [x19]
  403ac4:	ldr	x0, [sp, #296]
  403ac8:	bl	402720 <memcpy@plt>
  403acc:	ldr	x0, [x19, #8]
  403ad0:	str	x0, [sp, #304]
  403ad4:	cbz	x28, 403a54 <ferror@plt+0xc14>
  403ad8:	ldp	x0, x2, [x19, #16]
  403adc:	ldr	x3, [x19]
  403ae0:	ldr	x1, [sp, #296]
  403ae4:	sub	x0, x0, x3
  403ae8:	sub	x2, x2, x3
  403aec:	add	x0, x1, x0
  403af0:	add	x1, x1, x2
  403af4:	stp	x0, x1, [sp, #312]
  403af8:	b	403a54 <ferror@plt+0xc14>
  403afc:	mov	x6, x0
  403b00:	b	40308c <ferror@plt+0x24c>
  403b04:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403b08:	add	x3, sp, #0x270
  403b0c:	ldr	x4, [sp, #160]
  403b10:	mov	w2, #0xa                   	// #10
  403b14:	ldr	x8, [x0, #1328]
  403b18:	mov	x1, #0x0                   	// #0
  403b1c:	ldr	w0, [sp, #248]
  403b20:	str	w5, [sp, #144]
  403b24:	str	x8, [sp, #184]
  403b28:	str	w0, [sp, #200]
  403b2c:	mov	x0, x8
  403b30:	bl	410708 <ferror@plt+0xd8c8>
  403b34:	cmp	w0, #0x1
  403b38:	ldr	w5, [sp, #144]
  403b3c:	b.eq	404d8c <ferror@plt+0x1f4c>  // b.none
  403b40:	ldr	x8, [sp, #184]
  403b44:	cbnz	w0, 405148 <ferror@plt+0x2308>
  403b48:	ldr	x0, [sp, #624]
  403b4c:	str	x0, [sp, #184]
  403b50:	cbnz	x0, 4032a4 <ferror@plt+0x464>
  403b54:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403b58:	add	x1, x1, #0xbc0
  403b5c:	mov	w2, #0x5                   	// #5
  403b60:	bl	402d20 <dcgettext@plt>
  403b64:	mov	x2, x0
  403b68:	mov	w1, #0x0                   	// #0
  403b6c:	mov	w0, #0x2                   	// #2
  403b70:	bl	4027b0 <error@plt>
  403b74:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403b78:	ldr	x1, [x0, #1328]
  403b7c:	ldr	x0, [sp, #136]
  403b80:	cbz	x0, 403b9c <ferror@plt+0xd5c>
  403b84:	str	x1, [sp, #136]
  403b88:	str	w5, [sp, #144]
  403b8c:	bl	402b50 <strcmp@plt>
  403b90:	ldr	w5, [sp, #144]
  403b94:	ldr	x1, [sp, #136]
  403b98:	cbnz	w0, 4050b8 <ferror@plt+0x2278>
  403b9c:	str	x1, [sp, #136]
  403ba0:	b	4032a4 <ferror@plt+0x464>
  403ba4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403ba8:	mov	w2, #0xa                   	// #10
  403bac:	add	x3, sp, #0x128
  403bb0:	mov	x4, #0x0                   	// #0
  403bb4:	ldr	x8, [x0, #1328]
  403bb8:	mov	x1, #0x0                   	// #0
  403bbc:	ldr	w0, [sp, #248]
  403bc0:	str	x8, [sp, #200]
  403bc4:	str	w5, [sp, #208]
  403bc8:	str	w0, [sp, #220]
  403bcc:	mov	x0, x8
  403bd0:	bl	410d48 <ferror@plt+0xdf08>
  403bd4:	mov	w2, w0
  403bd8:	add	x1, sp, #0x270
  403bdc:	mov	w0, #0x7                   	// #7
  403be0:	str	w2, [sp, #144]
  403be4:	bl	402cb0 <getrlimit@plt>
  403be8:	ldr	w2, [sp, #144]
  403bec:	ldr	w5, [sp, #208]
  403bf0:	ldr	x8, [sp, #200]
  403bf4:	cbnz	w0, 4041a8 <ferror@plt+0x1368>
  403bf8:	ldr	x9, [sp, #624]
  403bfc:	sub	w9, w9, #0x3
  403c00:	cbnz	w2, 4041b0 <ferror@plt+0x1370>
  403c04:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  403c08:	ldr	x0, [sp, #296]
  403c0c:	str	w0, [x1, #1152]
  403c10:	tst	x0, #0xffffffff00000000
  403c14:	b.ne	403c28 <ferror@plt+0xde8>  // b.any
  403c18:	cmp	w0, #0x1
  403c1c:	b.ls	405018 <ferror@plt+0x21d8>  // b.plast
  403c20:	cmp	w0, w9
  403c24:	b.ls	4032a4 <ferror@plt+0x464>  // b.plast
  403c28:	mov	w2, #0x5                   	// #5
  403c2c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403c30:	mov	x0, #0x0                   	// #0
  403c34:	add	x1, x1, #0xa88
  403c38:	str	x8, [sp, #120]
  403c3c:	add	x25, x25, #0x1b0
  403c40:	str	w9, [sp, #128]
  403c44:	bl	402d20 <dcgettext@plt>
  403c48:	ldr	w1, [sp, #220]
  403c4c:	mov	x19, x0
  403c50:	ldr	x8, [sp, #120]
  403c54:	sbfiz	x1, x1, #5, #32
  403c58:	mov	x0, x8
  403c5c:	ldr	x20, [x25, x1]
  403c60:	bl	40e9e0 <ferror@plt+0xbba0>
  403c64:	mov	x4, x0
  403c68:	mov	x2, x19
  403c6c:	mov	x3, x20
  403c70:	mov	w1, #0x0                   	// #0
  403c74:	mov	w0, #0x0                   	// #0
  403c78:	bl	4027b0 <error@plt>
  403c7c:	mov	w2, #0x5                   	// #5
  403c80:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403c84:	mov	x0, #0x0                   	// #0
  403c88:	add	x1, x1, #0xaa8
  403c8c:	bl	402d20 <dcgettext@plt>
  403c90:	mov	x19, x0
  403c94:	ldr	w9, [sp, #128]
  403c98:	add	x1, sp, #0x1f0
  403c9c:	mov	w0, w9
  403ca0:	bl	40c6d0 <ferror@plt+0x9890>
  403ca4:	b	40508c <ferror@plt+0x224c>
  403ca8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403cac:	ldr	x0, [x0, #1328]
  403cb0:	str	x0, [sp, #128]
  403cb4:	b	4032a4 <ferror@plt+0x464>
  403cb8:	mov	w0, #0x1                   	// #1
  403cbc:	strb	w0, [x20, #1529]
  403cc0:	b	4032a4 <ferror@plt+0x464>
  403cc4:	ldr	x0, [x20, #1200]
  403cc8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  403ccc:	ldr	x1, [x1, #1328]
  403cd0:	cbz	x0, 403cec <ferror@plt+0xeac>
  403cd4:	str	x1, [sp, #144]
  403cd8:	str	w5, [sp, #200]
  403cdc:	bl	402b50 <strcmp@plt>
  403ce0:	ldr	w5, [sp, #200]
  403ce4:	ldr	x1, [sp, #144]
  403ce8:	cbnz	w0, 4050cc <ferror@plt+0x228c>
  403cec:	str	x1, [x20, #1200]
  403cf0:	b	4032a4 <ferror@plt+0x464>
  403cf4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403cf8:	strb	wzr, [x0, #1156]
  403cfc:	b	4032a4 <ferror@plt+0x464>
  403d00:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  403d04:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  403d08:	add	x3, x1, #0x538
  403d0c:	ldr	w0, [x1, #1336]
  403d10:	ldr	x1, [x2, #1328]
  403d14:	add	x2, x22, w0, sxtw #3
  403d18:	ldur	x2, [x2, #-8]
  403d1c:	cmp	x2, x1
  403d20:	b.ne	4032a4 <ferror@plt+0x464>  // b.any
  403d24:	ldrb	w2, [x1]
  403d28:	sub	w4, w2, #0x30
  403d2c:	cmp	w4, #0x9
  403d30:	b.ls	404d40 <ferror@plt+0x1f00>  // b.plast
  403d34:	cmp	w2, #0x0
  403d38:	cset	w1, ne  // ne = any
  403d3c:	sub	w0, w0, w1
  403d40:	str	w0, [x3]
  403d44:	b	4032a4 <ferror@plt+0x464>
  403d48:	mov	w0, #0x1                   	// #1
  403d4c:	strb	w0, [x20, #1530]
  403d50:	b	4032a4 <ferror@plt+0x464>
  403d54:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403d58:	ldr	x0, [x0, #1328]
  403d5c:	ldrb	w1, [x0]
  403d60:	cbz	w1, 404f2c <ferror@plt+0x20ec>
  403d64:	ldrb	w2, [x0, #1]
  403d68:	cbz	w2, 403d88 <ferror@plt+0xf48>
  403d6c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  403d70:	add	x1, x1, #0xb88
  403d74:	str	w5, [sp, #144]
  403d78:	bl	402b50 <strcmp@plt>
  403d7c:	ldr	w5, [sp, #144]
  403d80:	cbnz	w0, 404fdc <ferror@plt+0x219c>
  403d84:	mov	w1, #0x0                   	// #0
  403d88:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403d8c:	add	x0, x0, #0x3b0
  403d90:	str	x0, [sp, #144]
  403d94:	ldr	w0, [x0, #192]
  403d98:	cmp	w0, #0x100
  403d9c:	b.eq	403da8 <ferror@plt+0xf68>  // b.none
  403da0:	cmp	w0, w1
  403da4:	b.ne	4050a4 <ferror@plt+0x2264>  // b.any
  403da8:	ldr	x0, [sp, #144]
  403dac:	str	w1, [x0, #192]
  403db0:	b	4032a4 <ferror@plt+0x464>
  403db4:	mov	w0, #0x1                   	// #1
  403db8:	strb	w0, [x20, #1531]
  403dbc:	b	4032a4 <ferror@plt+0x464>
  403dc0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403dc4:	ldr	x1, [x0, #1328]
  403dc8:	ldr	x0, [sp, #152]
  403dcc:	cbz	x0, 403de8 <ferror@plt+0xfa8>
  403dd0:	str	x1, [sp, #144]
  403dd4:	str	w5, [sp, #152]
  403dd8:	bl	402b50 <strcmp@plt>
  403ddc:	ldr	w5, [sp, #152]
  403de0:	ldr	x1, [sp, #144]
  403de4:	cbnz	w0, 4050e0 <ferror@plt+0x22a0>
  403de8:	str	x1, [sp, #152]
  403dec:	b	4032a4 <ferror@plt+0x464>
  403df0:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  403df4:	mov	x4, #0xffffffffffffffff    	// #-1
  403df8:	stp	xzr, xzr, [sp, #368]
  403dfc:	add	x1, sp, #0x160
  403e00:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  403e04:	ldr	x0, [x3, #1328]
  403e08:	add	x2, x2, #0xa10
  403e0c:	str	x3, [sp, #144]
  403e10:	str	w5, [sp, #200]
  403e14:	stp	xzr, xzr, [sp, #352]
  403e18:	str	x4, [sp, #368]
  403e1c:	stp	xzr, xzr, [sp, #384]
  403e20:	stp	xzr, xzr, [sp, #400]
  403e24:	str	xzr, [sp, #416]
  403e28:	bl	407230 <ferror@plt+0x43f0>
  403e2c:	ldr	x1, [sp, #352]
  403e30:	ldr	w5, [sp, #200]
  403e34:	mov	x2, x1
  403e38:	sub	x1, x1, #0x1
  403e3c:	str	x1, [sp, #352]
  403e40:	ldr	x3, [sp, #144]
  403e44:	cbz	x2, 404f40 <ferror@plt+0x2100>
  403e48:	ldrb	w2, [x0]
  403e4c:	cmp	w2, #0x2e
  403e50:	b.eq	404bac <ferror@plt+0x1d6c>  // b.none
  403e54:	ldr	x2, [sp, #360]
  403e58:	orr	x1, x1, x2
  403e5c:	cbz	x1, 404208 <ferror@plt+0x13c8>
  403e60:	add	x1, sp, #0x160
  403e64:	mov	w2, #0x0                   	// #0
  403e68:	str	w5, [sp, #144]
  403e6c:	str	x3, [sp, #200]
  403e70:	bl	405730 <ferror@plt+0x28f0>
  403e74:	ldrb	w1, [x0]
  403e78:	ldr	w5, [sp, #144]
  403e7c:	cmp	w1, #0x2c
  403e80:	ldr	x3, [sp, #200]
  403e84:	b.eq	404bec <ferror@plt+0x1dac>  // b.none
  403e88:	mov	x1, #0xffffffffffffffff    	// #-1
  403e8c:	stp	x1, xzr, [sp, #368]
  403e90:	ldrb	w0, [x0]
  403e94:	cbnz	w0, 40515c <ferror@plt+0x231c>
  403e98:	mov	x1, #0x48                  	// #72
  403e9c:	add	x0, sp, #0x160
  403ea0:	str	w5, [sp, #144]
  403ea4:	bl	410418 <ferror@plt+0xd5d8>
  403ea8:	ldr	x1, [x20, #1224]
  403eac:	add	x2, x20, #0x4c8
  403eb0:	ldr	w5, [sp, #144]
  403eb4:	cbz	x1, 403ec4 <ferror@plt+0x1084>
  403eb8:	add	x2, x1, #0x40
  403ebc:	ldr	x1, [x1, #64]
  403ec0:	cbnz	x1, 403eb8 <ferror@plt+0x1078>
  403ec4:	str	x0, [x2]
  403ec8:	str	xzr, [x0, #64]
  403ecc:	b	4032a4 <ferror@plt+0x464>
  403ed0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403ed4:	str	w5, [sp, #144]
  403ed8:	ldr	x0, [x0, #1328]
  403edc:	bl	405a28 <ferror@plt+0x2be8>
  403ee0:	ldr	w5, [sp, #144]
  403ee4:	b	4032a4 <ferror@plt+0x464>
  403ee8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403eec:	add	x3, sp, #0x1f0
  403ef0:	add	x1, sp, #0x270
  403ef4:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x1498>
  403ef8:	ldr	x8, [x0, #1328]
  403efc:	add	x4, x4, #0xb68
  403f00:	ldr	w0, [sp, #248]
  403f04:	mov	w2, #0xa                   	// #10
  403f08:	str	x8, [sp, #144]
  403f0c:	str	w5, [sp, #200]
  403f10:	str	w0, [sp, #208]
  403f14:	mov	x0, x8
  403f18:	bl	410d48 <ferror@plt+0xdf08>
  403f1c:	ldr	w5, [sp, #200]
  403f20:	ldr	x8, [sp, #144]
  403f24:	cbnz	w0, 4041d0 <ferror@plt+0x1390>
  403f28:	ldr	x0, [sp, #624]
  403f2c:	ldurb	w0, [x0, #-1]
  403f30:	sub	w0, w0, #0x30
  403f34:	cmp	w0, #0x9
  403f38:	b.hi	403f54 <ferror@plt+0x1114>  // b.pmore
  403f3c:	ldr	x0, [sp, #496]
  403f40:	mov	x1, #0x3fffffffffffff      	// #18014398509481983
  403f44:	cmp	x0, x1
  403f48:	b.hi	404d24 <ferror@plt+0x1ee4>  // b.pmore
  403f4c:	lsl	x0, x0, #10
  403f50:	str	x0, [sp, #496]
  403f54:	ldr	x1, [sp, #496]
  403f58:	ldr	x0, [x20, #1576]
  403f5c:	cmp	x1, x0
  403f60:	b.cc	4032a4 <ferror@plt+0x464>  // b.lo, b.ul, b.last
  403f64:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  403f68:	mov	w2, #0x22                  	// #34
  403f6c:	ldr	w0, [x0, #1152]
  403f70:	umull	x0, w0, w2
  403f74:	cmp	x0, x1
  403f78:	csel	x0, x0, x1, cs  // cs = hs, nlast
  403f7c:	str	x0, [x20, #1576]
  403f80:	b	4032a4 <ferror@plt+0x464>
  403f84:	cmp	x2, x23
  403f88:	b.ls	403f98 <ferror@plt+0x1158>  // b.plast
  403f8c:	lsl	x23, x23, #1
  403f90:	cbnz	x23, 403f84 <ferror@plt+0x1144>
  403f94:	mov	x23, x2
  403f98:	ldr	x0, [sp, #296]
  403f9c:	bl	402ba0 <free@plt>
  403fa0:	mov	x0, x23
  403fa4:	bl	410220 <ferror@plt+0xd3e0>
  403fa8:	ldr	x2, [x19, #8]
  403fac:	str	x0, [sp, #296]
  403fb0:	b	403ac0 <ferror@plt+0xc80>
  403fb4:	mov	x1, x19
  403fb8:	add	x0, sp, #0x128
  403fbc:	bl	407920 <ferror@plt+0x4ae0>
  403fc0:	cmp	w21, w0
  403fc4:	b.gt	403aa0 <ferror@plt+0xc60>
  403fc8:	cmp	w26, #0x63
  403fcc:	b.eq	404a68 <ferror@plt+0x1c28>  // b.none
  403fd0:	mov	w20, #0x0                   	// #0
  403fd4:	mov	x1, x25
  403fd8:	mov	x0, x24
  403fdc:	bl	407478 <ferror@plt+0x4638>
  403fe0:	ldr	x0, [sp, #496]
  403fe4:	bl	402ba0 <free@plt>
  403fe8:	ldr	x0, [sp, #296]
  403fec:	bl	402ba0 <free@plt>
  403ff0:	eor	w0, w20, #0x1
  403ff4:	ldp	x29, x30, [sp]
  403ff8:	ldp	x19, x20, [sp, #16]
  403ffc:	ldp	x21, x22, [sp, #32]
  404000:	ldp	x23, x24, [sp, #48]
  404004:	ldp	x25, x26, [sp, #64]
  404008:	ldp	x27, x28, [sp, #80]
  40400c:	ldr	d8, [sp, #96]
  404010:	add	sp, sp, #0x390
  404014:	ret
  404018:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  40401c:	add	x0, x0, #0xe98
  404020:	bl	402dd0 <getenv@plt>
  404024:	cbz	x0, 4043b0 <ferror@plt+0x1570>
  404028:	bl	405a28 <ferror@plt+0x2be8>
  40402c:	cbnz	x28, 4039c4 <ferror@plt+0xb84>
  404030:	mov	x0, x19
  404034:	bl	402ba0 <free@plt>
  404038:	mov	x0, #0x8                   	// #8
  40403c:	bl	410220 <ferror@plt+0xd3e0>
  404040:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404044:	mov	x19, x0
  404048:	add	x1, x1, #0xea0
  40404c:	mov	x28, #0x1                   	// #1
  404050:	str	x1, [x0]
  404054:	b	4039c4 <ferror@plt+0xb84>
  404058:	cbnz	w1, 403800 <ferror@plt+0x9c0>
  40405c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  404060:	ldr	w1, [x1, #1136]
  404064:	cmp	w1, #0x100
  404068:	b.ne	4040b8 <ferror@plt+0x1278>  // b.any
  40406c:	ldrb	w1, [x27, #48]
  404070:	cbnz	w1, 4043c0 <ferror@plt+0x1580>
  404074:	cbz	w2, 404080 <ferror@plt+0x1240>
  404078:	ldr	x1, [x27, #8]
  40407c:	cbz	x1, 4043c0 <ferror@plt+0x1580>
  404080:	mov	w2, #0x5                   	// #5
  404084:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404088:	mov	x0, #0x0                   	// #0
  40408c:	add	x1, x1, #0xdb0
  404090:	bl	402d20 <dcgettext@plt>
  404094:	mov	x2, x0
  404098:	mov	x3, x22
  40409c:	mov	w0, #0x0                   	// #0
  4040a0:	mov	w1, #0x0                   	// #0
  4040a4:	bl	4027b0 <error@plt>
  4040a8:	ldr	x0, [x27, #48]
  4040ac:	and	x0, x0, #0xffffffff0000
  4040b0:	and	x0, x0, #0xffffffff00ffffff
  4040b4:	nop
  4040b8:	cbz	x0, 403804 <ferror@plt+0x9c4>
  4040bc:	ldr	x0, [x27]
  4040c0:	ldr	x1, [x27, #16]
  4040c4:	adds	x0, x0, #0x1
  4040c8:	csinc	x0, x0, xzr, ne  // ne = any
  4040cc:	adds	x1, x1, #0x1
  4040d0:	ccmp	x1, x0, #0x2, ne  // ne = any
  4040d4:	b.ls	403804 <ferror@plt+0x9c4>  // b.plast
  4040d8:	mov	w2, #0x5                   	// #5
  4040dc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4040e0:	mov	x0, #0x0                   	// #0
  4040e4:	add	x1, x1, #0xdf8
  4040e8:	bl	402d20 <dcgettext@plt>
  4040ec:	mov	x2, x0
  4040f0:	mov	x3, x22
  4040f4:	mov	w1, #0x0                   	// #0
  4040f8:	mov	w0, #0x0                   	// #0
  4040fc:	bl	4027b0 <error@plt>
  404100:	b	403804 <ferror@plt+0x9c4>
  404104:	mov	w2, #0x5                   	// #5
  404108:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  40410c:	mov	x0, #0x0                   	// #0
  404110:	add	x1, x1, #0xd10
  404114:	bl	402d20 <dcgettext@plt>
  404118:	mov	x22, x0
  40411c:	mov	x1, #0x0                   	// #0
  404120:	mov	w0, #0x3                   	// #3
  404124:	bl	402e30 <setlocale@plt>
  404128:	bl	40e9e0 <ferror@plt+0xbba0>
  40412c:	mov	x3, x0
  404130:	mov	x2, x22
  404134:	mov	w1, #0x0                   	// #0
  404138:	mov	w0, #0x0                   	// #0
  40413c:	bl	4027b0 <error@plt>
  404140:	b	4035e0 <ferror@plt+0x7a0>
  404144:	mov	w2, #0x5                   	// #5
  404148:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  40414c:	mov	x0, #0x0                   	// #0
  404150:	add	x1, x1, #0xcf8
  404154:	bl	402d20 <dcgettext@plt>
  404158:	mov	x3, x0
  40415c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  404160:	mov	w1, #0x0                   	// #0
  404164:	add	x2, x2, #0x6b8
  404168:	mov	w0, #0x0                   	// #0
  40416c:	bl	4027b0 <error@plt>
  404170:	b	4035ac <ferror@plt+0x76c>
  404174:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  404178:	add	x3, x25, #0x5f8
  40417c:	add	x2, x25, #0x600
  404180:	mov	x4, #0x1                   	// #1
  404184:	ldr	x5, [x0, #1200]
  404188:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  40418c:	add	x0, x0, #0x9d8
  404190:	str	x3, [sp, #144]
  404194:	bl	409ea0 <ferror@plt+0x7060>
  404198:	ldr	x3, [sp, #144]
  40419c:	ldrb	w5, [x3, x0]
  4041a0:	cbz	w26, 4033f4 <ferror@plt+0x5b4>
  4041a4:	b	4033ec <ferror@plt+0x5ac>
  4041a8:	mov	w9, #0x11                  	// #17
  4041ac:	cbz	w2, 403c04 <ferror@plt+0xdc4>
  4041b0:	cmp	w2, #0x1
  4041b4:	b.eq	403c28 <ferror@plt+0xde8>  // b.none
  4041b8:	ldr	w1, [sp, #220]
  4041bc:	mov	w0, w2
  4041c0:	mov	x4, x8
  4041c4:	add	x3, x25, #0x1b0
  4041c8:	mov	w2, #0x4                   	// #4
  4041cc:	bl	410ca8 <ferror@plt+0xde68>
  4041d0:	cmp	w0, #0x2
  4041d4:	b.ne	4041f4 <ferror@plt+0x13b4>  // b.any
  4041d8:	ldr	x1, [sp, #624]
  4041dc:	ldurb	w2, [x1, #-1]
  4041e0:	sub	w2, w2, #0x30
  4041e4:	cmp	w2, #0x9
  4041e8:	b.hi	4041f4 <ferror@plt+0x13b4>  // b.pmore
  4041ec:	ldrb	w2, [x1, #1]
  4041f0:	cbz	w2, 404db8 <ferror@plt+0x1f78>
  4041f4:	ldr	w1, [sp, #208]
  4041f8:	mov	x4, x8
  4041fc:	add	x3, x25, #0x1b0
  404200:	mov	w2, #0x53                  	// #83
  404204:	bl	410ca8 <ferror@plt+0xde68>
  404208:	mov	x1, #0xffffffffffffffff    	// #-1
  40420c:	str	x1, [sp, #352]
  404210:	b	403e60 <ferror@plt+0x1020>
  404214:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  404218:	add	x3, x1, #0x538
  40421c:	ldr	w1, [x1, #1336]
  404220:	cmp	w1, w21
  404224:	b.eq	404238 <ferror@plt+0x13f8>  // b.none
  404228:	ldr	x1, [x22, w1, sxtw #3]
  40422c:	ldrb	w2, [x1]
  404230:	cmp	w2, #0x2d
  404234:	b.eq	404d2c <ferror@plt+0x1eec>  // b.none
  404238:	mov	w8, #0x0                   	// #0
  40423c:	ldr	x1, [sp, #176]
  404240:	ldr	w2, [sp, #120]
  404244:	cmp	x1, #0x0
  404248:	csel	w1, w8, wzr, eq  // eq = none
  40424c:	orr	w1, w2, w1
  404250:	str	w1, [sp, #120]
  404254:	cbz	w1, 403424 <ferror@plt+0x5e4>
  404258:	mov	x9, #0xffffffffffffffff    	// #-1
  40425c:	stp	xzr, xzr, [sp, #368]
  404260:	add	x1, sp, #0x160
  404264:	add	x0, x0, #0x1
  404268:	mov	x2, #0x0                   	// #0
  40426c:	str	w5, [sp, #144]
  404270:	str	w8, [sp, #200]
  404274:	str	x3, [sp, #208]
  404278:	stp	xzr, xzr, [sp, #352]
  40427c:	str	x9, [sp, #368]
  404280:	stp	xzr, xzr, [sp, #384]
  404284:	stp	xzr, xzr, [sp, #400]
  404288:	str	xzr, [sp, #416]
  40428c:	bl	407230 <ferror@plt+0x43f0>
  404290:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  404294:	ldr	w5, [sp, #144]
  404298:	add	x4, x1, #0x530
  40429c:	mov	x9, #0xffffffffffffffff    	// #-1
  4042a0:	cbz	x0, 404dd0 <ferror@plt+0x1f90>
  4042a4:	ldrb	w1, [x0]
  4042a8:	ldr	w8, [sp, #200]
  4042ac:	cmp	w1, #0x2e
  4042b0:	ldr	x3, [sp, #208]
  4042b4:	b.eq	404e2c <ferror@plt+0x1fec>  // b.none
  4042b8:	ldp	x2, x1, [sp, #352]
  4042bc:	orr	x1, x1, x2
  4042c0:	cbnz	x1, 4042d0 <ferror@plt+0x1490>
  4042c4:	mov	x1, #0xffffffffffffffff    	// #-1
  4042c8:	str	x1, [sp, #352]
  4042cc:	cbz	x0, 403424 <ferror@plt+0x5e4>
  4042d0:	add	x1, sp, #0x160
  4042d4:	mov	w2, #0x0                   	// #0
  4042d8:	str	w5, [sp, #144]
  4042dc:	str	w8, [sp, #200]
  4042e0:	str	x3, [sp, #208]
  4042e4:	bl	405730 <ferror@plt+0x28f0>
  4042e8:	ldrb	w0, [x0]
  4042ec:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  4042f0:	ldr	w5, [sp, #144]
  4042f4:	add	x4, x1, #0x530
  4042f8:	cbnz	w0, 403424 <ferror@plt+0x5e4>
  4042fc:	ldr	w8, [sp, #200]
  404300:	cbz	w8, 40437c <ferror@plt+0x153c>
  404304:	ldr	x3, [sp, #208]
  404308:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  40430c:	ldr	x1, [sp, #192]
  404310:	add	x2, x2, #0x970
  404314:	ldr	w0, [x3]
  404318:	str	w5, [sp, #200]
  40431c:	add	w4, w0, #0x1
  404320:	ldr	x0, [x22, w0, sxtw #3]
  404324:	str	w4, [x3]
  404328:	str	x0, [sp, #144]
  40432c:	add	x0, x0, #0x1
  404330:	bl	407230 <ferror@plt+0x43f0>
  404334:	ldr	w5, [sp, #200]
  404338:	cbz	x0, 404f78 <ferror@plt+0x2138>
  40433c:	ldrb	w1, [x0]
  404340:	cmp	w1, #0x2e
  404344:	b.eq	404f58 <ferror@plt+0x2118>  // b.none
  404348:	ldr	x1, [sp, #376]
  40434c:	cbnz	x1, 404360 <ferror@plt+0x1520>
  404350:	ldr	x1, [sp, #368]
  404354:	cbz	x1, 404360 <ferror@plt+0x1520>
  404358:	sub	x1, x1, #0x1
  40435c:	str	x1, [sp, #368]
  404360:	add	x1, sp, #0x160
  404364:	mov	w2, #0x1                   	// #1
  404368:	str	w5, [sp, #200]
  40436c:	bl	405730 <ferror@plt+0x28f0>
  404370:	ldrb	w0, [x0]
  404374:	ldr	w5, [sp, #200]
  404378:	cbnz	w0, 404e9c <ferror@plt+0x205c>
  40437c:	mov	w2, #0x1                   	// #1
  404380:	mov	x1, #0x48                  	// #72
  404384:	add	x0, sp, #0x160
  404388:	str	w5, [sp, #144]
  40438c:	strb	w2, [sp, #409]
  404390:	bl	410418 <ferror@plt+0xd5d8>
  404394:	ldr	w5, [sp, #144]
  404398:	add	x2, x20, #0x4c8
  40439c:	ldr	x1, [x20, #1224]
  4043a0:	cbz	x1, 403ec4 <ferror@plt+0x1084>
  4043a4:	add	x2, x1, #0x40
  4043a8:	ldr	x1, [x1, #64]
  4043ac:	b	4043a0 <ferror@plt+0x1560>
  4043b0:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  4043b4:	add	x0, x0, #0x458
  4043b8:	bl	405a28 <ferror@plt+0x2be8>
  4043bc:	b	40402c <ferror@plt+0x11ec>
  4043c0:	ldrb	w1, [x27, #49]
  4043c4:	cbnz	w1, 4040b8 <ferror@plt+0x1278>
  4043c8:	ldr	x1, [x27, #24]
  4043cc:	cbz	x1, 4040b8 <ferror@plt+0x1278>
  4043d0:	b	404080 <ferror@plt+0x1240>
  4043d4:	str	xzr, [sp, #528]
  4043d8:	b	403818 <ferror@plt+0x9d8>
  4043dc:	str	xzr, [sp, #536]
  4043e0:	b	40382c <ferror@plt+0x9ec>
  4043e4:	mov	x21, x19
  4043e8:	mov	x22, #0x0                   	// #0
  4043ec:	b	40440c <ferror@plt+0x15cc>
  4043f0:	ldrb	w1, [x0, #1]
  4043f4:	cbnz	w1, 40441c <ferror@plt+0x15dc>
  4043f8:	add	x23, x22, #0x1
  4043fc:	add	x21, x21, #0x8
  404400:	cmp	x28, x23
  404404:	b.eq	404444 <ferror@plt+0x1604>  // b.none
  404408:	mov	x22, x23
  40440c:	ldr	x0, [x21]
  404410:	ldrb	w1, [x0]
  404414:	cmp	w1, #0x2d
  404418:	b.eq	4043f0 <ferror@plt+0x15b0>  // b.none
  40441c:	mov	w1, #0x4                   	// #4
  404420:	bl	402830 <euidaccess@plt>
  404424:	cbz	w0, 4043f8 <ferror@plt+0x15b8>
  404428:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  40442c:	mov	w2, #0x5                   	// #5
  404430:	add	x1, x1, #0xef8
  404434:	mov	x0, #0x0                   	// #0
  404438:	bl	402d20 <dcgettext@plt>
  40443c:	ldr	x1, [x21]
  404440:	bl	405950 <ferror@plt+0x2b10>
  404444:	ldr	x0, [sp, #152]
  404448:	cbz	x0, 404470 <ferror@plt+0x1630>
  40444c:	mov	w1, #0x41                  	// #65
  404450:	mov	w2, #0x1b6                 	// #438
  404454:	movk	w1, #0x8, lsl #16
  404458:	bl	402900 <open@plt>
  40445c:	tbnz	w0, #31, 404ec8 <ferror@plt+0x2088>
  404460:	cmp	w0, #0x1
  404464:	b.eq	404470 <ferror@plt+0x1630>  // b.none
  404468:	mov	w1, #0x1                   	// #1
  40446c:	bl	407ca0 <ferror@plt+0x4e60>
  404470:	cbnz	w24, 404b24 <ferror@plt+0x1ce4>
  404474:	ldr	x0, [sp, #184]
  404478:	cbz	x0, 404d70 <ferror@plt+0x1f30>
  40447c:	ldr	x0, [sp, #184]
  404480:	mov	x25, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  404484:	movk	x25, #0xf0, lsl #48
  404488:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40448c:	cmp	x0, x25
  404490:	mov	x24, #0x0                   	// #0
  404494:	csel	x25, x0, x25, ls  // ls = plast
  404498:	mov	x0, #0x110                 	// #272
  40449c:	str	xzr, [sp, #320]
  4044a0:	lsl	x2, x25, #1
  4044a4:	mul	x0, x25, x0
  4044a8:	stp	x0, x2, [sp, #160]
  4044ac:	add	x2, sp, #0x1f8
  4044b0:	add	x0, x1, #0x7f8
  4044b4:	str	x2, [sp, #176]
  4044b8:	str	x0, [sp, #208]
  4044bc:	ldr	x0, [x19]
  4044c0:	str	x0, [sp, #120]
  4044c4:	ldr	x1, [sp, #208]
  4044c8:	bl	407300 <ferror@plt+0x44c0>
  4044cc:	mov	x26, x0
  4044d0:	cbz	x0, 404ee4 <ferror@plt+0x20a4>
  4044d4:	ldr	x0, [sp, #184]
  4044d8:	cmp	x0, #0x1
  4044dc:	b.hi	404858 <ferror@plt+0x1a18>  // b.pmore
  4044e0:	mov	x0, #0x30                  	// #48
  4044e4:	str	x0, [sp, #192]
  4044e8:	ldr	x28, [sp, #320]
  4044ec:	cbz	x28, 40487c <ferror@plt+0x1a3c>
  4044f0:	add	x0, sp, #0x128
  4044f4:	str	x0, [sp, #144]
  4044f8:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x498>
  4044fc:	sub	x23, x23, #0x1
  404500:	add	x0, x0, #0x850
  404504:	str	x0, [sp, #200]
  404508:	strb	wzr, [sp, #344]
  40450c:	b	4045d0 <ferror@plt+0x1790>
  404510:	ldr	x1, [sp, #168]
  404514:	adrp	x0, 406000 <ferror@plt+0x31c0>
  404518:	add	x0, x0, #0xe48
  40451c:	bl	40c388 <ferror@plt+0x9548>
  404520:	mov	x2, x0
  404524:	ldr	x0, [sp, #176]
  404528:	mov	x1, #0x0                   	// #0
  40452c:	str	x2, [sp, #496]
  404530:	bl	402a00 <pthread_mutex_init@plt>
  404534:	mov	x1, #0x0                   	// #0
  404538:	add	x0, sp, #0x228
  40453c:	bl	402ca0 <pthread_cond_init@plt>
  404540:	ldr	x0, [sp, #160]
  404544:	ldr	x4, [sp, #312]
  404548:	str	x4, [sp, #128]
  40454c:	bl	410220 <ferror@plt+0xd3e0>
  404550:	mov	x2, x0
  404554:	ldr	x4, [sp, #128]
  404558:	add	x27, x2, #0x88
  40455c:	stp	xzr, xzr, [x2]
  404560:	mov	x1, #0x0                   	// #0
  404564:	add	x0, x0, #0x58
  404568:	stp	xzr, xzr, [x2, #16]
  40456c:	stp	xzr, x4, [x2, #32]
  404570:	stp	x4, xzr, [x2, #48]
  404574:	str	wzr, [x2, #80]
  404578:	strb	wzr, [x2, #84]
  40457c:	stp	x2, x4, [sp, #128]
  404580:	bl	402a00 <pthread_mutex_init@plt>
  404584:	ldp	x2, x4, [sp, #128]
  404588:	mov	x1, x27
  40458c:	mov	x3, x25
  404590:	mov	w5, #0x0                   	// #0
  404594:	mov	x0, x2
  404598:	mov	x2, x21
  40459c:	bl	405ed0 <ferror@plt+0x3090>
  4045a0:	ldr	x5, [sp, #248]
  4045a4:	mov	x0, x21
  4045a8:	ldr	x2, [sp, #312]
  4045ac:	mov	x1, x25
  4045b0:	mov	x6, x28
  4045b4:	mov	x3, x27
  4045b8:	add	x4, sp, #0x1f0
  4045bc:	bl	4081b8 <ferror@plt+0x5378>
  4045c0:	ldr	x0, [sp, #248]
  4045c4:	mov	x1, x28
  4045c8:	bl	407478 <ferror@plt+0x4638>
  4045cc:	cbnz	w22, 404664 <ferror@plt+0x1824>
  4045d0:	ldr	x2, [sp, #120]
  4045d4:	mov	x1, x26
  4045d8:	ldr	x0, [sp, #144]
  4045dc:	bl	408850 <ferror@plt+0x5a10>
  4045e0:	tst	w0, #0xff
  4045e4:	b.eq	4047c8 <ferror@plt+0x1988>  // b.none
  4045e8:	ldrb	w22, [sp, #344]
  4045ec:	ldr	x21, [sp, #320]
  4045f0:	cbz	w22, 404614 <ferror@plt+0x17d4>
  4045f4:	cbz	x23, 40469c <ferror@plt+0x185c>
  4045f8:	ldp	x2, x0, [sp, #304]
  4045fc:	ldr	x4, [sp, #192]
  404600:	add	x1, x4, #0x1
  404604:	sub	x3, x21, x2
  404608:	msub	x0, x4, x0, x3
  40460c:	cmp	x1, x0
  404610:	b.cc	404da0 <ferror@plt+0x1f60>  // b.lo, b.ul, b.last
  404614:	ldr	x0, [sp, #296]
  404618:	str	xzr, [x20, #1536]
  40461c:	add	x21, x0, x21
  404620:	add	x0, sp, #0xf8
  404624:	mov	w1, #0x0                   	// #0
  404628:	add	x24, x24, #0x1
  40462c:	bl	407f00 <ferror@plt+0x50c0>
  404630:	add	x28, x0, #0xd
  404634:	mov	w22, #0x0                   	// #0
  404638:	ldr	x0, [sp, #312]
  40463c:	cmp	x0, #0x1
  404640:	b.hi	404510 <ferror@plt+0x16d0>  // b.pmore
  404644:	ldr	x1, [sp, #248]
  404648:	sub	x0, x21, #0x20
  40464c:	mov	x2, x28
  404650:	bl	407c20 <ferror@plt+0x4de0>
  404654:	ldr	x0, [sp, #248]
  404658:	mov	x1, x28
  40465c:	bl	407478 <ferror@plt+0x4638>
  404660:	cbz	w22, 4045d0 <ferror@plt+0x1790>
  404664:	ldr	x0, [sp, #296]
  404668:	bl	402ba0 <free@plt>
  40466c:	ldr	w0, [x20, #1216]
  404670:	cmp	w0, #0x0
  404674:	b.le	40468c <ferror@plt+0x184c>
  404678:	mov	w0, #0xffffffff            	// #-1
  40467c:	bl	405c70 <ferror@plt+0x2e30>
  404680:	ldr	w0, [x20, #1216]
  404684:	cmp	w0, #0x0
  404688:	b.gt	404678 <ferror@plt+0x1838>
  40468c:	ldrb	w0, [x20, #1528]
  404690:	cbnz	w0, 404824 <ferror@plt+0x19e4>
  404694:	mov	w0, #0x0                   	// #0
  404698:	b	403ff4 <ferror@plt+0x11b4>
  40469c:	ldr	x1, [sp, #296]
  4046a0:	str	xzr, [x20, #1536]
  4046a4:	ldr	x0, [sp, #328]
  4046a8:	add	x21, x1, x21
  4046ac:	orr	x0, x24, x0
  4046b0:	cbnz	x0, 404620 <ferror@plt+0x17e0>
  4046b4:	ldr	x1, [sp, #120]
  4046b8:	mov	x0, x26
  4046bc:	bl	407478 <ferror@plt+0x4638>
  4046c0:	ldr	x0, [sp, #152]
  4046c4:	ldr	x1, [sp, #200]
  4046c8:	bl	407300 <ferror@plt+0x44c0>
  4046cc:	cbz	x0, 404f04 <ferror@plt+0x20c4>
  4046d0:	mov	x24, #0x0                   	// #0
  4046d4:	str	x0, [sp, #248]
  4046d8:	ldr	x28, [sp, #152]
  4046dc:	b	404638 <ferror@plt+0x17f8>
  4046e0:	ldr	x0, [sp, #136]
  4046e4:	mov	x1, #0x10                  	// #16
  4046e8:	bl	40ea80 <ferror@plt+0xbc40>
  4046ec:	mov	x21, x0
  4046f0:	cbz	x0, 404eec <ferror@plt+0x20ac>
  4046f4:	add	x22, sp, #0x1f0
  4046f8:	mov	x2, #0x10                  	// #16
  4046fc:	mov	x1, x22
  404700:	bl	40ed38 <ferror@plt+0xbef8>
  404704:	mov	x0, x21
  404708:	bl	40eea8 <ferror@plt+0xc068>
  40470c:	cbnz	w0, 404eac <ferror@plt+0x206c>
  404710:	add	x21, x20, #0x4d8
  404714:	mov	x0, x21
  404718:	bl	40a090 <ferror@plt+0x7250>
  40471c:	mov	x2, x21
  404720:	mov	x0, x22
  404724:	mov	x1, #0x10                  	// #16
  404728:	bl	40abe8 <ferror@plt+0x7da8>
  40472c:	b	4039b8 <ferror@plt+0xb78>
  404730:	add	x0, sp, #0x1a8
  404734:	bl	4055f8 <ferror@plt+0x27b8>
  404738:	tst	w0, #0xff
  40473c:	b.eq	404b6c <ferror@plt+0x1d2c>  // b.none
  404740:	ldrb	w0, [x20, #1529]
  404744:	cbz	w0, 404b60 <ferror@plt+0x1d20>
  404748:	mov	w21, #0x0                   	// #0
  40474c:	mov	w23, #0x0                   	// #0
  404750:	b	403584 <ferror@plt+0x744>
  404754:	cbz	w23, 4039ac <ferror@plt+0xb6c>
  404758:	ldrb	w0, [x20, #1531]
  40475c:	cbnz	w0, 404cc0 <ferror@plt+0x1e80>
  404760:	ldrb	w0, [x20, #1530]
  404764:	cbz	w0, 403978 <ferror@plt+0xb38>
  404768:	ldr	x0, [x20, #1224]
  40476c:	cbz	x0, 403978 <ferror@plt+0xb38>
  404770:	add	x0, sp, #0x128
  404774:	mov	x1, x0
  404778:	mov	x0, x22
  40477c:	mov	x22, x1
  404780:	bl	405650 <ferror@plt+0x2810>
  404784:	mov	x0, x22
  404788:	bl	402780 <strlen@plt>
  40478c:	mov	x3, x0
  404790:	mov	w4, #0x5                   	// #5
  404794:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  404798:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  40479c:	add	x2, x2, #0xe28
  4047a0:	add	x1, x1, #0xe48
  4047a4:	mov	x0, #0x0                   	// #0
  4047a8:	bl	402c70 <dcngettext@plt>
  4047ac:	mov	x2, x0
  4047b0:	mov	x3, x22
  4047b4:	mov	w1, #0x0                   	// #0
  4047b8:	mov	w0, #0x0                   	// #0
  4047bc:	bl	4027b0 <error@plt>
  4047c0:	strb	w23, [sp, #551]
  4047c4:	b	403970 <ferror@plt+0xb30>
  4047c8:	ldr	x1, [sp, #120]
  4047cc:	mov	x0, x26
  4047d0:	bl	407478 <ferror@plt+0x4638>
  4047d4:	cbz	x23, 4047e0 <ferror@plt+0x19a0>
  4047d8:	add	x19, x19, #0x8
  4047dc:	b	4044bc <ferror@plt+0x167c>
  4047e0:	ldr	x0, [sp, #296]
  4047e4:	bl	402ba0 <free@plt>
  4047e8:	ldr	x19, [x20, #1032]
  4047ec:	cmp	xzr, x24, lsr #60
  4047f0:	lsl	x0, x24, #4
  4047f4:	cset	x1, ne  // ne = any
  4047f8:	tbnz	x24, #59, 405144 <ferror@plt+0x2304>
  4047fc:	cbnz	x1, 405144 <ferror@plt+0x2304>
  404800:	bl	410220 <ferror@plt+0xd3e0>
  404804:	mov	x21, x0
  404808:	mov	x1, x0
  40480c:	cbz	x19, 404afc <ferror@plt+0x1cbc>
  404810:	add	x2, x19, #0xd
  404814:	stp	x2, x19, [x1]
  404818:	add	x1, x1, #0x10
  40481c:	ldr	x19, [x19]
  404820:	b	40480c <ferror@plt+0x19cc>
  404824:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  404828:	ldr	x0, [x0, #1352]
  40482c:	bl	4112f0 <ferror@plt+0xe4b0>
  404830:	cmn	w0, #0x1
  404834:	b.ne	404694 <ferror@plt+0x1854>  // b.any
  404838:	mov	w2, #0x5                   	// #5
  40483c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  404840:	mov	x0, #0x0                   	// #0
  404844:	add	x1, x1, #0x760
  404848:	bl	402d20 <dcgettext@plt>
  40484c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404850:	add	x1, x1, #0xea0
  404854:	bl	405950 <ferror@plt+0x2b10>
  404858:	mov	x1, #0x1                   	// #1
  40485c:	mov	x0, x1
  404860:	lsl	x0, x0, #1
  404864:	add	x1, x1, #0x1
  404868:	cmp	x25, x0
  40486c:	b.hi	404860 <ferror@plt+0x1a20>  // b.pmore
  404870:	lsl	x0, x1, #5
  404874:	str	x0, [sp, #192]
  404878:	b	4044e8 <ferror@plt+0x16a8>
  40487c:	ldr	x0, [sp, #192]
  404880:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x17498>
  404884:	add	x1, x22, #0x3b0
  404888:	str	x1, [sp, #136]
  40488c:	add	x21, x0, #0x1
  404890:	add	x22, x0, #0x2
  404894:	nop
  404898:	cbz	x28, 404a44 <ferror@plt+0x1c04>
  40489c:	ldr	x1, [x19, x28, lsl #3]
  4048a0:	add	x2, sp, #0x1f0
  4048a4:	ldrb	w0, [x1]
  4048a8:	cmp	w0, #0x2d
  4048ac:	b.ne	404a30 <ferror@plt+0x1bf0>  // b.any
  4048b0:	ldrb	w0, [x1, #1]
  4048b4:	cbnz	w0, 404a30 <ferror@plt+0x1bf0>
  4048b8:	mov	w1, #0x0                   	// #0
  4048bc:	bl	402d10 <__fxstat@plt>
  4048c0:	cmp	w0, #0x0
  4048c4:	cset	w0, ne  // ne = any
  4048c8:	cbnz	w0, 404fac <ferror@plt+0x216c>
  4048cc:	ldr	w0, [sp, #512]
  4048d0:	and	w0, w0, #0xf000
  4048d4:	cmp	w0, #0x8, lsl #12
  4048d8:	b.eq	40493c <ferror@plt+0x1afc>  // b.none
  4048dc:	ldr	x1, [x20, #1576]
  4048e0:	cbnz	x1, 404b1c <ferror@plt+0x1cdc>
  4048e4:	ldr	x0, [x20, #1592]
  4048e8:	mov	x27, #0x20000               	// #131072
  4048ec:	cbz	x0, 404954 <ferror@plt+0x1b14>
  4048f0:	mul	x0, x21, x27
  4048f4:	ldr	x1, [x20, #1592]
  4048f8:	add	x0, x0, #0x1
  4048fc:	udiv	x5, x0, x21
  404900:	cmp	x27, x5
  404904:	b.ne	404b1c <ferror@plt+0x1cdc>  // b.any
  404908:	sub	x2, x1, x22
  40490c:	cmp	x0, x2
  404910:	b.cs	404b1c <ferror@plt+0x1cdc>  // b.hs, b.nlast
  404914:	add	x28, x28, #0x1
  404918:	add	x22, x22, x0
  40491c:	cmp	x28, x23
  404920:	b.cc	404898 <ferror@plt+0x1a58>  // b.lo, b.ul, b.last
  404924:	ldr	x1, [sp, #192]
  404928:	add	x0, sp, #0x128
  40492c:	mov	x2, x22
  404930:	str	x0, [sp, #144]
  404934:	bl	405ae0 <ferror@plt+0x2ca0>
  404938:	b	4044f8 <ferror@plt+0x16b8>
  40493c:	ldr	x0, [x20, #1592]
  404940:	ldr	x27, [sp, #544]
  404944:	cbnz	x0, 4048f0 <ferror@plt+0x1ab0>
  404948:	ldr	x0, [x20, #1576]
  40494c:	str	x0, [x20, #1592]
  404950:	cbnz	x0, 4048f0 <ferror@plt+0x1ab0>
  404954:	add	x1, sp, #0xf8
  404958:	mov	w0, #0x2                   	// #2
  40495c:	bl	402cb0 <getrlimit@plt>
  404960:	cmp	w0, #0x0
  404964:	ldr	x5, [sp, #248]
  404968:	add	x1, sp, #0xf8
  40496c:	mov	w0, #0x9                   	// #9
  404970:	csinv	x5, x5, xzr, eq  // eq = none
  404974:	str	x5, [sp, #128]
  404978:	bl	402cb0 <getrlimit@plt>
  40497c:	ldr	x5, [sp, #128]
  404980:	cbnz	w0, 404990 <ferror@plt+0x1b50>
  404984:	ldr	x0, [sp, #248]
  404988:	cmp	x5, x0
  40498c:	csel	x5, x5, x0, ls  // ls = plast
  404990:	lsr	x5, x5, #1
  404994:	add	x1, sp, #0xf8
  404998:	mov	w0, #0x5                   	// #5
  40499c:	str	x5, [sp, #128]
  4049a0:	bl	402cb0 <getrlimit@plt>
  4049a4:	ldr	x5, [sp, #128]
  4049a8:	cbnz	w0, 4049c4 <ferror@plt+0x1b84>
  4049ac:	ldr	x0, [sp, #248]
  4049b0:	mov	x1, #0xf                   	// #15
  4049b4:	lsr	x0, x0, #4
  4049b8:	mul	x0, x0, x1
  4049bc:	cmp	x5, x0
  4049c0:	csel	x5, x5, x0, ls  // ls = plast
  4049c4:	str	x5, [sp, #128]
  4049c8:	bl	40cbe8 <ferror@plt+0x9da8>
  4049cc:	fmov	d8, d0
  4049d0:	bl	40cb68 <ferror@plt+0x9d28>
  4049d4:	fmov	d1, #1.250000000000000000e-01
  4049d8:	fmov	d2, #7.500000000000000000e-01
  4049dc:	ldr	x5, [sp, #128]
  4049e0:	fmul	d1, d0, d1
  4049e4:	fmul	d0, d0, d2
  4049e8:	fcmpe	d8, d1
  4049ec:	fcsel	d8, d8, d1, gt
  4049f0:	scvtf	d1, x5
  4049f4:	fcmpe	d0, d1
  4049f8:	b.pl	404a00 <ferror@plt+0x1bc0>  // b.nfrst
  4049fc:	fcvtzu	x5, d0
  404a00:	ucvtf	d0, x5
  404a04:	fcmpe	d0, d8
  404a08:	b.le	404a10 <ferror@plt+0x1bd0>
  404a0c:	fcvtzu	x5, d8
  404a10:	ldr	x0, [sp, #136]
  404a14:	mov	w1, #0x22                  	// #34
  404a18:	ldr	w0, [x0, #208]
  404a1c:	umull	x0, w0, w1
  404a20:	cmp	x0, x5
  404a24:	csel	x0, x0, x5, cs  // cs = hs, nlast
  404a28:	str	x0, [x20, #1592]
  404a2c:	b	4048f0 <ferror@plt+0x1ab0>
  404a30:	mov	w0, #0x0                   	// #0
  404a34:	bl	402de0 <__xstat@plt>
  404a38:	cmp	w0, #0x0
  404a3c:	cset	w0, ne  // ne = any
  404a40:	b	4048c8 <ferror@plt+0x1a88>
  404a44:	mov	x0, x26
  404a48:	bl	402880 <fileno@plt>
  404a4c:	add	x2, sp, #0x1f0
  404a50:	mov	w1, w0
  404a54:	mov	w0, #0x0                   	// #0
  404a58:	bl	402d10 <__fxstat@plt>
  404a5c:	cmp	w0, #0x0
  404a60:	cset	w0, ne  // ne = any
  404a64:	b	4048c8 <ferror@plt+0x1a88>
  404a68:	ldr	x3, [sp, #496]
  404a6c:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x17498>
  404a70:	ldr	x0, [sp, #520]
  404a74:	mov	w2, #0x5                   	// #5
  404a78:	ldr	x23, [x22, #1320]
  404a7c:	add	x3, x3, x0
  404a80:	sub	x3, x3, x19
  404a84:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404a88:	mov	x0, #0x0                   	// #0
  404a8c:	add	x1, x1, #0xed0
  404a90:	add	x27, x27, x3, asr #5
  404a94:	mov	w20, #0x0                   	// #0
  404a98:	bl	402d20 <dcgettext@plt>
  404a9c:	mov	x21, x0
  404aa0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  404aa4:	mov	x0, x27
  404aa8:	ldr	x26, [x1, #2992]
  404aac:	add	x1, sp, #0xf8
  404ab0:	bl	40c710 <ferror@plt+0x98d0>
  404ab4:	mov	x5, x0
  404ab8:	mov	x4, x25
  404abc:	mov	x3, x26
  404ac0:	mov	x2, x21
  404ac4:	mov	x0, x23
  404ac8:	mov	w1, #0x1                   	// #1
  404acc:	bl	402b30 <__fprintf_chk@plt>
  404ad0:	ldr	x21, [x22, #1320]
  404ad4:	mov	w2, #0x5                   	// #5
  404ad8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404adc:	mov	x0, #0x0                   	// #0
  404ae0:	add	x1, x1, #0xee8
  404ae4:	bl	402d20 <dcgettext@plt>
  404ae8:	mov	x1, x21
  404aec:	mov	x2, x0
  404af0:	mov	x0, x19
  404af4:	bl	407510 <ferror@plt+0x46d0>
  404af8:	b	403fd4 <ferror@plt+0x1194>
  404afc:	ldr	x3, [sp, #152]
  404b00:	mov	x2, x24
  404b04:	mov	x1, x24
  404b08:	mov	x0, x21
  404b0c:	bl	4092c0 <ferror@plt+0x6480>
  404b10:	mov	x0, x21
  404b14:	bl	402ba0 <free@plt>
  404b18:	b	40466c <ferror@plt+0x182c>
  404b1c:	mov	x22, x1
  404b20:	b	404924 <ferror@plt+0x1ae4>
  404b24:	mov	x1, #0x10                  	// #16
  404b28:	mov	x0, x23
  404b2c:	bl	4103e0 <ferror@plt+0xd5a0>
  404b30:	mov	x1, #0x0                   	// #0
  404b34:	lsl	x2, x1, #4
  404b38:	cmp	x1, x22
  404b3c:	ldr	x3, [x19, x1, lsl #3]
  404b40:	add	x1, x1, #0x1
  404b44:	str	x3, [x0, x2]
  404b48:	b.ne	404b34 <ferror@plt+0x1cf4>  // b.any
  404b4c:	ldr	x3, [sp, #152]
  404b50:	mov	x2, x23
  404b54:	mov	x1, #0x0                   	// #0
  404b58:	bl	4092c0 <ferror@plt+0x6480>
  404b5c:	b	40468c <ferror@plt+0x184c>
  404b60:	ldrb	w0, [sp, #479]
  404b64:	strb	w0, [x20, #1532]
  404b68:	b	4039b8 <ferror@plt+0xb78>
  404b6c:	mov	x1, #0x48                  	// #72
  404b70:	add	x0, sp, #0x1a8
  404b74:	bl	410418 <ferror@plt+0xd5d8>
  404b78:	ldr	x1, [x20, #1224]
  404b7c:	add	x2, x20, #0x4c8
  404b80:	cbz	x1, 404b90 <ferror@plt+0x1d50>
  404b84:	add	x2, x1, #0x40
  404b88:	ldr	x1, [x1, #64]
  404b8c:	b	404b80 <ferror@plt+0x1d40>
  404b90:	ldrb	w21, [sp, #475]
  404b94:	mov	w23, #0x1                   	// #1
  404b98:	str	x0, [x2]
  404b9c:	str	xzr, [x0, #64]
  404ba0:	ldr	x3, [x20, #1224]
  404ba4:	cbnz	x3, 403530 <ferror@plt+0x6f0>
  404ba8:	b	40357c <ferror@plt+0x73c>
  404bac:	add	x1, sp, #0x168
  404bb0:	add	x0, x0, #0x1
  404bb4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  404bb8:	add	x2, x2, #0x990
  404bbc:	str	w5, [sp, #144]
  404bc0:	str	x3, [sp, #200]
  404bc4:	bl	407230 <ferror@plt+0x43f0>
  404bc8:	ldr	x2, [sp, #360]
  404bcc:	mov	x1, x2
  404bd0:	sub	x2, x2, #0x1
  404bd4:	str	x2, [sp, #360]
  404bd8:	cbz	x1, 404f94 <ferror@plt+0x2154>
  404bdc:	ldr	w5, [sp, #144]
  404be0:	ldr	x3, [sp, #200]
  404be4:	ldr	x1, [sp, #352]
  404be8:	b	403e58 <ferror@plt+0x1018>
  404bec:	ldr	x1, [sp, #192]
  404bf0:	add	x0, x0, #0x1
  404bf4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  404bf8:	add	x2, x2, #0xa68
  404bfc:	str	w5, [sp, #144]
  404c00:	str	x3, [sp, #200]
  404c04:	bl	407230 <ferror@plt+0x43f0>
  404c08:	ldr	x1, [sp, #368]
  404c0c:	ldr	w5, [sp, #144]
  404c10:	sub	x2, x1, #0x1
  404c14:	str	x2, [sp, #368]
  404c18:	ldr	x3, [sp, #200]
  404c1c:	cbz	x1, 404e8c <ferror@plt+0x204c>
  404c20:	ldrb	w1, [x0]
  404c24:	cmp	w1, #0x2e
  404c28:	b.eq	404d48 <ferror@plt+0x1f08>  // b.none
  404c2c:	add	x1, sp, #0x160
  404c30:	mov	w2, #0x1                   	// #1
  404c34:	str	w5, [sp, #144]
  404c38:	str	x3, [sp, #200]
  404c3c:	bl	405730 <ferror@plt+0x28f0>
  404c40:	ldr	w5, [sp, #144]
  404c44:	ldr	x3, [sp, #200]
  404c48:	b	403e90 <ferror@plt+0x1050>
  404c4c:	mov	w2, #0x5                   	// #5
  404c50:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404c54:	mov	x0, #0x0                   	// #0
  404c58:	add	x1, x1, #0xc08
  404c5c:	bl	402d20 <dcgettext@plt>
  404c60:	ldr	x1, [x19]
  404c64:	mov	x19, x0
  404c68:	mov	w0, #0x4                   	// #4
  404c6c:	bl	40e798 <ferror@plt+0xb958>
  404c70:	mov	x3, x0
  404c74:	mov	x2, x19
  404c78:	mov	w1, #0x0                   	// #0
  404c7c:	mov	w0, #0x0                   	// #0
  404c80:	bl	4027b0 <error@plt>
  404c84:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  404c88:	mov	w2, #0x5                   	// #5
  404c8c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404c90:	add	x1, x1, #0xc20
  404c94:	ldr	x19, [x0, #1320]
  404c98:	mov	x0, #0x0                   	// #0
  404c9c:	bl	402d20 <dcgettext@plt>
  404ca0:	mov	x3, x0
  404ca4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  404ca8:	mov	x0, x19
  404cac:	add	x2, x2, #0xf70
  404cb0:	mov	w1, #0x1                   	// #1
  404cb4:	bl	402b30 <__fprintf_chk@plt>
  404cb8:	mov	w0, #0x2                   	// #2
  404cbc:	bl	4096c8 <ferror@plt+0x6888>
  404cc0:	ldr	x0, [x20, #1224]
  404cc4:	cbz	x0, 4039ac <ferror@plt+0xb6c>
  404cc8:	add	x0, sp, #0x128
  404ccc:	mov	x1, x0
  404cd0:	mov	x0, x22
  404cd4:	mov	x22, x1
  404cd8:	bl	405650 <ferror@plt+0x2810>
  404cdc:	mov	x0, x22
  404ce0:	bl	402780 <strlen@plt>
  404ce4:	mov	x3, x0
  404ce8:	mov	w4, #0x5                   	// #5
  404cec:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  404cf0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404cf4:	add	x2, x2, #0xe28
  404cf8:	add	x1, x1, #0xe48
  404cfc:	mov	x0, #0x0                   	// #0
  404d00:	bl	402c70 <dcngettext@plt>
  404d04:	mov	x2, x0
  404d08:	mov	x3, x22
  404d0c:	mov	w0, #0x0                   	// #0
  404d10:	mov	w1, #0x0                   	// #0
  404d14:	bl	4027b0 <error@plt>
  404d18:	mov	w0, #0x1                   	// #1
  404d1c:	strb	w0, [sp, #551]
  404d20:	b	403970 <ferror@plt+0xb30>
  404d24:	mov	w0, #0x1                   	// #1
  404d28:	b	4041f4 <ferror@plt+0x13b4>
  404d2c:	ldrb	w1, [x1, #1]
  404d30:	sub	w1, w1, #0x30
  404d34:	cmp	w1, #0x9
  404d38:	cset	w8, ls  // ls = plast
  404d3c:	b	40423c <ferror@plt+0x13fc>
  404d40:	add	x1, x1, #0x1
  404d44:	b	403d24 <ferror@plt+0xee4>
  404d48:	add	x0, x0, #0x1
  404d4c:	add	x1, sp, #0x178
  404d50:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  404d54:	add	x2, x2, #0x990
  404d58:	str	w5, [sp, #144]
  404d5c:	str	x3, [sp, #200]
  404d60:	bl	407230 <ferror@plt+0x43f0>
  404d64:	ldr	w5, [sp, #144]
  404d68:	ldr	x3, [sp, #200]
  404d6c:	b	404c2c <ferror@plt+0x1dec>
  404d70:	mov	w0, #0x2                   	// #2
  404d74:	bl	40ca60 <ferror@plt+0x9c20>
  404d78:	mov	x1, #0x8                   	// #8
  404d7c:	cmp	x0, x1
  404d80:	csel	x0, x0, x1, ls  // ls = plast
  404d84:	str	x0, [sp, #184]
  404d88:	b	40447c <ferror@plt+0x163c>
  404d8c:	mov	x0, #0xffffffffffffffff    	// #-1
  404d90:	str	x0, [sp, #184]
  404d94:	b	4032a4 <ferror@plt+0x464>
  404d98:	mov	w20, #0x1                   	// #1
  404d9c:	b	403fd4 <ferror@plt+0x1194>
  404da0:	ldr	x1, [sp, #120]
  404da4:	mov	x0, x26
  404da8:	add	x19, x19, #0x8
  404dac:	str	x2, [sp, #328]
  404db0:	bl	407478 <ferror@plt+0x4638>
  404db4:	b	4044bc <ferror@plt+0x167c>
  404db8:	ldrb	w1, [x1]
  404dbc:	cmp	w1, #0x25
  404dc0:	b.eq	404de4 <ferror@plt+0x1fa4>  // b.none
  404dc4:	cmp	w1, #0x62
  404dc8:	b.eq	403f54 <ferror@plt+0x1114>  // b.none
  404dcc:	b	4041f4 <ferror@plt+0x13b4>
  404dd0:	ldp	x1, x0, [sp, #352]
  404dd4:	orr	x0, x0, x1
  404dd8:	cbnz	x0, 403424 <ferror@plt+0x5e4>
  404ddc:	str	x9, [sp, #352]
  404de0:	b	403424 <ferror@plt+0x5e4>
  404de4:	str	x8, [sp, #144]
  404de8:	str	w5, [sp, #200]
  404dec:	bl	40cb68 <ferror@plt+0x9d28>
  404df0:	ldr	d1, [sp, #496]
  404df4:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  404df8:	fmov	d3, x0
  404dfc:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  404e00:	fmov	d2, x0
  404e04:	ucvtf	d1, d1
  404e08:	ldr	x8, [sp, #144]
  404e0c:	fmul	d0, d1, d0
  404e10:	fdiv	d0, d0, d3
  404e14:	fcmpe	d0, d2
  404e18:	b.pl	404d24 <ferror@plt+0x1ee4>  // b.nfrst
  404e1c:	fcvtzu	d0, d0
  404e20:	ldr	w5, [sp, #200]
  404e24:	str	d0, [sp, #496]
  404e28:	b	403f54 <ferror@plt+0x1114>
  404e2c:	add	x1, sp, #0x168
  404e30:	mov	x2, #0x0                   	// #0
  404e34:	add	x0, x0, #0x1
  404e38:	str	w5, [sp, #144]
  404e3c:	str	w8, [sp, #200]
  404e40:	bl	407230 <ferror@plt+0x43f0>
  404e44:	ldp	x1, x2, [sp, #352]
  404e48:	ldr	w5, [sp, #144]
  404e4c:	ldr	w8, [sp, #200]
  404e50:	ldr	x3, [sp, #208]
  404e54:	orr	x1, x1, x2
  404e58:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  404e5c:	add	x4, x2, #0x530
  404e60:	cbz	x1, 4042c4 <ferror@plt+0x1484>
  404e64:	b	4042cc <ferror@plt+0x148c>
  404e68:	add	x1, sp, #0x1f0
  404e6c:	strh	wzr, [x3, #48]
  404e70:	strb	wzr, [x3, #55]
  404e74:	mov	x0, x3
  404e78:	bl	405650 <ferror@plt+0x2810>
  404e7c:	add	x0, sp, #0x1f0
  404e80:	bl	405850 <ferror@plt+0x2a10>
  404e84:	mov	w0, #0x0                   	// #0
  404e88:	bl	4096c8 <ferror@plt+0x6888>
  404e8c:	ldr	x0, [x3, #1328]
  404e90:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404e94:	add	x1, x1, #0xa30
  404e98:	bl	405888 <ferror@plt+0x2a48>
  404e9c:	ldr	x0, [sp, #144]
  404ea0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404ea4:	add	x1, x1, #0x9b0
  404ea8:	bl	405888 <ferror@plt+0x2a48>
  404eac:	mov	w2, #0x5                   	// #5
  404eb0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  404eb4:	mov	x0, #0x0                   	// #0
  404eb8:	add	x1, x1, #0x760
  404ebc:	bl	402d20 <dcgettext@plt>
  404ec0:	ldr	x1, [sp, #136]
  404ec4:	bl	405950 <ferror@plt+0x2b10>
  404ec8:	mov	w2, #0x5                   	// #5
  404ecc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  404ed0:	mov	x0, #0x0                   	// #0
  404ed4:	add	x1, x1, #0x740
  404ed8:	bl	402d20 <dcgettext@plt>
  404edc:	ldr	x1, [sp, #152]
  404ee0:	bl	405950 <ferror@plt+0x2b10>
  404ee4:	ldr	x0, [sp, #120]
  404ee8:	bl	407448 <ferror@plt+0x4608>
  404eec:	mov	w2, #0x5                   	// #5
  404ef0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  404ef4:	add	x1, x1, #0x740
  404ef8:	bl	402d20 <dcgettext@plt>
  404efc:	ldr	x1, [sp, #136]
  404f00:	bl	405950 <ferror@plt+0x2b10>
  404f04:	ldr	x0, [sp, #152]
  404f08:	bl	407448 <ferror@plt+0x4608>
  404f0c:	cmp	w26, #0x0
  404f10:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  404f14:	add	x1, x1, #0x3b0
  404f18:	mov	w2, #0x6f                  	// #111
  404f1c:	add	x0, x1, #0xe0
  404f20:	csel	w26, w26, w2, ne  // ne = any
  404f24:	strb	w26, [x1, #224]
  404f28:	bl	405850 <ferror@plt+0x2a10>
  404f2c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404f30:	mov	w2, #0x5                   	// #5
  404f34:	add	x1, x1, #0xb78
  404f38:	mov	x0, #0x0                   	// #0
  404f3c:	b	403b60 <ferror@plt+0xd20>
  404f40:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  404f44:	add	x0, x0, #0x530
  404f48:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404f4c:	add	x1, x1, #0xa30
  404f50:	ldr	x0, [x0]
  404f54:	bl	405888 <ferror@plt+0x2a48>
  404f58:	add	x0, x0, #0x1
  404f5c:	add	x1, sp, #0x178
  404f60:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  404f64:	add	x2, x2, #0x990
  404f68:	str	w5, [sp, #200]
  404f6c:	bl	407230 <ferror@plt+0x43f0>
  404f70:	ldr	w5, [sp, #200]
  404f74:	b	404348 <ferror@plt+0x1508>
  404f78:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  404f7c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  404f80:	add	x3, x25, #0x5b0
  404f84:	add	x1, x1, #0x700
  404f88:	add	x0, x0, #0xbb8
  404f8c:	mov	w2, #0x1112                	// #4370
  404f90:	bl	402da0 <__assert_fail@plt>
  404f94:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  404f98:	add	x0, x0, #0x530
  404f9c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404fa0:	add	x1, x1, #0xa48
  404fa4:	ldr	x0, [x0]
  404fa8:	bl	405888 <ferror@plt+0x2a48>
  404fac:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404fb0:	mov	w2, #0x5                   	// #5
  404fb4:	add	x1, x1, #0xf08
  404fb8:	mov	x0, #0x0                   	// #0
  404fbc:	bl	402d20 <dcgettext@plt>
  404fc0:	ldr	x1, [x19, x28, lsl #3]
  404fc4:	bl	405950 <ferror@plt+0x2b10>
  404fc8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  404fcc:	add	x1, x1, #0x3b0
  404fd0:	add	x0, x1, #0xf0
  404fd4:	strb	w26, [x1, #240]
  404fd8:	bl	405850 <ferror@plt+0x2a10>
  404fdc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  404fe0:	mov	w2, #0x5                   	// #5
  404fe4:	add	x1, x1, #0xb90
  404fe8:	mov	x0, #0x0                   	// #0
  404fec:	bl	402d20 <dcgettext@plt>
  404ff0:	mov	x19, x0
  404ff4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  404ff8:	add	x0, x0, #0x530
  404ffc:	ldr	x0, [x0]
  405000:	bl	40e9e0 <ferror@plt+0xbba0>
  405004:	mov	x3, x0
  405008:	mov	x2, x19
  40500c:	mov	w1, #0x0                   	// #0
  405010:	mov	w0, #0x2                   	// #2
  405014:	bl	4027b0 <error@plt>
  405018:	mov	w2, #0x5                   	// #5
  40501c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405020:	mov	x0, #0x0                   	// #0
  405024:	add	x1, x1, #0xad8
  405028:	str	x8, [sp, #120]
  40502c:	bl	402d20 <dcgettext@plt>
  405030:	ldr	w1, [sp, #220]
  405034:	add	x25, x25, #0x1b0
  405038:	ldr	x8, [sp, #120]
  40503c:	mov	x19, x0
  405040:	sbfiz	x1, x1, #5, #32
  405044:	mov	x0, x8
  405048:	ldr	x20, [x25, x1]
  40504c:	bl	40e9e0 <ferror@plt+0xbba0>
  405050:	mov	x2, x19
  405054:	mov	x4, x0
  405058:	mov	x3, x20
  40505c:	mov	w1, #0x0                   	// #0
  405060:	mov	w0, #0x0                   	// #0
  405064:	bl	4027b0 <error@plt>
  405068:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  40506c:	add	x1, x1, #0xaf8
  405070:	mov	w2, #0x5                   	// #5
  405074:	mov	x0, #0x0                   	// #0
  405078:	bl	402d20 <dcgettext@plt>
  40507c:	mov	x19, x0
  405080:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  405084:	add	x0, x0, #0xb18
  405088:	bl	40e9e0 <ferror@plt+0xbba0>
  40508c:	mov	x4, x0
  405090:	mov	x3, x20
  405094:	mov	x2, x19
  405098:	mov	w1, #0x0                   	// #0
  40509c:	mov	w0, #0x2                   	// #2
  4050a0:	bl	4027b0 <error@plt>
  4050a4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4050a8:	mov	w2, #0x5                   	// #5
  4050ac:	add	x1, x1, #0xba8
  4050b0:	mov	x0, #0x0                   	// #0
  4050b4:	b	403b60 <ferror@plt+0xd20>
  4050b8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4050bc:	mov	w2, #0x5                   	// #5
  4050c0:	add	x1, x1, #0xb40
  4050c4:	mov	x0, #0x0                   	// #0
  4050c8:	b	403b60 <ferror@plt+0xd20>
  4050cc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4050d0:	mov	w2, #0x5                   	// #5
  4050d4:	add	x1, x1, #0x9e8
  4050d8:	mov	x0, #0x0                   	// #0
  4050dc:	b	403b60 <ferror@plt+0xd20>
  4050e0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4050e4:	mov	w2, #0x5                   	// #5
  4050e8:	add	x1, x1, #0xb20
  4050ec:	mov	x0, #0x0                   	// #0
  4050f0:	b	403b60 <ferror@plt+0xd20>
  4050f4:	mov	x0, x25
  4050f8:	bl	407448 <ferror@plt+0x4608>
  4050fc:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1498>
  405100:	add	x0, x0, #0x9e0
  405104:	bl	405850 <ferror@plt+0x2a10>
  405108:	mov	w2, #0x5                   	// #5
  40510c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405110:	mov	x0, #0x0                   	// #0
  405114:	add	x1, x1, #0xea8
  405118:	bl	402d20 <dcgettext@plt>
  40511c:	ldr	x1, [x19, #8]
  405120:	mov	x19, x0
  405124:	mov	w0, #0x4                   	// #4
  405128:	bl	40e798 <ferror@plt+0xb958>
  40512c:	mov	x3, x0
  405130:	mov	w4, w26
  405134:	mov	x2, x19
  405138:	mov	w1, #0x0                   	// #0
  40513c:	mov	w0, #0x2                   	// #2
  405140:	bl	4027b0 <error@plt>
  405144:	bl	410478 <ferror@plt+0xd638>
  405148:	ldr	w1, [sp, #200]
  40514c:	mov	x4, x8
  405150:	add	x3, x25, #0x1b0
  405154:	mov	w2, #0x7                   	// #7
  405158:	bl	410ca8 <ferror@plt+0xde68>
  40515c:	ldr	x0, [x3, #1328]
  405160:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405164:	add	x1, x1, #0x9b0
  405168:	bl	405888 <ferror@plt+0x2a48>
  40516c:	ldr	x0, [sp, #128]
  405170:	cbz	x0, 403488 <ferror@plt+0x648>
  405174:	cbnz	x28, 404c4c <ferror@plt+0x1e0c>
  405178:	ldr	x0, [sp, #128]
  40517c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405180:	add	x1, x1, #0x7f8
  405184:	bl	407300 <ferror@plt+0x44c0>
  405188:	mov	x21, x0
  40518c:	cbz	x0, 40526c <ferror@plt+0x242c>
  405190:	add	x0, sp, #0x270
  405194:	bl	40f430 <ferror@plt+0xc5f0>
  405198:	add	x1, sp, #0x270
  40519c:	mov	x0, x21
  4051a0:	bl	40f4f0 <ferror@plt+0xc6b0>
  4051a4:	tst	w0, #0xff
  4051a8:	b.eq	405294 <ferror@plt+0x2454>  // b.none
  4051ac:	ldr	x1, [sp, #128]
  4051b0:	mov	x0, x21
  4051b4:	bl	407478 <ferror@plt+0x4638>
  4051b8:	ldr	x22, [sp, #624]
  4051bc:	cbz	x22, 405274 <ferror@plt+0x2434>
  4051c0:	mov	x0, x19
  4051c4:	bl	402ba0 <free@plt>
  4051c8:	ldr	x19, [sp, #632]
  4051cc:	mov	x21, x19
  4051d0:	b	4051ec <ferror@plt+0x23ac>
  4051d4:	ldrb	w0, [x0]
  4051d8:	add	x28, x28, #0x1
  4051dc:	cbz	w0, 40522c <ferror@plt+0x23ec>
  4051e0:	add	x21, x21, #0x8
  4051e4:	cmp	x22, x28
  4051e8:	b.eq	403488 <ferror@plt+0x648>  // b.none
  4051ec:	ldr	x0, [x21]
  4051f0:	ldrb	w1, [x0]
  4051f4:	cmp	w1, #0x2d
  4051f8:	b.ne	4051d4 <ferror@plt+0x2394>  // b.any
  4051fc:	ldrb	w1, [x0, #1]
  405200:	cbnz	w1, 4051d4 <ferror@plt+0x2394>
  405204:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405208:	mov	w2, #0x5                   	// #5
  40520c:	add	x1, x1, #0xc78
  405210:	mov	x0, #0x0                   	// #0
  405214:	bl	402d20 <dcgettext@plt>
  405218:	mov	x19, x0
  40521c:	ldr	x1, [x21]
  405220:	mov	w0, #0x4                   	// #4
  405224:	bl	40e798 <ferror@plt+0xb958>
  405228:	b	405004 <ferror@plt+0x21c4>
  40522c:	mov	w2, #0x5                   	// #5
  405230:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405234:	mov	x0, #0x0                   	// #0
  405238:	add	x1, x1, #0xcb8
  40523c:	bl	402d20 <dcgettext@plt>
  405240:	mov	x19, x0
  405244:	ldr	x2, [sp, #128]
  405248:	mov	w1, #0x3                   	// #3
  40524c:	mov	w0, #0x0                   	// #0
  405250:	bl	40e868 <ferror@plt+0xba28>
  405254:	mov	x3, x0
  405258:	mov	x4, x28
  40525c:	mov	x2, x19
  405260:	mov	w1, #0x0                   	// #0
  405264:	mov	w0, #0x2                   	// #2
  405268:	bl	4027b0 <error@plt>
  40526c:	ldr	x0, [sp, #128]
  405270:	bl	407448 <ferror@plt+0x4608>
  405274:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405278:	add	x1, x1, #0xce0
  40527c:	mov	w2, #0x5                   	// #5
  405280:	mov	x0, #0x0                   	// #0
  405284:	bl	402d20 <dcgettext@plt>
  405288:	mov	x19, x0
  40528c:	ldr	x1, [sp, #128]
  405290:	b	405220 <ferror@plt+0x23e0>
  405294:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  405298:	mov	w2, #0x5                   	// #5
  40529c:	add	x1, x1, #0xc58
  4052a0:	mov	x0, #0x0                   	// #0
  4052a4:	b	405284 <ferror@plt+0x2444>
  4052a8:	mov	x29, #0x0                   	// #0
  4052ac:	mov	x30, #0x0                   	// #0
  4052b0:	mov	x5, x0
  4052b4:	ldr	x1, [sp]
  4052b8:	add	x2, sp, #0x8
  4052bc:	mov	x6, sp
  4052c0:	movz	x0, #0x0, lsl #48
  4052c4:	movk	x0, #0x0, lsl #32
  4052c8:	movk	x0, #0x40, lsl #16
  4052cc:	movk	x0, #0x2e50
  4052d0:	movz	x3, #0x0, lsl #48
  4052d4:	movk	x3, #0x0, lsl #32
  4052d8:	movk	x3, #0x41, lsl #16
  4052dc:	movk	x3, #0x2438
  4052e0:	movz	x4, #0x0, lsl #48
  4052e4:	movk	x4, #0x0, lsl #32
  4052e8:	movk	x4, #0x41, lsl #16
  4052ec:	movk	x4, #0x24b8
  4052f0:	bl	402960 <__libc_start_main@plt>
  4052f4:	bl	402a80 <abort@plt>
  4052f8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16498>
  4052fc:	ldr	x0, [x0, #4064]
  405300:	cbz	x0, 405308 <ferror@plt+0x24c8>
  405304:	b	402a50 <__gmon_start__@plt>
  405308:	ret
  40530c:	nop
  405310:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  405314:	add	x0, x0, #0x520
  405318:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  40531c:	add	x1, x1, #0x520
  405320:	cmp	x1, x0
  405324:	b.eq	40533c <ferror@plt+0x24fc>  // b.none
  405328:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40532c:	ldr	x1, [x1, #1256]
  405330:	cbz	x1, 40533c <ferror@plt+0x24fc>
  405334:	mov	x16, x1
  405338:	br	x16
  40533c:	ret
  405340:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  405344:	add	x0, x0, #0x520
  405348:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  40534c:	add	x1, x1, #0x520
  405350:	sub	x1, x1, x0
  405354:	lsr	x2, x1, #63
  405358:	add	x1, x2, x1, asr #3
  40535c:	cmp	xzr, x1, asr #1
  405360:	asr	x1, x1, #1
  405364:	b.eq	40537c <ferror@plt+0x253c>  // b.none
  405368:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  40536c:	ldr	x2, [x2, #1264]
  405370:	cbz	x2, 40537c <ferror@plt+0x253c>
  405374:	mov	x16, x2
  405378:	br	x16
  40537c:	ret
  405380:	stp	x29, x30, [sp, #-32]!
  405384:	mov	x29, sp
  405388:	str	x19, [sp, #16]
  40538c:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  405390:	ldrb	w0, [x19, #1368]
  405394:	cbnz	w0, 4053a4 <ferror@plt+0x2564>
  405398:	bl	405310 <ferror@plt+0x24d0>
  40539c:	mov	w0, #0x1                   	// #1
  4053a0:	strb	w0, [x19, #1368]
  4053a4:	ldr	x19, [sp, #16]
  4053a8:	ldp	x29, x30, [sp], #32
  4053ac:	ret
  4053b0:	b	405340 <ferror@plt+0x2500>
  4053b4:	nop
  4053b8:	ldrsw	x0, [x0, #8]
  4053bc:	udiv	x2, x0, x1
  4053c0:	msub	x0, x2, x1, x0
  4053c4:	ret
  4053c8:	ldr	w2, [x0, #8]
  4053cc:	ldr	w0, [x1, #8]
  4053d0:	cmp	w2, w0
  4053d4:	cset	w0, eq  // eq = none
  4053d8:	ret
  4053dc:	nop
  4053e0:	ldr	x3, [x0]
  4053e4:	mov	x7, x0
  4053e8:	mov	x1, x3
  4053ec:	ldrb	w2, [x1], #1
  4053f0:	sub	w0, w2, #0x30
  4053f4:	cmp	w0, #0x9
  4053f8:	b.hi	4054e0 <ferror@plt+0x26a0>  // b.pmore
  4053fc:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x17498>
  405400:	mov	w0, #0x0                   	// #0
  405404:	ldr	w6, [x8, #1376]
  405408:	b	405424 <ferror@plt+0x25e4>
  40540c:	mov	x3, x1
  405410:	mov	x1, x3
  405414:	ldrb	w2, [x1], #1
  405418:	sub	w4, w2, #0x30
  40541c:	cmp	w4, #0x9
  405420:	b.hi	40545c <ferror@plt+0x261c>  // b.pmore
  405424:	cmp	w2, w0
  405428:	ldrb	w4, [x3, #1]
  40542c:	csel	w0, w2, w0, hi  // hi = pmore
  405430:	mov	w5, #0x0                   	// #0
  405434:	and	w0, w0, #0xff
  405438:	cmp	w4, w6
  40543c:	b.ne	40540c <ferror@plt+0x25cc>  // b.any
  405440:	add	x3, x3, #0x2
  405444:	mov	w5, #0x1                   	// #1
  405448:	mov	x1, x3
  40544c:	ldrb	w2, [x1], #1
  405450:	sub	w4, w2, #0x30
  405454:	cmp	w4, #0x9
  405458:	b.ls	405424 <ferror@plt+0x25e4>  // b.plast
  40545c:	cbnz	w5, 4054d4 <ferror@plt+0x2694>
  405460:	add	x8, x8, #0x560
  405464:	ldr	w3, [x8, #4]
  405468:	cmp	w2, w3
  40546c:	b.eq	40547c <ferror@plt+0x263c>  // b.none
  405470:	sub	x1, x1, #0x1
  405474:	str	x1, [x7]
  405478:	ret
  40547c:	mov	x3, x1
  405480:	ldrb	w2, [x3], #1
  405484:	sub	w4, w2, #0x30
  405488:	cmp	w4, #0x9
  40548c:	b.hi	405474 <ferror@plt+0x2634>  // b.pmore
  405490:	cmp	w2, w0
  405494:	mov	x1, x3
  405498:	csel	w0, w2, w0, hi  // hi = pmore
  40549c:	ldrb	w2, [x3], #1
  4054a0:	and	w0, w0, #0xff
  4054a4:	sub	w4, w2, #0x30
  4054a8:	cmp	w4, #0x9
  4054ac:	b.hi	405474 <ferror@plt+0x2634>  // b.pmore
  4054b0:	cmp	w2, w0
  4054b4:	mov	x1, x3
  4054b8:	csel	w0, w2, w0, hi  // hi = pmore
  4054bc:	ldrb	w2, [x3], #1
  4054c0:	and	w0, w0, #0xff
  4054c4:	sub	w4, w2, #0x30
  4054c8:	cmp	w4, #0x9
  4054cc:	b.ls	405490 <ferror@plt+0x2650>  // b.plast
  4054d0:	b	405474 <ferror@plt+0x2634>
  4054d4:	sub	x3, x3, #0x1
  4054d8:	str	x3, [x7]
  4054dc:	ret
  4054e0:	mov	w0, #0x0                   	// #0
  4054e4:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x17498>
  4054e8:	b	405460 <ferror@plt+0x2620>
  4054ec:	nop
  4054f0:	mov	x1, x0
  4054f4:	stp	x29, x30, [sp, #-32]!
  4054f8:	mov	x29, sp
  4054fc:	ldrb	w9, [x1]
  405500:	add	x0, sp, #0x18
  405504:	cmp	w9, #0x2d
  405508:	cinc	x1, x1, eq  // eq = none
  40550c:	str	x1, [sp, #24]
  405510:	bl	4053e0 <ferror@plt+0x25a0>
  405514:	and	w0, w0, #0xff
  405518:	cmp	w0, #0x30
  40551c:	b.ls	405544 <ferror@plt+0x2704>  // b.plast
  405520:	ldr	x1, [sp, #24]
  405524:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  405528:	add	x0, x0, #0x320
  40552c:	cmp	w9, #0x2d
  405530:	ldrb	w1, [x1]
  405534:	ldrb	w0, [x0, w1, sxtw]
  405538:	ldp	x29, x30, [sp], #32
  40553c:	cneg	w0, w0, eq  // eq = none
  405540:	ret
  405544:	mov	w0, #0x0                   	// #0
  405548:	ldp	x29, x30, [sp], #32
  40554c:	ret
  405550:	ldrb	w2, [x0]
  405554:	adrp	x6, 429000 <_obstack_memory_used@@Base+0x17498>
  405558:	add	x6, x6, #0x560
  40555c:	add	x3, x6, #0x8
  405560:	ldrb	w2, [x3, w2, sxtw]
  405564:	cbz	w2, 405574 <ferror@plt+0x2734>
  405568:	ldrb	w2, [x0, #1]!
  40556c:	ldrb	w2, [x3, w2, sxtw]
  405570:	cbnz	w2, 405568 <ferror@plt+0x2728>
  405574:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x17498>
  405578:	add	x6, x6, #0x108
  40557c:	add	x8, x8, #0x3b0
  405580:	mov	x9, #0xc                   	// #12
  405584:	mov	x10, #0x0                   	// #0
  405588:	add	x7, x10, x9
  40558c:	mov	x2, x0
  405590:	lsr	x7, x7, #1
  405594:	lsl	x11, x7, #4
  405598:	ldr	x4, [x8, x11]
  40559c:	ldrb	w3, [x4]
  4055a0:	cbnz	w3, 4055b4 <ferror@plt+0x2774>
  4055a4:	b	4055dc <ferror@plt+0x279c>
  4055a8:	b.hi	4055f0 <ferror@plt+0x27b0>  // b.pmore
  4055ac:	ldrb	w3, [x4, #1]!
  4055b0:	cbz	w3, 4055dc <ferror@plt+0x279c>
  4055b4:	ldrb	w5, [x2]
  4055b8:	add	x2, x2, #0x1
  4055bc:	ldrb	w5, [x6, w5, sxtw]
  4055c0:	cmp	w5, w3
  4055c4:	b.cs	4055a8 <ferror@plt+0x2768>  // b.hs, b.nlast
  4055c8:	mov	x9, x7
  4055cc:	cmp	x10, x9
  4055d0:	b.cc	405588 <ferror@plt+0x2748>  // b.lo, b.ul, b.last
  4055d4:	mov	w0, #0x0                   	// #0
  4055d8:	ret
  4055dc:	cbz	x1, 4055e4 <ferror@plt+0x27a4>
  4055e0:	str	x2, [x1]
  4055e4:	add	x8, x8, x11
  4055e8:	ldr	w0, [x8, #8]
  4055ec:	ret
  4055f0:	add	x10, x7, #0x1
  4055f4:	b	4055cc <ferror@plt+0x278c>
  4055f8:	mov	x1, x0
  4055fc:	ldr	x0, [x0, #32]
  405600:	cbz	x0, 40560c <ferror@plt+0x27cc>
  405604:	mov	w0, #0x0                   	// #0
  405608:	ret
  40560c:	ldr	x2, [x1, #40]
  405610:	cbnz	x2, 405608 <ferror@plt+0x27c8>
  405614:	ldrb	w0, [x1, #48]
  405618:	cbnz	w0, 405604 <ferror@plt+0x27c4>
  40561c:	ldrb	w2, [x1, #49]
  405620:	cbnz	w2, 405608 <ferror@plt+0x27c8>
  405624:	ldr	x2, [x1, #48]
  405628:	and	x2, x2, #0xffffffff0000
  40562c:	and	x2, x2, #0xffffffff00ffffff
  405630:	cbnz	x2, 405608 <ferror@plt+0x27c8>
  405634:	ldrb	w0, [x1, #54]
  405638:	cbnz	w0, 405604 <ferror@plt+0x27c4>
  40563c:	ldrb	w2, [x1, #56]
  405640:	cbnz	w2, 405608 <ferror@plt+0x27c8>
  405644:	ldrb	w0, [x1, #51]
  405648:	eor	w0, w0, #0x1
  40564c:	ret
  405650:	ldrh	w2, [x0, #48]
  405654:	cbz	w2, 405660 <ferror@plt+0x2820>
  405658:	mov	w2, #0x62                  	// #98
  40565c:	strb	w2, [x1], #1
  405660:	ldr	x4, [x0, #32]
  405664:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  405668:	add	x3, x3, #0x560
  40566c:	add	x2, x3, #0x208
  405670:	cmp	x4, x2
  405674:	b.eq	405718 <ferror@plt+0x28d8>  // b.none
  405678:	ldr	x4, [x0, #40]
  40567c:	mov	x2, x1
  405680:	cbz	x4, 405690 <ferror@plt+0x2850>
  405684:	add	x2, x1, #0x1
  405688:	mov	w4, #0x66                  	// #102
  40568c:	strb	w4, [x1]
  405690:	ldrb	w1, [x0, #52]
  405694:	cbz	w1, 4056a0 <ferror@plt+0x2860>
  405698:	mov	w1, #0x67                  	// #103
  40569c:	strb	w1, [x2], #1
  4056a0:	ldrb	w1, [x0, #53]
  4056a4:	cbz	w1, 4056b0 <ferror@plt+0x2870>
  4056a8:	mov	w1, #0x68                  	// #104
  4056ac:	strb	w1, [x2], #1
  4056b0:	ldr	x1, [x0, #32]
  4056b4:	add	x3, x3, #0x308
  4056b8:	cmp	x1, x3
  4056bc:	b.eq	405724 <ferror@plt+0x28e4>  // b.none
  4056c0:	ldrb	w1, [x0, #54]
  4056c4:	cbz	w1, 4056d0 <ferror@plt+0x2890>
  4056c8:	mov	w1, #0x4d                  	// #77
  4056cc:	strb	w1, [x2], #1
  4056d0:	ldrb	w1, [x0, #50]
  4056d4:	cbz	w1, 4056e0 <ferror@plt+0x28a0>
  4056d8:	mov	w1, #0x6e                  	// #110
  4056dc:	strb	w1, [x2], #1
  4056e0:	ldrb	w1, [x0, #51]
  4056e4:	cbz	w1, 4056f0 <ferror@plt+0x28b0>
  4056e8:	mov	w1, #0x52                  	// #82
  4056ec:	strb	w1, [x2], #1
  4056f0:	ldrb	w1, [x0, #55]
  4056f4:	cbz	w1, 405700 <ferror@plt+0x28c0>
  4056f8:	mov	w1, #0x72                  	// #114
  4056fc:	strb	w1, [x2], #1
  405700:	ldrb	w0, [x0, #56]
  405704:	cbz	w0, 405710 <ferror@plt+0x28d0>
  405708:	mov	w0, #0x56                  	// #86
  40570c:	strb	w0, [x2], #1
  405710:	strb	wzr, [x2]
  405714:	ret
  405718:	mov	w2, #0x64                  	// #100
  40571c:	strb	w2, [x1], #1
  405720:	b	405678 <ferror@plt+0x2838>
  405724:	mov	w1, #0x69                  	// #105
  405728:	strb	w1, [x2], #1
  40572c:	b	4056c0 <ferror@plt+0x2880>
  405730:	ldrb	w3, [x0]
  405734:	cbz	w3, 4057bc <ferror@plt+0x297c>
  405738:	adrp	x4, 429000 <_obstack_memory_used@@Base+0x17498>
  40573c:	add	x4, x4, #0x560
  405740:	add	x7, x4, #0x108
  405744:	add	x8, x4, #0x308
  405748:	and	w6, w2, #0xfffffffd
  40574c:	add	x4, x4, #0x208
  405750:	sub	w2, w2, #0x1
  405754:	mov	w5, #0x1                   	// #1
  405758:	b	405788 <ferror@plt+0x2948>
  40575c:	cmp	w3, #0x56
  405760:	b.eq	405818 <ferror@plt+0x29d8>  // b.none
  405764:	b.ls	4057c0 <ferror@plt+0x2980>  // b.plast
  405768:	cmp	w3, #0x62
  40576c:	b.eq	4057f8 <ferror@plt+0x29b8>  // b.none
  405770:	cmp	w3, #0x64
  405774:	b.ne	4057bc <ferror@plt+0x297c>  // b.any
  405778:	str	x4, [x1, #32]
  40577c:	nop
  405780:	ldrb	w3, [x0, #1]!
  405784:	cbz	w3, 4057bc <ferror@plt+0x297c>
  405788:	cmp	w3, #0x66
  40578c:	b.eq	4057f0 <ferror@plt+0x29b0>  // b.none
  405790:	b.ls	40575c <ferror@plt+0x291c>  // b.plast
  405794:	cmp	w3, #0x69
  405798:	b.eq	405828 <ferror@plt+0x29e8>  // b.none
  40579c:	b.ls	4057d8 <ferror@plt+0x2998>  // b.plast
  4057a0:	cmp	w3, #0x6e
  4057a4:	b.eq	405820 <ferror@plt+0x29e0>  // b.none
  4057a8:	cmp	w3, #0x72
  4057ac:	b.ne	4057bc <ferror@plt+0x297c>  // b.any
  4057b0:	strb	w5, [x1, #55]
  4057b4:	ldrb	w3, [x0, #1]!
  4057b8:	cbnz	w3, 405788 <ferror@plt+0x2948>
  4057bc:	ret
  4057c0:	cmp	w3, #0x4d
  4057c4:	b.eq	405838 <ferror@plt+0x29f8>  // b.none
  4057c8:	cmp	w3, #0x52
  4057cc:	b.ne	4057bc <ferror@plt+0x297c>  // b.any
  4057d0:	strb	w5, [x1, #51]
  4057d4:	b	405780 <ferror@plt+0x2940>
  4057d8:	cmp	w3, #0x67
  4057dc:	b.eq	405810 <ferror@plt+0x29d0>  // b.none
  4057e0:	cmp	w3, #0x68
  4057e4:	b.ne	4057bc <ferror@plt+0x297c>  // b.any
  4057e8:	strb	w5, [x1, #53]
  4057ec:	b	405780 <ferror@plt+0x2940>
  4057f0:	str	x7, [x1, #40]
  4057f4:	b	405780 <ferror@plt+0x2940>
  4057f8:	cbnz	w6, 405800 <ferror@plt+0x29c0>
  4057fc:	strb	w5, [x1, #48]
  405800:	cmp	w2, #0x1
  405804:	b.hi	405780 <ferror@plt+0x2940>  // b.pmore
  405808:	strb	w5, [x1, #49]
  40580c:	b	405780 <ferror@plt+0x2940>
  405810:	strb	w5, [x1, #52]
  405814:	b	405780 <ferror@plt+0x2940>
  405818:	strb	w5, [x1, #56]
  40581c:	b	405780 <ferror@plt+0x2940>
  405820:	strb	w5, [x1, #50]
  405824:	b	405780 <ferror@plt+0x2940>
  405828:	ldr	x3, [x1, #32]
  40582c:	cbnz	x3, 405780 <ferror@plt+0x2940>
  405830:	str	x8, [x1, #32]
  405834:	b	405780 <ferror@plt+0x2940>
  405838:	strb	w5, [x1, #54]
  40583c:	b	405780 <ferror@plt+0x2940>
  405840:	ldr	x0, [x0]
  405844:	ldr	x1, [x1]
  405848:	b	402b50 <strcmp@plt>
  40584c:	nop
  405850:	stp	x29, x30, [sp, #-32]!
  405854:	mov	w2, #0x5                   	// #5
  405858:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40585c:	mov	x29, sp
  405860:	add	x1, x1, #0x588
  405864:	str	x19, [sp, #16]
  405868:	mov	x19, x0
  40586c:	mov	x0, #0x0                   	// #0
  405870:	bl	402d20 <dcgettext@plt>
  405874:	mov	x2, x0
  405878:	mov	x3, x19
  40587c:	mov	w1, #0x0                   	// #0
  405880:	mov	w0, #0x2                   	// #2
  405884:	bl	4027b0 <error@plt>
  405888:	stp	x29, x30, [sp, #-48]!
  40588c:	mov	w2, #0x5                   	// #5
  405890:	mov	x29, sp
  405894:	stp	x19, x20, [sp, #16]
  405898:	mov	x19, x1
  40589c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4058a0:	add	x1, x1, #0x5a8
  4058a4:	str	x21, [sp, #32]
  4058a8:	mov	x21, x0
  4058ac:	mov	x0, #0x0                   	// #0
  4058b0:	bl	402d20 <dcgettext@plt>
  4058b4:	mov	x1, x19
  4058b8:	mov	w2, #0x5                   	// #5
  4058bc:	mov	x19, x0
  4058c0:	mov	x0, #0x0                   	// #0
  4058c4:	bl	402d20 <dcgettext@plt>
  4058c8:	mov	x20, x0
  4058cc:	mov	x0, x21
  4058d0:	bl	40e9e0 <ferror@plt+0xbba0>
  4058d4:	mov	x3, x20
  4058d8:	mov	x4, x0
  4058dc:	mov	x2, x19
  4058e0:	mov	w1, #0x0                   	// #0
  4058e4:	mov	w0, #0x2                   	// #2
  4058e8:	bl	4027b0 <error@plt>
  4058ec:	nop
  4058f0:	stp	x29, x30, [sp, #-48]!
  4058f4:	mov	x29, sp
  4058f8:	str	x21, [sp, #32]
  4058fc:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x17498>
  405900:	add	x21, x21, #0x560
  405904:	stp	x19, x20, [sp, #16]
  405908:	mov	w20, w0
  40590c:	ldr	x19, [x21, #1032]
  405910:	cbz	x19, 405928 <ferror@plt+0x2ae8>
  405914:	nop
  405918:	add	x0, x19, #0xd
  40591c:	bl	402e20 <unlink@plt>
  405920:	ldr	x19, [x19]
  405924:	cbnz	x19, 405918 <ferror@plt+0x2ad8>
  405928:	mov	w0, w20
  40592c:	mov	x1, #0x0                   	// #0
  405930:	str	xzr, [x21, #1032]
  405934:	bl	402890 <signal@plt>
  405938:	mov	w0, w20
  40593c:	ldp	x19, x20, [sp, #16]
  405940:	ldr	x21, [sp, #32]
  405944:	ldp	x29, x30, [sp], #48
  405948:	b	4027a0 <raise@plt>
  40594c:	nop
  405950:	stp	x29, x30, [sp, #-48]!
  405954:	mov	x29, sp
  405958:	stp	x19, x20, [sp, #16]
  40595c:	mov	x20, x0
  405960:	mov	x19, x1
  405964:	str	x21, [sp, #32]
  405968:	bl	402db0 <__errno_location@plt>
  40596c:	ldr	w21, [x0]
  405970:	cbz	x19, 4059a0 <ferror@plt+0x2b60>
  405974:	mov	x2, x19
  405978:	mov	w1, #0x3                   	// #3
  40597c:	mov	w0, #0x0                   	// #0
  405980:	bl	40e868 <ferror@plt+0xba28>
  405984:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  405988:	mov	x4, x0
  40598c:	mov	x3, x20
  405990:	mov	w1, w21
  405994:	add	x2, x2, #0x5e0
  405998:	mov	w0, #0x2                   	// #2
  40599c:	bl	4027b0 <error@plt>
  4059a0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4059a4:	mov	w2, #0x5                   	// #5
  4059a8:	add	x1, x1, #0x5d0
  4059ac:	mov	x0, #0x0                   	// #0
  4059b0:	bl	402d20 <dcgettext@plt>
  4059b4:	mov	x19, x0
  4059b8:	b	405974 <ferror@plt+0x2b34>
  4059bc:	nop
  4059c0:	stp	x29, x30, [sp, #-32]!
  4059c4:	mov	x29, sp
  4059c8:	str	x19, [sp, #16]
  4059cc:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  4059d0:	add	x19, x19, #0x560
  4059d4:	ldr	w1, [x19, #1168]
  4059d8:	cbz	w1, 4059f4 <ferror@plt+0x2bb4>
  4059dc:	mov	x0, #0x0                   	// #0
  4059e0:	tbz	w1, #31, 4059e8 <ferror@plt+0x2ba8>
  4059e4:	add	x0, x19, #0x410
  4059e8:	ldr	x19, [sp, #16]
  4059ec:	ldp	x29, x30, [sp], #32
  4059f0:	ret
  4059f4:	add	x2, x19, #0x410
  4059f8:	mov	w1, #0x1                   	// #1
  4059fc:	mov	w0, #0x0                   	// #0
  405a00:	bl	402d10 <__fxstat@plt>
  405a04:	cbz	w0, 405a18 <ferror@plt+0x2bd8>
  405a08:	bl	402db0 <__errno_location@plt>
  405a0c:	ldr	w1, [x0]
  405a10:	str	w1, [x19, #1168]
  405a14:	b	4059dc <ferror@plt+0x2b9c>
  405a18:	mov	w0, #0xffffffff            	// #-1
  405a1c:	str	w0, [x19, #1168]
  405a20:	b	4059e4 <ferror@plt+0x2ba4>
  405a24:	nop
  405a28:	stp	x29, x30, [sp, #-32]!
  405a2c:	mov	x29, sp
  405a30:	stp	x19, x20, [sp, #16]
  405a34:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  405a38:	add	x19, x19, #0x560
  405a3c:	mov	x20, x0
  405a40:	ldr	x1, [x19, #1176]
  405a44:	ldr	x2, [x19, #1184]
  405a48:	ldr	x0, [x19, #1192]
  405a4c:	cmp	x1, x2
  405a50:	b.eq	405a6c <ferror@plt+0x2c2c>  // b.none
  405a54:	str	x20, [x0, x1, lsl #3]
  405a58:	add	x2, x1, #0x1
  405a5c:	str	x2, [x19, #1176]
  405a60:	ldp	x19, x20, [sp, #16]
  405a64:	ldp	x29, x30, [sp], #32
  405a68:	ret
  405a6c:	cbz	x0, 405ab4 <ferror@plt+0x2c74>
  405a70:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  405a74:	movk	x1, #0xaaa, lsl #48
  405a78:	cmp	x2, x1
  405a7c:	b.cs	405acc <ferror@plt+0x2c8c>  // b.hs, b.nlast
  405a80:	add	x1, x2, #0x1
  405a84:	add	x2, x1, x2, lsr #1
  405a88:	lsl	x1, x2, #3
  405a8c:	str	x2, [x19, #1184]
  405a90:	bl	410280 <ferror@plt+0xd440>
  405a94:	ldr	x1, [x19, #1176]
  405a98:	str	x0, [x19, #1192]
  405a9c:	add	x2, x1, #0x1
  405aa0:	str	x2, [x19, #1176]
  405aa4:	str	x20, [x0, x1, lsl #3]
  405aa8:	ldp	x19, x20, [sp, #16]
  405aac:	ldp	x29, x30, [sp], #32
  405ab0:	ret
  405ab4:	cbz	x2, 405ad0 <ferror@plt+0x2c90>
  405ab8:	cmp	xzr, x2, lsr #61
  405abc:	lsl	x1, x2, #3
  405ac0:	cset	x3, ne  // ne = any
  405ac4:	tbnz	x2, #60, 405acc <ferror@plt+0x2c8c>
  405ac8:	cbz	x3, 405a8c <ferror@plt+0x2c4c>
  405acc:	bl	410478 <ferror@plt+0xd638>
  405ad0:	mov	x1, #0x80                  	// #128
  405ad4:	mov	x2, #0x10                  	// #16
  405ad8:	b	405a8c <ferror@plt+0x2c4c>
  405adc:	nop
  405ae0:	stp	x29, x30, [sp, #-48]!
  405ae4:	mov	x29, sp
  405ae8:	stp	x19, x20, [sp, #16]
  405aec:	mov	x19, x0
  405af0:	stp	x21, x22, [sp, #32]
  405af4:	mov	x21, x1
  405af8:	add	x22, x1, #0x1
  405afc:	and	x20, x2, #0xffffffffffffffe0
  405b00:	add	x20, x20, #0x20
  405b04:	mov	x0, x20
  405b08:	bl	4028e0 <malloc@plt>
  405b0c:	str	x0, [x19]
  405b10:	cbz	x0, 405b34 <ferror@plt+0x2cf4>
  405b14:	stp	xzr, xzr, [x19, #8]
  405b18:	stp	x20, xzr, [x19, #24]
  405b1c:	str	x21, [x19, #40]
  405b20:	strb	wzr, [x19, #48]
  405b24:	ldp	x19, x20, [sp, #16]
  405b28:	ldp	x21, x22, [sp, #32]
  405b2c:	ldp	x29, x30, [sp], #48
  405b30:	ret
  405b34:	cmp	x22, x20, lsr #1
  405b38:	lsr	x2, x20, #1
  405b3c:	b.cc	405afc <ferror@plt+0x2cbc>  // b.lo, b.ul, b.last
  405b40:	bl	410478 <ferror@plt+0xd638>
  405b44:	nop
  405b48:	stp	x29, x30, [sp, #-32]!
  405b4c:	mov	w2, #0x0                   	// #0
  405b50:	mov	x29, sp
  405b54:	stp	x19, x20, [sp, #16]
  405b58:	mov	x20, x1
  405b5c:	mov	x19, x0
  405b60:	sub	x1, x1, x0
  405b64:	bl	40c750 <ferror@plt+0x9910>
  405b68:	cmp	x20, x19
  405b6c:	sxtw	x0, w0
  405b70:	b.ls	405b8c <ferror@plt+0x2d4c>  // b.plast
  405b74:	nop
  405b78:	ldrb	w2, [x19], #1
  405b7c:	cmp	w2, #0x9
  405b80:	cinc	x0, x0, eq  // eq = none
  405b84:	cmp	x20, x19
  405b88:	b.ne	405b78 <ferror@plt+0x2d38>  // b.any
  405b8c:	ldp	x19, x20, [sp, #16]
  405b90:	ldp	x29, x30, [sp], #32
  405b94:	ret
  405b98:	stp	x29, x30, [sp, #-48]!
  405b9c:	mov	x29, sp
  405ba0:	stp	x19, x20, [sp, #16]
  405ba4:	mov	x20, x1
  405ba8:	stp	x21, x22, [sp, #32]
  405bac:	mov	x21, x0
  405bb0:	mov	x22, x2
  405bb4:	bl	402db0 <__errno_location@plt>
  405bb8:	mov	x19, x0
  405bbc:	mov	x2, x22
  405bc0:	mov	x0, x21
  405bc4:	mov	x1, x20
  405bc8:	str	wzr, [x19]
  405bcc:	bl	402c60 <strxfrm@plt>
  405bd0:	ldr	w19, [x19]
  405bd4:	cbnz	w19, 405be8 <ferror@plt+0x2da8>
  405bd8:	ldp	x19, x20, [sp, #16]
  405bdc:	ldp	x21, x22, [sp, #32]
  405be0:	ldp	x29, x30, [sp], #48
  405be4:	ret
  405be8:	mov	w2, #0x5                   	// #5
  405bec:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405bf0:	mov	x0, #0x0                   	// #0
  405bf4:	add	x1, x1, #0x5e8
  405bf8:	bl	402d20 <dcgettext@plt>
  405bfc:	mov	x2, x0
  405c00:	mov	w1, w19
  405c04:	mov	w0, #0x0                   	// #0
  405c08:	bl	4027b0 <error@plt>
  405c0c:	mov	w2, #0x5                   	// #5
  405c10:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405c14:	mov	x0, #0x0                   	// #0
  405c18:	add	x1, x1, #0x608
  405c1c:	bl	402d20 <dcgettext@plt>
  405c20:	mov	x2, x0
  405c24:	mov	w1, #0x0                   	// #0
  405c28:	mov	w0, #0x0                   	// #0
  405c2c:	bl	4027b0 <error@plt>
  405c30:	mov	w2, #0x5                   	// #5
  405c34:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405c38:	mov	x0, #0x0                   	// #0
  405c3c:	add	x1, x1, #0x638
  405c40:	bl	402d20 <dcgettext@plt>
  405c44:	mov	x19, x0
  405c48:	mov	x2, x20
  405c4c:	mov	w1, #0x8                   	// #8
  405c50:	mov	w0, #0x0                   	// #0
  405c54:	bl	40e708 <ferror@plt+0xb8c8>
  405c58:	mov	x2, x19
  405c5c:	mov	x3, x0
  405c60:	mov	w1, #0x0                   	// #0
  405c64:	mov	w0, #0x2                   	// #2
  405c68:	bl	4027b0 <error@plt>
  405c6c:	nop
  405c70:	stp	x29, x30, [sp, #-64]!
  405c74:	cmp	w0, #0x0
  405c78:	cset	w2, eq  // eq = none
  405c7c:	mov	x29, sp
  405c80:	add	x1, sp, #0x2c
  405c84:	stp	x19, x20, [sp, #16]
  405c88:	mov	w19, w0
  405c8c:	csinv	w0, w0, wzr, ne  // ne = any
  405c90:	bl	402e10 <waitpid@plt>
  405c94:	cmp	w0, #0x0
  405c98:	b.lt	405d04 <ferror@plt+0x2ec4>  // b.tstop
  405c9c:	mov	w20, w0
  405ca0:	b.eq	405cd4 <ferror@plt+0x2e94>  // b.none
  405ca4:	cmp	w19, #0x0
  405ca8:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  405cac:	add	x19, x19, #0x560
  405cb0:	b.le	405ce4 <ferror@plt+0x2ea4>
  405cb4:	ldr	w0, [sp, #44]
  405cb8:	and	w1, w0, #0x7f
  405cbc:	ubfx	x0, x0, #8, #8
  405cc0:	orr	w0, w0, w1
  405cc4:	cbnz	w0, 405d4c <ferror@plt+0x2f0c>
  405cc8:	ldr	w0, [x19, #1216]
  405ccc:	sub	w0, w0, #0x1
  405cd0:	str	w0, [x19, #1216]
  405cd4:	mov	w0, w20
  405cd8:	ldp	x19, x20, [sp, #16]
  405cdc:	ldp	x29, x30, [sp], #64
  405ce0:	ret
  405ce4:	ldr	x0, [x19, #1208]
  405ce8:	add	x1, sp, #0x30
  405cec:	str	w20, [sp, #56]
  405cf0:	bl	40c280 <ferror@plt+0x9440>
  405cf4:	cbz	x0, 405cd4 <ferror@plt+0x2e94>
  405cf8:	mov	w1, #0x2                   	// #2
  405cfc:	strb	w1, [x0, #12]
  405d00:	b	405cb4 <ferror@plt+0x2e74>
  405d04:	bl	402db0 <__errno_location@plt>
  405d08:	mov	x3, x0
  405d0c:	mov	w2, #0x5                   	// #5
  405d10:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405d14:	mov	x0, #0x0                   	// #0
  405d18:	add	x1, x1, #0x658
  405d1c:	ldr	w20, [x3]
  405d20:	bl	402d20 <dcgettext@plt>
  405d24:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  405d28:	mov	x19, x0
  405d2c:	mov	w0, #0x4                   	// #4
  405d30:	ldr	x1, [x1, #2576]
  405d34:	bl	40e798 <ferror@plt+0xb958>
  405d38:	mov	x3, x0
  405d3c:	mov	x2, x19
  405d40:	mov	w1, w20
  405d44:	mov	w0, #0x2                   	// #2
  405d48:	bl	4027b0 <error@plt>
  405d4c:	mov	w2, #0x5                   	// #5
  405d50:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405d54:	mov	x0, #0x0                   	// #0
  405d58:	add	x1, x1, #0x670
  405d5c:	bl	402d20 <dcgettext@plt>
  405d60:	ldr	x1, [x19, #1200]
  405d64:	mov	x19, x0
  405d68:	mov	w0, #0x4                   	// #4
  405d6c:	bl	40e798 <ferror@plt+0xb958>
  405d70:	mov	x3, x0
  405d74:	mov	x2, x19
  405d78:	mov	w1, #0x0                   	// #0
  405d7c:	mov	w0, #0x2                   	// #2
  405d80:	bl	4027b0 <error@plt>
  405d84:	nop
  405d88:	stp	x29, x30, [sp, #-48]!
  405d8c:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  405d90:	mov	x29, sp
  405d94:	str	x19, [sp, #16]
  405d98:	mov	w19, w0
  405d9c:	ldr	x0, [x2, #2584]
  405da0:	add	x1, sp, #0x20
  405da4:	str	w19, [sp, #40]
  405da8:	bl	40c280 <ferror@plt+0x9440>
  405dac:	cbz	x0, 405dc0 <ferror@plt+0x2f80>
  405db0:	mov	w1, #0x2                   	// #2
  405db4:	strb	w1, [x0, #12]
  405db8:	mov	w0, w19
  405dbc:	bl	405c70 <ferror@plt+0x2e30>
  405dc0:	ldr	x19, [sp, #16]
  405dc4:	ldp	x29, x30, [sp], #48
  405dc8:	ret
  405dcc:	nop
  405dd0:	stp	x29, x30, [sp, #-48]!
  405dd4:	mov	x29, sp
  405dd8:	stp	x19, x20, [sp, #16]
  405ddc:	mov	x19, x1
  405de0:	mov	w20, w0
  405de4:	mov	x0, x1
  405de8:	bl	402780 <strlen@plt>
  405dec:	mov	x1, x19
  405df0:	mov	x2, x0
  405df4:	mov	w0, #0x2                   	// #2
  405df8:	bl	402a60 <write@plt>
  405dfc:	cbnz	w20, 405e1c <ferror@plt+0x2fdc>
  405e00:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405e04:	add	x1, x1, #0xd00
  405e08:	mov	x2, #0x1                   	// #1
  405e0c:	mov	w0, #0x2                   	// #2
  405e10:	bl	402a60 <write@plt>
  405e14:	mov	w0, #0x2                   	// #2
  405e18:	bl	402750 <_exit@plt>
  405e1c:	add	x1, sp, #0x20
  405e20:	mov	w0, w20
  405e24:	bl	40c650 <ferror@plt+0x9810>
  405e28:	mov	x19, x0
  405e2c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  405e30:	add	x1, x1, #0x690
  405e34:	mov	x2, #0x8                   	// #8
  405e38:	mov	w0, #0x2                   	// #2
  405e3c:	bl	402a60 <write@plt>
  405e40:	mov	x0, x19
  405e44:	bl	402780 <strlen@plt>
  405e48:	mov	x1, x19
  405e4c:	mov	x2, x0
  405e50:	mov	w0, #0x2                   	// #2
  405e54:	bl	402a60 <write@plt>
  405e58:	b	405e00 <ferror@plt+0x2fc0>
  405e5c:	nop
  405e60:	stp	x29, x30, [sp, #-32]!
  405e64:	mov	x29, sp
  405e68:	stp	x19, x20, [sp, #16]
  405e6c:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x17498>
  405e70:	add	x20, x20, #0x560
  405e74:	mov	x19, x0
  405e78:	ldr	x0, [x20, #1208]
  405e7c:	cbz	x0, 405ea0 <ferror@plt+0x3060>
  405e80:	mov	w1, #0x1                   	// #1
  405e84:	strb	w1, [x19, #12]
  405e88:	mov	x1, x19
  405e8c:	bl	40c238 <ferror@plt+0x93f8>
  405e90:	cbz	x0, 405ec8 <ferror@plt+0x3088>
  405e94:	ldp	x19, x20, [sp, #16]
  405e98:	ldp	x29, x30, [sp], #32
  405e9c:	ret
  405ea0:	adrp	x3, 405000 <ferror@plt+0x21c0>
  405ea4:	adrp	x2, 405000 <ferror@plt+0x21c0>
  405ea8:	add	x3, x3, #0x3c8
  405eac:	add	x2, x2, #0x3b8
  405eb0:	mov	x4, #0x0                   	// #0
  405eb4:	mov	x1, #0x0                   	// #0
  405eb8:	mov	x0, #0x2f                  	// #47
  405ebc:	bl	40bce0 <ferror@plt+0x8ea0>
  405ec0:	str	x0, [x20, #1208]
  405ec4:	cbnz	x0, 405e80 <ferror@plt+0x3040>
  405ec8:	bl	410478 <ferror@plt+0xd638>
  405ecc:	nop
  405ed0:	stp	x29, x30, [sp, #-80]!
  405ed4:	mov	x6, x0
  405ed8:	and	w5, w5, #0xff
  405edc:	mov	x29, sp
  405ee0:	stp	x19, x20, [sp, #16]
  405ee4:	mov	x19, x1
  405ee8:	stp	x21, x22, [sp, #32]
  405eec:	mov	x22, x4
  405ef0:	mov	x21, x3
  405ef4:	stp	x23, x24, [sp, #48]
  405ef8:	neg	x24, x4, lsl #5
  405efc:	mov	x23, x2
  405f00:	str	x25, [sp, #64]
  405f04:	add	x4, x6, #0x18
  405f08:	add	x20, x23, x24
  405f0c:	cbz	w5, 405f9c <ferror@plt+0x315c>
  405f10:	ldr	x5, [x6, #40]
  405f14:	add	x4, x6, #0x10
  405f18:	lsr	x3, x5, #1
  405f1c:	sub	x5, x5, x3
  405f20:	sub	x23, x20, x3, lsl #5
  405f24:	ldr	w2, [x6, #80]
  405f28:	mov	x1, #0x0                   	// #0
  405f2c:	stp	x20, x23, [x19]
  405f30:	add	x0, x19, #0x58
  405f34:	add	w2, w2, #0x1
  405f38:	stp	x20, x23, [x19, #16]
  405f3c:	add	x25, x19, #0x88
  405f40:	stp	x4, x3, [x19, #32]
  405f44:	stp	x5, x6, [x19, #48]
  405f48:	str	w2, [x19, #80]
  405f4c:	strb	wzr, [x19, #84]
  405f50:	bl	402a00 <pthread_mutex_init@plt>
  405f54:	lsr	x3, x21, #1
  405f58:	cmp	x21, #0x1
  405f5c:	mov	x0, x19
  405f60:	mov	x4, x22
  405f64:	mov	x2, x20
  405f68:	mov	x1, x25
  405f6c:	sub	x21, x21, x3
  405f70:	mov	w5, #0x1                   	// #1
  405f74:	b.ls	405fb0 <ferror@plt+0x3170>  // b.plast
  405f78:	str	x25, [x19, #64]
  405f7c:	add	x20, x23, x24
  405f80:	bl	405ed0 <ferror@plt+0x3090>
  405f84:	str	x0, [x19, #72]
  405f88:	mov	x6, x19
  405f8c:	mov	w5, #0x0                   	// #0
  405f90:	mov	x19, x0
  405f94:	add	x4, x6, #0x18
  405f98:	cbnz	w5, 405f10 <ferror@plt+0x30d0>
  405f9c:	ldr	x5, [x6, #48]
  405fa0:	lsr	x3, x5, #1
  405fa4:	sub	x5, x5, x3
  405fa8:	sub	x23, x20, x3, lsl #5
  405fac:	b	405f24 <ferror@plt+0x30e4>
  405fb0:	mov	x0, x25
  405fb4:	ldp	x21, x22, [sp, #32]
  405fb8:	ldp	x23, x24, [sp, #48]
  405fbc:	ldr	x25, [sp, #64]
  405fc0:	stp	xzr, xzr, [x19, #64]
  405fc4:	ldp	x19, x20, [sp, #16]
  405fc8:	ldp	x29, x30, [sp], #80
  405fcc:	ret
  405fd0:	stp	x29, x30, [sp, #-48]!
  405fd4:	mov	x29, sp
  405fd8:	str	x21, [sp, #32]
  405fdc:	mov	x21, x0
  405fe0:	stp	x19, x20, [sp, #16]
  405fe4:	add	x19, x0, #0x8
  405fe8:	mov	x20, x1
  405fec:	mov	x0, x19
  405ff0:	bl	402df0 <pthread_mutex_lock@plt>
  405ff4:	ldr	x0, [x21], #56
  405ff8:	mov	x1, x20
  405ffc:	bl	40c430 <ferror@plt+0x95f0>
  406000:	mov	w0, #0x1                   	// #1
  406004:	strb	w0, [x20, #84]
  406008:	mov	x0, x21
  40600c:	bl	402930 <pthread_cond_signal@plt>
  406010:	mov	x0, x19
  406014:	ldp	x19, x20, [sp, #16]
  406018:	ldr	x21, [sp, #32]
  40601c:	ldp	x29, x30, [sp], #48
  406020:	b	402e00 <pthread_mutex_unlock@plt>
  406024:	nop
  406028:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40602c:	sub	x1, x1, #0x1
  406030:	add	x1, x0, x1
  406034:	ldr	w4, [x3, #1136]
  406038:	ldp	x3, x6, [x2]
  40603c:	cmp	w4, #0x100
  406040:	b.eq	4060e0 <ferror@plt+0x32a0>  // b.none
  406044:	cmp	x1, x0
  406048:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  40604c:	sub	x5, x3, #0x1
  406050:	cbz	x3, 4060a0 <ferror@plt+0x3260>
  406054:	nop
  406058:	ldrb	w3, [x0]
  40605c:	cmp	w4, w3
  406060:	b.eq	406080 <ferror@plt+0x3240>  // b.none
  406064:	add	x0, x0, #0x1
  406068:	cmp	x1, x0
  40606c:	b.hi	406058 <ferror@plt+0x3218>  // b.pmore
  406070:	add	x0, x0, x6
  406074:	cmp	x1, x0
  406078:	csel	x0, x1, x0, ls  // ls = plast
  40607c:	ret
  406080:	sub	x5, x5, #0x1
  406084:	cmp	x1, x0
  406088:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  40608c:	add	x0, x0, #0x1
  406090:	cmp	x1, x0
  406094:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  406098:	cmn	x5, #0x1
  40609c:	b.ne	406058 <ferror@plt+0x3218>  // b.any
  4060a0:	ldrb	w2, [x2, #48]
  4060a4:	cbz	w2, 406070 <ferror@plt+0x3230>
  4060a8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  4060ac:	add	x3, x3, #0x560
  4060b0:	add	x3, x3, #0x8
  4060b4:	b	4060c4 <ferror@plt+0x3284>
  4060b8:	add	x0, x0, #0x1
  4060bc:	cmp	x1, x0
  4060c0:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  4060c4:	ldrb	w2, [x0]
  4060c8:	ldrb	w2, [x3, w2, sxtw]
  4060cc:	cbnz	w2, 4060b8 <ferror@plt+0x3278>
  4060d0:	add	x0, x0, x6
  4060d4:	cmp	x1, x0
  4060d8:	csel	x0, x1, x0, ls  // ls = plast
  4060dc:	ret
  4060e0:	cmp	x1, x0
  4060e4:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  4060e8:	sub	x5, x3, #0x1
  4060ec:	cbz	x3, 4060a0 <ferror@plt+0x3260>
  4060f0:	ldrb	w7, [x0]
  4060f4:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  4060f8:	add	x3, x3, #0x560
  4060fc:	add	x3, x3, #0x8
  406100:	mov	x4, x3
  406104:	ldrb	w3, [x3, w7, sxtw]
  406108:	cbz	w3, 406128 <ferror@plt+0x32e8>
  40610c:	nop
  406110:	add	x0, x0, #0x1
  406114:	cmp	x1, x0
  406118:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  40611c:	ldrb	w3, [x0]
  406120:	ldrb	w3, [x4, w3, sxtw]
  406124:	cbnz	w3, 406110 <ferror@plt+0x32d0>
  406128:	cmp	x1, x0
  40612c:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  406130:	add	x0, x0, #0x1
  406134:	cmp	x1, x0
  406138:	b.eq	406160 <ferror@plt+0x3320>  // b.none
  40613c:	ldrb	w3, [x0]
  406140:	ldrb	w3, [x4, w3, sxtw]
  406144:	cbz	w3, 406130 <ferror@plt+0x32f0>
  406148:	cmp	x1, x0
  40614c:	b.ls	406070 <ferror@plt+0x3230>  // b.plast
  406150:	sub	x5, x5, #0x1
  406154:	cmn	x5, #0x1
  406158:	b.ne	406108 <ferror@plt+0x32c8>  // b.any
  40615c:	b	4060a0 <ferror@plt+0x3260>
  406160:	mov	x0, x1
  406164:	add	x0, x0, x6
  406168:	cmp	x1, x0
  40616c:	csel	x0, x1, x0, ls  // ls = plast
  406170:	ret
  406174:	nop
  406178:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40617c:	sub	x1, x1, #0x1
  406180:	add	x1, x0, x1
  406184:	ldr	w4, [x3, #1136]
  406188:	ldp	x3, x6, [x2, #16]
  40618c:	cmp	x6, #0x0
  406190:	cinc	x3, x3, eq  // eq = none
  406194:	cmp	w4, #0x100
  406198:	b.eq	406240 <ferror@plt+0x3400>  // b.none
  40619c:	cmp	x1, x0
  4061a0:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  4061a4:	sub	x5, x3, #0x1
  4061a8:	cbz	x3, 4061c8 <ferror@plt+0x3388>
  4061ac:	nop
  4061b0:	ldrb	w3, [x0]
  4061b4:	cmp	w4, w3
  4061b8:	b.eq	406214 <ferror@plt+0x33d4>  // b.none
  4061bc:	add	x0, x0, #0x1
  4061c0:	cmp	x1, x0
  4061c4:	b.hi	4061b0 <ferror@plt+0x3370>  // b.pmore
  4061c8:	cbz	x6, 406210 <ferror@plt+0x33d0>
  4061cc:	ldrb	w2, [x2, #49]
  4061d0:	cbz	w2, 406204 <ferror@plt+0x33c4>
  4061d4:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  4061d8:	add	x3, x3, #0x560
  4061dc:	cmp	x1, x0
  4061e0:	add	x2, x3, #0x8
  4061e4:	b.hi	4061f8 <ferror@plt+0x33b8>  // b.pmore
  4061e8:	b	406204 <ferror@plt+0x33c4>
  4061ec:	add	x0, x0, #0x1
  4061f0:	cmp	x1, x0
  4061f4:	b.eq	4062c8 <ferror@plt+0x3488>  // b.none
  4061f8:	ldrb	w3, [x0]
  4061fc:	ldrb	w3, [x2, w3, sxtw]
  406200:	cbnz	w3, 4061ec <ferror@plt+0x33ac>
  406204:	add	x0, x0, x6
  406208:	cmp	x1, x0
  40620c:	csel	x0, x1, x0, ls  // ls = plast
  406210:	ret
  406214:	cmp	x1, x0
  406218:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  40621c:	orr	x3, x6, x5
  406220:	sub	x5, x5, #0x1
  406224:	cbz	x3, 406210 <ferror@plt+0x33d0>
  406228:	add	x0, x0, #0x1
  40622c:	cmp	x1, x0
  406230:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  406234:	cmn	x5, #0x1
  406238:	b.ne	4061b0 <ferror@plt+0x3370>  // b.any
  40623c:	b	4061c8 <ferror@plt+0x3388>
  406240:	cmp	x1, x0
  406244:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  406248:	sub	x5, x3, #0x1
  40624c:	cbz	x3, 4061c8 <ferror@plt+0x3388>
  406250:	ldrb	w7, [x0]
  406254:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  406258:	add	x3, x3, #0x560
  40625c:	add	x3, x3, #0x8
  406260:	mov	x4, x3
  406264:	ldrb	w3, [x3, w7, sxtw]
  406268:	cbz	w3, 406288 <ferror@plt+0x3448>
  40626c:	nop
  406270:	add	x0, x0, #0x1
  406274:	cmp	x1, x0
  406278:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  40627c:	ldrb	w3, [x0]
  406280:	ldrb	w3, [x4, w3, sxtw]
  406284:	cbnz	w3, 406270 <ferror@plt+0x3430>
  406288:	cmp	x1, x0
  40628c:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  406290:	add	x0, x0, #0x1
  406294:	cmp	x1, x0
  406298:	b.eq	4062c0 <ferror@plt+0x3480>  // b.none
  40629c:	ldrb	w3, [x0]
  4062a0:	ldrb	w3, [x4, w3, sxtw]
  4062a4:	cbz	w3, 406290 <ferror@plt+0x3450>
  4062a8:	cmp	x1, x0
  4062ac:	b.ls	4061c8 <ferror@plt+0x3388>  // b.plast
  4062b0:	sub	x5, x5, #0x1
  4062b4:	cmn	x5, #0x1
  4062b8:	b.ne	406268 <ferror@plt+0x3428>  // b.any
  4062bc:	b	4061c8 <ferror@plt+0x3388>
  4062c0:	mov	x0, x1
  4062c4:	b	4061c8 <ferror@plt+0x3388>
  4062c8:	mov	x0, x1
  4062cc:	add	x0, x0, x6
  4062d0:	cmp	x1, x0
  4062d4:	csel	x0, x1, x0, ls  // ls = plast
  4062d8:	b	406210 <ferror@plt+0x33d0>
  4062dc:	nop
  4062e0:	mov	x12, #0x21a0                	// #8608
  4062e4:	sub	sp, sp, x12
  4062e8:	mov	x2, x0
  4062ec:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  4062f0:	stp	x29, x30, [sp]
  4062f4:	mov	x29, sp
  4062f8:	stp	x23, x24, [sp, #48]
  4062fc:	mov	x24, x1
  406300:	add	x1, sp, #0x1bc
  406304:	stp	x21, x22, [sp, #32]
  406308:	ldp	x23, x8, [x24, #16]
  40630c:	stp	x27, x28, [sp, #80]
  406310:	add	x28, x0, #0x560
  406314:	ldp	x22, x9, [x2, #16]
  406318:	stp	x25, x26, [sp, #64]
  40631c:	ldr	x26, [x28, #1224]
  406320:	mov	x0, x23
  406324:	stp	x19, x20, [sp, #16]
  406328:	mov	x23, x26
  40632c:	mov	x26, x22
  406330:	mov	x22, x0
  406334:	stp	wzr, wzr, [sp, #104]
  406338:	str	x2, [sp, #144]
  40633c:	str	x1, [sp, #176]
  406340:	add	x1, sp, #0x110
  406344:	str	x1, [sp, #184]
  406348:	ldrb	w0, [x28, #1232]
  40634c:	cmp	x26, x9
  406350:	csel	x9, x26, x9, cs  // cs = hs, nlast
  406354:	cmp	x22, x8
  406358:	csel	x8, x22, x8, cs  // cs = hs, nlast
  40635c:	sub	x25, x9, x26
  406360:	sub	x19, x8, x22
  406364:	ldp	x20, x21, [x23, #32]
  406368:	cbnz	w0, 406378 <ferror@plt+0x3538>
  40636c:	ldr	x0, [x23, #48]
  406370:	tst	x0, #0xffffffffff0000
  406374:	b.eq	406798 <ferror@plt+0x3958>  // b.none
  406378:	orr	x0, x21, x20
  40637c:	str	x0, [sp, #96]
  406380:	cbnz	x0, 406584 <ferror@plt+0x3744>
  406384:	ldrb	w0, [x9]
  406388:	strb	wzr, [x9]
  40638c:	str	w0, [sp, #104]
  406390:	ldrb	w0, [x8]
  406394:	strb	wzr, [x8]
  406398:	str	w0, [sp, #108]
  40639c:	ldrb	w0, [x23, #50]
  4063a0:	cbnz	w0, 406534 <ferror@plt+0x36f4>
  4063a4:	ldrb	w0, [x23, #52]
  4063a8:	cbnz	w0, 406650 <ferror@plt+0x3810>
  4063ac:	ldrb	w0, [x23, #53]
  4063b0:	cbnz	w0, 406724 <ferror@plt+0x38e4>
  4063b4:	ldrb	w0, [x23, #54]
  4063b8:	cbnz	w0, 406890 <ferror@plt+0x3a50>
  4063bc:	ldrb	w0, [x23, #51]
  4063c0:	cbnz	w0, 4068f0 <ferror@plt+0x3ab0>
  4063c4:	ldrb	w0, [x23, #56]
  4063c8:	cbz	w0, 4068e0 <ferror@plt+0x3aa0>
  4063cc:	mov	x1, x22
  4063d0:	mov	x0, x26
  4063d4:	bl	40b028 <ferror@plt+0x81e8>
  4063d8:	mov	w27, w0
  4063dc:	nop
  4063e0:	ldr	x0, [sp, #96]
  4063e4:	cbnz	x0, 4064f0 <ferror@plt+0x36b0>
  4063e8:	ldrb	w0, [sp, #104]
  4063ec:	strb	w0, [x26, x25]
  4063f0:	ldrb	w0, [sp, #108]
  4063f4:	strb	w0, [x22, x19]
  4063f8:	cbnz	w27, 4064fc <ferror@plt+0x36bc>
  4063fc:	ldr	x23, [x23, #64]
  406400:	cbz	x23, 40650c <ferror@plt+0x36cc>
  406404:	ldr	x1, [sp, #144]
  406408:	ldr	x0, [x23, #16]
  40640c:	ldp	x26, x10, [x1]
  406410:	cmn	x0, #0x1
  406414:	b.eq	406470 <ferror@plt+0x3630>  // b.none
  406418:	mov	x1, x10
  40641c:	mov	x2, x23
  406420:	mov	x0, x26
  406424:	bl	406178 <ferror@plt+0x3338>
  406428:	mov	x9, x0
  40642c:	mov	x2, x23
  406430:	ldp	x0, x1, [x24]
  406434:	bl	406178 <ferror@plt+0x3338>
  406438:	mov	x8, x0
  40643c:	ldr	x0, [x23]
  406440:	cmn	x0, #0x1
  406444:	b.eq	406490 <ferror@plt+0x3650>  // b.none
  406448:	mov	x1, x10
  40644c:	mov	x0, x26
  406450:	mov	x2, x23
  406454:	bl	406028 <ferror@plt+0x31e8>
  406458:	mov	x26, x0
  40645c:	mov	x2, x23
  406460:	ldp	x0, x1, [x24]
  406464:	bl	406028 <ferror@plt+0x31e8>
  406468:	mov	x22, x0
  40646c:	b	406348 <ferror@plt+0x3508>
  406470:	ldp	x8, x0, [x24]
  406474:	sub	x9, x10, #0x1
  406478:	add	x9, x26, x9
  40647c:	sub	x0, x0, #0x1
  406480:	add	x8, x8, x0
  406484:	ldr	x0, [x23]
  406488:	cmn	x0, #0x1
  40648c:	b.ne	406448 <ferror@plt+0x3608>  // b.any
  406490:	ldrb	w0, [x23, #48]
  406494:	ldr	x22, [x24]
  406498:	cbz	w0, 406348 <ferror@plt+0x3508>
  40649c:	cmp	x9, x26
  4064a0:	add	x1, x28, #0x8
  4064a4:	b.hi	4064b8 <ferror@plt+0x3678>  // b.pmore
  4064a8:	b	4064c4 <ferror@plt+0x3684>
  4064ac:	add	x26, x26, #0x1
  4064b0:	cmp	x9, x26
  4064b4:	b.eq	4064c4 <ferror@plt+0x3684>  // b.none
  4064b8:	ldrb	w0, [x26]
  4064bc:	ldrb	w0, [x1, w0, sxtw]
  4064c0:	cbnz	w0, 4064ac <ferror@plt+0x366c>
  4064c4:	cmp	x8, x22
  4064c8:	b.ls	406348 <ferror@plt+0x3508>  // b.plast
  4064cc:	add	x1, x28, #0x8
  4064d0:	b	4064e0 <ferror@plt+0x36a0>
  4064d4:	add	x22, x22, #0x1
  4064d8:	cmp	x8, x22
  4064dc:	b.eq	406348 <ferror@plt+0x3508>  // b.none
  4064e0:	ldrb	w0, [x22]
  4064e4:	ldrb	w0, [x1, w0, sxtw]
  4064e8:	cbnz	w0, 4064d4 <ferror@plt+0x3694>
  4064ec:	b	406348 <ferror@plt+0x3508>
  4064f0:	ldr	x0, [sp, #160]
  4064f4:	bl	402ba0 <free@plt>
  4064f8:	cbz	w27, 4063fc <ferror@plt+0x35bc>
  4064fc:	mov	x26, x23
  406500:	ldrb	w0, [x26, #55]
  406504:	cmp	w0, #0x0
  406508:	cneg	w27, w27, ne  // ne = any
  40650c:	mov	w0, w27
  406510:	mov	x12, #0x21a0                	// #8608
  406514:	ldp	x29, x30, [sp]
  406518:	ldp	x19, x20, [sp, #16]
  40651c:	ldp	x21, x22, [sp, #32]
  406520:	ldp	x23, x24, [sp, #48]
  406524:	ldp	x25, x26, [sp, #64]
  406528:	ldp	x27, x28, [sp, #80]
  40652c:	add	sp, sp, x12
  406530:	ret
  406534:	ldrb	w0, [x26]
  406538:	add	x2, x28, #0x8
  40653c:	ldrb	w0, [x2, w0, sxtw]
  406540:	cbz	w0, 406c50 <ferror@plt+0x3e10>
  406544:	mov	x0, x26
  406548:	ldrb	w1, [x0, #1]!
  40654c:	ldrb	w1, [x2, w1, sxtw]
  406550:	cbnz	w1, 406548 <ferror@plt+0x3708>
  406554:	ldrb	w1, [x22]
  406558:	add	x3, x28, #0x8
  40655c:	ldrb	w1, [x3, w1, sxtw]
  406560:	cbz	w1, 406c3c <ferror@plt+0x3dfc>
  406564:	mov	x1, x22
  406568:	ldrb	w2, [x1, #1]!
  40656c:	ldrb	w2, [x3, w2, sxtw]
  406570:	cbnz	w2, 406568 <ferror@plt+0x3728>
  406574:	ldp	w3, w2, [x28]
  406578:	bl	40f730 <ferror@plt+0xc8f0>
  40657c:	mov	w27, w0
  406580:	b	4063e0 <ferror@plt+0x35a0>
  406584:	add	x0, x25, x19
  406588:	add	x0, x0, #0x2
  40658c:	cmp	x0, #0xfa0
  406590:	b.hi	4068b4 <ferror@plt+0x3a74>  // b.pmore
  406594:	str	xzr, [sp, #160]
  406598:	add	x3, sp, #0x260
  40659c:	add	x2, x25, #0x1
  4065a0:	add	x2, x3, x2
  4065a4:	cbz	x25, 4068cc <ferror@plt+0x3a8c>
  4065a8:	mov	x5, x26
  4065ac:	add	x8, x26, x25
  4065b0:	mov	x25, #0x0                   	// #0
  4065b4:	nop
  4065b8:	ldrb	w0, [x5]
  4065bc:	add	x5, x5, #0x1
  4065c0:	cbz	x20, 4065d0 <ferror@plt+0x3790>
  4065c4:	and	x1, x0, #0xff
  4065c8:	ldrb	w1, [x20, x1]
  4065cc:	cbnz	w1, 4065e4 <ferror@plt+0x37a4>
  4065d0:	and	x1, x0, #0xff
  4065d4:	cbz	x21, 4065dc <ferror@plt+0x379c>
  4065d8:	ldrb	w0, [x21, x1]
  4065dc:	strb	w0, [x3, x25]
  4065e0:	add	x25, x25, #0x1
  4065e4:	cmp	x8, x5
  4065e8:	b.ne	4065b8 <ferror@plt+0x3778>  // b.any
  4065ec:	add	x0, x3, x25
  4065f0:	strb	wzr, [x0]
  4065f4:	cbz	x19, 4068d8 <ferror@plt+0x3a98>
  4065f8:	mov	x4, x22
  4065fc:	add	x5, x22, x19
  406600:	mov	x19, #0x0                   	// #0
  406604:	nop
  406608:	ldrb	w0, [x4]
  40660c:	add	x4, x4, #0x1
  406610:	cbz	x20, 406620 <ferror@plt+0x37e0>
  406614:	and	x1, x0, #0xff
  406618:	ldrb	w1, [x20, x1]
  40661c:	cbnz	w1, 406634 <ferror@plt+0x37f4>
  406620:	and	x1, x0, #0xff
  406624:	cbz	x21, 40662c <ferror@plt+0x37ec>
  406628:	ldrb	w0, [x21, x1]
  40662c:	strb	w0, [x2, x19]
  406630:	add	x19, x19, #0x1
  406634:	cmp	x5, x4
  406638:	b.ne	406608 <ferror@plt+0x37c8>  // b.any
  40663c:	add	x0, x2, x19
  406640:	mov	x22, x2
  406644:	mov	x26, x3
  406648:	strb	wzr, [x0]
  40664c:	b	40639c <ferror@plt+0x355c>
  406650:	add	x1, sp, #0xf8
  406654:	mov	x0, x26
  406658:	bl	402b90 <strtold@plt>
  40665c:	str	q0, [sp, #112]
  406660:	mov	x0, x22
  406664:	add	x1, sp, #0x100
  406668:	bl	402b90 <strtold@plt>
  40666c:	mov	v1.16b, v0.16b
  406670:	ldr	x0, [sp, #248]
  406674:	cmp	x26, x0
  406678:	ldr	x0, [sp, #256]
  40667c:	b.eq	406c28 <ferror@plt+0x3de8>  // b.none
  406680:	cmp	x22, x0
  406684:	b.eq	406d28 <ferror@plt+0x3ee8>  // b.none
  406688:	str	q0, [sp, #128]
  40668c:	ldr	q0, [sp, #112]
  406690:	bl	412288 <_obstack_memory_used@@Base+0x720>
  406694:	tbnz	w0, #31, 406e08 <ferror@plt+0x3fc8>
  406698:	ldr	q0, [sp, #112]
  40669c:	mov	w27, #0x1                   	// #1
  4066a0:	ldr	q1, [sp, #128]
  4066a4:	bl	412140 <_obstack_memory_used@@Base+0x5d8>
  4066a8:	cmp	w0, #0x0
  4066ac:	b.gt	4063e0 <ferror@plt+0x35a0>
  4066b0:	ldr	q0, [sp, #112]
  4066b4:	ldr	q1, [sp, #128]
  4066b8:	bl	412038 <_obstack_memory_used@@Base+0x4d0>
  4066bc:	cbz	w0, 406c34 <ferror@plt+0x3df4>
  4066c0:	ldr	q1, [sp, #128]
  4066c4:	mov	v0.16b, v1.16b
  4066c8:	bl	412038 <_obstack_memory_used@@Base+0x4d0>
  4066cc:	cbz	w0, 406e08 <ferror@plt+0x3fc8>
  4066d0:	ldr	q1, [sp, #112]
  4066d4:	mov	v0.16b, v1.16b
  4066d8:	bl	412038 <_obstack_memory_used@@Base+0x4d0>
  4066dc:	cbz	w0, 4063e0 <ferror@plt+0x35a0>
  4066e0:	mov	x0, x26
  4066e4:	mov	x1, #0x0                   	// #0
  4066e8:	bl	402b90 <strtold@plt>
  4066ec:	str	q0, [sp, #288]
  4066f0:	mov	x0, x22
  4066f4:	mov	x1, #0x0                   	// #0
  4066f8:	bl	402b90 <strtold@plt>
  4066fc:	mov	x3, #0x1200                	// #4608
  406700:	mov	x4, #0x1290                	// #4752
  406704:	add	x1, sp, x3
  406708:	add	x3, sp, x4
  40670c:	add	x0, sp, #0x120
  406710:	mov	x2, #0x10                  	// #16
  406714:	stur	q0, [x3, #-144]
  406718:	bl	402b00 <memcmp@plt>
  40671c:	mov	w27, w0
  406720:	b	4063e0 <ferror@plt+0x35a0>
  406724:	ldrb	w0, [x26]
  406728:	add	x1, x28, #0x8
  40672c:	mov	x11, x26
  406730:	ldrb	w0, [x1, w0, sxtw]
  406734:	cbz	w0, 406744 <ferror@plt+0x3904>
  406738:	ldrb	w0, [x11, #1]!
  40673c:	ldrb	w0, [x1, w0, sxtw]
  406740:	cbnz	w0, 406738 <ferror@plt+0x38f8>
  406744:	ldrb	w0, [x22]
  406748:	add	x1, x28, #0x8
  40674c:	mov	x12, x22
  406750:	ldrb	w0, [x1, w0, sxtw]
  406754:	cbz	w0, 406764 <ferror@plt+0x3924>
  406758:	ldrb	w0, [x12, #1]!
  40675c:	ldrb	w0, [x1, w0, sxtw]
  406760:	cbnz	w0, 406758 <ferror@plt+0x3918>
  406764:	mov	x0, x11
  406768:	bl	4054f0 <ferror@plt+0x26b0>
  40676c:	mov	w27, w0
  406770:	mov	x0, x12
  406774:	bl	4054f0 <ferror@plt+0x26b0>
  406778:	subs	w27, w27, w0
  40677c:	b.ne	4063e0 <ferror@plt+0x35a0>  // b.any
  406780:	ldp	w3, w2, [x28]
  406784:	mov	x1, x12
  406788:	mov	x0, x11
  40678c:	bl	40f730 <ferror@plt+0xc8f0>
  406790:	mov	w27, w0
  406794:	b	4063e0 <ferror@plt+0x35a0>
  406798:	ldrb	w0, [x23, #56]
  40679c:	cbnz	w0, 406378 <ferror@plt+0x3538>
  4067a0:	cbz	x20, 406d8c <ferror@plt+0x3f4c>
  4067a4:	mov	x3, x26
  4067a8:	mov	x5, x26
  4067ac:	cbz	x21, 406834 <ferror@plt+0x39f4>
  4067b0:	cmp	x3, x9
  4067b4:	b.cs	4067c4 <ferror@plt+0x3984>  // b.hs, b.nlast
  4067b8:	ldrb	w0, [x3]
  4067bc:	ldrb	w0, [x20, x0]
  4067c0:	cbnz	w0, 40680c <ferror@plt+0x39cc>
  4067c4:	cmp	x22, x8
  4067c8:	b.cc	4067dc <ferror@plt+0x399c>  // b.lo, b.ul, b.last
  4067cc:	b	406878 <ferror@plt+0x3a38>
  4067d0:	add	x22, x22, #0x1
  4067d4:	cmp	x8, x22
  4067d8:	b.eq	406874 <ferror@plt+0x3a34>  // b.none
  4067dc:	ldrb	w0, [x22]
  4067e0:	ldrb	w1, [x20, x0]
  4067e4:	cbnz	w1, 4067d0 <ferror@plt+0x3990>
  4067e8:	cmp	x3, x9
  4067ec:	ccmp	x8, x22, #0x0, cc  // cc = lo, ul, last
  4067f0:	b.ls	406878 <ferror@plt+0x3a38>  // b.plast
  4067f4:	ldrb	w2, [x3]
  4067f8:	ldrb	w1, [x21, x0]
  4067fc:	ldrb	w0, [x21, x2]
  406800:	subs	w0, w0, w1
  406804:	b.ne	406d74 <ferror@plt+0x3f34>  // b.any
  406808:	add	x22, x22, #0x1
  40680c:	add	x3, x3, #0x1
  406810:	b	4067b0 <ferror@plt+0x3970>
  406814:	cmp	x5, x9
  406818:	ccmp	x8, x22, #0x0, cc  // cc = lo, ul, last
  40681c:	b.ls	406bf4 <ferror@plt+0x3db4>  // b.plast
  406820:	ldrb	w1, [x5]
  406824:	subs	w0, w1, w0
  406828:	b.ne	406d74 <ferror@plt+0x3f34>  // b.any
  40682c:	add	x22, x22, #0x1
  406830:	add	x5, x5, #0x1
  406834:	cmp	x5, x9
  406838:	b.cs	406848 <ferror@plt+0x3a08>  // b.hs, b.nlast
  40683c:	ldrb	w0, [x5]
  406840:	ldrb	w0, [x20, x0]
  406844:	cbnz	w0, 406830 <ferror@plt+0x39f0>
  406848:	cmp	x22, x8
  40684c:	b.cc	406860 <ferror@plt+0x3a20>  // b.lo, b.ul, b.last
  406850:	b	406bf4 <ferror@plt+0x3db4>
  406854:	add	x22, x22, #0x1
  406858:	cmp	x8, x22
  40685c:	b.eq	406bf0 <ferror@plt+0x3db0>  // b.none
  406860:	ldrb	w0, [x22]
  406864:	and	x1, x0, #0xff
  406868:	ldrb	w1, [x20, x1]
  40686c:	cbnz	w1, 406854 <ferror@plt+0x3a14>
  406870:	b	406814 <ferror@plt+0x39d4>
  406874:	mov	x22, x8
  406878:	cmp	x3, x9
  40687c:	cset	w27, cc  // cc = lo, ul, last
  406880:	cmp	x8, x22
  406884:	cset	w0, hi  // hi = pmore
  406888:	sub	w27, w27, w0
  40688c:	b	4063f8 <ferror@plt+0x35b8>
  406890:	mov	x1, #0x0                   	// #0
  406894:	mov	x0, x26
  406898:	bl	405550 <ferror@plt+0x2710>
  40689c:	mov	w27, w0
  4068a0:	mov	x1, #0x0                   	// #0
  4068a4:	mov	x0, x22
  4068a8:	bl	405550 <ferror@plt+0x2710>
  4068ac:	sub	w27, w27, w0
  4068b0:	b	4063e0 <ferror@plt+0x35a0>
  4068b4:	bl	410220 <ferror@plt+0xd3e0>
  4068b8:	str	x0, [sp, #160]
  4068bc:	mov	x3, x0
  4068c0:	add	x2, x25, #0x1
  4068c4:	add	x2, x3, x2
  4068c8:	cbnz	x25, 4065a8 <ferror@plt+0x3768>
  4068cc:	mov	x0, x3
  4068d0:	strb	wzr, [x0]
  4068d4:	cbnz	x19, 4065f8 <ferror@plt+0x37b8>
  4068d8:	mov	x0, x2
  4068dc:	b	406640 <ferror@plt+0x3800>
  4068e0:	cbnz	x25, 406c58 <ferror@plt+0x3e18>
  4068e4:	cmp	x19, #0x0
  4068e8:	csetm	w27, ne  // ne = any
  4068ec:	b	4063e0 <ferror@plt+0x35a0>
  4068f0:	add	x1, x28, #0x4d8
  4068f4:	mov	x2, #0x9c                  	// #156
  4068f8:	add	x0, sp, #0x1bc
  4068fc:	bl	402720 <memcpy@plt>
  406900:	add	x1, sp, #0x1bc
  406904:	add	x0, sp, #0x120
  406908:	mov	x2, #0x9c                  	// #156
  40690c:	bl	402720 <memcpy@plt>
  406910:	ldrb	w0, [x28, #1232]
  406914:	cbz	w0, 406c7c <ferror@plt+0x3e3c>
  406918:	add	x0, x25, x19
  40691c:	mov	x2, #0x1200                	// #4608
  406920:	add	x1, sp, x2
  406924:	stp	x26, x23, [sp, #192]
  406928:	add	x0, x0, x0, lsl #1
  40692c:	add	x0, x0, #0x2
  406930:	str	x0, [sp, #168]
  406934:	add	x0, x26, x25
  406938:	mov	x23, x26
  40693c:	str	x0, [sp, #112]
  406940:	add	x0, x22, x19
  406944:	stp	x19, x24, [sp, #224]
  406948:	mov	x19, x1
  40694c:	mov	x20, #0xfa0                 	// #4000
  406950:	mov	w27, #0x0                   	// #0
  406954:	str	x0, [sp, #128]
  406958:	str	xzr, [sp, #152]
  40695c:	stp	x22, x25, [sp, #208]
  406960:	ldr	x0, [sp, #168]
  406964:	cmp	x0, x20
  406968:	b.hi	406a1c <ferror@plt+0x3bdc>  // b.pmore
  40696c:	ldr	x0, [sp, #112]
  406970:	cmp	x0, x23
  406974:	b.hi	406a68 <ferror@plt+0x3c28>  // b.pmore
  406978:	ldr	x0, [sp, #128]
  40697c:	cmp	x0, x22
  406980:	b.hi	406b98 <ferror@plt+0x3d58>  // b.pmore
  406984:	mov	x26, x19
  406988:	mov	x21, #0x0                   	// #0
  40698c:	mov	x24, #0x0                   	// #0
  406990:	ldr	x0, [sp, #128]
  406994:	cmp	x0, x22
  406998:	b.ls	406e1c <ferror@plt+0x3fdc>  // b.plast
  40699c:	mov	x0, x22
  4069a0:	bl	402780 <strlen@plt>
  4069a4:	add	x0, x0, #0x1
  4069a8:	add	x22, x22, x0
  4069ac:	ldr	x0, [sp, #112]
  4069b0:	cmp	x23, x0
  4069b4:	ldr	x0, [sp, #128]
  4069b8:	ccmp	x0, x22, #0x2, cs  // cs = hs, nlast
  4069bc:	b.ls	406e1c <ferror@plt+0x3fdc>  // b.plast
  4069c0:	add	x2, sp, #0x120
  4069c4:	mov	x1, x21
  4069c8:	mov	x0, x19
  4069cc:	bl	40abe8 <ferror@plt+0x7da8>
  4069d0:	ldr	x2, [sp, #176]
  4069d4:	mov	x1, x24
  4069d8:	mov	x0, x26
  4069dc:	bl	40abe8 <ferror@plt+0x7da8>
  4069e0:	cbnz	w27, 406960 <ferror@plt+0x3b20>
  4069e4:	cmp	x24, x21
  4069e8:	mov	x1, x26
  4069ec:	csel	x2, x24, x21, ls  // ls = plast
  4069f0:	mov	x0, x19
  4069f4:	bl	402b00 <memcmp@plt>
  4069f8:	mov	w27, w0
  4069fc:	cbnz	w0, 406960 <ferror@plt+0x3b20>
  406a00:	cmp	x24, x21
  406a04:	cset	w0, hi  // hi = pmore
  406a08:	cset	w27, cc  // cc = lo, ul, last
  406a0c:	sub	w27, w27, w0
  406a10:	ldr	x0, [sp, #168]
  406a14:	cmp	x0, x20
  406a18:	b.ls	40696c <ferror@plt+0x3b2c>  // b.plast
  406a1c:	add	x20, x20, x20, lsl #1
  406a20:	ldr	x1, [sp, #168]
  406a24:	lsr	x20, x20, #1
  406a28:	ldr	x0, [sp, #152]
  406a2c:	cmp	x1, x20
  406a30:	csel	x20, x1, x20, cs  // cs = hs, nlast
  406a34:	bl	402ba0 <free@plt>
  406a38:	mov	x0, x20
  406a3c:	bl	4028e0 <malloc@plt>
  406a40:	mov	x1, #0xfa0                 	// #4000
  406a44:	cmp	x0, #0x0
  406a48:	csel	x20, x20, x1, ne  // ne = any
  406a4c:	mov	x1, #0x1200                	// #4608
  406a50:	add	x1, sp, x1
  406a54:	str	x0, [sp, #152]
  406a58:	csel	x19, x0, x1, ne  // ne = any
  406a5c:	ldr	x0, [sp, #112]
  406a60:	cmp	x0, x23
  406a64:	b.ls	406978 <ferror@plt+0x3b38>  // b.plast
  406a68:	mov	x1, x23
  406a6c:	mov	x2, x20
  406a70:	mov	x0, x19
  406a74:	bl	405b98 <ferror@plt+0x2d58>
  406a78:	ldr	x1, [sp, #128]
  406a7c:	add	x21, x0, #0x1
  406a80:	cmp	x1, x22
  406a84:	b.ls	406d68 <ferror@plt+0x3f28>  // b.plast
  406a88:	cmp	x20, x21
  406a8c:	b.cs	406e3c <ferror@plt+0x3ffc>  // b.hs, b.nlast
  406a90:	mov	x0, #0x0                   	// #0
  406a94:	mov	x2, #0x0                   	// #0
  406a98:	mov	x1, x22
  406a9c:	bl	405b98 <ferror@plt+0x2d58>
  406aa0:	add	x24, x0, #0x1
  406aa4:	add	x25, x24, x21
  406aa8:	cmp	x20, x21
  406aac:	b.cs	406d30 <ferror@plt+0x3ef0>  // b.hs, b.nlast
  406ab0:	add	x1, x25, x25, lsl #1
  406ab4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  406ab8:	cmp	x25, x0
  406abc:	ldr	x0, [sp, #152]
  406ac0:	lsr	x1, x1, #1
  406ac4:	csel	x25, x1, x25, cc  // cc = lo, ul, last
  406ac8:	bl	402ba0 <free@plt>
  406acc:	mov	x0, x25
  406ad0:	bl	410220 <ferror@plt+0xd3e0>
  406ad4:	ldr	x1, [sp, #112]
  406ad8:	mov	x19, x0
  406adc:	cmp	x1, x23
  406ae0:	b.hi	406ba8 <ferror@plt+0x3d68>  // b.pmore
  406ae4:	add	x26, x0, x21
  406ae8:	ldr	x0, [sp, #128]
  406aec:	cmp	x0, x22
  406af0:	b.hi	406c0c <ferror@plt+0x3dcc>  // b.pmore
  406af4:	ldr	x0, [sp, #112]
  406af8:	cmp	x0, x23
  406afc:	b.hi	406b7c <ferror@plt+0x3d3c>  // b.pmore
  406b00:	mov	x0, x19
  406b04:	str	x24, [sp, #128]
  406b08:	ldp	x23, x22, [sp, #200]
  406b0c:	str	x26, [sp, #168]
  406b10:	ldp	x25, x19, [sp, #216]
  406b14:	str	x0, [sp, #112]
  406b18:	ldr	x26, [sp, #192]
  406b1c:	str	x0, [sp, #152]
  406b20:	ldr	x24, [sp, #232]
  406b24:	add	x2, sp, #0x120
  406b28:	ldr	x0, [sp, #112]
  406b2c:	mov	x1, x21
  406b30:	bl	40abe8 <ferror@plt+0x7da8>
  406b34:	add	x1, sp, #0x100
  406b38:	add	x0, sp, #0x120
  406b3c:	bl	40ab20 <ferror@plt+0x7ce0>
  406b40:	ldp	x0, x2, [sp, #168]
  406b44:	ldr	x1, [sp, #128]
  406b48:	bl	40abe8 <ferror@plt+0x7da8>
  406b4c:	ldp	x0, x20, [sp, #176]
  406b50:	mov	x1, x20
  406b54:	bl	40ab20 <ferror@plt+0x7ce0>
  406b58:	mov	x1, x20
  406b5c:	add	x0, sp, #0x100
  406b60:	mov	x2, #0x10                  	// #16
  406b64:	bl	402b00 <memcmp@plt>
  406b68:	cbnz	w0, 406d18 <ferror@plt+0x3ed8>
  406b6c:	cbz	w27, 406ce8 <ferror@plt+0x3ea8>
  406b70:	ldr	x0, [sp, #152]
  406b74:	bl	402ba0 <free@plt>
  406b78:	b	4063e0 <ferror@plt+0x35a0>
  406b7c:	mov	x0, x23
  406b80:	bl	402780 <strlen@plt>
  406b84:	add	x0, x0, #0x1
  406b88:	mov	x20, x25
  406b8c:	add	x23, x23, x0
  406b90:	str	x19, [sp, #152]
  406b94:	b	4069ac <ferror@plt+0x3b6c>
  406b98:	mov	x2, x20
  406b9c:	mov	x0, x19
  406ba0:	mov	x21, #0x0                   	// #0
  406ba4:	b	406a98 <ferror@plt+0x3c58>
  406ba8:	mov	x2, x21
  406bac:	mov	x1, x23
  406bb0:	bl	402c60 <strxfrm@plt>
  406bb4:	add	x26, x19, x21
  406bb8:	ldr	x0, [sp, #128]
  406bbc:	cmp	x0, x22
  406bc0:	b.ls	406af4 <ferror@plt+0x3cb4>  // b.plast
  406bc4:	mov	x2, x24
  406bc8:	mov	x1, x22
  406bcc:	mov	x0, x26
  406bd0:	bl	402c60 <strxfrm@plt>
  406bd4:	mov	x0, x23
  406bd8:	mov	x20, x25
  406bdc:	bl	402780 <strlen@plt>
  406be0:	add	x0, x0, #0x1
  406be4:	add	x23, x23, x0
  406be8:	str	x19, [sp, #152]
  406bec:	b	40699c <ferror@plt+0x3b5c>
  406bf0:	mov	x22, x8
  406bf4:	cmp	x5, x9
  406bf8:	cset	w27, cc  // cc = lo, ul, last
  406bfc:	cmp	x8, x22
  406c00:	cset	w0, hi  // hi = pmore
  406c04:	sub	w27, w27, w0
  406c08:	b	4063f8 <ferror@plt+0x35b8>
  406c0c:	mov	x2, x24
  406c10:	mov	x1, x22
  406c14:	mov	x0, x26
  406c18:	mov	x20, x25
  406c1c:	bl	402c60 <strxfrm@plt>
  406c20:	str	x19, [sp, #152]
  406c24:	b	40699c <ferror@plt+0x3b5c>
  406c28:	cmp	x0, x22
  406c2c:	csetm	w27, ne  // ne = any
  406c30:	b	4063e0 <ferror@plt+0x35a0>
  406c34:	mov	w27, #0x0                   	// #0
  406c38:	b	4063e0 <ferror@plt+0x35a0>
  406c3c:	ldp	w3, w2, [x28]
  406c40:	mov	x1, x22
  406c44:	bl	40f730 <ferror@plt+0xc8f0>
  406c48:	mov	w27, w0
  406c4c:	b	4063e0 <ferror@plt+0x35a0>
  406c50:	mov	x0, x26
  406c54:	b	406554 <ferror@plt+0x3714>
  406c58:	mov	w27, #0x1                   	// #1
  406c5c:	cbz	x19, 4063e0 <ferror@plt+0x35a0>
  406c60:	add	x3, x19, #0x1
  406c64:	mov	x2, x22
  406c68:	add	x1, x25, #0x1
  406c6c:	mov	x0, x26
  406c70:	bl	410628 <ferror@plt+0xd7e8>
  406c74:	mov	w27, w0
  406c78:	b	4063e0 <ferror@plt+0x35a0>
  406c7c:	add	x2, sp, #0x120
  406c80:	mov	x1, x25
  406c84:	mov	x0, x26
  406c88:	bl	40abe8 <ferror@plt+0x7da8>
  406c8c:	add	x1, sp, #0x100
  406c90:	add	x0, sp, #0x120
  406c94:	bl	40ab20 <ferror@plt+0x7ce0>
  406c98:	ldr	x21, [sp, #176]
  406c9c:	mov	x1, x19
  406ca0:	mov	x0, x22
  406ca4:	mov	x2, x21
  406ca8:	bl	40abe8 <ferror@plt+0x7da8>
  406cac:	ldr	x20, [sp, #184]
  406cb0:	mov	x0, x21
  406cb4:	mov	x1, x20
  406cb8:	bl	40ab20 <ferror@plt+0x7ce0>
  406cbc:	mov	x1, x20
  406cc0:	add	x0, sp, #0x100
  406cc4:	mov	x2, #0x10                  	// #16
  406cc8:	bl	402b00 <memcmp@plt>
  406ccc:	mov	w27, w0
  406cd0:	cbnz	w0, 406d20 <ferror@plt+0x3ee0>
  406cd4:	mov	x21, x25
  406cd8:	str	x26, [sp, #112]
  406cdc:	str	x19, [sp, #128]
  406ce0:	str	xzr, [sp, #152]
  406ce4:	str	x22, [sp, #168]
  406ce8:	ldr	x20, [sp, #128]
  406cec:	ldr	x0, [sp, #112]
  406cf0:	cmp	x21, x20
  406cf4:	ldr	x1, [sp, #168]
  406cf8:	csel	x2, x21, x20, ls  // ls = plast
  406cfc:	bl	402b00 <memcmp@plt>
  406d00:	mov	w27, w0
  406d04:	cbnz	w0, 406b70 <ferror@plt+0x3d30>
  406d08:	cmp	x21, x20
  406d0c:	cset	w27, hi  // hi = pmore
  406d10:	sbc	w27, w27, wzr
  406d14:	b	406b70 <ferror@plt+0x3d30>
  406d18:	mov	w27, w0
  406d1c:	b	406b70 <ferror@plt+0x3d30>
  406d20:	str	xzr, [sp, #152]
  406d24:	b	406b70 <ferror@plt+0x3d30>
  406d28:	mov	w27, #0x1                   	// #1
  406d2c:	b	4063e0 <ferror@plt+0x35a0>
  406d30:	cmp	x20, x25
  406d34:	b.cc	406ab0 <ferror@plt+0x3c70>  // b.lo, b.ul, b.last
  406d38:	ldr	x0, [sp, #112]
  406d3c:	add	x26, x19, x21
  406d40:	cmp	x0, x23
  406d44:	b.ls	406990 <ferror@plt+0x3b50>  // b.plast
  406d48:	mov	x0, x23
  406d4c:	bl	402780 <strlen@plt>
  406d50:	ldr	x1, [sp, #128]
  406d54:	add	x0, x0, #0x1
  406d58:	add	x23, x23, x0
  406d5c:	cmp	x1, x22
  406d60:	b.ls	4069ac <ferror@plt+0x3b6c>  // b.plast
  406d64:	b	40699c <ferror@plt+0x3b5c>
  406d68:	mov	x25, x21
  406d6c:	mov	x24, #0x0                   	// #0
  406d70:	b	406aa8 <ferror@plt+0x3c68>
  406d74:	mov	x26, x23
  406d78:	mov	w27, w0
  406d7c:	ldrb	w0, [x26, #55]
  406d80:	cmp	w0, #0x0
  406d84:	cneg	w27, w27, ne  // ne = any
  406d88:	b	40650c <ferror@plt+0x36cc>
  406d8c:	cbz	x25, 406dc4 <ferror@plt+0x3f84>
  406d90:	cbz	x19, 406e10 <ferror@plt+0x3fd0>
  406d94:	cbnz	x21, 406dd0 <ferror@plt+0x3f90>
  406d98:	cmp	x25, x19
  406d9c:	mov	x1, x22
  406da0:	mov	x0, x26
  406da4:	csel	x2, x25, x19, ls  // ls = plast
  406da8:	bl	402b00 <memcmp@plt>
  406dac:	mov	w27, w0
  406db0:	cbnz	w0, 4064fc <ferror@plt+0x36bc>
  406db4:	cmp	x25, x19
  406db8:	b.cc	406dfc <ferror@plt+0x3fbc>  // b.lo, b.ul, b.last
  406dbc:	cset	w27, ne  // ne = any
  406dc0:	b	4063f8 <ferror@plt+0x35b8>
  406dc4:	cmp	x19, #0x0
  406dc8:	csetm	w27, ne  // ne = any
  406dcc:	b	4063f8 <ferror@plt+0x35b8>
  406dd0:	cmp	x26, x9
  406dd4:	ccmp	x22, x8, #0x2, cc  // cc = lo, ul, last
  406dd8:	b.cs	406db4 <ferror@plt+0x3f74>  // b.hs, b.nlast
  406ddc:	ldrb	w0, [x26], #1
  406de0:	ldrb	w1, [x22], #1
  406de4:	ldrb	w0, [x21, x0]
  406de8:	ldrb	w27, [x21, x1]
  406dec:	subs	w27, w0, w27
  406df0:	b.eq	406dd0 <ferror@plt+0x3f90>  // b.none
  406df4:	mov	x26, x23
  406df8:	b	406500 <ferror@plt+0x36c0>
  406dfc:	mov	x26, x23
  406e00:	mov	w27, #0xffffffff            	// #-1
  406e04:	b	406d7c <ferror@plt+0x3f3c>
  406e08:	mov	w27, #0xffffffff            	// #-1
  406e0c:	b	4063e0 <ferror@plt+0x35a0>
  406e10:	mov	x26, x23
  406e14:	mov	w27, #0x1                   	// #1
  406e18:	b	406d7c <ferror@plt+0x3f3c>
  406e1c:	str	x19, [sp, #112]
  406e20:	str	x24, [sp, #128]
  406e24:	str	x26, [sp, #168]
  406e28:	ldr	x26, [sp, #192]
  406e2c:	ldp	x23, x22, [sp, #200]
  406e30:	ldr	x25, [sp, #216]
  406e34:	ldp	x19, x24, [sp, #224]
  406e38:	b	406b24 <ferror@plt+0x3ce4>
  406e3c:	add	x0, x19, x21
  406e40:	sub	x2, x20, x21
  406e44:	b	406a98 <ferror@plt+0x3c58>
  406e48:	ldr	w3, [x0, #80]
  406e4c:	ldr	w2, [x1, #80]
  406e50:	cmp	w3, w2
  406e54:	b.eq	406e60 <ferror@plt+0x4020>  // b.none
  406e58:	cset	w0, cc  // cc = lo, ul, last
  406e5c:	ret
  406e60:	ldp	x3, x4, [x0, #40]
  406e64:	ldp	x2, x0, [x1, #40]
  406e68:	add	x1, x3, x4
  406e6c:	add	x0, x2, x0
  406e70:	cmp	x1, x0
  406e74:	cset	w0, cc  // cc = lo, ul, last
  406e78:	ret
  406e7c:	nop
  406e80:	add	x1, x0, #0x8
  406e84:	mov	x2, #0x0                   	// #0
  406e88:	mov	w0, #0x2                   	// #2
  406e8c:	b	402740 <pthread_sigmask@plt>
  406e90:	stp	x29, x30, [sp, #-176]!
  406e94:	mov	x29, sp
  406e98:	stp	x19, x20, [sp, #16]
  406e9c:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x17498>
  406ea0:	add	x20, x20, #0x560
  406ea4:	ldr	x0, [x20, #1032]
  406ea8:	cbz	x0, 406eec <ferror@plt+0x40ac>
  406eac:	add	x1, x20, #0x578
  406eb0:	add	x2, sp, #0x30
  406eb4:	mov	w0, #0x0                   	// #0
  406eb8:	bl	402740 <pthread_sigmask@plt>
  406ebc:	ldr	x19, [x20, #1032]
  406ec0:	cmp	w0, #0x0
  406ec4:	cset	w0, eq  // eq = none
  406ec8:	strb	w0, [sp, #40]
  406ecc:	cbz	x19, 406ee4 <ferror@plt+0x40a4>
  406ed0:	add	x0, x19, #0xd
  406ed4:	bl	402e20 <unlink@plt>
  406ed8:	ldr	x19, [x19]
  406edc:	cbnz	x19, 406ed0 <ferror@plt+0x4090>
  406ee0:	ldrb	w0, [sp, #40]
  406ee4:	str	xzr, [x20, #1032]
  406ee8:	cbnz	w0, 406efc <ferror@plt+0x40bc>
  406eec:	bl	409fb0 <ferror@plt+0x7170>
  406ef0:	ldp	x19, x20, [sp, #16]
  406ef4:	ldp	x29, x30, [sp], #176
  406ef8:	ret
  406efc:	add	x0, sp, #0x28
  406f00:	bl	406e80 <ferror@plt+0x4040>
  406f04:	bl	409fb0 <ferror@plt+0x7170>
  406f08:	ldp	x19, x20, [sp, #16]
  406f0c:	ldp	x29, x30, [sp], #176
  406f10:	ret
  406f14:	nop
  406f18:	stp	x29, x30, [sp, #-208]!
  406f1c:	mov	x29, sp
  406f20:	stp	x21, x22, [sp, #32]
  406f24:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x17498>
  406f28:	add	x21, x21, #0x560
  406f2c:	stp	x19, x20, [sp, #16]
  406f30:	mov	x20, x0
  406f34:	add	x22, x21, #0x408
  406f38:	ldr	x19, [x21, #1032]
  406f3c:	stp	x23, x24, [sp, #48]
  406f40:	add	x0, x19, #0xd
  406f44:	cmp	x20, x0
  406f48:	b.eq	406f60 <ferror@plt+0x4120>  // b.none
  406f4c:	mov	x22, x19
  406f50:	ldr	x19, [x19]
  406f54:	add	x0, x19, #0xd
  406f58:	cmp	x20, x0
  406f5c:	b.ne	406f4c <ferror@plt+0x410c>  // b.any
  406f60:	ldrb	w0, [x19, #12]
  406f64:	cmp	w0, #0x1
  406f68:	b.eq	407048 <ferror@plt+0x4208>  // b.none
  406f6c:	add	x1, x21, #0x578
  406f70:	add	x2, sp, #0x50
  406f74:	mov	w0, #0x0                   	// #0
  406f78:	ldr	x23, [x19]
  406f7c:	bl	402740 <pthread_sigmask@plt>
  406f80:	mov	w1, w0
  406f84:	mov	x0, x20
  406f88:	cmp	w1, #0x0
  406f8c:	cset	w1, eq  // eq = none
  406f90:	strb	w1, [sp, #72]
  406f94:	bl	402e20 <unlink@plt>
  406f98:	mov	w21, w0
  406f9c:	bl	402db0 <__errno_location@plt>
  406fa0:	ldr	w24, [x0]
  406fa4:	ldrb	w1, [sp, #72]
  406fa8:	str	x23, [x22]
  406fac:	cbnz	w1, 407038 <ferror@plt+0x41f8>
  406fb0:	cbnz	w21, 406fd4 <ferror@plt+0x4194>
  406fb4:	cbz	x23, 407014 <ferror@plt+0x41d4>
  406fb8:	mov	x0, x19
  406fbc:	bl	402ba0 <free@plt>
  406fc0:	ldp	x19, x20, [sp, #16]
  406fc4:	ldp	x21, x22, [sp, #32]
  406fc8:	ldp	x23, x24, [sp, #48]
  406fcc:	ldp	x29, x30, [sp], #208
  406fd0:	ret
  406fd4:	mov	w2, #0x5                   	// #5
  406fd8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  406fdc:	mov	x0, #0x0                   	// #0
  406fe0:	add	x1, x1, #0x6a0
  406fe4:	bl	402d20 <dcgettext@plt>
  406fe8:	mov	x21, x0
  406fec:	mov	x2, x20
  406ff0:	mov	w1, #0x3                   	// #3
  406ff4:	mov	w0, #0x0                   	// #0
  406ff8:	bl	40e868 <ferror@plt+0xba28>
  406ffc:	mov	x2, x21
  407000:	mov	x3, x0
  407004:	mov	w1, w24
  407008:	mov	w0, #0x0                   	// #0
  40700c:	bl	4027b0 <error@plt>
  407010:	cbnz	x23, 406fb8 <ferror@plt+0x4178>
  407014:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  407018:	str	x22, [x0, #1144]
  40701c:	mov	x0, x19
  407020:	bl	402ba0 <free@plt>
  407024:	ldp	x19, x20, [sp, #16]
  407028:	ldp	x21, x22, [sp, #32]
  40702c:	ldp	x23, x24, [sp, #48]
  407030:	ldp	x29, x30, [sp], #208
  407034:	ret
  407038:	add	x0, sp, #0x48
  40703c:	bl	406e80 <ferror@plt+0x4040>
  407040:	cbz	w21, 406fb4 <ferror@plt+0x4174>
  407044:	b	406fd4 <ferror@plt+0x4194>
  407048:	ldr	w0, [x19, #8]
  40704c:	bl	405d88 <ferror@plt+0x2f48>
  407050:	b	406f6c <ferror@plt+0x412c>
  407054:	nop
  407058:	stp	x29, x30, [sp, #-240]!
  40705c:	mov	x29, sp
  407060:	stp	x19, x20, [sp, #16]
  407064:	stp	x21, x22, [sp, #32]
  407068:	mov	x21, x1
  40706c:	mov	w1, #0x80000               	// #524288
  407070:	stp	x25, x26, [sp, #64]
  407074:	mov	x26, x0
  407078:	bl	40cc78 <ferror@plt+0x9e38>
  40707c:	tbnz	w0, #31, 407228 <ferror@plt+0x43e8>
  407080:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  407084:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x17498>
  407088:	add	x20, x20, #0x560
  40708c:	stp	x23, x24, [sp, #48]
  407090:	ldr	w0, [x0, #1152]
  407094:	str	x27, [sp, #80]
  407098:	ldr	w1, [x20, #1216]
  40709c:	add	w0, w0, #0x1
  4070a0:	str	d8, [sp, #88]
  4070a4:	cmp	w0, w1
  4070a8:	b.cc	4071c8 <ferror@plt+0x4388>  // b.lo, b.ul, b.last
  4070ac:	bl	402db0 <__errno_location@plt>
  4070b0:	sub	x21, x21, #0x1
  4070b4:	mov	x23, x0
  4070b8:	add	x25, sp, #0x70
  4070bc:	add	x24, x20, #0x578
  4070c0:	fmov	d8, #2.500000000000000000e-01
  4070c4:	b	407114 <ferror@plt+0x42d4>
  4070c8:	str	x27, [x20, #1032]
  4070cc:	cbnz	w0, 407150 <ferror@plt+0x4310>
  4070d0:	str	w22, [x23]
  4070d4:	cmp	w19, #0x0
  4070d8:	b.ge	40715c <ferror@plt+0x431c>  // b.tcont
  4070dc:	cmp	w22, #0xb
  4070e0:	b.ne	4071f0 <ferror@plt+0x43b0>  // b.any
  4070e4:	fmov	d0, d8
  4070e8:	bl	4106a8 <ferror@plt+0xd868>
  4070ec:	fadd	d8, d8, d8
  4070f0:	ldr	w1, [x20, #1216]
  4070f4:	mov	w0, #0x0                   	// #0
  4070f8:	cmp	w1, #0x0
  4070fc:	b.le	407108 <ferror@plt+0x42c8>
  407100:	bl	405c70 <ferror@plt+0x2e30>
  407104:	cbnz	w0, 4070f0 <ferror@plt+0x42b0>
  407108:	sub	x21, x21, #0x1
  40710c:	cmn	x21, #0x1
  407110:	b.eq	4071ec <ferror@plt+0x43ac>  // b.none
  407114:	mov	x2, x25
  407118:	mov	x1, x24
  40711c:	mov	w0, #0x0                   	// #0
  407120:	bl	402740 <pthread_sigmask@plt>
  407124:	cmp	w0, #0x0
  407128:	cset	w0, eq  // eq = none
  40712c:	strb	w0, [sp, #104]
  407130:	ldr	x27, [x20, #1032]
  407134:	str	xzr, [x20, #1032]
  407138:	bl	402840 <fork@plt>
  40713c:	ldr	w22, [x23]
  407140:	mov	w19, w0
  407144:	ldrb	w0, [sp, #104]
  407148:	cbnz	w19, 4070c8 <ferror@plt+0x4288>
  40714c:	cbz	w0, 407190 <ferror@plt+0x4350>
  407150:	add	x0, sp, #0x68
  407154:	bl	406e80 <ferror@plt+0x4040>
  407158:	b	4070d0 <ferror@plt+0x4290>
  40715c:	b.eq	407190 <ferror@plt+0x4350>  // b.none
  407160:	ldp	x23, x24, [sp, #48]
  407164:	ldr	w0, [x20, #1216]
  407168:	ldr	x27, [sp, #80]
  40716c:	add	w0, w0, #0x1
  407170:	ldr	d8, [sp, #88]
  407174:	str	w0, [x20, #1216]
  407178:	mov	w0, w19
  40717c:	ldp	x19, x20, [sp, #16]
  407180:	ldp	x21, x22, [sp, #32]
  407184:	ldp	x25, x26, [sp, #64]
  407188:	ldp	x29, x30, [sp], #240
  40718c:	ret
  407190:	mov	w0, #0x0                   	// #0
  407194:	bl	402a10 <close@plt>
  407198:	mov	w19, #0x0                   	// #0
  40719c:	mov	w0, #0x1                   	// #1
  4071a0:	bl	402a10 <close@plt>
  4071a4:	mov	w0, w19
  4071a8:	ldr	d8, [sp, #88]
  4071ac:	ldp	x19, x20, [sp, #16]
  4071b0:	ldp	x21, x22, [sp, #32]
  4071b4:	ldp	x23, x24, [sp, #48]
  4071b8:	ldp	x25, x26, [sp, #64]
  4071bc:	ldr	x27, [sp, #80]
  4071c0:	ldp	x29, x30, [sp], #240
  4071c4:	ret
  4071c8:	mov	w0, #0xffffffff            	// #-1
  4071cc:	bl	405c70 <ferror@plt+0x2e30>
  4071d0:	ldr	w1, [x20, #1216]
  4071d4:	mov	w0, #0x0                   	// #0
  4071d8:	cmp	w1, #0x0
  4071dc:	b.le	4070ac <ferror@plt+0x426c>
  4071e0:	bl	405c70 <ferror@plt+0x2e30>
  4071e4:	cbz	w0, 4070ac <ferror@plt+0x426c>
  4071e8:	b	4071d0 <ferror@plt+0x4390>
  4071ec:	ldr	w22, [x23]
  4071f0:	ldr	w0, [x26]
  4071f4:	bl	402a10 <close@plt>
  4071f8:	ldr	w0, [x26, #4]
  4071fc:	bl	402a10 <close@plt>
  407200:	ldr	x27, [sp, #80]
  407204:	mov	w0, w19
  407208:	ldr	d8, [sp, #88]
  40720c:	str	w22, [x23]
  407210:	ldp	x19, x20, [sp, #16]
  407214:	ldp	x21, x22, [sp, #32]
  407218:	ldp	x23, x24, [sp, #48]
  40721c:	ldp	x25, x26, [sp, #64]
  407220:	ldp	x29, x30, [sp], #240
  407224:	ret
  407228:	mov	w19, #0xffffffff            	// #-1
  40722c:	b	407178 <ferror@plt+0x4338>
  407230:	stp	x29, x30, [sp, #-64]!
  407234:	adrp	x4, 412000 <_obstack_memory_used@@Base+0x498>
  407238:	add	x4, x4, #0xe30
  40723c:	mov	x29, sp
  407240:	add	x3, sp, #0x38
  407244:	stp	x19, x20, [sp, #16]
  407248:	mov	x19, x1
  40724c:	mov	x20, x2
  407250:	add	x1, sp, #0x30
  407254:	mov	w2, #0xa                   	// #10
  407258:	str	x21, [sp, #32]
  40725c:	mov	x21, x0
  407260:	bl	410d48 <ferror@plt+0xdf08>
  407264:	cmp	w0, #0x3
  407268:	b.eq	4072f4 <ferror@plt+0x44b4>  // b.none
  40726c:	b.hi	40729c <ferror@plt+0x445c>  // b.pmore
  407270:	cmp	w0, #0x1
  407274:	b.eq	4072f4 <ferror@plt+0x44b4>  // b.none
  407278:	tbnz	w0, #0, 407288 <ferror@plt+0x4448>
  40727c:	ldr	x0, [sp, #56]
  407280:	str	x0, [x19]
  407284:	nop
  407288:	ldr	x0, [sp, #48]
  40728c:	ldp	x19, x20, [sp, #16]
  407290:	ldr	x21, [sp, #32]
  407294:	ldp	x29, x30, [sp], #64
  407298:	ret
  40729c:	cmp	w0, #0x4
  4072a0:	b.ne	407288 <ferror@plt+0x4448>  // b.any
  4072a4:	mov	x0, #0x0                   	// #0
  4072a8:	cbz	x20, 40728c <ferror@plt+0x444c>
  4072ac:	mov	w2, #0x5                   	// #5
  4072b0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4072b4:	add	x1, x1, #0x6c0
  4072b8:	bl	402d20 <dcgettext@plt>
  4072bc:	mov	x1, x20
  4072c0:	mov	w2, #0x5                   	// #5
  4072c4:	mov	x19, x0
  4072c8:	mov	x0, #0x0                   	// #0
  4072cc:	bl	402d20 <dcgettext@plt>
  4072d0:	mov	x20, x0
  4072d4:	mov	x0, x21
  4072d8:	bl	40e9e0 <ferror@plt+0xbba0>
  4072dc:	mov	x3, x20
  4072e0:	mov	x4, x0
  4072e4:	mov	x2, x19
  4072e8:	mov	w1, #0x0                   	// #0
  4072ec:	mov	w0, #0x2                   	// #2
  4072f0:	bl	4027b0 <error@plt>
  4072f4:	mov	x0, #0xffffffffffffffff    	// #-1
  4072f8:	str	x0, [x19]
  4072fc:	b	407288 <ferror@plt+0x4448>
  407300:	stp	x29, x30, [sp, #-48]!
  407304:	mov	x29, sp
  407308:	stp	x19, x20, [sp, #16]
  40730c:	mov	x19, x0
  407310:	ldrb	w0, [x1]
  407314:	cmp	w0, #0x72
  407318:	b.eq	407350 <ferror@plt+0x4510>  // b.none
  40731c:	cmp	w0, #0x77
  407320:	b.ne	40741c <ferror@plt+0x45dc>  // b.any
  407324:	cbz	x19, 407338 <ferror@plt+0x44f8>
  407328:	mov	x1, #0x0                   	// #0
  40732c:	mov	w0, #0x1                   	// #1
  407330:	bl	402d60 <ftruncate@plt>
  407334:	cbnz	w0, 4073bc <ferror@plt+0x457c>
  407338:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40733c:	ldr	x19, [x0, #1344]
  407340:	mov	x0, x19
  407344:	ldp	x19, x20, [sp, #16]
  407348:	ldp	x29, x30, [sp], #48
  40734c:	ret
  407350:	ldrb	w0, [x19]
  407354:	mov	x20, x1
  407358:	cmp	w0, #0x2d
  40735c:	b.ne	407398 <ferror@plt+0x4558>  // b.any
  407360:	ldrb	w0, [x19, #1]
  407364:	cbnz	w0, 407398 <ferror@plt+0x4558>
  407368:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  40736c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  407370:	mov	w1, #0x1                   	// #1
  407374:	ldr	x19, [x2, #1352]
  407378:	strb	w1, [x0, #2904]
  40737c:	mov	x0, x19
  407380:	mov	w1, #0x2                   	// #2
  407384:	bl	40af30 <ferror@plt+0x80f0>
  407388:	mov	x0, x19
  40738c:	ldp	x19, x20, [sp, #16]
  407390:	ldp	x29, x30, [sp], #48
  407394:	ret
  407398:	mov	x0, x19
  40739c:	mov	w1, #0x80000               	// #524288
  4073a0:	mov	x19, #0x0                   	// #0
  4073a4:	bl	402900 <open@plt>
  4073a8:	tbnz	w0, #31, 40737c <ferror@plt+0x453c>
  4073ac:	mov	x1, x20
  4073b0:	bl	4029a0 <fdopen@plt>
  4073b4:	mov	x19, x0
  4073b8:	b	40737c <ferror@plt+0x453c>
  4073bc:	bl	402db0 <__errno_location@plt>
  4073c0:	ldr	w20, [x0]
  4073c4:	bl	4059c0 <ferror@plt+0x2b80>
  4073c8:	cbz	x0, 4073dc <ferror@plt+0x459c>
  4073cc:	ldr	w0, [x0, #16]
  4073d0:	and	w0, w0, #0xf000
  4073d4:	cmp	w0, #0x8, lsl #12
  4073d8:	b.ne	407338 <ferror@plt+0x44f8>  // b.any
  4073dc:	mov	w2, #0x5                   	// #5
  4073e0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4073e4:	mov	x0, #0x0                   	// #0
  4073e8:	add	x1, x1, #0x6e8
  4073ec:	str	x21, [sp, #32]
  4073f0:	bl	402d20 <dcgettext@plt>
  4073f4:	mov	x2, x19
  4073f8:	mov	x21, x0
  4073fc:	mov	w1, #0x3                   	// #3
  407400:	mov	w0, #0x0                   	// #0
  407404:	bl	40e868 <ferror@plt+0xba28>
  407408:	mov	x3, x0
  40740c:	mov	x2, x21
  407410:	mov	w1, w20
  407414:	mov	w0, #0x2                   	// #2
  407418:	bl	4027b0 <error@plt>
  40741c:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x2498>
  407420:	add	x3, x3, #0x320
  407424:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  407428:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x498>
  40742c:	add	x3, x3, #0x100
  407430:	add	x1, x1, #0x700
  407434:	add	x0, x0, #0x710
  407438:	mov	w2, #0x3d6                 	// #982
  40743c:	str	x21, [sp, #32]
  407440:	bl	402da0 <__assert_fail@plt>
  407444:	nop
  407448:	stp	x29, x30, [sp, #-32]!
  40744c:	mov	w2, #0x5                   	// #5
  407450:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  407454:	mov	x29, sp
  407458:	add	x1, x1, #0x740
  40745c:	str	x19, [sp, #16]
  407460:	mov	x19, x0
  407464:	mov	x0, #0x0                   	// #0
  407468:	bl	402d20 <dcgettext@plt>
  40746c:	mov	x1, x19
  407470:	bl	405950 <ferror@plt+0x2b10>
  407474:	nop
  407478:	stp	x29, x30, [sp, #-32]!
  40747c:	mov	x29, sp
  407480:	stp	x19, x20, [sp, #16]
  407484:	mov	x20, x1
  407488:	mov	x19, x0
  40748c:	bl	402880 <fileno@plt>
  407490:	cbz	w0, 4074b4 <ferror@plt+0x4674>
  407494:	cmp	w0, #0x1
  407498:	b.eq	4074cc <ferror@plt+0x468c>  // b.none
  40749c:	mov	x0, x19
  4074a0:	bl	4112f0 <ferror@plt+0xe4b0>
  4074a4:	cbnz	w0, 4074f4 <ferror@plt+0x46b4>
  4074a8:	ldp	x19, x20, [sp, #16]
  4074ac:	ldp	x29, x30, [sp], #32
  4074b0:	ret
  4074b4:	ldr	w0, [x19]
  4074b8:	tbz	w0, #4, 4074a8 <ferror@plt+0x4668>
  4074bc:	mov	x0, x19
  4074c0:	ldp	x19, x20, [sp, #16]
  4074c4:	ldp	x29, x30, [sp], #32
  4074c8:	b	402cc0 <clearerr_unlocked@plt>
  4074cc:	mov	x0, x19
  4074d0:	bl	402c30 <fflush_unlocked@plt>
  4074d4:	cbz	w0, 4074a8 <ferror@plt+0x4668>
  4074d8:	mov	w2, #0x5                   	// #5
  4074dc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4074e0:	mov	x0, #0x0                   	// #0
  4074e4:	add	x1, x1, #0x750
  4074e8:	bl	402d20 <dcgettext@plt>
  4074ec:	mov	x1, x20
  4074f0:	bl	405950 <ferror@plt+0x2b10>
  4074f4:	mov	w2, #0x5                   	// #5
  4074f8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4074fc:	mov	x0, #0x0                   	// #0
  407500:	add	x1, x1, #0x760
  407504:	bl	402d20 <dcgettext@plt>
  407508:	mov	x1, x20
  40750c:	bl	405950 <ferror@plt+0x2b10>
  407510:	stp	x29, x30, [sp, #-112]!
  407514:	mov	x29, sp
  407518:	stp	x21, x22, [sp, #32]
  40751c:	stp	x23, x24, [sp, #48]
  407520:	ldp	x21, x23, [x0]
  407524:	stp	x19, x20, [sp, #16]
  407528:	mov	x19, x1
  40752c:	stp	x25, x26, [sp, #64]
  407530:	mov	x25, x2
  407534:	add	x20, x21, x23
  407538:	cbz	x2, 407580 <ferror@plt+0x4740>
  40753c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  407540:	mov	x3, x19
  407544:	mov	x0, x21
  407548:	mov	x2, x23
  40754c:	ldrb	w4, [x1, #1156]
  407550:	mov	x1, #0x1                   	// #1
  407554:	sturb	w4, [x20, #-1]
  407558:	bl	402760 <fwrite_unlocked@plt>
  40755c:	cmp	x23, x0
  407560:	b.ne	4078fc <ferror@plt+0x4abc>  // b.any
  407564:	sturb	wzr, [x20, #-1]
  407568:	ldp	x19, x20, [sp, #16]
  40756c:	ldp	x21, x22, [sp, #32]
  407570:	ldp	x23, x24, [sp, #48]
  407574:	ldp	x25, x26, [sp, #64]
  407578:	ldp	x29, x30, [sp], #112
  40757c:	ret
  407580:	adrp	x24, 429000 <_obstack_memory_used@@Base+0x17498>
  407584:	add	x24, x24, #0x560
  407588:	mov	x22, x0
  40758c:	ldrb	w0, [x24, #1529]
  407590:	cbz	w0, 40753c <ferror@plt+0x46fc>
  407594:	stp	x27, x28, [sp, #80]
  407598:	cmp	x21, x20
  40759c:	b.cc	4075d0 <ferror@plt+0x4790>  // b.lo, b.ul, b.last
  4075a0:	b	40762c <ferror@plt+0x47ec>
  4075a4:	mov	w1, w0
  4075a8:	cmp	x20, x21
  4075ac:	b.eq	40761c <ferror@plt+0x47dc>  // b.none
  4075b0:	ldp	x2, x3, [x19, #40]
  4075b4:	cmp	x3, x2
  4075b8:	b.ls	4075f0 <ferror@plt+0x47b0>  // b.plast
  4075bc:	add	x1, x2, #0x1
  4075c0:	str	x1, [x19, #40]
  4075c4:	strb	w0, [x2]
  4075c8:	cmp	x20, x21
  4075cc:	b.eq	407628 <ferror@plt+0x47e8>  // b.none
  4075d0:	ldrb	w0, [x21], #1
  4075d4:	cmp	w0, #0x9
  4075d8:	b.ne	4075a4 <ferror@plt+0x4764>  // b.any
  4075dc:	ldp	x2, x3, [x19, #40]
  4075e0:	mov	w1, #0x3e                  	// #62
  4075e4:	mov	w0, w1
  4075e8:	cmp	x3, x2
  4075ec:	b.hi	4075bc <ferror@plt+0x477c>  // b.pmore
  4075f0:	mov	x0, x19
  4075f4:	bl	402ad0 <__overflow@plt>
  4075f8:	cmn	w0, #0x1
  4075fc:	b.ne	4075c8 <ferror@plt+0x4788>  // b.any
  407600:	mov	w2, #0x5                   	// #5
  407604:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  407608:	mov	x0, #0x0                   	// #0
  40760c:	add	x1, x1, #0x770
  407610:	bl	402d20 <dcgettext@plt>
  407614:	mov	x1, #0x0                   	// #0
  407618:	bl	405950 <ferror@plt+0x2b10>
  40761c:	mov	w1, #0xa                   	// #10
  407620:	mov	w0, w1
  407624:	b	4075b0 <ferror@plt+0x4770>
  407628:	ldp	x21, x23, [x22]
  40762c:	sub	x19, x23, #0x1
  407630:	ldr	x20, [x24, #1224]
  407634:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x498>
  407638:	add	x19, x21, x19
  40763c:	add	x26, x26, #0x780
  407640:	mov	w25, #0x20                  	// #32
  407644:	cbz	x20, 407818 <ferror@plt+0x49d8>
  407648:	ldr	x8, [x20]
  40764c:	cmn	x8, #0x1
  407650:	b.eq	407884 <ferror@plt+0x4a44>  // b.none
  407654:	mov	x1, x23
  407658:	mov	x2, x20
  40765c:	mov	x0, x21
  407660:	bl	406028 <ferror@plt+0x31e8>
  407664:	ldr	x1, [x20, #16]
  407668:	mov	x27, x0
  40766c:	cmn	x1, #0x1
  407670:	b.eq	40769c <ferror@plt+0x485c>  // b.none
  407674:	mov	x1, x23
  407678:	mov	x2, x20
  40767c:	mov	x0, x21
  407680:	bl	406178 <ferror@plt+0x3338>
  407684:	mov	x19, x0
  407688:	cmn	x8, #0x1
  40768c:	ldrb	w0, [x20, #48]
  407690:	cset	w1, eq  // eq = none
  407694:	tst	w1, w0
  407698:	b.ne	4076b4 <ferror@plt+0x4874>  // b.any
  40769c:	ldrb	w0, [x20, #54]
  4076a0:	cbnz	w0, 4076b4 <ferror@plt+0x4874>
  4076a4:	ldr	x1, [x20, #48]
  4076a8:	and	x1, x1, #0xffffffff0000
  4076ac:	and	x1, x1, #0xffffffff00ffffff
  4076b0:	cbz	x1, 407750 <ferror@plt+0x4910>
  4076b4:	ldrb	w23, [x19]
  4076b8:	add	x1, x24, #0x8
  4076bc:	strb	wzr, [x19]
  4076c0:	ldrb	w0, [x27]
  4076c4:	ldrb	w0, [x1, w0, sxtw]
  4076c8:	cbz	w0, 4076dc <ferror@plt+0x489c>
  4076cc:	nop
  4076d0:	ldrb	w2, [x27, #1]!
  4076d4:	ldrb	w2, [x1, w2, sxtw]
  4076d8:	cbnz	w2, 4076d0 <ferror@plt+0x4890>
  4076dc:	str	x27, [sp, #96]
  4076e0:	cmp	x27, x19
  4076e4:	b.hi	407838 <ferror@plt+0x49f8>  // b.pmore
  4076e8:	ldrb	w0, [x20, #54]
  4076ec:	cbnz	w0, 407898 <ferror@plt+0x4a58>
  4076f0:	ldrb	w0, [x20, #52]
  4076f4:	cbnz	w0, 4078b4 <ferror@plt+0x4a74>
  4076f8:	ldr	x0, [x20, #48]
  4076fc:	and	x0, x0, #0xffffffff0000
  407700:	and	x0, x0, #0xffffff0000ffffff
  407704:	cbz	x0, 407838 <ferror@plt+0x49f8>
  407708:	mov	x1, x27
  40770c:	b.cs	40771c <ferror@plt+0x48dc>  // b.hs, b.nlast
  407710:	ldrb	w0, [x27]
  407714:	cmp	w0, #0x2d
  407718:	cinc	x1, x27, eq  // eq = none
  40771c:	add	x0, sp, #0x68
  407720:	str	x1, [sp, #104]
  407724:	bl	4053e0 <ferror@plt+0x25a0>
  407728:	and	w0, w0, #0xff
  40772c:	cmp	w0, #0x2f
  407730:	b.ls	407748 <ferror@plt+0x4908>  // b.plast
  407734:	ldrb	w1, [x20, #53]
  407738:	ldr	x0, [sp, #104]
  40773c:	cbnz	w1, 4078e0 <ferror@plt+0x4aa0>
  407740:	str	x0, [sp, #96]
  407744:	nop
  407748:	strb	w23, [x19]
  40774c:	ldr	x19, [sp, #96]
  407750:	adrp	x23, 429000 <_obstack_memory_used@@Base+0x17498>
  407754:	mov	x1, x27
  407758:	mov	x0, x21
  40775c:	bl	405b48 <ferror@plt+0x2d08>
  407760:	mov	x21, x0
  407764:	mov	x1, x19
  407768:	mov	x0, x27
  40776c:	add	x28, x23, #0x540
  407770:	bl	405b48 <ferror@plt+0x2d08>
  407774:	sub	x27, x21, #0x1
  407778:	mov	x19, x0
  40777c:	cbz	x21, 4077a8 <ferror@plt+0x4968>
  407780:	ldr	x0, [x28]
  407784:	ldp	x1, x2, [x0, #40]
  407788:	cmp	x1, x2
  40778c:	b.cs	407820 <ferror@plt+0x49e0>  // b.hs, b.nlast
  407790:	add	x2, x1, #0x1
  407794:	str	x2, [x0, #40]
  407798:	strb	w25, [x1]
  40779c:	sub	x27, x27, #0x1
  4077a0:	cmn	x27, #0x1
  4077a4:	b.ne	407780 <ferror@plt+0x4940>  // b.any
  4077a8:	cbz	x19, 407840 <ferror@plt+0x4a00>
  4077ac:	add	x28, x23, #0x540
  4077b0:	mov	w21, #0x5f                  	// #95
  4077b4:	nop
  4077b8:	ldr	x0, [x28]
  4077bc:	ldp	x1, x2, [x0, #40]
  4077c0:	cmp	x1, x2
  4077c4:	b.cs	40782c <ferror@plt+0x49ec>  // b.hs, b.nlast
  4077c8:	add	x2, x1, #0x1
  4077cc:	str	x2, [x0, #40]
  4077d0:	strb	w21, [x1]
  4077d4:	subs	x19, x19, #0x1
  4077d8:	b.ne	4077b8 <ferror@plt+0x4978>  // b.any
  4077dc:	ldr	x0, [x23, #1344]
  4077e0:	ldp	x1, x2, [x0, #40]
  4077e4:	cmp	x1, x2
  4077e8:	b.cs	4078a8 <ferror@plt+0x4a68>  // b.hs, b.nlast
  4077ec:	add	x2, x1, #0x1
  4077f0:	str	x2, [x0, #40]
  4077f4:	mov	w0, #0xa                   	// #10
  4077f8:	strb	w0, [x1]
  4077fc:	cbz	x20, 4078c4 <ferror@plt+0x4a84>
  407800:	ldr	x20, [x20, #64]
  407804:	cbz	x20, 407860 <ferror@plt+0x4a20>
  407808:	ldp	x21, x23, [x22]
  40780c:	sub	x19, x23, #0x1
  407810:	add	x19, x21, x19
  407814:	cbnz	x20, 407648 <ferror@plt+0x4808>
  407818:	mov	x27, x21
  40781c:	b	407750 <ferror@plt+0x4910>
  407820:	mov	w1, #0x20                  	// #32
  407824:	bl	402ad0 <__overflow@plt>
  407828:	b	40779c <ferror@plt+0x495c>
  40782c:	mov	w1, #0x5f                  	// #95
  407830:	bl	402ad0 <__overflow@plt>
  407834:	b	4077d4 <ferror@plt+0x4994>
  407838:	str	x19, [sp, #96]
  40783c:	b	407748 <ferror@plt+0x4908>
  407840:	mov	w2, #0x5                   	// #5
  407844:	mov	x1, x26
  407848:	mov	x0, #0x0                   	// #0
  40784c:	bl	402d20 <dcgettext@plt>
  407850:	mov	x1, x0
  407854:	mov	w0, #0x1                   	// #1
  407858:	bl	402980 <__printf_chk@plt>
  40785c:	b	4077fc <ferror@plt+0x49bc>
  407860:	ldrb	w0, [x24, #1530]
  407864:	cbnz	w0, 4078c4 <ferror@plt+0x4a84>
  407868:	ldrb	w0, [x24, #1531]
  40786c:	cbnz	w0, 4078c4 <ferror@plt+0x4a84>
  407870:	ldp	x27, x19, [x22]
  407874:	sub	x19, x19, #0x1
  407878:	mov	x21, x27
  40787c:	add	x19, x27, x19
  407880:	b	407754 <ferror@plt+0x4914>
  407884:	ldr	x0, [x20, #16]
  407888:	mov	x27, x21
  40788c:	cmn	x0, #0x1
  407890:	b.ne	407674 <ferror@plt+0x4834>  // b.any
  407894:	b	407688 <ferror@plt+0x4848>
  407898:	add	x1, sp, #0x60
  40789c:	mov	x0, x27
  4078a0:	bl	405550 <ferror@plt+0x2710>
  4078a4:	b	407748 <ferror@plt+0x4908>
  4078a8:	mov	w1, #0xa                   	// #10
  4078ac:	bl	402ad0 <__overflow@plt>
  4078b0:	b	4077fc <ferror@plt+0x49bc>
  4078b4:	add	x1, sp, #0x60
  4078b8:	mov	x0, x27
  4078bc:	bl	402b90 <strtold@plt>
  4078c0:	b	407748 <ferror@plt+0x4908>
  4078c4:	ldp	x19, x20, [sp, #16]
  4078c8:	ldp	x21, x22, [sp, #32]
  4078cc:	ldp	x23, x24, [sp, #48]
  4078d0:	ldp	x25, x26, [sp, #64]
  4078d4:	ldp	x27, x28, [sp, #80]
  4078d8:	ldp	x29, x30, [sp], #112
  4078dc:	ret
  4078e0:	ldrb	w2, [x0]
  4078e4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  4078e8:	add	x1, x1, #0x320
  4078ec:	ldrb	w1, [x1, w2, sxtw]
  4078f0:	cmp	w1, #0x0
  4078f4:	cinc	x0, x0, ne  // ne = any
  4078f8:	b	407740 <ferror@plt+0x4900>
  4078fc:	mov	w2, #0x5                   	// #5
  407900:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  407904:	mov	x0, #0x0                   	// #0
  407908:	add	x1, x1, #0x770
  40790c:	stp	x27, x28, [sp, #80]
  407910:	bl	402d20 <dcgettext@plt>
  407914:	mov	x1, x25
  407918:	bl	405950 <ferror@plt+0x2b10>
  40791c:	nop
  407920:	stp	x29, x30, [sp, #-80]!
  407924:	mov	x29, sp
  407928:	stp	x19, x20, [sp, #16]
  40792c:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  407930:	add	x19, x19, #0x560
  407934:	stp	x21, x22, [sp, #32]
  407938:	mov	x20, x1
  40793c:	mov	x21, x0
  407940:	ldr	x2, [x19, #1224]
  407944:	cbz	x2, 407960 <ferror@plt+0x4b20>
  407948:	bl	4062e0 <ferror@plt+0x34a0>
  40794c:	cbnz	w0, 407998 <ferror@plt+0x4b58>
  407950:	ldrb	w1, [x19, #1530]
  407954:	cbnz	w1, 407998 <ferror@plt+0x4b58>
  407958:	ldrb	w1, [x19, #1531]
  40795c:	cbnz	w1, 407998 <ferror@plt+0x4b58>
  407960:	stp	x23, x24, [sp, #48]
  407964:	ldr	x22, [x21, #8]
  407968:	ldr	x24, [x20, #8]
  40796c:	str	x25, [sp, #64]
  407970:	subs	x25, x22, #0x1
  407974:	sub	x23, x24, #0x1
  407978:	b.ne	4079a8 <ferror@plt+0x4b68>  // b.any
  40797c:	cmp	x23, #0x0
  407980:	csetm	w0, ne  // ne = any
  407984:	ldrb	w1, [x19, #1532]
  407988:	ldp	x23, x24, [sp, #48]
  40798c:	cmp	w1, #0x0
  407990:	ldr	x25, [sp, #64]
  407994:	cneg	w0, w0, ne  // ne = any
  407998:	ldp	x19, x20, [sp, #16]
  40799c:	ldp	x21, x22, [sp, #32]
  4079a0:	ldp	x29, x30, [sp], #80
  4079a4:	ret
  4079a8:	mov	w0, #0x1                   	// #1
  4079ac:	cbz	x23, 407984 <ferror@plt+0x4b44>
  4079b0:	ldrb	w2, [x19, #1232]
  4079b4:	ldr	x1, [x20]
  4079b8:	ldr	x0, [x21]
  4079bc:	cbnz	w2, 4079e8 <ferror@plt+0x4ba8>
  4079c0:	cmp	x25, x23
  4079c4:	csel	x2, x25, x23, ls  // ls = plast
  4079c8:	bl	402b00 <memcmp@plt>
  4079cc:	cbnz	w0, 407984 <ferror@plt+0x4b44>
  4079d0:	cmp	x25, x23
  4079d4:	mov	w0, #0xffffffff            	// #-1
  4079d8:	b.cc	407984 <ferror@plt+0x4b44>  // b.lo, b.ul, b.last
  4079dc:	cmp	x22, x24
  4079e0:	cset	w0, ne  // ne = any
  4079e4:	b	407984 <ferror@plt+0x4b44>
  4079e8:	mov	x2, x1
  4079ec:	mov	x3, x24
  4079f0:	mov	x1, x22
  4079f4:	bl	410628 <ferror@plt+0xd7e8>
  4079f8:	b	407984 <ferror@plt+0x4b44>
  4079fc:	nop
  407a00:	stp	x29, x30, [sp, #-80]!
  407a04:	cmp	x1, #0x2
  407a08:	mov	x29, sp
  407a0c:	stp	x19, x20, [sp, #16]
  407a10:	mov	x19, x2
  407a14:	stp	x21, x22, [sp, #32]
  407a18:	mov	x21, x0
  407a1c:	stp	x25, x26, [sp, #64]
  407a20:	and	w25, w3, #0xff
  407a24:	b.eq	407b58 <ferror@plt+0x4d18>  // b.none
  407a28:	stp	x23, x24, [sp, #48]
  407a2c:	lsr	x24, x1, #1
  407a30:	mov	x22, x1
  407a34:	neg	x20, x24, lsl #5
  407a38:	sub	x23, x1, x24
  407a3c:	add	x26, x0, x20
  407a40:	cbnz	w25, 407afc <ferror@plt+0x4cbc>
  407a44:	mov	x1, x23
  407a48:	mov	x0, x26
  407a4c:	mov	w3, #0x0                   	// #0
  407a50:	bl	407a00 <ferror@plt+0x4bc0>
  407a54:	cmp	x22, #0x3
  407a58:	b.hi	407bf4 <ferror@plt+0x4db4>  // b.pmore
  407a5c:	ldp	x2, x3, [x21, #-32]
  407a60:	mov	x0, x19
  407a64:	stp	x2, x3, [x19, #-32]
  407a68:	mov	x20, x26
  407a6c:	ldp	x2, x3, [x21, #-16]
  407a70:	stp	x2, x3, [x19, #-16]
  407a74:	mov	x19, x21
  407a78:	mov	x21, x0
  407a7c:	sub	x20, x20, #0x20
  407a80:	sub	x22, x21, #0x20
  407a84:	nop
  407a88:	mov	x1, x20
  407a8c:	mov	x0, x22
  407a90:	sub	x19, x19, #0x20
  407a94:	bl	407920 <ferror@plt+0x4ae0>
  407a98:	cmp	w0, #0x0
  407a9c:	b.le	407b34 <ferror@plt+0x4cf4>
  407aa0:	ldp	x0, x1, [x20]
  407aa4:	stp	x0, x1, [x19]
  407aa8:	subs	x23, x23, #0x1
  407aac:	ldp	x0, x1, [x20, #16]
  407ab0:	stp	x0, x1, [x19, #16]
  407ab4:	sub	x20, x20, #0x20
  407ab8:	b.ne	407a88 <ferror@plt+0x4c48>  // b.any
  407abc:	mov	x0, #0xffffffffffffffe0    	// #-32
  407ac0:	add	x2, x21, x0
  407ac4:	add	x1, x19, x0
  407ac8:	subs	x24, x24, #0x1
  407acc:	sub	x0, x0, #0x20
  407ad0:	ldp	x4, x5, [x2]
  407ad4:	stp	x4, x5, [x1]
  407ad8:	ldp	x2, x3, [x2, #16]
  407adc:	stp	x2, x3, [x1, #16]
  407ae0:	b.ne	407ac0 <ferror@plt+0x4c80>  // b.any
  407ae4:	ldp	x23, x24, [sp, #48]
  407ae8:	ldp	x19, x20, [sp, #16]
  407aec:	ldp	x21, x22, [sp, #32]
  407af0:	ldp	x25, x26, [sp, #64]
  407af4:	ldp	x29, x30, [sp], #80
  407af8:	ret
  407afc:	add	x20, x2, x20
  407b00:	mov	x0, x26
  407b04:	mov	x2, x20
  407b08:	mov	x1, x23
  407b0c:	mov	w3, #0x1                   	// #1
  407b10:	bl	407a00 <ferror@plt+0x4bc0>
  407b14:	cmp	x22, #0x3
  407b18:	b.ls	407a7c <ferror@plt+0x4c3c>  // b.plast
  407b1c:	mov	x2, x19
  407b20:	mov	x1, x24
  407b24:	mov	x0, x21
  407b28:	mov	w3, #0x0                   	// #0
  407b2c:	bl	407a00 <ferror@plt+0x4bc0>
  407b30:	b	407a7c <ferror@plt+0x4c3c>
  407b34:	ldp	x0, x1, [x22]
  407b38:	stp	x0, x1, [x19]
  407b3c:	subs	x24, x24, #0x1
  407b40:	ldp	x0, x1, [x22, #16]
  407b44:	stp	x0, x1, [x19, #16]
  407b48:	mov	x21, x22
  407b4c:	b.eq	407ae4 <ferror@plt+0x4ca4>  // b.none
  407b50:	sub	x22, x22, #0x20
  407b54:	b	407a88 <ferror@plt+0x4c48>
  407b58:	sub	x20, x0, #0x40
  407b5c:	sub	x22, x0, #0x20
  407b60:	mov	x1, x20
  407b64:	mov	x0, x22
  407b68:	bl	407920 <ferror@plt+0x4ae0>
  407b6c:	cmp	w0, #0x0
  407b70:	cbnz	w25, 407ba4 <ferror@plt+0x4d64>
  407b74:	b.le	407ae8 <ferror@plt+0x4ca8>
  407b78:	ldp	x0, x1, [x20]
  407b7c:	ldp	x2, x3, [x22]
  407b80:	stp	x0, x1, [x22]
  407b84:	ldp	x4, x5, [x20, #16]
  407b88:	stp	x2, x3, [x19, #-32]
  407b8c:	ldp	x0, x1, [x22, #16]
  407b90:	stp	x4, x5, [x22, #16]
  407b94:	stp	x0, x1, [x19, #-16]
  407b98:	stp	x2, x3, [x20]
  407b9c:	stp	x0, x1, [x20, #16]
  407ba0:	b	407ae8 <ferror@plt+0x4ca8>
  407ba4:	cset	w0, gt
  407ba8:	mvn	w1, w0
  407bac:	sub	w0, w0, #0x2
  407bb0:	ldp	x25, x26, [sp, #64]
  407bb4:	sbfiz	x1, x1, #5, #32
  407bb8:	add	x1, x21, x1
  407bbc:	sbfiz	x0, x0, #5, #32
  407bc0:	add	x21, x21, x0
  407bc4:	ldp	x2, x3, [x1]
  407bc8:	stp	x2, x3, [x19, #-32]
  407bcc:	ldp	x0, x1, [x1, #16]
  407bd0:	stp	x0, x1, [x19, #-16]
  407bd4:	ldp	x2, x3, [x21]
  407bd8:	stp	x2, x3, [x19, #-64]
  407bdc:	ldp	x0, x1, [x21, #16]
  407be0:	stp	x0, x1, [x19, #-48]
  407be4:	ldp	x19, x20, [sp, #16]
  407be8:	ldp	x21, x22, [sp, #32]
  407bec:	ldp	x29, x30, [sp], #80
  407bf0:	ret
  407bf4:	mov	x0, x21
  407bf8:	mov	x2, x19
  407bfc:	mov	x1, x24
  407c00:	mov	w3, #0x1                   	// #1
  407c04:	bl	407a00 <ferror@plt+0x4bc0>
  407c08:	mov	x20, x26
  407c0c:	mov	x0, x19
  407c10:	mov	x19, x21
  407c14:	mov	x21, x0
  407c18:	b	407a7c <ferror@plt+0x4c3c>
  407c1c:	nop
  407c20:	stp	x29, x30, [sp, #-48]!
  407c24:	mov	x29, sp
  407c28:	stp	x19, x20, [sp, #16]
  407c2c:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  407c30:	add	x19, x19, #0x560
  407c34:	stp	x21, x22, [sp, #32]
  407c38:	mov	x21, x1
  407c3c:	mov	x22, x2
  407c40:	ldrb	w1, [x19, #1530]
  407c44:	mov	x20, x0
  407c48:	cbz	w1, 407c74 <ferror@plt+0x4e34>
  407c4c:	ldr	x3, [x19, #1536]
  407c50:	add	x1, x19, #0x600
  407c54:	cbz	x3, 407c60 <ferror@plt+0x4e20>
  407c58:	bl	407920 <ferror@plt+0x4ae0>
  407c5c:	cbz	w0, 407c90 <ferror@plt+0x4e50>
  407c60:	add	x19, x19, #0x600
  407c64:	ldp	x0, x1, [x20]
  407c68:	stp	x0, x1, [x19]
  407c6c:	ldp	x0, x1, [x20, #16]
  407c70:	stp	x0, x1, [x19, #16]
  407c74:	mov	x2, x22
  407c78:	mov	x1, x21
  407c7c:	mov	x0, x20
  407c80:	ldp	x19, x20, [sp, #16]
  407c84:	ldp	x21, x22, [sp, #32]
  407c88:	ldp	x29, x30, [sp], #48
  407c8c:	b	407510 <ferror@plt+0x46d0>
  407c90:	ldp	x19, x20, [sp, #16]
  407c94:	ldp	x21, x22, [sp, #32]
  407c98:	ldp	x29, x30, [sp], #48
  407c9c:	ret
  407ca0:	stp	x29, x30, [sp, #-32]!
  407ca4:	mov	x29, sp
  407ca8:	str	x19, [sp, #16]
  407cac:	mov	w19, w0
  407cb0:	bl	402d70 <dup2@plt>
  407cb4:	mov	w0, w19
  407cb8:	ldr	x19, [sp, #16]
  407cbc:	ldp	x29, x30, [sp], #32
  407cc0:	b	402a10 <close@plt>
  407cc4:	nop
  407cc8:	stp	x29, x30, [sp, #-96]!
  407ccc:	cmp	xzr, x1, lsr #61
  407cd0:	mov	x29, sp
  407cd4:	stp	x19, x20, [sp, #16]
  407cd8:	mov	x19, x0
  407cdc:	lsl	x0, x1, #3
  407ce0:	stp	x21, x22, [sp, #32]
  407ce4:	mov	x22, x1
  407ce8:	cset	x1, ne  // ne = any
  407cec:	stp	x23, x24, [sp, #48]
  407cf0:	tbnz	x22, #60, 407ebc <ferror@plt+0x507c>
  407cf4:	cbnz	x1, 407ebc <ferror@plt+0x507c>
  407cf8:	mov	x20, x2
  407cfc:	bl	410220 <ferror@plt+0xd3e0>
  407d00:	mov	x23, x0
  407d04:	str	x0, [x20]
  407d08:	cbz	x22, 407e58 <ferror@plt+0x5018>
  407d0c:	mov	x20, #0x0                   	// #0
  407d10:	str	x25, [sp, #64]
  407d14:	adrp	x25, 412000 <_obstack_memory_used@@Base+0x498>
  407d18:	add	x25, x25, #0x7f8
  407d1c:	b	407d44 <ferror@plt+0x4f04>
  407d20:	ldr	x0, [x19]
  407d24:	mov	x1, x25
  407d28:	bl	407300 <ferror@plt+0x44c0>
  407d2c:	str	x0, [x23, x20, lsl #3]
  407d30:	cbz	x0, 407e0c <ferror@plt+0x4fcc>
  407d34:	add	x20, x20, #0x1
  407d38:	add	x19, x19, #0x10
  407d3c:	cmp	x20, x22
  407d40:	b.eq	407e0c <ferror@plt+0x4fcc>  // b.none
  407d44:	ldr	x21, [x19, #8]
  407d48:	cbz	x21, 407d20 <ferror@plt+0x4ee0>
  407d4c:	ldrb	w2, [x21, #12]
  407d50:	cbz	w2, 407d20 <ferror@plt+0x4ee0>
  407d54:	cmp	w2, #0x1
  407d58:	b.eq	407e28 <ferror@plt+0x4fe8>  // b.none
  407d5c:	add	x0, x21, #0xd
  407d60:	mov	w1, #0x0                   	// #0
  407d64:	bl	402900 <open@plt>
  407d68:	mov	w24, w0
  407d6c:	tbnz	w0, #31, 407da4 <ferror@plt+0x4f64>
  407d70:	add	x0, sp, #0x58
  407d74:	mov	x1, #0x9                   	// #9
  407d78:	bl	407058 <ferror@plt+0x4218>
  407d7c:	cmn	w0, #0x1
  407d80:	b.ne	407dc4 <ferror@plt+0x4f84>  // b.any
  407d84:	bl	402db0 <__errno_location@plt>
  407d88:	ldr	w21, [x0]
  407d8c:	mov	x19, x0
  407d90:	cmp	w21, #0x18
  407d94:	b.ne	407ec4 <ferror@plt+0x5084>  // b.any
  407d98:	mov	w0, w24
  407d9c:	bl	402a10 <close@plt>
  407da0:	str	w21, [x19]
  407da4:	ldr	x25, [sp, #64]
  407da8:	str	xzr, [x23, x20, lsl #3]
  407dac:	mov	x0, x20
  407db0:	ldp	x19, x20, [sp, #16]
  407db4:	ldp	x21, x22, [sp, #32]
  407db8:	ldp	x23, x24, [sp, #48]
  407dbc:	ldp	x29, x30, [sp], #96
  407dc0:	ret
  407dc4:	cbz	w0, 407e60 <ferror@plt+0x5020>
  407dc8:	str	w0, [x21, #8]
  407dcc:	mov	x0, x21
  407dd0:	add	x21, x23, x20, lsl #3
  407dd4:	bl	405e60 <ferror@plt+0x3020>
  407dd8:	mov	w0, w24
  407ddc:	bl	402a10 <close@plt>
  407de0:	ldr	w0, [sp, #92]
  407de4:	bl	402a10 <close@plt>
  407de8:	ldr	w0, [sp, #88]
  407dec:	mov	x1, x25
  407df0:	bl	4029a0 <fdopen@plt>
  407df4:	cbz	x0, 407e34 <ferror@plt+0x4ff4>
  407df8:	str	x0, [x23, x20, lsl #3]
  407dfc:	add	x20, x20, #0x1
  407e00:	add	x19, x19, #0x10
  407e04:	cmp	x20, x22
  407e08:	b.ne	407d44 <ferror@plt+0x4f04>  // b.any
  407e0c:	mov	x0, x20
  407e10:	ldp	x19, x20, [sp, #16]
  407e14:	ldp	x21, x22, [sp, #32]
  407e18:	ldp	x23, x24, [sp, #48]
  407e1c:	ldr	x25, [sp, #64]
  407e20:	ldp	x29, x30, [sp], #96
  407e24:	ret
  407e28:	ldr	w0, [x21, #8]
  407e2c:	bl	405d88 <ferror@plt+0x2f48>
  407e30:	b	407d5c <ferror@plt+0x4f1c>
  407e34:	bl	402db0 <__errno_location@plt>
  407e38:	ldr	w22, [x0]
  407e3c:	mov	x19, x0
  407e40:	ldr	w0, [sp, #88]
  407e44:	bl	402a10 <close@plt>
  407e48:	ldr	x25, [sp, #64]
  407e4c:	str	w22, [x19]
  407e50:	str	xzr, [x21]
  407e54:	b	407dac <ferror@plt+0x4f6c>
  407e58:	mov	x20, #0x0                   	// #0
  407e5c:	b	407dac <ferror@plt+0x4f6c>
  407e60:	ldr	w0, [sp, #88]
  407e64:	bl	402a10 <close@plt>
  407e68:	cbz	w24, 407e78 <ferror@plt+0x5038>
  407e6c:	mov	w0, w24
  407e70:	mov	w1, #0x0                   	// #0
  407e74:	bl	407ca0 <ferror@plt+0x4e60>
  407e78:	ldr	w0, [sp, #92]
  407e7c:	cmp	w0, #0x1
  407e80:	b.eq	407e8c <ferror@plt+0x504c>  // b.none
  407e84:	mov	w1, #0x1                   	// #1
  407e88:	bl	407ca0 <ferror@plt+0x4e60>
  407e8c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  407e90:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  407e94:	add	x2, x2, #0x7c0
  407e98:	mov	x3, #0x0                   	// #0
  407e9c:	ldr	x1, [x0, #2576]
  407ea0:	mov	x0, x1
  407ea4:	bl	402dc0 <execlp@plt>
  407ea8:	bl	402db0 <__errno_location@plt>
  407eac:	ldr	w0, [x0]
  407eb0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  407eb4:	add	x1, x1, #0x7c8
  407eb8:	bl	405dd0 <ferror@plt+0x2f90>
  407ebc:	str	x25, [sp, #64]
  407ec0:	bl	410478 <ferror@plt+0xd638>
  407ec4:	mov	w2, #0x5                   	// #5
  407ec8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  407ecc:	mov	x0, #0x0                   	// #0
  407ed0:	add	x1, x1, #0x798
  407ed4:	bl	402d20 <dcgettext@plt>
  407ed8:	mov	x19, x0
  407edc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  407ee0:	mov	w0, #0x4                   	// #4
  407ee4:	ldr	x1, [x1, #2576]
  407ee8:	bl	40e798 <ferror@plt+0xb958>
  407eec:	mov	x3, x0
  407ef0:	mov	x2, x19
  407ef4:	mov	w1, w21
  407ef8:	mov	w0, #0x2                   	// #2
  407efc:	bl	4027b0 <error@plt>
  407f00:	stp	x29, x30, [sp, #-224]!
  407f04:	mov	x29, sp
  407f08:	stp	x19, x20, [sp, #16]
  407f0c:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  407f10:	add	x19, x19, #0x560
  407f14:	stp	x21, x22, [sp, #32]
  407f18:	mov	x22, x0
  407f1c:	stp	x23, x24, [sp, #48]
  407f20:	and	w23, w1, #0xff
  407f24:	ldr	x0, [x19, #1192]
  407f28:	stp	x25, x26, [sp, #64]
  407f2c:	ldr	x1, [x19, #1568]
  407f30:	ldr	x26, [x0, x1, lsl #3]
  407f34:	mov	x0, x26
  407f38:	bl	402780 <strlen@plt>
  407f3c:	mov	x21, x0
  407f40:	add	x0, x0, #0x20
  407f44:	and	x0, x0, #0xfffffffffffffff8
  407f48:	bl	410220 <ferror@plt+0xd3e0>
  407f4c:	add	x24, x0, #0xd
  407f50:	mov	x2, x21
  407f54:	mov	x1, x26
  407f58:	mov	x20, x0
  407f5c:	mov	x0, x24
  407f60:	bl	402720 <memcpy@plt>
  407f64:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x498>
  407f68:	add	x0, x0, #0x878
  407f6c:	ldr	x1, [x19, #1568]
  407f70:	add	x2, x24, x21
  407f74:	ldr	x3, [x19, #1176]
  407f78:	add	x1, x1, #0x1
  407f7c:	ldr	x4, [x0]
  407f80:	cmp	x1, x3
  407f84:	ldr	w0, [x0, #8]
  407f88:	csel	x3, x1, xzr, ne  // ne = any
  407f8c:	str	x4, [x24, x21]
  407f90:	add	x1, x19, #0x578
  407f94:	str	w0, [x2, #8]
  407f98:	add	x2, sp, #0x60
  407f9c:	str	xzr, [x20]
  407fa0:	mov	w0, #0x0                   	// #0
  407fa4:	str	x3, [x19, #1568]
  407fa8:	bl	402740 <pthread_sigmask@plt>
  407fac:	cmp	w0, #0x0
  407fb0:	cset	w2, eq  // eq = none
  407fb4:	mov	w1, #0x80000               	// #524288
  407fb8:	mov	x0, x24
  407fbc:	strb	w2, [sp, #88]
  407fc0:	bl	40f708 <ferror@plt+0xc8c8>
  407fc4:	mov	w21, w0
  407fc8:	bl	402db0 <__errno_location@plt>
  407fcc:	mov	x25, x0
  407fd0:	tbnz	w21, #31, 40806c <ferror@plt+0x522c>
  407fd4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  407fd8:	add	x0, x0, #0x3b0
  407fdc:	ldrb	w1, [sp, #88]
  407fe0:	ldr	x2, [x0, #200]
  407fe4:	str	x20, [x0, #200]
  407fe8:	str	x20, [x2]
  407fec:	cbnz	w1, 4080b4 <ferror@plt+0x5274>
  407ff0:	ldr	x0, [x19, #1200]
  407ff4:	strb	wzr, [x20, #12]
  407ff8:	cbz	x0, 408018 <ferror@plt+0x51d8>
  407ffc:	add	x0, sp, #0x58
  408000:	mov	x1, #0x4                   	// #4
  408004:	bl	407058 <ferror@plt+0x4218>
  408008:	str	w0, [x20, #8]
  40800c:	cmp	w0, #0x0
  408010:	b.gt	40804c <ferror@plt+0x520c>
  408014:	b.eq	4080d8 <ferror@plt+0x5298>  // b.none
  408018:	mov	w0, w21
  40801c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  408020:	add	x1, x1, #0x850
  408024:	bl	4029a0 <fdopen@plt>
  408028:	str	x0, [x22]
  40802c:	cbz	x0, 408124 <ferror@plt+0x52e4>
  408030:	mov	x0, x20
  408034:	ldp	x19, x20, [sp, #16]
  408038:	ldp	x21, x22, [sp, #32]
  40803c:	ldp	x23, x24, [sp, #48]
  408040:	ldp	x25, x26, [sp, #64]
  408044:	ldp	x29, x30, [sp], #224
  408048:	ret
  40804c:	mov	w0, w21
  408050:	bl	402a10 <close@plt>
  408054:	ldr	w0, [sp, #88]
  408058:	bl	402a10 <close@plt>
  40805c:	ldr	w21, [sp, #92]
  408060:	mov	x0, x20
  408064:	bl	405e60 <ferror@plt+0x3020>
  408068:	b	408018 <ferror@plt+0x51d8>
  40806c:	ldrb	w0, [sp, #88]
  408070:	ldr	w19, [x25]
  408074:	cbnz	w0, 4080c8 <ferror@plt+0x5288>
  408078:	cmp	w19, #0x18
  40807c:	eor	w23, w23, #0x1
  408080:	cset	w0, ne  // ne = any
  408084:	orr	w23, w0, w23
  408088:	cbnz	w23, 40813c <ferror@plt+0x52fc>
  40808c:	mov	x0, x20
  408090:	mov	x20, #0x0                   	// #0
  408094:	bl	402ba0 <free@plt>
  408098:	mov	x0, x20
  40809c:	ldp	x19, x20, [sp, #16]
  4080a0:	ldp	x21, x22, [sp, #32]
  4080a4:	ldp	x23, x24, [sp, #48]
  4080a8:	ldp	x25, x26, [sp, #64]
  4080ac:	ldp	x29, x30, [sp], #224
  4080b0:	ret
  4080b4:	ldr	w23, [x25]
  4080b8:	add	x0, sp, #0x58
  4080bc:	bl	406e80 <ferror@plt+0x4040>
  4080c0:	str	w23, [x25]
  4080c4:	b	407ff0 <ferror@plt+0x51b0>
  4080c8:	add	x0, sp, #0x58
  4080cc:	bl	406e80 <ferror@plt+0x4040>
  4080d0:	str	w19, [x25]
  4080d4:	b	408078 <ferror@plt+0x5238>
  4080d8:	ldr	w0, [sp, #92]
  4080dc:	bl	402a10 <close@plt>
  4080e0:	cmp	w21, #0x1
  4080e4:	b.eq	4080f4 <ferror@plt+0x52b4>  // b.none
  4080e8:	mov	w0, w21
  4080ec:	mov	w1, #0x1                   	// #1
  4080f0:	bl	407ca0 <ferror@plt+0x4e60>
  4080f4:	ldr	w0, [sp, #88]
  4080f8:	cbz	w0, 408104 <ferror@plt+0x52c4>
  4080fc:	mov	w1, #0x0                   	// #0
  408100:	bl	407ca0 <ferror@plt+0x4e60>
  408104:	ldr	x1, [x19, #1200]
  408108:	mov	x2, #0x0                   	// #0
  40810c:	mov	x0, x1
  408110:	bl	402dc0 <execlp@plt>
  408114:	ldr	w0, [x25]
  408118:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40811c:	add	x1, x1, #0x828
  408120:	bl	405dd0 <ferror@plt+0x2f90>
  408124:	mov	w2, #0x5                   	// #5
  408128:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40812c:	add	x1, x1, #0x858
  408130:	bl	402d20 <dcgettext@plt>
  408134:	mov	x1, x24
  408138:	bl	405950 <ferror@plt+0x2b10>
  40813c:	mov	w2, #0x5                   	// #5
  408140:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  408144:	mov	x0, #0x0                   	// #0
  408148:	add	x1, x1, #0x800
  40814c:	bl	402d20 <dcgettext@plt>
  408150:	mov	x20, x0
  408154:	mov	x1, x26
  408158:	mov	w0, #0x4                   	// #4
  40815c:	bl	40e798 <ferror@plt+0xb958>
  408160:	mov	x3, x0
  408164:	mov	x2, x20
  408168:	mov	w1, w19
  40816c:	mov	w0, #0x2                   	// #2
  408170:	bl	4027b0 <error@plt>
  408174:	nop
  408178:	ldp	x4, x3, [x1]
  40817c:	ldr	x2, [x1, #16]
  408180:	cmp	x4, x2
  408184:	ldr	x2, [x1, #24]
  408188:	b.eq	4081a4 <ferror@plt+0x5364>  // b.none
  40818c:	cmp	x3, x2
  408190:	b.eq	408198 <ferror@plt+0x5358>  // b.none
  408194:	b	405fd0 <ferror@plt+0x3190>
  408198:	ldr	x2, [x1, #48]
  40819c:	cbz	x2, 408194 <ferror@plt+0x5354>
  4081a0:	ret
  4081a4:	cmp	x3, x2
  4081a8:	b.eq	4081a0 <ferror@plt+0x5360>  // b.none
  4081ac:	ldr	x2, [x1, #40]
  4081b0:	cbnz	x2, 4081a0 <ferror@plt+0x5360>
  4081b4:	b	405fd0 <ferror@plt+0x3190>
  4081b8:	stp	x29, x30, [sp, #-176]!
  4081bc:	mov	x29, sp
  4081c0:	stp	x23, x24, [sp, #48]
  4081c4:	mov	x23, x2
  4081c8:	stp	x27, x28, [sp, #80]
  4081cc:	mov	x27, x0
  4081d0:	ldp	x28, x24, [x3, #40]
  4081d4:	stp	x19, x20, [sp, #16]
  4081d8:	mov	x20, x3
  4081dc:	ldr	x0, [x3, #64]
  4081e0:	stp	x21, x22, [sp, #32]
  4081e4:	mov	x19, x4
  4081e8:	add	x2, x28, x24
  4081ec:	stp	x25, x26, [sp, #64]
  4081f0:	lsr	x26, x1, #1
  4081f4:	stp	x27, x26, [sp, #120]
  4081f8:	mov	x25, x1
  4081fc:	mov	x1, #0x1ffff               	// #131071
  408200:	stp	x23, x0, [sp, #136]
  408204:	cmp	x2, x1
  408208:	mov	x21, x5
  40820c:	stp	x4, x5, [sp, #152]
  408210:	mov	x22, x6
  408214:	ccmp	x25, #0x1, #0x0, hi  // hi = pmore
  408218:	str	x6, [sp, #168]
  40821c:	b.hi	40876c <ferror@plt+0x592c>  // b.pmore
  408220:	neg	x26, x28, lsl #5
  408224:	cmp	x24, #0x1
  408228:	add	x25, x27, x26
  40822c:	sub	x4, x27, x23, lsl #5
  408230:	b.ls	408254 <ferror@plt+0x5414>  // b.plast
  408234:	lsr	x2, x28, #1
  408238:	mov	x1, x24
  40823c:	mov	x0, x25
  408240:	mov	w3, #0x0                   	// #0
  408244:	sub	x2, x4, x2, lsl #5
  408248:	str	x4, [sp, #96]
  40824c:	bl	407a00 <ferror@plt+0x4bc0>
  408250:	ldr	x4, [sp, #96]
  408254:	cmp	x28, #0x1
  408258:	b.ls	408270 <ferror@plt+0x5430>  // b.plast
  40825c:	mov	x2, x4
  408260:	mov	x1, x28
  408264:	mov	x0, x27
  408268:	mov	w3, #0x0                   	// #0
  40826c:	bl	407a00 <ferror@plt+0x4bc0>
  408270:	sub	x24, x26, x24, lsl #5
  408274:	stp	x27, x25, [x20]
  408278:	add	x24, x27, x24
  40827c:	stp	x25, x24, [x20, #16]
  408280:	add	x0, x19, #0x38
  408284:	add	x26, x19, #0x8
  408288:	mov	x1, x20
  40828c:	str	x0, [sp, #104]
  408290:	mov	x0, x19
  408294:	bl	405fd0 <ferror@plt+0x3190>
  408298:	mov	x0, x26
  40829c:	bl	402df0 <pthread_mutex_lock@plt>
  4082a0:	b	4082b0 <ferror@plt+0x5470>
  4082a4:	ldr	x0, [sp, #104]
  4082a8:	mov	x1, x26
  4082ac:	bl	402bd0 <pthread_cond_wait@plt>
  4082b0:	ldr	x0, [x19]
  4082b4:	bl	40c550 <ferror@plt+0x9710>
  4082b8:	mov	x28, x0
  4082bc:	cbz	x0, 4082a4 <ferror@plt+0x5464>
  4082c0:	mov	x0, x26
  4082c4:	add	x25, x28, #0x58
  4082c8:	bl	402e00 <pthread_mutex_unlock@plt>
  4082cc:	mov	x0, x25
  4082d0:	bl	402df0 <pthread_mutex_lock@plt>
  4082d4:	ldr	w0, [x28, #80]
  4082d8:	strb	wzr, [x28, #84]
  4082dc:	cbz	w0, 408728 <ferror@plt+0x58e8>
  4082e0:	ldp	x6, x5, [x28]
  4082e4:	add	w12, w0, #0x1
  4082e8:	ldr	x4, [x28, #16]
  4082ec:	lsl	w12, w12, #1
  4082f0:	cmp	w0, #0x1
  4082f4:	lsr	x12, x23, x12
  4082f8:	mov	x7, x4
  4082fc:	add	x12, x12, #0x1
  408300:	mov	x20, x6
  408304:	mov	x24, x5
  408308:	b.ls	40855c <ferror@plt+0x571c>  // b.plast
  40830c:	ldr	x11, [x28, #32]
  408310:	cmp	x6, x4
  408314:	mov	x2, x5
  408318:	mov	x4, x6
  40831c:	ldr	x27, [x11]
  408320:	b.ne	408358 <ferror@plt+0x5518>  // b.any
  408324:	b	408790 <ferror@plt+0x5950>
  408328:	ldp	x6, x7, [x28]
  40832c:	mov	x12, x24
  408330:	sub	x2, x7, #0x20
  408334:	str	x2, [x28, #8]
  408338:	ldp	x0, x1, [x7, #-32]
  40833c:	stp	x0, x1, [x27]
  408340:	mov	x4, x6
  408344:	ldp	x0, x1, [x7, #-16]
  408348:	stp	x0, x1, [x27, #16]
  40834c:	ldr	x7, [x28, #16]
  408350:	cmp	x7, x4
  408354:	b.eq	4083bc <ferror@plt+0x557c>  // b.none
  408358:	ldr	x8, [x28, #24]
  40835c:	sub	x1, x2, #0x20
  408360:	sub	x0, x4, #0x20
  408364:	sub	x24, x12, #0x1
  408368:	cmp	x8, x2
  40836c:	b.eq	408540 <ferror@plt+0x5700>  // b.none
  408370:	cbz	x12, 40842c <ferror@plt+0x55ec>
  408374:	str	x5, [sp, #96]
  408378:	bl	407920 <ferror@plt+0x4ae0>
  40837c:	sub	x27, x27, #0x20
  408380:	cmp	w0, #0x0
  408384:	ldr	x5, [sp, #96]
  408388:	b.gt	408328 <ferror@plt+0x54e8>
  40838c:	ldp	x6, x2, [x28]
  408390:	mov	x12, x24
  408394:	ldr	x7, [x28, #16]
  408398:	sub	x4, x6, #0x20
  40839c:	str	x4, [x28]
  4083a0:	ldp	x0, x1, [x4]
  4083a4:	stp	x0, x1, [x27]
  4083a8:	mov	x6, x4
  4083ac:	ldp	x0, x1, [x4, #16]
  4083b0:	stp	x0, x1, [x27, #16]
  4083b4:	cmp	x7, x4
  4083b8:	b.ne	408358 <ferror@plt+0x5518>  // b.any
  4083bc:	sub	x0, x20, x4
  4083c0:	sub	x1, x5, x2
  4083c4:	ldrb	w10, [x28, #84]
  4083c8:	ldr	x11, [x28, #32]
  4083cc:	asr	x4, x0, #5
  4083d0:	asr	x1, x1, #5
  4083d4:	ldp	x9, x8, [x28, #40]
  4083d8:	cmp	x8, x1
  4083dc:	b.eq	4083e8 <ferror@plt+0x55a8>  // b.none
  4083e0:	cmp	x9, x4
  4083e4:	b.eq	4084a8 <ferror@plt+0x5668>  // b.none
  4083e8:	str	x27, [x11]
  4083ec:	sub	x0, x9, x0, asr #5
  4083f0:	sub	x24, x8, x1
  4083f4:	stp	x0, x24, [x28, #40]
  4083f8:	cbnz	w10, 408408 <ferror@plt+0x55c8>
  4083fc:	mov	x1, x28
  408400:	mov	x0, x19
  408404:	bl	408178 <ferror@plt+0x5338>
  408408:	ldr	w0, [x28, #80]
  40840c:	cmp	w0, #0x1
  408410:	b.hi	408510 <ferror@plt+0x56d0>  // b.pmore
  408414:	ldp	x0, x1, [x28, #40]
  408418:	cmn	x0, x1
  40841c:	b.eq	408500 <ferror@plt+0x56c0>  // b.none
  408420:	mov	x0, x25
  408424:	bl	402e00 <pthread_mutex_unlock@plt>
  408428:	b	408298 <ferror@plt+0x5458>
  40842c:	sub	x4, x20, x4
  408430:	sub	x24, x5, x2
  408434:	ldrb	w10, [x28, #84]
  408438:	mov	x12, #0xffffffffffffffff    	// #-1
  40843c:	ldr	x11, [x28, #32]
  408440:	asr	x4, x4, #5
  408444:	asr	x1, x24, #5
  408448:	ldp	x9, x8, [x28, #40]
  40844c:	sub	x0, x20, x6
  408450:	cmp	x8, x1
  408454:	b.ne	4083e0 <ferror@plt+0x55a0>  // b.any
  408458:	cmp	x7, x6
  40845c:	b.eq	4083e8 <ferror@plt+0x55a8>  // b.none
  408460:	sub	x2, x12, #0x1
  408464:	cbz	x12, 4083e8 <ferror@plt+0x55a8>
  408468:	sub	x0, x6, #0x20
  40846c:	b	40847c <ferror@plt+0x563c>
  408470:	sub	x0, x0, #0x20
  408474:	cmn	x2, #0x1
  408478:	b.eq	408758 <ferror@plt+0x5918>  // b.none
  40847c:	ldp	x4, x5, [x0]
  408480:	str	x0, [x28]
  408484:	stp	x4, x5, [x27, #-32]!
  408488:	sub	x2, x2, #0x1
  40848c:	cmp	x0, x7
  408490:	ldp	x4, x5, [x0, #16]
  408494:	stp	x4, x5, [x27, #16]
  408498:	mov	x4, x0
  40849c:	b.ne	408470 <ferror@plt+0x5630>  // b.any
  4084a0:	sub	x0, x20, x0
  4084a4:	b	4083e8 <ferror@plt+0x55a8>
  4084a8:	ldr	x13, [x28, #24]
  4084ac:	cmp	x13, x2
  4084b0:	b.eq	4083e8 <ferror@plt+0x55a8>  // b.none
  4084b4:	sub	x4, x12, #0x1
  4084b8:	cbz	x12, 4083e8 <ferror@plt+0x55a8>
  4084bc:	sub	x2, x2, #0x20
  4084c0:	b	4084d0 <ferror@plt+0x5690>
  4084c4:	sub	x2, x2, #0x20
  4084c8:	cmn	x4, #0x1
  4084cc:	b.eq	408760 <ferror@plt+0x5920>  // b.none
  4084d0:	ldp	x6, x7, [x2]
  4084d4:	str	x2, [x28, #8]
  4084d8:	stp	x6, x7, [x27, #-32]!
  4084dc:	sub	x4, x4, #0x1
  4084e0:	cmp	x2, x13
  4084e4:	ldp	x6, x7, [x2, #16]
  4084e8:	stp	x6, x7, [x27, #16]
  4084ec:	mov	x24, x2
  4084f0:	b.ne	4084c4 <ferror@plt+0x5684>  // b.any
  4084f4:	sub	x24, x5, x2
  4084f8:	asr	x1, x24, #5
  4084fc:	b	4083e8 <ferror@plt+0x55a8>
  408500:	ldr	x1, [x28, #56]
  408504:	mov	x0, x19
  408508:	bl	405fd0 <ferror@plt+0x3190>
  40850c:	b	408420 <ferror@plt+0x55e0>
  408510:	ldr	x0, [x28, #56]
  408514:	add	x0, x0, #0x58
  408518:	bl	402df0 <pthread_mutex_lock@plt>
  40851c:	ldr	x1, [x28, #56]
  408520:	ldrb	w0, [x1, #84]
  408524:	cbnz	w0, 408534 <ferror@plt+0x56f4>
  408528:	mov	x0, x19
  40852c:	bl	408178 <ferror@plt+0x5338>
  408530:	ldr	x1, [x28, #56]
  408534:	add	x0, x1, #0x58
  408538:	bl	402e00 <pthread_mutex_unlock@plt>
  40853c:	b	408420 <ferror@plt+0x55e0>
  408540:	sub	x4, x20, x4
  408544:	sub	x24, x5, x2
  408548:	ldrb	w10, [x28, #84]
  40854c:	asr	x4, x4, #5
  408550:	asr	x1, x24, #5
  408554:	ldr	x11, [x28, #32]
  408558:	b	408448 <ferror@plt+0x5608>
  40855c:	cmp	x6, x4
  408560:	mov	x2, x5
  408564:	mov	x1, #0x0                   	// #0
  408568:	mov	x0, #0x0                   	// #0
  40856c:	b.ne	4085a4 <ferror@plt+0x5764>  // b.any
  408570:	b	40860c <ferror@plt+0x57cc>
  408574:	ldr	x0, [x28, #8]
  408578:	mov	x2, x22
  40857c:	mov	x1, x21
  408580:	sub	x0, x0, #0x20
  408584:	str	x0, [x28, #8]
  408588:	bl	407c20 <ferror@plt+0x4de0>
  40858c:	ldp	x6, x5, [x28]
  408590:	mov	x12, x27
  408594:	ldr	x4, [x28, #16]
  408598:	mov	x2, x5
  40859c:	cmp	x6, x4
  4085a0:	b.eq	4085fc <ferror@plt+0x57bc>  // b.none
  4085a4:	ldr	x7, [x28, #24]
  4085a8:	sub	x1, x5, #0x20
  4085ac:	sub	x0, x6, #0x20
  4085b0:	sub	x27, x12, #0x1
  4085b4:	cmp	x7, x5
  4085b8:	b.eq	408638 <ferror@plt+0x57f8>  // b.none
  4085bc:	cbz	x12, 408634 <ferror@plt+0x57f4>
  4085c0:	bl	407920 <ferror@plt+0x4ae0>
  4085c4:	cmp	w0, #0x0
  4085c8:	b.gt	408574 <ferror@plt+0x5734>
  4085cc:	ldr	x0, [x28]
  4085d0:	mov	x2, x22
  4085d4:	mov	x1, x21
  4085d8:	sub	x0, x0, #0x20
  4085dc:	str	x0, [x28]
  4085e0:	bl	407c20 <ferror@plt+0x4de0>
  4085e4:	ldp	x6, x5, [x28]
  4085e8:	mov	x12, x27
  4085ec:	ldr	x4, [x28, #16]
  4085f0:	mov	x2, x5
  4085f4:	cmp	x6, x4
  4085f8:	b.ne	4085a4 <ferror@plt+0x5764>  // b.any
  4085fc:	sub	x0, x20, x6
  408600:	sub	x1, x24, x5
  408604:	asr	x0, x0, #5
  408608:	asr	x1, x1, #5
  40860c:	ldp	x9, x8, [x28, #40]
  408610:	cmp	x8, x1
  408614:	b.eq	4087f0 <ferror@plt+0x59b0>  // b.none
  408618:	cmp	x0, x9
  40861c:	b.eq	4086c4 <ferror@plt+0x5884>  // b.none
  408620:	sub	x24, x24, x5
  408624:	ldrb	w10, [x28, #84]
  408628:	sub	x0, x20, x6
  40862c:	asr	x1, x24, #5
  408630:	b	4083ec <ferror@plt+0x55ac>
  408634:	mov	x12, #0xffffffffffffffff    	// #-1
  408638:	ldr	x1, [x28, #48]
  40863c:	sub	x0, x24, x5
  408640:	mov	x8, x1
  408644:	cmp	x1, x0, asr #5
  408648:	b.ne	4086b0 <ferror@plt+0x5870>  // b.any
  40864c:	cmp	x4, x6
  408650:	mov	x0, x6
  408654:	b.eq	408810 <ferror@plt+0x59d0>  // b.none
  408658:	sub	x27, x12, #0x1
  40865c:	cbnz	x12, 40866c <ferror@plt+0x582c>
  408660:	b	408800 <ferror@plt+0x59c0>
  408664:	cmn	x27, #0x1
  408668:	b.eq	408694 <ferror@plt+0x5854>  // b.none
  40866c:	sub	x0, x0, #0x20
  408670:	str	x0, [x28]
  408674:	mov	x2, x22
  408678:	mov	x1, x21
  40867c:	bl	407c20 <ferror@plt+0x4de0>
  408680:	sub	x27, x27, #0x1
  408684:	ldr	x0, [x28]
  408688:	ldr	x4, [x28, #16]
  40868c:	cmp	x0, x4
  408690:	b.ne	408664 <ferror@plt+0x5824>  // b.any
  408694:	ldr	x1, [x28, #8]
  408698:	sub	x0, x20, x0
  40869c:	ldrb	w10, [x28, #84]
  4086a0:	sub	x24, x24, x1
  4086a4:	ldp	x9, x8, [x28, #40]
  4086a8:	asr	x1, x24, #5
  4086ac:	b	4083ec <ferror@plt+0x55ac>
  4086b0:	sub	x0, x20, x6
  4086b4:	ldr	x9, [x28, #40]
  4086b8:	asr	x0, x0, #5
  4086bc:	cmp	x0, x9
  4086c0:	b.ne	408620 <ferror@plt+0x57e0>  // b.any
  4086c4:	ldr	x0, [x28, #24]
  4086c8:	cmp	x0, x5
  4086cc:	b.eq	408620 <ferror@plt+0x57e0>  // b.none
  4086d0:	sub	x27, x12, #0x1
  4086d4:	cbnz	x12, 4086e4 <ferror@plt+0x58a4>
  4086d8:	b	408620 <ferror@plt+0x57e0>
  4086dc:	cmn	x27, #0x1
  4086e0:	b.eq	40870c <ferror@plt+0x58cc>  // b.none
  4086e4:	sub	x0, x2, #0x20
  4086e8:	str	x0, [x28, #8]
  4086ec:	mov	x2, x22
  4086f0:	mov	x1, x21
  4086f4:	bl	407c20 <ferror@plt+0x4de0>
  4086f8:	sub	x27, x27, #0x1
  4086fc:	ldr	x2, [x28, #8]
  408700:	ldr	x0, [x28, #24]
  408704:	cmp	x2, x0
  408708:	b.ne	4086dc <ferror@plt+0x589c>  // b.any
  40870c:	ldr	x4, [x28]
  408710:	sub	x24, x24, x2
  408714:	ldrb	w10, [x28, #84]
  408718:	asr	x1, x24, #5
  40871c:	sub	x0, x20, x4
  408720:	ldp	x9, x8, [x28, #40]
  408724:	b	4083ec <ferror@plt+0x55ac>
  408728:	mov	x0, x25
  40872c:	bl	402e00 <pthread_mutex_unlock@plt>
  408730:	mov	x1, x28
  408734:	mov	x0, x19
  408738:	bl	405fd0 <ferror@plt+0x3190>
  40873c:	ldp	x19, x20, [sp, #16]
  408740:	ldp	x21, x22, [sp, #32]
  408744:	ldp	x23, x24, [sp, #48]
  408748:	ldp	x25, x26, [sp, #64]
  40874c:	ldp	x27, x28, [sp, #80]
  408750:	ldp	x29, x30, [sp], #176
  408754:	ret
  408758:	sub	x0, x20, x4
  40875c:	b	4083e8 <ferror@plt+0x55a8>
  408760:	sub	x24, x5, x24
  408764:	asr	x1, x24, #5
  408768:	b	4083e8 <ferror@plt+0x55a8>
  40876c:	adrp	x2, 408000 <ferror@plt+0x51c0>
  408770:	add	x3, sp, #0x78
  408774:	add	x2, x2, #0x820
  408778:	add	x0, sp, #0x70
  40877c:	mov	x1, #0x0                   	// #0
  408780:	bl	402a40 <pthread_create@plt>
  408784:	cbz	w0, 4087a4 <ferror@plt+0x5964>
  408788:	ldp	x28, x24, [x20, #40]
  40878c:	b	408220 <ferror@plt+0x53e0>
  408790:	mov	w10, #0x0                   	// #0
  408794:	mov	x1, #0x0                   	// #0
  408798:	mov	x4, #0x0                   	// #0
  40879c:	mov	x0, #0x0                   	// #0
  4087a0:	b	4083d4 <ferror@plt+0x5594>
  4087a4:	ldr	x0, [x20, #40]
  4087a8:	mov	x6, x22
  4087ac:	ldr	x3, [x20, #72]
  4087b0:	mov	x5, x21
  4087b4:	mov	x4, x19
  4087b8:	mov	x2, x23
  4087bc:	sub	x1, x25, x26
  4087c0:	sub	x0, x27, x0, lsl #5
  4087c4:	bl	4081b8 <ferror@plt+0x5378>
  4087c8:	ldr	x0, [sp, #112]
  4087cc:	mov	x1, #0x0                   	// #0
  4087d0:	bl	402a70 <pthread_join@plt>
  4087d4:	ldp	x19, x20, [sp, #16]
  4087d8:	ldp	x21, x22, [sp, #32]
  4087dc:	ldp	x23, x24, [sp, #48]
  4087e0:	ldp	x25, x26, [sp, #64]
  4087e4:	ldp	x27, x28, [sp, #80]
  4087e8:	ldp	x29, x30, [sp], #176
  4087ec:	ret
  4087f0:	ldrb	w10, [x28, #84]
  4087f4:	sub	x0, x20, x6
  4087f8:	mov	x8, x1
  4087fc:	b	4083ec <ferror@plt+0x55ac>
  408800:	ldrb	w10, [x28, #84]
  408804:	sub	x0, x20, x6
  408808:	ldr	x9, [x28, #40]
  40880c:	b	4083ec <ferror@plt+0x55ac>
  408810:	ldrb	w10, [x28, #84]
  408814:	sub	x0, x20, x4
  408818:	ldr	x9, [x28, #40]
  40881c:	b	4083ec <ferror@plt+0x55ac>
  408820:	mov	x6, x0
  408824:	stp	x29, x30, [sp, #-16]!
  408828:	mov	x29, sp
  40882c:	ldp	x0, x1, [x0]
  408830:	ldp	x2, x3, [x6, #16]
  408834:	ldp	x4, x5, [x6, #32]
  408838:	ldr	x6, [x6, #48]
  40883c:	bl	4081b8 <ferror@plt+0x5378>
  408840:	mov	x0, #0x0                   	// #0
  408844:	ldp	x29, x30, [sp], #16
  408848:	ret
  40884c:	nop
  408850:	stp	x29, x30, [sp, #-144]!
  408854:	mov	x29, sp
  408858:	stp	x1, x0, [sp, #112]
  40885c:	mov	x1, x0
  408860:	ldrb	w0, [x0, #48]
  408864:	str	x2, [sp, #128]
  408868:	cbnz	w0, 408a90 <ferror@plt+0x5c50>
  40886c:	stp	x23, x24, [sp, #48]
  408870:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  408874:	adrp	x24, 429000 <_obstack_memory_used@@Base+0x17498>
  408878:	stp	x27, x28, [sp, #80]
  40887c:	add	x0, x0, #0x3b0
  408880:	add	x24, x24, #0x560
  408884:	ldp	x28, x4, [x1]
  408888:	stp	x19, x20, [sp, #16]
  40888c:	ldp	x2, x23, [x1, #32]
  408890:	stp	x21, x22, [sp, #32]
  408894:	stp	x25, x26, [sp, #64]
  408898:	str	x0, [sp, #136]
  40889c:	ldrb	w22, [x0, #212]
  4088a0:	cmp	x4, x2
  4088a4:	ldr	x19, [x0, #216]
  4088a8:	ldr	x27, [x24, #1224]
  4088ac:	b.ne	408a9c <ferror@plt+0x5c5c>  // b.any
  4088b0:	ldr	x0, [x1, #16]
  4088b4:	sub	x19, x19, #0x22
  4088b8:	ldr	x1, [sp, #120]
  4088bc:	add	x24, x24, #0x8
  4088c0:	ldr	x20, [x1, #24]
  4088c4:	add	x1, x23, #0x1
  4088c8:	str	x1, [sp, #104]
  4088cc:	add	x20, x28, x20
  4088d0:	add	x26, x28, x4
  4088d4:	sub	x25, x20, x0, lsl #5
  4088d8:	msub	x20, x23, x0, x20
  4088dc:	sub	x20, x20, x26
  4088e0:	cbz	x0, 4088f0 <ferror@plt+0x5ab0>
  4088e4:	ldp	x5, x0, [x25]
  4088e8:	add	x28, x5, x0
  4088ec:	nop
  4088f0:	ldr	x0, [sp, #104]
  4088f4:	cmp	x20, x0
  4088f8:	b.ls	408a0c <ferror@plt+0x5bcc>  // b.plast
  4088fc:	ldp	x2, x3, [sp, #104]
  408900:	sub	x21, x20, #0x1
  408904:	mov	x0, x26
  408908:	mov	x1, #0x1                   	// #1
  40890c:	udiv	x21, x21, x2
  408910:	mov	x2, x21
  408914:	bl	402af0 <fread_unlocked@plt>
  408918:	cmp	x21, x0
  40891c:	sub	x20, x20, x0
  408920:	add	x21, x26, x0
  408924:	b.eq	408968 <ferror@plt+0x5b28>  // b.none
  408928:	ldr	x0, [sp, #112]
  40892c:	ldr	w0, [x0]
  408930:	tbnz	w0, #5, 408b4c <ferror@plt+0x5d0c>
  408934:	tbz	w0, #4, 408968 <ferror@plt+0x5b28>
  408938:	ldr	x1, [sp, #120]
  40893c:	mov	w2, #0x1                   	// #1
  408940:	ldr	x0, [x1]
  408944:	strb	w2, [x1, #48]
  408948:	cmp	x0, x21
  40894c:	b.eq	408a7c <ferror@plt+0x5c3c>  // b.none
  408950:	cmp	x28, x21
  408954:	b.eq	408968 <ferror@plt+0x5b28>  // b.none
  408958:	ldurb	w0, [x21, #-1]
  40895c:	cmp	w0, w22
  408960:	b.eq	408968 <ferror@plt+0x5b28>  // b.none
  408964:	strb	w22, [x21], #1
  408968:	sub	x2, x21, x26
  40896c:	mov	x0, x26
  408970:	mov	w1, w22
  408974:	bl	402ce0 <memchr@plt>
  408978:	cbz	x0, 4089fc <ferror@plt+0x5bbc>
  40897c:	nop
  408980:	mov	x26, x0
  408984:	sub	x20, x20, x23
  408988:	strb	wzr, [x26], #1
  40898c:	str	x28, [x25, #-32]!
  408990:	sub	x8, x26, x28
  408994:	str	x8, [x25, #8]
  408998:	cmp	x19, x8
  40899c:	csel	x19, x19, x8, cs  // cs = hs, nlast
  4089a0:	cbz	x27, 4089e4 <ferror@plt+0x5ba4>
  4089a4:	ldr	x1, [x27, #16]
  4089a8:	cmn	x1, #0x1
  4089ac:	b.eq	4089c0 <ferror@plt+0x5b80>  // b.none
  4089b0:	mov	x2, x27
  4089b4:	mov	x1, x8
  4089b8:	mov	x0, x28
  4089bc:	bl	406178 <ferror@plt+0x3338>
  4089c0:	ldr	x1, [x27]
  4089c4:	str	x0, [x25, #24]
  4089c8:	cmn	x1, #0x1
  4089cc:	b.eq	408ac4 <ferror@plt+0x5c84>  // b.none
  4089d0:	mov	x1, x8
  4089d4:	mov	x0, x28
  4089d8:	mov	x2, x27
  4089dc:	bl	406028 <ferror@plt+0x31e8>
  4089e0:	str	x0, [x25, #16]
  4089e4:	mov	x28, x26
  4089e8:	sub	x2, x21, x26
  4089ec:	mov	x0, x26
  4089f0:	mov	w1, w22
  4089f4:	bl	402ce0 <memchr@plt>
  4089f8:	cbnz	x0, 408980 <ferror@plt+0x5b40>
  4089fc:	ldr	x0, [sp, #120]
  408a00:	mov	x26, x21
  408a04:	ldrb	w0, [x0, #48]
  408a08:	cbz	w0, 4088f0 <ferror@plt+0x5ab0>
  408a0c:	ldr	x3, [sp, #120]
  408a10:	ldr	x0, [x3]
  408a14:	ldr	x1, [x3, #24]
  408a18:	sub	x2, x26, x0
  408a1c:	str	x2, [x3, #8]
  408a20:	add	x2, x0, x1
  408a24:	sub	x2, x2, x25
  408a28:	asr	x2, x2, #5
  408a2c:	str	x2, [x3, #16]
  408a30:	cbnz	x2, 408b18 <ferror@plt+0x5cd8>
  408a34:	lsr	x20, x1, #5
  408a38:	cbz	x0, 408afc <ferror@plt+0x5cbc>
  408a3c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  408a40:	movk	x2, #0x2aa, lsl #48
  408a44:	cmp	x20, x2
  408a48:	b.cs	408b0c <ferror@plt+0x5ccc>  // b.hs, b.nlast
  408a4c:	add	x20, x20, x1, lsr #6
  408a50:	add	x20, x20, #0x1
  408a54:	lsl	x20, x20, #5
  408a58:	mov	x1, x20
  408a5c:	bl	410280 <ferror@plt+0xd440>
  408a60:	mov	x28, x0
  408a64:	ldr	x0, [sp, #120]
  408a68:	str	x28, [x0]
  408a6c:	str	x20, [x0, #24]
  408a70:	ldr	x4, [x0, #8]
  408a74:	ldr	x0, [x0, #16]
  408a78:	b	4088cc <ferror@plt+0x5a8c>
  408a7c:	ldp	x19, x20, [sp, #16]
  408a80:	ldp	x21, x22, [sp, #32]
  408a84:	ldp	x23, x24, [sp, #48]
  408a88:	ldp	x25, x26, [sp, #64]
  408a8c:	ldp	x27, x28, [sp, #80]
  408a90:	mov	w0, #0x0                   	// #0
  408a94:	ldp	x29, x30, [sp], #144
  408a98:	ret
  408a9c:	sub	x4, x4, x2
  408aa0:	mov	x0, x28
  408aa4:	add	x1, x28, x4
  408aa8:	bl	402730 <memmove@plt>
  408aac:	ldr	x1, [sp, #120]
  408ab0:	mov	x0, #0x0                   	// #0
  408ab4:	ldr	x4, [x1, #32]
  408ab8:	stp	x4, xzr, [x1, #8]
  408abc:	ldr	x28, [x1]
  408ac0:	b	4088b4 <ferror@plt+0x5a74>
  408ac4:	ldrb	w0, [x27, #48]
  408ac8:	cbnz	w0, 408ad8 <ferror@plt+0x5c98>
  408acc:	str	x28, [x25, #16]
  408ad0:	mov	x28, x26
  408ad4:	b	4089e8 <ferror@plt+0x5ba8>
  408ad8:	ldrb	w0, [x28]
  408adc:	ldrb	w0, [x24, w0, sxtw]
  408ae0:	cbz	w0, 408acc <ferror@plt+0x5c8c>
  408ae4:	nop
  408ae8:	ldrb	w0, [x28, #1]!
  408aec:	ldrb	w0, [x24, w0, sxtw]
  408af0:	cbnz	w0, 408ae8 <ferror@plt+0x5ca8>
  408af4:	str	x28, [x25, #16]
  408af8:	b	408ad0 <ferror@plt+0x5c90>
  408afc:	cbz	x20, 408b10 <ferror@plt+0x5cd0>
  408b00:	cmp	xzr, x20, lsl #5
  408b04:	lsl	x20, x20, #5
  408b08:	b.le	408a58 <ferror@plt+0x5c18>
  408b0c:	bl	410478 <ferror@plt+0xd638>
  408b10:	mov	x20, #0x80                  	// #128
  408b14:	b	408a58 <ferror@plt+0x5c18>
  408b18:	ldr	x1, [sp, #136]
  408b1c:	sub	x4, x26, x28
  408b20:	add	x19, x19, #0x22
  408b24:	mov	w0, #0x1                   	// #1
  408b28:	ldp	x21, x22, [sp, #32]
  408b2c:	ldp	x23, x24, [sp, #48]
  408b30:	ldp	x25, x26, [sp, #64]
  408b34:	ldp	x27, x28, [sp, #80]
  408b38:	str	x4, [x3, #32]
  408b3c:	str	x19, [x1, #216]
  408b40:	ldp	x19, x20, [sp, #16]
  408b44:	ldp	x29, x30, [sp], #144
  408b48:	ret
  408b4c:	mov	w2, #0x5                   	// #5
  408b50:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  408b54:	mov	x0, #0x0                   	// #0
  408b58:	add	x1, x1, #0x888
  408b5c:	bl	402d20 <dcgettext@plt>
  408b60:	ldr	x1, [sp, #128]
  408b64:	bl	405950 <ferror@plt+0x2b10>
  408b68:	stp	x29, x30, [sp, #-272]!
  408b6c:	mov	x6, #0x38                  	// #56
  408b70:	mov	x29, sp
  408b74:	stp	x21, x22, [sp, #32]
  408b78:	mov	x21, x2
  408b7c:	umulh	x2, x2, x6
  408b80:	stp	x19, x20, [sp, #16]
  408b84:	mul	x6, x21, x6
  408b88:	cmp	x2, #0x0
  408b8c:	stp	x5, x0, [sp, #112]
  408b90:	cset	x0, ne  // ne = any
  408b94:	stp	x3, x4, [sp, #168]
  408b98:	str	x1, [sp, #184]
  408b9c:	tbnz	x6, #63, 409214 <ferror@plt+0x63d4>
  408ba0:	cbnz	x0, 409214 <ferror@plt+0x63d4>
  408ba4:	lsl	x19, x21, #3
  408ba8:	sub	x0, x19, x21
  408bac:	lsl	x0, x0, #3
  408bb0:	bl	410220 <ferror@plt+0xd3e0>
  408bb4:	cmp	xzr, x21, lsr #61
  408bb8:	str	x0, [sp, #104]
  408bbc:	cset	x0, ne  // ne = any
  408bc0:	tbnz	x19, #63, 409214 <ferror@plt+0x63d4>
  408bc4:	cbnz	x0, 409214 <ferror@plt+0x63d4>
  408bc8:	mov	x0, x19
  408bcc:	stp	x25, x26, [sp, #64]
  408bd0:	bl	410220 <ferror@plt+0xd3e0>
  408bd4:	mov	x20, x0
  408bd8:	mov	x0, x19
  408bdc:	bl	410220 <ferror@plt+0xd3e0>
  408be0:	mov	x25, x0
  408be4:	mov	x0, x19
  408be8:	bl	410220 <ferror@plt+0xd3e0>
  408bec:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  408bf0:	add	x1, x1, #0x560
  408bf4:	mov	x19, x0
  408bf8:	str	x1, [sp, #128]
  408bfc:	str	xzr, [sp, #240]
  408c00:	ldr	x0, [x1, #1224]
  408c04:	str	x0, [sp, #200]
  408c08:	cbz	x21, 408d5c <ferror@plt+0x5f1c>
  408c0c:	ldr	x0, [sp, #120]
  408c10:	stp	x27, x28, [sp, #80]
  408c14:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x17498>
  408c18:	sub	x0, x0, #0x10
  408c1c:	mov	x4, #0x0                   	// #0
  408c20:	mov	x26, x4
  408c24:	stp	x23, x24, [sp, #48]
  408c28:	mov	x23, x21
  408c2c:	stp	x0, x19, [sp, #144]
  408c30:	add	x0, x28, #0x3b0
  408c34:	mov	x28, #0x0                   	// #0
  408c38:	mov	x21, x28
  408c3c:	str	x0, [sp, #136]
  408c40:	ldr	x0, [sp, #128]
  408c44:	sub	x24, x21, x26
  408c48:	ldp	x3, x4, [sp, #112]
  408c4c:	mov	x1, #0x20                  	// #32
  408c50:	ldr	x2, [x0, #1576]
  408c54:	ldr	x0, [sp, #136]
  408c58:	udiv	x2, x2, x23
  408c5c:	add	x27, x3, x21
  408c60:	add	x22, x4, x28
  408c64:	ldr	x6, [x0, #216]
  408c68:	ldr	x0, [sp, #104]
  408c6c:	cmp	x2, x6
  408c70:	csel	x2, x2, x6, cs  // cs = hs, nlast
  408c74:	add	x19, x0, x24, lsl #3
  408c78:	mov	x0, x19
  408c7c:	bl	405ae0 <ferror@plt+0x2ca0>
  408c80:	ldp	x3, x4, [sp, #112]
  408c84:	mov	x0, x19
  408c88:	ldr	x2, [x4, x28]
  408c8c:	ldr	x1, [x3, x21]
  408c90:	bl	408850 <ferror@plt+0x5a10>
  408c94:	tst	w0, #0xff
  408c98:	b.eq	408cd4 <ferror@plt+0x5e94>  // b.none
  408c9c:	ldr	x0, [sp, #104]
  408ca0:	add	x26, x26, #0x1
  408ca4:	ldp	x1, x2, [x19, #16]
  408ca8:	cmp	x26, x23
  408cac:	ldr	x0, [x0, x24, lsl #3]
  408cb0:	add	x0, x0, x2
  408cb4:	sub	x1, x0, x1, lsl #5
  408cb8:	sub	x0, x0, #0x20
  408cbc:	str	x1, [x25, x21]
  408cc0:	str	x0, [x20, x21]
  408cc4:	b.cs	408d9c <ferror@plt+0x5f5c>  // b.hs, b.nlast
  408cc8:	lsl	x21, x26, #3
  408ccc:	lsl	x28, x26, #4
  408cd0:	b	408c40 <ferror@plt+0x5e00>
  408cd4:	ldr	x0, [sp, #120]
  408cd8:	ldr	x1, [x0, x28]
  408cdc:	ldr	x0, [sp, #112]
  408ce0:	ldr	x0, [x0, x21]
  408ce4:	bl	407478 <ferror@plt+0x4638>
  408ce8:	ldr	x0, [sp, #184]
  408cec:	cmp	x0, x26
  408cf0:	b.hi	4091bc <ferror@plt+0x637c>  // b.pmore
  408cf4:	ldr	x0, [sp, #104]
  408cf8:	ldr	x0, [x0, x24, lsl #3]
  408cfc:	bl	402ba0 <free@plt>
  408d00:	sub	x2, x23, #0x1
  408d04:	cmp	x2, x26
  408d08:	b.ls	4091e8 <ferror@plt+0x63a8>  // b.plast
  408d0c:	ldr	x1, [sp, #144]
  408d10:	mov	x0, x22
  408d14:	add	x5, x1, x23, lsl #4
  408d18:	ldp	x6, x7, [x0, #16]
  408d1c:	stp	x6, x7, [x0], #16
  408d20:	ldr	x1, [x27, #8]
  408d24:	str	x1, [x27], #8
  408d28:	cmp	x5, x0
  408d2c:	b.ne	408d18 <ferror@plt+0x5ed8>  // b.any
  408d30:	mov	x23, x2
  408d34:	b	408c40 <ferror@plt+0x5e00>
  408d38:	ldr	x0, [sp, #136]
  408d3c:	cmp	x0, #0x0
  408d40:	ldr	x0, [sp, #128]
  408d44:	cset	w1, ne  // ne = any
  408d48:	ldrb	w0, [x0, #1530]
  408d4c:	tst	w1, w0
  408d50:	b.ne	4091f4 <ferror@plt+0x63b4>  // b.any
  408d54:	ldp	x23, x24, [sp, #48]
  408d58:	ldp	x27, x28, [sp, #80]
  408d5c:	ldp	x0, x1, [sp, #168]
  408d60:	bl	407478 <ferror@plt+0x4638>
  408d64:	ldr	x0, [sp, #112]
  408d68:	bl	402ba0 <free@plt>
  408d6c:	ldr	x0, [sp, #104]
  408d70:	bl	402ba0 <free@plt>
  408d74:	mov	x0, x19
  408d78:	bl	402ba0 <free@plt>
  408d7c:	mov	x0, x25
  408d80:	bl	402ba0 <free@plt>
  408d84:	mov	x0, x20
  408d88:	ldp	x19, x20, [sp, #16]
  408d8c:	ldp	x21, x22, [sp, #32]
  408d90:	ldp	x25, x26, [sp, #64]
  408d94:	ldp	x29, x30, [sp], #272
  408d98:	b	402ba0 <free@plt>
  408d9c:	ldr	x19, [sp, #152]
  408da0:	mov	x21, x23
  408da4:	cbz	x21, 408d54 <ferror@plt+0x5f14>
  408da8:	mov	x0, #0x0                   	// #0
  408dac:	nop
  408db0:	str	x0, [x19, x0, lsl #3]
  408db4:	add	x0, x0, #0x1
  408db8:	cmp	x0, x21
  408dbc:	b.ne	408db0 <ferror@plt+0x5f70>  // b.any
  408dc0:	cmp	x21, #0x1
  408dc4:	b.eq	408e10 <ferror@plt+0x5fd0>  // b.none
  408dc8:	mov	x27, #0x1                   	// #1
  408dcc:	nop
  408dd0:	lsl	x22, x27, #3
  408dd4:	sub	x22, x22, #0x8
  408dd8:	ldr	x24, [x19, x27, lsl #3]
  408ddc:	ldr	x23, [x19, x22]
  408de0:	ldr	x1, [x20, x24, lsl #3]
  408de4:	ldr	x0, [x20, x23, lsl #3]
  408de8:	bl	407920 <ferror@plt+0x4ae0>
  408dec:	cmp	w0, #0x0
  408df0:	b.le	408e04 <ferror@plt+0x5fc4>
  408df4:	str	x24, [x19, x22]
  408df8:	str	x23, [x19, x27, lsl #3]
  408dfc:	mov	x27, #0x1                   	// #1
  408e00:	b	408dd0 <ferror@plt+0x5f90>
  408e04:	add	x27, x27, #0x1
  408e08:	cmp	x27, x21
  408e0c:	b.cc	408dd0 <ferror@plt+0x5f90>  // b.lo, b.ul, b.last
  408e10:	ldr	x0, [sp, #112]
  408e14:	str	xzr, [sp, #136]
  408e18:	str	xzr, [sp, #192]
  408e1c:	sub	x0, x0, #0x8
  408e20:	str	x0, [sp, #208]
  408e24:	ldr	x0, [sp, #104]
  408e28:	add	x0, x0, #0x38
  408e2c:	str	x0, [sp, #216]
  408e30:	sub	x0, x20, #0x8
  408e34:	str	x0, [sp, #224]
  408e38:	sub	x0, x25, #0x8
  408e3c:	str	x0, [sp, #232]
  408e40:	ldr	x0, [sp, #128]
  408e44:	ldr	x24, [x19]
  408e48:	ldrb	w0, [x0, #1530]
  408e4c:	lsl	x22, x24, #3
  408e50:	add	x26, x20, x22
  408e54:	ldr	x27, [x20, x24, lsl #3]
  408e58:	cbz	w0, 408f8c <ferror@plt+0x614c>
  408e5c:	ldr	x0, [sp, #136]
  408e60:	cbz	x0, 408fcc <ferror@plt+0x618c>
  408e64:	mov	x1, x27
  408e68:	bl	407920 <ferror@plt+0x4ae0>
  408e6c:	cbnz	w0, 408fc0 <ferror@plt+0x6180>
  408e70:	ldr	x0, [x25, x22]
  408e74:	add	x7, x25, x22
  408e78:	cmp	x0, x27
  408e7c:	b.cc	408fa8 <ferror@plt+0x6168>  // b.lo, b.ul, b.last
  408e80:	ldp	x0, x4, [sp, #104]
  408e84:	lsl	x3, x24, #4
  408e88:	ldr	x5, [sp, #120]
  408e8c:	sub	x27, x22, x24
  408e90:	stp	x3, x7, [sp, #144]
  408e94:	ldr	x2, [x5, x3]
  408e98:	add	x5, x5, x3
  408e9c:	ldr	x1, [x4, x22]
  408ea0:	add	x28, x0, x27, lsl #3
  408ea4:	mov	x0, x28
  408ea8:	add	x23, x4, x22
  408eac:	str	x5, [sp, #160]
  408eb0:	bl	408850 <ferror@plt+0x5a10>
  408eb4:	tst	w0, #0xff
  408eb8:	ldp	x3, x7, [sp, #144]
  408ebc:	b.eq	409060 <ferror@plt+0x6220>  // b.none
  408ec0:	ldr	x0, [sp, #104]
  408ec4:	cmp	x21, #0x1
  408ec8:	ldp	x1, x2, [x28, #16]
  408ecc:	ldr	x0, [x0, x27, lsl #3]
  408ed0:	add	x0, x0, x2
  408ed4:	sub	x1, x0, x1, lsl #5
  408ed8:	sub	x0, x0, #0x20
  408edc:	str	x1, [x7]
  408ee0:	str	x0, [x26]
  408ee4:	b.eq	408fb8 <ferror@plt+0x6178>  // b.none
  408ee8:	mov	x27, #0x1                   	// #1
  408eec:	mov	x22, x21
  408ef0:	mov	x28, x27
  408ef4:	ldr	x26, [x26]
  408ef8:	b	408f18 <ferror@plt+0x60d8>
  408efc:	ccmp	x24, x23, #0x2, eq  // eq = none
  408f00:	b.cc	408f30 <ferror@plt+0x60f0>  // b.lo, b.ul, b.last
  408f04:	add	x28, x27, #0x1
  408f08:	add	x27, x28, x22
  408f0c:	cmp	x28, x22
  408f10:	lsr	x27, x27, #1
  408f14:	b.cs	408f44 <ferror@plt+0x6104>  // b.hs, b.nlast
  408f18:	ldr	x23, [x19, x27, lsl #3]
  408f1c:	mov	x0, x26
  408f20:	ldr	x1, [x20, x23, lsl #3]
  408f24:	bl	407920 <ferror@plt+0x4ae0>
  408f28:	cmp	w0, #0x0
  408f2c:	b.ge	408efc <ferror@plt+0x60bc>  // b.tcont
  408f30:	mov	x22, x27
  408f34:	add	x27, x28, x22
  408f38:	cmp	x28, x22
  408f3c:	lsr	x27, x27, #1
  408f40:	b.cc	408f18 <ferror@plt+0x60d8>  // b.lo, b.ul, b.last
  408f44:	subs	x2, x28, #0x1
  408f48:	b.eq	408f6c <ferror@plt+0x612c>  // b.none
  408f4c:	add	x28, x19, x28, lsl #3
  408f50:	add	x0, x19, #0x8
  408f54:	nop
  408f58:	ldr	x1, [x0]
  408f5c:	stur	x1, [x0, #-8]
  408f60:	add	x0, x0, #0x8
  408f64:	cmp	x0, x28
  408f68:	b.ne	408f58 <ferror@plt+0x6118>  // b.any
  408f6c:	ldr	x0, [sp, #128]
  408f70:	str	x24, [x19, x2, lsl #3]
  408f74:	ldr	x24, [x19]
  408f78:	ldrb	w0, [x0, #1530]
  408f7c:	lsl	x22, x24, #3
  408f80:	add	x26, x20, x22
  408f84:	ldr	x27, [x20, x24, lsl #3]
  408f88:	cbnz	w0, 408e5c <ferror@plt+0x601c>
  408f8c:	ldp	x1, x2, [sp, #168]
  408f90:	mov	x0, x27
  408f94:	bl	407510 <ferror@plt+0x46d0>
  408f98:	ldr	x0, [x25, x22]
  408f9c:	add	x7, x25, x22
  408fa0:	cmp	x0, x27
  408fa4:	b.cs	408e80 <ferror@plt+0x6040>  // b.hs, b.nlast
  408fa8:	sub	x27, x27, #0x20
  408fac:	str	x27, [x26]
  408fb0:	cmp	x21, #0x1
  408fb4:	b.ne	408ee8 <ferror@plt+0x60a8>  // b.any
  408fb8:	str	x24, [x19]
  408fbc:	b	408e40 <ferror@plt+0x6000>
  408fc0:	ldp	x1, x2, [sp, #168]
  408fc4:	add	x0, sp, #0xf0
  408fc8:	bl	407510 <ferror@plt+0x46d0>
  408fcc:	ldr	x28, [x27, #8]
  408fd0:	ldr	x1, [sp, #192]
  408fd4:	ldr	x0, [sp, #240]
  408fd8:	cmp	x28, x1
  408fdc:	b.hi	409030 <ferror@plt+0x61f0>  // b.pmore
  408fe0:	ldr	x1, [x27]
  408fe4:	add	x3, sp, #0xf0
  408fe8:	mov	x2, x28
  408fec:	str	x3, [sp, #136]
  408ff0:	str	x28, [sp, #248]
  408ff4:	bl	402720 <memcpy@plt>
  408ff8:	ldr	x0, [sp, #200]
  408ffc:	cbz	x0, 408e70 <ferror@plt+0x6030>
  409000:	add	x0, sp, #0xf0
  409004:	str	x0, [sp, #136]
  409008:	ldr	x5, [x27]
  40900c:	ldr	x0, [x27, #16]
  409010:	ldr	x2, [x27, #24]
  409014:	sub	x0, x0, x5
  409018:	ldr	x1, [sp, #240]
  40901c:	sub	x2, x2, x5
  409020:	add	x0, x1, x0
  409024:	add	x1, x1, x2
  409028:	stp	x0, x1, [sp, #256]
  40902c:	b	408e70 <ferror@plt+0x6030>
  409030:	cbz	x1, 409044 <ferror@plt+0x6204>
  409034:	lsl	x1, x1, #1
  409038:	cmp	x28, x1
  40903c:	b.hi	409030 <ferror@plt+0x61f0>  // b.pmore
  409040:	mov	x28, x1
  409044:	str	x28, [sp, #192]
  409048:	bl	402ba0 <free@plt>
  40904c:	mov	x0, x28
  409050:	bl	410220 <ferror@plt+0xd3e0>
  409054:	str	x0, [sp, #240]
  409058:	ldr	x28, [x27, #8]
  40905c:	b	408fe0 <ferror@plt+0x61a0>
  409060:	cmp	x21, #0x1
  409064:	mov	x0, #0x1                   	// #1
  409068:	b.eq	4090bc <ferror@plt+0x627c>  // b.none
  40906c:	nop
  409070:	ldr	x1, [x19, x0, lsl #3]
  409074:	cmp	x1, x24
  409078:	b.ls	409088 <ferror@plt+0x6248>  // b.plast
  40907c:	sub	x1, x1, #0x1
  409080:	str	x1, [x19, x0, lsl #3]
  409084:	ldr	x24, [x19]
  409088:	add	x0, x0, #0x1
  40908c:	cmp	x0, x21
  409090:	b.ne	409070 <ferror@plt+0x6230>  // b.any
  409094:	ldr	x0, [sp, #112]
  409098:	lsl	x22, x24, #3
  40909c:	lsl	x3, x24, #4
  4090a0:	sub	x5, x22, x24
  4090a4:	add	x23, x0, x22
  4090a8:	ldr	x0, [sp, #120]
  4090ac:	add	x0, x0, x3
  4090b0:	str	x0, [sp, #160]
  4090b4:	ldr	x0, [sp, #104]
  4090b8:	add	x28, x0, x5, lsl #3
  4090bc:	ldr	x1, [sp, #160]
  4090c0:	str	x3, [sp, #144]
  4090c4:	ldr	x0, [x23]
  4090c8:	sub	x26, x21, #0x1
  4090cc:	ldr	x1, [x1]
  4090d0:	bl	407478 <ferror@plt+0x4638>
  4090d4:	ldr	x0, [sp, #184]
  4090d8:	ldr	x3, [sp, #144]
  4090dc:	cmp	x0, x24
  4090e0:	b.hi	40919c <ferror@plt+0x635c>  // b.pmore
  4090e4:	ldr	x0, [x28]
  4090e8:	str	x3, [sp, #144]
  4090ec:	bl	402ba0 <free@plt>
  4090f0:	ldr	x1, [sp, #120]
  4090f4:	sub	x0, x22, x24
  4090f8:	ldr	x3, [sp, #144]
  4090fc:	cmp	x26, x24
  409100:	lsl	x0, x0, #3
  409104:	add	x8, x1, x3
  409108:	b.ls	409170 <ferror@plt+0x6330>  // b.plast
  40910c:	ldp	x9, x10, [sp, #104]
  409110:	ldp	x11, x12, [sp, #208]
  409114:	ldp	x13, x14, [sp, #224]
  409118:	add	x2, x12, x0
  40911c:	add	x1, x9, x0
  409120:	add	x24, x24, #0x1
  409124:	ldp	x4, x5, [x8, #16]
  409128:	add	x0, x0, #0x38
  40912c:	ldp	x6, x7, [x2]
  409130:	stp	x6, x7, [x1]
  409134:	cmp	x24, x26
  409138:	ldp	x6, x7, [x2, #16]
  40913c:	stp	x6, x7, [x1, #16]
  409140:	ldp	x6, x7, [x2, #32]
  409144:	stp	x6, x7, [x1, #32]
  409148:	ldr	x3, [x10, x24, lsl #3]
  40914c:	str	x3, [x11, x24, lsl #3]
  409150:	ldr	x3, [x20, x24, lsl #3]
  409154:	str	x3, [x13, x24, lsl #3]
  409158:	ldr	x3, [x25, x24, lsl #3]
  40915c:	str	x3, [x14, x24, lsl #3]
  409160:	ldr	x2, [x2, #48]
  409164:	stp	x4, x5, [x8], #16
  409168:	str	x2, [x1, #48]
  40916c:	b.ne	409118 <ferror@plt+0x62d8>  // b.any
  409170:	cbz	x26, 408d38 <ferror@plt+0x5ef8>
  409174:	add	x21, x19, x21, lsl #3
  409178:	add	x0, x19, #0x8
  40917c:	nop
  409180:	ldr	x1, [x0]
  409184:	stur	x1, [x0, #-8]
  409188:	add	x0, x0, #0x8
  40918c:	cmp	x21, x0
  409190:	b.ne	409180 <ferror@plt+0x6340>  // b.any
  409194:	mov	x21, x26
  409198:	b	408e40 <ferror@plt+0x6000>
  40919c:	ldr	x0, [sp, #160]
  4091a0:	ldr	x1, [sp, #184]
  4091a4:	ldr	x0, [x0]
  4091a8:	sub	x1, x1, #0x1
  4091ac:	str	x1, [sp, #184]
  4091b0:	bl	406f18 <ferror@plt+0x40d8>
  4091b4:	ldr	x3, [sp, #144]
  4091b8:	b	4090e4 <ferror@plt+0x62a4>
  4091bc:	ldr	x1, [sp, #184]
  4091c0:	ldr	x0, [x22]
  4091c4:	sub	x1, x1, #0x1
  4091c8:	str	x1, [sp, #184]
  4091cc:	bl	406f18 <ferror@plt+0x40d8>
  4091d0:	ldr	x0, [sp, #104]
  4091d4:	ldr	x0, [x0, x24, lsl #3]
  4091d8:	bl	402ba0 <free@plt>
  4091dc:	sub	x2, x23, #0x1
  4091e0:	cmp	x2, x26
  4091e4:	b.hi	408d0c <ferror@plt+0x5ecc>  // b.pmore
  4091e8:	mov	x21, x2
  4091ec:	ldr	x19, [sp, #152]
  4091f0:	b	408da4 <ferror@plt+0x5f64>
  4091f4:	ldp	x1, x2, [sp, #168]
  4091f8:	add	x0, sp, #0xf0
  4091fc:	bl	407510 <ferror@plt+0x46d0>
  409200:	ldr	x0, [sp, #240]
  409204:	bl	402ba0 <free@plt>
  409208:	ldp	x23, x24, [sp, #48]
  40920c:	ldp	x27, x28, [sp, #80]
  409210:	b	408d5c <ferror@plt+0x5f1c>
  409214:	stp	x23, x24, [sp, #48]
  409218:	stp	x25, x26, [sp, #64]
  40921c:	stp	x27, x28, [sp, #80]
  409220:	bl	410478 <ferror@plt+0xd638>
  409224:	nop
  409228:	stp	x29, x30, [sp, #-80]!
  40922c:	mov	x29, sp
  409230:	stp	x19, x20, [sp, #16]
  409234:	mov	x20, x2
  409238:	stp	x21, x22, [sp, #32]
  40923c:	mov	x22, x1
  409240:	mov	x21, x0
  409244:	mov	x1, x2
  409248:	add	x2, sp, #0x48
  40924c:	stp	x23, x24, [sp, #48]
  409250:	mov	x23, x3
  409254:	mov	x24, x4
  409258:	bl	407cc8 <ferror@plt+0x4e88>
  40925c:	cmp	x20, x0
  409260:	mov	x19, x0
  409264:	ccmp	x0, #0x1, #0x2, hi  // hi = pmore
  409268:	b.ls	4092a0 <ferror@plt+0x6460>  // b.plast
  40926c:	ldr	x5, [sp, #72]
  409270:	mov	x4, x24
  409274:	mov	x3, x23
  409278:	mov	x1, x22
  40927c:	mov	x0, x21
  409280:	mov	x2, x19
  409284:	bl	408b68 <ferror@plt+0x5d28>
  409288:	mov	x0, x19
  40928c:	ldp	x19, x20, [sp, #16]
  409290:	ldp	x21, x22, [sp, #32]
  409294:	ldp	x23, x24, [sp, #48]
  409298:	ldp	x29, x30, [sp], #80
  40929c:	ret
  4092a0:	lsl	x19, x19, #4
  4092a4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4092a8:	mov	w2, #0x5                   	// #5
  4092ac:	add	x1, x1, #0x740
  4092b0:	mov	x0, #0x0                   	// #0
  4092b4:	bl	402d20 <dcgettext@plt>
  4092b8:	ldr	x1, [x21, x19]
  4092bc:	bl	405950 <ferror@plt+0x2b10>
  4092c0:	stp	x29, x30, [sp, #-256]!
  4092c4:	mov	x29, sp
  4092c8:	stp	x23, x24, [sp, #48]
  4092cc:	adrp	x23, 429000 <_obstack_memory_used@@Base+0x17498>
  4092d0:	add	x23, x23, #0x3b0
  4092d4:	stp	x19, x20, [sp, #16]
  4092d8:	mov	x24, #0x1                   	// #1
  4092dc:	mov	x20, x2
  4092e0:	stp	x21, x22, [sp, #32]
  4092e4:	mov	x21, x1
  4092e8:	ldr	w1, [x23, #208]
  4092ec:	stp	x25, x26, [sp, #64]
  4092f0:	mov	x22, x0
  4092f4:	cmp	x1, x2
  4092f8:	stp	x27, x28, [sp, #80]
  4092fc:	str	x3, [sp, #96]
  409300:	b.cs	4093c0 <ferror@plt+0x6580>  // b.hs, b.nlast
  409304:	mov	x27, x22
  409308:	cmp	x20, x1
  40930c:	mov	x26, #0x0                   	// #0
  409310:	mov	x25, #0x0                   	// #0
  409314:	b.cc	409658 <ferror@plt+0x6818>  // b.lo, b.ul, b.last
  409318:	mov	w1, #0x0                   	// #0
  40931c:	add	x0, sp, #0x80
  409320:	bl	407f00 <ferror@plt+0x50c0>
  409324:	add	x28, x0, #0xd
  409328:	ldr	w2, [x23, #208]
  40932c:	mov	x19, x0
  409330:	ldr	x3, [sp, #128]
  409334:	cmp	x2, x21
  409338:	csel	x1, x2, x21, ls  // ls = plast
  40933c:	add	x0, x22, x25, lsl #4
  409340:	mov	x4, x28
  409344:	add	x26, x26, #0x1
  409348:	bl	409228 <ferror@plt+0x63e8>
  40934c:	cmp	x0, x21
  409350:	add	x25, x25, x0
  409354:	ldr	w1, [x23, #208]
  409358:	stp	x28, x19, [x27]
  40935c:	csel	x0, x0, x21, ls  // ls = plast
  409360:	sub	x2, x20, x25
  409364:	sub	x21, x21, x0
  409368:	cmp	x1, x2
  40936c:	add	x27, x27, #0x10
  409370:	b.ls	409318 <ferror@plt+0x64d8>  // b.plast
  409374:	udiv	x0, x26, x1
  409378:	add	x27, x22, x26, lsl #4
  40937c:	add	x28, x22, x25, lsl #4
  409380:	msub	x0, x0, x1, x26
  409384:	sub	x3, x1, x0
  409388:	add	x0, x2, x0
  40938c:	cmp	x2, x3
  409390:	b.hi	4095f4 <ferror@plt+0x67b4>  // b.pmore
  409394:	sub	x2, x20, x25
  409398:	mov	x1, x28
  40939c:	mov	x0, x27
  4093a0:	add	x21, x21, x26
  4093a4:	lsl	x2, x2, #4
  4093a8:	bl	402730 <memmove@plt>
  4093ac:	ldr	w1, [x23, #208]
  4093b0:	sub	x5, x26, x25
  4093b4:	add	x20, x20, x5
  4093b8:	cmp	x1, x20
  4093bc:	b.cc	409304 <ferror@plt+0x64c4>  // b.lo, b.ul, b.last
  4093c0:	add	x23, sp, #0x78
  4093c4:	cmp	x20, x21
  4093c8:	b.ls	4094a8 <ferror@plt+0x6668>  // b.plast
  4093cc:	add	x24, x22, x21, lsl #4
  4093d0:	mov	x25, x21
  4093d4:	add	x23, sp, #0x78
  4093d8:	mov	x27, #0x0                   	// #0
  4093dc:	b	409424 <ferror@plt+0x65e4>
  4093e0:	cbnz	w19, 40948c <ferror@plt+0x664c>
  4093e4:	bl	4059c0 <ferror@plt+0x2b80>
  4093e8:	mov	x28, x0
  4093ec:	cbz	x0, 4094a8 <ferror@plt+0x6668>
  4093f0:	add	x2, sp, #0x80
  4093f4:	mov	w1, #0x0                   	// #0
  4093f8:	mov	w0, #0x0                   	// #0
  4093fc:	bl	402d10 <__fxstat@plt>
  409400:	cbnz	w0, 409414 <ferror@plt+0x65d4>
  409404:	ldr	x0, [x28, #8]
  409408:	ldr	x1, [sp, #136]
  40940c:	cmp	x1, x0
  409410:	b.eq	40947c <ferror@plt+0x663c>  // b.none
  409414:	add	x25, x25, #0x1
  409418:	add	x24, x24, #0x10
  40941c:	cmp	x20, x25
  409420:	b.eq	4094a8 <ferror@plt+0x6668>  // b.none
  409424:	ldr	x1, [x24]
  409428:	ldrb	w19, [x1]
  40942c:	subs	w19, w19, #0x2d
  409430:	b.ne	409438 <ferror@plt+0x65f8>  // b.any
  409434:	ldrb	w19, [x1, #1]
  409438:	ldr	x0, [sp, #96]
  40943c:	cbz	x0, 409448 <ferror@plt+0x6608>
  409440:	bl	402b50 <strcmp@plt>
  409444:	cbz	w0, 4093e0 <ferror@plt+0x65a0>
  409448:	bl	4059c0 <ferror@plt+0x2b80>
  40944c:	mov	x28, x0
  409450:	cbz	x0, 4094a8 <ferror@plt+0x6668>
  409454:	cbz	w19, 4093f0 <ferror@plt+0x65b0>
  409458:	ldr	x1, [x24]
  40945c:	add	x2, sp, #0x80
  409460:	mov	w0, #0x0                   	// #0
  409464:	bl	402de0 <__xstat@plt>
  409468:	cbnz	w0, 409414 <ferror@plt+0x65d4>
  40946c:	ldr	x0, [x28, #8]
  409470:	ldr	x1, [sp, #136]
  409474:	cmp	x1, x0
  409478:	b.ne	409414 <ferror@plt+0x65d4>  // b.any
  40947c:	ldr	x0, [x28]
  409480:	ldr	x1, [sp, #128]
  409484:	cmp	x1, x0
  409488:	b.ne	409414 <ferror@plt+0x65d4>  // b.any
  40948c:	add	x19, x27, #0xd
  409490:	cbz	x27, 4095c0 <ferror@plt+0x6780>
  409494:	stp	x19, x27, [x24]
  409498:	add	x25, x25, #0x1
  40949c:	add	x24, x24, #0x10
  4094a0:	cmp	x20, x25
  4094a4:	b.ne	409424 <ferror@plt+0x65e4>  // b.any
  4094a8:	adrp	x27, 412000 <_obstack_memory_used@@Base+0x498>
  4094ac:	add	x0, x27, #0x850
  4094b0:	mov	x2, x23
  4094b4:	mov	x1, x20
  4094b8:	add	x25, x22, #0x10
  4094bc:	str	x0, [sp, #104]
  4094c0:	mov	x0, x22
  4094c4:	bl	407cc8 <ferror@plt+0x4e88>
  4094c8:	mov	x19, x0
  4094cc:	cmp	x20, x0
  4094d0:	b.eq	409584 <ferror@plt+0x6744>  // b.none
  4094d4:	nop
  4094d8:	cmp	x0, #0x2
  4094dc:	b.ls	4096a4 <ferror@plt+0x6864>  // b.plast
  4094e0:	sub	x19, x19, #0x1
  4094e4:	add	x24, x22, x19, lsl #4
  4094e8:	b	4094f0 <ferror@plt+0x66b0>
  4094ec:	sub	x19, x19, #0x1
  4094f0:	ldr	x0, [sp, #120]
  4094f4:	mov	x28, x24
  4094f8:	ldr	x1, [x24], #-16
  4094fc:	ldr	x0, [x0, x19, lsl #3]
  409500:	bl	407478 <ferror@plt+0x4638>
  409504:	cmp	x19, #0x2
  409508:	add	x0, sp, #0x80
  40950c:	cset	w1, hi  // hi = pmore
  409510:	bl	407f00 <ferror@plt+0x50c0>
  409514:	mov	x26, x0
  409518:	cbz	x0, 4094ec <ferror@plt+0x66ac>
  40951c:	ldp	x5, x3, [sp, #120]
  409520:	cmp	x21, x19
  409524:	add	x24, x0, #0xd
  409528:	csel	x27, x21, x19, ls  // ls = plast
  40952c:	mov	x4, x24
  409530:	sub	x20, x20, x19
  409534:	mov	x2, x19
  409538:	mov	x1, x27
  40953c:	mov	x0, x22
  409540:	bl	408b68 <ferror@plt+0x5d28>
  409544:	stp	x24, x26, [x22]
  409548:	lsl	x2, x20, #4
  40954c:	mov	x1, x28
  409550:	mov	x0, x25
  409554:	bl	402730 <memmove@plt>
  409558:	mov	x0, #0x1                   	// #1
  40955c:	sub	x7, x0, x27
  409560:	add	x20, x20, x0
  409564:	add	x21, x21, x7
  409568:	mov	x2, x23
  40956c:	mov	x1, x20
  409570:	mov	x0, x22
  409574:	bl	407cc8 <ferror@plt+0x4e88>
  409578:	mov	x19, x0
  40957c:	cmp	x20, x0
  409580:	b.ne	4094d8 <ferror@plt+0x6698>  // b.any
  409584:	ldp	x0, x1, [sp, #96]
  409588:	bl	407300 <ferror@plt+0x44c0>
  40958c:	cbnz	x0, 40966c <ferror@plt+0x682c>
  409590:	bl	402db0 <__errno_location@plt>
  409594:	ldr	w0, [x0]
  409598:	cmp	w0, #0x18
  40959c:	ccmp	x20, #0x2, #0x0, eq  // eq = none
  4095a0:	b.hi	4094e0 <ferror@plt+0x66a0>  // b.pmore
  4095a4:	mov	w2, #0x5                   	// #5
  4095a8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4095ac:	mov	x0, #0x0                   	// #0
  4095b0:	add	x1, x1, #0x740
  4095b4:	bl	402d20 <dcgettext@plt>
  4095b8:	ldr	x1, [sp, #96]
  4095bc:	bl	405950 <ferror@plt+0x2b10>
  4095c0:	mov	w1, #0x0                   	// #0
  4095c4:	mov	x0, x23
  4095c8:	bl	407f00 <ferror@plt+0x50c0>
  4095cc:	add	x19, x0, #0xd
  4095d0:	ldr	x3, [sp, #120]
  4095d4:	mov	x27, x0
  4095d8:	mov	x4, x19
  4095dc:	mov	x0, x24
  4095e0:	mov	x2, #0x1                   	// #1
  4095e4:	mov	x1, #0x0                   	// #0
  4095e8:	bl	409228 <ferror@plt+0x63e8>
  4095ec:	stp	x19, x27, [x24]
  4095f0:	b	409498 <ferror@plt+0x6658>
  4095f4:	sub	x19, x24, x1
  4095f8:	mov	w1, #0x0                   	// #0
  4095fc:	add	x19, x19, x0
  409600:	add	x0, sp, #0x80
  409604:	bl	407f00 <ferror@plt+0x50c0>
  409608:	mov	x6, x0
  40960c:	ldr	x3, [sp, #128]
  409610:	cmp	x19, x21
  409614:	mov	x0, x28
  409618:	add	x28, x6, #0xd
  40961c:	csel	x1, x19, x21, ls  // ls = plast
  409620:	mov	x4, x28
  409624:	mov	x2, x19
  409628:	add	x26, x26, #0x1
  40962c:	str	x6, [sp, #104]
  409630:	bl	409228 <ferror@plt+0x63e8>
  409634:	cmp	x0, x21
  409638:	add	x25, x25, x0
  40963c:	csel	x0, x0, x21, ls  // ls = plast
  409640:	ldr	x6, [sp, #104]
  409644:	sub	x21, x21, x0
  409648:	stp	x28, x6, [x27]
  40964c:	add	x28, x22, x25, lsl #4
  409650:	add	x27, x22, x26, lsl #4
  409654:	b	409394 <ferror@plt+0x6554>
  409658:	mov	x3, x1
  40965c:	mov	x28, x22
  409660:	mov	x2, x20
  409664:	mov	x0, #0x0                   	// #0
  409668:	b	409388 <ferror@plt+0x6548>
  40966c:	ldr	x4, [sp, #96]
  409670:	mov	x3, x0
  409674:	ldr	x5, [sp, #120]
  409678:	mov	x2, x20
  40967c:	mov	x1, x21
  409680:	mov	x0, x22
  409684:	bl	408b68 <ferror@plt+0x5d28>
  409688:	ldp	x19, x20, [sp, #16]
  40968c:	ldp	x21, x22, [sp, #32]
  409690:	ldp	x23, x24, [sp, #48]
  409694:	ldp	x25, x26, [sp, #64]
  409698:	ldp	x27, x28, [sp, #80]
  40969c:	ldp	x29, x30, [sp], #256
  4096a0:	ret
  4096a4:	lsl	x19, x19, #4
  4096a8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4096ac:	mov	w2, #0x5                   	// #5
  4096b0:	add	x1, x1, #0x740
  4096b4:	mov	x0, #0x0                   	// #0
  4096b8:	bl	402d20 <dcgettext@plt>
  4096bc:	ldr	x1, [x22, x19]
  4096c0:	bl	405950 <ferror@plt+0x2b10>
  4096c4:	nop
  4096c8:	stp	x29, x30, [sp, #-176]!
  4096cc:	mov	x29, sp
  4096d0:	stp	x19, x20, [sp, #16]
  4096d4:	mov	w20, w0
  4096d8:	stp	x21, x22, [sp, #32]
  4096dc:	str	x23, [sp, #48]
  4096e0:	cbz	w0, 409720 <ferror@plt+0x68e0>
  4096e4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  4096e8:	mov	w2, #0x5                   	// #5
  4096ec:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4096f0:	add	x1, x1, #0x8a8
  4096f4:	ldr	x19, [x0, #1320]
  4096f8:	mov	x0, #0x0                   	// #0
  4096fc:	bl	402d20 <dcgettext@plt>
  409700:	mov	x2, x0
  409704:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  409708:	mov	x0, x19
  40970c:	mov	w1, #0x1                   	// #1
  409710:	ldr	x3, [x3, #2992]
  409714:	bl	402b30 <__fprintf_chk@plt>
  409718:	mov	w0, w20
  40971c:	bl	402790 <exit@plt>
  409720:	mov	w2, #0x5                   	// #5
  409724:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409728:	mov	x0, #0x0                   	// #0
  40972c:	add	x1, x1, #0x8d0
  409730:	bl	402d20 <dcgettext@plt>
  409734:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  409738:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  40973c:	mov	x1, x0
  409740:	mov	w0, #0x1                   	// #1
  409744:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x2498>
  409748:	ldr	x3, [x2, #2992]
  40974c:	add	x21, sp, #0x40
  409750:	add	x22, x22, #0x18
  409754:	mov	x2, x3
  409758:	bl	402980 <__printf_chk@plt>
  40975c:	mov	w2, #0x5                   	// #5
  409760:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409764:	mov	x0, #0x0                   	// #0
  409768:	add	x1, x1, #0x918
  40976c:	bl	402d20 <dcgettext@plt>
  409770:	ldr	x1, [x19, #1344]
  409774:	bl	402d30 <fputs_unlocked@plt>
  409778:	mov	w2, #0x5                   	// #5
  40977c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409780:	mov	x0, #0x0                   	// #0
  409784:	add	x1, x1, #0x958
  409788:	bl	402d20 <dcgettext@plt>
  40978c:	ldr	x1, [x19, #1344]
  409790:	bl	402d30 <fputs_unlocked@plt>
  409794:	mov	w2, #0x5                   	// #5
  409798:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40979c:	mov	x0, #0x0                   	// #0
  4097a0:	add	x1, x1, #0x990
  4097a4:	bl	402d20 <dcgettext@plt>
  4097a8:	ldr	x1, [x19, #1344]
  4097ac:	bl	402d30 <fputs_unlocked@plt>
  4097b0:	mov	w2, #0x5                   	// #5
  4097b4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4097b8:	mov	x0, #0x0                   	// #0
  4097bc:	add	x1, x1, #0x9e0
  4097c0:	bl	402d20 <dcgettext@plt>
  4097c4:	ldr	x1, [x19, #1344]
  4097c8:	bl	402d30 <fputs_unlocked@plt>
  4097cc:	mov	w2, #0x5                   	// #5
  4097d0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4097d4:	mov	x0, #0x0                   	// #0
  4097d8:	add	x1, x1, #0x9f8
  4097dc:	bl	402d20 <dcgettext@plt>
  4097e0:	ldr	x1, [x19, #1344]
  4097e4:	bl	402d30 <fputs_unlocked@plt>
  4097e8:	mov	w2, #0x5                   	// #5
  4097ec:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4097f0:	mov	x0, #0x0                   	// #0
  4097f4:	add	x1, x1, #0xac8
  4097f8:	bl	402d20 <dcgettext@plt>
  4097fc:	ldr	x1, [x19, #1344]
  409800:	bl	402d30 <fputs_unlocked@plt>
  409804:	mov	w2, #0x5                   	// #5
  409808:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40980c:	mov	x0, #0x0                   	// #0
  409810:	add	x1, x1, #0xba0
  409814:	bl	402d20 <dcgettext@plt>
  409818:	ldr	x1, [x19, #1344]
  40981c:	bl	402d30 <fputs_unlocked@plt>
  409820:	mov	w2, #0x5                   	// #5
  409824:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409828:	mov	x0, #0x0                   	// #0
  40982c:	add	x1, x1, #0xbf0
  409830:	bl	402d20 <dcgettext@plt>
  409834:	ldr	x1, [x19, #1344]
  409838:	bl	402d30 <fputs_unlocked@plt>
  40983c:	mov	w2, #0x5                   	// #5
  409840:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409844:	mov	x0, #0x0                   	// #0
  409848:	add	x1, x1, #0xd08
  40984c:	bl	402d20 <dcgettext@plt>
  409850:	ldr	x1, [x19, #1344]
  409854:	bl	402d30 <fputs_unlocked@plt>
  409858:	mov	w2, #0x5                   	// #5
  40985c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409860:	mov	x0, #0x0                   	// #0
  409864:	add	x1, x1, #0xe20
  409868:	bl	402d20 <dcgettext@plt>
  40986c:	ldr	x1, [x19, #1344]
  409870:	bl	402d30 <fputs_unlocked@plt>
  409874:	mov	w2, #0x5                   	// #5
  409878:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  40987c:	mov	x0, #0x0                   	// #0
  409880:	add	x1, x1, #0xe38
  409884:	bl	402d20 <dcgettext@plt>
  409888:	ldr	x1, [x19, #1344]
  40988c:	bl	402d30 <fputs_unlocked@plt>
  409890:	mov	w2, #0x5                   	// #5
  409894:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  409898:	mov	x0, #0x0                   	// #0
  40989c:	add	x1, x1, #0xeb0
  4098a0:	bl	402d20 <dcgettext@plt>
  4098a4:	ldr	x1, [x19, #1344]
  4098a8:	bl	402d30 <fputs_unlocked@plt>
  4098ac:	mov	w2, #0x5                   	// #5
  4098b0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x498>
  4098b4:	mov	x0, #0x0                   	// #0
  4098b8:	add	x1, x1, #0xfc8
  4098bc:	bl	402d20 <dcgettext@plt>
  4098c0:	ldr	x1, [x19, #1344]
  4098c4:	bl	402d30 <fputs_unlocked@plt>
  4098c8:	mov	w2, #0x5                   	// #5
  4098cc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4098d0:	mov	x0, #0x0                   	// #0
  4098d4:	add	x1, x1, #0x128
  4098d8:	bl	402d20 <dcgettext@plt>
  4098dc:	ldr	x1, [x19, #1344]
  4098e0:	bl	402d30 <fputs_unlocked@plt>
  4098e4:	mov	w2, #0x5                   	// #5
  4098e8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4098ec:	mov	x0, #0x0                   	// #0
  4098f0:	add	x1, x1, #0x1b8
  4098f4:	bl	402d20 <dcgettext@plt>
  4098f8:	ldr	x1, [x19, #1344]
  4098fc:	bl	402d30 <fputs_unlocked@plt>
  409900:	mov	w2, #0x5                   	// #5
  409904:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409908:	mov	x0, #0x0                   	// #0
  40990c:	add	x1, x1, #0x290
  409910:	bl	402d20 <dcgettext@plt>
  409914:	mov	x1, x0
  409918:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  40991c:	mov	w0, #0x1                   	// #1
  409920:	add	x2, x2, #0x458
  409924:	bl	402980 <__printf_chk@plt>
  409928:	mov	w2, #0x5                   	// #5
  40992c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409930:	mov	x0, #0x0                   	// #0
  409934:	add	x1, x1, #0x460
  409938:	bl	402d20 <dcgettext@plt>
  40993c:	ldr	x1, [x19, #1344]
  409940:	bl	402d30 <fputs_unlocked@plt>
  409944:	mov	w2, #0x5                   	// #5
  409948:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  40994c:	mov	x0, #0x0                   	// #0
  409950:	add	x1, x1, #0x4a0
  409954:	bl	402d20 <dcgettext@plt>
  409958:	ldr	x1, [x19, #1344]
  40995c:	bl	402d30 <fputs_unlocked@plt>
  409960:	mov	w2, #0x5                   	// #5
  409964:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409968:	mov	x0, #0x0                   	// #0
  40996c:	add	x1, x1, #0x4d0
  409970:	bl	402d20 <dcgettext@plt>
  409974:	ldr	x1, [x19, #1344]
  409978:	bl	402d30 <fputs_unlocked@plt>
  40997c:	mov	w2, #0x5                   	// #5
  409980:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409984:	mov	x0, #0x0                   	// #0
  409988:	add	x1, x1, #0x508
  40998c:	bl	402d20 <dcgettext@plt>
  409990:	ldr	x1, [x19, #1344]
  409994:	bl	402d30 <fputs_unlocked@plt>
  409998:	mov	w2, #0x5                   	// #5
  40999c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  4099a0:	mov	x0, #0x0                   	// #0
  4099a4:	add	x1, x1, #0x768
  4099a8:	bl	402d20 <dcgettext@plt>
  4099ac:	ldr	x1, [x19, #1344]
  4099b0:	bl	402d30 <fputs_unlocked@plt>
  4099b4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  4099b8:	add	x2, x2, #0x320
  4099bc:	ldp	x4, x5, [x2, #288]
  4099c0:	stp	x4, x5, [sp, #80]
  4099c4:	ldp	x4, x5, [x2, #304]
  4099c8:	stp	x4, x5, [sp, #96]
  4099cc:	ldp	x1, x0, [x2, #272]
  4099d0:	stp	x1, x0, [sp, #64]
  4099d4:	ldp	x4, x5, [x2, #320]
  4099d8:	stp	x4, x5, [sp, #112]
  4099dc:	ldp	x4, x5, [x2, #336]
  4099e0:	stp	x4, x5, [sp, #128]
  4099e4:	ldp	x4, x5, [x2, #352]
  4099e8:	stp	x4, x5, [sp, #144]
  4099ec:	ldp	x4, x5, [x2, #368]
  4099f0:	stp	x4, x5, [sp, #160]
  4099f4:	cbnz	x1, 409ac8 <ferror@plt+0x6c88>
  4099f8:	ldr	x23, [x21, #8]
  4099fc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409a00:	mov	w2, #0x5                   	// #5
  409a04:	add	x1, x1, #0x850
  409a08:	mov	x0, #0x0                   	// #0
  409a0c:	cbz	x23, 409ad8 <ferror@plt+0x6c98>
  409a10:	bl	402d20 <dcgettext@plt>
  409a14:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x1498>
  409a18:	add	x21, x21, #0x868
  409a1c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  409a20:	mov	x3, x21
  409a24:	add	x2, x2, #0x890
  409a28:	mov	x1, x0
  409a2c:	mov	w0, #0x1                   	// #1
  409a30:	bl	402980 <__printf_chk@plt>
  409a34:	mov	x1, #0x0                   	// #0
  409a38:	mov	w0, #0x5                   	// #5
  409a3c:	bl	402e30 <setlocale@plt>
  409a40:	cbz	x0, 409a58 <ferror@plt+0x6c18>
  409a44:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409a48:	mov	x2, #0x3                   	// #3
  409a4c:	add	x1, x1, #0x8a0
  409a50:	bl	402940 <strncmp@plt>
  409a54:	cbnz	w0, 409b74 <ferror@plt+0x6d34>
  409a58:	mov	w2, #0x5                   	// #5
  409a5c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409a60:	mov	x0, #0x0                   	// #0
  409a64:	add	x1, x1, #0x8f0
  409a68:	bl	402d20 <dcgettext@plt>
  409a6c:	mov	x1, x0
  409a70:	mov	x3, x22
  409a74:	mov	x2, x21
  409a78:	mov	w0, #0x1                   	// #1
  409a7c:	bl	402980 <__printf_chk@plt>
  409a80:	mov	w2, #0x5                   	// #5
  409a84:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409a88:	mov	x0, #0x0                   	// #0
  409a8c:	add	x1, x1, #0x910
  409a90:	bl	402d20 <dcgettext@plt>
  409a94:	mov	x1, x0
  409a98:	cmp	x23, x22
  409a9c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  409aa0:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x498>
  409aa4:	add	x2, x2, #0xe30
  409aa8:	add	x3, x3, #0x898
  409aac:	csel	x3, x3, x2, eq  // eq = none
  409ab0:	mov	x2, x23
  409ab4:	mov	w0, #0x1                   	// #1
  409ab8:	bl	402980 <__printf_chk@plt>
  409abc:	b	409718 <ferror@plt+0x68d8>
  409ac0:	ldr	x1, [x21, #16]!
  409ac4:	cbz	x1, 4099f8 <ferror@plt+0x6bb8>
  409ac8:	mov	x0, x22
  409acc:	bl	402b50 <strcmp@plt>
  409ad0:	cbnz	w0, 409ac0 <ferror@plt+0x6c80>
  409ad4:	b	4099f8 <ferror@plt+0x6bb8>
  409ad8:	bl	402d20 <dcgettext@plt>
  409adc:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x1498>
  409ae0:	add	x21, x21, #0x868
  409ae4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  409ae8:	mov	x3, x21
  409aec:	add	x2, x2, #0x890
  409af0:	mov	x1, x0
  409af4:	mov	w0, #0x1                   	// #1
  409af8:	bl	402980 <__printf_chk@plt>
  409afc:	mov	x1, #0x0                   	// #0
  409b00:	mov	w0, #0x5                   	// #5
  409b04:	bl	402e30 <setlocale@plt>
  409b08:	cbz	x0, 409b20 <ferror@plt+0x6ce0>
  409b0c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409b10:	mov	x2, #0x3                   	// #3
  409b14:	add	x1, x1, #0x8a0
  409b18:	bl	402940 <strncmp@plt>
  409b1c:	cbnz	w0, 409b70 <ferror@plt+0x6d30>
  409b20:	mov	w2, #0x5                   	// #5
  409b24:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409b28:	mov	x0, #0x0                   	// #0
  409b2c:	add	x1, x1, #0x8f0
  409b30:	bl	402d20 <dcgettext@plt>
  409b34:	mov	x1, x0
  409b38:	mov	x3, x22
  409b3c:	mov	x2, x21
  409b40:	mov	w0, #0x1                   	// #1
  409b44:	bl	402980 <__printf_chk@plt>
  409b48:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409b4c:	mov	w2, #0x5                   	// #5
  409b50:	add	x1, x1, #0x910
  409b54:	mov	x0, #0x0                   	// #0
  409b58:	bl	402d20 <dcgettext@plt>
  409b5c:	mov	x23, x22
  409b60:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x498>
  409b64:	mov	x1, x0
  409b68:	add	x3, x3, #0x898
  409b6c:	b	409ab0 <ferror@plt+0x6c70>
  409b70:	mov	x23, x22
  409b74:	mov	w2, #0x5                   	// #5
  409b78:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1498>
  409b7c:	mov	x0, #0x0                   	// #0
  409b80:	add	x1, x1, #0x8a8
  409b84:	bl	402d20 <dcgettext@plt>
  409b88:	ldr	x1, [x19, #1344]
  409b8c:	bl	402d30 <fputs_unlocked@plt>
  409b90:	b	409a58 <ferror@plt+0x6c18>
  409b94:	nop
  409b98:	mov	w0, #0x1                   	// #1
  409b9c:	b	4096c8 <ferror@plt+0x6888>
  409ba0:	stp	x29, x30, [sp, #-96]!
  409ba4:	mov	x29, sp
  409ba8:	stp	x23, x24, [sp, #48]
  409bac:	mov	x24, x1
  409bb0:	stp	x21, x22, [sp, #32]
  409bb4:	mov	x21, x3
  409bb8:	stp	x25, x26, [sp, #64]
  409bbc:	mov	x26, x2
  409bc0:	mov	x25, x0
  409bc4:	stp	x27, x28, [sp, #80]
  409bc8:	bl	402780 <strlen@plt>
  409bcc:	ldr	x28, [x24]
  409bd0:	cbz	x28, 409cc0 <ferror@plt+0x6e80>
  409bd4:	mov	x22, x0
  409bd8:	mov	w27, #0x0                   	// #0
  409bdc:	mov	x23, #0xffffffffffffffff    	// #-1
  409be0:	stp	x19, x20, [sp, #16]
  409be4:	mov	x20, x26
  409be8:	mov	x19, #0x0                   	// #0
  409bec:	b	409c10 <ferror@plt+0x6dd0>
  409bf0:	cbz	x26, 409c94 <ferror@plt+0x6e54>
  409bf4:	bl	402b00 <memcmp@plt>
  409bf8:	cmp	w0, #0x0
  409bfc:	csinc	w27, w27, wzr, eq  // eq = none
  409c00:	add	x19, x19, #0x1
  409c04:	add	x20, x20, x21
  409c08:	ldr	x28, [x24, x19, lsl #3]
  409c0c:	cbz	x28, 409c68 <ferror@plt+0x6e28>
  409c10:	mov	x1, x25
  409c14:	mov	x2, x22
  409c18:	mov	x0, x28
  409c1c:	bl	402940 <strncmp@plt>
  409c20:	mov	w1, w0
  409c24:	mov	x0, x28
  409c28:	cbnz	w1, 409c00 <ferror@plt+0x6dc0>
  409c2c:	bl	402780 <strlen@plt>
  409c30:	mov	x3, x0
  409c34:	mov	x2, x21
  409c38:	madd	x0, x23, x21, x26
  409c3c:	mov	x1, x20
  409c40:	cmp	x3, x22
  409c44:	b.eq	409c9c <ferror@plt+0x6e5c>  // b.none
  409c48:	cmn	x23, #0x1
  409c4c:	b.ne	409bf0 <ferror@plt+0x6db0>  // b.any
  409c50:	mov	x23, x19
  409c54:	add	x19, x19, #0x1
  409c58:	add	x20, x20, x21
  409c5c:	ldr	x28, [x24, x19, lsl #3]
  409c60:	cbnz	x28, 409c10 <ferror@plt+0x6dd0>
  409c64:	nop
  409c68:	ldp	x19, x20, [sp, #16]
  409c6c:	cmp	w27, #0x0
  409c70:	mov	x0, #0xfffffffffffffffe    	// #-2
  409c74:	csel	x23, x23, x0, eq  // eq = none
  409c78:	mov	x0, x23
  409c7c:	ldp	x21, x22, [sp, #32]
  409c80:	ldp	x23, x24, [sp, #48]
  409c84:	ldp	x25, x26, [sp, #64]
  409c88:	ldp	x27, x28, [sp, #80]
  409c8c:	ldp	x29, x30, [sp], #96
  409c90:	ret
  409c94:	mov	w27, #0x1                   	// #1
  409c98:	b	409c00 <ferror@plt+0x6dc0>
  409c9c:	mov	x23, x19
  409ca0:	mov	x0, x23
  409ca4:	ldp	x19, x20, [sp, #16]
  409ca8:	ldp	x21, x22, [sp, #32]
  409cac:	ldp	x23, x24, [sp, #48]
  409cb0:	ldp	x25, x26, [sp, #64]
  409cb4:	ldp	x27, x28, [sp, #80]
  409cb8:	ldp	x29, x30, [sp], #96
  409cbc:	ret
  409cc0:	mov	x23, #0xffffffffffffffff    	// #-1
  409cc4:	b	409c78 <ferror@plt+0x6e38>
  409cc8:	stp	x29, x30, [sp, #-48]!
  409ccc:	cmn	x2, #0x1
  409cd0:	mov	x29, sp
  409cd4:	stp	x19, x20, [sp, #16]
  409cd8:	mov	x20, x0
  409cdc:	str	x21, [sp, #32]
  409ce0:	mov	x21, x1
  409ce4:	b.eq	409d44 <ferror@plt+0x6f04>  // b.none
  409ce8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  409cec:	mov	w2, #0x5                   	// #5
  409cf0:	add	x1, x1, #0x968
  409cf4:	mov	x0, #0x0                   	// #0
  409cf8:	bl	402d20 <dcgettext@plt>
  409cfc:	mov	x19, x0
  409d00:	mov	x2, x21
  409d04:	mov	w1, #0x8                   	// #8
  409d08:	mov	w0, #0x0                   	// #0
  409d0c:	bl	40e708 <ferror@plt+0xb8c8>
  409d10:	mov	x1, x20
  409d14:	mov	x20, x0
  409d18:	mov	w0, #0x1                   	// #1
  409d1c:	bl	40e9c8 <ferror@plt+0xbb88>
  409d20:	mov	x3, x20
  409d24:	mov	x2, x19
  409d28:	ldp	x19, x20, [sp, #16]
  409d2c:	mov	x4, x0
  409d30:	ldr	x21, [sp, #32]
  409d34:	mov	w1, #0x0                   	// #0
  409d38:	ldp	x29, x30, [sp], #48
  409d3c:	mov	w0, #0x0                   	// #0
  409d40:	b	4027b0 <error@plt>
  409d44:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  409d48:	mov	w2, #0x5                   	// #5
  409d4c:	add	x1, x1, #0x948
  409d50:	mov	x0, #0x0                   	// #0
  409d54:	bl	402d20 <dcgettext@plt>
  409d58:	mov	x19, x0
  409d5c:	b	409d00 <ferror@plt+0x6ec0>
  409d60:	stp	x29, x30, [sp, #-112]!
  409d64:	mov	x29, sp
  409d68:	stp	x27, x28, [sp, #80]
  409d6c:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x17498>
  409d70:	stp	x19, x20, [sp, #16]
  409d74:	mov	x20, x1
  409d78:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  409d7c:	add	x1, x1, #0x988
  409d80:	stp	x21, x22, [sp, #32]
  409d84:	mov	x22, x2
  409d88:	mov	w2, #0x5                   	// #5
  409d8c:	stp	x23, x24, [sp, #48]
  409d90:	mov	x24, x0
  409d94:	mov	x0, #0x0                   	// #0
  409d98:	bl	402d20 <dcgettext@plt>
  409d9c:	ldr	x1, [x28, #1320]
  409da0:	bl	402d30 <fputs_unlocked@plt>
  409da4:	ldr	x21, [x24]
  409da8:	cbz	x21, 409e20 <ferror@plt+0x6fe0>
  409dac:	adrp	x27, 414000 <_obstack_memory_used@@Base+0x2498>
  409db0:	add	x27, x27, #0x9a8
  409db4:	stp	x25, x26, [sp, #64]
  409db8:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  409dbc:	add	x25, x28, #0x528
  409dc0:	add	x26, x26, #0x9a0
  409dc4:	mov	x23, #0x0                   	// #0
  409dc8:	mov	x19, #0x0                   	// #0
  409dcc:	nop
  409dd0:	cbz	x19, 409de8 <ferror@plt+0x6fa8>
  409dd4:	mov	x2, x22
  409dd8:	mov	x1, x20
  409ddc:	mov	x0, x23
  409de0:	bl	402b00 <memcmp@plt>
  409de4:	cbz	w0, 409e58 <ferror@plt+0x7018>
  409de8:	ldr	x23, [x25]
  409dec:	mov	x0, x21
  409df0:	bl	40e9e0 <ferror@plt+0xbba0>
  409df4:	mov	x3, x0
  409df8:	mov	x2, x26
  409dfc:	mov	x0, x23
  409e00:	mov	w1, #0x1                   	// #1
  409e04:	mov	x23, x20
  409e08:	bl	402b30 <__fprintf_chk@plt>
  409e0c:	add	x19, x19, #0x1
  409e10:	add	x20, x20, x22
  409e14:	ldr	x21, [x24, x19, lsl #3]
  409e18:	cbnz	x21, 409dd0 <ferror@plt+0x6f90>
  409e1c:	ldp	x25, x26, [sp, #64]
  409e20:	ldr	x0, [x28, #1320]
  409e24:	ldp	x1, x2, [x0, #40]
  409e28:	cmp	x1, x2
  409e2c:	b.cs	409e84 <ferror@plt+0x7044>  // b.hs, b.nlast
  409e30:	add	x2, x1, #0x1
  409e34:	str	x2, [x0, #40]
  409e38:	mov	w0, #0xa                   	// #10
  409e3c:	strb	w0, [x1]
  409e40:	ldp	x19, x20, [sp, #16]
  409e44:	ldp	x21, x22, [sp, #32]
  409e48:	ldp	x23, x24, [sp, #48]
  409e4c:	ldp	x27, x28, [sp, #80]
  409e50:	ldp	x29, x30, [sp], #112
  409e54:	ret
  409e58:	ldr	x1, [x25]
  409e5c:	mov	x0, x21
  409e60:	str	x1, [sp, #104]
  409e64:	bl	40e9e0 <ferror@plt+0xbba0>
  409e68:	mov	x3, x0
  409e6c:	ldr	x1, [sp, #104]
  409e70:	mov	x2, x27
  409e74:	mov	x0, x1
  409e78:	mov	w1, #0x1                   	// #1
  409e7c:	bl	402b30 <__fprintf_chk@plt>
  409e80:	b	409e0c <ferror@plt+0x6fcc>
  409e84:	ldp	x19, x20, [sp, #16]
  409e88:	mov	w1, #0xa                   	// #10
  409e8c:	ldp	x21, x22, [sp, #32]
  409e90:	ldp	x23, x24, [sp, #48]
  409e94:	ldp	x27, x28, [sp, #80]
  409e98:	ldp	x29, x30, [sp], #112
  409e9c:	b	402ad0 <__overflow@plt>
  409ea0:	stp	x29, x30, [sp, #-64]!
  409ea4:	mov	x29, sp
  409ea8:	stp	x19, x20, [sp, #16]
  409eac:	mov	x19, x2
  409eb0:	mov	x20, x3
  409eb4:	stp	x21, x22, [sp, #32]
  409eb8:	mov	x22, x1
  409ebc:	mov	x21, x4
  409ec0:	mov	x3, x4
  409ec4:	mov	x2, x20
  409ec8:	mov	x1, x19
  409ecc:	stp	x23, x24, [sp, #48]
  409ed0:	mov	x24, x0
  409ed4:	mov	x23, x5
  409ed8:	mov	x0, x22
  409edc:	bl	409ba0 <ferror@plt+0x6d60>
  409ee0:	tbnz	x0, #63, 409ef8 <ferror@plt+0x70b8>
  409ee4:	ldp	x19, x20, [sp, #16]
  409ee8:	ldp	x21, x22, [sp, #32]
  409eec:	ldp	x23, x24, [sp, #48]
  409ef0:	ldp	x29, x30, [sp], #64
  409ef4:	ret
  409ef8:	mov	x2, x0
  409efc:	mov	x1, x22
  409f00:	mov	x0, x24
  409f04:	bl	409cc8 <ferror@plt+0x6e88>
  409f08:	mov	x0, x19
  409f0c:	mov	x2, x21
  409f10:	mov	x1, x20
  409f14:	bl	409d60 <ferror@plt+0x6f20>
  409f18:	blr	x23
  409f1c:	mov	x0, #0xffffffffffffffff    	// #-1
  409f20:	b	409ee4 <ferror@plt+0x70a4>
  409f24:	nop
  409f28:	stp	x29, x30, [sp, #-64]!
  409f2c:	mov	x29, sp
  409f30:	stp	x21, x22, [sp, #32]
  409f34:	ldr	x22, [x1]
  409f38:	cbz	x22, 409f80 <ferror@plt+0x7140>
  409f3c:	mov	x21, x3
  409f40:	stp	x19, x20, [sp, #16]
  409f44:	mov	x19, x2
  409f48:	add	x20, x1, #0x8
  409f4c:	str	x23, [sp, #48]
  409f50:	mov	x23, x0
  409f54:	b	409f64 <ferror@plt+0x7124>
  409f58:	ldr	x22, [x20], #8
  409f5c:	add	x19, x19, x21
  409f60:	cbz	x22, 409f78 <ferror@plt+0x7138>
  409f64:	mov	x2, x21
  409f68:	mov	x1, x19
  409f6c:	mov	x0, x23
  409f70:	bl	402b00 <memcmp@plt>
  409f74:	cbnz	w0, 409f58 <ferror@plt+0x7118>
  409f78:	ldp	x19, x20, [sp, #16]
  409f7c:	ldr	x23, [sp, #48]
  409f80:	mov	x0, x22
  409f84:	ldp	x21, x22, [sp, #32]
  409f88:	ldp	x29, x30, [sp], #64
  409f8c:	ret
  409f90:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  409f94:	str	x0, [x1, #2976]
  409f98:	ret
  409f9c:	nop
  409fa0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  409fa4:	strb	w0, [x1, #2984]
  409fa8:	ret
  409fac:	nop
  409fb0:	stp	x29, x30, [sp, #-48]!
  409fb4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  409fb8:	mov	x29, sp
  409fbc:	ldr	x0, [x0, #1344]
  409fc0:	bl	411b90 <_obstack_memory_used@@Base+0x28>
  409fc4:	cbz	w0, 409ffc <ferror@plt+0x71bc>
  409fc8:	stp	x19, x20, [sp, #16]
  409fcc:	adrp	x20, 429000 <_obstack_memory_used@@Base+0x17498>
  409fd0:	add	x0, x20, #0xba0
  409fd4:	str	x21, [sp, #32]
  409fd8:	ldrb	w21, [x0, #8]
  409fdc:	bl	402db0 <__errno_location@plt>
  409fe0:	mov	x19, x0
  409fe4:	cbz	w21, 40a014 <ferror@plt+0x71d4>
  409fe8:	ldr	w0, [x0]
  409fec:	cmp	w0, #0x20
  409ff0:	b.ne	40a014 <ferror@plt+0x71d4>  // b.any
  409ff4:	ldp	x19, x20, [sp, #16]
  409ff8:	ldr	x21, [sp, #32]
  409ffc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40a000:	ldr	x0, [x0, #1320]
  40a004:	bl	411b90 <_obstack_memory_used@@Base+0x28>
  40a008:	cbnz	w0, 40a068 <ferror@plt+0x7228>
  40a00c:	ldp	x29, x30, [sp], #48
  40a010:	ret
  40a014:	mov	w2, #0x5                   	// #5
  40a018:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40a01c:	mov	x0, #0x0                   	// #0
  40a020:	add	x1, x1, #0x9b0
  40a024:	bl	402d20 <dcgettext@plt>
  40a028:	ldr	x2, [x20, #2976]
  40a02c:	mov	x20, x0
  40a030:	cbz	x2, 40a074 <ferror@plt+0x7234>
  40a034:	ldr	w19, [x19]
  40a038:	mov	x0, x2
  40a03c:	bl	40e850 <ferror@plt+0xba10>
  40a040:	mov	x3, x0
  40a044:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  40a048:	mov	w1, w19
  40a04c:	mov	x4, x20
  40a050:	add	x2, x2, #0x5e0
  40a054:	mov	w0, #0x0                   	// #0
  40a058:	bl	4027b0 <error@plt>
  40a05c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40a060:	ldr	w0, [x0, #1208]
  40a064:	bl	402750 <_exit@plt>
  40a068:	stp	x19, x20, [sp, #16]
  40a06c:	str	x21, [sp, #32]
  40a070:	b	40a05c <ferror@plt+0x721c>
  40a074:	ldr	w1, [x19]
  40a078:	mov	x3, x0
  40a07c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  40a080:	mov	w0, #0x0                   	// #0
  40a084:	add	x2, x2, #0x6b8
  40a088:	bl	4027b0 <error@plt>
  40a08c:	b	40a05c <ferror@plt+0x721c>
  40a090:	mov	x2, #0x2301                	// #8961
  40a094:	mov	x1, #0xdcfe                	// #56574
  40a098:	movk	x2, #0x6745, lsl #16
  40a09c:	movk	x1, #0x98ba, lsl #16
  40a0a0:	movk	x2, #0xab89, lsl #32
  40a0a4:	movk	x1, #0x5476, lsl #32
  40a0a8:	movk	x2, #0xefcd, lsl #48
  40a0ac:	movk	x1, #0x1032, lsl #48
  40a0b0:	stp	x2, x1, [x0]
  40a0b4:	str	xzr, [x0, #16]
  40a0b8:	str	wzr, [x0, #24]
  40a0bc:	ret
  40a0c0:	mov	x2, x0
  40a0c4:	mov	x0, x1
  40a0c8:	ldr	w1, [x2]
  40a0cc:	str	w1, [x0]
  40a0d0:	ldr	w1, [x2, #4]
  40a0d4:	str	w1, [x0, #4]
  40a0d8:	ldr	w1, [x2, #8]
  40a0dc:	str	w1, [x0, #8]
  40a0e0:	ldr	w1, [x2, #12]
  40a0e4:	str	w1, [x0, #12]
  40a0e8:	ret
  40a0ec:	nop
  40a0f0:	stp	x29, x30, [sp, #-112]!
  40a0f4:	and	x4, x1, #0xfffffffffffffffc
  40a0f8:	add	x6, x0, x4
  40a0fc:	mov	x29, sp
  40a100:	ldp	w3, w4, [x2, #16]
  40a104:	lsr	x5, x1, #32
  40a108:	stp	x27, x28, [sp, #80]
  40a10c:	adds	w1, w3, w1
  40a110:	str	w1, [x2, #16]
  40a114:	adc	w1, w4, w5
  40a118:	str	w1, [x2, #20]
  40a11c:	cmp	x0, x6
  40a120:	ldp	w28, w10, [x2]
  40a124:	ldp	w11, w12, [x2, #8]
  40a128:	b.cs	40ab0c <ferror@plt+0x7ccc>  // b.hs, b.nlast
  40a12c:	mov	x27, x6
  40a130:	stp	x19, x20, [sp, #16]
  40a134:	stp	x21, x22, [sp, #32]
  40a138:	stp	x23, x24, [sp, #48]
  40a13c:	stp	x25, x26, [sp, #64]
  40a140:	str	x2, [sp, #104]
  40a144:	nop
  40a148:	ldp	w26, w20, [x0]
  40a14c:	eor	w3, w11, w12
  40a150:	and	w3, w3, w10
  40a154:	mov	w1, #0xa478                	// #42104
  40a158:	eor	w3, w3, w12
  40a15c:	movk	w1, #0xd76a, lsl #16
  40a160:	add	w3, w3, w26
  40a164:	add	w1, w28, w1
  40a168:	add	w3, w3, w1
  40a16c:	eor	w2, w10, w11
  40a170:	mov	w1, #0xb756                	// #46934
  40a174:	mov	w4, #0x70db                	// #28891
  40a178:	movk	w1, #0xe8c7, lsl #16
  40a17c:	ror	w3, w3, #25
  40a180:	add	w3, w3, w10
  40a184:	add	w1, w12, w1
  40a188:	and	w2, w2, w3
  40a18c:	eor	w22, w3, w10
  40a190:	eor	w2, w2, w11
  40a194:	movk	w4, #0x2420, lsl #16
  40a198:	add	w2, w2, w20
  40a19c:	add	w4, w11, w4
  40a1a0:	add	w2, w2, w1
  40a1a4:	mov	w1, #0xfaf                 	// #4015
  40a1a8:	ldp	w13, w21, [x0, #8]
  40a1ac:	ror	w2, w2, #20
  40a1b0:	add	w2, w3, w2
  40a1b4:	movk	w1, #0xf57c, lsl #16
  40a1b8:	and	w22, w22, w2
  40a1bc:	mov	w5, #0xceee                	// #52974
  40a1c0:	ldp	w15, w23, [x0, #16]
  40a1c4:	eor	w22, w22, w10
  40a1c8:	add	w22, w22, w13
  40a1cc:	movk	w5, #0xc1bd, lsl #16
  40a1d0:	add	w22, w22, w4
  40a1d4:	add	w16, w15, w1
  40a1d8:	mov	w1, #0xc62a                	// #50730
  40a1dc:	add	w14, w10, w5
  40a1e0:	movk	w1, #0x4787, lsl #16
  40a1e4:	ror	w22, w22, #15
  40a1e8:	add	w22, w2, w22
  40a1ec:	add	w8, w23, w1
  40a1f0:	eor	w1, w3, w2
  40a1f4:	eor	w24, w2, w22
  40a1f8:	and	w1, w1, w22
  40a1fc:	mov	w5, #0x4613                	// #17939
  40a200:	eor	w1, w1, w3
  40a204:	movk	w5, #0xa830, lsl #16
  40a208:	add	w1, w1, w21
  40a20c:	mov	w4, #0x9501                	// #38145
  40a210:	add	w1, w1, w14
  40a214:	movk	w4, #0xfd46, lsl #16
  40a218:	ldp	w17, w25, [x0, #24]
  40a21c:	ror	w1, w1, #10
  40a220:	add	w1, w22, w1
  40a224:	ldr	w7, [x0, #40]
  40a228:	and	w24, w24, w1
  40a22c:	add	w6, w17, w5
  40a230:	eor	w24, w24, w2
  40a234:	add	w18, w25, w4
  40a238:	add	w3, w24, w3
  40a23c:	eor	w24, w22, w1
  40a240:	add	w16, w16, w3
  40a244:	mov	w4, #0x98d8                	// #39128
  40a248:	ldp	w19, w9, [x0, #32]
  40a24c:	ror	w16, w16, #25
  40a250:	add	w16, w1, w16
  40a254:	movk	w4, #0x6980, lsl #16
  40a258:	and	w24, w24, w16
  40a25c:	add	w5, w19, w4
  40a260:	eor	w24, w24, w22
  40a264:	mov	w4, #0xf7af                	// #63407
  40a268:	add	w2, w24, w2
  40a26c:	eor	w24, w1, w16
  40a270:	add	w8, w8, w2
  40a274:	movk	w4, #0x8b44, lsl #16
  40a278:	add	w4, w9, w4
  40a27c:	mov	w3, #0xffff5bb1            	// #-42063
  40a280:	add	w3, w7, w3
  40a284:	ror	w8, w8, #20
  40a288:	add	w8, w16, w8
  40a28c:	mov	w2, #0xd7be                	// #55230
  40a290:	and	w24, w24, w8
  40a294:	movk	w2, #0x895c, lsl #16
  40a298:	eor	w24, w24, w1
  40a29c:	add	w22, w24, w22
  40a2a0:	eor	w24, w16, w8
  40a2a4:	add	w6, w6, w22
  40a2a8:	ldp	w14, w22, [x0, #44]
  40a2ac:	ror	w6, w6, #15
  40a2b0:	add	w6, w8, w6
  40a2b4:	and	w24, w24, w6
  40a2b8:	add	w2, w14, w2
  40a2bc:	eor	w24, w24, w16
  40a2c0:	add	w1, w24, w1
  40a2c4:	eor	w24, w8, w6
  40a2c8:	add	w1, w18, w1
  40a2cc:	mov	w18, #0x1122                	// #4386
  40a2d0:	movk	w18, #0x6b90, lsl #16
  40a2d4:	add	w18, w22, w18
  40a2d8:	ror	w1, w1, #10
  40a2dc:	add	w1, w6, w1
  40a2e0:	and	w24, w24, w1
  40a2e4:	eor	w24, w24, w8
  40a2e8:	add	w16, w24, w16
  40a2ec:	eor	w24, w6, w1
  40a2f0:	add	w5, w5, w16
  40a2f4:	ldr	w16, [x0, #52]
  40a2f8:	ror	w5, w5, #25
  40a2fc:	add	w5, w1, w5
  40a300:	and	w24, w24, w5
  40a304:	eor	w24, w24, w6
  40a308:	add	w24, w24, w8
  40a30c:	eor	w8, w1, w5
  40a310:	add	w4, w4, w24
  40a314:	mov	w24, #0x7193                	// #29075
  40a318:	movk	w24, #0xfd98, lsl #16
  40a31c:	add	w30, w16, w24
  40a320:	ror	w4, w4, #20
  40a324:	add	w4, w5, w4
  40a328:	and	w8, w8, w4
  40a32c:	eor	w8, w8, w1
  40a330:	add	w8, w8, w6
  40a334:	eor	w6, w5, w4
  40a338:	add	w3, w3, w8
  40a33c:	ror	w3, w3, #15
  40a340:	add	w3, w4, w3
  40a344:	and	w6, w6, w3
  40a348:	eor	w6, w6, w5
  40a34c:	add	w6, w6, w1
  40a350:	eor	w1, w4, w3
  40a354:	add	w2, w2, w6
  40a358:	mov	w6, #0x438e                	// #17294
  40a35c:	movk	w6, #0xa679, lsl #16
  40a360:	ror	w2, w2, #10
  40a364:	add	w2, w3, w2
  40a368:	and	w1, w1, w2
  40a36c:	eor	w1, w1, w4
  40a370:	add	w5, w1, w5
  40a374:	add	w5, w18, w5
  40a378:	ldp	w24, w18, [x0, #56]
  40a37c:	ror	w1, w5, #25
  40a380:	add	w1, w2, w1
  40a384:	add	x0, x0, #0x40
  40a388:	add	w8, w24, w6
  40a38c:	eor	w6, w3, w2
  40a390:	and	w6, w6, w1
  40a394:	eor	w5, w2, w1
  40a398:	eor	w6, w6, w3
  40a39c:	cmp	x27, x0
  40a3a0:	add	w4, w6, w4
  40a3a4:	add	w30, w30, w4
  40a3a8:	mov	w4, #0x821                 	// #2081
  40a3ac:	movk	w4, #0x49b4, lsl #16
  40a3b0:	add	w6, w18, w4
  40a3b4:	ror	w30, w30, #20
  40a3b8:	add	w30, w1, w30
  40a3bc:	and	w5, w5, w30
  40a3c0:	eor	w4, w1, w30
  40a3c4:	eor	w5, w5, w2
  40a3c8:	add	w3, w5, w3
  40a3cc:	add	w8, w8, w3
  40a3d0:	mov	w3, #0x2562                	// #9570
  40a3d4:	movk	w3, #0xf61e, lsl #16
  40a3d8:	add	w5, w20, w3
  40a3dc:	mov	w3, #0xb340                	// #45888
  40a3e0:	ror	w8, w8, #15
  40a3e4:	add	w8, w30, w8
  40a3e8:	movk	w3, #0xc040, lsl #16
  40a3ec:	and	w4, w4, w8
  40a3f0:	eor	w4, w4, w1
  40a3f4:	add	w2, w4, w2
  40a3f8:	add	w4, w17, w3
  40a3fc:	add	w6, w6, w2
  40a400:	mov	w2, #0x5a51                	// #23121
  40a404:	movk	w2, #0x265e, lsl #16
  40a408:	add	w3, w14, w2
  40a40c:	ror	w6, w6, #10
  40a410:	add	w6, w8, w6
  40a414:	eor	w2, w8, w6
  40a418:	and	w2, w2, w30
  40a41c:	eor	w2, w2, w8
  40a420:	add	w1, w2, w1
  40a424:	add	w5, w5, w1
  40a428:	mov	w1, #0xc7aa                	// #51114
  40a42c:	movk	w1, #0xe9b6, lsl #16
  40a430:	add	w2, w26, w1
  40a434:	ror	w5, w5, #27
  40a438:	add	w5, w6, w5
  40a43c:	eor	w1, w6, w5
  40a440:	and	w1, w1, w8
  40a444:	eor	w1, w1, w6
  40a448:	add	w30, w1, w30
  40a44c:	mov	w1, #0x105d                	// #4189
  40a450:	add	w4, w4, w30
  40a454:	movk	w1, #0xd62f, lsl #16
  40a458:	add	w30, w23, w1
  40a45c:	ror	w4, w4, #23
  40a460:	add	w4, w5, w4
  40a464:	eor	w1, w5, w4
  40a468:	and	w1, w1, w6
  40a46c:	eor	w1, w1, w5
  40a470:	add	w8, w1, w8
  40a474:	mov	w1, #0x1453                	// #5203
  40a478:	add	w3, w3, w8
  40a47c:	movk	w1, #0x244, lsl #16
  40a480:	add	w1, w7, w1
  40a484:	ror	w3, w3, #18
  40a488:	add	w3, w4, w3
  40a48c:	eor	w8, w4, w3
  40a490:	and	w8, w8, w5
  40a494:	eor	w8, w8, w4
  40a498:	add	w6, w8, w6
  40a49c:	add	w2, w2, w6
  40a4a0:	mov	w6, #0xe681                	// #59009
  40a4a4:	movk	w6, #0xd8a1, lsl #16
  40a4a8:	add	w8, w18, w6
  40a4ac:	ror	w2, w2, #12
  40a4b0:	add	w2, w3, w2
  40a4b4:	eor	w6, w3, w2
  40a4b8:	and	w6, w6, w4
  40a4bc:	eor	w6, w6, w3
  40a4c0:	add	w5, w6, w5
  40a4c4:	add	w30, w30, w5
  40a4c8:	mov	w5, #0xfbc8                	// #64456
  40a4cc:	movk	w5, #0xe7d3, lsl #16
  40a4d0:	add	w6, w15, w5
  40a4d4:	ror	w30, w30, #27
  40a4d8:	add	w30, w2, w30
  40a4dc:	eor	w5, w2, w30
  40a4e0:	and	w5, w5, w3
  40a4e4:	eor	w5, w5, w2
  40a4e8:	add	w4, w5, w4
  40a4ec:	add	w1, w1, w4
  40a4f0:	mov	w4, #0xcde6                	// #52710
  40a4f4:	movk	w4, #0x21e1, lsl #16
  40a4f8:	add	w5, w9, w4
  40a4fc:	ror	w1, w1, #23
  40a500:	add	w1, w30, w1
  40a504:	eor	w4, w30, w1
  40a508:	and	w4, w4, w2
  40a50c:	eor	w4, w4, w30
  40a510:	add	w3, w4, w3
  40a514:	add	w8, w8, w3
  40a518:	mov	w3, #0x7d6                 	// #2006
  40a51c:	movk	w3, #0xc337, lsl #16
  40a520:	add	w4, w24, w3
  40a524:	ror	w8, w8, #18
  40a528:	add	w8, w1, w8
  40a52c:	eor	w3, w1, w8
  40a530:	and	w3, w3, w30
  40a534:	eor	w3, w3, w1
  40a538:	add	w2, w3, w2
  40a53c:	mov	w3, #0xd87                 	// #3463
  40a540:	add	w6, w6, w2
  40a544:	movk	w3, #0xf4d5, lsl #16
  40a548:	add	w3, w21, w3
  40a54c:	ror	w6, w6, #12
  40a550:	add	w6, w8, w6
  40a554:	eor	w2, w8, w6
  40a558:	and	w2, w2, w1
  40a55c:	eor	w2, w2, w8
  40a560:	add	w30, w2, w30
  40a564:	add	w5, w5, w30
  40a568:	mov	w30, #0x14ed                	// #5357
  40a56c:	movk	w30, #0x455a, lsl #16
  40a570:	add	w30, w19, w30
  40a574:	ror	w5, w5, #27
  40a578:	add	w5, w6, w5
  40a57c:	eor	w2, w6, w5
  40a580:	and	w2, w2, w8
  40a584:	eor	w2, w2, w6
  40a588:	add	w1, w2, w1
  40a58c:	add	w4, w4, w1
  40a590:	mov	w1, #0xe905                	// #59653
  40a594:	movk	w1, #0xa9e3, lsl #16
  40a598:	add	w1, w16, w1
  40a59c:	ror	w4, w4, #23
  40a5a0:	add	w4, w5, w4
  40a5a4:	eor	w2, w5, w4
  40a5a8:	and	w2, w2, w6
  40a5ac:	eor	w2, w2, w5
  40a5b0:	add	w8, w2, w8
  40a5b4:	add	w3, w3, w8
  40a5b8:	mov	w8, #0xa3f8                	// #41976
  40a5bc:	movk	w8, #0xfcef, lsl #16
  40a5c0:	add	w8, w13, w8
  40a5c4:	ror	w3, w3, #18
  40a5c8:	add	w3, w4, w3
  40a5cc:	eor	w2, w4, w3
  40a5d0:	and	w2, w2, w5
  40a5d4:	eor	w2, w2, w4
  40a5d8:	add	w2, w2, w6
  40a5dc:	add	w2, w30, w2
  40a5e0:	mov	w30, #0x2d9                 	// #729
  40a5e4:	movk	w30, #0x676f, lsl #16
  40a5e8:	add	w30, w25, w30
  40a5ec:	ror	w2, w2, #12
  40a5f0:	add	w2, w3, w2
  40a5f4:	eor	w6, w3, w2
  40a5f8:	and	w6, w6, w4
  40a5fc:	eor	w6, w6, w3
  40a600:	add	w5, w6, w5
  40a604:	mov	w6, #0x4c8a                	// #19594
  40a608:	add	w1, w1, w5
  40a60c:	movk	w6, #0x8d2a, lsl #16
  40a610:	add	w6, w22, w6
  40a614:	ror	w1, w1, #27
  40a618:	add	w1, w2, w1
  40a61c:	eor	w5, w2, w1
  40a620:	and	w5, w5, w3
  40a624:	eor	w5, w5, w2
  40a628:	add	w4, w5, w4
  40a62c:	add	w8, w8, w4
  40a630:	sub	w4, w23, #0x5c, lsl #12
  40a634:	sub	w4, w4, #0x6be
  40a638:	ror	w8, w8, #23
  40a63c:	add	w8, w1, w8
  40a640:	eor	w5, w1, w8
  40a644:	and	w5, w5, w2
  40a648:	eor	w5, w5, w1
  40a64c:	add	w3, w5, w3
  40a650:	add	w30, w30, w3
  40a654:	ror	w30, w30, #18
  40a658:	add	w30, w8, w30
  40a65c:	eor	w5, w8, w30
  40a660:	and	w3, w5, w1
  40a664:	eor	w3, w3, w8
  40a668:	add	w2, w3, w2
  40a66c:	mov	w3, #0xf681                	// #63105
  40a670:	add	w6, w6, w2
  40a674:	movk	w3, #0x8771, lsl #16
  40a678:	add	w3, w19, w3
  40a67c:	ror	w6, w6, #12
  40a680:	add	w6, w30, w6
  40a684:	eor	w5, w5, w6
  40a688:	eor	w2, w30, w6
  40a68c:	add	w1, w5, w1
  40a690:	mov	w5, #0x6122                	// #24866
  40a694:	add	w4, w4, w1
  40a698:	movk	w5, #0x6d9d, lsl #16
  40a69c:	add	w5, w14, w5
  40a6a0:	ror	w4, w4, #28
  40a6a4:	add	w4, w6, w4
  40a6a8:	eor	w2, w2, w4
  40a6ac:	eor	w1, w6, w4
  40a6b0:	add	w8, w2, w8
  40a6b4:	mov	w2, #0x380c                	// #14348
  40a6b8:	add	w3, w3, w8
  40a6bc:	movk	w2, #0xfde5, lsl #16
  40a6c0:	add	w2, w24, w2
  40a6c4:	ror	w3, w3, #21
  40a6c8:	add	w3, w4, w3
  40a6cc:	eor	w1, w1, w3
  40a6d0:	eor	w8, w4, w3
  40a6d4:	add	w30, w1, w30
  40a6d8:	mov	w1, #0xea44                	// #59972
  40a6dc:	add	w5, w5, w30
  40a6e0:	movk	w1, #0xa4be, lsl #16
  40a6e4:	add	w1, w20, w1
  40a6e8:	ror	w5, w5, #16
  40a6ec:	add	w5, w3, w5
  40a6f0:	eor	w8, w8, w5
  40a6f4:	eor	w30, w3, w5
  40a6f8:	add	w6, w8, w6
  40a6fc:	mov	w8, #0xcfa9                	// #53161
  40a700:	add	w2, w2, w6
  40a704:	movk	w8, #0x4bde, lsl #16
  40a708:	add	w8, w15, w8
  40a70c:	ror	w2, w2, #9
  40a710:	add	w2, w5, w2
  40a714:	eor	w30, w30, w2
  40a718:	eor	w6, w5, w2
  40a71c:	add	w4, w30, w4
  40a720:	mov	w30, #0x4b60                	// #19296
  40a724:	add	w1, w1, w4
  40a728:	movk	w30, #0xf6bb, lsl #16
  40a72c:	add	w30, w25, w30
  40a730:	ror	w1, w1, #28
  40a734:	add	w1, w2, w1
  40a738:	eor	w6, w6, w1
  40a73c:	eor	w4, w2, w1
  40a740:	add	w3, w6, w3
  40a744:	mov	w6, #0xbc70                	// #48240
  40a748:	add	w8, w8, w3
  40a74c:	movk	w6, #0xbebf, lsl #16
  40a750:	add	w6, w7, w6
  40a754:	sub	w7, w7, #0x100, lsl #12
  40a758:	sub	w7, w7, #0xb83
  40a75c:	ror	w8, w8, #21
  40a760:	add	w8, w1, w8
  40a764:	eor	w4, w4, w8
  40a768:	eor	w3, w1, w8
  40a76c:	add	w5, w4, w5
  40a770:	mov	w4, #0x7ec6                	// #32454
  40a774:	add	w30, w30, w5
  40a778:	movk	w4, #0x289b, lsl #16
  40a77c:	add	w4, w16, w4
  40a780:	ror	w30, w30, #16
  40a784:	add	w30, w8, w30
  40a788:	eor	w3, w3, w30
  40a78c:	eor	w5, w8, w30
  40a790:	add	w2, w3, w2
  40a794:	mov	w3, #0x27fa                	// #10234
  40a798:	add	w6, w6, w2
  40a79c:	movk	w3, #0xeaa1, lsl #16
  40a7a0:	add	w3, w26, w3
  40a7a4:	ror	w6, w6, #9
  40a7a8:	add	w6, w30, w6
  40a7ac:	eor	w5, w5, w6
  40a7b0:	eor	w2, w30, w6
  40a7b4:	add	w1, w5, w1
  40a7b8:	mov	w5, #0x3085                	// #12421
  40a7bc:	add	w4, w4, w1
  40a7c0:	movk	w5, #0xd4ef, lsl #16
  40a7c4:	add	w5, w21, w5
  40a7c8:	ror	w4, w4, #28
  40a7cc:	add	w4, w6, w4
  40a7d0:	eor	w2, w2, w4
  40a7d4:	eor	w1, w6, w4
  40a7d8:	add	w8, w2, w8
  40a7dc:	mov	w2, #0x1d05                	// #7429
  40a7e0:	add	w3, w3, w8
  40a7e4:	movk	w2, #0x488, lsl #16
  40a7e8:	add	w2, w17, w2
  40a7ec:	ror	w3, w3, #21
  40a7f0:	add	w3, w4, w3
  40a7f4:	eor	w1, w1, w3
  40a7f8:	eor	w8, w4, w3
  40a7fc:	add	w30, w1, w30
  40a800:	mov	w1, #0xd039                	// #53305
  40a804:	add	w5, w5, w30
  40a808:	movk	w1, #0xd9d4, lsl #16
  40a80c:	add	w1, w9, w1
  40a810:	ror	w5, w5, #16
  40a814:	add	w5, w3, w5
  40a818:	eor	w8, w8, w5
  40a81c:	eor	w30, w3, w5
  40a820:	add	w6, w8, w6
  40a824:	mov	w8, #0x99e5                	// #39397
  40a828:	add	w2, w2, w6
  40a82c:	movk	w8, #0xe6db, lsl #16
  40a830:	add	w8, w22, w8
  40a834:	ror	w2, w2, #9
  40a838:	add	w2, w5, w2
  40a83c:	eor	w30, w30, w2
  40a840:	eor	w6, w5, w2
  40a844:	add	w4, w30, w4
  40a848:	mov	w30, #0x7cf8                	// #31992
  40a84c:	add	w1, w1, w4
  40a850:	movk	w30, #0x1fa2, lsl #16
  40a854:	add	w30, w18, w30
  40a858:	ror	w1, w1, #28
  40a85c:	add	w1, w2, w1
  40a860:	eor	w6, w6, w1
  40a864:	eor	w4, w2, w1
  40a868:	add	w3, w6, w3
  40a86c:	mov	w6, #0x5665                	// #22117
  40a870:	add	w8, w8, w3
  40a874:	movk	w6, #0xc4ac, lsl #16
  40a878:	add	w6, w13, w6
  40a87c:	ror	w8, w8, #21
  40a880:	add	w8, w1, w8
  40a884:	eor	w4, w4, w8
  40a888:	eor	w3, w1, w8
  40a88c:	add	w5, w4, w5
  40a890:	mov	w4, #0x2244                	// #8772
  40a894:	add	w30, w30, w5
  40a898:	movk	w4, #0xf429, lsl #16
  40a89c:	add	w26, w26, w4
  40a8a0:	mov	w4, #0xff97                	// #65431
  40a8a4:	movk	w4, #0x432a, lsl #16
  40a8a8:	ror	w30, w30, #16
  40a8ac:	add	w30, w8, w30
  40a8b0:	add	w25, w25, w4
  40a8b4:	eor	w3, w3, w30
  40a8b8:	mov	w4, #0x23a7                	// #9127
  40a8bc:	add	w2, w3, w2
  40a8c0:	movk	w4, #0xab94, lsl #16
  40a8c4:	add	w6, w6, w2
  40a8c8:	mov	w2, #0xa039                	// #41017
  40a8cc:	movk	w2, #0xfc93, lsl #16
  40a8d0:	add	w23, w23, w2
  40a8d4:	mov	w2, #0x59c3                	// #22979
  40a8d8:	ror	w6, w6, #9
  40a8dc:	add	w6, w30, w6
  40a8e0:	movk	w2, #0x655b, lsl #16
  40a8e4:	add	w22, w22, w2
  40a8e8:	orn	w2, w6, w8
  40a8ec:	eor	w2, w2, w30
  40a8f0:	add	w24, w24, w4
  40a8f4:	add	w1, w2, w1
  40a8f8:	mov	w3, #0xcc92                	// #52370
  40a8fc:	add	w26, w26, w1
  40a900:	mov	w1, #0x7e4f                	// #32335
  40a904:	movk	w1, #0x6fa8, lsl #16
  40a908:	add	w19, w19, w1
  40a90c:	mov	w1, #0xe6e0                	// #59104
  40a910:	ror	w26, w26, #26
  40a914:	add	w26, w6, w26
  40a918:	movk	w1, #0xfe2c, lsl #16
  40a91c:	orn	w4, w26, w30
  40a920:	add	w18, w18, w1
  40a924:	eor	w4, w4, w6
  40a928:	mov	w1, #0x4314                	// #17172
  40a92c:	movk	w1, #0xa301, lsl #16
  40a930:	add	w4, w4, w8
  40a934:	add	w17, w17, w1
  40a938:	add	w4, w25, w4
  40a93c:	mov	w1, #0x11a1                	// #4513
  40a940:	movk	w3, #0x8f0c, lsl #16
  40a944:	movk	w1, #0x4e08, lsl #16
  40a948:	ror	w4, w4, #22
  40a94c:	add	w16, w16, w1
  40a950:	mov	w1, #0x7e82                	// #32386
  40a954:	add	w4, w26, w4
  40a958:	movk	w1, #0xf753, lsl #16
  40a95c:	add	w15, w15, w1
  40a960:	orn	w1, w4, w6
  40a964:	eor	w1, w1, w26
  40a968:	add	w21, w21, w3
  40a96c:	add	w30, w1, w30
  40a970:	mov	w1, #0xd2bb                	// #53947
  40a974:	add	w24, w24, w30
  40a978:	movk	w1, #0x2ad7, lsl #16
  40a97c:	add	w13, w13, w1
  40a980:	mov	w1, #0xd391                	// #54161
  40a984:	movk	w1, #0xeb86, lsl #16
  40a988:	ror	w24, w24, #17
  40a98c:	add	w24, w4, w24
  40a990:	add	w9, w9, w1
  40a994:	orn	w1, w24, w26
  40a998:	mov	w2, #0x5dd1                	// #24017
  40a99c:	eor	w1, w1, w4
  40a9a0:	movk	w2, #0x8584, lsl #16
  40a9a4:	add	w6, w1, w6
  40a9a8:	add	w20, w20, w2
  40a9ac:	add	w23, w23, w6
  40a9b0:	mov	w2, #0xf235                	// #62005
  40a9b4:	movk	w2, #0xbd3a, lsl #16
  40a9b8:	add	w14, w14, w2
  40a9bc:	ror	w23, w23, #11
  40a9c0:	add	w23, w24, w23
  40a9c4:	orn	w1, w23, w4
  40a9c8:	eor	w1, w1, w24
  40a9cc:	add	w26, w1, w26
  40a9d0:	add	w22, w22, w26
  40a9d4:	ror	w22, w22, #26
  40a9d8:	add	w22, w23, w22
  40a9dc:	orn	w25, w22, w24
  40a9e0:	eor	w25, w25, w23
  40a9e4:	add	w4, w25, w4
  40a9e8:	add	w21, w21, w4
  40a9ec:	ror	w21, w21, #22
  40a9f0:	add	w21, w22, w21
  40a9f4:	orn	w1, w21, w23
  40a9f8:	eor	w1, w1, w22
  40a9fc:	add	w24, w1, w24
  40aa00:	add	w7, w7, w24
  40aa04:	ror	w7, w7, #17
  40aa08:	add	w7, w21, w7
  40aa0c:	orn	w1, w7, w22
  40aa10:	eor	w1, w1, w21
  40aa14:	add	w23, w1, w23
  40aa18:	add	w20, w20, w23
  40aa1c:	ror	w20, w20, #11
  40aa20:	add	w20, w7, w20
  40aa24:	orn	w1, w20, w21
  40aa28:	eor	w1, w1, w7
  40aa2c:	add	w22, w1, w22
  40aa30:	add	w19, w19, w22
  40aa34:	ror	w19, w19, #26
  40aa38:	add	w19, w20, w19
  40aa3c:	orn	w1, w19, w7
  40aa40:	eor	w1, w1, w20
  40aa44:	add	w21, w1, w21
  40aa48:	add	w18, w18, w21
  40aa4c:	ror	w18, w18, #22
  40aa50:	add	w18, w19, w18
  40aa54:	orn	w1, w18, w20
  40aa58:	eor	w1, w1, w19
  40aa5c:	add	w7, w1, w7
  40aa60:	add	w17, w17, w7
  40aa64:	ror	w17, w17, #17
  40aa68:	add	w17, w18, w17
  40aa6c:	orn	w1, w17, w19
  40aa70:	eor	w1, w1, w18
  40aa74:	add	w20, w1, w20
  40aa78:	add	w16, w16, w20
  40aa7c:	ror	w16, w16, #11
  40aa80:	add	w16, w17, w16
  40aa84:	orn	w1, w16, w18
  40aa88:	eor	w1, w1, w17
  40aa8c:	add	w19, w1, w19
  40aa90:	add	w15, w15, w19
  40aa94:	ror	w15, w15, #26
  40aa98:	add	w15, w16, w15
  40aa9c:	orn	w1, w15, w17
  40aaa0:	add	w28, w28, w15
  40aaa4:	eor	w1, w1, w16
  40aaa8:	add	w18, w1, w18
  40aaac:	add	w14, w14, w18
  40aab0:	ror	w14, w14, #22
  40aab4:	add	w14, w15, w14
  40aab8:	orn	w1, w14, w16
  40aabc:	add	w12, w12, w14
  40aac0:	eor	w1, w1, w15
  40aac4:	add	w17, w1, w17
  40aac8:	add	w13, w13, w17
  40aacc:	ror	w13, w13, #17
  40aad0:	add	w13, w14, w13
  40aad4:	orn	w15, w13, w15
  40aad8:	add	w11, w11, w13
  40aadc:	eor	w15, w15, w14
  40aae0:	add	w15, w15, w16
  40aae4:	add	w9, w9, w15
  40aae8:	ror	w9, w9, #11
  40aaec:	add	w13, w13, w9
  40aaf0:	add	w10, w10, w13
  40aaf4:	b.hi	40a148 <ferror@plt+0x7308>  // b.pmore
  40aaf8:	ldp	x19, x20, [sp, #16]
  40aafc:	ldp	x21, x22, [sp, #32]
  40ab00:	ldp	x23, x24, [sp, #48]
  40ab04:	ldp	x25, x26, [sp, #64]
  40ab08:	ldr	x2, [sp, #104]
  40ab0c:	stp	w28, w10, [x2]
  40ab10:	stp	w11, w12, [x2, #8]
  40ab14:	ldp	x27, x28, [sp, #80]
  40ab18:	ldp	x29, x30, [sp], #112
  40ab1c:	ret
  40ab20:	stp	x29, x30, [sp, #-48]!
  40ab24:	mov	x6, #0x1e                  	// #30
  40ab28:	mov	x5, #0xe                   	// #14
  40ab2c:	mov	x29, sp
  40ab30:	stp	x19, x20, [sp, #16]
  40ab34:	mov	x19, x0
  40ab38:	ldr	w0, [x0, #24]
  40ab3c:	stp	x21, x22, [sp, #32]
  40ab40:	mov	x9, #0x80                  	// #128
  40ab44:	cmp	w0, #0x38
  40ab48:	csel	x5, x5, x6, cc  // cc = lo, ul, last
  40ab4c:	mov	x21, #0x40                  	// #64
  40ab50:	ldp	w3, w6, [x19, #16]
  40ab54:	csel	x21, x21, x9, cc  // cc = lo, ul, last
  40ab58:	mov	x2, #0x38                  	// #56
  40ab5c:	mov	x8, #0x78                  	// #120
  40ab60:	mov	x4, #0xf                   	// #15
  40ab64:	csel	x2, x2, x8, cc  // cc = lo, ul, last
  40ab68:	mov	x7, #0x1f                  	// #31
  40ab6c:	csel	x4, x4, x7, cc  // cc = lo, ul, last
  40ab70:	adds	w3, w3, w0
  40ab74:	str	w3, [x19, #16]
  40ab78:	mov	x20, x1
  40ab7c:	b.cc	40ab88 <ferror@plt+0x7d48>  // b.lo, b.ul, b.last
  40ab80:	add	w6, w6, #0x1
  40ab84:	str	w6, [x19, #20]
  40ab88:	add	x5, x19, x5, lsl #2
  40ab8c:	add	x4, x19, x4, lsl #2
  40ab90:	lsl	w1, w3, #3
  40ab94:	extr	w3, w6, w3, #29
  40ab98:	add	x22, x19, #0x1c
  40ab9c:	mov	w0, w0
  40aba0:	str	w1, [x5, #28]
  40aba4:	sub	x2, x2, x0
  40aba8:	str	w3, [x4, #28]
  40abac:	add	x0, x22, x0
  40abb0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40abb4:	add	x1, x1, #0x9c0
  40abb8:	bl	402720 <memcpy@plt>
  40abbc:	mov	x2, x19
  40abc0:	mov	x1, x21
  40abc4:	mov	x0, x22
  40abc8:	bl	40a0f0 <ferror@plt+0x72b0>
  40abcc:	mov	x1, x20
  40abd0:	mov	x0, x19
  40abd4:	ldp	x19, x20, [sp, #16]
  40abd8:	ldp	x21, x22, [sp, #32]
  40abdc:	ldp	x29, x30, [sp], #48
  40abe0:	b	40a0c0 <ferror@plt+0x7280>
  40abe4:	nop
  40abe8:	stp	x29, x30, [sp, #-64]!
  40abec:	mov	x29, sp
  40abf0:	stp	x19, x20, [sp, #16]
  40abf4:	mov	x19, x0
  40abf8:	ldr	w0, [x2, #24]
  40abfc:	stp	x21, x22, [sp, #32]
  40ac00:	mov	x21, x2
  40ac04:	mov	x22, x1
  40ac08:	cbnz	w0, 40ace8 <ferror@plt+0x7ea8>
  40ac0c:	cmp	x22, #0x3f
  40ac10:	b.ls	40acd4 <ferror@plt+0x7e94>  // b.plast
  40ac14:	tst	x19, #0x3
  40ac18:	b.eq	40acbc <ferror@plt+0x7e7c>  // b.none
  40ac1c:	stp	x23, x24, [sp, #48]
  40ac20:	cmp	x22, #0x40
  40ac24:	add	x20, x21, #0x1c
  40ac28:	b.eq	40ad98 <ferror@plt+0x7f58>  // b.none
  40ac2c:	sub	x24, x22, #0x41
  40ac30:	lsr	x24, x24, #6
  40ac34:	add	x23, x24, #0x1
  40ac38:	add	x23, x19, x23, lsl #6
  40ac3c:	nop
  40ac40:	ldp	x0, x1, [x19]
  40ac44:	stp	x0, x1, [x20]
  40ac48:	mov	x2, x21
  40ac4c:	ldp	x0, x1, [x19, #16]
  40ac50:	stp	x0, x1, [x20, #16]
  40ac54:	ldp	x4, x5, [x19, #32]
  40ac58:	stp	x4, x5, [x20, #32]
  40ac5c:	mov	x1, #0x40                  	// #64
  40ac60:	ldp	x4, x5, [x19, #48]
  40ac64:	stp	x4, x5, [x20, #48]
  40ac68:	add	x19, x19, x1
  40ac6c:	mov	x0, x20
  40ac70:	bl	40a0f0 <ferror@plt+0x72b0>
  40ac74:	cmp	x19, x23
  40ac78:	b.ne	40ac40 <ferror@plt+0x7e00>  // b.any
  40ac7c:	sub	x22, x22, #0x40
  40ac80:	sub	x22, x22, x24, lsl #6
  40ac84:	ldr	w19, [x21, #24]
  40ac88:	mov	x1, x23
  40ac8c:	mov	x2, x22
  40ac90:	add	x0, x20, x19
  40ac94:	add	x19, x19, x22
  40ac98:	bl	402720 <memcpy@plt>
  40ac9c:	cmp	x19, #0x3f
  40aca0:	b.hi	40ad38 <ferror@plt+0x7ef8>  // b.pmore
  40aca4:	ldp	x23, x24, [sp, #48]
  40aca8:	str	w19, [x21, #24]
  40acac:	ldp	x19, x20, [sp, #16]
  40acb0:	ldp	x21, x22, [sp, #32]
  40acb4:	ldp	x29, x30, [sp], #64
  40acb8:	ret
  40acbc:	and	x1, x22, #0xffffffffffffffc0
  40acc0:	mov	x0, x19
  40acc4:	and	x22, x22, #0x3f
  40acc8:	add	x19, x19, x1
  40accc:	mov	x2, x21
  40acd0:	bl	40a0f0 <ferror@plt+0x72b0>
  40acd4:	cbnz	x22, 40ada0 <ferror@plt+0x7f60>
  40acd8:	ldp	x19, x20, [sp, #16]
  40acdc:	ldp	x21, x22, [sp, #32]
  40ace0:	ldp	x29, x30, [sp], #64
  40ace4:	ret
  40ace8:	mov	w20, w0
  40acec:	stp	x23, x24, [sp, #48]
  40acf0:	mov	x23, #0x80                  	// #128
  40acf4:	sub	x23, x23, x20
  40acf8:	add	x24, x2, #0x1c
  40acfc:	cmp	x23, x1
  40ad00:	add	x0, x24, x20
  40ad04:	csel	x23, x23, x1, ls  // ls = plast
  40ad08:	mov	x1, x19
  40ad0c:	mov	x2, x23
  40ad10:	bl	402720 <memcpy@plt>
  40ad14:	ldr	w1, [x21, #24]
  40ad18:	add	w1, w1, w23
  40ad1c:	str	w1, [x21, #24]
  40ad20:	cmp	w1, #0x40
  40ad24:	b.hi	40ad60 <ferror@plt+0x7f20>  // b.pmore
  40ad28:	add	x19, x19, x23
  40ad2c:	sub	x22, x22, x23
  40ad30:	ldp	x23, x24, [sp, #48]
  40ad34:	b	40ac0c <ferror@plt+0x7dcc>
  40ad38:	mov	x2, x21
  40ad3c:	mov	x0, x20
  40ad40:	sub	x19, x19, #0x40
  40ad44:	mov	x1, #0x40                  	// #64
  40ad48:	bl	40a0f0 <ferror@plt+0x72b0>
  40ad4c:	mov	x0, x20
  40ad50:	mov	x2, x19
  40ad54:	add	x1, x21, #0x5c
  40ad58:	bl	402720 <memcpy@plt>
  40ad5c:	b	40aca4 <ferror@plt+0x7e64>
  40ad60:	mov	x2, x21
  40ad64:	mov	x0, x24
  40ad68:	and	x1, x1, #0xffffffc0
  40ad6c:	bl	40a0f0 <ferror@plt+0x72b0>
  40ad70:	ldr	w2, [x21, #24]
  40ad74:	add	x0, x20, x23
  40ad78:	and	x1, x0, #0xffffffffffffffc0
  40ad7c:	mov	x0, x24
  40ad80:	and	w2, w2, #0x3f
  40ad84:	str	w2, [x21, #24]
  40ad88:	add	x1, x24, x1
  40ad8c:	and	x2, x2, #0x3f
  40ad90:	bl	402720 <memcpy@plt>
  40ad94:	b	40ad28 <ferror@plt+0x7ee8>
  40ad98:	mov	x23, x19
  40ad9c:	b	40ac84 <ferror@plt+0x7e44>
  40ada0:	add	x20, x21, #0x1c
  40ada4:	stp	x23, x24, [sp, #48]
  40ada8:	mov	x23, x19
  40adac:	b	40ac84 <ferror@plt+0x7e44>
  40adb0:	stp	x29, x30, [sp, #-192]!
  40adb4:	mov	x4, #0x2301                	// #8961
  40adb8:	mov	x3, #0xdcfe                	// #56574
  40adbc:	movk	x4, #0x6745, lsl #16
  40adc0:	movk	x3, #0x98ba, lsl #16
  40adc4:	mov	x29, sp
  40adc8:	movk	x4, #0xab89, lsl #32
  40adcc:	movk	x3, #0x5476, lsl #32
  40add0:	movk	x4, #0xefcd, lsl #48
  40add4:	movk	x3, #0x1032, lsl #48
  40add8:	str	x19, [sp, #16]
  40addc:	mov	x19, x2
  40ade0:	add	x2, sp, #0x20
  40ade4:	stp	x4, x3, [sp, #32]
  40ade8:	str	xzr, [sp, #48]
  40adec:	str	wzr, [sp, #56]
  40adf0:	bl	40abe8 <ferror@plt+0x7da8>
  40adf4:	mov	x1, x19
  40adf8:	add	x0, sp, #0x20
  40adfc:	bl	40ab20 <ferror@plt+0x7ce0>
  40ae00:	ldr	x19, [sp, #16]
  40ae04:	ldp	x29, x30, [sp], #192
  40ae08:	ret
  40ae0c:	nop
  40ae10:	stp	x29, x30, [sp, #-224]!
  40ae14:	mov	x29, sp
  40ae18:	stp	x19, x20, [sp, #16]
  40ae1c:	mov	x20, x0
  40ae20:	mov	x0, #0x8048                	// #32840
  40ae24:	str	x23, [sp, #48]
  40ae28:	mov	x23, x1
  40ae2c:	bl	4028e0 <malloc@plt>
  40ae30:	cbz	x0, 40af20 <ferror@plt+0x80e0>
  40ae34:	mov	x1, #0x2301                	// #8961
  40ae38:	stp	x21, x22, [sp, #32]
  40ae3c:	mov	x21, x0
  40ae40:	mov	x0, #0xdcfe                	// #56574
  40ae44:	movk	x1, #0x6745, lsl #16
  40ae48:	movk	x0, #0x98ba, lsl #16
  40ae4c:	movk	x1, #0xab89, lsl #32
  40ae50:	movk	x0, #0x5476, lsl #32
  40ae54:	movk	x1, #0xefcd, lsl #48
  40ae58:	movk	x0, #0x1032, lsl #48
  40ae5c:	mov	x22, #0x8000                	// #32768
  40ae60:	stp	x1, x0, [sp, #64]
  40ae64:	str	xzr, [sp, #80]
  40ae68:	str	wzr, [sp, #88]
  40ae6c:	mov	x19, #0x0                   	// #0
  40ae70:	b	40ae88 <ferror@plt+0x8048>
  40ae74:	bl	402af0 <fread_unlocked@plt>
  40ae78:	add	x19, x19, x0
  40ae7c:	cmp	x19, #0x8, lsl #12
  40ae80:	b.eq	40aed0 <ferror@plt+0x8090>  // b.none
  40ae84:	cbz	x0, 40aee4 <ferror@plt+0x80a4>
  40ae88:	ldr	w4, [x20]
  40ae8c:	sub	x2, x22, x19
  40ae90:	add	x0, x21, x19
  40ae94:	mov	x3, x20
  40ae98:	mov	x1, #0x1                   	// #1
  40ae9c:	tbz	w4, #4, 40ae74 <ferror@plt+0x8034>
  40aea0:	cbnz	x19, 40af0c <ferror@plt+0x80cc>
  40aea4:	mov	x1, x23
  40aea8:	add	x0, sp, #0x40
  40aeac:	bl	40ab20 <ferror@plt+0x7ce0>
  40aeb0:	mov	x0, x21
  40aeb4:	bl	402ba0 <free@plt>
  40aeb8:	ldp	x21, x22, [sp, #32]
  40aebc:	mov	w0, #0x0                   	// #0
  40aec0:	ldp	x19, x20, [sp, #16]
  40aec4:	ldr	x23, [sp, #48]
  40aec8:	ldp	x29, x30, [sp], #224
  40aecc:	ret
  40aed0:	mov	x1, x19
  40aed4:	add	x2, sp, #0x40
  40aed8:	mov	x0, x21
  40aedc:	bl	40a0f0 <ferror@plt+0x72b0>
  40aee0:	b	40ae6c <ferror@plt+0x802c>
  40aee4:	ldr	w0, [x20]
  40aee8:	tbz	w0, #5, 40aea0 <ferror@plt+0x8060>
  40aeec:	mov	x0, x21
  40aef0:	bl	402ba0 <free@plt>
  40aef4:	mov	w0, #0x1                   	// #1
  40aef8:	ldp	x19, x20, [sp, #16]
  40aefc:	ldp	x21, x22, [sp, #32]
  40af00:	ldr	x23, [sp, #48]
  40af04:	ldp	x29, x30, [sp], #224
  40af08:	ret
  40af0c:	mov	x1, x19
  40af10:	add	x2, sp, #0x40
  40af14:	mov	x0, x21
  40af18:	bl	40abe8 <ferror@plt+0x7da8>
  40af1c:	b	40aea4 <ferror@plt+0x8064>
  40af20:	mov	w0, #0x1                   	// #1
  40af24:	b	40aec0 <ferror@plt+0x8080>
  40af28:	b	402ab0 <posix_fadvise@plt>
  40af2c:	nop
  40af30:	cbz	x0, 40af60 <ferror@plt+0x8120>
  40af34:	stp	x29, x30, [sp, #-32]!
  40af38:	mov	x29, sp
  40af3c:	str	x19, [sp, #16]
  40af40:	mov	w19, w1
  40af44:	bl	402880 <fileno@plt>
  40af48:	mov	w3, w19
  40af4c:	mov	x2, #0x0                   	// #0
  40af50:	ldr	x19, [sp, #16]
  40af54:	mov	x1, #0x0                   	// #0
  40af58:	ldp	x29, x30, [sp], #32
  40af5c:	b	402ab0 <posix_fadvise@plt>
  40af60:	ret
  40af64:	nop
  40af68:	ldr	x2, [x0]
  40af6c:	mov	x5, x0
  40af70:	ldrb	w1, [x2]
  40af74:	cbz	w1, 40b01c <ferror@plt+0x81dc>
  40af78:	mov	w4, #0x0                   	// #0
  40af7c:	mov	x0, #0x0                   	// #0
  40af80:	cbz	w4, 40afcc <ferror@plt+0x818c>
  40af84:	cmp	w1, #0x5a
  40af88:	b.hi	40afac <ferror@plt+0x816c>  // b.pmore
  40af8c:	cmp	w1, #0x41
  40af90:	mov	w4, #0x0                   	// #0
  40af94:	csel	x0, x0, xzr, cs  // cs = hs, nlast
  40af98:	add	x2, x2, #0x1
  40af9c:	str	x2, [x5]
  40afa0:	ldrb	w1, [x2]
  40afa4:	cbnz	w1, 40af80 <ferror@plt+0x8140>
  40afa8:	ret
  40afac:	sub	w3, w1, #0x61
  40afb0:	mov	w4, #0x0                   	// #0
  40afb4:	and	w3, w3, #0xff
  40afb8:	cmp	w3, #0x19
  40afbc:	b.ls	40af98 <ferror@plt+0x8158>  // b.plast
  40afc0:	cmp	w1, #0x7e
  40afc4:	csel	x0, x0, xzr, eq  // eq = none
  40afc8:	b	40af98 <ferror@plt+0x8158>
  40afcc:	cmp	w1, #0x2e
  40afd0:	b.eq	40b00c <ferror@plt+0x81cc>  // b.none
  40afd4:	cmp	w1, #0x5a
  40afd8:	b.hi	40aff8 <ferror@plt+0x81b8>  // b.pmore
  40afdc:	cmp	w1, #0x40
  40afe0:	b.hi	40af98 <ferror@plt+0x8158>  // b.pmore
  40afe4:	sub	w1, w1, #0x30
  40afe8:	and	w1, w1, #0xff
  40afec:	cmp	w1, #0xa
  40aff0:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  40aff4:	b	40af98 <ferror@plt+0x8158>
  40aff8:	sub	w3, w1, #0x61
  40affc:	and	w3, w3, #0xff
  40b000:	cmp	w3, #0x19
  40b004:	b.hi	40afc0 <ferror@plt+0x8180>  // b.pmore
  40b008:	b	40af98 <ferror@plt+0x8158>
  40b00c:	cmp	x0, #0x0
  40b010:	mov	w4, #0x1                   	// #1
  40b014:	csel	x0, x0, x2, ne  // ne = any
  40b018:	b	40af98 <ferror@plt+0x8158>
  40b01c:	mov	x0, #0x0                   	// #0
  40b020:	ret
  40b024:	nop
  40b028:	stp	x29, x30, [sp, #-80]!
  40b02c:	mov	x29, sp
  40b030:	stp	x19, x20, [sp, #16]
  40b034:	mov	x19, x1
  40b038:	stp	x21, x22, [sp, #32]
  40b03c:	mov	x22, x0
  40b040:	bl	402b50 <strcmp@plt>
  40b044:	mov	w20, w0
  40b048:	cbz	w0, 40b084 <ferror@plt+0x8244>
  40b04c:	ldrb	w1, [x22]
  40b050:	cbz	w1, 40b240 <ferror@plt+0x8400>
  40b054:	ldrb	w0, [x19]
  40b058:	cbz	w0, 40b080 <ferror@plt+0x8240>
  40b05c:	cmp	w1, #0x2e
  40b060:	b.ne	40b06c <ferror@plt+0x822c>  // b.any
  40b064:	ldrb	w2, [x22, #1]
  40b068:	cbz	w2, 40b240 <ferror@plt+0x8400>
  40b06c:	ldrb	w2, [x19]
  40b070:	cmp	w2, #0x2e
  40b074:	b.ne	40b098 <ferror@plt+0x8258>  // b.any
  40b078:	ldrb	w2, [x19, #1]
  40b07c:	cbnz	w2, 40b098 <ferror@plt+0x8258>
  40b080:	mov	w20, #0x1                   	// #1
  40b084:	mov	w0, w20
  40b088:	ldp	x19, x20, [sp, #16]
  40b08c:	ldp	x21, x22, [sp, #32]
  40b090:	ldp	x29, x30, [sp], #80
  40b094:	ret
  40b098:	ldrb	w3, [x22]
  40b09c:	mov	w2, #0x2e                  	// #46
  40b0a0:	cmp	w2, w3
  40b0a4:	b.ne	40b0bc <ferror@plt+0x827c>  // b.any
  40b0a8:	ldrb	w3, [x22, #1]
  40b0ac:	cmp	w2, w3
  40b0b0:	b.ne	40b0bc <ferror@plt+0x827c>  // b.any
  40b0b4:	ldrb	w2, [x22, #2]
  40b0b8:	cbz	w2, 40b240 <ferror@plt+0x8400>
  40b0bc:	ldrb	w3, [x19]
  40b0c0:	mov	w2, #0x2e                  	// #46
  40b0c4:	cmp	w2, w3
  40b0c8:	b.eq	40b204 <ferror@plt+0x83c4>  // b.none
  40b0cc:	cmp	w1, #0x2e
  40b0d0:	cset	w2, eq  // eq = none
  40b0d4:	cmp	w0, #0x2e
  40b0d8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40b0dc:	b.ne	40b240 <ferror@plt+0x8400>  // b.any
  40b0e0:	cmp	w0, #0x2e
  40b0e4:	cset	w0, eq  // eq = none
  40b0e8:	cmp	w1, #0x2e
  40b0ec:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40b0f0:	b.ne	40b080 <ferror@plt+0x8240>  // b.any
  40b0f4:	str	x23, [sp, #48]
  40b0f8:	cmp	w0, #0x0
  40b0fc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40b100:	b.ne	40b384 <ferror@plt+0x8544>  // b.any
  40b104:	add	x0, sp, #0x40
  40b108:	stp	x22, x19, [sp, #64]
  40b10c:	bl	40af68 <ferror@plt+0x8128>
  40b110:	mov	x21, x0
  40b114:	add	x0, sp, #0x48
  40b118:	bl	40af68 <ferror@plt+0x8128>
  40b11c:	cbz	x21, 40b348 <ferror@plt+0x8508>
  40b120:	sub	x21, x21, x22
  40b124:	cbz	x0, 40b39c <ferror@plt+0x855c>
  40b128:	sub	x23, x0, x19
  40b12c:	cmp	x21, x23
  40b130:	b.eq	40b360 <ferror@plt+0x8520>  // b.none
  40b134:	mov	x3, #0x0                   	// #0
  40b138:	mov	x1, #0x0                   	// #0
  40b13c:	cmp	x21, x1
  40b140:	ccmp	x23, x3, #0x2, ls  // ls = plast
  40b144:	b.ls	40b394 <ferror@plt+0x8554>  // b.plast
  40b148:	sub	x6, x3, x1
  40b14c:	cmp	x21, x1
  40b150:	b.ls	40b1b4 <ferror@plt+0x8374>  // b.plast
  40b154:	ldrb	w0, [x22, x1]
  40b158:	sub	w2, w0, #0x30
  40b15c:	cmp	w2, #0x9
  40b160:	b.ls	40b1b4 <ferror@plt+0x8374>  // b.plast
  40b164:	mov	w2, w0
  40b168:	cmp	w0, #0x5a
  40b16c:	b.hi	40b304 <ferror@plt+0x84c4>  // b.pmore
  40b170:	cmp	w0, #0x40
  40b174:	b.hi	40b21c <ferror@plt+0x83dc>  // b.pmore
  40b178:	add	w2, w0, #0x100
  40b17c:	add	x0, x1, x6
  40b180:	cmp	x23, x0
  40b184:	b.eq	40b330 <ferror@plt+0x84f0>  // b.none
  40b188:	ldrb	w4, [x19, x3]
  40b18c:	sub	w0, w4, #0x30
  40b190:	cmp	w0, #0x9
  40b194:	mov	w0, #0x0                   	// #0
  40b198:	b.hi	40b1e8 <ferror@plt+0x83a8>  // b.pmore
  40b19c:	cmp	w0, w2
  40b1a0:	b.ne	40b32c <ferror@plt+0x84ec>  // b.any
  40b1a4:	add	x1, x1, #0x1
  40b1a8:	add	x3, x3, #0x1
  40b1ac:	cmp	x21, x1
  40b1b0:	b.hi	40b154 <ferror@plt+0x8314>  // b.pmore
  40b1b4:	ldrb	w4, [x19, x3]
  40b1b8:	cmp	x23, x3
  40b1bc:	b.ls	40b24c <ferror@plt+0x840c>  // b.plast
  40b1c0:	sub	w0, w4, #0x30
  40b1c4:	cmp	w0, #0x9
  40b1c8:	b.ls	40b24c <ferror@plt+0x840c>  // b.plast
  40b1cc:	cmp	x21, x1
  40b1d0:	b.eq	40b324 <ferror@plt+0x84e4>  // b.none
  40b1d4:	ldrb	w0, [x22, x1]
  40b1d8:	mov	w2, #0x0                   	// #0
  40b1dc:	sub	w5, w0, #0x30
  40b1e0:	cmp	w5, #0x9
  40b1e4:	b.hi	40b164 <ferror@plt+0x8324>  // b.pmore
  40b1e8:	cmp	w4, #0x5a
  40b1ec:	mov	w0, w4
  40b1f0:	b.hi	40b2e0 <ferror@plt+0x84a0>  // b.pmore
  40b1f4:	cmp	w4, #0x40
  40b1f8:	b.hi	40b19c <ferror@plt+0x835c>  // b.pmore
  40b1fc:	add	w0, w4, #0x100
  40b200:	b	40b19c <ferror@plt+0x835c>
  40b204:	ldrb	w3, [x19, #1]
  40b208:	cmp	w2, w3
  40b20c:	b.ne	40b0cc <ferror@plt+0x828c>  // b.any
  40b210:	ldrb	w2, [x19, #2]
  40b214:	cbz	w2, 40b080 <ferror@plt+0x8240>
  40b218:	b	40b0cc <ferror@plt+0x828c>
  40b21c:	add	x4, x1, x6
  40b220:	mov	w0, #0x0                   	// #0
  40b224:	cmp	x23, x4
  40b228:	b.ne	40b188 <ferror@plt+0x8348>  // b.any
  40b22c:	b	40b19c <ferror@plt+0x835c>
  40b230:	sub	w4, w4, #0x30
  40b234:	cmp	w4, #0x9
  40b238:	b.hi	40b13c <ferror@plt+0x82fc>  // b.pmore
  40b23c:	ldr	x23, [sp, #48]
  40b240:	mov	w20, #0xffffffff            	// #-1
  40b244:	b	40b084 <ferror@plt+0x8244>
  40b248:	add	x1, x1, #0x1
  40b24c:	ldrb	w5, [x22, x1]
  40b250:	cmp	w5, #0x30
  40b254:	b.eq	40b248 <ferror@plt+0x8408>  // b.none
  40b258:	cmp	w4, #0x30
  40b25c:	b.ne	40b270 <ferror@plt+0x8430>  // b.any
  40b260:	add	x3, x3, #0x1
  40b264:	ldrb	w4, [x19, x3]
  40b268:	cmp	w4, #0x30
  40b26c:	b.eq	40b260 <ferror@plt+0x8420>  // b.none
  40b270:	sub	w0, w5, #0x30
  40b274:	cmp	w0, #0x9
  40b278:	b.hi	40b230 <ferror@plt+0x83f0>  // b.pmore
  40b27c:	sub	x0, x3, x1
  40b280:	mov	w6, #0x0                   	// #0
  40b284:	add	x2, x19, x0
  40b288:	mov	x0, x1
  40b28c:	add	x0, x0, #0x1
  40b290:	sub	w8, w5, w4
  40b294:	sub	w4, w4, #0x30
  40b298:	sub	x7, x0, x1
  40b29c:	cmp	w4, #0x9
  40b2a0:	b.hi	40b340 <ferror@plt+0x8500>  // b.pmore
  40b2a4:	ldrb	w5, [x22, x0]
  40b2a8:	cmp	w6, #0x0
  40b2ac:	csel	w6, w8, w6, eq  // eq = none
  40b2b0:	ldrb	w4, [x2, x0]
  40b2b4:	sub	w8, w5, #0x30
  40b2b8:	add	x7, x7, x3
  40b2bc:	cmp	w8, #0x9
  40b2c0:	b.ls	40b28c <ferror@plt+0x844c>  // b.plast
  40b2c4:	sub	w4, w4, #0x30
  40b2c8:	cmp	w4, #0x9
  40b2cc:	b.ls	40b23c <ferror@plt+0x83fc>  // b.plast
  40b2d0:	cbnz	w6, 40b390 <ferror@plt+0x8550>
  40b2d4:	mov	x1, x0
  40b2d8:	mov	x3, x7
  40b2dc:	b	40b13c <ferror@plt+0x82fc>
  40b2e0:	sub	w5, w4, #0x61
  40b2e4:	and	w5, w5, #0xff
  40b2e8:	cmp	w5, #0x19
  40b2ec:	b.ls	40b19c <ferror@plt+0x835c>  // b.plast
  40b2f0:	cmp	w4, #0x7e
  40b2f4:	mov	w0, #0xffffffff            	// #-1
  40b2f8:	b.eq	40b19c <ferror@plt+0x835c>  // b.none
  40b2fc:	add	w0, w4, #0x100
  40b300:	b	40b19c <ferror@plt+0x835c>
  40b304:	sub	w4, w0, #0x61
  40b308:	and	w4, w4, #0xff
  40b30c:	cmp	w4, #0x19
  40b310:	b.ls	40b21c <ferror@plt+0x83dc>  // b.plast
  40b314:	cmp	w0, #0x7e
  40b318:	mov	w2, #0xffffffff            	// #-1
  40b31c:	b.eq	40b17c <ferror@plt+0x833c>  // b.none
  40b320:	b	40b178 <ferror@plt+0x8338>
  40b324:	mov	w2, #0x0                   	// #0
  40b328:	b	40b1e8 <ferror@plt+0x83a8>
  40b32c:	sub	w2, w2, w0
  40b330:	cmp	w2, #0x0
  40b334:	csel	w20, w20, w2, eq  // eq = none
  40b338:	ldr	x23, [sp, #48]
  40b33c:	b	40b084 <ferror@plt+0x8244>
  40b340:	ldr	x23, [sp, #48]
  40b344:	b	40b080 <ferror@plt+0x8240>
  40b348:	ldr	x21, [sp, #64]
  40b34c:	sub	x21, x21, x22
  40b350:	cbnz	x0, 40b128 <ferror@plt+0x82e8>
  40b354:	ldr	x23, [sp, #72]
  40b358:	sub	x23, x23, x19
  40b35c:	b	40b134 <ferror@plt+0x82f4>
  40b360:	mov	x2, x21
  40b364:	mov	x1, x19
  40b368:	mov	x0, x22
  40b36c:	bl	402940 <strncmp@plt>
  40b370:	cbnz	w0, 40b134 <ferror@plt+0x82f4>
  40b374:	ldp	x21, x23, [sp, #64]
  40b378:	sub	x21, x21, x22
  40b37c:	sub	x23, x23, x19
  40b380:	b	40b134 <ferror@plt+0x82f4>
  40b384:	add	x22, x22, #0x1
  40b388:	add	x19, x19, #0x1
  40b38c:	b	40b104 <ferror@plt+0x82c4>
  40b390:	mov	w20, w6
  40b394:	ldr	x23, [sp, #48]
  40b398:	b	40b084 <ferror@plt+0x8244>
  40b39c:	ldr	x23, [sp, #72]
  40b3a0:	sub	x23, x23, x19
  40b3a4:	b	40b12c <ferror@plt+0x82ec>
  40b3a8:	stp	x29, x30, [sp, #-16]!
  40b3ac:	mov	x1, #0x0                   	// #0
  40b3b0:	mov	x29, sp
  40b3b4:	bl	402e30 <setlocale@plt>
  40b3b8:	mov	w1, #0x1                   	// #1
  40b3bc:	cbz	x0, 40b3e0 <ferror@plt+0x85a0>
  40b3c0:	ldrb	w1, [x0]
  40b3c4:	cmp	w1, #0x43
  40b3c8:	b.eq	40b3ec <ferror@plt+0x85ac>  // b.none
  40b3cc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40b3d0:	add	x1, x1, #0xa00
  40b3d4:	bl	402b50 <strcmp@plt>
  40b3d8:	cmp	w0, #0x0
  40b3dc:	cset	w1, ne  // ne = any
  40b3e0:	mov	w0, w1
  40b3e4:	ldp	x29, x30, [sp], #16
  40b3e8:	ret
  40b3ec:	ldrb	w2, [x0, #1]
  40b3f0:	mov	w1, #0x0                   	// #0
  40b3f4:	cbnz	w2, 40b3cc <ferror@plt+0x858c>
  40b3f8:	mov	w0, w1
  40b3fc:	ldp	x29, x30, [sp], #16
  40b400:	ret
  40b404:	nop
  40b408:	ror	x2, x0, #3
  40b40c:	udiv	x0, x2, x1
  40b410:	msub	x0, x0, x1, x2
  40b414:	ret
  40b418:	cmp	x1, x0
  40b41c:	cset	w0, eq  // eq = none
  40b420:	ret
  40b424:	nop
  40b428:	stp	x29, x30, [sp, #-32]!
  40b42c:	mov	x29, sp
  40b430:	str	x19, [sp, #16]
  40b434:	mov	x19, x0
  40b438:	mov	x0, x1
  40b43c:	ldr	x1, [x19, #16]
  40b440:	ldr	x2, [x19, #48]
  40b444:	blr	x2
  40b448:	ldr	x1, [x19, #16]
  40b44c:	cmp	x1, x0
  40b450:	b.ls	40b468 <ferror@plt+0x8628>  // b.plast
  40b454:	ldr	x1, [x19]
  40b458:	ldr	x19, [sp, #16]
  40b45c:	add	x0, x1, x0, lsl #4
  40b460:	ldp	x29, x30, [sp], #32
  40b464:	ret
  40b468:	bl	402a80 <abort@plt>
  40b46c:	nop
  40b470:	stp	x29, x30, [sp, #-64]!
  40b474:	mov	x29, sp
  40b478:	str	x23, [sp, #48]
  40b47c:	mov	x23, x2
  40b480:	stp	x19, x20, [sp, #16]
  40b484:	mov	x20, x1
  40b488:	stp	x21, x22, [sp, #32]
  40b48c:	and	w22, w3, #0xff
  40b490:	mov	x21, x0
  40b494:	bl	40b428 <ferror@plt+0x85e8>
  40b498:	str	x0, [x23]
  40b49c:	ldr	x1, [x0]
  40b4a0:	cbz	x1, 40b52c <ferror@plt+0x86ec>
  40b4a4:	mov	x19, x0
  40b4a8:	cmp	x1, x20
  40b4ac:	b.eq	40b584 <ferror@plt+0x8744>  // b.none
  40b4b0:	ldr	x2, [x21, #56]
  40b4b4:	mov	x0, x20
  40b4b8:	blr	x2
  40b4bc:	tst	w0, #0xff
  40b4c0:	b.eq	40b524 <ferror@plt+0x86e4>  // b.none
  40b4c4:	ldr	x0, [x19]
  40b4c8:	cbz	w22, 40b530 <ferror@plt+0x86f0>
  40b4cc:	ldr	x1, [x19, #8]
  40b4d0:	cbz	x1, 40b57c <ferror@plt+0x873c>
  40b4d4:	ldp	x2, x3, [x1]
  40b4d8:	stp	x2, x3, [x19]
  40b4dc:	str	xzr, [x1]
  40b4e0:	ldp	x19, x20, [sp, #16]
  40b4e4:	ldr	x2, [x21, #72]
  40b4e8:	str	x2, [x1, #8]
  40b4ec:	str	x1, [x21, #72]
  40b4f0:	ldp	x21, x22, [sp, #32]
  40b4f4:	ldr	x23, [sp, #48]
  40b4f8:	ldp	x29, x30, [sp], #64
  40b4fc:	ret
  40b500:	ldr	x1, [x2]
  40b504:	mov	x0, x20
  40b508:	cmp	x1, x20
  40b50c:	b.eq	40b544 <ferror@plt+0x8704>  // b.none
  40b510:	ldr	x2, [x21, #56]
  40b514:	blr	x2
  40b518:	tst	w0, #0xff
  40b51c:	b.ne	40b544 <ferror@plt+0x8704>  // b.any
  40b520:	ldr	x19, [x19, #8]
  40b524:	ldr	x2, [x19, #8]
  40b528:	cbnz	x2, 40b500 <ferror@plt+0x86c0>
  40b52c:	mov	x0, #0x0                   	// #0
  40b530:	ldp	x19, x20, [sp, #16]
  40b534:	ldp	x21, x22, [sp, #32]
  40b538:	ldr	x23, [sp, #48]
  40b53c:	ldp	x29, x30, [sp], #64
  40b540:	ret
  40b544:	ldr	x1, [x19, #8]
  40b548:	ldr	x0, [x1]
  40b54c:	cbz	w22, 40b530 <ferror@plt+0x86f0>
  40b550:	ldr	x2, [x1, #8]
  40b554:	str	x2, [x19, #8]
  40b558:	str	xzr, [x1]
  40b55c:	ldp	x19, x20, [sp, #16]
  40b560:	ldr	x2, [x21, #72]
  40b564:	str	x2, [x1, #8]
  40b568:	str	x1, [x21, #72]
  40b56c:	ldp	x21, x22, [sp, #32]
  40b570:	ldr	x23, [sp, #48]
  40b574:	ldp	x29, x30, [sp], #64
  40b578:	ret
  40b57c:	str	xzr, [x19]
  40b580:	b	40b530 <ferror@plt+0x86f0>
  40b584:	mov	x0, x1
  40b588:	b	40b4c8 <ferror@plt+0x8688>
  40b58c:	nop
  40b590:	ldr	x3, [x0]
  40b594:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40b598:	add	x2, x2, #0xa78
  40b59c:	mov	x1, x0
  40b5a0:	cmp	x3, x2
  40b5a4:	b.eq	40b62c <ferror@plt+0x87ec>  // b.none
  40b5a8:	mov	w0, #0xcccd                	// #52429
  40b5ac:	ldr	s1, [x3, #8]
  40b5b0:	movk	w0, #0x3dcc, lsl #16
  40b5b4:	fmov	s0, w0
  40b5b8:	fcmpe	s1, s0
  40b5bc:	b.le	40b620 <ferror@plt+0x87e0>
  40b5c0:	mov	w0, #0x6666                	// #26214
  40b5c4:	movk	w0, #0x3f66, lsl #16
  40b5c8:	fmov	s2, w0
  40b5cc:	fcmpe	s1, s2
  40b5d0:	b.pl	40b620 <ferror@plt+0x87e0>  // b.nfrst
  40b5d4:	mov	w0, #0xcccd                	// #52429
  40b5d8:	ldr	s3, [x3, #12]
  40b5dc:	movk	w0, #0x3f8c, lsl #16
  40b5e0:	fmov	s2, w0
  40b5e4:	fcmpe	s3, s2
  40b5e8:	b.le	40b620 <ferror@plt+0x87e0>
  40b5ec:	ldr	s2, [x3]
  40b5f0:	fcmpe	s2, #0.0
  40b5f4:	b.lt	40b620 <ferror@plt+0x87e0>  // b.tstop
  40b5f8:	fadd	s0, s2, s0
  40b5fc:	ldr	s2, [x3, #4]
  40b600:	fcmpe	s0, s2
  40b604:	b.pl	40b620 <ferror@plt+0x87e0>  // b.nfrst
  40b608:	fmov	s3, #1.000000000000000000e+00
  40b60c:	fcmpe	s2, s3
  40b610:	b.hi	40b620 <ferror@plt+0x87e0>  // b.pmore
  40b614:	fcmpe	s1, s0
  40b618:	mov	w0, #0x1                   	// #1
  40b61c:	b.gt	40b628 <ferror@plt+0x87e8>
  40b620:	mov	w0, #0x0                   	// #0
  40b624:	str	x2, [x1]
  40b628:	ret
  40b62c:	mov	w0, #0x1                   	// #1
  40b630:	ret
  40b634:	nop
  40b638:	tst	w1, #0xff
  40b63c:	b.ne	40b660 <ferror@plt+0x8820>  // b.any
  40b640:	ucvtf	s1, x0
  40b644:	mov	w0, #0x5f800000            	// #1602224128
  40b648:	fmov	s2, w0
  40b64c:	mov	x0, #0x0                   	// #0
  40b650:	fdiv	s0, s1, s0
  40b654:	fcmpe	s0, s2
  40b658:	b.ge	40b6e0 <ferror@plt+0x88a0>  // b.tcont
  40b65c:	fcvtzu	x0, s0
  40b660:	cmp	x0, #0xa
  40b664:	mov	x1, #0xa                   	// #10
  40b668:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40b66c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40b670:	orr	x0, x0, #0x1
  40b674:	movk	x5, #0xaaab
  40b678:	cmn	x0, #0x1
  40b67c:	b.eq	40b6dc <ferror@plt+0x889c>  // b.none
  40b680:	umulh	x1, x0, x5
  40b684:	cmp	x0, #0x9
  40b688:	and	x2, x1, #0xfffffffffffffffe
  40b68c:	add	x1, x2, x1, lsr #1
  40b690:	sub	x1, x0, x1
  40b694:	b.ls	40b6cc <ferror@plt+0x888c>  // b.plast
  40b698:	cbz	x1, 40b6d0 <ferror@plt+0x8890>
  40b69c:	mov	x4, #0x10                  	// #16
  40b6a0:	mov	x3, #0x9                   	// #9
  40b6a4:	mov	x2, #0x3                   	// #3
  40b6a8:	b	40b6b0 <ferror@plt+0x8870>
  40b6ac:	cbz	x1, 40b6d0 <ferror@plt+0x8890>
  40b6b0:	add	x2, x2, #0x2
  40b6b4:	add	x3, x3, x4
  40b6b8:	cmp	x0, x3
  40b6bc:	add	x4, x4, #0x8
  40b6c0:	udiv	x1, x0, x2
  40b6c4:	msub	x1, x1, x2, x0
  40b6c8:	b.hi	40b6ac <ferror@plt+0x886c>  // b.pmore
  40b6cc:	cbnz	x1, 40b6e4 <ferror@plt+0x88a4>
  40b6d0:	add	x0, x0, #0x2
  40b6d4:	cmn	x0, #0x1
  40b6d8:	b.ne	40b680 <ferror@plt+0x8840>  // b.any
  40b6dc:	mov	x0, #0x0                   	// #0
  40b6e0:	ret
  40b6e4:	cmp	xzr, x0, lsr #61
  40b6e8:	cset	x1, ne  // ne = any
  40b6ec:	tbnz	x0, #60, 40b6dc <ferror@plt+0x889c>
  40b6f0:	cbnz	x1, 40b6dc <ferror@plt+0x889c>
  40b6f4:	ret
  40b6f8:	stp	x29, x30, [sp, #-64]!
  40b6fc:	mov	x29, sp
  40b700:	stp	x19, x20, [sp, #16]
  40b704:	mov	x20, x0
  40b708:	stp	x21, x22, [sp, #32]
  40b70c:	ldp	x22, x0, [x1]
  40b710:	stp	x23, x24, [sp, #48]
  40b714:	mov	x23, x1
  40b718:	and	w24, w2, #0xff
  40b71c:	cmp	x22, x0
  40b720:	b.cc	40b734 <ferror@plt+0x88f4>  // b.lo, b.ul, b.last
  40b724:	b	40b794 <ferror@plt+0x8954>
  40b728:	add	x22, x22, #0x10
  40b72c:	cmp	x0, x22
  40b730:	b.ls	40b794 <ferror@plt+0x8954>  // b.plast
  40b734:	ldr	x21, [x22]
  40b738:	cbz	x21, 40b728 <ferror@plt+0x88e8>
  40b73c:	ldr	x19, [x22, #8]
  40b740:	cbz	x19, 40b77c <ferror@plt+0x893c>
  40b744:	nop
  40b748:	ldr	x21, [x19]
  40b74c:	mov	x0, x20
  40b750:	mov	x1, x21
  40b754:	bl	40b428 <ferror@plt+0x85e8>
  40b758:	ldr	x3, [x0]
  40b75c:	mov	x2, x19
  40b760:	ldr	x19, [x19, #8]
  40b764:	cbz	x3, 40b7b0 <ferror@plt+0x8970>
  40b768:	ldr	x1, [x0, #8]
  40b76c:	str	x1, [x2, #8]
  40b770:	str	x2, [x0, #8]
  40b774:	cbnz	x19, 40b748 <ferror@plt+0x8908>
  40b778:	ldr	x21, [x22]
  40b77c:	str	xzr, [x22, #8]
  40b780:	cbz	w24, 40b7d8 <ferror@plt+0x8998>
  40b784:	ldr	x0, [x23, #8]
  40b788:	add	x22, x22, #0x10
  40b78c:	cmp	x0, x22
  40b790:	b.hi	40b734 <ferror@plt+0x88f4>  // b.pmore
  40b794:	mov	w24, #0x1                   	// #1
  40b798:	mov	w0, w24
  40b79c:	ldp	x19, x20, [sp, #16]
  40b7a0:	ldp	x21, x22, [sp, #32]
  40b7a4:	ldp	x23, x24, [sp, #48]
  40b7a8:	ldp	x29, x30, [sp], #64
  40b7ac:	ret
  40b7b0:	ldr	x1, [x20, #24]
  40b7b4:	str	x21, [x0]
  40b7b8:	add	x1, x1, #0x1
  40b7bc:	str	x1, [x20, #24]
  40b7c0:	str	xzr, [x2]
  40b7c4:	ldr	x0, [x20, #72]
  40b7c8:	str	x0, [x2, #8]
  40b7cc:	str	x2, [x20, #72]
  40b7d0:	cbnz	x19, 40b748 <ferror@plt+0x8908>
  40b7d4:	b	40b778 <ferror@plt+0x8938>
  40b7d8:	mov	x1, x21
  40b7dc:	mov	x0, x20
  40b7e0:	bl	40b428 <ferror@plt+0x85e8>
  40b7e4:	mov	x19, x0
  40b7e8:	ldr	x0, [x0]
  40b7ec:	cbz	x0, 40b824 <ferror@plt+0x89e4>
  40b7f0:	ldr	x0, [x20, #72]
  40b7f4:	cbz	x0, 40b838 <ferror@plt+0x89f8>
  40b7f8:	ldr	x1, [x0, #8]
  40b7fc:	str	x1, [x20, #72]
  40b800:	ldr	x1, [x19, #8]
  40b804:	stp	x21, x1, [x0]
  40b808:	str	x0, [x19, #8]
  40b80c:	ldr	x1, [x23, #24]
  40b810:	str	xzr, [x22]
  40b814:	sub	x1, x1, #0x1
  40b818:	str	x1, [x23, #24]
  40b81c:	ldr	x0, [x23, #8]
  40b820:	b	40b728 <ferror@plt+0x88e8>
  40b824:	ldr	x0, [x20, #24]
  40b828:	str	x21, [x19]
  40b82c:	add	x0, x0, #0x1
  40b830:	str	x0, [x20, #24]
  40b834:	b	40b80c <ferror@plt+0x89cc>
  40b838:	mov	x0, #0x10                  	// #16
  40b83c:	bl	4028e0 <malloc@plt>
  40b840:	cbnz	x0, 40b800 <ferror@plt+0x89c0>
  40b844:	mov	w0, w24
  40b848:	ldp	x19, x20, [sp, #16]
  40b84c:	ldp	x21, x22, [sp, #32]
  40b850:	ldp	x23, x24, [sp, #48]
  40b854:	ldp	x29, x30, [sp], #64
  40b858:	ret
  40b85c:	nop
  40b860:	ldr	x0, [x0, #16]
  40b864:	ret
  40b868:	ldr	x0, [x0, #24]
  40b86c:	ret
  40b870:	ldr	x0, [x0, #32]
  40b874:	ret
  40b878:	ldp	x3, x4, [x0]
  40b87c:	mov	x0, #0x0                   	// #0
  40b880:	cmp	x3, x4
  40b884:	b.cc	40b898 <ferror@plt+0x8a58>  // b.lo, b.ul, b.last
  40b888:	b	40b8d0 <ferror@plt+0x8a90>
  40b88c:	add	x3, x3, #0x10
  40b890:	cmp	x3, x4
  40b894:	b.cs	40b8d0 <ferror@plt+0x8a90>  // b.hs, b.nlast
  40b898:	ldr	x1, [x3]
  40b89c:	cbz	x1, 40b88c <ferror@plt+0x8a4c>
  40b8a0:	ldr	x1, [x3, #8]
  40b8a4:	mov	x2, #0x1                   	// #1
  40b8a8:	cbz	x1, 40b8bc <ferror@plt+0x8a7c>
  40b8ac:	nop
  40b8b0:	ldr	x1, [x1, #8]
  40b8b4:	add	x2, x2, #0x1
  40b8b8:	cbnz	x1, 40b8b0 <ferror@plt+0x8a70>
  40b8bc:	cmp	x0, x2
  40b8c0:	add	x3, x3, #0x10
  40b8c4:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40b8c8:	cmp	x3, x4
  40b8cc:	b.cc	40b898 <ferror@plt+0x8a58>  // b.lo, b.ul, b.last
  40b8d0:	ret
  40b8d4:	nop
  40b8d8:	ldp	x3, x4, [x0]
  40b8dc:	mov	x6, x0
  40b8e0:	mov	x2, #0x0                   	// #0
  40b8e4:	mov	x5, #0x0                   	// #0
  40b8e8:	cmp	x3, x4
  40b8ec:	b.cc	40b900 <ferror@plt+0x8ac0>  // b.lo, b.ul, b.last
  40b8f0:	b	40b930 <ferror@plt+0x8af0>
  40b8f4:	add	x3, x3, #0x10
  40b8f8:	cmp	x3, x4
  40b8fc:	b.cs	40b930 <ferror@plt+0x8af0>  // b.hs, b.nlast
  40b900:	ldr	x1, [x3]
  40b904:	cbz	x1, 40b8f4 <ferror@plt+0x8ab4>
  40b908:	ldr	x1, [x3, #8]
  40b90c:	add	x5, x5, #0x1
  40b910:	add	x2, x2, #0x1
  40b914:	cbz	x1, 40b8f4 <ferror@plt+0x8ab4>
  40b918:	ldr	x1, [x1, #8]
  40b91c:	add	x2, x2, #0x1
  40b920:	cbnz	x1, 40b918 <ferror@plt+0x8ad8>
  40b924:	add	x3, x3, #0x10
  40b928:	cmp	x3, x4
  40b92c:	b.cc	40b900 <ferror@plt+0x8ac0>  // b.lo, b.ul, b.last
  40b930:	ldr	x1, [x6, #24]
  40b934:	mov	w0, #0x0                   	// #0
  40b938:	cmp	x1, x5
  40b93c:	b.eq	40b944 <ferror@plt+0x8b04>  // b.none
  40b940:	ret
  40b944:	ldr	x0, [x6, #32]
  40b948:	cmp	x0, x2
  40b94c:	cset	w0, eq  // eq = none
  40b950:	ret
  40b954:	nop
  40b958:	stp	x29, x30, [sp, #-48]!
  40b95c:	mov	x29, sp
  40b960:	ldp	x4, x5, [x0]
  40b964:	stp	x19, x20, [sp, #16]
  40b968:	mov	x20, x1
  40b96c:	stp	x21, x22, [sp, #32]
  40b970:	mov	x19, #0x0                   	// #0
  40b974:	ldp	x21, x22, [x0, #16]
  40b978:	cmp	x4, x5
  40b97c:	ldr	x3, [x0, #32]
  40b980:	b.cc	40b994 <ferror@plt+0x8b54>  // b.lo, b.ul, b.last
  40b984:	b	40b9c8 <ferror@plt+0x8b88>
  40b988:	add	x4, x4, #0x10
  40b98c:	cmp	x4, x5
  40b990:	b.cs	40b9c8 <ferror@plt+0x8b88>  // b.hs, b.nlast
  40b994:	ldr	x0, [x4]
  40b998:	cbz	x0, 40b988 <ferror@plt+0x8b48>
  40b99c:	ldr	x0, [x4, #8]
  40b9a0:	mov	x2, #0x1                   	// #1
  40b9a4:	cbz	x0, 40b9b4 <ferror@plt+0x8b74>
  40b9a8:	ldr	x0, [x0, #8]
  40b9ac:	add	x2, x2, #0x1
  40b9b0:	cbnz	x0, 40b9a8 <ferror@plt+0x8b68>
  40b9b4:	cmp	x19, x2
  40b9b8:	add	x4, x4, #0x10
  40b9bc:	csel	x19, x19, x2, cs  // cs = hs, nlast
  40b9c0:	cmp	x4, x5
  40b9c4:	b.cc	40b994 <ferror@plt+0x8b54>  // b.lo, b.ul, b.last
  40b9c8:	mov	x0, x20
  40b9cc:	mov	w1, #0x1                   	// #1
  40b9d0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40b9d4:	add	x2, x2, #0xa08
  40b9d8:	bl	402b30 <__fprintf_chk@plt>
  40b9dc:	mov	x3, x21
  40b9e0:	mov	x0, x20
  40b9e4:	mov	w1, #0x1                   	// #1
  40b9e8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40b9ec:	add	x2, x2, #0xa20
  40b9f0:	bl	402b30 <__fprintf_chk@plt>
  40b9f4:	ucvtf	d1, x22
  40b9f8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40b9fc:	fmov	d2, x0
  40ba00:	ucvtf	d0, x21
  40ba04:	mov	x3, x22
  40ba08:	mov	x0, x20
  40ba0c:	mov	w1, #0x1                   	// #1
  40ba10:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40ba14:	fmul	d1, d1, d2
  40ba18:	add	x2, x2, #0xa38
  40ba1c:	fdiv	d0, d1, d0
  40ba20:	bl	402b30 <__fprintf_chk@plt>
  40ba24:	mov	x3, x19
  40ba28:	mov	x0, x20
  40ba2c:	ldp	x19, x20, [sp, #16]
  40ba30:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40ba34:	ldp	x21, x22, [sp, #32]
  40ba38:	add	x2, x2, #0xa60
  40ba3c:	ldp	x29, x30, [sp], #48
  40ba40:	mov	w1, #0x1                   	// #1
  40ba44:	b	402b30 <__fprintf_chk@plt>
  40ba48:	stp	x29, x30, [sp, #-48]!
  40ba4c:	mov	x29, sp
  40ba50:	stp	x19, x20, [sp, #16]
  40ba54:	mov	x20, x1
  40ba58:	str	x21, [sp, #32]
  40ba5c:	mov	x21, x0
  40ba60:	bl	40b428 <ferror@plt+0x85e8>
  40ba64:	ldr	x1, [x0]
  40ba68:	cbz	x1, 40ba9c <ferror@plt+0x8c5c>
  40ba6c:	mov	x19, x0
  40ba70:	b	40ba78 <ferror@plt+0x8c38>
  40ba74:	ldr	x1, [x19]
  40ba78:	mov	x0, x20
  40ba7c:	cmp	x1, x20
  40ba80:	b.eq	40bab4 <ferror@plt+0x8c74>  // b.none
  40ba84:	ldr	x2, [x21, #56]
  40ba88:	blr	x2
  40ba8c:	tst	w0, #0xff
  40ba90:	b.ne	40bab0 <ferror@plt+0x8c70>  // b.any
  40ba94:	ldr	x19, [x19, #8]
  40ba98:	cbnz	x19, 40ba74 <ferror@plt+0x8c34>
  40ba9c:	mov	x0, #0x0                   	// #0
  40baa0:	ldp	x19, x20, [sp, #16]
  40baa4:	ldr	x21, [sp, #32]
  40baa8:	ldp	x29, x30, [sp], #48
  40baac:	ret
  40bab0:	ldr	x20, [x19]
  40bab4:	mov	x0, x20
  40bab8:	ldp	x19, x20, [sp, #16]
  40babc:	ldr	x21, [sp, #32]
  40bac0:	ldp	x29, x30, [sp], #48
  40bac4:	ret
  40bac8:	ldr	x1, [x0, #32]
  40bacc:	cbz	x1, 40baf8 <ferror@plt+0x8cb8>
  40bad0:	ldp	x1, x2, [x0]
  40bad4:	cmp	x1, x2
  40bad8:	b.cc	40baec <ferror@plt+0x8cac>  // b.lo, b.ul, b.last
  40badc:	b	40bb00 <ferror@plt+0x8cc0>
  40bae0:	add	x1, x1, #0x10
  40bae4:	cmp	x1, x2
  40bae8:	b.cs	40bb00 <ferror@plt+0x8cc0>  // b.hs, b.nlast
  40baec:	ldr	x0, [x1]
  40baf0:	cbz	x0, 40bae0 <ferror@plt+0x8ca0>
  40baf4:	ret
  40baf8:	mov	x0, #0x0                   	// #0
  40bafc:	ret
  40bb00:	stp	x29, x30, [sp, #-16]!
  40bb04:	mov	x29, sp
  40bb08:	bl	402a80 <abort@plt>
  40bb0c:	nop
  40bb10:	stp	x29, x30, [sp, #-32]!
  40bb14:	mov	x29, sp
  40bb18:	stp	x19, x20, [sp, #16]
  40bb1c:	mov	x20, x0
  40bb20:	mov	x19, x1
  40bb24:	bl	40b428 <ferror@plt+0x85e8>
  40bb28:	mov	x3, x0
  40bb2c:	mov	x2, x0
  40bb30:	b	40bb38 <ferror@plt+0x8cf8>
  40bb34:	cbz	x2, 40bb48 <ferror@plt+0x8d08>
  40bb38:	ldp	x4, x2, [x2]
  40bb3c:	cmp	x4, x19
  40bb40:	b.ne	40bb34 <ferror@plt+0x8cf4>  // b.any
  40bb44:	cbnz	x2, 40bb74 <ferror@plt+0x8d34>
  40bb48:	ldr	x1, [x20, #8]
  40bb4c:	b	40bb58 <ferror@plt+0x8d18>
  40bb50:	ldr	x0, [x3]
  40bb54:	cbnz	x0, 40bb68 <ferror@plt+0x8d28>
  40bb58:	add	x3, x3, #0x10
  40bb5c:	cmp	x1, x3
  40bb60:	b.hi	40bb50 <ferror@plt+0x8d10>  // b.pmore
  40bb64:	mov	x0, #0x0                   	// #0
  40bb68:	ldp	x19, x20, [sp, #16]
  40bb6c:	ldp	x29, x30, [sp], #32
  40bb70:	ret
  40bb74:	ldr	x0, [x2]
  40bb78:	ldp	x19, x20, [sp, #16]
  40bb7c:	ldp	x29, x30, [sp], #32
  40bb80:	ret
  40bb84:	nop
  40bb88:	ldp	x5, x3, [x0]
  40bb8c:	mov	x6, x0
  40bb90:	cmp	x3, x5
  40bb94:	b.ls	40bbe4 <ferror@plt+0x8da4>  // b.plast
  40bb98:	sub	x4, x1, #0x8
  40bb9c:	mov	x0, #0x0                   	// #0
  40bba0:	ldr	x1, [x5]
  40bba4:	cbnz	x1, 40bbb8 <ferror@plt+0x8d78>
  40bba8:	add	x5, x5, #0x10
  40bbac:	cmp	x3, x5
  40bbb0:	b.hi	40bba0 <ferror@plt+0x8d60>  // b.pmore
  40bbb4:	ret
  40bbb8:	mov	x1, x5
  40bbbc:	nop
  40bbc0:	cmp	x2, x0
  40bbc4:	b.ls	40bbb4 <ferror@plt+0x8d74>  // b.plast
  40bbc8:	add	x0, x0, #0x1
  40bbcc:	ldr	x3, [x1]
  40bbd0:	str	x3, [x4, x0, lsl #3]
  40bbd4:	ldr	x1, [x1, #8]
  40bbd8:	cbnz	x1, 40bbc0 <ferror@plt+0x8d80>
  40bbdc:	ldr	x3, [x6, #8]
  40bbe0:	b	40bba8 <ferror@plt+0x8d68>
  40bbe4:	mov	x0, #0x0                   	// #0
  40bbe8:	ret
  40bbec:	nop
  40bbf0:	stp	x29, x30, [sp, #-64]!
  40bbf4:	mov	x29, sp
  40bbf8:	stp	x21, x22, [sp, #32]
  40bbfc:	mov	x21, x1
  40bc00:	stp	x23, x24, [sp, #48]
  40bc04:	ldp	x23, x1, [x0]
  40bc08:	stp	x19, x20, [sp, #16]
  40bc0c:	cmp	x1, x23
  40bc10:	b.ls	40bc7c <ferror@plt+0x8e3c>  // b.plast
  40bc14:	mov	x24, x0
  40bc18:	mov	x22, x2
  40bc1c:	mov	x20, #0x0                   	// #0
  40bc20:	ldr	x0, [x23]
  40bc24:	cbnz	x0, 40bc4c <ferror@plt+0x8e0c>
  40bc28:	add	x23, x23, #0x10
  40bc2c:	cmp	x1, x23
  40bc30:	b.hi	40bc20 <ferror@plt+0x8de0>  // b.pmore
  40bc34:	mov	x0, x20
  40bc38:	ldp	x19, x20, [sp, #16]
  40bc3c:	ldp	x21, x22, [sp, #32]
  40bc40:	ldp	x23, x24, [sp, #48]
  40bc44:	ldp	x29, x30, [sp], #64
  40bc48:	ret
  40bc4c:	mov	x19, x23
  40bc50:	b	40bc58 <ferror@plt+0x8e18>
  40bc54:	ldr	x0, [x19]
  40bc58:	mov	x1, x22
  40bc5c:	blr	x21
  40bc60:	tst	w0, #0xff
  40bc64:	b.eq	40bc34 <ferror@plt+0x8df4>  // b.none
  40bc68:	ldr	x19, [x19, #8]
  40bc6c:	add	x20, x20, #0x1
  40bc70:	cbnz	x19, 40bc54 <ferror@plt+0x8e14>
  40bc74:	ldr	x1, [x24, #8]
  40bc78:	b	40bc28 <ferror@plt+0x8de8>
  40bc7c:	mov	x20, #0x0                   	// #0
  40bc80:	b	40bc34 <ferror@plt+0x8df4>
  40bc84:	nop
  40bc88:	ldrb	w4, [x0]
  40bc8c:	mov	x2, #0x0                   	// #0
  40bc90:	cbz	w4, 40bcb4 <ferror@plt+0x8e74>
  40bc94:	nop
  40bc98:	lsl	x3, x2, #5
  40bc9c:	sub	x2, x3, x2
  40bca0:	add	x2, x2, w4, uxtb
  40bca4:	ldrb	w4, [x0, #1]!
  40bca8:	udiv	x3, x2, x1
  40bcac:	msub	x2, x3, x1, x2
  40bcb0:	cbnz	w4, 40bc98 <ferror@plt+0x8e58>
  40bcb4:	mov	x0, x2
  40bcb8:	ret
  40bcbc:	nop
  40bcc0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40bcc4:	add	x1, x1, #0xa78
  40bcc8:	ldp	x2, x3, [x1]
  40bccc:	stp	x2, x3, [x0]
  40bcd0:	ldr	w1, [x1, #16]
  40bcd4:	str	w1, [x0, #16]
  40bcd8:	ret
  40bcdc:	nop
  40bce0:	stp	x29, x30, [sp, #-64]!
  40bce4:	cmp	x2, #0x0
  40bce8:	mov	x29, sp
  40bcec:	stp	x21, x22, [sp, #32]
  40bcf0:	mov	x22, x2
  40bcf4:	adrp	x2, 40b000 <ferror@plt+0x81c0>
  40bcf8:	add	x2, x2, #0x408
  40bcfc:	stp	x19, x20, [sp, #16]
  40bd00:	csel	x22, x2, x22, eq  // eq = none
  40bd04:	cmp	x3, #0x0
  40bd08:	adrp	x2, 40b000 <ferror@plt+0x81c0>
  40bd0c:	add	x2, x2, #0x418
  40bd10:	mov	x20, x1
  40bd14:	csel	x21, x2, x3, eq  // eq = none
  40bd18:	stp	x23, x24, [sp, #48]
  40bd1c:	mov	x24, x0
  40bd20:	mov	x23, x4
  40bd24:	mov	x0, #0x50                  	// #80
  40bd28:	bl	4028e0 <malloc@plt>
  40bd2c:	mov	x19, x0
  40bd30:	cbz	x0, 40bd94 <ferror@plt+0x8f54>
  40bd34:	cmp	x20, #0x0
  40bd38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40bd3c:	add	x1, x1, #0xa78
  40bd40:	csel	x20, x1, x20, eq  // eq = none
  40bd44:	str	x20, [x0, #40]!
  40bd48:	bl	40b590 <ferror@plt+0x8750>
  40bd4c:	tst	w0, #0xff
  40bd50:	b.eq	40bdac <ferror@plt+0x8f6c>  // b.none
  40bd54:	ldrb	w1, [x20, #16]
  40bd58:	mov	x0, x24
  40bd5c:	ldr	s0, [x20, #8]
  40bd60:	bl	40b638 <ferror@plt+0x87f8>
  40bd64:	str	x0, [x19, #16]
  40bd68:	mov	x20, x0
  40bd6c:	cbz	x0, 40bdac <ferror@plt+0x8f6c>
  40bd70:	mov	x1, #0x10                  	// #16
  40bd74:	bl	4029d0 <calloc@plt>
  40bd78:	str	x0, [x19]
  40bd7c:	cbz	x0, 40bdac <ferror@plt+0x8f6c>
  40bd80:	add	x20, x0, x20, lsl #4
  40bd84:	str	x20, [x19, #8]
  40bd88:	stp	xzr, xzr, [x19, #24]
  40bd8c:	stp	x22, x21, [x19, #48]
  40bd90:	stp	x23, xzr, [x19, #64]
  40bd94:	mov	x0, x19
  40bd98:	ldp	x19, x20, [sp, #16]
  40bd9c:	ldp	x21, x22, [sp, #32]
  40bda0:	ldp	x23, x24, [sp, #48]
  40bda4:	ldp	x29, x30, [sp], #64
  40bda8:	ret
  40bdac:	mov	x0, x19
  40bdb0:	mov	x19, #0x0                   	// #0
  40bdb4:	bl	402ba0 <free@plt>
  40bdb8:	mov	x0, x19
  40bdbc:	ldp	x19, x20, [sp, #16]
  40bdc0:	ldp	x21, x22, [sp, #32]
  40bdc4:	ldp	x23, x24, [sp, #48]
  40bdc8:	ldp	x29, x30, [sp], #64
  40bdcc:	ret
  40bdd0:	stp	x29, x30, [sp, #-48]!
  40bdd4:	mov	x29, sp
  40bdd8:	ldr	x1, [x0, #8]
  40bddc:	str	x21, [sp, #32]
  40bde0:	ldr	x21, [x0]
  40bde4:	stp	x19, x20, [sp, #16]
  40bde8:	mov	x20, x0
  40bdec:	cmp	x21, x1
  40bdf0:	b.cc	40be04 <ferror@plt+0x8fc4>  // b.lo, b.ul, b.last
  40bdf4:	b	40be60 <ferror@plt+0x9020>
  40bdf8:	add	x21, x21, #0x10
  40bdfc:	cmp	x1, x21
  40be00:	b.ls	40be60 <ferror@plt+0x9020>  // b.plast
  40be04:	ldr	x0, [x21]
  40be08:	cbz	x0, 40bdf8 <ferror@plt+0x8fb8>
  40be0c:	ldr	x19, [x21, #8]
  40be10:	ldr	x1, [x20, #64]
  40be14:	cbz	x19, 40be40 <ferror@plt+0x9000>
  40be18:	cbz	x1, 40be28 <ferror@plt+0x8fe8>
  40be1c:	ldr	x0, [x19]
  40be20:	blr	x1
  40be24:	ldr	x1, [x20, #64]
  40be28:	ldr	x0, [x19, #8]
  40be2c:	ldr	x2, [x20, #72]
  40be30:	stp	xzr, x2, [x19]
  40be34:	str	x19, [x20, #72]
  40be38:	mov	x19, x0
  40be3c:	cbnz	x0, 40be18 <ferror@plt+0x8fd8>
  40be40:	cbz	x1, 40be4c <ferror@plt+0x900c>
  40be44:	ldr	x0, [x21]
  40be48:	blr	x1
  40be4c:	stp	xzr, xzr, [x21]
  40be50:	add	x21, x21, #0x10
  40be54:	ldr	x1, [x20, #8]
  40be58:	cmp	x1, x21
  40be5c:	b.hi	40be04 <ferror@plt+0x8fc4>  // b.pmore
  40be60:	ldr	x21, [sp, #32]
  40be64:	stp	xzr, xzr, [x20, #24]
  40be68:	ldp	x19, x20, [sp, #16]
  40be6c:	ldp	x29, x30, [sp], #48
  40be70:	ret
  40be74:	nop
  40be78:	stp	x29, x30, [sp, #-48]!
  40be7c:	mov	x29, sp
  40be80:	str	x21, [sp, #32]
  40be84:	mov	x21, x0
  40be88:	ldr	x0, [x0, #64]
  40be8c:	stp	x19, x20, [sp, #16]
  40be90:	ldp	x20, x1, [x21]
  40be94:	cbz	x0, 40bef0 <ferror@plt+0x90b0>
  40be98:	ldr	x0, [x21, #32]
  40be9c:	cbz	x0, 40bef0 <ferror@plt+0x90b0>
  40bea0:	cmp	x20, x1
  40bea4:	b.cc	40beb8 <ferror@plt+0x9078>  // b.lo, b.ul, b.last
  40bea8:	b	40bf20 <ferror@plt+0x90e0>
  40beac:	add	x20, x20, #0x10
  40beb0:	cmp	x1, x20
  40beb4:	b.ls	40beec <ferror@plt+0x90ac>  // b.plast
  40beb8:	ldr	x0, [x20]
  40bebc:	cbz	x0, 40beac <ferror@plt+0x906c>
  40bec0:	mov	x19, x20
  40bec4:	b	40becc <ferror@plt+0x908c>
  40bec8:	ldr	x0, [x19]
  40becc:	ldr	x1, [x21, #64]
  40bed0:	blr	x1
  40bed4:	ldr	x19, [x19, #8]
  40bed8:	cbnz	x19, 40bec8 <ferror@plt+0x9088>
  40bedc:	ldr	x1, [x21, #8]
  40bee0:	add	x20, x20, #0x10
  40bee4:	cmp	x1, x20
  40bee8:	b.hi	40beb8 <ferror@plt+0x9078>  // b.pmore
  40beec:	ldr	x20, [x21]
  40bef0:	cmp	x20, x1
  40bef4:	b.cs	40bf20 <ferror@plt+0x90e0>  // b.hs, b.nlast
  40bef8:	ldr	x19, [x20, #8]
  40befc:	cbz	x19, 40bf14 <ferror@plt+0x90d4>
  40bf00:	mov	x0, x19
  40bf04:	ldr	x19, [x19, #8]
  40bf08:	bl	402ba0 <free@plt>
  40bf0c:	cbnz	x19, 40bf00 <ferror@plt+0x90c0>
  40bf10:	ldr	x1, [x21, #8]
  40bf14:	add	x20, x20, #0x10
  40bf18:	cmp	x1, x20
  40bf1c:	b.hi	40bef8 <ferror@plt+0x90b8>  // b.pmore
  40bf20:	ldr	x19, [x21, #72]
  40bf24:	cbz	x19, 40bf38 <ferror@plt+0x90f8>
  40bf28:	mov	x0, x19
  40bf2c:	ldr	x19, [x19, #8]
  40bf30:	bl	402ba0 <free@plt>
  40bf34:	cbnz	x19, 40bf28 <ferror@plt+0x90e8>
  40bf38:	ldr	x0, [x21]
  40bf3c:	bl	402ba0 <free@plt>
  40bf40:	mov	x0, x21
  40bf44:	ldp	x19, x20, [sp, #16]
  40bf48:	ldr	x21, [sp, #32]
  40bf4c:	ldp	x29, x30, [sp], #48
  40bf50:	b	402ba0 <free@plt>
  40bf54:	nop
  40bf58:	stp	x29, x30, [sp, #-128]!
  40bf5c:	mov	x29, sp
  40bf60:	stp	x19, x20, [sp, #16]
  40bf64:	mov	x19, x0
  40bf68:	mov	x0, x1
  40bf6c:	str	x21, [sp, #32]
  40bf70:	ldr	x21, [x19, #40]
  40bf74:	ldrb	w1, [x21, #16]
  40bf78:	ldr	s0, [x21, #8]
  40bf7c:	bl	40b638 <ferror@plt+0x87f8>
  40bf80:	cbz	x0, 40c048 <ferror@plt+0x9208>
  40bf84:	ldr	x1, [x19, #16]
  40bf88:	mov	x20, x0
  40bf8c:	cmp	x1, x0
  40bf90:	b.eq	40c030 <ferror@plt+0x91f0>  // b.none
  40bf94:	mov	x1, #0x10                  	// #16
  40bf98:	bl	4029d0 <calloc@plt>
  40bf9c:	str	x0, [sp, #48]
  40bfa0:	cbz	x0, 40c048 <ferror@plt+0x9208>
  40bfa4:	ldp	x7, x6, [x19, #48]
  40bfa8:	add	x3, x0, x20, lsl #4
  40bfac:	ldp	x5, x4, [x19, #64]
  40bfb0:	add	x0, sp, #0x30
  40bfb4:	mov	x1, x19
  40bfb8:	mov	w2, #0x0                   	// #0
  40bfbc:	stp	x3, x20, [sp, #56]
  40bfc0:	stp	xzr, xzr, [sp, #72]
  40bfc4:	stp	x21, x7, [sp, #88]
  40bfc8:	stp	x6, x5, [sp, #104]
  40bfcc:	str	x4, [sp, #120]
  40bfd0:	bl	40b6f8 <ferror@plt+0x88b8>
  40bfd4:	ands	w20, w0, #0xff
  40bfd8:	b.ne	40c060 <ferror@plt+0x9220>  // b.any
  40bfdc:	ldr	x0, [sp, #120]
  40bfe0:	str	x0, [x19, #72]
  40bfe4:	add	x1, sp, #0x30
  40bfe8:	mov	x0, x19
  40bfec:	mov	w2, #0x1                   	// #1
  40bff0:	bl	40b6f8 <ferror@plt+0x88b8>
  40bff4:	tst	w0, #0xff
  40bff8:	b.eq	40c0a4 <ferror@plt+0x9264>  // b.none
  40bffc:	add	x1, sp, #0x30
  40c000:	mov	x0, x19
  40c004:	mov	w2, #0x0                   	// #0
  40c008:	bl	40b6f8 <ferror@plt+0x88b8>
  40c00c:	tst	w0, #0xff
  40c010:	b.eq	40c0a4 <ferror@plt+0x9264>  // b.none
  40c014:	ldr	x0, [sp, #48]
  40c018:	bl	402ba0 <free@plt>
  40c01c:	mov	w0, w20
  40c020:	ldp	x19, x20, [sp, #16]
  40c024:	ldr	x21, [sp, #32]
  40c028:	ldp	x29, x30, [sp], #128
  40c02c:	ret
  40c030:	mov	w20, #0x1                   	// #1
  40c034:	mov	w0, w20
  40c038:	ldp	x19, x20, [sp, #16]
  40c03c:	ldr	x21, [sp, #32]
  40c040:	ldp	x29, x30, [sp], #128
  40c044:	ret
  40c048:	mov	w20, #0x0                   	// #0
  40c04c:	mov	w0, w20
  40c050:	ldp	x19, x20, [sp, #16]
  40c054:	ldr	x21, [sp, #32]
  40c058:	ldp	x29, x30, [sp], #128
  40c05c:	ret
  40c060:	ldr	x0, [x19]
  40c064:	bl	402ba0 <free@plt>
  40c068:	ldr	x0, [sp, #48]
  40c06c:	str	x0, [x19]
  40c070:	ldr	x0, [sp, #56]
  40c074:	str	x0, [x19, #8]
  40c078:	ldr	x0, [sp, #64]
  40c07c:	str	x0, [x19, #16]
  40c080:	ldr	x0, [sp, #72]
  40c084:	str	x0, [x19, #24]
  40c088:	ldr	x0, [sp, #120]
  40c08c:	str	x0, [x19, #72]
  40c090:	mov	w0, w20
  40c094:	ldp	x19, x20, [sp, #16]
  40c098:	ldr	x21, [sp, #32]
  40c09c:	ldp	x29, x30, [sp], #128
  40c0a0:	ret
  40c0a4:	bl	402a80 <abort@plt>
  40c0a8:	stp	x29, x30, [sp, #-64]!
  40c0ac:	mov	x29, sp
  40c0b0:	stp	x19, x20, [sp, #16]
  40c0b4:	str	x21, [sp, #32]
  40c0b8:	cbz	x1, 40c234 <ferror@plt+0x93f4>
  40c0bc:	mov	w3, #0x0                   	// #0
  40c0c0:	mov	x20, x2
  40c0c4:	mov	x19, x0
  40c0c8:	mov	x21, x1
  40c0cc:	add	x2, sp, #0x38
  40c0d0:	bl	40b470 <ferror@plt+0x8630>
  40c0d4:	mov	x3, x0
  40c0d8:	cbz	x0, 40c0f8 <ferror@plt+0x92b8>
  40c0dc:	mov	w0, #0x0                   	// #0
  40c0e0:	cbz	x20, 40c0e8 <ferror@plt+0x92a8>
  40c0e4:	str	x3, [x20]
  40c0e8:	ldp	x19, x20, [sp, #16]
  40c0ec:	ldr	x21, [sp, #32]
  40c0f0:	ldp	x29, x30, [sp], #64
  40c0f4:	ret
  40c0f8:	ldr	x0, [x19, #16]
  40c0fc:	ldr	x1, [x19, #40]
  40c100:	ucvtf	s0, x0
  40c104:	ldr	x0, [x19, #24]
  40c108:	ldr	s2, [x1, #8]
  40c10c:	ucvtf	s1, x0
  40c110:	fmul	s0, s0, s2
  40c114:	fcmpe	s1, s0
  40c118:	b.gt	40c164 <ferror@plt+0x9324>
  40c11c:	ldr	x20, [sp, #56]
  40c120:	ldr	x0, [x20]
  40c124:	cbz	x0, 40c1c4 <ferror@plt+0x9384>
  40c128:	ldr	x0, [x19, #72]
  40c12c:	cbz	x0, 40c1ec <ferror@plt+0x93ac>
  40c130:	ldr	x1, [x0, #8]
  40c134:	str	x1, [x19, #72]
  40c138:	ldr	x2, [x20, #8]
  40c13c:	ldr	x1, [x19, #32]
  40c140:	stp	x21, x2, [x0]
  40c144:	str	x0, [x20, #8]
  40c148:	add	x1, x1, #0x1
  40c14c:	str	x1, [x19, #32]
  40c150:	mov	w0, #0x1                   	// #1
  40c154:	ldp	x19, x20, [sp, #16]
  40c158:	ldr	x21, [sp, #32]
  40c15c:	ldp	x29, x30, [sp], #64
  40c160:	ret
  40c164:	add	x0, x19, #0x28
  40c168:	bl	40b590 <ferror@plt+0x8750>
  40c16c:	ldr	x0, [x19, #16]
  40c170:	ldr	x1, [x19, #40]
  40c174:	ucvtf	s0, x0
  40c178:	ldr	x0, [x19, #24]
  40c17c:	ldr	s2, [x1, #8]
  40c180:	ucvtf	s1, x0
  40c184:	fmul	s3, s2, s0
  40c188:	fcmpe	s1, s3
  40c18c:	b.le	40c11c <ferror@plt+0x92dc>
  40c190:	ldrb	w0, [x1, #16]
  40c194:	ldr	s1, [x1, #12]
  40c198:	fmul	s0, s0, s1
  40c19c:	cbz	w0, 40c200 <ferror@plt+0x93c0>
  40c1a0:	mov	w0, #0x5f800000            	// #1602224128
  40c1a4:	fmov	s1, w0
  40c1a8:	fcmpe	s0, s1
  40c1ac:	b.lt	40c208 <ferror@plt+0x93c8>  // b.tstop
  40c1b0:	mov	w0, #0xffffffff            	// #-1
  40c1b4:	ldp	x19, x20, [sp, #16]
  40c1b8:	ldr	x21, [sp, #32]
  40c1bc:	ldp	x29, x30, [sp], #64
  40c1c0:	ret
  40c1c4:	ldp	x2, x1, [x19, #24]
  40c1c8:	str	x21, [x20]
  40c1cc:	mov	w0, #0x1                   	// #1
  40c1d0:	ldr	x21, [sp, #32]
  40c1d4:	add	x2, x2, #0x1
  40c1d8:	add	x1, x1, #0x1
  40c1dc:	stp	x2, x1, [x19, #24]
  40c1e0:	ldp	x19, x20, [sp, #16]
  40c1e4:	ldp	x29, x30, [sp], #64
  40c1e8:	ret
  40c1ec:	mov	x0, #0x10                  	// #16
  40c1f0:	bl	4028e0 <malloc@plt>
  40c1f4:	cbnz	x0, 40c138 <ferror@plt+0x92f8>
  40c1f8:	mov	w0, #0xffffffff            	// #-1
  40c1fc:	b	40c1b4 <ferror@plt+0x9374>
  40c200:	fmul	s0, s0, s2
  40c204:	b	40c1a0 <ferror@plt+0x9360>
  40c208:	fcvtzu	x1, s0
  40c20c:	mov	x0, x19
  40c210:	bl	40bf58 <ferror@plt+0x9118>
  40c214:	tst	w0, #0xff
  40c218:	b.eq	40c1b0 <ferror@plt+0x9370>  // b.none
  40c21c:	add	x2, sp, #0x38
  40c220:	mov	x1, x21
  40c224:	mov	x0, x19
  40c228:	mov	w3, #0x0                   	// #0
  40c22c:	bl	40b470 <ferror@plt+0x8630>
  40c230:	cbz	x0, 40c11c <ferror@plt+0x92dc>
  40c234:	bl	402a80 <abort@plt>
  40c238:	stp	x29, x30, [sp, #-48]!
  40c23c:	mov	x29, sp
  40c240:	add	x2, sp, #0x28
  40c244:	str	x19, [sp, #16]
  40c248:	mov	x19, x1
  40c24c:	bl	40c0a8 <ferror@plt+0x9268>
  40c250:	cmn	w0, #0x1
  40c254:	b.eq	40c270 <ferror@plt+0x9430>  // b.none
  40c258:	ldr	x1, [sp, #40]
  40c25c:	cmp	w0, #0x0
  40c260:	csel	x0, x1, x19, eq  // eq = none
  40c264:	ldr	x19, [sp, #16]
  40c268:	ldp	x29, x30, [sp], #48
  40c26c:	ret
  40c270:	mov	x0, #0x0                   	// #0
  40c274:	ldr	x19, [sp, #16]
  40c278:	ldp	x29, x30, [sp], #48
  40c27c:	ret
  40c280:	stp	x29, x30, [sp, #-64]!
  40c284:	mov	w3, #0x1                   	// #1
  40c288:	mov	x29, sp
  40c28c:	add	x2, sp, #0x38
  40c290:	stp	x19, x20, [sp, #16]
  40c294:	mov	x19, x0
  40c298:	bl	40b470 <ferror@plt+0x8630>
  40c29c:	mov	x20, x0
  40c2a0:	cbz	x0, 40c2bc <ferror@plt+0x947c>
  40c2a4:	ldr	x1, [sp, #56]
  40c2a8:	ldr	x0, [x19, #32]
  40c2ac:	ldr	x1, [x1]
  40c2b0:	sub	x0, x0, #0x1
  40c2b4:	str	x0, [x19, #32]
  40c2b8:	cbz	x1, 40c2cc <ferror@plt+0x948c>
  40c2bc:	mov	x0, x20
  40c2c0:	ldp	x19, x20, [sp, #16]
  40c2c4:	ldp	x29, x30, [sp], #64
  40c2c8:	ret
  40c2cc:	ldr	x0, [x19, #16]
  40c2d0:	ldr	x1, [x19, #40]
  40c2d4:	ucvtf	s1, x0
  40c2d8:	ldr	x0, [x19, #24]
  40c2dc:	ldr	s0, [x1]
  40c2e0:	sub	x0, x0, #0x1
  40c2e4:	str	x0, [x19, #24]
  40c2e8:	fmul	s1, s1, s0
  40c2ec:	ucvtf	s0, x0
  40c2f0:	fcmpe	s0, s1
  40c2f4:	b.pl	40c2bc <ferror@plt+0x947c>  // b.nfrst
  40c2f8:	add	x0, x19, #0x28
  40c2fc:	bl	40b590 <ferror@plt+0x8750>
  40c300:	ldr	x0, [x19, #16]
  40c304:	ldr	x1, [x19, #40]
  40c308:	ucvtf	s0, x0
  40c30c:	ldr	x0, [x19, #24]
  40c310:	ldr	s1, [x1]
  40c314:	ucvtf	s2, x0
  40c318:	fmul	s1, s0, s1
  40c31c:	fcmpe	s2, s1
  40c320:	b.pl	40c2bc <ferror@plt+0x947c>  // b.nfrst
  40c324:	ldrb	w0, [x1, #16]
  40c328:	ldr	s1, [x1, #4]
  40c32c:	fmul	s0, s0, s1
  40c330:	cbnz	w0, 40c33c <ferror@plt+0x94fc>
  40c334:	ldr	s1, [x1, #8]
  40c338:	fmul	s0, s0, s1
  40c33c:	fcvtzu	x1, s0
  40c340:	mov	x0, x19
  40c344:	bl	40bf58 <ferror@plt+0x9118>
  40c348:	tst	w0, #0xff
  40c34c:	b.ne	40c2bc <ferror@plt+0x947c>  // b.any
  40c350:	str	x21, [sp, #32]
  40c354:	ldr	x21, [x19, #72]
  40c358:	cbz	x21, 40c370 <ferror@plt+0x9530>
  40c35c:	nop
  40c360:	mov	x0, x21
  40c364:	ldr	x21, [x21, #8]
  40c368:	bl	402ba0 <free@plt>
  40c36c:	cbnz	x21, 40c360 <ferror@plt+0x9520>
  40c370:	ldr	x21, [sp, #32]
  40c374:	str	xzr, [x19, #72]
  40c378:	b	40c2bc <ferror@plt+0x947c>
  40c37c:	nop
  40c380:	mov	w0, #0x0                   	// #0
  40c384:	ret
  40c388:	stp	x29, x30, [sp, #-48]!
  40c38c:	mov	x29, sp
  40c390:	stp	x19, x20, [sp, #16]
  40c394:	mov	x19, x1
  40c398:	str	x21, [sp, #32]
  40c39c:	mov	x21, x0
  40c3a0:	mov	x0, #0x20                  	// #32
  40c3a4:	bl	410220 <ferror@plt+0xd3e0>
  40c3a8:	cmp	x19, #0x0
  40c3ac:	csinc	x19, x19, xzr, ne  // ne = any
  40c3b0:	cmp	xzr, x19, lsr #61
  40c3b4:	cset	x1, ne  // ne = any
  40c3b8:	tbnz	x19, #60, 40c400 <ferror@plt+0x95c0>
  40c3bc:	cbnz	x1, 40c400 <ferror@plt+0x95c0>
  40c3c0:	mov	x20, x0
  40c3c4:	lsl	x0, x19, #3
  40c3c8:	bl	410220 <ferror@plt+0xd3e0>
  40c3cc:	mov	x1, x0
  40c3d0:	cmp	x21, #0x0
  40c3d4:	adrp	x2, 40c000 <ferror@plt+0x91c0>
  40c3d8:	add	x2, x2, #0x380
  40c3dc:	stp	x1, x19, [x20]
  40c3e0:	csel	x21, x2, x21, eq  // eq = none
  40c3e4:	str	xzr, [x1]
  40c3e8:	mov	x0, x20
  40c3ec:	stp	xzr, x21, [x20, #16]
  40c3f0:	ldp	x19, x20, [sp, #16]
  40c3f4:	ldr	x21, [sp, #32]
  40c3f8:	ldp	x29, x30, [sp], #48
  40c3fc:	ret
  40c400:	bl	410478 <ferror@plt+0xd638>
  40c404:	nop
  40c408:	stp	x29, x30, [sp, #-32]!
  40c40c:	mov	x29, sp
  40c410:	str	x19, [sp, #16]
  40c414:	mov	x19, x0
  40c418:	ldr	x0, [x0]
  40c41c:	bl	402ba0 <free@plt>
  40c420:	mov	x0, x19
  40c424:	ldr	x19, [sp, #16]
  40c428:	ldp	x29, x30, [sp], #32
  40c42c:	b	402ba0 <free@plt>
  40c430:	stp	x29, x30, [sp, #-64]!
  40c434:	mov	x29, sp
  40c438:	stp	x19, x20, [sp, #16]
  40c43c:	mov	x20, x0
  40c440:	ldp	x2, x19, [x0, #8]
  40c444:	stp	x21, x22, [sp, #32]
  40c448:	mov	x21, x1
  40c44c:	ldr	x0, [x0]
  40c450:	str	x23, [sp, #48]
  40c454:	sub	x1, x2, #0x1
  40c458:	cmp	x1, x19
  40c45c:	b.ls	40c4f0 <ferror@plt+0x96b0>  // b.plast
  40c460:	add	x19, x19, #0x1
  40c464:	str	x19, [x20, #16]
  40c468:	cmp	x19, #0x1
  40c46c:	str	x21, [x0, x19, lsl #3]
  40c470:	ldr	x21, [x20]
  40c474:	ldr	x23, [x20, #24]
  40c478:	ldr	x22, [x21, x19, lsl #3]
  40c47c:	b.ne	40c494 <ferror@plt+0x9654>  // b.any
  40c480:	b	40c4d0 <ferror@plt+0x9690>
  40c484:	ldr	x0, [x21, x19, lsl #3]
  40c488:	str	x0, [x21, x20, lsl #3]
  40c48c:	cmp	x19, #0x1
  40c490:	b.eq	40c4d0 <ferror@plt+0x9690>  // b.none
  40c494:	mov	x20, x19
  40c498:	lsr	x19, x19, #1
  40c49c:	mov	x1, x22
  40c4a0:	ldr	x0, [x21, x19, lsl #3]
  40c4a4:	blr	x23
  40c4a8:	cmp	w0, #0x0
  40c4ac:	add	x1, x21, x20, lsl #3
  40c4b0:	b.le	40c484 <ferror@plt+0x9644>
  40c4b4:	ldp	x19, x20, [sp, #16]
  40c4b8:	mov	w0, #0x0                   	// #0
  40c4bc:	ldr	x23, [sp, #48]
  40c4c0:	str	x22, [x1]
  40c4c4:	ldp	x21, x22, [sp, #32]
  40c4c8:	ldp	x29, x30, [sp], #64
  40c4cc:	ret
  40c4d0:	add	x1, x21, #0x8
  40c4d4:	mov	w0, #0x0                   	// #0
  40c4d8:	ldp	x19, x20, [sp, #16]
  40c4dc:	ldr	x23, [sp, #48]
  40c4e0:	str	x22, [x1]
  40c4e4:	ldp	x21, x22, [sp, #32]
  40c4e8:	ldp	x29, x30, [sp], #64
  40c4ec:	ret
  40c4f0:	cbz	x0, 40c524 <ferror@plt+0x96e4>
  40c4f4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40c4f8:	movk	x1, #0xaaa, lsl #48
  40c4fc:	cmp	x2, x1
  40c500:	b.cs	40c53c <ferror@plt+0x96fc>  // b.hs, b.nlast
  40c504:	add	x1, x2, #0x1
  40c508:	add	x2, x1, x2, lsr #1
  40c50c:	lsl	x1, x2, #3
  40c510:	str	x2, [x20, #8]
  40c514:	bl	410280 <ferror@plt+0xd440>
  40c518:	str	x0, [x20]
  40c51c:	ldr	x19, [x20, #16]
  40c520:	b	40c460 <ferror@plt+0x9620>
  40c524:	cbz	x2, 40c540 <ferror@plt+0x9700>
  40c528:	cmp	xzr, x2, lsr #61
  40c52c:	lsl	x1, x2, #3
  40c530:	cset	x3, ne  // ne = any
  40c534:	tbnz	x2, #60, 40c53c <ferror@plt+0x96fc>
  40c538:	cbz	x3, 40c510 <ferror@plt+0x96d0>
  40c53c:	bl	410478 <ferror@plt+0xd638>
  40c540:	mov	x1, #0x80                  	// #128
  40c544:	mov	x2, #0x10                  	// #16
  40c548:	b	40c510 <ferror@plt+0x96d0>
  40c54c:	nop
  40c550:	stp	x29, x30, [sp, #-112]!
  40c554:	mov	x29, sp
  40c558:	ldr	x1, [x0, #16]
  40c55c:	stp	x25, x26, [sp, #64]
  40c560:	mov	x25, #0x0                   	// #0
  40c564:	cbz	x1, 40c62c <ferror@plt+0x97ec>
  40c568:	ldr	x2, [x0]
  40c56c:	stp	x19, x20, [sp, #16]
  40c570:	stp	x23, x24, [sp, #48]
  40c574:	sub	x23, x1, #0x1
  40c578:	stp	x27, x28, [sp, #80]
  40c57c:	lsr	x3, x23, #1
  40c580:	cmp	xzr, x23, lsr #1
  40c584:	ldr	x1, [x2, x1, lsl #3]
  40c588:	str	x3, [sp, #104]
  40c58c:	ldr	x25, [x2, #8]
  40c590:	str	x23, [x0, #16]
  40c594:	str	x1, [x2, #8]
  40c598:	ldr	x19, [x0]
  40c59c:	ldr	x24, [x0, #24]
  40c5a0:	ldr	x27, [x19, #8]
  40c5a4:	b.eq	40c648 <ferror@plt+0x9808>  // b.none
  40c5a8:	stp	x21, x22, [sp, #32]
  40c5ac:	mov	x21, #0x1                   	// #1
  40c5b0:	b	40c5cc <ferror@plt+0x978c>
  40c5b4:	ldr	x0, [sp, #104]
  40c5b8:	cmp	x22, x0
  40c5bc:	ldr	x0, [x20]
  40c5c0:	str	x0, [x19, x21, lsl #3]
  40c5c4:	mov	x21, x22
  40c5c8:	b.hi	40c63c <ferror@plt+0x97fc>  // b.pmore
  40c5cc:	lsl	x0, x21, #4
  40c5d0:	lsl	x22, x21, #1
  40c5d4:	cmp	x23, x21, lsl #1
  40c5d8:	add	x20, x19, x0
  40c5dc:	add	x28, x22, #0x1
  40c5e0:	b.ls	40c600 <ferror@plt+0x97c0>  // b.plast
  40c5e4:	ldr	x0, [x19, x0]
  40c5e8:	add	x26, x19, x28, lsl #3
  40c5ec:	ldr	x1, [x19, x28, lsl #3]
  40c5f0:	blr	x24
  40c5f4:	cmp	w0, #0x0
  40c5f8:	csel	x20, x20, x26, ge  // ge = tcont
  40c5fc:	csel	x22, x22, x28, ge  // ge = tcont
  40c600:	ldr	x0, [x20]
  40c604:	mov	x1, x27
  40c608:	blr	x24
  40c60c:	cmp	w0, #0x0
  40c610:	add	x0, x19, x21, lsl #3
  40c614:	b.gt	40c5b4 <ferror@plt+0x9774>
  40c618:	ldp	x21, x22, [sp, #32]
  40c61c:	ldp	x19, x20, [sp, #16]
  40c620:	ldp	x23, x24, [sp, #48]
  40c624:	str	x27, [x0]
  40c628:	ldp	x27, x28, [sp, #80]
  40c62c:	mov	x0, x25
  40c630:	ldp	x25, x26, [sp, #64]
  40c634:	ldp	x29, x30, [sp], #112
  40c638:	ret
  40c63c:	mov	x0, x20
  40c640:	ldp	x21, x22, [sp, #32]
  40c644:	b	40c61c <ferror@plt+0x97dc>
  40c648:	add	x0, x19, #0x8
  40c64c:	b	40c61c <ferror@plt+0x97dc>
  40c650:	strb	wzr, [x1, #11]
  40c654:	mov	w4, #0xcccd                	// #52429
  40c658:	mov	w2, w0
  40c65c:	movk	w4, #0xcccc, lsl #16
  40c660:	add	x0, x1, #0xb
  40c664:	tbnz	w2, #31, 40c68c <ferror@plt+0x984c>
  40c668:	umull	x3, w2, w4
  40c66c:	lsr	x3, x3, #35
  40c670:	add	w1, w3, w3, lsl #2
  40c674:	sub	w1, w2, w1, lsl #1
  40c678:	mov	w2, w3
  40c67c:	add	w1, w1, #0x30
  40c680:	strb	w1, [x0, #-1]!
  40c684:	cbnz	w3, 40c668 <ferror@plt+0x9828>
  40c688:	ret
  40c68c:	mov	w6, #0x6667                	// #26215
  40c690:	mov	w5, #0x30                  	// #48
  40c694:	movk	w6, #0x6666, lsl #16
  40c698:	smull	x1, w2, w6
  40c69c:	mov	x4, x0
  40c6a0:	asr	x1, x1, #34
  40c6a4:	sub	w1, w1, w2, asr #31
  40c6a8:	add	w3, w1, w1, lsl #2
  40c6ac:	sub	w3, w2, w3, lsl #1
  40c6b0:	mov	w2, w1
  40c6b4:	sub	w1, w5, w3
  40c6b8:	strb	w1, [x0, #-1]!
  40c6bc:	cbnz	w2, 40c698 <ferror@plt+0x9858>
  40c6c0:	mov	w1, #0x2d                  	// #45
  40c6c4:	sturb	w1, [x0, #-1]
  40c6c8:	sub	x0, x4, #0x2
  40c6cc:	ret
  40c6d0:	mov	w3, w0
  40c6d4:	mov	w4, #0xcccd                	// #52429
  40c6d8:	add	x0, x1, #0xa
  40c6dc:	movk	w4, #0xcccc, lsl #16
  40c6e0:	strb	wzr, [x1, #10]
  40c6e4:	nop
  40c6e8:	umull	x2, w3, w4
  40c6ec:	cmp	w3, #0x9
  40c6f0:	lsr	x2, x2, #35
  40c6f4:	add	w1, w2, w2, lsl #2
  40c6f8:	sub	w1, w3, w1, lsl #1
  40c6fc:	mov	w3, w2
  40c700:	add	w1, w1, #0x30
  40c704:	strb	w1, [x0, #-1]!
  40c708:	b.hi	40c6e8 <ferror@plt+0x98a8>  // b.pmore
  40c70c:	ret
  40c710:	mov	x3, x0
  40c714:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40c718:	add	x0, x1, #0x14
  40c71c:	movk	x4, #0xcccd
  40c720:	strb	wzr, [x1, #20]
  40c724:	nop
  40c728:	umulh	x2, x3, x4
  40c72c:	cmp	x3, #0x9
  40c730:	lsr	x2, x2, #3
  40c734:	add	x1, x2, x2, lsl #2
  40c738:	sub	x1, x3, x1, lsl #1
  40c73c:	mov	x3, x2
  40c740:	add	w1, w1, #0x30
  40c744:	strb	w1, [x0, #-1]!
  40c748:	b.hi	40c728 <ferror@plt+0x98e8>  // b.pmore
  40c74c:	ret
  40c750:	stp	x29, x30, [sp, #-96]!
  40c754:	mov	x29, sp
  40c758:	stp	x19, x20, [sp, #16]
  40c75c:	add	x20, x0, x1
  40c760:	stp	x21, x22, [sp, #32]
  40c764:	mov	w22, w2
  40c768:	stp	x23, x24, [sp, #48]
  40c76c:	mov	x24, x0
  40c770:	bl	402bb0 <__ctype_get_mb_cur_max@plt>
  40c774:	cmp	x0, #0x1
  40c778:	b.ls	40c8ac <ferror@plt+0x9a6c>  // b.plast
  40c77c:	cmp	x24, x20
  40c780:	b.cs	40c930 <ferror@plt+0x9af0>  // b.hs, b.nlast
  40c784:	and	w23, w22, #0x2
  40c788:	mov	w19, #0x0                   	// #0
  40c78c:	mov	x21, #0x1                   	// #1
  40c790:	stp	x25, x26, [sp, #64]
  40c794:	nop
  40c798:	ldrb	w3, [x24]
  40c79c:	cmp	w3, #0x5f
  40c7a0:	b.hi	40c898 <ferror@plt+0x9a58>  // b.pmore
  40c7a4:	cmp	w3, #0x40
  40c7a8:	b.hi	40c86c <ferror@plt+0x9a2c>  // b.pmore
  40c7ac:	cmp	w3, #0x23
  40c7b0:	b.hi	40c85c <ferror@plt+0x9a1c>  // b.pmore
  40c7b4:	cmp	w3, #0x1f
  40c7b8:	b.hi	40c86c <ferror@plt+0x9a2c>  // b.pmore
  40c7bc:	mov	w26, #0x7fffffff            	// #2147483647
  40c7c0:	str	xzr, [sp, #88]
  40c7c4:	b	40c7e4 <ferror@plt+0x99a4>
  40c7c8:	cmp	w1, w0
  40c7cc:	b.lt	40c83c <ferror@plt+0x99fc>  // b.tstop
  40c7d0:	add	w19, w19, w0
  40c7d4:	add	x24, x24, x25
  40c7d8:	add	x0, sp, #0x58
  40c7dc:	bl	402ac0 <mbsinit@plt>
  40c7e0:	cbnz	w0, 40c874 <ferror@plt+0x9a34>
  40c7e4:	add	x3, sp, #0x58
  40c7e8:	sub	x2, x20, x24
  40c7ec:	mov	x1, x24
  40c7f0:	add	x0, sp, #0x54
  40c7f4:	bl	4116b8 <ferror@plt+0xe878>
  40c7f8:	cmn	x0, #0x1
  40c7fc:	b.eq	40c8fc <ferror@plt+0x9abc>  // b.none
  40c800:	cmn	x0, #0x2
  40c804:	b.eq	40c920 <ferror@plt+0x9ae0>  // b.none
  40c808:	cmp	x0, #0x0
  40c80c:	csel	x25, x0, x21, ne  // ne = any
  40c810:	ldr	w0, [sp, #84]
  40c814:	bl	4028f0 <wcwidth@plt>
  40c818:	sub	w1, w26, w19
  40c81c:	tbz	w0, #31, 40c7c8 <ferror@plt+0x9988>
  40c820:	cbnz	w23, 40c900 <ferror@plt+0x9ac0>
  40c824:	ldr	w0, [sp, #84]
  40c828:	bl	402800 <iswcntrl@plt>
  40c82c:	cbnz	w0, 40c7d4 <ferror@plt+0x9994>
  40c830:	cmp	w19, w26
  40c834:	add	w19, w19, #0x1
  40c838:	b.ne	40c7d4 <ferror@plt+0x9994>  // b.any
  40c83c:	ldp	x25, x26, [sp, #64]
  40c840:	mov	w19, #0x7fffffff            	// #2147483647
  40c844:	mov	w0, w19
  40c848:	ldp	x19, x20, [sp, #16]
  40c84c:	ldp	x21, x22, [sp, #32]
  40c850:	ldp	x23, x24, [sp, #48]
  40c854:	ldp	x29, x30, [sp], #96
  40c858:	ret
  40c85c:	sub	w3, w3, #0x25
  40c860:	and	w3, w3, #0xff
  40c864:	cmp	w3, #0x1a
  40c868:	b.hi	40c7bc <ferror@plt+0x997c>  // b.pmore
  40c86c:	add	x24, x24, #0x1
  40c870:	add	w19, w19, #0x1
  40c874:	cmp	x24, x20
  40c878:	b.cc	40c798 <ferror@plt+0x9958>  // b.lo, b.ul, b.last
  40c87c:	mov	w0, w19
  40c880:	ldp	x19, x20, [sp, #16]
  40c884:	ldp	x21, x22, [sp, #32]
  40c888:	ldp	x23, x24, [sp, #48]
  40c88c:	ldp	x25, x26, [sp, #64]
  40c890:	ldp	x29, x30, [sp], #96
  40c894:	ret
  40c898:	sub	w3, w3, #0x61
  40c89c:	and	w3, w3, #0xff
  40c8a0:	cmp	w3, #0x1d
  40c8a4:	b.ls	40c86c <ferror@plt+0x9a2c>  // b.plast
  40c8a8:	b	40c7bc <ferror@plt+0x997c>
  40c8ac:	cmp	x24, x20
  40c8b0:	b.cs	40c930 <ferror@plt+0x9af0>  // b.hs, b.nlast
  40c8b4:	bl	402b60 <__ctype_b_loc@plt>
  40c8b8:	and	w22, w22, #0x2
  40c8bc:	mov	w19, #0x0                   	// #0
  40c8c0:	mov	w2, #0x7fffffff            	// #2147483647
  40c8c4:	ldr	x1, [x0]
  40c8c8:	b	40c8e4 <ferror@plt+0x9aa4>
  40c8cc:	tbnz	w0, #1, 40c8dc <ferror@plt+0x9a9c>
  40c8d0:	cmp	w19, w2
  40c8d4:	b.eq	40c844 <ferror@plt+0x9a04>  // b.none
  40c8d8:	add	w19, w19, #0x1
  40c8dc:	cmp	x20, x24
  40c8e0:	b.eq	40c844 <ferror@plt+0x9a04>  // b.none
  40c8e4:	ldrb	w0, [x24], #1
  40c8e8:	ldrh	w0, [x1, x0, lsl #1]
  40c8ec:	tbnz	w0, #14, 40c8d0 <ferror@plt+0x9a90>
  40c8f0:	cbz	w22, 40c8cc <ferror@plt+0x9a8c>
  40c8f4:	mov	w19, #0xffffffff            	// #-1
  40c8f8:	b	40c844 <ferror@plt+0x9a04>
  40c8fc:	tbz	w22, #0, 40c86c <ferror@plt+0x9a2c>
  40c900:	mov	w19, #0xffffffff            	// #-1
  40c904:	mov	w0, w19
  40c908:	ldp	x19, x20, [sp, #16]
  40c90c:	ldp	x21, x22, [sp, #32]
  40c910:	ldp	x23, x24, [sp, #48]
  40c914:	ldp	x25, x26, [sp, #64]
  40c918:	ldp	x29, x30, [sp], #96
  40c91c:	ret
  40c920:	tbnz	w22, #0, 40c900 <ferror@plt+0x9ac0>
  40c924:	add	w19, w19, #0x1
  40c928:	mov	x24, x20
  40c92c:	b	40c874 <ferror@plt+0x9a34>
  40c930:	mov	w19, #0x0                   	// #0
  40c934:	b	40c844 <ferror@plt+0x9a04>
  40c938:	stp	x29, x30, [sp, #-32]!
  40c93c:	mov	x29, sp
  40c940:	stp	x19, x20, [sp, #16]
  40c944:	mov	w20, w1
  40c948:	mov	x19, x0
  40c94c:	bl	402780 <strlen@plt>
  40c950:	mov	x1, x0
  40c954:	mov	w2, w20
  40c958:	mov	x0, x19
  40c95c:	ldp	x19, x20, [sp, #16]
  40c960:	ldp	x29, x30, [sp], #32
  40c964:	b	40c750 <ferror@plt+0x9910>
  40c968:	stp	x29, x30, [sp, #-144]!
  40c96c:	mov	x1, #0x80                  	// #128
  40c970:	mov	w0, #0x0                   	// #0
  40c974:	mov	x29, sp
  40c978:	add	x2, sp, #0x10
  40c97c:	bl	402aa0 <sched_getaffinity@plt>
  40c980:	cbz	w0, 40c990 <ferror@plt+0x9b50>
  40c984:	mov	x0, #0x0                   	// #0
  40c988:	ldp	x29, x30, [sp], #144
  40c98c:	ret
  40c990:	add	x1, sp, #0x10
  40c994:	mov	x0, #0x80                  	// #128
  40c998:	bl	402c40 <__sched_cpucount@plt>
  40c99c:	mov	w1, w0
  40c9a0:	sxtw	x0, w0
  40c9a4:	cbz	w1, 40c984 <ferror@plt+0x9b44>
  40c9a8:	ldp	x29, x30, [sp], #144
  40c9ac:	ret
  40c9b0:	ldrb	w1, [x0]
  40c9b4:	cbz	w1, 40c9c8 <ferror@plt+0x9b88>
  40c9b8:	cmp	w1, #0xd
  40c9bc:	b.hi	40c9d0 <ferror@plt+0x9b90>  // b.pmore
  40c9c0:	cmp	w1, #0x8
  40c9c4:	b.hi	40ca2c <ferror@plt+0x9bec>  // b.pmore
  40c9c8:	mov	x0, #0x0                   	// #0
  40c9cc:	ret
  40c9d0:	cmp	w1, #0x20
  40c9d4:	b.eq	40ca2c <ferror@plt+0x9bec>  // b.none
  40c9d8:	sub	w1, w1, #0x30
  40c9dc:	cmp	w1, #0x9
  40c9e0:	b.hi	40c9c8 <ferror@plt+0x9b88>  // b.pmore
  40c9e4:	stp	x29, x30, [sp, #-32]!
  40c9e8:	mov	w2, #0xa                   	// #10
  40c9ec:	mov	x29, sp
  40c9f0:	add	x1, sp, #0x18
  40c9f4:	str	xzr, [sp, #24]
  40c9f8:	bl	402770 <strtoul@plt>
  40c9fc:	ldr	x2, [sp, #24]
  40ca00:	cbz	x2, 40ca20 <ferror@plt+0x9be0>
  40ca04:	ldrb	w1, [x2]
  40ca08:	cbz	w1, 40ca24 <ferror@plt+0x9be4>
  40ca0c:	add	x2, x2, #0x1
  40ca10:	cmp	w1, #0xd
  40ca14:	b.hi	40ca4c <ferror@plt+0x9c0c>  // b.pmore
  40ca18:	cmp	w1, #0x8
  40ca1c:	b.hi	40ca38 <ferror@plt+0x9bf8>  // b.pmore
  40ca20:	mov	x0, #0x0                   	// #0
  40ca24:	ldp	x29, x30, [sp], #32
  40ca28:	ret
  40ca2c:	ldrb	w1, [x0, #1]!
  40ca30:	cbnz	w1, 40c9b8 <ferror@plt+0x9b78>
  40ca34:	b	40c9c8 <ferror@plt+0x9b88>
  40ca38:	str	x2, [sp, #24]
  40ca3c:	ldrb	w1, [x2], #1
  40ca40:	cbz	w1, 40ca24 <ferror@plt+0x9be4>
  40ca44:	cmp	w1, #0xd
  40ca48:	b.ls	40ca18 <ferror@plt+0x9bd8>  // b.plast
  40ca4c:	cmp	w1, #0x20
  40ca50:	b.eq	40ca38 <ferror@plt+0x9bf8>  // b.none
  40ca54:	cmp	w1, #0x2c
  40ca58:	b.eq	40ca24 <ferror@plt+0x9be4>  // b.none
  40ca5c:	b	40ca20 <ferror@plt+0x9be0>
  40ca60:	stp	x29, x30, [sp, #-32]!
  40ca64:	cmp	w0, #0x2
  40ca68:	mov	x29, sp
  40ca6c:	stp	x19, x20, [sp, #16]
  40ca70:	b.eq	40caa4 <ferror@plt+0x9c64>  // b.none
  40ca74:	cmp	w0, #0x1
  40ca78:	b.eq	40cb58 <ferror@plt+0x9d18>  // b.none
  40ca7c:	mov	w0, #0x53                  	// #83
  40ca80:	bl	402d00 <sysconf@plt>
  40ca84:	mov	x19, x0
  40ca88:	cmp	x0, #0x1
  40ca8c:	b.eq	40cb24 <ferror@plt+0x9ce4>  // b.none
  40ca90:	cmp	x19, #0x0
  40ca94:	csinc	x0, x19, xzr, gt
  40ca98:	ldp	x19, x20, [sp, #16]
  40ca9c:	ldp	x29, x30, [sp], #32
  40caa0:	ret
  40caa4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40caa8:	add	x0, x0, #0xa90
  40caac:	bl	402dd0 <getenv@plt>
  40cab0:	cbz	x0, 40cb3c <ferror@plt+0x9cfc>
  40cab4:	bl	40c9b0 <ferror@plt+0x9b70>
  40cab8:	mov	x19, x0
  40cabc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40cac0:	add	x0, x0, #0xaa0
  40cac4:	bl	402dd0 <getenv@plt>
  40cac8:	cbz	x0, 40cb60 <ferror@plt+0x9d20>
  40cacc:	bl	40c9b0 <ferror@plt+0x9b70>
  40cad0:	cmp	x0, #0x0
  40cad4:	csinv	x20, x0, xzr, ne  // ne = any
  40cad8:	cmp	x20, x19
  40cadc:	csel	x0, x20, x19, ls  // ls = plast
  40cae0:	cbnz	x19, 40ca98 <ferror@plt+0x9c58>
  40cae4:	bl	40c968 <ferror@plt+0x9b28>
  40cae8:	cbz	x0, 40cb00 <ferror@plt+0x9cc0>
  40caec:	cmp	x0, x20
  40caf0:	csel	x0, x0, x20, ls  // ls = plast
  40caf4:	ldp	x19, x20, [sp, #16]
  40caf8:	ldp	x29, x30, [sp], #32
  40cafc:	ret
  40cb00:	mov	w0, #0x54                  	// #84
  40cb04:	bl	402d00 <sysconf@plt>
  40cb08:	mov	x1, x0
  40cb0c:	mov	x0, #0x1                   	// #1
  40cb10:	cmp	x1, #0x0
  40cb14:	b.le	40ca98 <ferror@plt+0x9c58>
  40cb18:	cmp	x1, x20
  40cb1c:	csel	x0, x1, x20, ls  // ls = plast
  40cb20:	b	40ca98 <ferror@plt+0x9c58>
  40cb24:	bl	40c968 <ferror@plt+0x9b28>
  40cb28:	mov	x1, x0
  40cb2c:	mov	x0, x19
  40cb30:	cbz	x1, 40ca98 <ferror@plt+0x9c58>
  40cb34:	mov	x19, x1
  40cb38:	b	40ca90 <ferror@plt+0x9c50>
  40cb3c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40cb40:	add	x0, x0, #0xaa0
  40cb44:	bl	402dd0 <getenv@plt>
  40cb48:	cbz	x0, 40cb58 <ferror@plt+0x9d18>
  40cb4c:	bl	40c9b0 <ferror@plt+0x9b70>
  40cb50:	mov	x20, x0
  40cb54:	cbnz	x0, 40cae4 <ferror@plt+0x9ca4>
  40cb58:	mov	x20, #0xffffffffffffffff    	// #-1
  40cb5c:	b	40cae4 <ferror@plt+0x9ca4>
  40cb60:	mov	x20, #0xffffffffffffffff    	// #-1
  40cb64:	b	40cad8 <ferror@plt+0x9c98>
  40cb68:	stp	x29, x30, [sp, #-144]!
  40cb6c:	mov	w0, #0x55                  	// #85
  40cb70:	mov	x29, sp
  40cb74:	str	d8, [sp, #16]
  40cb78:	bl	402d00 <sysconf@plt>
  40cb7c:	mov	x1, x0
  40cb80:	mov	w0, #0x1e                  	// #30
  40cb84:	scvtf	d8, x1
  40cb88:	bl	402d00 <sysconf@plt>
  40cb8c:	fcmpe	d8, #0.0
  40cb90:	b.lt	40cba4 <ferror@plt+0x9d64>  // b.tstop
  40cb94:	fmov	d0, x0
  40cb98:	scvtf	d0, d0
  40cb9c:	fcmpe	d0, #0.0
  40cba0:	b.ge	40cbd4 <ferror@plt+0x9d94>  // b.tcont
  40cba4:	add	x0, sp, #0x20
  40cba8:	bl	4027c0 <sysinfo@plt>
  40cbac:	mov	x1, #0x4190000000000000    	// #4724276009111650304
  40cbb0:	fmov	d0, x1
  40cbb4:	cbz	w0, 40cbc4 <ferror@plt+0x9d84>
  40cbb8:	ldr	d8, [sp, #16]
  40cbbc:	ldp	x29, x30, [sp], #144
  40cbc0:	ret
  40cbc4:	ldr	d0, [sp, #64]
  40cbc8:	ldr	w0, [sp, #136]
  40cbcc:	ucvtf	d0, d0
  40cbd0:	ucvtf	d8, w0
  40cbd4:	fmul	d0, d0, d8
  40cbd8:	ldr	d8, [sp, #16]
  40cbdc:	ldp	x29, x30, [sp], #144
  40cbe0:	ret
  40cbe4:	nop
  40cbe8:	stp	x29, x30, [sp, #-144]!
  40cbec:	mov	w0, #0x56                  	// #86
  40cbf0:	mov	x29, sp
  40cbf4:	str	d8, [sp, #16]
  40cbf8:	bl	402d00 <sysconf@plt>
  40cbfc:	mov	x1, x0
  40cc00:	mov	w0, #0x1e                  	// #30
  40cc04:	scvtf	d8, x1
  40cc08:	bl	402d00 <sysconf@plt>
  40cc0c:	fcmpe	d8, #0.0
  40cc10:	b.lt	40cc24 <ferror@plt+0x9de4>  // b.tstop
  40cc14:	fmov	d0, x0
  40cc18:	scvtf	d0, d0
  40cc1c:	fcmpe	d0, #0.0
  40cc20:	b.ge	40cc64 <ferror@plt+0x9e24>  // b.tcont
  40cc24:	add	x0, sp, #0x20
  40cc28:	bl	4027c0 <sysinfo@plt>
  40cc2c:	cbnz	w0, 40cc5c <ferror@plt+0x9e1c>
  40cc30:	ldr	d0, [sp, #72]
  40cc34:	ldr	d1, [sp, #88]
  40cc38:	ucvtf	d0, d0
  40cc3c:	ldr	w0, [sp, #136]
  40cc40:	ucvtf	d1, d1
  40cc44:	ucvtf	d8, w0
  40cc48:	fadd	d0, d0, d1
  40cc4c:	fmul	d0, d0, d8
  40cc50:	ldr	d8, [sp, #16]
  40cc54:	ldp	x29, x30, [sp], #144
  40cc58:	ret
  40cc5c:	bl	40cb68 <ferror@plt+0x9d28>
  40cc60:	fmov	d8, #2.500000000000000000e-01
  40cc64:	fmul	d0, d0, d8
  40cc68:	ldr	d8, [sp, #16]
  40cc6c:	ldp	x29, x30, [sp], #144
  40cc70:	ret
  40cc74:	nop
  40cc78:	stp	x29, x30, [sp, #-64]!
  40cc7c:	mov	x29, sp
  40cc80:	stp	x21, x22, [sp, #32]
  40cc84:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x17498>
  40cc88:	ldr	w2, [x22, #2988]
  40cc8c:	stp	x19, x20, [sp, #16]
  40cc90:	mov	x19, x0
  40cc94:	mov	w20, w1
  40cc98:	str	x23, [sp, #48]
  40cc9c:	ldr	x23, [x0]
  40cca0:	tbz	w2, #31, 40cdd4 <ferror@plt+0x9f94>
  40cca4:	mov	w21, #0xf7ff                	// #63487
  40cca8:	movk	w21, #0xfff7, lsl #16
  40ccac:	ands	w21, w20, w21
  40ccb0:	b.ne	40ce1c <ferror@plt+0x9fdc>  // b.any
  40ccb4:	mov	x0, x19
  40ccb8:	bl	4027e0 <pipe@plt>
  40ccbc:	tbnz	w0, #31, 40ce30 <ferror@plt+0x9ff0>
  40ccc0:	tbnz	w20, #11, 40cce0 <ferror@plt+0x9ea0>
  40ccc4:	tbnz	w20, #19, 40cd64 <ferror@plt+0x9f24>
  40ccc8:	mov	w0, w21
  40cccc:	ldp	x19, x20, [sp, #16]
  40ccd0:	ldp	x21, x22, [sp, #32]
  40ccd4:	ldr	x23, [sp, #48]
  40ccd8:	ldp	x29, x30, [sp], #64
  40ccdc:	ret
  40cce0:	ldr	w0, [x19, #4]
  40cce4:	mov	w2, #0x0                   	// #0
  40cce8:	mov	w1, #0x3                   	// #3
  40ccec:	bl	411380 <ferror@plt+0xe540>
  40ccf0:	tbnz	w0, #31, 40cd38 <ferror@plt+0x9ef8>
  40ccf4:	orr	w2, w0, #0x800
  40ccf8:	ldr	w0, [x19, #4]
  40ccfc:	mov	w1, #0x4                   	// #4
  40cd00:	bl	411380 <ferror@plt+0xe540>
  40cd04:	cmn	w0, #0x1
  40cd08:	b.eq	40cd38 <ferror@plt+0x9ef8>  // b.none
  40cd0c:	ldr	w0, [x19]
  40cd10:	mov	w2, #0x0                   	// #0
  40cd14:	mov	w1, #0x3                   	// #3
  40cd18:	bl	411380 <ferror@plt+0xe540>
  40cd1c:	tbnz	w0, #31, 40cd38 <ferror@plt+0x9ef8>
  40cd20:	orr	w2, w0, #0x800
  40cd24:	ldr	w0, [x19]
  40cd28:	mov	w1, #0x4                   	// #4
  40cd2c:	bl	411380 <ferror@plt+0xe540>
  40cd30:	cmn	w0, #0x1
  40cd34:	b.ne	40ccc4 <ferror@plt+0x9e84>  // b.any
  40cd38:	bl	402db0 <__errno_location@plt>
  40cd3c:	mov	x20, x0
  40cd40:	ldr	w0, [x19]
  40cd44:	mov	w21, #0xffffffff            	// #-1
  40cd48:	ldr	w22, [x20]
  40cd4c:	bl	402a10 <close@plt>
  40cd50:	ldr	w0, [x19, #4]
  40cd54:	bl	402a10 <close@plt>
  40cd58:	str	x23, [x19]
  40cd5c:	str	w22, [x20]
  40cd60:	b	40ccc8 <ferror@plt+0x9e88>
  40cd64:	ldr	w0, [x19, #4]
  40cd68:	mov	w2, #0x0                   	// #0
  40cd6c:	mov	w1, #0x1                   	// #1
  40cd70:	bl	411380 <ferror@plt+0xe540>
  40cd74:	tbnz	w0, #31, 40cd38 <ferror@plt+0x9ef8>
  40cd78:	orr	w2, w0, #0x1
  40cd7c:	ldr	w0, [x19, #4]
  40cd80:	mov	w1, #0x2                   	// #2
  40cd84:	bl	411380 <ferror@plt+0xe540>
  40cd88:	cmn	w0, #0x1
  40cd8c:	b.eq	40cd38 <ferror@plt+0x9ef8>  // b.none
  40cd90:	ldr	w0, [x19]
  40cd94:	mov	w2, #0x0                   	// #0
  40cd98:	mov	w1, #0x1                   	// #1
  40cd9c:	bl	411380 <ferror@plt+0xe540>
  40cda0:	tbnz	w0, #31, 40cd38 <ferror@plt+0x9ef8>
  40cda4:	orr	w2, w0, #0x1
  40cda8:	ldr	w0, [x19]
  40cdac:	mov	w1, #0x2                   	// #2
  40cdb0:	bl	411380 <ferror@plt+0xe540>
  40cdb4:	cmn	w0, #0x1
  40cdb8:	b.eq	40cd38 <ferror@plt+0x9ef8>  // b.none
  40cdbc:	mov	w0, w21
  40cdc0:	ldp	x19, x20, [sp, #16]
  40cdc4:	ldp	x21, x22, [sp, #32]
  40cdc8:	ldr	x23, [sp, #48]
  40cdcc:	ldp	x29, x30, [sp], #64
  40cdd0:	ret
  40cdd4:	bl	402ae0 <pipe2@plt>
  40cdd8:	mov	w21, w0
  40cddc:	tbz	w0, #31, 40cdf0 <ferror@plt+0x9fb0>
  40cde0:	bl	402db0 <__errno_location@plt>
  40cde4:	ldr	w0, [x0]
  40cde8:	cmp	w0, #0x26
  40cdec:	b.eq	40ce10 <ferror@plt+0x9fd0>  // b.none
  40cdf0:	mov	w0, #0x1                   	// #1
  40cdf4:	str	w0, [x22, #2988]
  40cdf8:	mov	w0, w21
  40cdfc:	ldp	x19, x20, [sp, #16]
  40ce00:	ldp	x21, x22, [sp, #32]
  40ce04:	ldr	x23, [sp, #48]
  40ce08:	ldp	x29, x30, [sp], #64
  40ce0c:	ret
  40ce10:	mov	w0, #0xffffffff            	// #-1
  40ce14:	str	w0, [x22, #2988]
  40ce18:	b	40cca4 <ferror@plt+0x9e64>
  40ce1c:	bl	402db0 <__errno_location@plt>
  40ce20:	mov	w21, #0xffffffff            	// #-1
  40ce24:	mov	w1, #0x16                  	// #22
  40ce28:	str	w1, [x0]
  40ce2c:	b	40ccc8 <ferror@plt+0x9e88>
  40ce30:	mov	w21, #0xffffffff            	// #-1
  40ce34:	b	40ccc8 <ferror@plt+0x9e88>
  40ce38:	stp	x29, x30, [sp, #-48]!
  40ce3c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40ce40:	add	x0, x0, #0xab8
  40ce44:	mov	x29, sp
  40ce48:	str	x19, [sp, #16]
  40ce4c:	bl	402dd0 <getenv@plt>
  40ce50:	cbz	x0, 40ceb4 <ferror@plt+0xa074>
  40ce54:	ldrb	w1, [x0]
  40ce58:	mov	w19, #0x1069                	// #4201
  40ce5c:	movk	w19, #0x3, lsl #16
  40ce60:	cbnz	w1, 40ce74 <ferror@plt+0xa034>
  40ce64:	mov	w0, w19
  40ce68:	ldr	x19, [sp, #16]
  40ce6c:	ldp	x29, x30, [sp], #48
  40ce70:	ret
  40ce74:	add	x1, sp, #0x28
  40ce78:	mov	w2, #0xa                   	// #10
  40ce7c:	bl	402b70 <strtol@plt>
  40ce80:	ldr	x1, [sp, #40]
  40ce84:	ldrb	w1, [x1]
  40ce88:	cbnz	w1, 40ce64 <ferror@plt+0xa024>
  40ce8c:	mov	x19, #0xffffffff80000000    	// #-2147483648
  40ce90:	cmp	x0, x19
  40ce94:	b.lt	40ce64 <ferror@plt+0xa024>  // b.tstop
  40ce98:	mov	x19, #0x7fffffff            	// #2147483647
  40ce9c:	cmp	x0, x19
  40cea0:	csel	x19, x0, x19, le
  40cea4:	mov	w0, w19
  40cea8:	ldr	x19, [sp, #16]
  40ceac:	ldp	x29, x30, [sp], #48
  40ceb0:	ret
  40ceb4:	mov	w19, #0x1069                	// #4201
  40ceb8:	movk	w19, #0x3, lsl #16
  40cebc:	mov	w0, w19
  40cec0:	ldr	x19, [sp, #16]
  40cec4:	ldp	x29, x30, [sp], #48
  40cec8:	ret
  40cecc:	nop
  40ced0:	stp	x29, x30, [sp, #-48]!
  40ced4:	mov	x29, sp
  40ced8:	stp	x19, x20, [sp, #16]
  40cedc:	cbz	x0, 40cfb4 <ferror@plt+0xa174>
  40cee0:	mov	x19, x0
  40cee4:	mov	w1, #0x2f                  	// #47
  40cee8:	bl	402a30 <strrchr@plt>
  40ceec:	mov	x20, x0
  40cef0:	cbz	x0, 40cf54 <ferror@plt+0xa114>
  40cef4:	str	x21, [sp, #32]
  40cef8:	add	x21, x0, #0x1
  40cefc:	sub	x0, x21, x19
  40cf00:	cmp	x0, #0x6
  40cf04:	b.le	40cf70 <ferror@plt+0xa130>
  40cf08:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40cf0c:	sub	x0, x20, #0x6
  40cf10:	add	x1, x1, #0xb00
  40cf14:	mov	x2, #0x7                   	// #7
  40cf18:	bl	402940 <strncmp@plt>
  40cf1c:	cbnz	w0, 40cf70 <ferror@plt+0xa130>
  40cf20:	ldrb	w0, [x20, #1]
  40cf24:	cmp	w0, #0x6c
  40cf28:	b.ne	40cf90 <ferror@plt+0xa150>  // b.any
  40cf2c:	ldrb	w0, [x21, #1]
  40cf30:	cmp	w0, #0x74
  40cf34:	b.ne	40cf90 <ferror@plt+0xa150>  // b.any
  40cf38:	ldrb	w0, [x21, #2]
  40cf3c:	cmp	w0, #0x2d
  40cf40:	b.ne	40cf90 <ferror@plt+0xa150>  // b.any
  40cf44:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf48:	add	x19, x20, #0x4
  40cf4c:	ldr	x21, [sp, #32]
  40cf50:	str	x19, [x0, #1360]
  40cf54:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf58:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf5c:	str	x19, [x1, #2992]
  40cf60:	str	x19, [x0, #1312]
  40cf64:	ldp	x19, x20, [sp, #16]
  40cf68:	ldp	x29, x30, [sp], #48
  40cf6c:	ret
  40cf70:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf74:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf78:	ldr	x21, [sp, #32]
  40cf7c:	str	x19, [x1, #2992]
  40cf80:	str	x19, [x0, #1312]
  40cf84:	ldp	x19, x20, [sp, #16]
  40cf88:	ldp	x29, x30, [sp], #48
  40cf8c:	ret
  40cf90:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf94:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40cf98:	mov	x19, x21
  40cf9c:	str	x19, [x1, #2992]
  40cfa0:	str	x19, [x0, #1312]
  40cfa4:	ldp	x19, x20, [sp, #16]
  40cfa8:	ldr	x21, [sp, #32]
  40cfac:	ldp	x29, x30, [sp], #48
  40cfb0:	ret
  40cfb4:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40cfb8:	mov	x2, #0x37                  	// #55
  40cfbc:	mov	x1, #0x1                   	// #1
  40cfc0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40cfc4:	ldr	x3, [x3, #1320]
  40cfc8:	add	x0, x0, #0xac8
  40cfcc:	str	x21, [sp, #32]
  40cfd0:	bl	402c10 <fwrite@plt>
  40cfd4:	bl	402a80 <abort@plt>
  40cfd8:	stp	xzr, xzr, [x8]
  40cfdc:	cmp	w0, #0xa
  40cfe0:	stp	xzr, xzr, [x8, #16]
  40cfe4:	stp	xzr, xzr, [x8, #32]
  40cfe8:	str	xzr, [x8, #48]
  40cfec:	b.eq	40cff8 <ferror@plt+0xa1b8>  // b.none
  40cff0:	str	w0, [x8]
  40cff4:	ret
  40cff8:	stp	x29, x30, [sp, #-16]!
  40cffc:	mov	x29, sp
  40d000:	bl	402a80 <abort@plt>
  40d004:	nop
  40d008:	stp	x29, x30, [sp, #-48]!
  40d00c:	mov	w2, #0x5                   	// #5
  40d010:	mov	x29, sp
  40d014:	stp	x19, x20, [sp, #16]
  40d018:	mov	x20, x0
  40d01c:	str	x21, [sp, #32]
  40d020:	mov	w21, w1
  40d024:	mov	x1, x0
  40d028:	mov	x0, #0x0                   	// #0
  40d02c:	bl	402d20 <dcgettext@plt>
  40d030:	mov	x19, x0
  40d034:	cmp	x20, x0
  40d038:	b.eq	40d050 <ferror@plt+0xa210>  // b.none
  40d03c:	mov	x0, x19
  40d040:	ldp	x19, x20, [sp, #16]
  40d044:	ldr	x21, [sp, #32]
  40d048:	ldp	x29, x30, [sp], #48
  40d04c:	ret
  40d050:	bl	411df0 <_obstack_memory_used@@Base+0x288>
  40d054:	ldrb	w1, [x0]
  40d058:	and	w1, w1, #0xffffffdf
  40d05c:	cmp	w1, #0x55
  40d060:	b.ne	40d0c4 <ferror@plt+0xa284>  // b.any
  40d064:	ldrb	w1, [x0, #1]
  40d068:	and	w1, w1, #0xffffffdf
  40d06c:	cmp	w1, #0x54
  40d070:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d074:	ldrb	w1, [x0, #2]
  40d078:	and	w1, w1, #0xffffffdf
  40d07c:	cmp	w1, #0x46
  40d080:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d084:	ldrb	w1, [x0, #3]
  40d088:	cmp	w1, #0x2d
  40d08c:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d090:	ldrb	w1, [x0, #4]
  40d094:	cmp	w1, #0x38
  40d098:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d09c:	ldrb	w0, [x0, #5]
  40d0a0:	cbnz	w0, 40d140 <ferror@plt+0xa300>
  40d0a4:	ldrb	w1, [x19]
  40d0a8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40d0ac:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2498>
  40d0b0:	add	x0, x0, #0xb10
  40d0b4:	cmp	w1, #0x60
  40d0b8:	add	x19, x19, #0xb28
  40d0bc:	csel	x19, x19, x0, eq  // eq = none
  40d0c0:	b	40d03c <ferror@plt+0xa1fc>
  40d0c4:	cmp	w1, #0x47
  40d0c8:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d0cc:	ldrb	w1, [x0, #1]
  40d0d0:	and	w1, w1, #0xffffffdf
  40d0d4:	cmp	w1, #0x42
  40d0d8:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d0dc:	ldrb	w1, [x0, #2]
  40d0e0:	cmp	w1, #0x31
  40d0e4:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d0e8:	ldrb	w1, [x0, #3]
  40d0ec:	cmp	w1, #0x38
  40d0f0:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d0f4:	ldrb	w1, [x0, #4]
  40d0f8:	cmp	w1, #0x30
  40d0fc:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d100:	ldrb	w1, [x0, #5]
  40d104:	cmp	w1, #0x33
  40d108:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d10c:	ldrb	w1, [x0, #6]
  40d110:	cmp	w1, #0x30
  40d114:	b.ne	40d140 <ferror@plt+0xa300>  // b.any
  40d118:	ldrb	w0, [x0, #7]
  40d11c:	cbnz	w0, 40d140 <ferror@plt+0xa300>
  40d120:	ldrb	w1, [x19]
  40d124:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40d128:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2498>
  40d12c:	add	x0, x0, #0xb18
  40d130:	cmp	w1, #0x60
  40d134:	add	x19, x19, #0xb20
  40d138:	csel	x19, x19, x0, eq  // eq = none
  40d13c:	b	40d03c <ferror@plt+0xa1fc>
  40d140:	cmp	w21, #0x9
  40d144:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40d148:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2498>
  40d14c:	add	x0, x0, #0xb30
  40d150:	add	x19, x19, #0xb08
  40d154:	csel	x19, x19, x0, eq  // eq = none
  40d158:	mov	x0, x19
  40d15c:	ldp	x19, x20, [sp, #16]
  40d160:	ldr	x21, [sp, #32]
  40d164:	ldp	x29, x30, [sp], #48
  40d168:	ret
  40d16c:	nop
  40d170:	sub	sp, sp, #0xf0
  40d174:	stp	x29, x30, [sp, #16]
  40d178:	add	x29, sp, #0x10
  40d17c:	stp	x19, x20, [sp, #32]
  40d180:	mov	w19, w5
  40d184:	and	w20, w5, #0x2
  40d188:	stp	x21, x22, [sp, #48]
  40d18c:	stp	x23, x24, [sp, #64]
  40d190:	mov	x23, x1
  40d194:	stp	x25, x26, [sp, #80]
  40d198:	mov	w26, w4
  40d19c:	mov	x25, x3
  40d1a0:	stp	x27, x28, [sp, #96]
  40d1a4:	mov	x28, x0
  40d1a8:	mov	x27, x2
  40d1ac:	str	x6, [sp, #112]
  40d1b0:	str	w5, [sp, #200]
  40d1b4:	str	x7, [sp, #208]
  40d1b8:	bl	402bb0 <__ctype_get_mb_cur_max@plt>
  40d1bc:	mov	x1, x19
  40d1c0:	str	x0, [sp, #192]
  40d1c4:	cmp	w26, #0x4
  40d1c8:	ubfx	x11, x1, #1, #1
  40d1cc:	ldr	x6, [sp, #112]
  40d1d0:	b.eq	40de68 <ferror@plt+0xb028>  // b.none
  40d1d4:	b.ls	40d23c <ferror@plt+0xa3fc>  // b.plast
  40d1d8:	cmp	w26, #0x7
  40d1dc:	b.eq	40dcf8 <ferror@plt+0xaeb8>  // b.none
  40d1e0:	b.ls	40d964 <ferror@plt+0xab24>  // b.plast
  40d1e4:	sub	w0, w26, #0x8
  40d1e8:	cmp	w0, #0x2
  40d1ec:	b.hi	40e184 <ferror@plt+0xb344>  // b.pmore
  40d1f0:	cmp	w26, #0xa
  40d1f4:	b.ne	40dd6c <ferror@plt+0xaf2c>  // b.any
  40d1f8:	mov	x19, #0x0                   	// #0
  40d1fc:	cbz	w20, 40dfe4 <ferror@plt+0xb1a4>
  40d200:	ldr	x0, [sp, #240]
  40d204:	str	w11, [sp, #136]
  40d208:	str	x6, [sp, #144]
  40d20c:	bl	402780 <strlen@plt>
  40d210:	mov	x12, x0
  40d214:	ldr	x0, [sp, #240]
  40d218:	mov	w10, #0x1                   	// #1
  40d21c:	ldr	w11, [sp, #136]
  40d220:	mov	w5, w10
  40d224:	mov	w7, #0x0                   	// #0
  40d228:	str	x0, [sp, #112]
  40d22c:	str	wzr, [sp, #120]
  40d230:	str	xzr, [sp, #128]
  40d234:	ldr	x6, [sp, #144]
  40d238:	b	40d280 <ferror@plt+0xa440>
  40d23c:	cmp	w26, #0x1
  40d240:	b.eq	40dcc4 <ferror@plt+0xae84>  // b.none
  40d244:	b.ls	40d938 <ferror@plt+0xaaf8>  // b.plast
  40d248:	cmp	w26, #0x2
  40d24c:	b.eq	40de8c <ferror@plt+0xb04c>  // b.none
  40d250:	mov	w10, #0x1                   	// #1
  40d254:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  40d258:	mov	w11, w10
  40d25c:	mov	w5, w10
  40d260:	add	x0, x26, #0xb30
  40d264:	mov	w7, #0x0                   	// #0
  40d268:	mov	x12, #0x1                   	// #1
  40d26c:	mov	x19, #0x0                   	// #0
  40d270:	mov	w26, #0x2                   	// #2
  40d274:	str	x0, [sp, #112]
  40d278:	str	wzr, [sp, #120]
  40d27c:	str	xzr, [sp, #128]
  40d280:	mov	w22, w5
  40d284:	mov	w24, w7
  40d288:	mov	x20, #0x0                   	// #0
  40d28c:	nop
  40d290:	cmp	x25, x20
  40d294:	cset	w21, ne  // ne = any
  40d298:	cmn	x25, #0x1
  40d29c:	b.eq	40d36c <ferror@plt+0xa52c>  // b.none
  40d2a0:	cbz	w21, 40d37c <ferror@plt+0xa53c>
  40d2a4:	cmp	w26, #0x2
  40d2a8:	add	x3, x27, x20
  40d2ac:	cset	w5, ne  // ne = any
  40d2b0:	ands	w5, w22, w5
  40d2b4:	b.eq	40d884 <ferror@plt+0xaa44>  // b.none
  40d2b8:	cbz	x12, 40d578 <ferror@plt+0xa738>
  40d2bc:	cmp	x12, #0x1
  40d2c0:	add	x1, x20, x12
  40d2c4:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  40d2c8:	b.ne	40d300 <ferror@plt+0xa4c0>  // b.any
  40d2cc:	mov	x0, x27
  40d2d0:	str	x1, [sp, #136]
  40d2d4:	str	w5, [sp, #144]
  40d2d8:	stp	x3, x12, [sp, #152]
  40d2dc:	stp	w11, w10, [sp, #172]
  40d2e0:	str	x6, [sp, #184]
  40d2e4:	bl	402780 <strlen@plt>
  40d2e8:	ldp	x3, x12, [sp, #152]
  40d2ec:	mov	x25, x0
  40d2f0:	ldr	w5, [sp, #144]
  40d2f4:	ldp	w11, w10, [sp, #172]
  40d2f8:	ldr	x1, [sp, #136]
  40d2fc:	ldr	x6, [sp, #184]
  40d300:	cmp	x1, x25
  40d304:	b.hi	40d578 <ferror@plt+0xa738>  // b.pmore
  40d308:	ldr	x1, [sp, #112]
  40d30c:	mov	x2, x12
  40d310:	mov	x0, x3
  40d314:	stp	x3, x12, [sp, #136]
  40d318:	str	w5, [sp, #152]
  40d31c:	str	w11, [sp, #160]
  40d320:	str	w10, [sp, #172]
  40d324:	str	x6, [sp, #176]
  40d328:	bl	402b00 <memcmp@plt>
  40d32c:	ldr	w5, [sp, #152]
  40d330:	ldr	w11, [sp, #160]
  40d334:	ldr	w10, [sp, #172]
  40d338:	ldp	x3, x12, [sp, #136]
  40d33c:	ldr	x6, [sp, #176]
  40d340:	cbnz	w0, 40d578 <ferror@plt+0xa738>
  40d344:	cbnz	w11, 40d670 <ferror@plt+0xa830>
  40d348:	ldrb	w4, [x3]
  40d34c:	cmp	w4, #0x7e
  40d350:	b.hi	40d588 <ferror@plt+0xa748>  // b.pmore
  40d354:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40d358:	add	x0, x0, #0xbb0
  40d35c:	ldrh	w0, [x0, w4, uxtw #1]
  40d360:	adr	x1, 40d36c <ferror@plt+0xa52c>
  40d364:	add	x0, x1, w0, sxth #2
  40d368:	br	x0
  40d36c:	ldrb	w0, [x27, x20]
  40d370:	cmp	w0, #0x0
  40d374:	cset	w21, ne  // ne = any
  40d378:	cbnz	w21, 40d2a4 <ferror@plt+0xa464>
  40d37c:	cmp	w26, #0x2
  40d380:	mov	w5, w22
  40d384:	cset	w0, eq  // eq = none
  40d388:	mov	w7, w24
  40d38c:	cmp	w0, #0x0
  40d390:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  40d394:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  40d398:	b.eq	40e12c <ferror@plt+0xb2ec>  // b.none
  40d39c:	eor	w11, w11, #0x1
  40d3a0:	ands	w0, w0, w11
  40d3a4:	b.eq	40e08c <ferror@plt+0xb24c>  // b.none
  40d3a8:	ldr	w1, [sp, #120]
  40d3ac:	cbz	w1, 40e090 <ferror@plt+0xb250>
  40d3b0:	cbnz	w10, 40e0e8 <ferror@plt+0xb2a8>
  40d3b4:	ldr	x2, [sp, #128]
  40d3b8:	cmp	x23, #0x0
  40d3bc:	cset	w0, eq  // eq = none
  40d3c0:	cmp	x2, #0x0
  40d3c4:	mov	x1, x2
  40d3c8:	csel	w0, w0, wzr, ne  // ne = any
  40d3cc:	cbz	w0, 40e118 <ferror@plt+0xb2d8>
  40d3d0:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  40d3d4:	mov	x12, #0x1                   	// #1
  40d3d8:	mov	w11, #0x0                   	// #0
  40d3dc:	mov	x19, x12
  40d3e0:	str	w0, [sp, #120]
  40d3e4:	mov	w0, #0x27                  	// #39
  40d3e8:	strb	w0, [x28]
  40d3ec:	ldr	x23, [sp, #128]
  40d3f0:	str	x1, [sp, #128]
  40d3f4:	add	x1, x26, #0xb30
  40d3f8:	mov	w26, #0x2                   	// #2
  40d3fc:	str	x1, [sp, #112]
  40d400:	b	40d280 <ferror@plt+0xa440>
  40d404:	mov	w0, w5
  40d408:	mov	w21, w5
  40d40c:	mov	w5, w0
  40d410:	mov	w1, #0x0                   	// #0
  40d414:	nop
  40d418:	cbz	x6, 40d530 <ferror@plt+0xa6f0>
  40d41c:	ubfx	x0, x4, #5, #8
  40d420:	ldr	w0, [x6, x0, lsl #2]
  40d424:	lsr	w0, w0, w4
  40d428:	tbz	w0, #0, 40d530 <ferror@plt+0xa6f0>
  40d42c:	cmp	w26, #0x2
  40d430:	cset	w0, eq  // eq = none
  40d434:	cbnz	w11, 40d7b0 <ferror@plt+0xa970>
  40d438:	eor	w1, w24, #0x1
  40d43c:	ands	w0, w0, w1
  40d440:	b.eq	40d484 <ferror@plt+0xa644>  // b.none
  40d444:	cmp	x23, x19
  40d448:	b.ls	40d454 <ferror@plt+0xa614>  // b.plast
  40d44c:	mov	w1, #0x27                  	// #39
  40d450:	strb	w1, [x28, x19]
  40d454:	add	x1, x19, #0x1
  40d458:	cmp	x23, x1
  40d45c:	b.ls	40d468 <ferror@plt+0xa628>  // b.plast
  40d460:	mov	w2, #0x24                  	// #36
  40d464:	strb	w2, [x28, x1]
  40d468:	add	x1, x19, #0x2
  40d46c:	cmp	x23, x1
  40d470:	b.ls	40d47c <ferror@plt+0xa63c>  // b.plast
  40d474:	mov	w2, #0x27                  	// #39
  40d478:	strb	w2, [x28, x1]
  40d47c:	add	x19, x19, #0x3
  40d480:	mov	w24, w0
  40d484:	cmp	x19, x23
  40d488:	b.cs	40d494 <ferror@plt+0xa654>  // b.hs, b.nlast
  40d48c:	mov	w0, #0x5c                  	// #92
  40d490:	strb	w0, [x28, x19]
  40d494:	add	x19, x19, #0x1
  40d498:	add	x20, x20, #0x1
  40d49c:	cmp	x19, x23
  40d4a0:	b.cs	40d4a8 <ferror@plt+0xa668>  // b.hs, b.nlast
  40d4a4:	strb	w4, [x28, x19]
  40d4a8:	cmp	w21, #0x0
  40d4ac:	add	x19, x19, #0x1
  40d4b0:	csel	w10, w10, wzr, ne  // ne = any
  40d4b4:	b	40d290 <ferror@plt+0xa450>
  40d4b8:	cbnz	w11, 40e0d4 <ferror@plt+0xb294>
  40d4bc:	ldr	x1, [sp, #128]
  40d4c0:	cmp	x23, #0x0
  40d4c4:	mov	x0, #0x0                   	// #0
  40d4c8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  40d4cc:	b.eq	40d510 <ferror@plt+0xa6d0>  // b.none
  40d4d0:	cmp	x23, x19
  40d4d4:	b.ls	40d4e0 <ferror@plt+0xa6a0>  // b.plast
  40d4d8:	mov	w0, #0x27                  	// #39
  40d4dc:	strb	w0, [x28, x19]
  40d4e0:	add	x0, x19, #0x1
  40d4e4:	cmp	x23, x0
  40d4e8:	b.ls	40d4f4 <ferror@plt+0xa6b4>  // b.plast
  40d4ec:	mov	w1, #0x5c                  	// #92
  40d4f0:	strb	w1, [x28, x0]
  40d4f4:	add	x1, x19, #0x2
  40d4f8:	mov	x0, x23
  40d4fc:	cmp	x23, x1
  40d500:	b.ls	40e164 <ferror@plt+0xb324>  // b.plast
  40d504:	ldr	x23, [sp, #128]
  40d508:	mov	w2, #0x27                  	// #39
  40d50c:	strb	w2, [x28, x1]
  40d510:	add	x19, x19, #0x3
  40d514:	str	x23, [sp, #128]
  40d518:	mov	x23, x0
  40d51c:	mov	w1, #0x0                   	// #0
  40d520:	mov	w24, #0x0                   	// #0
  40d524:	mov	w4, #0x27                  	// #39
  40d528:	str	w21, [sp, #120]
  40d52c:	nop
  40d530:	cbnz	w5, 40d42c <ferror@plt+0xa5ec>
  40d534:	eor	w1, w1, #0x1
  40d538:	add	x20, x20, #0x1
  40d53c:	and	w1, w24, w1
  40d540:	and	w1, w1, #0xff
  40d544:	cbz	w1, 40d49c <ferror@plt+0xa65c>
  40d548:	cmp	x23, x19
  40d54c:	b.ls	40d558 <ferror@plt+0xa718>  // b.plast
  40d550:	mov	w0, #0x27                  	// #39
  40d554:	strb	w0, [x28, x19]
  40d558:	add	x0, x19, #0x1
  40d55c:	cmp	x23, x0
  40d560:	b.ls	40d56c <ferror@plt+0xa72c>  // b.plast
  40d564:	mov	w1, #0x27                  	// #39
  40d568:	strb	w1, [x28, x0]
  40d56c:	add	x19, x19, #0x2
  40d570:	mov	w24, #0x0                   	// #0
  40d574:	b	40d49c <ferror@plt+0xa65c>
  40d578:	ldrb	w4, [x3]
  40d57c:	cmp	w4, #0x7e
  40d580:	b.ls	40d90c <ferror@plt+0xaacc>  // b.plast
  40d584:	mov	w5, #0x0                   	// #0
  40d588:	ldr	x0, [sp, #192]
  40d58c:	cmp	x0, #0x1
  40d590:	b.ne	40da38 <ferror@plt+0xabf8>  // b.any
  40d594:	str	w4, [sp, #136]
  40d598:	str	w5, [sp, #144]
  40d59c:	str	x12, [sp, #152]
  40d5a0:	str	w11, [sp, #160]
  40d5a4:	str	w10, [sp, #172]
  40d5a8:	str	x6, [sp, #176]
  40d5ac:	bl	402b60 <__ctype_b_loc@plt>
  40d5b0:	ldr	w4, [sp, #136]
  40d5b4:	ldr	x0, [x0]
  40d5b8:	ldr	w5, [sp, #144]
  40d5bc:	ldr	w11, [sp, #160]
  40d5c0:	ldrh	w21, [x0, w4, uxtw #1]
  40d5c4:	ldr	w10, [sp, #172]
  40d5c8:	ands	w0, w21, #0x4000
  40d5cc:	cset	w2, eq  // eq = none
  40d5d0:	ubfx	x21, x21, #14, #1
  40d5d4:	ldr	x12, [sp, #152]
  40d5d8:	and	w2, w22, w2
  40d5dc:	ldr	x6, [sp, #176]
  40d5e0:	ldr	x8, [sp, #192]
  40d5e4:	cbnz	w2, 40de4c <ferror@plt+0xb00c>
  40d5e8:	cmp	w26, #0x2
  40d5ec:	cset	w1, eq  // eq = none
  40d5f0:	eor	w0, w22, #0x1
  40d5f4:	orr	w1, w1, w0
  40d5f8:	cbz	w1, 40d418 <ferror@plt+0xa5d8>
  40d5fc:	mov	w1, #0x0                   	// #0
  40d600:	cbnz	w11, 40d418 <ferror@plt+0xa5d8>
  40d604:	nop
  40d608:	cbnz	w5, 40d42c <ferror@plt+0xa5ec>
  40d60c:	b	40d534 <ferror@plt+0xa6f4>
  40d610:	mov	w5, #0x0                   	// #0
  40d614:	cmp	x25, #0x1
  40d618:	cset	w0, ne  // ne = any
  40d61c:	cmn	x25, #0x1
  40d620:	b.ne	40d630 <ferror@plt+0xa7f0>  // b.any
  40d624:	ldrb	w0, [x27, #1]
  40d628:	cmp	w0, #0x0
  40d62c:	cset	w0, ne  // ne = any
  40d630:	cmp	w26, #0x2
  40d634:	cset	w1, eq  // eq = none
  40d638:	cbz	w0, 40d64c <ferror@plt+0xa80c>
  40d63c:	mov	w21, #0x0                   	// #0
  40d640:	b	40d5f0 <ferror@plt+0xa7b0>
  40d644:	cmp	w26, #0x2
  40d648:	cset	w1, eq  // eq = none
  40d64c:	cbnz	x20, 40d63c <ferror@plt+0xa7fc>
  40d650:	cmp	w11, #0x0
  40d654:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40d658:	b.eq	40d5f0 <ferror@plt+0xa7b0>  // b.none
  40d65c:	mov	w5, w22
  40d660:	mov	w26, #0x2                   	// #2
  40d664:	cmp	w5, #0x0
  40d668:	mov	w0, #0x4                   	// #4
  40d66c:	csel	w26, w26, w0, eq  // eq = none
  40d670:	ldr	x7, [sp, #208]
  40d674:	mov	w4, w26
  40d678:	ldr	x0, [sp, #240]
  40d67c:	str	x0, [sp]
  40d680:	ldr	w0, [sp, #200]
  40d684:	mov	x3, x25
  40d688:	mov	x2, x27
  40d68c:	mov	x1, x23
  40d690:	and	w5, w0, #0xfffffffd
  40d694:	mov	x6, #0x0                   	// #0
  40d698:	mov	x0, x28
  40d69c:	bl	40d170 <ferror@plt+0xa330>
  40d6a0:	mov	x19, x0
  40d6a4:	mov	x0, x19
  40d6a8:	ldp	x29, x30, [sp, #16]
  40d6ac:	ldp	x19, x20, [sp, #32]
  40d6b0:	ldp	x21, x22, [sp, #48]
  40d6b4:	ldp	x23, x24, [sp, #64]
  40d6b8:	ldp	x25, x26, [sp, #80]
  40d6bc:	ldp	x27, x28, [sp, #96]
  40d6c0:	add	sp, sp, #0xf0
  40d6c4:	ret
  40d6c8:	mov	w5, #0x0                   	// #0
  40d6cc:	cmp	w26, #0x2
  40d6d0:	b.eq	40da08 <ferror@plt+0xabc8>  // b.none
  40d6d4:	cmp	w22, #0x0
  40d6d8:	mov	w4, #0x5c                  	// #92
  40d6dc:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  40d6e0:	mov	w0, w4
  40d6e4:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  40d6e8:	b.ne	40dd38 <ferror@plt+0xaef8>  // b.any
  40d6ec:	cbnz	w22, 40dda8 <ferror@plt+0xaf68>
  40d6f0:	mov	w21, #0x0                   	// #0
  40d6f4:	mov	w1, #0x0                   	// #0
  40d6f8:	cbnz	w11, 40d418 <ferror@plt+0xa5d8>
  40d6fc:	b	40d608 <ferror@plt+0xa7c8>
  40d700:	mov	w5, #0x0                   	// #0
  40d704:	cmp	w26, #0x2
  40d708:	b.eq	40da20 <ferror@plt+0xabe0>  // b.none
  40d70c:	cmp	w26, #0x5
  40d710:	b.ne	40d738 <ferror@plt+0xa8f8>  // b.any
  40d714:	ldr	x0, [sp, #200]
  40d718:	tbz	w0, #2, 40d738 <ferror@plt+0xa8f8>
  40d71c:	add	x7, x20, #0x2
  40d720:	cmp	x7, x25
  40d724:	b.cs	40d738 <ferror@plt+0xa8f8>  // b.hs, b.nlast
  40d728:	ldrb	w4, [x3, #1]
  40d72c:	cmp	w4, #0x3f
  40d730:	b.eq	40df14 <ferror@plt+0xb0d4>  // b.none
  40d734:	nop
  40d738:	mov	w1, #0x0                   	// #0
  40d73c:	mov	w21, #0x0                   	// #0
  40d740:	mov	w4, #0x3f                  	// #63
  40d744:	b	40d5f0 <ferror@plt+0xa7b0>
  40d748:	mov	w5, #0x0                   	// #0
  40d74c:	cmp	w26, #0x2
  40d750:	b.eq	40d4b8 <ferror@plt+0xa678>  // b.none
  40d754:	mov	w1, #0x0                   	// #0
  40d758:	mov	w4, #0x27                  	// #39
  40d75c:	str	w21, [sp, #120]
  40d760:	b	40d5f0 <ferror@plt+0xa7b0>
  40d764:	mov	w0, #0x74                  	// #116
  40d768:	cmp	w11, #0x0
  40d76c:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  40d770:	b.eq	40d65c <ferror@plt+0xa81c>  // b.none
  40d774:	cbz	w22, 40d6f0 <ferror@plt+0xa8b0>
  40d778:	b	40dda8 <ferror@plt+0xaf68>
  40d77c:	mov	w4, #0x62                  	// #98
  40d780:	cmp	w26, #0x2
  40d784:	cset	w0, eq  // eq = none
  40d788:	cbnz	w11, 40d7b0 <ferror@plt+0xa970>
  40d78c:	mov	w21, #0x0                   	// #0
  40d790:	b	40d484 <ferror@plt+0xa644>
  40d794:	mov	w4, #0x66                  	// #102
  40d798:	b	40d780 <ferror@plt+0xa940>
  40d79c:	mov	w4, #0x6e                  	// #110
  40d7a0:	mov	w21, #0x0                   	// #0
  40d7a4:	cmp	w26, #0x2
  40d7a8:	cset	w0, eq  // eq = none
  40d7ac:	cbz	w11, 40d438 <ferror@plt+0xa5f8>
  40d7b0:	and	w5, w22, w0
  40d7b4:	b	40d664 <ferror@plt+0xa824>
  40d7b8:	mov	w4, #0x72                  	// #114
  40d7bc:	mov	w21, #0x0                   	// #0
  40d7c0:	b	40d7a4 <ferror@plt+0xa964>
  40d7c4:	mov	w4, #0x61                  	// #97
  40d7c8:	b	40d780 <ferror@plt+0xa940>
  40d7cc:	cbnz	w11, 40e0dc <ferror@plt+0xb29c>
  40d7d0:	mov	w5, #0x0                   	// #0
  40d7d4:	cmp	w26, #0x2
  40d7d8:	eor	w1, w24, #0x1
  40d7dc:	cset	w0, eq  // eq = none
  40d7e0:	ands	w1, w0, w1
  40d7e4:	b.eq	40d9e8 <ferror@plt+0xaba8>  // b.none
  40d7e8:	cmp	x23, x19
  40d7ec:	b.ls	40d7f8 <ferror@plt+0xa9b8>  // b.plast
  40d7f0:	mov	w2, #0x27                  	// #39
  40d7f4:	strb	w2, [x28, x19]
  40d7f8:	add	x2, x19, #0x1
  40d7fc:	cmp	x23, x2
  40d800:	b.ls	40d80c <ferror@plt+0xa9cc>  // b.plast
  40d804:	mov	w3, #0x24                  	// #36
  40d808:	strb	w3, [x28, x2]
  40d80c:	add	x2, x19, #0x2
  40d810:	cmp	x23, x2
  40d814:	b.ls	40d820 <ferror@plt+0xa9e0>  // b.plast
  40d818:	mov	w3, #0x27                  	// #39
  40d81c:	strb	w3, [x28, x2]
  40d820:	add	x2, x19, #0x3
  40d824:	cmp	x23, x2
  40d828:	b.ls	40dd20 <ferror@plt+0xaee0>  // b.plast
  40d82c:	mov	w24, w1
  40d830:	mov	w1, #0x5c                  	// #92
  40d834:	strb	w1, [x28, x2]
  40d838:	cmp	w26, #0x2
  40d83c:	add	x19, x2, #0x1
  40d840:	b.eq	40df00 <ferror@plt+0xb0c0>  // b.none
  40d844:	add	x1, x20, #0x1
  40d848:	mov	w4, #0x30                  	// #48
  40d84c:	cmp	x1, x25
  40d850:	b.cs	40d868 <ferror@plt+0xaa28>  // b.hs, b.nlast
  40d854:	ldrb	w1, [x27, x1]
  40d858:	sub	w1, w1, #0x30
  40d85c:	and	w1, w1, #0xff
  40d860:	cmp	w1, #0x9
  40d864:	b.ls	40ddb4 <ferror@plt+0xaf74>  // b.plast
  40d868:	eor	w1, w22, #0x1
  40d86c:	orr	w0, w0, w1
  40d870:	mov	w1, w21
  40d874:	mov	w21, #0x0                   	// #0
  40d878:	cbz	w0, 40d418 <ferror@plt+0xa5d8>
  40d87c:	cbnz	w5, 40d42c <ferror@plt+0xa5ec>
  40d880:	b	40d534 <ferror@plt+0xa6f4>
  40d884:	ldrb	w4, [x27, x20]
  40d888:	cmp	w4, #0x7e
  40d88c:	b.hi	40d588 <ferror@plt+0xa748>  // b.pmore
  40d890:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40d894:	add	x0, x0, #0xcb0
  40d898:	ldrh	w0, [x0, w4, uxtw #1]
  40d89c:	adr	x1, 40d8a8 <ferror@plt+0xaa68>
  40d8a0:	add	x0, x1, w0, sxth #2
  40d8a4:	br	x0
  40d8a8:	cmp	w26, #0x2
  40d8ac:	mov	w21, #0x0                   	// #0
  40d8b0:	cset	w1, eq  // eq = none
  40d8b4:	cmp	w11, #0x0
  40d8b8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40d8bc:	b.eq	40d5f0 <ferror@plt+0xa7b0>  // b.none
  40d8c0:	b	40d65c <ferror@plt+0xa81c>
  40d8c4:	cmp	w26, #0x2
  40d8c8:	cset	w1, eq  // eq = none
  40d8cc:	cmp	w11, #0x0
  40d8d0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40d8d4:	b.eq	40d5f0 <ferror@plt+0xa7b0>  // b.none
  40d8d8:	b	40d65c <ferror@plt+0xa81c>
  40d8dc:	cbnz	w22, 40d7cc <ferror@plt+0xa98c>
  40d8e0:	ldr	x0, [sp, #200]
  40d8e4:	mov	w5, #0x0                   	// #0
  40d8e8:	tbz	w0, #0, 40d6f0 <ferror@plt+0xa8b0>
  40d8ec:	add	x20, x20, #0x1
  40d8f0:	b	40d290 <ferror@plt+0xa450>
  40d8f4:	mov	w0, #0x66                  	// #102
  40d8f8:	cbz	w22, 40d6f0 <ferror@plt+0xa8b0>
  40d8fc:	b	40dda8 <ferror@plt+0xaf68>
  40d900:	mov	w0, #0x62                  	// #98
  40d904:	cbz	w22, 40d6f0 <ferror@plt+0xa8b0>
  40d908:	b	40dda8 <ferror@plt+0xaf68>
  40d90c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40d910:	add	x0, x0, #0xdb0
  40d914:	ldrh	w0, [x0, w4, uxtw #1]
  40d918:	adr	x1, 40d924 <ferror@plt+0xaae4>
  40d91c:	add	x0, x1, w0, sxth #2
  40d920:	br	x0
  40d924:	mov	w0, #0x0                   	// #0
  40d928:	b	40d408 <ferror@plt+0xa5c8>
  40d92c:	mov	w0, #0x0                   	// #0
  40d930:	mov	w5, #0x0                   	// #0
  40d934:	b	40d408 <ferror@plt+0xa5c8>
  40d938:	cbnz	w26, 40e184 <ferror@plt+0xb344>
  40d93c:	mov	w10, #0x1                   	// #1
  40d940:	mov	w7, #0x0                   	// #0
  40d944:	mov	w11, #0x0                   	// #0
  40d948:	mov	w5, #0x0                   	// #0
  40d94c:	mov	x12, #0x0                   	// #0
  40d950:	mov	x19, #0x0                   	// #0
  40d954:	str	xzr, [sp, #112]
  40d958:	str	wzr, [sp, #120]
  40d95c:	str	xzr, [sp, #128]
  40d960:	b	40d280 <ferror@plt+0xa440>
  40d964:	cmp	w26, #0x5
  40d968:	b.ne	40d9ac <ferror@plt+0xab6c>  // b.any
  40d96c:	cbnz	w20, 40dfa4 <ferror@plt+0xb164>
  40d970:	cbz	x23, 40ded0 <ferror@plt+0xb090>
  40d974:	mov	w0, #0x22                  	// #34
  40d978:	mov	w10, #0x1                   	// #1
  40d97c:	mov	x12, #0x1                   	// #1
  40d980:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40d984:	mov	w5, w10
  40d988:	add	x1, x1, #0xb08
  40d98c:	mov	x19, x12
  40d990:	mov	w7, #0x0                   	// #0
  40d994:	mov	w11, #0x0                   	// #0
  40d998:	strb	w0, [x28]
  40d99c:	str	x1, [sp, #112]
  40d9a0:	str	wzr, [sp, #120]
  40d9a4:	str	xzr, [sp, #128]
  40d9a8:	b	40d280 <ferror@plt+0xa440>
  40d9ac:	cmp	w26, #0x6
  40d9b0:	b.ne	40e184 <ferror@plt+0xb344>  // b.any
  40d9b4:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  40d9b8:	mov	w10, #0x1                   	// #1
  40d9bc:	add	x0, x26, #0xb08
  40d9c0:	mov	w11, w10
  40d9c4:	mov	w5, w10
  40d9c8:	mov	w7, #0x0                   	// #0
  40d9cc:	mov	x12, #0x1                   	// #1
  40d9d0:	mov	x19, #0x0                   	// #0
  40d9d4:	mov	w26, #0x5                   	// #5
  40d9d8:	str	x0, [sp, #112]
  40d9dc:	str	wzr, [sp, #120]
  40d9e0:	str	xzr, [sp, #128]
  40d9e4:	b	40d280 <ferror@plt+0xa440>
  40d9e8:	mov	x2, x19
  40d9ec:	cmp	x23, x19
  40d9f0:	b.ls	40d838 <ferror@plt+0xa9f8>  // b.plast
  40d9f4:	mov	w1, w24
  40d9f8:	mov	w24, w1
  40d9fc:	mov	w1, #0x5c                  	// #92
  40da00:	strb	w1, [x28, x2]
  40da04:	b	40d838 <ferror@plt+0xa9f8>
  40da08:	cbnz	w11, 40e0d4 <ferror@plt+0xb294>
  40da0c:	add	x20, x20, #0x1
  40da10:	mov	w1, w24
  40da14:	mov	w21, #0x0                   	// #0
  40da18:	mov	w4, #0x5c                  	// #92
  40da1c:	b	40d544 <ferror@plt+0xa704>
  40da20:	cbnz	w11, 40e0d4 <ferror@plt+0xb294>
  40da24:	mov	w21, #0x0                   	// #0
  40da28:	mov	w1, #0x0                   	// #0
  40da2c:	mov	w4, #0x3f                  	// #63
  40da30:	cbnz	w5, 40d42c <ferror@plt+0xa5ec>
  40da34:	b	40d534 <ferror@plt+0xa6f4>
  40da38:	str	xzr, [sp, #232]
  40da3c:	cmn	x25, #0x1
  40da40:	b.ne	40da80 <ferror@plt+0xac40>  // b.any
  40da44:	mov	x0, x27
  40da48:	str	w4, [sp, #136]
  40da4c:	str	w5, [sp, #144]
  40da50:	str	x12, [sp, #152]
  40da54:	str	w11, [sp, #160]
  40da58:	str	w10, [sp, #172]
  40da5c:	str	x6, [sp, #176]
  40da60:	bl	402780 <strlen@plt>
  40da64:	ldr	w4, [sp, #136]
  40da68:	mov	x25, x0
  40da6c:	ldr	w5, [sp, #144]
  40da70:	ldr	w11, [sp, #160]
  40da74:	ldr	w10, [sp, #172]
  40da78:	ldr	x12, [sp, #152]
  40da7c:	ldr	x6, [sp, #176]
  40da80:	mov	x8, #0x0                   	// #0
  40da84:	str	x19, [sp, #184]
  40da88:	mov	w19, w21
  40da8c:	mov	x21, x8
  40da90:	str	w11, [sp, #136]
  40da94:	str	x12, [sp, #144]
  40da98:	str	w24, [sp, #152]
  40da9c:	str	w10, [sp, #160]
  40daa0:	stp	w4, w5, [sp, #172]
  40daa4:	str	x6, [sp, #216]
  40daa8:	add	x24, x20, x21
  40daac:	add	x3, sp, #0xe8
  40dab0:	sub	x2, x25, x24
  40dab4:	add	x1, x27, x24
  40dab8:	add	x0, sp, #0xe4
  40dabc:	bl	4116b8 <ferror@plt+0xe878>
  40dac0:	mov	x13, #0x2b                  	// #43
  40dac4:	mov	x3, x0
  40dac8:	movk	x13, #0x2, lsl #32
  40dacc:	cbz	x0, 40db14 <ferror@plt+0xacd4>
  40dad0:	cmn	x0, #0x1
  40dad4:	b.eq	40e00c <ferror@plt+0xb1cc>  // b.none
  40dad8:	cmn	x0, #0x2
  40dadc:	mov	x7, #0x1                   	// #1
  40dae0:	b.eq	40e038 <ferror@plt+0xb1f8>  // b.none
  40dae4:	ldr	w0, [sp, #136]
  40dae8:	cmp	w0, #0x0
  40daec:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  40daf0:	b.eq	40dc78 <ferror@plt+0xae38>  // b.none
  40daf4:	ldr	w0, [sp, #228]
  40daf8:	add	x21, x21, x3
  40dafc:	bl	402d90 <iswprint@plt>
  40db00:	cmp	w0, #0x0
  40db04:	csel	w19, w19, wzr, ne  // ne = any
  40db08:	add	x0, sp, #0xe8
  40db0c:	bl	402ac0 <mbsinit@plt>
  40db10:	cbz	w0, 40daa8 <ferror@plt+0xac68>
  40db14:	eor	w2, w19, #0x1
  40db18:	mov	x8, x21
  40db1c:	ldr	w11, [sp, #136]
  40db20:	mov	w21, w19
  40db24:	ldr	w24, [sp, #152]
  40db28:	and	w2, w22, w2
  40db2c:	ldr	w10, [sp, #160]
  40db30:	ldp	w4, w5, [sp, #172]
  40db34:	ldr	x12, [sp, #144]
  40db38:	ldr	x19, [sp, #184]
  40db3c:	ldr	x6, [sp, #216]
  40db40:	cmp	x8, #0x1
  40db44:	b.ls	40d5e4 <ferror@plt+0xa7a4>  // b.plast
  40db48:	add	x8, x8, x20
  40db4c:	mov	w14, #0x0                   	// #0
  40db50:	mov	w3, #0x27                  	// #39
  40db54:	mov	w7, #0x5c                  	// #92
  40db58:	mov	w9, #0x24                  	// #36
  40db5c:	cbz	w2, 40dc1c <ferror@plt+0xaddc>
  40db60:	cmp	w26, #0x2
  40db64:	cset	w0, eq  // eq = none
  40db68:	cbnz	w11, 40de60 <ferror@plt+0xb020>
  40db6c:	eor	w1, w24, #0x1
  40db70:	ands	w0, w0, w1
  40db74:	b.eq	40dbac <ferror@plt+0xad6c>  // b.none
  40db78:	cmp	x23, x19
  40db7c:	b.ls	40db84 <ferror@plt+0xad44>  // b.plast
  40db80:	strb	w3, [x28, x19]
  40db84:	add	x1, x19, #0x1
  40db88:	cmp	x23, x1
  40db8c:	b.ls	40db94 <ferror@plt+0xad54>  // b.plast
  40db90:	strb	w9, [x28, x1]
  40db94:	add	x1, x19, #0x2
  40db98:	cmp	x23, x1
  40db9c:	b.ls	40dba4 <ferror@plt+0xad64>  // b.plast
  40dba0:	strb	w3, [x28, x1]
  40dba4:	add	x19, x19, #0x3
  40dba8:	mov	w24, w0
  40dbac:	cmp	x23, x19
  40dbb0:	b.ls	40dbb8 <ferror@plt+0xad78>  // b.plast
  40dbb4:	strb	w7, [x28, x19]
  40dbb8:	add	x0, x19, #0x1
  40dbbc:	cmp	x23, x0
  40dbc0:	b.ls	40dbd0 <ferror@plt+0xad90>  // b.plast
  40dbc4:	lsr	w1, w4, #6
  40dbc8:	add	w1, w1, #0x30
  40dbcc:	strb	w1, [x28, x0]
  40dbd0:	add	x0, x19, #0x2
  40dbd4:	cmp	x23, x0
  40dbd8:	b.ls	40dbe8 <ferror@plt+0xada8>  // b.plast
  40dbdc:	ubfx	x1, x4, #3, #3
  40dbe0:	add	w1, w1, #0x30
  40dbe4:	strb	w1, [x28, x0]
  40dbe8:	and	w4, w4, #0x7
  40dbec:	add	x20, x20, #0x1
  40dbf0:	add	w4, w4, #0x30
  40dbf4:	cmp	x20, x8
  40dbf8:	add	x19, x19, #0x3
  40dbfc:	b.cs	40d49c <ferror@plt+0xa65c>  // b.hs, b.nlast
  40dc00:	mov	w14, w2
  40dc04:	cmp	x23, x19
  40dc08:	b.ls	40dc10 <ferror@plt+0xadd0>  // b.plast
  40dc0c:	strb	w4, [x28, x19]
  40dc10:	ldrb	w4, [x27, x20]
  40dc14:	add	x19, x19, #0x1
  40dc18:	cbnz	w2, 40db60 <ferror@plt+0xad20>
  40dc1c:	eor	w0, w14, #0x1
  40dc20:	and	w0, w24, w0
  40dc24:	and	w0, w0, #0xff
  40dc28:	cbz	w5, 40dc3c <ferror@plt+0xadfc>
  40dc2c:	cmp	x23, x19
  40dc30:	b.ls	40dc38 <ferror@plt+0xadf8>  // b.plast
  40dc34:	strb	w7, [x28, x19]
  40dc38:	add	x19, x19, #0x1
  40dc3c:	add	x20, x20, #0x1
  40dc40:	cmp	x20, x8
  40dc44:	b.cs	40de58 <ferror@plt+0xb018>  // b.hs, b.nlast
  40dc48:	cbz	w0, 40dec8 <ferror@plt+0xb088>
  40dc4c:	cmp	x23, x19
  40dc50:	b.ls	40dc58 <ferror@plt+0xae18>  // b.plast
  40dc54:	strb	w3, [x28, x19]
  40dc58:	add	x0, x19, #0x1
  40dc5c:	cmp	x23, x0
  40dc60:	b.ls	40dc68 <ferror@plt+0xae28>  // b.plast
  40dc64:	strb	w3, [x28, x0]
  40dc68:	add	x19, x19, #0x2
  40dc6c:	mov	w5, #0x0                   	// #0
  40dc70:	mov	w24, #0x0                   	// #0
  40dc74:	b	40dc04 <ferror@plt+0xadc4>
  40dc78:	cmp	x3, #0x1
  40dc7c:	b.eq	40daf4 <ferror@plt+0xacb4>  // b.none
  40dc80:	add	x2, x24, #0x1
  40dc84:	add	x0, x27, x3
  40dc88:	add	x2, x27, x2
  40dc8c:	add	x9, x0, x24
  40dc90:	b	40dca0 <ferror@plt+0xae60>
  40dc94:	add	x2, x2, #0x1
  40dc98:	cmp	x9, x2
  40dc9c:	b.eq	40daf4 <ferror@plt+0xacb4>  // b.none
  40dca0:	ldrb	w0, [x2]
  40dca4:	sub	w0, w0, #0x5b
  40dca8:	and	w0, w0, #0xff
  40dcac:	cmp	w0, #0x21
  40dcb0:	b.hi	40dc94 <ferror@plt+0xae54>  // b.pmore
  40dcb4:	lsl	x0, x7, x0
  40dcb8:	tst	x0, x13
  40dcbc:	b.eq	40dc94 <ferror@plt+0xae54>  // b.none
  40dcc0:	b	40d65c <ferror@plt+0xa81c>
  40dcc4:	mov	w10, w26
  40dcc8:	mov	w11, w26
  40dccc:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  40dcd0:	add	x0, x26, #0xb30
  40dcd4:	str	x0, [sp, #112]
  40dcd8:	str	wzr, [sp, #120]
  40dcdc:	mov	w7, #0x0                   	// #0
  40dce0:	mov	w5, #0x0                   	// #0
  40dce4:	mov	x12, #0x1                   	// #1
  40dce8:	mov	x19, #0x0                   	// #0
  40dcec:	mov	w26, #0x2                   	// #2
  40dcf0:	str	xzr, [sp, #128]
  40dcf4:	b	40d280 <ferror@plt+0xa440>
  40dcf8:	mov	w10, #0x1                   	// #1
  40dcfc:	mov	w7, #0x0                   	// #0
  40dd00:	mov	w5, w10
  40dd04:	mov	w11, #0x0                   	// #0
  40dd08:	mov	x12, #0x0                   	// #0
  40dd0c:	mov	x19, #0x0                   	// #0
  40dd10:	str	xzr, [sp, #112]
  40dd14:	str	wzr, [sp, #120]
  40dd18:	str	xzr, [sp, #128]
  40dd1c:	b	40d280 <ferror@plt+0xa440>
  40dd20:	add	x19, x19, #0x4
  40dd24:	mov	w24, w1
  40dd28:	mov	w21, #0x0                   	// #0
  40dd2c:	mov	w4, #0x30                  	// #48
  40dd30:	cbnz	w5, 40d42c <ferror@plt+0xa5ec>
  40dd34:	b	40d534 <ferror@plt+0xa6f4>
  40dd38:	add	x20, x20, #0x1
  40dd3c:	mov	w1, w24
  40dd40:	mov	w21, #0x0                   	// #0
  40dd44:	b	40d544 <ferror@plt+0xa704>
  40dd48:	mov	w0, w5
  40dd4c:	mov	w5, #0x0                   	// #0
  40dd50:	b	40d408 <ferror@plt+0xa5c8>
  40dd54:	mov	w0, #0x0                   	// #0
  40dd58:	cbnz	x20, 40de3c <ferror@plt+0xaffc>
  40dd5c:	mov	w21, w5
  40dd60:	mov	w1, #0x0                   	// #0
  40dd64:	mov	w5, w0
  40dd68:	b	40d5f0 <ferror@plt+0xa7b0>
  40dd6c:	mov	w1, w26
  40dd70:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40dd74:	add	x0, x0, #0xb38
  40dd78:	str	w11, [sp, #112]
  40dd7c:	str	x6, [sp, #120]
  40dd80:	bl	40d008 <ferror@plt+0xa1c8>
  40dd84:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40dd88:	str	x0, [sp, #208]
  40dd8c:	add	x0, x1, #0xb30
  40dd90:	mov	w1, w26
  40dd94:	bl	40d008 <ferror@plt+0xa1c8>
  40dd98:	str	x0, [sp, #240]
  40dd9c:	ldr	w11, [sp, #112]
  40dda0:	ldr	x6, [sp, #120]
  40dda4:	b	40d1f8 <ferror@plt+0xa3b8>
  40dda8:	mov	w4, w0
  40ddac:	mov	w21, #0x0                   	// #0
  40ddb0:	b	40d7a4 <ferror@plt+0xa964>
  40ddb4:	cmp	x23, x19
  40ddb8:	b.ls	40ddc0 <ferror@plt+0xaf80>  // b.plast
  40ddbc:	strb	w4, [x28, x19]
  40ddc0:	add	x1, x2, #0x2
  40ddc4:	cmp	x23, x1
  40ddc8:	b.ls	40ddd4 <ferror@plt+0xaf94>  // b.plast
  40ddcc:	mov	w3, #0x30                  	// #48
  40ddd0:	strb	w3, [x28, x1]
  40ddd4:	add	x19, x2, #0x3
  40ddd8:	mov	w4, #0x30                  	// #48
  40dddc:	b	40d868 <ferror@plt+0xaa28>
  40dde0:	mov	w0, #0x76                  	// #118
  40dde4:	cbz	w22, 40d6f0 <ferror@plt+0xa8b0>
  40dde8:	b	40dda8 <ferror@plt+0xaf68>
  40ddec:	mov	w0, #0x72                  	// #114
  40ddf0:	b	40d768 <ferror@plt+0xa928>
  40ddf4:	mov	w0, #0x61                  	// #97
  40ddf8:	cbz	w22, 40d6f0 <ferror@plt+0xa8b0>
  40ddfc:	b	40dda8 <ferror@plt+0xaf68>
  40de00:	mov	w0, #0x6e                  	// #110
  40de04:	b	40d768 <ferror@plt+0xa928>
  40de08:	mov	w0, #0x0                   	// #0
  40de0c:	mov	w21, w5
  40de10:	mov	w1, #0x0                   	// #0
  40de14:	mov	w5, w0
  40de18:	mov	w4, #0x20                  	// #32
  40de1c:	b	40d5f0 <ferror@plt+0xa7b0>
  40de20:	mov	w5, #0x0                   	// #0
  40de24:	mov	w0, #0x74                  	// #116
  40de28:	b	40d768 <ferror@plt+0xa928>
  40de2c:	mov	w5, #0x0                   	// #0
  40de30:	mov	w0, #0x76                  	// #118
  40de34:	cbz	w22, 40d6f0 <ferror@plt+0xa8b0>
  40de38:	b	40dda8 <ferror@plt+0xaf68>
  40de3c:	mov	w5, w0
  40de40:	mov	w21, #0x0                   	// #0
  40de44:	mov	w1, #0x0                   	// #0
  40de48:	b	40d418 <ferror@plt+0xa5d8>
  40de4c:	mov	w2, w22
  40de50:	mov	w21, #0x0                   	// #0
  40de54:	b	40db48 <ferror@plt+0xad08>
  40de58:	mov	w1, w0
  40de5c:	b	40d544 <ferror@plt+0xa704>
  40de60:	mov	w5, w0
  40de64:	b	40d664 <ferror@plt+0xa824>
  40de68:	mov	w5, #0x1                   	// #1
  40de6c:	cbz	w20, 40de94 <ferror@plt+0xb054>
  40de70:	mov	w10, #0x1                   	// #1
  40de74:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  40de78:	mov	w11, w10
  40de7c:	add	x0, x26, #0xb30
  40de80:	str	x0, [sp, #112]
  40de84:	str	wzr, [sp, #120]
  40de88:	b	40dcdc <ferror@plt+0xae9c>
  40de8c:	cbnz	w20, 40e134 <ferror@plt+0xb2f4>
  40de90:	mov	w5, #0x0                   	// #0
  40de94:	cbnz	x23, 40e16c <ferror@plt+0xb32c>
  40de98:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2498>
  40de9c:	mov	x12, #0x1                   	// #1
  40dea0:	add	x0, x26, #0xb30
  40dea4:	mov	x19, x12
  40dea8:	mov	w10, #0x1                   	// #1
  40deac:	mov	w7, #0x0                   	// #0
  40deb0:	mov	w11, #0x0                   	// #0
  40deb4:	mov	w26, #0x2                   	// #2
  40deb8:	str	x0, [sp, #112]
  40debc:	str	wzr, [sp, #120]
  40dec0:	str	xzr, [sp, #128]
  40dec4:	b	40d280 <ferror@plt+0xa440>
  40dec8:	mov	w5, #0x0                   	// #0
  40decc:	b	40dc04 <ferror@plt+0xadc4>
  40ded0:	mov	w10, #0x1                   	// #1
  40ded4:	mov	x12, #0x1                   	// #1
  40ded8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40dedc:	mov	w5, w10
  40dee0:	add	x0, x0, #0xb08
  40dee4:	mov	x19, x12
  40dee8:	mov	w7, #0x0                   	// #0
  40deec:	mov	w11, #0x0                   	// #0
  40def0:	str	x0, [sp, #112]
  40def4:	str	wzr, [sp, #120]
  40def8:	str	xzr, [sp, #128]
  40defc:	b	40d280 <ferror@plt+0xa440>
  40df00:	mov	w1, w21
  40df04:	mov	w4, #0x30                  	// #48
  40df08:	mov	w21, #0x0                   	// #0
  40df0c:	cbnz	w5, 40d42c <ferror@plt+0xa5ec>
  40df10:	b	40d534 <ferror@plt+0xa6f4>
  40df14:	ldrb	w3, [x27, x7]
  40df18:	cmp	w3, #0x3e
  40df1c:	b.hi	40e120 <ferror@plt+0xb2e0>  // b.pmore
  40df20:	mov	x0, #0x1                   	// #1
  40df24:	mov	x2, #0xa38200000000        	// #179778741075968
  40df28:	movk	x2, #0x7000, lsl #48
  40df2c:	lsl	x0, x0, x3
  40df30:	mov	w1, #0x0                   	// #0
  40df34:	tst	x0, x2
  40df38:	mov	w21, #0x0                   	// #0
  40df3c:	b.eq	40d5f0 <ferror@plt+0xa7b0>  // b.none
  40df40:	cbnz	w11, 40d670 <ferror@plt+0xa830>
  40df44:	cmp	x23, x19
  40df48:	b.ls	40df50 <ferror@plt+0xb110>  // b.plast
  40df4c:	strb	w4, [x28, x19]
  40df50:	add	x0, x19, #0x1
  40df54:	cmp	x23, x0
  40df58:	b.ls	40df64 <ferror@plt+0xb124>  // b.plast
  40df5c:	mov	w1, #0x22                  	// #34
  40df60:	strb	w1, [x28, x0]
  40df64:	add	x0, x19, #0x2
  40df68:	cmp	x23, x0
  40df6c:	b.ls	40df78 <ferror@plt+0xb138>  // b.plast
  40df70:	mov	w1, #0x22                  	// #34
  40df74:	strb	w1, [x28, x0]
  40df78:	add	x0, x19, #0x3
  40df7c:	cmp	x23, x0
  40df80:	b.ls	40df8c <ferror@plt+0xb14c>  // b.plast
  40df84:	mov	w1, #0x3f                  	// #63
  40df88:	strb	w1, [x28, x0]
  40df8c:	add	x19, x19, #0x4
  40df90:	mov	w4, w3
  40df94:	mov	x20, x7
  40df98:	mov	w0, #0x0                   	// #0
  40df9c:	mov	w21, #0x0                   	// #0
  40dfa0:	b	40d868 <ferror@plt+0xaa28>
  40dfa4:	mov	w10, #0x1                   	// #1
  40dfa8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40dfac:	mov	w11, w10
  40dfb0:	add	x0, x0, #0xb08
  40dfb4:	mov	w5, w10
  40dfb8:	mov	w7, #0x0                   	// #0
  40dfbc:	mov	x12, #0x1                   	// #1
  40dfc0:	mov	x19, #0x0                   	// #0
  40dfc4:	str	x0, [sp, #112]
  40dfc8:	str	wzr, [sp, #120]
  40dfcc:	str	xzr, [sp, #128]
  40dfd0:	b	40d280 <ferror@plt+0xa440>
  40dfd4:	mov	w0, w5
  40dfd8:	b	40dd58 <ferror@plt+0xaf18>
  40dfdc:	mov	w0, w5
  40dfe0:	b	40de0c <ferror@plt+0xafcc>
  40dfe4:	ldr	x1, [sp, #208]
  40dfe8:	ldrb	w0, [x1]
  40dfec:	cbz	w0, 40d200 <ferror@plt+0xa3c0>
  40dff0:	cmp	x23, x19
  40dff4:	b.ls	40dffc <ferror@plt+0xb1bc>  // b.plast
  40dff8:	strb	w0, [x28, x19]
  40dffc:	add	x19, x19, #0x1
  40e000:	ldrb	w0, [x1, x19]
  40e004:	cbnz	w0, 40dff0 <ferror@plt+0xb1b0>
  40e008:	b	40d200 <ferror@plt+0xa3c0>
  40e00c:	mov	x8, x21
  40e010:	ldr	w11, [sp, #136]
  40e014:	ldr	w24, [sp, #152]
  40e018:	mov	w2, w22
  40e01c:	ldr	w10, [sp, #160]
  40e020:	mov	w21, #0x0                   	// #0
  40e024:	ldp	w4, w5, [sp, #172]
  40e028:	ldr	x12, [sp, #144]
  40e02c:	ldr	x19, [sp, #184]
  40e030:	ldr	x6, [sp, #216]
  40e034:	b	40db40 <ferror@plt+0xad00>
  40e038:	mov	x9, x24
  40e03c:	cmp	x24, x25
  40e040:	ldr	w11, [sp, #136]
  40e044:	mov	x8, x21
  40e048:	ldr	w24, [sp, #152]
  40e04c:	ldr	w10, [sp, #160]
  40e050:	ldp	w4, w5, [sp, #172]
  40e054:	ldr	x12, [sp, #144]
  40e058:	ldr	x19, [sp, #184]
  40e05c:	ldr	x6, [sp, #216]
  40e060:	b.cc	40e078 <ferror@plt+0xb238>  // b.lo, b.ul, b.last
  40e064:	b	40e080 <ferror@plt+0xb240>
  40e068:	add	x8, x8, #0x1
  40e06c:	add	x9, x20, x8
  40e070:	cmp	x25, x9
  40e074:	b.ls	40e080 <ferror@plt+0xb240>  // b.plast
  40e078:	ldrb	w0, [x27, x9]
  40e07c:	cbnz	w0, 40e068 <ferror@plt+0xb228>
  40e080:	mov	w2, w22
  40e084:	mov	w21, #0x0                   	// #0
  40e088:	b	40db40 <ferror@plt+0xad00>
  40e08c:	mov	w0, w11
  40e090:	ldr	x1, [sp, #112]
  40e094:	cmp	x1, #0x0
  40e098:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40e09c:	b.eq	40e0c4 <ferror@plt+0xb284>  // b.none
  40e0a0:	ldrb	w0, [x1]
  40e0a4:	cbz	w0, 40e0c4 <ferror@plt+0xb284>
  40e0a8:	sub	x26, x1, x19
  40e0ac:	cmp	x23, x19
  40e0b0:	b.ls	40e0b8 <ferror@plt+0xb278>  // b.plast
  40e0b4:	strb	w0, [x28, x19]
  40e0b8:	add	x19, x19, #0x1
  40e0bc:	ldrb	w0, [x26, x19]
  40e0c0:	cbnz	w0, 40e0ac <ferror@plt+0xb26c>
  40e0c4:	cmp	x23, x19
  40e0c8:	b.ls	40d6a4 <ferror@plt+0xa864>  // b.plast
  40e0cc:	strb	wzr, [x28, x19]
  40e0d0:	b	40d6a4 <ferror@plt+0xa864>
  40e0d4:	mov	w5, w22
  40e0d8:	b	40d664 <ferror@plt+0xa824>
  40e0dc:	cmp	w26, #0x2
  40e0e0:	cset	w5, eq  // eq = none
  40e0e4:	b	40d664 <ferror@plt+0xa824>
  40e0e8:	ldr	w5, [sp, #200]
  40e0ec:	mov	x3, x25
  40e0f0:	ldr	x1, [sp, #128]
  40e0f4:	mov	x2, x27
  40e0f8:	ldr	x7, [sp, #208]
  40e0fc:	mov	w4, #0x5                   	// #5
  40e100:	ldr	x0, [sp, #240]
  40e104:	str	x0, [sp]
  40e108:	mov	x0, x28
  40e10c:	bl	40d170 <ferror@plt+0xa330>
  40e110:	mov	x19, x0
  40e114:	b	40d6a4 <ferror@plt+0xa864>
  40e118:	ldr	w0, [sp, #120]
  40e11c:	b	40e090 <ferror@plt+0xb250>
  40e120:	mov	w1, #0x0                   	// #0
  40e124:	mov	w21, #0x0                   	// #0
  40e128:	b	40d5f0 <ferror@plt+0xa7b0>
  40e12c:	mov	w26, #0x2                   	// #2
  40e130:	b	40d664 <ferror@plt+0xa824>
  40e134:	mov	w10, #0x1                   	// #1
  40e138:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40e13c:	mov	w11, w10
  40e140:	add	x0, x0, #0xb30
  40e144:	mov	w7, #0x0                   	// #0
  40e148:	mov	w5, #0x0                   	// #0
  40e14c:	mov	x12, #0x1                   	// #1
  40e150:	mov	x19, #0x0                   	// #0
  40e154:	str	x0, [sp, #112]
  40e158:	str	wzr, [sp, #120]
  40e15c:	str	xzr, [sp, #128]
  40e160:	b	40d280 <ferror@plt+0xa440>
  40e164:	ldr	x23, [sp, #128]
  40e168:	b	40d510 <ferror@plt+0xa6d0>
  40e16c:	mov	w7, #0x0                   	// #0
  40e170:	mov	w0, #0x0                   	// #0
  40e174:	mov	w10, #0x1                   	// #1
  40e178:	mov	x1, #0x0                   	// #0
  40e17c:	str	x23, [sp, #128]
  40e180:	b	40d3d0 <ferror@plt+0xa590>
  40e184:	bl	402a80 <abort@plt>
  40e188:	sub	sp, sp, #0x80
  40e18c:	stp	x29, x30, [sp, #16]
  40e190:	add	x29, sp, #0x10
  40e194:	stp	x19, x20, [sp, #32]
  40e198:	mov	w19, w0
  40e19c:	mov	x20, x3
  40e1a0:	stp	x21, x22, [sp, #48]
  40e1a4:	stp	x23, x24, [sp, #64]
  40e1a8:	mov	x23, x1
  40e1ac:	mov	x24, x2
  40e1b0:	stp	x25, x26, [sp, #80]
  40e1b4:	stp	x27, x28, [sp, #96]
  40e1b8:	bl	402db0 <__errno_location@plt>
  40e1bc:	mov	x22, x0
  40e1c0:	ldr	w0, [x0]
  40e1c4:	adrp	x27, 429000 <_obstack_memory_used@@Base+0x17498>
  40e1c8:	str	w0, [sp, #116]
  40e1cc:	ldr	x21, [x27, #1216]
  40e1d0:	tbnz	w19, #31, 40e328 <ferror@plt+0xb4e8>
  40e1d4:	add	x26, x27, #0x4c0
  40e1d8:	ldr	w0, [x26, #8]
  40e1dc:	cmp	w0, w19
  40e1e0:	b.gt	40e230 <ferror@plt+0xb3f0>
  40e1e4:	mov	w0, #0x7fffffff            	// #2147483647
  40e1e8:	cmp	w19, w0
  40e1ec:	b.eq	40e324 <ferror@plt+0xb4e4>  // b.none
  40e1f0:	add	w28, w19, #0x1
  40e1f4:	add	x0, x26, #0x10
  40e1f8:	cmp	x21, x0
  40e1fc:	sbfiz	x1, x28, #4, #32
  40e200:	b.eq	40e308 <ferror@plt+0xb4c8>  // b.none
  40e204:	mov	x0, x21
  40e208:	bl	410280 <ferror@plt+0xd440>
  40e20c:	mov	x21, x0
  40e210:	str	x0, [x27, #1216]
  40e214:	ldr	w0, [x26, #8]
  40e218:	mov	w1, #0x0                   	// #0
  40e21c:	sub	w2, w28, w0
  40e220:	add	x0, x21, w0, sxtw #4
  40e224:	sbfiz	x2, x2, #4, #32
  40e228:	bl	402990 <memset@plt>
  40e22c:	str	w28, [x26, #8]
  40e230:	sbfiz	x19, x19, #4, #32
  40e234:	add	x26, x20, #0x8
  40e238:	add	x0, x21, x19
  40e23c:	str	x0, [sp, #120]
  40e240:	ldp	w4, w5, [x20]
  40e244:	mov	x6, x26
  40e248:	ldr	x7, [x20, #40]
  40e24c:	orr	w25, w5, #0x1
  40e250:	ldr	x27, [x21, x19]
  40e254:	mov	x3, x24
  40e258:	ldr	x28, [x0, #8]
  40e25c:	mov	x1, x27
  40e260:	ldr	x0, [x20, #48]
  40e264:	str	x0, [sp]
  40e268:	mov	x2, x23
  40e26c:	mov	w5, w25
  40e270:	mov	x0, x28
  40e274:	bl	40d170 <ferror@plt+0xa330>
  40e278:	cmp	x27, x0
  40e27c:	b.hi	40e2dc <ferror@plt+0xb49c>  // b.pmore
  40e280:	add	x27, x0, #0x1
  40e284:	str	x27, [x21, x19]
  40e288:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40e28c:	add	x0, x0, #0xbb8
  40e290:	cmp	x28, x0
  40e294:	b.eq	40e2a0 <ferror@plt+0xb460>  // b.none
  40e298:	mov	x0, x28
  40e29c:	bl	402ba0 <free@plt>
  40e2a0:	mov	x0, x27
  40e2a4:	bl	410220 <ferror@plt+0xd3e0>
  40e2a8:	ldr	x1, [sp, #120]
  40e2ac:	mov	x28, x0
  40e2b0:	ldr	w4, [x20]
  40e2b4:	mov	x6, x26
  40e2b8:	ldr	x7, [x20, #40]
  40e2bc:	str	x0, [x1, #8]
  40e2c0:	ldr	x1, [x20, #48]
  40e2c4:	str	x1, [sp]
  40e2c8:	mov	w5, w25
  40e2cc:	mov	x3, x24
  40e2d0:	mov	x2, x23
  40e2d4:	mov	x1, x27
  40e2d8:	bl	40d170 <ferror@plt+0xa330>
  40e2dc:	ldr	w0, [sp, #116]
  40e2e0:	ldp	x29, x30, [sp, #16]
  40e2e4:	ldp	x19, x20, [sp, #32]
  40e2e8:	ldp	x23, x24, [sp, #64]
  40e2ec:	ldp	x25, x26, [sp, #80]
  40e2f0:	str	w0, [x22]
  40e2f4:	mov	x0, x28
  40e2f8:	ldp	x21, x22, [sp, #48]
  40e2fc:	ldp	x27, x28, [sp, #96]
  40e300:	add	sp, sp, #0x80
  40e304:	ret
  40e308:	mov	x0, #0x0                   	// #0
  40e30c:	bl	410280 <ferror@plt+0xd440>
  40e310:	mov	x21, x0
  40e314:	str	x0, [x27, #1216]
  40e318:	ldp	x0, x1, [x26, #16]
  40e31c:	stp	x0, x1, [x21]
  40e320:	b	40e214 <ferror@plt+0xb3d4>
  40e324:	bl	410478 <ferror@plt+0xd638>
  40e328:	bl	402a80 <abort@plt>
  40e32c:	nop
  40e330:	stp	x29, x30, [sp, #-48]!
  40e334:	mov	x29, sp
  40e338:	stp	x19, x20, [sp, #16]
  40e33c:	mov	x20, x0
  40e340:	str	x21, [sp, #32]
  40e344:	bl	402db0 <__errno_location@plt>
  40e348:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  40e34c:	mov	x19, x0
  40e350:	add	x2, x2, #0xbb8
  40e354:	cmp	x20, #0x0
  40e358:	add	x2, x2, #0x100
  40e35c:	mov	x1, #0x38                  	// #56
  40e360:	ldr	w21, [x19]
  40e364:	csel	x0, x2, x20, eq  // eq = none
  40e368:	bl	410418 <ferror@plt+0xd5d8>
  40e36c:	str	w21, [x19]
  40e370:	ldp	x19, x20, [sp, #16]
  40e374:	ldr	x21, [sp, #32]
  40e378:	ldp	x29, x30, [sp], #48
  40e37c:	ret
  40e380:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  40e384:	add	x1, x1, #0xbb8
  40e388:	cmp	x0, #0x0
  40e38c:	add	x1, x1, #0x100
  40e390:	csel	x0, x1, x0, eq  // eq = none
  40e394:	ldr	w0, [x0]
  40e398:	ret
  40e39c:	nop
  40e3a0:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  40e3a4:	add	x2, x2, #0xbb8
  40e3a8:	cmp	x0, #0x0
  40e3ac:	add	x2, x2, #0x100
  40e3b0:	csel	x0, x2, x0, eq  // eq = none
  40e3b4:	str	w1, [x0]
  40e3b8:	ret
  40e3bc:	nop
  40e3c0:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e3c4:	add	x3, x3, #0xbb8
  40e3c8:	cmp	x0, #0x0
  40e3cc:	add	x3, x3, #0x100
  40e3d0:	csel	x0, x3, x0, eq  // eq = none
  40e3d4:	ubfx	x4, x1, #5, #3
  40e3d8:	add	x3, x0, #0x8
  40e3dc:	and	w1, w1, #0x1f
  40e3e0:	ldr	w5, [x3, x4, lsl #2]
  40e3e4:	lsr	w0, w5, w1
  40e3e8:	eor	w2, w0, w2
  40e3ec:	and	w2, w2, #0x1
  40e3f0:	and	w0, w0, #0x1
  40e3f4:	lsl	w2, w2, w1
  40e3f8:	eor	w2, w2, w5
  40e3fc:	str	w2, [x3, x4, lsl #2]
  40e400:	ret
  40e404:	nop
  40e408:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e40c:	add	x3, x3, #0xbb8
  40e410:	cmp	x0, #0x0
  40e414:	add	x3, x3, #0x100
  40e418:	csel	x2, x3, x0, eq  // eq = none
  40e41c:	ldr	w0, [x2, #4]
  40e420:	str	w1, [x2, #4]
  40e424:	ret
  40e428:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e42c:	add	x3, x3, #0xbb8
  40e430:	cmp	x0, #0x0
  40e434:	add	x3, x3, #0x100
  40e438:	csel	x0, x3, x0, eq  // eq = none
  40e43c:	mov	w3, #0xa                   	// #10
  40e440:	cmp	x1, #0x0
  40e444:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40e448:	str	w3, [x0]
  40e44c:	b.eq	40e458 <ferror@plt+0xb618>  // b.none
  40e450:	stp	x1, x2, [x0, #40]
  40e454:	ret
  40e458:	stp	x29, x30, [sp, #-16]!
  40e45c:	mov	x29, sp
  40e460:	bl	402a80 <abort@plt>
  40e464:	nop
  40e468:	sub	sp, sp, #0x50
  40e46c:	adrp	x5, 429000 <_obstack_memory_used@@Base+0x17498>
  40e470:	stp	x29, x30, [sp, #16]
  40e474:	add	x29, sp, #0x10
  40e478:	stp	x19, x20, [sp, #32]
  40e47c:	mov	x19, x4
  40e480:	add	x4, x5, #0xbb8
  40e484:	cmp	x19, #0x0
  40e488:	add	x4, x4, #0x100
  40e48c:	csel	x19, x4, x19, eq  // eq = none
  40e490:	mov	x20, x3
  40e494:	stp	x21, x22, [sp, #48]
  40e498:	mov	x21, x0
  40e49c:	mov	x22, x1
  40e4a0:	str	x23, [sp, #64]
  40e4a4:	mov	x23, x2
  40e4a8:	bl	402db0 <__errno_location@plt>
  40e4ac:	ldp	x7, x8, [x19, #40]
  40e4b0:	mov	x3, x20
  40e4b4:	mov	x20, x0
  40e4b8:	mov	x0, x21
  40e4bc:	ldp	w4, w5, [x19]
  40e4c0:	mov	x2, x23
  40e4c4:	ldr	w21, [x20]
  40e4c8:	mov	x1, x22
  40e4cc:	str	x8, [sp]
  40e4d0:	add	x6, x19, #0x8
  40e4d4:	bl	40d170 <ferror@plt+0xa330>
  40e4d8:	ldp	x29, x30, [sp, #16]
  40e4dc:	ldr	x23, [sp, #64]
  40e4e0:	str	w21, [x20]
  40e4e4:	ldp	x19, x20, [sp, #32]
  40e4e8:	ldp	x21, x22, [sp, #48]
  40e4ec:	add	sp, sp, #0x50
  40e4f0:	ret
  40e4f4:	nop
  40e4f8:	sub	sp, sp, #0x70
  40e4fc:	adrp	x4, 429000 <_obstack_memory_used@@Base+0x17498>
  40e500:	add	x4, x4, #0xbb8
  40e504:	cmp	x3, #0x0
  40e508:	add	x4, x4, #0x100
  40e50c:	stp	x29, x30, [sp, #16]
  40e510:	add	x29, sp, #0x10
  40e514:	stp	x19, x20, [sp, #32]
  40e518:	csel	x19, x4, x3, eq  // eq = none
  40e51c:	mov	x20, x2
  40e520:	stp	x21, x22, [sp, #48]
  40e524:	mov	x22, x0
  40e528:	stp	x23, x24, [sp, #64]
  40e52c:	mov	x23, x1
  40e530:	stp	x25, x26, [sp, #80]
  40e534:	stp	x27, x28, [sp, #96]
  40e538:	bl	402db0 <__errno_location@plt>
  40e53c:	ldr	w28, [x0]
  40e540:	ldp	w4, w5, [x19]
  40e544:	mov	x21, x0
  40e548:	ldp	x7, x0, [x19, #40]
  40e54c:	cmp	x20, #0x0
  40e550:	cset	w24, eq  // eq = none
  40e554:	add	x27, x19, #0x8
  40e558:	orr	w24, w24, w5
  40e55c:	mov	x6, x27
  40e560:	mov	x3, x23
  40e564:	mov	x2, x22
  40e568:	mov	w5, w24
  40e56c:	str	x0, [sp]
  40e570:	mov	x1, #0x0                   	// #0
  40e574:	mov	x0, #0x0                   	// #0
  40e578:	bl	40d170 <ferror@plt+0xa330>
  40e57c:	add	x26, x0, #0x1
  40e580:	mov	x25, x0
  40e584:	mov	x0, x26
  40e588:	bl	410220 <ferror@plt+0xd3e0>
  40e58c:	ldp	x7, x1, [x19, #40]
  40e590:	mov	w5, w24
  40e594:	ldr	w4, [x19]
  40e598:	mov	x6, x27
  40e59c:	str	x1, [sp]
  40e5a0:	mov	x3, x23
  40e5a4:	mov	x2, x22
  40e5a8:	mov	x19, x0
  40e5ac:	mov	x1, x26
  40e5b0:	bl	40d170 <ferror@plt+0xa330>
  40e5b4:	str	w28, [x21]
  40e5b8:	cbz	x20, 40e5c0 <ferror@plt+0xb780>
  40e5bc:	str	x25, [x20]
  40e5c0:	mov	x0, x19
  40e5c4:	ldp	x29, x30, [sp, #16]
  40e5c8:	ldp	x19, x20, [sp, #32]
  40e5cc:	ldp	x21, x22, [sp, #48]
  40e5d0:	ldp	x23, x24, [sp, #64]
  40e5d4:	ldp	x25, x26, [sp, #80]
  40e5d8:	ldp	x27, x28, [sp, #96]
  40e5dc:	add	sp, sp, #0x70
  40e5e0:	ret
  40e5e4:	nop
  40e5e8:	mov	x3, x2
  40e5ec:	mov	x2, #0x0                   	// #0
  40e5f0:	b	40e4f8 <ferror@plt+0xb6b8>
  40e5f4:	nop
  40e5f8:	stp	x29, x30, [sp, #-64]!
  40e5fc:	mov	x29, sp
  40e600:	stp	x21, x22, [sp, #32]
  40e604:	str	x23, [sp, #48]
  40e608:	adrp	x23, 429000 <_obstack_memory_used@@Base+0x17498>
  40e60c:	add	x22, x23, #0x4c0
  40e610:	stp	x19, x20, [sp, #16]
  40e614:	ldr	x21, [x23, #1216]
  40e618:	ldr	w20, [x22, #8]
  40e61c:	cmp	w20, #0x1
  40e620:	b.le	40e648 <ferror@plt+0xb808>
  40e624:	sub	w0, w20, #0x2
  40e628:	add	x20, x21, #0x28
  40e62c:	add	x19, x21, #0x18
  40e630:	add	x20, x20, w0, uxtw #4
  40e634:	nop
  40e638:	ldr	x0, [x19], #16
  40e63c:	bl	402ba0 <free@plt>
  40e640:	cmp	x19, x20
  40e644:	b.ne	40e638 <ferror@plt+0xb7f8>  // b.any
  40e648:	ldr	x0, [x21, #8]
  40e64c:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x17498>
  40e650:	add	x19, x19, #0xbb8
  40e654:	cmp	x0, x19
  40e658:	b.eq	40e668 <ferror@plt+0xb828>  // b.none
  40e65c:	bl	402ba0 <free@plt>
  40e660:	mov	x0, #0x100                 	// #256
  40e664:	stp	x0, x19, [x22, #16]
  40e668:	add	x19, x22, #0x10
  40e66c:	cmp	x21, x19
  40e670:	b.eq	40e680 <ferror@plt+0xb840>  // b.none
  40e674:	mov	x0, x21
  40e678:	bl	402ba0 <free@plt>
  40e67c:	str	x19, [x23, #1216]
  40e680:	mov	w0, #0x1                   	// #1
  40e684:	str	w0, [x22, #8]
  40e688:	ldp	x19, x20, [sp, #16]
  40e68c:	ldp	x21, x22, [sp, #32]
  40e690:	ldr	x23, [sp, #48]
  40e694:	ldp	x29, x30, [sp], #64
  40e698:	ret
  40e69c:	nop
  40e6a0:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e6a4:	add	x3, x3, #0xbb8
  40e6a8:	add	x3, x3, #0x100
  40e6ac:	mov	x2, #0xffffffffffffffff    	// #-1
  40e6b0:	b	40e188 <ferror@plt+0xb348>
  40e6b4:	nop
  40e6b8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e6bc:	add	x3, x3, #0xbb8
  40e6c0:	add	x3, x3, #0x100
  40e6c4:	b	40e188 <ferror@plt+0xb348>
  40e6c8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e6cc:	add	x3, x3, #0xbb8
  40e6d0:	mov	x1, x0
  40e6d4:	add	x3, x3, #0x100
  40e6d8:	mov	x2, #0xffffffffffffffff    	// #-1
  40e6dc:	mov	w0, #0x0                   	// #0
  40e6e0:	b	40e188 <ferror@plt+0xb348>
  40e6e4:	nop
  40e6e8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e6ec:	add	x3, x3, #0xbb8
  40e6f0:	mov	x2, x1
  40e6f4:	add	x3, x3, #0x100
  40e6f8:	mov	x1, x0
  40e6fc:	mov	w0, #0x0                   	// #0
  40e700:	b	40e188 <ferror@plt+0xb348>
  40e704:	nop
  40e708:	stp	x29, x30, [sp, #-96]!
  40e70c:	add	x8, sp, #0x28
  40e710:	mov	x29, sp
  40e714:	stp	x19, x20, [sp, #16]
  40e718:	mov	x20, x2
  40e71c:	mov	w19, w0
  40e720:	mov	w0, w1
  40e724:	bl	40cfd8 <ferror@plt+0xa198>
  40e728:	add	x3, sp, #0x28
  40e72c:	mov	x1, x20
  40e730:	mov	w0, w19
  40e734:	mov	x2, #0xffffffffffffffff    	// #-1
  40e738:	bl	40e188 <ferror@plt+0xb348>
  40e73c:	ldp	x19, x20, [sp, #16]
  40e740:	ldp	x29, x30, [sp], #96
  40e744:	ret
  40e748:	stp	x29, x30, [sp, #-112]!
  40e74c:	add	x8, sp, #0x38
  40e750:	mov	x29, sp
  40e754:	stp	x19, x20, [sp, #16]
  40e758:	mov	x20, x2
  40e75c:	mov	w19, w0
  40e760:	mov	w0, w1
  40e764:	str	x21, [sp, #32]
  40e768:	mov	x21, x3
  40e76c:	bl	40cfd8 <ferror@plt+0xa198>
  40e770:	add	x3, sp, #0x38
  40e774:	mov	x2, x21
  40e778:	mov	x1, x20
  40e77c:	mov	w0, w19
  40e780:	bl	40e188 <ferror@plt+0xb348>
  40e784:	ldp	x19, x20, [sp, #16]
  40e788:	ldr	x21, [sp, #32]
  40e78c:	ldp	x29, x30, [sp], #112
  40e790:	ret
  40e794:	nop
  40e798:	mov	x2, x1
  40e79c:	mov	w1, w0
  40e7a0:	mov	w0, #0x0                   	// #0
  40e7a4:	b	40e708 <ferror@plt+0xb8c8>
  40e7a8:	mov	x4, x1
  40e7ac:	mov	x3, x2
  40e7b0:	mov	w1, w0
  40e7b4:	mov	x2, x4
  40e7b8:	mov	w0, #0x0                   	// #0
  40e7bc:	b	40e748 <ferror@plt+0xb908>
  40e7c0:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e7c4:	add	x3, x3, #0xbb8
  40e7c8:	stp	x29, x30, [sp, #-80]!
  40e7cc:	add	x5, x3, #0x100
  40e7d0:	ubfx	x7, x2, #5, #3
  40e7d4:	mov	x29, sp
  40e7d8:	ldp	x8, x9, [x3, #256]
  40e7dc:	stp	x8, x9, [sp, #24]
  40e7e0:	add	x6, sp, #0x20
  40e7e4:	and	w8, w2, #0x1f
  40e7e8:	add	x4, sp, #0x18
  40e7ec:	ldp	x2, x3, [x3, #272]
  40e7f0:	stp	x2, x3, [sp, #40]
  40e7f4:	ldp	x2, x3, [x5, #32]
  40e7f8:	stp	x2, x3, [sp, #56]
  40e7fc:	mov	x2, x1
  40e800:	mov	x3, x4
  40e804:	ldr	x1, [x5, #48]
  40e808:	str	x1, [sp, #72]
  40e80c:	mov	x1, x0
  40e810:	mov	w0, #0x0                   	// #0
  40e814:	ldr	w5, [x6, x7, lsl #2]
  40e818:	lsr	w4, w5, w8
  40e81c:	mvn	w4, w4
  40e820:	and	w4, w4, #0x1
  40e824:	lsl	w4, w4, w8
  40e828:	eor	w4, w4, w5
  40e82c:	str	w4, [x6, x7, lsl #2]
  40e830:	bl	40e188 <ferror@plt+0xb348>
  40e834:	ldp	x29, x30, [sp], #80
  40e838:	ret
  40e83c:	nop
  40e840:	mov	w2, w1
  40e844:	mov	x1, #0xffffffffffffffff    	// #-1
  40e848:	b	40e7c0 <ferror@plt+0xb980>
  40e84c:	nop
  40e850:	mov	w2, #0x3a                  	// #58
  40e854:	mov	x1, #0xffffffffffffffff    	// #-1
  40e858:	b	40e7c0 <ferror@plt+0xb980>
  40e85c:	nop
  40e860:	mov	w2, #0x3a                  	// #58
  40e864:	b	40e7c0 <ferror@plt+0xb980>
  40e868:	stp	x29, x30, [sp, #-160]!
  40e86c:	mov	x29, sp
  40e870:	add	x8, sp, #0x20
  40e874:	stp	x19, x20, [sp, #16]
  40e878:	mov	x20, x2
  40e87c:	mov	w19, w0
  40e880:	mov	w0, w1
  40e884:	bl	40cfd8 <ferror@plt+0xa198>
  40e888:	ldp	x0, x1, [sp, #32]
  40e88c:	stp	x0, x1, [sp, #104]
  40e890:	add	x3, sp, #0x68
  40e894:	ldr	w2, [sp, #116]
  40e898:	mov	x1, x20
  40e89c:	ldp	x6, x7, [sp, #48]
  40e8a0:	mvn	w4, w2
  40e8a4:	ldp	x8, x9, [sp, #64]
  40e8a8:	and	w4, w4, #0x4000000
  40e8ac:	ldr	x5, [sp, #80]
  40e8b0:	eor	w4, w4, w2
  40e8b4:	mov	w0, w19
  40e8b8:	mov	x2, #0xffffffffffffffff    	// #-1
  40e8bc:	str	w4, [sp, #116]
  40e8c0:	stp	x6, x7, [sp, #120]
  40e8c4:	stp	x8, x9, [sp, #136]
  40e8c8:	str	x5, [sp, #152]
  40e8cc:	bl	40e188 <ferror@plt+0xb348>
  40e8d0:	ldp	x19, x20, [sp, #16]
  40e8d4:	ldp	x29, x30, [sp], #160
  40e8d8:	ret
  40e8dc:	nop
  40e8e0:	adrp	x5, 429000 <_obstack_memory_used@@Base+0x17498>
  40e8e4:	add	x5, x5, #0xbb8
  40e8e8:	stp	x29, x30, [sp, #-80]!
  40e8ec:	mov	x6, x1
  40e8f0:	mov	w1, #0xa                   	// #10
  40e8f4:	mov	x29, sp
  40e8f8:	ldp	x8, x9, [x5, #256]
  40e8fc:	stp	x8, x9, [sp, #24]
  40e900:	cmp	x6, #0x0
  40e904:	str	w1, [sp, #24]
  40e908:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40e90c:	ldp	x10, x11, [x5, #272]
  40e910:	stp	x10, x11, [sp, #40]
  40e914:	ldp	x8, x9, [x5, #288]
  40e918:	stp	x8, x9, [sp, #56]
  40e91c:	ldr	x1, [x5, #304]
  40e920:	str	x1, [sp, #72]
  40e924:	b.eq	40e948 <ferror@plt+0xbb08>  // b.none
  40e928:	mov	x5, x2
  40e92c:	mov	x1, x3
  40e930:	mov	x2, x4
  40e934:	add	x3, sp, #0x18
  40e938:	stp	x6, x5, [sp, #64]
  40e93c:	bl	40e188 <ferror@plt+0xb348>
  40e940:	ldp	x29, x30, [sp], #80
  40e944:	ret
  40e948:	bl	402a80 <abort@plt>
  40e94c:	nop
  40e950:	mov	x4, #0xffffffffffffffff    	// #-1
  40e954:	b	40e8e0 <ferror@plt+0xbaa0>
  40e958:	mov	x4, x1
  40e95c:	mov	x3, x2
  40e960:	mov	x1, x0
  40e964:	mov	x2, x4
  40e968:	mov	w0, #0x0                   	// #0
  40e96c:	mov	x4, #0xffffffffffffffff    	// #-1
  40e970:	b	40e8e0 <ferror@plt+0xbaa0>
  40e974:	nop
  40e978:	mov	x4, x1
  40e97c:	mov	x5, x2
  40e980:	mov	x1, x0
  40e984:	mov	x2, x4
  40e988:	mov	w0, #0x0                   	// #0
  40e98c:	mov	x4, x3
  40e990:	mov	x3, x5
  40e994:	b	40e8e0 <ferror@plt+0xbaa0>
  40e998:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e99c:	add	x3, x3, #0x4c0
  40e9a0:	add	x3, x3, #0x20
  40e9a4:	b	40e188 <ferror@plt+0xb348>
  40e9a8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e9ac:	add	x3, x3, #0x4c0
  40e9b0:	mov	x2, x1
  40e9b4:	add	x3, x3, #0x20
  40e9b8:	mov	x1, x0
  40e9bc:	mov	w0, #0x0                   	// #0
  40e9c0:	b	40e188 <ferror@plt+0xb348>
  40e9c4:	nop
  40e9c8:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e9cc:	add	x3, x3, #0x4c0
  40e9d0:	add	x3, x3, #0x20
  40e9d4:	mov	x2, #0xffffffffffffffff    	// #-1
  40e9d8:	b	40e188 <ferror@plt+0xb348>
  40e9dc:	nop
  40e9e0:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x17498>
  40e9e4:	add	x3, x3, #0x4c0
  40e9e8:	mov	x1, x0
  40e9ec:	add	x3, x3, #0x20
  40e9f0:	mov	x2, #0xffffffffffffffff    	// #-1
  40e9f4:	mov	w0, #0x0                   	// #0
  40e9f8:	b	40e188 <ferror@plt+0xb348>
  40e9fc:	nop
  40ea00:	stp	x29, x30, [sp, #-48]!
  40ea04:	mov	x29, sp
  40ea08:	stp	x19, x20, [sp, #16]
  40ea0c:	stp	x21, x22, [sp, #32]
  40ea10:	cbz	x0, 40ea60 <ferror@plt+0xbc20>
  40ea14:	mov	x19, x0
  40ea18:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  40ea1c:	ldr	w22, [x0, #1208]
  40ea20:	bl	402db0 <__errno_location@plt>
  40ea24:	ldr	w21, [x0]
  40ea28:	cbnz	w21, 40ea64 <ferror@plt+0xbc24>
  40ea2c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40ea30:	mov	w2, #0x5                   	// #5
  40ea34:	add	x1, x1, #0xf30
  40ea38:	mov	x0, #0x0                   	// #0
  40ea3c:	bl	402d20 <dcgettext@plt>
  40ea40:	mov	x20, x0
  40ea44:	mov	x0, x19
  40ea48:	bl	40e9e0 <ferror@plt+0xbba0>
  40ea4c:	mov	x2, x20
  40ea50:	mov	x3, x0
  40ea54:	mov	w1, w21
  40ea58:	mov	w0, w22
  40ea5c:	bl	4027b0 <error@plt>
  40ea60:	bl	402a80 <abort@plt>
  40ea64:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40ea68:	mov	w2, #0x5                   	// #5
  40ea6c:	add	x1, x1, #0xf40
  40ea70:	mov	x0, #0x0                   	// #0
  40ea74:	bl	402d20 <dcgettext@plt>
  40ea78:	mov	x20, x0
  40ea7c:	b	40ea44 <ferror@plt+0xbc04>
  40ea80:	stp	x29, x30, [sp, #-96]!
  40ea84:	mov	x29, sp
  40ea88:	stp	x19, x20, [sp, #16]
  40ea8c:	cbz	x1, 40eb88 <ferror@plt+0xbd48>
  40ea90:	stp	x21, x22, [sp, #32]
  40ea94:	mov	x20, x1
  40ea98:	mov	x21, x0
  40ea9c:	cbz	x0, 40eb00 <ferror@plt+0xbcc0>
  40eaa0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40eaa4:	add	x1, x1, #0xf60
  40eaa8:	bl	411d28 <_obstack_memory_used@@Base+0x1c0>
  40eaac:	mov	x22, x0
  40eab0:	cbz	x0, 40ec8c <ferror@plt+0xbe4c>
  40eab4:	mov	x0, #0x1038                	// #4152
  40eab8:	bl	410220 <ferror@plt+0xd3e0>
  40eabc:	mov	x19, x0
  40eac0:	cmp	x20, #0x1, lsl #12
  40eac4:	adrp	x2, 40e000 <ferror@plt+0xb1c0>
  40eac8:	add	x2, x2, #0xa00
  40eacc:	mov	x0, x22
  40ead0:	add	x1, x19, #0x18
  40ead4:	stp	x22, x2, [x19]
  40ead8:	mov	x3, #0x1000                	// #4096
  40eadc:	mov	w2, #0x0                   	// #0
  40eae0:	str	x21, [x19, #16]
  40eae4:	csel	x3, x20, x3, ls  // ls = plast
  40eae8:	bl	402820 <setvbuf@plt>
  40eaec:	ldp	x21, x22, [sp, #32]
  40eaf0:	mov	x0, x19
  40eaf4:	ldp	x19, x20, [sp, #16]
  40eaf8:	ldp	x29, x30, [sp], #96
  40eafc:	ret
  40eb00:	mov	x0, #0x1038                	// #4152
  40eb04:	stp	x23, x24, [sp, #48]
  40eb08:	bl	410220 <ferror@plt+0xd3e0>
  40eb0c:	mov	x19, x0
  40eb10:	adrp	x2, 40e000 <ferror@plt+0xb1c0>
  40eb14:	add	x2, x2, #0xa00
  40eb18:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2498>
  40eb1c:	mov	w1, #0x0                   	// #0
  40eb20:	add	x0, x0, #0xf50
  40eb24:	stp	xzr, x2, [x19]
  40eb28:	add	x22, x19, #0x20
  40eb2c:	stp	xzr, xzr, [x19, #16]
  40eb30:	bl	402900 <open@plt>
  40eb34:	mov	w21, w0
  40eb38:	tbnz	w0, #31, 40ebb4 <ferror@plt+0xbd74>
  40eb3c:	cmp	x20, #0x800
  40eb40:	mov	x1, x22
  40eb44:	mov	x23, #0x800                 	// #2048
  40eb48:	csel	x2, x20, x23, ls  // ls = plast
  40eb4c:	mov	x3, #0x1018                	// #4120
  40eb50:	bl	402c20 <__read_chk@plt>
  40eb54:	mov	x20, x0
  40eb58:	mov	w0, w21
  40eb5c:	bl	402a10 <close@plt>
  40eb60:	cmp	x20, #0x7ff
  40eb64:	b.le	40ec98 <ferror@plt+0xbe58>
  40eb68:	mov	x0, x22
  40eb6c:	bl	40f120 <ferror@plt+0xc2e0>
  40eb70:	mov	x0, x19
  40eb74:	ldp	x19, x20, [sp, #16]
  40eb78:	ldp	x21, x22, [sp, #32]
  40eb7c:	ldp	x23, x24, [sp, #48]
  40eb80:	ldp	x29, x30, [sp], #96
  40eb84:	ret
  40eb88:	mov	x0, #0x1038                	// #4152
  40eb8c:	bl	410220 <ferror@plt+0xd3e0>
  40eb90:	adrp	x1, 40e000 <ferror@plt+0xb1c0>
  40eb94:	add	x1, x1, #0xa00
  40eb98:	stp	xzr, x1, [x0]
  40eb9c:	mov	x19, x0
  40eba0:	str	xzr, [x0, #16]
  40eba4:	mov	x0, x19
  40eba8:	ldp	x19, x20, [sp, #16]
  40ebac:	ldp	x29, x30, [sp], #96
  40ebb0:	ret
  40ebb4:	add	x21, sp, #0x50
  40ebb8:	mov	x1, #0x0                   	// #0
  40ebbc:	mov	x0, x21
  40ebc0:	stp	x25, x26, [sp, #64]
  40ebc4:	bl	4029b0 <gettimeofday@plt>
  40ebc8:	ldp	x0, x1, [sp, #80]
  40ebcc:	stp	x0, x1, [x19, #32]
  40ebd0:	mov	x25, #0x14                  	// #20
  40ebd4:	bl	4028b0 <getpid@plt>
  40ebd8:	mov	w3, w0
  40ebdc:	mov	x1, x21
  40ebe0:	add	x0, x19, #0x30
  40ebe4:	mov	x2, #0x4                   	// #4
  40ebe8:	str	w3, [sp, #80]
  40ebec:	bl	402720 <memcpy@plt>
  40ebf0:	mov	x20, #0x800                 	// #2048
  40ebf4:	sub	x23, x20, x25
  40ebf8:	cmp	x23, #0x4
  40ebfc:	mov	x26, #0x4                   	// #4
  40ec00:	csel	x23, x23, x26, ls  // ls = plast
  40ec04:	add	x24, x23, x25
  40ec08:	bl	402910 <getppid@plt>
  40ec0c:	mov	w3, w0
  40ec10:	mov	x2, x23
  40ec14:	add	x0, x22, x25
  40ec18:	mov	x1, x21
  40ec1c:	str	w3, [sp, #80]
  40ec20:	bl	402720 <memcpy@plt>
  40ec24:	cmp	x24, #0x7ff
  40ec28:	b.hi	40ed1c <ferror@plt+0xbedc>  // b.pmore
  40ec2c:	sub	x23, x20, x24
  40ec30:	cmp	x23, x26
  40ec34:	csel	x23, x23, x26, ls  // ls = plast
  40ec38:	add	x25, x24, x23
  40ec3c:	bl	4027d0 <getuid@plt>
  40ec40:	mov	w3, w0
  40ec44:	mov	x2, x23
  40ec48:	add	x0, x22, x24
  40ec4c:	mov	x1, x21
  40ec50:	str	w3, [sp, #80]
  40ec54:	bl	402720 <memcpy@plt>
  40ec58:	cmp	x25, #0x7ff
  40ec5c:	b.hi	40ed1c <ferror@plt+0xbedc>  // b.pmore
  40ec60:	bl	402bc0 <getgid@plt>
  40ec64:	mov	w3, w0
  40ec68:	sub	x2, x20, x25
  40ec6c:	add	x0, x22, x25
  40ec70:	cmp	x2, x26
  40ec74:	mov	x1, x21
  40ec78:	csel	x2, x2, x26, ls  // ls = plast
  40ec7c:	str	w3, [sp, #80]
  40ec80:	bl	402720 <memcpy@plt>
  40ec84:	ldp	x25, x26, [sp, #64]
  40ec88:	b	40eb68 <ferror@plt+0xbd28>
  40ec8c:	mov	x19, #0x0                   	// #0
  40ec90:	ldp	x21, x22, [sp, #32]
  40ec94:	b	40eaf0 <ferror@plt+0xbcb0>
  40ec98:	cmp	x20, #0x0
  40ec9c:	mov	x1, #0x10                  	// #16
  40eca0:	csel	x20, x20, xzr, ge  // ge = tcont
  40eca4:	add	x21, sp, #0x50
  40eca8:	sub	x24, x23, x20
  40ecac:	mov	x0, x21
  40ecb0:	cmp	x24, x1
  40ecb4:	stp	x25, x26, [sp, #64]
  40ecb8:	csel	x24, x24, x1, ls  // ls = plast
  40ecbc:	add	x25, x22, x20
  40ecc0:	mov	x1, #0x0                   	// #0
  40ecc4:	bl	4029b0 <gettimeofday@plt>
  40ecc8:	add	x20, x24, x20
  40eccc:	mov	x2, x24
  40ecd0:	mov	x1, x21
  40ecd4:	mov	x0, x25
  40ecd8:	bl	402720 <memcpy@plt>
  40ecdc:	cmp	x20, #0x7ff
  40ece0:	b.hi	40ed1c <ferror@plt+0xbedc>  // b.pmore
  40ece4:	sub	x23, x23, x20
  40ece8:	mov	x0, #0x4                   	// #4
  40ecec:	cmp	x23, x0
  40ecf0:	csel	x23, x23, x0, ls  // ls = plast
  40ecf4:	add	x25, x20, x23
  40ecf8:	bl	4028b0 <getpid@plt>
  40ecfc:	mov	w3, w0
  40ed00:	mov	x2, x23
  40ed04:	add	x0, x22, x20
  40ed08:	mov	x1, x21
  40ed0c:	str	w3, [sp, #80]
  40ed10:	bl	402720 <memcpy@plt>
  40ed14:	cmp	x25, #0x7ff
  40ed18:	b.ls	40ebf0 <ferror@plt+0xbdb0>  // b.plast
  40ed1c:	ldp	x25, x26, [sp, #64]
  40ed20:	b	40eb68 <ferror@plt+0xbd28>
  40ed24:	nop
  40ed28:	str	x1, [x0, #8]
  40ed2c:	ret
  40ed30:	str	x1, [x0, #16]
  40ed34:	ret
  40ed38:	stp	x29, x30, [sp, #-80]!
  40ed3c:	mov	x29, sp
  40ed40:	stp	x23, x24, [sp, #48]
  40ed44:	ldr	x23, [x0]
  40ed48:	stp	x19, x20, [sp, #16]
  40ed4c:	mov	x20, x1
  40ed50:	stp	x21, x22, [sp, #32]
  40ed54:	mov	x19, x2
  40ed58:	mov	x21, x0
  40ed5c:	cbz	x23, 40edc4 <ferror@plt+0xbf84>
  40ed60:	bl	402db0 <__errno_location@plt>
  40ed64:	mov	x22, x0
  40ed68:	b	40ed8c <ferror@plt+0xbf4c>
  40ed6c:	ldp	x0, x2, [x21]
  40ed70:	ldr	w3, [x0]
  40ed74:	ldr	x0, [x21, #16]
  40ed78:	tst	x3, #0x20
  40ed7c:	csel	w1, w1, wzr, ne  // ne = any
  40ed80:	str	w1, [x22]
  40ed84:	blr	x2
  40ed88:	ldr	x23, [x21]
  40ed8c:	mov	x2, x19
  40ed90:	mov	x0, x20
  40ed94:	mov	x1, #0x1                   	// #1
  40ed98:	mov	x3, x23
  40ed9c:	bl	402af0 <fread_unlocked@plt>
  40eda0:	ldr	w1, [x22]
  40eda4:	add	x20, x20, x0
  40eda8:	subs	x19, x19, x0
  40edac:	b.ne	40ed6c <ferror@plt+0xbf2c>  // b.any
  40edb0:	ldp	x19, x20, [sp, #16]
  40edb4:	ldp	x21, x22, [sp, #32]
  40edb8:	ldp	x23, x24, [sp, #48]
  40edbc:	ldp	x29, x30, [sp], #80
  40edc0:	ret
  40edc4:	ldr	x22, [x0, #24]
  40edc8:	str	x25, [sp, #64]
  40edcc:	add	x23, x0, #0x838
  40edd0:	add	x24, x0, #0x20
  40edd4:	cmp	x2, x22
  40edd8:	mov	x25, #0x800                 	// #2048
  40eddc:	b.ls	40ee9c <ferror@plt+0xc05c>  // b.plast
  40ede0:	mov	x0, x20
  40ede4:	sub	x1, x25, x22
  40ede8:	add	x20, x20, x22
  40edec:	add	x1, x23, x1
  40edf0:	mov	x2, x22
  40edf4:	bl	402720 <memcpy@plt>
  40edf8:	mov	x1, x23
  40edfc:	mov	x0, x24
  40ee00:	sub	x19, x19, x22
  40ee04:	tst	x20, #0x7
  40ee08:	b.eq	40ee44 <ferror@plt+0xc004>  // b.none
  40ee0c:	bl	40eef8 <ferror@plt+0xc0b8>
  40ee10:	mov	x22, #0x800                 	// #2048
  40ee14:	cmp	x19, x22
  40ee18:	b.hi	40ede0 <ferror@plt+0xbfa0>  // b.pmore
  40ee1c:	nop
  40ee20:	mov	x22, #0x800                 	// #2048
  40ee24:	mov	x2, x19
  40ee28:	mov	x1, x23
  40ee2c:	mov	x0, x20
  40ee30:	sub	x19, x22, x19
  40ee34:	bl	402720 <memcpy@plt>
  40ee38:	ldr	x25, [sp, #64]
  40ee3c:	str	x19, [x21, #24]
  40ee40:	b	40edb0 <ferror@plt+0xbf70>
  40ee44:	mov	x22, x19
  40ee48:	and	x19, x19, #0x7ff
  40ee4c:	add	x25, x20, x22
  40ee50:	b	40ee64 <ferror@plt+0xc024>
  40ee54:	mov	x1, x20
  40ee58:	bl	40eef8 <ferror@plt+0xc0b8>
  40ee5c:	subs	x22, x22, #0x800
  40ee60:	b.eq	40ee80 <ferror@plt+0xc040>  // b.none
  40ee64:	mov	x0, x24
  40ee68:	cmp	x22, x19
  40ee6c:	sub	x20, x25, x22
  40ee70:	b.ne	40ee54 <ferror@plt+0xc014>  // b.any
  40ee74:	mov	x1, x23
  40ee78:	bl	40eef8 <ferror@plt+0xc0b8>
  40ee7c:	b	40ee20 <ferror@plt+0xbfe0>
  40ee80:	ldr	x25, [sp, #64]
  40ee84:	str	xzr, [x21, #24]
  40ee88:	ldp	x19, x20, [sp, #16]
  40ee8c:	ldp	x21, x22, [sp, #32]
  40ee90:	ldp	x23, x24, [sp, #48]
  40ee94:	ldp	x29, x30, [sp], #80
  40ee98:	ret
  40ee9c:	sub	x23, x23, x22
  40eea0:	add	x23, x23, x25
  40eea4:	b	40ee24 <ferror@plt+0xbfe4>
  40eea8:	stp	x29, x30, [sp, #-32]!
  40eeac:	mov	x2, #0xffffffffffffffff    	// #-1
  40eeb0:	mov	x1, #0x1038                	// #4152
  40eeb4:	mov	x29, sp
  40eeb8:	stp	x19, x20, [sp, #16]
  40eebc:	mov	x19, x0
  40eec0:	ldr	x20, [x0]
  40eec4:	bl	402cd0 <__explicit_bzero_chk@plt>
  40eec8:	mov	x0, x19
  40eecc:	bl	402ba0 <free@plt>
  40eed0:	cbz	x20, 40eee4 <ferror@plt+0xc0a4>
  40eed4:	mov	x0, x20
  40eed8:	ldp	x19, x20, [sp, #16]
  40eedc:	ldp	x29, x30, [sp], #32
  40eee0:	b	4112f0 <ferror@plt+0xe4b0>
  40eee4:	mov	w0, #0x0                   	// #0
  40eee8:	ldp	x19, x20, [sp, #16]
  40eeec:	ldp	x29, x30, [sp], #32
  40eef0:	ret
  40eef4:	nop
  40eef8:	ldr	x8, [x0, #2064]
  40eefc:	add	x6, x0, #0x400
  40ef00:	ldr	x4, [x0, #2056]
  40ef04:	add	x8, x8, #0x1
  40ef08:	ldr	x2, [x0, #2048]
  40ef0c:	mov	x5, x1
  40ef10:	mov	x3, x0
  40ef14:	add	x7, x4, x8
  40ef18:	str	x8, [x0, #2064]
  40ef1c:	nop
  40ef20:	ldr	x8, [x3]
  40ef24:	eor	x9, x2, x2, lsl #21
  40ef28:	ldr	x2, [x3, #1024]
  40ef2c:	and	x4, x8, #0x7f8
  40ef30:	add	x3, x3, #0x20
  40ef34:	add	x5, x5, #0x20
  40ef38:	sub	x2, x2, #0x1
  40ef3c:	ldr	x4, [x0, x4]
  40ef40:	sub	x2, x2, x9
  40ef44:	add	x4, x2, x4
  40ef48:	eor	x2, x2, x2, lsr #5
  40ef4c:	add	x4, x4, x7
  40ef50:	stur	x4, [x3, #-32]
  40ef54:	lsr	x4, x4, #8
  40ef58:	and	x4, x4, #0x7f8
  40ef5c:	ldr	x4, [x0, x4]
  40ef60:	add	x8, x8, x4
  40ef64:	stur	x8, [x5, #-32]
  40ef68:	ldur	x7, [x3, #-24]
  40ef6c:	ldr	x9, [x3, #1000]
  40ef70:	and	x4, x7, #0x7f8
  40ef74:	add	x2, x2, x9
  40ef78:	ldr	x9, [x0, x4]
  40ef7c:	eor	x4, x2, x2, lsl #12
  40ef80:	add	x2, x2, x9
  40ef84:	add	x2, x2, x8
  40ef88:	stur	x2, [x3, #-24]
  40ef8c:	lsr	x2, x2, #8
  40ef90:	and	x2, x2, #0x7f8
  40ef94:	ldr	x2, [x0, x2]
  40ef98:	add	x7, x7, x2
  40ef9c:	stur	x7, [x5, #-24]
  40efa0:	ldur	x8, [x3, #-16]
  40efa4:	ldr	x9, [x3, #1008]
  40efa8:	and	x2, x8, #0x7f8
  40efac:	add	x4, x4, x9
  40efb0:	ldr	x2, [x0, x2]
  40efb4:	eor	x9, x4, x4, lsr #33
  40efb8:	add	x4, x4, x2
  40efbc:	add	x4, x4, x7
  40efc0:	stur	x4, [x3, #-16]
  40efc4:	lsr	x4, x4, #8
  40efc8:	and	x4, x4, #0x7f8
  40efcc:	ldr	x4, [x0, x4]
  40efd0:	add	x8, x8, x4
  40efd4:	stur	x8, [x5, #-16]
  40efd8:	ldur	x7, [x3, #-8]
  40efdc:	ldr	x2, [x3, #1016]
  40efe0:	and	x4, x7, #0x7f8
  40efe4:	add	x2, x9, x2
  40efe8:	ldr	x4, [x0, x4]
  40efec:	add	x4, x2, x4
  40eff0:	add	x4, x4, x8
  40eff4:	stur	x4, [x3, #-8]
  40eff8:	cmp	x3, x6
  40effc:	lsr	x4, x4, #8
  40f000:	and	x4, x4, #0x7f8
  40f004:	ldr	x4, [x0, x4]
  40f008:	add	x7, x7, x4
  40f00c:	stur	x7, [x5, #-8]
  40f010:	b.ne	40ef20 <ferror@plt+0xc0e0>  // b.any
  40f014:	add	x6, x1, #0x400
  40f018:	mov	x5, x0
  40f01c:	add	x1, x1, #0x800
  40f020:	ldr	x8, [x5, #1024]
  40f024:	eor	x2, x2, x2, lsl #21
  40f028:	ldr	x3, [x5]
  40f02c:	and	x4, x8, #0x7f8
  40f030:	add	x6, x6, #0x20
  40f034:	add	x5, x5, #0x20
  40f038:	sub	x3, x3, #0x1
  40f03c:	ldr	x4, [x0, x4]
  40f040:	sub	x2, x3, x2
  40f044:	add	x4, x2, x4
  40f048:	eor	x2, x2, x2, lsr #5
  40f04c:	add	x4, x4, x7
  40f050:	str	x4, [x5, #992]
  40f054:	lsr	x4, x4, #8
  40f058:	and	x4, x4, #0x7f8
  40f05c:	ldr	x7, [x0, x4]
  40f060:	add	x7, x8, x7
  40f064:	stur	x7, [x6, #-32]
  40f068:	ldr	x4, [x5, #1000]
  40f06c:	ldur	x8, [x5, #-24]
  40f070:	and	x3, x4, #0x7f8
  40f074:	add	x2, x2, x8
  40f078:	ldr	x8, [x0, x3]
  40f07c:	eor	x3, x2, x2, lsl #12
  40f080:	add	x2, x2, x8
  40f084:	add	x2, x2, x7
  40f088:	str	x2, [x5, #1000]
  40f08c:	lsr	x2, x2, #8
  40f090:	and	x2, x2, #0x7f8
  40f094:	ldr	x2, [x0, x2]
  40f098:	add	x4, x4, x2
  40f09c:	stur	x4, [x6, #-24]
  40f0a0:	ldr	x7, [x5, #1008]
  40f0a4:	ldur	x8, [x5, #-16]
  40f0a8:	and	x2, x7, #0x7f8
  40f0ac:	add	x3, x3, x8
  40f0b0:	ldr	x2, [x0, x2]
  40f0b4:	eor	x8, x3, x3, lsr #33
  40f0b8:	add	x3, x3, x2
  40f0bc:	add	x3, x3, x4
  40f0c0:	str	x3, [x5, #1008]
  40f0c4:	lsr	x3, x3, #8
  40f0c8:	and	x3, x3, #0x7f8
  40f0cc:	ldr	x3, [x0, x3]
  40f0d0:	add	x7, x7, x3
  40f0d4:	stur	x7, [x6, #-16]
  40f0d8:	ldr	x4, [x5, #1016]
  40f0dc:	ldur	x2, [x5, #-8]
  40f0e0:	and	x3, x4, #0x7f8
  40f0e4:	add	x2, x8, x2
  40f0e8:	ldr	x3, [x0, x3]
  40f0ec:	add	x3, x2, x3
  40f0f0:	add	x3, x3, x7
  40f0f4:	str	x3, [x5, #1016]
  40f0f8:	lsr	x3, x3, #8
  40f0fc:	and	x3, x3, #0x7f8
  40f100:	ldr	x7, [x0, x3]
  40f104:	add	x7, x4, x7
  40f108:	stur	x7, [x6, #-8]
  40f10c:	cmp	x6, x1
  40f110:	b.ne	40f020 <ferror@plt+0xc1e0>  // b.any
  40f114:	str	x2, [x0, #2048]
  40f118:	str	x7, [x0, #2056]
  40f11c:	ret
  40f120:	mov	x3, #0xc0ab                	// #49323
  40f124:	mov	x14, #0x89ed                	// #35309
  40f128:	mov	x1, #0x9315                	// #37653
  40f12c:	mov	x2, #0xe0ce                	// #57550
  40f130:	mov	x7, #0x5524                	// #21796
  40f134:	mov	x6, #0x12a0                	// #4768
  40f138:	mov	x10, #0xc862                	// #51298
  40f13c:	mov	x9, #0x4b7c                	// #19324
  40f140:	movk	x3, #0x6c44, lsl #16
  40f144:	movk	x14, #0xcbfc, lsl #16
  40f148:	movk	x1, #0xa5a0, lsl #16
  40f14c:	movk	x2, #0x8355, lsl #16
  40f150:	movk	x7, #0x4a59, lsl #16
  40f154:	movk	x6, #0x3d47, lsl #16
  40f158:	movk	x10, #0xc73a, lsl #16
  40f15c:	movk	x9, #0xa288, lsl #16
  40f160:	movk	x3, #0x704f, lsl #32
  40f164:	movk	x14, #0x5bf2, lsl #32
  40f168:	movk	x1, #0x4a0f, lsl #32
  40f16c:	movk	x2, #0x53db, lsl #32
  40f170:	movk	x7, #0x2e82, lsl #32
  40f174:	movk	x6, #0xa505, lsl #32
  40f178:	movk	x10, #0xb322, lsl #32
  40f17c:	movk	x9, #0x4677, lsl #32
  40f180:	mov	x5, x0
  40f184:	add	x8, x0, #0x800
  40f188:	mov	x4, x0
  40f18c:	movk	x3, #0x98f5, lsl #48
  40f190:	movk	x14, #0xae98, lsl #48
  40f194:	movk	x1, #0x48fe, lsl #48
  40f198:	movk	x2, #0x82f0, lsl #48
  40f19c:	movk	x7, #0xb29b, lsl #48
  40f1a0:	movk	x6, #0x8c0e, lsl #48
  40f1a4:	movk	x10, #0xb9f8, lsl #48
  40f1a8:	movk	x9, #0x647c, lsl #48
  40f1ac:	nop
  40f1b0:	ldr	x12, [x4, #32]
  40f1b4:	ldr	x13, [x4]
  40f1b8:	add	x2, x2, x12
  40f1bc:	ldr	x11, [x4, #56]
  40f1c0:	sub	x13, x13, x2
  40f1c4:	add	x9, x13, x9
  40f1c8:	ldp	x12, x13, [x4, #8]
  40f1cc:	add	x3, x3, x11
  40f1d0:	ldr	x11, [x4, #40]
  40f1d4:	add	x1, x1, x11
  40f1d8:	ldr	x11, [x4, #48]
  40f1dc:	eor	x1, x1, x3, lsr #9
  40f1e0:	sub	x12, x12, x1
  40f1e4:	add	x3, x3, x9
  40f1e8:	add	x10, x12, x10
  40f1ec:	add	x11, x14, x11
  40f1f0:	ldr	x12, [x4, #24]
  40f1f4:	eor	x11, x11, x9, lsl #9
  40f1f8:	eor	x3, x3, x10, lsr #23
  40f1fc:	sub	x13, x13, x11
  40f200:	add	x6, x13, x6
  40f204:	sub	x12, x12, x3
  40f208:	add	x7, x12, x7
  40f20c:	add	x9, x9, x10
  40f210:	eor	x9, x9, x6, lsl #15
  40f214:	add	x10, x10, x6
  40f218:	eor	x10, x10, x7, lsr #14
  40f21c:	sub	x2, x2, x9
  40f220:	sub	x1, x1, x10
  40f224:	add	x6, x6, x7
  40f228:	eor	x6, x6, x2, lsl #20
  40f22c:	add	x7, x7, x2
  40f230:	eor	x7, x7, x1, lsr #17
  40f234:	sub	x11, x11, x6
  40f238:	sub	x3, x3, x7
  40f23c:	add	x2, x2, x1
  40f240:	eor	x2, x2, x11, lsl #14
  40f244:	add	x1, x1, x11
  40f248:	add	x14, x11, x3
  40f24c:	stp	x9, x10, [x4]
  40f250:	stp	x6, x7, [x4, #16]
  40f254:	stp	x2, x1, [x4, #32]
  40f258:	stp	x14, x3, [x4, #48]
  40f25c:	add	x4, x4, #0x40
  40f260:	cmp	x8, x4
  40f264:	b.ne	40f1b0 <ferror@plt+0xc370>  // b.any
  40f268:	ldp	x12, x13, [x5]
  40f26c:	ldr	x11, [x5, #32]
  40f270:	ldr	x4, [x5, #56]
  40f274:	add	x2, x2, x11
  40f278:	sub	x12, x12, x2
  40f27c:	add	x3, x3, x4
  40f280:	add	x9, x12, x9
  40f284:	ldr	x4, [x5, #40]
  40f288:	ldp	x12, x11, [x5, #16]
  40f28c:	add	x1, x1, x4
  40f290:	ldr	x4, [x5, #48]
  40f294:	eor	x1, x1, x3, lsr #9
  40f298:	sub	x13, x13, x1
  40f29c:	add	x3, x3, x9
  40f2a0:	add	x10, x13, x10
  40f2a4:	add	x4, x14, x4
  40f2a8:	eor	x4, x4, x9, lsl #9
  40f2ac:	add	x9, x9, x10
  40f2b0:	eor	x3, x3, x10, lsr #23
  40f2b4:	sub	x12, x12, x4
  40f2b8:	add	x6, x12, x6
  40f2bc:	sub	x11, x11, x3
  40f2c0:	add	x7, x11, x7
  40f2c4:	add	x10, x10, x6
  40f2c8:	eor	x9, x9, x6, lsl #15
  40f2cc:	add	x6, x6, x7
  40f2d0:	eor	x10, x10, x7, lsr #14
  40f2d4:	sub	x2, x2, x9
  40f2d8:	sub	x1, x1, x10
  40f2dc:	add	x7, x7, x2
  40f2e0:	eor	x6, x6, x2, lsl #20
  40f2e4:	add	x2, x2, x1
  40f2e8:	eor	x7, x7, x1, lsr #17
  40f2ec:	sub	x4, x4, x6
  40f2f0:	sub	x3, x3, x7
  40f2f4:	add	x1, x1, x4
  40f2f8:	eor	x2, x2, x4, lsl #14
  40f2fc:	add	x14, x4, x3
  40f300:	stp	x9, x10, [x5]
  40f304:	stp	x6, x7, [x5, #16]
  40f308:	stp	x2, x1, [x5, #32]
  40f30c:	stp	x14, x3, [x5, #48]
  40f310:	add	x5, x5, #0x40
  40f314:	cmp	x8, x5
  40f318:	b.ne	40f268 <ferror@plt+0xc428>  // b.any
  40f31c:	str	xzr, [x0, #2048]
  40f320:	str	xzr, [x0, #2056]
  40f324:	str	xzr, [x0, #2064]
  40f328:	ret
  40f32c:	nop
  40f330:	stp	x29, x30, [sp, #-48]!
  40f334:	add	x1, x0, #0x18
  40f338:	mov	x29, sp
  40f33c:	stp	x19, x20, [sp, #16]
  40f340:	mov	x19, x0
  40f344:	ldp	x20, x0, [x1, #16]
  40f348:	stp	x21, x22, [sp, #32]
  40f34c:	subs	x22, x0, x20
  40f350:	sub	x22, x22, #0x1
  40f354:	b.eq	40f420 <ferror@plt+0xc5e0>  // b.none
  40f358:	ldr	x2, [x1, #48]
  40f35c:	ldr	x3, [x1, #8]
  40f360:	add	x0, x0, x2
  40f364:	ldr	x4, [x1, #32]
  40f368:	bic	x2, x0, x2
  40f36c:	str	x2, [x1, #24]
  40f370:	sub	x0, x2, x3
  40f374:	sub	x3, x4, x3
  40f378:	cmp	x0, x3
  40f37c:	b.ls	40f388 <ferror@plt+0xc548>  // b.plast
  40f380:	mov	x2, x4
  40f384:	str	x4, [x1, #24]
  40f388:	ldr	x0, [x19, #144]
  40f38c:	str	x2, [x1, #16]
  40f390:	ldr	x1, [x19, #136]
  40f394:	add	x21, x19, #0x70
  40f398:	sub	x0, x0, x1
  40f39c:	cmp	x0, #0x7
  40f3a0:	b.ls	40f3f8 <ferror@plt+0xc5b8>  // b.plast
  40f3a4:	str	x20, [x1]
  40f3a8:	add	x20, x19, #0xc8
  40f3ac:	ldr	x1, [x21, #24]
  40f3b0:	ldr	x0, [x20, #32]
  40f3b4:	add	x1, x1, #0x8
  40f3b8:	str	x1, [x21, #24]
  40f3bc:	ldr	x1, [x20, #24]
  40f3c0:	sub	x0, x0, x1
  40f3c4:	cmp	x0, #0x7
  40f3c8:	b.ls	40f40c <ferror@plt+0xc5cc>  // b.plast
  40f3cc:	str	x22, [x1]
  40f3d0:	ldr	x1, [x20, #24]
  40f3d4:	ldr	x0, [x19]
  40f3d8:	add	x1, x1, #0x8
  40f3dc:	ldp	x21, x22, [sp, #32]
  40f3e0:	str	x1, [x20, #24]
  40f3e4:	add	x0, x0, #0x1
  40f3e8:	str	x0, [x19]
  40f3ec:	ldp	x19, x20, [sp, #16]
  40f3f0:	ldp	x29, x30, [sp], #48
  40f3f4:	ret
  40f3f8:	mov	x1, #0x8                   	// #8
  40f3fc:	mov	x0, x21
  40f400:	bl	411988 <_obstack_newchunk@@Base>
  40f404:	ldr	x1, [x21, #24]
  40f408:	b	40f3a4 <ferror@plt+0xc564>
  40f40c:	mov	x1, #0x8                   	// #8
  40f410:	mov	x0, x20
  40f414:	bl	411988 <_obstack_newchunk@@Base>
  40f418:	ldr	x1, [x20, #24]
  40f41c:	b	40f3cc <ferror@plt+0xc58c>
  40f420:	ldrb	w2, [x1, #80]
  40f424:	orr	w2, w2, #0x2
  40f428:	strb	w2, [x1, #80]
  40f42c:	b	40f358 <ferror@plt+0xc518>
  40f430:	stp	x29, x30, [sp, #-48]!
  40f434:	mov	x2, #0x0                   	// #0
  40f438:	mov	x1, #0x0                   	// #0
  40f43c:	mov	x29, sp
  40f440:	stp	x19, x20, [sp, #16]
  40f444:	mov	x19, x0
  40f448:	adrp	x20, 402000 <mbrtowc@plt-0x710>
  40f44c:	str	x21, [sp, #32]
  40f450:	add	x20, x20, #0x8e0
  40f454:	stp	xzr, xzr, [x19]
  40f458:	adrp	x21, 402000 <mbrtowc@plt-0x710>
  40f45c:	add	x21, x21, #0xba0
  40f460:	str	xzr, [x19, #16]
  40f464:	mov	x3, x20
  40f468:	mov	x4, x21
  40f46c:	add	x0, x0, #0x18
  40f470:	bl	411958 <_obstack_begin@@Base>
  40f474:	mov	x4, x21
  40f478:	mov	x3, x20
  40f47c:	add	x0, x19, #0x70
  40f480:	mov	x2, #0x0                   	// #0
  40f484:	mov	x1, #0x0                   	// #0
  40f488:	bl	411958 <_obstack_begin@@Base>
  40f48c:	mov	x4, x21
  40f490:	mov	x3, x20
  40f494:	add	x0, x19, #0xc8
  40f498:	mov	x2, #0x0                   	// #0
  40f49c:	ldp	x19, x20, [sp, #16]
  40f4a0:	mov	x1, #0x0                   	// #0
  40f4a4:	ldr	x21, [sp, #32]
  40f4a8:	ldp	x29, x30, [sp], #48
  40f4ac:	b	411958 <_obstack_begin@@Base>
  40f4b0:	stp	x29, x30, [sp, #-32]!
  40f4b4:	mov	x1, #0x0                   	// #0
  40f4b8:	mov	x29, sp
  40f4bc:	str	x19, [sp, #16]
  40f4c0:	mov	x19, x0
  40f4c4:	add	x0, x0, #0x18
  40f4c8:	bl	411ad8 <_obstack_free@@Base>
  40f4cc:	add	x0, x19, #0x70
  40f4d0:	mov	x1, #0x0                   	// #0
  40f4d4:	bl	411ad8 <_obstack_free@@Base>
  40f4d8:	add	x0, x19, #0xc8
  40f4dc:	mov	x1, #0x0                   	// #0
  40f4e0:	ldr	x19, [sp, #16]
  40f4e4:	ldp	x29, x30, [sp], #32
  40f4e8:	b	411ad8 <_obstack_free@@Base>
  40f4ec:	nop
  40f4f0:	stp	x29, x30, [sp, #-48]!
  40f4f4:	mov	x29, sp
  40f4f8:	stp	x19, x20, [sp, #16]
  40f4fc:	add	x20, x1, #0x18
  40f500:	stp	x21, x22, [sp, #32]
  40f504:	mov	x22, x1
  40f508:	mov	x21, x0
  40f50c:	b	40f520 <ferror@plt+0xc6e0>
  40f510:	add	x3, x2, #0x1
  40f514:	str	x3, [x20, #24]
  40f518:	strb	w19, [x2]
  40f51c:	cbz	w19, 40f560 <ferror@plt+0xc720>
  40f520:	mov	x0, x21
  40f524:	bl	402970 <fgetc@plt>
  40f528:	mov	w19, w0
  40f52c:	cmn	w0, #0x1
  40f530:	b.eq	40f580 <ferror@plt+0xc740>  // b.none
  40f534:	ldp	x2, x3, [x20, #24]
  40f538:	cmp	x3, x2
  40f53c:	b.ne	40f510 <ferror@plt+0xc6d0>  // b.any
  40f540:	mov	x0, x20
  40f544:	mov	x1, #0x1                   	// #1
  40f548:	bl	411988 <_obstack_newchunk@@Base>
  40f54c:	ldr	x2, [x20, #24]
  40f550:	add	x3, x2, #0x1
  40f554:	str	x3, [x20, #24]
  40f558:	strb	w19, [x2]
  40f55c:	cbnz	w19, 40f520 <ferror@plt+0xc6e0>
  40f560:	mov	x0, x22
  40f564:	bl	40f330 <ferror@plt+0xc4f0>
  40f568:	mov	x0, x21
  40f56c:	bl	402970 <fgetc@plt>
  40f570:	mov	w19, w0
  40f574:	cmn	w0, #0x1
  40f578:	b.ne	40f534 <ferror@plt+0xc6f4>  // b.any
  40f57c:	nop
  40f580:	ldp	x0, x1, [x20, #16]
  40f584:	cmp	x1, x0
  40f588:	b.eq	40f5ac <ferror@plt+0xc76c>  // b.none
  40f58c:	ldr	x0, [x20, #32]
  40f590:	cmp	x1, x0
  40f594:	b.eq	40f6d8 <ferror@plt+0xc898>  // b.none
  40f598:	add	x0, x1, #0x1
  40f59c:	str	x0, [x20, #24]
  40f5a0:	strb	wzr, [x1]
  40f5a4:	mov	x0, x22
  40f5a8:	bl	40f330 <ferror@plt+0xc4f0>
  40f5ac:	add	x19, x22, #0x70
  40f5b0:	ldp	x1, x0, [x19, #24]
  40f5b4:	sub	x0, x0, x1
  40f5b8:	cmp	x0, #0x7
  40f5bc:	b.ls	40f6a4 <ferror@plt+0xc864>  // b.plast
  40f5c0:	str	xzr, [x1]
  40f5c4:	ldp	x3, x0, [x19, #16]
  40f5c8:	add	x0, x0, #0x8
  40f5cc:	cmp	x0, x3
  40f5d0:	b.eq	40f6c8 <ferror@plt+0xc888>  // b.none
  40f5d4:	ldr	x1, [x19, #48]
  40f5d8:	ldr	x2, [x19, #8]
  40f5dc:	add	x0, x0, x1
  40f5e0:	ldr	x4, [x19, #32]
  40f5e4:	bic	x1, x0, x1
  40f5e8:	str	x1, [x19, #24]
  40f5ec:	sub	x0, x1, x2
  40f5f0:	sub	x2, x4, x2
  40f5f4:	cmp	x0, x2
  40f5f8:	b.hi	40f670 <ferror@plt+0xc830>  // b.pmore
  40f5fc:	add	x0, x22, #0xc8
  40f600:	str	x1, [x19, #16]
  40f604:	ldr	x4, [x0, #16]
  40f608:	str	x3, [x22, #8]
  40f60c:	ldr	x3, [x0, #24]
  40f610:	cmp	x3, x4
  40f614:	b.eq	40f694 <ferror@plt+0xc854>  // b.none
  40f618:	ldr	x1, [x0, #48]
  40f61c:	ldr	x2, [x0, #8]
  40f620:	add	x3, x3, x1
  40f624:	ldr	x5, [x0, #32]
  40f628:	bic	x1, x3, x1
  40f62c:	str	x1, [x0, #24]
  40f630:	sub	x3, x1, x2
  40f634:	sub	x2, x5, x2
  40f638:	cmp	x3, x2
  40f63c:	b.ls	40f648 <ferror@plt+0xc808>  // b.plast
  40f640:	mov	x1, x5
  40f644:	str	x5, [x0, #24]
  40f648:	str	x1, [x0, #16]
  40f64c:	mov	x0, x21
  40f650:	str	x4, [x22, #16]
  40f654:	bl	402e40 <ferror@plt>
  40f658:	cmp	w0, #0x0
  40f65c:	cset	w0, eq  // eq = none
  40f660:	ldp	x19, x20, [sp, #16]
  40f664:	ldp	x21, x22, [sp, #32]
  40f668:	ldp	x29, x30, [sp], #48
  40f66c:	ret
  40f670:	add	x0, x22, #0xc8
  40f674:	mov	x1, x4
  40f678:	str	x1, [x19, #16]
  40f67c:	str	x4, [x19, #24]
  40f680:	ldr	x4, [x0, #16]
  40f684:	str	x3, [x22, #8]
  40f688:	ldr	x3, [x0, #24]
  40f68c:	cmp	x3, x4
  40f690:	b.ne	40f618 <ferror@plt+0xc7d8>  // b.any
  40f694:	ldrb	w1, [x0, #80]
  40f698:	orr	w1, w1, #0x2
  40f69c:	strb	w1, [x0, #80]
  40f6a0:	b	40f618 <ferror@plt+0xc7d8>
  40f6a4:	mov	x0, x19
  40f6a8:	mov	x1, #0x8                   	// #8
  40f6ac:	bl	411988 <_obstack_newchunk@@Base>
  40f6b0:	ldr	x1, [x19, #24]
  40f6b4:	str	xzr, [x1]
  40f6b8:	ldp	x3, x0, [x19, #16]
  40f6bc:	add	x0, x0, #0x8
  40f6c0:	cmp	x0, x3
  40f6c4:	b.ne	40f5d4 <ferror@plt+0xc794>  // b.any
  40f6c8:	ldrb	w1, [x19, #80]
  40f6cc:	orr	w1, w1, #0x2
  40f6d0:	strb	w1, [x19, #80]
  40f6d4:	b	40f5d4 <ferror@plt+0xc794>
  40f6d8:	mov	x1, #0x1                   	// #1
  40f6dc:	mov	x0, x20
  40f6e0:	bl	411988 <_obstack_newchunk@@Base>
  40f6e4:	ldr	x1, [x20, #24]
  40f6e8:	b	40f598 <ferror@plt+0xc758>
  40f6ec:	nop
  40f6f0:	stp	x29, x30, [sp, #-16]!
  40f6f4:	mov	x29, sp
  40f6f8:	bl	402cf0 <mkstemp@plt>
  40f6fc:	ldp	x29, x30, [sp], #16
  40f700:	b	40fc68 <ferror@plt+0xce28>
  40f704:	nop
  40f708:	stp	x29, x30, [sp, #-32]!
  40f70c:	mov	x29, sp
  40f710:	str	x19, [sp, #16]
  40f714:	mov	w19, w1
  40f718:	bl	402a90 <mkostemp@plt>
  40f71c:	mov	w1, w19
  40f720:	ldr	x19, [sp, #16]
  40f724:	ldp	x29, x30, [sp], #32
  40f728:	b	411ca8 <_obstack_memory_used@@Base+0x140>
  40f72c:	nop
  40f730:	ldrb	w6, [x0]
  40f734:	mov	x4, x0
  40f738:	ldrb	w5, [x1]
  40f73c:	cmp	w6, #0x2d
  40f740:	b.eq	40f768 <ferror@plt+0xc928>  // b.none
  40f744:	cmp	w5, #0x2d
  40f748:	b.eq	40f7b0 <ferror@plt+0xc970>  // b.none
  40f74c:	nop
  40f750:	cmp	w6, #0x30
  40f754:	b.eq	40f760 <ferror@plt+0xc920>  // b.none
  40f758:	cmp	w3, w6
  40f75c:	b.ne	40f7fc <ferror@plt+0xc9bc>  // b.any
  40f760:	ldrb	w6, [x4, #1]!
  40f764:	b	40f750 <ferror@plt+0xc910>
  40f768:	ldrb	w0, [x4, #1]!
  40f76c:	cmp	w0, #0x30
  40f770:	b.eq	40f768 <ferror@plt+0xc928>  // b.none
  40f774:	cmp	w3, w0
  40f778:	b.eq	40f768 <ferror@plt+0xc928>  // b.none
  40f77c:	cmp	w5, #0x2d
  40f780:	b.eq	40f854 <ferror@plt+0xca14>  // b.none
  40f784:	cmp	w2, w0
  40f788:	b.eq	40f8ac <ferror@plt+0xca6c>  // b.none
  40f78c:	sub	w0, w0, #0x30
  40f790:	cmp	w0, #0x9
  40f794:	b.ls	40fc38 <ferror@plt+0xcdf8>  // b.plast
  40f798:	cmp	w5, #0x30
  40f79c:	b.eq	40f7a8 <ferror@plt+0xc968>  // b.none
  40f7a0:	cmp	w3, w5
  40f7a4:	b.ne	40f8e4 <ferror@plt+0xcaa4>  // b.any
  40f7a8:	ldrb	w5, [x1, #1]!
  40f7ac:	b	40f798 <ferror@plt+0xc958>
  40f7b0:	ldrb	w0, [x1, #1]!
  40f7b4:	cmp	w0, #0x30
  40f7b8:	b.eq	40f7b0 <ferror@plt+0xc970>  // b.none
  40f7bc:	cmp	w3, w0
  40f7c0:	b.eq	40f7b0 <ferror@plt+0xc970>  // b.none
  40f7c4:	cmp	w2, w0
  40f7c8:	b.eq	40f8c8 <ferror@plt+0xca88>  // b.none
  40f7cc:	sub	w1, w0, #0x30
  40f7d0:	mov	w0, #0x1                   	// #1
  40f7d4:	cmp	w1, #0x9
  40f7d8:	b.ls	40f8f8 <ferror@plt+0xcab8>  // b.plast
  40f7dc:	nop
  40f7e0:	cmp	w6, #0x30
  40f7e4:	b.eq	40f7f0 <ferror@plt+0xc9b0>  // b.none
  40f7e8:	cmp	w3, w6
  40f7ec:	b.ne	40fa08 <ferror@plt+0xcbc8>  // b.any
  40f7f0:	ldrb	w6, [x4, #1]!
  40f7f4:	b	40f7e0 <ferror@plt+0xc9a0>
  40f7f8:	ldrb	w5, [x1, #1]!
  40f7fc:	cmp	w5, #0x30
  40f800:	b.eq	40f7f8 <ferror@plt+0xc9b8>  // b.none
  40f804:	cmp	w3, w5
  40f808:	b.eq	40f7f8 <ferror@plt+0xc9b8>  // b.none
  40f80c:	nop
  40f810:	cmp	w6, w5
  40f814:	b.ne	40f918 <ferror@plt+0xcad8>  // b.any
  40f818:	sub	w0, w6, #0x30
  40f81c:	cmp	w0, #0x9
  40f820:	b.hi	40f918 <ferror@plt+0xcad8>  // b.pmore
  40f824:	nop
  40f828:	ldrb	w6, [x4, #1]!
  40f82c:	cmp	w3, w6
  40f830:	b.eq	40f828 <ferror@plt+0xc9e8>  // b.none
  40f834:	nop
  40f838:	ldrb	w5, [x1, #1]!
  40f83c:	cmp	w3, w5
  40f840:	b.ne	40f810 <ferror@plt+0xc9d0>  // b.any
  40f844:	ldrb	w5, [x1, #1]!
  40f848:	cmp	w3, w5
  40f84c:	b.eq	40f838 <ferror@plt+0xc9f8>  // b.none
  40f850:	b	40f810 <ferror@plt+0xc9d0>
  40f854:	ldrb	w6, [x1, #1]!
  40f858:	cmp	w6, #0x30
  40f85c:	b.eq	40f854 <ferror@plt+0xca14>  // b.none
  40f860:	cmp	w3, w6
  40f864:	b.eq	40f854 <ferror@plt+0xca14>  // b.none
  40f868:	cmp	w0, w6
  40f86c:	b.ne	40faa4 <ferror@plt+0xcc64>  // b.any
  40f870:	sub	w5, w0, #0x30
  40f874:	cmp	w5, #0x9
  40f878:	b.hi	40faa4 <ferror@plt+0xcc64>  // b.pmore
  40f87c:	nop
  40f880:	ldrb	w0, [x4, #1]!
  40f884:	cmp	w3, w0
  40f888:	b.eq	40f880 <ferror@plt+0xca40>  // b.none
  40f88c:	nop
  40f890:	ldrb	w6, [x1, #1]!
  40f894:	cmp	w3, w6
  40f898:	b.ne	40f868 <ferror@plt+0xca28>  // b.any
  40f89c:	ldrb	w6, [x1, #1]!
  40f8a0:	cmp	w3, w6
  40f8a4:	b.eq	40f890 <ferror@plt+0xca50>  // b.none
  40f8a8:	b	40f868 <ferror@plt+0xca28>
  40f8ac:	ldrb	w0, [x4, #1]!
  40f8b0:	cmp	w0, #0x30
  40f8b4:	b.ne	40f78c <ferror@plt+0xc94c>  // b.any
  40f8b8:	ldrb	w0, [x4, #1]!
  40f8bc:	cmp	w0, #0x30
  40f8c0:	b.eq	40f8ac <ferror@plt+0xca6c>  // b.none
  40f8c4:	b	40f78c <ferror@plt+0xc94c>
  40f8c8:	ldrb	w0, [x1, #1]!
  40f8cc:	cmp	w0, #0x30
  40f8d0:	b.ne	40f7cc <ferror@plt+0xc98c>  // b.any
  40f8d4:	ldrb	w0, [x1, #1]!
  40f8d8:	cmp	w0, #0x30
  40f8dc:	b.eq	40f8c8 <ferror@plt+0xca88>  // b.none
  40f8e0:	b	40f7cc <ferror@plt+0xc98c>
  40f8e4:	cmp	w2, w5
  40f8e8:	b.eq	40f8fc <ferror@plt+0xcabc>  // b.none
  40f8ec:	sub	w5, w5, #0x30
  40f8f0:	cmp	w5, #0x9
  40f8f4:	csetm	w0, ls  // ls = plast
  40f8f8:	ret
  40f8fc:	ldrb	w5, [x1, #1]!
  40f900:	cmp	w5, #0x30
  40f904:	b.ne	40f8ec <ferror@plt+0xcaac>  // b.any
  40f908:	ldrb	w5, [x1, #1]!
  40f90c:	cmp	w5, #0x30
  40f910:	b.eq	40f8fc <ferror@plt+0xcabc>  // b.none
  40f914:	b	40f8ec <ferror@plt+0xcaac>
  40f918:	cmp	w2, w6
  40f91c:	b.eq	40fa3c <ferror@plt+0xcbfc>  // b.none
  40f920:	cmp	w2, w5
  40f924:	sub	w7, w6, #0x30
  40f928:	b.eq	40fa90 <ferror@plt+0xcc50>  // b.none
  40f92c:	sub	w0, w6, w5
  40f930:	cmp	w7, #0x9
  40f934:	sub	w5, w5, #0x30
  40f938:	b.hi	40fae8 <ferror@plt+0xcca8>  // b.pmore
  40f93c:	mov	x6, #0x0                   	// #0
  40f940:	ldrb	w2, [x4, #1]!
  40f944:	cmp	w3, w2
  40f948:	b.eq	40f940 <ferror@plt+0xcb00>  // b.none
  40f94c:	sub	w2, w2, #0x30
  40f950:	add	x6, x6, #0x1
  40f954:	cmp	w2, #0x9
  40f958:	b.ls	40f940 <ferror@plt+0xcb00>  // b.plast
  40f95c:	cmp	w5, #0x9
  40f960:	b.hi	40fafc <ferror@plt+0xccbc>  // b.pmore
  40f964:	mov	x4, #0x0                   	// #0
  40f968:	ldrb	w2, [x1, #1]!
  40f96c:	cmp	w3, w2
  40f970:	b.eq	40f968 <ferror@plt+0xcb28>  // b.none
  40f974:	sub	w2, w2, #0x30
  40f978:	add	x4, x4, #0x1
  40f97c:	cmp	w2, #0x9
  40f980:	b.ls	40f968 <ferror@plt+0xcb28>  // b.plast
  40f984:	cmp	x4, x6
  40f988:	b.eq	40f9fc <ferror@plt+0xcbbc>  // b.none
  40f98c:	mov	w0, #0xffffffff            	// #-1
  40f990:	cneg	w0, w0, ls  // ls = plast
  40f994:	ret
  40f998:	cmp	w5, #0x9
  40f99c:	b.hi	40fb20 <ferror@plt+0xcce0>  // b.pmore
  40f9a0:	sub	w0, w2, w0
  40f9a4:	sub	w6, w2, #0x30
  40f9a8:	mov	x5, #0x0                   	// #0
  40f9ac:	nop
  40f9b0:	ldrb	w2, [x4, #1]!
  40f9b4:	cmp	w3, w2
  40f9b8:	b.eq	40f9b0 <ferror@plt+0xcb70>  // b.none
  40f9bc:	sub	w2, w2, #0x30
  40f9c0:	add	x5, x5, #0x1
  40f9c4:	cmp	w2, #0x9
  40f9c8:	b.ls	40f9b0 <ferror@plt+0xcb70>  // b.plast
  40f9cc:	cmp	w6, #0x9
  40f9d0:	b.hi	40fb08 <ferror@plt+0xccc8>  // b.pmore
  40f9d4:	mov	x4, #0x0                   	// #0
  40f9d8:	ldrb	w2, [x1, #1]!
  40f9dc:	cmp	w3, w2
  40f9e0:	b.eq	40f9d8 <ferror@plt+0xcb98>  // b.none
  40f9e4:	sub	w2, w2, #0x30
  40f9e8:	add	x4, x4, #0x1
  40f9ec:	cmp	w2, #0x9
  40f9f0:	b.ls	40f9d8 <ferror@plt+0xcb98>  // b.plast
  40f9f4:	cmp	x4, x5
  40f9f8:	b.ne	40fadc <ferror@plt+0xcc9c>  // b.any
  40f9fc:	cmp	x4, #0x0
  40fa00:	csel	w0, w0, wzr, ne  // ne = any
  40fa04:	ret
  40fa08:	cmp	w2, w6
  40fa0c:	b.eq	40fa20 <ferror@plt+0xcbe0>  // b.none
  40fa10:	sub	w6, w6, #0x30
  40fa14:	cmp	w6, #0x9
  40fa18:	cset	w0, ls  // ls = plast
  40fa1c:	ret
  40fa20:	ldrb	w6, [x4, #1]!
  40fa24:	cmp	w6, #0x30
  40fa28:	b.ne	40fa10 <ferror@plt+0xcbd0>  // b.any
  40fa2c:	ldrb	w6, [x4, #1]!
  40fa30:	cmp	w6, #0x30
  40fa34:	b.eq	40fa20 <ferror@plt+0xcbe0>  // b.none
  40fa38:	b	40fa10 <ferror@plt+0xcbd0>
  40fa3c:	sub	w0, w5, #0x30
  40fa40:	cmp	w0, #0x9
  40fa44:	b.ls	40f920 <ferror@plt+0xcae0>  // b.plast
  40fa48:	ldrb	w0, [x4]
  40fa4c:	and	w5, w2, #0xff
  40fa50:	ldrb	w3, [x1]
  40fa54:	cmp	w0, w2, uxtb
  40fa58:	b.eq	40fb6c <ferror@plt+0xcd2c>  // b.none
  40fa5c:	cmp	w5, w3
  40fa60:	mov	w0, #0x0                   	// #0
  40fa64:	b.ne	40f8f8 <ferror@plt+0xcab8>  // b.any
  40fa68:	ldrb	w2, [x1, #1]
  40fa6c:	add	x0, x1, #0x1
  40fa70:	b	40fa78 <ferror@plt+0xcc38>
  40fa74:	ldrb	w2, [x0, #1]!
  40fa78:	cmp	w2, #0x30
  40fa7c:	b.eq	40fa74 <ferror@plt+0xcc34>  // b.none
  40fa80:	sub	w2, w2, #0x30
  40fa84:	cmp	w2, #0x9
  40fa88:	csetm	w0, ls  // ls = plast
  40fa8c:	ret
  40fa90:	cmp	w7, #0x9
  40fa94:	b.hi	40fa48 <ferror@plt+0xcc08>  // b.pmore
  40fa98:	sub	w0, w6, w2
  40fa9c:	sub	w5, w2, #0x30
  40faa0:	b	40f93c <ferror@plt+0xcafc>
  40faa4:	cmp	w2, w0
  40faa8:	b.eq	40fb14 <ferror@plt+0xccd4>  // b.none
  40faac:	cmp	w2, w6
  40fab0:	sub	w5, w0, #0x30
  40fab4:	b.eq	40f998 <ferror@plt+0xcb58>  // b.none
  40fab8:	sub	w0, w6, w0
  40fabc:	cmp	w5, #0x9
  40fac0:	sub	w6, w6, #0x30
  40fac4:	b.ls	40f9a8 <ferror@plt+0xcb68>  // b.plast
  40fac8:	cmp	w6, #0x9
  40facc:	mov	x5, #0x0                   	// #0
  40fad0:	b.ls	40f9d4 <ferror@plt+0xcb94>  // b.plast
  40fad4:	mov	w0, #0x0                   	// #0
  40fad8:	ret
  40fadc:	mov	w0, #0x1                   	// #1
  40fae0:	cneg	w0, w0, ls  // ls = plast
  40fae4:	ret
  40fae8:	cmp	w5, #0x9
  40faec:	mov	x6, #0x0                   	// #0
  40faf0:	b.ls	40f964 <ferror@plt+0xcb24>  // b.plast
  40faf4:	mov	w0, #0x0                   	// #0
  40faf8:	b	40fad8 <ferror@plt+0xcc98>
  40fafc:	cmp	x6, #0x0
  40fb00:	cset	w0, ne  // ne = any
  40fb04:	ret
  40fb08:	cmp	x5, #0x0
  40fb0c:	csetm	w0, ne  // ne = any
  40fb10:	ret
  40fb14:	sub	w5, w6, #0x30
  40fb18:	cmp	w5, #0x9
  40fb1c:	b.ls	40faac <ferror@plt+0xcc6c>  // b.plast
  40fb20:	ldrb	w0, [x1]
  40fb24:	and	w5, w2, #0xff
  40fb28:	ldrb	w3, [x4]
  40fb2c:	cmp	w0, w2, uxtb
  40fb30:	b.eq	40fbd8 <ferror@plt+0xcd98>  // b.none
  40fb34:	add	x4, x4, #0x1
  40fb38:	cmp	w5, w3
  40fb3c:	mov	w0, #0x0                   	// #0
  40fb40:	b.ne	40f8f8 <ferror@plt+0xcab8>  // b.any
  40fb44:	ldrb	w0, [x4]
  40fb48:	cmp	w0, #0x30
  40fb4c:	b.ne	40fb5c <ferror@plt+0xcd1c>  // b.any
  40fb50:	ldrb	w0, [x4, #1]!
  40fb54:	cmp	w0, #0x30
  40fb58:	b.eq	40fb50 <ferror@plt+0xcd10>  // b.none
  40fb5c:	sub	w0, w0, #0x30
  40fb60:	cmp	w0, #0x9
  40fb64:	csetm	w0, ls  // ls = plast
  40fb68:	ret
  40fb6c:	cmp	w0, w3
  40fb70:	ldrb	w0, [x4, #1]
  40fb74:	b.eq	40fba8 <ferror@plt+0xcd68>  // b.none
  40fb78:	add	x4, x4, #0x1
  40fb7c:	b	40fb84 <ferror@plt+0xcd44>
  40fb80:	ldrb	w0, [x4, #1]!
  40fb84:	cmp	w0, #0x30
  40fb88:	b.eq	40fb80 <ferror@plt+0xcd40>  // b.none
  40fb8c:	sub	w0, w0, #0x30
  40fb90:	cmp	w0, #0x9
  40fb94:	cset	w0, ls  // ls = plast
  40fb98:	ret
  40fb9c:	cmp	w3, #0x9
  40fba0:	b.hi	40fad4 <ferror@plt+0xcc94>  // b.pmore
  40fba4:	ldrb	w0, [x4, #1]
  40fba8:	ldrb	w2, [x1, #1]!
  40fbac:	add	x4, x4, #0x1
  40fbb0:	sub	w3, w0, #0x30
  40fbb4:	cmp	w2, w0
  40fbb8:	b.eq	40fb9c <ferror@plt+0xcd5c>  // b.none
  40fbbc:	cmp	w3, #0x9
  40fbc0:	sub	w3, w2, #0x30
  40fbc4:	b.hi	40fc40 <ferror@plt+0xce00>  // b.pmore
  40fbc8:	cmp	w3, #0x9
  40fbcc:	b.hi	40fb84 <ferror@plt+0xcd44>  // b.pmore
  40fbd0:	sub	w0, w0, w2
  40fbd4:	ret
  40fbd8:	cmp	w0, w3
  40fbdc:	b.eq	40fc08 <ferror@plt+0xcdc8>  // b.none
  40fbe0:	add	x1, x1, #0x1
  40fbe4:	ldrb	w0, [x1]
  40fbe8:	cmp	w0, #0x30
  40fbec:	b.ne	40fb8c <ferror@plt+0xcd4c>  // b.any
  40fbf0:	ldrb	w0, [x1, #1]!
  40fbf4:	cmp	w0, #0x30
  40fbf8:	b.eq	40fbf0 <ferror@plt+0xcdb0>  // b.none
  40fbfc:	b	40fb8c <ferror@plt+0xcd4c>
  40fc00:	cmp	w3, #0x9
  40fc04:	b.hi	40fad4 <ferror@plt+0xcc94>  // b.pmore
  40fc08:	ldrb	w0, [x1, #1]!
  40fc0c:	ldrb	w2, [x4, #1]!
  40fc10:	sub	w3, w0, #0x30
  40fc14:	cmp	w0, w2
  40fc18:	b.eq	40fc00 <ferror@plt+0xcdc0>  // b.none
  40fc1c:	cmp	w3, #0x9
  40fc20:	sub	w3, w2, #0x30
  40fc24:	b.hi	40fc54 <ferror@plt+0xce14>  // b.pmore
  40fc28:	cmp	w3, #0x9
  40fc2c:	b.hi	40fbe4 <ferror@plt+0xcda4>  // b.pmore
  40fc30:	sub	w0, w0, w2
  40fc34:	b	40fbd4 <ferror@plt+0xcd94>
  40fc38:	mov	w0, #0xffffffff            	// #-1
  40fc3c:	ret
  40fc40:	cmp	w3, #0x9
  40fc44:	mov	w0, #0x0                   	// #0
  40fc48:	b.hi	40f8f8 <ferror@plt+0xcab8>  // b.pmore
  40fc4c:	mov	x0, x1
  40fc50:	b	40fa78 <ferror@plt+0xcc38>
  40fc54:	cmp	w3, #0x9
  40fc58:	b.ls	40fb44 <ferror@plt+0xcd04>  // b.plast
  40fc5c:	mov	w0, #0x0                   	// #0
  40fc60:	b	40fad8 <ferror@plt+0xcc98>
  40fc64:	nop
  40fc68:	stp	x29, x30, [sp, #-48]!
  40fc6c:	cmp	w0, #0x2
  40fc70:	mov	x29, sp
  40fc74:	stp	x19, x20, [sp, #16]
  40fc78:	mov	w19, w0
  40fc7c:	b.ls	40fc90 <ferror@plt+0xce50>  // b.plast
  40fc80:	mov	w0, w19
  40fc84:	ldp	x19, x20, [sp, #16]
  40fc88:	ldp	x29, x30, [sp], #48
  40fc8c:	ret
  40fc90:	str	x21, [sp, #32]
  40fc94:	bl	412028 <_obstack_memory_used@@Base+0x4c0>
  40fc98:	mov	w21, w0
  40fc9c:	bl	402db0 <__errno_location@plt>
  40fca0:	mov	x20, x0
  40fca4:	mov	w0, w19
  40fca8:	mov	w19, w21
  40fcac:	ldr	w21, [x20]
  40fcb0:	bl	402a10 <close@plt>
  40fcb4:	str	w21, [x20]
  40fcb8:	mov	w0, w19
  40fcbc:	ldp	x19, x20, [sp, #16]
  40fcc0:	ldr	x21, [sp, #32]
  40fcc4:	ldp	x29, x30, [sp], #48
  40fcc8:	ret
  40fccc:	nop
  40fcd0:	sub	sp, sp, #0x50
  40fcd4:	stp	x29, x30, [sp, #32]
  40fcd8:	add	x29, sp, #0x20
  40fcdc:	stp	x19, x20, [sp, #48]
  40fce0:	mov	x19, x5
  40fce4:	mov	x20, x4
  40fce8:	str	x21, [sp, #64]
  40fcec:	mov	x5, x3
  40fcf0:	mov	x21, x0
  40fcf4:	cbz	x1, 40fed0 <ferror@plt+0xd090>
  40fcf8:	mov	x4, x2
  40fcfc:	mov	x3, x1
  40fd00:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40fd04:	mov	w1, #0x1                   	// #1
  40fd08:	add	x2, x2, #0xf68
  40fd0c:	bl	402b30 <__fprintf_chk@plt>
  40fd10:	mov	w2, #0x5                   	// #5
  40fd14:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40fd18:	mov	x0, #0x0                   	// #0
  40fd1c:	add	x1, x1, #0xf80
  40fd20:	bl	402d20 <dcgettext@plt>
  40fd24:	mov	x3, x0
  40fd28:	mov	w4, #0x7e3                 	// #2019
  40fd2c:	mov	w1, #0x1                   	// #1
  40fd30:	mov	x0, x21
  40fd34:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x3498>
  40fd38:	add	x2, x2, #0x278
  40fd3c:	bl	402b30 <__fprintf_chk@plt>
  40fd40:	mov	w2, #0x5                   	// #5
  40fd44:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2498>
  40fd48:	mov	x0, #0x0                   	// #0
  40fd4c:	add	x1, x1, #0xf88
  40fd50:	bl	402d20 <dcgettext@plt>
  40fd54:	mov	x1, x21
  40fd58:	bl	402d30 <fputs_unlocked@plt>
  40fd5c:	cmp	x19, #0x5
  40fd60:	b.eq	40feec <ferror@plt+0xd0ac>  // b.none
  40fd64:	b.hi	40fdb8 <ferror@plt+0xcf78>  // b.pmore
  40fd68:	cmp	x19, #0x2
  40fd6c:	b.eq	40ff2c <ferror@plt+0xd0ec>  // b.none
  40fd70:	b.ls	40fe2c <ferror@plt+0xcfec>  // b.plast
  40fd74:	cmp	x19, #0x3
  40fd78:	b.eq	40ffac <ferror@plt+0xd16c>  // b.none
  40fd7c:	mov	w2, #0x5                   	// #5
  40fd80:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40fd84:	mov	x0, #0x0                   	// #0
  40fd88:	add	x1, x1, #0xa0
  40fd8c:	bl	402d20 <dcgettext@plt>
  40fd90:	mov	x2, x0
  40fd94:	ldp	x3, x4, [x20]
  40fd98:	mov	x0, x21
  40fd9c:	ldp	x5, x6, [x20, #16]
  40fda0:	mov	w1, #0x1                   	// #1
  40fda4:	ldp	x29, x30, [sp, #32]
  40fda8:	ldp	x19, x20, [sp, #48]
  40fdac:	ldr	x21, [sp, #64]
  40fdb0:	add	sp, sp, #0x50
  40fdb4:	b	402b30 <__fprintf_chk@plt>
  40fdb8:	cmp	x19, #0x8
  40fdbc:	b.eq	40ffe8 <ferror@plt+0xd1a8>  // b.none
  40fdc0:	b.ls	40fe70 <ferror@plt+0xd030>  // b.plast
  40fdc4:	cmp	x19, #0x9
  40fdc8:	b.ne	40ff9c <ferror@plt+0xd15c>  // b.any
  40fdcc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40fdd0:	add	x1, x1, #0x170
  40fdd4:	mov	w2, #0x5                   	// #5
  40fdd8:	mov	x0, #0x0                   	// #0
  40fddc:	bl	402d20 <dcgettext@plt>
  40fde0:	ldp	x7, x8, [x20, #32]
  40fde4:	mov	x2, x0
  40fde8:	ldp	x3, x4, [x20]
  40fdec:	mov	x0, x21
  40fdf0:	ldp	x5, x6, [x20, #16]
  40fdf4:	str	x8, [sp]
  40fdf8:	mov	w1, #0x1                   	// #1
  40fdfc:	ldr	x8, [x20, #48]
  40fe00:	str	x8, [sp, #8]
  40fe04:	ldr	x8, [x20, #56]
  40fe08:	str	x8, [sp, #16]
  40fe0c:	ldr	x8, [x20, #64]
  40fe10:	str	x8, [sp, #24]
  40fe14:	bl	402b30 <__fprintf_chk@plt>
  40fe18:	ldp	x29, x30, [sp, #32]
  40fe1c:	ldp	x19, x20, [sp, #48]
  40fe20:	ldr	x21, [sp, #64]
  40fe24:	add	sp, sp, #0x50
  40fe28:	ret
  40fe2c:	cbz	x19, 40febc <ferror@plt+0xd07c>
  40fe30:	cmp	x19, #0x1
  40fe34:	b.ne	40ff9c <ferror@plt+0xd15c>  // b.any
  40fe38:	mov	w2, #0x5                   	// #5
  40fe3c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40fe40:	mov	x0, #0x0                   	// #0
  40fe44:	add	x1, x1, #0x58
  40fe48:	bl	402d20 <dcgettext@plt>
  40fe4c:	mov	x2, x0
  40fe50:	mov	w1, w19
  40fe54:	mov	x0, x21
  40fe58:	ldr	x3, [x20]
  40fe5c:	ldp	x29, x30, [sp, #32]
  40fe60:	ldp	x19, x20, [sp, #48]
  40fe64:	ldr	x21, [sp, #64]
  40fe68:	add	sp, sp, #0x50
  40fe6c:	b	402b30 <__fprintf_chk@plt>
  40fe70:	cmp	x19, #0x6
  40fe74:	b.eq	40ff64 <ferror@plt+0xd124>  // b.none
  40fe78:	cmp	x19, #0x7
  40fe7c:	b.ne	40ff9c <ferror@plt+0xd15c>  // b.any
  40fe80:	mov	w2, #0x5                   	// #5
  40fe84:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40fe88:	mov	x0, #0x0                   	// #0
  40fe8c:	add	x1, x1, #0x110
  40fe90:	bl	402d20 <dcgettext@plt>
  40fe94:	mov	x2, x0
  40fe98:	ldp	x7, x8, [x20, #32]
  40fe9c:	mov	x0, x21
  40fea0:	ldp	x3, x4, [x20]
  40fea4:	mov	w1, #0x1                   	// #1
  40fea8:	ldp	x5, x6, [x20, #16]
  40feac:	str	x8, [sp]
  40feb0:	ldr	x8, [x20, #48]
  40feb4:	str	x8, [sp, #8]
  40feb8:	bl	402b30 <__fprintf_chk@plt>
  40febc:	ldp	x29, x30, [sp, #32]
  40fec0:	ldp	x19, x20, [sp, #48]
  40fec4:	ldr	x21, [sp, #64]
  40fec8:	add	sp, sp, #0x50
  40fecc:	ret
  40fed0:	mov	x4, x3
  40fed4:	mov	w1, #0x1                   	// #1
  40fed8:	mov	x3, x2
  40fedc:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  40fee0:	add	x2, x2, #0xf78
  40fee4:	bl	402b30 <__fprintf_chk@plt>
  40fee8:	b	40fd10 <ferror@plt+0xced0>
  40feec:	mov	w2, w19
  40fef0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40fef4:	mov	x0, #0x0                   	// #0
  40fef8:	add	x1, x1, #0xc0
  40fefc:	bl	402d20 <dcgettext@plt>
  40ff00:	mov	x2, x0
  40ff04:	ldp	x3, x4, [x20]
  40ff08:	mov	x0, x21
  40ff0c:	ldp	x5, x6, [x20, #16]
  40ff10:	mov	w1, #0x1                   	// #1
  40ff14:	ldp	x29, x30, [sp, #32]
  40ff18:	ldr	x7, [x20, #32]
  40ff1c:	ldp	x19, x20, [sp, #48]
  40ff20:	ldr	x21, [sp, #64]
  40ff24:	add	sp, sp, #0x50
  40ff28:	b	402b30 <__fprintf_chk@plt>
  40ff2c:	mov	w2, #0x5                   	// #5
  40ff30:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40ff34:	mov	x0, #0x0                   	// #0
  40ff38:	add	x1, x1, #0x68
  40ff3c:	bl	402d20 <dcgettext@plt>
  40ff40:	mov	x2, x0
  40ff44:	ldp	x3, x4, [x20]
  40ff48:	mov	x0, x21
  40ff4c:	ldp	x29, x30, [sp, #32]
  40ff50:	mov	w1, #0x1                   	// #1
  40ff54:	ldp	x19, x20, [sp, #48]
  40ff58:	ldr	x21, [sp, #64]
  40ff5c:	add	sp, sp, #0x50
  40ff60:	b	402b30 <__fprintf_chk@plt>
  40ff64:	mov	w2, #0x5                   	// #5
  40ff68:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40ff6c:	mov	x0, #0x0                   	// #0
  40ff70:	add	x1, x1, #0xe8
  40ff74:	bl	402d20 <dcgettext@plt>
  40ff78:	mov	x2, x0
  40ff7c:	ldp	x3, x4, [x20]
  40ff80:	mov	x0, x21
  40ff84:	ldp	x5, x6, [x20, #16]
  40ff88:	mov	w1, #0x1                   	// #1
  40ff8c:	ldp	x7, x8, [x20, #32]
  40ff90:	str	x8, [sp]
  40ff94:	bl	402b30 <__fprintf_chk@plt>
  40ff98:	b	40febc <ferror@plt+0xd07c>
  40ff9c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40ffa0:	mov	w2, #0x5                   	// #5
  40ffa4:	add	x1, x1, #0x1a8
  40ffa8:	b	40fdd8 <ferror@plt+0xcf98>
  40ffac:	mov	w2, #0x5                   	// #5
  40ffb0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40ffb4:	mov	x0, #0x0                   	// #0
  40ffb8:	add	x1, x1, #0x80
  40ffbc:	bl	402d20 <dcgettext@plt>
  40ffc0:	mov	x2, x0
  40ffc4:	ldp	x3, x4, [x20]
  40ffc8:	mov	x0, x21
  40ffcc:	ldr	x5, [x20, #16]
  40ffd0:	mov	w1, #0x1                   	// #1
  40ffd4:	ldp	x29, x30, [sp, #32]
  40ffd8:	ldp	x19, x20, [sp, #48]
  40ffdc:	ldr	x21, [sp, #64]
  40ffe0:	add	sp, sp, #0x50
  40ffe4:	b	402b30 <__fprintf_chk@plt>
  40ffe8:	mov	w2, #0x5                   	// #5
  40ffec:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  40fff0:	mov	x0, #0x0                   	// #0
  40fff4:	add	x1, x1, #0x140
  40fff8:	bl	402d20 <dcgettext@plt>
  40fffc:	mov	x2, x0
  410000:	ldp	x7, x8, [x20, #32]
  410004:	mov	x0, x21
  410008:	ldp	x3, x4, [x20]
  41000c:	mov	w1, #0x1                   	// #1
  410010:	ldp	x5, x6, [x20, #16]
  410014:	str	x8, [sp]
  410018:	ldr	x8, [x20, #48]
  41001c:	str	x8, [sp, #8]
  410020:	ldr	x8, [x20, #56]
  410024:	str	x8, [sp, #16]
  410028:	bl	402b30 <__fprintf_chk@plt>
  41002c:	b	40febc <ferror@plt+0xd07c>
  410030:	ldr	x5, [x4]
  410034:	cbz	x5, 410050 <ferror@plt+0xd210>
  410038:	mov	x5, #0x0                   	// #0
  41003c:	nop
  410040:	add	x5, x5, #0x1
  410044:	ldr	x6, [x4, x5, lsl #3]
  410048:	cbnz	x6, 410040 <ferror@plt+0xd200>
  41004c:	b	40fcd0 <ferror@plt+0xce90>
  410050:	mov	x5, #0x0                   	// #0
  410054:	b	40fcd0 <ferror@plt+0xce90>
  410058:	stp	x29, x30, [sp, #-96]!
  41005c:	mov	x5, #0x0                   	// #0
  410060:	mov	x29, sp
  410064:	add	x8, sp, #0x10
  410068:	ldr	w7, [x4, #24]
  41006c:	ldp	x6, x11, [x4]
  410070:	b	410098 <ferror@plt+0xd258>
  410074:	mov	x4, x6
  410078:	add	x8, x8, #0x8
  41007c:	and	x6, x10, #0xfffffffffffffff8
  410080:	ldr	x4, [x4]
  410084:	stur	x4, [x8, #-8]
  410088:	cbz	x4, 4100c8 <ferror@plt+0xd288>
  41008c:	add	x5, x5, #0x1
  410090:	cmp	x5, #0xa
  410094:	b.eq	4100c8 <ferror@plt+0xd288>  // b.none
  410098:	add	x10, x6, #0xf
  41009c:	add	w9, w7, #0x8
  4100a0:	tbz	w7, #31, 410074 <ferror@plt+0xd234>
  4100a4:	add	x4, x11, w7, sxtw
  4100a8:	add	x10, x6, #0xf
  4100ac:	mov	w7, w9
  4100b0:	cmp	w9, #0x0
  4100b4:	b.gt	410074 <ferror@plt+0xd234>
  4100b8:	ldr	x4, [x4]
  4100bc:	str	x4, [x8]
  4100c0:	add	x8, x8, #0x8
  4100c4:	cbnz	x4, 41008c <ferror@plt+0xd24c>
  4100c8:	add	x4, sp, #0x10
  4100cc:	bl	40fcd0 <ferror@plt+0xce90>
  4100d0:	ldp	x29, x30, [sp], #96
  4100d4:	ret
  4100d8:	stp	x29, x30, [sp, #-288]!
  4100dc:	mov	w12, #0xffffffe0            	// #-32
  4100e0:	mov	w13, #0xffffff80            	// #-128
  4100e4:	mov	x29, sp
  4100e8:	add	x14, sp, #0x100
  4100ec:	add	x11, sp, #0x120
  4100f0:	add	x9, sp, #0x30
  4100f4:	mov	w8, w12
  4100f8:	mov	x10, #0x0                   	// #0
  4100fc:	stp	x11, x11, [sp, #16]
  410100:	str	x14, [sp, #32]
  410104:	stp	w12, w13, [sp, #40]
  410108:	str	q0, [sp, #128]
  41010c:	str	q1, [sp, #144]
  410110:	str	q2, [sp, #160]
  410114:	str	q3, [sp, #176]
  410118:	str	q4, [sp, #192]
  41011c:	str	q5, [sp, #208]
  410120:	str	q6, [sp, #224]
  410124:	str	q7, [sp, #240]
  410128:	stp	x4, x5, [sp, #256]
  41012c:	stp	x6, x7, [sp, #272]
  410130:	b	410158 <ferror@plt+0xd318>
  410134:	mov	x4, x11
  410138:	add	x9, x9, #0x8
  41013c:	add	x11, x11, #0x8
  410140:	ldr	x4, [x4]
  410144:	stur	x4, [x9, #-8]
  410148:	cbz	x4, 410184 <ferror@plt+0xd344>
  41014c:	add	x10, x10, #0x1
  410150:	cmp	x10, #0xa
  410154:	b.eq	410184 <ferror@plt+0xd344>  // b.none
  410158:	add	w5, w8, #0x8
  41015c:	tbz	w8, #31, 410134 <ferror@plt+0xd2f4>
  410160:	add	x4, sp, #0x120
  410164:	cmp	w5, #0x0
  410168:	add	x4, x4, w8, sxtw
  41016c:	mov	w8, w5
  410170:	b.gt	410134 <ferror@plt+0xd2f4>
  410174:	ldr	x4, [x4]
  410178:	str	x4, [x9]
  41017c:	add	x9, x9, #0x8
  410180:	cbnz	x4, 41014c <ferror@plt+0xd30c>
  410184:	add	x4, sp, #0x30
  410188:	mov	x5, x10
  41018c:	bl	40fcd0 <ferror@plt+0xce90>
  410190:	ldp	x29, x30, [sp], #288
  410194:	ret
  410198:	stp	x29, x30, [sp, #-16]!
  41019c:	mov	w2, #0x5                   	// #5
  4101a0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  4101a4:	mov	x29, sp
  4101a8:	add	x1, x1, #0x1e8
  4101ac:	mov	x0, #0x0                   	// #0
  4101b0:	bl	402d20 <dcgettext@plt>
  4101b4:	mov	x1, x0
  4101b8:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x3498>
  4101bc:	mov	w0, #0x1                   	// #1
  4101c0:	add	x2, x2, #0x200
  4101c4:	bl	402980 <__printf_chk@plt>
  4101c8:	mov	w2, #0x5                   	// #5
  4101cc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  4101d0:	mov	x0, #0x0                   	// #0
  4101d4:	add	x1, x1, #0x218
  4101d8:	bl	402d20 <dcgettext@plt>
  4101dc:	mov	x1, x0
  4101e0:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1498>
  4101e4:	add	x3, x3, #0x868
  4101e8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1498>
  4101ec:	mov	w0, #0x1                   	// #1
  4101f0:	add	x2, x2, #0x890
  4101f4:	bl	402980 <__printf_chk@plt>
  4101f8:	mov	w2, #0x5                   	// #5
  4101fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  410200:	mov	x0, #0x0                   	// #0
  410204:	add	x1, x1, #0x230
  410208:	bl	402d20 <dcgettext@plt>
  41020c:	ldp	x29, x30, [sp], #16
  410210:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x17498>
  410214:	ldr	x1, [x1, #1344]
  410218:	b	402d30 <fputs_unlocked@plt>
  41021c:	nop
  410220:	stp	x29, x30, [sp, #-32]!
  410224:	mov	x29, sp
  410228:	str	x19, [sp, #16]
  41022c:	mov	x19, x0
  410230:	bl	4028e0 <malloc@plt>
  410234:	cmp	x0, #0x0
  410238:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41023c:	b.ne	41024c <ferror@plt+0xd40c>  // b.any
  410240:	ldr	x19, [sp, #16]
  410244:	ldp	x29, x30, [sp], #32
  410248:	ret
  41024c:	bl	410478 <ferror@plt+0xd638>
  410250:	umulh	x2, x0, x1
  410254:	mul	x0, x0, x1
  410258:	cmp	x2, #0x0
  41025c:	cset	x1, ne  // ne = any
  410260:	tbnz	x0, #63, 41026c <ferror@plt+0xd42c>
  410264:	cbnz	x1, 41026c <ferror@plt+0xd42c>
  410268:	b	410220 <ferror@plt+0xd3e0>
  41026c:	stp	x29, x30, [sp, #-16]!
  410270:	mov	x29, sp
  410274:	bl	410478 <ferror@plt+0xd638>
  410278:	b	410220 <ferror@plt+0xd3e0>
  41027c:	nop
  410280:	stp	x29, x30, [sp, #-32]!
  410284:	cmp	x1, #0x0
  410288:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41028c:	mov	x29, sp
  410290:	b.ne	4102b8 <ferror@plt+0xd478>  // b.any
  410294:	str	x19, [sp, #16]
  410298:	mov	x19, x1
  41029c:	bl	4029e0 <realloc@plt>
  4102a0:	cmp	x0, #0x0
  4102a4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4102a8:	b.ne	4102c8 <ferror@plt+0xd488>  // b.any
  4102ac:	ldr	x19, [sp, #16]
  4102b0:	ldp	x29, x30, [sp], #32
  4102b4:	ret
  4102b8:	bl	402ba0 <free@plt>
  4102bc:	mov	x0, #0x0                   	// #0
  4102c0:	ldp	x29, x30, [sp], #32
  4102c4:	ret
  4102c8:	bl	410478 <ferror@plt+0xd638>
  4102cc:	nop
  4102d0:	umulh	x3, x1, x2
  4102d4:	mul	x1, x1, x2
  4102d8:	cmp	x3, #0x0
  4102dc:	cset	x2, ne  // ne = any
  4102e0:	tbnz	x1, #63, 4102ec <ferror@plt+0xd4ac>
  4102e4:	cbnz	x2, 4102ec <ferror@plt+0xd4ac>
  4102e8:	b	410280 <ferror@plt+0xd440>
  4102ec:	stp	x29, x30, [sp, #-16]!
  4102f0:	mov	x29, sp
  4102f4:	bl	410478 <ferror@plt+0xd638>
  4102f8:	mov	x4, x1
  4102fc:	ldr	x3, [x1]
  410300:	cbz	x0, 41032c <ferror@plt+0xd4ec>
  410304:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  410308:	movk	x1, #0x5554
  41030c:	udiv	x1, x1, x2
  410310:	cmp	x1, x3
  410314:	b.ls	410348 <ferror@plt+0xd508>  // b.plast
  410318:	add	x1, x3, #0x1
  41031c:	add	x3, x1, x3, lsr #1
  410320:	mul	x1, x3, x2
  410324:	str	x3, [x4]
  410328:	b	410280 <ferror@plt+0xd440>
  41032c:	cbz	x3, 410354 <ferror@plt+0xd514>
  410330:	umulh	x5, x3, x2
  410334:	mul	x1, x3, x2
  410338:	cmp	x5, #0x0
  41033c:	cset	x2, ne  // ne = any
  410340:	tbnz	x1, #63, 410348 <ferror@plt+0xd508>
  410344:	cbz	x2, 410324 <ferror@plt+0xd4e4>
  410348:	stp	x29, x30, [sp, #-16]!
  41034c:	mov	x29, sp
  410350:	bl	410478 <ferror@plt+0xd638>
  410354:	mov	x3, #0x80                  	// #128
  410358:	cmp	x2, x3
  41035c:	udiv	x3, x3, x2
  410360:	cinc	x3, x3, hi  // hi = pmore
  410364:	b	410330 <ferror@plt+0xd4f0>
  410368:	mov	x2, x1
  41036c:	ldr	x1, [x1]
  410370:	cbz	x0, 410394 <ferror@plt+0xd554>
  410374:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  410378:	movk	x3, #0x5553
  41037c:	cmp	x1, x3
  410380:	b.hi	4103ac <ferror@plt+0xd56c>  // b.pmore
  410384:	add	x3, x1, #0x1
  410388:	add	x1, x3, x1, lsr #1
  41038c:	str	x1, [x2]
  410390:	b	410280 <ferror@plt+0xd440>
  410394:	cmp	x1, #0x0
  410398:	cbnz	x1, 4103a8 <ferror@plt+0xd568>
  41039c:	mov	x1, #0x80                  	// #128
  4103a0:	str	x1, [x2]
  4103a4:	b	410280 <ferror@plt+0xd440>
  4103a8:	b.ge	41038c <ferror@plt+0xd54c>  // b.tcont
  4103ac:	stp	x29, x30, [sp, #-16]!
  4103b0:	mov	x29, sp
  4103b4:	bl	410478 <ferror@plt+0xd638>
  4103b8:	stp	x29, x30, [sp, #-32]!
  4103bc:	mov	x29, sp
  4103c0:	str	x19, [sp, #16]
  4103c4:	mov	x19, x0
  4103c8:	bl	410220 <ferror@plt+0xd3e0>
  4103cc:	mov	x2, x19
  4103d0:	mov	w1, #0x0                   	// #0
  4103d4:	ldr	x19, [sp, #16]
  4103d8:	ldp	x29, x30, [sp], #32
  4103dc:	b	402990 <memset@plt>
  4103e0:	umulh	x4, x0, x1
  4103e4:	stp	x29, x30, [sp, #-16]!
  4103e8:	mul	x2, x0, x1
  4103ec:	cmp	x4, #0x0
  4103f0:	mov	x29, sp
  4103f4:	cset	x3, ne  // ne = any
  4103f8:	tbnz	x2, #63, 410410 <ferror@plt+0xd5d0>
  4103fc:	cbnz	x3, 410410 <ferror@plt+0xd5d0>
  410400:	bl	4029d0 <calloc@plt>
  410404:	cbz	x0, 410410 <ferror@plt+0xd5d0>
  410408:	ldp	x29, x30, [sp], #16
  41040c:	ret
  410410:	bl	410478 <ferror@plt+0xd638>
  410414:	nop
  410418:	stp	x29, x30, [sp, #-32]!
  41041c:	mov	x29, sp
  410420:	stp	x19, x20, [sp, #16]
  410424:	mov	x19, x1
  410428:	mov	x20, x0
  41042c:	mov	x0, x1
  410430:	bl	410220 <ferror@plt+0xd3e0>
  410434:	mov	x2, x19
  410438:	mov	x1, x20
  41043c:	ldp	x19, x20, [sp, #16]
  410440:	ldp	x29, x30, [sp], #32
  410444:	b	402720 <memcpy@plt>
  410448:	stp	x29, x30, [sp, #-32]!
  41044c:	mov	x29, sp
  410450:	str	x19, [sp, #16]
  410454:	mov	x19, x0
  410458:	bl	402780 <strlen@plt>
  41045c:	mov	x1, x0
  410460:	mov	x0, x19
  410464:	add	x1, x1, #0x1
  410468:	ldr	x19, [sp, #16]
  41046c:	ldp	x29, x30, [sp], #32
  410470:	b	410418 <ferror@plt+0xd5d8>
  410474:	nop
  410478:	stp	x29, x30, [sp, #-32]!
  41047c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  410480:	mov	w2, #0x5                   	// #5
  410484:	mov	x29, sp
  410488:	str	x19, [sp, #16]
  41048c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  410490:	ldr	w19, [x0, #1208]
  410494:	add	x1, x1, #0x2a8
  410498:	mov	x0, #0x0                   	// #0
  41049c:	bl	402d20 <dcgettext@plt>
  4104a0:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x498>
  4104a4:	mov	x3, x0
  4104a8:	add	x2, x2, #0x6b8
  4104ac:	mov	w0, w19
  4104b0:	mov	w1, #0x0                   	// #0
  4104b4:	bl	4027b0 <error@plt>
  4104b8:	bl	402a80 <abort@plt>
  4104bc:	nop
  4104c0:	stp	x29, x30, [sp, #-64]!
  4104c4:	mov	x29, sp
  4104c8:	stp	x19, x20, [sp, #16]
  4104cc:	mov	x20, x3
  4104d0:	mov	x19, x1
  4104d4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  4104d8:	add	x1, x1, #0x2c0
  4104dc:	stp	x21, x22, [sp, #32]
  4104e0:	mov	x21, x4
  4104e4:	mov	x22, x2
  4104e8:	mov	w2, #0x5                   	// #5
  4104ec:	str	x23, [sp, #48]
  4104f0:	mov	w23, w0
  4104f4:	mov	x0, #0x0                   	// #0
  4104f8:	bl	402d20 <dcgettext@plt>
  4104fc:	mov	x2, x0
  410500:	mov	w1, w23
  410504:	mov	w0, #0x0                   	// #0
  410508:	bl	4027b0 <error@plt>
  41050c:	mov	w2, #0x5                   	// #5
  410510:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  410514:	mov	x0, #0x0                   	// #0
  410518:	add	x1, x1, #0x2e0
  41051c:	bl	402d20 <dcgettext@plt>
  410520:	mov	x2, x0
  410524:	mov	w1, #0x0                   	// #0
  410528:	mov	w0, #0x0                   	// #0
  41052c:	bl	4027b0 <error@plt>
  410530:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  410534:	mov	w2, #0x5                   	// #5
  410538:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  41053c:	add	x1, x1, #0x310
  410540:	ldr	w23, [x0, #1208]
  410544:	mov	x0, #0x0                   	// #0
  410548:	bl	402d20 <dcgettext@plt>
  41054c:	mov	x3, x22
  410550:	mov	x2, x19
  410554:	mov	w1, #0x8                   	// #8
  410558:	mov	x19, x0
  41055c:	mov	w0, #0x0                   	// #0
  410560:	bl	40e748 <ferror@plt+0xb908>
  410564:	mov	x3, x21
  410568:	mov	x2, x20
  41056c:	mov	w1, #0x8                   	// #8
  410570:	mov	x20, x0
  410574:	mov	w0, #0x1                   	// #1
  410578:	bl	40e748 <ferror@plt+0xb908>
  41057c:	mov	x3, x20
  410580:	mov	x4, x0
  410584:	mov	x2, x19
  410588:	mov	w0, w23
  41058c:	ldp	x19, x20, [sp, #16]
  410590:	mov	w1, #0x0                   	// #0
  410594:	ldp	x21, x22, [sp, #32]
  410598:	ldr	x23, [sp, #48]
  41059c:	ldp	x29, x30, [sp], #64
  4105a0:	b	4027b0 <error@plt>
  4105a4:	nop
  4105a8:	stp	x29, x30, [sp, #-64]!
  4105ac:	mov	x29, sp
  4105b0:	stp	x19, x20, [sp, #16]
  4105b4:	mov	x20, x0
  4105b8:	stp	x21, x22, [sp, #32]
  4105bc:	mov	x21, x1
  4105c0:	mov	x22, x2
  4105c4:	str	x23, [sp, #48]
  4105c8:	mov	x23, x3
  4105cc:	bl	411f00 <_obstack_memory_used@@Base+0x398>
  4105d0:	mov	w19, w0
  4105d4:	bl	402db0 <__errno_location@plt>
  4105d8:	ldr	w0, [x0]
  4105dc:	cbnz	w0, 4105f8 <ferror@plt+0xd7b8>
  4105e0:	mov	w0, w19
  4105e4:	ldp	x19, x20, [sp, #16]
  4105e8:	ldp	x21, x22, [sp, #32]
  4105ec:	ldr	x23, [sp, #48]
  4105f0:	ldp	x29, x30, [sp], #64
  4105f4:	ret
  4105f8:	mov	x4, x23
  4105fc:	mov	x3, x22
  410600:	mov	x2, x21
  410604:	mov	x1, x20
  410608:	bl	4104c0 <ferror@plt+0xd680>
  41060c:	mov	w0, w19
  410610:	ldp	x19, x20, [sp, #16]
  410614:	ldp	x21, x22, [sp, #32]
  410618:	ldr	x23, [sp, #48]
  41061c:	ldp	x29, x30, [sp], #64
  410620:	ret
  410624:	nop
  410628:	stp	x29, x30, [sp, #-64]!
  41062c:	mov	x29, sp
  410630:	stp	x19, x20, [sp, #16]
  410634:	mov	x20, x0
  410638:	stp	x21, x22, [sp, #32]
  41063c:	mov	x21, x1
  410640:	mov	x22, x2
  410644:	str	x23, [sp, #48]
  410648:	mov	x23, x3
  41064c:	bl	411fb0 <_obstack_memory_used@@Base+0x448>
  410650:	mov	w19, w0
  410654:	bl	402db0 <__errno_location@plt>
  410658:	ldr	w0, [x0]
  41065c:	cbnz	w0, 410678 <ferror@plt+0xd838>
  410660:	mov	w0, w19
  410664:	ldp	x19, x20, [sp, #16]
  410668:	ldp	x21, x22, [sp, #32]
  41066c:	ldr	x23, [sp, #48]
  410670:	ldp	x29, x30, [sp], #64
  410674:	ret
  410678:	sub	x4, x23, #0x1
  41067c:	mov	x3, x22
  410680:	sub	x2, x21, #0x1
  410684:	mov	x1, x20
  410688:	bl	4104c0 <ferror@plt+0xd680>
  41068c:	mov	w0, w19
  410690:	ldp	x19, x20, [sp, #16]
  410694:	ldp	x21, x22, [sp, #32]
  410698:	ldr	x23, [sp, #48]
  41069c:	ldp	x29, x30, [sp], #64
  4106a0:	ret
  4106a4:	nop
  4106a8:	stp	x29, x30, [sp, #-48]!
  4106ac:	mov	x29, sp
  4106b0:	str	x19, [sp, #16]
  4106b4:	bl	411c00 <_obstack_memory_used@@Base+0x98>
  4106b8:	stp	x0, x1, [sp, #32]
  4106bc:	bl	402db0 <__errno_location@plt>
  4106c0:	mov	x19, x0
  4106c4:	b	4106d4 <ferror@plt+0xd894>
  4106c8:	ldr	w0, [x19]
  4106cc:	tst	w0, #0xfffffffb
  4106d0:	b.ne	4106f4 <ferror@plt+0xd8b4>  // b.any
  4106d4:	str	wzr, [x19]
  4106d8:	add	x0, sp, #0x20
  4106dc:	mov	x1, #0x0                   	// #0
  4106e0:	bl	411738 <ferror@plt+0xe8f8>
  4106e4:	cbnz	w0, 4106c8 <ferror@plt+0xd888>
  4106e8:	ldr	x19, [sp, #16]
  4106ec:	ldp	x29, x30, [sp], #48
  4106f0:	ret
  4106f4:	mov	w0, #0xffffffff            	// #-1
  4106f8:	ldr	x19, [sp, #16]
  4106fc:	ldp	x29, x30, [sp], #48
  410700:	ret
  410704:	nop
  410708:	stp	x29, x30, [sp, #-112]!
  41070c:	cmp	w2, #0x24
  410710:	mov	x29, sp
  410714:	stp	x19, x20, [sp, #16]
  410718:	stp	x21, x22, [sp, #32]
  41071c:	stp	x23, x24, [sp, #48]
  410720:	stp	x25, x26, [sp, #64]
  410724:	stp	x27, x28, [sp, #80]
  410728:	b.hi	410c48 <ferror@plt+0xde08>  // b.pmore
  41072c:	cmp	x1, #0x0
  410730:	mov	x19, x0
  410734:	add	x0, sp, #0x68
  410738:	mov	x21, x3
  41073c:	csel	x25, x0, x1, eq  // eq = none
  410740:	mov	w22, w2
  410744:	mov	x23, x4
  410748:	bl	402db0 <__errno_location@plt>
  41074c:	str	wzr, [x0]
  410750:	mov	x20, x0
  410754:	bl	402b60 <__ctype_b_loc@plt>
  410758:	ldrb	w3, [x19]
  41075c:	mov	x5, x19
  410760:	ldr	x1, [x0]
  410764:	b	41076c <ferror@plt+0xd92c>
  410768:	ldrb	w3, [x5, #1]!
  41076c:	ubfiz	x4, x3, #1, #8
  410770:	ldrh	w4, [x1, x4]
  410774:	tbnz	w4, #13, 410768 <ferror@plt+0xd928>
  410778:	cmp	w3, #0x2d
  41077c:	b.eq	4107f8 <ferror@plt+0xd9b8>  // b.none
  410780:	mov	w2, w22
  410784:	mov	x1, x25
  410788:	mov	x0, x19
  41078c:	bl	402770 <strtoul@plt>
  410790:	ldr	x28, [x25]
  410794:	mov	x26, x0
  410798:	cmp	x28, x19
  41079c:	b.eq	4107ec <ferror@plt+0xd9ac>  // b.none
  4107a0:	ldr	w0, [x20]
  4107a4:	cbz	w0, 4107e4 <ferror@plt+0xd9a4>
  4107a8:	cmp	w0, #0x22
  4107ac:	mov	w27, #0x1                   	// #1
  4107b0:	b.ne	4107f8 <ferror@plt+0xd9b8>  // b.any
  4107b4:	cbz	x23, 4107c0 <ferror@plt+0xd980>
  4107b8:	ldrb	w24, [x28]
  4107bc:	cbnz	w24, 4108c8 <ferror@plt+0xda88>
  4107c0:	str	x26, [x21]
  4107c4:	mov	w0, w27
  4107c8:	ldp	x19, x20, [sp, #16]
  4107cc:	ldp	x21, x22, [sp, #32]
  4107d0:	ldp	x23, x24, [sp, #48]
  4107d4:	ldp	x25, x26, [sp, #64]
  4107d8:	ldp	x27, x28, [sp, #80]
  4107dc:	ldp	x29, x30, [sp], #112
  4107e0:	ret
  4107e4:	mov	w27, #0x0                   	// #0
  4107e8:	b	4107b4 <ferror@plt+0xd974>
  4107ec:	cbz	x23, 4107f8 <ferror@plt+0xd9b8>
  4107f0:	ldrb	w24, [x19]
  4107f4:	cbnz	w24, 41081c <ferror@plt+0xd9dc>
  4107f8:	mov	w27, #0x4                   	// #4
  4107fc:	mov	w0, w27
  410800:	ldp	x19, x20, [sp, #16]
  410804:	ldp	x21, x22, [sp, #32]
  410808:	ldp	x23, x24, [sp, #48]
  41080c:	ldp	x25, x26, [sp, #64]
  410810:	ldp	x27, x28, [sp, #80]
  410814:	ldp	x29, x30, [sp], #112
  410818:	ret
  41081c:	mov	w1, w24
  410820:	mov	x0, x23
  410824:	mov	w27, #0x0                   	// #0
  410828:	mov	x26, #0x1                   	// #1
  41082c:	bl	402c00 <strchr@plt>
  410830:	cbz	x0, 4107f8 <ferror@plt+0xd9b8>
  410834:	sub	w2, w24, #0x45
  410838:	and	w2, w2, #0xff
  41083c:	cmp	w2, #0x2f
  410840:	b.hi	4108e0 <ferror@plt+0xdaa0>  // b.pmore
  410844:	mov	x3, #0x8945                	// #35141
  410848:	mov	x19, #0x1                   	// #1
  41084c:	movk	x3, #0x30, lsl #16
  410850:	lsl	x2, x19, x2
  410854:	movk	x3, #0x8144, lsl #32
  410858:	mov	w22, w19
  41085c:	tst	x2, x3
  410860:	mov	x20, #0x400                 	// #1024
  410864:	b.ne	410a48 <ferror@plt+0xdc08>  // b.any
  410868:	cmp	w24, #0x5a
  41086c:	b.eq	410bfc <ferror@plt+0xddbc>  // b.none
  410870:	b.hi	41097c <ferror@plt+0xdb3c>  // b.pmore
  410874:	cmp	w24, #0x4d
  410878:	b.eq	410a24 <ferror@plt+0xdbe4>  // b.none
  41087c:	b.hi	410910 <ferror@plt+0xdad0>  // b.pmore
  410880:	cmp	w24, #0x45
  410884:	b.eq	410ba4 <ferror@plt+0xdd64>  // b.none
  410888:	b.ls	4108ec <ferror@plt+0xdaac>  // b.plast
  41088c:	cmp	w24, #0x47
  410890:	b.eq	410998 <ferror@plt+0xdb58>  // b.none
  410894:	cmp	w24, #0x4b
  410898:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  41089c:	sxtw	x19, w22
  4108a0:	umulh	x0, x26, x20
  4108a4:	cbnz	x0, 410a3c <ferror@plt+0xdbfc>
  4108a8:	mul	x26, x26, x20
  4108ac:	add	x0, x28, x19
  4108b0:	str	x0, [x25]
  4108b4:	orr	w0, w27, #0x2
  4108b8:	ldrb	w1, [x28, x19]
  4108bc:	cmp	w1, #0x0
  4108c0:	csel	w27, w0, w27, ne  // ne = any
  4108c4:	b	4107c0 <ferror@plt+0xd980>
  4108c8:	mov	w1, w24
  4108cc:	mov	x0, x23
  4108d0:	bl	402c00 <strchr@plt>
  4108d4:	cbnz	x0, 410834 <ferror@plt+0xd9f4>
  4108d8:	orr	w27, w27, #0x2
  4108dc:	b	4107c0 <ferror@plt+0xd980>
  4108e0:	mov	w22, #0x1                   	// #1
  4108e4:	mov	x20, #0x400                 	// #1024
  4108e8:	b	410868 <ferror@plt+0xda28>
  4108ec:	sxtw	x19, w22
  4108f0:	cmp	w24, #0x42
  4108f4:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  4108f8:	lsr	x0, x26, #54
  4108fc:	lsl	x26, x26, #10
  410900:	cmp	x0, #0x0
  410904:	csinc	w27, w27, wzr, eq  // eq = none
  410908:	csinv	x26, x26, xzr, eq  // eq = none
  41090c:	b	4108ac <ferror@plt+0xda6c>
  410910:	cmp	w24, #0x54
  410914:	b.eq	410bd4 <ferror@plt+0xdd94>  // b.none
  410918:	sxtw	x19, w22
  41091c:	cmp	w24, #0x59
  410920:	b.ne	41094c <ferror@plt+0xdb0c>  // b.any
  410924:	mov	w0, #0x8                   	// #8
  410928:	mov	w2, #0x0                   	// #0
  41092c:	nop
  410930:	umulh	x1, x26, x20
  410934:	cbnz	x1, 410c98 <ferror@plt+0xde58>
  410938:	mul	x26, x26, x20
  41093c:	subs	w0, w0, #0x1
  410940:	b.ne	410930 <ferror@plt+0xdaf0>  // b.any
  410944:	orr	w27, w27, w2
  410948:	b	4108ac <ferror@plt+0xda6c>
  41094c:	sxtw	x19, w22
  410950:	cmp	w24, #0x50
  410954:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  410958:	mov	w0, #0x5                   	// #5
  41095c:	mov	w2, #0x0                   	// #0
  410960:	umulh	x1, x26, x20
  410964:	cbnz	x1, 410c8c <ferror@plt+0xde4c>
  410968:	mul	x26, x26, x20
  41096c:	subs	w0, w0, #0x1
  410970:	b.ne	410960 <ferror@plt+0xdb20>  // b.any
  410974:	orr	w27, w27, w2
  410978:	b	4108ac <ferror@plt+0xda6c>
  41097c:	cmp	w24, #0x6b
  410980:	b.eq	41089c <ferror@plt+0xda5c>  // b.none
  410984:	b.hi	4109f0 <ferror@plt+0xdbb0>  // b.pmore
  410988:	cmp	w24, #0x63
  41098c:	b.eq	410bcc <ferror@plt+0xdd8c>  // b.none
  410990:	cmp	w24, #0x67
  410994:	b.ne	4109cc <ferror@plt+0xdb8c>  // b.any
  410998:	sxtw	x19, w22
  41099c:	umulh	x0, x26, x20
  4109a0:	cbnz	x0, 410c38 <ferror@plt+0xddf8>
  4109a4:	mul	x26, x26, x20
  4109a8:	umulh	x0, x26, x20
  4109ac:	cbnz	x0, 410c38 <ferror@plt+0xddf8>
  4109b0:	mul	x26, x26, x20
  4109b4:	umulh	x0, x26, x20
  4109b8:	cbnz	x0, 410c38 <ferror@plt+0xddf8>
  4109bc:	mov	w0, #0x0                   	// #0
  4109c0:	mul	x26, x26, x20
  4109c4:	orr	w27, w27, w0
  4109c8:	b	4108ac <ferror@plt+0xda6c>
  4109cc:	sxtw	x19, w22
  4109d0:	cmp	w24, #0x62
  4109d4:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  4109d8:	lsr	x0, x26, #55
  4109dc:	lsl	x26, x26, #9
  4109e0:	cmp	x0, #0x0
  4109e4:	csinc	w27, w27, wzr, eq  // eq = none
  4109e8:	csinv	x26, x26, xzr, eq  // eq = none
  4109ec:	b	4108ac <ferror@plt+0xda6c>
  4109f0:	cmp	w24, #0x74
  4109f4:	b.eq	410bd4 <ferror@plt+0xdd94>  // b.none
  4109f8:	cmp	w24, #0x77
  4109fc:	sxtw	x19, w22
  410a00:	b.ne	410a1c <ferror@plt+0xdbdc>  // b.any
  410a04:	lsr	x0, x26, #63
  410a08:	lsl	x26, x26, #1
  410a0c:	cmp	x0, #0x0
  410a10:	csinc	w27, w27, wzr, eq  // eq = none
  410a14:	csinv	x26, x26, xzr, eq  // eq = none
  410a18:	b	4108ac <ferror@plt+0xda6c>
  410a1c:	cmp	w24, #0x6d
  410a20:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  410a24:	sxtw	x19, w22
  410a28:	umulh	x0, x26, x20
  410a2c:	cbnz	x0, 410a3c <ferror@plt+0xdbfc>
  410a30:	mul	x26, x26, x20
  410a34:	umulh	x0, x26, x20
  410a38:	cbz	x0, 4108a8 <ferror@plt+0xda68>
  410a3c:	mov	w27, #0x1                   	// #1
  410a40:	mov	x26, #0xffffffffffffffff    	// #-1
  410a44:	b	4108ac <ferror@plt+0xda6c>
  410a48:	mov	x0, x23
  410a4c:	mov	w1, #0x30                  	// #48
  410a50:	bl	402c00 <strchr@plt>
  410a54:	cbz	x0, 410868 <ferror@plt+0xda28>
  410a58:	ldrb	w0, [x28, #1]
  410a5c:	cmp	w0, #0x44
  410a60:	b.eq	410af4 <ferror@plt+0xdcb4>  // b.none
  410a64:	cmp	w0, #0x69
  410a68:	b.eq	410ab4 <ferror@plt+0xdc74>  // b.none
  410a6c:	cmp	w0, #0x42
  410a70:	b.eq	410af4 <ferror@plt+0xdcb4>  // b.none
  410a74:	cmp	w24, #0x5a
  410a78:	b.eq	410ac8 <ferror@plt+0xdc88>  // b.none
  410a7c:	b.hi	410b1c <ferror@plt+0xdcdc>  // b.pmore
  410a80:	cmp	w24, #0x4d
  410a84:	b.eq	410b14 <ferror@plt+0xdcd4>  // b.none
  410a88:	b.hi	410b48 <ferror@plt+0xdd08>  // b.pmore
  410a8c:	cmp	w24, #0x45
  410a90:	b.eq	410c24 <ferror@plt+0xdde4>  // b.none
  410a94:	b.ls	410b64 <ferror@plt+0xdd24>  // b.plast
  410a98:	cmp	w24, #0x47
  410a9c:	b.eq	410c04 <ferror@plt+0xddc4>  // b.none
  410aa0:	cmp	w24, #0x4b
  410aa4:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  410aa8:	mov	x19, #0x1                   	// #1
  410aac:	mov	x20, #0x400                 	// #1024
  410ab0:	b	4108a0 <ferror@plt+0xda60>
  410ab4:	ldrb	w1, [x28, #2]
  410ab8:	mov	w0, #0x3                   	// #3
  410abc:	cmp	w1, #0x42
  410ac0:	csel	w22, w19, w0, ne  // ne = any
  410ac4:	b	410868 <ferror@plt+0xda28>
  410ac8:	mov	x20, #0x400                 	// #1024
  410acc:	mov	w0, #0x7                   	// #7
  410ad0:	mov	w2, #0x0                   	// #0
  410ad4:	nop
  410ad8:	umulh	x1, x26, x20
  410adc:	cbnz	x1, 410c74 <ferror@plt+0xde34>
  410ae0:	mul	x26, x26, x20
  410ae4:	subs	w0, w0, #0x1
  410ae8:	b.ne	410ad8 <ferror@plt+0xdc98>  // b.any
  410aec:	orr	w27, w27, w2
  410af0:	b	4108ac <ferror@plt+0xda6c>
  410af4:	mov	w22, #0x2                   	// #2
  410af8:	mov	x20, #0x3e8                 	// #1000
  410afc:	b	410868 <ferror@plt+0xda28>
  410b00:	cmp	w24, #0x6b
  410b04:	b.eq	410aa8 <ferror@plt+0xdc68>  // b.none
  410b08:	cmp	w24, #0x6d
  410b0c:	mov	x19, #0x1                   	// #1
  410b10:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  410b14:	mov	x20, #0x400                 	// #1024
  410b18:	b	410a28 <ferror@plt+0xdbe8>
  410b1c:	cmp	w24, #0x67
  410b20:	b.eq	410c30 <ferror@plt+0xddf0>  // b.none
  410b24:	b.ls	410b78 <ferror@plt+0xdd38>  // b.plast
  410b28:	cmp	w24, #0x74
  410b2c:	b.eq	410c18 <ferror@plt+0xddd8>  // b.none
  410b30:	b.ls	410b00 <ferror@plt+0xdcc0>  // b.plast
  410b34:	cmp	w24, #0x77
  410b38:	mov	x19, #0x1                   	// #1
  410b3c:	b.eq	410a04 <ferror@plt+0xdbc4>  // b.none
  410b40:	orr	w27, w27, #0x2
  410b44:	b	4107c0 <ferror@plt+0xd980>
  410b48:	cmp	w24, #0x54
  410b4c:	b.eq	410c18 <ferror@plt+0xddd8>  // b.none
  410b50:	cmp	w24, #0x59
  410b54:	b.ne	410b90 <ferror@plt+0xdd50>  // b.any
  410b58:	mov	x19, #0x1                   	// #1
  410b5c:	mov	x20, #0x400                 	// #1024
  410b60:	b	410924 <ferror@plt+0xdae4>
  410b64:	cmp	w24, #0x42
  410b68:	mov	x19, #0x1                   	// #1
  410b6c:	b.eq	4108f8 <ferror@plt+0xdab8>  // b.none
  410b70:	orr	w27, w27, #0x2
  410b74:	b	4107c0 <ferror@plt+0xd980>
  410b78:	cmp	w24, #0x62
  410b7c:	b.eq	410c10 <ferror@plt+0xddd0>  // b.none
  410b80:	cmp	w24, #0x63
  410b84:	mov	x19, #0x1                   	// #1
  410b88:	b.eq	4108ac <ferror@plt+0xda6c>  // b.none
  410b8c:	b	4108d8 <ferror@plt+0xda98>
  410b90:	cmp	w24, #0x50
  410b94:	b.ne	4108d8 <ferror@plt+0xda98>  // b.any
  410b98:	mov	x19, #0x1                   	// #1
  410b9c:	mov	x20, #0x400                 	// #1024
  410ba0:	b	410958 <ferror@plt+0xdb18>
  410ba4:	sxtw	x19, w22
  410ba8:	mov	w0, #0x6                   	// #6
  410bac:	mov	w2, #0x0                   	// #0
  410bb0:	umulh	x1, x26, x20
  410bb4:	cbnz	x1, 410c68 <ferror@plt+0xde28>
  410bb8:	mul	x26, x26, x20
  410bbc:	subs	w0, w0, #0x1
  410bc0:	b.ne	410bb0 <ferror@plt+0xdd70>  // b.any
  410bc4:	orr	w27, w27, w2
  410bc8:	b	4108ac <ferror@plt+0xda6c>
  410bcc:	sxtw	x19, w22
  410bd0:	b	4108ac <ferror@plt+0xda6c>
  410bd4:	sxtw	x19, w22
  410bd8:	mov	w0, #0x4                   	// #4
  410bdc:	mov	w2, #0x0                   	// #0
  410be0:	umulh	x1, x26, x20
  410be4:	cbnz	x1, 410c80 <ferror@plt+0xde40>
  410be8:	mul	x26, x26, x20
  410bec:	subs	w0, w0, #0x1
  410bf0:	b.ne	410be0 <ferror@plt+0xdda0>  // b.any
  410bf4:	orr	w27, w27, w2
  410bf8:	b	4108ac <ferror@plt+0xda6c>
  410bfc:	sxtw	x19, w22
  410c00:	b	410acc <ferror@plt+0xdc8c>
  410c04:	mov	x19, #0x1                   	// #1
  410c08:	mov	x20, #0x400                 	// #1024
  410c0c:	b	41099c <ferror@plt+0xdb5c>
  410c10:	mov	x19, #0x1                   	// #1
  410c14:	b	4109d8 <ferror@plt+0xdb98>
  410c18:	mov	x19, #0x1                   	// #1
  410c1c:	mov	x20, #0x400                 	// #1024
  410c20:	b	410bd8 <ferror@plt+0xdd98>
  410c24:	mov	x19, #0x1                   	// #1
  410c28:	mov	x20, #0x400                 	// #1024
  410c2c:	b	410ba8 <ferror@plt+0xdd68>
  410c30:	mov	x20, #0x400                 	// #1024
  410c34:	b	41099c <ferror@plt+0xdb5c>
  410c38:	mov	w0, #0x1                   	// #1
  410c3c:	mov	x26, #0xffffffffffffffff    	// #-1
  410c40:	orr	w27, w27, w0
  410c44:	b	4108ac <ferror@plt+0xda6c>
  410c48:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x3498>
  410c4c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  410c50:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x3498>
  410c54:	add	x3, x3, #0x370
  410c58:	add	x1, x1, #0x338
  410c5c:	add	x0, x0, #0x348
  410c60:	mov	w2, #0x54                  	// #84
  410c64:	bl	402da0 <__assert_fail@plt>
  410c68:	mov	w2, #0x1                   	// #1
  410c6c:	mov	x26, #0xffffffffffffffff    	// #-1
  410c70:	b	410bbc <ferror@plt+0xdd7c>
  410c74:	mov	w2, #0x1                   	// #1
  410c78:	mov	x26, #0xffffffffffffffff    	// #-1
  410c7c:	b	410ae4 <ferror@plt+0xdca4>
  410c80:	mov	w2, #0x1                   	// #1
  410c84:	mov	x26, #0xffffffffffffffff    	// #-1
  410c88:	b	410bec <ferror@plt+0xddac>
  410c8c:	mov	w2, #0x1                   	// #1
  410c90:	mov	x26, #0xffffffffffffffff    	// #-1
  410c94:	b	41096c <ferror@plt+0xdb2c>
  410c98:	mov	w2, #0x1                   	// #1
  410c9c:	mov	x26, #0xffffffffffffffff    	// #-1
  410ca0:	b	41093c <ferror@plt+0xdafc>
  410ca4:	nop
  410ca8:	stp	x29, x30, [sp, #-64]!
  410cac:	adrp	x5, 429000 <_obstack_memory_used@@Base+0x17498>
  410cb0:	sub	w0, w0, #0x1
  410cb4:	mov	x29, sp
  410cb8:	stp	x21, x22, [sp, #32]
  410cbc:	cmp	w0, #0x3
  410cc0:	ldr	w21, [x5, #1208]
  410cc4:	stp	x19, x20, [sp, #16]
  410cc8:	b.hi	410d20 <ferror@plt+0xdee0>  // b.pmore
  410ccc:	mov	w6, w1
  410cd0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  410cd4:	add	x1, x1, #0x3f0
  410cd8:	mov	x20, x4
  410cdc:	sxtw	x4, w6
  410ce0:	ldr	x1, [x1, w0, uxtw #3]
  410ce4:	tbnz	w6, #31, 410d24 <ferror@plt+0xdee4>
  410ce8:	lsl	x4, x4, #5
  410cec:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x3498>
  410cf0:	add	x19, x19, #0x380
  410cf4:	ldr	x22, [x3, x4]
  410cf8:	mov	w2, #0x5                   	// #5
  410cfc:	mov	x0, #0x0                   	// #0
  410d00:	bl	402d20 <dcgettext@plt>
  410d04:	mov	x5, x20
  410d08:	mov	x2, x0
  410d0c:	mov	x4, x22
  410d10:	mov	x3, x19
  410d14:	mov	w0, w21
  410d18:	mov	w1, #0x0                   	// #0
  410d1c:	bl	4027b0 <error@plt>
  410d20:	bl	402a80 <abort@plt>
  410d24:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x3498>
  410d28:	add	x19, x19, #0x380
  410d2c:	and	w2, w2, #0xff
  410d30:	sub	x19, x19, x4
  410d34:	add	x22, sp, #0x38
  410d38:	strb	w2, [sp, #56]
  410d3c:	strb	wzr, [sp, #57]
  410d40:	b	410cf8 <ferror@plt+0xdeb8>
  410d44:	nop
  410d48:	stp	x29, x30, [sp, #-112]!
  410d4c:	cmp	w2, #0x24
  410d50:	mov	x29, sp
  410d54:	stp	x19, x20, [sp, #16]
  410d58:	stp	x21, x22, [sp, #32]
  410d5c:	stp	x23, x24, [sp, #48]
  410d60:	b.hi	411278 <ferror@plt+0xe438>  // b.pmore
  410d64:	cmp	x1, #0x0
  410d68:	mov	x19, x0
  410d6c:	add	x0, sp, #0x68
  410d70:	mov	x21, x3
  410d74:	csel	x24, x0, x1, eq  // eq = none
  410d78:	mov	w22, w2
  410d7c:	mov	x23, x4
  410d80:	stp	x27, x28, [sp, #80]
  410d84:	bl	402db0 <__errno_location@plt>
  410d88:	str	wzr, [x0]
  410d8c:	mov	x20, x0
  410d90:	bl	402b60 <__ctype_b_loc@plt>
  410d94:	ldrb	w3, [x19]
  410d98:	mov	x5, x19
  410d9c:	ldr	x1, [x0]
  410da0:	b	410da8 <ferror@plt+0xdf68>
  410da4:	ldrb	w3, [x5, #1]!
  410da8:	ubfiz	x4, x3, #1, #8
  410dac:	ldrh	w4, [x1, x4]
  410db0:	tbnz	w4, #13, 410da4 <ferror@plt+0xdf64>
  410db4:	cmp	w3, #0x2d
  410db8:	b.eq	410e40 <ferror@plt+0xe000>  // b.none
  410dbc:	mov	w2, w22
  410dc0:	mov	x1, x24
  410dc4:	mov	x0, x19
  410dc8:	mov	w3, #0x0                   	// #0
  410dcc:	stp	x25, x26, [sp, #64]
  410dd0:	bl	4029c0 <__strtoul_internal@plt>
  410dd4:	mov	x26, x0
  410dd8:	ldr	x28, [x24]
  410ddc:	cmp	x28, x19
  410de0:	b.eq	410e30 <ferror@plt+0xdff0>  // b.none
  410de4:	ldr	w0, [x20]
  410de8:	cbz	w0, 410e28 <ferror@plt+0xdfe8>
  410dec:	cmp	w0, #0x22
  410df0:	mov	w27, #0x1                   	// #1
  410df4:	b.ne	410e3c <ferror@plt+0xdffc>  // b.any
  410df8:	cbz	x23, 410e04 <ferror@plt+0xdfc4>
  410dfc:	ldrb	w25, [x28]
  410e00:	cbnz	w25, 4110dc <ferror@plt+0xe29c>
  410e04:	str	x26, [x21]
  410e08:	mov	w0, w27
  410e0c:	ldp	x19, x20, [sp, #16]
  410e10:	ldp	x21, x22, [sp, #32]
  410e14:	ldp	x23, x24, [sp, #48]
  410e18:	ldp	x25, x26, [sp, #64]
  410e1c:	ldp	x27, x28, [sp, #80]
  410e20:	ldp	x29, x30, [sp], #112
  410e24:	ret
  410e28:	mov	w27, #0x0                   	// #0
  410e2c:	b	410df8 <ferror@plt+0xdfb8>
  410e30:	cbz	x23, 410e3c <ferror@plt+0xdffc>
  410e34:	ldrb	w25, [x19]
  410e38:	cbnz	w25, 410e60 <ferror@plt+0xe020>
  410e3c:	ldp	x25, x26, [sp, #64]
  410e40:	mov	w27, #0x4                   	// #4
  410e44:	mov	w0, w27
  410e48:	ldp	x19, x20, [sp, #16]
  410e4c:	ldp	x21, x22, [sp, #32]
  410e50:	ldp	x23, x24, [sp, #48]
  410e54:	ldp	x27, x28, [sp, #80]
  410e58:	ldp	x29, x30, [sp], #112
  410e5c:	ret
  410e60:	mov	w1, w25
  410e64:	mov	x0, x23
  410e68:	mov	w27, #0x0                   	// #0
  410e6c:	mov	x26, #0x1                   	// #1
  410e70:	bl	402c00 <strchr@plt>
  410e74:	cbz	x0, 410e3c <ferror@plt+0xdffc>
  410e78:	sub	w2, w25, #0x45
  410e7c:	and	w2, w2, #0xff
  410e80:	cmp	w2, #0x2f
  410e84:	b.hi	410f0c <ferror@plt+0xe0cc>  // b.pmore
  410e88:	mov	x3, #0x8945                	// #35141
  410e8c:	mov	x19, #0x1                   	// #1
  410e90:	movk	x3, #0x30, lsl #16
  410e94:	lsl	x2, x19, x2
  410e98:	movk	x3, #0x8144, lsl #32
  410e9c:	mov	w22, w19
  410ea0:	tst	x2, x3
  410ea4:	mov	x20, #0x400                 	// #1024
  410ea8:	b.ne	411070 <ferror@plt+0xe230>  // b.any
  410eac:	cmp	w25, #0x5a
  410eb0:	b.eq	41123c <ferror@plt+0xe3fc>  // b.none
  410eb4:	b.hi	410fa4 <ferror@plt+0xe164>  // b.pmore
  410eb8:	cmp	w25, #0x4d
  410ebc:	b.eq	41104c <ferror@plt+0xe20c>  // b.none
  410ec0:	b.hi	410f3c <ferror@plt+0xe0fc>  // b.pmore
  410ec4:	cmp	w25, #0x45
  410ec8:	b.eq	4111ec <ferror@plt+0xe3ac>  // b.none
  410ecc:	b.ls	410f18 <ferror@plt+0xe0d8>  // b.plast
  410ed0:	cmp	w25, #0x47
  410ed4:	b.eq	410fc0 <ferror@plt+0xe180>  // b.none
  410ed8:	cmp	w25, #0x4b
  410edc:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  410ee0:	sxtw	x19, w22
  410ee4:	umulh	x0, x26, x20
  410ee8:	cbnz	x0, 411064 <ferror@plt+0xe224>
  410eec:	mul	x26, x26, x20
  410ef0:	add	x0, x28, x19
  410ef4:	str	x0, [x24]
  410ef8:	orr	w0, w27, #0x2
  410efc:	ldrb	w1, [x28, x19]
  410f00:	cmp	w1, #0x0
  410f04:	csel	w27, w0, w27, ne  // ne = any
  410f08:	b	410e04 <ferror@plt+0xdfc4>
  410f0c:	mov	w22, #0x1                   	// #1
  410f10:	mov	x20, #0x400                 	// #1024
  410f14:	b	410eac <ferror@plt+0xe06c>
  410f18:	sxtw	x19, w22
  410f1c:	cmp	w25, #0x42
  410f20:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  410f24:	lsr	x0, x26, #54
  410f28:	lsl	x26, x26, #10
  410f2c:	cmp	x0, #0x0
  410f30:	csinc	w27, w27, wzr, eq  // eq = none
  410f34:	csinv	x26, x26, xzr, eq  // eq = none
  410f38:	b	410ef0 <ferror@plt+0xe0b0>
  410f3c:	cmp	w25, #0x54
  410f40:	b.eq	411214 <ferror@plt+0xe3d4>  // b.none
  410f44:	sxtw	x19, w22
  410f48:	cmp	w25, #0x59
  410f4c:	b.ne	410f74 <ferror@plt+0xe134>  // b.any
  410f50:	mov	w0, #0x8                   	// #8
  410f54:	mov	w2, #0x0                   	// #0
  410f58:	umulh	x1, x26, x20
  410f5c:	cbnz	x1, 4112bc <ferror@plt+0xe47c>
  410f60:	mul	x26, x26, x20
  410f64:	subs	w0, w0, #0x1
  410f68:	b.ne	410f58 <ferror@plt+0xe118>  // b.any
  410f6c:	orr	w27, w27, w2
  410f70:	b	410ef0 <ferror@plt+0xe0b0>
  410f74:	sxtw	x19, w22
  410f78:	cmp	w25, #0x50
  410f7c:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  410f80:	mov	w0, #0x5                   	// #5
  410f84:	mov	w2, #0x0                   	// #0
  410f88:	umulh	x1, x26, x20
  410f8c:	cbnz	x1, 4112b0 <ferror@plt+0xe470>
  410f90:	mul	x26, x26, x20
  410f94:	subs	w0, w0, #0x1
  410f98:	b.ne	410f88 <ferror@plt+0xe148>  // b.any
  410f9c:	orr	w27, w27, w2
  410fa0:	b	410ef0 <ferror@plt+0xe0b0>
  410fa4:	cmp	w25, #0x6b
  410fa8:	b.eq	410ee0 <ferror@plt+0xe0a0>  // b.none
  410fac:	b.hi	411018 <ferror@plt+0xe1d8>  // b.pmore
  410fb0:	cmp	w25, #0x63
  410fb4:	b.eq	4111e4 <ferror@plt+0xe3a4>  // b.none
  410fb8:	cmp	w25, #0x67
  410fbc:	b.ne	410ff4 <ferror@plt+0xe1b4>  // b.any
  410fc0:	sxtw	x19, w22
  410fc4:	umulh	x0, x26, x20
  410fc8:	cbnz	x0, 4112a0 <ferror@plt+0xe460>
  410fcc:	mul	x26, x26, x20
  410fd0:	umulh	x0, x26, x20
  410fd4:	cbnz	x0, 4112a0 <ferror@plt+0xe460>
  410fd8:	mul	x26, x26, x20
  410fdc:	umulh	x0, x26, x20
  410fe0:	cbnz	x0, 4112a0 <ferror@plt+0xe460>
  410fe4:	mov	w0, #0x0                   	// #0
  410fe8:	mul	x26, x26, x20
  410fec:	orr	w27, w27, w0
  410ff0:	b	410ef0 <ferror@plt+0xe0b0>
  410ff4:	sxtw	x19, w22
  410ff8:	cmp	w25, #0x62
  410ffc:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  411000:	lsr	x0, x26, #55
  411004:	lsl	x26, x26, #9
  411008:	cmp	x0, #0x0
  41100c:	csinc	w27, w27, wzr, eq  // eq = none
  411010:	csinv	x26, x26, xzr, eq  // eq = none
  411014:	b	410ef0 <ferror@plt+0xe0b0>
  411018:	cmp	w25, #0x74
  41101c:	b.eq	411214 <ferror@plt+0xe3d4>  // b.none
  411020:	cmp	w25, #0x77
  411024:	sxtw	x19, w22
  411028:	b.ne	411044 <ferror@plt+0xe204>  // b.any
  41102c:	lsr	x0, x26, #63
  411030:	lsl	x26, x26, #1
  411034:	cmp	x0, #0x0
  411038:	csinc	w27, w27, wzr, eq  // eq = none
  41103c:	csinv	x26, x26, xzr, eq  // eq = none
  411040:	b	410ef0 <ferror@plt+0xe0b0>
  411044:	cmp	w25, #0x6d
  411048:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  41104c:	sxtw	x19, w22
  411050:	umulh	x0, x26, x20
  411054:	cbnz	x0, 411064 <ferror@plt+0xe224>
  411058:	mul	x26, x26, x20
  41105c:	umulh	x0, x26, x20
  411060:	cbz	x0, 410eec <ferror@plt+0xe0ac>
  411064:	mov	w27, #0x1                   	// #1
  411068:	mov	x26, #0xffffffffffffffff    	// #-1
  41106c:	b	410ef0 <ferror@plt+0xe0b0>
  411070:	mov	x0, x23
  411074:	mov	w1, #0x30                  	// #48
  411078:	bl	402c00 <strchr@plt>
  41107c:	cbz	x0, 410eac <ferror@plt+0xe06c>
  411080:	ldrb	w0, [x28, #1]
  411084:	cmp	w0, #0x44
  411088:	b.eq	411134 <ferror@plt+0xe2f4>  // b.none
  41108c:	cmp	w0, #0x69
  411090:	b.eq	4110f4 <ferror@plt+0xe2b4>  // b.none
  411094:	cmp	w0, #0x42
  411098:	b.eq	411134 <ferror@plt+0xe2f4>  // b.none
  41109c:	cmp	w25, #0x5a
  4110a0:	b.eq	411108 <ferror@plt+0xe2c8>  // b.none
  4110a4:	b.hi	41115c <ferror@plt+0xe31c>  // b.pmore
  4110a8:	cmp	w25, #0x4d
  4110ac:	b.eq	411154 <ferror@plt+0xe314>  // b.none
  4110b0:	b.hi	411188 <ferror@plt+0xe348>  // b.pmore
  4110b4:	cmp	w25, #0x45
  4110b8:	b.eq	411264 <ferror@plt+0xe424>  // b.none
  4110bc:	b.ls	4111a4 <ferror@plt+0xe364>  // b.plast
  4110c0:	cmp	w25, #0x47
  4110c4:	b.eq	411244 <ferror@plt+0xe404>  // b.none
  4110c8:	cmp	w25, #0x4b
  4110cc:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  4110d0:	mov	x19, #0x1                   	// #1
  4110d4:	mov	x20, #0x400                 	// #1024
  4110d8:	b	410ee4 <ferror@plt+0xe0a4>
  4110dc:	mov	w1, w25
  4110e0:	mov	x0, x23
  4110e4:	bl	402c00 <strchr@plt>
  4110e8:	cbnz	x0, 410e78 <ferror@plt+0xe038>
  4110ec:	orr	w27, w27, #0x2
  4110f0:	b	410e04 <ferror@plt+0xdfc4>
  4110f4:	ldrb	w1, [x28, #2]
  4110f8:	mov	w0, #0x3                   	// #3
  4110fc:	cmp	w1, #0x42
  411100:	csel	w22, w19, w0, ne  // ne = any
  411104:	b	410eac <ferror@plt+0xe06c>
  411108:	mov	x20, #0x400                 	// #1024
  41110c:	mov	w0, #0x7                   	// #7
  411110:	mov	w2, #0x0                   	// #0
  411114:	nop
  411118:	umulh	x1, x26, x20
  41111c:	cbnz	x1, 4112d4 <ferror@plt+0xe494>
  411120:	mul	x26, x26, x20
  411124:	subs	w0, w0, #0x1
  411128:	b.ne	411118 <ferror@plt+0xe2d8>  // b.any
  41112c:	orr	w27, w27, w2
  411130:	b	410ef0 <ferror@plt+0xe0b0>
  411134:	mov	w22, #0x2                   	// #2
  411138:	mov	x20, #0x3e8                 	// #1000
  41113c:	b	410eac <ferror@plt+0xe06c>
  411140:	cmp	w25, #0x6b
  411144:	b.eq	4110d0 <ferror@plt+0xe290>  // b.none
  411148:	cmp	w25, #0x6d
  41114c:	mov	x19, #0x1                   	// #1
  411150:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  411154:	mov	x20, #0x400                 	// #1024
  411158:	b	411050 <ferror@plt+0xe210>
  41115c:	cmp	w25, #0x67
  411160:	b.eq	411270 <ferror@plt+0xe430>  // b.none
  411164:	b.ls	4111b8 <ferror@plt+0xe378>  // b.plast
  411168:	cmp	w25, #0x74
  41116c:	b.eq	411258 <ferror@plt+0xe418>  // b.none
  411170:	b.ls	411140 <ferror@plt+0xe300>  // b.plast
  411174:	cmp	w25, #0x77
  411178:	mov	x19, #0x1                   	// #1
  41117c:	b.eq	41102c <ferror@plt+0xe1ec>  // b.none
  411180:	orr	w27, w27, #0x2
  411184:	b	410e04 <ferror@plt+0xdfc4>
  411188:	cmp	w25, #0x54
  41118c:	b.eq	411258 <ferror@plt+0xe418>  // b.none
  411190:	cmp	w25, #0x59
  411194:	b.ne	4111d0 <ferror@plt+0xe390>  // b.any
  411198:	mov	x19, #0x1                   	// #1
  41119c:	mov	x20, #0x400                 	// #1024
  4111a0:	b	410f50 <ferror@plt+0xe110>
  4111a4:	cmp	w25, #0x42
  4111a8:	mov	x19, #0x1                   	// #1
  4111ac:	b.eq	410f24 <ferror@plt+0xe0e4>  // b.none
  4111b0:	orr	w27, w27, #0x2
  4111b4:	b	410e04 <ferror@plt+0xdfc4>
  4111b8:	cmp	w25, #0x62
  4111bc:	b.eq	411250 <ferror@plt+0xe410>  // b.none
  4111c0:	cmp	w25, #0x63
  4111c4:	mov	x19, #0x1                   	// #1
  4111c8:	b.eq	410ef0 <ferror@plt+0xe0b0>  // b.none
  4111cc:	b	4110ec <ferror@plt+0xe2ac>
  4111d0:	cmp	w25, #0x50
  4111d4:	b.ne	4110ec <ferror@plt+0xe2ac>  // b.any
  4111d8:	mov	x19, #0x1                   	// #1
  4111dc:	mov	x20, #0x400                 	// #1024
  4111e0:	b	410f80 <ferror@plt+0xe140>
  4111e4:	sxtw	x19, w22
  4111e8:	b	410ef0 <ferror@plt+0xe0b0>
  4111ec:	sxtw	x19, w22
  4111f0:	mov	w0, #0x6                   	// #6
  4111f4:	mov	w2, #0x0                   	// #0
  4111f8:	umulh	x1, x26, x20
  4111fc:	cbnz	x1, 4112c8 <ferror@plt+0xe488>
  411200:	mul	x26, x26, x20
  411204:	subs	w0, w0, #0x1
  411208:	b.ne	4111f8 <ferror@plt+0xe3b8>  // b.any
  41120c:	orr	w27, w27, w2
  411210:	b	410ef0 <ferror@plt+0xe0b0>
  411214:	sxtw	x19, w22
  411218:	mov	w0, #0x4                   	// #4
  41121c:	mov	w2, #0x0                   	// #0
  411220:	umulh	x1, x26, x20
  411224:	cbnz	x1, 4112e0 <ferror@plt+0xe4a0>
  411228:	mul	x26, x26, x20
  41122c:	subs	w0, w0, #0x1
  411230:	b.ne	411220 <ferror@plt+0xe3e0>  // b.any
  411234:	orr	w27, w27, w2
  411238:	b	410ef0 <ferror@plt+0xe0b0>
  41123c:	sxtw	x19, w22
  411240:	b	41110c <ferror@plt+0xe2cc>
  411244:	mov	x19, #0x1                   	// #1
  411248:	mov	x20, #0x400                 	// #1024
  41124c:	b	410fc4 <ferror@plt+0xe184>
  411250:	mov	x19, #0x1                   	// #1
  411254:	b	411000 <ferror@plt+0xe1c0>
  411258:	mov	x19, #0x1                   	// #1
  41125c:	mov	x20, #0x400                 	// #1024
  411260:	b	411218 <ferror@plt+0xe3d8>
  411264:	mov	x19, #0x1                   	// #1
  411268:	mov	x20, #0x400                 	// #1024
  41126c:	b	4111f0 <ferror@plt+0xe3b0>
  411270:	mov	x20, #0x400                 	// #1024
  411274:	b	410fc4 <ferror@plt+0xe184>
  411278:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x3498>
  41127c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  411280:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x3498>
  411284:	add	x3, x3, #0x410
  411288:	add	x1, x1, #0x338
  41128c:	add	x0, x0, #0x348
  411290:	mov	w2, #0x54                  	// #84
  411294:	stp	x25, x26, [sp, #64]
  411298:	stp	x27, x28, [sp, #80]
  41129c:	bl	402da0 <__assert_fail@plt>
  4112a0:	mov	w0, #0x1                   	// #1
  4112a4:	mov	x26, #0xffffffffffffffff    	// #-1
  4112a8:	orr	w27, w27, w0
  4112ac:	b	410ef0 <ferror@plt+0xe0b0>
  4112b0:	mov	w2, #0x1                   	// #1
  4112b4:	mov	x26, #0xffffffffffffffff    	// #-1
  4112b8:	b	410f94 <ferror@plt+0xe154>
  4112bc:	mov	w2, #0x1                   	// #1
  4112c0:	mov	x26, #0xffffffffffffffff    	// #-1
  4112c4:	b	410f64 <ferror@plt+0xe124>
  4112c8:	mov	w2, #0x1                   	// #1
  4112cc:	mov	x26, #0xffffffffffffffff    	// #-1
  4112d0:	b	411204 <ferror@plt+0xe3c4>
  4112d4:	mov	w2, #0x1                   	// #1
  4112d8:	mov	x26, #0xffffffffffffffff    	// #-1
  4112dc:	b	411124 <ferror@plt+0xe2e4>
  4112e0:	mov	w2, #0x1                   	// #1
  4112e4:	mov	x26, #0xffffffffffffffff    	// #-1
  4112e8:	b	41122c <ferror@plt+0xe3ec>
  4112ec:	nop
  4112f0:	stp	x29, x30, [sp, #-32]!
  4112f4:	mov	x29, sp
  4112f8:	stp	x19, x20, [sp, #16]
  4112fc:	mov	x19, x0
  411300:	bl	402880 <fileno@plt>
  411304:	tbnz	w0, #31, 411360 <ferror@plt+0xe520>
  411308:	mov	x0, x19
  41130c:	bl	402d50 <__freading@plt>
  411310:	cbnz	w0, 411344 <ferror@plt+0xe504>
  411314:	mov	x0, x19
  411318:	bl	4115d8 <ferror@plt+0xe798>
  41131c:	cbz	w0, 411360 <ferror@plt+0xe520>
  411320:	bl	402db0 <__errno_location@plt>
  411324:	mov	x20, x0
  411328:	mov	x0, x19
  41132c:	ldr	w19, [x20]
  411330:	bl	4028a0 <fclose@plt>
  411334:	cbnz	w19, 411370 <ferror@plt+0xe530>
  411338:	ldp	x19, x20, [sp, #16]
  41133c:	ldp	x29, x30, [sp], #32
  411340:	ret
  411344:	mov	x0, x19
  411348:	bl	402880 <fileno@plt>
  41134c:	mov	w2, #0x1                   	// #1
  411350:	mov	x1, #0x0                   	// #0
  411354:	bl	402850 <lseek@plt>
  411358:	cmn	x0, #0x1
  41135c:	b.ne	411314 <ferror@plt+0xe4d4>  // b.any
  411360:	mov	x0, x19
  411364:	ldp	x19, x20, [sp, #16]
  411368:	ldp	x29, x30, [sp], #32
  41136c:	b	4028a0 <fclose@plt>
  411370:	mov	w0, #0xffffffff            	// #-1
  411374:	str	w19, [x20]
  411378:	b	411338 <ferror@plt+0xe4f8>
  41137c:	nop
  411380:	stp	x29, x30, [sp, #-112]!
  411384:	mov	w6, #0xffffffe0            	// #-32
  411388:	mov	x29, sp
  41138c:	add	x7, sp, #0x50
  411390:	stp	x19, x20, [sp, #16]
  411394:	str	x7, [sp, #64]
  411398:	stp	w6, wzr, [sp, #72]
  41139c:	stp	x2, x3, [sp, #80]
  4113a0:	add	x2, sp, #0x70
  4113a4:	stp	x2, x2, [sp, #48]
  4113a8:	stp	x4, x5, [sp, #96]
  4113ac:	cbz	w1, 41146c <ferror@plt+0xe62c>
  4113b0:	mov	w20, w0
  4113b4:	mov	w3, w1
  4113b8:	cmp	w1, #0x406
  4113bc:	b.eq	411488 <ferror@plt+0xe648>  // b.none
  4113c0:	cmp	w1, #0xb
  4113c4:	b.gt	411410 <ferror@plt+0xe5d0>
  4113c8:	cmp	w1, #0x0
  4113cc:	b.le	41143c <ferror@plt+0xe5fc>
  4113d0:	mov	x1, #0x1                   	// #1
  4113d4:	mov	x2, #0x514                 	// #1300
  4113d8:	lsl	x1, x1, x3
  4113dc:	tst	x1, x2
  4113e0:	b.ne	411504 <ferror@plt+0xe6c4>  // b.any
  4113e4:	mov	x2, #0xa0a                 	// #2570
  4113e8:	tst	x1, x2
  4113ec:	b.eq	41143c <ferror@plt+0xe5fc>  // b.none
  4113f0:	mov	w1, w3
  4113f4:	mov	w0, w20
  4113f8:	bl	402c50 <fcntl@plt>
  4113fc:	mov	w19, w0
  411400:	mov	w0, w19
  411404:	ldp	x19, x20, [sp, #16]
  411408:	ldp	x29, x30, [sp], #112
  41140c:	ret
  411410:	sub	w0, w1, #0x400
  411414:	cmp	w0, #0xa
  411418:	b.hi	41143c <ferror@plt+0xe5fc>  // b.pmore
  41141c:	mov	x1, #0x1                   	// #1
  411420:	mov	x2, #0x2c5                 	// #709
  411424:	lsl	x1, x1, x0
  411428:	tst	x1, x2
  41142c:	b.ne	411504 <ferror@plt+0xe6c4>  // b.any
  411430:	mov	x2, #0x502                 	// #1282
  411434:	tst	x1, x2
  411438:	b.ne	4113f0 <ferror@plt+0xe5b0>  // b.any
  41143c:	ldr	w0, [sp, #72]
  411440:	ldr	x1, [sp, #48]
  411444:	tbnz	w0, #31, 4115b0 <ferror@plt+0xe770>
  411448:	ldr	x2, [x1]
  41144c:	mov	w0, w20
  411450:	mov	w1, w3
  411454:	bl	402c50 <fcntl@plt>
  411458:	mov	w19, w0
  41145c:	mov	w0, w19
  411460:	ldp	x19, x20, [sp, #16]
  411464:	ldp	x29, x30, [sp], #112
  411468:	ret
  41146c:	ldr	w2, [sp, #80]
  411470:	bl	402c50 <fcntl@plt>
  411474:	mov	w19, w0
  411478:	mov	w0, w19
  41147c:	ldp	x19, x20, [sp, #16]
  411480:	ldp	x29, x30, [sp], #112
  411484:	ret
  411488:	stp	x21, x22, [sp, #32]
  41148c:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x17498>
  411490:	mov	w2, #0xffffffe8            	// #-24
  411494:	str	w2, [sp, #72]
  411498:	ldr	w2, [x21, #3312]
  41149c:	ldr	w22, [sp, #80]
  4114a0:	tbnz	w2, #31, 4114d0 <ferror@plt+0xe690>
  4114a4:	mov	w2, w22
  4114a8:	bl	402c50 <fcntl@plt>
  4114ac:	mov	w19, w0
  4114b0:	tbnz	w0, #31, 411534 <ferror@plt+0xe6f4>
  4114b4:	mov	w0, #0x1                   	// #1
  4114b8:	str	w0, [x21, #3312]
  4114bc:	mov	w0, w19
  4114c0:	ldp	x19, x20, [sp, #16]
  4114c4:	ldp	x21, x22, [sp, #32]
  4114c8:	ldp	x29, x30, [sp], #112
  4114cc:	ret
  4114d0:	mov	w2, w22
  4114d4:	mov	w1, #0x0                   	// #0
  4114d8:	bl	402c50 <fcntl@plt>
  4114dc:	mov	w19, w0
  4114e0:	tbnz	w0, #31, 4114f0 <ferror@plt+0xe6b0>
  4114e4:	ldr	w0, [x21, #3312]
  4114e8:	cmn	w0, #0x1
  4114ec:	b.eq	411564 <ferror@plt+0xe724>  // b.none
  4114f0:	mov	w0, w19
  4114f4:	ldp	x19, x20, [sp, #16]
  4114f8:	ldp	x21, x22, [sp, #32]
  4114fc:	ldp	x29, x30, [sp], #112
  411500:	ret
  411504:	ldr	w0, [sp, #72]
  411508:	ldr	x1, [sp, #48]
  41150c:	tbnz	w0, #31, 4115c4 <ferror@plt+0xe784>
  411510:	ldr	w2, [x1]
  411514:	mov	w0, w20
  411518:	mov	w1, w3
  41151c:	bl	402c50 <fcntl@plt>
  411520:	mov	w19, w0
  411524:	mov	w0, w19
  411528:	ldp	x19, x20, [sp, #16]
  41152c:	ldp	x29, x30, [sp], #112
  411530:	ret
  411534:	bl	402db0 <__errno_location@plt>
  411538:	ldr	w0, [x0]
  41153c:	cmp	w0, #0x16
  411540:	b.ne	4114b4 <ferror@plt+0xe674>  // b.any
  411544:	mov	w2, w22
  411548:	mov	w0, w20
  41154c:	mov	w1, #0x0                   	// #0
  411550:	bl	402c50 <fcntl@plt>
  411554:	mov	w19, w0
  411558:	tbnz	w0, #31, 4114f0 <ferror@plt+0xe6b0>
  41155c:	mov	w0, #0xffffffff            	// #-1
  411560:	str	w0, [x21, #3312]
  411564:	mov	w0, w19
  411568:	mov	w1, #0x1                   	// #1
  41156c:	bl	402c50 <fcntl@plt>
  411570:	tbnz	w0, #31, 41158c <ferror@plt+0xe74c>
  411574:	orr	w2, w0, #0x1
  411578:	mov	w1, #0x2                   	// #2
  41157c:	mov	w0, w19
  411580:	bl	402c50 <fcntl@plt>
  411584:	cmn	w0, #0x1
  411588:	b.ne	4114f0 <ferror@plt+0xe6b0>  // b.any
  41158c:	bl	402db0 <__errno_location@plt>
  411590:	mov	x20, x0
  411594:	mov	w0, w19
  411598:	mov	w19, #0xffffffff            	// #-1
  41159c:	ldr	w21, [x20]
  4115a0:	bl	402a10 <close@plt>
  4115a4:	str	w21, [x20]
  4115a8:	ldp	x21, x22, [sp, #32]
  4115ac:	b	411400 <ferror@plt+0xe5c0>
  4115b0:	cmn	w0, #0x7
  4115b4:	b.ge	411448 <ferror@plt+0xe608>  // b.tcont
  4115b8:	ldr	x1, [sp, #56]
  4115bc:	add	x1, x1, w0, sxtw
  4115c0:	b	411448 <ferror@plt+0xe608>
  4115c4:	cmn	w0, #0x7
  4115c8:	b.ge	411510 <ferror@plt+0xe6d0>  // b.tcont
  4115cc:	ldr	x1, [sp, #56]
  4115d0:	add	x1, x1, w0, sxtw
  4115d4:	b	411510 <ferror@plt+0xe6d0>
  4115d8:	stp	x29, x30, [sp, #-32]!
  4115dc:	mov	x29, sp
  4115e0:	str	x19, [sp, #16]
  4115e4:	mov	x19, x0
  4115e8:	cbz	x0, 4115fc <ferror@plt+0xe7bc>
  4115ec:	bl	402d50 <__freading@plt>
  4115f0:	cbz	w0, 4115fc <ferror@plt+0xe7bc>
  4115f4:	ldr	w0, [x19]
  4115f8:	tbnz	w0, #8, 41160c <ferror@plt+0xe7cc>
  4115fc:	mov	x0, x19
  411600:	ldr	x19, [sp, #16]
  411604:	ldp	x29, x30, [sp], #32
  411608:	b	402c80 <fflush@plt>
  41160c:	mov	x0, x19
  411610:	mov	w2, #0x1                   	// #1
  411614:	mov	x1, #0x0                   	// #0
  411618:	bl	411630 <ferror@plt+0xe7f0>
  41161c:	mov	x0, x19
  411620:	ldr	x19, [sp, #16]
  411624:	ldp	x29, x30, [sp], #32
  411628:	b	402c80 <fflush@plt>
  41162c:	nop
  411630:	stp	x29, x30, [sp, #-48]!
  411634:	mov	x29, sp
  411638:	ldp	x3, x4, [x0, #8]
  41163c:	str	x19, [sp, #16]
  411640:	mov	x19, x0
  411644:	cmp	x4, x3
  411648:	b.eq	41165c <ferror@plt+0xe81c>  // b.none
  41164c:	mov	x0, x19
  411650:	ldr	x19, [sp, #16]
  411654:	ldp	x29, x30, [sp], #48
  411658:	b	402b80 <fseeko@plt>
  41165c:	ldp	x3, x4, [x0, #32]
  411660:	cmp	x4, x3
  411664:	b.ne	41164c <ferror@plt+0xe80c>  // b.any
  411668:	ldr	x3, [x0, #72]
  41166c:	cbnz	x3, 41164c <ferror@plt+0xe80c>
  411670:	str	x1, [sp, #32]
  411674:	str	w2, [sp, #44]
  411678:	bl	402880 <fileno@plt>
  41167c:	ldr	w2, [sp, #44]
  411680:	ldr	x1, [sp, #32]
  411684:	bl	402850 <lseek@plt>
  411688:	mov	x1, x0
  41168c:	cmn	x0, #0x1
  411690:	b.eq	4116a8 <ferror@plt+0xe868>  // b.none
  411694:	ldr	w2, [x19]
  411698:	mov	w0, #0x0                   	// #0
  41169c:	str	x1, [x19, #144]
  4116a0:	and	w1, w2, #0xffffffef
  4116a4:	str	w1, [x19]
  4116a8:	ldr	x19, [sp, #16]
  4116ac:	ldp	x29, x30, [sp], #48
  4116b0:	ret
  4116b4:	nop
  4116b8:	stp	x29, x30, [sp, #-64]!
  4116bc:	cmp	x0, #0x0
  4116c0:	add	x4, sp, #0x3c
  4116c4:	mov	x29, sp
  4116c8:	stp	x19, x20, [sp, #16]
  4116cc:	csel	x19, x4, x0, eq  // eq = none
  4116d0:	mov	x20, x2
  4116d4:	mov	x0, x19
  4116d8:	str	x21, [sp, #32]
  4116dc:	mov	x21, x1
  4116e0:	bl	402710 <mbrtowc@plt>
  4116e4:	cmp	x20, #0x0
  4116e8:	mov	x20, x0
  4116ec:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  4116f0:	b.hi	411708 <ferror@plt+0xe8c8>  // b.pmore
  4116f4:	mov	x0, x20
  4116f8:	ldp	x19, x20, [sp, #16]
  4116fc:	ldr	x21, [sp, #32]
  411700:	ldp	x29, x30, [sp], #64
  411704:	ret
  411708:	mov	w0, #0x0                   	// #0
  41170c:	bl	40b3a8 <ferror@plt+0x8568>
  411710:	tst	w0, #0xff
  411714:	b.ne	4116f4 <ferror@plt+0xe8b4>  // b.any
  411718:	ldrb	w0, [x21]
  41171c:	mov	x20, #0x1                   	// #1
  411720:	str	w0, [x19]
  411724:	mov	x0, x20
  411728:	ldp	x19, x20, [sp, #16]
  41172c:	ldr	x21, [sp, #32]
  411730:	ldp	x29, x30, [sp], #64
  411734:	ret
  411738:	stp	x29, x30, [sp, #-64]!
  41173c:	mov	x2, #0xc9ff                	// #51711
  411740:	movk	x2, #0x3b9a, lsl #16
  411744:	mov	x29, sp
  411748:	stp	x21, x22, [sp, #32]
  41174c:	mov	x21, x1
  411750:	ldr	x1, [x0, #8]
  411754:	cmp	x1, x2
  411758:	b.hi	4117f4 <ferror@plt+0xe9b4>  // b.pmore
  41175c:	stp	x19, x20, [sp, #16]
  411760:	mov	x19, #0xa400                	// #41984
  411764:	movk	x19, #0x1f, lsl #16
  411768:	ldr	x20, [x0]
  41176c:	str	x1, [sp, #56]
  411770:	add	x22, sp, #0x30
  411774:	cmp	x20, x19
  411778:	b.gt	41178c <ferror@plt+0xe94c>
  41177c:	b	4117c4 <ferror@plt+0xe984>
  411780:	str	xzr, [sp, #56]
  411784:	cmp	x20, x19
  411788:	b.le	4117c4 <ferror@plt+0xe984>
  41178c:	mov	x1, x21
  411790:	mov	x0, x22
  411794:	sub	x20, x20, x19
  411798:	str	x19, [sp, #48]
  41179c:	bl	402be0 <nanosleep@plt>
  4117a0:	cbz	w0, 411780 <ferror@plt+0xe940>
  4117a4:	cbz	x21, 4117e4 <ferror@plt+0xe9a4>
  4117a8:	ldr	x1, [x21]
  4117ac:	add	x20, x1, x20
  4117b0:	str	x20, [x21]
  4117b4:	ldp	x19, x20, [sp, #16]
  4117b8:	ldp	x21, x22, [sp, #32]
  4117bc:	ldp	x29, x30, [sp], #64
  4117c0:	ret
  4117c4:	mov	x1, x21
  4117c8:	mov	x0, x22
  4117cc:	str	x20, [sp, #48]
  4117d0:	bl	402be0 <nanosleep@plt>
  4117d4:	ldp	x19, x20, [sp, #16]
  4117d8:	ldp	x21, x22, [sp, #32]
  4117dc:	ldp	x29, x30, [sp], #64
  4117e0:	ret
  4117e4:	ldp	x19, x20, [sp, #16]
  4117e8:	ldp	x21, x22, [sp, #32]
  4117ec:	ldp	x29, x30, [sp], #64
  4117f0:	ret
  4117f4:	bl	402db0 <__errno_location@plt>
  4117f8:	mov	x1, x0
  4117fc:	mov	w2, #0x16                  	// #22
  411800:	mov	w0, #0xffffffff            	// #-1
  411804:	str	w2, [x1]
  411808:	b	4117d8 <ferror@plt+0xe998>
  41180c:	nop
  411810:	stp	x29, x30, [sp, #-32]!
  411814:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  411818:	mov	w2, #0x5                   	// #5
  41181c:	mov	x29, sp
  411820:	str	x19, [sp, #16]
  411824:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  411828:	ldr	x19, [x0, #1320]
  41182c:	add	x1, x1, #0x2a8
  411830:	mov	x0, #0x0                   	// #0
  411834:	bl	402d20 <dcgettext@plt>
  411838:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2498>
  41183c:	mov	x3, x0
  411840:	add	x2, x2, #0xf70
  411844:	mov	x0, x19
  411848:	mov	w1, #0x1                   	// #1
  41184c:	bl	402b30 <__fprintf_chk@plt>
  411850:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  411854:	ldr	w0, [x0, #1208]
  411858:	bl	402790 <exit@plt>
  41185c:	nop
  411860:	mov	x2, x0
  411864:	mov	x0, x1
  411868:	ldrb	w4, [x2, #80]
  41186c:	ldr	x3, [x2, #56]
  411870:	tbz	w4, #0, 411880 <ferror@plt+0xea40>
  411874:	ldr	x0, [x2, #72]
  411878:	mov	x16, x3
  41187c:	br	x16
  411880:	mov	x16, x3
  411884:	br	x16
  411888:	mov	x2, x0
  41188c:	mov	x0, x1
  411890:	ldrb	w4, [x2, #80]
  411894:	ldr	x3, [x2, #64]
  411898:	tbz	w4, #0, 4118a8 <ferror@plt+0xea68>
  41189c:	ldr	x0, [x2, #72]
  4118a0:	mov	x16, x3
  4118a4:	br	x16
  4118a8:	mov	x16, x3
  4118ac:	br	x16
  4118b0:	stp	x29, x30, [sp, #-48]!
  4118b4:	mov	x29, sp
  4118b8:	stp	x19, x20, [sp, #16]
  4118bc:	mov	x19, x0
  4118c0:	str	x21, [sp, #32]
  4118c4:	cbz	x2, 411940 <ferror@plt+0xeb00>
  4118c8:	mov	x20, x2
  4118cc:	sub	x21, x2, #0x1
  4118d0:	cmp	x1, #0x0
  4118d4:	mov	x0, #0xfe0                 	// #4064
  4118d8:	csel	x1, x1, x0, ne  // ne = any
  4118dc:	str	x1, [x19]
  4118e0:	str	x21, [x19, #48]
  4118e4:	mov	x0, x19
  4118e8:	bl	411860 <ferror@plt+0xea20>
  4118ec:	str	x0, [x19, #8]
  4118f0:	mov	x1, x0
  4118f4:	cbz	x0, 41194c <ferror@plt+0xeb0c>
  4118f8:	add	x2, x0, #0x10
  4118fc:	neg	x20, x20
  411900:	ldr	x0, [x19]
  411904:	add	x2, x2, x21
  411908:	and	x20, x2, x20
  41190c:	ldr	x21, [sp, #32]
  411910:	stp	x20, x20, [x19, #16]
  411914:	add	x2, x1, x0
  411918:	str	x2, [x1]
  41191c:	mov	w0, #0x1                   	// #1
  411920:	str	x2, [x19, #32]
  411924:	ldrb	w2, [x19, #80]
  411928:	str	xzr, [x1, #8]
  41192c:	and	w1, w2, #0xfffffff9
  411930:	strb	w1, [x19, #80]
  411934:	ldp	x19, x20, [sp, #16]
  411938:	ldp	x29, x30, [sp], #48
  41193c:	ret
  411940:	mov	x21, #0xf                   	// #15
  411944:	mov	x20, #0x10                  	// #16
  411948:	b	4118d0 <ferror@plt+0xea90>
  41194c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  411950:	ldr	x0, [x0, #1304]
  411954:	blr	x0

0000000000411958 <_obstack_begin@@Base>:
  411958:	ldrb	w6, [x0, #80]
  41195c:	stp	x3, x4, [x0, #56]
  411960:	and	w6, w6, #0xfffffffe
  411964:	strb	w6, [x0, #80]
  411968:	b	4118b0 <ferror@plt+0xea70>
  41196c:	nop

0000000000411970 <_obstack_begin_1@@Base>:
  411970:	ldrb	w7, [x0, #80]
  411974:	stp	x3, x4, [x0, #56]
  411978:	orr	w7, w7, #0x1
  41197c:	str	x5, [x0, #72]
  411980:	strb	w7, [x0, #80]
  411984:	b	4118b0 <ferror@plt+0xea70>

0000000000411988 <_obstack_newchunk@@Base>:
  411988:	stp	x29, x30, [sp, #-64]!
  41198c:	mov	x29, sp
  411990:	stp	x21, x22, [sp, #32]
  411994:	ldp	x2, x21, [x0, #16]
  411998:	stp	x19, x20, [sp, #16]
  41199c:	ldr	x4, [x0, #48]
  4119a0:	ldr	x3, [x0]
  4119a4:	sub	x21, x21, x2
  4119a8:	adds	x1, x21, x1
  4119ac:	str	x23, [sp, #48]
  4119b0:	cset	x2, cs  // cs = hs, nlast
  4119b4:	lsr	x20, x21, #3
  4119b8:	adds	x4, x4, x1
  4119bc:	add	x20, x20, #0x64
  4119c0:	cset	x1, cs  // cs = hs, nlast
  4119c4:	cmp	x3, x4
  4119c8:	csel	x3, x3, x4, cs  // cs = hs, nlast
  4119cc:	add	x4, x20, x4
  4119d0:	cmp	x3, x4
  4119d4:	csel	x20, x3, x4, cs  // cs = hs, nlast
  4119d8:	cmp	x2, #0x0
  4119dc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  4119e0:	ldr	x23, [x0, #8]
  4119e4:	b.ne	411a90 <_obstack_newchunk@@Base+0x108>  // b.any
  4119e8:	mov	x19, x0
  4119ec:	mov	x1, x20
  4119f0:	bl	411860 <ferror@plt+0xea20>
  4119f4:	mov	x22, x0
  4119f8:	cbz	x0, 411a90 <_obstack_newchunk@@Base+0x108>
  4119fc:	str	x0, [x19, #8]
  411a00:	add	x3, x0, x20
  411a04:	ldr	x1, [x19, #16]
  411a08:	mov	x2, x21
  411a0c:	ldr	x20, [x19, #48]
  411a10:	str	x23, [x0, #8]
  411a14:	str	x3, [x19, #32]
  411a18:	str	x3, [x0], #16
  411a1c:	add	x0, x0, x20
  411a20:	bic	x20, x0, x20
  411a24:	mov	x0, x20
  411a28:	bl	402720 <memcpy@plt>
  411a2c:	ldrb	w0, [x19, #80]
  411a30:	tbnz	w0, #1, 411a50 <_obstack_newchunk@@Base+0xc8>
  411a34:	ldr	x1, [x19, #48]
  411a38:	add	x0, x23, #0x10
  411a3c:	ldr	x2, [x19, #16]
  411a40:	add	x0, x0, x1
  411a44:	bic	x0, x0, x1
  411a48:	cmp	x2, x0
  411a4c:	b.eq	411a78 <_obstack_newchunk@@Base+0xf0>  // b.none
  411a50:	ldrb	w0, [x19, #80]
  411a54:	add	x21, x20, x21
  411a58:	ldr	x23, [sp, #48]
  411a5c:	and	w0, w0, #0xfffffffd
  411a60:	stp	x20, x21, [x19, #16]
  411a64:	strb	w0, [x19, #80]
  411a68:	ldp	x19, x20, [sp, #16]
  411a6c:	ldp	x21, x22, [sp, #32]
  411a70:	ldp	x29, x30, [sp], #64
  411a74:	ret
  411a78:	ldr	x0, [x23, #8]
  411a7c:	str	x0, [x22, #8]
  411a80:	mov	x1, x23
  411a84:	mov	x0, x19
  411a88:	bl	411888 <ferror@plt+0xea48>
  411a8c:	b	411a50 <_obstack_newchunk@@Base+0xc8>
  411a90:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x17498>
  411a94:	ldr	x0, [x0, #1304]
  411a98:	blr	x0
  411a9c:	nop

0000000000411aa0 <_obstack_allocated_p@@Base>:
  411aa0:	ldr	x0, [x0, #8]
  411aa4:	cbz	x0, 411ac8 <_obstack_allocated_p@@Base+0x28>
  411aa8:	cmp	x1, x0
  411aac:	b.ls	411abc <_obstack_allocated_p@@Base+0x1c>  // b.plast
  411ab0:	ldr	x2, [x0]
  411ab4:	cmp	x2, x1
  411ab8:	b.cs	411acc <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  411abc:	ldr	x0, [x0, #8]
  411ac0:	cbnz	x0, 411aa8 <_obstack_allocated_p@@Base+0x8>
  411ac4:	mov	w0, #0x0                   	// #0
  411ac8:	ret
  411acc:	mov	w0, #0x1                   	// #1
  411ad0:	ret
  411ad4:	nop

0000000000411ad8 <_obstack_free@@Base>:
  411ad8:	stp	x29, x30, [sp, #-48]!
  411adc:	mov	x29, sp
  411ae0:	str	x21, [sp, #32]
  411ae4:	mov	x21, x1
  411ae8:	ldr	x1, [x0, #8]
  411aec:	cbz	x1, 411b34 <_obstack_free@@Base+0x5c>
  411af0:	stp	x19, x20, [sp, #16]
  411af4:	mov	x20, x0
  411af8:	b	411b00 <_obstack_free@@Base+0x28>
  411afc:	mov	x1, x19
  411b00:	cmp	x1, x21
  411b04:	b.cs	411b14 <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  411b08:	ldr	x0, [x1]
  411b0c:	cmp	x0, x21
  411b10:	b.cs	411b44 <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  411b14:	mov	x0, x20
  411b18:	ldr	x19, [x1, #8]
  411b1c:	bl	411888 <ferror@plt+0xea48>
  411b20:	ldrb	w2, [x20, #80]
  411b24:	orr	w2, w2, #0x2
  411b28:	strb	w2, [x20, #80]
  411b2c:	cbnz	x19, 411afc <_obstack_free@@Base+0x24>
  411b30:	ldp	x19, x20, [sp, #16]
  411b34:	cbnz	x21, 411b5c <_obstack_free@@Base+0x84>
  411b38:	ldr	x21, [sp, #32]
  411b3c:	ldp	x29, x30, [sp], #48
  411b40:	ret
  411b44:	stp	x1, x21, [x20, #8]
  411b48:	stp	x21, x0, [x20, #24]
  411b4c:	ldp	x19, x20, [sp, #16]
  411b50:	ldr	x21, [sp, #32]
  411b54:	ldp	x29, x30, [sp], #48
  411b58:	ret
  411b5c:	stp	x19, x20, [sp, #16]
  411b60:	bl	402a80 <abort@plt>
  411b64:	nop

0000000000411b68 <_obstack_memory_used@@Base>:
  411b68:	ldr	x1, [x0, #8]
  411b6c:	mov	x0, #0x0                   	// #0
  411b70:	cbz	x1, 411b8c <_obstack_memory_used@@Base+0x24>
  411b74:	nop
  411b78:	ldr	x2, [x1]
  411b7c:	sub	x2, x2, x1
  411b80:	ldr	x1, [x1, #8]
  411b84:	add	x0, x0, x2
  411b88:	cbnz	x1, 411b78 <_obstack_memory_used@@Base+0x10>
  411b8c:	ret
  411b90:	stp	x29, x30, [sp, #-32]!
  411b94:	mov	x29, sp
  411b98:	stp	x19, x20, [sp, #16]
  411b9c:	mov	x19, x0
  411ba0:	bl	402860 <__fpending@plt>
  411ba4:	mov	x20, x0
  411ba8:	mov	x0, x19
  411bac:	ldr	w19, [x19]
  411bb0:	and	w19, w19, #0x20
  411bb4:	bl	4112f0 <ferror@plt+0xe4b0>
  411bb8:	cbnz	w19, 411be0 <_obstack_memory_used@@Base+0x78>
  411bbc:	cbz	w0, 411bd4 <_obstack_memory_used@@Base+0x6c>
  411bc0:	cbnz	x20, 411bf8 <_obstack_memory_used@@Base+0x90>
  411bc4:	bl	402db0 <__errno_location@plt>
  411bc8:	ldr	w0, [x0]
  411bcc:	cmp	w0, #0x9
  411bd0:	csetm	w0, ne  // ne = any
  411bd4:	ldp	x19, x20, [sp, #16]
  411bd8:	ldp	x29, x30, [sp], #32
  411bdc:	ret
  411be0:	cbnz	w0, 411bf8 <_obstack_memory_used@@Base+0x90>
  411be4:	bl	402db0 <__errno_location@plt>
  411be8:	mov	x1, x0
  411bec:	mov	w0, #0xffffffff            	// #-1
  411bf0:	str	wzr, [x1]
  411bf4:	b	411bd4 <_obstack_memory_used@@Base+0x6c>
  411bf8:	mov	w0, #0xffffffff            	// #-1
  411bfc:	b	411bd4 <_obstack_memory_used@@Base+0x6c>
  411c00:	mov	x0, #0xc3e0000000000000    	// #-4332462841530417152
  411c04:	fmov	d1, x0
  411c08:	mov	x1, #0x0                   	// #0
  411c0c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  411c10:	fcmpe	d0, d1
  411c14:	b.le	411c34 <_obstack_memory_used@@Base+0xcc>
  411c18:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
  411c1c:	fmov	d1, x0
  411c20:	fcmpe	d0, d1
  411c24:	b.mi	411c38 <_obstack_memory_used@@Base+0xd0>  // b.first
  411c28:	mov	x1, #0xc9ff                	// #51711
  411c2c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  411c30:	movk	x1, #0x3b9a, lsl #16
  411c34:	ret
  411c38:	fcvtzs	d1, d0
  411c3c:	mov	x0, #0xcd6500000000        	// #225833675390976
  411c40:	movk	x0, #0x41cd, lsl #48
  411c44:	fmov	d2, x0
  411c48:	mov	x1, #0x94b3                	// #38067
  411c4c:	mov	x3, #0xca00                	// #51712
  411c50:	movk	x1, #0x26d6, lsl #16
  411c54:	movk	x3, #0x3b9a, lsl #16
  411c58:	scvtf	d3, d1
  411c5c:	movk	x1, #0xbe8, lsl #32
  411c60:	movk	x1, #0x112e, lsl #48
  411c64:	fmov	x0, d1
  411c68:	fsub	d0, d0, d3
  411c6c:	fmul	d0, d0, d2
  411c70:	fcvtzs	x2, d0
  411c74:	scvtf	d2, x2
  411c78:	fcmpe	d2, d0
  411c7c:	cinc	x2, x2, mi  // mi = first
  411c80:	smulh	x1, x2, x1
  411c84:	asr	x1, x1, #26
  411c88:	sub	x1, x1, x2, asr #63
  411c8c:	add	x0, x1, x0
  411c90:	msub	x1, x1, x3, x2
  411c94:	tbz	x1, #63, 411c34 <_obstack_memory_used@@Base+0xcc>
  411c98:	sub	x0, x0, #0x1
  411c9c:	add	x1, x1, x3
  411ca0:	ret
  411ca4:	nop
  411ca8:	stp	x29, x30, [sp, #-48]!
  411cac:	cmp	w0, #0x2
  411cb0:	mov	x29, sp
  411cb4:	stp	x19, x20, [sp, #16]
  411cb8:	mov	w19, w0
  411cbc:	b.ls	411cd0 <_obstack_memory_used@@Base+0x168>  // b.plast
  411cc0:	mov	w0, w19
  411cc4:	ldp	x19, x20, [sp, #16]
  411cc8:	ldp	x29, x30, [sp], #48
  411ccc:	ret
  411cd0:	str	x21, [sp, #32]
  411cd4:	bl	411d10 <_obstack_memory_used@@Base+0x1a8>
  411cd8:	mov	w21, w0
  411cdc:	bl	402db0 <__errno_location@plt>
  411ce0:	mov	x20, x0
  411ce4:	mov	w0, w19
  411ce8:	mov	w19, w21
  411cec:	ldr	w21, [x20]
  411cf0:	bl	402a10 <close@plt>
  411cf4:	str	w21, [x20]
  411cf8:	mov	w0, w19
  411cfc:	ldp	x19, x20, [sp, #16]
  411d00:	ldr	x21, [sp, #32]
  411d04:	ldp	x29, x30, [sp], #48
  411d08:	ret
  411d0c:	nop
  411d10:	ands	w1, w1, #0x80000
  411d14:	mov	w3, #0x406                 	// #1030
  411d18:	mov	w2, #0x3                   	// #3
  411d1c:	csel	w1, w1, w3, eq  // eq = none
  411d20:	b	411380 <ferror@plt+0xe540>
  411d24:	nop
  411d28:	stp	x29, x30, [sp, #-48]!
  411d2c:	mov	x29, sp
  411d30:	stp	x19, x20, [sp, #16]
  411d34:	mov	x20, x1
  411d38:	bl	4028d0 <fopen@plt>
  411d3c:	mov	x19, x0
  411d40:	cbz	x0, 411d50 <_obstack_memory_used@@Base+0x1e8>
  411d44:	bl	402880 <fileno@plt>
  411d48:	cmp	w0, #0x2
  411d4c:	b.ls	411d60 <_obstack_memory_used@@Base+0x1f8>  // b.plast
  411d50:	mov	x0, x19
  411d54:	ldp	x19, x20, [sp, #16]
  411d58:	ldp	x29, x30, [sp], #48
  411d5c:	ret
  411d60:	str	x21, [sp, #32]
  411d64:	bl	412028 <_obstack_memory_used@@Base+0x4c0>
  411d68:	mov	w21, w0
  411d6c:	tbnz	w0, #31, 411dc8 <_obstack_memory_used@@Base+0x260>
  411d70:	mov	x0, x19
  411d74:	bl	4112f0 <ferror@plt+0xe4b0>
  411d78:	cbnz	w0, 411da4 <_obstack_memory_used@@Base+0x23c>
  411d7c:	mov	x1, x20
  411d80:	mov	w0, w21
  411d84:	bl	4029a0 <fdopen@plt>
  411d88:	mov	x19, x0
  411d8c:	cbz	x0, 411da4 <_obstack_memory_used@@Base+0x23c>
  411d90:	mov	x0, x19
  411d94:	ldp	x19, x20, [sp, #16]
  411d98:	ldr	x21, [sp, #32]
  411d9c:	ldp	x29, x30, [sp], #48
  411da0:	ret
  411da4:	bl	402db0 <__errno_location@plt>
  411da8:	mov	x20, x0
  411dac:	mov	w0, w21
  411db0:	mov	x19, #0x0                   	// #0
  411db4:	ldr	w21, [x20]
  411db8:	bl	402a10 <close@plt>
  411dbc:	str	w21, [x20]
  411dc0:	ldr	x21, [sp, #32]
  411dc4:	b	411d50 <_obstack_memory_used@@Base+0x1e8>
  411dc8:	bl	402db0 <__errno_location@plt>
  411dcc:	mov	x20, x0
  411dd0:	mov	x0, x19
  411dd4:	mov	x19, #0x0                   	// #0
  411dd8:	ldr	w21, [x20]
  411ddc:	bl	4112f0 <ferror@plt+0xe4b0>
  411de0:	str	w21, [x20]
  411de4:	ldr	x21, [sp, #32]
  411de8:	b	411d50 <_obstack_memory_used@@Base+0x1e8>
  411dec:	nop
  411df0:	stp	x29, x30, [sp, #-16]!
  411df4:	mov	w0, #0xe                   	// #14
  411df8:	mov	x29, sp
  411dfc:	bl	4028c0 <nl_langinfo@plt>
  411e00:	cbz	x0, 411e20 <_obstack_memory_used@@Base+0x2b8>
  411e04:	ldrb	w2, [x0]
  411e08:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x3498>
  411e0c:	add	x1, x1, #0x420
  411e10:	cmp	w2, #0x0
  411e14:	csel	x0, x1, x0, eq  // eq = none
  411e18:	ldp	x29, x30, [sp], #16
  411e1c:	ret
  411e20:	ldp	x29, x30, [sp], #16
  411e24:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x3498>
  411e28:	add	x0, x0, #0x420
  411e2c:	ret
  411e30:	stp	x29, x30, [sp, #-64]!
  411e34:	mov	x29, sp
  411e38:	stp	x19, x20, [sp, #16]
  411e3c:	mov	x20, x0
  411e40:	stp	x21, x22, [sp, #32]
  411e44:	mov	x21, x2
  411e48:	mov	x22, x3
  411e4c:	stp	x23, x24, [sp, #48]
  411e50:	mov	x23, x1
  411e54:	bl	402db0 <__errno_location@plt>
  411e58:	mov	x24, x0
  411e5c:	b	411e8c <_obstack_memory_used@@Base+0x324>
  411e60:	bl	402780 <strlen@plt>
  411e64:	add	x19, x0, #0x1
  411e68:	mov	x0, x21
  411e6c:	bl	402780 <strlen@plt>
  411e70:	add	x0, x0, #0x1
  411e74:	add	x20, x20, x19
  411e78:	subs	x23, x23, x19
  411e7c:	add	x21, x21, x0
  411e80:	sub	x22, x22, x0
  411e84:	b.eq	411ec0 <_obstack_memory_used@@Base+0x358>  // b.none
  411e88:	cbz	x22, 411ee0 <_obstack_memory_used@@Base+0x378>
  411e8c:	str	wzr, [x24]
  411e90:	mov	x1, x21
  411e94:	mov	x0, x20
  411e98:	bl	402d40 <strcoll@plt>
  411e9c:	mov	w2, w0
  411ea0:	mov	x0, x20
  411ea4:	cbz	w2, 411e60 <_obstack_memory_used@@Base+0x2f8>
  411ea8:	mov	w0, w2
  411eac:	ldp	x19, x20, [sp, #16]
  411eb0:	ldp	x21, x22, [sp, #32]
  411eb4:	ldp	x23, x24, [sp, #48]
  411eb8:	ldp	x29, x30, [sp], #64
  411ebc:	ret
  411ec0:	cmp	x22, #0x0
  411ec4:	csetm	w2, ne  // ne = any
  411ec8:	mov	w0, w2
  411ecc:	ldp	x19, x20, [sp, #16]
  411ed0:	ldp	x21, x22, [sp, #32]
  411ed4:	ldp	x23, x24, [sp, #48]
  411ed8:	ldp	x29, x30, [sp], #64
  411edc:	ret
  411ee0:	mov	w2, #0x1                   	// #1
  411ee4:	mov	w0, w2
  411ee8:	ldp	x19, x20, [sp, #16]
  411eec:	ldp	x21, x22, [sp, #32]
  411ef0:	ldp	x23, x24, [sp, #48]
  411ef4:	ldp	x29, x30, [sp], #64
  411ef8:	ret
  411efc:	nop
  411f00:	stp	x29, x30, [sp, #-80]!
  411f04:	cmp	x1, x3
  411f08:	mov	x29, sp
  411f0c:	stp	x19, x20, [sp, #16]
  411f10:	mov	x19, x1
  411f14:	mov	x20, x3
  411f18:	stp	x21, x22, [sp, #32]
  411f1c:	mov	x21, x2
  411f20:	mov	x22, x0
  411f24:	stp	x23, x24, [sp, #48]
  411f28:	b.ne	411f40 <_obstack_memory_used@@Base+0x3d8>  // b.any
  411f2c:	mov	x2, x1
  411f30:	mov	x1, x21
  411f34:	bl	402b00 <memcmp@plt>
  411f38:	mov	w23, w0
  411f3c:	cbz	w0, 411f90 <_obstack_memory_used@@Base+0x428>
  411f40:	str	x25, [sp, #64]
  411f44:	add	x3, x20, #0x1
  411f48:	mov	x2, x21
  411f4c:	add	x1, x19, #0x1
  411f50:	ldrb	w25, [x22, x19]
  411f54:	mov	x0, x22
  411f58:	ldrb	w24, [x21, x20]
  411f5c:	strb	wzr, [x22, x19]
  411f60:	strb	wzr, [x21, x20]
  411f64:	bl	411e30 <_obstack_memory_used@@Base+0x2c8>
  411f68:	strb	w25, [x22, x19]
  411f6c:	strb	w24, [x21, x20]
  411f70:	mov	w23, w0
  411f74:	mov	w0, w23
  411f78:	ldp	x19, x20, [sp, #16]
  411f7c:	ldp	x21, x22, [sp, #32]
  411f80:	ldp	x23, x24, [sp, #48]
  411f84:	ldr	x25, [sp, #64]
  411f88:	ldp	x29, x30, [sp], #80
  411f8c:	ret
  411f90:	bl	402db0 <__errno_location@plt>
  411f94:	str	wzr, [x0]
  411f98:	mov	w0, w23
  411f9c:	ldp	x19, x20, [sp, #16]
  411fa0:	ldp	x21, x22, [sp, #32]
  411fa4:	ldp	x23, x24, [sp, #48]
  411fa8:	ldp	x29, x30, [sp], #80
  411fac:	ret
  411fb0:	stp	x29, x30, [sp, #-48]!
  411fb4:	cmp	x1, x3
  411fb8:	mov	x29, sp
  411fbc:	stp	x19, x20, [sp, #16]
  411fc0:	mov	x19, x1
  411fc4:	mov	x20, x3
  411fc8:	stp	x21, x22, [sp, #32]
  411fcc:	mov	x21, x2
  411fd0:	mov	x22, x0
  411fd4:	b.ne	412004 <_obstack_memory_used@@Base+0x49c>  // b.any
  411fd8:	mov	x2, x1
  411fdc:	mov	x1, x21
  411fe0:	bl	402b00 <memcmp@plt>
  411fe4:	cbnz	w0, 412004 <_obstack_memory_used@@Base+0x49c>
  411fe8:	bl	402db0 <__errno_location@plt>
  411fec:	ldp	x19, x20, [sp, #16]
  411ff0:	ldp	x21, x22, [sp, #32]
  411ff4:	str	wzr, [x0]
  411ff8:	mov	w0, #0x0                   	// #0
  411ffc:	ldp	x29, x30, [sp], #48
  412000:	ret
  412004:	mov	x3, x20
  412008:	mov	x2, x21
  41200c:	mov	x1, x19
  412010:	mov	x0, x22
  412014:	ldp	x19, x20, [sp, #16]
  412018:	ldp	x21, x22, [sp, #32]
  41201c:	ldp	x29, x30, [sp], #48
  412020:	b	411e30 <_obstack_memory_used@@Base+0x2c8>
  412024:	nop
  412028:	mov	w2, #0x3                   	// #3
  41202c:	mov	w1, #0x0                   	// #0
  412030:	b	411380 <ferror@plt+0xe540>
  412034:	nop
  412038:	stp	x29, x30, [sp, #-48]!
  41203c:	mov	x29, sp
  412040:	str	q0, [sp, #16]
  412044:	str	q1, [sp, #32]
  412048:	ldp	x6, x1, [sp, #16]
  41204c:	ldp	x7, x0, [sp, #32]
  412050:	mrs	x2, fpcr
  412054:	ubfx	x4, x1, #48, #15
  412058:	lsr	x2, x1, #63
  41205c:	lsr	x3, x0, #63
  412060:	ubfx	x9, x0, #0, #48
  412064:	mov	x5, #0x7fff                	// #32767
  412068:	mov	x10, x6
  41206c:	cmp	x4, x5
  412070:	and	w2, w2, #0xff
  412074:	ubfx	x1, x1, #0, #48
  412078:	and	w3, w3, #0xff
  41207c:	ubfx	x0, x0, #48, #15
  412080:	b.eq	4120b4 <_obstack_memory_used@@Base+0x54c>  // b.none
  412084:	cmp	x0, x5
  412088:	b.eq	4120a0 <_obstack_memory_used@@Base+0x538>  // b.none
  41208c:	cmp	x4, x0
  412090:	mov	w0, #0x1                   	// #1
  412094:	b.eq	4120cc <_obstack_memory_used@@Base+0x564>  // b.none
  412098:	ldp	x29, x30, [sp], #48
  41209c:	ret
  4120a0:	orr	x8, x9, x7
  4120a4:	cbnz	x8, 412130 <_obstack_memory_used@@Base+0x5c8>
  4120a8:	mov	w0, #0x1                   	// #1
  4120ac:	ldp	x29, x30, [sp], #48
  4120b0:	ret
  4120b4:	orr	x5, x1, x6
  4120b8:	cbnz	x5, 412100 <_obstack_memory_used@@Base+0x598>
  4120bc:	cmp	x0, x4
  4120c0:	b.ne	4120a8 <_obstack_memory_used@@Base+0x540>  // b.any
  4120c4:	orr	x8, x9, x7
  4120c8:	cbnz	x8, 412130 <_obstack_memory_used@@Base+0x5c8>
  4120cc:	cmp	x1, x9
  4120d0:	mov	w0, #0x1                   	// #1
  4120d4:	ccmp	x6, x7, #0x0, eq  // eq = none
  4120d8:	b.ne	412098 <_obstack_memory_used@@Base+0x530>  // b.any
  4120dc:	cmp	w2, w3
  4120e0:	mov	w0, #0x0                   	// #0
  4120e4:	b.eq	412098 <_obstack_memory_used@@Base+0x530>  // b.none
  4120e8:	mov	w0, #0x1                   	// #1
  4120ec:	cbnz	x4, 412098 <_obstack_memory_used@@Base+0x530>
  4120f0:	orr	x1, x1, x10
  4120f4:	cmp	x1, #0x0
  4120f8:	cset	w0, ne  // ne = any
  4120fc:	b	412098 <_obstack_memory_used@@Base+0x530>
  412100:	tst	x1, #0x800000000000
  412104:	b.ne	41211c <_obstack_memory_used@@Base+0x5b4>  // b.any
  412108:	mov	w0, #0x1                   	// #1
  41210c:	bl	4123c8 <_obstack_memory_used@@Base+0x860>
  412110:	mov	w0, #0x1                   	// #1
  412114:	ldp	x29, x30, [sp], #48
  412118:	ret
  41211c:	cmp	x0, x4
  412120:	mov	w0, #0x1                   	// #1
  412124:	b.ne	412098 <_obstack_memory_used@@Base+0x530>  // b.any
  412128:	orr	x8, x9, x7
  41212c:	cbz	x8, 412098 <_obstack_memory_used@@Base+0x530>
  412130:	tst	x9, #0x800000000000
  412134:	b.eq	412108 <_obstack_memory_used@@Base+0x5a0>  // b.none
  412138:	b	4120a8 <_obstack_memory_used@@Base+0x540>
  41213c:	nop
  412140:	stp	x29, x30, [sp, #-48]!
  412144:	mov	x29, sp
  412148:	str	q0, [sp, #16]
  41214c:	str	q1, [sp, #32]
  412150:	ldp	x8, x1, [sp, #16]
  412154:	ldp	x9, x0, [sp, #32]
  412158:	mrs	x2, fpcr
  41215c:	ubfx	x4, x1, #48, #15
  412160:	ubfx	x10, x1, #0, #48
  412164:	lsr	x2, x1, #63
  412168:	mov	x7, #0x7fff                	// #32767
  41216c:	mov	x5, x8
  412170:	cmp	x4, x7
  412174:	ubfx	x11, x0, #0, #48
  412178:	ubfx	x6, x0, #48, #15
  41217c:	lsr	x1, x0, #63
  412180:	mov	x3, x9
  412184:	b.eq	4121c0 <_obstack_memory_used@@Base+0x658>  // b.none
  412188:	cmp	x6, x7
  41218c:	b.eq	4121d0 <_obstack_memory_used@@Base+0x668>  // b.none
  412190:	cbnz	x4, 4121f8 <_obstack_memory_used@@Base+0x690>
  412194:	orr	x5, x10, x8
  412198:	cmp	x5, #0x0
  41219c:	cset	w0, eq  // eq = none
  4121a0:	cbnz	x6, 4121ac <_obstack_memory_used@@Base+0x644>
  4121a4:	orr	x3, x11, x9
  4121a8:	cbz	x3, 412218 <_obstack_memory_used@@Base+0x6b0>
  4121ac:	cbz	w0, 4121dc <_obstack_memory_used@@Base+0x674>
  4121b0:	cmp	x1, #0x0
  4121b4:	csinv	w0, w0, wzr, ne  // ne = any
  4121b8:	ldp	x29, x30, [sp], #48
  4121bc:	ret
  4121c0:	orr	x0, x10, x8
  4121c4:	cbnz	x0, 412224 <_obstack_memory_used@@Base+0x6bc>
  4121c8:	cmp	x6, x4
  4121cc:	b.ne	4121f8 <_obstack_memory_used@@Base+0x690>  // b.any
  4121d0:	orr	x3, x11, x3
  4121d4:	cbnz	x3, 412224 <_obstack_memory_used@@Base+0x6bc>
  4121d8:	cbz	x4, 412208 <_obstack_memory_used@@Base+0x6a0>
  4121dc:	cmp	x2, x1
  4121e0:	b.eq	412238 <_obstack_memory_used@@Base+0x6d0>  // b.none
  4121e4:	cmp	x2, #0x0
  4121e8:	mov	w0, #0xffffffff            	// #-1
  4121ec:	cneg	w0, w0, eq  // eq = none
  4121f0:	ldp	x29, x30, [sp], #48
  4121f4:	ret
  4121f8:	cbnz	x6, 4121dc <_obstack_memory_used@@Base+0x674>
  4121fc:	orr	x3, x11, x3
  412200:	cbnz	x3, 4121dc <_obstack_memory_used@@Base+0x674>
  412204:	b	4121e4 <_obstack_memory_used@@Base+0x67c>
  412208:	orr	x5, x10, x5
  41220c:	cmp	x5, #0x0
  412210:	cset	w0, eq  // eq = none
  412214:	b	4121ac <_obstack_memory_used@@Base+0x644>
  412218:	mov	w0, #0x0                   	// #0
  41221c:	cbz	x5, 4121b8 <_obstack_memory_used@@Base+0x650>
  412220:	b	4121e4 <_obstack_memory_used@@Base+0x67c>
  412224:	mov	w0, #0x1                   	// #1
  412228:	bl	4123c8 <_obstack_memory_used@@Base+0x860>
  41222c:	mov	w0, #0xfffffffe            	// #-2
  412230:	ldp	x29, x30, [sp], #48
  412234:	ret
  412238:	cmp	x4, x6
  41223c:	b.gt	4121e4 <_obstack_memory_used@@Base+0x67c>
  412240:	b.lt	412278 <_obstack_memory_used@@Base+0x710>  // b.tstop
  412244:	cmp	x10, x11
  412248:	b.hi	4121e4 <_obstack_memory_used@@Base+0x67c>  // b.pmore
  41224c:	cset	w0, eq  // eq = none
  412250:	cmp	w0, #0x0
  412254:	ccmp	x8, x9, #0x0, ne  // ne = any
  412258:	b.hi	4121e4 <_obstack_memory_used@@Base+0x67c>  // b.pmore
  41225c:	cmp	x10, x11
  412260:	b.cc	412278 <_obstack_memory_used@@Base+0x710>  // b.lo, b.ul, b.last
  412264:	cmp	w0, #0x0
  412268:	mov	w0, #0x0                   	// #0
  41226c:	ccmp	x8, x9, #0x2, ne  // ne = any
  412270:	b.cs	4121b8 <_obstack_memory_used@@Base+0x650>  // b.hs, b.nlast
  412274:	nop
  412278:	cmp	x2, #0x0
  41227c:	mov	w0, #0x1                   	// #1
  412280:	cneg	w0, w0, eq  // eq = none
  412284:	b	4121b8 <_obstack_memory_used@@Base+0x650>
  412288:	stp	x29, x30, [sp, #-48]!
  41228c:	mov	x29, sp
  412290:	str	q0, [sp, #16]
  412294:	str	q1, [sp, #32]
  412298:	ldp	x8, x1, [sp, #16]
  41229c:	ldp	x9, x0, [sp, #32]
  4122a0:	mrs	x2, fpcr
  4122a4:	ubfx	x4, x1, #48, #15
  4122a8:	ubfx	x10, x1, #0, #48
  4122ac:	lsr	x2, x1, #63
  4122b0:	mov	x5, #0x7fff                	// #32767
  4122b4:	mov	x6, x8
  4122b8:	cmp	x4, x5
  4122bc:	ubfx	x11, x0, #0, #48
  4122c0:	ubfx	x7, x0, #48, #15
  4122c4:	lsr	x1, x0, #63
  4122c8:	mov	x3, x9
  4122cc:	b.eq	412304 <_obstack_memory_used@@Base+0x79c>  // b.none
  4122d0:	cmp	x7, x5
  4122d4:	b.eq	412314 <_obstack_memory_used@@Base+0x7ac>  // b.none
  4122d8:	cbnz	x4, 412340 <_obstack_memory_used@@Base+0x7d8>
  4122dc:	orr	x6, x10, x8
  4122e0:	cmp	x6, #0x0
  4122e4:	cset	w0, eq  // eq = none
  4122e8:	cbnz	x7, 41232c <_obstack_memory_used@@Base+0x7c4>
  4122ec:	orr	x3, x11, x9
  4122f0:	cbnz	x3, 41232c <_obstack_memory_used@@Base+0x7c4>
  4122f4:	mov	w0, #0x0                   	// #0
  4122f8:	cbnz	x6, 412354 <_obstack_memory_used@@Base+0x7ec>
  4122fc:	ldp	x29, x30, [sp], #48
  412300:	ret
  412304:	orr	x0, x10, x8
  412308:	cbnz	x0, 412368 <_obstack_memory_used@@Base+0x800>
  41230c:	cmp	x7, x4
  412310:	b.ne	412340 <_obstack_memory_used@@Base+0x7d8>  // b.any
  412314:	orr	x3, x11, x3
  412318:	cbnz	x3, 412368 <_obstack_memory_used@@Base+0x800>
  41231c:	cbnz	x4, 41234c <_obstack_memory_used@@Base+0x7e4>
  412320:	orr	x6, x10, x6
  412324:	cmp	x6, #0x0
  412328:	cset	w0, eq  // eq = none
  41232c:	cbz	w0, 41234c <_obstack_memory_used@@Base+0x7e4>
  412330:	cmp	x1, #0x0
  412334:	csinv	w0, w0, wzr, ne  // ne = any
  412338:	ldp	x29, x30, [sp], #48
  41233c:	ret
  412340:	cbnz	x7, 41234c <_obstack_memory_used@@Base+0x7e4>
  412344:	orr	x3, x11, x3
  412348:	cbz	x3, 412354 <_obstack_memory_used@@Base+0x7ec>
  41234c:	cmp	x2, x1
  412350:	b.eq	41237c <_obstack_memory_used@@Base+0x814>  // b.none
  412354:	cmp	x2, #0x0
  412358:	mov	w0, #0xffffffff            	// #-1
  41235c:	cneg	w0, w0, eq  // eq = none
  412360:	ldp	x29, x30, [sp], #48
  412364:	ret
  412368:	mov	w0, #0x1                   	// #1
  41236c:	bl	4123c8 <_obstack_memory_used@@Base+0x860>
  412370:	mov	w0, #0x2                   	// #2
  412374:	ldp	x29, x30, [sp], #48
  412378:	ret
  41237c:	cmp	x4, x7
  412380:	b.gt	412354 <_obstack_memory_used@@Base+0x7ec>
  412384:	b.lt	4123b8 <_obstack_memory_used@@Base+0x850>  // b.tstop
  412388:	cmp	x10, x11
  41238c:	b.hi	412354 <_obstack_memory_used@@Base+0x7ec>  // b.pmore
  412390:	cset	w0, eq  // eq = none
  412394:	cmp	w0, #0x0
  412398:	ccmp	x8, x9, #0x0, ne  // ne = any
  41239c:	b.hi	412354 <_obstack_memory_used@@Base+0x7ec>  // b.pmore
  4123a0:	cmp	x10, x11
  4123a4:	b.cc	4123b8 <_obstack_memory_used@@Base+0x850>  // b.lo, b.ul, b.last
  4123a8:	cmp	w0, #0x0
  4123ac:	mov	w0, #0x0                   	// #0
  4123b0:	ccmp	x8, x9, #0x2, ne  // ne = any
  4123b4:	b.cs	4122fc <_obstack_memory_used@@Base+0x794>  // b.hs, b.nlast
  4123b8:	cmp	x2, #0x0
  4123bc:	mov	w0, #0x1                   	// #1
  4123c0:	cneg	w0, w0, eq  // eq = none
  4123c4:	b	4122fc <_obstack_memory_used@@Base+0x794>
  4123c8:	tbz	w0, #0, 4123d8 <_obstack_memory_used@@Base+0x870>
  4123cc:	movi	v1.2s, #0x0
  4123d0:	fdiv	s0, s1, s1
  4123d4:	mrs	x1, fpsr
  4123d8:	tbz	w0, #1, 4123ec <_obstack_memory_used@@Base+0x884>
  4123dc:	fmov	s1, #1.000000000000000000e+00
  4123e0:	movi	v2.2s, #0x0
  4123e4:	fdiv	s0, s1, s2
  4123e8:	mrs	x1, fpsr
  4123ec:	tbz	w0, #2, 41240c <_obstack_memory_used@@Base+0x8a4>
  4123f0:	mov	w2, #0xc5ae                	// #50606
  4123f4:	mov	w1, #0x7f7fffff            	// #2139095039
  4123f8:	movk	w2, #0x749d, lsl #16
  4123fc:	fmov	s1, w1
  412400:	fmov	s2, w2
  412404:	fadd	s0, s1, s2
  412408:	mrs	x1, fpsr
  41240c:	tbz	w0, #3, 41241c <_obstack_memory_used@@Base+0x8b4>
  412410:	movi	v1.2s, #0x80, lsl #16
  412414:	fmul	s0, s1, s1
  412418:	mrs	x1, fpsr
  41241c:	tbz	w0, #4, 412434 <_obstack_memory_used@@Base+0x8cc>
  412420:	mov	w0, #0x7f7fffff            	// #2139095039
  412424:	fmov	s2, #1.000000000000000000e+00
  412428:	fmov	s1, w0
  41242c:	fsub	s0, s1, s2
  412430:	mrs	x0, fpsr
  412434:	ret
  412438:	stp	x29, x30, [sp, #-64]!
  41243c:	mov	x29, sp
  412440:	stp	x19, x20, [sp, #16]
  412444:	adrp	x20, 428000 <_obstack_memory_used@@Base+0x16498>
  412448:	add	x20, x20, #0xde0
  41244c:	stp	x21, x22, [sp, #32]
  412450:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x16498>
  412454:	add	x21, x21, #0xdd8
  412458:	sub	x20, x20, x21
  41245c:	mov	w22, w0
  412460:	stp	x23, x24, [sp, #48]
  412464:	mov	x23, x1
  412468:	mov	x24, x2
  41246c:	bl	4026d8 <mbrtowc@plt-0x38>
  412470:	cmp	xzr, x20, asr #3
  412474:	b.eq	4124a0 <_obstack_memory_used@@Base+0x938>  // b.none
  412478:	asr	x20, x20, #3
  41247c:	mov	x19, #0x0                   	// #0
  412480:	ldr	x3, [x21, x19, lsl #3]
  412484:	mov	x2, x24
  412488:	add	x19, x19, #0x1
  41248c:	mov	x1, x23
  412490:	mov	w0, w22
  412494:	blr	x3
  412498:	cmp	x20, x19
  41249c:	b.ne	412480 <_obstack_memory_used@@Base+0x918>  // b.any
  4124a0:	ldp	x19, x20, [sp, #16]
  4124a4:	ldp	x21, x22, [sp, #32]
  4124a8:	ldp	x23, x24, [sp, #48]
  4124ac:	ldp	x29, x30, [sp], #64
  4124b0:	ret
  4124b4:	nop
  4124b8:	ret
  4124bc:	nop
  4124c0:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x17498>
  4124c4:	mov	x1, #0x0                   	// #0
  4124c8:	ldr	x2, [x2, #936]
  4124cc:	b	4027f0 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004124d0 <.fini>:
  4124d0:	stp	x29, x30, [sp, #-16]!
  4124d4:	mov	x29, sp
  4124d8:	ldp	x29, x30, [sp], #16
  4124dc:	ret
