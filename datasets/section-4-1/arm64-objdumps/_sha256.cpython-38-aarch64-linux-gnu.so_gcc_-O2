
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha256.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 13000 <PyInit__sha256@@Base+0xfc78>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha256@@Base-0x2408>:
     f80:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	nop
     f98:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
     f9c:	add	x0, x0, #0x690
     fa0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10c78>
     fa4:	add	x1, x1, #0x690
     fa8:	cmp	x1, x0
     fac:	b.eq	fc4 <_Py_strhex@plt+0x54>  // b.none
     fb0:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfc78>
     fb4:	ldr	x1, [x1, #4008]
     fb8:	cbz	x1, fc4 <_Py_strhex@plt+0x54>
     fbc:	mov	x16, x1
     fc0:	br	x16
     fc4:	ret
     fc8:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
     fcc:	add	x0, x0, #0x690
     fd0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10c78>
     fd4:	add	x1, x1, #0x690
     fd8:	sub	x1, x1, x0
     fdc:	lsr	x2, x1, #63
     fe0:	add	x1, x2, x1, asr #3
     fe4:	cmp	xzr, x1, asr #1
     fe8:	asr	x1, x1, #1
     fec:	b.eq	1004 <_Py_strhex@plt+0x94>  // b.none
     ff0:	adrp	x2, 13000 <PyInit__sha256@@Base+0xfc78>
     ff4:	ldr	x2, [x2, #4064]
     ff8:	cbz	x2, 1004 <_Py_strhex@plt+0x94>
     ffc:	mov	x16, x2
    1000:	br	x16
    1004:	ret
    1008:	stp	x29, x30, [sp, #-32]!
    100c:	mov	x29, sp
    1010:	str	x19, [sp, #16]
    1014:	adrp	x19, 14000 <PyInit__sha256@@Base+0x10c78>
    1018:	ldrb	w0, [x19, #1680]
    101c:	cbnz	w0, 1044 <_Py_strhex@plt+0xd4>
    1020:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    1024:	ldr	x0, [x0, #4016]
    1028:	cbz	x0, 1038 <_Py_strhex@plt+0xc8>
    102c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
    1030:	ldr	x0, [x0, #152]
    1034:	bl	e70 <__cxa_finalize@plt>
    1038:	bl	f98 <_Py_strhex@plt+0x28>
    103c:	mov	w0, #0x1                   	// #1
    1040:	strb	w0, [x19, #1680]
    1044:	ldr	x19, [sp, #16]
    1048:	ldp	x29, x30, [sp], #32
    104c:	ret
    1050:	b	fc8 <_Py_strhex@plt+0x58>
    1054:	nop
    1058:	sub	sp, sp, #0x120
    105c:	ldp	x6, x7, [x0, #56]
    1060:	add	x2, sp, #0x20
    1064:	stp	x6, x7, [sp, #32]
    1068:	mov	x1, x2
    106c:	add	x4, x2, #0x40
    1070:	ldp	x6, x7, [x0, #72]
    1074:	stp	x6, x7, [sp, #48]
    1078:	ldp	x6, x7, [x0, #88]
    107c:	stp	x6, x7, [sp, #64]
    1080:	ldp	x6, x7, [x0, #104]
    1084:	stp	x6, x7, [sp, #80]
    1088:	ldr	w3, [x1]
    108c:	rev	w3, w3
    1090:	str	w3, [x1], #4
    1094:	cmp	x1, x4
    1098:	b.ne	1088 <_Py_strhex@plt+0x118>  // b.any
    109c:	add	x8, x2, #0xc0
    10a0:	ldp	w7, w3, [x2]
    10a4:	add	x2, x2, #0x4
    10a8:	ldr	w1, [x2, #52]
    10ac:	ldr	w4, [x2, #32]
    10b0:	ror	w5, w3, #18
    10b4:	eor	w5, w5, w3, ror #7
    10b8:	ror	w6, w1, #19
    10bc:	eor	w6, w6, w1, ror #17
    10c0:	eor	w3, w5, w3, lsr #3
    10c4:	eor	w1, w6, w1, lsr #10
    10c8:	add	w1, w1, w3
    10cc:	add	w3, w4, w7
    10d0:	add	w1, w1, w3
    10d4:	str	w1, [x2, #60]
    10d8:	cmp	x8, x2
    10dc:	b.ne	10a0 <_Py_strhex@plt+0x130>  // b.any
    10e0:	mov	x9, sp
    10e4:	add	x4, x0, #0xc
    10e8:	mov	x1, #0x1                   	// #1
    10ec:	nop
    10f0:	add	x2, x9, x1, lsl #2
    10f4:	ldr	w3, [x4, x1, lsl #2]
    10f8:	add	x1, x1, #0x1
    10fc:	cmp	x1, #0x9
    1100:	stur	w3, [x2, #-4]
    1104:	b.ne	10f0 <_Py_strhex@plt+0x180>  // b.any
    1108:	ldp	w12, w13, [sp, #16]
    110c:	mov	w11, #0x2f98                	// #12184
    1110:	ldp	w10, w8, [sp, #24]
    1114:	movk	w11, #0x428a, lsl #16
    1118:	ldp	w1, w6, [sp]
    111c:	eor	w4, w10, w13
    1120:	ldr	w7, [sp, #8]
    1124:	ror	w3, w12, #11
    1128:	ldr	w16, [sp, #32]
    112c:	eor	w3, w3, w12, ror #6
    1130:	and	w4, w4, w12
    1134:	orr	w2, w1, w6
    1138:	eor	w4, w4, w10
    113c:	eor	w3, w3, w12, ror #25
    1140:	add	w3, w3, w4
    1144:	ror	w5, w1, #13
    1148:	add	w4, w8, w16
    114c:	and	w2, w2, w7
    1150:	and	w8, w1, w6
    1154:	eor	w5, w5, w1, ror #2
    1158:	orr	w2, w2, w8
    115c:	add	w3, w3, w4
    1160:	ldr	w8, [sp, #12]
    1164:	add	w3, w3, w11
    1168:	eor	w5, w5, w1, ror #22
    116c:	ldr	w16, [sp, #36]
    1170:	add	w11, w3, w8
    1174:	add	w5, w5, w2
    1178:	eor	w2, w12, w13
    117c:	add	w5, w5, w3
    1180:	and	w2, w2, w11
    1184:	ror	w8, w11, #11
    1188:	eor	w2, w2, w13
    118c:	mov	w15, #0x4491                	// #17553
    1190:	orr	w4, w1, w5
    1194:	ror	w3, w5, #13
    1198:	add	w10, w10, w16
    119c:	eor	w8, w8, w11, ror #6
    11a0:	movk	w15, #0x7137, lsl #16
    11a4:	add	w2, w2, w15
    11a8:	eor	w8, w8, w11, ror #25
    11ac:	and	w15, w1, w5
    11b0:	and	w4, w4, w6
    11b4:	eor	w3, w3, w5, ror #2
    11b8:	add	w2, w2, w10
    11bc:	orr	w4, w4, w15
    11c0:	add	w2, w2, w8
    11c4:	eor	w3, w3, w5, ror #22
    11c8:	add	w10, w7, w2
    11cc:	add	w3, w3, w4
    11d0:	eor	w4, w12, w11
    11d4:	add	w3, w3, w2
    11d8:	and	w4, w4, w10
    11dc:	mov	w14, #0xfbcf                	// #64463
    11e0:	orr	w2, w5, w3
    11e4:	eor	w4, w4, w12
    11e8:	movk	w14, #0xb5c0, lsl #16
    11ec:	and	w2, w2, w1
    11f0:	add	w4, w4, w14
    11f4:	and	w14, w5, w3
    11f8:	orr	w2, w2, w14
    11fc:	ror	w8, w10, #11
    1200:	ldp	w15, w14, [sp, #40]
    1204:	ror	w7, w3, #13
    1208:	eor	w8, w8, w10, ror #6
    120c:	eor	w7, w7, w3, ror #2
    1210:	add	w13, w13, w15
    1214:	eor	w8, w8, w10, ror #25
    1218:	add	w4, w4, w13
    121c:	eor	w7, w7, w3, ror #22
    1220:	add	w4, w4, w8
    1224:	add	w7, w7, w2
    1228:	add	w6, w6, w4
    122c:	eor	w2, w11, w10
    1230:	add	w4, w7, w4
    1234:	and	w2, w2, w6
    1238:	add	w12, w12, w14
    123c:	eor	w2, w2, w11
    1240:	mov	w14, #0xdba5                	// #56229
    1244:	ror	w13, w6, #11
    1248:	orr	w8, w3, w4
    124c:	eor	w13, w13, w6, ror #6
    1250:	movk	w14, #0xe9b5, lsl #16
    1254:	ror	w7, w4, #13
    1258:	add	w2, w2, w14
    125c:	and	w8, w8, w5
    1260:	and	w14, w3, w4
    1264:	eor	w7, w7, w4, ror #2
    1268:	add	w2, w2, w12
    126c:	eor	w12, w13, w6, ror #25
    1270:	orr	w8, w8, w14
    1274:	add	w2, w2, w12
    1278:	eor	w7, w7, w4, ror #22
    127c:	add	w1, w1, w2
    1280:	add	w7, w7, w8
    1284:	eor	w8, w10, w6
    1288:	and	w8, w8, w1
    128c:	add	w2, w7, w2
    1290:	ldr	w14, [sp, #48]
    1294:	eor	w8, w8, w10
    1298:	add	w8, w8, w11
    129c:	ror	w13, w1, #11
    12a0:	mov	w11, #0xc25b                	// #49755
    12a4:	orr	w12, w4, w2
    12a8:	eor	w13, w13, w1, ror #6
    12ac:	ror	w7, w2, #13
    12b0:	movk	w11, #0x3956, lsl #16
    12b4:	add	w14, w14, w11
    12b8:	and	w15, w4, w2
    12bc:	and	w12, w12, w3
    12c0:	eor	w13, w13, w1, ror #25
    12c4:	eor	w11, w7, w2, ror #2
    12c8:	add	w8, w8, w14
    12cc:	orr	w7, w12, w15
    12d0:	add	w8, w8, w13
    12d4:	eor	w11, w11, w2, ror #22
    12d8:	add	w5, w5, w8
    12dc:	add	w11, w11, w7
    12e0:	eor	w7, w6, w1
    12e4:	add	w8, w11, w8
    12e8:	and	w7, w7, w5
    12ec:	ldr	w14, [sp, #52]
    12f0:	eor	w7, w7, w6
    12f4:	ror	w13, w5, #11
    12f8:	add	w7, w7, w10
    12fc:	mov	w10, #0x11f1                	// #4593
    1300:	orr	w12, w2, w8
    1304:	eor	w13, w13, w5, ror #6
    1308:	movk	w10, #0x59f1, lsl #16
    130c:	ror	w11, w8, #13
    1310:	add	w14, w14, w10
    1314:	and	w15, w2, w8
    1318:	and	w10, w12, w4
    131c:	eor	w11, w11, w8, ror #2
    1320:	eor	w12, w13, w5, ror #25
    1324:	add	w7, w7, w14
    1328:	orr	w10, w10, w15
    132c:	add	w7, w7, w12
    1330:	eor	w11, w11, w8, ror #22
    1334:	add	w3, w3, w7
    1338:	add	w11, w11, w10
    133c:	eor	w10, w1, w5
    1340:	and	w10, w10, w3
    1344:	add	w7, w11, w7
    1348:	eor	w10, w10, w1
    134c:	ldr	w14, [sp, #56]
    1350:	add	w6, w10, w6
    1354:	ror	w13, w3, #11
    1358:	mov	w10, #0x82a4                	// #33444
    135c:	orr	w12, w8, w7
    1360:	eor	w13, w13, w3, ror #6
    1364:	ror	w11, w7, #13
    1368:	movk	w10, #0x923f, lsl #16
    136c:	add	w14, w14, w10
    1370:	and	w15, w8, w7
    1374:	and	w10, w12, w2
    1378:	eor	w11, w11, w7, ror #2
    137c:	eor	w12, w13, w3, ror #25
    1380:	add	w6, w6, w14
    1384:	orr	w10, w10, w15
    1388:	add	w6, w6, w12
    138c:	eor	w11, w11, w7, ror #22
    1390:	add	w4, w4, w6
    1394:	add	w11, w11, w10
    1398:	eor	w10, w5, w3
    139c:	add	w6, w11, w6
    13a0:	and	w10, w10, w4
    13a4:	ldr	w14, [sp, #60]
    13a8:	eor	w10, w10, w5
    13ac:	ror	w13, w4, #11
    13b0:	add	w1, w10, w1
    13b4:	mov	w10, #0x5ed5                	// #24277
    13b8:	orr	w12, w7, w6
    13bc:	eor	w13, w13, w4, ror #6
    13c0:	movk	w10, #0xab1c, lsl #16
    13c4:	ror	w11, w6, #13
    13c8:	add	w14, w14, w10
    13cc:	and	w15, w7, w6
    13d0:	and	w10, w12, w8
    13d4:	eor	w11, w11, w6, ror #2
    13d8:	eor	w12, w13, w4, ror #25
    13dc:	add	w1, w1, w14
    13e0:	orr	w10, w10, w15
    13e4:	add	w1, w1, w12
    13e8:	eor	w11, w11, w6, ror #22
    13ec:	add	w2, w2, w1
    13f0:	add	w11, w11, w10
    13f4:	eor	w10, w3, w4
    13f8:	and	w10, w10, w2
    13fc:	add	w1, w11, w1
    1400:	ldr	w14, [sp, #64]
    1404:	eor	w10, w10, w3
    1408:	add	w5, w10, w5
    140c:	ror	w13, w2, #11
    1410:	mov	w10, #0xaa98                	// #43672
    1414:	orr	w12, w6, w1
    1418:	eor	w13, w13, w2, ror #6
    141c:	ror	w11, w1, #13
    1420:	movk	w10, #0xd807, lsl #16
    1424:	add	w10, w14, w10
    1428:	and	w12, w12, w7
    142c:	and	w14, w6, w1
    1430:	eor	w13, w13, w2, ror #25
    1434:	eor	w11, w11, w1, ror #2
    1438:	add	w10, w5, w10
    143c:	eor	w11, w11, w1, ror #22
    1440:	orr	w5, w12, w14
    1444:	add	w10, w10, w13
    1448:	add	w8, w8, w10
    144c:	add	w11, w11, w5
    1450:	eor	w5, w4, w2
    1454:	add	w10, w11, w10
    1458:	and	w5, w5, w8
    145c:	ldr	w14, [sp, #68]
    1460:	eor	w5, w5, w4
    1464:	ror	w13, w8, #11
    1468:	add	w3, w5, w3
    146c:	mov	w5, #0x5b01                	// #23297
    1470:	orr	w12, w1, w10
    1474:	ror	w11, w10, #13
    1478:	eor	w13, w13, w8, ror #6
    147c:	movk	w5, #0x1283, lsl #16
    1480:	add	w5, w14, w5
    1484:	and	w12, w12, w6
    1488:	and	w14, w1, w10
    148c:	eor	w13, w13, w8, ror #25
    1490:	eor	w11, w11, w10, ror #2
    1494:	add	w5, w3, w5
    1498:	add	w5, w5, w13
    149c:	orr	w3, w12, w14
    14a0:	eor	w11, w11, w10, ror #22
    14a4:	add	w7, w7, w5
    14a8:	add	w11, w11, w3
    14ac:	eor	w3, w2, w8
    14b0:	and	w3, w3, w7
    14b4:	add	w5, w11, w5
    14b8:	ldr	w14, [sp, #72]
    14bc:	eor	w3, w3, w2
    14c0:	add	w3, w3, w4
    14c4:	ror	w13, w7, #11
    14c8:	mov	w4, #0x85be                	// #34238
    14cc:	orr	w12, w10, w5
    14d0:	eor	w13, w13, w7, ror #6
    14d4:	ror	w11, w5, #13
    14d8:	movk	w4, #0x2431, lsl #16
    14dc:	add	w14, w14, w4
    14e0:	and	w15, w10, w5
    14e4:	and	w4, w12, w1
    14e8:	eor	w11, w11, w5, ror #2
    14ec:	eor	w12, w13, w7, ror #25
    14f0:	add	w3, w3, w14
    14f4:	orr	w4, w4, w15
    14f8:	add	w3, w3, w12
    14fc:	eor	w11, w11, w5, ror #22
    1500:	add	w6, w6, w3
    1504:	add	w11, w11, w4
    1508:	eor	w4, w8, w7
    150c:	add	w3, w11, w3
    1510:	and	w4, w4, w6
    1514:	ldr	w14, [sp, #76]
    1518:	eor	w4, w4, w8
    151c:	ror	w13, w6, #11
    1520:	add	w2, w4, w2
    1524:	mov	w4, #0x7dc3                	// #32195
    1528:	orr	w12, w5, w3
    152c:	eor	w13, w13, w6, ror #6
    1530:	movk	w4, #0x550c, lsl #16
    1534:	ror	w11, w3, #13
    1538:	add	w14, w14, w4
    153c:	and	w15, w5, w3
    1540:	and	w4, w12, w10
    1544:	eor	w11, w11, w3, ror #2
    1548:	eor	w12, w13, w6, ror #25
    154c:	add	w2, w2, w14
    1550:	orr	w4, w4, w15
    1554:	add	w2, w2, w12
    1558:	eor	w11, w11, w3, ror #22
    155c:	add	w1, w1, w2
    1560:	add	w11, w11, w4
    1564:	eor	w4, w7, w6
    1568:	and	w4, w4, w1
    156c:	add	w2, w11, w2
    1570:	eor	w4, w4, w7
    1574:	ldr	w14, [sp, #80]
    1578:	add	w8, w4, w8
    157c:	ror	w13, w1, #11
    1580:	mov	w4, #0x5d74                	// #23924
    1584:	orr	w12, w3, w2
    1588:	eor	w13, w13, w1, ror #6
    158c:	ror	w11, w2, #13
    1590:	movk	w4, #0x72be, lsl #16
    1594:	add	w14, w14, w4
    1598:	and	w15, w3, w2
    159c:	and	w4, w12, w5
    15a0:	eor	w11, w11, w2, ror #2
    15a4:	eor	w12, w13, w1, ror #25
    15a8:	add	w8, w8, w14
    15ac:	orr	w4, w4, w15
    15b0:	add	w8, w8, w12
    15b4:	eor	w11, w11, w2, ror #22
    15b8:	add	w10, w10, w8
    15bc:	add	w11, w11, w4
    15c0:	eor	w4, w6, w1
    15c4:	add	w8, w11, w8
    15c8:	and	w4, w4, w10
    15cc:	ldr	w14, [sp, #84]
    15d0:	eor	w4, w4, w6
    15d4:	ror	w13, w10, #11
    15d8:	add	w7, w4, w7
    15dc:	mov	w4, #0xb1fe                	// #45566
    15e0:	orr	w12, w2, w8
    15e4:	eor	w13, w13, w10, ror #6
    15e8:	movk	w4, #0x80de, lsl #16
    15ec:	ror	w11, w8, #13
    15f0:	add	w14, w14, w4
    15f4:	and	w15, w2, w8
    15f8:	and	w4, w12, w3
    15fc:	eor	w11, w11, w8, ror #2
    1600:	eor	w12, w13, w10, ror #25
    1604:	add	w7, w7, w14
    1608:	orr	w4, w4, w15
    160c:	add	w7, w7, w12
    1610:	eor	w11, w11, w8, ror #22
    1614:	add	w5, w5, w7
    1618:	add	w11, w11, w4
    161c:	eor	w4, w1, w10
    1620:	and	w4, w4, w5
    1624:	add	w7, w11, w7
    1628:	ldr	w14, [sp, #88]
    162c:	eor	w4, w4, w1
    1630:	add	w4, w4, w6
    1634:	ror	w13, w5, #11
    1638:	mov	w6, #0x6a7                 	// #1703
    163c:	orr	w12, w8, w7
    1640:	eor	w13, w13, w5, ror #6
    1644:	ror	w11, w7, #13
    1648:	movk	w6, #0x9bdc, lsl #16
    164c:	add	w14, w14, w6
    1650:	and	w15, w8, w7
    1654:	and	w6, w12, w2
    1658:	eor	w11, w11, w7, ror #2
    165c:	eor	w12, w13, w5, ror #25
    1660:	add	w4, w4, w14
    1664:	orr	w6, w6, w15
    1668:	add	w4, w4, w12
    166c:	eor	w11, w11, w7, ror #22
    1670:	add	w3, w3, w4
    1674:	add	w11, w11, w6
    1678:	eor	w6, w10, w5
    167c:	add	w4, w11, w4
    1680:	and	w6, w6, w3
    1684:	ldr	w14, [sp, #92]
    1688:	eor	w6, w6, w10
    168c:	ror	w13, w3, #11
    1690:	add	w1, w6, w1
    1694:	mov	w6, #0xf174                	// #61812
    1698:	orr	w12, w7, w4
    169c:	eor	w13, w13, w3, ror #6
    16a0:	movk	w6, #0xc19b, lsl #16
    16a4:	ror	w11, w4, #13
    16a8:	add	w14, w14, w6
    16ac:	and	w15, w7, w4
    16b0:	and	w6, w12, w8
    16b4:	eor	w11, w11, w4, ror #2
    16b8:	eor	w12, w13, w3, ror #25
    16bc:	add	w1, w1, w14
    16c0:	orr	w6, w6, w15
    16c4:	add	w1, w1, w12
    16c8:	eor	w11, w11, w4, ror #22
    16cc:	add	w2, w2, w1
    16d0:	add	w11, w11, w6
    16d4:	eor	w6, w5, w3
    16d8:	and	w6, w6, w2
    16dc:	add	w1, w11, w1
    16e0:	ldr	w14, [sp, #96]
    16e4:	eor	w6, w6, w5
    16e8:	add	w6, w6, w10
    16ec:	ror	w13, w2, #11
    16f0:	mov	w10, #0x69c1                	// #27073
    16f4:	orr	w12, w4, w1
    16f8:	eor	w13, w13, w2, ror #6
    16fc:	ror	w11, w1, #13
    1700:	movk	w10, #0xe49b, lsl #16
    1704:	add	w14, w14, w10
    1708:	and	w15, w4, w1
    170c:	and	w10, w12, w7
    1710:	eor	w11, w11, w1, ror #2
    1714:	eor	w12, w13, w2, ror #25
    1718:	add	w6, w6, w14
    171c:	orr	w10, w10, w15
    1720:	add	w6, w6, w12
    1724:	eor	w11, w11, w1, ror #22
    1728:	add	w8, w8, w6
    172c:	add	w11, w11, w10
    1730:	eor	w10, w3, w2
    1734:	add	w6, w11, w6
    1738:	and	w10, w10, w8
    173c:	ldr	w14, [sp, #100]
    1740:	eor	w10, w10, w3
    1744:	ror	w13, w8, #11
    1748:	add	w5, w10, w5
    174c:	mov	w10, #0x4786                	// #18310
    1750:	orr	w12, w1, w6
    1754:	eor	w13, w13, w8, ror #6
    1758:	movk	w10, #0xefbe, lsl #16
    175c:	ror	w11, w6, #13
    1760:	add	w14, w14, w10
    1764:	and	w15, w1, w6
    1768:	and	w10, w12, w4
    176c:	eor	w11, w11, w6, ror #2
    1770:	eor	w12, w13, w8, ror #25
    1774:	add	w5, w5, w14
    1778:	orr	w10, w10, w15
    177c:	add	w5, w5, w12
    1780:	eor	w11, w11, w6, ror #22
    1784:	add	w7, w7, w5
    1788:	add	w11, w11, w10
    178c:	eor	w10, w2, w8
    1790:	and	w10, w10, w7
    1794:	add	w5, w11, w5
    1798:	eor	w10, w10, w2
    179c:	ldr	w14, [sp, #104]
    17a0:	add	w3, w10, w3
    17a4:	ror	w13, w7, #11
    17a8:	mov	w10, #0x9dc6                	// #40390
    17ac:	orr	w12, w6, w5
    17b0:	eor	w13, w13, w7, ror #6
    17b4:	ror	w11, w5, #13
    17b8:	movk	w10, #0xfc1, lsl #16
    17bc:	add	w14, w14, w10
    17c0:	and	w15, w6, w5
    17c4:	and	w10, w12, w1
    17c8:	eor	w11, w11, w5, ror #2
    17cc:	eor	w12, w13, w7, ror #25
    17d0:	add	w3, w3, w14
    17d4:	orr	w10, w10, w15
    17d8:	add	w3, w3, w12
    17dc:	eor	w11, w11, w5, ror #22
    17e0:	add	w4, w4, w3
    17e4:	add	w11, w11, w10
    17e8:	eor	w10, w8, w7
    17ec:	add	w3, w11, w3
    17f0:	and	w10, w10, w4
    17f4:	ldr	w14, [sp, #108]
    17f8:	eor	w10, w10, w8
    17fc:	ror	w13, w4, #11
    1800:	add	w2, w10, w2
    1804:	mov	w10, #0xa1cc                	// #41420
    1808:	orr	w12, w5, w3
    180c:	eor	w13, w13, w4, ror #6
    1810:	movk	w10, #0x240c, lsl #16
    1814:	ror	w11, w3, #13
    1818:	add	w14, w14, w10
    181c:	and	w15, w5, w3
    1820:	and	w10, w12, w6
    1824:	eor	w11, w11, w3, ror #2
    1828:	eor	w12, w13, w4, ror #25
    182c:	add	w2, w2, w14
    1830:	orr	w10, w10, w15
    1834:	add	w2, w2, w12
    1838:	eor	w11, w11, w3, ror #22
    183c:	add	w1, w1, w2
    1840:	add	w11, w11, w10
    1844:	eor	w10, w7, w4
    1848:	and	w10, w10, w1
    184c:	add	w2, w11, w2
    1850:	eor	w10, w10, w7
    1854:	ldr	w14, [sp, #112]
    1858:	add	w8, w10, w8
    185c:	ror	w13, w1, #11
    1860:	mov	w10, #0x2c6f                	// #11375
    1864:	orr	w12, w3, w2
    1868:	eor	w13, w13, w1, ror #6
    186c:	ror	w11, w2, #13
    1870:	movk	w10, #0x2de9, lsl #16
    1874:	add	w14, w14, w10
    1878:	and	w15, w3, w2
    187c:	and	w10, w12, w5
    1880:	eor	w11, w11, w2, ror #2
    1884:	eor	w12, w13, w1, ror #25
    1888:	add	w8, w8, w14
    188c:	orr	w10, w10, w15
    1890:	add	w8, w8, w12
    1894:	eor	w11, w11, w2, ror #22
    1898:	add	w6, w6, w8
    189c:	add	w11, w11, w10
    18a0:	eor	w10, w4, w1
    18a4:	add	w8, w11, w8
    18a8:	and	w10, w10, w6
    18ac:	ldr	w14, [sp, #116]
    18b0:	eor	w10, w10, w4
    18b4:	ror	w13, w6, #11
    18b8:	add	w7, w10, w7
    18bc:	mov	w10, #0x84aa                	// #33962
    18c0:	orr	w12, w2, w8
    18c4:	eor	w13, w13, w6, ror #6
    18c8:	movk	w10, #0x4a74, lsl #16
    18cc:	ror	w11, w8, #13
    18d0:	add	w14, w14, w10
    18d4:	and	w15, w2, w8
    18d8:	and	w10, w12, w3
    18dc:	eor	w11, w11, w8, ror #2
    18e0:	eor	w12, w13, w6, ror #25
    18e4:	add	w7, w7, w14
    18e8:	orr	w10, w10, w15
    18ec:	add	w7, w7, w12
    18f0:	eor	w11, w11, w8, ror #22
    18f4:	add	w5, w5, w7
    18f8:	add	w11, w11, w10
    18fc:	eor	w10, w1, w6
    1900:	and	w10, w10, w5
    1904:	add	w7, w11, w7
    1908:	eor	w10, w10, w1
    190c:	ldr	w14, [sp, #120]
    1910:	add	w4, w10, w4
    1914:	ror	w13, w5, #11
    1918:	mov	w10, #0xa9dc                	// #43484
    191c:	orr	w12, w8, w7
    1920:	eor	w13, w13, w5, ror #6
    1924:	ror	w11, w7, #13
    1928:	movk	w10, #0x5cb0, lsl #16
    192c:	add	w14, w14, w10
    1930:	and	w15, w8, w7
    1934:	and	w10, w12, w2
    1938:	eor	w11, w11, w7, ror #2
    193c:	eor	w12, w13, w5, ror #25
    1940:	add	w4, w4, w14
    1944:	orr	w10, w10, w15
    1948:	add	w4, w4, w12
    194c:	eor	w11, w11, w7, ror #22
    1950:	add	w3, w3, w4
    1954:	add	w11, w11, w10
    1958:	eor	w10, w6, w5
    195c:	add	w4, w11, w4
    1960:	and	w10, w10, w3
    1964:	ldr	w14, [sp, #124]
    1968:	eor	w10, w10, w6
    196c:	ror	w13, w3, #11
    1970:	add	w1, w10, w1
    1974:	mov	w10, #0x88da                	// #35034
    1978:	orr	w12, w7, w4
    197c:	eor	w13, w13, w3, ror #6
    1980:	movk	w10, #0x76f9, lsl #16
    1984:	ror	w11, w4, #13
    1988:	add	w14, w14, w10
    198c:	and	w15, w7, w4
    1990:	and	w10, w12, w8
    1994:	eor	w11, w11, w4, ror #2
    1998:	eor	w12, w13, w3, ror #25
    199c:	add	w1, w1, w14
    19a0:	orr	w10, w10, w15
    19a4:	add	w1, w1, w12
    19a8:	eor	w11, w11, w4, ror #22
    19ac:	add	w2, w2, w1
    19b0:	add	w11, w11, w10
    19b4:	eor	w10, w5, w3
    19b8:	and	w10, w10, w2
    19bc:	ldr	w14, [sp, #128]
    19c0:	add	w1, w11, w1
    19c4:	eor	w10, w10, w5
    19c8:	add	w6, w10, w6
    19cc:	ror	w13, w2, #11
    19d0:	mov	w10, #0x5152                	// #20818
    19d4:	orr	w12, w4, w1
    19d8:	eor	w13, w13, w2, ror #6
    19dc:	ror	w11, w1, #13
    19e0:	movk	w10, #0x983e, lsl #16
    19e4:	add	w14, w14, w10
    19e8:	and	w15, w4, w1
    19ec:	and	w10, w12, w7
    19f0:	eor	w11, w11, w1, ror #2
    19f4:	eor	w12, w13, w2, ror #25
    19f8:	add	w6, w6, w14
    19fc:	orr	w10, w10, w15
    1a00:	add	w6, w6, w12
    1a04:	eor	w11, w11, w1, ror #22
    1a08:	add	w8, w8, w6
    1a0c:	add	w11, w11, w10
    1a10:	eor	w10, w3, w2
    1a14:	add	w6, w11, w6
    1a18:	and	w10, w10, w8
    1a1c:	ldr	w14, [sp, #132]
    1a20:	eor	w10, w10, w3
    1a24:	ror	w13, w8, #11
    1a28:	add	w5, w10, w5
    1a2c:	mov	w10, #0xc66d                	// #50797
    1a30:	orr	w12, w1, w6
    1a34:	eor	w13, w13, w8, ror #6
    1a38:	movk	w10, #0xa831, lsl #16
    1a3c:	ror	w11, w6, #13
    1a40:	add	w14, w14, w10
    1a44:	and	w15, w1, w6
    1a48:	and	w10, w12, w4
    1a4c:	eor	w11, w11, w6, ror #2
    1a50:	eor	w12, w13, w8, ror #25
    1a54:	add	w5, w5, w14
    1a58:	orr	w10, w10, w15
    1a5c:	add	w5, w5, w12
    1a60:	eor	w11, w11, w6, ror #22
    1a64:	add	w7, w7, w5
    1a68:	add	w11, w11, w10
    1a6c:	eor	w10, w2, w8
    1a70:	and	w10, w10, w7
    1a74:	add	w5, w11, w5
    1a78:	eor	w10, w10, w2
    1a7c:	ldr	w14, [sp, #136]
    1a80:	add	w3, w10, w3
    1a84:	ror	w13, w7, #11
    1a88:	mov	w10, #0x27c8                	// #10184
    1a8c:	orr	w12, w6, w5
    1a90:	eor	w13, w13, w7, ror #6
    1a94:	ror	w11, w5, #13
    1a98:	movk	w10, #0xb003, lsl #16
    1a9c:	add	w14, w14, w10
    1aa0:	and	w15, w6, w5
    1aa4:	and	w10, w12, w1
    1aa8:	eor	w11, w11, w5, ror #2
    1aac:	eor	w12, w13, w7, ror #25
    1ab0:	add	w3, w3, w14
    1ab4:	orr	w10, w10, w15
    1ab8:	add	w3, w3, w12
    1abc:	eor	w11, w11, w5, ror #22
    1ac0:	add	w4, w4, w3
    1ac4:	add	w11, w11, w10
    1ac8:	eor	w10, w8, w7
    1acc:	add	w3, w11, w3
    1ad0:	and	w10, w10, w4
    1ad4:	ldr	w14, [sp, #140]
    1ad8:	eor	w10, w10, w8
    1adc:	ror	w13, w4, #11
    1ae0:	add	w2, w10, w2
    1ae4:	mov	w10, #0x7fc7                	// #32711
    1ae8:	orr	w12, w5, w3
    1aec:	eor	w13, w13, w4, ror #6
    1af0:	movk	w10, #0xbf59, lsl #16
    1af4:	ror	w11, w3, #13
    1af8:	add	w14, w14, w10
    1afc:	and	w15, w5, w3
    1b00:	and	w10, w12, w6
    1b04:	eor	w11, w11, w3, ror #2
    1b08:	eor	w12, w13, w4, ror #25
    1b0c:	add	w2, w2, w14
    1b10:	orr	w10, w10, w15
    1b14:	add	w2, w2, w12
    1b18:	eor	w11, w11, w3, ror #22
    1b1c:	add	w1, w1, w2
    1b20:	add	w11, w11, w10
    1b24:	eor	w10, w7, w4
    1b28:	and	w10, w10, w1
    1b2c:	add	w2, w11, w2
    1b30:	eor	w10, w10, w7
    1b34:	ldr	w14, [sp, #144]
    1b38:	add	w8, w10, w8
    1b3c:	ror	w13, w1, #11
    1b40:	mov	w10, #0xbf3                 	// #3059
    1b44:	orr	w12, w3, w2
    1b48:	eor	w13, w13, w1, ror #6
    1b4c:	ror	w11, w2, #13
    1b50:	movk	w10, #0xc6e0, lsl #16
    1b54:	add	w14, w14, w10
    1b58:	and	w15, w3, w2
    1b5c:	and	w10, w12, w5
    1b60:	eor	w11, w11, w2, ror #2
    1b64:	eor	w12, w13, w1, ror #25
    1b68:	add	w8, w8, w14
    1b6c:	orr	w10, w10, w15
    1b70:	add	w8, w8, w12
    1b74:	eor	w11, w11, w2, ror #22
    1b78:	add	w6, w6, w8
    1b7c:	add	w11, w11, w10
    1b80:	eor	w10, w4, w1
    1b84:	add	w8, w11, w8
    1b88:	and	w10, w10, w6
    1b8c:	ldr	w14, [sp, #148]
    1b90:	eor	w10, w10, w4
    1b94:	ror	w13, w6, #11
    1b98:	add	w7, w10, w7
    1b9c:	mov	w10, #0x9147                	// #37191
    1ba0:	orr	w12, w2, w8
    1ba4:	eor	w13, w13, w6, ror #6
    1ba8:	movk	w10, #0xd5a7, lsl #16
    1bac:	ror	w11, w8, #13
    1bb0:	add	w14, w14, w10
    1bb4:	and	w15, w2, w8
    1bb8:	and	w10, w12, w3
    1bbc:	eor	w11, w11, w8, ror #2
    1bc0:	eor	w12, w13, w6, ror #25
    1bc4:	add	w7, w7, w14
    1bc8:	orr	w10, w10, w15
    1bcc:	add	w7, w7, w12
    1bd0:	eor	w11, w11, w8, ror #22
    1bd4:	add	w5, w5, w7
    1bd8:	add	w11, w11, w10
    1bdc:	eor	w10, w1, w6
    1be0:	and	w10, w10, w5
    1be4:	add	w7, w11, w7
    1be8:	eor	w10, w10, w1
    1bec:	ldr	w14, [sp, #152]
    1bf0:	add	w4, w10, w4
    1bf4:	ror	w13, w5, #11
    1bf8:	mov	w10, #0x6351                	// #25425
    1bfc:	orr	w12, w8, w7
    1c00:	eor	w13, w13, w5, ror #6
    1c04:	ror	w11, w7, #13
    1c08:	movk	w10, #0x6ca, lsl #16
    1c0c:	add	w14, w14, w10
    1c10:	and	w15, w8, w7
    1c14:	and	w10, w12, w2
    1c18:	eor	w11, w11, w7, ror #2
    1c1c:	eor	w12, w13, w5, ror #25
    1c20:	add	w4, w4, w14
    1c24:	orr	w10, w10, w15
    1c28:	add	w4, w4, w12
    1c2c:	eor	w11, w11, w7, ror #22
    1c30:	add	w3, w3, w4
    1c34:	add	w11, w11, w10
    1c38:	eor	w10, w6, w5
    1c3c:	add	w4, w11, w4
    1c40:	and	w10, w10, w3
    1c44:	ldr	w14, [sp, #156]
    1c48:	eor	w10, w10, w6
    1c4c:	ror	w13, w3, #11
    1c50:	add	w1, w10, w1
    1c54:	mov	w10, #0x2967                	// #10599
    1c58:	orr	w12, w7, w4
    1c5c:	eor	w13, w13, w3, ror #6
    1c60:	movk	w10, #0x1429, lsl #16
    1c64:	ror	w11, w4, #13
    1c68:	add	w14, w14, w10
    1c6c:	and	w15, w7, w4
    1c70:	and	w10, w12, w8
    1c74:	eor	w11, w11, w4, ror #2
    1c78:	eor	w12, w13, w3, ror #25
    1c7c:	add	w1, w1, w14
    1c80:	orr	w10, w10, w15
    1c84:	add	w1, w1, w12
    1c88:	eor	w11, w11, w4, ror #22
    1c8c:	add	w2, w2, w1
    1c90:	add	w11, w11, w10
    1c94:	eor	w10, w5, w3
    1c98:	and	w10, w10, w2
    1c9c:	add	w1, w11, w1
    1ca0:	eor	w10, w10, w5
    1ca4:	ldr	w14, [sp, #160]
    1ca8:	add	w6, w10, w6
    1cac:	ror	w13, w2, #11
    1cb0:	mov	w10, #0xa85                 	// #2693
    1cb4:	orr	w12, w4, w1
    1cb8:	eor	w13, w13, w2, ror #6
    1cbc:	ror	w11, w1, #13
    1cc0:	movk	w10, #0x27b7, lsl #16
    1cc4:	add	w14, w14, w10
    1cc8:	and	w15, w4, w1
    1ccc:	and	w10, w12, w7
    1cd0:	eor	w11, w11, w1, ror #2
    1cd4:	eor	w12, w13, w2, ror #25
    1cd8:	add	w6, w6, w14
    1cdc:	orr	w10, w10, w15
    1ce0:	add	w6, w6, w12
    1ce4:	eor	w11, w11, w1, ror #22
    1ce8:	add	w8, w8, w6
    1cec:	add	w11, w11, w10
    1cf0:	eor	w10, w3, w2
    1cf4:	add	w6, w11, w6
    1cf8:	and	w10, w10, w8
    1cfc:	ldr	w14, [sp, #164]
    1d00:	eor	w10, w10, w3
    1d04:	ror	w13, w8, #11
    1d08:	add	w5, w10, w5
    1d0c:	mov	w10, #0x2138                	// #8504
    1d10:	orr	w12, w1, w6
    1d14:	eor	w13, w13, w8, ror #6
    1d18:	movk	w10, #0x2e1b, lsl #16
    1d1c:	ror	w11, w6, #13
    1d20:	add	w14, w14, w10
    1d24:	and	w15, w1, w6
    1d28:	and	w10, w12, w4
    1d2c:	eor	w11, w11, w6, ror #2
    1d30:	eor	w12, w13, w8, ror #25
    1d34:	add	w5, w5, w14
    1d38:	orr	w10, w10, w15
    1d3c:	add	w5, w5, w12
    1d40:	eor	w11, w11, w6, ror #22
    1d44:	add	w7, w7, w5
    1d48:	add	w11, w11, w10
    1d4c:	eor	w10, w2, w8
    1d50:	and	w10, w10, w7
    1d54:	add	w5, w11, w5
    1d58:	eor	w10, w10, w2
    1d5c:	ldr	w14, [sp, #168]
    1d60:	add	w3, w10, w3
    1d64:	ror	w13, w7, #11
    1d68:	mov	w10, #0x6dfc                	// #28156
    1d6c:	orr	w12, w6, w5
    1d70:	eor	w13, w13, w7, ror #6
    1d74:	ror	w11, w5, #13
    1d78:	movk	w10, #0x4d2c, lsl #16
    1d7c:	add	w14, w14, w10
    1d80:	and	w15, w6, w5
    1d84:	and	w10, w12, w1
    1d88:	eor	w11, w11, w5, ror #2
    1d8c:	eor	w12, w13, w7, ror #25
    1d90:	add	w3, w3, w14
    1d94:	orr	w10, w10, w15
    1d98:	add	w3, w3, w12
    1d9c:	eor	w11, w11, w5, ror #22
    1da0:	add	w4, w4, w3
    1da4:	add	w11, w11, w10
    1da8:	eor	w10, w8, w7
    1dac:	add	w3, w11, w3
    1db0:	and	w10, w10, w4
    1db4:	ldr	w14, [sp, #172]
    1db8:	eor	w10, w10, w8
    1dbc:	ror	w13, w4, #11
    1dc0:	add	w2, w10, w2
    1dc4:	mov	w10, #0xd13                 	// #3347
    1dc8:	orr	w12, w5, w3
    1dcc:	eor	w13, w13, w4, ror #6
    1dd0:	movk	w10, #0x5338, lsl #16
    1dd4:	ror	w11, w3, #13
    1dd8:	add	w14, w14, w10
    1ddc:	and	w15, w5, w3
    1de0:	and	w10, w12, w6
    1de4:	eor	w11, w11, w3, ror #2
    1de8:	eor	w12, w13, w4, ror #25
    1dec:	add	w2, w2, w14
    1df0:	orr	w10, w10, w15
    1df4:	add	w2, w2, w12
    1df8:	eor	w11, w11, w3, ror #22
    1dfc:	add	w1, w1, w2
    1e00:	add	w11, w11, w10
    1e04:	eor	w10, w7, w4
    1e08:	and	w10, w10, w1
    1e0c:	add	w2, w11, w2
    1e10:	eor	w10, w10, w7
    1e14:	ldr	w14, [sp, #176]
    1e18:	add	w8, w10, w8
    1e1c:	ror	w13, w1, #11
    1e20:	mov	w10, #0x7354                	// #29524
    1e24:	orr	w12, w3, w2
    1e28:	eor	w13, w13, w1, ror #6
    1e2c:	ror	w11, w2, #13
    1e30:	movk	w10, #0x650a, lsl #16
    1e34:	add	w14, w14, w10
    1e38:	and	w15, w3, w2
    1e3c:	and	w10, w12, w5
    1e40:	eor	w11, w11, w2, ror #2
    1e44:	eor	w12, w13, w1, ror #25
    1e48:	add	w8, w8, w14
    1e4c:	orr	w10, w10, w15
    1e50:	add	w8, w8, w12
    1e54:	eor	w11, w11, w2, ror #22
    1e58:	add	w6, w6, w8
    1e5c:	add	w11, w11, w10
    1e60:	eor	w10, w4, w1
    1e64:	add	w8, w11, w8
    1e68:	and	w10, w10, w6
    1e6c:	ldr	w14, [sp, #180]
    1e70:	eor	w10, w10, w4
    1e74:	ror	w13, w6, #11
    1e78:	add	w7, w10, w7
    1e7c:	mov	w10, #0xabb                 	// #2747
    1e80:	orr	w12, w2, w8
    1e84:	eor	w13, w13, w6, ror #6
    1e88:	movk	w10, #0x766a, lsl #16
    1e8c:	ror	w11, w8, #13
    1e90:	add	w14, w14, w10
    1e94:	and	w15, w2, w8
    1e98:	and	w10, w12, w3
    1e9c:	eor	w11, w11, w8, ror #2
    1ea0:	eor	w12, w13, w6, ror #25
    1ea4:	add	w7, w7, w14
    1ea8:	orr	w10, w10, w15
    1eac:	add	w7, w7, w12
    1eb0:	eor	w11, w11, w8, ror #22
    1eb4:	add	w5, w5, w7
    1eb8:	add	w11, w11, w10
    1ebc:	eor	w10, w1, w6
    1ec0:	and	w10, w10, w5
    1ec4:	add	w7, w11, w7
    1ec8:	eor	w10, w10, w1
    1ecc:	ldr	w14, [sp, #184]
    1ed0:	add	w4, w10, w4
    1ed4:	ror	w13, w5, #11
    1ed8:	mov	w10, #0xc92e                	// #51502
    1edc:	orr	w12, w8, w7
    1ee0:	eor	w13, w13, w5, ror #6
    1ee4:	ror	w11, w7, #13
    1ee8:	movk	w10, #0x81c2, lsl #16
    1eec:	add	w14, w14, w10
    1ef0:	and	w15, w8, w7
    1ef4:	and	w10, w12, w2
    1ef8:	eor	w11, w11, w7, ror #2
    1efc:	eor	w12, w13, w5, ror #25
    1f00:	add	w4, w4, w14
    1f04:	orr	w10, w10, w15
    1f08:	add	w4, w4, w12
    1f0c:	eor	w11, w11, w7, ror #22
    1f10:	add	w3, w3, w4
    1f14:	add	w11, w11, w10
    1f18:	eor	w10, w6, w5
    1f1c:	add	w4, w11, w4
    1f20:	and	w10, w10, w3
    1f24:	ldr	w14, [sp, #188]
    1f28:	eor	w10, w10, w6
    1f2c:	ror	w13, w3, #11
    1f30:	add	w1, w10, w1
    1f34:	mov	w10, #0x2c85                	// #11397
    1f38:	orr	w12, w7, w4
    1f3c:	eor	w13, w13, w3, ror #6
    1f40:	movk	w10, #0x9272, lsl #16
    1f44:	ror	w11, w4, #13
    1f48:	add	w14, w14, w10
    1f4c:	and	w15, w7, w4
    1f50:	and	w10, w12, w8
    1f54:	eor	w11, w11, w4, ror #2
    1f58:	eor	w12, w13, w3, ror #25
    1f5c:	add	w1, w1, w14
    1f60:	orr	w10, w10, w15
    1f64:	add	w1, w1, w12
    1f68:	eor	w11, w11, w4, ror #22
    1f6c:	add	w2, w2, w1
    1f70:	add	w11, w11, w10
    1f74:	eor	w10, w5, w3
    1f78:	and	w10, w10, w2
    1f7c:	add	w1, w11, w1
    1f80:	eor	w10, w10, w5
    1f84:	ldr	w14, [sp, #192]
    1f88:	add	w6, w10, w6
    1f8c:	ror	w13, w2, #11
    1f90:	mov	w10, #0xe8a1                	// #59553
    1f94:	orr	w12, w4, w1
    1f98:	eor	w13, w13, w2, ror #6
    1f9c:	ror	w11, w1, #13
    1fa0:	movk	w10, #0xa2bf, lsl #16
    1fa4:	add	w14, w14, w10
    1fa8:	and	w15, w4, w1
    1fac:	and	w10, w12, w7
    1fb0:	eor	w11, w11, w1, ror #2
    1fb4:	eor	w12, w13, w2, ror #25
    1fb8:	add	w6, w6, w14
    1fbc:	orr	w10, w10, w15
    1fc0:	add	w6, w6, w12
    1fc4:	eor	w11, w11, w1, ror #22
    1fc8:	add	w8, w8, w6
    1fcc:	add	w11, w11, w10
    1fd0:	eor	w10, w3, w2
    1fd4:	add	w6, w11, w6
    1fd8:	and	w10, w10, w8
    1fdc:	ldr	w14, [sp, #196]
    1fe0:	eor	w10, w10, w3
    1fe4:	ror	w13, w8, #11
    1fe8:	add	w5, w10, w5
    1fec:	mov	w10, #0x664b                	// #26187
    1ff0:	orr	w12, w1, w6
    1ff4:	eor	w13, w13, w8, ror #6
    1ff8:	movk	w10, #0xa81a, lsl #16
    1ffc:	ror	w11, w6, #13
    2000:	add	w14, w14, w10
    2004:	and	w15, w1, w6
    2008:	and	w10, w12, w4
    200c:	eor	w11, w11, w6, ror #2
    2010:	eor	w12, w13, w8, ror #25
    2014:	add	w5, w5, w14
    2018:	orr	w10, w10, w15
    201c:	add	w5, w5, w12
    2020:	eor	w11, w11, w6, ror #22
    2024:	add	w7, w7, w5
    2028:	add	w11, w11, w10
    202c:	eor	w10, w2, w8
    2030:	and	w10, w10, w7
    2034:	add	w5, w11, w5
    2038:	eor	w10, w10, w2
    203c:	ldr	w14, [sp, #200]
    2040:	add	w3, w10, w3
    2044:	ror	w13, w7, #11
    2048:	mov	w10, #0x8b70                	// #35696
    204c:	orr	w12, w6, w5
    2050:	eor	w13, w13, w7, ror #6
    2054:	ror	w11, w5, #13
    2058:	movk	w10, #0xc24b, lsl #16
    205c:	add	w14, w14, w10
    2060:	and	w15, w6, w5
    2064:	and	w10, w12, w1
    2068:	eor	w11, w11, w5, ror #2
    206c:	eor	w12, w13, w7, ror #25
    2070:	add	w3, w3, w14
    2074:	orr	w10, w10, w15
    2078:	add	w3, w3, w12
    207c:	eor	w11, w11, w5, ror #22
    2080:	add	w4, w4, w3
    2084:	add	w11, w11, w10
    2088:	eor	w10, w8, w7
    208c:	add	w3, w11, w3
    2090:	and	w10, w10, w4
    2094:	ldr	w14, [sp, #204]
    2098:	eor	w10, w10, w8
    209c:	ror	w13, w4, #11
    20a0:	add	w2, w10, w2
    20a4:	mov	w10, #0x51a3                	// #20899
    20a8:	orr	w12, w5, w3
    20ac:	eor	w13, w13, w4, ror #6
    20b0:	movk	w10, #0xc76c, lsl #16
    20b4:	ror	w11, w3, #13
    20b8:	add	w14, w14, w10
    20bc:	and	w15, w5, w3
    20c0:	and	w10, w12, w6
    20c4:	eor	w11, w11, w3, ror #2
    20c8:	eor	w12, w13, w4, ror #25
    20cc:	add	w2, w2, w14
    20d0:	orr	w10, w10, w15
    20d4:	add	w2, w2, w12
    20d8:	eor	w11, w11, w3, ror #22
    20dc:	add	w1, w1, w2
    20e0:	add	w11, w11, w10
    20e4:	eor	w10, w7, w4
    20e8:	and	w10, w10, w1
    20ec:	add	w2, w11, w2
    20f0:	eor	w10, w10, w7
    20f4:	ldr	w14, [sp, #208]
    20f8:	add	w8, w10, w8
    20fc:	ror	w13, w1, #11
    2100:	mov	w10, #0xe819                	// #59417
    2104:	orr	w12, w3, w2
    2108:	eor	w13, w13, w1, ror #6
    210c:	ror	w11, w2, #13
    2110:	movk	w10, #0xd192, lsl #16
    2114:	add	w14, w14, w10
    2118:	and	w15, w3, w2
    211c:	and	w10, w12, w5
    2120:	eor	w11, w11, w2, ror #2
    2124:	eor	w12, w13, w1, ror #25
    2128:	add	w8, w8, w14
    212c:	orr	w10, w10, w15
    2130:	add	w8, w8, w12
    2134:	eor	w11, w11, w2, ror #22
    2138:	add	w6, w6, w8
    213c:	add	w11, w11, w10
    2140:	eor	w10, w4, w1
    2144:	add	w8, w11, w8
    2148:	and	w10, w10, w6
    214c:	ldr	w14, [sp, #212]
    2150:	eor	w10, w10, w4
    2154:	orr	w12, w2, w8
    2158:	add	w7, w10, w7
    215c:	mov	w10, #0x624                 	// #1572
    2160:	ror	w11, w8, #13
    2164:	movk	w10, #0xd699, lsl #16
    2168:	ror	w13, w6, #11
    216c:	and	w15, w2, w8
    2170:	and	w12, w12, w3
    2174:	add	w14, w14, w10
    2178:	eor	w13, w13, w6, ror #6
    217c:	eor	w10, w11, w8, ror #2
    2180:	eor	w13, w13, w6, ror #25
    2184:	orr	w11, w12, w15
    2188:	add	w7, w7, w14
    218c:	eor	w10, w10, w8, ror #22
    2190:	add	w7, w7, w13
    2194:	add	w10, w10, w11
    2198:	add	w5, w5, w7
    219c:	add	w7, w10, w7
    21a0:	eor	w10, w1, w6
    21a4:	and	w10, w10, w5
    21a8:	ldr	w14, [sp, #216]
    21ac:	eor	w10, w10, w1
    21b0:	orr	w12, w8, w7
    21b4:	add	w4, w10, w4
    21b8:	mov	w10, #0x3585                	// #13701
    21bc:	ror	w11, w7, #13
    21c0:	movk	w10, #0xf40e, lsl #16
    21c4:	ror	w13, w5, #11
    21c8:	and	w15, w8, w7
    21cc:	and	w12, w12, w2
    21d0:	add	w14, w14, w10
    21d4:	eor	w13, w13, w5, ror #6
    21d8:	eor	w10, w11, w7, ror #2
    21dc:	eor	w13, w13, w5, ror #25
    21e0:	orr	w11, w12, w15
    21e4:	add	w4, w4, w14
    21e8:	eor	w10, w10, w7, ror #22
    21ec:	add	w4, w4, w13
    21f0:	add	w10, w10, w11
    21f4:	add	w3, w3, w4
    21f8:	add	w4, w10, w4
    21fc:	eor	w10, w6, w5
    2200:	and	w10, w10, w3
    2204:	ldr	w14, [sp, #220]
    2208:	eor	w10, w10, w6
    220c:	orr	w12, w7, w4
    2210:	add	w1, w10, w1
    2214:	mov	w10, #0xa070                	// #41072
    2218:	ror	w11, w4, #13
    221c:	movk	w10, #0x106a, lsl #16
    2220:	ror	w13, w3, #11
    2224:	and	w15, w7, w4
    2228:	and	w12, w12, w8
    222c:	add	w14, w14, w10
    2230:	eor	w13, w13, w3, ror #6
    2234:	eor	w10, w11, w4, ror #2
    2238:	eor	w13, w13, w3, ror #25
    223c:	orr	w11, w12, w15
    2240:	add	w1, w1, w14
    2244:	eor	w10, w10, w4, ror #22
    2248:	add	w1, w1, w13
    224c:	add	w10, w10, w11
    2250:	add	w2, w2, w1
    2254:	add	w1, w10, w1
    2258:	eor	w10, w5, w3
    225c:	and	w10, w10, w2
    2260:	ldr	w14, [sp, #224]
    2264:	eor	w10, w10, w5
    2268:	orr	w12, w4, w1
    226c:	add	w6, w10, w6
    2270:	mov	w10, #0xc116                	// #49430
    2274:	ror	w11, w1, #13
    2278:	movk	w10, #0x19a4, lsl #16
    227c:	ror	w13, w2, #11
    2280:	and	w15, w4, w1
    2284:	and	w12, w12, w7
    2288:	add	w14, w14, w10
    228c:	eor	w13, w13, w2, ror #6
    2290:	eor	w10, w11, w1, ror #2
    2294:	eor	w13, w13, w2, ror #25
    2298:	orr	w11, w12, w15
    229c:	add	w6, w6, w14
    22a0:	eor	w10, w10, w1, ror #22
    22a4:	add	w6, w6, w13
    22a8:	add	w10, w10, w11
    22ac:	add	w8, w8, w6
    22b0:	add	w6, w10, w6
    22b4:	eor	w10, w3, w2
    22b8:	and	w10, w10, w8
    22bc:	ldr	w14, [sp, #228]
    22c0:	eor	w10, w10, w3
    22c4:	orr	w12, w1, w6
    22c8:	add	w5, w10, w5
    22cc:	mov	w10, #0x6c08                	// #27656
    22d0:	ror	w11, w6, #13
    22d4:	movk	w10, #0x1e37, lsl #16
    22d8:	ror	w13, w8, #11
    22dc:	and	w15, w1, w6
    22e0:	and	w12, w12, w4
    22e4:	add	w14, w14, w10
    22e8:	eor	w13, w13, w8, ror #6
    22ec:	eor	w10, w11, w6, ror #2
    22f0:	eor	w13, w13, w8, ror #25
    22f4:	orr	w11, w12, w15
    22f8:	add	w5, w5, w14
    22fc:	eor	w10, w10, w6, ror #22
    2300:	add	w5, w5, w13
    2304:	add	w10, w10, w11
    2308:	add	w7, w7, w5
    230c:	add	w5, w10, w5
    2310:	eor	w10, w2, w8
    2314:	and	w10, w10, w7
    2318:	ldr	w14, [sp, #232]
    231c:	eor	w10, w10, w2
    2320:	orr	w12, w6, w5
    2324:	add	w3, w10, w3
    2328:	mov	w10, #0x774c                	// #30540
    232c:	ror	w11, w5, #13
    2330:	movk	w10, #0x2748, lsl #16
    2334:	ror	w13, w7, #11
    2338:	and	w15, w6, w5
    233c:	and	w12, w12, w1
    2340:	add	w14, w14, w10
    2344:	eor	w13, w13, w7, ror #6
    2348:	eor	w10, w11, w5, ror #2
    234c:	eor	w13, w13, w7, ror #25
    2350:	orr	w11, w12, w15
    2354:	add	w3, w3, w14
    2358:	eor	w10, w10, w5, ror #22
    235c:	add	w3, w3, w13
    2360:	add	w10, w10, w11
    2364:	add	w4, w4, w3
    2368:	add	w3, w10, w3
    236c:	eor	w10, w8, w7
    2370:	and	w10, w10, w4
    2374:	ldr	w14, [sp, #236]
    2378:	eor	w10, w10, w8
    237c:	orr	w12, w5, w3
    2380:	add	w2, w10, w2
    2384:	mov	w10, #0xbcb5                	// #48309
    2388:	ror	w11, w3, #13
    238c:	movk	w10, #0x34b0, lsl #16
    2390:	ror	w13, w4, #11
    2394:	and	w15, w5, w3
    2398:	and	w12, w12, w6
    239c:	add	w14, w14, w10
    23a0:	eor	w13, w13, w4, ror #6
    23a4:	eor	w10, w11, w3, ror #2
    23a8:	eor	w13, w13, w4, ror #25
    23ac:	orr	w11, w12, w15
    23b0:	add	w2, w2, w14
    23b4:	eor	w10, w10, w3, ror #22
    23b8:	add	w2, w2, w13
    23bc:	add	w10, w10, w11
    23c0:	add	w1, w1, w2
    23c4:	add	w2, w10, w2
    23c8:	eor	w10, w7, w4
    23cc:	and	w10, w10, w1
    23d0:	ldr	w14, [sp, #240]
    23d4:	eor	w10, w10, w7
    23d8:	orr	w12, w3, w2
    23dc:	add	w8, w10, w8
    23e0:	mov	w10, #0xcb3                 	// #3251
    23e4:	ror	w11, w2, #13
    23e8:	movk	w10, #0x391c, lsl #16
    23ec:	ror	w13, w1, #11
    23f0:	and	w15, w3, w2
    23f4:	and	w12, w12, w5
    23f8:	add	w14, w14, w10
    23fc:	eor	w13, w13, w1, ror #6
    2400:	eor	w10, w11, w2, ror #2
    2404:	eor	w13, w13, w1, ror #25
    2408:	orr	w11, w12, w15
    240c:	add	w8, w8, w14
    2410:	eor	w10, w10, w2, ror #22
    2414:	add	w8, w8, w13
    2418:	add	w10, w10, w11
    241c:	add	w6, w6, w8
    2420:	add	w8, w10, w8
    2424:	eor	w10, w4, w1
    2428:	and	w10, w10, w6
    242c:	ldr	w14, [sp, #244]
    2430:	eor	w10, w10, w4
    2434:	orr	w12, w2, w8
    2438:	add	w7, w10, w7
    243c:	mov	w10, #0xaa4a                	// #43594
    2440:	ror	w11, w8, #13
    2444:	movk	w10, #0x4ed8, lsl #16
    2448:	ror	w13, w6, #11
    244c:	and	w15, w2, w8
    2450:	and	w12, w12, w3
    2454:	add	w14, w14, w10
    2458:	eor	w13, w13, w6, ror #6
    245c:	eor	w10, w11, w8, ror #2
    2460:	eor	w13, w13, w6, ror #25
    2464:	orr	w11, w12, w15
    2468:	add	w7, w7, w14
    246c:	eor	w10, w10, w8, ror #22
    2470:	add	w7, w7, w13
    2474:	add	w10, w10, w11
    2478:	add	w5, w5, w7
    247c:	add	w7, w10, w7
    2480:	eor	w10, w1, w6
    2484:	and	w10, w10, w5
    2488:	ldr	w14, [sp, #248]
    248c:	eor	w10, w10, w1
    2490:	orr	w12, w8, w7
    2494:	add	w4, w10, w4
    2498:	mov	w10, #0xca4f                	// #51791
    249c:	ror	w11, w7, #13
    24a0:	movk	w10, #0x5b9c, lsl #16
    24a4:	ror	w13, w5, #11
    24a8:	and	w15, w8, w7
    24ac:	and	w12, w12, w2
    24b0:	add	w14, w14, w10
    24b4:	eor	w13, w13, w5, ror #6
    24b8:	eor	w10, w11, w7, ror #2
    24bc:	eor	w13, w13, w5, ror #25
    24c0:	orr	w11, w12, w15
    24c4:	add	w4, w4, w14
    24c8:	eor	w10, w10, w7, ror #22
    24cc:	add	w4, w4, w13
    24d0:	add	w10, w10, w11
    24d4:	add	w3, w3, w4
    24d8:	add	w4, w10, w4
    24dc:	eor	w10, w6, w5
    24e0:	and	w10, w10, w3
    24e4:	ldr	w14, [sp, #252]
    24e8:	eor	w10, w10, w6
    24ec:	orr	w12, w7, w4
    24f0:	add	w1, w10, w1
    24f4:	mov	w10, #0x6ff3                	// #28659
    24f8:	ror	w11, w4, #13
    24fc:	movk	w10, #0x682e, lsl #16
    2500:	ror	w13, w3, #11
    2504:	and	w15, w7, w4
    2508:	and	w12, w12, w8
    250c:	add	w14, w14, w10
    2510:	eor	w13, w13, w3, ror #6
    2514:	eor	w10, w11, w4, ror #2
    2518:	eor	w13, w13, w3, ror #25
    251c:	orr	w11, w12, w15
    2520:	add	w1, w1, w14
    2524:	eor	w10, w10, w4, ror #22
    2528:	add	w1, w1, w13
    252c:	add	w10, w10, w11
    2530:	add	w2, w2, w1
    2534:	add	w1, w10, w1
    2538:	eor	w10, w5, w3
    253c:	and	w10, w10, w2
    2540:	ldr	w14, [sp, #256]
    2544:	eor	w10, w10, w5
    2548:	orr	w12, w4, w1
    254c:	add	w6, w10, w6
    2550:	mov	w10, #0x82ee                	// #33518
    2554:	ror	w11, w1, #13
    2558:	movk	w10, #0x748f, lsl #16
    255c:	ror	w13, w2, #11
    2560:	and	w15, w4, w1
    2564:	and	w12, w12, w7
    2568:	add	w14, w14, w10
    256c:	eor	w13, w13, w2, ror #6
    2570:	eor	w10, w11, w1, ror #2
    2574:	eor	w13, w13, w2, ror #25
    2578:	orr	w11, w12, w15
    257c:	add	w6, w6, w14
    2580:	eor	w10, w10, w1, ror #22
    2584:	add	w6, w6, w13
    2588:	add	w10, w10, w11
    258c:	add	w8, w8, w6
    2590:	add	w10, w10, w6
    2594:	eor	w6, w3, w2
    2598:	and	w6, w6, w8
    259c:	ldr	w14, [sp, #260]
    25a0:	eor	w6, w6, w3
    25a4:	orr	w12, w1, w10
    25a8:	add	w5, w6, w5
    25ac:	mov	w6, #0x636f                	// #25455
    25b0:	ror	w11, w10, #13
    25b4:	movk	w6, #0x78a5, lsl #16
    25b8:	ror	w13, w8, #11
    25bc:	and	w15, w1, w10
    25c0:	and	w12, w12, w4
    25c4:	add	w14, w14, w6
    25c8:	eor	w13, w13, w8, ror #6
    25cc:	eor	w6, w11, w10, ror #2
    25d0:	eor	w13, w13, w8, ror #25
    25d4:	orr	w11, w12, w15
    25d8:	add	w5, w5, w14
    25dc:	eor	w6, w6, w10, ror #22
    25e0:	add	w5, w5, w13
    25e4:	add	w6, w6, w11
    25e8:	add	w7, w7, w5
    25ec:	add	w5, w6, w5
    25f0:	eor	w6, w2, w8
    25f4:	and	w6, w6, w7
    25f8:	ldr	w14, [sp, #264]
    25fc:	eor	w6, w6, w2
    2600:	orr	w12, w10, w5
    2604:	add	w3, w6, w3
    2608:	mov	w6, #0x7814                	// #30740
    260c:	ror	w11, w5, #13
    2610:	movk	w6, #0x84c8, lsl #16
    2614:	ror	w13, w7, #11
    2618:	and	w15, w10, w5
    261c:	and	w12, w12, w1
    2620:	add	w14, w14, w6
    2624:	eor	w13, w13, w7, ror #6
    2628:	eor	w6, w11, w5, ror #2
    262c:	eor	w13, w13, w7, ror #25
    2630:	orr	w11, w12, w15
    2634:	add	w3, w3, w14
    2638:	eor	w6, w6, w5, ror #22
    263c:	add	w3, w3, w13
    2640:	add	w6, w6, w11
    2644:	add	w4, w4, w3
    2648:	add	w3, w6, w3
    264c:	eor	w6, w8, w7
    2650:	and	w6, w6, w4
    2654:	ldr	w14, [sp, #268]
    2658:	eor	w6, w6, w8
    265c:	ror	w13, w4, #11
    2660:	add	w2, w6, w2
    2664:	mov	w6, #0x208                 	// #520
    2668:	orr	w12, w5, w3
    266c:	ror	w11, w3, #13
    2670:	eor	w13, w13, w4, ror #6
    2674:	movk	w6, #0x8cc7, lsl #16
    2678:	add	w6, w14, w6
    267c:	and	w12, w12, w10
    2680:	and	w14, w5, w3
    2684:	eor	w13, w13, w4, ror #25
    2688:	eor	w11, w11, w3, ror #2
    268c:	add	w6, w2, w6
    2690:	add	w6, w6, w13
    2694:	orr	w2, w12, w14
    2698:	eor	w11, w11, w3, ror #22
    269c:	ldr	w14, [sp, #272]
    26a0:	add	w11, w11, w2
    26a4:	add	w2, w1, w6
    26a8:	eor	w1, w7, w4
    26ac:	add	w11, w11, w6
    26b0:	and	w1, w1, w2
    26b4:	orr	w12, w3, w11
    26b8:	eor	w1, w1, w7
    26bc:	ror	w13, w2, #11
    26c0:	add	w1, w1, w8
    26c4:	mov	w8, #0xfffa                	// #65530
    26c8:	movk	w8, #0x90be, lsl #16
    26cc:	ror	w6, w11, #13
    26d0:	eor	w13, w13, w2, ror #6
    26d4:	and	w15, w3, w11
    26d8:	add	w14, w14, w8
    26dc:	eor	w6, w6, w11, ror #2
    26e0:	and	w8, w12, w5
    26e4:	add	w1, w1, w14
    26e8:	eor	w12, w13, w2, ror #25
    26ec:	orr	w8, w8, w15
    26f0:	eor	w6, w6, w11, ror #22
    26f4:	add	w1, w1, w12
    26f8:	add	w6, w6, w8
    26fc:	add	w10, w10, w1
    2700:	add	w6, w6, w1
    2704:	eor	w1, w4, w2
    2708:	and	w1, w1, w10
    270c:	ldr	w14, [sp, #276]
    2710:	eor	w1, w1, w4
    2714:	ror	w8, w6, #13
    2718:	add	w1, w1, w7
    271c:	mov	w7, #0x6ceb                	// #27883
    2720:	movk	w7, #0xa450, lsl #16
    2724:	ror	w13, w10, #11
    2728:	orr	w12, w11, w6
    272c:	add	w14, w14, w7
    2730:	and	w12, w12, w3
    2734:	and	w15, w11, w6
    2738:	eor	w7, w8, w6, ror #2
    273c:	eor	w13, w13, w10, ror #6
    2740:	orr	w8, w12, w15
    2744:	eor	w13, w13, w10, ror #25
    2748:	add	w1, w1, w14
    274c:	eor	w7, w7, w6, ror #22
    2750:	add	w1, w1, w13
    2754:	add	w7, w7, w8
    2758:	add	w7, w7, w1
    275c:	add	w5, w5, w1
    2760:	eor	w1, w2, w10
    2764:	ldr	w14, [sp, #280]
    2768:	and	w1, w1, w5
    276c:	ror	w13, w5, #11
    2770:	eor	w1, w1, w2
    2774:	ror	w8, w7, #13
    2778:	add	w1, w1, w4
    277c:	mov	w4, #0xa3f7                	// #41975
    2780:	movk	w4, #0xbef9, lsl #16
    2784:	orr	w12, w6, w7
    2788:	add	w14, w14, w4
    278c:	eor	w13, w13, w5, ror #6
    2790:	and	w15, w6, w7
    2794:	and	w12, w12, w11
    2798:	eor	w13, w13, w5, ror #25
    279c:	eor	w4, w8, w7, ror #2
    27a0:	add	w1, w1, w14
    27a4:	orr	w8, w12, w15
    27a8:	add	w1, w1, w13
    27ac:	eor	w4, w4, w7, ror #22
    27b0:	add	w12, w3, w1
    27b4:	add	w4, w4, w8
    27b8:	eor	w8, w10, w5
    27bc:	add	w4, w4, w1
    27c0:	and	w8, w8, w12
    27c4:	ldr	w14, [sp, #284]
    27c8:	eor	w8, w8, w10
    27cc:	orr	w3, w7, w4
    27d0:	add	w8, w8, w2
    27d4:	mov	w2, #0x78f2                	// #30962
    27d8:	movk	w2, #0xc671, lsl #16
    27dc:	ror	w13, w12, #11
    27e0:	add	w14, w14, w2
    27e4:	ror	w1, w4, #13
    27e8:	and	w2, w3, w6
    27ec:	eor	w13, w13, w12, ror #6
    27f0:	and	w15, w7, w4
    27f4:	eor	w1, w1, w4, ror #2
    27f8:	eor	w3, w13, w12, ror #25
    27fc:	orr	w2, w2, w15
    2800:	eor	w1, w1, w4, ror #22
    2804:	add	w8, w8, w14
    2808:	add	w8, w8, w3
    280c:	add	w1, w1, w2
    2810:	add	x3, x0, #0x10
    2814:	add	w2, w1, w8
    2818:	mov	x0, #0x0                   	// #0
    281c:	add	w8, w11, w8
    2820:	stp	w4, w7, [sp, #4]
    2824:	stp	w6, w8, [sp, #12]
    2828:	stp	w12, w5, [sp, #20]
    282c:	str	w10, [sp, #28]
    2830:	b	2838 <_Py_strhex@plt+0x18c8>
    2834:	ldr	w2, [x4, #4]
    2838:	ldr	w1, [x3, x0]
    283c:	add	x4, x9, x0
    2840:	cmp	x0, #0x1c
    2844:	add	w1, w1, w2
    2848:	str	w1, [x3, x0]
    284c:	add	x0, x0, #0x4
    2850:	b.ne	2834 <_Py_strhex@plt+0x18c4>  // b.any
    2854:	add	sp, sp, #0x120
    2858:	ret
    285c:	nop
    2860:	stp	x29, x30, [sp, #-64]!
    2864:	lsl	w4, w2, #3
    2868:	lsr	w5, w2, #29
    286c:	mov	x29, sp
    2870:	ldr	w3, [x0, #52]
    2874:	stp	x21, x22, [sp, #32]
    2878:	mov	x21, x0
    287c:	str	x23, [sp, #48]
    2880:	mov	x23, x2
    2884:	ldr	w2, [x0, #48]
    2888:	stp	x19, x20, [sp, #16]
    288c:	add	x20, x0, #0x38
    2890:	ldr	w0, [x0, #120]
    2894:	adds	w2, w2, w4
    2898:	mov	x19, x1
    289c:	adc	w3, w3, w5
    28a0:	stp	w2, w3, [x21, #48]
    28a4:	cbnz	w0, 2920 <_Py_strhex@plt+0x19b0>
    28a8:	cmp	x23, #0x3f
    28ac:	b.le	2968 <_Py_strhex@plt+0x19f8>
    28b0:	sub	x18, x23, #0x40
    28b4:	lsr	x23, x18, #6
    28b8:	add	x22, x23, #0x1
    28bc:	add	x22, x19, x22, lsl #6
    28c0:	ldp	x0, x1, [x19]
    28c4:	stp	x0, x1, [x20]
    28c8:	add	x19, x19, #0x40
    28cc:	ldp	x2, x3, [x19, #-48]
    28d0:	stp	x2, x3, [x20, #16]
    28d4:	mov	x0, x21
    28d8:	ldp	x2, x3, [x19, #-32]
    28dc:	stp	x2, x3, [x20, #32]
    28e0:	ldp	x2, x3, [x19, #-16]
    28e4:	stp	x2, x3, [x20, #48]
    28e8:	bl	1058 <_Py_strhex@plt+0xe8>
    28ec:	cmp	x19, x22
    28f0:	b.ne	28c0 <_Py_strhex@plt+0x1950>  // b.any
    28f4:	sub	x23, x18, x23, lsl #6
    28f8:	mov	x1, x22
    28fc:	mov	x0, x20
    2900:	mov	x2, x23
    2904:	bl	e50 <memcpy@plt>
    2908:	str	w23, [x21, #120]
    290c:	ldp	x19, x20, [sp, #16]
    2910:	ldp	x21, x22, [sp, #32]
    2914:	ldr	x23, [sp, #48]
    2918:	ldp	x29, x30, [sp], #64
    291c:	ret
    2920:	mov	w22, #0x40                  	// #64
    2924:	sub	w22, w22, w0
    2928:	add	x0, x20, w0, sxtw
    292c:	sxtw	x22, w22
    2930:	cmp	x23, x22
    2934:	csel	x22, x23, x22, le
    2938:	mov	x2, x22
    293c:	bl	e50 <memcpy@plt>
    2940:	ldr	w0, [x21, #120]
    2944:	add	w0, w0, w22
    2948:	str	w0, [x21, #120]
    294c:	cmp	w0, #0x40
    2950:	b.ne	290c <_Py_strhex@plt+0x199c>  // b.any
    2954:	sub	x23, x23, x22
    2958:	add	x19, x19, x22
    295c:	mov	x0, x21
    2960:	bl	1058 <_Py_strhex@plt+0xe8>
    2964:	b	28a8 <_Py_strhex@plt+0x1938>
    2968:	mov	x22, x19
    296c:	b	28f8 <_Py_strhex@plt+0x1988>
    2970:	stp	x29, x30, [sp, #-112]!
    2974:	mov	x29, sp
    2978:	stp	x19, x20, [sp, #16]
    297c:	mov	x19, x0
    2980:	ldr	x0, [x1, #8]
    2984:	ldr	x2, [x0, #168]
    2988:	tbnz	w2, #28, 2a58 <_Py_strhex@plt+0x1ae8>
    298c:	ldr	x0, [x0, #160]
    2990:	cbz	x0, 2a00 <_Py_strhex@plt+0x1a90>
    2994:	ldr	x0, [x0]
    2998:	cbz	x0, 2a00 <_Py_strhex@plt+0x1a90>
    299c:	add	x20, sp, #0x20
    29a0:	mov	x0, x1
    29a4:	mov	w2, #0x0                   	// #0
    29a8:	mov	x1, x20
    29ac:	bl	f30 <PyObject_GetBuffer@plt>
    29b0:	cmn	w0, #0x1
    29b4:	b.eq	2a78 <_Py_strhex@plt+0x1b08>  // b.none
    29b8:	ldr	w0, [sp, #68]
    29bc:	cmp	w0, #0x1
    29c0:	b.gt	2a28 <_Py_strhex@plt+0x1ab8>
    29c4:	ldr	x1, [sp, #32]
    29c8:	mov	x0, x19
    29cc:	ldr	x2, [sp, #48]
    29d0:	bl	2860 <_Py_strhex@plt+0x18f0>
    29d4:	mov	x0, x20
    29d8:	bl	e60 <PyBuffer_Release@plt>
    29dc:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfc78>
    29e0:	ldr	x1, [x1, #4056]
    29e4:	mov	x0, x1
    29e8:	ldr	x2, [x1]
    29ec:	add	x2, x2, #0x1
    29f0:	str	x2, [x1]
    29f4:	ldp	x19, x20, [sp, #16]
    29f8:	ldp	x29, x30, [sp], #112
    29fc:	ret
    2a00:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    2a04:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2a08:	add	x1, x1, #0x488
    2a0c:	ldr	x0, [x0, #4032]
    2a10:	ldr	x0, [x0]
    2a14:	bl	eb0 <PyErr_SetString@plt>
    2a18:	mov	x0, #0x0                   	// #0
    2a1c:	ldp	x19, x20, [sp, #16]
    2a20:	ldp	x29, x30, [sp], #112
    2a24:	ret
    2a28:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    2a2c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2a30:	add	x1, x1, #0x4b8
    2a34:	ldr	x0, [x0, #4024]
    2a38:	ldr	x0, [x0]
    2a3c:	bl	eb0 <PyErr_SetString@plt>
    2a40:	mov	x0, x20
    2a44:	bl	e60 <PyBuffer_Release@plt>
    2a48:	mov	x0, #0x0                   	// #0
    2a4c:	ldp	x19, x20, [sp, #16]
    2a50:	ldp	x29, x30, [sp], #112
    2a54:	ret
    2a58:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    2a5c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2a60:	add	x1, x1, #0x458
    2a64:	ldr	x0, [x0, #4032]
    2a68:	ldr	x0, [x0]
    2a6c:	bl	eb0 <PyErr_SetString@plt>
    2a70:	mov	x0, #0x0                   	// #0
    2a74:	b	29f4 <_Py_strhex@plt+0x1a84>
    2a78:	mov	x0, #0x0                   	// #0
    2a7c:	b	29f4 <_Py_strhex@plt+0x1a84>
    2a80:	ldp	w5, w4, [x0, #120]
    2a84:	add	x2, x1, #0x38
    2a88:	ldp	w7, w6, [x0, #48]
    2a8c:	stp	w7, w6, [x1, #48]
    2a90:	stp	w5, w4, [x1, #120]
    2a94:	add	x3, x0, #0x38
    2a98:	ldp	x4, x5, [x0, #16]
    2a9c:	stp	x4, x5, [x1, #16]
    2aa0:	ldp	x4, x5, [x0, #32]
    2aa4:	stp	x4, x5, [x1, #32]
    2aa8:	ldp	x4, x5, [x0, #56]
    2aac:	stp	x4, x5, [x1, #56]
    2ab0:	ldp	x0, x1, [x0, #72]
    2ab4:	stp	x0, x1, [x2, #16]
    2ab8:	ldp	x0, x1, [x3, #32]
    2abc:	stp	x0, x1, [x2, #32]
    2ac0:	ldp	x0, x1, [x3, #48]
    2ac4:	stp	x0, x1, [x2, #48]
    2ac8:	ret
    2acc:	nop
    2ad0:	stp	x29, x30, [sp, #-32]!
    2ad4:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10c78>
    2ad8:	add	x1, x1, #0xa0
    2adc:	mov	x29, sp
    2ae0:	str	x19, [sp, #16]
    2ae4:	mov	x19, x0
    2ae8:	ldr	x0, [x0, #8]
    2aec:	cmp	x0, x1
    2af0:	b.eq	2af8 <_Py_strhex@plt+0x1b88>  // b.none
    2af4:	add	x0, x1, #0x1a0
    2af8:	bl	f40 <_PyObject_New@plt>
    2afc:	mov	x8, x0
    2b00:	cbz	x0, 2b20 <_Py_strhex@plt+0x1bb0>
    2b04:	mov	x0, x19
    2b08:	mov	x1, x8
    2b0c:	bl	2a80 <_Py_strhex@plt+0x1b10>
    2b10:	mov	x0, x8
    2b14:	ldr	x19, [sp, #16]
    2b18:	ldp	x29, x30, [sp], #32
    2b1c:	ret
    2b20:	mov	x8, #0x0                   	// #0
    2b24:	b	2b10 <_Py_strhex@plt+0x1ba0>
    2b28:	mov	x0, #0x40                  	// #64
    2b2c:	b	ef0 <PyLong_FromLong@plt>
    2b30:	stp	x29, x30, [sp, #-48]!
    2b34:	mov	w3, #0xffffff80            	// #-128
    2b38:	mov	x29, sp
    2b3c:	stp	x19, x20, [sp, #16]
    2b40:	mov	x20, x0
    2b44:	ldr	w0, [x1, #48]
    2b48:	stp	x21, x22, [sp, #32]
    2b4c:	add	x21, x1, #0x38
    2b50:	mov	x19, x1
    2b54:	ubfx	x0, x0, #3, #6
    2b58:	ldr	x22, [x1, #48]
    2b5c:	add	w2, w0, #0x1
    2b60:	strb	w3, [x21, w0, sxtw]
    2b64:	cmp	w2, #0x38
    2b68:	rev	x22, x22
    2b6c:	add	x0, x21, w2, sxtw
    2b70:	b.le	2cdc <_Py_strhex@plt+0x1d6c>
    2b74:	mov	w1, #0x40                  	// #64
    2b78:	sub	w2, w1, w2
    2b7c:	mov	w1, #0x0                   	// #0
    2b80:	sxtw	x2, w2
    2b84:	bl	ec0 <memset@plt>
    2b88:	mov	x0, x19
    2b8c:	bl	1058 <_Py_strhex@plt+0xe8>
    2b90:	stp	xzr, xzr, [x19, #56]
    2b94:	stp	xzr, xzr, [x19, #72]
    2b98:	stp	xzr, xzr, [x19, #88]
    2b9c:	str	xzr, [x19, #104]
    2ba0:	str	x22, [x19, #112]
    2ba4:	mov	x0, x19
    2ba8:	bl	1058 <_Py_strhex@plt+0xe8>
    2bac:	ldrb	w0, [x19, #19]
    2bb0:	strb	w0, [x20]
    2bb4:	ldrh	w0, [x19, #18]
    2bb8:	strb	w0, [x20, #1]
    2bbc:	ldr	w0, [x19, #16]
    2bc0:	lsr	w0, w0, #8
    2bc4:	strb	w0, [x20, #2]
    2bc8:	ldr	w0, [x19, #16]
    2bcc:	strb	w0, [x20, #3]
    2bd0:	ldrb	w0, [x19, #23]
    2bd4:	strb	w0, [x20, #4]
    2bd8:	ldrh	w0, [x19, #22]
    2bdc:	strb	w0, [x20, #5]
    2be0:	ldr	w0, [x19, #20]
    2be4:	lsr	w0, w0, #8
    2be8:	strb	w0, [x20, #6]
    2bec:	ldr	w0, [x19, #20]
    2bf0:	strb	w0, [x20, #7]
    2bf4:	ldrb	w0, [x19, #27]
    2bf8:	strb	w0, [x20, #8]
    2bfc:	ldrh	w0, [x19, #26]
    2c00:	strb	w0, [x20, #9]
    2c04:	ldr	w0, [x19, #24]
    2c08:	lsr	w0, w0, #8
    2c0c:	strb	w0, [x20, #10]
    2c10:	ldr	w0, [x19, #24]
    2c14:	strb	w0, [x20, #11]
    2c18:	ldrb	w0, [x19, #31]
    2c1c:	strb	w0, [x20, #12]
    2c20:	ldrh	w0, [x19, #30]
    2c24:	strb	w0, [x20, #13]
    2c28:	ldr	w0, [x19, #28]
    2c2c:	lsr	w0, w0, #8
    2c30:	strb	w0, [x20, #14]
    2c34:	ldr	w0, [x19, #28]
    2c38:	strb	w0, [x20, #15]
    2c3c:	ldrb	w0, [x19, #35]
    2c40:	strb	w0, [x20, #16]
    2c44:	ldrh	w0, [x19, #34]
    2c48:	strb	w0, [x20, #17]
    2c4c:	ldr	w0, [x19, #32]
    2c50:	lsr	w0, w0, #8
    2c54:	strb	w0, [x20, #18]
    2c58:	ldr	w0, [x19, #32]
    2c5c:	strb	w0, [x20, #19]
    2c60:	ldrb	w0, [x19, #39]
    2c64:	strb	w0, [x20, #20]
    2c68:	ldrh	w0, [x19, #38]
    2c6c:	strb	w0, [x20, #21]
    2c70:	ldr	w0, [x19, #36]
    2c74:	lsr	w0, w0, #8
    2c78:	strb	w0, [x20, #22]
    2c7c:	ldr	w0, [x19, #36]
    2c80:	strb	w0, [x20, #23]
    2c84:	ldrb	w0, [x19, #43]
    2c88:	strb	w0, [x20, #24]
    2c8c:	ldrh	w0, [x19, #42]
    2c90:	strb	w0, [x20, #25]
    2c94:	ldr	w0, [x19, #40]
    2c98:	lsr	w0, w0, #8
    2c9c:	strb	w0, [x20, #26]
    2ca0:	ldr	w0, [x19, #40]
    2ca4:	strb	w0, [x20, #27]
    2ca8:	ldrb	w0, [x19, #47]
    2cac:	strb	w0, [x20, #28]
    2cb0:	ldrh	w0, [x19, #46]
    2cb4:	strb	w0, [x20, #29]
    2cb8:	ldr	w0, [x19, #44]
    2cbc:	lsr	w0, w0, #8
    2cc0:	strb	w0, [x20, #30]
    2cc4:	ldr	w0, [x19, #44]
    2cc8:	strb	w0, [x20, #31]
    2ccc:	ldp	x19, x20, [sp, #16]
    2cd0:	ldp	x21, x22, [sp, #32]
    2cd4:	ldp	x29, x30, [sp], #48
    2cd8:	ret
    2cdc:	mov	w1, #0x38                  	// #56
    2ce0:	sub	w2, w1, w2
    2ce4:	mov	w1, #0x0                   	// #0
    2ce8:	sxtw	x2, w2
    2cec:	bl	ec0 <memset@plt>
    2cf0:	b	2ba0 <_Py_strhex@plt+0x1c30>
    2cf4:	nop
    2cf8:	stp	x29, x30, [sp, #-192]!
    2cfc:	add	x8, sp, #0x40
    2d00:	mov	x29, sp
    2d04:	mov	x1, x8
    2d08:	stp	x19, x20, [sp, #16]
    2d0c:	mov	x20, x0
    2d10:	add	x19, sp, #0x20
    2d14:	bl	2a80 <_Py_strhex@plt+0x1b10>
    2d18:	mov	x1, x8
    2d1c:	mov	x0, x19
    2d20:	bl	2b30 <_Py_strhex@plt+0x1bc0>
    2d24:	ldrsw	x1, [x20, #124]
    2d28:	mov	x0, x19
    2d2c:	bl	f70 <_Py_strhex@plt>
    2d30:	ldp	x19, x20, [sp, #16]
    2d34:	ldp	x29, x30, [sp], #192
    2d38:	ret
    2d3c:	nop
    2d40:	stp	x29, x30, [sp, #-192]!
    2d44:	add	x8, sp, #0x40
    2d48:	mov	x29, sp
    2d4c:	mov	x1, x8
    2d50:	stp	x19, x20, [sp, #16]
    2d54:	mov	x20, x0
    2d58:	add	x19, sp, #0x20
    2d5c:	bl	2a80 <_Py_strhex@plt+0x1b10>
    2d60:	mov	x1, x8
    2d64:	mov	x0, x19
    2d68:	bl	2b30 <_Py_strhex@plt+0x1bc0>
    2d6c:	ldrsw	x1, [x20, #124]
    2d70:	mov	x0, x19
    2d74:	bl	e80 <PyBytes_FromStringAndSize@plt>
    2d78:	ldp	x19, x20, [sp, #16]
    2d7c:	ldp	x29, x30, [sp], #192
    2d80:	ret
    2d84:	nop
    2d88:	b	ed0 <PyObject_Free@plt>
    2d8c:	nop
    2d90:	sub	sp, sp, #0x90
    2d94:	mov	x0, x1
    2d98:	mov	x1, x2
    2d9c:	mov	x2, x3
    2da0:	stp	x29, x30, [sp, #16]
    2da4:	add	x29, sp, #0x10
    2da8:	stp	x19, x20, [sp, #32]
    2dac:	cbz	x3, 2ed4 <_Py_strhex@plt+0x1f64>
    2db0:	ldr	x19, [x3, #16]
    2db4:	add	x19, x1, x19
    2db8:	add	x3, sp, #0x38
    2dbc:	str	x3, [sp]
    2dc0:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10c78>
    2dc4:	add	x4, x4, #0xa0
    2dc8:	mov	x3, x2
    2dcc:	add	x4, x4, #0x340
    2dd0:	mov	w7, #0x0                   	// #0
    2dd4:	mov	w6, #0x1                   	// #1
    2dd8:	mov	w5, #0x0                   	// #0
    2ddc:	mov	x2, #0x0                   	// #0
    2de0:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2de4:	cbz	x0, 2f78 <_Py_strhex@plt+0x2008>
    2de8:	cbz	x19, 2eec <_Py_strhex@plt+0x1f7c>
    2dec:	ldr	x0, [x0]
    2df0:	cbz	x0, 2eec <_Py_strhex@plt+0x1f7c>
    2df4:	ldr	x1, [x0, #8]
    2df8:	ldr	x2, [x1, #168]
    2dfc:	tbnz	w2, #28, 3018 <_Py_strhex@plt+0x20a8>
    2e00:	ldr	x1, [x1, #160]
    2e04:	cbz	x1, 2fe8 <_Py_strhex@plt+0x2078>
    2e08:	ldr	x1, [x1]
    2e0c:	cbz	x1, 2fe8 <_Py_strhex@plt+0x2078>
    2e10:	add	x20, sp, #0x40
    2e14:	mov	w2, #0x0                   	// #0
    2e18:	mov	x1, x20
    2e1c:	bl	f30 <PyObject_GetBuffer@plt>
    2e20:	cmn	w0, #0x1
    2e24:	b.eq	2f78 <_Py_strhex@plt+0x2008>  // b.none
    2e28:	ldr	w0, [sp, #100]
    2e2c:	cmp	w0, #0x1
    2e30:	b.gt	2f90 <_Py_strhex@plt+0x2020>
    2e34:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
    2e38:	add	x0, x0, #0xa0
    2e3c:	add	x0, x0, #0x1a0
    2e40:	bl	f40 <_PyObject_New@plt>
    2e44:	mov	x19, x0
    2e48:	cbz	x0, 2fc8 <_Py_strhex@plt+0x2058>
    2e4c:	mov	x4, #0x9ed8                	// #40664
    2e50:	mov	x3, #0xdd17                	// #56599
    2e54:	mov	x2, #0xb31                 	// #2865
    2e58:	mov	x1, #0x8fa7                	// #36775
    2e5c:	movk	x4, #0xc105, lsl #16
    2e60:	movk	x3, #0x3070, lsl #16
    2e64:	movk	x2, #0xffc0, lsl #16
    2e68:	movk	x1, #0x64f9, lsl #16
    2e6c:	movk	x4, #0xd507, lsl #32
    2e70:	movk	x3, #0x5939, lsl #32
    2e74:	movk	x2, #0x1511, lsl #32
    2e78:	movk	x1, #0x4fa4, lsl #32
    2e7c:	movk	x4, #0x367c, lsl #48
    2e80:	movk	x3, #0xf70e, lsl #48
    2e84:	movk	x2, #0x6858, lsl #48
    2e88:	movk	x1, #0xbefa, lsl #48
    2e8c:	mov	x0, #0x1c00000000          	// #120259084288
    2e90:	stp	x4, x3, [x19, #16]
    2e94:	stp	x2, x1, [x19, #32]
    2e98:	str	xzr, [x19, #48]
    2e9c:	str	x0, [x19, #120]
    2ea0:	bl	f10 <PyErr_Occurred@plt>
    2ea4:	cbnz	x0, 2fb8 <_Py_strhex@plt+0x2048>
    2ea8:	ldr	x1, [sp, #64]
    2eac:	mov	x0, x19
    2eb0:	ldr	x2, [sp, #80]
    2eb4:	bl	2860 <_Py_strhex@plt+0x18f0>
    2eb8:	mov	x0, x20
    2ebc:	bl	e60 <PyBuffer_Release@plt>
    2ec0:	mov	x0, x19
    2ec4:	ldp	x29, x30, [sp, #16]
    2ec8:	ldp	x19, x20, [sp, #32]
    2ecc:	add	sp, sp, #0x90
    2ed0:	ret
    2ed4:	tbnz	x1, #63, 3038 <_Py_strhex@plt+0x20c8>
    2ed8:	cmp	x0, #0x0
    2edc:	mov	x19, x1
    2ee0:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    2ee4:	b.gt	2db8 <_Py_strhex@plt+0x1e48>
    2ee8:	cbnz	x19, 2dec <_Py_strhex@plt+0x1e7c>
    2eec:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
    2ef0:	add	x0, x0, #0xa0
    2ef4:	add	x0, x0, #0x1a0
    2ef8:	bl	f40 <_PyObject_New@plt>
    2efc:	mov	x19, x0
    2f00:	cbz	x0, 2f78 <_Py_strhex@plt+0x2008>
    2f04:	mov	x4, #0x9ed8                	// #40664
    2f08:	mov	x3, #0xdd17                	// #56599
    2f0c:	mov	x2, #0xb31                 	// #2865
    2f10:	mov	x1, #0x8fa7                	// #36775
    2f14:	movk	x4, #0xc105, lsl #16
    2f18:	movk	x3, #0x3070, lsl #16
    2f1c:	movk	x2, #0xffc0, lsl #16
    2f20:	movk	x1, #0x64f9, lsl #16
    2f24:	movk	x4, #0xd507, lsl #32
    2f28:	movk	x3, #0x5939, lsl #32
    2f2c:	movk	x2, #0x1511, lsl #32
    2f30:	movk	x1, #0x4fa4, lsl #32
    2f34:	movk	x4, #0x367c, lsl #48
    2f38:	movk	x3, #0xf70e, lsl #48
    2f3c:	movk	x2, #0x6858, lsl #48
    2f40:	movk	x1, #0xbefa, lsl #48
    2f44:	mov	x0, #0x1c00000000          	// #120259084288
    2f48:	stp	x4, x3, [x19, #16]
    2f4c:	stp	x2, x1, [x19, #32]
    2f50:	str	xzr, [x19, #48]
    2f54:	str	x0, [x19, #120]
    2f58:	bl	f10 <PyErr_Occurred@plt>
    2f5c:	cbz	x0, 2f7c <_Py_strhex@plt+0x200c>
    2f60:	ldr	x0, [x19]
    2f64:	sub	x0, x0, #0x1
    2f68:	str	x0, [x19]
    2f6c:	cbnz	x0, 2f78 <_Py_strhex@plt+0x2008>
    2f70:	mov	x0, x19
    2f74:	bl	e90 <_Py_Dealloc@plt>
    2f78:	mov	x19, #0x0                   	// #0
    2f7c:	mov	x0, x19
    2f80:	ldp	x29, x30, [sp, #16]
    2f84:	ldp	x19, x20, [sp, #32]
    2f88:	add	sp, sp, #0x90
    2f8c:	ret
    2f90:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    2f94:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2f98:	add	x1, x1, #0x4b8
    2f9c:	mov	x19, #0x0                   	// #0
    2fa0:	ldr	x0, [x0, #4024]
    2fa4:	ldr	x0, [x0]
    2fa8:	bl	eb0 <PyErr_SetString@plt>
    2fac:	mov	x0, x20
    2fb0:	bl	e60 <PyBuffer_Release@plt>
    2fb4:	b	2f7c <_Py_strhex@plt+0x200c>
    2fb8:	ldr	x0, [x19]
    2fbc:	sub	x0, x0, #0x1
    2fc0:	str	x0, [x19]
    2fc4:	cbz	x0, 3068 <_Py_strhex@plt+0x20f8>
    2fc8:	mov	x0, x20
    2fcc:	mov	x19, #0x0                   	// #0
    2fd0:	bl	e60 <PyBuffer_Release@plt>
    2fd4:	mov	x0, x19
    2fd8:	ldp	x29, x30, [sp, #16]
    2fdc:	ldp	x19, x20, [sp, #32]
    2fe0:	add	sp, sp, #0x90
    2fe4:	ret
    2fe8:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    2fec:	mov	x19, #0x0                   	// #0
    2ff0:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2ff4:	add	x1, x1, #0x488
    2ff8:	ldr	x0, [x0, #4032]
    2ffc:	ldr	x0, [x0]
    3000:	bl	eb0 <PyErr_SetString@plt>
    3004:	mov	x0, x19
    3008:	ldp	x29, x30, [sp, #16]
    300c:	ldp	x19, x20, [sp, #32]
    3010:	add	sp, sp, #0x90
    3014:	ret
    3018:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    301c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3020:	mov	x19, #0x0                   	// #0
    3024:	add	x1, x1, #0x458
    3028:	ldr	x0, [x0, #4032]
    302c:	ldr	x0, [x0]
    3030:	bl	eb0 <PyErr_SetString@plt>
    3034:	b	2f7c <_Py_strhex@plt+0x200c>
    3038:	add	x2, sp, #0x38
    303c:	str	x2, [sp]
    3040:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10c78>
    3044:	add	x4, x4, #0xa0
    3048:	add	x4, x4, #0x340
    304c:	mov	w7, #0x0                   	// #0
    3050:	mov	w6, #0x1                   	// #1
    3054:	mov	w5, #0x0                   	// #0
    3058:	mov	x2, #0x0                   	// #0
    305c:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    3060:	cbnz	x0, 2dec <_Py_strhex@plt+0x1e7c>
    3064:	b	2f78 <_Py_strhex@plt+0x2008>
    3068:	mov	x0, x19
    306c:	bl	e90 <_Py_Dealloc@plt>
    3070:	b	2fc8 <_Py_strhex@plt+0x2058>
    3074:	nop
    3078:	sub	sp, sp, #0x90
    307c:	mov	x0, x1
    3080:	mov	x1, x2
    3084:	mov	x2, x3
    3088:	stp	x29, x30, [sp, #16]
    308c:	add	x29, sp, #0x10
    3090:	stp	x19, x20, [sp, #32]
    3094:	cbz	x3, 31b8 <_Py_strhex@plt+0x2248>
    3098:	ldr	x19, [x3, #16]
    309c:	add	x19, x1, x19
    30a0:	add	x3, sp, #0x38
    30a4:	str	x3, [sp]
    30a8:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10c78>
    30ac:	add	x4, x4, #0xa0
    30b0:	mov	x3, x2
    30b4:	add	x4, x4, #0x380
    30b8:	mov	w7, #0x0                   	// #0
    30bc:	mov	w6, #0x1                   	// #1
    30c0:	mov	w5, #0x0                   	// #0
    30c4:	mov	x2, #0x0                   	// #0
    30c8:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    30cc:	cbz	x0, 3258 <_Py_strhex@plt+0x22e8>
    30d0:	cbz	x19, 31d0 <_Py_strhex@plt+0x2260>
    30d4:	ldr	x0, [x0]
    30d8:	cbz	x0, 31d0 <_Py_strhex@plt+0x2260>
    30dc:	ldr	x1, [x0, #8]
    30e0:	ldr	x2, [x1, #168]
    30e4:	tbnz	w2, #28, 32f8 <_Py_strhex@plt+0x2388>
    30e8:	ldr	x1, [x1, #160]
    30ec:	cbz	x1, 32c8 <_Py_strhex@plt+0x2358>
    30f0:	ldr	x1, [x1]
    30f4:	cbz	x1, 32c8 <_Py_strhex@plt+0x2358>
    30f8:	add	x20, sp, #0x40
    30fc:	mov	w2, #0x0                   	// #0
    3100:	mov	x1, x20
    3104:	bl	f30 <PyObject_GetBuffer@plt>
    3108:	cmn	w0, #0x1
    310c:	b.eq	3258 <_Py_strhex@plt+0x22e8>  // b.none
    3110:	ldr	w0, [sp, #100]
    3114:	cmp	w0, #0x1
    3118:	b.gt	3270 <_Py_strhex@plt+0x2300>
    311c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
    3120:	add	x0, x0, #0xa0
    3124:	bl	f40 <_PyObject_New@plt>
    3128:	mov	x19, x0
    312c:	cbz	x0, 32a8 <_Py_strhex@plt+0x2338>
    3130:	mov	x4, #0xe667                	// #58983
    3134:	mov	x3, #0xf372                	// #62322
    3138:	mov	x2, #0x527f                	// #21119
    313c:	mov	x1, #0xd9ab                	// #55723
    3140:	movk	x4, #0x6a09, lsl #16
    3144:	movk	x3, #0x3c6e, lsl #16
    3148:	movk	x2, #0x510e, lsl #16
    314c:	movk	x1, #0x1f83, lsl #16
    3150:	movk	x4, #0xae85, lsl #32
    3154:	movk	x3, #0xf53a, lsl #32
    3158:	movk	x2, #0x688c, lsl #32
    315c:	movk	x1, #0xcd19, lsl #32
    3160:	movk	x4, #0xbb67, lsl #48
    3164:	movk	x3, #0xa54f, lsl #48
    3168:	movk	x2, #0x9b05, lsl #48
    316c:	movk	x1, #0x5be0, lsl #48
    3170:	mov	x0, #0x2000000000          	// #137438953472
    3174:	stp	x4, x3, [x19, #16]
    3178:	stp	x2, x1, [x19, #32]
    317c:	str	xzr, [x19, #48]
    3180:	str	x0, [x19, #120]
    3184:	bl	f10 <PyErr_Occurred@plt>
    3188:	cbnz	x0, 3298 <_Py_strhex@plt+0x2328>
    318c:	ldr	x1, [sp, #64]
    3190:	mov	x0, x19
    3194:	ldr	x2, [sp, #80]
    3198:	bl	2860 <_Py_strhex@plt+0x18f0>
    319c:	mov	x0, x20
    31a0:	bl	e60 <PyBuffer_Release@plt>
    31a4:	mov	x0, x19
    31a8:	ldp	x29, x30, [sp, #16]
    31ac:	ldp	x19, x20, [sp, #32]
    31b0:	add	sp, sp, #0x90
    31b4:	ret
    31b8:	tbnz	x1, #63, 3318 <_Py_strhex@plt+0x23a8>
    31bc:	cmp	x0, #0x0
    31c0:	mov	x19, x1
    31c4:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    31c8:	b.gt	30a0 <_Py_strhex@plt+0x2130>
    31cc:	cbnz	x19, 30d4 <_Py_strhex@plt+0x2164>
    31d0:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10c78>
    31d4:	add	x0, x0, #0xa0
    31d8:	bl	f40 <_PyObject_New@plt>
    31dc:	mov	x19, x0
    31e0:	cbz	x0, 3258 <_Py_strhex@plt+0x22e8>
    31e4:	mov	x4, #0xe667                	// #58983
    31e8:	mov	x3, #0xf372                	// #62322
    31ec:	mov	x2, #0x527f                	// #21119
    31f0:	mov	x1, #0xd9ab                	// #55723
    31f4:	movk	x4, #0x6a09, lsl #16
    31f8:	movk	x3, #0x3c6e, lsl #16
    31fc:	movk	x2, #0x510e, lsl #16
    3200:	movk	x1, #0x1f83, lsl #16
    3204:	movk	x4, #0xae85, lsl #32
    3208:	movk	x3, #0xf53a, lsl #32
    320c:	movk	x2, #0x688c, lsl #32
    3210:	movk	x1, #0xcd19, lsl #32
    3214:	movk	x4, #0xbb67, lsl #48
    3218:	movk	x3, #0xa54f, lsl #48
    321c:	movk	x2, #0x9b05, lsl #48
    3220:	movk	x1, #0x5be0, lsl #48
    3224:	mov	x0, #0x2000000000          	// #137438953472
    3228:	stp	x4, x3, [x19, #16]
    322c:	stp	x2, x1, [x19, #32]
    3230:	str	xzr, [x19, #48]
    3234:	str	x0, [x19, #120]
    3238:	bl	f10 <PyErr_Occurred@plt>
    323c:	cbz	x0, 325c <_Py_strhex@plt+0x22ec>
    3240:	ldr	x0, [x19]
    3244:	sub	x0, x0, #0x1
    3248:	str	x0, [x19]
    324c:	cbnz	x0, 3258 <_Py_strhex@plt+0x22e8>
    3250:	mov	x0, x19
    3254:	bl	e90 <_Py_Dealloc@plt>
    3258:	mov	x19, #0x0                   	// #0
    325c:	mov	x0, x19
    3260:	ldp	x29, x30, [sp, #16]
    3264:	ldp	x19, x20, [sp, #32]
    3268:	add	sp, sp, #0x90
    326c:	ret
    3270:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    3274:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3278:	add	x1, x1, #0x4b8
    327c:	mov	x19, #0x0                   	// #0
    3280:	ldr	x0, [x0, #4024]
    3284:	ldr	x0, [x0]
    3288:	bl	eb0 <PyErr_SetString@plt>
    328c:	mov	x0, x20
    3290:	bl	e60 <PyBuffer_Release@plt>
    3294:	b	325c <_Py_strhex@plt+0x22ec>
    3298:	ldr	x0, [x19]
    329c:	sub	x0, x0, #0x1
    32a0:	str	x0, [x19]
    32a4:	cbz	x0, 3348 <_Py_strhex@plt+0x23d8>
    32a8:	mov	x0, x20
    32ac:	mov	x19, #0x0                   	// #0
    32b0:	bl	e60 <PyBuffer_Release@plt>
    32b4:	mov	x0, x19
    32b8:	ldp	x29, x30, [sp, #16]
    32bc:	ldp	x19, x20, [sp, #32]
    32c0:	add	sp, sp, #0x90
    32c4:	ret
    32c8:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    32cc:	mov	x19, #0x0                   	// #0
    32d0:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    32d4:	add	x1, x1, #0x488
    32d8:	ldr	x0, [x0, #4032]
    32dc:	ldr	x0, [x0]
    32e0:	bl	eb0 <PyErr_SetString@plt>
    32e4:	mov	x0, x19
    32e8:	ldp	x29, x30, [sp, #16]
    32ec:	ldp	x19, x20, [sp, #32]
    32f0:	add	sp, sp, #0x90
    32f4:	ret
    32f8:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfc78>
    32fc:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3300:	mov	x19, #0x0                   	// #0
    3304:	add	x1, x1, #0x458
    3308:	ldr	x0, [x0, #4032]
    330c:	ldr	x0, [x0]
    3310:	bl	eb0 <PyErr_SetString@plt>
    3314:	b	325c <_Py_strhex@plt+0x22ec>
    3318:	add	x2, sp, #0x38
    331c:	str	x2, [sp]
    3320:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10c78>
    3324:	add	x4, x4, #0xa0
    3328:	add	x4, x4, #0x380
    332c:	mov	w7, #0x0                   	// #0
    3330:	mov	w6, #0x1                   	// #1
    3334:	mov	w5, #0x0                   	// #0
    3338:	mov	x2, #0x0                   	// #0
    333c:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    3340:	cbnz	x0, 30d4 <_Py_strhex@plt+0x2164>
    3344:	b	3258 <_Py_strhex@plt+0x22e8>
    3348:	mov	x0, x19
    334c:	bl	e90 <_Py_Dealloc@plt>
    3350:	b	32a8 <_Py_strhex@plt+0x2338>
    3354:	nop
    3358:	ldr	w0, [x0, #124]
    335c:	cmp	w0, #0x20
    3360:	b.eq	3374 <_Py_strhex@plt+0x2404>  // b.none
    3364:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    3368:	mov	x1, #0x6                   	// #6
    336c:	add	x0, x0, #0x570
    3370:	b	f60 <PyUnicode_FromStringAndSize@plt>
    3374:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    3378:	mov	x1, #0x6                   	// #6
    337c:	add	x0, x0, #0x560
    3380:	b	f60 <PyUnicode_FromStringAndSize@plt>
    3384:	nop

0000000000003388 <PyInit__sha256@@Base>:
    3388:	stp	x29, x30, [sp, #-48]!
    338c:	mov	x29, sp
    3390:	stp	x19, x20, [sp, #16]
    3394:	adrp	x20, 13000 <PyInit__sha256@@Base+0xfc78>
    3398:	stp	x21, x22, [sp, #32]
    339c:	adrp	x22, 14000 <PyInit__sha256@@Base+0x10c78>
    33a0:	add	x19, x22, #0xa0
    33a4:	add	x21, x19, #0x1a0
    33a8:	ldr	x20, [x20, #4048]
    33ac:	mov	x0, x21
    33b0:	str	x20, [x21, #8]
    33b4:	bl	ee0 <PyType_Ready@plt>
    33b8:	tbnz	w0, #31, 3430 <PyInit__sha256@@Base+0xa8>
    33bc:	mov	x0, x19
    33c0:	str	x20, [x19, #8]
    33c4:	bl	ee0 <PyType_Ready@plt>
    33c8:	tbnz	w0, #31, 3430 <PyInit__sha256@@Base+0xa8>
    33cc:	add	x0, x19, #0x3c0
    33d0:	mov	w1, #0x3f5                 	// #1013
    33d4:	bl	f20 <PyModule_Create2@plt>
    33d8:	mov	x20, x0
    33dc:	cbz	x0, 341c <PyInit__sha256@@Base+0x94>
    33e0:	ldr	x3, [x19, #416]
    33e4:	mov	x2, x21
    33e8:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    33ec:	add	x1, x1, #0x4d8
    33f0:	add	x3, x3, #0x1
    33f4:	str	x3, [x19, #416]
    33f8:	bl	f50 <PyModule_AddObject@plt>
    33fc:	ldr	x3, [x22, #160]
    3400:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3404:	mov	x2, x19
    3408:	add	x1, x1, #0x4e8
    340c:	add	x3, x3, #0x1
    3410:	mov	x0, x20
    3414:	str	x3, [x22, #160]
    3418:	bl	f50 <PyModule_AddObject@plt>
    341c:	mov	x0, x20
    3420:	ldp	x19, x20, [sp, #16]
    3424:	ldp	x21, x22, [sp, #32]
    3428:	ldp	x29, x30, [sp], #48
    342c:	ret
    3430:	mov	x20, #0x0                   	// #0
    3434:	mov	x0, x20
    3438:	ldp	x19, x20, [sp, #16]
    343c:	ldp	x21, x22, [sp, #32]
    3440:	ldp	x29, x30, [sp], #48
    3444:	ret

Disassembly of section .fini:

0000000000003448 <.fini>:
    3448:	stp	x29, x30, [sp, #-16]!
    344c:	mov	x29, sp
    3450:	ldp	x29, x30, [sp], #16
    3454:	ret
