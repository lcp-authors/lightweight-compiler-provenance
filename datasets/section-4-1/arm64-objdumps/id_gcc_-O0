
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//id_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000910 <_init>:
 910:	stp	x29, x30, [sp, #-16]!
 914:	mov	x29, sp
 918:	bl	a30 <call_weak_fn>
 91c:	ldp	x29, x30, [sp], #16
 920:	ret

Disassembly of section .plt:

0000000000000930 <.plt>:
 930:	stp	x16, x30, [sp, #-16]!
 934:	adrp	x16, 11000 <__FRAME_END__+0xf708>
 938:	ldr	x17, [x16, #4088]
 93c:	add	x16, x16, #0xff8
 940:	br	x17
 944:	nop
 948:	nop
 94c:	nop

0000000000000950 <builtin_error@plt>:
 950:	adrp	x16, 12000 <builtin_error>
 954:	ldr	x17, [x16]
 958:	add	x16, x16, #0x0
 95c:	br	x17

0000000000000960 <__cxa_finalize@plt>:
 960:	adrp	x16, 12000 <builtin_error>
 964:	ldr	x17, [x16, #8]
 968:	add	x16, x16, #0x8
 96c:	br	x17

0000000000000970 <builtin_help@plt>:
 970:	adrp	x16, 12000 <builtin_error>
 974:	ldr	x17, [x16, #16]
 978:	add	x16, x16, #0x10
 97c:	br	x17

0000000000000980 <getpwnam@plt>:
 980:	adrp	x16, 12000 <builtin_error>
 984:	ldr	x17, [x16, #24]
 988:	add	x16, x16, #0x18
 98c:	br	x17

0000000000000990 <get_group_array@plt>:
 990:	adrp	x16, 12000 <builtin_error>
 994:	ldr	x17, [x16, #32]
 998:	add	x16, x16, #0x20
 99c:	br	x17

00000000000009a0 <builtin_usage@plt>:
 9a0:	adrp	x16, 12000 <builtin_error>
 9a4:	ldr	x17, [x16, #40]
 9a8:	add	x16, x16, #0x28
 9ac:	br	x17

00000000000009b0 <__gmon_start__@plt>:
 9b0:	adrp	x16, 12000 <builtin_error>
 9b4:	ldr	x17, [x16, #48]
 9b8:	add	x16, x16, #0x30
 9bc:	br	x17

00000000000009c0 <getpwuid@plt>:
 9c0:	adrp	x16, 12000 <builtin_error>
 9c4:	ldr	x17, [x16, #56]
 9c8:	add	x16, x16, #0x38
 9cc:	br	x17

00000000000009d0 <internal_getopt@plt>:
 9d0:	adrp	x16, 12000 <builtin_error>
 9d4:	ldr	x17, [x16, #64]
 9d8:	add	x16, x16, #0x40
 9dc:	br	x17

00000000000009e0 <reset_internal_getopt@plt>:
 9e0:	adrp	x16, 12000 <builtin_error>
 9e4:	ldr	x17, [x16, #72]
 9e8:	add	x16, x16, #0x48
 9ec:	br	x17

00000000000009f0 <fflush@plt>:
 9f0:	adrp	x16, 12000 <builtin_error>
 9f4:	ldr	x17, [x16, #80]
 9f8:	add	x16, x16, #0x50
 9fc:	br	x17

0000000000000a00 <printf@plt>:
 a00:	adrp	x16, 12000 <builtin_error>
 a04:	ldr	x17, [x16, #88]
 a08:	add	x16, x16, #0x58
 a0c:	br	x17

0000000000000a10 <putchar@plt>:
 a10:	adrp	x16, 12000 <builtin_error>
 a14:	ldr	x17, [x16, #96]
 a18:	add	x16, x16, #0x60
 a1c:	br	x17

0000000000000a20 <getgrgid@plt>:
 a20:	adrp	x16, 12000 <builtin_error>
 a24:	ldr	x17, [x16, #104]
 a28:	add	x16, x16, #0x68
 a2c:	br	x17

Disassembly of section .text:

0000000000000a30 <call_weak_fn>:
     a30:	adrp	x0, 11000 <__FRAME_END__+0xf708>
     a34:	ldr	x0, [x0, #4040]
     a38:	cbz	x0, a40 <call_weak_fn+0x10>
     a3c:	b	9b0 <__gmon_start__@plt>
     a40:	ret

0000000000000a44 <deregister_tm_clones>:
     a44:	stp	x29, x30, [sp, #-32]!
     a48:	mov	x29, sp
     a4c:	adrp	x0, 12000 <builtin_error>
     a50:	add	x0, x0, #0xc0
     a54:	str	x0, [sp, #24]
     a58:	ldr	x0, [sp, #24]
     a5c:	str	x0, [sp, #24]
     a60:	ldr	x1, [sp, #24]
     a64:	adrp	x0, 12000 <builtin_error>
     a68:	add	x0, x0, #0xc0
     a6c:	cmp	x1, x0
     a70:	b.eq	aa8 <deregister_tm_clones+0x64>  // b.none
     a74:	adrp	x0, 11000 <__FRAME_END__+0xf708>
     a78:	ldr	x0, [x0, #4016]
     a7c:	str	x0, [sp, #16]
     a80:	ldr	x0, [sp, #16]
     a84:	str	x0, [sp, #16]
     a88:	ldr	x0, [sp, #16]
     a8c:	cmp	x0, #0x0
     a90:	b.eq	aac <deregister_tm_clones+0x68>  // b.none
     a94:	ldr	x1, [sp, #16]
     a98:	adrp	x0, 12000 <builtin_error>
     a9c:	add	x0, x0, #0xc0
     aa0:	blr	x1
     aa4:	b	aac <deregister_tm_clones+0x68>
     aa8:	nop
     aac:	ldp	x29, x30, [sp], #32
     ab0:	ret

0000000000000ab4 <register_tm_clones>:
     ab4:	stp	x29, x30, [sp, #-48]!
     ab8:	mov	x29, sp
     abc:	adrp	x0, 12000 <builtin_error>
     ac0:	add	x0, x0, #0xc0
     ac4:	str	x0, [sp, #40]
     ac8:	ldr	x0, [sp, #40]
     acc:	str	x0, [sp, #40]
     ad0:	ldr	x1, [sp, #40]
     ad4:	adrp	x0, 12000 <builtin_error>
     ad8:	add	x0, x0, #0xc0
     adc:	sub	x0, x1, x0
     ae0:	asr	x0, x0, #3
     ae4:	lsr	x1, x0, #63
     ae8:	add	x0, x1, x0
     aec:	asr	x0, x0, #1
     af0:	str	x0, [sp, #32]
     af4:	ldr	x0, [sp, #32]
     af8:	cmp	x0, #0x0
     afc:	b.eq	b38 <register_tm_clones+0x84>  // b.none
     b00:	adrp	x0, 11000 <__FRAME_END__+0xf708>
     b04:	ldr	x0, [x0, #4064]
     b08:	str	x0, [sp, #24]
     b0c:	ldr	x0, [sp, #24]
     b10:	str	x0, [sp, #24]
     b14:	ldr	x0, [sp, #24]
     b18:	cmp	x0, #0x0
     b1c:	b.eq	b3c <register_tm_clones+0x88>  // b.none
     b20:	ldr	x2, [sp, #24]
     b24:	ldr	x1, [sp, #32]
     b28:	adrp	x0, 12000 <builtin_error>
     b2c:	add	x0, x0, #0xc0
     b30:	blr	x2
     b34:	b	b3c <register_tm_clones+0x88>
     b38:	nop
     b3c:	ldp	x29, x30, [sp], #48
     b40:	ret

0000000000000b44 <__do_global_dtors_aux>:
     b44:	stp	x29, x30, [sp, #-16]!
     b48:	mov	x29, sp
     b4c:	adrp	x0, 12000 <builtin_error>
     b50:	add	x0, x0, #0xc0
     b54:	ldrb	w0, [x0]
     b58:	and	x0, x0, #0xff
     b5c:	cmp	x0, #0x0
     b60:	b.ne	b9c <__do_global_dtors_aux+0x58>  // b.any
     b64:	adrp	x0, 11000 <__FRAME_END__+0xf708>
     b68:	ldr	x0, [x0, #4024]
     b6c:	cmp	x0, #0x0
     b70:	b.eq	b84 <__do_global_dtors_aux+0x40>  // b.none
     b74:	adrp	x0, 12000 <builtin_error>
     b78:	add	x0, x0, #0x70
     b7c:	ldr	x0, [x0]
     b80:	bl	960 <__cxa_finalize@plt>
     b84:	bl	a44 <deregister_tm_clones>
     b88:	adrp	x0, 12000 <builtin_error>
     b8c:	add	x0, x0, #0xc0
     b90:	mov	w1, #0x1                   	// #1
     b94:	strb	w1, [x0]
     b98:	b	ba0 <__do_global_dtors_aux+0x5c>
     b9c:	nop
     ba0:	ldp	x29, x30, [sp], #16
     ba4:	ret

0000000000000ba8 <frame_dummy>:
     ba8:	stp	x29, x30, [sp, #-16]!
     bac:	mov	x29, sp
     bb0:	bl	ab4 <register_tm_clones>
     bb4:	nop
     bb8:	ldp	x29, x30, [sp], #16
     bbc:	ret

0000000000000bc0 <id_builtin>:
     bc0:	stp	x29, x30, [sp, #-48]!
     bc4:	mov	x29, sp
     bc8:	str	x0, [sp, #24]
     bcc:	adrp	x0, 12000 <builtin_error>
     bd0:	add	x0, x0, #0xc8
     bd4:	str	wzr, [x0]
     bd8:	bl	9e0 <reset_internal_getopt@plt>
     bdc:	b	d10 <id_builtin+0x150>
     be0:	ldr	w0, [sp, #44]
     be4:	cmp	w0, #0x75
     be8:	b.eq	cd8 <id_builtin+0x118>  // b.none
     bec:	ldr	w0, [sp, #44]
     bf0:	cmp	w0, #0x75
     bf4:	b.gt	d04 <id_builtin+0x144>
     bf8:	ldr	w0, [sp, #44]
     bfc:	cmp	w0, #0x72
     c00:	b.eq	cb8 <id_builtin+0xf8>  // b.none
     c04:	ldr	w0, [sp, #44]
     c08:	cmp	w0, #0x72
     c0c:	b.gt	d04 <id_builtin+0x144>
     c10:	ldr	w0, [sp, #44]
     c14:	cmp	w0, #0x6e
     c18:	b.eq	c98 <id_builtin+0xd8>  // b.none
     c1c:	ldr	w0, [sp, #44]
     c20:	cmp	w0, #0x6e
     c24:	b.gt	d04 <id_builtin+0x144>
     c28:	ldr	w0, [sp, #44]
     c2c:	cmp	w0, #0x67
     c30:	b.eq	c78 <id_builtin+0xb8>  // b.none
     c34:	ldr	w0, [sp, #44]
     c38:	cmp	w0, #0x67
     c3c:	b.gt	d04 <id_builtin+0x144>
     c40:	ldr	w0, [sp, #44]
     c44:	cmn	w0, #0x63
     c48:	b.eq	cf8 <id_builtin+0x138>  // b.none
     c4c:	ldr	w0, [sp, #44]
     c50:	cmp	w0, #0x47
     c54:	b.ne	d04 <id_builtin+0x144>  // b.any
     c58:	adrp	x0, 12000 <builtin_error>
     c5c:	add	x0, x0, #0xc8
     c60:	ldr	w0, [x0]
     c64:	orr	w1, w0, #0x1
     c68:	adrp	x0, 12000 <builtin_error>
     c6c:	add	x0, x0, #0xc8
     c70:	str	w1, [x0]
     c74:	b	d10 <id_builtin+0x150>
     c78:	adrp	x0, 12000 <builtin_error>
     c7c:	add	x0, x0, #0xc8
     c80:	ldr	w0, [x0]
     c84:	orr	w1, w0, #0x2
     c88:	adrp	x0, 12000 <builtin_error>
     c8c:	add	x0, x0, #0xc8
     c90:	str	w1, [x0]
     c94:	b	d10 <id_builtin+0x150>
     c98:	adrp	x0, 12000 <builtin_error>
     c9c:	add	x0, x0, #0xc8
     ca0:	ldr	w0, [x0]
     ca4:	orr	w1, w0, #0x4
     ca8:	adrp	x0, 12000 <builtin_error>
     cac:	add	x0, x0, #0xc8
     cb0:	str	w1, [x0]
     cb4:	b	d10 <id_builtin+0x150>
     cb8:	adrp	x0, 12000 <builtin_error>
     cbc:	add	x0, x0, #0xc8
     cc0:	ldr	w0, [x0]
     cc4:	orr	w1, w0, #0x8
     cc8:	adrp	x0, 12000 <builtin_error>
     ccc:	add	x0, x0, #0xc8
     cd0:	str	w1, [x0]
     cd4:	b	d10 <id_builtin+0x150>
     cd8:	adrp	x0, 12000 <builtin_error>
     cdc:	add	x0, x0, #0xc8
     ce0:	ldr	w0, [x0]
     ce4:	orr	w1, w0, #0x10
     ce8:	adrp	x0, 12000 <builtin_error>
     cec:	add	x0, x0, #0xc8
     cf0:	str	w1, [x0]
     cf4:	b	d10 <id_builtin+0x150>
     cf8:	bl	970 <builtin_help@plt>
     cfc:	mov	w0, #0x102                 	// #258
     d00:	b	f84 <id_builtin+0x3c4>
     d04:	bl	9a0 <builtin_usage@plt>
     d08:	mov	w0, #0x102                 	// #258
     d0c:	b	f84 <id_builtin+0x3c4>
     d10:	adrp	x0, 1000 <inituser+0x74>
     d14:	add	x1, x0, #0x5e8
     d18:	ldr	x0, [sp, #24]
     d1c:	bl	9d0 <internal_getopt@plt>
     d20:	str	w0, [sp, #44]
     d24:	ldr	w0, [sp, #44]
     d28:	cmn	w0, #0x1
     d2c:	b.ne	be0 <id_builtin+0x20>  // b.any
     d30:	adrp	x0, 11000 <__FRAME_END__+0xf708>
     d34:	ldr	x0, [x0, #4056]
     d38:	ldr	x0, [x0]
     d3c:	str	x0, [sp, #24]
     d40:	ldr	x0, [sp, #24]
     d44:	cmp	x0, #0x0
     d48:	b.eq	d5c <id_builtin+0x19c>  // b.none
     d4c:	ldr	x0, [sp, #24]
     d50:	ldr	x0, [x0, #8]
     d54:	ldr	x0, [x0]
     d58:	b	d60 <id_builtin+0x1a0>
     d5c:	mov	x0, #0x0                   	// #0
     d60:	str	x0, [sp, #32]
     d64:	adrp	x0, 12000 <builtin_error>
     d68:	add	x0, x0, #0xc8
     d6c:	ldr	w0, [x0]
     d70:	and	w0, w0, #0x1
     d74:	cmp	w0, #0x0
     d78:	cset	w0, ne  // ne = any
     d7c:	and	w0, w0, #0xff
     d80:	mov	w1, w0
     d84:	adrp	x0, 12000 <builtin_error>
     d88:	add	x0, x0, #0xc8
     d8c:	ldr	w0, [x0]
     d90:	and	w0, w0, #0x2
     d94:	cmp	w0, #0x0
     d98:	cset	w0, ne  // ne = any
     d9c:	and	w0, w0, #0xff
     da0:	add	w0, w1, w0
     da4:	adrp	x1, 12000 <builtin_error>
     da8:	add	x1, x1, #0xc8
     dac:	ldr	w1, [x1]
     db0:	and	w1, w1, #0x10
     db4:	cmp	w1, #0x0
     db8:	cset	w1, ne  // ne = any
     dbc:	and	w1, w1, #0xff
     dc0:	add	w0, w0, w1
     dc4:	str	w0, [sp, #44]
     dc8:	ldr	w0, [sp, #44]
     dcc:	cmp	w0, #0x1
     dd0:	b.gt	df8 <id_builtin+0x238>
     dd4:	ldr	w0, [sp, #44]
     dd8:	cmp	w0, #0x0
     ddc:	b.ne	e04 <id_builtin+0x244>  // b.any
     de0:	adrp	x0, 12000 <builtin_error>
     de4:	add	x0, x0, #0xc8
     de8:	ldr	w0, [x0]
     dec:	and	w0, w0, #0xc
     df0:	cmp	w0, #0x0
     df4:	b.eq	e04 <id_builtin+0x244>  // b.none
     df8:	bl	9a0 <builtin_usage@plt>
     dfc:	mov	w0, #0x102                 	// #258
     e00:	b	f84 <id_builtin+0x3c4>
     e04:	ldr	x0, [sp, #24]
     e08:	cmp	x0, #0x0
     e0c:	b.eq	e2c <id_builtin+0x26c>  // b.none
     e10:	ldr	x0, [sp, #24]
     e14:	ldr	x0, [x0]
     e18:	cmp	x0, #0x0
     e1c:	b.eq	e2c <id_builtin+0x26c>  // b.none
     e20:	bl	9a0 <builtin_usage@plt>
     e24:	mov	w0, #0x102                 	// #258
     e28:	b	f84 <id_builtin+0x3c4>
     e2c:	ldr	x0, [sp, #32]
     e30:	bl	f8c <inituser>
     e34:	cmp	w0, #0x0
     e38:	b.ge	e44 <id_builtin+0x284>  // b.tcont
     e3c:	mov	w0, #0x1                   	// #1
     e40:	b	f84 <id_builtin+0x3c4>
     e44:	str	wzr, [sp, #44]
     e48:	adrp	x0, 12000 <builtin_error>
     e4c:	add	x0, x0, #0xc8
     e50:	ldr	w0, [x0]
     e54:	and	w0, w0, #0x10
     e58:	cmp	w0, #0x0
     e5c:	b.eq	eac <id_builtin+0x2ec>  // b.none
     e60:	adrp	x0, 12000 <builtin_error>
     e64:	add	x0, x0, #0xc8
     e68:	ldr	w0, [x0]
     e6c:	and	w0, w0, #0x8
     e70:	cmp	w0, #0x0
     e74:	b.eq	e88 <id_builtin+0x2c8>  // b.none
     e78:	adrp	x0, 12000 <builtin_error>
     e7c:	add	x0, x0, #0xcc
     e80:	ldr	w0, [x0]
     e84:	b	e94 <id_builtin+0x2d4>
     e88:	adrp	x0, 12000 <builtin_error>
     e8c:	add	x0, x0, #0xd0
     e90:	ldr	w0, [x0]
     e94:	bl	109c <id_pruser>
     e98:	mov	w1, w0
     e9c:	ldr	w0, [sp, #44]
     ea0:	add	w0, w0, w1
     ea4:	str	w0, [sp, #44]
     ea8:	b	f5c <id_builtin+0x39c>
     eac:	adrp	x0, 12000 <builtin_error>
     eb0:	add	x0, x0, #0xc8
     eb4:	ldr	w0, [x0]
     eb8:	and	w0, w0, #0x2
     ebc:	cmp	w0, #0x0
     ec0:	b.eq	f10 <id_builtin+0x350>  // b.none
     ec4:	adrp	x0, 12000 <builtin_error>
     ec8:	add	x0, x0, #0xc8
     ecc:	ldr	w0, [x0]
     ed0:	and	w0, w0, #0x8
     ed4:	cmp	w0, #0x0
     ed8:	b.eq	eec <id_builtin+0x32c>  // b.none
     edc:	adrp	x0, 12000 <builtin_error>
     ee0:	add	x0, x0, #0xd4
     ee4:	ldr	w0, [x0]
     ee8:	b	ef8 <id_builtin+0x338>
     eec:	adrp	x0, 12000 <builtin_error>
     ef0:	add	x0, x0, #0xd8
     ef4:	ldr	w0, [x0]
     ef8:	bl	1130 <id_prgrp>
     efc:	mov	w1, w0
     f00:	ldr	w0, [sp, #44]
     f04:	add	w0, w0, w1
     f08:	str	w0, [sp, #44]
     f0c:	b	f5c <id_builtin+0x39c>
     f10:	adrp	x0, 12000 <builtin_error>
     f14:	add	x0, x0, #0xc8
     f18:	ldr	w0, [x0]
     f1c:	and	w0, w0, #0x1
     f20:	cmp	w0, #0x0
     f24:	b.eq	f44 <id_builtin+0x384>  // b.none
     f28:	ldr	x0, [sp, #32]
     f2c:	bl	11c4 <id_prgroups>
     f30:	mov	w1, w0
     f34:	ldr	w0, [sp, #44]
     f38:	add	w0, w0, w1
     f3c:	str	w0, [sp, #44]
     f40:	b	f5c <id_builtin+0x39c>
     f44:	ldr	x0, [sp, #32]
     f48:	bl	12fc <id_prall>
     f4c:	mov	w1, w0
     f50:	ldr	w0, [sp, #44]
     f54:	add	w0, w0, w1
     f58:	str	w0, [sp, #44]
     f5c:	mov	w0, #0xa                   	// #10
     f60:	bl	a10 <putchar@plt>
     f64:	adrp	x0, 11000 <__FRAME_END__+0xf708>
     f68:	ldr	x0, [x0, #4032]
     f6c:	ldr	x0, [x0]
     f70:	bl	9f0 <fflush@plt>
     f74:	ldr	w0, [sp, #44]
     f78:	cmp	w0, #0x0
     f7c:	cset	w0, ne  // ne = any
     f80:	and	w0, w0, #0xff
     f84:	ldp	x29, x30, [sp], #48
     f88:	ret

0000000000000f8c <inituser>:
     f8c:	stp	x29, x30, [sp, #-48]!
     f90:	mov	x29, sp
     f94:	str	x0, [sp, #24]
     f98:	ldr	x0, [sp, #24]
     f9c:	cmp	x0, #0x0
     fa0:	b.eq	1030 <inituser+0xa4>  // b.none
     fa4:	ldr	x0, [sp, #24]
     fa8:	bl	980 <getpwnam@plt>
     fac:	str	x0, [sp, #40]
     fb0:	ldr	x0, [sp, #40]
     fb4:	cmp	x0, #0x0
     fb8:	b.ne	fd4 <inituser+0x48>  // b.any
     fbc:	ldr	x1, [sp, #24]
     fc0:	adrp	x0, 1000 <inituser+0x74>
     fc4:	add	x0, x0, #0x5f0
     fc8:	bl	950 <builtin_error@plt>
     fcc:	mov	w0, #0xffffffff            	// #-1
     fd0:	b	1094 <inituser+0x108>
     fd4:	ldr	x0, [sp, #40]
     fd8:	ldr	w1, [x0, #16]
     fdc:	adrp	x0, 12000 <builtin_error>
     fe0:	add	x0, x0, #0xd0
     fe4:	str	w1, [x0]
     fe8:	adrp	x0, 12000 <builtin_error>
     fec:	add	x0, x0, #0xd0
     ff0:	ldr	w1, [x0]
     ff4:	adrp	x0, 12000 <builtin_error>
     ff8:	add	x0, x0, #0xcc
     ffc:	str	w1, [x0]
    1000:	ldr	x0, [sp, #40]
    1004:	ldr	w1, [x0, #20]
    1008:	adrp	x0, 12000 <builtin_error>
    100c:	add	x0, x0, #0xd8
    1010:	str	w1, [x0]
    1014:	adrp	x0, 12000 <builtin_error>
    1018:	add	x0, x0, #0xd8
    101c:	ldr	w1, [x0]
    1020:	adrp	x0, 12000 <builtin_error>
    1024:	add	x0, x0, #0xd4
    1028:	str	w1, [x0]
    102c:	b	1090 <inituser+0x104>
    1030:	adrp	x0, 11000 <__FRAME_END__+0xf708>
    1034:	ldr	x0, [x0, #4048]
    1038:	ldr	w1, [x0]
    103c:	adrp	x0, 12000 <builtin_error>
    1040:	add	x0, x0, #0xcc
    1044:	str	w1, [x0]
    1048:	adrp	x0, 11000 <__FRAME_END__+0xf708>
    104c:	ldr	x0, [x0, #4048]
    1050:	ldr	w1, [x0, #4]
    1054:	adrp	x0, 12000 <builtin_error>
    1058:	add	x0, x0, #0xd0
    105c:	str	w1, [x0]
    1060:	adrp	x0, 11000 <__FRAME_END__+0xf708>
    1064:	ldr	x0, [x0, #4048]
    1068:	ldr	w1, [x0, #8]
    106c:	adrp	x0, 12000 <builtin_error>
    1070:	add	x0, x0, #0xd4
    1074:	str	w1, [x0]
    1078:	adrp	x0, 11000 <__FRAME_END__+0xf708>
    107c:	ldr	x0, [x0, #4048]
    1080:	ldr	w1, [x0, #12]
    1084:	adrp	x0, 12000 <builtin_error>
    1088:	add	x0, x0, #0xd8
    108c:	str	w1, [x0]
    1090:	mov	w0, #0x0                   	// #0
    1094:	ldp	x29, x30, [sp], #48
    1098:	ret

000000000000109c <id_pruser>:
    109c:	stp	x29, x30, [sp, #-48]!
    10a0:	mov	x29, sp
    10a4:	str	w0, [sp, #28]
    10a8:	str	xzr, [sp, #40]
    10ac:	str	wzr, [sp, #36]
    10b0:	adrp	x0, 12000 <builtin_error>
    10b4:	add	x0, x0, #0xc8
    10b8:	ldr	w0, [x0]
    10bc:	and	w0, w0, #0x4
    10c0:	cmp	w0, #0x0
    10c4:	b.eq	10e8 <id_pruser+0x4c>  // b.none
    10c8:	ldr	w0, [sp, #28]
    10cc:	bl	9c0 <getpwuid@plt>
    10d0:	str	x0, [sp, #40]
    10d4:	ldr	x0, [sp, #40]
    10d8:	cmp	x0, #0x0
    10dc:	b.ne	10e8 <id_pruser+0x4c>  // b.any
    10e0:	mov	w0, #0x1                   	// #1
    10e4:	str	w0, [sp, #36]
    10e8:	ldr	x0, [sp, #40]
    10ec:	cmp	x0, #0x0
    10f0:	b.eq	1110 <id_pruser+0x74>  // b.none
    10f4:	ldr	x0, [sp, #40]
    10f8:	ldr	x0, [x0]
    10fc:	mov	x1, x0
    1100:	adrp	x0, 1000 <inituser+0x74>
    1104:	add	x0, x0, #0x608
    1108:	bl	a00 <printf@plt>
    110c:	b	1124 <id_pruser+0x88>
    1110:	ldr	w0, [sp, #28]
    1114:	mov	w1, w0
    1118:	adrp	x0, 1000 <inituser+0x74>
    111c:	add	x0, x0, #0x610
    1120:	bl	a00 <printf@plt>
    1124:	ldr	w0, [sp, #36]
    1128:	ldp	x29, x30, [sp], #48
    112c:	ret

0000000000001130 <id_prgrp>:
    1130:	stp	x29, x30, [sp, #-48]!
    1134:	mov	x29, sp
    1138:	str	w0, [sp, #28]
    113c:	str	xzr, [sp, #40]
    1140:	str	wzr, [sp, #36]
    1144:	adrp	x0, 12000 <builtin_error>
    1148:	add	x0, x0, #0xc8
    114c:	ldr	w0, [x0]
    1150:	and	w0, w0, #0x4
    1154:	cmp	w0, #0x0
    1158:	b.eq	117c <id_prgrp+0x4c>  // b.none
    115c:	ldr	w0, [sp, #28]
    1160:	bl	a20 <getgrgid@plt>
    1164:	str	x0, [sp, #40]
    1168:	ldr	x0, [sp, #40]
    116c:	cmp	x0, #0x0
    1170:	b.ne	117c <id_prgrp+0x4c>  // b.any
    1174:	mov	w0, #0x1                   	// #1
    1178:	str	w0, [sp, #36]
    117c:	ldr	x0, [sp, #40]
    1180:	cmp	x0, #0x0
    1184:	b.eq	11a4 <id_prgrp+0x74>  // b.none
    1188:	ldr	x0, [sp, #40]
    118c:	ldr	x0, [x0]
    1190:	mov	x1, x0
    1194:	adrp	x0, 1000 <inituser+0x74>
    1198:	add	x0, x0, #0x608
    119c:	bl	a00 <printf@plt>
    11a0:	b	11b8 <id_prgrp+0x88>
    11a4:	ldr	w0, [sp, #28]
    11a8:	mov	w1, w0
    11ac:	adrp	x0, 1000 <inituser+0x74>
    11b0:	add	x0, x0, #0x610
    11b4:	bl	a00 <printf@plt>
    11b8:	ldr	w0, [sp, #36]
    11bc:	ldp	x29, x30, [sp], #48
    11c0:	ret

00000000000011c4 <id_prgroups>:
    11c4:	stp	x29, x30, [sp, #-64]!
    11c8:	mov	x29, sp
    11cc:	str	x0, [sp, #24]
    11d0:	str	wzr, [sp, #48]
    11d4:	adrp	x0, 12000 <builtin_error>
    11d8:	add	x0, x0, #0xd4
    11dc:	ldr	w0, [x0]
    11e0:	bl	1130 <id_prgrp>
    11e4:	adrp	x0, 12000 <builtin_error>
    11e8:	add	x0, x0, #0xd8
    11ec:	ldr	w1, [x0]
    11f0:	adrp	x0, 12000 <builtin_error>
    11f4:	add	x0, x0, #0xd4
    11f8:	ldr	w0, [x0]
    11fc:	cmp	w1, w0
    1200:	b.eq	121c <id_prgroups+0x58>  // b.none
    1204:	mov	w0, #0x20                  	// #32
    1208:	bl	a10 <putchar@plt>
    120c:	adrp	x0, 12000 <builtin_error>
    1210:	add	x0, x0, #0xd8
    1214:	ldr	w0, [x0]
    1218:	bl	1130 <id_prgrp>
    121c:	ldr	x0, [sp, #24]
    1220:	cmp	x0, #0x0
    1224:	b.eq	1248 <id_prgroups+0x84>  // b.none
    1228:	adrp	x0, 1000 <inituser+0x74>
    122c:	add	x0, x0, #0x618
    1230:	bl	950 <builtin_error@plt>
    1234:	str	xzr, [sp, #56]
    1238:	str	wzr, [sp, #44]
    123c:	mov	w0, #0x1                   	// #1
    1240:	str	w0, [sp, #48]
    1244:	b	1254 <id_prgroups+0x90>
    1248:	add	x0, sp, #0x2c
    124c:	bl	990 <get_group_array@plt>
    1250:	str	x0, [sp, #56]
    1254:	str	wzr, [sp, #52]
    1258:	b	12e0 <id_prgroups+0x11c>
    125c:	ldrsw	x0, [sp, #52]
    1260:	lsl	x0, x0, #2
    1264:	ldr	x1, [sp, #56]
    1268:	add	x0, x1, x0
    126c:	ldr	w0, [x0]
    1270:	mov	w1, w0
    1274:	adrp	x0, 12000 <builtin_error>
    1278:	add	x0, x0, #0xd4
    127c:	ldr	w0, [x0]
    1280:	cmp	w1, w0
    1284:	b.eq	12d4 <id_prgroups+0x110>  // b.none
    1288:	ldrsw	x0, [sp, #52]
    128c:	lsl	x0, x0, #2
    1290:	ldr	x1, [sp, #56]
    1294:	add	x0, x1, x0
    1298:	ldr	w0, [x0]
    129c:	mov	w1, w0
    12a0:	adrp	x0, 12000 <builtin_error>
    12a4:	add	x0, x0, #0xd8
    12a8:	ldr	w0, [x0]
    12ac:	cmp	w1, w0
    12b0:	b.eq	12d4 <id_prgroups+0x110>  // b.none
    12b4:	mov	w0, #0x20                  	// #32
    12b8:	bl	a10 <putchar@plt>
    12bc:	ldrsw	x0, [sp, #52]
    12c0:	lsl	x0, x0, #2
    12c4:	ldr	x1, [sp, #56]
    12c8:	add	x0, x1, x0
    12cc:	ldr	w0, [x0]
    12d0:	bl	1130 <id_prgrp>
    12d4:	ldr	w0, [sp, #52]
    12d8:	add	w0, w0, #0x1
    12dc:	str	w0, [sp, #52]
    12e0:	ldr	w0, [sp, #44]
    12e4:	ldr	w1, [sp, #52]
    12e8:	cmp	w1, w0
    12ec:	b.lt	125c <id_prgroups+0x98>  // b.tstop
    12f0:	ldr	w0, [sp, #48]
    12f4:	ldp	x29, x30, [sp], #64
    12f8:	ret

00000000000012fc <id_prall>:
    12fc:	stp	x29, x30, [sp, #-80]!
    1300:	mov	x29, sp
    1304:	str	x0, [sp, #24]
    1308:	str	wzr, [sp, #76]
    130c:	adrp	x0, 12000 <builtin_error>
    1310:	add	x0, x0, #0xcc
    1314:	ldr	w0, [x0]
    1318:	mov	w1, w0
    131c:	adrp	x0, 1000 <inituser+0x74>
    1320:	add	x0, x0, #0x658
    1324:	bl	a00 <printf@plt>
    1328:	adrp	x0, 12000 <builtin_error>
    132c:	add	x0, x0, #0xcc
    1330:	ldr	w0, [x0]
    1334:	bl	9c0 <getpwuid@plt>
    1338:	str	x0, [sp, #56]
    133c:	ldr	x0, [sp, #56]
    1340:	cmp	x0, #0x0
    1344:	b.ne	1354 <id_prall+0x58>  // b.any
    1348:	mov	w0, #0x1                   	// #1
    134c:	str	w0, [sp, #76]
    1350:	b	136c <id_prall+0x70>
    1354:	ldr	x0, [sp, #56]
    1358:	ldr	x0, [x0]
    135c:	mov	x1, x0
    1360:	adrp	x0, 1000 <inituser+0x74>
    1364:	add	x0, x0, #0x660
    1368:	bl	a00 <printf@plt>
    136c:	adrp	x0, 12000 <builtin_error>
    1370:	add	x0, x0, #0xd4
    1374:	ldr	w0, [x0]
    1378:	mov	w1, w0
    137c:	adrp	x0, 1000 <inituser+0x74>
    1380:	add	x0, x0, #0x668
    1384:	bl	a00 <printf@plt>
    1388:	adrp	x0, 12000 <builtin_error>
    138c:	add	x0, x0, #0xd4
    1390:	ldr	w0, [x0]
    1394:	bl	a20 <getgrgid@plt>
    1398:	str	x0, [sp, #48]
    139c:	ldr	x0, [sp, #48]
    13a0:	cmp	x0, #0x0
    13a4:	b.ne	13b4 <id_prall+0xb8>  // b.any
    13a8:	mov	w0, #0x1                   	// #1
    13ac:	str	w0, [sp, #76]
    13b0:	b	13cc <id_prall+0xd0>
    13b4:	ldr	x0, [sp, #48]
    13b8:	ldr	x0, [x0]
    13bc:	mov	x1, x0
    13c0:	adrp	x0, 1000 <inituser+0x74>
    13c4:	add	x0, x0, #0x660
    13c8:	bl	a00 <printf@plt>
    13cc:	adrp	x0, 12000 <builtin_error>
    13d0:	add	x0, x0, #0xd0
    13d4:	ldr	w1, [x0]
    13d8:	adrp	x0, 12000 <builtin_error>
    13dc:	add	x0, x0, #0xcc
    13e0:	ldr	w0, [x0]
    13e4:	cmp	w1, w0
    13e8:	b.eq	144c <id_prall+0x150>  // b.none
    13ec:	adrp	x0, 12000 <builtin_error>
    13f0:	add	x0, x0, #0xd0
    13f4:	ldr	w0, [x0]
    13f8:	mov	w1, w0
    13fc:	adrp	x0, 1000 <inituser+0x74>
    1400:	add	x0, x0, #0x670
    1404:	bl	a00 <printf@plt>
    1408:	adrp	x0, 12000 <builtin_error>
    140c:	add	x0, x0, #0xd0
    1410:	ldr	w0, [x0]
    1414:	bl	9c0 <getpwuid@plt>
    1418:	str	x0, [sp, #56]
    141c:	ldr	x0, [sp, #56]
    1420:	cmp	x0, #0x0
    1424:	b.ne	1434 <id_prall+0x138>  // b.any
    1428:	mov	w0, #0x1                   	// #1
    142c:	str	w0, [sp, #76]
    1430:	b	144c <id_prall+0x150>
    1434:	ldr	x0, [sp, #56]
    1438:	ldr	x0, [x0]
    143c:	mov	x1, x0
    1440:	adrp	x0, 1000 <inituser+0x74>
    1444:	add	x0, x0, #0x660
    1448:	bl	a00 <printf@plt>
    144c:	adrp	x0, 12000 <builtin_error>
    1450:	add	x0, x0, #0xd8
    1454:	ldr	w1, [x0]
    1458:	adrp	x0, 12000 <builtin_error>
    145c:	add	x0, x0, #0xd4
    1460:	ldr	w0, [x0]
    1464:	cmp	w1, w0
    1468:	b.eq	14cc <id_prall+0x1d0>  // b.none
    146c:	adrp	x0, 12000 <builtin_error>
    1470:	add	x0, x0, #0xd8
    1474:	ldr	w0, [x0]
    1478:	mov	w1, w0
    147c:	adrp	x0, 1000 <inituser+0x74>
    1480:	add	x0, x0, #0x680
    1484:	bl	a00 <printf@plt>
    1488:	adrp	x0, 12000 <builtin_error>
    148c:	add	x0, x0, #0xd8
    1490:	ldr	w0, [x0]
    1494:	bl	a20 <getgrgid@plt>
    1498:	str	x0, [sp, #48]
    149c:	ldr	x0, [sp, #48]
    14a0:	cmp	x0, #0x0
    14a4:	b.ne	14b4 <id_prall+0x1b8>  // b.any
    14a8:	mov	w0, #0x1                   	// #1
    14ac:	str	w0, [sp, #76]
    14b0:	b	14cc <id_prall+0x1d0>
    14b4:	ldr	x0, [sp, #48]
    14b8:	ldr	x0, [x0]
    14bc:	mov	x1, x0
    14c0:	adrp	x0, 1000 <inituser+0x74>
    14c4:	add	x0, x0, #0x660
    14c8:	bl	a00 <printf@plt>
    14cc:	ldr	x0, [sp, #24]
    14d0:	cmp	x0, #0x0
    14d4:	b.eq	14f8 <id_prall+0x1fc>  // b.none
    14d8:	adrp	x0, 1000 <inituser+0x74>
    14dc:	add	x0, x0, #0x618
    14e0:	bl	950 <builtin_error@plt>
    14e4:	str	xzr, [sp, #64]
    14e8:	str	wzr, [sp, #44]
    14ec:	mov	w0, #0x1                   	// #1
    14f0:	str	w0, [sp, #76]
    14f4:	b	1504 <id_prall+0x208>
    14f8:	add	x0, sp, #0x2c
    14fc:	bl	990 <get_group_array@plt>
    1500:	str	x0, [sp, #64]
    1504:	ldr	w0, [sp, #44]
    1508:	cmp	w0, #0x0
    150c:	b.le	151c <id_prall+0x220>
    1510:	adrp	x0, 1000 <inituser+0x74>
    1514:	add	x0, x0, #0x690
    1518:	bl	a00 <printf@plt>
    151c:	str	wzr, [sp, #72]
    1520:	b	15b8 <id_prall+0x2bc>
    1524:	ldr	w0, [sp, #72]
    1528:	cmp	w0, #0x0
    152c:	b.le	153c <id_prall+0x240>
    1530:	adrp	x0, 1000 <inituser+0x74>
    1534:	add	x0, x0, #0x6a0
    1538:	bl	a00 <printf@plt>
    153c:	ldrsw	x0, [sp, #72]
    1540:	lsl	x0, x0, #2
    1544:	ldr	x1, [sp, #64]
    1548:	add	x0, x1, x0
    154c:	ldr	w0, [x0]
    1550:	mov	w1, w0
    1554:	adrp	x0, 1000 <inituser+0x74>
    1558:	add	x0, x0, #0x610
    155c:	bl	a00 <printf@plt>
    1560:	ldrsw	x0, [sp, #72]
    1564:	lsl	x0, x0, #2
    1568:	ldr	x1, [sp, #64]
    156c:	add	x0, x1, x0
    1570:	ldr	w0, [x0]
    1574:	bl	a20 <getgrgid@plt>
    1578:	str	x0, [sp, #48]
    157c:	ldr	x0, [sp, #48]
    1580:	cmp	x0, #0x0
    1584:	b.ne	1594 <id_prall+0x298>  // b.any
    1588:	mov	w0, #0x1                   	// #1
    158c:	str	w0, [sp, #76]
    1590:	b	15ac <id_prall+0x2b0>
    1594:	ldr	x0, [sp, #48]
    1598:	ldr	x0, [x0]
    159c:	mov	x1, x0
    15a0:	adrp	x0, 1000 <inituser+0x74>
    15a4:	add	x0, x0, #0x660
    15a8:	bl	a00 <printf@plt>
    15ac:	ldr	w0, [sp, #72]
    15b0:	add	w0, w0, #0x1
    15b4:	str	w0, [sp, #72]
    15b8:	ldr	w0, [sp, #44]
    15bc:	ldr	w1, [sp, #72]
    15c0:	cmp	w1, w0
    15c4:	b.lt	1524 <id_prall+0x228>  // b.tstop
    15c8:	ldr	w0, [sp, #76]
    15cc:	ldp	x29, x30, [sp], #80
    15d0:	ret

Disassembly of section .fini:

00000000000015d4 <_fini>:
    15d4:	stp	x29, x30, [sp, #-16]!
    15d8:	mov	x29, sp
    15dc:	ldp	x29, x30, [sp], #16
    15e0:	ret
