
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ntfscomp.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <decomp_nextvcn>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #8]
  14:	ldr	w1, [x19, #12]
  18:	cmp	w0, w1
  1c:	b.ge	ac <decomp_nextvcn+0xac>  // b.tcont
  20:	add	x4, x19, w0, sxtw #3
  24:	mov	w3, #0x1                   	// #1
  28:	ldp	w7, w6, [x19, #148]
  2c:	mov	x2, #0x0                   	// #0
  30:	ldp	w1, w5, [x4, #16]
  34:	add	w8, w6, #0x9
  38:	ldr	x0, [x19]
  3c:	add	w5, w5, w7
  40:	ldr	x4, [x19, #160]
  44:	sub	w1, w5, w1
  48:	lsl	w3, w3, w8
  4c:	sxtw	x3, w3
  50:	lsl	w1, w1, w6
  54:	bl	0 <grub_disk_read>
  58:	cbnz	w0, 94 <decomp_nextvcn+0x94>
  5c:	ldr	w2, [x19, #8]
  60:	ldr	w1, [x19, #148]
  64:	add	x3, x19, w2, sxtw #3
  68:	add	w1, w1, #0x1
  6c:	ldr	w3, [x3, #16]
  70:	str	w1, [x19, #148]
  74:	cmp	w1, w3
  78:	b.cc	84 <decomp_nextvcn+0x84>  // b.lo, b.ul, b.last
  7c:	add	w2, w2, #0x1
  80:	str	w2, [x19, #8]
  84:	str	wzr, [x19, #144]
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	adrp	x0, 0 <decomp_nextvcn>
  98:	ldr	x19, [sp, #16]
  9c:	ldr	x0, [x0]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ldr	w0, [x0]
  a8:	ret
  ac:	adrp	x1, 0 <decomp_nextvcn>
  b0:	mov	w0, #0x9                   	// #9
  b4:	ldr	x19, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ldr	x1, [x1]
  c0:	b	0 <grub_error>
  c4:	nop
	...

00000000000000d8 <decomp_getch>:
  d8:	stp	x29, x30, [sp, #-32]!
  dc:	mov	x29, sp
  e0:	ldr	w2, [x0, #152]
  e4:	ldr	w3, [x0, #144]
  e8:	add	w2, w2, #0x9
  ec:	stp	x19, x20, [sp, #16]
  f0:	mov	x19, x0
  f4:	mov	x20, x1
  f8:	lsr	w2, w3, w2
  fc:	cbnz	w2, 124 <decomp_getch+0x4c>
 100:	ldr	x1, [x19, #160]
 104:	add	w0, w3, #0x1
 108:	str	w0, [x19, #144]
 10c:	mov	w0, #0x0                   	// #0
 110:	ldrb	w1, [x1, w3, uxtw]
 114:	strb	w1, [x20]
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldp	x29, x30, [sp], #32
 120:	ret
 124:	bl	0 <decomp_nextvcn>
 128:	cbnz	w0, 134 <decomp_getch+0x5c>
 12c:	ldr	w3, [x19, #144]
 130:	b	100 <decomp_getch+0x28>
 134:	adrp	x0, 0 <decomp_nextvcn>
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldr	x0, [x0]
 140:	ldp	x29, x30, [sp], #32
 144:	ldr	w0, [x0]
 148:	ret
 14c:	nop
	...

0000000000000158 <decomp_get16>:
 158:	stp	x29, x30, [sp, #-48]!
 15c:	mov	x29, sp
 160:	stp	x19, x20, [sp, #16]
 164:	mov	x20, x1
 168:	mov	x19, x0
 16c:	add	x1, sp, #0x2e
 170:	strb	wzr, [sp, #46]
 174:	strb	wzr, [sp, #47]
 178:	bl	d8 <decomp_getch>
 17c:	cbz	w0, 198 <decomp_get16+0x40>
 180:	adrp	x0, 0 <decomp_nextvcn>
 184:	ldp	x19, x20, [sp, #16]
 188:	ldr	x0, [x0]
 18c:	ldr	w0, [x0]
 190:	ldp	x29, x30, [sp], #48
 194:	ret
 198:	mov	x0, x19
 19c:	add	x1, sp, #0x2f
 1a0:	bl	d8 <decomp_getch>
 1a4:	cbnz	w0, 180 <decomp_get16+0x28>
 1a8:	ldrb	w1, [sp, #47]
 1ac:	ldrb	w2, [sp, #46]
 1b0:	ubfiz	w1, w1, #8, #8
 1b4:	add	w1, w1, w2
 1b8:	strh	w1, [x20]
 1bc:	ldp	x19, x20, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #48
 1c4:	ret
	...

00000000000001d0 <read_block>:
 1d0:	stp	x29, x30, [sp, #-112]!
 1d4:	mov	x29, sp
 1d8:	stp	x23, x24, [sp, #48]
 1dc:	mov	w24, #0x3                   	// #3
 1e0:	stp	x25, x26, [sp, #64]
 1e4:	mov	x26, x0
 1e8:	ldr	w0, [x0, #208]
 1ec:	sub	w24, w24, w0
 1f0:	cbz	x2, 29c <read_block+0xcc>
 1f4:	stp	x19, x20, [sp, #16]
 1f8:	mov	x20, x1
 1fc:	stp	x21, x22, [sp, #32]
 200:	mov	x22, x2
 204:	ldr	w5, [x26, #68]
 208:	ldr	x3, [x26, #8]
 20c:	tst	x3, #0xf
 210:	b.eq	2a4 <read_block+0xd4>  // b.none
 214:	ldr	w2, [x26]
 218:	and	w2, w2, #0x1
 21c:	and	w0, w3, #0xf
 220:	mov	w21, #0x10                  	// #16
 224:	sub	w21, w21, w0
 228:	lsr	w21, w21, w24
 22c:	cmp	x21, x22
 230:	csel	x21, x21, x22, ls  // ls = plast
 234:	sub	x22, x22, x21
 238:	lsl	x23, x21, x24
 23c:	cbz	w2, 430 <read_block+0x260>
 240:	add	x3, x3, x23
 244:	str	x3, [x26, #8]
 248:	cbnz	w5, 364 <read_block+0x194>
 24c:	cbz	x20, 290 <read_block+0xc0>
 250:	lsl	x19, x21, #12
 254:	mov	x0, x20
 258:	mov	x2, x19
 25c:	mov	w1, #0x0                   	// #0
 260:	bl	0 <grub_memset>
 264:	add	x20, x20, x19
 268:	adrp	x0, 0 <decomp_nextvcn>
 26c:	ldr	x0, [x0]
 270:	ldr	x4, [x0]
 274:	cbz	x4, 290 <read_block+0xc0>
 278:	ldr	x3, [x26, #224]
 27c:	cbz	x3, 290 <read_block+0xc0>
 280:	lsl	w2, w21, #12
 284:	mov	w1, #0x0                   	// #0
 288:	mov	x0, #0x0                   	// #0
 28c:	blr	x4
 290:	cbnz	x22, 204 <read_block+0x34>
 294:	ldp	x19, x20, [sp, #16]
 298:	ldp	x21, x22, [sp, #32]
 29c:	mov	w0, #0x0                   	// #0
 2a0:	b	5bc <read_block+0x3ec>
 2a4:	ldr	w0, [x26, #64]
 2a8:	cmp	w0, w5
 2ac:	b.eq	2b8 <read_block+0xe8>  // b.none
 2b0:	ldr	w0, [x26]
 2b4:	tbz	w0, #0, 784 <read_block+0x5b4>
 2b8:	ldr	w1, [x26, #208]
 2bc:	mov	w0, #0x1                   	// #1
 2c0:	ldr	x4, [x26, #24]
 2c4:	add	w1, w1, #0x9
 2c8:	str	xzr, [x26, #64]
 2cc:	mov	w5, #0x0                   	// #0
 2d0:	lsl	w0, w0, w1
 2d4:	stp	w0, w3, [x26, #200]
 2d8:	cmp	x3, x4
 2dc:	b.cc	314 <read_block+0x144>  // b.lo, b.ul, b.last
 2e0:	b	598 <read_block+0x3c8>
 2e4:	str	w4, [x6, #72]
 2e8:	ldr	x2, [x26, #16]
 2ec:	ldr	x1, [x26, #32]
 2f0:	sub	w1, w1, w2
 2f4:	add	w1, w1, w4
 2f8:	str	w1, [x6, #76]
 2fc:	str	w7, [x26, #68]
 300:	bl	0 <grub_ntfs_read_run_list>
 304:	cbnz	w0, 5a8 <read_block+0x3d8>
 308:	ldr	w5, [x26, #68]
 30c:	ldr	x3, [x26, #8]
 310:	ldr	x4, [x26, #24]
 314:	add	x0, x3, #0x10
 318:	ldr	w2, [x26]
 31c:	cmp	x0, x4
 320:	add	x6, x26, w5, sxtw #3
 324:	add	w7, w5, #0x1
 328:	mov	x0, x26
 32c:	and	w2, w2, #0x1
 330:	b.ls	21c <read_block+0x4c>  // b.plast
 334:	cbz	w2, 2e4 <read_block+0x114>
 338:	and	w0, w3, #0xf
 33c:	mov	w21, #0x10                  	// #16
 340:	sub	w21, w21, w0
 344:	lsr	w21, w21, w24
 348:	cmp	x21, x22
 34c:	csel	x21, x21, x22, ls  // ls = plast
 350:	sub	x22, x22, x21
 354:	lsl	x23, x21, x24
 358:	add	x3, x3, x23
 35c:	str	x3, [x26, #8]
 360:	cbz	w5, 24c <read_block+0x7c>
 364:	stp	x27, x28, [sp, #80]
 368:	mov	w23, #0x1                   	// #1
 36c:	add	x28, x26, #0x38
 370:	cbz	x21, 424 <read_block+0x254>
 374:	nop
 378:	add	x1, sp, #0x6c
 37c:	mov	x0, x28
 380:	bl	158 <decomp_get16>
 384:	mov	w19, w0
 388:	cbnz	w0, 5d8 <read_block+0x408>
 38c:	ldrh	w0, [sp, #108]
 390:	and	w27, w0, #0xfff
 394:	add	w27, w27, #0x1
 398:	cbz	x20, 628 <read_block+0x458>
 39c:	tbnz	w0, #15, 630 <read_block+0x460>
 3a0:	cmp	w27, #0x1, lsl #12
 3a4:	mov	x25, x20
 3a8:	b.ne	724 <read_block+0x554>  // b.any
 3ac:	nop
 3b0:	ldr	w19, [x28, #152]
 3b4:	ldr	w1, [x28, #144]
 3b8:	add	w19, w19, #0x9
 3bc:	lsl	w19, w23, w19
 3c0:	sub	w19, w19, w1
 3c4:	cmp	w27, w19
 3c8:	csel	w19, w27, w19, le
 3cc:	cmp	x25, #0x0
 3d0:	ccmp	w19, #0x0, #0x4, ne  // ne = any
 3d4:	b.ne	608 <read_block+0x438>  // b.any
 3d8:	sub	w27, w27, w19
 3dc:	add	w19, w19, w1
 3e0:	str	w19, [x28, #144]
 3e4:	ands	w27, w27, #0xffff
 3e8:	b.ne	5cc <read_block+0x3fc>  // b.any
 3ec:	cbz	x20, 3f4 <read_block+0x224>
 3f0:	add	x20, x20, #0x1, lsl #12
 3f4:	adrp	x0, 0 <decomp_nextvcn>
 3f8:	ldr	x0, [x0]
 3fc:	ldr	x4, [x0]
 400:	cbz	x4, 41c <read_block+0x24c>
 404:	ldr	x3, [x26, #224]
 408:	cbz	x3, 41c <read_block+0x24c>
 40c:	mov	w2, #0x1000                	// #4096
 410:	mov	w1, #0x0                   	// #0
 414:	mov	x0, #0x0                   	// #0
 418:	blr	x4
 41c:	subs	x21, x21, #0x1
 420:	b.ne	378 <read_block+0x1a8>  // b.any
 424:	ldp	x27, x28, [sp, #80]
 428:	cbnz	x22, 204 <read_block+0x34>
 42c:	b	294 <read_block+0xc4>
 430:	ldr	w0, [x26, #64]
 434:	cmp	w0, w5
 438:	b.ge	510 <read_block+0x340>  // b.tcont
 43c:	cbz	x23, 290 <read_block+0xc0>
 440:	adrp	x21, 0 <decomp_nextvcn>
 444:	b	44c <read_block+0x27c>
 448:	cbz	x23, 290 <read_block+0xc0>
 44c:	add	x0, x26, w0, sxtw #3
 450:	mov	x4, x20
 454:	mov	x2, #0x0                   	// #0
 458:	ldr	w5, [x0, #72]
 45c:	sub	x19, x5, x3
 460:	cmp	x19, x23
 464:	csel	x19, x19, x23, ls  // ls = plast
 468:	add	x3, x3, x19
 46c:	str	x3, [x26, #8]
 470:	sub	x23, x23, x19
 474:	cbz	x20, 4e8 <read_block+0x318>
 478:	ldr	w1, [x0, #76]
 47c:	ldr	x0, [x26, #56]
 480:	sub	x1, x1, x5
 484:	ldr	w5, [x26, #208]
 488:	add	x1, x1, x3
 48c:	add	w3, w5, #0x9
 490:	lsl	x1, x1, x5
 494:	lsl	x3, x19, x3
 498:	bl	0 <grub_disk_read>
 49c:	mov	w1, #0x0                   	// #0
 4a0:	mov	w2, w0
 4a4:	mov	x0, #0x0                   	// #0
 4a8:	cbnz	w2, 5a8 <read_block+0x3d8>
 4ac:	ldr	x2, [x21]
 4b0:	ldr	w4, [x26, #208]
 4b4:	ldr	x5, [x2]
 4b8:	add	w4, w4, #0x9
 4bc:	lsl	x4, x19, x4
 4c0:	mov	w2, w4
 4c4:	cbz	x5, 4e0 <read_block+0x310>
 4c8:	ldr	x3, [x26, #224]
 4cc:	cbz	x3, 4e0 <read_block+0x310>
 4d0:	blr	x5
 4d4:	ldr	w4, [x26, #208]
 4d8:	add	w4, w4, #0x9
 4dc:	lsl	x4, x19, x4
 4e0:	ldr	x3, [x26, #8]
 4e4:	add	x20, x20, x4
 4e8:	ldr	w0, [x26, #64]
 4ec:	add	x1, x26, w0, sxtw #3
 4f0:	ldr	w1, [x1, #72]
 4f4:	cmp	x1, x3
 4f8:	b.hi	504 <read_block+0x334>  // b.pmore
 4fc:	add	w0, w0, #0x1
 500:	str	w0, [x26, #64]
 504:	ldr	w1, [x26, #68]
 508:	cmp	w1, w0
 50c:	b.gt	448 <read_block+0x278>
 510:	cbz	x23, 290 <read_block+0xc0>
 514:	ldr	x0, [x26, #8]
 518:	cbz	x20, 588 <read_block+0x3b8>
 51c:	ldr	x1, [x26, #32]
 520:	mov	x4, x20
 524:	ldr	x2, [x26, #16]
 528:	add	x1, x0, x1
 52c:	ldr	w5, [x26, #208]
 530:	ldr	x0, [x26, #56]
 534:	sub	x1, x1, x2
 538:	add	w3, w5, #0x9
 53c:	mov	x2, #0x0                   	// #0
 540:	lsl	x1, x1, x5
 544:	lsl	x3, x23, x3
 548:	bl	0 <grub_disk_read>
 54c:	cbnz	w0, 5a8 <read_block+0x3d8>
 550:	adrp	x0, 0 <decomp_nextvcn>
 554:	ldr	w2, [x26, #208]
 558:	ldr	x0, [x0]
 55c:	add	w2, w2, #0x9
 560:	lsl	x2, x23, x2
 564:	add	x20, x20, x2
 568:	ldr	x4, [x0]
 56c:	cbz	x4, 584 <read_block+0x3b4>
 570:	ldr	x3, [x26, #224]
 574:	cbz	x3, 584 <read_block+0x3b4>
 578:	mov	w1, #0x0                   	// #0
 57c:	mov	x0, #0x0                   	// #0
 580:	blr	x4
 584:	ldr	x0, [x26, #8]
 588:	add	x0, x23, x0
 58c:	str	x0, [x26, #8]
 590:	cbnz	x22, 204 <read_block+0x34>
 594:	b	294 <read_block+0xc4>
 598:	mov	x0, x26
 59c:	bl	0 <grub_ntfs_read_run_list>
 5a0:	cbz	w0, 308 <read_block+0x138>
 5a4:	nop
 5a8:	adrp	x0, 0 <decomp_nextvcn>
 5ac:	ldp	x19, x20, [sp, #16]
 5b0:	ldr	x0, [x0]
 5b4:	ldp	x21, x22, [sp, #32]
 5b8:	ldr	w0, [x0]
 5bc:	ldp	x23, x24, [sp, #48]
 5c0:	ldp	x25, x26, [sp, #64]
 5c4:	ldp	x29, x30, [sp], #112
 5c8:	ret
 5cc:	mov	x0, x28
 5d0:	bl	0 <decomp_nextvcn>
 5d4:	cbz	w0, 3b0 <read_block+0x1e0>
 5d8:	adrp	x0, 0 <decomp_nextvcn>
 5dc:	ldr	x0, [x0]
 5e0:	ldr	w1, [x0]
 5e4:	cbz	w1, 3ec <read_block+0x21c>
 5e8:	ldr	w0, [x0]
 5ec:	ldp	x19, x20, [sp, #16]
 5f0:	ldp	x21, x22, [sp, #32]
 5f4:	ldp	x23, x24, [sp, #48]
 5f8:	ldp	x25, x26, [sp, #64]
 5fc:	ldp	x27, x28, [sp, #80]
 600:	ldp	x29, x30, [sp], #112
 604:	ret
 608:	ldr	x4, [x28, #160]
 60c:	sxtw	x2, w19
 610:	mov	x0, x25
 614:	add	x25, x25, x2
 618:	add	x1, x4, w1, uxtw
 61c:	bl	0 <grub_memmove>
 620:	ldr	w1, [x28, #144]
 624:	b	3d8 <read_block+0x208>
 628:	mov	x25, #0x0                   	// #0
 62c:	b	3b0 <read_block+0x1e0>
 630:	strb	wzr, [sp, #107]
 634:	add	x1, sp, #0x6b
 638:	mov	x0, x28
 63c:	bl	d8 <decomp_getch>
 640:	cbnz	w0, 744 <read_block+0x574>
 644:	sub	w27, w27, #0x1
 648:	ands	w27, w27, #0xffff
 64c:	b.eq	3f0 <read_block+0x220>  // b.none
 650:	ldrb	w0, [sp, #107]
 654:	add	x1, sp, #0x6e
 658:	mov	w25, #0x8                   	// #8
 65c:	tbnz	w0, #0, 6ac <read_block+0x4dc>
 660:	mov	x0, x28
 664:	strb	wzr, [sp, #110]
 668:	bl	d8 <decomp_getch>
 66c:	cbnz	w0, 744 <read_block+0x574>
 670:	ldrb	w0, [sp, #110]
 674:	sub	w27, w27, #0x1
 678:	and	w27, w27, #0xffff
 67c:	strb	w0, [x20, w19, uxtw]
 680:	add	w19, w19, #0x1
 684:	ldrb	w0, [sp, #107]
 688:	lsr	w0, w0, #1
 68c:	strb	w0, [sp, #107]
 690:	cbz	w27, 3f0 <read_block+0x220>
 694:	cmp	w19, #0x1, lsl #12
 698:	b.hi	758 <read_block+0x588>  // b.pmore
 69c:	subs	w25, w25, #0x1
 6a0:	b.eq	634 <read_block+0x464>  // b.none
 6a4:	add	x1, sp, #0x6e
 6a8:	tbz	w0, #0, 660 <read_block+0x490>
 6ac:	mov	x0, x28
 6b0:	strh	wzr, [sp, #110]
 6b4:	bl	158 <decomp_get16>
 6b8:	cbnz	w0, 744 <read_block+0x574>
 6bc:	sub	w27, w27, #0x2
 6c0:	ldrh	w3, [sp, #110]
 6c4:	and	w27, w27, #0xffff
 6c8:	cbz	w19, 770 <read_block+0x5a0>
 6cc:	sub	w1, w19, #0x1
 6d0:	mov	w2, #0xc                   	// #12
 6d4:	cmp	w1, #0xf
 6d8:	mov	w0, #0xfff                 	// #4095
 6dc:	b.ls	6f4 <read_block+0x524>  // b.plast
 6e0:	lsr	w1, w1, #1
 6e4:	lsr	w0, w0, #1
 6e8:	cmp	w1, #0xf
 6ec:	sub	w2, w2, #0x1
 6f0:	b.hi	6e0 <read_block+0x510>  // b.pmore
 6f4:	and	w1, w3, w0
 6f8:	add	w0, w19, #0x3
 6fc:	lsr	w2, w3, w2
 700:	add	w0, w1, w0
 704:	mvn	w2, w2
 708:	add	w1, w19, w2
 70c:	ldrb	w1, [x20, w1, uxtw]
 710:	strb	w1, [x20, w19, uxtw]
 714:	add	w19, w19, #0x1
 718:	cmp	w19, w0
 71c:	b.ne	708 <read_block+0x538>  // b.any
 720:	b	684 <read_block+0x4b4>
 724:	adrp	x1, 0 <decomp_nextvcn>
 728:	mov	w0, #0x9                   	// #9
 72c:	ldr	x1, [x1]
 730:	bl	0 <grub_error>
 734:	cbz	w0, 3f0 <read_block+0x220>
 738:	adrp	x0, 0 <decomp_nextvcn>
 73c:	ldr	x0, [x0]
 740:	b	5e8 <read_block+0x418>
 744:	adrp	x0, 0 <decomp_nextvcn>
 748:	ldr	x0, [x0]
 74c:	ldr	w0, [x0]
 750:	cbz	w0, 3f0 <read_block+0x220>
 754:	b	738 <read_block+0x568>
 758:	adrp	x1, 0 <decomp_nextvcn>
 75c:	mov	w0, #0x9                   	// #9
 760:	ldr	x1, [x1]
 764:	bl	0 <grub_error>
 768:	cbz	w0, 3f0 <read_block+0x220>
 76c:	b	738 <read_block+0x568>
 770:	adrp	x1, 0 <decomp_nextvcn>
 774:	mov	w0, #0x9                   	// #9
 778:	ldr	x1, [x1]
 77c:	bl	0 <grub_error>
 780:	b	3f0 <read_block+0x220>
 784:	adrp	x1, 0 <decomp_nextvcn>
 788:	mov	w0, #0x9                   	// #9
 78c:	ldr	x1, [x1]
 790:	bl	0 <grub_error>
 794:	ldp	x19, x20, [sp, #16]
 798:	ldp	x21, x22, [sp, #32]
 79c:	b	5bc <read_block+0x3ec>
	...

00000000000007d0 <ntfscomp>:
 7d0:	stp	x29, x30, [sp, #-80]!
 7d4:	mov	x29, sp
 7d8:	stp	x19, x20, [sp, #16]
 7dc:	mov	x19, x3
 7e0:	ldr	x20, [x3, #48]
 7e4:	stp	x21, x22, [sp, #32]
 7e8:	mov	x21, x1
 7ec:	stp	x23, x24, [sp, #48]
 7f0:	mov	x22, x2
 7f4:	mov	x23, x0
 7f8:	ldr	x1, [x20, #56]
 7fc:	cbz	x1, a14 <ntfscomp+0x244>
 800:	ldr	w3, [x20, #48]
 804:	and	x2, x21, #0xfffffffffffff000
 808:	cmp	x2, x3
 80c:	b.eq	a38 <ntfscomp+0x268>  // b.none
 810:	ldr	w0, [x19, #208]
 814:	mov	w3, #0x8                   	// #8
 818:	lsr	x20, x21, #12
 81c:	asr	w3, w3, w0
 820:	sxtw	x3, w3
 824:	mul	x20, x3, x20
 828:	and	x3, x20, #0xfffffffffffffff0
 82c:	str	x3, [x19, #8]
 830:	b	840 <ntfscomp+0x70>
 834:	bl	0 <grub_ntfs_read_run_list>
 838:	cbnz	w0, 978 <ntfscomp+0x1a8>
 83c:	ldr	x3, [x19, #8]
 840:	mov	x0, x19
 844:	ldr	x4, [x19, #24]
 848:	cmp	x4, x3
 84c:	b.ls	834 <ntfscomp+0x64>  // b.plast
 850:	ldr	w1, [x19, #208]
 854:	mov	w0, #0x1                   	// #1
 858:	str	xzr, [x19, #64]
 85c:	add	w1, w1, #0x9
 860:	lsl	w0, w0, w1
 864:	sxtw	x0, w0
 868:	bl	0 <grub_malloc>
 86c:	str	x0, [x19, #216]
 870:	cbz	x0, a98 <ntfscomp+0x2c8>
 874:	ldr	x0, [x19, #8]
 878:	cmp	x20, x0
 87c:	b.hi	99c <ntfscomp+0x1cc>  // b.pmore
 880:	ands	x21, x21, #0xfff
 884:	b.eq	934 <ntfscomp+0x164>  // b.none
 888:	ldr	x0, [x19, #48]
 88c:	stp	x25, x26, [sp, #64]
 890:	ldr	w24, [x19, #208]
 894:	ldr	x25, [x19, #224]
 898:	mov	x2, #0x1                   	// #1
 89c:	ldr	x1, [x0, #56]
 8a0:	str	xzr, [x19, #224]
 8a4:	mov	x0, x19
 8a8:	ldr	x20, [x19, #8]
 8ac:	bl	1d0 <read_block>
 8b0:	cbnz	w0, a00 <ntfscomp+0x230>
 8b4:	ldr	x2, [x19, #48]
 8b8:	add	w1, w24, #0x9
 8bc:	str	x25, [x19, #224]
 8c0:	mov	w0, #0x1000                	// #4096
 8c4:	lsl	x1, x20, x1
 8c8:	sub	w20, w0, w21
 8cc:	str	w1, [x2, #48]
 8d0:	cmp	x20, x22
 8d4:	sub	w24, w0, w21
 8d8:	b.ls	8e4 <ntfscomp+0x114>  // b.plast
 8dc:	mov	w24, w22
 8e0:	and	x20, x22, #0xffffffff
 8e4:	ldr	x1, [x2, #56]
 8e8:	mov	x0, x23
 8ec:	mov	x2, x20
 8f0:	add	x1, x1, x21
 8f4:	bl	0 <grub_memmove>
 8f8:	adrp	x0, 0 <decomp_nextvcn>
 8fc:	ldr	x0, [x0]
 900:	ldr	x4, [x0]
 904:	cbz	x4, 920 <ntfscomp+0x150>
 908:	ldr	x3, [x19, #224]
 90c:	cbz	x3, 920 <ntfscomp+0x150>
 910:	mov	w2, w24
 914:	mov	w1, #0x0                   	// #0
 918:	mov	x0, #0x0                   	// #0
 91c:	blr	x4
 920:	cmp	x22, x20
 924:	b.eq	b0c <ntfscomp+0x33c>  // b.none
 928:	ldp	x25, x26, [sp, #64]
 92c:	add	x23, x23, x20
 930:	sub	x22, x22, x20
 934:	lsr	x2, x22, #12
 938:	mov	x1, x23
 93c:	mov	x0, x19
 940:	bl	1d0 <read_block>
 944:	cbnz	w0, 9c0 <ntfscomp+0x1f0>
 948:	ands	x21, x22, #0xfff
 94c:	b.ne	9d0 <ntfscomp+0x200>  // b.any
 950:	mov	w20, #0x0                   	// #0
 954:	ldr	x0, [x19, #216]
 958:	cbz	x0, 984 <ntfscomp+0x1b4>
 95c:	bl	0 <grub_free>
 960:	mov	w0, w20
 964:	ldp	x19, x20, [sp, #16]
 968:	ldp	x21, x22, [sp, #32]
 96c:	ldp	x23, x24, [sp, #48]
 970:	ldp	x29, x30, [sp], #80
 974:	ret
 978:	adrp	x0, 0 <decomp_nextvcn>
 97c:	ldr	x0, [x0]
 980:	ldr	w20, [x0]
 984:	mov	w0, w20
 988:	ldp	x19, x20, [sp, #16]
 98c:	ldp	x21, x22, [sp, #32]
 990:	ldp	x23, x24, [sp, #48]
 994:	ldp	x29, x30, [sp], #80
 998:	ret
 99c:	ldr	w3, [x19, #208]
 9a0:	sub	x20, x20, x0
 9a4:	mov	w2, #0x3                   	// #3
 9a8:	mov	x0, x19
 9ac:	sub	w2, w2, w3
 9b0:	mov	x1, #0x0                   	// #0
 9b4:	lsr	x2, x20, x2
 9b8:	bl	1d0 <read_block>
 9bc:	cbz	w0, 880 <ntfscomp+0xb0>
 9c0:	adrp	x0, 0 <decomp_nextvcn>
 9c4:	ldr	x0, [x0]
 9c8:	ldr	w20, [x0]
 9cc:	b	954 <ntfscomp+0x184>
 9d0:	ldr	x0, [x19, #48]
 9d4:	stp	x25, x26, [sp, #64]
 9d8:	mov	x2, #0x1                   	// #1
 9dc:	ldr	x25, [x19, #224]
 9e0:	ldr	x1, [x0, #56]
 9e4:	str	xzr, [x19, #224]
 9e8:	ldr	w26, [x19, #208]
 9ec:	mov	x0, x19
 9f0:	ldr	x24, [x19, #8]
 9f4:	bl	1d0 <read_block>
 9f8:	mov	w20, w0
 9fc:	cbz	w0, ab4 <ntfscomp+0x2e4>
 a00:	adrp	x0, 0 <decomp_nextvcn>
 a04:	ldp	x25, x26, [sp, #64]
 a08:	ldr	x0, [x0]
 a0c:	ldr	w20, [x0]
 a10:	b	954 <ntfscomp+0x184>
 a14:	mov	x0, #0x1000                	// #4096
 a18:	bl	0 <grub_malloc>
 a1c:	str	x0, [x20, #56]
 a20:	ldr	x0, [x19, #48]
 a24:	ldr	x1, [x0, #56]
 a28:	cbz	x1, 978 <ntfscomp+0x1a8>
 a2c:	mov	w1, #0x1                   	// #1
 a30:	str	w1, [x0, #48]
 a34:	b	810 <ntfscomp+0x40>
 a38:	sub	x20, x2, x21
 a3c:	sub	x2, x21, x2
 a40:	add	x20, x20, #0x1, lsl #12
 a44:	add	x1, x1, x2
 a48:	cmp	x22, x20
 a4c:	csel	x24, x22, x20, ls  // ls = plast
 a50:	mov	x2, x24
 a54:	bl	0 <grub_memmove>
 a58:	adrp	x0, 0 <decomp_nextvcn>
 a5c:	ldr	x0, [x0]
 a60:	ldr	x4, [x0]
 a64:	cbz	x4, a80 <ntfscomp+0x2b0>
 a68:	ldr	x3, [x19, #224]
 a6c:	cbz	x3, a80 <ntfscomp+0x2b0>
 a70:	mov	w2, w24
 a74:	mov	w1, #0x0                   	// #0
 a78:	mov	x0, #0x0                   	// #0
 a7c:	blr	x4
 a80:	cmp	x22, x20
 a84:	b.ls	a98 <ntfscomp+0x2c8>  // b.plast
 a88:	add	x23, x23, x24
 a8c:	sub	x22, x22, x24
 a90:	add	x21, x21, x24
 a94:	b	810 <ntfscomp+0x40>
 a98:	mov	w20, #0x0                   	// #0
 a9c:	mov	w0, w20
 aa0:	ldp	x19, x20, [sp, #16]
 aa4:	ldp	x21, x22, [sp, #32]
 aa8:	ldp	x23, x24, [sp, #48]
 aac:	ldp	x29, x30, [sp], #80
 ab0:	ret
 ab4:	ldr	x3, [x19, #48]
 ab8:	add	w26, w26, #0x9
 abc:	and	x22, x22, #0xfffffffffffff000
 ac0:	mov	x2, x21
 ac4:	lsl	x24, x24, x26
 ac8:	add	x0, x23, x22
 acc:	ldr	x1, [x3, #56]
 ad0:	str	w24, [x3, #48]
 ad4:	bl	0 <grub_memmove>
 ad8:	adrp	x0, 0 <decomp_nextvcn>
 adc:	cmp	x25, #0x0
 ae0:	ldr	x0, [x0]
 ae4:	ldr	x4, [x0]
 ae8:	ccmp	x4, #0x0, #0x4, ne  // ne = any
 aec:	b.eq	b0c <ntfscomp+0x33c>  // b.none
 af0:	mov	x3, x25
 af4:	mov	w2, w21
 af8:	mov	w1, #0x0                   	// #0
 afc:	mov	x0, #0x0                   	// #0
 b00:	blr	x4
 b04:	ldp	x25, x26, [sp, #64]
 b08:	b	954 <ntfscomp+0x184>
 b0c:	ldp	x25, x26, [sp, #64]
 b10:	b	950 <ntfscomp+0x180>
 b14:	nop
	...

0000000000000b28 <grub_mod_init>:
 b28:	adrp	x0, 0 <decomp_nextvcn>
 b2c:	adrp	x1, 0 <decomp_nextvcn>
 b30:	ldr	x0, [x0]
 b34:	ldr	x1, [x1]
 b38:	str	x1, [x0]
 b3c:	ret
	...

0000000000000b50 <grub_mod_fini>:
 b50:	adrp	x0, 0 <decomp_nextvcn>
 b54:	ldr	x0, [x0]
 b58:	str	xzr, [x0]
 b5c:	ret
	...
