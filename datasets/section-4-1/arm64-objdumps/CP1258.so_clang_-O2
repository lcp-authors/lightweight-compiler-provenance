
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//CP1258.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006e8 <.init>:
 6e8:	stp	x29, x30, [sp, #-16]!
 6ec:	mov	x29, sp
 6f0:	bl	7a0 <__assert_fail@plt+0x10>
 6f4:	ldp	x29, x30, [sp], #16
 6f8:	ret

Disassembly of section .plt:

0000000000000700 <__cxa_finalize@plt-0x20>:
 700:	stp	x16, x30, [sp, #-16]!
 704:	adrp	x16, 12000 <gconv@@Base+0x116c0>
 708:	ldr	x17, [x16, #4088]
 70c:	add	x16, x16, #0xff8
 710:	br	x17
 714:	nop
 718:	nop
 71c:	nop

0000000000000720 <__cxa_finalize@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16]
 728:	add	x16, x16, #0x0
 72c:	br	x17

0000000000000730 <__gconv_transliterate@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #8]
 738:	add	x16, x16, #0x8
 73c:	br	x17

0000000000000740 <__stack_chk_fail@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #16]
 748:	add	x16, x16, #0x10
 74c:	br	x17

0000000000000750 <__gmon_start__@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #24]
 758:	add	x16, x16, #0x18
 75c:	br	x17

0000000000000760 <abort@plt>:
 760:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 764:	ldr	x17, [x16, #32]
 768:	add	x16, x16, #0x20
 76c:	br	x17

0000000000000770 <strcmp@plt>:
 770:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 774:	ldr	x17, [x16, #40]
 778:	add	x16, x16, #0x28
 77c:	br	x17

0000000000000780 <_dl_mcount_wrapper_check@plt>:
 780:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 784:	ldr	x17, [x16, #48]
 788:	add	x16, x16, #0x30
 78c:	br	x17

0000000000000790 <__assert_fail@plt>:
 790:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 794:	ldr	x17, [x16, #56]
 798:	add	x16, x16, #0x38
 79c:	br	x17

Disassembly of section .text:

00000000000007a0 <gconv_init@@Base-0x110>:
     7a0:	adrp	x0, 12000 <gconv@@Base+0x116c0>
     7a4:	ldr	x0, [x0, #4048]
     7a8:	cbz	x0, 7b0 <__assert_fail@plt+0x20>
     7ac:	b	750 <__gmon_start__@plt>
     7b0:	ret
     7b4:	nop
     7b8:	adrp	x0, 13000 <gconv@@Base+0x126c0>
     7bc:	add	x0, x0, #0x48
     7c0:	adrp	x1, 13000 <gconv@@Base+0x126c0>
     7c4:	add	x1, x1, #0x48
     7c8:	cmp	x1, x0
     7cc:	b.eq	7e4 <__assert_fail@plt+0x54>  // b.none
     7d0:	adrp	x1, 12000 <gconv@@Base+0x116c0>
     7d4:	ldr	x1, [x1, #4024]
     7d8:	cbz	x1, 7e4 <__assert_fail@plt+0x54>
     7dc:	mov	x16, x1
     7e0:	br	x16
     7e4:	ret
     7e8:	adrp	x0, 13000 <gconv@@Base+0x126c0>
     7ec:	add	x0, x0, #0x48
     7f0:	adrp	x1, 13000 <gconv@@Base+0x126c0>
     7f4:	add	x1, x1, #0x48
     7f8:	sub	x1, x1, x0
     7fc:	lsr	x2, x1, #63
     800:	add	x1, x2, x1, asr #3
     804:	cmp	xzr, x1, asr #1
     808:	asr	x1, x1, #1
     80c:	b.eq	824 <__assert_fail@plt+0x94>  // b.none
     810:	adrp	x2, 12000 <gconv@@Base+0x116c0>
     814:	ldr	x2, [x2, #4064]
     818:	cbz	x2, 824 <__assert_fail@plt+0x94>
     81c:	mov	x16, x2
     820:	br	x16
     824:	ret
     828:	stp	x29, x30, [sp, #-32]!
     82c:	mov	x29, sp
     830:	str	x19, [sp, #16]
     834:	adrp	x19, 13000 <gconv@@Base+0x126c0>
     838:	ldrb	w0, [x19, #72]
     83c:	cbnz	w0, 864 <__assert_fail@plt+0xd4>
     840:	adrp	x0, 12000 <gconv@@Base+0x116c0>
     844:	ldr	x0, [x0, #4032]
     848:	cbz	x0, 858 <__assert_fail@plt+0xc8>
     84c:	adrp	x0, 13000 <gconv@@Base+0x126c0>
     850:	ldr	x0, [x0, #64]
     854:	bl	720 <__cxa_finalize@plt>
     858:	bl	7b8 <__assert_fail@plt+0x28>
     85c:	mov	w0, #0x1                   	// #1
     860:	strb	w0, [x19, #72]
     864:	ldr	x19, [sp, #16]
     868:	ldp	x29, x30, [sp], #32
     86c:	ret
     870:	b	7e8 <__assert_fail@plt+0x58>
     874:	nop
     878:	tst	w1, #0x80
     87c:	and	w0, w1, #0xff
     880:	b.ne	894 <__assert_fail@plt+0x104>  // b.any
     884:	sub	w1, w0, #0x41
     888:	cmp	w1, #0x16f
     88c:	csinv	w0, w0, wzr, hi  // hi = pmore
     890:	ret
     894:	sub	w0, w0, #0x80
     898:	adrp	x1, 2000 <gconv@@Base+0x16c0>
     89c:	add	x1, x1, #0x28
     8a0:	ldrh	w0, [x1, w0, sxtw #1]
     8a4:	cbnz	w0, 884 <__assert_fail@plt+0xf4>
     8a8:	mov	w0, #0xffffffff            	// #-1
     8ac:	ret

00000000000008b0 <gconv_init@@Base>:
     8b0:	stp	x29, x30, [sp, #-32]!
     8b4:	mov	x29, sp
     8b8:	stp	x19, x20, [sp, #16]
     8bc:	mov	x19, x0
     8c0:	adrp	x20, 1000 <gconv@@Base+0x6c0>
     8c4:	ldr	x0, [x0, #24]
     8c8:	add	x20, x20, #0xe90
     8cc:	mov	x1, x20
     8d0:	bl	770 <strcmp@plt>
     8d4:	cbnz	w0, 90c <gconv_init@@Base+0x5c>
     8d8:	adrp	x0, 0 <__cxa_finalize@plt-0x720>
     8dc:	mov	x2, #0x100000001           	// #4294967297
     8e0:	add	x0, x0, #0x878
     8e4:	mov	x1, #0x400000004           	// #17179869188
     8e8:	str	x0, [x19, #48]
     8ec:	stp	x2, x1, [x19, #72]
     8f0:	str	xzr, [x19, #96]
     8f4:	mov	w1, #0x1                   	// #1
     8f8:	mov	w0, #0x0                   	// #0
     8fc:	str	w1, [x19, #88]
     900:	ldp	x19, x20, [sp, #16]
     904:	ldp	x29, x30, [sp], #32
     908:	ret
     90c:	ldr	x0, [x19, #32]
     910:	mov	x1, x20
     914:	bl	770 <strcmp@plt>
     918:	cbnz	w0, 938 <gconv_init@@Base+0x88>
     91c:	mov	x1, #0x1                   	// #1
     920:	mov	x0, #0xffffffffffffffff    	// #-1
     924:	mov	x2, #0x400000004           	// #17179869188
     928:	movk	x1, #0x2, lsl #32
     92c:	stp	x2, x1, [x19, #72]
     930:	str	x0, [x19, #96]
     934:	b	8f4 <gconv_init@@Base+0x44>
     938:	mov	w0, #0x1                   	// #1
     93c:	b	900 <gconv_init@@Base+0x50>

0000000000000940 <gconv@@Base>:
     940:	stp	x29, x30, [sp, #-240]!
     944:	mov	x14, x0
     948:	mov	x12, x2
     94c:	mov	x29, sp
     950:	stp	x21, x22, [sp, #32]
     954:	mov	x21, x1
     958:	adrp	x1, 12000 <gconv@@Base+0x116c0>
     95c:	stp	x19, x20, [sp, #16]
     960:	mov	x15, x4
     964:	ldr	w18, [x21, #16]
     968:	ldr	x1, [x1, #4056]
     96c:	stp	x23, x24, [sp, #48]
     970:	mov	x20, x3
     974:	ldr	x0, [x1]
     978:	str	x0, [sp, #232]
     97c:	mov	x0, #0x0                   	// #0
     980:	stp	x25, x26, [sp, #64]
     984:	add	x0, x21, #0x30
     988:	str	x0, [sp, #144]
     98c:	mov	x23, x5
     990:	mov	w24, w7
     994:	add	x26, x14, #0x68
     998:	and	w1, w18, #0x1
     99c:	mov	x22, #0x0                   	// #0
     9a0:	tbnz	w18, #0, 9c0 <gconv@@Base+0x80>
     9a4:	ldr	x0, [x14, #104]
     9a8:	ldr	x22, [x26, #40]
     9ac:	cbz	x0, 9c0 <gconv@@Base+0x80>
     9b0:	adrp	x0, 12000 <gconv@@Base+0x116c0>
     9b4:	ldr	x0, [x0, #4040]
     9b8:	ldr	x0, [x0]
     9bc:	eor	x22, x22, x0
     9c0:	cbnz	w6, 139c <gconv@@Base+0xa5c>
     9c4:	cmp	x15, #0x0
     9c8:	add	x0, sp, #0xc0
     9cc:	csel	x1, x21, x15, eq  // eq = none
     9d0:	cmp	x23, #0x0
     9d4:	csel	x0, x0, xzr, ne  // ne = any
     9d8:	stp	x27, x28, [sp, #80]
     9dc:	cmp	w24, #0x0
     9e0:	ldr	x10, [x1]
     9e4:	str	x0, [sp, #160]
     9e8:	ldr	x27, [x21, #32]
     9ec:	cset	w1, ne  // ne = any
     9f0:	ldr	x0, [x14, #96]
     9f4:	str	w1, [sp, #172]
     9f8:	str	xzr, [sp, #192]
     9fc:	cmp	x0, #0x0
     a00:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     a04:	ldr	w1, [x27]
     a08:	str	w1, [sp, #136]
     a0c:	ldr	x8, [x12]
     a10:	ldr	x28, [x21, #8]
     a14:	b.ne	f90 <gconv@@Base+0x650>  // b.any
     a18:	adrp	x11, 2000 <gconv@@Base+0x16c0>
     a1c:	add	x25, x11, #0x28
     a20:	add	x1, x25, #0x210
     a24:	stp	x15, x14, [sp, #120]
     a28:	mov	x15, x25
     a2c:	str	x26, [sp, #152]
     a30:	mov	x25, x28
     a34:	str	w24, [sp, #168]
     a38:	mov	x26, x27
     a3c:	str	x1, [sp, #176]
     a40:	mov	x1, x20
     a44:	mov	x27, x12
     a48:	mov	x20, x21
     a4c:	mov	x24, x8
     a50:	mov	x28, x10
     a54:	mov	x21, x1
     a58:	cbz	x0, b68 <gconv@@Base+0x228>
     a5c:	stp	x24, x28, [sp, #208]
     a60:	mov	x19, x28
     a64:	cmp	x21, x24
     a68:	b.eq	14a4 <gconv@@Base+0xb64>  // b.none
     a6c:	mov	x0, x24
     a70:	add	x5, sp, #0xd8
     a74:	mov	w13, #0x4                   	// #4
     a78:	add	x3, x0, #0x4
     a7c:	cmp	x21, x3
     a80:	b.cc	d1c <gconv@@Base+0x3dc>  // b.lo, b.ul, b.last
     a84:	cmp	x25, x19
     a88:	b.ls	e24 <gconv@@Base+0x4e4>  // b.plast
     a8c:	ldr	w2, [x0]
     a90:	mov	w4, #0x7f                  	// #127
     a94:	sub	w6, w2, #0xa0
     a98:	cmp	w6, #0x22
     a9c:	ccmp	w2, w4, #0x0, hi  // hi = pmore
     aa0:	b.hi	c80 <gconv@@Base+0x340>  // b.pmore
     aa4:	add	x1, x19, #0x1
     aa8:	str	x1, [sp, #216]
     aac:	strb	w2, [x19]
     ab0:	ldp	x0, x19, [sp, #208]
     ab4:	add	x0, x0, #0x4
     ab8:	str	x0, [sp, #208]
     abc:	cmp	x21, x0
     ac0:	b.ne	a78 <gconv@@Base+0x138>  // b.any
     ac4:	nop
     ac8:	str	x0, [x27]
     acc:	ldr	x0, [sp, #120]
     ad0:	cbnz	x0, c44 <gconv@@Base+0x304>
     ad4:	ldp	w1, w0, [x20, #16]
     ad8:	add	w0, w0, #0x1
     adc:	str	w0, [x20, #20]
     ae0:	tbnz	w1, #0, f1c <gconv@@Base+0x5dc>
     ae4:	cmp	x28, x19
     ae8:	b.cs	f88 <gconv@@Base+0x648>  // b.hs, b.nlast
     aec:	ldr	x1, [x20]
     af0:	mov	x0, x22
     af4:	str	x15, [sp, #104]
     af8:	str	w13, [sp, #112]
     afc:	str	x1, [sp, #200]
     b00:	bl	780 <_dl_mcount_wrapper_check@plt>
     b04:	ldp	x1, x0, [sp, #144]
     b08:	mov	x5, x23
     b0c:	ldr	w7, [sp, #168]
     b10:	mov	x3, x19
     b14:	add	x2, sp, #0xc8
     b18:	mov	w6, #0x0                   	// #0
     b1c:	mov	x4, #0x0                   	// #0
     b20:	blr	x22
     b24:	mov	w7, w0
     b28:	ldr	w13, [sp, #112]
     b2c:	cmp	w0, #0x4
     b30:	ldr	x15, [sp, #104]
     b34:	b.eq	e30 <gconv@@Base+0x4f0>  // b.none
     b38:	ldr	x13, [sp, #200]
     b3c:	cmp	x13, x19
     b40:	b.ne	e90 <gconv@@Base+0x550>  // b.any
     b44:	cbnz	w7, 1430 <gconv@@Base+0xaf0>
     b48:	ldr	w0, [x26]
     b4c:	str	w0, [sp, #136]
     b50:	ldr	x0, [sp, #128]
     b54:	ldr	w18, [x20, #16]
     b58:	ldr	x28, [x20]
     b5c:	ldr	x0, [x0, #96]
     b60:	ldr	x24, [x27]
     b64:	cbnz	x0, a5c <gconv@@Base+0x11c>
     b68:	cmp	x21, x24
     b6c:	b.eq	1670 <gconv@@Base+0xd30>  // b.none
     b70:	add	x4, x28, #0x4
     b74:	cmp	x4, x25
     b78:	b.hi	1368 <gconv@@Base+0xa28>  // b.pmore
     b7c:	and	w18, w18, #0x2
     b80:	mov	x2, x24
     b84:	mov	x19, x28
     b88:	add	x16, x15, #0x530
     b8c:	mov	w13, #0x4                   	// #4
     b90:	ldrb	w0, [x2]
     b94:	cmp	w0, #0x7f
     b98:	b.ls	d28 <gconv@@Base+0x3e8>  // b.plast
     b9c:	sub	w0, w0, #0x80
     ba0:	ldrh	w0, [x15, x0, lsl #1]
     ba4:	cbz	w0, f64 <gconv@@Base+0x624>
     ba8:	ldr	w1, [x26]
     bac:	sub	w3, w0, #0x41
     bb0:	cmp	wzr, w1, asr #3
     bb4:	asr	w1, w1, #3
     bb8:	b.eq	d3c <gconv@@Base+0x3fc>  // b.none
     bbc:	sub	w5, w0, #0x300
     bc0:	cmp	w5, #0x3f
     bc4:	b.hi	c00 <gconv@@Base+0x2c0>  // b.pmore
     bc8:	cmp	w0, #0x303
     bcc:	b.eq	f7c <gconv@@Base+0x63c>  // b.none
     bd0:	b.hi	dd8 <gconv@@Base+0x498>  // b.pmore
     bd4:	cmp	w0, #0x300
     bd8:	b.ne	d4c <gconv@@Base+0x40c>  // b.any
     bdc:	mov	w5, #0x0                   	// #0
     be0:	mov	x6, #0x1e                  	// #30
     be4:	cmp	w1, #0x40
     be8:	b.ls	df0 <gconv@@Base+0x4b0>  // b.plast
     bec:	ubfiz	x7, x6, #2, #32
     bf0:	ldrh	w7, [x16, x7]
     bf4:	cmp	w1, w7
     bf8:	b.ls	d70 <gconv@@Base+0x430>  // b.plast
     bfc:	nop
     c00:	str	w1, [x19]
     c04:	cmp	w3, #0x16f
     c08:	str	wzr, [x26]
     c0c:	b.hi	df8 <gconv@@Base+0x4b8>  // b.pmore
     c10:	mov	x19, x4
     c14:	lsl	w0, w0, #3
     c18:	str	w0, [x26]
     c1c:	add	x2, x2, #0x1
     c20:	cmp	x21, x2
     c24:	b.eq	c38 <gconv@@Base+0x2f8>  // b.none
     c28:	add	x4, x19, #0x4
     c2c:	cmp	x25, x4
     c30:	b.cs	b90 <gconv@@Base+0x250>  // b.hs, b.nlast
     c34:	mov	w13, #0x5                   	// #5
     c38:	str	x2, [x27]
     c3c:	ldr	x0, [sp, #120]
     c40:	cbz	x0, ad4 <gconv@@Base+0x194>
     c44:	ldp	x27, x28, [sp, #80]
     c48:	str	x19, [x0]
     c4c:	adrp	x0, 12000 <gconv@@Base+0x116c0>
     c50:	ldr	x0, [x0, #4056]
     c54:	ldr	x1, [sp, #232]
     c58:	ldr	x0, [x0]
     c5c:	eor	x0, x1, x0
     c60:	cbnz	x0, 1dc4 <gconv@@Base+0x1484>
     c64:	mov	w0, w13
     c68:	ldp	x19, x20, [sp, #16]
     c6c:	ldp	x21, x22, [sp, #32]
     c70:	ldp	x23, x24, [sp, #48]
     c74:	ldp	x25, x26, [sp, #64]
     c78:	ldp	x29, x30, [sp], #240
     c7c:	ret
     c80:	sub	w1, w2, #0xc4
     c84:	cmp	w1, #0x4d
     c88:	b.hi	cb4 <gconv@@Base+0x374>  // b.pmore
     c8c:	add	x0, x15, #0x100
     c90:	ldrb	w1, [x0, w1, uxtw]
     c94:	cbz	w1, cd0 <gconv@@Base+0x390>
     c98:	add	x2, x19, #0x1
     c9c:	str	x2, [sp, #216]
     ca0:	strb	w1, [x19]
     ca4:	ldp	x0, x19, [sp, #208]
     ca8:	add	x0, x0, #0x4
     cac:	str	x0, [sp, #208]
     cb0:	b	abc <gconv@@Base+0x17c>
     cb4:	sub	w0, w2, #0x152
     cb8:	cmp	w0, #0x5e
     cbc:	b.hi	d00 <gconv@@Base+0x3c0>  // b.pmore
     cc0:	add	x1, x15, #0x100
     cc4:	sub	w0, w2, #0x104
     cc8:	ldrb	w1, [x1, w0, uxtw]
     ccc:	cbnz	w1, c98 <gconv@@Base+0x358>
     cd0:	sub	w1, w2, #0xc0
     cd4:	mov	w0, #0x1f2e                	// #7982
     cd8:	cmp	w1, w0
     cdc:	b.ls	10d4 <gconv@@Base+0x794>  // b.plast
     ce0:	ldr	x0, [sp, #160]
     ce4:	cbz	x0, 180c <gconv@@Base+0xecc>
     ce8:	ldr	w0, [x20, #16]
     cec:	tbnz	w0, #3, 12fc <gconv@@Base+0x9bc>
     cf0:	ldr	x0, [sp, #208]
     cf4:	tbnz	w18, #1, 137c <gconv@@Base+0xa3c>
     cf8:	mov	w13, #0x6                   	// #6
     cfc:	b	ac8 <gconv@@Base+0x188>
     d00:	sub	w0, w2, #0x2c6
     d04:	cmp	w0, #0x16
     d08:	b.hi	e40 <gconv@@Base+0x500>  // b.pmore
     d0c:	add	x0, x15, #0x100
     d10:	sub	w1, w2, #0x219
     d14:	ldrb	w1, [x0, w1, uxtw]
     d18:	b	c94 <gconv@@Base+0x354>
     d1c:	mov	w13, #0x7                   	// #7
     d20:	ldr	x0, [sp, #208]
     d24:	b	ac8 <gconv@@Base+0x188>
     d28:	ldr	w1, [x26]
     d2c:	sub	w3, w0, #0x41
     d30:	cmp	wzr, w1, asr #3
     d34:	asr	w1, w1, #3
     d38:	b.ne	c00 <gconv@@Base+0x2c0>  // b.any
     d3c:	cmp	w3, #0x16f
     d40:	b.ls	c14 <gconv@@Base+0x2d4>  // b.plast
     d44:	str	w0, [x19], #4
     d48:	b	c1c <gconv@@Base+0x2dc>
     d4c:	cmp	w0, #0x301
     d50:	b.ne	1e7c <gconv@@Base+0x153c>  // b.any
     d54:	cmp	w1, #0x40
     d58:	b.ls	c00 <gconv@@Base+0x2c0>  // b.plast
     d5c:	mov	w7, #0x1b0                 	// #432
     d60:	mov	x6, #0x59                  	// #89
     d64:	cmp	w1, w7
     d68:	mov	w5, #0x1f                  	// #31
     d6c:	b.hi	c00 <gconv@@Base+0x2c0>  // b.pmore
     d70:	add	w7, w5, w6
     d74:	lsr	w9, w7, #1
     d78:	lsr	w7, w7, #1
     d7c:	lsl	x8, x9, #2
     d80:	ldrh	w8, [x16, x8]
     d84:	cmp	w8, w1
     d88:	b.eq	dbc <gconv@@Base+0x47c>  // b.none
     d8c:	cmp	w8, w1
     d90:	b.ls	109c <gconv@@Base+0x75c>  // b.plast
     d94:	cmp	w7, w5
     d98:	b.eq	c00 <gconv@@Base+0x2c0>  // b.none
     d9c:	mov	w6, w7
     da0:	add	w7, w6, w5
     da4:	lsr	w9, w7, #1
     da8:	lsr	w7, w7, #1
     dac:	lsl	x8, x9, #2
     db0:	ldrh	w8, [x16, x8]
     db4:	cmp	w1, w8
     db8:	b.ne	d8c <gconv@@Base+0x44c>  // b.any
     dbc:	add	x9, x16, x9, lsl #2
     dc0:	add	x2, x2, #0x1
     dc4:	ldrh	w0, [x9, #2]
     dc8:	str	w0, [x19]
     dcc:	mov	x19, x4
     dd0:	str	wzr, [x26]
     dd4:	b	c20 <gconv@@Base+0x2e0>
     dd8:	cmp	w0, #0x309
     ddc:	b.ne	e10 <gconv@@Base+0x4d0>  // b.any
     de0:	cmp	w1, #0x40
     de4:	mov	w5, #0x7c                  	// #124
     de8:	mov	x6, #0x93                  	// #147
     dec:	b.hi	bec <gconv@@Base+0x2ac>  // b.pmore
     df0:	str	w1, [x19]
     df4:	str	wzr, [x26]
     df8:	add	x19, x19, #0x8
     dfc:	cmp	x25, x19
     e00:	mov	x19, x4
     e04:	b.cc	c20 <gconv@@Base+0x2e0>  // b.lo, b.ul, b.last
     e08:	str	w0, [x19], #4
     e0c:	b	c1c <gconv@@Base+0x2dc>
     e10:	cmp	w0, #0x323
     e14:	b.ne	1e7c <gconv@@Base+0x153c>  // b.any
     e18:	mov	w5, #0x94                  	// #148
     e1c:	mov	x6, #0xc5                  	// #197
     e20:	b	be4 <gconv@@Base+0x2a4>
     e24:	mov	w13, #0x5                   	// #5
     e28:	ldr	x0, [sp, #208]
     e2c:	b	ac8 <gconv@@Base+0x188>
     e30:	mov	w7, w13
     e34:	cmp	w13, #0x5
     e38:	b.ne	b44 <gconv@@Base+0x204>  // b.any
     e3c:	b	b48 <gconv@@Base+0x208>
     e40:	sub	w0, w2, #0x300
     e44:	cmp	w0, #0x23
     e48:	b.hi	e5c <gconv@@Base+0x51c>  // b.pmore
     e4c:	add	x0, x15, #0x100
     e50:	sub	w1, w2, #0x23c
     e54:	ldrb	w1, [x0, w1, uxtw]
     e58:	b	c94 <gconv@@Base+0x354>
     e5c:	sub	w0, w2, #0x340
     e60:	cmp	w0, #0x1
     e64:	b.ls	10c4 <gconv@@Base+0x784>  // b.plast
     e68:	mov	w7, #0xffffdfed            	// #-8211
     e6c:	add	w0, w2, w7
     e70:	cmp	w0, #0x27
     e74:	b.hi	13d4 <gconv@@Base+0xa94>  // b.pmore
     e78:	add	x0, x15, #0x100
     e7c:	mov	w6, #0xffffe0d5            	// #-7979
     e80:	add	w2, w2, w6
     e84:	ldrb	w1, [x0, w2, uxtw]
     e88:	cbnz	w1, c98 <gconv@@Base+0x358>
     e8c:	b	ce0 <gconv@@Base+0x3a0>
     e90:	ldr	w0, [sp, #136]
     e94:	str	x24, [x27]
     e98:	str	w0, [x26]
     e9c:	ldr	x0, [sp, #128]
     ea0:	ldr	x0, [x0, #96]
     ea4:	cbz	x0, 1134 <gconv@@Base+0x7f4>
     ea8:	stp	x24, x28, [sp, #208]
     eac:	cmp	x21, x24
     eb0:	ldr	w19, [x20, #16]
     eb4:	b.eq	1a0c <gconv@@Base+0x10cc>  // b.none
     eb8:	mov	x0, x28
     ebc:	add	x9, sp, #0xd8
     ec0:	mov	x5, #0x4                   	// #4
     ec4:	add	x3, x24, #0x4
     ec8:	cmp	x21, x3
     ecc:	b.cc	144c <gconv@@Base+0xb0c>  // b.lo, b.ul, b.last
     ed0:	cmp	x13, x0
     ed4:	b.ls	14b0 <gconv@@Base+0xb70>  // b.plast
     ed8:	ldr	w2, [x24]
     edc:	mov	w1, #0x7f                  	// #127
     ee0:	sub	w4, w2, #0xa0
     ee4:	cmp	w4, #0x22
     ee8:	ccmp	w2, w1, #0x0, hi  // hi = pmore
     eec:	b.hi	12a4 <gconv@@Base+0x964>  // b.pmore
     ef0:	add	x1, x0, #0x1
     ef4:	str	x1, [sp, #216]
     ef8:	strb	w2, [x0]
     efc:	ldp	x24, x0, [sp, #208]
     f00:	add	x24, x24, #0x4
     f04:	str	x24, [sp, #208]
     f08:	cmp	x21, x24
     f0c:	b.ne	ec4 <gconv@@Base+0x584>  // b.any
     f10:	str	x21, [x27]
     f14:	ldr	x13, [sp, #200]
     f18:	b	1290 <gconv@@Base+0x950>
     f1c:	mov	x0, x21
     f20:	mov	x21, x20
     f24:	mov	x20, x0
     f28:	mov	x12, x27
     f2c:	ldr	x0, [x23]
     f30:	str	x19, [x21]
     f34:	ldr	x1, [sp, #192]
     f38:	ldr	x14, [sp, #128]
     f3c:	add	x0, x0, x1
     f40:	str	x0, [x23]
     f44:	ldr	x0, [x14, #96]
     f48:	cmp	x0, #0x0
     f4c:	ldr	w0, [sp, #172]
     f50:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     f54:	ccmp	w13, #0x7, #0x0, ne  // ne = any
     f58:	b.eq	1564 <gconv@@Base+0xc24>  // b.none
     f5c:	ldp	x27, x28, [sp, #80]
     f60:	b	c4c <gconv@@Base+0x30c>
     f64:	ldr	x1, [sp, #160]
     f68:	cbz	x1, f70 <gconv@@Base+0x630>
     f6c:	cbnz	w18, 10ac <gconv@@Base+0x76c>
     f70:	mov	w13, #0x6                   	// #6
     f74:	str	x2, [x27]
     f78:	b	c3c <gconv@@Base+0x2fc>
     f7c:	mov	w5, #0x5a                  	// #90
     f80:	mov	x6, #0x7b                  	// #123
     f84:	b	be4 <gconv@@Base+0x2a4>
     f88:	mov	w7, w13
     f8c:	b	b44 <gconv@@Base+0x204>
     f90:	mov	w1, w1
     f94:	ands	w1, w1, #0x7
     f98:	b.eq	a18 <gconv@@Base+0xd8>  // b.none
     f9c:	cbnz	x15, 1da4 <gconv@@Base+0x1464>
     fa0:	stp	x8, x10, [sp, #208]
     fa4:	cmp	w1, #0x4
     fa8:	b.hi	1d84 <gconv@@Base+0x1444>  // b.pmore
     fac:	mov	w19, w1
     fb0:	cbz	w1, 168c <gconv@@Base+0xd4c>
     fb4:	add	x4, x27, #0x3
     fb8:	add	x25, sp, #0xe0
     fbc:	mov	x0, #0x1                   	// #1
     fc0:	add	x1, x25, x0
     fc4:	ldrb	w3, [x4, x0]
     fc8:	cmp	x19, x0
     fcc:	add	x0, x0, #0x1
     fd0:	sturb	w3, [x1, #-1]
     fd4:	b.ne	fc0 <gconv@@Base+0x680>  // b.any
     fd8:	mov	x0, #0x4                   	// #4
     fdc:	sub	x0, x0, x19
     fe0:	add	x0, x8, x0
     fe4:	cmp	x20, x0
     fe8:	b.cc	1758 <gconv@@Base+0xe18>  // b.lo, b.ul, b.last
     fec:	add	x0, x8, #0x1
     ff0:	add	x25, sp, #0xe0
     ff4:	cmp	x10, x28
     ff8:	b.cs	1698 <gconv@@Base+0xd58>  // b.hs, b.nlast
     ffc:	add	x19, x19, #0x1
    1000:	str	x0, [sp, #208]
    1004:	add	x1, x25, x19
    1008:	cmp	x19, #0x3
    100c:	ldurb	w2, [x0, #-1]
    1010:	ccmp	x20, x0, #0x0, ls  // ls = plast
    1014:	add	x0, x0, #0x1
    1018:	sturb	w2, [x1, #-1]
    101c:	b.hi	ffc <gconv@@Base+0x6bc>  // b.pmore
    1020:	ldr	w0, [sp, #224]
    1024:	mov	w1, #0x7f                  	// #127
    1028:	str	x25, [sp, #208]
    102c:	sub	w2, w0, #0xa0
    1030:	cmp	w2, #0x22
    1034:	ccmp	w0, w1, #0x0, hi  // hi = pmore
    1038:	b.hi	14d8 <gconv@@Base+0xb98>  // b.pmore
    103c:	add	x1, x10, #0x1
    1040:	str	x1, [sp, #216]
    1044:	strb	w0, [x10]
    1048:	ldr	x0, [sp, #208]
    104c:	add	x0, x0, #0x4
    1050:	str	x0, [sp, #208]
    1054:	cmp	x0, x25
    1058:	b.eq	1700 <gconv@@Base+0xdc0>  // b.none
    105c:	ldr	w1, [x27]
    1060:	sub	x0, x0, x25
    1064:	and	x2, x1, #0x7
    1068:	cmp	x0, x2
    106c:	b.le	1d64 <gconv@@Base+0x1424>
    1070:	ldr	x8, [x12]
    1074:	sub	x0, x0, x2
    1078:	ldr	w18, [x21, #16]
    107c:	and	w1, w1, #0xfffffff8
    1080:	add	x8, x8, x0
    1084:	str	x8, [x12]
    1088:	str	w1, [sp, #136]
    108c:	ldr	x0, [x14, #96]
    1090:	ldr	x10, [sp, #216]
    1094:	str	w1, [x27]
    1098:	b	a18 <gconv@@Base+0xd8>
    109c:	cmp	w7, w5
    10a0:	b.eq	1794 <gconv@@Base+0xe54>  // b.none
    10a4:	mov	w5, w7
    10a8:	b	da0 <gconv@@Base+0x460>
    10ac:	ldr	x0, [x1]
    10b0:	add	x2, x2, #0x1
    10b4:	mov	w13, #0x6                   	// #6
    10b8:	add	x0, x0, #0x1
    10bc:	str	x0, [x1]
    10c0:	b	c20 <gconv@@Base+0x2e0>
    10c4:	add	x0, x15, #0x100
    10c8:	sub	w1, w2, #0x27c
    10cc:	ldrb	w1, [x0, w1, uxtw]
    10d0:	b	c94 <gconv@@Base+0x354>
    10d4:	mov	w0, #0x1e80                	// #7808
    10d8:	mov	w1, #0x63                  	// #99
    10dc:	cmp	w2, w0
    10e0:	b.eq	162c <gconv@@Base+0xcec>  // b.none
    10e4:	mov	w4, #0xc6                  	// #198
    10e8:	mov	w3, #0x0                   	// #0
    10ec:	ldr	x6, [sp, #176]
    10f0:	b	111c <gconv@@Base+0x7dc>
    10f4:	cmp	w1, w3
    10f8:	b.eq	ce0 <gconv@@Base+0x3a0>  // b.none
    10fc:	mov	w4, w1
    1100:	add	w1, w4, w3
    1104:	lsr	w0, w1, #1
    1108:	lsr	w1, w1, #1
    110c:	lsl	x0, x0, #2
    1110:	ldrh	w0, [x6, x0]
    1114:	cmp	w2, w0
    1118:	b.eq	162c <gconv@@Base+0xcec>  // b.none
    111c:	cmp	w0, w2
    1120:	b.hi	10f4 <gconv@@Base+0x7b4>  // b.pmore
    1124:	cmp	w1, w3
    1128:	b.eq	1614 <gconv@@Base+0xcd4>  // b.none
    112c:	mov	w3, w1
    1130:	b	1100 <gconv@@Base+0x7c0>
    1134:	ldr	w30, [x20, #16]
    1138:	cmp	x21, x24
    113c:	b.eq	1a0c <gconv@@Base+0x10cc>  // b.none
    1140:	add	x3, x28, #0x4
    1144:	and	w30, w30, #0x2
    1148:	cmp	x13, x3
    114c:	mov	x0, x28
    1150:	add	x19, x15, #0x530
    1154:	mov	x5, #0x4                   	// #4
    1158:	b.cc	193c <gconv@@Base+0xffc>  // b.lo, b.ul, b.last
    115c:	nop
    1160:	ldrb	w1, [x24]
    1164:	cmp	w1, #0x7f
    1168:	b.ls	12d8 <gconv@@Base+0x998>  // b.plast
    116c:	sub	w1, w1, #0x80
    1170:	ldrh	w1, [x15, x1, lsl #1]
    1174:	cbz	w1, 1728 <gconv@@Base+0xde8>
    1178:	ldr	w2, [x26]
    117c:	sub	w4, w1, #0x41
    1180:	cmp	wzr, w2, asr #3
    1184:	asr	w2, w2, #3
    1188:	b.eq	12ec <gconv@@Base+0x9ac>  // b.none
    118c:	sub	w6, w1, #0x300
    1190:	cmp	w6, #0x3f
    1194:	b.hi	1254 <gconv@@Base+0x914>  // b.pmore
    1198:	cmp	w1, #0x303
    119c:	b.eq	174c <gconv@@Base+0xe0c>  // b.none
    11a0:	b.ls	123c <gconv@@Base+0x8fc>  // b.plast
    11a4:	cmp	w1, #0x309
    11a8:	b.eq	152c <gconv@@Base+0xbec>  // b.none
    11ac:	cmp	w1, #0x323
    11b0:	b.ne	1e7c <gconv@@Base+0x153c>  // b.any
    11b4:	mov	x6, #0xc5                  	// #197
    11b8:	mov	w8, #0x94                  	// #148
    11bc:	cmp	w2, #0x40
    11c0:	b.ls	1410 <gconv@@Base+0xad0>  // b.plast
    11c4:	ubfiz	x9, x6, #2, #32
    11c8:	ldrh	w9, [x19, x9]
    11cc:	cmp	w2, w9
    11d0:	b.hi	1254 <gconv@@Base+0x914>  // b.pmore
    11d4:	add	w9, w8, w6
    11d8:	lsr	w10, w9, #1
    11dc:	lsr	w9, w9, #1
    11e0:	lsl	x11, x10, #2
    11e4:	ldrh	w11, [x19, x11]
    11e8:	cmp	w2, w11
    11ec:	b.eq	1220 <gconv@@Base+0x8e0>  // b.none
    11f0:	cmp	w2, w11
    11f4:	b.cs	1718 <gconv@@Base+0xdd8>  // b.hs, b.nlast
    11f8:	cmp	w8, w9
    11fc:	b.eq	1254 <gconv@@Base+0x914>  // b.none
    1200:	mov	w6, w9
    1204:	add	w9, w8, w6
    1208:	lsr	w10, w9, #1
    120c:	lsr	w9, w9, #1
    1210:	lsl	x11, x10, #2
    1214:	ldrh	w11, [x19, x11]
    1218:	cmp	w2, w11
    121c:	b.ne	11f0 <gconv@@Base+0x8b0>  // b.any
    1220:	add	x10, x19, x10, lsl #2
    1224:	add	x24, x24, #0x1
    1228:	ldrh	w1, [x10, #2]
    122c:	str	w1, [x0]
    1230:	mov	x0, x3
    1234:	str	wzr, [x26]
    1238:	b	1274 <gconv@@Base+0x934>
    123c:	cmp	w1, #0x300
    1240:	b.eq	1520 <gconv@@Base+0xbe0>  // b.none
    1244:	cmp	w1, #0x301
    1248:	b.ne	1e7c <gconv@@Base+0x153c>  // b.any
    124c:	cmp	w2, #0x40
    1250:	b.hi	15bc <gconv@@Base+0xc7c>  // b.pmore
    1254:	str	w2, [x0]
    1258:	cmp	w4, #0x16f
    125c:	str	wzr, [x26]
    1260:	b.hi	1418 <gconv@@Base+0xad8>  // b.pmore
    1264:	mov	x0, x3
    1268:	lsl	w1, w1, #3
    126c:	str	w1, [x26]
    1270:	add	x24, x24, #0x1
    1274:	cmp	x21, x24
    1278:	b.eq	128c <gconv@@Base+0x94c>  // b.none
    127c:	add	x3, x0, #0x4
    1280:	cmp	x13, x3
    1284:	b.cs	1160 <gconv@@Base+0x820>  // b.hs, b.nlast
    1288:	mov	x5, #0x5                   	// #5
    128c:	str	x24, [x27]
    1290:	cmp	x0, x13
    1294:	b.ne	16dc <gconv@@Base+0xd9c>  // b.any
    1298:	cmp	x5, #0x5
    129c:	b.eq	14c0 <gconv@@Base+0xb80>  // b.none
    12a0:	b	145c <gconv@@Base+0xb1c>
    12a4:	sub	w1, w2, #0xc4
    12a8:	cmp	w1, #0x4d
    12ac:	b.hi	134c <gconv@@Base+0xa0c>  // b.pmore
    12b0:	add	x3, x15, #0x100
    12b4:	ldrb	w1, [x3, w1, uxtw]
    12b8:	cbz	w1, 16a4 <gconv@@Base+0xd64>
    12bc:	add	x2, x0, #0x1
    12c0:	str	x2, [sp, #216]
    12c4:	strb	w1, [x0]
    12c8:	ldp	x24, x0, [sp, #208]
    12cc:	add	x24, x24, #0x4
    12d0:	str	x24, [sp, #208]
    12d4:	b	f08 <gconv@@Base+0x5c8>
    12d8:	ldr	w2, [x26]
    12dc:	sub	w4, w1, #0x41
    12e0:	cmp	wzr, w2, asr #3
    12e4:	asr	w2, w2, #3
    12e8:	b.ne	1254 <gconv@@Base+0x914>  // b.any
    12ec:	cmp	w4, #0x16f
    12f0:	b.ls	1268 <gconv@@Base+0x928>  // b.plast
    12f4:	str	w1, [x0], #4
    12f8:	b	1270 <gconv@@Base+0x930>
    12fc:	ldr	x2, [x27]
    1300:	mov	x4, x21
    1304:	ldr	x0, [sp, #128]
    1308:	add	x3, sp, #0xd0
    130c:	ldr	x6, [sp, #160]
    1310:	mov	x1, x20
    1314:	str	x5, [sp, #104]
    1318:	str	w18, [sp, #112]
    131c:	str	x15, [sp, #184]
    1320:	bl	730 <__gconv_transliterate@plt>
    1324:	ldr	w18, [sp, #112]
    1328:	mov	w13, w0
    132c:	cmp	w0, #0x6
    1330:	ldr	x5, [sp, #104]
    1334:	ldr	x15, [sp, #184]
    1338:	b.eq	1518 <gconv@@Base+0xbd8>  // b.none
    133c:	cmp	w0, #0x5
    1340:	ldp	x0, x19, [sp, #208]
    1344:	b.ne	abc <gconv@@Base+0x17c>  // b.any
    1348:	b	ac8 <gconv@@Base+0x188>
    134c:	sub	w1, w2, #0x152
    1350:	cmp	w1, #0x5e
    1354:	b.hi	147c <gconv@@Base+0xb3c>  // b.pmore
    1358:	add	x1, x15, #0x100
    135c:	sub	w3, w2, #0x104
    1360:	ldrb	w1, [x1, w3, uxtw]
    1364:	b	12b8 <gconv@@Base+0x978>
    1368:	mov	x2, x24
    136c:	mov	x19, x28
    1370:	mov	w13, #0x5                   	// #5
    1374:	str	x2, [x27]
    1378:	b	c3c <gconv@@Base+0x2fc>
    137c:	ldr	x2, [sp, #160]
    1380:	add	x0, x0, #0x4
    1384:	mov	w13, #0x6                   	// #6
    1388:	str	x0, [sp, #208]
    138c:	ldr	x1, [x2]
    1390:	add	x1, x1, #0x1
    1394:	str	x1, [x2]
    1398:	b	abc <gconv@@Base+0x17c>
    139c:	cbnz	x15, 1d40 <gconv@@Base+0x1400>
    13a0:	cmp	w6, #0x1
    13a4:	ldr	x19, [x21, #32]
    13a8:	b.ne	15cc <gconv@@Base+0xc8c>  // b.any
    13ac:	ldr	w20, [x19]
    13b0:	ldr	x2, [x21]
    13b4:	cbz	w20, 13c4 <gconv@@Base+0xa84>
    13b8:	ldr	x0, [x14, #96]
    13bc:	cbz	x0, 1820 <gconv@@Base+0xee0>
    13c0:	str	wzr, [x19]
    13c4:	cbz	w1, 1894 <gconv@@Base+0xf54>
    13c8:	mov	w13, #0x0                   	// #0
    13cc:	str	x2, [x21]
    13d0:	b	c4c <gconv@@Base+0x30c>
    13d4:	mov	w0, #0x20ab                	// #8363
    13d8:	cmp	w2, w0
    13dc:	b.eq	1684 <gconv@@Base+0xd44>  // b.none
    13e0:	mov	w0, #0x20ac                	// #8364
    13e4:	cmp	w2, w0
    13e8:	b.eq	155c <gconv@@Base+0xc1c>  // b.none
    13ec:	mov	w0, #0x2122                	// #8482
    13f0:	cmp	w2, w0
    13f4:	b.eq	17e0 <gconv@@Base+0xea0>  // b.none
    13f8:	mov	w0, #0x1c00                	// #7168
    13fc:	cmp	w0, w2, lsr #7
    1400:	b.ne	cd0 <gconv@@Base+0x390>  // b.any
    1404:	mov	x0, x3
    1408:	str	x3, [sp, #208]
    140c:	b	abc <gconv@@Base+0x17c>
    1410:	str	w2, [x0]
    1414:	str	wzr, [x26]
    1418:	add	x0, x0, #0x8
    141c:	cmp	x13, x0
    1420:	mov	x0, x3
    1424:	b.cc	1274 <gconv@@Base+0x934>  // b.lo, b.ul, b.last
    1428:	str	w1, [x0], #4
    142c:	b	1270 <gconv@@Base+0x930>
    1430:	mov	x0, x21
    1434:	mov	x12, x27
    1438:	mov	x21, x20
    143c:	mov	w13, w7
    1440:	mov	x20, x0
    1444:	ldr	x14, [sp, #128]
    1448:	b	f44 <gconv@@Base+0x604>
    144c:	ldp	x1, x2, [sp, #200]
    1450:	str	x2, [x27]
    1454:	cmp	x0, x1
    1458:	b.ne	16dc <gconv@@Base+0xd9c>  // b.any
    145c:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1460:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1464:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1468:	add	x3, x3, #0x20
    146c:	add	x1, x1, #0xea0
    1470:	add	x0, x0, #0xfd0
    1474:	mov	w2, #0x2eb                 	// #747
    1478:	bl	790 <__assert_fail@plt>
    147c:	sub	w1, w2, #0x2c6
    1480:	cmp	w1, #0x16
    1484:	b.ls	1538 <gconv@@Base+0xbf8>  // b.plast
    1488:	sub	w1, w2, #0x300
    148c:	cmp	w1, #0x23
    1490:	b.hi	17ac <gconv@@Base+0xe6c>  // b.pmore
    1494:	add	x1, x15, #0x100
    1498:	sub	w3, w2, #0x23c
    149c:	ldrb	w1, [x1, w3, uxtw]
    14a0:	b	12b8 <gconv@@Base+0x978>
    14a4:	mov	x0, x21
    14a8:	mov	w13, #0x4                   	// #4
    14ac:	b	ac8 <gconv@@Base+0x188>
    14b0:	ldp	x1, x2, [sp, #200]
    14b4:	str	x2, [x27]
    14b8:	cmp	x0, x1
    14bc:	b.ne	16dc <gconv@@Base+0xd9c>  // b.any
    14c0:	cmp	x0, x28
    14c4:	b.ne	b44 <gconv@@Base+0x204>  // b.any
    14c8:	ldr	w0, [x20, #20]
    14cc:	sub	w0, w0, #0x1
    14d0:	str	w0, [x20, #20]
    14d4:	b	b44 <gconv@@Base+0x204>
    14d8:	sub	w2, w0, #0xc4
    14dc:	cmp	w2, #0x4d
    14e0:	b.ls	1548 <gconv@@Base+0xc08>  // b.plast
    14e4:	sub	w1, w0, #0x152
    14e8:	cmp	w1, #0x5e
    14ec:	b.hi	17e8 <gconv@@Base+0xea8>  // b.pmore
    14f0:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    14f4:	add	x1, x1, #0x28
    14f8:	add	x1, x1, #0x100
    14fc:	sub	w2, w0, #0x104
    1500:	ldrb	w1, [x1, w2, uxtw]
    1504:	cbz	w1, 1998 <gconv@@Base+0x1058>
    1508:	add	x0, x10, #0x1
    150c:	str	x0, [sp, #216]
    1510:	strb	w1, [x10]
    1514:	b	1048 <gconv@@Base+0x708>
    1518:	ldr	x19, [sp, #216]
    151c:	b	cf0 <gconv@@Base+0x3b0>
    1520:	mov	w8, #0x0                   	// #0
    1524:	mov	x6, #0x1e                  	// #30
    1528:	b	11bc <gconv@@Base+0x87c>
    152c:	mov	x6, #0x93                  	// #147
    1530:	mov	w8, #0x7c                  	// #124
    1534:	b	11bc <gconv@@Base+0x87c>
    1538:	add	x1, x15, #0x100
    153c:	sub	w3, w2, #0x219
    1540:	ldrb	w1, [x1, w3, uxtw]
    1544:	b	12b8 <gconv@@Base+0x978>
    1548:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    154c:	add	x1, x1, #0x28
    1550:	add	x1, x1, #0x100
    1554:	ldrb	w1, [x1, w2, uxtw]
    1558:	b	1504 <gconv@@Base+0xbc4>
    155c:	mov	w1, #0x80                  	// #128
    1560:	b	c98 <gconv@@Base+0x358>
    1564:	ldr	x0, [x12]
    1568:	sub	x2, x20, x0
    156c:	cmp	x2, #0x3
    1570:	b.gt	1dcc <gconv@@Base+0x148c>
    1574:	ldr	x4, [x21, #32]
    1578:	cmp	x0, x20
    157c:	add	x0, x0, #0x1
    1580:	add	x1, x4, #0x4
    1584:	b.cs	1ac0 <gconv@@Base+0x1180>  // b.hs, b.nlast
    1588:	str	x0, [x12]
    158c:	cmp	x20, x0
    1590:	add	x0, x0, #0x1
    1594:	ldurb	w3, [x0, #-2]
    1598:	strb	w3, [x1], #1
    159c:	b.ne	1588 <gconv@@Base+0xc48>  // b.any
    15a0:	mov	w1, w2
    15a4:	ldr	w0, [x4]
    15a8:	ldp	x27, x28, [sp, #80]
    15ac:	and	w0, w0, #0xfffffff8
    15b0:	orr	w0, w0, w1
    15b4:	str	w0, [x4]
    15b8:	b	c4c <gconv@@Base+0x30c>
    15bc:	mov	w9, #0x1b0                 	// #432
    15c0:	mov	x6, #0x59                  	// #89
    15c4:	mov	w8, #0x1f                  	// #31
    15c8:	b	11cc <gconv@@Base+0x88c>
    15cc:	str	xzr, [x19]
    15d0:	mov	w13, #0x0                   	// #0
    15d4:	ldr	w0, [x21, #16]
    15d8:	tbnz	w0, #0, c4c <gconv@@Base+0x30c>
    15dc:	mov	x0, x22
    15e0:	str	w6, [sp, #104]
    15e4:	bl	780 <_dl_mcount_wrapper_check@plt>
    15e8:	ldr	w6, [sp, #104]
    15ec:	mov	w7, w24
    15f0:	ldr	x1, [sp, #144]
    15f4:	mov	x5, x23
    15f8:	mov	x0, x26
    15fc:	mov	x4, #0x0                   	// #0
    1600:	mov	x3, #0x0                   	// #0
    1604:	mov	x2, #0x0                   	// #0
    1608:	blr	x22
    160c:	mov	w13, w0
    1610:	b	c4c <gconv@@Base+0x30c>
    1614:	ldr	x1, [sp, #176]
    1618:	ubfiz	x0, x4, #2, #32
    161c:	ldrh	w0, [x1, x0]
    1620:	cmp	w2, w0
    1624:	b.ne	ce0 <gconv@@Base+0x3a0>  // b.any
    1628:	mov	w1, w4
    162c:	add	x0, x19, #0x1
    1630:	cmp	x25, x0
    1634:	b.ls	e24 <gconv@@Base+0x4e4>  // b.plast
    1638:	ldr	x2, [sp, #176]
    163c:	str	x0, [sp, #216]
    1640:	add	x1, x2, w1, uxtw #2
    1644:	ldrb	w0, [x1, #2]
    1648:	strb	w0, [x19]
    164c:	ldrb	w1, [x1, #3]
    1650:	ldr	x0, [sp, #216]
    1654:	add	x2, x0, #0x1
    1658:	str	x2, [sp, #216]
    165c:	strb	w1, [x0]
    1660:	ldp	x2, x19, [sp, #208]
    1664:	add	x0, x2, #0x4
    1668:	str	x0, [sp, #208]
    166c:	b	abc <gconv@@Base+0x17c>
    1670:	mov	x2, x21
    1674:	mov	x19, x28
    1678:	mov	w13, #0x4                   	// #4
    167c:	str	x2, [x27]
    1680:	b	c3c <gconv@@Base+0x2fc>
    1684:	mov	w1, #0xfe                  	// #254
    1688:	b	c98 <gconv@@Base+0x358>
    168c:	mov	x0, #0x4                   	// #4
    1690:	mov	x19, #0x0                   	// #0
    1694:	b	fe0 <gconv@@Base+0x6a0>
    1698:	mov	w13, #0x5                   	// #5
    169c:	ldp	x27, x28, [sp, #80]
    16a0:	b	c4c <gconv@@Base+0x30c>
    16a4:	sub	w3, w2, #0xc0
    16a8:	mov	w1, #0x1f2e                	// #7982
    16ac:	cmp	w3, w1
    16b0:	b.ls	1a58 <gconv@@Base+0x1118>  // b.plast
    16b4:	ldr	x1, [sp, #160]
    16b8:	cbz	x1, 144c <gconv@@Base+0xb0c>
    16bc:	ldr	w1, [x20, #16]
    16c0:	tbnz	w1, #3, 18b4 <gconv@@Base+0xf74>
    16c4:	ldr	x8, [sp, #208]
    16c8:	tbnz	w19, #1, 19ec <gconv@@Base+0x10ac>
    16cc:	ldr	x1, [sp, #200]
    16d0:	str	x8, [x27]
    16d4:	cmp	x1, x0
    16d8:	b.eq	145c <gconv@@Base+0xb1c>  // b.none
    16dc:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    16e0:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    16e4:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    16e8:	add	x3, x3, #0x20
    16ec:	add	x1, x1, #0xea0
    16f0:	add	x0, x0, #0xfb8
    16f4:	mov	w2, #0x2ea                 	// #746
    16f8:	bl	790 <__assert_fail@plt>
    16fc:	cbnz	w13, f5c <gconv@@Base+0x61c>
    1700:	ldr	w0, [x27]
    1704:	ldr	w18, [x21, #16]
    1708:	str	w0, [sp, #136]
    170c:	ldr	x8, [x12]
    1710:	ldr	x0, [x14, #96]
    1714:	b	a18 <gconv@@Base+0xd8>
    1718:	cmp	w8, w9
    171c:	b.eq	1b6c <gconv@@Base+0x122c>  // b.none
    1720:	mov	w8, w9
    1724:	b	11d4 <gconv@@Base+0x894>
    1728:	ldr	x2, [sp, #160]
    172c:	cbz	x2, 1818 <gconv@@Base+0xed8>
    1730:	cbz	w30, 1818 <gconv@@Base+0xed8>
    1734:	ldr	x1, [x2]
    1738:	add	x24, x24, #0x1
    173c:	mov	x5, #0x6                   	// #6
    1740:	add	x1, x1, #0x1
    1744:	str	x1, [x2]
    1748:	b	1274 <gconv@@Base+0x934>
    174c:	mov	x6, #0x7b                  	// #123
    1750:	mov	w8, #0x5a                  	// #90
    1754:	b	11bc <gconv@@Base+0x87c>
    1758:	str	x20, [x12]
    175c:	cmp	x8, x20
    1760:	b.cs	1788 <gconv@@Base+0xe48>  // b.hs, b.nlast
    1764:	add	x8, x8, #0x1
    1768:	add	x9, x27, x19
    176c:	str	x8, [sp, #208]
    1770:	cmp	x8, x20
    1774:	add	x9, x9, #0x1
    1778:	add	x8, x8, #0x1
    177c:	ldurb	w0, [x8, #-2]
    1780:	strb	w0, [x9, #3]
    1784:	b.ne	176c <gconv@@Base+0xe2c>  // b.any
    1788:	mov	w13, #0x7                   	// #7
    178c:	ldp	x27, x28, [sp, #80]
    1790:	b	c4c <gconv@@Base+0x30c>
    1794:	ubfiz	x5, x6, #2, #32
    1798:	ldrh	w5, [x16, x5]
    179c:	cmp	w1, w5
    17a0:	b.ne	c00 <gconv@@Base+0x2c0>  // b.any
    17a4:	mov	x9, x6
    17a8:	b	dbc <gconv@@Base+0x47c>
    17ac:	sub	w1, w2, #0x340
    17b0:	cmp	w1, #0x1
    17b4:	b.ls	194c <gconv@@Base+0x100c>  // b.plast
    17b8:	mov	w4, #0xffffdfed            	// #-8211
    17bc:	add	w1, w2, w4
    17c0:	cmp	w1, #0x27
    17c4:	b.hi	195c <gconv@@Base+0x101c>  // b.pmore
    17c8:	mov	w1, #0xffffe0d5            	// #-7979
    17cc:	add	w2, w2, w1
    17d0:	add	x1, x15, #0x100
    17d4:	ldrb	w1, [x1, w2, uxtw]
    17d8:	cbnz	w1, 12bc <gconv@@Base+0x97c>
    17dc:	b	16b4 <gconv@@Base+0xd74>
    17e0:	mov	w1, #0x99                  	// #153
    17e4:	b	c98 <gconv@@Base+0x358>
    17e8:	sub	w1, w0, #0x2c6
    17ec:	cmp	w1, #0x16
    17f0:	b.hi	1918 <gconv@@Base+0xfd8>  // b.pmore
    17f4:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    17f8:	add	x1, x1, #0x28
    17fc:	add	x1, x1, #0x100
    1800:	sub	w2, w0, #0x219
    1804:	ldrb	w1, [x1, w2, uxtw]
    1808:	b	1504 <gconv@@Base+0xbc4>
    180c:	mov	w13, #0x6                   	// #6
    1810:	ldr	x0, [sp, #208]
    1814:	b	ac8 <gconv@@Base+0x188>
    1818:	mov	x5, #0x6                   	// #6
    181c:	b	128c <gconv@@Base+0x94c>
    1820:	ldr	x0, [x21, #8]
    1824:	add	x25, x2, #0x4
    1828:	cmp	x25, x0
    182c:	b.hi	1b64 <gconv@@Base+0x1224>  // b.pmore
    1830:	asr	w0, w20, #3
    1834:	str	w0, [x2]
    1838:	ldr	w0, [x21, #16]
    183c:	str	wzr, [x19]
    1840:	tbnz	w0, #0, 1e14 <gconv@@Base+0x14d4>
    1844:	mov	x0, x22
    1848:	str	x2, [sp, #216]
    184c:	bl	780 <_dl_mcount_wrapper_check@plt>
    1850:	ldr	x1, [sp, #144]
    1854:	mov	w7, w24
    1858:	mov	x5, x23
    185c:	mov	x3, x25
    1860:	add	x2, sp, #0xd8
    1864:	mov	x0, x26
    1868:	mov	w6, #0x0                   	// #0
    186c:	mov	x4, #0x0                   	// #0
    1870:	blr	x22
    1874:	mov	w13, w0
    1878:	cmp	w0, #0x4
    187c:	b.eq	1894 <gconv@@Base+0xf54>  // b.none
    1880:	ldr	x0, [sp, #216]
    1884:	cmp	x25, x0
    1888:	b.eq	1890 <gconv@@Base+0xf50>  // b.none
    188c:	str	w20, [x19]
    1890:	cbnz	w13, c4c <gconv@@Base+0x30c>
    1894:	mov	x0, x22
    1898:	bl	780 <_dl_mcount_wrapper_check@plt>
    189c:	mov	w7, w24
    18a0:	mov	x5, x23
    18a4:	mov	x0, x26
    18a8:	mov	w6, #0x1                   	// #1
    18ac:	ldr	x1, [sp, #144]
    18b0:	b	15fc <gconv@@Base+0xcbc>
    18b4:	ldr	x2, [x27]
    18b8:	mov	x5, x9
    18bc:	ldr	x0, [sp, #128]
    18c0:	mov	x4, x21
    18c4:	ldr	x6, [sp, #160]
    18c8:	add	x3, sp, #0xd0
    18cc:	mov	x1, x20
    18d0:	stp	x9, x13, [sp, #104]
    18d4:	str	w7, [sp, #136]
    18d8:	str	x15, [sp, #184]
    18dc:	bl	730 <__gconv_transliterate@plt>
    18e0:	sxtw	x5, w0
    18e4:	ldr	w7, [sp, #136]
    18e8:	cmp	w5, #0x6
    18ec:	ldp	x9, x13, [sp, #104]
    18f0:	ldr	x15, [sp, #184]
    18f4:	b.eq	1ab8 <gconv@@Base+0x1178>  // b.none
    18f8:	cmp	w5, #0x5
    18fc:	ldp	x24, x0, [sp, #208]
    1900:	b.ne	f08 <gconv@@Base+0x5c8>  // b.any
    1904:	ldr	x1, [sp, #200]
    1908:	str	x24, [x27]
    190c:	cmp	x0, x1
    1910:	b.eq	14c0 <gconv@@Base+0xb80>  // b.none
    1914:	b	16dc <gconv@@Base+0xd9c>
    1918:	sub	w1, w0, #0x300
    191c:	cmp	w1, #0x23
    1920:	b.hi	1a1c <gconv@@Base+0x10dc>  // b.pmore
    1924:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    1928:	add	x1, x1, #0x28
    192c:	add	x1, x1, #0x100
    1930:	sub	w2, w0, #0x23c
    1934:	ldrb	w1, [x1, w2, uxtw]
    1938:	b	1504 <gconv@@Base+0xbc4>
    193c:	str	x24, [x27]
    1940:	cmp	x13, x28
    1944:	b.eq	14c8 <gconv@@Base+0xb88>  // b.none
    1948:	b	16dc <gconv@@Base+0xd9c>
    194c:	add	x1, x15, #0x100
    1950:	sub	w3, w2, #0x27c
    1954:	ldrb	w1, [x1, w3, uxtw]
    1958:	b	12b8 <gconv@@Base+0x978>
    195c:	mov	w1, #0x20ab                	// #8363
    1960:	cmp	w2, w1
    1964:	b.eq	1ad0 <gconv@@Base+0x1190>  // b.none
    1968:	mov	w1, #0x20ac                	// #8364
    196c:	cmp	w2, w1
    1970:	b.eq	1ac8 <gconv@@Base+0x1188>  // b.none
    1974:	mov	w1, #0x2122                	// #8482
    1978:	cmp	w2, w1
    197c:	b.eq	1ad8 <gconv@@Base+0x1198>  // b.none
    1980:	mov	w1, #0x1c00                	// #7168
    1984:	cmp	w1, w2, lsr #7
    1988:	b.ne	16a4 <gconv@@Base+0xd64>  // b.any
    198c:	mov	x24, x3
    1990:	str	x3, [sp, #208]
    1994:	b	f08 <gconv@@Base+0x5c8>
    1998:	sub	w2, w0, #0xc0
    199c:	mov	w1, #0x1f2e                	// #7982
    19a0:	cmp	w2, w1
    19a4:	b.ls	1b9c <gconv@@Base+0x125c>  // b.plast
    19a8:	ldr	x0, [sp, #160]
    19ac:	cbz	x0, 19e0 <gconv@@Base+0x10a0>
    19b0:	tbnz	w18, #3, 1c64 <gconv@@Base+0x1324>
    19b4:	tbz	w18, #1, 19e0 <gconv@@Base+0x10a0>
    19b8:	mov	x0, x25
    19bc:	ldr	x2, [sp, #160]
    19c0:	add	x0, x0, #0x4
    19c4:	str	x0, [sp, #208]
    19c8:	ldr	x1, [x2]
    19cc:	add	x0, x1, #0x1
    19d0:	str	x0, [x2]
    19d4:	ldr	x0, [sp, #208]
    19d8:	cmp	x0, x25
    19dc:	b.ne	105c <gconv@@Base+0x71c>  // b.any
    19e0:	mov	w13, #0x6                   	// #6
    19e4:	ldp	x27, x28, [sp, #80]
    19e8:	b	c4c <gconv@@Base+0x30c>
    19ec:	ldr	x2, [sp, #160]
    19f0:	add	x24, x8, #0x4
    19f4:	mov	x5, #0x6                   	// #6
    19f8:	str	x24, [sp, #208]
    19fc:	ldr	x1, [x2]
    1a00:	add	x1, x1, #0x1
    1a04:	str	x1, [x2]
    1a08:	b	f08 <gconv@@Base+0x5c8>
    1a0c:	str	x21, [x27]
    1a10:	cmp	x13, x28
    1a14:	b.eq	145c <gconv@@Base+0xb1c>  // b.none
    1a18:	b	16dc <gconv@@Base+0xd9c>
    1a1c:	sub	w1, w0, #0x340
    1a20:	cmp	w1, #0x1
    1a24:	b.ls	1b4c <gconv@@Base+0x120c>  // b.plast
    1a28:	mov	w11, #0xffffdfed            	// #-8211
    1a2c:	add	w1, w0, w11
    1a30:	cmp	w1, #0x27
    1a34:	b.hi	1b10 <gconv@@Base+0x11d0>  // b.pmore
    1a38:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    1a3c:	add	x1, x1, #0x28
    1a40:	add	x1, x1, #0x100
    1a44:	mov	w9, #0xffffe0d5            	// #-7979
    1a48:	add	w0, w0, w9
    1a4c:	ldrb	w1, [x1, w0, uxtw]
    1a50:	cbnz	w1, 1508 <gconv@@Base+0xbc8>
    1a54:	b	19a8 <gconv@@Base+0x1068>
    1a58:	mov	w3, #0x1e80                	// #7808
    1a5c:	cmp	w2, w3
    1a60:	b.eq	1df4 <gconv@@Base+0x14b4>  // b.none
    1a64:	mov	w6, #0x0                   	// #0
    1a68:	mov	w1, #0x63                  	// #99
    1a6c:	mov	w4, #0xc6                  	// #198
    1a70:	ldr	x8, [sp, #176]
    1a74:	b	1aa0 <gconv@@Base+0x1160>
    1a78:	cmp	w1, w6
    1a7c:	b.eq	16b4 <gconv@@Base+0xd74>  // b.none
    1a80:	mov	w4, w1
    1a84:	add	w1, w4, w6
    1a88:	lsr	w3, w1, #1
    1a8c:	lsr	w1, w1, #1
    1a90:	lsl	x3, x3, #2
    1a94:	ldrh	w3, [x8, x3]
    1a98:	cmp	w2, w3
    1a9c:	b.eq	1ae0 <gconv@@Base+0x11a0>  // b.none
    1aa0:	cmp	w3, w2
    1aa4:	b.hi	1a78 <gconv@@Base+0x1138>  // b.pmore
    1aa8:	cmp	w1, w6
    1aac:	b.eq	1b84 <gconv@@Base+0x1244>  // b.none
    1ab0:	mov	w6, w1
    1ab4:	b	1a84 <gconv@@Base+0x1144>
    1ab8:	ldr	x0, [sp, #216]
    1abc:	b	16c4 <gconv@@Base+0xd84>
    1ac0:	mov	w1, #0x0                   	// #0
    1ac4:	b	15a4 <gconv@@Base+0xc64>
    1ac8:	mov	w1, #0x80                  	// #128
    1acc:	b	12bc <gconv@@Base+0x97c>
    1ad0:	mov	w1, #0xfe                  	// #254
    1ad4:	b	12bc <gconv@@Base+0x97c>
    1ad8:	mov	w1, #0x99                  	// #153
    1adc:	b	12bc <gconv@@Base+0x97c>
    1ae0:	mov	w4, w1
    1ae4:	add	x1, x0, #0x1
    1ae8:	cmp	x13, x1
    1aec:	b.ls	14b0 <gconv@@Base+0xb70>  // b.plast
    1af0:	ldr	x2, [sp, #176]
    1af4:	str	x1, [sp, #216]
    1af8:	add	x4, x2, w4, uxtw #2
    1afc:	ldrb	w1, [x4, #2]
    1b00:	strb	w1, [x0]
    1b04:	ldrb	w1, [x4, #3]
    1b08:	ldr	x0, [sp, #216]
    1b0c:	b	12bc <gconv@@Base+0x97c>
    1b10:	mov	w1, #0x20ab                	// #8363
    1b14:	cmp	w0, w1
    1b18:	b.eq	1e0c <gconv@@Base+0x14cc>  // b.none
    1b1c:	mov	w1, #0x20ac                	// #8364
    1b20:	cmp	w0, w1
    1b24:	b.eq	1e04 <gconv@@Base+0x14c4>  // b.none
    1b28:	mov	w1, #0x2122                	// #8482
    1b2c:	cmp	w0, w1
    1b30:	b.eq	1dfc <gconv@@Base+0x14bc>  // b.none
    1b34:	mov	w1, #0x1c00                	// #7168
    1b38:	cmp	w1, w0, lsr #7
    1b3c:	b.ne	1998 <gconv@@Base+0x1058>  // b.any
    1b40:	add	x0, x25, #0x4
    1b44:	str	x0, [sp, #208]
    1b48:	b	105c <gconv@@Base+0x71c>
    1b4c:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    1b50:	add	x1, x1, #0x28
    1b54:	add	x1, x1, #0x100
    1b58:	sub	w2, w0, #0x27c
    1b5c:	ldrb	w1, [x1, w2, uxtw]
    1b60:	b	1504 <gconv@@Base+0xbc4>
    1b64:	mov	w13, #0x5                   	// #5
    1b68:	b	c4c <gconv@@Base+0x30c>
    1b6c:	ubfiz	x8, x6, #2, #32
    1b70:	ldrh	w8, [x19, x8]
    1b74:	cmp	w2, w8
    1b78:	b.ne	1254 <gconv@@Base+0x914>  // b.any
    1b7c:	mov	x10, x6
    1b80:	b	1220 <gconv@@Base+0x8e0>
    1b84:	ldr	x3, [sp, #176]
    1b88:	ubfiz	x1, x4, #2, #32
    1b8c:	ldrh	w1, [x3, x1]
    1b90:	cmp	w2, w1
    1b94:	b.ne	16b4 <gconv@@Base+0xd74>  // b.any
    1b98:	b	1ae4 <gconv@@Base+0x11a4>
    1b9c:	mov	w2, #0x1e80                	// #7808
    1ba0:	cmp	w0, w2
    1ba4:	b.eq	1dec <gconv@@Base+0x14ac>  // b.none
    1ba8:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1bac:	add	x3, x3, #0x28
    1bb0:	add	x3, x3, #0x210
    1bb4:	mov	w1, #0x63                  	// #99
    1bb8:	mov	w4, #0xc6                  	// #198
    1bbc:	mov	w5, #0x0                   	// #0
    1bc0:	b	1bec <gconv@@Base+0x12ac>
    1bc4:	cmp	w5, w1
    1bc8:	b.eq	19a8 <gconv@@Base+0x1068>  // b.none
    1bcc:	mov	w4, w1
    1bd0:	add	w1, w4, w5
    1bd4:	lsr	w2, w1, #1
    1bd8:	lsr	w1, w1, #1
    1bdc:	lsl	x2, x2, #2
    1be0:	ldrh	w2, [x3, x2]
    1be4:	cmp	w0, w2
    1be8:	b.eq	1c24 <gconv@@Base+0x12e4>  // b.none
    1bec:	cmp	w0, w2
    1bf0:	b.cc	1bc4 <gconv@@Base+0x1284>  // b.lo, b.ul, b.last
    1bf4:	cmp	w5, w1
    1bf8:	b.eq	1c04 <gconv@@Base+0x12c4>  // b.none
    1bfc:	mov	w5, w1
    1c00:	b	1bd0 <gconv@@Base+0x1290>
    1c04:	adrp	x1, 2000 <gconv@@Base+0x16c0>
    1c08:	add	x1, x1, #0x28
    1c0c:	add	x1, x1, #0x210
    1c10:	ubfiz	x2, x4, #2, #32
    1c14:	ldrh	w1, [x1, x2]
    1c18:	cmp	w0, w1
    1c1c:	b.ne	19a8 <gconv@@Base+0x1068>  // b.any
    1c20:	mov	w1, w4
    1c24:	add	x2, x10, #0x1
    1c28:	cmp	x28, x2
    1c2c:	b.ls	1698 <gconv@@Base+0xd58>  // b.plast
    1c30:	adrp	x0, 2000 <gconv@@Base+0x16c0>
    1c34:	add	x0, x0, #0x28
    1c38:	add	x0, x0, #0x210
    1c3c:	str	x2, [sp, #216]
    1c40:	add	x1, x0, w1, uxtw #2
    1c44:	ldrb	w0, [x1, #2]
    1c48:	strb	w0, [x10]
    1c4c:	ldrb	w1, [x1, #3]
    1c50:	ldr	x0, [sp, #216]
    1c54:	add	x2, x0, #0x1
    1c58:	str	x2, [sp, #216]
    1c5c:	strb	w1, [x0]
    1c60:	b	1048 <gconv@@Base+0x708>
    1c64:	add	x4, x25, x19
    1c68:	mov	x6, x0
    1c6c:	mov	x2, x8
    1c70:	mov	x0, x14
    1c74:	add	x5, sp, #0xd8
    1c78:	add	x3, sp, #0xd0
    1c7c:	mov	x1, x21
    1c80:	stp	x14, x4, [sp, #104]
    1c84:	str	w18, [sp, #120]
    1c88:	stp	x10, x12, [sp, #128]
    1c8c:	str	x15, [sp, #152]
    1c90:	bl	730 <__gconv_transliterate@plt>
    1c94:	ldr	w18, [sp, #120]
    1c98:	mov	w13, w0
    1c9c:	cmp	w0, #0x6
    1ca0:	ldr	x14, [sp, #104]
    1ca4:	ldr	x12, [sp, #136]
    1ca8:	ldr	x15, [sp, #152]
    1cac:	b.eq	1d34 <gconv@@Base+0x13f4>  // b.none
    1cb0:	ldr	x0, [sp, #208]
    1cb4:	cmp	x0, x25
    1cb8:	b.ne	105c <gconv@@Base+0x71c>  // b.any
    1cbc:	cmp	w13, #0x7
    1cc0:	ldr	x4, [sp, #112]
    1cc4:	ldr	x10, [sp, #128]
    1cc8:	b.ne	16fc <gconv@@Base+0xdbc>  // b.any
    1ccc:	add	x0, x25, #0x4
    1cd0:	cmp	x4, x0
    1cd4:	b.eq	1e5c <gconv@@Base+0x151c>  // b.none
    1cd8:	ldr	w0, [x27]
    1cdc:	ldr	x1, [x12]
    1ce0:	and	x2, x0, #0x7
    1ce4:	sub	x2, x19, x2
    1ce8:	and	w0, w0, #0xfffffff8
    1cec:	add	x1, x1, x2
    1cf0:	str	x1, [x12]
    1cf4:	cmp	x19, w0, sxtw
    1cf8:	b.le	1e3c <gconv@@Base+0x14fc>
    1cfc:	cmp	x19, #0x4
    1d00:	b.hi	1e1c <gconv@@Base+0x14dc>  // b.pmore
    1d04:	orr	w0, w0, w19
    1d08:	str	w0, [x27]
    1d0c:	cmp	x4, x25
    1d10:	b.ls	1788 <gconv@@Base+0xe48>  // b.plast
    1d14:	add	x9, x27, #0x4
    1d18:	add	x25, x25, #0x1
    1d1c:	str	x25, [sp, #208]
    1d20:	cmp	x4, x25
    1d24:	ldurb	w0, [x25, #-1]
    1d28:	strb	w0, [x9], #1
    1d2c:	b.ne	1d18 <gconv@@Base+0x13d8>  // b.any
    1d30:	b	1788 <gconv@@Base+0xe48>
    1d34:	tbz	w18, #1, 19d4 <gconv@@Base+0x1094>
    1d38:	ldr	x0, [sp, #208]
    1d3c:	b	19bc <gconv@@Base+0x107c>
    1d40:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1d44:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1d48:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1d4c:	add	x3, x3, #0x20
    1d50:	add	x1, x1, #0xea0
    1d54:	add	x0, x0, #0xeb8
    1d58:	mov	w2, #0x1a4                 	// #420
    1d5c:	stp	x27, x28, [sp, #80]
    1d60:	bl	790 <__assert_fail@plt>
    1d64:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1d68:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1d6c:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1d70:	add	x3, x3, #0x8
    1d74:	add	x1, x1, #0xed0
    1d78:	add	x0, x0, #0xf10
    1d7c:	mov	w2, #0x1c9                 	// #457
    1d80:	bl	790 <__assert_fail@plt>
    1d84:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1d88:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1d8c:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1d90:	add	x3, x3, #0x8
    1d94:	add	x1, x1, #0xed0
    1d98:	add	x0, x0, #0xee0
    1d9c:	mov	w2, #0x18b                 	// #395
    1da0:	bl	790 <__assert_fail@plt>
    1da4:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1da8:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1dac:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1db0:	add	x3, x3, #0x20
    1db4:	add	x1, x1, #0xea0
    1db8:	add	x0, x0, #0xeb8
    1dbc:	mov	w2, #0x234                 	// #564
    1dc0:	bl	790 <__assert_fail@plt>
    1dc4:	stp	x27, x28, [sp, #80]
    1dc8:	bl	740 <__stack_chk_fail@plt>
    1dcc:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1dd0:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1dd4:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1dd8:	add	x3, x3, #0x20
    1ddc:	add	x1, x1, #0xea0
    1de0:	add	x0, x0, #0xff0
    1de4:	mov	w2, #0x31e                 	// #798
    1de8:	bl	790 <__assert_fail@plt>
    1dec:	mov	w1, #0x63                  	// #99
    1df0:	b	1c24 <gconv@@Base+0x12e4>
    1df4:	mov	w4, #0x63                  	// #99
    1df8:	b	1ae4 <gconv@@Base+0x11a4>
    1dfc:	mov	w1, #0x99                  	// #153
    1e00:	b	1508 <gconv@@Base+0xbc8>
    1e04:	mov	w1, #0x80                  	// #128
    1e08:	b	1508 <gconv@@Base+0xbc8>
    1e0c:	mov	w1, #0xfe                  	// #254
    1e10:	b	1508 <gconv@@Base+0xbc8>
    1e14:	mov	x2, x25
    1e18:	b	13c8 <gconv@@Base+0xa88>
    1e1c:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1e20:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1e24:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1e28:	add	x3, x3, #0x8
    1e2c:	add	x1, x1, #0xed0
    1e30:	add	x0, x0, #0xf88
    1e34:	mov	w2, #0x1e6                 	// #486
    1e38:	bl	790 <__assert_fail@plt>
    1e3c:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1e40:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1e44:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1e48:	add	x3, x3, #0x8
    1e4c:	add	x1, x1, #0xed0
    1e50:	add	x0, x0, #0xf60
    1e54:	mov	w2, #0x1e5                 	// #485
    1e58:	bl	790 <__assert_fail@plt>
    1e5c:	adrp	x3, 2000 <gconv@@Base+0x16c0>
    1e60:	adrp	x1, 1000 <gconv@@Base+0x6c0>
    1e64:	adrp	x0, 1000 <gconv@@Base+0x6c0>
    1e68:	add	x3, x3, #0x8
    1e6c:	add	x1, x1, #0xed0
    1e70:	add	x0, x0, #0xf38
    1e74:	mov	w2, #0x1db                 	// #475
    1e78:	bl	790 <__assert_fail@plt>
    1e7c:	bl	760 <abort@plt>

Disassembly of section .fini:

0000000000001e80 <.fini>:
    1e80:	stp	x29, x30, [sp, #-16]!
    1e84:	mov	x29, sp
    1e88:	ldp	x29, x30, [sp], #16
    1e8c:	ret
