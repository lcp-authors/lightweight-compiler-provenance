
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lzmadec_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400aa8 <.init>:
  400aa8:	stp	x29, x30, [sp, #-16]!
  400aac:	mov	x29, sp
  400ab0:	bl	400ea0 <ferror@plt+0x290>
  400ab4:	ldp	x29, x30, [sp], #16
  400ab8:	ret

Disassembly of section .plt:

0000000000400ac0 <exit@plt-0x20>:
  400ac0:	stp	x16, x30, [sp, #-16]!
  400ac4:	adrp	x16, 411000 <ferror@plt+0x103f0>
  400ac8:	ldr	x17, [x16, #4088]
  400acc:	add	x16, x16, #0xff8
  400ad0:	br	x17
  400ad4:	nop
  400ad8:	nop
  400adc:	nop

0000000000400ae0 <exit@plt>:
  400ae0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400ae4:	ldr	x17, [x16]
  400ae8:	add	x16, x16, #0x0
  400aec:	br	x17

0000000000400af0 <lzma_code@plt>:
  400af0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400af4:	ldr	x17, [x16, #8]
  400af8:	add	x16, x16, #0x8
  400afc:	br	x17

0000000000400b00 <fputc@plt>:
  400b00:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b04:	ldr	x17, [x16, #16]
  400b08:	add	x16, x16, #0x10
  400b0c:	br	x17

0000000000400b10 <fclose@plt>:
  400b10:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b14:	ldr	x17, [x16, #24]
  400b18:	add	x16, x16, #0x18
  400b1c:	br	x17

0000000000400b20 <fopen@plt>:
  400b20:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b24:	ldr	x17, [x16, #32]
  400b28:	add	x16, x16, #0x20
  400b2c:	br	x17

0000000000400b30 <__libc_start_main@plt>:
  400b30:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b34:	ldr	x17, [x16, #40]
  400b38:	add	x16, x16, #0x28
  400b3c:	br	x17

0000000000400b40 <strerror@plt>:
  400b40:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b44:	ldr	x17, [x16, #48]
  400b48:	add	x16, x16, #0x30
  400b4c:	br	x17

0000000000400b50 <lzma_version_string@plt>:
  400b50:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b54:	ldr	x17, [x16, #56]
  400b58:	add	x16, x16, #0x38
  400b5c:	br	x17

0000000000400b60 <__gmon_start__@plt>:
  400b60:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b64:	ldr	x17, [x16, #64]
  400b68:	add	x16, x16, #0x40
  400b6c:	br	x17

0000000000400b70 <abort@plt>:
  400b70:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b74:	ldr	x17, [x16, #72]
  400b78:	add	x16, x16, #0x48
  400b7c:	br	x17

0000000000400b80 <feof@plt>:
  400b80:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b84:	ldr	x17, [x16, #80]
  400b88:	add	x16, x16, #0x50
  400b8c:	br	x17

0000000000400b90 <lzma_alone_decoder@plt>:
  400b90:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400b94:	ldr	x17, [x16, #88]
  400b98:	add	x16, x16, #0x58
  400b9c:	br	x17

0000000000400ba0 <getopt_long@plt>:
  400ba0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400ba4:	ldr	x17, [x16, #96]
  400ba8:	add	x16, x16, #0x60
  400bac:	br	x17

0000000000400bb0 <fread@plt>:
  400bb0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400bb4:	ldr	x17, [x16, #104]
  400bb8:	add	x16, x16, #0x68
  400bbc:	br	x17

0000000000400bc0 <fwrite@plt>:
  400bc0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400bc4:	ldr	x17, [x16, #112]
  400bc8:	add	x16, x16, #0x70
  400bcc:	br	x17

0000000000400bd0 <vfprintf@plt>:
  400bd0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400bd4:	ldr	x17, [x16, #120]
  400bd8:	add	x16, x16, #0x78
  400bdc:	br	x17

0000000000400be0 <printf@plt>:
  400be0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400be4:	ldr	x17, [x16, #128]
  400be8:	add	x16, x16, #0x80
  400bec:	br	x17

0000000000400bf0 <__errno_location@plt>:
  400bf0:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400bf4:	ldr	x17, [x16, #136]
  400bf8:	add	x16, x16, #0x88
  400bfc:	br	x17

0000000000400c00 <fprintf@plt>:
  400c00:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400c04:	ldr	x17, [x16, #144]
  400c08:	add	x16, x16, #0x90
  400c0c:	br	x17

0000000000400c10 <ferror@plt>:
  400c10:	adrp	x16, 412000 <ferror@plt+0x113f0>
  400c14:	ldr	x17, [x16, #152]
  400c18:	add	x16, x16, #0x98
  400c1c:	br	x17

Disassembly of section .text:

0000000000400c20 <.text>:
  400c20:	stp	x29, x30, [sp, #-224]!
  400c24:	mov	x29, sp
  400c28:	stp	x21, x22, [sp, #32]
  400c2c:	adrp	x22, 401000 <ferror@plt+0x3f0>
  400c30:	add	x22, x22, #0x830
  400c34:	mov	w21, w0
  400c38:	mov	x0, x1
  400c3c:	stp	x19, x20, [sp, #16]
  400c40:	adrp	x19, 412000 <ferror@plt+0x113f0>
  400c44:	mov	x20, x1
  400c48:	add	x19, x19, #0xb0
  400c4c:	stp	x23, x24, [sp, #48]
  400c50:	add	x23, x22, #0x140
  400c54:	str	x25, [sp, #64]
  400c58:	bl	401270 <ferror@plt+0x660>
  400c5c:	nop
  400c60:	mov	x3, x22
  400c64:	mov	x2, x23
  400c68:	mov	x1, x20
  400c6c:	mov	w0, w21
  400c70:	mov	x4, #0x0                   	// #0
  400c74:	bl	400ba0 <getopt_long@plt>
  400c78:	cmn	w0, #0x1
  400c7c:	b.eq	400cc4 <ferror@plt+0xb4>  // b.none
  400c80:	cmp	w0, #0x6b
  400c84:	b.eq	400c60 <ferror@plt+0x50>  // b.none
  400c88:	b.le	400dac <ferror@plt+0x19c>
  400c8c:	cmp	w0, #0x71
  400c90:	b.ne	400e2c <ferror@plt+0x21c>  // b.any
  400c94:	ldr	w4, [x19]
  400c98:	cbz	w4, 400c60 <ferror@plt+0x50>
  400c9c:	sub	w4, w4, #0x1
  400ca0:	mov	x3, x22
  400ca4:	mov	x2, x23
  400ca8:	mov	x1, x20
  400cac:	mov	w0, w21
  400cb0:	str	w4, [x19]
  400cb4:	mov	x4, #0x0                   	// #0
  400cb8:	bl	400ba0 <getopt_long@plt>
  400cbc:	cmn	w0, #0x1
  400cc0:	b.ne	400c80 <ferror@plt+0x70>  // b.any
  400cc4:	adrp	x22, 412000 <ferror@plt+0x113f0>
  400cc8:	stp	xzr, xzr, [sp, #88]
  400ccc:	ldr	w3, [x22, #200]
  400cd0:	stp	xzr, xzr, [sp, #104]
  400cd4:	cmp	w3, w21
  400cd8:	stp	xzr, xzr, [sp, #120]
  400cdc:	stp	xzr, xzr, [sp, #136]
  400ce0:	stp	xzr, xzr, [sp, #152]
  400ce4:	stp	xzr, xzr, [sp, #168]
  400ce8:	stp	xzr, xzr, [sp, #184]
  400cec:	stp	xzr, xzr, [sp, #200]
  400cf0:	str	xzr, [sp, #216]
  400cf4:	b.eq	400e34 <ferror@plt+0x224>  // b.none
  400cf8:	adrp	x24, 401000 <ferror@plt+0x3f0>
  400cfc:	adrp	x23, 401000 <ferror@plt+0x3f0>
  400d00:	add	x24, x24, #0x7c8
  400d04:	add	x23, x23, #0x7c0
  400d08:	b	400d44 <ferror@plt+0x134>
  400d0c:	ldrb	w1, [x0, #1]
  400d10:	cbnz	w1, 400d54 <ferror@plt+0x144>
  400d14:	adrp	x1, 412000 <ferror@plt+0x113f0>
  400d18:	adrp	x19, 412000 <ferror@plt+0x113f0>
  400d1c:	add	x19, x19, #0xc8
  400d20:	mov	x2, x23
  400d24:	ldr	x1, [x1, #216]
  400d28:	add	x0, sp, #0x58
  400d2c:	bl	401028 <ferror@plt+0x418>
  400d30:	ldr	w3, [x19]
  400d34:	add	w3, w3, #0x1
  400d38:	str	w3, [x19]
  400d3c:	cmp	w3, w21
  400d40:	b.ge	400d98 <ferror@plt+0x188>  // b.tcont
  400d44:	ldr	x0, [x20, w3, sxtw #3]
  400d48:	ldrb	w1, [x0]
  400d4c:	cmp	w1, #0x2d
  400d50:	b.eq	400d0c <ferror@plt+0xfc>  // b.none
  400d54:	mov	x1, x24
  400d58:	bl	400b20 <fopen@plt>
  400d5c:	mov	x25, x0
  400d60:	cbz	x0, 400e04 <ferror@plt+0x1f4>
  400d64:	ldrsw	x2, [x22, #200]
  400d68:	mov	x1, x0
  400d6c:	add	x19, x22, #0xc8
  400d70:	add	x0, sp, #0x58
  400d74:	ldr	x2, [x20, x2, lsl #3]
  400d78:	bl	401028 <ferror@plt+0x418>
  400d7c:	mov	x0, x25
  400d80:	bl	400b10 <fclose@plt>
  400d84:	ldr	w3, [x19]
  400d88:	add	w3, w3, #0x1
  400d8c:	str	w3, [x19]
  400d90:	cmp	w3, w21
  400d94:	b.lt	400d44 <ferror@plt+0x134>  // b.tstop
  400d98:	adrp	x2, 412000 <ferror@plt+0x113f0>
  400d9c:	mov	w1, #0x1                   	// #1
  400da0:	mov	w0, #0x0                   	// #0
  400da4:	ldr	w2, [x2, #176]
  400da8:	bl	401280 <ferror@plt+0x670>
  400dac:	cmp	w0, #0x64
  400db0:	b.gt	400de4 <ferror@plt+0x1d4>
  400db4:	cmp	w0, #0x62
  400db8:	b.gt	400c60 <ferror@plt+0x50>
  400dbc:	cmp	w0, #0x51
  400dc0:	b.eq	400c60 <ferror@plt+0x50>  // b.none
  400dc4:	cmp	w0, #0x56
  400dc8:	b.ne	400e2c <ferror@plt+0x21c>  // b.any
  400dcc:	bl	400b50 <lzma_version_string@plt>
  400dd0:	mov	x1, x0
  400dd4:	adrp	x0, 401000 <ferror@plt+0x3f0>
  400dd8:	add	x0, x0, #0x798
  400ddc:	bl	400be0 <printf@plt>
  400de0:	b	400d98 <ferror@plt+0x188>
  400de4:	cmp	w0, #0x68
  400de8:	b.ne	400e2c <ferror@plt+0x21c>  // b.any
  400dec:	adrp	x1, 412000 <ferror@plt+0x113f0>
  400df0:	adrp	x0, 401000 <ferror@plt+0x3f0>
  400df4:	add	x0, x0, #0x4e8
  400df8:	ldr	x1, [x1, #184]
  400dfc:	bl	400be0 <printf@plt>
  400e00:	b	400d98 <ferror@plt+0x188>
  400e04:	ldrsw	x0, [x22, #200]
  400e08:	ldr	x19, [x20, x0, lsl #3]
  400e0c:	bl	400bf0 <__errno_location@plt>
  400e10:	ldr	w0, [x0]
  400e14:	bl	400b40 <strerror@plt>
  400e18:	mov	x2, x0
  400e1c:	mov	x1, x19
  400e20:	adrp	x0, 401000 <ferror@plt+0x3f0>
  400e24:	add	x0, x0, #0x4e0
  400e28:	bl	400f60 <ferror@plt+0x350>
  400e2c:	mov	w0, #0x1                   	// #1
  400e30:	bl	400ae0 <exit@plt>
  400e34:	adrp	x1, 412000 <ferror@plt+0x113f0>
  400e38:	add	x0, sp, #0x58
  400e3c:	adrp	x2, 401000 <ferror@plt+0x3f0>
  400e40:	add	x2, x2, #0x7c0
  400e44:	ldr	x1, [x1, #216]
  400e48:	bl	401028 <ferror@plt+0x418>
  400e4c:	b	400d98 <ferror@plt+0x188>
  400e50:	mov	x29, #0x0                   	// #0
  400e54:	mov	x30, #0x0                   	// #0
  400e58:	mov	x5, x0
  400e5c:	ldr	x1, [sp]
  400e60:	add	x2, sp, #0x8
  400e64:	mov	x6, sp
  400e68:	movz	x0, #0x0, lsl #48
  400e6c:	movk	x0, #0x0, lsl #32
  400e70:	movk	x0, #0x40, lsl #16
  400e74:	movk	x0, #0xc20
  400e78:	movz	x3, #0x0, lsl #48
  400e7c:	movk	x3, #0x0, lsl #32
  400e80:	movk	x3, #0x40, lsl #16
  400e84:	movk	x3, #0x1350
  400e88:	movz	x4, #0x0, lsl #48
  400e8c:	movk	x4, #0x0, lsl #32
  400e90:	movk	x4, #0x40, lsl #16
  400e94:	movk	x4, #0x13d0
  400e98:	bl	400b30 <__libc_start_main@plt>
  400e9c:	bl	400b70 <abort@plt>
  400ea0:	adrp	x0, 411000 <ferror@plt+0x103f0>
  400ea4:	ldr	x0, [x0, #4064]
  400ea8:	cbz	x0, 400eb0 <ferror@plt+0x2a0>
  400eac:	b	400b60 <__gmon_start__@plt>
  400eb0:	ret
  400eb4:	nop
  400eb8:	adrp	x0, 412000 <ferror@plt+0x113f0>
  400ebc:	add	x0, x0, #0xb8
  400ec0:	adrp	x1, 412000 <ferror@plt+0x113f0>
  400ec4:	add	x1, x1, #0xb8
  400ec8:	cmp	x1, x0
  400ecc:	b.eq	400ee4 <ferror@plt+0x2d4>  // b.none
  400ed0:	adrp	x1, 401000 <ferror@plt+0x3f0>
  400ed4:	ldr	x1, [x1, #1008]
  400ed8:	cbz	x1, 400ee4 <ferror@plt+0x2d4>
  400edc:	mov	x16, x1
  400ee0:	br	x16
  400ee4:	ret
  400ee8:	adrp	x0, 412000 <ferror@plt+0x113f0>
  400eec:	add	x0, x0, #0xb8
  400ef0:	adrp	x1, 412000 <ferror@plt+0x113f0>
  400ef4:	add	x1, x1, #0xb8
  400ef8:	sub	x1, x1, x0
  400efc:	lsr	x2, x1, #63
  400f00:	add	x1, x2, x1, asr #3
  400f04:	cmp	xzr, x1, asr #1
  400f08:	asr	x1, x1, #1
  400f0c:	b.eq	400f24 <ferror@plt+0x314>  // b.none
  400f10:	adrp	x2, 401000 <ferror@plt+0x3f0>
  400f14:	ldr	x2, [x2, #1016]
  400f18:	cbz	x2, 400f24 <ferror@plt+0x314>
  400f1c:	mov	x16, x2
  400f20:	br	x16
  400f24:	ret
  400f28:	stp	x29, x30, [sp, #-32]!
  400f2c:	mov	x29, sp
  400f30:	str	x19, [sp, #16]
  400f34:	adrp	x19, 412000 <ferror@plt+0x113f0>
  400f38:	ldrb	w0, [x19, #224]
  400f3c:	cbnz	w0, 400f4c <ferror@plt+0x33c>
  400f40:	bl	400eb8 <ferror@plt+0x2a8>
  400f44:	mov	w0, #0x1                   	// #1
  400f48:	strb	w0, [x19, #224]
  400f4c:	ldr	x19, [sp, #16]
  400f50:	ldp	x29, x30, [sp], #32
  400f54:	ret
  400f58:	b	400ee8 <ferror@plt+0x2d8>
  400f5c:	nop
  400f60:	stp	x29, x30, [sp, #-288]!
  400f64:	adrp	x8, 412000 <ferror@plt+0x113f0>
  400f68:	mov	w10, #0xffffffc8            	// #-56
  400f6c:	mov	x29, sp
  400f70:	ldr	w8, [x8, #176]
  400f74:	add	x11, sp, #0xe0
  400f78:	mov	w9, #0xffffff80            	// #-128
  400f7c:	stp	x19, x20, [sp, #16]
  400f80:	mov	x19, x0
  400f84:	add	x0, sp, #0x120
  400f88:	stp	x0, x0, [sp, #64]
  400f8c:	str	x11, [sp, #80]
  400f90:	stp	w10, w9, [sp, #88]
  400f94:	str	q0, [sp, #96]
  400f98:	str	q1, [sp, #112]
  400f9c:	str	q2, [sp, #128]
  400fa0:	str	q3, [sp, #144]
  400fa4:	str	q4, [sp, #160]
  400fa8:	str	q5, [sp, #176]
  400fac:	str	q6, [sp, #192]
  400fb0:	str	q7, [sp, #208]
  400fb4:	stp	x1, x2, [sp, #232]
  400fb8:	stp	x3, x4, [sp, #248]
  400fbc:	stp	x5, x6, [sp, #264]
  400fc0:	str	x7, [sp, #280]
  400fc4:	cbnz	w8, 400fd4 <ferror@plt+0x3c4>
  400fc8:	ldp	x19, x20, [sp, #16]
  400fcc:	ldp	x29, x30, [sp], #288
  400fd0:	ret
  400fd4:	adrp	x20, 412000 <ferror@plt+0x113f0>
  400fd8:	adrp	x0, 412000 <ferror@plt+0x113f0>
  400fdc:	adrp	x1, 401000 <ferror@plt+0x3f0>
  400fe0:	add	x1, x1, #0x400
  400fe4:	ldr	x2, [x0, #184]
  400fe8:	ldr	x0, [x20, #192]
  400fec:	bl	400c00 <fprintf@plt>
  400ff0:	ldp	x6, x7, [sp, #64]
  400ff4:	add	x2, sp, #0x20
  400ff8:	ldp	x4, x5, [sp, #80]
  400ffc:	mov	x1, x19
  401000:	ldr	x0, [x20, #192]
  401004:	stp	x6, x7, [sp, #32]
  401008:	stp	x4, x5, [sp, #48]
  40100c:	bl	400bd0 <vfprintf@plt>
  401010:	ldr	x1, [x20, #192]
  401014:	mov	w0, #0xa                   	// #10
  401018:	bl	400b00 <fputc@plt>
  40101c:	ldp	x19, x20, [sp, #16]
  401020:	ldp	x29, x30, [sp], #288
  401024:	ret
  401028:	mov	x12, #0x4060                	// #16480
  40102c:	sub	sp, sp, x12
  401030:	stp	x29, x30, [sp]
  401034:	mov	x29, sp
  401038:	stp	x19, x20, [sp, #16]
  40103c:	mov	x19, x0
  401040:	stp	x21, x22, [sp, #32]
  401044:	stp	x23, x24, [sp, #48]
  401048:	mov	x23, x1
  40104c:	mov	x1, #0xffffffffffffffff    	// #-1
  401050:	stp	x25, x26, [sp, #64]
  401054:	mov	x25, x2
  401058:	str	x27, [sp, #80]
  40105c:	bl	400b90 <lzma_alone_decoder@plt>
  401060:	cbnz	w0, 4011a8 <ferror@plt+0x598>
  401064:	mov	x1, #0x2000                	// #8192
  401068:	mov	x0, #0x2060                	// #8288
  40106c:	add	x24, sp, #0x60
  401070:	mov	x22, x1
  401074:	add	x21, sp, x0
  401078:	adrp	x26, 412000 <ferror@plt+0x113f0>
  40107c:	mov	x0, #0x0                   	// #0
  401080:	str	xzr, [x19, #8]
  401084:	stp	x21, x1, [x19, #24]
  401088:	cbnz	x0, 4010b4 <ferror@plt+0x4a4>
  40108c:	str	x24, [x19]
  401090:	mov	x3, x23
  401094:	mov	x0, x24
  401098:	mov	x2, #0x2000                	// #8192
  40109c:	mov	x1, #0x1                   	// #1
  4010a0:	bl	400bb0 <fread@plt>
  4010a4:	str	x0, [x19, #8]
  4010a8:	mov	x0, x23
  4010ac:	bl	400c10 <ferror@plt>
  4010b0:	cbnz	w0, 401180 <ferror@plt+0x570>
  4010b4:	mov	x0, x19
  4010b8:	mov	w1, #0x0                   	// #0
  4010bc:	bl	400af0 <lzma_code@plt>
  4010c0:	cmp	w0, #0x0
  4010c4:	ldr	x2, [x19, #32]
  4010c8:	mov	w20, w0
  4010cc:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  4010d0:	b.ne	4010fc <ferror@plt+0x4ec>  // b.any
  4010d4:	ldr	x3, [x26, #208]
  4010d8:	sub	x27, x22, x2
  4010dc:	mov	x2, x27
  4010e0:	mov	x0, x21
  4010e4:	mov	x1, #0x1                   	// #1
  4010e8:	bl	400bc0 <fwrite@plt>
  4010ec:	cmp	x0, x27
  4010f0:	b.ne	40115c <ferror@plt+0x54c>  // b.any
  4010f4:	stp	x21, x22, [x19, #24]
  4010f8:	cbnz	w20, 401104 <ferror@plt+0x4f4>
  4010fc:	ldr	x0, [x19, #8]
  401100:	b	401088 <ferror@plt+0x478>
  401104:	cmp	w20, #0x1
  401108:	b.ne	4011ec <ferror@plt+0x5dc>  // b.any
  40110c:	ldr	x0, [x19, #8]
  401110:	cbnz	x0, 4011cc <ferror@plt+0x5bc>
  401114:	mov	x2, #0x1                   	// #1
  401118:	mov	x3, x23
  40111c:	mov	x1, x2
  401120:	add	x0, sp, #0x60
  401124:	bl	400bb0 <fread@plt>
  401128:	cbnz	x0, 4011cc <ferror@plt+0x5bc>
  40112c:	mov	x0, x23
  401130:	bl	400b80 <feof@plt>
  401134:	cbz	w0, 4011cc <ferror@plt+0x5bc>
  401138:	mov	x12, #0x4060                	// #16480
  40113c:	ldp	x29, x30, [sp]
  401140:	ldp	x19, x20, [sp, #16]
  401144:	ldp	x21, x22, [sp, #32]
  401148:	ldp	x23, x24, [sp, #48]
  40114c:	ldp	x25, x26, [sp, #64]
  401150:	ldr	x27, [sp, #80]
  401154:	add	sp, sp, x12
  401158:	ret
  40115c:	bl	400bf0 <__errno_location@plt>
  401160:	ldr	w0, [x0]
  401164:	bl	400b40 <strerror@plt>
  401168:	mov	x1, x0
  40116c:	adrp	x0, 401000 <ferror@plt+0x3f0>
  401170:	add	x0, x0, #0x4b8
  401174:	bl	400f60 <ferror@plt+0x350>
  401178:	mov	w0, #0x1                   	// #1
  40117c:	bl	400ae0 <exit@plt>
  401180:	bl	400bf0 <__errno_location@plt>
  401184:	ldr	w0, [x0]
  401188:	bl	400b40 <strerror@plt>
  40118c:	mov	x2, x0
  401190:	mov	x1, x25
  401194:	adrp	x0, 401000 <ferror@plt+0x3f0>
  401198:	add	x0, x0, #0x490
  40119c:	bl	400f60 <ferror@plt+0x350>
  4011a0:	mov	w0, #0x1                   	// #1
  4011a4:	bl	400ae0 <exit@plt>
  4011a8:	cmp	w0, #0x5
  4011ac:	b.eq	40121c <ferror@plt+0x60c>  // b.none
  4011b0:	adrp	x1, 401000 <ferror@plt+0x3f0>
  4011b4:	add	x1, x1, #0x408
  4011b8:	adrp	x0, 401000 <ferror@plt+0x3f0>
  4011bc:	add	x0, x0, #0x488
  4011c0:	bl	400f60 <ferror@plt+0x350>
  4011c4:	mov	w0, #0x1                   	// #1
  4011c8:	bl	400ae0 <exit@plt>
  4011cc:	adrp	x2, 401000 <ferror@plt+0x3f0>
  4011d0:	add	x2, x2, #0x420
  4011d4:	mov	x1, x25
  4011d8:	adrp	x0, 401000 <ferror@plt+0x3f0>
  4011dc:	add	x0, x0, #0x4e0
  4011e0:	bl	400f60 <ferror@plt+0x350>
  4011e4:	mov	w0, #0x1                   	// #1
  4011e8:	bl	400ae0 <exit@plt>
  4011ec:	cmp	w20, #0x8
  4011f0:	b.eq	401260 <ferror@plt+0x650>  // b.none
  4011f4:	b.hi	40123c <ferror@plt+0x62c>  // b.pmore
  4011f8:	cmp	w20, #0x5
  4011fc:	b.eq	40122c <ferror@plt+0x61c>  // b.none
  401200:	cmp	w20, #0x7
  401204:	adrp	x0, 401000 <ferror@plt+0x3f0>
  401208:	adrp	x2, 401000 <ferror@plt+0x3f0>
  40120c:	add	x0, x0, #0x430
  401210:	add	x2, x2, #0x408
  401214:	csel	x2, x2, x0, ne  // ne = any
  401218:	b	4011d4 <ferror@plt+0x5c4>
  40121c:	mov	w0, #0xc                   	// #12
  401220:	bl	400b40 <strerror@plt>
  401224:	mov	x1, x0
  401228:	b	4011b8 <ferror@plt+0x5a8>
  40122c:	mov	w0, #0xc                   	// #12
  401230:	bl	400b40 <strerror@plt>
  401234:	mov	x2, x0
  401238:	b	4011d4 <ferror@plt+0x5c4>
  40123c:	cmp	w20, #0x9
  401240:	b.eq	4011cc <ferror@plt+0x5bc>  // b.none
  401244:	cmp	w20, #0xa
  401248:	adrp	x0, 401000 <ferror@plt+0x3f0>
  40124c:	adrp	x2, 401000 <ferror@plt+0x3f0>
  401250:	add	x0, x0, #0x470
  401254:	add	x2, x2, #0x408
  401258:	csel	x2, x2, x0, ne  // ne = any
  40125c:	b	4011d4 <ferror@plt+0x5c4>
  401260:	adrp	x2, 401000 <ferror@plt+0x3f0>
  401264:	add	x2, x2, #0x450
  401268:	b	4011d4 <ferror@plt+0x5c4>
  40126c:	nop
  401270:	adrp	x1, 412000 <ferror@plt+0x113f0>
  401274:	ldr	x0, [x0]
  401278:	str	x0, [x1, #184]
  40127c:	ret
  401280:	stp	x29, x30, [sp, #-64]!
  401284:	cmp	w0, w1
  401288:	mov	x29, sp
  40128c:	stp	x19, x20, [sp, #16]
  401290:	mov	w19, w1
  401294:	stp	x21, x22, [sp, #32]
  401298:	str	x23, [sp, #48]
  40129c:	b.ne	4012a8 <ferror@plt+0x698>  // b.any
  4012a0:	mov	w0, w19
  4012a4:	bl	400ae0 <exit@plt>
  4012a8:	adrp	x23, 412000 <ferror@plt+0x113f0>
  4012ac:	mov	w20, w0
  4012b0:	mov	w21, w2
  4012b4:	ldr	x0, [x23, #208]
  4012b8:	bl	400c10 <ferror@plt>
  4012bc:	mov	w22, w0
  4012c0:	ldr	x0, [x23, #208]
  4012c4:	bl	400b10 <fclose@plt>
  4012c8:	orr	w22, w22, w0
  4012cc:	cbz	w22, 401310 <ferror@plt+0x700>
  4012d0:	cbz	w21, 4012a0 <ferror@plt+0x690>
  4012d4:	adrp	x2, 412000 <ferror@plt+0x113f0>
  4012d8:	adrp	x1, 412000 <ferror@plt+0x113f0>
  4012dc:	ldr	x20, [x2, #192]
  4012e0:	ldr	x21, [x1, #184]
  4012e4:	cbnz	w0, 401338 <ferror@plt+0x728>
  4012e8:	adrp	x4, 401000 <ferror@plt+0x3f0>
  4012ec:	add	x4, x4, #0x980
  4012f0:	mov	x2, x21
  4012f4:	mov	x0, x20
  4012f8:	adrp	x3, 401000 <ferror@plt+0x3f0>
  4012fc:	adrp	x1, 401000 <ferror@plt+0x3f0>
  401300:	add	x3, x3, #0x990
  401304:	add	x1, x1, #0x9b8
  401308:	bl	400c00 <fprintf@plt>
  40130c:	b	4012a0 <ferror@plt+0x690>
  401310:	adrp	x22, 412000 <ferror@plt+0x113f0>
  401314:	ldr	x0, [x22, #192]
  401318:	bl	400c10 <ferror@plt>
  40131c:	mov	w21, w0
  401320:	ldr	x0, [x22, #192]
  401324:	bl	400b10 <fclose@plt>
  401328:	orr	w21, w21, w0
  40132c:	cmp	w21, #0x0
  401330:	csel	w19, w19, w20, ne  // ne = any
  401334:	b	4012a0 <ferror@plt+0x690>
  401338:	bl	400bf0 <__errno_location@plt>
  40133c:	ldr	w0, [x0]
  401340:	bl	400b40 <strerror@plt>
  401344:	mov	x4, x0
  401348:	b	4012f0 <ferror@plt+0x6e0>
  40134c:	nop
  401350:	stp	x29, x30, [sp, #-64]!
  401354:	mov	x29, sp
  401358:	stp	x19, x20, [sp, #16]
  40135c:	adrp	x20, 411000 <ferror@plt+0x103f0>
  401360:	add	x20, x20, #0xdd0
  401364:	stp	x21, x22, [sp, #32]
  401368:	adrp	x21, 411000 <ferror@plt+0x103f0>
  40136c:	add	x21, x21, #0xdc8
  401370:	sub	x20, x20, x21
  401374:	mov	w22, w0
  401378:	stp	x23, x24, [sp, #48]
  40137c:	mov	x23, x1
  401380:	mov	x24, x2
  401384:	bl	400aa8 <exit@plt-0x38>
  401388:	cmp	xzr, x20, asr #3
  40138c:	b.eq	4013b8 <ferror@plt+0x7a8>  // b.none
  401390:	asr	x20, x20, #3
  401394:	mov	x19, #0x0                   	// #0
  401398:	ldr	x3, [x21, x19, lsl #3]
  40139c:	mov	x2, x24
  4013a0:	add	x19, x19, #0x1
  4013a4:	mov	x1, x23
  4013a8:	mov	w0, w22
  4013ac:	blr	x3
  4013b0:	cmp	x20, x19
  4013b4:	b.ne	401398 <ferror@plt+0x788>  // b.any
  4013b8:	ldp	x19, x20, [sp, #16]
  4013bc:	ldp	x21, x22, [sp, #32]
  4013c0:	ldp	x23, x24, [sp, #48]
  4013c4:	ldp	x29, x30, [sp], #64
  4013c8:	ret
  4013cc:	nop
  4013d0:	ret

Disassembly of section .fini:

00000000004013d4 <.fini>:
  4013d4:	stp	x29, x30, [sp, #-16]!
  4013d8:	mov	x29, sp
  4013dc:	ldp	x29, x30, [sp], #16
  4013e0:	ret
