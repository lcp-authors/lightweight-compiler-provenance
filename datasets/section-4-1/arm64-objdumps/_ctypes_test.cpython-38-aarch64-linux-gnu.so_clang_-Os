
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002068 <.init>:
    2068:	stp	x29, x30, [sp, #-16]!
    206c:	mov	x29, sp
    2070:	bl	21b0 <printf@plt+0x10>
    2074:	ldp	x29, x30, [sp], #16
    2078:	ret

Disassembly of section .plt:

0000000000002080 <memcpy@plt-0x20>:
    2080:	stp	x16, x30, [sp, #-16]!
    2084:	adrp	x16, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2088:	ldr	x17, [x16, #4088]
    208c:	add	x16, x16, #0xff8
    2090:	br	x17
    2094:	nop
    2098:	nop
    209c:	nop

00000000000020a0 <memcpy@plt>:
    20a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16]
    20a8:	add	x16, x16, #0x0
    20ac:	br	x17

00000000000020b0 <strtok@plt>:
    20b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #8]
    20b8:	add	x16, x16, #0x8
    20bc:	br	x17

00000000000020c0 <strlen@plt>:
    20c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #16]
    20c8:	add	x16, x16, #0x10
    20cc:	br	x17

00000000000020d0 <__cxa_finalize@plt>:
    20d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #24]
    20d8:	add	x16, x16, #0x18
    20dc:	br	x17

00000000000020e0 <qsort@plt>:
    20e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #32]
    20e8:	add	x16, x16, #0x20
    20ec:	br	x17

00000000000020f0 <sqrt@plt>:
    20f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #40]
    20f8:	add	x16, x16, #0x28
    20fc:	br	x17

0000000000002100 <malloc@plt>:
    2100:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #48]
    2108:	add	x16, x16, #0x30
    210c:	br	x17

0000000000002110 <wcslen@plt>:
    2110:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #56]
    2118:	add	x16, x16, #0x38
    211c:	br	x17

0000000000002120 <__gmon_start__@plt>:
    2120:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #64]
    2128:	add	x16, x16, #0x40
    212c:	br	x17

0000000000002130 <PyModule_Create2@plt>:
    2130:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #72]
    2138:	add	x16, x16, #0x48
    213c:	br	x17

0000000000002140 <puts@plt>:
    2140:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #80]
    2148:	add	x16, x16, #0x50
    214c:	br	x17

0000000000002150 <PyArg_ParseTuple@plt>:
    2150:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #88]
    2158:	add	x16, x16, #0x58
    215c:	br	x17

0000000000002160 <free@plt>:
    2160:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #96]
    2168:	add	x16, x16, #0x60
    216c:	br	x17

0000000000002170 <strchr@plt>:
    2170:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #104]
    2178:	add	x16, x16, #0x68
    217c:	br	x17

0000000000002180 <strcpy@plt>:
    2180:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #112]
    2188:	add	x16, x16, #0x70
    218c:	br	x17

0000000000002190 <vprintf@plt>:
    2190:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #120]
    2198:	add	x16, x16, #0x78
    219c:	br	x17

00000000000021a0 <printf@plt>:
    21a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #128]
    21a8:	add	x16, x16, #0x80
    21ac:	br	x17

Disassembly of section .text:

00000000000021b0 <_testfunc_cbk_reg_int@@Base-0xd4>:
    21b0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    21b4:	ldr	x0, [x0, #4000]
    21b8:	cbz	x0, 21c0 <printf@plt+0x20>
    21bc:	b	2120 <__gmon_start__@plt>
    21c0:	ret
    21c4:	nop
    21c8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    21cc:	add	x0, x0, #0x1c0
    21d0:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    21d4:	add	x1, x1, #0x1c0
    21d8:	cmp	x1, x0
    21dc:	b.eq	21f4 <printf@plt+0x54>  // b.none
    21e0:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    21e4:	ldr	x1, [x1, #3960]
    21e8:	cbz	x1, 21f4 <printf@plt+0x54>
    21ec:	mov	x16, x1
    21f0:	br	x16
    21f4:	ret
    21f8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    21fc:	add	x0, x0, #0x1c0
    2200:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    2204:	add	x1, x1, #0x1c0
    2208:	sub	x1, x1, x0
    220c:	lsr	x2, x1, #63
    2210:	add	x1, x2, x1, asr #3
    2214:	cmp	xzr, x1, asr #1
    2218:	asr	x1, x1, #1
    221c:	b.eq	2234 <printf@plt+0x94>  // b.none
    2220:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2224:	ldr	x2, [x2, #4048]
    2228:	cbz	x2, 2234 <printf@plt+0x94>
    222c:	mov	x16, x2
    2230:	br	x16
    2234:	ret
    2238:	stp	x29, x30, [sp, #-32]!
    223c:	mov	x29, sp
    2240:	str	x19, [sp, #16]
    2244:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    2248:	ldrb	w0, [x19, #448]
    224c:	cbnz	w0, 2274 <printf@plt+0xd4>
    2250:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2254:	ldr	x0, [x0, #3968]
    2258:	cbz	x0, 2268 <printf@plt+0xc8>
    225c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    2260:	ldr	x0, [x0, #136]
    2264:	bl	20d0 <__cxa_finalize@plt>
    2268:	bl	21c8 <printf@plt+0x28>
    226c:	mov	w0, #0x1                   	// #1
    2270:	strb	w0, [x19, #448]
    2274:	ldr	x19, [sp, #16]
    2278:	ldp	x29, x30, [sp], #32
    227c:	ret
    2280:	b	21f8 <printf@plt+0x58>

0000000000002284 <_testfunc_cbk_reg_int@@Base>:
    2284:	mul	w0, w0, w0
    2288:	mul	w1, w1, w1
    228c:	mul	w2, w2, w2
    2290:	mul	w3, w3, w3
    2294:	mul	w4, w4, w4
    2298:	br	x5

000000000000229c <_testfunc_cbk_reg_double@@Base>:
    229c:	fmul	d0, d0, d0
    22a0:	fmul	d1, d1, d1
    22a4:	fmul	d2, d2, d2
    22a8:	fmul	d3, d3, d3
    22ac:	fmul	d4, d4, d4
    22b0:	br	x0

00000000000022b4 <_testfunc_cbk_large_struct@@Base>:
    22b4:	sub	sp, sp, #0x30
    22b8:	stp	x29, x30, [sp, #32]
    22bc:	add	x29, sp, #0x20
    22c0:	ldr	x8, [x0, #16]
    22c4:	ldr	q0, [x0]
    22c8:	mov	x0, sp
    22cc:	str	x8, [sp, #16]
    22d0:	str	q0, [sp]
    22d4:	blr	x1
    22d8:	ldp	x29, x30, [sp, #32]
    22dc:	add	sp, sp, #0x30
    22e0:	ret

00000000000022e4 <_testfunc_large_struct_update_value@@Base>:
    22e4:	mov	w8, #0xf00d                	// #61453
    22e8:	movk	w8, #0xbad, lsl #16
    22ec:	str	x8, [x0]
    22f0:	str	x8, [x0, #8]
    22f4:	str	x8, [x0, #16]
    22f8:	ret

00000000000022fc <_testfunc_reg_struct_update_value@@Base>:
    22fc:	sub	sp, sp, #0x10
    2300:	str	w0, [sp, #12]
    2304:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2308:	ldr	x9, [x9, #4040]
    230c:	mov	w10, #0xf00d                	// #61453
    2310:	lsr	x8, x0, #32
    2314:	movk	w10, #0xbad, lsl #16
    2318:	str	w8, [sp, #8]
    231c:	stp	w0, w8, [x9]
    2320:	str	w10, [sp, #12]
    2324:	str	w10, [sp, #8]
    2328:	add	sp, sp, #0x10
    232c:	ret

0000000000002330 <_testfunc_array_in_struct1@@Base>:
    2330:	mov	x8, x0
    2334:	mov	x9, xzr
    2338:	mov	w0, wzr
    233c:	stp	x8, x1, [sp, #-16]!
    2340:	mov	x8, sp
    2344:	ldrb	w10, [x8, x9]
    2348:	add	x9, x9, #0x1
    234c:	cmp	x9, #0x10
    2350:	add	w0, w0, w10
    2354:	b.ne	2344 <_testfunc_array_in_struct1@@Base+0x14>  // b.any
    2358:	add	sp, sp, #0x10
    235c:	ret

0000000000002360 <_testfunc_array_in_struct2@@Base>:
    2360:	fmov	d2, xzr
    2364:	fadd	d0, d0, d2
    2368:	fadd	d0, d0, d1
    236c:	ret

0000000000002370 <_testfunc_array_in_struct2a@@Base>:
    2370:	stp	s0, s1, [sp, #-16]!
    2374:	fcvt	d0, s0
    2378:	fmov	d4, xzr
    237c:	fcvt	d1, s1
    2380:	fadd	d0, d0, d4
    2384:	fcvt	d4, s2
    2388:	fadd	d0, d0, d1
    238c:	fcvt	d1, s3
    2390:	fadd	d0, d0, d4
    2394:	fadd	d0, d0, d1
    2398:	stp	s2, s3, [sp, #8]
    239c:	add	sp, sp, #0x10
    23a0:	ret

00000000000023a4 <_testfunc_union_by_value1@@Base>:
    23a4:	add	x8, x0, x0, asr #32
    23a8:	add	x0, x8, w0, sxtw
    23ac:	ret

00000000000023b0 <_testfunc_union_by_value2@@Base>:
    23b0:	ldr	w8, [x0]
    23b4:	ldr	w9, [x0, #8]
    23b8:	movi	v0.2d, #0x0
    23bc:	stp	q0, q0, [x0]
    23c0:	add	w8, w9, w8
    23c4:	sxtw	x8, w8
    23c8:	mov	x0, x8
    23cc:	ret

00000000000023d0 <_testfunc_union_by_reference1@@Base>:
    23d0:	ldr	x8, [x0]
    23d4:	str	xzr, [x0]
    23d8:	mov	x0, x8
    23dc:	ret

00000000000023e0 <_testfunc_union_by_reference2@@Base>:
    23e0:	ldp	w8, w9, [x0]
    23e4:	str	xzr, [x0]
    23e8:	add	w8, w9, w8
    23ec:	sxtw	x8, w8
    23f0:	mov	x0, x8
    23f4:	ret

00000000000023f8 <_testfunc_union_by_reference3@@Base>:
    23f8:	ldr	w8, [x0]
    23fc:	ldr	w9, [x0, #8]
    2400:	ldr	w10, [x0, #24]
    2404:	movi	v0.2d, #0x0
    2408:	stp	q0, q0, [x0]
    240c:	add	w8, w9, w8
    2410:	add	w8, w8, w10
    2414:	sxtw	x8, w8
    2418:	mov	x0, x8
    241c:	ret

0000000000002420 <_testfunc_bitfield_by_value1@@Base>:
    2420:	lsl	w9, w0, #5
    2424:	sxtb	w8, w0
    2428:	sbfx	w9, w9, #6, #2
    242c:	lsl	w10, w0, #2
    2430:	add	w8, w9, w8, asr #6
    2434:	and	w9, w0, #0x1
    2438:	sxtb	w10, w10
    243c:	sub	w8, w8, w9
    2440:	add	w8, w8, w10, asr #5
    2444:	sxtw	x0, w8
    2448:	ret

000000000000244c <_testfunc_bitfield_by_reference1@@Base>:
    244c:	ldrb	w8, [x0]
    2450:	str	wzr, [x0]
    2454:	lsl	w10, w8, #5
    2458:	sxtb	w9, w8
    245c:	sbfx	w10, w10, #6, #2
    2460:	lsl	w11, w8, #2
    2464:	add	w9, w10, w9, asr #6
    2468:	and	w8, w8, #0x1
    246c:	sxtb	w11, w11
    2470:	sub	w8, w9, w8
    2474:	add	w8, w8, w11, asr #5
    2478:	sxtw	x0, w8
    247c:	ret

0000000000002480 <_testfunc_bitfield_by_reference2@@Base>:
    2480:	ldrb	w8, [x0]
    2484:	str	wzr, [x0]
    2488:	and	w9, w8, #0x1
    248c:	ubfx	w10, w8, #1, #2
    2490:	ubfx	w11, w8, #3, #3
    2494:	add	w8, w9, w8, lsr #6
    2498:	add	w8, w8, w10
    249c:	add	w0, w8, w11
    24a0:	ret

00000000000024a4 <_testfunc_bitfield_by_value2@@Base>:
    24a4:	lsl	w8, w0, #6
    24a8:	sbfx	w9, w0, #0, #3
    24ac:	and	w10, w0, #0x1
    24b0:	sxtb	w8, w8
    24b4:	sub	w9, w9, w10
    24b8:	add	w8, w9, w8, asr #5
    24bc:	sxtw	x0, w8
    24c0:	ret

00000000000024c4 <testfunc_array@@Base>:
    24c4:	ldp	w1, w2, [x0]
    24c8:	ldp	w3, w4, [x0, #8]
    24cc:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    24d0:	add	x0, x0, #0x3d8
    24d4:	b	21a0 <printf@plt>

00000000000024d8 <testfunc_Ddd@@Base>:
    24d8:	sub	sp, sp, #0x30
    24dc:	stp	x29, x30, [sp, #32]
    24e0:	add	x29, sp, #0x20
    24e4:	stur	d0, [x29, #-8]
    24e8:	fmul	d0, d0, d1
    24ec:	str	d1, [sp, #16]
    24f0:	bl	5180 <PyInit__ctypes_test@@Base+0x1eb0>
    24f4:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    24f8:	add	x0, x0, #0x3f4
    24fc:	sub	x1, x29, #0x8
    2500:	add	x2, sp, #0x10
    2504:	str	q0, [sp]
    2508:	bl	21a0 <printf@plt>
    250c:	ldur	d0, [x29, #-8]
    2510:	ldr	d1, [sp, #16]
    2514:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2518:	add	x0, x0, #0x40a
    251c:	bl	21a0 <printf@plt>
    2520:	ldr	q0, [sp]
    2524:	ldp	x29, x30, [sp, #32]
    2528:	add	sp, sp, #0x30
    252c:	ret

0000000000002530 <testfunc_DDD@@Base>:
    2530:	sub	sp, sp, #0x40
    2534:	stp	x29, x30, [sp, #48]
    2538:	add	x29, sp, #0x30
    253c:	stur	q0, [x29, #-16]
    2540:	str	q1, [sp, #16]
    2544:	bl	4728 <PyInit__ctypes_test@@Base+0x1458>
    2548:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    254c:	add	x0, x0, #0x420
    2550:	sub	x1, x29, #0x10
    2554:	add	x2, sp, #0x10
    2558:	str	q0, [sp]
    255c:	bl	21a0 <printf@plt>
    2560:	ldur	q0, [x29, #-16]
    2564:	ldr	q1, [sp, #16]
    2568:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    256c:	add	x0, x0, #0x436
    2570:	bl	21a0 <printf@plt>
    2574:	ldr	q0, [sp]
    2578:	ldp	x29, x30, [sp, #48]
    257c:	add	sp, sp, #0x40
    2580:	ret

0000000000002584 <testfunc_iii@@Base>:
    2584:	stp	x29, x30, [sp, #-32]!
    2588:	str	x19, [sp, #16]
    258c:	mov	x29, sp
    2590:	stp	w1, w0, [x29, #24]
    2594:	mul	w19, w1, w0
    2598:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    259c:	add	x0, x0, #0x44e
    25a0:	add	x1, x29, #0x1c
    25a4:	add	x2, x29, #0x18
    25a8:	bl	21a0 <printf@plt>
    25ac:	mov	w0, w19
    25b0:	ldr	x19, [sp, #16]
    25b4:	ldp	x29, x30, [sp], #32
    25b8:	ret

00000000000025bc <myprintf@@Base>:
    25bc:	sub	sp, sp, #0x120
    25c0:	stp	x29, x30, [sp, #256]
    25c4:	str	x28, [sp, #272]
    25c8:	add	x29, sp, #0x100
    25cc:	mov	x8, #0xffffffffffffffc8    	// #-56
    25d0:	mov	x9, sp
    25d4:	sub	x10, x29, #0x78
    25d8:	movk	x8, #0xff80, lsl #32
    25dc:	add	x11, x29, #0x20
    25e0:	add	x9, x9, #0x80
    25e4:	add	x10, x10, #0x38
    25e8:	stp	x9, x8, [x29, #-16]
    25ec:	stp	x11, x10, [x29, #-32]
    25f0:	stp	x1, x2, [x29, #-120]
    25f4:	stp	x3, x4, [x29, #-104]
    25f8:	stp	x5, x6, [x29, #-88]
    25fc:	stur	x7, [x29, #-72]
    2600:	stp	q0, q1, [sp]
    2604:	ldp	q0, q1, [x29, #-32]
    2608:	sub	x1, x29, #0x40
    260c:	stp	q2, q3, [sp, #32]
    2610:	stp	q4, q5, [sp, #64]
    2614:	stp	q6, q7, [sp, #96]
    2618:	stp	q0, q1, [x29, #-64]
    261c:	bl	2190 <vprintf@plt>
    2620:	ldr	x28, [sp, #272]
    2624:	ldp	x29, x30, [sp, #256]
    2628:	add	sp, sp, #0x120
    262c:	ret

0000000000002630 <my_strtok@@Base>:
    2630:	b	20b0 <strtok@plt>

0000000000002634 <my_strchr@@Base>:
    2634:	b	2170 <strchr@plt>

0000000000002638 <my_sqrt@@Base>:
    2638:	fsqrt	d1, d0
    263c:	fcmp	d1, d1
    2640:	b.vs	264c <my_sqrt@@Base+0x14>
    2644:	mov	v0.16b, v1.16b
    2648:	ret
    264c:	b	20f0 <sqrt@plt>

0000000000002650 <my_qsort@@Base>:
    2650:	b	20e0 <qsort@plt>

0000000000002654 <_testfunc_ai8@@Base>:
    2654:	ret

0000000000002658 <_testfunc_v@@Base>:
    2658:	add	w8, w1, w0
    265c:	str	w8, [x2]
    2660:	ret

0000000000002664 <_testfunc_i_bhilfd@@Base>:
    2664:	sxth	w8, w1
    2668:	add	w8, w8, w0, sxtb
    266c:	add	w8, w8, w2
    2670:	add	x8, x3, w8, sxtw
    2674:	scvtf	s2, x8
    2678:	fadd	s0, s2, s0
    267c:	fcvt	d0, s0
    2680:	fadd	d0, d0, d1
    2684:	fcvtzs	w0, d0
    2688:	ret

000000000000268c <_testfunc_f_bhilfd@@Base>:
    268c:	sxth	w8, w1
    2690:	add	w8, w8, w0, sxtb
    2694:	add	w8, w8, w2
    2698:	add	x8, x3, w8, sxtw
    269c:	scvtf	s2, x8
    26a0:	fadd	s0, s2, s0
    26a4:	fcvt	d0, s0
    26a8:	fadd	d0, d0, d1
    26ac:	fcvt	s0, d0
    26b0:	ret

00000000000026b4 <_testfunc_d_bhilfd@@Base>:
    26b4:	sxth	w8, w1
    26b8:	add	w8, w8, w0, sxtb
    26bc:	add	w8, w8, w2
    26c0:	add	x8, x3, w8, sxtw
    26c4:	scvtf	s2, x8
    26c8:	fadd	s0, s2, s0
    26cc:	fcvt	d0, s0
    26d0:	fadd	d0, d0, d1
    26d4:	ret

00000000000026d8 <_testfunc_D_bhilfD@@Base>:
    26d8:	sub	sp, sp, #0x20
    26dc:	stp	x29, x30, [sp, #16]
    26e0:	add	x29, sp, #0x10
    26e4:	sxth	w8, w1
    26e8:	add	w8, w8, w0, sxtb
    26ec:	add	w8, w8, w2
    26f0:	add	x8, x3, w8, sxtw
    26f4:	str	q1, [sp]
    26f8:	scvtf	s1, x8
    26fc:	fadd	s0, s1, s0
    2700:	bl	5048 <PyInit__ctypes_test@@Base+0x1d78>
    2704:	ldr	q1, [sp]
    2708:	bl	32e0 <PyInit__ctypes_test@@Base+0x10>
    270c:	ldp	x29, x30, [sp, #16]
    2710:	add	sp, sp, #0x20
    2714:	ret

0000000000002718 <_testfunc_p_p@@Base>:
    2718:	ret

000000000000271c <_testfunc_c_p_p@@Base>:
    271c:	ldr	w8, [x0]
    2720:	sub	w8, w8, #0x1
    2724:	ldr	x0, [x1, w8, sxtw #3]
    2728:	ret

000000000000272c <get_strchr@@Base>:
    272c:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2730:	ldr	x0, [x0, #4016]
    2734:	ret

0000000000002738 <my_strdup@@Base>:
    2738:	stp	x29, x30, [sp, #-32]!
    273c:	str	x19, [sp, #16]
    2740:	mov	x29, sp
    2744:	mov	x19, x0
    2748:	bl	20c0 <strlen@plt>
    274c:	add	x0, x0, #0x1
    2750:	bl	2100 <malloc@plt>
    2754:	cbz	x0, 2760 <my_strdup@@Base+0x28>
    2758:	mov	x1, x19
    275c:	bl	2180 <strcpy@plt>
    2760:	ldr	x19, [sp, #16]
    2764:	ldp	x29, x30, [sp], #32
    2768:	ret

000000000000276c <my_free@@Base>:
    276c:	b	2160 <free@plt>

0000000000002770 <my_wcsdup@@Base>:
    2770:	stp	x29, x30, [sp, #-48]!
    2774:	str	x21, [sp, #16]
    2778:	stp	x20, x19, [sp, #32]
    277c:	mov	x29, sp
    2780:	mov	x19, x0
    2784:	bl	2110 <wcslen@plt>
    2788:	lsl	x8, x0, #2
    278c:	add	x21, x8, #0x4
    2790:	mov	x0, x21
    2794:	bl	2100 <malloc@plt>
    2798:	mov	x20, x0
    279c:	cbz	x0, 27b0 <my_wcsdup@@Base+0x40>
    27a0:	mov	x0, x20
    27a4:	mov	x1, x19
    27a8:	mov	x2, x21
    27ac:	bl	20a0 <memcpy@plt>
    27b0:	mov	x0, x20
    27b4:	ldp	x20, x19, [sp, #32]
    27b8:	ldr	x21, [sp, #16]
    27bc:	ldp	x29, x30, [sp], #48
    27c0:	ret

00000000000027c4 <my_wcslen@@Base>:
    27c4:	b	2110 <wcslen@plt>

00000000000027c8 <_testfunc_callfuncp@@Base>:
    27c8:	stp	x29, x30, [sp, #-32]!
    27cc:	str	x19, [sp, #16]
    27d0:	mov	x29, sp
    27d4:	ldr	x8, [x0]
    27d8:	mov	x19, x0
    27dc:	mov	w0, #0x1                   	// #1
    27e0:	mov	w1, #0x2                   	// #2
    27e4:	blr	x8
    27e8:	ldr	x8, [x19, #8]
    27ec:	mov	w0, #0x3                   	// #3
    27f0:	mov	w1, #0x4                   	// #4
    27f4:	blr	x8
    27f8:	ldr	x19, [sp, #16]
    27fc:	mov	w0, wzr
    2800:	ldp	x29, x30, [sp], #32
    2804:	ret

0000000000002808 <_testfunc_deref_pointer@@Base>:
    2808:	ldr	w0, [x0]
    280c:	ret

0000000000002810 <_testfunc_callback_with_pointer@@Base>:
    2810:	sub	sp, sp, #0x40
    2814:	stp	x29, x30, [sp, #48]
    2818:	add	x29, sp, #0x30
    281c:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2820:	add	x9, x9, #0x378
    2824:	ldp	q0, q1, [x9]
    2828:	ldr	x9, [x9, #32]
    282c:	mov	x8, x0
    2830:	mov	x0, sp
    2834:	stp	q0, q1, [sp]
    2838:	str	x9, [sp, #32]
    283c:	blr	x8
    2840:	ldp	x29, x30, [sp, #48]
    2844:	add	sp, sp, #0x40
    2848:	ret

000000000000284c <_testfunc_q_bhilfdq@@Base>:
    284c:	sxth	w8, w1
    2850:	add	w8, w8, w0, sxtb
    2854:	add	w8, w8, w2
    2858:	add	x8, x3, w8, sxtw
    285c:	scvtf	s2, x8
    2860:	fadd	s0, s2, s0
    2864:	fcvt	d0, s0
    2868:	fadd	d0, d0, d1
    286c:	scvtf	d1, x4
    2870:	fadd	d0, d0, d1
    2874:	fcvtzs	x0, d0
    2878:	ret

000000000000287c <_testfunc_q_bhilfd@@Base>:
    287c:	sxth	w8, w1
    2880:	add	w8, w8, w0, sxtb
    2884:	add	w8, w8, w2
    2888:	add	x8, x3, w8, sxtw
    288c:	scvtf	s2, x8
    2890:	fadd	s0, s2, s0
    2894:	fcvt	d0, s0
    2898:	fadd	d0, d0, d1
    289c:	fcvtzs	x0, d0
    28a0:	ret

00000000000028a4 <_testfunc_callback_i_if@@Base>:
    28a4:	stp	x29, x30, [sp, #-48]!
    28a8:	str	x21, [sp, #16]
    28ac:	stp	x20, x19, [sp, #32]
    28b0:	mov	x29, sp
    28b4:	cbz	w0, 28ec <_testfunc_callback_i_if@@Base+0x48>
    28b8:	mov	x19, x1
    28bc:	mov	w21, w0
    28c0:	mov	w20, wzr
    28c4:	mov	w0, w21
    28c8:	blr	x19
    28cc:	cmp	w21, #0x0
    28d0:	add	w8, w21, #0x1
    28d4:	cinc	w9, w21, lt  // lt = tstop
    28d8:	asr	w21, w9, #1
    28dc:	cmp	w8, #0x2
    28e0:	add	w20, w0, w20
    28e4:	b.hi	28c4 <_testfunc_callback_i_if@@Base+0x20>  // b.pmore
    28e8:	b	28f0 <_testfunc_callback_i_if@@Base+0x4c>
    28ec:	mov	w20, wzr
    28f0:	mov	w0, w20
    28f4:	ldp	x20, x19, [sp, #32]
    28f8:	ldr	x21, [sp, #16]
    28fc:	ldp	x29, x30, [sp], #48
    2900:	ret

0000000000002904 <_testfunc_callback_q_qf@@Base>:
    2904:	stp	x29, x30, [sp, #-48]!
    2908:	str	x21, [sp, #16]
    290c:	stp	x20, x19, [sp, #32]
    2910:	mov	x29, sp
    2914:	cbz	x0, 294c <_testfunc_callback_q_qf@@Base+0x48>
    2918:	mov	x19, x1
    291c:	mov	x21, x0
    2920:	mov	x20, xzr
    2924:	mov	x0, x21
    2928:	blr	x19
    292c:	cmp	x21, #0x0
    2930:	add	x8, x21, #0x1
    2934:	cinc	x9, x21, lt  // lt = tstop
    2938:	asr	x21, x9, #1
    293c:	cmp	x8, #0x2
    2940:	add	x20, x0, x20
    2944:	b.hi	2924 <_testfunc_callback_q_qf@@Base+0x20>  // b.pmore
    2948:	b	2950 <_testfunc_callback_q_qf@@Base+0x4c>
    294c:	mov	x20, xzr
    2950:	mov	x0, x20
    2954:	ldp	x20, x19, [sp, #32]
    2958:	ldr	x21, [sp, #16]
    295c:	ldp	x29, x30, [sp], #48
    2960:	ret

0000000000002964 <getSPAMANDEGGS@@Base>:
    2964:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2968:	ldr	x9, [x9, #3992]
    296c:	mov	x8, x0
    2970:	mov	w0, #0x1                   	// #1
    2974:	str	x9, [x8]
    2978:	ret

000000000000297c <_testfunc_byval@@Base>:
    297c:	lsr	x8, x0, #32
    2980:	cbz	x1, 2988 <_testfunc_byval@@Base+0xc>
    2984:	stp	w0, w8, [x1]
    2988:	add	w0, w8, w0
    298c:	ret

0000000000002990 <get_an_integer@@Base>:
    2990:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2994:	ldr	x8, [x8, #4056]
    2998:	ldr	w0, [x8]
    299c:	ret

00000000000029a0 <integrate@@Base>:
    29a0:	stp	d13, d12, [sp, #-80]!
    29a4:	stp	d11, d10, [sp, #16]
    29a8:	stp	d9, d8, [sp, #32]
    29ac:	stp	x29, x30, [sp, #48]
    29b0:	str	x19, [sp, #64]
    29b4:	mov	x29, sp
    29b8:	mov	v9.16b, v0.16b
    29bc:	fsub	d0, d1, d0
    29c0:	scvtf	d11, x1
    29c4:	mov	v8.16b, v1.16b
    29c8:	fmov	d1, #5.000000000000000000e-01
    29cc:	fdiv	d12, d0, d11
    29d0:	fmul	d0, d12, d1
    29d4:	fadd	d10, d0, d9
    29d8:	fsub	d0, d8, d10
    29dc:	fsub	d1, d10, d9
    29e0:	fmul	d0, d0, d1
    29e4:	fcmp	d0, #0.0
    29e8:	fmov	d13, xzr
    29ec:	b.le	2a1c <integrate@@Base+0x7c>
    29f0:	mov	x19, x0
    29f4:	fmov	d13, xzr
    29f8:	mov	v0.16b, v10.16b
    29fc:	blr	x19
    2a00:	fadd	d10, d12, d10
    2a04:	fsub	d1, d8, d10
    2a08:	fsub	d2, d10, d9
    2a0c:	fmul	d1, d1, d2
    2a10:	fcmp	d1, #0.0
    2a14:	fadd	d13, d13, d0
    2a18:	b.gt	29f8 <integrate@@Base+0x58>
    2a1c:	fdiv	d0, d13, d11
    2a20:	ldr	x19, [sp, #64]
    2a24:	ldp	x29, x30, [sp, #48]
    2a28:	ldp	d9, d8, [sp, #32]
    2a2c:	ldp	d11, d10, [sp, #16]
    2a30:	ldp	d13, d12, [sp], #80
    2a34:	ret
    2a38:	stp	x29, x30, [sp, #-32]!
    2a3c:	stp	x20, x19, [sp, #16]
    2a40:	mov	x29, sp
    2a44:	mov	x19, x1
    2a48:	mov	x20, x0
    2a4c:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2a50:	add	x0, x0, #0x488
    2a54:	mov	x1, x20
    2a58:	mov	x2, x19
    2a5c:	bl	21a0 <printf@plt>
    2a60:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2a64:	add	x0, x0, #0x4cf
    2a68:	bl	2140 <puts@plt>
    2a6c:	mov	w0, #0x20                  	// #32
    2a70:	blr	x20
    2a74:	mov	x20, x0
    2a78:	blr	x19
    2a7c:	mov	x1, x20
    2a80:	ldp	x20, x19, [sp, #16]
    2a84:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2a88:	add	x0, x0, #0x49d
    2a8c:	ldp	x29, x30, [sp], #32
    2a90:	b	21a0 <printf@plt>

0000000000002a94 <library_get@@Base>:
    2a94:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2a98:	ldr	x0, [x0, #4064]
    2a9c:	ret

0000000000002aa0 <py_func_si@@Base>:
    2aa0:	sub	sp, sp, #0x20
    2aa4:	stp	x29, x30, [sp, #16]
    2aa8:	add	x29, sp, #0x10
    2aac:	mov	x0, x1
    2ab0:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2ab4:	add	x1, x1, #0x4c7
    2ab8:	add	x2, sp, #0x8
    2abc:	add	x3, sp, #0x4
    2ac0:	bl	2150 <PyArg_ParseTuple@plt>
    2ac4:	cbz	w0, 2ae0 <py_func_si@@Base+0x40>
    2ac8:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2acc:	ldr	x0, [x0, #4008]
    2ad0:	ldr	x8, [x0]
    2ad4:	add	x8, x8, #0x1
    2ad8:	str	x8, [x0]
    2adc:	b	2ae4 <py_func_si@@Base+0x44>
    2ae0:	mov	x0, xzr
    2ae4:	ldp	x29, x30, [sp, #16]
    2ae8:	add	sp, sp, #0x20
    2aec:	ret

0000000000002af0 <_py_func_si@@Base>:
    2af0:	ret

0000000000002af4 <py_func@@Base>:
    2af4:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2af8:	ldr	x0, [x0, #4008]
    2afc:	ldr	x8, [x0]
    2b00:	add	x8, x8, #0x1
    2b04:	str	x8, [x0]
    2b08:	ret

0000000000002b0c <_py_func@@Base>:
    2b0c:	ret

0000000000002b10 <set_bitfields@@Base>:
    2b10:	and	w8, w1, #0xff
    2b14:	sub	w8, w8, #0x41
    2b18:	cmp	w8, #0x12
    2b1c:	b.hi	2bfc <set_bitfields@@Base+0xec>  // b.pmore
    2b20:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2b24:	add	x9, x9, #0x350
    2b28:	adr	x10, 2b38 <set_bitfields@@Base+0x28>
    2b2c:	ldrb	w11, [x9, x8]
    2b30:	add	x10, x10, x11, lsl #2
    2b34:	br	x10
    2b38:	ldr	w8, [x0]
    2b3c:	bfxil	w8, w2, #0, #1
    2b40:	b	2b88 <set_bitfields@@Base+0x78>
    2b44:	ldr	w8, [x0]
    2b48:	bfi	w8, w2, #1, #2
    2b4c:	b	2b88 <set_bitfields@@Base+0x78>
    2b50:	ldr	w8, [x0]
    2b54:	bfi	w8, w2, #3, #3
    2b58:	b	2b88 <set_bitfields@@Base+0x78>
    2b5c:	ldr	w8, [x0]
    2b60:	bfi	w8, w2, #6, #4
    2b64:	b	2b88 <set_bitfields@@Base+0x78>
    2b68:	ldr	w8, [x0]
    2b6c:	bfi	w8, w2, #10, #5
    2b70:	b	2b88 <set_bitfields@@Base+0x78>
    2b74:	ldr	w8, [x0]
    2b78:	bfi	w8, w2, #15, #6
    2b7c:	b	2b88 <set_bitfields@@Base+0x78>
    2b80:	ldr	w8, [x0]
    2b84:	bfi	w8, w2, #21, #7
    2b88:	str	w8, [x0]
    2b8c:	ret
    2b90:	strb	w2, [x0, #4]
    2b94:	ret
    2b98:	ldur	x8, [x0, #4]
    2b9c:	ubfiz	w9, w2, #8, #9
    2ba0:	and	x8, x8, #0xfffffffffffe00ff
    2ba4:	b	2bf4 <set_bitfields@@Base+0xe4>
    2ba8:	ldur	x8, [x0, #4]
    2bac:	ubfiz	w9, w2, #17, #1
    2bb0:	and	x8, x8, #0xfffffffffffdffff
    2bb4:	b	2bf4 <set_bitfields@@Base+0xe4>
    2bb8:	ldur	x8, [x0, #4]
    2bbc:	ubfiz	w9, w2, #18, #2
    2bc0:	and	x8, x8, #0xfffffffffff3ffff
    2bc4:	b	2bf4 <set_bitfields@@Base+0xe4>
    2bc8:	ldur	x8, [x0, #4]
    2bcc:	ubfiz	w9, w2, #20, #3
    2bd0:	and	x8, x8, #0xffffffffff8fffff
    2bd4:	b	2bf4 <set_bitfields@@Base+0xe4>
    2bd8:	ldur	x8, [x0, #4]
    2bdc:	ubfiz	w9, w2, #23, #4
    2be0:	and	x8, x8, #0xfffffffff87fffff
    2be4:	b	2bf4 <set_bitfields@@Base+0xe4>
    2be8:	ldur	x8, [x0, #4]
    2bec:	lsl	w9, w2, #27
    2bf0:	and	x8, x8, #0xffffffff07ffffff
    2bf4:	orr	x8, x8, x9
    2bf8:	stur	x8, [x0, #4]
    2bfc:	ret
    2c00:	ldur	x8, [x0, #4]
    2c04:	and	w9, w2, #0x3f
    2c08:	bfi	x8, x9, #32, #6
    2c0c:	b	2bf8 <set_bitfields@@Base+0xe8>
    2c10:	ldur	x8, [x0, #4]
    2c14:	and	w9, w2, #0x7f
    2c18:	bfi	x8, x9, #38, #7
    2c1c:	b	2bf8 <set_bitfields@@Base+0xe8>

0000000000002c20 <unpack_bitfields@@Base>:
    2c20:	and	w9, w1, #0xff
    2c24:	sub	w9, w9, #0x41
    2c28:	mov	x8, x0
    2c2c:	cmp	w9, #0x12
    2c30:	mov	w0, #0x3e7                 	// #999
    2c34:	b.hi	2c58 <unpack_bitfields@@Base+0x38>  // b.pmore
    2c38:	adrp	x10, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2c3c:	add	x10, x10, #0x363
    2c40:	adr	x11, 2c50 <unpack_bitfields@@Base+0x30>
    2c44:	ldrb	w12, [x10, x9]
    2c48:	add	x11, x11, x12, lsl #2
    2c4c:	br	x11
    2c50:	ldr	w8, [x8]
    2c54:	sbfx	w0, w8, #0, #1
    2c58:	ret
    2c5c:	ldr	w8, [x8]
    2c60:	sbfx	w0, w8, #1, #2
    2c64:	ret
    2c68:	ldr	w8, [x8]
    2c6c:	sbfx	w0, w8, #3, #3
    2c70:	ret
    2c74:	ldr	w8, [x8]
    2c78:	sbfx	w0, w8, #6, #4
    2c7c:	ret
    2c80:	ldr	w8, [x8]
    2c84:	sbfx	w0, w8, #10, #5
    2c88:	ret
    2c8c:	ldr	w8, [x8]
    2c90:	sbfx	w0, w8, #15, #6
    2c94:	ret
    2c98:	ldr	w8, [x8]
    2c9c:	sbfx	w0, w8, #21, #7
    2ca0:	ret
    2ca4:	ldrsb	w0, [x8, #4]
    2ca8:	ret
    2cac:	ldur	x8, [x8, #4]
    2cb0:	sbfx	x0, x8, #8, #9
    2cb4:	ret
    2cb8:	ldur	x8, [x8, #4]
    2cbc:	sbfx	x0, x8, #17, #1
    2cc0:	ret
    2cc4:	ldur	x8, [x8, #4]
    2cc8:	sbfx	x0, x8, #18, #2
    2ccc:	ret
    2cd0:	ldur	x8, [x8, #4]
    2cd4:	sbfx	x0, x8, #20, #3
    2cd8:	ret
    2cdc:	ldur	x8, [x8, #4]
    2ce0:	sbfx	x0, x8, #23, #4
    2ce4:	ret
    2ce8:	ldur	x8, [x8, #4]
    2cec:	sbfx	x0, x8, #27, #5
    2cf0:	ret
    2cf4:	ldur	x8, [x8, #4]
    2cf8:	sbfx	x0, x8, #32, #6
    2cfc:	ret
    2d00:	ldur	x8, [x8, #4]
    2d04:	sbfx	x0, x8, #38, #7
    2d08:	ret

0000000000002d0c <tf_b@@Base>:
    2d0c:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2d10:	mov	w11, #0x5556                	// #21846
    2d14:	sxtb	w8, w0
    2d18:	ldr	x10, [x10, #4024]
    2d1c:	movk	w11, #0x5555, lsl #16
    2d20:	smull	x8, w8, w11
    2d24:	lsr	x11, x8, #63
    2d28:	lsr	x8, x8, #32
    2d2c:	sxtb	x9, w0
    2d30:	add	w0, w8, w11
    2d34:	str	x9, [x10]
    2d38:	ret

0000000000002d3c <tf_B@@Base>:
    2d3c:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2d40:	ldr	x10, [x10, #4032]
    2d44:	mov	w11, #0xaaab                	// #43691
    2d48:	and	w8, w0, #0xff
    2d4c:	movk	w11, #0xaaaa, lsl #16
    2d50:	umull	x8, w8, w11
    2d54:	and	x9, x0, #0xff
    2d58:	lsr	x0, x8, #33
    2d5c:	str	x9, [x10]
    2d60:	ret

0000000000002d64 <tf_h@@Base>:
    2d64:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2d68:	mov	w11, #0x5556                	// #21846
    2d6c:	sxth	w8, w0
    2d70:	ldr	x10, [x10, #4024]
    2d74:	movk	w11, #0x5555, lsl #16
    2d78:	smull	x8, w8, w11
    2d7c:	lsr	x11, x8, #63
    2d80:	lsr	x8, x8, #32
    2d84:	sxth	x9, w0
    2d88:	add	w0, w8, w11
    2d8c:	str	x9, [x10]
    2d90:	ret

0000000000002d94 <tf_H@@Base>:
    2d94:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2d98:	ldr	x10, [x10, #4032]
    2d9c:	mov	w11, #0xaaab                	// #43691
    2da0:	and	w8, w0, #0xffff
    2da4:	movk	w11, #0xaaaa, lsl #16
    2da8:	umull	x8, w8, w11
    2dac:	and	x9, x0, #0xffff
    2db0:	lsr	x0, x8, #33
    2db4:	str	x9, [x10]
    2db8:	ret

0000000000002dbc <tf_i@@Base>:
    2dbc:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2dc0:	mov	w10, #0x5556                	// #21846
    2dc4:	ldr	x9, [x9, #4024]
    2dc8:	movk	w10, #0x5555, lsl #16
    2dcc:	smull	x10, w0, w10
    2dd0:	lsr	x11, x10, #63
    2dd4:	lsr	x10, x10, #32
    2dd8:	sxtw	x8, w0
    2ddc:	add	w0, w10, w11
    2de0:	str	x8, [x9]
    2de4:	ret

0000000000002de8 <tf_I@@Base>:
    2de8:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2dec:	ldr	x9, [x9, #4032]
    2df0:	mov	w10, #0xaaab                	// #43691
    2df4:	movk	w10, #0xaaaa, lsl #16
    2df8:	umull	x10, w0, w10
    2dfc:	mov	w8, w0
    2e00:	lsr	x0, x10, #33
    2e04:	str	x8, [x9]
    2e08:	ret

0000000000002e0c <tf_l@@Base>:
    2e0c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2e10:	ldr	x9, [x9, #4024]
    2e14:	mov	x8, #0x5555555555555555    	// #6148914691236517205
    2e18:	movk	x8, #0x5556
    2e1c:	smulh	x8, x0, x8
    2e20:	add	x8, x8, x8, lsr #63
    2e24:	str	x0, [x9]
    2e28:	mov	x0, x8
    2e2c:	ret

0000000000002e30 <tf_L@@Base>:
    2e30:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2e34:	ldr	x9, [x9, #4032]
    2e38:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2e3c:	movk	x8, #0xaaab
    2e40:	umulh	x8, x0, x8
    2e44:	lsr	x8, x8, #1
    2e48:	str	x0, [x9]
    2e4c:	mov	x0, x8
    2e50:	ret

0000000000002e54 <tf_q@@Base>:
    2e54:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2e58:	ldr	x9, [x9, #4024]
    2e5c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
    2e60:	movk	x8, #0x5556
    2e64:	smulh	x8, x0, x8
    2e68:	add	x8, x8, x8, lsr #63
    2e6c:	str	x0, [x9]
    2e70:	mov	x0, x8
    2e74:	ret

0000000000002e78 <tf_Q@@Base>:
    2e78:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2e7c:	ldr	x9, [x9, #4032]
    2e80:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2e84:	movk	x8, #0xaaab
    2e88:	umulh	x8, x0, x8
    2e8c:	lsr	x8, x8, #1
    2e90:	str	x0, [x9]
    2e94:	mov	x0, x8
    2e98:	ret

0000000000002e9c <tf_f@@Base>:
    2e9c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2ea0:	ldr	x9, [x9, #4024]
    2ea4:	fmov	s1, #3.000000000000000000e+00
    2ea8:	fcvtzs	x8, s0
    2eac:	fdiv	s0, s0, s1
    2eb0:	str	x8, [x9]
    2eb4:	ret

0000000000002eb8 <tf_d@@Base>:
    2eb8:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2ebc:	ldr	x9, [x9, #4024]
    2ec0:	fmov	d1, #3.000000000000000000e+00
    2ec4:	fcvtzs	x8, d0
    2ec8:	fdiv	d0, d0, d1
    2ecc:	str	x8, [x9]
    2ed0:	ret

0000000000002ed4 <tf_D@@Base>:
    2ed4:	sub	sp, sp, #0x20
    2ed8:	stp	x29, x30, [sp, #16]
    2edc:	add	x29, sp, #0x10
    2ee0:	str	q0, [sp]
    2ee4:	bl	4f10 <PyInit__ctypes_test@@Base+0x1c40>
    2ee8:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2eec:	ldr	x8, [x8, #4024]
    2ef0:	ldr	q0, [sp]
    2ef4:	str	x0, [x8]
    2ef8:	adrp	x8, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    2efc:	ldr	q1, [x8, #928]
    2f00:	bl	3e08 <PyInit__ctypes_test@@Base+0xb38>
    2f04:	ldp	x29, x30, [sp, #16]
    2f08:	add	sp, sp, #0x20
    2f0c:	ret

0000000000002f10 <tf_bb@@Base>:
    2f10:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2f14:	mov	w11, #0x5556                	// #21846
    2f18:	sxtb	w8, w1
    2f1c:	ldr	x10, [x10, #4024]
    2f20:	movk	w11, #0x5555, lsl #16
    2f24:	smull	x8, w8, w11
    2f28:	lsr	x11, x8, #63
    2f2c:	lsr	x8, x8, #32
    2f30:	sxtb	x9, w1
    2f34:	add	w0, w8, w11
    2f38:	str	x9, [x10]
    2f3c:	ret

0000000000002f40 <tf_bB@@Base>:
    2f40:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2f44:	ldr	x10, [x10, #4032]
    2f48:	mov	w11, #0xaaab                	// #43691
    2f4c:	and	w8, w1, #0xff
    2f50:	movk	w11, #0xaaaa, lsl #16
    2f54:	umull	x8, w8, w11
    2f58:	and	x9, x1, #0xff
    2f5c:	lsr	x0, x8, #33
    2f60:	str	x9, [x10]
    2f64:	ret

0000000000002f68 <tf_bh@@Base>:
    2f68:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2f6c:	mov	w11, #0x5556                	// #21846
    2f70:	sxth	w8, w1
    2f74:	ldr	x10, [x10, #4024]
    2f78:	movk	w11, #0x5555, lsl #16
    2f7c:	smull	x8, w8, w11
    2f80:	lsr	x11, x8, #63
    2f84:	lsr	x8, x8, #32
    2f88:	sxth	x9, w1
    2f8c:	add	w0, w8, w11
    2f90:	str	x9, [x10]
    2f94:	ret

0000000000002f98 <tf_bH@@Base>:
    2f98:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2f9c:	ldr	x10, [x10, #4032]
    2fa0:	mov	w11, #0xaaab                	// #43691
    2fa4:	and	w8, w1, #0xffff
    2fa8:	movk	w11, #0xaaaa, lsl #16
    2fac:	umull	x8, w8, w11
    2fb0:	and	x9, x1, #0xffff
    2fb4:	lsr	x0, x8, #33
    2fb8:	str	x9, [x10]
    2fbc:	ret

0000000000002fc0 <tf_bi@@Base>:
    2fc0:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2fc4:	mov	w10, #0x5556                	// #21846
    2fc8:	ldr	x9, [x9, #4024]
    2fcc:	movk	w10, #0x5555, lsl #16
    2fd0:	smull	x10, w1, w10
    2fd4:	lsr	x11, x10, #63
    2fd8:	lsr	x10, x10, #32
    2fdc:	sxtw	x8, w1
    2fe0:	add	w0, w10, w11
    2fe4:	str	x8, [x9]
    2fe8:	ret

0000000000002fec <tf_bI@@Base>:
    2fec:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    2ff0:	ldr	x9, [x9, #4032]
    2ff4:	mov	w10, #0xaaab                	// #43691
    2ff8:	movk	w10, #0xaaaa, lsl #16
    2ffc:	umull	x10, w1, w10
    3000:	mov	w8, w1
    3004:	lsr	x0, x10, #33
    3008:	str	x8, [x9]
    300c:	ret

0000000000003010 <tf_bl@@Base>:
    3010:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3014:	ldr	x8, [x8, #4024]
    3018:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    301c:	movk	x9, #0x5556
    3020:	smulh	x9, x1, x9
    3024:	add	x0, x9, x9, lsr #63
    3028:	str	x1, [x8]
    302c:	ret

0000000000003030 <tf_bL@@Base>:
    3030:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3034:	ldr	x8, [x8, #4032]
    3038:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    303c:	movk	x9, #0xaaab
    3040:	umulh	x9, x1, x9
    3044:	lsr	x0, x9, #1
    3048:	str	x1, [x8]
    304c:	ret

0000000000003050 <tf_bq@@Base>:
    3050:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3054:	ldr	x8, [x8, #4024]
    3058:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    305c:	movk	x9, #0x5556
    3060:	smulh	x9, x1, x9
    3064:	add	x0, x9, x9, lsr #63
    3068:	str	x1, [x8]
    306c:	ret

0000000000003070 <tf_bQ@@Base>:
    3070:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3074:	ldr	x8, [x8, #4032]
    3078:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    307c:	movk	x9, #0xaaab
    3080:	umulh	x9, x1, x9
    3084:	lsr	x0, x9, #1
    3088:	str	x1, [x8]
    308c:	ret

0000000000003090 <tf_bf@@Base>:
    3090:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3094:	ldr	x9, [x9, #4024]
    3098:	fmov	s1, #3.000000000000000000e+00
    309c:	fcvtzs	x8, s0
    30a0:	fdiv	s0, s0, s1
    30a4:	str	x8, [x9]
    30a8:	ret

00000000000030ac <tf_bd@@Base>:
    30ac:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    30b0:	ldr	x9, [x9, #4024]
    30b4:	fmov	d1, #3.000000000000000000e+00
    30b8:	fcvtzs	x8, d0
    30bc:	fdiv	d0, d0, d1
    30c0:	str	x8, [x9]
    30c4:	ret

00000000000030c8 <tf_bD@@Base>:
    30c8:	sub	sp, sp, #0x20
    30cc:	stp	x29, x30, [sp, #16]
    30d0:	add	x29, sp, #0x10
    30d4:	str	q0, [sp]
    30d8:	bl	4f10 <PyInit__ctypes_test@@Base+0x1c40>
    30dc:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    30e0:	ldr	x8, [x8, #4024]
    30e4:	ldr	q0, [sp]
    30e8:	str	x0, [x8]
    30ec:	adrp	x8, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    30f0:	ldr	q1, [x8, #928]
    30f4:	bl	3e08 <PyInit__ctypes_test@@Base+0xb38>
    30f8:	ldp	x29, x30, [sp, #16]
    30fc:	add	sp, sp, #0x20
    3100:	ret

0000000000003104 <tv_i@@Base>:
    3104:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3108:	ldr	x9, [x9, #4024]
    310c:	sxtw	x8, w0
    3110:	str	x8, [x9]
    3114:	ret

0000000000003118 <PointInRect@@Base>:
    3118:	ldr	x8, [x0]
    311c:	cmp	x1, x8
    3120:	b.lt	313c <PointInRect@@Base+0x24>  // b.tstop
    3124:	ldr	x8, [x0, #16]
    3128:	cmp	x1, x8
    312c:	b.gt	313c <PointInRect@@Base+0x24>
    3130:	ldr	x8, [x0, #8]
    3134:	cmp	x2, x8
    3138:	b.ge	3144 <PointInRect@@Base+0x2c>  // b.tcont
    313c:	mov	w0, wzr
    3140:	ret
    3144:	ldr	x8, [x0, #24]
    3148:	cmp	x2, x8
    314c:	cset	w0, le
    3150:	ret

0000000000003154 <ReturnRect@@Base>:
    3154:	adrp	x14, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3158:	ldr	x9, [sp, #16]
    315c:	ldr	x10, [x1]
    3160:	ldr	x11, [x2]
    3164:	ldr	x12, [x5]
    3168:	ldr	x13, [x6]
    316c:	ldr	x14, [x14, #3976]
    3170:	add	x10, x11, x10
    3174:	ldr	x11, [x9]
    3178:	add	x10, x10, x12
    317c:	ldr	x14, [x14]
    3180:	add	x10, x10, x13
    3184:	add	x10, x10, x11
    3188:	add	x11, x14, x14, lsl #2
    318c:	cmp	x10, x11
    3190:	b.ne	3210 <ReturnRect@@Base+0xbc>  // b.any
    3194:	adrp	x15, 15000 <PyInit__ctypes_test@@Base+0x11d30>
    3198:	ldr	x10, [x1, #16]
    319c:	ldr	x11, [x2, #16]
    31a0:	ldr	x12, [x5, #16]
    31a4:	ldr	x13, [x6, #16]
    31a8:	ldr	x14, [x9, #16]
    31ac:	ldr	x15, [x15, #3984]
    31b0:	add	x10, x11, x10
    31b4:	add	x10, x10, x12
    31b8:	add	x10, x10, x13
    31bc:	ldr	x15, [x15]
    31c0:	add	x10, x10, x14
    31c4:	add	x11, x15, x15, lsl #2
    31c8:	cmp	x10, x11
    31cc:	b.ne	321c <ReturnRect@@Base+0xc8>  // b.any
    31d0:	ldp	x11, x10, [sp]
    31d4:	cmp	x3, x11
    31d8:	b.ne	31e4 <ReturnRect@@Base+0x90>  // b.any
    31dc:	cmp	x4, x10
    31e0:	b.eq	31f8 <ReturnRect@@Base+0xa4>  // b.none
    31e4:	cmp	x4, x10
    31e8:	mov	x10, #0xffffffffffffff38    	// #-200
    31ec:	mov	x11, #0xffffffffffffff9c    	// #-100
    31f0:	csel	x10, x11, x10, eq  // eq = none
    31f4:	str	x10, [x1]
    31f8:	cmp	w0, #0x2
    31fc:	b.eq	3228 <ReturnRect@@Base+0xd4>  // b.none
    3200:	cmp	w0, #0x1
    3204:	b.ne	322c <ReturnRect@@Base+0xd8>  // b.any
    3208:	mov	x1, x5
    320c:	b	322c <ReturnRect@@Base+0xd8>
    3210:	mov	w9, #0x64                  	// #100
    3214:	str	x9, [x1]
    3218:	b	322c <ReturnRect@@Base+0xd8>
    321c:	mov	w9, #0x64                  	// #100
    3220:	str	x9, [x1, #16]
    3224:	b	322c <ReturnRect@@Base+0xd8>
    3228:	mov	x1, x9
    322c:	ldp	q1, q0, [x1]
    3230:	stp	q1, q0, [x8]
    3234:	ret

0000000000003238 <ret_2h_func@@Base>:
    3238:	ubfx	x8, x0, #16, #16
    323c:	lsl	w8, w8, #1
    3240:	add	w8, w8, w0, lsr #16
    3244:	ubfiz	w0, w0, #1, #15
    3248:	bfi	w0, w8, #16, #16
    324c:	ret

0000000000003250 <ret_8i_func@@Base>:
    3250:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    3254:	ldr	q2, [x9, #944]
    3258:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    325c:	ldp	q0, q1, [x0]
    3260:	ldr	q3, [x9, #960]
    3264:	mul	v0.4s, v0.4s, v2.4s
    3268:	mul	v1.4s, v1.4s, v3.4s
    326c:	stp	q0, q1, [x0]
    3270:	ldp	q1, q0, [x0]
    3274:	stp	q1, q0, [x8]
    3278:	ret

000000000000327c <GetRectangle@@Base>:
    327c:	cbz	w0, 32b0 <GetRectangle@@Base+0x34>
    3280:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    3284:	ldr	d1, [x9, #976]
    3288:	dup	v0.2s, w0
    328c:	sxtw	x8, w0
    3290:	add	w10, w0, #0x3
    3294:	add	v0.2s, v0.2s, v1.2s
    3298:	str	x8, [x1]
    329c:	sxtw	x8, w10
    32a0:	sxtl	v0.2d, v0.2s
    32a4:	mov	w0, #0x1                   	// #1
    32a8:	str	x8, [x1, #24]
    32ac:	stur	q0, [x1, #8]
    32b0:	ret

00000000000032b4 <TwoOutArgs@@Base>:
    32b4:	ldr	w8, [x1]
    32b8:	add	w8, w8, w0
    32bc:	str	w8, [x1]
    32c0:	ldr	w8, [x3]
    32c4:	add	w8, w8, w2
    32c8:	str	w8, [x3]
    32cc:	ret

00000000000032d0 <PyInit__ctypes_test@@Base>:
    32d0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12d30>
    32d4:	add	x0, x0, #0xf8
    32d8:	mov	w1, #0x3f5                 	// #1013
    32dc:	b	2130 <PyModule_Create2@plt>
    32e0:	stp	x29, x30, [sp, #-48]!
    32e4:	mov	x29, sp
    32e8:	str	q0, [sp, #16]
    32ec:	str	q1, [sp, #32]
    32f0:	ldp	x6, x1, [sp, #16]
    32f4:	ldp	x0, x3, [sp, #32]
    32f8:	mrs	x15, fpcr
    32fc:	lsr	x7, x1, #63
    3300:	mov	x10, x0
    3304:	ubfiz	x4, x3, #3, #48
    3308:	lsr	x5, x3, #63
    330c:	mov	x12, x7
    3310:	ubfiz	x2, x1, #3, #48
    3314:	orr	x4, x4, x0, lsr #61
    3318:	ubfx	x8, x1, #48, #15
    331c:	ubfx	x0, x3, #48, #15
    3320:	and	w7, w7, #0xff
    3324:	mov	x16, x12
    3328:	cmp	x12, x5
    332c:	and	w11, w5, #0xff
    3330:	orr	x2, x2, x6, lsr #61
    3334:	mov	x1, x8
    3338:	lsl	x9, x6, #3
    333c:	mov	x3, x0
    3340:	lsl	x13, x10, #3
    3344:	b.eq	34f0 <PyInit__ctypes_test@@Base+0x220>  // b.none
    3348:	sub	w0, w8, w0
    334c:	cmp	w0, #0x0
    3350:	b.le	349c <PyInit__ctypes_test@@Base+0x1cc>
    3354:	cbz	x3, 3550 <PyInit__ctypes_test@@Base+0x280>
    3358:	orr	x4, x4, #0x8000000000000
    335c:	mov	x3, #0x7fff                	// #32767
    3360:	cmp	x1, x3
    3364:	b.eq	3754 <PyInit__ctypes_test@@Base+0x484>  // b.none
    3368:	cmp	w0, #0x74
    336c:	b.gt	37d8 <PyInit__ctypes_test@@Base+0x508>
    3370:	cmp	w0, #0x3f
    3374:	b.gt	3938 <PyInit__ctypes_test@@Base+0x668>
    3378:	mov	w3, #0x40                  	// #64
    337c:	sub	w3, w3, w0
    3380:	lsr	x6, x13, x0
    3384:	lsl	x13, x13, x3
    3388:	cmp	x13, #0x0
    338c:	cset	x5, ne  // ne = any
    3390:	lsl	x3, x4, x3
    3394:	orr	x3, x3, x6
    3398:	lsr	x0, x4, x0
    339c:	orr	x3, x3, x5
    33a0:	sub	x2, x2, x0
    33a4:	subs	x9, x9, x3
    33a8:	sbc	x2, x2, xzr
    33ac:	and	x3, x2, #0x7ffffffffffff
    33b0:	tbz	x2, #51, 3590 <PyInit__ctypes_test@@Base+0x2c0>
    33b4:	cbz	x3, 37bc <PyInit__ctypes_test@@Base+0x4ec>
    33b8:	clz	x0, x3
    33bc:	sub	w0, w0, #0xc
    33c0:	neg	w2, w0
    33c4:	lsl	x4, x3, x0
    33c8:	lsl	x3, x9, x0
    33cc:	lsr	x9, x9, x2
    33d0:	orr	x2, x9, x4
    33d4:	cmp	x1, w0, sxtw
    33d8:	sxtw	x4, w0
    33dc:	b.gt	379c <PyInit__ctypes_test@@Base+0x4cc>
    33e0:	sub	w1, w0, w1
    33e4:	add	w0, w1, #0x1
    33e8:	cmp	w0, #0x3f
    33ec:	b.gt	3900 <PyInit__ctypes_test@@Base+0x630>
    33f0:	mov	w1, #0x40                  	// #64
    33f4:	sub	w1, w1, w0
    33f8:	lsr	x4, x3, x0
    33fc:	lsl	x3, x3, x1
    3400:	cmp	x3, #0x0
    3404:	lsl	x9, x2, x1
    3408:	cset	x1, ne  // ne = any
    340c:	orr	x9, x9, x4
    3410:	lsr	x2, x2, x0
    3414:	orr	x9, x9, x1
    3418:	orr	x8, x9, x2
    341c:	cbz	x8, 35a4 <PyInit__ctypes_test@@Base+0x2d4>
    3420:	and	x0, x9, #0x7
    3424:	mov	x1, #0x0                   	// #0
    3428:	mov	w5, #0x1                   	// #1
    342c:	cbz	x0, 37e8 <PyInit__ctypes_test@@Base+0x518>
    3430:	and	x3, x15, #0xc00000
    3434:	cmp	x3, #0x400, lsl #12
    3438:	b.eq	372c <PyInit__ctypes_test@@Base+0x45c>  // b.none
    343c:	cmp	x3, #0x800, lsl #12
    3440:	b.eq	370c <PyInit__ctypes_test@@Base+0x43c>  // b.none
    3444:	cbz	x3, 3738 <PyInit__ctypes_test@@Base+0x468>
    3448:	and	x3, x2, #0x8000000000000
    344c:	mov	w0, #0x10                  	// #16
    3450:	cbz	w5, 3458 <PyInit__ctypes_test@@Base+0x188>
    3454:	orr	w0, w0, #0x8
    3458:	cbz	x3, 3770 <PyInit__ctypes_test@@Base+0x4a0>
    345c:	add	x1, x1, #0x1
    3460:	mov	x3, #0x7fff                	// #32767
    3464:	cmp	x1, x3
    3468:	b.eq	3654 <PyInit__ctypes_test@@Base+0x384>  // b.none
    346c:	and	w1, w1, #0x7fff
    3470:	extr	x8, x2, x9, #3
    3474:	ubfx	x2, x2, #3, #48
    3478:	mov	x5, #0x0                   	// #0
    347c:	orr	w1, w1, w7, lsl #15
    3480:	bfxil	x5, x2, #0, #48
    3484:	fmov	d0, x8
    3488:	bfi	x5, x1, #48, #16
    348c:	fmov	v0.d[1], x5
    3490:	cbnz	w0, 36b0 <PyInit__ctypes_test@@Base+0x3e0>
    3494:	ldp	x29, x30, [sp], #48
    3498:	ret
    349c:	mov	x14, x5
    34a0:	b.eq	35bc <PyInit__ctypes_test@@Base+0x2ec>  // b.none
    34a4:	cbnz	x8, 3840 <PyInit__ctypes_test@@Base+0x570>
    34a8:	orr	x1, x2, x9
    34ac:	cbz	x1, 356c <PyInit__ctypes_test@@Base+0x29c>
    34b0:	cmn	w0, #0x1
    34b4:	b.eq	3c5c <PyInit__ctypes_test@@Base+0x98c>  // b.none
    34b8:	mov	x1, #0x7fff                	// #32767
    34bc:	mvn	w0, w0
    34c0:	cmp	x3, x1
    34c4:	b.ne	3854 <PyInit__ctypes_test@@Base+0x584>  // b.any
    34c8:	orr	x0, x4, x13
    34cc:	cbnz	x0, 3bb4 <PyInit__ctypes_test@@Base+0x8e4>
    34d0:	mov	x16, x14
    34d4:	nop
    34d8:	mov	x4, #0x0                   	// #0
    34dc:	fmov	d0, x4
    34e0:	lsl	x16, x16, #63
    34e4:	orr	x5, x16, #0x7fff000000000000
    34e8:	fmov	v0.d[1], x5
    34ec:	b	3494 <PyInit__ctypes_test@@Base+0x1c4>
    34f0:	sub	w5, w8, w0
    34f4:	cmp	w5, #0x0
    34f8:	b.le	36c4 <PyInit__ctypes_test@@Base+0x3f4>
    34fc:	cbz	x0, 3604 <PyInit__ctypes_test@@Base+0x334>
    3500:	orr	x4, x4, #0x8000000000000
    3504:	mov	x0, #0x7fff                	// #32767
    3508:	cmp	x1, x0
    350c:	b.eq	3754 <PyInit__ctypes_test@@Base+0x484>  // b.none
    3510:	cmp	w5, #0x74
    3514:	b.gt	38e8 <PyInit__ctypes_test@@Base+0x618>
    3518:	cmp	w5, #0x3f
    351c:	b.gt	39e8 <PyInit__ctypes_test@@Base+0x718>
    3520:	mov	w0, #0x40                  	// #64
    3524:	sub	w0, w0, w5
    3528:	lsr	x6, x13, x5
    352c:	lsl	x13, x13, x0
    3530:	cmp	x13, #0x0
    3534:	lsl	x0, x4, x0
    3538:	cset	x3, ne  // ne = any
    353c:	orr	x0, x0, x6
    3540:	lsr	x4, x4, x5
    3544:	orr	x0, x0, x3
    3548:	add	x2, x2, x4
    354c:	b	38f4 <PyInit__ctypes_test@@Base+0x624>
    3550:	orr	x3, x4, x13
    3554:	cbz	x3, 38c4 <PyInit__ctypes_test@@Base+0x5f4>
    3558:	subs	w0, w0, #0x1
    355c:	b.ne	335c <PyInit__ctypes_test@@Base+0x8c>  // b.any
    3560:	subs	x9, x9, x13
    3564:	sbc	x2, x2, x4
    3568:	b	33ac <PyInit__ctypes_test@@Base+0xdc>
    356c:	mov	x0, #0x7fff                	// #32767
    3570:	cmp	x3, x0
    3574:	b.eq	3ca8 <PyInit__ctypes_test@@Base+0x9d8>  // b.none
    3578:	mov	w7, w11
    357c:	mov	x2, x4
    3580:	mov	x9, x13
    3584:	mov	x1, x3
    3588:	mov	x12, x5
    358c:	nop
    3590:	orr	x8, x9, x2
    3594:	and	x0, x9, #0x7
    3598:	mov	w5, #0x0                   	// #0
    359c:	cbnz	x1, 342c <PyInit__ctypes_test@@Base+0x15c>
    35a0:	cbnz	x8, 3420 <PyInit__ctypes_test@@Base+0x150>
    35a4:	mov	x2, #0x0                   	// #0
    35a8:	mov	x1, #0x0                   	// #0
    35ac:	mov	w0, #0x0                   	// #0
    35b0:	and	x2, x2, #0xffffffffffff
    35b4:	and	w1, w1, #0x7fff
    35b8:	b	3478 <PyInit__ctypes_test@@Base+0x1a8>
    35bc:	add	x5, x8, #0x1
    35c0:	tst	x5, #0x7ffe
    35c4:	b.ne	3894 <PyInit__ctypes_test@@Base+0x5c4>  // b.any
    35c8:	orr	x5, x2, x9
    35cc:	orr	x8, x4, x13
    35d0:	cbnz	x1, 3a54 <PyInit__ctypes_test@@Base+0x784>
    35d4:	cbz	x5, 3afc <PyInit__ctypes_test@@Base+0x82c>
    35d8:	cbz	x8, 3b10 <PyInit__ctypes_test@@Base+0x840>
    35dc:	subs	x5, x9, x13
    35e0:	cmp	x9, x13
    35e4:	sbc	x3, x2, x4
    35e8:	tbz	x3, #51, 3cdc <PyInit__ctypes_test@@Base+0xa0c>
    35ec:	subs	x9, x13, x9
    35f0:	mov	w7, w11
    35f4:	sbc	x2, x4, x2
    35f8:	mov	x12, x14
    35fc:	orr	x8, x9, x2
    3600:	b	341c <PyInit__ctypes_test@@Base+0x14c>
    3604:	orr	x0, x4, x13
    3608:	cbz	x0, 3adc <PyInit__ctypes_test@@Base+0x80c>
    360c:	subs	w5, w5, #0x1
    3610:	b.ne	3504 <PyInit__ctypes_test@@Base+0x234>  // b.any
    3614:	adds	x9, x9, x13
    3618:	adc	x2, x4, x2
    361c:	nop
    3620:	tbz	x2, #51, 3590 <PyInit__ctypes_test@@Base+0x2c0>
    3624:	add	x1, x1, #0x1
    3628:	mov	x0, #0x7fff                	// #32767
    362c:	cmp	x1, x0
    3630:	b.eq	3b1c <PyInit__ctypes_test@@Base+0x84c>  // b.none
    3634:	and	x0, x9, #0x1
    3638:	and	x3, x2, #0xfff7ffffffffffff
    363c:	orr	x9, x0, x9, lsr #1
    3640:	mov	w5, #0x0                   	// #0
    3644:	orr	x9, x9, x2, lsl #63
    3648:	lsr	x2, x3, #1
    364c:	and	x0, x9, #0x7
    3650:	b	342c <PyInit__ctypes_test@@Base+0x15c>
    3654:	and	x3, x15, #0xc00000
    3658:	cbz	x3, 3690 <PyInit__ctypes_test@@Base+0x3c0>
    365c:	cmp	x3, #0x400, lsl #12
    3660:	b.eq	3688 <PyInit__ctypes_test@@Base+0x3b8>  // b.none
    3664:	cmp	x3, #0x800, lsl #12
    3668:	csel	w12, w12, wzr, eq  // eq = none
    366c:	cbnz	w12, 3690 <PyInit__ctypes_test@@Base+0x3c0>
    3670:	mov	w1, #0x14                  	// #20
    3674:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
    3678:	orr	w0, w0, w1
    367c:	mov	x8, #0xffffffffffffffff    	// #-1
    3680:	mov	x1, #0x7ffe                	// #32766
    3684:	b	35b0 <PyInit__ctypes_test@@Base+0x2e0>
    3688:	cbnz	x12, 3670 <PyInit__ctypes_test@@Base+0x3a0>
    368c:	nop
    3690:	mov	w1, #0x14                  	// #20
    3694:	and	x16, x7, #0xff
    3698:	orr	w0, w0, w1
    369c:	mov	x4, #0x0                   	// #0
    36a0:	fmov	d0, x4
    36a4:	lsl	x16, x16, #63
    36a8:	orr	x5, x16, #0x7fff000000000000
    36ac:	fmov	v0.d[1], x5
    36b0:	str	q0, [sp, #16]
    36b4:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    36b8:	ldr	q0, [sp, #16]
    36bc:	ldp	x29, x30, [sp], #48
    36c0:	ret
    36c4:	b.eq	3804 <PyInit__ctypes_test@@Base+0x534>  // b.none
    36c8:	cbnz	x8, 3988 <PyInit__ctypes_test@@Base+0x6b8>
    36cc:	orr	x0, x2, x9
    36d0:	cbz	x0, 3bf4 <PyInit__ctypes_test@@Base+0x924>
    36d4:	cmn	w5, #0x1
    36d8:	b.eq	3d54 <PyInit__ctypes_test@@Base+0xa84>  // b.none
    36dc:	mov	x0, #0x7fff                	// #32767
    36e0:	mvn	w5, w5
    36e4:	cmp	x3, x0
    36e8:	b.ne	399c <PyInit__ctypes_test@@Base+0x6cc>  // b.any
    36ec:	orr	x0, x4, x13
    36f0:	cbz	x0, 34d8 <PyInit__ctypes_test@@Base+0x208>
    36f4:	lsr	x5, x4, #50
    36f8:	mov	x9, x13
    36fc:	eor	x5, x5, #0x1
    3700:	mov	x2, x4
    3704:	and	w5, w5, #0x1
    3708:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    370c:	mov	w0, #0x10                  	// #16
    3710:	cbz	x12, 371c <PyInit__ctypes_test@@Base+0x44c>
    3714:	adds	x9, x9, #0x8
    3718:	cinc	x2, x2, cs  // cs = hs, nlast
    371c:	and	x3, x2, #0x8000000000000
    3720:	cbz	w5, 3458 <PyInit__ctypes_test@@Base+0x188>
    3724:	orr	w0, w0, #0x8
    3728:	b	3458 <PyInit__ctypes_test@@Base+0x188>
    372c:	mov	w0, #0x10                  	// #16
    3730:	cbnz	x12, 371c <PyInit__ctypes_test@@Base+0x44c>
    3734:	b	3714 <PyInit__ctypes_test@@Base+0x444>
    3738:	and	x3, x9, #0xf
    373c:	mov	w0, #0x10                  	// #16
    3740:	cmp	x3, #0x4
    3744:	b.eq	371c <PyInit__ctypes_test@@Base+0x44c>  // b.none
    3748:	adds	x9, x9, #0x4
    374c:	cinc	x2, x2, cs  // cs = hs, nlast
    3750:	b	371c <PyInit__ctypes_test@@Base+0x44c>
    3754:	orr	x0, x2, x9
    3758:	cbz	x0, 34d8 <PyInit__ctypes_test@@Base+0x208>
    375c:	lsr	x5, x2, #50
    3760:	eor	x5, x5, #0x1
    3764:	and	w5, w5, #0x1
    3768:	mov	w0, w5
    376c:	mov	x1, #0x7fff                	// #32767
    3770:	mov	x3, #0x7fff                	// #32767
    3774:	extr	x8, x2, x9, #3
    3778:	cmp	x1, x3
    377c:	lsr	x2, x2, #3
    3780:	b.ne	35b0 <PyInit__ctypes_test@@Base+0x2e0>  // b.any
    3784:	orr	x1, x8, x2
    3788:	cbz	x1, 3df4 <PyInit__ctypes_test@@Base+0xb24>
    378c:	orr	x2, x2, #0x800000000000
    3790:	mov	w1, #0x7fff                	// #32767
    3794:	and	x2, x2, #0xffffffffffff
    3798:	b	3478 <PyInit__ctypes_test@@Base+0x1a8>
    379c:	mov	x9, x3
    37a0:	and	x2, x2, #0xfff7ffffffffffff
    37a4:	sub	x1, x1, x4
    37a8:	orr	x8, x9, x2
    37ac:	and	x0, x9, #0x7
    37b0:	mov	w5, #0x0                   	// #0
    37b4:	cbz	x1, 35a0 <PyInit__ctypes_test@@Base+0x2d0>
    37b8:	b	342c <PyInit__ctypes_test@@Base+0x15c>
    37bc:	clz	x2, x9
    37c0:	add	w0, w2, #0x34
    37c4:	cmp	w0, #0x3f
    37c8:	b.le	33c0 <PyInit__ctypes_test@@Base+0xf0>
    37cc:	sub	w2, w2, #0xc
    37d0:	lsl	x2, x9, x2
    37d4:	b	33d4 <PyInit__ctypes_test@@Base+0x104>
    37d8:	orr	x4, x4, x13
    37dc:	cmp	x4, #0x0
    37e0:	cset	x3, ne  // ne = any
    37e4:	b	33a4 <PyInit__ctypes_test@@Base+0xd4>
    37e8:	and	x3, x2, #0x8000000000000
    37ec:	mov	w0, #0x0                   	// #0
    37f0:	cbz	w5, 3458 <PyInit__ctypes_test@@Base+0x188>
    37f4:	mov	w0, #0x0                   	// #0
    37f8:	tbz	w15, #11, 3458 <PyInit__ctypes_test@@Base+0x188>
    37fc:	orr	w0, w0, #0x8
    3800:	b	3458 <PyInit__ctypes_test@@Base+0x188>
    3804:	add	x0, x8, #0x1
    3808:	tst	x0, #0x7ffe
    380c:	b.ne	3a14 <PyInit__ctypes_test@@Base+0x744>  // b.any
    3810:	orr	x0, x2, x9
    3814:	cbnz	x8, 3bd0 <PyInit__ctypes_test@@Base+0x900>
    3818:	orr	x8, x4, x13
    381c:	cbz	x0, 3c24 <PyInit__ctypes_test@@Base+0x954>
    3820:	cbz	x8, 3b10 <PyInit__ctypes_test@@Base+0x840>
    3824:	adds	x9, x9, x13
    3828:	adc	x2, x4, x2
    382c:	tbz	x2, #51, 35fc <PyInit__ctypes_test@@Base+0x32c>
    3830:	and	x2, x2, #0xfff7ffffffffffff
    3834:	and	x0, x9, #0x7
    3838:	mov	x1, #0x1                   	// #1
    383c:	b	342c <PyInit__ctypes_test@@Base+0x15c>
    3840:	mov	x1, #0x7fff                	// #32767
    3844:	neg	w0, w0
    3848:	orr	x2, x2, #0x8000000000000
    384c:	cmp	x3, x1
    3850:	b.eq	34c8 <PyInit__ctypes_test@@Base+0x1f8>  // b.none
    3854:	cmp	w0, #0x74
    3858:	b.gt	3964 <PyInit__ctypes_test@@Base+0x694>
    385c:	cmp	w0, #0x3f
    3860:	b.gt	3b80 <PyInit__ctypes_test@@Base+0x8b0>
    3864:	mov	w1, #0x40                  	// #64
    3868:	sub	w1, w1, w0
    386c:	lsr	x5, x9, x0
    3870:	lsl	x9, x9, x1
    3874:	cmp	x9, #0x0
    3878:	lsl	x9, x2, x1
    387c:	cset	x1, ne  // ne = any
    3880:	orr	x9, x9, x5
    3884:	lsr	x0, x2, x0
    3888:	orr	x9, x9, x1
    388c:	sub	x4, x4, x0
    3890:	b	3970 <PyInit__ctypes_test@@Base+0x6a0>
    3894:	subs	x5, x9, x13
    3898:	cmp	x9, x13
    389c:	sbc	x3, x2, x4
    38a0:	tbnz	x3, #51, 3a3c <PyInit__ctypes_test@@Base+0x76c>
    38a4:	orr	x8, x5, x3
    38a8:	cbnz	x8, 3b68 <PyInit__ctypes_test@@Base+0x898>
    38ac:	and	x15, x15, #0xc00000
    38b0:	mov	x2, #0x0                   	// #0
    38b4:	cmp	x15, #0x800, lsl #12
    38b8:	mov	x1, #0x0                   	// #0
    38bc:	cset	w7, eq  // eq = none
    38c0:	b	35b0 <PyInit__ctypes_test@@Base+0x2e0>
    38c4:	mov	x0, #0x7fff                	// #32767
    38c8:	cmp	x8, x0
    38cc:	b.ne	3590 <PyInit__ctypes_test@@Base+0x2c0>  // b.any
    38d0:	orr	x0, x2, x9
    38d4:	cbnz	x0, 375c <PyInit__ctypes_test@@Base+0x48c>
    38d8:	mov	x2, #0x0                   	// #0
    38dc:	mov	x8, #0x0                   	// #0
    38e0:	mov	w0, #0x0                   	// #0
    38e4:	b	3784 <PyInit__ctypes_test@@Base+0x4b4>
    38e8:	orr	x4, x4, x13
    38ec:	cmp	x4, #0x0
    38f0:	cset	x0, ne  // ne = any
    38f4:	adds	x9, x0, x9
    38f8:	cinc	x2, x2, cs  // cs = hs, nlast
    38fc:	b	3620 <PyInit__ctypes_test@@Base+0x350>
    3900:	mov	w4, #0x80                  	// #128
    3904:	sub	w4, w4, w0
    3908:	cmp	w0, #0x40
    390c:	sub	w9, w1, #0x3f
    3910:	lsl	x0, x2, x4
    3914:	orr	x0, x3, x0
    3918:	csel	x3, x0, x3, ne  // ne = any
    391c:	lsr	x9, x2, x9
    3920:	cmp	x3, #0x0
    3924:	mov	x2, #0x0                   	// #0
    3928:	cset	x0, ne  // ne = any
    392c:	orr	x9, x0, x9
    3930:	mov	x8, x9
    3934:	b	341c <PyInit__ctypes_test@@Base+0x14c>
    3938:	mov	w5, #0x80                  	// #128
    393c:	sub	w5, w5, w0
    3940:	subs	w0, w0, #0x40
    3944:	lsl	x5, x4, x5
    3948:	orr	x5, x13, x5
    394c:	csel	x13, x5, x13, ne  // ne = any
    3950:	lsr	x4, x4, x0
    3954:	cmp	x13, #0x0
    3958:	cset	x3, ne  // ne = any
    395c:	orr	x3, x3, x4
    3960:	b	33a4 <PyInit__ctypes_test@@Base+0xd4>
    3964:	orr	x2, x2, x9
    3968:	cmp	x2, #0x0
    396c:	cset	x9, ne  // ne = any
    3970:	subs	x9, x13, x9
    3974:	mov	w7, w11
    3978:	sbc	x2, x4, xzr
    397c:	mov	x1, x3
    3980:	mov	x12, x14
    3984:	b	33ac <PyInit__ctypes_test@@Base+0xdc>
    3988:	mov	x0, #0x7fff                	// #32767
    398c:	neg	w5, w5
    3990:	orr	x2, x2, #0x8000000000000
    3994:	cmp	x3, x0
    3998:	b.eq	36ec <PyInit__ctypes_test@@Base+0x41c>  // b.none
    399c:	cmp	w5, #0x74
    39a0:	b.gt	3b70 <PyInit__ctypes_test@@Base+0x8a0>
    39a4:	cmp	w5, #0x3f
    39a8:	b.gt	3c30 <PyInit__ctypes_test@@Base+0x960>
    39ac:	mov	w1, #0x40                  	// #64
    39b0:	sub	w1, w1, w5
    39b4:	lsr	x6, x9, x5
    39b8:	lsl	x9, x9, x1
    39bc:	cmp	x9, #0x0
    39c0:	cset	x0, ne  // ne = any
    39c4:	lsl	x9, x2, x1
    39c8:	orr	x9, x9, x6
    39cc:	lsr	x5, x2, x5
    39d0:	orr	x9, x9, x0
    39d4:	add	x4, x4, x5
    39d8:	adds	x9, x9, x13
    39dc:	mov	x1, x3
    39e0:	cinc	x2, x4, cs  // cs = hs, nlast
    39e4:	b	3620 <PyInit__ctypes_test@@Base+0x350>
    39e8:	mov	w0, #0x80                  	// #128
    39ec:	sub	w0, w0, w5
    39f0:	subs	w5, w5, #0x40
    39f4:	lsl	x0, x4, x0
    39f8:	orr	x0, x13, x0
    39fc:	csel	x13, x0, x13, ne  // ne = any
    3a00:	lsr	x4, x4, x5
    3a04:	cmp	x13, #0x0
    3a08:	cset	x0, ne  // ne = any
    3a0c:	orr	x0, x0, x4
    3a10:	b	38f4 <PyInit__ctypes_test@@Base+0x624>
    3a14:	mov	x1, #0x7fff                	// #32767
    3a18:	cmp	x0, x1
    3a1c:	b.eq	3c78 <PyInit__ctypes_test@@Base+0x9a8>  // b.none
    3a20:	adds	x9, x9, x13
    3a24:	mov	x1, x0
    3a28:	adc	x2, x4, x2
    3a2c:	ubfx	x0, x9, #1, #3
    3a30:	extr	x9, x2, x9, #1
    3a34:	lsr	x2, x2, #1
    3a38:	b	342c <PyInit__ctypes_test@@Base+0x15c>
    3a3c:	cmp	x13, x9
    3a40:	mov	w7, w11
    3a44:	sbc	x3, x4, x2
    3a48:	sub	x9, x13, x9
    3a4c:	mov	x12, x14
    3a50:	b	33b4 <PyInit__ctypes_test@@Base+0xe4>
    3a54:	mov	x12, #0x7fff                	// #32767
    3a58:	cmp	x1, x12
    3a5c:	b.eq	3a88 <PyInit__ctypes_test@@Base+0x7b8>  // b.none
    3a60:	cmp	x3, x12
    3a64:	b.eq	3cb8 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3a68:	cbnz	x5, 3aa0 <PyInit__ctypes_test@@Base+0x7d0>
    3a6c:	mov	w5, w0
    3a70:	cbnz	x8, 3d98 <PyInit__ctypes_test@@Base+0xac8>
    3a74:	mov	w7, #0x0                   	// #0
    3a78:	mov	x2, #0xffffffffffff        	// #281474976710655
    3a7c:	mov	w0, #0x1                   	// #1
    3a80:	mov	x8, #0xffffffffffffffff    	// #-1
    3a84:	b	378c <PyInit__ctypes_test@@Base+0x4bc>
    3a88:	cbz	x5, 3db4 <PyInit__ctypes_test@@Base+0xae4>
    3a8c:	lsr	x0, x2, #50
    3a90:	cmp	x3, x1
    3a94:	eor	x0, x0, #0x1
    3a98:	and	w0, w0, #0x1
    3a9c:	b.eq	3cb8 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3aa0:	cbz	x8, 3cd4 <PyInit__ctypes_test@@Base+0xa04>
    3aa4:	bfi	x6, x2, #61, #3
    3aa8:	lsr	x3, x2, #3
    3aac:	tbz	x2, #50, 3ac8 <PyInit__ctypes_test@@Base+0x7f8>
    3ab0:	lsr	x1, x4, #3
    3ab4:	tbnz	x4, #50, 3ac8 <PyInit__ctypes_test@@Base+0x7f8>
    3ab8:	mov	x6, x10
    3abc:	mov	w7, w11
    3ac0:	bfi	x6, x4, #61, #3
    3ac4:	mov	x3, x1
    3ac8:	extr	x2, x3, x6, #61
    3acc:	bfi	x6, x2, #61, #3
    3ad0:	lsr	x2, x2, #3
    3ad4:	mov	x8, x6
    3ad8:	b	3784 <PyInit__ctypes_test@@Base+0x4b4>
    3adc:	mov	x0, #0x7fff                	// #32767
    3ae0:	cmp	x8, x0
    3ae4:	b.ne	3590 <PyInit__ctypes_test@@Base+0x2c0>  // b.any
    3ae8:	orr	x0, x2, x9
    3aec:	cbz	x0, 38d8 <PyInit__ctypes_test@@Base+0x608>
    3af0:	lsr	x5, x2, #50
    3af4:	eor	w5, w5, #0x1
    3af8:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    3afc:	cbz	x8, 3c10 <PyInit__ctypes_test@@Base+0x940>
    3b00:	mov	w7, w11
    3b04:	mov	x2, x4
    3b08:	mov	x9, x13
    3b0c:	mov	x12, x14
    3b10:	mov	x1, #0x0                   	// #0
    3b14:	mov	x3, #0x0                   	// #0
    3b18:	b	37f4 <PyInit__ctypes_test@@Base+0x524>
    3b1c:	ands	x3, x15, #0xc00000
    3b20:	b.eq	3bac <PyInit__ctypes_test@@Base+0x8dc>  // b.none
    3b24:	cmp	x3, #0x400, lsl #12
    3b28:	eor	w0, w7, #0x1
    3b2c:	cset	w1, eq  // eq = none
    3b30:	tst	w1, w0
    3b34:	b.ne	3dd0 <PyInit__ctypes_test@@Base+0xb00>  // b.any
    3b38:	cmp	x3, #0x800, lsl #12
    3b3c:	b.eq	3d7c <PyInit__ctypes_test@@Base+0xaac>  // b.none
    3b40:	cmp	x3, #0x400, lsl #12
    3b44:	mov	w0, #0x14                  	// #20
    3b48:	b.ne	3658 <PyInit__ctypes_test@@Base+0x388>  // b.any
    3b4c:	mov	x2, #0xffffffffffffffff    	// #-1
    3b50:	mov	x1, #0x7ffe                	// #32766
    3b54:	mov	x9, x2
    3b58:	mov	w5, #0x0                   	// #0
    3b5c:	mov	w0, #0x14                  	// #20
    3b60:	cbnz	x12, 371c <PyInit__ctypes_test@@Base+0x44c>
    3b64:	b	3714 <PyInit__ctypes_test@@Base+0x444>
    3b68:	mov	x9, x5
    3b6c:	b	33b4 <PyInit__ctypes_test@@Base+0xe4>
    3b70:	orr	x2, x2, x9
    3b74:	cmp	x2, #0x0
    3b78:	cset	x9, ne  // ne = any
    3b7c:	b	39d8 <PyInit__ctypes_test@@Base+0x708>
    3b80:	mov	w1, #0x80                  	// #128
    3b84:	sub	w1, w1, w0
    3b88:	subs	w0, w0, #0x40
    3b8c:	lsl	x1, x2, x1
    3b90:	orr	x1, x9, x1
    3b94:	csel	x9, x1, x9, ne  // ne = any
    3b98:	lsr	x2, x2, x0
    3b9c:	cmp	x9, #0x0
    3ba0:	cset	x9, ne  // ne = any
    3ba4:	orr	x9, x9, x2
    3ba8:	b	3970 <PyInit__ctypes_test@@Base+0x6a0>
    3bac:	mov	w0, #0x14                  	// #20
    3bb0:	b	369c <PyInit__ctypes_test@@Base+0x3cc>
    3bb4:	lsr	x5, x4, #50
    3bb8:	mov	w7, w11
    3bbc:	eor	x5, x5, #0x1
    3bc0:	mov	x9, x13
    3bc4:	and	w5, w5, #0x1
    3bc8:	mov	x2, x4
    3bcc:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    3bd0:	mov	x8, #0x7fff                	// #32767
    3bd4:	cmp	x1, x8
    3bd8:	b.eq	3cf8 <PyInit__ctypes_test@@Base+0xa28>  // b.none
    3bdc:	cmp	x3, x8
    3be0:	b.eq	3d6c <PyInit__ctypes_test@@Base+0xa9c>  // b.none
    3be4:	cbnz	x0, 3d10 <PyInit__ctypes_test@@Base+0xa40>
    3be8:	mov	x2, x4
    3bec:	mov	x9, x13
    3bf0:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    3bf4:	mov	x0, #0x7fff                	// #32767
    3bf8:	cmp	x3, x0
    3bfc:	b.eq	3da8 <PyInit__ctypes_test@@Base+0xad8>  // b.none
    3c00:	mov	x2, x4
    3c04:	mov	x9, x13
    3c08:	mov	x1, x3
    3c0c:	b	3590 <PyInit__ctypes_test@@Base+0x2c0>
    3c10:	and	x15, x15, #0xc00000
    3c14:	mov	x2, #0x0                   	// #0
    3c18:	cmp	x15, #0x800, lsl #12
    3c1c:	cset	w7, eq  // eq = none
    3c20:	b	35b0 <PyInit__ctypes_test@@Base+0x2e0>
    3c24:	mov	x2, x4
    3c28:	mov	x9, x13
    3c2c:	b	341c <PyInit__ctypes_test@@Base+0x14c>
    3c30:	mov	w0, #0x80                  	// #128
    3c34:	sub	w0, w0, w5
    3c38:	subs	w5, w5, #0x40
    3c3c:	lsl	x0, x2, x0
    3c40:	orr	x0, x9, x0
    3c44:	csel	x9, x0, x9, ne  // ne = any
    3c48:	lsr	x2, x2, x5
    3c4c:	cmp	x9, #0x0
    3c50:	cset	x9, ne  // ne = any
    3c54:	orr	x9, x9, x2
    3c58:	b	39d8 <PyInit__ctypes_test@@Base+0x708>
    3c5c:	cmp	x13, x9
    3c60:	mov	w7, w11
    3c64:	sbc	x2, x4, x2
    3c68:	sub	x9, x13, x9
    3c6c:	mov	x1, x3
    3c70:	mov	x12, x5
    3c74:	b	33ac <PyInit__ctypes_test@@Base+0xdc>
    3c78:	ands	x3, x15, #0xc00000
    3c7c:	b.eq	3bac <PyInit__ctypes_test@@Base+0x8dc>  // b.none
    3c80:	cmp	x3, #0x400, lsl #12
    3c84:	eor	w0, w7, #0x1
    3c88:	csel	w0, w0, wzr, eq  // eq = none
    3c8c:	cbnz	w0, 3dd0 <PyInit__ctypes_test@@Base+0xb00>
    3c90:	cmp	x3, #0x800, lsl #12
    3c94:	b.ne	3b40 <PyInit__ctypes_test@@Base+0x870>  // b.any
    3c98:	cbz	x12, 3d80 <PyInit__ctypes_test@@Base+0xab0>
    3c9c:	mov	w0, #0x14                  	// #20
    3ca0:	mov	x16, #0x1                   	// #1
    3ca4:	b	369c <PyInit__ctypes_test@@Base+0x3cc>
    3ca8:	orr	x0, x4, x13
    3cac:	cbnz	x0, 3bb4 <PyInit__ctypes_test@@Base+0x8e4>
    3cb0:	mov	w7, w11
    3cb4:	b	38d8 <PyInit__ctypes_test@@Base+0x608>
    3cb8:	cbz	x8, 3dc4 <PyInit__ctypes_test@@Base+0xaf4>
    3cbc:	tst	x4, #0x4000000000000
    3cc0:	csinc	w0, w0, wzr, ne  // ne = any
    3cc4:	cbnz	x5, 3aa4 <PyInit__ctypes_test@@Base+0x7d4>
    3cc8:	mov	w7, w11
    3ccc:	mov	x2, x4
    3cd0:	mov	x9, x13
    3cd4:	mov	w5, w0
    3cd8:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    3cdc:	orr	x8, x5, x3
    3ce0:	cbz	x8, 3c10 <PyInit__ctypes_test@@Base+0x940>
    3ce4:	and	x0, x5, #0x7
    3ce8:	mov	x9, x5
    3cec:	mov	x2, x3
    3cf0:	mov	w5, #0x1                   	// #1
    3cf4:	b	342c <PyInit__ctypes_test@@Base+0x15c>
    3cf8:	cbz	x0, 3d64 <PyInit__ctypes_test@@Base+0xa94>
    3cfc:	lsr	x5, x2, #50
    3d00:	cmp	x3, x1
    3d04:	eor	x5, x5, #0x1
    3d08:	and	w5, w5, #0x1
    3d0c:	b.eq	3ddc <PyInit__ctypes_test@@Base+0xb0c>  // b.none
    3d10:	orr	x13, x4, x13
    3d14:	cbz	x13, 3768 <PyInit__ctypes_test@@Base+0x498>
    3d18:	bfi	x6, x2, #61, #3
    3d1c:	lsr	x0, x2, #3
    3d20:	tbz	x2, #50, 3d3c <PyInit__ctypes_test@@Base+0xa6c>
    3d24:	lsr	x1, x4, #3
    3d28:	tbnz	x4, #50, 3d3c <PyInit__ctypes_test@@Base+0xa6c>
    3d2c:	and	x6, x10, #0x1fffffffffffffff
    3d30:	mov	w7, w11
    3d34:	orr	x6, x6, x4, lsl #61
    3d38:	mov	x0, x1
    3d3c:	extr	x2, x0, x6, #61
    3d40:	mov	w0, w5
    3d44:	bfi	x6, x2, #61, #3
    3d48:	lsr	x2, x2, #3
    3d4c:	mov	x8, x6
    3d50:	b	3784 <PyInit__ctypes_test@@Base+0x4b4>
    3d54:	adds	x9, x9, x13
    3d58:	mov	x1, x3
    3d5c:	adc	x2, x4, x2
    3d60:	b	3620 <PyInit__ctypes_test@@Base+0x350>
    3d64:	cmp	x3, x1
    3d68:	b.ne	3be8 <PyInit__ctypes_test@@Base+0x918>  // b.any
    3d6c:	orr	x1, x4, x13
    3d70:	cbnz	x1, 3de4 <PyInit__ctypes_test@@Base+0xb14>
    3d74:	cbz	x0, 38d8 <PyInit__ctypes_test@@Base+0x608>
    3d78:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    3d7c:	cbnz	x16, 3c9c <PyInit__ctypes_test@@Base+0x9cc>
    3d80:	mov	x2, #0xffffffffffffffff    	// #-1
    3d84:	mov	w7, #0x0                   	// #0
    3d88:	mov	x9, x2
    3d8c:	mov	x1, #0x7ffe                	// #32766
    3d90:	mov	w0, #0x14                  	// #20
    3d94:	b	345c <PyInit__ctypes_test@@Base+0x18c>
    3d98:	mov	w7, w11
    3d9c:	mov	x2, x4
    3da0:	mov	x9, x13
    3da4:	b	3768 <PyInit__ctypes_test@@Base+0x498>
    3da8:	orr	x0, x4, x13
    3dac:	cbz	x0, 38d8 <PyInit__ctypes_test@@Base+0x608>
    3db0:	b	36f4 <PyInit__ctypes_test@@Base+0x424>
    3db4:	cmp	x3, x1
    3db8:	b.eq	3cb8 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3dbc:	mov	w5, #0x0                   	// #0
    3dc0:	b	3a70 <PyInit__ctypes_test@@Base+0x7a0>
    3dc4:	cbnz	x5, 3cd4 <PyInit__ctypes_test@@Base+0xa04>
    3dc8:	mov	w5, w0
    3dcc:	b	3a70 <PyInit__ctypes_test@@Base+0x7a0>
    3dd0:	mov	w0, #0x14                  	// #20
    3dd4:	mov	x16, #0x0                   	// #0
    3dd8:	b	369c <PyInit__ctypes_test@@Base+0x3cc>
    3ddc:	orr	x1, x4, x13
    3de0:	cbz	x1, 3768 <PyInit__ctypes_test@@Base+0x498>
    3de4:	tst	x4, #0x4000000000000
    3de8:	csinc	w5, w5, wzr, ne  // ne = any
    3dec:	cbnz	x0, 3d18 <PyInit__ctypes_test@@Base+0xa48>
    3df0:	b	3be8 <PyInit__ctypes_test@@Base+0x918>
    3df4:	mov	x8, #0x0                   	// #0
    3df8:	mov	w1, #0x7fff                	// #32767
    3dfc:	mov	x2, #0x0                   	// #0
    3e00:	b	3478 <PyInit__ctypes_test@@Base+0x1a8>
    3e04:	nop
    3e08:	stp	x29, x30, [sp, #-48]!
    3e0c:	mov	x29, sp
    3e10:	str	q0, [sp, #16]
    3e14:	str	q1, [sp, #32]
    3e18:	ldp	x2, x0, [sp, #16]
    3e1c:	ldp	x5, x3, [sp, #32]
    3e20:	mrs	x10, fpcr
    3e24:	lsr	x1, x0, #63
    3e28:	ubfx	x6, x0, #0, #48
    3e2c:	and	w13, w1, #0xff
    3e30:	mov	x14, x1
    3e34:	ubfx	x7, x0, #48, #15
    3e38:	cbz	w7, 4258 <PyInit__ctypes_test@@Base+0xf88>
    3e3c:	mov	w4, #0x7fff                	// #32767
    3e40:	cmp	w7, w4
    3e44:	b.eq	42a0 <PyInit__ctypes_test@@Base+0xfd0>  // b.none
    3e48:	and	x7, x7, #0xffff
    3e4c:	extr	x6, x6, x2, #61
    3e50:	mov	x15, #0xffffffffffffc001    	// #-16383
    3e54:	orr	x4, x6, #0x8000000000000
    3e58:	add	x7, x7, x15
    3e5c:	lsl	x2, x2, #3
    3e60:	mov	x1, #0x0                   	// #0
    3e64:	mov	x16, #0x0                   	// #0
    3e68:	mov	w0, #0x0                   	// #0
    3e6c:	lsr	x8, x3, #63
    3e70:	ubfx	x6, x3, #0, #48
    3e74:	and	w15, w8, #0xff
    3e78:	ubfx	x9, x3, #48, #15
    3e7c:	cbz	w9, 4214 <PyInit__ctypes_test@@Base+0xf44>
    3e80:	mov	w11, #0x7fff                	// #32767
    3e84:	cmp	w9, w11
    3e88:	b.eq	3f4c <PyInit__ctypes_test@@Base+0xc7c>  // b.none
    3e8c:	and	x9, x9, #0xffff
    3e90:	extr	x6, x6, x5, #61
    3e94:	mov	x12, #0xffffffffffffc001    	// #-16383
    3e98:	orr	x6, x6, #0x8000000000000
    3e9c:	add	x9, x9, x12
    3ea0:	lsl	x5, x5, #3
    3ea4:	sub	x7, x7, x9
    3ea8:	mov	x9, #0x0                   	// #0
    3eac:	eor	w11, w13, w15
    3eb0:	cmp	x1, #0x9
    3eb4:	and	x3, x11, #0xff
    3eb8:	mov	x12, x3
    3ebc:	b.gt	41ec <PyInit__ctypes_test@@Base+0xf1c>
    3ec0:	cmp	x1, #0x7
    3ec4:	b.gt	43ac <PyInit__ctypes_test@@Base+0x10dc>
    3ec8:	cmp	x1, #0x3
    3ecc:	b.eq	3ee8 <PyInit__ctypes_test@@Base+0xc18>  // b.none
    3ed0:	b.le	41bc <PyInit__ctypes_test@@Base+0xeec>
    3ed4:	cmp	x1, #0x5
    3ed8:	b.eq	41fc <PyInit__ctypes_test@@Base+0xf2c>  // b.none
    3edc:	b.le	3fe0 <PyInit__ctypes_test@@Base+0xd10>
    3ee0:	cmp	x1, #0x6
    3ee4:	b.eq	3fb0 <PyInit__ctypes_test@@Base+0xce0>  // b.none
    3ee8:	cmp	x9, #0x1
    3eec:	b.eq	4330 <PyInit__ctypes_test@@Base+0x1060>  // b.none
    3ef0:	cbz	x9, 3f04 <PyInit__ctypes_test@@Base+0xc34>
    3ef4:	cmp	x9, #0x2
    3ef8:	b.eq	4534 <PyInit__ctypes_test@@Base+0x1264>  // b.none
    3efc:	cmp	x9, #0x3
    3f00:	b.eq	451c <PyInit__ctypes_test@@Base+0x124c>  // b.none
    3f04:	mov	x1, #0x3fff                	// #16383
    3f08:	mov	x12, x8
    3f0c:	add	x3, x7, x1
    3f10:	cmp	x3, #0x0
    3f14:	b.le	43f0 <PyInit__ctypes_test@@Base+0x1120>
    3f18:	tst	x5, #0x7
    3f1c:	b.ne	4360 <PyInit__ctypes_test@@Base+0x1090>  // b.any
    3f20:	and	w11, w12, #0x1
    3f24:	tbz	x6, #52, 3f30 <PyInit__ctypes_test@@Base+0xc60>
    3f28:	and	x6, x6, #0xffefffffffffffff
    3f2c:	add	x3, x7, #0x4, lsl #12
    3f30:	mov	x1, #0x7ffe                	// #32766
    3f34:	cmp	x3, x1
    3f38:	b.gt	44d8 <PyInit__ctypes_test@@Base+0x1208>
    3f3c:	and	w1, w3, #0x7fff
    3f40:	extr	x2, x6, x5, #3
    3f44:	ubfx	x6, x6, #3, #48
    3f48:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    3f4c:	mov	x9, #0xffffffffffff8001    	// #-32767
    3f50:	orr	x3, x6, x5
    3f54:	add	x7, x7, x9
    3f58:	cbz	x3, 42d4 <PyInit__ctypes_test@@Base+0x1004>
    3f5c:	tst	x6, #0x800000000000
    3f60:	orr	x1, x1, #0x3
    3f64:	csinc	w0, w0, wzr, ne  // ne = any
    3f68:	mov	x9, #0x3                   	// #3
    3f6c:	eor	w11, w13, w15
    3f70:	cmp	x1, #0x9
    3f74:	and	x3, x11, #0xff
    3f78:	mov	x12, x3
    3f7c:	b.le	3ec0 <PyInit__ctypes_test@@Base+0xbf0>
    3f80:	cmp	x1, #0xf
    3f84:	b.ne	41ec <PyInit__ctypes_test@@Base+0xf1c>  // b.any
    3f88:	tbz	x4, #47, 4398 <PyInit__ctypes_test@@Base+0x10c8>
    3f8c:	tbnz	x6, #47, 4398 <PyInit__ctypes_test@@Base+0x10c8>
    3f90:	orr	x6, x6, #0x800000000000
    3f94:	mov	w11, w15
    3f98:	and	x6, x6, #0xffffffffffff
    3f9c:	mov	x2, x5
    3fa0:	mov	w1, #0x7fff                	// #32767
    3fa4:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    3fa8:	cmp	x1, #0x2
    3fac:	b.ne	3fe8 <PyInit__ctypes_test@@Base+0xd18>  // b.any
    3fb0:	mov	w1, #0x0                   	// #0
    3fb4:	mov	x6, #0x0                   	// #0
    3fb8:	mov	x2, #0x0                   	// #0
    3fbc:	mov	x5, #0x0                   	// #0
    3fc0:	orr	w1, w1, w11, lsl #15
    3fc4:	bfxil	x5, x6, #0, #48
    3fc8:	fmov	d0, x2
    3fcc:	bfi	x5, x1, #48, #16
    3fd0:	fmov	v0.d[1], x5
    3fd4:	cbnz	w0, 41dc <PyInit__ctypes_test@@Base+0xf0c>
    3fd8:	ldp	x29, x30, [sp], #48
    3fdc:	ret
    3fe0:	cmp	x1, #0x4
    3fe4:	b.eq	3fb0 <PyInit__ctypes_test@@Base+0xce0>  // b.none
    3fe8:	cmp	x4, x6
    3fec:	b.ls	4344 <PyInit__ctypes_test@@Base+0x1074>  // b.plast
    3ff0:	lsr	x3, x4, #1
    3ff4:	extr	x8, x4, x2, #1
    3ff8:	lsl	x2, x2, #63
    3ffc:	ubfx	x14, x6, #20, #32
    4000:	extr	x9, x6, x5, #52
    4004:	lsl	x13, x5, #12
    4008:	and	x15, x9, #0xffffffff
    400c:	udiv	x5, x3, x14
    4010:	msub	x3, x5, x14, x3
    4014:	mul	x1, x15, x5
    4018:	extr	x3, x3, x8, #32
    401c:	cmp	x1, x3
    4020:	b.ls	4034 <PyInit__ctypes_test@@Base+0xd64>  // b.plast
    4024:	adds	x3, x9, x3
    4028:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    402c:	b.hi	4614 <PyInit__ctypes_test@@Base+0x1344>  // b.pmore
    4030:	sub	x5, x5, #0x1
    4034:	sub	x3, x3, x1
    4038:	mov	x4, x8
    403c:	udiv	x1, x3, x14
    4040:	msub	x3, x1, x14, x3
    4044:	mul	x6, x15, x1
    4048:	bfi	x4, x3, #32, #32
    404c:	cmp	x6, x4
    4050:	b.ls	4064 <PyInit__ctypes_test@@Base+0xd94>  // b.plast
    4054:	adds	x4, x9, x4
    4058:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
    405c:	b.hi	4608 <PyInit__ctypes_test@@Base+0x1338>  // b.pmore
    4060:	sub	x1, x1, #0x1
    4064:	orr	x8, x1, x5, lsl #32
    4068:	and	x17, x13, #0xffffffff
    406c:	and	x1, x8, #0xffffffff
    4070:	lsr	x16, x13, #32
    4074:	lsr	x5, x8, #32
    4078:	sub	x4, x4, x6
    407c:	mov	x18, #0x100000000           	// #4294967296
    4080:	mul	x3, x1, x17
    4084:	mul	x30, x5, x17
    4088:	madd	x6, x16, x1, x30
    408c:	and	x1, x3, #0xffffffff
    4090:	mul	x5, x5, x16
    4094:	add	x3, x6, x3, lsr #32
    4098:	add	x6, x5, x18
    409c:	cmp	x30, x3
    40a0:	csel	x5, x6, x5, hi  // hi = pmore
    40a4:	add	x1, x1, x3, lsl #32
    40a8:	add	x5, x5, x3, lsr #32
    40ac:	cmp	x4, x5
    40b0:	b.cc	43bc <PyInit__ctypes_test@@Base+0x10ec>  // b.lo, b.ul, b.last
    40b4:	ccmp	x2, x1, #0x2, eq  // eq = none
    40b8:	mov	x6, x8
    40bc:	b.cc	43bc <PyInit__ctypes_test@@Base+0x10ec>  // b.lo, b.ul, b.last
    40c0:	subs	x8, x2, x1
    40c4:	mov	x3, #0x3fff                	// #16383
    40c8:	cmp	x2, x1
    40cc:	add	x3, x7, x3
    40d0:	sbc	x4, x4, x5
    40d4:	cmp	x9, x4
    40d8:	b.eq	4620 <PyInit__ctypes_test@@Base+0x1350>  // b.none
    40dc:	udiv	x5, x4, x14
    40e0:	msub	x4, x5, x14, x4
    40e4:	mul	x2, x15, x5
    40e8:	extr	x1, x4, x8, #32
    40ec:	cmp	x2, x1
    40f0:	b.ls	4104 <PyInit__ctypes_test@@Base+0xe34>  // b.plast
    40f4:	adds	x1, x9, x1
    40f8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    40fc:	b.hi	46d8 <PyInit__ctypes_test@@Base+0x1408>  // b.pmore
    4100:	sub	x5, x5, #0x1
    4104:	sub	x1, x1, x2
    4108:	udiv	x2, x1, x14
    410c:	msub	x1, x2, x14, x1
    4110:	mul	x15, x15, x2
    4114:	bfi	x8, x1, #32, #32
    4118:	mov	x1, x8
    411c:	cmp	x15, x8
    4120:	b.ls	4134 <PyInit__ctypes_test@@Base+0xe64>  // b.plast
    4124:	adds	x1, x9, x8
    4128:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
    412c:	b.hi	46e4 <PyInit__ctypes_test@@Base+0x1414>  // b.pmore
    4130:	sub	x2, x2, #0x1
    4134:	orr	x5, x2, x5, lsl #32
    4138:	mov	x11, #0x100000000           	// #4294967296
    413c:	and	x4, x5, #0xffffffff
    4140:	sub	x1, x1, x15
    4144:	lsr	x14, x5, #32
    4148:	mul	x2, x17, x4
    414c:	mul	x17, x14, x17
    4150:	madd	x4, x16, x4, x17
    4154:	and	x8, x2, #0xffffffff
    4158:	mul	x16, x16, x14
    415c:	add	x2, x4, x2, lsr #32
    4160:	add	x4, x16, x11
    4164:	cmp	x17, x2
    4168:	csel	x16, x4, x16, hi  // hi = pmore
    416c:	add	x4, x8, x2, lsl #32
    4170:	add	x16, x16, x2, lsr #32
    4174:	cmp	x1, x16
    4178:	b.cs	4558 <PyInit__ctypes_test@@Base+0x1288>  // b.hs, b.nlast
    417c:	adds	x2, x9, x1
    4180:	sub	x8, x5, #0x1
    4184:	mov	x1, x2
    4188:	b.cs	419c <PyInit__ctypes_test@@Base+0xecc>  // b.hs, b.nlast
    418c:	cmp	x2, x16
    4190:	b.cc	4658 <PyInit__ctypes_test@@Base+0x1388>  // b.lo, b.ul, b.last
    4194:	ccmp	x13, x4, #0x2, eq  // eq = none
    4198:	b.cc	4658 <PyInit__ctypes_test@@Base+0x1388>  // b.lo, b.ul, b.last
    419c:	cmp	x13, x4
    41a0:	mov	x5, x8
    41a4:	cset	w2, ne  // ne = any
    41a8:	cmp	w2, #0x0
    41ac:	orr	x2, x5, #0x1
    41b0:	ccmp	x1, x16, #0x0, eq  // eq = none
    41b4:	csel	x5, x2, x5, ne  // ne = any
    41b8:	b	3f10 <PyInit__ctypes_test@@Base+0xc40>
    41bc:	cmp	x1, #0x1
    41c0:	b.ne	3fa8 <PyInit__ctypes_test@@Base+0xcd8>  // b.any
    41c4:	mov	x4, #0x0                   	// #0
    41c8:	fmov	d0, x4
    41cc:	lsl	x3, x3, #63
    41d0:	orr	w0, w0, #0x2
    41d4:	orr	x5, x3, #0x7fff000000000000
    41d8:	fmov	v0.d[1], x5
    41dc:	str	q0, [sp, #16]
    41e0:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    41e4:	ldr	q0, [sp, #16]
    41e8:	b	3fd8 <PyInit__ctypes_test@@Base+0xd08>
    41ec:	cmp	x1, #0xb
    41f0:	b.gt	42c0 <PyInit__ctypes_test@@Base+0xff0>
    41f4:	cmp	x1, #0xa
    41f8:	b.ne	3ee8 <PyInit__ctypes_test@@Base+0xc18>  // b.any
    41fc:	mov	w11, #0x0                   	// #0
    4200:	mov	x6, #0xffffffffffff        	// #281474976710655
    4204:	mov	x2, #0xffffffffffffffff    	// #-1
    4208:	mov	w0, #0x1                   	// #1
    420c:	mov	w1, #0x7fff                	// #32767
    4210:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    4214:	orr	x3, x6, x5
    4218:	cbz	x3, 4300 <PyInit__ctypes_test@@Base+0x1030>
    421c:	cbz	x6, 44b4 <PyInit__ctypes_test@@Base+0x11e4>
    4220:	clz	x3, x6
    4224:	sub	x9, x3, #0xf
    4228:	add	w12, w9, #0x3
    422c:	mov	w11, #0x3d                  	// #61
    4230:	sub	w9, w11, w9
    4234:	lsl	x6, x6, x12
    4238:	lsr	x9, x5, x9
    423c:	orr	x6, x9, x6
    4240:	lsl	x5, x5, x12
    4244:	add	x7, x3, x7
    4248:	mov	x11, #0x3fef                	// #16367
    424c:	mov	x9, #0x0                   	// #0
    4250:	add	x7, x7, x11
    4254:	b	3eac <PyInit__ctypes_test@@Base+0xbdc>
    4258:	orr	x4, x6, x2
    425c:	cbz	x4, 42e8 <PyInit__ctypes_test@@Base+0x1018>
    4260:	cbz	x6, 4490 <PyInit__ctypes_test@@Base+0x11c0>
    4264:	clz	x0, x6
    4268:	sub	x4, x0, #0xf
    426c:	add	w7, w4, #0x3
    4270:	mov	w1, #0x3d                  	// #61
    4274:	sub	w4, w1, w4
    4278:	lsl	x6, x6, x7
    427c:	lsr	x4, x2, x4
    4280:	orr	x4, x4, x6
    4284:	lsl	x2, x2, x7
    4288:	mov	x7, #0xffffffffffffc011    	// #-16367
    428c:	mov	x1, #0x0                   	// #0
    4290:	sub	x7, x7, x0
    4294:	mov	x16, #0x0                   	// #0
    4298:	mov	w0, #0x0                   	// #0
    429c:	b	3e6c <PyInit__ctypes_test@@Base+0xb9c>
    42a0:	orr	x4, x6, x2
    42a4:	cbnz	x4, 4314 <PyInit__ctypes_test@@Base+0x1044>
    42a8:	mov	x2, #0x0                   	// #0
    42ac:	mov	x1, #0x8                   	// #8
    42b0:	mov	x7, #0x7fff                	// #32767
    42b4:	mov	x16, #0x2                   	// #2
    42b8:	mov	w0, #0x0                   	// #0
    42bc:	b	3e6c <PyInit__ctypes_test@@Base+0xb9c>
    42c0:	mov	x6, x4
    42c4:	mov	x5, x2
    42c8:	mov	x8, x14
    42cc:	mov	x9, x16
    42d0:	b	3ee8 <PyInit__ctypes_test@@Base+0xc18>
    42d4:	orr	x1, x1, #0x2
    42d8:	mov	x6, #0x0                   	// #0
    42dc:	mov	x5, #0x0                   	// #0
    42e0:	mov	x9, #0x2                   	// #2
    42e4:	b	3f6c <PyInit__ctypes_test@@Base+0xc9c>
    42e8:	mov	x2, #0x0                   	// #0
    42ec:	mov	x1, #0x4                   	// #4
    42f0:	mov	x7, #0x0                   	// #0
    42f4:	mov	x16, #0x1                   	// #1
    42f8:	mov	w0, #0x0                   	// #0
    42fc:	b	3e6c <PyInit__ctypes_test@@Base+0xb9c>
    4300:	orr	x1, x1, #0x1
    4304:	mov	x6, #0x0                   	// #0
    4308:	mov	x5, #0x0                   	// #0
    430c:	mov	x9, #0x1                   	// #1
    4310:	b	3eac <PyInit__ctypes_test@@Base+0xbdc>
    4314:	lsr	x0, x6, #47
    4318:	mov	x4, x6
    431c:	eor	w0, w0, #0x1
    4320:	mov	x1, #0xc                   	// #12
    4324:	mov	x7, #0x7fff                	// #32767
    4328:	mov	x16, #0x3                   	// #3
    432c:	b	3e6c <PyInit__ctypes_test@@Base+0xb9c>
    4330:	mov	w11, w8
    4334:	mov	w1, #0x0                   	// #0
    4338:	mov	x6, #0x0                   	// #0
    433c:	mov	x2, #0x0                   	// #0
    4340:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    4344:	ccmp	x5, x2, #0x2, eq  // eq = none
    4348:	b.ls	3ff0 <PyInit__ctypes_test@@Base+0xd20>  // b.plast
    434c:	mov	x8, x2
    4350:	sub	x7, x7, #0x1
    4354:	mov	x3, x4
    4358:	mov	x2, #0x0                   	// #0
    435c:	b	3ffc <PyInit__ctypes_test@@Base+0xd2c>
    4360:	and	x1, x10, #0xc00000
    4364:	orr	w0, w0, #0x10
    4368:	cmp	x1, #0x400, lsl #12
    436c:	b.eq	46c0 <PyInit__ctypes_test@@Base+0x13f0>  // b.none
    4370:	cmp	x1, #0x800, lsl #12
    4374:	b.eq	45d4 <PyInit__ctypes_test@@Base+0x1304>  // b.none
    4378:	cbnz	x1, 3f20 <PyInit__ctypes_test@@Base+0xc50>
    437c:	and	x1, x5, #0xf
    4380:	and	w11, w12, #0x1
    4384:	cmp	x1, #0x4
    4388:	b.eq	3f24 <PyInit__ctypes_test@@Base+0xc54>  // b.none
    438c:	adds	x5, x5, #0x4
    4390:	cinc	x6, x6, cs  // cs = hs, nlast
    4394:	b	3f24 <PyInit__ctypes_test@@Base+0xc54>
    4398:	orr	x6, x4, #0x800000000000
    439c:	mov	w11, w13
    43a0:	and	x6, x6, #0xffffffffffff
    43a4:	mov	w1, #0x7fff                	// #32767
    43a8:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    43ac:	mov	w1, #0x7fff                	// #32767
    43b0:	mov	x6, #0x0                   	// #0
    43b4:	mov	x2, #0x0                   	// #0
    43b8:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    43bc:	adds	x3, x2, x13
    43c0:	sub	x6, x8, #0x1
    43c4:	adc	x4, x4, x9
    43c8:	cset	x18, cs  // cs = hs, nlast
    43cc:	mov	x2, x3
    43d0:	cmp	x9, x4
    43d4:	b.cs	4548 <PyInit__ctypes_test@@Base+0x1278>  // b.hs, b.nlast
    43d8:	cmp	x5, x4
    43dc:	b.ls	4570 <PyInit__ctypes_test@@Base+0x12a0>  // b.plast
    43e0:	adds	x2, x13, x3
    43e4:	sub	x6, x8, #0x2
    43e8:	adc	x4, x4, x9
    43ec:	b	40c0 <PyInit__ctypes_test@@Base+0xdf0>
    43f0:	mov	x1, #0x1                   	// #1
    43f4:	sub	x1, x1, x3
    43f8:	cmp	x1, #0x74
    43fc:	and	w11, w12, #0x1
    4400:	b.le	441c <PyInit__ctypes_test@@Base+0x114c>
    4404:	orr	x2, x5, x6
    4408:	cbnz	x2, 463c <PyInit__ctypes_test@@Base+0x136c>
    440c:	orr	w0, w0, #0x8
    4410:	mov	w1, #0x0                   	// #0
    4414:	mov	x6, #0x0                   	// #0
    4418:	b	4500 <PyInit__ctypes_test@@Base+0x1230>
    441c:	cmp	x1, #0x3f
    4420:	b.le	457c <PyInit__ctypes_test@@Base+0x12ac>
    4424:	mov	w2, #0x80                  	// #128
    4428:	sub	w2, w2, w1
    442c:	cmp	x1, #0x40
    4430:	sub	w1, w1, #0x40
    4434:	lsl	x2, x6, x2
    4438:	orr	x2, x5, x2
    443c:	csel	x5, x2, x5, ne  // ne = any
    4440:	lsr	x6, x6, x1
    4444:	cmp	x5, #0x0
    4448:	cset	x2, ne  // ne = any
    444c:	orr	x2, x2, x6
    4450:	ands	x6, x2, #0x7
    4454:	b.eq	45b0 <PyInit__ctypes_test@@Base+0x12e0>  // b.none
    4458:	mov	x6, #0x0                   	// #0
    445c:	and	x10, x10, #0xc00000
    4460:	orr	w0, w0, #0x10
    4464:	cmp	x10, #0x400, lsl #12
    4468:	b.eq	46fc <PyInit__ctypes_test@@Base+0x142c>  // b.none
    446c:	cmp	x10, #0x800, lsl #12
    4470:	b.eq	4710 <PyInit__ctypes_test@@Base+0x1440>  // b.none
    4474:	cbz	x10, 4678 <PyInit__ctypes_test@@Base+0x13a8>
    4478:	tbnz	x6, #51, 4690 <PyInit__ctypes_test@@Base+0x13c0>
    447c:	orr	w0, w0, #0x8
    4480:	extr	x2, x6, x2, #3
    4484:	mov	w1, #0x0                   	// #0
    4488:	ubfx	x6, x6, #3, #48
    448c:	b	4500 <PyInit__ctypes_test@@Base+0x1230>
    4490:	clz	x7, x2
    4494:	add	x4, x7, #0x31
    4498:	add	x0, x7, #0x40
    449c:	cmp	x4, #0x3c
    44a0:	b.le	426c <PyInit__ctypes_test@@Base+0xf9c>
    44a4:	sub	w4, w4, #0x3d
    44a8:	lsl	x4, x2, x4
    44ac:	mov	x2, #0x0                   	// #0
    44b0:	b	4288 <PyInit__ctypes_test@@Base+0xfb8>
    44b4:	clz	x3, x5
    44b8:	add	x9, x3, #0x31
    44bc:	add	x3, x3, #0x40
    44c0:	cmp	x9, #0x3c
    44c4:	b.le	4228 <PyInit__ctypes_test@@Base+0xf58>
    44c8:	sub	w6, w9, #0x3d
    44cc:	lsl	x6, x5, x6
    44d0:	mov	x5, #0x0                   	// #0
    44d4:	b	4244 <PyInit__ctypes_test@@Base+0xf74>
    44d8:	and	x2, x10, #0xc00000
    44dc:	cmp	x2, #0x400, lsl #12
    44e0:	b.eq	46a4 <PyInit__ctypes_test@@Base+0x13d4>  // b.none
    44e4:	cmp	x2, #0x800, lsl #12
    44e8:	b.eq	45ec <PyInit__ctypes_test@@Base+0x131c>  // b.none
    44ec:	cbz	x2, 45c8 <PyInit__ctypes_test@@Base+0x12f8>
    44f0:	mov	x6, #0xffffffffffff        	// #281474976710655
    44f4:	mov	x2, #0xffffffffffffffff    	// #-1
    44f8:	mov	w3, #0x14                  	// #20
    44fc:	orr	w0, w0, w3
    4500:	mov	x5, #0x0                   	// #0
    4504:	orr	w1, w1, w11, lsl #15
    4508:	bfxil	x5, x6, #0, #48
    450c:	fmov	d0, x2
    4510:	bfi	x5, x1, #48, #16
    4514:	fmov	v0.d[1], x5
    4518:	b	41dc <PyInit__ctypes_test@@Base+0xf0c>
    451c:	orr	x6, x6, #0x800000000000
    4520:	mov	w11, w8
    4524:	and	x6, x6, #0xffffffffffff
    4528:	mov	x2, x5
    452c:	mov	w1, #0x7fff                	// #32767
    4530:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    4534:	mov	w11, w8
    4538:	mov	w1, #0x7fff                	// #32767
    453c:	mov	x6, #0x0                   	// #0
    4540:	mov	x2, #0x0                   	// #0
    4544:	b	3fbc <PyInit__ctypes_test@@Base+0xcec>
    4548:	cmp	x18, #0x0
    454c:	ccmp	x9, x4, #0x0, eq  // eq = none
    4550:	b.ne	40c0 <PyInit__ctypes_test@@Base+0xdf0>  // b.any
    4554:	b	43d8 <PyInit__ctypes_test@@Base+0x1108>
    4558:	cmp	x4, #0x0
    455c:	cset	w2, ne  // ne = any
    4560:	cmp	w2, #0x0
    4564:	ccmp	x1, x16, #0x0, ne  // ne = any
    4568:	b.ne	41a8 <PyInit__ctypes_test@@Base+0xed8>  // b.any
    456c:	b	417c <PyInit__ctypes_test@@Base+0xeac>
    4570:	ccmp	x1, x3, #0x0, eq  // eq = none
    4574:	b.ls	40c0 <PyInit__ctypes_test@@Base+0xdf0>  // b.plast
    4578:	b	43e0 <PyInit__ctypes_test@@Base+0x1110>
    457c:	mov	w2, #0x40                  	// #64
    4580:	sub	w2, w2, w1
    4584:	lsr	x4, x5, x1
    4588:	lsl	x5, x5, x2
    458c:	cmp	x5, #0x0
    4590:	cset	x3, ne  // ne = any
    4594:	lsl	x2, x6, x2
    4598:	orr	x2, x2, x4
    459c:	lsr	x6, x6, x1
    45a0:	orr	x2, x2, x3
    45a4:	tst	x2, #0x7
    45a8:	b.ne	445c <PyInit__ctypes_test@@Base+0x118c>  // b.any
    45ac:	tbnz	x6, #51, 471c <PyInit__ctypes_test@@Base+0x144c>
    45b0:	mov	w1, #0x0                   	// #0
    45b4:	extr	x2, x6, x2, #3
    45b8:	ubfx	x6, x6, #3, #48
    45bc:	tbz	w10, #11, 3fbc <PyInit__ctypes_test@@Base+0xcec>
    45c0:	orr	w0, w0, #0x8
    45c4:	b	4500 <PyInit__ctypes_test@@Base+0x1230>
    45c8:	mov	w1, #0x7fff                	// #32767
    45cc:	mov	x6, #0x0                   	// #0
    45d0:	b	44f8 <PyInit__ctypes_test@@Base+0x1228>
    45d4:	mov	w11, #0x0                   	// #0
    45d8:	cbz	x12, 3f24 <PyInit__ctypes_test@@Base+0xc54>
    45dc:	adds	x5, x5, #0x8
    45e0:	mov	w11, #0x1                   	// #1
    45e4:	cinc	x6, x6, cs  // cs = hs, nlast
    45e8:	b	3f24 <PyInit__ctypes_test@@Base+0xc54>
    45ec:	cmp	x12, #0x0
    45f0:	mov	w2, #0x7fff                	// #32767
    45f4:	mov	x6, #0xffffffffffff        	// #281474976710655
    45f8:	csel	w1, w1, w2, eq  // eq = none
    45fc:	csel	x6, x6, xzr, eq  // eq = none
    4600:	csetm	x2, eq  // eq = none
    4604:	b	44f8 <PyInit__ctypes_test@@Base+0x1228>
    4608:	sub	x1, x1, #0x2
    460c:	add	x4, x4, x9
    4610:	b	4064 <PyInit__ctypes_test@@Base+0xd94>
    4614:	sub	x5, x5, #0x2
    4618:	add	x3, x3, x9
    461c:	b	4034 <PyInit__ctypes_test@@Base+0xd64>
    4620:	cmp	x3, #0x0
    4624:	mov	x5, #0xffffffffffffffff    	// #-1
    4628:	b.gt	4360 <PyInit__ctypes_test@@Base+0x1090>
    462c:	mov	x1, #0x1                   	// #1
    4630:	sub	x1, x1, x3
    4634:	cmp	x1, #0x74
    4638:	b.le	441c <PyInit__ctypes_test@@Base+0x114c>
    463c:	and	x10, x10, #0xc00000
    4640:	orr	w0, w0, #0x10
    4644:	cmp	x10, #0x400, lsl #12
    4648:	b.eq	46f0 <PyInit__ctypes_test@@Base+0x1420>  // b.none
    464c:	cmp	x10, #0x800, lsl #12
    4650:	csel	x2, x12, xzr, eq  // eq = none
    4654:	b	440c <PyInit__ctypes_test@@Base+0x113c>
    4658:	lsl	x8, x13, #1
    465c:	sub	x5, x5, #0x2
    4660:	cmp	x13, x8
    4664:	cinc	x1, x9, hi  // hi = pmore
    4668:	cmp	x4, x8
    466c:	add	x1, x2, x1
    4670:	cset	w2, ne  // ne = any
    4674:	b	41a8 <PyInit__ctypes_test@@Base+0xed8>
    4678:	and	x1, x2, #0xf
    467c:	cmp	x1, #0x4
    4680:	b.eq	468c <PyInit__ctypes_test@@Base+0x13bc>  // b.none
    4684:	adds	x2, x2, #0x4
    4688:	cinc	x6, x6, cs  // cs = hs, nlast
    468c:	tbz	x6, #51, 447c <PyInit__ctypes_test@@Base+0x11ac>
    4690:	orr	w0, w0, #0x8
    4694:	mov	w1, #0x1                   	// #1
    4698:	mov	x6, #0x0                   	// #0
    469c:	mov	x2, #0x0                   	// #0
    46a0:	b	4500 <PyInit__ctypes_test@@Base+0x1230>
    46a4:	cmp	x12, #0x0
    46a8:	mov	w2, #0x7fff                	// #32767
    46ac:	mov	x6, #0xffffffffffff        	// #281474976710655
    46b0:	csel	w1, w1, w2, ne  // ne = any
    46b4:	csel	x6, x6, xzr, ne  // ne = any
    46b8:	csetm	x2, ne  // ne = any
    46bc:	b	44f8 <PyInit__ctypes_test@@Base+0x1228>
    46c0:	mov	w11, #0x1                   	// #1
    46c4:	cbnz	x12, 3f24 <PyInit__ctypes_test@@Base+0xc54>
    46c8:	adds	x5, x5, #0x8
    46cc:	mov	w11, #0x0                   	// #0
    46d0:	cinc	x6, x6, cs  // cs = hs, nlast
    46d4:	b	3f24 <PyInit__ctypes_test@@Base+0xc54>
    46d8:	sub	x5, x5, #0x2
    46dc:	add	x1, x1, x9
    46e0:	b	4104 <PyInit__ctypes_test@@Base+0xe34>
    46e4:	sub	x2, x2, #0x2
    46e8:	add	x1, x1, x9
    46ec:	b	4134 <PyInit__ctypes_test@@Base+0xe64>
    46f0:	mov	x2, #0x1                   	// #1
    46f4:	sub	x2, x2, x12
    46f8:	b	440c <PyInit__ctypes_test@@Base+0x113c>
    46fc:	cbnz	x12, 468c <PyInit__ctypes_test@@Base+0x13bc>
    4700:	adds	x2, x2, #0x8
    4704:	cinc	x6, x6, cs  // cs = hs, nlast
    4708:	tbnz	x6, #51, 4690 <PyInit__ctypes_test@@Base+0x13c0>
    470c:	b	447c <PyInit__ctypes_test@@Base+0x11ac>
    4710:	cbnz	x12, 4700 <PyInit__ctypes_test@@Base+0x1430>
    4714:	tbnz	x6, #51, 4690 <PyInit__ctypes_test@@Base+0x13c0>
    4718:	b	447c <PyInit__ctypes_test@@Base+0x11ac>
    471c:	orr	w0, w0, #0x10
    4720:	b	4690 <PyInit__ctypes_test@@Base+0x13c0>
    4724:	nop
    4728:	stp	x29, x30, [sp, #-80]!
    472c:	mov	x29, sp
    4730:	str	q0, [sp, #48]
    4734:	str	q1, [sp, #64]
    4738:	ldp	x1, x0, [sp, #48]
    473c:	ldp	x6, x2, [sp, #64]
    4740:	mrs	x11, fpcr
    4744:	lsr	x3, x0, #63
    4748:	ubfx	x7, x0, #0, #48
    474c:	and	w12, w3, #0xff
    4750:	mov	x14, x3
    4754:	ubfx	x3, x0, #48, #15
    4758:	cbz	w3, 4b00 <PyInit__ctypes_test@@Base+0x1830>
    475c:	mov	w4, #0x7fff                	// #32767
    4760:	cmp	w3, w4
    4764:	b.eq	4ba4 <PyInit__ctypes_test@@Base+0x18d4>  // b.none
    4768:	and	x3, x3, #0xffff
    476c:	extr	x4, x7, x1, #61
    4770:	mov	x18, #0xffffffffffffc001    	// #-16383
    4774:	orr	x7, x4, #0x8000000000000
    4778:	add	x3, x3, x18
    477c:	lsl	x5, x1, #3
    4780:	mov	x16, #0x0                   	// #0
    4784:	mov	x1, #0x0                   	// #0
    4788:	mov	w0, #0x0                   	// #0
    478c:	lsr	x8, x2, #63
    4790:	ubfx	x4, x2, #0, #48
    4794:	and	w15, w8, #0xff
    4798:	mov	x13, x8
    479c:	ubfx	x9, x2, #48, #15
    47a0:	cbz	w9, 4b60 <PyInit__ctypes_test@@Base+0x1890>
    47a4:	mov	w8, #0x7fff                	// #32767
    47a8:	cmp	w9, w8
    47ac:	b.eq	4830 <PyInit__ctypes_test@@Base+0x1560>  // b.none
    47b0:	and	x9, x9, #0xffff
    47b4:	mov	x17, #0xffffffffffffc001    	// #-16383
    47b8:	add	x9, x9, x17
    47bc:	extr	x2, x4, x6, #61
    47c0:	add	x9, x9, x3
    47c4:	lsl	x6, x6, #3
    47c8:	orr	x4, x2, #0x8000000000000
    47cc:	mov	x2, #0x0                   	// #0
    47d0:	eor	w8, w12, w15
    47d4:	cmp	x1, #0xa
    47d8:	and	w10, w8, #0xff
    47dc:	add	x3, x9, #0x1
    47e0:	and	x8, x8, #0xff
    47e4:	b.le	4868 <PyInit__ctypes_test@@Base+0x1598>
    47e8:	cmp	x1, #0xb
    47ec:	b.eq	4f00 <PyInit__ctypes_test@@Base+0x1c30>  // b.none
    47f0:	mov	w15, w12
    47f4:	mov	x13, x14
    47f8:	mov	w10, w15
    47fc:	cmp	x16, #0x2
    4800:	b.eq	4bc4 <PyInit__ctypes_test@@Base+0x18f4>  // b.none
    4804:	mov	x4, x7
    4808:	mov	x6, x5
    480c:	mov	x2, x16
    4810:	mov	x8, x13
    4814:	cmp	x2, #0x3
    4818:	b.ne	4884 <PyInit__ctypes_test@@Base+0x15b4>  // b.any
    481c:	orr	x4, x4, #0x800000000000
    4820:	mov	x5, x6
    4824:	and	x4, x4, #0xffffffffffff
    4828:	mov	w1, #0x7fff                	// #32767
    482c:	b	4898 <PyInit__ctypes_test@@Base+0x15c8>
    4830:	mov	x8, #0x7fff                	// #32767
    4834:	orr	x2, x4, x6
    4838:	add	x9, x3, x8
    483c:	cbnz	x2, 48bc <PyInit__ctypes_test@@Base+0x15ec>
    4840:	eor	w8, w12, w15
    4844:	orr	x1, x1, #0x2
    4848:	and	w10, w8, #0xff
    484c:	cmp	x1, #0xa
    4850:	add	x3, x3, #0x8, lsl #12
    4854:	and	x8, x8, #0xff
    4858:	mov	x6, #0x0                   	// #0
    485c:	b.gt	4e74 <PyInit__ctypes_test@@Base+0x1ba4>
    4860:	mov	x4, #0x0                   	// #0
    4864:	mov	x2, #0x2                   	// #2
    4868:	cmp	x1, #0x2
    486c:	b.gt	48e4 <PyInit__ctypes_test@@Base+0x1614>
    4870:	sub	x1, x1, #0x1
    4874:	cmp	x1, #0x1
    4878:	b.hi	4920 <PyInit__ctypes_test@@Base+0x1650>  // b.pmore
    487c:	cmp	x2, #0x2
    4880:	b.eq	4bc4 <PyInit__ctypes_test@@Base+0x18f4>  // b.none
    4884:	cmp	x2, #0x1
    4888:	b.ne	4a80 <PyInit__ctypes_test@@Base+0x17b0>  // b.any
    488c:	mov	w1, #0x0                   	// #0
    4890:	mov	x4, #0x0                   	// #0
    4894:	mov	x5, #0x0                   	// #0
    4898:	mov	x3, #0x0                   	// #0
    489c:	orr	w1, w1, w10, lsl #15
    48a0:	bfxil	x3, x4, #0, #48
    48a4:	fmov	d0, x5
    48a8:	bfi	x3, x1, #48, #16
    48ac:	fmov	v0.d[1], x3
    48b0:	cbnz	w0, 4cf0 <PyInit__ctypes_test@@Base+0x1a20>
    48b4:	ldp	x29, x30, [sp], #80
    48b8:	ret
    48bc:	tst	x4, #0x800000000000
    48c0:	eor	w8, w12, w15
    48c4:	orr	x1, x1, #0x3
    48c8:	csinc	w0, w0, wzr, ne  // ne = any
    48cc:	and	w10, w8, #0xff
    48d0:	add	x3, x3, #0x8, lsl #12
    48d4:	cmp	x1, #0xa
    48d8:	and	x8, x8, #0xff
    48dc:	mov	x2, #0x3                   	// #3
    48e0:	b.gt	4ef4 <PyInit__ctypes_test@@Base+0x1c24>
    48e4:	mov	x12, #0x1                   	// #1
    48e8:	mov	x14, #0x530                 	// #1328
    48ec:	lsl	x1, x12, x1
    48f0:	tst	x1, x14
    48f4:	b.ne	4af4 <PyInit__ctypes_test@@Base+0x1824>  // b.any
    48f8:	mov	x14, #0x240                 	// #576
    48fc:	tst	x1, x14
    4900:	b.ne	4adc <PyInit__ctypes_test@@Base+0x180c>  // b.any
    4904:	mov	x12, #0x88                  	// #136
    4908:	tst	x1, x12
    490c:	b.eq	4920 <PyInit__ctypes_test@@Base+0x1650>  // b.none
    4910:	mov	x7, x4
    4914:	mov	x5, x6
    4918:	mov	x16, x2
    491c:	b	47f8 <PyInit__ctypes_test@@Base+0x1528>
    4920:	lsr	x13, x5, #32
    4924:	and	x12, x6, #0xffffffff
    4928:	and	x15, x5, #0xffffffff
    492c:	lsr	x6, x6, #32
    4930:	and	x18, x4, #0xffffffff
    4934:	lsr	x2, x4, #32
    4938:	mul	x4, x13, x12
    493c:	stp	x21, x22, [sp, #32]
    4940:	lsr	x22, x7, #32
    4944:	and	x5, x7, #0xffffffff
    4948:	mul	x16, x12, x15
    494c:	madd	x7, x6, x15, x4
    4950:	stp	x19, x20, [sp, #16]
    4954:	mul	x1, x13, x18
    4958:	mul	x17, x15, x18
    495c:	and	x30, x16, #0xffffffff
    4960:	madd	x15, x2, x15, x1
    4964:	add	x16, x7, x16, lsr #32
    4968:	mul	x21, x22, x12
    496c:	cmp	x4, x16
    4970:	mul	x20, x22, x18
    4974:	mov	x14, #0x100000000           	// #4294967296
    4978:	mul	x19, x13, x6
    497c:	add	x15, x15, x17, lsr #32
    4980:	mul	x12, x12, x5
    4984:	and	x17, x17, #0xffffffff
    4988:	mul	x18, x5, x18
    498c:	add	x4, x19, x14
    4990:	madd	x7, x6, x5, x21
    4994:	csel	x19, x4, x19, hi  // hi = pmore
    4998:	madd	x5, x2, x5, x20
    499c:	cmp	x1, x15
    49a0:	mul	x13, x13, x2
    49a4:	add	x17, x17, x15, lsl #32
    49a8:	mul	x6, x6, x22
    49ac:	add	x7, x7, x12, lsr #32
    49b0:	add	x5, x5, x18, lsr #32
    49b4:	add	x4, x13, x14
    49b8:	mul	x2, x2, x22
    49bc:	csel	x13, x4, x13, hi  // hi = pmore
    49c0:	and	x1, x18, #0xffffffff
    49c4:	cmp	x21, x7
    49c8:	add	x4, x6, x14
    49cc:	add	x30, x30, x16, lsl #32
    49d0:	csel	x6, x4, x6, hi  // hi = pmore
    49d4:	add	x13, x13, x15, lsr #32
    49d8:	cmp	x20, x5
    49dc:	add	x1, x1, x5, lsl #32
    49e0:	add	x16, x17, x16, lsr #32
    49e4:	add	x14, x2, x14
    49e8:	csel	x2, x14, x2, hi  // hi = pmore
    49ec:	add	x16, x19, x16
    49f0:	adds	x1, x1, x13
    49f4:	and	x12, x12, #0xffffffff
    49f8:	cset	x13, cs  // cs = hs, nlast
    49fc:	cmp	x16, x17
    4a00:	cset	x4, cc  // cc = lo, ul, last
    4a04:	add	x12, x12, x7, lsl #32
    4a08:	adds	x1, x1, x4
    4a0c:	lsr	x5, x5, #32
    4a10:	cset	x4, cs  // cs = hs, nlast
    4a14:	cmp	x13, #0x0
    4a18:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    4a1c:	add	x7, x6, x7, lsr #32
    4a20:	cinc	x5, x5, ne  // ne = any
    4a24:	adds	x6, x16, x12
    4a28:	cset	x4, cs  // cs = hs, nlast
    4a2c:	adds	x1, x1, x7
    4a30:	cset	x7, cs  // cs = hs, nlast
    4a34:	adds	x4, x1, x4
    4a38:	cset	x1, cs  // cs = hs, nlast
    4a3c:	cmp	x7, #0x0
    4a40:	orr	x30, x30, x6, lsl #13
    4a44:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    4a48:	cinc	x1, x2, ne  // ne = any
    4a4c:	cmp	x30, #0x0
    4a50:	add	x1, x1, x5
    4a54:	cset	x2, ne  // ne = any
    4a58:	orr	x6, x2, x6, lsr #51
    4a5c:	orr	x6, x6, x4, lsl #13
    4a60:	extr	x4, x1, x4, #51
    4a64:	tbz	x1, #39, 4d78 <PyInit__ctypes_test@@Base+0x1aa8>
    4a68:	ldp	x19, x20, [sp, #16]
    4a6c:	and	x1, x6, #0x1
    4a70:	ldp	x21, x22, [sp, #32]
    4a74:	orr	x6, x1, x6, lsr #1
    4a78:	orr	x6, x6, x4, lsl #63
    4a7c:	lsr	x4, x4, #1
    4a80:	mov	x1, #0x3fff                	// #16383
    4a84:	add	x2, x3, x1
    4a88:	cmp	x2, #0x0
    4a8c:	b.le	4c24 <PyInit__ctypes_test@@Base+0x1954>
    4a90:	tst	x6, #0x7
    4a94:	b.eq	4ab4 <PyInit__ctypes_test@@Base+0x17e4>  // b.none
    4a98:	and	x1, x11, #0xc00000
    4a9c:	orr	w0, w0, #0x10
    4aa0:	cmp	x1, #0x400, lsl #12
    4aa4:	b.eq	4e6c <PyInit__ctypes_test@@Base+0x1b9c>  // b.none
    4aa8:	cmp	x1, #0x800, lsl #12
    4aac:	b.eq	4e14 <PyInit__ctypes_test@@Base+0x1b44>  // b.none
    4ab0:	cbz	x1, 4dfc <PyInit__ctypes_test@@Base+0x1b2c>
    4ab4:	tbz	x4, #52, 4ac0 <PyInit__ctypes_test@@Base+0x17f0>
    4ab8:	and	x4, x4, #0xffefffffffffffff
    4abc:	add	x2, x3, #0x4, lsl #12
    4ac0:	mov	x1, #0x7ffe                	// #32766
    4ac4:	cmp	x2, x1
    4ac8:	b.gt	4d4c <PyInit__ctypes_test@@Base+0x1a7c>
    4acc:	and	w1, w2, #0x7fff
    4ad0:	extr	x5, x4, x6, #3
    4ad4:	ubfx	x4, x4, #3, #48
    4ad8:	b	4898 <PyInit__ctypes_test@@Base+0x15c8>
    4adc:	mov	w0, w12
    4ae0:	mov	w10, #0x0                   	// #0
    4ae4:	mov	x4, #0xffffffffffff        	// #281474976710655
    4ae8:	mov	x5, #0xffffffffffffffff    	// #-1
    4aec:	mov	w1, #0x7fff                	// #32767
    4af0:	b	4898 <PyInit__ctypes_test@@Base+0x15c8>
    4af4:	mov	w15, w10
    4af8:	mov	x13, x8
    4afc:	b	47f8 <PyInit__ctypes_test@@Base+0x1528>
    4b00:	orr	x5, x7, x1
    4b04:	cbz	x5, 4c0c <PyInit__ctypes_test@@Base+0x193c>
    4b08:	cbz	x7, 4d28 <PyInit__ctypes_test@@Base+0x1a58>
    4b0c:	clz	x0, x7
    4b10:	sub	x4, x0, #0xf
    4b14:	add	w5, w4, #0x3
    4b18:	mov	w3, #0x3d                  	// #61
    4b1c:	sub	w3, w3, w4
    4b20:	lsl	x4, x7, x5
    4b24:	lsr	x3, x1, x3
    4b28:	orr	x7, x3, x4
    4b2c:	lsl	x5, x1, x5
    4b30:	lsr	x8, x2, #63
    4b34:	mov	x3, #0xffffffffffffc011    	// #-16367
    4b38:	ubfx	x4, x2, #0, #48
    4b3c:	sub	x3, x3, x0
    4b40:	and	w15, w8, #0xff
    4b44:	mov	x13, x8
    4b48:	ubfx	x9, x2, #48, #15
    4b4c:	mov	x1, #0x0                   	// #0
    4b50:	mov	x16, #0x0                   	// #0
    4b54:	mov	w0, #0x0                   	// #0
    4b58:	cbnz	w9, 47a4 <PyInit__ctypes_test@@Base+0x14d4>
    4b5c:	nop
    4b60:	orr	x2, x4, x6
    4b64:	cbz	x2, 4bd4 <PyInit__ctypes_test@@Base+0x1904>
    4b68:	cbz	x4, 4d04 <PyInit__ctypes_test@@Base+0x1a34>
    4b6c:	clz	x9, x4
    4b70:	sub	x2, x9, #0xf
    4b74:	add	w10, w2, #0x3
    4b78:	mov	w8, #0x3d                  	// #61
    4b7c:	sub	w8, w8, w2
    4b80:	lsl	x2, x4, x10
    4b84:	lsr	x8, x6, x8
    4b88:	orr	x4, x8, x2
    4b8c:	lsl	x6, x6, x10
    4b90:	sub	x9, x3, x9
    4b94:	mov	x10, #0xffffffffffffc011    	// #-16367
    4b98:	mov	x2, #0x0                   	// #0
    4b9c:	add	x9, x9, x10
    4ba0:	b	47d0 <PyInit__ctypes_test@@Base+0x1500>
    4ba4:	orr	x5, x7, x1
    4ba8:	cbnz	x5, 4bec <PyInit__ctypes_test@@Base+0x191c>
    4bac:	mov	x7, #0x0                   	// #0
    4bb0:	mov	x1, #0x8                   	// #8
    4bb4:	mov	x3, #0x7fff                	// #32767
    4bb8:	mov	x16, #0x2                   	// #2
    4bbc:	mov	w0, #0x0                   	// #0
    4bc0:	b	478c <PyInit__ctypes_test@@Base+0x14bc>
    4bc4:	mov	w1, #0x7fff                	// #32767
    4bc8:	mov	x4, #0x0                   	// #0
    4bcc:	mov	x5, #0x0                   	// #0
    4bd0:	b	4898 <PyInit__ctypes_test@@Base+0x15c8>
    4bd4:	orr	x1, x1, #0x1
    4bd8:	mov	x9, x3
    4bdc:	mov	x4, #0x0                   	// #0
    4be0:	mov	x6, #0x0                   	// #0
    4be4:	mov	x2, #0x1                   	// #1
    4be8:	b	47d0 <PyInit__ctypes_test@@Base+0x1500>
    4bec:	lsr	x0, x7, #47
    4bf0:	mov	x5, x1
    4bf4:	eor	x0, x0, #0x1
    4bf8:	mov	x1, #0xc                   	// #12
    4bfc:	and	w0, w0, #0x1
    4c00:	mov	x3, #0x7fff                	// #32767
    4c04:	mov	x16, #0x3                   	// #3
    4c08:	b	478c <PyInit__ctypes_test@@Base+0x14bc>
    4c0c:	mov	x7, #0x0                   	// #0
    4c10:	mov	x1, #0x4                   	// #4
    4c14:	mov	x3, #0x0                   	// #0
    4c18:	mov	x16, #0x1                   	// #1
    4c1c:	mov	w0, #0x0                   	// #0
    4c20:	b	478c <PyInit__ctypes_test@@Base+0x14bc>
    4c24:	mov	x1, #0x1                   	// #1
    4c28:	sub	x2, x1, x2
    4c2c:	cmp	x2, #0x74
    4c30:	b.gt	4ca8 <PyInit__ctypes_test@@Base+0x19d8>
    4c34:	cmp	x2, #0x3f
    4c38:	b.le	4d88 <PyInit__ctypes_test@@Base+0x1ab8>
    4c3c:	mov	w1, #0x80                  	// #128
    4c40:	sub	w1, w1, w2
    4c44:	cmp	x2, #0x40
    4c48:	sub	w2, w2, #0x40
    4c4c:	lsl	x1, x4, x1
    4c50:	orr	x1, x6, x1
    4c54:	csel	x6, x1, x6, ne  // ne = any
    4c58:	lsr	x2, x4, x2
    4c5c:	cmp	x6, #0x0
    4c60:	cset	x5, ne  // ne = any
    4c64:	orr	x5, x5, x2
    4c68:	ands	x2, x5, #0x7
    4c6c:	b.eq	4dbc <PyInit__ctypes_test@@Base+0x1aec>  // b.none
    4c70:	mov	x2, #0x0                   	// #0
    4c74:	and	x11, x11, #0xc00000
    4c78:	orr	w0, w0, #0x10
    4c7c:	cmp	x11, #0x400, lsl #12
    4c80:	b.eq	4ecc <PyInit__ctypes_test@@Base+0x1bfc>  // b.none
    4c84:	cmp	x11, #0x800, lsl #12
    4c88:	b.eq	4ee0 <PyInit__ctypes_test@@Base+0x1c10>  // b.none
    4c8c:	cbz	x11, 4e24 <PyInit__ctypes_test@@Base+0x1b54>
    4c90:	tbnz	x2, #51, 4e3c <PyInit__ctypes_test@@Base+0x1b6c>
    4c94:	ubfx	x4, x2, #3, #48
    4c98:	extr	x5, x2, x5, #3
    4c9c:	orr	w0, w0, #0x8
    4ca0:	mov	w1, #0x0                   	// #0
    4ca4:	b	4cd8 <PyInit__ctypes_test@@Base+0x1a08>
    4ca8:	orr	x5, x6, x4
    4cac:	cbz	x5, 4ccc <PyInit__ctypes_test@@Base+0x19fc>
    4cb0:	and	x11, x11, #0xc00000
    4cb4:	orr	w0, w0, #0x10
    4cb8:	cmp	x11, #0x400, lsl #12
    4cbc:	sub	x5, x1, x8
    4cc0:	b.eq	4ccc <PyInit__ctypes_test@@Base+0x19fc>  // b.none
    4cc4:	cmp	x11, #0x800, lsl #12
    4cc8:	csel	x5, x8, xzr, eq  // eq = none
    4ccc:	orr	w0, w0, #0x8
    4cd0:	mov	w1, #0x0                   	// #0
    4cd4:	mov	x4, #0x0                   	// #0
    4cd8:	mov	x3, #0x0                   	// #0
    4cdc:	fmov	d0, x5
    4ce0:	bfxil	x3, x4, #0, #48
    4ce4:	bfi	x3, x1, #48, #15
    4ce8:	bfi	x3, x10, #63, #1
    4cec:	fmov	v0.d[1], x3
    4cf0:	str	q0, [sp, #48]
    4cf4:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    4cf8:	ldr	q0, [sp, #48]
    4cfc:	ldp	x29, x30, [sp], #80
    4d00:	ret
    4d04:	clz	x9, x6
    4d08:	add	x2, x9, #0x31
    4d0c:	add	x9, x9, #0x40
    4d10:	cmp	x2, #0x3c
    4d14:	b.le	4b74 <PyInit__ctypes_test@@Base+0x18a4>
    4d18:	sub	w2, w2, #0x3d
    4d1c:	lsl	x4, x6, x2
    4d20:	mov	x6, #0x0                   	// #0
    4d24:	b	4b90 <PyInit__ctypes_test@@Base+0x18c0>
    4d28:	clz	x3, x1
    4d2c:	add	x4, x3, #0x31
    4d30:	add	x0, x3, #0x40
    4d34:	cmp	x4, #0x3c
    4d38:	b.le	4b14 <PyInit__ctypes_test@@Base+0x1844>
    4d3c:	sub	w4, w4, #0x3d
    4d40:	mov	x5, #0x0                   	// #0
    4d44:	lsl	x7, x1, x4
    4d48:	b	4b30 <PyInit__ctypes_test@@Base+0x1860>
    4d4c:	and	x5, x11, #0xc00000
    4d50:	cmp	x5, #0x400, lsl #12
    4d54:	b.eq	4e50 <PyInit__ctypes_test@@Base+0x1b80>  // b.none
    4d58:	cmp	x5, #0x800, lsl #12
    4d5c:	b.eq	4de0 <PyInit__ctypes_test@@Base+0x1b10>  // b.none
    4d60:	cbz	x5, 4dd4 <PyInit__ctypes_test@@Base+0x1b04>
    4d64:	mov	x4, #0xffffffffffff        	// #281474976710655
    4d68:	mov	x5, #0xffffffffffffffff    	// #-1
    4d6c:	mov	w2, #0x14                  	// #20
    4d70:	orr	w0, w0, w2
    4d74:	b	4cd8 <PyInit__ctypes_test@@Base+0x1a08>
    4d78:	mov	x3, x9
    4d7c:	ldp	x19, x20, [sp, #16]
    4d80:	ldp	x21, x22, [sp, #32]
    4d84:	b	4a80 <PyInit__ctypes_test@@Base+0x17b0>
    4d88:	mov	w1, #0x40                  	// #64
    4d8c:	sub	w1, w1, w2
    4d90:	lsr	x3, x6, x2
    4d94:	lsl	x6, x6, x1
    4d98:	cmp	x6, #0x0
    4d9c:	lsl	x5, x4, x1
    4da0:	cset	x1, ne  // ne = any
    4da4:	orr	x5, x5, x3
    4da8:	lsr	x2, x4, x2
    4dac:	orr	x5, x5, x1
    4db0:	tst	x5, #0x7
    4db4:	b.ne	4c74 <PyInit__ctypes_test@@Base+0x19a4>  // b.any
    4db8:	tbnz	x2, #51, 4eec <PyInit__ctypes_test@@Base+0x1c1c>
    4dbc:	ubfx	x4, x2, #3, #48
    4dc0:	extr	x5, x2, x5, #3
    4dc4:	mov	w1, #0x0                   	// #0
    4dc8:	tbz	w11, #11, 4898 <PyInit__ctypes_test@@Base+0x15c8>
    4dcc:	orr	w0, w0, #0x8
    4dd0:	b	4cd8 <PyInit__ctypes_test@@Base+0x1a08>
    4dd4:	mov	w1, #0x7fff                	// #32767
    4dd8:	mov	x4, #0x0                   	// #0
    4ddc:	b	4d6c <PyInit__ctypes_test@@Base+0x1a9c>
    4de0:	cmp	x8, #0x0
    4de4:	mov	w2, #0x7fff                	// #32767
    4de8:	mov	x4, #0xffffffffffff        	// #281474976710655
    4dec:	csel	w1, w1, w2, eq  // eq = none
    4df0:	csel	x4, x4, xzr, eq  // eq = none
    4df4:	csetm	x5, eq  // eq = none
    4df8:	b	4d6c <PyInit__ctypes_test@@Base+0x1a9c>
    4dfc:	and	x1, x6, #0xf
    4e00:	cmp	x1, #0x4
    4e04:	b.eq	4ab4 <PyInit__ctypes_test@@Base+0x17e4>  // b.none
    4e08:	adds	x6, x6, #0x4
    4e0c:	cinc	x4, x4, cs  // cs = hs, nlast
    4e10:	b	4ab4 <PyInit__ctypes_test@@Base+0x17e4>
    4e14:	cbz	x8, 4ab4 <PyInit__ctypes_test@@Base+0x17e4>
    4e18:	adds	x6, x6, #0x8
    4e1c:	cinc	x4, x4, cs  // cs = hs, nlast
    4e20:	b	4ab4 <PyInit__ctypes_test@@Base+0x17e4>
    4e24:	and	x1, x5, #0xf
    4e28:	cmp	x1, #0x4
    4e2c:	b.eq	4e38 <PyInit__ctypes_test@@Base+0x1b68>  // b.none
    4e30:	adds	x5, x5, #0x4
    4e34:	cinc	x2, x2, cs  // cs = hs, nlast
    4e38:	tbz	x2, #51, 4c94 <PyInit__ctypes_test@@Base+0x19c4>
    4e3c:	orr	w0, w0, #0x8
    4e40:	mov	w1, #0x1                   	// #1
    4e44:	mov	x4, #0x0                   	// #0
    4e48:	mov	x5, #0x0                   	// #0
    4e4c:	b	4cd8 <PyInit__ctypes_test@@Base+0x1a08>
    4e50:	cmp	x8, #0x0
    4e54:	mov	w2, #0x7fff                	// #32767
    4e58:	mov	x4, #0xffffffffffff        	// #281474976710655
    4e5c:	csel	w1, w1, w2, ne  // ne = any
    4e60:	csel	x4, x4, xzr, ne  // ne = any
    4e64:	csetm	x5, ne  // ne = any
    4e68:	b	4d6c <PyInit__ctypes_test@@Base+0x1a9c>
    4e6c:	cbnz	x8, 4ab4 <PyInit__ctypes_test@@Base+0x17e4>
    4e70:	b	4e18 <PyInit__ctypes_test@@Base+0x1b48>
    4e74:	mov	x4, #0x2                   	// #2
    4e78:	cmp	x1, #0xf
    4e7c:	b.ne	4ea0 <PyInit__ctypes_test@@Base+0x1bd0>  // b.any
    4e80:	tbz	x7, #47, 4eb8 <PyInit__ctypes_test@@Base+0x1be8>
    4e84:	tbnz	x2, #47, 4eb8 <PyInit__ctypes_test@@Base+0x1be8>
    4e88:	orr	x4, x2, #0x800000000000
    4e8c:	mov	w10, w15
    4e90:	and	x4, x4, #0xffffffffffff
    4e94:	mov	x5, x6
    4e98:	mov	w1, #0x7fff                	// #32767
    4e9c:	b	4898 <PyInit__ctypes_test@@Base+0x15c8>
    4ea0:	cmp	x1, #0xb
    4ea4:	b.ne	47f0 <PyInit__ctypes_test@@Base+0x1520>  // b.any
    4ea8:	mov	x7, x2
    4eac:	mov	x5, x6
    4eb0:	mov	x16, x4
    4eb4:	b	47f8 <PyInit__ctypes_test@@Base+0x1528>
    4eb8:	orr	x4, x7, #0x800000000000
    4ebc:	mov	w10, w12
    4ec0:	and	x4, x4, #0xffffffffffff
    4ec4:	mov	w1, #0x7fff                	// #32767
    4ec8:	b	4898 <PyInit__ctypes_test@@Base+0x15c8>
    4ecc:	cbnz	x8, 4e38 <PyInit__ctypes_test@@Base+0x1b68>
    4ed0:	adds	x5, x5, #0x8
    4ed4:	cinc	x2, x2, cs  // cs = hs, nlast
    4ed8:	tbnz	x2, #51, 4e3c <PyInit__ctypes_test@@Base+0x1b6c>
    4edc:	b	4c94 <PyInit__ctypes_test@@Base+0x19c4>
    4ee0:	cbnz	x8, 4ed0 <PyInit__ctypes_test@@Base+0x1c00>
    4ee4:	tbnz	x2, #51, 4e3c <PyInit__ctypes_test@@Base+0x1b6c>
    4ee8:	b	4c94 <PyInit__ctypes_test@@Base+0x19c4>
    4eec:	orr	w0, w0, #0x10
    4ef0:	b	4e3c <PyInit__ctypes_test@@Base+0x1b6c>
    4ef4:	mov	x2, x4
    4ef8:	mov	x4, #0x3                   	// #3
    4efc:	b	4e78 <PyInit__ctypes_test@@Base+0x1ba8>
    4f00:	mov	w10, w15
    4f04:	mov	x8, x13
    4f08:	b	4814 <PyInit__ctypes_test@@Base+0x1544>
    4f0c:	nop
    4f10:	stp	x29, x30, [sp, #-48]!
    4f14:	mov	x29, sp
    4f18:	str	x19, [sp, #16]
    4f1c:	str	q0, [sp, #32]
    4f20:	ldp	x2, x0, [sp, #32]
    4f24:	mrs	x1, fpcr
    4f28:	ubfx	x19, x0, #48, #15
    4f2c:	mov	x3, #0x3ffe                	// #16382
    4f30:	ubfx	x4, x0, #0, #48
    4f34:	cmp	x19, x3
    4f38:	b.gt	4f60 <PyInit__ctypes_test@@Base+0x1c90>
    4f3c:	cbnz	x19, 5000 <PyInit__ctypes_test@@Base+0x1d30>
    4f40:	orr	x2, x4, x2
    4f44:	cbz	x2, 4f50 <PyInit__ctypes_test@@Base+0x1c80>
    4f48:	mov	w0, #0x10                  	// #16
    4f4c:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    4f50:	mov	x0, x19
    4f54:	ldr	x19, [sp, #16]
    4f58:	ldp	x29, x30, [sp], #48
    4f5c:	ret
    4f60:	lsr	x1, x0, #63
    4f64:	and	w3, w1, #0xff
    4f68:	mov	x1, #0x403d                	// #16445
    4f6c:	cmp	x19, x1
    4f70:	b.le	4fa8 <PyInit__ctypes_test@@Base+0x1cd8>
    4f74:	mov	x0, #0x403e                	// #16446
    4f78:	and	x5, x3, #0xff
    4f7c:	cmp	x19, x0
    4f80:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    4f84:	csel	w1, w3, wzr, eq  // eq = none
    4f88:	add	x19, x5, x0
    4f8c:	cbz	w1, 5010 <PyInit__ctypes_test@@Base+0x1d40>
    4f90:	extr	x4, x4, x2, #49
    4f94:	cbnz	x4, 5010 <PyInit__ctypes_test@@Base+0x1d40>
    4f98:	cmp	xzr, x2, lsl #15
    4f9c:	b.eq	4f50 <PyInit__ctypes_test@@Base+0x1c80>  // b.none
    4fa0:	mov	w0, #0x10                  	// #16
    4fa4:	b	4f4c <PyInit__ctypes_test@@Base+0x1c7c>
    4fa8:	mov	x5, #0x406f                	// #16495
    4fac:	sub	x1, x5, x19
    4fb0:	mov	x0, x19
    4fb4:	cmp	x1, #0x3f
    4fb8:	orr	x19, x4, #0x1000000000000
    4fbc:	b.le	501c <PyInit__ctypes_test@@Base+0x1d4c>
    4fc0:	mov	w4, #0xffffc011            	// #-16367
    4fc4:	add	w4, w0, w4
    4fc8:	cmp	x1, #0x40
    4fcc:	mov	w1, #0x402f                	// #16431
    4fd0:	sub	w0, w1, w0
    4fd4:	lsl	x1, x19, x4
    4fd8:	orr	x1, x2, x1
    4fdc:	csel	x2, x1, x2, ne  // ne = any
    4fe0:	lsr	x19, x19, x0
    4fe4:	cmp	x2, #0x0
    4fe8:	cset	w0, ne  // ne = any
    4fec:	cmp	w3, #0x0
    4ff0:	cneg	x19, x19, ne  // ne = any
    4ff4:	cbz	w0, 4f50 <PyInit__ctypes_test@@Base+0x1c80>
    4ff8:	mov	w0, #0x10                  	// #16
    4ffc:	b	4f4c <PyInit__ctypes_test@@Base+0x1c7c>
    5000:	mov	x19, #0x0                   	// #0
    5004:	mov	w0, #0x10                  	// #16
    5008:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    500c:	b	4f50 <PyInit__ctypes_test@@Base+0x1c80>
    5010:	mov	w0, #0x1                   	// #1
    5014:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    5018:	b	4f50 <PyInit__ctypes_test@@Base+0x1c80>
    501c:	mov	w6, #0xffffbfd1            	// #-16431
    5020:	add	w4, w0, w6
    5024:	sub	w0, w5, w0
    5028:	lsl	x1, x2, x4
    502c:	cmp	x1, #0x0
    5030:	lsr	x2, x2, x0
    5034:	cset	w0, ne  // ne = any
    5038:	lsl	x19, x19, x4
    503c:	orr	x19, x2, x19
    5040:	b	4fec <PyInit__ctypes_test@@Base+0x1d1c>
    5044:	nop
    5048:	mrs	x0, fpcr
    504c:	fmov	w0, s0
    5050:	ubfx	x2, x0, #23, #8
    5054:	and	x1, x0, #0x7fffff
    5058:	add	x3, x2, #0x1
    505c:	ubfx	x5, x0, #0, #23
    5060:	tst	x3, #0xfe
    5064:	lsr	w0, w0, #31
    5068:	b.eq	5098 <PyInit__ctypes_test@@Base+0x1dc8>  // b.none
    506c:	lsl	x1, x1, #25
    5070:	mov	w3, #0x3f80                	// #16256
    5074:	add	w4, w2, w3
    5078:	mov	x3, #0x0                   	// #0
    507c:	bfxil	x3, x1, #0, #48
    5080:	mov	x2, #0x0                   	// #0
    5084:	fmov	d0, x2
    5088:	bfi	x3, x4, #48, #15
    508c:	bfi	x3, x0, #63, #1
    5090:	fmov	v0.d[1], x3
    5094:	ret
    5098:	cbnz	w2, 50c8 <PyInit__ctypes_test@@Base+0x1df8>
    509c:	cbnz	x1, 5114 <PyInit__ctypes_test@@Base+0x1e44>
    50a0:	mov	x1, #0x0                   	// #0
    50a4:	mov	x3, #0x0                   	// #0
    50a8:	bfxil	x3, x1, #0, #48
    50ac:	mov	w4, #0x0                   	// #0
    50b0:	mov	x2, #0x0                   	// #0
    50b4:	fmov	d0, x2
    50b8:	bfi	x3, x4, #48, #15
    50bc:	bfi	x3, x0, #63, #1
    50c0:	fmov	v0.d[1], x3
    50c4:	ret
    50c8:	cbz	x1, 5150 <PyInit__ctypes_test@@Base+0x1e80>
    50cc:	lsl	x1, x1, #25
    50d0:	mov	x3, #0x0                   	// #0
    50d4:	orr	x1, x1, #0x800000000000
    50d8:	mov	x2, #0x0                   	// #0
    50dc:	fmov	d0, x2
    50e0:	bfxil	x3, x1, #0, #48
    50e4:	orr	x3, x3, #0x7fff000000000000
    50e8:	bfi	x3, x0, #63, #1
    50ec:	fmov	v0.d[1], x3
    50f0:	tbnz	w5, #22, 5178 <PyInit__ctypes_test@@Base+0x1ea8>
    50f4:	stp	x29, x30, [sp, #-32]!
    50f8:	mov	w0, #0x1                   	// #1
    50fc:	mov	x29, sp
    5100:	str	q0, [sp, #16]
    5104:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    5108:	ldr	q0, [sp, #16]
    510c:	ldp	x29, x30, [sp], #32
    5110:	ret
    5114:	clz	x4, x1
    5118:	mov	w2, #0x3fa9                	// #16297
    511c:	sub	w3, w4, #0xf
    5120:	sub	w2, w2, w4
    5124:	and	w4, w2, #0x7fff
    5128:	mov	x2, #0x0                   	// #0
    512c:	lsl	x1, x1, x3
    5130:	and	x1, x1, #0xffffffffffff
    5134:	mov	x3, #0x0                   	// #0
    5138:	fmov	d0, x2
    513c:	bfxil	x3, x1, #0, #48
    5140:	bfi	x3, x4, #48, #15
    5144:	bfi	x3, x0, #63, #1
    5148:	fmov	v0.d[1], x3
    514c:	ret
    5150:	mov	x1, #0x0                   	// #0
    5154:	mov	x3, #0x0                   	// #0
    5158:	bfxil	x3, x1, #0, #48
    515c:	mov	w4, #0x7fff                	// #32767
    5160:	mov	x2, #0x0                   	// #0
    5164:	fmov	d0, x2
    5168:	bfi	x3, x4, #48, #15
    516c:	bfi	x3, x0, #63, #1
    5170:	fmov	v0.d[1], x3
    5174:	ret
    5178:	ret
    517c:	nop
    5180:	mrs	x0, fpcr
    5184:	fmov	x0, d0
    5188:	ubfx	x1, x0, #52, #11
    518c:	lsr	x4, x0, #63
    5190:	add	x2, x1, #0x1
    5194:	and	w4, w4, #0xff
    5198:	tst	x2, #0x7fe
    519c:	ubfx	x0, x0, #0, #52
    51a0:	b.eq	51d4 <PyInit__ctypes_test@@Base+0x1f04>  // b.none
    51a4:	lsr	x5, x0, #4
    51a8:	mov	x3, #0x0                   	// #0
    51ac:	and	x5, x5, #0xffffffffffff
    51b0:	mov	w2, #0x3c00                	// #15360
    51b4:	add	w1, w1, w2
    51b8:	lsl	x0, x0, #60
    51bc:	bfxil	x3, x5, #0, #48
    51c0:	fmov	d0, x0
    51c4:	bfi	x3, x1, #48, #15
    51c8:	bfi	x3, x4, #63, #1
    51cc:	fmov	v0.d[1], x3
    51d0:	ret
    51d4:	cbnz	x1, 5228 <PyInit__ctypes_test@@Base+0x1f58>
    51d8:	cbz	x0, 5274 <PyInit__ctypes_test@@Base+0x1fa4>
    51dc:	clz	x2, x0
    51e0:	cmp	w2, #0xe
    51e4:	b.gt	52c0 <PyInit__ctypes_test@@Base+0x1ff0>
    51e8:	add	w1, w2, #0x31
    51ec:	mov	w5, #0xf                   	// #15
    51f0:	sub	w5, w5, w2
    51f4:	lsr	x5, x0, x5
    51f8:	lsl	x0, x0, x1
    51fc:	and	x5, x5, #0xffffffffffff
    5200:	mov	w1, #0x3c0c                	// #15372
    5204:	mov	x3, #0x0                   	// #0
    5208:	sub	w1, w1, w2
    520c:	and	w1, w1, #0x7fff
    5210:	bfxil	x3, x5, #0, #48
    5214:	fmov	d0, x0
    5218:	bfi	x3, x1, #48, #15
    521c:	bfi	x3, x4, #63, #1
    5220:	fmov	v0.d[1], x3
    5224:	ret
    5228:	cbz	x0, 5298 <PyInit__ctypes_test@@Base+0x1fc8>
    522c:	lsr	x1, x0, #4
    5230:	mov	x3, #0x0                   	// #0
    5234:	orr	x1, x1, #0x800000000000
    5238:	lsl	x2, x0, #60
    523c:	fmov	d0, x2
    5240:	bfxil	x3, x1, #0, #48
    5244:	orr	x3, x3, #0x7fff000000000000
    5248:	bfi	x3, x4, #63, #1
    524c:	fmov	v0.d[1], x3
    5250:	tbnz	x0, #51, 52bc <PyInit__ctypes_test@@Base+0x1fec>
    5254:	stp	x29, x30, [sp, #-32]!
    5258:	mov	w0, #0x1                   	// #1
    525c:	mov	x29, sp
    5260:	str	q0, [sp, #16]
    5264:	bl	52d0 <PyInit__ctypes_test@@Base+0x2000>
    5268:	ldr	q0, [sp, #16]
    526c:	ldp	x29, x30, [sp], #32
    5270:	ret
    5274:	mov	x5, #0x0                   	// #0
    5278:	mov	x3, #0x0                   	// #0
    527c:	bfxil	x3, x5, #0, #48
    5280:	mov	w1, #0x0                   	// #0
    5284:	fmov	d0, x0
    5288:	bfi	x3, x1, #48, #15
    528c:	bfi	x3, x4, #63, #1
    5290:	fmov	v0.d[1], x3
    5294:	ret
    5298:	mov	x5, #0x0                   	// #0
    529c:	mov	x3, #0x0                   	// #0
    52a0:	bfxil	x3, x5, #0, #48
    52a4:	mov	w1, #0x7fff                	// #32767
    52a8:	fmov	d0, x0
    52ac:	bfi	x3, x1, #48, #15
    52b0:	bfi	x3, x4, #63, #1
    52b4:	fmov	v0.d[1], x3
    52b8:	ret
    52bc:	ret
    52c0:	sub	w5, w2, #0xf
    52c4:	lsl	x5, x0, x5
    52c8:	mov	x0, #0x0                   	// #0
    52cc:	b	51fc <PyInit__ctypes_test@@Base+0x1f2c>
    52d0:	tbz	w0, #0, 52e0 <PyInit__ctypes_test@@Base+0x2010>
    52d4:	movi	v1.2s, #0x0
    52d8:	fdiv	s0, s1, s1
    52dc:	mrs	x1, fpsr
    52e0:	tbz	w0, #1, 52f4 <PyInit__ctypes_test@@Base+0x2024>
    52e4:	fmov	s1, #1.000000000000000000e+00
    52e8:	movi	v2.2s, #0x0
    52ec:	fdiv	s0, s1, s2
    52f0:	mrs	x1, fpsr
    52f4:	tbz	w0, #2, 5314 <PyInit__ctypes_test@@Base+0x2044>
    52f8:	mov	w2, #0xc5ae                	// #50606
    52fc:	mov	w1, #0x7f7fffff            	// #2139095039
    5300:	movk	w2, #0x749d, lsl #16
    5304:	fmov	s1, w1
    5308:	fmov	s2, w2
    530c:	fadd	s0, s1, s2
    5310:	mrs	x1, fpsr
    5314:	tbz	w0, #3, 5324 <PyInit__ctypes_test@@Base+0x2054>
    5318:	movi	v1.2s, #0x80, lsl #16
    531c:	fmul	s0, s1, s1
    5320:	mrs	x1, fpsr
    5324:	tbz	w0, #4, 533c <PyInit__ctypes_test@@Base+0x206c>
    5328:	mov	w0, #0x7f7fffff            	// #2139095039
    532c:	fmov	s2, #1.000000000000000000e+00
    5330:	fmov	s1, w0
    5334:	fsub	s0, s1, s2
    5338:	mrs	x0, fpsr
    533c:	ret

Disassembly of section .fini:

0000000000005340 <.fini>:
    5340:	stp	x29, x30, [sp, #-16]!
    5344:	mov	x29, sp
    5348:	ldp	x29, x30, [sp], #16
    534c:	ret
