
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402650 <.init>:
  402650:	stp	x29, x30, [sp, #-16]!
  402654:	mov	x29, sp
  402658:	bl	402e10 <wcrtomb@plt+0x60>
  40265c:	ldp	x29, x30, [sp], #16
  402660:	ret

Disassembly of section .plt:

0000000000402670 <mbrtowc@plt-0x20>:
  402670:	stp	x16, x30, [sp, #-16]!
  402674:	adrp	x16, 44a000 <_obstack_memory_used@@Base+0x2be64>
  402678:	ldr	x17, [x16, #4088]
  40267c:	add	x16, x16, #0xff8
  402680:	br	x17
  402684:	nop
  402688:	nop
  40268c:	nop

0000000000402690 <mbrtowc@plt>:
  402690:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16]
  402698:	add	x16, x16, #0x0
  40269c:	br	x17

00000000004026a0 <memcpy@plt>:
  4026a0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #8]
  4026a8:	add	x16, x16, #0x8
  4026ac:	br	x17

00000000004026b0 <memmove@plt>:
  4026b0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #16]
  4026b8:	add	x16, x16, #0x10
  4026bc:	br	x17

00000000004026c0 <isalpha@plt>:
  4026c0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #24]
  4026c8:	add	x16, x16, #0x18
  4026cc:	br	x17

00000000004026d0 <ngettext@plt>:
  4026d0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #32]
  4026d8:	add	x16, x16, #0x20
  4026dc:	br	x17

00000000004026e0 <fwrite_unlocked@plt>:
  4026e0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #40]
  4026e8:	add	x16, x16, #0x28
  4026ec:	br	x17

00000000004026f0 <strlen@plt>:
  4026f0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #48]
  4026f8:	add	x16, x16, #0x30
  4026fc:	br	x17

0000000000402700 <fputs@plt>:
  402700:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #56]
  402708:	add	x16, x16, #0x38
  40270c:	br	x17

0000000000402710 <acl_set_fd@plt>:
  402710:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #64]
  402718:	add	x16, x16, #0x40
  40271c:	br	x17

0000000000402720 <exit@plt>:
  402720:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #72]
  402728:	add	x16, x16, #0x48
  40272c:	br	x17

0000000000402730 <error@plt>:
  402730:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #80]
  402738:	add	x16, x16, #0x50
  40273c:	br	x17

0000000000402740 <acl_entries@plt>:
  402740:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #88]
  402748:	add	x16, x16, #0x58
  40274c:	br	x17

0000000000402750 <wctype@plt>:
  402750:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #96]
  402758:	add	x16, x16, #0x60
  40275c:	br	x17

0000000000402760 <readlink@plt>:
  402760:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #104]
  402768:	add	x16, x16, #0x68
  40276c:	br	x17

0000000000402770 <ferror_unlocked@plt>:
  402770:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #112]
  402778:	add	x16, x16, #0x70
  40277c:	br	x17

0000000000402780 <ftell@plt>:
  402780:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #120]
  402788:	add	x16, x16, #0x78
  40278c:	br	x17

0000000000402790 <sprintf@plt>:
  402790:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #128]
  402798:	add	x16, x16, #0x80
  40279c:	br	x17

00000000004027a0 <__cxa_atexit@plt>:
  4027a0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #136]
  4027a8:	add	x16, x16, #0x88
  4027ac:	br	x17

00000000004027b0 <qsort@plt>:
  4027b0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #144]
  4027b8:	add	x16, x16, #0x90
  4027bc:	br	x17

00000000004027c0 <setvbuf@plt>:
  4027c0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #152]
  4027c8:	add	x16, x16, #0x98
  4027cc:	br	x17

00000000004027d0 <isblank@plt>:
  4027d0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #160]
  4027d8:	add	x16, x16, #0xa0
  4027dc:	br	x17

00000000004027e0 <__fwriting@plt>:
  4027e0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #168]
  4027e8:	add	x16, x16, #0xa8
  4027ec:	br	x17

00000000004027f0 <fileno@plt>:
  4027f0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #176]
  4027f8:	add	x16, x16, #0xb0
  4027fc:	br	x17

0000000000402800 <putc_unlocked@plt>:
  402800:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #184]
  402808:	add	x16, x16, #0xb8
  40280c:	br	x17

0000000000402810 <acl_delete_def_file@plt>:
  402810:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #192]
  402818:	add	x16, x16, #0xc0
  40281c:	br	x17

0000000000402820 <fclose@plt>:
  402820:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #200]
  402828:	add	x16, x16, #0xc8
  40282c:	br	x17

0000000000402830 <atoi@plt>:
  402830:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #208]
  402838:	add	x16, x16, #0xd0
  40283c:	br	x17

0000000000402840 <wctob@plt>:
  402840:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #216]
  402848:	add	x16, x16, #0xd8
  40284c:	br	x17

0000000000402850 <nl_langinfo@plt>:
  402850:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #224]
  402858:	add	x16, x16, #0xe0
  40285c:	br	x17

0000000000402860 <fopen@plt>:
  402860:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #232]
  402868:	add	x16, x16, #0xe8
  40286c:	br	x17

0000000000402870 <isspace@plt>:
  402870:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #240]
  402878:	add	x16, x16, #0xf0
  40287c:	br	x17

0000000000402880 <iswctype@plt>:
  402880:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #248]
  402888:	add	x16, x16, #0xf8
  40288c:	br	x17

0000000000402890 <malloc@plt>:
  402890:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #256]
  402898:	add	x16, x16, #0x100
  40289c:	br	x17

00000000004028a0 <toupper@plt>:
  4028a0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #264]
  4028a8:	add	x16, x16, #0x108
  4028ac:	br	x17

00000000004028b0 <chmod@plt>:
  4028b0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #272]
  4028b8:	add	x16, x16, #0x110
  4028bc:	br	x17

00000000004028c0 <getdelim@plt>:
  4028c0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #280]
  4028c8:	add	x16, x16, #0x118
  4028cc:	br	x17

00000000004028d0 <islower@plt>:
  4028d0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #288]
  4028d8:	add	x16, x16, #0x120
  4028dc:	br	x17

00000000004028e0 <isxdigit@plt>:
  4028e0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #296]
  4028e8:	add	x16, x16, #0x128
  4028ec:	br	x17

00000000004028f0 <popen@plt>:
  4028f0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #304]
  4028f8:	add	x16, x16, #0x130
  4028fc:	br	x17

0000000000402900 <strncmp@plt>:
  402900:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #312]
  402908:	add	x16, x16, #0x138
  40290c:	br	x17

0000000000402910 <bindtextdomain@plt>:
  402910:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #320]
  402918:	add	x16, x16, #0x140
  40291c:	br	x17

0000000000402920 <isdigit@plt>:
  402920:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #328]
  402928:	add	x16, x16, #0x148
  40292c:	br	x17

0000000000402930 <__libc_start_main@plt>:
  402930:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #336]
  402938:	add	x16, x16, #0x150
  40293c:	br	x17

0000000000402940 <strverscmp@plt>:
  402940:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #344]
  402948:	add	x16, x16, #0x158
  40294c:	br	x17

0000000000402950 <acl_get_tag_type@plt>:
  402950:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #352]
  402958:	add	x16, x16, #0x160
  40295c:	br	x17

0000000000402960 <memset@plt>:
  402960:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #360]
  402968:	add	x16, x16, #0x168
  40296c:	br	x17

0000000000402970 <fdopen@plt>:
  402970:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #368]
  402978:	add	x16, x16, #0x170
  40297c:	br	x17

0000000000402980 <fchmod@plt>:
  402980:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #376]
  402988:	add	x16, x16, #0x178
  40298c:	br	x17

0000000000402990 <putchar_unlocked@plt>:
  402990:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #384]
  402998:	add	x16, x16, #0x180
  40299c:	br	x17

00000000004029a0 <calloc@plt>:
  4029a0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #392]
  4029a8:	add	x16, x16, #0x188
  4029ac:	br	x17

00000000004029b0 <isupper@plt>:
  4029b0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #400]
  4029b8:	add	x16, x16, #0x190
  4029bc:	br	x17

00000000004029c0 <realloc@plt>:
  4029c0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #408]
  4029c8:	add	x16, x16, #0x198
  4029cc:	br	x17

00000000004029d0 <acl_set_file@plt>:
  4029d0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #416]
  4029d8:	add	x16, x16, #0x1a0
  4029dc:	br	x17

00000000004029e0 <rewind@plt>:
  4029e0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #424]
  4029e8:	add	x16, x16, #0x1a8
  4029ec:	br	x17

00000000004029f0 <acl_from_mode@plt>:
  4029f0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #432]
  4029f8:	add	x16, x16, #0x1b0
  4029fc:	br	x17

0000000000402a00 <acl_get_fd@plt>:
  402a00:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #440]
  402a08:	add	x16, x16, #0x1b8
  402a0c:	br	x17

0000000000402a10 <strdup@plt>:
  402a10:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #448]
  402a18:	add	x16, x16, #0x1c0
  402a1c:	br	x17

0000000000402a20 <getc_unlocked@plt>:
  402a20:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #456]
  402a28:	add	x16, x16, #0x1c8
  402a2c:	br	x17

0000000000402a30 <strerror@plt>:
  402a30:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #464]
  402a38:	add	x16, x16, #0x1d0
  402a3c:	br	x17

0000000000402a40 <strrchr@plt>:
  402a40:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #472]
  402a48:	add	x16, x16, #0x1d8
  402a4c:	br	x17

0000000000402a50 <__gmon_start__@plt>:
  402a50:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #480]
  402a58:	add	x16, x16, #0x1e0
  402a5c:	br	x17

0000000000402a60 <btowc@plt>:
  402a60:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #488]
  402a68:	add	x16, x16, #0x1e8
  402a6c:	br	x17

0000000000402a70 <abort@plt>:
  402a70:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #496]
  402a78:	add	x16, x16, #0x1f0
  402a7c:	br	x17

0000000000402a80 <mkostemp@plt>:
  402a80:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #504]
  402a88:	add	x16, x16, #0x1f8
  402a8c:	br	x17

0000000000402a90 <iscntrl@plt>:
  402a90:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #512]
  402a98:	add	x16, x16, #0x200
  402a9c:	br	x17

0000000000402aa0 <mbsinit@plt>:
  402aa0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #520]
  402aa8:	add	x16, x16, #0x208
  402aac:	br	x17

0000000000402ab0 <ispunct@plt>:
  402ab0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #528]
  402ab8:	add	x16, x16, #0x210
  402abc:	br	x17

0000000000402ac0 <puts@plt>:
  402ac0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #536]
  402ac8:	add	x16, x16, #0x218
  402acc:	br	x17

0000000000402ad0 <fread_unlocked@plt>:
  402ad0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #544]
  402ad8:	add	x16, x16, #0x220
  402adc:	br	x17

0000000000402ae0 <memcmp@plt>:
  402ae0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #552]
  402ae8:	add	x16, x16, #0x228
  402aec:	br	x17

0000000000402af0 <textdomain@plt>:
  402af0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #560]
  402af8:	add	x16, x16, #0x230
  402afc:	br	x17

0000000000402b00 <getopt_long@plt>:
  402b00:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #568]
  402b08:	add	x16, x16, #0x238
  402b0c:	br	x17

0000000000402b10 <strcmp@plt>:
  402b10:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #576]
  402b18:	add	x16, x16, #0x240
  402b1c:	br	x17

0000000000402b20 <__ctype_b_loc@plt>:
  402b20:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #584]
  402b28:	add	x16, x16, #0x248
  402b2c:	br	x17

0000000000402b30 <acl_get_file@plt>:
  402b30:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #592]
  402b38:	add	x16, x16, #0x250
  402b3c:	br	x17

0000000000402b40 <free@plt>:
  402b40:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #600]
  402b48:	add	x16, x16, #0x258
  402b4c:	br	x17

0000000000402b50 <ungetc@plt>:
  402b50:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #608]
  402b58:	add	x16, x16, #0x260
  402b5c:	br	x17

0000000000402b60 <__ctype_get_mb_cur_max@plt>:
  402b60:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #616]
  402b68:	add	x16, x16, #0x268
  402b6c:	br	x17

0000000000402b70 <acl_get_entry@plt>:
  402b70:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #624]
  402b78:	add	x16, x16, #0x270
  402b7c:	br	x17

0000000000402b80 <strchr@plt>:
  402b80:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #632]
  402b88:	add	x16, x16, #0x278
  402b8c:	br	x17

0000000000402b90 <feof_unlocked@plt>:
  402b90:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #640]
  402b98:	add	x16, x16, #0x280
  402b9c:	br	x17

0000000000402ba0 <memrchr@plt>:
  402ba0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #648]
  402ba8:	add	x16, x16, #0x288
  402bac:	br	x17

0000000000402bb0 <rename@plt>:
  402bb0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #656]
  402bb8:	add	x16, x16, #0x290
  402bbc:	br	x17

0000000000402bc0 <fflush_unlocked@plt>:
  402bc0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #664]
  402bc8:	add	x16, x16, #0x298
  402bcc:	br	x17

0000000000402bd0 <strcpy@plt>:
  402bd0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #672]
  402bd8:	add	x16, x16, #0x2a0
  402bdc:	br	x17

0000000000402be0 <clearerr_unlocked@plt>:
  402be0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #680]
  402be8:	add	x16, x16, #0x2a8
  402bec:	br	x17

0000000000402bf0 <__lxstat@plt>:
  402bf0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #688]
  402bf8:	add	x16, x16, #0x2b0
  402bfc:	br	x17

0000000000402c00 <memchr@plt>:
  402c00:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #696]
  402c08:	add	x16, x16, #0x2b8
  402c0c:	br	x17

0000000000402c10 <isatty@plt>:
  402c10:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #704]
  402c18:	add	x16, x16, #0x2c0
  402c1c:	br	x17

0000000000402c20 <isgraph@plt>:
  402c20:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #712]
  402c28:	add	x16, x16, #0x2c8
  402c2c:	br	x17

0000000000402c30 <iswalnum@plt>:
  402c30:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #720]
  402c38:	add	x16, x16, #0x2d0
  402c3c:	br	x17

0000000000402c40 <__fxstat@plt>:
  402c40:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #728]
  402c48:	add	x16, x16, #0x2d8
  402c4c:	br	x17

0000000000402c50 <strstr@plt>:
  402c50:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #736]
  402c58:	add	x16, x16, #0x2e0
  402c5c:	br	x17

0000000000402c60 <fputs_unlocked@plt>:
  402c60:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #744]
  402c68:	add	x16, x16, #0x2e8
  402c6c:	br	x17

0000000000402c70 <strcoll@plt>:
  402c70:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #752]
  402c78:	add	x16, x16, #0x2f0
  402c7c:	br	x17

0000000000402c80 <isalnum@plt>:
  402c80:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #760]
  402c88:	add	x16, x16, #0x2f8
  402c8c:	br	x17

0000000000402c90 <pclose@plt>:
  402c90:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #768]
  402c98:	add	x16, x16, #0x300
  402c9c:	br	x17

0000000000402ca0 <towupper@plt>:
  402ca0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #776]
  402ca8:	add	x16, x16, #0x308
  402cac:	br	x17

0000000000402cb0 <iswprint@plt>:
  402cb0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #784]
  402cb8:	add	x16, x16, #0x310
  402cbc:	br	x17

0000000000402cc0 <umask@plt>:
  402cc0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #792]
  402cc8:	add	x16, x16, #0x318
  402ccc:	br	x17

0000000000402cd0 <vfprintf@plt>:
  402cd0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #800]
  402cd8:	add	x16, x16, #0x320
  402cdc:	br	x17

0000000000402ce0 <printf@plt>:
  402ce0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #808]
  402ce8:	add	x16, x16, #0x328
  402cec:	br	x17

0000000000402cf0 <__assert_fail@plt>:
  402cf0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #816]
  402cf8:	add	x16, x16, #0x330
  402cfc:	br	x17

0000000000402d00 <__errno_location@plt>:
  402d00:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #824]
  402d08:	add	x16, x16, #0x338
  402d0c:	br	x17

0000000000402d10 <tolower@plt>:
  402d10:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #832]
  402d18:	add	x16, x16, #0x340
  402d1c:	br	x17

0000000000402d20 <getenv@plt>:
  402d20:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #840]
  402d28:	add	x16, x16, #0x348
  402d2c:	br	x17

0000000000402d30 <unlink@plt>:
  402d30:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #848]
  402d38:	add	x16, x16, #0x350
  402d3c:	br	x17

0000000000402d40 <gettext@plt>:
  402d40:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #856]
  402d48:	add	x16, x16, #0x358
  402d4c:	br	x17

0000000000402d50 <fchown@plt>:
  402d50:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #864]
  402d58:	add	x16, x16, #0x360
  402d5c:	br	x17

0000000000402d60 <towlower@plt>:
  402d60:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #872]
  402d68:	add	x16, x16, #0x368
  402d6c:	br	x17

0000000000402d70 <fprintf@plt>:
  402d70:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #880]
  402d78:	add	x16, x16, #0x370
  402d7c:	br	x17

0000000000402d80 <isprint@plt>:
  402d80:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #888]
  402d88:	add	x16, x16, #0x378
  402d8c:	br	x17

0000000000402d90 <setlocale@plt>:
  402d90:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #896]
  402d98:	add	x16, x16, #0x380
  402d9c:	br	x17

0000000000402da0 <acl_free@plt>:
  402da0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #904]
  402da8:	add	x16, x16, #0x388
  402dac:	br	x17

0000000000402db0 <wcrtomb@plt>:
  402db0:	adrp	x16, 44b000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #912]
  402db8:	add	x16, x16, #0x390
  402dbc:	br	x17

Disassembly of section .text:

0000000000402dc0 <_obstack_begin@@Base-0x1ad40>:
  402dc0:	mov	x29, #0x0                   	// #0
  402dc4:	mov	x30, #0x0                   	// #0
  402dc8:	mov	x5, x0
  402dcc:	ldr	x1, [sp]
  402dd0:	add	x2, sp, #0x8
  402dd4:	mov	x6, sp
  402dd8:	movz	x0, #0x0, lsl #48
  402ddc:	movk	x0, #0x0, lsl #32
  402de0:	movk	x0, #0x40, lsl #16
  402de4:	movk	x0, #0xc128
  402de8:	movz	x3, #0x0, lsl #48
  402dec:	movk	x3, #0x0, lsl #32
  402df0:	movk	x3, #0x43, lsl #16
  402df4:	movk	x3, #0x6e98
  402df8:	movz	x4, #0x0, lsl #48
  402dfc:	movk	x4, #0x0, lsl #32
  402e00:	movk	x4, #0x43, lsl #16
  402e04:	movk	x4, #0x6f18
  402e08:	bl	402930 <__libc_start_main@plt>
  402e0c:	bl	402a70 <abort@plt>
  402e10:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x2be64>
  402e14:	ldr	x0, [x0, #4064]
  402e18:	cbz	x0, 402e20 <wcrtomb@plt+0x70>
  402e1c:	b	402a50 <__gmon_start__@plt>
  402e20:	ret
  402e24:	nop
  402e28:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402e2c:	add	x0, x0, #0x4f8
  402e30:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402e34:	add	x1, x1, #0x4f8
  402e38:	cmp	x1, x0
  402e3c:	b.eq	402e54 <wcrtomb@plt+0xa4>  // b.none
  402e40:	adrp	x1, 436000 <_obstack_memory_used@@Base+0x17e64>
  402e44:	ldr	x1, [x1, #3944]
  402e48:	cbz	x1, 402e54 <wcrtomb@plt+0xa4>
  402e4c:	mov	x16, x1
  402e50:	br	x16
  402e54:	ret
  402e58:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402e5c:	add	x0, x0, #0x4f8
  402e60:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402e64:	add	x1, x1, #0x4f8
  402e68:	sub	x1, x1, x0
  402e6c:	lsr	x2, x1, #63
  402e70:	add	x1, x2, x1, asr #3
  402e74:	cmp	xzr, x1, asr #1
  402e78:	asr	x1, x1, #1
  402e7c:	b.eq	402e94 <wcrtomb@plt+0xe4>  // b.none
  402e80:	adrp	x2, 436000 <_obstack_memory_used@@Base+0x17e64>
  402e84:	ldr	x2, [x2, #3952]
  402e88:	cbz	x2, 402e94 <wcrtomb@plt+0xe4>
  402e8c:	mov	x16, x2
  402e90:	br	x16
  402e94:	ret
  402e98:	stp	x29, x30, [sp, #-32]!
  402e9c:	mov	x29, sp
  402ea0:	str	x19, [sp, #16]
  402ea4:	adrp	x19, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402ea8:	ldrb	w0, [x19, #1328]
  402eac:	cbnz	w0, 402ebc <wcrtomb@plt+0x10c>
  402eb0:	bl	402e28 <wcrtomb@plt+0x78>
  402eb4:	mov	w0, #0x1                   	// #1
  402eb8:	strb	w0, [x19, #1328]
  402ebc:	ldr	x19, [sp, #16]
  402ec0:	ldp	x29, x30, [sp], #32
  402ec4:	ret
  402ec8:	b	402e58 <wcrtomb@plt+0xa8>
  402ecc:	sub	sp, sp, #0x50
  402ed0:	stp	x29, x30, [sp, #64]
  402ed4:	add	x29, sp, #0x40
  402ed8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402edc:	add	x8, x8, #0x538
  402ee0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402ee4:	add	x9, x9, #0x550
  402ee8:	stur	x0, [x29, #-8]
  402eec:	ldr	x10, [x8]
  402ef0:	stur	x8, [x29, #-16]
  402ef4:	stur	x9, [x29, #-24]
  402ef8:	cbz	x10, 402f50 <wcrtomb@plt+0x1a0>
  402efc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402f00:	add	x8, x8, #0x500
  402f04:	ldr	x0, [x8]
  402f08:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  402f0c:	add	x8, x8, #0x9a5
  402f10:	str	x0, [sp, #32]
  402f14:	mov	x0, x8
  402f18:	bl	402d40 <gettext@plt>
  402f1c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402f20:	add	x8, x8, #0x798
  402f24:	ldr	x2, [x8]
  402f28:	ldur	x8, [x29, #-16]
  402f2c:	ldr	x3, [x8]
  402f30:	ldr	x4, [x8, #8]
  402f34:	ldur	x5, [x29, #-8]
  402f38:	ldr	x9, [sp, #32]
  402f3c:	str	x0, [sp, #24]
  402f40:	mov	x0, x9
  402f44:	ldr	x1, [sp, #24]
  402f48:	bl	402d70 <fprintf@plt>
  402f4c:	b	402fb4 <wcrtomb@plt+0x204>
  402f50:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402f54:	add	x8, x8, #0x500
  402f58:	ldr	x0, [x8]
  402f5c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  402f60:	add	x8, x8, #0x9bf
  402f64:	str	x0, [sp, #16]
  402f68:	mov	x0, x8
  402f6c:	bl	402d40 <gettext@plt>
  402f70:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402f74:	add	x8, x8, #0x798
  402f78:	ldr	x2, [x8]
  402f7c:	ldur	x8, [x29, #-16]
  402f80:	ldr	x3, [x8, #16]
  402f84:	ldur	x9, [x29, #-24]
  402f88:	ldr	x10, [x9, #8]
  402f8c:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  402f90:	add	x11, x11, #0x550
  402f94:	ldr	x11, [x11]
  402f98:	subs	x4, x10, x11
  402f9c:	ldur	x5, [x29, #-8]
  402fa0:	ldr	x10, [sp, #16]
  402fa4:	str	x0, [sp, #8]
  402fa8:	mov	x0, x10
  402fac:	ldr	x1, [sp, #8]
  402fb0:	bl	402d70 <fprintf@plt>
  402fb4:	mov	w0, #0x1                   	// #1
  402fb8:	bl	402720 <exit@plt>
  402fbc:	sub	sp, sp, #0x80
  402fc0:	stp	x29, x30, [sp, #112]
  402fc4:	add	x29, sp, #0x70
  402fc8:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  402fcc:	add	x8, x8, #0x624
  402fd0:	add	x8, x8, #0x30c
  402fd4:	stur	x0, [x29, #-8]
  402fd8:	stur	x1, [x29, #-16]
  402fdc:	stur	w2, [x29, #-20]
  402fe0:	ldur	x9, [x29, #-8]
  402fe4:	ldur	x10, [x29, #-16]
  402fe8:	add	x9, x9, x10
  402fec:	stur	x9, [x29, #-32]
  402ff0:	ldur	x9, [x29, #-8]
  402ff4:	stur	x9, [x29, #-40]
  402ff8:	ldur	x9, [x29, #-8]
  402ffc:	stur	x9, [x29, #-48]
  403000:	str	wzr, [sp, #52]
  403004:	str	xzr, [sp, #40]
  403008:	str	x8, [sp, #32]
  40300c:	ldur	x8, [x29, #-40]
  403010:	ldur	x9, [x29, #-32]
  403014:	cmp	x8, x9
  403018:	b.cs	4034f0 <wcrtomb@plt+0x740>  // b.hs, b.nlast
  40301c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403020:	add	x8, x8, #0x8dc
  403024:	ldr	w9, [x8]
  403028:	cmp	w9, #0x1
  40302c:	b.ne	40303c <wcrtomb@plt+0x28c>  // b.any
  403030:	mov	x8, #0x1                   	// #1
  403034:	str	x8, [sp, #24]
  403038:	b	403060 <wcrtomb@plt+0x2b0>
  40303c:	ldur	x1, [x29, #-40]
  403040:	ldur	x8, [x29, #-32]
  403044:	ldur	x9, [x29, #-40]
  403048:	subs	x2, x8, x9
  40304c:	mov	x8, xzr
  403050:	mov	x0, x8
  403054:	add	x3, sp, #0x28
  403058:	bl	41da58 <wcrtomb@plt+0x1aca8>
  40305c:	str	x0, [sp, #24]
  403060:	ldr	x8, [sp, #24]
  403064:	str	w8, [sp, #48]
  403068:	ldr	w8, [sp, #48]
  40306c:	cmp	w8, #0x1
  403070:	b.eq	4030d8 <wcrtomb@plt+0x328>  // b.none
  403074:	ldrsw	x8, [sp, #48]
  403078:	mov	x9, #0xffffffffffffffff    	// #-1
  40307c:	cmp	x8, x9
  403080:	b.eq	40309c <wcrtomb@plt+0x2ec>  // b.none
  403084:	ldrsw	x8, [sp, #48]
  403088:	mov	x9, #0xfffffffffffffffe    	// #-2
  40308c:	cmp	x8, x9
  403090:	b.eq	40309c <wcrtomb@plt+0x2ec>  // b.none
  403094:	ldr	w8, [sp, #48]
  403098:	cbnz	w8, 4030a4 <wcrtomb@plt+0x2f4>
  40309c:	mov	w8, #0x1                   	// #1
  4030a0:	str	w8, [sp, #48]
  4030a4:	ldur	x0, [x29, #-48]
  4030a8:	ldur	x1, [x29, #-40]
  4030ac:	ldrsw	x2, [sp, #48]
  4030b0:	bl	4026b0 <memmove@plt>
  4030b4:	ldrsw	x8, [sp, #48]
  4030b8:	ldur	x9, [x29, #-48]
  4030bc:	add	x8, x9, x8
  4030c0:	stur	x8, [x29, #-48]
  4030c4:	ldrsw	x8, [sp, #48]
  4030c8:	ldur	x9, [x29, #-40]
  4030cc:	add	x8, x9, x8
  4030d0:	stur	x8, [x29, #-40]
  4030d4:	b	40300c <wcrtomb@plt+0x25c>
  4030d8:	ldur	x8, [x29, #-40]
  4030dc:	ldrb	w9, [x8]
  4030e0:	cmp	w9, #0x5c
  4030e4:	b.ne	4033e0 <wcrtomb@plt+0x630>  // b.any
  4030e8:	ldur	x8, [x29, #-40]
  4030ec:	add	x8, x8, #0x1
  4030f0:	ldur	x9, [x29, #-32]
  4030f4:	cmp	x8, x9
  4030f8:	b.cs	4033e0 <wcrtomb@plt+0x630>  // b.hs, b.nlast
  4030fc:	ldr	w8, [sp, #52]
  403100:	cbnz	w8, 4033e0 <wcrtomb@plt+0x630>
  403104:	ldur	x8, [x29, #-40]
  403108:	add	x9, x8, #0x1
  40310c:	stur	x9, [x29, #-40]
  403110:	ldrb	w10, [x8, #1]
  403114:	cmp	w10, #0xa
  403118:	str	w10, [sp, #20]
  40311c:	b.eq	40320c <wcrtomb@plt+0x45c>  // b.none
  403120:	b	403124 <wcrtomb@plt+0x374>
  403124:	ldr	w8, [sp, #20]
  403128:	cmp	w8, #0x61
  40312c:	b.eq	4031c4 <wcrtomb@plt+0x414>  // b.none
  403130:	b	403134 <wcrtomb@plt+0x384>
  403134:	ldr	w8, [sp, #20]
  403138:	cmp	w8, #0x63
  40313c:	b.eq	403324 <wcrtomb@plt+0x574>  // b.none
  403140:	b	403144 <wcrtomb@plt+0x394>
  403144:	ldr	w8, [sp, #20]
  403148:	cmp	w8, #0x64
  40314c:	b.eq	40329c <wcrtomb@plt+0x4ec>  // b.none
  403150:	b	403154 <wcrtomb@plt+0x3a4>
  403154:	ldr	w8, [sp, #20]
  403158:	cmp	w8, #0x66
  40315c:	b.eq	4031e8 <wcrtomb@plt+0x438>  // b.none
  403160:	b	403164 <wcrtomb@plt+0x3b4>
  403164:	ldr	w8, [sp, #20]
  403168:	cmp	w8, #0x6e
  40316c:	b.eq	40320c <wcrtomb@plt+0x45c>  // b.none
  403170:	b	403174 <wcrtomb@plt+0x3c4>
  403174:	ldr	w8, [sp, #20]
  403178:	cmp	w8, #0x6f
  40317c:	b.eq	4032b4 <wcrtomb@plt+0x504>  // b.none
  403180:	b	403184 <wcrtomb@plt+0x3d4>
  403184:	ldr	w8, [sp, #20]
  403188:	cmp	w8, #0x72
  40318c:	b.eq	403230 <wcrtomb@plt+0x480>  // b.none
  403190:	b	403194 <wcrtomb@plt+0x3e4>
  403194:	ldr	w8, [sp, #20]
  403198:	cmp	w8, #0x74
  40319c:	b.eq	403254 <wcrtomb@plt+0x4a4>  // b.none
  4031a0:	b	4031a4 <wcrtomb@plt+0x3f4>
  4031a4:	ldr	w8, [sp, #20]
  4031a8:	cmp	w8, #0x76
  4031ac:	b.eq	403278 <wcrtomb@plt+0x4c8>  // b.none
  4031b0:	b	4031b4 <wcrtomb@plt+0x404>
  4031b4:	ldr	w8, [sp, #20]
  4031b8:	cmp	w8, #0x78
  4031bc:	b.eq	4032a8 <wcrtomb@plt+0x4f8>  // b.none
  4031c0:	b	4033c0 <wcrtomb@plt+0x610>
  4031c4:	ldur	x8, [x29, #-48]
  4031c8:	add	x9, x8, #0x1
  4031cc:	stur	x9, [x29, #-48]
  4031d0:	mov	w10, #0x7                   	// #7
  4031d4:	strb	w10, [x8]
  4031d8:	ldur	x8, [x29, #-40]
  4031dc:	add	x8, x8, #0x1
  4031e0:	stur	x8, [x29, #-40]
  4031e4:	b	40300c <wcrtomb@plt+0x25c>
  4031e8:	ldur	x8, [x29, #-48]
  4031ec:	add	x9, x8, #0x1
  4031f0:	stur	x9, [x29, #-48]
  4031f4:	mov	w10, #0xc                   	// #12
  4031f8:	strb	w10, [x8]
  4031fc:	ldur	x8, [x29, #-40]
  403200:	add	x8, x8, #0x1
  403204:	stur	x8, [x29, #-40]
  403208:	b	40300c <wcrtomb@plt+0x25c>
  40320c:	ldur	x8, [x29, #-48]
  403210:	add	x9, x8, #0x1
  403214:	stur	x9, [x29, #-48]
  403218:	mov	w10, #0xa                   	// #10
  40321c:	strb	w10, [x8]
  403220:	ldur	x8, [x29, #-40]
  403224:	add	x8, x8, #0x1
  403228:	stur	x8, [x29, #-40]
  40322c:	b	40300c <wcrtomb@plt+0x25c>
  403230:	ldur	x8, [x29, #-48]
  403234:	add	x9, x8, #0x1
  403238:	stur	x9, [x29, #-48]
  40323c:	mov	w10, #0xd                   	// #13
  403240:	strb	w10, [x8]
  403244:	ldur	x8, [x29, #-40]
  403248:	add	x8, x8, #0x1
  40324c:	stur	x8, [x29, #-40]
  403250:	b	40300c <wcrtomb@plt+0x25c>
  403254:	ldur	x8, [x29, #-48]
  403258:	add	x9, x8, #0x1
  40325c:	stur	x9, [x29, #-48]
  403260:	mov	w10, #0x9                   	// #9
  403264:	strb	w10, [x8]
  403268:	ldur	x8, [x29, #-40]
  40326c:	add	x8, x8, #0x1
  403270:	stur	x8, [x29, #-40]
  403274:	b	40300c <wcrtomb@plt+0x25c>
  403278:	ldur	x8, [x29, #-48]
  40327c:	add	x9, x8, #0x1
  403280:	stur	x9, [x29, #-48]
  403284:	mov	w10, #0xb                   	// #11
  403288:	strb	w10, [x8]
  40328c:	ldur	x8, [x29, #-40]
  403290:	add	x8, x8, #0x1
  403294:	stur	x8, [x29, #-40]
  403298:	b	40300c <wcrtomb@plt+0x25c>
  40329c:	mov	w8, #0xa                   	// #10
  4032a0:	str	w8, [sp, #56]
  4032a4:	b	4032bc <wcrtomb@plt+0x50c>
  4032a8:	mov	w8, #0x10                  	// #16
  4032ac:	str	w8, [sp, #56]
  4032b0:	b	4032bc <wcrtomb@plt+0x50c>
  4032b4:	mov	w8, #0x8                   	// #8
  4032b8:	str	w8, [sp, #56]
  4032bc:	ldur	x1, [x29, #-40]
  4032c0:	ldur	x2, [x29, #-32]
  4032c4:	ldr	w3, [sp, #56]
  4032c8:	sub	x0, x29, #0x31
  4032cc:	bl	403508 <wcrtomb@plt+0x758>
  4032d0:	stur	x0, [x29, #-40]
  4032d4:	ldur	w8, [x29, #-20]
  4032d8:	cmp	w8, #0x1
  4032dc:	b.ne	40330c <wcrtomb@plt+0x55c>  // b.any
  4032e0:	ldurb	w8, [x29, #-49]
  4032e4:	cmp	w8, #0x26
  4032e8:	b.eq	4032f8 <wcrtomb@plt+0x548>  // b.none
  4032ec:	ldurb	w8, [x29, #-49]
  4032f0:	cmp	w8, #0x5c
  4032f4:	b.ne	40330c <wcrtomb@plt+0x55c>  // b.any
  4032f8:	ldur	x8, [x29, #-48]
  4032fc:	add	x9, x8, #0x1
  403300:	stur	x9, [x29, #-48]
  403304:	mov	w10, #0x5c                  	// #92
  403308:	strb	w10, [x8]
  40330c:	ldurb	w8, [x29, #-49]
  403310:	ldur	x9, [x29, #-48]
  403314:	add	x10, x9, #0x1
  403318:	stur	x10, [x29, #-48]
  40331c:	strb	w8, [x9]
  403320:	b	40300c <wcrtomb@plt+0x25c>
  403324:	ldur	x8, [x29, #-40]
  403328:	add	x8, x8, #0x1
  40332c:	stur	x8, [x29, #-40]
  403330:	ldur	x9, [x29, #-32]
  403334:	cmp	x8, x9
  403338:	b.cs	4033a0 <wcrtomb@plt+0x5f0>  // b.hs, b.nlast
  40333c:	ldur	x8, [x29, #-40]
  403340:	ldrb	w0, [x8]
  403344:	bl	4028a0 <toupper@plt>
  403348:	eor	w9, w0, #0x40
  40334c:	ldur	x8, [x29, #-48]
  403350:	add	x10, x8, #0x1
  403354:	stur	x10, [x29, #-48]
  403358:	strb	w9, [x8]
  40335c:	ldur	x8, [x29, #-40]
  403360:	ldrb	w9, [x8]
  403364:	cmp	w9, #0x5c
  403368:	b.ne	403390 <wcrtomb@plt+0x5e0>  // b.any
  40336c:	ldur	x8, [x29, #-40]
  403370:	add	x8, x8, #0x1
  403374:	stur	x8, [x29, #-40]
  403378:	ldur	x8, [x29, #-40]
  40337c:	ldrb	w9, [x8]
  403380:	cmp	w9, #0x5c
  403384:	b.eq	403390 <wcrtomb@plt+0x5e0>  // b.none
  403388:	ldr	x0, [sp, #32]
  40338c:	bl	402ecc <wcrtomb@plt+0x11c>
  403390:	ldur	x8, [x29, #-40]
  403394:	add	x8, x8, #0x1
  403398:	stur	x8, [x29, #-40]
  40339c:	b	40300c <wcrtomb@plt+0x25c>
  4033a0:	ldur	w8, [x29, #-20]
  4033a4:	cbz	w8, 4033bc <wcrtomb@plt+0x60c>
  4033a8:	ldur	x8, [x29, #-48]
  4033ac:	add	x9, x8, #0x1
  4033b0:	stur	x9, [x29, #-48]
  4033b4:	mov	w10, #0x5c                  	// #92
  4033b8:	strb	w10, [x8]
  4033bc:	b	40300c <wcrtomb@plt+0x25c>
  4033c0:	ldur	w8, [x29, #-20]
  4033c4:	cbz	w8, 4033dc <wcrtomb@plt+0x62c>
  4033c8:	ldur	x8, [x29, #-48]
  4033cc:	add	x9, x8, #0x1
  4033d0:	stur	x9, [x29, #-48]
  4033d4:	mov	w10, #0x5c                  	// #92
  4033d8:	strb	w10, [x8]
  4033dc:	b	4034cc <wcrtomb@plt+0x71c>
  4033e0:	ldur	w8, [x29, #-20]
  4033e4:	cmp	w8, #0x2
  4033e8:	b.ne	4034cc <wcrtomb@plt+0x71c>  // b.any
  4033ec:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4033f0:	add	x8, x8, #0x8e0
  4033f4:	ldr	w9, [x8]
  4033f8:	cbz	w9, 4034cc <wcrtomb@plt+0x71c>
  4033fc:	ldur	x8, [x29, #-40]
  403400:	ldrb	w9, [x8]
  403404:	subs	w9, w9, #0x2e
  403408:	mov	w8, w9
  40340c:	ubfx	x8, x8, #0, #32
  403410:	cmp	x8, #0x2f
  403414:	str	x8, [sp, #8]
  403418:	b.hi	4034cc <wcrtomb@plt+0x71c>  // b.pmore
  40341c:	adrp	x8, 436000 <_obstack_memory_used@@Base+0x17e64>
  403420:	add	x8, x8, #0xf78
  403424:	ldr	x11, [sp, #8]
  403428:	ldrsw	x10, [x8, x11, lsl #2]
  40342c:	add	x9, x8, x10
  403430:	br	x9
  403434:	ldr	w8, [sp, #52]
  403438:	cbnz	w8, 403444 <wcrtomb@plt+0x694>
  40343c:	mov	w8, #0xffffffff            	// #-1
  403440:	str	w8, [sp, #52]
  403444:	b	4034cc <wcrtomb@plt+0x71c>
  403448:	ldr	w8, [sp, #52]
  40344c:	mov	w9, #0xffffffff            	// #-1
  403450:	cmp	w8, w9
  403454:	b.ne	403474 <wcrtomb@plt+0x6c4>  // b.any
  403458:	ldur	x8, [x29, #-40]
  40345c:	ldurb	w9, [x8, #-1]
  403460:	cmp	w9, #0x5b
  403464:	b.ne	403474 <wcrtomb@plt+0x6c4>  // b.any
  403468:	ldur	x8, [x29, #-40]
  40346c:	ldrb	w9, [x8]
  403470:	str	w9, [sp, #52]
  403474:	b	4034cc <wcrtomb@plt+0x71c>
  403478:	ldr	w8, [sp, #52]
  40347c:	cbnz	w8, 403484 <wcrtomb@plt+0x6d4>
  403480:	b	4034cc <wcrtomb@plt+0x71c>
  403484:	ldr	w8, [sp, #52]
  403488:	mov	w9, #0xffffffff            	// #-1
  40348c:	cmp	w8, w9
  403490:	b.ne	40349c <wcrtomb@plt+0x6ec>  // b.any
  403494:	str	wzr, [sp, #52]
  403498:	b	4034cc <wcrtomb@plt+0x71c>
  40349c:	ldur	x8, [x29, #-40]
  4034a0:	ldurb	w9, [x8, #-2]
  4034a4:	ldr	w10, [sp, #52]
  4034a8:	cmp	w9, w10
  4034ac:	b.eq	4034cc <wcrtomb@plt+0x71c>  // b.none
  4034b0:	ldur	x8, [x29, #-40]
  4034b4:	ldurb	w9, [x8, #-1]
  4034b8:	ldr	w10, [sp, #52]
  4034bc:	cmp	w9, w10
  4034c0:	b.ne	4034cc <wcrtomb@plt+0x71c>  // b.any
  4034c4:	mov	w8, #0xffffffff            	// #-1
  4034c8:	str	w8, [sp, #52]
  4034cc:	ldur	x8, [x29, #-40]
  4034d0:	add	x9, x8, #0x1
  4034d4:	stur	x9, [x29, #-40]
  4034d8:	ldrb	w10, [x8]
  4034dc:	ldur	x8, [x29, #-48]
  4034e0:	add	x9, x8, #0x1
  4034e4:	stur	x9, [x29, #-48]
  4034e8:	strb	w10, [x8]
  4034ec:	b	40300c <wcrtomb@plt+0x25c>
  4034f0:	ldur	x8, [x29, #-48]
  4034f4:	ldur	x9, [x29, #-8]
  4034f8:	subs	x0, x8, x9
  4034fc:	ldp	x29, x30, [sp, #112]
  403500:	add	sp, sp, #0x80
  403504:	ret
  403508:	sub	sp, sp, #0x40
  40350c:	mov	w8, #0x1                   	// #1
  403510:	str	x0, [sp, #56]
  403514:	str	x1, [sp, #48]
  403518:	str	x2, [sp, #40]
  40351c:	str	w3, [sp, #36]
  403520:	str	wzr, [sp, #32]
  403524:	str	w8, [sp, #28]
  403528:	ldr	x9, [sp, #48]
  40352c:	add	x9, x9, #0x1
  403530:	str	x9, [sp, #16]
  403534:	ldr	x8, [sp, #16]
  403538:	ldr	x9, [sp, #40]
  40353c:	mov	w10, #0x0                   	// #0
  403540:	cmp	x8, x9
  403544:	str	w10, [sp, #8]
  403548:	b.cs	40355c <wcrtomb@plt+0x7ac>  // b.hs, b.nlast
  40354c:	ldr	w8, [sp, #28]
  403550:	cmp	w8, #0xff
  403554:	cset	w8, le
  403558:	str	w8, [sp, #8]
  40355c:	ldr	w8, [sp, #8]
  403560:	tbnz	w8, #0, 403568 <wcrtomb@plt+0x7b8>
  403564:	b	4036bc <wcrtomb@plt+0x90c>
  403568:	mov	w8, #0xffffffff            	// #-1
  40356c:	str	w8, [sp, #12]
  403570:	ldr	x9, [sp, #16]
  403574:	ldrb	w8, [x9]
  403578:	subs	w8, w8, #0x30
  40357c:	mov	w9, w8
  403580:	ubfx	x9, x9, #0, #32
  403584:	cmp	x9, #0x36
  403588:	str	x9, [sp]
  40358c:	b.hi	403660 <wcrtomb@plt+0x8b0>  // b.pmore
  403590:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  403594:	add	x8, x8, #0x38
  403598:	ldr	x11, [sp]
  40359c:	ldrsw	x10, [x8, x11, lsl #2]
  4035a0:	add	x9, x8, x10
  4035a4:	br	x9
  4035a8:	str	wzr, [sp, #12]
  4035ac:	b	403660 <wcrtomb@plt+0x8b0>
  4035b0:	mov	w8, #0x1                   	// #1
  4035b4:	str	w8, [sp, #12]
  4035b8:	b	403660 <wcrtomb@plt+0x8b0>
  4035bc:	mov	w8, #0x2                   	// #2
  4035c0:	str	w8, [sp, #12]
  4035c4:	b	403660 <wcrtomb@plt+0x8b0>
  4035c8:	mov	w8, #0x3                   	// #3
  4035cc:	str	w8, [sp, #12]
  4035d0:	b	403660 <wcrtomb@plt+0x8b0>
  4035d4:	mov	w8, #0x4                   	// #4
  4035d8:	str	w8, [sp, #12]
  4035dc:	b	403660 <wcrtomb@plt+0x8b0>
  4035e0:	mov	w8, #0x5                   	// #5
  4035e4:	str	w8, [sp, #12]
  4035e8:	b	403660 <wcrtomb@plt+0x8b0>
  4035ec:	mov	w8, #0x6                   	// #6
  4035f0:	str	w8, [sp, #12]
  4035f4:	b	403660 <wcrtomb@plt+0x8b0>
  4035f8:	mov	w8, #0x7                   	// #7
  4035fc:	str	w8, [sp, #12]
  403600:	b	403660 <wcrtomb@plt+0x8b0>
  403604:	mov	w8, #0x8                   	// #8
  403608:	str	w8, [sp, #12]
  40360c:	b	403660 <wcrtomb@plt+0x8b0>
  403610:	mov	w8, #0x9                   	// #9
  403614:	str	w8, [sp, #12]
  403618:	b	403660 <wcrtomb@plt+0x8b0>
  40361c:	mov	w8, #0xa                   	// #10
  403620:	str	w8, [sp, #12]
  403624:	b	403660 <wcrtomb@plt+0x8b0>
  403628:	mov	w8, #0xb                   	// #11
  40362c:	str	w8, [sp, #12]
  403630:	b	403660 <wcrtomb@plt+0x8b0>
  403634:	mov	w8, #0xc                   	// #12
  403638:	str	w8, [sp, #12]
  40363c:	b	403660 <wcrtomb@plt+0x8b0>
  403640:	mov	w8, #0xd                   	// #13
  403644:	str	w8, [sp, #12]
  403648:	b	403660 <wcrtomb@plt+0x8b0>
  40364c:	mov	w8, #0xe                   	// #14
  403650:	str	w8, [sp, #12]
  403654:	b	403660 <wcrtomb@plt+0x8b0>
  403658:	mov	w8, #0xf                   	// #15
  40365c:	str	w8, [sp, #12]
  403660:	ldr	w8, [sp, #12]
  403664:	cmp	w8, #0x0
  403668:	cset	w8, lt  // lt = tstop
  40366c:	tbnz	w8, #0, 403680 <wcrtomb@plt+0x8d0>
  403670:	ldr	w8, [sp, #36]
  403674:	ldr	w9, [sp, #12]
  403678:	cmp	w8, w9
  40367c:	b.gt	403684 <wcrtomb@plt+0x8d4>
  403680:	b	4036bc <wcrtomb@plt+0x90c>
  403684:	ldr	w8, [sp, #32]
  403688:	ldr	w9, [sp, #36]
  40368c:	mul	w8, w8, w9
  403690:	ldr	w9, [sp, #12]
  403694:	add	w8, w8, w9
  403698:	str	w8, [sp, #32]
  40369c:	ldr	x8, [sp, #16]
  4036a0:	add	x8, x8, #0x1
  4036a4:	str	x8, [sp, #16]
  4036a8:	ldr	w9, [sp, #36]
  4036ac:	ldr	w10, [sp, #28]
  4036b0:	mul	w9, w10, w9
  4036b4:	str	w9, [sp, #28]
  4036b8:	b	403534 <wcrtomb@plt+0x784>
  4036bc:	ldr	x8, [sp, #16]
  4036c0:	ldr	x9, [sp, #48]
  4036c4:	add	x9, x9, #0x1
  4036c8:	cmp	x8, x9
  4036cc:	b.ne	4036e4 <wcrtomb@plt+0x934>  // b.any
  4036d0:	ldr	x8, [sp, #48]
  4036d4:	ldrb	w9, [x8]
  4036d8:	ldr	x8, [sp, #56]
  4036dc:	strb	w9, [x8]
  4036e0:	b	4036f0 <wcrtomb@plt+0x940>
  4036e4:	ldr	w8, [sp, #32]
  4036e8:	ldr	x9, [sp, #56]
  4036ec:	strb	w8, [x9]
  4036f0:	ldr	x0, [sp, #16]
  4036f4:	add	sp, sp, #0x40
  4036f8:	ret
  4036fc:	sub	sp, sp, #0x50
  403700:	stp	x29, x30, [sp, #64]
  403704:	add	x29, sp, #0x40
  403708:	mov	x8, xzr
  40370c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403710:	add	x9, x9, #0x550
  403714:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403718:	add	x10, x10, #0x538
  40371c:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403720:	add	x11, x11, #0x570
  403724:	mov	w12, #0x0                   	// #0
  403728:	adrp	x13, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40372c:	add	x13, x13, #0x3a8
  403730:	stur	x0, [x29, #-8]
  403734:	stur	x1, [x29, #-16]
  403738:	stur	x2, [x29, #-24]
  40373c:	str	x8, [x9, #24]
  403740:	ldur	x14, [x29, #-16]
  403744:	str	x14, [x9]
  403748:	ldr	x14, [x9]
  40374c:	str	x14, [x9, #8]
  403750:	ldr	x14, [x9, #8]
  403754:	ldur	x15, [x29, #-24]
  403758:	add	x14, x14, x15
  40375c:	str	x14, [x9, #16]
  403760:	str	xzr, [x10, #8]
  403764:	str	x8, [x10]
  403768:	ldr	x14, [x11]
  40376c:	add	x14, x14, #0x1
  403770:	str	x14, [x11]
  403774:	str	x14, [x10, #16]
  403778:	ldur	x0, [x29, #-8]
  40377c:	str	x8, [sp, #24]
  403780:	str	x9, [sp, #16]
  403784:	str	w12, [sp, #12]
  403788:	str	x13, [sp]
  40378c:	bl	4037c4 <wcrtomb@plt+0xa14>
  403790:	str	x0, [sp, #32]
  403794:	ldr	x8, [sp, #24]
  403798:	ldr	x9, [sp, #16]
  40379c:	str	x8, [x9]
  4037a0:	str	x8, [x9, #8]
  4037a4:	str	x8, [x9, #16]
  4037a8:	ldr	w12, [sp, #12]
  4037ac:	ldr	x10, [sp]
  4037b0:	strb	w12, [x10]
  4037b4:	ldr	x0, [sp, #32]
  4037b8:	ldp	x29, x30, [sp, #64]
  4037bc:	add	sp, sp, #0x50
  4037c0:	ret
  4037c4:	stp	x29, x30, [sp, #-80]!
  4037c8:	stp	x28, x25, [sp, #16]
  4037cc:	stp	x24, x23, [sp, #32]
  4037d0:	stp	x22, x21, [sp, #48]
  4037d4:	stp	x20, x19, [sp, #64]
  4037d8:	mov	x29, sp
  4037dc:	sub	sp, sp, #0x300
  4037e0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4037e4:	add	x8, x8, #0x5b0
  4037e8:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x18e64>
  4037ec:	add	x9, x9, #0x624
  4037f0:	add	x10, x9, #0xe
  4037f4:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4037f8:	add	x11, x11, #0x8e0
  4037fc:	add	x12, x9, #0x115
  403800:	add	x13, x9, #0x105
  403804:	add	x14, x9, #0x167
  403808:	adrp	x15, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40380c:	add	x15, x15, #0x8dc
  403810:	add	x16, x9, #0x232
  403814:	add	x17, x9, #0x14e
  403818:	add	x18, x9, #0x334
  40381c:	add	x1, x9, #0x35c
  403820:	add	x2, x9, #0x2fa
  403824:	add	x3, x9, #0xc4
  403828:	add	x4, x9, #0x84
  40382c:	adrp	x5, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403830:	add	x5, x5, #0x578
  403834:	add	x6, x9, #0x56
  403838:	add	x7, x9, #0xa5
  40383c:	adrp	x19, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403840:	add	x19, x19, #0x538
  403844:	add	x20, x9, #0x293
  403848:	adrp	x21, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40384c:	add	x21, x21, #0x550
  403850:	add	x22, x9, #0xe1
  403854:	add	x23, x9, #0x2b1
  403858:	add	x24, x9, #0x1d
  40385c:	add	x25, x9, #0x2e7
  403860:	stur	x0, [x29, #-8]
  403864:	ldur	x0, [x29, #-8]
  403868:	str	x8, [sp, #384]
  40386c:	str	x9, [sp, #376]
  403870:	str	x10, [sp, #368]
  403874:	str	x11, [sp, #360]
  403878:	str	x12, [sp, #352]
  40387c:	str	x13, [sp, #344]
  403880:	str	x14, [sp, #336]
  403884:	str	x15, [sp, #328]
  403888:	str	x16, [sp, #320]
  40388c:	str	x17, [sp, #312]
  403890:	str	x18, [sp, #304]
  403894:	str	x1, [sp, #296]
  403898:	str	x2, [sp, #288]
  40389c:	str	x3, [sp, #280]
  4038a0:	str	x4, [sp, #272]
  4038a4:	str	x5, [sp, #264]
  4038a8:	str	x6, [sp, #256]
  4038ac:	str	x7, [sp, #248]
  4038b0:	str	x19, [sp, #240]
  4038b4:	str	x20, [sp, #232]
  4038b8:	str	x21, [sp, #224]
  4038bc:	str	x22, [sp, #216]
  4038c0:	str	x23, [sp, #208]
  4038c4:	str	x24, [sp, #200]
  4038c8:	str	x25, [sp, #192]
  4038cc:	cbnz	x0, 40391c <wcrtomb@plt+0xb6c>
  4038d0:	mov	x0, #0x1                   	// #1
  4038d4:	mov	x1, #0x18                  	// #24
  4038d8:	bl	41d930 <wcrtomb@plt+0x1ab80>
  4038dc:	stur	x0, [x29, #-8]
  4038e0:	ldur	x8, [x29, #-8]
  4038e4:	mov	x9, xzr
  4038e8:	str	x9, [x8]
  4038ec:	ldur	x8, [x29, #-8]
  4038f0:	str	xzr, [x8, #8]
  4038f4:	ldur	x8, [x29, #-8]
  4038f8:	str	xzr, [x8, #16]
  4038fc:	ldr	x0, [sp, #384]
  403900:	mov	x1, x9
  403904:	mov	x2, x9
  403908:	adrp	x3, 41d000 <wcrtomb@plt+0x1a250>
  40390c:	add	x3, x3, #0x908
  403910:	adrp	x4, 402000 <mbrtowc@plt-0x690>
  403914:	add	x4, x4, #0xb40
  403918:	bl	41db00 <_obstack_begin@@Base>
  40391c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403920:	add	x8, x8, #0x580
  403924:	ldr	x8, [x8]
  403928:	cbz	x8, 40393c <wcrtomb@plt+0xb8c>
  40392c:	mov	x8, xzr
  403930:	mov	x0, x8
  403934:	mov	w1, #0xa                   	// #10
  403938:	bl	404fb4 <wcrtomb@plt+0x2204>
  40393c:	bl	4051b8 <wcrtomb@plt+0x2408>
  403940:	stur	w0, [x29, #-28]
  403944:	mov	w8, #0x1                   	// #1
  403948:	cmp	w0, #0x3b
  40394c:	str	w8, [sp, #188]
  403950:	b.eq	403970 <wcrtomb@plt+0xbc0>  // b.none
  403954:	bl	402b20 <__ctype_b_loc@plt>
  403958:	ldr	x8, [x0]
  40395c:	ldursw	x9, [x29, #-28]
  403960:	ldrh	w10, [x8, x9, lsl #1]
  403964:	tst	w10, #0x2000
  403968:	cset	w10, ne  // ne = any
  40396c:	str	w10, [sp, #188]
  403970:	ldr	w8, [sp, #188]
  403974:	tbnz	w8, #0, 40397c <wcrtomb@plt+0xbcc>
  403978:	b	403980 <wcrtomb@plt+0xbd0>
  40397c:	b	40393c <wcrtomb@plt+0xb8c>
  403980:	ldur	w8, [x29, #-28]
  403984:	mov	w9, #0xffffffff            	// #-1
  403988:	cmp	w8, w9
  40398c:	b.ne	403994 <wcrtomb@plt+0xbe4>  // b.any
  403990:	b	404a18 <wcrtomb@plt+0x1c68>
  403994:	sub	x0, x29, #0x8
  403998:	bl	405274 <wcrtomb@plt+0x24c4>
  40399c:	stur	x0, [x29, #-16]
  4039a0:	ldur	w1, [x29, #-28]
  4039a4:	sub	x0, x29, #0x40
  4039a8:	bl	405344 <wcrtomb@plt+0x2594>
  4039ac:	tbnz	w0, #0, 4039b4 <wcrtomb@plt+0xc04>
  4039b0:	b	403aa4 <wcrtomb@plt+0xcf4>
  4039b4:	ldur	w8, [x29, #-64]
  4039b8:	cmp	w8, #0x4
  4039bc:	b.eq	4039cc <wcrtomb@plt+0xc1c>  // b.none
  4039c0:	ldur	w8, [x29, #-64]
  4039c4:	cmp	w8, #0x5
  4039c8:	b.ne	4039d8 <wcrtomb@plt+0xc28>  // b.any
  4039cc:	ldr	x0, [sp, #200]
  4039d0:	bl	402d40 <gettext@plt>
  4039d4:	bl	402ecc <wcrtomb@plt+0x11c>
  4039d8:	sub	x0, x29, #0x40
  4039dc:	mov	x1, #0x20                  	// #32
  4039e0:	bl	41d984 <wcrtomb@plt+0x1abd4>
  4039e4:	ldur	x8, [x29, #-16]
  4039e8:	str	x0, [x8]
  4039ec:	bl	4055f8 <wcrtomb@plt+0x2848>
  4039f0:	stur	w0, [x29, #-28]
  4039f4:	ldur	w9, [x29, #-28]
  4039f8:	cmp	w9, #0x2c
  4039fc:	b.ne	403a44 <wcrtomb@plt+0xc94>  // b.any
  403a00:	bl	4055f8 <wcrtomb@plt+0x2848>
  403a04:	sub	x8, x29, #0x40
  403a08:	str	w0, [sp, #184]
  403a0c:	mov	x0, x8
  403a10:	ldr	w1, [sp, #184]
  403a14:	bl	405344 <wcrtomb@plt+0x2594>
  403a18:	tbnz	w0, #0, 403a28 <wcrtomb@plt+0xc78>
  403a1c:	ldr	x0, [sp, #368]
  403a20:	bl	402d40 <gettext@plt>
  403a24:	bl	402ecc <wcrtomb@plt+0x11c>
  403a28:	sub	x0, x29, #0x40
  403a2c:	mov	x1, #0x20                  	// #32
  403a30:	bl	41d984 <wcrtomb@plt+0x1abd4>
  403a34:	ldur	x8, [x29, #-16]
  403a38:	str	x0, [x8, #8]
  403a3c:	bl	4055f8 <wcrtomb@plt+0x2848>
  403a40:	stur	w0, [x29, #-28]
  403a44:	ldur	x8, [x29, #-16]
  403a48:	ldr	x8, [x8]
  403a4c:	ldr	w9, [x8]
  403a50:	cmp	w9, #0x2
  403a54:	b.ne	403aa4 <wcrtomb@plt+0xcf4>  // b.any
  403a58:	ldur	x8, [x29, #-16]
  403a5c:	ldr	x8, [x8]
  403a60:	ldr	x8, [x8, #8]
  403a64:	cbnz	x8, 403aa4 <wcrtomb@plt+0xcf4>
  403a68:	ldur	x8, [x29, #-16]
  403a6c:	ldr	x8, [x8, #8]
  403a70:	cbz	x8, 403a98 <wcrtomb@plt+0xce8>
  403a74:	ldur	x8, [x29, #-16]
  403a78:	ldr	x8, [x8, #8]
  403a7c:	ldr	w9, [x8]
  403a80:	cmp	w9, #0x1
  403a84:	b.ne	403a98 <wcrtomb@plt+0xce8>  // b.any
  403a88:	ldr	x8, [sp, #360]
  403a8c:	ldr	w9, [x8]
  403a90:	cmp	w9, #0x2
  403a94:	b.ne	403aa4 <wcrtomb@plt+0xcf4>  // b.any
  403a98:	ldr	x0, [sp, #208]
  403a9c:	bl	402d40 <gettext@plt>
  403aa0:	bl	402ecc <wcrtomb@plt+0x11c>
  403aa4:	ldur	w8, [x29, #-28]
  403aa8:	cmp	w8, #0x21
  403aac:	b.ne	403adc <wcrtomb@plt+0xd2c>  // b.any
  403ab0:	ldur	x8, [x29, #-16]
  403ab4:	mov	w9, #0x1                   	// #1
  403ab8:	strb	w9, [x8, #20]
  403abc:	bl	4055f8 <wcrtomb@plt+0x2848>
  403ac0:	stur	w0, [x29, #-28]
  403ac4:	ldur	w9, [x29, #-28]
  403ac8:	cmp	w9, #0x21
  403acc:	b.ne	403adc <wcrtomb@plt+0xd2c>  // b.any
  403ad0:	ldr	x0, [sp, #376]
  403ad4:	bl	402d40 <gettext@plt>
  403ad8:	bl	402ecc <wcrtomb@plt+0x11c>
  403adc:	ldr	x8, [sp, #360]
  403ae0:	ldr	w9, [x8]
  403ae4:	cmp	w9, #0x2
  403ae8:	b.ne	403bf0 <wcrtomb@plt+0xe40>  // b.any
  403aec:	ldur	w8, [x29, #-28]
  403af0:	cmp	w8, #0x3d
  403af4:	str	w8, [sp, #180]
  403af8:	b.eq	403bd8 <wcrtomb@plt+0xe28>  // b.none
  403afc:	b	403b00 <wcrtomb@plt+0xd50>
  403b00:	ldr	w8, [sp, #180]
  403b04:	cmp	w8, #0x46
  403b08:	b.eq	403bcc <wcrtomb@plt+0xe1c>  // b.none
  403b0c:	b	403b10 <wcrtomb@plt+0xd60>
  403b10:	ldr	w8, [sp, #180]
  403b14:	cmp	w8, #0x4c
  403b18:	b.eq	403bcc <wcrtomb@plt+0xe1c>  // b.none
  403b1c:	b	403b20 <wcrtomb@plt+0xd70>
  403b20:	ldr	w8, [sp, #180]
  403b24:	subs	w9, w8, #0x51
  403b28:	cmp	w9, #0x1
  403b2c:	b.ls	403bcc <wcrtomb@plt+0xe1c>  // b.plast
  403b30:	b	403b34 <wcrtomb@plt+0xd84>
  403b34:	ldr	w8, [sp, #180]
  403b38:	cmp	w8, #0x54
  403b3c:	b.eq	403bcc <wcrtomb@plt+0xe1c>  // b.none
  403b40:	b	403b44 <wcrtomb@plt+0xd94>
  403b44:	ldr	w8, [sp, #180]
  403b48:	cmp	w8, #0x57
  403b4c:	b.eq	403bcc <wcrtomb@plt+0xe1c>  // b.none
  403b50:	b	403b54 <wcrtomb@plt+0xda4>
  403b54:	ldr	w8, [sp, #180]
  403b58:	cmp	w8, #0x61
  403b5c:	b.eq	403bd8 <wcrtomb@plt+0xe28>  // b.none
  403b60:	b	403b64 <wcrtomb@plt+0xdb4>
  403b64:	ldr	w8, [sp, #180]
  403b68:	cmp	w8, #0x65
  403b6c:	b.eq	403bcc <wcrtomb@plt+0xe1c>  // b.none
  403b70:	b	403b74 <wcrtomb@plt+0xdc4>
  403b74:	ldr	w8, [sp, #180]
  403b78:	cmp	w8, #0x69
  403b7c:	b.eq	403bd8 <wcrtomb@plt+0xe28>  // b.none
  403b80:	b	403b84 <wcrtomb@plt+0xdd4>
  403b84:	ldr	w8, [sp, #180]
  403b88:	cmp	w8, #0x6c
  403b8c:	b.eq	403bd8 <wcrtomb@plt+0xe28>  // b.none
  403b90:	b	403b94 <wcrtomb@plt+0xde4>
  403b94:	ldr	w8, [sp, #180]
  403b98:	cmp	w8, #0x72
  403b9c:	b.eq	403bd8 <wcrtomb@plt+0xe28>  // b.none
  403ba0:	b	403ba4 <wcrtomb@plt+0xdf4>
  403ba4:	ldr	w8, [sp, #180]
  403ba8:	cmp	w8, #0x76
  403bac:	b.eq	403bcc <wcrtomb@plt+0xe1c>  // b.none
  403bb0:	b	403bb4 <wcrtomb@plt+0xe04>
  403bb4:	ldr	w8, [sp, #180]
  403bb8:	cmp	w8, #0x7a
  403bbc:	cset	w9, eq  // eq = none
  403bc0:	eor	w9, w9, #0x1
  403bc4:	tbnz	w9, #0, 403bf0 <wcrtomb@plt+0xe40>
  403bc8:	b	403bcc <wcrtomb@plt+0xe1c>
  403bcc:	ldur	w8, [x29, #-28]
  403bd0:	mov	w0, w8
  403bd4:	bl	405634 <wcrtomb@plt+0x2884>
  403bd8:	ldur	x8, [x29, #-16]
  403bdc:	ldr	x8, [x8, #8]
  403be0:	cbz	x8, 403bf0 <wcrtomb@plt+0xe40>
  403be4:	ldr	x0, [sp, #352]
  403be8:	bl	402d40 <gettext@plt>
  403bec:	bl	402ecc <wcrtomb@plt+0x11c>
  403bf0:	ldur	w8, [x29, #-28]
  403bf4:	ldur	x9, [x29, #-16]
  403bf8:	strb	w8, [x9, #21]
  403bfc:	ldur	w8, [x29, #-28]
  403c00:	add	w8, w8, #0x1
  403c04:	mov	w9, w8
  403c08:	ubfx	x9, x9, #0, #32
  403c0c:	cmp	x9, #0x7e
  403c10:	str	x9, [sp, #168]
  403c14:	b.hi	4049f8 <wcrtomb@plt+0x1c48>  // b.pmore
  403c18:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  403c1c:	add	x8, x8, #0x114
  403c20:	ldr	x11, [sp, #168]
  403c24:	ldrsw	x10, [x8, x11, lsl #2]
  403c28:	add	x9, x8, x10
  403c2c:	br	x9
  403c30:	ldur	x8, [x29, #-16]
  403c34:	ldr	x8, [x8]
  403c38:	cbz	x8, 403c48 <wcrtomb@plt+0xe98>
  403c3c:	ldr	x0, [sp, #216]
  403c40:	bl	402d40 <gettext@plt>
  403c44:	bl	402ecc <wcrtomb@plt+0x11c>
  403c48:	bl	4051b8 <wcrtomb@plt+0x2408>
  403c4c:	stur	w0, [x29, #-28]
  403c50:	ldur	w8, [x29, #-28]
  403c54:	cmp	w8, #0x6e
  403c58:	b.ne	403ce4 <wcrtomb@plt+0xf34>  // b.any
  403c5c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403c60:	add	x8, x8, #0x3a8
  403c64:	ldrb	w9, [x8]
  403c68:	tbnz	w9, #0, 403c70 <wcrtomb@plt+0xec0>
  403c6c:	b	403ce4 <wcrtomb@plt+0xf34>
  403c70:	ldr	x8, [sp, #240]
  403c74:	ldr	x9, [x8, #8]
  403c78:	cmp	x9, #0x2
  403c7c:	b.cs	403ce4 <wcrtomb@plt+0xf34>  // b.hs, b.nlast
  403c80:	ldr	x8, [sp, #224]
  403c84:	ldr	x9, [x8]
  403c88:	cbz	x9, 403ca4 <wcrtomb@plt+0xef4>
  403c8c:	ldr	x8, [sp, #224]
  403c90:	ldr	x9, [x8, #8]
  403c94:	ldr	x10, [x8]
  403c98:	add	x10, x10, #0x2
  403c9c:	cmp	x9, x10
  403ca0:	b.eq	403cd4 <wcrtomb@plt+0xf24>  // b.none
  403ca4:	ldr	x8, [sp, #224]
  403ca8:	ldr	x9, [x8, #24]
  403cac:	cbz	x9, 403ce4 <wcrtomb@plt+0xf34>
  403cb0:	ldr	x8, [sp, #224]
  403cb4:	ldr	x9, [x8]
  403cb8:	cbnz	x9, 403ce4 <wcrtomb@plt+0xf34>
  403cbc:	ldr	x8, [sp, #224]
  403cc0:	ldr	x0, [x8, #24]
  403cc4:	bl	402780 <ftell@plt>
  403cc8:	mov	x8, #0x2                   	// #2
  403ccc:	cmp	x8, x0
  403cd0:	b.ne	403ce4 <wcrtomb@plt+0xf34>  // b.any
  403cd4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403cd8:	add	x8, x8, #0x755
  403cdc:	mov	w9, #0x1                   	// #1
  403ce0:	strb	w9, [x8]
  403ce4:	ldur	w8, [x29, #-28]
  403ce8:	mov	w9, #0xffffffff            	// #-1
  403cec:	mov	w10, #0x0                   	// #0
  403cf0:	cmp	w8, w9
  403cf4:	str	w10, [sp, #164]
  403cf8:	b.eq	403d0c <wcrtomb@plt+0xf5c>  // b.none
  403cfc:	ldur	w8, [x29, #-28]
  403d00:	cmp	w8, #0xa
  403d04:	cset	w8, ne  // ne = any
  403d08:	str	w8, [sp, #164]
  403d0c:	ldr	w8, [sp, #164]
  403d10:	tbnz	w8, #0, 403d18 <wcrtomb@plt+0xf68>
  403d14:	b	403d24 <wcrtomb@plt+0xf74>
  403d18:	bl	4051b8 <wcrtomb@plt+0x2408>
  403d1c:	stur	w0, [x29, #-28]
  403d20:	b	403ce4 <wcrtomb@plt+0xf34>
  403d24:	b	40393c <wcrtomb@plt+0xb8c>
  403d28:	bl	405688 <wcrtomb@plt+0x28d8>
  403d2c:	stur	x0, [x29, #-72]
  403d30:	ldur	x8, [x29, #-72]
  403d34:	ldrb	w9, [x8]
  403d38:	cbnz	w9, 403d4c <wcrtomb@plt+0xf9c>
  403d3c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  403d40:	add	x8, x8, #0xa0a
  403d44:	str	x8, [sp, #152]
  403d48:	b	403d54 <wcrtomb@plt+0xfa4>
  403d4c:	ldur	x8, [x29, #-72]
  403d50:	str	x8, [sp, #152]
  403d54:	ldr	x8, [sp, #152]
  403d58:	stur	x8, [x29, #-80]
  403d5c:	ldur	x0, [x29, #-80]
  403d60:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  403d64:	add	x1, x1, #0xa0e
  403d68:	bl	402940 <strverscmp@plt>
  403d6c:	cmp	w0, #0x0
  403d70:	cset	w9, le
  403d74:	tbnz	w9, #0, 403d84 <wcrtomb@plt+0xfd4>
  403d78:	ldr	x0, [sp, #232]
  403d7c:	bl	402d40 <gettext@plt>
  403d80:	bl	402ecc <wcrtomb@plt+0x11c>
  403d84:	ldur	x0, [x29, #-72]
  403d88:	bl	402b40 <free@plt>
  403d8c:	ldr	x8, [sp, #360]
  403d90:	str	wzr, [x8]
  403d94:	b	40393c <wcrtomb@plt+0xb8c>
  403d98:	ldr	x8, [sp, #264]
  403d9c:	ldr	x0, [x8]
  403da0:	ldur	x9, [x29, #-8]
  403da4:	ldr	x1, [x9, #16]
  403da8:	mov	x9, xzr
  403dac:	mov	x2, x9
  403db0:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403db4:	add	x3, x3, #0x538
  403db8:	bl	40578c <wcrtomb@plt+0x29dc>
  403dbc:	ldr	x8, [sp, #264]
  403dc0:	str	x0, [x8]
  403dc4:	ldur	x9, [x29, #-16]
  403dc8:	ldrb	w10, [x9, #20]
  403dcc:	cmp	w10, #0x0
  403dd0:	cset	w10, ne  // ne = any
  403dd4:	eor	w10, w10, #0x1
  403dd8:	and	w10, w10, #0x1
  403ddc:	ldur	x9, [x29, #-16]
  403de0:	strb	w10, [x9, #20]
  403de4:	b	404a04 <wcrtomb@plt+0x1c54>
  403de8:	ldr	x8, [sp, #264]
  403dec:	ldr	x9, [x8]
  403df0:	cbnz	x9, 403e00 <wcrtomb@plt+0x1050>
  403df4:	ldr	x0, [sp, #256]
  403df8:	bl	402d40 <gettext@plt>
  403dfc:	bl	402ecc <wcrtomb@plt+0x11c>
  403e00:	ldur	x8, [x29, #-16]
  403e04:	ldr	x8, [x8]
  403e08:	cbz	x8, 403e18 <wcrtomb@plt+0x1068>
  403e0c:	ldr	x0, [sp, #248]
  403e10:	bl	402d40 <gettext@plt>
  403e14:	bl	402ecc <wcrtomb@plt+0x11c>
  403e18:	bl	405940 <wcrtomb@plt+0x2b90>
  403e1c:	ldur	x8, [x29, #-8]
  403e20:	ldr	x8, [x8, #16]
  403e24:	ldur	x9, [x29, #-8]
  403e28:	ldr	x9, [x9]
  403e2c:	ldr	x10, [sp, #264]
  403e30:	ldr	x11, [x10]
  403e34:	ldr	x11, [x11]
  403e38:	mov	x12, #0x28                  	// #40
  403e3c:	mul	x11, x12, x11
  403e40:	add	x9, x9, x11
  403e44:	str	x8, [x9, #24]
  403e48:	ldr	x0, [x10]
  403e4c:	bl	404d84 <wcrtomb@plt+0x1fd4>
  403e50:	ldr	x8, [sp, #264]
  403e54:	str	x0, [x8]
  403e58:	b	404a04 <wcrtomb@plt+0x1c54>
  403e5c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403e60:	add	x8, x8, #0x758
  403e64:	ldrb	w9, [x8]
  403e68:	tbnz	w9, #0, 403e70 <wcrtomb@plt+0x10c0>
  403e6c:	b	403e7c <wcrtomb@plt+0x10cc>
  403e70:	ldr	x0, [sp, #304]
  403e74:	bl	402d40 <gettext@plt>
  403e78:	bl	402ecc <wcrtomb@plt+0x11c>
  403e7c:	bl	4055f8 <wcrtomb@plt+0x2848>
  403e80:	stur	w0, [x29, #-28]
  403e84:	ldur	w8, [x29, #-28]
  403e88:	mov	w9, #0xffffffff            	// #-1
  403e8c:	cmp	w8, w9
  403e90:	b.eq	403ea0 <wcrtomb@plt+0x10f0>  // b.none
  403e94:	ldur	w8, [x29, #-28]
  403e98:	cmp	w8, #0xa
  403e9c:	b.ne	403eac <wcrtomb@plt+0x10fc>  // b.any
  403ea0:	ldur	x8, [x29, #-16]
  403ea4:	str	xzr, [x8, #32]
  403ea8:	b	404a04 <wcrtomb@plt+0x1c54>
  403eac:	b	403eb8 <wcrtomb@plt+0x1108>
  403eb0:	bl	4055f8 <wcrtomb@plt+0x2848>
  403eb4:	stur	w0, [x29, #-28]
  403eb8:	ldur	w8, [x29, #-28]
  403ebc:	mov	w9, #0xffffffff            	// #-1
  403ec0:	cmp	w8, w9
  403ec4:	b.ne	403ed4 <wcrtomb@plt+0x1124>  // b.any
  403ec8:	ldr	x0, [sp, #272]
  403ecc:	bl	402d40 <gettext@plt>
  403ed0:	bl	402ecc <wcrtomb@plt+0x11c>
  403ed4:	ldur	w8, [x29, #-28]
  403ed8:	cmp	w8, #0x5c
  403edc:	b.ne	403eec <wcrtomb@plt+0x113c>  // b.any
  403ee0:	bl	4051b8 <wcrtomb@plt+0x2408>
  403ee4:	stur	w0, [x29, #-28]
  403ee8:	b	403f18 <wcrtomb@plt+0x1168>
  403eec:	ldr	x8, [sp, #360]
  403ef0:	ldr	w9, [x8]
  403ef4:	cmp	w9, #0x2
  403ef8:	b.ne	403f08 <wcrtomb@plt+0x1158>  // b.any
  403efc:	ldr	x0, [sp, #272]
  403f00:	bl	402d40 <gettext@plt>
  403f04:	bl	402ecc <wcrtomb@plt+0x11c>
  403f08:	ldur	w0, [x29, #-28]
  403f0c:	bl	4059c8 <wcrtomb@plt+0x2c18>
  403f10:	mov	w8, #0xa                   	// #10
  403f14:	stur	w8, [x29, #-28]
  403f18:	ldur	x8, [x29, #-16]
  403f1c:	add	x0, x8, #0x18
  403f20:	ldur	w1, [x29, #-28]
  403f24:	bl	404fb4 <wcrtomb@plt+0x2204>
  403f28:	b	404a04 <wcrtomb@plt+0x1c54>
  403f2c:	ldur	x8, [x29, #-16]
  403f30:	ldr	x8, [x8]
  403f34:	cbz	x8, 403f44 <wcrtomb@plt+0x1194>
  403f38:	ldr	x0, [sp, #280]
  403f3c:	bl	402d40 <gettext@plt>
  403f40:	bl	402ecc <wcrtomb@plt+0x11c>
  403f44:	bl	405688 <wcrtomb@plt+0x28d8>
  403f48:	stur	x0, [x29, #-88]
  403f4c:	ldur	x8, [x29, #-88]
  403f50:	ldrb	w9, [x8]
  403f54:	cbnz	w9, 403f64 <wcrtomb@plt+0x11b4>
  403f58:	ldr	x0, [sp, #288]
  403f5c:	bl	402d40 <gettext@plt>
  403f60:	bl	402ecc <wcrtomb@plt+0x11c>
  403f64:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403f68:	add	x8, x8, #0x598
  403f6c:	ldr	x0, [x8]
  403f70:	ldur	x9, [x29, #-8]
  403f74:	ldr	x1, [x9, #16]
  403f78:	ldur	x2, [x29, #-88]
  403f7c:	mov	x9, xzr
  403f80:	mov	x3, x9
  403f84:	str	x8, [sp, #144]
  403f88:	bl	40578c <wcrtomb@plt+0x29dc>
  403f8c:	ldr	x8, [sp, #144]
  403f90:	str	x0, [x8]
  403f94:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403f98:	add	x9, x9, #0x759
  403f9c:	ldrb	w10, [x9]
  403fa0:	tbnz	w10, #0, 403fa8 <wcrtomb@plt+0x11f8>
  403fa4:	b	403fb8 <wcrtomb@plt+0x1208>
  403fa8:	ldur	x0, [x29, #-88]
  403fac:	bl	402a10 <strdup@plt>
  403fb0:	ldur	x8, [x29, #-16]
  403fb4:	str	x0, [x8, #24]
  403fb8:	b	404a04 <wcrtomb@plt+0x1c54>
  403fbc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  403fc0:	add	x8, x8, #0x590
  403fc4:	ldr	x0, [x8]
  403fc8:	ldur	x9, [x29, #-8]
  403fcc:	ldr	x1, [x9, #16]
  403fd0:	str	x8, [sp, #136]
  403fd4:	str	x0, [sp, #128]
  403fd8:	str	x1, [sp, #120]
  403fdc:	bl	405688 <wcrtomb@plt+0x28d8>
  403fe0:	ldr	x8, [sp, #128]
  403fe4:	str	x0, [sp, #112]
  403fe8:	mov	x0, x8
  403fec:	ldr	x1, [sp, #120]
  403ff0:	ldr	x2, [sp, #112]
  403ff4:	mov	x9, xzr
  403ff8:	mov	x3, x9
  403ffc:	bl	40578c <wcrtomb@plt+0x29dc>
  404000:	ldr	x8, [sp, #136]
  404004:	str	x0, [x8]
  404008:	b	404a04 <wcrtomb@plt+0x1c54>
  40400c:	ldur	x8, [x29, #-16]
  404010:	ldr	x8, [x8, #8]
  404014:	cbz	x8, 404024 <wcrtomb@plt+0x1274>
  404018:	ldr	x0, [sp, #352]
  40401c:	bl	402d40 <gettext@plt>
  404020:	bl	402ecc <wcrtomb@plt+0x11c>
  404024:	bl	4055f8 <wcrtomb@plt+0x2848>
  404028:	stur	w0, [x29, #-28]
  40402c:	bl	402b20 <__ctype_b_loc@plt>
  404030:	ldr	x8, [x0]
  404034:	ldur	w9, [x29, #-28]
  404038:	and	w9, w9, #0xff
  40403c:	ldrh	w9, [x8, w9, sxtw #1]
  404040:	and	w9, w9, #0x800
  404044:	cbz	w9, 40406c <wcrtomb@plt+0x12bc>
  404048:	ldr	x8, [sp, #360]
  40404c:	ldr	w9, [x8]
  404050:	cmp	w9, #0x2
  404054:	b.eq	40406c <wcrtomb@plt+0x12bc>  // b.none
  404058:	ldur	w0, [x29, #-28]
  40405c:	bl	405aa8 <wcrtomb@plt+0x2cf8>
  404060:	ldur	x8, [x29, #-16]
  404064:	str	w0, [x8, #24]
  404068:	b	404080 <wcrtomb@plt+0x12d0>
  40406c:	ldur	x8, [x29, #-16]
  404070:	mov	w9, #0xffffffff            	// #-1
  404074:	str	w9, [x8, #24]
  404078:	ldur	w0, [x29, #-28]
  40407c:	bl	4059c8 <wcrtomb@plt+0x2c18>
  404080:	bl	405940 <wcrtomb@plt+0x2b90>
  404084:	b	404a04 <wcrtomb@plt+0x1c54>
  404088:	bl	405940 <wcrtomb@plt+0x2b90>
  40408c:	b	404a04 <wcrtomb@plt+0x1c54>
  404090:	bl	405b18 <wcrtomb@plt+0x2d68>
  404094:	stur	x0, [x29, #-24]
  404098:	ldur	x0, [x29, #-24]
  40409c:	bl	40db80 <wcrtomb@plt+0xadd0>
  4040a0:	bl	4026f0 <strlen@plt>
  4040a4:	cbnz	x0, 4040b4 <wcrtomb@plt+0x1304>
  4040a8:	ldr	x0, [sp, #296]
  4040ac:	bl	402d40 <gettext@plt>
  4040b0:	bl	402ecc <wcrtomb@plt+0x11c>
  4040b4:	ldur	x0, [x29, #-24]
  4040b8:	bl	40db80 <wcrtomb@plt+0xadd0>
  4040bc:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  4040c0:	ldur	x8, [x29, #-16]
  4040c4:	str	x0, [x8, #24]
  4040c8:	ldur	x0, [x29, #-24]
  4040cc:	bl	40ddb4 <wcrtomb@plt+0xb004>
  4040d0:	b	404a04 <wcrtomb@plt+0x1c54>
  4040d4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4040d8:	add	x8, x8, #0x470
  4040dc:	ldr	x1, [x8]
  4040e0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4040e4:	add	x0, x0, #0x5a0
  4040e8:	mov	w9, wzr
  4040ec:	mov	w2, w9
  4040f0:	bl	405bd0 <wcrtomb@plt+0x2e20>
  4040f4:	ldur	x8, [x29, #-16]
  4040f8:	str	x0, [x8, #24]
  4040fc:	b	404a04 <wcrtomb@plt+0x1c54>
  404100:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404104:	add	x8, x8, #0x478
  404108:	ldr	x1, [x8]
  40410c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404110:	add	x0, x0, #0x5a8
  404114:	mov	w2, #0x1                   	// #1
  404118:	bl	405bd0 <wcrtomb@plt+0x2e20>
  40411c:	ldur	x8, [x29, #-16]
  404120:	str	x0, [x8, #24]
  404124:	b	404a04 <wcrtomb@plt+0x1c54>
  404128:	bl	4051b8 <wcrtomb@plt+0x2408>
  40412c:	stur	w0, [x29, #-104]
  404130:	ldur	w0, [x29, #-104]
  404134:	mov	w1, #0x1                   	// #1
  404138:	bl	405ee0 <wcrtomb@plt+0x3130>
  40413c:	stur	x0, [x29, #-24]
  404140:	cbnz	x0, 404150 <wcrtomb@plt+0x13a0>
  404144:	ldr	x0, [sp, #312]
  404148:	bl	402d40 <gettext@plt>
  40414c:	bl	402ecc <wcrtomb@plt+0x11c>
  404150:	ldur	w0, [x29, #-104]
  404154:	mov	w8, wzr
  404158:	mov	w1, w8
  40415c:	bl	405ee0 <wcrtomb@plt+0x3130>
  404160:	stur	x0, [x29, #-96]
  404164:	cbnz	x0, 404174 <wcrtomb@plt+0x13c4>
  404168:	ldr	x0, [sp, #312]
  40416c:	bl	402d40 <gettext@plt>
  404170:	bl	402ecc <wcrtomb@plt+0x11c>
  404174:	ldr	x8, [sp, #384]
  404178:	stur	x8, [x29, #-112]
  40417c:	ldur	x9, [x29, #-112]
  404180:	stur	x9, [x29, #-120]
  404184:	mov	x9, #0x28                  	// #40
  404188:	stur	x9, [x29, #-128]
  40418c:	ldur	x9, [x29, #-120]
  404190:	stur	x9, [x29, #-136]
  404194:	ldur	x9, [x29, #-136]
  404198:	ldr	x9, [x9, #32]
  40419c:	ldur	x10, [x29, #-136]
  4041a0:	ldr	x10, [x10, #24]
  4041a4:	subs	x9, x9, x10
  4041a8:	stur	x9, [x29, #-144]
  4041ac:	ldur	x9, [x29, #-144]
  4041b0:	ldur	x10, [x29, #-128]
  4041b4:	cmp	x9, x10
  4041b8:	b.cs	4041c8 <wcrtomb@plt+0x1418>  // b.hs, b.nlast
  4041bc:	ldur	x0, [x29, #-120]
  4041c0:	ldur	x1, [x29, #-128]
  4041c4:	bl	41dd10 <_obstack_newchunk@@Base>
  4041c8:	ldur	x8, [x29, #-128]
  4041cc:	ldur	x9, [x29, #-120]
  4041d0:	ldr	x10, [x9, #24]
  4041d4:	add	x8, x10, x8
  4041d8:	str	x8, [x9, #24]
  4041dc:	ldur	x8, [x29, #-112]
  4041e0:	stur	x8, [x29, #-160]
  4041e4:	ldur	x8, [x29, #-160]
  4041e8:	ldr	x8, [x8, #16]
  4041ec:	stur	x8, [x29, #-168]
  4041f0:	ldur	x8, [x29, #-160]
  4041f4:	ldr	x8, [x8, #24]
  4041f8:	ldur	x9, [x29, #-168]
  4041fc:	cmp	x8, x9
  404200:	b.ne	404218 <wcrtomb@plt+0x1468>  // b.any
  404204:	ldur	x8, [x29, #-160]
  404208:	ldrb	w9, [x8, #80]
  40420c:	and	w9, w9, #0xfffffffd
  404210:	orr	w9, w9, #0x2
  404214:	strb	w9, [x8, #80]
  404218:	ldur	x8, [x29, #-160]
  40421c:	ldr	x8, [x8, #24]
  404220:	mov	x9, xzr
  404224:	subs	x8, x8, #0x0
  404228:	ldur	x10, [x29, #-160]
  40422c:	ldr	x10, [x10, #48]
  404230:	add	x8, x8, x10
  404234:	ldur	x10, [x29, #-160]
  404238:	ldr	x10, [x10, #48]
  40423c:	bic	x8, x8, x10
  404240:	add	x8, x9, x8
  404244:	ldur	x9, [x29, #-160]
  404248:	str	x8, [x9, #24]
  40424c:	ldur	x8, [x29, #-160]
  404250:	ldr	x8, [x8, #24]
  404254:	ldur	x9, [x29, #-160]
  404258:	ldr	x9, [x9, #8]
  40425c:	subs	x8, x8, x9
  404260:	ldur	x9, [x29, #-160]
  404264:	ldr	x9, [x9, #32]
  404268:	ldur	x10, [x29, #-160]
  40426c:	ldr	x10, [x10, #8]
  404270:	subs	x9, x9, x10
  404274:	cmp	x8, x9
  404278:	b.ls	40428c <wcrtomb@plt+0x14dc>  // b.plast
  40427c:	ldur	x8, [x29, #-160]
  404280:	ldr	x8, [x8, #32]
  404284:	ldur	x9, [x29, #-160]
  404288:	str	x8, [x9, #24]
  40428c:	ldur	x8, [x29, #-160]
  404290:	ldr	x8, [x8, #24]
  404294:	ldur	x9, [x29, #-160]
  404298:	str	x8, [x9, #16]
  40429c:	ldur	x8, [x29, #-168]
  4042a0:	stur	x8, [x29, #-176]
  4042a4:	ldur	x8, [x29, #-176]
  4042a8:	stur	x8, [x29, #-152]
  4042ac:	ldur	x8, [x29, #-152]
  4042b0:	ldur	x9, [x29, #-16]
  4042b4:	str	x8, [x9, #24]
  4042b8:	ldur	x8, [x29, #-16]
  4042bc:	ldr	x0, [x8, #24]
  4042c0:	ldur	x8, [x29, #-96]
  4042c4:	str	x0, [sp, #104]
  4042c8:	mov	x0, x8
  4042cc:	bl	40db80 <wcrtomb@plt+0xadd0>
  4042d0:	ldur	x8, [x29, #-96]
  4042d4:	str	x0, [sp, #96]
  4042d8:	mov	x0, x8
  4042dc:	bl	40db98 <wcrtomb@plt+0xade8>
  4042e0:	ldr	x8, [sp, #104]
  4042e4:	str	x0, [sp, #88]
  4042e8:	mov	x0, x8
  4042ec:	ldr	x1, [sp, #96]
  4042f0:	ldr	x2, [sp, #88]
  4042f4:	bl	4060f8 <wcrtomb@plt+0x3348>
  4042f8:	ldur	x0, [x29, #-96]
  4042fc:	bl	40ddb4 <wcrtomb@plt+0xb004>
  404300:	ldur	x8, [x29, #-16]
  404304:	ldr	x0, [x8, #24]
  404308:	bl	406448 <wcrtomb@plt+0x3698>
  40430c:	stur	w0, [x29, #-100]
  404310:	ldur	x0, [x29, #-24]
  404314:	ldur	w1, [x29, #-100]
  404318:	ldur	x8, [x29, #-16]
  40431c:	ldr	x8, [x8, #24]
  404320:	ldrb	w10, [x8, #32]
  404324:	mov	w11, #0x4                   	// #4
  404328:	lsr	w10, w10, w11
  40432c:	and	w10, w10, #0xff
  404330:	add	w2, w10, #0x1
  404334:	bl	40b5bc <wcrtomb@plt+0x880c>
  404338:	ldur	x8, [x29, #-16]
  40433c:	ldr	x8, [x8, #24]
  404340:	str	x0, [x8]
  404344:	ldur	x0, [x29, #-24]
  404348:	bl	40ddb4 <wcrtomb@plt+0xb004>
  40434c:	ldur	x8, [x29, #-16]
  404350:	ldr	x8, [x8, #24]
  404354:	ldrb	w10, [x8, #32]
  404358:	mov	w11, #0x3                   	// #3
  40435c:	lsr	w10, w10, w11
  404360:	and	w10, w10, #0x1
  404364:	and	w10, w10, #0xff
  404368:	cbz	w10, 40438c <wcrtomb@plt+0x15dc>
  40436c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404370:	add	x8, x8, #0x758
  404374:	ldrb	w9, [x8]
  404378:	tbnz	w9, #0, 404380 <wcrtomb@plt+0x15d0>
  40437c:	b	40438c <wcrtomb@plt+0x15dc>
  404380:	ldr	x0, [sp, #304]
  404384:	bl	402d40 <gettext@plt>
  404388:	bl	402ecc <wcrtomb@plt+0x11c>
  40438c:	b	404a04 <wcrtomb@plt+0x1c54>
  404390:	bl	4051b8 <wcrtomb@plt+0x2408>
  404394:	stur	w0, [x29, #-196]
  404398:	ldur	w0, [x29, #-196]
  40439c:	mov	w8, wzr
  4043a0:	mov	w1, w8
  4043a4:	bl	405ee0 <wcrtomb@plt+0x3130>
  4043a8:	stur	x0, [x29, #-24]
  4043ac:	cbnz	x0, 4043bc <wcrtomb@plt+0x160c>
  4043b0:	ldr	x0, [sp, #336]
  4043b4:	bl	402d40 <gettext@plt>
  4043b8:	bl	402ecc <wcrtomb@plt+0x11c>
  4043bc:	ldur	x0, [x29, #-24]
  4043c0:	bl	40db80 <wcrtomb@plt+0xadd0>
  4043c4:	stur	x0, [x29, #-216]
  4043c8:	ldur	x0, [x29, #-216]
  4043cc:	ldur	x8, [x29, #-24]
  4043d0:	str	x0, [sp, #80]
  4043d4:	mov	x0, x8
  4043d8:	bl	40db98 <wcrtomb@plt+0xade8>
  4043dc:	ldr	x8, [sp, #80]
  4043e0:	str	x0, [sp, #72]
  4043e4:	mov	x0, x8
  4043e8:	ldr	x1, [sp, #72]
  4043ec:	mov	w9, wzr
  4043f0:	mov	w2, w9
  4043f4:	str	w9, [sp, #68]
  4043f8:	bl	402fbc <wcrtomb@plt+0x20c>
  4043fc:	stur	x0, [x29, #-184]
  404400:	ldur	w0, [x29, #-196]
  404404:	ldr	w1, [sp, #68]
  404408:	bl	405ee0 <wcrtomb@plt+0x3130>
  40440c:	stur	x0, [x29, #-208]
  404410:	cbnz	x0, 404420 <wcrtomb@plt+0x1670>
  404414:	ldr	x0, [sp, #336]
  404418:	bl	402d40 <gettext@plt>
  40441c:	bl	402ecc <wcrtomb@plt+0x11c>
  404420:	ldur	x0, [x29, #-208]
  404424:	bl	40db80 <wcrtomb@plt+0xadd0>
  404428:	stur	x0, [x29, #-224]
  40442c:	ldur	x0, [x29, #-224]
  404430:	ldur	x8, [x29, #-208]
  404434:	str	x0, [sp, #56]
  404438:	mov	x0, x8
  40443c:	bl	40db98 <wcrtomb@plt+0xade8>
  404440:	ldr	x8, [sp, #56]
  404444:	str	x0, [sp, #48]
  404448:	mov	x0, x8
  40444c:	ldr	x1, [sp, #48]
  404450:	mov	w9, wzr
  404454:	mov	w2, w9
  404458:	bl	402fbc <wcrtomb@plt+0x20c>
  40445c:	stur	x0, [x29, #-192]
  404460:	ldr	x8, [sp, #328]
  404464:	ldr	w9, [x8]
  404468:	cmp	w9, #0x1
  40446c:	b.le	4047ec <wcrtomb@plt+0x1a3c>
  404470:	ldur	x0, [x29, #-184]
  404474:	mov	x1, #0x8                   	// #8
  404478:	bl	41d930 <wcrtomb@plt+0x1ab80>
  40447c:	str	x0, [sp, #504]
  404480:	str	xzr, [sp, #480]
  404484:	stur	xzr, [x29, #-232]
  404488:	stur	xzr, [x29, #-240]
  40448c:	ldur	x8, [x29, #-232]
  404490:	ldur	x9, [x29, #-184]
  404494:	cmp	x8, x9
  404498:	b.cs	404548 <wcrtomb@plt+0x1798>  // b.hs, b.nlast
  40449c:	ldr	x8, [sp, #328]
  4044a0:	ldr	w9, [x8]
  4044a4:	cmp	w9, #0x1
  4044a8:	b.ne	4044b8 <wcrtomb@plt+0x1708>  // b.any
  4044ac:	mov	x8, #0x1                   	// #1
  4044b0:	str	x8, [sp, #40]
  4044b4:	b	4044e4 <wcrtomb@plt+0x1734>
  4044b8:	ldur	x8, [x29, #-216]
  4044bc:	ldur	x9, [x29, #-232]
  4044c0:	add	x1, x8, x9
  4044c4:	ldur	x8, [x29, #-184]
  4044c8:	ldur	x9, [x29, #-232]
  4044cc:	subs	x2, x8, x9
  4044d0:	mov	x8, xzr
  4044d4:	mov	x0, x8
  4044d8:	add	x3, sp, #0x1e0
  4044dc:	bl	41da58 <wcrtomb@plt+0x1aca8>
  4044e0:	str	x0, [sp, #40]
  4044e4:	ldr	x8, [sp, #40]
  4044e8:	str	x8, [sp, #488]
  4044ec:	ldr	x8, [sp, #488]
  4044f0:	mov	x9, #0xffffffffffffffff    	// #-1
  4044f4:	cmp	x8, x9
  4044f8:	b.eq	404514 <wcrtomb@plt+0x1764>  // b.none
  4044fc:	ldr	x8, [sp, #488]
  404500:	mov	x9, #0xfffffffffffffffe    	// #-2
  404504:	cmp	x8, x9
  404508:	b.eq	404514 <wcrtomb@plt+0x1764>  // b.none
  40450c:	ldr	x8, [sp, #488]
  404510:	cbnz	x8, 40451c <wcrtomb@plt+0x176c>
  404514:	mov	x8, #0x1                   	// #1
  404518:	str	x8, [sp, #488]
  40451c:	ldr	x8, [sp, #488]
  404520:	ldr	x9, [sp, #504]
  404524:	ldur	x10, [x29, #-240]
  404528:	add	x11, x10, #0x1
  40452c:	stur	x11, [x29, #-240]
  404530:	str	x8, [x9, x10, lsl #3]
  404534:	ldr	x8, [sp, #488]
  404538:	ldur	x9, [x29, #-232]
  40453c:	add	x8, x9, x8
  404540:	stur	x8, [x29, #-232]
  404544:	b	40448c <wcrtomb@plt+0x16dc>
  404548:	ldur	x8, [x29, #-240]
  40454c:	stur	x8, [x29, #-256]
  404550:	str	xzr, [sp, #480]
  404554:	stur	xzr, [x29, #-248]
  404558:	ldur	x8, [x29, #-256]
  40455c:	mov	x9, #0x2                   	// #2
  404560:	mul	x8, x9, x8
  404564:	add	x0, x8, #0x1
  404568:	mov	x1, #0x8                   	// #8
  40456c:	bl	41d930 <wcrtomb@plt+0x1ab80>
  404570:	str	x0, [sp, #496]
  404574:	ldr	x8, [sp, #496]
  404578:	ldur	x9, [x29, #-16]
  40457c:	str	x8, [x9, #24]
  404580:	stur	xzr, [x29, #-232]
  404584:	ldur	x8, [x29, #-232]
  404588:	ldur	x9, [x29, #-256]
  40458c:	cmp	x8, x9
  404590:	b.cs	4047a8 <wcrtomb@plt+0x19f8>  // b.hs, b.nlast
  404594:	ldur	x8, [x29, #-248]
  404598:	ldur	x9, [x29, #-192]
  40459c:	cmp	x8, x9
  4045a0:	b.cc	4045b0 <wcrtomb@plt+0x1800>  // b.lo, b.ul, b.last
  4045a4:	ldr	x0, [sp, #320]
  4045a8:	bl	402d40 <gettext@plt>
  4045ac:	bl	402ecc <wcrtomb@plt+0x11c>
  4045b0:	ldr	x8, [sp, #504]
  4045b4:	ldur	x9, [x29, #-232]
  4045b8:	mov	x10, #0x8                   	// #8
  4045bc:	ldr	x8, [x8, x9, lsl #3]
  4045c0:	add	x0, x8, #0x1
  4045c4:	str	x10, [sp, #32]
  4045c8:	bl	41d908 <wcrtomb@plt+0x1ab58>
  4045cc:	ldr	x8, [sp, #496]
  4045d0:	ldur	x9, [x29, #-232]
  4045d4:	mov	x10, #0x2                   	// #2
  4045d8:	mul	x9, x10, x9
  4045dc:	ldr	x11, [sp, #32]
  4045e0:	mul	x9, x11, x9
  4045e4:	add	x8, x8, x9
  4045e8:	str	x0, [x8]
  4045ec:	ldr	x8, [sp, #496]
  4045f0:	ldur	x9, [x29, #-232]
  4045f4:	mul	x9, x10, x9
  4045f8:	mul	x9, x11, x9
  4045fc:	add	x8, x8, x9
  404600:	ldr	x0, [x8]
  404604:	ldur	x1, [x29, #-216]
  404608:	ldr	x8, [sp, #504]
  40460c:	ldur	x9, [x29, #-232]
  404610:	ldr	x2, [x8, x9, lsl #3]
  404614:	str	x10, [sp, #24]
  404618:	bl	4026a0 <memcpy@plt>
  40461c:	ldr	x8, [sp, #496]
  404620:	ldur	x9, [x29, #-232]
  404624:	ldr	x10, [sp, #24]
  404628:	mul	x9, x10, x9
  40462c:	ldr	x11, [sp, #32]
  404630:	mul	x9, x11, x9
  404634:	add	x8, x8, x9
  404638:	ldr	x8, [x8]
  40463c:	ldr	x9, [sp, #504]
  404640:	ldur	x12, [x29, #-232]
  404644:	ldr	x9, [x9, x12, lsl #3]
  404648:	add	x8, x8, x9
  40464c:	mov	w13, #0x0                   	// #0
  404650:	strb	w13, [x8]
  404654:	ldr	x8, [sp, #504]
  404658:	ldur	x9, [x29, #-232]
  40465c:	ldr	x8, [x8, x9, lsl #3]
  404660:	ldur	x9, [x29, #-216]
  404664:	add	x8, x9, x8
  404668:	stur	x8, [x29, #-216]
  40466c:	ldr	x8, [sp, #328]
  404670:	ldr	w13, [x8]
  404674:	cmp	w13, #0x1
  404678:	b.ne	404688 <wcrtomb@plt+0x18d8>  // b.any
  40467c:	mov	x8, #0x1                   	// #1
  404680:	str	x8, [sp, #16]
  404684:	b	4046b4 <wcrtomb@plt+0x1904>
  404688:	ldur	x8, [x29, #-224]
  40468c:	ldur	x9, [x29, #-248]
  404690:	add	x1, x8, x9
  404694:	ldur	x8, [x29, #-192]
  404698:	ldur	x9, [x29, #-248]
  40469c:	subs	x2, x8, x9
  4046a0:	mov	x8, xzr
  4046a4:	mov	x0, x8
  4046a8:	add	x3, sp, #0x1e0
  4046ac:	bl	41da58 <wcrtomb@plt+0x1aca8>
  4046b0:	str	x0, [sp, #16]
  4046b4:	ldr	x8, [sp, #16]
  4046b8:	str	x8, [sp, #488]
  4046bc:	ldr	x8, [sp, #488]
  4046c0:	mov	x9, #0xffffffffffffffff    	// #-1
  4046c4:	cmp	x8, x9
  4046c8:	b.eq	4046e4 <wcrtomb@plt+0x1934>  // b.none
  4046cc:	ldr	x8, [sp, #488]
  4046d0:	mov	x9, #0xfffffffffffffffe    	// #-2
  4046d4:	cmp	x8, x9
  4046d8:	b.eq	4046e4 <wcrtomb@plt+0x1934>  // b.none
  4046dc:	ldr	x8, [sp, #488]
  4046e0:	cbnz	x8, 4046ec <wcrtomb@plt+0x193c>
  4046e4:	mov	x8, #0x1                   	// #1
  4046e8:	str	x8, [sp, #488]
  4046ec:	ldr	x8, [sp, #488]
  4046f0:	add	x0, x8, #0x1
  4046f4:	bl	41d908 <wcrtomb@plt+0x1ab58>
  4046f8:	ldr	x8, [sp, #496]
  4046fc:	ldur	x9, [x29, #-232]
  404700:	mov	x10, #0x2                   	// #2
  404704:	mul	x9, x10, x9
  404708:	add	x9, x9, #0x1
  40470c:	mov	x11, #0x8                   	// #8
  404710:	mul	x9, x11, x9
  404714:	add	x8, x8, x9
  404718:	str	x0, [x8]
  40471c:	ldr	x8, [sp, #496]
  404720:	ldur	x9, [x29, #-232]
  404724:	mul	x9, x10, x9
  404728:	add	x9, x9, #0x1
  40472c:	mul	x9, x11, x9
  404730:	add	x8, x8, x9
  404734:	ldr	x0, [x8]
  404738:	ldur	x8, [x29, #-224]
  40473c:	ldur	x9, [x29, #-248]
  404740:	add	x1, x8, x9
  404744:	ldr	x2, [sp, #488]
  404748:	str	x10, [sp, #8]
  40474c:	str	x11, [sp]
  404750:	bl	4026a0 <memcpy@plt>
  404754:	ldr	x8, [sp, #496]
  404758:	ldur	x9, [x29, #-232]
  40475c:	ldr	x10, [sp, #8]
  404760:	mul	x9, x10, x9
  404764:	add	x9, x9, #0x1
  404768:	ldr	x11, [sp]
  40476c:	mul	x9, x11, x9
  404770:	add	x8, x8, x9
  404774:	ldr	x8, [x8]
  404778:	ldr	x9, [sp, #488]
  40477c:	add	x8, x8, x9
  404780:	mov	w12, #0x0                   	// #0
  404784:	strb	w12, [x8]
  404788:	ldr	x8, [sp, #488]
  40478c:	ldur	x9, [x29, #-248]
  404790:	add	x8, x9, x8
  404794:	stur	x8, [x29, #-248]
  404798:	ldur	x8, [x29, #-232]
  40479c:	add	x8, x8, #0x1
  4047a0:	stur	x8, [x29, #-232]
  4047a4:	b	404584 <wcrtomb@plt+0x17d4>
  4047a8:	ldr	x8, [sp, #496]
  4047ac:	ldur	x9, [x29, #-232]
  4047b0:	mov	x10, #0x2                   	// #2
  4047b4:	mul	x9, x10, x9
  4047b8:	mov	x10, #0x8                   	// #8
  4047bc:	mul	x9, x10, x9
  4047c0:	add	x8, x8, x9
  4047c4:	mov	x9, xzr
  4047c8:	str	x9, [x8]
  4047cc:	ldur	x8, [x29, #-248]
  4047d0:	ldur	x9, [x29, #-192]
  4047d4:	cmp	x8, x9
  4047d8:	b.eq	4047e8 <wcrtomb@plt+0x1a38>  // b.none
  4047dc:	ldr	x0, [sp, #320]
  4047e0:	bl	402d40 <gettext@plt>
  4047e4:	bl	402ecc <wcrtomb@plt+0x11c>
  4047e8:	b	4049d4 <wcrtomb@plt+0x1c24>
  4047ec:	ldr	x8, [sp, #384]
  4047f0:	str	x8, [sp, #464]
  4047f4:	ldr	x9, [sp, #464]
  4047f8:	str	x9, [sp, #456]
  4047fc:	mov	x9, #0x100                 	// #256
  404800:	str	x9, [sp, #448]
  404804:	ldr	x9, [sp, #456]
  404808:	str	x9, [sp, #440]
  40480c:	ldr	x9, [sp, #440]
  404810:	ldr	x9, [x9, #32]
  404814:	ldr	x10, [sp, #440]
  404818:	ldr	x10, [x10, #24]
  40481c:	subs	x9, x9, x10
  404820:	str	x9, [sp, #432]
  404824:	ldr	x9, [sp, #432]
  404828:	ldr	x10, [sp, #448]
  40482c:	cmp	x9, x10
  404830:	b.cs	404840 <wcrtomb@plt+0x1a90>  // b.hs, b.nlast
  404834:	ldr	x0, [sp, #456]
  404838:	ldr	x1, [sp, #448]
  40483c:	bl	41dd10 <_obstack_newchunk@@Base>
  404840:	ldr	x8, [sp, #448]
  404844:	ldr	x9, [sp, #456]
  404848:	ldr	x10, [x9, #24]
  40484c:	add	x8, x10, x8
  404850:	str	x8, [x9, #24]
  404854:	ldr	x8, [sp, #464]
  404858:	str	x8, [sp, #416]
  40485c:	ldr	x8, [sp, #416]
  404860:	ldr	x8, [x8, #16]
  404864:	str	x8, [sp, #408]
  404868:	ldr	x8, [sp, #416]
  40486c:	ldr	x8, [x8, #24]
  404870:	ldr	x9, [sp, #408]
  404874:	cmp	x8, x9
  404878:	b.ne	404890 <wcrtomb@plt+0x1ae0>  // b.any
  40487c:	ldr	x8, [sp, #416]
  404880:	ldrb	w9, [x8, #80]
  404884:	and	w9, w9, #0xfffffffd
  404888:	orr	w9, w9, #0x2
  40488c:	strb	w9, [x8, #80]
  404890:	ldr	x8, [sp, #416]
  404894:	ldr	x8, [x8, #24]
  404898:	mov	x9, xzr
  40489c:	subs	x8, x8, #0x0
  4048a0:	ldr	x10, [sp, #416]
  4048a4:	ldr	x10, [x10, #48]
  4048a8:	add	x8, x8, x10
  4048ac:	ldr	x10, [sp, #416]
  4048b0:	ldr	x10, [x10, #48]
  4048b4:	bic	x8, x8, x10
  4048b8:	add	x8, x9, x8
  4048bc:	ldr	x9, [sp, #416]
  4048c0:	str	x8, [x9, #24]
  4048c4:	ldr	x8, [sp, #416]
  4048c8:	ldr	x8, [x8, #24]
  4048cc:	ldr	x9, [sp, #416]
  4048d0:	ldr	x9, [x9, #8]
  4048d4:	subs	x8, x8, x9
  4048d8:	ldr	x9, [sp, #416]
  4048dc:	ldr	x9, [x9, #32]
  4048e0:	ldr	x10, [sp, #416]
  4048e4:	ldr	x10, [x10, #8]
  4048e8:	subs	x9, x9, x10
  4048ec:	cmp	x8, x9
  4048f0:	b.ls	404904 <wcrtomb@plt+0x1b54>  // b.plast
  4048f4:	ldr	x8, [sp, #416]
  4048f8:	ldr	x8, [x8, #32]
  4048fc:	ldr	x9, [sp, #416]
  404900:	str	x8, [x9, #24]
  404904:	ldr	x8, [sp, #416]
  404908:	ldr	x8, [x8, #24]
  40490c:	ldr	x9, [sp, #416]
  404910:	str	x8, [x9, #16]
  404914:	ldr	x8, [sp, #408]
  404918:	str	x8, [sp, #400]
  40491c:	ldr	x8, [sp, #400]
  404920:	str	x8, [sp, #424]
  404924:	ldr	x8, [sp, #424]
  404928:	str	x8, [sp, #472]
  40492c:	ldur	x8, [x29, #-216]
  404930:	str	x8, [sp, #392]
  404934:	ldur	x8, [x29, #-184]
  404938:	ldur	x9, [x29, #-192]
  40493c:	cmp	x8, x9
  404940:	b.eq	404950 <wcrtomb@plt+0x1ba0>  // b.none
  404944:	ldr	x0, [sp, #320]
  404948:	bl	402d40 <gettext@plt>
  40494c:	bl	402ecc <wcrtomb@plt+0x11c>
  404950:	stur	xzr, [x29, #-184]
  404954:	ldur	x8, [x29, #-184]
  404958:	cmp	x8, #0x100
  40495c:	b.cs	404984 <wcrtomb@plt+0x1bd4>  // b.hs, b.nlast
  404960:	ldur	x8, [x29, #-184]
  404964:	ldr	x9, [sp, #472]
  404968:	ldur	x10, [x29, #-184]
  40496c:	add	x9, x9, x10
  404970:	strb	w8, [x9]
  404974:	ldur	x8, [x29, #-184]
  404978:	add	x8, x8, #0x1
  40497c:	stur	x8, [x29, #-184]
  404980:	b	404954 <wcrtomb@plt+0x1ba4>
  404984:	ldur	x8, [x29, #-192]
  404988:	subs	x9, x8, #0x1
  40498c:	stur	x9, [x29, #-192]
  404990:	cbz	x8, 4049c8 <wcrtomb@plt+0x1c18>
  404994:	ldur	x8, [x29, #-224]
  404998:	add	x9, x8, #0x1
  40499c:	stur	x9, [x29, #-224]
  4049a0:	ldrb	w10, [x8]
  4049a4:	ldr	x8, [sp, #472]
  4049a8:	ldr	x9, [sp, #392]
  4049ac:	add	x11, x9, #0x1
  4049b0:	str	x11, [sp, #392]
  4049b4:	ldrb	w12, [x9]
  4049b8:	mov	w9, w12
  4049bc:	add	x8, x8, x9
  4049c0:	strb	w10, [x8]
  4049c4:	b	404984 <wcrtomb@plt+0x1bd4>
  4049c8:	ldr	x8, [sp, #472]
  4049cc:	ldur	x9, [x29, #-16]
  4049d0:	str	x8, [x9, #24]
  4049d4:	bl	405940 <wcrtomb@plt+0x2b90>
  4049d8:	ldur	x0, [x29, #-24]
  4049dc:	bl	40ddb4 <wcrtomb@plt+0xb004>
  4049e0:	ldur	x0, [x29, #-208]
  4049e4:	bl	40ddb4 <wcrtomb@plt+0xb004>
  4049e8:	b	404a04 <wcrtomb@plt+0x1c54>
  4049ec:	ldr	x0, [sp, #344]
  4049f0:	bl	402d40 <gettext@plt>
  4049f4:	bl	402ecc <wcrtomb@plt+0x11c>
  4049f8:	ldur	w8, [x29, #-28]
  4049fc:	mov	w0, w8
  404a00:	bl	405634 <wcrtomb@plt+0x2884>
  404a04:	ldur	x8, [x29, #-8]
  404a08:	ldr	x9, [x8, #16]
  404a0c:	add	x9, x9, #0x1
  404a10:	str	x9, [x8, #16]
  404a14:	b	40393c <wcrtomb@plt+0xb8c>
  404a18:	ldr	x8, [sp, #360]
  404a1c:	ldr	w9, [x8]
  404a20:	cmp	w9, #0x2
  404a24:	b.ne	404a44 <wcrtomb@plt+0x1c94>  // b.any
  404a28:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404a2c:	add	x8, x8, #0x580
  404a30:	ldr	x8, [x8]
  404a34:	cbz	x8, 404a44 <wcrtomb@plt+0x1c94>
  404a38:	ldr	x0, [sp, #192]
  404a3c:	bl	402d40 <gettext@plt>
  404a40:	bl	402ecc <wcrtomb@plt+0x11c>
  404a44:	ldur	x0, [x29, #-8]
  404a48:	add	sp, sp, #0x300
  404a4c:	ldp	x20, x19, [sp, #64]
  404a50:	ldp	x22, x21, [sp, #48]
  404a54:	ldp	x24, x23, [sp, #32]
  404a58:	ldp	x28, x25, [sp, #16]
  404a5c:	ldp	x29, x30, [sp], #80
  404a60:	ret
  404a64:	sub	sp, sp, #0x40
  404a68:	stp	x29, x30, [sp, #48]
  404a6c:	add	x29, sp, #0x30
  404a70:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404a74:	add	x8, x8, #0x520
  404a78:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404a7c:	add	x9, x9, #0x550
  404a80:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404a84:	add	x10, x10, #0x538
  404a88:	stur	x0, [x29, #-8]
  404a8c:	stur	x1, [x29, #-16]
  404a90:	ldr	x8, [x8]
  404a94:	str	x8, [x9, #24]
  404a98:	ldur	x8, [x29, #-16]
  404a9c:	ldrb	w11, [x8]
  404aa0:	cmp	w11, #0x2d
  404aa4:	str	x9, [sp, #16]
  404aa8:	str	x10, [sp, #8]
  404aac:	b.ne	404abc <wcrtomb@plt+0x1d0c>  // b.any
  404ab0:	ldur	x8, [x29, #-16]
  404ab4:	ldrb	w9, [x8, #1]
  404ab8:	cbz	w9, 404ad8 <wcrtomb@plt+0x1d28>
  404abc:	ldur	x0, [x29, #-16]
  404ac0:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  404ac4:	add	x1, x1, #0x9e5
  404ac8:	mov	w2, #0x1                   	// #1
  404acc:	bl	40ceac <wcrtomb@plt+0xa0fc>
  404ad0:	ldr	x8, [sp, #16]
  404ad4:	str	x0, [x8, #24]
  404ad8:	mov	x8, #0x1                   	// #1
  404adc:	ldr	x9, [sp, #8]
  404ae0:	str	x8, [x9, #8]
  404ae4:	ldur	x8, [x29, #-16]
  404ae8:	str	x8, [x9]
  404aec:	str	xzr, [x9, #16]
  404af0:	ldur	x0, [x29, #-8]
  404af4:	bl	4037c4 <wcrtomb@plt+0xa14>
  404af8:	str	x0, [sp, #24]
  404afc:	ldr	x8, [sp, #16]
  404b00:	ldr	x9, [x8, #24]
  404b04:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404b08:	add	x10, x10, #0x520
  404b0c:	ldr	x10, [x10]
  404b10:	cmp	x9, x10
  404b14:	b.eq	404b24 <wcrtomb@plt+0x1d74>  // b.none
  404b18:	ldr	x8, [sp, #16]
  404b1c:	ldr	x0, [x8, #24]
  404b20:	bl	40d590 <wcrtomb@plt+0xa7e0>
  404b24:	mov	x8, xzr
  404b28:	ldr	x9, [sp, #16]
  404b2c:	str	x8, [x9, #24]
  404b30:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404b34:	add	x8, x8, #0x3a8
  404b38:	mov	w10, #0x0                   	// #0
  404b3c:	strb	w10, [x8]
  404b40:	ldr	x0, [sp, #24]
  404b44:	ldp	x29, x30, [sp, #48]
  404b48:	add	sp, sp, #0x40
  404b4c:	ret
  404b50:	sub	sp, sp, #0x50
  404b54:	stp	x29, x30, [sp, #64]
  404b58:	add	x29, sp, #0x40
  404b5c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404b60:	add	x8, x8, #0x578
  404b64:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404b68:	add	x9, x9, #0x580
  404b6c:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404b70:	add	x10, x10, #0x588
  404b74:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404b78:	add	x11, x11, #0x598
  404b7c:	adrp	x12, 437000 <_obstack_memory_used@@Base+0x18e64>
  404b80:	add	x12, x12, #0x624
  404b84:	add	x12, x12, #0x48
  404b88:	stur	x0, [x29, #-8]
  404b8c:	ldr	x8, [x8]
  404b90:	str	x9, [sp, #32]
  404b94:	str	x10, [sp, #24]
  404b98:	str	x11, [sp, #16]
  404b9c:	str	x12, [sp, #8]
  404ba0:	cbz	x8, 404bd4 <wcrtomb@plt+0x1e24>
  404ba4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404ba8:	add	x8, x8, #0x578
  404bac:	ldr	x8, [x8]
  404bb0:	ldr	q0, [x8, #16]
  404bb4:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404bb8:	add	x9, x9, #0x538
  404bbc:	str	q0, [x9]
  404bc0:	ldr	x8, [x8, #32]
  404bc4:	str	x8, [x9, #16]
  404bc8:	ldr	x0, [sp, #8]
  404bcc:	bl	402d40 <gettext@plt>
  404bd0:	bl	402ecc <wcrtomb@plt+0x11c>
  404bd4:	ldr	x8, [sp, #32]
  404bd8:	ldr	x9, [x8]
  404bdc:	cbz	x9, 404c4c <wcrtomb@plt+0x1e9c>
  404be0:	ldr	x8, [sp, #32]
  404be4:	ldr	x0, [x8]
  404be8:	bl	40db98 <wcrtomb@plt+0xade8>
  404bec:	ldr	x8, [sp, #24]
  404bf0:	ldr	x9, [x8]
  404bf4:	str	x0, [x9, #8]
  404bf8:	ldr	x9, [x8]
  404bfc:	ldr	x9, [x9, #8]
  404c00:	cbz	x9, 404c34 <wcrtomb@plt+0x1e84>
  404c04:	ldr	x8, [sp, #32]
  404c08:	ldr	x0, [x8]
  404c0c:	bl	40db80 <wcrtomb@plt+0xadd0>
  404c10:	ldr	x8, [sp, #24]
  404c14:	ldr	x9, [x8]
  404c18:	ldr	x9, [x9, #8]
  404c1c:	mov	x10, #0x1                   	// #1
  404c20:	mul	x1, x9, x10
  404c24:	bl	41d984 <wcrtomb@plt+0x1abd4>
  404c28:	ldr	x8, [sp, #24]
  404c2c:	ldr	x9, [x8]
  404c30:	str	x0, [x9]
  404c34:	ldr	x8, [sp, #32]
  404c38:	ldr	x0, [x8]
  404c3c:	bl	40ddb4 <wcrtomb@plt+0xb004>
  404c40:	mov	x8, xzr
  404c44:	ldr	x9, [sp, #32]
  404c48:	str	x8, [x9]
  404c4c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404c50:	add	x8, x8, #0x590
  404c54:	ldr	x8, [x8]
  404c58:	stur	x8, [x29, #-16]
  404c5c:	ldur	x8, [x29, #-16]
  404c60:	cbz	x8, 404d38 <wcrtomb@plt+0x1f88>
  404c64:	ldr	x8, [sp, #16]
  404c68:	ldr	x9, [x8]
  404c6c:	stur	x9, [x29, #-24]
  404c70:	ldur	x8, [x29, #-24]
  404c74:	cbz	x8, 404ca4 <wcrtomb@plt+0x1ef4>
  404c78:	ldur	x8, [x29, #-24]
  404c7c:	ldr	x0, [x8, #8]
  404c80:	ldur	x8, [x29, #-16]
  404c84:	ldr	x1, [x8, #8]
  404c88:	bl	402b10 <strcmp@plt>
  404c8c:	cbnz	w0, 404c94 <wcrtomb@plt+0x1ee4>
  404c90:	b	404ca4 <wcrtomb@plt+0x1ef4>
  404c94:	ldur	x8, [x29, #-24]
  404c98:	ldr	x8, [x8, #40]
  404c9c:	stur	x8, [x29, #-24]
  404ca0:	b	404c70 <wcrtomb@plt+0x1ec0>
  404ca4:	ldur	x8, [x29, #-24]
  404ca8:	cbz	x8, 404cd8 <wcrtomb@plt+0x1f28>
  404cac:	ldur	x8, [x29, #-24]
  404cb0:	ldr	x8, [x8]
  404cb4:	ldur	x9, [x29, #-8]
  404cb8:	ldr	x9, [x9]
  404cbc:	ldur	x10, [x29, #-16]
  404cc0:	ldr	x10, [x10]
  404cc4:	mov	x11, #0x28                  	// #40
  404cc8:	mul	x10, x11, x10
  404ccc:	add	x9, x9, x10
  404cd0:	str	x8, [x9, #24]
  404cd4:	b	404d28 <wcrtomb@plt+0x1f78>
  404cd8:	ldur	x8, [x29, #-16]
  404cdc:	ldr	x8, [x8, #8]
  404ce0:	ldrb	w9, [x8]
  404ce4:	cbz	w9, 404d00 <wcrtomb@plt+0x1f50>
  404ce8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  404cec:	add	x0, x0, #0x9e8
  404cf0:	bl	402d40 <gettext@plt>
  404cf4:	ldur	x8, [x29, #-16]
  404cf8:	ldr	x1, [x8, #8]
  404cfc:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  404d00:	ldur	x8, [x29, #-8]
  404d04:	ldr	x8, [x8, #16]
  404d08:	ldur	x9, [x29, #-8]
  404d0c:	ldr	x9, [x9]
  404d10:	ldur	x10, [x29, #-16]
  404d14:	ldr	x10, [x10]
  404d18:	mov	x11, #0x28                  	// #40
  404d1c:	mul	x10, x11, x10
  404d20:	add	x9, x9, x10
  404d24:	str	x8, [x9, #24]
  404d28:	ldur	x0, [x29, #-16]
  404d2c:	bl	404d84 <wcrtomb@plt+0x1fd4>
  404d30:	stur	x0, [x29, #-16]
  404d34:	b	404c5c <wcrtomb@plt+0x1eac>
  404d38:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404d3c:	add	x8, x8, #0x590
  404d40:	mov	x9, xzr
  404d44:	str	x9, [x8]
  404d48:	ldr	x8, [sp, #16]
  404d4c:	ldr	x9, [x8]
  404d50:	stur	x9, [x29, #-24]
  404d54:	ldur	x8, [x29, #-24]
  404d58:	cbz	x8, 404d6c <wcrtomb@plt+0x1fbc>
  404d5c:	ldur	x0, [x29, #-24]
  404d60:	bl	404d84 <wcrtomb@plt+0x1fd4>
  404d64:	stur	x0, [x29, #-24]
  404d68:	b	404d54 <wcrtomb@plt+0x1fa4>
  404d6c:	mov	x8, xzr
  404d70:	ldr	x9, [sp, #16]
  404d74:	str	x8, [x9]
  404d78:	ldp	x29, x30, [sp, #64]
  404d7c:	add	sp, sp, #0x50
  404d80:	ret
  404d84:	sub	sp, sp, #0x30
  404d88:	stp	x29, x30, [sp, #32]
  404d8c:	add	x29, sp, #0x20
  404d90:	str	x0, [sp, #16]
  404d94:	ldr	x8, [sp, #16]
  404d98:	cbnz	x8, 404da8 <wcrtomb@plt+0x1ff8>
  404d9c:	mov	x8, xzr
  404da0:	stur	x8, [x29, #-8]
  404da4:	b	404dc8 <wcrtomb@plt+0x2018>
  404da8:	ldr	x8, [sp, #16]
  404dac:	ldr	x8, [x8, #40]
  404db0:	str	x8, [sp, #8]
  404db4:	ldr	x8, [sp, #16]
  404db8:	ldr	x0, [x8, #8]
  404dbc:	bl	402b40 <free@plt>
  404dc0:	ldr	x8, [sp, #8]
  404dc4:	stur	x8, [x29, #-8]
  404dc8:	ldur	x0, [x29, #-8]
  404dcc:	ldp	x29, x30, [sp, #32]
  404dd0:	add	sp, sp, #0x30
  404dd4:	ret
  404dd8:	sub	sp, sp, #0x20
  404ddc:	stp	x29, x30, [sp, #16]
  404de0:	add	x29, sp, #0x10
  404de4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404de8:	add	x8, x8, #0x5a0
  404dec:	ldr	x8, [x8]
  404df0:	str	x8, [sp, #8]
  404df4:	ldr	x8, [sp, #8]
  404df8:	cbz	x8, 404e24 <wcrtomb@plt+0x2074>
  404dfc:	ldr	x8, [sp, #8]
  404e00:	ldr	x8, [x8, #16]
  404e04:	cbz	x8, 404e14 <wcrtomb@plt+0x2064>
  404e08:	ldr	x8, [sp, #8]
  404e0c:	ldr	x0, [x8, #16]
  404e10:	bl	4029e0 <rewind@plt>
  404e14:	ldr	x8, [sp, #8]
  404e18:	ldr	x8, [x8, #24]
  404e1c:	str	x8, [sp, #8]
  404e20:	b	404df4 <wcrtomb@plt+0x2044>
  404e24:	ldp	x29, x30, [sp, #16]
  404e28:	add	sp, sp, #0x20
  404e2c:	ret
  404e30:	sub	sp, sp, #0x30
  404e34:	stp	x29, x30, [sp, #32]
  404e38:	add	x29, sp, #0x20
  404e3c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404e40:	add	x8, x8, #0x5a0
  404e44:	stur	x0, [x29, #-8]
  404e48:	str	x8, [sp]
  404e4c:	bl	404f04 <wcrtomb@plt+0x2154>
  404e50:	ldr	x8, [sp]
  404e54:	ldr	x9, [x8]
  404e58:	str	x9, [sp, #16]
  404e5c:	ldr	x8, [sp, #16]
  404e60:	cbz	x8, 404e94 <wcrtomb@plt+0x20e4>
  404e64:	ldr	x8, [sp, #16]
  404e68:	ldr	x8, [x8, #16]
  404e6c:	cbz	x8, 404e7c <wcrtomb@plt+0x20cc>
  404e70:	ldr	x8, [sp, #16]
  404e74:	ldr	x0, [x8, #16]
  404e78:	bl	40d590 <wcrtomb@plt+0xa7e0>
  404e7c:	ldr	x8, [sp, #16]
  404e80:	ldr	x8, [x8, #24]
  404e84:	str	x8, [sp, #8]
  404e88:	ldr	x8, [sp, #8]
  404e8c:	str	x8, [sp, #16]
  404e90:	b	404e5c <wcrtomb@plt+0x20ac>
  404e94:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404e98:	add	x8, x8, #0x5a8
  404e9c:	ldr	x8, [x8]
  404ea0:	str	x8, [sp, #16]
  404ea4:	ldr	x8, [sp, #16]
  404ea8:	cbz	x8, 404edc <wcrtomb@plt+0x212c>
  404eac:	ldr	x8, [sp, #16]
  404eb0:	ldr	x8, [x8, #16]
  404eb4:	cbz	x8, 404ec4 <wcrtomb@plt+0x2114>
  404eb8:	ldr	x8, [sp, #16]
  404ebc:	ldr	x0, [x8, #16]
  404ec0:	bl	40d590 <wcrtomb@plt+0xa7e0>
  404ec4:	ldr	x8, [sp, #16]
  404ec8:	ldr	x8, [x8, #24]
  404ecc:	str	x8, [sp, #8]
  404ed0:	ldr	x8, [sp, #8]
  404ed4:	str	x8, [sp, #16]
  404ed8:	b	404ea4 <wcrtomb@plt+0x20f4>
  404edc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404ee0:	add	x8, x8, #0x5a8
  404ee4:	mov	x9, xzr
  404ee8:	str	x9, [x8]
  404eec:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404ef0:	add	x8, x8, #0x5a0
  404ef4:	str	x9, [x8]
  404ef8:	ldp	x29, x30, [sp, #32]
  404efc:	add	sp, sp, #0x30
  404f00:	ret
  404f04:	sub	sp, sp, #0x20
  404f08:	stp	x29, x30, [sp, #16]
  404f0c:	add	x29, sp, #0x10
  404f10:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404f14:	add	x8, x8, #0x5a0
  404f18:	ldr	x8, [x8]
  404f1c:	str	x8, [sp, #8]
  404f20:	ldr	x8, [sp, #8]
  404f24:	cbz	x8, 404f5c <wcrtomb@plt+0x21ac>
  404f28:	ldr	x8, [sp, #8]
  404f2c:	ldr	x8, [x8]
  404f30:	cbz	x8, 404f4c <wcrtomb@plt+0x219c>
  404f34:	ldr	x8, [sp, #8]
  404f38:	ldr	x0, [x8]
  404f3c:	bl	402b40 <free@plt>
  404f40:	ldr	x8, [sp, #8]
  404f44:	mov	x9, xzr
  404f48:	str	x9, [x8]
  404f4c:	ldr	x8, [sp, #8]
  404f50:	ldr	x8, [x8, #24]
  404f54:	str	x8, [sp, #8]
  404f58:	b	404f20 <wcrtomb@plt+0x2170>
  404f5c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404f60:	add	x8, x8, #0x5a8
  404f64:	ldr	x8, [x8]
  404f68:	str	x8, [sp, #8]
  404f6c:	ldr	x8, [sp, #8]
  404f70:	cbz	x8, 404fa8 <wcrtomb@plt+0x21f8>
  404f74:	ldr	x8, [sp, #8]
  404f78:	ldr	x8, [x8]
  404f7c:	cbz	x8, 404f98 <wcrtomb@plt+0x21e8>
  404f80:	ldr	x8, [sp, #8]
  404f84:	ldr	x0, [x8]
  404f88:	bl	402b40 <free@plt>
  404f8c:	ldr	x8, [sp, #8]
  404f90:	mov	x9, xzr
  404f94:	str	x9, [x8]
  404f98:	ldr	x8, [sp, #8]
  404f9c:	ldr	x8, [x8, #24]
  404fa0:	str	x8, [sp, #8]
  404fa4:	b	404f6c <wcrtomb@plt+0x21bc>
  404fa8:	ldp	x29, x30, [sp, #16]
  404fac:	add	sp, sp, #0x20
  404fb0:	ret
  404fb4:	sub	sp, sp, #0x40
  404fb8:	stp	x29, x30, [sp, #48]
  404fbc:	add	x29, sp, #0x30
  404fc0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  404fc4:	add	x8, x8, #0x580
  404fc8:	stur	x0, [x29, #-8]
  404fcc:	stur	w1, [x29, #-12]
  404fd0:	ldur	x9, [x29, #-8]
  404fd4:	str	x8, [sp, #24]
  404fd8:	cbz	x9, 405024 <wcrtomb@plt+0x2274>
  404fdc:	ldr	x8, [sp, #24]
  404fe0:	ldr	x9, [x8]
  404fe4:	cbz	x9, 404ff4 <wcrtomb@plt+0x2244>
  404fe8:	ldr	x8, [sp, #24]
  404fec:	ldr	x0, [x8]
  404ff0:	bl	40ddb4 <wcrtomb@plt+0xb004>
  404ff4:	bl	40db28 <wcrtomb@plt+0xad78>
  404ff8:	ldr	x8, [sp, #24]
  404ffc:	str	x0, [x8]
  405000:	ldur	x9, [x29, #-8]
  405004:	mov	x10, xzr
  405008:	str	x10, [x9]
  40500c:	ldur	x9, [x29, #-8]
  405010:	str	xzr, [x9, #8]
  405014:	ldur	x9, [x29, #-8]
  405018:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40501c:	add	x10, x10, #0x588
  405020:	str	x9, [x10]
  405024:	ldur	w8, [x29, #-12]
  405028:	mov	w9, #0xffffffff            	// #-1
  40502c:	cmp	w8, w9
  405030:	b.ne	405038 <wcrtomb@plt+0x2288>  // b.any
  405034:	b	4051ac <wcrtomb@plt+0x23fc>
  405038:	ldur	w8, [x29, #-12]
  40503c:	cmp	w8, #0xa
  405040:	b.eq	405054 <wcrtomb@plt+0x22a4>  // b.none
  405044:	ldr	x8, [sp, #24]
  405048:	ldr	x0, [x8]
  40504c:	ldur	w1, [x29, #-12]
  405050:	bl	40dd10 <wcrtomb@plt+0xaf60>
  405054:	bl	4051b8 <wcrtomb@plt+0x2408>
  405058:	stur	w0, [x29, #-16]
  40505c:	ldur	w8, [x29, #-16]
  405060:	mov	w9, #0xffffffff            	// #-1
  405064:	mov	w10, #0x0                   	// #0
  405068:	cmp	w8, w9
  40506c:	str	w10, [sp, #20]
  405070:	b.eq	405084 <wcrtomb@plt+0x22d4>  // b.none
  405074:	ldur	w8, [x29, #-16]
  405078:	cmp	w8, #0xa
  40507c:	cset	w8, ne  // ne = any
  405080:	str	w8, [sp, #20]
  405084:	ldr	w8, [sp, #20]
  405088:	tbnz	w8, #0, 405090 <wcrtomb@plt+0x22e0>
  40508c:	b	405100 <wcrtomb@plt+0x2350>
  405090:	ldur	w8, [x29, #-16]
  405094:	cmp	w8, #0x5c
  405098:	b.ne	4050c4 <wcrtomb@plt+0x2314>  // b.any
  40509c:	bl	4051b8 <wcrtomb@plt+0x2408>
  4050a0:	stur	w0, [x29, #-16]
  4050a4:	ldur	w8, [x29, #-16]
  4050a8:	mov	w9, #0xffffffff            	// #-1
  4050ac:	cmp	w8, w9
  4050b0:	b.eq	4050c4 <wcrtomb@plt+0x2314>  // b.none
  4050b4:	ldr	x8, [sp, #24]
  4050b8:	ldr	x0, [x8]
  4050bc:	mov	w1, #0x5c                  	// #92
  4050c0:	bl	40dd10 <wcrtomb@plt+0xaf60>
  4050c4:	ldur	w8, [x29, #-16]
  4050c8:	mov	w9, #0xffffffff            	// #-1
  4050cc:	cmp	w8, w9
  4050d0:	b.ne	4050e8 <wcrtomb@plt+0x2338>  // b.any
  4050d4:	ldr	x8, [sp, #24]
  4050d8:	ldr	x0, [x8]
  4050dc:	mov	w1, #0xa                   	// #10
  4050e0:	bl	40dd10 <wcrtomb@plt+0xaf60>
  4050e4:	b	4051ac <wcrtomb@plt+0x23fc>
  4050e8:	ldr	x8, [sp, #24]
  4050ec:	ldr	x0, [x8]
  4050f0:	ldur	w1, [x29, #-16]
  4050f4:	bl	406718 <wcrtomb@plt+0x3968>
  4050f8:	stur	w0, [x29, #-16]
  4050fc:	b	40505c <wcrtomb@plt+0x22ac>
  405100:	ldr	x8, [sp, #24]
  405104:	ldr	x0, [x8]
  405108:	mov	w1, #0xa                   	// #10
  40510c:	bl	40dd10 <wcrtomb@plt+0xaf60>
  405110:	ldur	x8, [x29, #-8]
  405114:	cbnz	x8, 405128 <wcrtomb@plt+0x2378>
  405118:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40511c:	add	x8, x8, #0x588
  405120:	ldr	x8, [x8]
  405124:	stur	x8, [x29, #-8]
  405128:	ldr	x8, [sp, #24]
  40512c:	ldr	x0, [x8]
  405130:	bl	40db80 <wcrtomb@plt+0xadd0>
  405134:	ldr	x8, [sp, #24]
  405138:	ldr	x9, [x8]
  40513c:	str	x0, [sp, #8]
  405140:	mov	x0, x9
  405144:	bl	40db98 <wcrtomb@plt+0xade8>
  405148:	ldr	x1, [sp, #8]
  40514c:	str	x0, [sp]
  405150:	mov	x0, x1
  405154:	ldr	x1, [sp]
  405158:	mov	w10, wzr
  40515c:	mov	w2, w10
  405160:	bl	402fbc <wcrtomb@plt+0x20c>
  405164:	ldur	x8, [x29, #-8]
  405168:	str	x0, [x8, #8]
  40516c:	ldr	x8, [sp, #24]
  405170:	ldr	x0, [x8]
  405174:	bl	40db80 <wcrtomb@plt+0xadd0>
  405178:	ldur	x8, [x29, #-8]
  40517c:	ldr	x8, [x8, #8]
  405180:	mov	x9, #0x1                   	// #1
  405184:	mul	x1, x8, x9
  405188:	bl	41d984 <wcrtomb@plt+0x1abd4>
  40518c:	ldur	x8, [x29, #-8]
  405190:	str	x0, [x8]
  405194:	ldr	x8, [sp, #24]
  405198:	ldr	x0, [x8]
  40519c:	bl	40ddb4 <wcrtomb@plt+0xb004>
  4051a0:	mov	x8, xzr
  4051a4:	ldr	x9, [sp, #24]
  4051a8:	str	x8, [x9]
  4051ac:	ldp	x29, x30, [sp, #48]
  4051b0:	add	sp, sp, #0x40
  4051b4:	ret
  4051b8:	sub	sp, sp, #0x30
  4051bc:	stp	x29, x30, [sp, #32]
  4051c0:	add	x29, sp, #0x20
  4051c4:	mov	w8, #0xffffffff            	// #-1
  4051c8:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4051cc:	add	x9, x9, #0x550
  4051d0:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4051d4:	add	x10, x10, #0x538
  4051d8:	stur	w8, [x29, #-4]
  4051dc:	ldr	x11, [x9, #8]
  4051e0:	str	x9, [sp, #16]
  4051e4:	str	x10, [sp, #8]
  4051e8:	cbz	x11, 40521c <wcrtomb@plt+0x246c>
  4051ec:	ldr	x8, [sp, #16]
  4051f0:	ldr	x9, [x8, #8]
  4051f4:	ldr	x10, [x8, #16]
  4051f8:	cmp	x9, x10
  4051fc:	b.cs	405218 <wcrtomb@plt+0x2468>  // b.hs, b.nlast
  405200:	ldr	x8, [sp, #16]
  405204:	ldr	x9, [x8, #8]
  405208:	add	x10, x9, #0x1
  40520c:	str	x10, [x8, #8]
  405210:	ldrb	w11, [x9]
  405214:	stur	w11, [x29, #-4]
  405218:	b	405248 <wcrtomb@plt+0x2498>
  40521c:	ldr	x8, [sp, #16]
  405220:	ldr	x9, [x8, #24]
  405224:	cbz	x9, 405248 <wcrtomb@plt+0x2498>
  405228:	ldr	x8, [sp, #16]
  40522c:	ldr	x0, [x8, #24]
  405230:	bl	402b90 <feof_unlocked@plt>
  405234:	cbnz	w0, 405248 <wcrtomb@plt+0x2498>
  405238:	ldr	x8, [sp, #16]
  40523c:	ldr	x0, [x8, #24]
  405240:	bl	402a20 <getc_unlocked@plt>
  405244:	stur	w0, [x29, #-4]
  405248:	ldur	w8, [x29, #-4]
  40524c:	cmp	w8, #0xa
  405250:	b.ne	405264 <wcrtomb@plt+0x24b4>  // b.any
  405254:	ldr	x8, [sp, #8]
  405258:	ldr	x9, [x8, #8]
  40525c:	add	x9, x9, #0x1
  405260:	str	x9, [x8, #8]
  405264:	ldur	w0, [x29, #-4]
  405268:	ldp	x29, x30, [sp, #32]
  40526c:	add	sp, sp, #0x30
  405270:	ret
  405274:	sub	sp, sp, #0x30
  405278:	stp	x29, x30, [sp, #32]
  40527c:	add	x29, sp, #0x20
  405280:	stur	x0, [x29, #-8]
  405284:	ldur	x8, [x29, #-8]
  405288:	ldr	x8, [x8]
  40528c:	str	x8, [sp, #8]
  405290:	ldr	x8, [sp, #8]
  405294:	ldr	x8, [x8, #16]
  405298:	ldr	x9, [sp, #8]
  40529c:	ldr	x9, [x9, #8]
  4052a0:	cmp	x8, x9
  4052a4:	b.ne	4052d8 <wcrtomb@plt+0x2528>  // b.any
  4052a8:	ldr	x8, [sp, #8]
  4052ac:	ldr	x9, [x8, #8]
  4052b0:	mov	x2, #0x28                  	// #40
  4052b4:	add	x9, x9, #0x28
  4052b8:	str	x9, [x8, #8]
  4052bc:	ldr	x8, [sp, #8]
  4052c0:	ldr	x0, [x8]
  4052c4:	ldr	x8, [sp, #8]
  4052c8:	ldr	x1, [x8, #8]
  4052cc:	bl	41d700 <wcrtomb@plt+0x1a950>
  4052d0:	ldr	x8, [sp, #8]
  4052d4:	str	x0, [x8]
  4052d8:	ldr	x8, [sp, #8]
  4052dc:	ldr	x8, [x8]
  4052e0:	ldr	x9, [sp, #8]
  4052e4:	ldr	x9, [x9, #16]
  4052e8:	mov	x10, #0x28                  	// #40
  4052ec:	mul	x9, x10, x9
  4052f0:	add	x8, x8, x9
  4052f4:	str	x8, [sp, #16]
  4052f8:	ldr	x8, [sp, #16]
  4052fc:	mov	x9, xzr
  405300:	str	x9, [x8]
  405304:	ldr	x8, [sp, #16]
  405308:	str	x9, [x8, #8]
  40530c:	ldr	x8, [sp, #16]
  405310:	str	wzr, [x8, #16]
  405314:	ldr	x8, [sp, #16]
  405318:	mov	w11, #0x0                   	// #0
  40531c:	strb	w11, [x8, #20]
  405320:	ldr	x8, [sp, #16]
  405324:	strb	w11, [x8, #21]
  405328:	ldr	x8, [sp, #8]
  40532c:	ldur	x9, [x29, #-8]
  405330:	str	x8, [x9]
  405334:	ldr	x0, [sp, #16]
  405338:	ldp	x29, x30, [sp, #32]
  40533c:	add	sp, sp, #0x30
  405340:	ret
  405344:	sub	sp, sp, #0x50
  405348:	stp	x29, x30, [sp, #64]
  40534c:	add	x29, sp, #0x40
  405350:	mov	x8, xzr
  405354:	mov	x9, #0xffffffffffffffff    	// #-1
  405358:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40535c:	add	x10, x10, #0x8e0
  405360:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x18e64>
  405364:	add	x11, x11, #0x624
  405368:	add	x11, x11, #0x133
  40536c:	stur	x0, [x29, #-16]
  405370:	stur	w1, [x29, #-20]
  405374:	ldur	x12, [x29, #-16]
  405378:	str	wzr, [x12]
  40537c:	ldur	x12, [x29, #-16]
  405380:	str	xzr, [x12, #16]
  405384:	ldur	x12, [x29, #-16]
  405388:	str	x9, [x12, #8]
  40538c:	ldur	x9, [x29, #-16]
  405390:	str	x8, [x9, #24]
  405394:	ldur	w13, [x29, #-20]
  405398:	cmp	w13, #0x2f
  40539c:	str	x10, [sp, #16]
  4053a0:	str	x11, [sp, #8]
  4053a4:	b.eq	4053b4 <wcrtomb@plt+0x2604>  // b.none
  4053a8:	ldur	w8, [x29, #-20]
  4053ac:	cmp	w8, #0x5c
  4053b0:	b.ne	405498 <wcrtomb@plt+0x26e8>  // b.any
  4053b4:	stur	wzr, [x29, #-24]
  4053b8:	ldur	x8, [x29, #-16]
  4053bc:	mov	w9, #0x1                   	// #1
  4053c0:	str	w9, [x8]
  4053c4:	ldur	w9, [x29, #-20]
  4053c8:	cmp	w9, #0x5c
  4053cc:	b.ne	4053d8 <wcrtomb@plt+0x2628>  // b.any
  4053d0:	bl	4051b8 <wcrtomb@plt+0x2408>
  4053d4:	stur	w0, [x29, #-20]
  4053d8:	ldur	w0, [x29, #-20]
  4053dc:	mov	w1, #0x1                   	// #1
  4053e0:	bl	405ee0 <wcrtomb@plt+0x3130>
  4053e4:	str	x0, [sp, #32]
  4053e8:	cbnz	x0, 4053f8 <wcrtomb@plt+0x2648>
  4053ec:	ldr	x0, [sp, #8]
  4053f0:	bl	402d40 <gettext@plt>
  4053f4:	bl	402ecc <wcrtomb@plt+0x11c>
  4053f8:	bl	4055f8 <wcrtomb@plt+0x2848>
  4053fc:	stur	w0, [x29, #-20]
  405400:	ldr	x8, [sp, #16]
  405404:	ldr	w9, [x8]
  405408:	cmp	w9, #0x2
  40540c:	b.ne	405414 <wcrtomb@plt+0x2664>  // b.any
  405410:	b	405458 <wcrtomb@plt+0x26a8>
  405414:	ldur	w8, [x29, #-20]
  405418:	cmp	w8, #0x49
  40541c:	str	w8, [sp, #4]
  405420:	b.eq	405438 <wcrtomb@plt+0x2688>  // b.none
  405424:	b	405428 <wcrtomb@plt+0x2678>
  405428:	ldr	w8, [sp, #4]
  40542c:	cmp	w8, #0x4d
  405430:	b.eq	405448 <wcrtomb@plt+0x2698>  // b.none
  405434:	b	405458 <wcrtomb@plt+0x26a8>
  405438:	ldur	w8, [x29, #-24]
  40543c:	orr	w8, w8, #0x2
  405440:	stur	w8, [x29, #-24]
  405444:	b	405494 <wcrtomb@plt+0x26e4>
  405448:	ldur	w8, [x29, #-24]
  40544c:	orr	w8, w8, #0x4
  405450:	stur	w8, [x29, #-24]
  405454:	b	405494 <wcrtomb@plt+0x26e4>
  405458:	ldur	w0, [x29, #-20]
  40545c:	bl	4059c8 <wcrtomb@plt+0x2c18>
  405460:	ldr	x0, [sp, #32]
  405464:	ldur	w1, [x29, #-24]
  405468:	mov	w8, wzr
  40546c:	mov	w2, w8
  405470:	bl	40b5bc <wcrtomb@plt+0x880c>
  405474:	ldur	x9, [x29, #-16]
  405478:	str	x0, [x9, #24]
  40547c:	ldr	x0, [sp, #32]
  405480:	bl	40ddb4 <wcrtomb@plt+0xb004>
  405484:	mov	w8, #0x1                   	// #1
  405488:	and	w8, w8, #0x1
  40548c:	sturb	w8, [x29, #-1]
  405490:	b	4055e4 <wcrtomb@plt+0x2834>
  405494:	b	4053f8 <wcrtomb@plt+0x2648>
  405498:	bl	402b20 <__ctype_b_loc@plt>
  40549c:	ldr	x8, [x0]
  4054a0:	ldur	w9, [x29, #-20]
  4054a4:	and	w9, w9, #0xff
  4054a8:	ldrh	w9, [x8, w9, sxtw #1]
  4054ac:	and	w9, w9, #0x800
  4054b0:	cbz	w9, 405538 <wcrtomb@plt+0x2788>
  4054b4:	ldur	w0, [x29, #-20]
  4054b8:	bl	405aa8 <wcrtomb@plt+0x2cf8>
  4054bc:	ldur	x8, [x29, #-16]
  4054c0:	str	x0, [x8, #8]
  4054c4:	ldur	x8, [x29, #-16]
  4054c8:	mov	w9, #0x2                   	// #2
  4054cc:	str	w9, [x8]
  4054d0:	bl	4055f8 <wcrtomb@plt+0x2848>
  4054d4:	stur	w0, [x29, #-20]
  4054d8:	ldur	w9, [x29, #-20]
  4054dc:	cmp	w9, #0x7e
  4054e0:	b.ne	4054f4 <wcrtomb@plt+0x2744>  // b.any
  4054e4:	ldr	x8, [sp, #16]
  4054e8:	ldr	w9, [x8]
  4054ec:	cmp	w9, #0x2
  4054f0:	b.ne	405500 <wcrtomb@plt+0x2750>  // b.any
  4054f4:	ldur	w0, [x29, #-20]
  4054f8:	bl	4059c8 <wcrtomb@plt+0x2c18>
  4054fc:	b	405534 <wcrtomb@plt+0x2784>
  405500:	bl	4055f8 <wcrtomb@plt+0x2848>
  405504:	bl	405aa8 <wcrtomb@plt+0x2cf8>
  405508:	str	x0, [sp, #24]
  40550c:	ldr	x8, [sp, #24]
  405510:	cmp	x8, #0x0
  405514:	cset	w9, ls  // ls = plast
  405518:	tbnz	w9, #0, 405534 <wcrtomb@plt+0x2784>
  40551c:	ldr	x8, [sp, #24]
  405520:	ldur	x9, [x29, #-16]
  405524:	str	x8, [x9, #16]
  405528:	ldur	x8, [x29, #-16]
  40552c:	mov	w10, #0x3                   	// #3
  405530:	str	w10, [x8]
  405534:	b	4055d8 <wcrtomb@plt+0x2828>
  405538:	ldur	w8, [x29, #-20]
  40553c:	cmp	w8, #0x2b
  405540:	b.eq	405550 <wcrtomb@plt+0x27a0>  // b.none
  405544:	ldur	w8, [x29, #-20]
  405548:	cmp	w8, #0x7e
  40554c:	b.ne	4055ac <wcrtomb@plt+0x27fc>  // b.any
  405550:	ldr	x8, [sp, #16]
  405554:	ldr	w9, [x8]
  405558:	cmp	w9, #0x2
  40555c:	b.eq	4055ac <wcrtomb@plt+0x27fc>  // b.none
  405560:	bl	4055f8 <wcrtomb@plt+0x2848>
  405564:	bl	405aa8 <wcrtomb@plt+0x2cf8>
  405568:	ldur	x8, [x29, #-16]
  40556c:	str	x0, [x8, #16]
  405570:	ldur	x8, [x29, #-16]
  405574:	ldr	x8, [x8, #16]
  405578:	cbnz	x8, 405580 <wcrtomb@plt+0x27d0>
  40557c:	b	4055a8 <wcrtomb@plt+0x27f8>
  405580:	ldur	w8, [x29, #-20]
  405584:	cmp	w8, #0x2b
  405588:	b.ne	40559c <wcrtomb@plt+0x27ec>  // b.any
  40558c:	ldur	x8, [x29, #-16]
  405590:	mov	w9, #0x4                   	// #4
  405594:	str	w9, [x8]
  405598:	b	4055a8 <wcrtomb@plt+0x27f8>
  40559c:	ldur	x8, [x29, #-16]
  4055a0:	mov	w9, #0x5                   	// #5
  4055a4:	str	w9, [x8]
  4055a8:	b	4055d8 <wcrtomb@plt+0x2828>
  4055ac:	ldur	w8, [x29, #-20]
  4055b0:	cmp	w8, #0x24
  4055b4:	b.ne	4055c8 <wcrtomb@plt+0x2818>  // b.any
  4055b8:	ldur	x8, [x29, #-16]
  4055bc:	mov	w9, #0x6                   	// #6
  4055c0:	str	w9, [x8]
  4055c4:	b	4055d8 <wcrtomb@plt+0x2828>
  4055c8:	mov	w8, wzr
  4055cc:	and	w8, w8, #0x1
  4055d0:	sturb	w8, [x29, #-1]
  4055d4:	b	4055e4 <wcrtomb@plt+0x2834>
  4055d8:	mov	w8, #0x1                   	// #1
  4055dc:	and	w8, w8, #0x1
  4055e0:	sturb	w8, [x29, #-1]
  4055e4:	ldurb	w8, [x29, #-1]
  4055e8:	and	w0, w8, #0x1
  4055ec:	ldp	x29, x30, [sp, #64]
  4055f0:	add	sp, sp, #0x50
  4055f4:	ret
  4055f8:	sub	sp, sp, #0x20
  4055fc:	stp	x29, x30, [sp, #16]
  405600:	add	x29, sp, #0x10
  405604:	bl	4051b8 <wcrtomb@plt+0x2408>
  405608:	stur	w0, [x29, #-4]
  40560c:	bl	402b20 <__ctype_b_loc@plt>
  405610:	ldr	x8, [x0]
  405614:	ldursw	x9, [x29, #-4]
  405618:	ldrh	w10, [x8, x9, lsl #1]
  40561c:	and	w10, w10, #0x1
  405620:	cbnz	w10, 405604 <wcrtomb@plt+0x2854>
  405624:	ldur	w0, [x29, #-4]
  405628:	ldp	x29, x30, [sp, #16]
  40562c:	add	sp, sp, #0x20
  405630:	ret
  405634:	sub	sp, sp, #0x30
  405638:	stp	x29, x30, [sp, #32]
  40563c:	add	x29, sp, #0x20
  405640:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  405644:	add	x8, x8, #0x624
  405648:	add	x8, x8, #0x2d1
  40564c:	sturb	w0, [x29, #-1]
  405650:	mov	x0, x8
  405654:	bl	402d40 <gettext@plt>
  405658:	str	x0, [sp, #16]
  40565c:	ldr	x0, [sp, #16]
  405660:	bl	4026f0 <strlen@plt>
  405664:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  405668:	str	x0, [sp, #8]
  40566c:	ldr	x0, [sp, #8]
  405670:	ldr	x1, [sp, #16]
  405674:	ldurb	w2, [x29, #-1]
  405678:	bl	402790 <sprintf@plt>
  40567c:	ldr	x8, [sp, #8]
  405680:	mov	x0, x8
  405684:	bl	402ecc <wcrtomb@plt+0x11c>
  405688:	sub	sp, sp, #0x30
  40568c:	stp	x29, x30, [sp, #32]
  405690:	add	x29, sp, #0x20
  405694:	bl	40db28 <wcrtomb@plt+0xad78>
  405698:	stur	x0, [x29, #-8]
  40569c:	bl	4055f8 <wcrtomb@plt+0x2848>
  4056a0:	stur	w0, [x29, #-12]
  4056a4:	ldur	w8, [x29, #-12]
  4056a8:	mov	w9, #0xffffffff            	// #-1
  4056ac:	mov	w10, #0x0                   	// #0
  4056b0:	cmp	w8, w9
  4056b4:	str	w10, [sp, #4]
  4056b8:	b.eq	405728 <wcrtomb@plt+0x2978>  // b.none
  4056bc:	ldur	w8, [x29, #-12]
  4056c0:	mov	w9, #0x0                   	// #0
  4056c4:	cmp	w8, #0xa
  4056c8:	str	w9, [sp, #4]
  4056cc:	b.eq	405728 <wcrtomb@plt+0x2978>  // b.none
  4056d0:	bl	402b20 <__ctype_b_loc@plt>
  4056d4:	ldr	x8, [x0]
  4056d8:	ldursw	x9, [x29, #-12]
  4056dc:	ldrh	w10, [x8, x9, lsl #1]
  4056e0:	and	w10, w10, #0x1
  4056e4:	mov	w11, #0x0                   	// #0
  4056e8:	str	w11, [sp, #4]
  4056ec:	cbnz	w10, 405728 <wcrtomb@plt+0x2978>
  4056f0:	ldur	w8, [x29, #-12]
  4056f4:	mov	w9, #0x0                   	// #0
  4056f8:	cmp	w8, #0x3b
  4056fc:	str	w9, [sp, #4]
  405700:	b.eq	405728 <wcrtomb@plt+0x2978>  // b.none
  405704:	ldur	w8, [x29, #-12]
  405708:	mov	w9, #0x0                   	// #0
  40570c:	cmp	w8, #0x7d
  405710:	str	w9, [sp, #4]
  405714:	b.eq	405728 <wcrtomb@plt+0x2978>  // b.none
  405718:	ldur	w8, [x29, #-12]
  40571c:	cmp	w8, #0x23
  405720:	cset	w8, ne  // ne = any
  405724:	str	w8, [sp, #4]
  405728:	ldr	w8, [sp, #4]
  40572c:	tbnz	w8, #0, 405734 <wcrtomb@plt+0x2984>
  405730:	b	405748 <wcrtomb@plt+0x2998>
  405734:	ldur	x0, [x29, #-8]
  405738:	ldur	w1, [x29, #-12]
  40573c:	bl	406718 <wcrtomb@plt+0x3968>
  405740:	stur	w0, [x29, #-12]
  405744:	b	4056a4 <wcrtomb@plt+0x28f4>
  405748:	ldur	w0, [x29, #-12]
  40574c:	bl	4059c8 <wcrtomb@plt+0x2c18>
  405750:	ldur	x0, [x29, #-8]
  405754:	mov	w8, wzr
  405758:	mov	w1, w8
  40575c:	bl	40dd10 <wcrtomb@plt+0xaf60>
  405760:	ldur	x9, [x29, #-8]
  405764:	mov	x0, x9
  405768:	bl	40db80 <wcrtomb@plt+0xadd0>
  40576c:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  405770:	str	x0, [sp, #8]
  405774:	ldur	x0, [x29, #-8]
  405778:	bl	40ddb4 <wcrtomb@plt+0xb004>
  40577c:	ldr	x0, [sp, #8]
  405780:	ldp	x29, x30, [sp, #32]
  405784:	add	sp, sp, #0x30
  405788:	ret
  40578c:	sub	sp, sp, #0x80
  405790:	stp	x29, x30, [sp, #112]
  405794:	add	x29, sp, #0x70
  405798:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40579c:	add	x8, x8, #0x5b0
  4057a0:	mov	x9, #0x30                  	// #48
  4057a4:	stur	x0, [x29, #-8]
  4057a8:	stur	x1, [x29, #-16]
  4057ac:	stur	x2, [x29, #-24]
  4057b0:	stur	x3, [x29, #-32]
  4057b4:	stur	x8, [x29, #-48]
  4057b8:	ldur	x8, [x29, #-48]
  4057bc:	str	x8, [sp, #56]
  4057c0:	str	x9, [sp, #48]
  4057c4:	ldr	x8, [sp, #56]
  4057c8:	str	x8, [sp, #40]
  4057cc:	ldr	x8, [sp, #40]
  4057d0:	ldr	x8, [x8, #32]
  4057d4:	ldr	x9, [sp, #40]
  4057d8:	ldr	x9, [x9, #24]
  4057dc:	subs	x8, x8, x9
  4057e0:	str	x8, [sp, #32]
  4057e4:	ldr	x8, [sp, #32]
  4057e8:	ldr	x9, [sp, #48]
  4057ec:	cmp	x8, x9
  4057f0:	b.cs	405800 <wcrtomb@plt+0x2a50>  // b.hs, b.nlast
  4057f4:	ldr	x0, [sp, #56]
  4057f8:	ldr	x1, [sp, #48]
  4057fc:	bl	41dd10 <_obstack_newchunk@@Base>
  405800:	ldr	x8, [sp, #48]
  405804:	ldr	x9, [sp, #56]
  405808:	ldr	x10, [x9, #24]
  40580c:	add	x8, x10, x8
  405810:	str	x8, [x9, #24]
  405814:	ldur	x8, [x29, #-48]
  405818:	str	x8, [sp, #16]
  40581c:	ldr	x8, [sp, #16]
  405820:	ldr	x8, [x8, #16]
  405824:	str	x8, [sp, #8]
  405828:	ldr	x8, [sp, #16]
  40582c:	ldr	x8, [x8, #24]
  405830:	ldr	x9, [sp, #8]
  405834:	cmp	x8, x9
  405838:	b.ne	405850 <wcrtomb@plt+0x2aa0>  // b.any
  40583c:	ldr	x8, [sp, #16]
  405840:	ldrb	w9, [x8, #80]
  405844:	and	w9, w9, #0xfffffffd
  405848:	orr	w9, w9, #0x2
  40584c:	strb	w9, [x8, #80]
  405850:	ldr	x8, [sp, #16]
  405854:	ldr	x8, [x8, #24]
  405858:	mov	x9, xzr
  40585c:	subs	x8, x8, #0x0
  405860:	ldr	x10, [sp, #16]
  405864:	ldr	x10, [x10, #48]
  405868:	add	x8, x8, x10
  40586c:	ldr	x10, [sp, #16]
  405870:	ldr	x10, [x10, #48]
  405874:	bic	x8, x8, x10
  405878:	add	x8, x9, x8
  40587c:	ldr	x9, [sp, #16]
  405880:	str	x8, [x9, #24]
  405884:	ldr	x8, [sp, #16]
  405888:	ldr	x8, [x8, #24]
  40588c:	ldr	x9, [sp, #16]
  405890:	ldr	x9, [x9, #8]
  405894:	subs	x8, x8, x9
  405898:	ldr	x9, [sp, #16]
  40589c:	ldr	x9, [x9, #32]
  4058a0:	ldr	x10, [sp, #16]
  4058a4:	ldr	x10, [x10, #8]
  4058a8:	subs	x9, x9, x10
  4058ac:	cmp	x8, x9
  4058b0:	b.ls	4058c4 <wcrtomb@plt+0x2b14>  // b.plast
  4058b4:	ldr	x8, [sp, #16]
  4058b8:	ldr	x8, [x8, #32]
  4058bc:	ldr	x9, [sp, #16]
  4058c0:	str	x8, [x9, #24]
  4058c4:	ldr	x8, [sp, #16]
  4058c8:	ldr	x8, [x8, #24]
  4058cc:	ldr	x9, [sp, #16]
  4058d0:	str	x8, [x9, #16]
  4058d4:	ldr	x8, [sp, #8]
  4058d8:	str	x8, [sp]
  4058dc:	ldr	x8, [sp]
  4058e0:	str	x8, [sp, #24]
  4058e4:	ldr	x8, [sp, #24]
  4058e8:	stur	x8, [x29, #-40]
  4058ec:	ldur	x8, [x29, #-16]
  4058f0:	ldur	x9, [x29, #-40]
  4058f4:	str	x8, [x9]
  4058f8:	ldur	x8, [x29, #-24]
  4058fc:	ldur	x9, [x29, #-40]
  405900:	str	x8, [x9, #8]
  405904:	ldur	x8, [x29, #-32]
  405908:	cbz	x8, 405924 <wcrtomb@plt+0x2b74>
  40590c:	ldur	x8, [x29, #-40]
  405910:	ldur	x9, [x29, #-32]
  405914:	ldr	q0, [x9]
  405918:	str	q0, [x8, #16]
  40591c:	ldr	x9, [x9, #16]
  405920:	str	x9, [x8, #32]
  405924:	ldur	x8, [x29, #-8]
  405928:	ldur	x9, [x29, #-40]
  40592c:	str	x8, [x9, #40]
  405930:	ldur	x0, [x29, #-40]
  405934:	ldp	x29, x30, [sp, #112]
  405938:	add	sp, sp, #0x80
  40593c:	ret
  405940:	sub	sp, sp, #0x20
  405944:	stp	x29, x30, [sp, #16]
  405948:	add	x29, sp, #0x10
  40594c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  405950:	add	x8, x8, #0x624
  405954:	add	x0, x8, #0x65
  405958:	str	x0, [sp]
  40595c:	bl	4055f8 <wcrtomb@plt+0x2848>
  405960:	stur	w0, [x29, #-4]
  405964:	ldur	w9, [x29, #-4]
  405968:	cmp	w9, #0x7d
  40596c:	b.eq	40597c <wcrtomb@plt+0x2bcc>  // b.none
  405970:	ldur	w8, [x29, #-4]
  405974:	cmp	w8, #0x23
  405978:	b.ne	405988 <wcrtomb@plt+0x2bd8>  // b.any
  40597c:	ldur	w0, [x29, #-4]
  405980:	bl	4059c8 <wcrtomb@plt+0x2c18>
  405984:	b	4059bc <wcrtomb@plt+0x2c0c>
  405988:	ldur	w8, [x29, #-4]
  40598c:	mov	w9, #0xffffffff            	// #-1
  405990:	cmp	w8, w9
  405994:	b.eq	4059bc <wcrtomb@plt+0x2c0c>  // b.none
  405998:	ldur	w8, [x29, #-4]
  40599c:	cmp	w8, #0xa
  4059a0:	b.eq	4059bc <wcrtomb@plt+0x2c0c>  // b.none
  4059a4:	ldur	w8, [x29, #-4]
  4059a8:	cmp	w8, #0x3b
  4059ac:	b.eq	4059bc <wcrtomb@plt+0x2c0c>  // b.none
  4059b0:	ldr	x0, [sp]
  4059b4:	bl	402d40 <gettext@plt>
  4059b8:	bl	402ecc <wcrtomb@plt+0x11c>
  4059bc:	ldp	x29, x30, [sp, #16]
  4059c0:	add	sp, sp, #0x20
  4059c4:	ret
  4059c8:	sub	sp, sp, #0x30
  4059cc:	stp	x29, x30, [sp, #32]
  4059d0:	add	x29, sp, #0x20
  4059d4:	mov	w8, #0xffffffff            	// #-1
  4059d8:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4059dc:	add	x9, x9, #0x538
  4059e0:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4059e4:	add	x10, x10, #0x550
  4059e8:	stur	w0, [x29, #-4]
  4059ec:	ldur	w11, [x29, #-4]
  4059f0:	cmp	w11, w8
  4059f4:	str	x9, [sp, #16]
  4059f8:	str	x10, [sp, #8]
  4059fc:	b.ne	405a04 <wcrtomb@plt+0x2c54>  // b.any
  405a00:	b	405a9c <wcrtomb@plt+0x2cec>
  405a04:	ldur	w8, [x29, #-4]
  405a08:	cmp	w8, #0xa
  405a0c:	b.ne	405a34 <wcrtomb@plt+0x2c84>  // b.any
  405a10:	ldr	x8, [sp, #16]
  405a14:	ldr	x9, [x8, #8]
  405a18:	cmp	x9, #0x0
  405a1c:	cset	w10, ls  // ls = plast
  405a20:	tbnz	w10, #0, 405a34 <wcrtomb@plt+0x2c84>
  405a24:	ldr	x8, [sp, #16]
  405a28:	ldr	x9, [x8, #8]
  405a2c:	subs	x9, x9, #0x1
  405a30:	str	x9, [x8, #8]
  405a34:	ldr	x8, [sp, #8]
  405a38:	ldr	x9, [x8, #8]
  405a3c:	cbz	x9, 405a8c <wcrtomb@plt+0x2cdc>
  405a40:	ldr	x8, [sp, #8]
  405a44:	ldr	x9, [x8, #8]
  405a48:	ldr	x10, [x8]
  405a4c:	cmp	x9, x10
  405a50:	b.ls	405a78 <wcrtomb@plt+0x2cc8>  // b.plast
  405a54:	ldr	x8, [sp, #8]
  405a58:	ldr	x9, [x8, #8]
  405a5c:	mov	x10, #0xffffffffffffffff    	// #-1
  405a60:	add	x10, x9, x10
  405a64:	str	x10, [x8, #8]
  405a68:	ldurb	w11, [x9, #-1]
  405a6c:	ldur	w12, [x29, #-4]
  405a70:	cmp	w11, w12
  405a74:	b.eq	405a88 <wcrtomb@plt+0x2cd8>  // b.none
  405a78:	ldur	w1, [x29, #-4]
  405a7c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  405a80:	add	x0, x0, #0xa12
  405a84:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  405a88:	b	405a9c <wcrtomb@plt+0x2cec>
  405a8c:	ldur	w0, [x29, #-4]
  405a90:	ldr	x8, [sp, #8]
  405a94:	ldr	x1, [x8, #24]
  405a98:	bl	402b50 <ungetc@plt>
  405a9c:	ldp	x29, x30, [sp, #32]
  405aa0:	add	sp, sp, #0x30
  405aa4:	ret
  405aa8:	sub	sp, sp, #0x20
  405aac:	stp	x29, x30, [sp, #16]
  405ab0:	add	x29, sp, #0x10
  405ab4:	stur	w0, [x29, #-4]
  405ab8:	str	xzr, [sp]
  405abc:	bl	402b20 <__ctype_b_loc@plt>
  405ac0:	ldr	x8, [x0]
  405ac4:	ldur	w9, [x29, #-4]
  405ac8:	and	w9, w9, #0xff
  405acc:	ldrh	w9, [x8, w9, sxtw #1]
  405ad0:	and	w9, w9, #0x800
  405ad4:	cbz	w9, 405b00 <wcrtomb@plt+0x2d50>
  405ad8:	ldr	x8, [sp]
  405adc:	mov	x9, #0xa                   	// #10
  405ae0:	mul	x8, x8, x9
  405ae4:	ldursw	x9, [x29, #-4]
  405ae8:	add	x8, x8, x9
  405aec:	subs	x8, x8, #0x30
  405af0:	str	x8, [sp]
  405af4:	bl	4051b8 <wcrtomb@plt+0x2408>
  405af8:	stur	w0, [x29, #-4]
  405afc:	b	405abc <wcrtomb@plt+0x2d0c>
  405b00:	ldur	w0, [x29, #-4]
  405b04:	bl	4059c8 <wcrtomb@plt+0x2c18>
  405b08:	ldr	x0, [sp]
  405b0c:	ldp	x29, x30, [sp, #16]
  405b10:	add	sp, sp, #0x20
  405b14:	ret
  405b18:	sub	sp, sp, #0x30
  405b1c:	stp	x29, x30, [sp, #32]
  405b20:	add	x29, sp, #0x20
  405b24:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405b28:	add	x8, x8, #0x758
  405b2c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x18e64>
  405b30:	add	x9, x9, #0x624
  405b34:	add	x0, x9, #0x334
  405b38:	ldrb	w10, [x8]
  405b3c:	str	x0, [sp, #8]
  405b40:	tbnz	w10, #0, 405b48 <wcrtomb@plt+0x2d98>
  405b44:	b	405b54 <wcrtomb@plt+0x2da4>
  405b48:	ldr	x0, [sp, #8]
  405b4c:	bl	402d40 <gettext@plt>
  405b50:	bl	402ecc <wcrtomb@plt+0x11c>
  405b54:	bl	40db28 <wcrtomb@plt+0xad78>
  405b58:	stur	x0, [x29, #-8]
  405b5c:	bl	4055f8 <wcrtomb@plt+0x2848>
  405b60:	stur	w0, [x29, #-12]
  405b64:	ldur	w8, [x29, #-12]
  405b68:	mov	w9, #0xffffffff            	// #-1
  405b6c:	mov	w10, #0x0                   	// #0
  405b70:	cmp	w8, w9
  405b74:	str	w10, [sp, #4]
  405b78:	b.eq	405b8c <wcrtomb@plt+0x2ddc>  // b.none
  405b7c:	ldur	w8, [x29, #-12]
  405b80:	cmp	w8, #0xa
  405b84:	cset	w8, ne  // ne = any
  405b88:	str	w8, [sp, #4]
  405b8c:	ldr	w8, [sp, #4]
  405b90:	tbnz	w8, #0, 405b98 <wcrtomb@plt+0x2de8>
  405b94:	b	405bac <wcrtomb@plt+0x2dfc>
  405b98:	ldur	x0, [x29, #-8]
  405b9c:	ldur	w1, [x29, #-12]
  405ba0:	bl	406718 <wcrtomb@plt+0x3968>
  405ba4:	stur	w0, [x29, #-12]
  405ba8:	b	405b64 <wcrtomb@plt+0x2db4>
  405bac:	ldur	x0, [x29, #-8]
  405bb0:	mov	w8, wzr
  405bb4:	mov	w1, w8
  405bb8:	bl	40dd10 <wcrtomb@plt+0xaf60>
  405bbc:	ldur	x9, [x29, #-8]
  405bc0:	mov	x0, x9
  405bc4:	ldp	x29, x30, [sp, #32]
  405bc8:	add	sp, sp, #0x30
  405bcc:	ret
  405bd0:	sub	sp, sp, #0xa0
  405bd4:	stp	x29, x30, [sp, #144]
  405bd8:	add	x29, sp, #0x90
  405bdc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  405be0:	add	x8, x8, #0x624
  405be4:	add	x8, x8, #0x35c
  405be8:	stur	x0, [x29, #-16]
  405bec:	stur	x1, [x29, #-24]
  405bf0:	stur	w2, [x29, #-28]
  405bf4:	str	x8, [sp]
  405bf8:	bl	405b18 <wcrtomb@plt+0x2d68>
  405bfc:	stur	x0, [x29, #-40]
  405c00:	ldur	x0, [x29, #-40]
  405c04:	bl	40db80 <wcrtomb@plt+0xadd0>
  405c08:	stur	x0, [x29, #-48]
  405c0c:	ldur	x0, [x29, #-48]
  405c10:	bl	4026f0 <strlen@plt>
  405c14:	cbnz	x0, 405c24 <wcrtomb@plt+0x2e74>
  405c18:	ldr	x0, [sp]
  405c1c:	bl	402d40 <gettext@plt>
  405c20:	bl	402ecc <wcrtomb@plt+0x11c>
  405c24:	ldur	x8, [x29, #-16]
  405c28:	ldr	x8, [x8]
  405c2c:	stur	x8, [x29, #-56]
  405c30:	ldur	x8, [x29, #-56]
  405c34:	cbz	x8, 405c60 <wcrtomb@plt+0x2eb0>
  405c38:	ldur	x8, [x29, #-56]
  405c3c:	ldr	x0, [x8]
  405c40:	ldur	x1, [x29, #-48]
  405c44:	bl	402b10 <strcmp@plt>
  405c48:	cbnz	w0, 405c50 <wcrtomb@plt+0x2ea0>
  405c4c:	b	405c60 <wcrtomb@plt+0x2eb0>
  405c50:	ldur	x8, [x29, #-56]
  405c54:	ldr	x8, [x8, #24]
  405c58:	stur	x8, [x29, #-56]
  405c5c:	b	405c30 <wcrtomb@plt+0x2e80>
  405c60:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405c64:	add	x8, x8, #0x8e0
  405c68:	ldr	w9, [x8]
  405c6c:	cbnz	w9, 405d20 <wcrtomb@plt+0x2f70>
  405c70:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405c74:	add	x8, x8, #0x3b0
  405c78:	stur	x8, [x29, #-64]
  405c7c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405c80:	add	x9, x9, #0x520
  405c84:	ldr	x9, [x9]
  405c88:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405c8c:	add	x10, x10, #0x608
  405c90:	str	x9, [x10]
  405c94:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405c98:	add	x9, x9, #0x518
  405c9c:	ldr	x9, [x9]
  405ca0:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405ca4:	add	x10, x10, #0x610
  405ca8:	str	x9, [x10]
  405cac:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405cb0:	add	x9, x9, #0x500
  405cb4:	ldr	x9, [x9]
  405cb8:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405cbc:	add	x10, x10, #0x618
  405cc0:	str	x9, [x10]
  405cc4:	stur	x8, [x29, #-64]
  405cc8:	ldur	x8, [x29, #-64]
  405ccc:	ldr	x8, [x8]
  405cd0:	cbz	x8, 405d20 <wcrtomb@plt+0x2f70>
  405cd4:	ldur	x8, [x29, #-64]
  405cd8:	ldr	x0, [x8]
  405cdc:	ldur	x1, [x29, #-48]
  405ce0:	bl	402b10 <strcmp@plt>
  405ce4:	cbnz	w0, 405d10 <wcrtomb@plt+0x2f60>
  405ce8:	ldur	x8, [x29, #-64]
  405cec:	ldr	x8, [x8, #32]
  405cf0:	ldr	x8, [x8]
  405cf4:	ldur	x9, [x29, #-64]
  405cf8:	str	x8, [x9, #16]
  405cfc:	ldur	x0, [x29, #-40]
  405d00:	bl	40ddb4 <wcrtomb@plt+0xb004>
  405d04:	ldur	x8, [x29, #-64]
  405d08:	stur	x8, [x29, #-8]
  405d0c:	b	405ed0 <wcrtomb@plt+0x3120>
  405d10:	ldur	x8, [x29, #-64]
  405d14:	add	x8, x8, #0x28
  405d18:	stur	x8, [x29, #-64]
  405d1c:	b	405cc8 <wcrtomb@plt+0x2f18>
  405d20:	ldur	x8, [x29, #-56]
  405d24:	cbnz	x8, 405ec0 <wcrtomb@plt+0x3110>
  405d28:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405d2c:	add	x8, x8, #0x5b0
  405d30:	str	x8, [sp, #72]
  405d34:	ldr	x8, [sp, #72]
  405d38:	str	x8, [sp, #64]
  405d3c:	mov	x8, #0x20                  	// #32
  405d40:	str	x8, [sp, #56]
  405d44:	ldr	x8, [sp, #64]
  405d48:	str	x8, [sp, #48]
  405d4c:	ldr	x8, [sp, #48]
  405d50:	ldr	x8, [x8, #32]
  405d54:	ldr	x9, [sp, #48]
  405d58:	ldr	x9, [x9, #24]
  405d5c:	subs	x8, x8, x9
  405d60:	str	x8, [sp, #40]
  405d64:	ldr	x8, [sp, #40]
  405d68:	ldr	x9, [sp, #56]
  405d6c:	cmp	x8, x9
  405d70:	b.cs	405d80 <wcrtomb@plt+0x2fd0>  // b.hs, b.nlast
  405d74:	ldr	x0, [sp, #64]
  405d78:	ldr	x1, [sp, #56]
  405d7c:	bl	41dd10 <_obstack_newchunk@@Base>
  405d80:	ldr	x8, [sp, #56]
  405d84:	ldr	x9, [sp, #64]
  405d88:	ldr	x10, [x9, #24]
  405d8c:	add	x8, x10, x8
  405d90:	str	x8, [x9, #24]
  405d94:	ldr	x8, [sp, #72]
  405d98:	str	x8, [sp, #24]
  405d9c:	ldr	x8, [sp, #24]
  405da0:	ldr	x8, [x8, #16]
  405da4:	str	x8, [sp, #16]
  405da8:	ldr	x8, [sp, #24]
  405dac:	ldr	x8, [x8, #24]
  405db0:	ldr	x9, [sp, #16]
  405db4:	cmp	x8, x9
  405db8:	b.ne	405dd0 <wcrtomb@plt+0x3020>  // b.any
  405dbc:	ldr	x8, [sp, #24]
  405dc0:	ldrb	w9, [x8, #80]
  405dc4:	and	w9, w9, #0xfffffffd
  405dc8:	orr	w9, w9, #0x2
  405dcc:	strb	w9, [x8, #80]
  405dd0:	ldr	x8, [sp, #24]
  405dd4:	ldr	x8, [x8, #24]
  405dd8:	mov	x9, xzr
  405ddc:	subs	x8, x8, #0x0
  405de0:	ldr	x10, [sp, #24]
  405de4:	ldr	x10, [x10, #48]
  405de8:	add	x8, x8, x10
  405dec:	ldr	x10, [sp, #24]
  405df0:	ldr	x10, [x10, #48]
  405df4:	bic	x8, x8, x10
  405df8:	add	x8, x9, x8
  405dfc:	ldr	x9, [sp, #24]
  405e00:	str	x8, [x9, #24]
  405e04:	ldr	x8, [sp, #24]
  405e08:	ldr	x8, [x8, #24]
  405e0c:	ldr	x9, [sp, #24]
  405e10:	ldr	x9, [x9, #8]
  405e14:	subs	x8, x8, x9
  405e18:	ldr	x9, [sp, #24]
  405e1c:	ldr	x9, [x9, #32]
  405e20:	ldr	x10, [sp, #24]
  405e24:	ldr	x10, [x10, #8]
  405e28:	subs	x9, x9, x10
  405e2c:	cmp	x8, x9
  405e30:	b.ls	405e44 <wcrtomb@plt+0x3094>  // b.plast
  405e34:	ldr	x8, [sp, #24]
  405e38:	ldr	x8, [x8, #32]
  405e3c:	ldr	x9, [sp, #24]
  405e40:	str	x8, [x9, #24]
  405e44:	ldr	x8, [sp, #24]
  405e48:	ldr	x8, [x8, #24]
  405e4c:	ldr	x9, [sp, #24]
  405e50:	str	x8, [x9, #16]
  405e54:	ldr	x8, [sp, #16]
  405e58:	str	x8, [sp, #8]
  405e5c:	ldr	x8, [sp, #8]
  405e60:	str	x8, [sp, #32]
  405e64:	ldr	x8, [sp, #32]
  405e68:	stur	x8, [x29, #-56]
  405e6c:	ldur	x0, [x29, #-48]
  405e70:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  405e74:	ldur	x8, [x29, #-56]
  405e78:	str	x0, [x8]
  405e7c:	ldur	x8, [x29, #-56]
  405e80:	ldr	x0, [x8]
  405e84:	ldur	x1, [x29, #-24]
  405e88:	ldur	w2, [x29, #-28]
  405e8c:	bl	40ceac <wcrtomb@plt+0xa0fc>
  405e90:	ldur	x8, [x29, #-56]
  405e94:	str	x0, [x8, #16]
  405e98:	ldur	x8, [x29, #-56]
  405e9c:	mov	w10, #0x0                   	// #0
  405ea0:	strb	w10, [x8, #8]
  405ea4:	ldur	x8, [x29, #-16]
  405ea8:	ldr	x8, [x8]
  405eac:	ldur	x9, [x29, #-56]
  405eb0:	str	x8, [x9, #24]
  405eb4:	ldur	x8, [x29, #-56]
  405eb8:	ldur	x9, [x29, #-16]
  405ebc:	str	x8, [x9]
  405ec0:	ldur	x0, [x29, #-40]
  405ec4:	bl	40ddb4 <wcrtomb@plt+0xb004>
  405ec8:	ldur	x8, [x29, #-56]
  405ecc:	stur	x8, [x29, #-8]
  405ed0:	ldur	x0, [x29, #-8]
  405ed4:	ldp	x29, x30, [sp, #144]
  405ed8:	add	sp, sp, #0xa0
  405edc:	ret
  405ee0:	sub	sp, sp, #0x50
  405ee4:	stp	x29, x30, [sp, #64]
  405ee8:	add	x29, sp, #0x40
  405eec:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405ef0:	add	x8, x8, #0x8dc
  405ef4:	mov	w9, #0x0                   	// #0
  405ef8:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x18e64>
  405efc:	add	x10, x10, #0x624
  405f00:	add	x10, x10, #0x260
  405f04:	stur	w0, [x29, #-12]
  405f08:	stur	w1, [x29, #-16]
  405f0c:	str	xzr, [sp, #24]
  405f10:	ldr	w11, [x8]
  405f14:	cmp	w11, #0x1
  405f18:	str	w9, [sp, #16]
  405f1c:	str	x10, [sp, #8]
  405f20:	b.ne	405f30 <wcrtomb@plt+0x3180>  // b.any
  405f24:	ldr	w8, [sp, #16]
  405f28:	tbnz	w8, #0, 405f40 <wcrtomb@plt+0x3190>
  405f2c:	b	405f48 <wcrtomb@plt+0x3198>
  405f30:	ldur	w0, [x29, #-12]
  405f34:	add	x1, sp, #0x18
  405f38:	bl	40b3f0 <wcrtomb@plt+0x8640>
  405f3c:	cbz	w0, 405f48 <wcrtomb@plt+0x3198>
  405f40:	ldr	x0, [sp, #8]
  405f44:	bl	402ecc <wcrtomb@plt+0x11c>
  405f48:	str	xzr, [sp, #24]
  405f4c:	bl	40db28 <wcrtomb@plt+0xad78>
  405f50:	stur	x0, [x29, #-24]
  405f54:	bl	4051b8 <wcrtomb@plt+0x2408>
  405f58:	stur	w0, [x29, #-28]
  405f5c:	mov	w8, #0xffffffff            	// #-1
  405f60:	mov	w9, #0x0                   	// #0
  405f64:	cmp	w0, w8
  405f68:	str	w9, [sp, #4]
  405f6c:	b.eq	405f80 <wcrtomb@plt+0x31d0>  // b.none
  405f70:	ldur	w8, [x29, #-28]
  405f74:	cmp	w8, #0xa
  405f78:	cset	w8, ne  // ne = any
  405f7c:	str	w8, [sp, #4]
  405f80:	ldr	w8, [sp, #4]
  405f84:	tbnz	w8, #0, 405f8c <wcrtomb@plt+0x31dc>
  405f88:	b	4060c4 <wcrtomb@plt+0x3314>
  405f8c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  405f90:	add	x8, x8, #0x8dc
  405f94:	ldr	w9, [x8]
  405f98:	cmp	w9, #0x1
  405f9c:	b.ne	405fac <wcrtomb@plt+0x31fc>  // b.any
  405fa0:	mov	w8, wzr
  405fa4:	str	w8, [sp]
  405fa8:	b	405fbc <wcrtomb@plt+0x320c>
  405fac:	ldur	w0, [x29, #-28]
  405fb0:	add	x1, sp, #0x18
  405fb4:	bl	40b3f0 <wcrtomb@plt+0x8640>
  405fb8:	str	w0, [sp]
  405fbc:	ldr	w8, [sp]
  405fc0:	str	w8, [sp, #20]
  405fc4:	ldr	w8, [sp, #20]
  405fc8:	cbnz	w8, 4060b4 <wcrtomb@plt+0x3304>
  405fcc:	ldur	w8, [x29, #-28]
  405fd0:	ldur	w9, [x29, #-12]
  405fd4:	cmp	w8, w9
  405fd8:	b.ne	405fe8 <wcrtomb@plt+0x3238>  // b.any
  405fdc:	ldur	x8, [x29, #-24]
  405fe0:	stur	x8, [x29, #-8]
  405fe4:	b	4060e8 <wcrtomb@plt+0x3338>
  405fe8:	ldur	w8, [x29, #-28]
  405fec:	cmp	w8, #0x5c
  405ff0:	b.ne	406070 <wcrtomb@plt+0x32c0>  // b.any
  405ff4:	bl	4051b8 <wcrtomb@plt+0x2408>
  405ff8:	stur	w0, [x29, #-28]
  405ffc:	ldur	w8, [x29, #-28]
  406000:	mov	w9, #0xffffffff            	// #-1
  406004:	cmp	w8, w9
  406008:	b.ne	406010 <wcrtomb@plt+0x3260>  // b.any
  40600c:	b	4060c4 <wcrtomb@plt+0x3314>
  406010:	ldur	w8, [x29, #-28]
  406014:	cmp	w8, #0x6e
  406018:	b.ne	406030 <wcrtomb@plt+0x3280>  // b.any
  40601c:	ldur	w8, [x29, #-16]
  406020:	cbz	w8, 406030 <wcrtomb@plt+0x3280>
  406024:	mov	w8, #0xa                   	// #10
  406028:	stur	w8, [x29, #-28]
  40602c:	b	40606c <wcrtomb@plt+0x32bc>
  406030:	ldur	w8, [x29, #-28]
  406034:	cmp	w8, #0xa
  406038:	b.eq	40606c <wcrtomb@plt+0x32bc>  // b.none
  40603c:	ldur	w8, [x29, #-28]
  406040:	ldur	w9, [x29, #-12]
  406044:	cmp	w8, w9
  406048:	b.ne	406060 <wcrtomb@plt+0x32b0>  // b.any
  40604c:	ldur	w8, [x29, #-16]
  406050:	cbnz	w8, 40606c <wcrtomb@plt+0x32bc>
  406054:	ldur	w8, [x29, #-28]
  406058:	cmp	w8, #0x26
  40605c:	b.ne	40606c <wcrtomb@plt+0x32bc>  // b.any
  406060:	ldur	x0, [x29, #-24]
  406064:	mov	w1, #0x5c                  	// #92
  406068:	bl	40dd10 <wcrtomb@plt+0xaf60>
  40606c:	b	4060b4 <wcrtomb@plt+0x3304>
  406070:	ldur	w8, [x29, #-28]
  406074:	cmp	w8, #0x5b
  406078:	b.ne	4060b4 <wcrtomb@plt+0x3304>  // b.any
  40607c:	ldur	w8, [x29, #-16]
  406080:	cbz	w8, 4060b4 <wcrtomb@plt+0x3304>
  406084:	ldur	x0, [x29, #-24]
  406088:	ldur	w1, [x29, #-28]
  40608c:	bl	40dd10 <wcrtomb@plt+0xaf60>
  406090:	ldur	x8, [x29, #-24]
  406094:	mov	x0, x8
  406098:	add	x1, sp, #0x18
  40609c:	bl	406748 <wcrtomb@plt+0x3998>
  4060a0:	stur	w0, [x29, #-28]
  4060a4:	ldur	w9, [x29, #-28]
  4060a8:	cmp	w9, #0x5d
  4060ac:	b.eq	4060b4 <wcrtomb@plt+0x3304>  // b.none
  4060b0:	b	4060c4 <wcrtomb@plt+0x3314>
  4060b4:	ldur	x0, [x29, #-24]
  4060b8:	ldur	w1, [x29, #-28]
  4060bc:	bl	40dd10 <wcrtomb@plt+0xaf60>
  4060c0:	b	405f54 <wcrtomb@plt+0x31a4>
  4060c4:	ldur	w8, [x29, #-28]
  4060c8:	cmp	w8, #0xa
  4060cc:	b.ne	4060d8 <wcrtomb@plt+0x3328>  // b.any
  4060d0:	ldur	w0, [x29, #-28]
  4060d4:	bl	4059c8 <wcrtomb@plt+0x2c18>
  4060d8:	ldur	x0, [x29, #-24]
  4060dc:	bl	40ddb4 <wcrtomb@plt+0xb004>
  4060e0:	mov	x8, xzr
  4060e4:	stur	x8, [x29, #-8]
  4060e8:	ldur	x0, [x29, #-8]
  4060ec:	ldp	x29, x30, [sp, #64]
  4060f0:	add	sp, sp, #0x50
  4060f4:	ret
  4060f8:	sub	sp, sp, #0x90
  4060fc:	stp	x29, x30, [sp, #128]
  406100:	add	x29, sp, #0x80
  406104:	mov	x8, #0x1                   	// #1
  406108:	mov	w9, #0x1                   	// #1
  40610c:	add	x10, sp, #0x28
  406110:	stur	x0, [x29, #-8]
  406114:	stur	x1, [x29, #-16]
  406118:	stur	x2, [x29, #-24]
  40611c:	stur	wzr, [x29, #-52]
  406120:	stur	wzr, [x29, #-56]
  406124:	ldur	x11, [x29, #-8]
  406128:	ldrb	w12, [x11, #32]
  40612c:	and	w12, w12, #0xf
  406130:	strb	w12, [x11, #32]
  406134:	ldur	x0, [x29, #-16]
  406138:	ldur	x11, [x29, #-24]
  40613c:	mul	x1, x11, x8
  406140:	str	w9, [sp, #28]
  406144:	str	x10, [sp, #16]
  406148:	bl	41d984 <wcrtomb@plt+0x1abd4>
  40614c:	stur	x0, [x29, #-32]
  406150:	ldur	x0, [x29, #-32]
  406154:	ldur	x1, [x29, #-24]
  406158:	ldr	w2, [sp, #28]
  40615c:	bl	402fbc <wcrtomb@plt+0x20c>
  406160:	stur	x0, [x29, #-24]
  406164:	ldur	x8, [x29, #-32]
  406168:	ldur	x10, [x29, #-24]
  40616c:	add	x8, x8, x10
  406170:	stur	x8, [x29, #-48]
  406174:	ldr	x8, [sp, #16]
  406178:	str	x8, [sp, #32]
  40617c:	ldur	x10, [x29, #-32]
  406180:	stur	x10, [x29, #-40]
  406184:	ldur	x8, [x29, #-40]
  406188:	ldur	x9, [x29, #-48]
  40618c:	cmp	x8, x9
  406190:	b.cs	4063ec <wcrtomb@plt+0x363c>  // b.hs, b.nlast
  406194:	ldur	x8, [x29, #-40]
  406198:	ldrb	w9, [x8]
  40619c:	cmp	w9, #0x5c
  4061a0:	b.ne	40638c <wcrtomb@plt+0x35dc>  // b.any
  4061a4:	ldur	x0, [x29, #-32]
  4061a8:	ldur	x8, [x29, #-40]
  4061ac:	ldur	x9, [x29, #-32]
  4061b0:	subs	x1, x8, x9
  4061b4:	ldur	w2, [x29, #-52]
  4061b8:	bl	406948 <wcrtomb@plt+0x3b98>
  4061bc:	ldr	x8, [sp, #32]
  4061c0:	str	x0, [x8, #24]
  4061c4:	str	x0, [sp, #32]
  4061c8:	ldur	w10, [x29, #-56]
  4061cc:	stur	w10, [x29, #-52]
  4061d0:	ldur	x8, [x29, #-40]
  4061d4:	add	x8, x8, #0x1
  4061d8:	stur	x8, [x29, #-40]
  4061dc:	ldur	x8, [x29, #-40]
  4061e0:	ldur	x9, [x29, #-48]
  4061e4:	cmp	x8, x9
  4061e8:	b.ne	406200 <wcrtomb@plt+0x3450>  // b.any
  4061ec:	ldr	x8, [sp, #32]
  4061f0:	ldr	x9, [x8, #8]
  4061f4:	add	x9, x9, #0x1
  4061f8:	str	x9, [x8, #8]
  4061fc:	b	40637c <wcrtomb@plt+0x35cc>
  406200:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406204:	add	x8, x8, #0x8e0
  406208:	ldr	w9, [x8]
  40620c:	cmp	w9, #0x2
  406210:	b.ne	40625c <wcrtomb@plt+0x34ac>  // b.any
  406214:	bl	402b20 <__ctype_b_loc@plt>
  406218:	ldr	x8, [x0]
  40621c:	ldur	x9, [x29, #-40]
  406220:	ldrb	w10, [x9]
  406224:	ldrh	w10, [x8, w10, sxtw #1]
  406228:	and	w10, w10, #0x800
  40622c:	cbnz	w10, 40625c <wcrtomb@plt+0x34ac>
  406230:	ldur	x8, [x29, #-40]
  406234:	ldrb	w9, [x8]
  406238:	ldur	x8, [x29, #-40]
  40623c:	mov	x10, #0xffffffffffffffff    	// #-1
  406240:	add	x8, x8, x10
  406244:	strb	w9, [x8]
  406248:	ldr	x8, [sp, #32]
  40624c:	ldr	x10, [x8, #8]
  406250:	add	x10, x10, #0x1
  406254:	str	x10, [x8, #8]
  406258:	b	40637c <wcrtomb@plt+0x35cc>
  40625c:	ldur	x8, [x29, #-40]
  406260:	ldrb	w9, [x8]
  406264:	subs	w9, w9, #0x30
  406268:	mov	w8, w9
  40626c:	ubfx	x8, x8, #0, #32
  406270:	cmp	x8, #0x45
  406274:	str	x8, [sp, #8]
  406278:	b.hi	406354 <wcrtomb@plt+0x35a4>  // b.pmore
  40627c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  406280:	add	x8, x8, #0x310
  406284:	ldr	x11, [sp, #8]
  406288:	ldrsw	x10, [x8, x11, lsl #2]
  40628c:	add	x9, x8, x10
  406290:	br	x9
  406294:	ldur	x8, [x29, #-40]
  406298:	ldrb	w9, [x8]
  40629c:	subs	w9, w9, #0x30
  4062a0:	ldr	x8, [sp, #32]
  4062a4:	str	w9, [x8, #16]
  4062a8:	ldur	x8, [x29, #-8]
  4062ac:	ldrb	w9, [x8, #32]
  4062b0:	mov	w10, #0x4                   	// #4
  4062b4:	lsr	w9, w9, w10
  4062b8:	and	w9, w9, #0xff
  4062bc:	ldr	x8, [sp, #32]
  4062c0:	ldr	w10, [x8, #16]
  4062c4:	cmp	w9, w10
  4062c8:	b.ge	4062f4 <wcrtomb@plt+0x3544>  // b.tcont
  4062cc:	ldr	x8, [sp, #32]
  4062d0:	ldr	w9, [x8, #16]
  4062d4:	ldur	x8, [x29, #-8]
  4062d8:	ldrb	w10, [x8, #32]
  4062dc:	mov	w11, #0xf                   	// #15
  4062e0:	and	w9, w9, #0xf
  4062e4:	lsl	w9, w9, #4
  4062e8:	and	w10, w10, w11
  4062ec:	orr	w9, w10, w9
  4062f0:	strb	w9, [x8, #32]
  4062f4:	b	40637c <wcrtomb@plt+0x35cc>
  4062f8:	mov	w8, #0x2                   	// #2
  4062fc:	stur	w8, [x29, #-52]
  406300:	stur	w8, [x29, #-56]
  406304:	b	40637c <wcrtomb@plt+0x35cc>
  406308:	mov	w8, #0x1                   	// #1
  40630c:	stur	w8, [x29, #-52]
  406310:	stur	w8, [x29, #-56]
  406314:	b	40637c <wcrtomb@plt+0x35cc>
  406318:	stur	wzr, [x29, #-52]
  40631c:	stur	wzr, [x29, #-56]
  406320:	b	40637c <wcrtomb@plt+0x35cc>
  406324:	ldur	w8, [x29, #-52]
  406328:	stur	w8, [x29, #-56]
  40632c:	ldur	w8, [x29, #-52]
  406330:	orr	w8, w8, #0x8
  406334:	stur	w8, [x29, #-52]
  406338:	b	40637c <wcrtomb@plt+0x35cc>
  40633c:	ldur	w8, [x29, #-52]
  406340:	stur	w8, [x29, #-56]
  406344:	ldur	w8, [x29, #-52]
  406348:	orr	w8, w8, #0x4
  40634c:	stur	w8, [x29, #-52]
  406350:	b	40637c <wcrtomb@plt+0x35cc>
  406354:	ldur	x8, [x29, #-40]
  406358:	ldrb	w9, [x8]
  40635c:	ldur	x8, [x29, #-40]
  406360:	mov	x10, #0xffffffffffffffff    	// #-1
  406364:	add	x8, x8, x10
  406368:	strb	w9, [x8]
  40636c:	ldr	x8, [sp, #32]
  406370:	ldr	x10, [x8, #8]
  406374:	add	x10, x10, #0x1
  406378:	str	x10, [x8, #8]
  40637c:	ldur	x8, [x29, #-40]
  406380:	add	x8, x8, #0x1
  406384:	stur	x8, [x29, #-32]
  406388:	b	4063dc <wcrtomb@plt+0x362c>
  40638c:	ldur	x8, [x29, #-40]
  406390:	ldrb	w9, [x8]
  406394:	cmp	w9, #0x26
  406398:	b.ne	4063dc <wcrtomb@plt+0x362c>  // b.any
  40639c:	ldur	x0, [x29, #-32]
  4063a0:	ldur	x8, [x29, #-40]
  4063a4:	ldur	x9, [x29, #-32]
  4063a8:	subs	x1, x8, x9
  4063ac:	ldur	w2, [x29, #-52]
  4063b0:	bl	406948 <wcrtomb@plt+0x3b98>
  4063b4:	ldr	x8, [sp, #32]
  4063b8:	str	x0, [x8, #24]
  4063bc:	str	x0, [sp, #32]
  4063c0:	ldur	w10, [x29, #-56]
  4063c4:	stur	w10, [x29, #-52]
  4063c8:	ldr	x8, [sp, #32]
  4063cc:	str	wzr, [x8, #16]
  4063d0:	ldur	x8, [x29, #-40]
  4063d4:	add	x8, x8, #0x1
  4063d8:	stur	x8, [x29, #-32]
  4063dc:	ldur	x8, [x29, #-40]
  4063e0:	add	x8, x8, #0x1
  4063e4:	stur	x8, [x29, #-40]
  4063e8:	b	406184 <wcrtomb@plt+0x33d4>
  4063ec:	ldur	x8, [x29, #-32]
  4063f0:	ldur	x9, [x29, #-48]
  4063f4:	cmp	x8, x9
  4063f8:	b.cs	406420 <wcrtomb@plt+0x3670>  // b.hs, b.nlast
  4063fc:	ldur	x0, [x29, #-32]
  406400:	ldur	x8, [x29, #-48]
  406404:	ldur	x9, [x29, #-32]
  406408:	subs	x1, x8, x9
  40640c:	ldur	w2, [x29, #-52]
  406410:	bl	406948 <wcrtomb@plt+0x3b98>
  406414:	ldr	x8, [sp, #32]
  406418:	str	x0, [x8, #24]
  40641c:	str	x0, [sp, #32]
  406420:	ldr	x8, [sp, #32]
  406424:	mov	x9, xzr
  406428:	str	x9, [x8, #24]
  40642c:	add	x8, sp, #0x28
  406430:	ldr	x8, [x8, #24]
  406434:	ldur	x9, [x29, #-8]
  406438:	str	x8, [x9, #8]
  40643c:	ldp	x29, x30, [sp, #128]
  406440:	add	sp, sp, #0x90
  406444:	ret
  406448:	sub	sp, sp, #0x60
  40644c:	stp	x29, x30, [sp, #80]
  406450:	add	x29, sp, #0x50
  406454:	mov	x8, xzr
  406458:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x18e64>
  40645c:	add	x9, x9, #0x624
  406460:	add	x10, x9, #0x205
  406464:	add	x11, x9, #0x1de
  406468:	add	x12, x9, #0x1ba
  40646c:	add	x13, x9, #0x196
  406470:	adrp	x14, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406474:	add	x14, x14, #0x8e0
  406478:	add	x9, x9, #0x180
  40647c:	stur	x0, [x29, #-16]
  406480:	stur	wzr, [x29, #-20]
  406484:	ldur	x15, [x29, #-16]
  406488:	ldrb	w16, [x15, #32]
  40648c:	and	w16, w16, #0xfffffffe
  406490:	strb	w16, [x15, #32]
  406494:	ldur	x15, [x29, #-16]
  406498:	ldrb	w16, [x15, #32]
  40649c:	and	w16, w16, #0xfffffff9
  4064a0:	strb	w16, [x15, #32]
  4064a4:	ldur	x15, [x29, #-16]
  4064a8:	ldrb	w16, [x15, #32]
  4064ac:	and	w16, w16, #0xfffffff7
  4064b0:	strb	w16, [x15, #32]
  4064b4:	ldur	x15, [x29, #-16]
  4064b8:	str	xzr, [x15, #16]
  4064bc:	ldur	x15, [x29, #-16]
  4064c0:	str	x8, [x15, #24]
  4064c4:	stur	x10, [x29, #-32]
  4064c8:	str	x11, [sp, #40]
  4064cc:	str	x12, [sp, #32]
  4064d0:	str	x13, [sp, #24]
  4064d4:	str	x14, [sp, #16]
  4064d8:	str	x9, [sp, #8]
  4064dc:	bl	4055f8 <wcrtomb@plt+0x2848>
  4064e0:	stur	w0, [x29, #-24]
  4064e4:	add	w8, w0, #0x1
  4064e8:	mov	w9, w8
  4064ec:	ubfx	x9, x9, #0, #32
  4064f0:	cmp	x9, #0x7e
  4064f4:	str	x9, [sp]
  4064f8:	b.hi	4066f8 <wcrtomb@plt+0x3948>  // b.pmore
  4064fc:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  406500:	add	x8, x8, #0x428
  406504:	ldr	x11, [sp]
  406508:	ldrsw	x10, [x8, x11, lsl #2]
  40650c:	add	x9, x8, x10
  406510:	br	x9
  406514:	ldr	x8, [sp, #16]
  406518:	ldr	w9, [x8]
  40651c:	cmp	w9, #0x2
  406520:	b.ne	406530 <wcrtomb@plt+0x3780>  // b.any
  406524:	ldr	x0, [sp, #8]
  406528:	bl	402d40 <gettext@plt>
  40652c:	bl	402ecc <wcrtomb@plt+0x11c>
  406530:	ldur	w8, [x29, #-20]
  406534:	orr	w8, w8, #0x2
  406538:	stur	w8, [x29, #-20]
  40653c:	b	406704 <wcrtomb@plt+0x3954>
  406540:	ldr	x8, [sp, #16]
  406544:	ldr	w9, [x8]
  406548:	cmp	w9, #0x2
  40654c:	b.ne	40655c <wcrtomb@plt+0x37ac>  // b.any
  406550:	ldr	x0, [sp, #8]
  406554:	bl	402d40 <gettext@plt>
  406558:	bl	402ecc <wcrtomb@plt+0x11c>
  40655c:	ldur	w8, [x29, #-20]
  406560:	orr	w8, w8, #0x4
  406564:	stur	w8, [x29, #-20]
  406568:	b	406704 <wcrtomb@plt+0x3954>
  40656c:	ldr	x8, [sp, #16]
  406570:	ldr	w9, [x8]
  406574:	cmp	w9, #0x2
  406578:	b.ne	406588 <wcrtomb@plt+0x37d8>  // b.any
  40657c:	ldr	x0, [sp, #8]
  406580:	bl	402d40 <gettext@plt>
  406584:	bl	402ecc <wcrtomb@plt+0x11c>
  406588:	ldur	x8, [x29, #-16]
  40658c:	ldrb	w9, [x8, #32]
  406590:	and	w9, w9, #0xfffffff7
  406594:	orr	w9, w9, #0x8
  406598:	strb	w9, [x8, #32]
  40659c:	b	406704 <wcrtomb@plt+0x3954>
  4065a0:	ldur	x8, [x29, #-16]
  4065a4:	ldrb	w9, [x8, #32]
  4065a8:	mov	w10, #0x1                   	// #1
  4065ac:	lsr	w9, w9, w10
  4065b0:	and	w9, w9, #0x3
  4065b4:	and	w9, w9, #0xff
  4065b8:	cbz	w9, 4065c8 <wcrtomb@plt+0x3818>
  4065bc:	ldr	x0, [sp, #24]
  4065c0:	bl	402d40 <gettext@plt>
  4065c4:	bl	402ecc <wcrtomb@plt+0x11c>
  4065c8:	ldur	x8, [x29, #-16]
  4065cc:	ldrb	w9, [x8, #32]
  4065d0:	mov	w10, #0x3                   	// #3
  4065d4:	lsr	w9, w9, w10
  4065d8:	mov	w11, #0x1                   	// #1
  4065dc:	and	w9, w9, #0x1
  4065e0:	and	w9, w9, #0xff
  4065e4:	mov	w12, #0x1                   	// #1
  4065e8:	lsl	w9, w12, w9
  4065ec:	ldur	x8, [x29, #-16]
  4065f0:	ldrb	w12, [x8, #32]
  4065f4:	lsr	w12, w12, w11
  4065f8:	and	w12, w12, w10
  4065fc:	and	w12, w12, #0xff
  406600:	orr	w9, w12, w9
  406604:	ldrb	w12, [x8, #32]
  406608:	and	w9, w9, w10
  40660c:	lsl	w9, w9, w11
  406610:	and	w10, w12, #0xfffffff9
  406614:	orr	w9, w10, w9
  406618:	strb	w9, [x8, #32]
  40661c:	b	406704 <wcrtomb@plt+0x3954>
  406620:	ldur	x8, [x29, #-16]
  406624:	ldrb	w9, [x8, #32]
  406628:	and	w9, w9, #0x1
  40662c:	and	w9, w9, #0xff
  406630:	cbz	w9, 406640 <wcrtomb@plt+0x3890>
  406634:	ldr	x0, [sp, #32]
  406638:	bl	402d40 <gettext@plt>
  40663c:	bl	402ecc <wcrtomb@plt+0x11c>
  406640:	ldur	x8, [x29, #-16]
  406644:	ldrb	w9, [x8, #32]
  406648:	and	w9, w9, #0xfffffffe
  40664c:	orr	w9, w9, #0x1
  406650:	strb	w9, [x8, #32]
  406654:	b	406704 <wcrtomb@plt+0x3954>
  406658:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40665c:	add	x8, x8, #0x478
  406660:	ldr	x1, [x8]
  406664:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406668:	add	x0, x0, #0x5a8
  40666c:	mov	w2, #0x1                   	// #1
  406670:	bl	405bd0 <wcrtomb@plt+0x2e20>
  406674:	ldur	x8, [x29, #-16]
  406678:	str	x0, [x8, #24]
  40667c:	ldur	w9, [x29, #-20]
  406680:	stur	w9, [x29, #-4]
  406684:	b	406708 <wcrtomb@plt+0x3958>
  406688:	ldur	x8, [x29, #-16]
  40668c:	ldr	x8, [x8, #16]
  406690:	cbz	x8, 4066a0 <wcrtomb@plt+0x38f0>
  406694:	ldr	x0, [sp, #40]
  406698:	bl	402d40 <gettext@plt>
  40669c:	bl	402ecc <wcrtomb@plt+0x11c>
  4066a0:	ldur	w0, [x29, #-24]
  4066a4:	bl	405aa8 <wcrtomb@plt+0x2cf8>
  4066a8:	ldur	x8, [x29, #-16]
  4066ac:	str	x0, [x8, #16]
  4066b0:	ldur	x8, [x29, #-16]
  4066b4:	ldr	x8, [x8, #16]
  4066b8:	cbnz	x8, 4066c8 <wcrtomb@plt+0x3918>
  4066bc:	ldur	x0, [x29, #-32]
  4066c0:	bl	402d40 <gettext@plt>
  4066c4:	bl	402ecc <wcrtomb@plt+0x11c>
  4066c8:	b	406704 <wcrtomb@plt+0x3954>
  4066cc:	ldur	w0, [x29, #-24]
  4066d0:	bl	4059c8 <wcrtomb@plt+0x2c18>
  4066d4:	ldur	w8, [x29, #-20]
  4066d8:	stur	w8, [x29, #-4]
  4066dc:	b	406708 <wcrtomb@plt+0x3958>
  4066e0:	bl	4051b8 <wcrtomb@plt+0x2408>
  4066e4:	cmp	w0, #0xa
  4066e8:	b.ne	4066f8 <wcrtomb@plt+0x3948>  // b.any
  4066ec:	ldur	w8, [x29, #-20]
  4066f0:	stur	w8, [x29, #-4]
  4066f4:	b	406708 <wcrtomb@plt+0x3958>
  4066f8:	ldr	x0, [sp, #8]
  4066fc:	bl	402d40 <gettext@plt>
  406700:	bl	402ecc <wcrtomb@plt+0x11c>
  406704:	b	4064dc <wcrtomb@plt+0x372c>
  406708:	ldur	w0, [x29, #-4]
  40670c:	ldp	x29, x30, [sp, #80]
  406710:	add	sp, sp, #0x60
  406714:	ret
  406718:	sub	sp, sp, #0x20
  40671c:	stp	x29, x30, [sp, #16]
  406720:	add	x29, sp, #0x10
  406724:	str	x0, [sp, #8]
  406728:	str	w1, [sp, #4]
  40672c:	ldr	x0, [sp, #8]
  406730:	ldr	w1, [sp, #4]
  406734:	bl	40dd10 <wcrtomb@plt+0xaf60>
  406738:	bl	4051b8 <wcrtomb@plt+0x2408>
  40673c:	ldp	x29, x30, [sp, #16]
  406740:	add	sp, sp, #0x20
  406744:	ret
  406748:	sub	sp, sp, #0x40
  40674c:	stp	x29, x30, [sp, #48]
  406750:	add	x29, sp, #0x30
  406754:	stur	x0, [x29, #-16]
  406758:	str	x1, [sp, #24]
  40675c:	str	wzr, [sp, #16]
  406760:	bl	4051b8 <wcrtomb@plt+0x2408>
  406764:	str	w0, [sp, #20]
  406768:	ldr	w8, [sp, #20]
  40676c:	cmp	w8, #0x5e
  406770:	b.ne	406784 <wcrtomb@plt+0x39d4>  // b.any
  406774:	ldur	x0, [x29, #-16]
  406778:	ldr	w1, [sp, #20]
  40677c:	bl	406718 <wcrtomb@plt+0x3968>
  406780:	str	w0, [sp, #20]
  406784:	ldr	w8, [sp, #20]
  406788:	cmp	w8, #0x5d
  40678c:	b.ne	4067a0 <wcrtomb@plt+0x39f0>  // b.any
  406790:	ldur	x0, [x29, #-16]
  406794:	ldr	w1, [sp, #20]
  406798:	bl	406718 <wcrtomb@plt+0x3968>
  40679c:	str	w0, [sp, #20]
  4067a0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4067a4:	add	x8, x8, #0x8dc
  4067a8:	ldr	w9, [x8]
  4067ac:	cmp	w9, #0x1
  4067b0:	b.ne	4067c0 <wcrtomb@plt+0x3a10>  // b.any
  4067b4:	mov	w8, wzr
  4067b8:	str	w8, [sp, #4]
  4067bc:	b	4067d0 <wcrtomb@plt+0x3a20>
  4067c0:	ldr	w0, [sp, #20]
  4067c4:	ldr	x1, [sp, #24]
  4067c8:	bl	40b3f0 <wcrtomb@plt+0x8640>
  4067cc:	str	w0, [sp, #4]
  4067d0:	ldr	w8, [sp, #4]
  4067d4:	str	w8, [sp, #8]
  4067d8:	ldr	w8, [sp, #20]
  4067dc:	mov	w9, #0xffffffff            	// #-1
  4067e0:	cmp	w8, w9
  4067e4:	str	w8, [sp]
  4067e8:	b.eq	406850 <wcrtomb@plt+0x3aa0>  // b.none
  4067ec:	b	4067f0 <wcrtomb@plt+0x3a40>
  4067f0:	ldr	w8, [sp]
  4067f4:	cmp	w8, #0xa
  4067f8:	b.eq	406850 <wcrtomb@plt+0x3aa0>  // b.none
  4067fc:	b	406800 <wcrtomb@plt+0x3a50>
  406800:	ldr	w8, [sp]
  406804:	cmp	w8, #0x2e
  406808:	b.eq	40685c <wcrtomb@plt+0x3aac>  // b.none
  40680c:	b	406810 <wcrtomb@plt+0x3a60>
  406810:	ldr	w8, [sp]
  406814:	cmp	w8, #0x3a
  406818:	b.eq	40685c <wcrtomb@plt+0x3aac>  // b.none
  40681c:	b	406820 <wcrtomb@plt+0x3a70>
  406820:	ldr	w8, [sp]
  406824:	cmp	w8, #0x3d
  406828:	b.eq	40685c <wcrtomb@plt+0x3aac>  // b.none
  40682c:	b	406830 <wcrtomb@plt+0x3a80>
  406830:	ldr	w8, [sp]
  406834:	cmp	w8, #0x5b
  406838:	b.eq	4068b8 <wcrtomb@plt+0x3b08>  // b.none
  40683c:	b	406840 <wcrtomb@plt+0x3a90>
  406840:	ldr	w8, [sp]
  406844:	cmp	w8, #0x5d
  406848:	b.eq	4068d8 <wcrtomb@plt+0x3b28>  // b.none
  40684c:	b	406918 <wcrtomb@plt+0x3b68>
  406850:	ldr	w8, [sp, #20]
  406854:	stur	w8, [x29, #-4]
  406858:	b	406938 <wcrtomb@plt+0x3b88>
  40685c:	ldr	w8, [sp, #8]
  406860:	cbz	w8, 406868 <wcrtomb@plt+0x3ab8>
  406864:	b	406924 <wcrtomb@plt+0x3b74>
  406868:	ldr	w8, [sp, #16]
  40686c:	cmp	w8, #0x1
  406870:	b.ne	406888 <wcrtomb@plt+0x3ad8>  // b.any
  406874:	ldr	w8, [sp, #20]
  406878:	str	w8, [sp, #12]
  40687c:	mov	w8, #0x2                   	// #2
  406880:	str	w8, [sp, #16]
  406884:	b	4068b4 <wcrtomb@plt+0x3b04>
  406888:	ldr	w8, [sp, #16]
  40688c:	cmp	w8, #0x2
  406890:	b.ne	4068b0 <wcrtomb@plt+0x3b00>  // b.any
  406894:	ldr	w8, [sp, #20]
  406898:	ldr	w9, [sp, #12]
  40689c:	cmp	w8, w9
  4068a0:	b.ne	4068b0 <wcrtomb@plt+0x3b00>  // b.any
  4068a4:	mov	w8, #0x3                   	// #3
  4068a8:	str	w8, [sp, #16]
  4068ac:	b	4068b4 <wcrtomb@plt+0x3b04>
  4068b0:	b	406918 <wcrtomb@plt+0x3b68>
  4068b4:	b	406924 <wcrtomb@plt+0x3b74>
  4068b8:	ldr	w8, [sp, #8]
  4068bc:	cbz	w8, 4068c4 <wcrtomb@plt+0x3b14>
  4068c0:	b	406924 <wcrtomb@plt+0x3b74>
  4068c4:	ldr	w8, [sp, #16]
  4068c8:	cbnz	w8, 4068d4 <wcrtomb@plt+0x3b24>
  4068cc:	mov	w8, #0x1                   	// #1
  4068d0:	str	w8, [sp, #16]
  4068d4:	b	406924 <wcrtomb@plt+0x3b74>
  4068d8:	ldr	w8, [sp, #8]
  4068dc:	cbz	w8, 4068e4 <wcrtomb@plt+0x3b34>
  4068e0:	b	406924 <wcrtomb@plt+0x3b74>
  4068e4:	ldr	w8, [sp, #16]
  4068e8:	cbz	w8, 4068f8 <wcrtomb@plt+0x3b48>
  4068ec:	ldr	w8, [sp, #16]
  4068f0:	cmp	w8, #0x1
  4068f4:	b.ne	406904 <wcrtomb@plt+0x3b54>  // b.any
  4068f8:	ldr	w8, [sp, #20]
  4068fc:	stur	w8, [x29, #-4]
  406900:	b	406938 <wcrtomb@plt+0x3b88>
  406904:	ldr	w8, [sp, #16]
  406908:	cmp	w8, #0x3
  40690c:	b.ne	406914 <wcrtomb@plt+0x3b64>  // b.any
  406910:	str	wzr, [sp, #16]
  406914:	b	406918 <wcrtomb@plt+0x3b68>
  406918:	ldr	w8, [sp, #16]
  40691c:	and	w8, w8, #0xfffffffe
  406920:	str	w8, [sp, #16]
  406924:	ldur	x0, [x29, #-16]
  406928:	ldr	w1, [sp, #20]
  40692c:	bl	406718 <wcrtomb@plt+0x3968>
  406930:	str	w0, [sp, #20]
  406934:	b	4067a0 <wcrtomb@plt+0x39f0>
  406938:	ldur	w0, [x29, #-4]
  40693c:	ldp	x29, x30, [sp, #48]
  406940:	add	sp, sp, #0x40
  406944:	ret
  406948:	sub	sp, sp, #0x80
  40694c:	stp	x29, x30, [sp, #112]
  406950:	add	x29, sp, #0x70
  406954:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406958:	add	x8, x8, #0x5b0
  40695c:	mov	x9, #0x20                  	// #32
  406960:	stur	x0, [x29, #-8]
  406964:	stur	x1, [x29, #-16]
  406968:	stur	w2, [x29, #-20]
  40696c:	stur	x8, [x29, #-40]
  406970:	ldur	x8, [x29, #-40]
  406974:	stur	x8, [x29, #-48]
  406978:	str	x9, [sp, #56]
  40697c:	ldur	x8, [x29, #-48]
  406980:	str	x8, [sp, #48]
  406984:	ldr	x8, [sp, #48]
  406988:	ldr	x8, [x8, #32]
  40698c:	ldr	x9, [sp, #48]
  406990:	ldr	x9, [x9, #24]
  406994:	subs	x8, x8, x9
  406998:	str	x8, [sp, #40]
  40699c:	ldr	x8, [sp, #40]
  4069a0:	ldr	x9, [sp, #56]
  4069a4:	cmp	x8, x9
  4069a8:	b.cs	4069b8 <wcrtomb@plt+0x3c08>  // b.hs, b.nlast
  4069ac:	ldur	x0, [x29, #-48]
  4069b0:	ldr	x1, [sp, #56]
  4069b4:	bl	41dd10 <_obstack_newchunk@@Base>
  4069b8:	ldr	x8, [sp, #56]
  4069bc:	ldur	x9, [x29, #-48]
  4069c0:	ldr	x10, [x9, #24]
  4069c4:	add	x8, x10, x8
  4069c8:	str	x8, [x9, #24]
  4069cc:	ldur	x8, [x29, #-40]
  4069d0:	str	x8, [sp, #24]
  4069d4:	ldr	x8, [sp, #24]
  4069d8:	ldr	x8, [x8, #16]
  4069dc:	str	x8, [sp, #16]
  4069e0:	ldr	x8, [sp, #24]
  4069e4:	ldr	x8, [x8, #24]
  4069e8:	ldr	x9, [sp, #16]
  4069ec:	cmp	x8, x9
  4069f0:	b.ne	406a08 <wcrtomb@plt+0x3c58>  // b.any
  4069f4:	ldr	x8, [sp, #24]
  4069f8:	ldrb	w9, [x8, #80]
  4069fc:	and	w9, w9, #0xfffffffd
  406a00:	orr	w9, w9, #0x2
  406a04:	strb	w9, [x8, #80]
  406a08:	ldr	x8, [sp, #24]
  406a0c:	ldr	x8, [x8, #24]
  406a10:	mov	x9, xzr
  406a14:	subs	x8, x8, #0x0
  406a18:	ldr	x10, [sp, #24]
  406a1c:	ldr	x10, [x10, #48]
  406a20:	add	x8, x8, x10
  406a24:	ldr	x10, [sp, #24]
  406a28:	ldr	x10, [x10, #48]
  406a2c:	bic	x8, x8, x10
  406a30:	add	x8, x9, x8
  406a34:	ldr	x9, [sp, #24]
  406a38:	str	x8, [x9, #24]
  406a3c:	ldr	x8, [sp, #24]
  406a40:	ldr	x8, [x8, #24]
  406a44:	ldr	x9, [sp, #24]
  406a48:	ldr	x9, [x9, #8]
  406a4c:	subs	x8, x8, x9
  406a50:	ldr	x9, [sp, #24]
  406a54:	ldr	x9, [x9, #32]
  406a58:	ldr	x10, [sp, #24]
  406a5c:	ldr	x10, [x10, #8]
  406a60:	subs	x9, x9, x10
  406a64:	cmp	x8, x9
  406a68:	b.ls	406a7c <wcrtomb@plt+0x3ccc>  // b.plast
  406a6c:	ldr	x8, [sp, #24]
  406a70:	ldr	x8, [x8, #32]
  406a74:	ldr	x9, [sp, #24]
  406a78:	str	x8, [x9, #24]
  406a7c:	ldr	x8, [sp, #24]
  406a80:	ldr	x8, [x8, #24]
  406a84:	ldr	x9, [sp, #24]
  406a88:	str	x8, [x9, #16]
  406a8c:	ldr	x8, [sp, #16]
  406a90:	str	x8, [sp, #8]
  406a94:	ldr	x8, [sp, #8]
  406a98:	str	x8, [sp, #32]
  406a9c:	ldr	x8, [sp, #32]
  406aa0:	stur	x8, [x29, #-32]
  406aa4:	ldur	x8, [x29, #-8]
  406aa8:	ldur	x9, [x29, #-32]
  406aac:	str	x8, [x9]
  406ab0:	ldur	x8, [x29, #-16]
  406ab4:	ldur	x9, [x29, #-32]
  406ab8:	str	x8, [x9, #8]
  406abc:	ldur	x8, [x29, #-32]
  406ac0:	mov	w10, #0xffffffff            	// #-1
  406ac4:	str	w10, [x8, #16]
  406ac8:	ldur	w10, [x29, #-20]
  406acc:	ldur	x8, [x29, #-32]
  406ad0:	str	w10, [x8, #20]
  406ad4:	ldur	x0, [x29, #-32]
  406ad8:	ldp	x29, x30, [sp, #112]
  406adc:	add	sp, sp, #0x80
  406ae0:	ret
  406ae4:	sub	sp, sp, #0x20
  406ae8:	stp	x29, x30, [sp, #16]
  406aec:	add	x29, sp, #0x10
  406af0:	sturb	w0, [x29, #-1]
  406af4:	bl	402b20 <__ctype_b_loc@plt>
  406af8:	ldr	x8, [x0]
  406afc:	ldurb	w9, [x29, #-1]
  406b00:	ldrh	w9, [x8, w9, sxtw #1]
  406b04:	and	w9, w9, #0x4000
  406b08:	cbz	w9, 406b24 <wcrtomb@plt+0x3d74>
  406b0c:	ldurb	w8, [x29, #-1]
  406b10:	cmp	w8, #0x5c
  406b14:	b.eq	406b24 <wcrtomb@plt+0x3d74>  // b.none
  406b18:	ldurb	w0, [x29, #-1]
  406b1c:	bl	402990 <putchar_unlocked@plt>
  406b20:	b	406c04 <wcrtomb@plt+0x3e54>
  406b24:	mov	w0, #0x5c                  	// #92
  406b28:	bl	402990 <putchar_unlocked@plt>
  406b2c:	ldurb	w8, [x29, #-1]
  406b30:	cmp	w8, #0x7
  406b34:	str	w8, [sp, #8]
  406b38:	b.eq	406ba0 <wcrtomb@plt+0x3df0>  // b.none
  406b3c:	b	406b40 <wcrtomb@plt+0x3d90>
  406b40:	ldr	w8, [sp, #8]
  406b44:	cmp	w8, #0x9
  406b48:	b.eq	406bc4 <wcrtomb@plt+0x3e14>  // b.none
  406b4c:	b	406b50 <wcrtomb@plt+0x3da0>
  406b50:	ldr	w8, [sp, #8]
  406b54:	cmp	w8, #0xa
  406b58:	b.eq	406bdc <wcrtomb@plt+0x3e2c>  // b.none
  406b5c:	b	406b60 <wcrtomb@plt+0x3db0>
  406b60:	ldr	w8, [sp, #8]
  406b64:	cmp	w8, #0xb
  406b68:	b.eq	406bd0 <wcrtomb@plt+0x3e20>  // b.none
  406b6c:	b	406b70 <wcrtomb@plt+0x3dc0>
  406b70:	ldr	w8, [sp, #8]
  406b74:	cmp	w8, #0xc
  406b78:	b.eq	406bac <wcrtomb@plt+0x3dfc>  // b.none
  406b7c:	b	406b80 <wcrtomb@plt+0x3dd0>
  406b80:	ldr	w8, [sp, #8]
  406b84:	cmp	w8, #0xd
  406b88:	b.eq	406bb8 <wcrtomb@plt+0x3e08>  // b.none
  406b8c:	b	406b90 <wcrtomb@plt+0x3de0>
  406b90:	ldr	w8, [sp, #8]
  406b94:	cmp	w8, #0x5c
  406b98:	b.eq	406be8 <wcrtomb@plt+0x3e38>  // b.none
  406b9c:	b	406bf4 <wcrtomb@plt+0x3e44>
  406ba0:	mov	w0, #0x61                  	// #97
  406ba4:	bl	402990 <putchar_unlocked@plt>
  406ba8:	b	406c04 <wcrtomb@plt+0x3e54>
  406bac:	mov	w0, #0x66                  	// #102
  406bb0:	bl	402990 <putchar_unlocked@plt>
  406bb4:	b	406c04 <wcrtomb@plt+0x3e54>
  406bb8:	mov	w0, #0x72                  	// #114
  406bbc:	bl	402990 <putchar_unlocked@plt>
  406bc0:	b	406c04 <wcrtomb@plt+0x3e54>
  406bc4:	mov	w0, #0x74                  	// #116
  406bc8:	bl	402990 <putchar_unlocked@plt>
  406bcc:	b	406c04 <wcrtomb@plt+0x3e54>
  406bd0:	mov	w0, #0x76                  	// #118
  406bd4:	bl	402990 <putchar_unlocked@plt>
  406bd8:	b	406c04 <wcrtomb@plt+0x3e54>
  406bdc:	mov	w0, #0x6e                  	// #110
  406be0:	bl	402990 <putchar_unlocked@plt>
  406be4:	b	406c04 <wcrtomb@plt+0x3e54>
  406be8:	mov	w0, #0x5c                  	// #92
  406bec:	bl	402990 <putchar_unlocked@plt>
  406bf0:	b	406c04 <wcrtomb@plt+0x3e54>
  406bf4:	ldurb	w1, [x29, #-1]
  406bf8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406bfc:	add	x0, x0, #0xbec
  406c00:	bl	402ce0 <printf@plt>
  406c04:	ldp	x29, x30, [sp, #16]
  406c08:	add	sp, sp, #0x20
  406c0c:	ret
  406c10:	sub	sp, sp, #0x30
  406c14:	stp	x29, x30, [sp, #32]
  406c18:	add	x29, sp, #0x20
  406c1c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406c20:	add	x8, x8, #0x620
  406c24:	stur	x0, [x29, #-8]
  406c28:	str	x1, [sp, #16]
  406c2c:	ldur	x9, [x29, #-8]
  406c30:	str	x8, [sp]
  406c34:	cbnz	x9, 406c3c <wcrtomb@plt+0x3e8c>
  406c38:	b	406d6c <wcrtomb@plt+0x3fbc>
  406c3c:	ldr	x8, [sp, #16]
  406c40:	ldrb	w9, [x8, #21]
  406c44:	cmp	w9, #0x7d
  406c48:	b.ne	406c5c <wcrtomb@plt+0x3eac>  // b.any
  406c4c:	ldr	x8, [sp]
  406c50:	ldr	w9, [x8]
  406c54:	subs	w9, w9, #0x1
  406c58:	str	w9, [x8]
  406c5c:	str	wzr, [sp, #8]
  406c60:	ldr	w8, [sp, #8]
  406c64:	ldr	x9, [sp]
  406c68:	ldr	w10, [x9]
  406c6c:	cmp	w8, w10
  406c70:	b.ge	406c9c <wcrtomb@plt+0x3eec>  // b.tcont
  406c74:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406c78:	add	x8, x8, #0x518
  406c7c:	ldr	x1, [x8]
  406c80:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406c84:	add	x0, x0, #0xee8
  406c88:	bl	402c60 <fputs_unlocked@plt>
  406c8c:	ldr	w8, [sp, #8]
  406c90:	add	w8, w8, #0x1
  406c94:	str	w8, [sp, #8]
  406c98:	b	406c60 <wcrtomb@plt+0x3eb0>
  406c9c:	ldr	x8, [sp, #16]
  406ca0:	ldr	x0, [x8]
  406ca4:	bl	406d78 <wcrtomb@plt+0x3fc8>
  406ca8:	ldr	x8, [sp, #16]
  406cac:	ldr	x8, [x8, #8]
  406cb0:	cbz	x8, 406cbc <wcrtomb@plt+0x3f0c>
  406cb4:	mov	w0, #0x2c                  	// #44
  406cb8:	bl	402990 <putchar_unlocked@plt>
  406cbc:	ldr	x8, [sp, #16]
  406cc0:	ldr	x0, [x8, #8]
  406cc4:	bl	406d78 <wcrtomb@plt+0x3fc8>
  406cc8:	ldr	x8, [sp, #16]
  406ccc:	ldrb	w9, [x8, #20]
  406cd0:	cmp	w9, #0x0
  406cd4:	cset	w9, ne  // ne = any
  406cd8:	and	w9, w9, #0x1
  406cdc:	strb	w9, [sp, #15]
  406ce0:	ldr	x8, [sp, #16]
  406ce4:	ldrb	w9, [x8, #21]
  406ce8:	cmp	w9, #0x7b
  406cec:	b.ne	406d04 <wcrtomb@plt+0x3f54>  // b.any
  406cf0:	ldrb	w8, [sp, #15]
  406cf4:	mov	w9, #0x1                   	// #1
  406cf8:	eor	w8, w8, #0x1
  406cfc:	and	w8, w8, w9
  406d00:	strb	w8, [sp, #15]
  406d04:	ldrb	w8, [sp, #15]
  406d08:	tbnz	w8, #0, 406d10 <wcrtomb@plt+0x3f60>
  406d0c:	b	406d18 <wcrtomb@plt+0x3f68>
  406d10:	mov	w0, #0x21                  	// #33
  406d14:	bl	402990 <putchar_unlocked@plt>
  406d18:	ldr	x8, [sp, #16]
  406d1c:	ldr	x8, [x8]
  406d20:	cbnz	x8, 406d30 <wcrtomb@plt+0x3f80>
  406d24:	ldr	x8, [sp, #16]
  406d28:	ldr	x8, [x8, #8]
  406d2c:	cbz	x8, 406d38 <wcrtomb@plt+0x3f88>
  406d30:	mov	w0, #0x20                  	// #32
  406d34:	bl	402990 <putchar_unlocked@plt>
  406d38:	ldur	x0, [x29, #-8]
  406d3c:	ldr	x1, [sp, #16]
  406d40:	bl	406e88 <wcrtomb@plt+0x40d8>
  406d44:	mov	w0, #0xa                   	// #10
  406d48:	bl	402990 <putchar_unlocked@plt>
  406d4c:	ldr	x8, [sp, #16]
  406d50:	ldrb	w9, [x8, #21]
  406d54:	cmp	w9, #0x7b
  406d58:	b.ne	406d6c <wcrtomb@plt+0x3fbc>  // b.any
  406d5c:	ldr	x8, [sp]
  406d60:	ldr	w9, [x8]
  406d64:	add	w9, w9, #0x1
  406d68:	str	w9, [x8]
  406d6c:	ldp	x29, x30, [sp, #32]
  406d70:	add	sp, sp, #0x30
  406d74:	ret
  406d78:	sub	sp, sp, #0x20
  406d7c:	stp	x29, x30, [sp, #16]
  406d80:	add	x29, sp, #0x10
  406d84:	str	x0, [sp, #8]
  406d88:	ldr	x8, [sp, #8]
  406d8c:	cbnz	x8, 406d94 <wcrtomb@plt+0x3fe4>
  406d90:	b	406e7c <wcrtomb@plt+0x40cc>
  406d94:	ldr	x8, [sp, #8]
  406d98:	ldr	w9, [x8]
  406d9c:	subs	w9, w9, #0x0
  406da0:	mov	w8, w9
  406da4:	ubfx	x8, x8, #0, #32
  406da8:	cmp	x8, #0x6
  406dac:	str	x8, [sp]
  406db0:	b.hi	406e7c <wcrtomb@plt+0x40cc>  // b.pmore
  406db4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  406db8:	add	x8, x8, #0xa64
  406dbc:	ldr	x11, [sp]
  406dc0:	ldrsw	x10, [x8, x11, lsl #2]
  406dc4:	add	x9, x8, x10
  406dc8:	br	x9
  406dcc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406dd0:	add	x8, x8, #0x518
  406dd4:	ldr	x1, [x8]
  406dd8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406ddc:	add	x0, x0, #0xbff
  406de0:	bl	402c60 <fputs_unlocked@plt>
  406de4:	b	406e7c <wcrtomb@plt+0x40cc>
  406de8:	ldr	x8, [sp, #8]
  406dec:	ldr	x0, [x8, #24]
  406df0:	bl	4071d4 <wcrtomb@plt+0x4424>
  406df4:	ldr	x8, [sp, #8]
  406df8:	ldr	x0, [x8, #24]
  406dfc:	mov	w9, #0x1                   	// #1
  406e00:	and	w1, w9, #0x1
  406e04:	bl	407244 <wcrtomb@plt+0x4494>
  406e08:	b	406e7c <wcrtomb@plt+0x40cc>
  406e0c:	ldr	x8, [sp, #8]
  406e10:	ldr	x1, [x8, #8]
  406e14:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406e18:	add	x0, x0, #0xc14
  406e1c:	bl	402ce0 <printf@plt>
  406e20:	b	406e7c <wcrtomb@plt+0x40cc>
  406e24:	ldr	x8, [sp, #8]
  406e28:	ldr	x1, [x8, #8]
  406e2c:	ldr	x8, [sp, #8]
  406e30:	ldr	x2, [x8, #16]
  406e34:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406e38:	add	x0, x0, #0xc0b
  406e3c:	bl	402ce0 <printf@plt>
  406e40:	b	406e7c <wcrtomb@plt+0x40cc>
  406e44:	ldr	x8, [sp, #8]
  406e48:	ldr	x1, [x8, #16]
  406e4c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406e50:	add	x0, x0, #0xc13
  406e54:	bl	402ce0 <printf@plt>
  406e58:	b	406e7c <wcrtomb@plt+0x40cc>
  406e5c:	ldr	x8, [sp, #8]
  406e60:	ldr	x1, [x8, #16]
  406e64:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406e68:	add	x0, x0, #0xc0e
  406e6c:	bl	402ce0 <printf@plt>
  406e70:	b	406e7c <wcrtomb@plt+0x40cc>
  406e74:	mov	w0, #0x24                  	// #36
  406e78:	bl	402990 <putchar_unlocked@plt>
  406e7c:	ldp	x29, x30, [sp, #16]
  406e80:	add	sp, sp, #0x20
  406e84:	ret
  406e88:	sub	sp, sp, #0x50
  406e8c:	stp	x29, x30, [sp, #64]
  406e90:	add	x29, sp, #0x40
  406e94:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  406e98:	add	x8, x8, #0xa0c
  406e9c:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x18e64>
  406ea0:	add	x9, x9, #0xc1e
  406ea4:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x18e64>
  406ea8:	add	x10, x10, #0xc2a
  406eac:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  406eb0:	add	x11, x11, #0x518
  406eb4:	stur	x0, [x29, #-8]
  406eb8:	stur	x1, [x29, #-16]
  406ebc:	ldur	x12, [x29, #-16]
  406ec0:	str	x8, [sp, #32]
  406ec4:	str	x9, [sp, #24]
  406ec8:	str	x10, [sp, #16]
  406ecc:	str	x11, [sp, #8]
  406ed0:	cbnz	x12, 406ed8 <wcrtomb@plt+0x4128>
  406ed4:	b	407130 <wcrtomb@plt+0x4380>
  406ed8:	ldur	x8, [x29, #-16]
  406edc:	ldrb	w0, [x8, #21]
  406ee0:	bl	402990 <putchar_unlocked@plt>
  406ee4:	ldur	x8, [x29, #-16]
  406ee8:	ldrb	w9, [x8, #21]
  406eec:	subs	w9, w9, #0x23
  406ef0:	mov	w8, w9
  406ef4:	ubfx	x8, x8, #0, #32
  406ef8:	cmp	x8, #0x5a
  406efc:	str	x8, [sp]
  406f00:	b.hi	40711c <wcrtomb@plt+0x436c>  // b.pmore
  406f04:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  406f08:	add	x8, x8, #0xa80
  406f0c:	ldr	x11, [sp]
  406f10:	ldrsw	x10, [x8, x11, lsl #2]
  406f14:	add	x9, x8, x10
  406f18:	br	x9
  406f1c:	b	407130 <wcrtomb@plt+0x4380>
  406f20:	ldur	x8, [x29, #-16]
  406f24:	ldr	x1, [x8, #24]
  406f28:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  406f2c:	add	x0, x0, #0xbe9
  406f30:	bl	402ce0 <printf@plt>
  406f34:	b	407130 <wcrtomb@plt+0x4380>
  406f38:	b	407130 <wcrtomb@plt+0x4380>
  406f3c:	b	407130 <wcrtomb@plt+0x4380>
  406f40:	ldr	x0, [sp, #32]
  406f44:	ldr	x1, [sp, #24]
  406f48:	mov	w2, #0x123                 	// #291
  406f4c:	ldr	x3, [sp, #16]
  406f50:	bl	402cf0 <__assert_fail@plt>
  406f54:	ldr	x8, [sp, #8]
  406f58:	ldr	x1, [x8]
  406f5c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  406f60:	add	x0, x0, #0xc73
  406f64:	bl	402c60 <fputs_unlocked@plt>
  406f68:	ldur	x8, [x29, #-16]
  406f6c:	ldr	x8, [x8, #32]
  406f70:	cbz	x8, 406f94 <wcrtomb@plt+0x41e4>
  406f74:	ldur	x8, [x29, #-16]
  406f78:	ldr	x0, [x8, #24]
  406f7c:	ldur	x8, [x29, #-16]
  406f80:	ldr	x2, [x8, #32]
  406f84:	ldr	x8, [sp, #8]
  406f88:	ldr	x3, [x8]
  406f8c:	mov	x1, #0x1                   	// #1
  406f90:	bl	4026e0 <fwrite_unlocked@plt>
  406f94:	b	407130 <wcrtomb@plt+0x4380>
  406f98:	ldur	x8, [x29, #-16]
  406f9c:	ldr	x8, [x8, #24]
  406fa0:	ldur	x9, [x29, #-8]
  406fa4:	ldr	x9, [x9, #16]
  406fa8:	cmp	x8, x9
  406fac:	b.cs	406fec <wcrtomb@plt+0x423c>  // b.hs, b.nlast
  406fb0:	ldur	x8, [x29, #-8]
  406fb4:	ldr	x8, [x8]
  406fb8:	ldur	x9, [x29, #-16]
  406fbc:	ldr	x9, [x9, #24]
  406fc0:	mov	x10, #0x28                  	// #40
  406fc4:	mul	x9, x10, x9
  406fc8:	add	x8, x8, x9
  406fcc:	ldr	x8, [x8, #24]
  406fd0:	stur	x8, [x29, #-24]
  406fd4:	ldur	x8, [x29, #-24]
  406fd8:	cbz	x8, 406fec <wcrtomb@plt+0x423c>
  406fdc:	ldur	x1, [x29, #-24]
  406fe0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  406fe4:	add	x0, x0, #0xbe8
  406fe8:	bl	402ce0 <printf@plt>
  406fec:	b	407130 <wcrtomb@plt+0x4380>
  406ff0:	b	407130 <wcrtomb@plt+0x4380>
  406ff4:	b	407130 <wcrtomb@plt+0x4380>
  406ff8:	mov	w0, #0x20                  	// #32
  406ffc:	bl	402990 <putchar_unlocked@plt>
  407000:	ldur	x8, [x29, #-16]
  407004:	ldr	x8, [x8, #24]
  407008:	ldur	x9, [x29, #-16]
  40700c:	ldr	x2, [x9, #32]
  407010:	ldr	x9, [sp, #8]
  407014:	ldr	x3, [x9]
  407018:	mov	x0, x8
  40701c:	mov	x1, #0x1                   	// #1
  407020:	bl	4026e0 <fwrite_unlocked@plt>
  407024:	b	407130 <wcrtomb@plt+0x4380>
  407028:	b	407130 <wcrtomb@plt+0x4380>
  40702c:	b	407130 <wcrtomb@plt+0x4380>
  407030:	b	407130 <wcrtomb@plt+0x4380>
  407034:	b	407130 <wcrtomb@plt+0x4380>
  407038:	b	407130 <wcrtomb@plt+0x4380>
  40703c:	ldur	x8, [x29, #-16]
  407040:	ldr	w9, [x8, #24]
  407044:	mov	w10, #0xffffffff            	// #-1
  407048:	cmp	w9, w10
  40704c:	b.eq	407064 <wcrtomb@plt+0x42b4>  // b.none
  407050:	ldur	x8, [x29, #-16]
  407054:	ldr	w1, [x8, #24]
  407058:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40705c:	add	x0, x0, #0xffb
  407060:	bl	402ce0 <printf@plt>
  407064:	b	407130 <wcrtomb@plt+0x4380>
  407068:	b	407130 <wcrtomb@plt+0x4380>
  40706c:	b	407130 <wcrtomb@plt+0x4380>
  407070:	b	407130 <wcrtomb@plt+0x4380>
  407074:	b	407130 <wcrtomb@plt+0x4380>
  407078:	mov	w0, #0x20                  	// #32
  40707c:	bl	402990 <putchar_unlocked@plt>
  407080:	ldur	x8, [x29, #-16]
  407084:	ldr	x8, [x8, #24]
  407088:	ldr	x9, [sp, #8]
  40708c:	ldr	x1, [x9]
  407090:	mov	x0, x8
  407094:	bl	402c60 <fputs_unlocked@plt>
  407098:	b	407130 <wcrtomb@plt+0x4380>
  40709c:	mov	w0, #0x20                  	// #32
  4070a0:	bl	402990 <putchar_unlocked@plt>
  4070a4:	ldur	x8, [x29, #-16]
  4070a8:	ldr	x8, [x8, #24]
  4070ac:	ldr	x8, [x8]
  4070b0:	ldr	x9, [sp, #8]
  4070b4:	ldr	x1, [x9]
  4070b8:	mov	x0, x8
  4070bc:	bl	402c60 <fputs_unlocked@plt>
  4070c0:	b	407130 <wcrtomb@plt+0x4380>
  4070c4:	ldur	x8, [x29, #-16]
  4070c8:	ldr	x0, [x8, #24]
  4070cc:	bl	407344 <wcrtomb@plt+0x4594>
  4070d0:	b	407130 <wcrtomb@plt+0x4380>
  4070d4:	ldr	x0, [sp, #32]
  4070d8:	ldr	x1, [sp, #24]
  4070dc:	mov	w2, #0x17e                 	// #382
  4070e0:	ldr	x3, [sp, #16]
  4070e4:	bl	402cf0 <__assert_fail@plt>
  4070e8:	ldur	x8, [x29, #-16]
  4070ec:	ldr	x0, [x8, #24]
  4070f0:	bl	40744c <wcrtomb@plt+0x469c>
  4070f4:	b	407130 <wcrtomb@plt+0x4380>
  4070f8:	ldur	x8, [x29, #-16]
  4070fc:	ldr	x0, [x8, #24]
  407100:	bl	40744c <wcrtomb@plt+0x469c>
  407104:	b	407130 <wcrtomb@plt+0x4380>
  407108:	b	407130 <wcrtomb@plt+0x4380>
  40710c:	ldur	x0, [x29, #-16]
  407110:	bl	40748c <wcrtomb@plt+0x46dc>
  407114:	b	407130 <wcrtomb@plt+0x4380>
  407118:	b	407130 <wcrtomb@plt+0x4380>
  40711c:	ldr	x0, [sp, #32]
  407120:	ldr	x1, [sp, #24]
  407124:	mov	w2, #0x194                 	// #404
  407128:	ldr	x3, [sp, #16]
  40712c:	bl	402cf0 <__assert_fail@plt>
  407130:	ldp	x29, x30, [sp, #64]
  407134:	add	sp, sp, #0x50
  407138:	ret
  40713c:	sub	sp, sp, #0x20
  407140:	stp	x29, x30, [sp, #16]
  407144:	add	x29, sp, #0x10
  407148:	str	x0, [sp, #8]
  40714c:	ldr	x8, [sp, #8]
  407150:	cbnz	x8, 407158 <wcrtomb@plt+0x43a8>
  407154:	b	4071c8 <wcrtomb@plt+0x4418>
  407158:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40715c:	add	x8, x8, #0x620
  407160:	mov	w9, #0x1                   	// #1
  407164:	str	w9, [x8]
  407168:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40716c:	add	x0, x0, #0xbf2
  407170:	bl	402ac0 <puts@plt>
  407174:	str	xzr, [sp]
  407178:	ldr	x8, [sp]
  40717c:	ldr	x9, [sp, #8]
  407180:	ldr	x9, [x9, #16]
  407184:	cmp	x8, x9
  407188:	b.cs	4071bc <wcrtomb@plt+0x440c>  // b.hs, b.nlast
  40718c:	ldr	x0, [sp, #8]
  407190:	ldr	x8, [sp, #8]
  407194:	ldr	x8, [x8]
  407198:	ldr	x9, [sp]
  40719c:	mov	x10, #0x28                  	// #40
  4071a0:	mul	x9, x10, x9
  4071a4:	add	x1, x8, x9
  4071a8:	bl	406c10 <wcrtomb@plt+0x3e60>
  4071ac:	ldr	x8, [sp]
  4071b0:	add	x8, x8, #0x1
  4071b4:	str	x8, [sp]
  4071b8:	b	407178 <wcrtomb@plt+0x43c8>
  4071bc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4071c0:	add	x8, x8, #0x620
  4071c4:	str	wzr, [x8]
  4071c8:	ldp	x29, x30, [sp, #16]
  4071cc:	add	sp, sp, #0x20
  4071d0:	ret
  4071d4:	sub	sp, sp, #0x20
  4071d8:	stp	x29, x30, [sp, #16]
  4071dc:	add	x29, sp, #0x10
  4071e0:	str	x0, [sp, #8]
  4071e4:	ldr	x8, [sp, #8]
  4071e8:	cbnz	x8, 407208 <wcrtomb@plt+0x4458>
  4071ec:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4071f0:	add	x8, x8, #0x518
  4071f4:	ldr	x1, [x8]
  4071f8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  4071fc:	add	x0, x0, #0xc18
  407200:	bl	402c60 <fputs_unlocked@plt>
  407204:	b	407238 <wcrtomb@plt+0x4488>
  407208:	mov	w8, #0x2f                  	// #47
  40720c:	mov	w0, w8
  407210:	str	w8, [sp, #4]
  407214:	bl	402990 <putchar_unlocked@plt>
  407218:	ldr	x9, [sp, #8]
  40721c:	add	x9, x9, #0x5a
  407220:	ldr	x10, [sp, #8]
  407224:	ldr	x1, [x10, #72]
  407228:	mov	x0, x9
  40722c:	bl	4072c4 <wcrtomb@plt+0x4514>
  407230:	ldr	w0, [sp, #4]
  407234:	bl	402990 <putchar_unlocked@plt>
  407238:	ldp	x29, x30, [sp, #16]
  40723c:	add	sp, sp, #0x20
  407240:	ret
  407244:	sub	sp, sp, #0x20
  407248:	stp	x29, x30, [sp, #16]
  40724c:	add	x29, sp, #0x10
  407250:	str	x0, [sp, #8]
  407254:	and	w8, w1, #0x1
  407258:	strb	w8, [sp, #7]
  40725c:	ldr	x9, [sp, #8]
  407260:	cbnz	x9, 407268 <wcrtomb@plt+0x44b8>
  407264:	b	4072b8 <wcrtomb@plt+0x4508>
  407268:	ldr	x8, [sp, #8]
  40726c:	ldr	w9, [x8, #64]
  407270:	and	w9, w9, #0x2
  407274:	cbz	w9, 407290 <wcrtomb@plt+0x44e0>
  407278:	ldrb	w8, [sp, #7]
  40727c:	mov	w9, #0x69                  	// #105
  407280:	mov	w10, #0x49                  	// #73
  407284:	tst	w8, #0x1
  407288:	csel	w0, w10, w9, ne  // ne = any
  40728c:	bl	402990 <putchar_unlocked@plt>
  407290:	ldr	x8, [sp, #8]
  407294:	ldr	w9, [x8, #64]
  407298:	and	w9, w9, #0x4
  40729c:	cbz	w9, 4072b8 <wcrtomb@plt+0x4508>
  4072a0:	ldrb	w8, [sp, #7]
  4072a4:	mov	w9, #0x6d                  	// #109
  4072a8:	mov	w10, #0x4d                  	// #77
  4072ac:	tst	w8, #0x1
  4072b0:	csel	w0, w10, w9, ne  // ne = any
  4072b4:	bl	402990 <putchar_unlocked@plt>
  4072b8:	ldp	x29, x30, [sp, #16]
  4072bc:	add	sp, sp, #0x20
  4072c0:	ret
  4072c4:	sub	sp, sp, #0x30
  4072c8:	stp	x29, x30, [sp, #32]
  4072cc:	add	x29, sp, #0x20
  4072d0:	stur	x0, [x29, #-8]
  4072d4:	str	x1, [sp, #16]
  4072d8:	ldur	x8, [x29, #-8]
  4072dc:	str	x8, [sp, #8]
  4072e0:	ldr	x8, [sp, #16]
  4072e4:	subs	x9, x8, #0x1
  4072e8:	str	x9, [sp, #16]
  4072ec:	cbz	x8, 407338 <wcrtomb@plt+0x4588>
  4072f0:	ldr	x8, [sp, #8]
  4072f4:	ldrb	w9, [x8]
  4072f8:	cmp	w9, #0x2f
  4072fc:	b.ne	40731c <wcrtomb@plt+0x456c>  // b.any
  407300:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407304:	add	x8, x8, #0x518
  407308:	ldr	x1, [x8]
  40730c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  407310:	add	x0, x0, #0xc1b
  407314:	bl	402c60 <fputs_unlocked@plt>
  407318:	b	407328 <wcrtomb@plt+0x4578>
  40731c:	ldr	x8, [sp, #8]
  407320:	ldrb	w0, [x8]
  407324:	bl	406ae4 <wcrtomb@plt+0x3d34>
  407328:	ldr	x8, [sp, #8]
  40732c:	add	x8, x8, #0x1
  407330:	str	x8, [sp, #8]
  407334:	b	4072e0 <wcrtomb@plt+0x4530>
  407338:	ldp	x29, x30, [sp, #32]
  40733c:	add	sp, sp, #0x30
  407340:	ret
  407344:	sub	sp, sp, #0x20
  407348:	stp	x29, x30, [sp, #16]
  40734c:	add	x29, sp, #0x10
  407350:	str	x0, [sp, #8]
  407354:	ldr	x8, [sp, #8]
  407358:	cbnz	x8, 407360 <wcrtomb@plt+0x45b0>
  40735c:	b	407440 <wcrtomb@plt+0x4690>
  407360:	ldr	x8, [sp, #8]
  407364:	ldr	x0, [x8]
  407368:	bl	4071d4 <wcrtomb@plt+0x4424>
  40736c:	ldr	x8, [sp, #8]
  407370:	ldr	x0, [x8, #8]
  407374:	bl	4076a0 <wcrtomb@plt+0x48f0>
  407378:	mov	w0, #0x2f                  	// #47
  40737c:	bl	402990 <putchar_unlocked@plt>
  407380:	ldr	x8, [sp, #8]
  407384:	ldr	x8, [x8]
  407388:	mov	x0, x8
  40738c:	mov	w9, wzr
  407390:	and	w1, w9, #0x1
  407394:	bl	407244 <wcrtomb@plt+0x4494>
  407398:	ldr	x8, [sp, #8]
  40739c:	ldrb	w9, [x8, #32]
  4073a0:	and	w9, w9, #0x1
  4073a4:	and	w9, w9, #0xff
  4073a8:	cbz	w9, 4073b4 <wcrtomb@plt+0x4604>
  4073ac:	mov	w0, #0x67                  	// #103
  4073b0:	bl	402990 <putchar_unlocked@plt>
  4073b4:	ldr	x8, [sp, #8]
  4073b8:	ldrb	w9, [x8, #32]
  4073bc:	mov	w10, #0x3                   	// #3
  4073c0:	lsr	w9, w9, w10
  4073c4:	and	w9, w9, #0x1
  4073c8:	and	w9, w9, #0xff
  4073cc:	cbz	w9, 4073d8 <wcrtomb@plt+0x4628>
  4073d0:	mov	w0, #0x65                  	// #101
  4073d4:	bl	402990 <putchar_unlocked@plt>
  4073d8:	ldr	x8, [sp, #8]
  4073dc:	ldrb	w9, [x8, #32]
  4073e0:	mov	w10, #0x1                   	// #1
  4073e4:	lsr	w9, w9, w10
  4073e8:	and	w9, w9, #0x3
  4073ec:	and	w9, w9, #0xff
  4073f0:	cbz	w9, 4073fc <wcrtomb@plt+0x464c>
  4073f4:	mov	w0, #0x70                  	// #112
  4073f8:	bl	402990 <putchar_unlocked@plt>
  4073fc:	ldr	x8, [sp, #8]
  407400:	ldr	x8, [x8, #16]
  407404:	cbz	x8, 40741c <wcrtomb@plt+0x466c>
  407408:	ldr	x8, [sp, #8]
  40740c:	ldr	x1, [x8, #16]
  407410:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  407414:	add	x0, x0, #0xc14
  407418:	bl	402ce0 <printf@plt>
  40741c:	ldr	x8, [sp, #8]
  407420:	ldr	x8, [x8, #24]
  407424:	cbz	x8, 407440 <wcrtomb@plt+0x4690>
  407428:	mov	w0, #0x77                  	// #119
  40742c:	bl	402990 <putchar_unlocked@plt>
  407430:	ldr	x8, [sp, #8]
  407434:	ldr	x8, [x8, #24]
  407438:	mov	x0, x8
  40743c:	bl	40744c <wcrtomb@plt+0x469c>
  407440:	ldp	x29, x30, [sp, #16]
  407444:	add	sp, sp, #0x20
  407448:	ret
  40744c:	sub	sp, sp, #0x20
  407450:	stp	x29, x30, [sp, #16]
  407454:	add	x29, sp, #0x10
  407458:	str	x0, [sp, #8]
  40745c:	ldr	x8, [sp, #8]
  407460:	cbnz	x8, 407468 <wcrtomb@plt+0x46b8>
  407464:	b	407480 <wcrtomb@plt+0x46d0>
  407468:	ldr	x8, [sp, #8]
  40746c:	ldr	x0, [x8]
  407470:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407474:	add	x8, x8, #0x518
  407478:	ldr	x1, [x8]
  40747c:	bl	402c60 <fputs_unlocked@plt>
  407480:	ldp	x29, x30, [sp, #16]
  407484:	add	sp, sp, #0x20
  407488:	ret
  40748c:	sub	sp, sp, #0x20
  407490:	stp	x29, x30, [sp, #16]
  407494:	add	x29, sp, #0x10
  407498:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40749c:	add	x8, x8, #0x8dc
  4074a0:	str	x0, [sp, #8]
  4074a4:	ldr	w9, [x8]
  4074a8:	cmp	w9, #0x1
  4074ac:	b.le	4075d0 <wcrtomb@plt+0x4820>
  4074b0:	mov	w0, #0x2f                  	// #47
  4074b4:	bl	402990 <putchar_unlocked@plt>
  4074b8:	str	wzr, [sp, #4]
  4074bc:	ldr	x8, [sp, #8]
  4074c0:	ldr	x8, [x8, #24]
  4074c4:	ldr	w9, [sp, #4]
  4074c8:	mov	w10, #0x2                   	// #2
  4074cc:	mul	w9, w10, w9
  4074d0:	mov	w11, w9
  4074d4:	ubfx	x11, x11, #0, #32
  4074d8:	mov	x12, #0x8                   	// #8
  4074dc:	mul	x11, x12, x11
  4074e0:	add	x8, x8, x11
  4074e4:	ldr	x8, [x8]
  4074e8:	cbz	x8, 407538 <wcrtomb@plt+0x4788>
  4074ec:	ldr	x8, [sp, #8]
  4074f0:	ldr	x8, [x8, #24]
  4074f4:	ldr	w9, [sp, #4]
  4074f8:	mov	w10, #0x2                   	// #2
  4074fc:	mul	w9, w10, w9
  407500:	mov	w11, w9
  407504:	ubfx	x11, x11, #0, #32
  407508:	mov	x12, #0x8                   	// #8
  40750c:	mul	x11, x12, x11
  407510:	add	x8, x8, x11
  407514:	ldr	x0, [x8]
  407518:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40751c:	add	x8, x8, #0x518
  407520:	ldr	x1, [x8]
  407524:	bl	402c60 <fputs_unlocked@plt>
  407528:	ldr	w8, [sp, #4]
  40752c:	add	w8, w8, #0x1
  407530:	str	w8, [sp, #4]
  407534:	b	4074bc <wcrtomb@plt+0x470c>
  407538:	mov	w0, #0x2f                  	// #47
  40753c:	bl	402990 <putchar_unlocked@plt>
  407540:	str	wzr, [sp, #4]
  407544:	ldr	x8, [sp, #8]
  407548:	ldr	x8, [x8, #24]
  40754c:	ldr	w9, [sp, #4]
  407550:	mov	w10, #0x2                   	// #2
  407554:	mul	w9, w10, w9
  407558:	mov	w11, w9
  40755c:	ubfx	x11, x11, #0, #32
  407560:	mov	x12, #0x8                   	// #8
  407564:	mul	x11, x12, x11
  407568:	add	x8, x8, x11
  40756c:	ldr	x8, [x8]
  407570:	cbz	x8, 4075c4 <wcrtomb@plt+0x4814>
  407574:	ldr	x8, [sp, #8]
  407578:	ldr	x8, [x8, #24]
  40757c:	ldr	w9, [sp, #4]
  407580:	mov	w10, #0x2                   	// #2
  407584:	mul	w9, w10, w9
  407588:	add	w9, w9, #0x1
  40758c:	mov	w11, w9
  407590:	ubfx	x11, x11, #0, #32
  407594:	mov	x12, #0x8                   	// #8
  407598:	mul	x11, x12, x11
  40759c:	add	x8, x8, x11
  4075a0:	ldr	x0, [x8]
  4075a4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4075a8:	add	x8, x8, #0x518
  4075ac:	ldr	x1, [x8]
  4075b0:	bl	402c60 <fputs_unlocked@plt>
  4075b4:	ldr	w8, [sp, #4]
  4075b8:	add	w8, w8, #0x1
  4075bc:	str	w8, [sp, #4]
  4075c0:	b	407544 <wcrtomb@plt+0x4794>
  4075c4:	mov	w0, #0x2f                  	// #47
  4075c8:	bl	402990 <putchar_unlocked@plt>
  4075cc:	b	407694 <wcrtomb@plt+0x48e4>
  4075d0:	mov	w0, #0x2f                  	// #47
  4075d4:	bl	402990 <putchar_unlocked@plt>
  4075d8:	str	wzr, [sp, #4]
  4075dc:	ldr	w8, [sp, #4]
  4075e0:	cmp	w8, #0x100
  4075e4:	b.cs	407628 <wcrtomb@plt+0x4878>  // b.hs, b.nlast
  4075e8:	ldr	x8, [sp, #8]
  4075ec:	ldr	x8, [x8, #24]
  4075f0:	ldr	w9, [sp, #4]
  4075f4:	mov	w10, w9
  4075f8:	ldrb	w9, [x8, x10]
  4075fc:	ldr	w11, [sp, #4]
  407600:	and	w11, w11, #0xff
  407604:	cmp	w9, w11
  407608:	b.eq	407618 <wcrtomb@plt+0x4868>  // b.none
  40760c:	ldr	w8, [sp, #4]
  407610:	and	w0, w8, #0xff
  407614:	bl	402990 <putchar_unlocked@plt>
  407618:	ldr	w8, [sp, #4]
  40761c:	add	w8, w8, #0x1
  407620:	str	w8, [sp, #4]
  407624:	b	4075dc <wcrtomb@plt+0x482c>
  407628:	mov	w0, #0x2f                  	// #47
  40762c:	bl	402990 <putchar_unlocked@plt>
  407630:	str	wzr, [sp, #4]
  407634:	ldr	w8, [sp, #4]
  407638:	cmp	w8, #0x100
  40763c:	b.cs	40768c <wcrtomb@plt+0x48dc>  // b.hs, b.nlast
  407640:	ldr	x8, [sp, #8]
  407644:	ldr	x8, [x8, #24]
  407648:	ldr	w9, [sp, #4]
  40764c:	mov	w10, w9
  407650:	ldrb	w9, [x8, x10]
  407654:	ldr	w11, [sp, #4]
  407658:	and	w11, w11, #0xff
  40765c:	cmp	w9, w11
  407660:	b.eq	40767c <wcrtomb@plt+0x48cc>  // b.none
  407664:	ldr	x8, [sp, #8]
  407668:	ldr	x8, [x8, #24]
  40766c:	ldr	w9, [sp, #4]
  407670:	mov	w10, w9
  407674:	ldrb	w0, [x8, x10]
  407678:	bl	402990 <putchar_unlocked@plt>
  40767c:	ldr	w8, [sp, #4]
  407680:	add	w8, w8, #0x1
  407684:	str	w8, [sp, #4]
  407688:	b	407634 <wcrtomb@plt+0x4884>
  40768c:	mov	w0, #0x2f                  	// #47
  407690:	bl	402990 <putchar_unlocked@plt>
  407694:	ldp	x29, x30, [sp, #16]
  407698:	add	sp, sp, #0x20
  40769c:	ret
  4076a0:	sub	sp, sp, #0x30
  4076a4:	stp	x29, x30, [sp, #32]
  4076a8:	add	x29, sp, #0x20
  4076ac:	stur	x0, [x29, #-8]
  4076b0:	stur	wzr, [x29, #-12]
  4076b4:	ldur	x8, [x29, #-8]
  4076b8:	cbnz	x8, 4076c0 <wcrtomb@plt+0x4910>
  4076bc:	b	407804 <wcrtomb@plt+0x4a54>
  4076c0:	ldur	x8, [x29, #-8]
  4076c4:	str	x8, [sp, #8]
  4076c8:	ldr	x8, [sp, #8]
  4076cc:	cbz	x8, 407804 <wcrtomb@plt+0x4a54>
  4076d0:	ldr	x8, [sp, #8]
  4076d4:	ldr	w9, [x8, #20]
  4076d8:	ldur	w10, [x29, #-12]
  4076dc:	cmp	w9, w10
  4076e0:	b.eq	407784 <wcrtomb@plt+0x49d4>  // b.none
  4076e4:	mov	w0, #0x5c                  	// #92
  4076e8:	bl	402990 <putchar_unlocked@plt>
  4076ec:	ldr	x8, [sp, #8]
  4076f0:	ldr	w9, [x8, #20]
  4076f4:	cbnz	w9, 407704 <wcrtomb@plt+0x4954>
  4076f8:	mov	w0, #0x45                  	// #69
  4076fc:	bl	402990 <putchar_unlocked@plt>
  407700:	b	407778 <wcrtomb@plt+0x49c8>
  407704:	ldr	x8, [sp, #8]
  407708:	ldr	w9, [x8, #20]
  40770c:	cmp	w9, #0x1
  407710:	b.ne	407720 <wcrtomb@plt+0x4970>  // b.any
  407714:	mov	w0, #0x55                  	// #85
  407718:	bl	402990 <putchar_unlocked@plt>
  40771c:	b	407778 <wcrtomb@plt+0x49c8>
  407720:	ldr	x8, [sp, #8]
  407724:	ldr	w9, [x8, #20]
  407728:	cmp	w9, #0x2
  40772c:	b.ne	40773c <wcrtomb@plt+0x498c>  // b.any
  407730:	mov	w0, #0x4c                  	// #76
  407734:	bl	402990 <putchar_unlocked@plt>
  407738:	b	407778 <wcrtomb@plt+0x49c8>
  40773c:	ldr	x8, [sp, #8]
  407740:	ldr	w9, [x8, #20]
  407744:	and	w9, w9, #0xc
  407748:	cmp	w9, #0x4
  40774c:	b.ne	40775c <wcrtomb@plt+0x49ac>  // b.any
  407750:	mov	w0, #0x75                  	// #117
  407754:	bl	402990 <putchar_unlocked@plt>
  407758:	b	407778 <wcrtomb@plt+0x49c8>
  40775c:	ldr	x8, [sp, #8]
  407760:	ldr	w9, [x8, #20]
  407764:	and	w9, w9, #0xc
  407768:	cmp	w9, #0x8
  40776c:	b.ne	407778 <wcrtomb@plt+0x49c8>  // b.any
  407770:	mov	w0, #0x6c                  	// #108
  407774:	bl	402990 <putchar_unlocked@plt>
  407778:	ldr	x8, [sp, #8]
  40777c:	ldr	w9, [x8, #20]
  407780:	stur	w9, [x29, #-12]
  407784:	ldr	x8, [sp, #8]
  407788:	ldr	x8, [x8, #8]
  40778c:	cbz	x8, 4077b4 <wcrtomb@plt+0x4a04>
  407790:	ldr	x8, [sp, #8]
  407794:	ldr	x0, [x8]
  407798:	ldr	x8, [sp, #8]
  40779c:	ldr	x2, [x8, #8]
  4077a0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4077a4:	add	x8, x8, #0x518
  4077a8:	ldr	x3, [x8]
  4077ac:	mov	x1, #0x1                   	// #1
  4077b0:	bl	4026e0 <fwrite_unlocked@plt>
  4077b4:	ldr	x8, [sp, #8]
  4077b8:	ldr	w9, [x8, #16]
  4077bc:	mov	w10, #0xffffffff            	// #-1
  4077c0:	cmp	w9, w10
  4077c4:	b.eq	4077f4 <wcrtomb@plt+0x4a44>  // b.none
  4077c8:	ldr	x8, [sp, #8]
  4077cc:	ldr	w9, [x8, #16]
  4077d0:	cbnz	w9, 4077e0 <wcrtomb@plt+0x4a30>
  4077d4:	mov	w0, #0x26                  	// #38
  4077d8:	bl	402990 <putchar_unlocked@plt>
  4077dc:	b	4077f4 <wcrtomb@plt+0x4a44>
  4077e0:	ldr	x8, [sp, #8]
  4077e4:	ldr	w1, [x8, #16]
  4077e8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  4077ec:	add	x0, x0, #0xc75
  4077f0:	bl	402ce0 <printf@plt>
  4077f4:	ldr	x8, [sp, #8]
  4077f8:	ldr	x8, [x8, #24]
  4077fc:	str	x8, [sp, #8]
  407800:	b	4076c8 <wcrtomb@plt+0x4918>
  407804:	ldp	x29, x30, [sp, #32]
  407808:	add	sp, sp, #0x30
  40780c:	ret
  407810:	sub	sp, sp, #0x140
  407814:	stp	x29, x30, [sp, #288]
  407818:	str	x28, [sp, #304]
  40781c:	add	x29, sp, #0x120
  407820:	sub	x8, x29, #0x10
  407824:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407828:	add	x9, x9, #0x628
  40782c:	mov	x10, xzr
  407830:	mov	x2, x10
  407834:	mov	x11, #0x32                  	// #50
  407838:	adrp	x12, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40783c:	add	x12, x12, #0x658
  407840:	adrp	x13, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407844:	add	x13, x13, #0x688
  407848:	mov	w14, #0x1                   	// #1
  40784c:	add	x15, sp, #0x48
  407850:	str	x0, [x8, #8]
  407854:	str	x1, [x8]
  407858:	mov	x0, x9
  40785c:	mov	x1, x2
  407860:	str	x2, [sp, #56]
  407864:	mov	x2, x11
  407868:	str	x8, [sp, #48]
  40786c:	str	x10, [sp, #40]
  407870:	str	x12, [sp, #32]
  407874:	str	x13, [sp, #24]
  407878:	str	w14, [sp, #20]
  40787c:	str	x15, [sp, #8]
  407880:	bl	4079d4 <wcrtomb@plt+0x4c24>
  407884:	ldr	x0, [sp, #32]
  407888:	ldr	x1, [sp, #56]
  40788c:	ldr	x2, [sp, #40]
  407890:	bl	4079d4 <wcrtomb@plt+0x4c24>
  407894:	ldr	x0, [sp, #24]
  407898:	ldr	x1, [sp, #56]
  40789c:	ldr	x2, [sp, #40]
  4078a0:	bl	4079d4 <wcrtomb@plt+0x4c24>
  4078a4:	ldr	w14, [sp, #20]
  4078a8:	ldr	x8, [sp, #8]
  4078ac:	strb	w14, [x8, #24]
  4078b0:	ldr	x9, [sp, #48]
  4078b4:	ldr	x10, [x9]
  4078b8:	cbz	x10, 4078dc <wcrtomb@plt+0x4b2c>
  4078bc:	ldr	x8, [sp, #48]
  4078c0:	ldr	x9, [x8]
  4078c4:	ldr	x9, [x9]
  4078c8:	cbz	x9, 4078dc <wcrtomb@plt+0x4b2c>
  4078cc:	ldr	x8, [sp, #48]
  4078d0:	ldr	x9, [x8]
  4078d4:	str	x9, [sp, #72]
  4078d8:	b	407908 <wcrtomb@plt+0x4b58>
  4078dc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4078e0:	add	x8, x8, #0x760
  4078e4:	ldr	x8, [x8]
  4078e8:	cbz	x8, 4078fc <wcrtomb@plt+0x4b4c>
  4078ec:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  4078f0:	add	x0, x0, #0xe34
  4078f4:	bl	402d40 <gettext@plt>
  4078f8:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  4078fc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407900:	add	x8, x8, #0x458
  407904:	str	x8, [sp, #72]
  407908:	add	x8, sp, #0x48
  40790c:	mov	x9, xzr
  407910:	str	xzr, [sp, #80]
  407914:	str	xzr, [sp, #88]
  407918:	adrp	x10, 407000 <wcrtomb@plt+0x4250>
  40791c:	add	x10, x10, #0xa68
  407920:	str	x10, [x8, #32]
  407924:	str	x9, [x8, #184]
  407928:	str	wzr, [sp, #68]
  40792c:	ldr	x8, [sp, #48]
  407930:	ldr	x1, [x8, #8]
  407934:	add	x0, sp, #0x48
  407938:	mov	w9, wzr
  40793c:	mov	w2, w9
  407940:	bl	407a80 <wcrtomb@plt+0x4cd0>
  407944:	tbnz	w0, #0, 40794c <wcrtomb@plt+0x4b9c>
  407948:	b	4079a8 <wcrtomb@plt+0x4bf8>
  40794c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407950:	add	x8, x8, #0x759
  407954:	ldrb	w9, [x8]
  407958:	tbnz	w9, #0, 407960 <wcrtomb@plt+0x4bb0>
  40795c:	b	407974 <wcrtomb@plt+0x4bc4>
  407960:	add	x0, sp, #0x48
  407964:	bl	407bf0 <wcrtomb@plt+0x4e40>
  407968:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40796c:	add	x0, x0, #0x628
  407970:	bl	407c88 <wcrtomb@plt+0x4ed8>
  407974:	ldr	x8, [sp, #48]
  407978:	ldr	x0, [x8, #8]
  40797c:	add	x1, sp, #0x48
  407980:	bl	407d4c <wcrtomb@plt+0x4f9c>
  407984:	str	w0, [sp, #68]
  407988:	ldr	w9, [sp, #68]
  40798c:	mov	w10, #0xffffffff            	// #-1
  407990:	cmp	w9, w10
  407994:	b.ne	4079a0 <wcrtomb@plt+0x4bf0>  // b.any
  407998:	str	wzr, [sp, #68]
  40799c:	b	4079a4 <wcrtomb@plt+0x4bf4>
  4079a0:	b	4079a8 <wcrtomb@plt+0x4bf8>
  4079a4:	b	40792c <wcrtomb@plt+0x4b7c>
  4079a8:	add	x0, sp, #0x48
  4079ac:	bl	408948 <wcrtomb@plt+0x5b98>
  4079b0:	ldr	x8, [sp, #80]
  4079b4:	cbz	x8, 4079c0 <wcrtomb@plt+0x4c10>
  4079b8:	mov	w8, #0x2                   	// #2
  4079bc:	str	w8, [sp, #68]
  4079c0:	ldr	w0, [sp, #68]
  4079c4:	ldr	x28, [sp, #304]
  4079c8:	ldp	x29, x30, [sp, #288]
  4079cc:	add	sp, sp, #0x140
  4079d0:	ret
  4079d4:	sub	sp, sp, #0x30
  4079d8:	stp	x29, x30, [sp, #32]
  4079dc:	add	x29, sp, #0x20
  4079e0:	mov	w8, #0x1                   	// #1
  4079e4:	stur	x0, [x29, #-8]
  4079e8:	str	x1, [sp, #16]
  4079ec:	str	x2, [sp, #8]
  4079f0:	ldr	x9, [sp, #8]
  4079f4:	add	x0, x9, #0x1
  4079f8:	str	w8, [sp, #4]
  4079fc:	bl	41d908 <wcrtomb@plt+0x1ab58>
  407a00:	ldur	x9, [x29, #-8]
  407a04:	str	x0, [x9]
  407a08:	ldur	x9, [x29, #-8]
  407a0c:	ldr	x9, [x9]
  407a10:	ldur	x10, [x29, #-8]
  407a14:	str	x9, [x10, #8]
  407a18:	ldr	x9, [sp, #8]
  407a1c:	ldur	x10, [x29, #-8]
  407a20:	str	x9, [x10, #24]
  407a24:	ldur	x9, [x29, #-8]
  407a28:	str	xzr, [x9, #16]
  407a2c:	ldur	x9, [x29, #-8]
  407a30:	ldr	w8, [sp, #4]
  407a34:	strb	w8, [x9, #32]
  407a38:	ldr	x9, [sp, #16]
  407a3c:	cbz	x9, 407a54 <wcrtomb@plt+0x4ca4>
  407a40:	ldur	x8, [x29, #-8]
  407a44:	ldr	x9, [sp, #16]
  407a48:	ldur	x9, [x9, #36]
  407a4c:	stur	x9, [x8, #36]
  407a50:	b	407a5c <wcrtomb@plt+0x4cac>
  407a54:	ldur	x8, [x29, #-8]
  407a58:	stur	xzr, [x8, #36]
  407a5c:	ldp	x29, x30, [sp, #32]
  407a60:	add	sp, sp, #0x30
  407a64:	ret
  407a68:	sub	sp, sp, #0x10
  407a6c:	str	x0, [sp, #8]
  407a70:	mov	w8, wzr
  407a74:	and	w0, w8, #0x1
  407a78:	add	sp, sp, #0x10
  407a7c:	ret
  407a80:	sub	sp, sp, #0x50
  407a84:	stp	x29, x30, [sp, #64]
  407a88:	add	x29, sp, #0x40
  407a8c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407a90:	add	x8, x8, #0x6b8
  407a94:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407a98:	add	x9, x9, #0x628
  407a9c:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407aa0:	add	x10, x10, #0x658
  407aa4:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407aa8:	add	x11, x11, #0x6c8
  407aac:	stur	x0, [x29, #-16]
  407ab0:	stur	x1, [x29, #-24]
  407ab4:	stur	w2, [x29, #-28]
  407ab8:	ldr	x8, [x8]
  407abc:	str	x9, [sp, #24]
  407ac0:	str	x10, [sp, #16]
  407ac4:	str	x11, [sp, #8]
  407ac8:	cbz	x8, 407ad0 <wcrtomb@plt+0x4d20>
  407acc:	bl	408adc <wcrtomb@plt+0x5d2c>
  407ad0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407ad4:	add	x8, x8, #0x6c0
  407ad8:	mov	w9, #0x0                   	// #0
  407adc:	strb	w9, [x8]
  407ae0:	ldur	w9, [x29, #-28]
  407ae4:	cbnz	w9, 407af0 <wcrtomb@plt+0x4d40>
  407ae8:	ldr	x8, [sp, #24]
  407aec:	str	xzr, [x8, #16]
  407af0:	mov	w8, #0x1                   	// #1
  407af4:	ldr	x9, [sp, #24]
  407af8:	strb	w8, [x9, #32]
  407afc:	ldur	x8, [x29, #-16]
  407b00:	ldr	x8, [x8, #32]
  407b04:	ldur	x0, [x29, #-16]
  407b08:	blr	x8
  407b0c:	eor	w9, w0, #0x1
  407b10:	tbnz	w9, #0, 407b18 <wcrtomb@plt+0x4d68>
  407b14:	b	407bc0 <wcrtomb@plt+0x4e10>
  407b18:	ldur	x0, [x29, #-16]
  407b1c:	bl	408948 <wcrtomb@plt+0x5b98>
  407b20:	ldur	x8, [x29, #-16]
  407b24:	ldr	x8, [x8]
  407b28:	ldr	x8, [x8]
  407b2c:	cbnz	x8, 407b40 <wcrtomb@plt+0x4d90>
  407b30:	mov	w8, wzr
  407b34:	and	w8, w8, #0x1
  407b38:	sturb	w8, [x29, #-1]
  407b3c:	b	407bdc <wcrtomb@plt+0x4e2c>
  407b40:	ldur	x8, [x29, #-16]
  407b44:	ldrb	w9, [x8, #24]
  407b48:	tbnz	w9, #0, 407b50 <wcrtomb@plt+0x4da0>
  407b4c:	b	407ba0 <wcrtomb@plt+0x4df0>
  407b50:	ldur	x8, [x29, #-16]
  407b54:	str	xzr, [x8, #16]
  407b58:	ldr	x8, [sp, #16]
  407b5c:	str	xzr, [x8, #16]
  407b60:	ldur	x0, [x29, #-24]
  407b64:	bl	408c04 <wcrtomb@plt+0x5e54>
  407b68:	bl	404dd8 <wcrtomb@plt+0x2028>
  407b6c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407b70:	add	x8, x8, #0x760
  407b74:	ldr	x8, [x8]
  407b78:	cbz	x8, 407b88 <wcrtomb@plt+0x4dd8>
  407b7c:	mov	w8, #0x0                   	// #0
  407b80:	ldr	x9, [sp, #8]
  407b84:	strb	w8, [x9, #8]
  407b88:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407b8c:	add	x8, x8, #0x756
  407b90:	ldrb	w9, [x8]
  407b94:	ldur	x8, [x29, #-16]
  407b98:	and	w9, w9, #0x1
  407b9c:	strb	w9, [x8, #24]
  407ba0:	ldur	x8, [x29, #-16]
  407ba4:	ldr	x9, [x8]
  407ba8:	add	x10, x9, #0x8
  407bac:	str	x10, [x8]
  407bb0:	ldr	x0, [x9]
  407bb4:	ldur	x1, [x29, #-16]
  407bb8:	bl	408c94 <wcrtomb@plt+0x5ee4>
  407bbc:	b	407afc <wcrtomb@plt+0x4d4c>
  407bc0:	ldur	x8, [x29, #-16]
  407bc4:	ldr	x9, [x8, #16]
  407bc8:	add	x9, x9, #0x1
  407bcc:	str	x9, [x8, #16]
  407bd0:	mov	w10, #0x1                   	// #1
  407bd4:	and	w10, w10, #0x1
  407bd8:	sturb	w10, [x29, #-1]
  407bdc:	ldurb	w8, [x29, #-1]
  407be0:	and	w0, w8, #0x1
  407be4:	ldp	x29, x30, [sp, #64]
  407be8:	add	sp, sp, #0x50
  407bec:	ret
  407bf0:	sub	sp, sp, #0x30
  407bf4:	stp	x29, x30, [sp, #32]
  407bf8:	add	x29, sp, #0x20
  407bfc:	stur	x0, [x29, #-8]
  407c00:	ldur	x8, [x29, #-8]
  407c04:	ldr	x8, [x8, #184]
  407c08:	mov	w9, #0x0                   	// #0
  407c0c:	str	w9, [sp, #16]
  407c10:	cbz	x8, 407c2c <wcrtomb@plt+0x4e7c>
  407c14:	ldur	x8, [x29, #-8]
  407c18:	ldr	x0, [x8, #184]
  407c1c:	bl	4027f0 <fileno@plt>
  407c20:	cmp	w0, #0x0
  407c24:	cset	w9, eq  // eq = none
  407c28:	str	w9, [sp, #16]
  407c2c:	ldr	w8, [sp, #16]
  407c30:	and	w8, w8, #0x1
  407c34:	sturb	w8, [x29, #-9]
  407c38:	ldurb	w8, [x29, #-9]
  407c3c:	tbnz	w8, #0, 407c44 <wcrtomb@plt+0x4e94>
  407c40:	b	407c54 <wcrtomb@plt+0x4ea4>
  407c44:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  407c48:	add	x8, x8, #0xedb
  407c4c:	str	x8, [sp, #8]
  407c50:	b	407c60 <wcrtomb@plt+0x4eb0>
  407c54:	ldur	x8, [x29, #-8]
  407c58:	ldr	x8, [x8, #48]
  407c5c:	str	x8, [sp, #8]
  407c60:	ldr	x8, [sp, #8]
  407c64:	ldur	x9, [x29, #-8]
  407c68:	ldr	x2, [x9, #16]
  407c6c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  407c70:	add	x0, x0, #0xec3
  407c74:	mov	x1, x8
  407c78:	bl	402ce0 <printf@plt>
  407c7c:	ldp	x29, x30, [sp, #32]
  407c80:	add	sp, sp, #0x30
  407c84:	ret
  407c88:	sub	sp, sp, #0x40
  407c8c:	stp	x29, x30, [sp, #48]
  407c90:	add	x29, sp, #0x30
  407c94:	stur	x0, [x29, #-8]
  407c98:	ldur	x8, [x29, #-8]
  407c9c:	ldr	x8, [x8, #8]
  407ca0:	cbz	x8, 407cb4 <wcrtomb@plt+0x4f04>
  407ca4:	ldur	x8, [x29, #-8]
  407ca8:	ldr	x8, [x8, #8]
  407cac:	str	x8, [sp, #8]
  407cb0:	b	407cc0 <wcrtomb@plt+0x4f10>
  407cb4:	ldur	x8, [x29, #-8]
  407cb8:	ldr	x8, [x8]
  407cbc:	str	x8, [sp, #8]
  407cc0:	ldr	x8, [sp, #8]
  407cc4:	stur	x8, [x29, #-16]
  407cc8:	ldur	x8, [x29, #-8]
  407ccc:	ldr	x8, [x8, #16]
  407cd0:	str	x8, [sp, #24]
  407cd4:	ldur	x8, [x29, #-16]
  407cd8:	str	x8, [sp, #16]
  407cdc:	ldur	x8, [x29, #-8]
  407ce0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407ce4:	add	x9, x9, #0x658
  407ce8:	adrp	x10, 437000 <_obstack_memory_used@@Base+0x18e64>
  407cec:	add	x10, x10, #0xeeb
  407cf0:	adrp	x11, 437000 <_obstack_memory_used@@Base+0x18e64>
  407cf4:	add	x11, x11, #0xee1
  407cf8:	cmp	x8, x9
  407cfc:	csel	x0, x11, x10, eq  // eq = none
  407d00:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d04:	add	x8, x8, #0x518
  407d08:	ldr	x1, [x8]
  407d0c:	bl	402c60 <fputs_unlocked@plt>
  407d10:	ldr	x8, [sp, #24]
  407d14:	subs	x9, x8, #0x1
  407d18:	str	x9, [sp, #24]
  407d1c:	cbz	x8, 407d38 <wcrtomb@plt+0x4f88>
  407d20:	ldr	x8, [sp, #16]
  407d24:	add	x9, x8, #0x1
  407d28:	str	x9, [sp, #16]
  407d2c:	ldrb	w0, [x8]
  407d30:	bl	406ae4 <wcrtomb@plt+0x3d34>
  407d34:	b	407d10 <wcrtomb@plt+0x4f60>
  407d38:	mov	w0, #0xa                   	// #10
  407d3c:	bl	402990 <putchar_unlocked@plt>
  407d40:	ldp	x29, x30, [sp, #48]
  407d44:	add	sp, sp, #0x40
  407d48:	ret
  407d4c:	stp	x29, x30, [sp, #-32]!
  407d50:	str	x28, [sp, #16]
  407d54:	mov	x29, sp
  407d58:	sub	sp, sp, #0x1, lsl #12
  407d5c:	sub	sp, sp, #0x120
  407d60:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d64:	add	x8, x8, #0x759
  407d68:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d6c:	add	x9, x9, #0x755
  407d70:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d74:	add	x10, x10, #0x628
  407d78:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d7c:	add	x11, x11, #0x6c8
  407d80:	adrp	x12, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d84:	add	x12, x12, #0x468
  407d88:	adrp	x13, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d8c:	add	x13, x13, #0x658
  407d90:	adrp	x14, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d94:	add	x14, x14, #0x6c0
  407d98:	adrp	x15, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407d9c:	add	x15, x15, #0x700
  407da0:	stur	x0, [x29, #-16]
  407da4:	stur	x1, [x29, #-24]
  407da8:	ldur	x16, [x29, #-16]
  407dac:	ldr	x16, [x16]
  407db0:	stur	x16, [x29, #-32]
  407db4:	ldur	x16, [x29, #-16]
  407db8:	ldr	x16, [x16]
  407dbc:	ldur	x17, [x29, #-16]
  407dc0:	ldr	x17, [x17, #16]
  407dc4:	mov	x18, #0x28                  	// #40
  407dc8:	mul	x17, x18, x17
  407dcc:	add	x16, x16, x17
  407dd0:	stur	x16, [x29, #-40]
  407dd4:	str	x8, [sp, #136]
  407dd8:	str	x9, [sp, #128]
  407ddc:	str	x10, [sp, #120]
  407de0:	str	x11, [sp, #112]
  407de4:	str	x12, [sp, #104]
  407de8:	str	x13, [sp, #96]
  407dec:	str	x14, [sp, #88]
  407df0:	str	x15, [sp, #80]
  407df4:	ldur	x8, [x29, #-32]
  407df8:	ldur	x9, [x29, #-40]
  407dfc:	cmp	x8, x9
  407e00:	b.cs	4088ec <wcrtomb@plt+0x5b3c>  // b.hs, b.nlast
  407e04:	ldr	x8, [sp, #136]
  407e08:	ldrb	w9, [x8]
  407e0c:	tbnz	w9, #0, 407e14 <wcrtomb@plt+0x5064>
  407e10:	b	407e3c <wcrtomb@plt+0x508c>
  407e14:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  407e18:	add	x8, x8, #0x518
  407e1c:	ldr	x1, [x8]
  407e20:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  407e24:	add	x0, x0, #0xef5
  407e28:	bl	402c60 <fputs_unlocked@plt>
  407e2c:	ldur	x8, [x29, #-16]
  407e30:	ldur	x1, [x29, #-32]
  407e34:	mov	x0, x8
  407e38:	bl	406c10 <wcrtomb@plt+0x3e60>
  407e3c:	ldur	x0, [x29, #-32]
  407e40:	ldur	x1, [x29, #-24]
  407e44:	bl	409490 <wcrtomb@plt+0x66e0>
  407e48:	and	w8, w0, #0x1
  407e4c:	ldur	x9, [x29, #-32]
  407e50:	ldrb	w10, [x9, #20]
  407e54:	cmp	w8, w10
  407e58:	b.eq	4088dc <wcrtomb@plt+0x5b2c>  // b.none
  407e5c:	ldur	x8, [x29, #-32]
  407e60:	ldrb	w9, [x8, #21]
  407e64:	subs	w9, w9, #0x23
  407e68:	mov	w8, w9
  407e6c:	ubfx	x8, x8, #0, #32
  407e70:	cmp	x8, #0x5a
  407e74:	str	x8, [sp, #72]
  407e78:	b.hi	4088c8 <wcrtomb@plt+0x5b18>  // b.pmore
  407e7c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  407e80:	add	x8, x8, #0xc7c
  407e84:	ldr	x11, [sp, #72]
  407e88:	ldrsw	x10, [x8, x11, lsl #2]
  407e8c:	add	x9, x8, x10
  407e90:	br	x9
  407e94:	bl	40976c <wcrtomb@plt+0x69bc>
  407e98:	stur	x0, [x29, #-48]
  407e9c:	ldur	x8, [x29, #-32]
  407ea0:	ldr	x8, [x8, #24]
  407ea4:	ldur	x9, [x29, #-48]
  407ea8:	str	x8, [x9, #8]
  407eac:	ldur	x8, [x29, #-32]
  407eb0:	ldr	x8, [x8, #32]
  407eb4:	ldur	x9, [x29, #-48]
  407eb8:	str	x8, [x9, #16]
  407ebc:	b	4088dc <wcrtomb@plt+0x5b2c>
  407ec0:	ldur	x8, [x29, #-16]
  407ec4:	ldr	x8, [x8]
  407ec8:	ldur	x9, [x29, #-32]
  407ecc:	ldr	x9, [x9, #24]
  407ed0:	mov	x10, #0x28                  	// #40
  407ed4:	mul	x9, x10, x9
  407ed8:	add	x8, x8, x9
  407edc:	stur	x8, [x29, #-32]
  407ee0:	b	407df4 <wcrtomb@plt+0x5044>
  407ee4:	b	4088dc <wcrtomb@plt+0x5b2c>
  407ee8:	ldur	x8, [x29, #-32]
  407eec:	ldr	w9, [x8, #16]
  407ef0:	cmp	w9, #0x1
  407ef4:	b.eq	407f18 <wcrtomb@plt+0x5168>  // b.none
  407ef8:	ldur	x8, [x29, #-32]
  407efc:	ldr	x0, [x8, #24]
  407f00:	ldur	x8, [x29, #-32]
  407f04:	ldr	x8, [x8, #32]
  407f08:	subs	x1, x8, #0x1
  407f0c:	mov	w2, #0x1                   	// #1
  407f10:	ldr	x3, [sp, #112]
  407f14:	bl	409820 <wcrtomb@plt+0x6a70>
  407f18:	ldr	x8, [sp, #136]
  407f1c:	ldrb	w9, [x8]
  407f20:	tbnz	w9, #0, 407f28 <wcrtomb@plt+0x5178>
  407f24:	b	407f2c <wcrtomb@plt+0x517c>
  407f28:	bl	4098c0 <wcrtomb@plt+0x6b10>
  407f2c:	mov	w8, #0xffffffff            	// #-1
  407f30:	stur	w8, [x29, #-4]
  407f34:	b	408930 <wcrtomb@plt+0x5b80>
  407f38:	ldr	x8, [sp, #120]
  407f3c:	ldr	x0, [x8, #8]
  407f40:	ldr	x9, [sp, #104]
  407f44:	ldrb	w1, [x9]
  407f48:	ldr	x2, [x8, #16]
  407f4c:	bl	402c00 <memchr@plt>
  407f50:	stur	x0, [x29, #-56]
  407f54:	ldur	x8, [x29, #-56]
  407f58:	cbnz	x8, 407f68 <wcrtomb@plt+0x51b8>
  407f5c:	mov	w8, #0xffffffff            	// #-1
  407f60:	stur	w8, [x29, #-4]
  407f64:	b	408930 <wcrtomb@plt+0x5b80>
  407f68:	ldur	x8, [x29, #-56]
  407f6c:	add	x8, x8, #0x1
  407f70:	stur	x8, [x29, #-56]
  407f74:	ldur	x8, [x29, #-56]
  407f78:	ldr	x9, [sp, #120]
  407f7c:	ldr	x10, [x9, #8]
  407f80:	subs	x8, x8, x10
  407f84:	ldr	x10, [x9, #24]
  407f88:	subs	x8, x10, x8
  407f8c:	str	x8, [x9, #24]
  407f90:	ldur	x8, [x29, #-56]
  407f94:	ldr	x10, [x9, #8]
  407f98:	subs	x8, x8, x10
  407f9c:	ldr	x10, [x9, #16]
  407fa0:	subs	x8, x10, x8
  407fa4:	str	x8, [x9, #16]
  407fa8:	ldur	x8, [x29, #-56]
  407fac:	ldr	x10, [x9, #8]
  407fb0:	subs	x8, x8, x10
  407fb4:	ldr	x10, [x9, #8]
  407fb8:	add	x8, x10, x8
  407fbc:	str	x8, [x9, #8]
  407fc0:	ldur	x8, [x29, #-16]
  407fc4:	ldr	x8, [x8]
  407fc8:	stur	x8, [x29, #-32]
  407fcc:	ldr	x8, [sp, #136]
  407fd0:	ldrb	w11, [x8]
  407fd4:	tbnz	w11, #0, 407fdc <wcrtomb@plt+0x522c>
  407fd8:	b	407fe4 <wcrtomb@plt+0x5234>
  407fdc:	ldr	x0, [sp, #120]
  407fe0:	bl	407c88 <wcrtomb@plt+0x4ed8>
  407fe4:	b	407df4 <wcrtomb@plt+0x5044>
  407fe8:	ldur	x8, [x29, #-32]
  407fec:	ldr	x8, [x8, #32]
  407ff0:	stur	w8, [x29, #-68]
  407ff4:	ldr	x0, [sp, #80]
  407ff8:	mov	x9, xzr
  407ffc:	mov	x1, x9
  408000:	bl	4098dc <wcrtomb@plt+0x6b2c>
  408004:	ldur	w8, [x29, #-68]
  408008:	cbnz	w8, 40803c <wcrtomb@plt+0x528c>
  40800c:	ldr	x0, [sp, #120]
  408010:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  408014:	add	x1, x1, #0x301
  408018:	mov	x2, #0x1                   	// #1
  40801c:	bl	4091e4 <wcrtomb@plt+0x6434>
  408020:	ldr	x8, [sp, #120]
  408024:	ldr	x0, [x8, #8]
  408028:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40802c:	add	x1, x1, #0x2af
  408030:	bl	4028f0 <popen@plt>
  408034:	stur	x0, [x29, #-64]
  408038:	b	408080 <wcrtomb@plt+0x52d0>
  40803c:	ldur	x8, [x29, #-32]
  408040:	ldr	x8, [x8, #24]
  408044:	ldur	w9, [x29, #-68]
  408048:	subs	w9, w9, #0x1
  40804c:	mov	w0, w9
  408050:	sxtw	x10, w0
  408054:	add	x8, x8, x10
  408058:	mov	w9, #0x0                   	// #0
  40805c:	strb	w9, [x8]
  408060:	ldur	x8, [x29, #-32]
  408064:	ldr	x0, [x8, #24]
  408068:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40806c:	add	x1, x1, #0x2af
  408070:	bl	4028f0 <popen@plt>
  408074:	stur	x0, [x29, #-64]
  408078:	ldr	x0, [sp, #112]
  40807c:	bl	408fe0 <wcrtomb@plt+0x6230>
  408080:	ldur	x8, [x29, #-64]
  408084:	cbnz	x8, 408098 <wcrtomb@plt+0x52e8>
  408088:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40808c:	add	x0, x0, #0xeff
  408090:	bl	402d40 <gettext@plt>
  408094:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  408098:	ldur	x0, [x29, #-64]
  40809c:	bl	402b90 <feof_unlocked@plt>
  4080a0:	cmp	w0, #0x0
  4080a4:	cset	w8, ne  // ne = any
  4080a8:	eor	w8, w8, #0x1
  4080ac:	tbnz	w8, #0, 4080b4 <wcrtomb@plt+0x5304>
  4080b0:	b	408110 <wcrtomb@plt+0x5360>
  4080b4:	ldur	x3, [x29, #-64]
  4080b8:	add	x0, sp, #0xdc
  4080bc:	mov	x1, #0x1                   	// #1
  4080c0:	mov	x2, #0x1000                	// #4096
  4080c4:	bl	402ad0 <fread_unlocked@plt>
  4080c8:	str	w0, [sp, #216]
  4080cc:	cmp	w0, #0x0
  4080d0:	cset	w8, le
  4080d4:	tbnz	w8, #0, 40810c <wcrtomb@plt+0x535c>
  4080d8:	ldur	w8, [x29, #-68]
  4080dc:	cbnz	w8, 4080f4 <wcrtomb@plt+0x5344>
  4080e0:	ldrsw	x2, [sp, #216]
  4080e4:	ldr	x0, [sp, #80]
  4080e8:	add	x1, sp, #0xdc
  4080ec:	bl	4091e4 <wcrtomb@plt+0x6434>
  4080f0:	b	40810c <wcrtomb@plt+0x535c>
  4080f4:	ldrsw	x2, [sp, #216]
  4080f8:	ldr	x8, [sp, #112]
  4080fc:	ldr	x3, [x8, #16]
  408100:	add	x0, sp, #0xdc
  408104:	mov	x1, #0x1                   	// #1
  408108:	bl	40d1f0 <wcrtomb@plt+0xa440>
  40810c:	b	408098 <wcrtomb@plt+0x52e8>
  408110:	ldur	x0, [x29, #-64]
  408114:	bl	402c90 <pclose@plt>
  408118:	ldur	w8, [x29, #-68]
  40811c:	cbnz	w8, 408174 <wcrtomb@plt+0x53c4>
  408120:	ldr	x8, [sp, #80]
  408124:	ldr	x9, [x8, #16]
  408128:	cbz	x9, 408160 <wcrtomb@plt+0x53b0>
  40812c:	ldr	x8, [sp, #80]
  408130:	ldr	x9, [x8, #8]
  408134:	ldr	x10, [x8, #16]
  408138:	subs	x10, x10, #0x1
  40813c:	ldrb	w11, [x9, x10]
  408140:	ldr	x9, [sp, #104]
  408144:	ldrb	w12, [x9]
  408148:	cmp	w11, w12
  40814c:	b.ne	408160 <wcrtomb@plt+0x53b0>  // b.any
  408150:	ldr	x8, [sp, #80]
  408154:	ldr	x9, [x8, #16]
  408158:	subs	x9, x9, #0x1
  40815c:	str	x9, [x8, #16]
  408160:	ldr	x0, [sp, #120]
  408164:	ldr	x1, [sp, #80]
  408168:	mov	w2, #0x1                   	// #1
  40816c:	bl	409948 <wcrtomb@plt+0x6b98>
  408170:	b	408180 <wcrtomb@plt+0x53d0>
  408174:	ldr	x8, [sp, #112]
  408178:	ldr	x0, [x8, #16]
  40817c:	bl	409038 <wcrtomb@plt+0x6288>
  408180:	b	4088dc <wcrtomb@plt+0x5b2c>
  408184:	ldr	x0, [sp, #96]
  408188:	ldr	x1, [sp, #120]
  40818c:	mov	w2, #0x1                   	// #1
  408190:	bl	4099f8 <wcrtomb@plt+0x6c48>
  408194:	ldr	x8, [sp, #136]
  408198:	ldrb	w9, [x8]
  40819c:	tbnz	w9, #0, 4081a4 <wcrtomb@plt+0x53f4>
  4081a0:	b	4081ac <wcrtomb@plt+0x53fc>
  4081a4:	ldr	x0, [sp, #96]
  4081a8:	bl	407c88 <wcrtomb@plt+0x4ed8>
  4081ac:	b	4088dc <wcrtomb@plt+0x5b2c>
  4081b0:	ldr	x0, [sp, #96]
  4081b4:	ldr	x1, [sp, #120]
  4081b8:	mov	w2, #0x1                   	// #1
  4081bc:	bl	409b3c <wcrtomb@plt+0x6d8c>
  4081c0:	ldr	x8, [sp, #136]
  4081c4:	ldrb	w9, [x8]
  4081c8:	tbnz	w9, #0, 4081d0 <wcrtomb@plt+0x5420>
  4081cc:	b	4081d8 <wcrtomb@plt+0x5428>
  4081d0:	ldr	x0, [sp, #120]
  4081d4:	bl	407c88 <wcrtomb@plt+0x4ed8>
  4081d8:	b	4088dc <wcrtomb@plt+0x5b2c>
  4081dc:	ldr	x0, [sp, #120]
  4081e0:	ldr	x1, [sp, #96]
  4081e4:	mov	w2, #0x1                   	// #1
  4081e8:	bl	4099f8 <wcrtomb@plt+0x6c48>
  4081ec:	ldr	x8, [sp, #136]
  4081f0:	ldrb	w9, [x8]
  4081f4:	tbnz	w9, #0, 4081fc <wcrtomb@plt+0x544c>
  4081f8:	b	408204 <wcrtomb@plt+0x5454>
  4081fc:	ldr	x0, [sp, #96]
  408200:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408204:	b	4088dc <wcrtomb@plt+0x5b2c>
  408208:	ldr	x0, [sp, #120]
  40820c:	ldr	x1, [sp, #96]
  408210:	mov	w2, #0x1                   	// #1
  408214:	bl	409b3c <wcrtomb@plt+0x6d8c>
  408218:	ldr	x8, [sp, #136]
  40821c:	ldrb	w9, [x8]
  408220:	tbnz	w9, #0, 408228 <wcrtomb@plt+0x5478>
  408224:	b	408230 <wcrtomb@plt+0x5480>
  408228:	ldr	x0, [sp, #96]
  40822c:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408230:	b	4088dc <wcrtomb@plt+0x5b2c>
  408234:	ldur	x8, [x29, #-32]
  408238:	ldr	x0, [x8, #24]
  40823c:	ldur	x8, [x29, #-32]
  408240:	ldr	x8, [x8, #32]
  408244:	subs	x1, x8, #0x1
  408248:	mov	w2, #0x1                   	// #1
  40824c:	ldr	x3, [sp, #112]
  408250:	bl	409820 <wcrtomb@plt+0x6a70>
  408254:	b	4088dc <wcrtomb@plt+0x5b2c>
  408258:	ldur	x8, [x29, #-32]
  40825c:	ldr	w9, [x8, #24]
  408260:	mov	w10, #0xffffffff            	// #-1
  408264:	cmp	w9, w10
  408268:	b.ne	408280 <wcrtomb@plt+0x54d0>  // b.any
  40826c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408270:	add	x8, x8, #0x480
  408274:	ldr	x8, [x8]
  408278:	str	x8, [sp, #64]
  40827c:	b	40828c <wcrtomb@plt+0x54dc>
  408280:	ldur	x8, [x29, #-32]
  408284:	ldrsw	x8, [x8, #24]
  408288:	str	x8, [sp, #64]
  40828c:	ldr	x8, [sp, #64]
  408290:	mov	w0, w8
  408294:	bl	409bc0 <wcrtomb@plt+0x6e10>
  408298:	b	4088dc <wcrtomb@plt+0x5b2c>
  40829c:	ldr	x8, [sp, #128]
  4082a0:	ldrb	w9, [x8]
  4082a4:	tbnz	w9, #0, 4082c4 <wcrtomb@plt+0x5514>
  4082a8:	ldr	x8, [sp, #120]
  4082ac:	ldr	x0, [x8, #8]
  4082b0:	ldr	x1, [x8, #16]
  4082b4:	ldrb	w9, [x8, #32]
  4082b8:	and	w2, w9, #0x1
  4082bc:	ldr	x3, [sp, #112]
  4082c0:	bl	409820 <wcrtomb@plt+0x6a70>
  4082c4:	ldur	x0, [x29, #-24]
  4082c8:	bl	409ea8 <wcrtomb@plt+0x70f8>
  4082cc:	tbnz	w0, #0, 4082e8 <wcrtomb@plt+0x5538>
  4082d0:	ldur	x0, [x29, #-24]
  4082d4:	ldur	x1, [x29, #-16]
  4082d8:	mov	w8, wzr
  4082dc:	mov	w2, w8
  4082e0:	bl	407a80 <wcrtomb@plt+0x4cd0>
  4082e4:	tbnz	w0, #0, 408308 <wcrtomb@plt+0x5558>
  4082e8:	ldr	x8, [sp, #136]
  4082ec:	ldrb	w9, [x8]
  4082f0:	tbnz	w9, #0, 4082f8 <wcrtomb@plt+0x5548>
  4082f4:	b	4082fc <wcrtomb@plt+0x554c>
  4082f8:	bl	4098c0 <wcrtomb@plt+0x6b10>
  4082fc:	mov	w8, #0xffffffff            	// #-1
  408300:	stur	w8, [x29, #-4]
  408304:	b	408930 <wcrtomb@plt+0x5b80>
  408308:	ldr	x8, [sp, #136]
  40830c:	ldrb	w9, [x8]
  408310:	tbnz	w9, #0, 408318 <wcrtomb@plt+0x5568>
  408314:	b	408320 <wcrtomb@plt+0x5570>
  408318:	ldr	x0, [sp, #120]
  40831c:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408320:	b	4088dc <wcrtomb@plt+0x5b2c>
  408324:	ldr	x0, [sp, #120]
  408328:	ldr	x1, [sp, #104]
  40832c:	mov	x2, #0x1                   	// #1
  408330:	bl	4091e4 <wcrtomb@plt+0x6434>
  408334:	ldur	x0, [x29, #-24]
  408338:	bl	409ea8 <wcrtomb@plt+0x70f8>
  40833c:	tbnz	w0, #0, 408354 <wcrtomb@plt+0x55a4>
  408340:	ldur	x0, [x29, #-24]
  408344:	ldur	x1, [x29, #-16]
  408348:	mov	w2, #0x1                   	// #1
  40834c:	bl	407a80 <wcrtomb@plt+0x4cd0>
  408350:	tbnz	w0, #0, 4083bc <wcrtomb@plt+0x560c>
  408354:	ldr	x8, [sp, #136]
  408358:	ldrb	w9, [x8]
  40835c:	tbnz	w9, #0, 408364 <wcrtomb@plt+0x55b4>
  408360:	b	408368 <wcrtomb@plt+0x55b8>
  408364:	bl	4098c0 <wcrtomb@plt+0x6b10>
  408368:	ldr	x8, [sp, #120]
  40836c:	ldr	x9, [x8, #16]
  408370:	subs	x9, x9, #0x1
  408374:	str	x9, [x8, #16]
  408378:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40837c:	add	x9, x9, #0x8e0
  408380:	ldr	w10, [x9]
  408384:	cbnz	w10, 4083b0 <wcrtomb@plt+0x5600>
  408388:	ldr	x8, [sp, #128]
  40838c:	ldrb	w9, [x8]
  408390:	tbnz	w9, #0, 4083b0 <wcrtomb@plt+0x5600>
  408394:	ldr	x8, [sp, #120]
  408398:	ldr	x0, [x8, #8]
  40839c:	ldr	x1, [x8, #16]
  4083a0:	ldrb	w9, [x8, #32]
  4083a4:	and	w2, w9, #0x1
  4083a8:	ldr	x3, [sp, #112]
  4083ac:	bl	409820 <wcrtomb@plt+0x6a70>
  4083b0:	mov	w8, #0xffffffff            	// #-1
  4083b4:	stur	w8, [x29, #-4]
  4083b8:	b	408930 <wcrtomb@plt+0x5b80>
  4083bc:	ldr	x8, [sp, #136]
  4083c0:	ldrb	w9, [x8]
  4083c4:	tbnz	w9, #0, 4083cc <wcrtomb@plt+0x561c>
  4083c8:	b	4083d4 <wcrtomb@plt+0x5624>
  4083cc:	ldr	x0, [sp, #120]
  4083d0:	bl	407c88 <wcrtomb@plt+0x4ed8>
  4083d4:	b	4088dc <wcrtomb@plt+0x5b2c>
  4083d8:	ldr	x8, [sp, #120]
  4083dc:	ldr	x0, [x8, #8]
  4083e0:	ldr	x1, [x8, #16]
  4083e4:	ldrb	w9, [x8, #32]
  4083e8:	and	w2, w9, #0x1
  4083ec:	ldr	x3, [sp, #112]
  4083f0:	bl	409820 <wcrtomb@plt+0x6a70>
  4083f4:	b	4088dc <wcrtomb@plt+0x5b2c>
  4083f8:	ldr	x8, [sp, #120]
  4083fc:	ldr	x0, [x8, #8]
  408400:	ldr	x9, [sp, #104]
  408404:	ldrb	w1, [x9]
  408408:	ldr	x2, [x8, #16]
  40840c:	bl	402c00 <memchr@plt>
  408410:	str	x0, [sp, #208]
  408414:	ldr	x8, [sp, #120]
  408418:	ldr	x0, [x8, #8]
  40841c:	ldr	x9, [sp, #208]
  408420:	str	x0, [sp, #56]
  408424:	cbz	x9, 408440 <wcrtomb@plt+0x5690>
  408428:	ldr	x8, [sp, #208]
  40842c:	ldr	x9, [sp, #120]
  408430:	ldr	x10, [x9, #8]
  408434:	subs	x8, x8, x10
  408438:	str	x8, [sp, #48]
  40843c:	b	40844c <wcrtomb@plt+0x569c>
  408440:	ldr	x8, [sp, #120]
  408444:	ldr	x9, [x8, #16]
  408448:	str	x9, [sp, #48]
  40844c:	ldr	x8, [sp, #48]
  408450:	ldr	x9, [sp, #208]
  408454:	str	x8, [sp, #40]
  408458:	cbz	x9, 408468 <wcrtomb@plt+0x56b8>
  40845c:	mov	w8, #0x1                   	// #1
  408460:	str	w8, [sp, #36]
  408464:	b	408478 <wcrtomb@plt+0x56c8>
  408468:	ldr	x8, [sp, #120]
  40846c:	ldrb	w9, [x8, #32]
  408470:	and	w9, w9, #0x1
  408474:	str	w9, [sp, #36]
  408478:	ldr	w8, [sp, #36]
  40847c:	ldr	x0, [sp, #56]
  408480:	ldr	x1, [sp, #40]
  408484:	mov	w2, w8
  408488:	ldr	x3, [sp, #112]
  40848c:	bl	409820 <wcrtomb@plt+0x6a70>
  408490:	b	4088dc <wcrtomb@plt+0x5b2c>
  408494:	ldr	x8, [sp, #128]
  408498:	ldrb	w9, [x8]
  40849c:	tbnz	w9, #0, 4084bc <wcrtomb@plt+0x570c>
  4084a0:	ldr	x8, [sp, #120]
  4084a4:	ldr	x0, [x8, #8]
  4084a8:	ldr	x1, [x8, #16]
  4084ac:	ldrb	w9, [x8, #32]
  4084b0:	and	w2, w9, #0x1
  4084b4:	ldr	x3, [sp, #112]
  4084b8:	bl	409820 <wcrtomb@plt+0x6a70>
  4084bc:	bl	408adc <wcrtomb@plt+0x5d2c>
  4084c0:	ldur	x8, [x29, #-32]
  4084c4:	ldr	w9, [x8, #24]
  4084c8:	mov	w10, #0xffffffff            	// #-1
  4084cc:	cmp	w9, w10
  4084d0:	b.ne	4084e0 <wcrtomb@plt+0x5730>  // b.any
  4084d4:	mov	w8, wzr
  4084d8:	str	w8, [sp, #32]
  4084dc:	b	4084ec <wcrtomb@plt+0x573c>
  4084e0:	ldur	x8, [x29, #-32]
  4084e4:	ldr	w9, [x8, #24]
  4084e8:	str	w9, [sp, #32]
  4084ec:	ldr	w8, [sp, #32]
  4084f0:	stur	w8, [x29, #-4]
  4084f4:	b	408930 <wcrtomb@plt+0x5b80>
  4084f8:	ldur	x8, [x29, #-32]
  4084fc:	ldr	x8, [x8, #24]
  408500:	cbz	x8, 40851c <wcrtomb@plt+0x576c>
  408504:	bl	40976c <wcrtomb@plt+0x69bc>
  408508:	str	x0, [sp, #200]
  40850c:	ldur	x8, [x29, #-32]
  408510:	ldr	x8, [x8, #24]
  408514:	ldr	x9, [sp, #200]
  408518:	str	x8, [x9]
  40851c:	b	4088dc <wcrtomb@plt+0x5b2c>
  408520:	ldur	x8, [x29, #-32]
  408524:	ldr	x8, [x8, #24]
  408528:	ldr	x8, [x8, #16]
  40852c:	cbz	x8, 4085b8 <wcrtomb@plt+0x5808>
  408530:	ldur	x8, [x29, #-32]
  408534:	ldr	x8, [x8, #24]
  408538:	ldr	x0, [x8, #16]
  40853c:	bl	402b90 <feof_unlocked@plt>
  408540:	cbnz	w0, 4085b8 <wcrtomb@plt+0x5808>
  408544:	add	x0, sp, #0xb0
  408548:	mov	x8, xzr
  40854c:	str	x8, [sp, #176]
  408550:	ldr	x8, [sp, #104]
  408554:	ldrb	w2, [x8]
  408558:	ldur	x9, [x29, #-32]
  40855c:	ldr	x9, [x9, #24]
  408560:	ldr	x3, [x9, #16]
  408564:	add	x1, sp, #0xb8
  408568:	bl	40d438 <wcrtomb@plt+0xa688>
  40856c:	str	w0, [sp, #172]
  408570:	ldr	w10, [sp, #172]
  408574:	mov	w11, #0xffffffff            	// #-1
  408578:	cmp	w10, w11
  40857c:	b.eq	4085b0 <wcrtomb@plt+0x5800>  // b.none
  408580:	bl	40976c <wcrtomb@plt+0x69bc>
  408584:	str	x0, [sp, #192]
  408588:	ldr	x8, [sp, #192]
  40858c:	mov	w9, #0x1                   	// #1
  408590:	strb	w9, [x8, #32]
  408594:	ldr	x8, [sp, #176]
  408598:	ldr	x10, [sp, #192]
  40859c:	str	x8, [x10, #8]
  4085a0:	ldrsw	x8, [sp, #172]
  4085a4:	ldr	x10, [sp, #192]
  4085a8:	str	x8, [x10, #16]
  4085ac:	b	4085b8 <wcrtomb@plt+0x5808>
  4085b0:	ldr	x0, [sp, #176]
  4085b4:	bl	402b40 <free@plt>
  4085b8:	b	4088dc <wcrtomb@plt+0x5b2c>
  4085bc:	ldur	x8, [x29, #-32]
  4085c0:	ldr	x0, [x8, #24]
  4085c4:	bl	409fdc <wcrtomb@plt+0x722c>
  4085c8:	ldr	x8, [sp, #136]
  4085cc:	ldrb	w9, [x8]
  4085d0:	tbnz	w9, #0, 4085d8 <wcrtomb@plt+0x5828>
  4085d4:	b	4085e0 <wcrtomb@plt+0x5830>
  4085d8:	ldr	x0, [sp, #120]
  4085dc:	bl	407c88 <wcrtomb@plt+0x4ed8>
  4085e0:	b	4088dc <wcrtomb@plt+0x5b2c>
  4085e4:	ldr	x8, [sp, #88]
  4085e8:	ldrb	w9, [x8]
  4085ec:	tbnz	w9, #0, 4085f4 <wcrtomb@plt+0x5844>
  4085f0:	b	408624 <wcrtomb@plt+0x5874>
  4085f4:	mov	w8, #0x0                   	// #0
  4085f8:	ldr	x9, [sp, #88]
  4085fc:	strb	w8, [x9]
  408600:	ldur	x10, [x29, #-16]
  408604:	ldr	x10, [x10]
  408608:	ldur	x11, [x29, #-32]
  40860c:	ldr	x11, [x11, #24]
  408610:	mov	x12, #0x28                  	// #40
  408614:	mul	x11, x12, x11
  408618:	add	x10, x10, x11
  40861c:	stur	x10, [x29, #-32]
  408620:	b	407df4 <wcrtomb@plt+0x5044>
  408624:	b	4088dc <wcrtomb@plt+0x5b2c>
  408628:	ldr	x8, [sp, #88]
  40862c:	ldrb	w9, [x8]
  408630:	tbnz	w9, #0, 408658 <wcrtomb@plt+0x58a8>
  408634:	ldur	x8, [x29, #-16]
  408638:	ldr	x8, [x8]
  40863c:	ldur	x9, [x29, #-32]
  408640:	ldr	x9, [x9, #24]
  408644:	mov	x10, #0x28                  	// #40
  408648:	mul	x9, x10, x9
  40864c:	add	x8, x8, x9
  408650:	stur	x8, [x29, #-32]
  408654:	b	407df4 <wcrtomb@plt+0x5044>
  408658:	mov	w8, #0x0                   	// #0
  40865c:	ldr	x9, [sp, #88]
  408660:	strb	w8, [x9]
  408664:	b	4088dc <wcrtomb@plt+0x5b2c>
  408668:	ldur	x8, [x29, #-32]
  40866c:	ldr	x8, [x8, #24]
  408670:	ldr	x8, [x8, #16]
  408674:	cbz	x8, 408698 <wcrtomb@plt+0x58e8>
  408678:	ldr	x8, [sp, #120]
  40867c:	ldr	x0, [x8, #8]
  408680:	ldr	x1, [x8, #16]
  408684:	ldrb	w9, [x8, #32]
  408688:	and	w2, w9, #0x1
  40868c:	ldur	x10, [x29, #-32]
  408690:	ldr	x3, [x10, #24]
  408694:	bl	409820 <wcrtomb@plt+0x6a70>
  408698:	b	4088dc <wcrtomb@plt+0x5b2c>
  40869c:	ldur	x8, [x29, #-32]
  4086a0:	ldr	x8, [x8, #24]
  4086a4:	ldr	x8, [x8, #16]
  4086a8:	cbz	x8, 408748 <wcrtomb@plt+0x5998>
  4086ac:	ldr	x8, [sp, #120]
  4086b0:	ldr	x0, [x8, #8]
  4086b4:	ldr	x9, [sp, #104]
  4086b8:	ldrb	w1, [x9]
  4086bc:	ldr	x2, [x8, #16]
  4086c0:	bl	402c00 <memchr@plt>
  4086c4:	str	x0, [sp, #160]
  4086c8:	ldr	x8, [sp, #120]
  4086cc:	ldr	x0, [x8, #8]
  4086d0:	ldr	x9, [sp, #160]
  4086d4:	str	x0, [sp, #24]
  4086d8:	cbz	x9, 4086f4 <wcrtomb@plt+0x5944>
  4086dc:	ldr	x8, [sp, #160]
  4086e0:	ldr	x9, [sp, #120]
  4086e4:	ldr	x10, [x9, #8]
  4086e8:	subs	x8, x8, x10
  4086ec:	str	x8, [sp, #16]
  4086f0:	b	408700 <wcrtomb@plt+0x5950>
  4086f4:	ldr	x8, [sp, #120]
  4086f8:	ldr	x9, [x8, #16]
  4086fc:	str	x9, [sp, #16]
  408700:	ldr	x8, [sp, #16]
  408704:	ldr	x9, [sp, #160]
  408708:	str	x8, [sp, #8]
  40870c:	cbz	x9, 40871c <wcrtomb@plt+0x596c>
  408710:	mov	w8, #0x1                   	// #1
  408714:	str	w8, [sp, #4]
  408718:	b	40872c <wcrtomb@plt+0x597c>
  40871c:	ldr	x8, [sp, #120]
  408720:	ldrb	w9, [x8, #32]
  408724:	and	w9, w9, #0x1
  408728:	str	w9, [sp, #4]
  40872c:	ldr	w8, [sp, #4]
  408730:	ldur	x9, [x29, #-32]
  408734:	ldr	x3, [x9, #24]
  408738:	ldr	x0, [sp, #24]
  40873c:	ldr	x1, [sp, #8]
  408740:	mov	w2, w8
  408744:	bl	409820 <wcrtomb@plt+0x6a70>
  408748:	b	4088dc <wcrtomb@plt+0x5b2c>
  40874c:	ldr	x0, [sp, #120]
  408750:	ldr	x1, [sp, #96]
  408754:	mov	w8, wzr
  408758:	mov	w2, w8
  40875c:	bl	409948 <wcrtomb@plt+0x6b98>
  408760:	ldr	x9, [sp, #136]
  408764:	ldrb	w8, [x9]
  408768:	tbnz	w8, #0, 408770 <wcrtomb@plt+0x59c0>
  40876c:	b	408780 <wcrtomb@plt+0x59d0>
  408770:	ldr	x0, [sp, #120]
  408774:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408778:	ldr	x0, [sp, #96]
  40877c:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408780:	b	4088dc <wcrtomb@plt+0x5b2c>
  408784:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408788:	add	x8, x8, #0x8dc
  40878c:	ldr	w9, [x8]
  408790:	cmp	w9, #0x1
  408794:	b.le	4087a8 <wcrtomb@plt+0x59f8>
  408798:	ldur	x8, [x29, #-32]
  40879c:	ldr	x0, [x8, #24]
  4087a0:	bl	40a75c <wcrtomb@plt+0x79ac>
  4087a4:	b	408808 <wcrtomb@plt+0x5a58>
  4087a8:	ldr	x8, [sp, #120]
  4087ac:	ldr	x9, [x8, #8]
  4087b0:	str	x9, [sp, #152]
  4087b4:	ldr	x9, [sp, #152]
  4087b8:	ldr	x10, [x8, #16]
  4087bc:	add	x9, x9, x10
  4087c0:	str	x9, [sp, #144]
  4087c4:	ldr	x8, [sp, #152]
  4087c8:	ldr	x9, [sp, #144]
  4087cc:	cmp	x8, x9
  4087d0:	b.cs	408808 <wcrtomb@plt+0x5a58>  // b.hs, b.nlast
  4087d4:	ldur	x8, [x29, #-32]
  4087d8:	ldr	x8, [x8, #24]
  4087dc:	ldr	x9, [sp, #152]
  4087e0:	ldrb	w10, [x9]
  4087e4:	mov	w9, w10
  4087e8:	add	x8, x8, x9
  4087ec:	ldrb	w10, [x8]
  4087f0:	ldr	x8, [sp, #152]
  4087f4:	strb	w10, [x8]
  4087f8:	ldr	x8, [sp, #152]
  4087fc:	add	x8, x8, #0x1
  408800:	str	x8, [sp, #152]
  408804:	b	4087c4 <wcrtomb@plt+0x5a14>
  408808:	ldr	x8, [sp, #136]
  40880c:	ldrb	w9, [x8]
  408810:	tbnz	w9, #0, 408818 <wcrtomb@plt+0x5a68>
  408814:	b	408820 <wcrtomb@plt+0x5a70>
  408818:	ldr	x0, [sp, #120]
  40881c:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408820:	b	4088dc <wcrtomb@plt+0x5b2c>
  408824:	ldr	x8, [sp, #120]
  408828:	str	xzr, [x8, #16]
  40882c:	ldr	x9, [sp, #136]
  408830:	ldrb	w10, [x9]
  408834:	tbnz	w10, #0, 40883c <wcrtomb@plt+0x5a8c>
  408838:	b	408844 <wcrtomb@plt+0x5a94>
  40883c:	ldr	x0, [sp, #120]
  408840:	bl	407c88 <wcrtomb@plt+0x4ed8>
  408844:	b	4088dc <wcrtomb@plt+0x5b2c>
  408848:	ldr	x0, [sp, #112]
  40884c:	bl	408fe0 <wcrtomb@plt+0x6230>
  408850:	ldr	x8, [sp, #112]
  408854:	ldr	x0, [x8, #16]
  408858:	ldur	x9, [x29, #-24]
  40885c:	ldr	x2, [x9, #16]
  408860:	ldr	x9, [sp, #104]
  408864:	ldrb	w3, [x9]
  408868:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  40886c:	add	x1, x1, #0xf13
  408870:	bl	402d70 <fprintf@plt>
  408874:	ldr	x8, [sp, #112]
  408878:	ldr	x9, [x8, #16]
  40887c:	mov	x0, x9
  408880:	bl	409038 <wcrtomb@plt+0x6288>
  408884:	b	4088dc <wcrtomb@plt+0x5b2c>
  408888:	ldr	x0, [sp, #112]
  40888c:	bl	408fe0 <wcrtomb@plt+0x6230>
  408890:	ldr	x8, [sp, #112]
  408894:	ldr	x0, [x8, #16]
  408898:	ldur	x9, [x29, #-24]
  40889c:	ldr	x2, [x9, #48]
  4088a0:	ldr	x9, [sp, #104]
  4088a4:	ldrb	w3, [x9]
  4088a8:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  4088ac:	add	x1, x1, #0xf19
  4088b0:	bl	402d70 <fprintf@plt>
  4088b4:	ldr	x8, [sp, #112]
  4088b8:	ldr	x9, [x8, #16]
  4088bc:	mov	x0, x9
  4088c0:	bl	409038 <wcrtomb@plt+0x6288>
  4088c4:	b	4088dc <wcrtomb@plt+0x5b2c>
  4088c8:	ldur	x8, [x29, #-32]
  4088cc:	ldrb	w1, [x8, #21]
  4088d0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  4088d4:	add	x0, x0, #0xf1e
  4088d8:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  4088dc:	ldur	x8, [x29, #-32]
  4088e0:	add	x8, x8, #0x28
  4088e4:	stur	x8, [x29, #-32]
  4088e8:	b	407df4 <wcrtomb@plt+0x5044>
  4088ec:	ldr	x8, [sp, #136]
  4088f0:	ldrb	w9, [x8]
  4088f4:	tbnz	w9, #0, 4088fc <wcrtomb@plt+0x5b4c>
  4088f8:	b	408900 <wcrtomb@plt+0x5b50>
  4088fc:	bl	4098c0 <wcrtomb@plt+0x6b10>
  408900:	ldr	x8, [sp, #128]
  408904:	ldrb	w9, [x8]
  408908:	tbnz	w9, #0, 408928 <wcrtomb@plt+0x5b78>
  40890c:	ldr	x8, [sp, #120]
  408910:	ldr	x0, [x8, #8]
  408914:	ldr	x1, [x8, #16]
  408918:	ldrb	w9, [x8, #32]
  40891c:	and	w2, w9, #0x1
  408920:	ldr	x3, [sp, #112]
  408924:	bl	409820 <wcrtomb@plt+0x6a70>
  408928:	mov	w8, #0xffffffff            	// #-1
  40892c:	stur	w8, [x29, #-4]
  408930:	ldur	w0, [x29, #-4]
  408934:	add	sp, sp, #0x1, lsl #12
  408938:	add	sp, sp, #0x120
  40893c:	ldr	x28, [sp, #16]
  408940:	ldp	x29, x30, [sp], #32
  408944:	ret
  408948:	sub	sp, sp, #0x40
  40894c:	stp	x29, x30, [sp, #48]
  408950:	add	x29, sp, #0x30
  408954:	adrp	x8, 407000 <wcrtomb@plt+0x4250>
  408958:	add	x8, x8, #0xa68
  40895c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408960:	add	x9, x9, #0x6c8
  408964:	stur	x0, [x29, #-8]
  408968:	ldur	x10, [x29, #-8]
  40896c:	str	x8, [x10, #32]
  408970:	ldur	x8, [x29, #-8]
  408974:	ldr	x8, [x8, #184]
  408978:	str	x9, [sp]
  40897c:	cbnz	x8, 408984 <wcrtomb@plt+0x5bd4>
  408980:	b	408ad0 <wcrtomb@plt+0x5d20>
  408984:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408988:	add	x8, x8, #0x760
  40898c:	ldr	x8, [x8]
  408990:	cbz	x8, 408ab8 <wcrtomb@plt+0x5d08>
  408994:	ldr	x8, [sp]
  408998:	ldr	x9, [x8, #16]
  40899c:	cbz	x9, 408ab8 <wcrtomb@plt+0x5d08>
  4089a0:	ldur	x8, [x29, #-8]
  4089a4:	ldr	x8, [x8, #48]
  4089a8:	stur	x8, [x29, #-16]
  4089ac:	ldur	x8, [x29, #-8]
  4089b0:	ldr	x0, [x8, #184]
  4089b4:	bl	4027f0 <fileno@plt>
  4089b8:	stur	w0, [x29, #-20]
  4089bc:	ldr	x8, [sp]
  4089c0:	ldr	x0, [x8, #16]
  4089c4:	bl	4027f0 <fileno@plt>
  4089c8:	str	w0, [sp, #24]
  4089cc:	ldr	w0, [sp, #24]
  4089d0:	ldur	x8, [x29, #-8]
  4089d4:	ldr	w1, [x8, #80]
  4089d8:	ldur	x8, [x29, #-8]
  4089dc:	ldr	w2, [x8, #84]
  4089e0:	bl	402d50 <fchown@plt>
  4089e4:	mov	w9, #0xffffffff            	// #-1
  4089e8:	cmp	w0, w9
  4089ec:	b.ne	408a08 <wcrtomb@plt+0x5c58>  // b.any
  4089f0:	ldr	w0, [sp, #24]
  4089f4:	ldur	x8, [x29, #-8]
  4089f8:	ldr	w2, [x8, #84]
  4089fc:	mov	w1, #0xffffffff            	// #-1
  408a00:	bl	402d50 <fchown@plt>
  408a04:	str	w0, [sp, #20]
  408a08:	ldur	x8, [x29, #-8]
  408a0c:	ldr	x0, [x8, #48]
  408a10:	ldur	w1, [x29, #-20]
  408a14:	ldur	x8, [x29, #-8]
  408a18:	ldr	x2, [x8, #40]
  408a1c:	ldr	w3, [sp, #24]
  408a20:	ldur	x8, [x29, #-8]
  408a24:	ldr	w4, [x8, #72]
  408a28:	bl	40ddec <wcrtomb@plt+0xb03c>
  408a2c:	ldur	x8, [x29, #-8]
  408a30:	ldr	x8, [x8, #184]
  408a34:	mov	x0, x8
  408a38:	bl	40d590 <wcrtomb@plt+0xa7e0>
  408a3c:	ldr	x8, [sp]
  408a40:	ldr	x0, [x8, #16]
  408a44:	bl	40d590 <wcrtomb@plt+0xa7e0>
  408a48:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408a4c:	add	x8, x8, #0x760
  408a50:	ldr	x0, [x8]
  408a54:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  408a58:	add	x1, x1, #0xfc6
  408a5c:	bl	402b10 <strcmp@plt>
  408a60:	cbz	w0, 408a8c <wcrtomb@plt+0x5cdc>
  408a64:	ldur	x0, [x29, #-16]
  408a68:	bl	40b294 <wcrtomb@plt+0x84e4>
  408a6c:	str	x0, [sp, #8]
  408a70:	ldur	x0, [x29, #-16]
  408a74:	ldr	x1, [sp, #8]
  408a78:	ldur	x8, [x29, #-8]
  408a7c:	ldr	x2, [x8, #40]
  408a80:	bl	40da20 <wcrtomb@plt+0xac70>
  408a84:	ldr	x0, [sp, #8]
  408a88:	bl	402b40 <free@plt>
  408a8c:	ldur	x8, [x29, #-8]
  408a90:	ldr	x0, [x8, #40]
  408a94:	ldur	x1, [x29, #-16]
  408a98:	ldur	x8, [x29, #-8]
  408a9c:	ldr	x2, [x8, #40]
  408aa0:	bl	40da20 <wcrtomb@plt+0xac70>
  408aa4:	bl	40c114 <wcrtomb@plt+0x9364>
  408aa8:	ldur	x8, [x29, #-8]
  408aac:	ldr	x0, [x8, #40]
  408ab0:	bl	402b40 <free@plt>
  408ab4:	b	408ac4 <wcrtomb@plt+0x5d14>
  408ab8:	ldur	x8, [x29, #-8]
  408abc:	ldr	x0, [x8, #184]
  408ac0:	bl	40d590 <wcrtomb@plt+0xa7e0>
  408ac4:	ldur	x8, [x29, #-8]
  408ac8:	mov	x9, xzr
  408acc:	str	x9, [x8, #184]
  408ad0:	ldp	x29, x30, [sp, #48]
  408ad4:	add	sp, sp, #0x40
  408ad8:	ret
  408adc:	stp	x29, x30, [sp, #-32]!
  408ae0:	str	x28, [sp, #16]
  408ae4:	mov	x29, sp
  408ae8:	sub	sp, sp, #0x2, lsl #12
  408aec:	sub	sp, sp, #0x30
  408af0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408af4:	add	x8, x8, #0x6c8
  408af8:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408afc:	add	x9, x9, #0x6b8
  408b00:	mov	x0, x8
  408b04:	str	x8, [sp, #16]
  408b08:	str	x9, [sp, #8]
  408b0c:	bl	408fe0 <wcrtomb@plt+0x6230>
  408b10:	ldr	x8, [sp, #8]
  408b14:	ldr	x9, [x8]
  408b18:	stur	x9, [x29, #-8]
  408b1c:	ldur	x8, [x29, #-8]
  408b20:	cbz	x8, 408be0 <wcrtomb@plt+0x5e30>
  408b24:	ldur	x8, [x29, #-8]
  408b28:	ldr	x8, [x8, #8]
  408b2c:	cbz	x8, 408b50 <wcrtomb@plt+0x5da0>
  408b30:	ldur	x8, [x29, #-8]
  408b34:	ldr	x0, [x8, #8]
  408b38:	ldur	x8, [x29, #-8]
  408b3c:	ldr	x2, [x8, #16]
  408b40:	ldr	x8, [sp, #16]
  408b44:	ldr	x3, [x8, #16]
  408b48:	mov	x1, #0x1                   	// #1
  408b4c:	bl	40d1f0 <wcrtomb@plt+0xa440>
  408b50:	ldur	x8, [x29, #-8]
  408b54:	ldr	x8, [x8]
  408b58:	cbz	x8, 408bd0 <wcrtomb@plt+0x5e20>
  408b5c:	ldur	x8, [x29, #-8]
  408b60:	ldr	x0, [x8]
  408b64:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408b68:	add	x8, x8, #0x470
  408b6c:	ldr	x1, [x8]
  408b70:	mov	w9, wzr
  408b74:	mov	w2, w9
  408b78:	bl	40ceac <wcrtomb@plt+0xa0fc>
  408b7c:	str	x0, [sp, #24]
  408b80:	ldr	x8, [sp, #24]
  408b84:	cbz	x8, 408bd0 <wcrtomb@plt+0x5e20>
  408b88:	ldr	x3, [sp, #24]
  408b8c:	add	x0, sp, #0x28
  408b90:	mov	x1, #0x1                   	// #1
  408b94:	mov	x2, #0x2000                	// #8192
  408b98:	bl	40d388 <wcrtomb@plt+0xa5d8>
  408b9c:	str	x0, [sp, #32]
  408ba0:	cmp	x0, #0x0
  408ba4:	cset	w8, ls  // ls = plast
  408ba8:	tbnz	w8, #0, 408bc8 <wcrtomb@plt+0x5e18>
  408bac:	ldr	x2, [sp, #32]
  408bb0:	ldr	x8, [sp, #16]
  408bb4:	ldr	x3, [x8, #16]
  408bb8:	add	x0, sp, #0x28
  408bbc:	mov	x1, #0x1                   	// #1
  408bc0:	bl	40d1f0 <wcrtomb@plt+0xa440>
  408bc4:	b	408b88 <wcrtomb@plt+0x5dd8>
  408bc8:	ldr	x0, [sp, #24]
  408bcc:	bl	40d590 <wcrtomb@plt+0xa7e0>
  408bd0:	ldur	x8, [x29, #-8]
  408bd4:	ldr	x8, [x8, #24]
  408bd8:	stur	x8, [x29, #-8]
  408bdc:	b	408b1c <wcrtomb@plt+0x5d6c>
  408be0:	ldr	x8, [sp, #16]
  408be4:	ldr	x0, [x8, #16]
  408be8:	bl	409038 <wcrtomb@plt+0x6288>
  408bec:	bl	409070 <wcrtomb@plt+0x62c0>
  408bf0:	add	sp, sp, #0x2, lsl #12
  408bf4:	add	sp, sp, #0x30
  408bf8:	ldr	x28, [sp, #16]
  408bfc:	ldp	x29, x30, [sp], #32
  408c00:	ret
  408c04:	sub	sp, sp, #0x20
  408c08:	str	x0, [sp, #24]
  408c0c:	ldr	x8, [sp, #24]
  408c10:	ldr	x8, [x8]
  408c14:	str	x8, [sp, #16]
  408c18:	ldr	x8, [sp, #24]
  408c1c:	ldr	x8, [x8, #16]
  408c20:	str	w8, [sp, #12]
  408c24:	ldr	w8, [sp, #12]
  408c28:	subs	w9, w8, #0x1
  408c2c:	str	w9, [sp, #12]
  408c30:	cbz	w8, 408c8c <wcrtomb@plt+0x5edc>
  408c34:	ldr	x8, [sp, #16]
  408c38:	ldr	x8, [x8]
  408c3c:	cbz	x8, 408c74 <wcrtomb@plt+0x5ec4>
  408c40:	ldr	x8, [sp, #16]
  408c44:	ldr	x8, [x8]
  408c48:	ldr	w9, [x8]
  408c4c:	cmp	w9, #0x2
  408c50:	b.ne	408c74 <wcrtomb@plt+0x5ec4>  // b.any
  408c54:	ldr	x8, [sp, #16]
  408c58:	ldr	x8, [x8]
  408c5c:	ldr	x8, [x8, #8]
  408c60:	cbnz	x8, 408c74 <wcrtomb@plt+0x5ec4>
  408c64:	ldr	x8, [sp, #16]
  408c68:	mov	w9, #0x1                   	// #1
  408c6c:	str	w9, [x8, #16]
  408c70:	b	408c7c <wcrtomb@plt+0x5ecc>
  408c74:	ldr	x8, [sp, #16]
  408c78:	str	wzr, [x8, #16]
  408c7c:	ldr	x8, [sp, #16]
  408c80:	add	x8, x8, #0x28
  408c84:	str	x8, [sp, #16]
  408c88:	b	408c24 <wcrtomb@plt+0x5e74>
  408c8c:	add	sp, sp, #0x20
  408c90:	ret
  408c94:	sub	sp, sp, #0x90
  408c98:	stp	x29, x30, [sp, #128]
  408c9c:	add	x29, sp, #0x80
  408ca0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408ca4:	add	x8, x8, #0x688
  408ca8:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408cac:	add	x9, x9, #0x6c8
  408cb0:	stur	x0, [x29, #-8]
  408cb4:	stur	x1, [x29, #-16]
  408cb8:	str	xzr, [x8, #16]
  408cbc:	ldur	x8, [x29, #-8]
  408cc0:	ldur	x10, [x29, #-16]
  408cc4:	str	x8, [x10, #48]
  408cc8:	ldur	x8, [x29, #-8]
  408ccc:	ldrb	w11, [x8]
  408cd0:	cmp	w11, #0x2d
  408cd4:	str	x9, [sp, #56]
  408cd8:	b.ne	408d20 <wcrtomb@plt+0x5f70>  // b.any
  408cdc:	ldur	x8, [x29, #-8]
  408ce0:	ldrb	w9, [x8, #1]
  408ce4:	cbnz	w9, 408d20 <wcrtomb@plt+0x5f70>
  408ce8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408cec:	add	x8, x8, #0x760
  408cf0:	ldr	x8, [x8]
  408cf4:	cbnz	x8, 408d20 <wcrtomb@plt+0x5f70>
  408cf8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408cfc:	add	x8, x8, #0x520
  408d00:	ldr	x0, [x8]
  408d04:	str	x8, [sp, #48]
  408d08:	bl	402be0 <clearerr_unlocked@plt>
  408d0c:	ldr	x8, [sp, #48]
  408d10:	ldr	x9, [x8]
  408d14:	ldur	x10, [x29, #-16]
  408d18:	str	x9, [x10, #184]
  408d1c:	b	408de8 <wcrtomb@plt+0x6038>
  408d20:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408d24:	add	x8, x8, #0x757
  408d28:	ldrb	w9, [x8]
  408d2c:	tbnz	w9, #0, 408d34 <wcrtomb@plt+0x5f84>
  408d30:	b	408d44 <wcrtomb@plt+0x5f94>
  408d34:	ldur	x0, [x29, #-8]
  408d38:	bl	40d6d8 <wcrtomb@plt+0xa928>
  408d3c:	ldur	x8, [x29, #-16]
  408d40:	str	x0, [x8, #48]
  408d44:	ldur	x0, [x29, #-8]
  408d48:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408d4c:	add	x8, x8, #0x470
  408d50:	ldr	x1, [x8]
  408d54:	mov	w9, wzr
  408d58:	mov	w2, w9
  408d5c:	bl	40ceac <wcrtomb@plt+0xa0fc>
  408d60:	ldur	x8, [x29, #-16]
  408d64:	str	x0, [x8, #184]
  408d68:	cbnz	x0, 408de8 <wcrtomb@plt+0x6038>
  408d6c:	bl	402d00 <__errno_location@plt>
  408d70:	ldr	w0, [x0]
  408d74:	bl	402a30 <strerror@plt>
  408d78:	stur	x0, [x29, #-24]
  408d7c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408d80:	add	x8, x8, #0x500
  408d84:	ldr	x0, [x8]
  408d88:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  408d8c:	add	x8, x8, #0xe43
  408d90:	str	x0, [sp, #40]
  408d94:	mov	x0, x8
  408d98:	bl	402d40 <gettext@plt>
  408d9c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408da0:	add	x8, x8, #0x798
  408da4:	ldr	x2, [x8]
  408da8:	ldur	x3, [x29, #-8]
  408dac:	ldur	x4, [x29, #-24]
  408db0:	ldr	x8, [sp, #40]
  408db4:	str	x0, [sp, #32]
  408db8:	mov	x0, x8
  408dbc:	ldr	x1, [sp, #32]
  408dc0:	bl	402d70 <fprintf@plt>
  408dc4:	ldur	x8, [x29, #-16]
  408dc8:	adrp	x9, 407000 <wcrtomb@plt+0x4250>
  408dcc:	add	x9, x9, #0xa68
  408dd0:	str	x9, [x8, #32]
  408dd4:	ldur	x8, [x29, #-16]
  408dd8:	ldr	x9, [x8, #8]
  408ddc:	add	x9, x9, #0x1
  408de0:	str	x9, [x8, #8]
  408de4:	b	408fd4 <wcrtomb@plt+0x6224>
  408de8:	ldur	x8, [x29, #-16]
  408dec:	adrp	x9, 409000 <wcrtomb@plt+0x6250>
  408df0:	add	x9, x9, #0xf8
  408df4:	str	x9, [x8, #32]
  408df8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408dfc:	add	x8, x8, #0x760
  408e00:	ldr	x8, [x8]
  408e04:	cbz	x8, 408f84 <wcrtomb@plt+0x61d4>
  408e08:	stur	wzr, [x29, #-60]
  408e0c:	stur	xzr, [x29, #-56]
  408e10:	ldur	x8, [x29, #-16]
  408e14:	ldr	x0, [x8, #48]
  408e18:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  408e1c:	stur	x0, [x29, #-40]
  408e20:	ldur	x0, [x29, #-40]
  408e24:	mov	w1, #0x2f                  	// #47
  408e28:	bl	402a40 <strrchr@plt>
  408e2c:	stur	x0, [x29, #-48]
  408e30:	cbz	x0, 408e44 <wcrtomb@plt+0x6094>
  408e34:	ldur	x8, [x29, #-48]
  408e38:	mov	w9, #0x0                   	// #0
  408e3c:	strb	w9, [x8]
  408e40:	b	408e54 <wcrtomb@plt+0x60a4>
  408e44:	ldur	x0, [x29, #-40]
  408e48:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  408e4c:	add	x1, x1, #0x20f
  408e50:	bl	402bd0 <strcpy@plt>
  408e54:	ldur	x8, [x29, #-16]
  408e58:	ldr	x0, [x8, #184]
  408e5c:	bl	4027f0 <fileno@plt>
  408e60:	bl	402c10 <isatty@plt>
  408e64:	cbz	w0, 408e80 <wcrtomb@plt+0x60d0>
  408e68:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  408e6c:	add	x0, x0, #0xe5a
  408e70:	bl	402d40 <gettext@plt>
  408e74:	ldur	x8, [x29, #-16]
  408e78:	ldr	x1, [x8, #48]
  408e7c:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  408e80:	ldur	x8, [x29, #-16]
  408e84:	ldr	x0, [x8, #184]
  408e88:	bl	4027f0 <fileno@plt>
  408e8c:	stur	w0, [x29, #-28]
  408e90:	ldur	w0, [x29, #-28]
  408e94:	ldur	x8, [x29, #-16]
  408e98:	add	x1, x8, #0x38
  408e9c:	bl	436f30 <_obstack_memory_used@@Base+0x18d94>
  408ea0:	ldur	x8, [x29, #-16]
  408ea4:	ldr	w9, [x8, #72]
  408ea8:	and	w9, w9, #0xf000
  408eac:	cmp	w9, #0x8, lsl #12
  408eb0:	b.eq	408ecc <wcrtomb@plt+0x611c>  // b.none
  408eb4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  408eb8:	add	x0, x0, #0xe7a
  408ebc:	bl	402d40 <gettext@plt>
  408ec0:	ldur	x8, [x29, #-16]
  408ec4:	ldr	x1, [x8, #48]
  408ec8:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  408ecc:	ldur	x8, [x29, #-16]
  408ed0:	add	x0, x8, #0x28
  408ed4:	ldur	x1, [x29, #-40]
  408ed8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408edc:	add	x8, x8, #0x478
  408ee0:	ldr	x3, [x8]
  408ee4:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x19e64>
  408ee8:	add	x2, x2, #0x18f
  408eec:	bl	40d0c4 <wcrtomb@plt+0xa314>
  408ef0:	ldr	x8, [sp, #56]
  408ef4:	str	x0, [x8, #16]
  408ef8:	ldur	x9, [x29, #-16]
  408efc:	ldr	x0, [x9, #40]
  408f00:	bl	40c0f4 <wcrtomb@plt+0x9344>
  408f04:	mov	w10, #0x0                   	// #0
  408f08:	ldr	x8, [sp, #56]
  408f0c:	strb	w10, [x8, #8]
  408f10:	ldur	x0, [x29, #-40]
  408f14:	bl	402b40 <free@plt>
  408f18:	ldur	w10, [x29, #-60]
  408f1c:	cbz	w10, 408f34 <wcrtomb@plt+0x6184>
  408f20:	ldur	x0, [x29, #-56]
  408f24:	bl	41caec <wcrtomb@plt+0x19d3c>
  408f28:	ldur	x8, [x29, #-56]
  408f2c:	mov	x0, x8
  408f30:	bl	41caa0 <wcrtomb@plt+0x19cf0>
  408f34:	ldr	x8, [sp, #56]
  408f38:	ldr	x9, [x8, #16]
  408f3c:	cbnz	x9, 408f80 <wcrtomb@plt+0x61d0>
  408f40:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  408f44:	add	x0, x0, #0xe9f
  408f48:	bl	402d40 <gettext@plt>
  408f4c:	ldur	x8, [x29, #-16]
  408f50:	ldr	x1, [x8, #40]
  408f54:	str	x0, [sp, #24]
  408f58:	str	x1, [sp, #16]
  408f5c:	bl	402d00 <__errno_location@plt>
  408f60:	ldr	w0, [x0]
  408f64:	bl	402a30 <strerror@plt>
  408f68:	ldr	x1, [sp, #24]
  408f6c:	str	x0, [sp, #8]
  408f70:	mov	x0, x1
  408f74:	ldr	x1, [sp, #16]
  408f78:	ldr	x2, [sp, #8]
  408f7c:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  408f80:	b	408fd4 <wcrtomb@plt+0x6224>
  408f84:	ldur	x8, [x29, #-16]
  408f88:	ldr	x8, [x8, #184]
  408f8c:	cbz	x8, 408fc0 <wcrtomb@plt+0x6210>
  408f90:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408f94:	add	x8, x8, #0x754
  408f98:	ldrb	w9, [x8]
  408f9c:	tbnz	w9, #0, 408fa4 <wcrtomb@plt+0x61f4>
  408fa0:	b	408fc0 <wcrtomb@plt+0x6210>
  408fa4:	ldur	x8, [x29, #-16]
  408fa8:	ldr	x0, [x8, #184]
  408fac:	mov	x8, xzr
  408fb0:	mov	x1, x8
  408fb4:	mov	w2, #0x2                   	// #2
  408fb8:	mov	x3, x8
  408fbc:	bl	4027c0 <setvbuf@plt>
  408fc0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  408fc4:	add	x8, x8, #0x518
  408fc8:	ldr	x8, [x8]
  408fcc:	ldr	x9, [sp, #56]
  408fd0:	str	x8, [x9, #16]
  408fd4:	ldp	x29, x30, [sp, #128]
  408fd8:	add	sp, sp, #0x90
  408fdc:	ret
  408fe0:	sub	sp, sp, #0x20
  408fe4:	stp	x29, x30, [sp, #16]
  408fe8:	add	x29, sp, #0x10
  408fec:	str	x0, [sp, #8]
  408ff0:	ldr	x8, [sp, #8]
  408ff4:	ldrb	w9, [x8, #8]
  408ff8:	tbnz	w9, #0, 409000 <wcrtomb@plt+0x6250>
  408ffc:	b	40902c <wcrtomb@plt+0x627c>
  409000:	ldr	x8, [sp, #8]
  409004:	ldr	x3, [x8, #16]
  409008:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40900c:	add	x0, x0, #0x468
  409010:	mov	x8, #0x1                   	// #1
  409014:	mov	x1, x8
  409018:	mov	x2, x8
  40901c:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409020:	ldr	x8, [sp, #8]
  409024:	mov	w9, #0x0                   	// #0
  409028:	strb	w9, [x8, #8]
  40902c:	ldp	x29, x30, [sp, #16]
  409030:	add	sp, sp, #0x20
  409034:	ret
  409038:	sub	sp, sp, #0x20
  40903c:	stp	x29, x30, [sp, #16]
  409040:	add	x29, sp, #0x10
  409044:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409048:	add	x8, x8, #0x754
  40904c:	str	x0, [sp, #8]
  409050:	ldrb	w9, [x8]
  409054:	tbnz	w9, #0, 40905c <wcrtomb@plt+0x62ac>
  409058:	b	409064 <wcrtomb@plt+0x62b4>
  40905c:	ldr	x0, [sp, #8]
  409060:	bl	40d504 <wcrtomb@plt+0xa754>
  409064:	ldp	x29, x30, [sp, #16]
  409068:	add	sp, sp, #0x20
  40906c:	ret
  409070:	sub	sp, sp, #0x20
  409074:	stp	x29, x30, [sp, #16]
  409078:	add	x29, sp, #0x10
  40907c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409080:	add	x8, x8, #0x6b8
  409084:	ldr	x8, [x8]
  409088:	str	x8, [sp, #8]
  40908c:	ldr	x8, [sp, #8]
  409090:	cbz	x8, 4090d0 <wcrtomb@plt+0x6320>
  409094:	ldr	x8, [sp, #8]
  409098:	ldrb	w9, [x8, #32]
  40909c:	tbnz	w9, #0, 4090a4 <wcrtomb@plt+0x62f4>
  4090a0:	b	4090b0 <wcrtomb@plt+0x6300>
  4090a4:	ldr	x8, [sp, #8]
  4090a8:	ldr	x0, [x8, #8]
  4090ac:	bl	402b40 <free@plt>
  4090b0:	ldr	x8, [sp, #8]
  4090b4:	ldr	x8, [x8, #24]
  4090b8:	str	x8, [sp]
  4090bc:	ldr	x0, [sp, #8]
  4090c0:	bl	402b40 <free@plt>
  4090c4:	ldr	x8, [sp]
  4090c8:	str	x8, [sp, #8]
  4090cc:	b	40908c <wcrtomb@plt+0x62dc>
  4090d0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4090d4:	add	x8, x8, #0x6e8
  4090d8:	mov	x9, xzr
  4090dc:	str	x9, [x8]
  4090e0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4090e4:	add	x8, x8, #0x6b8
  4090e8:	str	x9, [x8]
  4090ec:	ldp	x29, x30, [sp, #16]
  4090f0:	add	sp, sp, #0x20
  4090f4:	ret
  4090f8:	sub	sp, sp, #0x40
  4090fc:	stp	x29, x30, [sp, #48]
  409100:	add	x29, sp, #0x30
  409104:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409108:	add	x8, x8, #0x468
  40910c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409110:	add	x9, x9, #0x6f0
  409114:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409118:	add	x1, x1, #0x6f8
  40911c:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409120:	add	x10, x10, #0x628
  409124:	stur	x0, [x29, #-16]
  409128:	ldrb	w2, [x8]
  40912c:	ldur	x8, [x29, #-16]
  409130:	ldr	x3, [x8, #184]
  409134:	mov	x0, x9
  409138:	str	x9, [sp, #16]
  40913c:	str	x10, [sp, #8]
  409140:	bl	40d438 <wcrtomb@plt+0xa688>
  409144:	str	x0, [sp, #24]
  409148:	ldr	x8, [sp, #24]
  40914c:	cmp	x8, #0x0
  409150:	cset	w11, gt
  409154:	tbnz	w11, #0, 409168 <wcrtomb@plt+0x63b8>
  409158:	mov	w8, wzr
  40915c:	and	w8, w8, #0x1
  409160:	sturb	w8, [x29, #-1]
  409164:	b	4091d0 <wcrtomb@plt+0x6420>
  409168:	ldr	x8, [sp, #16]
  40916c:	ldr	x9, [x8]
  409170:	ldr	x10, [sp, #24]
  409174:	subs	x10, x10, #0x1
  409178:	ldrb	w11, [x9, x10]
  40917c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409180:	add	x9, x9, #0x468
  409184:	ldrb	w12, [x9]
  409188:	cmp	w11, w12
  40918c:	b.ne	4091a0 <wcrtomb@plt+0x63f0>  // b.any
  409190:	ldr	x8, [sp, #24]
  409194:	subs	x8, x8, #0x1
  409198:	str	x8, [sp, #24]
  40919c:	b	4091ac <wcrtomb@plt+0x63fc>
  4091a0:	mov	w8, #0x0                   	// #0
  4091a4:	ldr	x9, [sp, #8]
  4091a8:	strb	w8, [x9, #32]
  4091ac:	ldr	x8, [sp, #16]
  4091b0:	ldr	x1, [x8]
  4091b4:	ldr	x2, [sp, #24]
  4091b8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4091bc:	add	x0, x0, #0x628
  4091c0:	bl	4091e4 <wcrtomb@plt+0x6434>
  4091c4:	mov	w9, #0x1                   	// #1
  4091c8:	and	w9, w9, #0x1
  4091cc:	sturb	w9, [x29, #-1]
  4091d0:	ldurb	w8, [x29, #-1]
  4091d4:	and	w0, w8, #0x1
  4091d8:	ldp	x29, x30, [sp, #48]
  4091dc:	add	sp, sp, #0x40
  4091e0:	ret
  4091e4:	sub	sp, sp, #0x40
  4091e8:	stp	x29, x30, [sp, #48]
  4091ec:	add	x29, sp, #0x30
  4091f0:	stur	x0, [x29, #-8]
  4091f4:	stur	x1, [x29, #-16]
  4091f8:	str	x2, [sp, #24]
  4091fc:	ldur	x8, [x29, #-8]
  409200:	ldr	x8, [x8, #16]
  409204:	ldr	x9, [sp, #24]
  409208:	add	x8, x8, x9
  40920c:	str	x8, [sp, #16]
  409210:	ldur	x8, [x29, #-8]
  409214:	ldr	x8, [x8, #24]
  409218:	ldr	x9, [sp, #16]
  40921c:	cmp	x8, x9
  409220:	b.cs	409230 <wcrtomb@plt+0x6480>  // b.hs, b.nlast
  409224:	ldur	x0, [x29, #-8]
  409228:	ldr	x1, [sp, #16]
  40922c:	bl	40933c <wcrtomb@plt+0x658c>
  409230:	ldur	x8, [x29, #-8]
  409234:	ldr	x8, [x8, #8]
  409238:	ldur	x9, [x29, #-8]
  40923c:	ldr	x9, [x9, #16]
  409240:	add	x0, x8, x9
  409244:	ldur	x1, [x29, #-16]
  409248:	ldr	x2, [sp, #24]
  40924c:	bl	4026a0 <memcpy@plt>
  409250:	ldr	x8, [sp, #16]
  409254:	ldur	x9, [x29, #-8]
  409258:	str	x8, [x9, #16]
  40925c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409260:	add	x8, x8, #0x8dc
  409264:	ldr	w10, [x8]
  409268:	cmp	w10, #0x1
  40926c:	b.le	409330 <wcrtomb@plt+0x6580>
  409270:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409274:	add	x8, x8, #0x8d8
  409278:	ldrb	w9, [x8]
  40927c:	tbnz	w9, #0, 409330 <wcrtomb@plt+0x6580>
  409280:	ldr	x8, [sp, #24]
  409284:	cbz	x8, 409330 <wcrtomb@plt+0x6580>
  409288:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40928c:	add	x8, x8, #0x8dc
  409290:	ldr	w9, [x8]
  409294:	cmp	w9, #0x1
  409298:	b.ne	4092a8 <wcrtomb@plt+0x64f8>  // b.any
  40929c:	mov	x8, #0x1                   	// #1
  4092a0:	str	x8, [sp]
  4092a4:	b	4092c8 <wcrtomb@plt+0x6518>
  4092a8:	ldur	x1, [x29, #-16]
  4092ac:	ldr	x2, [sp, #24]
  4092b0:	ldur	x8, [x29, #-8]
  4092b4:	add	x3, x8, #0x24
  4092b8:	mov	x8, xzr
  4092bc:	mov	x0, x8
  4092c0:	bl	41da58 <wcrtomb@plt+0x1aca8>
  4092c4:	str	x0, [sp]
  4092c8:	ldr	x8, [sp]
  4092cc:	str	x8, [sp, #8]
  4092d0:	ldr	x8, [sp, #8]
  4092d4:	mov	x9, #0xffffffffffffffff    	// #-1
  4092d8:	cmp	x8, x9
  4092dc:	b.eq	4092f0 <wcrtomb@plt+0x6540>  // b.none
  4092e0:	ldr	x8, [sp, #8]
  4092e4:	mov	x9, #0xfffffffffffffffe    	// #-2
  4092e8:	cmp	x8, x9
  4092ec:	b.ne	409300 <wcrtomb@plt+0x6550>  // b.any
  4092f0:	ldur	x8, [x29, #-8]
  4092f4:	stur	xzr, [x8, #36]
  4092f8:	mov	x8, #0x1                   	// #1
  4092fc:	str	x8, [sp, #8]
  409300:	ldr	x8, [sp, #8]
  409304:	cbnz	x8, 40930c <wcrtomb@plt+0x655c>
  409308:	b	409330 <wcrtomb@plt+0x6580>
  40930c:	ldr	x8, [sp, #8]
  409310:	ldur	x9, [x29, #-16]
  409314:	add	x8, x9, x8
  409318:	stur	x8, [x29, #-16]
  40931c:	ldr	x8, [sp, #8]
  409320:	ldr	x9, [sp, #24]
  409324:	subs	x8, x9, x8
  409328:	str	x8, [sp, #24]
  40932c:	b	409280 <wcrtomb@plt+0x64d0>
  409330:	ldp	x29, x30, [sp, #48]
  409334:	add	sp, sp, #0x40
  409338:	ret
  40933c:	sub	sp, sp, #0x30
  409340:	stp	x29, x30, [sp, #32]
  409344:	add	x29, sp, #0x20
  409348:	mov	x8, #0x2                   	// #2
  40934c:	stur	x0, [x29, #-8]
  409350:	str	x1, [sp, #16]
  409354:	ldur	x9, [x29, #-8]
  409358:	ldr	x9, [x9, #8]
  40935c:	ldur	x10, [x29, #-8]
  409360:	ldr	x10, [x10]
  409364:	subs	x9, x9, x10
  409368:	str	w9, [sp, #12]
  40936c:	ldrsw	x10, [sp, #12]
  409370:	ldur	x11, [x29, #-8]
  409374:	ldr	x11, [x11, #24]
  409378:	mul	x8, x11, x8
  40937c:	cmp	x10, x8
  409380:	b.ls	4093f0 <wcrtomb@plt+0x6640>  // b.plast
  409384:	ldur	x8, [x29, #-8]
  409388:	ldr	x0, [x8]
  40938c:	ldur	x8, [x29, #-8]
  409390:	ldr	x1, [x8, #8]
  409394:	ldur	x8, [x29, #-8]
  409398:	ldr	x2, [x8, #16]
  40939c:	bl	4026b0 <memmove@plt>
  4093a0:	ldur	x8, [x29, #-8]
  4093a4:	ldr	x8, [x8, #8]
  4093a8:	ldur	x9, [x29, #-8]
  4093ac:	ldr	x9, [x9]
  4093b0:	subs	x8, x8, x9
  4093b4:	ldur	x9, [x29, #-8]
  4093b8:	ldr	x10, [x9, #24]
  4093bc:	add	x8, x10, x8
  4093c0:	str	x8, [x9, #24]
  4093c4:	ldur	x8, [x29, #-8]
  4093c8:	ldr	x8, [x8]
  4093cc:	ldur	x9, [x29, #-8]
  4093d0:	str	x8, [x9, #8]
  4093d4:	str	wzr, [sp, #12]
  4093d8:	ldur	x8, [x29, #-8]
  4093dc:	ldr	x8, [x8, #24]
  4093e0:	ldr	x9, [sp, #16]
  4093e4:	cmp	x8, x9
  4093e8:	b.ls	4093f0 <wcrtomb@plt+0x6640>  // b.plast
  4093ec:	b	409484 <wcrtomb@plt+0x66d4>
  4093f0:	ldur	x8, [x29, #-8]
  4093f4:	ldr	x9, [x8, #24]
  4093f8:	mov	x10, #0x2                   	// #2
  4093fc:	mul	x9, x9, x10
  409400:	str	x9, [x8, #24]
  409404:	ldur	x8, [x29, #-8]
  409408:	ldr	x8, [x8, #24]
  40940c:	ldr	x9, [sp, #16]
  409410:	cmp	x8, x9
  409414:	b.cs	409424 <wcrtomb@plt+0x6674>  // b.hs, b.nlast
  409418:	ldr	x8, [sp, #16]
  40941c:	ldur	x9, [x29, #-8]
  409420:	str	x8, [x9, #24]
  409424:	ldur	x8, [x29, #-8]
  409428:	ldr	x8, [x8, #24]
  40942c:	cmp	x8, #0x32
  409430:	b.cs	409440 <wcrtomb@plt+0x6690>  // b.hs, b.nlast
  409434:	ldur	x8, [x29, #-8]
  409438:	mov	x9, #0x32                  	// #50
  40943c:	str	x9, [x8, #24]
  409440:	ldur	x8, [x29, #-8]
  409444:	ldr	x0, [x8]
  409448:	ldrsw	x8, [sp, #12]
  40944c:	ldur	x9, [x29, #-8]
  409450:	ldr	x9, [x9, #24]
  409454:	add	x8, x8, x9
  409458:	mov	x2, #0x1                   	// #1
  40945c:	add	x1, x8, #0x1
  409460:	bl	41d700 <wcrtomb@plt+0x1a950>
  409464:	ldur	x8, [x29, #-8]
  409468:	str	x0, [x8]
  40946c:	ldur	x8, [x29, #-8]
  409470:	ldr	x8, [x8]
  409474:	ldrsw	x9, [sp, #12]
  409478:	add	x8, x8, x9
  40947c:	ldur	x9, [x29, #-8]
  409480:	str	x8, [x9, #8]
  409484:	ldp	x29, x30, [sp, #32]
  409488:	add	sp, sp, #0x30
  40948c:	ret
  409490:	sub	sp, sp, #0x40
  409494:	stp	x29, x30, [sp, #48]
  409498:	add	x29, sp, #0x30
  40949c:	stur	x0, [x29, #-16]
  4094a0:	str	x1, [sp, #24]
  4094a4:	ldur	x8, [x29, #-16]
  4094a8:	ldr	x8, [x8]
  4094ac:	cbnz	x8, 4094c0 <wcrtomb@plt+0x6710>
  4094b0:	mov	w8, #0x1                   	// #1
  4094b4:	and	w8, w8, #0x1
  4094b8:	sturb	w8, [x29, #-1]
  4094bc:	b	409758 <wcrtomb@plt+0x69a8>
  4094c0:	ldur	x8, [x29, #-16]
  4094c4:	ldr	w9, [x8, #16]
  4094c8:	cmp	w9, #0x1
  4094cc:	b.eq	4096c4 <wcrtomb@plt+0x6914>  // b.none
  4094d0:	ldur	x8, [x29, #-16]
  4094d4:	ldr	x8, [x8, #8]
  4094d8:	cbnz	x8, 4094f8 <wcrtomb@plt+0x6748>
  4094dc:	ldur	x8, [x29, #-16]
  4094e0:	ldr	x0, [x8]
  4094e4:	ldr	x1, [sp, #24]
  4094e8:	bl	40aa84 <wcrtomb@plt+0x7cd4>
  4094ec:	and	w9, w0, #0x1
  4094f0:	sturb	w9, [x29, #-1]
  4094f4:	b	409758 <wcrtomb@plt+0x69a8>
  4094f8:	ldur	x8, [x29, #-16]
  4094fc:	ldr	x8, [x8]
  409500:	ldr	w9, [x8]
  409504:	cmp	w9, #0x2
  409508:	b.ne	40954c <wcrtomb@plt+0x679c>  // b.any
  40950c:	ldur	x8, [x29, #-16]
  409510:	ldr	w9, [x8, #16]
  409514:	cmp	w9, #0x2
  409518:	b.eq	409538 <wcrtomb@plt+0x6788>  // b.none
  40951c:	ldr	x8, [sp, #24]
  409520:	ldr	x8, [x8, #16]
  409524:	ldur	x9, [x29, #-16]
  409528:	ldr	x9, [x9]
  40952c:	ldr	x9, [x9, #8]
  409530:	cmp	x8, x9
  409534:	b.cs	409548 <wcrtomb@plt+0x6798>  // b.hs, b.nlast
  409538:	mov	w8, wzr
  40953c:	and	w8, w8, #0x1
  409540:	sturb	w8, [x29, #-1]
  409544:	b	409758 <wcrtomb@plt+0x69a8>
  409548:	b	409570 <wcrtomb@plt+0x67c0>
  40954c:	ldur	x8, [x29, #-16]
  409550:	ldr	x0, [x8]
  409554:	ldr	x1, [sp, #24]
  409558:	bl	40aa84 <wcrtomb@plt+0x7cd4>
  40955c:	tbnz	w0, #0, 409570 <wcrtomb@plt+0x67c0>
  409560:	mov	w8, wzr
  409564:	and	w8, w8, #0x1
  409568:	sturb	w8, [x29, #-1]
  40956c:	b	409758 <wcrtomb@plt+0x69a8>
  409570:	ldur	x8, [x29, #-16]
  409574:	mov	w9, #0x1                   	// #1
  409578:	str	w9, [x8, #16]
  40957c:	ldur	x8, [x29, #-16]
  409580:	ldr	x8, [x8, #8]
  409584:	ldr	w9, [x8]
  409588:	subs	w9, w9, #0x1
  40958c:	mov	w8, w9
  409590:	ubfx	x8, x8, #0, #32
  409594:	cmp	x8, #0x4
  409598:	str	x8, [sp, #16]
  40959c:	b.hi	4096c4 <wcrtomb@plt+0x6914>  // b.pmore
  4095a0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  4095a4:	add	x8, x8, #0xde8
  4095a8:	ldr	x11, [sp, #16]
  4095ac:	ldrsw	x10, [x8, x11, lsl #2]
  4095b0:	add	x9, x8, x10
  4095b4:	br	x9
  4095b8:	mov	w8, #0x1                   	// #1
  4095bc:	and	w8, w8, #0x1
  4095c0:	sturb	w8, [x29, #-1]
  4095c4:	b	409758 <wcrtomb@plt+0x69a8>
  4095c8:	ldr	x8, [sp, #24]
  4095cc:	ldr	x8, [x8, #16]
  4095d0:	ldur	x9, [x29, #-16]
  4095d4:	ldr	x9, [x9, #8]
  4095d8:	ldr	x9, [x9, #8]
  4095dc:	cmp	x8, x9
  4095e0:	b.cc	4095f0 <wcrtomb@plt+0x6840>  // b.lo, b.ul, b.last
  4095e4:	ldur	x8, [x29, #-16]
  4095e8:	mov	w9, #0x2                   	// #2
  4095ec:	str	w9, [x8, #16]
  4095f0:	ldr	x8, [sp, #24]
  4095f4:	ldr	x8, [x8, #16]
  4095f8:	ldur	x9, [x29, #-16]
  4095fc:	ldr	x9, [x9, #8]
  409600:	ldr	x9, [x9, #8]
  409604:	mov	w10, #0x1                   	// #1
  409608:	cmp	x8, x9
  40960c:	str	w10, [sp, #12]
  409610:	b.ls	409628 <wcrtomb@plt+0x6878>  // b.plast
  409614:	ldur	x8, [x29, #-16]
  409618:	ldr	x0, [x8]
  40961c:	ldr	x1, [sp, #24]
  409620:	bl	40aa84 <wcrtomb@plt+0x7cd4>
  409624:	str	w0, [sp, #12]
  409628:	ldr	w8, [sp, #12]
  40962c:	and	w8, w8, #0x1
  409630:	sturb	w8, [x29, #-1]
  409634:	b	409758 <wcrtomb@plt+0x69a8>
  409638:	ldr	x8, [sp, #24]
  40963c:	ldr	x8, [x8, #16]
  409640:	ldur	x9, [x29, #-16]
  409644:	ldr	x9, [x9, #8]
  409648:	ldr	x9, [x9, #16]
  40964c:	add	x8, x8, x9
  409650:	ldur	x9, [x29, #-16]
  409654:	ldr	x9, [x9, #8]
  409658:	str	x8, [x9, #8]
  40965c:	mov	w10, #0x1                   	// #1
  409660:	and	w10, w10, #0x1
  409664:	sturb	w10, [x29, #-1]
  409668:	b	409758 <wcrtomb@plt+0x69a8>
  40966c:	ldr	x8, [sp, #24]
  409670:	ldr	x8, [x8, #16]
  409674:	ldur	x9, [x29, #-16]
  409678:	ldr	x9, [x9, #8]
  40967c:	ldr	x9, [x9, #16]
  409680:	add	x8, x8, x9
  409684:	ldr	x9, [sp, #24]
  409688:	ldr	x9, [x9, #16]
  40968c:	ldur	x10, [x29, #-16]
  409690:	ldr	x10, [x10, #8]
  409694:	ldr	x10, [x10, #16]
  409698:	udiv	x11, x9, x10
  40969c:	mul	x10, x11, x10
  4096a0:	subs	x9, x9, x10
  4096a4:	subs	x8, x8, x9
  4096a8:	ldur	x9, [x29, #-16]
  4096ac:	ldr	x9, [x9, #8]
  4096b0:	str	x8, [x9, #8]
  4096b4:	mov	w12, #0x1                   	// #1
  4096b8:	and	w12, w12, #0x1
  4096bc:	sturb	w12, [x29, #-1]
  4096c0:	b	409758 <wcrtomb@plt+0x69a8>
  4096c4:	ldur	x8, [x29, #-16]
  4096c8:	ldr	x8, [x8, #8]
  4096cc:	ldr	w9, [x8]
  4096d0:	cmp	w9, #0x2
  4096d4:	b.ne	409728 <wcrtomb@plt+0x6978>  // b.any
  4096d8:	ldr	x8, [sp, #24]
  4096dc:	ldr	x8, [x8, #16]
  4096e0:	ldur	x9, [x29, #-16]
  4096e4:	ldr	x9, [x9, #8]
  4096e8:	ldr	x9, [x9, #8]
  4096ec:	cmp	x8, x9
  4096f0:	b.cc	409700 <wcrtomb@plt+0x6950>  // b.lo, b.ul, b.last
  4096f4:	ldur	x8, [x29, #-16]
  4096f8:	mov	w9, #0x2                   	// #2
  4096fc:	str	w9, [x8, #16]
  409700:	ldr	x8, [sp, #24]
  409704:	ldr	x8, [x8, #16]
  409708:	ldur	x9, [x29, #-16]
  40970c:	ldr	x9, [x9, #8]
  409710:	ldr	x9, [x9, #8]
  409714:	cmp	x8, x9
  409718:	cset	w10, ls  // ls = plast
  40971c:	and	w10, w10, #0x1
  409720:	sturb	w10, [x29, #-1]
  409724:	b	409758 <wcrtomb@plt+0x69a8>
  409728:	ldur	x8, [x29, #-16]
  40972c:	ldr	x0, [x8, #8]
  409730:	ldr	x1, [sp, #24]
  409734:	bl	40aa84 <wcrtomb@plt+0x7cd4>
  409738:	tbnz	w0, #0, 409740 <wcrtomb@plt+0x6990>
  40973c:	b	40974c <wcrtomb@plt+0x699c>
  409740:	ldur	x8, [x29, #-16]
  409744:	mov	w9, #0x2                   	// #2
  409748:	str	w9, [x8, #16]
  40974c:	mov	w8, #0x1                   	// #1
  409750:	and	w8, w8, #0x1
  409754:	sturb	w8, [x29, #-1]
  409758:	ldurb	w8, [x29, #-1]
  40975c:	and	w0, w8, #0x1
  409760:	ldp	x29, x30, [sp, #48]
  409764:	add	sp, sp, #0x40
  409768:	ret
  40976c:	sub	sp, sp, #0x30
  409770:	stp	x29, x30, [sp, #32]
  409774:	add	x29, sp, #0x20
  409778:	mov	x0, #0x1                   	// #1
  40977c:	mov	x1, #0x28                  	// #40
  409780:	mov	x8, xzr
  409784:	mov	w9, #0x0                   	// #0
  409788:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40978c:	add	x10, x10, #0x6e8
  409790:	str	x8, [sp, #16]
  409794:	str	w9, [sp, #12]
  409798:	str	x10, [sp]
  40979c:	bl	41d930 <wcrtomb@plt+0x1ab80>
  4097a0:	stur	x0, [x29, #-8]
  4097a4:	ldur	x8, [x29, #-8]
  4097a8:	ldr	x10, [sp, #16]
  4097ac:	str	x10, [x8]
  4097b0:	ldur	x8, [x29, #-8]
  4097b4:	str	x10, [x8, #8]
  4097b8:	ldur	x8, [x29, #-8]
  4097bc:	str	xzr, [x8, #16]
  4097c0:	ldur	x8, [x29, #-8]
  4097c4:	str	x10, [x8, #24]
  4097c8:	ldur	x8, [x29, #-8]
  4097cc:	ldr	w9, [sp, #12]
  4097d0:	strb	w9, [x8, #32]
  4097d4:	ldr	x8, [sp]
  4097d8:	ldr	x11, [x8]
  4097dc:	cbz	x11, 4097f4 <wcrtomb@plt+0x6a44>
  4097e0:	ldur	x8, [x29, #-8]
  4097e4:	ldr	x9, [sp]
  4097e8:	ldr	x10, [x9]
  4097ec:	str	x8, [x10, #24]
  4097f0:	b	409804 <wcrtomb@plt+0x6a54>
  4097f4:	ldur	x8, [x29, #-8]
  4097f8:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  4097fc:	add	x9, x9, #0x6b8
  409800:	str	x8, [x9]
  409804:	ldur	x8, [x29, #-8]
  409808:	ldr	x9, [sp]
  40980c:	str	x8, [x9]
  409810:	mov	x0, x8
  409814:	ldp	x29, x30, [sp, #32]
  409818:	add	sp, sp, #0x30
  40981c:	ret
  409820:	sub	sp, sp, #0x30
  409824:	stp	x29, x30, [sp, #32]
  409828:	add	x29, sp, #0x20
  40982c:	stur	x0, [x29, #-8]
  409830:	str	x1, [sp, #16]
  409834:	str	w2, [sp, #12]
  409838:	str	x3, [sp]
  40983c:	ldur	x8, [x29, #-8]
  409840:	cbnz	x8, 409848 <wcrtomb@plt+0x6a98>
  409844:	b	4098b4 <wcrtomb@plt+0x6b04>
  409848:	ldr	x0, [sp]
  40984c:	bl	408fe0 <wcrtomb@plt+0x6230>
  409850:	ldr	x8, [sp, #16]
  409854:	cbz	x8, 409870 <wcrtomb@plt+0x6ac0>
  409858:	ldur	x0, [x29, #-8]
  40985c:	ldr	x2, [sp, #16]
  409860:	ldr	x8, [sp]
  409864:	ldr	x3, [x8, #16]
  409868:	mov	x1, #0x1                   	// #1
  40986c:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409870:	ldr	w8, [sp, #12]
  409874:	cbz	w8, 40989c <wcrtomb@plt+0x6aec>
  409878:	ldr	x8, [sp]
  40987c:	ldr	x3, [x8, #16]
  409880:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409884:	add	x0, x0, #0x468
  409888:	mov	x8, #0x1                   	// #1
  40988c:	mov	x1, x8
  409890:	mov	x2, x8
  409894:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409898:	b	4098a8 <wcrtomb@plt+0x6af8>
  40989c:	ldr	x8, [sp]
  4098a0:	mov	w9, #0x1                   	// #1
  4098a4:	strb	w9, [x8, #8]
  4098a8:	ldr	x8, [sp]
  4098ac:	ldr	x0, [x8, #16]
  4098b0:	bl	409038 <wcrtomb@plt+0x6288>
  4098b4:	ldp	x29, x30, [sp, #32]
  4098b8:	add	sp, sp, #0x30
  4098bc:	ret
  4098c0:	stp	x29, x30, [sp, #-16]!
  4098c4:	mov	x29, sp
  4098c8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  4098cc:	add	x0, x0, #0xf5a
  4098d0:	bl	402ac0 <puts@plt>
  4098d4:	ldp	x29, x30, [sp], #16
  4098d8:	ret
  4098dc:	sub	sp, sp, #0x20
  4098e0:	stp	x29, x30, [sp, #16]
  4098e4:	add	x29, sp, #0x10
  4098e8:	str	x0, [sp, #8]
  4098ec:	str	x1, [sp]
  4098f0:	ldr	x8, [sp, #8]
  4098f4:	ldr	x8, [x8, #24]
  4098f8:	cbnz	x8, 409910 <wcrtomb@plt+0x6b60>
  4098fc:	ldr	x0, [sp, #8]
  409900:	ldr	x1, [sp]
  409904:	mov	x2, #0x32                  	// #50
  409908:	bl	4079d4 <wcrtomb@plt+0x4c24>
  40990c:	b	40993c <wcrtomb@plt+0x6b8c>
  409910:	ldr	x8, [sp, #8]
  409914:	str	xzr, [x8, #16]
  409918:	ldr	x8, [sp]
  40991c:	cbz	x8, 409934 <wcrtomb@plt+0x6b84>
  409920:	ldr	x8, [sp, #8]
  409924:	ldr	x9, [sp]
  409928:	ldur	x9, [x9, #36]
  40992c:	stur	x9, [x8, #36]
  409930:	b	40993c <wcrtomb@plt+0x6b8c>
  409934:	ldr	x8, [sp, #8]
  409938:	stur	xzr, [x8, #36]
  40993c:	ldp	x29, x30, [sp, #16]
  409940:	add	sp, sp, #0x20
  409944:	ret
  409948:	sub	sp, sp, #0x80
  40994c:	stp	x29, x30, [sp, #112]
  409950:	add	x29, sp, #0x70
  409954:	stur	x0, [x29, #-8]
  409958:	stur	x1, [x29, #-16]
  40995c:	stur	w2, [x29, #-20]
  409960:	ldur	w8, [x29, #-20]
  409964:	cbz	w8, 4099ac <wcrtomb@plt+0x6bfc>
  409968:	ldur	x1, [x29, #-8]
  40996c:	add	x8, sp, #0x28
  409970:	mov	x0, x8
  409974:	mov	x9, #0x30                  	// #48
  409978:	mov	x2, x9
  40997c:	str	x8, [sp, #32]
  409980:	str	x9, [sp, #24]
  409984:	bl	4026a0 <memcpy@plt>
  409988:	ldur	x0, [x29, #-8]
  40998c:	ldur	x1, [x29, #-16]
  409990:	ldr	x2, [sp, #24]
  409994:	bl	4026a0 <memcpy@plt>
  409998:	ldur	x0, [x29, #-16]
  40999c:	ldr	x1, [sp, #32]
  4099a0:	ldr	x2, [sp, #24]
  4099a4:	bl	4026a0 <memcpy@plt>
  4099a8:	b	4099ec <wcrtomb@plt+0x6c3c>
  4099ac:	ldur	x1, [x29, #-8]
  4099b0:	add	x8, sp, #0x28
  4099b4:	mov	x0, x8
  4099b8:	mov	x9, #0x24                  	// #36
  4099bc:	mov	x2, x9
  4099c0:	str	x8, [sp, #16]
  4099c4:	str	x9, [sp, #8]
  4099c8:	bl	4026a0 <memcpy@plt>
  4099cc:	ldur	x0, [x29, #-8]
  4099d0:	ldur	x1, [x29, #-16]
  4099d4:	ldr	x2, [sp, #8]
  4099d8:	bl	4026a0 <memcpy@plt>
  4099dc:	ldur	x0, [x29, #-16]
  4099e0:	ldr	x1, [sp, #16]
  4099e4:	ldr	x2, [sp, #8]
  4099e8:	bl	4026a0 <memcpy@plt>
  4099ec:	ldp	x29, x30, [sp, #112]
  4099f0:	add	sp, sp, #0x80
  4099f4:	ret
  4099f8:	sub	sp, sp, #0x30
  4099fc:	stp	x29, x30, [sp, #32]
  409a00:	add	x29, sp, #0x20
  409a04:	stur	x0, [x29, #-8]
  409a08:	str	x1, [sp, #16]
  409a0c:	str	w2, [sp, #12]
  409a10:	ldr	x8, [sp, #16]
  409a14:	ldr	x8, [x8, #8]
  409a18:	ldr	x9, [sp, #16]
  409a1c:	ldr	x9, [x9]
  409a20:	subs	x8, x8, x9
  409a24:	ldr	x9, [sp, #16]
  409a28:	ldr	x10, [x9, #24]
  409a2c:	add	x8, x10, x8
  409a30:	str	x8, [x9, #24]
  409a34:	ldr	x8, [sp, #16]
  409a38:	ldr	x8, [x8, #24]
  409a3c:	ldur	x9, [x29, #-8]
  409a40:	ldr	x9, [x9, #16]
  409a44:	cmp	x8, x9
  409a48:	b.cs	409ac8 <wcrtomb@plt+0x6d18>  // b.hs, b.nlast
  409a4c:	ldr	x8, [sp, #16]
  409a50:	ldr	x9, [x8, #24]
  409a54:	mov	x10, #0x2                   	// #2
  409a58:	mul	x9, x9, x10
  409a5c:	str	x9, [x8, #24]
  409a60:	ldr	x8, [sp, #16]
  409a64:	ldr	x8, [x8, #24]
  409a68:	ldur	x9, [x29, #-8]
  409a6c:	ldr	x9, [x9, #16]
  409a70:	cmp	x8, x9
  409a74:	b.cs	409a88 <wcrtomb@plt+0x6cd8>  // b.hs, b.nlast
  409a78:	ldur	x8, [x29, #-8]
  409a7c:	ldr	x8, [x8, #16]
  409a80:	ldr	x9, [sp, #16]
  409a84:	str	x8, [x9, #24]
  409a88:	ldr	x8, [sp, #16]
  409a8c:	ldr	x8, [x8, #24]
  409a90:	cmp	x8, #0x32
  409a94:	b.cs	409aa4 <wcrtomb@plt+0x6cf4>  // b.hs, b.nlast
  409a98:	ldr	x8, [sp, #16]
  409a9c:	mov	x9, #0x32                  	// #50
  409aa0:	str	x9, [x8, #24]
  409aa4:	ldr	x8, [sp, #16]
  409aa8:	ldr	x0, [x8]
  409aac:	bl	402b40 <free@plt>
  409ab0:	ldr	x8, [sp, #16]
  409ab4:	ldr	x8, [x8, #24]
  409ab8:	add	x0, x8, #0x1
  409abc:	bl	41d908 <wcrtomb@plt+0x1ab58>
  409ac0:	ldr	x8, [sp, #16]
  409ac4:	str	x0, [x8]
  409ac8:	ldr	x8, [sp, #16]
  409acc:	ldr	x8, [x8]
  409ad0:	ldr	x9, [sp, #16]
  409ad4:	str	x8, [x9, #8]
  409ad8:	ldur	x8, [x29, #-8]
  409adc:	ldr	x8, [x8, #16]
  409ae0:	ldr	x9, [sp, #16]
  409ae4:	str	x8, [x9, #16]
  409ae8:	ldur	x8, [x29, #-8]
  409aec:	ldrb	w10, [x8, #32]
  409af0:	ldr	x8, [sp, #16]
  409af4:	and	w10, w10, #0x1
  409af8:	strb	w10, [x8, #32]
  409afc:	ldr	x8, [sp, #16]
  409b00:	ldr	x0, [x8, #8]
  409b04:	ldur	x8, [x29, #-8]
  409b08:	ldr	x1, [x8, #8]
  409b0c:	ldur	x8, [x29, #-8]
  409b10:	ldr	x2, [x8, #16]
  409b14:	bl	4026a0 <memcpy@plt>
  409b18:	ldr	w10, [sp, #12]
  409b1c:	cbz	w10, 409b30 <wcrtomb@plt+0x6d80>
  409b20:	ldr	x8, [sp, #16]
  409b24:	ldur	x9, [x29, #-8]
  409b28:	ldur	x9, [x9, #36]
  409b2c:	stur	x9, [x8, #36]
  409b30:	ldp	x29, x30, [sp, #32]
  409b34:	add	sp, sp, #0x30
  409b38:	ret
  409b3c:	sub	sp, sp, #0x30
  409b40:	stp	x29, x30, [sp, #32]
  409b44:	add	x29, sp, #0x20
  409b48:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409b4c:	add	x8, x8, #0x468
  409b50:	mov	x9, #0x1                   	// #1
  409b54:	stur	x0, [x29, #-8]
  409b58:	str	x1, [sp, #16]
  409b5c:	str	w2, [sp, #12]
  409b60:	ldr	x0, [sp, #16]
  409b64:	mov	x1, x8
  409b68:	mov	x2, x9
  409b6c:	bl	4091e4 <wcrtomb@plt+0x6434>
  409b70:	ldr	x0, [sp, #16]
  409b74:	ldur	x8, [x29, #-8]
  409b78:	ldr	x1, [x8, #8]
  409b7c:	ldur	x8, [x29, #-8]
  409b80:	ldr	x2, [x8, #16]
  409b84:	bl	4091e4 <wcrtomb@plt+0x6434>
  409b88:	ldur	x8, [x29, #-8]
  409b8c:	ldrb	w10, [x8, #32]
  409b90:	ldr	x8, [sp, #16]
  409b94:	and	w10, w10, #0x1
  409b98:	strb	w10, [x8, #32]
  409b9c:	ldr	w10, [sp, #12]
  409ba0:	cbz	w10, 409bb4 <wcrtomb@plt+0x6e04>
  409ba4:	ldr	x8, [sp, #16]
  409ba8:	ldur	x9, [x29, #-8]
  409bac:	ldur	x9, [x9, #36]
  409bb0:	stur	x9, [x8, #36]
  409bb4:	ldp	x29, x30, [sp, #32]
  409bb8:	add	sp, sp, #0x30
  409bbc:	ret
  409bc0:	sub	sp, sp, #0x130
  409bc4:	stp	x29, x30, [sp, #272]
  409bc8:	str	x28, [sp, #288]
  409bcc:	add	x29, sp, #0x110
  409bd0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409bd4:	add	x8, x8, #0x628
  409bd8:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409bdc:	add	x9, x9, #0x6c8
  409be0:	stur	w0, [x29, #-4]
  409be4:	ldr	x10, [x8, #8]
  409be8:	stur	x10, [x29, #-16]
  409bec:	ldr	x8, [x8, #16]
  409bf0:	stur	x8, [x29, #-24]
  409bf4:	stur	xzr, [x29, #-32]
  409bf8:	ldr	x8, [x9, #16]
  409bfc:	str	x8, [sp, #32]
  409c00:	mov	x0, x9
  409c04:	bl	408fe0 <wcrtomb@plt+0x6230>
  409c08:	ldur	x8, [x29, #-24]
  409c0c:	subs	x9, x8, #0x1
  409c10:	stur	x9, [x29, #-24]
  409c14:	cbz	x8, 409e58 <wcrtomb@plt+0x70a8>
  409c18:	add	x8, sp, #0x3c
  409c1c:	str	x8, [sp, #48]
  409c20:	ldur	x8, [x29, #-16]
  409c24:	ldrb	w9, [x8]
  409c28:	and	w9, w9, #0xffffff80
  409c2c:	cbnz	w9, 409c8c <wcrtomb@plt+0x6edc>
  409c30:	bl	402b20 <__ctype_b_loc@plt>
  409c34:	ldr	x8, [x0]
  409c38:	ldur	x9, [x29, #-16]
  409c3c:	ldrb	w10, [x9]
  409c40:	ldrh	w10, [x8, w10, sxtw #1]
  409c44:	and	w10, w10, #0x4000
  409c48:	cbz	w10, 409c8c <wcrtomb@plt+0x6edc>
  409c4c:	ldur	x8, [x29, #-16]
  409c50:	ldrb	w9, [x8]
  409c54:	ldr	x8, [sp, #48]
  409c58:	add	x10, x8, #0x1
  409c5c:	str	x10, [sp, #48]
  409c60:	strb	w9, [x8]
  409c64:	ldur	x8, [x29, #-16]
  409c68:	ldrb	w9, [x8]
  409c6c:	cmp	w9, #0x5c
  409c70:	b.ne	409c88 <wcrtomb@plt+0x6ed8>  // b.any
  409c74:	ldr	x8, [sp, #48]
  409c78:	add	x9, x8, #0x1
  409c7c:	str	x9, [sp, #48]
  409c80:	mov	w10, #0x5c                  	// #92
  409c84:	strb	w10, [x8]
  409c88:	b	409db0 <wcrtomb@plt+0x7000>
  409c8c:	ldr	x8, [sp, #48]
  409c90:	add	x9, x8, #0x1
  409c94:	str	x9, [sp, #48]
  409c98:	mov	w10, #0x5c                  	// #92
  409c9c:	strb	w10, [x8]
  409ca0:	ldur	x8, [x29, #-16]
  409ca4:	ldrb	w10, [x8]
  409ca8:	subs	w10, w10, #0x7
  409cac:	mov	w8, w10
  409cb0:	ubfx	x8, x8, #0, #32
  409cb4:	cmp	x8, #0x6
  409cb8:	str	x8, [sp, #24]
  409cbc:	b.hi	409d80 <wcrtomb@plt+0x6fd0>  // b.pmore
  409cc0:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  409cc4:	add	x8, x8, #0xdfc
  409cc8:	ldr	x11, [sp, #24]
  409ccc:	ldrsw	x10, [x8, x11, lsl #2]
  409cd0:	add	x9, x8, x10
  409cd4:	br	x9
  409cd8:	ldr	x8, [sp, #48]
  409cdc:	add	x9, x8, #0x1
  409ce0:	str	x9, [sp, #48]
  409ce4:	mov	w10, #0x61                  	// #97
  409ce8:	strb	w10, [x8]
  409cec:	b	409db0 <wcrtomb@plt+0x7000>
  409cf0:	ldr	x8, [sp, #48]
  409cf4:	add	x9, x8, #0x1
  409cf8:	str	x9, [sp, #48]
  409cfc:	mov	w10, #0x62                  	// #98
  409d00:	strb	w10, [x8]
  409d04:	b	409db0 <wcrtomb@plt+0x7000>
  409d08:	ldr	x8, [sp, #48]
  409d0c:	add	x9, x8, #0x1
  409d10:	str	x9, [sp, #48]
  409d14:	mov	w10, #0x66                  	// #102
  409d18:	strb	w10, [x8]
  409d1c:	b	409db0 <wcrtomb@plt+0x7000>
  409d20:	ldr	x8, [sp, #48]
  409d24:	add	x9, x8, #0x1
  409d28:	str	x9, [sp, #48]
  409d2c:	mov	w10, #0x6e                  	// #110
  409d30:	strb	w10, [x8]
  409d34:	b	409db0 <wcrtomb@plt+0x7000>
  409d38:	ldr	x8, [sp, #48]
  409d3c:	add	x9, x8, #0x1
  409d40:	str	x9, [sp, #48]
  409d44:	mov	w10, #0x72                  	// #114
  409d48:	strb	w10, [x8]
  409d4c:	b	409db0 <wcrtomb@plt+0x7000>
  409d50:	ldr	x8, [sp, #48]
  409d54:	add	x9, x8, #0x1
  409d58:	str	x9, [sp, #48]
  409d5c:	mov	w10, #0x74                  	// #116
  409d60:	strb	w10, [x8]
  409d64:	b	409db0 <wcrtomb@plt+0x7000>
  409d68:	ldr	x8, [sp, #48]
  409d6c:	add	x9, x8, #0x1
  409d70:	str	x9, [sp, #48]
  409d74:	mov	w10, #0x76                  	// #118
  409d78:	strb	w10, [x8]
  409d7c:	b	409db0 <wcrtomb@plt+0x7000>
  409d80:	ldr	x0, [sp, #48]
  409d84:	ldur	x8, [x29, #-16]
  409d88:	ldrb	w2, [x8]
  409d8c:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  409d90:	add	x1, x1, #0xbed
  409d94:	bl	402790 <sprintf@plt>
  409d98:	ldr	x8, [sp, #48]
  409d9c:	mov	x0, x8
  409da0:	bl	4026f0 <strlen@plt>
  409da4:	ldr	x8, [sp, #48]
  409da8:	add	x8, x8, x0
  409dac:	str	x8, [sp, #48]
  409db0:	ldr	x8, [sp, #48]
  409db4:	add	x9, sp, #0x3c
  409db8:	subs	x8, x8, x9
  409dbc:	str	x8, [sp, #40]
  409dc0:	ldur	x8, [x29, #-32]
  409dc4:	ldr	x9, [sp, #40]
  409dc8:	add	x8, x8, x9
  409dcc:	ldursw	x9, [x29, #-4]
  409dd0:	cmp	x8, x9
  409dd4:	b.cc	409e24 <wcrtomb@plt+0x7074>  // b.lo, b.ul, b.last
  409dd8:	ldur	w8, [x29, #-4]
  409ddc:	cmp	w8, #0x0
  409de0:	cset	w8, le
  409de4:	tbnz	w8, #0, 409e24 <wcrtomb@plt+0x7074>
  409de8:	ldr	x3, [sp, #32]
  409dec:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  409df0:	add	x0, x0, #0xc73
  409df4:	mov	x8, #0x1                   	// #1
  409df8:	mov	x1, x8
  409dfc:	mov	x2, x8
  409e00:	str	x8, [sp, #16]
  409e04:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409e08:	ldr	x3, [sp, #32]
  409e0c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409e10:	add	x0, x0, #0x468
  409e14:	ldr	x1, [sp, #16]
  409e18:	ldr	x2, [sp, #16]
  409e1c:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409e20:	stur	xzr, [x29, #-32]
  409e24:	ldr	x2, [sp, #40]
  409e28:	ldr	x3, [sp, #32]
  409e2c:	add	x0, sp, #0x3c
  409e30:	mov	x1, #0x1                   	// #1
  409e34:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409e38:	ldr	x8, [sp, #40]
  409e3c:	ldur	x9, [x29, #-32]
  409e40:	add	x8, x9, x8
  409e44:	stur	x8, [x29, #-32]
  409e48:	ldur	x8, [x29, #-16]
  409e4c:	add	x8, x8, #0x1
  409e50:	stur	x8, [x29, #-16]
  409e54:	b	409c08 <wcrtomb@plt+0x6e58>
  409e58:	ldr	x3, [sp, #32]
  409e5c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  409e60:	add	x0, x0, #0xf68
  409e64:	mov	x8, #0x1                   	// #1
  409e68:	mov	x1, x8
  409e6c:	mov	x2, x8
  409e70:	str	x8, [sp, #8]
  409e74:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409e78:	ldr	x3, [sp, #32]
  409e7c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409e80:	add	x0, x0, #0x468
  409e84:	ldr	x1, [sp, #8]
  409e88:	ldr	x2, [sp, #8]
  409e8c:	bl	40d1f0 <wcrtomb@plt+0xa440>
  409e90:	ldr	x0, [sp, #32]
  409e94:	bl	409038 <wcrtomb@plt+0x6288>
  409e98:	ldr	x28, [sp, #288]
  409e9c:	ldp	x29, x30, [sp, #272]
  409ea0:	add	sp, sp, #0x130
  409ea4:	ret
  409ea8:	sub	sp, sp, #0x40
  409eac:	stp	x29, x30, [sp, #48]
  409eb0:	add	x29, sp, #0x30
  409eb4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409eb8:	add	x8, x8, #0x688
  409ebc:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409ec0:	add	x9, x9, #0x756
  409ec4:	stur	x0, [x29, #-16]
  409ec8:	ldr	x8, [x8, #16]
  409ecc:	str	x9, [sp, #16]
  409ed0:	cbz	x8, 409ee4 <wcrtomb@plt+0x7134>
  409ed4:	mov	w8, wzr
  409ed8:	and	w8, w8, #0x1
  409edc:	sturb	w8, [x29, #-1]
  409ee0:	b	409fc8 <wcrtomb@plt+0x7218>
  409ee4:	ldur	x8, [x29, #-16]
  409ee8:	ldr	x8, [x8, #184]
  409eec:	cbnz	x8, 409f20 <wcrtomb@plt+0x7170>
  409ef0:	ldr	x8, [sp, #16]
  409ef4:	ldrb	w9, [x8]
  409ef8:	mov	w10, #0x1                   	// #1
  409efc:	str	w10, [sp, #12]
  409f00:	tbnz	w9, #0, 409f10 <wcrtomb@plt+0x7160>
  409f04:	ldur	x0, [x29, #-16]
  409f08:	bl	40ac0c <wcrtomb@plt+0x7e5c>
  409f0c:	str	w0, [sp, #12]
  409f10:	ldr	w8, [sp, #12]
  409f14:	and	w8, w8, #0x1
  409f18:	sturb	w8, [x29, #-1]
  409f1c:	b	409fc8 <wcrtomb@plt+0x7218>
  409f20:	ldur	x8, [x29, #-16]
  409f24:	ldr	x0, [x8, #184]
  409f28:	bl	402b90 <feof_unlocked@plt>
  409f2c:	cbz	w0, 409f60 <wcrtomb@plt+0x71b0>
  409f30:	ldr	x8, [sp, #16]
  409f34:	ldrb	w9, [x8]
  409f38:	mov	w10, #0x1                   	// #1
  409f3c:	str	w10, [sp, #8]
  409f40:	tbnz	w9, #0, 409f50 <wcrtomb@plt+0x71a0>
  409f44:	ldur	x0, [x29, #-16]
  409f48:	bl	40ac0c <wcrtomb@plt+0x7e5c>
  409f4c:	str	w0, [sp, #8]
  409f50:	ldr	w8, [sp, #8]
  409f54:	and	w8, w8, #0x1
  409f58:	sturb	w8, [x29, #-1]
  409f5c:	b	409fc8 <wcrtomb@plt+0x7218>
  409f60:	ldur	x8, [x29, #-16]
  409f64:	ldr	x0, [x8, #184]
  409f68:	bl	402a20 <getc_unlocked@plt>
  409f6c:	stur	w0, [x29, #-20]
  409f70:	mov	w9, #0xffffffff            	// #-1
  409f74:	cmp	w0, w9
  409f78:	b.ne	409fac <wcrtomb@plt+0x71fc>  // b.any
  409f7c:	ldr	x8, [sp, #16]
  409f80:	ldrb	w9, [x8]
  409f84:	mov	w10, #0x1                   	// #1
  409f88:	str	w10, [sp, #4]
  409f8c:	tbnz	w9, #0, 409f9c <wcrtomb@plt+0x71ec>
  409f90:	ldur	x0, [x29, #-16]
  409f94:	bl	40ac0c <wcrtomb@plt+0x7e5c>
  409f98:	str	w0, [sp, #4]
  409f9c:	ldr	w8, [sp, #4]
  409fa0:	and	w8, w8, #0x1
  409fa4:	sturb	w8, [x29, #-1]
  409fa8:	b	409fc8 <wcrtomb@plt+0x7218>
  409fac:	ldur	w0, [x29, #-20]
  409fb0:	ldur	x8, [x29, #-16]
  409fb4:	ldr	x1, [x8, #184]
  409fb8:	bl	402b50 <ungetc@plt>
  409fbc:	mov	w9, wzr
  409fc0:	and	w9, w9, #0x1
  409fc4:	sturb	w9, [x29, #-1]
  409fc8:	ldurb	w8, [x29, #-1]
  409fcc:	and	w0, w8, #0x1
  409fd0:	ldp	x29, x30, [sp, #48]
  409fd4:	add	sp, sp, #0x40
  409fd8:	ret
  409fdc:	stp	x29, x30, [sp, #-32]!
  409fe0:	str	x28, [sp, #16]
  409fe4:	mov	x29, sp
  409fe8:	sub	sp, sp, #0x1, lsl #12
  409fec:	sub	sp, sp, #0x80
  409ff0:	sub	x8, x29, #0x40
  409ff4:	mov	w9, #0x1                   	// #1
  409ff8:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  409ffc:	add	x10, x10, #0x700
  40a000:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a004:	add	x11, x11, #0x628
  40a008:	adrp	x12, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a00c:	add	x12, x12, #0x730
  40a010:	adrp	x13, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a014:	add	x13, x13, #0x6c0
  40a018:	str	x0, [x8, #56]
  40a01c:	str	xzr, [x8, #48]
  40a020:	str	xzr, [x8, #40]
  40a024:	str	xzr, [x8, #32]
  40a028:	strb	w9, [x8, #31]
  40a02c:	mov	x0, x10
  40a030:	mov	x1, x11
  40a034:	str	x8, [sp, #48]
  40a038:	str	x10, [sp, #40]
  40a03c:	str	x11, [sp, #32]
  40a040:	str	x12, [sp, #24]
  40a044:	str	x13, [sp, #16]
  40a048:	bl	4098dc <wcrtomb@plt+0x6b2c>
  40a04c:	ldr	x8, [sp, #48]
  40a050:	ldr	x10, [x8, #56]
  40a054:	ldr	x0, [x10]
  40a058:	ldr	x10, [sp, #32]
  40a05c:	ldr	x1, [x10, #8]
  40a060:	ldr	x2, [x10, #16]
  40a064:	ldr	x3, [x8, #48]
  40a068:	ldr	x11, [x8, #56]
  40a06c:	ldrb	w9, [x11, #32]
  40a070:	mov	w14, #0x4                   	// #4
  40a074:	lsr	w9, w9, w14
  40a078:	and	w9, w9, #0xff
  40a07c:	add	w5, w9, #0x1
  40a080:	ldr	x4, [sp, #24]
  40a084:	bl	40b9d8 <wcrtomb@plt+0x8c28>
  40a088:	cbnz	w0, 40a090 <wcrtomb@plt+0x72e0>
  40a08c:	b	40a748 <wcrtomb@plt+0x7998>
  40a090:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a094:	add	x8, x8, #0x759
  40a098:	ldrb	w9, [x8]
  40a09c:	tbnz	w9, #0, 40a0a4 <wcrtomb@plt+0x72f4>
  40a0a0:	b	40a1d4 <wcrtomb@plt+0x7424>
  40a0a4:	ldr	x8, [sp, #24]
  40a0a8:	ldr	x9, [x8]
  40a0ac:	cmp	x9, #0x0
  40a0b0:	cset	w10, ls  // ls = plast
  40a0b4:	tbnz	w10, #0, 40a0dc <wcrtomb@plt+0x732c>
  40a0b8:	ldr	x8, [sp, #24]
  40a0bc:	ldr	x9, [x8, #8]
  40a0c0:	ldr	x9, [x9]
  40a0c4:	mov	x10, #0xffffffffffffffff    	// #-1
  40a0c8:	cmp	x9, x10
  40a0cc:	b.eq	40a0dc <wcrtomb@plt+0x732c>  // b.none
  40a0d0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40a0d4:	add	x0, x0, #0xf6a
  40a0d8:	bl	402ac0 <puts@plt>
  40a0dc:	stur	wzr, [x29, #-40]
  40a0e0:	ldursw	x8, [x29, #-40]
  40a0e4:	ldr	x9, [sp, #24]
  40a0e8:	ldr	x10, [x9]
  40a0ec:	cmp	x8, x10
  40a0f0:	b.cs	40a1d4 <wcrtomb@plt+0x7424>  // b.hs, b.nlast
  40a0f4:	ldr	x8, [sp, #24]
  40a0f8:	ldr	x9, [x8, #8]
  40a0fc:	ldursw	x10, [x29, #-40]
  40a100:	ldr	x9, [x9, x10, lsl #3]
  40a104:	mov	x10, #0xffffffffffffffff    	// #-1
  40a108:	cmp	x9, x10
  40a10c:	b.ne	40a114 <wcrtomb@plt+0x7364>  // b.any
  40a110:	b	40a1d4 <wcrtomb@plt+0x7424>
  40a114:	ldur	w1, [x29, #-40]
  40a118:	ldr	x8, [sp, #24]
  40a11c:	ldr	x9, [x8, #8]
  40a120:	ldursw	x10, [x29, #-40]
  40a124:	ldr	x9, [x9, x10, lsl #3]
  40a128:	ldr	x10, [x8, #16]
  40a12c:	ldursw	x11, [x29, #-40]
  40a130:	ldr	x10, [x10, x11, lsl #3]
  40a134:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40a138:	add	x0, x0, #0xf82
  40a13c:	mov	w2, w9
  40a140:	mov	w3, w10
  40a144:	bl	402ce0 <printf@plt>
  40a148:	ldr	x8, [sp, #24]
  40a14c:	ldr	x11, [x8, #8]
  40a150:	ldursw	x12, [x29, #-40]
  40a154:	ldr	x11, [x11, x12, lsl #3]
  40a158:	ldr	x12, [x8, #16]
  40a15c:	ldursw	x13, [x29, #-40]
  40a160:	ldr	x12, [x12, x13, lsl #3]
  40a164:	cmp	x11, x12
  40a168:	b.eq	40a1b8 <wcrtomb@plt+0x7408>  // b.none
  40a16c:	ldr	x8, [sp, #32]
  40a170:	ldr	x9, [x8, #8]
  40a174:	ldr	x10, [sp, #24]
  40a178:	ldr	x11, [x10, #8]
  40a17c:	ldursw	x12, [x29, #-40]
  40a180:	ldr	x11, [x11, x12, lsl #3]
  40a184:	add	x0, x9, x11
  40a188:	ldr	x9, [x10, #16]
  40a18c:	ldursw	x11, [x29, #-40]
  40a190:	ldr	x9, [x9, x11, lsl #3]
  40a194:	ldr	x11, [x10, #8]
  40a198:	ldursw	x12, [x29, #-40]
  40a19c:	ldr	x11, [x11, x12, lsl #3]
  40a1a0:	subs	x1, x9, x11
  40a1a4:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a1a8:	add	x9, x9, #0x518
  40a1ac:	ldr	x3, [x9]
  40a1b0:	mov	x2, #0x1                   	// #1
  40a1b4:	bl	4026e0 <fwrite_unlocked@plt>
  40a1b8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40a1bc:	add	x0, x0, #0xf96
  40a1c0:	bl	402ac0 <puts@plt>
  40a1c4:	ldur	w8, [x29, #-40]
  40a1c8:	add	w8, w8, #0x1
  40a1cc:	stur	w8, [x29, #-40]
  40a1d0:	b	40a0e0 <wcrtomb@plt+0x7330>
  40a1d4:	ldr	x8, [sp, #48]
  40a1d8:	ldr	x9, [x8, #56]
  40a1dc:	ldr	x9, [x9, #8]
  40a1e0:	cbnz	x9, 40a2b4 <wcrtomb@plt+0x7504>
  40a1e4:	ldr	x8, [sp, #48]
  40a1e8:	ldr	x9, [x8, #56]
  40a1ec:	ldr	x9, [x9, #16]
  40a1f0:	cmp	x9, #0x1
  40a1f4:	b.hi	40a2b4 <wcrtomb@plt+0x7504>  // b.pmore
  40a1f8:	ldr	x8, [sp, #24]
  40a1fc:	ldr	x9, [x8, #8]
  40a200:	ldr	x9, [x9]
  40a204:	cbnz	x9, 40a274 <wcrtomb@plt+0x74c4>
  40a208:	ldr	x8, [sp, #48]
  40a20c:	ldr	x9, [x8, #56]
  40a210:	ldrb	w10, [x9, #32]
  40a214:	and	w10, w10, #0x1
  40a218:	and	w10, w10, #0xff
  40a21c:	cbnz	w10, 40a274 <wcrtomb@plt+0x74c4>
  40a220:	mov	w8, #0x1                   	// #1
  40a224:	ldr	x9, [sp, #16]
  40a228:	strb	w8, [x9]
  40a22c:	ldr	x10, [sp, #24]
  40a230:	ldr	x11, [x10, #16]
  40a234:	ldr	x11, [x11]
  40a238:	ldr	x12, [sp, #32]
  40a23c:	ldr	x13, [x12, #8]
  40a240:	add	x11, x13, x11
  40a244:	str	x11, [x12, #8]
  40a248:	ldr	x11, [x10, #16]
  40a24c:	ldr	x11, [x11]
  40a250:	ldr	x13, [x12, #16]
  40a254:	subs	x11, x13, x11
  40a258:	str	x11, [x12, #16]
  40a25c:	ldr	x11, [x10, #16]
  40a260:	ldr	x11, [x11]
  40a264:	ldr	x13, [x12, #24]
  40a268:	subs	x11, x13, x11
  40a26c:	str	x11, [x12, #24]
  40a270:	b	40a54c <wcrtomb@plt+0x779c>
  40a274:	ldr	x8, [sp, #24]
  40a278:	ldr	x9, [x8, #16]
  40a27c:	ldr	x9, [x9]
  40a280:	ldr	x10, [sp, #32]
  40a284:	ldr	x11, [x10, #16]
  40a288:	cmp	x9, x11
  40a28c:	b.ne	40a2b4 <wcrtomb@plt+0x7504>  // b.any
  40a290:	mov	w8, #0x1                   	// #1
  40a294:	ldr	x9, [sp, #16]
  40a298:	strb	w8, [x9]
  40a29c:	ldr	x10, [sp, #24]
  40a2a0:	ldr	x11, [x10, #8]
  40a2a4:	ldr	x11, [x11]
  40a2a8:	ldr	x12, [sp, #32]
  40a2ac:	str	x11, [x12, #16]
  40a2b0:	b	40a54c <wcrtomb@plt+0x779c>
  40a2b4:	ldr	x8, [sp, #24]
  40a2b8:	ldr	x9, [x8, #8]
  40a2bc:	ldr	x9, [x9]
  40a2c0:	ldr	x10, [sp, #48]
  40a2c4:	str	x9, [x10, #16]
  40a2c8:	ldr	x9, [x8, #16]
  40a2cc:	ldr	x9, [x9]
  40a2d0:	ldr	x11, [x8, #8]
  40a2d4:	ldr	x11, [x11]
  40a2d8:	subs	x9, x9, x11
  40a2dc:	str	x9, [x10, #8]
  40a2e0:	ldr	x9, [x10, #48]
  40a2e4:	ldr	x11, [x10, #16]
  40a2e8:	cmp	x9, x11
  40a2ec:	b.cs	40a324 <wcrtomb@plt+0x7574>  // b.hs, b.nlast
  40a2f0:	ldr	x8, [sp, #32]
  40a2f4:	ldr	x9, [x8, #8]
  40a2f8:	ldr	x10, [sp, #48]
  40a2fc:	ldr	x11, [x10, #48]
  40a300:	add	x1, x9, x11
  40a304:	ldr	x9, [x10, #16]
  40a308:	ldr	x11, [x10, #48]
  40a30c:	subs	x2, x9, x11
  40a310:	ldr	x0, [sp, #40]
  40a314:	bl	4091e4 <wcrtomb@plt+0x6434>
  40a318:	ldr	x8, [sp, #48]
  40a31c:	ldr	x9, [x8, #16]
  40a320:	str	x9, [x8, #48]
  40a324:	ldr	x8, [sp, #48]
  40a328:	ldr	x9, [x8, #8]
  40a32c:	cmp	x9, #0x0
  40a330:	cset	w10, hi  // hi = pmore
  40a334:	tbnz	w10, #0, 40a358 <wcrtomb@plt+0x75a8>
  40a338:	ldr	x8, [sp, #48]
  40a33c:	ldr	x9, [x8, #32]
  40a340:	cbz	x9, 40a358 <wcrtomb@plt+0x75a8>
  40a344:	ldr	x8, [sp, #48]
  40a348:	ldr	x9, [x8, #16]
  40a34c:	ldr	x10, [x8, #40]
  40a350:	cmp	x9, x10
  40a354:	b.ls	40a3c4 <wcrtomb@plt+0x7614>  // b.plast
  40a358:	ldr	x8, [sp, #48]
  40a35c:	ldr	x9, [x8, #32]
  40a360:	add	x9, x9, #0x1
  40a364:	str	x9, [x8, #32]
  40a368:	ldr	x10, [x8, #56]
  40a36c:	ldr	x10, [x10, #16]
  40a370:	cmp	x9, x10
  40a374:	b.cc	40a3c4 <wcrtomb@plt+0x7614>  // b.lo, b.ul, b.last
  40a378:	mov	w8, #0x1                   	// #1
  40a37c:	ldr	x9, [sp, #16]
  40a380:	strb	w8, [x9]
  40a384:	ldr	x10, [sp, #48]
  40a388:	ldr	x11, [x10, #56]
  40a38c:	ldr	x1, [x11, #8]
  40a390:	ldr	x0, [sp, #40]
  40a394:	ldr	x2, [sp, #24]
  40a398:	bl	40acc0 <wcrtomb@plt+0x7f10>
  40a39c:	ldr	x9, [sp, #48]
  40a3a0:	ldr	x10, [x9, #56]
  40a3a4:	ldrb	w8, [x10, #32]
  40a3a8:	mov	w12, #0x1                   	// #1
  40a3ac:	and	w8, w8, #0x1
  40a3b0:	tst	w8, #0xff
  40a3b4:	cset	w8, ne  // ne = any
  40a3b8:	and	w8, w8, w12
  40a3bc:	strb	w8, [x9, #31]
  40a3c0:	b	40a41c <wcrtomb@plt+0x766c>
  40a3c4:	ldr	x8, [sp, #48]
  40a3c8:	ldr	x9, [x8, #8]
  40a3cc:	cbnz	x9, 40a3fc <wcrtomb@plt+0x764c>
  40a3d0:	ldr	x8, [sp, #48]
  40a3d4:	ldr	x9, [x8, #48]
  40a3d8:	ldr	x10, [sp, #32]
  40a3dc:	ldr	x11, [x10, #16]
  40a3e0:	cmp	x9, x11
  40a3e4:	b.cs	40a3f8 <wcrtomb@plt+0x7648>  // b.hs, b.nlast
  40a3e8:	mov	x8, #0x1                   	// #1
  40a3ec:	ldr	x9, [sp, #48]
  40a3f0:	str	x8, [x9, #8]
  40a3f4:	b	40a3fc <wcrtomb@plt+0x764c>
  40a3f8:	b	40a4c8 <wcrtomb@plt+0x7718>
  40a3fc:	ldr	x8, [sp, #32]
  40a400:	ldr	x9, [x8, #8]
  40a404:	ldr	x10, [sp, #48]
  40a408:	ldr	x11, [x10, #16]
  40a40c:	add	x1, x9, x11
  40a410:	ldr	x2, [x10, #8]
  40a414:	ldr	x0, [sp, #40]
  40a418:	bl	4091e4 <wcrtomb@plt+0x6434>
  40a41c:	ldr	x8, [sp, #48]
  40a420:	ldr	x9, [x8, #16]
  40a424:	ldr	x10, [x8, #8]
  40a428:	add	x9, x9, x10
  40a42c:	str	x9, [x8, #48]
  40a430:	ldr	x9, [sp, #24]
  40a434:	ldr	x10, [x9, #16]
  40a438:	ldr	x10, [x10]
  40a43c:	str	x10, [x8, #40]
  40a440:	ldr	x8, [sp, #48]
  40a444:	ldrb	w9, [x8, #31]
  40a448:	mov	w10, #0x0                   	// #0
  40a44c:	str	w10, [sp, #12]
  40a450:	tbnz	w9, #0, 40a458 <wcrtomb@plt+0x76a8>
  40a454:	b	40a4c0 <wcrtomb@plt+0x7710>
  40a458:	ldr	x8, [sp, #48]
  40a45c:	ldr	x9, [x8, #48]
  40a460:	ldr	x10, [sp, #32]
  40a464:	ldr	x11, [x10, #16]
  40a468:	mov	w12, #0x0                   	// #0
  40a46c:	cmp	x9, x11
  40a470:	str	w12, [sp, #12]
  40a474:	b.hi	40a4c0 <wcrtomb@plt+0x7710>  // b.pmore
  40a478:	ldr	x8, [sp, #48]
  40a47c:	ldr	x9, [x8, #56]
  40a480:	ldr	x0, [x9]
  40a484:	ldr	x9, [sp, #32]
  40a488:	ldr	x1, [x9, #8]
  40a48c:	ldr	x2, [x9, #16]
  40a490:	ldr	x3, [x8, #48]
  40a494:	ldr	x10, [x8, #56]
  40a498:	ldrb	w11, [x10, #32]
  40a49c:	mov	w12, #0x4                   	// #4
  40a4a0:	lsr	w11, w11, w12
  40a4a4:	and	w11, w11, #0xff
  40a4a8:	add	w5, w11, #0x1
  40a4ac:	ldr	x4, [sp, #24]
  40a4b0:	bl	40b9d8 <wcrtomb@plt+0x8c28>
  40a4b4:	cmp	w0, #0x0
  40a4b8:	cset	w11, ne  // ne = any
  40a4bc:	str	w11, [sp, #12]
  40a4c0:	ldr	w8, [sp, #12]
  40a4c4:	tbnz	w8, #0, 40a2b4 <wcrtomb@plt+0x7504>
  40a4c8:	ldr	x8, [sp, #48]
  40a4cc:	ldr	x9, [x8, #48]
  40a4d0:	ldr	x10, [sp, #32]
  40a4d4:	ldr	x11, [x10, #16]
  40a4d8:	cmp	x9, x11
  40a4dc:	b.cs	40a508 <wcrtomb@plt+0x7758>  // b.hs, b.nlast
  40a4e0:	ldr	x8, [sp, #32]
  40a4e4:	ldr	x9, [x8, #8]
  40a4e8:	ldr	x10, [sp, #48]
  40a4ec:	ldr	x11, [x10, #48]
  40a4f0:	add	x1, x9, x11
  40a4f4:	ldr	x9, [x8, #16]
  40a4f8:	ldr	x11, [x10, #48]
  40a4fc:	subs	x2, x9, x11
  40a500:	ldr	x0, [sp, #40]
  40a504:	bl	4091e4 <wcrtomb@plt+0x6434>
  40a508:	ldr	x8, [sp, #32]
  40a50c:	ldrb	w9, [x8, #32]
  40a510:	and	w9, w9, #0x1
  40a514:	ldr	x10, [sp, #40]
  40a518:	strb	w9, [x10, #32]
  40a51c:	mov	x0, x8
  40a520:	mov	x1, x10
  40a524:	mov	w9, wzr
  40a528:	mov	w2, w9
  40a52c:	bl	409948 <wcrtomb@plt+0x6b98>
  40a530:	ldr	x8, [sp, #48]
  40a534:	ldr	x10, [x8, #32]
  40a538:	ldr	x11, [x8, #56]
  40a53c:	ldr	x11, [x11, #16]
  40a540:	cmp	x10, x11
  40a544:	b.cs	40a54c <wcrtomb@plt+0x779c>  // b.hs, b.nlast
  40a548:	b	40a748 <wcrtomb@plt+0x7998>
  40a54c:	ldr	x8, [sp, #48]
  40a550:	ldr	x9, [x8, #56]
  40a554:	ldrb	w10, [x9, #32]
  40a558:	mov	w11, #0x1                   	// #1
  40a55c:	lsr	w10, w10, w11
  40a560:	and	w10, w10, #0x3
  40a564:	and	w10, w10, #0xff
  40a568:	and	w10, w10, #0x1
  40a56c:	cbz	w10, 40a590 <wcrtomb@plt+0x77e0>
  40a570:	ldr	x8, [sp, #32]
  40a574:	ldr	x0, [x8, #8]
  40a578:	ldr	x1, [x8, #16]
  40a57c:	ldrb	w9, [x8, #32]
  40a580:	and	w2, w9, #0x1
  40a584:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a588:	add	x3, x3, #0x6c8
  40a58c:	bl	409820 <wcrtomb@plt+0x6a70>
  40a590:	ldr	x8, [sp, #48]
  40a594:	ldr	x9, [x8, #56]
  40a598:	ldrb	w10, [x9, #32]
  40a59c:	mov	w11, #0x3                   	// #3
  40a5a0:	lsr	w10, w10, w11
  40a5a4:	and	w10, w10, #0x1
  40a5a8:	and	w10, w10, #0xff
  40a5ac:	cbz	w10, 40a6d0 <wcrtomb@plt+0x7920>
  40a5b0:	ldr	x0, [sp, #40]
  40a5b4:	mov	x8, xzr
  40a5b8:	mov	x1, x8
  40a5bc:	bl	4098dc <wcrtomb@plt+0x6b2c>
  40a5c0:	ldr	x0, [sp, #32]
  40a5c4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  40a5c8:	add	x1, x1, #0x301
  40a5cc:	mov	x2, #0x1                   	// #1
  40a5d0:	bl	4091e4 <wcrtomb@plt+0x6434>
  40a5d4:	ldr	x8, [sp, #32]
  40a5d8:	ldr	x0, [x8, #8]
  40a5dc:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40a5e0:	add	x1, x1, #0x2af
  40a5e4:	bl	4028f0 <popen@plt>
  40a5e8:	ldr	x8, [sp, #48]
  40a5ec:	str	x0, [x8]
  40a5f0:	ldr	x9, [x8]
  40a5f4:	cbz	x9, 40a6c0 <wcrtomb@plt+0x7910>
  40a5f8:	ldr	x8, [sp, #48]
  40a5fc:	ldr	x0, [x8]
  40a600:	bl	402b90 <feof_unlocked@plt>
  40a604:	cmp	w0, #0x0
  40a608:	cset	w9, ne  // ne = any
  40a60c:	eor	w9, w9, #0x1
  40a610:	tbnz	w9, #0, 40a618 <wcrtomb@plt+0x7868>
  40a614:	b	40a658 <wcrtomb@plt+0x78a8>
  40a618:	ldr	x8, [sp, #48]
  40a61c:	ldr	x3, [x8]
  40a620:	add	x0, sp, #0x40
  40a624:	mov	x1, #0x1                   	// #1
  40a628:	mov	x2, #0x1000                	// #4096
  40a62c:	bl	402ad0 <fread_unlocked@plt>
  40a630:	str	w0, [sp, #60]
  40a634:	ldr	w9, [sp, #60]
  40a638:	cmp	w9, #0x0
  40a63c:	cset	w9, le
  40a640:	tbnz	w9, #0, 40a654 <wcrtomb@plt+0x78a4>
  40a644:	ldrsw	x2, [sp, #60]
  40a648:	ldr	x0, [sp, #40]
  40a64c:	add	x1, sp, #0x40
  40a650:	bl	4091e4 <wcrtomb@plt+0x6434>
  40a654:	b	40a5f8 <wcrtomb@plt+0x7848>
  40a658:	ldr	x8, [sp, #48]
  40a65c:	ldr	x0, [x8]
  40a660:	bl	402c90 <pclose@plt>
  40a664:	ldr	x8, [sp, #32]
  40a668:	mov	x0, x8
  40a66c:	ldr	x1, [sp, #40]
  40a670:	mov	w2, #0x1                   	// #1
  40a674:	bl	409948 <wcrtomb@plt+0x6b98>
  40a678:	ldr	x8, [sp, #32]
  40a67c:	ldr	x9, [x8, #16]
  40a680:	cbz	x9, 40a6bc <wcrtomb@plt+0x790c>
  40a684:	ldr	x8, [sp, #32]
  40a688:	ldr	x9, [x8, #8]
  40a68c:	ldr	x10, [x8, #16]
  40a690:	subs	x10, x10, #0x1
  40a694:	ldrb	w11, [x9, x10]
  40a698:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a69c:	add	x9, x9, #0x468
  40a6a0:	ldrb	w12, [x9]
  40a6a4:	cmp	w11, w12
  40a6a8:	b.ne	40a6bc <wcrtomb@plt+0x790c>  // b.any
  40a6ac:	ldr	x8, [sp, #32]
  40a6b0:	ldr	x9, [x8, #16]
  40a6b4:	subs	x9, x9, #0x1
  40a6b8:	str	x9, [x8, #16]
  40a6bc:	b	40a6d0 <wcrtomb@plt+0x7920>
  40a6c0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40a6c4:	add	x0, x0, #0xeff
  40a6c8:	bl	402d40 <gettext@plt>
  40a6cc:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40a6d0:	ldr	x8, [sp, #48]
  40a6d4:	ldr	x9, [x8, #56]
  40a6d8:	ldrb	w10, [x9, #32]
  40a6dc:	mov	w11, #0x1                   	// #1
  40a6e0:	lsr	w10, w10, w11
  40a6e4:	and	w10, w10, #0x3
  40a6e8:	and	w10, w10, #0xff
  40a6ec:	and	w10, w10, #0x2
  40a6f0:	cbz	w10, 40a714 <wcrtomb@plt+0x7964>
  40a6f4:	ldr	x8, [sp, #32]
  40a6f8:	ldr	x0, [x8, #8]
  40a6fc:	ldr	x1, [x8, #16]
  40a700:	ldrb	w9, [x8, #32]
  40a704:	and	w2, w9, #0x1
  40a708:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a70c:	add	x3, x3, #0x6c8
  40a710:	bl	409820 <wcrtomb@plt+0x6a70>
  40a714:	ldr	x8, [sp, #48]
  40a718:	ldr	x9, [x8, #56]
  40a71c:	ldr	x9, [x9, #24]
  40a720:	cbz	x9, 40a748 <wcrtomb@plt+0x7998>
  40a724:	ldr	x8, [sp, #32]
  40a728:	ldr	x0, [x8, #8]
  40a72c:	ldr	x1, [x8, #16]
  40a730:	ldrb	w9, [x8, #32]
  40a734:	and	w2, w9, #0x1
  40a738:	ldr	x10, [sp, #48]
  40a73c:	ldr	x11, [x10, #56]
  40a740:	ldr	x3, [x11, #24]
  40a744:	bl	409820 <wcrtomb@plt+0x6a70>
  40a748:	add	sp, sp, #0x1, lsl #12
  40a74c:	add	sp, sp, #0x80
  40a750:	ldr	x28, [sp, #16]
  40a754:	ldp	x29, x30, [sp], #32
  40a758:	ret
  40a75c:	sub	sp, sp, #0xa0
  40a760:	stp	x29, x30, [sp, #144]
  40a764:	add	x29, sp, #0x90
  40a768:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a76c:	add	x8, x8, #0x628
  40a770:	stur	x0, [x29, #-8]
  40a774:	stur	xzr, [x29, #-24]
  40a778:	stur	xzr, [x29, #-16]
  40a77c:	str	x8, [sp, #24]
  40a780:	ldur	x8, [x29, #-16]
  40a784:	ldr	x9, [sp, #24]
  40a788:	ldr	x10, [x9, #16]
  40a78c:	cmp	x8, x10
  40a790:	b.cs	40aa78 <wcrtomb@plt+0x7cc8>  // b.hs, b.nlast
  40a794:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40a798:	add	x8, x8, #0x8dc
  40a79c:	ldr	w9, [x8]
  40a7a0:	cmp	w9, #0x1
  40a7a4:	b.ne	40a7b4 <wcrtomb@plt+0x7a04>  // b.any
  40a7a8:	mov	x8, #0x1                   	// #1
  40a7ac:	str	x8, [sp, #16]
  40a7b0:	b	40a7e4 <wcrtomb@plt+0x7a34>
  40a7b4:	ldr	x8, [sp, #24]
  40a7b8:	ldr	x9, [x8, #8]
  40a7bc:	ldur	x10, [x29, #-16]
  40a7c0:	add	x1, x9, x10
  40a7c4:	ldr	x9, [x8, #16]
  40a7c8:	ldur	x10, [x29, #-16]
  40a7cc:	subs	x2, x9, x10
  40a7d0:	mov	x9, xzr
  40a7d4:	mov	x0, x9
  40a7d8:	sub	x3, x29, #0x18
  40a7dc:	bl	41da58 <wcrtomb@plt+0x1aca8>
  40a7e0:	str	x0, [sp, #16]
  40a7e4:	ldr	x8, [sp, #16]
  40a7e8:	stur	x8, [x29, #-40]
  40a7ec:	ldur	x8, [x29, #-40]
  40a7f0:	mov	x9, #0xffffffffffffffff    	// #-1
  40a7f4:	cmp	x8, x9
  40a7f8:	b.eq	40a814 <wcrtomb@plt+0x7a64>  // b.none
  40a7fc:	ldur	x8, [x29, #-40]
  40a800:	mov	x9, #0xfffffffffffffffe    	// #-2
  40a804:	cmp	x8, x9
  40a808:	b.eq	40a814 <wcrtomb@plt+0x7a64>  // b.none
  40a80c:	ldur	x8, [x29, #-40]
  40a810:	cbnz	x8, 40a81c <wcrtomb@plt+0x7a6c>
  40a814:	mov	x8, #0x1                   	// #1
  40a818:	stur	x8, [x29, #-40]
  40a81c:	stur	wzr, [x29, #-28]
  40a820:	ldur	x8, [x29, #-8]
  40a824:	ldur	w9, [x29, #-28]
  40a828:	mov	w10, #0x2                   	// #2
  40a82c:	mul	w9, w10, w9
  40a830:	mov	w11, w9
  40a834:	ubfx	x11, x11, #0, #32
  40a838:	mov	x12, #0x8                   	// #8
  40a83c:	mul	x11, x12, x11
  40a840:	add	x8, x8, x11
  40a844:	ldr	x8, [x8]
  40a848:	cbz	x8, 40aa64 <wcrtomb@plt+0x7cb4>
  40a84c:	ldr	x8, [sp, #24]
  40a850:	ldr	x9, [x8, #8]
  40a854:	ldur	x10, [x29, #-16]
  40a858:	add	x0, x9, x10
  40a85c:	ldur	x9, [x29, #-8]
  40a860:	ldur	w11, [x29, #-28]
  40a864:	mov	w12, #0x2                   	// #2
  40a868:	mul	w11, w12, w11
  40a86c:	mov	w10, w11
  40a870:	ubfx	x10, x10, #0, #32
  40a874:	mov	x13, #0x8                   	// #8
  40a878:	mul	x10, x13, x10
  40a87c:	add	x9, x9, x10
  40a880:	ldr	x1, [x9]
  40a884:	ldur	x2, [x29, #-40]
  40a888:	bl	402900 <strncmp@plt>
  40a88c:	cbnz	w0, 40aa54 <wcrtomb@plt+0x7ca4>
  40a890:	mov	w8, #0x0                   	// #0
  40a894:	sturb	w8, [x29, #-41]
  40a898:	ldur	x9, [x29, #-8]
  40a89c:	ldur	w8, [x29, #-28]
  40a8a0:	mov	w10, #0x2                   	// #2
  40a8a4:	mul	w8, w10, w8
  40a8a8:	add	w8, w8, #0x1
  40a8ac:	mov	w11, w8
  40a8b0:	ubfx	x11, x11, #0, #32
  40a8b4:	mov	x12, #0x8                   	// #8
  40a8b8:	mul	x11, x12, x11
  40a8bc:	add	x9, x9, x11
  40a8c0:	ldr	x9, [x9]
  40a8c4:	stur	x9, [x29, #-56]
  40a8c8:	ldur	x9, [x29, #-56]
  40a8cc:	ldrb	w8, [x9]
  40a8d0:	cbnz	w8, 40a8e0 <wcrtomb@plt+0x7b30>
  40a8d4:	mov	x8, #0x1                   	// #1
  40a8d8:	str	x8, [sp, #8]
  40a8dc:	b	40a8ec <wcrtomb@plt+0x7b3c>
  40a8e0:	ldur	x0, [x29, #-56]
  40a8e4:	bl	4026f0 <strlen@plt>
  40a8e8:	str	x0, [sp, #8]
  40a8ec:	ldr	x8, [sp, #8]
  40a8f0:	stur	x8, [x29, #-64]
  40a8f4:	ldur	x8, [x29, #-40]
  40a8f8:	ldur	x9, [x29, #-64]
  40a8fc:	cmp	x8, x9
  40a900:	b.cs	40a94c <wcrtomb@plt+0x7b9c>  // b.hs, b.nlast
  40a904:	ldr	x8, [sp, #24]
  40a908:	ldr	x9, [x8, #16]
  40a90c:	add	x9, x9, #0x1
  40a910:	ldur	x10, [x29, #-64]
  40a914:	add	x9, x9, x10
  40a918:	ldur	x10, [x29, #-40]
  40a91c:	subs	x9, x9, x10
  40a920:	str	x9, [sp, #72]
  40a924:	ldr	x9, [x8, #24]
  40a928:	ldr	x10, [sp, #72]
  40a92c:	cmp	x9, x10
  40a930:	b.cs	40a940 <wcrtomb@plt+0x7b90>  // b.hs, b.nlast
  40a934:	ldr	x1, [sp, #72]
  40a938:	ldr	x0, [sp, #24]
  40a93c:	bl	40933c <wcrtomb@plt+0x658c>
  40a940:	mov	w8, #0x1                   	// #1
  40a944:	sturb	w8, [x29, #-41]
  40a948:	b	40a964 <wcrtomb@plt+0x7bb4>
  40a94c:	ldur	x8, [x29, #-40]
  40a950:	ldur	x9, [x29, #-64]
  40a954:	cmp	x8, x9
  40a958:	b.ls	40a964 <wcrtomb@plt+0x7bb4>  // b.plast
  40a95c:	mov	w8, #0x1                   	// #1
  40a960:	sturb	w8, [x29, #-41]
  40a964:	ldur	x8, [x29, #-16]
  40a968:	str	x8, [sp, #64]
  40a96c:	ldurb	w9, [x29, #-41]
  40a970:	tbnz	w9, #0, 40a978 <wcrtomb@plt+0x7bc8>
  40a974:	b	40aa0c <wcrtomb@plt+0x7c5c>
  40a978:	ldr	x8, [sp, #24]
  40a97c:	ldr	x9, [x8, #8]
  40a980:	ldur	x10, [x29, #-16]
  40a984:	add	x9, x9, x10
  40a988:	ldur	x10, [x29, #-40]
  40a98c:	add	x9, x9, x10
  40a990:	str	x9, [sp, #56]
  40a994:	ldr	x9, [x8, #8]
  40a998:	ldur	x10, [x29, #-16]
  40a99c:	add	x9, x9, x10
  40a9a0:	ldur	x10, [x29, #-64]
  40a9a4:	add	x9, x9, x10
  40a9a8:	str	x9, [sp, #48]
  40a9ac:	ldr	x9, [x8, #16]
  40a9b0:	add	x9, x9, #0x1
  40a9b4:	ldur	x10, [x29, #-16]
  40a9b8:	subs	x9, x9, x10
  40a9bc:	ldur	x10, [x29, #-40]
  40a9c0:	subs	x9, x9, x10
  40a9c4:	str	x9, [sp, #40]
  40a9c8:	ldur	x9, [x29, #-64]
  40a9cc:	ldur	x10, [x29, #-40]
  40a9d0:	subs	x9, x9, x10
  40a9d4:	str	x9, [sp, #32]
  40a9d8:	ldr	x0, [sp, #48]
  40a9dc:	ldr	x1, [sp, #56]
  40a9e0:	ldr	x2, [sp, #40]
  40a9e4:	bl	4026b0 <memmove@plt>
  40a9e8:	ldr	x8, [sp, #32]
  40a9ec:	ldr	x9, [sp, #24]
  40a9f0:	ldr	x10, [x9, #16]
  40a9f4:	add	x8, x10, x8
  40a9f8:	str	x8, [x9, #16]
  40a9fc:	ldr	x8, [sp, #32]
  40aa00:	ldur	x10, [x29, #-16]
  40aa04:	add	x8, x10, x8
  40aa08:	stur	x8, [x29, #-16]
  40aa0c:	ldr	x8, [sp, #24]
  40aa10:	ldr	x9, [x8, #8]
  40aa14:	ldr	x10, [sp, #64]
  40aa18:	add	x0, x9, x10
  40aa1c:	ldur	x9, [x29, #-8]
  40aa20:	ldur	w11, [x29, #-28]
  40aa24:	mov	w12, #0x2                   	// #2
  40aa28:	mul	w11, w12, w11
  40aa2c:	add	w11, w11, #0x1
  40aa30:	mov	w10, w11
  40aa34:	ubfx	x10, x10, #0, #32
  40aa38:	mov	x13, #0x8                   	// #8
  40aa3c:	mul	x10, x13, x10
  40aa40:	add	x9, x9, x10
  40aa44:	ldr	x1, [x9]
  40aa48:	ldur	x2, [x29, #-64]
  40aa4c:	bl	4026a0 <memcpy@plt>
  40aa50:	b	40aa64 <wcrtomb@plt+0x7cb4>
  40aa54:	ldur	w8, [x29, #-28]
  40aa58:	add	w8, w8, #0x1
  40aa5c:	stur	w8, [x29, #-28]
  40aa60:	b	40a820 <wcrtomb@plt+0x7a70>
  40aa64:	ldur	x8, [x29, #-40]
  40aa68:	ldur	x9, [x29, #-16]
  40aa6c:	add	x8, x9, x8
  40aa70:	stur	x8, [x29, #-16]
  40aa74:	b	40a780 <wcrtomb@plt+0x79d0>
  40aa78:	ldp	x29, x30, [sp, #144]
  40aa7c:	add	sp, sp, #0xa0
  40aa80:	ret
  40aa84:	sub	sp, sp, #0x40
  40aa88:	stp	x29, x30, [sp, #48]
  40aa8c:	add	x29, sp, #0x30
  40aa90:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40aa94:	add	x8, x8, #0x628
  40aa98:	stur	x0, [x29, #-16]
  40aa9c:	str	x1, [sp, #24]
  40aaa0:	ldur	x9, [x29, #-16]
  40aaa4:	ldr	w10, [x9]
  40aaa8:	subs	w10, w10, #0x0
  40aaac:	mov	w9, w10
  40aab0:	ubfx	x9, x9, #0, #32
  40aab4:	cmp	x9, #0x6
  40aab8:	str	x8, [sp, #16]
  40aabc:	str	x9, [sp, #8]
  40aac0:	b.hi	40abec <wcrtomb@plt+0x7e3c>  // b.pmore
  40aac4:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40aac8:	add	x8, x8, #0xe18
  40aacc:	ldr	x11, [sp, #8]
  40aad0:	ldrsw	x10, [x8, x11, lsl #2]
  40aad4:	add	x9, x8, x10
  40aad8:	br	x9
  40aadc:	mov	w8, #0x1                   	// #1
  40aae0:	and	w8, w8, #0x1
  40aae4:	sturb	w8, [x29, #-1]
  40aae8:	b	40abf8 <wcrtomb@plt+0x7e48>
  40aaec:	ldur	x8, [x29, #-16]
  40aaf0:	ldr	x0, [x8, #24]
  40aaf4:	ldr	x8, [sp, #16]
  40aaf8:	ldr	x1, [x8, #8]
  40aafc:	ldr	x2, [x8, #16]
  40ab00:	mov	x9, xzr
  40ab04:	mov	x3, x9
  40ab08:	mov	x4, x9
  40ab0c:	mov	w10, wzr
  40ab10:	mov	w5, w10
  40ab14:	bl	40b9d8 <wcrtomb@plt+0x8c28>
  40ab18:	cmp	w0, #0x0
  40ab1c:	cset	w10, ne  // ne = any
  40ab20:	and	w10, w10, #0x1
  40ab24:	sturb	w10, [x29, #-1]
  40ab28:	b	40abf8 <wcrtomb@plt+0x7e48>
  40ab2c:	ldr	x8, [sp, #24]
  40ab30:	ldr	x8, [x8, #16]
  40ab34:	ldur	x9, [x29, #-16]
  40ab38:	ldr	x9, [x9, #8]
  40ab3c:	mov	w10, #0x0                   	// #0
  40ab40:	cmp	x8, x9
  40ab44:	str	w10, [sp, #4]
  40ab48:	b.cc	40ab80 <wcrtomb@plt+0x7dd0>  // b.lo, b.ul, b.last
  40ab4c:	ldr	x8, [sp, #24]
  40ab50:	ldr	x8, [x8, #16]
  40ab54:	ldur	x9, [x29, #-16]
  40ab58:	ldr	x9, [x9, #8]
  40ab5c:	subs	x8, x8, x9
  40ab60:	ldur	x9, [x29, #-16]
  40ab64:	ldr	x9, [x9, #16]
  40ab68:	udiv	x10, x8, x9
  40ab6c:	mul	x9, x10, x9
  40ab70:	subs	x8, x8, x9
  40ab74:	cmp	x8, #0x0
  40ab78:	cset	w11, eq  // eq = none
  40ab7c:	str	w11, [sp, #4]
  40ab80:	ldr	w8, [sp, #4]
  40ab84:	and	w8, w8, #0x1
  40ab88:	sturb	w8, [x29, #-1]
  40ab8c:	b	40abf8 <wcrtomb@plt+0x7e48>
  40ab90:	ldur	x8, [x29, #-16]
  40ab94:	ldr	x8, [x8, #8]
  40ab98:	ldr	x9, [sp, #24]
  40ab9c:	ldr	x9, [x9, #16]
  40aba0:	cmp	x8, x9
  40aba4:	cset	w10, ls  // ls = plast
  40aba8:	and	w10, w10, #0x1
  40abac:	sturb	w10, [x29, #-1]
  40abb0:	b	40abf8 <wcrtomb@plt+0x7e48>
  40abb4:	ldr	x0, [sp, #24]
  40abb8:	bl	409ea8 <wcrtomb@plt+0x70f8>
  40abbc:	and	w8, w0, #0x1
  40abc0:	sturb	w8, [x29, #-1]
  40abc4:	b	40abf8 <wcrtomb@plt+0x7e48>
  40abc8:	ldur	x8, [x29, #-16]
  40abcc:	ldr	x8, [x8, #8]
  40abd0:	ldr	x9, [sp, #24]
  40abd4:	ldr	x9, [x9, #16]
  40abd8:	cmp	x8, x9
  40abdc:	cset	w10, eq  // eq = none
  40abe0:	and	w10, w10, #0x1
  40abe4:	sturb	w10, [x29, #-1]
  40abe8:	b	40abf8 <wcrtomb@plt+0x7e48>
  40abec:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40abf0:	add	x0, x0, #0xf39
  40abf4:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40abf8:	ldurb	w8, [x29, #-1]
  40abfc:	and	w0, w8, #0x1
  40ac00:	ldp	x29, x30, [sp, #48]
  40ac04:	add	sp, sp, #0x40
  40ac08:	ret
  40ac0c:	sub	sp, sp, #0x30
  40ac10:	stp	x29, x30, [sp, #32]
  40ac14:	add	x29, sp, #0x20
  40ac18:	str	x0, [sp, #16]
  40ac1c:	ldr	x0, [sp, #16]
  40ac20:	bl	408948 <wcrtomb@plt+0x5b98>
  40ac24:	ldr	x8, [sp, #16]
  40ac28:	ldr	x8, [x8]
  40ac2c:	ldr	x8, [x8]
  40ac30:	cbnz	x8, 40ac44 <wcrtomb@plt+0x7e94>
  40ac34:	mov	w8, #0x1                   	// #1
  40ac38:	and	w8, w8, #0x1
  40ac3c:	sturb	w8, [x29, #-1]
  40ac40:	b	40acac <wcrtomb@plt+0x7efc>
  40ac44:	ldr	x8, [sp, #16]
  40ac48:	ldr	x9, [x8]
  40ac4c:	add	x10, x9, #0x8
  40ac50:	str	x10, [x8]
  40ac54:	ldr	x0, [x9]
  40ac58:	ldr	x1, [sp, #16]
  40ac5c:	bl	408c94 <wcrtomb@plt+0x5ee4>
  40ac60:	ldr	x8, [sp, #16]
  40ac64:	ldr	x8, [x8, #184]
  40ac68:	cbz	x8, 40aca8 <wcrtomb@plt+0x7ef8>
  40ac6c:	ldr	x8, [sp, #16]
  40ac70:	ldr	x0, [x8, #184]
  40ac74:	bl	402a20 <getc_unlocked@plt>
  40ac78:	str	w0, [sp, #12]
  40ac7c:	mov	w9, #0xffffffff            	// #-1
  40ac80:	cmp	w0, w9
  40ac84:	b.eq	40aca8 <wcrtomb@plt+0x7ef8>  // b.none
  40ac88:	ldr	w0, [sp, #12]
  40ac8c:	ldr	x8, [sp, #16]
  40ac90:	ldr	x1, [x8, #184]
  40ac94:	bl	402b50 <ungetc@plt>
  40ac98:	mov	w9, wzr
  40ac9c:	and	w9, w9, #0x1
  40aca0:	sturb	w9, [x29, #-1]
  40aca4:	b	40acac <wcrtomb@plt+0x7efc>
  40aca8:	b	40ac1c <wcrtomb@plt+0x7e6c>
  40acac:	ldurb	w8, [x29, #-1]
  40acb0:	and	w0, w8, #0x1
  40acb4:	ldp	x29, x30, [sp, #32]
  40acb8:	add	sp, sp, #0x30
  40acbc:	ret
  40acc0:	sub	sp, sp, #0x50
  40acc4:	stp	x29, x30, [sp, #64]
  40acc8:	add	x29, sp, #0x40
  40accc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40acd0:	add	x8, x8, #0x628
  40acd4:	stur	x0, [x29, #-8]
  40acd8:	stur	x1, [x29, #-16]
  40acdc:	stur	x2, [x29, #-24]
  40ace0:	stur	wzr, [x29, #-28]
  40ace4:	str	x8, [sp, #16]
  40ace8:	ldur	x8, [x29, #-16]
  40acec:	cbz	x8, 40ae64 <wcrtomb@plt+0x80b4>
  40acf0:	ldur	x8, [x29, #-16]
  40acf4:	ldr	w9, [x8, #16]
  40acf8:	str	w9, [sp, #32]
  40acfc:	ldur	x8, [x29, #-16]
  40ad00:	ldr	w9, [x8, #20]
  40ad04:	and	w9, w9, #0xc
  40ad08:	cbz	w9, 40ad1c <wcrtomb@plt+0x7f6c>
  40ad0c:	ldur	x8, [x29, #-16]
  40ad10:	ldr	w9, [x8, #20]
  40ad14:	str	w9, [sp, #12]
  40ad18:	b	40ad30 <wcrtomb@plt+0x7f80>
  40ad1c:	ldur	x8, [x29, #-16]
  40ad20:	ldr	w9, [x8, #20]
  40ad24:	ldur	w10, [x29, #-28]
  40ad28:	orr	w9, w9, w10
  40ad2c:	str	w9, [sp, #12]
  40ad30:	ldr	w8, [sp, #12]
  40ad34:	str	w8, [sp, #28]
  40ad38:	stur	wzr, [x29, #-28]
  40ad3c:	ldur	x9, [x29, #-16]
  40ad40:	ldr	x9, [x9, #8]
  40ad44:	cbz	x9, 40ad70 <wcrtomb@plt+0x7fc0>
  40ad48:	ldur	x0, [x29, #-8]
  40ad4c:	ldur	x8, [x29, #-16]
  40ad50:	ldr	x1, [x8]
  40ad54:	ldur	x8, [x29, #-16]
  40ad58:	ldr	x2, [x8, #8]
  40ad5c:	ldr	w3, [sp, #28]
  40ad60:	bl	40ae70 <wcrtomb@plt+0x80c0>
  40ad64:	ldr	w9, [sp, #28]
  40ad68:	and	w9, w9, #0xfffffff3
  40ad6c:	str	w9, [sp, #28]
  40ad70:	ldr	w8, [sp, #32]
  40ad74:	mov	w9, wzr
  40ad78:	cmp	w9, w8
  40ad7c:	cset	w8, gt
  40ad80:	tbnz	w8, #0, 40ae54 <wcrtomb@plt+0x80a4>
  40ad84:	ldrsw	x8, [sp, #32]
  40ad88:	ldur	x9, [x29, #-24]
  40ad8c:	ldr	x9, [x9]
  40ad90:	cmp	x8, x9
  40ad94:	b.cs	40ae54 <wcrtomb@plt+0x80a4>  // b.hs, b.nlast
  40ad98:	ldur	x8, [x29, #-24]
  40ad9c:	ldr	x8, [x8, #16]
  40ada0:	ldrsw	x9, [sp, #32]
  40ada4:	ldr	x8, [x8, x9, lsl #3]
  40ada8:	ldur	x9, [x29, #-24]
  40adac:	ldr	x9, [x9, #8]
  40adb0:	ldrsw	x10, [sp, #32]
  40adb4:	ldr	x9, [x9, x10, lsl #3]
  40adb8:	cmp	x8, x9
  40adbc:	b.ne	40ade0 <wcrtomb@plt+0x8030>  // b.any
  40adc0:	ldur	x8, [x29, #-16]
  40adc4:	ldr	w9, [x8, #20]
  40adc8:	and	w9, w9, #0xc
  40adcc:	cbz	w9, 40ade0 <wcrtomb@plt+0x8030>
  40add0:	ldr	w8, [sp, #28]
  40add4:	and	w8, w8, #0xc
  40add8:	stur	w8, [x29, #-28]
  40addc:	b	40ae54 <wcrtomb@plt+0x80a4>
  40ade0:	ldur	x8, [x29, #-24]
  40ade4:	ldr	x8, [x8, #16]
  40ade8:	ldrsw	x9, [sp, #32]
  40adec:	ldr	x8, [x8, x9, lsl #3]
  40adf0:	ldur	x9, [x29, #-24]
  40adf4:	ldr	x9, [x9, #8]
  40adf8:	ldrsw	x10, [sp, #32]
  40adfc:	ldr	x9, [x9, x10, lsl #3]
  40ae00:	cmp	x8, x9
  40ae04:	b.eq	40ae54 <wcrtomb@plt+0x80a4>  // b.none
  40ae08:	ldur	x0, [x29, #-8]
  40ae0c:	ldr	x8, [sp, #16]
  40ae10:	ldr	x9, [x8, #8]
  40ae14:	ldur	x10, [x29, #-24]
  40ae18:	ldr	x10, [x10, #8]
  40ae1c:	ldrsw	x11, [sp, #32]
  40ae20:	ldr	x10, [x10, x11, lsl #3]
  40ae24:	add	x1, x9, x10
  40ae28:	ldur	x9, [x29, #-24]
  40ae2c:	ldr	x9, [x9, #16]
  40ae30:	ldrsw	x10, [sp, #32]
  40ae34:	ldr	x9, [x9, x10, lsl #3]
  40ae38:	ldur	x10, [x29, #-24]
  40ae3c:	ldr	x10, [x10, #8]
  40ae40:	ldrsw	x11, [sp, #32]
  40ae44:	ldr	x10, [x10, x11, lsl #3]
  40ae48:	subs	x2, x9, x10
  40ae4c:	ldr	w3, [sp, #28]
  40ae50:	bl	40ae70 <wcrtomb@plt+0x80c0>
  40ae54:	ldur	x8, [x29, #-16]
  40ae58:	ldr	x8, [x8, #24]
  40ae5c:	stur	x8, [x29, #-16]
  40ae60:	b	40ace8 <wcrtomb@plt+0x7f38>
  40ae64:	ldp	x29, x30, [sp, #64]
  40ae68:	add	sp, sp, #0x50
  40ae6c:	ret
  40ae70:	sub	sp, sp, #0xb0
  40ae74:	stp	x29, x30, [sp, #160]
  40ae78:	add	x29, sp, #0xa0
  40ae7c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40ae80:	add	x8, x8, #0x8dc
  40ae84:	stur	x0, [x29, #-8]
  40ae88:	stur	x1, [x29, #-16]
  40ae8c:	stur	x2, [x29, #-24]
  40ae90:	stur	w3, [x29, #-28]
  40ae94:	ldur	w9, [x29, #-28]
  40ae98:	stur	x8, [x29, #-64]
  40ae9c:	cbnz	w9, 40aeb4 <wcrtomb@plt+0x8104>
  40aea0:	ldur	x0, [x29, #-8]
  40aea4:	ldur	x1, [x29, #-16]
  40aea8:	ldur	x2, [x29, #-24]
  40aeac:	bl	4091e4 <wcrtomb@plt+0x6434>
  40aeb0:	b	40b288 <wcrtomb@plt+0x84d8>
  40aeb4:	ldur	x8, [x29, #-8]
  40aeb8:	ldr	x8, [x8, #24]
  40aebc:	ldur	x9, [x29, #-8]
  40aec0:	ldr	x9, [x9, #16]
  40aec4:	subs	x8, x8, x9
  40aec8:	ldur	x9, [x29, #-24]
  40aecc:	ldur	x10, [x29, #-64]
  40aed0:	ldrsw	x11, [x10]
  40aed4:	mul	x9, x9, x11
  40aed8:	cmp	x8, x9
  40aedc:	b.cs	40af04 <wcrtomb@plt+0x8154>  // b.hs, b.nlast
  40aee0:	ldur	x0, [x29, #-8]
  40aee4:	ldur	x8, [x29, #-8]
  40aee8:	ldr	x8, [x8, #16]
  40aeec:	ldur	x9, [x29, #-24]
  40aef0:	ldur	x10, [x29, #-64]
  40aef4:	ldrsw	x11, [x10]
  40aef8:	mul	x9, x9, x11
  40aefc:	add	x1, x8, x9
  40af00:	bl	40933c <wcrtomb@plt+0x658c>
  40af04:	ldur	x8, [x29, #-8]
  40af08:	ldur	x8, [x8, #36]
  40af0c:	stur	x8, [x29, #-40]
  40af10:	ldur	x8, [x29, #-24]
  40af14:	cbz	x8, 40b288 <wcrtomb@plt+0x84d8>
  40af18:	ldur	x8, [x29, #-64]
  40af1c:	ldr	w9, [x8]
  40af20:	cmp	w9, #0x1
  40af24:	b.ne	40af4c <wcrtomb@plt+0x819c>  // b.any
  40af28:	mov	x8, #0x1                   	// #1
  40af2c:	ldur	x9, [x29, #-16]
  40af30:	ldrb	w0, [x9]
  40af34:	stur	x8, [x29, #-72]
  40af38:	bl	402a60 <btowc@plt>
  40af3c:	stur	w0, [x29, #-44]
  40af40:	ldur	x8, [x29, #-72]
  40af44:	str	x8, [sp, #80]
  40af48:	b	40af64 <wcrtomb@plt+0x81b4>
  40af4c:	ldur	x1, [x29, #-16]
  40af50:	ldur	x2, [x29, #-24]
  40af54:	sub	x0, x29, #0x2c
  40af58:	sub	x3, x29, #0x28
  40af5c:	bl	41da58 <wcrtomb@plt+0x1aca8>
  40af60:	str	x0, [sp, #80]
  40af64:	ldr	x8, [sp, #80]
  40af68:	stur	x8, [x29, #-56]
  40af6c:	ldur	x8, [x29, #-56]
  40af70:	mov	x9, #0xffffffffffffffff    	// #-1
  40af74:	cmp	x8, x9
  40af78:	b.ne	40aff0 <wcrtomb@plt+0x8240>  // b.any
  40af7c:	ldur	w8, [x29, #-28]
  40af80:	and	w8, w8, #0xfffffff3
  40af84:	stur	w8, [x29, #-28]
  40af88:	ldur	w8, [x29, #-28]
  40af8c:	cbnz	w8, 40afa4 <wcrtomb@plt+0x81f4>
  40af90:	ldur	x0, [x29, #-8]
  40af94:	ldur	x1, [x29, #-16]
  40af98:	ldur	x2, [x29, #-24]
  40af9c:	bl	4091e4 <wcrtomb@plt+0x6434>
  40afa0:	b	40b288 <wcrtomb@plt+0x84d8>
  40afa4:	ldur	x0, [x29, #-8]
  40afa8:	ldur	x1, [x29, #-16]
  40afac:	mov	x8, #0x1                   	// #1
  40afb0:	mov	x2, x8
  40afb4:	str	x8, [sp, #72]
  40afb8:	bl	4091e4 <wcrtomb@plt+0x6434>
  40afbc:	ldur	x8, [x29, #-8]
  40afc0:	stur	xzr, [x8, #36]
  40afc4:	ldr	x8, [sp, #72]
  40afc8:	stur	x8, [x29, #-56]
  40afcc:	ldur	x9, [x29, #-56]
  40afd0:	ldur	x10, [x29, #-16]
  40afd4:	add	x9, x10, x9
  40afd8:	stur	x9, [x29, #-16]
  40afdc:	ldur	x9, [x29, #-56]
  40afe0:	ldur	x10, [x29, #-24]
  40afe4:	subs	x9, x10, x9
  40afe8:	stur	x9, [x29, #-24]
  40afec:	b	40af10 <wcrtomb@plt+0x8160>
  40aff0:	ldur	x8, [x29, #-56]
  40aff4:	cbz	x8, 40b008 <wcrtomb@plt+0x8258>
  40aff8:	ldur	x8, [x29, #-56]
  40affc:	mov	x9, #0xfffffffffffffffe    	// #-2
  40b000:	cmp	x8, x9
  40b004:	b.ne	40b01c <wcrtomb@plt+0x826c>  // b.any
  40b008:	ldur	x0, [x29, #-8]
  40b00c:	ldur	x1, [x29, #-16]
  40b010:	ldur	x2, [x29, #-24]
  40b014:	bl	4091e4 <wcrtomb@plt+0x6434>
  40b018:	b	40b288 <wcrtomb@plt+0x84d8>
  40b01c:	ldur	x8, [x29, #-56]
  40b020:	ldur	x9, [x29, #-16]
  40b024:	add	x8, x9, x8
  40b028:	stur	x8, [x29, #-16]
  40b02c:	ldur	x8, [x29, #-56]
  40b030:	ldur	x9, [x29, #-24]
  40b034:	subs	x8, x9, x8
  40b038:	stur	x8, [x29, #-24]
  40b03c:	ldur	w10, [x29, #-28]
  40b040:	and	w10, w10, #0xc
  40b044:	cbz	w10, 40b17c <wcrtomb@plt+0x83cc>
  40b048:	ldur	w8, [x29, #-28]
  40b04c:	and	w8, w8, #0x4
  40b050:	cbz	w8, 40b064 <wcrtomb@plt+0x82b4>
  40b054:	ldur	w0, [x29, #-44]
  40b058:	bl	402ca0 <towupper@plt>
  40b05c:	stur	w0, [x29, #-44]
  40b060:	b	40b070 <wcrtomb@plt+0x82c0>
  40b064:	ldur	w0, [x29, #-44]
  40b068:	bl	402d60 <towlower@plt>
  40b06c:	stur	w0, [x29, #-44]
  40b070:	ldur	w8, [x29, #-28]
  40b074:	and	w8, w8, #0xfffffff3
  40b078:	stur	w8, [x29, #-28]
  40b07c:	ldur	w8, [x29, #-28]
  40b080:	cbnz	w8, 40b178 <wcrtomb@plt+0x83c8>
  40b084:	ldur	x8, [x29, #-64]
  40b088:	ldr	w9, [x8]
  40b08c:	cmp	w9, #0x1
  40b090:	b.ne	40b0c8 <wcrtomb@plt+0x8318>  // b.any
  40b094:	mov	x8, #0x1                   	// #1
  40b098:	ldur	w0, [x29, #-44]
  40b09c:	str	x8, [sp, #64]
  40b0a0:	bl	402840 <wctob@plt>
  40b0a4:	ldur	x8, [x29, #-8]
  40b0a8:	ldr	x8, [x8, #8]
  40b0ac:	ldur	x9, [x29, #-8]
  40b0b0:	ldr	x9, [x9, #16]
  40b0b4:	add	x8, x8, x9
  40b0b8:	strb	w0, [x8]
  40b0bc:	ldr	x8, [sp, #64]
  40b0c0:	str	x8, [sp, #56]
  40b0c4:	b	40b0f0 <wcrtomb@plt+0x8340>
  40b0c8:	ldur	x8, [x29, #-8]
  40b0cc:	ldr	x8, [x8, #8]
  40b0d0:	ldur	x9, [x29, #-8]
  40b0d4:	ldr	x9, [x9, #16]
  40b0d8:	add	x0, x8, x9
  40b0dc:	ldur	w1, [x29, #-44]
  40b0e0:	ldur	x8, [x29, #-8]
  40b0e4:	add	x2, x8, #0x24
  40b0e8:	bl	402db0 <wcrtomb@plt>
  40b0ec:	str	x0, [sp, #56]
  40b0f0:	ldr	x8, [sp, #56]
  40b0f4:	stur	x8, [x29, #-56]
  40b0f8:	ldur	x8, [x29, #-56]
  40b0fc:	ldur	x9, [x29, #-8]
  40b100:	ldr	x10, [x9, #16]
  40b104:	add	x8, x10, x8
  40b108:	str	x8, [x9, #16]
  40b10c:	ldur	x8, [x29, #-56]
  40b110:	mov	x9, #0xffffffffffffffff    	// #-1
  40b114:	cmp	x8, x9
  40b118:	b.eq	40b12c <wcrtomb@plt+0x837c>  // b.none
  40b11c:	ldur	x8, [x29, #-56]
  40b120:	mov	x9, #0xfffffffffffffffe    	// #-2
  40b124:	cmp	x8, x9
  40b128:	b.ne	40b164 <wcrtomb@plt+0x83b4>  // b.any
  40b12c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b130:	add	x8, x8, #0x500
  40b134:	ldr	x0, [x8]
  40b138:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40b13c:	add	x8, x8, #0xf98
  40b140:	str	x0, [sp, #48]
  40b144:	mov	x0, x8
  40b148:	bl	402d40 <gettext@plt>
  40b14c:	ldr	x8, [sp, #48]
  40b150:	str	x0, [sp, #40]
  40b154:	mov	x0, x8
  40b158:	ldr	x1, [sp, #40]
  40b15c:	bl	402d70 <fprintf@plt>
  40b160:	bl	402a70 <abort@plt>
  40b164:	ldur	x0, [x29, #-8]
  40b168:	ldur	x1, [x29, #-16]
  40b16c:	ldur	x2, [x29, #-24]
  40b170:	bl	4091e4 <wcrtomb@plt+0x6434>
  40b174:	b	40b288 <wcrtomb@plt+0x84d8>
  40b178:	b	40b1a4 <wcrtomb@plt+0x83f4>
  40b17c:	ldur	w8, [x29, #-28]
  40b180:	and	w8, w8, #0x1
  40b184:	cbz	w8, 40b198 <wcrtomb@plt+0x83e8>
  40b188:	ldur	w0, [x29, #-44]
  40b18c:	bl	402ca0 <towupper@plt>
  40b190:	stur	w0, [x29, #-44]
  40b194:	b	40b1a4 <wcrtomb@plt+0x83f4>
  40b198:	ldur	w0, [x29, #-44]
  40b19c:	bl	402d60 <towlower@plt>
  40b1a0:	stur	w0, [x29, #-44]
  40b1a4:	ldur	x8, [x29, #-64]
  40b1a8:	ldr	w9, [x8]
  40b1ac:	cmp	w9, #0x1
  40b1b0:	b.ne	40b1e8 <wcrtomb@plt+0x8438>  // b.any
  40b1b4:	mov	x8, #0x1                   	// #1
  40b1b8:	ldur	w0, [x29, #-44]
  40b1bc:	str	x8, [sp, #32]
  40b1c0:	bl	402840 <wctob@plt>
  40b1c4:	ldur	x8, [x29, #-8]
  40b1c8:	ldr	x8, [x8, #8]
  40b1cc:	ldur	x9, [x29, #-8]
  40b1d0:	ldr	x9, [x9, #16]
  40b1d4:	add	x8, x8, x9
  40b1d8:	strb	w0, [x8]
  40b1dc:	ldr	x8, [sp, #32]
  40b1e0:	str	x8, [sp, #24]
  40b1e4:	b	40b210 <wcrtomb@plt+0x8460>
  40b1e8:	ldur	x8, [x29, #-8]
  40b1ec:	ldr	x8, [x8, #8]
  40b1f0:	ldur	x9, [x29, #-8]
  40b1f4:	ldr	x9, [x9, #16]
  40b1f8:	add	x0, x8, x9
  40b1fc:	ldur	w1, [x29, #-44]
  40b200:	ldur	x8, [x29, #-8]
  40b204:	add	x2, x8, #0x24
  40b208:	bl	402db0 <wcrtomb@plt>
  40b20c:	str	x0, [sp, #24]
  40b210:	ldr	x8, [sp, #24]
  40b214:	stur	x8, [x29, #-56]
  40b218:	ldur	x8, [x29, #-56]
  40b21c:	ldur	x9, [x29, #-8]
  40b220:	ldr	x10, [x9, #16]
  40b224:	add	x8, x10, x8
  40b228:	str	x8, [x9, #16]
  40b22c:	ldur	x8, [x29, #-56]
  40b230:	mov	x9, #0xffffffffffffffff    	// #-1
  40b234:	cmp	x8, x9
  40b238:	b.eq	40b24c <wcrtomb@plt+0x849c>  // b.none
  40b23c:	ldur	x8, [x29, #-56]
  40b240:	mov	x9, #0xfffffffffffffffe    	// #-2
  40b244:	cmp	x8, x9
  40b248:	b.ne	40b284 <wcrtomb@plt+0x84d4>  // b.any
  40b24c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b250:	add	x8, x8, #0x500
  40b254:	ldr	x0, [x8]
  40b258:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40b25c:	add	x8, x8, #0xf98
  40b260:	str	x0, [sp, #16]
  40b264:	mov	x0, x8
  40b268:	bl	402d40 <gettext@plt>
  40b26c:	ldr	x8, [sp, #16]
  40b270:	str	x0, [sp, #8]
  40b274:	mov	x0, x8
  40b278:	ldr	x1, [sp, #8]
  40b27c:	bl	402d70 <fprintf@plt>
  40b280:	bl	402a70 <abort@plt>
  40b284:	b	40af10 <wcrtomb@plt+0x8160>
  40b288:	ldp	x29, x30, [sp, #160]
  40b28c:	add	sp, sp, #0xb0
  40b290:	ret
  40b294:	sub	sp, sp, #0x50
  40b298:	stp	x29, x30, [sp, #64]
  40b29c:	add	x29, sp, #0x40
  40b2a0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b2a4:	add	x8, x8, #0x760
  40b2a8:	stur	x0, [x29, #-8]
  40b2ac:	ldur	x0, [x29, #-8]
  40b2b0:	str	x8, [sp, #8]
  40b2b4:	bl	4026f0 <strlen@plt>
  40b2b8:	str	w0, [sp, #20]
  40b2bc:	ldr	x8, [sp, #8]
  40b2c0:	ldr	x0, [x8]
  40b2c4:	bl	4026f0 <strlen@plt>
  40b2c8:	str	w0, [sp, #16]
  40b2cc:	ldr	x8, [sp, #8]
  40b2d0:	ldr	x9, [x8]
  40b2d4:	mov	x10, #0xffffffffffffffff    	// #-1
  40b2d8:	add	x9, x9, x10
  40b2dc:	stur	x9, [x29, #-24]
  40b2e0:	ldur	x9, [x29, #-24]
  40b2e4:	add	x9, x9, #0x1
  40b2e8:	stur	x9, [x29, #-16]
  40b2ec:	ldur	x0, [x29, #-16]
  40b2f0:	mov	w1, #0x2a                  	// #42
  40b2f4:	bl	402b80 <strchr@plt>
  40b2f8:	stur	x0, [x29, #-24]
  40b2fc:	cbz	x0, 40b324 <wcrtomb@plt+0x8574>
  40b300:	ldr	w8, [sp, #20]
  40b304:	subs	w8, w8, #0x1
  40b308:	ldr	w9, [sp, #16]
  40b30c:	add	w8, w9, w8
  40b310:	str	w8, [sp, #16]
  40b314:	ldur	x8, [x29, #-24]
  40b318:	add	x8, x8, #0x1
  40b31c:	stur	x8, [x29, #-16]
  40b320:	b	40b2ec <wcrtomb@plt+0x853c>
  40b324:	ldr	w8, [sp, #16]
  40b328:	add	w8, w8, #0x1
  40b32c:	mov	w0, w8
  40b330:	sxtw	x0, w0
  40b334:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  40b338:	str	x0, [sp, #32]
  40b33c:	str	x0, [sp, #24]
  40b340:	ldr	x9, [sp, #8]
  40b344:	ldr	x10, [x9]
  40b348:	mov	x11, #0xffffffffffffffff    	// #-1
  40b34c:	add	x10, x10, x11
  40b350:	stur	x10, [x29, #-24]
  40b354:	ldur	x10, [x29, #-24]
  40b358:	add	x10, x10, #0x1
  40b35c:	stur	x10, [x29, #-16]
  40b360:	ldur	x0, [x29, #-16]
  40b364:	mov	w1, #0x2a                  	// #42
  40b368:	bl	402b80 <strchr@plt>
  40b36c:	stur	x0, [x29, #-24]
  40b370:	cbz	x0, 40b3d0 <wcrtomb@plt+0x8620>
  40b374:	ldr	x0, [sp, #24]
  40b378:	ldur	x1, [x29, #-16]
  40b37c:	ldur	x8, [x29, #-24]
  40b380:	ldur	x9, [x29, #-16]
  40b384:	subs	x2, x8, x9
  40b388:	bl	4026a0 <memcpy@plt>
  40b38c:	ldur	x8, [x29, #-24]
  40b390:	ldur	x9, [x29, #-16]
  40b394:	subs	x8, x8, x9
  40b398:	ldr	x9, [sp, #24]
  40b39c:	add	x8, x9, x8
  40b3a0:	str	x8, [sp, #24]
  40b3a4:	ldr	x0, [sp, #24]
  40b3a8:	ldur	x1, [x29, #-8]
  40b3ac:	bl	402bd0 <strcpy@plt>
  40b3b0:	ldrsw	x8, [sp, #20]
  40b3b4:	ldr	x9, [sp, #24]
  40b3b8:	add	x8, x9, x8
  40b3bc:	str	x8, [sp, #24]
  40b3c0:	ldur	x8, [x29, #-24]
  40b3c4:	add	x8, x8, #0x1
  40b3c8:	stur	x8, [x29, #-16]
  40b3cc:	b	40b360 <wcrtomb@plt+0x85b0>
  40b3d0:	ldr	x0, [sp, #24]
  40b3d4:	ldur	x1, [x29, #-16]
  40b3d8:	bl	402bd0 <strcpy@plt>
  40b3dc:	ldr	x8, [sp, #32]
  40b3e0:	mov	x0, x8
  40b3e4:	ldp	x29, x30, [sp, #64]
  40b3e8:	add	sp, sp, #0x50
  40b3ec:	ret
  40b3f0:	sub	sp, sp, #0x60
  40b3f4:	stp	x29, x30, [sp, #80]
  40b3f8:	add	x29, sp, #0x50
  40b3fc:	mov	x8, xzr
  40b400:	mov	x2, #0x1                   	// #1
  40b404:	mov	w9, #0x1                   	// #1
  40b408:	sub	x10, x29, #0x11
  40b40c:	stur	w0, [x29, #-8]
  40b410:	stur	x1, [x29, #-16]
  40b414:	ldur	w11, [x29, #-8]
  40b418:	sturb	w11, [x29, #-17]
  40b41c:	ldur	x0, [x29, #-16]
  40b420:	str	x8, [sp, #40]
  40b424:	str	x2, [sp, #32]
  40b428:	str	w9, [sp, #28]
  40b42c:	str	x10, [sp, #16]
  40b430:	bl	402aa0 <mbsinit@plt>
  40b434:	cmp	w0, #0x0
  40b438:	cset	w9, ne  // ne = any
  40b43c:	ldr	w11, [sp, #28]
  40b440:	eor	w9, w9, w11
  40b444:	and	w9, w9, #0x1
  40b448:	stur	w9, [x29, #-24]
  40b44c:	ldur	x3, [x29, #-16]
  40b450:	ldr	x0, [sp, #40]
  40b454:	ldr	x1, [sp, #16]
  40b458:	ldr	x2, [sp, #32]
  40b45c:	bl	41da58 <wcrtomb@plt+0x1aca8>
  40b460:	stur	w0, [x29, #-28]
  40b464:	ldur	w9, [x29, #-28]
  40b468:	add	w9, w9, #0x2
  40b46c:	mov	w8, w9
  40b470:	ubfx	x8, x8, #0, #32
  40b474:	cmp	x8, #0x3
  40b478:	str	x8, [sp, #8]
  40b47c:	b.hi	40b4cc <wcrtomb@plt+0x871c>  // b.pmore
  40b480:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40b484:	add	x8, x8, #0xfc8
  40b488:	ldr	x11, [sp, #8]
  40b48c:	ldrsw	x10, [x8, x11, lsl #2]
  40b490:	add	x9, x8, x10
  40b494:	br	x9
  40b498:	mov	w8, #0x1                   	// #1
  40b49c:	stur	w8, [x29, #-4]
  40b4a0:	b	40b4e0 <wcrtomb@plt+0x8730>
  40b4a4:	ldur	x8, [x29, #-16]
  40b4a8:	str	xzr, [x8]
  40b4ac:	stur	wzr, [x29, #-4]
  40b4b0:	b	40b4e0 <wcrtomb@plt+0x8730>
  40b4b4:	ldur	w8, [x29, #-24]
  40b4b8:	stur	w8, [x29, #-4]
  40b4bc:	b	40b4e0 <wcrtomb@plt+0x8730>
  40b4c0:	mov	w8, #0x1                   	// #1
  40b4c4:	stur	w8, [x29, #-4]
  40b4c8:	b	40b4e0 <wcrtomb@plt+0x8730>
  40b4cc:	ldur	w1, [x29, #-8]
  40b4d0:	ldur	w2, [x29, #-28]
  40b4d4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40b4d8:	add	x0, x0, #0xfd8
  40b4dc:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40b4e0:	ldur	w0, [x29, #-4]
  40b4e4:	ldp	x29, x30, [sp, #80]
  40b4e8:	add	sp, sp, #0x60
  40b4ec:	ret
  40b4f0:	sub	sp, sp, #0x30
  40b4f4:	stp	x29, x30, [sp, #32]
  40b4f8:	add	x29, sp, #0x20
  40b4fc:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  40b500:	add	x1, x1, #0xfff
  40b504:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b508:	add	x8, x8, #0x8d8
  40b50c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b510:	add	x9, x9, #0x8dc
  40b514:	str	x1, [sp, #16]
  40b518:	str	x8, [sp, #8]
  40b51c:	str	x9, [sp]
  40b520:	bl	41a68c <wcrtomb@plt+0x178dc>
  40b524:	stur	x0, [x29, #-8]
  40b528:	ldur	x0, [x29, #-8]
  40b52c:	ldr	x1, [sp, #16]
  40b530:	bl	402b10 <strcmp@plt>
  40b534:	cmp	w0, #0x0
  40b538:	cset	w10, eq  // eq = none
  40b53c:	and	w10, w10, #0x1
  40b540:	ldr	x8, [sp, #8]
  40b544:	strb	w10, [x8]
  40b548:	bl	402b60 <__ctype_get_mb_cur_max@plt>
  40b54c:	ldr	x8, [sp]
  40b550:	str	w0, [x8]
  40b554:	ldp	x29, x30, [sp, #32]
  40b558:	add	sp, sp, #0x30
  40b55c:	ret
  40b560:	sub	sp, sp, #0x20
  40b564:	stp	x29, x30, [sp, #16]
  40b568:	add	x29, sp, #0x10
  40b56c:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40b570:	add	x8, x8, #0xbe9
  40b574:	str	x0, [sp, #8]
  40b578:	ldr	x1, [sp, #8]
  40b57c:	mov	x0, x8
  40b580:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40b584:	sub	sp, sp, #0x20
  40b588:	stp	x29, x30, [sp, #16]
  40b58c:	add	x29, sp, #0x10
  40b590:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40b594:	add	x8, x8, #0x5
  40b598:	str	x0, [sp, #8]
  40b59c:	mov	x0, x8
  40b5a0:	bl	402d20 <getenv@plt>
  40b5a4:	cbnz	x0, 40b5b0 <wcrtomb@plt+0x8800>
  40b5a8:	ldr	x0, [sp, #8]
  40b5ac:	bl	40b560 <wcrtomb@plt+0x87b0>
  40b5b0:	ldp	x29, x30, [sp, #16]
  40b5b4:	add	sp, sp, #0x20
  40b5b8:	ret
  40b5bc:	sub	sp, sp, #0x50
  40b5c0:	stp	x29, x30, [sp, #64]
  40b5c4:	add	x29, sp, #0x40
  40b5c8:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40b5cc:	add	x8, x8, #0x6e
  40b5d0:	add	x8, x8, #0x1f
  40b5d4:	stur	x0, [x29, #-16]
  40b5d8:	stur	w1, [x29, #-20]
  40b5dc:	stur	w2, [x29, #-24]
  40b5e0:	ldur	x0, [x29, #-16]
  40b5e4:	str	x8, [sp, #16]
  40b5e8:	bl	40db98 <wcrtomb@plt+0xade8>
  40b5ec:	cbnz	x0, 40b618 <wcrtomb@plt+0x8868>
  40b5f0:	ldur	w8, [x29, #-20]
  40b5f4:	cmp	w8, #0x0
  40b5f8:	cset	w8, le
  40b5fc:	tbnz	w8, #0, 40b60c <wcrtomb@plt+0x885c>
  40b600:	ldr	x0, [sp, #16]
  40b604:	bl	402d40 <gettext@plt>
  40b608:	bl	402ecc <wcrtomb@plt+0x11c>
  40b60c:	mov	x8, xzr
  40b610:	stur	x8, [x29, #-8]
  40b614:	b	40b6a4 <wcrtomb@plt+0x88f4>
  40b618:	ldur	x0, [x29, #-16]
  40b61c:	bl	40db98 <wcrtomb@plt+0xade8>
  40b620:	str	x0, [sp, #24]
  40b624:	ldr	x8, [sp, #24]
  40b628:	add	x8, x8, #0x60
  40b62c:	subs	x0, x8, #0x1
  40b630:	bl	41d908 <wcrtomb@plt+0x1ab58>
  40b634:	str	x0, [sp, #32]
  40b638:	ldur	w9, [x29, #-20]
  40b63c:	ldr	x8, [sp, #32]
  40b640:	str	w9, [x8, #64]
  40b644:	ldr	x8, [sp, #32]
  40b648:	add	x0, x8, #0x5a
  40b64c:	ldur	x8, [x29, #-16]
  40b650:	str	x0, [sp, #8]
  40b654:	mov	x0, x8
  40b658:	bl	40db80 <wcrtomb@plt+0xadd0>
  40b65c:	ldr	x2, [sp, #24]
  40b660:	ldr	x8, [sp, #8]
  40b664:	str	x0, [sp]
  40b668:	mov	x0, x8
  40b66c:	ldr	x1, [sp]
  40b670:	bl	4026a0 <memcpy@plt>
  40b674:	ldr	x8, [sp, #32]
  40b678:	add	x0, x8, #0x5a
  40b67c:	ldr	x1, [sp, #24]
  40b680:	mov	w2, #0x2                   	// #2
  40b684:	bl	402fbc <wcrtomb@plt+0x20c>
  40b688:	ldr	x8, [sp, #32]
  40b68c:	str	x0, [x8, #72]
  40b690:	ldr	x0, [sp, #32]
  40b694:	ldur	w1, [x29, #-24]
  40b698:	bl	40b6b4 <wcrtomb@plt+0x8904>
  40b69c:	ldr	x8, [sp, #32]
  40b6a0:	stur	x8, [x29, #-8]
  40b6a4:	ldur	x0, [x29, #-8]
  40b6a8:	ldp	x29, x30, [sp, #64]
  40b6ac:	add	sp, sp, #0x50
  40b6b0:	ret
  40b6b4:	sub	sp, sp, #0x120
  40b6b8:	stp	x29, x30, [sp, #256]
  40b6bc:	str	x28, [sp, #272]
  40b6c0:	add	x29, sp, #0x100
  40b6c4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b6c8:	add	x8, x8, #0x750
  40b6cc:	mov	x9, #0xb2fc                	// #45820
  40b6d0:	movk	x9, #0x3, lsl #16
  40b6d4:	mov	x10, #0x2c6                 	// #710
  40b6d8:	movk	x10, #0x101, lsl #16
  40b6dc:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b6e0:	add	x11, x11, #0x8e0
  40b6e4:	stur	x0, [x29, #-8]
  40b6e8:	stur	w1, [x29, #-12]
  40b6ec:	ldr	w12, [x8]
  40b6f0:	tst	w12, #0x1
  40b6f4:	csel	x8, x9, x10, ne  // ne = any
  40b6f8:	stur	w8, [x29, #-28]
  40b6fc:	ldursw	x9, [x29, #-28]
  40b700:	and	x9, x9, #0xffffffffffffff7f
  40b704:	stur	w9, [x29, #-28]
  40b708:	ldursw	x10, [x29, #-28]
  40b70c:	orr	x10, x10, #0x40000
  40b710:	stur	w10, [x29, #-28]
  40b714:	ldr	w8, [x11]
  40b718:	str	w8, [sp, #20]
  40b71c:	cbz	w8, 40b744 <wcrtomb@plt+0x8994>
  40b720:	b	40b724 <wcrtomb@plt+0x8974>
  40b724:	ldr	w8, [sp, #20]
  40b728:	cmp	w8, #0x1
  40b72c:	b.eq	40b754 <wcrtomb@plt+0x89a4>  // b.none
  40b730:	b	40b734 <wcrtomb@plt+0x8984>
  40b734:	ldr	w8, [sp, #20]
  40b738:	cmp	w8, #0x2
  40b73c:	b.eq	40b764 <wcrtomb@plt+0x89b4>  // b.none
  40b740:	b	40b794 <wcrtomb@plt+0x89e4>
  40b744:	ldursw	x8, [x29, #-28]
  40b748:	and	x8, x8, #0xfffffffffffdffff
  40b74c:	stur	w8, [x29, #-28]
  40b750:	b	40b794 <wcrtomb@plt+0x89e4>
  40b754:	ldursw	x8, [x29, #-28]
  40b758:	orr	x8, x8, #0x20000
  40b75c:	stur	w8, [x29, #-28]
  40b760:	b	40b794 <wcrtomb@plt+0x89e4>
  40b764:	ldursw	x8, [x29, #-28]
  40b768:	mov	x9, #0xa0000               	// #655360
  40b76c:	orr	x8, x8, x9
  40b770:	stur	w8, [x29, #-28]
  40b774:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b778:	add	x9, x9, #0x750
  40b77c:	ldr	w8, [x9]
  40b780:	and	w8, w8, #0x1
  40b784:	cbnz	w8, 40b794 <wcrtomb@plt+0x89e4>
  40b788:	ldursw	x8, [x29, #-28]
  40b78c:	orr	x8, x8, #0x400
  40b790:	stur	w8, [x29, #-28]
  40b794:	ldur	x8, [x29, #-8]
  40b798:	ldr	w9, [x8, #64]
  40b79c:	and	w9, w9, #0x2
  40b7a0:	cbz	w9, 40b7b4 <wcrtomb@plt+0x8a04>
  40b7a4:	ldursw	x8, [x29, #-28]
  40b7a8:	orr	x8, x8, #0x400000
  40b7ac:	stur	w8, [x29, #-28]
  40b7b0:	b	40b7c4 <wcrtomb@plt+0x8a14>
  40b7b4:	mov	x0, #0x100                 	// #256
  40b7b8:	bl	402890 <malloc@plt>
  40b7bc:	ldur	x8, [x29, #-8]
  40b7c0:	str	x0, [x8, #32]
  40b7c4:	ldur	w8, [x29, #-12]
  40b7c8:	mov	x9, #0x2000000             	// #33554432
  40b7cc:	mov	x10, xzr
  40b7d0:	cmp	w8, #0x0
  40b7d4:	csel	x9, x10, x9, ne  // ne = any
  40b7d8:	ldursw	x10, [x29, #-28]
  40b7dc:	orr	x9, x10, x9
  40b7e0:	stur	w9, [x29, #-28]
  40b7e4:	ldur	x10, [x29, #-8]
  40b7e8:	ldr	w8, [x10, #64]
  40b7ec:	and	w8, w8, #0x4
  40b7f0:	cbz	w8, 40b80c <wcrtomb@plt+0x8a5c>
  40b7f4:	ldursw	x8, [x29, #-28]
  40b7f8:	and	x8, x8, #0xffffffffffffffbf
  40b7fc:	stur	w8, [x29, #-28]
  40b800:	ldursw	x9, [x29, #-28]
  40b804:	orr	x9, x9, #0x100
  40b808:	stur	w9, [x29, #-28]
  40b80c:	ldursw	x0, [x29, #-28]
  40b810:	bl	41e654 <_obstack_memory_used@@Base+0x4b8>
  40b814:	ldur	x8, [x29, #-8]
  40b818:	add	x8, x8, #0x5a
  40b81c:	ldur	x9, [x29, #-8]
  40b820:	ldr	x1, [x9, #72]
  40b824:	ldur	x2, [x29, #-8]
  40b828:	mov	x0, x8
  40b82c:	bl	41e25c <_obstack_memory_used@@Base+0xc0>
  40b830:	stur	x0, [x29, #-24]
  40b834:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b838:	add	x8, x8, #0x468
  40b83c:	ldrb	w10, [x8]
  40b840:	mov	w11, #0x0                   	// #0
  40b844:	cmp	w10, #0xa
  40b848:	str	w11, [sp, #16]
  40b84c:	b.ne	40b864 <wcrtomb@plt+0x8ab4>  // b.any
  40b850:	ldur	x8, [x29, #-8]
  40b854:	ldr	w9, [x8, #64]
  40b858:	tst	w9, #0x4
  40b85c:	cset	w9, ne  // ne = any
  40b860:	str	w9, [sp, #16]
  40b864:	ldr	w8, [sp, #16]
  40b868:	and	w8, w8, #0x1
  40b86c:	ldur	x9, [x29, #-8]
  40b870:	ldrb	w10, [x9, #56]
  40b874:	and	w8, w8, #0x1
  40b878:	lsl	w8, w8, #7
  40b87c:	and	w10, w10, #0x7f
  40b880:	orr	w8, w10, w8
  40b884:	strb	w8, [x9, #56]
  40b888:	ldur	x9, [x29, #-8]
  40b88c:	mov	x11, xzr
  40b890:	str	x11, [x9, #40]
  40b894:	ldur	x9, [x29, #-24]
  40b898:	cbz	x9, 40b8a4 <wcrtomb@plt+0x8af4>
  40b89c:	ldur	x0, [x29, #-24]
  40b8a0:	bl	402ecc <wcrtomb@plt+0x11c>
  40b8a4:	ldur	w8, [x29, #-12]
  40b8a8:	cbz	w8, 40b914 <wcrtomb@plt+0x8b64>
  40b8ac:	ldur	x8, [x29, #-8]
  40b8b0:	ldr	x8, [x8, #48]
  40b8b4:	ldur	w9, [x29, #-12]
  40b8b8:	subs	w9, w9, #0x1
  40b8bc:	mov	w0, w9
  40b8c0:	sxtw	x10, w0
  40b8c4:	cmp	x8, x10
  40b8c8:	b.cs	40b914 <wcrtomb@plt+0x8b64>  // b.hs, b.nlast
  40b8cc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b8d0:	add	x8, x8, #0x8e0
  40b8d4:	ldr	w9, [x8]
  40b8d8:	cbnz	w9, 40b914 <wcrtomb@plt+0x8b64>
  40b8dc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40b8e0:	add	x0, x0, #0x43
  40b8e4:	bl	402d40 <gettext@plt>
  40b8e8:	ldur	w8, [x29, #-12]
  40b8ec:	subs	w2, w8, #0x1
  40b8f0:	add	x9, sp, #0x1c
  40b8f4:	str	x0, [sp, #8]
  40b8f8:	mov	x0, x9
  40b8fc:	ldr	x1, [sp, #8]
  40b900:	str	x9, [sp]
  40b904:	bl	402790 <sprintf@plt>
  40b908:	ldr	x9, [sp]
  40b90c:	mov	x0, x9
  40b910:	bl	402ecc <wcrtomb@plt+0x11c>
  40b914:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b918:	add	x8, x8, #0x468
  40b91c:	ldrb	w9, [x8]
  40b920:	mov	w10, #0x2                   	// #2
  40b924:	mov	w11, wzr
  40b928:	cmp	w9, #0xa
  40b92c:	csel	w9, w11, w10, eq  // eq = none
  40b930:	str	w9, [sp, #24]
  40b934:	bl	411590 <wcrtomb@plt+0xe7e0>
  40b938:	ldur	x8, [x29, #-8]
  40b93c:	str	x0, [x8, #80]
  40b940:	ldur	x8, [x29, #-8]
  40b944:	ldr	x0, [x8, #80]
  40b948:	ldursw	x2, [x29, #-28]
  40b94c:	ldr	w3, [sp, #24]
  40b950:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b954:	add	x1, x1, #0x8e4
  40b958:	bl	4115a8 <wcrtomb@plt+0xe7f8>
  40b95c:	ldur	x8, [x29, #-8]
  40b960:	add	x0, x8, #0x5a
  40b964:	ldur	x8, [x29, #-8]
  40b968:	ldr	x1, [x8, #72]
  40b96c:	ldur	x8, [x29, #-8]
  40b970:	ldr	x2, [x8, #80]
  40b974:	mov	w9, #0x1                   	// #1
  40b978:	and	w3, w9, #0x1
  40b97c:	bl	40f0ec <wcrtomb@plt+0xc33c>
  40b980:	ldur	x8, [x29, #-8]
  40b984:	ldr	x8, [x8, #72]
  40b988:	cmp	x8, #0x1
  40b98c:	b.ne	40b9c8 <wcrtomb@plt+0x8c18>  // b.any
  40b990:	ldur	x8, [x29, #-8]
  40b994:	ldrb	w9, [x8, #90]
  40b998:	cmp	w9, #0x5e
  40b99c:	b.ne	40b9ac <wcrtomb@plt+0x8bfc>  // b.any
  40b9a0:	ldur	x8, [x29, #-8]
  40b9a4:	mov	w9, #0x1                   	// #1
  40b9a8:	strb	w9, [x8, #88]
  40b9ac:	ldur	x8, [x29, #-8]
  40b9b0:	ldrb	w9, [x8, #90]
  40b9b4:	cmp	w9, #0x24
  40b9b8:	b.ne	40b9c8 <wcrtomb@plt+0x8c18>  // b.any
  40b9bc:	ldur	x8, [x29, #-8]
  40b9c0:	mov	w9, #0x1                   	// #1
  40b9c4:	strb	w9, [x8, #89]
  40b9c8:	ldr	x28, [sp, #272]
  40b9cc:	ldp	x29, x30, [sp, #256]
  40b9d0:	add	sp, sp, #0x120
  40b9d4:	ret
  40b9d8:	sub	sp, sp, #0x140
  40b9dc:	stp	x29, x30, [sp, #288]
  40b9e0:	str	x28, [sp, #304]
  40b9e4:	add	x29, sp, #0x120
  40b9e8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b9ec:	add	x8, x8, #0x748
  40b9f0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40b9f4:	add	x9, x9, #0x468
  40b9f8:	stur	x0, [x29, #-16]
  40b9fc:	stur	x1, [x29, #-24]
  40ba00:	stur	x2, [x29, #-32]
  40ba04:	stur	x3, [x29, #-40]
  40ba08:	stur	x4, [x29, #-48]
  40ba0c:	stur	w5, [x29, #-52]
  40ba10:	ldur	x10, [x29, #-16]
  40ba14:	str	x8, [sp, #136]
  40ba18:	str	x9, [sp, #128]
  40ba1c:	cbnz	x10, 40ba48 <wcrtomb@plt+0x8c98>
  40ba20:	ldr	x8, [sp, #136]
  40ba24:	ldr	x9, [x8]
  40ba28:	stur	x9, [x29, #-16]
  40ba2c:	ldr	x9, [x8]
  40ba30:	cbnz	x9, 40ba44 <wcrtomb@plt+0x8c94>
  40ba34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40ba38:	add	x0, x0, #0x6e
  40ba3c:	bl	402d40 <gettext@plt>
  40ba40:	bl	402ecc <wcrtomb@plt+0x11c>
  40ba44:	b	40ba54 <wcrtomb@plt+0x8ca4>
  40ba48:	ldur	x8, [x29, #-16]
  40ba4c:	ldr	x9, [sp, #136]
  40ba50:	str	x8, [x9]
  40ba54:	ldur	x8, [x29, #-32]
  40ba58:	mov	x9, #0x7fffffff            	// #2147483647
  40ba5c:	cmp	x8, x9
  40ba60:	b.cc	40ba74 <wcrtomb@plt+0x8cc4>  // b.lo, b.ul, b.last
  40ba64:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40ba68:	add	x0, x0, #0x15
  40ba6c:	bl	402d40 <gettext@plt>
  40ba70:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40ba74:	ldur	x8, [x29, #-16]
  40ba78:	ldrb	w9, [x8, #56]
  40ba7c:	mov	w10, #0x4                   	// #4
  40ba80:	lsr	w9, w9, w10
  40ba84:	and	w9, w9, #0x1
  40ba88:	and	w9, w9, #0xff
  40ba8c:	cbz	w9, 40badc <wcrtomb@plt+0x8d2c>
  40ba90:	ldur	w8, [x29, #-52]
  40ba94:	cbz	w8, 40badc <wcrtomb@plt+0x8d2c>
  40ba98:	ldur	x8, [x29, #-16]
  40ba9c:	ldr	x8, [x8, #80]
  40baa0:	cbz	x8, 40bac8 <wcrtomb@plt+0x8d18>
  40baa4:	ldur	x8, [x29, #-16]
  40baa8:	ldr	x0, [x8, #80]
  40baac:	bl	41008c <wcrtomb@plt+0xd2dc>
  40bab0:	ldur	x8, [x29, #-16]
  40bab4:	ldr	x0, [x8, #80]
  40bab8:	bl	402b40 <free@plt>
  40babc:	ldur	x8, [x29, #-16]
  40bac0:	mov	x9, xzr
  40bac4:	str	x9, [x8, #80]
  40bac8:	ldur	x0, [x29, #-16]
  40bacc:	bl	41f1a0 <_obstack_memory_used@@Base+0x1004>
  40bad0:	ldur	x0, [x29, #-16]
  40bad4:	ldur	w1, [x29, #-52]
  40bad8:	bl	40b6b4 <wcrtomb@plt+0x8904>
  40badc:	ldur	x8, [x29, #-16]
  40bae0:	ldrb	w9, [x8, #56]
  40bae4:	and	w9, w9, #0xfffffff9
  40bae8:	orr	w9, w9, #0x2
  40baec:	strb	w9, [x8, #56]
  40baf0:	ldur	x8, [x29, #-16]
  40baf4:	ldrb	w9, [x8, #88]
  40baf8:	tbnz	w9, #0, 40bb0c <wcrtomb@plt+0x8d5c>
  40bafc:	ldur	x8, [x29, #-16]
  40bb00:	ldrb	w9, [x8, #89]
  40bb04:	tbnz	w9, #0, 40bb0c <wcrtomb@plt+0x8d5c>
  40bb08:	b	40bd00 <wcrtomb@plt+0x8f50>
  40bb0c:	ldur	x8, [x29, #-16]
  40bb10:	ldrb	w9, [x8, #89]
  40bb14:	tbnz	w9, #0, 40bb1c <wcrtomb@plt+0x8d6c>
  40bb18:	b	40bb8c <wcrtomb@plt+0x8ddc>
  40bb1c:	mov	x8, xzr
  40bb20:	stur	x8, [x29, #-72]
  40bb24:	ldur	x8, [x29, #-16]
  40bb28:	ldr	w9, [x8, #64]
  40bb2c:	and	w9, w9, #0x4
  40bb30:	cbz	w9, 40bb5c <wcrtomb@plt+0x8dac>
  40bb34:	ldur	x8, [x29, #-24]
  40bb38:	ldur	x9, [x29, #-40]
  40bb3c:	add	x0, x8, x9
  40bb40:	ldr	x8, [sp, #128]
  40bb44:	ldrb	w1, [x8]
  40bb48:	ldur	x9, [x29, #-32]
  40bb4c:	ldur	x10, [x29, #-40]
  40bb50:	subs	x2, x9, x10
  40bb54:	bl	402c00 <memchr@plt>
  40bb58:	stur	x0, [x29, #-72]
  40bb5c:	ldur	x8, [x29, #-72]
  40bb60:	cbz	x8, 40bb78 <wcrtomb@plt+0x8dc8>
  40bb64:	ldur	x8, [x29, #-72]
  40bb68:	ldur	x9, [x29, #-24]
  40bb6c:	subs	x8, x8, x9
  40bb70:	str	x8, [sp, #120]
  40bb74:	b	40bb80 <wcrtomb@plt+0x8dd0>
  40bb78:	ldur	x8, [x29, #-32]
  40bb7c:	str	x8, [sp, #120]
  40bb80:	ldr	x8, [sp, #120]
  40bb84:	stur	x8, [x29, #-64]
  40bb88:	b	40bc2c <wcrtomb@plt+0x8e7c>
  40bb8c:	ldur	x8, [x29, #-40]
  40bb90:	cbnz	x8, 40bb9c <wcrtomb@plt+0x8dec>
  40bb94:	stur	xzr, [x29, #-64]
  40bb98:	b	40bc2c <wcrtomb@plt+0x8e7c>
  40bb9c:	ldur	x8, [x29, #-16]
  40bba0:	ldr	w9, [x8, #64]
  40bba4:	and	w9, w9, #0x4
  40bba8:	cbnz	w9, 40bbb4 <wcrtomb@plt+0x8e04>
  40bbac:	stur	wzr, [x29, #-4]
  40bbb0:	b	40c0e0 <wcrtomb@plt+0x9330>
  40bbb4:	ldur	x8, [x29, #-24]
  40bbb8:	ldur	x9, [x29, #-40]
  40bbbc:	subs	x9, x9, #0x1
  40bbc0:	ldrb	w10, [x8, x9]
  40bbc4:	ldr	x8, [sp, #128]
  40bbc8:	ldrb	w11, [x8]
  40bbcc:	cmp	w10, w11
  40bbd0:	b.ne	40bbe0 <wcrtomb@plt+0x8e30>  // b.any
  40bbd4:	ldur	x8, [x29, #-40]
  40bbd8:	stur	x8, [x29, #-64]
  40bbdc:	b	40bc2c <wcrtomb@plt+0x8e7c>
  40bbe0:	ldur	x8, [x29, #-24]
  40bbe4:	ldur	x9, [x29, #-40]
  40bbe8:	add	x0, x8, x9
  40bbec:	ldr	x8, [sp, #128]
  40bbf0:	ldrb	w1, [x8]
  40bbf4:	ldur	x9, [x29, #-32]
  40bbf8:	ldur	x10, [x29, #-40]
  40bbfc:	subs	x2, x9, x10
  40bc00:	bl	402c00 <memchr@plt>
  40bc04:	stur	x0, [x29, #-80]
  40bc08:	ldur	x8, [x29, #-80]
  40bc0c:	cbnz	x8, 40bc18 <wcrtomb@plt+0x8e68>
  40bc10:	stur	wzr, [x29, #-4]
  40bc14:	b	40c0e0 <wcrtomb@plt+0x9330>
  40bc18:	ldur	x8, [x29, #-80]
  40bc1c:	ldur	x9, [x29, #-24]
  40bc20:	subs	x8, x8, x9
  40bc24:	add	x8, x8, #0x1
  40bc28:	stur	x8, [x29, #-64]
  40bc2c:	ldur	w8, [x29, #-52]
  40bc30:	cbz	w8, 40bcf4 <wcrtomb@plt+0x8f44>
  40bc34:	ldur	x8, [x29, #-48]
  40bc38:	ldr	x8, [x8, #8]
  40bc3c:	cbnz	x8, 40bc84 <wcrtomb@plt+0x8ed4>
  40bc40:	mov	x8, #0x1                   	// #1
  40bc44:	mov	x0, x8
  40bc48:	mov	x9, #0x8                   	// #8
  40bc4c:	mov	x1, x9
  40bc50:	str	x8, [sp, #112]
  40bc54:	str	x9, [sp, #104]
  40bc58:	bl	41d930 <wcrtomb@plt+0x1ab80>
  40bc5c:	ldur	x8, [x29, #-48]
  40bc60:	str	x0, [x8, #8]
  40bc64:	ldr	x0, [sp, #112]
  40bc68:	ldr	x1, [sp, #104]
  40bc6c:	bl	41d930 <wcrtomb@plt+0x1ab80>
  40bc70:	ldur	x8, [x29, #-48]
  40bc74:	str	x0, [x8, #16]
  40bc78:	ldur	x8, [x29, #-48]
  40bc7c:	ldr	x9, [sp, #112]
  40bc80:	str	x9, [x8]
  40bc84:	ldur	x8, [x29, #-64]
  40bc88:	ldur	x9, [x29, #-48]
  40bc8c:	ldr	x9, [x9, #8]
  40bc90:	str	x8, [x9]
  40bc94:	ldur	x8, [x29, #-64]
  40bc98:	ldur	x9, [x29, #-48]
  40bc9c:	ldr	x9, [x9, #16]
  40bca0:	str	x8, [x9]
  40bca4:	mov	x8, #0x1                   	// #1
  40bca8:	stur	x8, [x29, #-88]
  40bcac:	ldur	x8, [x29, #-88]
  40bcb0:	ldur	x9, [x29, #-48]
  40bcb4:	ldr	x9, [x9]
  40bcb8:	cmp	x8, x9
  40bcbc:	b.cs	40bcf4 <wcrtomb@plt+0x8f44>  // b.hs, b.nlast
  40bcc0:	ldur	x8, [x29, #-48]
  40bcc4:	ldr	x8, [x8, #16]
  40bcc8:	ldur	x9, [x29, #-88]
  40bccc:	mov	x10, #0xffffffffffffffff    	// #-1
  40bcd0:	str	x10, [x8, x9, lsl #3]
  40bcd4:	ldur	x8, [x29, #-48]
  40bcd8:	ldr	x8, [x8, #8]
  40bcdc:	ldur	x9, [x29, #-88]
  40bce0:	str	x10, [x8, x9, lsl #3]
  40bce4:	ldur	x8, [x29, #-88]
  40bce8:	add	x8, x8, #0x1
  40bcec:	stur	x8, [x29, #-88]
  40bcf0:	b	40bcac <wcrtomb@plt+0x8efc>
  40bcf4:	mov	w8, #0x1                   	// #1
  40bcf8:	stur	w8, [x29, #-4]
  40bcfc:	b	40c0e0 <wcrtomb@plt+0x9330>
  40bd00:	ldur	x8, [x29, #-40]
  40bd04:	cbnz	x8, 40bdfc <wcrtomb@plt+0x904c>
  40bd08:	ldur	x8, [x29, #-16]
  40bd0c:	ldr	x0, [x8, #80]
  40bd10:	bl	40f0b8 <wcrtomb@plt+0xc308>
  40bd14:	stur	x0, [x29, #-96]
  40bd18:	ldur	x8, [x29, #-96]
  40bd1c:	cbz	x8, 40bd58 <wcrtomb@plt+0x8fa8>
  40bd20:	ldur	x0, [x29, #-96]
  40bd24:	ldur	x1, [x29, #-24]
  40bd28:	ldur	x8, [x29, #-24]
  40bd2c:	ldur	x9, [x29, #-32]
  40bd30:	add	x2, x8, x9
  40bd34:	mov	w10, #0x1                   	// #1
  40bd38:	and	w3, w10, #0x1
  40bd3c:	mov	x8, xzr
  40bd40:	mov	x4, x8
  40bd44:	mov	x5, x8
  40bd48:	bl	40f058 <wcrtomb@plt+0xc2a8>
  40bd4c:	cbnz	x0, 40bd58 <wcrtomb@plt+0x8fa8>
  40bd50:	stur	wzr, [x29, #-4]
  40bd54:	b	40c0e0 <wcrtomb@plt+0x9330>
  40bd58:	ldur	w8, [x29, #-52]
  40bd5c:	cbnz	w8, 40bd70 <wcrtomb@plt+0x8fc0>
  40bd60:	ldur	x8, [x29, #-16]
  40bd64:	ldr	w9, [x8, #64]
  40bd68:	and	w9, w9, #0x4
  40bd6c:	cbnz	w9, 40bd8c <wcrtomb@plt+0x8fdc>
  40bd70:	ldur	x8, [x29, #-96]
  40bd74:	cbnz	x8, 40bdfc <wcrtomb@plt+0x904c>
  40bd78:	ldur	x8, [x29, #-16]
  40bd7c:	ldr	x0, [x8, #80]
  40bd80:	bl	40f0d0 <wcrtomb@plt+0xc320>
  40bd84:	tbnz	w0, #0, 40bd8c <wcrtomb@plt+0x8fdc>
  40bd88:	b	40bdfc <wcrtomb@plt+0x904c>
  40bd8c:	sub	x5, x29, #0x61
  40bd90:	mov	w8, #0x0                   	// #0
  40bd94:	sturb	w8, [x29, #-97]
  40bd98:	ldur	x9, [x29, #-16]
  40bd9c:	ldr	x0, [x9, #80]
  40bda0:	ldur	x1, [x29, #-24]
  40bda4:	ldur	x9, [x29, #-24]
  40bda8:	ldur	x10, [x29, #-32]
  40bdac:	add	x2, x9, x10
  40bdb0:	mov	w8, #0x1                   	// #1
  40bdb4:	and	w3, w8, #0x1
  40bdb8:	mov	x9, xzr
  40bdbc:	mov	x4, x9
  40bdc0:	bl	40f058 <wcrtomb@plt+0xc2a8>
  40bdc4:	cbnz	x0, 40bdd0 <wcrtomb@plt+0x9020>
  40bdc8:	stur	wzr, [x29, #-4]
  40bdcc:	b	40c0e0 <wcrtomb@plt+0x9330>
  40bdd0:	ldur	w8, [x29, #-52]
  40bdd4:	cbnz	w8, 40bdfc <wcrtomb@plt+0x904c>
  40bdd8:	ldur	x8, [x29, #-16]
  40bddc:	ldr	w9, [x8, #64]
  40bde0:	and	w9, w9, #0x4
  40bde4:	cbz	w9, 40bdfc <wcrtomb@plt+0x904c>
  40bde8:	ldurb	w8, [x29, #-97]
  40bdec:	tbnz	w8, #0, 40bdfc <wcrtomb@plt+0x904c>
  40bdf0:	mov	w8, #0x1                   	// #1
  40bdf4:	stur	w8, [x29, #-4]
  40bdf8:	b	40c0e0 <wcrtomb@plt+0x9330>
  40bdfc:	ldur	x8, [x29, #-16]
  40be00:	ldr	w9, [x8, #64]
  40be04:	and	w9, w9, #0x4
  40be08:	cbz	w9, 40c058 <wcrtomb@plt+0x92a8>
  40be0c:	ldr	x8, [sp, #128]
  40be10:	ldrb	w9, [x8]
  40be14:	cmp	w9, #0xa
  40be18:	b.eq	40c058 <wcrtomb@plt+0x92a8>  // b.none
  40be1c:	ldur	x8, [x29, #-24]
  40be20:	stur	x8, [x29, #-112]
  40be24:	ldur	x8, [x29, #-40]
  40be28:	cmp	x8, #0x0
  40be2c:	cset	w9, ls  // ls = plast
  40be30:	tbnz	w9, #0, 40be60 <wcrtomb@plt+0x90b0>
  40be34:	ldur	x0, [x29, #-24]
  40be38:	ldr	x8, [sp, #128]
  40be3c:	ldrb	w1, [x8]
  40be40:	ldur	x2, [x29, #-40]
  40be44:	bl	402ba0 <memrchr@plt>
  40be48:	stur	x0, [x29, #-136]
  40be4c:	ldur	x8, [x29, #-136]
  40be50:	cbz	x8, 40be60 <wcrtomb@plt+0x90b0>
  40be54:	ldur	x8, [x29, #-136]
  40be58:	add	x8, x8, #0x1
  40be5c:	stur	x8, [x29, #-112]
  40be60:	ldur	x8, [x29, #-24]
  40be64:	ldur	x9, [x29, #-40]
  40be68:	add	x8, x8, x9
  40be6c:	stur	x8, [x29, #-128]
  40be70:	ldur	x0, [x29, #-112]
  40be74:	ldr	x8, [sp, #128]
  40be78:	ldrb	w1, [x8]
  40be7c:	ldur	x9, [x29, #-24]
  40be80:	ldur	x10, [x29, #-32]
  40be84:	add	x9, x9, x10
  40be88:	ldur	x10, [x29, #-112]
  40be8c:	subs	x2, x9, x10
  40be90:	bl	402c00 <memchr@plt>
  40be94:	stur	x0, [x29, #-120]
  40be98:	ldur	x8, [x29, #-120]
  40be9c:	cbnz	x8, 40beb0 <wcrtomb@plt+0x9100>
  40bea0:	ldur	x8, [x29, #-24]
  40bea4:	ldur	x9, [x29, #-32]
  40bea8:	add	x8, x8, x9
  40beac:	stur	x8, [x29, #-120]
  40beb0:	ldur	x0, [x29, #-16]
  40beb4:	ldur	x1, [x29, #-112]
  40beb8:	ldur	x8, [x29, #-120]
  40bebc:	ldur	x9, [x29, #-112]
  40bec0:	subs	x2, x8, x9
  40bec4:	ldur	x8, [x29, #-128]
  40bec8:	ldur	x9, [x29, #-112]
  40becc:	subs	x3, x8, x9
  40bed0:	ldur	x8, [x29, #-120]
  40bed4:	ldur	x9, [x29, #-128]
  40bed8:	subs	x4, x8, x9
  40bedc:	ldur	w10, [x29, #-52]
  40bee0:	str	x0, [sp, #96]
  40bee4:	str	x1, [sp, #88]
  40bee8:	str	x2, [sp, #80]
  40beec:	str	x3, [sp, #72]
  40bef0:	str	x4, [sp, #64]
  40bef4:	cbz	w10, 40bf04 <wcrtomb@plt+0x9154>
  40bef8:	ldur	x8, [x29, #-48]
  40befc:	str	x8, [sp, #56]
  40bf00:	b	40bf0c <wcrtomb@plt+0x915c>
  40bf04:	mov	x8, xzr
  40bf08:	str	x8, [sp, #56]
  40bf0c:	ldr	x8, [sp, #56]
  40bf10:	ldr	x0, [sp, #96]
  40bf14:	ldr	x1, [sp, #88]
  40bf18:	ldr	x2, [sp, #80]
  40bf1c:	ldr	x3, [sp, #72]
  40bf20:	ldr	x4, [sp, #64]
  40bf24:	mov	x5, x8
  40bf28:	bl	4209dc <_obstack_memory_used@@Base+0x2840>
  40bf2c:	stur	w0, [x29, #-56]
  40bf30:	ldur	w9, [x29, #-56]
  40bf34:	mov	w10, #0xffffffff            	// #-1
  40bf38:	cmp	w9, w10
  40bf3c:	b.le	40c024 <wcrtomb@plt+0x9274>
  40bf40:	ldur	x8, [x29, #-112]
  40bf44:	ldur	x9, [x29, #-24]
  40bf48:	subs	x8, x8, x9
  40bf4c:	ldursw	x9, [x29, #-56]
  40bf50:	add	x8, x9, x8
  40bf54:	stur	w8, [x29, #-56]
  40bf58:	ldur	w8, [x29, #-52]
  40bf5c:	cbz	w8, 40c020 <wcrtomb@plt+0x9270>
  40bf60:	str	xzr, [sp, #144]
  40bf64:	ldr	x8, [sp, #144]
  40bf68:	ldur	x9, [x29, #-48]
  40bf6c:	ldr	x9, [x9]
  40bf70:	cmp	x8, x9
  40bf74:	b.cs	40c020 <wcrtomb@plt+0x9270>  // b.hs, b.nlast
  40bf78:	ldur	x8, [x29, #-48]
  40bf7c:	ldr	x8, [x8, #8]
  40bf80:	ldr	x9, [sp, #144]
  40bf84:	ldr	x8, [x8, x9, lsl #3]
  40bf88:	mov	x9, #0xffffffffffffffff    	// #-1
  40bf8c:	cmp	x8, x9
  40bf90:	b.le	40bfc4 <wcrtomb@plt+0x9214>
  40bf94:	ldur	x8, [x29, #-112]
  40bf98:	ldur	x9, [x29, #-24]
  40bf9c:	subs	x8, x8, x9
  40bfa0:	ldur	x9, [x29, #-48]
  40bfa4:	mov	x10, #0x8                   	// #8
  40bfa8:	ldr	x9, [x9, #8]
  40bfac:	ldr	x11, [sp, #144]
  40bfb0:	mul	x10, x10, x11
  40bfb4:	add	x9, x9, x10
  40bfb8:	ldr	x10, [x9]
  40bfbc:	add	x8, x10, x8
  40bfc0:	str	x8, [x9]
  40bfc4:	ldur	x8, [x29, #-48]
  40bfc8:	ldr	x8, [x8, #16]
  40bfcc:	ldr	x9, [sp, #144]
  40bfd0:	ldr	x8, [x8, x9, lsl #3]
  40bfd4:	mov	x9, #0xffffffffffffffff    	// #-1
  40bfd8:	cmp	x8, x9
  40bfdc:	b.le	40c010 <wcrtomb@plt+0x9260>
  40bfe0:	ldur	x8, [x29, #-112]
  40bfe4:	ldur	x9, [x29, #-24]
  40bfe8:	subs	x8, x8, x9
  40bfec:	ldur	x9, [x29, #-48]
  40bff0:	ldr	x9, [x9, #16]
  40bff4:	ldr	x10, [sp, #144]
  40bff8:	mov	x11, #0x8                   	// #8
  40bffc:	mul	x10, x11, x10
  40c000:	add	x9, x9, x10
  40c004:	ldr	x10, [x9]
  40c008:	add	x8, x10, x8
  40c00c:	str	x8, [x9]
  40c010:	ldr	x8, [sp, #144]
  40c014:	add	x8, x8, #0x1
  40c018:	str	x8, [sp, #144]
  40c01c:	b	40bf64 <wcrtomb@plt+0x91b4>
  40c020:	b	40c054 <wcrtomb@plt+0x92a4>
  40c024:	ldur	x8, [x29, #-120]
  40c028:	ldur	x9, [x29, #-24]
  40c02c:	ldur	x10, [x29, #-32]
  40c030:	add	x9, x9, x10
  40c034:	cmp	x8, x9
  40c038:	b.ne	40c040 <wcrtomb@plt+0x9290>  // b.any
  40c03c:	b	40c054 <wcrtomb@plt+0x92a4>
  40c040:	ldur	x8, [x29, #-120]
  40c044:	add	x8, x8, #0x1
  40c048:	stur	x8, [x29, #-128]
  40c04c:	stur	x8, [x29, #-112]
  40c050:	b	40be70 <wcrtomb@plt+0x90c0>
  40c054:	b	40c0c8 <wcrtomb@plt+0x9318>
  40c058:	ldur	x0, [x29, #-16]
  40c05c:	ldur	x1, [x29, #-24]
  40c060:	ldur	x2, [x29, #-32]
  40c064:	ldur	x3, [x29, #-40]
  40c068:	ldur	x8, [x29, #-32]
  40c06c:	ldur	x9, [x29, #-40]
  40c070:	subs	x4, x8, x9
  40c074:	ldur	w10, [x29, #-52]
  40c078:	str	x0, [sp, #48]
  40c07c:	str	x1, [sp, #40]
  40c080:	str	x2, [sp, #32]
  40c084:	str	x3, [sp, #24]
  40c088:	str	x4, [sp, #16]
  40c08c:	cbz	w10, 40c09c <wcrtomb@plt+0x92ec>
  40c090:	ldur	x8, [x29, #-48]
  40c094:	str	x8, [sp, #8]
  40c098:	b	40c0a4 <wcrtomb@plt+0x92f4>
  40c09c:	mov	x8, xzr
  40c0a0:	str	x8, [sp, #8]
  40c0a4:	ldr	x8, [sp, #8]
  40c0a8:	ldr	x0, [sp, #48]
  40c0ac:	ldr	x1, [sp, #40]
  40c0b0:	ldr	x2, [sp, #32]
  40c0b4:	ldr	x3, [sp, #24]
  40c0b8:	ldr	x4, [sp, #16]
  40c0bc:	mov	x5, x8
  40c0c0:	bl	4209dc <_obstack_memory_used@@Base+0x2840>
  40c0c4:	stur	w0, [x29, #-56]
  40c0c8:	ldur	w8, [x29, #-56]
  40c0cc:	mov	w9, #0xffffffff            	// #-1
  40c0d0:	cmp	w8, w9
  40c0d4:	cset	w8, gt
  40c0d8:	and	w8, w8, #0x1
  40c0dc:	stur	w8, [x29, #-4]
  40c0e0:	ldur	w0, [x29, #-4]
  40c0e4:	ldr	x28, [sp, #304]
  40c0e8:	ldp	x29, x30, [sp, #288]
  40c0ec:	add	sp, sp, #0x140
  40c0f0:	ret
  40c0f4:	sub	sp, sp, #0x10
  40c0f8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c0fc:	add	x8, x8, #0x768
  40c100:	str	x0, [sp, #8]
  40c104:	ldr	x9, [sp, #8]
  40c108:	str	x9, [x8]
  40c10c:	add	sp, sp, #0x10
  40c110:	ret
  40c114:	mov	x8, xzr
  40c118:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c11c:	add	x9, x9, #0x768
  40c120:	str	x8, [x9]
  40c124:	ret
  40c128:	sub	sp, sp, #0x160
  40c12c:	stp	x29, x30, [sp, #320]
  40c130:	str	x28, [sp, #336]
  40c134:	add	x29, sp, #0x140
  40c138:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c13c:	add	x8, x8, #0x15b
  40c140:	mov	w9, #0x6                   	// #6
  40c144:	adrp	x10, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c148:	add	x10, x10, #0x301
  40c14c:	adrp	x11, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c150:	add	x11, x11, #0x8e4
  40c154:	adrp	x12, 40c000 <wcrtomb@plt+0x9250>
  40c158:	add	x12, x12, #0x838
  40c15c:	adrp	x13, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c160:	add	x13, x13, #0x18f
  40c164:	adrp	x14, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c168:	add	x14, x14, #0x160
  40c16c:	adrp	x15, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c170:	add	x15, x15, #0x5
  40c174:	adrp	x16, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c178:	add	x16, x16, #0x8e0
  40c17c:	adrp	x17, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c180:	add	x17, x17, #0x770
  40c184:	adrp	x18, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c188:	add	x18, x18, #0x510
  40c18c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c190:	add	x2, x2, #0x508
  40c194:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c198:	add	x3, x3, #0x760
  40c19c:	stur	wzr, [x29, #-4]
  40c1a0:	stur	w0, [x29, #-8]
  40c1a4:	stur	x1, [x29, #-16]
  40c1a8:	mov	x0, x8
  40c1ac:	stur	w9, [x29, #-52]
  40c1b0:	stur	x10, [x29, #-64]
  40c1b4:	stur	x11, [x29, #-72]
  40c1b8:	stur	x12, [x29, #-80]
  40c1bc:	stur	x13, [x29, #-88]
  40c1c0:	stur	x14, [x29, #-96]
  40c1c4:	stur	x15, [x29, #-104]
  40c1c8:	stur	x16, [x29, #-112]
  40c1cc:	stur	x17, [x29, #-120]
  40c1d0:	stur	x18, [x29, #-128]
  40c1d4:	stur	x2, [x29, #-136]
  40c1d8:	stur	x3, [x29, #-144]
  40c1dc:	bl	402d20 <getenv@plt>
  40c1e0:	stur	x0, [x29, #-32]
  40c1e4:	ldur	x8, [x29, #-16]
  40c1e8:	ldr	x0, [x8]
  40c1ec:	bl	41a6e0 <wcrtomb@plt+0x17930>
  40c1f0:	ldur	w0, [x29, #-52]
  40c1f4:	ldur	x1, [x29, #-64]
  40c1f8:	bl	402d90 <setlocale@plt>
  40c1fc:	bl	40b4f0 <wcrtomb@plt+0x8740>
  40c200:	ldur	x8, [x29, #-72]
  40c204:	mov	x0, x8
  40c208:	bl	41a2d4 <wcrtomb@plt+0x17524>
  40c20c:	ldur	x0, [x29, #-80]
  40c210:	bl	436f20 <_obstack_memory_used@@Base+0x18d84>
  40c214:	ldur	x8, [x29, #-88]
  40c218:	mov	x0, x8
  40c21c:	ldur	x1, [x29, #-96]
  40c220:	bl	402910 <bindtextdomain@plt>
  40c224:	ldur	x8, [x29, #-88]
  40c228:	mov	x0, x8
  40c22c:	bl	402af0 <textdomain@plt>
  40c230:	ldur	x8, [x29, #-104]
  40c234:	mov	x0, x8
  40c238:	bl	402d20 <getenv@plt>
  40c23c:	cbz	x0, 40c250 <wcrtomb@plt+0x94a0>
  40c240:	mov	w8, #0x1                   	// #1
  40c244:	ldur	x9, [x29, #-112]
  40c248:	str	w8, [x9]
  40c24c:	b	40c258 <wcrtomb@plt+0x94a8>
  40c250:	ldur	x8, [x29, #-112]
  40c254:	str	wzr, [x8]
  40c258:	ldur	x8, [x29, #-32]
  40c25c:	cbz	x8, 40c294 <wcrtomb@plt+0x94e4>
  40c260:	ldur	x0, [x29, #-32]
  40c264:	bl	402830 <atoi@plt>
  40c268:	mov	w1, w0
  40c26c:	sxtw	x8, w1
  40c270:	stur	x8, [x29, #-40]
  40c274:	ldur	x8, [x29, #-40]
  40c278:	cmp	x8, #0x1
  40c27c:	b.ls	40c294 <wcrtomb@plt+0x94e4>  // b.plast
  40c280:	ldur	x8, [x29, #-40]
  40c284:	subs	x8, x8, #0x1
  40c288:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c28c:	add	x9, x9, #0x480
  40c290:	str	x8, [x9]
  40c294:	ldur	w0, [x29, #-8]
  40c298:	ldur	x1, [x29, #-16]
  40c29c:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c2a0:	add	x2, x2, #0x172
  40c2a4:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c2a8:	add	x3, x3, #0x958
  40c2ac:	mov	x8, xzr
  40c2b0:	mov	x4, x8
  40c2b4:	bl	402b00 <getopt_long@plt>
  40c2b8:	stur	w0, [x29, #-20]
  40c2bc:	mov	w9, #0xffffffff            	// #-1
  40c2c0:	cmp	w0, w9
  40c2c4:	b.eq	40c720 <wcrtomb@plt+0x9970>  // b.none
  40c2c8:	ldur	w8, [x29, #-20]
  40c2cc:	cmp	w8, #0x45
  40c2d0:	stur	w8, [x29, #-148]
  40c2d4:	b.eq	40c580 <wcrtomb@plt+0x97d0>  // b.none
  40c2d8:	b	40c2dc <wcrtomb@plt+0x952c>
  40c2dc:	ldur	w8, [x29, #-148]
  40c2e0:	cmp	w8, #0x46
  40c2e4:	b.eq	40c46c <wcrtomb@plt+0x96bc>  // b.none
  40c2e8:	b	40c2ec <wcrtomb@plt+0x953c>
  40c2ec:	ldur	w8, [x29, #-148]
  40c2f0:	cmp	w8, #0x62
  40c2f4:	b.eq	40c554 <wcrtomb@plt+0x97a4>  // b.none
  40c2f8:	b	40c2fc <wcrtomb@plt+0x954c>
  40c2fc:	ldur	w8, [x29, #-148]
  40c300:	cmp	w8, #0x65
  40c304:	b.eq	40c3f0 <wcrtomb@plt+0x9640>  // b.none
  40c308:	b	40c30c <wcrtomb@plt+0x955c>
  40c30c:	ldur	w8, [x29, #-148]
  40c310:	cmp	w8, #0x66
  40c314:	b.eq	40c438 <wcrtomb@plt+0x9688>  // b.none
  40c318:	b	40c31c <wcrtomb@plt+0x956c>
  40c31c:	ldur	w8, [x29, #-148]
  40c320:	cmp	w8, #0x68
  40c324:	b.eq	40c708 <wcrtomb@plt+0x9958>  // b.none
  40c328:	b	40c32c <wcrtomb@plt+0x957c>
  40c32c:	ldur	w8, [x29, #-148]
  40c330:	cmp	w8, #0x69
  40c334:	b.eq	40c480 <wcrtomb@plt+0x96d0>  // b.none
  40c338:	b	40c33c <wcrtomb@plt+0x958c>
  40c33c:	ldur	w8, [x29, #-148]
  40c340:	cmp	w8, #0x6c
  40c344:	b.eq	40c520 <wcrtomb@plt+0x9770>  // b.none
  40c348:	b	40c34c <wcrtomb@plt+0x959c>
  40c34c:	ldur	w8, [x29, #-148]
  40c350:	cmp	w8, #0x6e
  40c354:	b.eq	40c3dc <wcrtomb@plt+0x962c>  // b.none
  40c358:	b	40c35c <wcrtomb@plt+0x95ac>
  40c35c:	ldur	w8, [x29, #-148]
  40c360:	cmp	w8, #0x70
  40c364:	b.eq	40c544 <wcrtomb@plt+0x9794>  // b.none
  40c368:	b	40c36c <wcrtomb@plt+0x95bc>
  40c36c:	ldur	w8, [x29, #-148]
  40c370:	cmp	w8, #0x72
  40c374:	b.eq	40c580 <wcrtomb@plt+0x97d0>  // b.none
  40c378:	b	40c37c <wcrtomb@plt+0x95cc>
  40c37c:	ldur	w8, [x29, #-148]
  40c380:	cmp	w8, #0x73
  40c384:	b.eq	40c594 <wcrtomb@plt+0x97e4>  // b.none
  40c388:	b	40c38c <wcrtomb@plt+0x95dc>
  40c38c:	ldur	w8, [x29, #-148]
  40c390:	cmp	w8, #0x75
  40c394:	b.eq	40c5d0 <wcrtomb@plt+0x9820>  // b.none
  40c398:	b	40c39c <wcrtomb@plt+0x95ec>
  40c39c:	ldur	w8, [x29, #-148]
  40c3a0:	cmp	w8, #0x76
  40c3a4:	b.eq	40c5e4 <wcrtomb@plt+0x9834>  // b.none
  40c3a8:	b	40c3ac <wcrtomb@plt+0x95fc>
  40c3ac:	ldur	w8, [x29, #-148]
  40c3b0:	cmp	w8, #0x7a
  40c3b4:	b.eq	40c458 <wcrtomb@plt+0x96a8>  // b.none
  40c3b8:	b	40c3bc <wcrtomb@plt+0x960c>
  40c3bc:	ldur	w8, [x29, #-148]
  40c3c0:	cmp	w8, #0x100
  40c3c4:	b.eq	40c5a8 <wcrtomb@plt+0x97f8>  // b.none
  40c3c8:	b	40c3cc <wcrtomb@plt+0x961c>
  40c3cc:	ldur	w8, [x29, #-148]
  40c3d0:	cmp	w8, #0x101
  40c3d4:	b.eq	40c5bc <wcrtomb@plt+0x980c>  // b.none
  40c3d8:	b	40c714 <wcrtomb@plt+0x9964>
  40c3dc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c3e0:	add	x8, x8, #0x755
  40c3e4:	mov	w9, #0x1                   	// #1
  40c3e8:	strb	w9, [x8]
  40c3ec:	b	40c71c <wcrtomb@plt+0x996c>
  40c3f0:	ldur	x8, [x29, #-120]
  40c3f4:	ldr	x0, [x8]
  40c3f8:	ldur	x9, [x29, #-136]
  40c3fc:	ldr	x1, [x9]
  40c400:	ldr	x10, [x9]
  40c404:	str	x0, [sp, #160]
  40c408:	mov	x0, x10
  40c40c:	str	x1, [sp, #152]
  40c410:	bl	4026f0 <strlen@plt>
  40c414:	ldr	x8, [sp, #160]
  40c418:	str	x0, [sp, #144]
  40c41c:	mov	x0, x8
  40c420:	ldr	x1, [sp, #152]
  40c424:	ldr	x2, [sp, #144]
  40c428:	bl	4036fc <wcrtomb@plt+0x94c>
  40c42c:	ldur	x8, [x29, #-120]
  40c430:	str	x0, [x8]
  40c434:	b	40c71c <wcrtomb@plt+0x996c>
  40c438:	ldur	x8, [x29, #-120]
  40c43c:	ldr	x0, [x8]
  40c440:	ldur	x9, [x29, #-136]
  40c444:	ldr	x1, [x9]
  40c448:	bl	404a64 <wcrtomb@plt+0x1cb4>
  40c44c:	ldur	x8, [x29, #-120]
  40c450:	str	x0, [x8]
  40c454:	b	40c71c <wcrtomb@plt+0x996c>
  40c458:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c45c:	add	x8, x8, #0x468
  40c460:	mov	w9, #0x0                   	// #0
  40c464:	strb	w9, [x8]
  40c468:	b	40c71c <wcrtomb@plt+0x996c>
  40c46c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c470:	add	x8, x8, #0x757
  40c474:	mov	w9, #0x1                   	// #1
  40c478:	strb	w9, [x8]
  40c47c:	b	40c71c <wcrtomb@plt+0x996c>
  40c480:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c484:	add	x8, x8, #0x756
  40c488:	mov	w9, #0x1                   	// #1
  40c48c:	strb	w9, [x8]
  40c490:	ldur	x8, [x29, #-136]
  40c494:	ldr	x10, [x8]
  40c498:	cbnz	x10, 40c4b4 <wcrtomb@plt+0x9704>
  40c49c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40c4a0:	add	x0, x0, #0xfc6
  40c4a4:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  40c4a8:	ldur	x8, [x29, #-144]
  40c4ac:	str	x0, [x8]
  40c4b0:	b	40c51c <wcrtomb@plt+0x976c>
  40c4b4:	ldur	x8, [x29, #-136]
  40c4b8:	ldr	x0, [x8]
  40c4bc:	mov	w1, #0x2a                  	// #42
  40c4c0:	bl	402b80 <strchr@plt>
  40c4c4:	cbz	x0, 40c4e0 <wcrtomb@plt+0x9730>
  40c4c8:	ldur	x8, [x29, #-136]
  40c4cc:	ldr	x0, [x8]
  40c4d0:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  40c4d4:	ldur	x8, [x29, #-144]
  40c4d8:	str	x0, [x8]
  40c4dc:	b	40c51c <wcrtomb@plt+0x976c>
  40c4e0:	ldur	x8, [x29, #-136]
  40c4e4:	ldr	x0, [x8]
  40c4e8:	bl	4026f0 <strlen@plt>
  40c4ec:	add	x0, x0, #0x2
  40c4f0:	bl	41d908 <wcrtomb@plt+0x1ab58>
  40c4f4:	ldur	x8, [x29, #-144]
  40c4f8:	str	x0, [x8]
  40c4fc:	ldr	x9, [x8]
  40c500:	mov	w10, #0x2a                  	// #42
  40c504:	strb	w10, [x9]
  40c508:	ldr	x9, [x8]
  40c50c:	add	x0, x9, #0x1
  40c510:	ldur	x9, [x29, #-136]
  40c514:	ldr	x1, [x9]
  40c518:	bl	402bd0 <strcpy@plt>
  40c51c:	b	40c71c <wcrtomb@plt+0x996c>
  40c520:	ldur	x8, [x29, #-136]
  40c524:	ldr	x0, [x8]
  40c528:	bl	402830 <atoi@plt>
  40c52c:	mov	w1, w0
  40c530:	sxtw	x8, w1
  40c534:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c538:	add	x9, x9, #0x480
  40c53c:	str	x8, [x9]
  40c540:	b	40c71c <wcrtomb@plt+0x996c>
  40c544:	mov	w8, #0x2                   	// #2
  40c548:	ldur	x9, [x29, #-112]
  40c54c:	str	w8, [x9]
  40c550:	b	40c71c <wcrtomb@plt+0x996c>
  40c554:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c558:	add	x8, x8, #0x470
  40c55c:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c560:	add	x9, x9, #0x185
  40c564:	str	x9, [x8]
  40c568:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c56c:	add	x8, x8, #0x478
  40c570:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c574:	add	x9, x9, #0x188
  40c578:	str	x9, [x8]
  40c57c:	b	40c71c <wcrtomb@plt+0x996c>
  40c580:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c584:	add	x8, x8, #0x750
  40c588:	mov	w9, #0x1                   	// #1
  40c58c:	str	w9, [x8]
  40c590:	b	40c71c <wcrtomb@plt+0x996c>
  40c594:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c598:	add	x8, x8, #0x756
  40c59c:	mov	w9, #0x1                   	// #1
  40c5a0:	strb	w9, [x8]
  40c5a4:	b	40c71c <wcrtomb@plt+0x996c>
  40c5a8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c5ac:	add	x8, x8, #0x758
  40c5b0:	mov	w9, #0x1                   	// #1
  40c5b4:	strb	w9, [x8]
  40c5b8:	b	40c71c <wcrtomb@plt+0x996c>
  40c5bc:	mov	w8, #0x1                   	// #1
  40c5c0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c5c4:	add	x9, x9, #0x759
  40c5c8:	strb	w8, [x9]
  40c5cc:	b	40c71c <wcrtomb@plt+0x996c>
  40c5d0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c5d4:	add	x8, x8, #0x754
  40c5d8:	mov	w9, #0x1                   	// #1
  40c5dc:	strb	w9, [x8]
  40c5e0:	b	40c71c <wcrtomb@plt+0x996c>
  40c5e4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c5e8:	add	x8, x8, #0x518
  40c5ec:	ldr	x0, [x8]
  40c5f0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c5f4:	add	x8, x8, #0x798
  40c5f8:	ldr	x1, [x8]
  40c5fc:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c600:	add	x8, x8, #0x488
  40c604:	ldr	x3, [x8]
  40c608:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c60c:	add	x8, x8, #0x193
  40c610:	str	x0, [sp, #136]
  40c614:	mov	x0, x8
  40c618:	str	x1, [sp, #128]
  40c61c:	str	x3, [sp, #120]
  40c620:	bl	402d40 <gettext@plt>
  40c624:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c628:	add	x8, x8, #0x1a0
  40c62c:	str	x0, [sp, #112]
  40c630:	mov	x0, x8
  40c634:	bl	402d40 <gettext@plt>
  40c638:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c63c:	add	x8, x8, #0x1a9
  40c640:	str	x0, [sp, #104]
  40c644:	mov	x0, x8
  40c648:	bl	402d40 <gettext@plt>
  40c64c:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c650:	add	x8, x8, #0x1b5
  40c654:	str	x0, [sp, #96]
  40c658:	mov	x0, x8
  40c65c:	bl	402d40 <gettext@plt>
  40c660:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c664:	add	x8, x8, #0x1c3
  40c668:	str	x0, [sp, #88]
  40c66c:	mov	x0, x8
  40c670:	bl	402d40 <gettext@plt>
  40c674:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c678:	add	x8, x8, #0x1d0
  40c67c:	str	x0, [sp, #80]
  40c680:	mov	x0, x8
  40c684:	bl	402d40 <gettext@plt>
  40c688:	ldr	x8, [sp, #136]
  40c68c:	str	x0, [sp, #72]
  40c690:	mov	x0, x8
  40c694:	ldr	x1, [sp, #128]
  40c698:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c69c:	add	x2, x2, #0x18b
  40c6a0:	ldr	x3, [sp, #120]
  40c6a4:	ldr	x4, [sp, #112]
  40c6a8:	ldr	x5, [sp, #104]
  40c6ac:	ldr	x6, [sp, #96]
  40c6b0:	ldr	x7, [sp, #88]
  40c6b4:	mov	x9, sp
  40c6b8:	ldr	x10, [sp, #80]
  40c6bc:	str	x10, [x9]
  40c6c0:	mov	x9, sp
  40c6c4:	ldr	x11, [sp, #72]
  40c6c8:	str	x11, [x9, #8]
  40c6cc:	mov	x9, sp
  40c6d0:	mov	x12, xzr
  40c6d4:	str	x12, [x9, #16]
  40c6d8:	str	x12, [sp, #64]
  40c6dc:	bl	41d4f4 <wcrtomb@plt+0x1a744>
  40c6e0:	bl	40c868 <wcrtomb@plt+0x9ab8>
  40c6e4:	mov	w13, wzr
  40c6e8:	mov	w0, w13
  40c6ec:	str	w13, [sp, #60]
  40c6f0:	bl	40c8b8 <wcrtomb@plt+0x9b08>
  40c6f4:	ldr	x8, [sp, #64]
  40c6f8:	mov	x0, x8
  40c6fc:	bl	40d590 <wcrtomb@plt+0xa7e0>
  40c700:	ldr	w0, [sp, #60]
  40c704:	bl	402720 <exit@plt>
  40c708:	mov	w8, wzr
  40c70c:	mov	w0, w8
  40c710:	bl	40c970 <wcrtomb@plt+0x9bc0>
  40c714:	mov	w0, #0x1                   	// #1
  40c718:	bl	40c970 <wcrtomb@plt+0x9bc0>
  40c71c:	b	40c294 <wcrtomb@plt+0x94e4>
  40c720:	ldur	x8, [x29, #-120]
  40c724:	ldr	x9, [x8]
  40c728:	cbnz	x9, 40c7b8 <wcrtomb@plt+0x9a08>
  40c72c:	ldur	x8, [x29, #-128]
  40c730:	ldr	w9, [x8]
  40c734:	ldur	w10, [x29, #-8]
  40c738:	cmp	w9, w10
  40c73c:	b.ge	40c7b0 <wcrtomb@plt+0x9a00>  // b.tcont
  40c740:	ldur	x8, [x29, #-16]
  40c744:	ldur	x9, [x29, #-128]
  40c748:	ldrsw	x10, [x9]
  40c74c:	mov	w11, w10
  40c750:	add	w11, w11, #0x1
  40c754:	str	w11, [x9]
  40c758:	mov	x12, #0x8                   	// #8
  40c75c:	mul	x10, x12, x10
  40c760:	add	x8, x8, x10
  40c764:	ldr	x8, [x8]
  40c768:	stur	x8, [x29, #-48]
  40c76c:	ldur	x8, [x29, #-120]
  40c770:	ldr	x0, [x8]
  40c774:	ldur	x1, [x29, #-48]
  40c778:	ldur	x10, [x29, #-48]
  40c77c:	str	x0, [sp, #48]
  40c780:	mov	x0, x10
  40c784:	str	x1, [sp, #40]
  40c788:	bl	4026f0 <strlen@plt>
  40c78c:	ldr	x8, [sp, #48]
  40c790:	str	x0, [sp, #32]
  40c794:	mov	x0, x8
  40c798:	ldr	x1, [sp, #40]
  40c79c:	ldr	x2, [sp, #32]
  40c7a0:	bl	4036fc <wcrtomb@plt+0x94c>
  40c7a4:	ldur	x8, [x29, #-120]
  40c7a8:	str	x0, [x8]
  40c7ac:	b	40c7b8 <wcrtomb@plt+0x9a08>
  40c7b0:	mov	w0, #0x1                   	// #1
  40c7b4:	bl	40c970 <wcrtomb@plt+0x9bc0>
  40c7b8:	ldur	x8, [x29, #-120]
  40c7bc:	ldr	x0, [x8]
  40c7c0:	bl	404b50 <wcrtomb@plt+0x1da0>
  40c7c4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c7c8:	add	x8, x8, #0x759
  40c7cc:	ldrb	w9, [x8]
  40c7d0:	tbnz	w9, #0, 40c7d8 <wcrtomb@plt+0x9a28>
  40c7d4:	b	40c7e4 <wcrtomb@plt+0x9a34>
  40c7d8:	ldur	x8, [x29, #-120]
  40c7dc:	ldr	x0, [x8]
  40c7e0:	bl	40713c <wcrtomb@plt+0x438c>
  40c7e4:	ldur	x8, [x29, #-120]
  40c7e8:	ldr	x0, [x8]
  40c7ec:	ldur	x9, [x29, #-16]
  40c7f0:	ldur	x10, [x29, #-128]
  40c7f4:	ldrsw	x11, [x10]
  40c7f8:	mov	x12, #0x8                   	// #8
  40c7fc:	mul	x11, x12, x11
  40c800:	add	x1, x9, x11
  40c804:	bl	407810 <wcrtomb@plt+0x4a60>
  40c808:	stur	w0, [x29, #-24]
  40c80c:	ldur	x8, [x29, #-120]
  40c810:	ldr	x0, [x8]
  40c814:	bl	404e30 <wcrtomb@plt+0x2080>
  40c818:	mov	x8, xzr
  40c81c:	mov	x0, x8
  40c820:	bl	40d590 <wcrtomb@plt+0xa7e0>
  40c824:	ldur	w0, [x29, #-24]
  40c828:	ldr	x28, [sp, #336]
  40c82c:	ldp	x29, x30, [sp, #320]
  40c830:	add	sp, sp, #0x160
  40c834:	ret
  40c838:	stp	x29, x30, [sp, #-16]!
  40c83c:	mov	x29, sp
  40c840:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c844:	add	x8, x8, #0x768
  40c848:	ldr	x8, [x8]
  40c84c:	cbz	x8, 40c860 <wcrtomb@plt+0x9ab0>
  40c850:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c854:	add	x8, x8, #0x768
  40c858:	ldr	x0, [x8]
  40c85c:	bl	402d30 <unlink@plt>
  40c860:	ldp	x29, x30, [sp], #16
  40c864:	ret
  40c868:	sub	sp, sp, #0x20
  40c86c:	stp	x29, x30, [sp, #16]
  40c870:	add	x29, sp, #0x10
  40c874:	mov	w8, #0xa                   	// #10
  40c878:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c87c:	add	x0, x0, #0x1dd
  40c880:	str	x0, [sp, #8]
  40c884:	mov	w0, w8
  40c888:	str	w8, [sp, #4]
  40c88c:	bl	402990 <putchar_unlocked@plt>
  40c890:	ldr	x9, [sp, #8]
  40c894:	mov	x0, x9
  40c898:	bl	402d40 <gettext@plt>
  40c89c:	bl	402ac0 <puts@plt>
  40c8a0:	ldr	w8, [sp, #4]
  40c8a4:	mov	w0, w8
  40c8a8:	bl	402990 <putchar_unlocked@plt>
  40c8ac:	ldp	x29, x30, [sp, #16]
  40c8b0:	add	sp, sp, #0x20
  40c8b4:	ret
  40c8b8:	sub	sp, sp, #0x50
  40c8bc:	stp	x29, x30, [sp, #64]
  40c8c0:	add	x29, sp, #0x40
  40c8c4:	stur	w0, [x29, #-4]
  40c8c8:	ldur	w8, [x29, #-4]
  40c8cc:	cbz	w8, 40c8e4 <wcrtomb@plt+0x9b34>
  40c8d0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c8d4:	add	x8, x8, #0x500
  40c8d8:	ldr	x8, [x8]
  40c8dc:	stur	x8, [x29, #-24]
  40c8e0:	b	40c8f4 <wcrtomb@plt+0x9b44>
  40c8e4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c8e8:	add	x8, x8, #0x518
  40c8ec:	ldr	x8, [x8]
  40c8f0:	stur	x8, [x29, #-24]
  40c8f4:	ldur	x8, [x29, #-24]
  40c8f8:	stur	x8, [x29, #-16]
  40c8fc:	ldur	x0, [x29, #-16]
  40c900:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c904:	add	x8, x8, #0x211
  40c908:	str	x0, [sp, #32]
  40c90c:	mov	x0, x8
  40c910:	bl	402d40 <gettext@plt>
  40c914:	ldr	x8, [sp, #32]
  40c918:	str	x0, [sp, #24]
  40c91c:	mov	x0, x8
  40c920:	ldr	x1, [sp, #24]
  40c924:	bl	402d70 <fprintf@plt>
  40c928:	ldur	w9, [x29, #-4]
  40c92c:	cbnz	w9, 40c964 <wcrtomb@plt+0x9bb4>
  40c930:	ldur	x0, [x29, #-16]
  40c934:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c938:	add	x8, x8, #0x28b
  40c93c:	str	x0, [sp, #16]
  40c940:	mov	x0, x8
  40c944:	bl	402d40 <gettext@plt>
  40c948:	ldr	x8, [sp, #16]
  40c94c:	str	x0, [sp, #8]
  40c950:	mov	x0, x8
  40c954:	ldr	x1, [sp, #8]
  40c958:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c95c:	add	x2, x2, #0x2a9
  40c960:	bl	402d70 <fprintf@plt>
  40c964:	ldp	x29, x30, [sp, #64]
  40c968:	add	sp, sp, #0x50
  40c96c:	ret
  40c970:	sub	sp, sp, #0x150
  40c974:	stp	x29, x30, [sp, #304]
  40c978:	str	x28, [sp, #320]
  40c97c:	add	x29, sp, #0x130
  40c980:	stur	w0, [x29, #-4]
  40c984:	ldur	w8, [x29, #-4]
  40c988:	cbz	w8, 40c9a0 <wcrtomb@plt+0x9bf0>
  40c98c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c990:	add	x8, x8, #0x500
  40c994:	ldr	x8, [x8]
  40c998:	stur	x8, [x29, #-24]
  40c99c:	b	40c9b0 <wcrtomb@plt+0x9c00>
  40c9a0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c9a4:	add	x8, x8, #0x518
  40c9a8:	ldr	x8, [x8]
  40c9ac:	stur	x8, [x29, #-24]
  40c9b0:	ldur	x8, [x29, #-24]
  40c9b4:	stur	x8, [x29, #-16]
  40c9b8:	ldur	x0, [x29, #-16]
  40c9bc:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c9c0:	add	x8, x8, #0x2b9
  40c9c4:	stur	x0, [x29, #-32]
  40c9c8:	mov	x0, x8
  40c9cc:	bl	402d40 <gettext@plt>
  40c9d0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40c9d4:	add	x8, x8, #0x798
  40c9d8:	ldr	x2, [x8]
  40c9dc:	ldur	x8, [x29, #-32]
  40c9e0:	stur	x0, [x29, #-40]
  40c9e4:	mov	x0, x8
  40c9e8:	ldur	x1, [x29, #-40]
  40c9ec:	bl	402d70 <fprintf@plt>
  40c9f0:	ldur	x8, [x29, #-16]
  40c9f4:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40c9f8:	add	x9, x9, #0x302
  40c9fc:	mov	x0, x9
  40ca00:	stur	x8, [x29, #-48]
  40ca04:	bl	402d40 <gettext@plt>
  40ca08:	ldur	x8, [x29, #-48]
  40ca0c:	stur	x0, [x29, #-56]
  40ca10:	mov	x0, x8
  40ca14:	ldur	x1, [x29, #-56]
  40ca18:	bl	402d70 <fprintf@plt>
  40ca1c:	ldur	x8, [x29, #-16]
  40ca20:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40ca24:	add	x9, x9, #0x359
  40ca28:	mov	x0, x9
  40ca2c:	stur	x8, [x29, #-64]
  40ca30:	bl	402d40 <gettext@plt>
  40ca34:	ldur	x8, [x29, #-64]
  40ca38:	stur	x0, [x29, #-72]
  40ca3c:	mov	x0, x8
  40ca40:	ldur	x1, [x29, #-72]
  40ca44:	bl	402d70 <fprintf@plt>
  40ca48:	ldur	x8, [x29, #-16]
  40ca4c:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40ca50:	add	x9, x9, #0x394
  40ca54:	mov	x0, x9
  40ca58:	stur	x8, [x29, #-80]
  40ca5c:	bl	402d40 <gettext@plt>
  40ca60:	ldur	x8, [x29, #-80]
  40ca64:	stur	x0, [x29, #-88]
  40ca68:	mov	x0, x8
  40ca6c:	ldur	x1, [x29, #-88]
  40ca70:	bl	402d70 <fprintf@plt>
  40ca74:	ldur	x8, [x29, #-16]
  40ca78:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40ca7c:	add	x9, x9, #0x3f5
  40ca80:	mov	x0, x9
  40ca84:	stur	x8, [x29, #-96]
  40ca88:	bl	402d40 <gettext@plt>
  40ca8c:	ldur	x8, [x29, #-96]
  40ca90:	stur	x0, [x29, #-104]
  40ca94:	mov	x0, x8
  40ca98:	ldur	x1, [x29, #-104]
  40ca9c:	bl	402d70 <fprintf@plt>
  40caa0:	ldur	x8, [x29, #-16]
  40caa4:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40caa8:	add	x9, x9, #0x46b
  40caac:	mov	x0, x9
  40cab0:	stur	x8, [x29, #-112]
  40cab4:	bl	402d40 <gettext@plt>
  40cab8:	ldur	x8, [x29, #-112]
  40cabc:	stur	x0, [x29, #-120]
  40cac0:	mov	x0, x8
  40cac4:	ldur	x1, [x29, #-120]
  40cac8:	bl	402d70 <fprintf@plt>
  40cacc:	ldur	x8, [x29, #-16]
  40cad0:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cad4:	add	x9, x9, #0x4ba
  40cad8:	mov	x0, x9
  40cadc:	stur	x8, [x29, #-128]
  40cae0:	bl	402d40 <gettext@plt>
  40cae4:	ldur	x8, [x29, #-128]
  40cae8:	stur	x0, [x29, #-136]
  40caec:	mov	x0, x8
  40caf0:	ldur	x1, [x29, #-136]
  40caf4:	bl	402d70 <fprintf@plt>
  40caf8:	ldur	x8, [x29, #-16]
  40cafc:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cb00:	add	x9, x9, #0x524
  40cb04:	mov	x0, x9
  40cb08:	stur	x8, [x29, #-144]
  40cb0c:	bl	402d40 <gettext@plt>
  40cb10:	ldur	x8, [x29, #-144]
  40cb14:	str	x0, [sp, #152]
  40cb18:	mov	x0, x8
  40cb1c:	ldr	x1, [sp, #152]
  40cb20:	bl	402d70 <fprintf@plt>
  40cb24:	ldur	x8, [x29, #-16]
  40cb28:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cb2c:	add	x9, x9, #0x587
  40cb30:	mov	x0, x9
  40cb34:	str	x8, [sp, #144]
  40cb38:	bl	402d40 <gettext@plt>
  40cb3c:	ldr	x8, [sp, #144]
  40cb40:	str	x0, [sp, #136]
  40cb44:	mov	x0, x8
  40cb48:	ldr	x1, [sp, #136]
  40cb4c:	bl	402d70 <fprintf@plt>
  40cb50:	ldur	x8, [x29, #-16]
  40cb54:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cb58:	add	x9, x9, #0x5bf
  40cb5c:	mov	x0, x9
  40cb60:	str	x8, [sp, #128]
  40cb64:	bl	402d40 <gettext@plt>
  40cb68:	ldr	x8, [sp, #128]
  40cb6c:	str	x0, [sp, #120]
  40cb70:	mov	x0, x8
  40cb74:	ldr	x1, [sp, #120]
  40cb78:	bl	402d70 <fprintf@plt>
  40cb7c:	ldur	x8, [x29, #-16]
  40cb80:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cb84:	add	x9, x9, #0x64d
  40cb88:	mov	x0, x9
  40cb8c:	str	x8, [sp, #112]
  40cb90:	bl	402d40 <gettext@plt>
  40cb94:	ldr	x8, [sp, #112]
  40cb98:	str	x0, [sp, #104]
  40cb9c:	mov	x0, x8
  40cba0:	ldr	x1, [sp, #104]
  40cba4:	bl	402d70 <fprintf@plt>
  40cba8:	ldur	x8, [x29, #-16]
  40cbac:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cbb0:	add	x9, x9, #0x6cd
  40cbb4:	mov	x0, x9
  40cbb8:	str	x8, [sp, #96]
  40cbbc:	bl	402d40 <gettext@plt>
  40cbc0:	ldr	x8, [sp, #96]
  40cbc4:	str	x0, [sp, #88]
  40cbc8:	mov	x0, x8
  40cbcc:	ldr	x1, [sp, #88]
  40cbd0:	bl	402d70 <fprintf@plt>
  40cbd4:	ldur	x8, [x29, #-16]
  40cbd8:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cbdc:	add	x9, x9, #0x721
  40cbe0:	mov	x0, x9
  40cbe4:	str	x8, [sp, #80]
  40cbe8:	bl	402d40 <gettext@plt>
  40cbec:	ldr	x8, [sp, #80]
  40cbf0:	str	x0, [sp, #72]
  40cbf4:	mov	x0, x8
  40cbf8:	ldr	x1, [sp, #72]
  40cbfc:	bl	402d70 <fprintf@plt>
  40cc00:	ldur	x8, [x29, #-16]
  40cc04:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cc08:	add	x9, x9, #0x7b1
  40cc0c:	mov	x0, x9
  40cc10:	str	x8, [sp, #64]
  40cc14:	bl	402d40 <gettext@plt>
  40cc18:	ldr	x8, [sp, #64]
  40cc1c:	str	x0, [sp, #56]
  40cc20:	mov	x0, x8
  40cc24:	ldr	x1, [sp, #56]
  40cc28:	bl	402d70 <fprintf@plt>
  40cc2c:	ldur	x8, [x29, #-16]
  40cc30:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cc34:	add	x9, x9, #0x7f6
  40cc38:	mov	x0, x9
  40cc3c:	str	x8, [sp, #48]
  40cc40:	bl	402d40 <gettext@plt>
  40cc44:	ldr	x8, [sp, #48]
  40cc48:	str	x0, [sp, #40]
  40cc4c:	mov	x0, x8
  40cc50:	ldr	x1, [sp, #40]
  40cc54:	bl	402d70 <fprintf@plt>
  40cc58:	ldur	x8, [x29, #-16]
  40cc5c:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cc60:	add	x9, x9, #0x823
  40cc64:	mov	x0, x9
  40cc68:	str	x8, [sp, #32]
  40cc6c:	bl	402d40 <gettext@plt>
  40cc70:	ldr	x8, [sp, #32]
  40cc74:	str	x0, [sp, #24]
  40cc78:	mov	x0, x8
  40cc7c:	ldr	x1, [sp, #24]
  40cc80:	bl	402d70 <fprintf@plt>
  40cc84:	ldur	x8, [x29, #-16]
  40cc88:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cc8c:	add	x9, x9, #0x859
  40cc90:	mov	x0, x9
  40cc94:	str	x8, [sp, #16]
  40cc98:	bl	402d40 <gettext@plt>
  40cc9c:	ldr	x8, [sp, #16]
  40cca0:	str	x0, [sp, #8]
  40cca4:	mov	x0, x8
  40cca8:	ldr	x1, [sp, #8]
  40ccac:	bl	402d70 <fprintf@plt>
  40ccb0:	ldur	w10, [x29, #-4]
  40ccb4:	mov	w0, w10
  40ccb8:	bl	40c8b8 <wcrtomb@plt+0x9b08>
  40ccbc:	mov	x8, xzr
  40ccc0:	mov	x0, x8
  40ccc4:	bl	40d590 <wcrtomb@plt+0xa7e0>
  40ccc8:	ldur	w0, [x29, #-4]
  40cccc:	bl	402720 <exit@plt>
  40ccd0:	sub	sp, sp, #0x180
  40ccd4:	stp	x29, x30, [sp, #352]
  40ccd8:	str	x28, [sp, #368]
  40ccdc:	add	x29, sp, #0x160
  40cce0:	sub	x8, x29, #0x28
  40cce4:	str	q7, [sp, #192]
  40cce8:	str	q6, [sp, #176]
  40ccec:	str	q5, [sp, #160]
  40ccf0:	str	q4, [sp, #144]
  40ccf4:	str	q3, [sp, #128]
  40ccf8:	str	q2, [sp, #112]
  40ccfc:	str	q1, [sp, #96]
  40cd00:	str	q0, [sp, #80]
  40cd04:	stur	x7, [x29, #-88]
  40cd08:	stur	x6, [x29, #-96]
  40cd0c:	stur	x5, [x29, #-104]
  40cd10:	stur	x4, [x29, #-112]
  40cd14:	stur	x3, [x29, #-120]
  40cd18:	stur	x2, [x29, #-128]
  40cd1c:	stur	x1, [x29, #-136]
  40cd20:	stur	x0, [x29, #-8]
  40cd24:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40cd28:	ldr	x0, [x9, #1280]
  40cd2c:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40cd30:	ldr	x2, [x10, #1944]
  40cd34:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cd38:	add	x1, x1, #0xbb8
  40cd3c:	str	x8, [sp, #72]
  40cd40:	str	x9, [sp, #64]
  40cd44:	bl	402d70 <fprintf@plt>
  40cd48:	mov	w11, #0xffffff80            	// #-128
  40cd4c:	stur	w11, [x29, #-12]
  40cd50:	mov	w11, #0xffffffc8            	// #-56
  40cd54:	stur	w11, [x29, #-16]
  40cd58:	add	x8, sp, #0x50
  40cd5c:	add	x8, x8, #0x80
  40cd60:	stur	x8, [x29, #-24]
  40cd64:	sub	x8, x29, #0x88
  40cd68:	add	x8, x8, #0x38
  40cd6c:	stur	x8, [x29, #-32]
  40cd70:	add	x8, x29, #0x20
  40cd74:	stur	x8, [x29, #-40]
  40cd78:	ldr	x8, [sp, #64]
  40cd7c:	ldr	x9, [x8, #1280]
  40cd80:	ldur	x1, [x29, #-8]
  40cd84:	ldr	x10, [sp, #72]
  40cd88:	ldr	q0, [x10]
  40cd8c:	ldr	q1, [x10, #16]
  40cd90:	stur	q1, [x29, #-64]
  40cd94:	stur	q0, [x29, #-80]
  40cd98:	sub	x2, x29, #0x50
  40cd9c:	str	w0, [sp, #60]
  40cda0:	mov	x0, x9
  40cda4:	bl	402cd0 <vfprintf@plt>
  40cda8:	ldr	x8, [sp, #64]
  40cdac:	ldr	x1, [x8, #1280]
  40cdb0:	mov	w11, #0xa                   	// #10
  40cdb4:	str	w0, [sp, #56]
  40cdb8:	mov	w0, w11
  40cdbc:	bl	402800 <putc_unlocked@plt>
  40cdc0:	b	40cdc4 <wcrtomb@plt+0xa014>
  40cdc4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40cdc8:	ldr	x8, [x8, #1912]
  40cdcc:	cbz	x8, 40cea4 <wcrtomb@plt+0xa0f4>
  40cdd0:	b	40cdd4 <wcrtomb@plt+0xa024>
  40cdd4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40cdd8:	ldr	x8, [x8, #1912]
  40cddc:	ldrb	w9, [x8, #24]
  40cde0:	tbz	w9, #0, 40ce90 <wcrtomb@plt+0xa0e0>
  40cde4:	b	40cde8 <wcrtomb@plt+0xa038>
  40cde8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40cdec:	ldr	x9, [x8, #1912]
  40cdf0:	ldr	x0, [x9]
  40cdf4:	str	x8, [sp, #48]
  40cdf8:	bl	402820 <fclose@plt>
  40cdfc:	str	w0, [sp, #44]
  40ce00:	bl	402d00 <__errno_location@plt>
  40ce04:	mov	w10, wzr
  40ce08:	str	w10, [x0]
  40ce0c:	ldr	x8, [sp, #48]
  40ce10:	ldr	x9, [x8, #1912]
  40ce14:	ldr	x0, [x9, #8]
  40ce18:	bl	402d30 <unlink@plt>
  40ce1c:	str	w0, [sp, #40]
  40ce20:	bl	402d00 <__errno_location@plt>
  40ce24:	ldr	w10, [x0]
  40ce28:	cbz	w10, 40ce8c <wcrtomb@plt+0xa0dc>
  40ce2c:	b	40ce30 <wcrtomb@plt+0xa080>
  40ce30:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40ce34:	ldr	x0, [x8, #1280]
  40ce38:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40ce3c:	add	x8, x8, #0xbbd
  40ce40:	str	x0, [sp, #32]
  40ce44:	mov	x0, x8
  40ce48:	bl	402d40 <gettext@plt>
  40ce4c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40ce50:	ldr	x8, [x8, #1912]
  40ce54:	ldr	x2, [x8, #8]
  40ce58:	str	x0, [sp, #24]
  40ce5c:	str	x2, [sp, #16]
  40ce60:	bl	402d00 <__errno_location@plt>
  40ce64:	ldr	w0, [x0]
  40ce68:	bl	402a30 <strerror@plt>
  40ce6c:	ldr	x8, [sp, #32]
  40ce70:	str	x0, [sp, #8]
  40ce74:	mov	x0, x8
  40ce78:	ldr	x1, [sp, #24]
  40ce7c:	ldr	x2, [sp, #16]
  40ce80:	ldr	x3, [sp, #8]
  40ce84:	bl	402d70 <fprintf@plt>
  40ce88:	b	40ce8c <wcrtomb@plt+0xa0dc>
  40ce8c:	b	40ce90 <wcrtomb@plt+0xa0e0>
  40ce90:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40ce94:	ldr	x9, [x8, #1912]
  40ce98:	ldr	x9, [x9, #16]
  40ce9c:	str	x9, [x8, #1912]
  40cea0:	b	40cdc4 <wcrtomb@plt+0xa014>
  40cea4:	mov	w0, #0x4                   	// #4
  40cea8:	bl	402720 <exit@plt>
  40ceac:	sub	sp, sp, #0x50
  40ceb0:	stp	x29, x30, [sp, #64]
  40ceb4:	add	x29, sp, #0x40
  40ceb8:	stur	x0, [x29, #-16]
  40cebc:	stur	x1, [x29, #-24]
  40cec0:	stur	w2, [x29, #-28]
  40cec4:	ldur	x0, [x29, #-16]
  40cec8:	ldur	x1, [x29, #-24]
  40cecc:	bl	402860 <fopen@plt>
  40ced0:	str	x0, [sp, #24]
  40ced4:	ldr	x8, [sp, #24]
  40ced8:	cbnz	x8, 40cf2c <wcrtomb@plt+0xa17c>
  40cedc:	ldur	w8, [x29, #-28]
  40cee0:	cbz	w8, 40cf20 <wcrtomb@plt+0xa170>
  40cee4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40cee8:	add	x0, x0, #0xbd2
  40ceec:	bl	402d40 <gettext@plt>
  40cef0:	ldur	x1, [x29, #-16]
  40cef4:	str	x0, [sp, #16]
  40cef8:	str	x1, [sp, #8]
  40cefc:	bl	402d00 <__errno_location@plt>
  40cf00:	ldr	w0, [x0]
  40cf04:	bl	402a30 <strerror@plt>
  40cf08:	ldr	x1, [sp, #16]
  40cf0c:	str	x0, [sp]
  40cf10:	mov	x0, x1
  40cf14:	ldr	x1, [sp, #8]
  40cf18:	ldr	x2, [sp]
  40cf1c:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40cf20:	mov	x8, xzr
  40cf24:	stur	x8, [x29, #-8]
  40cf28:	b	40cf40 <wcrtomb@plt+0xa190>
  40cf2c:	ldr	x0, [sp, #24]
  40cf30:	ldur	x1, [x29, #-16]
  40cf34:	bl	40cf50 <wcrtomb@plt+0xa1a0>
  40cf38:	ldr	x8, [sp, #24]
  40cf3c:	stur	x8, [x29, #-8]
  40cf40:	ldur	x0, [x29, #-8]
  40cf44:	ldp	x29, x30, [sp, #64]
  40cf48:	add	sp, sp, #0x50
  40cf4c:	ret
  40cf50:	sub	sp, sp, #0x30
  40cf54:	stp	x29, x30, [sp, #32]
  40cf58:	add	x29, sp, #0x20
  40cf5c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40cf60:	add	x8, x8, #0x778
  40cf64:	stur	x0, [x29, #-8]
  40cf68:	str	x1, [sp, #16]
  40cf6c:	ldr	x9, [x8]
  40cf70:	str	x9, [sp, #8]
  40cf74:	str	x8, [sp]
  40cf78:	ldr	x8, [sp, #8]
  40cf7c:	cbz	x8, 40cfb4 <wcrtomb@plt+0xa204>
  40cf80:	ldur	x8, [x29, #-8]
  40cf84:	ldr	x9, [sp, #8]
  40cf88:	ldr	x9, [x9]
  40cf8c:	cmp	x8, x9
  40cf90:	b.ne	40cfa4 <wcrtomb@plt+0xa1f4>  // b.any
  40cf94:	ldr	x8, [sp, #8]
  40cf98:	ldr	x0, [x8, #8]
  40cf9c:	bl	402b40 <free@plt>
  40cfa0:	b	40cfb4 <wcrtomb@plt+0xa204>
  40cfa4:	ldr	x8, [sp, #8]
  40cfa8:	ldr	x8, [x8, #16]
  40cfac:	str	x8, [sp, #8]
  40cfb0:	b	40cf78 <wcrtomb@plt+0xa1c8>
  40cfb4:	ldr	x8, [sp, #8]
  40cfb8:	cbnz	x8, 40cfe4 <wcrtomb@plt+0xa234>
  40cfbc:	mov	x0, #0x1                   	// #1
  40cfc0:	mov	x1, #0x20                  	// #32
  40cfc4:	bl	41d930 <wcrtomb@plt+0x1ab80>
  40cfc8:	str	x0, [sp, #8]
  40cfcc:	ldr	x8, [sp]
  40cfd0:	ldr	x9, [x8]
  40cfd4:	ldr	x10, [sp, #8]
  40cfd8:	str	x9, [x10, #16]
  40cfdc:	ldr	x9, [sp, #8]
  40cfe0:	str	x9, [x8]
  40cfe4:	ldr	x0, [sp, #16]
  40cfe8:	bl	41d9c0 <wcrtomb@plt+0x1ac10>
  40cfec:	ldr	x8, [sp, #8]
  40cff0:	str	x0, [x8, #8]
  40cff4:	ldur	x8, [x29, #-8]
  40cff8:	ldr	x9, [sp, #8]
  40cffc:	str	x8, [x9]
  40d000:	ldr	x8, [sp, #8]
  40d004:	ldrb	w10, [x8, #24]
  40d008:	and	w10, w10, #0xfffffffe
  40d00c:	strb	w10, [x8, #24]
  40d010:	ldp	x29, x30, [sp, #32]
  40d014:	add	sp, sp, #0x30
  40d018:	ret
  40d01c:	sub	sp, sp, #0x60
  40d020:	stp	x29, x30, [sp, #80]
  40d024:	add	x29, sp, #0x50
  40d028:	stur	w0, [x29, #-12]
  40d02c:	stur	x1, [x29, #-24]
  40d030:	stur	x2, [x29, #-32]
  40d034:	stur	w3, [x29, #-36]
  40d038:	ldur	w0, [x29, #-12]
  40d03c:	ldur	x1, [x29, #-32]
  40d040:	bl	402970 <fdopen@plt>
  40d044:	str	x0, [sp, #32]
  40d048:	ldr	x8, [sp, #32]
  40d04c:	cbnz	x8, 40d0a0 <wcrtomb@plt+0xa2f0>
  40d050:	ldur	w8, [x29, #-36]
  40d054:	cbz	w8, 40d094 <wcrtomb@plt+0xa2e4>
  40d058:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d05c:	add	x0, x0, #0xbec
  40d060:	bl	402d40 <gettext@plt>
  40d064:	ldur	x1, [x29, #-24]
  40d068:	str	x0, [sp, #24]
  40d06c:	str	x1, [sp, #16]
  40d070:	bl	402d00 <__errno_location@plt>
  40d074:	ldr	w0, [x0]
  40d078:	bl	402a30 <strerror@plt>
  40d07c:	ldr	x1, [sp, #24]
  40d080:	str	x0, [sp, #8]
  40d084:	mov	x0, x1
  40d088:	ldr	x1, [sp, #16]
  40d08c:	ldr	x2, [sp, #8]
  40d090:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d094:	mov	x8, xzr
  40d098:	stur	x8, [x29, #-8]
  40d09c:	b	40d0b4 <wcrtomb@plt+0xa304>
  40d0a0:	ldr	x0, [sp, #32]
  40d0a4:	ldur	x1, [x29, #-24]
  40d0a8:	bl	40cf50 <wcrtomb@plt+0xa1a0>
  40d0ac:	ldr	x8, [sp, #32]
  40d0b0:	stur	x8, [x29, #-8]
  40d0b4:	ldur	x0, [x29, #-8]
  40d0b8:	ldp	x29, x30, [sp, #80]
  40d0bc:	add	sp, sp, #0x60
  40d0c0:	ret
  40d0c4:	sub	sp, sp, #0x80
  40d0c8:	stp	x29, x30, [sp, #112]
  40d0cc:	add	x29, sp, #0x70
  40d0d0:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d0d4:	add	x8, x8, #0xc06
  40d0d8:	mov	w9, #0x3f                  	// #63
  40d0dc:	mov	w10, wzr
  40d0e0:	mov	w11, #0xffffffff            	// #-1
  40d0e4:	stur	x0, [x29, #-8]
  40d0e8:	stur	x1, [x29, #-16]
  40d0ec:	stur	x2, [x29, #-24]
  40d0f0:	stur	x3, [x29, #-32]
  40d0f4:	ldur	x0, [x29, #-16]
  40d0f8:	str	x8, [sp, #48]
  40d0fc:	str	w9, [sp, #44]
  40d100:	str	w10, [sp, #40]
  40d104:	str	w11, [sp, #36]
  40d108:	bl	4026f0 <strlen@plt>
  40d10c:	ldur	x8, [x29, #-24]
  40d110:	str	x0, [sp, #24]
  40d114:	mov	x0, x8
  40d118:	bl	4026f0 <strlen@plt>
  40d11c:	ldr	x8, [sp, #24]
  40d120:	add	x12, x8, x0
  40d124:	add	x0, x12, #0x8
  40d128:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  40d12c:	stur	x0, [x29, #-40]
  40d130:	ldur	x0, [x29, #-40]
  40d134:	ldur	x2, [x29, #-16]
  40d138:	ldur	x3, [x29, #-24]
  40d13c:	ldr	x1, [sp, #48]
  40d140:	bl	402790 <sprintf@plt>
  40d144:	ldr	w9, [sp, #44]
  40d148:	mov	w0, w9
  40d14c:	bl	402cc0 <umask@plt>
  40d150:	stur	w0, [x29, #-44]
  40d154:	ldur	x0, [x29, #-40]
  40d158:	ldr	w1, [sp, #40]
  40d15c:	bl	402a80 <mkostemp@plt>
  40d160:	stur	w0, [x29, #-48]
  40d164:	ldur	w0, [x29, #-44]
  40d168:	bl	402cc0 <umask@plt>
  40d16c:	ldur	w9, [x29, #-48]
  40d170:	ldr	w10, [sp, #36]
  40d174:	cmp	w9, w10
  40d178:	b.ne	40d1b8 <wcrtomb@plt+0xa408>  // b.any
  40d17c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  40d180:	add	x0, x0, #0xe9f
  40d184:	bl	402d40 <gettext@plt>
  40d188:	ldur	x1, [x29, #-40]
  40d18c:	str	x0, [sp, #16]
  40d190:	str	x1, [sp, #8]
  40d194:	bl	402d00 <__errno_location@plt>
  40d198:	ldr	w0, [x0]
  40d19c:	bl	402a30 <strerror@plt>
  40d1a0:	ldr	x1, [sp, #16]
  40d1a4:	str	x0, [sp]
  40d1a8:	mov	x0, x1
  40d1ac:	ldr	x1, [sp, #8]
  40d1b0:	ldr	x2, [sp]
  40d1b4:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d1b8:	ldur	x8, [x29, #-40]
  40d1bc:	ldur	x9, [x29, #-8]
  40d1c0:	str	x8, [x9]
  40d1c4:	ldur	w0, [x29, #-48]
  40d1c8:	ldur	x1, [x29, #-32]
  40d1cc:	bl	402970 <fdopen@plt>
  40d1d0:	str	x0, [sp, #56]
  40d1d4:	ldr	x0, [sp, #56]
  40d1d8:	ldur	x1, [x29, #-40]
  40d1dc:	bl	40cf50 <wcrtomb@plt+0xa1a0>
  40d1e0:	ldr	x0, [sp, #56]
  40d1e4:	ldp	x29, x30, [sp, #112]
  40d1e8:	add	sp, sp, #0x80
  40d1ec:	ret
  40d1f0:	sub	sp, sp, #0x50
  40d1f4:	stp	x29, x30, [sp, #64]
  40d1f8:	add	x29, sp, #0x40
  40d1fc:	stur	x0, [x29, #-8]
  40d200:	stur	x1, [x29, #-16]
  40d204:	stur	x2, [x29, #-24]
  40d208:	str	x3, [sp, #32]
  40d20c:	ldr	x0, [sp, #32]
  40d210:	bl	402be0 <clearerr_unlocked@plt>
  40d214:	ldur	x8, [x29, #-16]
  40d218:	cbz	x8, 40d298 <wcrtomb@plt+0xa4e8>
  40d21c:	ldur	x0, [x29, #-8]
  40d220:	ldur	x1, [x29, #-16]
  40d224:	ldur	x2, [x29, #-24]
  40d228:	ldr	x3, [sp, #32]
  40d22c:	bl	4026e0 <fwrite_unlocked@plt>
  40d230:	ldur	x8, [x29, #-24]
  40d234:	cmp	x0, x8
  40d238:	b.eq	40d298 <wcrtomb@plt+0xa4e8>  // b.none
  40d23c:	ldur	x2, [x29, #-24]
  40d240:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d244:	add	x0, x0, #0xc12
  40d248:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d24c:	add	x1, x1, #0xc35
  40d250:	bl	4026d0 <ngettext@plt>
  40d254:	ldur	x1, [x29, #-24]
  40d258:	ldr	x8, [sp, #32]
  40d25c:	str	x0, [sp, #24]
  40d260:	mov	x0, x8
  40d264:	str	x1, [sp, #16]
  40d268:	bl	40d2a4 <wcrtomb@plt+0xa4f4>
  40d26c:	str	x0, [sp, #8]
  40d270:	bl	402d00 <__errno_location@plt>
  40d274:	ldr	w0, [x0]
  40d278:	bl	402a30 <strerror@plt>
  40d27c:	ldr	x1, [sp, #24]
  40d280:	str	x0, [sp]
  40d284:	mov	x0, x1
  40d288:	ldr	x1, [sp, #16]
  40d28c:	ldr	x2, [sp, #8]
  40d290:	ldr	x3, [sp]
  40d294:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d298:	ldp	x29, x30, [sp, #64]
  40d29c:	add	sp, sp, #0x50
  40d2a0:	ret
  40d2a4:	sub	sp, sp, #0x20
  40d2a8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d2ac:	add	x8, x8, #0x778
  40d2b0:	str	x0, [sp, #16]
  40d2b4:	ldr	x8, [x8]
  40d2b8:	str	x8, [sp, #8]
  40d2bc:	ldr	x8, [sp, #8]
  40d2c0:	cbz	x8, 40d2f8 <wcrtomb@plt+0xa548>
  40d2c4:	ldr	x8, [sp, #8]
  40d2c8:	ldr	x8, [x8]
  40d2cc:	ldr	x9, [sp, #16]
  40d2d0:	cmp	x8, x9
  40d2d4:	b.ne	40d2e8 <wcrtomb@plt+0xa538>  // b.any
  40d2d8:	ldr	x8, [sp, #8]
  40d2dc:	ldr	x8, [x8, #8]
  40d2e0:	str	x8, [sp, #24]
  40d2e4:	b	40d37c <wcrtomb@plt+0xa5cc>
  40d2e8:	ldr	x8, [sp, #8]
  40d2ec:	ldr	x8, [x8, #16]
  40d2f0:	str	x8, [sp, #8]
  40d2f4:	b	40d2bc <wcrtomb@plt+0xa50c>
  40d2f8:	ldr	x8, [sp, #16]
  40d2fc:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d300:	add	x9, x9, #0x520
  40d304:	ldr	x9, [x9]
  40d308:	cmp	x8, x9
  40d30c:	b.ne	40d320 <wcrtomb@plt+0xa570>  // b.any
  40d310:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40d314:	add	x8, x8, #0xa44
  40d318:	str	x8, [sp, #24]
  40d31c:	b	40d37c <wcrtomb@plt+0xa5cc>
  40d320:	ldr	x8, [sp, #16]
  40d324:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d328:	add	x9, x9, #0x518
  40d32c:	ldr	x9, [x9]
  40d330:	cmp	x8, x9
  40d334:	b.ne	40d348 <wcrtomb@plt+0xa598>  // b.any
  40d338:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40d33c:	add	x8, x8, #0xa4f
  40d340:	str	x8, [sp, #24]
  40d344:	b	40d37c <wcrtomb@plt+0xa5cc>
  40d348:	ldr	x8, [sp, #16]
  40d34c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d350:	add	x9, x9, #0x500
  40d354:	ldr	x9, [x9]
  40d358:	cmp	x8, x9
  40d35c:	b.ne	40d370 <wcrtomb@plt+0xa5c0>  // b.any
  40d360:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  40d364:	add	x8, x8, #0xa5b
  40d368:	str	x8, [sp, #24]
  40d36c:	b	40d37c <wcrtomb@plt+0xa5cc>
  40d370:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d374:	add	x8, x8, #0xccb
  40d378:	str	x8, [sp, #24]
  40d37c:	ldr	x0, [sp, #24]
  40d380:	add	sp, sp, #0x20
  40d384:	ret
  40d388:	sub	sp, sp, #0x50
  40d38c:	stp	x29, x30, [sp, #64]
  40d390:	add	x29, sp, #0x40
  40d394:	stur	x0, [x29, #-8]
  40d398:	stur	x1, [x29, #-16]
  40d39c:	stur	x2, [x29, #-24]
  40d3a0:	str	x3, [sp, #32]
  40d3a4:	ldr	x0, [sp, #32]
  40d3a8:	bl	402be0 <clearerr_unlocked@plt>
  40d3ac:	ldur	x8, [x29, #-16]
  40d3b0:	cbz	x8, 40d428 <wcrtomb@plt+0xa678>
  40d3b4:	ldur	x0, [x29, #-8]
  40d3b8:	ldur	x1, [x29, #-16]
  40d3bc:	ldur	x2, [x29, #-24]
  40d3c0:	ldr	x3, [sp, #32]
  40d3c4:	bl	402ad0 <fread_unlocked@plt>
  40d3c8:	stur	x0, [x29, #-24]
  40d3cc:	cmp	x0, #0x0
  40d3d0:	cset	w8, hi  // hi = pmore
  40d3d4:	tbnz	w8, #0, 40d428 <wcrtomb@plt+0xa678>
  40d3d8:	ldr	x0, [sp, #32]
  40d3dc:	bl	402770 <ferror_unlocked@plt>
  40d3e0:	cbz	w0, 40d428 <wcrtomb@plt+0xa678>
  40d3e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d3e8:	add	x0, x0, #0xc59
  40d3ec:	bl	402d40 <gettext@plt>
  40d3f0:	ldr	x8, [sp, #32]
  40d3f4:	str	x0, [sp, #24]
  40d3f8:	mov	x0, x8
  40d3fc:	bl	40d2a4 <wcrtomb@plt+0xa4f4>
  40d400:	str	x0, [sp, #16]
  40d404:	bl	402d00 <__errno_location@plt>
  40d408:	ldr	w0, [x0]
  40d40c:	bl	402a30 <strerror@plt>
  40d410:	ldr	x1, [sp, #24]
  40d414:	str	x0, [sp, #8]
  40d418:	mov	x0, x1
  40d41c:	ldr	x1, [sp, #16]
  40d420:	ldr	x2, [sp, #8]
  40d424:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d428:	ldur	x0, [x29, #-24]
  40d42c:	ldp	x29, x30, [sp, #64]
  40d430:	add	sp, sp, #0x50
  40d434:	ret
  40d438:	sub	sp, sp, #0x60
  40d43c:	stp	x29, x30, [sp, #80]
  40d440:	add	x29, sp, #0x50
  40d444:	stur	x0, [x29, #-8]
  40d448:	stur	x1, [x29, #-16]
  40d44c:	sturb	w2, [x29, #-17]
  40d450:	stur	x3, [x29, #-32]
  40d454:	ldur	x0, [x29, #-32]
  40d458:	bl	402770 <ferror_unlocked@plt>
  40d45c:	cmp	w0, #0x0
  40d460:	cset	w8, ne  // ne = any
  40d464:	and	w8, w8, #0x1
  40d468:	strb	w8, [sp, #39]
  40d46c:	ldrb	w8, [sp, #39]
  40d470:	tbnz	w8, #0, 40d4a4 <wcrtomb@plt+0xa6f4>
  40d474:	ldur	x0, [x29, #-8]
  40d478:	ldur	x1, [x29, #-16]
  40d47c:	ldurb	w2, [x29, #-17]
  40d480:	ldur	x3, [x29, #-32]
  40d484:	bl	4028c0 <getdelim@plt>
  40d488:	str	x0, [sp, #40]
  40d48c:	ldur	x0, [x29, #-32]
  40d490:	bl	402770 <ferror_unlocked@plt>
  40d494:	cmp	w0, #0x0
  40d498:	cset	w8, ne  // ne = any
  40d49c:	and	w8, w8, #0x1
  40d4a0:	strb	w8, [sp, #39]
  40d4a4:	ldrb	w8, [sp, #39]
  40d4a8:	tbnz	w8, #0, 40d4b0 <wcrtomb@plt+0xa700>
  40d4ac:	b	40d4f4 <wcrtomb@plt+0xa744>
  40d4b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d4b4:	add	x0, x0, #0xc59
  40d4b8:	bl	402d40 <gettext@plt>
  40d4bc:	ldur	x8, [x29, #-32]
  40d4c0:	str	x0, [sp, #24]
  40d4c4:	mov	x0, x8
  40d4c8:	bl	40d2a4 <wcrtomb@plt+0xa4f4>
  40d4cc:	str	x0, [sp, #16]
  40d4d0:	bl	402d00 <__errno_location@plt>
  40d4d4:	ldr	w0, [x0]
  40d4d8:	bl	402a30 <strerror@plt>
  40d4dc:	ldr	x1, [sp, #24]
  40d4e0:	str	x0, [sp, #8]
  40d4e4:	mov	x0, x1
  40d4e8:	ldr	x1, [sp, #16]
  40d4ec:	ldr	x2, [sp, #8]
  40d4f0:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d4f4:	ldr	x0, [sp, #40]
  40d4f8:	ldp	x29, x30, [sp, #80]
  40d4fc:	add	sp, sp, #0x60
  40d500:	ret
  40d504:	sub	sp, sp, #0x30
  40d508:	stp	x29, x30, [sp, #32]
  40d50c:	add	x29, sp, #0x20
  40d510:	stur	x0, [x29, #-8]
  40d514:	ldur	x0, [x29, #-8]
  40d518:	bl	4027e0 <__fwriting@plt>
  40d51c:	cbnz	w0, 40d524 <wcrtomb@plt+0xa774>
  40d520:	b	40d584 <wcrtomb@plt+0xa7d4>
  40d524:	ldur	x0, [x29, #-8]
  40d528:	bl	402be0 <clearerr_unlocked@plt>
  40d52c:	ldur	x0, [x29, #-8]
  40d530:	bl	402bc0 <fflush_unlocked@plt>
  40d534:	mov	w8, #0xffffffff            	// #-1
  40d538:	cmp	w0, w8
  40d53c:	b.ne	40d584 <wcrtomb@plt+0xa7d4>  // b.any
  40d540:	bl	402d00 <__errno_location@plt>
  40d544:	ldr	w8, [x0]
  40d548:	cmp	w8, #0x9
  40d54c:	b.eq	40d584 <wcrtomb@plt+0xa7d4>  // b.none
  40d550:	ldur	x0, [x29, #-8]
  40d554:	bl	40d2a4 <wcrtomb@plt+0xa4f4>
  40d558:	str	x0, [sp, #16]
  40d55c:	bl	402d00 <__errno_location@plt>
  40d560:	ldr	w0, [x0]
  40d564:	bl	402a30 <strerror@plt>
  40d568:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d56c:	add	x8, x8, #0xc6e
  40d570:	str	x0, [sp, #8]
  40d574:	mov	x0, x8
  40d578:	ldr	x1, [sp, #16]
  40d57c:	ldr	x2, [sp, #8]
  40d580:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d584:	ldp	x29, x30, [sp, #32]
  40d588:	add	sp, sp, #0x30
  40d58c:	ret
  40d590:	sub	sp, sp, #0x50
  40d594:	stp	x29, x30, [sp, #64]
  40d598:	add	x29, sp, #0x40
  40d59c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d5a0:	add	x8, x8, #0x778
  40d5a4:	add	x9, sp, #0x18
  40d5a8:	stur	x0, [x29, #-8]
  40d5ac:	ldr	x8, [x8]
  40d5b0:	str	x8, [x9, #16]
  40d5b4:	str	x9, [sp, #16]
  40d5b8:	ldr	x8, [sp, #16]
  40d5bc:	ldr	x8, [x8, #16]
  40d5c0:	str	x8, [sp, #8]
  40d5c4:	cbz	x8, 40d624 <wcrtomb@plt+0xa874>
  40d5c8:	ldur	x8, [x29, #-8]
  40d5cc:	cbz	x8, 40d5e4 <wcrtomb@plt+0xa834>
  40d5d0:	ldur	x8, [x29, #-8]
  40d5d4:	ldr	x9, [sp, #8]
  40d5d8:	ldr	x9, [x9]
  40d5dc:	cmp	x8, x9
  40d5e0:	b.ne	40d618 <wcrtomb@plt+0xa868>  // b.any
  40d5e4:	ldr	x8, [sp, #8]
  40d5e8:	ldr	x0, [x8]
  40d5ec:	bl	40d65c <wcrtomb@plt+0xa8ac>
  40d5f0:	ldr	x8, [sp, #8]
  40d5f4:	ldr	x8, [x8, #16]
  40d5f8:	ldr	x9, [sp, #16]
  40d5fc:	str	x8, [x9, #16]
  40d600:	ldr	x8, [sp, #8]
  40d604:	ldr	x0, [x8, #8]
  40d608:	bl	402b40 <free@plt>
  40d60c:	ldr	x0, [sp, #8]
  40d610:	bl	402b40 <free@plt>
  40d614:	b	40d620 <wcrtomb@plt+0xa870>
  40d618:	ldr	x8, [sp, #8]
  40d61c:	str	x8, [sp, #16]
  40d620:	b	40d5b8 <wcrtomb@plt+0xa808>
  40d624:	add	x8, sp, #0x18
  40d628:	ldr	x8, [x8, #16]
  40d62c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d630:	add	x9, x9, #0x778
  40d634:	str	x8, [x9]
  40d638:	ldur	x8, [x29, #-8]
  40d63c:	cbnz	x8, 40d650 <wcrtomb@plt+0xa8a0>
  40d640:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d644:	add	x8, x8, #0x518
  40d648:	ldr	x0, [x8]
  40d64c:	bl	40d65c <wcrtomb@plt+0xa8ac>
  40d650:	ldp	x29, x30, [sp, #64]
  40d654:	add	sp, sp, #0x50
  40d658:	ret
  40d65c:	sub	sp, sp, #0x30
  40d660:	stp	x29, x30, [sp, #32]
  40d664:	add	x29, sp, #0x20
  40d668:	mov	w8, #0xffffffff            	// #-1
  40d66c:	stur	x0, [x29, #-8]
  40d670:	ldur	x0, [x29, #-8]
  40d674:	stur	w8, [x29, #-12]
  40d678:	bl	40d504 <wcrtomb@plt+0xa754>
  40d67c:	ldur	x0, [x29, #-8]
  40d680:	bl	402be0 <clearerr_unlocked@plt>
  40d684:	ldur	x0, [x29, #-8]
  40d688:	bl	402820 <fclose@plt>
  40d68c:	ldur	w8, [x29, #-12]
  40d690:	cmp	w0, w8
  40d694:	b.ne	40d6cc <wcrtomb@plt+0xa91c>  // b.any
  40d698:	ldur	x0, [x29, #-8]
  40d69c:	bl	40d2a4 <wcrtomb@plt+0xa4f4>
  40d6a0:	str	x0, [sp, #8]
  40d6a4:	bl	402d00 <__errno_location@plt>
  40d6a8:	ldr	w0, [x0]
  40d6ac:	bl	402a30 <strerror@plt>
  40d6b0:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d6b4:	add	x8, x8, #0xcd5
  40d6b8:	str	x0, [sp]
  40d6bc:	mov	x0, x8
  40d6c0:	ldr	x1, [sp, #8]
  40d6c4:	ldr	x2, [sp]
  40d6c8:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d6cc:	ldp	x29, x30, [sp, #32]
  40d6d0:	add	sp, sp, #0x30
  40d6d4:	ret
  40d6d8:	sub	sp, sp, #0x120
  40d6dc:	stp	x29, x30, [sp, #256]
  40d6e0:	str	x28, [sp, #272]
  40d6e4:	add	x29, sp, #0x100
  40d6e8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d6ec:	add	x8, x8, #0x790
  40d6f0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d6f4:	add	x9, x9, #0x780
  40d6f8:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  40d6fc:	add	x10, x10, #0x788
  40d700:	stur	x0, [x29, #-8]
  40d704:	ldur	x11, [x29, #-8]
  40d708:	str	x11, [sp, #112]
  40d70c:	ldr	w12, [x8]
  40d710:	str	x8, [sp, #88]
  40d714:	str	x9, [sp, #80]
  40d718:	str	x10, [sp, #72]
  40d71c:	cbnz	w12, 40d754 <wcrtomb@plt+0xa9a4>
  40d720:	mov	x8, #0x1001                	// #4097
  40d724:	mov	x0, x8
  40d728:	str	x8, [sp, #64]
  40d72c:	bl	41d908 <wcrtomb@plt+0x1ab58>
  40d730:	ldr	x8, [sp, #80]
  40d734:	str	x0, [x8]
  40d738:	ldr	x0, [sp, #64]
  40d73c:	bl	41d908 <wcrtomb@plt+0x1ab58>
  40d740:	ldr	x8, [sp, #72]
  40d744:	str	x0, [x8]
  40d748:	mov	w9, #0x1001                	// #4097
  40d74c:	ldr	x10, [sp, #88]
  40d750:	str	w9, [x10]
  40d754:	ldr	x0, [sp, #112]
  40d758:	add	x1, sp, #0x78
  40d75c:	bl	436f40 <_obstack_memory_used@@Base+0x18da4>
  40d760:	str	w0, [sp, #100]
  40d764:	mov	w8, #0x0                   	// #0
  40d768:	str	w8, [sp, #60]
  40d76c:	cbnz	w0, 40d788 <wcrtomb@plt+0xa9d8>
  40d770:	ldr	w8, [sp, #136]
  40d774:	mov	w9, #0xa000                	// #40960
  40d778:	and	w8, w8, w9
  40d77c:	cmp	w8, #0xa, lsl #12
  40d780:	cset	w8, eq  // eq = none
  40d784:	str	w8, [sp, #60]
  40d788:	ldr	w8, [sp, #60]
  40d78c:	tbnz	w8, #0, 40d794 <wcrtomb@plt+0xa9e4>
  40d790:	b	40d9c0 <wcrtomb@plt+0xac10>
  40d794:	ldr	x8, [sp, #112]
  40d798:	ldr	x9, [sp, #72]
  40d79c:	ldr	x10, [x9]
  40d7a0:	cmp	x8, x10
  40d7a4:	b.ne	40d7c8 <wcrtomb@plt+0xaa18>  // b.any
  40d7a8:	ldr	x8, [sp, #80]
  40d7ac:	ldr	x0, [x8]
  40d7b0:	ldr	x9, [sp, #72]
  40d7b4:	ldr	x1, [x9]
  40d7b8:	bl	402bd0 <strcpy@plt>
  40d7bc:	ldr	x8, [sp, #80]
  40d7c0:	ldr	x9, [x8]
  40d7c4:	str	x9, [sp, #112]
  40d7c8:	ldr	x0, [sp, #112]
  40d7cc:	ldr	x8, [sp, #72]
  40d7d0:	ldr	x1, [x8]
  40d7d4:	ldr	x9, [sp, #88]
  40d7d8:	ldrsw	x2, [x9]
  40d7dc:	bl	402760 <readlink@plt>
  40d7e0:	str	w0, [sp, #100]
  40d7e4:	ldr	x8, [sp, #88]
  40d7e8:	ldr	w10, [x8]
  40d7ec:	cmp	w0, w10
  40d7f0:	b.ne	40d840 <wcrtomb@plt+0xaa90>  // b.any
  40d7f4:	ldr	x8, [sp, #88]
  40d7f8:	ldr	w9, [x8]
  40d7fc:	mov	w10, #0x2                   	// #2
  40d800:	mul	w9, w9, w10
  40d804:	str	w9, [x8]
  40d808:	ldr	x11, [sp, #80]
  40d80c:	ldr	x0, [x11]
  40d810:	ldrsw	x1, [x8]
  40d814:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  40d818:	ldr	x8, [sp, #80]
  40d81c:	str	x0, [x8]
  40d820:	ldr	x11, [sp, #72]
  40d824:	ldr	x0, [x11]
  40d828:	ldr	x12, [sp, #88]
  40d82c:	ldrsw	x1, [x12]
  40d830:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  40d834:	ldr	x8, [sp, #72]
  40d838:	str	x0, [x8]
  40d83c:	b	40d7c8 <wcrtomb@plt+0xaa18>
  40d840:	ldr	w8, [sp, #100]
  40d844:	cmp	w8, #0x0
  40d848:	cset	w8, ge  // ge = tcont
  40d84c:	tbnz	w8, #0, 40d88c <wcrtomb@plt+0xaadc>
  40d850:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d854:	add	x0, x0, #0xc84
  40d858:	bl	402d40 <gettext@plt>
  40d85c:	ldr	x1, [sp, #112]
  40d860:	str	x0, [sp, #48]
  40d864:	str	x1, [sp, #40]
  40d868:	bl	402d00 <__errno_location@plt>
  40d86c:	ldr	w0, [x0]
  40d870:	bl	402a30 <strerror@plt>
  40d874:	ldr	x1, [sp, #48]
  40d878:	str	x0, [sp, #32]
  40d87c:	mov	x0, x1
  40d880:	ldr	x1, [sp, #40]
  40d884:	ldr	x2, [sp, #32]
  40d888:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40d88c:	ldr	x8, [sp, #72]
  40d890:	ldr	x9, [x8]
  40d894:	ldrsw	x10, [sp, #100]
  40d898:	add	x9, x9, x10
  40d89c:	mov	w11, #0x0                   	// #0
  40d8a0:	strb	w11, [x9]
  40d8a4:	ldr	x8, [sp, #72]
  40d8a8:	ldr	x9, [x8]
  40d8ac:	ldrb	w10, [x9]
  40d8b0:	cmp	w10, #0x2f
  40d8b4:	b.eq	40d9b0 <wcrtomb@plt+0xac00>  // b.none
  40d8b8:	ldr	x0, [sp, #112]
  40d8bc:	mov	w1, #0x2f                  	// #47
  40d8c0:	bl	402a40 <strrchr@plt>
  40d8c4:	str	x0, [sp, #104]
  40d8c8:	cbz	x0, 40d9b0 <wcrtomb@plt+0xac00>
  40d8cc:	ldr	x8, [sp, #104]
  40d8d0:	ldr	x9, [sp, #112]
  40d8d4:	subs	x8, x8, x9
  40d8d8:	add	x8, x8, #0x1
  40d8dc:	str	w8, [sp, #96]
  40d8e0:	ldr	w8, [sp, #96]
  40d8e4:	ldr	w10, [sp, #100]
  40d8e8:	add	w8, w8, w10
  40d8ec:	add	w8, w8, #0x1
  40d8f0:	ldr	x9, [sp, #88]
  40d8f4:	ldr	w10, [x9]
  40d8f8:	cmp	w8, w10
  40d8fc:	b.le	40d94c <wcrtomb@plt+0xab9c>
  40d900:	ldr	w8, [sp, #96]
  40d904:	ldr	w9, [sp, #100]
  40d908:	add	w8, w8, w9
  40d90c:	add	w8, w8, #0x1
  40d910:	ldr	x10, [sp, #88]
  40d914:	str	w8, [x10]
  40d918:	ldr	x11, [sp, #80]
  40d91c:	ldr	x0, [x11]
  40d920:	ldrsw	x1, [x10]
  40d924:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  40d928:	ldr	x10, [sp, #80]
  40d92c:	str	x0, [x10]
  40d930:	ldr	x11, [sp, #72]
  40d934:	ldr	x0, [x11]
  40d938:	ldr	x12, [sp, #88]
  40d93c:	ldrsw	x1, [x12]
  40d940:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  40d944:	ldr	x10, [sp, #72]
  40d948:	str	x0, [x10]
  40d94c:	ldr	x8, [sp, #112]
  40d950:	ldr	x9, [sp, #80]
  40d954:	ldr	x10, [x9]
  40d958:	cmp	x8, x10
  40d95c:	b.eq	40d974 <wcrtomb@plt+0xabc4>  // b.none
  40d960:	ldr	x8, [sp, #80]
  40d964:	ldr	x0, [x8]
  40d968:	ldr	x1, [sp, #112]
  40d96c:	ldrsw	x2, [sp, #96]
  40d970:	bl	4026a0 <memcpy@plt>
  40d974:	ldr	x8, [sp, #80]
  40d978:	ldr	x9, [x8]
  40d97c:	ldrsw	x10, [sp, #96]
  40d980:	add	x0, x9, x10
  40d984:	ldr	x9, [sp, #72]
  40d988:	ldr	x1, [x9]
  40d98c:	ldr	w11, [sp, #100]
  40d990:	add	w11, w11, #0x1
  40d994:	mov	w2, w11
  40d998:	sxtw	x2, w2
  40d99c:	bl	4026a0 <memcpy@plt>
  40d9a0:	ldr	x8, [sp, #80]
  40d9a4:	ldr	x9, [x8]
  40d9a8:	str	x9, [sp, #112]
  40d9ac:	b	40d9bc <wcrtomb@plt+0xac0c>
  40d9b0:	ldr	x8, [sp, #72]
  40d9b4:	ldr	x9, [x8]
  40d9b8:	str	x9, [sp, #112]
  40d9bc:	b	40d754 <wcrtomb@plt+0xa9a4>
  40d9c0:	ldr	w8, [sp, #100]
  40d9c4:	cmp	w8, #0x0
  40d9c8:	cset	w8, ge  // ge = tcont
  40d9cc:	tbnz	w8, #0, 40da0c <wcrtomb@plt+0xac5c>
  40d9d0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40d9d4:	add	x0, x0, #0xca3
  40d9d8:	bl	402d40 <gettext@plt>
  40d9dc:	ldr	x1, [sp, #112]
  40d9e0:	str	x0, [sp, #24]
  40d9e4:	str	x1, [sp, #16]
  40d9e8:	bl	402d00 <__errno_location@plt>
  40d9ec:	ldr	w0, [x0]
  40d9f0:	bl	402a30 <strerror@plt>
  40d9f4:	ldr	x1, [sp, #24]
  40d9f8:	str	x0, [sp, #8]
  40d9fc:	mov	x0, x1
  40da00:	ldr	x1, [sp, #16]
  40da04:	ldr	x2, [sp, #8]
  40da08:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40da0c:	ldr	x0, [sp, #112]
  40da10:	ldr	x28, [sp, #272]
  40da14:	ldp	x29, x30, [sp, #256]
  40da18:	add	sp, sp, #0x120
  40da1c:	ret
  40da20:	sub	sp, sp, #0x70
  40da24:	stp	x29, x30, [sp, #96]
  40da28:	add	x29, sp, #0x60
  40da2c:	mov	w8, #0xffffffff            	// #-1
  40da30:	stur	x0, [x29, #-8]
  40da34:	stur	x1, [x29, #-16]
  40da38:	stur	x2, [x29, #-24]
  40da3c:	ldur	x0, [x29, #-8]
  40da40:	ldur	x1, [x29, #-16]
  40da44:	stur	w8, [x29, #-36]
  40da48:	bl	402bb0 <rename@plt>
  40da4c:	stur	w0, [x29, #-28]
  40da50:	ldur	w8, [x29, #-28]
  40da54:	ldur	w9, [x29, #-36]
  40da58:	cmp	w8, w9
  40da5c:	b.eq	40da6c <wcrtomb@plt+0xacbc>  // b.none
  40da60:	ldp	x29, x30, [sp, #96]
  40da64:	add	sp, sp, #0x70
  40da68:	ret
  40da6c:	ldur	x8, [x29, #-24]
  40da70:	cbz	x8, 40daec <wcrtomb@plt+0xad3c>
  40da74:	bl	402d00 <__errno_location@plt>
  40da78:	ldr	w8, [x0]
  40da7c:	stur	w8, [x29, #-32]
  40da80:	bl	402d00 <__errno_location@plt>
  40da84:	str	wzr, [x0]
  40da88:	ldur	x0, [x29, #-24]
  40da8c:	bl	402d30 <unlink@plt>
  40da90:	bl	402d00 <__errno_location@plt>
  40da94:	ldr	w8, [x0]
  40da98:	cbz	w8, 40dad8 <wcrtomb@plt+0xad28>
  40da9c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40daa0:	add	x0, x0, #0xbbd
  40daa4:	bl	402d40 <gettext@plt>
  40daa8:	ldur	x1, [x29, #-24]
  40daac:	str	x0, [sp, #48]
  40dab0:	str	x1, [sp, #40]
  40dab4:	bl	402d00 <__errno_location@plt>
  40dab8:	ldr	w0, [x0]
  40dabc:	bl	402a30 <strerror@plt>
  40dac0:	ldr	x1, [sp, #48]
  40dac4:	str	x0, [sp, #32]
  40dac8:	mov	x0, x1
  40dacc:	ldr	x1, [sp, #40]
  40dad0:	ldr	x2, [sp, #32]
  40dad4:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40dad8:	ldur	w8, [x29, #-32]
  40dadc:	str	w8, [sp, #28]
  40dae0:	bl	402d00 <__errno_location@plt>
  40dae4:	ldr	w8, [sp, #28]
  40dae8:	str	w8, [x0]
  40daec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40daf0:	add	x0, x0, #0xcb6
  40daf4:	bl	402d40 <gettext@plt>
  40daf8:	ldur	x1, [x29, #-8]
  40dafc:	str	x0, [sp, #16]
  40db00:	str	x1, [sp, #8]
  40db04:	bl	402d00 <__errno_location@plt>
  40db08:	ldr	w0, [x0]
  40db0c:	bl	402a30 <strerror@plt>
  40db10:	ldr	x1, [sp, #16]
  40db14:	str	x0, [sp]
  40db18:	mov	x0, x1
  40db1c:	ldr	x1, [sp, #8]
  40db20:	ldr	x2, [sp]
  40db24:	bl	40ccd0 <wcrtomb@plt+0x9f20>
  40db28:	sub	sp, sp, #0x20
  40db2c:	stp	x29, x30, [sp, #16]
  40db30:	add	x29, sp, #0x10
  40db34:	mov	x0, #0x1                   	// #1
  40db38:	mov	x1, #0x18                  	// #24
  40db3c:	mov	x8, #0x32                  	// #50
  40db40:	str	x8, [sp]
  40db44:	bl	41d930 <wcrtomb@plt+0x1ab80>
  40db48:	str	x0, [sp, #8]
  40db4c:	ldr	x0, [sp]
  40db50:	bl	41d908 <wcrtomb@plt+0x1ab58>
  40db54:	ldr	x8, [sp, #8]
  40db58:	str	x0, [x8, #16]
  40db5c:	ldr	x8, [sp, #8]
  40db60:	ldr	x9, [sp]
  40db64:	str	x9, [x8]
  40db68:	ldr	x8, [sp, #8]
  40db6c:	str	xzr, [x8, #8]
  40db70:	ldr	x0, [sp, #8]
  40db74:	ldp	x29, x30, [sp, #16]
  40db78:	add	sp, sp, #0x20
  40db7c:	ret
  40db80:	sub	sp, sp, #0x10
  40db84:	str	x0, [sp, #8]
  40db88:	ldr	x8, [sp, #8]
  40db8c:	ldr	x0, [x8, #16]
  40db90:	add	sp, sp, #0x10
  40db94:	ret
  40db98:	sub	sp, sp, #0x10
  40db9c:	str	x0, [sp, #8]
  40dba0:	ldr	x8, [sp, #8]
  40dba4:	ldr	x0, [x8, #8]
  40dba8:	add	sp, sp, #0x10
  40dbac:	ret
  40dbb0:	sub	sp, sp, #0x40
  40dbb4:	stp	x29, x30, [sp, #48]
  40dbb8:	add	x29, sp, #0x30
  40dbbc:	stur	x0, [x29, #-8]
  40dbc0:	stur	x1, [x29, #-16]
  40dbc4:	str	x2, [sp, #24]
  40dbc8:	ldur	x8, [x29, #-8]
  40dbcc:	ldr	x8, [x8]
  40dbd0:	ldur	x9, [x29, #-8]
  40dbd4:	ldr	x9, [x9, #8]
  40dbd8:	subs	x8, x8, x9
  40dbdc:	ldr	x9, [sp, #24]
  40dbe0:	cmp	x8, x9
  40dbe4:	b.cs	40dc00 <wcrtomb@plt+0xae50>  // b.hs, b.nlast
  40dbe8:	ldur	x0, [x29, #-8]
  40dbec:	ldur	x8, [x29, #-8]
  40dbf0:	ldr	x8, [x8, #8]
  40dbf4:	ldr	x9, [sp, #24]
  40dbf8:	add	x1, x8, x9
  40dbfc:	bl	40dc54 <wcrtomb@plt+0xaea4>
  40dc00:	ldur	x8, [x29, #-8]
  40dc04:	ldr	x8, [x8, #16]
  40dc08:	ldur	x9, [x29, #-8]
  40dc0c:	ldr	x9, [x9, #8]
  40dc10:	add	x8, x8, x9
  40dc14:	ldur	x1, [x29, #-16]
  40dc18:	ldr	x2, [sp, #24]
  40dc1c:	mov	x0, x8
  40dc20:	str	x8, [sp, #8]
  40dc24:	bl	4026a0 <memcpy@plt>
  40dc28:	ldr	x8, [sp, #8]
  40dc2c:	str	x8, [sp, #16]
  40dc30:	ldr	x9, [sp, #24]
  40dc34:	ldur	x10, [x29, #-8]
  40dc38:	ldr	x11, [x10, #8]
  40dc3c:	add	x9, x11, x9
  40dc40:	str	x9, [x10, #8]
  40dc44:	ldr	x0, [sp, #16]
  40dc48:	ldp	x29, x30, [sp, #48]
  40dc4c:	add	sp, sp, #0x40
  40dc50:	ret
  40dc54:	sub	sp, sp, #0x30
  40dc58:	stp	x29, x30, [sp, #32]
  40dc5c:	add	x29, sp, #0x20
  40dc60:	mov	x8, xzr
  40dc64:	stur	x0, [x29, #-8]
  40dc68:	str	x1, [sp, #16]
  40dc6c:	str	x8, [sp, #8]
  40dc70:	ldur	x8, [x29, #-8]
  40dc74:	ldr	x8, [x8]
  40dc78:	str	x8, [sp]
  40dc7c:	ldr	x8, [sp, #16]
  40dc80:	ldr	x9, [sp]
  40dc84:	cmp	x8, x9
  40dc88:	b.hi	40dc90 <wcrtomb@plt+0xaee0>  // b.pmore
  40dc8c:	b	40dd04 <wcrtomb@plt+0xaf54>
  40dc90:	ldr	x8, [sp]
  40dc94:	mov	x9, #0x2                   	// #2
  40dc98:	mul	x8, x8, x9
  40dc9c:	str	x8, [sp]
  40dca0:	ldr	x8, [sp, #16]
  40dca4:	ldr	x9, [sp]
  40dca8:	cmp	x8, x9
  40dcac:	b.cs	40dcc4 <wcrtomb@plt+0xaf14>  // b.hs, b.nlast
  40dcb0:	ldur	x8, [x29, #-8]
  40dcb4:	ldr	x0, [x8, #16]
  40dcb8:	ldr	x1, [sp]
  40dcbc:	bl	4029c0 <realloc@plt>
  40dcc0:	str	x0, [sp, #8]
  40dcc4:	ldr	x8, [sp, #8]
  40dcc8:	cbnz	x8, 40dcec <wcrtomb@plt+0xaf3c>
  40dccc:	ldr	x8, [sp, #16]
  40dcd0:	str	x8, [sp]
  40dcd4:	ldur	x8, [x29, #-8]
  40dcd8:	ldr	x0, [x8, #16]
  40dcdc:	ldr	x1, [sp]
  40dce0:	mov	x2, #0x1                   	// #1
  40dce4:	bl	41d700 <wcrtomb@plt+0x1a950>
  40dce8:	str	x0, [sp, #8]
  40dcec:	ldr	x8, [sp]
  40dcf0:	ldur	x9, [x29, #-8]
  40dcf4:	str	x8, [x9]
  40dcf8:	ldr	x8, [sp, #8]
  40dcfc:	ldur	x9, [x29, #-8]
  40dd00:	str	x8, [x9, #16]
  40dd04:	ldp	x29, x30, [sp, #32]
  40dd08:	add	sp, sp, #0x30
  40dd0c:	ret
  40dd10:	sub	sp, sp, #0x30
  40dd14:	stp	x29, x30, [sp, #32]
  40dd18:	add	x29, sp, #0x20
  40dd1c:	mov	w8, #0xffffffff            	// #-1
  40dd20:	str	x0, [sp, #16]
  40dd24:	str	w1, [sp, #12]
  40dd28:	ldr	w9, [sp, #12]
  40dd2c:	cmp	w9, w8
  40dd30:	b.eq	40dd9c <wcrtomb@plt+0xafec>  // b.none
  40dd34:	ldr	x8, [sp, #16]
  40dd38:	ldr	x8, [x8]
  40dd3c:	ldr	x9, [sp, #16]
  40dd40:	ldr	x9, [x9, #8]
  40dd44:	subs	x8, x8, x9
  40dd48:	cmp	x8, #0x1
  40dd4c:	b.cs	40dd64 <wcrtomb@plt+0xafb4>  // b.hs, b.nlast
  40dd50:	ldr	x0, [sp, #16]
  40dd54:	ldr	x8, [sp, #16]
  40dd58:	ldr	x8, [x8, #8]
  40dd5c:	add	x1, x8, #0x1
  40dd60:	bl	40dc54 <wcrtomb@plt+0xaea4>
  40dd64:	ldr	x8, [sp, #16]
  40dd68:	ldr	x8, [x8, #16]
  40dd6c:	ldr	x9, [sp, #16]
  40dd70:	ldr	x10, [x9, #8]
  40dd74:	add	x11, x10, #0x1
  40dd78:	str	x11, [x9, #8]
  40dd7c:	add	x8, x8, x10
  40dd80:	str	x8, [sp]
  40dd84:	ldr	w12, [sp, #12]
  40dd88:	ldr	x8, [sp]
  40dd8c:	strb	w12, [x8]
  40dd90:	ldr	x8, [sp]
  40dd94:	stur	x8, [x29, #-8]
  40dd98:	b	40dda4 <wcrtomb@plt+0xaff4>
  40dd9c:	mov	x8, xzr
  40dda0:	stur	x8, [x29, #-8]
  40dda4:	ldur	x0, [x29, #-8]
  40dda8:	ldp	x29, x30, [sp, #32]
  40ddac:	add	sp, sp, #0x30
  40ddb0:	ret
  40ddb4:	sub	sp, sp, #0x20
  40ddb8:	stp	x29, x30, [sp, #16]
  40ddbc:	add	x29, sp, #0x10
  40ddc0:	str	x0, [sp, #8]
  40ddc4:	ldr	x8, [sp, #8]
  40ddc8:	cbz	x8, 40ddd8 <wcrtomb@plt+0xb028>
  40ddcc:	ldr	x8, [sp, #8]
  40ddd0:	ldr	x0, [x8, #16]
  40ddd4:	bl	402b40 <free@plt>
  40ddd8:	ldr	x0, [sp, #8]
  40dddc:	bl	402b40 <free@plt>
  40dde0:	ldp	x29, x30, [sp, #16]
  40dde4:	add	sp, sp, #0x20
  40dde8:	ret
  40ddec:	sub	sp, sp, #0x60
  40ddf0:	stp	x29, x30, [sp, #80]
  40ddf4:	add	x29, sp, #0x50
  40ddf8:	mov	w8, #0xfffffffe            	// #-2
  40ddfc:	stur	x0, [x29, #-8]
  40de00:	stur	w1, [x29, #-12]
  40de04:	stur	x2, [x29, #-24]
  40de08:	stur	w3, [x29, #-28]
  40de0c:	stur	w4, [x29, #-32]
  40de10:	ldur	x0, [x29, #-8]
  40de14:	ldur	w1, [x29, #-12]
  40de18:	ldur	x2, [x29, #-24]
  40de1c:	ldur	w3, [x29, #-28]
  40de20:	ldur	w4, [x29, #-32]
  40de24:	str	w8, [sp, #40]
  40de28:	bl	41a7e8 <wcrtomb@plt+0x17a38>
  40de2c:	stur	w0, [x29, #-36]
  40de30:	ldur	w8, [x29, #-36]
  40de34:	ldr	w9, [sp, #40]
  40de38:	cmp	w8, w9
  40de3c:	str	w8, [sp, #36]
  40de40:	b.eq	40de5c <wcrtomb@plt+0xb0ac>  // b.none
  40de44:	b	40de48 <wcrtomb@plt+0xb098>
  40de48:	mov	w8, #0xffffffff            	// #-1
  40de4c:	ldr	w9, [sp, #36]
  40de50:	cmp	w9, w8
  40de54:	b.eq	40de94 <wcrtomb@plt+0xb0e4>  // b.none
  40de58:	b	40dedc <wcrtomb@plt+0xb12c>
  40de5c:	bl	402d00 <__errno_location@plt>
  40de60:	ldr	w1, [x0]
  40de64:	ldur	x0, [x29, #-8]
  40de68:	str	w1, [sp, #32]
  40de6c:	bl	41c94c <wcrtomb@plt+0x19b9c>
  40de70:	mov	w8, wzr
  40de74:	str	x0, [sp, #24]
  40de78:	mov	w0, w8
  40de7c:	ldr	w1, [sp, #32]
  40de80:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x19e64>
  40de84:	add	x2, x2, #0xbe9
  40de88:	ldr	x3, [sp, #24]
  40de8c:	bl	402730 <error@plt>
  40de90:	b	40dedc <wcrtomb@plt+0xb12c>
  40de94:	bl	402d00 <__errno_location@plt>
  40de98:	ldr	w1, [x0]
  40de9c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  40dea0:	add	x0, x0, #0xceb
  40dea4:	str	w1, [sp, #20]
  40dea8:	bl	402d40 <gettext@plt>
  40deac:	ldur	x8, [x29, #-24]
  40deb0:	str	x0, [sp, #8]
  40deb4:	mov	x0, x8
  40deb8:	bl	41c94c <wcrtomb@plt+0x19b9c>
  40debc:	mov	w9, wzr
  40dec0:	str	x0, [sp]
  40dec4:	mov	w0, w9
  40dec8:	ldr	w1, [sp, #20]
  40decc:	ldr	x2, [sp, #8]
  40ded0:	ldr	x3, [sp]
  40ded4:	bl	402730 <error@plt>
  40ded8:	b	40dedc <wcrtomb@plt+0xb12c>
  40dedc:	ldur	w0, [x29, #-36]
  40dee0:	ldp	x29, x30, [sp, #80]
  40dee4:	add	sp, sp, #0x60
  40dee8:	ret
  40deec:	sub	sp, sp, #0x30
  40def0:	stp	x29, x30, [sp, #32]
  40def4:	add	x29, sp, #0x20
  40def8:	mov	x8, #0xffffffffffffffff    	// #-1
  40defc:	mov	w9, #0x1                   	// #1
  40df00:	stur	x0, [x29, #-8]
  40df04:	str	x1, [sp, #16]
  40df08:	str	x2, [sp, #8]
  40df0c:	ldur	x10, [x29, #-8]
  40df10:	ldr	x11, [sp, #8]
  40df14:	str	x10, [x11, #32]
  40df18:	ldr	x10, [sp, #16]
  40df1c:	ldr	x11, [sp, #8]
  40df20:	str	x10, [x11, #40]
  40df24:	ldr	x10, [sp, #8]
  40df28:	str	x8, [x10, #48]
  40df2c:	ldr	x8, [sp, #8]
  40df30:	strb	w9, [x8, #120]
  40df34:	ldr	x8, [sp, #8]
  40df38:	ldrb	w9, [x8, #456]
  40df3c:	tbnz	w9, #0, 40df50 <wcrtomb@plt+0xb1a0>
  40df40:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40df44:	add	x0, x0, #0x1b8
  40df48:	bl	402d40 <gettext@plt>
  40df4c:	bl	40b560 <wcrtomb@plt+0x87b0>
  40df50:	ldr	x8, [sp, #8]
  40df54:	ldr	x8, [x8, #184]
  40df58:	cbnz	x8, 40df68 <wcrtomb@plt+0xb1b8>
  40df5c:	ldr	x0, [sp, #8]
  40df60:	mov	x1, #0x10b                 	// #267
  40df64:	bl	40e00c <wcrtomb@plt+0xb25c>
  40df68:	ldr	x0, [sp, #8]
  40df6c:	bl	40e10c <wcrtomb@plt+0xb35c>
  40df70:	ldr	x8, [sp, #8]
  40df74:	str	x0, [x8, #128]
  40df78:	ldr	x8, [sp, #8]
  40df7c:	ldr	x8, [x8, #168]
  40df80:	ldr	x9, [sp, #8]
  40df84:	str	x8, [x9, #136]
  40df88:	ldr	x0, [sp, #8]
  40df8c:	bl	40effc <wcrtomb@plt+0xc24c>
  40df90:	ldr	x8, [sp, #8]
  40df94:	ldr	x8, [x8, #128]
  40df98:	mov	x9, #0xffffffffffffffff    	// #-1
  40df9c:	cmp	x8, x9
  40dfa0:	b.eq	40dfb4 <wcrtomb@plt+0xb204>  // b.none
  40dfa4:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40dfa8:	add	x0, x0, #0x1cc
  40dfac:	bl	402d40 <gettext@plt>
  40dfb0:	bl	40b560 <wcrtomb@plt+0x87b0>
  40dfb4:	ldr	x0, [sp, #8]
  40dfb8:	ldr	x8, [sp, #8]
  40dfbc:	ldr	x8, [x8, #184]
  40dfc0:	mov	x9, #0xffffffffffffffff    	// #-1
  40dfc4:	subs	x1, x9, x8
  40dfc8:	bl	40e00c <wcrtomb@plt+0xb25c>
  40dfcc:	ldr	x0, [sp, #8]
  40dfd0:	mov	x1, #0x105                 	// #261
  40dfd4:	bl	40e00c <wcrtomb@plt+0xb25c>
  40dfd8:	ldr	x8, [sp, #8]
  40dfdc:	ldr	x8, [x8, #184]
  40dfe0:	cbz	x8, 40dff0 <wcrtomb@plt+0xb240>
  40dfe4:	ldr	x0, [sp, #8]
  40dfe8:	mov	x1, #0x106                 	// #262
  40dfec:	bl	40e00c <wcrtomb@plt+0xb25c>
  40dff0:	ldr	x8, [sp, #8]
  40dff4:	ldr	x9, [x8, #184]
  40dff8:	add	x9, x9, #0x1
  40dffc:	str	x9, [x8, #184]
  40e000:	ldp	x29, x30, [sp, #32]
  40e004:	add	sp, sp, #0x30
  40e008:	ret
  40e00c:	sub	sp, sp, #0x30
  40e010:	stp	x29, x30, [sp, #32]
  40e014:	add	x29, sp, #0x20
  40e018:	stur	x0, [x29, #-8]
  40e01c:	str	x1, [sp, #16]
  40e020:	ldur	x8, [x29, #-8]
  40e024:	ldrb	w9, [x8, #1048]
  40e028:	tbnz	w9, #0, 40e030 <wcrtomb@plt+0xb280>
  40e02c:	b	40e0f0 <wcrtomb@plt+0xb340>
  40e030:	ldr	x8, [sp, #16]
  40e034:	cmp	x8, #0x113
  40e038:	b.ne	40e0f0 <wcrtomb@plt+0xb340>  // b.any
  40e03c:	mov	w8, #0x0                   	// #0
  40e040:	strb	w8, [sp, #15]
  40e044:	str	xzr, [sp]
  40e048:	ldr	x8, [sp]
  40e04c:	ldur	x9, [x29, #-8]
  40e050:	ldr	x9, [x9, #104]
  40e054:	cmp	x8, x9
  40e058:	b.ge	40e0a4 <wcrtomb@plt+0xb2f4>  // b.tcont
  40e05c:	ldur	x0, [x29, #-8]
  40e060:	ldur	x8, [x29, #-8]
  40e064:	ldr	x8, [x8, #96]
  40e068:	ldr	x9, [sp]
  40e06c:	ldr	w1, [x8, x9, lsl #2]
  40e070:	bl	411a48 <wcrtomb@plt+0xec98>
  40e074:	ldrb	w10, [sp, #15]
  40e078:	tbnz	w10, #0, 40e080 <wcrtomb@plt+0xb2d0>
  40e07c:	b	40e08c <wcrtomb@plt+0xb2dc>
  40e080:	ldur	x0, [x29, #-8]
  40e084:	mov	x1, #0x106                 	// #262
  40e088:	bl	40e00c <wcrtomb@plt+0xb25c>
  40e08c:	mov	w8, #0x1                   	// #1
  40e090:	strb	w8, [sp, #15]
  40e094:	ldr	x8, [sp]
  40e098:	add	x8, x8, #0x1
  40e09c:	str	x8, [sp]
  40e0a0:	b	40e048 <wcrtomb@plt+0xb298>
  40e0a4:	ldur	x8, [x29, #-8]
  40e0a8:	str	xzr, [x8, #104]
  40e0ac:	ldur	x8, [x29, #-8]
  40e0b0:	ldr	x8, [x8, #80]
  40e0b4:	mov	x9, #0xffffffffffffffff    	// #-1
  40e0b8:	cmp	x8, x9
  40e0bc:	b.eq	40e0ec <wcrtomb@plt+0xb33c>  // b.none
  40e0c0:	ldur	x0, [x29, #-8]
  40e0c4:	ldur	x8, [x29, #-8]
  40e0c8:	ldr	x8, [x8, #80]
  40e0cc:	add	x1, x8, #0x114
  40e0d0:	bl	40e00c <wcrtomb@plt+0xb25c>
  40e0d4:	ldrb	w9, [sp, #15]
  40e0d8:	tbnz	w9, #0, 40e0e0 <wcrtomb@plt+0xb330>
  40e0dc:	b	40e0ec <wcrtomb@plt+0xb33c>
  40e0e0:	ldur	x0, [x29, #-8]
  40e0e4:	mov	x1, #0x106                 	// #262
  40e0e8:	bl	40e00c <wcrtomb@plt+0xb25c>
  40e0ec:	b	40e100 <wcrtomb@plt+0xb350>
  40e0f0:	ldur	x0, [x29, #-8]
  40e0f4:	ldr	x1, [sp, #16]
  40e0f8:	mov	w2, #0x3                   	// #3
  40e0fc:	bl	411b50 <wcrtomb@plt+0xeda0>
  40e100:	ldp	x29, x30, [sp, #32]
  40e104:	add	sp, sp, #0x30
  40e108:	ret
  40e10c:	sub	sp, sp, #0x150
  40e110:	stp	x29, x30, [sp, #304]
  40e114:	str	x28, [sp, #320]
  40e118:	add	x29, sp, #0x130
  40e11c:	mov	w8, #0x0                   	// #0
  40e120:	stur	x0, [x29, #-16]
  40e124:	sturb	w8, [x29, #-17]
  40e128:	stur	wzr, [x29, #-24]
  40e12c:	ldur	w8, [x29, #-24]
  40e130:	cmp	w8, #0x2
  40e134:	b.ge	40efe4 <wcrtomb@plt+0xc234>  // b.tcont
  40e138:	ldur	x8, [x29, #-16]
  40e13c:	ldr	x8, [x8, #40]
  40e140:	cbnz	x8, 40e158 <wcrtomb@plt+0xb3a8>
  40e144:	ldur	x8, [x29, #-16]
  40e148:	mov	x9, #0xffffffffffffffff    	// #-1
  40e14c:	str	x9, [x8, #48]
  40e150:	stur	x9, [x29, #-8]
  40e154:	b	40efe8 <wcrtomb@plt+0xc238>
  40e158:	ldur	x0, [x29, #-16]
  40e15c:	bl	414b40 <wcrtomb@plt+0x11d90>
  40e160:	stur	w0, [x29, #-28]
  40e164:	ldur	w8, [x29, #-28]
  40e168:	subs	w8, w8, #0xa
  40e16c:	mov	w9, w8
  40e170:	ubfx	x9, x9, #0, #32
  40e174:	cmp	x9, #0x72
  40e178:	str	x9, [sp, #64]
  40e17c:	b.hi	40ef2c <wcrtomb@plt+0xc17c>  // b.pmore
  40e180:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40e184:	add	x8, x8, #0xd10
  40e188:	ldr	x11, [sp, #64]
  40e18c:	ldrsw	x10, [x8, x11, lsl #2]
  40e190:	add	x9, x8, x10
  40e194:	br	x9
  40e198:	ldurb	w8, [x29, #-17]
  40e19c:	tbnz	w8, #0, 40e1a4 <wcrtomb@plt+0xb3f4>
  40e1a0:	b	40e1a8 <wcrtomb@plt+0xb3f8>
  40e1a4:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e1a8:	ldur	x8, [x29, #-16]
  40e1ac:	ldr	x8, [x8, #40]
  40e1b0:	cbnz	x8, 40e1c4 <wcrtomb@plt+0xb414>
  40e1b4:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40e1b8:	add	x0, x0, #0x24b
  40e1bc:	bl	402d40 <gettext@plt>
  40e1c0:	bl	40b560 <wcrtomb@plt+0x87b0>
  40e1c4:	mov	w8, #0x1                   	// #1
  40e1c8:	sturb	w8, [x29, #-17]
  40e1cc:	b	40efd4 <wcrtomb@plt+0xc224>
  40e1d0:	ldurb	w8, [x29, #-17]
  40e1d4:	tbnz	w8, #0, 40e1dc <wcrtomb@plt+0xb42c>
  40e1d8:	b	40e1e0 <wcrtomb@plt+0xb430>
  40e1dc:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e1e0:	ldur	x8, [x29, #-16]
  40e1e4:	ldr	x8, [x8, #448]
  40e1e8:	and	x8, x8, #0x8
  40e1ec:	cbnz	x8, 40e224 <wcrtomb@plt+0xb474>
  40e1f0:	ldur	x8, [x29, #-16]
  40e1f4:	ldr	x8, [x8, #48]
  40e1f8:	mov	x9, #0xffffffffffffffff    	// #-1
  40e1fc:	cmp	x8, x9
  40e200:	b.eq	40e224 <wcrtomb@plt+0xb474>  // b.none
  40e204:	ldur	x8, [x29, #-16]
  40e208:	ldr	x8, [x8, #48]
  40e20c:	cmp	x8, #0x107
  40e210:	b.eq	40e224 <wcrtomb@plt+0xb474>  // b.none
  40e214:	ldur	x8, [x29, #-16]
  40e218:	ldr	x8, [x8, #48]
  40e21c:	cmp	x8, #0x106
  40e220:	b.ne	40e238 <wcrtomb@plt+0xb488>  // b.any
  40e224:	ldur	x8, [x29, #-16]
  40e228:	mov	x9, #0x10c                 	// #268
  40e22c:	str	x9, [x8, #48]
  40e230:	stur	x9, [x29, #-8]
  40e234:	b	40efe8 <wcrtomb@plt+0xc238>
  40e238:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e23c:	ldurb	w8, [x29, #-17]
  40e240:	tbnz	w8, #0, 40e248 <wcrtomb@plt+0xb498>
  40e244:	b	40e24c <wcrtomb@plt+0xb49c>
  40e248:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e24c:	ldur	x8, [x29, #-16]
  40e250:	ldr	x8, [x8, #448]
  40e254:	and	x8, x8, #0x8
  40e258:	cbnz	x8, 40e390 <wcrtomb@plt+0xb5e0>
  40e25c:	ldur	x8, [x29, #-16]
  40e260:	ldr	x8, [x8, #40]
  40e264:	cbz	x8, 40e390 <wcrtomb@plt+0xb5e0>
  40e268:	ldur	x8, [x29, #-16]
  40e26c:	ldr	x8, [x8, #40]
  40e270:	ldur	x9, [x29, #-16]
  40e274:	ldr	x9, [x9, #448]
  40e278:	tst	x9, #0x2000
  40e27c:	cset	w10, ne  // ne = any
  40e280:	eor	w10, w10, #0x1
  40e284:	and	w10, w10, #0x1
  40e288:	mov	w0, w10
  40e28c:	sxtw	x9, w0
  40e290:	cmp	x8, x9
  40e294:	b.le	40e2e0 <wcrtomb@plt+0xb530>
  40e298:	ldur	x8, [x29, #-16]
  40e29c:	ldr	x8, [x8, #32]
  40e2a0:	ldur	x9, [x29, #-16]
  40e2a4:	ldr	x9, [x9, #448]
  40e2a8:	tst	x9, #0x2000
  40e2ac:	cset	w10, ne  // ne = any
  40e2b0:	eor	w10, w10, #0x1
  40e2b4:	and	w10, w10, #0x1
  40e2b8:	ldur	x9, [x29, #-16]
  40e2bc:	ldr	x9, [x9, #32]
  40e2c0:	ldrb	w11, [x9]
  40e2c4:	cmp	w11, #0x5c
  40e2c8:	cset	w11, eq  // eq = none
  40e2cc:	and	w11, w11, #0x1
  40e2d0:	and	w10, w10, w11
  40e2d4:	ldrb	w10, [x8, w10, sxtw]
  40e2d8:	cmp	w10, #0x29
  40e2dc:	b.eq	40e390 <wcrtomb@plt+0xb5e0>  // b.none
  40e2e0:	ldur	x8, [x29, #-16]
  40e2e4:	ldr	x8, [x8, #40]
  40e2e8:	ldur	x9, [x29, #-16]
  40e2ec:	ldr	x9, [x9, #448]
  40e2f0:	tst	x9, #0x8000
  40e2f4:	cset	w10, ne  // ne = any
  40e2f8:	eor	w10, w10, #0x1
  40e2fc:	and	w10, w10, #0x1
  40e300:	mov	w0, w10
  40e304:	sxtw	x9, w0
  40e308:	cmp	x8, x9
  40e30c:	b.le	40e358 <wcrtomb@plt+0xb5a8>
  40e310:	ldur	x8, [x29, #-16]
  40e314:	ldr	x8, [x8, #32]
  40e318:	ldur	x9, [x29, #-16]
  40e31c:	ldr	x9, [x9, #448]
  40e320:	tst	x9, #0x8000
  40e324:	cset	w10, ne  // ne = any
  40e328:	eor	w10, w10, #0x1
  40e32c:	and	w10, w10, #0x1
  40e330:	ldur	x9, [x29, #-16]
  40e334:	ldr	x9, [x9, #32]
  40e338:	ldrb	w11, [x9]
  40e33c:	cmp	w11, #0x5c
  40e340:	cset	w11, eq  // eq = none
  40e344:	and	w11, w11, #0x1
  40e348:	and	w10, w10, w11
  40e34c:	ldrb	w10, [x8, w10, sxtw]
  40e350:	cmp	w10, #0x7c
  40e354:	b.eq	40e390 <wcrtomb@plt+0xb5e0>  // b.none
  40e358:	ldur	x8, [x29, #-16]
  40e35c:	ldr	x8, [x8, #448]
  40e360:	and	x8, x8, #0x800
  40e364:	cbz	x8, 40e3a4 <wcrtomb@plt+0xb5f4>
  40e368:	ldur	x8, [x29, #-16]
  40e36c:	ldr	x8, [x8, #40]
  40e370:	cmp	x8, #0x0
  40e374:	cset	w9, le
  40e378:	tbnz	w9, #0, 40e3a4 <wcrtomb@plt+0xb5f4>
  40e37c:	ldur	x8, [x29, #-16]
  40e380:	ldr	x8, [x8, #32]
  40e384:	ldrb	w9, [x8]
  40e388:	cmp	w9, #0xa
  40e38c:	b.ne	40e3a4 <wcrtomb@plt+0xb5f4>  // b.any
  40e390:	ldur	x8, [x29, #-16]
  40e394:	mov	x9, #0x10d                 	// #269
  40e398:	str	x9, [x8, #48]
  40e39c:	stur	x9, [x29, #-8]
  40e3a0:	b	40efe8 <wcrtomb@plt+0xc238>
  40e3a4:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e3a8:	ldurb	w8, [x29, #-17]
  40e3ac:	tbnz	w8, #0, 40e3b4 <wcrtomb@plt+0xb604>
  40e3b0:	b	40e3e4 <wcrtomb@plt+0xb634>
  40e3b4:	ldur	x8, [x29, #-16]
  40e3b8:	ldr	x8, [x8, #448]
  40e3bc:	and	x8, x8, #0x4000
  40e3c0:	cbnz	x8, 40e3e4 <wcrtomb@plt+0xb634>
  40e3c4:	ldur	x8, [x29, #-16]
  40e3c8:	mov	w9, #0x0                   	// #0
  40e3cc:	strb	w9, [x8, #120]
  40e3d0:	ldur	x8, [x29, #-16]
  40e3d4:	mov	x10, #0x112                 	// #274
  40e3d8:	str	x10, [x8, #48]
  40e3dc:	stur	x10, [x29, #-8]
  40e3e0:	b	40efe8 <wcrtomb@plt+0xc238>
  40e3e4:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e3e8:	ldurb	w8, [x29, #-17]
  40e3ec:	tbnz	w8, #0, 40e3f4 <wcrtomb@plt+0xb644>
  40e3f0:	b	40e418 <wcrtomb@plt+0xb668>
  40e3f4:	ldur	x8, [x29, #-16]
  40e3f8:	ldr	x8, [x8, #448]
  40e3fc:	and	x8, x8, #0x80000
  40e400:	cbnz	x8, 40e418 <wcrtomb@plt+0xb668>
  40e404:	ldur	x8, [x29, #-16]
  40e408:	mov	x9, #0x10c                 	// #268
  40e40c:	str	x9, [x8, #48]
  40e410:	stur	x9, [x29, #-8]
  40e414:	b	40efe8 <wcrtomb@plt+0xc238>
  40e418:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e41c:	ldurb	w8, [x29, #-17]
  40e420:	tbnz	w8, #0, 40e428 <wcrtomb@plt+0xb678>
  40e424:	b	40e44c <wcrtomb@plt+0xb69c>
  40e428:	ldur	x8, [x29, #-16]
  40e42c:	ldr	x8, [x8, #448]
  40e430:	and	x8, x8, #0x80000
  40e434:	cbnz	x8, 40e44c <wcrtomb@plt+0xb69c>
  40e438:	ldur	x8, [x29, #-16]
  40e43c:	mov	x9, #0x10d                 	// #269
  40e440:	str	x9, [x8, #48]
  40e444:	stur	x9, [x29, #-8]
  40e448:	b	40efe8 <wcrtomb@plt+0xc238>
  40e44c:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e450:	ldurb	w8, [x29, #-17]
  40e454:	tbnz	w8, #0, 40e45c <wcrtomb@plt+0xb6ac>
  40e458:	b	40e480 <wcrtomb@plt+0xb6d0>
  40e45c:	ldur	x8, [x29, #-16]
  40e460:	ldr	x8, [x8, #448]
  40e464:	and	x8, x8, #0x80000
  40e468:	cbnz	x8, 40e480 <wcrtomb@plt+0xb6d0>
  40e46c:	ldur	x8, [x29, #-16]
  40e470:	mov	x9, #0x10e                 	// #270
  40e474:	str	x9, [x8, #48]
  40e478:	stur	x9, [x29, #-8]
  40e47c:	b	40efe8 <wcrtomb@plt+0xc238>
  40e480:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e484:	ldurb	w8, [x29, #-17]
  40e488:	tbnz	w8, #0, 40e490 <wcrtomb@plt+0xb6e0>
  40e48c:	b	40e4b4 <wcrtomb@plt+0xb704>
  40e490:	ldur	x8, [x29, #-16]
  40e494:	ldr	x8, [x8, #448]
  40e498:	and	x8, x8, #0x80000
  40e49c:	cbnz	x8, 40e4b4 <wcrtomb@plt+0xb704>
  40e4a0:	ldur	x8, [x29, #-16]
  40e4a4:	mov	x9, #0x10f                 	// #271
  40e4a8:	str	x9, [x8, #48]
  40e4ac:	stur	x9, [x29, #-8]
  40e4b0:	b	40efe8 <wcrtomb@plt+0xc238>
  40e4b4:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e4b8:	ldurb	w8, [x29, #-17]
  40e4bc:	tbnz	w8, #0, 40e4c4 <wcrtomb@plt+0xb714>
  40e4c0:	b	40e4e8 <wcrtomb@plt+0xb738>
  40e4c4:	ldur	x8, [x29, #-16]
  40e4c8:	ldr	x8, [x8, #448]
  40e4cc:	and	x8, x8, #0x80000
  40e4d0:	cbnz	x8, 40e4e8 <wcrtomb@plt+0xb738>
  40e4d4:	ldur	x8, [x29, #-16]
  40e4d8:	mov	x9, #0x110                 	// #272
  40e4dc:	str	x9, [x8, #48]
  40e4e0:	stur	x9, [x29, #-8]
  40e4e4:	b	40efe8 <wcrtomb@plt+0xc238>
  40e4e8:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e4ec:	ldurb	w8, [x29, #-17]
  40e4f0:	tbnz	w8, #0, 40e4f8 <wcrtomb@plt+0xb748>
  40e4f4:	b	40e51c <wcrtomb@plt+0xb76c>
  40e4f8:	ldur	x8, [x29, #-16]
  40e4fc:	ldr	x8, [x8, #448]
  40e500:	and	x8, x8, #0x80000
  40e504:	cbnz	x8, 40e51c <wcrtomb@plt+0xb76c>
  40e508:	ldur	x8, [x29, #-16]
  40e50c:	mov	x9, #0x111                 	// #273
  40e510:	str	x9, [x8, #48]
  40e514:	stur	x9, [x29, #-8]
  40e518:	b	40efe8 <wcrtomb@plt+0xc238>
  40e51c:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e520:	ldur	x8, [x29, #-16]
  40e524:	ldr	x8, [x8, #448]
  40e528:	and	x8, x8, #0x400
  40e52c:	cbz	x8, 40e534 <wcrtomb@plt+0xb784>
  40e530:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e534:	ldurb	w8, [x29, #-17]
  40e538:	and	w8, w8, #0x1
  40e53c:	ldur	x9, [x29, #-16]
  40e540:	ldr	x9, [x9, #448]
  40e544:	tst	x9, #0x2
  40e548:	cset	w10, ne  // ne = any
  40e54c:	and	w10, w10, #0x1
  40e550:	cmp	w8, w10
  40e554:	b.eq	40e55c <wcrtomb@plt+0xb7ac>  // b.none
  40e558:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e55c:	ldur	x8, [x29, #-16]
  40e560:	ldr	x8, [x8, #448]
  40e564:	and	x8, x8, #0x10
  40e568:	cbnz	x8, 40e580 <wcrtomb@plt+0xb7d0>
  40e56c:	ldur	x8, [x29, #-16]
  40e570:	ldrb	w9, [x8, #120]
  40e574:	tbnz	w9, #0, 40e57c <wcrtomb@plt+0xb7cc>
  40e578:	b	40e580 <wcrtomb@plt+0xb7d0>
  40e57c:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e580:	ldur	x8, [x29, #-16]
  40e584:	mov	x9, #0x101                 	// #257
  40e588:	str	x9, [x8, #48]
  40e58c:	stur	x9, [x29, #-8]
  40e590:	b	40efe8 <wcrtomb@plt+0xc238>
  40e594:	ldurb	w8, [x29, #-17]
  40e598:	tbnz	w8, #0, 40e5a0 <wcrtomb@plt+0xb7f0>
  40e59c:	b	40e5a4 <wcrtomb@plt+0xb7f4>
  40e5a0:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e5a4:	ldur	x8, [x29, #-16]
  40e5a8:	ldr	x8, [x8, #448]
  40e5ac:	and	x8, x8, #0x10
  40e5b0:	cbnz	x8, 40e5c8 <wcrtomb@plt+0xb818>
  40e5b4:	ldur	x8, [x29, #-16]
  40e5b8:	ldrb	w9, [x8, #120]
  40e5bc:	tbnz	w9, #0, 40e5c4 <wcrtomb@plt+0xb814>
  40e5c0:	b	40e5c8 <wcrtomb@plt+0xb818>
  40e5c4:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e5c8:	ldur	x8, [x29, #-16]
  40e5cc:	mov	x9, #0x102                 	// #258
  40e5d0:	str	x9, [x8, #48]
  40e5d4:	stur	x9, [x29, #-8]
  40e5d8:	b	40efe8 <wcrtomb@plt+0xc238>
  40e5dc:	ldur	x8, [x29, #-16]
  40e5e0:	ldr	x8, [x8, #448]
  40e5e4:	and	x8, x8, #0x400
  40e5e8:	cbz	x8, 40e5f0 <wcrtomb@plt+0xb840>
  40e5ec:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e5f0:	ldurb	w8, [x29, #-17]
  40e5f4:	and	w8, w8, #0x1
  40e5f8:	ldur	x9, [x29, #-16]
  40e5fc:	ldr	x9, [x9, #448]
  40e600:	tst	x9, #0x2
  40e604:	cset	w10, ne  // ne = any
  40e608:	and	w10, w10, #0x1
  40e60c:	cmp	w8, w10
  40e610:	b.eq	40e618 <wcrtomb@plt+0xb868>  // b.none
  40e614:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e618:	ldur	x8, [x29, #-16]
  40e61c:	ldr	x8, [x8, #448]
  40e620:	and	x8, x8, #0x10
  40e624:	cbnz	x8, 40e63c <wcrtomb@plt+0xb88c>
  40e628:	ldur	x8, [x29, #-16]
  40e62c:	ldrb	w9, [x8, #120]
  40e630:	tbnz	w9, #0, 40e638 <wcrtomb@plt+0xb888>
  40e634:	b	40e63c <wcrtomb@plt+0xb88c>
  40e638:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e63c:	ldur	x8, [x29, #-16]
  40e640:	mov	x9, #0x103                 	// #259
  40e644:	str	x9, [x8, #48]
  40e648:	stur	x9, [x29, #-8]
  40e64c:	b	40efe8 <wcrtomb@plt+0xc238>
  40e650:	ldur	x8, [x29, #-16]
  40e654:	ldr	x8, [x8, #448]
  40e658:	and	x8, x8, #0x200
  40e65c:	cbnz	x8, 40e664 <wcrtomb@plt+0xb8b4>
  40e660:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e664:	ldurb	w8, [x29, #-17]
  40e668:	and	w8, w8, #0x1
  40e66c:	ldur	x9, [x29, #-16]
  40e670:	ldr	x9, [x9, #448]
  40e674:	tst	x9, #0x1000
  40e678:	cset	w10, eq  // eq = none
  40e67c:	and	w10, w10, #0x1
  40e680:	cmp	w8, w10
  40e684:	b.eq	40e68c <wcrtomb@plt+0xb8dc>  // b.none
  40e688:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e68c:	ldur	x8, [x29, #-16]
  40e690:	ldr	x8, [x8, #448]
  40e694:	and	x8, x8, #0x10
  40e698:	cbnz	x8, 40e6b0 <wcrtomb@plt+0xb900>
  40e69c:	ldur	x8, [x29, #-16]
  40e6a0:	ldrb	w9, [x8, #120]
  40e6a4:	tbnz	w9, #0, 40e6ac <wcrtomb@plt+0xb8fc>
  40e6a8:	b	40e6b0 <wcrtomb@plt+0xb900>
  40e6ac:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e6b0:	ldur	x8, [x29, #-16]
  40e6b4:	ldr	x8, [x8, #32]
  40e6b8:	stur	x8, [x29, #-40]
  40e6bc:	ldur	x8, [x29, #-40]
  40e6c0:	ldur	x9, [x29, #-16]
  40e6c4:	ldr	x9, [x9, #40]
  40e6c8:	add	x8, x8, x9
  40e6cc:	stur	x8, [x29, #-48]
  40e6d0:	ldur	x8, [x29, #-16]
  40e6d4:	mov	w10, #0xffffffff            	// #-1
  40e6d8:	str	w10, [x8, #68]
  40e6dc:	ldur	x8, [x29, #-16]
  40e6e0:	str	w10, [x8, #64]
  40e6e4:	ldur	x8, [x29, #-40]
  40e6e8:	ldur	x9, [x29, #-48]
  40e6ec:	mov	w10, #0x0                   	// #0
  40e6f0:	cmp	x8, x9
  40e6f4:	str	w10, [sp, #60]
  40e6f8:	b.eq	40e70c <wcrtomb@plt+0xb95c>  // b.none
  40e6fc:	ldur	x8, [x29, #-40]
  40e700:	ldrb	w0, [x8]
  40e704:	bl	414be4 <wcrtomb@plt+0x11e34>
  40e708:	str	w0, [sp, #60]
  40e70c:	ldr	w8, [sp, #60]
  40e710:	tbnz	w8, #0, 40e718 <wcrtomb@plt+0xb968>
  40e714:	b	40e7c0 <wcrtomb@plt+0xba10>
  40e718:	ldur	x8, [x29, #-16]
  40e71c:	ldr	w9, [x8, #64]
  40e720:	cmp	w9, #0x0
  40e724:	cset	w9, ge  // ge = tcont
  40e728:	tbnz	w9, #0, 40e740 <wcrtomb@plt+0xb990>
  40e72c:	ldur	x8, [x29, #-40]
  40e730:	ldrb	w9, [x8]
  40e734:	subs	w9, w9, #0x30
  40e738:	str	w9, [sp, #56]
  40e73c:	b	40e7a4 <wcrtomb@plt+0xb9f4>
  40e740:	ldur	x8, [x29, #-16]
  40e744:	ldr	w9, [x8, #64]
  40e748:	mov	w10, #0xa                   	// #10
  40e74c:	mul	w9, w9, w10
  40e750:	ldur	x8, [x29, #-40]
  40e754:	ldrb	w10, [x8]
  40e758:	add	w9, w9, w10
  40e75c:	subs	w9, w9, #0x30
  40e760:	mov	w10, #0x8000                	// #32768
  40e764:	cmp	w10, w9
  40e768:	b.ge	40e778 <wcrtomb@plt+0xb9c8>  // b.tcont
  40e76c:	mov	w8, #0x8000                	// #32768
  40e770:	str	w8, [sp, #52]
  40e774:	b	40e79c <wcrtomb@plt+0xb9ec>
  40e778:	ldur	x8, [x29, #-16]
  40e77c:	ldr	w9, [x8, #64]
  40e780:	mov	w10, #0xa                   	// #10
  40e784:	mul	w9, w9, w10
  40e788:	ldur	x8, [x29, #-40]
  40e78c:	ldrb	w10, [x8]
  40e790:	add	w9, w9, w10
  40e794:	subs	w9, w9, #0x30
  40e798:	str	w9, [sp, #52]
  40e79c:	ldr	w8, [sp, #52]
  40e7a0:	str	w8, [sp, #56]
  40e7a4:	ldr	w8, [sp, #56]
  40e7a8:	ldur	x9, [x29, #-16]
  40e7ac:	str	w8, [x9, #64]
  40e7b0:	ldur	x8, [x29, #-40]
  40e7b4:	add	x8, x8, #0x1
  40e7b8:	stur	x8, [x29, #-40]
  40e7bc:	b	40e6e4 <wcrtomb@plt+0xb934>
  40e7c0:	ldur	x8, [x29, #-40]
  40e7c4:	ldur	x9, [x29, #-48]
  40e7c8:	cmp	x8, x9
  40e7cc:	b.eq	40e8e8 <wcrtomb@plt+0xbb38>  // b.none
  40e7d0:	ldur	x8, [x29, #-40]
  40e7d4:	ldrb	w9, [x8]
  40e7d8:	cmp	w9, #0x2c
  40e7dc:	b.eq	40e7f4 <wcrtomb@plt+0xba44>  // b.none
  40e7e0:	ldur	x8, [x29, #-16]
  40e7e4:	ldr	w9, [x8, #64]
  40e7e8:	ldur	x8, [x29, #-16]
  40e7ec:	str	w9, [x8, #68]
  40e7f0:	b	40e8e8 <wcrtomb@plt+0xbb38>
  40e7f4:	ldur	x8, [x29, #-16]
  40e7f8:	ldr	w9, [x8, #64]
  40e7fc:	cmp	w9, #0x0
  40e800:	cset	w9, ge  // ge = tcont
  40e804:	tbnz	w9, #0, 40e810 <wcrtomb@plt+0xba60>
  40e808:	ldur	x8, [x29, #-16]
  40e80c:	str	wzr, [x8, #64]
  40e810:	ldur	x8, [x29, #-40]
  40e814:	add	x8, x8, #0x1
  40e818:	stur	x8, [x29, #-40]
  40e81c:	ldur	x9, [x29, #-48]
  40e820:	mov	w10, #0x0                   	// #0
  40e824:	cmp	x8, x9
  40e828:	str	w10, [sp, #48]
  40e82c:	b.eq	40e840 <wcrtomb@plt+0xba90>  // b.none
  40e830:	ldur	x8, [x29, #-40]
  40e834:	ldrb	w0, [x8]
  40e838:	bl	414be4 <wcrtomb@plt+0x11e34>
  40e83c:	str	w0, [sp, #48]
  40e840:	ldr	w8, [sp, #48]
  40e844:	tbnz	w8, #0, 40e84c <wcrtomb@plt+0xba9c>
  40e848:	b	40e8e8 <wcrtomb@plt+0xbb38>
  40e84c:	ldur	x8, [x29, #-16]
  40e850:	ldr	w9, [x8, #68]
  40e854:	cmp	w9, #0x0
  40e858:	cset	w9, ge  // ge = tcont
  40e85c:	tbnz	w9, #0, 40e874 <wcrtomb@plt+0xbac4>
  40e860:	ldur	x8, [x29, #-40]
  40e864:	ldrb	w9, [x8]
  40e868:	subs	w9, w9, #0x30
  40e86c:	str	w9, [sp, #44]
  40e870:	b	40e8d8 <wcrtomb@plt+0xbb28>
  40e874:	ldur	x8, [x29, #-16]
  40e878:	ldr	w9, [x8, #68]
  40e87c:	mov	w10, #0xa                   	// #10
  40e880:	mul	w9, w9, w10
  40e884:	ldur	x8, [x29, #-40]
  40e888:	ldrb	w10, [x8]
  40e88c:	add	w9, w9, w10
  40e890:	subs	w9, w9, #0x30
  40e894:	mov	w10, #0x8000                	// #32768
  40e898:	cmp	w10, w9
  40e89c:	b.ge	40e8ac <wcrtomb@plt+0xbafc>  // b.tcont
  40e8a0:	mov	w8, #0x8000                	// #32768
  40e8a4:	str	w8, [sp, #40]
  40e8a8:	b	40e8d0 <wcrtomb@plt+0xbb20>
  40e8ac:	ldur	x8, [x29, #-16]
  40e8b0:	ldr	w9, [x8, #68]
  40e8b4:	mov	w10, #0xa                   	// #10
  40e8b8:	mul	w9, w9, w10
  40e8bc:	ldur	x8, [x29, #-40]
  40e8c0:	ldrb	w10, [x8]
  40e8c4:	add	w9, w9, w10
  40e8c8:	subs	w9, w9, #0x30
  40e8cc:	str	w9, [sp, #40]
  40e8d0:	ldr	w8, [sp, #40]
  40e8d4:	str	w8, [sp, #44]
  40e8d8:	ldr	w8, [sp, #44]
  40e8dc:	ldur	x9, [x29, #-16]
  40e8e0:	str	w8, [x9, #68]
  40e8e4:	b	40e810 <wcrtomb@plt+0xba60>
  40e8e8:	ldurb	w8, [x29, #-17]
  40e8ec:	tbnz	w8, #0, 40e8f4 <wcrtomb@plt+0xbb44>
  40e8f0:	b	40e91c <wcrtomb@plt+0xbb6c>
  40e8f4:	ldur	x8, [x29, #-40]
  40e8f8:	ldur	x9, [x29, #-48]
  40e8fc:	cmp	x8, x9
  40e900:	b.eq	40e988 <wcrtomb@plt+0xbbd8>  // b.none
  40e904:	ldur	x8, [x29, #-40]
  40e908:	add	x9, x8, #0x1
  40e90c:	stur	x9, [x29, #-40]
  40e910:	ldrb	w10, [x8]
  40e914:	cmp	w10, #0x5c
  40e918:	b.ne	40e988 <wcrtomb@plt+0xbbd8>  // b.any
  40e91c:	ldur	x8, [x29, #-40]
  40e920:	ldur	x9, [x29, #-48]
  40e924:	cmp	x8, x9
  40e928:	b.eq	40e988 <wcrtomb@plt+0xbbd8>  // b.none
  40e92c:	ldur	x8, [x29, #-40]
  40e930:	add	x9, x8, #0x1
  40e934:	stur	x9, [x29, #-40]
  40e938:	ldrb	w10, [x8]
  40e93c:	cmp	w10, #0x7d
  40e940:	b.ne	40e988 <wcrtomb@plt+0xbbd8>  // b.any
  40e944:	ldur	x8, [x29, #-16]
  40e948:	ldr	w9, [x8, #64]
  40e94c:	mov	w10, wzr
  40e950:	cmp	w10, w9
  40e954:	cset	w9, gt
  40e958:	tbnz	w9, #0, 40e988 <wcrtomb@plt+0xbbd8>
  40e95c:	ldur	x8, [x29, #-16]
  40e960:	ldr	w9, [x8, #68]
  40e964:	cmp	w9, #0x0
  40e968:	cset	w9, lt  // lt = tstop
  40e96c:	tbnz	w9, #0, 40e9ac <wcrtomb@plt+0xbbfc>
  40e970:	ldur	x8, [x29, #-16]
  40e974:	ldr	w9, [x8, #64]
  40e978:	ldur	x8, [x29, #-16]
  40e97c:	ldr	w10, [x8, #68]
  40e980:	cmp	w9, w10
  40e984:	b.le	40e9ac <wcrtomb@plt+0xbbfc>
  40e988:	ldur	x8, [x29, #-16]
  40e98c:	ldr	x8, [x8, #448]
  40e990:	and	x8, x8, #0x200000
  40e994:	cbz	x8, 40e99c <wcrtomb@plt+0xbbec>
  40e998:	b	40ef2c <wcrtomb@plt+0xc17c>
  40e99c:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40e9a0:	add	x0, x0, #0x25f
  40e9a4:	bl	402d40 <gettext@plt>
  40e9a8:	bl	40b560 <wcrtomb@plt+0x87b0>
  40e9ac:	ldur	x8, [x29, #-16]
  40e9b0:	ldr	w9, [x8, #68]
  40e9b4:	mov	w10, #0x7fff                	// #32767
  40e9b8:	cmp	w10, w9
  40e9bc:	b.ge	40e9d0 <wcrtomb@plt+0xbc20>  // b.tcont
  40e9c0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40e9c4:	add	x0, x0, #0x277
  40e9c8:	bl	402d40 <gettext@plt>
  40e9cc:	bl	40b560 <wcrtomb@plt+0x87b0>
  40e9d0:	ldur	x8, [x29, #-40]
  40e9d4:	ldur	x9, [x29, #-16]
  40e9d8:	str	x8, [x9, #32]
  40e9dc:	ldur	x8, [x29, #-48]
  40e9e0:	ldur	x9, [x29, #-40]
  40e9e4:	subs	x8, x8, x9
  40e9e8:	ldur	x9, [x29, #-16]
  40e9ec:	str	x8, [x9, #40]
  40e9f0:	ldur	x8, [x29, #-16]
  40e9f4:	mov	w10, #0x0                   	// #0
  40e9f8:	strb	w10, [x8, #120]
  40e9fc:	ldur	x8, [x29, #-16]
  40ea00:	mov	x9, #0x104                 	// #260
  40ea04:	str	x9, [x8, #48]
  40ea08:	stur	x9, [x29, #-8]
  40ea0c:	b	40efe8 <wcrtomb@plt+0xc238>
  40ea10:	ldur	x8, [x29, #-16]
  40ea14:	ldr	x8, [x8, #448]
  40ea18:	and	x8, x8, #0x400
  40ea1c:	cbz	x8, 40ea24 <wcrtomb@plt+0xbc74>
  40ea20:	b	40ef2c <wcrtomb@plt+0xc17c>
  40ea24:	ldurb	w8, [x29, #-17]
  40ea28:	and	w8, w8, #0x1
  40ea2c:	ldur	x9, [x29, #-16]
  40ea30:	ldr	x9, [x9, #448]
  40ea34:	tst	x9, #0x8000
  40ea38:	cset	w10, eq  // eq = none
  40ea3c:	and	w10, w10, #0x1
  40ea40:	cmp	w8, w10
  40ea44:	b.eq	40ea4c <wcrtomb@plt+0xbc9c>  // b.none
  40ea48:	b	40ef2c <wcrtomb@plt+0xc17c>
  40ea4c:	ldur	x8, [x29, #-16]
  40ea50:	mov	w9, #0x1                   	// #1
  40ea54:	strb	w9, [x8, #120]
  40ea58:	ldur	x8, [x29, #-16]
  40ea5c:	mov	x10, #0x106                 	// #262
  40ea60:	str	x10, [x8, #48]
  40ea64:	stur	x10, [x29, #-8]
  40ea68:	b	40efe8 <wcrtomb@plt+0xc238>
  40ea6c:	ldur	x8, [x29, #-16]
  40ea70:	ldr	x8, [x8, #448]
  40ea74:	and	x8, x8, #0x400
  40ea78:	cbnz	x8, 40ea94 <wcrtomb@plt+0xbce4>
  40ea7c:	ldurb	w8, [x29, #-17]
  40ea80:	tbnz	w8, #0, 40ea94 <wcrtomb@plt+0xbce4>
  40ea84:	ldur	x8, [x29, #-16]
  40ea88:	ldr	x8, [x8, #448]
  40ea8c:	and	x8, x8, #0x800
  40ea90:	cbnz	x8, 40ea98 <wcrtomb@plt+0xbce8>
  40ea94:	b	40ef2c <wcrtomb@plt+0xc17c>
  40ea98:	ldur	x8, [x29, #-16]
  40ea9c:	mov	w9, #0x1                   	// #1
  40eaa0:	strb	w9, [x8, #120]
  40eaa4:	ldur	x8, [x29, #-16]
  40eaa8:	mov	x10, #0x106                 	// #262
  40eaac:	str	x10, [x8, #48]
  40eab0:	stur	x10, [x29, #-8]
  40eab4:	b	40efe8 <wcrtomb@plt+0xc238>
  40eab8:	ldurb	w8, [x29, #-17]
  40eabc:	and	w8, w8, #0x1
  40eac0:	ldur	x9, [x29, #-16]
  40eac4:	ldr	x9, [x9, #448]
  40eac8:	tst	x9, #0x2000
  40eacc:	cset	w10, eq  // eq = none
  40ead0:	and	w10, w10, #0x1
  40ead4:	cmp	w8, w10
  40ead8:	b.eq	40eae0 <wcrtomb@plt+0xbd30>  // b.none
  40eadc:	b	40ef2c <wcrtomb@plt+0xc17c>
  40eae0:	ldur	x8, [x29, #-16]
  40eae4:	ldr	x9, [x8, #56]
  40eae8:	add	x9, x9, #0x1
  40eaec:	str	x9, [x8, #56]
  40eaf0:	ldur	x8, [x29, #-16]
  40eaf4:	mov	w10, #0x1                   	// #1
  40eaf8:	strb	w10, [x8, #120]
  40eafc:	ldur	x8, [x29, #-16]
  40eb00:	mov	x9, #0x107                 	// #263
  40eb04:	str	x9, [x8, #48]
  40eb08:	stur	x9, [x29, #-8]
  40eb0c:	b	40efe8 <wcrtomb@plt+0xc238>
  40eb10:	ldurb	w8, [x29, #-17]
  40eb14:	and	w8, w8, #0x1
  40eb18:	ldur	x9, [x29, #-16]
  40eb1c:	ldr	x9, [x9, #448]
  40eb20:	tst	x9, #0x2000
  40eb24:	cset	w10, eq  // eq = none
  40eb28:	and	w10, w10, #0x1
  40eb2c:	cmp	w8, w10
  40eb30:	b.eq	40eb38 <wcrtomb@plt+0xbd88>  // b.none
  40eb34:	b	40ef2c <wcrtomb@plt+0xc17c>
  40eb38:	ldur	x8, [x29, #-16]
  40eb3c:	ldr	x8, [x8, #56]
  40eb40:	cbnz	x8, 40eb58 <wcrtomb@plt+0xbda8>
  40eb44:	ldur	x8, [x29, #-16]
  40eb48:	ldr	x8, [x8, #448]
  40eb4c:	and	x8, x8, #0x20000
  40eb50:	cbz	x8, 40eb58 <wcrtomb@plt+0xbda8>
  40eb54:	b	40ef2c <wcrtomb@plt+0xc17c>
  40eb58:	ldur	x8, [x29, #-16]
  40eb5c:	ldr	x9, [x8, #56]
  40eb60:	subs	x9, x9, #0x1
  40eb64:	str	x9, [x8, #56]
  40eb68:	ldur	x8, [x29, #-16]
  40eb6c:	mov	w10, #0x0                   	// #0
  40eb70:	strb	w10, [x8, #120]
  40eb74:	ldur	x8, [x29, #-16]
  40eb78:	mov	x9, #0x108                 	// #264
  40eb7c:	str	x9, [x8, #48]
  40eb80:	stur	x9, [x29, #-8]
  40eb84:	b	40efe8 <wcrtomb@plt+0xc238>
  40eb88:	ldurb	w8, [x29, #-17]
  40eb8c:	tbnz	w8, #0, 40eb94 <wcrtomb@plt+0xbde4>
  40eb90:	b	40eb98 <wcrtomb@plt+0xbde8>
  40eb94:	b	40ef2c <wcrtomb@plt+0xc17c>
  40eb98:	ldur	x8, [x29, #-16]
  40eb9c:	ldr	x8, [x8, #24]
  40eba0:	cmp	x8, #0x0
  40eba4:	cset	w9, ge  // ge = tcont
  40eba8:	tbnz	w9, #0, 40ec5c <wcrtomb@plt+0xbeac>
  40ebac:	sub	x0, x29, #0x50
  40ebb0:	bl	414c24 <wcrtomb@plt+0x11e74>
  40ebb4:	ldur	x8, [x29, #-16]
  40ebb8:	ldr	x8, [x8, #448]
  40ebbc:	and	x8, x8, #0x40
  40ebc0:	cbnz	x8, 40ebd0 <wcrtomb@plt+0xbe20>
  40ebc4:	mov	w0, #0xa                   	// #10
  40ebc8:	sub	x1, x29, #0x50
  40ebcc:	bl	414c64 <wcrtomb@plt+0x11eb4>
  40ebd0:	ldur	x8, [x29, #-16]
  40ebd4:	ldr	x8, [x8, #448]
  40ebd8:	and	x8, x8, #0x80
  40ebdc:	cbz	x8, 40ebf0 <wcrtomb@plt+0xbe40>
  40ebe0:	mov	w8, wzr
  40ebe4:	mov	w0, w8
  40ebe8:	sub	x1, x29, #0x50
  40ebec:	bl	414c64 <wcrtomb@plt+0x11eb4>
  40ebf0:	ldur	x8, [x29, #-16]
  40ebf4:	ldrb	w9, [x8, #1048]
  40ebf8:	tbnz	w9, #0, 40ec00 <wcrtomb@plt+0xbe50>
  40ebfc:	b	40ec48 <wcrtomb@plt+0xbe98>
  40ec00:	stur	wzr, [x29, #-84]
  40ec04:	ldur	w8, [x29, #-84]
  40ec08:	cmp	w8, #0x100
  40ec0c:	b.ge	40ec48 <wcrtomb@plt+0xbe98>  // b.tcont
  40ec10:	ldur	x8, [x29, #-16]
  40ec14:	add	x8, x8, #0x51c
  40ec18:	ldursw	x9, [x29, #-84]
  40ec1c:	ldr	w10, [x8, x9, lsl #2]
  40ec20:	mov	w11, #0xffffffff            	// #-1
  40ec24:	cmp	w10, w11
  40ec28:	b.ne	40ec38 <wcrtomb@plt+0xbe88>  // b.any
  40ec2c:	ldur	w0, [x29, #-84]
  40ec30:	sub	x1, x29, #0x50
  40ec34:	bl	414c64 <wcrtomb@plt+0x11eb4>
  40ec38:	ldur	w8, [x29, #-84]
  40ec3c:	add	w8, w8, #0x1
  40ec40:	stur	w8, [x29, #-84]
  40ec44:	b	40ec04 <wcrtomb@plt+0xbe54>
  40ec48:	ldur	x0, [x29, #-16]
  40ec4c:	sub	x1, x29, #0x50
  40ec50:	bl	414ccc <wcrtomb@plt+0x11f1c>
  40ec54:	ldur	x8, [x29, #-16]
  40ec58:	str	x0, [x8, #24]
  40ec5c:	ldur	x8, [x29, #-16]
  40ec60:	mov	w9, #0x0                   	// #0
  40ec64:	strb	w9, [x8, #120]
  40ec68:	ldur	x8, [x29, #-16]
  40ec6c:	ldrb	w9, [x8, #1048]
  40ec70:	tbnz	w9, #0, 40ec78 <wcrtomb@plt+0xbec8>
  40ec74:	b	40ec84 <wcrtomb@plt+0xbed4>
  40ec78:	mov	x8, #0x10a                 	// #266
  40ec7c:	str	x8, [sp, #32]
  40ec80:	b	40ec94 <wcrtomb@plt+0xbee4>
  40ec84:	ldur	x8, [x29, #-16]
  40ec88:	ldr	x8, [x8, #24]
  40ec8c:	add	x8, x8, #0x114
  40ec90:	str	x8, [sp, #32]
  40ec94:	ldr	x8, [sp, #32]
  40ec98:	ldur	x9, [x29, #-16]
  40ec9c:	str	x8, [x9, #48]
  40eca0:	stur	x8, [x29, #-8]
  40eca4:	b	40efe8 <wcrtomb@plt+0xc238>
  40eca8:	ldurb	w8, [x29, #-17]
  40ecac:	tbnz	w8, #0, 40ecb4 <wcrtomb@plt+0xbf04>
  40ecb0:	b	40ecc4 <wcrtomb@plt+0xbf14>
  40ecb4:	ldur	x8, [x29, #-16]
  40ecb8:	ldr	x8, [x8, #448]
  40ecbc:	and	x8, x8, #0x80000
  40ecc0:	cbz	x8, 40ecc8 <wcrtomb@plt+0xbf18>
  40ecc4:	b	40ef2c <wcrtomb@plt+0xc17c>
  40ecc8:	ldur	x8, [x29, #-16]
  40eccc:	ldrb	w9, [x8, #1048]
  40ecd0:	tbnz	w9, #0, 40ed60 <wcrtomb@plt+0xbfb0>
  40ecd4:	sub	x0, x29, #0x78
  40ecd8:	bl	414dc0 <wcrtomb@plt+0x12010>
  40ecdc:	stur	wzr, [x29, #-124]
  40ece0:	ldur	w8, [x29, #-124]
  40ece4:	cmp	w8, #0x100
  40ece8:	b.ge	40ed20 <wcrtomb@plt+0xbf70>  // b.tcont
  40ecec:	bl	402b20 <__ctype_b_loc@plt>
  40ecf0:	ldr	x8, [x0]
  40ecf4:	ldursw	x9, [x29, #-124]
  40ecf8:	ldrh	w10, [x8, x9, lsl #1]
  40ecfc:	and	w10, w10, #0x2000
  40ed00:	cbz	w10, 40ed10 <wcrtomb@plt+0xbf60>
  40ed04:	ldur	w0, [x29, #-124]
  40ed08:	sub	x1, x29, #0x78
  40ed0c:	bl	411934 <wcrtomb@plt+0xeb84>
  40ed10:	ldur	w8, [x29, #-124]
  40ed14:	add	w8, w8, #0x1
  40ed18:	stur	w8, [x29, #-124]
  40ed1c:	b	40ece0 <wcrtomb@plt+0xbf30>
  40ed20:	ldur	w8, [x29, #-28]
  40ed24:	cmp	w8, #0x53
  40ed28:	b.ne	40ed34 <wcrtomb@plt+0xbf84>  // b.any
  40ed2c:	sub	x0, x29, #0x78
  40ed30:	bl	414df0 <wcrtomb@plt+0x12040>
  40ed34:	ldur	x8, [x29, #-16]
  40ed38:	mov	w9, #0x0                   	// #0
  40ed3c:	strb	w9, [x8, #120]
  40ed40:	ldur	x0, [x29, #-16]
  40ed44:	sub	x1, x29, #0x78
  40ed48:	bl	414ccc <wcrtomb@plt+0x11f1c>
  40ed4c:	add	x8, x0, #0x114
  40ed50:	ldur	x10, [x29, #-16]
  40ed54:	str	x8, [x10, #48]
  40ed58:	stur	x8, [x29, #-8]
  40ed5c:	b	40efe8 <wcrtomb@plt+0xc238>
  40ed60:	ldur	x0, [x29, #-16]
  40ed64:	ldur	w8, [x29, #-28]
  40ed68:	cmp	w8, #0x73
  40ed6c:	cset	w8, eq  // eq = none
  40ed70:	and	w8, w8, #0x1
  40ed74:	mov	w1, w8
  40ed78:	sxtw	x9, w1
  40ed7c:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40ed80:	add	x10, x10, #0x292
  40ed84:	add	x2, x10, x9
  40ed88:	sub	x9, x29, #0x90
  40ed8c:	mov	x1, x9
  40ed90:	str	x9, [sp, #24]
  40ed94:	bl	414e40 <wcrtomb@plt+0x12090>
  40ed98:	ldur	x0, [x29, #-16]
  40ed9c:	bl	414ea0 <wcrtomb@plt+0x120f0>
  40eda0:	ldur	x9, [x29, #-16]
  40eda4:	str	x0, [x9, #48]
  40eda8:	ldur	x0, [x29, #-16]
  40edac:	ldr	x1, [sp, #24]
  40edb0:	bl	4156e4 <wcrtomb@plt+0x12934>
  40edb4:	ldur	x9, [x29, #-16]
  40edb8:	mov	w8, #0x0                   	// #0
  40edbc:	strb	w8, [x9, #120]
  40edc0:	ldur	x9, [x29, #-16]
  40edc4:	ldr	x9, [x9, #48]
  40edc8:	stur	x9, [x29, #-8]
  40edcc:	b	40efe8 <wcrtomb@plt+0xc238>
  40edd0:	ldurb	w8, [x29, #-17]
  40edd4:	tbnz	w8, #0, 40eddc <wcrtomb@plt+0xc02c>
  40edd8:	b	40edec <wcrtomb@plt+0xc03c>
  40eddc:	ldur	x8, [x29, #-16]
  40ede0:	ldr	x8, [x8, #448]
  40ede4:	and	x8, x8, #0x80000
  40ede8:	cbz	x8, 40edf0 <wcrtomb@plt+0xc040>
  40edec:	b	40ef2c <wcrtomb@plt+0xc17c>
  40edf0:	ldur	x8, [x29, #-16]
  40edf4:	ldrb	w9, [x8, #1048]
  40edf8:	tbnz	w9, #0, 40ee88 <wcrtomb@plt+0xc0d8>
  40edfc:	add	x0, sp, #0x80
  40ee00:	bl	414dc0 <wcrtomb@plt+0x12010>
  40ee04:	str	wzr, [sp, #124]
  40ee08:	ldr	w8, [sp, #124]
  40ee0c:	cmp	w8, #0x100
  40ee10:	b.ge	40ee48 <wcrtomb@plt+0xc098>  // b.tcont
  40ee14:	ldur	x8, [x29, #-16]
  40ee18:	add	x8, x8, #0x1cc
  40ee1c:	ldrsw	x9, [sp, #124]
  40ee20:	ldrb	w10, [x8, x9]
  40ee24:	cmp	w10, #0x2
  40ee28:	b.ne	40ee38 <wcrtomb@plt+0xc088>  // b.any
  40ee2c:	ldr	w0, [sp, #124]
  40ee30:	add	x1, sp, #0x80
  40ee34:	bl	411934 <wcrtomb@plt+0xeb84>
  40ee38:	ldr	w8, [sp, #124]
  40ee3c:	add	w8, w8, #0x1
  40ee40:	str	w8, [sp, #124]
  40ee44:	b	40ee08 <wcrtomb@plt+0xc058>
  40ee48:	ldur	w8, [x29, #-28]
  40ee4c:	cmp	w8, #0x57
  40ee50:	b.ne	40ee5c <wcrtomb@plt+0xc0ac>  // b.any
  40ee54:	add	x0, sp, #0x80
  40ee58:	bl	414df0 <wcrtomb@plt+0x12040>
  40ee5c:	ldur	x8, [x29, #-16]
  40ee60:	mov	w9, #0x0                   	// #0
  40ee64:	strb	w9, [x8, #120]
  40ee68:	ldur	x0, [x29, #-16]
  40ee6c:	add	x1, sp, #0x80
  40ee70:	bl	414ccc <wcrtomb@plt+0x11f1c>
  40ee74:	add	x8, x0, #0x114
  40ee78:	ldur	x10, [x29, #-16]
  40ee7c:	str	x8, [x10, #48]
  40ee80:	stur	x8, [x29, #-8]
  40ee84:	b	40efe8 <wcrtomb@plt+0xc238>
  40ee88:	ldur	x0, [x29, #-16]
  40ee8c:	ldur	w8, [x29, #-28]
  40ee90:	cmp	w8, #0x77
  40ee94:	cset	w8, eq  // eq = none
  40ee98:	and	w8, w8, #0x1
  40ee9c:	mov	w1, w8
  40eea0:	sxtw	x9, w1
  40eea4:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x1ae64>
  40eea8:	add	x10, x10, #0x29e
  40eeac:	add	x2, x10, x9
  40eeb0:	add	x9, sp, #0x68
  40eeb4:	mov	x1, x9
  40eeb8:	str	x9, [sp, #16]
  40eebc:	bl	414e40 <wcrtomb@plt+0x12090>
  40eec0:	ldur	x0, [x29, #-16]
  40eec4:	bl	414ea0 <wcrtomb@plt+0x120f0>
  40eec8:	ldur	x9, [x29, #-16]
  40eecc:	str	x0, [x9, #48]
  40eed0:	ldur	x0, [x29, #-16]
  40eed4:	ldr	x1, [sp, #16]
  40eed8:	bl	4156e4 <wcrtomb@plt+0x12934>
  40eedc:	ldur	x9, [x29, #-16]
  40eee0:	mov	w8, #0x0                   	// #0
  40eee4:	strb	w8, [x9, #120]
  40eee8:	ldur	x9, [x29, #-16]
  40eeec:	ldr	x9, [x9, #48]
  40eef0:	stur	x9, [x29, #-8]
  40eef4:	b	40efe8 <wcrtomb@plt+0xc238>
  40eef8:	ldurb	w8, [x29, #-17]
  40eefc:	tbnz	w8, #0, 40ef04 <wcrtomb@plt+0xc154>
  40ef00:	b	40ef08 <wcrtomb@plt+0xc158>
  40ef04:	b	40ef2c <wcrtomb@plt+0xc17c>
  40ef08:	ldur	x8, [x29, #-16]
  40ef0c:	mov	w9, #0x0                   	// #0
  40ef10:	strb	w9, [x8, #120]
  40ef14:	ldur	x0, [x29, #-16]
  40ef18:	bl	414ea0 <wcrtomb@plt+0x120f0>
  40ef1c:	ldur	x8, [x29, #-16]
  40ef20:	str	x0, [x8, #48]
  40ef24:	stur	x0, [x29, #-8]
  40ef28:	b	40efe8 <wcrtomb@plt+0xc238>
  40ef2c:	ldur	x8, [x29, #-16]
  40ef30:	mov	w9, #0x0                   	// #0
  40ef34:	strb	w9, [x8, #120]
  40ef38:	ldur	x8, [x29, #-16]
  40ef3c:	ldrb	w9, [x8, #1048]
  40ef40:	tbnz	w9, #0, 40ef48 <wcrtomb@plt+0xc198>
  40ef44:	b	40ef5c <wcrtomb@plt+0xc1ac>
  40ef48:	ldur	x8, [x29, #-16]
  40ef4c:	mov	x9, #0x109                 	// #265
  40ef50:	str	x9, [x8, #48]
  40ef54:	stur	x9, [x29, #-8]
  40ef58:	b	40efe8 <wcrtomb@plt+0xc238>
  40ef5c:	ldur	x8, [x29, #-16]
  40ef60:	ldrb	w9, [x8, #457]
  40ef64:	tbnz	w9, #0, 40ef6c <wcrtomb@plt+0xc1bc>
  40ef68:	b	40efc0 <wcrtomb@plt+0xc210>
  40ef6c:	bl	402b20 <__ctype_b_loc@plt>
  40ef70:	ldr	x8, [x0]
  40ef74:	ldursw	x9, [x29, #-28]
  40ef78:	ldrh	w10, [x8, x9, lsl #1]
  40ef7c:	and	w10, w10, #0x400
  40ef80:	cbz	w10, 40efc0 <wcrtomb@plt+0xc210>
  40ef84:	add	x8, sp, #0x48
  40ef88:	mov	x0, x8
  40ef8c:	str	x8, [sp, #8]
  40ef90:	bl	414dc0 <wcrtomb@plt+0x12010>
  40ef94:	ldur	w0, [x29, #-28]
  40ef98:	ldr	x1, [sp, #8]
  40ef9c:	bl	415718 <wcrtomb@plt+0x12968>
  40efa0:	ldur	x0, [x29, #-16]
  40efa4:	ldr	x1, [sp, #8]
  40efa8:	bl	414ccc <wcrtomb@plt+0x11f1c>
  40efac:	add	x8, x0, #0x114
  40efb0:	ldur	x9, [x29, #-16]
  40efb4:	str	x8, [x9, #48]
  40efb8:	stur	x8, [x29, #-8]
  40efbc:	b	40efe8 <wcrtomb@plt+0xc238>
  40efc0:	ldursw	x8, [x29, #-28]
  40efc4:	ldur	x9, [x29, #-16]
  40efc8:	str	x8, [x9, #48]
  40efcc:	stur	x8, [x29, #-8]
  40efd0:	b	40efe8 <wcrtomb@plt+0xc238>
  40efd4:	ldur	w8, [x29, #-24]
  40efd8:	add	w8, w8, #0x1
  40efdc:	stur	w8, [x29, #-24]
  40efe0:	b	40e12c <wcrtomb@plt+0xb37c>
  40efe4:	bl	402a70 <abort@plt>
  40efe8:	ldur	x0, [x29, #-8]
  40efec:	ldr	x28, [sp, #320]
  40eff0:	ldp	x29, x30, [sp, #304]
  40eff4:	add	sp, sp, #0x150
  40eff8:	ret
  40effc:	sub	sp, sp, #0x20
  40f000:	stp	x29, x30, [sp, #16]
  40f004:	add	x29, sp, #0x10
  40f008:	str	x0, [sp, #8]
  40f00c:	ldr	x0, [sp, #8]
  40f010:	bl	415af8 <wcrtomb@plt+0x12d48>
  40f014:	ldr	x8, [sp, #8]
  40f018:	ldr	x8, [x8, #128]
  40f01c:	cmp	x8, #0x106
  40f020:	b.ne	40f04c <wcrtomb@plt+0xc29c>  // b.any
  40f024:	ldr	x0, [sp, #8]
  40f028:	bl	40e10c <wcrtomb@plt+0xb35c>
  40f02c:	ldr	x8, [sp, #8]
  40f030:	str	x0, [x8, #128]
  40f034:	ldr	x0, [sp, #8]
  40f038:	bl	415af8 <wcrtomb@plt+0x12d48>
  40f03c:	ldr	x0, [sp, #8]
  40f040:	mov	x1, #0x106                 	// #262
  40f044:	bl	40e00c <wcrtomb@plt+0xb25c>
  40f048:	b	40f014 <wcrtomb@plt+0xc264>
  40f04c:	ldp	x29, x30, [sp, #16]
  40f050:	add	sp, sp, #0x20
  40f054:	ret
  40f058:	sub	sp, sp, #0x40
  40f05c:	stp	x29, x30, [sp, #48]
  40f060:	add	x29, sp, #0x30
  40f064:	stur	x0, [x29, #-8]
  40f068:	stur	x1, [x29, #-16]
  40f06c:	str	x2, [sp, #24]
  40f070:	mov	w8, #0x1                   	// #1
  40f074:	and	w8, w3, w8
  40f078:	strb	w8, [sp, #23]
  40f07c:	str	x4, [sp, #8]
  40f080:	str	x5, [sp]
  40f084:	ldur	x9, [x29, #-8]
  40f088:	ldr	x9, [x9, #1040]
  40f08c:	ldur	x0, [x29, #-8]
  40f090:	ldur	x1, [x29, #-16]
  40f094:	ldr	x2, [sp, #24]
  40f098:	ldrb	w8, [sp, #23]
  40f09c:	ldr	x4, [sp, #8]
  40f0a0:	ldr	x5, [sp]
  40f0a4:	and	w3, w8, #0x1
  40f0a8:	blr	x9
  40f0ac:	ldp	x29, x30, [sp, #48]
  40f0b0:	add	sp, sp, #0x40
  40f0b4:	ret
  40f0b8:	sub	sp, sp, #0x10
  40f0bc:	str	x0, [sp, #8]
  40f0c0:	ldr	x8, [sp, #8]
  40f0c4:	ldr	x0, [x8, #288]
  40f0c8:	add	sp, sp, #0x10
  40f0cc:	ret
  40f0d0:	sub	sp, sp, #0x10
  40f0d4:	str	x0, [sp, #8]
  40f0d8:	ldr	x8, [sp, #8]
  40f0dc:	ldrb	w9, [x8, #192]
  40f0e0:	and	w0, w9, #0x1
  40f0e4:	add	sp, sp, #0x10
  40f0e8:	ret
  40f0ec:	sub	sp, sp, #0x30
  40f0f0:	stp	x29, x30, [sp, #32]
  40f0f4:	add	x29, sp, #0x20
  40f0f8:	stur	x0, [x29, #-8]
  40f0fc:	str	x1, [sp, #16]
  40f100:	str	x2, [sp, #8]
  40f104:	and	w8, w3, #0x1
  40f108:	strb	w8, [sp, #7]
  40f10c:	ldur	x9, [x29, #-8]
  40f110:	cbz	x9, 40f124 <wcrtomb@plt+0xc374>
  40f114:	ldur	x0, [x29, #-8]
  40f118:	ldr	x1, [sp, #16]
  40f11c:	ldr	x2, [sp, #8]
  40f120:	bl	40deec <wcrtomb@plt+0xb13c>
  40f124:	ldr	x0, [sp, #8]
  40f128:	bl	40f1a0 <wcrtomb@plt+0xc3f0>
  40f12c:	ldr	x0, [sp, #8]
  40f130:	bl	40f53c <wcrtomb@plt+0xc78c>
  40f134:	tbnz	w0, #0, 40f13c <wcrtomb@plt+0xc38c>
  40f138:	b	40f158 <wcrtomb@plt+0xc3a8>
  40f13c:	ldr	x0, [sp, #8]
  40f140:	bl	40f5e0 <wcrtomb@plt+0xc830>
  40f144:	ldr	x0, [sp, #8]
  40f148:	ldrb	w8, [sp, #7]
  40f14c:	and	w1, w8, #0x1
  40f150:	bl	40f6f8 <wcrtomb@plt+0xc948>
  40f154:	b	40f168 <wcrtomb@plt+0xc3b8>
  40f158:	ldr	x8, [sp, #8]
  40f15c:	adrp	x9, 410000 <wcrtomb@plt+0xd250>
  40f160:	add	x9, x9, #0x54
  40f164:	str	x9, [x8, #1040]
  40f168:	ldr	x8, [sp, #8]
  40f16c:	ldr	x8, [x8, #288]
  40f170:	cbz	x8, 40f194 <wcrtomb@plt+0xc3e4>
  40f174:	ldr	x8, [sp, #8]
  40f178:	mov	w9, #0x1                   	// #1
  40f17c:	strb	w9, [x8, #192]
  40f180:	ldr	x8, [sp, #8]
  40f184:	ldr	x0, [x8, #288]
  40f188:	ldrb	w9, [sp, #7]
  40f18c:	and	w1, w9, #0x1
  40f190:	bl	40f6f8 <wcrtomb@plt+0xc948>
  40f194:	ldp	x29, x30, [sp, #32]
  40f198:	add	sp, sp, #0x30
  40f19c:	ret
  40f1a0:	sub	sp, sp, #0x90
  40f1a4:	stp	x29, x30, [sp, #128]
  40f1a8:	add	x29, sp, #0x80
  40f1ac:	mov	x2, #0x920                 	// #2336
  40f1b0:	mov	w8, #0x0                   	// #0
  40f1b4:	adrp	x9, 411000 <wcrtomb@plt+0xe250>
  40f1b8:	add	x9, x9, #0x860
  40f1bc:	mov	x10, xzr
  40f1c0:	mov	x1, #0x20                  	// #32
  40f1c4:	stur	x0, [x29, #-8]
  40f1c8:	str	x2, [sp, #48]
  40f1cc:	str	w8, [sp, #44]
  40f1d0:	str	x9, [sp, #32]
  40f1d4:	str	x10, [sp, #24]
  40f1d8:	str	x1, [sp, #16]
  40f1dc:	bl	411590 <wcrtomb@plt+0xe7e0>
  40f1e0:	stur	x0, [x29, #-16]
  40f1e4:	ldur	x0, [x29, #-16]
  40f1e8:	ldur	x1, [x29, #-8]
  40f1ec:	ldr	x2, [sp, #48]
  40f1f0:	bl	4026a0 <memcpy@plt>
  40f1f4:	ldur	x9, [x29, #-16]
  40f1f8:	ldr	w8, [sp, #44]
  40f1fc:	strb	w8, [x9, #1048]
  40f200:	ldur	x9, [x29, #-16]
  40f204:	ldr	x10, [sp, #32]
  40f208:	str	x10, [x9, #1040]
  40f20c:	ldur	x9, [x29, #-16]
  40f210:	ldr	x11, [sp, #24]
  40f214:	str	x11, [x9, #280]
  40f218:	ldur	x9, [x29, #-16]
  40f21c:	str	x11, [x9, #288]
  40f220:	ldur	x9, [x29, #-16]
  40f224:	str	x11, [x9, #296]
  40f228:	ldur	x9, [x29, #-16]
  40f22c:	str	xzr, [x9, #304]
  40f230:	ldur	x9, [x29, #-16]
  40f234:	str	x11, [x9, #336]
  40f238:	ldur	x9, [x29, #-16]
  40f23c:	str	x11, [x9, #344]
  40f240:	ldur	x9, [x29, #-16]
  40f244:	str	x11, [x9, #320]
  40f248:	ldur	x9, [x29, #-16]
  40f24c:	str	xzr, [x9, #352]
  40f250:	ldur	x9, [x29, #-16]
  40f254:	str	x11, [x9, #368]
  40f258:	ldur	x9, [x29, #-16]
  40f25c:	str	x11, [x9, #376]
  40f260:	ldur	x9, [x29, #-16]
  40f264:	str	x11, [x9, #384]
  40f268:	ldur	x9, [x29, #-16]
  40f26c:	str	x11, [x9, #392]
  40f270:	ldur	x9, [x29, #-16]
  40f274:	ldr	x0, [x9, #16]
  40f278:	ldr	x1, [sp, #16]
  40f27c:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  40f280:	ldur	x9, [x29, #-16]
  40f284:	str	x0, [x9]
  40f288:	ldur	x9, [x29, #-8]
  40f28c:	ldr	x9, [x9, #8]
  40f290:	cbz	x9, 40f2b8 <wcrtomb@plt+0xc508>
  40f294:	ldur	x8, [x29, #-16]
  40f298:	ldr	x0, [x8]
  40f29c:	ldur	x8, [x29, #-8]
  40f2a0:	ldr	x1, [x8]
  40f2a4:	ldur	x8, [x29, #-8]
  40f2a8:	ldr	x8, [x8, #8]
  40f2ac:	mov	x9, #0x20                  	// #32
  40f2b0:	mul	x2, x8, x9
  40f2b4:	bl	4026a0 <memcpy@plt>
  40f2b8:	ldur	x8, [x29, #-8]
  40f2bc:	ldr	x0, [x8, #152]
  40f2c0:	mov	x1, #0x10                  	// #16
  40f2c4:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  40f2c8:	ldur	x8, [x29, #-16]
  40f2cc:	str	x0, [x8, #144]
  40f2d0:	ldur	x8, [x29, #-8]
  40f2d4:	ldr	x8, [x8, #152]
  40f2d8:	mov	x9, #0x2                   	// #2
  40f2dc:	mul	x8, x8, x9
  40f2e0:	ldur	x9, [x29, #-16]
  40f2e4:	str	x8, [x9, #160]
  40f2e8:	mov	w10, #0x0                   	// #0
  40f2ec:	sturb	w10, [x29, #-17]
  40f2f0:	sturb	w10, [x29, #-18]
  40f2f4:	stur	xzr, [x29, #-32]
  40f2f8:	stur	xzr, [x29, #-40]
  40f2fc:	ldur	x8, [x29, #-40]
  40f300:	ldur	x9, [x29, #-8]
  40f304:	ldr	x9, [x9, #152]
  40f308:	cmp	x8, x9
  40f30c:	b.ge	40f4e0 <wcrtomb@plt+0xc730>  // b.tcont
  40f310:	ldur	x8, [x29, #-8]
  40f314:	ldr	x8, [x8, #144]
  40f318:	ldur	x9, [x29, #-40]
  40f31c:	ldr	x8, [x8, x9, lsl #3]
  40f320:	cmp	x8, #0x10a
  40f324:	str	x8, [sp, #8]
  40f328:	b.eq	40f360 <wcrtomb@plt+0xc5b0>  // b.none
  40f32c:	b	40f330 <wcrtomb@plt+0xc580>
  40f330:	ldr	x8, [sp, #8]
  40f334:	subs	x9, x8, #0x10e
  40f338:	cmp	x9, #0x3
  40f33c:	b.ls	40f420 <wcrtomb@plt+0xc670>  // b.plast
  40f340:	b	40f344 <wcrtomb@plt+0xc594>
  40f344:	ldr	x8, [sp, #8]
  40f348:	subs	x9, x8, #0x112
  40f34c:	cmp	x9, #0x1
  40f350:	cset	w10, ls  // ls = plast
  40f354:	eor	w10, w10, #0x1
  40f358:	tbnz	w10, #0, 40f450 <wcrtomb@plt+0xc6a0>
  40f35c:	b	40f360 <wcrtomb@plt+0xc5b0>
  40f360:	add	x8, sp, #0x38
  40f364:	mov	x0, x8
  40f368:	str	x8, [sp]
  40f36c:	bl	414c24 <wcrtomb@plt+0x11e74>
  40f370:	ldur	x0, [x29, #-16]
  40f374:	ldr	x1, [sp]
  40f378:	bl	414ccc <wcrtomb@plt+0x11f1c>
  40f37c:	add	x8, x0, #0x114
  40f380:	ldur	x9, [x29, #-16]
  40f384:	ldr	x9, [x9, #144]
  40f388:	ldur	x10, [x29, #-32]
  40f38c:	add	x11, x10, #0x1
  40f390:	stur	x11, [x29, #-32]
  40f394:	str	x8, [x9, x10, lsl #3]
  40f398:	ldur	x8, [x29, #-16]
  40f39c:	ldr	x8, [x8, #144]
  40f3a0:	ldur	x9, [x29, #-32]
  40f3a4:	add	x10, x9, #0x1
  40f3a8:	stur	x10, [x29, #-32]
  40f3ac:	mov	x10, #0x102                 	// #258
  40f3b0:	str	x10, [x8, x9, lsl #3]
  40f3b4:	ldur	x8, [x29, #-8]
  40f3b8:	ldr	x8, [x8, #144]
  40f3bc:	ldur	x9, [x29, #-40]
  40f3c0:	add	x9, x9, #0x1
  40f3c4:	ldr	x8, [x8, x9, lsl #3]
  40f3c8:	cmp	x8, #0x101
  40f3cc:	b.eq	40f408 <wcrtomb@plt+0xc658>  // b.none
  40f3d0:	ldur	x8, [x29, #-8]
  40f3d4:	ldr	x8, [x8, #144]
  40f3d8:	ldur	x9, [x29, #-40]
  40f3dc:	add	x9, x9, #0x1
  40f3e0:	ldr	x8, [x8, x9, lsl #3]
  40f3e4:	cmp	x8, #0x102
  40f3e8:	b.eq	40f408 <wcrtomb@plt+0xc658>  // b.none
  40f3ec:	ldur	x8, [x29, #-8]
  40f3f0:	ldr	x8, [x8, #144]
  40f3f4:	ldur	x9, [x29, #-40]
  40f3f8:	add	x9, x9, #0x1
  40f3fc:	ldr	x8, [x8, x9, lsl #3]
  40f400:	cmp	x8, #0x103
  40f404:	b.ne	40f414 <wcrtomb@plt+0xc664>  // b.any
  40f408:	ldur	x8, [x29, #-40]
  40f40c:	add	x8, x8, #0x1
  40f410:	stur	x8, [x29, #-40]
  40f414:	mov	w8, #0x1                   	// #1
  40f418:	sturb	w8, [x29, #-17]
  40f41c:	b	40f4d0 <wcrtomb@plt+0xc720>
  40f420:	ldur	x8, [x29, #-8]
  40f424:	ldrb	w9, [x8, #1048]
  40f428:	tbnz	w9, #0, 40f430 <wcrtomb@plt+0xc680>
  40f42c:	b	40f450 <wcrtomb@plt+0xc6a0>
  40f430:	ldur	x8, [x29, #-16]
  40f434:	ldr	x8, [x8, #144]
  40f438:	ldur	x9, [x29, #-32]
  40f43c:	add	x10, x9, #0x1
  40f440:	stur	x10, [x29, #-32]
  40f444:	mov	x10, #0x100                 	// #256
  40f448:	str	x10, [x8, x9, lsl #3]
  40f44c:	b	40f4d0 <wcrtomb@plt+0xc720>
  40f450:	ldur	x8, [x29, #-8]
  40f454:	ldr	x8, [x8, #144]
  40f458:	ldur	x9, [x29, #-40]
  40f45c:	ldr	x8, [x8, x9, lsl #3]
  40f460:	ldur	x9, [x29, #-16]
  40f464:	ldr	x9, [x9, #144]
  40f468:	ldur	x10, [x29, #-32]
  40f46c:	add	x11, x10, #0x1
  40f470:	stur	x11, [x29, #-32]
  40f474:	str	x8, [x9, x10, lsl #3]
  40f478:	ldur	x8, [x29, #-8]
  40f47c:	ldr	x8, [x8, #144]
  40f480:	ldur	x9, [x29, #-40]
  40f484:	ldr	x8, [x8, x9, lsl #3]
  40f488:	mov	x9, xzr
  40f48c:	cmp	x9, x8
  40f490:	cset	w12, gt
  40f494:	tbnz	w12, #0, 40f4b0 <wcrtomb@plt+0xc700>
  40f498:	ldur	x8, [x29, #-8]
  40f49c:	ldr	x8, [x8, #144]
  40f4a0:	ldur	x9, [x29, #-40]
  40f4a4:	ldr	x8, [x8, x9, lsl #3]
  40f4a8:	cmp	x8, #0x100
  40f4ac:	b.lt	40f4c8 <wcrtomb@plt+0xc718>  // b.tstop
  40f4b0:	ldur	x8, [x29, #-8]
  40f4b4:	ldr	x8, [x8, #144]
  40f4b8:	ldur	x9, [x29, #-40]
  40f4bc:	ldr	x8, [x8, x9, lsl #3]
  40f4c0:	cmp	x8, #0x114
  40f4c4:	b.lt	40f4d0 <wcrtomb@plt+0xc720>  // b.tstop
  40f4c8:	mov	w8, #0x1                   	// #1
  40f4cc:	sturb	w8, [x29, #-18]
  40f4d0:	ldur	x8, [x29, #-40]
  40f4d4:	add	x8, x8, #0x1
  40f4d8:	stur	x8, [x29, #-40]
  40f4dc:	b	40f2fc <wcrtomb@plt+0xc54c>
  40f4e0:	ldur	x8, [x29, #-32]
  40f4e4:	ldur	x9, [x29, #-16]
  40f4e8:	str	x8, [x9, #152]
  40f4ec:	ldurb	w10, [x29, #-18]
  40f4f0:	tbnz	w10, #0, 40f4f8 <wcrtomb@plt+0xc748>
  40f4f4:	b	40f520 <wcrtomb@plt+0xc770>
  40f4f8:	ldurb	w8, [x29, #-17]
  40f4fc:	tbnz	w8, #0, 40f510 <wcrtomb@plt+0xc760>
  40f500:	ldur	x8, [x29, #-8]
  40f504:	ldrb	w9, [x8, #1048]
  40f508:	tbnz	w9, #0, 40f510 <wcrtomb@plt+0xc760>
  40f50c:	b	40f520 <wcrtomb@plt+0xc770>
  40f510:	ldur	x8, [x29, #-16]
  40f514:	ldur	x9, [x29, #-8]
  40f518:	str	x8, [x9, #288]
  40f51c:	b	40f530 <wcrtomb@plt+0xc780>
  40f520:	ldur	x0, [x29, #-16]
  40f524:	bl	41008c <wcrtomb@plt+0xd2dc>
  40f528:	ldur	x0, [x29, #-16]
  40f52c:	bl	402b40 <free@plt>
  40f530:	ldp	x29, x30, [sp, #128]
  40f534:	add	sp, sp, #0x90
  40f538:	ret
  40f53c:	sub	sp, sp, #0x20
  40f540:	str	x0, [sp, #16]
  40f544:	str	xzr, [sp, #8]
  40f548:	ldr	x8, [sp, #8]
  40f54c:	ldr	x9, [sp, #16]
  40f550:	ldr	x9, [x9, #152]
  40f554:	cmp	x8, x9
  40f558:	b.ge	40f5c4 <wcrtomb@plt+0xc814>  // b.tcont
  40f55c:	ldr	x8, [sp, #16]
  40f560:	ldr	x8, [x8, #144]
  40f564:	ldr	x9, [sp, #8]
  40f568:	ldr	x8, [x8, x9, lsl #3]
  40f56c:	subs	x9, x8, #0x10e
  40f570:	cmp	x9, #0x3
  40f574:	str	x8, [sp]
  40f578:	b.ls	40f594 <wcrtomb@plt+0xc7e4>  // b.plast
  40f57c:	b	40f580 <wcrtomb@plt+0xc7d0>
  40f580:	ldr	x8, [sp]
  40f584:	subs	x9, x8, #0x112
  40f588:	cmp	x9, #0x1
  40f58c:	b.ls	40f5a4 <wcrtomb@plt+0xc7f4>  // b.plast
  40f590:	b	40f5b4 <wcrtomb@plt+0xc804>
  40f594:	ldr	x8, [sp, #16]
  40f598:	ldrb	w9, [x8, #1048]
  40f59c:	tbnz	w9, #0, 40f5a4 <wcrtomb@plt+0xc7f4>
  40f5a0:	b	40f5b4 <wcrtomb@plt+0xc804>
  40f5a4:	mov	w8, wzr
  40f5a8:	and	w8, w8, #0x1
  40f5ac:	strb	w8, [sp, #31]
  40f5b0:	b	40f5d0 <wcrtomb@plt+0xc820>
  40f5b4:	ldr	x8, [sp, #8]
  40f5b8:	add	x8, x8, #0x1
  40f5bc:	str	x8, [sp, #8]
  40f5c0:	b	40f548 <wcrtomb@plt+0xc798>
  40f5c4:	mov	w8, #0x1                   	// #1
  40f5c8:	and	w8, w8, #0x1
  40f5cc:	strb	w8, [sp, #31]
  40f5d0:	ldrb	w8, [sp, #31]
  40f5d4:	and	w0, w8, #0x1
  40f5d8:	add	sp, sp, #0x20
  40f5dc:	ret
  40f5e0:	sub	sp, sp, #0x30
  40f5e4:	stp	x29, x30, [sp, #32]
  40f5e8:	add	x29, sp, #0x20
  40f5ec:	stur	x0, [x29, #-8]
  40f5f0:	ldur	x8, [x29, #-8]
  40f5f4:	ldrb	w9, [x8, #1050]
  40f5f8:	tbnz	w9, #0, 40f600 <wcrtomb@plt+0xc850>
  40f5fc:	b	40f6ec <wcrtomb@plt+0xc93c>
  40f600:	mov	w8, #0x0                   	// #0
  40f604:	sturb	w8, [x29, #-9]
  40f608:	str	xzr, [sp, #8]
  40f60c:	ldr	x8, [sp, #8]
  40f610:	ldur	x9, [x29, #-8]
  40f614:	ldr	x9, [x9, #152]
  40f618:	cmp	x8, x9
  40f61c:	b.ge	40f684 <wcrtomb@plt+0xc8d4>  // b.tcont
  40f620:	ldur	x8, [x29, #-8]
  40f624:	ldr	x8, [x8, #144]
  40f628:	ldr	x9, [sp, #8]
  40f62c:	ldr	x8, [x8, x9, lsl #3]
  40f630:	cmp	x8, #0x10a
  40f634:	str	x8, [sp]
  40f638:	b.eq	40f660 <wcrtomb@plt+0xc8b0>  // b.none
  40f63c:	b	40f640 <wcrtomb@plt+0xc890>
  40f640:	ldr	x8, [sp]
  40f644:	cmp	x8, #0x112
  40f648:	b.eq	40f664 <wcrtomb@plt+0xc8b4>  // b.none
  40f64c:	b	40f650 <wcrtomb@plt+0xc8a0>
  40f650:	ldr	x8, [sp]
  40f654:	cmp	x8, #0x113
  40f658:	b.eq	40f670 <wcrtomb@plt+0xc8c0>  // b.none
  40f65c:	b	40f674 <wcrtomb@plt+0xc8c4>
  40f660:	bl	402a70 <abort@plt>
  40f664:	mov	w8, #0x1                   	// #1
  40f668:	sturb	w8, [x29, #-9]
  40f66c:	b	40f674 <wcrtomb@plt+0xc8c4>
  40f670:	b	40f6ec <wcrtomb@plt+0xc93c>
  40f674:	ldr	x8, [sp, #8]
  40f678:	add	x8, x8, #0x1
  40f67c:	str	x8, [sp, #8]
  40f680:	b	40f60c <wcrtomb@plt+0xc85c>
  40f684:	ldurb	w8, [x29, #-9]
  40f688:	tbnz	w8, #0, 40f6bc <wcrtomb@plt+0xc90c>
  40f68c:	ldur	x8, [x29, #-8]
  40f690:	ldr	x8, [x8, #288]
  40f694:	cbz	x8, 40f6bc <wcrtomb@plt+0xc90c>
  40f698:	ldur	x8, [x29, #-8]
  40f69c:	ldr	x0, [x8, #288]
  40f6a0:	bl	41008c <wcrtomb@plt+0xd2dc>
  40f6a4:	ldur	x8, [x29, #-8]
  40f6a8:	ldr	x0, [x8, #288]
  40f6ac:	bl	402b40 <free@plt>
  40f6b0:	ldur	x8, [x29, #-8]
  40f6b4:	mov	x9, xzr
  40f6b8:	str	x9, [x8, #288]
  40f6bc:	ldur	x0, [x29, #-8]
  40f6c0:	bl	41029c <wcrtomb@plt+0xd4ec>
  40f6c4:	ldur	x8, [x29, #-8]
  40f6c8:	mov	w9, #0x0                   	// #0
  40f6cc:	strb	w9, [x8, #1048]
  40f6d0:	ldur	x8, [x29, #-8]
  40f6d4:	adrp	x10, 411000 <wcrtomb@plt+0xe250>
  40f6d8:	add	x10, x10, #0x860
  40f6dc:	str	x10, [x8, #1040]
  40f6e0:	ldur	x8, [x29, #-8]
  40f6e4:	mov	w9, #0x1                   	// #1
  40f6e8:	strb	w9, [x8, #192]
  40f6ec:	ldp	x29, x30, [sp, #32]
  40f6f0:	add	sp, sp, #0x30
  40f6f4:	ret
  40f6f8:	sub	sp, sp, #0x150
  40f6fc:	stp	x29, x30, [sp, #304]
  40f700:	str	x28, [sp, #320]
  40f704:	add	x29, sp, #0x130
  40f708:	sub	x8, x29, #0x38
  40f70c:	mov	x9, #0x20                  	// #32
  40f710:	mov	x10, #0x18                  	// #24
  40f714:	mov	x11, #0x105                 	// #261
  40f718:	mov	w12, #0x1                   	// #1
  40f71c:	sub	x13, x29, #0x78
  40f720:	str	x0, [x8, #48]
  40f724:	and	w14, w1, w12
  40f728:	sturb	w14, [x29, #-9]
  40f72c:	ldr	x15, [x8, #48]
  40f730:	ldr	x0, [x15, #176]
  40f734:	mov	x1, x9
  40f738:	str	x8, [sp, #96]
  40f73c:	str	x10, [sp, #88]
  40f740:	str	x11, [sp, #80]
  40f744:	str	w12, [sp, #76]
  40f748:	str	x13, [sp, #64]
  40f74c:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  40f750:	ldr	x8, [sp, #96]
  40f754:	str	x0, [x8, #32]
  40f758:	ldr	x9, [x8, #32]
  40f75c:	str	x9, [x8, #24]
  40f760:	ldr	x9, [x8, #24]
  40f764:	ldr	x10, [x8, #48]
  40f768:	ldr	x10, [x10, #176]
  40f76c:	mov	x11, #0x10                  	// #16
  40f770:	mul	x10, x11, x10
  40f774:	add	x9, x9, x10
  40f778:	str	x9, [x8, #16]
  40f77c:	ldr	x9, [x8, #48]
  40f780:	ldr	x0, [x9, #168]
  40f784:	ldr	x1, [sp, #88]
  40f788:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  40f78c:	stur	x0, [x29, #-88]
  40f790:	ldur	x8, [x29, #-88]
  40f794:	stur	x8, [x29, #-96]
  40f798:	ldr	x8, [sp, #96]
  40f79c:	ldr	x0, [x8, #48]
  40f7a0:	ldr	x1, [sp, #80]
  40f7a4:	bl	40e00c <wcrtomb@plt+0xb25c>
  40f7a8:	ldurb	w12, [x29, #-9]
  40f7ac:	ldr	x8, [sp, #96]
  40f7b0:	ldr	x9, [x8, #48]
  40f7b4:	ldr	w14, [sp, #76]
  40f7b8:	and	w12, w12, w14
  40f7bc:	strb	w12, [x9, #328]
  40f7c0:	ldr	x9, [x8, #48]
  40f7c4:	ldr	x1, [x9, #176]
  40f7c8:	ldr	x0, [sp, #64]
  40f7cc:	bl	41641c <wcrtomb@plt+0x1366c>
  40f7d0:	ldr	x8, [sp, #96]
  40f7d4:	ldr	x9, [x8, #48]
  40f7d8:	ldr	x0, [x9, #152]
  40f7dc:	ldr	x1, [sp, #88]
  40f7e0:	bl	41d930 <wcrtomb@plt+0x1ab80>
  40f7e4:	ldr	x8, [sp, #96]
  40f7e8:	ldr	x9, [x8, #48]
  40f7ec:	str	x0, [x9, #320]
  40f7f0:	stur	xzr, [x29, #-128]
  40f7f4:	ldur	x8, [x29, #-128]
  40f7f8:	ldr	x9, [sp, #96]
  40f7fc:	ldr	x10, [x9, #48]
  40f800:	ldr	x10, [x10, #152]
  40f804:	cmp	x8, x10
  40f808:	b.ge	40fd20 <wcrtomb@plt+0xcf70>  // b.tcont
  40f80c:	ldr	x8, [sp, #96]
  40f810:	ldr	x9, [x8, #48]
  40f814:	ldr	x9, [x9, #144]
  40f818:	ldur	x10, [x29, #-128]
  40f81c:	ldr	x9, [x9, x10, lsl #3]
  40f820:	subs	x9, x9, #0x100
  40f824:	cmp	x9, #0x6
  40f828:	str	x9, [sp, #56]
  40f82c:	b.hi	40fc88 <wcrtomb@plt+0xced8>  // b.pmore
  40f830:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  40f834:	add	x8, x8, #0xedc
  40f838:	ldr	x11, [sp, #56]
  40f83c:	ldrsw	x10, [x8, x11, lsl #2]
  40f840:	add	x9, x8, x10
  40f844:	br	x9
  40f848:	ldur	x8, [x29, #-96]
  40f84c:	mov	w9, #0x1                   	// #1
  40f850:	strb	w9, [x8]
  40f854:	ldur	x8, [x29, #-96]
  40f858:	str	xzr, [x8, #16]
  40f85c:	ldur	x8, [x29, #-96]
  40f860:	str	xzr, [x8, #8]
  40f864:	ldur	x8, [x29, #-96]
  40f868:	add	x8, x8, #0x18
  40f86c:	stur	x8, [x29, #-96]
  40f870:	b	40fd10 <wcrtomb@plt+0xcf60>
  40f874:	ldr	x8, [sp, #96]
  40f878:	ldr	x9, [x8, #24]
  40f87c:	ldur	x10, [x29, #-96]
  40f880:	ldur	x10, [x10, #-16]
  40f884:	mov	x11, #0x10                  	// #16
  40f888:	mneg	x10, x10, x11
  40f88c:	add	x9, x9, x10
  40f890:	stur	x9, [x29, #-80]
  40f894:	ldur	x9, [x29, #-96]
  40f898:	ldur	x9, [x9, #-16]
  40f89c:	stur	x9, [x29, #-72]
  40f8a0:	ldr	x9, [x8, #16]
  40f8a4:	ldur	x10, [x29, #-96]
  40f8a8:	ldur	x10, [x10, #-8]
  40f8ac:	mneg	x10, x10, x11
  40f8b0:	add	x9, x9, x10
  40f8b4:	stur	x9, [x29, #-136]
  40f8b8:	stur	xzr, [x29, #-144]
  40f8bc:	ldur	x8, [x29, #-144]
  40f8c0:	ldur	x9, [x29, #-96]
  40f8c4:	ldur	x9, [x9, #-8]
  40f8c8:	cmp	x8, x9
  40f8cc:	b.ge	40f95c <wcrtomb@plt+0xcbac>  // b.tcont
  40f8d0:	ldr	x8, [sp, #96]
  40f8d4:	ldr	x9, [x8, #48]
  40f8d8:	ldr	x9, [x9, #320]
  40f8dc:	ldur	x10, [x29, #-136]
  40f8e0:	ldur	x11, [x29, #-144]
  40f8e4:	mov	x12, #0x10                  	// #16
  40f8e8:	mul	x11, x12, x11
  40f8ec:	ldr	x10, [x10, x11]
  40f8f0:	mov	x11, #0x18                  	// #24
  40f8f4:	mul	x10, x11, x10
  40f8f8:	add	x1, x9, x10
  40f8fc:	sub	x0, x29, #0x50
  40f900:	sub	x9, x29, #0x78
  40f904:	mov	x2, x9
  40f908:	str	x12, [sp, #48]
  40f90c:	str	x11, [sp, #40]
  40f910:	str	x9, [sp, #32]
  40f914:	bl	416468 <wcrtomb@plt+0x136b8>
  40f918:	ldr	x8, [sp, #96]
  40f91c:	ldr	x9, [x8, #48]
  40f920:	ldr	x9, [x9, #320]
  40f924:	ldur	x10, [x29, #-136]
  40f928:	ldur	x11, [x29, #-144]
  40f92c:	ldr	x12, [sp, #48]
  40f930:	mul	x11, x12, x11
  40f934:	ldr	x10, [x10, x11]
  40f938:	ldr	x11, [sp, #40]
  40f93c:	mul	x10, x11, x10
  40f940:	add	x1, x9, x10
  40f944:	ldr	x0, [sp, #32]
  40f948:	bl	4164a4 <wcrtomb@plt+0x136f4>
  40f94c:	ldur	x8, [x29, #-144]
  40f950:	add	x8, x8, #0x1
  40f954:	stur	x8, [x29, #-144]
  40f958:	b	40f8bc <wcrtomb@plt+0xcb0c>
  40f95c:	ldr	x8, [sp, #96]
  40f960:	ldr	x9, [x8, #48]
  40f964:	ldr	x9, [x9, #144]
  40f968:	ldur	x10, [x29, #-128]
  40f96c:	ldr	x9, [x9, x10, lsl #3]
  40f970:	cmp	x9, #0x103
  40f974:	b.eq	40f98c <wcrtomb@plt+0xcbdc>  // b.none
  40f978:	ldur	x8, [x29, #-96]
  40f97c:	mov	x9, #0xffffffffffffffe8    	// #-24
  40f980:	add	x8, x8, x9
  40f984:	mov	w10, #0x1                   	// #1
  40f988:	strb	w10, [x8]
  40f98c:	b	40fd10 <wcrtomb@plt+0xcf60>
  40f990:	ldur	x8, [x29, #-96]
  40f994:	ldur	x8, [x8, #-16]
  40f998:	stur	x8, [x29, #-72]
  40f99c:	ldr	x8, [sp, #96]
  40f9a0:	ldr	x9, [x8, #24]
  40f9a4:	ldur	x10, [x29, #-96]
  40f9a8:	ldur	x10, [x10, #-16]
  40f9ac:	mov	x11, #0x10                  	// #16
  40f9b0:	mneg	x10, x10, x11
  40f9b4:	add	x9, x9, x10
  40f9b8:	stur	x9, [x29, #-80]
  40f9bc:	ldr	x9, [x8, #16]
  40f9c0:	ldur	x10, [x29, #-96]
  40f9c4:	ldur	x10, [x10, #-8]
  40f9c8:	mneg	x10, x10, x11
  40f9cc:	add	x9, x9, x10
  40f9d0:	ldur	x10, [x29, #-96]
  40f9d4:	ldur	x10, [x10, #-32]
  40f9d8:	mneg	x10, x10, x11
  40f9dc:	add	x9, x9, x10
  40f9e0:	str	x9, [sp, #152]
  40f9e4:	str	xzr, [sp, #144]
  40f9e8:	ldr	x8, [sp, #144]
  40f9ec:	ldur	x9, [x29, #-96]
  40f9f0:	ldur	x9, [x9, #-32]
  40f9f4:	cmp	x8, x9
  40f9f8:	b.ge	40fa88 <wcrtomb@plt+0xccd8>  // b.tcont
  40f9fc:	ldr	x8, [sp, #96]
  40fa00:	ldr	x9, [x8, #48]
  40fa04:	ldr	x9, [x9, #320]
  40fa08:	ldr	x10, [sp, #152]
  40fa0c:	ldr	x11, [sp, #144]
  40fa10:	mov	x12, #0x10                  	// #16
  40fa14:	mul	x11, x12, x11
  40fa18:	ldr	x10, [x10, x11]
  40fa1c:	mov	x11, #0x18                  	// #24
  40fa20:	mul	x10, x11, x10
  40fa24:	add	x1, x9, x10
  40fa28:	sub	x0, x29, #0x50
  40fa2c:	sub	x9, x29, #0x78
  40fa30:	mov	x2, x9
  40fa34:	str	x12, [sp, #24]
  40fa38:	str	x11, [sp, #16]
  40fa3c:	str	x9, [sp, #8]
  40fa40:	bl	416468 <wcrtomb@plt+0x136b8>
  40fa44:	ldr	x8, [sp, #96]
  40fa48:	ldr	x9, [x8, #48]
  40fa4c:	ldr	x9, [x9, #320]
  40fa50:	ldr	x10, [sp, #152]
  40fa54:	ldr	x11, [sp, #144]
  40fa58:	ldr	x12, [sp, #24]
  40fa5c:	mul	x11, x12, x11
  40fa60:	ldr	x10, [x10, x11]
  40fa64:	ldr	x11, [sp, #16]
  40fa68:	mul	x10, x11, x10
  40fa6c:	add	x1, x9, x10
  40fa70:	ldr	x0, [sp, #8]
  40fa74:	bl	4164a4 <wcrtomb@plt+0x136f4>
  40fa78:	ldr	x8, [sp, #144]
  40fa7c:	add	x8, x8, #0x1
  40fa80:	str	x8, [sp, #144]
  40fa84:	b	40f9e8 <wcrtomb@plt+0xcc38>
  40fa88:	ldur	x8, [x29, #-96]
  40fa8c:	mov	x9, #0xffffffffffffffd0    	// #-48
  40fa90:	add	x8, x8, x9
  40fa94:	ldrb	w10, [x8]
  40fa98:	tbnz	w10, #0, 40faa0 <wcrtomb@plt+0xccf0>
  40fa9c:	b	40fabc <wcrtomb@plt+0xcd0c>
  40faa0:	ldur	x8, [x29, #-96]
  40faa4:	ldur	x8, [x8, #-16]
  40faa8:	ldur	x9, [x29, #-96]
  40faac:	ldur	x10, [x9, #-40]
  40fab0:	add	x8, x10, x8
  40fab4:	stur	x8, [x9, #-40]
  40fab8:	b	40fadc <wcrtomb@plt+0xcd2c>
  40fabc:	ldur	x8, [x29, #-96]
  40fac0:	ldur	x8, [x8, #-16]
  40fac4:	ldr	x9, [sp, #96]
  40fac8:	ldr	x10, [x9, #24]
  40facc:	mov	x11, #0x10                  	// #16
  40fad0:	mneg	x8, x8, x11
  40fad4:	add	x8, x10, x8
  40fad8:	str	x8, [x9, #24]
  40fadc:	ldur	x8, [x29, #-96]
  40fae0:	mov	x9, #0xffffffffffffffe8    	// #-24
  40fae4:	add	x8, x8, x9
  40fae8:	ldrb	w10, [x8]
  40faec:	tbnz	w10, #0, 40faf4 <wcrtomb@plt+0xcd44>
  40faf0:	b	40fb10 <wcrtomb@plt+0xcd60>
  40faf4:	ldur	x8, [x29, #-96]
  40faf8:	ldur	x8, [x8, #-8]
  40fafc:	ldur	x9, [x29, #-96]
  40fb00:	ldur	x10, [x9, #-32]
  40fb04:	add	x8, x10, x8
  40fb08:	stur	x8, [x9, #-32]
  40fb0c:	b	40fbbc <wcrtomb@plt+0xce0c>
  40fb10:	ldr	x8, [sp, #96]
  40fb14:	ldr	x9, [x8, #16]
  40fb18:	ldur	x10, [x29, #-96]
  40fb1c:	mov	x11, #0x10                  	// #16
  40fb20:	ldur	x10, [x10, #-8]
  40fb24:	mneg	x10, x10, x11
  40fb28:	add	x9, x9, x10
  40fb2c:	ldur	x10, [x29, #-96]
  40fb30:	ldur	x10, [x10, #-32]
  40fb34:	mneg	x10, x10, x11
  40fb38:	add	x9, x9, x10
  40fb3c:	str	x9, [sp, #136]
  40fb40:	str	xzr, [sp, #128]
  40fb44:	ldr	x8, [sp, #128]
  40fb48:	ldur	x9, [x29, #-96]
  40fb4c:	ldur	x9, [x9, #-8]
  40fb50:	cmp	x8, x9
  40fb54:	b.ge	40fb8c <wcrtomb@plt+0xcddc>  // b.tcont
  40fb58:	ldr	x8, [sp, #136]
  40fb5c:	ldr	x9, [sp, #128]
  40fb60:	ldr	x10, [sp, #136]
  40fb64:	ldr	x11, [sp, #128]
  40fb68:	ldur	x12, [x29, #-96]
  40fb6c:	ldur	x12, [x12, #-32]
  40fb70:	add	x11, x11, x12
  40fb74:	ldr	q0, [x10, x11, lsl #4]
  40fb78:	str	q0, [x8, x9, lsl #4]
  40fb7c:	ldr	x8, [sp, #128]
  40fb80:	add	x8, x8, #0x1
  40fb84:	str	x8, [sp, #128]
  40fb88:	b	40fb44 <wcrtomb@plt+0xcd94>
  40fb8c:	ldur	x8, [x29, #-96]
  40fb90:	mov	x9, #0x10                  	// #16
  40fb94:	ldur	x8, [x8, #-32]
  40fb98:	ldr	x10, [sp, #96]
  40fb9c:	ldr	x11, [x10, #16]
  40fba0:	mneg	x8, x8, x9
  40fba4:	add	x8, x11, x8
  40fba8:	str	x8, [x10, #16]
  40fbac:	ldur	x8, [x29, #-96]
  40fbb0:	ldur	x8, [x8, #-8]
  40fbb4:	ldur	x9, [x29, #-96]
  40fbb8:	stur	x8, [x9, #-32]
  40fbbc:	ldur	x8, [x29, #-96]
  40fbc0:	mov	x9, #0xffffffffffffffe8    	// #-24
  40fbc4:	add	x8, x8, x9
  40fbc8:	ldrb	w10, [x8]
  40fbcc:	mov	w11, #0x1                   	// #1
  40fbd0:	and	w10, w10, #0x1
  40fbd4:	ldur	x8, [x29, #-96]
  40fbd8:	mov	x12, #0xffffffffffffffd0    	// #-48
  40fbdc:	add	x8, x8, x12
  40fbe0:	ldrb	w13, [x8]
  40fbe4:	and	w13, w13, #0x1
  40fbe8:	tst	w13, w10
  40fbec:	cset	w10, ne  // ne = any
  40fbf0:	and	w10, w10, w11
  40fbf4:	strb	w10, [x8]
  40fbf8:	ldur	x8, [x29, #-96]
  40fbfc:	add	x8, x8, x9
  40fc00:	stur	x8, [x29, #-96]
  40fc04:	b	40fd10 <wcrtomb@plt+0xcf60>
  40fc08:	ldur	x8, [x29, #-96]
  40fc0c:	mov	x9, #0xffffffffffffffe8    	// #-24
  40fc10:	ldur	x8, [x8, #-16]
  40fc14:	ldur	x10, [x29, #-96]
  40fc18:	mov	x11, #0xffffffffffffffd0    	// #-48
  40fc1c:	ldur	x12, [x10, #-40]
  40fc20:	add	x8, x12, x8
  40fc24:	stur	x8, [x10, #-40]
  40fc28:	ldur	x8, [x29, #-96]
  40fc2c:	ldur	x8, [x8, #-8]
  40fc30:	ldur	x10, [x29, #-96]
  40fc34:	ldur	x12, [x10, #-32]
  40fc38:	add	x8, x12, x8
  40fc3c:	stur	x8, [x10, #-32]
  40fc40:	ldur	x8, [x29, #-96]
  40fc44:	add	x8, x8, x9
  40fc48:	ldrb	w13, [x8]
  40fc4c:	mov	w14, #0x1                   	// #1
  40fc50:	and	w13, w13, #0x1
  40fc54:	ldur	x8, [x29, #-96]
  40fc58:	add	x8, x8, x11
  40fc5c:	ldrb	w15, [x8]
  40fc60:	and	w15, w15, #0x1
  40fc64:	orr	w13, w15, w13
  40fc68:	cmp	w13, #0x0
  40fc6c:	cset	w13, ne  // ne = any
  40fc70:	and	w13, w13, w14
  40fc74:	strb	w13, [x8]
  40fc78:	ldur	x8, [x29, #-96]
  40fc7c:	add	x8, x8, x9
  40fc80:	stur	x8, [x29, #-96]
  40fc84:	b	40fd10 <wcrtomb@plt+0xcf60>
  40fc88:	ldr	x8, [sp, #96]
  40fc8c:	ldr	x9, [x8, #48]
  40fc90:	ldr	x9, [x9, #144]
  40fc94:	ldur	x10, [x29, #-128]
  40fc98:	ldr	x9, [x9, x10, lsl #3]
  40fc9c:	cmp	x9, #0x112
  40fca0:	cset	w11, eq  // eq = none
  40fca4:	ldur	x9, [x29, #-96]
  40fca8:	and	w11, w11, #0x1
  40fcac:	strb	w11, [x9]
  40fcb0:	ldur	x9, [x29, #-96]
  40fcb4:	mov	x10, #0x1                   	// #1
  40fcb8:	str	x10, [x9, #16]
  40fcbc:	ldur	x9, [x29, #-96]
  40fcc0:	str	x10, [x9, #8]
  40fcc4:	ldur	x9, [x29, #-96]
  40fcc8:	add	x9, x9, #0x18
  40fccc:	stur	x9, [x29, #-96]
  40fcd0:	ldur	x9, [x29, #-128]
  40fcd4:	ldr	x10, [x8, #16]
  40fcd8:	str	x9, [x10]
  40fcdc:	ldr	x10, [x8, #24]
  40fce0:	str	x9, [x10]
  40fce4:	ldr	x9, [x8, #16]
  40fce8:	mov	w11, #0x1ff                 	// #511
  40fcec:	str	w11, [x9, #8]
  40fcf0:	ldr	x9, [x8, #24]
  40fcf4:	str	w11, [x9, #8]
  40fcf8:	ldr	x9, [x8, #24]
  40fcfc:	add	x9, x9, #0x10
  40fd00:	str	x9, [x8, #24]
  40fd04:	ldr	x9, [x8, #16]
  40fd08:	add	x9, x9, #0x10
  40fd0c:	str	x9, [x8, #16]
  40fd10:	ldur	x8, [x29, #-128]
  40fd14:	add	x8, x8, #0x1
  40fd18:	stur	x8, [x29, #-128]
  40fd1c:	b	40f7f4 <wcrtomb@plt+0xca44>
  40fd20:	ldr	x8, [sp, #96]
  40fd24:	ldr	x0, [x8, #48]
  40fd28:	bl	416560 <wcrtomb@plt+0x137b0>
  40fd2c:	ldr	x8, [sp, #96]
  40fd30:	ldr	x0, [x8, #48]
  40fd34:	bl	4167a4 <wcrtomb@plt+0x139f4>
  40fd38:	ldr	x8, [sp, #96]
  40fd3c:	str	xzr, [x8]
  40fd40:	mov	w9, #0x1ff                 	// #511
  40fd44:	stur	w9, [x29, #-48]
  40fd48:	sub	x10, x29, #0x50
  40fd4c:	mov	x0, x10
  40fd50:	mov	x1, #0x1                   	// #1
  40fd54:	str	x10, [sp]
  40fd58:	bl	41641c <wcrtomb@plt+0x1366c>
  40fd5c:	ldr	x8, [sp, #96]
  40fd60:	ldr	x0, [x8]
  40fd64:	ldr	x1, [x8, #8]
  40fd68:	ldr	x2, [sp]
  40fd6c:	bl	416aa8 <wcrtomb@plt+0x13cf8>
  40fd70:	ldr	x8, [sp, #96]
  40fd74:	ldr	x10, [x8, #48]
  40fd78:	ldr	x0, [x10, #152]
  40fd7c:	mov	x1, #0x4                   	// #4
  40fd80:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  40fd84:	ldr	x8, [sp, #96]
  40fd88:	ldr	x10, [x8, #48]
  40fd8c:	str	x0, [x10, #344]
  40fd90:	str	xzr, [sp, #120]
  40fd94:	ldr	x8, [sp, #120]
  40fd98:	ldr	x9, [sp, #96]
  40fd9c:	ldr	x10, [x9, #48]
  40fda0:	ldr	x10, [x10, #152]
  40fda4:	cmp	x8, x10
  40fda8:	b.ge	40ff70 <wcrtomb@plt+0xd1c0>  // b.tcont
  40fdac:	ldr	x8, [sp, #96]
  40fdb0:	ldr	x9, [x8, #48]
  40fdb4:	ldr	x9, [x9, #344]
  40fdb8:	ldr	x10, [sp, #120]
  40fdbc:	mov	w11, wzr
  40fdc0:	str	w11, [x9, x10, lsl #2]
  40fdc4:	ldr	x9, [x8, #48]
  40fdc8:	ldr	x9, [x9, #336]
  40fdcc:	ldr	x10, [sp, #120]
  40fdd0:	ldr	w0, [x9, x10, lsl #2]
  40fdd4:	bl	416b20 <wcrtomb@plt+0x13d70>
  40fdd8:	tbnz	w0, #0, 40fde0 <wcrtomb@plt+0xd030>
  40fddc:	b	40fe08 <wcrtomb@plt+0xd058>
  40fde0:	ldr	x8, [sp, #96]
  40fde4:	ldr	x9, [x8, #48]
  40fde8:	ldr	x9, [x9, #344]
  40fdec:	ldr	x10, [sp, #120]
  40fdf0:	mov	x11, #0x4                   	// #4
  40fdf4:	mul	x10, x11, x10
  40fdf8:	add	x9, x9, x10
  40fdfc:	ldr	w12, [x9]
  40fe00:	orr	w12, w12, #0x4
  40fe04:	str	w12, [x9]
  40fe08:	ldr	x8, [sp, #96]
  40fe0c:	ldr	x9, [x8, #48]
  40fe10:	ldr	x9, [x9, #336]
  40fe14:	ldr	x10, [sp, #120]
  40fe18:	ldr	w0, [x9, x10, lsl #2]
  40fe1c:	bl	416b4c <wcrtomb@plt+0x13d9c>
  40fe20:	tbnz	w0, #0, 40fe28 <wcrtomb@plt+0xd078>
  40fe24:	b	40fe50 <wcrtomb@plt+0xd0a0>
  40fe28:	ldr	x8, [sp, #96]
  40fe2c:	ldr	x9, [x8, #48]
  40fe30:	ldr	x9, [x9, #344]
  40fe34:	ldr	x10, [sp, #120]
  40fe38:	mov	x11, #0x4                   	// #4
  40fe3c:	mul	x10, x11, x10
  40fe40:	add	x9, x9, x10
  40fe44:	ldr	w12, [x9]
  40fe48:	orr	w12, w12, #0x2
  40fe4c:	str	w12, [x9]
  40fe50:	str	xzr, [sp, #112]
  40fe54:	ldr	x8, [sp, #112]
  40fe58:	ldr	x9, [sp, #96]
  40fe5c:	ldr	x10, [x9, #48]
  40fe60:	ldr	x10, [x10, #320]
  40fe64:	ldr	x11, [sp, #120]
  40fe68:	mov	x12, #0x18                  	// #24
  40fe6c:	mul	x11, x12, x11
  40fe70:	add	x10, x10, x11
  40fe74:	ldr	x10, [x10, #8]
  40fe78:	cmp	x8, x10
  40fe7c:	b.ge	40ff60 <wcrtomb@plt+0xd1b0>  // b.tcont
  40fe80:	ldr	x8, [sp, #96]
  40fe84:	ldr	x9, [x8, #48]
  40fe88:	ldr	x9, [x9, #320]
  40fe8c:	ldr	x10, [sp, #120]
  40fe90:	mov	x11, #0x18                  	// #24
  40fe94:	mul	x10, x11, x10
  40fe98:	add	x9, x9, x10
  40fe9c:	ldr	x9, [x9]
  40fea0:	ldr	x10, [sp, #112]
  40fea4:	mov	x11, #0x10                  	// #16
  40fea8:	mul	x10, x11, x10
  40feac:	add	x9, x9, x10
  40feb0:	ldr	w0, [x9, #8]
  40feb4:	bl	416b20 <wcrtomb@plt+0x13d70>
  40feb8:	tbnz	w0, #0, 40fec0 <wcrtomb@plt+0xd110>
  40febc:	b	40fee8 <wcrtomb@plt+0xd138>
  40fec0:	ldr	x8, [sp, #96]
  40fec4:	ldr	x9, [x8, #48]
  40fec8:	ldr	x9, [x9, #344]
  40fecc:	ldr	x10, [sp, #120]
  40fed0:	mov	x11, #0x4                   	// #4
  40fed4:	mul	x10, x11, x10
  40fed8:	add	x9, x9, x10
  40fedc:	ldr	w12, [x9]
  40fee0:	orr	w12, w12, #0x4
  40fee4:	str	w12, [x9]
  40fee8:	ldr	x8, [sp, #96]
  40feec:	ldr	x9, [x8, #48]
  40fef0:	ldr	x9, [x9, #320]
  40fef4:	ldr	x10, [sp, #120]
  40fef8:	mov	x11, #0x18                  	// #24
  40fefc:	mul	x10, x11, x10
  40ff00:	add	x9, x9, x10
  40ff04:	ldr	x9, [x9]
  40ff08:	ldr	x10, [sp, #112]
  40ff0c:	mov	x11, #0x10                  	// #16
  40ff10:	mul	x10, x11, x10
  40ff14:	add	x9, x9, x10
  40ff18:	ldr	w0, [x9, #8]
  40ff1c:	bl	416b4c <wcrtomb@plt+0x13d9c>
  40ff20:	tbnz	w0, #0, 40ff28 <wcrtomb@plt+0xd178>
  40ff24:	b	40ff50 <wcrtomb@plt+0xd1a0>
  40ff28:	ldr	x8, [sp, #96]
  40ff2c:	ldr	x9, [x8, #48]
  40ff30:	ldr	x9, [x9, #344]
  40ff34:	ldr	x10, [sp, #120]
  40ff38:	mov	x11, #0x4                   	// #4
  40ff3c:	mul	x10, x11, x10
  40ff40:	add	x9, x9, x10
  40ff44:	ldr	w12, [x9]
  40ff48:	orr	w12, w12, #0x2
  40ff4c:	str	w12, [x9]
  40ff50:	ldr	x8, [sp, #112]
  40ff54:	add	x8, x8, #0x1
  40ff58:	str	x8, [sp, #112]
  40ff5c:	b	40fe54 <wcrtomb@plt+0xd0a4>
  40ff60:	ldr	x8, [sp, #120]
  40ff64:	add	x8, x8, #0x1
  40ff68:	str	x8, [sp, #120]
  40ff6c:	b	40fd94 <wcrtomb@plt+0xcfe4>
  40ff70:	ldr	x8, [sp, #96]
  40ff74:	ldr	x0, [x8, #48]
  40ff78:	sub	x1, x29, #0x50
  40ff7c:	bl	416b78 <wcrtomb@plt+0x13dc8>
  40ff80:	str	w0, [sp, #108]
  40ff84:	ldr	w9, [sp, #108]
  40ff88:	and	w9, w9, #0x4
  40ff8c:	cbz	w9, 40ffa4 <wcrtomb@plt+0xd1f4>
  40ff90:	ldr	x8, [sp, #96]
  40ff94:	ldr	x0, [x8, #48]
  40ff98:	sub	x1, x29, #0x50
  40ff9c:	mov	w2, #0x4                   	// #4
  40ffa0:	bl	416bec <wcrtomb@plt+0x13e3c>
  40ffa4:	ldr	x8, [sp, #96]
  40ffa8:	ldr	x0, [x8, #48]
  40ffac:	ldr	w9, [sp, #108]
  40ffb0:	eor	w2, w9, #0x7
  40ffb4:	sub	x1, x29, #0x50
  40ffb8:	bl	416bec <wcrtomb@plt+0x13e3c>
  40ffbc:	mov	w9, w0
  40ffc0:	ldr	x8, [sp, #96]
  40ffc4:	ldr	x10, [x8, #48]
  40ffc8:	str	w9, [x10, #364]
  40ffcc:	lsl	x10, x0, #32
  40ffd0:	asr	x10, x10, #32
  40ffd4:	ldr	x11, [x8, #48]
  40ffd8:	str	x10, [x11, #400]
  40ffdc:	ldr	w9, [sp, #108]
  40ffe0:	and	w9, w9, #0x2
  40ffe4:	cbz	w9, 410008 <wcrtomb@plt+0xd258>
  40ffe8:	ldr	x8, [sp, #96]
  40ffec:	ldr	x0, [x8, #48]
  40fff0:	sub	x1, x29, #0x50
  40fff4:	mov	w2, #0x2                   	// #2
  40fff8:	bl	416bec <wcrtomb@plt+0x13e3c>
  40fffc:	ldr	x8, [sp, #96]
  410000:	ldr	x9, [x8, #48]
  410004:	str	w0, [x9, #364]
  410008:	ldr	x8, [sp, #96]
  41000c:	ldr	x9, [x8, #48]
  410010:	ldr	w10, [x9, #364]
  410014:	add	w10, w10, #0x1
  410018:	str	w10, [x9, #364]
  41001c:	ldr	x9, [x8, #48]
  410020:	str	wzr, [x9, #360]
  410024:	ldr	x0, [x8, #32]
  410028:	bl	402b40 <free@plt>
  41002c:	ldur	x0, [x29, #-88]
  410030:	bl	402b40 <free@plt>
  410034:	ldur	x0, [x29, #-120]
  410038:	bl	402b40 <free@plt>
  41003c:	ldur	x0, [x29, #-80]
  410040:	bl	402b40 <free@plt>
  410044:	ldr	x28, [sp, #320]
  410048:	ldp	x29, x30, [sp, #304]
  41004c:	add	sp, sp, #0x150
  410050:	ret
  410054:	sub	sp, sp, #0x30
  410058:	mov	w8, #0x1                   	// #1
  41005c:	str	x0, [sp, #40]
  410060:	str	x1, [sp, #32]
  410064:	str	x2, [sp, #24]
  410068:	and	w9, w3, #0x1
  41006c:	strb	w9, [sp, #23]
  410070:	str	x4, [sp, #8]
  410074:	str	x5, [sp]
  410078:	ldr	x10, [sp]
  41007c:	strb	w8, [x10]
  410080:	ldr	x0, [sp, #32]
  410084:	add	sp, sp, #0x30
  410088:	ret
  41008c:	sub	sp, sp, #0x40
  410090:	stp	x29, x30, [sp, #48]
  410094:	add	x29, sp, #0x30
  410098:	stur	x0, [x29, #-8]
  41009c:	ldur	x8, [x29, #-8]
  4100a0:	ldr	x0, [x8]
  4100a4:	bl	402b40 <free@plt>
  4100a8:	ldur	x8, [x29, #-8]
  4100ac:	ldr	x0, [x8, #144]
  4100b0:	bl	402b40 <free@plt>
  4100b4:	ldur	x8, [x29, #-8]
  4100b8:	ldrb	w9, [x8, #1048]
  4100bc:	tbnz	w9, #0, 4100c4 <wcrtomb@plt+0xd314>
  4100c0:	b	4100cc <wcrtomb@plt+0xd31c>
  4100c4:	ldur	x0, [x29, #-8]
  4100c8:	bl	41029c <wcrtomb@plt+0xd4ec>
  4100cc:	ldur	x8, [x29, #-8]
  4100d0:	ldr	x0, [x8, #336]
  4100d4:	bl	402b40 <free@plt>
  4100d8:	ldur	x8, [x29, #-8]
  4100dc:	ldr	x0, [x8, #344]
  4100e0:	bl	402b40 <free@plt>
  4100e4:	stur	xzr, [x29, #-16]
  4100e8:	ldur	x8, [x29, #-16]
  4100ec:	ldur	x9, [x29, #-8]
  4100f0:	ldr	x9, [x9, #304]
  4100f4:	cmp	x8, x9
  4100f8:	b.ge	410150 <wcrtomb@plt+0xd3a0>  // b.tcont
  4100fc:	ldur	x8, [x29, #-8]
  410100:	ldr	x8, [x8, #296]
  410104:	ldur	x9, [x29, #-16]
  410108:	mov	x10, #0x50                  	// #80
  41010c:	mul	x9, x10, x9
  410110:	add	x8, x8, x9
  410114:	ldr	x0, [x8, #8]
  410118:	str	x10, [sp, #8]
  41011c:	bl	402b40 <free@plt>
  410120:	ldur	x8, [x29, #-8]
  410124:	ldr	x8, [x8, #296]
  410128:	ldur	x9, [x29, #-16]
  41012c:	ldr	x10, [sp, #8]
  410130:	mul	x9, x10, x9
  410134:	add	x8, x8, x9
  410138:	ldr	x0, [x8, #48]
  41013c:	bl	402b40 <free@plt>
  410140:	ldur	x8, [x29, #-16]
  410144:	add	x8, x8, #0x1
  410148:	stur	x8, [x29, #-16]
  41014c:	b	4100e8 <wcrtomb@plt+0xd338>
  410150:	ldur	x8, [x29, #-8]
  410154:	ldr	x0, [x8, #296]
  410158:	bl	402b40 <free@plt>
  41015c:	ldur	x8, [x29, #-8]
  410160:	ldr	x8, [x8, #320]
  410164:	cbz	x8, 4101bc <wcrtomb@plt+0xd40c>
  410168:	str	xzr, [sp, #24]
  41016c:	ldr	x8, [sp, #24]
  410170:	ldur	x9, [x29, #-8]
  410174:	ldr	x9, [x9, #152]
  410178:	cmp	x8, x9
  41017c:	b.ge	4101b0 <wcrtomb@plt+0xd400>  // b.tcont
  410180:	ldur	x8, [x29, #-8]
  410184:	ldr	x8, [x8, #320]
  410188:	ldr	x9, [sp, #24]
  41018c:	mov	x10, #0x18                  	// #24
  410190:	mul	x9, x10, x9
  410194:	add	x8, x8, x9
  410198:	ldr	x0, [x8]
  41019c:	bl	402b40 <free@plt>
  4101a0:	ldr	x8, [sp, #24]
  4101a4:	add	x8, x8, #0x1
  4101a8:	str	x8, [sp, #24]
  4101ac:	b	41016c <wcrtomb@plt+0xd3bc>
  4101b0:	ldur	x8, [x29, #-8]
  4101b4:	ldr	x0, [x8, #320]
  4101b8:	bl	402b40 <free@plt>
  4101bc:	ldur	x8, [x29, #-8]
  4101c0:	ldr	x8, [x8, #368]
  4101c4:	cbz	x8, 41026c <wcrtomb@plt+0xd4bc>
  4101c8:	str	xzr, [sp, #16]
  4101cc:	ldr	x8, [sp, #16]
  4101d0:	ldur	x9, [x29, #-8]
  4101d4:	ldr	x9, [x9, #352]
  4101d8:	cmp	x8, x9
  4101dc:	b.ge	410234 <wcrtomb@plt+0xd484>  // b.tcont
  4101e0:	ldur	x8, [x29, #-8]
  4101e4:	ldr	x8, [x8, #368]
  4101e8:	ldr	x9, [sp, #16]
  4101ec:	mov	x10, #0x8                   	// #8
  4101f0:	mul	x9, x10, x9
  4101f4:	add	x8, x8, x9
  4101f8:	ldr	x0, [x8]
  4101fc:	str	x10, [sp]
  410200:	bl	402b40 <free@plt>
  410204:	ldur	x8, [x29, #-8]
  410208:	ldr	x8, [x8, #376]
  41020c:	ldr	x9, [sp, #16]
  410210:	ldr	x10, [sp]
  410214:	mul	x9, x10, x9
  410218:	add	x8, x8, x9
  41021c:	ldr	x0, [x8]
  410220:	bl	402b40 <free@plt>
  410224:	ldr	x8, [sp, #16]
  410228:	add	x8, x8, #0x1
  41022c:	str	x8, [sp, #16]
  410230:	b	4101cc <wcrtomb@plt+0xd41c>
  410234:	ldur	x8, [x29, #-8]
  410238:	ldr	x8, [x8, #368]
  41023c:	mov	x9, #0xfffffffffffffff0    	// #-16
  410240:	add	x0, x8, x9
  410244:	bl	402b40 <free@plt>
  410248:	ldur	x8, [x29, #-8]
  41024c:	ldr	x0, [x8, #376]
  410250:	bl	402b40 <free@plt>
  410254:	ldur	x8, [x29, #-8]
  410258:	ldr	x0, [x8, #392]
  41025c:	bl	402b40 <free@plt>
  410260:	ldur	x8, [x29, #-8]
  410264:	ldr	x0, [x8, #384]
  410268:	bl	402b40 <free@plt>
  41026c:	ldur	x8, [x29, #-8]
  410270:	ldr	x8, [x8, #288]
  410274:	cbz	x8, 410290 <wcrtomb@plt+0xd4e0>
  410278:	ldur	x8, [x29, #-8]
  41027c:	ldr	x0, [x8, #288]
  410280:	bl	41008c <wcrtomb@plt+0xd2dc>
  410284:	ldur	x8, [x29, #-8]
  410288:	ldr	x0, [x8, #288]
  41028c:	bl	402b40 <free@plt>
  410290:	ldp	x29, x30, [sp, #48]
  410294:	add	sp, sp, #0x40
  410298:	ret
  41029c:	sub	sp, sp, #0x20
  4102a0:	stp	x29, x30, [sp, #16]
  4102a4:	add	x29, sp, #0x10
  4102a8:	str	x0, [sp, #8]
  4102ac:	ldr	x8, [sp, #8]
  4102b0:	ldr	x0, [x8, #280]
  4102b4:	bl	402b40 <free@plt>
  4102b8:	ldr	x8, [sp, #8]
  4102bc:	ldr	x0, [x8, #96]
  4102c0:	bl	402b40 <free@plt>
  4102c4:	ldr	x8, [sp, #8]
  4102c8:	ldr	x0, [x8, #408]
  4102cc:	bl	402b40 <free@plt>
  4102d0:	ldr	x8, [sp, #8]
  4102d4:	ldr	x8, [x8, #432]
  4102d8:	cbz	x8, 41033c <wcrtomb@plt+0xd58c>
  4102dc:	mov	x8, #0xffffffffffffffff    	// #-1
  4102e0:	str	x8, [sp]
  4102e4:	ldr	x8, [sp]
  4102e8:	ldr	x9, [sp, #8]
  4102ec:	ldr	x9, [x9, #352]
  4102f0:	cmp	x8, x9
  4102f4:	b.ge	410328 <wcrtomb@plt+0xd578>  // b.tcont
  4102f8:	ldr	x8, [sp, #8]
  4102fc:	ldr	x8, [x8, #432]
  410300:	ldr	x9, [sp]
  410304:	mov	x10, #0x8                   	// #8
  410308:	mul	x9, x10, x9
  41030c:	add	x8, x8, x9
  410310:	ldr	x0, [x8]
  410314:	bl	402b40 <free@plt>
  410318:	ldr	x8, [sp]
  41031c:	add	x8, x8, #0x1
  410320:	str	x8, [sp]
  410324:	b	4102e4 <wcrtomb@plt+0xd534>
  410328:	ldr	x8, [sp, #8]
  41032c:	ldr	x8, [x8, #432]
  410330:	mov	x9, #0xfffffffffffffff0    	// #-16
  410334:	add	x0, x8, x9
  410338:	bl	402b40 <free@plt>
  41033c:	ldp	x29, x30, [sp, #16]
  410340:	add	sp, sp, #0x20
  410344:	ret
  410348:	sub	sp, sp, #0x120
  41034c:	stp	x29, x30, [sp, #256]
  410350:	str	x28, [sp, #272]
  410354:	add	x29, sp, #0x100
  410358:	mov	x8, xzr
  41035c:	adrp	x9, 438000 <_obstack_memory_used@@Base+0x19e64>
  410360:	add	x9, x9, #0x301
  410364:	mov	w10, #0x0                   	// #0
  410368:	mov	x11, #0x1                   	// #1
  41036c:	mov	w12, #0x1                   	// #1
  410370:	stur	x0, [x29, #-8]
  410374:	stur	x8, [x29, #-16]
  410378:	stur	x9, [x29, #-24]
  41037c:	sturb	w10, [x29, #-25]
  410380:	sturb	w10, [x29, #-26]
  410384:	sturb	w10, [x29, #-27]
  410388:	sturb	w10, [x29, #-28]
  41038c:	sturb	w10, [x29, #-29]
  410390:	ldur	x8, [x29, #-8]
  410394:	ldrb	w10, [x8, #457]
  410398:	and	w10, w10, #0x1
  41039c:	ldur	x8, [x29, #-8]
  4103a0:	ldrb	w13, [x8, #1048]
  4103a4:	eor	w13, w13, w12
  4103a8:	and	w13, w13, #0x1
  4103ac:	tst	w10, w13
  4103b0:	cset	w10, ne  // ne = any
  4103b4:	and	w10, w10, w12
  4103b8:	sturb	w10, [x29, #-30]
  4103bc:	stur	x11, [x29, #-40]
  4103c0:	ldur	x8, [x29, #-40]
  4103c4:	add	x8, x8, #0x1
  4103c8:	ldur	x9, [x29, #-8]
  4103cc:	ldr	x9, [x9, #152]
  4103d0:	cmp	x8, x9
  4103d4:	b.ge	410e84 <wcrtomb@plt+0xe0d4>  // b.tcont
  4103d8:	ldur	x8, [x29, #-8]
  4103dc:	ldr	x8, [x8, #144]
  4103e0:	ldur	x9, [x29, #-40]
  4103e4:	ldr	x8, [x8, x9, lsl #3]
  4103e8:	stur	x8, [x29, #-48]
  4103ec:	ldur	x8, [x29, #-48]
  4103f0:	mov	x9, #0xffffffffffffffff    	// #-1
  4103f4:	cmp	x8, x9
  4103f8:	str	x8, [sp, #40]
  4103fc:	b.eq	4107e8 <wcrtomb@plt+0xda38>  // b.none
  410400:	b	410404 <wcrtomb@plt+0xd654>
  410404:	ldr	x8, [sp, #40]
  410408:	cbz	x8, 410b14 <wcrtomb@plt+0xdd64>
  41040c:	b	410410 <wcrtomb@plt+0xd660>
  410410:	ldr	x8, [sp, #40]
  410414:	cmp	x8, #0x100
  410418:	b.eq	410524 <wcrtomb@plt+0xd774>  // b.none
  41041c:	b	410420 <wcrtomb@plt+0xd670>
  410420:	ldr	x8, [sp, #40]
  410424:	subs	x9, x8, #0x101
  410428:	cmp	x9, #0x1
  41042c:	b.ls	410538 <wcrtomb@plt+0xd788>  // b.plast
  410430:	b	410434 <wcrtomb@plt+0xd684>
  410434:	ldr	x8, [sp, #40]
  410438:	cmp	x8, #0x103
  41043c:	b.eq	4107d4 <wcrtomb@plt+0xda24>  // b.none
  410440:	b	410444 <wcrtomb@plt+0xd694>
  410444:	ldr	x8, [sp, #40]
  410448:	cmp	x8, #0x105
  41044c:	b.eq	410928 <wcrtomb@plt+0xdb78>  // b.none
  410450:	b	410454 <wcrtomb@plt+0xd6a4>
  410454:	ldr	x8, [sp, #40]
  410458:	cmp	x8, #0x106
  41045c:	b.eq	410544 <wcrtomb@plt+0xd794>  // b.none
  410460:	b	410464 <wcrtomb@plt+0xd6b4>
  410464:	ldr	x8, [sp, #40]
  410468:	subs	x9, x8, #0x107
  41046c:	cmp	x9, #0x1
  410470:	b.ls	410504 <wcrtomb@plt+0xd754>  // b.plast
  410474:	b	410478 <wcrtomb@plt+0xd6c8>
  410478:	ldr	x8, [sp, #40]
  41047c:	cmp	x8, #0x10a
  410480:	b.eq	410524 <wcrtomb@plt+0xd774>  // b.none
  410484:	b	410488 <wcrtomb@plt+0xd6d8>
  410488:	ldr	x8, [sp, #40]
  41048c:	cmp	x8, #0x10c
  410490:	b.eq	4104bc <wcrtomb@plt+0xd70c>  // b.none
  410494:	b	410498 <wcrtomb@plt+0xd6e8>
  410498:	ldr	x8, [sp, #40]
  41049c:	cmp	x8, #0x10d
  4104a0:	b.eq	4104e0 <wcrtomb@plt+0xd730>  // b.none
  4104a4:	b	4104a8 <wcrtomb@plt+0xd6f8>
  4104a8:	ldr	x8, [sp, #40]
  4104ac:	subs	x9, x8, #0x10e
  4104b0:	cmp	x9, #0x5
  4104b4:	b.ls	410524 <wcrtomb@plt+0xd774>  // b.plast
  4104b8:	b	410b18 <wcrtomb@plt+0xdd68>
  4104bc:	ldur	x0, [x29, #-16]
  4104c0:	mov	x1, #0x2                   	// #2
  4104c4:	bl	410f30 <wcrtomb@plt+0xe180>
  4104c8:	stur	x0, [x29, #-16]
  4104cc:	ldur	x8, [x29, #-16]
  4104d0:	mov	w9, #0x1                   	// #1
  4104d4:	strb	w9, [x8, #32]
  4104d8:	sturb	w9, [x29, #-28]
  4104dc:	b	410e74 <wcrtomb@plt+0xe0c4>
  4104e0:	ldur	x0, [x29, #-16]
  4104e4:	mov	x1, #0x2                   	// #2
  4104e8:	bl	410f30 <wcrtomb@plt+0xe180>
  4104ec:	stur	x0, [x29, #-16]
  4104f0:	ldur	x8, [x29, #-16]
  4104f4:	mov	w9, #0x1                   	// #1
  4104f8:	strb	w9, [x8, #33]
  4104fc:	sturb	w9, [x29, #-29]
  410500:	b	410e74 <wcrtomb@plt+0xe0c4>
  410504:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  410508:	add	x0, x0, #0x1d9
  41050c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  410510:	add	x1, x1, #0x206
  410514:	mov	w2, #0xff6                 	// #4086
  410518:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41051c:	add	x3, x3, #0x210
  410520:	bl	402cf0 <__assert_fail@plt>
  410524:	ldur	x0, [x29, #-16]
  410528:	mov	x1, #0x2                   	// #2
  41052c:	bl	410f30 <wcrtomb@plt+0xe180>
  410530:	stur	x0, [x29, #-16]
  410534:	b	410e74 <wcrtomb@plt+0xe0c4>
  410538:	ldur	x0, [x29, #-16]
  41053c:	bl	410fd4 <wcrtomb@plt+0xe224>
  410540:	b	410e74 <wcrtomb@plt+0xe0c4>
  410544:	ldur	x8, [x29, #-16]
  410548:	stur	x8, [x29, #-64]
  41054c:	ldur	x8, [x29, #-16]
  410550:	ldr	x8, [x8, #40]
  410554:	stur	x8, [x29, #-16]
  410558:	stur	x8, [x29, #-72]
  41055c:	ldur	x8, [x29, #-72]
  410560:	ldr	x0, [x8, #24]
  410564:	ldur	x8, [x29, #-64]
  410568:	ldr	x1, [x8, #24]
  41056c:	bl	411054 <wcrtomb@plt+0xe2a4>
  410570:	tbnz	w0, #0, 410578 <wcrtomb@plt+0xd7c8>
  410574:	b	4105d0 <wcrtomb@plt+0xd820>
  410578:	ldur	x8, [x29, #-64]
  41057c:	ldrb	w9, [x8, #32]
  410580:	mov	w10, #0x1                   	// #1
  410584:	and	w9, w9, #0x1
  410588:	ldur	x8, [x29, #-72]
  41058c:	ldrb	w11, [x8, #32]
  410590:	and	w11, w11, #0x1
  410594:	tst	w11, w9
  410598:	cset	w9, ne  // ne = any
  41059c:	and	w9, w9, w10
  4105a0:	strb	w9, [x8, #32]
  4105a4:	ldur	x8, [x29, #-64]
  4105a8:	ldrb	w9, [x8, #33]
  4105ac:	and	w9, w9, #0x1
  4105b0:	ldur	x8, [x29, #-72]
  4105b4:	ldrb	w11, [x8, #33]
  4105b8:	and	w11, w11, #0x1
  4105bc:	tst	w11, w9
  4105c0:	cset	w9, ne  // ne = any
  4105c4:	and	w9, w9, w10
  4105c8:	strb	w9, [x8, #33]
  4105cc:	b	4105f0 <wcrtomb@plt+0xd840>
  4105d0:	ldur	x8, [x29, #-72]
  4105d4:	ldr	x8, [x8, #24]
  4105d8:	mov	w9, #0x0                   	// #0
  4105dc:	strb	w9, [x8]
  4105e0:	ldur	x8, [x29, #-72]
  4105e4:	strb	w9, [x8, #32]
  4105e8:	ldur	x8, [x29, #-72]
  4105ec:	strb	w9, [x8, #33]
  4105f0:	stur	xzr, [x29, #-112]
  4105f4:	ldur	x8, [x29, #-72]
  4105f8:	ldr	x8, [x8, #8]
  4105fc:	ldur	x9, [x29, #-112]
  410600:	ldrb	w10, [x8, x9]
  410604:	mov	w11, #0x0                   	// #0
  410608:	str	w11, [sp, #36]
  41060c:	cbz	w10, 41063c <wcrtomb@plt+0xd88c>
  410610:	ldur	x8, [x29, #-72]
  410614:	ldr	x8, [x8, #8]
  410618:	ldur	x9, [x29, #-112]
  41061c:	ldrb	w10, [x8, x9]
  410620:	ldur	x8, [x29, #-64]
  410624:	ldr	x8, [x8, #8]
  410628:	ldur	x9, [x29, #-112]
  41062c:	ldrb	w11, [x8, x9]
  410630:	cmp	w10, w11
  410634:	cset	w10, eq  // eq = none
  410638:	str	w10, [sp, #36]
  41063c:	ldr	w8, [sp, #36]
  410640:	tbnz	w8, #0, 410648 <wcrtomb@plt+0xd898>
  410644:	b	410658 <wcrtomb@plt+0xd8a8>
  410648:	ldur	x8, [x29, #-112]
  41064c:	add	x8, x8, #0x1
  410650:	stur	x8, [x29, #-112]
  410654:	b	4105f4 <wcrtomb@plt+0xd844>
  410658:	ldur	x8, [x29, #-72]
  41065c:	ldr	x8, [x8, #8]
  410660:	ldur	x9, [x29, #-112]
  410664:	add	x8, x8, x9
  410668:	mov	w10, #0x0                   	// #0
  41066c:	strb	w10, [x8]
  410670:	ldur	x8, [x29, #-72]
  410674:	ldr	x0, [x8, #16]
  410678:	bl	4026f0 <strlen@plt>
  41067c:	stur	x0, [x29, #-88]
  410680:	ldur	x8, [x29, #-64]
  410684:	ldr	x0, [x8, #16]
  410688:	bl	4026f0 <strlen@plt>
  41068c:	stur	x0, [x29, #-96]
  410690:	ldur	x8, [x29, #-88]
  410694:	stur	x8, [x29, #-104]
  410698:	ldur	x8, [x29, #-104]
  41069c:	ldur	x9, [x29, #-96]
  4106a0:	cmp	x8, x9
  4106a4:	b.le	4106b0 <wcrtomb@plt+0xd900>
  4106a8:	ldur	x8, [x29, #-96]
  4106ac:	stur	x8, [x29, #-104]
  4106b0:	stur	xzr, [x29, #-112]
  4106b4:	ldur	x8, [x29, #-112]
  4106b8:	ldur	x9, [x29, #-104]
  4106bc:	cmp	x8, x9
  4106c0:	b.ge	410718 <wcrtomb@plt+0xd968>  // b.tcont
  4106c4:	ldur	x8, [x29, #-72]
  4106c8:	ldr	x8, [x8, #16]
  4106cc:	ldur	x9, [x29, #-88]
  4106d0:	ldur	x10, [x29, #-112]
  4106d4:	subs	x9, x9, x10
  4106d8:	subs	x9, x9, #0x1
  4106dc:	ldrb	w11, [x8, x9]
  4106e0:	ldur	x8, [x29, #-64]
  4106e4:	ldr	x8, [x8, #16]
  4106e8:	ldur	x9, [x29, #-96]
  4106ec:	ldur	x10, [x29, #-112]
  4106f0:	subs	x9, x9, x10
  4106f4:	subs	x9, x9, #0x1
  4106f8:	ldrb	w12, [x8, x9]
  4106fc:	cmp	w11, w12
  410700:	b.eq	410708 <wcrtomb@plt+0xd958>  // b.none
  410704:	b	410718 <wcrtomb@plt+0xd968>
  410708:	ldur	x8, [x29, #-112]
  41070c:	add	x8, x8, #0x1
  410710:	stur	x8, [x29, #-112]
  410714:	b	4106b4 <wcrtomb@plt+0xd904>
  410718:	stur	xzr, [x29, #-80]
  41071c:	ldur	x8, [x29, #-80]
  410720:	ldur	x9, [x29, #-112]
  410724:	cmp	x8, x9
  410728:	b.ge	410774 <wcrtomb@plt+0xd9c4>  // b.tcont
  41072c:	ldur	x8, [x29, #-72]
  410730:	ldr	x8, [x8, #16]
  410734:	ldur	x9, [x29, #-88]
  410738:	ldur	x10, [x29, #-112]
  41073c:	subs	x9, x9, x10
  410740:	ldur	x10, [x29, #-80]
  410744:	add	x9, x9, x10
  410748:	add	x8, x8, x9
  41074c:	ldrb	w11, [x8]
  410750:	ldur	x8, [x29, #-72]
  410754:	ldr	x8, [x8, #16]
  410758:	ldur	x9, [x29, #-80]
  41075c:	add	x8, x8, x9
  410760:	strb	w11, [x8]
  410764:	ldur	x8, [x29, #-80]
  410768:	add	x8, x8, #0x1
  41076c:	stur	x8, [x29, #-80]
  410770:	b	41071c <wcrtomb@plt+0xd96c>
  410774:	ldur	x8, [x29, #-72]
  410778:	ldr	x8, [x8, #16]
  41077c:	ldur	x9, [x29, #-80]
  410780:	add	x8, x8, x9
  410784:	mov	w10, #0x0                   	// #0
  410788:	strb	w10, [x8]
  41078c:	ldur	x8, [x29, #-72]
  410790:	ldr	x0, [x8]
  410794:	ldur	x8, [x29, #-64]
  410798:	ldr	x1, [x8]
  41079c:	bl	41108c <wcrtomb@plt+0xe2dc>
  4107a0:	stur	x0, [x29, #-56]
  4107a4:	ldur	x8, [x29, #-72]
  4107a8:	ldr	x0, [x8]
  4107ac:	bl	411174 <wcrtomb@plt+0xe3c4>
  4107b0:	ldur	x8, [x29, #-72]
  4107b4:	ldr	x0, [x8]
  4107b8:	bl	402b40 <free@plt>
  4107bc:	ldur	x8, [x29, #-56]
  4107c0:	ldur	x9, [x29, #-72]
  4107c4:	str	x8, [x9]
  4107c8:	ldur	x0, [x29, #-64]
  4107cc:	bl	4111b4 <wcrtomb@plt+0xe404>
  4107d0:	b	410e74 <wcrtomb@plt+0xe0c4>
  4107d4:	ldur	x8, [x29, #-16]
  4107d8:	ldr	x8, [x8, #24]
  4107dc:	mov	w9, #0x0                   	// #0
  4107e0:	strb	w9, [x8]
  4107e4:	b	410e74 <wcrtomb@plt+0xe0c4>
  4107e8:	ldur	x8, [x29, #-16]
  4107ec:	ldr	x8, [x8, #40]
  4107f0:	cbnz	x8, 4107f8 <wcrtomb@plt+0xda48>
  4107f4:	b	410818 <wcrtomb@plt+0xda68>
  4107f8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4107fc:	add	x0, x0, #0x23c
  410800:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  410804:	add	x1, x1, #0x206
  410808:	mov	w2, #0x1039                	// #4153
  41080c:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x1ae64>
  410810:	add	x3, x3, #0x210
  410814:	bl	402cf0 <__assert_fail@plt>
  410818:	stur	xzr, [x29, #-120]
  41081c:	ldur	x8, [x29, #-16]
  410820:	ldr	x8, [x8]
  410824:	ldur	x9, [x29, #-120]
  410828:	mov	x10, #0x8                   	// #8
  41082c:	mul	x9, x10, x9
  410830:	add	x8, x8, x9
  410834:	ldr	x8, [x8]
  410838:	cbz	x8, 4108a8 <wcrtomb@plt+0xdaf8>
  41083c:	ldur	x8, [x29, #-16]
  410840:	ldr	x8, [x8]
  410844:	ldur	x9, [x29, #-120]
  410848:	mov	x10, #0x8                   	// #8
  41084c:	mul	x9, x10, x9
  410850:	add	x8, x8, x9
  410854:	ldr	x0, [x8]
  410858:	bl	4026f0 <strlen@plt>
  41085c:	ldur	x8, [x29, #-24]
  410860:	str	x0, [sp, #24]
  410864:	mov	x0, x8
  410868:	bl	4026f0 <strlen@plt>
  41086c:	ldr	x8, [sp, #24]
  410870:	cmp	x8, x0
  410874:	b.ls	410898 <wcrtomb@plt+0xdae8>  // b.plast
  410878:	ldur	x8, [x29, #-16]
  41087c:	ldr	x8, [x8]
  410880:	ldur	x9, [x29, #-120]
  410884:	mov	x10, #0x8                   	// #8
  410888:	mul	x9, x10, x9
  41088c:	add	x8, x8, x9
  410890:	ldr	x8, [x8]
  410894:	stur	x8, [x29, #-24]
  410898:	ldur	x8, [x29, #-120]
  41089c:	add	x8, x8, #0x1
  4108a0:	stur	x8, [x29, #-120]
  4108a4:	b	41081c <wcrtomb@plt+0xda6c>
  4108a8:	ldur	x0, [x29, #-24]
  4108ac:	ldur	x8, [x29, #-16]
  4108b0:	ldr	x1, [x8, #24]
  4108b4:	bl	411054 <wcrtomb@plt+0xe2a4>
  4108b8:	tbnz	w0, #0, 4108c0 <wcrtomb@plt+0xdb10>
  4108bc:	b	410924 <wcrtomb@plt+0xdb74>
  4108c0:	ldurb	w8, [x29, #-28]
  4108c4:	tbnz	w8, #0, 4108cc <wcrtomb@plt+0xdb1c>
  4108c8:	b	4108dc <wcrtomb@plt+0xdb2c>
  4108cc:	ldur	x8, [x29, #-16]
  4108d0:	ldrb	w9, [x8, #32]
  4108d4:	tbnz	w9, #0, 4108dc <wcrtomb@plt+0xdb2c>
  4108d8:	b	410900 <wcrtomb@plt+0xdb50>
  4108dc:	ldurb	w8, [x29, #-29]
  4108e0:	tbnz	w8, #0, 4108e8 <wcrtomb@plt+0xdb38>
  4108e4:	b	4108f8 <wcrtomb@plt+0xdb48>
  4108e8:	ldur	x8, [x29, #-16]
  4108ec:	ldrb	w9, [x8, #33]
  4108f0:	tbnz	w9, #0, 4108f8 <wcrtomb@plt+0xdb48>
  4108f4:	b	410900 <wcrtomb@plt+0xdb50>
  4108f8:	mov	w8, #0x1                   	// #1
  4108fc:	sturb	w8, [x29, #-25]
  410900:	ldur	x8, [x29, #-16]
  410904:	ldrb	w9, [x8, #32]
  410908:	mov	w10, #0x1                   	// #1
  41090c:	and	w9, w9, w10
  410910:	sturb	w9, [x29, #-26]
  410914:	ldur	x8, [x29, #-16]
  410918:	ldrb	w9, [x8, #33]
  41091c:	and	w9, w9, #0x1
  410920:	sturb	w9, [x29, #-27]
  410924:	b	410e84 <wcrtomb@plt+0xe0d4>
  410928:	ldur	x8, [x29, #-16]
  41092c:	str	x8, [sp, #128]
  410930:	ldur	x8, [x29, #-16]
  410934:	ldr	x8, [x8, #40]
  410938:	stur	x8, [x29, #-16]
  41093c:	str	x8, [sp, #120]
  410940:	ldr	x8, [sp, #120]
  410944:	ldr	x0, [x8]
  410948:	ldr	x8, [sp, #128]
  41094c:	ldr	x1, [x8]
  410950:	bl	411214 <wcrtomb@plt+0xe464>
  410954:	ldr	x8, [sp, #120]
  410958:	str	x0, [x8]
  41095c:	ldr	x8, [sp, #120]
  410960:	ldr	x8, [x8, #16]
  410964:	ldrb	w9, [x8]
  410968:	cbz	w9, 410a0c <wcrtomb@plt+0xdc5c>
  41096c:	ldr	x8, [sp, #128]
  410970:	ldr	x8, [x8, #8]
  410974:	ldrb	w9, [x8]
  410978:	cbz	w9, 410a0c <wcrtomb@plt+0xdc5c>
  41097c:	ldr	x8, [sp, #120]
  410980:	ldr	x0, [x8, #16]
  410984:	bl	4026f0 <strlen@plt>
  410988:	str	x0, [sp, #112]
  41098c:	ldr	x8, [sp, #128]
  410990:	ldr	x0, [x8, #8]
  410994:	bl	4026f0 <strlen@plt>
  410998:	str	x0, [sp, #104]
  41099c:	ldr	x8, [sp, #112]
  4109a0:	ldr	x9, [sp, #104]
  4109a4:	add	x0, x8, x9
  4109a8:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  4109ac:	str	x0, [sp, #96]
  4109b0:	ldr	x0, [sp, #96]
  4109b4:	ldr	x8, [sp, #120]
  4109b8:	ldr	x1, [x8, #16]
  4109bc:	ldr	x2, [sp, #112]
  4109c0:	bl	4026a0 <memcpy@plt>
  4109c4:	ldr	x8, [sp, #96]
  4109c8:	ldr	x9, [sp, #112]
  4109cc:	add	x0, x8, x9
  4109d0:	ldr	x8, [sp, #128]
  4109d4:	ldr	x1, [x8, #8]
  4109d8:	ldr	x2, [sp, #104]
  4109dc:	bl	4026a0 <memcpy@plt>
  4109e0:	ldr	x8, [sp, #120]
  4109e4:	ldr	x0, [x8]
  4109e8:	ldr	x1, [sp, #96]
  4109ec:	ldr	x8, [sp, #112]
  4109f0:	ldr	x9, [sp, #104]
  4109f4:	add	x2, x8, x9
  4109f8:	bl	411294 <wcrtomb@plt+0xe4e4>
  4109fc:	ldr	x8, [sp, #120]
  410a00:	str	x0, [x8]
  410a04:	ldr	x0, [sp, #96]
  410a08:	bl	402b40 <free@plt>
  410a0c:	ldr	x8, [sp, #120]
  410a10:	ldr	x8, [x8, #24]
  410a14:	ldrb	w9, [x8]
  410a18:	cbz	w9, 410a38 <wcrtomb@plt+0xdc88>
  410a1c:	ldr	x8, [sp, #120]
  410a20:	ldr	x0, [x8, #8]
  410a24:	ldr	x8, [sp, #128]
  410a28:	ldr	x1, [x8, #8]
  410a2c:	bl	411490 <wcrtomb@plt+0xe6e0>
  410a30:	ldr	x8, [sp, #120]
  410a34:	str	x0, [x8, #8]
  410a38:	ldr	x8, [sp, #128]
  410a3c:	ldr	x8, [x8, #24]
  410a40:	ldrb	w9, [x8]
  410a44:	cbnz	w9, 410a58 <wcrtomb@plt+0xdca8>
  410a48:	ldr	x8, [sp, #120]
  410a4c:	ldr	x8, [x8, #16]
  410a50:	mov	w9, #0x0                   	// #0
  410a54:	strb	w9, [x8]
  410a58:	ldr	x8, [sp, #120]
  410a5c:	ldr	x0, [x8, #16]
  410a60:	ldr	x8, [sp, #128]
  410a64:	ldr	x1, [x8, #16]
  410a68:	bl	411490 <wcrtomb@plt+0xe6e0>
  410a6c:	ldr	x8, [sp, #120]
  410a70:	str	x0, [x8, #16]
  410a74:	ldr	x8, [sp, #120]
  410a78:	ldr	x8, [x8, #24]
  410a7c:	ldrb	w9, [x8]
  410a80:	cbnz	w9, 410a94 <wcrtomb@plt+0xdce4>
  410a84:	ldr	x8, [sp, #120]
  410a88:	ldrb	w9, [x8, #32]
  410a8c:	tbnz	w9, #0, 410a94 <wcrtomb@plt+0xdce4>
  410a90:	b	410ae8 <wcrtomb@plt+0xdd38>
  410a94:	ldr	x8, [sp, #128]
  410a98:	ldr	x8, [x8, #24]
  410a9c:	ldrb	w9, [x8]
  410aa0:	cbnz	w9, 410ab4 <wcrtomb@plt+0xdd04>
  410aa4:	ldr	x8, [sp, #128]
  410aa8:	ldrb	w9, [x8, #33]
  410aac:	tbnz	w9, #0, 410ab4 <wcrtomb@plt+0xdd04>
  410ab0:	b	410ae8 <wcrtomb@plt+0xdd38>
  410ab4:	ldr	x8, [sp, #120]
  410ab8:	ldr	x0, [x8, #24]
  410abc:	ldr	x8, [sp, #128]
  410ac0:	ldr	x1, [x8, #24]
  410ac4:	bl	411490 <wcrtomb@plt+0xe6e0>
  410ac8:	ldr	x8, [sp, #120]
  410acc:	str	x0, [x8, #24]
  410ad0:	ldr	x8, [sp, #128]
  410ad4:	ldrb	w9, [x8, #33]
  410ad8:	ldr	x8, [sp, #120]
  410adc:	and	w9, w9, #0x1
  410ae0:	strb	w9, [x8, #33]
  410ae4:	b	410b08 <wcrtomb@plt+0xdd58>
  410ae8:	ldr	x8, [sp, #120]
  410aec:	ldr	x8, [x8, #24]
  410af0:	mov	w9, #0x0                   	// #0
  410af4:	strb	w9, [x8]
  410af8:	ldr	x8, [sp, #120]
  410afc:	strb	w9, [x8, #32]
  410b00:	ldr	x8, [sp, #120]
  410b04:	strb	w9, [x8, #33]
  410b08:	ldr	x0, [sp, #128]
  410b0c:	bl	4111b4 <wcrtomb@plt+0xe404>
  410b10:	b	410e74 <wcrtomb@plt+0xe0c4>
  410b14:	b	410e84 <wcrtomb@plt+0xe0d4>
  410b18:	ldur	x8, [x29, #-48]
  410b1c:	mov	x9, #0x114                 	// #276
  410b20:	cmp	x9, x8
  410b24:	b.gt	410c28 <wcrtomb@plt+0xde78>
  410b28:	ldur	x8, [x29, #-8]
  410b2c:	ldr	x8, [x8]
  410b30:	ldur	x9, [x29, #-48]
  410b34:	subs	x9, x9, #0x114
  410b38:	mov	x10, #0x20                  	// #32
  410b3c:	mul	x9, x10, x9
  410b40:	add	x8, x8, x9
  410b44:	str	x8, [sp, #88]
  410b48:	str	wzr, [sp, #84]
  410b4c:	ldr	w8, [sp, #84]
  410b50:	cmp	w8, #0x100
  410b54:	b.ge	410b80 <wcrtomb@plt+0xddd0>  // b.tcont
  410b58:	ldr	w0, [sp, #84]
  410b5c:	ldr	x1, [sp, #88]
  410b60:	bl	411520 <wcrtomb@plt+0xe770>
  410b64:	tbnz	w0, #0, 410b6c <wcrtomb@plt+0xddbc>
  410b68:	b	410b70 <wcrtomb@plt+0xddc0>
  410b6c:	b	410b80 <wcrtomb@plt+0xddd0>
  410b70:	ldr	w8, [sp, #84]
  410b74:	add	w8, w8, #0x1
  410b78:	str	w8, [sp, #84]
  410b7c:	b	410b4c <wcrtomb@plt+0xdd9c>
  410b80:	ldr	w8, [sp, #84]
  410b84:	cmp	w8, #0x100
  410b88:	b.lt	410ba0 <wcrtomb@plt+0xddf0>  // b.tstop
  410b8c:	ldur	x0, [x29, #-16]
  410b90:	mov	x1, #0x2                   	// #2
  410b94:	bl	410f30 <wcrtomb@plt+0xe180>
  410b98:	stur	x0, [x29, #-16]
  410b9c:	b	410e74 <wcrtomb@plt+0xe0c4>
  410ba0:	ldrsw	x8, [sp, #84]
  410ba4:	stur	x8, [x29, #-48]
  410ba8:	ldr	w8, [sp, #84]
  410bac:	add	w8, w8, #0x1
  410bb0:	str	w8, [sp, #84]
  410bb4:	cmp	w8, #0x100
  410bb8:	b.ge	410c08 <wcrtomb@plt+0xde58>  // b.tcont
  410bbc:	ldr	w0, [sp, #84]
  410bc0:	ldr	x1, [sp, #88]
  410bc4:	bl	411520 <wcrtomb@plt+0xe770>
  410bc8:	tbnz	w0, #0, 410bd0 <wcrtomb@plt+0xde20>
  410bcc:	b	410c04 <wcrtomb@plt+0xde54>
  410bd0:	ldurb	w8, [x29, #-30]
  410bd4:	tbnz	w8, #0, 410bdc <wcrtomb@plt+0xde2c>
  410bd8:	b	410c00 <wcrtomb@plt+0xde50>
  410bdc:	ldr	w0, [sp, #84]
  410be0:	bl	4028a0 <toupper@plt>
  410be4:	ldur	x8, [x29, #-48]
  410be8:	str	w0, [sp, #20]
  410bec:	mov	w0, w8
  410bf0:	bl	4028a0 <toupper@plt>
  410bf4:	ldr	w8, [sp, #20]
  410bf8:	cmp	w8, w0
  410bfc:	b.eq	410c04 <wcrtomb@plt+0xde54>  // b.none
  410c00:	b	410c08 <wcrtomb@plt+0xde58>
  410c04:	b	410ba8 <wcrtomb@plt+0xddf8>
  410c08:	ldr	w8, [sp, #84]
  410c0c:	cmp	w8, #0x100
  410c10:	b.ge	410c28 <wcrtomb@plt+0xde78>  // b.tcont
  410c14:	ldur	x0, [x29, #-16]
  410c18:	mov	x1, #0x2                   	// #2
  410c1c:	bl	410f30 <wcrtomb@plt+0xe180>
  410c20:	stur	x0, [x29, #-16]
  410c24:	b	410e74 <wcrtomb@plt+0xe0c4>
  410c28:	ldur	x8, [x29, #-40]
  410c2c:	add	x8, x8, #0x2
  410c30:	str	x8, [sp, #72]
  410c34:	ldur	x8, [x29, #-8]
  410c38:	ldr	x8, [x8, #144]
  410c3c:	ldur	x9, [x29, #-40]
  410c40:	add	x9, x9, #0x1
  410c44:	ldr	x8, [x8, x9, lsl #3]
  410c48:	cmp	x8, #0x105
  410c4c:	b.ne	410ce0 <wcrtomb@plt+0xdf30>  // b.any
  410c50:	ldr	x8, [sp, #72]
  410c54:	ldur	x9, [x29, #-8]
  410c58:	ldr	x9, [x9, #152]
  410c5c:	subs	x9, x9, #0x1
  410c60:	cmp	x8, x9
  410c64:	b.ge	410ce0 <wcrtomb@plt+0xdf30>  // b.tcont
  410c68:	ldr	x8, [sp, #72]
  410c6c:	ldur	x9, [x29, #-40]
  410c70:	cmp	x8, x9
  410c74:	b.eq	410cb0 <wcrtomb@plt+0xdf00>  // b.none
  410c78:	ldur	x8, [x29, #-8]
  410c7c:	ldr	x8, [x8, #144]
  410c80:	ldr	x9, [sp, #72]
  410c84:	ldr	x8, [x8, x9, lsl #3]
  410c88:	cmp	x8, #0x0
  410c8c:	cset	w10, le
  410c90:	tbnz	w10, #0, 410ccc <wcrtomb@plt+0xdf1c>
  410c94:	ldur	x8, [x29, #-8]
  410c98:	ldr	x8, [x8, #144]
  410c9c:	ldr	x9, [sp, #72]
  410ca0:	ldr	x8, [x8, x9, lsl #3]
  410ca4:	mov	x9, #0x100                 	// #256
  410ca8:	cmp	x9, x8
  410cac:	b.le	410ccc <wcrtomb@plt+0xdf1c>
  410cb0:	ldur	x8, [x29, #-8]
  410cb4:	ldr	x8, [x8, #144]
  410cb8:	ldr	x9, [sp, #72]
  410cbc:	add	x9, x9, #0x1
  410cc0:	ldr	x8, [x8, x9, lsl #3]
  410cc4:	cmp	x8, #0x105
  410cc8:	b.eq	410cd0 <wcrtomb@plt+0xdf20>  // b.none
  410ccc:	b	410ce0 <wcrtomb@plt+0xdf30>
  410cd0:	ldr	x8, [sp, #72]
  410cd4:	add	x8, x8, #0x2
  410cd8:	str	x8, [sp, #72]
  410cdc:	b	410c50 <wcrtomb@plt+0xdea0>
  410ce0:	ldur	x0, [x29, #-16]
  410ce4:	ldr	x8, [sp, #72]
  410ce8:	ldur	x9, [x29, #-40]
  410cec:	subs	x8, x8, x9
  410cf0:	asr	x8, x8, #1
  410cf4:	add	x1, x8, #0x1
  410cf8:	bl	410f30 <wcrtomb@plt+0xe180>
  410cfc:	stur	x0, [x29, #-16]
  410d00:	ldurb	w10, [x29, #-30]
  410d04:	tbnz	w10, #0, 410d0c <wcrtomb@plt+0xdf5c>
  410d08:	b	410d28 <wcrtomb@plt+0xdf78>
  410d0c:	ldur	x8, [x29, #-48]
  410d10:	mov	w0, w8
  410d14:	bl	4028a0 <toupper@plt>
  410d18:	mov	w1, w0
  410d1c:	sxtw	x9, w1
  410d20:	str	x9, [sp, #8]
  410d24:	b	410d30 <wcrtomb@plt+0xdf80>
  410d28:	ldur	x8, [x29, #-48]
  410d2c:	str	x8, [sp, #8]
  410d30:	ldr	x8, [sp, #8]
  410d34:	ldur	x9, [x29, #-16]
  410d38:	ldr	x9, [x9, #16]
  410d3c:	strb	w8, [x9]
  410d40:	ldur	x9, [x29, #-16]
  410d44:	ldr	x9, [x9, #8]
  410d48:	strb	w8, [x9]
  410d4c:	ldur	x9, [x29, #-16]
  410d50:	ldr	x9, [x9, #24]
  410d54:	strb	w8, [x9]
  410d58:	mov	x9, #0x1                   	// #1
  410d5c:	str	x9, [sp, #64]
  410d60:	ldur	x8, [x29, #-40]
  410d64:	add	x8, x8, #0x2
  410d68:	ldr	x9, [sp, #72]
  410d6c:	cmp	x8, x9
  410d70:	b.ge	410e14 <wcrtomb@plt+0xe064>  // b.tcont
  410d74:	ldur	x8, [x29, #-40]
  410d78:	add	x8, x8, #0x2
  410d7c:	stur	x8, [x29, #-40]
  410d80:	ldur	x8, [x29, #-8]
  410d84:	ldr	x8, [x8, #144]
  410d88:	ldur	x9, [x29, #-40]
  410d8c:	ldr	x8, [x8, x9, lsl #3]
  410d90:	stur	x8, [x29, #-48]
  410d94:	ldurb	w10, [x29, #-30]
  410d98:	tbnz	w10, #0, 410da0 <wcrtomb@plt+0xdff0>
  410d9c:	b	410dbc <wcrtomb@plt+0xe00c>
  410da0:	ldur	x8, [x29, #-48]
  410da4:	mov	w0, w8
  410da8:	bl	4028a0 <toupper@plt>
  410dac:	mov	w1, w0
  410db0:	sxtw	x9, w1
  410db4:	str	x9, [sp]
  410db8:	b	410dc4 <wcrtomb@plt+0xe014>
  410dbc:	ldur	x8, [x29, #-48]
  410dc0:	str	x8, [sp]
  410dc4:	ldr	x8, [sp]
  410dc8:	ldur	x9, [x29, #-16]
  410dcc:	ldr	x9, [x9, #16]
  410dd0:	ldr	x10, [sp, #64]
  410dd4:	add	x9, x9, x10
  410dd8:	strb	w8, [x9]
  410ddc:	ldur	x9, [x29, #-16]
  410de0:	ldr	x9, [x9, #8]
  410de4:	ldr	x10, [sp, #64]
  410de8:	add	x9, x9, x10
  410dec:	strb	w8, [x9]
  410df0:	ldur	x9, [x29, #-16]
  410df4:	ldr	x9, [x9, #24]
  410df8:	ldr	x10, [sp, #64]
  410dfc:	add	x9, x9, x10
  410e00:	strb	w8, [x9]
  410e04:	ldr	x8, [sp, #64]
  410e08:	add	x8, x8, #0x1
  410e0c:	str	x8, [sp, #64]
  410e10:	b	410d60 <wcrtomb@plt+0xdfb0>
  410e14:	ldur	x8, [x29, #-16]
  410e18:	ldr	x8, [x8, #16]
  410e1c:	ldr	x9, [sp, #64]
  410e20:	add	x8, x8, x9
  410e24:	mov	w10, #0x0                   	// #0
  410e28:	strb	w10, [x8]
  410e2c:	ldur	x8, [x29, #-16]
  410e30:	ldr	x8, [x8, #8]
  410e34:	ldr	x9, [sp, #64]
  410e38:	add	x8, x8, x9
  410e3c:	strb	w10, [x8]
  410e40:	ldur	x8, [x29, #-16]
  410e44:	ldr	x8, [x8, #24]
  410e48:	ldr	x9, [sp, #64]
  410e4c:	add	x8, x8, x9
  410e50:	strb	w10, [x8]
  410e54:	ldur	x8, [x29, #-16]
  410e58:	ldr	x0, [x8]
  410e5c:	ldur	x8, [x29, #-16]
  410e60:	ldr	x1, [x8, #24]
  410e64:	ldr	x2, [sp, #64]
  410e68:	bl	411294 <wcrtomb@plt+0xe4e4>
  410e6c:	ldur	x8, [x29, #-16]
  410e70:	str	x0, [x8]
  410e74:	ldur	x8, [x29, #-40]
  410e78:	add	x8, x8, #0x1
  410e7c:	stur	x8, [x29, #-40]
  410e80:	b	4103c0 <wcrtomb@plt+0xd610>
  410e84:	mov	x8, xzr
  410e88:	str	x8, [sp, #56]
  410e8c:	ldur	x8, [x29, #-24]
  410e90:	ldrb	w9, [x8]
  410e94:	cbz	w9, 410ef4 <wcrtomb@plt+0xe144>
  410e98:	ldur	x0, [x29, #-24]
  410e9c:	bl	4026f0 <strlen@plt>
  410ea0:	add	x8, x0, #0x1
  410ea4:	add	x0, x8, #0x3
  410ea8:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  410eac:	str	x0, [sp, #56]
  410eb0:	ldurb	w9, [x29, #-25]
  410eb4:	ldr	x8, [sp, #56]
  410eb8:	mov	w10, #0x1                   	// #1
  410ebc:	and	w9, w9, w10
  410ec0:	strb	w9, [x8]
  410ec4:	ldurb	w9, [x29, #-26]
  410ec8:	ldr	x8, [sp, #56]
  410ecc:	and	w9, w9, w10
  410ed0:	strb	w9, [x8, #1]
  410ed4:	ldurb	w9, [x29, #-27]
  410ed8:	ldr	x8, [sp, #56]
  410edc:	and	w9, w9, #0x1
  410ee0:	strb	w9, [x8, #2]
  410ee4:	ldr	x8, [sp, #56]
  410ee8:	add	x0, x8, #0x3
  410eec:	ldur	x1, [x29, #-24]
  410ef0:	bl	402bd0 <strcpy@plt>
  410ef4:	ldur	x8, [x29, #-16]
  410ef8:	cbz	x8, 410f1c <wcrtomb@plt+0xe16c>
  410efc:	ldur	x8, [x29, #-16]
  410f00:	ldr	x8, [x8, #40]
  410f04:	str	x8, [sp, #48]
  410f08:	ldur	x0, [x29, #-16]
  410f0c:	bl	4111b4 <wcrtomb@plt+0xe404>
  410f10:	ldr	x8, [sp, #48]
  410f14:	stur	x8, [x29, #-16]
  410f18:	b	410ef4 <wcrtomb@plt+0xe144>
  410f1c:	ldr	x0, [sp, #56]
  410f20:	ldr	x28, [sp, #272]
  410f24:	ldp	x29, x30, [sp, #256]
  410f28:	add	sp, sp, #0x120
  410f2c:	ret
  410f30:	sub	sp, sp, #0x40
  410f34:	stp	x29, x30, [sp, #48]
  410f38:	add	x29, sp, #0x30
  410f3c:	mov	x8, #0x30                  	// #48
  410f40:	mov	x9, #0x8                   	// #8
  410f44:	mov	w10, #0x0                   	// #0
  410f48:	stur	x0, [x29, #-8]
  410f4c:	stur	x1, [x29, #-16]
  410f50:	mov	x0, x8
  410f54:	str	x9, [sp, #16]
  410f58:	str	w10, [sp, #12]
  410f5c:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  410f60:	str	x0, [sp, #24]
  410f64:	ldr	x0, [sp, #16]
  410f68:	bl	41d908 <wcrtomb@plt+0x1ab58>
  410f6c:	ldr	x8, [sp, #24]
  410f70:	str	x0, [x8]
  410f74:	ldur	x0, [x29, #-16]
  410f78:	bl	41d908 <wcrtomb@plt+0x1ab58>
  410f7c:	ldr	x8, [sp, #24]
  410f80:	str	x0, [x8, #8]
  410f84:	ldur	x0, [x29, #-16]
  410f88:	bl	41d908 <wcrtomb@plt+0x1ab58>
  410f8c:	ldr	x8, [sp, #24]
  410f90:	str	x0, [x8, #16]
  410f94:	ldur	x0, [x29, #-16]
  410f98:	bl	41d908 <wcrtomb@plt+0x1ab58>
  410f9c:	ldr	x8, [sp, #24]
  410fa0:	str	x0, [x8, #24]
  410fa4:	ldr	x8, [sp, #24]
  410fa8:	ldr	w10, [sp, #12]
  410fac:	strb	w10, [x8, #32]
  410fb0:	ldr	x8, [sp, #24]
  410fb4:	strb	w10, [x8, #33]
  410fb8:	ldur	x8, [x29, #-8]
  410fbc:	ldr	x9, [sp, #24]
  410fc0:	str	x8, [x9, #40]
  410fc4:	ldr	x0, [sp, #24]
  410fc8:	ldp	x29, x30, [sp, #48]
  410fcc:	add	sp, sp, #0x40
  410fd0:	ret
  410fd4:	sub	sp, sp, #0x30
  410fd8:	stp	x29, x30, [sp, #32]
  410fdc:	add	x29, sp, #0x20
  410fe0:	mov	x8, xzr
  410fe4:	mov	w9, #0x0                   	// #0
  410fe8:	stur	x0, [x29, #-8]
  410fec:	ldur	x10, [x29, #-8]
  410ff0:	ldr	x0, [x10]
  410ff4:	str	x8, [sp, #16]
  410ff8:	str	w9, [sp, #12]
  410ffc:	bl	411174 <wcrtomb@plt+0xe3c4>
  411000:	ldur	x8, [x29, #-8]
  411004:	ldr	x8, [x8]
  411008:	ldr	x10, [sp, #16]
  41100c:	str	x10, [x8]
  411010:	ldur	x8, [x29, #-8]
  411014:	ldr	x8, [x8, #24]
  411018:	ldr	w9, [sp, #12]
  41101c:	strb	w9, [x8]
  411020:	ldur	x8, [x29, #-8]
  411024:	ldr	x8, [x8, #16]
  411028:	strb	w9, [x8]
  41102c:	ldur	x8, [x29, #-8]
  411030:	ldr	x8, [x8, #8]
  411034:	strb	w9, [x8]
  411038:	ldur	x8, [x29, #-8]
  41103c:	strb	w9, [x8, #32]
  411040:	ldur	x8, [x29, #-8]
  411044:	strb	w9, [x8, #33]
  411048:	ldp	x29, x30, [sp, #32]
  41104c:	add	sp, sp, #0x30
  411050:	ret
  411054:	sub	sp, sp, #0x20
  411058:	stp	x29, x30, [sp, #16]
  41105c:	add	x29, sp, #0x10
  411060:	str	x0, [sp, #8]
  411064:	str	x1, [sp]
  411068:	ldr	x0, [sp, #8]
  41106c:	ldr	x1, [sp]
  411070:	bl	402b10 <strcmp@plt>
  411074:	cmp	w0, #0x0
  411078:	cset	w8, eq  // eq = none
  41107c:	and	w0, w8, #0x1
  411080:	ldp	x29, x30, [sp, #16]
  411084:	add	sp, sp, #0x20
  411088:	ret
  41108c:	sub	sp, sp, #0x40
  411090:	stp	x29, x30, [sp, #48]
  411094:	add	x29, sp, #0x30
  411098:	mov	x8, #0x8                   	// #8
  41109c:	stur	x0, [x29, #-8]
  4110a0:	stur	x1, [x29, #-16]
  4110a4:	mov	x0, x8
  4110a8:	bl	41d908 <wcrtomb@plt+0x1ab58>
  4110ac:	str	x0, [sp, #24]
  4110b0:	str	xzr, [sp, #16]
  4110b4:	ldur	x8, [x29, #-8]
  4110b8:	ldr	x9, [sp, #16]
  4110bc:	mov	x10, #0x8                   	// #8
  4110c0:	mul	x9, x10, x9
  4110c4:	add	x8, x8, x9
  4110c8:	ldr	x8, [x8]
  4110cc:	cbz	x8, 411164 <wcrtomb@plt+0xe3b4>
  4110d0:	str	xzr, [sp, #8]
  4110d4:	ldur	x8, [x29, #-16]
  4110d8:	ldr	x9, [sp, #8]
  4110dc:	mov	x10, #0x8                   	// #8
  4110e0:	mul	x9, x10, x9
  4110e4:	add	x8, x8, x9
  4110e8:	ldr	x8, [x8]
  4110ec:	cbz	x8, 411154 <wcrtomb@plt+0xe3a4>
  4110f0:	ldur	x8, [x29, #-8]
  4110f4:	ldr	x9, [sp, #16]
  4110f8:	mov	x10, #0x8                   	// #8
  4110fc:	mul	x9, x10, x9
  411100:	add	x8, x8, x9
  411104:	ldr	x0, [x8]
  411108:	ldur	x8, [x29, #-16]
  41110c:	ldr	x9, [sp, #8]
  411110:	mul	x9, x10, x9
  411114:	add	x8, x8, x9
  411118:	ldr	x1, [x8]
  41111c:	bl	4180e8 <wcrtomb@plt+0x15338>
  411120:	str	x0, [sp]
  411124:	ldr	x0, [sp, #24]
  411128:	ldr	x1, [sp]
  41112c:	bl	411214 <wcrtomb@plt+0xe464>
  411130:	str	x0, [sp, #24]
  411134:	ldr	x0, [sp]
  411138:	bl	411174 <wcrtomb@plt+0xe3c4>
  41113c:	ldr	x0, [sp]
  411140:	bl	402b40 <free@plt>
  411144:	ldr	x8, [sp, #8]
  411148:	add	x8, x8, #0x1
  41114c:	str	x8, [sp, #8]
  411150:	b	4110d4 <wcrtomb@plt+0xe324>
  411154:	ldr	x8, [sp, #16]
  411158:	add	x8, x8, #0x1
  41115c:	str	x8, [sp, #16]
  411160:	b	4110b4 <wcrtomb@plt+0xe304>
  411164:	ldr	x0, [sp, #24]
  411168:	ldp	x29, x30, [sp, #48]
  41116c:	add	sp, sp, #0x40
  411170:	ret
  411174:	sub	sp, sp, #0x20
  411178:	stp	x29, x30, [sp, #16]
  41117c:	add	x29, sp, #0x10
  411180:	str	x0, [sp, #8]
  411184:	ldr	x8, [sp, #8]
  411188:	ldr	x8, [x8]
  41118c:	cbz	x8, 4111a8 <wcrtomb@plt+0xe3f8>
  411190:	ldr	x8, [sp, #8]
  411194:	add	x9, x8, #0x8
  411198:	str	x9, [sp, #8]
  41119c:	ldr	x0, [x8]
  4111a0:	bl	402b40 <free@plt>
  4111a4:	b	411184 <wcrtomb@plt+0xe3d4>
  4111a8:	ldp	x29, x30, [sp, #16]
  4111ac:	add	sp, sp, #0x20
  4111b0:	ret
  4111b4:	sub	sp, sp, #0x20
  4111b8:	stp	x29, x30, [sp, #16]
  4111bc:	add	x29, sp, #0x10
  4111c0:	str	x0, [sp, #8]
  4111c4:	ldr	x8, [sp, #8]
  4111c8:	ldr	x0, [x8]
  4111cc:	bl	411174 <wcrtomb@plt+0xe3c4>
  4111d0:	ldr	x8, [sp, #8]
  4111d4:	ldr	x0, [x8]
  4111d8:	bl	402b40 <free@plt>
  4111dc:	ldr	x8, [sp, #8]
  4111e0:	ldr	x0, [x8, #8]
  4111e4:	bl	402b40 <free@plt>
  4111e8:	ldr	x8, [sp, #8]
  4111ec:	ldr	x0, [x8, #16]
  4111f0:	bl	402b40 <free@plt>
  4111f4:	ldr	x8, [sp, #8]
  4111f8:	ldr	x0, [x8, #24]
  4111fc:	bl	402b40 <free@plt>
  411200:	ldr	x0, [sp, #8]
  411204:	bl	402b40 <free@plt>
  411208:	ldp	x29, x30, [sp, #16]
  41120c:	add	sp, sp, #0x20
  411210:	ret
  411214:	sub	sp, sp, #0x40
  411218:	stp	x29, x30, [sp, #48]
  41121c:	add	x29, sp, #0x30
  411220:	stur	x0, [x29, #-8]
  411224:	stur	x1, [x29, #-16]
  411228:	ldur	x8, [x29, #-16]
  41122c:	ldr	x8, [x8]
  411230:	cbz	x8, 411284 <wcrtomb@plt+0xe4d4>
  411234:	ldur	x0, [x29, #-8]
  411238:	ldur	x8, [x29, #-16]
  41123c:	ldr	x1, [x8]
  411240:	ldur	x8, [x29, #-16]
  411244:	ldr	x8, [x8]
  411248:	str	x0, [sp, #24]
  41124c:	mov	x0, x8
  411250:	str	x1, [sp, #16]
  411254:	bl	4026f0 <strlen@plt>
  411258:	ldr	x8, [sp, #24]
  41125c:	str	x0, [sp, #8]
  411260:	mov	x0, x8
  411264:	ldr	x1, [sp, #16]
  411268:	ldr	x2, [sp, #8]
  41126c:	bl	411294 <wcrtomb@plt+0xe4e4>
  411270:	stur	x0, [x29, #-8]
  411274:	ldur	x8, [x29, #-16]
  411278:	add	x8, x8, #0x8
  41127c:	stur	x8, [x29, #-16]
  411280:	b	411228 <wcrtomb@plt+0xe478>
  411284:	ldur	x0, [x29, #-8]
  411288:	ldp	x29, x30, [sp, #48]
  41128c:	add	sp, sp, #0x40
  411290:	ret
  411294:	sub	sp, sp, #0x50
  411298:	stp	x29, x30, [sp, #64]
  41129c:	add	x29, sp, #0x40
  4112a0:	mov	w8, #0x0                   	// #0
  4112a4:	stur	x0, [x29, #-16]
  4112a8:	stur	x1, [x29, #-24]
  4112ac:	str	x2, [sp, #32]
  4112b0:	ldr	x9, [sp, #32]
  4112b4:	add	x0, x9, #0x1
  4112b8:	str	w8, [sp, #12]
  4112bc:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  4112c0:	ldur	x1, [x29, #-24]
  4112c4:	ldr	x2, [sp, #32]
  4112c8:	str	x0, [sp]
  4112cc:	bl	4026a0 <memcpy@plt>
  4112d0:	ldr	x9, [sp]
  4112d4:	stur	x9, [x29, #-24]
  4112d8:	ldur	x10, [x29, #-24]
  4112dc:	ldr	x11, [sp, #32]
  4112e0:	add	x10, x10, x11
  4112e4:	ldr	w8, [sp, #12]
  4112e8:	strb	w8, [x10]
  4112ec:	str	xzr, [sp, #24]
  4112f0:	ldur	x8, [x29, #-16]
  4112f4:	ldr	x9, [sp, #24]
  4112f8:	mov	x10, #0x8                   	// #8
  4112fc:	mul	x9, x10, x9
  411300:	add	x8, x8, x9
  411304:	ldr	x8, [x8]
  411308:	cbz	x8, 411354 <wcrtomb@plt+0xe5a4>
  41130c:	ldur	x8, [x29, #-16]
  411310:	ldr	x9, [sp, #24]
  411314:	mov	x10, #0x8                   	// #8
  411318:	mul	x9, x10, x9
  41131c:	add	x8, x8, x9
  411320:	ldr	x0, [x8]
  411324:	ldur	x1, [x29, #-24]
  411328:	bl	402c50 <strstr@plt>
  41132c:	cbz	x0, 411344 <wcrtomb@plt+0xe594>
  411330:	ldur	x0, [x29, #-24]
  411334:	bl	402b40 <free@plt>
  411338:	ldur	x8, [x29, #-16]
  41133c:	stur	x8, [x29, #-8]
  411340:	b	411480 <wcrtomb@plt+0xe6d0>
  411344:	ldr	x8, [sp, #24]
  411348:	add	x8, x8, #0x1
  41134c:	str	x8, [sp, #24]
  411350:	b	4112f0 <wcrtomb@plt+0xe540>
  411354:	str	xzr, [sp, #16]
  411358:	ldur	x8, [x29, #-16]
  41135c:	ldr	x9, [sp, #16]
  411360:	mov	x10, #0x8                   	// #8
  411364:	mul	x9, x10, x9
  411368:	add	x8, x8, x9
  41136c:	ldr	x8, [x8]
  411370:	cbz	x8, 411428 <wcrtomb@plt+0xe678>
  411374:	ldur	x0, [x29, #-24]
  411378:	ldur	x8, [x29, #-16]
  41137c:	ldr	x9, [sp, #16]
  411380:	mov	x10, #0x8                   	// #8
  411384:	mul	x9, x10, x9
  411388:	add	x8, x8, x9
  41138c:	ldr	x1, [x8]
  411390:	bl	402c50 <strstr@plt>
  411394:	cbnz	x0, 4113a8 <wcrtomb@plt+0xe5f8>
  411398:	ldr	x8, [sp, #16]
  41139c:	add	x8, x8, #0x1
  4113a0:	str	x8, [sp, #16]
  4113a4:	b	411424 <wcrtomb@plt+0xe674>
  4113a8:	ldur	x8, [x29, #-16]
  4113ac:	ldr	x9, [sp, #16]
  4113b0:	mov	x10, #0x8                   	// #8
  4113b4:	mul	x9, x10, x9
  4113b8:	add	x8, x8, x9
  4113bc:	ldr	x0, [x8]
  4113c0:	bl	402b40 <free@plt>
  4113c4:	ldr	x8, [sp, #24]
  4113c8:	subs	x8, x8, #0x1
  4113cc:	str	x8, [sp, #24]
  4113d0:	ldr	x9, [sp, #16]
  4113d4:	cmp	x8, x9
  4113d8:	b.ne	4113e0 <wcrtomb@plt+0xe630>  // b.any
  4113dc:	b	411428 <wcrtomb@plt+0xe678>
  4113e0:	ldur	x8, [x29, #-16]
  4113e4:	ldr	x9, [sp, #24]
  4113e8:	mov	x10, #0x8                   	// #8
  4113ec:	mul	x9, x10, x9
  4113f0:	add	x8, x8, x9
  4113f4:	ldr	x8, [x8]
  4113f8:	ldur	x9, [x29, #-16]
  4113fc:	ldr	x11, [sp, #16]
  411400:	mul	x11, x10, x11
  411404:	add	x9, x9, x11
  411408:	str	x8, [x9]
  41140c:	ldur	x8, [x29, #-16]
  411410:	ldr	x9, [sp, #24]
  411414:	mul	x9, x10, x9
  411418:	add	x8, x8, x9
  41141c:	mov	x9, xzr
  411420:	str	x9, [x8]
  411424:	b	411358 <wcrtomb@plt+0xe5a8>
  411428:	ldur	x0, [x29, #-16]
  41142c:	ldr	x8, [sp, #24]
  411430:	add	x1, x8, #0x2
  411434:	mov	x2, #0x8                   	// #8
  411438:	bl	41d700 <wcrtomb@plt+0x1a950>
  41143c:	stur	x0, [x29, #-16]
  411440:	ldur	x8, [x29, #-24]
  411444:	ldur	x9, [x29, #-16]
  411448:	ldr	x10, [sp, #24]
  41144c:	mov	x11, #0x8                   	// #8
  411450:	mul	x10, x11, x10
  411454:	add	x9, x9, x10
  411458:	str	x8, [x9]
  41145c:	ldur	x8, [x29, #-16]
  411460:	ldr	x9, [sp, #24]
  411464:	add	x9, x9, #0x1
  411468:	mul	x9, x11, x9
  41146c:	add	x8, x8, x9
  411470:	mov	x9, xzr
  411474:	str	x9, [x8]
  411478:	ldur	x8, [x29, #-16]
  41147c:	stur	x8, [x29, #-8]
  411480:	ldur	x0, [x29, #-8]
  411484:	ldp	x29, x30, [sp, #64]
  411488:	add	sp, sp, #0x50
  41148c:	ret
  411490:	sub	sp, sp, #0x40
  411494:	stp	x29, x30, [sp, #48]
  411498:	add	x29, sp, #0x30
  41149c:	stur	x0, [x29, #-16]
  4114a0:	str	x1, [sp, #24]
  4114a4:	ldr	x0, [sp, #24]
  4114a8:	bl	4026f0 <strlen@plt>
  4114ac:	str	x0, [sp, #16]
  4114b0:	ldr	x8, [sp, #16]
  4114b4:	cbnz	x8, 4114c4 <wcrtomb@plt+0xe714>
  4114b8:	ldur	x8, [x29, #-16]
  4114bc:	stur	x8, [x29, #-8]
  4114c0:	b	411510 <wcrtomb@plt+0xe760>
  4114c4:	ldur	x0, [x29, #-16]
  4114c8:	bl	4026f0 <strlen@plt>
  4114cc:	str	x0, [sp, #8]
  4114d0:	ldur	x0, [x29, #-16]
  4114d4:	ldr	x8, [sp, #8]
  4114d8:	ldr	x9, [sp, #16]
  4114dc:	add	x8, x8, x9
  4114e0:	add	x1, x8, #0x1
  4114e4:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  4114e8:	str	x0, [sp]
  4114ec:	ldr	x8, [sp]
  4114f0:	ldr	x9, [sp, #8]
  4114f4:	add	x0, x8, x9
  4114f8:	ldr	x1, [sp, #24]
  4114fc:	ldr	x8, [sp, #16]
  411500:	add	x2, x8, #0x1
  411504:	bl	4026a0 <memcpy@plt>
  411508:	ldr	x8, [sp]
  41150c:	stur	x8, [x29, #-8]
  411510:	ldur	x0, [x29, #-8]
  411514:	ldp	x29, x30, [sp, #48]
  411518:	add	sp, sp, #0x40
  41151c:	ret
  411520:	sub	sp, sp, #0x10
  411524:	mov	w8, #0x40                  	// #64
  411528:	str	w0, [sp, #12]
  41152c:	str	x1, [sp]
  411530:	ldr	x9, [sp]
  411534:	ldr	w10, [sp, #12]
  411538:	udiv	w10, w10, w8
  41153c:	ldr	x9, [x9, w10, uxtw #3]
  411540:	ldr	w10, [sp, #12]
  411544:	udiv	w11, w10, w8
  411548:	mul	w8, w11, w8
  41154c:	subs	w8, w10, w8
  411550:	mov	w12, w8
  411554:	lsr	x9, x9, x12
  411558:	tst	x9, #0x1
  41155c:	cset	w8, ne  // ne = any
  411560:	and	w0, w8, #0x1
  411564:	add	sp, sp, #0x10
  411568:	ret
  41156c:	sub	sp, sp, #0x20
  411570:	stp	x29, x30, [sp, #16]
  411574:	add	x29, sp, #0x10
  411578:	str	x0, [sp, #8]
  41157c:	ldr	x0, [sp, #8]
  411580:	bl	402b40 <free@plt>
  411584:	ldp	x29, x30, [sp, #16]
  411588:	add	sp, sp, #0x20
  41158c:	ret
  411590:	stp	x29, x30, [sp, #-16]!
  411594:	mov	x29, sp
  411598:	mov	x0, #0x920                 	// #2336
  41159c:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  4115a0:	ldp	x29, x30, [sp], #16
  4115a4:	ret
  4115a8:	sub	sp, sp, #0x70
  4115ac:	stp	x29, x30, [sp, #96]
  4115b0:	add	x29, sp, #0x60
  4115b4:	mov	x8, #0x410                 	// #1040
  4115b8:	adrp	x9, 411000 <wcrtomb@plt+0xe250>
  4115bc:	add	x9, x9, #0x808
  4115c0:	adrp	x10, 411000 <wcrtomb@plt+0xe250>
  4115c4:	add	x10, x10, #0x860
  4115c8:	mov	x11, #0x504                 	// #1284
  4115cc:	mov	x12, #0xffffffffffffffff    	// #-1
  4115d0:	mov	w13, #0x1                   	// #1
  4115d4:	mov	w14, #0x1                   	// #1
  4115d8:	mov	w15, wzr
  4115dc:	mov	w16, #0xa                   	// #10
  4115e0:	stur	x0, [x29, #-8]
  4115e4:	stur	x1, [x29, #-16]
  4115e8:	stur	x2, [x29, #-24]
  4115ec:	stur	w3, [x29, #-28]
  4115f0:	ldur	x0, [x29, #-8]
  4115f4:	mov	w3, w15
  4115f8:	mov	w1, w3
  4115fc:	mov	x2, x8
  411600:	str	x9, [sp, #48]
  411604:	str	x10, [sp, #40]
  411608:	str	x11, [sp, #32]
  41160c:	str	x12, [sp, #24]
  411610:	str	w13, [sp, #20]
  411614:	str	w14, [sp, #16]
  411618:	str	w15, [sp, #12]
  41161c:	str	w16, [sp, #8]
  411620:	bl	402960 <memset@plt>
  411624:	ldur	x8, [x29, #-16]
  411628:	ldrb	w13, [x8]
  41162c:	tst	w13, #0x1
  411630:	ldr	x8, [sp, #48]
  411634:	ldr	x9, [sp, #40]
  411638:	csel	x10, x8, x9, ne  // ne = any
  41163c:	ldur	x11, [x29, #-8]
  411640:	str	x10, [x11, #1040]
  411644:	ldur	x10, [x29, #-8]
  411648:	add	x0, x10, #0x418
  41164c:	ldur	x1, [x29, #-16]
  411650:	ldr	x2, [sp, #32]
  411654:	bl	4026a0 <memcpy@plt>
  411658:	ldur	x8, [x29, #-8]
  41165c:	ldrb	w13, [x8, #1048]
  411660:	ldr	w14, [sp, #16]
  411664:	eor	w13, w13, w14
  411668:	ldur	x8, [x29, #-8]
  41166c:	and	w13, w13, w14
  411670:	strb	w13, [x8, #192]
  411674:	ldur	x8, [x29, #-8]
  411678:	ldr	x9, [sp, #24]
  41167c:	str	x9, [x8, #24]
  411680:	ldur	x8, [x29, #-8]
  411684:	ldr	w13, [sp, #20]
  411688:	strb	w13, [x8, #456]
  41168c:	ldur	x8, [x29, #-24]
  411690:	tst	x8, #0x400000
  411694:	cset	w15, ne  // ne = any
  411698:	ldur	x8, [x29, #-8]
  41169c:	and	w15, w15, w14
  4116a0:	strb	w15, [x8, #457]
  4116a4:	ldur	w15, [x29, #-28]
  4116a8:	tst	w15, #0x1
  4116ac:	cset	w15, ne  // ne = any
  4116b0:	ldur	x8, [x29, #-8]
  4116b4:	and	w15, w15, w14
  4116b8:	strb	w15, [x8, #458]
  4116bc:	ldur	w15, [x29, #-28]
  4116c0:	tst	w15, #0x2
  4116c4:	ldr	w15, [sp, #12]
  4116c8:	ldr	w16, [sp, #8]
  4116cc:	csel	w17, w15, w16, ne  // ne = any
  4116d0:	ldur	x8, [x29, #-8]
  4116d4:	strb	w17, [x8, #459]
  4116d8:	ldur	x8, [x29, #-24]
  4116dc:	ldur	x10, [x29, #-8]
  4116e0:	str	x8, [x10, #448]
  4116e4:	stur	wzr, [x29, #-32]
  4116e8:	ldur	w8, [x29, #-32]
  4116ec:	cmp	w8, #0xff
  4116f0:	b.gt	4117fc <wcrtomb@plt+0xea4c>
  4116f4:	ldur	w8, [x29, #-32]
  4116f8:	sturb	w8, [x29, #-33]
  4116fc:	ldur	x0, [x29, #-8]
  411700:	ldurb	w1, [x29, #-33]
  411704:	bl	4118bc <wcrtomb@plt+0xeb0c>
  411708:	ldur	x9, [x29, #-8]
  41170c:	add	x9, x9, #0x1cc
  411710:	ldurb	w8, [x29, #-33]
  411714:	mov	w10, w8
  411718:	add	x9, x9, x10
  41171c:	strb	w0, [x9]
  411720:	ldur	x9, [x29, #-8]
  411724:	add	x9, x9, #0x1cc
  411728:	ldurb	w8, [x29, #-33]
  41172c:	mov	w10, w8
  411730:	ldrb	w8, [x9, x10]
  411734:	cmp	w8, #0x2
  411738:	str	w8, [sp, #4]
  41173c:	b.eq	411754 <wcrtomb@plt+0xe9a4>  // b.none
  411740:	b	411744 <wcrtomb@plt+0xe994>
  411744:	ldr	w8, [sp, #4]
  411748:	cmp	w8, #0x4
  41174c:	b.eq	411768 <wcrtomb@plt+0xe9b8>  // b.none
  411750:	b	411778 <wcrtomb@plt+0xe9c8>
  411754:	ldurb	w0, [x29, #-33]
  411758:	ldur	x8, [x29, #-8]
  41175c:	add	x1, x8, #0x3d0
  411760:	bl	411934 <wcrtomb@plt+0xeb84>
  411764:	b	411778 <wcrtomb@plt+0xe9c8>
  411768:	ldurb	w0, [x29, #-33]
  41176c:	ldur	x8, [x29, #-8]
  411770:	add	x1, x8, #0x3f0
  411774:	bl	411934 <wcrtomb@plt+0xeb84>
  411778:	ldur	x8, [x29, #-8]
  41177c:	ldrb	w9, [x8, #1050]
  411780:	tbnz	w9, #0, 411788 <wcrtomb@plt+0xe9d8>
  411784:	b	4117a4 <wcrtomb@plt+0xe9f4>
  411788:	ldurb	w8, [x29, #-33]
  41178c:	and	w8, w8, #0xc0
  411790:	cmp	w8, #0x80
  411794:	cset	w8, ne  // ne = any
  411798:	and	w8, w8, #0x1
  41179c:	str	w8, [sp]
  4117a0:	b	4117c4 <wcrtomb@plt+0xea14>
  4117a4:	ldurb	w1, [x29, #-33]
  4117a8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4117ac:	add	x0, x0, #0x246
  4117b0:	bl	402b80 <strchr@plt>
  4117b4:	cmp	x0, #0x0
  4117b8:	cset	w8, ne  // ne = any
  4117bc:	and	w8, w8, #0x1
  4117c0:	str	w8, [sp]
  4117c4:	ldr	w8, [sp]
  4117c8:	cmp	w8, #0x0
  4117cc:	cset	w8, ne  // ne = any
  4117d0:	ldur	x9, [x29, #-8]
  4117d4:	add	x9, x9, #0x2cc
  4117d8:	ldurb	w10, [x29, #-33]
  4117dc:	mov	w11, w10
  4117e0:	add	x9, x9, x11
  4117e4:	and	w8, w8, #0x1
  4117e8:	strb	w8, [x9]
  4117ec:	ldur	w8, [x29, #-32]
  4117f0:	add	w8, w8, #0x1
  4117f4:	stur	w8, [x29, #-32]
  4117f8:	b	4116e8 <wcrtomb@plt+0xe938>
  4117fc:	ldp	x29, x30, [sp, #96]
  411800:	add	sp, sp, #0x70
  411804:	ret
  411808:	sub	sp, sp, #0x40
  41180c:	stp	x29, x30, [sp, #48]
  411810:	add	x29, sp, #0x30
  411814:	stur	x0, [x29, #-8]
  411818:	stur	x1, [x29, #-16]
  41181c:	str	x2, [sp, #24]
  411820:	mov	w8, #0x1                   	// #1
  411824:	and	w9, w3, w8
  411828:	strb	w9, [sp, #23]
  41182c:	str	x4, [sp, #8]
  411830:	str	x5, [sp]
  411834:	ldur	x0, [x29, #-8]
  411838:	ldur	x1, [x29, #-16]
  41183c:	ldr	x2, [sp, #24]
  411840:	ldrb	w9, [sp, #23]
  411844:	ldr	x4, [sp, #8]
  411848:	and	w3, w9, #0x1
  41184c:	and	w5, w8, #0x1
  411850:	bl	418210 <wcrtomb@plt+0x15460>
  411854:	ldp	x29, x30, [sp, #48]
  411858:	add	sp, sp, #0x40
  41185c:	ret
  411860:	sub	sp, sp, #0x40
  411864:	stp	x29, x30, [sp, #48]
  411868:	add	x29, sp, #0x30
  41186c:	stur	x0, [x29, #-8]
  411870:	stur	x1, [x29, #-16]
  411874:	str	x2, [sp, #24]
  411878:	mov	w8, #0x1                   	// #1
  41187c:	and	w8, w3, w8
  411880:	strb	w8, [sp, #23]
  411884:	str	x4, [sp, #8]
  411888:	str	x5, [sp]
  41188c:	ldur	x0, [x29, #-8]
  411890:	ldur	x1, [x29, #-16]
  411894:	ldr	x2, [sp, #24]
  411898:	ldrb	w8, [sp, #23]
  41189c:	ldr	x4, [sp, #8]
  4118a0:	and	w3, w8, #0x1
  4118a4:	mov	w8, wzr
  4118a8:	and	w5, w8, #0x1
  4118ac:	bl	418210 <wcrtomb@plt+0x15460>
  4118b0:	ldp	x29, x30, [sp, #48]
  4118b4:	add	sp, sp, #0x40
  4118b8:	ret
  4118bc:	sub	sp, sp, #0x30
  4118c0:	stp	x29, x30, [sp, #32]
  4118c4:	add	x29, sp, #0x20
  4118c8:	str	x0, [sp, #16]
  4118cc:	strb	w1, [sp, #15]
  4118d0:	ldrb	w8, [sp, #15]
  4118d4:	ldr	x9, [sp, #16]
  4118d8:	ldrb	w10, [x9, #459]
  4118dc:	cmp	w8, w10
  4118e0:	b.ne	4118fc <wcrtomb@plt+0xeb4c>  // b.any
  4118e4:	ldr	x8, [sp, #16]
  4118e8:	ldrb	w9, [x8, #458]
  4118ec:	tbnz	w9, #0, 4118fc <wcrtomb@plt+0xeb4c>
  4118f0:	mov	w8, #0x4                   	// #4
  4118f4:	stur	w8, [x29, #-4]
  4118f8:	b	411924 <wcrtomb@plt+0xeb74>
  4118fc:	ldr	x0, [sp, #16]
  411900:	ldrb	w1, [sp, #15]
  411904:	bl	41a24c <wcrtomb@plt+0x1749c>
  411908:	tbnz	w0, #0, 411910 <wcrtomb@plt+0xeb60>
  41190c:	b	41191c <wcrtomb@plt+0xeb6c>
  411910:	mov	w8, #0x2                   	// #2
  411914:	stur	w8, [x29, #-4]
  411918:	b	411924 <wcrtomb@plt+0xeb74>
  41191c:	mov	w8, #0x1                   	// #1
  411920:	stur	w8, [x29, #-4]
  411924:	ldur	w0, [x29, #-4]
  411928:	ldp	x29, x30, [sp, #32]
  41192c:	add	sp, sp, #0x30
  411930:	ret
  411934:	sub	sp, sp, #0x20
  411938:	mov	x8, #0x1                   	// #1
  41193c:	mov	w9, #0x40                  	// #64
  411940:	str	w0, [sp, #28]
  411944:	str	x1, [sp, #16]
  411948:	str	x8, [sp, #8]
  41194c:	ldr	x8, [sp, #8]
  411950:	ldr	w10, [sp, #28]
  411954:	udiv	w11, w10, w9
  411958:	mul	w11, w11, w9
  41195c:	subs	w10, w10, w11
  411960:	mov	w12, w10
  411964:	lsl	x8, x8, x12
  411968:	ldr	x12, [sp, #16]
  41196c:	ldr	w10, [sp, #28]
  411970:	udiv	w9, w10, w9
  411974:	mov	w13, w9
  411978:	ubfx	x13, x13, #0, #32
  41197c:	mov	x14, #0x8                   	// #8
  411980:	mul	x13, x14, x13
  411984:	add	x12, x12, x13
  411988:	ldr	x13, [x12]
  41198c:	orr	x8, x13, x8
  411990:	str	x8, [x12]
  411994:	add	sp, sp, #0x20
  411998:	ret
  41199c:	sub	sp, sp, #0x40
  4119a0:	stp	x29, x30, [sp, #48]
  4119a4:	add	x29, sp, #0x30
  4119a8:	mov	x2, #0x1c0                 	// #448
  4119ac:	mov	x8, #0xffffffffffffffff    	// #-1
  4119b0:	mov	x9, #0x250                 	// #592
  4119b4:	mov	x10, #0x504                 	// #1284
  4119b8:	stur	x0, [x29, #-8]
  4119bc:	stur	x1, [x29, #-16]
  4119c0:	ldur	x0, [x29, #-8]
  4119c4:	mov	w11, wzr
  4119c8:	mov	w1, w11
  4119cc:	str	x8, [sp, #24]
  4119d0:	str	x9, [sp, #16]
  4119d4:	str	x10, [sp, #8]
  4119d8:	bl	402960 <memset@plt>
  4119dc:	ldur	x8, [x29, #-8]
  4119e0:	ldr	x9, [sp, #24]
  4119e4:	str	x9, [x8, #24]
  4119e8:	ldur	x8, [x29, #-16]
  4119ec:	ldrb	w11, [x8, #192]
  4119f0:	ldur	x8, [x29, #-8]
  4119f4:	and	w11, w11, #0x1
  4119f8:	strb	w11, [x8, #192]
  4119fc:	ldur	x8, [x29, #-8]
  411a00:	add	x0, x8, #0x1c0
  411a04:	ldur	x8, [x29, #-16]
  411a08:	add	x1, x8, #0x1c0
  411a0c:	ldr	x2, [sp, #16]
  411a10:	bl	4026a0 <memcpy@plt>
  411a14:	ldur	x8, [x29, #-16]
  411a18:	ldr	x8, [x8, #1040]
  411a1c:	ldur	x9, [x29, #-8]
  411a20:	str	x8, [x9, #1040]
  411a24:	ldur	x8, [x29, #-8]
  411a28:	add	x0, x8, #0x418
  411a2c:	ldur	x8, [x29, #-16]
  411a30:	add	x1, x8, #0x418
  411a34:	ldr	x2, [sp, #8]
  411a38:	bl	4026a0 <memcpy@plt>
  411a3c:	ldp	x29, x30, [sp, #48]
  411a40:	add	sp, sp, #0x40
  411a44:	ret
  411a48:	sub	sp, sp, #0x60
  411a4c:	stp	x29, x30, [sp, #80]
  411a50:	add	x29, sp, #0x50
  411a54:	mov	x8, #0xffffffffffffffff    	// #-1
  411a58:	sub	x9, x29, #0x1c
  411a5c:	add	x2, sp, #0x28
  411a60:	stur	x0, [x29, #-8]
  411a64:	stur	w1, [x29, #-12]
  411a68:	str	xzr, [sp, #40]
  411a6c:	ldur	w1, [x29, #-12]
  411a70:	mov	x0, x9
  411a74:	str	x8, [sp, #16]
  411a78:	bl	402db0 <wcrtomb@plt>
  411a7c:	str	x0, [sp, #32]
  411a80:	ldr	x8, [sp, #32]
  411a84:	ldr	x9, [sp, #16]
  411a88:	cmp	x8, x9
  411a8c:	b.eq	411a9c <wcrtomb@plt+0xecec>  // b.none
  411a90:	ldr	x8, [sp, #32]
  411a94:	str	w8, [sp, #28]
  411a98:	b	411aac <wcrtomb@plt+0xecfc>
  411a9c:	mov	w8, #0x1                   	// #1
  411aa0:	str	w8, [sp, #28]
  411aa4:	mov	w8, #0x0                   	// #0
  411aa8:	sturb	w8, [x29, #-28]
  411aac:	ldur	x0, [x29, #-8]
  411ab0:	ldurb	w8, [x29, #-28]
  411ab4:	mov	w1, w8
  411ab8:	ldr	w8, [sp, #28]
  411abc:	mov	w9, #0x1                   	// #1
  411ac0:	mov	w10, #0x3                   	// #3
  411ac4:	cmp	w8, #0x1
  411ac8:	csel	w8, w10, w9, eq  // eq = none
  411acc:	mov	w2, w8
  411ad0:	str	w9, [sp, #12]
  411ad4:	bl	411b50 <wcrtomb@plt+0xeda0>
  411ad8:	ldr	w8, [sp, #12]
  411adc:	str	w8, [sp, #24]
  411ae0:	ldr	w8, [sp, #24]
  411ae4:	ldr	w9, [sp, #28]
  411ae8:	cmp	w8, w9
  411aec:	b.ge	411b44 <wcrtomb@plt+0xed94>  // b.tcont
  411af0:	ldur	x0, [x29, #-8]
  411af4:	ldrsw	x8, [sp, #24]
  411af8:	sub	x9, x29, #0x1c
  411afc:	ldrb	w10, [x9, x8]
  411b00:	mov	w1, w10
  411b04:	ldr	w10, [sp, #24]
  411b08:	ldr	w11, [sp, #28]
  411b0c:	subs	w11, w11, #0x1
  411b10:	mov	w12, wzr
  411b14:	mov	w13, #0x2                   	// #2
  411b18:	cmp	w10, w11
  411b1c:	csel	w10, w13, w12, eq  // eq = none
  411b20:	mov	w2, w10
  411b24:	bl	411b50 <wcrtomb@plt+0xeda0>
  411b28:	ldur	x0, [x29, #-8]
  411b2c:	mov	x1, #0x105                 	// #261
  411b30:	bl	40e00c <wcrtomb@plt+0xb25c>
  411b34:	ldr	w8, [sp, #24]
  411b38:	add	w8, w8, #0x1
  411b3c:	str	w8, [sp, #24]
  411b40:	b	411ae0 <wcrtomb@plt+0xed30>
  411b44:	ldp	x29, x30, [sp, #80]
  411b48:	add	sp, sp, #0x60
  411b4c:	ret
  411b50:	sub	sp, sp, #0x30
  411b54:	stp	x29, x30, [sp, #32]
  411b58:	add	x29, sp, #0x20
  411b5c:	stur	x0, [x29, #-8]
  411b60:	str	x1, [sp, #16]
  411b64:	strb	w2, [sp, #15]
  411b68:	ldur	x8, [x29, #-8]
  411b6c:	ldr	x8, [x8, #160]
  411b70:	ldur	x9, [x29, #-8]
  411b74:	ldr	x9, [x9, #152]
  411b78:	cmp	x8, x9
  411b7c:	b.ne	411bd8 <wcrtomb@plt+0xee28>  // b.any
  411b80:	ldur	x8, [x29, #-8]
  411b84:	ldr	x0, [x8, #144]
  411b88:	ldur	x8, [x29, #-8]
  411b8c:	add	x1, x8, #0xa0
  411b90:	mov	x2, #0x1                   	// #1
  411b94:	mov	x3, #0xffffffffffffffff    	// #-1
  411b98:	mov	x4, #0x8                   	// #8
  411b9c:	bl	411cc8 <wcrtomb@plt+0xef18>
  411ba0:	ldur	x8, [x29, #-8]
  411ba4:	str	x0, [x8, #144]
  411ba8:	ldur	x8, [x29, #-8]
  411bac:	ldrb	w9, [x8, #1048]
  411bb0:	tbnz	w9, #0, 411bb8 <wcrtomb@plt+0xee08>
  411bb4:	b	411bd8 <wcrtomb@plt+0xee28>
  411bb8:	ldur	x8, [x29, #-8]
  411bbc:	ldr	x0, [x8, #280]
  411bc0:	ldur	x8, [x29, #-8]
  411bc4:	ldr	x1, [x8, #160]
  411bc8:	mov	x2, #0x1                   	// #1
  411bcc:	bl	41d700 <wcrtomb@plt+0x1a950>
  411bd0:	ldur	x8, [x29, #-8]
  411bd4:	str	x0, [x8, #280]
  411bd8:	ldur	x8, [x29, #-8]
  411bdc:	ldrb	w9, [x8, #1048]
  411be0:	tbnz	w9, #0, 411be8 <wcrtomb@plt+0xee38>
  411be4:	b	411c04 <wcrtomb@plt+0xee54>
  411be8:	ldrb	w8, [sp, #15]
  411bec:	ldur	x9, [x29, #-8]
  411bf0:	ldr	x9, [x9, #280]
  411bf4:	ldur	x10, [x29, #-8]
  411bf8:	ldr	x10, [x10, #152]
  411bfc:	add	x9, x9, x10
  411c00:	strb	w8, [x9]
  411c04:	ldr	x8, [sp, #16]
  411c08:	ldur	x9, [x29, #-8]
  411c0c:	ldr	x9, [x9, #144]
  411c10:	ldur	x10, [x29, #-8]
  411c14:	ldr	x11, [x10, #152]
  411c18:	add	x12, x11, #0x1
  411c1c:	str	x12, [x10, #152]
  411c20:	str	x8, [x9, x11, lsl #3]
  411c24:	ldr	x8, [sp, #16]
  411c28:	subs	x8, x8, #0x100
  411c2c:	cmp	x8, #0x12
  411c30:	str	x8, [sp]
  411c34:	b.hi	411c74 <wcrtomb@plt+0xeec4>  // b.pmore
  411c38:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  411c3c:	add	x8, x8, #0xef8
  411c40:	ldr	x11, [sp]
  411c44:	ldrsw	x10, [x8, x11, lsl #2]
  411c48:	add	x9, x8, x10
  411c4c:	br	x9
  411c50:	b	411c94 <wcrtomb@plt+0xeee4>
  411c54:	ldur	x8, [x29, #-8]
  411c58:	ldr	x9, [x8, #136]
  411c5c:	subs	x9, x9, #0x1
  411c60:	str	x9, [x8, #136]
  411c64:	b	411c94 <wcrtomb@plt+0xeee4>
  411c68:	ldur	x8, [x29, #-8]
  411c6c:	mov	w9, #0x0                   	// #0
  411c70:	strb	w9, [x8, #192]
  411c74:	ldur	x8, [x29, #-8]
  411c78:	ldr	x9, [x8, #176]
  411c7c:	add	x9, x9, #0x1
  411c80:	str	x9, [x8, #176]
  411c84:	ldur	x8, [x29, #-8]
  411c88:	ldr	x9, [x8, #136]
  411c8c:	add	x9, x9, #0x1
  411c90:	str	x9, [x8, #136]
  411c94:	ldur	x8, [x29, #-8]
  411c98:	ldr	x8, [x8, #136]
  411c9c:	ldur	x9, [x29, #-8]
  411ca0:	ldr	x9, [x9, #168]
  411ca4:	cmp	x8, x9
  411ca8:	b.le	411cbc <wcrtomb@plt+0xef0c>
  411cac:	ldur	x8, [x29, #-8]
  411cb0:	ldr	x8, [x8, #136]
  411cb4:	ldur	x9, [x29, #-8]
  411cb8:	str	x8, [x9, #168]
  411cbc:	ldp	x29, x30, [sp, #32]
  411cc0:	add	sp, sp, #0x30
  411cc4:	ret
  411cc8:	sub	sp, sp, #0x100
  411ccc:	stp	x29, x30, [sp, #240]
  411cd0:	add	x29, sp, #0xf0
  411cd4:	stur	x0, [x29, #-8]
  411cd8:	stur	x1, [x29, #-16]
  411cdc:	stur	x2, [x29, #-24]
  411ce0:	stur	x3, [x29, #-32]
  411ce4:	stur	x4, [x29, #-40]
  411ce8:	ldur	x8, [x29, #-16]
  411cec:	ldr	x8, [x8]
  411cf0:	stur	x8, [x29, #-48]
  411cf4:	ldur	x8, [x29, #-48]
  411cf8:	adds	x8, x8, x8, asr #1
  411cfc:	stur	x8, [x29, #-56]
  411d00:	b.vc	411d14 <wcrtomb@plt+0xef64>
  411d04:	b	411d08 <wcrtomb@plt+0xef58>
  411d08:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411d0c:	stur	x8, [x29, #-56]
  411d10:	b	411d14 <wcrtomb@plt+0xef64>
  411d14:	ldur	x8, [x29, #-32]
  411d18:	tbnz	x8, #63, 411d40 <wcrtomb@plt+0xef90>
  411d1c:	b	411d20 <wcrtomb@plt+0xef70>
  411d20:	ldur	x8, [x29, #-32]
  411d24:	ldur	x9, [x29, #-56]
  411d28:	subs	x8, x8, x9
  411d2c:	b.ge	411d40 <wcrtomb@plt+0xef90>  // b.tcont
  411d30:	b	411d34 <wcrtomb@plt+0xef84>
  411d34:	ldur	x8, [x29, #-32]
  411d38:	stur	x8, [x29, #-56]
  411d3c:	b	411d40 <wcrtomb@plt+0xef90>
  411d40:	mov	w8, #0x1                   	// #1
  411d44:	cbnz	w8, 4121e8 <wcrtomb@plt+0xf438>
  411d48:	b	411d4c <wcrtomb@plt+0xef9c>
  411d4c:	mov	w8, wzr
  411d50:	cbnz	w8, 411fb4 <wcrtomb@plt+0xf204>
  411d54:	b	411d58 <wcrtomb@plt+0xefa8>
  411d58:	ldur	x8, [x29, #-40]
  411d5c:	tbz	x8, #63, 411ea4 <wcrtomb@plt+0xf0f4>
  411d60:	b	411d64 <wcrtomb@plt+0xefb4>
  411d64:	ldur	x8, [x29, #-56]
  411d68:	tbz	x8, #63, 411e10 <wcrtomb@plt+0xf060>
  411d6c:	b	411d70 <wcrtomb@plt+0xefc0>
  411d70:	mov	w8, wzr
  411d74:	cbnz	w8, 411d9c <wcrtomb@plt+0xefec>
  411d78:	b	411d7c <wcrtomb@plt+0xefcc>
  411d7c:	ldur	x8, [x29, #-56]
  411d80:	ldur	x9, [x29, #-40]
  411d84:	mov	w10, #0x7f                  	// #127
  411d88:	mov	w11, w10
  411d8c:	sdiv	x9, x11, x9
  411d90:	subs	x8, x8, x9
  411d94:	b.lt	411f6c <wcrtomb@plt+0xf1bc>  // b.tstop
  411d98:	b	411f90 <wcrtomb@plt+0xf1e0>
  411d9c:	mov	w8, wzr
  411da0:	cbnz	w8, 411dbc <wcrtomb@plt+0xf00c>
  411da4:	b	411da8 <wcrtomb@plt+0xeff8>
  411da8:	ldur	x8, [x29, #-40]
  411dac:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  411db0:	subs	x8, x8, x9
  411db4:	b.eq	411dcc <wcrtomb@plt+0xf01c>  // b.none
  411db8:	b	411dd8 <wcrtomb@plt+0xf028>
  411dbc:	ldur	x8, [x29, #-40]
  411dc0:	subs	x8, x8, #0x1
  411dc4:	b.lt	411dd8 <wcrtomb@plt+0xf028>  // b.tstop
  411dc8:	b	411dcc <wcrtomb@plt+0xf01c>
  411dcc:	mov	x0, xzr
  411dd0:	stur	x0, [x29, #-80]
  411dd4:	b	411df8 <wcrtomb@plt+0xf048>
  411dd8:	ldur	x8, [x29, #-40]
  411ddc:	mov	x9, xzr
  411de0:	subs	x8, x9, x8
  411de4:	mov	w10, #0x7f                  	// #127
  411de8:	mov	w9, w10
  411dec:	sdiv	x8, x9, x8
  411df0:	stur	x8, [x29, #-80]
  411df4:	b	411df8 <wcrtomb@plt+0xf048>
  411df8:	ldur	x8, [x29, #-80]
  411dfc:	ldur	x9, [x29, #-56]
  411e00:	mvn	x9, x9
  411e04:	subs	x8, x8, x9
  411e08:	b.le	411f6c <wcrtomb@plt+0xf1bc>
  411e0c:	b	411f90 <wcrtomb@plt+0xf1e0>
  411e10:	mov	w8, wzr
  411e14:	cbnz	w8, 411e28 <wcrtomb@plt+0xf078>
  411e18:	b	411e1c <wcrtomb@plt+0xf06c>
  411e1c:	mov	w8, wzr
  411e20:	cbnz	w8, 411e34 <wcrtomb@plt+0xf084>
  411e24:	b	411e88 <wcrtomb@plt+0xf0d8>
  411e28:	mov	w8, #0x1                   	// #1
  411e2c:	cbnz	w8, 411e88 <wcrtomb@plt+0xf0d8>
  411e30:	b	411e34 <wcrtomb@plt+0xf084>
  411e34:	ldur	x8, [x29, #-40]
  411e38:	adds	x8, x8, #0x1
  411e3c:	b.ne	411e88 <wcrtomb@plt+0xf0d8>  // b.any
  411e40:	b	411e44 <wcrtomb@plt+0xf094>
  411e44:	mov	w8, wzr
  411e48:	cbnz	w8, 411e64 <wcrtomb@plt+0xf0b4>
  411e4c:	b	411e50 <wcrtomb@plt+0xf0a0>
  411e50:	ldur	x8, [x29, #-56]
  411e54:	subs	x8, x8, #0x80
  411e58:	subs	x8, x8, #0x0
  411e5c:	b.gt	411f6c <wcrtomb@plt+0xf1bc>
  411e60:	b	411f90 <wcrtomb@plt+0xf1e0>
  411e64:	ldur	x8, [x29, #-56]
  411e68:	subs	x8, x8, #0x1
  411e6c:	b.lt	411f90 <wcrtomb@plt+0xf1e0>  // b.tstop
  411e70:	b	411e74 <wcrtomb@plt+0xf0c4>
  411e74:	ldur	x8, [x29, #-56]
  411e78:	subs	x8, x8, #0x1
  411e7c:	subs	x8, x8, #0x7f
  411e80:	b.gt	411f6c <wcrtomb@plt+0xf1bc>
  411e84:	b	411f90 <wcrtomb@plt+0xf1e0>
  411e88:	ldur	x8, [x29, #-40]
  411e8c:	mov	x9, #0xffffffffffffff80    	// #-128
  411e90:	sdiv	x8, x9, x8
  411e94:	ldur	x9, [x29, #-56]
  411e98:	subs	x8, x8, x9
  411e9c:	b.lt	411f6c <wcrtomb@plt+0xf1bc>  // b.tstop
  411ea0:	b	411f90 <wcrtomb@plt+0xf1e0>
  411ea4:	ldur	x8, [x29, #-40]
  411ea8:	cbnz	x8, 411ebc <wcrtomb@plt+0xf10c>
  411eac:	b	411eb0 <wcrtomb@plt+0xf100>
  411eb0:	mov	w8, wzr
  411eb4:	cbnz	w8, 411f6c <wcrtomb@plt+0xf1bc>
  411eb8:	b	411f90 <wcrtomb@plt+0xf1e0>
  411ebc:	ldur	x8, [x29, #-56]
  411ec0:	tbz	x8, #63, 411f4c <wcrtomb@plt+0xf19c>
  411ec4:	b	411ec8 <wcrtomb@plt+0xf118>
  411ec8:	mov	w8, wzr
  411ecc:	cbnz	w8, 411ee0 <wcrtomb@plt+0xf130>
  411ed0:	b	411ed4 <wcrtomb@plt+0xf124>
  411ed4:	mov	w8, wzr
  411ed8:	cbnz	w8, 411eec <wcrtomb@plt+0xf13c>
  411edc:	b	411f30 <wcrtomb@plt+0xf180>
  411ee0:	mov	w8, #0x1                   	// #1
  411ee4:	cbnz	w8, 411f30 <wcrtomb@plt+0xf180>
  411ee8:	b	411eec <wcrtomb@plt+0xf13c>
  411eec:	ldur	x8, [x29, #-56]
  411ef0:	adds	x8, x8, #0x1
  411ef4:	b.ne	411f30 <wcrtomb@plt+0xf180>  // b.any
  411ef8:	b	411efc <wcrtomb@plt+0xf14c>
  411efc:	mov	w8, wzr
  411f00:	cbnz	w8, 411f1c <wcrtomb@plt+0xf16c>
  411f04:	b	411f08 <wcrtomb@plt+0xf158>
  411f08:	ldur	x8, [x29, #-40]
  411f0c:	subs	x8, x8, #0x80
  411f10:	subs	x8, x8, #0x0
  411f14:	b.gt	411f6c <wcrtomb@plt+0xf1bc>
  411f18:	b	411f90 <wcrtomb@plt+0xf1e0>
  411f1c:	ldur	x8, [x29, #-40]
  411f20:	subs	x8, x8, #0x1
  411f24:	subs	x8, x8, #0x7f
  411f28:	b.gt	411f6c <wcrtomb@plt+0xf1bc>
  411f2c:	b	411f90 <wcrtomb@plt+0xf1e0>
  411f30:	ldur	x8, [x29, #-56]
  411f34:	mov	x9, #0xffffffffffffff80    	// #-128
  411f38:	sdiv	x8, x9, x8
  411f3c:	ldur	x9, [x29, #-40]
  411f40:	subs	x8, x8, x9
  411f44:	b.lt	411f6c <wcrtomb@plt+0xf1bc>  // b.tstop
  411f48:	b	411f90 <wcrtomb@plt+0xf1e0>
  411f4c:	ldur	x8, [x29, #-40]
  411f50:	mov	w9, #0x7f                  	// #127
  411f54:	mov	w10, w9
  411f58:	sdiv	x8, x10, x8
  411f5c:	ldur	x10, [x29, #-56]
  411f60:	subs	x8, x8, x10
  411f64:	b.ge	411f90 <wcrtomb@plt+0xf1e0>  // b.tcont
  411f68:	b	411f6c <wcrtomb@plt+0xf1bc>
  411f6c:	ldur	w8, [x29, #-56]
  411f70:	ldur	w9, [x29, #-40]
  411f74:	mul	w8, w8, w9
  411f78:	mov	w0, w8
  411f7c:	sxtb	x10, w0
  411f80:	stur	x10, [x29, #-64]
  411f84:	mov	w8, #0x1                   	// #1
  411f88:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  411f8c:	b	4133b4 <wcrtomb@plt+0x10604>
  411f90:	ldur	w8, [x29, #-56]
  411f94:	ldur	w9, [x29, #-40]
  411f98:	mul	w8, w8, w9
  411f9c:	mov	w0, w8
  411fa0:	sxtb	x10, w0
  411fa4:	stur	x10, [x29, #-64]
  411fa8:	mov	w8, wzr
  411fac:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  411fb0:	b	4133b4 <wcrtomb@plt+0x10604>
  411fb4:	ldur	x8, [x29, #-40]
  411fb8:	tbz	x8, #63, 4120ec <wcrtomb@plt+0xf33c>
  411fbc:	b	411fc0 <wcrtomb@plt+0xf210>
  411fc0:	ldur	x8, [x29, #-56]
  411fc4:	tbz	x8, #63, 41206c <wcrtomb@plt+0xf2bc>
  411fc8:	b	411fcc <wcrtomb@plt+0xf21c>
  411fcc:	mov	w8, wzr
  411fd0:	cbnz	w8, 411ff8 <wcrtomb@plt+0xf248>
  411fd4:	b	411fd8 <wcrtomb@plt+0xf228>
  411fd8:	ldur	x8, [x29, #-56]
  411fdc:	ldur	x9, [x29, #-40]
  411fe0:	mov	w10, #0xff                  	// #255
  411fe4:	mov	w11, w10
  411fe8:	sdiv	x9, x11, x9
  411fec:	subs	x8, x8, x9
  411ff0:	b.lt	4121a0 <wcrtomb@plt+0xf3f0>  // b.tstop
  411ff4:	b	4121c4 <wcrtomb@plt+0xf414>
  411ff8:	mov	w8, wzr
  411ffc:	cbnz	w8, 412018 <wcrtomb@plt+0xf268>
  412000:	b	412004 <wcrtomb@plt+0xf254>
  412004:	ldur	x8, [x29, #-40]
  412008:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41200c:	subs	x8, x8, x9
  412010:	b.eq	412028 <wcrtomb@plt+0xf278>  // b.none
  412014:	b	412034 <wcrtomb@plt+0xf284>
  412018:	ldur	x8, [x29, #-40]
  41201c:	subs	x8, x8, #0x1
  412020:	b.lt	412034 <wcrtomb@plt+0xf284>  // b.tstop
  412024:	b	412028 <wcrtomb@plt+0xf278>
  412028:	mov	x0, xzr
  41202c:	stur	x0, [x29, #-88]
  412030:	b	412054 <wcrtomb@plt+0xf2a4>
  412034:	ldur	x8, [x29, #-40]
  412038:	mov	x9, xzr
  41203c:	subs	x8, x9, x8
  412040:	mov	w10, #0xff                  	// #255
  412044:	mov	w9, w10
  412048:	sdiv	x8, x9, x8
  41204c:	stur	x8, [x29, #-88]
  412050:	b	412054 <wcrtomb@plt+0xf2a4>
  412054:	ldur	x8, [x29, #-88]
  412058:	ldur	x9, [x29, #-56]
  41205c:	mvn	x9, x9
  412060:	subs	x8, x8, x9
  412064:	b.le	4121a0 <wcrtomb@plt+0xf3f0>
  412068:	b	4121c4 <wcrtomb@plt+0xf414>
  41206c:	mov	w8, wzr
  412070:	cbnz	w8, 412084 <wcrtomb@plt+0xf2d4>
  412074:	b	412078 <wcrtomb@plt+0xf2c8>
  412078:	mov	w8, wzr
  41207c:	cbnz	w8, 412090 <wcrtomb@plt+0xf2e0>
  412080:	b	4120dc <wcrtomb@plt+0xf32c>
  412084:	mov	w8, #0x1                   	// #1
  412088:	cbnz	w8, 4120dc <wcrtomb@plt+0xf32c>
  41208c:	b	412090 <wcrtomb@plt+0xf2e0>
  412090:	ldur	x8, [x29, #-40]
  412094:	adds	x8, x8, #0x1
  412098:	b.ne	4120dc <wcrtomb@plt+0xf32c>  // b.any
  41209c:	b	4120a0 <wcrtomb@plt+0xf2f0>
  4120a0:	mov	w8, wzr
  4120a4:	cbnz	w8, 4120bc <wcrtomb@plt+0xf30c>
  4120a8:	b	4120ac <wcrtomb@plt+0xf2fc>
  4120ac:	ldur	x8, [x29, #-56]
  4120b0:	subs	x8, x8, #0x0
  4120b4:	b.gt	4121a0 <wcrtomb@plt+0xf3f0>
  4120b8:	b	4121c4 <wcrtomb@plt+0xf414>
  4120bc:	ldur	x8, [x29, #-56]
  4120c0:	subs	x8, x8, #0x1
  4120c4:	b.lt	4121c4 <wcrtomb@plt+0xf414>  // b.tstop
  4120c8:	b	4120cc <wcrtomb@plt+0xf31c>
  4120cc:	ldur	x8, [x29, #-56]
  4120d0:	subs	x8, x8, #0x1
  4120d4:	tbz	x8, #63, 4121a0 <wcrtomb@plt+0xf3f0>
  4120d8:	b	4121c4 <wcrtomb@plt+0xf414>
  4120dc:	ldur	x8, [x29, #-56]
  4120e0:	subs	x8, x8, #0x0
  4120e4:	b.gt	4121a0 <wcrtomb@plt+0xf3f0>
  4120e8:	b	4121c4 <wcrtomb@plt+0xf414>
  4120ec:	ldur	x8, [x29, #-40]
  4120f0:	cbnz	x8, 412104 <wcrtomb@plt+0xf354>
  4120f4:	b	4120f8 <wcrtomb@plt+0xf348>
  4120f8:	mov	w8, wzr
  4120fc:	cbnz	w8, 4121a0 <wcrtomb@plt+0xf3f0>
  412100:	b	4121c4 <wcrtomb@plt+0xf414>
  412104:	ldur	x8, [x29, #-56]
  412108:	tbz	x8, #63, 412180 <wcrtomb@plt+0xf3d0>
  41210c:	b	412110 <wcrtomb@plt+0xf360>
  412110:	mov	w8, wzr
  412114:	cbnz	w8, 412128 <wcrtomb@plt+0xf378>
  412118:	b	41211c <wcrtomb@plt+0xf36c>
  41211c:	mov	w8, wzr
  412120:	cbnz	w8, 412134 <wcrtomb@plt+0xf384>
  412124:	b	412170 <wcrtomb@plt+0xf3c0>
  412128:	mov	w8, #0x1                   	// #1
  41212c:	cbnz	w8, 412170 <wcrtomb@plt+0xf3c0>
  412130:	b	412134 <wcrtomb@plt+0xf384>
  412134:	ldur	x8, [x29, #-56]
  412138:	adds	x8, x8, #0x1
  41213c:	b.ne	412170 <wcrtomb@plt+0xf3c0>  // b.any
  412140:	b	412144 <wcrtomb@plt+0xf394>
  412144:	mov	w8, wzr
  412148:	cbnz	w8, 412160 <wcrtomb@plt+0xf3b0>
  41214c:	b	412150 <wcrtomb@plt+0xf3a0>
  412150:	ldur	x8, [x29, #-40]
  412154:	subs	x8, x8, #0x0
  412158:	b.gt	4121a0 <wcrtomb@plt+0xf3f0>
  41215c:	b	4121c4 <wcrtomb@plt+0xf414>
  412160:	ldur	x8, [x29, #-40]
  412164:	subs	x8, x8, #0x1
  412168:	tbz	x8, #63, 4121a0 <wcrtomb@plt+0xf3f0>
  41216c:	b	4121c4 <wcrtomb@plt+0xf414>
  412170:	ldur	x8, [x29, #-40]
  412174:	subs	x8, x8, #0x0
  412178:	b.gt	4121a0 <wcrtomb@plt+0xf3f0>
  41217c:	b	4121c4 <wcrtomb@plt+0xf414>
  412180:	ldur	x8, [x29, #-40]
  412184:	mov	w9, #0xff                  	// #255
  412188:	mov	w10, w9
  41218c:	sdiv	x8, x10, x8
  412190:	ldur	x10, [x29, #-56]
  412194:	subs	x8, x8, x10
  412198:	b.ge	4121c4 <wcrtomb@plt+0xf414>  // b.tcont
  41219c:	b	4121a0 <wcrtomb@plt+0xf3f0>
  4121a0:	ldur	w8, [x29, #-56]
  4121a4:	ldur	w9, [x29, #-40]
  4121a8:	mul	w8, w8, w9
  4121ac:	mov	w0, w8
  4121b0:	and	x10, x0, #0xff
  4121b4:	stur	x10, [x29, #-64]
  4121b8:	mov	w8, #0x1                   	// #1
  4121bc:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  4121c0:	b	4133b4 <wcrtomb@plt+0x10604>
  4121c4:	ldur	w8, [x29, #-56]
  4121c8:	ldur	w9, [x29, #-40]
  4121cc:	mul	w8, w8, w9
  4121d0:	mov	w0, w8
  4121d4:	and	x10, x0, #0xff
  4121d8:	stur	x10, [x29, #-64]
  4121dc:	mov	w8, wzr
  4121e0:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  4121e4:	b	4133b4 <wcrtomb@plt+0x10604>
  4121e8:	mov	w8, #0x1                   	// #1
  4121ec:	cbnz	w8, 412690 <wcrtomb@plt+0xf8e0>
  4121f0:	b	4121f4 <wcrtomb@plt+0xf444>
  4121f4:	mov	w8, wzr
  4121f8:	cbnz	w8, 41245c <wcrtomb@plt+0xf6ac>
  4121fc:	b	412200 <wcrtomb@plt+0xf450>
  412200:	ldur	x8, [x29, #-40]
  412204:	tbz	x8, #63, 41234c <wcrtomb@plt+0xf59c>
  412208:	b	41220c <wcrtomb@plt+0xf45c>
  41220c:	ldur	x8, [x29, #-56]
  412210:	tbz	x8, #63, 4122b8 <wcrtomb@plt+0xf508>
  412214:	b	412218 <wcrtomb@plt+0xf468>
  412218:	mov	w8, wzr
  41221c:	cbnz	w8, 412244 <wcrtomb@plt+0xf494>
  412220:	b	412224 <wcrtomb@plt+0xf474>
  412224:	ldur	x8, [x29, #-56]
  412228:	ldur	x9, [x29, #-40]
  41222c:	mov	w10, #0x7fff                	// #32767
  412230:	mov	w11, w10
  412234:	sdiv	x9, x11, x9
  412238:	subs	x8, x8, x9
  41223c:	b.lt	412414 <wcrtomb@plt+0xf664>  // b.tstop
  412240:	b	412438 <wcrtomb@plt+0xf688>
  412244:	mov	w8, wzr
  412248:	cbnz	w8, 412264 <wcrtomb@plt+0xf4b4>
  41224c:	b	412250 <wcrtomb@plt+0xf4a0>
  412250:	ldur	x8, [x29, #-40]
  412254:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412258:	subs	x8, x8, x9
  41225c:	b.eq	412274 <wcrtomb@plt+0xf4c4>  // b.none
  412260:	b	412280 <wcrtomb@plt+0xf4d0>
  412264:	ldur	x8, [x29, #-40]
  412268:	subs	x8, x8, #0x1
  41226c:	b.lt	412280 <wcrtomb@plt+0xf4d0>  // b.tstop
  412270:	b	412274 <wcrtomb@plt+0xf4c4>
  412274:	mov	x0, xzr
  412278:	stur	x0, [x29, #-96]
  41227c:	b	4122a0 <wcrtomb@plt+0xf4f0>
  412280:	ldur	x8, [x29, #-40]
  412284:	mov	x9, xzr
  412288:	subs	x8, x9, x8
  41228c:	mov	w10, #0x7fff                	// #32767
  412290:	mov	w9, w10
  412294:	sdiv	x8, x9, x8
  412298:	stur	x8, [x29, #-96]
  41229c:	b	4122a0 <wcrtomb@plt+0xf4f0>
  4122a0:	ldur	x8, [x29, #-96]
  4122a4:	ldur	x9, [x29, #-56]
  4122a8:	mvn	x9, x9
  4122ac:	subs	x8, x8, x9
  4122b0:	b.le	412414 <wcrtomb@plt+0xf664>
  4122b4:	b	412438 <wcrtomb@plt+0xf688>
  4122b8:	mov	w8, wzr
  4122bc:	cbnz	w8, 4122d0 <wcrtomb@plt+0xf520>
  4122c0:	b	4122c4 <wcrtomb@plt+0xf514>
  4122c4:	mov	w8, wzr
  4122c8:	cbnz	w8, 4122dc <wcrtomb@plt+0xf52c>
  4122cc:	b	412330 <wcrtomb@plt+0xf580>
  4122d0:	mov	w8, #0x1                   	// #1
  4122d4:	cbnz	w8, 412330 <wcrtomb@plt+0xf580>
  4122d8:	b	4122dc <wcrtomb@plt+0xf52c>
  4122dc:	ldur	x8, [x29, #-40]
  4122e0:	adds	x8, x8, #0x1
  4122e4:	b.ne	412330 <wcrtomb@plt+0xf580>  // b.any
  4122e8:	b	4122ec <wcrtomb@plt+0xf53c>
  4122ec:	mov	w8, wzr
  4122f0:	cbnz	w8, 41230c <wcrtomb@plt+0xf55c>
  4122f4:	b	4122f8 <wcrtomb@plt+0xf548>
  4122f8:	ldur	x8, [x29, #-56]
  4122fc:	subs	x8, x8, #0x8, lsl #12
  412300:	subs	x8, x8, #0x0
  412304:	b.gt	412414 <wcrtomb@plt+0xf664>
  412308:	b	412438 <wcrtomb@plt+0xf688>
  41230c:	ldur	x8, [x29, #-56]
  412310:	subs	x8, x8, #0x1
  412314:	b.lt	412438 <wcrtomb@plt+0xf688>  // b.tstop
  412318:	b	41231c <wcrtomb@plt+0xf56c>
  41231c:	ldur	x8, [x29, #-56]
  412320:	subs	x8, x8, #0x1
  412324:	subs	x8, x8, #0x8, lsl #12
  412328:	b.ge	412414 <wcrtomb@plt+0xf664>  // b.tcont
  41232c:	b	412438 <wcrtomb@plt+0xf688>
  412330:	ldur	x8, [x29, #-40]
  412334:	mov	x9, #0xffffffffffff8000    	// #-32768
  412338:	sdiv	x8, x9, x8
  41233c:	ldur	x9, [x29, #-56]
  412340:	subs	x8, x8, x9
  412344:	b.lt	412414 <wcrtomb@plt+0xf664>  // b.tstop
  412348:	b	412438 <wcrtomb@plt+0xf688>
  41234c:	ldur	x8, [x29, #-40]
  412350:	cbnz	x8, 412364 <wcrtomb@plt+0xf5b4>
  412354:	b	412358 <wcrtomb@plt+0xf5a8>
  412358:	mov	w8, wzr
  41235c:	cbnz	w8, 412414 <wcrtomb@plt+0xf664>
  412360:	b	412438 <wcrtomb@plt+0xf688>
  412364:	ldur	x8, [x29, #-56]
  412368:	tbz	x8, #63, 4123f4 <wcrtomb@plt+0xf644>
  41236c:	b	412370 <wcrtomb@plt+0xf5c0>
  412370:	mov	w8, wzr
  412374:	cbnz	w8, 412388 <wcrtomb@plt+0xf5d8>
  412378:	b	41237c <wcrtomb@plt+0xf5cc>
  41237c:	mov	w8, wzr
  412380:	cbnz	w8, 412394 <wcrtomb@plt+0xf5e4>
  412384:	b	4123d8 <wcrtomb@plt+0xf628>
  412388:	mov	w8, #0x1                   	// #1
  41238c:	cbnz	w8, 4123d8 <wcrtomb@plt+0xf628>
  412390:	b	412394 <wcrtomb@plt+0xf5e4>
  412394:	ldur	x8, [x29, #-56]
  412398:	adds	x8, x8, #0x1
  41239c:	b.ne	4123d8 <wcrtomb@plt+0xf628>  // b.any
  4123a0:	b	4123a4 <wcrtomb@plt+0xf5f4>
  4123a4:	mov	w8, wzr
  4123a8:	cbnz	w8, 4123c4 <wcrtomb@plt+0xf614>
  4123ac:	b	4123b0 <wcrtomb@plt+0xf600>
  4123b0:	ldur	x8, [x29, #-40]
  4123b4:	subs	x8, x8, #0x8, lsl #12
  4123b8:	subs	x8, x8, #0x0
  4123bc:	b.gt	412414 <wcrtomb@plt+0xf664>
  4123c0:	b	412438 <wcrtomb@plt+0xf688>
  4123c4:	ldur	x8, [x29, #-40]
  4123c8:	subs	x8, x8, #0x1
  4123cc:	subs	x8, x8, #0x8, lsl #12
  4123d0:	b.ge	412414 <wcrtomb@plt+0xf664>  // b.tcont
  4123d4:	b	412438 <wcrtomb@plt+0xf688>
  4123d8:	ldur	x8, [x29, #-56]
  4123dc:	mov	x9, #0xffffffffffff8000    	// #-32768
  4123e0:	sdiv	x8, x9, x8
  4123e4:	ldur	x9, [x29, #-40]
  4123e8:	subs	x8, x8, x9
  4123ec:	b.lt	412414 <wcrtomb@plt+0xf664>  // b.tstop
  4123f0:	b	412438 <wcrtomb@plt+0xf688>
  4123f4:	ldur	x8, [x29, #-40]
  4123f8:	mov	w9, #0x7fff                	// #32767
  4123fc:	mov	w10, w9
  412400:	sdiv	x8, x10, x8
  412404:	ldur	x10, [x29, #-56]
  412408:	subs	x8, x8, x10
  41240c:	b.ge	412438 <wcrtomb@plt+0xf688>  // b.tcont
  412410:	b	412414 <wcrtomb@plt+0xf664>
  412414:	ldur	w8, [x29, #-56]
  412418:	ldur	w9, [x29, #-40]
  41241c:	mul	w8, w8, w9
  412420:	mov	w0, w8
  412424:	sxth	x10, w0
  412428:	stur	x10, [x29, #-64]
  41242c:	mov	w8, #0x1                   	// #1
  412430:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  412434:	b	4133b4 <wcrtomb@plt+0x10604>
  412438:	ldur	w8, [x29, #-56]
  41243c:	ldur	w9, [x29, #-40]
  412440:	mul	w8, w8, w9
  412444:	mov	w0, w8
  412448:	sxth	x10, w0
  41244c:	stur	x10, [x29, #-64]
  412450:	mov	w8, wzr
  412454:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  412458:	b	4133b4 <wcrtomb@plt+0x10604>
  41245c:	ldur	x8, [x29, #-40]
  412460:	tbz	x8, #63, 412594 <wcrtomb@plt+0xf7e4>
  412464:	b	412468 <wcrtomb@plt+0xf6b8>
  412468:	ldur	x8, [x29, #-56]
  41246c:	tbz	x8, #63, 412514 <wcrtomb@plt+0xf764>
  412470:	b	412474 <wcrtomb@plt+0xf6c4>
  412474:	mov	w8, wzr
  412478:	cbnz	w8, 4124a0 <wcrtomb@plt+0xf6f0>
  41247c:	b	412480 <wcrtomb@plt+0xf6d0>
  412480:	ldur	x8, [x29, #-56]
  412484:	ldur	x9, [x29, #-40]
  412488:	mov	w10, #0xffff                	// #65535
  41248c:	mov	w11, w10
  412490:	sdiv	x9, x11, x9
  412494:	subs	x8, x8, x9
  412498:	b.lt	412648 <wcrtomb@plt+0xf898>  // b.tstop
  41249c:	b	41266c <wcrtomb@plt+0xf8bc>
  4124a0:	mov	w8, wzr
  4124a4:	cbnz	w8, 4124c0 <wcrtomb@plt+0xf710>
  4124a8:	b	4124ac <wcrtomb@plt+0xf6fc>
  4124ac:	ldur	x8, [x29, #-40]
  4124b0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4124b4:	subs	x8, x8, x9
  4124b8:	b.eq	4124d0 <wcrtomb@plt+0xf720>  // b.none
  4124bc:	b	4124dc <wcrtomb@plt+0xf72c>
  4124c0:	ldur	x8, [x29, #-40]
  4124c4:	subs	x8, x8, #0x1
  4124c8:	b.lt	4124dc <wcrtomb@plt+0xf72c>  // b.tstop
  4124cc:	b	4124d0 <wcrtomb@plt+0xf720>
  4124d0:	mov	x0, xzr
  4124d4:	stur	x0, [x29, #-104]
  4124d8:	b	4124fc <wcrtomb@plt+0xf74c>
  4124dc:	ldur	x8, [x29, #-40]
  4124e0:	mov	x9, xzr
  4124e4:	subs	x8, x9, x8
  4124e8:	mov	w10, #0xffff                	// #65535
  4124ec:	mov	w9, w10
  4124f0:	sdiv	x8, x9, x8
  4124f4:	stur	x8, [x29, #-104]
  4124f8:	b	4124fc <wcrtomb@plt+0xf74c>
  4124fc:	ldur	x8, [x29, #-104]
  412500:	ldur	x9, [x29, #-56]
  412504:	mvn	x9, x9
  412508:	subs	x8, x8, x9
  41250c:	b.le	412648 <wcrtomb@plt+0xf898>
  412510:	b	41266c <wcrtomb@plt+0xf8bc>
  412514:	mov	w8, wzr
  412518:	cbnz	w8, 41252c <wcrtomb@plt+0xf77c>
  41251c:	b	412520 <wcrtomb@plt+0xf770>
  412520:	mov	w8, wzr
  412524:	cbnz	w8, 412538 <wcrtomb@plt+0xf788>
  412528:	b	412584 <wcrtomb@plt+0xf7d4>
  41252c:	mov	w8, #0x1                   	// #1
  412530:	cbnz	w8, 412584 <wcrtomb@plt+0xf7d4>
  412534:	b	412538 <wcrtomb@plt+0xf788>
  412538:	ldur	x8, [x29, #-40]
  41253c:	adds	x8, x8, #0x1
  412540:	b.ne	412584 <wcrtomb@plt+0xf7d4>  // b.any
  412544:	b	412548 <wcrtomb@plt+0xf798>
  412548:	mov	w8, wzr
  41254c:	cbnz	w8, 412564 <wcrtomb@plt+0xf7b4>
  412550:	b	412554 <wcrtomb@plt+0xf7a4>
  412554:	ldur	x8, [x29, #-56]
  412558:	subs	x8, x8, #0x0
  41255c:	b.gt	412648 <wcrtomb@plt+0xf898>
  412560:	b	41266c <wcrtomb@plt+0xf8bc>
  412564:	ldur	x8, [x29, #-56]
  412568:	subs	x8, x8, #0x1
  41256c:	b.lt	41266c <wcrtomb@plt+0xf8bc>  // b.tstop
  412570:	b	412574 <wcrtomb@plt+0xf7c4>
  412574:	ldur	x8, [x29, #-56]
  412578:	subs	x8, x8, #0x1
  41257c:	tbz	x8, #63, 412648 <wcrtomb@plt+0xf898>
  412580:	b	41266c <wcrtomb@plt+0xf8bc>
  412584:	ldur	x8, [x29, #-56]
  412588:	subs	x8, x8, #0x0
  41258c:	b.gt	412648 <wcrtomb@plt+0xf898>
  412590:	b	41266c <wcrtomb@plt+0xf8bc>
  412594:	ldur	x8, [x29, #-40]
  412598:	cbnz	x8, 4125ac <wcrtomb@plt+0xf7fc>
  41259c:	b	4125a0 <wcrtomb@plt+0xf7f0>
  4125a0:	mov	w8, wzr
  4125a4:	cbnz	w8, 412648 <wcrtomb@plt+0xf898>
  4125a8:	b	41266c <wcrtomb@plt+0xf8bc>
  4125ac:	ldur	x8, [x29, #-56]
  4125b0:	tbz	x8, #63, 412628 <wcrtomb@plt+0xf878>
  4125b4:	b	4125b8 <wcrtomb@plt+0xf808>
  4125b8:	mov	w8, wzr
  4125bc:	cbnz	w8, 4125d0 <wcrtomb@plt+0xf820>
  4125c0:	b	4125c4 <wcrtomb@plt+0xf814>
  4125c4:	mov	w8, wzr
  4125c8:	cbnz	w8, 4125dc <wcrtomb@plt+0xf82c>
  4125cc:	b	412618 <wcrtomb@plt+0xf868>
  4125d0:	mov	w8, #0x1                   	// #1
  4125d4:	cbnz	w8, 412618 <wcrtomb@plt+0xf868>
  4125d8:	b	4125dc <wcrtomb@plt+0xf82c>
  4125dc:	ldur	x8, [x29, #-56]
  4125e0:	adds	x8, x8, #0x1
  4125e4:	b.ne	412618 <wcrtomb@plt+0xf868>  // b.any
  4125e8:	b	4125ec <wcrtomb@plt+0xf83c>
  4125ec:	mov	w8, wzr
  4125f0:	cbnz	w8, 412608 <wcrtomb@plt+0xf858>
  4125f4:	b	4125f8 <wcrtomb@plt+0xf848>
  4125f8:	ldur	x8, [x29, #-40]
  4125fc:	subs	x8, x8, #0x0
  412600:	b.gt	412648 <wcrtomb@plt+0xf898>
  412604:	b	41266c <wcrtomb@plt+0xf8bc>
  412608:	ldur	x8, [x29, #-40]
  41260c:	subs	x8, x8, #0x1
  412610:	tbz	x8, #63, 412648 <wcrtomb@plt+0xf898>
  412614:	b	41266c <wcrtomb@plt+0xf8bc>
  412618:	ldur	x8, [x29, #-40]
  41261c:	subs	x8, x8, #0x0
  412620:	b.gt	412648 <wcrtomb@plt+0xf898>
  412624:	b	41266c <wcrtomb@plt+0xf8bc>
  412628:	ldur	x8, [x29, #-40]
  41262c:	mov	w9, #0xffff                	// #65535
  412630:	mov	w10, w9
  412634:	sdiv	x8, x10, x8
  412638:	ldur	x10, [x29, #-56]
  41263c:	subs	x8, x8, x10
  412640:	b.ge	41266c <wcrtomb@plt+0xf8bc>  // b.tcont
  412644:	b	412648 <wcrtomb@plt+0xf898>
  412648:	ldur	w8, [x29, #-56]
  41264c:	ldur	w9, [x29, #-40]
  412650:	mul	w8, w8, w9
  412654:	mov	w0, w8
  412658:	and	x10, x0, #0xffff
  41265c:	stur	x10, [x29, #-64]
  412660:	mov	w8, #0x1                   	// #1
  412664:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  412668:	b	4133b4 <wcrtomb@plt+0x10604>
  41266c:	ldur	w8, [x29, #-56]
  412670:	ldur	w9, [x29, #-40]
  412674:	mul	w8, w8, w9
  412678:	mov	w0, w8
  41267c:	and	x10, x0, #0xffff
  412680:	stur	x10, [x29, #-64]
  412684:	mov	w8, wzr
  412688:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  41268c:	b	4133b4 <wcrtomb@plt+0x10604>
  412690:	mov	w8, #0x1                   	// #1
  412694:	cbnz	w8, 412b48 <wcrtomb@plt+0xfd98>
  412698:	b	41269c <wcrtomb@plt+0xf8ec>
  41269c:	mov	w8, wzr
  4126a0:	cbnz	w8, 41291c <wcrtomb@plt+0xfb6c>
  4126a4:	b	4126a8 <wcrtomb@plt+0xf8f8>
  4126a8:	ldur	x8, [x29, #-40]
  4126ac:	tbz	x8, #63, 412800 <wcrtomb@plt+0xfa50>
  4126b0:	b	4126b4 <wcrtomb@plt+0xf904>
  4126b4:	ldur	x8, [x29, #-56]
  4126b8:	tbz	x8, #63, 412760 <wcrtomb@plt+0xf9b0>
  4126bc:	b	4126c0 <wcrtomb@plt+0xf910>
  4126c0:	mov	w8, wzr
  4126c4:	cbnz	w8, 4126ec <wcrtomb@plt+0xf93c>
  4126c8:	b	4126cc <wcrtomb@plt+0xf91c>
  4126cc:	ldur	x8, [x29, #-56]
  4126d0:	ldur	x9, [x29, #-40]
  4126d4:	mov	w10, #0x7fffffff            	// #2147483647
  4126d8:	mov	w11, w10
  4126dc:	sdiv	x9, x11, x9
  4126e0:	subs	x8, x8, x9
  4126e4:	b.lt	4128d4 <wcrtomb@plt+0xfb24>  // b.tstop
  4126e8:	b	4128f8 <wcrtomb@plt+0xfb48>
  4126ec:	mov	w8, wzr
  4126f0:	cbnz	w8, 41270c <wcrtomb@plt+0xf95c>
  4126f4:	b	4126f8 <wcrtomb@plt+0xf948>
  4126f8:	ldur	x8, [x29, #-40]
  4126fc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412700:	subs	x8, x8, x9
  412704:	b.eq	41271c <wcrtomb@plt+0xf96c>  // b.none
  412708:	b	412728 <wcrtomb@plt+0xf978>
  41270c:	ldur	x8, [x29, #-40]
  412710:	subs	x8, x8, #0x1
  412714:	b.lt	412728 <wcrtomb@plt+0xf978>  // b.tstop
  412718:	b	41271c <wcrtomb@plt+0xf96c>
  41271c:	mov	x0, xzr
  412720:	stur	x0, [x29, #-112]
  412724:	b	412748 <wcrtomb@plt+0xf998>
  412728:	ldur	x8, [x29, #-40]
  41272c:	mov	x9, xzr
  412730:	subs	x8, x9, x8
  412734:	mov	w10, #0x7fffffff            	// #2147483647
  412738:	mov	w9, w10
  41273c:	sdiv	x8, x9, x8
  412740:	stur	x8, [x29, #-112]
  412744:	b	412748 <wcrtomb@plt+0xf998>
  412748:	ldur	x8, [x29, #-112]
  41274c:	ldur	x9, [x29, #-56]
  412750:	mvn	x9, x9
  412754:	subs	x8, x8, x9
  412758:	b.le	4128d4 <wcrtomb@plt+0xfb24>
  41275c:	b	4128f8 <wcrtomb@plt+0xfb48>
  412760:	mov	w8, wzr
  412764:	cbnz	w8, 412778 <wcrtomb@plt+0xf9c8>
  412768:	b	41276c <wcrtomb@plt+0xf9bc>
  41276c:	mov	w8, wzr
  412770:	cbnz	w8, 412784 <wcrtomb@plt+0xf9d4>
  412774:	b	4127e4 <wcrtomb@plt+0xfa34>
  412778:	mov	w8, #0x1                   	// #1
  41277c:	cbnz	w8, 4127e4 <wcrtomb@plt+0xfa34>
  412780:	b	412784 <wcrtomb@plt+0xf9d4>
  412784:	ldur	x8, [x29, #-40]
  412788:	adds	x8, x8, #0x1
  41278c:	b.ne	4127e4 <wcrtomb@plt+0xfa34>  // b.any
  412790:	b	412794 <wcrtomb@plt+0xf9e4>
  412794:	mov	w8, wzr
  412798:	cbnz	w8, 4127b8 <wcrtomb@plt+0xfa08>
  41279c:	b	4127a0 <wcrtomb@plt+0xf9f0>
  4127a0:	ldur	x8, [x29, #-56]
  4127a4:	mov	x9, #0xffffffff80000000    	// #-2147483648
  4127a8:	add	x8, x8, x9
  4127ac:	subs	x8, x8, #0x0
  4127b0:	b.gt	4128d4 <wcrtomb@plt+0xfb24>
  4127b4:	b	4128f8 <wcrtomb@plt+0xfb48>
  4127b8:	ldur	x8, [x29, #-56]
  4127bc:	subs	x8, x8, #0x1
  4127c0:	b.lt	4128f8 <wcrtomb@plt+0xfb48>  // b.tstop
  4127c4:	b	4127c8 <wcrtomb@plt+0xfa18>
  4127c8:	ldur	x8, [x29, #-56]
  4127cc:	subs	x8, x8, #0x1
  4127d0:	mov	w9, #0x7fffffff            	// #2147483647
  4127d4:	mov	w10, w9
  4127d8:	subs	x8, x8, x10
  4127dc:	b.gt	4128d4 <wcrtomb@plt+0xfb24>
  4127e0:	b	4128f8 <wcrtomb@plt+0xfb48>
  4127e4:	ldur	x8, [x29, #-40]
  4127e8:	mov	x9, #0xffffffff80000000    	// #-2147483648
  4127ec:	sdiv	x8, x9, x8
  4127f0:	ldur	x9, [x29, #-56]
  4127f4:	subs	x8, x8, x9
  4127f8:	b.lt	4128d4 <wcrtomb@plt+0xfb24>  // b.tstop
  4127fc:	b	4128f8 <wcrtomb@plt+0xfb48>
  412800:	ldur	x8, [x29, #-40]
  412804:	cbnz	x8, 412818 <wcrtomb@plt+0xfa68>
  412808:	b	41280c <wcrtomb@plt+0xfa5c>
  41280c:	mov	w8, wzr
  412810:	cbnz	w8, 4128d4 <wcrtomb@plt+0xfb24>
  412814:	b	4128f8 <wcrtomb@plt+0xfb48>
  412818:	ldur	x8, [x29, #-56]
  41281c:	tbz	x8, #63, 4128b4 <wcrtomb@plt+0xfb04>
  412820:	b	412824 <wcrtomb@plt+0xfa74>
  412824:	mov	w8, wzr
  412828:	cbnz	w8, 41283c <wcrtomb@plt+0xfa8c>
  41282c:	b	412830 <wcrtomb@plt+0xfa80>
  412830:	mov	w8, wzr
  412834:	cbnz	w8, 412848 <wcrtomb@plt+0xfa98>
  412838:	b	412898 <wcrtomb@plt+0xfae8>
  41283c:	mov	w8, #0x1                   	// #1
  412840:	cbnz	w8, 412898 <wcrtomb@plt+0xfae8>
  412844:	b	412848 <wcrtomb@plt+0xfa98>
  412848:	ldur	x8, [x29, #-56]
  41284c:	adds	x8, x8, #0x1
  412850:	b.ne	412898 <wcrtomb@plt+0xfae8>  // b.any
  412854:	b	412858 <wcrtomb@plt+0xfaa8>
  412858:	mov	w8, wzr
  41285c:	cbnz	w8, 41287c <wcrtomb@plt+0xfacc>
  412860:	b	412864 <wcrtomb@plt+0xfab4>
  412864:	ldur	x8, [x29, #-40]
  412868:	mov	x9, #0xffffffff80000000    	// #-2147483648
  41286c:	add	x8, x8, x9
  412870:	subs	x8, x8, #0x0
  412874:	b.gt	4128d4 <wcrtomb@plt+0xfb24>
  412878:	b	4128f8 <wcrtomb@plt+0xfb48>
  41287c:	ldur	x8, [x29, #-40]
  412880:	subs	x8, x8, #0x1
  412884:	mov	w9, #0x7fffffff            	// #2147483647
  412888:	mov	w10, w9
  41288c:	subs	x8, x8, x10
  412890:	b.gt	4128d4 <wcrtomb@plt+0xfb24>
  412894:	b	4128f8 <wcrtomb@plt+0xfb48>
  412898:	ldur	x8, [x29, #-56]
  41289c:	mov	x9, #0xffffffff80000000    	// #-2147483648
  4128a0:	sdiv	x8, x9, x8
  4128a4:	ldur	x9, [x29, #-40]
  4128a8:	subs	x8, x8, x9
  4128ac:	b.lt	4128d4 <wcrtomb@plt+0xfb24>  // b.tstop
  4128b0:	b	4128f8 <wcrtomb@plt+0xfb48>
  4128b4:	ldur	x8, [x29, #-40]
  4128b8:	mov	w9, #0x7fffffff            	// #2147483647
  4128bc:	mov	w10, w9
  4128c0:	sdiv	x8, x10, x8
  4128c4:	ldur	x10, [x29, #-56]
  4128c8:	subs	x8, x8, x10
  4128cc:	b.ge	4128f8 <wcrtomb@plt+0xfb48>  // b.tcont
  4128d0:	b	4128d4 <wcrtomb@plt+0xfb24>
  4128d4:	ldur	w8, [x29, #-56]
  4128d8:	ldur	w9, [x29, #-40]
  4128dc:	mul	w8, w8, w9
  4128e0:	mov	w0, w8
  4128e4:	sxtw	x10, w0
  4128e8:	stur	x10, [x29, #-64]
  4128ec:	mov	w8, #0x1                   	// #1
  4128f0:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  4128f4:	b	4133b4 <wcrtomb@plt+0x10604>
  4128f8:	ldur	w8, [x29, #-56]
  4128fc:	ldur	w9, [x29, #-40]
  412900:	mul	w8, w8, w9
  412904:	mov	w0, w8
  412908:	sxtw	x10, w0
  41290c:	stur	x10, [x29, #-64]
  412910:	mov	w8, wzr
  412914:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  412918:	b	4133b4 <wcrtomb@plt+0x10604>
  41291c:	ldur	x8, [x29, #-40]
  412920:	tbz	x8, #63, 412a54 <wcrtomb@plt+0xfca4>
  412924:	b	412928 <wcrtomb@plt+0xfb78>
  412928:	ldur	x8, [x29, #-56]
  41292c:	tbz	x8, #63, 4129d4 <wcrtomb@plt+0xfc24>
  412930:	b	412934 <wcrtomb@plt+0xfb84>
  412934:	mov	w8, wzr
  412938:	cbnz	w8, 412960 <wcrtomb@plt+0xfbb0>
  41293c:	b	412940 <wcrtomb@plt+0xfb90>
  412940:	ldur	x8, [x29, #-56]
  412944:	ldur	x9, [x29, #-40]
  412948:	mov	w10, #0xffffffff            	// #-1
  41294c:	mov	w11, w10
  412950:	sdiv	x9, x11, x9
  412954:	subs	x8, x8, x9
  412958:	b.lt	412b08 <wcrtomb@plt+0xfd58>  // b.tstop
  41295c:	b	412b28 <wcrtomb@plt+0xfd78>
  412960:	mov	w8, wzr
  412964:	cbnz	w8, 412980 <wcrtomb@plt+0xfbd0>
  412968:	b	41296c <wcrtomb@plt+0xfbbc>
  41296c:	ldur	x8, [x29, #-40]
  412970:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412974:	subs	x8, x8, x9
  412978:	b.eq	412990 <wcrtomb@plt+0xfbe0>  // b.none
  41297c:	b	41299c <wcrtomb@plt+0xfbec>
  412980:	ldur	x8, [x29, #-40]
  412984:	subs	x8, x8, #0x1
  412988:	b.lt	41299c <wcrtomb@plt+0xfbec>  // b.tstop
  41298c:	b	412990 <wcrtomb@plt+0xfbe0>
  412990:	mov	x0, xzr
  412994:	str	x0, [sp, #120]
  412998:	b	4129bc <wcrtomb@plt+0xfc0c>
  41299c:	ldur	x8, [x29, #-40]
  4129a0:	mov	x9, xzr
  4129a4:	subs	x8, x9, x8
  4129a8:	mov	w10, #0xffffffff            	// #-1
  4129ac:	mov	w9, w10
  4129b0:	sdiv	x8, x9, x8
  4129b4:	str	x8, [sp, #120]
  4129b8:	b	4129bc <wcrtomb@plt+0xfc0c>
  4129bc:	ldr	x8, [sp, #120]
  4129c0:	ldur	x9, [x29, #-56]
  4129c4:	mvn	x9, x9
  4129c8:	subs	x8, x8, x9
  4129cc:	b.le	412b08 <wcrtomb@plt+0xfd58>
  4129d0:	b	412b28 <wcrtomb@plt+0xfd78>
  4129d4:	mov	w8, wzr
  4129d8:	cbnz	w8, 4129ec <wcrtomb@plt+0xfc3c>
  4129dc:	b	4129e0 <wcrtomb@plt+0xfc30>
  4129e0:	mov	w8, wzr
  4129e4:	cbnz	w8, 4129f8 <wcrtomb@plt+0xfc48>
  4129e8:	b	412a44 <wcrtomb@plt+0xfc94>
  4129ec:	mov	w8, #0x1                   	// #1
  4129f0:	cbnz	w8, 412a44 <wcrtomb@plt+0xfc94>
  4129f4:	b	4129f8 <wcrtomb@plt+0xfc48>
  4129f8:	ldur	x8, [x29, #-40]
  4129fc:	adds	x8, x8, #0x1
  412a00:	b.ne	412a44 <wcrtomb@plt+0xfc94>  // b.any
  412a04:	b	412a08 <wcrtomb@plt+0xfc58>
  412a08:	mov	w8, wzr
  412a0c:	cbnz	w8, 412a24 <wcrtomb@plt+0xfc74>
  412a10:	b	412a14 <wcrtomb@plt+0xfc64>
  412a14:	ldur	x8, [x29, #-56]
  412a18:	subs	x8, x8, #0x0
  412a1c:	b.gt	412b08 <wcrtomb@plt+0xfd58>
  412a20:	b	412b28 <wcrtomb@plt+0xfd78>
  412a24:	ldur	x8, [x29, #-56]
  412a28:	subs	x8, x8, #0x1
  412a2c:	b.lt	412b28 <wcrtomb@plt+0xfd78>  // b.tstop
  412a30:	b	412a34 <wcrtomb@plt+0xfc84>
  412a34:	ldur	x8, [x29, #-56]
  412a38:	subs	x8, x8, #0x1
  412a3c:	tbz	x8, #63, 412b08 <wcrtomb@plt+0xfd58>
  412a40:	b	412b28 <wcrtomb@plt+0xfd78>
  412a44:	ldur	x8, [x29, #-56]
  412a48:	subs	x8, x8, #0x0
  412a4c:	b.gt	412b08 <wcrtomb@plt+0xfd58>
  412a50:	b	412b28 <wcrtomb@plt+0xfd78>
  412a54:	ldur	x8, [x29, #-40]
  412a58:	cbnz	x8, 412a6c <wcrtomb@plt+0xfcbc>
  412a5c:	b	412a60 <wcrtomb@plt+0xfcb0>
  412a60:	mov	w8, wzr
  412a64:	cbnz	w8, 412b08 <wcrtomb@plt+0xfd58>
  412a68:	b	412b28 <wcrtomb@plt+0xfd78>
  412a6c:	ldur	x8, [x29, #-56]
  412a70:	tbz	x8, #63, 412ae8 <wcrtomb@plt+0xfd38>
  412a74:	b	412a78 <wcrtomb@plt+0xfcc8>
  412a78:	mov	w8, wzr
  412a7c:	cbnz	w8, 412a90 <wcrtomb@plt+0xfce0>
  412a80:	b	412a84 <wcrtomb@plt+0xfcd4>
  412a84:	mov	w8, wzr
  412a88:	cbnz	w8, 412a9c <wcrtomb@plt+0xfcec>
  412a8c:	b	412ad8 <wcrtomb@plt+0xfd28>
  412a90:	mov	w8, #0x1                   	// #1
  412a94:	cbnz	w8, 412ad8 <wcrtomb@plt+0xfd28>
  412a98:	b	412a9c <wcrtomb@plt+0xfcec>
  412a9c:	ldur	x8, [x29, #-56]
  412aa0:	adds	x8, x8, #0x1
  412aa4:	b.ne	412ad8 <wcrtomb@plt+0xfd28>  // b.any
  412aa8:	b	412aac <wcrtomb@plt+0xfcfc>
  412aac:	mov	w8, wzr
  412ab0:	cbnz	w8, 412ac8 <wcrtomb@plt+0xfd18>
  412ab4:	b	412ab8 <wcrtomb@plt+0xfd08>
  412ab8:	ldur	x8, [x29, #-40]
  412abc:	subs	x8, x8, #0x0
  412ac0:	b.gt	412b08 <wcrtomb@plt+0xfd58>
  412ac4:	b	412b28 <wcrtomb@plt+0xfd78>
  412ac8:	ldur	x8, [x29, #-40]
  412acc:	subs	x8, x8, #0x1
  412ad0:	tbz	x8, #63, 412b08 <wcrtomb@plt+0xfd58>
  412ad4:	b	412b28 <wcrtomb@plt+0xfd78>
  412ad8:	ldur	x8, [x29, #-40]
  412adc:	subs	x8, x8, #0x0
  412ae0:	b.gt	412b08 <wcrtomb@plt+0xfd58>
  412ae4:	b	412b28 <wcrtomb@plt+0xfd78>
  412ae8:	ldur	x8, [x29, #-40]
  412aec:	mov	w9, #0xffffffff            	// #-1
  412af0:	mov	w10, w9
  412af4:	sdiv	x8, x10, x8
  412af8:	ldur	x10, [x29, #-56]
  412afc:	subs	x8, x8, x10
  412b00:	b.ge	412b28 <wcrtomb@plt+0xfd78>  // b.tcont
  412b04:	b	412b08 <wcrtomb@plt+0xfd58>
  412b08:	ldur	w8, [x29, #-56]
  412b0c:	ldur	w9, [x29, #-40]
  412b10:	mul	w8, w8, w9
  412b14:	mov	w10, w8
  412b18:	stur	x10, [x29, #-64]
  412b1c:	mov	w8, #0x1                   	// #1
  412b20:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  412b24:	b	4133b4 <wcrtomb@plt+0x10604>
  412b28:	ldur	w8, [x29, #-56]
  412b2c:	ldur	w9, [x29, #-40]
  412b30:	mul	w8, w8, w9
  412b34:	mov	w10, w8
  412b38:	stur	x10, [x29, #-64]
  412b3c:	mov	w8, wzr
  412b40:	cbnz	w8, 4133c4 <wcrtomb@plt+0x10614>
  412b44:	b	4133b4 <wcrtomb@plt+0x10604>
  412b48:	mov	w8, wzr
  412b4c:	cbnz	w8, 412f84 <wcrtomb@plt+0x101d4>
  412b50:	b	412b54 <wcrtomb@plt+0xfda4>
  412b54:	mov	w8, wzr
  412b58:	cbnz	w8, 412d68 <wcrtomb@plt+0xffb8>
  412b5c:	b	412b60 <wcrtomb@plt+0xfdb0>
  412b60:	ldur	x8, [x29, #-40]
  412b64:	tbz	x8, #63, 412c88 <wcrtomb@plt+0xfed8>
  412b68:	b	412b6c <wcrtomb@plt+0xfdbc>
  412b6c:	ldur	x8, [x29, #-56]
  412b70:	tbz	x8, #63, 412c10 <wcrtomb@plt+0xfe60>
  412b74:	b	412b78 <wcrtomb@plt+0xfdc8>
  412b78:	mov	w8, wzr
  412b7c:	cbnz	w8, 412ba0 <wcrtomb@plt+0xfdf0>
  412b80:	b	412b84 <wcrtomb@plt+0xfdd4>
  412b84:	ldur	x8, [x29, #-56]
  412b88:	ldur	x9, [x29, #-40]
  412b8c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  412b90:	sdiv	x9, x10, x9
  412b94:	subs	x8, x8, x9
  412b98:	b.lt	412d30 <wcrtomb@plt+0xff80>  // b.tstop
  412b9c:	b	412d4c <wcrtomb@plt+0xff9c>
  412ba0:	mov	w8, wzr
  412ba4:	cbnz	w8, 412bc0 <wcrtomb@plt+0xfe10>
  412ba8:	b	412bac <wcrtomb@plt+0xfdfc>
  412bac:	ldur	x8, [x29, #-40]
  412bb0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412bb4:	subs	x8, x8, x9
  412bb8:	b.eq	412bd0 <wcrtomb@plt+0xfe20>  // b.none
  412bbc:	b	412bdc <wcrtomb@plt+0xfe2c>
  412bc0:	ldur	x8, [x29, #-40]
  412bc4:	subs	x8, x8, #0x1
  412bc8:	b.lt	412bdc <wcrtomb@plt+0xfe2c>  // b.tstop
  412bcc:	b	412bd0 <wcrtomb@plt+0xfe20>
  412bd0:	mov	x0, xzr
  412bd4:	str	x0, [sp, #112]
  412bd8:	b	412bf8 <wcrtomb@plt+0xfe48>
  412bdc:	ldur	x8, [x29, #-40]
  412be0:	mov	x9, xzr
  412be4:	subs	x8, x9, x8
  412be8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412bec:	sdiv	x8, x9, x8
  412bf0:	str	x8, [sp, #112]
  412bf4:	b	412bf8 <wcrtomb@plt+0xfe48>
  412bf8:	ldr	x8, [sp, #112]
  412bfc:	ldur	x9, [x29, #-56]
  412c00:	mvn	x9, x9
  412c04:	subs	x8, x8, x9
  412c08:	b.le	412d30 <wcrtomb@plt+0xff80>
  412c0c:	b	412d4c <wcrtomb@plt+0xff9c>
  412c10:	ldur	x8, [x29, #-40]
  412c14:	adds	x8, x8, #0x1
  412c18:	b.ne	412c6c <wcrtomb@plt+0xfebc>  // b.any
  412c1c:	b	412c20 <wcrtomb@plt+0xfe70>
  412c20:	mov	w8, wzr
  412c24:	cbnz	w8, 412c44 <wcrtomb@plt+0xfe94>
  412c28:	b	412c2c <wcrtomb@plt+0xfe7c>
  412c2c:	ldur	x8, [x29, #-56]
  412c30:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412c34:	add	x8, x8, x9
  412c38:	subs	x8, x8, #0x0
  412c3c:	b.gt	412d30 <wcrtomb@plt+0xff80>
  412c40:	b	412d4c <wcrtomb@plt+0xff9c>
  412c44:	ldur	x8, [x29, #-56]
  412c48:	subs	x8, x8, #0x1
  412c4c:	b.lt	412d4c <wcrtomb@plt+0xff9c>  // b.tstop
  412c50:	b	412c54 <wcrtomb@plt+0xfea4>
  412c54:	ldur	x8, [x29, #-56]
  412c58:	subs	x8, x8, #0x1
  412c5c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412c60:	subs	x8, x8, x9
  412c64:	b.gt	412d30 <wcrtomb@plt+0xff80>
  412c68:	b	412d4c <wcrtomb@plt+0xff9c>
  412c6c:	ldur	x8, [x29, #-40]
  412c70:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412c74:	sdiv	x8, x9, x8
  412c78:	ldur	x9, [x29, #-56]
  412c7c:	subs	x8, x8, x9
  412c80:	b.lt	412d30 <wcrtomb@plt+0xff80>  // b.tstop
  412c84:	b	412d4c <wcrtomb@plt+0xff9c>
  412c88:	ldur	x8, [x29, #-40]
  412c8c:	cbnz	x8, 412ca0 <wcrtomb@plt+0xfef0>
  412c90:	b	412c94 <wcrtomb@plt+0xfee4>
  412c94:	mov	w8, wzr
  412c98:	cbnz	w8, 412d30 <wcrtomb@plt+0xff80>
  412c9c:	b	412d4c <wcrtomb@plt+0xff9c>
  412ca0:	ldur	x8, [x29, #-56]
  412ca4:	tbz	x8, #63, 412d14 <wcrtomb@plt+0xff64>
  412ca8:	b	412cac <wcrtomb@plt+0xfefc>
  412cac:	ldur	x8, [x29, #-56]
  412cb0:	adds	x8, x8, #0x1
  412cb4:	b.ne	412cf8 <wcrtomb@plt+0xff48>  // b.any
  412cb8:	b	412cbc <wcrtomb@plt+0xff0c>
  412cbc:	mov	w8, wzr
  412cc0:	cbnz	w8, 412ce0 <wcrtomb@plt+0xff30>
  412cc4:	b	412cc8 <wcrtomb@plt+0xff18>
  412cc8:	ldur	x8, [x29, #-40]
  412ccc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412cd0:	add	x8, x8, x9
  412cd4:	subs	x8, x8, #0x0
  412cd8:	b.gt	412d30 <wcrtomb@plt+0xff80>
  412cdc:	b	412d4c <wcrtomb@plt+0xff9c>
  412ce0:	ldur	x8, [x29, #-40]
  412ce4:	subs	x8, x8, #0x1
  412ce8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412cec:	subs	x8, x8, x9
  412cf0:	b.gt	412d30 <wcrtomb@plt+0xff80>
  412cf4:	b	412d4c <wcrtomb@plt+0xff9c>
  412cf8:	ldur	x8, [x29, #-56]
  412cfc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412d00:	sdiv	x8, x9, x8
  412d04:	ldur	x9, [x29, #-40]
  412d08:	subs	x8, x8, x9
  412d0c:	b.lt	412d30 <wcrtomb@plt+0xff80>  // b.tstop
  412d10:	b	412d4c <wcrtomb@plt+0xff9c>
  412d14:	ldur	x8, [x29, #-40]
  412d18:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412d1c:	sdiv	x8, x9, x8
  412d20:	ldur	x9, [x29, #-56]
  412d24:	subs	x8, x8, x9
  412d28:	b.ge	412d4c <wcrtomb@plt+0xff9c>  // b.tcont
  412d2c:	b	412d30 <wcrtomb@plt+0xff80>
  412d30:	ldur	x8, [x29, #-56]
  412d34:	ldur	x9, [x29, #-40]
  412d38:	mul	x8, x8, x9
  412d3c:	stur	x8, [x29, #-64]
  412d40:	mov	w10, #0x1                   	// #1
  412d44:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  412d48:	b	4133b4 <wcrtomb@plt+0x10604>
  412d4c:	ldur	x8, [x29, #-56]
  412d50:	ldur	x9, [x29, #-40]
  412d54:	mul	x8, x8, x9
  412d58:	stur	x8, [x29, #-64]
  412d5c:	mov	w10, wzr
  412d60:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  412d64:	b	4133b4 <wcrtomb@plt+0x10604>
  412d68:	ldur	x8, [x29, #-40]
  412d6c:	tbz	x8, #63, 412e9c <wcrtomb@plt+0x100ec>
  412d70:	b	412d74 <wcrtomb@plt+0xffc4>
  412d74:	ldur	x8, [x29, #-56]
  412d78:	tbz	x8, #63, 412e1c <wcrtomb@plt+0x1006c>
  412d7c:	b	412d80 <wcrtomb@plt+0xffd0>
  412d80:	mov	w8, #0x1                   	// #1
  412d84:	cbnz	w8, 412da8 <wcrtomb@plt+0xfff8>
  412d88:	b	412d8c <wcrtomb@plt+0xffdc>
  412d8c:	ldur	x8, [x29, #-56]
  412d90:	ldur	x9, [x29, #-40]
  412d94:	mov	x10, #0xffffffffffffffff    	// #-1
  412d98:	udiv	x9, x10, x9
  412d9c:	subs	x8, x8, x9
  412da0:	b.cc	412f4c <wcrtomb@plt+0x1019c>  // b.lo, b.ul, b.last
  412da4:	b	412f68 <wcrtomb@plt+0x101b8>
  412da8:	mov	w8, wzr
  412dac:	cbnz	w8, 412dc8 <wcrtomb@plt+0x10018>
  412db0:	b	412db4 <wcrtomb@plt+0x10004>
  412db4:	ldur	x8, [x29, #-40]
  412db8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412dbc:	subs	x8, x8, x9
  412dc0:	b.eq	412dd8 <wcrtomb@plt+0x10028>  // b.none
  412dc4:	b	412de8 <wcrtomb@plt+0x10038>
  412dc8:	ldur	x8, [x29, #-40]
  412dcc:	subs	x8, x8, #0x1
  412dd0:	b.lt	412de8 <wcrtomb@plt+0x10038>  // b.tstop
  412dd4:	b	412dd8 <wcrtomb@plt+0x10028>
  412dd8:	mov	w8, #0x1                   	// #1
  412ddc:	mov	w0, w8
  412de0:	str	x0, [sp, #104]
  412de4:	b	412e04 <wcrtomb@plt+0x10054>
  412de8:	ldur	x8, [x29, #-40]
  412dec:	mov	x9, xzr
  412df0:	subs	x8, x9, x8
  412df4:	mov	x9, #0xffffffffffffffff    	// #-1
  412df8:	udiv	x8, x9, x8
  412dfc:	str	x8, [sp, #104]
  412e00:	b	412e04 <wcrtomb@plt+0x10054>
  412e04:	ldr	x8, [sp, #104]
  412e08:	ldur	x9, [x29, #-56]
  412e0c:	mvn	x9, x9
  412e10:	subs	x8, x8, x9
  412e14:	b.ls	412f4c <wcrtomb@plt+0x1019c>  // b.plast
  412e18:	b	412f68 <wcrtomb@plt+0x101b8>
  412e1c:	mov	w8, wzr
  412e20:	cbnz	w8, 412e34 <wcrtomb@plt+0x10084>
  412e24:	b	412e28 <wcrtomb@plt+0x10078>
  412e28:	mov	w8, wzr
  412e2c:	cbnz	w8, 412e40 <wcrtomb@plt+0x10090>
  412e30:	b	412e8c <wcrtomb@plt+0x100dc>
  412e34:	mov	w8, #0x1                   	// #1
  412e38:	cbnz	w8, 412e8c <wcrtomb@plt+0x100dc>
  412e3c:	b	412e40 <wcrtomb@plt+0x10090>
  412e40:	ldur	x8, [x29, #-40]
  412e44:	adds	x8, x8, #0x1
  412e48:	b.ne	412e8c <wcrtomb@plt+0x100dc>  // b.any
  412e4c:	b	412e50 <wcrtomb@plt+0x100a0>
  412e50:	mov	w8, wzr
  412e54:	cbnz	w8, 412e6c <wcrtomb@plt+0x100bc>
  412e58:	b	412e5c <wcrtomb@plt+0x100ac>
  412e5c:	ldur	x8, [x29, #-56]
  412e60:	subs	x8, x8, #0x0
  412e64:	b.gt	412f4c <wcrtomb@plt+0x1019c>
  412e68:	b	412f68 <wcrtomb@plt+0x101b8>
  412e6c:	ldur	x8, [x29, #-56]
  412e70:	subs	x8, x8, #0x1
  412e74:	b.lt	412f68 <wcrtomb@plt+0x101b8>  // b.tstop
  412e78:	b	412e7c <wcrtomb@plt+0x100cc>
  412e7c:	ldur	x8, [x29, #-56]
  412e80:	subs	x8, x8, #0x1
  412e84:	tbz	x8, #63, 412f4c <wcrtomb@plt+0x1019c>
  412e88:	b	412f68 <wcrtomb@plt+0x101b8>
  412e8c:	ldur	x8, [x29, #-56]
  412e90:	subs	x8, x8, #0x0
  412e94:	b.gt	412f4c <wcrtomb@plt+0x1019c>
  412e98:	b	412f68 <wcrtomb@plt+0x101b8>
  412e9c:	ldur	x8, [x29, #-40]
  412ea0:	cbnz	x8, 412eb4 <wcrtomb@plt+0x10104>
  412ea4:	b	412ea8 <wcrtomb@plt+0x100f8>
  412ea8:	mov	w8, wzr
  412eac:	cbnz	w8, 412f4c <wcrtomb@plt+0x1019c>
  412eb0:	b	412f68 <wcrtomb@plt+0x101b8>
  412eb4:	ldur	x8, [x29, #-56]
  412eb8:	tbz	x8, #63, 412f30 <wcrtomb@plt+0x10180>
  412ebc:	b	412ec0 <wcrtomb@plt+0x10110>
  412ec0:	mov	w8, wzr
  412ec4:	cbnz	w8, 412ed8 <wcrtomb@plt+0x10128>
  412ec8:	b	412ecc <wcrtomb@plt+0x1011c>
  412ecc:	mov	w8, wzr
  412ed0:	cbnz	w8, 412ee4 <wcrtomb@plt+0x10134>
  412ed4:	b	412f20 <wcrtomb@plt+0x10170>
  412ed8:	mov	w8, #0x1                   	// #1
  412edc:	cbnz	w8, 412f20 <wcrtomb@plt+0x10170>
  412ee0:	b	412ee4 <wcrtomb@plt+0x10134>
  412ee4:	ldur	x8, [x29, #-56]
  412ee8:	adds	x8, x8, #0x1
  412eec:	b.ne	412f20 <wcrtomb@plt+0x10170>  // b.any
  412ef0:	b	412ef4 <wcrtomb@plt+0x10144>
  412ef4:	mov	w8, wzr
  412ef8:	cbnz	w8, 412f10 <wcrtomb@plt+0x10160>
  412efc:	b	412f00 <wcrtomb@plt+0x10150>
  412f00:	ldur	x8, [x29, #-40]
  412f04:	subs	x8, x8, #0x0
  412f08:	b.gt	412f4c <wcrtomb@plt+0x1019c>
  412f0c:	b	412f68 <wcrtomb@plt+0x101b8>
  412f10:	ldur	x8, [x29, #-40]
  412f14:	subs	x8, x8, #0x1
  412f18:	tbz	x8, #63, 412f4c <wcrtomb@plt+0x1019c>
  412f1c:	b	412f68 <wcrtomb@plt+0x101b8>
  412f20:	ldur	x8, [x29, #-40]
  412f24:	subs	x8, x8, #0x0
  412f28:	b.gt	412f4c <wcrtomb@plt+0x1019c>
  412f2c:	b	412f68 <wcrtomb@plt+0x101b8>
  412f30:	ldur	x8, [x29, #-40]
  412f34:	mov	x9, #0xffffffffffffffff    	// #-1
  412f38:	udiv	x8, x9, x8
  412f3c:	ldur	x9, [x29, #-56]
  412f40:	subs	x8, x8, x9
  412f44:	b.cs	412f68 <wcrtomb@plt+0x101b8>  // b.hs, b.nlast
  412f48:	b	412f4c <wcrtomb@plt+0x1019c>
  412f4c:	ldur	x8, [x29, #-56]
  412f50:	ldur	x9, [x29, #-40]
  412f54:	mul	x8, x8, x9
  412f58:	stur	x8, [x29, #-64]
  412f5c:	mov	w10, #0x1                   	// #1
  412f60:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  412f64:	b	4133b4 <wcrtomb@plt+0x10604>
  412f68:	ldur	x8, [x29, #-56]
  412f6c:	ldur	x9, [x29, #-40]
  412f70:	mul	x8, x8, x9
  412f74:	stur	x8, [x29, #-64]
  412f78:	mov	w10, wzr
  412f7c:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  412f80:	b	4133b4 <wcrtomb@plt+0x10604>
  412f84:	mov	w8, wzr
  412f88:	cbnz	w8, 413198 <wcrtomb@plt+0x103e8>
  412f8c:	b	412f90 <wcrtomb@plt+0x101e0>
  412f90:	ldur	x8, [x29, #-40]
  412f94:	tbz	x8, #63, 4130b8 <wcrtomb@plt+0x10308>
  412f98:	b	412f9c <wcrtomb@plt+0x101ec>
  412f9c:	ldur	x8, [x29, #-56]
  412fa0:	tbz	x8, #63, 413040 <wcrtomb@plt+0x10290>
  412fa4:	b	412fa8 <wcrtomb@plt+0x101f8>
  412fa8:	mov	w8, wzr
  412fac:	cbnz	w8, 412fd0 <wcrtomb@plt+0x10220>
  412fb0:	b	412fb4 <wcrtomb@plt+0x10204>
  412fb4:	ldur	x8, [x29, #-56]
  412fb8:	ldur	x9, [x29, #-40]
  412fbc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  412fc0:	sdiv	x9, x10, x9
  412fc4:	subs	x8, x8, x9
  412fc8:	b.lt	413160 <wcrtomb@plt+0x103b0>  // b.tstop
  412fcc:	b	41317c <wcrtomb@plt+0x103cc>
  412fd0:	mov	w8, wzr
  412fd4:	cbnz	w8, 412ff0 <wcrtomb@plt+0x10240>
  412fd8:	b	412fdc <wcrtomb@plt+0x1022c>
  412fdc:	ldur	x8, [x29, #-40]
  412fe0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412fe4:	subs	x8, x8, x9
  412fe8:	b.eq	413000 <wcrtomb@plt+0x10250>  // b.none
  412fec:	b	41300c <wcrtomb@plt+0x1025c>
  412ff0:	ldur	x8, [x29, #-40]
  412ff4:	subs	x8, x8, #0x1
  412ff8:	b.lt	41300c <wcrtomb@plt+0x1025c>  // b.tstop
  412ffc:	b	413000 <wcrtomb@plt+0x10250>
  413000:	mov	x0, xzr
  413004:	str	x0, [sp, #96]
  413008:	b	413028 <wcrtomb@plt+0x10278>
  41300c:	ldur	x8, [x29, #-40]
  413010:	mov	x9, xzr
  413014:	subs	x8, x9, x8
  413018:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41301c:	sdiv	x8, x9, x8
  413020:	str	x8, [sp, #96]
  413024:	b	413028 <wcrtomb@plt+0x10278>
  413028:	ldr	x8, [sp, #96]
  41302c:	ldur	x9, [x29, #-56]
  413030:	mvn	x9, x9
  413034:	subs	x8, x8, x9
  413038:	b.le	413160 <wcrtomb@plt+0x103b0>
  41303c:	b	41317c <wcrtomb@plt+0x103cc>
  413040:	ldur	x8, [x29, #-40]
  413044:	adds	x8, x8, #0x1
  413048:	b.ne	41309c <wcrtomb@plt+0x102ec>  // b.any
  41304c:	b	413050 <wcrtomb@plt+0x102a0>
  413050:	mov	w8, wzr
  413054:	cbnz	w8, 413074 <wcrtomb@plt+0x102c4>
  413058:	b	41305c <wcrtomb@plt+0x102ac>
  41305c:	ldur	x8, [x29, #-56]
  413060:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413064:	add	x8, x8, x9
  413068:	subs	x8, x8, #0x0
  41306c:	b.gt	413160 <wcrtomb@plt+0x103b0>
  413070:	b	41317c <wcrtomb@plt+0x103cc>
  413074:	ldur	x8, [x29, #-56]
  413078:	subs	x8, x8, #0x1
  41307c:	b.lt	41317c <wcrtomb@plt+0x103cc>  // b.tstop
  413080:	b	413084 <wcrtomb@plt+0x102d4>
  413084:	ldur	x8, [x29, #-56]
  413088:	subs	x8, x8, #0x1
  41308c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  413090:	subs	x8, x8, x9
  413094:	b.gt	413160 <wcrtomb@plt+0x103b0>
  413098:	b	41317c <wcrtomb@plt+0x103cc>
  41309c:	ldur	x8, [x29, #-40]
  4130a0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4130a4:	sdiv	x8, x9, x8
  4130a8:	ldur	x9, [x29, #-56]
  4130ac:	subs	x8, x8, x9
  4130b0:	b.lt	413160 <wcrtomb@plt+0x103b0>  // b.tstop
  4130b4:	b	41317c <wcrtomb@plt+0x103cc>
  4130b8:	ldur	x8, [x29, #-40]
  4130bc:	cbnz	x8, 4130d0 <wcrtomb@plt+0x10320>
  4130c0:	b	4130c4 <wcrtomb@plt+0x10314>
  4130c4:	mov	w8, wzr
  4130c8:	cbnz	w8, 413160 <wcrtomb@plt+0x103b0>
  4130cc:	b	41317c <wcrtomb@plt+0x103cc>
  4130d0:	ldur	x8, [x29, #-56]
  4130d4:	tbz	x8, #63, 413144 <wcrtomb@plt+0x10394>
  4130d8:	b	4130dc <wcrtomb@plt+0x1032c>
  4130dc:	ldur	x8, [x29, #-56]
  4130e0:	adds	x8, x8, #0x1
  4130e4:	b.ne	413128 <wcrtomb@plt+0x10378>  // b.any
  4130e8:	b	4130ec <wcrtomb@plt+0x1033c>
  4130ec:	mov	w8, wzr
  4130f0:	cbnz	w8, 413110 <wcrtomb@plt+0x10360>
  4130f4:	b	4130f8 <wcrtomb@plt+0x10348>
  4130f8:	ldur	x8, [x29, #-40]
  4130fc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413100:	add	x8, x8, x9
  413104:	subs	x8, x8, #0x0
  413108:	b.gt	413160 <wcrtomb@plt+0x103b0>
  41310c:	b	41317c <wcrtomb@plt+0x103cc>
  413110:	ldur	x8, [x29, #-40]
  413114:	subs	x8, x8, #0x1
  413118:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41311c:	subs	x8, x8, x9
  413120:	b.gt	413160 <wcrtomb@plt+0x103b0>
  413124:	b	41317c <wcrtomb@plt+0x103cc>
  413128:	ldur	x8, [x29, #-56]
  41312c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413130:	sdiv	x8, x9, x8
  413134:	ldur	x9, [x29, #-40]
  413138:	subs	x8, x8, x9
  41313c:	b.lt	413160 <wcrtomb@plt+0x103b0>  // b.tstop
  413140:	b	41317c <wcrtomb@plt+0x103cc>
  413144:	ldur	x8, [x29, #-40]
  413148:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41314c:	sdiv	x8, x9, x8
  413150:	ldur	x9, [x29, #-56]
  413154:	subs	x8, x8, x9
  413158:	b.ge	41317c <wcrtomb@plt+0x103cc>  // b.tcont
  41315c:	b	413160 <wcrtomb@plt+0x103b0>
  413160:	ldur	x8, [x29, #-56]
  413164:	ldur	x9, [x29, #-40]
  413168:	mul	x8, x8, x9
  41316c:	stur	x8, [x29, #-64]
  413170:	mov	w10, #0x1                   	// #1
  413174:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  413178:	b	4133b4 <wcrtomb@plt+0x10604>
  41317c:	ldur	x8, [x29, #-56]
  413180:	ldur	x9, [x29, #-40]
  413184:	mul	x8, x8, x9
  413188:	stur	x8, [x29, #-64]
  41318c:	mov	w10, wzr
  413190:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  413194:	b	4133b4 <wcrtomb@plt+0x10604>
  413198:	ldur	x8, [x29, #-40]
  41319c:	tbz	x8, #63, 4132cc <wcrtomb@plt+0x1051c>
  4131a0:	b	4131a4 <wcrtomb@plt+0x103f4>
  4131a4:	ldur	x8, [x29, #-56]
  4131a8:	tbz	x8, #63, 41324c <wcrtomb@plt+0x1049c>
  4131ac:	b	4131b0 <wcrtomb@plt+0x10400>
  4131b0:	mov	w8, #0x1                   	// #1
  4131b4:	cbnz	w8, 4131d8 <wcrtomb@plt+0x10428>
  4131b8:	b	4131bc <wcrtomb@plt+0x1040c>
  4131bc:	ldur	x8, [x29, #-56]
  4131c0:	ldur	x9, [x29, #-40]
  4131c4:	mov	x10, #0xffffffffffffffff    	// #-1
  4131c8:	udiv	x9, x10, x9
  4131cc:	subs	x8, x8, x9
  4131d0:	b.cc	41337c <wcrtomb@plt+0x105cc>  // b.lo, b.ul, b.last
  4131d4:	b	413398 <wcrtomb@plt+0x105e8>
  4131d8:	mov	w8, wzr
  4131dc:	cbnz	w8, 4131f8 <wcrtomb@plt+0x10448>
  4131e0:	b	4131e4 <wcrtomb@plt+0x10434>
  4131e4:	ldur	x8, [x29, #-40]
  4131e8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4131ec:	subs	x8, x8, x9
  4131f0:	b.eq	413208 <wcrtomb@plt+0x10458>  // b.none
  4131f4:	b	413218 <wcrtomb@plt+0x10468>
  4131f8:	ldur	x8, [x29, #-40]
  4131fc:	subs	x8, x8, #0x1
  413200:	b.lt	413218 <wcrtomb@plt+0x10468>  // b.tstop
  413204:	b	413208 <wcrtomb@plt+0x10458>
  413208:	mov	w8, #0x1                   	// #1
  41320c:	mov	w0, w8
  413210:	str	x0, [sp, #88]
  413214:	b	413234 <wcrtomb@plt+0x10484>
  413218:	ldur	x8, [x29, #-40]
  41321c:	mov	x9, xzr
  413220:	subs	x8, x9, x8
  413224:	mov	x9, #0xffffffffffffffff    	// #-1
  413228:	udiv	x8, x9, x8
  41322c:	str	x8, [sp, #88]
  413230:	b	413234 <wcrtomb@plt+0x10484>
  413234:	ldr	x8, [sp, #88]
  413238:	ldur	x9, [x29, #-56]
  41323c:	mvn	x9, x9
  413240:	subs	x8, x8, x9
  413244:	b.ls	41337c <wcrtomb@plt+0x105cc>  // b.plast
  413248:	b	413398 <wcrtomb@plt+0x105e8>
  41324c:	mov	w8, wzr
  413250:	cbnz	w8, 413264 <wcrtomb@plt+0x104b4>
  413254:	b	413258 <wcrtomb@plt+0x104a8>
  413258:	mov	w8, wzr
  41325c:	cbnz	w8, 413270 <wcrtomb@plt+0x104c0>
  413260:	b	4132bc <wcrtomb@plt+0x1050c>
  413264:	mov	w8, #0x1                   	// #1
  413268:	cbnz	w8, 4132bc <wcrtomb@plt+0x1050c>
  41326c:	b	413270 <wcrtomb@plt+0x104c0>
  413270:	ldur	x8, [x29, #-40]
  413274:	adds	x8, x8, #0x1
  413278:	b.ne	4132bc <wcrtomb@plt+0x1050c>  // b.any
  41327c:	b	413280 <wcrtomb@plt+0x104d0>
  413280:	mov	w8, wzr
  413284:	cbnz	w8, 41329c <wcrtomb@plt+0x104ec>
  413288:	b	41328c <wcrtomb@plt+0x104dc>
  41328c:	ldur	x8, [x29, #-56]
  413290:	subs	x8, x8, #0x0
  413294:	b.gt	41337c <wcrtomb@plt+0x105cc>
  413298:	b	413398 <wcrtomb@plt+0x105e8>
  41329c:	ldur	x8, [x29, #-56]
  4132a0:	subs	x8, x8, #0x1
  4132a4:	b.lt	413398 <wcrtomb@plt+0x105e8>  // b.tstop
  4132a8:	b	4132ac <wcrtomb@plt+0x104fc>
  4132ac:	ldur	x8, [x29, #-56]
  4132b0:	subs	x8, x8, #0x1
  4132b4:	tbz	x8, #63, 41337c <wcrtomb@plt+0x105cc>
  4132b8:	b	413398 <wcrtomb@plt+0x105e8>
  4132bc:	ldur	x8, [x29, #-56]
  4132c0:	subs	x8, x8, #0x0
  4132c4:	b.gt	41337c <wcrtomb@plt+0x105cc>
  4132c8:	b	413398 <wcrtomb@plt+0x105e8>
  4132cc:	ldur	x8, [x29, #-40]
  4132d0:	cbnz	x8, 4132e4 <wcrtomb@plt+0x10534>
  4132d4:	b	4132d8 <wcrtomb@plt+0x10528>
  4132d8:	mov	w8, wzr
  4132dc:	cbnz	w8, 41337c <wcrtomb@plt+0x105cc>
  4132e0:	b	413398 <wcrtomb@plt+0x105e8>
  4132e4:	ldur	x8, [x29, #-56]
  4132e8:	tbz	x8, #63, 413360 <wcrtomb@plt+0x105b0>
  4132ec:	b	4132f0 <wcrtomb@plt+0x10540>
  4132f0:	mov	w8, wzr
  4132f4:	cbnz	w8, 413308 <wcrtomb@plt+0x10558>
  4132f8:	b	4132fc <wcrtomb@plt+0x1054c>
  4132fc:	mov	w8, wzr
  413300:	cbnz	w8, 413314 <wcrtomb@plt+0x10564>
  413304:	b	413350 <wcrtomb@plt+0x105a0>
  413308:	mov	w8, #0x1                   	// #1
  41330c:	cbnz	w8, 413350 <wcrtomb@plt+0x105a0>
  413310:	b	413314 <wcrtomb@plt+0x10564>
  413314:	ldur	x8, [x29, #-56]
  413318:	adds	x8, x8, #0x1
  41331c:	b.ne	413350 <wcrtomb@plt+0x105a0>  // b.any
  413320:	b	413324 <wcrtomb@plt+0x10574>
  413324:	mov	w8, wzr
  413328:	cbnz	w8, 413340 <wcrtomb@plt+0x10590>
  41332c:	b	413330 <wcrtomb@plt+0x10580>
  413330:	ldur	x8, [x29, #-40]
  413334:	subs	x8, x8, #0x0
  413338:	b.gt	41337c <wcrtomb@plt+0x105cc>
  41333c:	b	413398 <wcrtomb@plt+0x105e8>
  413340:	ldur	x8, [x29, #-40]
  413344:	subs	x8, x8, #0x1
  413348:	tbz	x8, #63, 41337c <wcrtomb@plt+0x105cc>
  41334c:	b	413398 <wcrtomb@plt+0x105e8>
  413350:	ldur	x8, [x29, #-40]
  413354:	subs	x8, x8, #0x0
  413358:	b.gt	41337c <wcrtomb@plt+0x105cc>
  41335c:	b	413398 <wcrtomb@plt+0x105e8>
  413360:	ldur	x8, [x29, #-40]
  413364:	mov	x9, #0xffffffffffffffff    	// #-1
  413368:	udiv	x8, x9, x8
  41336c:	ldur	x9, [x29, #-56]
  413370:	subs	x8, x8, x9
  413374:	b.cs	413398 <wcrtomb@plt+0x105e8>  // b.hs, b.nlast
  413378:	b	41337c <wcrtomb@plt+0x105cc>
  41337c:	ldur	x8, [x29, #-56]
  413380:	ldur	x9, [x29, #-40]
  413384:	mul	x8, x8, x9
  413388:	stur	x8, [x29, #-64]
  41338c:	mov	w10, #0x1                   	// #1
  413390:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  413394:	b	4133b4 <wcrtomb@plt+0x10604>
  413398:	ldur	x8, [x29, #-56]
  41339c:	ldur	x9, [x29, #-40]
  4133a0:	mul	x8, x8, x9
  4133a4:	stur	x8, [x29, #-64]
  4133a8:	mov	w10, wzr
  4133ac:	cbnz	w10, 4133c4 <wcrtomb@plt+0x10614>
  4133b0:	b	4133b4 <wcrtomb@plt+0x10604>
  4133b4:	ldur	x8, [x29, #-64]
  4133b8:	adds	x8, x8, #0x1
  4133bc:	b.ls	4133d0 <wcrtomb@plt+0x10620>  // b.plast
  4133c0:	b	4133c4 <wcrtomb@plt+0x10614>
  4133c4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4133c8:	str	x8, [sp, #80]
  4133cc:	b	4133ec <wcrtomb@plt+0x1063c>
  4133d0:	ldur	x8, [x29, #-64]
  4133d4:	subs	x8, x8, #0x80
  4133d8:	cset	w9, lt  // lt = tstop
  4133dc:	mov	w10, w9
  4133e0:	lsl	x10, x10, #7
  4133e4:	str	x10, [sp, #80]
  4133e8:	b	4133ec <wcrtomb@plt+0x1063c>
  4133ec:	ldr	x8, [sp, #80]
  4133f0:	stur	x8, [x29, #-72]
  4133f4:	ldur	x8, [x29, #-72]
  4133f8:	cbz	x8, 413428 <wcrtomb@plt+0x10678>
  4133fc:	b	413400 <wcrtomb@plt+0x10650>
  413400:	ldur	x8, [x29, #-72]
  413404:	ldur	x9, [x29, #-40]
  413408:	sdiv	x8, x8, x9
  41340c:	stur	x8, [x29, #-56]
  413410:	ldur	x8, [x29, #-72]
  413414:	ldur	x9, [x29, #-40]
  413418:	sdiv	x8, x8, x9
  41341c:	mul	x8, x8, x9
  413420:	stur	x8, [x29, #-64]
  413424:	b	413428 <wcrtomb@plt+0x10678>
  413428:	ldur	x8, [x29, #-8]
  41342c:	cbnz	x8, 413444 <wcrtomb@plt+0x10694>
  413430:	b	413434 <wcrtomb@plt+0x10684>
  413434:	ldur	x8, [x29, #-16]
  413438:	mov	x9, xzr
  41343c:	str	x9, [x8]
  413440:	b	413444 <wcrtomb@plt+0x10694>
  413444:	ldur	x8, [x29, #-56]
  413448:	ldur	x9, [x29, #-48]
  41344c:	subs	x8, x8, x9
  413450:	ldur	x9, [x29, #-24]
  413454:	subs	x8, x8, x9
  413458:	b.ge	414b14 <wcrtomb@plt+0x11d64>  // b.tcont
  41345c:	b	413460 <wcrtomb@plt+0x106b0>
  413460:	ldur	x8, [x29, #-48]
  413464:	ldur	x9, [x29, #-24]
  413468:	adds	x8, x8, x9
  41346c:	cset	w10, vs
  413470:	stur	x8, [x29, #-56]
  413474:	tbnz	w10, #0, 414b10 <wcrtomb@plt+0x11d60>
  413478:	b	41347c <wcrtomb@plt+0x106cc>
  41347c:	ldur	x8, [x29, #-32]
  413480:	tbnz	x8, #63, 41349c <wcrtomb@plt+0x106ec>
  413484:	b	413488 <wcrtomb@plt+0x106d8>
  413488:	ldur	x8, [x29, #-32]
  41348c:	ldur	x9, [x29, #-56]
  413490:	subs	x8, x8, x9
  413494:	b.lt	414b10 <wcrtomb@plt+0x11d60>  // b.tstop
  413498:	b	41349c <wcrtomb@plt+0x106ec>
  41349c:	mov	w8, #0x1                   	// #1
  4134a0:	cbnz	w8, 413944 <wcrtomb@plt+0x10b94>
  4134a4:	b	4134a8 <wcrtomb@plt+0x106f8>
  4134a8:	mov	w8, wzr
  4134ac:	cbnz	w8, 413710 <wcrtomb@plt+0x10960>
  4134b0:	b	4134b4 <wcrtomb@plt+0x10704>
  4134b4:	ldur	x8, [x29, #-40]
  4134b8:	tbz	x8, #63, 413600 <wcrtomb@plt+0x10850>
  4134bc:	b	4134c0 <wcrtomb@plt+0x10710>
  4134c0:	ldur	x8, [x29, #-56]
  4134c4:	tbz	x8, #63, 41356c <wcrtomb@plt+0x107bc>
  4134c8:	b	4134cc <wcrtomb@plt+0x1071c>
  4134cc:	mov	w8, wzr
  4134d0:	cbnz	w8, 4134f8 <wcrtomb@plt+0x10748>
  4134d4:	b	4134d8 <wcrtomb@plt+0x10728>
  4134d8:	ldur	x8, [x29, #-56]
  4134dc:	ldur	x9, [x29, #-40]
  4134e0:	mov	w10, #0x7f                  	// #127
  4134e4:	mov	w11, w10
  4134e8:	sdiv	x9, x11, x9
  4134ec:	subs	x8, x8, x9
  4134f0:	b.lt	4136c8 <wcrtomb@plt+0x10918>  // b.tstop
  4134f4:	b	4136ec <wcrtomb@plt+0x1093c>
  4134f8:	mov	w8, wzr
  4134fc:	cbnz	w8, 413518 <wcrtomb@plt+0x10768>
  413500:	b	413504 <wcrtomb@plt+0x10754>
  413504:	ldur	x8, [x29, #-40]
  413508:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41350c:	subs	x8, x8, x9
  413510:	b.eq	413528 <wcrtomb@plt+0x10778>  // b.none
  413514:	b	413534 <wcrtomb@plt+0x10784>
  413518:	ldur	x8, [x29, #-40]
  41351c:	subs	x8, x8, #0x1
  413520:	b.lt	413534 <wcrtomb@plt+0x10784>  // b.tstop
  413524:	b	413528 <wcrtomb@plt+0x10778>
  413528:	mov	x0, xzr
  41352c:	str	x0, [sp, #72]
  413530:	b	413554 <wcrtomb@plt+0x107a4>
  413534:	ldur	x8, [x29, #-40]
  413538:	mov	x9, xzr
  41353c:	subs	x8, x9, x8
  413540:	mov	w10, #0x7f                  	// #127
  413544:	mov	w9, w10
  413548:	sdiv	x8, x9, x8
  41354c:	str	x8, [sp, #72]
  413550:	b	413554 <wcrtomb@plt+0x107a4>
  413554:	ldr	x8, [sp, #72]
  413558:	ldur	x9, [x29, #-56]
  41355c:	mvn	x9, x9
  413560:	subs	x8, x8, x9
  413564:	b.le	4136c8 <wcrtomb@plt+0x10918>
  413568:	b	4136ec <wcrtomb@plt+0x1093c>
  41356c:	mov	w8, wzr
  413570:	cbnz	w8, 413584 <wcrtomb@plt+0x107d4>
  413574:	b	413578 <wcrtomb@plt+0x107c8>
  413578:	mov	w8, wzr
  41357c:	cbnz	w8, 413590 <wcrtomb@plt+0x107e0>
  413580:	b	4135e4 <wcrtomb@plt+0x10834>
  413584:	mov	w8, #0x1                   	// #1
  413588:	cbnz	w8, 4135e4 <wcrtomb@plt+0x10834>
  41358c:	b	413590 <wcrtomb@plt+0x107e0>
  413590:	ldur	x8, [x29, #-40]
  413594:	adds	x8, x8, #0x1
  413598:	b.ne	4135e4 <wcrtomb@plt+0x10834>  // b.any
  41359c:	b	4135a0 <wcrtomb@plt+0x107f0>
  4135a0:	mov	w8, wzr
  4135a4:	cbnz	w8, 4135c0 <wcrtomb@plt+0x10810>
  4135a8:	b	4135ac <wcrtomb@plt+0x107fc>
  4135ac:	ldur	x8, [x29, #-56]
  4135b0:	subs	x8, x8, #0x80
  4135b4:	subs	x8, x8, #0x0
  4135b8:	b.gt	4136c8 <wcrtomb@plt+0x10918>
  4135bc:	b	4136ec <wcrtomb@plt+0x1093c>
  4135c0:	ldur	x8, [x29, #-56]
  4135c4:	subs	x8, x8, #0x1
  4135c8:	b.lt	4136ec <wcrtomb@plt+0x1093c>  // b.tstop
  4135cc:	b	4135d0 <wcrtomb@plt+0x10820>
  4135d0:	ldur	x8, [x29, #-56]
  4135d4:	subs	x8, x8, #0x1
  4135d8:	subs	x8, x8, #0x7f
  4135dc:	b.gt	4136c8 <wcrtomb@plt+0x10918>
  4135e0:	b	4136ec <wcrtomb@plt+0x1093c>
  4135e4:	ldur	x8, [x29, #-40]
  4135e8:	mov	x9, #0xffffffffffffff80    	// #-128
  4135ec:	sdiv	x8, x9, x8
  4135f0:	ldur	x9, [x29, #-56]
  4135f4:	subs	x8, x8, x9
  4135f8:	b.lt	4136c8 <wcrtomb@plt+0x10918>  // b.tstop
  4135fc:	b	4136ec <wcrtomb@plt+0x1093c>
  413600:	ldur	x8, [x29, #-40]
  413604:	cbnz	x8, 413618 <wcrtomb@plt+0x10868>
  413608:	b	41360c <wcrtomb@plt+0x1085c>
  41360c:	mov	w8, wzr
  413610:	cbnz	w8, 4136c8 <wcrtomb@plt+0x10918>
  413614:	b	4136ec <wcrtomb@plt+0x1093c>
  413618:	ldur	x8, [x29, #-56]
  41361c:	tbz	x8, #63, 4136a8 <wcrtomb@plt+0x108f8>
  413620:	b	413624 <wcrtomb@plt+0x10874>
  413624:	mov	w8, wzr
  413628:	cbnz	w8, 41363c <wcrtomb@plt+0x1088c>
  41362c:	b	413630 <wcrtomb@plt+0x10880>
  413630:	mov	w8, wzr
  413634:	cbnz	w8, 413648 <wcrtomb@plt+0x10898>
  413638:	b	41368c <wcrtomb@plt+0x108dc>
  41363c:	mov	w8, #0x1                   	// #1
  413640:	cbnz	w8, 41368c <wcrtomb@plt+0x108dc>
  413644:	b	413648 <wcrtomb@plt+0x10898>
  413648:	ldur	x8, [x29, #-56]
  41364c:	adds	x8, x8, #0x1
  413650:	b.ne	41368c <wcrtomb@plt+0x108dc>  // b.any
  413654:	b	413658 <wcrtomb@plt+0x108a8>
  413658:	mov	w8, wzr
  41365c:	cbnz	w8, 413678 <wcrtomb@plt+0x108c8>
  413660:	b	413664 <wcrtomb@plt+0x108b4>
  413664:	ldur	x8, [x29, #-40]
  413668:	subs	x8, x8, #0x80
  41366c:	subs	x8, x8, #0x0
  413670:	b.gt	4136c8 <wcrtomb@plt+0x10918>
  413674:	b	4136ec <wcrtomb@plt+0x1093c>
  413678:	ldur	x8, [x29, #-40]
  41367c:	subs	x8, x8, #0x1
  413680:	subs	x8, x8, #0x7f
  413684:	b.gt	4136c8 <wcrtomb@plt+0x10918>
  413688:	b	4136ec <wcrtomb@plt+0x1093c>
  41368c:	ldur	x8, [x29, #-56]
  413690:	mov	x9, #0xffffffffffffff80    	// #-128
  413694:	sdiv	x8, x9, x8
  413698:	ldur	x9, [x29, #-40]
  41369c:	subs	x8, x8, x9
  4136a0:	b.lt	4136c8 <wcrtomb@plt+0x10918>  // b.tstop
  4136a4:	b	4136ec <wcrtomb@plt+0x1093c>
  4136a8:	ldur	x8, [x29, #-40]
  4136ac:	mov	w9, #0x7f                  	// #127
  4136b0:	mov	w10, w9
  4136b4:	sdiv	x8, x10, x8
  4136b8:	ldur	x10, [x29, #-56]
  4136bc:	subs	x8, x8, x10
  4136c0:	b.ge	4136ec <wcrtomb@plt+0x1093c>  // b.tcont
  4136c4:	b	4136c8 <wcrtomb@plt+0x10918>
  4136c8:	ldur	w8, [x29, #-56]
  4136cc:	ldur	w9, [x29, #-40]
  4136d0:	mul	w8, w8, w9
  4136d4:	mov	w0, w8
  4136d8:	sxtb	x10, w0
  4136dc:	stur	x10, [x29, #-64]
  4136e0:	mov	w8, #0x1                   	// #1
  4136e4:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  4136e8:	b	414b14 <wcrtomb@plt+0x11d64>
  4136ec:	ldur	w8, [x29, #-56]
  4136f0:	ldur	w9, [x29, #-40]
  4136f4:	mul	w8, w8, w9
  4136f8:	mov	w0, w8
  4136fc:	sxtb	x10, w0
  413700:	stur	x10, [x29, #-64]
  413704:	mov	w8, wzr
  413708:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  41370c:	b	414b14 <wcrtomb@plt+0x11d64>
  413710:	ldur	x8, [x29, #-40]
  413714:	tbz	x8, #63, 413848 <wcrtomb@plt+0x10a98>
  413718:	b	41371c <wcrtomb@plt+0x1096c>
  41371c:	ldur	x8, [x29, #-56]
  413720:	tbz	x8, #63, 4137c8 <wcrtomb@plt+0x10a18>
  413724:	b	413728 <wcrtomb@plt+0x10978>
  413728:	mov	w8, wzr
  41372c:	cbnz	w8, 413754 <wcrtomb@plt+0x109a4>
  413730:	b	413734 <wcrtomb@plt+0x10984>
  413734:	ldur	x8, [x29, #-56]
  413738:	ldur	x9, [x29, #-40]
  41373c:	mov	w10, #0xff                  	// #255
  413740:	mov	w11, w10
  413744:	sdiv	x9, x11, x9
  413748:	subs	x8, x8, x9
  41374c:	b.lt	4138fc <wcrtomb@plt+0x10b4c>  // b.tstop
  413750:	b	413920 <wcrtomb@plt+0x10b70>
  413754:	mov	w8, wzr
  413758:	cbnz	w8, 413774 <wcrtomb@plt+0x109c4>
  41375c:	b	413760 <wcrtomb@plt+0x109b0>
  413760:	ldur	x8, [x29, #-40]
  413764:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413768:	subs	x8, x8, x9
  41376c:	b.eq	413784 <wcrtomb@plt+0x109d4>  // b.none
  413770:	b	413790 <wcrtomb@plt+0x109e0>
  413774:	ldur	x8, [x29, #-40]
  413778:	subs	x8, x8, #0x1
  41377c:	b.lt	413790 <wcrtomb@plt+0x109e0>  // b.tstop
  413780:	b	413784 <wcrtomb@plt+0x109d4>
  413784:	mov	x0, xzr
  413788:	str	x0, [sp, #64]
  41378c:	b	4137b0 <wcrtomb@plt+0x10a00>
  413790:	ldur	x8, [x29, #-40]
  413794:	mov	x9, xzr
  413798:	subs	x8, x9, x8
  41379c:	mov	w10, #0xff                  	// #255
  4137a0:	mov	w9, w10
  4137a4:	sdiv	x8, x9, x8
  4137a8:	str	x8, [sp, #64]
  4137ac:	b	4137b0 <wcrtomb@plt+0x10a00>
  4137b0:	ldr	x8, [sp, #64]
  4137b4:	ldur	x9, [x29, #-56]
  4137b8:	mvn	x9, x9
  4137bc:	subs	x8, x8, x9
  4137c0:	b.le	4138fc <wcrtomb@plt+0x10b4c>
  4137c4:	b	413920 <wcrtomb@plt+0x10b70>
  4137c8:	mov	w8, wzr
  4137cc:	cbnz	w8, 4137e0 <wcrtomb@plt+0x10a30>
  4137d0:	b	4137d4 <wcrtomb@plt+0x10a24>
  4137d4:	mov	w8, wzr
  4137d8:	cbnz	w8, 4137ec <wcrtomb@plt+0x10a3c>
  4137dc:	b	413838 <wcrtomb@plt+0x10a88>
  4137e0:	mov	w8, #0x1                   	// #1
  4137e4:	cbnz	w8, 413838 <wcrtomb@plt+0x10a88>
  4137e8:	b	4137ec <wcrtomb@plt+0x10a3c>
  4137ec:	ldur	x8, [x29, #-40]
  4137f0:	adds	x8, x8, #0x1
  4137f4:	b.ne	413838 <wcrtomb@plt+0x10a88>  // b.any
  4137f8:	b	4137fc <wcrtomb@plt+0x10a4c>
  4137fc:	mov	w8, wzr
  413800:	cbnz	w8, 413818 <wcrtomb@plt+0x10a68>
  413804:	b	413808 <wcrtomb@plt+0x10a58>
  413808:	ldur	x8, [x29, #-56]
  41380c:	subs	x8, x8, #0x0
  413810:	b.gt	4138fc <wcrtomb@plt+0x10b4c>
  413814:	b	413920 <wcrtomb@plt+0x10b70>
  413818:	ldur	x8, [x29, #-56]
  41381c:	subs	x8, x8, #0x1
  413820:	b.lt	413920 <wcrtomb@plt+0x10b70>  // b.tstop
  413824:	b	413828 <wcrtomb@plt+0x10a78>
  413828:	ldur	x8, [x29, #-56]
  41382c:	subs	x8, x8, #0x1
  413830:	tbz	x8, #63, 4138fc <wcrtomb@plt+0x10b4c>
  413834:	b	413920 <wcrtomb@plt+0x10b70>
  413838:	ldur	x8, [x29, #-56]
  41383c:	subs	x8, x8, #0x0
  413840:	b.gt	4138fc <wcrtomb@plt+0x10b4c>
  413844:	b	413920 <wcrtomb@plt+0x10b70>
  413848:	ldur	x8, [x29, #-40]
  41384c:	cbnz	x8, 413860 <wcrtomb@plt+0x10ab0>
  413850:	b	413854 <wcrtomb@plt+0x10aa4>
  413854:	mov	w8, wzr
  413858:	cbnz	w8, 4138fc <wcrtomb@plt+0x10b4c>
  41385c:	b	413920 <wcrtomb@plt+0x10b70>
  413860:	ldur	x8, [x29, #-56]
  413864:	tbz	x8, #63, 4138dc <wcrtomb@plt+0x10b2c>
  413868:	b	41386c <wcrtomb@plt+0x10abc>
  41386c:	mov	w8, wzr
  413870:	cbnz	w8, 413884 <wcrtomb@plt+0x10ad4>
  413874:	b	413878 <wcrtomb@plt+0x10ac8>
  413878:	mov	w8, wzr
  41387c:	cbnz	w8, 413890 <wcrtomb@plt+0x10ae0>
  413880:	b	4138cc <wcrtomb@plt+0x10b1c>
  413884:	mov	w8, #0x1                   	// #1
  413888:	cbnz	w8, 4138cc <wcrtomb@plt+0x10b1c>
  41388c:	b	413890 <wcrtomb@plt+0x10ae0>
  413890:	ldur	x8, [x29, #-56]
  413894:	adds	x8, x8, #0x1
  413898:	b.ne	4138cc <wcrtomb@plt+0x10b1c>  // b.any
  41389c:	b	4138a0 <wcrtomb@plt+0x10af0>
  4138a0:	mov	w8, wzr
  4138a4:	cbnz	w8, 4138bc <wcrtomb@plt+0x10b0c>
  4138a8:	b	4138ac <wcrtomb@plt+0x10afc>
  4138ac:	ldur	x8, [x29, #-40]
  4138b0:	subs	x8, x8, #0x0
  4138b4:	b.gt	4138fc <wcrtomb@plt+0x10b4c>
  4138b8:	b	413920 <wcrtomb@plt+0x10b70>
  4138bc:	ldur	x8, [x29, #-40]
  4138c0:	subs	x8, x8, #0x1
  4138c4:	tbz	x8, #63, 4138fc <wcrtomb@plt+0x10b4c>
  4138c8:	b	413920 <wcrtomb@plt+0x10b70>
  4138cc:	ldur	x8, [x29, #-40]
  4138d0:	subs	x8, x8, #0x0
  4138d4:	b.gt	4138fc <wcrtomb@plt+0x10b4c>
  4138d8:	b	413920 <wcrtomb@plt+0x10b70>
  4138dc:	ldur	x8, [x29, #-40]
  4138e0:	mov	w9, #0xff                  	// #255
  4138e4:	mov	w10, w9
  4138e8:	sdiv	x8, x10, x8
  4138ec:	ldur	x10, [x29, #-56]
  4138f0:	subs	x8, x8, x10
  4138f4:	b.ge	413920 <wcrtomb@plt+0x10b70>  // b.tcont
  4138f8:	b	4138fc <wcrtomb@plt+0x10b4c>
  4138fc:	ldur	w8, [x29, #-56]
  413900:	ldur	w9, [x29, #-40]
  413904:	mul	w8, w8, w9
  413908:	mov	w0, w8
  41390c:	and	x10, x0, #0xff
  413910:	stur	x10, [x29, #-64]
  413914:	mov	w8, #0x1                   	// #1
  413918:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  41391c:	b	414b14 <wcrtomb@plt+0x11d64>
  413920:	ldur	w8, [x29, #-56]
  413924:	ldur	w9, [x29, #-40]
  413928:	mul	w8, w8, w9
  41392c:	mov	w0, w8
  413930:	and	x10, x0, #0xff
  413934:	stur	x10, [x29, #-64]
  413938:	mov	w8, wzr
  41393c:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  413940:	b	414b14 <wcrtomb@plt+0x11d64>
  413944:	mov	w8, #0x1                   	// #1
  413948:	cbnz	w8, 413dec <wcrtomb@plt+0x1103c>
  41394c:	b	413950 <wcrtomb@plt+0x10ba0>
  413950:	mov	w8, wzr
  413954:	cbnz	w8, 413bb8 <wcrtomb@plt+0x10e08>
  413958:	b	41395c <wcrtomb@plt+0x10bac>
  41395c:	ldur	x8, [x29, #-40]
  413960:	tbz	x8, #63, 413aa8 <wcrtomb@plt+0x10cf8>
  413964:	b	413968 <wcrtomb@plt+0x10bb8>
  413968:	ldur	x8, [x29, #-56]
  41396c:	tbz	x8, #63, 413a14 <wcrtomb@plt+0x10c64>
  413970:	b	413974 <wcrtomb@plt+0x10bc4>
  413974:	mov	w8, wzr
  413978:	cbnz	w8, 4139a0 <wcrtomb@plt+0x10bf0>
  41397c:	b	413980 <wcrtomb@plt+0x10bd0>
  413980:	ldur	x8, [x29, #-56]
  413984:	ldur	x9, [x29, #-40]
  413988:	mov	w10, #0x7fff                	// #32767
  41398c:	mov	w11, w10
  413990:	sdiv	x9, x11, x9
  413994:	subs	x8, x8, x9
  413998:	b.lt	413b70 <wcrtomb@plt+0x10dc0>  // b.tstop
  41399c:	b	413b94 <wcrtomb@plt+0x10de4>
  4139a0:	mov	w8, wzr
  4139a4:	cbnz	w8, 4139c0 <wcrtomb@plt+0x10c10>
  4139a8:	b	4139ac <wcrtomb@plt+0x10bfc>
  4139ac:	ldur	x8, [x29, #-40]
  4139b0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4139b4:	subs	x8, x8, x9
  4139b8:	b.eq	4139d0 <wcrtomb@plt+0x10c20>  // b.none
  4139bc:	b	4139dc <wcrtomb@plt+0x10c2c>
  4139c0:	ldur	x8, [x29, #-40]
  4139c4:	subs	x8, x8, #0x1
  4139c8:	b.lt	4139dc <wcrtomb@plt+0x10c2c>  // b.tstop
  4139cc:	b	4139d0 <wcrtomb@plt+0x10c20>
  4139d0:	mov	x0, xzr
  4139d4:	str	x0, [sp, #56]
  4139d8:	b	4139fc <wcrtomb@plt+0x10c4c>
  4139dc:	ldur	x8, [x29, #-40]
  4139e0:	mov	x9, xzr
  4139e4:	subs	x8, x9, x8
  4139e8:	mov	w10, #0x7fff                	// #32767
  4139ec:	mov	w9, w10
  4139f0:	sdiv	x8, x9, x8
  4139f4:	str	x8, [sp, #56]
  4139f8:	b	4139fc <wcrtomb@plt+0x10c4c>
  4139fc:	ldr	x8, [sp, #56]
  413a00:	ldur	x9, [x29, #-56]
  413a04:	mvn	x9, x9
  413a08:	subs	x8, x8, x9
  413a0c:	b.le	413b70 <wcrtomb@plt+0x10dc0>
  413a10:	b	413b94 <wcrtomb@plt+0x10de4>
  413a14:	mov	w8, wzr
  413a18:	cbnz	w8, 413a2c <wcrtomb@plt+0x10c7c>
  413a1c:	b	413a20 <wcrtomb@plt+0x10c70>
  413a20:	mov	w8, wzr
  413a24:	cbnz	w8, 413a38 <wcrtomb@plt+0x10c88>
  413a28:	b	413a8c <wcrtomb@plt+0x10cdc>
  413a2c:	mov	w8, #0x1                   	// #1
  413a30:	cbnz	w8, 413a8c <wcrtomb@plt+0x10cdc>
  413a34:	b	413a38 <wcrtomb@plt+0x10c88>
  413a38:	ldur	x8, [x29, #-40]
  413a3c:	adds	x8, x8, #0x1
  413a40:	b.ne	413a8c <wcrtomb@plt+0x10cdc>  // b.any
  413a44:	b	413a48 <wcrtomb@plt+0x10c98>
  413a48:	mov	w8, wzr
  413a4c:	cbnz	w8, 413a68 <wcrtomb@plt+0x10cb8>
  413a50:	b	413a54 <wcrtomb@plt+0x10ca4>
  413a54:	ldur	x8, [x29, #-56]
  413a58:	subs	x8, x8, #0x8, lsl #12
  413a5c:	subs	x8, x8, #0x0
  413a60:	b.gt	413b70 <wcrtomb@plt+0x10dc0>
  413a64:	b	413b94 <wcrtomb@plt+0x10de4>
  413a68:	ldur	x8, [x29, #-56]
  413a6c:	subs	x8, x8, #0x1
  413a70:	b.lt	413b94 <wcrtomb@plt+0x10de4>  // b.tstop
  413a74:	b	413a78 <wcrtomb@plt+0x10cc8>
  413a78:	ldur	x8, [x29, #-56]
  413a7c:	subs	x8, x8, #0x1
  413a80:	subs	x8, x8, #0x8, lsl #12
  413a84:	b.ge	413b70 <wcrtomb@plt+0x10dc0>  // b.tcont
  413a88:	b	413b94 <wcrtomb@plt+0x10de4>
  413a8c:	ldur	x8, [x29, #-40]
  413a90:	mov	x9, #0xffffffffffff8000    	// #-32768
  413a94:	sdiv	x8, x9, x8
  413a98:	ldur	x9, [x29, #-56]
  413a9c:	subs	x8, x8, x9
  413aa0:	b.lt	413b70 <wcrtomb@plt+0x10dc0>  // b.tstop
  413aa4:	b	413b94 <wcrtomb@plt+0x10de4>
  413aa8:	ldur	x8, [x29, #-40]
  413aac:	cbnz	x8, 413ac0 <wcrtomb@plt+0x10d10>
  413ab0:	b	413ab4 <wcrtomb@plt+0x10d04>
  413ab4:	mov	w8, wzr
  413ab8:	cbnz	w8, 413b70 <wcrtomb@plt+0x10dc0>
  413abc:	b	413b94 <wcrtomb@plt+0x10de4>
  413ac0:	ldur	x8, [x29, #-56]
  413ac4:	tbz	x8, #63, 413b50 <wcrtomb@plt+0x10da0>
  413ac8:	b	413acc <wcrtomb@plt+0x10d1c>
  413acc:	mov	w8, wzr
  413ad0:	cbnz	w8, 413ae4 <wcrtomb@plt+0x10d34>
  413ad4:	b	413ad8 <wcrtomb@plt+0x10d28>
  413ad8:	mov	w8, wzr
  413adc:	cbnz	w8, 413af0 <wcrtomb@plt+0x10d40>
  413ae0:	b	413b34 <wcrtomb@plt+0x10d84>
  413ae4:	mov	w8, #0x1                   	// #1
  413ae8:	cbnz	w8, 413b34 <wcrtomb@plt+0x10d84>
  413aec:	b	413af0 <wcrtomb@plt+0x10d40>
  413af0:	ldur	x8, [x29, #-56]
  413af4:	adds	x8, x8, #0x1
  413af8:	b.ne	413b34 <wcrtomb@plt+0x10d84>  // b.any
  413afc:	b	413b00 <wcrtomb@plt+0x10d50>
  413b00:	mov	w8, wzr
  413b04:	cbnz	w8, 413b20 <wcrtomb@plt+0x10d70>
  413b08:	b	413b0c <wcrtomb@plt+0x10d5c>
  413b0c:	ldur	x8, [x29, #-40]
  413b10:	subs	x8, x8, #0x8, lsl #12
  413b14:	subs	x8, x8, #0x0
  413b18:	b.gt	413b70 <wcrtomb@plt+0x10dc0>
  413b1c:	b	413b94 <wcrtomb@plt+0x10de4>
  413b20:	ldur	x8, [x29, #-40]
  413b24:	subs	x8, x8, #0x1
  413b28:	subs	x8, x8, #0x8, lsl #12
  413b2c:	b.ge	413b70 <wcrtomb@plt+0x10dc0>  // b.tcont
  413b30:	b	413b94 <wcrtomb@plt+0x10de4>
  413b34:	ldur	x8, [x29, #-56]
  413b38:	mov	x9, #0xffffffffffff8000    	// #-32768
  413b3c:	sdiv	x8, x9, x8
  413b40:	ldur	x9, [x29, #-40]
  413b44:	subs	x8, x8, x9
  413b48:	b.lt	413b70 <wcrtomb@plt+0x10dc0>  // b.tstop
  413b4c:	b	413b94 <wcrtomb@plt+0x10de4>
  413b50:	ldur	x8, [x29, #-40]
  413b54:	mov	w9, #0x7fff                	// #32767
  413b58:	mov	w10, w9
  413b5c:	sdiv	x8, x10, x8
  413b60:	ldur	x10, [x29, #-56]
  413b64:	subs	x8, x8, x10
  413b68:	b.ge	413b94 <wcrtomb@plt+0x10de4>  // b.tcont
  413b6c:	b	413b70 <wcrtomb@plt+0x10dc0>
  413b70:	ldur	w8, [x29, #-56]
  413b74:	ldur	w9, [x29, #-40]
  413b78:	mul	w8, w8, w9
  413b7c:	mov	w0, w8
  413b80:	sxth	x10, w0
  413b84:	stur	x10, [x29, #-64]
  413b88:	mov	w8, #0x1                   	// #1
  413b8c:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  413b90:	b	414b14 <wcrtomb@plt+0x11d64>
  413b94:	ldur	w8, [x29, #-56]
  413b98:	ldur	w9, [x29, #-40]
  413b9c:	mul	w8, w8, w9
  413ba0:	mov	w0, w8
  413ba4:	sxth	x10, w0
  413ba8:	stur	x10, [x29, #-64]
  413bac:	mov	w8, wzr
  413bb0:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  413bb4:	b	414b14 <wcrtomb@plt+0x11d64>
  413bb8:	ldur	x8, [x29, #-40]
  413bbc:	tbz	x8, #63, 413cf0 <wcrtomb@plt+0x10f40>
  413bc0:	b	413bc4 <wcrtomb@plt+0x10e14>
  413bc4:	ldur	x8, [x29, #-56]
  413bc8:	tbz	x8, #63, 413c70 <wcrtomb@plt+0x10ec0>
  413bcc:	b	413bd0 <wcrtomb@plt+0x10e20>
  413bd0:	mov	w8, wzr
  413bd4:	cbnz	w8, 413bfc <wcrtomb@plt+0x10e4c>
  413bd8:	b	413bdc <wcrtomb@plt+0x10e2c>
  413bdc:	ldur	x8, [x29, #-56]
  413be0:	ldur	x9, [x29, #-40]
  413be4:	mov	w10, #0xffff                	// #65535
  413be8:	mov	w11, w10
  413bec:	sdiv	x9, x11, x9
  413bf0:	subs	x8, x8, x9
  413bf4:	b.lt	413da4 <wcrtomb@plt+0x10ff4>  // b.tstop
  413bf8:	b	413dc8 <wcrtomb@plt+0x11018>
  413bfc:	mov	w8, wzr
  413c00:	cbnz	w8, 413c1c <wcrtomb@plt+0x10e6c>
  413c04:	b	413c08 <wcrtomb@plt+0x10e58>
  413c08:	ldur	x8, [x29, #-40]
  413c0c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413c10:	subs	x8, x8, x9
  413c14:	b.eq	413c2c <wcrtomb@plt+0x10e7c>  // b.none
  413c18:	b	413c38 <wcrtomb@plt+0x10e88>
  413c1c:	ldur	x8, [x29, #-40]
  413c20:	subs	x8, x8, #0x1
  413c24:	b.lt	413c38 <wcrtomb@plt+0x10e88>  // b.tstop
  413c28:	b	413c2c <wcrtomb@plt+0x10e7c>
  413c2c:	mov	x0, xzr
  413c30:	str	x0, [sp, #48]
  413c34:	b	413c58 <wcrtomb@plt+0x10ea8>
  413c38:	ldur	x8, [x29, #-40]
  413c3c:	mov	x9, xzr
  413c40:	subs	x8, x9, x8
  413c44:	mov	w10, #0xffff                	// #65535
  413c48:	mov	w9, w10
  413c4c:	sdiv	x8, x9, x8
  413c50:	str	x8, [sp, #48]
  413c54:	b	413c58 <wcrtomb@plt+0x10ea8>
  413c58:	ldr	x8, [sp, #48]
  413c5c:	ldur	x9, [x29, #-56]
  413c60:	mvn	x9, x9
  413c64:	subs	x8, x8, x9
  413c68:	b.le	413da4 <wcrtomb@plt+0x10ff4>
  413c6c:	b	413dc8 <wcrtomb@plt+0x11018>
  413c70:	mov	w8, wzr
  413c74:	cbnz	w8, 413c88 <wcrtomb@plt+0x10ed8>
  413c78:	b	413c7c <wcrtomb@plt+0x10ecc>
  413c7c:	mov	w8, wzr
  413c80:	cbnz	w8, 413c94 <wcrtomb@plt+0x10ee4>
  413c84:	b	413ce0 <wcrtomb@plt+0x10f30>
  413c88:	mov	w8, #0x1                   	// #1
  413c8c:	cbnz	w8, 413ce0 <wcrtomb@plt+0x10f30>
  413c90:	b	413c94 <wcrtomb@plt+0x10ee4>
  413c94:	ldur	x8, [x29, #-40]
  413c98:	adds	x8, x8, #0x1
  413c9c:	b.ne	413ce0 <wcrtomb@plt+0x10f30>  // b.any
  413ca0:	b	413ca4 <wcrtomb@plt+0x10ef4>
  413ca4:	mov	w8, wzr
  413ca8:	cbnz	w8, 413cc0 <wcrtomb@plt+0x10f10>
  413cac:	b	413cb0 <wcrtomb@plt+0x10f00>
  413cb0:	ldur	x8, [x29, #-56]
  413cb4:	subs	x8, x8, #0x0
  413cb8:	b.gt	413da4 <wcrtomb@plt+0x10ff4>
  413cbc:	b	413dc8 <wcrtomb@plt+0x11018>
  413cc0:	ldur	x8, [x29, #-56]
  413cc4:	subs	x8, x8, #0x1
  413cc8:	b.lt	413dc8 <wcrtomb@plt+0x11018>  // b.tstop
  413ccc:	b	413cd0 <wcrtomb@plt+0x10f20>
  413cd0:	ldur	x8, [x29, #-56]
  413cd4:	subs	x8, x8, #0x1
  413cd8:	tbz	x8, #63, 413da4 <wcrtomb@plt+0x10ff4>
  413cdc:	b	413dc8 <wcrtomb@plt+0x11018>
  413ce0:	ldur	x8, [x29, #-56]
  413ce4:	subs	x8, x8, #0x0
  413ce8:	b.gt	413da4 <wcrtomb@plt+0x10ff4>
  413cec:	b	413dc8 <wcrtomb@plt+0x11018>
  413cf0:	ldur	x8, [x29, #-40]
  413cf4:	cbnz	x8, 413d08 <wcrtomb@plt+0x10f58>
  413cf8:	b	413cfc <wcrtomb@plt+0x10f4c>
  413cfc:	mov	w8, wzr
  413d00:	cbnz	w8, 413da4 <wcrtomb@plt+0x10ff4>
  413d04:	b	413dc8 <wcrtomb@plt+0x11018>
  413d08:	ldur	x8, [x29, #-56]
  413d0c:	tbz	x8, #63, 413d84 <wcrtomb@plt+0x10fd4>
  413d10:	b	413d14 <wcrtomb@plt+0x10f64>
  413d14:	mov	w8, wzr
  413d18:	cbnz	w8, 413d2c <wcrtomb@plt+0x10f7c>
  413d1c:	b	413d20 <wcrtomb@plt+0x10f70>
  413d20:	mov	w8, wzr
  413d24:	cbnz	w8, 413d38 <wcrtomb@plt+0x10f88>
  413d28:	b	413d74 <wcrtomb@plt+0x10fc4>
  413d2c:	mov	w8, #0x1                   	// #1
  413d30:	cbnz	w8, 413d74 <wcrtomb@plt+0x10fc4>
  413d34:	b	413d38 <wcrtomb@plt+0x10f88>
  413d38:	ldur	x8, [x29, #-56]
  413d3c:	adds	x8, x8, #0x1
  413d40:	b.ne	413d74 <wcrtomb@plt+0x10fc4>  // b.any
  413d44:	b	413d48 <wcrtomb@plt+0x10f98>
  413d48:	mov	w8, wzr
  413d4c:	cbnz	w8, 413d64 <wcrtomb@plt+0x10fb4>
  413d50:	b	413d54 <wcrtomb@plt+0x10fa4>
  413d54:	ldur	x8, [x29, #-40]
  413d58:	subs	x8, x8, #0x0
  413d5c:	b.gt	413da4 <wcrtomb@plt+0x10ff4>
  413d60:	b	413dc8 <wcrtomb@plt+0x11018>
  413d64:	ldur	x8, [x29, #-40]
  413d68:	subs	x8, x8, #0x1
  413d6c:	tbz	x8, #63, 413da4 <wcrtomb@plt+0x10ff4>
  413d70:	b	413dc8 <wcrtomb@plt+0x11018>
  413d74:	ldur	x8, [x29, #-40]
  413d78:	subs	x8, x8, #0x0
  413d7c:	b.gt	413da4 <wcrtomb@plt+0x10ff4>
  413d80:	b	413dc8 <wcrtomb@plt+0x11018>
  413d84:	ldur	x8, [x29, #-40]
  413d88:	mov	w9, #0xffff                	// #65535
  413d8c:	mov	w10, w9
  413d90:	sdiv	x8, x10, x8
  413d94:	ldur	x10, [x29, #-56]
  413d98:	subs	x8, x8, x10
  413d9c:	b.ge	413dc8 <wcrtomb@plt+0x11018>  // b.tcont
  413da0:	b	413da4 <wcrtomb@plt+0x10ff4>
  413da4:	ldur	w8, [x29, #-56]
  413da8:	ldur	w9, [x29, #-40]
  413dac:	mul	w8, w8, w9
  413db0:	mov	w0, w8
  413db4:	and	x10, x0, #0xffff
  413db8:	stur	x10, [x29, #-64]
  413dbc:	mov	w8, #0x1                   	// #1
  413dc0:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  413dc4:	b	414b14 <wcrtomb@plt+0x11d64>
  413dc8:	ldur	w8, [x29, #-56]
  413dcc:	ldur	w9, [x29, #-40]
  413dd0:	mul	w8, w8, w9
  413dd4:	mov	w0, w8
  413dd8:	and	x10, x0, #0xffff
  413ddc:	stur	x10, [x29, #-64]
  413de0:	mov	w8, wzr
  413de4:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  413de8:	b	414b14 <wcrtomb@plt+0x11d64>
  413dec:	mov	w8, #0x1                   	// #1
  413df0:	cbnz	w8, 4142a4 <wcrtomb@plt+0x114f4>
  413df4:	b	413df8 <wcrtomb@plt+0x11048>
  413df8:	mov	w8, wzr
  413dfc:	cbnz	w8, 414078 <wcrtomb@plt+0x112c8>
  413e00:	b	413e04 <wcrtomb@plt+0x11054>
  413e04:	ldur	x8, [x29, #-40]
  413e08:	tbz	x8, #63, 413f5c <wcrtomb@plt+0x111ac>
  413e0c:	b	413e10 <wcrtomb@plt+0x11060>
  413e10:	ldur	x8, [x29, #-56]
  413e14:	tbz	x8, #63, 413ebc <wcrtomb@plt+0x1110c>
  413e18:	b	413e1c <wcrtomb@plt+0x1106c>
  413e1c:	mov	w8, wzr
  413e20:	cbnz	w8, 413e48 <wcrtomb@plt+0x11098>
  413e24:	b	413e28 <wcrtomb@plt+0x11078>
  413e28:	ldur	x8, [x29, #-56]
  413e2c:	ldur	x9, [x29, #-40]
  413e30:	mov	w10, #0x7fffffff            	// #2147483647
  413e34:	mov	w11, w10
  413e38:	sdiv	x9, x11, x9
  413e3c:	subs	x8, x8, x9
  413e40:	b.lt	414030 <wcrtomb@plt+0x11280>  // b.tstop
  413e44:	b	414054 <wcrtomb@plt+0x112a4>
  413e48:	mov	w8, wzr
  413e4c:	cbnz	w8, 413e68 <wcrtomb@plt+0x110b8>
  413e50:	b	413e54 <wcrtomb@plt+0x110a4>
  413e54:	ldur	x8, [x29, #-40]
  413e58:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  413e5c:	subs	x8, x8, x9
  413e60:	b.eq	413e78 <wcrtomb@plt+0x110c8>  // b.none
  413e64:	b	413e84 <wcrtomb@plt+0x110d4>
  413e68:	ldur	x8, [x29, #-40]
  413e6c:	subs	x8, x8, #0x1
  413e70:	b.lt	413e84 <wcrtomb@plt+0x110d4>  // b.tstop
  413e74:	b	413e78 <wcrtomb@plt+0x110c8>
  413e78:	mov	x0, xzr
  413e7c:	str	x0, [sp, #40]
  413e80:	b	413ea4 <wcrtomb@plt+0x110f4>
  413e84:	ldur	x8, [x29, #-40]
  413e88:	mov	x9, xzr
  413e8c:	subs	x8, x9, x8
  413e90:	mov	w10, #0x7fffffff            	// #2147483647
  413e94:	mov	w9, w10
  413e98:	sdiv	x8, x9, x8
  413e9c:	str	x8, [sp, #40]
  413ea0:	b	413ea4 <wcrtomb@plt+0x110f4>
  413ea4:	ldr	x8, [sp, #40]
  413ea8:	ldur	x9, [x29, #-56]
  413eac:	mvn	x9, x9
  413eb0:	subs	x8, x8, x9
  413eb4:	b.le	414030 <wcrtomb@plt+0x11280>
  413eb8:	b	414054 <wcrtomb@plt+0x112a4>
  413ebc:	mov	w8, wzr
  413ec0:	cbnz	w8, 413ed4 <wcrtomb@plt+0x11124>
  413ec4:	b	413ec8 <wcrtomb@plt+0x11118>
  413ec8:	mov	w8, wzr
  413ecc:	cbnz	w8, 413ee0 <wcrtomb@plt+0x11130>
  413ed0:	b	413f40 <wcrtomb@plt+0x11190>
  413ed4:	mov	w8, #0x1                   	// #1
  413ed8:	cbnz	w8, 413f40 <wcrtomb@plt+0x11190>
  413edc:	b	413ee0 <wcrtomb@plt+0x11130>
  413ee0:	ldur	x8, [x29, #-40]
  413ee4:	adds	x8, x8, #0x1
  413ee8:	b.ne	413f40 <wcrtomb@plt+0x11190>  // b.any
  413eec:	b	413ef0 <wcrtomb@plt+0x11140>
  413ef0:	mov	w8, wzr
  413ef4:	cbnz	w8, 413f14 <wcrtomb@plt+0x11164>
  413ef8:	b	413efc <wcrtomb@plt+0x1114c>
  413efc:	ldur	x8, [x29, #-56]
  413f00:	mov	x9, #0xffffffff80000000    	// #-2147483648
  413f04:	add	x8, x8, x9
  413f08:	subs	x8, x8, #0x0
  413f0c:	b.gt	414030 <wcrtomb@plt+0x11280>
  413f10:	b	414054 <wcrtomb@plt+0x112a4>
  413f14:	ldur	x8, [x29, #-56]
  413f18:	subs	x8, x8, #0x1
  413f1c:	b.lt	414054 <wcrtomb@plt+0x112a4>  // b.tstop
  413f20:	b	413f24 <wcrtomb@plt+0x11174>
  413f24:	ldur	x8, [x29, #-56]
  413f28:	subs	x8, x8, #0x1
  413f2c:	mov	w9, #0x7fffffff            	// #2147483647
  413f30:	mov	w10, w9
  413f34:	subs	x8, x8, x10
  413f38:	b.gt	414030 <wcrtomb@plt+0x11280>
  413f3c:	b	414054 <wcrtomb@plt+0x112a4>
  413f40:	ldur	x8, [x29, #-40]
  413f44:	mov	x9, #0xffffffff80000000    	// #-2147483648
  413f48:	sdiv	x8, x9, x8
  413f4c:	ldur	x9, [x29, #-56]
  413f50:	subs	x8, x8, x9
  413f54:	b.lt	414030 <wcrtomb@plt+0x11280>  // b.tstop
  413f58:	b	414054 <wcrtomb@plt+0x112a4>
  413f5c:	ldur	x8, [x29, #-40]
  413f60:	cbnz	x8, 413f74 <wcrtomb@plt+0x111c4>
  413f64:	b	413f68 <wcrtomb@plt+0x111b8>
  413f68:	mov	w8, wzr
  413f6c:	cbnz	w8, 414030 <wcrtomb@plt+0x11280>
  413f70:	b	414054 <wcrtomb@plt+0x112a4>
  413f74:	ldur	x8, [x29, #-56]
  413f78:	tbz	x8, #63, 414010 <wcrtomb@plt+0x11260>
  413f7c:	b	413f80 <wcrtomb@plt+0x111d0>
  413f80:	mov	w8, wzr
  413f84:	cbnz	w8, 413f98 <wcrtomb@plt+0x111e8>
  413f88:	b	413f8c <wcrtomb@plt+0x111dc>
  413f8c:	mov	w8, wzr
  413f90:	cbnz	w8, 413fa4 <wcrtomb@plt+0x111f4>
  413f94:	b	413ff4 <wcrtomb@plt+0x11244>
  413f98:	mov	w8, #0x1                   	// #1
  413f9c:	cbnz	w8, 413ff4 <wcrtomb@plt+0x11244>
  413fa0:	b	413fa4 <wcrtomb@plt+0x111f4>
  413fa4:	ldur	x8, [x29, #-56]
  413fa8:	adds	x8, x8, #0x1
  413fac:	b.ne	413ff4 <wcrtomb@plt+0x11244>  // b.any
  413fb0:	b	413fb4 <wcrtomb@plt+0x11204>
  413fb4:	mov	w8, wzr
  413fb8:	cbnz	w8, 413fd8 <wcrtomb@plt+0x11228>
  413fbc:	b	413fc0 <wcrtomb@plt+0x11210>
  413fc0:	ldur	x8, [x29, #-40]
  413fc4:	mov	x9, #0xffffffff80000000    	// #-2147483648
  413fc8:	add	x8, x8, x9
  413fcc:	subs	x8, x8, #0x0
  413fd0:	b.gt	414030 <wcrtomb@plt+0x11280>
  413fd4:	b	414054 <wcrtomb@plt+0x112a4>
  413fd8:	ldur	x8, [x29, #-40]
  413fdc:	subs	x8, x8, #0x1
  413fe0:	mov	w9, #0x7fffffff            	// #2147483647
  413fe4:	mov	w10, w9
  413fe8:	subs	x8, x8, x10
  413fec:	b.gt	414030 <wcrtomb@plt+0x11280>
  413ff0:	b	414054 <wcrtomb@plt+0x112a4>
  413ff4:	ldur	x8, [x29, #-56]
  413ff8:	mov	x9, #0xffffffff80000000    	// #-2147483648
  413ffc:	sdiv	x8, x9, x8
  414000:	ldur	x9, [x29, #-40]
  414004:	subs	x8, x8, x9
  414008:	b.lt	414030 <wcrtomb@plt+0x11280>  // b.tstop
  41400c:	b	414054 <wcrtomb@plt+0x112a4>
  414010:	ldur	x8, [x29, #-40]
  414014:	mov	w9, #0x7fffffff            	// #2147483647
  414018:	mov	w10, w9
  41401c:	sdiv	x8, x10, x8
  414020:	ldur	x10, [x29, #-56]
  414024:	subs	x8, x8, x10
  414028:	b.ge	414054 <wcrtomb@plt+0x112a4>  // b.tcont
  41402c:	b	414030 <wcrtomb@plt+0x11280>
  414030:	ldur	w8, [x29, #-56]
  414034:	ldur	w9, [x29, #-40]
  414038:	mul	w8, w8, w9
  41403c:	mov	w0, w8
  414040:	sxtw	x10, w0
  414044:	stur	x10, [x29, #-64]
  414048:	mov	w8, #0x1                   	// #1
  41404c:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  414050:	b	414b14 <wcrtomb@plt+0x11d64>
  414054:	ldur	w8, [x29, #-56]
  414058:	ldur	w9, [x29, #-40]
  41405c:	mul	w8, w8, w9
  414060:	mov	w0, w8
  414064:	sxtw	x10, w0
  414068:	stur	x10, [x29, #-64]
  41406c:	mov	w8, wzr
  414070:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  414074:	b	414b14 <wcrtomb@plt+0x11d64>
  414078:	ldur	x8, [x29, #-40]
  41407c:	tbz	x8, #63, 4141b0 <wcrtomb@plt+0x11400>
  414080:	b	414084 <wcrtomb@plt+0x112d4>
  414084:	ldur	x8, [x29, #-56]
  414088:	tbz	x8, #63, 414130 <wcrtomb@plt+0x11380>
  41408c:	b	414090 <wcrtomb@plt+0x112e0>
  414090:	mov	w8, wzr
  414094:	cbnz	w8, 4140bc <wcrtomb@plt+0x1130c>
  414098:	b	41409c <wcrtomb@plt+0x112ec>
  41409c:	ldur	x8, [x29, #-56]
  4140a0:	ldur	x9, [x29, #-40]
  4140a4:	mov	w10, #0xffffffff            	// #-1
  4140a8:	mov	w11, w10
  4140ac:	sdiv	x9, x11, x9
  4140b0:	subs	x8, x8, x9
  4140b4:	b.lt	414264 <wcrtomb@plt+0x114b4>  // b.tstop
  4140b8:	b	414284 <wcrtomb@plt+0x114d4>
  4140bc:	mov	w8, wzr
  4140c0:	cbnz	w8, 4140dc <wcrtomb@plt+0x1132c>
  4140c4:	b	4140c8 <wcrtomb@plt+0x11318>
  4140c8:	ldur	x8, [x29, #-40]
  4140cc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4140d0:	subs	x8, x8, x9
  4140d4:	b.eq	4140ec <wcrtomb@plt+0x1133c>  // b.none
  4140d8:	b	4140f8 <wcrtomb@plt+0x11348>
  4140dc:	ldur	x8, [x29, #-40]
  4140e0:	subs	x8, x8, #0x1
  4140e4:	b.lt	4140f8 <wcrtomb@plt+0x11348>  // b.tstop
  4140e8:	b	4140ec <wcrtomb@plt+0x1133c>
  4140ec:	mov	x0, xzr
  4140f0:	str	x0, [sp, #32]
  4140f4:	b	414118 <wcrtomb@plt+0x11368>
  4140f8:	ldur	x8, [x29, #-40]
  4140fc:	mov	x9, xzr
  414100:	subs	x8, x9, x8
  414104:	mov	w10, #0xffffffff            	// #-1
  414108:	mov	w9, w10
  41410c:	sdiv	x8, x9, x8
  414110:	str	x8, [sp, #32]
  414114:	b	414118 <wcrtomb@plt+0x11368>
  414118:	ldr	x8, [sp, #32]
  41411c:	ldur	x9, [x29, #-56]
  414120:	mvn	x9, x9
  414124:	subs	x8, x8, x9
  414128:	b.le	414264 <wcrtomb@plt+0x114b4>
  41412c:	b	414284 <wcrtomb@plt+0x114d4>
  414130:	mov	w8, wzr
  414134:	cbnz	w8, 414148 <wcrtomb@plt+0x11398>
  414138:	b	41413c <wcrtomb@plt+0x1138c>
  41413c:	mov	w8, wzr
  414140:	cbnz	w8, 414154 <wcrtomb@plt+0x113a4>
  414144:	b	4141a0 <wcrtomb@plt+0x113f0>
  414148:	mov	w8, #0x1                   	// #1
  41414c:	cbnz	w8, 4141a0 <wcrtomb@plt+0x113f0>
  414150:	b	414154 <wcrtomb@plt+0x113a4>
  414154:	ldur	x8, [x29, #-40]
  414158:	adds	x8, x8, #0x1
  41415c:	b.ne	4141a0 <wcrtomb@plt+0x113f0>  // b.any
  414160:	b	414164 <wcrtomb@plt+0x113b4>
  414164:	mov	w8, wzr
  414168:	cbnz	w8, 414180 <wcrtomb@plt+0x113d0>
  41416c:	b	414170 <wcrtomb@plt+0x113c0>
  414170:	ldur	x8, [x29, #-56]
  414174:	subs	x8, x8, #0x0
  414178:	b.gt	414264 <wcrtomb@plt+0x114b4>
  41417c:	b	414284 <wcrtomb@plt+0x114d4>
  414180:	ldur	x8, [x29, #-56]
  414184:	subs	x8, x8, #0x1
  414188:	b.lt	414284 <wcrtomb@plt+0x114d4>  // b.tstop
  41418c:	b	414190 <wcrtomb@plt+0x113e0>
  414190:	ldur	x8, [x29, #-56]
  414194:	subs	x8, x8, #0x1
  414198:	tbz	x8, #63, 414264 <wcrtomb@plt+0x114b4>
  41419c:	b	414284 <wcrtomb@plt+0x114d4>
  4141a0:	ldur	x8, [x29, #-56]
  4141a4:	subs	x8, x8, #0x0
  4141a8:	b.gt	414264 <wcrtomb@plt+0x114b4>
  4141ac:	b	414284 <wcrtomb@plt+0x114d4>
  4141b0:	ldur	x8, [x29, #-40]
  4141b4:	cbnz	x8, 4141c8 <wcrtomb@plt+0x11418>
  4141b8:	b	4141bc <wcrtomb@plt+0x1140c>
  4141bc:	mov	w8, wzr
  4141c0:	cbnz	w8, 414264 <wcrtomb@plt+0x114b4>
  4141c4:	b	414284 <wcrtomb@plt+0x114d4>
  4141c8:	ldur	x8, [x29, #-56]
  4141cc:	tbz	x8, #63, 414244 <wcrtomb@plt+0x11494>
  4141d0:	b	4141d4 <wcrtomb@plt+0x11424>
  4141d4:	mov	w8, wzr
  4141d8:	cbnz	w8, 4141ec <wcrtomb@plt+0x1143c>
  4141dc:	b	4141e0 <wcrtomb@plt+0x11430>
  4141e0:	mov	w8, wzr
  4141e4:	cbnz	w8, 4141f8 <wcrtomb@plt+0x11448>
  4141e8:	b	414234 <wcrtomb@plt+0x11484>
  4141ec:	mov	w8, #0x1                   	// #1
  4141f0:	cbnz	w8, 414234 <wcrtomb@plt+0x11484>
  4141f4:	b	4141f8 <wcrtomb@plt+0x11448>
  4141f8:	ldur	x8, [x29, #-56]
  4141fc:	adds	x8, x8, #0x1
  414200:	b.ne	414234 <wcrtomb@plt+0x11484>  // b.any
  414204:	b	414208 <wcrtomb@plt+0x11458>
  414208:	mov	w8, wzr
  41420c:	cbnz	w8, 414224 <wcrtomb@plt+0x11474>
  414210:	b	414214 <wcrtomb@plt+0x11464>
  414214:	ldur	x8, [x29, #-40]
  414218:	subs	x8, x8, #0x0
  41421c:	b.gt	414264 <wcrtomb@plt+0x114b4>
  414220:	b	414284 <wcrtomb@plt+0x114d4>
  414224:	ldur	x8, [x29, #-40]
  414228:	subs	x8, x8, #0x1
  41422c:	tbz	x8, #63, 414264 <wcrtomb@plt+0x114b4>
  414230:	b	414284 <wcrtomb@plt+0x114d4>
  414234:	ldur	x8, [x29, #-40]
  414238:	subs	x8, x8, #0x0
  41423c:	b.gt	414264 <wcrtomb@plt+0x114b4>
  414240:	b	414284 <wcrtomb@plt+0x114d4>
  414244:	ldur	x8, [x29, #-40]
  414248:	mov	w9, #0xffffffff            	// #-1
  41424c:	mov	w10, w9
  414250:	sdiv	x8, x10, x8
  414254:	ldur	x10, [x29, #-56]
  414258:	subs	x8, x8, x10
  41425c:	b.ge	414284 <wcrtomb@plt+0x114d4>  // b.tcont
  414260:	b	414264 <wcrtomb@plt+0x114b4>
  414264:	ldur	w8, [x29, #-56]
  414268:	ldur	w9, [x29, #-40]
  41426c:	mul	w8, w8, w9
  414270:	mov	w10, w8
  414274:	stur	x10, [x29, #-64]
  414278:	mov	w8, #0x1                   	// #1
  41427c:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  414280:	b	414b14 <wcrtomb@plt+0x11d64>
  414284:	ldur	w8, [x29, #-56]
  414288:	ldur	w9, [x29, #-40]
  41428c:	mul	w8, w8, w9
  414290:	mov	w10, w8
  414294:	stur	x10, [x29, #-64]
  414298:	mov	w8, wzr
  41429c:	cbnz	w8, 414b10 <wcrtomb@plt+0x11d60>
  4142a0:	b	414b14 <wcrtomb@plt+0x11d64>
  4142a4:	mov	w8, wzr
  4142a8:	cbnz	w8, 4146e0 <wcrtomb@plt+0x11930>
  4142ac:	b	4142b0 <wcrtomb@plt+0x11500>
  4142b0:	mov	w8, wzr
  4142b4:	cbnz	w8, 4144c4 <wcrtomb@plt+0x11714>
  4142b8:	b	4142bc <wcrtomb@plt+0x1150c>
  4142bc:	ldur	x8, [x29, #-40]
  4142c0:	tbz	x8, #63, 4143e4 <wcrtomb@plt+0x11634>
  4142c4:	b	4142c8 <wcrtomb@plt+0x11518>
  4142c8:	ldur	x8, [x29, #-56]
  4142cc:	tbz	x8, #63, 41436c <wcrtomb@plt+0x115bc>
  4142d0:	b	4142d4 <wcrtomb@plt+0x11524>
  4142d4:	mov	w8, wzr
  4142d8:	cbnz	w8, 4142fc <wcrtomb@plt+0x1154c>
  4142dc:	b	4142e0 <wcrtomb@plt+0x11530>
  4142e0:	ldur	x8, [x29, #-56]
  4142e4:	ldur	x9, [x29, #-40]
  4142e8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4142ec:	sdiv	x9, x10, x9
  4142f0:	subs	x8, x8, x9
  4142f4:	b.lt	41448c <wcrtomb@plt+0x116dc>  // b.tstop
  4142f8:	b	4144a8 <wcrtomb@plt+0x116f8>
  4142fc:	mov	w8, wzr
  414300:	cbnz	w8, 41431c <wcrtomb@plt+0x1156c>
  414304:	b	414308 <wcrtomb@plt+0x11558>
  414308:	ldur	x8, [x29, #-40]
  41430c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414310:	subs	x8, x8, x9
  414314:	b.eq	41432c <wcrtomb@plt+0x1157c>  // b.none
  414318:	b	414338 <wcrtomb@plt+0x11588>
  41431c:	ldur	x8, [x29, #-40]
  414320:	subs	x8, x8, #0x1
  414324:	b.lt	414338 <wcrtomb@plt+0x11588>  // b.tstop
  414328:	b	41432c <wcrtomb@plt+0x1157c>
  41432c:	mov	x0, xzr
  414330:	str	x0, [sp, #24]
  414334:	b	414354 <wcrtomb@plt+0x115a4>
  414338:	ldur	x8, [x29, #-40]
  41433c:	mov	x9, xzr
  414340:	subs	x8, x9, x8
  414344:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414348:	sdiv	x8, x9, x8
  41434c:	str	x8, [sp, #24]
  414350:	b	414354 <wcrtomb@plt+0x115a4>
  414354:	ldr	x8, [sp, #24]
  414358:	ldur	x9, [x29, #-56]
  41435c:	mvn	x9, x9
  414360:	subs	x8, x8, x9
  414364:	b.le	41448c <wcrtomb@plt+0x116dc>
  414368:	b	4144a8 <wcrtomb@plt+0x116f8>
  41436c:	ldur	x8, [x29, #-40]
  414370:	adds	x8, x8, #0x1
  414374:	b.ne	4143c8 <wcrtomb@plt+0x11618>  // b.any
  414378:	b	41437c <wcrtomb@plt+0x115cc>
  41437c:	mov	w8, wzr
  414380:	cbnz	w8, 4143a0 <wcrtomb@plt+0x115f0>
  414384:	b	414388 <wcrtomb@plt+0x115d8>
  414388:	ldur	x8, [x29, #-56]
  41438c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414390:	add	x8, x8, x9
  414394:	subs	x8, x8, #0x0
  414398:	b.gt	41448c <wcrtomb@plt+0x116dc>
  41439c:	b	4144a8 <wcrtomb@plt+0x116f8>
  4143a0:	ldur	x8, [x29, #-56]
  4143a4:	subs	x8, x8, #0x1
  4143a8:	b.lt	4144a8 <wcrtomb@plt+0x116f8>  // b.tstop
  4143ac:	b	4143b0 <wcrtomb@plt+0x11600>
  4143b0:	ldur	x8, [x29, #-56]
  4143b4:	subs	x8, x8, #0x1
  4143b8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4143bc:	subs	x8, x8, x9
  4143c0:	b.gt	41448c <wcrtomb@plt+0x116dc>
  4143c4:	b	4144a8 <wcrtomb@plt+0x116f8>
  4143c8:	ldur	x8, [x29, #-40]
  4143cc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4143d0:	sdiv	x8, x9, x8
  4143d4:	ldur	x9, [x29, #-56]
  4143d8:	subs	x8, x8, x9
  4143dc:	b.lt	41448c <wcrtomb@plt+0x116dc>  // b.tstop
  4143e0:	b	4144a8 <wcrtomb@plt+0x116f8>
  4143e4:	ldur	x8, [x29, #-40]
  4143e8:	cbnz	x8, 4143fc <wcrtomb@plt+0x1164c>
  4143ec:	b	4143f0 <wcrtomb@plt+0x11640>
  4143f0:	mov	w8, wzr
  4143f4:	cbnz	w8, 41448c <wcrtomb@plt+0x116dc>
  4143f8:	b	4144a8 <wcrtomb@plt+0x116f8>
  4143fc:	ldur	x8, [x29, #-56]
  414400:	tbz	x8, #63, 414470 <wcrtomb@plt+0x116c0>
  414404:	b	414408 <wcrtomb@plt+0x11658>
  414408:	ldur	x8, [x29, #-56]
  41440c:	adds	x8, x8, #0x1
  414410:	b.ne	414454 <wcrtomb@plt+0x116a4>  // b.any
  414414:	b	414418 <wcrtomb@plt+0x11668>
  414418:	mov	w8, wzr
  41441c:	cbnz	w8, 41443c <wcrtomb@plt+0x1168c>
  414420:	b	414424 <wcrtomb@plt+0x11674>
  414424:	ldur	x8, [x29, #-40]
  414428:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41442c:	add	x8, x8, x9
  414430:	subs	x8, x8, #0x0
  414434:	b.gt	41448c <wcrtomb@plt+0x116dc>
  414438:	b	4144a8 <wcrtomb@plt+0x116f8>
  41443c:	ldur	x8, [x29, #-40]
  414440:	subs	x8, x8, #0x1
  414444:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414448:	subs	x8, x8, x9
  41444c:	b.gt	41448c <wcrtomb@plt+0x116dc>
  414450:	b	4144a8 <wcrtomb@plt+0x116f8>
  414454:	ldur	x8, [x29, #-56]
  414458:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41445c:	sdiv	x8, x9, x8
  414460:	ldur	x9, [x29, #-40]
  414464:	subs	x8, x8, x9
  414468:	b.lt	41448c <wcrtomb@plt+0x116dc>  // b.tstop
  41446c:	b	4144a8 <wcrtomb@plt+0x116f8>
  414470:	ldur	x8, [x29, #-40]
  414474:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414478:	sdiv	x8, x9, x8
  41447c:	ldur	x9, [x29, #-56]
  414480:	subs	x8, x8, x9
  414484:	b.ge	4144a8 <wcrtomb@plt+0x116f8>  // b.tcont
  414488:	b	41448c <wcrtomb@plt+0x116dc>
  41448c:	ldur	x8, [x29, #-56]
  414490:	ldur	x9, [x29, #-40]
  414494:	mul	x8, x8, x9
  414498:	stur	x8, [x29, #-64]
  41449c:	mov	w10, #0x1                   	// #1
  4144a0:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  4144a4:	b	414b14 <wcrtomb@plt+0x11d64>
  4144a8:	ldur	x8, [x29, #-56]
  4144ac:	ldur	x9, [x29, #-40]
  4144b0:	mul	x8, x8, x9
  4144b4:	stur	x8, [x29, #-64]
  4144b8:	mov	w10, wzr
  4144bc:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  4144c0:	b	414b14 <wcrtomb@plt+0x11d64>
  4144c4:	ldur	x8, [x29, #-40]
  4144c8:	tbz	x8, #63, 4145f8 <wcrtomb@plt+0x11848>
  4144cc:	b	4144d0 <wcrtomb@plt+0x11720>
  4144d0:	ldur	x8, [x29, #-56]
  4144d4:	tbz	x8, #63, 414578 <wcrtomb@plt+0x117c8>
  4144d8:	b	4144dc <wcrtomb@plt+0x1172c>
  4144dc:	mov	w8, #0x1                   	// #1
  4144e0:	cbnz	w8, 414504 <wcrtomb@plt+0x11754>
  4144e4:	b	4144e8 <wcrtomb@plt+0x11738>
  4144e8:	ldur	x8, [x29, #-56]
  4144ec:	ldur	x9, [x29, #-40]
  4144f0:	mov	x10, #0xffffffffffffffff    	// #-1
  4144f4:	udiv	x9, x10, x9
  4144f8:	subs	x8, x8, x9
  4144fc:	b.cc	4146a8 <wcrtomb@plt+0x118f8>  // b.lo, b.ul, b.last
  414500:	b	4146c4 <wcrtomb@plt+0x11914>
  414504:	mov	w8, wzr
  414508:	cbnz	w8, 414524 <wcrtomb@plt+0x11774>
  41450c:	b	414510 <wcrtomb@plt+0x11760>
  414510:	ldur	x8, [x29, #-40]
  414514:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414518:	subs	x8, x8, x9
  41451c:	b.eq	414534 <wcrtomb@plt+0x11784>  // b.none
  414520:	b	414544 <wcrtomb@plt+0x11794>
  414524:	ldur	x8, [x29, #-40]
  414528:	subs	x8, x8, #0x1
  41452c:	b.lt	414544 <wcrtomb@plt+0x11794>  // b.tstop
  414530:	b	414534 <wcrtomb@plt+0x11784>
  414534:	mov	w8, #0x1                   	// #1
  414538:	mov	w0, w8
  41453c:	str	x0, [sp, #16]
  414540:	b	414560 <wcrtomb@plt+0x117b0>
  414544:	ldur	x8, [x29, #-40]
  414548:	mov	x9, xzr
  41454c:	subs	x8, x9, x8
  414550:	mov	x9, #0xffffffffffffffff    	// #-1
  414554:	udiv	x8, x9, x8
  414558:	str	x8, [sp, #16]
  41455c:	b	414560 <wcrtomb@plt+0x117b0>
  414560:	ldr	x8, [sp, #16]
  414564:	ldur	x9, [x29, #-56]
  414568:	mvn	x9, x9
  41456c:	subs	x8, x8, x9
  414570:	b.ls	4146a8 <wcrtomb@plt+0x118f8>  // b.plast
  414574:	b	4146c4 <wcrtomb@plt+0x11914>
  414578:	mov	w8, wzr
  41457c:	cbnz	w8, 414590 <wcrtomb@plt+0x117e0>
  414580:	b	414584 <wcrtomb@plt+0x117d4>
  414584:	mov	w8, wzr
  414588:	cbnz	w8, 41459c <wcrtomb@plt+0x117ec>
  41458c:	b	4145e8 <wcrtomb@plt+0x11838>
  414590:	mov	w8, #0x1                   	// #1
  414594:	cbnz	w8, 4145e8 <wcrtomb@plt+0x11838>
  414598:	b	41459c <wcrtomb@plt+0x117ec>
  41459c:	ldur	x8, [x29, #-40]
  4145a0:	adds	x8, x8, #0x1
  4145a4:	b.ne	4145e8 <wcrtomb@plt+0x11838>  // b.any
  4145a8:	b	4145ac <wcrtomb@plt+0x117fc>
  4145ac:	mov	w8, wzr
  4145b0:	cbnz	w8, 4145c8 <wcrtomb@plt+0x11818>
  4145b4:	b	4145b8 <wcrtomb@plt+0x11808>
  4145b8:	ldur	x8, [x29, #-56]
  4145bc:	subs	x8, x8, #0x0
  4145c0:	b.gt	4146a8 <wcrtomb@plt+0x118f8>
  4145c4:	b	4146c4 <wcrtomb@plt+0x11914>
  4145c8:	ldur	x8, [x29, #-56]
  4145cc:	subs	x8, x8, #0x1
  4145d0:	b.lt	4146c4 <wcrtomb@plt+0x11914>  // b.tstop
  4145d4:	b	4145d8 <wcrtomb@plt+0x11828>
  4145d8:	ldur	x8, [x29, #-56]
  4145dc:	subs	x8, x8, #0x1
  4145e0:	tbz	x8, #63, 4146a8 <wcrtomb@plt+0x118f8>
  4145e4:	b	4146c4 <wcrtomb@plt+0x11914>
  4145e8:	ldur	x8, [x29, #-56]
  4145ec:	subs	x8, x8, #0x0
  4145f0:	b.gt	4146a8 <wcrtomb@plt+0x118f8>
  4145f4:	b	4146c4 <wcrtomb@plt+0x11914>
  4145f8:	ldur	x8, [x29, #-40]
  4145fc:	cbnz	x8, 414610 <wcrtomb@plt+0x11860>
  414600:	b	414604 <wcrtomb@plt+0x11854>
  414604:	mov	w8, wzr
  414608:	cbnz	w8, 4146a8 <wcrtomb@plt+0x118f8>
  41460c:	b	4146c4 <wcrtomb@plt+0x11914>
  414610:	ldur	x8, [x29, #-56]
  414614:	tbz	x8, #63, 41468c <wcrtomb@plt+0x118dc>
  414618:	b	41461c <wcrtomb@plt+0x1186c>
  41461c:	mov	w8, wzr
  414620:	cbnz	w8, 414634 <wcrtomb@plt+0x11884>
  414624:	b	414628 <wcrtomb@plt+0x11878>
  414628:	mov	w8, wzr
  41462c:	cbnz	w8, 414640 <wcrtomb@plt+0x11890>
  414630:	b	41467c <wcrtomb@plt+0x118cc>
  414634:	mov	w8, #0x1                   	// #1
  414638:	cbnz	w8, 41467c <wcrtomb@plt+0x118cc>
  41463c:	b	414640 <wcrtomb@plt+0x11890>
  414640:	ldur	x8, [x29, #-56]
  414644:	adds	x8, x8, #0x1
  414648:	b.ne	41467c <wcrtomb@plt+0x118cc>  // b.any
  41464c:	b	414650 <wcrtomb@plt+0x118a0>
  414650:	mov	w8, wzr
  414654:	cbnz	w8, 41466c <wcrtomb@plt+0x118bc>
  414658:	b	41465c <wcrtomb@plt+0x118ac>
  41465c:	ldur	x8, [x29, #-40]
  414660:	subs	x8, x8, #0x0
  414664:	b.gt	4146a8 <wcrtomb@plt+0x118f8>
  414668:	b	4146c4 <wcrtomb@plt+0x11914>
  41466c:	ldur	x8, [x29, #-40]
  414670:	subs	x8, x8, #0x1
  414674:	tbz	x8, #63, 4146a8 <wcrtomb@plt+0x118f8>
  414678:	b	4146c4 <wcrtomb@plt+0x11914>
  41467c:	ldur	x8, [x29, #-40]
  414680:	subs	x8, x8, #0x0
  414684:	b.gt	4146a8 <wcrtomb@plt+0x118f8>
  414688:	b	4146c4 <wcrtomb@plt+0x11914>
  41468c:	ldur	x8, [x29, #-40]
  414690:	mov	x9, #0xffffffffffffffff    	// #-1
  414694:	udiv	x8, x9, x8
  414698:	ldur	x9, [x29, #-56]
  41469c:	subs	x8, x8, x9
  4146a0:	b.cs	4146c4 <wcrtomb@plt+0x11914>  // b.hs, b.nlast
  4146a4:	b	4146a8 <wcrtomb@plt+0x118f8>
  4146a8:	ldur	x8, [x29, #-56]
  4146ac:	ldur	x9, [x29, #-40]
  4146b0:	mul	x8, x8, x9
  4146b4:	stur	x8, [x29, #-64]
  4146b8:	mov	w10, #0x1                   	// #1
  4146bc:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  4146c0:	b	414b14 <wcrtomb@plt+0x11d64>
  4146c4:	ldur	x8, [x29, #-56]
  4146c8:	ldur	x9, [x29, #-40]
  4146cc:	mul	x8, x8, x9
  4146d0:	stur	x8, [x29, #-64]
  4146d4:	mov	w10, wzr
  4146d8:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  4146dc:	b	414b14 <wcrtomb@plt+0x11d64>
  4146e0:	mov	w8, wzr
  4146e4:	cbnz	w8, 4148f4 <wcrtomb@plt+0x11b44>
  4146e8:	b	4146ec <wcrtomb@plt+0x1193c>
  4146ec:	ldur	x8, [x29, #-40]
  4146f0:	tbz	x8, #63, 414814 <wcrtomb@plt+0x11a64>
  4146f4:	b	4146f8 <wcrtomb@plt+0x11948>
  4146f8:	ldur	x8, [x29, #-56]
  4146fc:	tbz	x8, #63, 41479c <wcrtomb@plt+0x119ec>
  414700:	b	414704 <wcrtomb@plt+0x11954>
  414704:	mov	w8, wzr
  414708:	cbnz	w8, 41472c <wcrtomb@plt+0x1197c>
  41470c:	b	414710 <wcrtomb@plt+0x11960>
  414710:	ldur	x8, [x29, #-56]
  414714:	ldur	x9, [x29, #-40]
  414718:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41471c:	sdiv	x9, x10, x9
  414720:	subs	x8, x8, x9
  414724:	b.lt	4148bc <wcrtomb@plt+0x11b0c>  // b.tstop
  414728:	b	4148d8 <wcrtomb@plt+0x11b28>
  41472c:	mov	w8, wzr
  414730:	cbnz	w8, 41474c <wcrtomb@plt+0x1199c>
  414734:	b	414738 <wcrtomb@plt+0x11988>
  414738:	ldur	x8, [x29, #-40]
  41473c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414740:	subs	x8, x8, x9
  414744:	b.eq	41475c <wcrtomb@plt+0x119ac>  // b.none
  414748:	b	414768 <wcrtomb@plt+0x119b8>
  41474c:	ldur	x8, [x29, #-40]
  414750:	subs	x8, x8, #0x1
  414754:	b.lt	414768 <wcrtomb@plt+0x119b8>  // b.tstop
  414758:	b	41475c <wcrtomb@plt+0x119ac>
  41475c:	mov	x0, xzr
  414760:	str	x0, [sp, #8]
  414764:	b	414784 <wcrtomb@plt+0x119d4>
  414768:	ldur	x8, [x29, #-40]
  41476c:	mov	x9, xzr
  414770:	subs	x8, x9, x8
  414774:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414778:	sdiv	x8, x9, x8
  41477c:	str	x8, [sp, #8]
  414780:	b	414784 <wcrtomb@plt+0x119d4>
  414784:	ldr	x8, [sp, #8]
  414788:	ldur	x9, [x29, #-56]
  41478c:	mvn	x9, x9
  414790:	subs	x8, x8, x9
  414794:	b.le	4148bc <wcrtomb@plt+0x11b0c>
  414798:	b	4148d8 <wcrtomb@plt+0x11b28>
  41479c:	ldur	x8, [x29, #-40]
  4147a0:	adds	x8, x8, #0x1
  4147a4:	b.ne	4147f8 <wcrtomb@plt+0x11a48>  // b.any
  4147a8:	b	4147ac <wcrtomb@plt+0x119fc>
  4147ac:	mov	w8, wzr
  4147b0:	cbnz	w8, 4147d0 <wcrtomb@plt+0x11a20>
  4147b4:	b	4147b8 <wcrtomb@plt+0x11a08>
  4147b8:	ldur	x8, [x29, #-56]
  4147bc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  4147c0:	add	x8, x8, x9
  4147c4:	subs	x8, x8, #0x0
  4147c8:	b.gt	4148bc <wcrtomb@plt+0x11b0c>
  4147cc:	b	4148d8 <wcrtomb@plt+0x11b28>
  4147d0:	ldur	x8, [x29, #-56]
  4147d4:	subs	x8, x8, #0x1
  4147d8:	b.lt	4148d8 <wcrtomb@plt+0x11b28>  // b.tstop
  4147dc:	b	4147e0 <wcrtomb@plt+0x11a30>
  4147e0:	ldur	x8, [x29, #-56]
  4147e4:	subs	x8, x8, #0x1
  4147e8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4147ec:	subs	x8, x8, x9
  4147f0:	b.gt	4148bc <wcrtomb@plt+0x11b0c>
  4147f4:	b	4148d8 <wcrtomb@plt+0x11b28>
  4147f8:	ldur	x8, [x29, #-40]
  4147fc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414800:	sdiv	x8, x9, x8
  414804:	ldur	x9, [x29, #-56]
  414808:	subs	x8, x8, x9
  41480c:	b.lt	4148bc <wcrtomb@plt+0x11b0c>  // b.tstop
  414810:	b	4148d8 <wcrtomb@plt+0x11b28>
  414814:	ldur	x8, [x29, #-40]
  414818:	cbnz	x8, 41482c <wcrtomb@plt+0x11a7c>
  41481c:	b	414820 <wcrtomb@plt+0x11a70>
  414820:	mov	w8, wzr
  414824:	cbnz	w8, 4148bc <wcrtomb@plt+0x11b0c>
  414828:	b	4148d8 <wcrtomb@plt+0x11b28>
  41482c:	ldur	x8, [x29, #-56]
  414830:	tbz	x8, #63, 4148a0 <wcrtomb@plt+0x11af0>
  414834:	b	414838 <wcrtomb@plt+0x11a88>
  414838:	ldur	x8, [x29, #-56]
  41483c:	adds	x8, x8, #0x1
  414840:	b.ne	414884 <wcrtomb@plt+0x11ad4>  // b.any
  414844:	b	414848 <wcrtomb@plt+0x11a98>
  414848:	mov	w8, wzr
  41484c:	cbnz	w8, 41486c <wcrtomb@plt+0x11abc>
  414850:	b	414854 <wcrtomb@plt+0x11aa4>
  414854:	ldur	x8, [x29, #-40]
  414858:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41485c:	add	x8, x8, x9
  414860:	subs	x8, x8, #0x0
  414864:	b.gt	4148bc <wcrtomb@plt+0x11b0c>
  414868:	b	4148d8 <wcrtomb@plt+0x11b28>
  41486c:	ldur	x8, [x29, #-40]
  414870:	subs	x8, x8, #0x1
  414874:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  414878:	subs	x8, x8, x9
  41487c:	b.gt	4148bc <wcrtomb@plt+0x11b0c>
  414880:	b	4148d8 <wcrtomb@plt+0x11b28>
  414884:	ldur	x8, [x29, #-56]
  414888:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41488c:	sdiv	x8, x9, x8
  414890:	ldur	x9, [x29, #-40]
  414894:	subs	x8, x8, x9
  414898:	b.lt	4148bc <wcrtomb@plt+0x11b0c>  // b.tstop
  41489c:	b	4148d8 <wcrtomb@plt+0x11b28>
  4148a0:	ldur	x8, [x29, #-40]
  4148a4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4148a8:	sdiv	x8, x9, x8
  4148ac:	ldur	x9, [x29, #-56]
  4148b0:	subs	x8, x8, x9
  4148b4:	b.ge	4148d8 <wcrtomb@plt+0x11b28>  // b.tcont
  4148b8:	b	4148bc <wcrtomb@plt+0x11b0c>
  4148bc:	ldur	x8, [x29, #-56]
  4148c0:	ldur	x9, [x29, #-40]
  4148c4:	mul	x8, x8, x9
  4148c8:	stur	x8, [x29, #-64]
  4148cc:	mov	w10, #0x1                   	// #1
  4148d0:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  4148d4:	b	414b14 <wcrtomb@plt+0x11d64>
  4148d8:	ldur	x8, [x29, #-56]
  4148dc:	ldur	x9, [x29, #-40]
  4148e0:	mul	x8, x8, x9
  4148e4:	stur	x8, [x29, #-64]
  4148e8:	mov	w10, wzr
  4148ec:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  4148f0:	b	414b14 <wcrtomb@plt+0x11d64>
  4148f4:	ldur	x8, [x29, #-40]
  4148f8:	tbz	x8, #63, 414a28 <wcrtomb@plt+0x11c78>
  4148fc:	b	414900 <wcrtomb@plt+0x11b50>
  414900:	ldur	x8, [x29, #-56]
  414904:	tbz	x8, #63, 4149a8 <wcrtomb@plt+0x11bf8>
  414908:	b	41490c <wcrtomb@plt+0x11b5c>
  41490c:	mov	w8, #0x1                   	// #1
  414910:	cbnz	w8, 414934 <wcrtomb@plt+0x11b84>
  414914:	b	414918 <wcrtomb@plt+0x11b68>
  414918:	ldur	x8, [x29, #-56]
  41491c:	ldur	x9, [x29, #-40]
  414920:	mov	x10, #0xffffffffffffffff    	// #-1
  414924:	udiv	x9, x10, x9
  414928:	subs	x8, x8, x9
  41492c:	b.cc	414ad8 <wcrtomb@plt+0x11d28>  // b.lo, b.ul, b.last
  414930:	b	414af4 <wcrtomb@plt+0x11d44>
  414934:	mov	w8, wzr
  414938:	cbnz	w8, 414954 <wcrtomb@plt+0x11ba4>
  41493c:	b	414940 <wcrtomb@plt+0x11b90>
  414940:	ldur	x8, [x29, #-40]
  414944:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  414948:	subs	x8, x8, x9
  41494c:	b.eq	414964 <wcrtomb@plt+0x11bb4>  // b.none
  414950:	b	414974 <wcrtomb@plt+0x11bc4>
  414954:	ldur	x8, [x29, #-40]
  414958:	subs	x8, x8, #0x1
  41495c:	b.lt	414974 <wcrtomb@plt+0x11bc4>  // b.tstop
  414960:	b	414964 <wcrtomb@plt+0x11bb4>
  414964:	mov	w8, #0x1                   	// #1
  414968:	mov	w0, w8
  41496c:	str	x0, [sp]
  414970:	b	414990 <wcrtomb@plt+0x11be0>
  414974:	ldur	x8, [x29, #-40]
  414978:	mov	x9, xzr
  41497c:	subs	x8, x9, x8
  414980:	mov	x9, #0xffffffffffffffff    	// #-1
  414984:	udiv	x8, x9, x8
  414988:	str	x8, [sp]
  41498c:	b	414990 <wcrtomb@plt+0x11be0>
  414990:	ldr	x8, [sp]
  414994:	ldur	x9, [x29, #-56]
  414998:	mvn	x9, x9
  41499c:	subs	x8, x8, x9
  4149a0:	b.ls	414ad8 <wcrtomb@plt+0x11d28>  // b.plast
  4149a4:	b	414af4 <wcrtomb@plt+0x11d44>
  4149a8:	mov	w8, wzr
  4149ac:	cbnz	w8, 4149c0 <wcrtomb@plt+0x11c10>
  4149b0:	b	4149b4 <wcrtomb@plt+0x11c04>
  4149b4:	mov	w8, wzr
  4149b8:	cbnz	w8, 4149cc <wcrtomb@plt+0x11c1c>
  4149bc:	b	414a18 <wcrtomb@plt+0x11c68>
  4149c0:	mov	w8, #0x1                   	// #1
  4149c4:	cbnz	w8, 414a18 <wcrtomb@plt+0x11c68>
  4149c8:	b	4149cc <wcrtomb@plt+0x11c1c>
  4149cc:	ldur	x8, [x29, #-40]
  4149d0:	adds	x8, x8, #0x1
  4149d4:	b.ne	414a18 <wcrtomb@plt+0x11c68>  // b.any
  4149d8:	b	4149dc <wcrtomb@plt+0x11c2c>
  4149dc:	mov	w8, wzr
  4149e0:	cbnz	w8, 4149f8 <wcrtomb@plt+0x11c48>
  4149e4:	b	4149e8 <wcrtomb@plt+0x11c38>
  4149e8:	ldur	x8, [x29, #-56]
  4149ec:	subs	x8, x8, #0x0
  4149f0:	b.gt	414ad8 <wcrtomb@plt+0x11d28>
  4149f4:	b	414af4 <wcrtomb@plt+0x11d44>
  4149f8:	ldur	x8, [x29, #-56]
  4149fc:	subs	x8, x8, #0x1
  414a00:	b.lt	414af4 <wcrtomb@plt+0x11d44>  // b.tstop
  414a04:	b	414a08 <wcrtomb@plt+0x11c58>
  414a08:	ldur	x8, [x29, #-56]
  414a0c:	subs	x8, x8, #0x1
  414a10:	tbz	x8, #63, 414ad8 <wcrtomb@plt+0x11d28>
  414a14:	b	414af4 <wcrtomb@plt+0x11d44>
  414a18:	ldur	x8, [x29, #-56]
  414a1c:	subs	x8, x8, #0x0
  414a20:	b.gt	414ad8 <wcrtomb@plt+0x11d28>
  414a24:	b	414af4 <wcrtomb@plt+0x11d44>
  414a28:	ldur	x8, [x29, #-40]
  414a2c:	cbnz	x8, 414a40 <wcrtomb@plt+0x11c90>
  414a30:	b	414a34 <wcrtomb@plt+0x11c84>
  414a34:	mov	w8, wzr
  414a38:	cbnz	w8, 414ad8 <wcrtomb@plt+0x11d28>
  414a3c:	b	414af4 <wcrtomb@plt+0x11d44>
  414a40:	ldur	x8, [x29, #-56]
  414a44:	tbz	x8, #63, 414abc <wcrtomb@plt+0x11d0c>
  414a48:	b	414a4c <wcrtomb@plt+0x11c9c>
  414a4c:	mov	w8, wzr
  414a50:	cbnz	w8, 414a64 <wcrtomb@plt+0x11cb4>
  414a54:	b	414a58 <wcrtomb@plt+0x11ca8>
  414a58:	mov	w8, wzr
  414a5c:	cbnz	w8, 414a70 <wcrtomb@plt+0x11cc0>
  414a60:	b	414aac <wcrtomb@plt+0x11cfc>
  414a64:	mov	w8, #0x1                   	// #1
  414a68:	cbnz	w8, 414aac <wcrtomb@plt+0x11cfc>
  414a6c:	b	414a70 <wcrtomb@plt+0x11cc0>
  414a70:	ldur	x8, [x29, #-56]
  414a74:	adds	x8, x8, #0x1
  414a78:	b.ne	414aac <wcrtomb@plt+0x11cfc>  // b.any
  414a7c:	b	414a80 <wcrtomb@plt+0x11cd0>
  414a80:	mov	w8, wzr
  414a84:	cbnz	w8, 414a9c <wcrtomb@plt+0x11cec>
  414a88:	b	414a8c <wcrtomb@plt+0x11cdc>
  414a8c:	ldur	x8, [x29, #-40]
  414a90:	subs	x8, x8, #0x0
  414a94:	b.gt	414ad8 <wcrtomb@plt+0x11d28>
  414a98:	b	414af4 <wcrtomb@plt+0x11d44>
  414a9c:	ldur	x8, [x29, #-40]
  414aa0:	subs	x8, x8, #0x1
  414aa4:	tbz	x8, #63, 414ad8 <wcrtomb@plt+0x11d28>
  414aa8:	b	414af4 <wcrtomb@plt+0x11d44>
  414aac:	ldur	x8, [x29, #-40]
  414ab0:	subs	x8, x8, #0x0
  414ab4:	b.gt	414ad8 <wcrtomb@plt+0x11d28>
  414ab8:	b	414af4 <wcrtomb@plt+0x11d44>
  414abc:	ldur	x8, [x29, #-40]
  414ac0:	mov	x9, #0xffffffffffffffff    	// #-1
  414ac4:	udiv	x8, x9, x8
  414ac8:	ldur	x9, [x29, #-56]
  414acc:	subs	x8, x8, x9
  414ad0:	b.cs	414af4 <wcrtomb@plt+0x11d44>  // b.hs, b.nlast
  414ad4:	b	414ad8 <wcrtomb@plt+0x11d28>
  414ad8:	ldur	x8, [x29, #-56]
  414adc:	ldur	x9, [x29, #-40]
  414ae0:	mul	x8, x8, x9
  414ae4:	stur	x8, [x29, #-64]
  414ae8:	mov	w10, #0x1                   	// #1
  414aec:	cbnz	w10, 414b10 <wcrtomb@plt+0x11d60>
  414af0:	b	414b14 <wcrtomb@plt+0x11d64>
  414af4:	ldur	x8, [x29, #-56]
  414af8:	ldur	x9, [x29, #-40]
  414afc:	mul	x8, x8, x9
  414b00:	stur	x8, [x29, #-64]
  414b04:	mov	w10, #0x1                   	// #1
  414b08:	cbnz	w10, 414b14 <wcrtomb@plt+0x11d64>
  414b0c:	b	414b10 <wcrtomb@plt+0x11d60>
  414b10:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  414b14:	ldur	x0, [x29, #-8]
  414b18:	ldur	x1, [x29, #-64]
  414b1c:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  414b20:	stur	x0, [x29, #-8]
  414b24:	ldur	x8, [x29, #-56]
  414b28:	ldur	x9, [x29, #-16]
  414b2c:	str	x8, [x9]
  414b30:	ldur	x0, [x29, #-8]
  414b34:	ldp	x29, x30, [sp, #240]
  414b38:	add	sp, sp, #0x100
  414b3c:	ret
  414b40:	sub	sp, sp, #0x30
  414b44:	stp	x29, x30, [sp, #32]
  414b48:	add	x29, sp, #0x20
  414b4c:	stur	x0, [x29, #-8]
  414b50:	ldur	x8, [x29, #-8]
  414b54:	add	x0, x8, #0x48
  414b58:	ldur	x8, [x29, #-8]
  414b5c:	ldr	x1, [x8, #32]
  414b60:	ldur	x8, [x29, #-8]
  414b64:	ldr	x2, [x8, #40]
  414b68:	ldur	x3, [x29, #-8]
  414b6c:	bl	415784 <wcrtomb@plt+0x129d4>
  414b70:	stur	w0, [x29, #-12]
  414b74:	ldur	w9, [x29, #-12]
  414b78:	cmp	w9, #0x1
  414b7c:	b.ne	414b9c <wcrtomb@plt+0x11dec>  // b.any
  414b80:	ldur	x8, [x29, #-8]
  414b84:	ldr	x8, [x8, #32]
  414b88:	ldrb	w0, [x8]
  414b8c:	bl	415858 <wcrtomb@plt+0x12aa8>
  414b90:	and	w9, w0, #0xff
  414b94:	str	w9, [sp, #12]
  414b98:	b	414ba4 <wcrtomb@plt+0x11df4>
  414b9c:	mov	w8, #0xffffffff            	// #-1
  414ba0:	str	w8, [sp, #12]
  414ba4:	ldr	w8, [sp, #12]
  414ba8:	str	w8, [sp, #16]
  414bac:	ldursw	x9, [x29, #-12]
  414bb0:	ldur	x10, [x29, #-8]
  414bb4:	ldr	x11, [x10, #32]
  414bb8:	add	x9, x11, x9
  414bbc:	str	x9, [x10, #32]
  414bc0:	ldursw	x9, [x29, #-12]
  414bc4:	ldur	x10, [x29, #-8]
  414bc8:	ldr	x11, [x10, #40]
  414bcc:	subs	x9, x11, x9
  414bd0:	str	x9, [x10, #40]
  414bd4:	ldr	w0, [sp, #16]
  414bd8:	ldp	x29, x30, [sp, #32]
  414bdc:	add	sp, sp, #0x30
  414be0:	ret
  414be4:	sub	sp, sp, #0x10
  414be8:	mov	w8, #0x30                  	// #48
  414bec:	strb	w0, [sp, #15]
  414bf0:	ldrb	w9, [sp, #15]
  414bf4:	mov	w10, #0x0                   	// #0
  414bf8:	cmp	w8, w9
  414bfc:	str	w10, [sp, #8]
  414c00:	b.gt	414c14 <wcrtomb@plt+0x11e64>
  414c04:	ldrb	w8, [sp, #15]
  414c08:	cmp	w8, #0x39
  414c0c:	cset	w8, le
  414c10:	str	w8, [sp, #8]
  414c14:	ldr	w8, [sp, #8]
  414c18:	and	w0, w8, #0x1
  414c1c:	add	sp, sp, #0x10
  414c20:	ret
  414c24:	sub	sp, sp, #0x10
  414c28:	str	x0, [sp, #8]
  414c2c:	str	wzr, [sp, #4]
  414c30:	ldr	w8, [sp, #4]
  414c34:	cmp	w8, #0x4
  414c38:	b.ge	414c5c <wcrtomb@plt+0x11eac>  // b.tcont
  414c3c:	ldr	x8, [sp, #8]
  414c40:	ldrsw	x9, [sp, #4]
  414c44:	mov	x10, #0xffffffffffffffff    	// #-1
  414c48:	str	x10, [x8, x9, lsl #3]
  414c4c:	ldr	w8, [sp, #4]
  414c50:	add	w8, w8, #0x1
  414c54:	str	w8, [sp, #4]
  414c58:	b	414c30 <wcrtomb@plt+0x11e80>
  414c5c:	add	sp, sp, #0x10
  414c60:	ret
  414c64:	sub	sp, sp, #0x20
  414c68:	mov	x8, #0x1                   	// #1
  414c6c:	mov	w9, #0x40                  	// #64
  414c70:	str	w0, [sp, #28]
  414c74:	str	x1, [sp, #16]
  414c78:	str	x8, [sp, #8]
  414c7c:	ldr	x8, [sp, #8]
  414c80:	ldr	w10, [sp, #28]
  414c84:	udiv	w11, w10, w9
  414c88:	mul	w11, w11, w9
  414c8c:	subs	w10, w10, w11
  414c90:	mov	w12, w10
  414c94:	lsl	x8, x8, x12
  414c98:	ldr	x12, [sp, #16]
  414c9c:	ldr	w10, [sp, #28]
  414ca0:	udiv	w9, w10, w9
  414ca4:	mov	w13, w9
  414ca8:	ubfx	x13, x13, #0, #32
  414cac:	mov	x14, #0x8                   	// #8
  414cb0:	mul	x13, x14, x13
  414cb4:	add	x12, x12, x13
  414cb8:	ldr	x13, [x12]
  414cbc:	bic	x8, x13, x8
  414cc0:	str	x8, [x12]
  414cc4:	add	sp, sp, #0x20
  414cc8:	ret
  414ccc:	sub	sp, sp, #0x30
  414cd0:	stp	x29, x30, [sp, #32]
  414cd4:	add	x29, sp, #0x20
  414cd8:	str	x0, [sp, #16]
  414cdc:	str	x1, [sp, #8]
  414ce0:	str	xzr, [sp]
  414ce4:	ldr	x8, [sp]
  414ce8:	ldr	x9, [sp, #16]
  414cec:	ldr	x9, [x9, #8]
  414cf0:	cmp	x8, x9
  414cf4:	b.ge	414d3c <wcrtomb@plt+0x11f8c>  // b.tcont
  414cf8:	ldr	x0, [sp, #8]
  414cfc:	ldr	x8, [sp, #16]
  414d00:	ldr	x8, [x8]
  414d04:	ldr	x9, [sp]
  414d08:	mov	x10, #0x20                  	// #32
  414d0c:	mul	x9, x10, x9
  414d10:	add	x1, x8, x9
  414d14:	bl	41586c <wcrtomb@plt+0x12abc>
  414d18:	tbnz	w0, #0, 414d20 <wcrtomb@plt+0x11f70>
  414d1c:	b	414d2c <wcrtomb@plt+0x11f7c>
  414d20:	ldr	x8, [sp]
  414d24:	stur	x8, [x29, #-8]
  414d28:	b	414db0 <wcrtomb@plt+0x12000>
  414d2c:	ldr	x8, [sp]
  414d30:	add	x8, x8, #0x1
  414d34:	str	x8, [sp]
  414d38:	b	414ce4 <wcrtomb@plt+0x11f34>
  414d3c:	ldr	x8, [sp, #16]
  414d40:	ldr	x0, [x8]
  414d44:	ldr	x8, [sp, #16]
  414d48:	ldr	x1, [x8, #8]
  414d4c:	ldr	x8, [sp, #16]
  414d50:	add	x2, x8, #0x10
  414d54:	mov	x3, #0xfffffffffffffeeb    	// #-277
  414d58:	movk	x3, #0x7fff, lsl #48
  414d5c:	mov	x4, #0x20                  	// #32
  414d60:	bl	4158dc <wcrtomb@plt+0x12b2c>
  414d64:	ldr	x8, [sp, #16]
  414d68:	str	x0, [x8]
  414d6c:	ldr	x8, [sp, #16]
  414d70:	ldr	x9, [x8, #8]
  414d74:	add	x9, x9, #0x1
  414d78:	str	x9, [x8, #8]
  414d7c:	ldr	x8, [sp, #16]
  414d80:	ldr	x8, [x8]
  414d84:	ldr	x9, [sp]
  414d88:	mov	x10, #0x20                  	// #32
  414d8c:	mul	x9, x10, x9
  414d90:	add	x8, x8, x9
  414d94:	ldr	x9, [sp, #8]
  414d98:	ldr	q0, [x9]
  414d9c:	str	q0, [x8]
  414da0:	ldr	q0, [x9, #16]
  414da4:	str	q0, [x8, #16]
  414da8:	ldr	x8, [sp]
  414dac:	stur	x8, [x29, #-8]
  414db0:	ldur	x0, [x29, #-8]
  414db4:	ldp	x29, x30, [sp, #32]
  414db8:	add	sp, sp, #0x30
  414dbc:	ret
  414dc0:	sub	sp, sp, #0x20
  414dc4:	stp	x29, x30, [sp, #16]
  414dc8:	add	x29, sp, #0x10
  414dcc:	mov	x2, #0x20                  	// #32
  414dd0:	str	x0, [sp, #8]
  414dd4:	ldr	x0, [sp, #8]
  414dd8:	mov	w8, wzr
  414ddc:	mov	w1, w8
  414de0:	bl	402960 <memset@plt>
  414de4:	ldp	x29, x30, [sp, #16]
  414de8:	add	sp, sp, #0x20
  414dec:	ret
  414df0:	sub	sp, sp, #0x10
  414df4:	str	x0, [sp, #8]
  414df8:	str	wzr, [sp, #4]
  414dfc:	ldr	w8, [sp, #4]
  414e00:	cmp	w8, #0x4
  414e04:	b.ge	414e38 <wcrtomb@plt+0x12088>  // b.tcont
  414e08:	ldr	x8, [sp, #8]
  414e0c:	ldrsw	x9, [sp, #4]
  414e10:	ldr	x8, [x8, x9, lsl #3]
  414e14:	mov	x9, #0xffffffffffffffff    	// #-1
  414e18:	bic	x8, x9, x8
  414e1c:	ldr	x9, [sp, #8]
  414e20:	ldrsw	x10, [sp, #4]
  414e24:	str	x8, [x9, x10, lsl #3]
  414e28:	ldr	w8, [sp, #4]
  414e2c:	add	w8, w8, #0x1
  414e30:	str	w8, [sp, #4]
  414e34:	b	414dfc <wcrtomb@plt+0x1204c>
  414e38:	add	sp, sp, #0x10
  414e3c:	ret
  414e40:	sub	sp, sp, #0x30
  414e44:	stp	x29, x30, [sp, #32]
  414e48:	add	x29, sp, #0x20
  414e4c:	stur	x0, [x29, #-8]
  414e50:	str	x1, [sp, #16]
  414e54:	str	x2, [sp, #8]
  414e58:	ldur	x8, [x29, #-8]
  414e5c:	ldr	x8, [x8, #32]
  414e60:	ldr	x9, [sp, #16]
  414e64:	str	x8, [x9]
  414e68:	ldur	x8, [x29, #-8]
  414e6c:	ldr	x8, [x8, #40]
  414e70:	ldr	x9, [sp, #16]
  414e74:	str	x8, [x9, #8]
  414e78:	ldr	x8, [sp, #8]
  414e7c:	ldur	x9, [x29, #-8]
  414e80:	str	x8, [x9, #32]
  414e84:	ldr	x0, [sp, #8]
  414e88:	bl	4026f0 <strlen@plt>
  414e8c:	ldur	x8, [x29, #-8]
  414e90:	str	x0, [x8, #40]
  414e94:	ldp	x29, x30, [sp, #32]
  414e98:	add	sp, sp, #0x30
  414e9c:	ret
  414ea0:	sub	sp, sp, #0x170
  414ea4:	stp	x29, x30, [sp, #336]
  414ea8:	str	x28, [sp, #352]
  414eac:	add	x29, sp, #0x150
  414eb0:	sub	x8, x29, #0x88
  414eb4:	mov	w9, #0x1                   	// #1
  414eb8:	mov	w10, #0x1                   	// #1
  414ebc:	sub	x11, x29, #0x38
  414ec0:	str	x0, [x8, #120]
  414ec4:	sturb	w9, [x29, #-17]
  414ec8:	ldr	x12, [x8, #120]
  414ecc:	str	xzr, [x12, #104]
  414ed0:	mov	x0, x11
  414ed4:	str	x8, [sp, #32]
  414ed8:	str	w10, [sp, #28]
  414edc:	bl	414dc0 <wcrtomb@plt+0x12010>
  414ee0:	ldr	x8, [sp, #32]
  414ee4:	ldr	x0, [x8, #120]
  414ee8:	bl	415948 <wcrtomb@plt+0x12b98>
  414eec:	stur	w0, [x29, #-60]
  414ef0:	ldur	w9, [x29, #-60]
  414ef4:	cmp	w9, #0x5e
  414ef8:	cset	w9, eq  // eq = none
  414efc:	ldr	w10, [sp, #28]
  414f00:	and	w9, w9, w10
  414f04:	sturb	w9, [x29, #-61]
  414f08:	ldurb	w9, [x29, #-61]
  414f0c:	tbnz	w9, #0, 414f14 <wcrtomb@plt+0x12164>
  414f10:	b	414f38 <wcrtomb@plt+0x12188>
  414f14:	ldr	x8, [sp, #32]
  414f18:	ldr	x0, [x8, #120]
  414f1c:	bl	415948 <wcrtomb@plt+0x12b98>
  414f20:	stur	w0, [x29, #-60]
  414f24:	ldr	x8, [sp, #32]
  414f28:	ldr	x9, [x8, #120]
  414f2c:	ldrb	w10, [x9, #1049]
  414f30:	and	w10, w10, #0x1
  414f34:	sturb	w10, [x29, #-17]
  414f38:	ldr	x8, [sp, #32]
  414f3c:	ldr	x9, [x8, #120]
  414f40:	ldr	w10, [x9, #72]
  414f44:	stur	w10, [x29, #-68]
  414f48:	ldur	w10, [x29, #-60]
  414f4c:	cmp	w10, #0x3a
  414f50:	cset	w10, eq  // eq = none
  414f54:	and	w10, w10, #0x1
  414f58:	stur	w10, [x29, #-24]
  414f5c:	mov	w8, #0x100                 	// #256
  414f60:	stur	w8, [x29, #-72]
  414f64:	ldur	w8, [x29, #-24]
  414f68:	and	w8, w8, #0xfffffffd
  414f6c:	stur	w8, [x29, #-24]
  414f70:	ldur	w8, [x29, #-60]
  414f74:	cmp	w8, #0x5b
  414f78:	b.ne	4151dc <wcrtomb@plt+0x1242c>  // b.any
  414f7c:	ldr	x8, [sp, #32]
  414f80:	ldr	x0, [x8, #120]
  414f84:	bl	415948 <wcrtomb@plt+0x12b98>
  414f88:	stur	w0, [x29, #-72]
  414f8c:	ldr	x8, [sp, #32]
  414f90:	ldr	x9, [x8, #120]
  414f94:	ldr	w10, [x9, #72]
  414f98:	stur	w10, [x29, #-76]
  414f9c:	ldur	w10, [x29, #-72]
  414fa0:	cmp	w10, #0x3a
  414fa4:	b.ne	414fbc <wcrtomb@plt+0x1220c>  // b.any
  414fa8:	ldr	x8, [sp, #32]
  414fac:	ldr	x9, [x8, #120]
  414fb0:	ldr	x9, [x9, #448]
  414fb4:	and	x9, x9, #0x4
  414fb8:	cbnz	x9, 414fd4 <wcrtomb@plt+0x12224>
  414fbc:	ldur	w8, [x29, #-72]
  414fc0:	cmp	w8, #0x2e
  414fc4:	b.eq	414fd4 <wcrtomb@plt+0x12224>  // b.none
  414fc8:	ldur	w8, [x29, #-72]
  414fcc:	cmp	w8, #0x3d
  414fd0:	b.ne	4151dc <wcrtomb@plt+0x1242c>  // b.any
  414fd4:	stur	wzr, [x29, #-116]
  414fd8:	ldr	x8, [sp, #32]
  414fdc:	ldr	x0, [x8, #120]
  414fe0:	bl	415948 <wcrtomb@plt+0x12b98>
  414fe4:	stur	w0, [x29, #-60]
  414fe8:	ldr	x8, [sp, #32]
  414fec:	ldr	x9, [x8, #120]
  414ff0:	ldr	x9, [x9, #40]
  414ff4:	cbz	x9, 415020 <wcrtomb@plt+0x12270>
  414ff8:	ldur	w8, [x29, #-60]
  414ffc:	ldur	w9, [x29, #-72]
  415000:	cmp	w8, w9
  415004:	b.ne	415024 <wcrtomb@plt+0x12274>  // b.any
  415008:	ldr	x8, [sp, #32]
  41500c:	ldr	x9, [x8, #120]
  415010:	ldr	x9, [x9, #32]
  415014:	ldrb	w10, [x9]
  415018:	cmp	w10, #0x5d
  41501c:	b.ne	415024 <wcrtomb@plt+0x12274>  // b.any
  415020:	b	415060 <wcrtomb@plt+0x122b0>
  415024:	ldur	w8, [x29, #-116]
  415028:	cmp	w8, #0x20
  41502c:	b.ge	415054 <wcrtomb@plt+0x122a4>  // b.tcont
  415030:	ldur	w8, [x29, #-60]
  415034:	ldursw	x9, [x29, #-116]
  415038:	mov	w10, w9
  41503c:	add	w10, w10, #0x1
  415040:	stur	w10, [x29, #-116]
  415044:	sub	x11, x29, #0x6d
  415048:	add	x9, x11, x9
  41504c:	strb	w8, [x9]
  415050:	b	41505c <wcrtomb@plt+0x122ac>
  415054:	mov	w8, #0x0                   	// #0
  415058:	sturb	w8, [x29, #-109]
  41505c:	b	414fd8 <wcrtomb@plt+0x12228>
  415060:	ldursw	x8, [x29, #-116]
  415064:	sub	x9, x29, #0x6d
  415068:	add	x8, x9, x8
  41506c:	mov	w10, #0x0                   	// #0
  415070:	strb	w10, [x8]
  415074:	ldr	x8, [sp, #32]
  415078:	ldr	x0, [x8, #120]
  41507c:	bl	415948 <wcrtomb@plt+0x12b98>
  415080:	stur	w0, [x29, #-60]
  415084:	ldr	x8, [sp, #32]
  415088:	ldr	x9, [x8, #120]
  41508c:	ldr	w10, [x9, #72]
  415090:	stur	w10, [x29, #-68]
  415094:	ldur	w10, [x29, #-72]
  415098:	cmp	w10, #0x3a
  41509c:	b.ne	4151a4 <wcrtomb@plt+0x123f4>  // b.any
  4150a0:	ldr	x8, [sp, #32]
  4150a4:	ldr	x9, [x8, #120]
  4150a8:	ldrb	w10, [x9, #457]
  4150ac:	tbnz	w10, #0, 4150b4 <wcrtomb@plt+0x12304>
  4150b0:	b	4150f0 <wcrtomb@plt+0x12340>
  4150b4:	sub	x0, x29, #0x6d
  4150b8:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4150bc:	add	x1, x1, #0x2ab
  4150c0:	bl	411054 <wcrtomb@plt+0xe2a4>
  4150c4:	tbnz	w0, #0, 4150e0 <wcrtomb@plt+0x12330>
  4150c8:	sub	x0, x29, #0x6d
  4150cc:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4150d0:	add	x1, x1, #0x2b1
  4150d4:	bl	411054 <wcrtomb@plt+0xe2a4>
  4150d8:	tbnz	w0, #0, 4150e0 <wcrtomb@plt+0x12330>
  4150dc:	b	4150f0 <wcrtomb@plt+0x12340>
  4150e0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4150e4:	add	x8, x8, #0x2b7
  4150e8:	str	x8, [sp, #16]
  4150ec:	b	4150f8 <wcrtomb@plt+0x12348>
  4150f0:	sub	x8, x29, #0x6d
  4150f4:	str	x8, [sp, #16]
  4150f8:	ldr	x8, [sp, #16]
  4150fc:	ldr	x9, [sp, #32]
  415100:	str	x8, [x9, #8]
  415104:	ldr	x0, [x9, #8]
  415108:	bl	415988 <wcrtomb@plt+0x12bd8>
  41510c:	ldr	x8, [sp, #32]
  415110:	str	x0, [x8]
  415114:	ldr	x9, [x8]
  415118:	cbnz	x9, 41512c <wcrtomb@plt+0x1237c>
  41511c:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  415120:	add	x0, x0, #0x2bd
  415124:	bl	402d40 <gettext@plt>
  415128:	bl	40b560 <wcrtomb@plt+0x87b0>
  41512c:	ldr	x8, [sp, #32]
  415130:	ldr	x9, [x8, #120]
  415134:	ldrb	w10, [x9, #1048]
  415138:	tbnz	w10, #0, 415140 <wcrtomb@plt+0x12390>
  41513c:	b	41515c <wcrtomb@plt+0x123ac>
  415140:	ldr	x8, [sp, #32]
  415144:	ldr	x9, [x8]
  415148:	ldrb	w10, [x9, #16]
  41514c:	tbnz	w10, #0, 41515c <wcrtomb@plt+0x123ac>
  415150:	mov	w8, #0x0                   	// #0
  415154:	sturb	w8, [x29, #-17]
  415158:	b	4151a0 <wcrtomb@plt+0x123f0>
  41515c:	stur	wzr, [x29, #-140]
  415160:	ldur	w8, [x29, #-140]
  415164:	cmp	w8, #0x100
  415168:	b.ge	4151a0 <wcrtomb@plt+0x123f0>  // b.tcont
  41516c:	ldr	x8, [sp, #32]
  415170:	ldr	x9, [x8]
  415174:	ldr	x9, [x9, #8]
  415178:	ldur	w0, [x29, #-140]
  41517c:	blr	x9
  415180:	cbz	w0, 415190 <wcrtomb@plt+0x123e0>
  415184:	ldur	w0, [x29, #-140]
  415188:	sub	x1, x29, #0x38
  41518c:	bl	411934 <wcrtomb@plt+0xeb84>
  415190:	ldur	w8, [x29, #-140]
  415194:	add	w8, w8, #0x1
  415198:	stur	w8, [x29, #-140]
  41519c:	b	415160 <wcrtomb@plt+0x123b0>
  4151a0:	b	4151ac <wcrtomb@plt+0x123fc>
  4151a4:	mov	w8, #0x0                   	// #0
  4151a8:	sturb	w8, [x29, #-17]
  4151ac:	ldur	w8, [x29, #-24]
  4151b0:	orr	w8, w8, #0x8
  4151b4:	stur	w8, [x29, #-24]
  4151b8:	ldr	x9, [sp, #32]
  4151bc:	ldr	x0, [x9, #120]
  4151c0:	bl	415948 <wcrtomb@plt+0x12b98>
  4151c4:	stur	w0, [x29, #-72]
  4151c8:	ldr	x9, [sp, #32]
  4151cc:	ldr	x10, [x9, #120]
  4151d0:	ldr	w8, [x10, #72]
  4151d4:	stur	w8, [x29, #-76]
  4151d8:	b	4155a4 <wcrtomb@plt+0x127f4>
  4151dc:	ldur	w8, [x29, #-60]
  4151e0:	cmp	w8, #0x5c
  4151e4:	b.ne	41521c <wcrtomb@plt+0x1246c>  // b.any
  4151e8:	ldr	x8, [sp, #32]
  4151ec:	ldr	x9, [x8, #120]
  4151f0:	ldr	x9, [x9, #448]
  4151f4:	and	x9, x9, #0x1
  4151f8:	cbz	x9, 41521c <wcrtomb@plt+0x1246c>
  4151fc:	ldr	x8, [sp, #32]
  415200:	ldr	x0, [x8, #120]
  415204:	bl	415948 <wcrtomb@plt+0x12b98>
  415208:	stur	w0, [x29, #-60]
  41520c:	ldr	x8, [sp, #32]
  415210:	ldr	x9, [x8, #120]
  415214:	ldr	w10, [x9, #72]
  415218:	stur	w10, [x29, #-68]
  41521c:	ldur	w8, [x29, #-72]
  415220:	cmp	w8, #0x100
  415224:	b.ne	415248 <wcrtomb@plt+0x12498>  // b.any
  415228:	ldr	x8, [sp, #32]
  41522c:	ldr	x0, [x8, #120]
  415230:	bl	415948 <wcrtomb@plt+0x12b98>
  415234:	stur	w0, [x29, #-72]
  415238:	ldr	x8, [sp, #32]
  41523c:	ldr	x9, [x8, #120]
  415240:	ldr	w10, [x9, #72]
  415244:	stur	w10, [x29, #-76]
  415248:	ldur	w8, [x29, #-72]
  41524c:	cmp	w8, #0x2d
  415250:	b.ne	41542c <wcrtomb@plt+0x1267c>  // b.any
  415254:	ldr	x8, [sp, #32]
  415258:	ldr	x0, [x8, #120]
  41525c:	bl	415948 <wcrtomb@plt+0x12b98>
  415260:	stur	w0, [x29, #-144]
  415264:	ldr	x8, [sp, #32]
  415268:	ldr	x9, [x8, #120]
  41526c:	ldr	w10, [x9, #72]
  415270:	stur	w10, [x29, #-148]
  415274:	ldur	w10, [x29, #-144]
  415278:	cmp	w10, #0x5b
  41527c:	b.ne	4152a8 <wcrtomb@plt+0x124f8>  // b.any
  415280:	ldr	x8, [sp, #32]
  415284:	ldr	x9, [x8, #120]
  415288:	ldr	x9, [x9, #32]
  41528c:	ldrb	w10, [x9]
  415290:	cmp	w10, #0x2e
  415294:	b.ne	4152a8 <wcrtomb@plt+0x124f8>  // b.any
  415298:	mov	w8, #0x0                   	// #0
  41529c:	sturb	w8, [x29, #-17]
  4152a0:	mov	w8, #0x5d                  	// #93
  4152a4:	stur	w8, [x29, #-144]
  4152a8:	ldur	w8, [x29, #-144]
  4152ac:	cmp	w8, #0x5d
  4152b0:	b.ne	4152e0 <wcrtomb@plt+0x12530>  // b.any
  4152b4:	ldr	x8, [sp, #32]
  4152b8:	ldr	x9, [x8, #120]
  4152bc:	ldr	x10, [x9, #32]
  4152c0:	mov	x11, #0xffffffffffffffff    	// #-1
  4152c4:	add	x10, x10, x11
  4152c8:	str	x10, [x9, #32]
  4152cc:	ldr	x9, [x8, #120]
  4152d0:	ldr	x10, [x9, #40]
  4152d4:	add	x10, x10, #0x1
  4152d8:	str	x10, [x9, #40]
  4152dc:	b	41542c <wcrtomb@plt+0x1267c>
  4152e0:	ldur	w8, [x29, #-144]
  4152e4:	cmp	w8, #0x5c
  4152e8:	b.ne	415320 <wcrtomb@plt+0x12570>  // b.any
  4152ec:	ldr	x8, [sp, #32]
  4152f0:	ldr	x9, [x8, #120]
  4152f4:	ldr	x9, [x9, #448]
  4152f8:	and	x9, x9, #0x1
  4152fc:	cbz	x9, 415320 <wcrtomb@plt+0x12570>
  415300:	ldr	x8, [sp, #32]
  415304:	ldr	x0, [x8, #120]
  415308:	bl	415948 <wcrtomb@plt+0x12b98>
  41530c:	stur	w0, [x29, #-144]
  415310:	ldr	x8, [sp, #32]
  415314:	ldr	x9, [x8, #120]
  415318:	ldr	w10, [x9, #72]
  41531c:	stur	w10, [x29, #-148]
  415320:	ldur	w8, [x29, #-24]
  415324:	orr	w8, w8, #0x8
  415328:	stur	w8, [x29, #-24]
  41532c:	ldr	x9, [sp, #32]
  415330:	ldr	x0, [x9, #120]
  415334:	bl	415948 <wcrtomb@plt+0x12b98>
  415338:	stur	w0, [x29, #-72]
  41533c:	ldr	x9, [sp, #32]
  415340:	ldr	x10, [x9, #120]
  415344:	ldr	w8, [x10, #72]
  415348:	stur	w8, [x29, #-76]
  41534c:	ldur	w8, [x29, #-68]
  415350:	ldur	w11, [x29, #-148]
  415354:	cmp	w8, w11
  415358:	b.ne	41536c <wcrtomb@plt+0x125bc>  // b.any
  41535c:	ldur	w8, [x29, #-68]
  415360:	mov	w9, #0xffffffff            	// #-1
  415364:	cmp	w8, w9
  415368:	b.ne	41542c <wcrtomb@plt+0x1267c>  // b.any
  41536c:	ldr	x8, [sp, #32]
  415370:	ldr	x9, [x8, #120]
  415374:	ldrb	w10, [x9, #1049]
  415378:	tbnz	w10, #0, 4153ac <wcrtomb@plt+0x125fc>
  41537c:	ldur	w8, [x29, #-60]
  415380:	mov	w0, w8
  415384:	bl	414be4 <wcrtomb@plt+0x11e34>
  415388:	and	w8, w0, #0x1
  41538c:	ldur	w9, [x29, #-144]
  415390:	mov	w0, w9
  415394:	str	w8, [sp, #12]
  415398:	bl	414be4 <wcrtomb@plt+0x11e34>
  41539c:	and	w8, w0, #0x1
  4153a0:	ldr	w9, [sp, #12]
  4153a4:	and	w8, w9, w8
  4153a8:	cbz	w8, 415420 <wcrtomb@plt+0x12670>
  4153ac:	ldur	w8, [x29, #-60]
  4153b0:	stur	w8, [x29, #-152]
  4153b4:	ldur	w8, [x29, #-152]
  4153b8:	ldur	w9, [x29, #-144]
  4153bc:	cmp	w8, w9
  4153c0:	b.gt	41541c <wcrtomb@plt+0x1266c>
  4153c4:	ldr	x8, [sp, #32]
  4153c8:	ldr	x9, [x8, #120]
  4153cc:	ldrb	w10, [x9, #457]
  4153d0:	tbnz	w10, #0, 4153d8 <wcrtomb@plt+0x12628>
  4153d4:	b	415400 <wcrtomb@plt+0x12650>
  4153d8:	bl	402b20 <__ctype_b_loc@plt>
  4153dc:	ldr	x8, [x0]
  4153e0:	ldursw	x9, [x29, #-152]
  4153e4:	ldrh	w10, [x8, x9, lsl #1]
  4153e8:	and	w10, w10, #0x400
  4153ec:	cbz	w10, 415400 <wcrtomb@plt+0x12650>
  4153f0:	ldur	w0, [x29, #-152]
  4153f4:	sub	x1, x29, #0x38
  4153f8:	bl	415718 <wcrtomb@plt+0x12968>
  4153fc:	b	41540c <wcrtomb@plt+0x1265c>
  415400:	ldur	w0, [x29, #-152]
  415404:	sub	x1, x29, #0x38
  415408:	bl	411934 <wcrtomb@plt+0xeb84>
  41540c:	ldur	w8, [x29, #-152]
  415410:	add	w8, w8, #0x1
  415414:	stur	w8, [x29, #-152]
  415418:	b	4153b4 <wcrtomb@plt+0x12604>
  41541c:	b	415428 <wcrtomb@plt+0x12678>
  415420:	mov	w8, #0x0                   	// #0
  415424:	sturb	w8, [x29, #-17]
  415428:	b	4155a4 <wcrtomb@plt+0x127f4>
  41542c:	ldur	w8, [x29, #-60]
  415430:	mov	w9, #0x4                   	// #4
  415434:	mov	w10, #0x2                   	// #2
  415438:	cmp	w8, #0x3a
  41543c:	csel	w8, w10, w9, eq  // eq = none
  415440:	ldur	w9, [x29, #-24]
  415444:	orr	w8, w9, w8
  415448:	stur	w8, [x29, #-24]
  41544c:	ldr	x11, [sp, #32]
  415450:	ldr	x12, [x11, #120]
  415454:	ldrb	w8, [x12, #1048]
  415458:	tbnz	w8, #0, 4154a8 <wcrtomb@plt+0x126f8>
  41545c:	ldr	x8, [sp, #32]
  415460:	ldr	x9, [x8, #120]
  415464:	ldrb	w10, [x9, #457]
  415468:	tbnz	w10, #0, 415470 <wcrtomb@plt+0x126c0>
  41546c:	b	415498 <wcrtomb@plt+0x126e8>
  415470:	bl	402b20 <__ctype_b_loc@plt>
  415474:	ldr	x8, [x0]
  415478:	ldursw	x9, [x29, #-60]
  41547c:	ldrh	w10, [x8, x9, lsl #1]
  415480:	and	w10, w10, #0x400
  415484:	cbz	w10, 415498 <wcrtomb@plt+0x126e8>
  415488:	ldur	w0, [x29, #-60]
  41548c:	sub	x1, x29, #0x38
  415490:	bl	415718 <wcrtomb@plt+0x12968>
  415494:	b	4154a4 <wcrtomb@plt+0x126f4>
  415498:	ldur	w0, [x29, #-60]
  41549c:	sub	x1, x29, #0x38
  4154a0:	bl	411934 <wcrtomb@plt+0xeb84>
  4154a4:	b	4155a4 <wcrtomb@plt+0x127f4>
  4154a8:	ldur	w8, [x29, #-68]
  4154ac:	mov	w9, #0xffffffff            	// #-1
  4154b0:	cmp	w8, w9
  4154b4:	b.ne	4154c4 <wcrtomb@plt+0x12714>  // b.any
  4154b8:	mov	w8, #0x0                   	// #0
  4154bc:	sturb	w8, [x29, #-17]
  4154c0:	b	4155a4 <wcrtomb@plt+0x127f4>
  4154c4:	ldr	x8, [sp, #32]
  4154c8:	ldr	x9, [x8, #120]
  4154cc:	ldrb	w10, [x9, #457]
  4154d0:	tbnz	w10, #0, 4154d8 <wcrtomb@plt+0x12728>
  4154d4:	b	4154f4 <wcrtomb@plt+0x12744>
  4154d8:	ldur	w0, [x29, #-68]
  4154dc:	add	x8, sp, #0x34
  4154e0:	add	x1, x8, #0x4
  4154e4:	bl	41a53c <wcrtomb@plt+0x1778c>
  4154e8:	add	w9, w0, #0x1
  4154ec:	str	w9, [sp, #8]
  4154f0:	b	4154fc <wcrtomb@plt+0x1274c>
  4154f4:	mov	w8, #0x1                   	// #1
  4154f8:	str	w8, [sp, #8]
  4154fc:	ldr	w8, [sp, #8]
  415500:	str	w8, [sp, #48]
  415504:	ldur	w8, [x29, #-68]
  415508:	str	w8, [sp, #52]
  41550c:	str	wzr, [sp, #44]
  415510:	ldr	w8, [sp, #44]
  415514:	ldr	w9, [sp, #48]
  415518:	cmp	w8, w9
  41551c:	b.ge	4155a4 <wcrtomb@plt+0x127f4>  // b.tcont
  415520:	ldrsw	x8, [sp, #44]
  415524:	add	x9, sp, #0x34
  415528:	ldr	w0, [x9, x8, lsl #2]
  41552c:	sub	x1, x29, #0x38
  415530:	bl	415a30 <wcrtomb@plt+0x12c80>
  415534:	tbnz	w0, #0, 415594 <wcrtomb@plt+0x127e4>
  415538:	ldr	x8, [sp, #32]
  41553c:	ldr	x9, [x8, #120]
  415540:	ldr	x0, [x9, #96]
  415544:	ldr	x9, [x8, #120]
  415548:	ldr	x1, [x9, #104]
  41554c:	ldr	x9, [x8, #120]
  415550:	add	x2, x9, #0x70
  415554:	mov	x3, #0xffffffffffffffff    	// #-1
  415558:	mov	x4, #0x4                   	// #4
  41555c:	bl	4158dc <wcrtomb@plt+0x12b2c>
  415560:	ldr	x8, [sp, #32]
  415564:	ldr	x9, [x8, #120]
  415568:	str	x0, [x9, #96]
  41556c:	ldrsw	x9, [sp, #44]
  415570:	add	x10, sp, #0x34
  415574:	ldr	w11, [x10, x9, lsl #2]
  415578:	ldr	x9, [x8, #120]
  41557c:	ldr	x9, [x9, #96]
  415580:	ldr	x10, [x8, #120]
  415584:	ldr	x12, [x10, #104]
  415588:	add	x13, x12, #0x1
  41558c:	str	x13, [x10, #104]
  415590:	str	w11, [x9, x12, lsl #2]
  415594:	ldr	w8, [sp, #44]
  415598:	add	w8, w8, #0x1
  41559c:	str	w8, [sp, #44]
  4155a0:	b	415510 <wcrtomb@plt+0x12760>
  4155a4:	ldur	w8, [x29, #-76]
  4155a8:	stur	w8, [x29, #-68]
  4155ac:	ldur	w8, [x29, #-72]
  4155b0:	stur	w8, [x29, #-60]
  4155b4:	cmp	w8, #0x5d
  4155b8:	b.ne	414f5c <wcrtomb@plt+0x121ac>  // b.any
  4155bc:	ldur	w8, [x29, #-24]
  4155c0:	cmp	w8, #0x7
  4155c4:	b.ne	4155d8 <wcrtomb@plt+0x12828>  // b.any
  4155c8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4155cc:	add	x0, x0, #0x2d5
  4155d0:	bl	402d40 <gettext@plt>
  4155d4:	bl	40b584 <wcrtomb@plt+0x87d4>
  4155d8:	ldurb	w8, [x29, #-17]
  4155dc:	tbnz	w8, #0, 4155f0 <wcrtomb@plt+0x12840>
  4155e0:	mov	x8, #0x112                 	// #274
  4155e4:	ldr	x9, [sp, #32]
  4155e8:	str	x8, [x9, #128]
  4155ec:	b	4156cc <wcrtomb@plt+0x1291c>
  4155f0:	ldr	x8, [sp, #32]
  4155f4:	ldr	x9, [x8, #120]
  4155f8:	ldrb	w10, [x9, #1048]
  4155fc:	tbnz	w10, #0, 415604 <wcrtomb@plt+0x12854>
  415600:	b	41567c <wcrtomb@plt+0x128cc>
  415604:	ldurb	w8, [x29, #-61]
  415608:	tbnz	w8, #0, 41561c <wcrtomb@plt+0x1286c>
  41560c:	ldr	x8, [sp, #32]
  415610:	ldr	x9, [x8, #120]
  415614:	ldr	x9, [x9, #104]
  415618:	cbz	x9, 41567c <wcrtomb@plt+0x128cc>
  41561c:	ldurb	w8, [x29, #-61]
  415620:	ldr	x9, [sp, #32]
  415624:	ldr	x10, [x9, #120]
  415628:	and	w8, w8, #0x1
  41562c:	strb	w8, [x10, #88]
  415630:	sub	x0, x29, #0x38
  415634:	bl	415a9c <wcrtomb@plt+0x12cec>
  415638:	tbnz	w0, #0, 415640 <wcrtomb@plt+0x12890>
  41563c:	b	41564c <wcrtomb@plt+0x1289c>
  415640:	mov	x8, #0xffffffffffffffff    	// #-1
  415644:	str	x8, [sp]
  415648:	b	415660 <wcrtomb@plt+0x128b0>
  41564c:	ldr	x8, [sp, #32]
  415650:	ldr	x0, [x8, #120]
  415654:	sub	x1, x29, #0x38
  415658:	bl	414ccc <wcrtomb@plt+0x11f1c>
  41565c:	str	x0, [sp]
  415660:	ldr	x8, [sp]
  415664:	ldr	x9, [sp, #32]
  415668:	ldr	x10, [x9, #120]
  41566c:	str	x8, [x10, #80]
  415670:	mov	x8, #0x113                 	// #275
  415674:	str	x8, [x9, #128]
  415678:	b	4156cc <wcrtomb@plt+0x1291c>
  41567c:	ldurb	w8, [x29, #-61]
  415680:	tbnz	w8, #0, 415688 <wcrtomb@plt+0x128d8>
  415684:	b	4156b0 <wcrtomb@plt+0x12900>
  415688:	sub	x0, x29, #0x38
  41568c:	bl	414df0 <wcrtomb@plt+0x12040>
  415690:	ldr	x8, [sp, #32]
  415694:	ldr	x9, [x8, #120]
  415698:	ldr	x9, [x9, #448]
  41569c:	and	x9, x9, #0x100
  4156a0:	cbz	x9, 4156b0 <wcrtomb@plt+0x12900>
  4156a4:	mov	w0, #0xa                   	// #10
  4156a8:	sub	x1, x29, #0x38
  4156ac:	bl	414c64 <wcrtomb@plt+0x11eb4>
  4156b0:	ldr	x8, [sp, #32]
  4156b4:	ldr	x0, [x8, #120]
  4156b8:	sub	x1, x29, #0x38
  4156bc:	bl	414ccc <wcrtomb@plt+0x11f1c>
  4156c0:	add	x8, x0, #0x114
  4156c4:	ldr	x9, [sp, #32]
  4156c8:	str	x8, [x9, #128]
  4156cc:	ldr	x8, [sp, #32]
  4156d0:	ldr	x0, [x8, #128]
  4156d4:	ldr	x28, [sp, #352]
  4156d8:	ldp	x29, x30, [sp, #336]
  4156dc:	add	sp, sp, #0x170
  4156e0:	ret
  4156e4:	sub	sp, sp, #0x10
  4156e8:	str	x0, [sp, #8]
  4156ec:	str	x1, [sp]
  4156f0:	ldr	x8, [sp]
  4156f4:	ldr	x8, [x8]
  4156f8:	ldr	x9, [sp, #8]
  4156fc:	str	x8, [x9, #32]
  415700:	ldr	x8, [sp]
  415704:	ldr	x8, [x8, #8]
  415708:	ldr	x9, [sp, #8]
  41570c:	str	x8, [x9, #40]
  415710:	add	sp, sp, #0x10
  415714:	ret
  415718:	sub	sp, sp, #0x30
  41571c:	stp	x29, x30, [sp, #32]
  415720:	add	x29, sp, #0x20
  415724:	stur	w0, [x29, #-4]
  415728:	str	x1, [sp, #16]
  41572c:	ldur	w0, [x29, #-4]
  415730:	bl	4028a0 <toupper@plt>
  415734:	str	w0, [sp, #12]
  415738:	str	wzr, [sp, #8]
  41573c:	ldr	w8, [sp, #8]
  415740:	cmp	w8, #0x100
  415744:	b.ge	415778 <wcrtomb@plt+0x129c8>  // b.tcont
  415748:	ldr	w0, [sp, #8]
  41574c:	bl	4028a0 <toupper@plt>
  415750:	ldr	w8, [sp, #12]
  415754:	cmp	w0, w8
  415758:	b.ne	415768 <wcrtomb@plt+0x129b8>  // b.any
  41575c:	ldr	w0, [sp, #8]
  415760:	ldr	x1, [sp, #16]
  415764:	bl	411934 <wcrtomb@plt+0xeb84>
  415768:	ldr	w8, [sp, #8]
  41576c:	add	w8, w8, #0x1
  415770:	str	w8, [sp, #8]
  415774:	b	41573c <wcrtomb@plt+0x1298c>
  415778:	ldp	x29, x30, [sp, #32]
  41577c:	add	sp, sp, #0x30
  415780:	ret
  415784:	sub	sp, sp, #0x50
  415788:	stp	x29, x30, [sp, #64]
  41578c:	add	x29, sp, #0x40
  415790:	mov	w8, #0xffffffff            	// #-1
  415794:	stur	x0, [x29, #-16]
  415798:	stur	x1, [x29, #-24]
  41579c:	str	x2, [sp, #32]
  4157a0:	str	x3, [sp, #24]
  4157a4:	ldur	x9, [x29, #-24]
  4157a8:	ldrb	w10, [x9]
  4157ac:	strb	w10, [sp, #23]
  4157b0:	ldr	x9, [sp, #24]
  4157b4:	add	x9, x9, #0x51c
  4157b8:	ldrb	w10, [sp, #23]
  4157bc:	mov	w11, w10
  4157c0:	ldr	w10, [x9, x11, lsl #2]
  4157c4:	str	w10, [sp, #16]
  4157c8:	ldr	w10, [sp, #16]
  4157cc:	cmp	w10, w8
  4157d0:	b.ne	415834 <wcrtomb@plt+0x12a84>  // b.any
  4157d4:	ldur	x1, [x29, #-24]
  4157d8:	ldr	x2, [sp, #32]
  4157dc:	ldr	x8, [sp, #24]
  4157e0:	add	x3, x8, #0x110
  4157e4:	add	x0, sp, #0xc
  4157e8:	bl	41da58 <wcrtomb@plt+0x1aca8>
  4157ec:	str	x0, [sp]
  4157f0:	ldr	x8, [sp]
  4157f4:	mov	x9, xzr
  4157f8:	cmp	x9, x8
  4157fc:	cset	w10, cs  // cs = hs, nlast
  415800:	tbnz	w10, #0, 41582c <wcrtomb@plt+0x12a7c>
  415804:	ldr	x8, [sp]
  415808:	mov	x9, #0xfffffffffffffffe    	// #-2
  41580c:	cmp	x8, x9
  415810:	b.cs	41582c <wcrtomb@plt+0x12a7c>  // b.hs, b.nlast
  415814:	ldr	w8, [sp, #12]
  415818:	ldur	x9, [x29, #-16]
  41581c:	str	w8, [x9]
  415820:	ldr	x9, [sp]
  415824:	stur	w9, [x29, #-4]
  415828:	b	415848 <wcrtomb@plt+0x12a98>
  41582c:	ldr	x8, [sp, #24]
  415830:	str	xzr, [x8, #272]
  415834:	ldr	w8, [sp, #16]
  415838:	ldur	x9, [x29, #-16]
  41583c:	str	w8, [x9]
  415840:	mov	w8, #0x1                   	// #1
  415844:	stur	w8, [x29, #-4]
  415848:	ldur	w0, [x29, #-4]
  41584c:	ldp	x29, x30, [sp, #64]
  415850:	add	sp, sp, #0x50
  415854:	ret
  415858:	sub	sp, sp, #0x10
  41585c:	strb	w0, [sp, #15]
  415860:	ldrb	w0, [sp, #15]
  415864:	add	sp, sp, #0x10
  415868:	ret
  41586c:	sub	sp, sp, #0x20
  415870:	str	x0, [sp, #24]
  415874:	str	x1, [sp, #16]
  415878:	str	xzr, [sp, #8]
  41587c:	str	wzr, [sp, #4]
  415880:	ldr	w8, [sp, #4]
  415884:	cmp	w8, #0x4
  415888:	b.ge	4158c4 <wcrtomb@plt+0x12b14>  // b.tcont
  41588c:	ldr	x8, [sp, #24]
  415890:	ldrsw	x9, [sp, #4]
  415894:	ldr	x8, [x8, x9, lsl #3]
  415898:	ldr	x9, [sp, #16]
  41589c:	ldrsw	x10, [sp, #4]
  4158a0:	ldr	x9, [x9, x10, lsl #3]
  4158a4:	eor	x8, x8, x9
  4158a8:	ldr	x9, [sp, #8]
  4158ac:	orr	x8, x9, x8
  4158b0:	str	x8, [sp, #8]
  4158b4:	ldr	w8, [sp, #4]
  4158b8:	add	w8, w8, #0x1
  4158bc:	str	w8, [sp, #4]
  4158c0:	b	415880 <wcrtomb@plt+0x12ad0>
  4158c4:	ldr	x8, [sp, #8]
  4158c8:	cmp	x8, #0x0
  4158cc:	cset	w9, eq  // eq = none
  4158d0:	and	w0, w9, #0x1
  4158d4:	add	sp, sp, #0x20
  4158d8:	ret
  4158dc:	sub	sp, sp, #0x40
  4158e0:	stp	x29, x30, [sp, #48]
  4158e4:	add	x29, sp, #0x30
  4158e8:	stur	x0, [x29, #-16]
  4158ec:	str	x1, [sp, #24]
  4158f0:	str	x2, [sp, #16]
  4158f4:	str	x3, [sp, #8]
  4158f8:	str	x4, [sp]
  4158fc:	ldr	x8, [sp, #24]
  415900:	ldr	x9, [sp, #16]
  415904:	ldr	x9, [x9]
  415908:	cmp	x8, x9
  41590c:	b.ge	41591c <wcrtomb@plt+0x12b6c>  // b.tcont
  415910:	ldur	x8, [x29, #-16]
  415914:	stur	x8, [x29, #-8]
  415918:	b	415938 <wcrtomb@plt+0x12b88>
  41591c:	ldur	x0, [x29, #-16]
  415920:	ldr	x1, [sp, #16]
  415924:	ldr	x3, [sp, #8]
  415928:	ldr	x4, [sp]
  41592c:	mov	x2, #0x1                   	// #1
  415930:	bl	411cc8 <wcrtomb@plt+0xef18>
  415934:	stur	x0, [x29, #-8]
  415938:	ldur	x0, [x29, #-8]
  41593c:	ldp	x29, x30, [sp, #48]
  415940:	add	sp, sp, #0x40
  415944:	ret
  415948:	sub	sp, sp, #0x20
  41594c:	stp	x29, x30, [sp, #16]
  415950:	add	x29, sp, #0x10
  415954:	str	x0, [sp, #8]
  415958:	ldr	x8, [sp, #8]
  41595c:	ldr	x8, [x8, #40]
  415960:	cbnz	x8, 415974 <wcrtomb@plt+0x12bc4>
  415964:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  415968:	add	x0, x0, #0x30a
  41596c:	bl	402d40 <gettext@plt>
  415970:	bl	40b560 <wcrtomb@plt+0x87b0>
  415974:	ldr	x0, [sp, #8]
  415978:	bl	414b40 <wcrtomb@plt+0x11d90>
  41597c:	ldp	x29, x30, [sp, #16]
  415980:	add	sp, sp, #0x20
  415984:	ret
  415988:	sub	sp, sp, #0x30
  41598c:	stp	x29, x30, [sp, #32]
  415990:	add	x29, sp, #0x20
  415994:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  415998:	add	x8, x8, #0xf60
  41599c:	str	x0, [sp, #16]
  4159a0:	str	wzr, [sp, #12]
  4159a4:	str	x8, [sp]
  4159a8:	ldrsw	x8, [sp, #12]
  4159ac:	mov	x9, #0x18                  	// #24
  4159b0:	mul	x8, x9, x8
  4159b4:	ldr	x9, [sp]
  4159b8:	add	x8, x9, x8
  4159bc:	ldr	x8, [x8]
  4159c0:	cbz	x8, 415a18 <wcrtomb@plt+0x12c68>
  4159c4:	ldr	x0, [sp, #16]
  4159c8:	ldrsw	x8, [sp, #12]
  4159cc:	mov	x9, #0x18                  	// #24
  4159d0:	mul	x8, x9, x8
  4159d4:	ldr	x9, [sp]
  4159d8:	add	x8, x9, x8
  4159dc:	ldr	x1, [x8]
  4159e0:	bl	411054 <wcrtomb@plt+0xe2a4>
  4159e4:	tbnz	w0, #0, 4159ec <wcrtomb@plt+0x12c3c>
  4159e8:	b	415a08 <wcrtomb@plt+0x12c58>
  4159ec:	ldrsw	x8, [sp, #12]
  4159f0:	mov	x9, #0x18                  	// #24
  4159f4:	mul	x8, x9, x8
  4159f8:	ldr	x9, [sp]
  4159fc:	add	x8, x9, x8
  415a00:	stur	x8, [x29, #-8]
  415a04:	b	415a20 <wcrtomb@plt+0x12c70>
  415a08:	ldr	w8, [sp, #12]
  415a0c:	add	w8, w8, #0x1
  415a10:	str	w8, [sp, #12]
  415a14:	b	4159a8 <wcrtomb@plt+0x12bf8>
  415a18:	mov	x8, xzr
  415a1c:	stur	x8, [x29, #-8]
  415a20:	ldur	x0, [x29, #-8]
  415a24:	ldp	x29, x30, [sp, #32]
  415a28:	add	sp, sp, #0x30
  415a2c:	ret
  415a30:	sub	sp, sp, #0x30
  415a34:	stp	x29, x30, [sp, #32]
  415a38:	add	x29, sp, #0x20
  415a3c:	stur	w0, [x29, #-8]
  415a40:	str	x1, [sp, #16]
  415a44:	ldur	w0, [x29, #-8]
  415a48:	bl	402840 <wctob@plt>
  415a4c:	str	w0, [sp, #12]
  415a50:	ldr	w8, [sp, #12]
  415a54:	cmp	w8, #0x0
  415a58:	cset	w8, ge  // ge = tcont
  415a5c:	tbnz	w8, #0, 415a70 <wcrtomb@plt+0x12cc0>
  415a60:	mov	w8, wzr
  415a64:	and	w8, w8, #0x1
  415a68:	sturb	w8, [x29, #-1]
  415a6c:	b	415a88 <wcrtomb@plt+0x12cd8>
  415a70:	ldr	w0, [sp, #12]
  415a74:	ldr	x1, [sp, #16]
  415a78:	bl	411934 <wcrtomb@plt+0xeb84>
  415a7c:	mov	w8, #0x1                   	// #1
  415a80:	and	w8, w8, #0x1
  415a84:	sturb	w8, [x29, #-1]
  415a88:	ldurb	w8, [x29, #-1]
  415a8c:	and	w0, w8, #0x1
  415a90:	ldp	x29, x30, [sp, #32]
  415a94:	add	sp, sp, #0x30
  415a98:	ret
  415a9c:	sub	sp, sp, #0x20
  415aa0:	str	x0, [sp, #24]
  415aa4:	str	xzr, [sp, #16]
  415aa8:	str	wzr, [sp, #12]
  415aac:	ldr	w8, [sp, #12]
  415ab0:	cmp	w8, #0x4
  415ab4:	b.ge	415ae0 <wcrtomb@plt+0x12d30>  // b.tcont
  415ab8:	ldr	x8, [sp, #24]
  415abc:	ldrsw	x9, [sp, #12]
  415ac0:	ldr	x8, [x8, x9, lsl #3]
  415ac4:	ldr	x9, [sp, #16]
  415ac8:	orr	x8, x9, x8
  415acc:	str	x8, [sp, #16]
  415ad0:	ldr	w8, [sp, #12]
  415ad4:	add	w8, w8, #0x1
  415ad8:	str	w8, [sp, #12]
  415adc:	b	415aac <wcrtomb@plt+0x12cfc>
  415ae0:	ldr	x8, [sp, #16]
  415ae4:	cmp	x8, #0x0
  415ae8:	cset	w9, eq  // eq = none
  415aec:	and	w0, w9, #0x1
  415af0:	add	sp, sp, #0x20
  415af4:	ret
  415af8:	sub	sp, sp, #0x20
  415afc:	stp	x29, x30, [sp, #16]
  415b00:	add	x29, sp, #0x10
  415b04:	str	x0, [sp, #8]
  415b08:	ldr	x0, [sp, #8]
  415b0c:	bl	415b84 <wcrtomb@plt+0x12dd4>
  415b10:	ldr	x8, [sp, #8]
  415b14:	ldr	x8, [x8, #128]
  415b18:	mov	w9, #0x0                   	// #0
  415b1c:	cmp	x8, #0x108
  415b20:	str	w9, [sp, #4]
  415b24:	b.eq	415b54 <wcrtomb@plt+0x12da4>  // b.none
  415b28:	ldr	x8, [sp, #8]
  415b2c:	ldr	x8, [x8, #128]
  415b30:	mov	w9, #0x0                   	// #0
  415b34:	cmp	x8, #0x106
  415b38:	str	w9, [sp, #4]
  415b3c:	b.eq	415b54 <wcrtomb@plt+0x12da4>  // b.none
  415b40:	ldr	x8, [sp, #8]
  415b44:	ldr	x8, [x8, #128]
  415b48:	cmp	x8, #0x0
  415b4c:	cset	w9, ge  // ge = tcont
  415b50:	str	w9, [sp, #4]
  415b54:	ldr	w8, [sp, #4]
  415b58:	tbnz	w8, #0, 415b60 <wcrtomb@plt+0x12db0>
  415b5c:	b	415b78 <wcrtomb@plt+0x12dc8>
  415b60:	ldr	x0, [sp, #8]
  415b64:	bl	415b84 <wcrtomb@plt+0x12dd4>
  415b68:	ldr	x0, [sp, #8]
  415b6c:	mov	x1, #0x105                 	// #261
  415b70:	bl	40e00c <wcrtomb@plt+0xb25c>
  415b74:	b	415b10 <wcrtomb@plt+0x12d60>
  415b78:	ldp	x29, x30, [sp, #16]
  415b7c:	add	sp, sp, #0x20
  415b80:	ret
  415b84:	sub	sp, sp, #0x30
  415b88:	stp	x29, x30, [sp, #32]
  415b8c:	add	x29, sp, #0x20
  415b90:	stur	x0, [x29, #-8]
  415b94:	ldur	x0, [x29, #-8]
  415b98:	bl	415db0 <wcrtomb@plt+0x13000>
  415b9c:	ldur	x8, [x29, #-8]
  415ba0:	ldr	x8, [x8, #128]
  415ba4:	mov	w9, #0x1                   	// #1
  415ba8:	cmp	x8, #0x101
  415bac:	str	w9, [sp]
  415bb0:	b.eq	415bf8 <wcrtomb@plt+0x12e48>  // b.none
  415bb4:	ldur	x8, [x29, #-8]
  415bb8:	ldr	x8, [x8, #128]
  415bbc:	mov	w9, #0x1                   	// #1
  415bc0:	cmp	x8, #0x102
  415bc4:	str	w9, [sp]
  415bc8:	b.eq	415bf8 <wcrtomb@plt+0x12e48>  // b.none
  415bcc:	ldur	x8, [x29, #-8]
  415bd0:	ldr	x8, [x8, #128]
  415bd4:	mov	w9, #0x1                   	// #1
  415bd8:	cmp	x8, #0x103
  415bdc:	str	w9, [sp]
  415be0:	b.eq	415bf8 <wcrtomb@plt+0x12e48>  // b.none
  415be4:	ldur	x8, [x29, #-8]
  415be8:	ldr	x8, [x8, #128]
  415bec:	cmp	x8, #0x104
  415bf0:	cset	w9, eq  // eq = none
  415bf4:	str	w9, [sp]
  415bf8:	ldr	w8, [sp]
  415bfc:	tbnz	w8, #0, 415c04 <wcrtomb@plt+0x12e54>
  415c00:	b	415da4 <wcrtomb@plt+0x12ff4>
  415c04:	ldur	x8, [x29, #-8]
  415c08:	ldr	x8, [x8, #128]
  415c0c:	cmp	x8, #0x104
  415c10:	b.ne	415d34 <wcrtomb@plt+0x12f84>  // b.any
  415c14:	ldur	x8, [x29, #-8]
  415c18:	ldr	w9, [x8, #64]
  415c1c:	cbnz	w9, 415c2c <wcrtomb@plt+0x12e7c>
  415c20:	ldur	x8, [x29, #-8]
  415c24:	ldr	w9, [x8, #68]
  415c28:	cbz	w9, 415d34 <wcrtomb@plt+0x12f84>
  415c2c:	ldur	x0, [x29, #-8]
  415c30:	ldur	x8, [x29, #-8]
  415c34:	ldr	x1, [x8, #152]
  415c38:	bl	41601c <wcrtomb@plt+0x1326c>
  415c3c:	str	x0, [sp, #16]
  415c40:	ldur	x8, [x29, #-8]
  415c44:	ldr	x8, [x8, #152]
  415c48:	ldr	x9, [sp, #16]
  415c4c:	subs	x8, x8, x9
  415c50:	str	x8, [sp, #8]
  415c54:	ldur	x8, [x29, #-8]
  415c58:	ldr	w10, [x8, #68]
  415c5c:	cmp	w10, #0x0
  415c60:	cset	w10, ge  // ge = tcont
  415c64:	tbnz	w10, #0, 415c74 <wcrtomb@plt+0x12ec4>
  415c68:	ldur	x0, [x29, #-8]
  415c6c:	mov	x1, #0x103                 	// #259
  415c70:	bl	40e00c <wcrtomb@plt+0xb25c>
  415c74:	ldur	x8, [x29, #-8]
  415c78:	ldr	w9, [x8, #64]
  415c7c:	cbnz	w9, 415c8c <wcrtomb@plt+0x12edc>
  415c80:	ldur	x0, [x29, #-8]
  415c84:	mov	x1, #0x101                 	// #257
  415c88:	bl	40e00c <wcrtomb@plt+0xb25c>
  415c8c:	mov	w8, #0x1                   	// #1
  415c90:	str	w8, [sp, #4]
  415c94:	ldr	w8, [sp, #4]
  415c98:	ldur	x9, [x29, #-8]
  415c9c:	ldr	w10, [x9, #64]
  415ca0:	cmp	w8, w10
  415ca4:	b.ge	415cd4 <wcrtomb@plt+0x12f24>  // b.tcont
  415ca8:	ldur	x0, [x29, #-8]
  415cac:	ldr	x1, [sp, #8]
  415cb0:	ldr	x2, [sp, #16]
  415cb4:	bl	4160e8 <wcrtomb@plt+0x13338>
  415cb8:	ldur	x0, [x29, #-8]
  415cbc:	mov	x1, #0x105                 	// #261
  415cc0:	bl	40e00c <wcrtomb@plt+0xb25c>
  415cc4:	ldr	w8, [sp, #4]
  415cc8:	add	w8, w8, #0x1
  415ccc:	str	w8, [sp, #4]
  415cd0:	b	415c94 <wcrtomb@plt+0x12ee4>
  415cd4:	ldr	w8, [sp, #4]
  415cd8:	ldur	x9, [x29, #-8]
  415cdc:	ldr	w10, [x9, #68]
  415ce0:	cmp	w8, w10
  415ce4:	b.ge	415d20 <wcrtomb@plt+0x12f70>  // b.tcont
  415ce8:	ldur	x0, [x29, #-8]
  415cec:	ldr	x1, [sp, #8]
  415cf0:	ldr	x2, [sp, #16]
  415cf4:	bl	4160e8 <wcrtomb@plt+0x13338>
  415cf8:	ldur	x0, [x29, #-8]
  415cfc:	mov	x1, #0x101                 	// #257
  415d00:	bl	40e00c <wcrtomb@plt+0xb25c>
  415d04:	ldur	x0, [x29, #-8]
  415d08:	mov	x1, #0x105                 	// #261
  415d0c:	bl	40e00c <wcrtomb@plt+0xb25c>
  415d10:	ldr	w8, [sp, #4]
  415d14:	add	w8, w8, #0x1
  415d18:	str	w8, [sp, #4]
  415d1c:	b	415cd4 <wcrtomb@plt+0x12f24>
  415d20:	ldur	x0, [x29, #-8]
  415d24:	bl	40e10c <wcrtomb@plt+0xb35c>
  415d28:	ldur	x8, [x29, #-8]
  415d2c:	str	x0, [x8, #128]
  415d30:	b	415da0 <wcrtomb@plt+0x12ff0>
  415d34:	ldur	x8, [x29, #-8]
  415d38:	ldr	x8, [x8, #128]
  415d3c:	cmp	x8, #0x104
  415d40:	b.ne	415d80 <wcrtomb@plt+0x12fd0>  // b.any
  415d44:	ldur	x0, [x29, #-8]
  415d48:	ldur	x8, [x29, #-8]
  415d4c:	ldr	x1, [x8, #152]
  415d50:	bl	41601c <wcrtomb@plt+0x1326c>
  415d54:	ldur	x8, [x29, #-8]
  415d58:	ldr	x9, [x8, #152]
  415d5c:	subs	x9, x9, x0
  415d60:	str	x9, [x8, #152]
  415d64:	ldur	x0, [x29, #-8]
  415d68:	bl	40e10c <wcrtomb@plt+0xb35c>
  415d6c:	ldur	x8, [x29, #-8]
  415d70:	str	x0, [x8, #128]
  415d74:	ldur	x0, [x29, #-8]
  415d78:	bl	415b84 <wcrtomb@plt+0x12dd4>
  415d7c:	b	415da0 <wcrtomb@plt+0x12ff0>
  415d80:	ldur	x0, [x29, #-8]
  415d84:	ldur	x8, [x29, #-8]
  415d88:	ldr	x1, [x8, #128]
  415d8c:	bl	40e00c <wcrtomb@plt+0xb25c>
  415d90:	ldur	x0, [x29, #-8]
  415d94:	bl	40e10c <wcrtomb@plt+0xb35c>
  415d98:	ldur	x8, [x29, #-8]
  415d9c:	str	x0, [x8, #128]
  415da0:	b	415b9c <wcrtomb@plt+0x12dec>
  415da4:	ldp	x29, x30, [sp, #32]
  415da8:	add	sp, sp, #0x30
  415dac:	ret
  415db0:	sub	sp, sp, #0xa0
  415db4:	stp	x29, x30, [sp, #144]
  415db8:	add	x29, sp, #0x90
  415dbc:	mov	x8, xzr
  415dc0:	stur	x0, [x29, #-8]
  415dc4:	ldur	x9, [x29, #-8]
  415dc8:	ldr	x9, [x9, #128]
  415dcc:	cmp	x8, x9
  415dd0:	cset	w10, gt
  415dd4:	tbnz	w10, #0, 415de8 <wcrtomb@plt+0x13038>
  415dd8:	ldur	x8, [x29, #-8]
  415ddc:	ldr	x8, [x8, #128]
  415de0:	cmp	x8, #0x100
  415de4:	b.lt	415e98 <wcrtomb@plt+0x130e8>  // b.tstop
  415de8:	ldur	x8, [x29, #-8]
  415dec:	ldr	x8, [x8, #128]
  415df0:	cmp	x8, #0x114
  415df4:	b.ge	415e98 <wcrtomb@plt+0x130e8>  // b.tcont
  415df8:	ldur	x8, [x29, #-8]
  415dfc:	ldr	x8, [x8, #128]
  415e00:	cmp	x8, #0x10b
  415e04:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e08:	ldur	x8, [x29, #-8]
  415e0c:	ldr	x8, [x8, #128]
  415e10:	cmp	x8, #0x112
  415e14:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e18:	ldur	x8, [x29, #-8]
  415e1c:	ldr	x8, [x8, #128]
  415e20:	cmp	x8, #0x10c
  415e24:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e28:	ldur	x8, [x29, #-8]
  415e2c:	ldr	x8, [x8, #128]
  415e30:	cmp	x8, #0x10d
  415e34:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e38:	ldur	x8, [x29, #-8]
  415e3c:	ldr	x8, [x8, #128]
  415e40:	cmp	x8, #0x10e
  415e44:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e48:	ldur	x8, [x29, #-8]
  415e4c:	ldr	x8, [x8, #128]
  415e50:	cmp	x8, #0x10f
  415e54:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e58:	ldur	x8, [x29, #-8]
  415e5c:	ldr	x8, [x8, #128]
  415e60:	cmp	x8, #0x110
  415e64:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e68:	ldur	x8, [x29, #-8]
  415e6c:	ldr	x8, [x8, #128]
  415e70:	cmp	x8, #0x111
  415e74:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e78:	ldur	x8, [x29, #-8]
  415e7c:	ldr	x8, [x8, #128]
  415e80:	cmp	x8, #0x10a
  415e84:	b.eq	415e98 <wcrtomb@plt+0x130e8>  // b.none
  415e88:	ldur	x8, [x29, #-8]
  415e8c:	ldr	x8, [x8, #128]
  415e90:	cmp	x8, #0x113
  415e94:	b.ne	415ee8 <wcrtomb@plt+0x13138>  // b.any
  415e98:	ldur	x8, [x29, #-8]
  415e9c:	ldr	x8, [x8, #128]
  415ea0:	cmp	x8, #0x10a
  415ea4:	b.ne	415ec4 <wcrtomb@plt+0x13114>  // b.any
  415ea8:	ldur	x8, [x29, #-8]
  415eac:	ldrb	w9, [x8, #1050]
  415eb0:	tbnz	w9, #0, 415eb8 <wcrtomb@plt+0x13108>
  415eb4:	b	415ec4 <wcrtomb@plt+0x13114>
  415eb8:	ldur	x0, [x29, #-8]
  415ebc:	bl	4161c4 <wcrtomb@plt+0x13414>
  415ec0:	b	415ed4 <wcrtomb@plt+0x13124>
  415ec4:	ldur	x0, [x29, #-8]
  415ec8:	ldur	x8, [x29, #-8]
  415ecc:	ldr	x1, [x8, #128]
  415ed0:	bl	40e00c <wcrtomb@plt+0xb25c>
  415ed4:	ldur	x0, [x29, #-8]
  415ed8:	bl	40e10c <wcrtomb@plt+0xb35c>
  415edc:	ldur	x8, [x29, #-8]
  415ee0:	str	x0, [x8, #128]
  415ee4:	b	416010 <wcrtomb@plt+0x13260>
  415ee8:	ldur	x8, [x29, #-8]
  415eec:	ldr	x8, [x8, #128]
  415ef0:	cmp	x8, #0x109
  415ef4:	b.ne	415fa8 <wcrtomb@plt+0x131f8>  // b.any
  415ef8:	ldur	x8, [x29, #-8]
  415efc:	ldr	w9, [x8, #72]
  415f00:	mov	w10, #0xffffffff            	// #-1
  415f04:	cmp	w9, w10
  415f08:	b.ne	415f1c <wcrtomb@plt+0x1316c>  // b.any
  415f0c:	ldur	x0, [x29, #-8]
  415f10:	mov	x1, #0x112                 	// #274
  415f14:	bl	40e00c <wcrtomb@plt+0xb25c>
  415f18:	b	415f94 <wcrtomb@plt+0x131e4>
  415f1c:	ldur	x0, [x29, #-8]
  415f20:	ldur	x8, [x29, #-8]
  415f24:	ldr	w1, [x8, #72]
  415f28:	bl	411a48 <wcrtomb@plt+0xec98>
  415f2c:	ldur	x8, [x29, #-8]
  415f30:	ldrb	w9, [x8, #457]
  415f34:	tbnz	w9, #0, 415f3c <wcrtomb@plt+0x1318c>
  415f38:	b	415f94 <wcrtomb@plt+0x131e4>
  415f3c:	ldur	x8, [x29, #-8]
  415f40:	ldr	w0, [x8, #72]
  415f44:	add	x1, sp, #0x8
  415f48:	bl	41a53c <wcrtomb@plt+0x1778c>
  415f4c:	str	w0, [sp, #4]
  415f50:	str	wzr, [sp]
  415f54:	ldr	w8, [sp]
  415f58:	ldr	w9, [sp, #4]
  415f5c:	cmp	w8, w9
  415f60:	b.ge	415f94 <wcrtomb@plt+0x131e4>  // b.tcont
  415f64:	ldur	x0, [x29, #-8]
  415f68:	ldrsw	x8, [sp]
  415f6c:	add	x9, sp, #0x8
  415f70:	ldr	w1, [x9, x8, lsl #2]
  415f74:	bl	411a48 <wcrtomb@plt+0xec98>
  415f78:	ldur	x0, [x29, #-8]
  415f7c:	mov	x1, #0x106                 	// #262
  415f80:	bl	40e00c <wcrtomb@plt+0xb25c>
  415f84:	ldr	w8, [sp]
  415f88:	add	w8, w8, #0x1
  415f8c:	str	w8, [sp]
  415f90:	b	415f54 <wcrtomb@plt+0x131a4>
  415f94:	ldur	x0, [x29, #-8]
  415f98:	bl	40e10c <wcrtomb@plt+0xb35c>
  415f9c:	ldur	x8, [x29, #-8]
  415fa0:	str	x0, [x8, #128]
  415fa4:	b	416010 <wcrtomb@plt+0x13260>
  415fa8:	ldur	x8, [x29, #-8]
  415fac:	ldr	x8, [x8, #128]
  415fb0:	cmp	x8, #0x107
  415fb4:	b.ne	416004 <wcrtomb@plt+0x13254>  // b.any
  415fb8:	ldur	x0, [x29, #-8]
  415fbc:	bl	40e10c <wcrtomb@plt+0xb35c>
  415fc0:	ldur	x8, [x29, #-8]
  415fc4:	str	x0, [x8, #128]
  415fc8:	ldur	x0, [x29, #-8]
  415fcc:	bl	40effc <wcrtomb@plt+0xc24c>
  415fd0:	ldur	x8, [x29, #-8]
  415fd4:	ldr	x8, [x8, #128]
  415fd8:	cmp	x8, #0x108
  415fdc:	b.eq	415ff0 <wcrtomb@plt+0x13240>  // b.none
  415fe0:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  415fe4:	add	x0, x0, #0x348
  415fe8:	bl	402d40 <gettext@plt>
  415fec:	bl	40b560 <wcrtomb@plt+0x87b0>
  415ff0:	ldur	x0, [x29, #-8]
  415ff4:	bl	40e10c <wcrtomb@plt+0xb35c>
  415ff8:	ldur	x8, [x29, #-8]
  415ffc:	str	x0, [x8, #128]
  416000:	b	416010 <wcrtomb@plt+0x13260>
  416004:	ldur	x0, [x29, #-8]
  416008:	mov	x1, #0x100                 	// #256
  41600c:	bl	40e00c <wcrtomb@plt+0xb25c>
  416010:	ldp	x29, x30, [sp, #144]
  416014:	add	sp, sp, #0xa0
  416018:	ret
  41601c:	sub	sp, sp, #0x40
  416020:	stp	x29, x30, [sp, #48]
  416024:	add	x29, sp, #0x30
  416028:	stur	x0, [x29, #-16]
  41602c:	str	x1, [sp, #24]
  416030:	ldur	x8, [x29, #-16]
  416034:	ldr	x8, [x8, #144]
  416038:	ldr	x9, [sp, #24]
  41603c:	subs	x9, x9, #0x1
  416040:	ldr	x8, [x8, x9, lsl #3]
  416044:	subs	x9, x8, #0x101
  416048:	cmp	x9, #0x2
  41604c:	str	x8, [sp, #8]
  416050:	b.ls	416078 <wcrtomb@plt+0x132c8>  // b.plast
  416054:	b	416058 <wcrtomb@plt+0x132a8>
  416058:	ldr	x8, [sp, #8]
  41605c:	subs	x9, x8, #0x105
  416060:	cmp	x9, #0x1
  416064:	b.ls	416094 <wcrtomb@plt+0x132e4>  // b.plast
  416068:	b	41606c <wcrtomb@plt+0x132bc>
  41606c:	mov	x8, #0x1                   	// #1
  416070:	stur	x8, [x29, #-8]
  416074:	b	4160d8 <wcrtomb@plt+0x13328>
  416078:	ldur	x0, [x29, #-16]
  41607c:	ldr	x8, [sp, #24]
  416080:	subs	x1, x8, #0x1
  416084:	bl	41601c <wcrtomb@plt+0x1326c>
  416088:	add	x8, x0, #0x1
  41608c:	stur	x8, [x29, #-8]
  416090:	b	4160d8 <wcrtomb@plt+0x13328>
  416094:	ldur	x0, [x29, #-16]
  416098:	ldr	x8, [sp, #24]
  41609c:	subs	x1, x8, #0x1
  4160a0:	bl	41601c <wcrtomb@plt+0x1326c>
  4160a4:	str	x0, [sp, #16]
  4160a8:	ldr	x8, [sp, #16]
  4160ac:	add	x8, x8, #0x1
  4160b0:	ldur	x0, [x29, #-16]
  4160b4:	ldr	x9, [sp, #24]
  4160b8:	subs	x9, x9, #0x1
  4160bc:	ldr	x10, [sp, #16]
  4160c0:	subs	x1, x9, x10
  4160c4:	str	x8, [sp]
  4160c8:	bl	41601c <wcrtomb@plt+0x1326c>
  4160cc:	ldr	x8, [sp]
  4160d0:	add	x9, x8, x0
  4160d4:	stur	x9, [x29, #-8]
  4160d8:	ldur	x0, [x29, #-8]
  4160dc:	ldp	x29, x30, [sp, #48]
  4160e0:	add	sp, sp, #0x40
  4160e4:	ret
  4160e8:	sub	sp, sp, #0x40
  4160ec:	stp	x29, x30, [sp, #48]
  4160f0:	add	x29, sp, #0x30
  4160f4:	stur	x0, [x29, #-8]
  4160f8:	stur	x1, [x29, #-16]
  4160fc:	str	x2, [sp, #24]
  416100:	ldur	x8, [x29, #-8]
  416104:	ldrb	w9, [x8, #1048]
  416108:	tbnz	w9, #0, 416110 <wcrtomb@plt+0x13360>
  41610c:	b	416170 <wcrtomb@plt+0x133c0>
  416110:	str	xzr, [sp, #16]
  416114:	ldr	x8, [sp, #16]
  416118:	ldr	x9, [sp, #24]
  41611c:	cmp	x8, x9
  416120:	b.ge	41616c <wcrtomb@plt+0x133bc>  // b.tcont
  416124:	ldur	x0, [x29, #-8]
  416128:	ldur	x8, [x29, #-8]
  41612c:	ldr	x8, [x8, #144]
  416130:	ldur	x9, [x29, #-16]
  416134:	ldr	x10, [sp, #16]
  416138:	add	x9, x9, x10
  41613c:	ldr	x1, [x8, x9, lsl #3]
  416140:	ldur	x8, [x29, #-8]
  416144:	ldr	x8, [x8, #280]
  416148:	ldur	x9, [x29, #-16]
  41614c:	ldr	x10, [sp, #16]
  416150:	add	x9, x9, x10
  416154:	ldrb	w2, [x8, x9]
  416158:	bl	411b50 <wcrtomb@plt+0xeda0>
  41615c:	ldr	x8, [sp, #16]
  416160:	add	x8, x8, #0x1
  416164:	str	x8, [sp, #16]
  416168:	b	416114 <wcrtomb@plt+0x13364>
  41616c:	b	4161b8 <wcrtomb@plt+0x13408>
  416170:	str	xzr, [sp, #8]
  416174:	ldr	x8, [sp, #8]
  416178:	ldr	x9, [sp, #24]
  41617c:	cmp	x8, x9
  416180:	b.ge	4161b8 <wcrtomb@plt+0x13408>  // b.tcont
  416184:	ldur	x0, [x29, #-8]
  416188:	ldur	x8, [x29, #-8]
  41618c:	ldr	x8, [x8, #144]
  416190:	ldur	x9, [x29, #-16]
  416194:	ldr	x10, [sp, #8]
  416198:	add	x9, x9, x10
  41619c:	ldr	x1, [x8, x9, lsl #3]
  4161a0:	mov	w2, #0x3                   	// #3
  4161a4:	bl	411b50 <wcrtomb@plt+0xeda0>
  4161a8:	ldr	x8, [sp, #8]
  4161ac:	add	x8, x8, #0x1
  4161b0:	str	x8, [sp, #8]
  4161b4:	b	416174 <wcrtomb@plt+0x133c4>
  4161b8:	ldp	x29, x30, [sp, #48]
  4161bc:	add	sp, sp, #0x40
  4161c0:	ret
  4161c4:	sub	sp, sp, #0x60
  4161c8:	stp	x29, x30, [sp, #80]
  4161cc:	add	x29, sp, #0x50
  4161d0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4161d4:	add	x8, x8, #0x98
  4161d8:	stur	x0, [x29, #-8]
  4161dc:	ldur	x9, [x29, #-8]
  4161e0:	ldr	x9, [x9, #200]
  4161e4:	str	x8, [sp, #16]
  4161e8:	cbnz	x9, 4162a8 <wcrtomb@plt+0x134f8>
  4161ec:	ldr	x8, [sp, #16]
  4161f0:	ldr	q0, [x8]
  4161f4:	str	q0, [sp, #32]
  4161f8:	ldr	q0, [x8, #16]
  4161fc:	str	q0, [sp, #48]
  416200:	ldur	x9, [x29, #-8]
  416204:	ldr	x9, [x9, #448]
  416208:	and	x9, x9, #0x40
  41620c:	cbnz	x9, 41621c <wcrtomb@plt+0x1346c>
  416210:	mov	w0, #0xa                   	// #10
  416214:	add	x1, sp, #0x20
  416218:	bl	414c64 <wcrtomb@plt+0x11eb4>
  41621c:	ldur	x8, [x29, #-8]
  416220:	ldr	x8, [x8, #448]
  416224:	and	x8, x8, #0x80
  416228:	cbz	x8, 41623c <wcrtomb@plt+0x1348c>
  41622c:	mov	w8, wzr
  416230:	mov	w0, w8
  416234:	add	x1, sp, #0x20
  416238:	bl	414c64 <wcrtomb@plt+0x11eb4>
  41623c:	ldur	x0, [x29, #-8]
  416240:	add	x1, sp, #0x20
  416244:	bl	414ccc <wcrtomb@plt+0x11f1c>
  416248:	add	x8, x0, #0x114
  41624c:	ldur	x9, [x29, #-8]
  416250:	str	x8, [x9, #200]
  416254:	mov	w10, #0x1                   	// #1
  416258:	str	w10, [sp, #28]
  41625c:	ldrsw	x8, [sp, #28]
  416260:	cmp	x8, #0x9
  416264:	b.cs	4162a8 <wcrtomb@plt+0x134f8>  // b.hs, b.nlast
  416268:	ldur	x0, [x29, #-8]
  41626c:	ldrsw	x8, [sp, #28]
  416270:	mov	x9, #0x20                  	// #32
  416274:	mul	x8, x9, x8
  416278:	ldr	x9, [sp, #16]
  41627c:	add	x1, x9, x8
  416280:	bl	414ccc <wcrtomb@plt+0x11f1c>
  416284:	add	x8, x0, #0x114
  416288:	ldur	x9, [x29, #-8]
  41628c:	add	x9, x9, #0xc8
  416290:	ldrsw	x10, [sp, #28]
  416294:	str	x8, [x9, x10, lsl #3]
  416298:	ldr	w8, [sp, #28]
  41629c:	add	w8, w8, #0x1
  4162a0:	str	w8, [sp, #28]
  4162a4:	b	41625c <wcrtomb@plt+0x134ac>
  4162a8:	ldur	x0, [x29, #-8]
  4162ac:	ldur	x8, [x29, #-8]
  4162b0:	ldr	x1, [x8, #200]
  4162b4:	bl	40e00c <wcrtomb@plt+0xb25c>
  4162b8:	ldur	x0, [x29, #-8]
  4162bc:	ldur	x8, [x29, #-8]
  4162c0:	ldr	x1, [x8, #208]
  4162c4:	bl	40e00c <wcrtomb@plt+0xb25c>
  4162c8:	ldur	x0, [x29, #-8]
  4162cc:	mov	x1, #0xe0                  	// #224
  4162d0:	bl	40e00c <wcrtomb@plt+0xb25c>
  4162d4:	ldur	x0, [x29, #-8]
  4162d8:	ldur	x8, [x29, #-8]
  4162dc:	ldr	x1, [x8, #224]
  4162e0:	bl	40e00c <wcrtomb@plt+0xb25c>
  4162e4:	ldur	x0, [x29, #-8]
  4162e8:	mov	x8, #0x105                 	// #261
  4162ec:	mov	x1, x8
  4162f0:	str	x8, [sp, #8]
  4162f4:	bl	40e00c <wcrtomb@plt+0xb25c>
  4162f8:	ldur	x0, [x29, #-8]
  4162fc:	mov	x8, #0x106                 	// #262
  416300:	mov	x1, x8
  416304:	str	x8, [sp]
  416308:	bl	40e00c <wcrtomb@plt+0xb25c>
  41630c:	ldur	x0, [x29, #-8]
  416310:	mov	x1, #0xed                  	// #237
  416314:	bl	40e00c <wcrtomb@plt+0xb25c>
  416318:	ldur	x0, [x29, #-8]
  41631c:	ldur	x8, [x29, #-8]
  416320:	ldr	x1, [x8, #240]
  416324:	bl	40e00c <wcrtomb@plt+0xb25c>
  416328:	ldur	x0, [x29, #-8]
  41632c:	ldr	x1, [sp, #8]
  416330:	bl	40e00c <wcrtomb@plt+0xb25c>
  416334:	ldur	x0, [x29, #-8]
  416338:	ldr	x1, [sp]
  41633c:	bl	40e00c <wcrtomb@plt+0xb25c>
  416340:	ldur	x0, [x29, #-8]
  416344:	ldur	x8, [x29, #-8]
  416348:	ldr	x1, [x8, #232]
  41634c:	bl	40e00c <wcrtomb@plt+0xb25c>
  416350:	ldur	x0, [x29, #-8]
  416354:	mov	x1, #0xf0                  	// #240
  416358:	bl	40e00c <wcrtomb@plt+0xb25c>
  41635c:	ldur	x0, [x29, #-8]
  416360:	ldur	x8, [x29, #-8]
  416364:	ldr	x1, [x8, #248]
  416368:	bl	40e00c <wcrtomb@plt+0xb25c>
  41636c:	ldur	x0, [x29, #-8]
  416370:	ldr	x1, [sp, #8]
  416374:	bl	40e00c <wcrtomb@plt+0xb25c>
  416378:	ldur	x0, [x29, #-8]
  41637c:	ldr	x1, [sp]
  416380:	bl	40e00c <wcrtomb@plt+0xb25c>
  416384:	ldur	x0, [x29, #-8]
  416388:	mov	x1, #0xf4                  	// #244
  41638c:	bl	40e00c <wcrtomb@plt+0xb25c>
  416390:	ldur	x0, [x29, #-8]
  416394:	ldur	x8, [x29, #-8]
  416398:	ldr	x1, [x8, #264]
  41639c:	bl	40e00c <wcrtomb@plt+0xb25c>
  4163a0:	ldur	x0, [x29, #-8]
  4163a4:	ldr	x1, [sp, #8]
  4163a8:	bl	40e00c <wcrtomb@plt+0xb25c>
  4163ac:	ldur	x0, [x29, #-8]
  4163b0:	ldr	x1, [sp]
  4163b4:	bl	40e00c <wcrtomb@plt+0xb25c>
  4163b8:	ldur	x0, [x29, #-8]
  4163bc:	ldur	x8, [x29, #-8]
  4163c0:	ldr	x1, [x8, #256]
  4163c4:	bl	40e00c <wcrtomb@plt+0xb25c>
  4163c8:	str	wzr, [sp, #24]
  4163cc:	ldr	w8, [sp, #24]
  4163d0:	cmp	w8, #0x3
  4163d4:	b.ge	416410 <wcrtomb@plt+0x13660>  // b.tcont
  4163d8:	ldur	x0, [x29, #-8]
  4163dc:	ldur	x8, [x29, #-8]
  4163e0:	ldr	x1, [x8, #216]
  4163e4:	bl	40e00c <wcrtomb@plt+0xb25c>
  4163e8:	ldur	x0, [x29, #-8]
  4163ec:	mov	x1, #0x105                 	// #261
  4163f0:	bl	40e00c <wcrtomb@plt+0xb25c>
  4163f4:	ldur	x0, [x29, #-8]
  4163f8:	mov	x1, #0x106                 	// #262
  4163fc:	bl	40e00c <wcrtomb@plt+0xb25c>
  416400:	ldr	w8, [sp, #24]
  416404:	add	w8, w8, #0x1
  416408:	str	w8, [sp, #24]
  41640c:	b	4163cc <wcrtomb@plt+0x1361c>
  416410:	ldp	x29, x30, [sp, #80]
  416414:	add	sp, sp, #0x60
  416418:	ret
  41641c:	sub	sp, sp, #0x20
  416420:	stp	x29, x30, [sp, #16]
  416424:	add	x29, sp, #0x10
  416428:	mov	x8, #0x10                  	// #16
  41642c:	str	x0, [sp, #8]
  416430:	str	x1, [sp]
  416434:	ldr	x0, [sp]
  416438:	mov	x1, x8
  41643c:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  416440:	ldr	x8, [sp, #8]
  416444:	str	x0, [x8]
  416448:	ldr	x8, [sp]
  41644c:	ldr	x9, [sp, #8]
  416450:	str	x8, [x9, #16]
  416454:	ldr	x8, [sp, #8]
  416458:	str	xzr, [x8, #8]
  41645c:	ldp	x29, x30, [sp, #16]
  416460:	add	sp, sp, #0x20
  416464:	ret
  416468:	sub	sp, sp, #0x30
  41646c:	stp	x29, x30, [sp, #32]
  416470:	add	x29, sp, #0x20
  416474:	mov	w8, #0xffffffff            	// #-1
  416478:	stur	x0, [x29, #-8]
  41647c:	str	x1, [sp, #16]
  416480:	str	x2, [sp, #8]
  416484:	ldur	x0, [x29, #-8]
  416488:	ldr	x1, [sp, #16]
  41648c:	ldr	x3, [sp, #8]
  416490:	mov	w2, w8
  416494:	bl	417060 <wcrtomb@plt+0x142b0>
  416498:	ldp	x29, x30, [sp, #32]
  41649c:	add	sp, sp, #0x30
  4164a0:	ret
  4164a4:	sub	sp, sp, #0x20
  4164a8:	stp	x29, x30, [sp, #16]
  4164ac:	add	x29, sp, #0x10
  4164b0:	str	x0, [sp, #8]
  4164b4:	str	x1, [sp]
  4164b8:	ldr	x8, [sp]
  4164bc:	ldr	x8, [x8, #16]
  4164c0:	ldr	x9, [sp, #8]
  4164c4:	ldr	x9, [x9, #8]
  4164c8:	cmp	x8, x9
  4164cc:	b.ge	416514 <wcrtomb@plt+0x13764>  // b.tcont
  4164d0:	ldr	x8, [sp]
  4164d4:	ldr	x0, [x8]
  4164d8:	bl	402b40 <free@plt>
  4164dc:	ldr	x8, [sp]
  4164e0:	add	x1, x8, #0x10
  4164e4:	ldr	x8, [sp, #8]
  4164e8:	ldr	x8, [x8, #8]
  4164ec:	ldr	x9, [sp]
  4164f0:	ldr	x9, [x9, #16]
  4164f4:	subs	x2, x8, x9
  4164f8:	mov	x8, xzr
  4164fc:	mov	x0, x8
  416500:	mov	x3, #0xffffffffffffffff    	// #-1
  416504:	mov	x4, #0x10                  	// #16
  416508:	bl	411cc8 <wcrtomb@plt+0xef18>
  41650c:	ldr	x8, [sp]
  416510:	str	x0, [x8]
  416514:	ldr	x8, [sp, #8]
  416518:	ldr	x8, [x8, #8]
  41651c:	ldr	x9, [sp]
  416520:	str	x8, [x9, #8]
  416524:	ldr	x8, [sp, #8]
  416528:	ldr	x8, [x8, #8]
  41652c:	cbz	x8, 416554 <wcrtomb@plt+0x137a4>
  416530:	ldr	x8, [sp]
  416534:	ldr	x0, [x8]
  416538:	ldr	x8, [sp, #8]
  41653c:	ldr	x1, [x8]
  416540:	ldr	x8, [sp, #8]
  416544:	ldr	x8, [x8, #8]
  416548:	mov	x9, #0x10                  	// #16
  41654c:	mul	x2, x8, x9
  416550:	bl	4026a0 <memcpy@plt>
  416554:	ldp	x29, x30, [sp, #16]
  416558:	add	sp, sp, #0x20
  41655c:	ret
  416560:	sub	sp, sp, #0x50
  416564:	stp	x29, x30, [sp, #64]
  416568:	add	x29, sp, #0x40
  41656c:	add	x8, sp, #0x20
  416570:	stur	x0, [x29, #-8]
  416574:	ldur	x9, [x29, #-8]
  416578:	ldr	x1, [x9, #176]
  41657c:	mov	x0, x8
  416580:	bl	41641c <wcrtomb@plt+0x1366c>
  416584:	str	xzr, [sp, #24]
  416588:	ldr	x8, [sp, #24]
  41658c:	ldur	x9, [x29, #-8]
  416590:	ldr	x9, [x9, #152]
  416594:	cmp	x8, x9
  416598:	b.ge	416790 <wcrtomb@plt+0x139e0>  // b.tcont
  41659c:	ldur	x8, [x29, #-8]
  4165a0:	ldr	x8, [x8, #320]
  4165a4:	ldr	x9, [sp, #24]
  4165a8:	mov	x10, #0x18                  	// #24
  4165ac:	mul	x9, x10, x9
  4165b0:	add	x8, x8, x9
  4165b4:	ldr	x8, [x8, #8]
  4165b8:	cmp	x8, #0x0
  4165bc:	cset	w11, le
  4165c0:	tbnz	w11, #0, 416780 <wcrtomb@plt+0x139d0>
  4165c4:	ldur	x8, [x29, #-8]
  4165c8:	ldr	x8, [x8, #144]
  4165cc:	ldr	x9, [sp, #24]
  4165d0:	ldr	x8, [x8, x9, lsl #3]
  4165d4:	cmp	x8, #0x100
  4165d8:	b.lt	416780 <wcrtomb@plt+0x139d0>  // b.tstop
  4165dc:	ldur	x8, [x29, #-8]
  4165e0:	ldr	x8, [x8, #144]
  4165e4:	ldr	x9, [sp, #24]
  4165e8:	ldr	x8, [x8, x9, lsl #3]
  4165ec:	cmp	x8, #0x112
  4165f0:	b.eq	416780 <wcrtomb@plt+0x139d0>  // b.none
  4165f4:	ldur	x8, [x29, #-8]
  4165f8:	ldr	x8, [x8, #144]
  4165fc:	ldr	x9, [sp, #24]
  416600:	ldr	x8, [x8, x9, lsl #3]
  416604:	cmp	x8, #0x10a
  416608:	b.eq	416780 <wcrtomb@plt+0x139d0>  // b.none
  41660c:	ldur	x8, [x29, #-8]
  416610:	ldr	x8, [x8, #144]
  416614:	ldr	x9, [sp, #24]
  416618:	ldr	x8, [x8, x9, lsl #3]
  41661c:	cmp	x8, #0x113
  416620:	b.eq	416780 <wcrtomb@plt+0x139d0>  // b.none
  416624:	ldur	x8, [x29, #-8]
  416628:	ldr	x8, [x8, #144]
  41662c:	ldr	x9, [sp, #24]
  416630:	ldr	x8, [x8, x9, lsl #3]
  416634:	cmp	x8, #0x114
  416638:	b.ge	416780 <wcrtomb@plt+0x139d0>  // b.tcont
  41663c:	ldur	x8, [x29, #-8]
  416640:	ldr	x8, [x8, #144]
  416644:	ldr	x9, [sp, #24]
  416648:	ldr	x8, [x8, x9, lsl #3]
  41664c:	subs	x8, x8, #0x10c
  416650:	cmp	x8, #0x5
  416654:	str	x8, [sp]
  416658:	b.hi	4166bc <wcrtomb@plt+0x1390c>  // b.pmore
  41665c:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  416660:	add	x8, x8, #0xf44
  416664:	ldr	x11, [sp]
  416668:	ldrsw	x10, [x8, x11, lsl #2]
  41666c:	add	x9, x8, x10
  416670:	br	x9
  416674:	mov	w8, #0x124                 	// #292
  416678:	str	w8, [sp, #20]
  41667c:	b	4166c4 <wcrtomb@plt+0x13914>
  416680:	mov	w8, #0x1c0                 	// #448
  416684:	str	w8, [sp, #20]
  416688:	b	4166c4 <wcrtomb@plt+0x13914>
  41668c:	mov	w8, #0x28                  	// #40
  416690:	str	w8, [sp, #20]
  416694:	b	4166c4 <wcrtomb@plt+0x13914>
  416698:	mov	w8, #0x82                  	// #130
  41669c:	str	w8, [sp, #20]
  4166a0:	b	4166c4 <wcrtomb@plt+0x13914>
  4166a4:	mov	w8, #0xaa                  	// #170
  4166a8:	str	w8, [sp, #20]
  4166ac:	b	4166c4 <wcrtomb@plt+0x13914>
  4166b0:	mov	w8, #0x155                 	// #341
  4166b4:	str	w8, [sp, #20]
  4166b8:	b	4166c4 <wcrtomb@plt+0x13914>
  4166bc:	mov	w8, #0x1ff                 	// #511
  4166c0:	str	w8, [sp, #20]
  4166c4:	ldr	x0, [sp, #24]
  4166c8:	ldur	x8, [x29, #-8]
  4166cc:	ldr	x8, [x8, #320]
  4166d0:	ldr	x9, [sp, #24]
  4166d4:	mov	x10, #0x18                  	// #24
  4166d8:	mul	x9, x10, x9
  4166dc:	add	x1, x8, x9
  4166e0:	bl	41736c <wcrtomb@plt+0x145bc>
  4166e4:	str	xzr, [sp, #8]
  4166e8:	ldr	x8, [sp, #8]
  4166ec:	ldur	x9, [x29, #-8]
  4166f0:	ldr	x9, [x9, #152]
  4166f4:	cmp	x8, x9
  4166f8:	b.ge	416780 <wcrtomb@plt+0x139d0>  // b.tcont
  4166fc:	ldr	x8, [sp, #24]
  416700:	ldr	x9, [sp, #8]
  416704:	cmp	x8, x9
  416708:	b.eq	416770 <wcrtomb@plt+0x139c0>  // b.none
  41670c:	ldur	x8, [x29, #-8]
  416710:	ldr	x8, [x8, #320]
  416714:	ldr	x9, [sp, #8]
  416718:	mov	x10, #0x18                  	// #24
  41671c:	mul	x9, x10, x9
  416720:	add	x8, x8, x9
  416724:	ldr	x8, [x8, #8]
  416728:	cmp	x8, #0x0
  41672c:	cset	w11, le
  416730:	tbnz	w11, #0, 416770 <wcrtomb@plt+0x139c0>
  416734:	ldur	x8, [x29, #-8]
  416738:	ldr	x8, [x8, #320]
  41673c:	ldr	x9, [sp, #8]
  416740:	mov	x10, #0x18                  	// #24
  416744:	mul	x9, x10, x9
  416748:	add	x0, x8, x9
  41674c:	ldr	x1, [sp, #24]
  416750:	ldur	x8, [x29, #-8]
  416754:	ldr	x8, [x8, #320]
  416758:	ldr	x9, [sp, #24]
  41675c:	mul	x9, x10, x9
  416760:	add	x2, x8, x9
  416764:	ldr	w3, [sp, #20]
  416768:	add	x4, sp, #0x20
  41676c:	bl	4174b0 <wcrtomb@plt+0x14700>
  416770:	ldr	x8, [sp, #8]
  416774:	add	x8, x8, #0x1
  416778:	str	x8, [sp, #8]
  41677c:	b	4166e8 <wcrtomb@plt+0x13938>
  416780:	ldr	x8, [sp, #24]
  416784:	add	x8, x8, #0x1
  416788:	str	x8, [sp, #24]
  41678c:	b	416588 <wcrtomb@plt+0x137d8>
  416790:	ldr	x0, [sp, #32]
  416794:	bl	402b40 <free@plt>
  416798:	ldp	x29, x30, [sp, #64]
  41679c:	add	sp, sp, #0x50
  4167a0:	ret
  4167a4:	sub	sp, sp, #0x60
  4167a8:	stp	x29, x30, [sp, #80]
  4167ac:	add	x29, sp, #0x50
  4167b0:	stur	x0, [x29, #-8]
  4167b4:	ldur	x8, [x29, #-8]
  4167b8:	ldr	x0, [x8, #152]
  4167bc:	bl	41d908 <wcrtomb@plt+0x1ab58>
  4167c0:	stur	x0, [x29, #-16]
  4167c4:	stur	xzr, [x29, #-24]
  4167c8:	ldur	x8, [x29, #-24]
  4167cc:	ldur	x9, [x29, #-8]
  4167d0:	ldr	x9, [x9, #152]
  4167d4:	cmp	x8, x9
  4167d8:	b.ge	4169f0 <wcrtomb@plt+0x13c40>  // b.tcont
  4167dc:	stur	xzr, [x29, #-32]
  4167e0:	ldur	x8, [x29, #-32]
  4167e4:	ldur	x9, [x29, #-8]
  4167e8:	ldr	x9, [x9, #320]
  4167ec:	ldur	x10, [x29, #-24]
  4167f0:	mov	x11, #0x18                  	// #24
  4167f4:	mul	x10, x11, x10
  4167f8:	add	x9, x9, x10
  4167fc:	ldr	x9, [x9, #8]
  416800:	cmp	x8, x9
  416804:	b.ge	4169e0 <wcrtomb@plt+0x13c30>  // b.tcont
  416808:	ldur	x8, [x29, #-8]
  41680c:	ldr	x8, [x8, #320]
  416810:	ldur	x9, [x29, #-24]
  416814:	mov	x10, #0x18                  	// #24
  416818:	mul	x9, x10, x9
  41681c:	add	x8, x8, x9
  416820:	ldr	x8, [x8]
  416824:	ldur	x9, [x29, #-32]
  416828:	mov	x10, #0x10                  	// #16
  41682c:	mul	x9, x10, x9
  416830:	ldr	x8, [x8, x9]
  416834:	ldur	x9, [x29, #-24]
  416838:	cmp	x8, x9
  41683c:	b.ne	416884 <wcrtomb@plt+0x13ad4>  // b.any
  416840:	ldur	x8, [x29, #-16]
  416844:	ldur	x9, [x29, #-8]
  416848:	ldr	x9, [x9, #320]
  41684c:	ldur	x10, [x29, #-24]
  416850:	mov	x11, #0x18                  	// #24
  416854:	mul	x10, x11, x10
  416858:	add	x9, x9, x10
  41685c:	ldr	x9, [x9]
  416860:	ldur	x10, [x29, #-32]
  416864:	mov	x11, #0x10                  	// #16
  416868:	mul	x10, x11, x10
  41686c:	ldr	x9, [x9, x10]
  416870:	add	x8, x8, x9
  416874:	ldrb	w12, [x8]
  416878:	orr	w12, w12, #0x1
  41687c:	strb	w12, [x8]
  416880:	b	4169d0 <wcrtomb@plt+0x13c20>
  416884:	ldur	x8, [x29, #-8]
  416888:	ldr	x8, [x8, #320]
  41688c:	ldur	x9, [x29, #-24]
  416890:	mov	x10, #0x18                  	// #24
  416894:	mul	x9, x10, x9
  416898:	add	x8, x8, x9
  41689c:	ldr	x8, [x8]
  4168a0:	ldur	x9, [x29, #-32]
  4168a4:	mov	x10, #0x10                  	// #16
  4168a8:	mul	x9, x10, x9
  4168ac:	ldr	x8, [x8, x9]
  4168b0:	ldur	x9, [x29, #-24]
  4168b4:	cmp	x8, x9
  4168b8:	b.ge	416900 <wcrtomb@plt+0x13b50>  // b.tcont
  4168bc:	ldur	x8, [x29, #-16]
  4168c0:	ldur	x9, [x29, #-8]
  4168c4:	ldr	x9, [x9, #320]
  4168c8:	ldur	x10, [x29, #-24]
  4168cc:	mov	x11, #0x18                  	// #24
  4168d0:	mul	x10, x11, x10
  4168d4:	add	x9, x9, x10
  4168d8:	ldr	x9, [x9]
  4168dc:	ldur	x10, [x29, #-32]
  4168e0:	mov	x11, #0x10                  	// #16
  4168e4:	mul	x10, x11, x10
  4168e8:	ldr	x9, [x9, x10]
  4168ec:	add	x8, x8, x9
  4168f0:	ldrb	w12, [x8]
  4168f4:	orr	w12, w12, #0x2
  4168f8:	strb	w12, [x8]
  4168fc:	b	4169d0 <wcrtomb@plt+0x13c20>
  416900:	ldur	x8, [x29, #-16]
  416904:	ldur	x9, [x29, #-8]
  416908:	ldr	x9, [x9, #320]
  41690c:	ldur	x10, [x29, #-24]
  416910:	mov	x11, #0x18                  	// #24
  416914:	mul	x10, x11, x10
  416918:	add	x9, x9, x10
  41691c:	ldr	x9, [x9]
  416920:	ldur	x10, [x29, #-32]
  416924:	mov	x11, #0x10                  	// #16
  416928:	mul	x10, x11, x10
  41692c:	ldr	x9, [x9, x10]
  416930:	add	x8, x8, x9
  416934:	ldrb	w12, [x8]
  416938:	and	w12, w12, #0x8
  41693c:	mov	w13, w12
  416940:	strb	w13, [x8]
  416944:	and	w12, w12, #0xff
  416948:	cbz	w12, 416990 <wcrtomb@plt+0x13be0>
  41694c:	ldur	x8, [x29, #-16]
  416950:	ldur	x9, [x29, #-8]
  416954:	ldr	x9, [x9, #320]
  416958:	ldur	x10, [x29, #-24]
  41695c:	mov	x11, #0x18                  	// #24
  416960:	mul	x10, x11, x10
  416964:	add	x9, x9, x10
  416968:	ldr	x9, [x9]
  41696c:	ldur	x10, [x29, #-32]
  416970:	mov	x11, #0x10                  	// #16
  416974:	mul	x10, x11, x10
  416978:	ldr	x9, [x9, x10]
  41697c:	add	x8, x8, x9
  416980:	ldrb	w12, [x8]
  416984:	orr	w12, w12, #0x4
  416988:	strb	w12, [x8]
  41698c:	b	4169d0 <wcrtomb@plt+0x13c20>
  416990:	ldur	x8, [x29, #-16]
  416994:	ldur	x9, [x29, #-8]
  416998:	ldr	x9, [x9, #320]
  41699c:	ldur	x10, [x29, #-24]
  4169a0:	mov	x11, #0x18                  	// #24
  4169a4:	mul	x10, x11, x10
  4169a8:	add	x9, x9, x10
  4169ac:	ldr	x9, [x9]
  4169b0:	ldur	x10, [x29, #-32]
  4169b4:	mov	x11, #0x10                  	// #16
  4169b8:	mul	x10, x11, x10
  4169bc:	ldr	x9, [x9, x10]
  4169c0:	add	x8, x8, x9
  4169c4:	ldrb	w12, [x8]
  4169c8:	orr	w12, w12, #0x8
  4169cc:	strb	w12, [x8]
  4169d0:	ldur	x8, [x29, #-32]
  4169d4:	add	x8, x8, #0x1
  4169d8:	stur	x8, [x29, #-32]
  4169dc:	b	4167e0 <wcrtomb@plt+0x13a30>
  4169e0:	ldur	x8, [x29, #-24]
  4169e4:	add	x8, x8, #0x1
  4169e8:	stur	x8, [x29, #-24]
  4169ec:	b	4167c8 <wcrtomb@plt+0x13a18>
  4169f0:	ldur	x8, [x29, #-16]
  4169f4:	ldrb	w9, [x8]
  4169f8:	orr	w9, w9, #0x10
  4169fc:	strb	w9, [x8]
  416a00:	add	x8, sp, #0x18
  416a04:	str	x8, [sp, #16]
  416a08:	ldr	x0, [sp, #16]
  416a0c:	ldur	x8, [x29, #-8]
  416a10:	ldr	x1, [x8, #176]
  416a14:	bl	41641c <wcrtomb@plt+0x1366c>
  416a18:	ldur	x8, [x29, #-8]
  416a1c:	ldr	x0, [x8, #152]
  416a20:	mov	x1, #0x4                   	// #4
  416a24:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  416a28:	ldur	x8, [x29, #-8]
  416a2c:	str	x0, [x8, #336]
  416a30:	str	xzr, [sp, #8]
  416a34:	ldr	x8, [sp, #8]
  416a38:	ldur	x9, [x29, #-8]
  416a3c:	ldr	x9, [x9, #152]
  416a40:	cmp	x8, x9
  416a44:	b.ge	416a80 <wcrtomb@plt+0x13cd0>  // b.tcont
  416a48:	ldur	x8, [x29, #-16]
  416a4c:	ldr	x9, [sp, #8]
  416a50:	ldrb	w10, [x8, x9]
  416a54:	and	w10, w10, #0x10
  416a58:	cbz	w10, 416a70 <wcrtomb@plt+0x13cc0>
  416a5c:	ldur	x0, [x29, #-8]
  416a60:	ldr	x1, [sp, #8]
  416a64:	ldur	x2, [x29, #-16]
  416a68:	ldr	x3, [sp, #16]
  416a6c:	bl	41751c <wcrtomb@plt+0x1476c>
  416a70:	ldr	x8, [sp, #8]
  416a74:	add	x8, x8, #0x1
  416a78:	str	x8, [sp, #8]
  416a7c:	b	416a34 <wcrtomb@plt+0x13c84>
  416a80:	ldur	x0, [x29, #-8]
  416a84:	bl	417884 <wcrtomb@plt+0x14ad4>
  416a88:	ldr	x8, [sp, #16]
  416a8c:	ldr	x0, [x8]
  416a90:	bl	402b40 <free@plt>
  416a94:	ldur	x0, [x29, #-16]
  416a98:	bl	402b40 <free@plt>
  416a9c:	ldp	x29, x30, [sp, #80]
  416aa0:	add	sp, sp, #0x60
  416aa4:	ret
  416aa8:	sub	sp, sp, #0x30
  416aac:	stp	x29, x30, [sp, #32]
  416ab0:	add	x29, sp, #0x20
  416ab4:	mov	x3, #0xffffffffffffffff    	// #-1
  416ab8:	mov	x4, #0x10                  	// #16
  416abc:	str	x0, [sp, #16]
  416ac0:	str	x1, [sp, #24]
  416ac4:	str	x2, [sp, #8]
  416ac8:	ldr	x8, [sp, #8]
  416acc:	ldr	x8, [x8, #8]
  416ad0:	str	x8, [sp]
  416ad4:	ldr	x8, [sp, #8]
  416ad8:	ldr	x0, [x8]
  416adc:	ldr	x1, [sp]
  416ae0:	ldr	x8, [sp, #8]
  416ae4:	add	x2, x8, #0x10
  416ae8:	bl	4158dc <wcrtomb@plt+0x12b2c>
  416aec:	ldr	x8, [sp, #8]
  416af0:	str	x0, [x8]
  416af4:	ldr	x8, [sp, #8]
  416af8:	ldr	x8, [x8]
  416afc:	ldr	x9, [sp, #8]
  416b00:	ldr	x10, [x9, #8]
  416b04:	add	x11, x10, #0x1
  416b08:	str	x11, [x9, #8]
  416b0c:	ldr	q0, [sp, #16]
  416b10:	str	q0, [x8, x10, lsl #4]
  416b14:	ldp	x29, x30, [sp, #32]
  416b18:	add	sp, sp, #0x30
  416b1c:	ret
  416b20:	sub	sp, sp, #0x10
  416b24:	mov	w8, #0x49                  	// #73
  416b28:	str	w0, [sp, #12]
  416b2c:	ldr	w9, [sp, #12]
  416b30:	ldr	w10, [sp, #12]
  416b34:	eor	w9, w9, w10, asr #2
  416b38:	tst	w9, w8
  416b3c:	cset	w8, ne  // ne = any
  416b40:	and	w0, w8, #0x1
  416b44:	add	sp, sp, #0x10
  416b48:	ret
  416b4c:	sub	sp, sp, #0x10
  416b50:	mov	w8, #0x49                  	// #73
  416b54:	str	w0, [sp, #12]
  416b58:	ldr	w9, [sp, #12]
  416b5c:	ldr	w10, [sp, #12]
  416b60:	eor	w9, w9, w10, asr #1
  416b64:	tst	w9, w8
  416b68:	cset	w8, ne  // ne = any
  416b6c:	and	w0, w8, #0x1
  416b70:	add	sp, sp, #0x10
  416b74:	ret
  416b78:	sub	sp, sp, #0x20
  416b7c:	str	x0, [sp, #24]
  416b80:	str	x1, [sp, #16]
  416b84:	str	wzr, [sp, #12]
  416b88:	str	xzr, [sp]
  416b8c:	ldr	x8, [sp]
  416b90:	ldr	x9, [sp, #16]
  416b94:	ldr	x9, [x9, #8]
  416b98:	cmp	x8, x9
  416b9c:	b.ge	416be0 <wcrtomb@plt+0x13e30>  // b.tcont
  416ba0:	ldr	x8, [sp, #24]
  416ba4:	ldr	x8, [x8, #344]
  416ba8:	ldr	x9, [sp, #16]
  416bac:	ldr	x9, [x9]
  416bb0:	ldr	x10, [sp]
  416bb4:	mov	x11, #0x10                  	// #16
  416bb8:	mul	x10, x11, x10
  416bbc:	ldr	x9, [x9, x10]
  416bc0:	ldr	w12, [x8, x9, lsl #2]
  416bc4:	ldr	w13, [sp, #12]
  416bc8:	orr	w12, w13, w12
  416bcc:	str	w12, [sp, #12]
  416bd0:	ldr	x8, [sp]
  416bd4:	add	x8, x8, #0x1
  416bd8:	str	x8, [sp]
  416bdc:	b	416b8c <wcrtomb@plt+0x13ddc>
  416be0:	ldr	w0, [sp, #12]
  416be4:	add	sp, sp, #0x20
  416be8:	ret
  416bec:	sub	sp, sp, #0x80
  416bf0:	stp	x29, x30, [sp, #112]
  416bf4:	add	x29, sp, #0x70
  416bf8:	stur	x0, [x29, #-16]
  416bfc:	stur	x1, [x29, #-24]
  416c00:	stur	w2, [x29, #-28]
  416c04:	stur	xzr, [x29, #-40]
  416c08:	stur	wzr, [x29, #-44]
  416c0c:	str	xzr, [sp, #48]
  416c10:	str	xzr, [sp, #56]
  416c14:	ldr	x8, [sp, #56]
  416c18:	ldur	x9, [x29, #-24]
  416c1c:	ldr	x9, [x9, #8]
  416c20:	cmp	x8, x9
  416c24:	b.ge	416c84 <wcrtomb@plt+0x13ed4>  // b.tcont
  416c28:	ldur	x8, [x29, #-24]
  416c2c:	ldr	x8, [x8]
  416c30:	ldr	x9, [sp, #56]
  416c34:	mov	x10, #0x10                  	// #16
  416c38:	mul	x9, x10, x9
  416c3c:	ldr	x8, [x8, x9]
  416c40:	str	x8, [sp, #40]
  416c44:	ldr	x8, [sp, #40]
  416c48:	ldur	x9, [x29, #-24]
  416c4c:	ldr	x9, [x9]
  416c50:	ldr	x11, [sp, #56]
  416c54:	mul	x10, x10, x11
  416c58:	add	x9, x9, x10
  416c5c:	ldr	w12, [x9, #8]
  416c60:	mov	w9, w12
  416c64:	add	x8, x8, x9
  416c68:	ldur	x9, [x29, #-40]
  416c6c:	eor	x8, x9, x8
  416c70:	stur	x8, [x29, #-40]
  416c74:	ldr	x8, [sp, #56]
  416c78:	add	x8, x8, #0x1
  416c7c:	str	x8, [sp, #56]
  416c80:	b	416c14 <wcrtomb@plt+0x13e64>
  416c84:	str	xzr, [sp, #56]
  416c88:	ldr	x8, [sp, #56]
  416c8c:	ldur	x9, [x29, #-16]
  416c90:	ldr	x9, [x9, #304]
  416c94:	cmp	x8, x9
  416c98:	b.ge	416e0c <wcrtomb@plt+0x1405c>  // b.tcont
  416c9c:	ldur	x8, [x29, #-40]
  416ca0:	ldur	x9, [x29, #-16]
  416ca4:	ldr	x9, [x9, #296]
  416ca8:	ldr	x10, [sp, #56]
  416cac:	mov	x11, #0x50                  	// #80
  416cb0:	mul	x10, x11, x10
  416cb4:	ldr	x9, [x9, x10]
  416cb8:	cmp	x8, x9
  416cbc:	b.ne	416d14 <wcrtomb@plt+0x13f64>  // b.any
  416cc0:	ldur	x8, [x29, #-24]
  416cc4:	ldr	x8, [x8, #8]
  416cc8:	ldur	x9, [x29, #-16]
  416ccc:	ldr	x9, [x9, #296]
  416cd0:	ldr	x10, [sp, #56]
  416cd4:	mov	x11, #0x50                  	// #80
  416cd8:	mul	x10, x11, x10
  416cdc:	add	x9, x9, x10
  416ce0:	ldr	x9, [x9, #16]
  416ce4:	cmp	x8, x9
  416ce8:	b.ne	416d14 <wcrtomb@plt+0x13f64>  // b.any
  416cec:	ldur	w8, [x29, #-28]
  416cf0:	ldur	x9, [x29, #-16]
  416cf4:	ldr	x9, [x9, #296]
  416cf8:	ldr	x10, [sp, #56]
  416cfc:	mov	x11, #0x50                  	// #80
  416d00:	mul	x10, x11, x10
  416d04:	add	x9, x9, x10
  416d08:	ldrb	w12, [x9, #32]
  416d0c:	cmp	w8, w12
  416d10:	b.eq	416d18 <wcrtomb@plt+0x13f68>  // b.none
  416d14:	b	416dfc <wcrtomb@plt+0x1404c>
  416d18:	str	xzr, [sp, #32]
  416d1c:	ldr	x8, [sp, #32]
  416d20:	ldur	x9, [x29, #-24]
  416d24:	ldr	x9, [x9, #8]
  416d28:	cmp	x8, x9
  416d2c:	b.ge	416ddc <wcrtomb@plt+0x1402c>  // b.tcont
  416d30:	ldur	x8, [x29, #-24]
  416d34:	ldr	x8, [x8]
  416d38:	ldr	x9, [sp, #32]
  416d3c:	mov	x10, #0x10                  	// #16
  416d40:	mul	x9, x10, x9
  416d44:	add	x8, x8, x9
  416d48:	ldr	w11, [x8, #8]
  416d4c:	ldur	x8, [x29, #-16]
  416d50:	ldr	x8, [x8, #296]
  416d54:	ldr	x9, [sp, #56]
  416d58:	mov	x12, #0x50                  	// #80
  416d5c:	mul	x9, x12, x9
  416d60:	add	x8, x8, x9
  416d64:	ldr	x8, [x8, #8]
  416d68:	ldr	x9, [sp, #32]
  416d6c:	mul	x9, x10, x9
  416d70:	add	x8, x8, x9
  416d74:	ldr	w13, [x8, #8]
  416d78:	cmp	w11, w13
  416d7c:	b.ne	416dc8 <wcrtomb@plt+0x14018>  // b.any
  416d80:	ldur	x8, [x29, #-24]
  416d84:	ldr	x8, [x8]
  416d88:	ldr	x9, [sp, #32]
  416d8c:	mov	x10, #0x10                  	// #16
  416d90:	mul	x9, x10, x9
  416d94:	ldr	x8, [x8, x9]
  416d98:	ldur	x9, [x29, #-16]
  416d9c:	ldr	x9, [x9, #296]
  416da0:	ldr	x11, [sp, #56]
  416da4:	mov	x12, #0x50                  	// #80
  416da8:	mul	x11, x12, x11
  416dac:	add	x9, x9, x11
  416db0:	ldr	x9, [x9, #8]
  416db4:	ldr	x11, [sp, #32]
  416db8:	mul	x10, x10, x11
  416dbc:	ldr	x9, [x9, x10]
  416dc0:	cmp	x8, x9
  416dc4:	b.eq	416dcc <wcrtomb@plt+0x1401c>  // b.none
  416dc8:	b	416ddc <wcrtomb@plt+0x1402c>
  416dcc:	ldr	x8, [sp, #32]
  416dd0:	add	x8, x8, #0x1
  416dd4:	str	x8, [sp, #32]
  416dd8:	b	416d1c <wcrtomb@plt+0x13f6c>
  416ddc:	ldr	x8, [sp, #32]
  416de0:	ldur	x9, [x29, #-24]
  416de4:	ldr	x9, [x9, #8]
  416de8:	cmp	x8, x9
  416dec:	b.ne	416dfc <wcrtomb@plt+0x1404c>  // b.any
  416df0:	ldr	x8, [sp, #56]
  416df4:	stur	x8, [x29, #-8]
  416df8:	b	417050 <wcrtomb@plt+0x142a0>
  416dfc:	ldr	x8, [sp, #56]
  416e00:	add	x8, x8, #0x1
  416e04:	str	x8, [sp, #56]
  416e08:	b	416c88 <wcrtomb@plt+0x13ed8>
  416e0c:	str	xzr, [sp, #24]
  416e10:	ldr	x8, [sp, #24]
  416e14:	ldur	x9, [x29, #-24]
  416e18:	ldr	x9, [x9, #8]
  416e1c:	cmp	x8, x9
  416e20:	b.ge	416ef4 <wcrtomb@plt+0x14144>  // b.tcont
  416e24:	ldur	x8, [x29, #-16]
  416e28:	ldr	x8, [x8, #336]
  416e2c:	ldur	x9, [x29, #-24]
  416e30:	ldr	x9, [x9]
  416e34:	ldr	x10, [sp, #24]
  416e38:	mov	x11, #0x10                  	// #16
  416e3c:	mul	x10, x11, x10
  416e40:	ldr	x9, [x9, x10]
  416e44:	ldr	w12, [x8, x9, lsl #2]
  416e48:	str	w12, [sp, #20]
  416e4c:	ldr	w12, [sp, #20]
  416e50:	cbz	w12, 416eb0 <wcrtomb@plt+0x14100>
  416e54:	ldr	w0, [sp, #20]
  416e58:	ldur	w1, [x29, #-28]
  416e5c:	mov	w2, #0x7                   	// #7
  416e60:	bl	417fc8 <wcrtomb@plt+0x15218>
  416e64:	tbnz	w0, #0, 416e6c <wcrtomb@plt+0x140bc>
  416e68:	b	416e7c <wcrtomb@plt+0x140cc>
  416e6c:	ldr	w8, [sp, #20]
  416e70:	ldur	w9, [x29, #-44]
  416e74:	orr	w8, w9, w8
  416e78:	stur	w8, [x29, #-44]
  416e7c:	ldr	x8, [sp, #48]
  416e80:	cbnz	x8, 416eac <wcrtomb@plt+0x140fc>
  416e84:	ldur	x8, [x29, #-16]
  416e88:	ldr	x8, [x8, #144]
  416e8c:	ldur	x9, [x29, #-24]
  416e90:	ldr	x9, [x9]
  416e94:	ldr	x10, [sp, #24]
  416e98:	mov	x11, #0x10                  	// #16
  416e9c:	mul	x10, x11, x10
  416ea0:	ldr	x9, [x9, x10]
  416ea4:	ldr	x8, [x8, x9, lsl #3]
  416ea8:	str	x8, [sp, #48]
  416eac:	b	416ee4 <wcrtomb@plt+0x14134>
  416eb0:	ldur	x8, [x29, #-16]
  416eb4:	ldr	x8, [x8, #144]
  416eb8:	ldur	x9, [x29, #-24]
  416ebc:	ldr	x9, [x9]
  416ec0:	ldr	x10, [sp, #24]
  416ec4:	mov	x11, #0x10                  	// #16
  416ec8:	mul	x10, x11, x10
  416ecc:	ldr	x9, [x9, x10]
  416ed0:	ldr	x8, [x8, x9, lsl #3]
  416ed4:	cmp	x8, #0x112
  416ed8:	b.ne	416ee4 <wcrtomb@plt+0x14134>  // b.any
  416edc:	mov	w8, #0x1ff                 	// #511
  416ee0:	stur	w8, [x29, #-44]
  416ee4:	ldr	x8, [sp, #24]
  416ee8:	add	x8, x8, #0x1
  416eec:	str	x8, [sp, #24]
  416ef0:	b	416e10 <wcrtomb@plt+0x14060>
  416ef4:	ldur	x8, [x29, #-16]
  416ef8:	ldr	x0, [x8, #296]
  416efc:	ldur	x8, [x29, #-16]
  416f00:	ldr	x1, [x8, #304]
  416f04:	ldur	x8, [x29, #-16]
  416f08:	add	x2, x8, #0x138
  416f0c:	mov	x8, #0xffffffffffffffff    	// #-1
  416f10:	mov	x3, x8
  416f14:	mov	x4, #0x50                  	// #80
  416f18:	str	x8, [sp, #8]
  416f1c:	bl	4158dc <wcrtomb@plt+0x12b2c>
  416f20:	ldur	x8, [x29, #-16]
  416f24:	str	x0, [x8, #296]
  416f28:	ldur	x8, [x29, #-40]
  416f2c:	ldur	x9, [x29, #-16]
  416f30:	ldr	x9, [x9, #296]
  416f34:	ldr	x10, [sp, #56]
  416f38:	mov	x11, #0x50                  	// #80
  416f3c:	mul	x10, x11, x10
  416f40:	str	x8, [x9, x10]
  416f44:	ldur	x8, [x29, #-16]
  416f48:	ldr	x8, [x8, #296]
  416f4c:	ldr	x9, [sp, #56]
  416f50:	mul	x9, x11, x9
  416f54:	add	x8, x8, x9
  416f58:	add	x0, x8, #0x8
  416f5c:	ldur	x8, [x29, #-24]
  416f60:	ldr	x1, [x8, #8]
  416f64:	str	x11, [sp]
  416f68:	bl	41641c <wcrtomb@plt+0x1366c>
  416f6c:	ldur	x0, [x29, #-24]
  416f70:	ldur	x8, [x29, #-16]
  416f74:	ldr	x8, [x8, #296]
  416f78:	ldr	x9, [sp, #56]
  416f7c:	ldr	x10, [sp]
  416f80:	mul	x9, x10, x9
  416f84:	add	x8, x8, x9
  416f88:	add	x1, x8, #0x8
  416f8c:	bl	4164a4 <wcrtomb@plt+0x136f4>
  416f90:	ldur	w12, [x29, #-28]
  416f94:	ldur	x8, [x29, #-16]
  416f98:	ldr	x8, [x8, #296]
  416f9c:	ldr	x9, [sp, #56]
  416fa0:	ldr	x10, [sp]
  416fa4:	mul	x9, x10, x9
  416fa8:	add	x8, x8, x9
  416fac:	strb	w12, [x8, #32]
  416fb0:	ldur	w12, [x29, #-44]
  416fb4:	ldur	x8, [x29, #-16]
  416fb8:	ldr	x8, [x8, #296]
  416fbc:	ldr	x9, [sp, #56]
  416fc0:	mul	x9, x10, x9
  416fc4:	add	x8, x8, x9
  416fc8:	strh	w12, [x8, #34]
  416fcc:	ldr	x8, [sp, #48]
  416fd0:	ldur	x9, [x29, #-16]
  416fd4:	ldr	x9, [x9, #296]
  416fd8:	ldr	x11, [sp, #56]
  416fdc:	mul	x11, x10, x11
  416fe0:	add	x9, x9, x11
  416fe4:	str	x8, [x9, #40]
  416fe8:	ldur	x8, [x29, #-16]
  416fec:	ldr	x8, [x8, #296]
  416ff0:	ldr	x9, [sp, #56]
  416ff4:	mul	x9, x10, x9
  416ff8:	add	x8, x8, x9
  416ffc:	mov	x9, xzr
  417000:	str	xzr, [x8, #56]
  417004:	ldur	x8, [x29, #-16]
  417008:	ldr	x8, [x8, #296]
  41700c:	ldr	x11, [sp, #56]
  417010:	mul	x11, x10, x11
  417014:	add	x8, x8, x11
  417018:	str	x9, [x8, #48]
  41701c:	ldur	x8, [x29, #-16]
  417020:	ldr	x8, [x8, #296]
  417024:	ldr	x9, [sp, #56]
  417028:	mul	x9, x10, x9
  41702c:	add	x8, x8, x9
  417030:	ldr	x9, [sp, #8]
  417034:	str	x9, [x8, #72]
  417038:	ldur	x8, [x29, #-16]
  41703c:	ldr	x11, [x8, #304]
  417040:	add	x11, x11, #0x1
  417044:	str	x11, [x8, #304]
  417048:	ldr	x8, [sp, #56]
  41704c:	stur	x8, [x29, #-8]
  417050:	ldur	x0, [x29, #-8]
  417054:	ldp	x29, x30, [sp, #112]
  417058:	add	sp, sp, #0x80
  41705c:	ret
  417060:	sub	sp, sp, #0x50
  417064:	stp	x29, x30, [sp, #64]
  417068:	add	x29, sp, #0x40
  41706c:	stur	x0, [x29, #-8]
  417070:	stur	x1, [x29, #-16]
  417074:	stur	w2, [x29, #-20]
  417078:	str	x3, [sp, #32]
  41707c:	str	xzr, [sp, #24]
  417080:	str	xzr, [sp, #16]
  417084:	ldr	x8, [sp, #32]
  417088:	ldr	x8, [x8, #16]
  41708c:	ldur	x9, [x29, #-8]
  417090:	ldr	x9, [x9, #8]
  417094:	subs	x8, x8, x9
  417098:	ldur	x9, [x29, #-16]
  41709c:	ldr	x9, [x9, #8]
  4170a0:	cmp	x8, x9
  4170a4:	b.ge	4170f0 <wcrtomb@plt+0x14340>  // b.tcont
  4170a8:	ldr	x8, [sp, #32]
  4170ac:	ldr	x0, [x8]
  4170b0:	bl	402b40 <free@plt>
  4170b4:	ldur	x8, [x29, #-8]
  4170b8:	ldr	x8, [x8, #8]
  4170bc:	ldr	x9, [sp, #32]
  4170c0:	str	x8, [x9, #16]
  4170c4:	ldr	x8, [sp, #32]
  4170c8:	add	x1, x8, #0x10
  4170cc:	ldur	x8, [x29, #-16]
  4170d0:	ldr	x2, [x8, #8]
  4170d4:	mov	x8, xzr
  4170d8:	mov	x0, x8
  4170dc:	mov	x3, #0xffffffffffffffff    	// #-1
  4170e0:	mov	x4, #0x10                  	// #16
  4170e4:	bl	411cc8 <wcrtomb@plt+0xef18>
  4170e8:	ldr	x8, [sp, #32]
  4170ec:	str	x0, [x8]
  4170f0:	ldr	x8, [sp, #32]
  4170f4:	str	xzr, [x8, #8]
  4170f8:	ldr	x8, [sp, #24]
  4170fc:	ldur	x9, [x29, #-8]
  417100:	ldr	x9, [x9, #8]
  417104:	mov	w10, #0x1                   	// #1
  417108:	cmp	x8, x9
  41710c:	str	w10, [sp, #8]
  417110:	b.lt	41712c <wcrtomb@plt+0x1437c>  // b.tstop
  417114:	ldr	x8, [sp, #16]
  417118:	ldur	x9, [x29, #-16]
  41711c:	ldr	x9, [x9, #8]
  417120:	cmp	x8, x9
  417124:	cset	w10, lt  // lt = tstop
  417128:	str	w10, [sp, #8]
  41712c:	ldr	w8, [sp, #8]
  417130:	tbnz	w8, #0, 417138 <wcrtomb@plt+0x14388>
  417134:	b	417360 <wcrtomb@plt+0x145b0>
  417138:	ldr	x8, [sp, #16]
  41713c:	ldur	x9, [x29, #-16]
  417140:	ldr	x9, [x9, #8]
  417144:	cmp	x8, x9
  417148:	b.ge	417194 <wcrtomb@plt+0x143e4>  // b.tcont
  41714c:	ldr	x8, [sp, #24]
  417150:	ldur	x9, [x29, #-8]
  417154:	ldr	x9, [x9, #8]
  417158:	cmp	x8, x9
  41715c:	b.ge	4172b4 <wcrtomb@plt+0x14504>  // b.tcont
  417160:	ldur	x8, [x29, #-8]
  417164:	ldr	x8, [x8]
  417168:	ldr	x9, [sp, #24]
  41716c:	mov	x10, #0x10                  	// #16
  417170:	mul	x9, x10, x9
  417174:	ldr	x8, [x8, x9]
  417178:	ldur	x9, [x29, #-16]
  41717c:	ldr	x9, [x9]
  417180:	ldr	x11, [sp, #16]
  417184:	mul	x10, x10, x11
  417188:	ldr	x9, [x9, x10]
  41718c:	cmp	x8, x9
  417190:	b.gt	4172b4 <wcrtomb@plt+0x14504>
  417194:	ldr	x8, [sp, #24]
  417198:	ldur	x9, [x29, #-8]
  41719c:	ldr	x9, [x9, #8]
  4171a0:	cmp	x8, x9
  4171a4:	b.ge	417224 <wcrtomb@plt+0x14474>  // b.tcont
  4171a8:	ldr	x8, [sp, #16]
  4171ac:	ldur	x9, [x29, #-16]
  4171b0:	ldr	x9, [x9, #8]
  4171b4:	cmp	x8, x9
  4171b8:	b.ge	417224 <wcrtomb@plt+0x14474>  // b.tcont
  4171bc:	ldur	x8, [x29, #-8]
  4171c0:	ldr	x8, [x8]
  4171c4:	ldr	x9, [sp, #24]
  4171c8:	mov	x10, #0x10                  	// #16
  4171cc:	mul	x9, x10, x9
  4171d0:	ldr	x8, [x8, x9]
  4171d4:	ldur	x9, [x29, #-16]
  4171d8:	ldr	x9, [x9]
  4171dc:	ldr	x11, [sp, #16]
  4171e0:	mul	x10, x10, x11
  4171e4:	ldr	x9, [x9, x10]
  4171e8:	cmp	x8, x9
  4171ec:	b.ne	417224 <wcrtomb@plt+0x14474>  // b.any
  4171f0:	ldur	x8, [x29, #-16]
  4171f4:	ldr	x8, [x8]
  4171f8:	ldr	x9, [sp, #16]
  4171fc:	add	x10, x9, #0x1
  417200:	str	x10, [sp, #16]
  417204:	mov	x10, #0x10                  	// #16
  417208:	mul	x9, x10, x9
  41720c:	add	x8, x8, x9
  417210:	ldr	w11, [x8, #8]
  417214:	ldur	w12, [x29, #-20]
  417218:	and	w11, w11, w12
  41721c:	str	w11, [sp, #4]
  417220:	b	41722c <wcrtomb@plt+0x1447c>
  417224:	mov	w8, wzr
  417228:	str	w8, [sp, #4]
  41722c:	ldr	w8, [sp, #4]
  417230:	str	w8, [sp, #12]
  417234:	ldur	x9, [x29, #-8]
  417238:	ldr	x9, [x9]
  41723c:	ldr	x10, [sp, #24]
  417240:	mov	x11, #0x10                  	// #16
  417244:	mul	x10, x11, x10
  417248:	ldr	x9, [x9, x10]
  41724c:	ldr	x10, [sp, #32]
  417250:	ldr	x10, [x10]
  417254:	ldr	x12, [sp, #32]
  417258:	ldr	x12, [x12, #8]
  41725c:	mul	x12, x11, x12
  417260:	str	x9, [x10, x12]
  417264:	ldur	x9, [x29, #-8]
  417268:	ldr	x9, [x9]
  41726c:	ldr	x10, [sp, #24]
  417270:	add	x12, x10, #0x1
  417274:	str	x12, [sp, #24]
  417278:	mul	x10, x11, x10
  41727c:	add	x9, x9, x10
  417280:	ldr	w8, [x9, #8]
  417284:	ldr	w13, [sp, #12]
  417288:	orr	w8, w8, w13
  41728c:	ldr	x9, [sp, #32]
  417290:	ldr	x9, [x9]
  417294:	ldr	x10, [sp, #32]
  417298:	ldr	x12, [x10, #8]
  41729c:	add	x14, x12, #0x1
  4172a0:	str	x14, [x10, #8]
  4172a4:	mul	x10, x11, x12
  4172a8:	add	x9, x9, x10
  4172ac:	str	w8, [x9, #8]
  4172b0:	b	41735c <wcrtomb@plt+0x145ac>
  4172b4:	ldur	x8, [x29, #-16]
  4172b8:	ldr	x8, [x8]
  4172bc:	ldr	x9, [sp, #16]
  4172c0:	mov	x10, #0x10                  	// #16
  4172c4:	mul	x9, x10, x9
  4172c8:	add	x8, x8, x9
  4172cc:	ldr	w11, [x8, #8]
  4172d0:	ldur	w12, [x29, #-20]
  4172d4:	and	w11, w11, w12
  4172d8:	cbz	w11, 417350 <wcrtomb@plt+0x145a0>
  4172dc:	ldur	x8, [x29, #-16]
  4172e0:	ldr	x8, [x8]
  4172e4:	ldr	x9, [sp, #16]
  4172e8:	mov	x10, #0x10                  	// #16
  4172ec:	mul	x9, x10, x9
  4172f0:	ldr	x8, [x8, x9]
  4172f4:	ldr	x9, [sp, #32]
  4172f8:	ldr	x9, [x9]
  4172fc:	ldr	x11, [sp, #32]
  417300:	ldr	x11, [x11, #8]
  417304:	mul	x11, x10, x11
  417308:	str	x8, [x9, x11]
  41730c:	ldur	x8, [x29, #-16]
  417310:	ldr	x8, [x8]
  417314:	ldr	x9, [sp, #16]
  417318:	mul	x9, x10, x9
  41731c:	add	x8, x8, x9
  417320:	ldr	w12, [x8, #8]
  417324:	ldur	w13, [x29, #-20]
  417328:	and	w12, w12, w13
  41732c:	ldr	x8, [sp, #32]
  417330:	ldr	x8, [x8]
  417334:	ldr	x9, [sp, #32]
  417338:	ldr	x11, [x9, #8]
  41733c:	add	x14, x11, #0x1
  417340:	str	x14, [x9, #8]
  417344:	mul	x9, x10, x11
  417348:	add	x8, x8, x9
  41734c:	str	w12, [x8, #8]
  417350:	ldr	x8, [sp, #16]
  417354:	add	x8, x8, #0x1
  417358:	str	x8, [sp, #16]
  41735c:	b	4170f8 <wcrtomb@plt+0x14348>
  417360:	ldp	x29, x30, [sp, #64]
  417364:	add	sp, sp, #0x50
  417368:	ret
  41736c:	sub	sp, sp, #0x50
  417370:	str	x0, [sp, #64]
  417374:	str	x1, [sp, #56]
  417378:	ldr	x8, [sp, #56]
  41737c:	ldr	x8, [x8, #8]
  417380:	str	x8, [sp, #48]
  417384:	str	xzr, [sp, #40]
  417388:	ldr	x8, [sp, #48]
  41738c:	str	x8, [sp, #32]
  417390:	ldr	x8, [sp, #40]
  417394:	ldr	x9, [sp, #32]
  417398:	cmp	x8, x9
  41739c:	b.ge	4174a0 <wcrtomb@plt+0x146f0>  // b.tcont
  4173a0:	ldr	x8, [sp, #40]
  4173a4:	ldr	x9, [sp, #32]
  4173a8:	add	x8, x8, x9
  4173ac:	asr	x8, x8, #1
  4173b0:	str	x8, [sp, #24]
  4173b4:	ldr	x8, [sp, #56]
  4173b8:	ldr	x8, [x8]
  4173bc:	ldr	x9, [sp, #24]
  4173c0:	mov	x10, #0x10                  	// #16
  4173c4:	mul	x9, x10, x9
  4173c8:	ldr	x8, [x8, x9]
  4173cc:	ldr	x9, [sp, #64]
  4173d0:	cmp	x8, x9
  4173d4:	b.ge	4173e8 <wcrtomb@plt+0x14638>  // b.tcont
  4173d8:	ldr	x8, [sp, #24]
  4173dc:	add	x8, x8, #0x1
  4173e0:	str	x8, [sp, #40]
  4173e4:	b	41749c <wcrtomb@plt+0x146ec>
  4173e8:	ldr	x8, [sp, #56]
  4173ec:	ldr	x8, [x8]
  4173f0:	ldr	x9, [sp, #24]
  4173f4:	mov	x10, #0x10                  	// #16
  4173f8:	mul	x9, x10, x9
  4173fc:	ldr	x8, [x8, x9]
  417400:	ldr	x9, [sp, #64]
  417404:	cmp	x8, x9
  417408:	b.ne	417494 <wcrtomb@plt+0x146e4>  // b.any
  41740c:	ldr	x8, [sp, #56]
  417410:	ldr	x8, [x8]
  417414:	ldr	x9, [sp, #24]
  417418:	mov	x10, #0x10                  	// #16
  41741c:	mul	x9, x10, x9
  417420:	add	x8, x8, x9
  417424:	ldr	w11, [x8, #8]
  417428:	str	w11, [sp, #20]
  41742c:	ldr	x8, [sp, #24]
  417430:	str	x8, [sp, #8]
  417434:	ldr	x8, [sp, #8]
  417438:	add	x8, x8, #0x1
  41743c:	ldr	x9, [sp, #48]
  417440:	cmp	x8, x9
  417444:	b.ge	41747c <wcrtomb@plt+0x146cc>  // b.tcont
  417448:	ldr	x8, [sp, #56]
  41744c:	ldr	x8, [x8]
  417450:	ldr	x9, [sp, #8]
  417454:	ldr	x10, [sp, #56]
  417458:	ldr	x10, [x10]
  41745c:	ldr	x11, [sp, #8]
  417460:	add	x11, x11, #0x1
  417464:	ldr	q0, [x10, x11, lsl #4]
  417468:	str	q0, [x8, x9, lsl #4]
  41746c:	ldr	x8, [sp, #8]
  417470:	add	x8, x8, #0x1
  417474:	str	x8, [sp, #8]
  417478:	b	417434 <wcrtomb@plt+0x14684>
  41747c:	ldr	x8, [sp, #8]
  417480:	ldr	x9, [sp, #56]
  417484:	str	x8, [x9, #8]
  417488:	ldr	w10, [sp, #20]
  41748c:	str	w10, [sp, #76]
  417490:	b	4174a4 <wcrtomb@plt+0x146f4>
  417494:	ldr	x8, [sp, #24]
  417498:	str	x8, [sp, #32]
  41749c:	b	417390 <wcrtomb@plt+0x145e0>
  4174a0:	str	wzr, [sp, #76]
  4174a4:	ldr	w0, [sp, #76]
  4174a8:	add	sp, sp, #0x50
  4174ac:	ret
  4174b0:	sub	sp, sp, #0x40
  4174b4:	stp	x29, x30, [sp, #48]
  4174b8:	add	x29, sp, #0x30
  4174bc:	stur	x0, [x29, #-8]
  4174c0:	stur	x1, [x29, #-16]
  4174c4:	str	x2, [sp, #24]
  4174c8:	str	w3, [sp, #20]
  4174cc:	str	x4, [sp, #8]
  4174d0:	ldur	x0, [x29, #-16]
  4174d4:	ldur	x1, [x29, #-8]
  4174d8:	bl	41736c <wcrtomb@plt+0x145bc>
  4174dc:	ldr	w8, [sp, #20]
  4174e0:	and	w8, w0, w8
  4174e4:	str	w8, [sp, #4]
  4174e8:	ldr	w8, [sp, #4]
  4174ec:	cbz	w8, 417510 <wcrtomb@plt+0x14760>
  4174f0:	ldur	x0, [x29, #-8]
  4174f4:	ldr	x1, [sp, #8]
  4174f8:	bl	4164a4 <wcrtomb@plt+0x136f4>
  4174fc:	ldr	x0, [sp, #8]
  417500:	ldr	x1, [sp, #24]
  417504:	ldr	w2, [sp, #4]
  417508:	ldur	x3, [x29, #-8]
  41750c:	bl	417060 <wcrtomb@plt+0x142b0>
  417510:	ldp	x29, x30, [sp, #48]
  417514:	add	sp, sp, #0x40
  417518:	ret
  41751c:	sub	sp, sp, #0x70
  417520:	stp	x29, x30, [sp, #96]
  417524:	add	x29, sp, #0x60
  417528:	mov	w8, wzr
  41752c:	stur	x0, [x29, #-8]
  417530:	stur	x1, [x29, #-16]
  417534:	stur	x2, [x29, #-24]
  417538:	stur	x3, [x29, #-32]
  41753c:	ldur	x9, [x29, #-8]
  417540:	ldr	x9, [x9, #320]
  417544:	stur	x9, [x29, #-40]
  417548:	str	xzr, [sp, #48]
  41754c:	ldur	x9, [x29, #-8]
  417550:	ldr	x9, [x9, #336]
  417554:	ldur	x10, [x29, #-16]
  417558:	str	w8, [x9, x10, lsl #2]
  41755c:	str	xzr, [sp, #40]
  417560:	ldr	x8, [sp, #40]
  417564:	ldur	x9, [x29, #-40]
  417568:	ldur	x10, [x29, #-16]
  41756c:	mov	x11, #0x18                  	// #24
  417570:	mul	x10, x11, x10
  417574:	add	x9, x9, x10
  417578:	ldr	x9, [x9, #8]
  41757c:	cmp	x8, x9
  417580:	b.ge	41785c <wcrtomb@plt+0x14aac>  // b.tcont
  417584:	ldur	x8, [x29, #-40]
  417588:	ldur	x9, [x29, #-16]
  41758c:	mov	x10, #0x18                  	// #24
  417590:	mul	x9, x10, x9
  417594:	add	x8, x8, x9
  417598:	ldr	x8, [x8]
  41759c:	ldr	x9, [sp, #40]
  4175a0:	mov	x11, #0x10                  	// #16
  4175a4:	mul	x9, x11, x9
  4175a8:	ldr	x8, [x8, x9]
  4175ac:	str	x8, [sp, #32]
  4175b0:	ldur	x8, [x29, #-40]
  4175b4:	ldur	x9, [x29, #-16]
  4175b8:	mul	x9, x10, x9
  4175bc:	add	x8, x8, x9
  4175c0:	ldr	x8, [x8]
  4175c4:	ldr	x9, [sp, #40]
  4175c8:	mul	x9, x11, x9
  4175cc:	add	x8, x8, x9
  4175d0:	ldr	w12, [x8, #8]
  4175d4:	str	w12, [sp, #28]
  4175d8:	ldr	w12, [sp, #28]
  4175dc:	cbnz	w12, 4175e4 <wcrtomb@plt+0x14834>
  4175e0:	b	41784c <wcrtomb@plt+0x14a9c>
  4175e4:	ldur	x8, [x29, #-8]
  4175e8:	ldr	x8, [x8, #144]
  4175ec:	ldur	x9, [x29, #-40]
  4175f0:	ldur	x10, [x29, #-16]
  4175f4:	mov	x11, #0x18                  	// #24
  4175f8:	mul	x10, x11, x10
  4175fc:	add	x9, x9, x10
  417600:	ldr	x9, [x9]
  417604:	ldr	x10, [sp, #40]
  417608:	mov	x11, #0x10                  	// #16
  41760c:	mul	x10, x11, x10
  417610:	ldr	x9, [x9, x10]
  417614:	ldr	x8, [x8, x9, lsl #3]
  417618:	mov	x9, #0xffffffffffffffff    	// #-1
  41761c:	cmp	x8, x9
  417620:	b.gt	417678 <wcrtomb@plt+0x148c8>
  417624:	ldur	x8, [x29, #-40]
  417628:	ldur	x9, [x29, #-16]
  41762c:	mov	x10, #0x18                  	// #24
  417630:	mul	x9, x10, x9
  417634:	add	x8, x8, x9
  417638:	ldr	x8, [x8]
  41763c:	ldr	x9, [sp, #40]
  417640:	mov	x10, #0x10                  	// #16
  417644:	mul	x9, x10, x9
  417648:	add	x8, x8, x9
  41764c:	ldr	w11, [x8, #8]
  417650:	ldur	x8, [x29, #-8]
  417654:	ldr	x8, [x8, #336]
  417658:	ldur	x9, [x29, #-16]
  41765c:	mov	x10, #0x4                   	// #4
  417660:	mul	x9, x10, x9
  417664:	add	x8, x8, x9
  417668:	ldr	w12, [x8]
  41766c:	orr	w11, w12, w11
  417670:	str	w11, [x8]
  417674:	b	41784c <wcrtomb@plt+0x14a9c>
  417678:	ldur	x8, [x29, #-24]
  41767c:	ldr	x9, [sp, #32]
  417680:	ldrb	w10, [x8, x9]
  417684:	and	w10, w10, #0x6
  417688:	cbnz	w10, 4177f0 <wcrtomb@plt+0x14a40>
  41768c:	str	xzr, [sp, #16]
  417690:	ldr	x8, [sp, #16]
  417694:	ldr	x9, [sp, #48]
  417698:	cmp	x8, x9
  41769c:	b.ge	4177dc <wcrtomb@plt+0x14a2c>  // b.tcont
  4176a0:	ldur	x8, [x29, #-40]
  4176a4:	ldur	x9, [x29, #-16]
  4176a8:	mov	x10, #0x18                  	// #24
  4176ac:	mul	x9, x10, x9
  4176b0:	add	x8, x8, x9
  4176b4:	ldr	x8, [x8]
  4176b8:	ldr	x9, [sp, #16]
  4176bc:	mov	x11, #0x10                  	// #16
  4176c0:	mul	x9, x11, x9
  4176c4:	ldr	x8, [x8, x9]
  4176c8:	str	x8, [sp, #8]
  4176cc:	ldur	x8, [x29, #-40]
  4176d0:	ldur	x9, [x29, #-16]
  4176d4:	mul	x9, x10, x9
  4176d8:	add	x8, x8, x9
  4176dc:	ldr	x8, [x8]
  4176e0:	ldr	x9, [sp, #16]
  4176e4:	mul	x9, x11, x9
  4176e8:	add	x8, x8, x9
  4176ec:	ldr	w12, [x8, #8]
  4176f0:	ldr	w13, [sp, #28]
  4176f4:	cmp	w12, w13
  4176f8:	b.eq	417700 <wcrtomb@plt+0x14950>  // b.none
  4176fc:	b	4177cc <wcrtomb@plt+0x14a1c>
  417700:	ldur	x8, [x29, #-24]
  417704:	ldr	x9, [sp, #8]
  417708:	ldrb	w10, [x8, x9]
  41770c:	and	w10, w10, #0x6
  417710:	cbz	w10, 417718 <wcrtomb@plt+0x14968>
  417714:	b	4177cc <wcrtomb@plt+0x14a1c>
  417718:	ldur	x8, [x29, #-8]
  41771c:	ldr	x8, [x8, #144]
  417720:	ldr	x9, [sp, #32]
  417724:	ldr	x8, [x8, x9, lsl #3]
  417728:	ldur	x9, [x29, #-8]
  41772c:	ldr	x9, [x9, #144]
  417730:	ldr	x10, [sp, #8]
  417734:	ldr	x9, [x9, x10, lsl #3]
  417738:	cmp	x8, x9
  41773c:	b.eq	417744 <wcrtomb@plt+0x14994>  // b.none
  417740:	b	4177cc <wcrtomb@plt+0x14a1c>
  417744:	ldur	x8, [x29, #-24]
  417748:	ldr	x9, [sp, #32]
  41774c:	ldrb	w10, [x8, x9]
  417750:	ldur	x8, [x29, #-24]
  417754:	ldr	x9, [sp, #8]
  417758:	ldrb	w11, [x8, x9]
  41775c:	eor	w10, w10, w11
  417760:	and	w10, w10, #0x1
  417764:	cbz	w10, 41776c <wcrtomb@plt+0x149bc>
  417768:	b	4177cc <wcrtomb@plt+0x14a1c>
  41776c:	ldur	x8, [x29, #-24]
  417770:	ldr	x9, [sp, #32]
  417774:	ldrb	w10, [x8, x9]
  417778:	and	w10, w10, #0x1
  41777c:	cbz	w10, 41779c <wcrtomb@plt+0x149ec>
  417780:	ldr	x0, [sp, #32]
  417784:	ldur	x8, [x29, #-40]
  417788:	ldr	x9, [sp, #32]
  41778c:	mov	x10, #0x18                  	// #24
  417790:	mul	x9, x10, x9
  417794:	add	x1, x8, x9
  417798:	bl	41736c <wcrtomb@plt+0x145bc>
  41779c:	ldur	x8, [x29, #-40]
  4177a0:	ldr	x9, [sp, #8]
  4177a4:	mov	x10, #0x18                  	// #24
  4177a8:	mul	x9, x10, x9
  4177ac:	add	x0, x8, x9
  4177b0:	ldur	x8, [x29, #-40]
  4177b4:	ldr	x9, [sp, #32]
  4177b8:	mul	x9, x10, x9
  4177bc:	add	x1, x8, x9
  4177c0:	ldur	x2, [x29, #-32]
  4177c4:	bl	417d2c <wcrtomb@plt+0x14f7c>
  4177c8:	b	4177dc <wcrtomb@plt+0x14a2c>
  4177cc:	ldr	x8, [sp, #16]
  4177d0:	add	x8, x8, #0x1
  4177d4:	str	x8, [sp, #16]
  4177d8:	b	417690 <wcrtomb@plt+0x148e0>
  4177dc:	ldr	x8, [sp, #16]
  4177e0:	ldr	x9, [sp, #48]
  4177e4:	cmp	x8, x9
  4177e8:	b.ge	4177f0 <wcrtomb@plt+0x14a40>  // b.tcont
  4177ec:	b	41784c <wcrtomb@plt+0x14a9c>
  4177f0:	ldur	x8, [x29, #-40]
  4177f4:	ldur	x9, [x29, #-16]
  4177f8:	mov	x10, #0x18                  	// #24
  4177fc:	mul	x9, x10, x9
  417800:	add	x8, x8, x9
  417804:	ldr	x8, [x8]
  417808:	ldr	x9, [sp, #48]
  41780c:	add	x11, x9, #0x1
  417810:	str	x11, [sp, #48]
  417814:	ldur	x11, [x29, #-40]
  417818:	ldur	x12, [x29, #-16]
  41781c:	mul	x10, x10, x12
  417820:	add	x10, x11, x10
  417824:	ldr	x10, [x10]
  417828:	ldr	x11, [sp, #40]
  41782c:	ldr	q0, [x10, x11, lsl #4]
  417830:	str	q0, [x8, x9, lsl #4]
  417834:	ldur	x8, [x29, #-24]
  417838:	ldr	x9, [sp, #32]
  41783c:	add	x8, x8, x9
  417840:	ldrb	w13, [x8]
  417844:	orr	w13, w13, #0x10
  417848:	strb	w13, [x8]
  41784c:	ldr	x8, [sp, #40]
  417850:	add	x8, x8, #0x1
  417854:	str	x8, [sp, #40]
  417858:	b	417560 <wcrtomb@plt+0x147b0>
  41785c:	ldr	x8, [sp, #48]
  417860:	ldur	x9, [x29, #-40]
  417864:	ldur	x10, [x29, #-16]
  417868:	mov	x11, #0x18                  	// #24
  41786c:	mul	x10, x11, x10
  417870:	add	x9, x9, x10
  417874:	str	x8, [x9, #8]
  417878:	ldp	x29, x30, [sp, #96]
  41787c:	add	sp, sp, #0x70
  417880:	ret
  417884:	sub	sp, sp, #0x80
  417888:	stp	x29, x30, [sp, #112]
  41788c:	add	x29, sp, #0x70
  417890:	mov	x1, #0x8                   	// #8
  417894:	mov	x8, #0x1                   	// #1
  417898:	stur	x0, [x29, #-8]
  41789c:	stur	xzr, [x29, #-16]
  4178a0:	ldur	x9, [x29, #-8]
  4178a4:	ldr	x0, [x9, #152]
  4178a8:	str	x8, [sp, #16]
  4178ac:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  4178b0:	stur	x0, [x29, #-24]
  4178b4:	ldur	x8, [x29, #-16]
  4178b8:	add	x9, x8, #0x1
  4178bc:	stur	x9, [x29, #-16]
  4178c0:	ldur	x9, [x29, #-24]
  4178c4:	str	x8, [x9]
  4178c8:	ldr	x8, [sp, #16]
  4178cc:	str	x8, [sp, #48]
  4178d0:	ldr	x8, [sp, #48]
  4178d4:	ldur	x9, [x29, #-8]
  4178d8:	ldr	x9, [x9, #152]
  4178dc:	cmp	x8, x9
  4178e0:	b.ge	417904 <wcrtomb@plt+0x14b54>  // b.tcont
  4178e4:	ldur	x8, [x29, #-24]
  4178e8:	ldr	x9, [sp, #48]
  4178ec:	mov	x10, #0xffffffffffffffff    	// #-1
  4178f0:	str	x10, [x8, x9, lsl #3]
  4178f4:	ldr	x8, [sp, #48]
  4178f8:	add	x8, x8, #0x1
  4178fc:	str	x8, [sp, #48]
  417900:	b	4178d0 <wcrtomb@plt+0x14b20>
  417904:	ldur	x8, [x29, #-8]
  417908:	ldr	x0, [x8, #176]
  41790c:	mov	x1, #0x8                   	// #8
  417910:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  417914:	stur	x0, [x29, #-32]
  417918:	ldur	x8, [x29, #-8]
  41791c:	ldr	x0, [x8, #176]
  417920:	mov	x1, #0x18                  	// #24
  417924:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  417928:	stur	x0, [x29, #-40]
  41792c:	ldur	x8, [x29, #-8]
  417930:	ldr	x0, [x8, #176]
  417934:	mov	x1, #0x4                   	// #4
  417938:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  41793c:	stur	x0, [x29, #-48]
  417940:	ldur	x8, [x29, #-8]
  417944:	ldrb	w9, [x8, #1048]
  417948:	tbnz	w9, #0, 417950 <wcrtomb@plt+0x14ba0>
  41794c:	b	417968 <wcrtomb@plt+0x14bb8>
  417950:	ldur	x8, [x29, #-8]
  417954:	ldr	x0, [x8, #176]
  417958:	mov	x1, #0x1                   	// #1
  41795c:	bl	41d674 <wcrtomb@plt+0x1a8c4>
  417960:	str	x0, [sp, #56]
  417964:	b	417970 <wcrtomb@plt+0x14bc0>
  417968:	mov	x8, xzr
  41796c:	str	x8, [sp, #56]
  417970:	str	xzr, [sp, #40]
  417974:	ldr	x8, [sp, #40]
  417978:	ldur	x9, [x29, #-8]
  41797c:	ldr	x9, [x9, #152]
  417980:	cmp	x8, x9
  417984:	b.ge	417c24 <wcrtomb@plt+0x14e74>  // b.tcont
  417988:	ldur	x8, [x29, #-24]
  41798c:	ldr	x9, [sp, #40]
  417990:	ldr	x8, [x8, x9, lsl #3]
  417994:	mov	x9, #0xffffffffffffffff    	// #-1
  417998:	cmp	x8, x9
  41799c:	b.ne	417a00 <wcrtomb@plt+0x14c50>  // b.any
  4179a0:	ldur	x8, [x29, #-8]
  4179a4:	ldr	x8, [x8, #320]
  4179a8:	ldr	x9, [sp, #40]
  4179ac:	mov	x10, #0x18                  	// #24
  4179b0:	mul	x9, x10, x9
  4179b4:	add	x8, x8, x9
  4179b8:	ldr	x0, [x8]
  4179bc:	str	x10, [sp, #8]
  4179c0:	bl	402b40 <free@plt>
  4179c4:	ldur	x8, [x29, #-8]
  4179c8:	ldr	x8, [x8, #320]
  4179cc:	ldr	x9, [sp, #40]
  4179d0:	ldr	x10, [sp, #8]
  4179d4:	mul	x9, x10, x9
  4179d8:	add	x8, x8, x9
  4179dc:	mov	x9, xzr
  4179e0:	str	x9, [x8]
  4179e4:	ldur	x8, [x29, #-8]
  4179e8:	ldr	x8, [x8, #320]
  4179ec:	ldr	x9, [sp, #40]
  4179f0:	mul	x9, x10, x9
  4179f4:	add	x8, x8, x9
  4179f8:	str	xzr, [x8, #8]
  4179fc:	b	417c14 <wcrtomb@plt+0x14e64>
  417a00:	ldur	x8, [x29, #-8]
  417a04:	ldr	x8, [x8, #144]
  417a08:	ldr	x9, [sp, #40]
  417a0c:	ldr	x8, [x8, x9, lsl #3]
  417a10:	ldur	x9, [x29, #-32]
  417a14:	ldur	x10, [x29, #-24]
  417a18:	ldr	x11, [sp, #40]
  417a1c:	ldr	x10, [x10, x11, lsl #3]
  417a20:	str	x8, [x9, x10, lsl #3]
  417a24:	ldur	x8, [x29, #-40]
  417a28:	ldur	x9, [x29, #-24]
  417a2c:	ldr	x10, [sp, #40]
  417a30:	ldr	x9, [x9, x10, lsl #3]
  417a34:	mov	x10, #0x18                  	// #24
  417a38:	mul	x9, x10, x9
  417a3c:	add	x8, x8, x9
  417a40:	ldur	x9, [x29, #-8]
  417a44:	ldr	x9, [x9, #320]
  417a48:	ldr	x11, [sp, #40]
  417a4c:	mul	x10, x10, x11
  417a50:	add	x9, x9, x10
  417a54:	ldr	q0, [x9]
  417a58:	str	q0, [x8]
  417a5c:	ldr	x9, [x9, #16]
  417a60:	str	x9, [x8, #16]
  417a64:	ldur	x8, [x29, #-8]
  417a68:	ldr	x8, [x8, #336]
  417a6c:	ldr	x9, [sp, #40]
  417a70:	ldr	w12, [x8, x9, lsl #2]
  417a74:	ldur	x8, [x29, #-48]
  417a78:	ldur	x9, [x29, #-24]
  417a7c:	ldr	x10, [sp, #40]
  417a80:	ldr	x9, [x9, x10, lsl #3]
  417a84:	str	w12, [x8, x9, lsl #2]
  417a88:	ldr	x8, [sp, #56]
  417a8c:	cbz	x8, 417abc <wcrtomb@plt+0x14d0c>
  417a90:	ldur	x8, [x29, #-8]
  417a94:	ldr	x8, [x8, #280]
  417a98:	ldr	x9, [sp, #40]
  417a9c:	add	x8, x8, x9
  417aa0:	ldrb	w10, [x8]
  417aa4:	ldr	x8, [sp, #56]
  417aa8:	ldur	x9, [x29, #-24]
  417aac:	ldr	x11, [sp, #40]
  417ab0:	ldr	x9, [x9, x11, lsl #3]
  417ab4:	add	x8, x8, x9
  417ab8:	strb	w10, [x8]
  417abc:	str	xzr, [sp, #32]
  417ac0:	ldr	x8, [sp, #32]
  417ac4:	ldur	x9, [x29, #-8]
  417ac8:	ldr	x9, [x9, #320]
  417acc:	ldr	x10, [sp, #40]
  417ad0:	mov	x11, #0x18                  	// #24
  417ad4:	mul	x10, x11, x10
  417ad8:	add	x9, x9, x10
  417adc:	ldr	x9, [x9, #8]
  417ae0:	cmp	x8, x9
  417ae4:	b.ge	417bd0 <wcrtomb@plt+0x14e20>  // b.tcont
  417ae8:	ldur	x8, [x29, #-24]
  417aec:	ldur	x9, [x29, #-8]
  417af0:	ldr	x9, [x9, #320]
  417af4:	ldr	x10, [sp, #40]
  417af8:	mov	x11, #0x18                  	// #24
  417afc:	mul	x10, x11, x10
  417b00:	add	x9, x9, x10
  417b04:	ldr	x9, [x9]
  417b08:	ldr	x10, [sp, #32]
  417b0c:	mov	x11, #0x10                  	// #16
  417b10:	mul	x10, x11, x10
  417b14:	ldr	x9, [x9, x10]
  417b18:	ldr	x8, [x8, x9, lsl #3]
  417b1c:	mov	x9, #0xffffffffffffffff    	// #-1
  417b20:	cmp	x8, x9
  417b24:	b.ne	417b68 <wcrtomb@plt+0x14db8>  // b.any
  417b28:	ldur	x8, [x29, #-16]
  417b2c:	add	x9, x8, #0x1
  417b30:	stur	x9, [x29, #-16]
  417b34:	ldur	x9, [x29, #-24]
  417b38:	ldur	x10, [x29, #-8]
  417b3c:	ldr	x10, [x10, #320]
  417b40:	ldr	x11, [sp, #40]
  417b44:	mov	x12, #0x18                  	// #24
  417b48:	mul	x11, x12, x11
  417b4c:	add	x10, x10, x11
  417b50:	ldr	x10, [x10]
  417b54:	ldr	x11, [sp, #32]
  417b58:	mov	x12, #0x10                  	// #16
  417b5c:	mul	x11, x12, x11
  417b60:	ldr	x10, [x10, x11]
  417b64:	str	x8, [x9, x10, lsl #3]
  417b68:	ldur	x8, [x29, #-24]
  417b6c:	ldur	x9, [x29, #-8]
  417b70:	ldr	x9, [x9, #320]
  417b74:	ldr	x10, [sp, #40]
  417b78:	mov	x11, #0x18                  	// #24
  417b7c:	mul	x10, x11, x10
  417b80:	add	x9, x9, x10
  417b84:	ldr	x9, [x9]
  417b88:	ldr	x10, [sp, #32]
  417b8c:	mov	x12, #0x10                  	// #16
  417b90:	mul	x10, x12, x10
  417b94:	ldr	x9, [x9, x10]
  417b98:	ldr	x8, [x8, x9, lsl #3]
  417b9c:	ldur	x9, [x29, #-8]
  417ba0:	ldr	x9, [x9, #320]
  417ba4:	ldr	x10, [sp, #40]
  417ba8:	mul	x10, x11, x10
  417bac:	add	x9, x9, x10
  417bb0:	ldr	x9, [x9]
  417bb4:	ldr	x10, [sp, #32]
  417bb8:	mul	x10, x12, x10
  417bbc:	str	x8, [x9, x10]
  417bc0:	ldr	x8, [sp, #32]
  417bc4:	add	x8, x8, #0x1
  417bc8:	str	x8, [sp, #32]
  417bcc:	b	417ac0 <wcrtomb@plt+0x14d10>
  417bd0:	ldur	x8, [x29, #-8]
  417bd4:	ldr	x8, [x8, #320]
  417bd8:	ldr	x9, [sp, #40]
  417bdc:	mov	x10, #0x18                  	// #24
  417be0:	mul	x9, x10, x9
  417be4:	add	x8, x8, x9
  417be8:	ldr	x0, [x8]
  417bec:	ldur	x8, [x29, #-8]
  417bf0:	ldr	x8, [x8, #320]
  417bf4:	ldr	x9, [sp, #40]
  417bf8:	mul	x9, x10, x9
  417bfc:	add	x8, x8, x9
  417c00:	ldr	x1, [x8, #8]
  417c04:	mov	x2, #0x10                  	// #16
  417c08:	adrp	x3, 417000 <wcrtomb@plt+0x14250>
  417c0c:	add	x3, x3, #0xf58
  417c10:	bl	4027b0 <qsort@plt>
  417c14:	ldr	x8, [sp, #40]
  417c18:	add	x8, x8, #0x1
  417c1c:	str	x8, [sp, #40]
  417c20:	b	417974 <wcrtomb@plt+0x14bc4>
  417c24:	str	xzr, [sp, #24]
  417c28:	ldr	x8, [sp, #24]
  417c2c:	ldur	x9, [x29, #-16]
  417c30:	cmp	x8, x9
  417c34:	b.ge	417ce4 <wcrtomb@plt+0x14f34>  // b.tcont
  417c38:	ldur	x8, [x29, #-32]
  417c3c:	ldr	x9, [sp, #24]
  417c40:	ldr	x8, [x8, x9, lsl #3]
  417c44:	ldur	x9, [x29, #-8]
  417c48:	ldr	x9, [x9, #144]
  417c4c:	ldr	x10, [sp, #24]
  417c50:	str	x8, [x9, x10, lsl #3]
  417c54:	ldur	x8, [x29, #-8]
  417c58:	ldr	x8, [x8, #320]
  417c5c:	ldr	x9, [sp, #24]
  417c60:	mov	x10, #0x18                  	// #24
  417c64:	mul	x9, x10, x9
  417c68:	add	x8, x8, x9
  417c6c:	ldur	x9, [x29, #-40]
  417c70:	ldr	x11, [sp, #24]
  417c74:	mul	x10, x10, x11
  417c78:	add	x9, x9, x10
  417c7c:	ldr	q0, [x9]
  417c80:	str	q0, [x8]
  417c84:	ldr	x9, [x9, #16]
  417c88:	str	x9, [x8, #16]
  417c8c:	ldur	x8, [x29, #-48]
  417c90:	ldr	x9, [sp, #24]
  417c94:	ldr	w12, [x8, x9, lsl #2]
  417c98:	ldur	x8, [x29, #-8]
  417c9c:	ldr	x8, [x8, #336]
  417ca0:	ldr	x9, [sp, #24]
  417ca4:	str	w12, [x8, x9, lsl #2]
  417ca8:	ldr	x8, [sp, #56]
  417cac:	cbz	x8, 417cd4 <wcrtomb@plt+0x14f24>
  417cb0:	ldr	x8, [sp, #56]
  417cb4:	ldr	x9, [sp, #24]
  417cb8:	add	x8, x8, x9
  417cbc:	ldrb	w10, [x8]
  417cc0:	ldur	x8, [x29, #-8]
  417cc4:	ldr	x8, [x8, #280]
  417cc8:	ldr	x9, [sp, #24]
  417ccc:	add	x8, x8, x9
  417cd0:	strb	w10, [x8]
  417cd4:	ldr	x8, [sp, #24]
  417cd8:	add	x8, x8, #0x1
  417cdc:	str	x8, [sp, #24]
  417ce0:	b	417c28 <wcrtomb@plt+0x14e78>
  417ce4:	ldur	x8, [x29, #-16]
  417ce8:	ldur	x9, [x29, #-8]
  417cec:	str	x8, [x9, #176]
  417cf0:	ldur	x9, [x29, #-8]
  417cf4:	str	x8, [x9, #152]
  417cf8:	ldur	x0, [x29, #-32]
  417cfc:	bl	402b40 <free@plt>
  417d00:	ldur	x0, [x29, #-40]
  417d04:	bl	402b40 <free@plt>
  417d08:	ldur	x0, [x29, #-48]
  417d0c:	bl	402b40 <free@plt>
  417d10:	ldr	x0, [sp, #56]
  417d14:	bl	402b40 <free@plt>
  417d18:	ldur	x0, [x29, #-24]
  417d1c:	bl	402b40 <free@plt>
  417d20:	ldp	x29, x30, [sp, #112]
  417d24:	add	sp, sp, #0x80
  417d28:	ret
  417d2c:	sub	sp, sp, #0x30
  417d30:	stp	x29, x30, [sp, #32]
  417d34:	add	x29, sp, #0x20
  417d38:	stur	x0, [x29, #-8]
  417d3c:	str	x1, [sp, #16]
  417d40:	str	x2, [sp, #8]
  417d44:	ldr	x8, [sp, #16]
  417d48:	ldr	x8, [x8, #8]
  417d4c:	cmp	x8, #0x4
  417d50:	b.ge	417da8 <wcrtomb@plt+0x14ff8>  // b.tcont
  417d54:	str	xzr, [sp]
  417d58:	ldr	x8, [sp]
  417d5c:	ldr	x9, [sp, #16]
  417d60:	ldr	x9, [x9, #8]
  417d64:	cmp	x8, x9
  417d68:	b.ge	417da4 <wcrtomb@plt+0x14ff4>  // b.tcont
  417d6c:	ldr	x8, [sp, #16]
  417d70:	ldr	x8, [x8]
  417d74:	ldr	x9, [sp]
  417d78:	mov	x10, #0x10                  	// #16
  417d7c:	mul	x9, x10, x9
  417d80:	add	x8, x8, x9
  417d84:	ldur	x2, [x29, #-8]
  417d88:	ldr	x0, [x8]
  417d8c:	ldr	x1, [x8, #8]
  417d90:	bl	417dd0 <wcrtomb@plt+0x15020>
  417d94:	ldr	x8, [sp]
  417d98:	add	x8, x8, #0x1
  417d9c:	str	x8, [sp]
  417da0:	b	417d58 <wcrtomb@plt+0x14fa8>
  417da4:	b	417dc4 <wcrtomb@plt+0x15014>
  417da8:	ldr	x0, [sp, #16]
  417dac:	ldur	x1, [x29, #-8]
  417db0:	ldr	x2, [sp, #8]
  417db4:	bl	416468 <wcrtomb@plt+0x136b8>
  417db8:	ldr	x0, [sp, #8]
  417dbc:	ldur	x1, [x29, #-8]
  417dc0:	bl	4164a4 <wcrtomb@plt+0x136f4>
  417dc4:	ldp	x29, x30, [sp, #32]
  417dc8:	add	sp, sp, #0x30
  417dcc:	ret
  417dd0:	sub	sp, sp, #0x50
  417dd4:	stp	x29, x30, [sp, #64]
  417dd8:	add	x29, sp, #0x40
  417ddc:	stur	x0, [x29, #-16]
  417de0:	stur	x1, [x29, #-8]
  417de4:	stur	x2, [x29, #-24]
  417de8:	ldur	x8, [x29, #-24]
  417dec:	ldr	x8, [x8, #8]
  417df0:	str	x8, [sp, #32]
  417df4:	str	xzr, [sp, #24]
  417df8:	ldr	x8, [sp, #32]
  417dfc:	str	x8, [sp, #16]
  417e00:	ldr	x8, [sp, #24]
  417e04:	ldr	x9, [sp, #16]
  417e08:	cmp	x8, x9
  417e0c:	b.ge	417eb4 <wcrtomb@plt+0x15104>  // b.tcont
  417e10:	ldr	x8, [sp, #24]
  417e14:	ldr	x9, [sp, #16]
  417e18:	add	x8, x8, x9
  417e1c:	asr	x8, x8, #1
  417e20:	str	x8, [sp, #8]
  417e24:	ldur	x8, [x29, #-24]
  417e28:	ldr	x8, [x8]
  417e2c:	ldr	x9, [sp, #8]
  417e30:	mov	x10, #0x10                  	// #16
  417e34:	mul	x9, x10, x9
  417e38:	ldr	x8, [x8, x9]
  417e3c:	ldur	x9, [x29, #-16]
  417e40:	cmp	x8, x9
  417e44:	b.ge	417e58 <wcrtomb@plt+0x150a8>  // b.tcont
  417e48:	ldr	x8, [sp, #8]
  417e4c:	add	x8, x8, #0x1
  417e50:	str	x8, [sp, #24]
  417e54:	b	417eb0 <wcrtomb@plt+0x15100>
  417e58:	ldur	x8, [x29, #-24]
  417e5c:	ldr	x8, [x8]
  417e60:	ldr	x9, [sp, #8]
  417e64:	mov	x10, #0x10                  	// #16
  417e68:	mul	x9, x10, x9
  417e6c:	ldr	x8, [x8, x9]
  417e70:	ldur	x9, [x29, #-16]
  417e74:	cmp	x8, x9
  417e78:	b.ne	417ea8 <wcrtomb@plt+0x150f8>  // b.any
  417e7c:	ldur	w8, [x29, #-8]
  417e80:	ldur	x9, [x29, #-24]
  417e84:	ldr	x9, [x9]
  417e88:	ldr	x10, [sp, #8]
  417e8c:	mov	x11, #0x10                  	// #16
  417e90:	mul	x10, x11, x10
  417e94:	add	x9, x9, x10
  417e98:	ldr	w12, [x9, #8]
  417e9c:	orr	w8, w12, w8
  417ea0:	str	w8, [x9, #8]
  417ea4:	b	417f4c <wcrtomb@plt+0x1519c>
  417ea8:	ldr	x8, [sp, #8]
  417eac:	str	x8, [sp, #16]
  417eb0:	b	417e00 <wcrtomb@plt+0x15050>
  417eb4:	ldur	x8, [x29, #-24]
  417eb8:	ldr	x0, [x8]
  417ebc:	ldr	x1, [sp, #32]
  417ec0:	ldur	x8, [x29, #-24]
  417ec4:	add	x2, x8, #0x10
  417ec8:	mov	x3, #0xffffffffffffffff    	// #-1
  417ecc:	mov	x4, #0x10                  	// #16
  417ed0:	bl	4158dc <wcrtomb@plt+0x12b2c>
  417ed4:	ldur	x8, [x29, #-24]
  417ed8:	str	x0, [x8]
  417edc:	ldr	x8, [sp, #32]
  417ee0:	str	x8, [sp]
  417ee4:	ldr	x8, [sp]
  417ee8:	ldr	x9, [sp, #24]
  417eec:	cmp	x8, x9
  417ef0:	b.le	417f28 <wcrtomb@plt+0x15178>
  417ef4:	ldur	x8, [x29, #-24]
  417ef8:	ldr	x8, [x8]
  417efc:	ldr	x9, [sp]
  417f00:	ldur	x10, [x29, #-24]
  417f04:	ldr	x10, [x10]
  417f08:	ldr	x11, [sp]
  417f0c:	subs	x11, x11, #0x1
  417f10:	ldr	q0, [x10, x11, lsl #4]
  417f14:	str	q0, [x8, x9, lsl #4]
  417f18:	ldr	x8, [sp]
  417f1c:	subs	x8, x8, #0x1
  417f20:	str	x8, [sp]
  417f24:	b	417ee4 <wcrtomb@plt+0x15134>
  417f28:	ldur	x8, [x29, #-24]
  417f2c:	ldr	x8, [x8]
  417f30:	ldr	x9, [sp, #24]
  417f34:	ldur	q0, [x29, #-16]
  417f38:	str	q0, [x8, x9, lsl #4]
  417f3c:	ldur	x8, [x29, #-24]
  417f40:	ldr	x9, [x8, #8]
  417f44:	add	x9, x9, #0x1
  417f48:	str	x9, [x8, #8]
  417f4c:	ldp	x29, x30, [sp, #64]
  417f50:	add	sp, sp, #0x50
  417f54:	ret
  417f58:	sub	sp, sp, #0x30
  417f5c:	str	x0, [sp, #40]
  417f60:	str	x1, [sp, #32]
  417f64:	ldr	x8, [sp, #40]
  417f68:	str	x8, [sp, #24]
  417f6c:	ldr	x8, [sp, #32]
  417f70:	str	x8, [sp, #16]
  417f74:	ldr	x8, [sp, #24]
  417f78:	ldr	x8, [x8]
  417f7c:	ldr	x9, [sp, #16]
  417f80:	ldr	x9, [x9]
  417f84:	cmp	x8, x9
  417f88:	b.ge	417f98 <wcrtomb@plt+0x151e8>  // b.tcont
  417f8c:	mov	w8, #0xffffffff            	// #-1
  417f90:	str	w8, [sp, #12]
  417f94:	b	417fb8 <wcrtomb@plt+0x15208>
  417f98:	ldr	x8, [sp, #24]
  417f9c:	ldr	x8, [x8]
  417fa0:	ldr	x9, [sp, #16]
  417fa4:	ldr	x9, [x9]
  417fa8:	cmp	x8, x9
  417fac:	cset	w10, gt
  417fb0:	and	w10, w10, #0x1
  417fb4:	str	w10, [sp, #12]
  417fb8:	ldr	w8, [sp, #12]
  417fbc:	mov	w0, w8
  417fc0:	add	sp, sp, #0x30
  417fc4:	ret
  417fc8:	sub	sp, sp, #0x30
  417fcc:	stp	x29, x30, [sp, #32]
  417fd0:	add	x29, sp, #0x20
  417fd4:	stur	w0, [x29, #-4]
  417fd8:	stur	w1, [x29, #-8]
  417fdc:	stur	w2, [x29, #-12]
  417fe0:	ldur	w8, [x29, #-12]
  417fe4:	and	w8, w8, #0x1
  417fe8:	cbz	w8, 417ffc <wcrtomb@plt+0x1524c>
  417fec:	ldur	w0, [x29, #-4]
  417ff0:	bl	418098 <wcrtomb@plt+0x152e8>
  417ff4:	str	w0, [sp, #16]
  417ff8:	b	418004 <wcrtomb@plt+0x15254>
  417ffc:	mov	w8, wzr
  418000:	str	w8, [sp, #16]
  418004:	ldr	w8, [sp, #16]
  418008:	ldur	w9, [x29, #-12]
  41800c:	and	w9, w9, #0x2
  418010:	str	w8, [sp, #12]
  418014:	cbz	w9, 418028 <wcrtomb@plt+0x15278>
  418018:	ldur	w0, [x29, #-4]
  41801c:	bl	4180b0 <wcrtomb@plt+0x15300>
  418020:	str	w0, [sp, #8]
  418024:	b	418030 <wcrtomb@plt+0x15280>
  418028:	mov	w8, wzr
  41802c:	str	w8, [sp, #8]
  418030:	ldr	w8, [sp, #8]
  418034:	ldr	w9, [sp, #12]
  418038:	orr	w8, w9, w8
  41803c:	ldur	w10, [x29, #-12]
  418040:	and	w10, w10, #0x4
  418044:	str	w8, [sp, #4]
  418048:	cbz	w10, 41805c <wcrtomb@plt+0x152ac>
  41804c:	ldur	w0, [x29, #-4]
  418050:	bl	4180cc <wcrtomb@plt+0x1531c>
  418054:	str	w0, [sp]
  418058:	b	418064 <wcrtomb@plt+0x152b4>
  41805c:	mov	w8, wzr
  418060:	str	w8, [sp]
  418064:	ldr	w8, [sp]
  418068:	ldr	w9, [sp, #4]
  41806c:	orr	w8, w9, w8
  418070:	ldur	w10, [x29, #-8]
  418074:	tst	w8, w10
  418078:	cset	w8, ne  // ne = any
  41807c:	mov	w10, #0x1                   	// #1
  418080:	eor	w8, w8, #0x1
  418084:	eor	w8, w8, w10
  418088:	and	w0, w8, #0x1
  41808c:	ldp	x29, x30, [sp, #32]
  418090:	add	sp, sp, #0x30
  418094:	ret
  418098:	sub	sp, sp, #0x10
  41809c:	str	w0, [sp, #12]
  4180a0:	ldr	w8, [sp, #12]
  4180a4:	and	w0, w8, #0x7
  4180a8:	add	sp, sp, #0x10
  4180ac:	ret
  4180b0:	sub	sp, sp, #0x10
  4180b4:	str	w0, [sp, #12]
  4180b8:	ldr	w8, [sp, #12]
  4180bc:	asr	w8, w8, #3
  4180c0:	and	w0, w8, #0x7
  4180c4:	add	sp, sp, #0x10
  4180c8:	ret
  4180cc:	sub	sp, sp, #0x10
  4180d0:	str	w0, [sp, #12]
  4180d4:	ldr	w8, [sp, #12]
  4180d8:	asr	w8, w8, #6
  4180dc:	and	w0, w8, #0x7
  4180e0:	add	sp, sp, #0x10
  4180e4:	ret
  4180e8:	sub	sp, sp, #0x50
  4180ec:	stp	x29, x30, [sp, #64]
  4180f0:	add	x29, sp, #0x40
  4180f4:	mov	x8, #0x8                   	// #8
  4180f8:	stur	x0, [x29, #-8]
  4180fc:	stur	x1, [x29, #-16]
  418100:	mov	x0, x8
  418104:	bl	41d908 <wcrtomb@plt+0x1ab58>
  418108:	stur	x0, [x29, #-24]
  41810c:	ldur	x8, [x29, #-8]
  418110:	str	x8, [sp, #32]
  418114:	ldr	x8, [sp, #32]
  418118:	ldrb	w9, [x8]
  41811c:	cbz	w9, 418200 <wcrtomb@plt+0x15450>
  418120:	str	xzr, [sp, #24]
  418124:	ldur	x0, [x29, #-16]
  418128:	ldr	x8, [sp, #32]
  41812c:	ldrb	w1, [x8]
  418130:	bl	402b80 <strchr@plt>
  418134:	str	x0, [sp, #16]
  418138:	ldr	x8, [sp, #16]
  41813c:	cbz	x8, 4181d4 <wcrtomb@plt+0x15424>
  418140:	mov	x8, #0x1                   	// #1
  418144:	str	x8, [sp, #8]
  418148:	ldr	x8, [sp, #32]
  41814c:	ldr	x9, [sp, #8]
  418150:	ldrb	w10, [x8, x9]
  418154:	mov	w11, #0x0                   	// #0
  418158:	str	w11, [sp, #4]
  41815c:	cbz	w10, 418184 <wcrtomb@plt+0x153d4>
  418160:	ldr	x8, [sp, #32]
  418164:	ldr	x9, [sp, #8]
  418168:	ldrb	w10, [x8, x9]
  41816c:	ldr	x8, [sp, #16]
  418170:	ldr	x9, [sp, #8]
  418174:	ldrb	w11, [x8, x9]
  418178:	cmp	w10, w11
  41817c:	cset	w10, eq  // eq = none
  418180:	str	w10, [sp, #4]
  418184:	ldr	w8, [sp, #4]
  418188:	tbnz	w8, #0, 418190 <wcrtomb@plt+0x153e0>
  41818c:	b	4181a0 <wcrtomb@plt+0x153f0>
  418190:	ldr	x8, [sp, #8]
  418194:	add	x8, x8, #0x1
  418198:	str	x8, [sp, #8]
  41819c:	b	418148 <wcrtomb@plt+0x15398>
  4181a0:	ldr	x8, [sp, #8]
  4181a4:	ldr	x9, [sp, #24]
  4181a8:	cmp	x8, x9
  4181ac:	b.le	4181b8 <wcrtomb@plt+0x15408>
  4181b0:	ldr	x8, [sp, #8]
  4181b4:	str	x8, [sp, #24]
  4181b8:	ldr	x8, [sp, #16]
  4181bc:	add	x0, x8, #0x1
  4181c0:	ldr	x8, [sp, #32]
  4181c4:	ldrb	w1, [x8]
  4181c8:	bl	402b80 <strchr@plt>
  4181cc:	str	x0, [sp, #16]
  4181d0:	b	418138 <wcrtomb@plt+0x15388>
  4181d4:	ldr	x8, [sp, #24]
  4181d8:	cbz	x8, 4181f0 <wcrtomb@plt+0x15440>
  4181dc:	ldur	x0, [x29, #-24]
  4181e0:	ldr	x1, [sp, #32]
  4181e4:	ldr	x2, [sp, #24]
  4181e8:	bl	411294 <wcrtomb@plt+0xe4e4>
  4181ec:	stur	x0, [x29, #-24]
  4181f0:	ldr	x8, [sp, #32]
  4181f4:	add	x8, x8, #0x1
  4181f8:	str	x8, [sp, #32]
  4181fc:	b	418114 <wcrtomb@plt+0x15364>
  418200:	ldur	x0, [x29, #-24]
  418204:	ldp	x29, x30, [sp, #64]
  418208:	add	sp, sp, #0x50
  41820c:	ret
  418210:	sub	sp, sp, #0xe0
  418214:	stp	x29, x30, [sp, #208]
  418218:	add	x29, sp, #0xd0
  41821c:	mov	x8, #0x400                 	// #1024
  418220:	mov	w9, #0x1                   	// #1
  418224:	stur	x0, [x29, #-8]
  418228:	stur	x1, [x29, #-16]
  41822c:	stur	x2, [x29, #-24]
  418230:	and	w10, w3, w9
  418234:	sturb	w10, [x29, #-25]
  418238:	stur	x4, [x29, #-40]
  41823c:	and	w9, w5, w9
  418240:	sturb	w9, [x29, #-41]
  418244:	ldur	x11, [x29, #-8]
  418248:	ldr	x11, [x11, #304]
  41824c:	cmp	x8, x11
  418250:	b.gt	41846c <wcrtomb@plt+0x156bc>
  418254:	ldur	x8, [x29, #-8]
  418258:	ldrsw	x8, [x8, #364]
  41825c:	stur	x8, [x29, #-56]
  418260:	ldur	x8, [x29, #-56]
  418264:	ldur	x9, [x29, #-8]
  418268:	ldr	x9, [x9, #304]
  41826c:	cmp	x8, x9
  418270:	b.ge	4182c8 <wcrtomb@plt+0x15518>  // b.tcont
  418274:	ldur	x8, [x29, #-8]
  418278:	ldr	x8, [x8, #296]
  41827c:	ldur	x9, [x29, #-56]
  418280:	mov	x10, #0x50                  	// #80
  418284:	mul	x9, x10, x9
  418288:	add	x8, x8, x9
  41828c:	ldr	x0, [x8, #8]
  418290:	str	x10, [sp, #48]
  418294:	bl	402b40 <free@plt>
  418298:	ldur	x8, [x29, #-8]
  41829c:	ldr	x8, [x8, #296]
  4182a0:	ldur	x9, [x29, #-56]
  4182a4:	ldr	x10, [sp, #48]
  4182a8:	mul	x9, x10, x9
  4182ac:	add	x8, x8, x9
  4182b0:	ldr	x0, [x8, #48]
  4182b4:	bl	402b40 <free@plt>
  4182b8:	ldur	x8, [x29, #-56]
  4182bc:	add	x8, x8, #0x1
  4182c0:	stur	x8, [x29, #-56]
  4182c4:	b	418260 <wcrtomb@plt+0x154b0>
  4182c8:	ldur	x8, [x29, #-8]
  4182cc:	ldrsw	x8, [x8, #364]
  4182d0:	ldur	x9, [x29, #-8]
  4182d4:	str	x8, [x9, #304]
  4182d8:	ldur	x8, [x29, #-8]
  4182dc:	ldr	x8, [x8, #368]
  4182e0:	cbz	x8, 418390 <wcrtomb@plt+0x155e0>
  4182e4:	stur	xzr, [x29, #-64]
  4182e8:	ldur	x8, [x29, #-64]
  4182ec:	ldur	x9, [x29, #-8]
  4182f0:	ldr	x9, [x9, #352]
  4182f4:	cmp	x8, x9
  4182f8:	b.ge	418388 <wcrtomb@plt+0x155d8>  // b.tcont
  4182fc:	ldur	x8, [x29, #-8]
  418300:	ldr	x8, [x8, #368]
  418304:	ldur	x9, [x29, #-64]
  418308:	mov	x10, #0x8                   	// #8
  41830c:	mul	x9, x10, x9
  418310:	add	x8, x8, x9
  418314:	ldr	x0, [x8]
  418318:	str	x10, [sp, #40]
  41831c:	bl	402b40 <free@plt>
  418320:	ldur	x8, [x29, #-8]
  418324:	ldr	x8, [x8, #376]
  418328:	ldur	x9, [x29, #-64]
  41832c:	ldr	x10, [sp, #40]
  418330:	mul	x9, x10, x9
  418334:	add	x8, x8, x9
  418338:	ldr	x0, [x8]
  41833c:	bl	402b40 <free@plt>
  418340:	ldur	x8, [x29, #-8]
  418344:	ldr	x8, [x8, #376]
  418348:	ldur	x9, [x29, #-64]
  41834c:	ldr	x10, [sp, #40]
  418350:	mul	x9, x10, x9
  418354:	add	x8, x8, x9
  418358:	mov	x9, xzr
  41835c:	str	x9, [x8]
  418360:	ldur	x8, [x29, #-8]
  418364:	ldr	x8, [x8, #368]
  418368:	ldur	x11, [x29, #-64]
  41836c:	mul	x11, x10, x11
  418370:	add	x8, x8, x11
  418374:	str	x9, [x8]
  418378:	ldur	x8, [x29, #-64]
  41837c:	add	x8, x8, #0x1
  418380:	stur	x8, [x29, #-64]
  418384:	b	4182e8 <wcrtomb@plt+0x15538>
  418388:	ldur	x8, [x29, #-8]
  41838c:	str	wzr, [x8, #360]
  418390:	ldur	x8, [x29, #-8]
  418394:	ldrb	w9, [x8, #1048]
  418398:	tbnz	w9, #0, 4183a0 <wcrtomb@plt+0x155f0>
  41839c:	b	41846c <wcrtomb@plt+0x156bc>
  4183a0:	ldur	x8, [x29, #-8]
  4183a4:	ldr	x8, [x8, #432]
  4183a8:	cbz	x8, 41846c <wcrtomb@plt+0x156bc>
  4183ac:	mov	x8, #0xffffffffffffffff    	// #-1
  4183b0:	stur	x8, [x29, #-72]
  4183b4:	ldur	x8, [x29, #-72]
  4183b8:	ldur	x9, [x29, #-8]
  4183bc:	ldr	x9, [x9, #352]
  4183c0:	cmp	x8, x9
  4183c4:	b.ge	41841c <wcrtomb@plt+0x1566c>  // b.tcont
  4183c8:	ldur	x8, [x29, #-8]
  4183cc:	ldr	x8, [x8, #432]
  4183d0:	ldur	x9, [x29, #-72]
  4183d4:	mov	x10, #0x8                   	// #8
  4183d8:	mul	x9, x10, x9
  4183dc:	add	x8, x8, x9
  4183e0:	ldr	x0, [x8]
  4183e4:	str	x10, [sp, #32]
  4183e8:	bl	402b40 <free@plt>
  4183ec:	ldur	x8, [x29, #-8]
  4183f0:	ldr	x8, [x8, #432]
  4183f4:	ldur	x9, [x29, #-72]
  4183f8:	ldr	x10, [sp, #32]
  4183fc:	mul	x9, x10, x9
  418400:	add	x8, x8, x9
  418404:	mov	x9, xzr
  418408:	str	x9, [x8]
  41840c:	ldur	x8, [x29, #-72]
  418410:	add	x8, x8, #0x1
  418414:	stur	x8, [x29, #-72]
  418418:	b	4183b4 <wcrtomb@plt+0x15604>
  41841c:	stur	xzr, [x29, #-80]
  418420:	ldur	x8, [x29, #-80]
  418424:	ldur	x9, [x29, #-8]
  418428:	ldrsw	x9, [x9, #364]
  41842c:	cmp	x8, x9
  418430:	b.ge	418464 <wcrtomb@plt+0x156b4>  // b.tcont
  418434:	ldur	x8, [x29, #-8]
  418438:	ldr	x8, [x8, #296]
  41843c:	ldur	x9, [x29, #-80]
  418440:	mov	x10, #0x50                  	// #80
  418444:	mul	x9, x10, x9
  418448:	add	x8, x8, x9
  41844c:	mov	x9, #0xffffffffffffffff    	// #-1
  418450:	str	x9, [x8, #72]
  418454:	ldur	x8, [x29, #-80]
  418458:	add	x8, x8, #0x1
  41845c:	stur	x8, [x29, #-80]
  418460:	b	418420 <wcrtomb@plt+0x15670>
  418464:	ldur	x8, [x29, #-8]
  418468:	str	xzr, [x8, #440]
  41846c:	ldur	x8, [x29, #-8]
  418470:	ldr	x8, [x8, #352]
  418474:	cbnz	x8, 418480 <wcrtomb@plt+0x156d0>
  418478:	ldur	x0, [x29, #-8]
  41847c:	bl	418a9c <wcrtomb@plt+0x15cec>
  418480:	stur	xzr, [x29, #-88]
  418484:	stur	xzr, [x29, #-96]
  418488:	ldur	x8, [x29, #-16]
  41848c:	str	x8, [sp, #104]
  418490:	ldr	x8, [sp, #104]
  418494:	str	x8, [sp, #96]
  418498:	ldur	x8, [x29, #-8]
  41849c:	ldr	x8, [x8, #368]
  4184a0:	str	x8, [sp, #88]
  4184a4:	ldur	x8, [x29, #-8]
  4184a8:	ldrb	w9, [x8, #459]
  4184ac:	strb	w9, [sp, #87]
  4184b0:	ldur	x8, [x29, #-24]
  4184b4:	ldrb	w9, [x8]
  4184b8:	strb	w9, [sp, #86]
  4184bc:	ldrb	w9, [sp, #87]
  4184c0:	ldur	x8, [x29, #-24]
  4184c4:	strb	w9, [x8]
  4184c8:	ldurb	w9, [x29, #-41]
  4184cc:	tbnz	w9, #0, 4184d4 <wcrtomb@plt+0x15724>
  4184d0:	b	4184fc <wcrtomb@plt+0x1574c>
  4184d4:	ldur	x8, [x29, #-8]
  4184d8:	str	xzr, [x8, #272]
  4184dc:	ldur	x8, [x29, #-8]
  4184e0:	ldr	x8, [x8, #424]
  4184e4:	cbnz	x8, 4184fc <wcrtomb@plt+0x1574c>
  4184e8:	ldur	x8, [x29, #-8]
  4184ec:	add	x0, x8, #0x198
  4184f0:	ldur	x8, [x29, #-8]
  4184f4:	ldr	x1, [x8, #176]
  4184f8:	bl	41641c <wcrtomb@plt+0x1366c>
  4184fc:	str	xzr, [sp, #72]
  418500:	ldr	x8, [sp, #88]
  418504:	ldur	x9, [x29, #-88]
  418508:	mov	x10, #0x8                   	// #8
  41850c:	mul	x9, x10, x9
  418510:	add	x8, x8, x9
  418514:	ldr	x8, [x8]
  418518:	str	x8, [sp, #64]
  41851c:	cbz	x8, 41873c <wcrtomb@plt+0x1598c>
  418520:	ldur	x8, [x29, #-88]
  418524:	ldur	x9, [x29, #-8]
  418528:	ldrsw	x9, [x9, #364]
  41852c:	cmp	x8, x9
  418530:	b.ge	4185b8 <wcrtomb@plt+0x15808>  // b.tcont
  418534:	ldurb	w8, [x29, #-41]
  418538:	tbnz	w8, #0, 418540 <wcrtomb@plt+0x15790>
  41853c:	b	418560 <wcrtomb@plt+0x157b0>
  418540:	ldur	x8, [x29, #-8]
  418544:	ldr	x8, [x8, #296]
  418548:	ldur	x9, [x29, #-88]
  41854c:	mov	x10, #0x50                  	// #80
  418550:	mul	x9, x10, x9
  418554:	add	x8, x8, x9
  418558:	ldr	x8, [x8, #56]
  41855c:	cbnz	x8, 418590 <wcrtomb@plt+0x157e0>
  418560:	ldr	x8, [sp, #64]
  418564:	ldr	x9, [sp, #104]
  418568:	ldrb	w10, [x9]
  41856c:	mov	w9, w10
  418570:	ldr	x8, [x8, x9, lsl #3]
  418574:	ldur	x9, [x29, #-88]
  418578:	cmp	x8, x9
  41857c:	b.ne	418590 <wcrtomb@plt+0x157e0>  // b.any
  418580:	ldr	x8, [sp, #104]
  418584:	add	x8, x8, #0x1
  418588:	str	x8, [sp, #104]
  41858c:	b	418560 <wcrtomb@plt+0x157b0>
  418590:	ldurb	w8, [x29, #-41]
  418594:	tbnz	w8, #0, 41859c <wcrtomb@plt+0x157ec>
  418598:	b	4185b8 <wcrtomb@plt+0x15808>
  41859c:	ldur	x0, [x29, #-8]
  4185a0:	ldr	x1, [sp, #104]
  4185a4:	ldr	x2, [sp, #96]
  4185a8:	ldur	x3, [x29, #-24]
  4185ac:	bl	418d00 <wcrtomb@plt+0x15f50>
  4185b0:	str	x0, [sp, #96]
  4185b4:	str	x0, [sp, #104]
  4185b8:	ldurb	w8, [x29, #-41]
  4185bc:	tbnz	w8, #0, 4185c4 <wcrtomb@plt+0x15814>
  4185c0:	b	418674 <wcrtomb@plt+0x158c4>
  4185c4:	ldur	x8, [x29, #-88]
  4185c8:	stur	x8, [x29, #-96]
  4185cc:	ldur	x8, [x29, #-8]
  4185d0:	ldr	x8, [x8, #296]
  4185d4:	ldur	x9, [x29, #-88]
  4185d8:	mov	x10, #0x50                  	// #80
  4185dc:	mul	x9, x10, x9
  4185e0:	add	x8, x8, x9
  4185e4:	ldr	x8, [x8, #56]
  4185e8:	cbz	x8, 418620 <wcrtomb@plt+0x15870>
  4185ec:	ldur	x8, [x29, #-8]
  4185f0:	add	x8, x8, #0x51c
  4185f4:	ldr	x9, [sp, #104]
  4185f8:	ldrb	w10, [x9]
  4185fc:	mov	w9, w10
  418600:	ldr	w10, [x8, x9, lsl #2]
  418604:	mov	w11, #0xffffffff            	// #-1
  418608:	cmp	w10, w11
  41860c:	b.ne	418620 <wcrtomb@plt+0x15870>  // b.any
  418610:	ldr	x8, [sp, #104]
  418614:	ldur	x9, [x29, #-24]
  418618:	cmp	x8, x9
  41861c:	b.cc	418644 <wcrtomb@plt+0x15894>  // b.lo, b.ul, b.last
  418620:	ldr	x8, [sp, #64]
  418624:	ldr	x9, [sp, #104]
  418628:	add	x10, x9, #0x1
  41862c:	str	x10, [sp, #104]
  418630:	ldrb	w11, [x9]
  418634:	mov	w9, w11
  418638:	ldr	x8, [x8, x9, lsl #3]
  41863c:	stur	x8, [x29, #-88]
  418640:	b	418670 <wcrtomb@plt+0x158c0>
  418644:	ldur	x0, [x29, #-8]
  418648:	ldur	x1, [x29, #-88]
  41864c:	ldur	x3, [x29, #-24]
  418650:	add	x2, sp, #0x68
  418654:	bl	418da8 <wcrtomb@plt+0x15ff8>
  418658:	stur	x0, [x29, #-88]
  41865c:	ldr	x8, [sp, #104]
  418660:	str	x8, [sp, #96]
  418664:	ldur	x8, [x29, #-8]
  418668:	ldr	x8, [x8, #368]
  41866c:	str	x8, [sp, #88]
  418670:	b	418738 <wcrtomb@plt+0x15988>
  418674:	ldr	x8, [sp, #64]
  418678:	ldr	x9, [sp, #104]
  41867c:	add	x10, x9, #0x1
  418680:	str	x10, [sp, #104]
  418684:	ldrb	w11, [x9]
  418688:	mov	w9, w11
  41868c:	mov	x10, #0x8                   	// #8
  418690:	ldr	x8, [x8, x9, lsl #3]
  418694:	stur	x8, [x29, #-96]
  418698:	ldr	x8, [sp, #88]
  41869c:	ldur	x9, [x29, #-96]
  4186a0:	mul	x9, x10, x9
  4186a4:	add	x8, x8, x9
  4186a8:	ldr	x8, [x8]
  4186ac:	str	x8, [sp, #64]
  4186b0:	ldr	x8, [sp, #64]
  4186b4:	cbnz	x8, 4186d4 <wcrtomb@plt+0x15924>
  4186b8:	ldur	x8, [x29, #-88]
  4186bc:	str	x8, [sp, #56]
  4186c0:	ldur	x8, [x29, #-96]
  4186c4:	stur	x8, [x29, #-88]
  4186c8:	ldr	x8, [sp, #56]
  4186cc:	stur	x8, [x29, #-96]
  4186d0:	b	41873c <wcrtomb@plt+0x1598c>
  4186d4:	ldur	x8, [x29, #-88]
  4186d8:	ldur	x9, [x29, #-8]
  4186dc:	ldrsw	x9, [x9, #364]
  4186e0:	cmp	x8, x9
  4186e4:	b.ge	418718 <wcrtomb@plt+0x15968>  // b.tcont
  4186e8:	ldr	x8, [sp, #64]
  4186ec:	ldr	x9, [sp, #104]
  4186f0:	ldrb	w10, [x9]
  4186f4:	mov	w9, w10
  4186f8:	ldr	x8, [x8, x9, lsl #3]
  4186fc:	ldur	x9, [x29, #-96]
  418700:	cmp	x8, x9
  418704:	b.ne	418718 <wcrtomb@plt+0x15968>  // b.any
  418708:	ldr	x8, [sp, #104]
  41870c:	add	x8, x8, #0x1
  418710:	str	x8, [sp, #104]
  418714:	b	4186e8 <wcrtomb@plt+0x15938>
  418718:	ldr	x8, [sp, #64]
  41871c:	ldr	x9, [sp, #104]
  418720:	add	x10, x9, #0x1
  418724:	str	x10, [sp, #104]
  418728:	ldrb	w11, [x9]
  41872c:	mov	w9, w11
  418730:	ldr	x8, [x8, x9, lsl #3]
  418734:	stur	x8, [x29, #-88]
  418738:	b	418500 <wcrtomb@plt+0x15750>
  41873c:	ldur	x8, [x29, #-88]
  418740:	cmp	x8, #0x0
  418744:	cset	w9, ge  // ge = tcont
  418748:	tbnz	w9, #0, 418898 <wcrtomb@plt+0x15ae8>
  41874c:	ldur	x8, [x29, #-88]
  418750:	mov	x9, #0xfffffffffffffffe    	// #-2
  418754:	cmp	x8, x9
  418758:	b.ne	418784 <wcrtomb@plt+0x159d4>  // b.any
  41875c:	ldur	x0, [x29, #-96]
  418760:	ldur	x1, [x29, #-8]
  418764:	ldr	x8, [sp, #104]
  418768:	ldurb	w2, [x8, #-1]
  41876c:	bl	41920c <wcrtomb@plt+0x1645c>
  418770:	stur	x0, [x29, #-88]
  418774:	ldur	x8, [x29, #-8]
  418778:	ldr	x8, [x8, #368]
  41877c:	str	x8, [sp, #88]
  418780:	b	418894 <wcrtomb@plt+0x15ae4>
  418784:	ldr	x8, [sp, #104]
  418788:	ldur	x9, [x29, #-24]
  41878c:	cmp	x8, x9
  418790:	b.hi	418888 <wcrtomb@plt+0x15ad8>  // b.pmore
  418794:	ldr	x8, [sp, #104]
  418798:	ldurb	w9, [x8, #-1]
  41879c:	ldrb	w10, [sp, #87]
  4187a0:	cmp	w9, w10
  4187a4:	b.ne	418888 <wcrtomb@plt+0x15ad8>  // b.any
  4187a8:	ldur	x8, [x29, #-8]
  4187ac:	ldr	x8, [x8, #392]
  4187b0:	ldur	x9, [x29, #-96]
  4187b4:	ldr	x8, [x8, x9, lsl #3]
  4187b8:	mov	x9, xzr
  4187bc:	cmp	x9, x8
  4187c0:	cset	w10, gt
  4187c4:	tbnz	w10, #0, 418888 <wcrtomb@plt+0x15ad8>
  4187c8:	ldr	x8, [sp, #72]
  4187cc:	add	x8, x8, #0x1
  4187d0:	str	x8, [sp, #72]
  4187d4:	ldr	x8, [sp, #104]
  4187d8:	str	x8, [sp, #96]
  4187dc:	ldurb	w9, [x29, #-25]
  4187e0:	tbnz	w9, #0, 4187e8 <wcrtomb@plt+0x15a38>
  4187e4:	b	418800 <wcrtomb@plt+0x15a50>
  4187e8:	ldur	x8, [x29, #-8]
  4187ec:	ldr	x8, [x8, #392]
  4187f0:	ldur	x9, [x29, #-96]
  4187f4:	ldr	x8, [x8, x9, lsl #3]
  4187f8:	str	x8, [sp, #24]
  4187fc:	b	41887c <wcrtomb@plt+0x15acc>
  418800:	ldur	x8, [x29, #-8]
  418804:	add	x8, x8, #0x1cc
  418808:	ldrb	w9, [sp, #87]
  41880c:	mov	w10, w9
  418810:	ldrb	w9, [x8, x10]
  418814:	cmp	w9, #0x4
  418818:	b.ne	418828 <wcrtomb@plt+0x15a78>  // b.any
  41881c:	mov	x8, xzr
  418820:	str	x8, [sp, #16]
  418824:	b	418874 <wcrtomb@plt+0x15ac4>
  418828:	ldur	x8, [x29, #-8]
  41882c:	add	x8, x8, #0x1cc
  418830:	ldrb	w9, [sp, #87]
  418834:	mov	w10, w9
  418838:	ldrb	w9, [x8, x10]
  41883c:	cmp	w9, #0x2
  418840:	b.ne	418860 <wcrtomb@plt+0x15ab0>  // b.any
  418844:	ldur	x8, [x29, #-8]
  418848:	ldr	w9, [x8, #364]
  41884c:	subs	w9, w9, #0x1
  418850:	mov	w0, w9
  418854:	sxtw	x8, w0
  418858:	str	x8, [sp, #8]
  41885c:	b	41886c <wcrtomb@plt+0x15abc>
  418860:	ldur	x8, [x29, #-8]
  418864:	ldr	x8, [x8, #400]
  418868:	str	x8, [sp, #8]
  41886c:	ldr	x8, [sp, #8]
  418870:	str	x8, [sp, #16]
  418874:	ldr	x8, [sp, #16]
  418878:	str	x8, [sp, #24]
  41887c:	ldr	x8, [sp, #24]
  418880:	stur	x8, [x29, #-88]
  418884:	b	418894 <wcrtomb@plt+0x15ae4>
  418888:	mov	x8, xzr
  41888c:	str	x8, [sp, #104]
  418890:	b	418a64 <wcrtomb@plt+0x15cb4>
  418894:	b	418a60 <wcrtomb@plt+0x15cb0>
  418898:	ldur	x8, [x29, #-8]
  41889c:	ldr	x8, [x8, #376]
  4188a0:	ldur	x9, [x29, #-88]
  4188a4:	mov	x10, #0x8                   	// #8
  4188a8:	mul	x9, x10, x9
  4188ac:	add	x8, x8, x9
  4188b0:	ldr	x8, [x8]
  4188b4:	cbz	x8, 418a40 <wcrtomb@plt+0x15c90>
  4188b8:	ldur	x8, [x29, #-8]
  4188bc:	ldr	x8, [x8, #384]
  4188c0:	ldur	x9, [x29, #-88]
  4188c4:	ldrb	w10, [x8, x9]
  4188c8:	ldur	x8, [x29, #-8]
  4188cc:	add	x8, x8, #0x1cc
  4188d0:	ldr	x9, [sp, #104]
  4188d4:	ldrb	w11, [x9]
  4188d8:	mov	w9, w11
  4188dc:	ldrb	w11, [x8, x9]
  4188e0:	and	w10, w10, w11
  4188e4:	cbnz	w10, 41892c <wcrtomb@plt+0x15b7c>
  4188e8:	ldr	x8, [sp, #104]
  4188ec:	ldur	x9, [x29, #-24]
  4188f0:	cmp	x8, x9
  4188f4:	b.ne	418930 <wcrtomb@plt+0x15b80>  // b.any
  4188f8:	ldur	x8, [x29, #-8]
  4188fc:	ldr	x8, [x8, #296]
  418900:	ldur	x9, [x29, #-88]
  418904:	mov	x10, #0x50                  	// #80
  418908:	mul	x9, x10, x9
  41890c:	add	x8, x8, x9
  418910:	ldrb	w0, [x8, #32]
  418914:	ldur	x2, [x29, #-88]
  418918:	ldur	x3, [x29, #-8]
  41891c:	mov	w1, #0x4                   	// #4
  418920:	bl	419f2c <wcrtomb@plt+0x1717c>
  418924:	tbnz	w0, #0, 41892c <wcrtomb@plt+0x15b7c>
  418928:	b	418930 <wcrtomb@plt+0x15b80>
  41892c:	b	418a64 <wcrtomb@plt+0x15cb4>
  418930:	ldurb	w8, [x29, #-41]
  418934:	tbnz	w8, #0, 41893c <wcrtomb@plt+0x15b8c>
  418938:	b	41896c <wcrtomb@plt+0x15bbc>
  41893c:	ldur	x8, [x29, #-88]
  418940:	ldur	x9, [x29, #-8]
  418944:	ldrsw	x9, [x9, #364]
  418948:	cmp	x8, x9
  41894c:	b.ge	41896c <wcrtomb@plt+0x15bbc>  // b.tcont
  418950:	ldur	x0, [x29, #-8]
  418954:	ldr	x1, [sp, #104]
  418958:	ldr	x2, [sp, #96]
  41895c:	ldur	x3, [x29, #-24]
  418960:	bl	418d00 <wcrtomb@plt+0x15f50>
  418964:	str	x0, [sp, #96]
  418968:	str	x0, [sp, #104]
  41896c:	ldur	x8, [x29, #-88]
  418970:	stur	x8, [x29, #-96]
  418974:	ldurb	w9, [x29, #-41]
  418978:	tbnz	w9, #0, 418980 <wcrtomb@plt+0x15bd0>
  41897c:	b	4189d4 <wcrtomb@plt+0x15c24>
  418980:	ldur	x8, [x29, #-8]
  418984:	ldr	x8, [x8, #296]
  418988:	ldur	x9, [x29, #-88]
  41898c:	mov	x10, #0x50                  	// #80
  418990:	mul	x9, x10, x9
  418994:	add	x8, x8, x9
  418998:	ldr	x8, [x8, #56]
  41899c:	cbz	x8, 4189d4 <wcrtomb@plt+0x15c24>
  4189a0:	ldur	x8, [x29, #-8]
  4189a4:	add	x8, x8, #0x51c
  4189a8:	ldr	x9, [sp, #104]
  4189ac:	ldrb	w10, [x9]
  4189b0:	mov	w9, w10
  4189b4:	ldr	w10, [x8, x9, lsl #2]
  4189b8:	mov	w11, #0xffffffff            	// #-1
  4189bc:	cmp	w10, w11
  4189c0:	b.ne	4189d4 <wcrtomb@plt+0x15c24>  // b.any
  4189c4:	ldr	x8, [sp, #104]
  4189c8:	ldur	x9, [x29, #-24]
  4189cc:	cmp	x8, x9
  4189d0:	b.cc	418a10 <wcrtomb@plt+0x15c60>  // b.lo, b.ul, b.last
  4189d4:	ldur	x8, [x29, #-8]
  4189d8:	ldr	x8, [x8, #376]
  4189dc:	ldur	x9, [x29, #-88]
  4189e0:	mov	x10, #0x8                   	// #8
  4189e4:	mul	x9, x10, x9
  4189e8:	add	x8, x8, x9
  4189ec:	ldr	x8, [x8]
  4189f0:	ldr	x9, [sp, #104]
  4189f4:	add	x10, x9, #0x1
  4189f8:	str	x10, [sp, #104]
  4189fc:	ldrb	w11, [x9]
  418a00:	mov	w9, w11
  418a04:	ldr	x8, [x8, x9, lsl #3]
  418a08:	stur	x8, [x29, #-88]
  418a0c:	b	418a3c <wcrtomb@plt+0x15c8c>
  418a10:	ldur	x0, [x29, #-8]
  418a14:	ldur	x1, [x29, #-88]
  418a18:	ldur	x3, [x29, #-24]
  418a1c:	add	x2, sp, #0x68
  418a20:	bl	418da8 <wcrtomb@plt+0x15ff8>
  418a24:	stur	x0, [x29, #-88]
  418a28:	ldr	x8, [sp, #104]
  418a2c:	str	x8, [sp, #96]
  418a30:	ldur	x8, [x29, #-8]
  418a34:	ldr	x8, [x8, #368]
  418a38:	str	x8, [sp, #88]
  418a3c:	b	418a60 <wcrtomb@plt+0x15cb0>
  418a40:	ldur	x0, [x29, #-88]
  418a44:	ldur	x1, [x29, #-8]
  418a48:	ldr	x8, [sp, #104]
  418a4c:	ldrb	w2, [x8]
  418a50:	bl	41920c <wcrtomb@plt+0x1645c>
  418a54:	ldur	x8, [x29, #-8]
  418a58:	ldr	x8, [x8, #368]
  418a5c:	str	x8, [sp, #88]
  418a60:	b	418500 <wcrtomb@plt+0x15750>
  418a64:	ldur	x8, [x29, #-40]
  418a68:	cbz	x8, 418a80 <wcrtomb@plt+0x15cd0>
  418a6c:	ldr	x8, [sp, #72]
  418a70:	ldur	x9, [x29, #-40]
  418a74:	ldr	x10, [x9]
  418a78:	add	x8, x10, x8
  418a7c:	str	x8, [x9]
  418a80:	ldrb	w8, [sp, #86]
  418a84:	ldur	x9, [x29, #-24]
  418a88:	strb	w8, [x9]
  418a8c:	ldr	x0, [sp, #104]
  418a90:	ldp	x29, x30, [sp, #208]
  418a94:	add	sp, sp, #0xe0
  418a98:	ret
  418a9c:	sub	sp, sp, #0x60
  418aa0:	stp	x29, x30, [sp, #80]
  418aa4:	add	x29, sp, #0x50
  418aa8:	stur	x0, [x29, #-8]
  418aac:	ldur	x8, [x29, #-8]
  418ab0:	ldr	x8, [x8, #352]
  418ab4:	stur	x8, [x29, #-16]
  418ab8:	ldur	x8, [x29, #-16]
  418abc:	ldur	x9, [x29, #-8]
  418ac0:	ldr	x9, [x9, #304]
  418ac4:	cmp	x8, x9
  418ac8:	b.ge	418cf4 <wcrtomb@plt+0x15f44>  // b.tcont
  418acc:	ldur	x8, [x29, #-8]
  418ad0:	ldr	x8, [x8, #368]
  418ad4:	cbz	x8, 418af0 <wcrtomb@plt+0x15d40>
  418ad8:	ldur	x8, [x29, #-8]
  418adc:	ldr	x8, [x8, #368]
  418ae0:	mov	x9, #0xfffffffffffffff0    	// #-16
  418ae4:	add	x8, x8, x9
  418ae8:	str	x8, [sp, #32]
  418aec:	b	418af8 <wcrtomb@plt+0x15d48>
  418af0:	mov	x8, xzr
  418af4:	str	x8, [sp, #32]
  418af8:	ldr	x8, [sp, #32]
  418afc:	stur	x8, [x29, #-24]
  418b00:	ldur	x8, [x29, #-24]
  418b04:	cbz	x8, 418b1c <wcrtomb@plt+0x15d6c>
  418b08:	ldur	x8, [x29, #-8]
  418b0c:	ldr	x8, [x8, #352]
  418b10:	add	x8, x8, #0x2
  418b14:	str	x8, [sp, #24]
  418b18:	b	418b24 <wcrtomb@plt+0x15d74>
  418b1c:	mov	x8, xzr
  418b20:	str	x8, [sp, #24]
  418b24:	ldr	x8, [sp, #24]
  418b28:	sub	x1, x29, #0x20
  418b2c:	stur	x8, [x29, #-32]
  418b30:	ldur	x0, [x29, #-24]
  418b34:	ldur	x8, [x29, #-8]
  418b38:	ldr	x8, [x8, #304]
  418b3c:	ldur	x9, [x29, #-16]
  418b40:	subs	x2, x8, x9
  418b44:	mov	x3, #0xffffffffffffffff    	// #-1
  418b48:	mov	x8, #0x8                   	// #8
  418b4c:	mov	x4, x8
  418b50:	str	x8, [sp, #16]
  418b54:	bl	411cc8 <wcrtomb@plt+0xef18>
  418b58:	stur	x0, [x29, #-24]
  418b5c:	ldur	x8, [x29, #-24]
  418b60:	mov	x9, xzr
  418b64:	str	x9, [x8, #8]
  418b68:	ldur	x8, [x29, #-24]
  418b6c:	str	x9, [x8]
  418b70:	ldur	x8, [x29, #-24]
  418b74:	add	x8, x8, #0x10
  418b78:	ldur	x9, [x29, #-8]
  418b7c:	str	x8, [x9, #368]
  418b80:	ldur	x8, [x29, #-32]
  418b84:	subs	x8, x8, #0x2
  418b88:	ldur	x9, [x29, #-8]
  418b8c:	str	x8, [x9, #352]
  418b90:	str	x8, [sp, #40]
  418b94:	ldur	x8, [x29, #-8]
  418b98:	ldr	x0, [x8, #376]
  418b9c:	ldr	x1, [sp, #40]
  418ba0:	ldr	x2, [sp, #16]
  418ba4:	bl	41d700 <wcrtomb@plt+0x1a950>
  418ba8:	ldur	x8, [x29, #-8]
  418bac:	str	x0, [x8, #376]
  418bb0:	ldur	x8, [x29, #-8]
  418bb4:	ldr	x0, [x8, #384]
  418bb8:	ldr	x1, [sp, #40]
  418bbc:	mov	x2, #0x1                   	// #1
  418bc0:	bl	41d700 <wcrtomb@plt+0x1a950>
  418bc4:	ldur	x8, [x29, #-8]
  418bc8:	str	x0, [x8, #384]
  418bcc:	ldur	x8, [x29, #-8]
  418bd0:	ldr	x0, [x8, #392]
  418bd4:	ldr	x1, [sp, #40]
  418bd8:	ldr	x2, [sp, #16]
  418bdc:	bl	41d700 <wcrtomb@plt+0x1a950>
  418be0:	ldur	x8, [x29, #-8]
  418be4:	str	x0, [x8, #392]
  418be8:	ldur	x8, [x29, #-8]
  418bec:	ldrb	w10, [x8, #1048]
  418bf0:	tbnz	w10, #0, 418bf8 <wcrtomb@plt+0x15e48>
  418bf4:	b	418c6c <wcrtomb@plt+0x15ebc>
  418bf8:	ldur	x8, [x29, #-8]
  418bfc:	ldr	x8, [x8, #432]
  418c00:	cbz	x8, 418c1c <wcrtomb@plt+0x15e6c>
  418c04:	ldur	x8, [x29, #-8]
  418c08:	ldr	x8, [x8, #432]
  418c0c:	mov	x9, #0xfffffffffffffff0    	// #-16
  418c10:	add	x8, x8, x9
  418c14:	str	x8, [sp, #8]
  418c18:	b	418c24 <wcrtomb@plt+0x15e74>
  418c1c:	mov	x8, xzr
  418c20:	str	x8, [sp, #8]
  418c24:	ldr	x8, [sp, #8]
  418c28:	stur	x8, [x29, #-24]
  418c2c:	ldur	x0, [x29, #-24]
  418c30:	ldur	x1, [x29, #-32]
  418c34:	mov	x2, #0x8                   	// #8
  418c38:	bl	41d700 <wcrtomb@plt+0x1a950>
  418c3c:	stur	x0, [x29, #-24]
  418c40:	ldur	x8, [x29, #-16]
  418c44:	cbnz	x8, 418c5c <wcrtomb@plt+0x15eac>
  418c48:	ldur	x8, [x29, #-24]
  418c4c:	mov	x9, xzr
  418c50:	str	x9, [x8, #8]
  418c54:	ldur	x8, [x29, #-24]
  418c58:	str	x9, [x8]
  418c5c:	ldur	x8, [x29, #-24]
  418c60:	add	x8, x8, #0x10
  418c64:	ldur	x9, [x29, #-8]
  418c68:	str	x8, [x9, #432]
  418c6c:	ldur	x8, [x29, #-16]
  418c70:	ldr	x9, [sp, #40]
  418c74:	cmp	x8, x9
  418c78:	b.ge	418cf4 <wcrtomb@plt+0x15f44>  // b.tcont
  418c7c:	ldur	x8, [x29, #-8]
  418c80:	ldr	x8, [x8, #368]
  418c84:	ldur	x9, [x29, #-16]
  418c88:	mov	x10, #0x8                   	// #8
  418c8c:	mul	x9, x10, x9
  418c90:	add	x8, x8, x9
  418c94:	mov	x9, xzr
  418c98:	str	x9, [x8]
  418c9c:	ldur	x8, [x29, #-8]
  418ca0:	ldr	x8, [x8, #376]
  418ca4:	ldur	x11, [x29, #-16]
  418ca8:	mul	x10, x10, x11
  418cac:	add	x8, x8, x10
  418cb0:	str	x9, [x8]
  418cb4:	ldur	x8, [x29, #-8]
  418cb8:	ldrb	w12, [x8, #1048]
  418cbc:	tbnz	w12, #0, 418cc4 <wcrtomb@plt+0x15f14>
  418cc0:	b	418ce4 <wcrtomb@plt+0x15f34>
  418cc4:	ldur	x8, [x29, #-8]
  418cc8:	ldr	x8, [x8, #432]
  418ccc:	ldur	x9, [x29, #-16]
  418cd0:	mov	x10, #0x8                   	// #8
  418cd4:	mul	x9, x10, x9
  418cd8:	add	x8, x8, x9
  418cdc:	mov	x9, xzr
  418ce0:	str	x9, [x8]
  418ce4:	ldur	x8, [x29, #-16]
  418ce8:	add	x8, x8, #0x1
  418cec:	stur	x8, [x29, #-16]
  418cf0:	b	418c6c <wcrtomb@plt+0x15ebc>
  418cf4:	ldp	x29, x30, [sp, #80]
  418cf8:	add	sp, sp, #0x60
  418cfc:	ret
  418d00:	sub	sp, sp, #0x40
  418d04:	stp	x29, x30, [sp, #48]
  418d08:	add	x29, sp, #0x30
  418d0c:	stur	x0, [x29, #-16]
  418d10:	str	x1, [sp, #24]
  418d14:	str	x2, [sp, #16]
  418d18:	str	x3, [sp, #8]
  418d1c:	ldur	x8, [x29, #-16]
  418d20:	add	x8, x8, #0x2cc
  418d24:	ldr	x9, [sp, #24]
  418d28:	ldrb	w10, [x9]
  418d2c:	mov	w9, w10
  418d30:	add	x8, x8, x9
  418d34:	ldrb	w10, [x8]
  418d38:	tbnz	w10, #0, 418d40 <wcrtomb@plt+0x15f90>
  418d3c:	b	418d4c <wcrtomb@plt+0x15f9c>
  418d40:	ldr	x8, [sp, #24]
  418d44:	stur	x8, [x29, #-8]
  418d48:	b	418d98 <wcrtomb@plt+0x15fe8>
  418d4c:	ldr	x8, [sp, #16]
  418d50:	ldr	x9, [sp, #24]
  418d54:	cmp	x8, x9
  418d58:	b.cs	418d90 <wcrtomb@plt+0x15fe0>  // b.hs, b.nlast
  418d5c:	ldr	x1, [sp, #16]
  418d60:	ldr	x8, [sp, #8]
  418d64:	ldr	x9, [sp, #16]
  418d68:	subs	x2, x8, x9
  418d6c:	ldur	x3, [x29, #-16]
  418d70:	add	x0, sp, #0x4
  418d74:	bl	415784 <wcrtomb@plt+0x129d4>
  418d78:	ldr	x8, [sp, #16]
  418d7c:	mov	w1, w0
  418d80:	sxtw	x9, w1
  418d84:	add	x8, x8, x9
  418d88:	str	x8, [sp, #16]
  418d8c:	b	418d4c <wcrtomb@plt+0x15f9c>
  418d90:	ldr	x8, [sp, #16]
  418d94:	stur	x8, [x29, #-8]
  418d98:	ldur	x0, [x29, #-8]
  418d9c:	ldp	x29, x30, [sp, #48]
  418da0:	add	sp, sp, #0x40
  418da4:	ret
  418da8:	sub	sp, sp, #0x80
  418dac:	stp	x29, x30, [sp, #112]
  418db0:	add	x29, sp, #0x70
  418db4:	sub	x8, x29, #0x2c
  418db8:	stur	x0, [x29, #-16]
  418dbc:	stur	x1, [x29, #-24]
  418dc0:	stur	x2, [x29, #-32]
  418dc4:	stur	x3, [x29, #-40]
  418dc8:	ldur	x9, [x29, #-32]
  418dcc:	ldr	x1, [x9]
  418dd0:	ldur	x9, [x29, #-40]
  418dd4:	ldur	x10, [x29, #-32]
  418dd8:	ldr	x10, [x10]
  418ddc:	subs	x2, x9, x10
  418de0:	ldur	x3, [x29, #-16]
  418de4:	mov	x0, x8
  418de8:	bl	415784 <wcrtomb@plt+0x129d4>
  418dec:	stur	w0, [x29, #-48]
  418df0:	ldur	x8, [x29, #-16]
  418df4:	str	xzr, [x8, #416]
  418df8:	ldur	x8, [x29, #-24]
  418dfc:	str	x8, [sp, #56]
  418e00:	str	wzr, [sp, #52]
  418e04:	ldr	w8, [sp, #52]
  418e08:	ldur	w9, [x29, #-48]
  418e0c:	mov	w10, #0x0                   	// #0
  418e10:	cmp	w8, w9
  418e14:	str	w10, [sp, #12]
  418e18:	b.ge	418e4c <wcrtomb@plt+0x1609c>  // b.tcont
  418e1c:	ldr	w8, [sp, #52]
  418e20:	mov	w9, #0x1                   	// #1
  418e24:	str	w9, [sp, #8]
  418e28:	cbz	w8, 418e44 <wcrtomb@plt+0x16094>
  418e2c:	ldur	x8, [x29, #-16]
  418e30:	ldrsw	x8, [x8, #364]
  418e34:	ldur	x9, [x29, #-24]
  418e38:	cmp	x8, x9
  418e3c:	cset	w10, le
  418e40:	str	w10, [sp, #8]
  418e44:	ldr	w8, [sp, #8]
  418e48:	str	w8, [sp, #12]
  418e4c:	ldr	w8, [sp, #12]
  418e50:	tbnz	w8, #0, 418e58 <wcrtomb@plt+0x160a8>
  418e54:	b	418e7c <wcrtomb@plt+0x160cc>
  418e58:	ldur	x0, [x29, #-16]
  418e5c:	ldur	x1, [x29, #-24]
  418e60:	ldur	x2, [x29, #-32]
  418e64:	bl	419f80 <wcrtomb@plt+0x171d0>
  418e68:	stur	x0, [x29, #-24]
  418e6c:	ldr	w8, [sp, #52]
  418e70:	add	w8, w8, #0x1
  418e74:	str	w8, [sp, #52]
  418e78:	b	418e04 <wcrtomb@plt+0x16054>
  418e7c:	ldur	w8, [x29, #-48]
  418e80:	ldr	w9, [sp, #52]
  418e84:	subs	w8, w8, w9
  418e88:	ldur	x10, [x29, #-32]
  418e8c:	ldr	x11, [x10]
  418e90:	mov	w0, w8
  418e94:	sxtw	x12, w0
  418e98:	add	x11, x11, x12
  418e9c:	str	x11, [x10]
  418ea0:	ldur	w8, [x29, #-44]
  418ea4:	mov	w9, #0xffffffff            	// #-1
  418ea8:	cmp	w8, w9
  418eac:	b.ne	418ebc <wcrtomb@plt+0x1610c>  // b.any
  418eb0:	ldur	x8, [x29, #-24]
  418eb4:	stur	x8, [x29, #-8]
  418eb8:	b	4191fc <wcrtomb@plt+0x1644c>
  418ebc:	ldur	x8, [x29, #-16]
  418ec0:	ldr	x8, [x8, #296]
  418ec4:	ldr	x9, [sp, #56]
  418ec8:	mov	x10, #0x50                  	// #80
  418ecc:	mul	x9, x10, x9
  418ed0:	add	x8, x8, x9
  418ed4:	ldr	x8, [x8, #72]
  418ed8:	cmp	x8, #0x0
  418edc:	cset	w11, ge  // ge = tcont
  418ee0:	tbnz	w11, #0, 418fe4 <wcrtomb@plt+0x16234>
  418ee4:	ldur	x8, [x29, #-16]
  418ee8:	ldr	x8, [x8, #440]
  418eec:	mov	x9, #0x400                 	// #1024
  418ef0:	cmp	x9, x8
  418ef4:	b.gt	418fb8 <wcrtomb@plt+0x16208>
  418ef8:	mov	x8, #0xffffffffffffffff    	// #-1
  418efc:	str	x8, [sp, #40]
  418f00:	ldr	x8, [sp, #40]
  418f04:	ldur	x9, [x29, #-16]
  418f08:	ldr	x9, [x9, #352]
  418f0c:	cmp	x8, x9
  418f10:	b.ge	418f68 <wcrtomb@plt+0x161b8>  // b.tcont
  418f14:	ldur	x8, [x29, #-16]
  418f18:	ldr	x8, [x8, #432]
  418f1c:	ldr	x9, [sp, #40]
  418f20:	mov	x10, #0x8                   	// #8
  418f24:	mul	x9, x10, x9
  418f28:	add	x8, x8, x9
  418f2c:	ldr	x0, [x8]
  418f30:	str	x10, [sp]
  418f34:	bl	402b40 <free@plt>
  418f38:	ldur	x8, [x29, #-16]
  418f3c:	ldr	x8, [x8, #432]
  418f40:	ldr	x9, [sp, #40]
  418f44:	ldr	x10, [sp]
  418f48:	mul	x9, x10, x9
  418f4c:	add	x8, x8, x9
  418f50:	mov	x9, xzr
  418f54:	str	x9, [x8]
  418f58:	ldr	x8, [sp, #40]
  418f5c:	add	x8, x8, #0x1
  418f60:	str	x8, [sp, #40]
  418f64:	b	418f00 <wcrtomb@plt+0x16150>
  418f68:	str	xzr, [sp, #32]
  418f6c:	ldr	x8, [sp, #32]
  418f70:	ldur	x9, [x29, #-16]
  418f74:	ldr	x9, [x9, #304]
  418f78:	cmp	x8, x9
  418f7c:	b.ge	418fb0 <wcrtomb@plt+0x16200>  // b.tcont
  418f80:	ldur	x8, [x29, #-16]
  418f84:	ldr	x8, [x8, #296]
  418f88:	ldr	x9, [sp, #32]
  418f8c:	mov	x10, #0x50                  	// #80
  418f90:	mul	x9, x10, x9
  418f94:	add	x8, x8, x9
  418f98:	mov	x9, #0xffffffffffffffff    	// #-1
  418f9c:	str	x9, [x8, #72]
  418fa0:	ldr	x8, [sp, #32]
  418fa4:	add	x8, x8, #0x1
  418fa8:	str	x8, [sp, #32]
  418fac:	b	418f6c <wcrtomb@plt+0x161bc>
  418fb0:	ldur	x8, [x29, #-16]
  418fb4:	str	xzr, [x8, #440]
  418fb8:	ldur	x8, [x29, #-16]
  418fbc:	ldr	x9, [x8, #440]
  418fc0:	add	x10, x9, #0x1
  418fc4:	str	x10, [x8, #440]
  418fc8:	ldur	x8, [x29, #-16]
  418fcc:	ldr	x8, [x8, #296]
  418fd0:	ldr	x10, [sp, #56]
  418fd4:	mov	x11, #0x50                  	// #80
  418fd8:	mul	x10, x11, x10
  418fdc:	add	x8, x8, x10
  418fe0:	str	x9, [x8, #72]
  418fe4:	ldur	x8, [x29, #-16]
  418fe8:	ldr	x8, [x8, #432]
  418fec:	ldur	x9, [x29, #-24]
  418ff0:	mov	x10, #0x8                   	// #8
  418ff4:	mul	x9, x10, x9
  418ff8:	add	x8, x8, x9
  418ffc:	ldr	x8, [x8]
  419000:	cbnz	x8, 419074 <wcrtomb@plt+0x162c4>
  419004:	mov	x0, #0x2000                	// #8192
  419008:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  41900c:	ldur	x8, [x29, #-16]
  419010:	ldr	x8, [x8, #432]
  419014:	ldur	x9, [x29, #-24]
  419018:	mov	x10, #0x8                   	// #8
  41901c:	mul	x9, x10, x9
  419020:	add	x8, x8, x9
  419024:	str	x0, [x8]
  419028:	str	wzr, [sp, #28]
  41902c:	ldr	w8, [sp, #28]
  419030:	cmp	w8, #0x400
  419034:	b.ge	419070 <wcrtomb@plt+0x162c0>  // b.tcont
  419038:	ldur	x8, [x29, #-16]
  41903c:	ldr	x8, [x8, #432]
  419040:	ldur	x9, [x29, #-24]
  419044:	mov	x10, #0x8                   	// #8
  419048:	mul	x9, x10, x9
  41904c:	add	x8, x8, x9
  419050:	ldr	x8, [x8]
  419054:	ldrsw	x9, [sp, #28]
  419058:	mov	x10, #0xffffffffffffffff    	// #-1
  41905c:	str	x10, [x8, x9, lsl #3]
  419060:	ldr	w8, [sp, #28]
  419064:	add	w8, w8, #0x1
  419068:	str	w8, [sp, #28]
  41906c:	b	41902c <wcrtomb@plt+0x1627c>
  419070:	b	419100 <wcrtomb@plt+0x16350>
  419074:	ldur	x8, [x29, #-16]
  419078:	ldr	x8, [x8, #432]
  41907c:	ldur	x9, [x29, #-24]
  419080:	mov	x10, #0x8                   	// #8
  419084:	mul	x9, x10, x9
  419088:	add	x8, x8, x9
  41908c:	ldr	x8, [x8]
  419090:	ldur	x9, [x29, #-16]
  419094:	ldr	x9, [x9, #296]
  419098:	ldr	x10, [sp, #56]
  41909c:	mov	x11, #0x50                  	// #80
  4190a0:	mul	x10, x11, x10
  4190a4:	add	x9, x9, x10
  4190a8:	ldr	x9, [x9, #72]
  4190ac:	ldr	x8, [x8, x9, lsl #3]
  4190b0:	cmp	x8, #0x0
  4190b4:	cset	w12, lt  // lt = tstop
  4190b8:	tbnz	w12, #0, 419100 <wcrtomb@plt+0x16350>
  4190bc:	ldur	x8, [x29, #-16]
  4190c0:	ldr	x8, [x8, #432]
  4190c4:	ldur	x9, [x29, #-24]
  4190c8:	mov	x10, #0x8                   	// #8
  4190cc:	mul	x9, x10, x9
  4190d0:	add	x8, x8, x9
  4190d4:	ldr	x8, [x8]
  4190d8:	ldur	x9, [x29, #-16]
  4190dc:	ldr	x9, [x9, #296]
  4190e0:	ldr	x10, [sp, #56]
  4190e4:	mov	x11, #0x50                  	// #80
  4190e8:	mul	x10, x11, x10
  4190ec:	add	x9, x9, x10
  4190f0:	ldr	x9, [x9, #72]
  4190f4:	ldr	x8, [x8, x9, lsl #3]
  4190f8:	stur	x8, [x29, #-8]
  4190fc:	b	4191fc <wcrtomb@plt+0x1644c>
  419100:	ldur	x8, [x29, #-24]
  419104:	mov	x9, #0xffffffffffffffff    	// #-1
  419108:	cmp	x8, x9
  41910c:	b.ne	41913c <wcrtomb@plt+0x1638c>  // b.any
  419110:	ldur	x8, [x29, #-16]
  419114:	ldr	x8, [x8, #296]
  419118:	ldr	x9, [sp, #56]
  41911c:	mov	x10, #0x50                  	// #80
  419120:	mul	x9, x10, x9
  419124:	add	x8, x8, x9
  419128:	add	x0, x8, #0x30
  41912c:	ldur	x8, [x29, #-16]
  419130:	add	x1, x8, #0x198
  419134:	bl	4164a4 <wcrtomb@plt+0x136f4>
  419138:	b	41917c <wcrtomb@plt+0x163cc>
  41913c:	ldur	x8, [x29, #-16]
  419140:	ldr	x8, [x8, #296]
  419144:	ldr	x9, [sp, #56]
  419148:	mov	x10, #0x50                  	// #80
  41914c:	mul	x9, x10, x9
  419150:	add	x8, x8, x9
  419154:	add	x0, x8, #0x30
  419158:	ldur	x8, [x29, #-16]
  41915c:	ldr	x8, [x8, #296]
  419160:	ldur	x9, [x29, #-24]
  419164:	mul	x9, x10, x9
  419168:	add	x8, x8, x9
  41916c:	add	x1, x8, #0x8
  419170:	ldur	x8, [x29, #-16]
  419174:	add	x2, x8, #0x198
  419178:	bl	416468 <wcrtomb@plt+0x136b8>
  41917c:	ldur	x0, [x29, #-16]
  419180:	ldur	x8, [x29, #-16]
  419184:	add	x1, x8, #0x198
  419188:	bl	416b78 <wcrtomb@plt+0x13dc8>
  41918c:	str	w0, [sp, #24]
  419190:	ldur	x0, [x29, #-16]
  419194:	ldur	x8, [x29, #-16]
  419198:	add	x1, x8, #0x198
  41919c:	ldr	w9, [sp, #24]
  4191a0:	eor	w2, w9, #0x7
  4191a4:	bl	416bec <wcrtomb@plt+0x13e3c>
  4191a8:	str	x0, [sp, #16]
  4191ac:	ldur	x0, [x29, #-16]
  4191b0:	bl	418a9c <wcrtomb@plt+0x15cec>
  4191b4:	ldr	x8, [sp, #16]
  4191b8:	ldur	x10, [x29, #-16]
  4191bc:	ldr	x10, [x10, #432]
  4191c0:	ldur	x11, [x29, #-24]
  4191c4:	mov	x12, #0x8                   	// #8
  4191c8:	mul	x11, x12, x11
  4191cc:	add	x10, x10, x11
  4191d0:	ldr	x10, [x10]
  4191d4:	ldur	x11, [x29, #-16]
  4191d8:	ldr	x11, [x11, #296]
  4191dc:	ldr	x12, [sp, #56]
  4191e0:	mov	x13, #0x50                  	// #80
  4191e4:	mul	x12, x13, x12
  4191e8:	add	x11, x11, x12
  4191ec:	ldr	x11, [x11, #72]
  4191f0:	str	x8, [x10, x11, lsl #3]
  4191f4:	ldr	x8, [sp, #16]
  4191f8:	stur	x8, [x29, #-8]
  4191fc:	ldur	x0, [x29, #-8]
  419200:	ldp	x29, x30, [sp, #112]
  419204:	add	sp, sp, #0x80
  419208:	ret
  41920c:	sub	sp, sp, #0x1a0
  419210:	stp	x29, x30, [sp, #384]
  419214:	str	x28, [sp, #400]
  419218:	add	x29, sp, #0x180
  41921c:	sub	x8, x29, #0xa8
  419220:	str	x0, [x8, #160]
  419224:	str	x1, [x8, #152]
  419228:	sturb	w2, [x29, #-17]
  41922c:	ldr	x0, [x8, #160]
  419230:	ldr	x1, [x8, #152]
  419234:	str	x8, [sp, #64]
  419238:	bl	41a130 <wcrtomb@plt+0x17380>
  41923c:	tbnz	w0, #0, 419244 <wcrtomb@plt+0x16494>
  419240:	b	419258 <wcrtomb@plt+0x164a8>
  419244:	ldr	x8, [sp, #64]
  419248:	ldr	x9, [x8, #152]
  41924c:	ldr	x9, [x9, #376]
  419250:	str	x9, [sp, #56]
  419254:	b	419268 <wcrtomb@plt+0x164b8>
  419258:	ldr	x8, [sp, #64]
  41925c:	ldr	x9, [x8, #152]
  419260:	ldr	x9, [x9, #368]
  419264:	str	x9, [sp, #56]
  419268:	ldr	x8, [sp, #56]
  41926c:	ldr	x9, [sp, #64]
  419270:	ldr	x10, [x9, #160]
  419274:	mov	x11, #0x8                   	// #8
  419278:	mul	x10, x11, x10
  41927c:	add	x8, x8, x10
  419280:	str	x8, [x9, #40]
  419284:	ldr	x8, [x9, #40]
  419288:	ldr	x8, [x8]
  41928c:	str	x8, [x9, #32]
  419290:	ldr	x8, [x9, #32]
  419294:	cbnz	x8, 4193e0 <wcrtomb@plt+0x16630>
  419298:	ldr	x8, [sp, #64]
  41929c:	ldr	x9, [x8, #152]
  4192a0:	ldr	w10, [x9, #360]
  4192a4:	mov	w11, #0x400                 	// #1024
  4192a8:	cmp	w11, w10
  4192ac:	b.gt	419380 <wcrtomb@plt+0x165d0>
  4192b0:	ldr	x8, [sp, #64]
  4192b4:	ldr	x9, [x8, #152]
  4192b8:	ldrsw	x9, [x9, #364]
  4192bc:	str	x9, [x8, #24]
  4192c0:	ldr	x8, [sp, #64]
  4192c4:	ldr	x9, [x8, #24]
  4192c8:	ldr	x10, [x8, #152]
  4192cc:	ldr	x10, [x10, #352]
  4192d0:	cmp	x9, x10
  4192d4:	b.ge	419374 <wcrtomb@plt+0x165c4>  // b.tcont
  4192d8:	ldr	x8, [sp, #64]
  4192dc:	ldr	x9, [x8, #152]
  4192e0:	ldr	x9, [x9, #368]
  4192e4:	ldr	x10, [x8, #24]
  4192e8:	mov	x11, #0x8                   	// #8
  4192ec:	mul	x10, x11, x10
  4192f0:	add	x9, x9, x10
  4192f4:	ldr	x0, [x9]
  4192f8:	str	x11, [sp, #48]
  4192fc:	bl	402b40 <free@plt>
  419300:	ldr	x8, [sp, #64]
  419304:	ldr	x9, [x8, #152]
  419308:	ldr	x9, [x9, #376]
  41930c:	ldr	x10, [x8, #24]
  419310:	ldr	x11, [sp, #48]
  419314:	mul	x10, x11, x10
  419318:	add	x9, x9, x10
  41931c:	ldr	x0, [x9]
  419320:	bl	402b40 <free@plt>
  419324:	ldr	x8, [sp, #64]
  419328:	ldr	x9, [x8, #152]
  41932c:	ldr	x9, [x9, #376]
  419330:	ldr	x10, [x8, #24]
  419334:	ldr	x11, [sp, #48]
  419338:	mul	x10, x11, x10
  41933c:	add	x9, x9, x10
  419340:	mov	x10, xzr
  419344:	str	x10, [x9]
  419348:	ldr	x9, [x8, #152]
  41934c:	ldr	x9, [x9, #368]
  419350:	ldr	x12, [x8, #24]
  419354:	mul	x12, x11, x12
  419358:	add	x9, x9, x12
  41935c:	str	x10, [x9]
  419360:	ldr	x8, [sp, #64]
  419364:	ldr	x9, [x8, #24]
  419368:	add	x9, x9, #0x1
  41936c:	str	x9, [x8, #24]
  419370:	b	4192c0 <wcrtomb@plt+0x16510>
  419374:	ldr	x8, [sp, #64]
  419378:	ldr	x9, [x8, #152]
  41937c:	str	wzr, [x9, #360]
  419380:	ldr	x8, [sp, #64]
  419384:	ldr	x9, [x8, #152]
  419388:	ldr	w10, [x9, #360]
  41938c:	add	w10, w10, #0x1
  419390:	str	w10, [x9, #360]
  419394:	mov	x0, #0x800                 	// #2048
  419398:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  41939c:	ldr	x8, [sp, #64]
  4193a0:	str	x0, [x8, #32]
  4193a4:	ldr	x9, [x8, #40]
  4193a8:	str	x0, [x9]
  4193ac:	stur	wzr, [x29, #-148]
  4193b0:	ldur	w8, [x29, #-148]
  4193b4:	cmp	w8, #0x100
  4193b8:	b.ge	4193e0 <wcrtomb@plt+0x16630>  // b.tcont
  4193bc:	ldr	x8, [sp, #64]
  4193c0:	ldr	x9, [x8, #32]
  4193c4:	ldursw	x10, [x29, #-148]
  4193c8:	mov	x11, #0xfffffffffffffffe    	// #-2
  4193cc:	str	x11, [x9, x10, lsl #3]
  4193d0:	ldur	w8, [x29, #-148]
  4193d4:	add	w8, w8, #0x1
  4193d8:	stur	w8, [x29, #-148]
  4193dc:	b	4193b0 <wcrtomb@plt+0x16600>
  4193e0:	ldr	x8, [sp, #64]
  4193e4:	ldr	x9, [x8, #152]
  4193e8:	ldr	x9, [x9, #384]
  4193ec:	ldr	x10, [x8, #160]
  4193f0:	add	x9, x9, x10
  4193f4:	mov	w11, #0x0                   	// #0
  4193f8:	strb	w11, [x9]
  4193fc:	ldr	x9, [x8, #152]
  419400:	ldr	x9, [x9, #296]
  419404:	ldr	x10, [x8, #160]
  419408:	mov	x12, #0x50                  	// #80
  41940c:	mul	x10, x12, x10
  419410:	add	x9, x9, x10
  419414:	ldrb	w0, [x9, #32]
  419418:	ldr	x2, [x8, #160]
  41941c:	ldr	x3, [x8, #152]
  419420:	mov	w1, #0x4                   	// #4
  419424:	bl	419f2c <wcrtomb@plt+0x1717c>
  419428:	tbnz	w0, #0, 419430 <wcrtomb@plt+0x16680>
  41942c:	b	419450 <wcrtomb@plt+0x166a0>
  419430:	ldr	x8, [sp, #64]
  419434:	ldr	x9, [x8, #152]
  419438:	ldr	x9, [x9, #384]
  41943c:	ldr	x10, [x8, #160]
  419440:	add	x9, x9, x10
  419444:	ldrb	w11, [x9]
  419448:	orr	w11, w11, #0x4
  41944c:	strb	w11, [x9]
  419450:	ldr	x8, [sp, #64]
  419454:	ldr	x9, [x8, #152]
  419458:	ldr	x9, [x9, #296]
  41945c:	ldr	x10, [x8, #160]
  419460:	mov	x11, #0x50                  	// #80
  419464:	mul	x10, x11, x10
  419468:	add	x9, x9, x10
  41946c:	ldrb	w0, [x9, #32]
  419470:	ldr	x2, [x8, #160]
  419474:	ldr	x3, [x8, #152]
  419478:	mov	w1, #0x2                   	// #2
  41947c:	bl	419f2c <wcrtomb@plt+0x1717c>
  419480:	tbnz	w0, #0, 419488 <wcrtomb@plt+0x166d8>
  419484:	b	4194a8 <wcrtomb@plt+0x166f8>
  419488:	ldr	x8, [sp, #64]
  41948c:	ldr	x9, [x8, #152]
  419490:	ldr	x9, [x9, #384]
  419494:	ldr	x10, [x8, #160]
  419498:	add	x9, x9, x10
  41949c:	ldrb	w11, [x9]
  4194a0:	orr	w11, w11, #0x2
  4194a4:	strb	w11, [x9]
  4194a8:	ldr	x8, [sp, #64]
  4194ac:	ldr	x9, [x8, #152]
  4194b0:	ldr	x9, [x9, #296]
  4194b4:	ldr	x10, [x8, #160]
  4194b8:	mov	x11, #0x50                  	// #80
  4194bc:	mul	x10, x11, x10
  4194c0:	add	x9, x9, x10
  4194c4:	ldrb	w0, [x9, #32]
  4194c8:	ldr	x2, [x8, #160]
  4194cc:	ldr	x3, [x8, #152]
  4194d0:	mov	w1, #0x1                   	// #1
  4194d4:	bl	419f2c <wcrtomb@plt+0x1717c>
  4194d8:	tbnz	w0, #0, 4194e0 <wcrtomb@plt+0x16730>
  4194dc:	b	419500 <wcrtomb@plt+0x16750>
  4194e0:	ldr	x8, [sp, #64]
  4194e4:	ldr	x9, [x8, #152]
  4194e8:	ldr	x9, [x9, #384]
  4194ec:	ldr	x10, [x8, #160]
  4194f0:	add	x9, x9, x10
  4194f4:	ldrb	w11, [x9]
  4194f8:	orr	w11, w11, #0x1
  4194fc:	strb	w11, [x9]
  419500:	ldr	x8, [sp, #64]
  419504:	ldr	x9, [x8, #152]
  419508:	ldr	x1, [x9, #176]
  41950c:	sub	x0, x29, #0x30
  419510:	bl	41641c <wcrtomb@plt+0x1366c>
  419514:	ldr	x8, [sp, #64]
  419518:	str	xzr, [x8, #8]
  41951c:	ldr	x8, [sp, #64]
  419520:	ldr	x9, [x8, #8]
  419524:	ldr	x10, [x8, #152]
  419528:	ldr	x10, [x10, #296]
  41952c:	ldr	x11, [x8, #160]
  419530:	mov	x12, #0x50                  	// #80
  419534:	mul	x11, x12, x11
  419538:	add	x10, x10, x11
  41953c:	ldr	x10, [x10, #16]
  419540:	cmp	x9, x10
  419544:	b.ge	419630 <wcrtomb@plt+0x16880>  // b.tcont
  419548:	ldr	x8, [sp, #64]
  41954c:	str	xzr, [x8]
  419550:	ldr	x8, [sp, #64]
  419554:	ldr	x9, [x8]
  419558:	ldr	x10, [x8, #152]
  41955c:	ldr	x10, [x10, #320]
  419560:	ldr	x11, [x8, #152]
  419564:	ldr	x11, [x11, #296]
  419568:	ldr	x12, [x8, #160]
  41956c:	mov	x13, #0x50                  	// #80
  419570:	mul	x12, x13, x12
  419574:	add	x11, x11, x12
  419578:	ldr	x11, [x11, #8]
  41957c:	ldr	x12, [x8, #8]
  419580:	mov	x13, #0x10                  	// #16
  419584:	mul	x12, x13, x12
  419588:	ldr	x11, [x11, x12]
  41958c:	mov	x12, #0x18                  	// #24
  419590:	mul	x11, x12, x11
  419594:	add	x10, x10, x11
  419598:	ldr	x10, [x10, #8]
  41959c:	cmp	x9, x10
  4195a0:	b.ge	41961c <wcrtomb@plt+0x1686c>  // b.tcont
  4195a4:	ldr	x8, [sp, #64]
  4195a8:	ldr	x9, [x8, #152]
  4195ac:	ldr	x9, [x9, #320]
  4195b0:	ldr	x10, [x8, #152]
  4195b4:	ldr	x10, [x10, #296]
  4195b8:	ldr	x11, [x8, #160]
  4195bc:	mov	x12, #0x50                  	// #80
  4195c0:	mul	x11, x12, x11
  4195c4:	add	x10, x10, x11
  4195c8:	ldr	x10, [x10, #8]
  4195cc:	ldr	x11, [x8, #8]
  4195d0:	mov	x12, #0x10                  	// #16
  4195d4:	mul	x11, x12, x11
  4195d8:	ldr	x10, [x10, x11]
  4195dc:	mov	x11, #0x18                  	// #24
  4195e0:	mul	x10, x11, x10
  4195e4:	add	x9, x9, x10
  4195e8:	ldr	x9, [x9]
  4195ec:	ldr	x10, [x8]
  4195f0:	mul	x10, x12, x10
  4195f4:	add	x9, x9, x10
  4195f8:	ldr	x0, [x9]
  4195fc:	ldr	x1, [x9, #8]
  419600:	sub	x2, x29, #0x30
  419604:	bl	417dd0 <wcrtomb@plt+0x15020>
  419608:	ldr	x8, [sp, #64]
  41960c:	ldr	x9, [x8]
  419610:	add	x9, x9, #0x1
  419614:	str	x9, [x8]
  419618:	b	419550 <wcrtomb@plt+0x167a0>
  41961c:	ldr	x8, [sp, #64]
  419620:	ldr	x9, [x8, #8]
  419624:	add	x9, x9, #0x1
  419628:	str	x9, [x8, #8]
  41962c:	b	41951c <wcrtomb@plt+0x1676c>
  419630:	ldr	x8, [sp, #64]
  419634:	ldr	x9, [x8, #152]
  419638:	ldr	x1, [x9, #176]
  41963c:	sub	x0, x29, #0x48
  419640:	bl	41641c <wcrtomb@plt+0x1366c>
  419644:	add	x0, sp, #0xb8
  419648:	bl	414c24 <wcrtomb@plt+0x11e74>
  41964c:	str	xzr, [sp, #176]
  419650:	ldr	x8, [sp, #176]
  419654:	ldr	x9, [sp, #64]
  419658:	ldr	x10, [x9, #128]
  41965c:	cmp	x8, x10
  419660:	b.ge	419b4c <wcrtomb@plt+0x16d9c>  // b.tcont
  419664:	ldr	x8, [sp, #64]
  419668:	ldr	x9, [x8, #120]
  41966c:	ldr	x10, [sp, #176]
  419670:	ldr	q0, [x9, x10, lsl #4]
  419674:	str	q0, [sp, #128]
  419678:	mov	w11, #0x0                   	// #0
  41967c:	strb	w11, [sp, #127]
  419680:	ldr	x9, [x8, #152]
  419684:	ldr	x9, [x9, #144]
  419688:	ldr	x10, [sp, #128]
  41968c:	ldr	x9, [x9, x10, lsl #3]
  419690:	cmp	x9, #0x0
  419694:	cset	w11, lt  // lt = tstop
  419698:	tbnz	w11, #0, 419718 <wcrtomb@plt+0x16968>
  41969c:	ldr	x8, [sp, #64]
  4196a0:	ldr	x9, [x8, #152]
  4196a4:	ldr	x9, [x9, #144]
  4196a8:	ldr	x10, [sp, #128]
  4196ac:	ldr	x9, [x9, x10, lsl #3]
  4196b0:	cmp	x9, #0x100
  4196b4:	b.ge	419718 <wcrtomb@plt+0x16968>  // b.tcont
  4196b8:	add	x8, sp, #0x90
  4196bc:	mov	x0, x8
  4196c0:	str	x8, [sp, #40]
  4196c4:	bl	414dc0 <wcrtomb@plt+0x12010>
  4196c8:	ldr	x8, [sp, #64]
  4196cc:	ldr	x9, [x8, #152]
  4196d0:	ldr	x9, [x9, #144]
  4196d4:	ldr	x10, [sp, #128]
  4196d8:	ldr	x9, [x9, x10, lsl #3]
  4196dc:	mov	w0, w9
  4196e0:	ldr	x1, [sp, #40]
  4196e4:	bl	411934 <wcrtomb@plt+0xeb84>
  4196e8:	ldr	x8, [sp, #64]
  4196ec:	ldr	x10, [x8, #152]
  4196f0:	ldr	x10, [x10, #144]
  4196f4:	ldr	x11, [sp, #128]
  4196f8:	ldr	x10, [x10, x11, lsl #3]
  4196fc:	ldurb	w9, [x29, #-17]
  419700:	mov	w11, w9
  419704:	cmp	x10, x11
  419708:	b.ne	419714 <wcrtomb@plt+0x16964>  // b.any
  41970c:	mov	w8, #0x1                   	// #1
  419710:	strb	w8, [sp, #127]
  419714:	b	4198ac <wcrtomb@plt+0x16afc>
  419718:	ldr	x8, [sp, #64]
  41971c:	ldr	x9, [x8, #152]
  419720:	ldr	x9, [x9, #144]
  419724:	ldr	x10, [sp, #128]
  419728:	ldr	x9, [x9, x10, lsl #3]
  41972c:	cmp	x9, #0x114
  419730:	b.lt	419790 <wcrtomb@plt+0x169e0>  // b.tstop
  419734:	ldr	x8, [sp, #64]
  419738:	ldr	x9, [x8, #152]
  41973c:	ldr	x9, [x9]
  419740:	ldr	x10, [x8, #152]
  419744:	ldr	x10, [x10, #144]
  419748:	ldr	x11, [sp, #128]
  41974c:	ldr	x10, [x10, x11, lsl #3]
  419750:	subs	x10, x10, #0x114
  419754:	mov	x11, #0x20                  	// #32
  419758:	mul	x10, x11, x10
  41975c:	add	x9, x9, x10
  419760:	ldr	q0, [x9]
  419764:	add	x1, sp, #0x90
  419768:	str	q0, [sp, #144]
  41976c:	ldr	q0, [x9, #16]
  419770:	str	q0, [sp, #160]
  419774:	ldurb	w0, [x29, #-17]
  419778:	bl	411520 <wcrtomb@plt+0xe770>
  41977c:	tbnz	w0, #0, 419784 <wcrtomb@plt+0x169d4>
  419780:	b	41978c <wcrtomb@plt+0x169dc>
  419784:	mov	w8, #0x1                   	// #1
  419788:	strb	w8, [sp, #127]
  41978c:	b	4198ac <wcrtomb@plt+0x16afc>
  419790:	ldr	x8, [sp, #64]
  419794:	ldr	x9, [x8, #152]
  419798:	ldr	x9, [x9, #144]
  41979c:	ldr	x10, [sp, #128]
  4197a0:	ldr	x9, [x9, x10, lsl #3]
  4197a4:	cmp	x9, #0x10a
  4197a8:	b.ne	4198a8 <wcrtomb@plt+0x16af8>  // b.any
  4197ac:	ldr	x8, [sp, #64]
  4197b0:	ldr	x9, [x8, #152]
  4197b4:	ldr	x9, [x9]
  4197b8:	ldr	x10, [x8, #152]
  4197bc:	ldr	x10, [x10, #24]
  4197c0:	mov	x11, #0x20                  	// #32
  4197c4:	mul	x10, x11, x10
  4197c8:	add	x9, x9, x10
  4197cc:	ldr	q0, [x9]
  4197d0:	add	x1, sp, #0x90
  4197d4:	str	q0, [sp, #144]
  4197d8:	ldr	q0, [x9, #16]
  4197dc:	str	q0, [sp, #160]
  4197e0:	ldurb	w0, [x29, #-17]
  4197e4:	bl	411520 <wcrtomb@plt+0xe770>
  4197e8:	tbnz	w0, #0, 4197f0 <wcrtomb@plt+0x16a40>
  4197ec:	b	4197f8 <wcrtomb@plt+0x16a48>
  4197f0:	mov	w8, #0x1                   	// #1
  4197f4:	strb	w8, [sp, #127]
  4197f8:	ldr	w0, [sp, #136]
  4197fc:	ldr	x8, [sp, #64]
  419800:	ldr	x9, [x8, #152]
  419804:	ldr	x9, [x9, #296]
  419808:	ldr	x10, [x8, #160]
  41980c:	mov	x11, #0x50                  	// #80
  419810:	mul	x10, x11, x10
  419814:	add	x9, x9, x10
  419818:	ldrb	w1, [x9, #32]
  41981c:	mov	w2, #0x1                   	// #1
  419820:	bl	417fc8 <wcrtomb@plt+0x15218>
  419824:	tbnz	w0, #0, 41982c <wcrtomb@plt+0x16a7c>
  419828:	b	4198a4 <wcrtomb@plt+0x16af4>
  41982c:	ldr	x8, [sp, #64]
  419830:	ldr	x9, [x8, #152]
  419834:	ldr	x9, [x9, #296]
  419838:	ldr	x10, [x8, #160]
  41983c:	mov	x11, #0x50                  	// #80
  419840:	mul	x10, x11, x10
  419844:	add	x9, x9, x10
  419848:	ldr	x9, [x9, #56]
  41984c:	cbnz	x9, 419878 <wcrtomb@plt+0x16ac8>
  419850:	ldr	x8, [sp, #64]
  419854:	ldr	x9, [x8, #152]
  419858:	ldr	x9, [x9, #296]
  41985c:	ldr	x10, [x8, #160]
  419860:	mov	x11, #0x50                  	// #80
  419864:	mul	x10, x11, x10
  419868:	add	x9, x9, x10
  41986c:	add	x0, x9, #0x30
  419870:	mov	x1, #0x1                   	// #1
  419874:	bl	41641c <wcrtomb@plt+0x1366c>
  419878:	ldr	x8, [sp, #64]
  41987c:	ldr	x9, [x8, #152]
  419880:	ldr	x9, [x9, #296]
  419884:	ldr	x10, [x8, #160]
  419888:	mov	x11, #0x50                  	// #80
  41988c:	mul	x10, x11, x10
  419890:	add	x9, x9, x10
  419894:	add	x2, x9, #0x30
  419898:	ldr	x0, [sp, #128]
  41989c:	ldr	x1, [sp, #136]
  4198a0:	bl	417dd0 <wcrtomb@plt+0x15020>
  4198a4:	b	4198ac <wcrtomb@plt+0x16afc>
  4198a8:	b	419b3c <wcrtomb@plt+0x16d8c>
  4198ac:	ldr	w8, [sp, #136]
  4198b0:	cmp	w8, #0x1ff
  4198b4:	b.eq	419a84 <wcrtomb@plt+0x16cd4>  // b.none
  4198b8:	ldr	w0, [sp, #136]
  4198bc:	ldr	x8, [sp, #64]
  4198c0:	ldr	x9, [x8, #152]
  4198c4:	ldr	x9, [x9, #296]
  4198c8:	ldr	x10, [x8, #160]
  4198cc:	mov	x11, #0x50                  	// #80
  4198d0:	mul	x10, x11, x10
  4198d4:	add	x9, x9, x10
  4198d8:	ldrb	w1, [x9, #32]
  4198dc:	mov	w2, #0x4                   	// #4
  4198e0:	bl	417fc8 <wcrtomb@plt+0x15218>
  4198e4:	tbnz	w0, #0, 41993c <wcrtomb@plt+0x16b8c>
  4198e8:	str	wzr, [sp, #120]
  4198ec:	ldr	w8, [sp, #120]
  4198f0:	cmp	w8, #0x4
  4198f4:	b.ge	41993c <wcrtomb@plt+0x16b8c>  // b.tcont
  4198f8:	ldr	x8, [sp, #64]
  4198fc:	ldr	x9, [x8, #152]
  419900:	add	x9, x9, #0x3f0
  419904:	ldrsw	x10, [sp, #120]
  419908:	mov	x11, #0x8                   	// #8
  41990c:	ldr	x9, [x9, x10, lsl #3]
  419910:	ldrsw	x10, [sp, #120]
  419914:	mul	x10, x11, x10
  419918:	add	x11, sp, #0x90
  41991c:	add	x10, x11, x10
  419920:	ldr	x11, [x10]
  419924:	bic	x9, x11, x9
  419928:	str	x9, [x10]
  41992c:	ldr	w8, [sp, #120]
  419930:	add	w8, w8, #0x1
  419934:	str	w8, [sp, #120]
  419938:	b	4198ec <wcrtomb@plt+0x16b3c>
  41993c:	ldr	w0, [sp, #136]
  419940:	ldr	x8, [sp, #64]
  419944:	ldr	x9, [x8, #152]
  419948:	ldr	x9, [x9, #296]
  41994c:	ldr	x10, [x8, #160]
  419950:	mov	x11, #0x50                  	// #80
  419954:	mul	x10, x11, x10
  419958:	add	x9, x9, x10
  41995c:	ldrb	w1, [x9, #32]
  419960:	mov	w2, #0x2                   	// #2
  419964:	bl	417fc8 <wcrtomb@plt+0x15218>
  419968:	tbnz	w0, #0, 4199c0 <wcrtomb@plt+0x16c10>
  41996c:	str	wzr, [sp, #116]
  419970:	ldr	w8, [sp, #116]
  419974:	cmp	w8, #0x4
  419978:	b.ge	4199c0 <wcrtomb@plt+0x16c10>  // b.tcont
  41997c:	ldr	x8, [sp, #64]
  419980:	ldr	x9, [x8, #152]
  419984:	add	x9, x9, #0x3d0
  419988:	ldrsw	x10, [sp, #116]
  41998c:	mov	x11, #0x8                   	// #8
  419990:	ldr	x9, [x9, x10, lsl #3]
  419994:	ldrsw	x10, [sp, #116]
  419998:	mul	x10, x11, x10
  41999c:	add	x11, sp, #0x90
  4199a0:	add	x10, x11, x10
  4199a4:	ldr	x11, [x10]
  4199a8:	bic	x9, x11, x9
  4199ac:	str	x9, [x10]
  4199b0:	ldr	w8, [sp, #116]
  4199b4:	add	w8, w8, #0x1
  4199b8:	str	w8, [sp, #116]
  4199bc:	b	419970 <wcrtomb@plt+0x16bc0>
  4199c0:	ldr	w0, [sp, #136]
  4199c4:	ldr	x8, [sp, #64]
  4199c8:	ldr	x9, [x8, #152]
  4199cc:	ldr	x9, [x9, #296]
  4199d0:	ldr	x10, [x8, #160]
  4199d4:	mov	x11, #0x50                  	// #80
  4199d8:	mul	x10, x11, x10
  4199dc:	add	x9, x9, x10
  4199e0:	ldrb	w1, [x9, #32]
  4199e4:	mov	w2, #0x1                   	// #1
  4199e8:	bl	417fc8 <wcrtomb@plt+0x15218>
  4199ec:	tbnz	w0, #0, 419a58 <wcrtomb@plt+0x16ca8>
  4199f0:	str	wzr, [sp, #112]
  4199f4:	ldr	w8, [sp, #112]
  4199f8:	cmp	w8, #0x4
  4199fc:	b.ge	419a58 <wcrtomb@plt+0x16ca8>  // b.tcont
  419a00:	ldr	x8, [sp, #64]
  419a04:	ldr	x9, [x8, #152]
  419a08:	add	x9, x9, #0x3d0
  419a0c:	ldrsw	x10, [sp, #112]
  419a10:	mov	x11, #0x8                   	// #8
  419a14:	ldr	x9, [x9, x10, lsl #3]
  419a18:	ldr	x10, [x8, #152]
  419a1c:	add	x10, x10, #0x3f0
  419a20:	ldrsw	x12, [sp, #112]
  419a24:	ldr	x10, [x10, x12, lsl #3]
  419a28:	orr	x9, x9, x10
  419a2c:	ldrsw	x10, [sp, #112]
  419a30:	mul	x10, x11, x10
  419a34:	add	x11, sp, #0x90
  419a38:	add	x10, x11, x10
  419a3c:	ldr	x11, [x10]
  419a40:	and	x9, x11, x9
  419a44:	str	x9, [x10]
  419a48:	ldr	w8, [sp, #112]
  419a4c:	add	w8, w8, #0x1
  419a50:	str	w8, [sp, #112]
  419a54:	b	4199f4 <wcrtomb@plt+0x16c44>
  419a58:	add	x0, sp, #0x90
  419a5c:	bl	415a9c <wcrtomb@plt+0x12cec>
  419a60:	tbnz	w0, #0, 419a68 <wcrtomb@plt+0x16cb8>
  419a64:	b	419a6c <wcrtomb@plt+0x16cbc>
  419a68:	b	419b3c <wcrtomb@plt+0x16d8c>
  419a6c:	ldurb	w0, [x29, #-17]
  419a70:	add	x1, sp, #0x90
  419a74:	bl	411520 <wcrtomb@plt+0xe770>
  419a78:	tbnz	w0, #0, 419a84 <wcrtomb@plt+0x16cd4>
  419a7c:	mov	w8, #0x0                   	// #0
  419a80:	strb	w8, [sp, #127]
  419a84:	ldrb	w8, [sp, #127]
  419a88:	tbnz	w8, #0, 419a90 <wcrtomb@plt+0x16ce0>
  419a8c:	b	419af0 <wcrtomb@plt+0x16d40>
  419a90:	str	wzr, [sp, #108]
  419a94:	ldr	w8, [sp, #108]
  419a98:	cmp	w8, #0x4
  419a9c:	b.ge	419adc <wcrtomb@plt+0x16d2c>  // b.tcont
  419aa0:	ldrsw	x8, [sp, #108]
  419aa4:	mov	x9, #0x8                   	// #8
  419aa8:	add	x10, sp, #0x90
  419aac:	ldr	x8, [x10, x8, lsl #3]
  419ab0:	ldrsw	x10, [sp, #108]
  419ab4:	mul	x9, x9, x10
  419ab8:	add	x10, sp, #0xb8
  419abc:	add	x9, x10, x9
  419ac0:	ldr	x10, [x9]
  419ac4:	and	x8, x10, x8
  419ac8:	str	x8, [x9]
  419acc:	ldr	w8, [sp, #108]
  419ad0:	add	w8, w8, #0x1
  419ad4:	str	w8, [sp, #108]
  419ad8:	b	419a94 <wcrtomb@plt+0x16ce4>
  419adc:	ldr	x0, [sp, #128]
  419ae0:	ldr	x1, [sp, #136]
  419ae4:	sub	x2, x29, #0x48
  419ae8:	bl	416aa8 <wcrtomb@plt+0x13cf8>
  419aec:	b	419b3c <wcrtomb@plt+0x16d8c>
  419af0:	str	wzr, [sp, #104]
  419af4:	ldr	w8, [sp, #104]
  419af8:	cmp	w8, #0x4
  419afc:	b.ge	419b3c <wcrtomb@plt+0x16d8c>  // b.tcont
  419b00:	ldrsw	x8, [sp, #104]
  419b04:	mov	x9, #0x8                   	// #8
  419b08:	add	x10, sp, #0x90
  419b0c:	ldr	x8, [x10, x8, lsl #3]
  419b10:	ldrsw	x10, [sp, #104]
  419b14:	mul	x9, x9, x10
  419b18:	add	x10, sp, #0xb8
  419b1c:	add	x9, x10, x9
  419b20:	ldr	x10, [x9]
  419b24:	bic	x8, x10, x8
  419b28:	str	x8, [x9]
  419b2c:	ldr	w8, [sp, #104]
  419b30:	add	w8, w8, #0x1
  419b34:	str	w8, [sp, #104]
  419b38:	b	419af4 <wcrtomb@plt+0x16d44>
  419b3c:	ldr	x8, [sp, #176]
  419b40:	add	x8, x8, #0x1
  419b44:	str	x8, [sp, #176]
  419b48:	b	419650 <wcrtomb@plt+0x168a0>
  419b4c:	ldr	x8, [sp, #64]
  419b50:	ldr	x9, [x8, #152]
  419b54:	ldr	x1, [x9, #176]
  419b58:	sub	x0, x29, #0x60
  419b5c:	bl	41641c <wcrtomb@plt+0x1366c>
  419b60:	ldr	x8, [sp, #64]
  419b64:	ldr	x9, [x8, #104]
  419b68:	cmp	x9, #0x0
  419b6c:	cset	w10, le
  419b70:	tbnz	w10, #0, 419d7c <wcrtomb@plt+0x16fcc>
  419b74:	ldr	x8, [sp, #64]
  419b78:	ldr	x9, [x8, #152]
  419b7c:	ldrb	w10, [x9, #328]
  419b80:	tbnz	w10, #0, 419b88 <wcrtomb@plt+0x16dd8>
  419b84:	b	419c84 <wcrtomb@plt+0x16ed4>
  419b88:	ldr	x8, [sp, #64]
  419b8c:	ldr	x9, [x8, #152]
  419b90:	ldrb	w10, [x9, #1048]
  419b94:	mov	w11, #0x1                   	// #1
  419b98:	eor	w10, w10, #0x1
  419b9c:	and	w10, w10, w11
  419ba0:	strb	w10, [sp, #103]
  419ba4:	ldrb	w10, [sp, #103]
  419ba8:	tbnz	w10, #0, 419c40 <wcrtomb@plt+0x16e90>
  419bac:	mov	w8, #0x1                   	// #1
  419bb0:	strb	w8, [sp, #103]
  419bb4:	str	xzr, [sp, #88]
  419bb8:	ldrb	w8, [sp, #103]
  419bbc:	mov	w9, #0x0                   	// #0
  419bc0:	str	w9, [sp, #36]
  419bc4:	tbnz	w8, #0, 419bcc <wcrtomb@plt+0x16e1c>
  419bc8:	b	419be4 <wcrtomb@plt+0x16e34>
  419bcc:	ldr	x8, [sp, #88]
  419bd0:	ldr	x9, [sp, #64]
  419bd4:	ldr	x10, [x9, #104]
  419bd8:	cmp	x8, x10
  419bdc:	cset	w11, lt  // lt = tstop
  419be0:	str	w11, [sp, #36]
  419be4:	ldr	w8, [sp, #36]
  419be8:	tbnz	w8, #0, 419bf0 <wcrtomb@plt+0x16e40>
  419bec:	b	419c40 <wcrtomb@plt+0x16e90>
  419bf0:	ldr	x8, [sp, #64]
  419bf4:	ldr	x9, [x8, #152]
  419bf8:	ldr	x9, [x9, #280]
  419bfc:	ldr	x10, [x8, #96]
  419c00:	ldr	x11, [sp, #88]
  419c04:	mov	x12, #0x10                  	// #16
  419c08:	mul	x11, x12, x11
  419c0c:	ldr	x10, [x10, x11]
  419c10:	ldrb	w13, [x9, x10]
  419c14:	ldrb	w14, [sp, #103]
  419c18:	mov	w15, #0x1                   	// #1
  419c1c:	and	w14, w14, #0x1
  419c20:	tst	w14, w13
  419c24:	cset	w13, ne  // ne = any
  419c28:	and	w13, w13, w15
  419c2c:	strb	w13, [sp, #103]
  419c30:	ldr	x8, [sp, #88]
  419c34:	add	x8, x8, #0x1
  419c38:	str	x8, [sp, #88]
  419c3c:	b	419bb8 <wcrtomb@plt+0x16e08>
  419c40:	ldrb	w8, [sp, #103]
  419c44:	tbnz	w8, #0, 419c4c <wcrtomb@plt+0x16e9c>
  419c48:	b	419c84 <wcrtomb@plt+0x16ed4>
  419c4c:	ldr	x8, [sp, #64]
  419c50:	ldr	x9, [x8, #152]
  419c54:	ldr	x9, [x9, #296]
  419c58:	add	x0, x9, #0x8
  419c5c:	sub	x9, x29, #0x48
  419c60:	mov	x1, x9
  419c64:	sub	x10, x29, #0x60
  419c68:	mov	x2, x10
  419c6c:	str	x9, [sp, #24]
  419c70:	str	x10, [sp, #16]
  419c74:	bl	416468 <wcrtomb@plt+0x136b8>
  419c78:	ldr	x0, [sp, #16]
  419c7c:	ldr	x1, [sp, #24]
  419c80:	bl	4164a4 <wcrtomb@plt+0x136f4>
  419c84:	ldr	x8, [sp, #64]
  419c88:	ldr	x0, [x8, #152]
  419c8c:	add	x1, sp, #0xb8
  419c90:	bl	41a16c <wcrtomb@plt+0x173bc>
  419c94:	str	w0, [sp, #84]
  419c98:	ldr	x8, [sp, #64]
  419c9c:	ldr	x0, [x8, #152]
  419ca0:	sub	x1, x29, #0x48
  419ca4:	bl	416b78 <wcrtomb@plt+0x13dc8>
  419ca8:	str	w0, [sp, #80]
  419cac:	ldr	w9, [sp, #84]
  419cb0:	ldr	w10, [sp, #80]
  419cb4:	bic	w9, w9, w10
  419cb8:	cbz	w9, 419ce0 <wcrtomb@plt+0x16f30>
  419cbc:	ldr	x8, [sp, #64]
  419cc0:	ldr	x0, [x8, #152]
  419cc4:	ldr	w9, [sp, #80]
  419cc8:	eor	w2, w9, #0x7
  419ccc:	sub	x1, x29, #0x48
  419cd0:	bl	416bec <wcrtomb@plt+0x13e3c>
  419cd4:	ldr	x8, [sp, #64]
  419cd8:	str	x0, [x8, #64]
  419cdc:	b	419cec <wcrtomb@plt+0x16f3c>
  419ce0:	mov	x8, #0xffffffffffffffff    	// #-1
  419ce4:	ldr	x9, [sp, #64]
  419ce8:	str	x8, [x9, #64]
  419cec:	ldr	w8, [sp, #80]
  419cf0:	ldr	w9, [sp, #84]
  419cf4:	and	w8, w8, w9
  419cf8:	and	w8, w8, #0x4
  419cfc:	cbz	w8, 419d20 <wcrtomb@plt+0x16f70>
  419d00:	ldr	x8, [sp, #64]
  419d04:	ldr	x0, [x8, #152]
  419d08:	sub	x1, x29, #0x48
  419d0c:	mov	w2, #0x4                   	// #4
  419d10:	bl	416bec <wcrtomb@plt+0x13e3c>
  419d14:	ldr	x8, [sp, #64]
  419d18:	str	x0, [x8, #56]
  419d1c:	b	419d2c <wcrtomb@plt+0x16f7c>
  419d20:	ldr	x8, [sp, #64]
  419d24:	ldr	x9, [x8, #64]
  419d28:	str	x9, [x8, #56]
  419d2c:	ldr	w8, [sp, #80]
  419d30:	ldr	w9, [sp, #84]
  419d34:	and	w8, w8, w9
  419d38:	and	w8, w8, #0x2
  419d3c:	cbz	w8, 419d60 <wcrtomb@plt+0x16fb0>
  419d40:	ldr	x8, [sp, #64]
  419d44:	ldr	x0, [x8, #152]
  419d48:	sub	x1, x29, #0x48
  419d4c:	mov	w2, #0x2                   	// #2
  419d50:	bl	416bec <wcrtomb@plt+0x13e3c>
  419d54:	ldr	x8, [sp, #64]
  419d58:	str	x0, [x8, #48]
  419d5c:	b	419d6c <wcrtomb@plt+0x16fbc>
  419d60:	ldr	x8, [sp, #64]
  419d64:	ldr	x9, [x8, #64]
  419d68:	str	x9, [x8, #48]
  419d6c:	ldr	x8, [sp, #64]
  419d70:	ldr	x0, [x8, #152]
  419d74:	bl	418a9c <wcrtomb@plt+0x15cec>
  419d78:	b	419dd4 <wcrtomb@plt+0x17024>
  419d7c:	ldr	x8, [sp, #64]
  419d80:	ldr	x9, [x8, #152]
  419d84:	ldrb	w10, [x9, #328]
  419d88:	tbnz	w10, #0, 419d90 <wcrtomb@plt+0x16fe0>
  419d8c:	b	419dc0 <wcrtomb@plt+0x17010>
  419d90:	ldr	x8, [sp, #64]
  419d94:	str	xzr, [x8, #56]
  419d98:	ldr	x9, [x8, #152]
  419d9c:	ldr	w10, [x9, #364]
  419da0:	subs	w10, w10, #0x1
  419da4:	mov	w0, w10
  419da8:	sxtw	x9, w0
  419dac:	str	x9, [x8, #48]
  419db0:	ldr	x9, [x8, #152]
  419db4:	ldr	x9, [x9, #400]
  419db8:	str	x9, [x8, #64]
  419dbc:	b	419dd4 <wcrtomb@plt+0x17024>
  419dc0:	mov	x8, #0xffffffffffffffff    	// #-1
  419dc4:	ldr	x9, [sp, #64]
  419dc8:	str	x8, [x9, #56]
  419dcc:	str	x8, [x9, #48]
  419dd0:	str	x8, [x9, #64]
  419dd4:	str	wzr, [sp, #76]
  419dd8:	ldr	w8, [sp, #76]
  419ddc:	cmp	w8, #0x100
  419de0:	b.ge	419e88 <wcrtomb@plt+0x170d8>  // b.tcont
  419de4:	ldr	w0, [sp, #76]
  419de8:	add	x1, sp, #0xb8
  419dec:	bl	411520 <wcrtomb@plt+0xe770>
  419df0:	tbnz	w0, #0, 419df8 <wcrtomb@plt+0x17048>
  419df4:	b	419e78 <wcrtomb@plt+0x170c8>
  419df8:	ldr	x8, [sp, #64]
  419dfc:	ldr	x9, [x8, #152]
  419e00:	add	x9, x9, #0x1cc
  419e04:	ldrsw	x10, [sp, #76]
  419e08:	ldrb	w11, [x9, x10]
  419e0c:	cmp	w11, #0x2
  419e10:	str	w11, [sp, #12]
  419e14:	b.eq	419e4c <wcrtomb@plt+0x1709c>  // b.none
  419e18:	b	419e1c <wcrtomb@plt+0x1706c>
  419e1c:	ldr	w8, [sp, #12]
  419e20:	cmp	w8, #0x4
  419e24:	cset	w9, eq  // eq = none
  419e28:	eor	w9, w9, #0x1
  419e2c:	tbnz	w9, #0, 419e64 <wcrtomb@plt+0x170b4>
  419e30:	b	419e34 <wcrtomb@plt+0x17084>
  419e34:	ldr	x8, [sp, #64]
  419e38:	ldr	x9, [x8, #56]
  419e3c:	ldr	x10, [x8, #32]
  419e40:	ldrsw	x11, [sp, #76]
  419e44:	str	x9, [x10, x11, lsl #3]
  419e48:	b	419e78 <wcrtomb@plt+0x170c8>
  419e4c:	ldr	x8, [sp, #64]
  419e50:	ldr	x9, [x8, #48]
  419e54:	ldr	x10, [x8, #32]
  419e58:	ldrsw	x11, [sp, #76]
  419e5c:	str	x9, [x10, x11, lsl #3]
  419e60:	b	419e78 <wcrtomb@plt+0x170c8>
  419e64:	ldr	x8, [sp, #64]
  419e68:	ldr	x9, [x8, #64]
  419e6c:	ldr	x10, [x8, #32]
  419e70:	ldrsw	x11, [sp, #76]
  419e74:	str	x9, [x10, x11, lsl #3]
  419e78:	ldr	w8, [sp, #76]
  419e7c:	add	w8, w8, #0x1
  419e80:	str	w8, [sp, #76]
  419e84:	b	419dd8 <wcrtomb@plt+0x17028>
  419e88:	ldr	x8, [sp, #64]
  419e8c:	ldr	x0, [x8, #96]
  419e90:	bl	402b40 <free@plt>
  419e94:	ldr	x8, [sp, #64]
  419e98:	ldr	x0, [x8, #120]
  419e9c:	bl	402b40 <free@plt>
  419ea0:	ldr	x8, [sp, #64]
  419ea4:	ldr	x0, [x8, #72]
  419ea8:	bl	402b40 <free@plt>
  419eac:	ldr	x8, [sp, #64]
  419eb0:	ldr	x9, [x8, #152]
  419eb4:	ldrb	w0, [x9, #459]
  419eb8:	add	x1, sp, #0xb8
  419ebc:	bl	411520 <wcrtomb@plt+0xe770>
  419ec0:	tbnz	w0, #0, 419ec8 <wcrtomb@plt+0x17118>
  419ec4:	b	419f08 <wcrtomb@plt+0x17158>
  419ec8:	ldr	x8, [sp, #64]
  419ecc:	ldr	x9, [x8, #32]
  419ed0:	ldr	x10, [x8, #152]
  419ed4:	ldrb	w11, [x10, #459]
  419ed8:	mov	w10, w11
  419edc:	ldr	x9, [x9, x10, lsl #3]
  419ee0:	ldr	x10, [x8, #152]
  419ee4:	ldr	x10, [x10, #392]
  419ee8:	ldr	x12, [x8, #160]
  419eec:	str	x9, [x10, x12, lsl #3]
  419ef0:	ldr	x9, [x8, #32]
  419ef4:	ldr	x10, [x8, #152]
  419ef8:	ldrb	w11, [x10, #459]
  419efc:	mov	w10, w11
  419f00:	mov	x12, #0xffffffffffffffff    	// #-1
  419f04:	str	x12, [x9, x10, lsl #3]
  419f08:	ldr	x8, [sp, #64]
  419f0c:	ldr	x9, [x8, #32]
  419f10:	ldurb	w10, [x29, #-17]
  419f14:	mov	w11, w10
  419f18:	ldr	x0, [x9, x11, lsl #3]
  419f1c:	ldr	x28, [sp, #400]
  419f20:	ldp	x29, x30, [sp, #384]
  419f24:	add	sp, sp, #0x1a0
  419f28:	ret
  419f2c:	sub	sp, sp, #0x30
  419f30:	stp	x29, x30, [sp, #32]
  419f34:	add	x29, sp, #0x20
  419f38:	stur	w0, [x29, #-4]
  419f3c:	stur	w1, [x29, #-8]
  419f40:	str	x2, [sp, #16]
  419f44:	str	x3, [sp, #8]
  419f48:	ldr	x8, [sp, #8]
  419f4c:	ldr	x8, [x8, #296]
  419f50:	ldr	x9, [sp, #16]
  419f54:	mov	x10, #0x50                  	// #80
  419f58:	mul	x9, x10, x9
  419f5c:	add	x8, x8, x9
  419f60:	ldrh	w0, [x8, #34]
  419f64:	ldur	w1, [x29, #-4]
  419f68:	ldur	w2, [x29, #-8]
  419f6c:	bl	417fc8 <wcrtomb@plt+0x15218>
  419f70:	and	w0, w0, #0x1
  419f74:	ldp	x29, x30, [sp, #32]
  419f78:	add	sp, sp, #0x30
  419f7c:	ret
  419f80:	sub	sp, sp, #0x30
  419f84:	stp	x29, x30, [sp, #32]
  419f88:	add	x29, sp, #0x20
  419f8c:	stur	x0, [x29, #-8]
  419f90:	str	x1, [sp, #16]
  419f94:	str	x2, [sp, #8]
  419f98:	ldur	x8, [x29, #-8]
  419f9c:	ldr	x8, [x8, #368]
  419fa0:	ldr	x9, [sp, #16]
  419fa4:	mov	x10, #0x8                   	// #8
  419fa8:	mul	x9, x10, x9
  419fac:	add	x8, x8, x9
  419fb0:	ldr	x8, [x8]
  419fb4:	cbz	x8, 419fdc <wcrtomb@plt+0x1722c>
  419fb8:	ldur	x8, [x29, #-8]
  419fbc:	ldr	x8, [x8, #368]
  419fc0:	ldr	x9, [sp, #16]
  419fc4:	mov	x10, #0x8                   	// #8
  419fc8:	mul	x9, x10, x9
  419fcc:	add	x8, x8, x9
  419fd0:	ldr	x8, [x8]
  419fd4:	str	x8, [sp]
  419fd8:	b	41a0c8 <wcrtomb@plt+0x17318>
  419fdc:	ldur	x8, [x29, #-8]
  419fe0:	ldr	x8, [x8, #376]
  419fe4:	ldr	x9, [sp, #16]
  419fe8:	mov	x10, #0x8                   	// #8
  419fec:	mul	x9, x10, x9
  419ff0:	add	x8, x8, x9
  419ff4:	ldr	x8, [x8]
  419ff8:	cbz	x8, 41a020 <wcrtomb@plt+0x17270>
  419ffc:	ldur	x8, [x29, #-8]
  41a000:	ldr	x8, [x8, #376]
  41a004:	ldr	x9, [sp, #16]
  41a008:	mov	x10, #0x8                   	// #8
  41a00c:	mul	x9, x10, x9
  41a010:	add	x8, x8, x9
  41a014:	ldr	x8, [x8]
  41a018:	str	x8, [sp]
  41a01c:	b	41a0c8 <wcrtomb@plt+0x17318>
  41a020:	ldr	x0, [sp, #16]
  41a024:	ldur	x1, [x29, #-8]
  41a028:	ldr	x8, [sp, #8]
  41a02c:	ldr	x8, [x8]
  41a030:	ldrb	w2, [x8]
  41a034:	bl	41920c <wcrtomb@plt+0x1645c>
  41a038:	ldur	x8, [x29, #-8]
  41a03c:	ldr	x8, [x8, #368]
  41a040:	ldr	x9, [sp, #16]
  41a044:	mov	x10, #0x8                   	// #8
  41a048:	mul	x9, x10, x9
  41a04c:	add	x8, x8, x9
  41a050:	ldr	x8, [x8]
  41a054:	cbz	x8, 41a07c <wcrtomb@plt+0x172cc>
  41a058:	ldur	x8, [x29, #-8]
  41a05c:	ldr	x8, [x8, #368]
  41a060:	ldr	x9, [sp, #16]
  41a064:	mov	x10, #0x8                   	// #8
  41a068:	mul	x9, x10, x9
  41a06c:	add	x8, x8, x9
  41a070:	ldr	x8, [x8]
  41a074:	str	x8, [sp]
  41a078:	b	41a0c8 <wcrtomb@plt+0x17318>
  41a07c:	ldur	x8, [x29, #-8]
  41a080:	ldr	x8, [x8, #376]
  41a084:	ldr	x9, [sp, #16]
  41a088:	mov	x10, #0x8                   	// #8
  41a08c:	mul	x9, x10, x9
  41a090:	add	x8, x8, x9
  41a094:	ldr	x8, [x8]
  41a098:	str	x8, [sp]
  41a09c:	ldr	x8, [sp]
  41a0a0:	cbz	x8, 41a0a8 <wcrtomb@plt+0x172f8>
  41a0a4:	b	41a0c8 <wcrtomb@plt+0x17318>
  41a0a8:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a0ac:	add	x0, x0, #0x328
  41a0b0:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a0b4:	add	x1, x1, #0x206
  41a0b8:	mov	w2, #0xc93                 	// #3219
  41a0bc:	adrp	x3, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a0c0:	add	x3, x3, #0x355
  41a0c4:	bl	402cf0 <__assert_fail@plt>
  41a0c8:	ldr	x8, [sp]
  41a0cc:	ldr	x9, [sp, #8]
  41a0d0:	ldr	x9, [x9]
  41a0d4:	ldrb	w10, [x9]
  41a0d8:	mov	w9, w10
  41a0dc:	ldr	x8, [x8, x9, lsl #3]
  41a0e0:	mov	x9, #0xfffffffffffffffe    	// #-2
  41a0e4:	cmp	x8, x9
  41a0e8:	b.ne	41a104 <wcrtomb@plt+0x17354>  // b.any
  41a0ec:	ldr	x0, [sp, #16]
  41a0f0:	ldur	x1, [x29, #-8]
  41a0f4:	ldr	x8, [sp, #8]
  41a0f8:	ldr	x8, [x8]
  41a0fc:	ldrb	w2, [x8]
  41a100:	bl	41920c <wcrtomb@plt+0x1645c>
  41a104:	ldr	x8, [sp]
  41a108:	ldr	x9, [sp, #8]
  41a10c:	ldr	x10, [x9]
  41a110:	add	x11, x10, #0x1
  41a114:	str	x11, [x9]
  41a118:	ldrb	w12, [x10]
  41a11c:	mov	w9, w12
  41a120:	ldr	x0, [x8, x9, lsl #3]
  41a124:	ldp	x29, x30, [sp, #32]
  41a128:	add	sp, sp, #0x30
  41a12c:	ret
  41a130:	sub	sp, sp, #0x10
  41a134:	str	x0, [sp, #8]
  41a138:	str	x1, [sp]
  41a13c:	ldr	x8, [sp]
  41a140:	ldr	x8, [x8, #296]
  41a144:	ldr	x9, [sp, #8]
  41a148:	mov	x10, #0x50                  	// #80
  41a14c:	mul	x9, x10, x9
  41a150:	add	x8, x8, x9
  41a154:	ldrh	w11, [x8, #34]
  41a158:	cmp	w11, #0x0
  41a15c:	cset	w11, ne  // ne = any
  41a160:	and	w0, w11, #0x1
  41a164:	add	sp, sp, #0x10
  41a168:	ret
  41a16c:	sub	sp, sp, #0x20
  41a170:	str	x0, [sp, #24]
  41a174:	str	x1, [sp, #16]
  41a178:	str	wzr, [sp, #12]
  41a17c:	str	wzr, [sp, #8]
  41a180:	ldr	w8, [sp, #8]
  41a184:	cmp	w8, #0x4
  41a188:	b.ge	41a240 <wcrtomb@plt+0x17490>  // b.tcont
  41a18c:	ldr	x8, [sp, #16]
  41a190:	ldrsw	x9, [sp, #8]
  41a194:	ldr	x8, [x8, x9, lsl #3]
  41a198:	ldr	x9, [sp, #24]
  41a19c:	add	x9, x9, #0x3f0
  41a1a0:	ldrsw	x10, [sp, #8]
  41a1a4:	ldr	x9, [x9, x10, lsl #3]
  41a1a8:	and	x8, x8, x9
  41a1ac:	cbz	x8, 41a1bc <wcrtomb@plt+0x1740c>
  41a1b0:	ldr	w8, [sp, #12]
  41a1b4:	orr	w8, w8, #0x4
  41a1b8:	str	w8, [sp, #12]
  41a1bc:	ldr	x8, [sp, #16]
  41a1c0:	ldrsw	x9, [sp, #8]
  41a1c4:	ldr	x8, [x8, x9, lsl #3]
  41a1c8:	ldr	x9, [sp, #24]
  41a1cc:	add	x9, x9, #0x3d0
  41a1d0:	ldrsw	x10, [sp, #8]
  41a1d4:	ldr	x9, [x9, x10, lsl #3]
  41a1d8:	and	x8, x8, x9
  41a1dc:	cbz	x8, 41a1ec <wcrtomb@plt+0x1743c>
  41a1e0:	ldr	w8, [sp, #12]
  41a1e4:	orr	w8, w8, #0x2
  41a1e8:	str	w8, [sp, #12]
  41a1ec:	ldr	x8, [sp, #16]
  41a1f0:	ldrsw	x9, [sp, #8]
  41a1f4:	ldr	x8, [x8, x9, lsl #3]
  41a1f8:	ldr	x9, [sp, #24]
  41a1fc:	add	x9, x9, #0x3d0
  41a200:	ldrsw	x10, [sp, #8]
  41a204:	ldr	x9, [x9, x10, lsl #3]
  41a208:	ldr	x10, [sp, #24]
  41a20c:	add	x10, x10, #0x3f0
  41a210:	ldrsw	x11, [sp, #8]
  41a214:	ldr	x10, [x10, x11, lsl #3]
  41a218:	orr	x9, x9, x10
  41a21c:	bic	x8, x8, x9
  41a220:	cbz	x8, 41a230 <wcrtomb@plt+0x17480>
  41a224:	ldr	w8, [sp, #12]
  41a228:	orr	w8, w8, #0x1
  41a22c:	str	w8, [sp, #12]
  41a230:	ldr	w8, [sp, #8]
  41a234:	add	w8, w8, #0x1
  41a238:	str	w8, [sp, #8]
  41a23c:	b	41a180 <wcrtomb@plt+0x173d0>
  41a240:	ldr	w0, [sp, #12]
  41a244:	add	sp, sp, #0x20
  41a248:	ret
  41a24c:	sub	sp, sp, #0x30
  41a250:	stp	x29, x30, [sp, #32]
  41a254:	add	x29, sp, #0x20
  41a258:	mov	w8, #0xffffffff            	// #-1
  41a25c:	stur	x0, [x29, #-8]
  41a260:	sturb	w1, [x29, #-9]
  41a264:	ldur	x9, [x29, #-8]
  41a268:	add	x9, x9, #0x51c
  41a26c:	ldurb	w10, [x29, #-9]
  41a270:	mov	w11, w10
  41a274:	ldr	w10, [x9, x11, lsl #2]
  41a278:	mov	w12, #0x0                   	// #0
  41a27c:	cmp	w10, w8
  41a280:	str	w12, [sp, #16]
  41a284:	b.eq	41a2c0 <wcrtomb@plt+0x17510>  // b.none
  41a288:	bl	402b20 <__ctype_b_loc@plt>
  41a28c:	ldr	x8, [x0]
  41a290:	ldurb	w9, [x29, #-9]
  41a294:	ldrh	w9, [x8, w9, sxtw #1]
  41a298:	and	w9, w9, #0x8
  41a29c:	mov	w10, #0x1                   	// #1
  41a2a0:	str	w10, [sp, #12]
  41a2a4:	cbnz	w9, 41a2b8 <wcrtomb@plt+0x17508>
  41a2a8:	ldurb	w8, [x29, #-9]
  41a2ac:	cmp	w8, #0x5f
  41a2b0:	cset	w8, eq  // eq = none
  41a2b4:	str	w8, [sp, #12]
  41a2b8:	ldr	w8, [sp, #12]
  41a2bc:	str	w8, [sp, #16]
  41a2c0:	ldr	w8, [sp, #16]
  41a2c4:	and	w0, w8, #0x1
  41a2c8:	ldp	x29, x30, [sp, #32]
  41a2cc:	add	sp, sp, #0x30
  41a2d0:	ret
  41a2d4:	sub	sp, sp, #0x50
  41a2d8:	stp	x29, x30, [sp, #64]
  41a2dc:	add	x29, sp, #0x40
  41a2e0:	mov	w8, #0x1                   	// #1
  41a2e4:	stur	x0, [x29, #-8]
  41a2e8:	str	w8, [sp, #20]
  41a2ec:	bl	402b60 <__ctype_get_mb_cur_max@plt>
  41a2f0:	cmp	x0, #0x1
  41a2f4:	cset	w8, hi  // hi = pmore
  41a2f8:	ldur	x9, [x29, #-8]
  41a2fc:	ldr	w10, [sp, #20]
  41a300:	and	w8, w8, w10
  41a304:	strb	w8, [x9]
  41a308:	ldur	x9, [x29, #-8]
  41a30c:	ldrb	w8, [x9]
  41a310:	and	w0, w8, #0x1
  41a314:	bl	41a418 <wcrtomb@plt+0x17668>
  41a318:	ldur	x9, [x29, #-8]
  41a31c:	ldr	w8, [sp, #20]
  41a320:	and	w10, w0, w8
  41a324:	strb	w10, [x9, #1]
  41a328:	bl	41a4e0 <wcrtomb@plt+0x17730>
  41a32c:	ldur	x9, [x29, #-8]
  41a330:	ldr	w8, [sp, #20]
  41a334:	and	w10, w0, w8
  41a338:	strb	w10, [x9, #2]
  41a33c:	stur	wzr, [x29, #-12]
  41a340:	ldur	w8, [x29, #-12]
  41a344:	cmp	w8, #0xff
  41a348:	b.gt	41a40c <wcrtomb@plt+0x1765c>
  41a34c:	ldur	w8, [x29, #-12]
  41a350:	sub	x1, x29, #0xd
  41a354:	sturb	w8, [x29, #-13]
  41a358:	ldur	w8, [x29, #-12]
  41a35c:	sturb	w8, [x29, #-14]
  41a360:	sub	x3, x29, #0x18
  41a364:	stur	xzr, [x29, #-24]
  41a368:	sub	x0, x29, #0x1c
  41a36c:	mov	x2, #0x1                   	// #1
  41a370:	bl	41da58 <wcrtomb@plt+0x1aca8>
  41a374:	str	x0, [sp, #24]
  41a378:	ldr	x9, [sp, #24]
  41a37c:	cmp	x9, #0x1
  41a380:	b.hi	41a390 <wcrtomb@plt+0x175e0>  // b.pmore
  41a384:	mov	w8, #0x1                   	// #1
  41a388:	str	w8, [sp, #16]
  41a38c:	b	41a3a8 <wcrtomb@plt+0x175f8>
  41a390:	ldr	x8, [sp, #24]
  41a394:	mov	x9, xzr
  41a398:	subs	x8, x9, x8
  41a39c:	mov	w10, wzr
  41a3a0:	subs	w8, w10, w8
  41a3a4:	str	w8, [sp, #16]
  41a3a8:	ldr	w8, [sp, #16]
  41a3ac:	ldur	x9, [x29, #-8]
  41a3b0:	add	x9, x9, #0x3
  41a3b4:	ldurb	w10, [x29, #-14]
  41a3b8:	mov	w11, w10
  41a3bc:	add	x9, x9, x11
  41a3c0:	strb	w8, [x9]
  41a3c4:	ldr	x9, [sp, #24]
  41a3c8:	cmp	x9, #0x1
  41a3cc:	b.hi	41a3dc <wcrtomb@plt+0x1762c>  // b.pmore
  41a3d0:	ldur	w8, [x29, #-28]
  41a3d4:	str	w8, [sp, #12]
  41a3d8:	b	41a3e4 <wcrtomb@plt+0x17634>
  41a3dc:	mov	w8, #0xffffffff            	// #-1
  41a3e0:	str	w8, [sp, #12]
  41a3e4:	ldr	w8, [sp, #12]
  41a3e8:	ldur	x9, [x29, #-8]
  41a3ec:	add	x9, x9, #0x104
  41a3f0:	ldurb	w10, [x29, #-14]
  41a3f4:	mov	w11, w10
  41a3f8:	str	w8, [x9, x11, lsl #2]
  41a3fc:	ldur	w8, [x29, #-12]
  41a400:	add	w8, w8, #0x1
  41a404:	stur	w8, [x29, #-12]
  41a408:	b	41a340 <wcrtomb@plt+0x17590>
  41a40c:	ldp	x29, x30, [sp, #64]
  41a410:	add	sp, sp, #0x50
  41a414:	ret
  41a418:	sub	sp, sp, #0x20
  41a41c:	stp	x29, x30, [sp, #16]
  41a420:	add	x29, sp, #0x10
  41a424:	mov	w8, #0x1                   	// #1
  41a428:	and	w8, w0, w8
  41a42c:	sturb	w8, [x29, #-2]
  41a430:	ldurb	w8, [x29, #-2]
  41a434:	tbnz	w8, #0, 41a43c <wcrtomb@plt+0x1768c>
  41a438:	b	41a44c <wcrtomb@plt+0x1769c>
  41a43c:	mov	w8, wzr
  41a440:	and	w8, w8, #0x1
  41a444:	sturb	w8, [x29, #-1]
  41a448:	b	41a4cc <wcrtomb@plt+0x1771c>
  41a44c:	str	wzr, [sp, #8]
  41a450:	ldr	w8, [sp, #8]
  41a454:	cmp	w8, #0xff
  41a458:	b.ge	41a4c0 <wcrtomb@plt+0x17710>  // b.tcont
  41a45c:	ldr	w8, [sp, #8]
  41a460:	add	x9, sp, #0x6
  41a464:	strb	w8, [sp, #6]
  41a468:	mov	w8, #0x0                   	// #0
  41a46c:	strb	w8, [x9, #1]
  41a470:	ldr	w10, [sp, #8]
  41a474:	add	w10, w10, #0x1
  41a478:	add	x11, sp, #0x4
  41a47c:	strb	w10, [sp, #4]
  41a480:	strb	w8, [x11, #1]
  41a484:	mov	x0, x9
  41a488:	mov	x1, x11
  41a48c:	bl	402c70 <strcoll@plt>
  41a490:	mov	w8, wzr
  41a494:	cmp	w8, w0
  41a498:	cset	w8, gt
  41a49c:	tbnz	w8, #0, 41a4b0 <wcrtomb@plt+0x17700>
  41a4a0:	mov	w8, wzr
  41a4a4:	and	w8, w8, #0x1
  41a4a8:	sturb	w8, [x29, #-1]
  41a4ac:	b	41a4cc <wcrtomb@plt+0x1771c>
  41a4b0:	ldr	w8, [sp, #8]
  41a4b4:	add	w8, w8, #0x1
  41a4b8:	str	w8, [sp, #8]
  41a4bc:	b	41a450 <wcrtomb@plt+0x176a0>
  41a4c0:	mov	w8, #0x1                   	// #1
  41a4c4:	and	w8, w8, #0x1
  41a4c8:	sturb	w8, [x29, #-1]
  41a4cc:	ldurb	w8, [x29, #-1]
  41a4d0:	and	w0, w8, #0x1
  41a4d4:	ldp	x29, x30, [sp, #16]
  41a4d8:	add	sp, sp, #0x20
  41a4dc:	ret
  41a4e0:	sub	sp, sp, #0x30
  41a4e4:	stp	x29, x30, [sp, #32]
  41a4e8:	add	x29, sp, #0x20
  41a4ec:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a4f0:	add	x1, x1, #0x3d0
  41a4f4:	mov	x2, #0x2                   	// #2
  41a4f8:	sub	x0, x29, #0x4
  41a4fc:	add	x3, sp, #0x10
  41a500:	str	xzr, [sp, #16]
  41a504:	bl	41da58 <wcrtomb@plt+0x1aca8>
  41a508:	mov	w8, #0x0                   	// #0
  41a50c:	cmp	x0, #0x2
  41a510:	str	w8, [sp, #12]
  41a514:	b.ne	41a528 <wcrtomb@plt+0x17778>  // b.any
  41a518:	ldur	w8, [x29, #-4]
  41a51c:	cmp	w8, #0x100
  41a520:	cset	w8, eq  // eq = none
  41a524:	str	w8, [sp, #12]
  41a528:	ldr	w8, [sp, #12]
  41a52c:	and	w0, w8, #0x1
  41a530:	ldp	x29, x30, [sp, #32]
  41a534:	add	sp, sp, #0x30
  41a538:	ret
  41a53c:	sub	sp, sp, #0x40
  41a540:	stp	x29, x30, [sp, #48]
  41a544:	add	x29, sp, #0x30
  41a548:	stur	w0, [x29, #-4]
  41a54c:	stur	x1, [x29, #-16]
  41a550:	str	wzr, [sp, #24]
  41a554:	ldur	w0, [x29, #-4]
  41a558:	bl	402ca0 <towupper@plt>
  41a55c:	str	w0, [sp, #20]
  41a560:	ldr	w0, [sp, #20]
  41a564:	bl	402d60 <towlower@plt>
  41a568:	str	w0, [sp, #16]
  41a56c:	ldr	w8, [sp, #20]
  41a570:	ldur	w9, [x29, #-4]
  41a574:	cmp	w8, w9
  41a578:	b.eq	41a598 <wcrtomb@plt+0x177e8>  // b.none
  41a57c:	ldr	w8, [sp, #20]
  41a580:	ldur	x9, [x29, #-16]
  41a584:	ldrsw	x10, [sp, #24]
  41a588:	mov	w11, w10
  41a58c:	add	w11, w11, #0x1
  41a590:	str	w11, [sp, #24]
  41a594:	str	w8, [x9, x10, lsl #2]
  41a598:	ldr	w8, [sp, #16]
  41a59c:	ldr	w9, [sp, #20]
  41a5a0:	cmp	w8, w9
  41a5a4:	b.eq	41a5e8 <wcrtomb@plt+0x17838>  // b.none
  41a5a8:	ldr	w8, [sp, #16]
  41a5ac:	ldur	w9, [x29, #-4]
  41a5b0:	cmp	w8, w9
  41a5b4:	b.eq	41a5e8 <wcrtomb@plt+0x17838>  // b.none
  41a5b8:	ldr	w0, [sp, #16]
  41a5bc:	bl	402ca0 <towupper@plt>
  41a5c0:	ldr	w8, [sp, #20]
  41a5c4:	cmp	w0, w8
  41a5c8:	b.ne	41a5e8 <wcrtomb@plt+0x17838>  // b.any
  41a5cc:	ldr	w8, [sp, #16]
  41a5d0:	ldur	x9, [x29, #-16]
  41a5d4:	ldrsw	x10, [sp, #24]
  41a5d8:	mov	w11, w10
  41a5dc:	add	w11, w11, #0x1
  41a5e0:	str	w11, [sp, #24]
  41a5e4:	str	w8, [x9, x10, lsl #2]
  41a5e8:	stur	wzr, [x29, #-20]
  41a5ec:	ldursw	x8, [x29, #-20]
  41a5f0:	cmp	x8, #0x13
  41a5f4:	b.cs	41a67c <wcrtomb@plt+0x178cc>  // b.hs, b.nlast
  41a5f8:	ldursw	x8, [x29, #-20]
  41a5fc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a600:	add	x9, x9, #0x3aa
  41a604:	ldrsh	w10, [x9, x8, lsl #1]
  41a608:	str	w10, [sp, #12]
  41a60c:	ldr	w10, [sp, #12]
  41a610:	ldr	w11, [sp, #16]
  41a614:	cmp	w10, w11
  41a618:	b.eq	41a66c <wcrtomb@plt+0x178bc>  // b.none
  41a61c:	ldr	w8, [sp, #12]
  41a620:	ldr	w9, [sp, #20]
  41a624:	cmp	w8, w9
  41a628:	b.eq	41a66c <wcrtomb@plt+0x178bc>  // b.none
  41a62c:	ldr	w8, [sp, #12]
  41a630:	ldur	w9, [x29, #-4]
  41a634:	cmp	w8, w9
  41a638:	b.eq	41a66c <wcrtomb@plt+0x178bc>  // b.none
  41a63c:	ldr	w0, [sp, #12]
  41a640:	bl	402ca0 <towupper@plt>
  41a644:	ldr	w8, [sp, #20]
  41a648:	cmp	w0, w8
  41a64c:	b.ne	41a66c <wcrtomb@plt+0x178bc>  // b.any
  41a650:	ldr	w8, [sp, #12]
  41a654:	ldur	x9, [x29, #-16]
  41a658:	ldrsw	x10, [sp, #24]
  41a65c:	mov	w11, w10
  41a660:	add	w11, w11, #0x1
  41a664:	str	w11, [sp, #24]
  41a668:	str	w8, [x9, x10, lsl #2]
  41a66c:	ldur	w8, [x29, #-20]
  41a670:	add	w8, w8, #0x1
  41a674:	stur	w8, [x29, #-20]
  41a678:	b	41a5ec <wcrtomb@plt+0x1783c>
  41a67c:	ldr	w0, [sp, #24]
  41a680:	ldp	x29, x30, [sp, #48]
  41a684:	add	sp, sp, #0x40
  41a688:	ret
  41a68c:	sub	sp, sp, #0x20
  41a690:	stp	x29, x30, [sp, #16]
  41a694:	add	x29, sp, #0x10
  41a698:	mov	w0, #0xe                   	// #14
  41a69c:	bl	402850 <nl_langinfo@plt>
  41a6a0:	str	x0, [sp, #8]
  41a6a4:	ldr	x8, [sp, #8]
  41a6a8:	cbnz	x8, 41a6b8 <wcrtomb@plt+0x17908>
  41a6ac:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  41a6b0:	add	x8, x8, #0x301
  41a6b4:	str	x8, [sp, #8]
  41a6b8:	ldr	x8, [sp, #8]
  41a6bc:	ldrb	w9, [x8]
  41a6c0:	cbnz	w9, 41a6d0 <wcrtomb@plt+0x17920>
  41a6c4:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a6c8:	add	x8, x8, #0x3d3
  41a6cc:	str	x8, [sp, #8]
  41a6d0:	ldr	x0, [sp, #8]
  41a6d4:	ldp	x29, x30, [sp, #16]
  41a6d8:	add	sp, sp, #0x20
  41a6dc:	ret
  41a6e0:	sub	sp, sp, #0x30
  41a6e4:	stp	x29, x30, [sp, #32]
  41a6e8:	add	x29, sp, #0x20
  41a6ec:	stur	x0, [x29, #-8]
  41a6f0:	ldur	x8, [x29, #-8]
  41a6f4:	cbnz	x8, 41a714 <wcrtomb@plt+0x17964>
  41a6f8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a6fc:	add	x8, x8, #0x500
  41a700:	ldr	x1, [x8]
  41a704:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a708:	add	x0, x0, #0x3d9
  41a70c:	bl	402700 <fputs@plt>
  41a710:	bl	402a70 <abort@plt>
  41a714:	ldur	x0, [x29, #-8]
  41a718:	mov	w1, #0x2f                  	// #47
  41a71c:	bl	402a40 <strrchr@plt>
  41a720:	str	x0, [sp, #16]
  41a724:	ldr	x8, [sp, #16]
  41a728:	cbz	x8, 41a73c <wcrtomb@plt+0x1798c>
  41a72c:	ldr	x8, [sp, #16]
  41a730:	add	x8, x8, #0x1
  41a734:	str	x8, [sp]
  41a738:	b	41a744 <wcrtomb@plt+0x17994>
  41a73c:	ldur	x8, [x29, #-8]
  41a740:	str	x8, [sp]
  41a744:	ldr	x8, [sp]
  41a748:	str	x8, [sp, #8]
  41a74c:	ldr	x8, [sp, #8]
  41a750:	ldur	x9, [x29, #-8]
  41a754:	subs	x8, x8, x9
  41a758:	cmp	x8, #0x7
  41a75c:	b.lt	41a7bc <wcrtomb@plt+0x17a0c>  // b.tstop
  41a760:	ldr	x8, [sp, #8]
  41a764:	mov	x9, #0xfffffffffffffff9    	// #-7
  41a768:	add	x0, x8, x9
  41a76c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a770:	add	x1, x1, #0x411
  41a774:	mov	x2, #0x7                   	// #7
  41a778:	bl	402900 <strncmp@plt>
  41a77c:	cbnz	w0, 41a7bc <wcrtomb@plt+0x17a0c>
  41a780:	ldr	x8, [sp, #8]
  41a784:	stur	x8, [x29, #-8]
  41a788:	ldr	x0, [sp, #8]
  41a78c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41a790:	add	x1, x1, #0x419
  41a794:	mov	x2, #0x3                   	// #3
  41a798:	bl	402900 <strncmp@plt>
  41a79c:	cbnz	w0, 41a7bc <wcrtomb@plt+0x17a0c>
  41a7a0:	ldr	x8, [sp, #8]
  41a7a4:	add	x8, x8, #0x3
  41a7a8:	stur	x8, [x29, #-8]
  41a7ac:	ldur	x8, [x29, #-8]
  41a7b0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a7b4:	add	x9, x9, #0x528
  41a7b8:	str	x8, [x9]
  41a7bc:	ldur	x8, [x29, #-8]
  41a7c0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a7c4:	add	x9, x9, #0x798
  41a7c8:	str	x8, [x9]
  41a7cc:	ldur	x8, [x29, #-8]
  41a7d0:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a7d4:	add	x9, x9, #0x4f8
  41a7d8:	str	x8, [x9]
  41a7dc:	ldp	x29, x30, [sp, #32]
  41a7e0:	add	sp, sp, #0x30
  41a7e4:	ret
  41a7e8:	sub	sp, sp, #0x70
  41a7ec:	stp	x29, x30, [sp, #96]
  41a7f0:	add	x29, sp, #0x60
  41a7f4:	add	x8, sp, #0x18
  41a7f8:	stur	x0, [x29, #-16]
  41a7fc:	stur	w1, [x29, #-20]
  41a800:	stur	x2, [x29, #-32]
  41a804:	stur	w3, [x29, #-36]
  41a808:	stur	w4, [x29, #-40]
  41a80c:	ldur	x0, [x29, #-16]
  41a810:	ldur	w1, [x29, #-20]
  41a814:	ldur	w2, [x29, #-40]
  41a818:	mov	x3, x8
  41a81c:	bl	436148 <_obstack_memory_used@@Base+0x17fac>
  41a820:	str	w0, [sp, #20]
  41a824:	ldr	w9, [sp, #20]
  41a828:	cbz	w9, 41a838 <wcrtomb@plt+0x17a88>
  41a82c:	mov	w8, #0xfffffffe            	// #-2
  41a830:	stur	w8, [x29, #-4]
  41a834:	b	41a864 <wcrtomb@plt+0x17ab4>
  41a838:	ldur	x1, [x29, #-32]
  41a83c:	ldur	w2, [x29, #-36]
  41a840:	add	x8, sp, #0x18
  41a844:	mov	x0, x8
  41a848:	str	x8, [sp, #8]
  41a84c:	bl	4362a4 <_obstack_memory_used@@Base+0x18108>
  41a850:	str	w0, [sp, #20]
  41a854:	ldr	x0, [sp, #8]
  41a858:	bl	4360fc <_obstack_memory_used@@Base+0x17f60>
  41a85c:	ldr	w9, [sp, #20]
  41a860:	stur	w9, [x29, #-4]
  41a864:	ldur	w0, [x29, #-4]
  41a868:	ldp	x29, x30, [sp, #96]
  41a86c:	add	sp, sp, #0x70
  41a870:	ret
  41a874:	sub	sp, sp, #0x40
  41a878:	stp	x29, x30, [sp, #48]
  41a87c:	add	x29, sp, #0x30
  41a880:	stur	x0, [x29, #-8]
  41a884:	bl	402d00 <__errno_location@plt>
  41a888:	ldr	w8, [x0]
  41a88c:	stur	w8, [x29, #-12]
  41a890:	ldur	x9, [x29, #-8]
  41a894:	cbz	x9, 41a8a4 <wcrtomb@plt+0x17af4>
  41a898:	ldur	x8, [x29, #-8]
  41a89c:	str	x8, [sp, #16]
  41a8a0:	b	41a8b0 <wcrtomb@plt+0x17b00>
  41a8a4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a8a8:	add	x8, x8, #0x7a0
  41a8ac:	str	x8, [sp, #16]
  41a8b0:	ldr	x8, [sp, #16]
  41a8b4:	mov	x0, x8
  41a8b8:	mov	x1, #0x38                  	// #56
  41a8bc:	bl	41d984 <wcrtomb@plt+0x1abd4>
  41a8c0:	str	x0, [sp, #24]
  41a8c4:	ldur	w9, [x29, #-12]
  41a8c8:	str	w9, [sp, #12]
  41a8cc:	bl	402d00 <__errno_location@plt>
  41a8d0:	ldr	w9, [sp, #12]
  41a8d4:	str	w9, [x0]
  41a8d8:	ldr	x0, [sp, #24]
  41a8dc:	ldp	x29, x30, [sp, #48]
  41a8e0:	add	sp, sp, #0x40
  41a8e4:	ret
  41a8e8:	sub	sp, sp, #0x10
  41a8ec:	str	x0, [sp, #8]
  41a8f0:	ldr	x8, [sp, #8]
  41a8f4:	cbz	x8, 41a904 <wcrtomb@plt+0x17b54>
  41a8f8:	ldr	x8, [sp, #8]
  41a8fc:	str	x8, [sp]
  41a900:	b	41a910 <wcrtomb@plt+0x17b60>
  41a904:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a908:	add	x8, x8, #0x7a0
  41a90c:	str	x8, [sp]
  41a910:	ldr	x8, [sp]
  41a914:	ldr	w0, [x8]
  41a918:	add	sp, sp, #0x10
  41a91c:	ret
  41a920:	sub	sp, sp, #0x20
  41a924:	str	x0, [sp, #24]
  41a928:	str	w1, [sp, #20]
  41a92c:	ldr	w8, [sp, #20]
  41a930:	ldr	x9, [sp, #24]
  41a934:	str	w8, [sp, #16]
  41a938:	cbz	x9, 41a948 <wcrtomb@plt+0x17b98>
  41a93c:	ldr	x8, [sp, #24]
  41a940:	str	x8, [sp, #8]
  41a944:	b	41a954 <wcrtomb@plt+0x17ba4>
  41a948:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a94c:	add	x8, x8, #0x7a0
  41a950:	str	x8, [sp, #8]
  41a954:	ldr	x8, [sp, #8]
  41a958:	ldr	w9, [sp, #16]
  41a95c:	str	w9, [x8]
  41a960:	add	sp, sp, #0x20
  41a964:	ret
  41a968:	sub	sp, sp, #0x30
  41a96c:	str	x0, [sp, #40]
  41a970:	strb	w1, [sp, #39]
  41a974:	str	w2, [sp, #32]
  41a978:	ldrb	w8, [sp, #39]
  41a97c:	strb	w8, [sp, #31]
  41a980:	ldr	x9, [sp, #40]
  41a984:	cbz	x9, 41a994 <wcrtomb@plt+0x17be4>
  41a988:	ldr	x8, [sp, #40]
  41a98c:	str	x8, [sp]
  41a990:	b	41a9a0 <wcrtomb@plt+0x17bf0>
  41a994:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41a998:	add	x8, x8, #0x7a0
  41a99c:	str	x8, [sp]
  41a9a0:	ldr	x8, [sp]
  41a9a4:	add	x8, x8, #0x8
  41a9a8:	ldrb	w9, [sp, #31]
  41a9ac:	mov	w10, w9
  41a9b0:	mov	x11, #0x20                  	// #32
  41a9b4:	udiv	x10, x10, x11
  41a9b8:	mov	x12, #0x4                   	// #4
  41a9bc:	mul	x10, x12, x10
  41a9c0:	add	x8, x8, x10
  41a9c4:	str	x8, [sp, #16]
  41a9c8:	ldrb	w9, [sp, #31]
  41a9cc:	mov	w8, w9
  41a9d0:	udiv	x10, x8, x11
  41a9d4:	mul	x10, x10, x11
  41a9d8:	subs	x8, x8, x10
  41a9dc:	str	w8, [sp, #12]
  41a9e0:	ldr	x10, [sp, #16]
  41a9e4:	ldr	w8, [x10]
  41a9e8:	ldr	w9, [sp, #12]
  41a9ec:	lsr	w8, w8, w9
  41a9f0:	and	w8, w8, #0x1
  41a9f4:	str	w8, [sp, #8]
  41a9f8:	ldr	w8, [sp, #32]
  41a9fc:	and	w8, w8, #0x1
  41aa00:	ldr	w9, [sp, #8]
  41aa04:	eor	w8, w8, w9
  41aa08:	ldr	w9, [sp, #12]
  41aa0c:	lsl	w8, w8, w9
  41aa10:	ldr	x10, [sp, #16]
  41aa14:	ldr	w9, [x10]
  41aa18:	eor	w8, w9, w8
  41aa1c:	str	w8, [x10]
  41aa20:	ldr	w0, [sp, #8]
  41aa24:	add	sp, sp, #0x30
  41aa28:	ret
  41aa2c:	sub	sp, sp, #0x10
  41aa30:	str	x0, [sp, #8]
  41aa34:	str	w1, [sp, #4]
  41aa38:	ldr	x8, [sp, #8]
  41aa3c:	cbnz	x8, 41aa4c <wcrtomb@plt+0x17c9c>
  41aa40:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41aa44:	add	x8, x8, #0x7a0
  41aa48:	str	x8, [sp, #8]
  41aa4c:	ldr	x8, [sp, #8]
  41aa50:	ldr	w9, [x8, #4]
  41aa54:	str	w9, [sp]
  41aa58:	ldr	w9, [sp, #4]
  41aa5c:	ldr	x8, [sp, #8]
  41aa60:	str	w9, [x8, #4]
  41aa64:	ldr	w0, [sp]
  41aa68:	add	sp, sp, #0x10
  41aa6c:	ret
  41aa70:	sub	sp, sp, #0x30
  41aa74:	stp	x29, x30, [sp, #32]
  41aa78:	add	x29, sp, #0x20
  41aa7c:	stur	x0, [x29, #-8]
  41aa80:	str	x1, [sp, #16]
  41aa84:	str	x2, [sp, #8]
  41aa88:	ldur	x8, [x29, #-8]
  41aa8c:	cbnz	x8, 41aa9c <wcrtomb@plt+0x17cec>
  41aa90:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41aa94:	add	x8, x8, #0x7a0
  41aa98:	stur	x8, [x29, #-8]
  41aa9c:	ldur	x8, [x29, #-8]
  41aaa0:	mov	w9, #0xa                   	// #10
  41aaa4:	str	w9, [x8]
  41aaa8:	ldr	x8, [sp, #16]
  41aaac:	cbz	x8, 41aab8 <wcrtomb@plt+0x17d08>
  41aab0:	ldr	x8, [sp, #8]
  41aab4:	cbnz	x8, 41aabc <wcrtomb@plt+0x17d0c>
  41aab8:	bl	402a70 <abort@plt>
  41aabc:	ldr	x8, [sp, #16]
  41aac0:	ldur	x9, [x29, #-8]
  41aac4:	str	x8, [x9, #40]
  41aac8:	ldr	x8, [sp, #8]
  41aacc:	ldur	x9, [x29, #-8]
  41aad0:	str	x8, [x9, #48]
  41aad4:	ldp	x29, x30, [sp, #32]
  41aad8:	add	sp, sp, #0x30
  41aadc:	ret
  41aae0:	sub	sp, sp, #0x70
  41aae4:	stp	x29, x30, [sp, #96]
  41aae8:	add	x29, sp, #0x60
  41aaec:	stur	x0, [x29, #-8]
  41aaf0:	stur	x1, [x29, #-16]
  41aaf4:	stur	x2, [x29, #-24]
  41aaf8:	stur	x3, [x29, #-32]
  41aafc:	stur	x4, [x29, #-40]
  41ab00:	ldur	x8, [x29, #-40]
  41ab04:	cbz	x8, 41ab14 <wcrtomb@plt+0x17d64>
  41ab08:	ldur	x8, [x29, #-40]
  41ab0c:	str	x8, [sp, #24]
  41ab10:	b	41ab20 <wcrtomb@plt+0x17d70>
  41ab14:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41ab18:	add	x8, x8, #0x7a0
  41ab1c:	str	x8, [sp, #24]
  41ab20:	ldr	x8, [sp, #24]
  41ab24:	str	x8, [sp, #48]
  41ab28:	bl	402d00 <__errno_location@plt>
  41ab2c:	ldr	w9, [x0]
  41ab30:	str	w9, [sp, #44]
  41ab34:	ldur	x0, [x29, #-8]
  41ab38:	ldur	x1, [x29, #-16]
  41ab3c:	ldur	x2, [x29, #-24]
  41ab40:	ldur	x3, [x29, #-32]
  41ab44:	ldr	x8, [sp, #48]
  41ab48:	ldr	w4, [x8]
  41ab4c:	ldr	x8, [sp, #48]
  41ab50:	ldr	w5, [x8, #4]
  41ab54:	ldr	x8, [sp, #48]
  41ab58:	add	x6, x8, #0x8
  41ab5c:	ldr	x8, [sp, #48]
  41ab60:	ldr	x7, [x8, #40]
  41ab64:	ldr	x8, [sp, #48]
  41ab68:	ldr	x8, [x8, #48]
  41ab6c:	mov	x10, sp
  41ab70:	str	x8, [x10]
  41ab74:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41ab78:	str	x0, [sp, #32]
  41ab7c:	ldr	w9, [sp, #44]
  41ab80:	str	w9, [sp, #20]
  41ab84:	bl	402d00 <__errno_location@plt>
  41ab88:	ldr	w9, [sp, #20]
  41ab8c:	str	w9, [x0]
  41ab90:	ldr	x0, [sp, #32]
  41ab94:	ldp	x29, x30, [sp, #96]
  41ab98:	add	sp, sp, #0x70
  41ab9c:	ret
  41aba0:	sub	sp, sp, #0x130
  41aba4:	stp	x29, x30, [sp, #272]
  41aba8:	str	x28, [sp, #288]
  41abac:	add	x29, sp, #0x110
  41abb0:	ldr	x8, [x29, #32]
  41abb4:	mov	x9, xzr
  41abb8:	mov	w10, #0x0                   	// #0
  41abbc:	mov	w11, #0x1                   	// #1
  41abc0:	mov	w12, #0x1                   	// #1
  41abc4:	stur	x0, [x29, #-16]
  41abc8:	stur	x1, [x29, #-24]
  41abcc:	stur	x2, [x29, #-32]
  41abd0:	stur	x3, [x29, #-40]
  41abd4:	stur	w4, [x29, #-44]
  41abd8:	stur	w5, [x29, #-48]
  41abdc:	stur	x6, [x29, #-56]
  41abe0:	stur	x7, [x29, #-64]
  41abe4:	stur	x8, [x29, #-72]
  41abe8:	stur	xzr, [x29, #-88]
  41abec:	stur	xzr, [x29, #-96]
  41abf0:	stur	x9, [x29, #-104]
  41abf4:	stur	xzr, [x29, #-112]
  41abf8:	sturb	w10, [x29, #-113]
  41abfc:	str	w10, [sp, #84]
  41ac00:	str	w11, [sp, #80]
  41ac04:	str	w12, [sp, #76]
  41ac08:	bl	402b60 <__ctype_get_mb_cur_max@plt>
  41ac0c:	cmp	x0, #0x1
  41ac10:	cset	w10, eq  // eq = none
  41ac14:	ldr	w11, [sp, #76]
  41ac18:	and	w10, w10, w11
  41ac1c:	sturb	w10, [x29, #-114]
  41ac20:	ldur	w10, [x29, #-48]
  41ac24:	tst	w10, #0x2
  41ac28:	cset	w10, ne  // ne = any
  41ac2c:	and	w10, w10, w11
  41ac30:	sturb	w10, [x29, #-115]
  41ac34:	ldr	w10, [sp, #84]
  41ac38:	sturb	w10, [x29, #-116]
  41ac3c:	sturb	w10, [x29, #-117]
  41ac40:	ldr	w12, [sp, #80]
  41ac44:	sturb	w12, [x29, #-118]
  41ac48:	ldur	w8, [x29, #-44]
  41ac4c:	subs	w8, w8, #0x0
  41ac50:	mov	w9, w8
  41ac54:	ubfx	x9, x9, #0, #32
  41ac58:	cmp	x9, #0xa
  41ac5c:	str	x9, [sp, #64]
  41ac60:	b.hi	41ae30 <wcrtomb@plt+0x18080>  // b.pmore
  41ac64:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ac68:	add	x8, x8, #0x420
  41ac6c:	ldr	x11, [sp, #64]
  41ac70:	ldrsw	x10, [x8, x11, lsl #2]
  41ac74:	add	x9, x8, x10
  41ac78:	br	x9
  41ac7c:	mov	w8, #0x5                   	// #5
  41ac80:	stur	w8, [x29, #-44]
  41ac84:	mov	w8, #0x1                   	// #1
  41ac88:	sturb	w8, [x29, #-115]
  41ac8c:	ldurb	w8, [x29, #-115]
  41ac90:	tbnz	w8, #0, 41acc4 <wcrtomb@plt+0x17f14>
  41ac94:	ldur	x8, [x29, #-88]
  41ac98:	ldur	x9, [x29, #-24]
  41ac9c:	cmp	x8, x9
  41aca0:	b.cs	41acb8 <wcrtomb@plt+0x17f08>  // b.hs, b.nlast
  41aca4:	ldur	x8, [x29, #-16]
  41aca8:	ldur	x9, [x29, #-88]
  41acac:	add	x8, x8, x9
  41acb0:	mov	w10, #0x22                  	// #34
  41acb4:	strb	w10, [x8]
  41acb8:	ldur	x8, [x29, #-88]
  41acbc:	add	x8, x8, #0x1
  41acc0:	stur	x8, [x29, #-88]
  41acc4:	mov	w8, #0x1                   	// #1
  41acc8:	sturb	w8, [x29, #-113]
  41accc:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41acd0:	add	x9, x9, #0x204
  41acd4:	stur	x9, [x29, #-104]
  41acd8:	mov	x9, #0x1                   	// #1
  41acdc:	stur	x9, [x29, #-112]
  41ace0:	b	41ae34 <wcrtomb@plt+0x18084>
  41ace4:	mov	w8, #0x1                   	// #1
  41ace8:	sturb	w8, [x29, #-113]
  41acec:	mov	w8, #0x0                   	// #0
  41acf0:	sturb	w8, [x29, #-115]
  41acf4:	b	41ae34 <wcrtomb@plt+0x18084>
  41acf8:	ldur	w8, [x29, #-44]
  41acfc:	cmp	w8, #0xa
  41ad00:	b.eq	41ad2c <wcrtomb@plt+0x17f7c>  // b.none
  41ad04:	ldur	w1, [x29, #-44]
  41ad08:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ad0c:	add	x0, x0, #0x714
  41ad10:	bl	41c978 <wcrtomb@plt+0x19bc8>
  41ad14:	stur	x0, [x29, #-64]
  41ad18:	ldur	w1, [x29, #-44]
  41ad1c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x18e64>
  41ad20:	add	x0, x0, #0xf96
  41ad24:	bl	41c978 <wcrtomb@plt+0x19bc8>
  41ad28:	stur	x0, [x29, #-72]
  41ad2c:	ldurb	w8, [x29, #-115]
  41ad30:	tbnz	w8, #0, 41ad8c <wcrtomb@plt+0x17fdc>
  41ad34:	ldur	x8, [x29, #-64]
  41ad38:	stur	x8, [x29, #-104]
  41ad3c:	ldur	x8, [x29, #-104]
  41ad40:	ldrb	w9, [x8]
  41ad44:	cbz	w9, 41ad8c <wcrtomb@plt+0x17fdc>
  41ad48:	ldur	x8, [x29, #-88]
  41ad4c:	ldur	x9, [x29, #-24]
  41ad50:	cmp	x8, x9
  41ad54:	b.cs	41ad70 <wcrtomb@plt+0x17fc0>  // b.hs, b.nlast
  41ad58:	ldur	x8, [x29, #-104]
  41ad5c:	ldrb	w9, [x8]
  41ad60:	ldur	x8, [x29, #-16]
  41ad64:	ldur	x10, [x29, #-88]
  41ad68:	add	x8, x8, x10
  41ad6c:	strb	w9, [x8]
  41ad70:	ldur	x8, [x29, #-88]
  41ad74:	add	x8, x8, #0x1
  41ad78:	stur	x8, [x29, #-88]
  41ad7c:	ldur	x8, [x29, #-104]
  41ad80:	add	x8, x8, #0x1
  41ad84:	stur	x8, [x29, #-104]
  41ad88:	b	41ad3c <wcrtomb@plt+0x17f8c>
  41ad8c:	mov	w8, #0x1                   	// #1
  41ad90:	sturb	w8, [x29, #-113]
  41ad94:	ldur	x9, [x29, #-72]
  41ad98:	stur	x9, [x29, #-104]
  41ad9c:	ldur	x0, [x29, #-104]
  41ada0:	bl	4026f0 <strlen@plt>
  41ada4:	stur	x0, [x29, #-112]
  41ada8:	b	41ae34 <wcrtomb@plt+0x18084>
  41adac:	mov	w8, #0x1                   	// #1
  41adb0:	sturb	w8, [x29, #-113]
  41adb4:	mov	w8, #0x1                   	// #1
  41adb8:	sturb	w8, [x29, #-115]
  41adbc:	ldurb	w8, [x29, #-115]
  41adc0:	tbnz	w8, #0, 41adcc <wcrtomb@plt+0x1801c>
  41adc4:	mov	w8, #0x1                   	// #1
  41adc8:	sturb	w8, [x29, #-113]
  41adcc:	mov	w8, #0x2                   	// #2
  41add0:	stur	w8, [x29, #-44]
  41add4:	ldurb	w8, [x29, #-115]
  41add8:	tbnz	w8, #0, 41ae0c <wcrtomb@plt+0x1805c>
  41addc:	ldur	x8, [x29, #-88]
  41ade0:	ldur	x9, [x29, #-24]
  41ade4:	cmp	x8, x9
  41ade8:	b.cs	41ae00 <wcrtomb@plt+0x18050>  // b.hs, b.nlast
  41adec:	ldur	x8, [x29, #-16]
  41adf0:	ldur	x9, [x29, #-88]
  41adf4:	add	x8, x8, x9
  41adf8:	mov	w10, #0x27                  	// #39
  41adfc:	strb	w10, [x8]
  41ae00:	ldur	x8, [x29, #-88]
  41ae04:	add	x8, x8, #0x1
  41ae08:	stur	x8, [x29, #-88]
  41ae0c:	adrp	x8, 437000 <_obstack_memory_used@@Base+0x18e64>
  41ae10:	add	x8, x8, #0xf96
  41ae14:	stur	x8, [x29, #-104]
  41ae18:	mov	x8, #0x1                   	// #1
  41ae1c:	stur	x8, [x29, #-112]
  41ae20:	b	41ae34 <wcrtomb@plt+0x18084>
  41ae24:	mov	w8, #0x0                   	// #0
  41ae28:	sturb	w8, [x29, #-115]
  41ae2c:	b	41ae34 <wcrtomb@plt+0x18084>
  41ae30:	bl	402a70 <abort@plt>
  41ae34:	stur	xzr, [x29, #-80]
  41ae38:	ldur	x8, [x29, #-40]
  41ae3c:	mov	x9, #0xffffffffffffffff    	// #-1
  41ae40:	cmp	x8, x9
  41ae44:	b.ne	41ae68 <wcrtomb@plt+0x180b8>  // b.any
  41ae48:	ldur	x8, [x29, #-32]
  41ae4c:	ldur	x9, [x29, #-80]
  41ae50:	ldrb	w10, [x8, x9]
  41ae54:	cmp	w10, #0x0
  41ae58:	cset	w10, eq  // eq = none
  41ae5c:	and	w10, w10, #0x1
  41ae60:	str	w10, [sp, #60]
  41ae64:	b	41ae80 <wcrtomb@plt+0x180d0>
  41ae68:	ldur	x8, [x29, #-80]
  41ae6c:	ldur	x9, [x29, #-40]
  41ae70:	cmp	x8, x9
  41ae74:	cset	w10, eq  // eq = none
  41ae78:	and	w10, w10, #0x1
  41ae7c:	str	w10, [sp, #60]
  41ae80:	ldr	w8, [sp, #60]
  41ae84:	cmp	w8, #0x0
  41ae88:	cset	w8, ne  // ne = any
  41ae8c:	eor	w8, w8, #0x1
  41ae90:	tbnz	w8, #0, 41ae98 <wcrtomb@plt+0x180e8>
  41ae94:	b	41bccc <wcrtomb@plt+0x18f1c>
  41ae98:	mov	w8, #0x0                   	// #0
  41ae9c:	sturb	w8, [x29, #-121]
  41aea0:	sturb	w8, [x29, #-122]
  41aea4:	sturb	w8, [x29, #-123]
  41aea8:	ldurb	w8, [x29, #-113]
  41aeac:	tbnz	w8, #0, 41aeb4 <wcrtomb@plt+0x18104>
  41aeb0:	b	41af58 <wcrtomb@plt+0x181a8>
  41aeb4:	ldur	w8, [x29, #-44]
  41aeb8:	cmp	w8, #0x2
  41aebc:	b.eq	41af58 <wcrtomb@plt+0x181a8>  // b.none
  41aec0:	ldur	x8, [x29, #-112]
  41aec4:	cbz	x8, 41af58 <wcrtomb@plt+0x181a8>
  41aec8:	ldur	x8, [x29, #-80]
  41aecc:	ldur	x9, [x29, #-112]
  41aed0:	add	x8, x8, x9
  41aed4:	ldur	x9, [x29, #-40]
  41aed8:	mov	x10, #0xffffffffffffffff    	// #-1
  41aedc:	cmp	x9, x10
  41aee0:	str	x8, [sp, #48]
  41aee4:	b.ne	41af0c <wcrtomb@plt+0x1815c>  // b.any
  41aee8:	ldur	x8, [x29, #-112]
  41aeec:	mov	x9, #0x1                   	// #1
  41aef0:	cmp	x9, x8
  41aef4:	b.cs	41af0c <wcrtomb@plt+0x1815c>  // b.hs, b.nlast
  41aef8:	ldur	x0, [x29, #-32]
  41aefc:	bl	4026f0 <strlen@plt>
  41af00:	stur	x0, [x29, #-40]
  41af04:	str	x0, [sp, #40]
  41af08:	b	41af14 <wcrtomb@plt+0x18164>
  41af0c:	ldur	x8, [x29, #-40]
  41af10:	str	x8, [sp, #40]
  41af14:	ldr	x8, [sp, #40]
  41af18:	ldr	x9, [sp, #48]
  41af1c:	cmp	x9, x8
  41af20:	b.hi	41af58 <wcrtomb@plt+0x181a8>  // b.pmore
  41af24:	ldur	x8, [x29, #-32]
  41af28:	ldur	x9, [x29, #-80]
  41af2c:	add	x0, x8, x9
  41af30:	ldur	x1, [x29, #-104]
  41af34:	ldur	x2, [x29, #-112]
  41af38:	bl	402ae0 <memcmp@plt>
  41af3c:	cbnz	w0, 41af58 <wcrtomb@plt+0x181a8>
  41af40:	ldurb	w8, [x29, #-115]
  41af44:	tbnz	w8, #0, 41af4c <wcrtomb@plt+0x1819c>
  41af48:	b	41af50 <wcrtomb@plt+0x181a0>
  41af4c:	b	41be04 <wcrtomb@plt+0x19054>
  41af50:	mov	w8, #0x1                   	// #1
  41af54:	sturb	w8, [x29, #-121]
  41af58:	ldur	x8, [x29, #-32]
  41af5c:	ldur	x9, [x29, #-80]
  41af60:	add	x8, x8, x9
  41af64:	ldrb	w10, [x8]
  41af68:	sturb	w10, [x29, #-119]
  41af6c:	ldurb	w10, [x29, #-119]
  41af70:	subs	w10, w10, #0x0
  41af74:	mov	w8, w10
  41af78:	ubfx	x8, x8, #0, #32
  41af7c:	cmp	x8, #0x7e
  41af80:	str	x8, [sp, #32]
  41af84:	b.hi	41b57c <wcrtomb@plt+0x187cc>  // b.pmore
  41af88:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41af8c:	add	x8, x8, #0x44c
  41af90:	ldr	x11, [sp, #32]
  41af94:	ldrsw	x10, [x8, x11, lsl #2]
  41af98:	add	x9, x8, x10
  41af9c:	br	x9
  41afa0:	ldurb	w8, [x29, #-113]
  41afa4:	tbnz	w8, #0, 41afac <wcrtomb@plt+0x181fc>
  41afa8:	b	41b160 <wcrtomb@plt+0x183b0>
  41afac:	ldurb	w8, [x29, #-115]
  41afb0:	tbnz	w8, #0, 41afb8 <wcrtomb@plt+0x18208>
  41afb4:	b	41afbc <wcrtomb@plt+0x1820c>
  41afb8:	b	41be04 <wcrtomb@plt+0x19054>
  41afbc:	mov	w8, #0x1                   	// #1
  41afc0:	sturb	w8, [x29, #-122]
  41afc4:	ldur	w8, [x29, #-44]
  41afc8:	cmp	w8, #0x2
  41afcc:	b.ne	41b070 <wcrtomb@plt+0x182c0>  // b.any
  41afd0:	ldurb	w8, [x29, #-116]
  41afd4:	tbnz	w8, #0, 41b070 <wcrtomb@plt+0x182c0>
  41afd8:	ldur	x8, [x29, #-88]
  41afdc:	ldur	x9, [x29, #-24]
  41afe0:	cmp	x8, x9
  41afe4:	b.cs	41affc <wcrtomb@plt+0x1824c>  // b.hs, b.nlast
  41afe8:	ldur	x8, [x29, #-16]
  41afec:	ldur	x9, [x29, #-88]
  41aff0:	add	x8, x8, x9
  41aff4:	mov	w10, #0x27                  	// #39
  41aff8:	strb	w10, [x8]
  41affc:	ldur	x8, [x29, #-88]
  41b000:	add	x8, x8, #0x1
  41b004:	stur	x8, [x29, #-88]
  41b008:	ldur	x8, [x29, #-88]
  41b00c:	ldur	x9, [x29, #-24]
  41b010:	cmp	x8, x9
  41b014:	b.cs	41b02c <wcrtomb@plt+0x1827c>  // b.hs, b.nlast
  41b018:	ldur	x8, [x29, #-16]
  41b01c:	ldur	x9, [x29, #-88]
  41b020:	add	x8, x8, x9
  41b024:	mov	w10, #0x24                  	// #36
  41b028:	strb	w10, [x8]
  41b02c:	ldur	x8, [x29, #-88]
  41b030:	add	x8, x8, #0x1
  41b034:	stur	x8, [x29, #-88]
  41b038:	ldur	x8, [x29, #-88]
  41b03c:	ldur	x9, [x29, #-24]
  41b040:	cmp	x8, x9
  41b044:	b.cs	41b05c <wcrtomb@plt+0x182ac>  // b.hs, b.nlast
  41b048:	ldur	x8, [x29, #-16]
  41b04c:	ldur	x9, [x29, #-88]
  41b050:	add	x8, x8, x9
  41b054:	mov	w10, #0x27                  	// #39
  41b058:	strb	w10, [x8]
  41b05c:	ldur	x8, [x29, #-88]
  41b060:	add	x8, x8, #0x1
  41b064:	stur	x8, [x29, #-88]
  41b068:	mov	w8, #0x1                   	// #1
  41b06c:	sturb	w8, [x29, #-116]
  41b070:	ldur	x8, [x29, #-88]
  41b074:	ldur	x9, [x29, #-24]
  41b078:	cmp	x8, x9
  41b07c:	b.cs	41b094 <wcrtomb@plt+0x182e4>  // b.hs, b.nlast
  41b080:	ldur	x8, [x29, #-16]
  41b084:	ldur	x9, [x29, #-88]
  41b088:	add	x8, x8, x9
  41b08c:	mov	w10, #0x5c                  	// #92
  41b090:	strb	w10, [x8]
  41b094:	ldur	x8, [x29, #-88]
  41b098:	add	x8, x8, #0x1
  41b09c:	stur	x8, [x29, #-88]
  41b0a0:	ldur	w8, [x29, #-44]
  41b0a4:	cmp	w8, #0x2
  41b0a8:	b.eq	41b154 <wcrtomb@plt+0x183a4>  // b.none
  41b0ac:	ldur	x8, [x29, #-80]
  41b0b0:	add	x8, x8, #0x1
  41b0b4:	ldur	x9, [x29, #-40]
  41b0b8:	cmp	x8, x9
  41b0bc:	b.cs	41b154 <wcrtomb@plt+0x183a4>  // b.hs, b.nlast
  41b0c0:	ldur	x8, [x29, #-32]
  41b0c4:	ldur	x9, [x29, #-80]
  41b0c8:	add	x9, x9, #0x1
  41b0cc:	ldrb	w10, [x8, x9]
  41b0d0:	mov	w11, #0x30                  	// #48
  41b0d4:	cmp	w11, w10
  41b0d8:	b.gt	41b154 <wcrtomb@plt+0x183a4>
  41b0dc:	ldur	x8, [x29, #-32]
  41b0e0:	ldur	x9, [x29, #-80]
  41b0e4:	add	x9, x9, #0x1
  41b0e8:	ldrb	w10, [x8, x9]
  41b0ec:	cmp	w10, #0x39
  41b0f0:	b.gt	41b154 <wcrtomb@plt+0x183a4>
  41b0f4:	ldur	x8, [x29, #-88]
  41b0f8:	ldur	x9, [x29, #-24]
  41b0fc:	cmp	x8, x9
  41b100:	b.cs	41b118 <wcrtomb@plt+0x18368>  // b.hs, b.nlast
  41b104:	ldur	x8, [x29, #-16]
  41b108:	ldur	x9, [x29, #-88]
  41b10c:	add	x8, x8, x9
  41b110:	mov	w10, #0x30                  	// #48
  41b114:	strb	w10, [x8]
  41b118:	ldur	x8, [x29, #-88]
  41b11c:	add	x8, x8, #0x1
  41b120:	stur	x8, [x29, #-88]
  41b124:	ldur	x8, [x29, #-88]
  41b128:	ldur	x9, [x29, #-24]
  41b12c:	cmp	x8, x9
  41b130:	b.cs	41b148 <wcrtomb@plt+0x18398>  // b.hs, b.nlast
  41b134:	ldur	x8, [x29, #-16]
  41b138:	ldur	x9, [x29, #-88]
  41b13c:	add	x8, x8, x9
  41b140:	mov	w10, #0x30                  	// #48
  41b144:	strb	w10, [x8]
  41b148:	ldur	x8, [x29, #-88]
  41b14c:	add	x8, x8, #0x1
  41b150:	stur	x8, [x29, #-88]
  41b154:	mov	w8, #0x30                  	// #48
  41b158:	sturb	w8, [x29, #-119]
  41b15c:	b	41b170 <wcrtomb@plt+0x183c0>
  41b160:	ldur	w8, [x29, #-48]
  41b164:	and	w8, w8, #0x1
  41b168:	cbz	w8, 41b170 <wcrtomb@plt+0x183c0>
  41b16c:	b	41bcbc <wcrtomb@plt+0x18f0c>
  41b170:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b174:	ldur	w8, [x29, #-44]
  41b178:	cmp	w8, #0x2
  41b17c:	str	w8, [sp, #28]
  41b180:	b.eq	41b198 <wcrtomb@plt+0x183e8>  // b.none
  41b184:	b	41b188 <wcrtomb@plt+0x183d8>
  41b188:	ldr	w8, [sp, #28]
  41b18c:	cmp	w8, #0x5
  41b190:	b.eq	41b1ac <wcrtomb@plt+0x183fc>  // b.none
  41b194:	b	41b350 <wcrtomb@plt+0x185a0>
  41b198:	ldurb	w8, [x29, #-115]
  41b19c:	tbnz	w8, #0, 41b1a4 <wcrtomb@plt+0x183f4>
  41b1a0:	b	41b1a8 <wcrtomb@plt+0x183f8>
  41b1a4:	b	41be04 <wcrtomb@plt+0x19054>
  41b1a8:	b	41b350 <wcrtomb@plt+0x185a0>
  41b1ac:	ldur	w8, [x29, #-48]
  41b1b0:	and	w8, w8, #0x4
  41b1b4:	cbz	w8, 41b34c <wcrtomb@plt+0x1859c>
  41b1b8:	ldur	x8, [x29, #-80]
  41b1bc:	add	x8, x8, #0x2
  41b1c0:	ldur	x9, [x29, #-40]
  41b1c4:	cmp	x8, x9
  41b1c8:	b.cs	41b34c <wcrtomb@plt+0x1859c>  // b.hs, b.nlast
  41b1cc:	ldur	x8, [x29, #-32]
  41b1d0:	ldur	x9, [x29, #-80]
  41b1d4:	add	x9, x9, #0x1
  41b1d8:	ldrb	w10, [x8, x9]
  41b1dc:	cmp	w10, #0x3f
  41b1e0:	b.ne	41b34c <wcrtomb@plt+0x1859c>  // b.any
  41b1e4:	ldur	x8, [x29, #-32]
  41b1e8:	ldur	x9, [x29, #-80]
  41b1ec:	add	x9, x9, #0x2
  41b1f0:	ldrb	w10, [x8, x9]
  41b1f4:	cmp	w10, #0x21
  41b1f8:	str	w10, [sp, #24]
  41b1fc:	b.eq	41b254 <wcrtomb@plt+0x184a4>  // b.none
  41b200:	b	41b204 <wcrtomb@plt+0x18454>
  41b204:	ldr	w8, [sp, #24]
  41b208:	subs	w9, w8, #0x27
  41b20c:	cmp	w9, #0x2
  41b210:	b.ls	41b254 <wcrtomb@plt+0x184a4>  // b.plast
  41b214:	b	41b218 <wcrtomb@plt+0x18468>
  41b218:	ldr	w8, [sp, #24]
  41b21c:	cmp	w8, #0x2d
  41b220:	b.eq	41b254 <wcrtomb@plt+0x184a4>  // b.none
  41b224:	b	41b228 <wcrtomb@plt+0x18478>
  41b228:	ldr	w8, [sp, #24]
  41b22c:	cmp	w8, #0x2f
  41b230:	b.eq	41b254 <wcrtomb@plt+0x184a4>  // b.none
  41b234:	b	41b238 <wcrtomb@plt+0x18488>
  41b238:	ldr	w8, [sp, #24]
  41b23c:	subs	w9, w8, #0x3c
  41b240:	cmp	w9, #0x2
  41b244:	cset	w9, ls  // ls = plast
  41b248:	eor	w9, w9, #0x1
  41b24c:	tbnz	w9, #0, 41b34c <wcrtomb@plt+0x1859c>
  41b250:	b	41b254 <wcrtomb@plt+0x184a4>
  41b254:	ldurb	w8, [x29, #-115]
  41b258:	tbnz	w8, #0, 41b260 <wcrtomb@plt+0x184b0>
  41b25c:	b	41b264 <wcrtomb@plt+0x184b4>
  41b260:	b	41be04 <wcrtomb@plt+0x19054>
  41b264:	ldur	x8, [x29, #-32]
  41b268:	ldur	x9, [x29, #-80]
  41b26c:	add	x9, x9, #0x2
  41b270:	add	x8, x8, x9
  41b274:	ldrb	w10, [x8]
  41b278:	sturb	w10, [x29, #-119]
  41b27c:	ldur	x8, [x29, #-80]
  41b280:	add	x8, x8, #0x2
  41b284:	stur	x8, [x29, #-80]
  41b288:	ldur	x8, [x29, #-88]
  41b28c:	ldur	x9, [x29, #-24]
  41b290:	cmp	x8, x9
  41b294:	b.cs	41b2ac <wcrtomb@plt+0x184fc>  // b.hs, b.nlast
  41b298:	ldur	x8, [x29, #-16]
  41b29c:	ldur	x9, [x29, #-88]
  41b2a0:	add	x8, x8, x9
  41b2a4:	mov	w10, #0x3f                  	// #63
  41b2a8:	strb	w10, [x8]
  41b2ac:	ldur	x8, [x29, #-88]
  41b2b0:	add	x8, x8, #0x1
  41b2b4:	stur	x8, [x29, #-88]
  41b2b8:	ldur	x8, [x29, #-88]
  41b2bc:	ldur	x9, [x29, #-24]
  41b2c0:	cmp	x8, x9
  41b2c4:	b.cs	41b2dc <wcrtomb@plt+0x1852c>  // b.hs, b.nlast
  41b2c8:	ldur	x8, [x29, #-16]
  41b2cc:	ldur	x9, [x29, #-88]
  41b2d0:	add	x8, x8, x9
  41b2d4:	mov	w10, #0x22                  	// #34
  41b2d8:	strb	w10, [x8]
  41b2dc:	ldur	x8, [x29, #-88]
  41b2e0:	add	x8, x8, #0x1
  41b2e4:	stur	x8, [x29, #-88]
  41b2e8:	ldur	x8, [x29, #-88]
  41b2ec:	ldur	x9, [x29, #-24]
  41b2f0:	cmp	x8, x9
  41b2f4:	b.cs	41b30c <wcrtomb@plt+0x1855c>  // b.hs, b.nlast
  41b2f8:	ldur	x8, [x29, #-16]
  41b2fc:	ldur	x9, [x29, #-88]
  41b300:	add	x8, x8, x9
  41b304:	mov	w10, #0x22                  	// #34
  41b308:	strb	w10, [x8]
  41b30c:	ldur	x8, [x29, #-88]
  41b310:	add	x8, x8, #0x1
  41b314:	stur	x8, [x29, #-88]
  41b318:	ldur	x8, [x29, #-88]
  41b31c:	ldur	x9, [x29, #-24]
  41b320:	cmp	x8, x9
  41b324:	b.cs	41b33c <wcrtomb@plt+0x1858c>  // b.hs, b.nlast
  41b328:	ldur	x8, [x29, #-16]
  41b32c:	ldur	x9, [x29, #-88]
  41b330:	add	x8, x8, x9
  41b334:	mov	w10, #0x3f                  	// #63
  41b338:	strb	w10, [x8]
  41b33c:	ldur	x8, [x29, #-88]
  41b340:	add	x8, x8, #0x1
  41b344:	stur	x8, [x29, #-88]
  41b348:	b	41b34c <wcrtomb@plt+0x1859c>
  41b34c:	b	41b350 <wcrtomb@plt+0x185a0>
  41b350:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b354:	mov	w8, #0x61                  	// #97
  41b358:	sturb	w8, [x29, #-120]
  41b35c:	b	41b410 <wcrtomb@plt+0x18660>
  41b360:	mov	w8, #0x62                  	// #98
  41b364:	sturb	w8, [x29, #-120]
  41b368:	b	41b410 <wcrtomb@plt+0x18660>
  41b36c:	mov	w8, #0x66                  	// #102
  41b370:	sturb	w8, [x29, #-120]
  41b374:	b	41b410 <wcrtomb@plt+0x18660>
  41b378:	mov	w8, #0x6e                  	// #110
  41b37c:	sturb	w8, [x29, #-120]
  41b380:	b	41b3f4 <wcrtomb@plt+0x18644>
  41b384:	mov	w8, #0x72                  	// #114
  41b388:	sturb	w8, [x29, #-120]
  41b38c:	b	41b3f4 <wcrtomb@plt+0x18644>
  41b390:	mov	w8, #0x74                  	// #116
  41b394:	sturb	w8, [x29, #-120]
  41b398:	b	41b3f4 <wcrtomb@plt+0x18644>
  41b39c:	mov	w8, #0x76                  	// #118
  41b3a0:	sturb	w8, [x29, #-120]
  41b3a4:	b	41b410 <wcrtomb@plt+0x18660>
  41b3a8:	ldurb	w8, [x29, #-119]
  41b3ac:	sturb	w8, [x29, #-120]
  41b3b0:	ldur	w8, [x29, #-44]
  41b3b4:	cmp	w8, #0x2
  41b3b8:	b.ne	41b3d0 <wcrtomb@plt+0x18620>  // b.any
  41b3bc:	ldurb	w8, [x29, #-115]
  41b3c0:	tbnz	w8, #0, 41b3c8 <wcrtomb@plt+0x18618>
  41b3c4:	b	41b3cc <wcrtomb@plt+0x1861c>
  41b3c8:	b	41be04 <wcrtomb@plt+0x19054>
  41b3cc:	b	41bc00 <wcrtomb@plt+0x18e50>
  41b3d0:	ldurb	w8, [x29, #-113]
  41b3d4:	tbnz	w8, #0, 41b3dc <wcrtomb@plt+0x1862c>
  41b3d8:	b	41b3f4 <wcrtomb@plt+0x18644>
  41b3dc:	ldurb	w8, [x29, #-115]
  41b3e0:	tbnz	w8, #0, 41b3e8 <wcrtomb@plt+0x18638>
  41b3e4:	b	41b3f4 <wcrtomb@plt+0x18644>
  41b3e8:	ldur	x8, [x29, #-112]
  41b3ec:	cbz	x8, 41b3f4 <wcrtomb@plt+0x18644>
  41b3f0:	b	41bc00 <wcrtomb@plt+0x18e50>
  41b3f4:	ldur	w8, [x29, #-44]
  41b3f8:	cmp	w8, #0x2
  41b3fc:	b.ne	41b410 <wcrtomb@plt+0x18660>  // b.any
  41b400:	ldurb	w8, [x29, #-115]
  41b404:	tbnz	w8, #0, 41b40c <wcrtomb@plt+0x1865c>
  41b408:	b	41b410 <wcrtomb@plt+0x18660>
  41b40c:	b	41be04 <wcrtomb@plt+0x19054>
  41b410:	ldurb	w8, [x29, #-113]
  41b414:	tbnz	w8, #0, 41b41c <wcrtomb@plt+0x1866c>
  41b418:	b	41b428 <wcrtomb@plt+0x18678>
  41b41c:	ldurb	w8, [x29, #-120]
  41b420:	sturb	w8, [x29, #-119]
  41b424:	b	41bb0c <wcrtomb@plt+0x18d5c>
  41b428:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b42c:	ldur	x8, [x29, #-40]
  41b430:	mov	x9, #0xffffffffffffffff    	// #-1
  41b434:	cmp	x8, x9
  41b438:	b.ne	41b44c <wcrtomb@plt+0x1869c>  // b.any
  41b43c:	ldur	x8, [x29, #-32]
  41b440:	ldrb	w9, [x8, #1]
  41b444:	cbz	w9, 41b45c <wcrtomb@plt+0x186ac>
  41b448:	b	41b458 <wcrtomb@plt+0x186a8>
  41b44c:	ldur	x8, [x29, #-40]
  41b450:	cmp	x8, #0x1
  41b454:	b.eq	41b45c <wcrtomb@plt+0x186ac>  // b.none
  41b458:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b45c:	ldur	x8, [x29, #-80]
  41b460:	cbz	x8, 41b468 <wcrtomb@plt+0x186b8>
  41b464:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b468:	mov	w8, #0x1                   	// #1
  41b46c:	sturb	w8, [x29, #-123]
  41b470:	ldur	w8, [x29, #-44]
  41b474:	cmp	w8, #0x2
  41b478:	b.ne	41b48c <wcrtomb@plt+0x186dc>  // b.any
  41b47c:	ldurb	w8, [x29, #-115]
  41b480:	tbnz	w8, #0, 41b488 <wcrtomb@plt+0x186d8>
  41b484:	b	41b48c <wcrtomb@plt+0x186dc>
  41b488:	b	41be04 <wcrtomb@plt+0x19054>
  41b48c:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b490:	mov	w8, #0x1                   	// #1
  41b494:	sturb	w8, [x29, #-117]
  41b498:	sturb	w8, [x29, #-123]
  41b49c:	ldur	w8, [x29, #-44]
  41b4a0:	cmp	w8, #0x2
  41b4a4:	b.ne	41b56c <wcrtomb@plt+0x187bc>  // b.any
  41b4a8:	ldurb	w8, [x29, #-115]
  41b4ac:	tbnz	w8, #0, 41b4b4 <wcrtomb@plt+0x18704>
  41b4b0:	b	41b4b8 <wcrtomb@plt+0x18708>
  41b4b4:	b	41be04 <wcrtomb@plt+0x19054>
  41b4b8:	ldur	x8, [x29, #-24]
  41b4bc:	cbz	x8, 41b4d4 <wcrtomb@plt+0x18724>
  41b4c0:	ldur	x8, [x29, #-96]
  41b4c4:	cbnz	x8, 41b4d4 <wcrtomb@plt+0x18724>
  41b4c8:	ldur	x8, [x29, #-24]
  41b4cc:	stur	x8, [x29, #-96]
  41b4d0:	stur	xzr, [x29, #-24]
  41b4d4:	ldur	x8, [x29, #-88]
  41b4d8:	ldur	x9, [x29, #-24]
  41b4dc:	cmp	x8, x9
  41b4e0:	b.cs	41b4f8 <wcrtomb@plt+0x18748>  // b.hs, b.nlast
  41b4e4:	ldur	x8, [x29, #-16]
  41b4e8:	ldur	x9, [x29, #-88]
  41b4ec:	add	x8, x8, x9
  41b4f0:	mov	w10, #0x27                  	// #39
  41b4f4:	strb	w10, [x8]
  41b4f8:	ldur	x8, [x29, #-88]
  41b4fc:	add	x8, x8, #0x1
  41b500:	stur	x8, [x29, #-88]
  41b504:	ldur	x8, [x29, #-88]
  41b508:	ldur	x9, [x29, #-24]
  41b50c:	cmp	x8, x9
  41b510:	b.cs	41b528 <wcrtomb@plt+0x18778>  // b.hs, b.nlast
  41b514:	ldur	x8, [x29, #-16]
  41b518:	ldur	x9, [x29, #-88]
  41b51c:	add	x8, x8, x9
  41b520:	mov	w10, #0x5c                  	// #92
  41b524:	strb	w10, [x8]
  41b528:	ldur	x8, [x29, #-88]
  41b52c:	add	x8, x8, #0x1
  41b530:	stur	x8, [x29, #-88]
  41b534:	ldur	x8, [x29, #-88]
  41b538:	ldur	x9, [x29, #-24]
  41b53c:	cmp	x8, x9
  41b540:	b.cs	41b558 <wcrtomb@plt+0x187a8>  // b.hs, b.nlast
  41b544:	ldur	x8, [x29, #-16]
  41b548:	ldur	x9, [x29, #-88]
  41b54c:	add	x8, x8, x9
  41b550:	mov	w10, #0x27                  	// #39
  41b554:	strb	w10, [x8]
  41b558:	ldur	x8, [x29, #-88]
  41b55c:	add	x8, x8, #0x1
  41b560:	stur	x8, [x29, #-88]
  41b564:	mov	w8, #0x0                   	// #0
  41b568:	sturb	w8, [x29, #-116]
  41b56c:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b570:	mov	w8, #0x1                   	// #1
  41b574:	sturb	w8, [x29, #-123]
  41b578:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b57c:	ldurb	w8, [x29, #-114]
  41b580:	tbnz	w8, #0, 41b588 <wcrtomb@plt+0x187d8>
  41b584:	b	41b5b4 <wcrtomb@plt+0x18804>
  41b588:	mov	x8, #0x1                   	// #1
  41b58c:	str	x8, [sp, #136]
  41b590:	bl	402b20 <__ctype_b_loc@plt>
  41b594:	ldr	x8, [x0]
  41b598:	ldurb	w9, [x29, #-119]
  41b59c:	ldrh	w9, [x8, w9, sxtw #1]
  41b5a0:	tst	w9, #0x4000
  41b5a4:	cset	w9, ne  // ne = any
  41b5a8:	and	w9, w9, #0x1
  41b5ac:	strb	w9, [sp, #135]
  41b5b0:	b	41b7a0 <wcrtomb@plt+0x189f0>
  41b5b4:	str	xzr, [sp, #120]
  41b5b8:	str	xzr, [sp, #136]
  41b5bc:	mov	w8, #0x1                   	// #1
  41b5c0:	strb	w8, [sp, #135]
  41b5c4:	ldur	x9, [x29, #-40]
  41b5c8:	mov	x10, #0xffffffffffffffff    	// #-1
  41b5cc:	cmp	x9, x10
  41b5d0:	b.ne	41b5e0 <wcrtomb@plt+0x18830>  // b.any
  41b5d4:	ldur	x0, [x29, #-32]
  41b5d8:	bl	4026f0 <strlen@plt>
  41b5dc:	stur	x0, [x29, #-40]
  41b5e0:	ldur	x8, [x29, #-32]
  41b5e4:	ldur	x9, [x29, #-80]
  41b5e8:	ldr	x10, [sp, #136]
  41b5ec:	add	x9, x9, x10
  41b5f0:	add	x1, x8, x9
  41b5f4:	ldur	x8, [x29, #-40]
  41b5f8:	ldur	x9, [x29, #-80]
  41b5fc:	ldr	x10, [sp, #136]
  41b600:	add	x9, x9, x10
  41b604:	subs	x2, x8, x9
  41b608:	add	x0, sp, #0x74
  41b60c:	add	x3, sp, #0x78
  41b610:	bl	41da58 <wcrtomb@plt+0x1aca8>
  41b614:	str	x0, [sp, #104]
  41b618:	ldr	x8, [sp, #104]
  41b61c:	cbnz	x8, 41b624 <wcrtomb@plt+0x18874>
  41b620:	b	41b7a0 <wcrtomb@plt+0x189f0>
  41b624:	ldr	x8, [sp, #104]
  41b628:	mov	x9, #0xffffffffffffffff    	// #-1
  41b62c:	cmp	x8, x9
  41b630:	b.ne	41b640 <wcrtomb@plt+0x18890>  // b.any
  41b634:	mov	w8, #0x0                   	// #0
  41b638:	strb	w8, [sp, #135]
  41b63c:	b	41b7a0 <wcrtomb@plt+0x189f0>
  41b640:	ldr	x8, [sp, #104]
  41b644:	mov	x9, #0xfffffffffffffffe    	// #-2
  41b648:	cmp	x8, x9
  41b64c:	b.ne	41b6b8 <wcrtomb@plt+0x18908>  // b.any
  41b650:	mov	w8, #0x0                   	// #0
  41b654:	strb	w8, [sp, #135]
  41b658:	ldur	x8, [x29, #-80]
  41b65c:	ldr	x9, [sp, #136]
  41b660:	add	x8, x8, x9
  41b664:	ldur	x9, [x29, #-40]
  41b668:	mov	w10, #0x0                   	// #0
  41b66c:	cmp	x8, x9
  41b670:	str	w10, [sp, #20]
  41b674:	b.cs	41b698 <wcrtomb@plt+0x188e8>  // b.hs, b.nlast
  41b678:	ldur	x8, [x29, #-32]
  41b67c:	ldur	x9, [x29, #-80]
  41b680:	ldr	x10, [sp, #136]
  41b684:	add	x9, x9, x10
  41b688:	ldrb	w11, [x8, x9]
  41b68c:	cmp	w11, #0x0
  41b690:	cset	w11, ne  // ne = any
  41b694:	str	w11, [sp, #20]
  41b698:	ldr	w8, [sp, #20]
  41b69c:	tbnz	w8, #0, 41b6a4 <wcrtomb@plt+0x188f4>
  41b6a0:	b	41b6b4 <wcrtomb@plt+0x18904>
  41b6a4:	ldr	x8, [sp, #136]
  41b6a8:	add	x8, x8, #0x1
  41b6ac:	str	x8, [sp, #136]
  41b6b0:	b	41b658 <wcrtomb@plt+0x188a8>
  41b6b4:	b	41b7a0 <wcrtomb@plt+0x189f0>
  41b6b8:	ldurb	w8, [x29, #-115]
  41b6bc:	tbnz	w8, #0, 41b6c4 <wcrtomb@plt+0x18914>
  41b6c0:	b	41b764 <wcrtomb@plt+0x189b4>
  41b6c4:	ldur	w8, [x29, #-44]
  41b6c8:	cmp	w8, #0x2
  41b6cc:	b.ne	41b764 <wcrtomb@plt+0x189b4>  // b.any
  41b6d0:	mov	x8, #0x1                   	// #1
  41b6d4:	str	x8, [sp, #96]
  41b6d8:	ldr	x8, [sp, #96]
  41b6dc:	ldr	x9, [sp, #104]
  41b6e0:	cmp	x8, x9
  41b6e4:	b.cs	41b764 <wcrtomb@plt+0x189b4>  // b.hs, b.nlast
  41b6e8:	ldur	x8, [x29, #-32]
  41b6ec:	ldur	x9, [x29, #-80]
  41b6f0:	ldr	x10, [sp, #136]
  41b6f4:	add	x9, x9, x10
  41b6f8:	ldr	x10, [sp, #96]
  41b6fc:	add	x9, x9, x10
  41b700:	ldrb	w11, [x8, x9]
  41b704:	subs	w12, w11, #0x5b
  41b708:	cmp	w12, #0x1
  41b70c:	str	w11, [sp, #16]
  41b710:	b.ls	41b750 <wcrtomb@plt+0x189a0>  // b.plast
  41b714:	b	41b718 <wcrtomb@plt+0x18968>
  41b718:	ldr	w8, [sp, #16]
  41b71c:	cmp	w8, #0x5e
  41b720:	b.eq	41b750 <wcrtomb@plt+0x189a0>  // b.none
  41b724:	b	41b728 <wcrtomb@plt+0x18978>
  41b728:	ldr	w8, [sp, #16]
  41b72c:	cmp	w8, #0x60
  41b730:	b.eq	41b750 <wcrtomb@plt+0x189a0>  // b.none
  41b734:	b	41b738 <wcrtomb@plt+0x18988>
  41b738:	ldr	w8, [sp, #16]
  41b73c:	cmp	w8, #0x7c
  41b740:	cset	w9, eq  // eq = none
  41b744:	eor	w9, w9, #0x1
  41b748:	tbnz	w9, #0, 41b754 <wcrtomb@plt+0x189a4>
  41b74c:	b	41b750 <wcrtomb@plt+0x189a0>
  41b750:	b	41be04 <wcrtomb@plt+0x19054>
  41b754:	ldr	x8, [sp, #96]
  41b758:	add	x8, x8, #0x1
  41b75c:	str	x8, [sp, #96]
  41b760:	b	41b6d8 <wcrtomb@plt+0x18928>
  41b764:	ldr	w0, [sp, #116]
  41b768:	bl	402cb0 <iswprint@plt>
  41b76c:	cbnz	w0, 41b778 <wcrtomb@plt+0x189c8>
  41b770:	mov	w8, #0x0                   	// #0
  41b774:	strb	w8, [sp, #135]
  41b778:	ldr	x8, [sp, #104]
  41b77c:	ldr	x9, [sp, #136]
  41b780:	add	x8, x9, x8
  41b784:	str	x8, [sp, #136]
  41b788:	add	x0, sp, #0x78
  41b78c:	bl	402aa0 <mbsinit@plt>
  41b790:	cmp	w0, #0x0
  41b794:	cset	w8, ne  // ne = any
  41b798:	eor	w8, w8, #0x1
  41b79c:	tbnz	w8, #0, 41b5e0 <wcrtomb@plt+0x18830>
  41b7a0:	ldrb	w8, [sp, #135]
  41b7a4:	and	w8, w8, #0x1
  41b7a8:	sturb	w8, [x29, #-123]
  41b7ac:	ldr	x9, [sp, #136]
  41b7b0:	mov	x10, #0x1                   	// #1
  41b7b4:	cmp	x10, x9
  41b7b8:	b.cc	41b7d0 <wcrtomb@plt+0x18a20>  // b.lo, b.ul, b.last
  41b7bc:	ldurb	w8, [x29, #-113]
  41b7c0:	tbnz	w8, #0, 41b7c8 <wcrtomb@plt+0x18a18>
  41b7c4:	b	41ba9c <wcrtomb@plt+0x18cec>
  41b7c8:	ldrb	w8, [sp, #135]
  41b7cc:	tbnz	w8, #0, 41ba9c <wcrtomb@plt+0x18cec>
  41b7d0:	ldur	x8, [x29, #-80]
  41b7d4:	ldr	x9, [sp, #136]
  41b7d8:	add	x8, x8, x9
  41b7dc:	str	x8, [sp, #88]
  41b7e0:	ldurb	w8, [x29, #-113]
  41b7e4:	tbnz	w8, #0, 41b7ec <wcrtomb@plt+0x18a3c>
  41b7e8:	b	41b970 <wcrtomb@plt+0x18bc0>
  41b7ec:	ldrb	w8, [sp, #135]
  41b7f0:	tbnz	w8, #0, 41b970 <wcrtomb@plt+0x18bc0>
  41b7f4:	ldurb	w8, [x29, #-115]
  41b7f8:	tbnz	w8, #0, 41b800 <wcrtomb@plt+0x18a50>
  41b7fc:	b	41b804 <wcrtomb@plt+0x18a54>
  41b800:	b	41be04 <wcrtomb@plt+0x19054>
  41b804:	mov	w8, #0x1                   	// #1
  41b808:	sturb	w8, [x29, #-122]
  41b80c:	ldur	w8, [x29, #-44]
  41b810:	cmp	w8, #0x2
  41b814:	b.ne	41b8b8 <wcrtomb@plt+0x18b08>  // b.any
  41b818:	ldurb	w8, [x29, #-116]
  41b81c:	tbnz	w8, #0, 41b8b8 <wcrtomb@plt+0x18b08>
  41b820:	ldur	x8, [x29, #-88]
  41b824:	ldur	x9, [x29, #-24]
  41b828:	cmp	x8, x9
  41b82c:	b.cs	41b844 <wcrtomb@plt+0x18a94>  // b.hs, b.nlast
  41b830:	ldur	x8, [x29, #-16]
  41b834:	ldur	x9, [x29, #-88]
  41b838:	add	x8, x8, x9
  41b83c:	mov	w10, #0x27                  	// #39
  41b840:	strb	w10, [x8]
  41b844:	ldur	x8, [x29, #-88]
  41b848:	add	x8, x8, #0x1
  41b84c:	stur	x8, [x29, #-88]
  41b850:	ldur	x8, [x29, #-88]
  41b854:	ldur	x9, [x29, #-24]
  41b858:	cmp	x8, x9
  41b85c:	b.cs	41b874 <wcrtomb@plt+0x18ac4>  // b.hs, b.nlast
  41b860:	ldur	x8, [x29, #-16]
  41b864:	ldur	x9, [x29, #-88]
  41b868:	add	x8, x8, x9
  41b86c:	mov	w10, #0x24                  	// #36
  41b870:	strb	w10, [x8]
  41b874:	ldur	x8, [x29, #-88]
  41b878:	add	x8, x8, #0x1
  41b87c:	stur	x8, [x29, #-88]
  41b880:	ldur	x8, [x29, #-88]
  41b884:	ldur	x9, [x29, #-24]
  41b888:	cmp	x8, x9
  41b88c:	b.cs	41b8a4 <wcrtomb@plt+0x18af4>  // b.hs, b.nlast
  41b890:	ldur	x8, [x29, #-16]
  41b894:	ldur	x9, [x29, #-88]
  41b898:	add	x8, x8, x9
  41b89c:	mov	w10, #0x27                  	// #39
  41b8a0:	strb	w10, [x8]
  41b8a4:	ldur	x8, [x29, #-88]
  41b8a8:	add	x8, x8, #0x1
  41b8ac:	stur	x8, [x29, #-88]
  41b8b0:	mov	w8, #0x1                   	// #1
  41b8b4:	sturb	w8, [x29, #-116]
  41b8b8:	ldur	x8, [x29, #-88]
  41b8bc:	ldur	x9, [x29, #-24]
  41b8c0:	cmp	x8, x9
  41b8c4:	b.cs	41b8dc <wcrtomb@plt+0x18b2c>  // b.hs, b.nlast
  41b8c8:	ldur	x8, [x29, #-16]
  41b8cc:	ldur	x9, [x29, #-88]
  41b8d0:	add	x8, x8, x9
  41b8d4:	mov	w10, #0x5c                  	// #92
  41b8d8:	strb	w10, [x8]
  41b8dc:	ldur	x8, [x29, #-88]
  41b8e0:	add	x8, x8, #0x1
  41b8e4:	stur	x8, [x29, #-88]
  41b8e8:	ldur	x8, [x29, #-88]
  41b8ec:	ldur	x9, [x29, #-24]
  41b8f0:	cmp	x8, x9
  41b8f4:	b.cs	41b914 <wcrtomb@plt+0x18b64>  // b.hs, b.nlast
  41b8f8:	ldurb	w8, [x29, #-119]
  41b8fc:	asr	w8, w8, #6
  41b900:	add	w8, w8, #0x30
  41b904:	ldur	x9, [x29, #-16]
  41b908:	ldur	x10, [x29, #-88]
  41b90c:	add	x9, x9, x10
  41b910:	strb	w8, [x9]
  41b914:	ldur	x8, [x29, #-88]
  41b918:	add	x8, x8, #0x1
  41b91c:	stur	x8, [x29, #-88]
  41b920:	ldur	x8, [x29, #-88]
  41b924:	ldur	x9, [x29, #-24]
  41b928:	cmp	x8, x9
  41b92c:	b.cs	41b950 <wcrtomb@plt+0x18ba0>  // b.hs, b.nlast
  41b930:	ldurb	w8, [x29, #-119]
  41b934:	asr	w8, w8, #3
  41b938:	and	w8, w8, #0x7
  41b93c:	add	w8, w8, #0x30
  41b940:	ldur	x9, [x29, #-16]
  41b944:	ldur	x10, [x29, #-88]
  41b948:	add	x9, x9, x10
  41b94c:	strb	w8, [x9]
  41b950:	ldur	x8, [x29, #-88]
  41b954:	add	x8, x8, #0x1
  41b958:	stur	x8, [x29, #-88]
  41b95c:	ldurb	w8, [x29, #-119]
  41b960:	and	w8, w8, #0x7
  41b964:	add	w8, w8, #0x30
  41b968:	sturb	w8, [x29, #-119]
  41b96c:	b	41b9b4 <wcrtomb@plt+0x18c04>
  41b970:	ldurb	w8, [x29, #-121]
  41b974:	tbnz	w8, #0, 41b97c <wcrtomb@plt+0x18bcc>
  41b978:	b	41b9b4 <wcrtomb@plt+0x18c04>
  41b97c:	ldur	x8, [x29, #-88]
  41b980:	ldur	x9, [x29, #-24]
  41b984:	cmp	x8, x9
  41b988:	b.cs	41b9a0 <wcrtomb@plt+0x18bf0>  // b.hs, b.nlast
  41b98c:	ldur	x8, [x29, #-16]
  41b990:	ldur	x9, [x29, #-88]
  41b994:	add	x8, x8, x9
  41b998:	mov	w10, #0x5c                  	// #92
  41b99c:	strb	w10, [x8]
  41b9a0:	ldur	x8, [x29, #-88]
  41b9a4:	add	x8, x8, #0x1
  41b9a8:	stur	x8, [x29, #-88]
  41b9ac:	mov	w8, #0x0                   	// #0
  41b9b0:	sturb	w8, [x29, #-121]
  41b9b4:	ldr	x8, [sp, #88]
  41b9b8:	ldur	x9, [x29, #-80]
  41b9bc:	add	x9, x9, #0x1
  41b9c0:	cmp	x8, x9
  41b9c4:	b.hi	41b9cc <wcrtomb@plt+0x18c1c>  // b.pmore
  41b9c8:	b	41ba98 <wcrtomb@plt+0x18ce8>
  41b9cc:	ldurb	w8, [x29, #-116]
  41b9d0:	tbnz	w8, #0, 41b9d8 <wcrtomb@plt+0x18c28>
  41b9d4:	b	41ba48 <wcrtomb@plt+0x18c98>
  41b9d8:	ldurb	w8, [x29, #-122]
  41b9dc:	tbnz	w8, #0, 41ba48 <wcrtomb@plt+0x18c98>
  41b9e0:	ldur	x8, [x29, #-88]
  41b9e4:	ldur	x9, [x29, #-24]
  41b9e8:	cmp	x8, x9
  41b9ec:	b.cs	41ba04 <wcrtomb@plt+0x18c54>  // b.hs, b.nlast
  41b9f0:	ldur	x8, [x29, #-16]
  41b9f4:	ldur	x9, [x29, #-88]
  41b9f8:	add	x8, x8, x9
  41b9fc:	mov	w10, #0x27                  	// #39
  41ba00:	strb	w10, [x8]
  41ba04:	ldur	x8, [x29, #-88]
  41ba08:	add	x8, x8, #0x1
  41ba0c:	stur	x8, [x29, #-88]
  41ba10:	ldur	x8, [x29, #-88]
  41ba14:	ldur	x9, [x29, #-24]
  41ba18:	cmp	x8, x9
  41ba1c:	b.cs	41ba34 <wcrtomb@plt+0x18c84>  // b.hs, b.nlast
  41ba20:	ldur	x8, [x29, #-16]
  41ba24:	ldur	x9, [x29, #-88]
  41ba28:	add	x8, x8, x9
  41ba2c:	mov	w10, #0x27                  	// #39
  41ba30:	strb	w10, [x8]
  41ba34:	ldur	x8, [x29, #-88]
  41ba38:	add	x8, x8, #0x1
  41ba3c:	stur	x8, [x29, #-88]
  41ba40:	mov	w8, #0x0                   	// #0
  41ba44:	sturb	w8, [x29, #-116]
  41ba48:	ldur	x8, [x29, #-88]
  41ba4c:	ldur	x9, [x29, #-24]
  41ba50:	cmp	x8, x9
  41ba54:	b.cs	41ba6c <wcrtomb@plt+0x18cbc>  // b.hs, b.nlast
  41ba58:	ldurb	w8, [x29, #-119]
  41ba5c:	ldur	x9, [x29, #-16]
  41ba60:	ldur	x10, [x29, #-88]
  41ba64:	add	x9, x9, x10
  41ba68:	strb	w8, [x9]
  41ba6c:	ldur	x8, [x29, #-88]
  41ba70:	add	x8, x8, #0x1
  41ba74:	stur	x8, [x29, #-88]
  41ba78:	ldur	x8, [x29, #-32]
  41ba7c:	ldur	x9, [x29, #-80]
  41ba80:	add	x9, x9, #0x1
  41ba84:	stur	x9, [x29, #-80]
  41ba88:	add	x8, x8, x9
  41ba8c:	ldrb	w10, [x8]
  41ba90:	sturb	w10, [x29, #-119]
  41ba94:	b	41b7e0 <wcrtomb@plt+0x18a30>
  41ba98:	b	41bc00 <wcrtomb@plt+0x18e50>
  41ba9c:	ldurb	w8, [x29, #-113]
  41baa0:	tbnz	w8, #0, 41baa8 <wcrtomb@plt+0x18cf8>
  41baa4:	b	41bab4 <wcrtomb@plt+0x18d04>
  41baa8:	ldur	w8, [x29, #-44]
  41baac:	cmp	w8, #0x2
  41bab0:	b.ne	41bac0 <wcrtomb@plt+0x18d10>  // b.any
  41bab4:	ldurb	w8, [x29, #-115]
  41bab8:	tbnz	w8, #0, 41bac0 <wcrtomb@plt+0x18d10>
  41babc:	b	41bb00 <wcrtomb@plt+0x18d50>
  41bac0:	ldur	x8, [x29, #-56]
  41bac4:	cbz	x8, 41bb00 <wcrtomb@plt+0x18d50>
  41bac8:	ldur	x8, [x29, #-56]
  41bacc:	ldurb	w9, [x29, #-119]
  41bad0:	mov	w10, w9
  41bad4:	mov	x11, #0x20                  	// #32
  41bad8:	udiv	x10, x10, x11
  41badc:	ldr	w9, [x8, x10, lsl #2]
  41bae0:	ldurb	w12, [x29, #-119]
  41bae4:	mov	w8, w12
  41bae8:	udiv	x10, x8, x11
  41baec:	mul	x10, x10, x11
  41baf0:	subs	x8, x8, x10
  41baf4:	lsr	w8, w9, w8
  41baf8:	and	w8, w8, #0x1
  41bafc:	cbnz	w8, 41bb0c <wcrtomb@plt+0x18d5c>
  41bb00:	ldurb	w8, [x29, #-121]
  41bb04:	tbnz	w8, #0, 41bb0c <wcrtomb@plt+0x18d5c>
  41bb08:	b	41bc00 <wcrtomb@plt+0x18e50>
  41bb0c:	ldurb	w8, [x29, #-115]
  41bb10:	tbnz	w8, #0, 41bb18 <wcrtomb@plt+0x18d68>
  41bb14:	b	41bb1c <wcrtomb@plt+0x18d6c>
  41bb18:	b	41be04 <wcrtomb@plt+0x19054>
  41bb1c:	mov	w8, #0x1                   	// #1
  41bb20:	sturb	w8, [x29, #-122]
  41bb24:	ldur	w8, [x29, #-44]
  41bb28:	cmp	w8, #0x2
  41bb2c:	b.ne	41bbd0 <wcrtomb@plt+0x18e20>  // b.any
  41bb30:	ldurb	w8, [x29, #-116]
  41bb34:	tbnz	w8, #0, 41bbd0 <wcrtomb@plt+0x18e20>
  41bb38:	ldur	x8, [x29, #-88]
  41bb3c:	ldur	x9, [x29, #-24]
  41bb40:	cmp	x8, x9
  41bb44:	b.cs	41bb5c <wcrtomb@plt+0x18dac>  // b.hs, b.nlast
  41bb48:	ldur	x8, [x29, #-16]
  41bb4c:	ldur	x9, [x29, #-88]
  41bb50:	add	x8, x8, x9
  41bb54:	mov	w10, #0x27                  	// #39
  41bb58:	strb	w10, [x8]
  41bb5c:	ldur	x8, [x29, #-88]
  41bb60:	add	x8, x8, #0x1
  41bb64:	stur	x8, [x29, #-88]
  41bb68:	ldur	x8, [x29, #-88]
  41bb6c:	ldur	x9, [x29, #-24]
  41bb70:	cmp	x8, x9
  41bb74:	b.cs	41bb8c <wcrtomb@plt+0x18ddc>  // b.hs, b.nlast
  41bb78:	ldur	x8, [x29, #-16]
  41bb7c:	ldur	x9, [x29, #-88]
  41bb80:	add	x8, x8, x9
  41bb84:	mov	w10, #0x24                  	// #36
  41bb88:	strb	w10, [x8]
  41bb8c:	ldur	x8, [x29, #-88]
  41bb90:	add	x8, x8, #0x1
  41bb94:	stur	x8, [x29, #-88]
  41bb98:	ldur	x8, [x29, #-88]
  41bb9c:	ldur	x9, [x29, #-24]
  41bba0:	cmp	x8, x9
  41bba4:	b.cs	41bbbc <wcrtomb@plt+0x18e0c>  // b.hs, b.nlast
  41bba8:	ldur	x8, [x29, #-16]
  41bbac:	ldur	x9, [x29, #-88]
  41bbb0:	add	x8, x8, x9
  41bbb4:	mov	w10, #0x27                  	// #39
  41bbb8:	strb	w10, [x8]
  41bbbc:	ldur	x8, [x29, #-88]
  41bbc0:	add	x8, x8, #0x1
  41bbc4:	stur	x8, [x29, #-88]
  41bbc8:	mov	w8, #0x1                   	// #1
  41bbcc:	sturb	w8, [x29, #-116]
  41bbd0:	ldur	x8, [x29, #-88]
  41bbd4:	ldur	x9, [x29, #-24]
  41bbd8:	cmp	x8, x9
  41bbdc:	b.cs	41bbf4 <wcrtomb@plt+0x18e44>  // b.hs, b.nlast
  41bbe0:	ldur	x8, [x29, #-16]
  41bbe4:	ldur	x9, [x29, #-88]
  41bbe8:	add	x8, x8, x9
  41bbec:	mov	w10, #0x5c                  	// #92
  41bbf0:	strb	w10, [x8]
  41bbf4:	ldur	x8, [x29, #-88]
  41bbf8:	add	x8, x8, #0x1
  41bbfc:	stur	x8, [x29, #-88]
  41bc00:	ldurb	w8, [x29, #-116]
  41bc04:	tbnz	w8, #0, 41bc0c <wcrtomb@plt+0x18e5c>
  41bc08:	b	41bc7c <wcrtomb@plt+0x18ecc>
  41bc0c:	ldurb	w8, [x29, #-122]
  41bc10:	tbnz	w8, #0, 41bc7c <wcrtomb@plt+0x18ecc>
  41bc14:	ldur	x8, [x29, #-88]
  41bc18:	ldur	x9, [x29, #-24]
  41bc1c:	cmp	x8, x9
  41bc20:	b.cs	41bc38 <wcrtomb@plt+0x18e88>  // b.hs, b.nlast
  41bc24:	ldur	x8, [x29, #-16]
  41bc28:	ldur	x9, [x29, #-88]
  41bc2c:	add	x8, x8, x9
  41bc30:	mov	w10, #0x27                  	// #39
  41bc34:	strb	w10, [x8]
  41bc38:	ldur	x8, [x29, #-88]
  41bc3c:	add	x8, x8, #0x1
  41bc40:	stur	x8, [x29, #-88]
  41bc44:	ldur	x8, [x29, #-88]
  41bc48:	ldur	x9, [x29, #-24]
  41bc4c:	cmp	x8, x9
  41bc50:	b.cs	41bc68 <wcrtomb@plt+0x18eb8>  // b.hs, b.nlast
  41bc54:	ldur	x8, [x29, #-16]
  41bc58:	ldur	x9, [x29, #-88]
  41bc5c:	add	x8, x8, x9
  41bc60:	mov	w10, #0x27                  	// #39
  41bc64:	strb	w10, [x8]
  41bc68:	ldur	x8, [x29, #-88]
  41bc6c:	add	x8, x8, #0x1
  41bc70:	stur	x8, [x29, #-88]
  41bc74:	mov	w8, #0x0                   	// #0
  41bc78:	sturb	w8, [x29, #-116]
  41bc7c:	ldur	x8, [x29, #-88]
  41bc80:	ldur	x9, [x29, #-24]
  41bc84:	cmp	x8, x9
  41bc88:	b.cs	41bca0 <wcrtomb@plt+0x18ef0>  // b.hs, b.nlast
  41bc8c:	ldurb	w8, [x29, #-119]
  41bc90:	ldur	x9, [x29, #-16]
  41bc94:	ldur	x10, [x29, #-88]
  41bc98:	add	x9, x9, x10
  41bc9c:	strb	w8, [x9]
  41bca0:	ldur	x8, [x29, #-88]
  41bca4:	add	x8, x8, #0x1
  41bca8:	stur	x8, [x29, #-88]
  41bcac:	ldurb	w8, [x29, #-123]
  41bcb0:	tbnz	w8, #0, 41bcbc <wcrtomb@plt+0x18f0c>
  41bcb4:	mov	w8, #0x0                   	// #0
  41bcb8:	sturb	w8, [x29, #-118]
  41bcbc:	ldur	x8, [x29, #-80]
  41bcc0:	add	x8, x8, #0x1
  41bcc4:	stur	x8, [x29, #-80]
  41bcc8:	b	41ae38 <wcrtomb@plt+0x18088>
  41bccc:	ldur	x8, [x29, #-88]
  41bcd0:	cbnz	x8, 41bcf0 <wcrtomb@plt+0x18f40>
  41bcd4:	ldur	w8, [x29, #-44]
  41bcd8:	cmp	w8, #0x2
  41bcdc:	b.ne	41bcf0 <wcrtomb@plt+0x18f40>  // b.any
  41bce0:	ldurb	w8, [x29, #-115]
  41bce4:	tbnz	w8, #0, 41bcec <wcrtomb@plt+0x18f3c>
  41bce8:	b	41bcf0 <wcrtomb@plt+0x18f40>
  41bcec:	b	41be04 <wcrtomb@plt+0x19054>
  41bcf0:	ldur	w8, [x29, #-44]
  41bcf4:	cmp	w8, #0x2
  41bcf8:	b.ne	41bd74 <wcrtomb@plt+0x18fc4>  // b.any
  41bcfc:	ldurb	w8, [x29, #-115]
  41bd00:	tbnz	w8, #0, 41bd74 <wcrtomb@plt+0x18fc4>
  41bd04:	ldurb	w8, [x29, #-117]
  41bd08:	tbnz	w8, #0, 41bd10 <wcrtomb@plt+0x18f60>
  41bd0c:	b	41bd74 <wcrtomb@plt+0x18fc4>
  41bd10:	ldurb	w8, [x29, #-118]
  41bd14:	tbnz	w8, #0, 41bd1c <wcrtomb@plt+0x18f6c>
  41bd18:	b	41bd54 <wcrtomb@plt+0x18fa4>
  41bd1c:	ldur	x0, [x29, #-16]
  41bd20:	ldur	x1, [x29, #-96]
  41bd24:	ldur	x2, [x29, #-32]
  41bd28:	ldur	x3, [x29, #-40]
  41bd2c:	ldur	w5, [x29, #-48]
  41bd30:	ldur	x6, [x29, #-56]
  41bd34:	ldur	x7, [x29, #-64]
  41bd38:	ldur	x8, [x29, #-72]
  41bd3c:	mov	w4, #0x5                   	// #5
  41bd40:	mov	x9, sp
  41bd44:	str	x8, [x9]
  41bd48:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41bd4c:	stur	x0, [x29, #-8]
  41bd50:	b	41be60 <wcrtomb@plt+0x190b0>
  41bd54:	ldur	x8, [x29, #-24]
  41bd58:	cbnz	x8, 41bd74 <wcrtomb@plt+0x18fc4>
  41bd5c:	ldur	x8, [x29, #-96]
  41bd60:	cbz	x8, 41bd74 <wcrtomb@plt+0x18fc4>
  41bd64:	ldur	x8, [x29, #-96]
  41bd68:	stur	x8, [x29, #-24]
  41bd6c:	stur	xzr, [x29, #-88]
  41bd70:	b	41ac48 <wcrtomb@plt+0x17e98>
  41bd74:	ldur	x8, [x29, #-104]
  41bd78:	cbz	x8, 41bdd4 <wcrtomb@plt+0x19024>
  41bd7c:	ldurb	w8, [x29, #-115]
  41bd80:	tbnz	w8, #0, 41bdd4 <wcrtomb@plt+0x19024>
  41bd84:	ldur	x8, [x29, #-104]
  41bd88:	ldrb	w9, [x8]
  41bd8c:	cbz	w9, 41bdd4 <wcrtomb@plt+0x19024>
  41bd90:	ldur	x8, [x29, #-88]
  41bd94:	ldur	x9, [x29, #-24]
  41bd98:	cmp	x8, x9
  41bd9c:	b.cs	41bdb8 <wcrtomb@plt+0x19008>  // b.hs, b.nlast
  41bda0:	ldur	x8, [x29, #-104]
  41bda4:	ldrb	w9, [x8]
  41bda8:	ldur	x8, [x29, #-16]
  41bdac:	ldur	x10, [x29, #-88]
  41bdb0:	add	x8, x8, x10
  41bdb4:	strb	w9, [x8]
  41bdb8:	ldur	x8, [x29, #-88]
  41bdbc:	add	x8, x8, #0x1
  41bdc0:	stur	x8, [x29, #-88]
  41bdc4:	ldur	x8, [x29, #-104]
  41bdc8:	add	x8, x8, #0x1
  41bdcc:	stur	x8, [x29, #-104]
  41bdd0:	b	41bd84 <wcrtomb@plt+0x18fd4>
  41bdd4:	ldur	x8, [x29, #-88]
  41bdd8:	ldur	x9, [x29, #-24]
  41bddc:	cmp	x8, x9
  41bde0:	b.cs	41bdf8 <wcrtomb@plt+0x19048>  // b.hs, b.nlast
  41bde4:	ldur	x8, [x29, #-16]
  41bde8:	ldur	x9, [x29, #-88]
  41bdec:	add	x8, x8, x9
  41bdf0:	mov	w10, #0x0                   	// #0
  41bdf4:	strb	w10, [x8]
  41bdf8:	ldur	x8, [x29, #-88]
  41bdfc:	stur	x8, [x29, #-8]
  41be00:	b	41be60 <wcrtomb@plt+0x190b0>
  41be04:	ldur	w8, [x29, #-44]
  41be08:	cmp	w8, #0x2
  41be0c:	b.ne	41be24 <wcrtomb@plt+0x19074>  // b.any
  41be10:	ldurb	w8, [x29, #-113]
  41be14:	tbnz	w8, #0, 41be1c <wcrtomb@plt+0x1906c>
  41be18:	b	41be24 <wcrtomb@plt+0x19074>
  41be1c:	mov	w8, #0x4                   	// #4
  41be20:	stur	w8, [x29, #-44]
  41be24:	ldur	x0, [x29, #-16]
  41be28:	ldur	x1, [x29, #-24]
  41be2c:	ldur	x2, [x29, #-32]
  41be30:	ldur	x3, [x29, #-40]
  41be34:	ldur	w4, [x29, #-44]
  41be38:	ldur	w8, [x29, #-48]
  41be3c:	and	w5, w8, #0xfffffffd
  41be40:	ldur	x7, [x29, #-64]
  41be44:	ldur	x9, [x29, #-72]
  41be48:	mov	x10, xzr
  41be4c:	mov	x6, x10
  41be50:	mov	x10, sp
  41be54:	str	x9, [x10]
  41be58:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41be5c:	stur	x0, [x29, #-8]
  41be60:	ldur	x0, [x29, #-8]
  41be64:	ldr	x28, [sp, #288]
  41be68:	ldp	x29, x30, [sp, #272]
  41be6c:	add	sp, sp, #0x130
  41be70:	ret
  41be74:	sub	sp, sp, #0x30
  41be78:	stp	x29, x30, [sp, #32]
  41be7c:	add	x29, sp, #0x20
  41be80:	mov	x8, xzr
  41be84:	stur	x0, [x29, #-8]
  41be88:	str	x1, [sp, #16]
  41be8c:	str	x2, [sp, #8]
  41be90:	ldur	x0, [x29, #-8]
  41be94:	ldr	x1, [sp, #16]
  41be98:	ldr	x3, [sp, #8]
  41be9c:	mov	x2, x8
  41bea0:	bl	41beb0 <wcrtomb@plt+0x19100>
  41bea4:	ldp	x29, x30, [sp, #32]
  41bea8:	add	sp, sp, #0x30
  41beac:	ret
  41beb0:	sub	sp, sp, #0x70
  41beb4:	stp	x29, x30, [sp, #96]
  41beb8:	add	x29, sp, #0x60
  41bebc:	stur	x0, [x29, #-8]
  41bec0:	stur	x1, [x29, #-16]
  41bec4:	stur	x2, [x29, #-24]
  41bec8:	stur	x3, [x29, #-32]
  41becc:	ldur	x8, [x29, #-32]
  41bed0:	cbz	x8, 41bee0 <wcrtomb@plt+0x19130>
  41bed4:	ldur	x8, [x29, #-32]
  41bed8:	str	x8, [sp, #24]
  41bedc:	b	41beec <wcrtomb@plt+0x1913c>
  41bee0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41bee4:	add	x8, x8, #0x7a0
  41bee8:	str	x8, [sp, #24]
  41beec:	ldr	x8, [sp, #24]
  41bef0:	stur	x8, [x29, #-40]
  41bef4:	bl	402d00 <__errno_location@plt>
  41bef8:	ldr	w9, [x0]
  41befc:	stur	w9, [x29, #-44]
  41bf00:	ldur	x8, [x29, #-40]
  41bf04:	ldr	w9, [x8, #4]
  41bf08:	ldur	x8, [x29, #-24]
  41bf0c:	mov	x10, xzr
  41bf10:	mov	w11, #0x1                   	// #1
  41bf14:	mov	w12, wzr
  41bf18:	cmp	x8, #0x0
  41bf1c:	csel	w11, w12, w11, ne  // ne = any
  41bf20:	orr	w9, w9, w11
  41bf24:	str	w9, [sp, #48]
  41bf28:	ldur	x2, [x29, #-8]
  41bf2c:	ldur	x3, [x29, #-16]
  41bf30:	ldur	x8, [x29, #-40]
  41bf34:	ldr	w4, [x8]
  41bf38:	ldr	w5, [sp, #48]
  41bf3c:	ldur	x8, [x29, #-40]
  41bf40:	add	x6, x8, #0x8
  41bf44:	ldur	x8, [x29, #-40]
  41bf48:	ldr	x7, [x8, #40]
  41bf4c:	ldur	x8, [x29, #-40]
  41bf50:	ldr	x8, [x8, #48]
  41bf54:	mov	x0, x10
  41bf58:	mov	x1, x10
  41bf5c:	mov	x10, sp
  41bf60:	str	x8, [x10]
  41bf64:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41bf68:	add	x8, x0, #0x1
  41bf6c:	str	x8, [sp, #40]
  41bf70:	ldr	x0, [sp, #40]
  41bf74:	bl	41d8b4 <wcrtomb@plt+0x1ab04>
  41bf78:	str	x0, [sp, #32]
  41bf7c:	ldr	x0, [sp, #32]
  41bf80:	ldr	x1, [sp, #40]
  41bf84:	ldur	x2, [x29, #-8]
  41bf88:	ldur	x3, [x29, #-16]
  41bf8c:	ldur	x8, [x29, #-40]
  41bf90:	ldr	w4, [x8]
  41bf94:	ldr	w5, [sp, #48]
  41bf98:	ldur	x8, [x29, #-40]
  41bf9c:	add	x6, x8, #0x8
  41bfa0:	ldur	x8, [x29, #-40]
  41bfa4:	ldr	x7, [x8, #40]
  41bfa8:	ldur	x8, [x29, #-40]
  41bfac:	ldr	x8, [x8, #48]
  41bfb0:	mov	x10, sp
  41bfb4:	str	x8, [x10]
  41bfb8:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41bfbc:	ldur	w9, [x29, #-44]
  41bfc0:	str	w9, [sp, #20]
  41bfc4:	bl	402d00 <__errno_location@plt>
  41bfc8:	ldr	w9, [sp, #20]
  41bfcc:	str	w9, [x0]
  41bfd0:	ldur	x8, [x29, #-24]
  41bfd4:	cbz	x8, 41bfe8 <wcrtomb@plt+0x19238>
  41bfd8:	ldr	x8, [sp, #40]
  41bfdc:	subs	x8, x8, #0x1
  41bfe0:	ldur	x9, [x29, #-24]
  41bfe4:	str	x8, [x9]
  41bfe8:	ldr	x0, [sp, #32]
  41bfec:	ldp	x29, x30, [sp, #96]
  41bff0:	add	sp, sp, #0x70
  41bff4:	ret
  41bff8:	sub	sp, sp, #0x30
  41bffc:	stp	x29, x30, [sp, #32]
  41c000:	add	x29, sp, #0x20
  41c004:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c008:	add	x8, x8, #0x490
  41c00c:	mov	w9, #0x1                   	// #1
  41c010:	adrp	x10, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c014:	add	x10, x10, #0x4a0
  41c018:	ldr	x8, [x8]
  41c01c:	stur	x8, [x29, #-8]
  41c020:	stur	w9, [x29, #-12]
  41c024:	str	x10, [sp, #8]
  41c028:	ldur	w8, [x29, #-12]
  41c02c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c030:	add	x9, x9, #0x498
  41c034:	ldr	w10, [x9]
  41c038:	cmp	w8, w10
  41c03c:	b.ge	41c06c <wcrtomb@plt+0x192bc>  // b.tcont
  41c040:	ldur	x8, [x29, #-8]
  41c044:	ldursw	x9, [x29, #-12]
  41c048:	mov	x10, #0x10                  	// #16
  41c04c:	mul	x9, x10, x9
  41c050:	add	x8, x8, x9
  41c054:	ldr	x0, [x8, #8]
  41c058:	bl	402b40 <free@plt>
  41c05c:	ldur	w8, [x29, #-12]
  41c060:	add	w8, w8, #0x1
  41c064:	stur	w8, [x29, #-12]
  41c068:	b	41c028 <wcrtomb@plt+0x19278>
  41c06c:	ldur	x8, [x29, #-8]
  41c070:	ldr	x8, [x8, #8]
  41c074:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c078:	add	x9, x9, #0x7d8
  41c07c:	cmp	x8, x9
  41c080:	b.eq	41c0a8 <wcrtomb@plt+0x192f8>  // b.none
  41c084:	ldur	x8, [x29, #-8]
  41c088:	ldr	x0, [x8, #8]
  41c08c:	bl	402b40 <free@plt>
  41c090:	mov	x8, #0x100                 	// #256
  41c094:	ldr	x9, [sp, #8]
  41c098:	str	x8, [x9]
  41c09c:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c0a0:	add	x8, x8, #0x7d8
  41c0a4:	str	x8, [x9, #8]
  41c0a8:	ldur	x8, [x29, #-8]
  41c0ac:	ldr	x9, [sp, #8]
  41c0b0:	cmp	x8, x9
  41c0b4:	b.eq	41c0d0 <wcrtomb@plt+0x19320>  // b.none
  41c0b8:	ldur	x0, [x29, #-8]
  41c0bc:	bl	402b40 <free@plt>
  41c0c0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c0c4:	add	x8, x8, #0x490
  41c0c8:	ldr	x9, [sp, #8]
  41c0cc:	str	x9, [x8]
  41c0d0:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c0d4:	add	x8, x8, #0x498
  41c0d8:	mov	w9, #0x1                   	// #1
  41c0dc:	str	w9, [x8]
  41c0e0:	ldp	x29, x30, [sp, #32]
  41c0e4:	add	sp, sp, #0x30
  41c0e8:	ret
  41c0ec:	sub	sp, sp, #0x20
  41c0f0:	stp	x29, x30, [sp, #16]
  41c0f4:	add	x29, sp, #0x10
  41c0f8:	mov	x2, #0xffffffffffffffff    	// #-1
  41c0fc:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c100:	add	x3, x3, #0x7a0
  41c104:	stur	w0, [x29, #-4]
  41c108:	str	x1, [sp]
  41c10c:	ldur	w0, [x29, #-4]
  41c110:	ldr	x1, [sp]
  41c114:	bl	41c124 <wcrtomb@plt+0x19374>
  41c118:	ldp	x29, x30, [sp, #16]
  41c11c:	add	sp, sp, #0x20
  41c120:	ret
  41c124:	sub	sp, sp, #0x90
  41c128:	stp	x29, x30, [sp, #128]
  41c12c:	add	x29, sp, #0x80
  41c130:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c134:	add	x8, x8, #0x490
  41c138:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c13c:	add	x9, x9, #0x498
  41c140:	stur	w0, [x29, #-4]
  41c144:	stur	x1, [x29, #-16]
  41c148:	stur	x2, [x29, #-24]
  41c14c:	stur	x3, [x29, #-32]
  41c150:	str	x8, [sp, #32]
  41c154:	str	x9, [sp, #24]
  41c158:	bl	402d00 <__errno_location@plt>
  41c15c:	ldr	w10, [x0]
  41c160:	stur	w10, [x29, #-36]
  41c164:	ldr	x8, [sp, #32]
  41c168:	ldr	x9, [x8]
  41c16c:	stur	x9, [x29, #-48]
  41c170:	ldur	w10, [x29, #-4]
  41c174:	cmp	w10, #0x0
  41c178:	cset	w10, ge  // ge = tcont
  41c17c:	tbnz	w10, #0, 41c184 <wcrtomb@plt+0x193d4>
  41c180:	bl	402a70 <abort@plt>
  41c184:	ldr	x8, [sp, #24]
  41c188:	ldr	w9, [x8]
  41c18c:	ldur	w10, [x29, #-4]
  41c190:	cmp	w9, w10
  41c194:	b.gt	41c288 <wcrtomb@plt+0x194d8>
  41c198:	ldur	x8, [x29, #-48]
  41c19c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c1a0:	add	x9, x9, #0x4a0
  41c1a4:	cmp	x8, x9
  41c1a8:	cset	w10, eq  // eq = none
  41c1ac:	and	w10, w10, #0x1
  41c1b0:	sturb	w10, [x29, #-49]
  41c1b4:	mov	w10, #0x7ffffffe            	// #2147483646
  41c1b8:	stur	w10, [x29, #-56]
  41c1bc:	ldur	w10, [x29, #-56]
  41c1c0:	ldur	w11, [x29, #-4]
  41c1c4:	cmp	w10, w11
  41c1c8:	b.ge	41c1d0 <wcrtomb@plt+0x19420>  // b.tcont
  41c1cc:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41c1d0:	ldurb	w8, [x29, #-49]
  41c1d4:	tbnz	w8, #0, 41c1dc <wcrtomb@plt+0x1942c>
  41c1d8:	b	41c1e8 <wcrtomb@plt+0x19438>
  41c1dc:	mov	x8, xzr
  41c1e0:	str	x8, [sp, #16]
  41c1e4:	b	41c1f0 <wcrtomb@plt+0x19440>
  41c1e8:	ldur	x8, [x29, #-48]
  41c1ec:	str	x8, [sp, #16]
  41c1f0:	ldr	x8, [sp, #16]
  41c1f4:	ldur	w9, [x29, #-4]
  41c1f8:	add	w9, w9, #0x1
  41c1fc:	mov	w10, #0x10                  	// #16
  41c200:	smull	x1, w9, w10
  41c204:	mov	x0, x8
  41c208:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  41c20c:	stur	x0, [x29, #-48]
  41c210:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c214:	add	x8, x8, #0x490
  41c218:	str	x0, [x8]
  41c21c:	ldurb	w9, [x29, #-49]
  41c220:	tbnz	w9, #0, 41c228 <wcrtomb@plt+0x19478>
  41c224:	b	41c23c <wcrtomb@plt+0x1948c>
  41c228:	ldur	x8, [x29, #-48]
  41c22c:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c230:	add	x9, x9, #0x4a0
  41c234:	ldr	q0, [x9]
  41c238:	str	q0, [x8]
  41c23c:	ldur	x8, [x29, #-48]
  41c240:	ldr	x9, [sp, #24]
  41c244:	ldrsw	x10, [x9]
  41c248:	mov	x11, #0x10                  	// #16
  41c24c:	mul	x10, x11, x10
  41c250:	add	x0, x8, x10
  41c254:	ldur	w12, [x29, #-4]
  41c258:	add	w12, w12, #0x1
  41c25c:	ldr	w13, [x9]
  41c260:	subs	w12, w12, w13
  41c264:	mov	w13, #0x10                  	// #16
  41c268:	smull	x2, w12, w13
  41c26c:	mov	w12, wzr
  41c270:	mov	w1, w12
  41c274:	bl	402960 <memset@plt>
  41c278:	ldur	w12, [x29, #-4]
  41c27c:	add	w12, w12, #0x1
  41c280:	ldr	x8, [sp, #24]
  41c284:	str	w12, [x8]
  41c288:	ldur	x8, [x29, #-48]
  41c28c:	ldursw	x9, [x29, #-4]
  41c290:	mov	x10, #0x10                  	// #16
  41c294:	mul	x9, x10, x9
  41c298:	ldr	x8, [x8, x9]
  41c29c:	str	x8, [sp, #64]
  41c2a0:	ldur	x8, [x29, #-48]
  41c2a4:	ldursw	x9, [x29, #-4]
  41c2a8:	mul	x9, x10, x9
  41c2ac:	add	x8, x8, x9
  41c2b0:	ldr	x8, [x8, #8]
  41c2b4:	str	x8, [sp, #56]
  41c2b8:	ldur	x8, [x29, #-32]
  41c2bc:	ldr	w11, [x8, #4]
  41c2c0:	orr	w11, w11, #0x1
  41c2c4:	str	w11, [sp, #52]
  41c2c8:	ldr	x0, [sp, #56]
  41c2cc:	ldr	x1, [sp, #64]
  41c2d0:	ldur	x2, [x29, #-16]
  41c2d4:	ldur	x3, [x29, #-24]
  41c2d8:	ldur	x8, [x29, #-32]
  41c2dc:	ldr	w4, [x8]
  41c2e0:	ldr	w5, [sp, #52]
  41c2e4:	ldur	x8, [x29, #-32]
  41c2e8:	add	x6, x8, #0x8
  41c2ec:	ldur	x8, [x29, #-32]
  41c2f0:	ldr	x7, [x8, #40]
  41c2f4:	ldur	x8, [x29, #-32]
  41c2f8:	ldr	x8, [x8, #48]
  41c2fc:	mov	x9, sp
  41c300:	str	x8, [x9]
  41c304:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41c308:	str	x0, [sp, #40]
  41c30c:	ldr	x8, [sp, #64]
  41c310:	ldr	x9, [sp, #40]
  41c314:	cmp	x8, x9
  41c318:	b.hi	41c3bc <wcrtomb@plt+0x1960c>  // b.pmore
  41c31c:	ldr	x8, [sp, #40]
  41c320:	add	x8, x8, #0x1
  41c324:	str	x8, [sp, #64]
  41c328:	ldur	x9, [x29, #-48]
  41c32c:	ldursw	x10, [x29, #-4]
  41c330:	mov	x11, #0x10                  	// #16
  41c334:	mul	x10, x11, x10
  41c338:	str	x8, [x9, x10]
  41c33c:	ldr	x8, [sp, #56]
  41c340:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c344:	add	x9, x9, #0x7d8
  41c348:	cmp	x8, x9
  41c34c:	b.eq	41c358 <wcrtomb@plt+0x195a8>  // b.none
  41c350:	ldr	x0, [sp, #56]
  41c354:	bl	402b40 <free@plt>
  41c358:	ldr	x0, [sp, #64]
  41c35c:	bl	41d8b4 <wcrtomb@plt+0x1ab04>
  41c360:	str	x0, [sp, #56]
  41c364:	ldur	x8, [x29, #-48]
  41c368:	ldursw	x9, [x29, #-4]
  41c36c:	mov	x10, #0x10                  	// #16
  41c370:	mul	x9, x10, x9
  41c374:	add	x8, x8, x9
  41c378:	str	x0, [x8, #8]
  41c37c:	ldr	x0, [sp, #56]
  41c380:	ldr	x1, [sp, #64]
  41c384:	ldur	x2, [x29, #-16]
  41c388:	ldur	x3, [x29, #-24]
  41c38c:	ldur	x8, [x29, #-32]
  41c390:	ldr	w4, [x8]
  41c394:	ldr	w5, [sp, #52]
  41c398:	ldur	x8, [x29, #-32]
  41c39c:	add	x6, x8, #0x8
  41c3a0:	ldur	x8, [x29, #-32]
  41c3a4:	ldr	x7, [x8, #40]
  41c3a8:	ldur	x8, [x29, #-32]
  41c3ac:	ldr	x8, [x8, #48]
  41c3b0:	mov	x9, sp
  41c3b4:	str	x8, [x9]
  41c3b8:	bl	41aba0 <wcrtomb@plt+0x17df0>
  41c3bc:	ldur	w8, [x29, #-36]
  41c3c0:	str	w8, [sp, #12]
  41c3c4:	bl	402d00 <__errno_location@plt>
  41c3c8:	ldr	w8, [sp, #12]
  41c3cc:	str	w8, [x0]
  41c3d0:	ldr	x0, [sp, #56]
  41c3d4:	ldp	x29, x30, [sp, #128]
  41c3d8:	add	sp, sp, #0x90
  41c3dc:	ret
  41c3e0:	sub	sp, sp, #0x30
  41c3e4:	stp	x29, x30, [sp, #32]
  41c3e8:	add	x29, sp, #0x20
  41c3ec:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c3f0:	add	x3, x3, #0x7a0
  41c3f4:	stur	w0, [x29, #-4]
  41c3f8:	str	x1, [sp, #16]
  41c3fc:	str	x2, [sp, #8]
  41c400:	ldur	w0, [x29, #-4]
  41c404:	ldr	x1, [sp, #16]
  41c408:	ldr	x2, [sp, #8]
  41c40c:	bl	41c124 <wcrtomb@plt+0x19374>
  41c410:	ldp	x29, x30, [sp, #32]
  41c414:	add	sp, sp, #0x30
  41c418:	ret
  41c41c:	sub	sp, sp, #0x20
  41c420:	stp	x29, x30, [sp, #16]
  41c424:	add	x29, sp, #0x10
  41c428:	mov	w8, wzr
  41c42c:	str	x0, [sp, #8]
  41c430:	ldr	x1, [sp, #8]
  41c434:	mov	w0, w8
  41c438:	bl	41c0ec <wcrtomb@plt+0x1933c>
  41c43c:	ldp	x29, x30, [sp, #16]
  41c440:	add	sp, sp, #0x20
  41c444:	ret
  41c448:	sub	sp, sp, #0x20
  41c44c:	stp	x29, x30, [sp, #16]
  41c450:	add	x29, sp, #0x10
  41c454:	mov	w8, wzr
  41c458:	str	x0, [sp, #8]
  41c45c:	str	x1, [sp]
  41c460:	ldr	x1, [sp, #8]
  41c464:	ldr	x2, [sp]
  41c468:	mov	w0, w8
  41c46c:	bl	41c3e0 <wcrtomb@plt+0x19630>
  41c470:	ldp	x29, x30, [sp, #16]
  41c474:	add	sp, sp, #0x20
  41c478:	ret
  41c47c:	sub	sp, sp, #0x70
  41c480:	stp	x29, x30, [sp, #96]
  41c484:	add	x29, sp, #0x60
  41c488:	mov	x8, #0xffffffffffffffff    	// #-1
  41c48c:	add	x9, sp, #0x18
  41c490:	stur	w0, [x29, #-4]
  41c494:	stur	w1, [x29, #-8]
  41c498:	stur	x2, [x29, #-16]
  41c49c:	ldur	w0, [x29, #-8]
  41c4a0:	str	x8, [sp, #16]
  41c4a4:	mov	x8, x9
  41c4a8:	str	x9, [sp, #8]
  41c4ac:	bl	41c4d0 <wcrtomb@plt+0x19720>
  41c4b0:	ldur	w0, [x29, #-4]
  41c4b4:	ldur	x1, [x29, #-16]
  41c4b8:	ldr	x2, [sp, #16]
  41c4bc:	ldr	x3, [sp, #8]
  41c4c0:	bl	41c124 <wcrtomb@plt+0x19374>
  41c4c4:	ldp	x29, x30, [sp, #96]
  41c4c8:	add	sp, sp, #0x70
  41c4cc:	ret
  41c4d0:	sub	sp, sp, #0x20
  41c4d4:	stp	x29, x30, [sp, #16]
  41c4d8:	add	x29, sp, #0x10
  41c4dc:	mov	x2, #0x38                  	// #56
  41c4e0:	stur	w0, [x29, #-4]
  41c4e4:	mov	x0, x8
  41c4e8:	mov	w9, wzr
  41c4ec:	mov	w1, w9
  41c4f0:	str	x8, [sp]
  41c4f4:	bl	402960 <memset@plt>
  41c4f8:	ldur	w9, [x29, #-4]
  41c4fc:	cmp	w9, #0xa
  41c500:	b.ne	41c508 <wcrtomb@plt+0x19758>  // b.any
  41c504:	bl	402a70 <abort@plt>
  41c508:	ldur	w8, [x29, #-4]
  41c50c:	ldr	x9, [sp]
  41c510:	str	w8, [x9]
  41c514:	ldp	x29, x30, [sp, #16]
  41c518:	add	sp, sp, #0x20
  41c51c:	ret
  41c520:	sub	sp, sp, #0x70
  41c524:	stp	x29, x30, [sp, #96]
  41c528:	add	x29, sp, #0x60
  41c52c:	add	x8, sp, #0x10
  41c530:	stur	w0, [x29, #-4]
  41c534:	stur	w1, [x29, #-8]
  41c538:	stur	x2, [x29, #-16]
  41c53c:	stur	x3, [x29, #-24]
  41c540:	ldur	w0, [x29, #-8]
  41c544:	str	x8, [sp, #8]
  41c548:	bl	41c4d0 <wcrtomb@plt+0x19720>
  41c54c:	ldur	w0, [x29, #-4]
  41c550:	ldur	x1, [x29, #-16]
  41c554:	ldur	x2, [x29, #-24]
  41c558:	ldr	x3, [sp, #8]
  41c55c:	bl	41c124 <wcrtomb@plt+0x19374>
  41c560:	ldp	x29, x30, [sp, #96]
  41c564:	add	sp, sp, #0x70
  41c568:	ret
  41c56c:	sub	sp, sp, #0x20
  41c570:	stp	x29, x30, [sp, #16]
  41c574:	add	x29, sp, #0x10
  41c578:	mov	w8, wzr
  41c57c:	stur	w0, [x29, #-4]
  41c580:	str	x1, [sp]
  41c584:	ldur	w1, [x29, #-4]
  41c588:	ldr	x2, [sp]
  41c58c:	mov	w0, w8
  41c590:	bl	41c47c <wcrtomb@plt+0x196cc>
  41c594:	ldp	x29, x30, [sp, #16]
  41c598:	add	sp, sp, #0x20
  41c59c:	ret
  41c5a0:	sub	sp, sp, #0x30
  41c5a4:	stp	x29, x30, [sp, #32]
  41c5a8:	add	x29, sp, #0x20
  41c5ac:	mov	w8, wzr
  41c5b0:	stur	w0, [x29, #-4]
  41c5b4:	str	x1, [sp, #16]
  41c5b8:	str	x2, [sp, #8]
  41c5bc:	ldur	w1, [x29, #-4]
  41c5c0:	ldr	x2, [sp, #16]
  41c5c4:	ldr	x3, [sp, #8]
  41c5c8:	mov	w0, w8
  41c5cc:	bl	41c520 <wcrtomb@plt+0x19770>
  41c5d0:	ldp	x29, x30, [sp, #32]
  41c5d4:	add	sp, sp, #0x30
  41c5d8:	ret
  41c5dc:	sub	sp, sp, #0x70
  41c5e0:	stp	x29, x30, [sp, #96]
  41c5e4:	add	x29, sp, #0x60
  41c5e8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c5ec:	add	x8, x8, #0x7a0
  41c5f0:	mov	x9, #0x38                  	// #56
  41c5f4:	mov	w10, #0x1                   	// #1
  41c5f8:	mov	w11, wzr
  41c5fc:	add	x12, sp, #0x10
  41c600:	stur	x0, [x29, #-8]
  41c604:	stur	x1, [x29, #-16]
  41c608:	sturb	w2, [x29, #-17]
  41c60c:	mov	x0, x12
  41c610:	mov	x1, x8
  41c614:	mov	x2, x9
  41c618:	str	w10, [sp, #12]
  41c61c:	str	w11, [sp, #8]
  41c620:	str	x12, [sp]
  41c624:	bl	4026a0 <memcpy@plt>
  41c628:	ldurb	w1, [x29, #-17]
  41c62c:	ldr	x0, [sp]
  41c630:	ldr	w2, [sp, #12]
  41c634:	bl	41a968 <wcrtomb@plt+0x17bb8>
  41c638:	ldur	x1, [x29, #-8]
  41c63c:	ldur	x2, [x29, #-16]
  41c640:	ldr	w10, [sp, #8]
  41c644:	mov	w0, w10
  41c648:	ldr	x3, [sp]
  41c64c:	bl	41c124 <wcrtomb@plt+0x19374>
  41c650:	ldp	x29, x30, [sp, #96]
  41c654:	add	sp, sp, #0x70
  41c658:	ret
  41c65c:	sub	sp, sp, #0x20
  41c660:	stp	x29, x30, [sp, #16]
  41c664:	add	x29, sp, #0x10
  41c668:	mov	x8, #0xffffffffffffffff    	// #-1
  41c66c:	str	x0, [sp, #8]
  41c670:	strb	w1, [sp, #7]
  41c674:	ldr	x0, [sp, #8]
  41c678:	ldrb	w2, [sp, #7]
  41c67c:	mov	x1, x8
  41c680:	bl	41c5dc <wcrtomb@plt+0x1982c>
  41c684:	ldp	x29, x30, [sp, #16]
  41c688:	add	sp, sp, #0x20
  41c68c:	ret
  41c690:	sub	sp, sp, #0x20
  41c694:	stp	x29, x30, [sp, #16]
  41c698:	add	x29, sp, #0x10
  41c69c:	str	x0, [sp, #8]
  41c6a0:	ldr	x0, [sp, #8]
  41c6a4:	mov	w1, #0x3a                  	// #58
  41c6a8:	bl	41c65c <wcrtomb@plt+0x198ac>
  41c6ac:	ldp	x29, x30, [sp, #16]
  41c6b0:	add	sp, sp, #0x20
  41c6b4:	ret
  41c6b8:	sub	sp, sp, #0x20
  41c6bc:	stp	x29, x30, [sp, #16]
  41c6c0:	add	x29, sp, #0x10
  41c6c4:	str	x0, [sp, #8]
  41c6c8:	str	x1, [sp]
  41c6cc:	ldr	x0, [sp, #8]
  41c6d0:	ldr	x1, [sp]
  41c6d4:	mov	w2, #0x3a                  	// #58
  41c6d8:	bl	41c5dc <wcrtomb@plt+0x1982c>
  41c6dc:	ldp	x29, x30, [sp, #16]
  41c6e0:	add	sp, sp, #0x20
  41c6e4:	ret
  41c6e8:	sub	sp, sp, #0xc0
  41c6ec:	stp	x29, x30, [sp, #176]
  41c6f0:	add	x29, sp, #0xb0
  41c6f4:	mov	x8, #0x38                  	// #56
  41c6f8:	mov	w9, #0x1                   	// #1
  41c6fc:	mov	x10, #0xffffffffffffffff    	// #-1
  41c700:	sub	x11, x29, #0x48
  41c704:	add	x12, sp, #0x30
  41c708:	stur	w0, [x29, #-4]
  41c70c:	stur	w1, [x29, #-8]
  41c710:	stur	x2, [x29, #-16]
  41c714:	ldur	w0, [x29, #-8]
  41c718:	str	x8, [sp, #40]
  41c71c:	mov	x8, x12
  41c720:	str	w9, [sp, #36]
  41c724:	str	x10, [sp, #24]
  41c728:	str	x11, [sp, #16]
  41c72c:	str	x12, [sp, #8]
  41c730:	bl	41c4d0 <wcrtomb@plt+0x19720>
  41c734:	ldr	x0, [sp, #16]
  41c738:	ldr	x1, [sp, #8]
  41c73c:	ldr	x2, [sp, #40]
  41c740:	bl	4026a0 <memcpy@plt>
  41c744:	ldr	x0, [sp, #16]
  41c748:	mov	w1, #0x3a                  	// #58
  41c74c:	ldr	w2, [sp, #36]
  41c750:	bl	41a968 <wcrtomb@plt+0x17bb8>
  41c754:	ldur	w9, [x29, #-4]
  41c758:	ldur	x1, [x29, #-16]
  41c75c:	mov	w0, w9
  41c760:	ldr	x2, [sp, #24]
  41c764:	ldr	x3, [sp, #16]
  41c768:	bl	41c124 <wcrtomb@plt+0x19374>
  41c76c:	ldp	x29, x30, [sp, #176]
  41c770:	add	sp, sp, #0xc0
  41c774:	ret
  41c778:	sub	sp, sp, #0x30
  41c77c:	stp	x29, x30, [sp, #32]
  41c780:	add	x29, sp, #0x20
  41c784:	mov	x4, #0xffffffffffffffff    	// #-1
  41c788:	stur	w0, [x29, #-4]
  41c78c:	str	x1, [sp, #16]
  41c790:	str	x2, [sp, #8]
  41c794:	str	x3, [sp]
  41c798:	ldur	w0, [x29, #-4]
  41c79c:	ldr	x1, [sp, #16]
  41c7a0:	ldr	x2, [sp, #8]
  41c7a4:	ldr	x3, [sp]
  41c7a8:	bl	41c7b8 <wcrtomb@plt+0x19a08>
  41c7ac:	ldp	x29, x30, [sp, #32]
  41c7b0:	add	sp, sp, #0x30
  41c7b4:	ret
  41c7b8:	sub	sp, sp, #0x80
  41c7bc:	stp	x29, x30, [sp, #112]
  41c7c0:	add	x29, sp, #0x70
  41c7c4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c7c8:	add	x8, x8, #0x7a0
  41c7cc:	mov	x9, #0x38                  	// #56
  41c7d0:	add	x10, sp, #0x10
  41c7d4:	stur	w0, [x29, #-4]
  41c7d8:	stur	x1, [x29, #-16]
  41c7dc:	stur	x2, [x29, #-24]
  41c7e0:	stur	x3, [x29, #-32]
  41c7e4:	stur	x4, [x29, #-40]
  41c7e8:	mov	x0, x10
  41c7ec:	mov	x1, x8
  41c7f0:	mov	x2, x9
  41c7f4:	str	x10, [sp, #8]
  41c7f8:	bl	4026a0 <memcpy@plt>
  41c7fc:	ldur	x1, [x29, #-16]
  41c800:	ldur	x2, [x29, #-24]
  41c804:	ldr	x0, [sp, #8]
  41c808:	bl	41aa70 <wcrtomb@plt+0x17cc0>
  41c80c:	ldur	w0, [x29, #-4]
  41c810:	ldur	x1, [x29, #-32]
  41c814:	ldur	x2, [x29, #-40]
  41c818:	ldr	x3, [sp, #8]
  41c81c:	bl	41c124 <wcrtomb@plt+0x19374>
  41c820:	ldp	x29, x30, [sp, #112]
  41c824:	add	sp, sp, #0x80
  41c828:	ret
  41c82c:	sub	sp, sp, #0x30
  41c830:	stp	x29, x30, [sp, #32]
  41c834:	add	x29, sp, #0x20
  41c838:	mov	w8, wzr
  41c83c:	stur	x0, [x29, #-8]
  41c840:	str	x1, [sp, #16]
  41c844:	str	x2, [sp, #8]
  41c848:	ldur	x1, [x29, #-8]
  41c84c:	ldr	x2, [sp, #16]
  41c850:	ldr	x3, [sp, #8]
  41c854:	mov	w0, w8
  41c858:	bl	41c778 <wcrtomb@plt+0x199c8>
  41c85c:	ldp	x29, x30, [sp, #32]
  41c860:	add	sp, sp, #0x30
  41c864:	ret
  41c868:	sub	sp, sp, #0x30
  41c86c:	stp	x29, x30, [sp, #32]
  41c870:	add	x29, sp, #0x20
  41c874:	mov	w8, wzr
  41c878:	stur	x0, [x29, #-8]
  41c87c:	str	x1, [sp, #16]
  41c880:	str	x2, [sp, #8]
  41c884:	str	x3, [sp]
  41c888:	ldur	x1, [x29, #-8]
  41c88c:	ldr	x2, [sp, #16]
  41c890:	ldr	x3, [sp, #8]
  41c894:	ldr	x4, [sp]
  41c898:	mov	w0, w8
  41c89c:	bl	41c7b8 <wcrtomb@plt+0x19a08>
  41c8a0:	ldp	x29, x30, [sp, #32]
  41c8a4:	add	sp, sp, #0x30
  41c8a8:	ret
  41c8ac:	sub	sp, sp, #0x30
  41c8b0:	stp	x29, x30, [sp, #32]
  41c8b4:	add	x29, sp, #0x20
  41c8b8:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41c8bc:	add	x3, x3, #0x4b0
  41c8c0:	stur	w0, [x29, #-4]
  41c8c4:	str	x1, [sp, #16]
  41c8c8:	str	x2, [sp, #8]
  41c8cc:	ldur	w0, [x29, #-4]
  41c8d0:	ldr	x1, [sp, #16]
  41c8d4:	ldr	x2, [sp, #8]
  41c8d8:	bl	41c124 <wcrtomb@plt+0x19374>
  41c8dc:	ldp	x29, x30, [sp, #32]
  41c8e0:	add	sp, sp, #0x30
  41c8e4:	ret
  41c8e8:	sub	sp, sp, #0x20
  41c8ec:	stp	x29, x30, [sp, #16]
  41c8f0:	add	x29, sp, #0x10
  41c8f4:	mov	w8, wzr
  41c8f8:	str	x0, [sp, #8]
  41c8fc:	str	x1, [sp]
  41c900:	ldr	x1, [sp, #8]
  41c904:	ldr	x2, [sp]
  41c908:	mov	w0, w8
  41c90c:	bl	41c8ac <wcrtomb@plt+0x19afc>
  41c910:	ldp	x29, x30, [sp, #16]
  41c914:	add	sp, sp, #0x20
  41c918:	ret
  41c91c:	sub	sp, sp, #0x20
  41c920:	stp	x29, x30, [sp, #16]
  41c924:	add	x29, sp, #0x10
  41c928:	mov	x2, #0xffffffffffffffff    	// #-1
  41c92c:	stur	w0, [x29, #-4]
  41c930:	str	x1, [sp]
  41c934:	ldur	w0, [x29, #-4]
  41c938:	ldr	x1, [sp]
  41c93c:	bl	41c8ac <wcrtomb@plt+0x19afc>
  41c940:	ldp	x29, x30, [sp, #16]
  41c944:	add	sp, sp, #0x20
  41c948:	ret
  41c94c:	sub	sp, sp, #0x20
  41c950:	stp	x29, x30, [sp, #16]
  41c954:	add	x29, sp, #0x10
  41c958:	mov	w8, wzr
  41c95c:	str	x0, [sp, #8]
  41c960:	ldr	x1, [sp, #8]
  41c964:	mov	w0, w8
  41c968:	bl	41c91c <wcrtomb@plt+0x19b6c>
  41c96c:	ldp	x29, x30, [sp, #16]
  41c970:	add	sp, sp, #0x20
  41c974:	ret
  41c978:	sub	sp, sp, #0x40
  41c97c:	stp	x29, x30, [sp, #48]
  41c980:	add	x29, sp, #0x30
  41c984:	stur	x0, [x29, #-16]
  41c988:	stur	w1, [x29, #-20]
  41c98c:	ldur	x0, [x29, #-16]
  41c990:	bl	402d40 <gettext@plt>
  41c994:	str	x0, [sp, #16]
  41c998:	ldr	x8, [sp, #16]
  41c99c:	ldur	x9, [x29, #-16]
  41c9a0:	cmp	x8, x9
  41c9a4:	b.eq	41c9b4 <wcrtomb@plt+0x19c04>  // b.none
  41c9a8:	ldr	x8, [sp, #16]
  41c9ac:	stur	x8, [x29, #-8]
  41c9b0:	b	41ca54 <wcrtomb@plt+0x19ca4>
  41c9b4:	bl	41a68c <wcrtomb@plt+0x178dc>
  41c9b8:	str	x0, [sp, #8]
  41c9bc:	ldr	x0, [sp, #8]
  41c9c0:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x18e64>
  41c9c4:	add	x1, x1, #0xfff
  41c9c8:	bl	4365f0 <_obstack_memory_used@@Base+0x18454>
  41c9cc:	cbnz	w0, 41c9f8 <wcrtomb@plt+0x19c48>
  41c9d0:	ldur	x8, [x29, #-16]
  41c9d4:	ldrb	w9, [x8]
  41c9d8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41c9dc:	add	x8, x8, #0x71a
  41c9e0:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41c9e4:	add	x10, x10, #0x716
  41c9e8:	cmp	w9, #0x60
  41c9ec:	csel	x8, x10, x8, eq  // eq = none
  41c9f0:	stur	x8, [x29, #-8]
  41c9f4:	b	41ca54 <wcrtomb@plt+0x19ca4>
  41c9f8:	ldr	x0, [sp, #8]
  41c9fc:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ca00:	add	x1, x1, #0x71e
  41ca04:	bl	4365f0 <_obstack_memory_used@@Base+0x18454>
  41ca08:	cbnz	w0, 41ca34 <wcrtomb@plt+0x19c84>
  41ca0c:	ldur	x8, [x29, #-16]
  41ca10:	ldrb	w9, [x8]
  41ca14:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ca18:	add	x8, x8, #0x72a
  41ca1c:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ca20:	add	x10, x10, #0x726
  41ca24:	cmp	w9, #0x60
  41ca28:	csel	x8, x10, x8, eq  // eq = none
  41ca2c:	stur	x8, [x29, #-8]
  41ca30:	b	41ca54 <wcrtomb@plt+0x19ca4>
  41ca34:	ldur	w8, [x29, #-20]
  41ca38:	adrp	x9, 437000 <_obstack_memory_used@@Base+0x18e64>
  41ca3c:	add	x9, x9, #0xf96
  41ca40:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ca44:	add	x10, x10, #0x204
  41ca48:	cmp	w8, #0x9
  41ca4c:	csel	x9, x10, x9, eq  // eq = none
  41ca50:	stur	x9, [x29, #-8]
  41ca54:	ldur	x0, [x29, #-8]
  41ca58:	ldp	x29, x30, [sp, #48]
  41ca5c:	add	sp, sp, #0x40
  41ca60:	ret
  41ca64:	sub	sp, sp, #0x20
  41ca68:	stp	x29, x30, [sp, #16]
  41ca6c:	add	x29, sp, #0x10
  41ca70:	mov	w8, #0x5f                  	// #95
  41ca74:	mov	w9, #0xffffffff            	// #-1
  41ca78:	str	x0, [sp, #8]
  41ca7c:	str	w8, [sp, #4]
  41ca80:	str	w9, [sp]
  41ca84:	bl	402d00 <__errno_location@plt>
  41ca88:	ldr	w8, [sp, #4]
  41ca8c:	str	w8, [x0]
  41ca90:	ldr	w0, [sp]
  41ca94:	ldp	x29, x30, [sp, #16]
  41ca98:	add	sp, sp, #0x20
  41ca9c:	ret
  41caa0:	sub	sp, sp, #0x10
  41caa4:	str	x0, [sp, #8]
  41caa8:	add	sp, sp, #0x10
  41caac:	ret
  41cab0:	sub	sp, sp, #0x20
  41cab4:	stp	x29, x30, [sp, #16]
  41cab8:	add	x29, sp, #0x10
  41cabc:	mov	w8, #0x5f                  	// #95
  41cac0:	mov	w9, #0xffffffff            	// #-1
  41cac4:	str	x0, [sp, #8]
  41cac8:	str	w8, [sp, #4]
  41cacc:	str	w9, [sp]
  41cad0:	bl	402d00 <__errno_location@plt>
  41cad4:	ldr	w8, [sp, #4]
  41cad8:	str	w8, [x0]
  41cadc:	ldr	w0, [sp]
  41cae0:	ldp	x29, x30, [sp, #16]
  41cae4:	add	sp, sp, #0x20
  41cae8:	ret
  41caec:	sub	sp, sp, #0x20
  41caf0:	stp	x29, x30, [sp, #16]
  41caf4:	add	x29, sp, #0x10
  41caf8:	mov	w8, #0x5f                  	// #95
  41cafc:	mov	w9, #0xffffffff            	// #-1
  41cb00:	str	x0, [sp, #8]
  41cb04:	str	w8, [sp, #4]
  41cb08:	str	w9, [sp]
  41cb0c:	bl	402d00 <__errno_location@plt>
  41cb10:	ldr	w8, [sp, #4]
  41cb14:	str	w8, [x0]
  41cb18:	ldr	w0, [sp]
  41cb1c:	ldp	x29, x30, [sp, #16]
  41cb20:	add	sp, sp, #0x20
  41cb24:	ret
  41cb28:	sub	sp, sp, #0x30
  41cb2c:	stp	x29, x30, [sp, #32]
  41cb30:	add	x29, sp, #0x20
  41cb34:	mov	w8, #0x5f                  	// #95
  41cb38:	mov	w9, #0xffffffff            	// #-1
  41cb3c:	stur	x0, [x29, #-8]
  41cb40:	stur	w1, [x29, #-12]
  41cb44:	str	x2, [sp, #8]
  41cb48:	str	w8, [sp, #4]
  41cb4c:	str	w9, [sp]
  41cb50:	bl	402d00 <__errno_location@plt>
  41cb54:	ldr	w8, [sp, #4]
  41cb58:	str	w8, [x0]
  41cb5c:	ldr	w0, [sp]
  41cb60:	ldp	x29, x30, [sp, #32]
  41cb64:	add	sp, sp, #0x30
  41cb68:	ret
  41cb6c:	sub	sp, sp, #0x30
  41cb70:	stp	x29, x30, [sp, #32]
  41cb74:	add	x29, sp, #0x20
  41cb78:	mov	w8, #0x5f                  	// #95
  41cb7c:	mov	w9, #0xffffffff            	// #-1
  41cb80:	stur	x0, [x29, #-8]
  41cb84:	str	x1, [sp, #16]
  41cb88:	str	w8, [sp, #12]
  41cb8c:	str	w9, [sp, #8]
  41cb90:	bl	402d00 <__errno_location@plt>
  41cb94:	ldr	w8, [sp, #12]
  41cb98:	str	w8, [x0]
  41cb9c:	ldr	w0, [sp, #8]
  41cba0:	ldp	x29, x30, [sp, #32]
  41cba4:	add	sp, sp, #0x30
  41cba8:	ret
  41cbac:	sub	sp, sp, #0x30
  41cbb0:	stp	x29, x30, [sp, #32]
  41cbb4:	add	x29, sp, #0x20
  41cbb8:	mov	w8, #0x5f                  	// #95
  41cbbc:	mov	w9, #0xffffffff            	// #-1
  41cbc0:	stur	x0, [x29, #-8]
  41cbc4:	str	x1, [sp, #16]
  41cbc8:	str	w8, [sp, #12]
  41cbcc:	str	w9, [sp, #8]
  41cbd0:	bl	402d00 <__errno_location@plt>
  41cbd4:	ldr	w8, [sp, #12]
  41cbd8:	str	w8, [x0]
  41cbdc:	ldr	w0, [sp, #8]
  41cbe0:	ldp	x29, x30, [sp, #32]
  41cbe4:	add	sp, sp, #0x30
  41cbe8:	ret
  41cbec:	sub	sp, sp, #0x30
  41cbf0:	stp	x29, x30, [sp, #32]
  41cbf4:	add	x29, sp, #0x20
  41cbf8:	mov	w8, #0x5f                  	// #95
  41cbfc:	mov	w9, #0xffffffff            	// #-1
  41cc00:	stur	w0, [x29, #-4]
  41cc04:	str	x1, [sp, #16]
  41cc08:	str	w8, [sp, #12]
  41cc0c:	str	w9, [sp, #8]
  41cc10:	bl	402d00 <__errno_location@plt>
  41cc14:	ldr	w8, [sp, #12]
  41cc18:	str	w8, [x0]
  41cc1c:	ldr	w0, [sp, #8]
  41cc20:	ldp	x29, x30, [sp, #32]
  41cc24:	add	sp, sp, #0x30
  41cc28:	ret
  41cc2c:	sub	sp, sp, #0x30
  41cc30:	stp	x29, x30, [sp, #32]
  41cc34:	add	x29, sp, #0x20
  41cc38:	mov	w8, #0x5f                  	// #95
  41cc3c:	mov	w9, #0xffffffff            	// #-1
  41cc40:	stur	x0, [x29, #-8]
  41cc44:	str	x1, [sp, #16]
  41cc48:	str	w8, [sp, #12]
  41cc4c:	str	w9, [sp, #8]
  41cc50:	bl	402d00 <__errno_location@plt>
  41cc54:	ldr	w8, [sp, #12]
  41cc58:	str	w8, [x0]
  41cc5c:	ldr	w0, [sp, #8]
  41cc60:	ldp	x29, x30, [sp, #32]
  41cc64:	add	sp, sp, #0x30
  41cc68:	ret
  41cc6c:	sub	sp, sp, #0x30
  41cc70:	stp	x29, x30, [sp, #32]
  41cc74:	add	x29, sp, #0x20
  41cc78:	mov	w8, #0x5f                  	// #95
  41cc7c:	mov	w9, #0xffffffff            	// #-1
  41cc80:	stur	x0, [x29, #-8]
  41cc84:	str	x1, [sp, #16]
  41cc88:	str	w8, [sp, #12]
  41cc8c:	str	w9, [sp, #8]
  41cc90:	bl	402d00 <__errno_location@plt>
  41cc94:	ldr	w8, [sp, #12]
  41cc98:	str	w8, [x0]
  41cc9c:	ldr	w0, [sp, #8]
  41cca0:	ldp	x29, x30, [sp, #32]
  41cca4:	add	sp, sp, #0x30
  41cca8:	ret
  41ccac:	sub	sp, sp, #0x30
  41ccb0:	stp	x29, x30, [sp, #32]
  41ccb4:	add	x29, sp, #0x20
  41ccb8:	mov	w8, #0x5f                  	// #95
  41ccbc:	mov	w9, #0xffffffff            	// #-1
  41ccc0:	stur	w0, [x29, #-4]
  41ccc4:	str	x1, [sp, #16]
  41ccc8:	str	w8, [sp, #12]
  41cccc:	str	w9, [sp, #8]
  41ccd0:	bl	402d00 <__errno_location@plt>
  41ccd4:	ldr	w8, [sp, #12]
  41ccd8:	str	w8, [x0]
  41ccdc:	ldr	w0, [sp, #8]
  41cce0:	ldp	x29, x30, [sp, #32]
  41cce4:	add	sp, sp, #0x30
  41cce8:	ret
  41ccec:	sub	sp, sp, #0x20
  41ccf0:	stp	x29, x30, [sp, #16]
  41ccf4:	add	x29, sp, #0x10
  41ccf8:	mov	w8, #0x5f                  	// #95
  41ccfc:	mov	w9, #0xffffffff            	// #-1
  41cd00:	str	x0, [sp, #8]
  41cd04:	str	w8, [sp, #4]
  41cd08:	str	w9, [sp]
  41cd0c:	bl	402d00 <__errno_location@plt>
  41cd10:	ldr	w8, [sp, #4]
  41cd14:	str	w8, [x0]
  41cd18:	ldr	w0, [sp]
  41cd1c:	ldp	x29, x30, [sp, #16]
  41cd20:	add	sp, sp, #0x20
  41cd24:	ret
  41cd28:	sub	sp, sp, #0x20
  41cd2c:	stp	x29, x30, [sp, #16]
  41cd30:	add	x29, sp, #0x10
  41cd34:	mov	w8, #0x5f                  	// #95
  41cd38:	mov	w9, #0xffffffff            	// #-1
  41cd3c:	str	x0, [sp, #8]
  41cd40:	str	w8, [sp, #4]
  41cd44:	str	w9, [sp]
  41cd48:	bl	402d00 <__errno_location@plt>
  41cd4c:	ldr	w8, [sp, #4]
  41cd50:	str	w8, [x0]
  41cd54:	ldr	w0, [sp]
  41cd58:	ldp	x29, x30, [sp, #16]
  41cd5c:	add	sp, sp, #0x20
  41cd60:	ret
  41cd64:	sub	sp, sp, #0x20
  41cd68:	stp	x29, x30, [sp, #16]
  41cd6c:	add	x29, sp, #0x10
  41cd70:	mov	w8, #0x5f                  	// #95
  41cd74:	mov	w9, #0xffffffff            	// #-1
  41cd78:	str	x0, [sp, #8]
  41cd7c:	str	w8, [sp, #4]
  41cd80:	str	w9, [sp]
  41cd84:	bl	402d00 <__errno_location@plt>
  41cd88:	ldr	w8, [sp, #4]
  41cd8c:	str	w8, [x0]
  41cd90:	ldr	w0, [sp]
  41cd94:	ldp	x29, x30, [sp, #16]
  41cd98:	add	sp, sp, #0x20
  41cd9c:	ret
  41cda0:	sub	sp, sp, #0x40
  41cda4:	stp	x29, x30, [sp, #48]
  41cda8:	add	x29, sp, #0x30
  41cdac:	mov	w8, #0x5f                  	// #95
  41cdb0:	mov	w9, #0xffffffff            	// #-1
  41cdb4:	stur	x0, [x29, #-8]
  41cdb8:	stur	x1, [x29, #-16]
  41cdbc:	sturh	w2, [x29, #-18]
  41cdc0:	str	x3, [sp, #16]
  41cdc4:	str	w8, [sp, #12]
  41cdc8:	str	w9, [sp, #8]
  41cdcc:	bl	402d00 <__errno_location@plt>
  41cdd0:	ldr	w8, [sp, #12]
  41cdd4:	str	w8, [x0]
  41cdd8:	ldr	w0, [sp, #8]
  41cddc:	ldp	x29, x30, [sp, #48]
  41cde0:	add	sp, sp, #0x40
  41cde4:	ret
  41cde8:	sub	sp, sp, #0x20
  41cdec:	stp	x29, x30, [sp, #16]
  41cdf0:	add	x29, sp, #0x10
  41cdf4:	mov	w8, #0x5f                  	// #95
  41cdf8:	str	x0, [sp, #8]
  41cdfc:	str	w8, [sp, #4]
  41ce00:	bl	402d00 <__errno_location@plt>
  41ce04:	ldr	w8, [sp, #4]
  41ce08:	str	w8, [x0]
  41ce0c:	mov	w9, wzr
  41ce10:	mov	w0, w9
  41ce14:	ldp	x29, x30, [sp, #16]
  41ce18:	add	sp, sp, #0x20
  41ce1c:	ret
  41ce20:	sub	sp, sp, #0x30
  41ce24:	stp	x29, x30, [sp, #32]
  41ce28:	add	x29, sp, #0x20
  41ce2c:	mov	w8, #0x5f                  	// #95
  41ce30:	mov	w9, #0xffffffff            	// #-1
  41ce34:	stur	x0, [x29, #-8]
  41ce38:	str	x1, [sp, #16]
  41ce3c:	str	w8, [sp, #12]
  41ce40:	str	w9, [sp, #8]
  41ce44:	bl	402d00 <__errno_location@plt>
  41ce48:	ldr	w8, [sp, #12]
  41ce4c:	str	w8, [x0]
  41ce50:	ldr	w0, [sp, #8]
  41ce54:	ldp	x29, x30, [sp, #32]
  41ce58:	add	sp, sp, #0x30
  41ce5c:	ret
  41ce60:	sub	sp, sp, #0x140
  41ce64:	stp	x29, x30, [sp, #288]
  41ce68:	str	x28, [sp, #304]
  41ce6c:	add	x29, sp, #0x120
  41ce70:	stur	x0, [x29, #-8]
  41ce74:	stur	x1, [x29, #-16]
  41ce78:	stur	x2, [x29, #-24]
  41ce7c:	stur	x3, [x29, #-32]
  41ce80:	stur	x4, [x29, #-40]
  41ce84:	stur	x5, [x29, #-48]
  41ce88:	ldur	x8, [x29, #-16]
  41ce8c:	cbz	x8, 41ceb0 <wcrtomb@plt+0x1a100>
  41ce90:	ldur	x0, [x29, #-8]
  41ce94:	ldur	x2, [x29, #-16]
  41ce98:	ldur	x3, [x29, #-24]
  41ce9c:	ldur	x4, [x29, #-32]
  41cea0:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cea4:	add	x1, x1, #0x758
  41cea8:	bl	402d70 <fprintf@plt>
  41ceac:	b	41cec8 <wcrtomb@plt+0x1a118>
  41ceb0:	ldur	x0, [x29, #-8]
  41ceb4:	ldur	x2, [x29, #-24]
  41ceb8:	ldur	x3, [x29, #-32]
  41cebc:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cec0:	add	x1, x1, #0x764
  41cec4:	bl	402d70 <fprintf@plt>
  41cec8:	ldur	x0, [x29, #-8]
  41cecc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41ced0:	add	x8, x8, #0x76b
  41ced4:	stur	x0, [x29, #-56]
  41ced8:	mov	x0, x8
  41cedc:	bl	402d40 <gettext@plt>
  41cee0:	ldur	x8, [x29, #-56]
  41cee4:	stur	x0, [x29, #-64]
  41cee8:	mov	x0, x8
  41ceec:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cef0:	add	x1, x1, #0xa45
  41cef4:	ldur	x2, [x29, #-64]
  41cef8:	mov	w3, #0x7e4                 	// #2020
  41cefc:	bl	402d70 <fprintf@plt>
  41cf00:	ldur	x1, [x29, #-8]
  41cf04:	adrp	x8, 438000 <_obstack_memory_used@@Base+0x19e64>
  41cf08:	add	x8, x8, #0x300
  41cf0c:	mov	x0, x8
  41cf10:	stur	x8, [x29, #-72]
  41cf14:	bl	402c60 <fputs_unlocked@plt>
  41cf18:	ldur	x8, [x29, #-8]
  41cf1c:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cf20:	add	x9, x9, #0x76f
  41cf24:	mov	x0, x9
  41cf28:	stur	x8, [x29, #-80]
  41cf2c:	bl	402d40 <gettext@plt>
  41cf30:	ldur	x8, [x29, #-80]
  41cf34:	stur	x0, [x29, #-88]
  41cf38:	mov	x0, x8
  41cf3c:	ldur	x1, [x29, #-88]
  41cf40:	adrp	x2, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cf44:	add	x2, x2, #0x81a
  41cf48:	bl	402d70 <fprintf@plt>
  41cf4c:	ldur	x1, [x29, #-8]
  41cf50:	ldur	x8, [x29, #-72]
  41cf54:	mov	x0, x8
  41cf58:	bl	402c60 <fputs_unlocked@plt>
  41cf5c:	ldur	x8, [x29, #-48]
  41cf60:	subs	x8, x8, #0x0
  41cf64:	cmp	x8, #0x9
  41cf68:	stur	x8, [x29, #-96]
  41cf6c:	b.hi	41d2d4 <wcrtomb@plt+0x1a524>  // b.pmore
  41cf70:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cf74:	add	x8, x8, #0x730
  41cf78:	ldur	x11, [x29, #-96]
  41cf7c:	ldrsw	x10, [x8, x11, lsl #2]
  41cf80:	add	x9, x8, x10
  41cf84:	br	x9
  41cf88:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41cf8c:	ldur	x0, [x29, #-8]
  41cf90:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cf94:	add	x8, x8, #0x83c
  41cf98:	stur	x0, [x29, #-104]
  41cf9c:	mov	x0, x8
  41cfa0:	bl	402d40 <gettext@plt>
  41cfa4:	ldur	x8, [x29, #-40]
  41cfa8:	ldr	x2, [x8]
  41cfac:	ldur	x8, [x29, #-104]
  41cfb0:	stur	x0, [x29, #-112]
  41cfb4:	mov	x0, x8
  41cfb8:	ldur	x1, [x29, #-112]
  41cfbc:	bl	402d70 <fprintf@plt>
  41cfc0:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41cfc4:	ldur	x0, [x29, #-8]
  41cfc8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41cfcc:	add	x8, x8, #0x84c
  41cfd0:	stur	x0, [x29, #-120]
  41cfd4:	mov	x0, x8
  41cfd8:	bl	402d40 <gettext@plt>
  41cfdc:	ldur	x8, [x29, #-40]
  41cfe0:	ldr	x2, [x8]
  41cfe4:	ldur	x8, [x29, #-40]
  41cfe8:	ldr	x3, [x8, #8]
  41cfec:	ldur	x8, [x29, #-120]
  41cff0:	stur	x0, [x29, #-128]
  41cff4:	mov	x0, x8
  41cff8:	ldur	x1, [x29, #-128]
  41cffc:	bl	402d70 <fprintf@plt>
  41d000:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d004:	ldur	x0, [x29, #-8]
  41d008:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d00c:	add	x8, x8, #0x863
  41d010:	stur	x0, [x29, #-136]
  41d014:	mov	x0, x8
  41d018:	bl	402d40 <gettext@plt>
  41d01c:	ldur	x8, [x29, #-40]
  41d020:	ldr	x2, [x8]
  41d024:	ldur	x8, [x29, #-40]
  41d028:	ldr	x3, [x8, #8]
  41d02c:	ldur	x8, [x29, #-40]
  41d030:	ldr	x4, [x8, #16]
  41d034:	ldur	x8, [x29, #-136]
  41d038:	str	x0, [sp, #144]
  41d03c:	mov	x0, x8
  41d040:	ldr	x1, [sp, #144]
  41d044:	bl	402d70 <fprintf@plt>
  41d048:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d04c:	ldur	x0, [x29, #-8]
  41d050:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d054:	add	x8, x8, #0x87f
  41d058:	str	x0, [sp, #136]
  41d05c:	mov	x0, x8
  41d060:	bl	402d40 <gettext@plt>
  41d064:	ldur	x8, [x29, #-40]
  41d068:	ldr	x2, [x8]
  41d06c:	ldur	x8, [x29, #-40]
  41d070:	ldr	x3, [x8, #8]
  41d074:	ldur	x8, [x29, #-40]
  41d078:	ldr	x4, [x8, #16]
  41d07c:	ldur	x8, [x29, #-40]
  41d080:	ldr	x5, [x8, #24]
  41d084:	ldr	x8, [sp, #136]
  41d088:	str	x0, [sp, #128]
  41d08c:	mov	x0, x8
  41d090:	ldr	x1, [sp, #128]
  41d094:	bl	402d70 <fprintf@plt>
  41d098:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d09c:	ldur	x0, [x29, #-8]
  41d0a0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d0a4:	add	x8, x8, #0x89f
  41d0a8:	str	x0, [sp, #120]
  41d0ac:	mov	x0, x8
  41d0b0:	bl	402d40 <gettext@plt>
  41d0b4:	ldur	x8, [x29, #-40]
  41d0b8:	ldr	x2, [x8]
  41d0bc:	ldur	x8, [x29, #-40]
  41d0c0:	ldr	x3, [x8, #8]
  41d0c4:	ldur	x8, [x29, #-40]
  41d0c8:	ldr	x4, [x8, #16]
  41d0cc:	ldur	x8, [x29, #-40]
  41d0d0:	ldr	x5, [x8, #24]
  41d0d4:	ldur	x8, [x29, #-40]
  41d0d8:	ldr	x6, [x8, #32]
  41d0dc:	ldr	x8, [sp, #120]
  41d0e0:	str	x0, [sp, #112]
  41d0e4:	mov	x0, x8
  41d0e8:	ldr	x1, [sp, #112]
  41d0ec:	bl	402d70 <fprintf@plt>
  41d0f0:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d0f4:	ldur	x0, [x29, #-8]
  41d0f8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d0fc:	add	x8, x8, #0x8c3
  41d100:	str	x0, [sp, #104]
  41d104:	mov	x0, x8
  41d108:	bl	402d40 <gettext@plt>
  41d10c:	ldur	x8, [x29, #-40]
  41d110:	ldr	x2, [x8]
  41d114:	ldur	x8, [x29, #-40]
  41d118:	ldr	x3, [x8, #8]
  41d11c:	ldur	x8, [x29, #-40]
  41d120:	ldr	x4, [x8, #16]
  41d124:	ldur	x8, [x29, #-40]
  41d128:	ldr	x5, [x8, #24]
  41d12c:	ldur	x8, [x29, #-40]
  41d130:	ldr	x6, [x8, #32]
  41d134:	ldur	x8, [x29, #-40]
  41d138:	ldr	x7, [x8, #40]
  41d13c:	ldr	x8, [sp, #104]
  41d140:	str	x0, [sp, #96]
  41d144:	mov	x0, x8
  41d148:	ldr	x1, [sp, #96]
  41d14c:	bl	402d70 <fprintf@plt>
  41d150:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d154:	ldur	x0, [x29, #-8]
  41d158:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d15c:	add	x8, x8, #0x8eb
  41d160:	str	x0, [sp, #88]
  41d164:	mov	x0, x8
  41d168:	bl	402d40 <gettext@plt>
  41d16c:	ldur	x8, [x29, #-40]
  41d170:	ldr	x2, [x8]
  41d174:	ldur	x8, [x29, #-40]
  41d178:	ldr	x3, [x8, #8]
  41d17c:	ldur	x8, [x29, #-40]
  41d180:	ldr	x4, [x8, #16]
  41d184:	ldur	x8, [x29, #-40]
  41d188:	ldr	x5, [x8, #24]
  41d18c:	ldur	x8, [x29, #-40]
  41d190:	ldr	x6, [x8, #32]
  41d194:	ldur	x8, [x29, #-40]
  41d198:	ldr	x7, [x8, #40]
  41d19c:	ldur	x8, [x29, #-40]
  41d1a0:	ldr	x8, [x8, #48]
  41d1a4:	ldr	x9, [sp, #88]
  41d1a8:	str	x0, [sp, #80]
  41d1ac:	mov	x0, x9
  41d1b0:	ldr	x1, [sp, #80]
  41d1b4:	mov	x10, sp
  41d1b8:	str	x8, [x10]
  41d1bc:	bl	402d70 <fprintf@plt>
  41d1c0:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d1c4:	ldur	x0, [x29, #-8]
  41d1c8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d1cc:	add	x8, x8, #0x917
  41d1d0:	str	x0, [sp, #72]
  41d1d4:	mov	x0, x8
  41d1d8:	bl	402d40 <gettext@plt>
  41d1dc:	ldur	x8, [x29, #-40]
  41d1e0:	ldr	x2, [x8]
  41d1e4:	ldur	x8, [x29, #-40]
  41d1e8:	ldr	x3, [x8, #8]
  41d1ec:	ldur	x8, [x29, #-40]
  41d1f0:	ldr	x4, [x8, #16]
  41d1f4:	ldur	x8, [x29, #-40]
  41d1f8:	ldr	x5, [x8, #24]
  41d1fc:	ldur	x8, [x29, #-40]
  41d200:	ldr	x6, [x8, #32]
  41d204:	ldur	x8, [x29, #-40]
  41d208:	ldr	x7, [x8, #40]
  41d20c:	ldur	x8, [x29, #-40]
  41d210:	ldr	x8, [x8, #48]
  41d214:	ldur	x9, [x29, #-40]
  41d218:	ldr	x9, [x9, #56]
  41d21c:	ldr	x10, [sp, #72]
  41d220:	str	x0, [sp, #64]
  41d224:	mov	x0, x10
  41d228:	ldr	x1, [sp, #64]
  41d22c:	mov	x11, sp
  41d230:	str	x8, [x11]
  41d234:	mov	x8, sp
  41d238:	str	x9, [x8, #8]
  41d23c:	bl	402d70 <fprintf@plt>
  41d240:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d244:	ldur	x0, [x29, #-8]
  41d248:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d24c:	add	x8, x8, #0x947
  41d250:	str	x0, [sp, #56]
  41d254:	mov	x0, x8
  41d258:	bl	402d40 <gettext@plt>
  41d25c:	ldur	x8, [x29, #-40]
  41d260:	ldr	x2, [x8]
  41d264:	ldur	x8, [x29, #-40]
  41d268:	ldr	x3, [x8, #8]
  41d26c:	ldur	x8, [x29, #-40]
  41d270:	ldr	x4, [x8, #16]
  41d274:	ldur	x8, [x29, #-40]
  41d278:	ldr	x5, [x8, #24]
  41d27c:	ldur	x8, [x29, #-40]
  41d280:	ldr	x6, [x8, #32]
  41d284:	ldur	x8, [x29, #-40]
  41d288:	ldr	x7, [x8, #40]
  41d28c:	ldur	x8, [x29, #-40]
  41d290:	ldr	x8, [x8, #48]
  41d294:	ldur	x9, [x29, #-40]
  41d298:	ldr	x9, [x9, #56]
  41d29c:	ldur	x10, [x29, #-40]
  41d2a0:	ldr	x10, [x10, #64]
  41d2a4:	ldr	x11, [sp, #56]
  41d2a8:	str	x0, [sp, #48]
  41d2ac:	mov	x0, x11
  41d2b0:	ldr	x1, [sp, #48]
  41d2b4:	mov	x12, sp
  41d2b8:	str	x8, [x12]
  41d2bc:	mov	x8, sp
  41d2c0:	str	x9, [x8, #8]
  41d2c4:	mov	x8, sp
  41d2c8:	str	x10, [x8, #16]
  41d2cc:	bl	402d70 <fprintf@plt>
  41d2d0:	b	41d360 <wcrtomb@plt+0x1a5b0>
  41d2d4:	ldur	x0, [x29, #-8]
  41d2d8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d2dc:	add	x8, x8, #0x97b
  41d2e0:	str	x0, [sp, #40]
  41d2e4:	mov	x0, x8
  41d2e8:	bl	402d40 <gettext@plt>
  41d2ec:	ldur	x8, [x29, #-40]
  41d2f0:	ldr	x2, [x8]
  41d2f4:	ldur	x8, [x29, #-40]
  41d2f8:	ldr	x3, [x8, #8]
  41d2fc:	ldur	x8, [x29, #-40]
  41d300:	ldr	x4, [x8, #16]
  41d304:	ldur	x8, [x29, #-40]
  41d308:	ldr	x5, [x8, #24]
  41d30c:	ldur	x8, [x29, #-40]
  41d310:	ldr	x6, [x8, #32]
  41d314:	ldur	x8, [x29, #-40]
  41d318:	ldr	x7, [x8, #40]
  41d31c:	ldur	x8, [x29, #-40]
  41d320:	ldr	x8, [x8, #48]
  41d324:	ldur	x9, [x29, #-40]
  41d328:	ldr	x9, [x9, #56]
  41d32c:	ldur	x10, [x29, #-40]
  41d330:	ldr	x10, [x10, #64]
  41d334:	ldr	x11, [sp, #40]
  41d338:	str	x0, [sp, #32]
  41d33c:	mov	x0, x11
  41d340:	ldr	x1, [sp, #32]
  41d344:	mov	x12, sp
  41d348:	str	x8, [x12]
  41d34c:	mov	x8, sp
  41d350:	str	x9, [x8, #8]
  41d354:	mov	x8, sp
  41d358:	str	x10, [x8, #16]
  41d35c:	bl	402d70 <fprintf@plt>
  41d360:	ldr	x28, [sp, #304]
  41d364:	ldp	x29, x30, [sp, #288]
  41d368:	add	sp, sp, #0x140
  41d36c:	ret
  41d370:	sub	sp, sp, #0x40
  41d374:	stp	x29, x30, [sp, #48]
  41d378:	add	x29, sp, #0x30
  41d37c:	stur	x0, [x29, #-8]
  41d380:	stur	x1, [x29, #-16]
  41d384:	str	x2, [sp, #24]
  41d388:	str	x3, [sp, #16]
  41d38c:	str	x4, [sp, #8]
  41d390:	str	xzr, [sp]
  41d394:	ldr	x8, [sp, #8]
  41d398:	ldr	x9, [sp]
  41d39c:	mov	x10, #0x8                   	// #8
  41d3a0:	mul	x9, x10, x9
  41d3a4:	add	x8, x8, x9
  41d3a8:	ldr	x8, [x8]
  41d3ac:	cbz	x8, 41d3c0 <wcrtomb@plt+0x1a610>
  41d3b0:	ldr	x8, [sp]
  41d3b4:	add	x8, x8, #0x1
  41d3b8:	str	x8, [sp]
  41d3bc:	b	41d394 <wcrtomb@plt+0x1a5e4>
  41d3c0:	ldur	x0, [x29, #-8]
  41d3c4:	ldur	x1, [x29, #-16]
  41d3c8:	ldr	x2, [sp, #24]
  41d3cc:	ldr	x3, [sp, #16]
  41d3d0:	ldr	x4, [sp, #8]
  41d3d4:	ldr	x5, [sp]
  41d3d8:	bl	41ce60 <wcrtomb@plt+0x1a0b0>
  41d3dc:	ldp	x29, x30, [sp, #48]
  41d3e0:	add	sp, sp, #0x40
  41d3e4:	ret
  41d3e8:	sub	sp, sp, #0xb0
  41d3ec:	stp	x29, x30, [sp, #160]
  41d3f0:	add	x29, sp, #0xa0
  41d3f4:	stur	x0, [x29, #-8]
  41d3f8:	stur	x1, [x29, #-16]
  41d3fc:	stur	x2, [x29, #-24]
  41d400:	stur	x3, [x29, #-32]
  41d404:	stur	xzr, [x29, #-40]
  41d408:	str	x4, [sp, #32]
  41d40c:	ldur	x8, [x29, #-40]
  41d410:	mov	w9, #0x0                   	// #0
  41d414:	cmp	x8, #0xa
  41d418:	str	w9, [sp, #28]
  41d41c:	b.cs	41d4b0 <wcrtomb@plt+0x1a700>  // b.hs, b.nlast
  41d420:	ldr	x8, [sp, #32]
  41d424:	ldrsw	x9, [x8, #24]
  41d428:	mov	w10, w9
  41d42c:	cmp	w10, #0x0
  41d430:	cset	w10, ge  // ge = tcont
  41d434:	str	x9, [sp, #16]
  41d438:	tbnz	w10, #0, 41d470 <wcrtomb@plt+0x1a6c0>
  41d43c:	ldr	x8, [sp, #16]
  41d440:	add	w8, w8, #0x8
  41d444:	ldr	x9, [sp, #32]
  41d448:	str	w8, [x9, #24]
  41d44c:	cmp	w8, #0x0
  41d450:	cset	w8, gt
  41d454:	tbnz	w8, #0, 41d470 <wcrtomb@plt+0x1a6c0>
  41d458:	ldr	x8, [sp, #32]
  41d45c:	ldr	x9, [x8, #8]
  41d460:	ldr	x10, [sp, #16]
  41d464:	add	x9, x9, x10
  41d468:	str	x9, [sp, #8]
  41d46c:	b	41d484 <wcrtomb@plt+0x1a6d4>
  41d470:	ldr	x8, [sp, #32]
  41d474:	ldr	x9, [x8]
  41d478:	add	x10, x9, #0x8
  41d47c:	str	x10, [x8]
  41d480:	str	x9, [sp, #8]
  41d484:	ldr	x8, [sp, #8]
  41d488:	ldr	x8, [x8]
  41d48c:	ldur	x9, [x29, #-40]
  41d490:	mov	x10, #0x8                   	// #8
  41d494:	mul	x9, x10, x9
  41d498:	add	x10, sp, #0x28
  41d49c:	add	x9, x10, x9
  41d4a0:	str	x8, [x9]
  41d4a4:	cmp	x8, #0x0
  41d4a8:	cset	w11, ne  // ne = any
  41d4ac:	str	w11, [sp, #28]
  41d4b0:	ldr	w8, [sp, #28]
  41d4b4:	tbnz	w8, #0, 41d4bc <wcrtomb@plt+0x1a70c>
  41d4b8:	b	41d4cc <wcrtomb@plt+0x1a71c>
  41d4bc:	ldur	x8, [x29, #-40]
  41d4c0:	add	x8, x8, #0x1
  41d4c4:	stur	x8, [x29, #-40]
  41d4c8:	b	41d40c <wcrtomb@plt+0x1a65c>
  41d4cc:	ldur	x0, [x29, #-8]
  41d4d0:	ldur	x1, [x29, #-16]
  41d4d4:	ldur	x2, [x29, #-24]
  41d4d8:	ldur	x3, [x29, #-32]
  41d4dc:	ldur	x5, [x29, #-40]
  41d4e0:	add	x4, sp, #0x28
  41d4e4:	bl	41ce60 <wcrtomb@plt+0x1a0b0>
  41d4e8:	ldp	x29, x30, [sp, #160]
  41d4ec:	add	sp, sp, #0xb0
  41d4f0:	ret
  41d4f4:	sub	sp, sp, #0x120
  41d4f8:	stp	x29, x30, [sp, #256]
  41d4fc:	str	x28, [sp, #272]
  41d500:	add	x29, sp, #0x100
  41d504:	str	q7, [sp, #112]
  41d508:	str	q6, [sp, #96]
  41d50c:	str	q5, [sp, #80]
  41d510:	str	q4, [sp, #64]
  41d514:	str	q3, [sp, #48]
  41d518:	str	q2, [sp, #32]
  41d51c:	str	q1, [sp, #16]
  41d520:	str	q0, [sp]
  41d524:	str	x7, [sp, #152]
  41d528:	str	x6, [sp, #144]
  41d52c:	str	x5, [sp, #136]
  41d530:	str	x4, [sp, #128]
  41d534:	stur	x0, [x29, #-8]
  41d538:	stur	x1, [x29, #-16]
  41d53c:	stur	x2, [x29, #-24]
  41d540:	stur	x3, [x29, #-32]
  41d544:	mov	w8, #0xffffff80            	// #-128
  41d548:	stur	w8, [x29, #-36]
  41d54c:	mov	w8, #0xffffffe0            	// #-32
  41d550:	stur	w8, [x29, #-40]
  41d554:	mov	x9, sp
  41d558:	add	x9, x9, #0x80
  41d55c:	stur	x9, [x29, #-48]
  41d560:	add	x9, sp, #0x80
  41d564:	add	x9, x9, #0x20
  41d568:	stur	x9, [x29, #-56]
  41d56c:	add	x9, x29, #0x20
  41d570:	stur	x9, [x29, #-64]
  41d574:	ldur	x0, [x29, #-8]
  41d578:	ldur	x1, [x29, #-16]
  41d57c:	ldur	x2, [x29, #-24]
  41d580:	ldur	x3, [x29, #-32]
  41d584:	ldur	q0, [x29, #-64]
  41d588:	ldur	q1, [x29, #-48]
  41d58c:	stur	q1, [x29, #-80]
  41d590:	stur	q0, [x29, #-96]
  41d594:	sub	x4, x29, #0x60
  41d598:	bl	41d3e8 <wcrtomb@plt+0x1a638>
  41d59c:	ldr	x28, [sp, #272]
  41d5a0:	ldp	x29, x30, [sp, #256]
  41d5a4:	add	sp, sp, #0x120
  41d5a8:	ret
  41d5ac:	sub	sp, sp, #0x50
  41d5b0:	stp	x29, x30, [sp, #64]
  41d5b4:	add	x29, sp, #0x40
  41d5b8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41d5bc:	add	x8, x8, #0x518
  41d5c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x19e64>
  41d5c4:	add	x0, x0, #0x300
  41d5c8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d5cc:	add	x9, x9, #0x9b7
  41d5d0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  41d5d4:	add	x1, x1, #0x2a9
  41d5d8:	adrp	x10, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d5dc:	add	x10, x10, #0x9cb
  41d5e0:	adrp	x11, 438000 <_obstack_memory_used@@Base+0x19e64>
  41d5e4:	add	x11, x11, #0x18b
  41d5e8:	adrp	x2, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d5ec:	add	x2, x2, #0x9df
  41d5f0:	adrp	x12, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d5f4:	add	x12, x12, #0xa01
  41d5f8:	adrp	x13, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41d5fc:	add	x13, x13, #0xa28
  41d600:	ldr	x8, [x8]
  41d604:	stur	x1, [x29, #-8]
  41d608:	mov	x1, x8
  41d60c:	stur	x9, [x29, #-16]
  41d610:	stur	x10, [x29, #-24]
  41d614:	str	x11, [sp, #32]
  41d618:	str	x2, [sp, #24]
  41d61c:	str	x12, [sp, #16]
  41d620:	str	x13, [sp, #8]
  41d624:	bl	402c60 <fputs_unlocked@plt>
  41d628:	ldur	x8, [x29, #-16]
  41d62c:	mov	x0, x8
  41d630:	bl	402d40 <gettext@plt>
  41d634:	ldur	x1, [x29, #-8]
  41d638:	bl	402ce0 <printf@plt>
  41d63c:	ldur	x8, [x29, #-24]
  41d640:	mov	x0, x8
  41d644:	bl	402d40 <gettext@plt>
  41d648:	ldr	x1, [sp, #32]
  41d64c:	ldr	x2, [sp, #24]
  41d650:	bl	402ce0 <printf@plt>
  41d654:	ldr	x8, [sp, #16]
  41d658:	mov	x0, x8
  41d65c:	bl	402d40 <gettext@plt>
  41d660:	ldr	x1, [sp, #8]
  41d664:	bl	402ce0 <printf@plt>
  41d668:	ldp	x29, x30, [sp, #64]
  41d66c:	add	sp, sp, #0x50
  41d670:	ret
  41d674:	sub	sp, sp, #0x20
  41d678:	stp	x29, x30, [sp, #16]
  41d67c:	add	x29, sp, #0x10
  41d680:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41d684:	str	x0, [sp, #8]
  41d688:	str	x1, [sp]
  41d68c:	ldr	x9, [sp]
  41d690:	udiv	x8, x8, x9
  41d694:	ldr	x9, [sp, #8]
  41d698:	cmp	x8, x9
  41d69c:	b.cs	41d6a4 <wcrtomb@plt+0x1a8f4>  // b.hs, b.nlast
  41d6a0:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d6a4:	ldr	x8, [sp, #8]
  41d6a8:	ldr	x9, [sp]
  41d6ac:	mul	x0, x8, x9
  41d6b0:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  41d6b4:	ldp	x29, x30, [sp, #16]
  41d6b8:	add	sp, sp, #0x20
  41d6bc:	ret
  41d6c0:	sub	sp, sp, #0x20
  41d6c4:	stp	x29, x30, [sp, #16]
  41d6c8:	add	x29, sp, #0x10
  41d6cc:	str	x0, [sp, #8]
  41d6d0:	ldr	x0, [sp, #8]
  41d6d4:	bl	402890 <malloc@plt>
  41d6d8:	str	x0, [sp]
  41d6dc:	ldr	x8, [sp]
  41d6e0:	cbnz	x8, 41d6f0 <wcrtomb@plt+0x1a940>
  41d6e4:	ldr	x8, [sp, #8]
  41d6e8:	cbz	x8, 41d6f0 <wcrtomb@plt+0x1a940>
  41d6ec:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d6f0:	ldr	x0, [sp]
  41d6f4:	ldp	x29, x30, [sp, #16]
  41d6f8:	add	sp, sp, #0x20
  41d6fc:	ret
  41d700:	sub	sp, sp, #0x30
  41d704:	stp	x29, x30, [sp, #32]
  41d708:	add	x29, sp, #0x20
  41d70c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41d710:	stur	x0, [x29, #-8]
  41d714:	str	x1, [sp, #16]
  41d718:	str	x2, [sp, #8]
  41d71c:	ldr	x9, [sp, #8]
  41d720:	udiv	x8, x8, x9
  41d724:	ldr	x9, [sp, #16]
  41d728:	cmp	x8, x9
  41d72c:	b.cs	41d734 <wcrtomb@plt+0x1a984>  // b.hs, b.nlast
  41d730:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d734:	ldur	x0, [x29, #-8]
  41d738:	ldr	x8, [sp, #16]
  41d73c:	ldr	x9, [sp, #8]
  41d740:	mul	x1, x8, x9
  41d744:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  41d748:	ldp	x29, x30, [sp, #32]
  41d74c:	add	sp, sp, #0x30
  41d750:	ret
  41d754:	sub	sp, sp, #0x30
  41d758:	stp	x29, x30, [sp, #32]
  41d75c:	add	x29, sp, #0x20
  41d760:	str	x0, [sp, #16]
  41d764:	str	x1, [sp, #8]
  41d768:	ldr	x8, [sp, #8]
  41d76c:	cbnz	x8, 41d78c <wcrtomb@plt+0x1a9dc>
  41d770:	ldr	x8, [sp, #16]
  41d774:	cbz	x8, 41d78c <wcrtomb@plt+0x1a9dc>
  41d778:	ldr	x0, [sp, #16]
  41d77c:	bl	402b40 <free@plt>
  41d780:	mov	x8, xzr
  41d784:	stur	x8, [x29, #-8]
  41d788:	b	41d7b8 <wcrtomb@plt+0x1aa08>
  41d78c:	ldr	x0, [sp, #16]
  41d790:	ldr	x1, [sp, #8]
  41d794:	bl	4029c0 <realloc@plt>
  41d798:	str	x0, [sp, #16]
  41d79c:	ldr	x8, [sp, #16]
  41d7a0:	cbnz	x8, 41d7b0 <wcrtomb@plt+0x1aa00>
  41d7a4:	ldr	x8, [sp, #8]
  41d7a8:	cbz	x8, 41d7b0 <wcrtomb@plt+0x1aa00>
  41d7ac:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d7b0:	ldr	x8, [sp, #16]
  41d7b4:	stur	x8, [x29, #-8]
  41d7b8:	ldur	x0, [x29, #-8]
  41d7bc:	ldp	x29, x30, [sp, #32]
  41d7c0:	add	sp, sp, #0x30
  41d7c4:	ret
  41d7c8:	sub	sp, sp, #0x30
  41d7cc:	stp	x29, x30, [sp, #32]
  41d7d0:	add	x29, sp, #0x20
  41d7d4:	stur	x0, [x29, #-8]
  41d7d8:	str	x1, [sp, #16]
  41d7dc:	str	x2, [sp, #8]
  41d7e0:	ldr	x8, [sp, #16]
  41d7e4:	ldr	x8, [x8]
  41d7e8:	str	x8, [sp]
  41d7ec:	ldur	x8, [x29, #-8]
  41d7f0:	cbnz	x8, 41d84c <wcrtomb@plt+0x1aa9c>
  41d7f4:	ldr	x8, [sp]
  41d7f8:	cbnz	x8, 41d82c <wcrtomb@plt+0x1aa7c>
  41d7fc:	ldr	x8, [sp, #8]
  41d800:	mov	x9, #0x80                  	// #128
  41d804:	udiv	x8, x9, x8
  41d808:	str	x8, [sp]
  41d80c:	ldr	x8, [sp]
  41d810:	cmp	x8, #0x0
  41d814:	cset	w10, ne  // ne = any
  41d818:	eor	w10, w10, #0x1
  41d81c:	and	w10, w10, #0x1
  41d820:	ldr	x8, [sp]
  41d824:	add	x8, x8, w10, sxtw
  41d828:	str	x8, [sp]
  41d82c:	ldr	x8, [sp, #8]
  41d830:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41d834:	udiv	x8, x9, x8
  41d838:	ldr	x9, [sp]
  41d83c:	cmp	x8, x9
  41d840:	b.cs	41d848 <wcrtomb@plt+0x1aa98>  // b.hs, b.nlast
  41d844:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d848:	b	41d888 <wcrtomb@plt+0x1aad8>
  41d84c:	ldr	x8, [sp, #8]
  41d850:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  41d854:	movk	x9, #0x5554
  41d858:	udiv	x8, x9, x8
  41d85c:	ldr	x9, [sp]
  41d860:	cmp	x8, x9
  41d864:	b.hi	41d86c <wcrtomb@plt+0x1aabc>  // b.pmore
  41d868:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d86c:	ldr	x8, [sp]
  41d870:	mov	x9, #0x2                   	// #2
  41d874:	udiv	x8, x8, x9
  41d878:	add	x8, x8, #0x1
  41d87c:	ldr	x9, [sp]
  41d880:	add	x8, x9, x8
  41d884:	str	x8, [sp]
  41d888:	ldr	x8, [sp]
  41d88c:	ldr	x9, [sp, #16]
  41d890:	str	x8, [x9]
  41d894:	ldur	x0, [x29, #-8]
  41d898:	ldr	x8, [sp]
  41d89c:	ldr	x9, [sp, #8]
  41d8a0:	mul	x1, x8, x9
  41d8a4:	bl	41d754 <wcrtomb@plt+0x1a9a4>
  41d8a8:	ldp	x29, x30, [sp, #32]
  41d8ac:	add	sp, sp, #0x30
  41d8b0:	ret
  41d8b4:	sub	sp, sp, #0x20
  41d8b8:	stp	x29, x30, [sp, #16]
  41d8bc:	add	x29, sp, #0x10
  41d8c0:	str	x0, [sp, #8]
  41d8c4:	ldr	x0, [sp, #8]
  41d8c8:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  41d8cc:	ldp	x29, x30, [sp, #16]
  41d8d0:	add	sp, sp, #0x20
  41d8d4:	ret
  41d8d8:	sub	sp, sp, #0x20
  41d8dc:	stp	x29, x30, [sp, #16]
  41d8e0:	add	x29, sp, #0x10
  41d8e4:	mov	x2, #0x1                   	// #1
  41d8e8:	str	x0, [sp, #8]
  41d8ec:	str	x1, [sp]
  41d8f0:	ldr	x0, [sp, #8]
  41d8f4:	ldr	x1, [sp]
  41d8f8:	bl	41d7c8 <wcrtomb@plt+0x1aa18>
  41d8fc:	ldp	x29, x30, [sp, #16]
  41d900:	add	sp, sp, #0x20
  41d904:	ret
  41d908:	sub	sp, sp, #0x20
  41d90c:	stp	x29, x30, [sp, #16]
  41d910:	add	x29, sp, #0x10
  41d914:	mov	x1, #0x1                   	// #1
  41d918:	str	x0, [sp, #8]
  41d91c:	ldr	x0, [sp, #8]
  41d920:	bl	41d930 <wcrtomb@plt+0x1ab80>
  41d924:	ldp	x29, x30, [sp, #16]
  41d928:	add	sp, sp, #0x20
  41d92c:	ret
  41d930:	sub	sp, sp, #0x30
  41d934:	stp	x29, x30, [sp, #32]
  41d938:	add	x29, sp, #0x20
  41d93c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41d940:	stur	x0, [x29, #-8]
  41d944:	str	x1, [sp, #16]
  41d948:	ldr	x9, [sp, #16]
  41d94c:	udiv	x8, x8, x9
  41d950:	ldur	x9, [x29, #-8]
  41d954:	cmp	x8, x9
  41d958:	b.cc	41d970 <wcrtomb@plt+0x1abc0>  // b.lo, b.ul, b.last
  41d95c:	ldur	x0, [x29, #-8]
  41d960:	ldr	x1, [sp, #16]
  41d964:	bl	4029a0 <calloc@plt>
  41d968:	str	x0, [sp, #8]
  41d96c:	cbnz	x0, 41d974 <wcrtomb@plt+0x1abc4>
  41d970:	bl	41d9fc <wcrtomb@plt+0x1ac4c>
  41d974:	ldr	x0, [sp, #8]
  41d978:	ldp	x29, x30, [sp, #32]
  41d97c:	add	sp, sp, #0x30
  41d980:	ret
  41d984:	sub	sp, sp, #0x30
  41d988:	stp	x29, x30, [sp, #32]
  41d98c:	add	x29, sp, #0x20
  41d990:	stur	x0, [x29, #-8]
  41d994:	str	x1, [sp, #16]
  41d998:	ldr	x0, [sp, #16]
  41d99c:	bl	41d6c0 <wcrtomb@plt+0x1a910>
  41d9a0:	ldur	x1, [x29, #-8]
  41d9a4:	ldr	x2, [sp, #16]
  41d9a8:	str	x0, [sp, #8]
  41d9ac:	bl	4026a0 <memcpy@plt>
  41d9b0:	ldr	x0, [sp, #8]
  41d9b4:	ldp	x29, x30, [sp, #32]
  41d9b8:	add	sp, sp, #0x30
  41d9bc:	ret
  41d9c0:	sub	sp, sp, #0x20
  41d9c4:	stp	x29, x30, [sp, #16]
  41d9c8:	add	x29, sp, #0x10
  41d9cc:	str	x0, [sp, #8]
  41d9d0:	ldr	x0, [sp, #8]
  41d9d4:	ldr	x8, [sp, #8]
  41d9d8:	str	x0, [sp]
  41d9dc:	mov	x0, x8
  41d9e0:	bl	4026f0 <strlen@plt>
  41d9e4:	add	x1, x0, #0x1
  41d9e8:	ldr	x0, [sp]
  41d9ec:	bl	41d984 <wcrtomb@plt+0x1abd4>
  41d9f0:	ldp	x29, x30, [sp, #16]
  41d9f4:	add	sp, sp, #0x20
  41d9f8:	ret
  41d9fc:	sub	sp, sp, #0x30
  41da00:	stp	x29, x30, [sp, #32]
  41da04:	add	x29, sp, #0x20
  41da08:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41da0c:	add	x8, x8, #0x4f0
  41da10:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41da14:	add	x0, x0, #0xa74
  41da18:	mov	w9, wzr
  41da1c:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x19e64>
  41da20:	add	x2, x2, #0xbe9
  41da24:	ldr	w10, [x8]
  41da28:	stur	w9, [x29, #-4]
  41da2c:	str	x2, [sp, #16]
  41da30:	str	w10, [sp, #12]
  41da34:	bl	402d40 <gettext@plt>
  41da38:	ldr	w9, [sp, #12]
  41da3c:	str	x0, [sp]
  41da40:	mov	w0, w9
  41da44:	ldur	w1, [x29, #-4]
  41da48:	ldr	x2, [sp, #16]
  41da4c:	ldr	x3, [sp]
  41da50:	bl	402730 <error@plt>
  41da54:	bl	402a70 <abort@plt>
  41da58:	sub	sp, sp, #0x50
  41da5c:	stp	x29, x30, [sp, #64]
  41da60:	add	x29, sp, #0x40
  41da64:	stur	x0, [x29, #-16]
  41da68:	stur	x1, [x29, #-24]
  41da6c:	str	x2, [sp, #32]
  41da70:	str	x3, [sp, #24]
  41da74:	ldur	x8, [x29, #-16]
  41da78:	cbnz	x8, 41da84 <wcrtomb@plt+0x1acd4>
  41da7c:	add	x8, sp, #0xc
  41da80:	stur	x8, [x29, #-16]
  41da84:	ldur	x0, [x29, #-16]
  41da88:	ldur	x1, [x29, #-24]
  41da8c:	ldr	x2, [sp, #32]
  41da90:	ldr	x3, [sp, #24]
  41da94:	bl	402690 <mbrtowc@plt>
  41da98:	str	x0, [sp, #16]
  41da9c:	ldr	x8, [sp, #16]
  41daa0:	mov	x9, #0xfffffffffffffffe    	// #-2
  41daa4:	cmp	x9, x8
  41daa8:	b.hi	41dae8 <wcrtomb@plt+0x1ad38>  // b.pmore
  41daac:	ldr	x8, [sp, #32]
  41dab0:	cbz	x8, 41dae8 <wcrtomb@plt+0x1ad38>
  41dab4:	mov	w8, wzr
  41dab8:	mov	w0, w8
  41dabc:	bl	4366a0 <_obstack_memory_used@@Base+0x18504>
  41dac0:	tbnz	w0, #0, 41dae8 <wcrtomb@plt+0x1ad38>
  41dac4:	ldur	x8, [x29, #-24]
  41dac8:	ldrb	w9, [x8]
  41dacc:	strb	w9, [sp, #11]
  41dad0:	ldrb	w9, [sp, #11]
  41dad4:	ldur	x8, [x29, #-16]
  41dad8:	str	w9, [x8]
  41dadc:	mov	x8, #0x1                   	// #1
  41dae0:	stur	x8, [x29, #-8]
  41dae4:	b	41daf0 <wcrtomb@plt+0x1ad40>
  41dae8:	ldr	x8, [sp, #16]
  41daec:	stur	x8, [x29, #-8]
  41daf0:	ldur	x0, [x29, #-8]
  41daf4:	ldp	x29, x30, [sp, #64]
  41daf8:	add	sp, sp, #0x50
  41dafc:	ret

000000000041db00 <_obstack_begin@@Base>:
  41db00:	sub	sp, sp, #0x40
  41db04:	stp	x29, x30, [sp, #48]
  41db08:	add	x29, sp, #0x30
  41db0c:	stur	x0, [x29, #-8]
  41db10:	stur	x1, [x29, #-16]
  41db14:	str	x2, [sp, #24]
  41db18:	str	x3, [sp, #16]
  41db1c:	str	x4, [sp, #8]
  41db20:	ldr	x8, [sp, #16]
  41db24:	ldur	x9, [x29, #-8]
  41db28:	str	x8, [x9, #56]
  41db2c:	ldr	x8, [sp, #8]
  41db30:	ldur	x9, [x29, #-8]
  41db34:	str	x8, [x9, #64]
  41db38:	ldur	x8, [x29, #-8]
  41db3c:	ldrb	w10, [x8, #80]
  41db40:	and	w10, w10, #0xfffffffe
  41db44:	strb	w10, [x8, #80]
  41db48:	ldur	x0, [x29, #-8]
  41db4c:	ldur	x1, [x29, #-16]
  41db50:	ldr	x2, [sp, #24]
  41db54:	bl	41db64 <_obstack_begin@@Base+0x64>
  41db58:	ldp	x29, x30, [sp, #48]
  41db5c:	add	sp, sp, #0x40
  41db60:	ret
  41db64:	sub	sp, sp, #0x40
  41db68:	stp	x29, x30, [sp, #48]
  41db6c:	add	x29, sp, #0x30
  41db70:	stur	x0, [x29, #-8]
  41db74:	stur	x1, [x29, #-16]
  41db78:	str	x2, [sp, #24]
  41db7c:	ldr	x8, [sp, #24]
  41db80:	cbnz	x8, 41db8c <_obstack_begin@@Base+0x8c>
  41db84:	mov	x8, #0x10                  	// #16
  41db88:	str	x8, [sp, #24]
  41db8c:	ldur	x8, [x29, #-16]
  41db90:	cbnz	x8, 41dbb4 <_obstack_begin@@Base+0xb4>
  41db94:	mov	w8, #0x20                  	// #32
  41db98:	str	w8, [sp, #12]
  41db9c:	ldr	w8, [sp, #12]
  41dba0:	mov	w9, #0x1000                	// #4096
  41dba4:	subs	w8, w9, w8
  41dba8:	mov	w0, w8
  41dbac:	sxtw	x10, w0
  41dbb0:	stur	x10, [x29, #-16]
  41dbb4:	ldur	x8, [x29, #-16]
  41dbb8:	ldur	x9, [x29, #-8]
  41dbbc:	str	x8, [x9]
  41dbc0:	ldr	x8, [sp, #24]
  41dbc4:	subs	x8, x8, #0x1
  41dbc8:	ldur	x9, [x29, #-8]
  41dbcc:	str	x8, [x9, #48]
  41dbd0:	ldur	x0, [x29, #-8]
  41dbd4:	ldur	x8, [x29, #-8]
  41dbd8:	ldr	x1, [x8]
  41dbdc:	bl	41df34 <_obstack_newchunk@@Base+0x224>
  41dbe0:	ldur	x8, [x29, #-8]
  41dbe4:	str	x0, [x8, #8]
  41dbe8:	str	x0, [sp, #16]
  41dbec:	ldr	x8, [sp, #16]
  41dbf0:	cbnz	x8, 41dc04 <_obstack_begin@@Base+0x104>
  41dbf4:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41dbf8:	add	x8, x8, #0x4e8
  41dbfc:	ldr	x8, [x8]
  41dc00:	blr	x8
  41dc04:	ldr	x8, [sp, #16]
  41dc08:	add	x8, x8, #0x10
  41dc0c:	mov	x9, xzr
  41dc10:	subs	x8, x8, #0x0
  41dc14:	ldr	x10, [sp, #24]
  41dc18:	subs	x10, x10, #0x1
  41dc1c:	add	x8, x8, x10
  41dc20:	ldr	x10, [sp, #24]
  41dc24:	subs	x10, x10, #0x1
  41dc28:	bic	x8, x8, x10
  41dc2c:	add	x8, x9, x8
  41dc30:	ldur	x10, [x29, #-8]
  41dc34:	str	x8, [x10, #16]
  41dc38:	ldur	x10, [x29, #-8]
  41dc3c:	str	x8, [x10, #24]
  41dc40:	ldr	x8, [sp, #16]
  41dc44:	ldur	x10, [x29, #-8]
  41dc48:	ldr	x10, [x10]
  41dc4c:	add	x8, x8, x10
  41dc50:	ldr	x10, [sp, #16]
  41dc54:	str	x8, [x10]
  41dc58:	ldur	x10, [x29, #-8]
  41dc5c:	str	x8, [x10, #32]
  41dc60:	ldr	x8, [sp, #16]
  41dc64:	str	x9, [x8, #8]
  41dc68:	ldur	x8, [x29, #-8]
  41dc6c:	ldrb	w11, [x8, #80]
  41dc70:	and	w11, w11, #0xfffffffd
  41dc74:	strb	w11, [x8, #80]
  41dc78:	ldur	x8, [x29, #-8]
  41dc7c:	ldrb	w11, [x8, #80]
  41dc80:	and	w11, w11, #0xfffffffb
  41dc84:	strb	w11, [x8, #80]
  41dc88:	mov	w0, #0x1                   	// #1
  41dc8c:	ldp	x29, x30, [sp, #48]
  41dc90:	add	sp, sp, #0x40
  41dc94:	ret

000000000041dc98 <_obstack_begin_1@@Base>:
  41dc98:	sub	sp, sp, #0x40
  41dc9c:	stp	x29, x30, [sp, #48]
  41dca0:	add	x29, sp, #0x30
  41dca4:	stur	x0, [x29, #-8]
  41dca8:	stur	x1, [x29, #-16]
  41dcac:	str	x2, [sp, #24]
  41dcb0:	str	x3, [sp, #16]
  41dcb4:	str	x4, [sp, #8]
  41dcb8:	str	x5, [sp]
  41dcbc:	ldr	x8, [sp, #16]
  41dcc0:	ldur	x9, [x29, #-8]
  41dcc4:	str	x8, [x9, #56]
  41dcc8:	ldr	x8, [sp, #8]
  41dccc:	ldur	x9, [x29, #-8]
  41dcd0:	str	x8, [x9, #64]
  41dcd4:	ldr	x8, [sp]
  41dcd8:	ldur	x9, [x29, #-8]
  41dcdc:	str	x8, [x9, #72]
  41dce0:	ldur	x8, [x29, #-8]
  41dce4:	ldrb	w10, [x8, #80]
  41dce8:	and	w10, w10, #0xfffffffe
  41dcec:	orr	w10, w10, #0x1
  41dcf0:	strb	w10, [x8, #80]
  41dcf4:	ldur	x0, [x29, #-8]
  41dcf8:	ldur	x1, [x29, #-16]
  41dcfc:	ldr	x2, [sp, #24]
  41dd00:	bl	41db64 <_obstack_begin@@Base+0x64>
  41dd04:	ldp	x29, x30, [sp, #48]
  41dd08:	add	sp, sp, #0x40
  41dd0c:	ret

000000000041dd10 <_obstack_newchunk@@Base>:
  41dd10:	sub	sp, sp, #0x60
  41dd14:	stp	x29, x30, [sp, #80]
  41dd18:	add	x29, sp, #0x50
  41dd1c:	mov	x8, xzr
  41dd20:	stur	x0, [x29, #-8]
  41dd24:	stur	x1, [x29, #-16]
  41dd28:	ldur	x9, [x29, #-8]
  41dd2c:	ldr	x9, [x9, #8]
  41dd30:	stur	x9, [x29, #-24]
  41dd34:	stur	x8, [x29, #-32]
  41dd38:	ldur	x8, [x29, #-8]
  41dd3c:	ldr	x8, [x8, #24]
  41dd40:	ldur	x9, [x29, #-8]
  41dd44:	ldr	x9, [x9, #16]
  41dd48:	subs	x8, x8, x9
  41dd4c:	str	x8, [sp, #40]
  41dd50:	ldr	x8, [sp, #40]
  41dd54:	ldur	x9, [x29, #-16]
  41dd58:	add	x8, x8, x9
  41dd5c:	str	x8, [sp, #24]
  41dd60:	ldr	x8, [sp, #24]
  41dd64:	ldur	x9, [x29, #-8]
  41dd68:	ldr	x9, [x9, #48]
  41dd6c:	add	x8, x8, x9
  41dd70:	str	x8, [sp, #16]
  41dd74:	ldr	x8, [sp, #16]
  41dd78:	ldr	x9, [sp, #40]
  41dd7c:	add	x8, x8, x9, lsr #3
  41dd80:	add	x8, x8, #0x64
  41dd84:	str	x8, [sp, #8]
  41dd88:	ldr	x8, [sp, #8]
  41dd8c:	ldr	x9, [sp, #16]
  41dd90:	cmp	x8, x9
  41dd94:	b.cs	41dda0 <_obstack_newchunk@@Base+0x90>  // b.hs, b.nlast
  41dd98:	ldr	x8, [sp, #16]
  41dd9c:	str	x8, [sp, #8]
  41dda0:	ldr	x8, [sp, #8]
  41dda4:	ldur	x9, [x29, #-8]
  41dda8:	ldr	x9, [x9]
  41ddac:	cmp	x8, x9
  41ddb0:	b.cs	41ddc0 <_obstack_newchunk@@Base+0xb0>  // b.hs, b.nlast
  41ddb4:	ldur	x8, [x29, #-8]
  41ddb8:	ldr	x8, [x8]
  41ddbc:	str	x8, [sp, #8]
  41ddc0:	ldr	x8, [sp, #40]
  41ddc4:	ldr	x9, [sp, #24]
  41ddc8:	cmp	x8, x9
  41ddcc:	b.hi	41ddf0 <_obstack_newchunk@@Base+0xe0>  // b.pmore
  41ddd0:	ldr	x8, [sp, #24]
  41ddd4:	ldr	x9, [sp, #16]
  41ddd8:	cmp	x8, x9
  41dddc:	b.hi	41ddf0 <_obstack_newchunk@@Base+0xe0>  // b.pmore
  41dde0:	ldur	x0, [x29, #-8]
  41dde4:	ldr	x1, [sp, #8]
  41dde8:	bl	41df34 <_obstack_newchunk@@Base+0x224>
  41ddec:	stur	x0, [x29, #-32]
  41ddf0:	ldur	x8, [x29, #-32]
  41ddf4:	cbnz	x8, 41de08 <_obstack_newchunk@@Base+0xf8>
  41ddf8:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41ddfc:	add	x8, x8, #0x4e8
  41de00:	ldr	x8, [x8]
  41de04:	blr	x8
  41de08:	ldur	x8, [x29, #-32]
  41de0c:	ldur	x9, [x29, #-8]
  41de10:	str	x8, [x9, #8]
  41de14:	ldur	x8, [x29, #-24]
  41de18:	ldur	x9, [x29, #-32]
  41de1c:	str	x8, [x9, #8]
  41de20:	ldur	x8, [x29, #-32]
  41de24:	ldr	x9, [sp, #8]
  41de28:	add	x8, x8, x9
  41de2c:	ldur	x9, [x29, #-8]
  41de30:	str	x8, [x9, #32]
  41de34:	ldur	x9, [x29, #-32]
  41de38:	str	x8, [x9]
  41de3c:	ldur	x8, [x29, #-32]
  41de40:	add	x8, x8, #0x10
  41de44:	mov	x9, xzr
  41de48:	subs	x8, x8, #0x0
  41de4c:	ldur	x10, [x29, #-8]
  41de50:	ldr	x10, [x10, #48]
  41de54:	add	x8, x8, x10
  41de58:	ldur	x10, [x29, #-8]
  41de5c:	ldr	x10, [x10, #48]
  41de60:	bic	x8, x8, x10
  41de64:	add	x8, x9, x8
  41de68:	str	x8, [sp, #32]
  41de6c:	ldr	x0, [sp, #32]
  41de70:	ldur	x8, [x29, #-8]
  41de74:	ldr	x1, [x8, #16]
  41de78:	ldr	x2, [sp, #40]
  41de7c:	bl	4026a0 <memcpy@plt>
  41de80:	ldur	x8, [x29, #-8]
  41de84:	ldrb	w11, [x8, #80]
  41de88:	mov	w12, #0x1                   	// #1
  41de8c:	lsr	w11, w11, w12
  41de90:	and	w11, w11, w12
  41de94:	and	w11, w11, #0xff
  41de98:	cbnz	w11, 41def4 <_obstack_newchunk@@Base+0x1e4>
  41de9c:	ldur	x8, [x29, #-8]
  41dea0:	ldr	x8, [x8, #16]
  41dea4:	ldur	x9, [x29, #-24]
  41dea8:	add	x9, x9, #0x10
  41deac:	mov	x10, xzr
  41deb0:	subs	x9, x9, #0x0
  41deb4:	ldur	x11, [x29, #-8]
  41deb8:	ldr	x11, [x11, #48]
  41debc:	add	x9, x9, x11
  41dec0:	ldur	x11, [x29, #-8]
  41dec4:	ldr	x11, [x11, #48]
  41dec8:	bic	x9, x9, x11
  41decc:	add	x9, x10, x9
  41ded0:	cmp	x8, x9
  41ded4:	b.ne	41def4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41ded8:	ldur	x8, [x29, #-24]
  41dedc:	ldr	x8, [x8, #8]
  41dee0:	ldur	x9, [x29, #-32]
  41dee4:	str	x8, [x9, #8]
  41dee8:	ldur	x0, [x29, #-8]
  41deec:	ldur	x1, [x29, #-24]
  41def0:	bl	41dfa0 <_obstack_newchunk@@Base+0x290>
  41def4:	ldr	x8, [sp, #32]
  41def8:	ldur	x9, [x29, #-8]
  41defc:	str	x8, [x9, #16]
  41df00:	ldur	x8, [x29, #-8]
  41df04:	ldr	x8, [x8, #16]
  41df08:	ldr	x9, [sp, #40]
  41df0c:	add	x8, x8, x9
  41df10:	ldur	x9, [x29, #-8]
  41df14:	str	x8, [x9, #24]
  41df18:	ldur	x8, [x29, #-8]
  41df1c:	ldrb	w10, [x8, #80]
  41df20:	and	w10, w10, #0xfffffffd
  41df24:	strb	w10, [x8, #80]
  41df28:	ldp	x29, x30, [sp, #80]
  41df2c:	add	sp, sp, #0x60
  41df30:	ret
  41df34:	sub	sp, sp, #0x30
  41df38:	stp	x29, x30, [sp, #32]
  41df3c:	add	x29, sp, #0x20
  41df40:	str	x0, [sp, #16]
  41df44:	str	x1, [sp, #8]
  41df48:	ldr	x8, [sp, #16]
  41df4c:	ldrb	w9, [x8, #80]
  41df50:	and	w9, w9, #0x1
  41df54:	and	w9, w9, #0xff
  41df58:	cbz	w9, 41df7c <_obstack_newchunk@@Base+0x26c>
  41df5c:	ldr	x8, [sp, #16]
  41df60:	ldr	x8, [x8, #56]
  41df64:	ldr	x9, [sp, #16]
  41df68:	ldr	x0, [x9, #72]
  41df6c:	ldr	x1, [sp, #8]
  41df70:	blr	x8
  41df74:	stur	x0, [x29, #-8]
  41df78:	b	41df90 <_obstack_newchunk@@Base+0x280>
  41df7c:	ldr	x8, [sp, #16]
  41df80:	ldr	x8, [x8, #56]
  41df84:	ldr	x0, [sp, #8]
  41df88:	blr	x8
  41df8c:	stur	x0, [x29, #-8]
  41df90:	ldur	x0, [x29, #-8]
  41df94:	ldp	x29, x30, [sp, #32]
  41df98:	add	sp, sp, #0x30
  41df9c:	ret
  41dfa0:	sub	sp, sp, #0x20
  41dfa4:	stp	x29, x30, [sp, #16]
  41dfa8:	add	x29, sp, #0x10
  41dfac:	str	x0, [sp, #8]
  41dfb0:	str	x1, [sp]
  41dfb4:	ldr	x8, [sp, #8]
  41dfb8:	ldrb	w9, [x8, #80]
  41dfbc:	and	w9, w9, #0x1
  41dfc0:	and	w9, w9, #0xff
  41dfc4:	cbz	w9, 41dfe4 <_obstack_newchunk@@Base+0x2d4>
  41dfc8:	ldr	x8, [sp, #8]
  41dfcc:	ldr	x8, [x8, #64]
  41dfd0:	ldr	x9, [sp, #8]
  41dfd4:	ldr	x0, [x9, #72]
  41dfd8:	ldr	x1, [sp]
  41dfdc:	blr	x8
  41dfe0:	b	41dff4 <_obstack_newchunk@@Base+0x2e4>
  41dfe4:	ldr	x8, [sp, #8]
  41dfe8:	ldr	x8, [x8, #64]
  41dfec:	ldr	x0, [sp]
  41dff0:	blr	x8
  41dff4:	ldp	x29, x30, [sp, #16]
  41dff8:	add	sp, sp, #0x20
  41dffc:	ret

000000000041e000 <_obstack_allocated_p@@Base>:
  41e000:	sub	sp, sp, #0x30
  41e004:	str	x0, [sp, #40]
  41e008:	str	x1, [sp, #32]
  41e00c:	ldr	x8, [sp, #40]
  41e010:	ldr	x8, [x8, #8]
  41e014:	str	x8, [sp, #24]
  41e018:	ldr	x8, [sp, #24]
  41e01c:	mov	w9, #0x0                   	// #0
  41e020:	str	w9, [sp, #12]
  41e024:	cbz	x8, 41e060 <_obstack_allocated_p@@Base+0x60>
  41e028:	ldr	x8, [sp, #24]
  41e02c:	ldr	x9, [sp, #32]
  41e030:	mov	w10, #0x1                   	// #1
  41e034:	cmp	x8, x9
  41e038:	str	w10, [sp, #8]
  41e03c:	b.cs	41e058 <_obstack_allocated_p@@Base+0x58>  // b.hs, b.nlast
  41e040:	ldr	x8, [sp, #24]
  41e044:	ldr	x8, [x8]
  41e048:	ldr	x9, [sp, #32]
  41e04c:	cmp	x8, x9
  41e050:	cset	w10, cc  // cc = lo, ul, last
  41e054:	str	w10, [sp, #8]
  41e058:	ldr	w8, [sp, #8]
  41e05c:	str	w8, [sp, #12]
  41e060:	ldr	w8, [sp, #12]
  41e064:	tbnz	w8, #0, 41e06c <_obstack_allocated_p@@Base+0x6c>
  41e068:	b	41e084 <_obstack_allocated_p@@Base+0x84>
  41e06c:	ldr	x8, [sp, #24]
  41e070:	ldr	x8, [x8, #8]
  41e074:	str	x8, [sp, #16]
  41e078:	ldr	x8, [sp, #16]
  41e07c:	str	x8, [sp, #24]
  41e080:	b	41e018 <_obstack_allocated_p@@Base+0x18>
  41e084:	ldr	x8, [sp, #24]
  41e088:	cmp	x8, #0x0
  41e08c:	cset	w9, ne  // ne = any
  41e090:	and	w0, w9, #0x1
  41e094:	add	sp, sp, #0x30
  41e098:	ret

000000000041e09c <_obstack_free@@Base>:
  41e09c:	sub	sp, sp, #0x40
  41e0a0:	stp	x29, x30, [sp, #48]
  41e0a4:	add	x29, sp, #0x30
  41e0a8:	stur	x0, [x29, #-8]
  41e0ac:	stur	x1, [x29, #-16]
  41e0b0:	ldur	x8, [x29, #-8]
  41e0b4:	ldr	x8, [x8, #8]
  41e0b8:	str	x8, [sp, #24]
  41e0bc:	ldr	x8, [sp, #24]
  41e0c0:	mov	w9, #0x0                   	// #0
  41e0c4:	str	w9, [sp, #12]
  41e0c8:	cbz	x8, 41e104 <_obstack_free@@Base+0x68>
  41e0cc:	ldr	x8, [sp, #24]
  41e0d0:	ldur	x9, [x29, #-16]
  41e0d4:	mov	w10, #0x1                   	// #1
  41e0d8:	cmp	x8, x9
  41e0dc:	str	w10, [sp, #8]
  41e0e0:	b.cs	41e0fc <_obstack_free@@Base+0x60>  // b.hs, b.nlast
  41e0e4:	ldr	x8, [sp, #24]
  41e0e8:	ldr	x8, [x8]
  41e0ec:	ldur	x9, [x29, #-16]
  41e0f0:	cmp	x8, x9
  41e0f4:	cset	w10, cc  // cc = lo, ul, last
  41e0f8:	str	w10, [sp, #8]
  41e0fc:	ldr	w8, [sp, #8]
  41e100:	str	w8, [sp, #12]
  41e104:	ldr	w8, [sp, #12]
  41e108:	tbnz	w8, #0, 41e110 <_obstack_free@@Base+0x74>
  41e10c:	b	41e148 <_obstack_free@@Base+0xac>
  41e110:	ldr	x8, [sp, #24]
  41e114:	ldr	x8, [x8, #8]
  41e118:	str	x8, [sp, #16]
  41e11c:	ldur	x0, [x29, #-8]
  41e120:	ldr	x1, [sp, #24]
  41e124:	bl	41dfa0 <_obstack_newchunk@@Base+0x290>
  41e128:	ldr	x8, [sp, #16]
  41e12c:	str	x8, [sp, #24]
  41e130:	ldur	x8, [x29, #-8]
  41e134:	ldrb	w9, [x8, #80]
  41e138:	and	w9, w9, #0xfffffffd
  41e13c:	orr	w9, w9, #0x2
  41e140:	strb	w9, [x8, #80]
  41e144:	b	41e0bc <_obstack_free@@Base+0x20>
  41e148:	ldr	x8, [sp, #24]
  41e14c:	cbz	x8, 41e184 <_obstack_free@@Base+0xe8>
  41e150:	ldur	x8, [x29, #-16]
  41e154:	ldur	x9, [x29, #-8]
  41e158:	str	x8, [x9, #24]
  41e15c:	ldur	x9, [x29, #-8]
  41e160:	str	x8, [x9, #16]
  41e164:	ldr	x8, [sp, #24]
  41e168:	ldr	x8, [x8]
  41e16c:	ldur	x9, [x29, #-8]
  41e170:	str	x8, [x9, #32]
  41e174:	ldr	x8, [sp, #24]
  41e178:	ldur	x9, [x29, #-8]
  41e17c:	str	x8, [x9, #8]
  41e180:	b	41e190 <_obstack_free@@Base+0xf4>
  41e184:	ldur	x8, [x29, #-16]
  41e188:	cbz	x8, 41e190 <_obstack_free@@Base+0xf4>
  41e18c:	bl	402a70 <abort@plt>
  41e190:	ldp	x29, x30, [sp, #48]
  41e194:	add	sp, sp, #0x40
  41e198:	ret

000000000041e19c <_obstack_memory_used@@Base>:
  41e19c:	sub	sp, sp, #0x20
  41e1a0:	str	x0, [sp, #24]
  41e1a4:	str	xzr, [sp, #8]
  41e1a8:	ldr	x8, [sp, #24]
  41e1ac:	ldr	x8, [x8, #8]
  41e1b0:	str	x8, [sp, #16]
  41e1b4:	ldr	x8, [sp, #16]
  41e1b8:	cbz	x8, 41e1e8 <_obstack_memory_used@@Base+0x4c>
  41e1bc:	ldr	x8, [sp, #16]
  41e1c0:	ldr	x8, [x8]
  41e1c4:	ldr	x9, [sp, #16]
  41e1c8:	subs	x8, x8, x9
  41e1cc:	ldr	x9, [sp, #8]
  41e1d0:	add	x8, x9, x8
  41e1d4:	str	x8, [sp, #8]
  41e1d8:	ldr	x8, [sp, #16]
  41e1dc:	ldr	x8, [x8, #8]
  41e1e0:	str	x8, [sp, #16]
  41e1e4:	b	41e1b4 <_obstack_memory_used@@Base+0x18>
  41e1e8:	ldr	x0, [sp, #8]
  41e1ec:	add	sp, sp, #0x20
  41e1f0:	ret
  41e1f4:	sub	sp, sp, #0x30
  41e1f8:	stp	x29, x30, [sp, #32]
  41e1fc:	add	x29, sp, #0x20
  41e200:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41e204:	add	x8, x8, #0x500
  41e208:	adrp	x0, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41e20c:	add	x0, x0, #0xa74
  41e210:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41e214:	add	x1, x1, #0x760
  41e218:	adrp	x9, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41e21c:	add	x9, x9, #0x4f0
  41e220:	ldr	x8, [x8]
  41e224:	stur	x1, [x29, #-8]
  41e228:	str	x9, [sp, #16]
  41e22c:	str	x8, [sp, #8]
  41e230:	bl	402d40 <gettext@plt>
  41e234:	ldr	x8, [sp, #8]
  41e238:	str	x0, [sp]
  41e23c:	mov	x0, x8
  41e240:	ldur	x1, [x29, #-8]
  41e244:	ldr	x2, [sp]
  41e248:	bl	402d70 <fprintf@plt>
  41e24c:	ldr	x8, [sp, #16]
  41e250:	ldr	w10, [x8]
  41e254:	mov	w0, w10
  41e258:	bl	402720 <exit@plt>
  41e25c:	sub	sp, sp, #0x40
  41e260:	stp	x29, x30, [sp, #48]
  41e264:	add	x29, sp, #0x30
  41e268:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41e26c:	add	x8, x8, #0xde8
  41e270:	stur	x0, [x29, #-16]
  41e274:	str	x1, [sp, #24]
  41e278:	str	x2, [sp, #16]
  41e27c:	ldr	x9, [x8]
  41e280:	tst	x9, #0x2000000
  41e284:	cset	w10, ne  // ne = any
  41e288:	mov	w11, #0x1                   	// #1
  41e28c:	eor	w10, w10, #0x1
  41e290:	eor	w10, w10, w11
  41e294:	and	w10, w10, #0x1
  41e298:	ldr	x9, [sp, #16]
  41e29c:	ldrb	w12, [x9, #56]
  41e2a0:	and	w10, w10, w11
  41e2a4:	lsl	w10, w10, #4
  41e2a8:	and	w11, w12, #0xffffffef
  41e2ac:	orr	w10, w11, w10
  41e2b0:	strb	w10, [x9, #56]
  41e2b4:	ldr	x9, [sp, #16]
  41e2b8:	ldrb	w10, [x9, #56]
  41e2bc:	and	w10, w10, #0x7f
  41e2c0:	orr	w10, w10, #0xffffff80
  41e2c4:	strb	w10, [x9, #56]
  41e2c8:	ldr	x0, [sp, #16]
  41e2cc:	ldur	x1, [x29, #-16]
  41e2d0:	ldr	x2, [sp, #24]
  41e2d4:	ldr	x3, [x8]
  41e2d8:	bl	41e328 <_obstack_memory_used@@Base+0x18c>
  41e2dc:	str	w0, [sp, #12]
  41e2e0:	ldr	w10, [sp, #12]
  41e2e4:	cbnz	w10, 41e2f4 <_obstack_memory_used@@Base+0x158>
  41e2e8:	mov	x8, xzr
  41e2ec:	stur	x8, [x29, #-8]
  41e2f0:	b	41e318 <_obstack_memory_used@@Base+0x17c>
  41e2f4:	ldrsw	x8, [sp, #12]
  41e2f8:	adrp	x9, 43a000 <_obstack_memory_used@@Base+0x1be64>
  41e2fc:	add	x9, x9, #0x78
  41e300:	ldr	x8, [x9, x8, lsl #3]
  41e304:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41e308:	add	x9, x9, #0xef4
  41e30c:	add	x0, x9, x8
  41e310:	bl	402d40 <gettext@plt>
  41e314:	stur	x0, [x29, #-8]
  41e318:	ldur	x0, [x29, #-8]
  41e31c:	ldp	x29, x30, [sp, #48]
  41e320:	add	sp, sp, #0x40
  41e324:	ret
  41e328:	sub	sp, sp, #0xf0
  41e32c:	stp	x29, x30, [sp, #224]
  41e330:	add	x29, sp, #0xe0
  41e334:	stur	x0, [x29, #-16]
  41e338:	stur	x1, [x29, #-24]
  41e33c:	stur	x2, [x29, #-32]
  41e340:	stur	x3, [x29, #-40]
  41e344:	stur	wzr, [x29, #-44]
  41e348:	ldur	x8, [x29, #-16]
  41e34c:	ldrb	w9, [x8, #56]
  41e350:	and	w9, w9, #0xfffffff7
  41e354:	strb	w9, [x8, #56]
  41e358:	ldur	x8, [x29, #-40]
  41e35c:	ldur	x10, [x29, #-16]
  41e360:	str	x8, [x10, #24]
  41e364:	ldur	x8, [x29, #-16]
  41e368:	ldrb	w9, [x8, #56]
  41e36c:	and	w9, w9, #0xffffffbf
  41e370:	strb	w9, [x8, #56]
  41e374:	ldur	x8, [x29, #-16]
  41e378:	ldrb	w9, [x8, #56]
  41e37c:	and	w9, w9, #0xffffffdf
  41e380:	strb	w9, [x8, #56]
  41e384:	ldur	x8, [x29, #-16]
  41e388:	str	xzr, [x8, #16]
  41e38c:	ldur	x8, [x29, #-16]
  41e390:	str	xzr, [x8, #48]
  41e394:	ldur	x8, [x29, #-16]
  41e398:	ldrb	w9, [x8, #56]
  41e39c:	and	w9, w9, #0xfffffffe
  41e3a0:	strb	w9, [x8, #56]
  41e3a4:	ldur	x8, [x29, #-16]
  41e3a8:	ldrb	w9, [x8, #56]
  41e3ac:	and	w9, w9, #0xfffffff9
  41e3b0:	strb	w9, [x8, #56]
  41e3b4:	ldur	x8, [x29, #-16]
  41e3b8:	ldr	x8, [x8]
  41e3bc:	stur	x8, [x29, #-56]
  41e3c0:	ldur	x8, [x29, #-16]
  41e3c4:	ldr	x8, [x8, #8]
  41e3c8:	cmp	x8, #0xe8
  41e3cc:	cset	w9, cc  // cc = lo, ul, last
  41e3d0:	and	w9, w9, #0x1
  41e3d4:	mov	w0, w9
  41e3d8:	sxtw	x8, w0
  41e3dc:	cbz	x8, 41e420 <_obstack_memory_used@@Base+0x284>
  41e3e0:	ldur	x8, [x29, #-16]
  41e3e4:	ldr	x0, [x8]
  41e3e8:	mov	x1, #0xe8                  	// #232
  41e3ec:	bl	4029c0 <realloc@plt>
  41e3f0:	stur	x0, [x29, #-56]
  41e3f4:	ldur	x8, [x29, #-56]
  41e3f8:	cbnz	x8, 41e408 <_obstack_memory_used@@Base+0x26c>
  41e3fc:	mov	w8, #0xc                   	// #12
  41e400:	stur	w8, [x29, #-4]
  41e404:	b	41e644 <_obstack_memory_used@@Base+0x4a8>
  41e408:	ldur	x8, [x29, #-16]
  41e40c:	mov	x9, #0xe8                  	// #232
  41e410:	str	x9, [x8, #8]
  41e414:	ldur	x8, [x29, #-56]
  41e418:	ldur	x9, [x29, #-16]
  41e41c:	str	x8, [x9]
  41e420:	ldur	x8, [x29, #-16]
  41e424:	mov	x9, #0xe8                  	// #232
  41e428:	str	x9, [x8, #16]
  41e42c:	ldur	x0, [x29, #-56]
  41e430:	ldur	x1, [x29, #-32]
  41e434:	bl	420ecc <_obstack_memory_used@@Base+0x2d30>
  41e438:	stur	w0, [x29, #-44]
  41e43c:	ldur	w10, [x29, #-44]
  41e440:	mov	w11, #0x0                   	// #0
  41e444:	str	w11, [sp, #12]
  41e448:	cbnz	w10, 41e454 <_obstack_memory_used@@Base+0x2b8>
  41e44c:	mov	w8, #0x0                   	// #0
  41e450:	str	w8, [sp, #12]
  41e454:	ldr	w8, [sp, #12]
  41e458:	and	w8, w8, #0x1
  41e45c:	mov	w0, w8
  41e460:	sxtw	x9, w0
  41e464:	cbz	x9, 41e470 <_obstack_memory_used@@Base+0x2d4>
  41e468:	mov	w8, #0xc                   	// #12
  41e46c:	stur	w8, [x29, #-44]
  41e470:	ldur	w8, [x29, #-44]
  41e474:	cmp	w8, #0x0
  41e478:	cset	w8, ne  // ne = any
  41e47c:	and	w8, w8, #0x1
  41e480:	mov	w0, w8
  41e484:	sxtw	x9, w0
  41e488:	cbz	x9, 41e4b4 <_obstack_memory_used@@Base+0x318>
  41e48c:	ldur	x0, [x29, #-56]
  41e490:	bl	41f234 <_obstack_memory_used@@Base+0x1098>
  41e494:	ldur	x8, [x29, #-16]
  41e498:	mov	x9, xzr
  41e49c:	str	x9, [x8]
  41e4a0:	ldur	x8, [x29, #-16]
  41e4a4:	str	xzr, [x8, #8]
  41e4a8:	ldur	w10, [x29, #-44]
  41e4ac:	stur	w10, [x29, #-4]
  41e4b0:	b	41e644 <_obstack_memory_used@@Base+0x4a8>
  41e4b4:	ldur	x1, [x29, #-24]
  41e4b8:	ldur	x2, [x29, #-32]
  41e4bc:	ldur	x8, [x29, #-16]
  41e4c0:	ldr	x3, [x8, #40]
  41e4c4:	ldur	x8, [x29, #-40]
  41e4c8:	tst	x8, #0x400000
  41e4cc:	cset	w9, ne  // ne = any
  41e4d0:	ldur	x5, [x29, #-56]
  41e4d4:	add	x0, sp, #0x10
  41e4d8:	and	w4, w9, #0x1
  41e4dc:	bl	421498 <_obstack_memory_used@@Base+0x32fc>
  41e4e0:	stur	w0, [x29, #-44]
  41e4e4:	ldur	w9, [x29, #-44]
  41e4e8:	cmp	w9, #0x0
  41e4ec:	cset	w9, ne  // ne = any
  41e4f0:	and	w9, w9, #0x1
  41e4f4:	mov	w1, w9
  41e4f8:	sxtw	x8, w1
  41e4fc:	cbz	x8, 41e538 <_obstack_memory_used@@Base+0x39c>
  41e500:	ldur	x0, [x29, #-16]
  41e504:	bl	4216c4 <_obstack_memory_used@@Base+0x3528>
  41e508:	add	x0, sp, #0x10
  41e50c:	bl	42175c <_obstack_memory_used@@Base+0x35c0>
  41e510:	ldur	x0, [x29, #-56]
  41e514:	bl	41f234 <_obstack_memory_used@@Base+0x1098>
  41e518:	ldur	x8, [x29, #-16]
  41e51c:	mov	x9, xzr
  41e520:	str	x9, [x8]
  41e524:	ldur	x8, [x29, #-16]
  41e528:	str	xzr, [x8, #8]
  41e52c:	ldur	w10, [x29, #-44]
  41e530:	stur	w10, [x29, #-4]
  41e534:	b	41e644 <_obstack_memory_used@@Base+0x4a8>
  41e538:	ldur	x8, [x29, #-16]
  41e53c:	str	xzr, [x8, #48]
  41e540:	ldur	x1, [x29, #-16]
  41e544:	ldur	x2, [x29, #-40]
  41e548:	add	x0, sp, #0x10
  41e54c:	sub	x3, x29, #0x2c
  41e550:	bl	4217a8 <_obstack_memory_used@@Base+0x360c>
  41e554:	ldur	x8, [x29, #-56]
  41e558:	str	x0, [x8, #104]
  41e55c:	ldur	x8, [x29, #-56]
  41e560:	ldr	x8, [x8, #104]
  41e564:	cmp	x8, #0x0
  41e568:	cset	w9, eq  // eq = none
  41e56c:	and	w9, w9, #0x1
  41e570:	mov	w0, w9
  41e574:	sxtw	x8, w0
  41e578:	cbz	x8, 41e580 <_obstack_memory_used@@Base+0x3e4>
  41e57c:	b	41e500 <_obstack_memory_used@@Base+0x364>
  41e580:	ldur	x0, [x29, #-16]
  41e584:	bl	421910 <_obstack_memory_used@@Base+0x3774>
  41e588:	stur	w0, [x29, #-44]
  41e58c:	ldur	w8, [x29, #-44]
  41e590:	cmp	w8, #0x0
  41e594:	cset	w8, ne  // ne = any
  41e598:	and	w8, w8, #0x1
  41e59c:	mov	w1, w8
  41e5a0:	sxtw	x9, w1
  41e5a4:	cbz	x9, 41e5ac <_obstack_memory_used@@Base+0x410>
  41e5a8:	b	41e500 <_obstack_memory_used@@Base+0x364>
  41e5ac:	ldur	x8, [x29, #-56]
  41e5b0:	ldrb	w9, [x8, #176]
  41e5b4:	mov	w10, #0x2                   	// #2
  41e5b8:	lsr	w9, w9, w10
  41e5bc:	and	w9, w9, #0x1
  41e5c0:	and	w9, w9, #0xff
  41e5c4:	cbz	w9, 41e5e8 <_obstack_memory_used@@Base+0x44c>
  41e5c8:	ldur	x8, [x29, #-40]
  41e5cc:	and	x8, x8, #0x400000
  41e5d0:	cbnz	x8, 41e5e8 <_obstack_memory_used@@Base+0x44c>
  41e5d4:	ldur	x8, [x29, #-16]
  41e5d8:	ldr	x8, [x8, #40]
  41e5dc:	cbnz	x8, 41e5e8 <_obstack_memory_used@@Base+0x44c>
  41e5e0:	ldur	x0, [x29, #-56]
  41e5e4:	bl	421ce0 <_obstack_memory_used@@Base+0x3b44>
  41e5e8:	ldur	x0, [x29, #-56]
  41e5ec:	bl	421ffc <_obstack_memory_used@@Base+0x3e60>
  41e5f0:	stur	w0, [x29, #-44]
  41e5f4:	ldur	x0, [x29, #-16]
  41e5f8:	bl	4216c4 <_obstack_memory_used@@Base+0x3528>
  41e5fc:	add	x0, sp, #0x10
  41e600:	bl	42175c <_obstack_memory_used@@Base+0x35c0>
  41e604:	ldur	w8, [x29, #-44]
  41e608:	cmp	w8, #0x0
  41e60c:	cset	w8, ne  // ne = any
  41e610:	and	w8, w8, #0x1
  41e614:	mov	w0, w8
  41e618:	sxtw	x9, w0
  41e61c:	cbz	x9, 41e63c <_obstack_memory_used@@Base+0x4a0>
  41e620:	ldur	x0, [x29, #-56]
  41e624:	bl	41f234 <_obstack_memory_used@@Base+0x1098>
  41e628:	ldur	x8, [x29, #-16]
  41e62c:	mov	x9, xzr
  41e630:	str	x9, [x8]
  41e634:	ldur	x8, [x29, #-16]
  41e638:	str	xzr, [x8, #8]
  41e63c:	ldur	w8, [x29, #-44]
  41e640:	stur	w8, [x29, #-4]
  41e644:	ldur	w0, [x29, #-4]
  41e648:	ldp	x29, x30, [sp, #224]
  41e64c:	add	sp, sp, #0xf0
  41e650:	ret
  41e654:	sub	sp, sp, #0x10
  41e658:	adrp	x8, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  41e65c:	add	x8, x8, #0xde8
  41e660:	str	x0, [sp, #8]
  41e664:	ldr	x9, [x8]
  41e668:	str	x9, [sp]
  41e66c:	ldr	x9, [sp, #8]
  41e670:	str	x9, [x8]
  41e674:	ldr	x0, [sp]
  41e678:	add	sp, sp, #0x10
  41e67c:	ret
  41e680:	sub	sp, sp, #0x30
  41e684:	stp	x29, x30, [sp, #32]
  41e688:	add	x29, sp, #0x20
  41e68c:	mov	x2, #0x100                 	// #256
  41e690:	mov	w8, wzr
  41e694:	stur	x0, [x29, #-8]
  41e698:	ldur	x9, [x29, #-8]
  41e69c:	ldr	x9, [x9]
  41e6a0:	str	x9, [sp, #16]
  41e6a4:	ldur	x9, [x29, #-8]
  41e6a8:	ldr	x9, [x9, #32]
  41e6ac:	str	x9, [sp, #8]
  41e6b0:	ldr	x0, [sp, #8]
  41e6b4:	mov	w1, w8
  41e6b8:	bl	402960 <memset@plt>
  41e6bc:	ldur	x0, [x29, #-8]
  41e6c0:	ldr	x9, [sp, #16]
  41e6c4:	ldr	x1, [x9, #72]
  41e6c8:	ldr	x2, [sp, #8]
  41e6cc:	bl	41e77c <_obstack_memory_used@@Base+0x5e0>
  41e6d0:	ldr	x9, [sp, #16]
  41e6d4:	ldr	x9, [x9, #72]
  41e6d8:	ldr	x10, [sp, #16]
  41e6dc:	ldr	x10, [x10, #80]
  41e6e0:	cmp	x9, x10
  41e6e4:	b.eq	41e6fc <_obstack_memory_used@@Base+0x560>  // b.none
  41e6e8:	ldur	x0, [x29, #-8]
  41e6ec:	ldr	x8, [sp, #16]
  41e6f0:	ldr	x1, [x8, #80]
  41e6f4:	ldr	x2, [sp, #8]
  41e6f8:	bl	41e77c <_obstack_memory_used@@Base+0x5e0>
  41e6fc:	ldr	x8, [sp, #16]
  41e700:	ldr	x8, [x8, #72]
  41e704:	ldr	x9, [sp, #16]
  41e708:	ldr	x9, [x9, #88]
  41e70c:	cmp	x8, x9
  41e710:	b.eq	41e728 <_obstack_memory_used@@Base+0x58c>  // b.none
  41e714:	ldur	x0, [x29, #-8]
  41e718:	ldr	x8, [sp, #16]
  41e71c:	ldr	x1, [x8, #88]
  41e720:	ldr	x2, [sp, #8]
  41e724:	bl	41e77c <_obstack_memory_used@@Base+0x5e0>
  41e728:	ldr	x8, [sp, #16]
  41e72c:	ldr	x8, [x8, #72]
  41e730:	ldr	x9, [sp, #16]
  41e734:	ldr	x9, [x9, #96]
  41e738:	cmp	x8, x9
  41e73c:	b.eq	41e754 <_obstack_memory_used@@Base+0x5b8>  // b.none
  41e740:	ldur	x0, [x29, #-8]
  41e744:	ldr	x8, [sp, #16]
  41e748:	ldr	x1, [x8, #96]
  41e74c:	ldr	x2, [sp, #8]
  41e750:	bl	41e77c <_obstack_memory_used@@Base+0x5e0>
  41e754:	ldur	x8, [x29, #-8]
  41e758:	ldrb	w9, [x8, #56]
  41e75c:	and	w9, w9, #0xfffffff7
  41e760:	orr	w9, w9, #0x8
  41e764:	strb	w9, [x8, #56]
  41e768:	mov	w9, wzr
  41e76c:	mov	w0, w9
  41e770:	ldp	x29, x30, [sp, #32]
  41e774:	add	sp, sp, #0x30
  41e778:	ret
  41e77c:	stp	x29, x30, [sp, #-32]!
  41e780:	str	x28, [sp, #16]
  41e784:	mov	x29, sp
  41e788:	sub	sp, sp, #0x260
  41e78c:	stur	x0, [x29, #-104]
  41e790:	stur	x1, [x29, #-112]
  41e794:	stur	x2, [x29, #-120]
  41e798:	ldur	x8, [x29, #-104]
  41e79c:	ldr	x8, [x8]
  41e7a0:	stur	x8, [x29, #-128]
  41e7a4:	ldur	x8, [x29, #-128]
  41e7a8:	ldr	w9, [x8, #180]
  41e7ac:	mov	w10, #0x0                   	// #0
  41e7b0:	cmp	w9, #0x1
  41e7b4:	str	w10, [sp, #84]
  41e7b8:	b.ne	41e7d0 <_obstack_memory_used@@Base+0x634>  // b.any
  41e7bc:	ldur	x8, [x29, #-104]
  41e7c0:	ldr	x8, [x8, #24]
  41e7c4:	tst	x8, #0x400000
  41e7c8:	cset	w9, ne  // ne = any
  41e7cc:	str	w9, [sp, #84]
  41e7d0:	ldr	w8, [sp, #84]
  41e7d4:	and	w8, w8, #0x1
  41e7d8:	sturb	w8, [x29, #-137]
  41e7dc:	stur	xzr, [x29, #-136]
  41e7e0:	ldur	x8, [x29, #-136]
  41e7e4:	ldur	x9, [x29, #-112]
  41e7e8:	ldr	x9, [x9, #16]
  41e7ec:	cmp	x8, x9
  41e7f0:	b.ge	41ee84 <_obstack_memory_used@@Base+0xce8>  // b.tcont
  41e7f4:	ldur	x8, [x29, #-112]
  41e7f8:	mov	x9, #0x10                  	// #16
  41e7fc:	ldr	x8, [x8, #24]
  41e800:	ldur	x10, [x29, #-136]
  41e804:	ldr	x8, [x8, x10, lsl #3]
  41e808:	stur	x8, [x29, #-152]
  41e80c:	ldur	x8, [x29, #-128]
  41e810:	ldr	x8, [x8]
  41e814:	ldur	x10, [x29, #-152]
  41e818:	mul	x9, x9, x10
  41e81c:	add	x8, x8, x9
  41e820:	ldr	w11, [x8, #8]
  41e824:	and	w11, w11, #0xff
  41e828:	stur	w11, [x29, #-156]
  41e82c:	ldur	w11, [x29, #-156]
  41e830:	cmp	w11, #0x1
  41e834:	b.ne	41ea8c <_obstack_memory_used@@Base+0x8f0>  // b.any
  41e838:	ldur	x8, [x29, #-120]
  41e83c:	ldurb	w9, [x29, #-137]
  41e840:	ldur	x10, [x29, #-128]
  41e844:	ldr	x10, [x10]
  41e848:	ldur	x11, [x29, #-152]
  41e84c:	mov	x12, #0x10                  	// #16
  41e850:	mul	x11, x12, x11
  41e854:	ldrb	w13, [x10, x11]
  41e858:	stur	x8, [x29, #-88]
  41e85c:	and	w9, w9, #0x1
  41e860:	sturb	w9, [x29, #-89]
  41e864:	stur	w13, [x29, #-96]
  41e868:	ldur	x8, [x29, #-88]
  41e86c:	ldursw	x10, [x29, #-96]
  41e870:	add	x8, x8, x10
  41e874:	mov	w9, #0x1                   	// #1
  41e878:	strb	w9, [x8]
  41e87c:	ldurb	w9, [x29, #-89]
  41e880:	tbnz	w9, #0, 41e888 <_obstack_memory_used@@Base+0x6ec>
  41e884:	b	41e8b0 <_obstack_memory_used@@Base+0x714>
  41e888:	ldur	x8, [x29, #-88]
  41e88c:	ldur	w0, [x29, #-96]
  41e890:	str	x8, [sp, #72]
  41e894:	bl	402d10 <tolower@plt>
  41e898:	mov	w1, w0
  41e89c:	sxtw	x8, w1
  41e8a0:	ldr	x9, [sp, #72]
  41e8a4:	add	x8, x9, x8
  41e8a8:	mov	w10, #0x1                   	// #1
  41e8ac:	strb	w10, [x8]
  41e8b0:	ldur	x8, [x29, #-104]
  41e8b4:	ldr	x8, [x8, #24]
  41e8b8:	and	x8, x8, #0x400000
  41e8bc:	cbz	x8, 41ea88 <_obstack_memory_used@@Base+0x8ec>
  41e8c0:	ldur	x8, [x29, #-128]
  41e8c4:	ldr	w9, [x8, #180]
  41e8c8:	cmp	w9, #0x1
  41e8cc:	b.le	41ea88 <_obstack_memory_used@@Base+0x8ec>
  41e8d0:	sub	x8, x29, #0xac
  41e8d4:	stur	x8, [x29, #-184]
  41e8d8:	ldur	x8, [x29, #-128]
  41e8dc:	ldr	x8, [x8]
  41e8e0:	ldur	x9, [x29, #-152]
  41e8e4:	mov	x10, #0x10                  	// #16
  41e8e8:	mul	x9, x10, x9
  41e8ec:	add	x8, x8, x9
  41e8f0:	ldrb	w11, [x8]
  41e8f4:	ldur	x8, [x29, #-184]
  41e8f8:	add	x9, x8, #0x1
  41e8fc:	stur	x9, [x29, #-184]
  41e900:	strb	w11, [x8]
  41e904:	ldur	x8, [x29, #-152]
  41e908:	add	x8, x8, #0x1
  41e90c:	stur	x8, [x29, #-152]
  41e910:	ldur	x9, [x29, #-128]
  41e914:	ldr	x9, [x9, #16]
  41e918:	mov	w10, #0x0                   	// #0
  41e91c:	cmp	x8, x9
  41e920:	str	w10, [sp, #68]
  41e924:	b.cs	41e984 <_obstack_memory_used@@Base+0x7e8>  // b.hs, b.nlast
  41e928:	ldur	x8, [x29, #-128]
  41e92c:	ldr	x8, [x8]
  41e930:	ldur	x9, [x29, #-152]
  41e934:	mov	x10, #0x10                  	// #16
  41e938:	mul	x9, x10, x9
  41e93c:	add	x8, x8, x9
  41e940:	ldr	w11, [x8, #8]
  41e944:	and	w11, w11, #0xff
  41e948:	mov	w12, #0x0                   	// #0
  41e94c:	cmp	w11, #0x1
  41e950:	str	w12, [sp, #68]
  41e954:	b.ne	41e984 <_obstack_memory_used@@Base+0x7e8>  // b.any
  41e958:	ldur	x8, [x29, #-128]
  41e95c:	ldr	x8, [x8]
  41e960:	ldur	x9, [x29, #-152]
  41e964:	mov	x10, #0x10                  	// #16
  41e968:	mul	x9, x10, x9
  41e96c:	add	x8, x8, x9
  41e970:	ldr	w11, [x8, #8]
  41e974:	lsr	w11, w11, #21
  41e978:	tst	w11, #0x1
  41e97c:	cset	w11, ne  // ne = any
  41e980:	str	w11, [sp, #68]
  41e984:	ldr	w8, [sp, #68]
  41e988:	tbnz	w8, #0, 41e990 <_obstack_memory_used@@Base+0x7f4>
  41e98c:	b	41e9c0 <_obstack_memory_used@@Base+0x824>
  41e990:	ldur	x8, [x29, #-128]
  41e994:	ldr	x8, [x8]
  41e998:	ldur	x9, [x29, #-152]
  41e99c:	mov	x10, #0x10                  	// #16
  41e9a0:	mul	x9, x10, x9
  41e9a4:	add	x8, x8, x9
  41e9a8:	ldrb	w11, [x8]
  41e9ac:	ldur	x8, [x29, #-184]
  41e9b0:	add	x9, x8, #0x1
  41e9b4:	stur	x9, [x29, #-184]
  41e9b8:	strb	w11, [x8]
  41e9bc:	b	41e904 <_obstack_memory_used@@Base+0x768>
  41e9c0:	sub	x3, x29, #0xc8
  41e9c4:	stur	xzr, [x29, #-200]
  41e9c8:	ldur	x8, [x29, #-184]
  41e9cc:	sub	x9, x29, #0xac
  41e9d0:	mov	x10, x9
  41e9d4:	subs	x2, x8, x10
  41e9d8:	sub	x0, x29, #0xbc
  41e9dc:	mov	x1, x9
  41e9e0:	str	x9, [sp, #56]
  41e9e4:	bl	41da58 <wcrtomb@plt+0x1aca8>
  41e9e8:	ldur	x8, [x29, #-184]
  41e9ec:	ldr	x9, [sp, #56]
  41e9f0:	subs	x8, x8, x9
  41e9f4:	cmp	x0, x8
  41e9f8:	b.ne	41ea88 <_obstack_memory_used@@Base+0x8ec>  // b.any
  41e9fc:	ldur	w0, [x29, #-188]
  41ea00:	bl	402d60 <towlower@plt>
  41ea04:	sub	x8, x29, #0xac
  41ea08:	str	w0, [sp, #52]
  41ea0c:	mov	x0, x8
  41ea10:	ldr	w1, [sp, #52]
  41ea14:	sub	x2, x29, #0xc8
  41ea18:	bl	402db0 <wcrtomb@plt>
  41ea1c:	mov	x8, #0xffffffffffffffff    	// #-1
  41ea20:	cmp	x0, x8
  41ea24:	b.eq	41ea88 <_obstack_memory_used@@Base+0x8ec>  // b.none
  41ea28:	ldur	x8, [x29, #-120]
  41ea2c:	ldurb	w9, [x29, #-172]
  41ea30:	stur	x8, [x29, #-72]
  41ea34:	mov	w10, #0x0                   	// #0
  41ea38:	sturb	w10, [x29, #-73]
  41ea3c:	stur	w9, [x29, #-80]
  41ea40:	ldur	x8, [x29, #-72]
  41ea44:	ldursw	x11, [x29, #-80]
  41ea48:	add	x8, x8, x11
  41ea4c:	mov	w9, #0x1                   	// #1
  41ea50:	strb	w9, [x8]
  41ea54:	ldurb	w9, [x29, #-73]
  41ea58:	tbnz	w9, #0, 41ea60 <_obstack_memory_used@@Base+0x8c4>
  41ea5c:	b	41ea88 <_obstack_memory_used@@Base+0x8ec>
  41ea60:	ldur	x8, [x29, #-72]
  41ea64:	ldur	w0, [x29, #-80]
  41ea68:	str	x8, [sp, #40]
  41ea6c:	bl	402d10 <tolower@plt>
  41ea70:	mov	w1, w0
  41ea74:	sxtw	x8, w1
  41ea78:	ldr	x9, [sp, #40]
  41ea7c:	add	x8, x9, x8
  41ea80:	mov	w10, #0x1                   	// #1
  41ea84:	strb	w10, [x8]
  41ea88:	b	41ee74 <_obstack_memory_used@@Base+0xcd8>
  41ea8c:	ldur	w8, [x29, #-156]
  41ea90:	cmp	w8, #0x3
  41ea94:	b.ne	41eb94 <_obstack_memory_used@@Base+0x9f8>  // b.any
  41ea98:	stur	wzr, [x29, #-204]
  41ea9c:	stur	wzr, [x29, #-208]
  41eaa0:	ldur	w8, [x29, #-204]
  41eaa4:	cmp	w8, #0x4
  41eaa8:	b.ge	41eb90 <_obstack_memory_used@@Base+0x9f4>  // b.tcont
  41eaac:	ldur	x8, [x29, #-128]
  41eab0:	ldr	x8, [x8]
  41eab4:	ldur	x9, [x29, #-152]
  41eab8:	mov	x10, #0x10                  	// #16
  41eabc:	mul	x9, x10, x9
  41eac0:	add	x8, x8, x9
  41eac4:	ldr	x8, [x8]
  41eac8:	ldursw	x9, [x29, #-204]
  41eacc:	ldr	x8, [x8, x9, lsl #3]
  41ead0:	stur	x8, [x29, #-224]
  41ead4:	stur	wzr, [x29, #-212]
  41ead8:	ldur	w8, [x29, #-212]
  41eadc:	cmp	w8, #0x40
  41eae0:	b.ge	41eb80 <_obstack_memory_used@@Base+0x9e4>  // b.tcont
  41eae4:	ldur	x8, [x29, #-224]
  41eae8:	ldur	w9, [x29, #-212]
  41eaec:	mov	w10, w9
  41eaf0:	mov	x11, #0x1                   	// #1
  41eaf4:	lsl	x10, x11, x10
  41eaf8:	and	x8, x8, x10
  41eafc:	cbz	x8, 41eb64 <_obstack_memory_used@@Base+0x9c8>
  41eb00:	ldur	x8, [x29, #-120]
  41eb04:	ldurb	w9, [x29, #-137]
  41eb08:	ldur	w10, [x29, #-208]
  41eb0c:	stur	x8, [x29, #-56]
  41eb10:	and	w9, w9, #0x1
  41eb14:	sturb	w9, [x29, #-57]
  41eb18:	stur	w10, [x29, #-64]
  41eb1c:	ldur	x8, [x29, #-56]
  41eb20:	ldursw	x11, [x29, #-64]
  41eb24:	add	x8, x8, x11
  41eb28:	mov	w9, #0x1                   	// #1
  41eb2c:	strb	w9, [x8]
  41eb30:	ldurb	w9, [x29, #-57]
  41eb34:	tbnz	w9, #0, 41eb3c <_obstack_memory_used@@Base+0x9a0>
  41eb38:	b	41eb64 <_obstack_memory_used@@Base+0x9c8>
  41eb3c:	ldur	x8, [x29, #-56]
  41eb40:	ldur	w0, [x29, #-64]
  41eb44:	str	x8, [sp, #32]
  41eb48:	bl	402d10 <tolower@plt>
  41eb4c:	mov	w1, w0
  41eb50:	sxtw	x8, w1
  41eb54:	ldr	x9, [sp, #32]
  41eb58:	add	x8, x9, x8
  41eb5c:	mov	w10, #0x1                   	// #1
  41eb60:	strb	w10, [x8]
  41eb64:	ldur	w8, [x29, #-212]
  41eb68:	add	w8, w8, #0x1
  41eb6c:	stur	w8, [x29, #-212]
  41eb70:	ldur	w8, [x29, #-208]
  41eb74:	add	w8, w8, #0x1
  41eb78:	stur	w8, [x29, #-208]
  41eb7c:	b	41ead8 <_obstack_memory_used@@Base+0x93c>
  41eb80:	ldur	w8, [x29, #-204]
  41eb84:	add	w8, w8, #0x1
  41eb88:	stur	w8, [x29, #-204]
  41eb8c:	b	41eaa0 <_obstack_memory_used@@Base+0x904>
  41eb90:	b	41ee74 <_obstack_memory_used@@Base+0xcd8>
  41eb94:	ldur	w8, [x29, #-156]
  41eb98:	cmp	w8, #0x6
  41eb9c:	b.ne	41ee1c <_obstack_memory_used@@Base+0xc80>  // b.any
  41eba0:	ldur	x8, [x29, #-128]
  41eba4:	ldr	x8, [x8]
  41eba8:	ldur	x9, [x29, #-152]
  41ebac:	mov	x10, #0x10                  	// #16
  41ebb0:	mul	x9, x10, x9
  41ebb4:	add	x8, x8, x9
  41ebb8:	ldr	x8, [x8]
  41ebbc:	stur	x8, [x29, #-232]
  41ebc0:	ldur	x8, [x29, #-128]
  41ebc4:	ldr	w11, [x8, #180]
  41ebc8:	cmp	w11, #0x1
  41ebcc:	b.le	41eca8 <_obstack_memory_used@@Base+0xb0c>
  41ebd0:	ldur	x8, [x29, #-232]
  41ebd4:	ldr	x8, [x8, #72]
  41ebd8:	cbnz	x8, 41ebfc <_obstack_memory_used@@Base+0xa60>
  41ebdc:	ldur	x8, [x29, #-232]
  41ebe0:	ldrb	w9, [x8, #32]
  41ebe4:	and	w9, w9, #0x1
  41ebe8:	and	w9, w9, #0xff
  41ebec:	cbnz	w9, 41ebfc <_obstack_memory_used@@Base+0xa60>
  41ebf0:	ldur	x8, [x29, #-232]
  41ebf4:	ldr	x8, [x8, #64]
  41ebf8:	cbz	x8, 41eca8 <_obstack_memory_used@@Base+0xb0c>
  41ebfc:	mov	w8, #0x0                   	// #0
  41ec00:	sturb	w8, [x29, #-241]
  41ec04:	sub	x3, x29, #0x100
  41ec08:	stur	xzr, [x29, #-256]
  41ec0c:	mov	x8, xzr
  41ec10:	mov	x0, x8
  41ec14:	sub	x1, x29, #0xf1
  41ec18:	mov	x2, #0x1                   	// #1
  41ec1c:	bl	41da58 <wcrtomb@plt+0x1aca8>
  41ec20:	mov	x8, #0xfffffffffffffffe    	// #-2
  41ec24:	cmp	x0, x8
  41ec28:	b.ne	41ec8c <_obstack_memory_used@@Base+0xaf0>  // b.any
  41ec2c:	ldur	x8, [x29, #-120]
  41ec30:	ldurb	w9, [x29, #-241]
  41ec34:	stur	x8, [x29, #-40]
  41ec38:	mov	w10, #0x0                   	// #0
  41ec3c:	sturb	w10, [x29, #-41]
  41ec40:	stur	w9, [x29, #-48]
  41ec44:	ldur	x8, [x29, #-40]
  41ec48:	ldursw	x11, [x29, #-48]
  41ec4c:	add	x8, x8, x11
  41ec50:	mov	w9, #0x1                   	// #1
  41ec54:	strb	w9, [x8]
  41ec58:	ldurb	w9, [x29, #-41]
  41ec5c:	tbnz	w9, #0, 41ec64 <_obstack_memory_used@@Base+0xac8>
  41ec60:	b	41ec8c <_obstack_memory_used@@Base+0xaf0>
  41ec64:	ldur	x8, [x29, #-40]
  41ec68:	ldur	w0, [x29, #-48]
  41ec6c:	str	x8, [sp, #24]
  41ec70:	bl	402d10 <tolower@plt>
  41ec74:	mov	w1, w0
  41ec78:	sxtw	x8, w1
  41ec7c:	ldr	x9, [sp, #24]
  41ec80:	add	x8, x9, x8
  41ec84:	mov	w10, #0x1                   	// #1
  41ec88:	strb	w10, [x8]
  41ec8c:	ldurb	w8, [x29, #-241]
  41ec90:	add	w8, w8, #0x1
  41ec94:	mov	w9, w8
  41ec98:	sturb	w9, [x29, #-241]
  41ec9c:	and	w8, w8, #0xff
  41eca0:	cbnz	w8, 41ec04 <_obstack_memory_used@@Base+0xa68>
  41eca4:	b	41ee18 <_obstack_memory_used@@Base+0xc7c>
  41eca8:	stur	xzr, [x29, #-240]
  41ecac:	ldur	x8, [x29, #-240]
  41ecb0:	ldur	x9, [x29, #-232]
  41ecb4:	ldr	x9, [x9, #40]
  41ecb8:	cmp	x8, x9
  41ecbc:	b.ge	41ee18 <_obstack_memory_used@@Base+0xc7c>  // b.tcont
  41ecc0:	add	x2, sp, #0x58
  41ecc4:	str	xzr, [sp, #88]
  41ecc8:	ldur	x8, [x29, #-232]
  41eccc:	ldr	x8, [x8]
  41ecd0:	ldur	x9, [x29, #-240]
  41ecd4:	ldr	w1, [x8, x9, lsl #2]
  41ecd8:	add	x0, sp, #0x60
  41ecdc:	bl	402db0 <wcrtomb@plt>
  41ece0:	mov	x8, #0xffffffffffffffff    	// #-1
  41ece4:	cmp	x0, x8
  41ece8:	b.eq	41ed50 <_obstack_memory_used@@Base+0xbb4>  // b.none
  41ecec:	ldur	x8, [x29, #-120]
  41ecf0:	ldurb	w9, [x29, #-137]
  41ecf4:	ldrb	w10, [sp, #96]
  41ecf8:	stur	x8, [x29, #-24]
  41ecfc:	and	w9, w9, #0x1
  41ed00:	sturb	w9, [x29, #-25]
  41ed04:	stur	w10, [x29, #-32]
  41ed08:	ldur	x8, [x29, #-24]
  41ed0c:	ldursw	x11, [x29, #-32]
  41ed10:	add	x8, x8, x11
  41ed14:	mov	w9, #0x1                   	// #1
  41ed18:	strb	w9, [x8]
  41ed1c:	ldurb	w9, [x29, #-25]
  41ed20:	tbnz	w9, #0, 41ed28 <_obstack_memory_used@@Base+0xb8c>
  41ed24:	b	41ed50 <_obstack_memory_used@@Base+0xbb4>
  41ed28:	ldur	x8, [x29, #-24]
  41ed2c:	ldur	w0, [x29, #-32]
  41ed30:	str	x8, [sp, #16]
  41ed34:	bl	402d10 <tolower@plt>
  41ed38:	mov	w1, w0
  41ed3c:	sxtw	x8, w1
  41ed40:	ldr	x9, [sp, #16]
  41ed44:	add	x8, x9, x8
  41ed48:	mov	w10, #0x1                   	// #1
  41ed4c:	strb	w10, [x8]
  41ed50:	ldur	x8, [x29, #-104]
  41ed54:	ldr	x8, [x8, #24]
  41ed58:	and	x8, x8, #0x400000
  41ed5c:	cbz	x8, 41ee08 <_obstack_memory_used@@Base+0xc6c>
  41ed60:	ldur	x8, [x29, #-128]
  41ed64:	ldr	w9, [x8, #180]
  41ed68:	cmp	w9, #0x1
  41ed6c:	b.le	41ee08 <_obstack_memory_used@@Base+0xc6c>
  41ed70:	ldur	x8, [x29, #-232]
  41ed74:	ldr	x8, [x8]
  41ed78:	ldur	x9, [x29, #-240]
  41ed7c:	ldr	w0, [x8, x9, lsl #2]
  41ed80:	bl	402d60 <towlower@plt>
  41ed84:	add	x8, sp, #0x60
  41ed88:	str	w0, [sp, #12]
  41ed8c:	mov	x0, x8
  41ed90:	ldr	w1, [sp, #12]
  41ed94:	add	x2, sp, #0x58
  41ed98:	bl	402db0 <wcrtomb@plt>
  41ed9c:	mov	x8, #0xffffffffffffffff    	// #-1
  41eda0:	cmp	x0, x8
  41eda4:	b.eq	41ee08 <_obstack_memory_used@@Base+0xc6c>  // b.none
  41eda8:	ldur	x8, [x29, #-120]
  41edac:	ldrb	w9, [sp, #96]
  41edb0:	stur	x8, [x29, #-8]
  41edb4:	mov	w10, #0x0                   	// #0
  41edb8:	sturb	w10, [x29, #-9]
  41edbc:	stur	w9, [x29, #-16]
  41edc0:	ldur	x8, [x29, #-8]
  41edc4:	ldursw	x11, [x29, #-16]
  41edc8:	add	x8, x8, x11
  41edcc:	mov	w9, #0x1                   	// #1
  41edd0:	strb	w9, [x8]
  41edd4:	ldurb	w9, [x29, #-9]
  41edd8:	tbnz	w9, #0, 41ede0 <_obstack_memory_used@@Base+0xc44>
  41eddc:	b	41ee08 <_obstack_memory_used@@Base+0xc6c>
  41ede0:	ldur	x8, [x29, #-8]
  41ede4:	ldur	w0, [x29, #-16]
  41ede8:	str	x8, [sp]
  41edec:	bl	402d10 <tolower@plt>
  41edf0:	mov	w1, w0
  41edf4:	sxtw	x8, w1
  41edf8:	ldr	x9, [sp]
  41edfc:	add	x8, x9, x8
  41ee00:	mov	w10, #0x1                   	// #1
  41ee04:	strb	w10, [x8]
  41ee08:	ldur	x8, [x29, #-240]
  41ee0c:	add	x8, x8, #0x1
  41ee10:	stur	x8, [x29, #-240]
  41ee14:	b	41ecac <_obstack_memory_used@@Base+0xb10>
  41ee18:	b	41ee74 <_obstack_memory_used@@Base+0xcd8>
  41ee1c:	ldur	w8, [x29, #-156]
  41ee20:	cmp	w8, #0x5
  41ee24:	b.eq	41ee40 <_obstack_memory_used@@Base+0xca4>  // b.none
  41ee28:	ldur	w8, [x29, #-156]
  41ee2c:	cmp	w8, #0x7
  41ee30:	b.eq	41ee40 <_obstack_memory_used@@Base+0xca4>  // b.none
  41ee34:	ldur	w8, [x29, #-156]
  41ee38:	cmp	w8, #0x2
  41ee3c:	b.ne	41ee74 <_obstack_memory_used@@Base+0xcd8>  // b.any
  41ee40:	ldur	x0, [x29, #-120]
  41ee44:	mov	w1, #0x1                   	// #1
  41ee48:	mov	x2, #0x100                 	// #256
  41ee4c:	bl	402960 <memset@plt>
  41ee50:	ldur	w8, [x29, #-156]
  41ee54:	cmp	w8, #0x2
  41ee58:	b.ne	41ee70 <_obstack_memory_used@@Base+0xcd4>  // b.any
  41ee5c:	ldur	x8, [x29, #-104]
  41ee60:	ldrb	w9, [x8, #56]
  41ee64:	and	w9, w9, #0xfffffffe
  41ee68:	orr	w9, w9, #0x1
  41ee6c:	strb	w9, [x8, #56]
  41ee70:	b	41ee84 <_obstack_memory_used@@Base+0xce8>
  41ee74:	ldur	x8, [x29, #-136]
  41ee78:	add	x8, x8, #0x1
  41ee7c:	stur	x8, [x29, #-136]
  41ee80:	b	41e7e0 <_obstack_memory_used@@Base+0x644>
  41ee84:	add	sp, sp, #0x260
  41ee88:	ldr	x28, [sp, #16]
  41ee8c:	ldp	x29, x30, [sp], #32
  41ee90:	ret
  41ee94:	sub	sp, sp, #0x50
  41ee98:	stp	x29, x30, [sp, #64]
  41ee9c:	add	x29, sp, #0x40
  41eea0:	mov	x8, #0xb2fc                	// #45820
  41eea4:	movk	x8, #0x3, lsl #16
  41eea8:	mov	x9, #0x2c6                 	// #710
  41eeac:	movk	x9, #0x101, lsl #16
  41eeb0:	mov	x10, xzr
  41eeb4:	mov	x11, #0x100                 	// #256
  41eeb8:	stur	x0, [x29, #-16]
  41eebc:	stur	x1, [x29, #-24]
  41eec0:	stur	w2, [x29, #-28]
  41eec4:	ldur	w12, [x29, #-28]
  41eec8:	tst	w12, #0x1
  41eecc:	csel	x8, x8, x9, ne  // ne = any
  41eed0:	str	x8, [sp, #24]
  41eed4:	ldur	x8, [x29, #-16]
  41eed8:	str	x10, [x8]
  41eedc:	ldur	x8, [x29, #-16]
  41eee0:	str	xzr, [x8, #8]
  41eee4:	ldur	x8, [x29, #-16]
  41eee8:	str	xzr, [x8, #16]
  41eeec:	mov	x0, x11
  41eef0:	bl	402890 <malloc@plt>
  41eef4:	ldur	x8, [x29, #-16]
  41eef8:	str	x0, [x8, #32]
  41eefc:	ldur	x8, [x29, #-16]
  41ef00:	ldr	x8, [x8, #32]
  41ef04:	cmp	x8, #0x0
  41ef08:	cset	w12, eq  // eq = none
  41ef0c:	and	w12, w12, #0x1
  41ef10:	mov	w0, w12
  41ef14:	sxtw	x8, w0
  41ef18:	cbz	x8, 41ef28 <_obstack_memory_used@@Base+0xd8c>
  41ef1c:	mov	w8, #0xc                   	// #12
  41ef20:	stur	w8, [x29, #-4]
  41ef24:	b	41f070 <_obstack_memory_used@@Base+0xed4>
  41ef28:	ldur	w8, [x29, #-28]
  41ef2c:	mov	x9, #0x400000              	// #4194304
  41ef30:	mov	x10, xzr
  41ef34:	tst	w8, #0x2
  41ef38:	csel	x9, x9, x10, ne  // ne = any
  41ef3c:	ldr	x10, [sp, #24]
  41ef40:	orr	x9, x10, x9
  41ef44:	str	x9, [sp, #24]
  41ef48:	ldur	w8, [x29, #-28]
  41ef4c:	and	w8, w8, #0x4
  41ef50:	cbz	w8, 41ef84 <_obstack_memory_used@@Base+0xde8>
  41ef54:	ldr	x8, [sp, #24]
  41ef58:	and	x8, x8, #0xffffffffffffffbf
  41ef5c:	str	x8, [sp, #24]
  41ef60:	ldr	x8, [sp, #24]
  41ef64:	orr	x8, x8, #0x100
  41ef68:	str	x8, [sp, #24]
  41ef6c:	ldur	x8, [x29, #-16]
  41ef70:	ldrb	w9, [x8, #56]
  41ef74:	and	w9, w9, #0x7f
  41ef78:	orr	w9, w9, #0xffffff80
  41ef7c:	strb	w9, [x8, #56]
  41ef80:	b	41ef94 <_obstack_memory_used@@Base+0xdf8>
  41ef84:	ldur	x8, [x29, #-16]
  41ef88:	ldrb	w9, [x8, #56]
  41ef8c:	and	w9, w9, #0x7f
  41ef90:	strb	w9, [x8, #56]
  41ef94:	ldur	w8, [x29, #-28]
  41ef98:	tst	w8, #0x8
  41ef9c:	cset	w8, ne  // ne = any
  41efa0:	mov	w9, #0x1                   	// #1
  41efa4:	eor	w8, w8, #0x1
  41efa8:	eor	w8, w8, w9
  41efac:	and	w8, w8, #0x1
  41efb0:	ldur	x10, [x29, #-16]
  41efb4:	ldrb	w11, [x10, #56]
  41efb8:	and	w8, w8, w9
  41efbc:	lsl	w8, w8, #4
  41efc0:	and	w9, w11, #0xffffffef
  41efc4:	orr	w8, w9, w8
  41efc8:	strb	w8, [x10, #56]
  41efcc:	ldur	x10, [x29, #-16]
  41efd0:	mov	x12, xzr
  41efd4:	str	x12, [x10, #40]
  41efd8:	ldur	x0, [x29, #-16]
  41efdc:	ldur	x1, [x29, #-24]
  41efe0:	ldur	x10, [x29, #-24]
  41efe4:	str	x0, [sp, #16]
  41efe8:	mov	x0, x10
  41efec:	str	x1, [sp, #8]
  41eff0:	bl	4026f0 <strlen@plt>
  41eff4:	ldr	x3, [sp, #24]
  41eff8:	ldr	x10, [sp, #16]
  41effc:	str	x0, [sp]
  41f000:	mov	x0, x10
  41f004:	ldr	x1, [sp, #8]
  41f008:	ldr	x2, [sp]
  41f00c:	bl	41e328 <_obstack_memory_used@@Base+0x18c>
  41f010:	str	w0, [sp, #32]
  41f014:	ldr	w8, [sp, #32]
  41f018:	cmp	w8, #0x10
  41f01c:	b.ne	41f028 <_obstack_memory_used@@Base+0xe8c>  // b.any
  41f020:	mov	w8, #0x8                   	// #8
  41f024:	str	w8, [sp, #32]
  41f028:	ldr	w8, [sp, #32]
  41f02c:	cmp	w8, #0x0
  41f030:	cset	w8, eq  // eq = none
  41f034:	and	w8, w8, #0x1
  41f038:	mov	w0, w8
  41f03c:	sxtw	x9, w0
  41f040:	cbz	x9, 41f050 <_obstack_memory_used@@Base+0xeb4>
  41f044:	ldur	x0, [x29, #-16]
  41f048:	bl	41e680 <_obstack_memory_used@@Base+0x4e4>
  41f04c:	b	41f068 <_obstack_memory_used@@Base+0xecc>
  41f050:	ldur	x8, [x29, #-16]
  41f054:	ldr	x0, [x8, #32]
  41f058:	bl	402b40 <free@plt>
  41f05c:	ldur	x8, [x29, #-16]
  41f060:	mov	x9, xzr
  41f064:	str	x9, [x8, #32]
  41f068:	ldr	w8, [sp, #32]
  41f06c:	stur	w8, [x29, #-4]
  41f070:	ldur	w0, [x29, #-4]
  41f074:	ldp	x29, x30, [sp, #64]
  41f078:	add	sp, sp, #0x50
  41f07c:	ret
  41f080:	sub	sp, sp, #0x60
  41f084:	stp	x29, x30, [sp, #80]
  41f088:	add	x29, sp, #0x50
  41f08c:	mov	w8, #0x11                  	// #17
  41f090:	stur	w0, [x29, #-4]
  41f094:	stur	x1, [x29, #-16]
  41f098:	stur	x2, [x29, #-24]
  41f09c:	stur	x3, [x29, #-32]
  41f0a0:	str	w8, [sp, #28]
  41f0a4:	ldur	w8, [x29, #-4]
  41f0a8:	cmp	w8, #0x0
  41f0ac:	cset	w8, lt  // lt = tstop
  41f0b0:	mov	w9, #0x1                   	// #1
  41f0b4:	str	w9, [sp, #12]
  41f0b8:	tbnz	w8, #0, 41f0d0 <_obstack_memory_used@@Base+0xf34>
  41f0bc:	ldur	w8, [x29, #-4]
  41f0c0:	ldr	w9, [sp, #28]
  41f0c4:	cmp	w8, w9
  41f0c8:	cset	w8, ge  // ge = tcont
  41f0cc:	str	w8, [sp, #12]
  41f0d0:	ldr	w8, [sp, #12]
  41f0d4:	and	w8, w8, #0x1
  41f0d8:	mov	w0, w8
  41f0dc:	sxtw	x9, w0
  41f0e0:	cbz	x9, 41f0e8 <_obstack_memory_used@@Base+0xf4c>
  41f0e4:	bl	402a70 <abort@plt>
  41f0e8:	ldursw	x8, [x29, #-4]
  41f0ec:	adrp	x9, 43a000 <_obstack_memory_used@@Base+0x1be64>
  41f0f0:	add	x9, x9, #0x78
  41f0f4:	ldr	x8, [x9, x8, lsl #3]
  41f0f8:	adrp	x9, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41f0fc:	add	x9, x9, #0xef4
  41f100:	add	x0, x9, x8
  41f104:	bl	402d40 <gettext@plt>
  41f108:	str	x0, [sp, #40]
  41f10c:	ldr	x0, [sp, #40]
  41f110:	bl	4026f0 <strlen@plt>
  41f114:	add	x8, x0, #0x1
  41f118:	str	x8, [sp, #32]
  41f11c:	ldur	x8, [x29, #-32]
  41f120:	cmp	x8, #0x0
  41f124:	cset	w10, ne  // ne = any
  41f128:	and	w10, w10, #0x1
  41f12c:	mov	w0, w10
  41f130:	sxtw	x8, w0
  41f134:	cbz	x8, 41f190 <_obstack_memory_used@@Base+0xff4>
  41f138:	ldr	x8, [sp, #32]
  41f13c:	str	x8, [sp, #16]
  41f140:	ldr	x8, [sp, #32]
  41f144:	ldur	x9, [x29, #-32]
  41f148:	cmp	x8, x9
  41f14c:	cset	w10, hi  // hi = pmore
  41f150:	and	w10, w10, #0x1
  41f154:	mov	w0, w10
  41f158:	sxtw	x8, w0
  41f15c:	cbz	x8, 41f180 <_obstack_memory_used@@Base+0xfe4>
  41f160:	ldur	x8, [x29, #-32]
  41f164:	subs	x8, x8, #0x1
  41f168:	str	x8, [sp, #16]
  41f16c:	ldur	x8, [x29, #-24]
  41f170:	ldr	x9, [sp, #16]
  41f174:	add	x8, x8, x9
  41f178:	mov	w10, #0x0                   	// #0
  41f17c:	strb	w10, [x8]
  41f180:	ldur	x0, [x29, #-24]
  41f184:	ldr	x1, [sp, #40]
  41f188:	ldr	x2, [sp, #16]
  41f18c:	bl	4026a0 <memcpy@plt>
  41f190:	ldr	x0, [sp, #32]
  41f194:	ldp	x29, x30, [sp, #80]
  41f198:	add	sp, sp, #0x60
  41f19c:	ret
  41f1a0:	sub	sp, sp, #0x30
  41f1a4:	stp	x29, x30, [sp, #32]
  41f1a8:	add	x29, sp, #0x20
  41f1ac:	stur	x0, [x29, #-8]
  41f1b0:	ldur	x8, [x29, #-8]
  41f1b4:	ldr	x8, [x8]
  41f1b8:	str	x8, [sp, #16]
  41f1bc:	ldr	x8, [sp, #16]
  41f1c0:	cmp	x8, #0x0
  41f1c4:	cset	w9, ne  // ne = any
  41f1c8:	and	w9, w9, #0x1
  41f1cc:	mov	w0, w9
  41f1d0:	sxtw	x8, w0
  41f1d4:	cbz	x8, 41f1e0 <_obstack_memory_used@@Base+0x1044>
  41f1d8:	ldr	x0, [sp, #16]
  41f1dc:	bl	41f234 <_obstack_memory_used@@Base+0x1098>
  41f1e0:	ldur	x8, [x29, #-8]
  41f1e4:	mov	x9, xzr
  41f1e8:	str	x9, [x8]
  41f1ec:	ldur	x8, [x29, #-8]
  41f1f0:	str	xzr, [x8, #8]
  41f1f4:	ldur	x8, [x29, #-8]
  41f1f8:	ldr	x0, [x8, #32]
  41f1fc:	str	x9, [sp, #8]
  41f200:	bl	402b40 <free@plt>
  41f204:	ldur	x8, [x29, #-8]
  41f208:	ldr	x9, [sp, #8]
  41f20c:	str	x9, [x8, #32]
  41f210:	ldur	x8, [x29, #-8]
  41f214:	ldr	x0, [x8, #40]
  41f218:	bl	402b40 <free@plt>
  41f21c:	ldur	x8, [x29, #-8]
  41f220:	ldr	x9, [sp, #8]
  41f224:	str	x9, [x8, #40]
  41f228:	ldp	x29, x30, [sp, #32]
  41f22c:	add	sp, sp, #0x30
  41f230:	ret
  41f234:	sub	sp, sp, #0x40
  41f238:	stp	x29, x30, [sp, #48]
  41f23c:	add	x29, sp, #0x30
  41f240:	stur	x0, [x29, #-8]
  41f244:	ldur	x8, [x29, #-8]
  41f248:	ldr	x8, [x8]
  41f24c:	cbz	x8, 41f294 <_obstack_memory_used@@Base+0x10f8>
  41f250:	stur	xzr, [x29, #-16]
  41f254:	ldur	x8, [x29, #-16]
  41f258:	ldur	x9, [x29, #-8]
  41f25c:	ldr	x9, [x9, #16]
  41f260:	cmp	x8, x9
  41f264:	b.cs	41f294 <_obstack_memory_used@@Base+0x10f8>  // b.hs, b.nlast
  41f268:	ldur	x8, [x29, #-8]
  41f26c:	ldr	x8, [x8]
  41f270:	ldur	x9, [x29, #-16]
  41f274:	mov	x10, #0x10                  	// #16
  41f278:	mul	x9, x10, x9
  41f27c:	add	x0, x8, x9
  41f280:	bl	420d5c <_obstack_memory_used@@Base+0x2bc0>
  41f284:	ldur	x8, [x29, #-16]
  41f288:	add	x8, x8, #0x1
  41f28c:	stur	x8, [x29, #-16]
  41f290:	b	41f254 <_obstack_memory_used@@Base+0x10b8>
  41f294:	ldur	x8, [x29, #-8]
  41f298:	ldr	x0, [x8, #24]
  41f29c:	bl	402b40 <free@plt>
  41f2a0:	stur	xzr, [x29, #-16]
  41f2a4:	ldur	x8, [x29, #-16]
  41f2a8:	ldur	x9, [x29, #-8]
  41f2ac:	ldr	x9, [x9, #16]
  41f2b0:	cmp	x8, x9
  41f2b4:	b.cs	41f34c <_obstack_memory_used@@Base+0x11b0>  // b.hs, b.nlast
  41f2b8:	ldur	x8, [x29, #-8]
  41f2bc:	ldr	x8, [x8, #48]
  41f2c0:	cbz	x8, 41f2e4 <_obstack_memory_used@@Base+0x1148>
  41f2c4:	ldur	x8, [x29, #-8]
  41f2c8:	ldr	x8, [x8, #48]
  41f2cc:	ldur	x9, [x29, #-16]
  41f2d0:	mov	x10, #0x18                  	// #24
  41f2d4:	mul	x9, x10, x9
  41f2d8:	add	x8, x8, x9
  41f2dc:	ldr	x0, [x8, #16]
  41f2e0:	bl	402b40 <free@plt>
  41f2e4:	ldur	x8, [x29, #-8]
  41f2e8:	ldr	x8, [x8, #56]
  41f2ec:	cbz	x8, 41f310 <_obstack_memory_used@@Base+0x1174>
  41f2f0:	ldur	x8, [x29, #-8]
  41f2f4:	ldr	x8, [x8, #56]
  41f2f8:	ldur	x9, [x29, #-16]
  41f2fc:	mov	x10, #0x18                  	// #24
  41f300:	mul	x9, x10, x9
  41f304:	add	x8, x8, x9
  41f308:	ldr	x0, [x8, #16]
  41f30c:	bl	402b40 <free@plt>
  41f310:	ldur	x8, [x29, #-8]
  41f314:	ldr	x8, [x8, #40]
  41f318:	cbz	x8, 41f33c <_obstack_memory_used@@Base+0x11a0>
  41f31c:	ldur	x8, [x29, #-8]
  41f320:	ldr	x8, [x8, #40]
  41f324:	ldur	x9, [x29, #-16]
  41f328:	mov	x10, #0x18                  	// #24
  41f32c:	mul	x9, x10, x9
  41f330:	add	x8, x8, x9
  41f334:	ldr	x0, [x8, #16]
  41f338:	bl	402b40 <free@plt>
  41f33c:	ldur	x8, [x29, #-16]
  41f340:	add	x8, x8, #0x1
  41f344:	stur	x8, [x29, #-16]
  41f348:	b	41f2a4 <_obstack_memory_used@@Base+0x1108>
  41f34c:	ldur	x8, [x29, #-8]
  41f350:	ldr	x0, [x8, #40]
  41f354:	bl	402b40 <free@plt>
  41f358:	ldur	x8, [x29, #-8]
  41f35c:	ldr	x0, [x8, #48]
  41f360:	bl	402b40 <free@plt>
  41f364:	ldur	x8, [x29, #-8]
  41f368:	ldr	x0, [x8, #56]
  41f36c:	bl	402b40 <free@plt>
  41f370:	ldur	x8, [x29, #-8]
  41f374:	ldr	x0, [x8]
  41f378:	bl	402b40 <free@plt>
  41f37c:	ldur	x8, [x29, #-8]
  41f380:	ldr	x8, [x8, #64]
  41f384:	cbz	x8, 41f428 <_obstack_memory_used@@Base+0x128c>
  41f388:	stur	xzr, [x29, #-16]
  41f38c:	ldur	x8, [x29, #-16]
  41f390:	ldur	x9, [x29, #-8]
  41f394:	ldr	x9, [x9, #136]
  41f398:	cmp	x8, x9
  41f39c:	b.hi	41f428 <_obstack_memory_used@@Base+0x128c>  // b.pmore
  41f3a0:	ldur	x8, [x29, #-8]
  41f3a4:	ldr	x8, [x8, #64]
  41f3a8:	ldur	x9, [x29, #-16]
  41f3ac:	mov	x10, #0x18                  	// #24
  41f3b0:	mul	x9, x10, x9
  41f3b4:	add	x8, x8, x9
  41f3b8:	str	x8, [sp, #16]
  41f3bc:	str	xzr, [sp, #24]
  41f3c0:	ldr	x8, [sp, #24]
  41f3c4:	ldr	x9, [sp, #16]
  41f3c8:	ldr	x9, [x9]
  41f3cc:	cmp	x8, x9
  41f3d0:	b.ge	41f40c <_obstack_memory_used@@Base+0x1270>  // b.tcont
  41f3d4:	ldr	x8, [sp, #16]
  41f3d8:	ldr	x8, [x8, #16]
  41f3dc:	ldr	x9, [sp, #24]
  41f3e0:	mov	x10, #0x8                   	// #8
  41f3e4:	mul	x9, x10, x9
  41f3e8:	add	x8, x8, x9
  41f3ec:	ldr	x8, [x8]
  41f3f0:	str	x8, [sp, #8]
  41f3f4:	ldr	x0, [sp, #8]
  41f3f8:	bl	420de4 <_obstack_memory_used@@Base+0x2c48>
  41f3fc:	ldr	x8, [sp, #24]
  41f400:	add	x8, x8, #0x1
  41f404:	str	x8, [sp, #24]
  41f408:	b	41f3c0 <_obstack_memory_used@@Base+0x1224>
  41f40c:	ldr	x8, [sp, #16]
  41f410:	ldr	x0, [x8, #16]
  41f414:	bl	402b40 <free@plt>
  41f418:	ldur	x8, [x29, #-16]
  41f41c:	add	x8, x8, #0x1
  41f420:	stur	x8, [x29, #-16]
  41f424:	b	41f38c <_obstack_memory_used@@Base+0x11f0>
  41f428:	ldur	x8, [x29, #-8]
  41f42c:	ldr	x0, [x8, #64]
  41f430:	bl	402b40 <free@plt>
  41f434:	ldur	x8, [x29, #-8]
  41f438:	ldr	x8, [x8, #120]
  41f43c:	adrp	x9, 43a000 <_obstack_memory_used@@Base+0x1be64>
  41f440:	add	x9, x9, #0x100
  41f444:	cmp	x8, x9
  41f448:	b.eq	41f458 <_obstack_memory_used@@Base+0x12bc>  // b.none
  41f44c:	ldur	x8, [x29, #-8]
  41f450:	ldr	x0, [x8, #120]
  41f454:	bl	402b40 <free@plt>
  41f458:	ldur	x8, [x29, #-8]
  41f45c:	ldr	x0, [x8, #224]
  41f460:	bl	402b40 <free@plt>
  41f464:	ldur	x0, [x29, #-8]
  41f468:	bl	402b40 <free@plt>
  41f46c:	ldp	x29, x30, [sp, #48]
  41f470:	add	sp, sp, #0x40
  41f474:	ret
  41f478:	sub	sp, sp, #0x60
  41f47c:	stp	x29, x30, [sp, #80]
  41f480:	add	x29, sp, #0x50
  41f484:	stur	x0, [x29, #-16]
  41f488:	stur	x1, [x29, #-24]
  41f48c:	stur	x2, [x29, #-32]
  41f490:	str	x3, [sp, #40]
  41f494:	str	w4, [sp, #36]
  41f498:	ldur	x8, [x29, #-16]
  41f49c:	ldr	x8, [x8]
  41f4a0:	str	x8, [sp, #8]
  41f4a4:	ldr	w9, [sp, #36]
  41f4a8:	and	w9, w9, #0xfffffff8
  41f4ac:	cbz	w9, 41f4bc <_obstack_memory_used@@Base+0x1320>
  41f4b0:	mov	w8, #0x2                   	// #2
  41f4b4:	stur	w8, [x29, #-4]
  41f4b8:	b	41f594 <_obstack_memory_used@@Base+0x13f8>
  41f4bc:	ldr	w8, [sp, #36]
  41f4c0:	and	w8, w8, #0x4
  41f4c4:	cbz	w8, 41f4e4 <_obstack_memory_used@@Base+0x1348>
  41f4c8:	ldr	x8, [sp, #40]
  41f4cc:	ldr	x8, [x8]
  41f4d0:	str	x8, [sp, #24]
  41f4d4:	ldr	x8, [sp, #40]
  41f4d8:	ldr	x8, [x8, #8]
  41f4dc:	str	x8, [sp, #16]
  41f4e0:	b	41f4f4 <_obstack_memory_used@@Base+0x1358>
  41f4e4:	str	xzr, [sp, #24]
  41f4e8:	ldur	x0, [x29, #-24]
  41f4ec:	bl	4026f0 <strlen@plt>
  41f4f0:	str	x0, [sp, #16]
  41f4f4:	ldur	x8, [x29, #-16]
  41f4f8:	ldrb	w9, [x8, #56]
  41f4fc:	mov	w10, #0x4                   	// #4
  41f500:	lsr	w9, w9, w10
  41f504:	and	w9, w9, #0x1
  41f508:	and	w9, w9, #0xff
  41f50c:	cbz	w9, 41f54c <_obstack_memory_used@@Base+0x13b0>
  41f510:	ldur	x0, [x29, #-16]
  41f514:	ldur	x1, [x29, #-24]
  41f518:	ldr	x2, [sp, #16]
  41f51c:	ldr	x3, [sp, #24]
  41f520:	ldr	x4, [sp, #16]
  41f524:	ldr	x5, [sp, #16]
  41f528:	ldr	w8, [sp, #36]
  41f52c:	mov	x9, xzr
  41f530:	mov	x6, x9
  41f534:	mov	x7, x9
  41f538:	mov	x9, sp
  41f53c:	str	w8, [x9]
  41f540:	bl	41f5a4 <_obstack_memory_used@@Base+0x1408>
  41f544:	str	w0, [sp, #32]
  41f548:	b	41f580 <_obstack_memory_used@@Base+0x13e4>
  41f54c:	ldur	x0, [x29, #-16]
  41f550:	ldur	x1, [x29, #-24]
  41f554:	ldr	x2, [sp, #16]
  41f558:	ldr	x3, [sp, #24]
  41f55c:	ldr	x4, [sp, #16]
  41f560:	ldr	x5, [sp, #16]
  41f564:	ldur	x6, [x29, #-32]
  41f568:	ldr	x7, [sp, #40]
  41f56c:	ldr	w8, [sp, #36]
  41f570:	mov	x9, sp
  41f574:	str	w8, [x9]
  41f578:	bl	41f5a4 <_obstack_memory_used@@Base+0x1408>
  41f57c:	str	w0, [sp, #32]
  41f580:	ldr	w8, [sp, #32]
  41f584:	cmp	w8, #0x0
  41f588:	cset	w8, ne  // ne = any
  41f58c:	and	w8, w8, #0x1
  41f590:	stur	w8, [x29, #-4]
  41f594:	ldur	w0, [x29, #-4]
  41f598:	ldp	x29, x30, [sp, #80]
  41f59c:	add	sp, sp, #0x60
  41f5a0:	ret
  41f5a4:	stp	x29, x30, [sp, #-32]!
  41f5a8:	str	x28, [sp, #16]
  41f5ac:	mov	x29, sp
  41f5b0:	sub	sp, sp, #0x280
  41f5b4:	ldr	w8, [x29, #32]
  41f5b8:	mov	x9, #0xffffffffffffffff    	// #-1
  41f5bc:	mov	x10, #0x100                 	// #256
  41f5c0:	mov	w11, wzr
  41f5c4:	add	x12, sp, #0xe8
  41f5c8:	stur	x0, [x29, #-16]
  41f5cc:	stur	x1, [x29, #-24]
  41f5d0:	stur	x2, [x29, #-32]
  41f5d4:	stur	x3, [x29, #-40]
  41f5d8:	stur	x4, [x29, #-48]
  41f5dc:	stur	x5, [x29, #-56]
  41f5e0:	stur	x6, [x29, #-64]
  41f5e4:	stur	x7, [x29, #-72]
  41f5e8:	stur	w8, [x29, #-76]
  41f5ec:	ldur	x13, [x29, #-16]
  41f5f0:	ldr	x13, [x13]
  41f5f4:	stur	x13, [x29, #-88]
  41f5f8:	stur	x9, [x29, #-136]
  41f5fc:	mov	x0, x12
  41f600:	mov	w1, w11
  41f604:	mov	x2, x10
  41f608:	str	x12, [sp, #184]
  41f60c:	bl	402960 <memset@plt>
  41f610:	ldur	x9, [x29, #-88]
  41f614:	ldr	x10, [sp, #184]
  41f618:	str	x9, [x10, #152]
  41f61c:	ldur	x9, [x29, #-16]
  41f620:	ldr	x9, [x9, #32]
  41f624:	cbz	x9, 41f678 <_obstack_memory_used@@Base+0x14dc>
  41f628:	ldur	x8, [x29, #-16]
  41f62c:	ldrb	w9, [x8, #56]
  41f630:	mov	w10, #0x3                   	// #3
  41f634:	lsr	w9, w9, w10
  41f638:	and	w9, w9, #0x1
  41f63c:	and	w9, w9, #0xff
  41f640:	cbz	w9, 41f678 <_obstack_memory_used@@Base+0x14dc>
  41f644:	ldur	x8, [x29, #-40]
  41f648:	ldur	x9, [x29, #-48]
  41f64c:	cmp	x8, x9
  41f650:	b.eq	41f678 <_obstack_memory_used@@Base+0x14dc>  // b.none
  41f654:	ldur	x8, [x29, #-16]
  41f658:	ldrb	w9, [x8, #56]
  41f65c:	and	w9, w9, #0x1
  41f660:	and	w9, w9, #0xff
  41f664:	cbnz	w9, 41f678 <_obstack_memory_used@@Base+0x14dc>
  41f668:	ldur	x8, [x29, #-16]
  41f66c:	ldr	x8, [x8, #32]
  41f670:	str	x8, [sp, #176]
  41f674:	b	41f680 <_obstack_memory_used@@Base+0x14e4>
  41f678:	mov	x8, xzr
  41f67c:	str	x8, [sp, #176]
  41f680:	ldr	x8, [sp, #176]
  41f684:	str	x8, [sp, #224]
  41f688:	ldur	x8, [x29, #-16]
  41f68c:	ldr	x8, [x8, #40]
  41f690:	str	x8, [sp, #216]
  41f694:	ldur	x8, [x29, #-64]
  41f698:	ldur	x9, [x29, #-16]
  41f69c:	ldr	x9, [x9, #48]
  41f6a0:	cmp	x8, x9
  41f6a4:	b.ls	41f6c4 <_obstack_memory_used@@Base+0x1528>  // b.plast
  41f6a8:	ldur	x8, [x29, #-64]
  41f6ac:	ldur	x9, [x29, #-16]
  41f6b0:	ldr	x9, [x9, #48]
  41f6b4:	add	x9, x9, #0x1
  41f6b8:	subs	x8, x8, x9
  41f6bc:	str	x8, [sp, #168]
  41f6c0:	b	41f6cc <_obstack_memory_used@@Base+0x1530>
  41f6c4:	mov	x8, xzr
  41f6c8:	str	x8, [sp, #168]
  41f6cc:	ldr	x8, [sp, #168]
  41f6d0:	stur	x8, [x29, #-144]
  41f6d4:	ldur	x8, [x29, #-144]
  41f6d8:	ldur	x9, [x29, #-64]
  41f6dc:	subs	x8, x9, x8
  41f6e0:	stur	x8, [x29, #-64]
  41f6e4:	ldur	x8, [x29, #-16]
  41f6e8:	ldr	x8, [x8, #16]
  41f6ec:	mov	w10, #0x1                   	// #1
  41f6f0:	str	w10, [sp, #164]
  41f6f4:	cbz	x8, 41f748 <_obstack_memory_used@@Base+0x15ac>
  41f6f8:	ldur	x8, [x29, #-88]
  41f6fc:	ldr	x8, [x8, #72]
  41f700:	mov	w9, #0x1                   	// #1
  41f704:	str	w9, [sp, #164]
  41f708:	cbz	x8, 41f748 <_obstack_memory_used@@Base+0x15ac>
  41f70c:	ldur	x8, [x29, #-88]
  41f710:	ldr	x8, [x8, #80]
  41f714:	mov	w9, #0x1                   	// #1
  41f718:	str	w9, [sp, #164]
  41f71c:	cbz	x8, 41f748 <_obstack_memory_used@@Base+0x15ac>
  41f720:	ldur	x8, [x29, #-88]
  41f724:	ldr	x8, [x8, #88]
  41f728:	mov	w9, #0x1                   	// #1
  41f72c:	str	w9, [sp, #164]
  41f730:	cbz	x8, 41f748 <_obstack_memory_used@@Base+0x15ac>
  41f734:	ldur	x8, [x29, #-88]
  41f738:	ldr	x8, [x8, #96]
  41f73c:	cmp	x8, #0x0
  41f740:	cset	w9, eq  // eq = none
  41f744:	str	w9, [sp, #164]
  41f748:	ldr	w8, [sp, #164]
  41f74c:	and	w8, w8, #0x1
  41f750:	mov	w0, w8
  41f754:	sxtw	x9, w0
  41f758:	cbz	x9, 41f768 <_obstack_memory_used@@Base+0x15cc>
  41f75c:	mov	w8, #0x1                   	// #1
  41f760:	stur	w8, [x29, #-4]
  41f764:	b	4204c4 <_obstack_memory_used@@Base+0x2328>
  41f768:	ldur	x8, [x29, #-48]
  41f76c:	mov	x9, xzr
  41f770:	cmp	x9, x8
  41f774:	cset	w10, gt
  41f778:	tbnz	w10, #0, 41f790 <_obstack_memory_used@@Base+0x15f4>
  41f77c:	ldur	x8, [x29, #-48]
  41f780:	ldur	x9, [x29, #-32]
  41f784:	cmp	x8, x9
  41f788:	b.gt	41f790 <_obstack_memory_used@@Base+0x15f4>
  41f78c:	b	41f790 <_obstack_memory_used@@Base+0x15f4>
  41f790:	ldur	x8, [x29, #-88]
  41f794:	ldr	x8, [x8, #72]
  41f798:	ldr	x8, [x8, #16]
  41f79c:	cbnz	x8, 41f7fc <_obstack_memory_used@@Base+0x1660>
  41f7a0:	ldur	x8, [x29, #-88]
  41f7a4:	ldr	x8, [x8, #80]
  41f7a8:	ldr	x8, [x8, #16]
  41f7ac:	cbnz	x8, 41f7fc <_obstack_memory_used@@Base+0x1660>
  41f7b0:	ldur	x8, [x29, #-88]
  41f7b4:	ldr	x8, [x8, #88]
  41f7b8:	ldr	x8, [x8, #16]
  41f7bc:	cbz	x8, 41f7d8 <_obstack_memory_used@@Base+0x163c>
  41f7c0:	ldur	x8, [x29, #-16]
  41f7c4:	ldrb	w9, [x8, #56]
  41f7c8:	mov	w10, #0x7                   	// #7
  41f7cc:	lsr	w9, w9, w10
  41f7d0:	and	w9, w9, #0xff
  41f7d4:	cbnz	w9, 41f7fc <_obstack_memory_used@@Base+0x1660>
  41f7d8:	ldur	x8, [x29, #-40]
  41f7dc:	cbz	x8, 41f7f4 <_obstack_memory_used@@Base+0x1658>
  41f7e0:	ldur	x8, [x29, #-48]
  41f7e4:	cbz	x8, 41f7f4 <_obstack_memory_used@@Base+0x1658>
  41f7e8:	mov	w8, #0x1                   	// #1
  41f7ec:	stur	w8, [x29, #-4]
  41f7f0:	b	4204c4 <_obstack_memory_used@@Base+0x2328>
  41f7f4:	stur	xzr, [x29, #-48]
  41f7f8:	stur	xzr, [x29, #-40]
  41f7fc:	ldur	x8, [x29, #-64]
  41f800:	mov	w9, #0x1                   	// #1
  41f804:	str	w9, [sp, #160]
  41f808:	cbnz	x8, 41f820 <_obstack_memory_used@@Base+0x1684>
  41f80c:	ldur	x8, [x29, #-88]
  41f810:	ldr	x8, [x8, #152]
  41f814:	cmp	x8, #0x0
  41f818:	cset	w9, ne  // ne = any
  41f81c:	str	w9, [sp, #160]
  41f820:	ldr	w8, [sp, #160]
  41f824:	mov	w9, #0x1                   	// #1
  41f828:	and	w8, w8, w9
  41f82c:	sturb	w8, [x29, #-109]
  41f830:	ldur	x1, [x29, #-24]
  41f834:	ldur	x2, [x29, #-32]
  41f838:	ldur	x10, [x29, #-88]
  41f83c:	ldr	x10, [x10, #16]
  41f840:	add	x3, x10, #0x1
  41f844:	ldur	x10, [x29, #-16]
  41f848:	ldr	x4, [x10, #40]
  41f84c:	ldur	x10, [x29, #-16]
  41f850:	ldr	x10, [x10, #24]
  41f854:	tst	x10, #0x400000
  41f858:	cset	w8, ne  // ne = any
  41f85c:	ldur	x6, [x29, #-88]
  41f860:	add	x0, sp, #0xe8
  41f864:	and	w5, w8, #0x1
  41f868:	bl	42bbfc <_obstack_memory_used@@Base+0xda60>
  41f86c:	stur	w0, [x29, #-80]
  41f870:	ldur	w8, [x29, #-80]
  41f874:	cmp	w8, #0x0
  41f878:	cset	w8, ne  // ne = any
  41f87c:	and	w8, w8, #0x1
  41f880:	mov	w1, w8
  41f884:	sxtw	x10, w1
  41f888:	cbz	x10, 41f890 <_obstack_memory_used@@Base+0x16f4>
  41f88c:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41f890:	ldur	x8, [x29, #-56]
  41f894:	add	x9, sp, #0xe8
  41f898:	str	x8, [sp, #336]
  41f89c:	ldur	x8, [x29, #-56]
  41f8a0:	str	x8, [sp, #328]
  41f8a4:	ldur	x8, [x29, #-16]
  41f8a8:	ldrb	w10, [x8, #56]
  41f8ac:	mov	w11, #0x7                   	// #7
  41f8b0:	lsr	w10, w10, w11
  41f8b4:	and	w10, w10, #0xff
  41f8b8:	strb	w10, [x9, #141]
  41f8bc:	ldur	w1, [x29, #-76]
  41f8c0:	ldur	x8, [x29, #-88]
  41f8c4:	ldr	x8, [x8, #152]
  41f8c8:	mov	x12, #0x2                   	// #2
  41f8cc:	mul	x2, x8, x12
  41f8d0:	mov	x0, x9
  41f8d4:	bl	42bd98 <_obstack_memory_used@@Base+0xdbfc>
  41f8d8:	stur	w0, [x29, #-80]
  41f8dc:	ldur	w10, [x29, #-80]
  41f8e0:	cmp	w10, #0x0
  41f8e4:	cset	w10, ne  // ne = any
  41f8e8:	and	w10, w10, #0x1
  41f8ec:	mov	w2, w10
  41f8f0:	sxtw	x8, w2
  41f8f4:	cbz	x8, 41f8fc <_obstack_memory_used@@Base+0x1760>
  41f8f8:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41f8fc:	ldur	x8, [x29, #-64]
  41f900:	cmp	x8, #0x1
  41f904:	b.hi	41f924 <_obstack_memory_used@@Base+0x1788>  // b.pmore
  41f908:	ldur	x8, [x29, #-88]
  41f90c:	ldrb	w9, [x8, #176]
  41f910:	mov	w10, #0x1                   	// #1
  41f914:	lsr	w9, w9, w10
  41f918:	and	w9, w9, w10
  41f91c:	and	w9, w9, #0xff
  41f920:	cbz	w9, 41f99c <_obstack_memory_used@@Base+0x1800>
  41f924:	ldr	x8, [sp, #296]
  41f928:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  41f92c:	cmp	x9, x8
  41f930:	cset	w10, ls  // ls = plast
  41f934:	and	w10, w10, #0x1
  41f938:	mov	w0, w10
  41f93c:	sxtw	x8, w0
  41f940:	cbz	x8, 41f950 <_obstack_memory_used@@Base+0x17b4>
  41f944:	mov	w8, #0xc                   	// #12
  41f948:	stur	w8, [x29, #-80]
  41f94c:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41f950:	add	x8, sp, #0xe8
  41f954:	ldr	x9, [sp, #296]
  41f958:	add	x9, x9, #0x1
  41f95c:	mov	x10, #0x8                   	// #8
  41f960:	mul	x0, x9, x10
  41f964:	str	x8, [sp, #152]
  41f968:	bl	402890 <malloc@plt>
  41f96c:	ldr	x8, [sp, #152]
  41f970:	str	x0, [x8, #184]
  41f974:	ldr	x9, [x8, #184]
  41f978:	cmp	x9, #0x0
  41f97c:	cset	w11, eq  // eq = none
  41f980:	and	w11, w11, #0x1
  41f984:	mov	w0, w11
  41f988:	sxtw	x9, w0
  41f98c:	cbz	x9, 41f99c <_obstack_memory_used@@Base+0x1800>
  41f990:	mov	w8, #0xc                   	// #12
  41f994:	stur	w8, [x29, #-80]
  41f998:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41f99c:	ldur	x8, [x29, #-40]
  41f9a0:	stur	x8, [x29, #-128]
  41f9a4:	ldur	w9, [x29, #-76]
  41f9a8:	mov	w10, #0x1                   	// #1
  41f9ac:	mov	w11, #0x6                   	// #6
  41f9b0:	mov	w12, #0x4                   	// #4
  41f9b4:	tst	w9, #0x1
  41f9b8:	csel	w9, w12, w11, ne  // ne = any
  41f9bc:	str	w9, [sp, #344]
  41f9c0:	ldur	x8, [x29, #-48]
  41f9c4:	ldur	x13, [x29, #-40]
  41f9c8:	mov	w9, #0xffffffff            	// #-1
  41f9cc:	cmp	x8, x13
  41f9d0:	csel	w9, w9, w10, lt  // lt = tstop
  41f9d4:	stur	w9, [x29, #-108]
  41f9d8:	ldur	x8, [x29, #-48]
  41f9dc:	ldur	x13, [x29, #-40]
  41f9e0:	cmp	x8, x13
  41f9e4:	b.ge	41f9f4 <_obstack_memory_used@@Base+0x1858>  // b.tcont
  41f9e8:	ldur	x8, [x29, #-48]
  41f9ec:	str	x8, [sp, #144]
  41f9f0:	b	41f9fc <_obstack_memory_used@@Base+0x1860>
  41f9f4:	ldur	x8, [x29, #-40]
  41f9f8:	str	x8, [sp, #144]
  41f9fc:	ldr	x8, [sp, #144]
  41fa00:	stur	x8, [x29, #-96]
  41fa04:	ldur	x8, [x29, #-48]
  41fa08:	ldur	x9, [x29, #-40]
  41fa0c:	cmp	x8, x9
  41fa10:	b.ge	41fa20 <_obstack_memory_used@@Base+0x1884>  // b.tcont
  41fa14:	ldur	x8, [x29, #-40]
  41fa18:	str	x8, [sp, #136]
  41fa1c:	b	41fa28 <_obstack_memory_used@@Base+0x188c>
  41fa20:	ldur	x8, [x29, #-48]
  41fa24:	str	x8, [sp, #136]
  41fa28:	ldr	x8, [sp, #136]
  41fa2c:	stur	x8, [x29, #-104]
  41fa30:	ldur	x8, [x29, #-88]
  41fa34:	ldr	w9, [x8, #180]
  41fa38:	cmp	w9, #0x1
  41fa3c:	cset	w9, eq  // eq = none
  41fa40:	and	w9, w9, #0x1
  41fa44:	sturb	w9, [x29, #-145]
  41fa48:	ldr	x8, [sp, #224]
  41fa4c:	cbz	x8, 41fadc <_obstack_memory_used@@Base+0x1940>
  41fa50:	ldurb	w8, [x29, #-145]
  41fa54:	mov	w9, #0x1                   	// #1
  41fa58:	str	w9, [sp, #132]
  41fa5c:	tbnz	w8, #0, 41fa94 <_obstack_memory_used@@Base+0x18f8>
  41fa60:	ldur	x8, [x29, #-16]
  41fa64:	ldr	x8, [x8, #24]
  41fa68:	and	x8, x8, #0x400000
  41fa6c:	mov	w9, #0x1                   	// #1
  41fa70:	str	w9, [sp, #128]
  41fa74:	cbnz	x8, 41fa88 <_obstack_memory_used@@Base+0x18ec>
  41fa78:	ldr	x8, [sp, #216]
  41fa7c:	cmp	x8, #0x0
  41fa80:	cset	w9, ne  // ne = any
  41fa84:	str	w9, [sp, #128]
  41fa88:	ldr	w8, [sp, #128]
  41fa8c:	eor	w8, w8, #0x1
  41fa90:	str	w8, [sp, #132]
  41fa94:	ldr	w8, [sp, #132]
  41fa98:	mov	w9, #0x4                   	// #4
  41fa9c:	mov	w10, wzr
  41faa0:	tst	w8, #0x1
  41faa4:	csel	w8, w9, w10, ne  // ne = any
  41faa8:	ldur	x11, [x29, #-40]
  41faac:	ldur	x12, [x29, #-48]
  41fab0:	mov	w9, #0x2                   	// #2
  41fab4:	cmp	x11, x12
  41fab8:	csel	w9, w9, w10, le
  41fabc:	orr	w8, w8, w9
  41fac0:	ldr	x11, [sp, #216]
  41fac4:	mov	w9, #0x1                   	// #1
  41fac8:	cmp	x11, #0x0
  41facc:	csel	w9, w9, w10, ne  // ne = any
  41fad0:	orr	w8, w8, w9
  41fad4:	str	w8, [sp, #124]
  41fad8:	b	41fae4 <_obstack_memory_used@@Base+0x1948>
  41fadc:	mov	w8, #0x8                   	// #8
  41fae0:	str	w8, [sp, #124]
  41fae4:	ldr	w8, [sp, #124]
  41fae8:	stur	w8, [x29, #-116]
  41faec:	mov	w8, #0x1                   	// #1
  41faf0:	stur	w8, [x29, #-80]
  41faf4:	ldur	x9, [x29, #-128]
  41faf8:	ldur	x10, [x29, #-96]
  41fafc:	cmp	x9, x10
  41fb00:	b.lt	41fb14 <_obstack_memory_used@@Base+0x1978>  // b.tstop
  41fb04:	ldur	x8, [x29, #-104]
  41fb08:	ldur	x9, [x29, #-128]
  41fb0c:	cmp	x8, x9
  41fb10:	b.ge	41fb18 <_obstack_memory_used@@Base+0x197c>  // b.tcont
  41fb14:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41fb18:	ldur	w8, [x29, #-116]
  41fb1c:	subs	w8, w8, #0x4
  41fb20:	mov	w9, w8
  41fb24:	ubfx	x9, x9, #0, #32
  41fb28:	cmp	x9, #0x4
  41fb2c:	str	x9, [sp, #112]
  41fb30:	b.hi	41fd9c <_obstack_memory_used@@Base+0x1c00>  // b.pmore
  41fb34:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  41fb38:	add	x8, x8, #0xa88
  41fb3c:	ldr	x11, [sp, #112]
  41fb40:	ldrsw	x10, [x8, x11, lsl #2]
  41fb44:	add	x9, x8, x10
  41fb48:	br	x9
  41fb4c:	b	41fea0 <_obstack_memory_used@@Base+0x1d04>
  41fb50:	ldur	x8, [x29, #-128]
  41fb54:	ldur	x9, [x29, #-104]
  41fb58:	cmp	x8, x9
  41fb5c:	cset	w10, lt  // lt = tstop
  41fb60:	and	w10, w10, #0x1
  41fb64:	mov	w0, w10
  41fb68:	sxtw	x8, w0
  41fb6c:	mov	w10, #0x0                   	// #0
  41fb70:	str	w10, [sp, #108]
  41fb74:	cbz	x8, 41fbb0 <_obstack_memory_used@@Base+0x1a14>
  41fb78:	ldr	x8, [sp, #224]
  41fb7c:	ldr	x9, [sp, #216]
  41fb80:	ldur	x10, [x29, #-24]
  41fb84:	ldur	x11, [x29, #-128]
  41fb88:	ldrb	w12, [x10, x11]
  41fb8c:	mov	w10, w12
  41fb90:	ldrb	w12, [x9, x10]
  41fb94:	mov	w9, w12
  41fb98:	add	x8, x8, x9
  41fb9c:	ldrb	w12, [x8]
  41fba0:	cmp	w12, #0x0
  41fba4:	cset	w12, ne  // ne = any
  41fba8:	eor	w12, w12, #0x1
  41fbac:	str	w12, [sp, #108]
  41fbb0:	ldr	w8, [sp, #108]
  41fbb4:	tbnz	w8, #0, 41fbbc <_obstack_memory_used@@Base+0x1a20>
  41fbb8:	b	41fbcc <_obstack_memory_used@@Base+0x1a30>
  41fbbc:	ldur	x8, [x29, #-128]
  41fbc0:	add	x8, x8, #0x1
  41fbc4:	stur	x8, [x29, #-128]
  41fbc8:	b	41fb50 <_obstack_memory_used@@Base+0x19b4>
  41fbcc:	b	41fc40 <_obstack_memory_used@@Base+0x1aa4>
  41fbd0:	ldur	x8, [x29, #-128]
  41fbd4:	ldur	x9, [x29, #-104]
  41fbd8:	cmp	x8, x9
  41fbdc:	cset	w10, lt  // lt = tstop
  41fbe0:	and	w10, w10, #0x1
  41fbe4:	mov	w0, w10
  41fbe8:	sxtw	x8, w0
  41fbec:	mov	w10, #0x0                   	// #0
  41fbf0:	str	w10, [sp, #104]
  41fbf4:	cbz	x8, 41fc24 <_obstack_memory_used@@Base+0x1a88>
  41fbf8:	ldr	x8, [sp, #224]
  41fbfc:	ldur	x9, [x29, #-24]
  41fc00:	ldur	x10, [x29, #-128]
  41fc04:	ldrb	w11, [x9, x10]
  41fc08:	mov	w9, w11
  41fc0c:	add	x8, x8, x9
  41fc10:	ldrb	w11, [x8]
  41fc14:	cmp	w11, #0x0
  41fc18:	cset	w11, ne  // ne = any
  41fc1c:	eor	w11, w11, #0x1
  41fc20:	str	w11, [sp, #104]
  41fc24:	ldr	w8, [sp, #104]
  41fc28:	tbnz	w8, #0, 41fc30 <_obstack_memory_used@@Base+0x1a94>
  41fc2c:	b	41fc40 <_obstack_memory_used@@Base+0x1aa4>
  41fc30:	ldur	x8, [x29, #-128]
  41fc34:	add	x8, x8, #0x1
  41fc38:	stur	x8, [x29, #-128]
  41fc3c:	b	41fbd0 <_obstack_memory_used@@Base+0x1a34>
  41fc40:	ldur	x8, [x29, #-128]
  41fc44:	ldur	x9, [x29, #-104]
  41fc48:	cmp	x8, x9
  41fc4c:	cset	w10, eq  // eq = none
  41fc50:	and	w10, w10, #0x1
  41fc54:	mov	w0, w10
  41fc58:	sxtw	x8, w0
  41fc5c:	cbz	x8, 41fce0 <_obstack_memory_used@@Base+0x1b44>
  41fc60:	ldur	x8, [x29, #-128]
  41fc64:	ldur	x9, [x29, #-32]
  41fc68:	cmp	x8, x9
  41fc6c:	b.lt	41fc7c <_obstack_memory_used@@Base+0x1ae0>  // b.tstop
  41fc70:	mov	w8, wzr
  41fc74:	str	w8, [sp, #100]
  41fc78:	b	41fc8c <_obstack_memory_used@@Base+0x1af0>
  41fc7c:	ldur	x8, [x29, #-24]
  41fc80:	ldur	x9, [x29, #-128]
  41fc84:	ldrb	w10, [x8, x9]
  41fc88:	str	w10, [sp, #100]
  41fc8c:	ldr	w8, [sp, #100]
  41fc90:	stur	w8, [x29, #-152]
  41fc94:	ldr	x9, [sp, #224]
  41fc98:	ldr	x10, [sp, #216]
  41fc9c:	str	x9, [sp, #88]
  41fca0:	cbz	x10, 41fcb8 <_obstack_memory_used@@Base+0x1b1c>
  41fca4:	ldr	x8, [sp, #216]
  41fca8:	ldursw	x9, [x29, #-152]
  41fcac:	ldrb	w10, [x8, x9]
  41fcb0:	str	w10, [sp, #84]
  41fcb4:	b	41fcc0 <_obstack_memory_used@@Base+0x1b24>
  41fcb8:	ldur	w8, [x29, #-152]
  41fcbc:	str	w8, [sp, #84]
  41fcc0:	ldr	w8, [sp, #84]
  41fcc4:	mov	w0, w8
  41fcc8:	sxtw	x9, w0
  41fccc:	ldr	x10, [sp, #88]
  41fcd0:	add	x9, x10, x9
  41fcd4:	ldrb	w8, [x9]
  41fcd8:	cbnz	w8, 41fce0 <_obstack_memory_used@@Base+0x1b44>
  41fcdc:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41fce0:	b	41fea0 <_obstack_memory_used@@Base+0x1d04>
  41fce4:	ldur	x8, [x29, #-128]
  41fce8:	ldur	x9, [x29, #-96]
  41fcec:	cmp	x8, x9
  41fcf0:	b.lt	41fd84 <_obstack_memory_used@@Base+0x1be8>  // b.tstop
  41fcf4:	ldur	x8, [x29, #-128]
  41fcf8:	ldur	x9, [x29, #-32]
  41fcfc:	cmp	x8, x9
  41fd00:	b.lt	41fd10 <_obstack_memory_used@@Base+0x1b74>  // b.tstop
  41fd04:	mov	w8, wzr
  41fd08:	str	w8, [sp, #80]
  41fd0c:	b	41fd20 <_obstack_memory_used@@Base+0x1b84>
  41fd10:	ldur	x8, [x29, #-24]
  41fd14:	ldur	x9, [x29, #-128]
  41fd18:	ldrb	w10, [x8, x9]
  41fd1c:	str	w10, [sp, #80]
  41fd20:	ldr	w8, [sp, #80]
  41fd24:	stur	w8, [x29, #-152]
  41fd28:	ldr	x9, [sp, #224]
  41fd2c:	ldr	x10, [sp, #216]
  41fd30:	str	x9, [sp, #72]
  41fd34:	cbz	x10, 41fd4c <_obstack_memory_used@@Base+0x1bb0>
  41fd38:	ldr	x8, [sp, #216]
  41fd3c:	ldursw	x9, [x29, #-152]
  41fd40:	ldrb	w10, [x8, x9]
  41fd44:	str	w10, [sp, #68]
  41fd48:	b	41fd54 <_obstack_memory_used@@Base+0x1bb8>
  41fd4c:	ldur	w8, [x29, #-152]
  41fd50:	str	w8, [sp, #68]
  41fd54:	ldr	w8, [sp, #68]
  41fd58:	mov	w0, w8
  41fd5c:	sxtw	x9, w0
  41fd60:	ldr	x10, [sp, #72]
  41fd64:	add	x9, x10, x9
  41fd68:	ldrb	w8, [x9]
  41fd6c:	cbz	w8, 41fd74 <_obstack_memory_used@@Base+0x1bd8>
  41fd70:	b	41fd84 <_obstack_memory_used@@Base+0x1be8>
  41fd74:	ldur	x8, [x29, #-128]
  41fd78:	subs	x8, x8, #0x1
  41fd7c:	stur	x8, [x29, #-128]
  41fd80:	b	41fce4 <_obstack_memory_used@@Base+0x1b48>
  41fd84:	ldur	x8, [x29, #-128]
  41fd88:	ldur	x9, [x29, #-96]
  41fd8c:	cmp	x8, x9
  41fd90:	b.ge	41fd98 <_obstack_memory_used@@Base+0x1bfc>  // b.tcont
  41fd94:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41fd98:	b	41fea0 <_obstack_memory_used@@Base+0x1d04>
  41fd9c:	ldur	x8, [x29, #-128]
  41fda0:	ldr	x9, [sp, #272]
  41fda4:	subs	x8, x8, x9
  41fda8:	str	x8, [sp, #208]
  41fdac:	ldr	x8, [sp, #208]
  41fdb0:	ldr	x9, [sp, #288]
  41fdb4:	cmp	x8, x9
  41fdb8:	cset	w10, cs  // cs = hs, nlast
  41fdbc:	and	w10, w10, #0x1
  41fdc0:	mov	w0, w10
  41fdc4:	sxtw	x8, w0
  41fdc8:	cbz	x8, 41fe10 <_obstack_memory_used@@Base+0x1c74>
  41fdcc:	ldur	x1, [x29, #-128]
  41fdd0:	ldur	w2, [x29, #-76]
  41fdd4:	add	x0, sp, #0xe8
  41fdd8:	bl	42bef0 <_obstack_memory_used@@Base+0xdd54>
  41fddc:	stur	w0, [x29, #-80]
  41fde0:	ldur	w8, [x29, #-80]
  41fde4:	cmp	w8, #0x0
  41fde8:	cset	w8, ne  // ne = any
  41fdec:	and	w8, w8, #0x1
  41fdf0:	mov	w1, w8
  41fdf4:	sxtw	x9, w1
  41fdf8:	cbz	x9, 41fe00 <_obstack_memory_used@@Base+0x1c64>
  41fdfc:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41fe00:	ldur	x8, [x29, #-128]
  41fe04:	ldr	x9, [sp, #272]
  41fe08:	subs	x8, x8, x9
  41fe0c:	str	x8, [sp, #208]
  41fe10:	ldur	x8, [x29, #-128]
  41fe14:	ldur	x9, [x29, #-32]
  41fe18:	cmp	x8, x9
  41fe1c:	b.lt	41fe2c <_obstack_memory_used@@Base+0x1c90>  // b.tstop
  41fe20:	mov	w8, wzr
  41fe24:	str	w8, [sp, #64]
  41fe28:	b	41fe40 <_obstack_memory_used@@Base+0x1ca4>
  41fe2c:	add	x8, sp, #0xe8
  41fe30:	ldr	x8, [x8, #8]
  41fe34:	ldr	x9, [sp, #208]
  41fe38:	ldrb	w10, [x8, x9]
  41fe3c:	str	w10, [sp, #64]
  41fe40:	ldr	w8, [sp, #64]
  41fe44:	stur	w8, [x29, #-152]
  41fe48:	ldr	x9, [sp, #224]
  41fe4c:	ldursw	x10, [x29, #-152]
  41fe50:	add	x9, x9, x10
  41fe54:	ldrb	w8, [x9]
  41fe58:	cbz	w8, 41fe60 <_obstack_memory_used@@Base+0x1cc4>
  41fe5c:	b	41fea0 <_obstack_memory_used@@Base+0x1d04>
  41fe60:	ldursw	x8, [x29, #-108]
  41fe64:	ldur	x9, [x29, #-128]
  41fe68:	add	x8, x9, x8
  41fe6c:	stur	x8, [x29, #-128]
  41fe70:	ldur	x8, [x29, #-128]
  41fe74:	ldur	x9, [x29, #-96]
  41fe78:	cmp	x8, x9
  41fe7c:	b.lt	41fe90 <_obstack_memory_used@@Base+0x1cf4>  // b.tstop
  41fe80:	ldur	x8, [x29, #-128]
  41fe84:	ldur	x9, [x29, #-104]
  41fe88:	cmp	x8, x9
  41fe8c:	b.le	41fe9c <_obstack_memory_used@@Base+0x1d00>
  41fe90:	mov	w8, #0x1                   	// #1
  41fe94:	stur	w8, [x29, #-80]
  41fe98:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41fe9c:	b	41fd9c <_obstack_memory_used@@Base+0x1c00>
  41fea0:	ldur	x1, [x29, #-128]
  41fea4:	ldur	w2, [x29, #-76]
  41fea8:	add	x0, sp, #0xe8
  41feac:	bl	42bef0 <_obstack_memory_used@@Base+0xdd54>
  41feb0:	stur	w0, [x29, #-80]
  41feb4:	ldur	w8, [x29, #-80]
  41feb8:	cmp	w8, #0x0
  41febc:	cset	w8, ne  // ne = any
  41fec0:	and	w8, w8, #0x1
  41fec4:	mov	w1, w8
  41fec8:	sxtw	x9, w1
  41fecc:	cbz	x9, 41fed4 <_obstack_memory_used@@Base+0x1d38>
  41fed0:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41fed4:	ldurb	w8, [x29, #-145]
  41fed8:	tbnz	w8, #0, 41ff00 <_obstack_memory_used@@Base+0x1d64>
  41fedc:	ldr	x8, [sp, #280]
  41fee0:	cbz	x8, 41ff00 <_obstack_memory_used@@Base+0x1d64>
  41fee4:	add	x8, sp, #0xe8
  41fee8:	ldr	x8, [x8, #16]
  41feec:	ldr	w9, [x8]
  41fef0:	mov	w10, #0xffffffff            	// #-1
  41fef4:	cmp	w9, w10
  41fef8:	b.ne	41ff00 <_obstack_memory_used@@Base+0x1d64>  // b.any
  41fefc:	b	420098 <_obstack_memory_used@@Base+0x1efc>
  41ff00:	str	wzr, [sp, #456]
  41ff04:	str	xzr, [sp, #432]
  41ff08:	str	xzr, [sp, #424]
  41ff0c:	ldurb	w8, [x29, #-109]
  41ff10:	ldur	x9, [x29, #-40]
  41ff14:	ldur	x10, [x29, #-48]
  41ff18:	cmp	x9, x10
  41ff1c:	str	w8, [sp, #60]
  41ff20:	b.gt	41ff30 <_obstack_memory_used@@Base+0x1d94>
  41ff24:	sub	x8, x29, #0x80
  41ff28:	str	x8, [sp, #48]
  41ff2c:	b	41ff38 <_obstack_memory_used@@Base+0x1d9c>
  41ff30:	mov	x8, xzr
  41ff34:	str	x8, [sp, #48]
  41ff38:	ldr	x8, [sp, #48]
  41ff3c:	add	x0, sp, #0xe8
  41ff40:	ldr	w9, [sp, #60]
  41ff44:	and	w1, w9, #0x1
  41ff48:	mov	x2, x8
  41ff4c:	bl	42cbcc <_obstack_memory_used@@Base+0xea30>
  41ff50:	stur	x0, [x29, #-136]
  41ff54:	ldur	x8, [x29, #-136]
  41ff58:	mov	x10, #0xffffffffffffffff    	// #-1
  41ff5c:	cmp	x8, x10
  41ff60:	b.eq	420090 <_obstack_memory_used@@Base+0x1ef4>  // b.none
  41ff64:	ldur	x8, [x29, #-136]
  41ff68:	mov	x9, #0xfffffffffffffffe    	// #-2
  41ff6c:	cmp	x8, x9
  41ff70:	cset	w10, eq  // eq = none
  41ff74:	and	w10, w10, #0x1
  41ff78:	mov	w0, w10
  41ff7c:	sxtw	x8, w0
  41ff80:	cbz	x8, 41ff90 <_obstack_memory_used@@Base+0x1df4>
  41ff84:	mov	w8, #0xc                   	// #12
  41ff88:	stur	w8, [x29, #-80]
  41ff8c:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  41ff90:	ldur	x8, [x29, #-136]
  41ff94:	str	x8, [sp, #400]
  41ff98:	ldur	x8, [x29, #-16]
  41ff9c:	ldrb	w9, [x8, #56]
  41ffa0:	mov	w10, #0x4                   	// #4
  41ffa4:	lsr	w9, w9, w10
  41ffa8:	and	w9, w9, #0x1
  41ffac:	and	w9, w9, #0xff
  41ffb0:	cbnz	w9, 41ffc0 <_obstack_memory_used@@Base+0x1e24>
  41ffb4:	ldur	x8, [x29, #-64]
  41ffb8:	cmp	x8, #0x1
  41ffbc:	b.hi	41ffcc <_obstack_memory_used@@Base+0x1e30>  // b.pmore
  41ffc0:	ldur	x8, [x29, #-88]
  41ffc4:	ldr	x8, [x8, #152]
  41ffc8:	cbz	x8, 420000 <_obstack_memory_used@@Base+0x1e64>
  41ffcc:	add	x8, sp, #0xe8
  41ffd0:	ldr	x9, [x8, #184]
  41ffd4:	ldur	x10, [x29, #-136]
  41ffd8:	mov	x11, #0x8                   	// #8
  41ffdc:	mul	x10, x11, x10
  41ffe0:	add	x9, x9, x10
  41ffe4:	ldr	x9, [x9]
  41ffe8:	str	x9, [sp, #200]
  41ffec:	ldr	x1, [sp, #200]
  41fff0:	ldur	x2, [x29, #-136]
  41fff4:	mov	x0, x8
  41fff8:	bl	42d15c <_obstack_memory_used@@Base+0xefc0>
  41fffc:	str	x0, [sp, #408]
  420000:	ldur	x8, [x29, #-16]
  420004:	ldrb	w9, [x8, #56]
  420008:	mov	w10, #0x4                   	// #4
  42000c:	lsr	w9, w9, w10
  420010:	and	w9, w9, #0x1
  420014:	and	w9, w9, #0xff
  420018:	cbnz	w9, 42003c <_obstack_memory_used@@Base+0x1ea0>
  42001c:	ldur	x8, [x29, #-64]
  420020:	cmp	x8, #0x1
  420024:	b.ls	42003c <_obstack_memory_used@@Base+0x1ea0>  // b.plast
  420028:	ldur	x8, [x29, #-88]
  42002c:	ldrb	w9, [x8, #176]
  420030:	and	w9, w9, #0x1
  420034:	and	w9, w9, #0xff
  420038:	cbnz	w9, 420048 <_obstack_memory_used@@Base+0x1eac>
  42003c:	ldur	x8, [x29, #-88]
  420040:	ldr	x8, [x8, #152]
  420044:	cbz	x8, 42008c <_obstack_memory_used@@Base+0x1ef0>
  420048:	add	x0, sp, #0xe8
  42004c:	bl	42d228 <_obstack_memory_used@@Base+0xf08c>
  420050:	stur	w0, [x29, #-80]
  420054:	ldur	w8, [x29, #-80]
  420058:	cbnz	w8, 420060 <_obstack_memory_used@@Base+0x1ec4>
  42005c:	b	4200ac <_obstack_memory_used@@Base+0x1f10>
  420060:	ldur	w8, [x29, #-80]
  420064:	cmp	w8, #0x1
  420068:	cset	w8, ne  // ne = any
  42006c:	and	w8, w8, #0x1
  420070:	mov	w0, w8
  420074:	sxtw	x9, w0
  420078:	cbz	x9, 420080 <_obstack_memory_used@@Base+0x1ee4>
  42007c:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  420080:	mov	x8, #0xffffffffffffffff    	// #-1
  420084:	stur	x8, [x29, #-136]
  420088:	b	420090 <_obstack_memory_used@@Base+0x1ef4>
  42008c:	b	4200ac <_obstack_memory_used@@Base+0x1f10>
  420090:	add	x0, sp, #0xe8
  420094:	bl	42d5b4 <_obstack_memory_used@@Base+0xf418>
  420098:	ldursw	x8, [x29, #-108]
  42009c:	ldur	x9, [x29, #-128]
  4200a0:	add	x8, x9, x8
  4200a4:	stur	x8, [x29, #-128]
  4200a8:	b	41faec <_obstack_memory_used@@Base+0x1950>
  4200ac:	ldur	x8, [x29, #-136]
  4200b0:	mov	x9, #0xffffffffffffffff    	// #-1
  4200b4:	cmp	x8, x9
  4200b8:	b.eq	4200c0 <_obstack_memory_used@@Base+0x1f24>  // b.none
  4200bc:	b	4200c0 <_obstack_memory_used@@Base+0x1f24>
  4200c0:	ldur	w8, [x29, #-80]
  4200c4:	cbnz	w8, 4200cc <_obstack_memory_used@@Base+0x1f30>
  4200c8:	b	4200cc <_obstack_memory_used@@Base+0x1f30>
  4200cc:	ldur	x8, [x29, #-64]
  4200d0:	cmp	x8, #0x0
  4200d4:	cset	w9, ls  // ls = plast
  4200d8:	tbnz	w9, #0, 420494 <_obstack_memory_used@@Base+0x22f8>
  4200dc:	mov	x8, #0x1                   	// #1
  4200e0:	str	x8, [sp, #192]
  4200e4:	ldr	x8, [sp, #192]
  4200e8:	ldur	x9, [x29, #-64]
  4200ec:	cmp	x8, x9
  4200f0:	b.cs	420130 <_obstack_memory_used@@Base+0x1f94>  // b.hs, b.nlast
  4200f4:	ldur	x8, [x29, #-72]
  4200f8:	ldr	x9, [sp, #192]
  4200fc:	mov	x10, #0x10                  	// #16
  420100:	mul	x9, x10, x9
  420104:	add	x8, x8, x9
  420108:	mov	x9, #0xffffffffffffffff    	// #-1
  42010c:	str	x9, [x8, #8]
  420110:	ldur	x8, [x29, #-72]
  420114:	ldr	x11, [sp, #192]
  420118:	mul	x10, x10, x11
  42011c:	str	x9, [x8, x10]
  420120:	ldr	x8, [sp, #192]
  420124:	add	x8, x8, #0x1
  420128:	str	x8, [sp, #192]
  42012c:	b	4200e4 <_obstack_memory_used@@Base+0x1f48>
  420130:	ldur	x8, [x29, #-72]
  420134:	str	xzr, [x8]
  420138:	ldr	x8, [sp, #400]
  42013c:	ldur	x9, [x29, #-72]
  420140:	str	x8, [x9, #8]
  420144:	ldur	x8, [x29, #-16]
  420148:	ldrb	w10, [x8, #56]
  42014c:	mov	w11, #0x4                   	// #4
  420150:	lsr	w10, w10, w11
  420154:	and	w10, w10, #0x1
  420158:	and	w10, w10, #0xff
  42015c:	cbnz	w10, 4201f4 <_obstack_memory_used@@Base+0x2058>
  420160:	ldur	x8, [x29, #-64]
  420164:	cmp	x8, #0x1
  420168:	b.ls	4201f4 <_obstack_memory_used@@Base+0x2058>  // b.plast
  42016c:	ldur	x0, [x29, #-16]
  420170:	ldur	x2, [x29, #-64]
  420174:	ldur	x3, [x29, #-72]
  420178:	ldur	x8, [x29, #-88]
  42017c:	ldrb	w9, [x8, #176]
  420180:	and	w9, w9, #0x1
  420184:	and	w9, w9, #0xff
  420188:	mov	w10, #0x0                   	// #0
  42018c:	str	x0, [sp, #40]
  420190:	str	x2, [sp, #32]
  420194:	str	x3, [sp, #24]
  420198:	str	w10, [sp, #20]
  42019c:	cbz	w9, 4201b4 <_obstack_memory_used@@Base+0x2018>
  4201a0:	ldur	x8, [x29, #-88]
  4201a4:	ldr	x8, [x8, #152]
  4201a8:	cmp	x8, #0x0
  4201ac:	cset	w9, gt
  4201b0:	str	w9, [sp, #20]
  4201b4:	ldr	w8, [sp, #20]
  4201b8:	ldr	x0, [sp, #40]
  4201bc:	add	x1, sp, #0xe8
  4201c0:	ldr	x2, [sp, #32]
  4201c4:	ldr	x3, [sp, #24]
  4201c8:	and	w4, w8, #0x1
  4201cc:	bl	42d6c0 <_obstack_memory_used@@Base+0xf524>
  4201d0:	stur	w0, [x29, #-80]
  4201d4:	ldur	w8, [x29, #-80]
  4201d8:	cmp	w8, #0x0
  4201dc:	cset	w8, ne  // ne = any
  4201e0:	and	w8, w8, #0x1
  4201e4:	mov	w1, w8
  4201e8:	sxtw	x9, w1
  4201ec:	cbz	x9, 4201f4 <_obstack_memory_used@@Base+0x2058>
  4201f0:	b	420494 <_obstack_memory_used@@Base+0x22f8>
  4201f4:	str	xzr, [sp, #192]
  4201f8:	ldr	x8, [sp, #192]
  4201fc:	ldur	x9, [x29, #-64]
  420200:	cmp	x8, x9
  420204:	b.cs	420370 <_obstack_memory_used@@Base+0x21d4>  // b.hs, b.nlast
  420208:	ldur	x8, [x29, #-72]
  42020c:	ldr	x9, [sp, #192]
  420210:	mov	x10, #0x10                  	// #16
  420214:	mul	x9, x10, x9
  420218:	ldr	x8, [x8, x9]
  42021c:	mov	x9, #0xffffffffffffffff    	// #-1
  420220:	cmp	x8, x9
  420224:	b.eq	420360 <_obstack_memory_used@@Base+0x21c4>  // b.none
  420228:	ldrb	w8, [sp, #372]
  42022c:	cmp	w8, #0x0
  420230:	cset	w8, ne  // ne = any
  420234:	and	w8, w8, #0x1
  420238:	mov	w0, w8
  42023c:	sxtw	x9, w0
  420240:	cbz	x9, 42031c <_obstack_memory_used@@Base+0x2180>
  420244:	ldur	x8, [x29, #-72]
  420248:	ldr	x9, [sp, #192]
  42024c:	mov	x10, #0x10                  	// #16
  420250:	mul	x9, x10, x9
  420254:	ldr	x8, [x8, x9]
  420258:	ldr	x9, [sp, #280]
  42025c:	cmp	x8, x9
  420260:	b.ne	420270 <_obstack_memory_used@@Base+0x20d4>  // b.any
  420264:	ldr	x8, [sp, #288]
  420268:	str	x8, [sp, #8]
  42026c:	b	420294 <_obstack_memory_used@@Base+0x20f8>
  420270:	add	x8, sp, #0xe8
  420274:	ldr	x8, [x8, #24]
  420278:	ldur	x9, [x29, #-72]
  42027c:	ldr	x10, [sp, #192]
  420280:	mov	x11, #0x10                  	// #16
  420284:	mul	x10, x11, x10
  420288:	ldr	x9, [x9, x10]
  42028c:	ldr	x8, [x8, x9, lsl #3]
  420290:	str	x8, [sp, #8]
  420294:	ldr	x8, [sp, #8]
  420298:	ldur	x9, [x29, #-72]
  42029c:	ldr	x10, [sp, #192]
  4202a0:	mov	x11, #0x10                  	// #16
  4202a4:	mul	x10, x11, x10
  4202a8:	str	x8, [x9, x10]
  4202ac:	ldur	x8, [x29, #-72]
  4202b0:	ldr	x9, [sp, #192]
  4202b4:	mul	x9, x11, x9
  4202b8:	add	x8, x8, x9
  4202bc:	ldr	x8, [x8, #8]
  4202c0:	ldr	x9, [sp, #280]
  4202c4:	cmp	x8, x9
  4202c8:	b.ne	4202d8 <_obstack_memory_used@@Base+0x213c>  // b.any
  4202cc:	ldr	x8, [sp, #288]
  4202d0:	str	x8, [sp]
  4202d4:	b	420300 <_obstack_memory_used@@Base+0x2164>
  4202d8:	add	x8, sp, #0xe8
  4202dc:	ldr	x8, [x8, #24]
  4202e0:	ldur	x9, [x29, #-72]
  4202e4:	ldr	x10, [sp, #192]
  4202e8:	mov	x11, #0x10                  	// #16
  4202ec:	mul	x10, x11, x10
  4202f0:	add	x9, x9, x10
  4202f4:	ldr	x9, [x9, #8]
  4202f8:	ldr	x8, [x8, x9, lsl #3]
  4202fc:	str	x8, [sp]
  420300:	ldr	x8, [sp]
  420304:	ldur	x9, [x29, #-72]
  420308:	ldr	x10, [sp, #192]
  42030c:	mov	x11, #0x10                  	// #16
  420310:	mul	x10, x11, x10
  420314:	add	x9, x9, x10
  420318:	str	x8, [x9, #8]
  42031c:	ldur	x8, [x29, #-128]
  420320:	ldur	x9, [x29, #-72]
  420324:	ldr	x10, [sp, #192]
  420328:	mov	x11, #0x10                  	// #16
  42032c:	mul	x10, x11, x10
  420330:	add	x9, x9, x10
  420334:	ldr	x10, [x9]
  420338:	add	x8, x10, x8
  42033c:	str	x8, [x9]
  420340:	ldur	x8, [x29, #-128]
  420344:	ldur	x9, [x29, #-72]
  420348:	ldr	x10, [sp, #192]
  42034c:	mul	x10, x11, x10
  420350:	add	x9, x9, x10
  420354:	ldr	x10, [x9, #8]
  420358:	add	x8, x10, x8
  42035c:	str	x8, [x9, #8]
  420360:	ldr	x8, [sp, #192]
  420364:	add	x8, x8, #0x1
  420368:	str	x8, [sp, #192]
  42036c:	b	4201f8 <_obstack_memory_used@@Base+0x205c>
  420370:	str	xzr, [sp, #192]
  420374:	ldr	x8, [sp, #192]
  420378:	ldur	x9, [x29, #-144]
  42037c:	cmp	x8, x9
  420380:	b.ge	4203d0 <_obstack_memory_used@@Base+0x2234>  // b.tcont
  420384:	ldur	x8, [x29, #-72]
  420388:	ldur	x9, [x29, #-64]
  42038c:	ldr	x10, [sp, #192]
  420390:	add	x9, x9, x10
  420394:	mov	x10, #0x10                  	// #16
  420398:	mul	x9, x10, x9
  42039c:	mov	x11, #0xffffffffffffffff    	// #-1
  4203a0:	str	x11, [x8, x9]
  4203a4:	ldur	x8, [x29, #-72]
  4203a8:	ldur	x9, [x29, #-64]
  4203ac:	ldr	x12, [sp, #192]
  4203b0:	add	x9, x9, x12
  4203b4:	mul	x9, x10, x9
  4203b8:	add	x8, x8, x9
  4203bc:	str	x11, [x8, #8]
  4203c0:	ldr	x8, [sp, #192]
  4203c4:	add	x8, x8, #0x1
  4203c8:	str	x8, [sp, #192]
  4203cc:	b	420374 <_obstack_memory_used@@Base+0x21d8>
  4203d0:	ldur	x8, [x29, #-88]
  4203d4:	ldr	x8, [x8, #224]
  4203d8:	cbz	x8, 420494 <_obstack_memory_used@@Base+0x22f8>
  4203dc:	str	xzr, [sp, #192]
  4203e0:	ldr	x8, [sp, #192]
  4203e4:	add	x8, x8, #0x1
  4203e8:	ldur	x9, [x29, #-64]
  4203ec:	cmp	x8, x9
  4203f0:	b.cs	420494 <_obstack_memory_used@@Base+0x22f8>  // b.hs, b.nlast
  4203f4:	ldur	x8, [x29, #-88]
  4203f8:	ldr	x8, [x8, #224]
  4203fc:	ldr	x9, [sp, #192]
  420400:	ldr	x8, [x8, x9, lsl #3]
  420404:	ldr	x9, [sp, #192]
  420408:	cmp	x8, x9
  42040c:	b.eq	420484 <_obstack_memory_used@@Base+0x22e8>  // b.none
  420410:	ldur	x8, [x29, #-72]
  420414:	ldur	x9, [x29, #-88]
  420418:	ldr	x9, [x9, #224]
  42041c:	ldr	x10, [sp, #192]
  420420:	ldr	x9, [x9, x10, lsl #3]
  420424:	add	x9, x9, #0x1
  420428:	mov	x10, #0x10                  	// #16
  42042c:	mul	x9, x10, x9
  420430:	ldr	x8, [x8, x9]
  420434:	ldur	x9, [x29, #-72]
  420438:	ldr	x11, [sp, #192]
  42043c:	add	x11, x11, #0x1
  420440:	mul	x11, x10, x11
  420444:	str	x8, [x9, x11]
  420448:	ldur	x8, [x29, #-72]
  42044c:	ldur	x9, [x29, #-88]
  420450:	ldr	x9, [x9, #224]
  420454:	ldr	x11, [sp, #192]
  420458:	ldr	x9, [x9, x11, lsl #3]
  42045c:	add	x9, x9, #0x1
  420460:	mul	x9, x10, x9
  420464:	add	x8, x8, x9
  420468:	ldr	x8, [x8, #8]
  42046c:	ldur	x9, [x29, #-72]
  420470:	ldr	x11, [sp, #192]
  420474:	add	x11, x11, #0x1
  420478:	mul	x10, x10, x11
  42047c:	add	x9, x9, x10
  420480:	str	x8, [x9, #8]
  420484:	ldr	x8, [sp, #192]
  420488:	add	x8, x8, #0x1
  42048c:	str	x8, [sp, #192]
  420490:	b	4203e0 <_obstack_memory_used@@Base+0x2244>
  420494:	add	x8, sp, #0xe8
  420498:	ldr	x0, [x8, #184]
  42049c:	bl	402b40 <free@plt>
  4204a0:	ldur	x8, [x29, #-88]
  4204a4:	ldr	x8, [x8, #152]
  4204a8:	cbz	x8, 4204b4 <_obstack_memory_used@@Base+0x2318>
  4204ac:	add	x0, sp, #0xe8
  4204b0:	bl	42dabc <_obstack_memory_used@@Base+0xf920>
  4204b4:	add	x0, sp, #0xe8
  4204b8:	bl	42175c <_obstack_memory_used@@Base+0x35c0>
  4204bc:	ldur	w8, [x29, #-80]
  4204c0:	stur	w8, [x29, #-4]
  4204c4:	ldur	w0, [x29, #-4]
  4204c8:	add	sp, sp, #0x280
  4204cc:	ldr	x28, [sp, #16]
  4204d0:	ldp	x29, x30, [sp], #32
  4204d4:	ret
  4204d8:	sub	sp, sp, #0x40
  4204dc:	stp	x29, x30, [sp, #48]
  4204e0:	add	x29, sp, #0x30
  4204e4:	mov	x8, xzr
  4204e8:	stur	x0, [x29, #-8]
  4204ec:	stur	x1, [x29, #-16]
  4204f0:	str	x2, [sp, #24]
  4204f4:	str	x3, [sp, #16]
  4204f8:	str	x4, [sp, #8]
  4204fc:	ldur	x0, [x29, #-8]
  420500:	ldur	x1, [x29, #-16]
  420504:	ldr	x2, [sp, #24]
  420508:	ldr	x3, [sp, #16]
  42050c:	ldr	x5, [sp, #24]
  420510:	ldr	x6, [sp, #8]
  420514:	mov	x4, x8
  420518:	mov	w9, #0x1                   	// #1
  42051c:	and	w7, w9, #0x1
  420520:	bl	420530 <_obstack_memory_used@@Base+0x2394>
  420524:	ldp	x29, x30, [sp, #48]
  420528:	add	sp, sp, #0x40
  42052c:	ret
  420530:	sub	sp, sp, #0xb0
  420534:	stp	x29, x30, [sp, #160]
  420538:	add	x29, sp, #0xa0
  42053c:	mov	w8, #0x1                   	// #1
  420540:	stur	x0, [x29, #-16]
  420544:	stur	x1, [x29, #-24]
  420548:	stur	x2, [x29, #-32]
  42054c:	stur	x3, [x29, #-40]
  420550:	stur	x4, [x29, #-48]
  420554:	stur	x5, [x29, #-56]
  420558:	stur	x6, [x29, #-64]
  42055c:	and	w8, w7, w8
  420560:	sturb	w8, [x29, #-65]
  420564:	str	wzr, [sp, #60]
  420568:	ldur	x9, [x29, #-16]
  42056c:	ldr	x9, [x9]
  420570:	str	x9, [sp, #48]
  420574:	ldur	x9, [x29, #-40]
  420578:	ldur	x10, [x29, #-48]
  42057c:	add	x9, x9, x10
  420580:	str	x9, [sp, #40]
  420584:	ldur	x9, [x29, #-40]
  420588:	cmp	x9, #0x0
  42058c:	cset	w8, lt  // lt = tstop
  420590:	mov	w11, #0x1                   	// #1
  420594:	str	w11, [sp, #36]
  420598:	tbnz	w8, #0, 4205b0 <_obstack_memory_used@@Base+0x2414>
  42059c:	ldur	x8, [x29, #-40]
  4205a0:	ldur	x9, [x29, #-32]
  4205a4:	cmp	x8, x9
  4205a8:	cset	w10, gt
  4205ac:	str	w10, [sp, #36]
  4205b0:	ldr	w8, [sp, #36]
  4205b4:	and	w8, w8, #0x1
  4205b8:	mov	w0, w8
  4205bc:	sxtw	x9, w0
  4205c0:	cbz	x9, 4205d0 <_obstack_memory_used@@Base+0x2434>
  4205c4:	mov	x8, #0xffffffffffffffff    	// #-1
  4205c8:	stur	x8, [x29, #-8]
  4205cc:	b	4209cc <_obstack_memory_used@@Base+0x2830>
  4205d0:	ldur	x8, [x29, #-32]
  4205d4:	ldr	x9, [sp, #40]
  4205d8:	mov	w10, #0x1                   	// #1
  4205dc:	cmp	x8, x9
  4205e0:	str	w10, [sp, #32]
  4205e4:	b.lt	420620 <_obstack_memory_used@@Base+0x2484>  // b.tstop
  4205e8:	ldur	x8, [x29, #-48]
  4205ec:	mov	x9, xzr
  4205f0:	cmp	x9, x8
  4205f4:	cset	w10, gt
  4205f8:	mov	w11, #0x0                   	// #0
  4205fc:	str	w11, [sp, #28]
  420600:	tbnz	w10, #0, 420618 <_obstack_memory_used@@Base+0x247c>
  420604:	ldr	x8, [sp, #40]
  420608:	ldur	x9, [x29, #-40]
  42060c:	cmp	x8, x9
  420610:	cset	w10, lt  // lt = tstop
  420614:	str	w10, [sp, #28]
  420618:	ldr	w8, [sp, #28]
  42061c:	str	w8, [sp, #32]
  420620:	ldr	w8, [sp, #32]
  420624:	and	w8, w8, #0x1
  420628:	mov	w0, w8
  42062c:	sxtw	x9, w0
  420630:	cbz	x9, 420640 <_obstack_memory_used@@Base+0x24a4>
  420634:	ldur	x8, [x29, #-32]
  420638:	str	x8, [sp, #40]
  42063c:	b	4206a4 <_obstack_memory_used@@Base+0x2508>
  420640:	ldr	x8, [sp, #40]
  420644:	cmp	x8, #0x0
  420648:	cset	w9, lt  // lt = tstop
  42064c:	mov	w10, #0x1                   	// #1
  420650:	str	w10, [sp, #24]
  420654:	tbnz	w9, #0, 42068c <_obstack_memory_used@@Base+0x24f0>
  420658:	ldur	x8, [x29, #-48]
  42065c:	cmp	x8, #0x0
  420660:	cset	w9, ge  // ge = tcont
  420664:	mov	w10, #0x0                   	// #0
  420668:	str	w10, [sp, #20]
  42066c:	tbnz	w9, #0, 420684 <_obstack_memory_used@@Base+0x24e8>
  420670:	ldur	x8, [x29, #-40]
  420674:	ldr	x9, [sp, #40]
  420678:	cmp	x8, x9
  42067c:	cset	w10, le
  420680:	str	w10, [sp, #20]
  420684:	ldr	w8, [sp, #20]
  420688:	str	w8, [sp, #24]
  42068c:	ldr	w8, [sp, #24]
  420690:	and	w8, w8, #0x1
  420694:	mov	w0, w8
  420698:	sxtw	x9, w0
  42069c:	cbz	x9, 4206a4 <_obstack_memory_used@@Base+0x2508>
  4206a0:	str	xzr, [sp, #40]
  4206a4:	ldur	x8, [x29, #-16]
  4206a8:	ldrb	w9, [x8, #56]
  4206ac:	mov	w10, #0x5                   	// #5
  4206b0:	lsr	w9, w9, w10
  4206b4:	mov	w10, #0x1                   	// #1
  4206b8:	and	w9, w9, #0x1
  4206bc:	mov	w11, wzr
  4206c0:	mov	w12, #0x1                   	// #1
  4206c4:	tst	w9, #0xff
  4206c8:	csel	w9, w12, w11, ne  // ne = any
  4206cc:	ldr	w12, [sp, #60]
  4206d0:	orr	w9, w12, w9
  4206d4:	str	w9, [sp, #60]
  4206d8:	ldur	x8, [x29, #-16]
  4206dc:	ldrb	w9, [x8, #56]
  4206e0:	mov	w12, #0x6                   	// #6
  4206e4:	lsr	w9, w9, w12
  4206e8:	and	w9, w9, w10
  4206ec:	mov	w10, #0x2                   	// #2
  4206f0:	tst	w9, #0xff
  4206f4:	csel	w9, w10, w11, ne  // ne = any
  4206f8:	ldr	w10, [sp, #60]
  4206fc:	orr	w9, w10, w9
  420700:	str	w9, [sp, #60]
  420704:	ldur	x8, [x29, #-40]
  420708:	ldr	x13, [sp, #40]
  42070c:	cmp	x8, x13
  420710:	b.ge	420744 <_obstack_memory_used@@Base+0x25a8>  // b.tcont
  420714:	ldur	x8, [x29, #-16]
  420718:	ldr	x8, [x8, #32]
  42071c:	cbz	x8, 420744 <_obstack_memory_used@@Base+0x25a8>
  420720:	ldur	x8, [x29, #-16]
  420724:	ldrb	w9, [x8, #56]
  420728:	mov	w10, #0x3                   	// #3
  42072c:	lsr	w9, w9, w10
  420730:	and	w9, w9, #0x1
  420734:	and	w9, w9, #0xff
  420738:	cbnz	w9, 420744 <_obstack_memory_used@@Base+0x25a8>
  42073c:	ldur	x0, [x29, #-16]
  420740:	bl	41e680 <_obstack_memory_used@@Base+0x4e4>
  420744:	ldur	x8, [x29, #-16]
  420748:	ldrb	w9, [x8, #56]
  42074c:	mov	w10, #0x4                   	// #4
  420750:	lsr	w9, w9, w10
  420754:	and	w9, w9, #0x1
  420758:	and	w9, w9, #0xff
  42075c:	mov	w8, w9
  420760:	ubfx	x8, x8, #0, #32
  420764:	cbz	x8, 420770 <_obstack_memory_used@@Base+0x25d4>
  420768:	mov	x8, xzr
  42076c:	stur	x8, [x29, #-64]
  420770:	ldur	x8, [x29, #-64]
  420774:	cbnz	x8, 420784 <_obstack_memory_used@@Base+0x25e8>
  420778:	mov	x8, #0x1                   	// #1
  42077c:	str	x8, [sp, #72]
  420780:	b	420828 <_obstack_memory_used@@Base+0x268c>
  420784:	ldur	x8, [x29, #-16]
  420788:	ldrb	w9, [x8, #56]
  42078c:	mov	w10, #0x1                   	// #1
  420790:	lsr	w9, w9, w10
  420794:	and	w9, w9, #0x3
  420798:	and	w9, w9, #0xff
  42079c:	mov	w10, #0x0                   	// #0
  4207a0:	cmp	w9, #0x2
  4207a4:	str	w10, [sp, #16]
  4207a8:	b.ne	4207c8 <_obstack_memory_used@@Base+0x262c>  // b.any
  4207ac:	ldur	x8, [x29, #-64]
  4207b0:	ldr	x8, [x8]
  4207b4:	ldur	x9, [x29, #-16]
  4207b8:	ldr	x9, [x9, #48]
  4207bc:	cmp	x8, x9
  4207c0:	cset	w10, ls  // ls = plast
  4207c4:	str	w10, [sp, #16]
  4207c8:	ldr	w8, [sp, #16]
  4207cc:	and	w8, w8, #0x1
  4207d0:	mov	w0, w8
  4207d4:	sxtw	x9, w0
  4207d8:	cbz	x9, 420818 <_obstack_memory_used@@Base+0x267c>
  4207dc:	ldur	x8, [x29, #-64]
  4207e0:	ldr	x8, [x8]
  4207e4:	str	x8, [sp, #72]
  4207e8:	ldr	x8, [sp, #72]
  4207ec:	cmp	x8, #0x1
  4207f0:	cset	w9, lt  // lt = tstop
  4207f4:	and	w9, w9, #0x1
  4207f8:	mov	w0, w9
  4207fc:	sxtw	x8, w0
  420800:	cbz	x8, 420814 <_obstack_memory_used@@Base+0x2678>
  420804:	mov	x8, xzr
  420808:	stur	x8, [x29, #-64]
  42080c:	mov	x8, #0x1                   	// #1
  420810:	str	x8, [sp, #72]
  420814:	b	420828 <_obstack_memory_used@@Base+0x268c>
  420818:	ldur	x8, [x29, #-16]
  42081c:	ldr	x8, [x8, #48]
  420820:	add	x8, x8, #0x1
  420824:	str	x8, [sp, #72]
  420828:	ldr	x8, [sp, #72]
  42082c:	mov	x9, #0x10                  	// #16
  420830:	mul	x0, x8, x9
  420834:	bl	402890 <malloc@plt>
  420838:	str	x0, [sp, #80]
  42083c:	ldr	x8, [sp, #80]
  420840:	cmp	x8, #0x0
  420844:	cset	w10, eq  // eq = none
  420848:	and	w10, w10, #0x1
  42084c:	mov	w0, w10
  420850:	sxtw	x8, w0
  420854:	cbz	x8, 420864 <_obstack_memory_used@@Base+0x26c8>
  420858:	mov	x8, #0xfffffffffffffffe    	// #-2
  42085c:	str	x8, [sp, #64]
  420860:	b	4209c4 <_obstack_memory_used@@Base+0x2828>
  420864:	ldur	x0, [x29, #-16]
  420868:	ldur	x1, [x29, #-24]
  42086c:	ldur	x2, [x29, #-32]
  420870:	ldur	x3, [x29, #-40]
  420874:	ldr	x4, [sp, #40]
  420878:	ldur	x5, [x29, #-56]
  42087c:	ldr	x6, [sp, #72]
  420880:	ldr	x7, [sp, #80]
  420884:	ldr	w8, [sp, #60]
  420888:	mov	x9, sp
  42088c:	str	w8, [x9]
  420890:	bl	41f5a4 <_obstack_memory_used@@Base+0x1408>
  420894:	stur	w0, [x29, #-72]
  420898:	str	xzr, [sp, #64]
  42089c:	ldur	w8, [x29, #-72]
  4208a0:	cbz	w8, 4208c8 <_obstack_memory_used@@Base+0x272c>
  4208a4:	ldur	w8, [x29, #-72]
  4208a8:	mov	w9, #0xfffffffe            	// #-2
  4208ac:	mov	w10, #0xffffffff            	// #-1
  4208b0:	cmp	w8, #0x1
  4208b4:	csel	w8, w10, w9, eq  // eq = none
  4208b8:	mov	w0, w8
  4208bc:	sxtw	x11, w0
  4208c0:	str	x11, [sp, #64]
  4208c4:	b	420958 <_obstack_memory_used@@Base+0x27bc>
  4208c8:	ldur	x8, [x29, #-64]
  4208cc:	cbz	x8, 420958 <_obstack_memory_used@@Base+0x27bc>
  4208d0:	ldur	x0, [x29, #-64]
  4208d4:	ldr	x1, [sp, #80]
  4208d8:	ldr	x2, [sp, #72]
  4208dc:	ldur	x8, [x29, #-16]
  4208e0:	ldrb	w9, [x8, #56]
  4208e4:	mov	w10, #0x1                   	// #1
  4208e8:	lsr	w9, w9, w10
  4208ec:	mov	w11, #0x3                   	// #3
  4208f0:	and	w9, w9, #0x3
  4208f4:	and	w3, w9, #0xff
  4208f8:	str	w10, [sp, #12]
  4208fc:	str	w11, [sp, #8]
  420900:	bl	42b94c <_obstack_memory_used@@Base+0xd7b0>
  420904:	ldur	x8, [x29, #-16]
  420908:	ldrb	w9, [x8, #56]
  42090c:	ldr	w10, [sp, #8]
  420910:	and	w11, w0, w10
  420914:	ldr	w12, [sp, #12]
  420918:	lsl	w11, w11, w12
  42091c:	and	w9, w9, #0xfffffff9
  420920:	orr	w9, w9, w11
  420924:	strb	w9, [x8, #56]
  420928:	ldur	x8, [x29, #-16]
  42092c:	ldrb	w9, [x8, #56]
  420930:	lsr	w9, w9, w12
  420934:	and	w9, w9, w10
  420938:	tst	w9, #0xff
  42093c:	cset	w9, eq  // eq = none
  420940:	and	w9, w9, #0x1
  420944:	mov	w1, w9
  420948:	sxtw	x8, w1
  42094c:	cbz	x8, 420958 <_obstack_memory_used@@Base+0x27bc>
  420950:	mov	x8, #0xfffffffffffffffe    	// #-2
  420954:	str	x8, [sp, #64]
  420958:	ldr	x8, [sp, #64]
  42095c:	cmp	x8, #0x0
  420960:	cset	w9, eq  // eq = none
  420964:	and	w9, w9, #0x1
  420968:	mov	w0, w9
  42096c:	sxtw	x8, w0
  420970:	cbz	x8, 4209bc <_obstack_memory_used@@Base+0x2820>
  420974:	ldurb	w8, [x29, #-65]
  420978:	tbnz	w8, #0, 420980 <_obstack_memory_used@@Base+0x27e4>
  42097c:	b	4209b0 <_obstack_memory_used@@Base+0x2814>
  420980:	ldr	x8, [sp, #80]
  420984:	ldr	x8, [x8]
  420988:	ldur	x9, [x29, #-40]
  42098c:	cmp	x8, x9
  420990:	b.ne	420998 <_obstack_memory_used@@Base+0x27fc>  // b.any
  420994:	b	420998 <_obstack_memory_used@@Base+0x27fc>
  420998:	ldr	x8, [sp, #80]
  42099c:	ldr	x8, [x8, #8]
  4209a0:	ldur	x9, [x29, #-40]
  4209a4:	subs	x8, x8, x9
  4209a8:	str	x8, [sp, #64]
  4209ac:	b	4209bc <_obstack_memory_used@@Base+0x2820>
  4209b0:	ldr	x8, [sp, #80]
  4209b4:	ldr	x8, [x8]
  4209b8:	str	x8, [sp, #64]
  4209bc:	ldr	x0, [sp, #80]
  4209c0:	bl	402b40 <free@plt>
  4209c4:	ldr	x8, [sp, #64]
  4209c8:	stur	x8, [x29, #-8]
  4209cc:	ldur	x0, [x29, #-8]
  4209d0:	ldp	x29, x30, [sp, #160]
  4209d4:	add	sp, sp, #0xb0
  4209d8:	ret
  4209dc:	sub	sp, sp, #0x40
  4209e0:	stp	x29, x30, [sp, #48]
  4209e4:	add	x29, sp, #0x30
  4209e8:	stur	x0, [x29, #-8]
  4209ec:	stur	x1, [x29, #-16]
  4209f0:	str	x2, [sp, #24]
  4209f4:	str	x3, [sp, #16]
  4209f8:	str	x4, [sp, #8]
  4209fc:	str	x5, [sp]
  420a00:	ldur	x0, [x29, #-8]
  420a04:	ldur	x1, [x29, #-16]
  420a08:	ldr	x2, [sp, #24]
  420a0c:	ldr	x3, [sp, #16]
  420a10:	ldr	x4, [sp, #8]
  420a14:	ldr	x5, [sp, #24]
  420a18:	ldr	x6, [sp]
  420a1c:	mov	w8, wzr
  420a20:	and	w7, w8, #0x1
  420a24:	bl	420530 <_obstack_memory_used@@Base+0x2394>
  420a28:	ldp	x29, x30, [sp, #48]
  420a2c:	add	sp, sp, #0x40
  420a30:	ret
  420a34:	sub	sp, sp, #0x60
  420a38:	stp	x29, x30, [sp, #80]
  420a3c:	add	x29, sp, #0x50
  420a40:	mov	x8, xzr
  420a44:	stur	x0, [x29, #-8]
  420a48:	stur	x1, [x29, #-16]
  420a4c:	stur	x2, [x29, #-24]
  420a50:	stur	x3, [x29, #-32]
  420a54:	str	x4, [sp, #40]
  420a58:	str	x5, [sp, #32]
  420a5c:	str	x6, [sp, #24]
  420a60:	str	x7, [sp, #16]
  420a64:	ldur	x0, [x29, #-8]
  420a68:	ldur	x1, [x29, #-16]
  420a6c:	ldur	x2, [x29, #-24]
  420a70:	ldur	x3, [x29, #-32]
  420a74:	ldr	x4, [sp, #40]
  420a78:	ldr	x5, [sp, #32]
  420a7c:	ldr	x7, [sp, #24]
  420a80:	ldr	x9, [sp, #16]
  420a84:	mov	x6, x8
  420a88:	mov	x8, sp
  420a8c:	str	x9, [x8]
  420a90:	mov	x8, sp
  420a94:	mov	w10, #0x1                   	// #1
  420a98:	and	w10, w10, #0x1
  420a9c:	strb	w10, [x8, #8]
  420aa0:	bl	420ab0 <_obstack_memory_used@@Base+0x2914>
  420aa4:	ldp	x29, x30, [sp, #80]
  420aa8:	add	sp, sp, #0x60
  420aac:	ret
  420ab0:	sub	sp, sp, #0x90
  420ab4:	stp	x29, x30, [sp, #128]
  420ab8:	add	x29, sp, #0x80
  420abc:	ldrb	w8, [x29, #24]
  420ac0:	stur	x0, [x29, #-16]
  420ac4:	stur	x1, [x29, #-24]
  420ac8:	stur	x2, [x29, #-32]
  420acc:	stur	x3, [x29, #-40]
  420ad0:	stur	x4, [x29, #-48]
  420ad4:	stur	x5, [x29, #-56]
  420ad8:	str	x6, [sp, #64]
  420adc:	str	x7, [sp, #56]
  420ae0:	and	w8, w8, #0x1
  420ae4:	strb	w8, [sp, #52]
  420ae8:	mov	x9, xzr
  420aec:	str	x9, [sp, #16]
  420af0:	ldur	x9, [x29, #-32]
  420af4:	mov	w8, #0x1                   	// #1
  420af8:	str	w8, [sp, #12]
  420afc:	tbnz	x9, #63, 420b48 <_obstack_memory_used@@Base+0x29ac>
  420b00:	b	420b04 <_obstack_memory_used@@Base+0x2968>
  420b04:	ldur	x8, [x29, #-48]
  420b08:	mov	w9, #0x1                   	// #1
  420b0c:	str	w9, [sp, #12]
  420b10:	tbnz	x8, #63, 420b48 <_obstack_memory_used@@Base+0x29ac>
  420b14:	b	420b18 <_obstack_memory_used@@Base+0x297c>
  420b18:	ldr	x8, [x29, #16]
  420b1c:	mov	w9, #0x1                   	// #1
  420b20:	str	w9, [sp, #12]
  420b24:	tbnz	x8, #63, 420b48 <_obstack_memory_used@@Base+0x29ac>
  420b28:	b	420b2c <_obstack_memory_used@@Base+0x2990>
  420b2c:	ldur	x8, [x29, #-32]
  420b30:	ldur	x9, [x29, #-48]
  420b34:	adds	x8, x8, x9
  420b38:	cset	w10, vs
  420b3c:	str	x8, [sp, #24]
  420b40:	str	w10, [sp, #12]
  420b44:	b	420b48 <_obstack_memory_used@@Base+0x29ac>
  420b48:	ldr	w8, [sp, #12]
  420b4c:	tbz	w8, #0, 420b60 <_obstack_memory_used@@Base+0x29c4>
  420b50:	b	420b54 <_obstack_memory_used@@Base+0x29b8>
  420b54:	mov	x8, #0xfffffffffffffffe    	// #-2
  420b58:	stur	x8, [x29, #-8]
  420b5c:	b	420c3c <_obstack_memory_used@@Base+0x2aa0>
  420b60:	ldur	x8, [x29, #-48]
  420b64:	subs	x8, x8, #0x1
  420b68:	b.lt	420bf0 <_obstack_memory_used@@Base+0x2a54>  // b.tstop
  420b6c:	b	420b70 <_obstack_memory_used@@Base+0x29d4>
  420b70:	ldur	x8, [x29, #-32]
  420b74:	subs	x8, x8, #0x1
  420b78:	b.lt	420be0 <_obstack_memory_used@@Base+0x2a44>  // b.tstop
  420b7c:	b	420b80 <_obstack_memory_used@@Base+0x29e4>
  420b80:	ldr	x0, [sp, #24]
  420b84:	bl	402890 <malloc@plt>
  420b88:	str	x0, [sp, #16]
  420b8c:	ldr	x8, [sp, #16]
  420b90:	cbnz	x8, 420ba4 <_obstack_memory_used@@Base+0x2a08>
  420b94:	b	420b98 <_obstack_memory_used@@Base+0x29fc>
  420b98:	mov	x8, #0xfffffffffffffffe    	// #-2
  420b9c:	stur	x8, [x29, #-8]
  420ba0:	b	420c3c <_obstack_memory_used@@Base+0x2aa0>
  420ba4:	ldr	x0, [sp, #16]
  420ba8:	ldur	x1, [x29, #-24]
  420bac:	ldur	x2, [x29, #-32]
  420bb0:	bl	4026a0 <memcpy@plt>
  420bb4:	ldr	x8, [sp, #16]
  420bb8:	ldur	x9, [x29, #-32]
  420bbc:	add	x8, x8, x9
  420bc0:	ldur	x1, [x29, #-40]
  420bc4:	ldur	x2, [x29, #-48]
  420bc8:	str	x0, [sp]
  420bcc:	mov	x0, x8
  420bd0:	bl	4026a0 <memcpy@plt>
  420bd4:	ldr	x8, [sp, #16]
  420bd8:	str	x8, [sp, #40]
  420bdc:	b	420bec <_obstack_memory_used@@Base+0x2a50>
  420be0:	ldur	x8, [x29, #-40]
  420be4:	str	x8, [sp, #40]
  420be8:	b	420bec <_obstack_memory_used@@Base+0x2a50>
  420bec:	b	420bfc <_obstack_memory_used@@Base+0x2a60>
  420bf0:	ldur	x8, [x29, #-24]
  420bf4:	str	x8, [sp, #40]
  420bf8:	b	420bfc <_obstack_memory_used@@Base+0x2a60>
  420bfc:	ldur	x0, [x29, #-16]
  420c00:	ldr	x1, [sp, #40]
  420c04:	ldr	x2, [sp, #24]
  420c08:	ldur	x3, [x29, #-56]
  420c0c:	ldr	x4, [sp, #64]
  420c10:	ldr	x5, [x29, #16]
  420c14:	ldr	x6, [sp, #56]
  420c18:	ldrb	w8, [sp, #52]
  420c1c:	and	w7, w8, #0x1
  420c20:	bl	420530 <_obstack_memory_used@@Base+0x2394>
  420c24:	str	x0, [sp, #32]
  420c28:	ldr	x0, [sp, #16]
  420c2c:	bl	402b40 <free@plt>
  420c30:	ldr	x9, [sp, #32]
  420c34:	stur	x9, [x29, #-8]
  420c38:	b	420c3c <_obstack_memory_used@@Base+0x2aa0>
  420c3c:	ldur	x0, [x29, #-8]
  420c40:	ldp	x29, x30, [sp, #128]
  420c44:	add	sp, sp, #0x90
  420c48:	ret
  420c4c:	sub	sp, sp, #0x70
  420c50:	stp	x29, x30, [sp, #96]
  420c54:	add	x29, sp, #0x60
  420c58:	ldr	x8, [x29, #16]
  420c5c:	stur	x0, [x29, #-8]
  420c60:	stur	x1, [x29, #-16]
  420c64:	stur	x2, [x29, #-24]
  420c68:	stur	x3, [x29, #-32]
  420c6c:	stur	x4, [x29, #-40]
  420c70:	str	x5, [sp, #48]
  420c74:	str	x6, [sp, #40]
  420c78:	str	x7, [sp, #32]
  420c7c:	str	x8, [sp, #24]
  420c80:	ldur	x0, [x29, #-8]
  420c84:	ldur	x1, [x29, #-16]
  420c88:	ldur	x2, [x29, #-24]
  420c8c:	ldur	x3, [x29, #-32]
  420c90:	ldur	x4, [x29, #-40]
  420c94:	ldr	x5, [sp, #48]
  420c98:	ldr	x6, [sp, #40]
  420c9c:	ldr	x7, [sp, #32]
  420ca0:	ldr	x8, [sp, #24]
  420ca4:	mov	x9, sp
  420ca8:	str	x8, [x9]
  420cac:	mov	x8, sp
  420cb0:	mov	w10, wzr
  420cb4:	and	w10, w10, #0x1
  420cb8:	strb	w10, [x8, #8]
  420cbc:	bl	420ab0 <_obstack_memory_used@@Base+0x2914>
  420cc0:	ldp	x29, x30, [sp, #96]
  420cc4:	add	sp, sp, #0x70
  420cc8:	ret
  420ccc:	sub	sp, sp, #0x30
  420cd0:	str	x0, [sp, #40]
  420cd4:	str	x1, [sp, #32]
  420cd8:	str	x2, [sp, #24]
  420cdc:	str	x3, [sp, #16]
  420ce0:	str	x4, [sp, #8]
  420ce4:	ldr	x8, [sp, #24]
  420ce8:	cbz	x8, 420d28 <_obstack_memory_used@@Base+0x2b8c>
  420cec:	ldr	x8, [sp, #40]
  420cf0:	ldrb	w9, [x8, #56]
  420cf4:	and	w9, w9, #0xfffffff9
  420cf8:	orr	w9, w9, #0x2
  420cfc:	strb	w9, [x8, #56]
  420d00:	ldr	x8, [sp, #24]
  420d04:	ldr	x10, [sp, #32]
  420d08:	str	x8, [x10]
  420d0c:	ldr	x8, [sp, #16]
  420d10:	ldr	x10, [sp, #32]
  420d14:	str	x8, [x10, #8]
  420d18:	ldr	x8, [sp, #8]
  420d1c:	ldr	x10, [sp, #32]
  420d20:	str	x8, [x10, #16]
  420d24:	b	420d54 <_obstack_memory_used@@Base+0x2bb8>
  420d28:	ldr	x8, [sp, #40]
  420d2c:	ldrb	w9, [x8, #56]
  420d30:	and	w9, w9, #0xfffffff9
  420d34:	strb	w9, [x8, #56]
  420d38:	ldr	x8, [sp, #32]
  420d3c:	mov	x10, xzr
  420d40:	str	xzr, [x8]
  420d44:	ldr	x8, [sp, #32]
  420d48:	str	x10, [x8, #16]
  420d4c:	ldr	x8, [sp, #32]
  420d50:	str	x10, [x8, #8]
  420d54:	add	sp, sp, #0x30
  420d58:	ret
  420d5c:	sub	sp, sp, #0x20
  420d60:	stp	x29, x30, [sp, #16]
  420d64:	add	x29, sp, #0x10
  420d68:	str	x0, [sp, #8]
  420d6c:	ldr	x8, [sp, #8]
  420d70:	ldr	w9, [x8, #8]
  420d74:	and	w9, w9, #0xff
  420d78:	cmp	w9, #0x6
  420d7c:	b.ne	420da4 <_obstack_memory_used@@Base+0x2c08>  // b.any
  420d80:	ldr	x8, [sp, #8]
  420d84:	ldr	w9, [x8, #8]
  420d88:	lsr	w9, w9, #18
  420d8c:	and	w9, w9, #0x1
  420d90:	cbnz	w9, 420da4 <_obstack_memory_used@@Base+0x2c08>
  420d94:	ldr	x8, [sp, #8]
  420d98:	ldr	x0, [x8]
  420d9c:	bl	420e78 <_obstack_memory_used@@Base+0x2cdc>
  420da0:	b	420dd8 <_obstack_memory_used@@Base+0x2c3c>
  420da4:	ldr	x8, [sp, #8]
  420da8:	ldr	w9, [x8, #8]
  420dac:	and	w9, w9, #0xff
  420db0:	cmp	w9, #0x3
  420db4:	b.ne	420dd8 <_obstack_memory_used@@Base+0x2c3c>  // b.any
  420db8:	ldr	x8, [sp, #8]
  420dbc:	ldr	w9, [x8, #8]
  420dc0:	lsr	w9, w9, #18
  420dc4:	and	w9, w9, #0x1
  420dc8:	cbnz	w9, 420dd8 <_obstack_memory_used@@Base+0x2c3c>
  420dcc:	ldr	x8, [sp, #8]
  420dd0:	ldr	x0, [x8]
  420dd4:	bl	402b40 <free@plt>
  420dd8:	ldp	x29, x30, [sp, #16]
  420ddc:	add	sp, sp, #0x20
  420de0:	ret
  420de4:	sub	sp, sp, #0x20
  420de8:	stp	x29, x30, [sp, #16]
  420dec:	add	x29, sp, #0x10
  420df0:	str	x0, [sp, #8]
  420df4:	ldr	x8, [sp, #8]
  420df8:	ldr	x0, [x8, #48]
  420dfc:	bl	402b40 <free@plt>
  420e00:	ldr	x8, [sp, #8]
  420e04:	ldr	x0, [x8, #72]
  420e08:	bl	402b40 <free@plt>
  420e0c:	ldr	x8, [sp, #8]
  420e10:	ldr	x8, [x8, #80]
  420e14:	ldr	x9, [sp, #8]
  420e18:	add	x9, x9, #0x8
  420e1c:	cmp	x8, x9
  420e20:	b.eq	420e40 <_obstack_memory_used@@Base+0x2ca4>  // b.none
  420e24:	ldr	x8, [sp, #8]
  420e28:	ldr	x8, [x8, #80]
  420e2c:	ldr	x0, [x8, #16]
  420e30:	bl	402b40 <free@plt>
  420e34:	ldr	x8, [sp, #8]
  420e38:	ldr	x0, [x8, #80]
  420e3c:	bl	402b40 <free@plt>
  420e40:	ldr	x8, [sp, #8]
  420e44:	ldr	x0, [x8, #24]
  420e48:	bl	402b40 <free@plt>
  420e4c:	ldr	x8, [sp, #8]
  420e50:	ldr	x0, [x8, #96]
  420e54:	bl	402b40 <free@plt>
  420e58:	ldr	x8, [sp, #8]
  420e5c:	ldr	x0, [x8, #88]
  420e60:	bl	402b40 <free@plt>
  420e64:	ldr	x0, [sp, #8]
  420e68:	bl	402b40 <free@plt>
  420e6c:	ldp	x29, x30, [sp, #16]
  420e70:	add	sp, sp, #0x20
  420e74:	ret
  420e78:	sub	sp, sp, #0x20
  420e7c:	stp	x29, x30, [sp, #16]
  420e80:	add	x29, sp, #0x10
  420e84:	str	x0, [sp, #8]
  420e88:	ldr	x8, [sp, #8]
  420e8c:	ldr	x0, [x8]
  420e90:	bl	402b40 <free@plt>
  420e94:	ldr	x8, [sp, #8]
  420e98:	ldr	x0, [x8, #8]
  420e9c:	bl	402b40 <free@plt>
  420ea0:	ldr	x8, [sp, #8]
  420ea4:	ldr	x0, [x8, #16]
  420ea8:	bl	402b40 <free@plt>
  420eac:	ldr	x8, [sp, #8]
  420eb0:	ldr	x0, [x8, #24]
  420eb4:	bl	402b40 <free@plt>
  420eb8:	ldr	x0, [sp, #8]
  420ebc:	bl	402b40 <free@plt>
  420ec0:	ldp	x29, x30, [sp, #16]
  420ec4:	add	sp, sp, #0x20
  420ec8:	ret
  420ecc:	sub	sp, sp, #0xf0
  420ed0:	stp	x29, x30, [sp, #224]
  420ed4:	add	x29, sp, #0xe0
  420ed8:	mov	x8, #0x8                   	// #8
  420edc:	mov	x9, #0x10                  	// #16
  420ee0:	stur	x0, [x29, #-16]
  420ee4:	stur	x1, [x29, #-24]
  420ee8:	stur	x8, [x29, #-48]
  420eec:	ldur	x8, [x29, #-48]
  420ef0:	cmp	x9, x8
  420ef4:	b.cs	420f04 <_obstack_memory_used@@Base+0x2d68>  // b.hs, b.nlast
  420ef8:	ldur	x8, [x29, #-48]
  420efc:	stur	x8, [x29, #-80]
  420f00:	b	420f0c <_obstack_memory_used@@Base+0x2d70>
  420f04:	mov	x8, #0x10                  	// #16
  420f08:	stur	x8, [x29, #-80]
  420f0c:	ldur	x8, [x29, #-80]
  420f10:	mov	x9, #0x18                  	// #24
  420f14:	cmp	x9, x8
  420f18:	b.cs	420f4c <_obstack_memory_used@@Base+0x2db0>  // b.hs, b.nlast
  420f1c:	ldur	x8, [x29, #-48]
  420f20:	mov	x9, #0x10                  	// #16
  420f24:	cmp	x9, x8
  420f28:	b.cs	420f38 <_obstack_memory_used@@Base+0x2d9c>  // b.hs, b.nlast
  420f2c:	ldur	x8, [x29, #-48]
  420f30:	stur	x8, [x29, #-88]
  420f34:	b	420f40 <_obstack_memory_used@@Base+0x2da4>
  420f38:	mov	x8, #0x10                  	// #16
  420f3c:	stur	x8, [x29, #-88]
  420f40:	ldur	x8, [x29, #-88]
  420f44:	stur	x8, [x29, #-96]
  420f48:	b	420f54 <_obstack_memory_used@@Base+0x2db8>
  420f4c:	mov	x8, #0x18                  	// #24
  420f50:	stur	x8, [x29, #-96]
  420f54:	ldur	x8, [x29, #-96]
  420f58:	mov	x9, #0x10                  	// #16
  420f5c:	cmp	x9, x8
  420f60:	b.cs	420fdc <_obstack_memory_used@@Base+0x2e40>  // b.hs, b.nlast
  420f64:	ldur	x8, [x29, #-48]
  420f68:	mov	x9, #0x10                  	// #16
  420f6c:	cmp	x9, x8
  420f70:	b.cs	420f80 <_obstack_memory_used@@Base+0x2de4>  // b.hs, b.nlast
  420f74:	ldur	x8, [x29, #-48]
  420f78:	stur	x8, [x29, #-104]
  420f7c:	b	420f88 <_obstack_memory_used@@Base+0x2dec>
  420f80:	mov	x8, #0x10                  	// #16
  420f84:	stur	x8, [x29, #-104]
  420f88:	ldur	x8, [x29, #-104]
  420f8c:	mov	x9, #0x18                  	// #24
  420f90:	cmp	x9, x8
  420f94:	b.cs	420fc8 <_obstack_memory_used@@Base+0x2e2c>  // b.hs, b.nlast
  420f98:	ldur	x8, [x29, #-48]
  420f9c:	mov	x9, #0x10                  	// #16
  420fa0:	cmp	x9, x8
  420fa4:	b.cs	420fb4 <_obstack_memory_used@@Base+0x2e18>  // b.hs, b.nlast
  420fa8:	ldur	x8, [x29, #-48]
  420fac:	str	x8, [sp, #112]
  420fb0:	b	420fbc <_obstack_memory_used@@Base+0x2e20>
  420fb4:	mov	x8, #0x10                  	// #16
  420fb8:	str	x8, [sp, #112]
  420fbc:	ldr	x8, [sp, #112]
  420fc0:	str	x8, [sp, #104]
  420fc4:	b	420fd0 <_obstack_memory_used@@Base+0x2e34>
  420fc8:	mov	x8, #0x18                  	// #24
  420fcc:	str	x8, [sp, #104]
  420fd0:	ldr	x8, [sp, #104]
  420fd4:	str	x8, [sp, #96]
  420fd8:	b	420fe4 <_obstack_memory_used@@Base+0x2e48>
  420fdc:	mov	x8, #0x10                  	// #16
  420fe0:	str	x8, [sp, #96]
  420fe4:	ldr	x8, [sp, #96]
  420fe8:	mov	x9, #0x18                  	// #24
  420fec:	cmp	x9, x8
  420ff0:	b.cs	4210fc <_obstack_memory_used@@Base+0x2f60>  // b.hs, b.nlast
  420ff4:	ldur	x8, [x29, #-48]
  420ff8:	mov	x9, #0x10                  	// #16
  420ffc:	cmp	x9, x8
  421000:	b.cs	421010 <_obstack_memory_used@@Base+0x2e74>  // b.hs, b.nlast
  421004:	ldur	x8, [x29, #-48]
  421008:	str	x8, [sp, #88]
  42100c:	b	421018 <_obstack_memory_used@@Base+0x2e7c>
  421010:	mov	x8, #0x10                  	// #16
  421014:	str	x8, [sp, #88]
  421018:	ldr	x8, [sp, #88]
  42101c:	mov	x9, #0x18                  	// #24
  421020:	cmp	x9, x8
  421024:	b.cs	421058 <_obstack_memory_used@@Base+0x2ebc>  // b.hs, b.nlast
  421028:	ldur	x8, [x29, #-48]
  42102c:	mov	x9, #0x10                  	// #16
  421030:	cmp	x9, x8
  421034:	b.cs	421044 <_obstack_memory_used@@Base+0x2ea8>  // b.hs, b.nlast
  421038:	ldur	x8, [x29, #-48]
  42103c:	str	x8, [sp, #80]
  421040:	b	42104c <_obstack_memory_used@@Base+0x2eb0>
  421044:	mov	x8, #0x10                  	// #16
  421048:	str	x8, [sp, #80]
  42104c:	ldr	x8, [sp, #80]
  421050:	str	x8, [sp, #72]
  421054:	b	421060 <_obstack_memory_used@@Base+0x2ec4>
  421058:	mov	x8, #0x18                  	// #24
  42105c:	str	x8, [sp, #72]
  421060:	ldr	x8, [sp, #72]
  421064:	mov	x9, #0x10                  	// #16
  421068:	cmp	x9, x8
  42106c:	b.cs	4210e8 <_obstack_memory_used@@Base+0x2f4c>  // b.hs, b.nlast
  421070:	ldur	x8, [x29, #-48]
  421074:	mov	x9, #0x10                  	// #16
  421078:	cmp	x9, x8
  42107c:	b.cs	42108c <_obstack_memory_used@@Base+0x2ef0>  // b.hs, b.nlast
  421080:	ldur	x8, [x29, #-48]
  421084:	str	x8, [sp, #64]
  421088:	b	421094 <_obstack_memory_used@@Base+0x2ef8>
  42108c:	mov	x8, #0x10                  	// #16
  421090:	str	x8, [sp, #64]
  421094:	ldr	x8, [sp, #64]
  421098:	mov	x9, #0x18                  	// #24
  42109c:	cmp	x9, x8
  4210a0:	b.cs	4210d4 <_obstack_memory_used@@Base+0x2f38>  // b.hs, b.nlast
  4210a4:	ldur	x8, [x29, #-48]
  4210a8:	mov	x9, #0x10                  	// #16
  4210ac:	cmp	x9, x8
  4210b0:	b.cs	4210c0 <_obstack_memory_used@@Base+0x2f24>  // b.hs, b.nlast
  4210b4:	ldur	x8, [x29, #-48]
  4210b8:	str	x8, [sp, #56]
  4210bc:	b	4210c8 <_obstack_memory_used@@Base+0x2f2c>
  4210c0:	mov	x8, #0x10                  	// #16
  4210c4:	str	x8, [sp, #56]
  4210c8:	ldr	x8, [sp, #56]
  4210cc:	str	x8, [sp, #48]
  4210d0:	b	4210dc <_obstack_memory_used@@Base+0x2f40>
  4210d4:	mov	x8, #0x18                  	// #24
  4210d8:	str	x8, [sp, #48]
  4210dc:	ldr	x8, [sp, #48]
  4210e0:	str	x8, [sp, #40]
  4210e4:	b	4210f0 <_obstack_memory_used@@Base+0x2f54>
  4210e8:	mov	x8, #0x10                  	// #16
  4210ec:	str	x8, [sp, #40]
  4210f0:	ldr	x8, [sp, #40]
  4210f4:	str	x8, [sp, #32]
  4210f8:	b	421104 <_obstack_memory_used@@Base+0x2f68>
  4210fc:	mov	x8, #0x18                  	// #24
  421100:	str	x8, [sp, #32]
  421104:	ldr	x8, [sp, #32]
  421108:	stur	x8, [x29, #-56]
  42110c:	ldur	x0, [x29, #-16]
  421110:	mov	w9, wzr
  421114:	mov	w1, w9
  421118:	mov	x2, #0xe8                  	// #232
  42111c:	bl	402960 <memset@plt>
  421120:	ldur	x8, [x29, #-16]
  421124:	mov	w9, #0xf                   	// #15
  421128:	str	w9, [x8, #128]
  42112c:	ldur	x8, [x29, #-56]
  421130:	mov	x10, #0xffffffffffffffff    	// #-1
  421134:	udiv	x8, x10, x8
  421138:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  42113c:	cmp	x10, x8
  421140:	b.cs	421150 <_obstack_memory_used@@Base+0x2fb4>  // b.hs, b.nlast
  421144:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  421148:	str	x8, [sp, #24]
  42114c:	b	421160 <_obstack_memory_used@@Base+0x2fc4>
  421150:	ldur	x8, [x29, #-56]
  421154:	mov	x9, #0xffffffffffffffff    	// #-1
  421158:	udiv	x8, x9, x8
  42115c:	str	x8, [sp, #24]
  421160:	ldr	x8, [sp, #24]
  421164:	mov	x9, #0x2                   	// #2
  421168:	udiv	x8, x8, x9
  42116c:	ldur	x9, [x29, #-24]
  421170:	cmp	x8, x9
  421174:	cset	w10, ls  // ls = plast
  421178:	and	w10, w10, #0x1
  42117c:	mov	w0, w10
  421180:	sxtw	x8, w0
  421184:	cbz	x8, 421194 <_obstack_memory_used@@Base+0x2ff8>
  421188:	mov	w8, #0xc                   	// #12
  42118c:	stur	w8, [x29, #-4]
  421190:	b	421488 <_obstack_memory_used@@Base+0x32ec>
  421194:	ldur	x8, [x29, #-24]
  421198:	mov	x9, #0x1                   	// #1
  42119c:	add	x8, x8, #0x1
  4211a0:	ldur	x10, [x29, #-16]
  4211a4:	str	x8, [x10, #8]
  4211a8:	ldur	x8, [x29, #-16]
  4211ac:	ldr	x8, [x8, #8]
  4211b0:	mov	x10, #0x10                  	// #16
  4211b4:	mul	x0, x8, x10
  4211b8:	str	x9, [sp, #16]
  4211bc:	bl	402890 <malloc@plt>
  4211c0:	ldur	x8, [x29, #-16]
  4211c4:	str	x0, [x8]
  4211c8:	ldr	x8, [sp, #16]
  4211cc:	stur	x8, [x29, #-32]
  4211d0:	ldur	x8, [x29, #-32]
  4211d4:	ldur	x9, [x29, #-24]
  4211d8:	cmp	x8, x9
  4211dc:	b.ls	4211e4 <_obstack_memory_used@@Base+0x3048>  // b.plast
  4211e0:	b	4211f4 <_obstack_memory_used@@Base+0x3058>
  4211e4:	ldur	x8, [x29, #-32]
  4211e8:	lsl	x8, x8, #1
  4211ec:	stur	x8, [x29, #-32]
  4211f0:	b	4211d0 <_obstack_memory_used@@Base+0x3034>
  4211f4:	ldur	x1, [x29, #-32]
  4211f8:	mov	x0, #0x18                  	// #24
  4211fc:	bl	4029a0 <calloc@plt>
  421200:	ldur	x8, [x29, #-16]
  421204:	str	x0, [x8, #64]
  421208:	ldur	x8, [x29, #-32]
  42120c:	subs	x8, x8, #0x1
  421210:	ldur	x9, [x29, #-16]
  421214:	str	x8, [x9, #136]
  421218:	bl	402b60 <__ctype_get_mb_cur_max@plt>
  42121c:	ldur	x8, [x29, #-16]
  421220:	str	w0, [x8, #180]
  421224:	mov	w0, #0xe                   	// #14
  421228:	bl	402850 <nl_langinfo@plt>
  42122c:	stur	x0, [x29, #-40]
  421230:	ldur	x8, [x29, #-40]
  421234:	ldrb	w10, [x8]
  421238:	cmp	w10, #0x55
  42123c:	b.eq	421250 <_obstack_memory_used@@Base+0x30b4>  // b.none
  421240:	ldur	x8, [x29, #-40]
  421244:	ldrb	w9, [x8]
  421248:	cmp	w9, #0x75
  42124c:	b.ne	4212dc <_obstack_memory_used@@Base+0x3140>  // b.any
  421250:	ldur	x8, [x29, #-40]
  421254:	ldrb	w9, [x8, #1]
  421258:	cmp	w9, #0x54
  42125c:	b.eq	421270 <_obstack_memory_used@@Base+0x30d4>  // b.none
  421260:	ldur	x8, [x29, #-40]
  421264:	ldrb	w9, [x8, #1]
  421268:	cmp	w9, #0x74
  42126c:	b.ne	4212dc <_obstack_memory_used@@Base+0x3140>  // b.any
  421270:	ldur	x8, [x29, #-40]
  421274:	ldrb	w9, [x8, #2]
  421278:	cmp	w9, #0x46
  42127c:	b.eq	421290 <_obstack_memory_used@@Base+0x30f4>  // b.none
  421280:	ldur	x8, [x29, #-40]
  421284:	ldrb	w9, [x8, #2]
  421288:	cmp	w9, #0x66
  42128c:	b.ne	4212dc <_obstack_memory_used@@Base+0x3140>  // b.any
  421290:	ldur	x8, [x29, #-40]
  421294:	add	x8, x8, #0x3
  421298:	ldur	x9, [x29, #-40]
  42129c:	ldrb	w10, [x9, #3]
  4212a0:	cmp	w10, #0x2d
  4212a4:	cset	w10, eq  // eq = none
  4212a8:	and	w10, w10, #0x1
  4212ac:	mov	w0, w10
  4212b0:	sxtw	x9, w0
  4212b4:	add	x0, x8, x9
  4212b8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x19e64>
  4212bc:	add	x1, x1, #0x3
  4212c0:	bl	402b10 <strcmp@plt>
  4212c4:	cbnz	w0, 4212dc <_obstack_memory_used@@Base+0x3140>
  4212c8:	ldur	x8, [x29, #-16]
  4212cc:	ldrb	w9, [x8, #176]
  4212d0:	and	w9, w9, #0xfffffffb
  4212d4:	orr	w9, w9, #0x4
  4212d8:	strb	w9, [x8, #176]
  4212dc:	ldur	x8, [x29, #-16]
  4212e0:	ldrb	w9, [x8, #176]
  4212e4:	and	w9, w9, #0xfffffff7
  4212e8:	strb	w9, [x8, #176]
  4212ec:	ldur	x8, [x29, #-16]
  4212f0:	ldr	w9, [x8, #180]
  4212f4:	cmp	w9, #0x1
  4212f8:	b.le	42143c <_obstack_memory_used@@Base+0x32a0>
  4212fc:	ldur	x8, [x29, #-16]
  421300:	ldrb	w9, [x8, #176]
  421304:	mov	w10, #0x2                   	// #2
  421308:	lsr	w9, w9, w10
  42130c:	and	w9, w9, #0x1
  421310:	and	w9, w9, #0xff
  421314:	cbz	w9, 42132c <_obstack_memory_used@@Base+0x3190>
  421318:	ldur	x8, [x29, #-16]
  42131c:	adrp	x9, 43a000 <_obstack_memory_used@@Base+0x1be64>
  421320:	add	x9, x9, #0x100
  421324:	str	x9, [x8, #120]
  421328:	b	42143c <_obstack_memory_used@@Base+0x32a0>
  42132c:	mov	x0, #0x20                  	// #32
  421330:	mov	x1, #0x1                   	// #1
  421334:	bl	4029a0 <calloc@plt>
  421338:	ldur	x8, [x29, #-16]
  42133c:	str	x0, [x8, #120]
  421340:	ldur	x8, [x29, #-16]
  421344:	ldr	x8, [x8, #120]
  421348:	cmp	x8, #0x0
  42134c:	cset	w9, eq  // eq = none
  421350:	and	w9, w9, #0x1
  421354:	mov	w0, w9
  421358:	sxtw	x8, w0
  42135c:	cbz	x8, 42136c <_obstack_memory_used@@Base+0x31d0>
  421360:	mov	w8, #0xc                   	// #12
  421364:	stur	w8, [x29, #-4]
  421368:	b	421488 <_obstack_memory_used@@Base+0x32ec>
  42136c:	stur	wzr, [x29, #-60]
  421370:	stur	wzr, [x29, #-68]
  421374:	ldur	w8, [x29, #-60]
  421378:	cmp	w8, #0x4
  42137c:	b.ge	42143c <_obstack_memory_used@@Base+0x32a0>  // b.tcont
  421380:	stur	wzr, [x29, #-64]
  421384:	ldur	w8, [x29, #-64]
  421388:	cmp	w8, #0x40
  42138c:	b.ge	42142c <_obstack_memory_used@@Base+0x3290>  // b.tcont
  421390:	ldur	w0, [x29, #-68]
  421394:	bl	402a60 <btowc@plt>
  421398:	stur	w0, [x29, #-72]
  42139c:	ldur	w8, [x29, #-72]
  4213a0:	mov	w9, #0xffffffff            	// #-1
  4213a4:	cmp	w8, w9
  4213a8:	b.eq	4213e0 <_obstack_memory_used@@Base+0x3244>  // b.none
  4213ac:	ldur	w8, [x29, #-64]
  4213b0:	mov	w9, w8
  4213b4:	mov	x10, #0x1                   	// #1
  4213b8:	lsl	x9, x10, x9
  4213bc:	ldur	x10, [x29, #-16]
  4213c0:	ldr	x10, [x10, #120]
  4213c4:	ldursw	x11, [x29, #-60]
  4213c8:	mov	x12, #0x8                   	// #8
  4213cc:	mul	x11, x12, x11
  4213d0:	add	x10, x10, x11
  4213d4:	ldr	x11, [x10]
  4213d8:	orr	x9, x11, x9
  4213dc:	str	x9, [x10]
  4213e0:	ldur	w8, [x29, #-68]
  4213e4:	and	w8, w8, #0xffffff80
  4213e8:	cbnz	w8, 421410 <_obstack_memory_used@@Base+0x3274>
  4213ec:	ldur	w8, [x29, #-72]
  4213f0:	ldur	w9, [x29, #-68]
  4213f4:	cmp	w8, w9
  4213f8:	b.eq	421410 <_obstack_memory_used@@Base+0x3274>  // b.none
  4213fc:	ldur	x8, [x29, #-16]
  421400:	ldrb	w9, [x8, #176]
  421404:	and	w9, w9, #0xfffffff7
  421408:	orr	w9, w9, #0x8
  42140c:	strb	w9, [x8, #176]
  421410:	ldur	w8, [x29, #-64]
  421414:	add	w8, w8, #0x1
  421418:	stur	w8, [x29, #-64]
  42141c:	ldur	w8, [x29, #-68]
  421420:	add	w8, w8, #0x1
  421424:	stur	w8, [x29, #-68]
  421428:	b	421384 <_obstack_memory_used@@Base+0x31e8>
  42142c:	ldur	w8, [x29, #-60]
  421430:	add	w8, w8, #0x1
  421434:	stur	w8, [x29, #-60]
  421438:	b	421374 <_obstack_memory_used@@Base+0x31d8>
  42143c:	ldur	x8, [x29, #-16]
  421440:	ldr	x8, [x8]
  421444:	mov	w9, #0x1                   	// #1
  421448:	str	w9, [sp, #12]
  42144c:	cbz	x8, 421464 <_obstack_memory_used@@Base+0x32c8>
  421450:	ldur	x8, [x29, #-16]
  421454:	ldr	x8, [x8, #64]
  421458:	cmp	x8, #0x0
  42145c:	cset	w9, eq  // eq = none
  421460:	str	w9, [sp, #12]
  421464:	ldr	w8, [sp, #12]
  421468:	and	w8, w8, #0x1
  42146c:	mov	w0, w8
  421470:	sxtw	x9, w0
  421474:	cbz	x9, 421484 <_obstack_memory_used@@Base+0x32e8>
  421478:	mov	w8, #0xc                   	// #12
  42147c:	stur	w8, [x29, #-4]
  421480:	b	421488 <_obstack_memory_used@@Base+0x32ec>
  421484:	stur	wzr, [x29, #-4]
  421488:	ldur	w0, [x29, #-4]
  42148c:	ldp	x29, x30, [sp, #224]
  421490:	add	sp, sp, #0xf0
  421494:	ret
  421498:	sub	sp, sp, #0x60
  42149c:	stp	x29, x30, [sp, #80]
  4214a0:	add	x29, sp, #0x50
  4214a4:	mov	x8, #0x98                  	// #152
  4214a8:	mov	w9, wzr
  4214ac:	mov	w10, #0x1                   	// #1
  4214b0:	stur	x0, [x29, #-16]
  4214b4:	stur	x1, [x29, #-24]
  4214b8:	stur	x2, [x29, #-32]
  4214bc:	str	x3, [sp, #40]
  4214c0:	and	w10, w4, w10
  4214c4:	strb	w10, [sp, #39]
  4214c8:	str	x5, [sp, #24]
  4214cc:	ldur	x0, [x29, #-16]
  4214d0:	mov	w1, w9
  4214d4:	mov	x2, x8
  4214d8:	bl	402960 <memset@plt>
  4214dc:	ldur	x0, [x29, #-24]
  4214e0:	ldur	x1, [x29, #-32]
  4214e4:	ldur	x2, [x29, #-16]
  4214e8:	ldr	x3, [sp, #40]
  4214ec:	ldrb	w9, [sp, #39]
  4214f0:	ldr	x5, [sp, #24]
  4214f4:	and	w4, w9, #0x1
  4214f8:	bl	422384 <_obstack_memory_used@@Base+0x41e8>
  4214fc:	ldur	x8, [x29, #-32]
  421500:	cmp	x8, #0x0
  421504:	cset	w9, le
  421508:	tbnz	w9, #0, 421548 <_obstack_memory_used@@Base+0x33ac>
  42150c:	ldur	x0, [x29, #-16]
  421510:	ldur	x8, [x29, #-32]
  421514:	add	x1, x8, #0x1
  421518:	bl	42248c <_obstack_memory_used@@Base+0x42f0>
  42151c:	str	w0, [sp, #20]
  421520:	ldr	w9, [sp, #20]
  421524:	cmp	w9, #0x0
  421528:	cset	w9, ne  // ne = any
  42152c:	and	w9, w9, #0x1
  421530:	mov	w1, w9
  421534:	sxtw	x8, w1
  421538:	cbz	x8, 421548 <_obstack_memory_used@@Base+0x33ac>
  42153c:	ldr	w8, [sp, #20]
  421540:	stur	w8, [x29, #-4]
  421544:	b	4216b4 <_obstack_memory_used@@Base+0x3518>
  421548:	ldur	x8, [x29, #-16]
  42154c:	ldrb	w9, [x8, #139]
  421550:	cbz	w9, 421564 <_obstack_memory_used@@Base+0x33c8>
  421554:	ldur	x8, [x29, #-16]
  421558:	ldr	x8, [x8, #8]
  42155c:	str	x8, [sp, #8]
  421560:	b	42156c <_obstack_memory_used@@Base+0x33d0>
  421564:	ldur	x8, [x29, #-24]
  421568:	str	x8, [sp, #8]
  42156c:	ldr	x8, [sp, #8]
  421570:	ldur	x9, [x29, #-16]
  421574:	str	x8, [x9, #8]
  421578:	ldrb	w10, [sp, #39]
  42157c:	tbnz	w10, #0, 421584 <_obstack_memory_used@@Base+0x33e8>
  421580:	b	421660 <_obstack_memory_used@@Base+0x34c4>
  421584:	ldr	x8, [sp, #24]
  421588:	ldr	w9, [x8, #180]
  42158c:	cmp	w9, #0x1
  421590:	b.le	421654 <_obstack_memory_used@@Base+0x34b8>
  421594:	ldur	x0, [x29, #-16]
  421598:	bl	42260c <_obstack_memory_used@@Base+0x4470>
  42159c:	str	w0, [sp, #20]
  4215a0:	ldr	w8, [sp, #20]
  4215a4:	cmp	w8, #0x0
  4215a8:	cset	w8, ne  // ne = any
  4215ac:	and	w8, w8, #0x1
  4215b0:	mov	w1, w8
  4215b4:	sxtw	x9, w1
  4215b8:	cbz	x9, 4215c8 <_obstack_memory_used@@Base+0x342c>
  4215bc:	ldr	w8, [sp, #20]
  4215c0:	stur	w8, [x29, #-4]
  4215c4:	b	4216b4 <_obstack_memory_used@@Base+0x3518>
  4215c8:	ldur	x8, [x29, #-16]
  4215cc:	ldr	x8, [x8, #56]
  4215d0:	ldur	x9, [x29, #-32]
  4215d4:	cmp	x8, x9
  4215d8:	b.lt	4215e0 <_obstack_memory_used@@Base+0x3444>  // b.tstop
  4215dc:	b	421650 <_obstack_memory_used@@Base+0x34b4>
  4215e0:	ldur	x8, [x29, #-16]
  4215e4:	ldr	x8, [x8, #64]
  4215e8:	ldur	x9, [x29, #-16]
  4215ec:	ldr	x9, [x9, #48]
  4215f0:	ldr	x10, [sp, #24]
  4215f4:	ldrsw	x10, [x10, #180]
  4215f8:	add	x9, x9, x10
  4215fc:	cmp	x8, x9
  421600:	b.le	421608 <_obstack_memory_used@@Base+0x346c>
  421604:	b	421650 <_obstack_memory_used@@Base+0x34b4>
  421608:	ldur	x0, [x29, #-16]
  42160c:	ldur	x8, [x29, #-16]
  421610:	ldr	x8, [x8, #64]
  421614:	mov	x9, #0x2                   	// #2
  421618:	mul	x1, x8, x9
  42161c:	bl	42248c <_obstack_memory_used@@Base+0x42f0>
  421620:	str	w0, [sp, #20]
  421624:	ldr	w10, [sp, #20]
  421628:	cmp	w10, #0x0
  42162c:	cset	w10, ne  // ne = any
  421630:	and	w10, w10, #0x1
  421634:	mov	w1, w10
  421638:	sxtw	x8, w1
  42163c:	cbz	x8, 42164c <_obstack_memory_used@@Base+0x34b0>
  421640:	ldr	w8, [sp, #20]
  421644:	stur	w8, [x29, #-4]
  421648:	b	4216b4 <_obstack_memory_used@@Base+0x3518>
  42164c:	b	421594 <_obstack_memory_used@@Base+0x33f8>
  421650:	b	42165c <_obstack_memory_used@@Base+0x34c0>
  421654:	ldur	x0, [x29, #-16]
  421658:	bl	4231f8 <_obstack_memory_used@@Base+0x505c>
  42165c:	b	4216b0 <_obstack_memory_used@@Base+0x3514>
  421660:	ldr	x8, [sp, #24]
  421664:	ldr	w9, [x8, #180]
  421668:	cmp	w9, #0x1
  42166c:	b.le	42167c <_obstack_memory_used@@Base+0x34e0>
  421670:	ldur	x0, [x29, #-16]
  421674:	bl	423304 <_obstack_memory_used@@Base+0x5168>
  421678:	b	4216b0 <_obstack_memory_used@@Base+0x3514>
  42167c:	ldr	x8, [sp, #40]
  421680:	cbz	x8, 421690 <_obstack_memory_used@@Base+0x34f4>
  421684:	ldur	x0, [x29, #-16]
  421688:	bl	423648 <_obstack_memory_used@@Base+0x54ac>
  42168c:	b	4216b0 <_obstack_memory_used@@Base+0x3514>
  421690:	ldur	x8, [x29, #-16]
  421694:	ldr	x8, [x8, #64]
  421698:	ldur	x9, [x29, #-16]
  42169c:	str	x8, [x9, #48]
  4216a0:	ldur	x8, [x29, #-16]
  4216a4:	ldr	x8, [x8, #64]
  4216a8:	ldur	x9, [x29, #-16]
  4216ac:	str	x8, [x9, #56]
  4216b0:	stur	wzr, [x29, #-4]
  4216b4:	ldur	w0, [x29, #-4]
  4216b8:	ldp	x29, x30, [sp, #80]
  4216bc:	add	sp, sp, #0x60
  4216c0:	ret
  4216c4:	sub	sp, sp, #0x40
  4216c8:	stp	x29, x30, [sp, #48]
  4216cc:	add	x29, sp, #0x30
  4216d0:	stur	x0, [x29, #-8]
  4216d4:	ldur	x8, [x29, #-8]
  4216d8:	ldr	x8, [x8]
  4216dc:	stur	x8, [x29, #-16]
  4216e0:	ldur	x8, [x29, #-16]
  4216e4:	ldr	x8, [x8, #112]
  4216e8:	str	x8, [sp, #24]
  4216ec:	ldr	x8, [sp, #24]
  4216f0:	cbz	x8, 421714 <_obstack_memory_used@@Base+0x3578>
  4216f4:	ldr	x8, [sp, #24]
  4216f8:	ldr	x8, [x8]
  4216fc:	str	x8, [sp, #16]
  421700:	ldr	x0, [sp, #24]
  421704:	bl	402b40 <free@plt>
  421708:	ldr	x8, [sp, #16]
  42170c:	str	x8, [sp, #24]
  421710:	b	4216ec <_obstack_memory_used@@Base+0x3550>
  421714:	ldur	x8, [x29, #-16]
  421718:	mov	x9, xzr
  42171c:	str	x9, [x8, #112]
  421720:	ldur	x8, [x29, #-16]
  421724:	mov	w10, #0xf                   	// #15
  421728:	str	w10, [x8, #128]
  42172c:	ldur	x8, [x29, #-16]
  421730:	str	x9, [x8, #104]
  421734:	ldur	x8, [x29, #-16]
  421738:	ldr	x0, [x8, #32]
  42173c:	str	x9, [sp, #8]
  421740:	bl	402b40 <free@plt>
  421744:	ldur	x8, [x29, #-16]
  421748:	ldr	x9, [sp, #8]
  42174c:	str	x9, [x8, #32]
  421750:	ldp	x29, x30, [sp, #48]
  421754:	add	sp, sp, #0x40
  421758:	ret
  42175c:	sub	sp, sp, #0x20
  421760:	stp	x29, x30, [sp, #16]
  421764:	add	x29, sp, #0x10
  421768:	str	x0, [sp, #8]
  42176c:	ldr	x8, [sp, #8]
  421770:	ldr	x0, [x8, #16]
  421774:	bl	402b40 <free@plt>
  421778:	ldr	x8, [sp, #8]
  42177c:	ldr	x0, [x8, #24]
  421780:	bl	402b40 <free@plt>
  421784:	ldr	x8, [sp, #8]
  421788:	ldrb	w9, [x8, #139]
  42178c:	cbz	w9, 42179c <_obstack_memory_used@@Base+0x3600>
  421790:	ldr	x8, [sp, #8]
  421794:	ldr	x0, [x8, #8]
  421798:	bl	402b40 <free@plt>
  42179c:	ldp	x29, x30, [sp, #16]
  4217a0:	add	sp, sp, #0x20
  4217a4:	ret
  4217a8:	sub	sp, sp, #0x80
  4217ac:	stp	x29, x30, [sp, #112]
  4217b0:	add	x29, sp, #0x70
  4217b4:	mov	x8, xzr
  4217b8:	add	x9, sp, #0x18
  4217bc:	stur	x0, [x29, #-16]
  4217c0:	stur	x1, [x29, #-24]
  4217c4:	stur	x2, [x29, #-32]
  4217c8:	stur	x3, [x29, #-40]
  4217cc:	ldur	x10, [x29, #-24]
  4217d0:	ldr	x10, [x10]
  4217d4:	stur	x10, [x29, #-48]
  4217d8:	ldur	x10, [x29, #-32]
  4217dc:	ldur	x11, [x29, #-48]
  4217e0:	str	x10, [x11, #216]
  4217e4:	ldur	x1, [x29, #-16]
  4217e8:	ldur	x10, [x29, #-32]
  4217ec:	orr	x2, x10, #0x800000
  4217f0:	mov	x0, x9
  4217f4:	str	x8, [sp, #16]
  4217f8:	str	x9, [sp, #8]
  4217fc:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  421800:	ldur	x0, [x29, #-16]
  421804:	ldur	x1, [x29, #-24]
  421808:	ldur	x3, [x29, #-32]
  42180c:	ldur	x5, [x29, #-40]
  421810:	ldr	x2, [sp, #8]
  421814:	ldr	x4, [sp, #16]
  421818:	bl	423764 <_obstack_memory_used@@Base+0x55c8>
  42181c:	str	x0, [sp, #56]
  421820:	ldur	x8, [x29, #-40]
  421824:	ldr	w12, [x8]
  421828:	mov	w13, #0x0                   	// #0
  42182c:	str	w13, [sp, #4]
  421830:	cbz	w12, 421844 <_obstack_memory_used@@Base+0x36a8>
  421834:	ldr	x8, [sp, #56]
  421838:	cmp	x8, #0x0
  42183c:	cset	w9, eq  // eq = none
  421840:	str	w9, [sp, #4]
  421844:	ldr	w8, [sp, #4]
  421848:	and	w8, w8, #0x1
  42184c:	mov	w0, w8
  421850:	sxtw	x9, w0
  421854:	cbz	x9, 421864 <_obstack_memory_used@@Base+0x36c8>
  421858:	mov	x8, xzr
  42185c:	stur	x8, [x29, #-8]
  421860:	b	421900 <_obstack_memory_used@@Base+0x3764>
  421864:	ldur	x0, [x29, #-48]
  421868:	mov	x8, xzr
  42186c:	mov	x1, x8
  421870:	mov	x2, x8
  421874:	mov	w3, #0x2                   	// #2
  421878:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  42187c:	str	x0, [sp, #48]
  421880:	ldr	x8, [sp, #56]
  421884:	cbz	x8, 4218a4 <_obstack_memory_used@@Base+0x3708>
  421888:	ldur	x0, [x29, #-48]
  42188c:	ldr	x1, [sp, #56]
  421890:	ldr	x2, [sp, #48]
  421894:	mov	w3, #0x10                  	// #16
  421898:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  42189c:	str	x0, [sp, #40]
  4218a0:	b	4218ac <_obstack_memory_used@@Base+0x3710>
  4218a4:	ldr	x8, [sp, #48]
  4218a8:	str	x8, [sp, #40]
  4218ac:	ldr	x8, [sp, #48]
  4218b0:	mov	w9, #0x1                   	// #1
  4218b4:	str	w9, [sp]
  4218b8:	cbz	x8, 4218cc <_obstack_memory_used@@Base+0x3730>
  4218bc:	ldr	x8, [sp, #40]
  4218c0:	cmp	x8, #0x0
  4218c4:	cset	w9, eq  // eq = none
  4218c8:	str	w9, [sp]
  4218cc:	ldr	w8, [sp]
  4218d0:	and	w8, w8, #0x1
  4218d4:	mov	w0, w8
  4218d8:	sxtw	x9, w0
  4218dc:	cbz	x9, 4218f8 <_obstack_memory_used@@Base+0x375c>
  4218e0:	ldur	x8, [x29, #-40]
  4218e4:	mov	w9, #0xc                   	// #12
  4218e8:	str	w9, [x8]
  4218ec:	mov	x8, xzr
  4218f0:	stur	x8, [x29, #-8]
  4218f4:	b	421900 <_obstack_memory_used@@Base+0x3764>
  4218f8:	ldr	x8, [sp, #40]
  4218fc:	stur	x8, [x29, #-8]
  421900:	ldur	x0, [x29, #-8]
  421904:	ldp	x29, x30, [sp, #112]
  421908:	add	sp, sp, #0x80
  42190c:	ret
  421910:	sub	sp, sp, #0x50
  421914:	stp	x29, x30, [sp, #64]
  421918:	add	x29, sp, #0x40
  42191c:	mov	x8, #0x8                   	// #8
  421920:	mov	x9, #0x18                  	// #24
  421924:	stur	x0, [x29, #-16]
  421928:	ldur	x10, [x29, #-16]
  42192c:	ldr	x10, [x10]
  421930:	stur	x10, [x29, #-24]
  421934:	ldur	x10, [x29, #-24]
  421938:	ldr	x10, [x10, #8]
  42193c:	mul	x0, x10, x8
  421940:	str	x8, [sp, #16]
  421944:	str	x9, [sp, #8]
  421948:	bl	402890 <malloc@plt>
  42194c:	ldur	x8, [x29, #-24]
  421950:	str	x0, [x8, #24]
  421954:	ldur	x8, [x29, #-24]
  421958:	ldr	x8, [x8, #8]
  42195c:	ldr	x9, [sp, #16]
  421960:	mul	x0, x8, x9
  421964:	bl	402890 <malloc@plt>
  421968:	ldur	x8, [x29, #-24]
  42196c:	str	x0, [x8, #32]
  421970:	ldur	x8, [x29, #-24]
  421974:	ldr	x8, [x8, #8]
  421978:	ldr	x9, [sp, #8]
  42197c:	mul	x0, x8, x9
  421980:	bl	402890 <malloc@plt>
  421984:	ldur	x8, [x29, #-24]
  421988:	str	x0, [x8, #40]
  42198c:	ldur	x8, [x29, #-24]
  421990:	ldr	x8, [x8, #8]
  421994:	ldr	x9, [sp, #8]
  421998:	mul	x0, x8, x9
  42199c:	bl	402890 <malloc@plt>
  4219a0:	ldur	x8, [x29, #-24]
  4219a4:	str	x0, [x8, #48]
  4219a8:	ldur	x8, [x29, #-24]
  4219ac:	ldr	x8, [x8, #24]
  4219b0:	mov	w11, #0x1                   	// #1
  4219b4:	str	w11, [sp, #4]
  4219b8:	cbz	x8, 4219f8 <_obstack_memory_used@@Base+0x385c>
  4219bc:	ldur	x8, [x29, #-24]
  4219c0:	ldr	x8, [x8, #32]
  4219c4:	mov	w9, #0x1                   	// #1
  4219c8:	str	w9, [sp, #4]
  4219cc:	cbz	x8, 4219f8 <_obstack_memory_used@@Base+0x385c>
  4219d0:	ldur	x8, [x29, #-24]
  4219d4:	ldr	x8, [x8, #40]
  4219d8:	mov	w9, #0x1                   	// #1
  4219dc:	str	w9, [sp, #4]
  4219e0:	cbz	x8, 4219f8 <_obstack_memory_used@@Base+0x385c>
  4219e4:	ldur	x8, [x29, #-24]
  4219e8:	ldr	x8, [x8, #48]
  4219ec:	cmp	x8, #0x0
  4219f0:	cset	w9, eq  // eq = none
  4219f4:	str	w9, [sp, #4]
  4219f8:	ldr	w8, [sp, #4]
  4219fc:	and	w8, w8, #0x1
  421a00:	mov	w0, w8
  421a04:	sxtw	x9, w0
  421a08:	cbz	x9, 421a18 <_obstack_memory_used@@Base+0x387c>
  421a0c:	mov	w8, #0xc                   	// #12
  421a10:	stur	w8, [x29, #-4]
  421a14:	b	421cd0 <_obstack_memory_used@@Base+0x3b34>
  421a18:	ldur	x8, [x29, #-16]
  421a1c:	ldr	x8, [x8, #48]
  421a20:	mov	x9, #0x8                   	// #8
  421a24:	mul	x0, x8, x9
  421a28:	bl	402890 <malloc@plt>
  421a2c:	ldur	x8, [x29, #-24]
  421a30:	str	x0, [x8, #224]
  421a34:	ldur	x8, [x29, #-24]
  421a38:	ldr	x8, [x8, #224]
  421a3c:	cbz	x8, 421b08 <_obstack_memory_used@@Base+0x396c>
  421a40:	str	xzr, [sp, #24]
  421a44:	ldr	x8, [sp, #24]
  421a48:	ldur	x9, [x29, #-16]
  421a4c:	ldr	x9, [x9, #48]
  421a50:	cmp	x8, x9
  421a54:	b.cs	421a7c <_obstack_memory_used@@Base+0x38e0>  // b.hs, b.nlast
  421a58:	ldr	x8, [sp, #24]
  421a5c:	ldur	x9, [x29, #-24]
  421a60:	ldr	x9, [x9, #224]
  421a64:	ldr	x10, [sp, #24]
  421a68:	str	x8, [x9, x10, lsl #3]
  421a6c:	ldr	x8, [sp, #24]
  421a70:	add	x8, x8, #0x1
  421a74:	str	x8, [sp, #24]
  421a78:	b	421a44 <_obstack_memory_used@@Base+0x38a8>
  421a7c:	ldur	x8, [x29, #-24]
  421a80:	ldr	x0, [x8, #104]
  421a84:	ldur	x2, [x29, #-24]
  421a88:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x9e64>
  421a8c:	add	x1, x1, #0xbb4
  421a90:	bl	428ab0 <_obstack_memory_used@@Base+0xa914>
  421a94:	str	xzr, [sp, #24]
  421a98:	ldr	x8, [sp, #24]
  421a9c:	ldur	x9, [x29, #-16]
  421aa0:	ldr	x9, [x9, #48]
  421aa4:	cmp	x8, x9
  421aa8:	b.cs	421adc <_obstack_memory_used@@Base+0x3940>  // b.hs, b.nlast
  421aac:	ldur	x8, [x29, #-24]
  421ab0:	ldr	x8, [x8, #224]
  421ab4:	ldr	x9, [sp, #24]
  421ab8:	ldr	x8, [x8, x9, lsl #3]
  421abc:	ldr	x9, [sp, #24]
  421ac0:	cmp	x8, x9
  421ac4:	b.eq	421acc <_obstack_memory_used@@Base+0x3930>  // b.none
  421ac8:	b	421adc <_obstack_memory_used@@Base+0x3940>
  421acc:	ldr	x8, [sp, #24]
  421ad0:	add	x8, x8, #0x1
  421ad4:	str	x8, [sp, #24]
  421ad8:	b	421a98 <_obstack_memory_used@@Base+0x38fc>
  421adc:	ldr	x8, [sp, #24]
  421ae0:	ldur	x9, [x29, #-16]
  421ae4:	ldr	x9, [x9, #48]
  421ae8:	cmp	x8, x9
  421aec:	b.ne	421b08 <_obstack_memory_used@@Base+0x396c>  // b.any
  421af0:	ldur	x8, [x29, #-24]
  421af4:	ldr	x0, [x8, #224]
  421af8:	bl	402b40 <free@plt>
  421afc:	ldur	x8, [x29, #-24]
  421b00:	mov	x9, xzr
  421b04:	str	x9, [x8, #224]
  421b08:	ldur	x8, [x29, #-24]
  421b0c:	ldr	x0, [x8, #104]
  421b10:	ldur	x2, [x29, #-16]
  421b14:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x9e64>
  421b18:	add	x1, x1, #0xd0c
  421b1c:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  421b20:	stur	w0, [x29, #-28]
  421b24:	ldur	w9, [x29, #-28]
  421b28:	cmp	w9, #0x0
  421b2c:	cset	w9, ne  // ne = any
  421b30:	and	w9, w9, #0x1
  421b34:	mov	w1, w9
  421b38:	sxtw	x8, w1
  421b3c:	cbz	x8, 421b4c <_obstack_memory_used@@Base+0x39b0>
  421b40:	ldur	w8, [x29, #-28]
  421b44:	stur	w8, [x29, #-4]
  421b48:	b	421cd0 <_obstack_memory_used@@Base+0x3b34>
  421b4c:	ldur	x8, [x29, #-24]
  421b50:	ldr	x0, [x8, #104]
  421b54:	ldur	x2, [x29, #-24]
  421b58:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x9e64>
  421b5c:	add	x1, x1, #0xdf4
  421b60:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  421b64:	stur	w0, [x29, #-28]
  421b68:	ldur	w9, [x29, #-28]
  421b6c:	cmp	w9, #0x0
  421b70:	cset	w9, ne  // ne = any
  421b74:	and	w9, w9, #0x1
  421b78:	mov	w1, w9
  421b7c:	sxtw	x8, w1
  421b80:	cbz	x8, 421b90 <_obstack_memory_used@@Base+0x39f4>
  421b84:	ldur	w8, [x29, #-28]
  421b88:	stur	w8, [x29, #-4]
  421b8c:	b	421cd0 <_obstack_memory_used@@Base+0x3b34>
  421b90:	ldur	x8, [x29, #-24]
  421b94:	ldr	x0, [x8, #104]
  421b98:	ldur	x2, [x29, #-24]
  421b9c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x9e64>
  421ba0:	add	x1, x1, #0xf08
  421ba4:	bl	428ab0 <_obstack_memory_used@@Base+0xa914>
  421ba8:	ldur	x8, [x29, #-24]
  421bac:	ldr	x8, [x8, #104]
  421bb0:	ldur	x2, [x29, #-24]
  421bb4:	mov	x0, x8
  421bb8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x9e64>
  421bbc:	add	x1, x1, #0xfd4
  421bc0:	bl	428ab0 <_obstack_memory_used@@Base+0xa914>
  421bc4:	stur	w0, [x29, #-28]
  421bc8:	ldur	w9, [x29, #-28]
  421bcc:	cmp	w9, #0x0
  421bd0:	cset	w9, ne  // ne = any
  421bd4:	and	w9, w9, #0x1
  421bd8:	mov	w1, w9
  421bdc:	sxtw	x8, w1
  421be0:	cbz	x8, 421bf0 <_obstack_memory_used@@Base+0x3a54>
  421be4:	ldur	w8, [x29, #-28]
  421be8:	stur	w8, [x29, #-4]
  421bec:	b	421cd0 <_obstack_memory_used@@Base+0x3b34>
  421bf0:	ldur	x0, [x29, #-24]
  421bf4:	bl	4291fc <_obstack_memory_used@@Base+0xb060>
  421bf8:	stur	w0, [x29, #-28]
  421bfc:	ldur	w8, [x29, #-28]
  421c00:	cmp	w8, #0x0
  421c04:	cset	w8, ne  // ne = any
  421c08:	and	w8, w8, #0x1
  421c0c:	mov	w1, w8
  421c10:	sxtw	x9, w1
  421c14:	cbz	x9, 421c24 <_obstack_memory_used@@Base+0x3a88>
  421c18:	ldur	w8, [x29, #-28]
  421c1c:	stur	w8, [x29, #-4]
  421c20:	b	421cd0 <_obstack_memory_used@@Base+0x3b34>
  421c24:	ldur	x8, [x29, #-16]
  421c28:	ldrb	w9, [x8, #56]
  421c2c:	mov	w10, #0x4                   	// #4
  421c30:	lsr	w9, w9, w10
  421c34:	and	w9, w9, #0x1
  421c38:	and	w9, w9, #0xff
  421c3c:	cbnz	w9, 421c68 <_obstack_memory_used@@Base+0x3acc>
  421c40:	ldur	x8, [x29, #-16]
  421c44:	ldr	x8, [x8, #48]
  421c48:	cmp	x8, #0x0
  421c4c:	cset	w9, ls  // ls = plast
  421c50:	tbnz	w9, #0, 421c68 <_obstack_memory_used@@Base+0x3acc>
  421c54:	ldur	x8, [x29, #-24]
  421c58:	ldrb	w9, [x8, #176]
  421c5c:	and	w9, w9, #0x1
  421c60:	and	w9, w9, #0xff
  421c64:	cbnz	w9, 421c74 <_obstack_memory_used@@Base+0x3ad8>
  421c68:	ldur	x8, [x29, #-24]
  421c6c:	ldr	x8, [x8, #152]
  421c70:	cbz	x8, 421cc8 <_obstack_memory_used@@Base+0x3b2c>
  421c74:	ldur	x8, [x29, #-24]
  421c78:	ldr	x8, [x8, #16]
  421c7c:	mov	x9, #0x18                  	// #24
  421c80:	mul	x0, x8, x9
  421c84:	bl	402890 <malloc@plt>
  421c88:	ldur	x8, [x29, #-24]
  421c8c:	str	x0, [x8, #56]
  421c90:	ldur	x8, [x29, #-24]
  421c94:	ldr	x8, [x8, #56]
  421c98:	cmp	x8, #0x0
  421c9c:	cset	w10, eq  // eq = none
  421ca0:	and	w10, w10, #0x1
  421ca4:	mov	w0, w10
  421ca8:	sxtw	x8, w0
  421cac:	cbz	x8, 421cbc <_obstack_memory_used@@Base+0x3b20>
  421cb0:	mov	w8, #0xc                   	// #12
  421cb4:	stur	w8, [x29, #-4]
  421cb8:	b	421cd0 <_obstack_memory_used@@Base+0x3b34>
  421cbc:	ldur	x0, [x29, #-24]
  421cc0:	bl	429348 <_obstack_memory_used@@Base+0xb1ac>
  421cc4:	stur	w0, [x29, #-28]
  421cc8:	ldur	w8, [x29, #-28]
  421ccc:	stur	w8, [x29, #-4]
  421cd0:	ldur	w0, [x29, #-4]
  421cd4:	ldp	x29, x30, [sp, #64]
  421cd8:	add	sp, sp, #0x50
  421cdc:	ret
  421ce0:	sub	sp, sp, #0x40
  421ce4:	stp	x29, x30, [sp, #48]
  421ce8:	add	x29, sp, #0x30
  421cec:	mov	w8, #0x0                   	// #0
  421cf0:	stur	x0, [x29, #-8]
  421cf4:	sturb	w8, [x29, #-21]
  421cf8:	sturb	w8, [x29, #-22]
  421cfc:	stur	xzr, [x29, #-16]
  421d00:	ldur	x8, [x29, #-16]
  421d04:	ldur	x9, [x29, #-8]
  421d08:	ldr	x9, [x9, #16]
  421d0c:	cmp	x8, x9
  421d10:	b.cs	421e8c <_obstack_memory_used@@Base+0x3cf0>  // b.hs, b.nlast
  421d14:	ldur	x8, [x29, #-8]
  421d18:	ldr	x8, [x8]
  421d1c:	ldur	x9, [x29, #-16]
  421d20:	mov	x10, #0x10                  	// #16
  421d24:	mul	x9, x10, x9
  421d28:	add	x8, x8, x9
  421d2c:	ldr	w11, [x8, #8]
  421d30:	and	w11, w11, #0xff
  421d34:	subs	w11, w11, #0x1
  421d38:	mov	w8, w11
  421d3c:	ubfx	x8, x8, #0, #32
  421d40:	cmp	x8, #0xb
  421d44:	str	x8, [sp, #8]
  421d48:	b.hi	421e78 <_obstack_memory_used@@Base+0x3cdc>  // b.pmore
  421d4c:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  421d50:	add	x8, x8, #0xa9c
  421d54:	ldr	x11, [sp, #8]
  421d58:	ldrsw	x10, [x8, x11, lsl #2]
  421d5c:	add	x9, x8, x10
  421d60:	br	x9
  421d64:	ldur	x8, [x29, #-8]
  421d68:	ldr	x8, [x8]
  421d6c:	ldur	x9, [x29, #-16]
  421d70:	mov	x10, #0x10                  	// #16
  421d74:	mul	x9, x10, x9
  421d78:	ldrb	w11, [x8, x9]
  421d7c:	cmp	w11, #0x80
  421d80:	b.lt	421d8c <_obstack_memory_used@@Base+0x3bf0>  // b.tstop
  421d84:	mov	w8, #0x1                   	// #1
  421d88:	sturb	w8, [x29, #-21]
  421d8c:	b	421e7c <_obstack_memory_used@@Base+0x3ce0>
  421d90:	ldur	x8, [x29, #-8]
  421d94:	ldr	x8, [x8]
  421d98:	ldur	x9, [x29, #-16]
  421d9c:	mov	x10, #0x10                  	// #16
  421da0:	mul	x9, x10, x9
  421da4:	ldr	w11, [x8, x9]
  421da8:	cmp	w11, #0x10
  421dac:	str	w11, [sp, #4]
  421db0:	b.eq	421df0 <_obstack_memory_used@@Base+0x3c54>  // b.none
  421db4:	b	421db8 <_obstack_memory_used@@Base+0x3c1c>
  421db8:	ldr	w8, [sp, #4]
  421dbc:	cmp	w8, #0x20
  421dc0:	b.eq	421df0 <_obstack_memory_used@@Base+0x3c54>  // b.none
  421dc4:	b	421dc8 <_obstack_memory_used@@Base+0x3c2c>
  421dc8:	ldr	w8, [sp, #4]
  421dcc:	cmp	w8, #0x40
  421dd0:	b.eq	421df0 <_obstack_memory_used@@Base+0x3c54>  // b.none
  421dd4:	b	421dd8 <_obstack_memory_used@@Base+0x3c3c>
  421dd8:	ldr	w8, [sp, #4]
  421ddc:	cmp	w8, #0x80
  421de0:	cset	w9, eq  // eq = none
  421de4:	eor	w9, w9, #0x1
  421de8:	tbnz	w9, #0, 421df4 <_obstack_memory_used@@Base+0x3c58>
  421dec:	b	421df0 <_obstack_memory_used@@Base+0x3c54>
  421df0:	b	421df8 <_obstack_memory_used@@Base+0x3c5c>
  421df4:	b	421ff0 <_obstack_memory_used@@Base+0x3e54>
  421df8:	b	421e7c <_obstack_memory_used@@Base+0x3ce0>
  421dfc:	mov	w8, #0x1                   	// #1
  421e00:	sturb	w8, [x29, #-22]
  421e04:	b	421e7c <_obstack_memory_used@@Base+0x3ce0>
  421e08:	b	421e7c <_obstack_memory_used@@Base+0x3ce0>
  421e0c:	b	421ff0 <_obstack_memory_used@@Base+0x3e54>
  421e10:	str	wzr, [sp, #20]
  421e14:	mov	w8, #0x2                   	// #2
  421e18:	stur	w8, [x29, #-20]
  421e1c:	ldur	w8, [x29, #-20]
  421e20:	cmp	w8, #0x4
  421e24:	b.ge	421e74 <_obstack_memory_used@@Base+0x3cd8>  // b.tcont
  421e28:	ldur	x8, [x29, #-8]
  421e2c:	ldr	x8, [x8]
  421e30:	ldur	x9, [x29, #-16]
  421e34:	mov	x10, #0x10                  	// #16
  421e38:	mul	x9, x10, x9
  421e3c:	add	x8, x8, x9
  421e40:	ldr	x8, [x8]
  421e44:	ldursw	x9, [x29, #-20]
  421e48:	ldr	x8, [x8, x9, lsl #3]
  421e4c:	ldr	w11, [sp, #20]
  421e50:	mov	w9, w11
  421e54:	lsr	x8, x8, x9
  421e58:	cbz	x8, 421e60 <_obstack_memory_used@@Base+0x3cc4>
  421e5c:	b	421ff0 <_obstack_memory_used@@Base+0x3e54>
  421e60:	str	wzr, [sp, #20]
  421e64:	ldur	w8, [x29, #-20]
  421e68:	add	w8, w8, #0x1
  421e6c:	stur	w8, [x29, #-20]
  421e70:	b	421e1c <_obstack_memory_used@@Base+0x3c80>
  421e74:	b	421e7c <_obstack_memory_used@@Base+0x3ce0>
  421e78:	bl	402a70 <abort@plt>
  421e7c:	ldur	x8, [x29, #-16]
  421e80:	add	x8, x8, #0x1
  421e84:	stur	x8, [x29, #-16]
  421e88:	b	421d00 <_obstack_memory_used@@Base+0x3b64>
  421e8c:	ldurb	w8, [x29, #-21]
  421e90:	tbnz	w8, #0, 421ea0 <_obstack_memory_used@@Base+0x3d04>
  421e94:	ldurb	w8, [x29, #-22]
  421e98:	tbnz	w8, #0, 421ea0 <_obstack_memory_used@@Base+0x3d04>
  421e9c:	b	421f88 <_obstack_memory_used@@Base+0x3dec>
  421ea0:	stur	xzr, [x29, #-16]
  421ea4:	ldur	x8, [x29, #-16]
  421ea8:	ldur	x9, [x29, #-8]
  421eac:	ldr	x9, [x9, #16]
  421eb0:	cmp	x8, x9
  421eb4:	b.cs	421f88 <_obstack_memory_used@@Base+0x3dec>  // b.hs, b.nlast
  421eb8:	ldur	x8, [x29, #-8]
  421ebc:	ldr	x8, [x8]
  421ec0:	ldur	x9, [x29, #-16]
  421ec4:	mov	x10, #0x10                  	// #16
  421ec8:	mul	x9, x10, x9
  421ecc:	add	x8, x8, x9
  421ed0:	ldr	w11, [x8, #8]
  421ed4:	and	w11, w11, #0xff
  421ed8:	cmp	w11, #0x1
  421edc:	b.ne	421f28 <_obstack_memory_used@@Base+0x3d8c>  // b.any
  421ee0:	ldur	x8, [x29, #-8]
  421ee4:	ldr	x8, [x8]
  421ee8:	ldur	x9, [x29, #-16]
  421eec:	mov	x10, #0x10                  	// #16
  421ef0:	mul	x9, x10, x9
  421ef4:	ldrb	w11, [x8, x9]
  421ef8:	cmp	w11, #0x80
  421efc:	b.lt	421f28 <_obstack_memory_used@@Base+0x3d8c>  // b.tstop
  421f00:	ldur	x8, [x29, #-8]
  421f04:	ldr	x8, [x8]
  421f08:	ldur	x9, [x29, #-16]
  421f0c:	mov	x10, #0x10                  	// #16
  421f10:	mul	x9, x10, x9
  421f14:	add	x8, x8, x9
  421f18:	ldr	w11, [x8, #8]
  421f1c:	and	w11, w11, #0xffdfffff
  421f20:	str	w11, [x8, #8]
  421f24:	b	421f78 <_obstack_memory_used@@Base+0x3ddc>
  421f28:	ldur	x8, [x29, #-8]
  421f2c:	ldr	x8, [x8]
  421f30:	ldur	x9, [x29, #-16]
  421f34:	mov	x10, #0x10                  	// #16
  421f38:	mul	x9, x10, x9
  421f3c:	add	x8, x8, x9
  421f40:	ldr	w11, [x8, #8]
  421f44:	and	w11, w11, #0xff
  421f48:	cmp	w11, #0x5
  421f4c:	b.ne	421f78 <_obstack_memory_used@@Base+0x3ddc>  // b.any
  421f50:	ldur	x8, [x29, #-8]
  421f54:	ldr	x8, [x8]
  421f58:	ldur	x9, [x29, #-16]
  421f5c:	mov	x10, #0x10                  	// #16
  421f60:	mul	x9, x10, x9
  421f64:	add	x8, x8, x9
  421f68:	ldr	w11, [x8, #8]
  421f6c:	and	w11, w11, #0xffffff00
  421f70:	orr	w11, w11, #0x7
  421f74:	str	w11, [x8, #8]
  421f78:	ldur	x8, [x29, #-16]
  421f7c:	add	x8, x8, #0x1
  421f80:	stur	x8, [x29, #-16]
  421f84:	b	421ea4 <_obstack_memory_used@@Base+0x3d08>
  421f88:	ldur	x8, [x29, #-8]
  421f8c:	mov	w9, #0x1                   	// #1
  421f90:	str	w9, [x8, #180]
  421f94:	ldur	x8, [x29, #-8]
  421f98:	ldrb	w9, [x8, #176]
  421f9c:	and	w9, w9, #0xfffffffb
  421fa0:	strb	w9, [x8, #176]
  421fa4:	ldur	x8, [x29, #-8]
  421fa8:	ldr	x8, [x8, #152]
  421fac:	cmp	x8, #0x0
  421fb0:	cset	w9, gt
  421fb4:	mov	w10, #0x1                   	// #1
  421fb8:	str	w10, [sp]
  421fbc:	tbnz	w9, #0, 421fc8 <_obstack_memory_used@@Base+0x3e2c>
  421fc0:	ldurb	w8, [x29, #-22]
  421fc4:	str	w8, [sp]
  421fc8:	ldr	w8, [sp]
  421fcc:	mov	w9, #0x1                   	// #1
  421fd0:	and	w8, w8, #0x1
  421fd4:	ldur	x10, [x29, #-8]
  421fd8:	ldrb	w11, [x10, #176]
  421fdc:	and	w8, w8, #0x1
  421fe0:	lsl	w8, w8, w9
  421fe4:	and	w9, w11, #0xfffffffd
  421fe8:	orr	w8, w9, w8
  421fec:	strb	w8, [x10, #176]
  421ff0:	ldp	x29, x30, [sp, #48]
  421ff4:	add	sp, sp, #0x40
  421ff8:	ret
  421ffc:	sub	sp, sp, #0xa0
  422000:	stp	x29, x30, [sp, #144]
  422004:	add	x29, sp, #0x90
  422008:	sub	x8, x29, #0x40
  42200c:	stur	x0, [x29, #-16]
  422010:	ldur	x9, [x29, #-16]
  422014:	ldr	x9, [x9, #104]
  422018:	mov	x10, #0x18                  	// #24
  42201c:	ldr	x9, [x9, #24]
  422020:	ldr	x9, [x9, #56]
  422024:	stur	x9, [x29, #-24]
  422028:	ldur	x9, [x29, #-24]
  42202c:	ldur	x11, [x29, #-16]
  422030:	str	x9, [x11, #144]
  422034:	ldur	x9, [x29, #-16]
  422038:	ldr	x9, [x9, #48]
  42203c:	ldur	x11, [x29, #-24]
  422040:	mul	x10, x10, x11
  422044:	add	x1, x9, x10
  422048:	mov	x0, x8
  42204c:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  422050:	stur	w0, [x29, #-36]
  422054:	ldur	w12, [x29, #-36]
  422058:	cmp	w12, #0x0
  42205c:	cset	w12, ne  // ne = any
  422060:	and	w12, w12, #0x1
  422064:	mov	w1, w12
  422068:	sxtw	x8, w1
  42206c:	cbz	x8, 42207c <_obstack_memory_used@@Base+0x3ee0>
  422070:	ldur	w8, [x29, #-36]
  422074:	stur	w8, [x29, #-4]
  422078:	b	422374 <_obstack_memory_used@@Base+0x41d8>
  42207c:	ldur	x8, [x29, #-16]
  422080:	ldr	x8, [x8, #152]
  422084:	cmp	x8, #0x0
  422088:	cset	w9, le
  42208c:	tbnz	w9, #0, 422218 <_obstack_memory_used@@Base+0x407c>
  422090:	stur	xzr, [x29, #-32]
  422094:	ldur	x8, [x29, #-32]
  422098:	ldur	x9, [x29, #-56]
  42209c:	cmp	x8, x9
  4220a0:	b.ge	422218 <_obstack_memory_used@@Base+0x407c>  // b.tcont
  4220a4:	mov	x8, #0x10                  	// #16
  4220a8:	sub	x9, x29, #0x40
  4220ac:	ldr	x9, [x9, #16]
  4220b0:	ldur	x10, [x29, #-32]
  4220b4:	ldr	x9, [x9, x10, lsl #3]
  4220b8:	str	x9, [sp, #72]
  4220bc:	ldur	x9, [x29, #-16]
  4220c0:	ldr	x9, [x9]
  4220c4:	ldr	x10, [sp, #72]
  4220c8:	mul	x8, x8, x10
  4220cc:	add	x8, x9, x8
  4220d0:	ldr	w11, [x8, #8]
  4220d4:	and	w11, w11, #0xff
  4220d8:	str	w11, [sp, #68]
  4220dc:	ldr	w11, [sp, #68]
  4220e0:	cmp	w11, #0x4
  4220e4:	b.eq	4220ec <_obstack_memory_used@@Base+0x3f50>  // b.none
  4220e8:	b	422208 <_obstack_memory_used@@Base+0x406c>
  4220ec:	str	xzr, [sp, #56]
  4220f0:	ldr	x8, [sp, #56]
  4220f4:	ldur	x9, [x29, #-56]
  4220f8:	cmp	x8, x9
  4220fc:	b.ge	422178 <_obstack_memory_used@@Base+0x3fdc>  // b.tcont
  422100:	ldur	x8, [x29, #-16]
  422104:	ldr	x8, [x8]
  422108:	mov	x9, #0x10                  	// #16
  42210c:	sub	x10, x29, #0x40
  422110:	ldr	x10, [x10, #16]
  422114:	ldr	x11, [sp, #56]
  422118:	ldr	x10, [x10, x11, lsl #3]
  42211c:	mul	x9, x9, x10
  422120:	add	x8, x8, x9
  422124:	str	x8, [sp, #48]
  422128:	ldr	x8, [sp, #48]
  42212c:	ldr	w12, [x8, #8]
  422130:	and	w12, w12, #0xff
  422134:	cmp	w12, #0x9
  422138:	b.ne	422168 <_obstack_memory_used@@Base+0x3fcc>  // b.any
  42213c:	ldr	x8, [sp, #48]
  422140:	ldr	x8, [x8]
  422144:	ldur	x9, [x29, #-16]
  422148:	ldr	x9, [x9]
  42214c:	ldr	x10, [sp, #72]
  422150:	mov	x11, #0x10                  	// #16
  422154:	mul	x10, x11, x10
  422158:	ldr	x9, [x9, x10]
  42215c:	cmp	x8, x9
  422160:	b.ne	422168 <_obstack_memory_used@@Base+0x3fcc>  // b.any
  422164:	b	422178 <_obstack_memory_used@@Base+0x3fdc>
  422168:	ldr	x8, [sp, #56]
  42216c:	add	x8, x8, #0x1
  422170:	str	x8, [sp, #56]
  422174:	b	4220f0 <_obstack_memory_used@@Base+0x3f54>
  422178:	ldr	x8, [sp, #56]
  42217c:	ldur	x9, [x29, #-56]
  422180:	cmp	x8, x9
  422184:	b.ne	42218c <_obstack_memory_used@@Base+0x3ff0>  // b.any
  422188:	b	422208 <_obstack_memory_used@@Base+0x406c>
  42218c:	ldr	w8, [sp, #68]
  422190:	cmp	w8, #0x4
  422194:	b.ne	422208 <_obstack_memory_used@@Base+0x406c>  // b.any
  422198:	ldur	x8, [x29, #-16]
  42219c:	ldr	x8, [x8, #40]
  4221a0:	ldr	x9, [sp, #72]
  4221a4:	mov	x10, #0x18                  	// #24
  4221a8:	mul	x9, x10, x9
  4221ac:	add	x8, x8, x9
  4221b0:	ldr	x8, [x8, #16]
  4221b4:	ldr	x8, [x8]
  4221b8:	str	x8, [sp, #40]
  4221bc:	ldr	x1, [sp, #40]
  4221c0:	sub	x0, x29, #0x40
  4221c4:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  4221c8:	cbnz	x0, 422208 <_obstack_memory_used@@Base+0x406c>
  4221cc:	ldur	x8, [x29, #-16]
  4221d0:	ldr	x8, [x8, #48]
  4221d4:	ldr	x9, [sp, #40]
  4221d8:	mov	x10, #0x18                  	// #24
  4221dc:	mul	x9, x10, x9
  4221e0:	add	x1, x8, x9
  4221e4:	sub	x0, x29, #0x40
  4221e8:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  4221ec:	str	w0, [sp, #36]
  4221f0:	ldr	w11, [sp, #36]
  4221f4:	cbz	w11, 422204 <_obstack_memory_used@@Base+0x4068>
  4221f8:	ldr	w8, [sp, #36]
  4221fc:	stur	w8, [x29, #-4]
  422200:	b	422374 <_obstack_memory_used@@Base+0x41d8>
  422204:	stur	xzr, [x29, #-32]
  422208:	ldur	x8, [x29, #-32]
  42220c:	add	x8, x8, #0x1
  422210:	stur	x8, [x29, #-32]
  422214:	b	422094 <_obstack_memory_used@@Base+0x3ef8>
  422218:	ldur	x1, [x29, #-16]
  42221c:	sub	x0, x29, #0x24
  422220:	sub	x2, x29, #0x40
  422224:	mov	w8, wzr
  422228:	mov	w3, w8
  42222c:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  422230:	ldur	x9, [x29, #-16]
  422234:	str	x0, [x9, #72]
  422238:	ldur	x9, [x29, #-16]
  42223c:	ldr	x9, [x9, #72]
  422240:	cmp	x9, #0x0
  422244:	cset	w8, eq  // eq = none
  422248:	and	w8, w8, #0x1
  42224c:	mov	w0, w8
  422250:	sxtw	x9, w0
  422254:	cbz	x9, 422264 <_obstack_memory_used@@Base+0x40c8>
  422258:	ldur	w8, [x29, #-36]
  42225c:	stur	w8, [x29, #-4]
  422260:	b	422374 <_obstack_memory_used@@Base+0x41d8>
  422264:	ldur	x8, [x29, #-16]
  422268:	ldr	x8, [x8, #72]
  42226c:	ldrb	w9, [x8, #104]
  422270:	mov	w10, #0x7                   	// #7
  422274:	lsr	w9, w9, w10
  422278:	and	w9, w9, #0xff
  42227c:	cbz	w9, 422344 <_obstack_memory_used@@Base+0x41a8>
  422280:	ldur	x1, [x29, #-16]
  422284:	sub	x8, x29, #0x24
  422288:	mov	x0, x8
  42228c:	sub	x9, x29, #0x40
  422290:	mov	x2, x9
  422294:	mov	w3, #0x1                   	// #1
  422298:	str	x8, [sp, #24]
  42229c:	str	x9, [sp, #16]
  4222a0:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  4222a4:	ldur	x8, [x29, #-16]
  4222a8:	str	x0, [x8, #80]
  4222ac:	ldur	x1, [x29, #-16]
  4222b0:	ldr	x0, [sp, #24]
  4222b4:	ldr	x2, [sp, #16]
  4222b8:	mov	w3, #0x2                   	// #2
  4222bc:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  4222c0:	ldur	x8, [x29, #-16]
  4222c4:	str	x0, [x8, #88]
  4222c8:	ldur	x1, [x29, #-16]
  4222cc:	ldr	x0, [sp, #24]
  4222d0:	ldr	x2, [sp, #16]
  4222d4:	mov	w3, #0x6                   	// #6
  4222d8:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  4222dc:	ldur	x8, [x29, #-16]
  4222e0:	str	x0, [x8, #96]
  4222e4:	ldur	x8, [x29, #-16]
  4222e8:	ldr	x8, [x8, #80]
  4222ec:	mov	w10, #0x1                   	// #1
  4222f0:	str	w10, [sp, #12]
  4222f4:	cbz	x8, 422320 <_obstack_memory_used@@Base+0x4184>
  4222f8:	ldur	x8, [x29, #-16]
  4222fc:	ldr	x8, [x8, #88]
  422300:	mov	w9, #0x1                   	// #1
  422304:	str	w9, [sp, #12]
  422308:	cbz	x8, 422320 <_obstack_memory_used@@Base+0x4184>
  42230c:	ldur	x8, [x29, #-16]
  422310:	ldr	x8, [x8, #96]
  422314:	cmp	x8, #0x0
  422318:	cset	w9, eq  // eq = none
  42231c:	str	w9, [sp, #12]
  422320:	ldr	w8, [sp, #12]
  422324:	and	w8, w8, #0x1
  422328:	mov	w0, w8
  42232c:	sxtw	x9, w0
  422330:	cbz	x9, 422340 <_obstack_memory_used@@Base+0x41a4>
  422334:	ldur	w8, [x29, #-36]
  422338:	stur	w8, [x29, #-4]
  42233c:	b	422374 <_obstack_memory_used@@Base+0x41d8>
  422340:	b	422364 <_obstack_memory_used@@Base+0x41c8>
  422344:	ldur	x8, [x29, #-16]
  422348:	ldr	x8, [x8, #72]
  42234c:	ldur	x9, [x29, #-16]
  422350:	str	x8, [x9, #96]
  422354:	ldur	x9, [x29, #-16]
  422358:	str	x8, [x9, #88]
  42235c:	ldur	x9, [x29, #-16]
  422360:	str	x8, [x9, #80]
  422364:	sub	x8, x29, #0x40
  422368:	ldr	x0, [x8, #16]
  42236c:	bl	402b40 <free@plt>
  422370:	stur	wzr, [x29, #-4]
  422374:	ldur	w0, [x29, #-4]
  422378:	ldp	x29, x30, [sp, #144]
  42237c:	add	sp, sp, #0xa0
  422380:	ret
  422384:	sub	sp, sp, #0x40
  422388:	str	x0, [sp, #56]
  42238c:	str	x1, [sp, #48]
  422390:	str	x2, [sp, #40]
  422394:	str	x3, [sp, #32]
  422398:	mov	w8, #0x1                   	// #1
  42239c:	and	w8, w4, w8
  4223a0:	strb	w8, [sp, #31]
  4223a4:	str	x5, [sp, #16]
  4223a8:	ldr	x9, [sp, #56]
  4223ac:	ldr	x10, [sp, #40]
  4223b0:	str	x9, [x10]
  4223b4:	ldr	x9, [sp, #48]
  4223b8:	ldr	x10, [sp, #40]
  4223bc:	str	x9, [x10, #88]
  4223c0:	ldr	x9, [sp, #48]
  4223c4:	ldr	x10, [sp, #40]
  4223c8:	str	x9, [x10, #80]
  4223cc:	ldr	x9, [sp, #32]
  4223d0:	ldr	x10, [sp, #40]
  4223d4:	str	x9, [x10, #120]
  4223d8:	ldrb	w8, [sp, #31]
  4223dc:	and	w8, w8, #0x1
  4223e0:	ldr	x9, [sp, #40]
  4223e4:	strb	w8, [x9, #136]
  4223e8:	ldr	x9, [sp, #32]
  4223ec:	mov	w8, #0x1                   	// #1
  4223f0:	str	w8, [sp, #12]
  4223f4:	cbnz	x9, 422400 <_obstack_memory_used@@Base+0x4264>
  4223f8:	ldrb	w8, [sp, #31]
  4223fc:	str	w8, [sp, #12]
  422400:	ldr	w8, [sp, #12]
  422404:	mov	w9, #0x1                   	// #1
  422408:	and	w8, w8, #0x1
  42240c:	ldr	x10, [sp, #40]
  422410:	strb	w8, [x10, #139]
  422414:	ldr	x10, [sp, #16]
  422418:	ldr	w8, [x10, #180]
  42241c:	ldr	x10, [sp, #40]
  422420:	str	w8, [x10, #144]
  422424:	ldr	x10, [sp, #16]
  422428:	ldrb	w8, [x10, #176]
  42242c:	mov	w11, #0x2                   	// #2
  422430:	lsr	w8, w8, w11
  422434:	and	w8, w8, #0x1
  422438:	and	w8, w8, #0xff
  42243c:	ldr	x10, [sp, #40]
  422440:	strb	w8, [x10, #137]
  422444:	ldr	x10, [sp, #16]
  422448:	ldrb	w8, [x10, #176]
  42244c:	mov	w11, #0x3                   	// #3
  422450:	lsr	w8, w8, w11
  422454:	and	w8, w8, w9
  422458:	and	w8, w8, #0xff
  42245c:	ldr	x10, [sp, #40]
  422460:	strb	w8, [x10, #138]
  422464:	ldr	x10, [sp, #40]
  422468:	ldr	x10, [x10, #88]
  42246c:	ldr	x12, [sp, #40]
  422470:	str	x10, [x12, #104]
  422474:	ldr	x10, [sp, #40]
  422478:	ldr	x10, [x10, #104]
  42247c:	ldr	x12, [sp, #40]
  422480:	str	x10, [x12, #96]
  422484:	add	sp, sp, #0x40
  422488:	ret
  42248c:	sub	sp, sp, #0x50
  422490:	stp	x29, x30, [sp, #64]
  422494:	add	x29, sp, #0x40
  422498:	stur	x0, [x29, #-16]
  42249c:	stur	x1, [x29, #-24]
  4224a0:	ldur	x8, [x29, #-16]
  4224a4:	ldr	w9, [x8, #144]
  4224a8:	cmp	w9, #0x1
  4224ac:	b.le	422590 <_obstack_memory_used@@Base+0x43f4>
  4224b0:	mov	x8, #0x8                   	// #8
  4224b4:	str	x8, [sp, #24]
  4224b8:	ldur	x8, [x29, #-24]
  4224bc:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  4224c0:	cmp	x9, x8
  4224c4:	cset	w10, cc  // cc = lo, ul, last
  4224c8:	and	w10, w10, #0x1
  4224cc:	mov	w0, w10
  4224d0:	sxtw	x8, w0
  4224d4:	cbz	x8, 4224e4 <_obstack_memory_used@@Base+0x4348>
  4224d8:	mov	w8, #0xc                   	// #12
  4224dc:	stur	w8, [x29, #-4]
  4224e0:	b	4225fc <_obstack_memory_used@@Base+0x4460>
  4224e4:	ldur	x8, [x29, #-16]
  4224e8:	ldr	x0, [x8, #16]
  4224ec:	ldur	x8, [x29, #-24]
  4224f0:	mov	x9, #0x4                   	// #4
  4224f4:	mul	x1, x8, x9
  4224f8:	bl	4029c0 <realloc@plt>
  4224fc:	str	x0, [sp, #32]
  422500:	ldr	x8, [sp, #32]
  422504:	cmp	x8, #0x0
  422508:	cset	w10, eq  // eq = none
  42250c:	and	w10, w10, #0x1
  422510:	mov	w0, w10
  422514:	sxtw	x8, w0
  422518:	cbz	x8, 422528 <_obstack_memory_used@@Base+0x438c>
  42251c:	mov	w8, #0xc                   	// #12
  422520:	stur	w8, [x29, #-4]
  422524:	b	4225fc <_obstack_memory_used@@Base+0x4460>
  422528:	ldr	x8, [sp, #32]
  42252c:	ldur	x9, [x29, #-16]
  422530:	str	x8, [x9, #16]
  422534:	ldur	x8, [x29, #-16]
  422538:	ldr	x8, [x8, #24]
  42253c:	cbz	x8, 422590 <_obstack_memory_used@@Base+0x43f4>
  422540:	ldur	x8, [x29, #-16]
  422544:	ldr	x0, [x8, #24]
  422548:	ldur	x8, [x29, #-24]
  42254c:	mov	x9, #0x8                   	// #8
  422550:	mul	x1, x8, x9
  422554:	bl	4029c0 <realloc@plt>
  422558:	str	x0, [sp, #16]
  42255c:	ldr	x8, [sp, #16]
  422560:	cmp	x8, #0x0
  422564:	cset	w10, eq  // eq = none
  422568:	and	w10, w10, #0x1
  42256c:	mov	w0, w10
  422570:	sxtw	x8, w0
  422574:	cbz	x8, 422584 <_obstack_memory_used@@Base+0x43e8>
  422578:	mov	w8, #0xc                   	// #12
  42257c:	stur	w8, [x29, #-4]
  422580:	b	4225fc <_obstack_memory_used@@Base+0x4460>
  422584:	ldr	x8, [sp, #16]
  422588:	ldur	x9, [x29, #-16]
  42258c:	str	x8, [x9, #24]
  422590:	ldur	x8, [x29, #-16]
  422594:	ldrb	w9, [x8, #139]
  422598:	cbz	w9, 4225ec <_obstack_memory_used@@Base+0x4450>
  42259c:	ldur	x8, [x29, #-16]
  4225a0:	ldr	x0, [x8, #8]
  4225a4:	ldur	x8, [x29, #-24]
  4225a8:	mov	x9, #0x1                   	// #1
  4225ac:	mul	x1, x8, x9
  4225b0:	bl	4029c0 <realloc@plt>
  4225b4:	str	x0, [sp, #8]
  4225b8:	ldr	x8, [sp, #8]
  4225bc:	cmp	x8, #0x0
  4225c0:	cset	w10, eq  // eq = none
  4225c4:	and	w10, w10, #0x1
  4225c8:	mov	w0, w10
  4225cc:	sxtw	x8, w0
  4225d0:	cbz	x8, 4225e0 <_obstack_memory_used@@Base+0x4444>
  4225d4:	mov	w8, #0xc                   	// #12
  4225d8:	stur	w8, [x29, #-4]
  4225dc:	b	4225fc <_obstack_memory_used@@Base+0x4460>
  4225e0:	ldr	x8, [sp, #8]
  4225e4:	ldur	x9, [x29, #-16]
  4225e8:	str	x8, [x9, #8]
  4225ec:	ldur	x8, [x29, #-24]
  4225f0:	ldur	x9, [x29, #-16]
  4225f4:	str	x8, [x9, #64]
  4225f8:	stur	wzr, [x29, #-4]
  4225fc:	ldur	w0, [x29, #-4]
  422600:	ldp	x29, x30, [sp, #64]
  422604:	add	sp, sp, #0x50
  422608:	ret
  42260c:	sub	sp, sp, #0x130
  422610:	stp	x29, x30, [sp, #272]
  422614:	str	x28, [sp, #288]
  422618:	add	x29, sp, #0x110
  42261c:	sub	x8, x29, #0x40
  422620:	str	x0, [x8, #48]
  422624:	ldr	x9, [x8, #48]
  422628:	ldr	x9, [x9, #48]
  42262c:	str	x9, [x8, #24]
  422630:	ldr	x9, [x8, #48]
  422634:	ldr	x9, [x9, #64]
  422638:	ldr	x10, [x8, #48]
  42263c:	ldr	x10, [x10, #88]
  422640:	cmp	x9, x10
  422644:	str	x8, [sp, #56]
  422648:	b.le	422660 <_obstack_memory_used@@Base+0x44c4>
  42264c:	ldr	x8, [sp, #56]
  422650:	ldr	x9, [x8, #48]
  422654:	ldr	x9, [x9, #88]
  422658:	str	x9, [sp, #48]
  42265c:	b	422670 <_obstack_memory_used@@Base+0x44d4>
  422660:	ldr	x8, [sp, #56]
  422664:	ldr	x9, [x8, #48]
  422668:	ldr	x9, [x9, #64]
  42266c:	str	x9, [sp, #48]
  422670:	ldr	x8, [sp, #48]
  422674:	ldr	x9, [sp, #56]
  422678:	str	x8, [x9, #16]
  42267c:	ldr	x8, [x9, #48]
  422680:	ldrb	w10, [x8, #138]
  422684:	cbnz	w10, 422a50 <_obstack_memory_used@@Base+0x48b4>
  422688:	ldr	x8, [sp, #56]
  42268c:	ldr	x9, [x8, #48]
  422690:	ldr	x9, [x9, #120]
  422694:	cbnz	x9, 422a50 <_obstack_memory_used@@Base+0x48b4>
  422698:	ldr	x8, [sp, #56]
  42269c:	ldr	x9, [x8, #48]
  4226a0:	ldrb	w10, [x9, #140]
  4226a4:	cbnz	w10, 422a50 <_obstack_memory_used@@Base+0x48b4>
  4226a8:	ldr	x8, [sp, #56]
  4226ac:	ldr	x9, [x8, #24]
  4226b0:	ldr	x10, [x8, #16]
  4226b4:	cmp	x9, x10
  4226b8:	b.ge	422a2c <_obstack_memory_used@@Base+0x4890>  // b.tcont
  4226bc:	ldr	x8, [sp, #56]
  4226c0:	ldr	x9, [x8, #48]
  4226c4:	ldr	x9, [x9]
  4226c8:	ldr	x10, [x8, #48]
  4226cc:	ldr	x10, [x10, #40]
  4226d0:	ldr	x11, [x8, #24]
  4226d4:	add	x10, x10, x11
  4226d8:	ldrb	w12, [x9, x10]
  4226dc:	and	w12, w12, #0xffffff80
  4226e0:	cbnz	w12, 422764 <_obstack_memory_used@@Base+0x45c8>
  4226e4:	ldr	x8, [sp, #56]
  4226e8:	ldr	x9, [x8, #48]
  4226ec:	add	x0, x9, #0x20
  4226f0:	bl	402aa0 <mbsinit@plt>
  4226f4:	cbz	w0, 422764 <_obstack_memory_used@@Base+0x45c8>
  4226f8:	ldr	x8, [sp, #56]
  4226fc:	ldr	x9, [x8, #48]
  422700:	ldr	x9, [x9]
  422704:	ldr	x10, [x8, #48]
  422708:	ldr	x10, [x10, #40]
  42270c:	ldr	x11, [x8, #24]
  422710:	add	x10, x10, x11
  422714:	ldrb	w0, [x9, x10]
  422718:	bl	4028a0 <toupper@plt>
  42271c:	ldr	x8, [sp, #56]
  422720:	ldr	x9, [x8, #48]
  422724:	ldr	x9, [x9, #8]
  422728:	ldr	x10, [x8, #24]
  42272c:	add	x9, x9, x10
  422730:	strb	w0, [x9]
  422734:	ldr	x9, [x8, #48]
  422738:	ldr	x9, [x9, #8]
  42273c:	ldr	x10, [x8, #24]
  422740:	ldrb	w12, [x9, x10]
  422744:	ldr	x9, [x8, #48]
  422748:	ldr	x9, [x9, #16]
  42274c:	ldr	x10, [x8, #24]
  422750:	str	w12, [x9, x10, lsl #2]
  422754:	ldr	x9, [x8, #24]
  422758:	add	x9, x9, #0x1
  42275c:	str	x9, [x8, #24]
  422760:	b	4226a8 <_obstack_memory_used@@Base+0x450c>
  422764:	ldr	x8, [sp, #56]
  422768:	ldr	x9, [x8, #16]
  42276c:	ldr	x10, [x8, #24]
  422770:	subs	x9, x9, x10
  422774:	str	x9, [x8, #8]
  422778:	ldr	x9, [x8, #48]
  42277c:	ldr	x9, [x9, #32]
  422780:	str	x9, [x8, #40]
  422784:	ldr	x9, [x8, #48]
  422788:	ldr	x9, [x9]
  42278c:	ldr	x10, [x8, #48]
  422790:	ldr	x10, [x10, #40]
  422794:	add	x9, x9, x10
  422798:	ldr	x10, [x8, #24]
  42279c:	add	x1, x9, x10
  4227a0:	ldr	x2, [x8, #8]
  4227a4:	ldr	x9, [x8, #48]
  4227a8:	add	x3, x9, #0x20
  4227ac:	sub	x0, x29, #0x84
  4227b0:	bl	41da58 <wcrtomb@plt+0x1aca8>
  4227b4:	ldr	x8, [sp, #56]
  4227b8:	str	x0, [x8]
  4227bc:	ldr	x9, [x8]
  4227c0:	mov	x10, xzr
  4227c4:	cmp	x10, x9
  4227c8:	cset	w11, cs  // cs = hs, nlast
  4227cc:	mov	w12, #0x0                   	// #0
  4227d0:	str	w12, [sp, #44]
  4227d4:	tbnz	w11, #0, 4227f0 <_obstack_memory_used@@Base+0x4654>
  4227d8:	ldr	x8, [sp, #56]
  4227dc:	ldr	x9, [x8]
  4227e0:	mov	x10, #0xfffffffffffffffe    	// #-2
  4227e4:	cmp	x9, x10
  4227e8:	cset	w11, cc  // cc = lo, ul, last
  4227ec:	str	w11, [sp, #44]
  4227f0:	ldr	w8, [sp, #44]
  4227f4:	and	w8, w8, #0x1
  4227f8:	mov	w0, w8
  4227fc:	sxtw	x9, w0
  422800:	cbz	x9, 422938 <_obstack_memory_used@@Base+0x479c>
  422804:	ldur	w0, [x29, #-132]
  422808:	bl	402ca0 <towupper@plt>
  42280c:	str	w0, [sp, #136]
  422810:	ldr	w8, [sp, #136]
  422814:	ldur	w9, [x29, #-132]
  422818:	cmp	w8, w9
  42281c:	b.eq	422890 <_obstack_memory_used@@Base+0x46f4>  // b.none
  422820:	ldr	w1, [sp, #136]
  422824:	sub	x0, x29, #0x80
  422828:	sub	x2, x29, #0x18
  42282c:	bl	402db0 <wcrtomb@plt>
  422830:	str	x0, [sp, #128]
  422834:	ldr	x8, [sp, #56]
  422838:	ldr	x9, [x8]
  42283c:	ldr	x10, [sp, #128]
  422840:	cmp	x9, x10
  422844:	cset	w11, eq  // eq = none
  422848:	and	w11, w11, #0x1
  42284c:	mov	w0, w11
  422850:	sxtw	x9, w0
  422854:	cbz	x9, 42287c <_obstack_memory_used@@Base+0x46e0>
  422858:	ldr	x8, [sp, #56]
  42285c:	ldr	x9, [x8, #48]
  422860:	ldr	x9, [x9, #8]
  422864:	ldr	x10, [x8, #24]
  422868:	add	x0, x9, x10
  42286c:	ldr	x2, [x8]
  422870:	sub	x1, x29, #0x80
  422874:	bl	4026a0 <memcpy@plt>
  422878:	b	42288c <_obstack_memory_used@@Base+0x46f0>
  42287c:	ldr	x8, [sp, #56]
  422880:	ldr	x9, [x8, #24]
  422884:	str	x9, [x8, #32]
  422888:	b	422a74 <_obstack_memory_used@@Base+0x48d8>
  42288c:	b	4228c8 <_obstack_memory_used@@Base+0x472c>
  422890:	ldr	x8, [sp, #56]
  422894:	ldr	x9, [x8, #48]
  422898:	ldr	x9, [x9, #8]
  42289c:	ldr	x10, [x8, #24]
  4228a0:	add	x0, x9, x10
  4228a4:	ldr	x9, [x8, #48]
  4228a8:	ldr	x9, [x9]
  4228ac:	ldr	x10, [x8, #48]
  4228b0:	ldr	x10, [x10, #40]
  4228b4:	add	x9, x9, x10
  4228b8:	ldr	x10, [x8, #24]
  4228bc:	add	x1, x9, x10
  4228c0:	ldr	x2, [x8]
  4228c4:	bl	4026a0 <memcpy@plt>
  4228c8:	ldr	w8, [sp, #136]
  4228cc:	ldr	x9, [sp, #56]
  4228d0:	ldr	x10, [x9, #48]
  4228d4:	ldr	x10, [x10, #16]
  4228d8:	ldr	x11, [x9, #24]
  4228dc:	add	x12, x11, #0x1
  4228e0:	str	x12, [x9, #24]
  4228e4:	str	w8, [x10, x11, lsl #2]
  4228e8:	ldr	x10, [x9, #24]
  4228ec:	ldr	x11, [x9]
  4228f0:	add	x10, x10, x11
  4228f4:	subs	x10, x10, #0x1
  4228f8:	str	x10, [x9, #8]
  4228fc:	ldr	x8, [sp, #56]
  422900:	ldr	x9, [x8, #24]
  422904:	ldr	x10, [x8, #8]
  422908:	cmp	x9, x10
  42290c:	b.ge	422934 <_obstack_memory_used@@Base+0x4798>  // b.tcont
  422910:	ldr	x8, [sp, #56]
  422914:	ldr	x9, [x8, #48]
  422918:	ldr	x9, [x9, #16]
  42291c:	ldr	x10, [x8, #24]
  422920:	add	x11, x10, #0x1
  422924:	str	x11, [x8, #24]
  422928:	mov	w12, #0xffffffff            	// #-1
  42292c:	str	w12, [x9, x10, lsl #2]
  422930:	b	4228fc <_obstack_memory_used@@Base+0x4760>
  422934:	b	422a28 <_obstack_memory_used@@Base+0x488c>
  422938:	ldr	x8, [sp, #56]
  42293c:	ldr	x9, [x8]
  422940:	mov	x10, #0xffffffffffffffff    	// #-1
  422944:	cmp	x9, x10
  422948:	b.eq	422988 <_obstack_memory_used@@Base+0x47ec>  // b.none
  42294c:	ldr	x8, [sp, #56]
  422950:	ldr	x9, [x8]
  422954:	cbz	x9, 422988 <_obstack_memory_used@@Base+0x47ec>
  422958:	ldr	x8, [sp, #56]
  42295c:	ldr	x9, [x8]
  422960:	mov	x10, #0xfffffffffffffffe    	// #-2
  422964:	cmp	x9, x10
  422968:	b.ne	422a14 <_obstack_memory_used@@Base+0x4878>  // b.any
  42296c:	ldr	x8, [sp, #56]
  422970:	ldr	x9, [x8, #48]
  422974:	ldr	x9, [x9, #64]
  422978:	ldr	x10, [x8, #48]
  42297c:	ldr	x10, [x10, #88]
  422980:	cmp	x9, x10
  422984:	b.lt	422a14 <_obstack_memory_used@@Base+0x4878>  // b.tstop
  422988:	ldr	x8, [sp, #56]
  42298c:	ldr	x9, [x8, #48]
  422990:	ldr	x9, [x9]
  422994:	ldr	x10, [x8, #48]
  422998:	ldr	x10, [x10, #40]
  42299c:	ldr	x11, [x8, #24]
  4229a0:	add	x10, x10, x11
  4229a4:	ldrb	w12, [x9, x10]
  4229a8:	str	w12, [sp, #124]
  4229ac:	ldr	w12, [sp, #124]
  4229b0:	ldr	x9, [x8, #48]
  4229b4:	ldr	x9, [x9, #8]
  4229b8:	ldr	x10, [x8, #24]
  4229bc:	add	x9, x9, x10
  4229c0:	strb	w12, [x9]
  4229c4:	ldr	w12, [sp, #124]
  4229c8:	ldr	x9, [x8, #48]
  4229cc:	ldr	x9, [x9, #16]
  4229d0:	ldr	x10, [x8, #24]
  4229d4:	add	x11, x10, #0x1
  4229d8:	str	x11, [x8, #24]
  4229dc:	str	w12, [x9, x10, lsl #2]
  4229e0:	ldr	x9, [x8]
  4229e4:	mov	x10, #0xffffffffffffffff    	// #-1
  4229e8:	cmp	x9, x10
  4229ec:	cset	w12, eq  // eq = none
  4229f0:	and	w12, w12, #0x1
  4229f4:	mov	w0, w12
  4229f8:	sxtw	x9, w0
  4229fc:	cbz	x9, 422a10 <_obstack_memory_used@@Base+0x4874>
  422a00:	ldr	x8, [sp, #56]
  422a04:	ldr	x9, [x8, #48]
  422a08:	ldr	x10, [x8, #40]
  422a0c:	str	x10, [x9, #32]
  422a10:	b	422a28 <_obstack_memory_used@@Base+0x488c>
  422a14:	ldr	x8, [sp, #56]
  422a18:	ldr	x9, [x8, #48]
  422a1c:	ldr	x10, [x8, #40]
  422a20:	str	x10, [x9, #32]
  422a24:	b	422a2c <_obstack_memory_used@@Base+0x4890>
  422a28:	b	4226a8 <_obstack_memory_used@@Base+0x450c>
  422a2c:	ldr	x8, [sp, #56]
  422a30:	ldr	x9, [x8, #24]
  422a34:	ldr	x10, [x8, #48]
  422a38:	str	x9, [x10, #48]
  422a3c:	ldr	x9, [x8, #24]
  422a40:	ldr	x10, [x8, #48]
  422a44:	str	x9, [x10, #56]
  422a48:	stur	wzr, [x29, #-4]
  422a4c:	b	4231e4 <_obstack_memory_used@@Base+0x5048>
  422a50:	ldr	x8, [sp, #56]
  422a54:	ldr	x9, [x8, #48]
  422a58:	ldr	x9, [x9, #56]
  422a5c:	str	x9, [x8, #32]
  422a60:	ldr	x8, [sp, #56]
  422a64:	ldr	x9, [x8, #24]
  422a68:	ldr	x10, [x8, #16]
  422a6c:	cmp	x9, x10
  422a70:	b.ge	4231c4 <_obstack_memory_used@@Base+0x5028>  // b.tcont
  422a74:	ldr	x8, [sp, #56]
  422a78:	ldr	x9, [x8, #16]
  422a7c:	ldr	x10, [x8, #24]
  422a80:	subs	x9, x9, x10
  422a84:	str	x9, [x8, #8]
  422a88:	ldr	x9, [x8, #48]
  422a8c:	ldr	x9, [x9, #32]
  422a90:	str	x9, [x8, #40]
  422a94:	ldr	x9, [x8, #48]
  422a98:	ldr	x9, [x9, #120]
  422a9c:	cmp	x9, #0x0
  422aa0:	cset	w11, ne  // ne = any
  422aa4:	and	w11, w11, #0x1
  422aa8:	mov	w0, w11
  422aac:	sxtw	x9, w0
  422ab0:	cbz	x9, 422b68 <_obstack_memory_used@@Base+0x49cc>
  422ab4:	str	wzr, [sp, #108]
  422ab8:	ldr	w8, [sp, #108]
  422abc:	ldr	x9, [sp, #56]
  422ac0:	ldr	x10, [x9, #48]
  422ac4:	ldr	w11, [x10, #144]
  422ac8:	mov	w12, #0x0                   	// #0
  422acc:	cmp	w8, w11
  422ad0:	str	w12, [sp, #40]
  422ad4:	b.ge	422af0 <_obstack_memory_used@@Base+0x4954>  // b.tcont
  422ad8:	ldrsw	x8, [sp, #108]
  422adc:	ldr	x9, [sp, #56]
  422ae0:	ldr	x10, [x9, #8]
  422ae4:	cmp	x8, x10
  422ae8:	cset	w11, lt  // lt = tstop
  422aec:	str	w11, [sp, #40]
  422af0:	ldr	w8, [sp, #40]
  422af4:	tbnz	w8, #0, 422afc <_obstack_memory_used@@Base+0x4960>
  422af8:	b	422b5c <_obstack_memory_used@@Base+0x49c0>
  422afc:	ldr	x8, [sp, #56]
  422b00:	ldr	x9, [x8, #48]
  422b04:	ldr	x9, [x9]
  422b08:	ldr	x10, [x8, #48]
  422b0c:	ldr	x10, [x10, #40]
  422b10:	ldr	x11, [x8, #32]
  422b14:	add	x10, x10, x11
  422b18:	ldrsw	x11, [sp, #108]
  422b1c:	add	x10, x10, x11
  422b20:	ldrb	w12, [x9, x10]
  422b24:	str	w12, [sp, #104]
  422b28:	ldr	x9, [x8, #48]
  422b2c:	ldr	x9, [x9, #120]
  422b30:	ldrsw	x10, [sp, #104]
  422b34:	add	x9, x9, x10
  422b38:	ldrb	w12, [x9]
  422b3c:	ldrsw	x9, [sp, #108]
  422b40:	sub	x10, x29, #0x80
  422b44:	add	x9, x10, x9
  422b48:	strb	w12, [x9]
  422b4c:	ldr	w8, [sp, #108]
  422b50:	add	w8, w8, #0x1
  422b54:	str	w8, [sp, #108]
  422b58:	b	422ab8 <_obstack_memory_used@@Base+0x491c>
  422b5c:	sub	x8, x29, #0x80
  422b60:	str	x8, [sp, #112]
  422b64:	b	422b8c <_obstack_memory_used@@Base+0x49f0>
  422b68:	ldr	x8, [sp, #56]
  422b6c:	ldr	x9, [x8, #48]
  422b70:	ldr	x9, [x9]
  422b74:	ldr	x10, [x8, #48]
  422b78:	ldr	x10, [x10, #40]
  422b7c:	add	x9, x9, x10
  422b80:	ldr	x10, [x8, #32]
  422b84:	add	x9, x9, x10
  422b88:	str	x9, [sp, #112]
  422b8c:	ldr	x1, [sp, #112]
  422b90:	ldr	x8, [sp, #56]
  422b94:	ldr	x2, [x8, #8]
  422b98:	ldr	x9, [x8, #48]
  422b9c:	add	x3, x9, #0x20
  422ba0:	add	x0, sp, #0x78
  422ba4:	bl	41da58 <wcrtomb@plt+0x1aca8>
  422ba8:	ldr	x8, [sp, #56]
  422bac:	str	x0, [x8]
  422bb0:	ldr	x9, [x8]
  422bb4:	mov	x10, xzr
  422bb8:	cmp	x10, x9
  422bbc:	cset	w11, cs  // cs = hs, nlast
  422bc0:	mov	w12, #0x0                   	// #0
  422bc4:	str	w12, [sp, #36]
  422bc8:	tbnz	w11, #0, 422be4 <_obstack_memory_used@@Base+0x4a48>
  422bcc:	ldr	x8, [sp, #56]
  422bd0:	ldr	x9, [x8]
  422bd4:	mov	x10, #0xfffffffffffffffe    	// #-2
  422bd8:	cmp	x9, x10
  422bdc:	cset	w11, cc  // cc = lo, ul, last
  422be0:	str	w11, [sp, #36]
  422be4:	ldr	w8, [sp, #36]
  422be8:	and	w8, w8, #0x1
  422bec:	mov	w0, w8
  422bf0:	sxtw	x9, w0
  422bf4:	cbz	x9, 42304c <_obstack_memory_used@@Base+0x4eb0>
  422bf8:	ldr	w0, [sp, #120]
  422bfc:	bl	402ca0 <towupper@plt>
  422c00:	str	w0, [sp, #100]
  422c04:	ldr	w8, [sp, #100]
  422c08:	ldr	w9, [sp, #120]
  422c0c:	cmp	w8, w9
  422c10:	b.eq	422f38 <_obstack_memory_used@@Base+0x4d9c>  // b.none
  422c14:	ldr	w1, [sp, #100]
  422c18:	sub	x0, x29, #0x80
  422c1c:	sub	x2, x29, #0x18
  422c20:	bl	402db0 <wcrtomb@plt>
  422c24:	str	x0, [sp, #88]
  422c28:	ldr	x8, [sp, #56]
  422c2c:	ldr	x9, [x8]
  422c30:	ldr	x10, [sp, #88]
  422c34:	cmp	x9, x10
  422c38:	cset	w11, eq  // eq = none
  422c3c:	and	w11, w11, #0x1
  422c40:	mov	w0, w11
  422c44:	sxtw	x9, w0
  422c48:	cbz	x9, 422c70 <_obstack_memory_used@@Base+0x4ad4>
  422c4c:	ldr	x8, [sp, #56]
  422c50:	ldr	x9, [x8, #48]
  422c54:	ldr	x9, [x9, #8]
  422c58:	ldr	x10, [x8, #24]
  422c5c:	add	x0, x9, x10
  422c60:	ldr	x2, [x8]
  422c64:	sub	x1, x29, #0x80
  422c68:	bl	4026a0 <memcpy@plt>
  422c6c:	b	422f34 <_obstack_memory_used@@Base+0x4d98>
  422c70:	ldr	x8, [sp, #88]
  422c74:	mov	x9, #0xffffffffffffffff    	// #-1
  422c78:	cmp	x8, x9
  422c7c:	b.eq	422f14 <_obstack_memory_used@@Base+0x4d78>  // b.none
  422c80:	ldr	x8, [sp, #56]
  422c84:	ldr	x9, [x8, #24]
  422c88:	ldr	x10, [sp, #88]
  422c8c:	add	x9, x9, x10
  422c90:	ldr	x10, [x8, #48]
  422c94:	ldr	x10, [x10, #64]
  422c98:	cmp	x9, x10
  422c9c:	b.ls	422cb4 <_obstack_memory_used@@Base+0x4b18>  // b.plast
  422ca0:	ldr	x8, [sp, #56]
  422ca4:	ldr	x9, [x8, #48]
  422ca8:	ldr	x10, [x8, #40]
  422cac:	str	x10, [x9, #32]
  422cb0:	b	4231c4 <_obstack_memory_used@@Base+0x5028>
  422cb4:	ldr	x8, [sp, #56]
  422cb8:	ldr	x9, [x8, #48]
  422cbc:	ldr	x9, [x9, #24]
  422cc0:	cbnz	x9, 422d00 <_obstack_memory_used@@Base+0x4b64>
  422cc4:	ldr	x8, [sp, #56]
  422cc8:	ldr	x9, [x8, #48]
  422ccc:	ldr	x9, [x9, #64]
  422cd0:	mov	x10, #0x8                   	// #8
  422cd4:	mul	x0, x9, x10
  422cd8:	bl	402890 <malloc@plt>
  422cdc:	ldr	x8, [sp, #56]
  422ce0:	ldr	x9, [x8, #48]
  422ce4:	str	x0, [x9, #24]
  422ce8:	ldr	x9, [x8, #48]
  422cec:	ldr	x9, [x9, #24]
  422cf0:	cbnz	x9, 422d00 <_obstack_memory_used@@Base+0x4b64>
  422cf4:	mov	w8, #0xc                   	// #12
  422cf8:	stur	w8, [x29, #-4]
  422cfc:	b	4231e4 <_obstack_memory_used@@Base+0x5048>
  422d00:	ldr	x8, [sp, #56]
  422d04:	ldr	x9, [x8, #48]
  422d08:	ldrb	w10, [x9, #140]
  422d0c:	cbnz	w10, 422d60 <_obstack_memory_used@@Base+0x4bc4>
  422d10:	str	xzr, [sp, #80]
  422d14:	ldr	x8, [sp, #80]
  422d18:	ldr	x9, [sp, #56]
  422d1c:	ldr	x10, [x9, #24]
  422d20:	cmp	x8, x10
  422d24:	b.cs	422d50 <_obstack_memory_used@@Base+0x4bb4>  // b.hs, b.nlast
  422d28:	ldr	x8, [sp, #80]
  422d2c:	ldr	x9, [sp, #56]
  422d30:	ldr	x10, [x9, #48]
  422d34:	ldr	x10, [x10, #24]
  422d38:	ldr	x11, [sp, #80]
  422d3c:	str	x8, [x10, x11, lsl #3]
  422d40:	ldr	x8, [sp, #80]
  422d44:	add	x8, x8, #0x1
  422d48:	str	x8, [sp, #80]
  422d4c:	b	422d14 <_obstack_memory_used@@Base+0x4b78>
  422d50:	ldr	x8, [sp, #56]
  422d54:	ldr	x9, [x8, #48]
  422d58:	mov	w10, #0x1                   	// #1
  422d5c:	strb	w10, [x9, #140]
  422d60:	ldr	x8, [sp, #56]
  422d64:	ldr	x9, [x8, #48]
  422d68:	ldr	x9, [x9, #8]
  422d6c:	ldr	x10, [x8, #24]
  422d70:	add	x0, x9, x10
  422d74:	ldr	x2, [sp, #88]
  422d78:	sub	x1, x29, #0x80
  422d7c:	bl	4026a0 <memcpy@plt>
  422d80:	ldr	w11, [sp, #100]
  422d84:	ldr	x8, [sp, #56]
  422d88:	ldr	x9, [x8, #48]
  422d8c:	ldr	x9, [x9, #16]
  422d90:	ldr	x10, [x8, #24]
  422d94:	str	w11, [x9, x10, lsl #2]
  422d98:	ldr	x9, [x8, #32]
  422d9c:	ldr	x10, [x8, #48]
  422da0:	ldr	x10, [x10, #24]
  422da4:	ldr	x12, [x8, #24]
  422da8:	str	x9, [x10, x12, lsl #3]
  422dac:	mov	x9, #0x1                   	// #1
  422db0:	str	x9, [sp, #80]
  422db4:	ldr	x8, [sp, #80]
  422db8:	ldr	x9, [sp, #88]
  422dbc:	cmp	x8, x9
  422dc0:	b.cs	422e50 <_obstack_memory_used@@Base+0x4cb4>  // b.hs, b.nlast
  422dc4:	ldr	x8, [sp, #56]
  422dc8:	ldr	x9, [x8, #32]
  422dcc:	ldr	x10, [sp, #80]
  422dd0:	ldr	x11, [x8]
  422dd4:	cmp	x10, x11
  422dd8:	str	x9, [sp, #24]
  422ddc:	b.cs	422dec <_obstack_memory_used@@Base+0x4c50>  // b.hs, b.nlast
  422de0:	ldr	x8, [sp, #80]
  422de4:	str	x8, [sp, #16]
  422de8:	b	422dfc <_obstack_memory_used@@Base+0x4c60>
  422dec:	ldr	x8, [sp, #56]
  422df0:	ldr	x9, [x8]
  422df4:	subs	x9, x9, #0x1
  422df8:	str	x9, [sp, #16]
  422dfc:	ldr	x8, [sp, #16]
  422e00:	ldr	x9, [sp, #24]
  422e04:	add	x8, x9, x8
  422e08:	ldr	x10, [sp, #56]
  422e0c:	ldr	x11, [x10, #48]
  422e10:	ldr	x11, [x11, #24]
  422e14:	ldr	x12, [x10, #24]
  422e18:	ldr	x13, [sp, #80]
  422e1c:	add	x12, x12, x13
  422e20:	str	x8, [x11, x12, lsl #3]
  422e24:	ldr	x8, [x10, #48]
  422e28:	ldr	x8, [x8, #16]
  422e2c:	ldr	x11, [x10, #24]
  422e30:	ldr	x12, [sp, #80]
  422e34:	add	x11, x11, x12
  422e38:	mov	w14, #0xffffffff            	// #-1
  422e3c:	str	w14, [x8, x11, lsl #2]
  422e40:	ldr	x8, [sp, #80]
  422e44:	add	x8, x8, #0x1
  422e48:	str	x8, [sp, #80]
  422e4c:	b	422db4 <_obstack_memory_used@@Base+0x4c18>
  422e50:	ldr	x8, [sp, #88]
  422e54:	ldr	x9, [sp, #56]
  422e58:	ldr	x10, [x9]
  422e5c:	subs	x8, x8, x10
  422e60:	ldr	x10, [x9, #48]
  422e64:	ldr	x11, [x10, #88]
  422e68:	add	x8, x11, x8
  422e6c:	str	x8, [x10, #88]
  422e70:	ldr	x8, [x9, #48]
  422e74:	ldr	x8, [x8, #96]
  422e78:	ldr	x10, [x9, #32]
  422e7c:	cmp	x8, x10
  422e80:	b.le	422ea4 <_obstack_memory_used@@Base+0x4d08>
  422e84:	ldr	x8, [sp, #88]
  422e88:	ldr	x9, [sp, #56]
  422e8c:	ldr	x10, [x9]
  422e90:	subs	x8, x8, x10
  422e94:	ldr	x10, [x9, #48]
  422e98:	ldr	x11, [x10, #104]
  422e9c:	add	x8, x11, x8
  422ea0:	str	x8, [x10, #104]
  422ea4:	ldr	x8, [sp, #56]
  422ea8:	ldr	x9, [x8, #48]
  422eac:	ldr	x9, [x9, #64]
  422eb0:	ldr	x10, [x8, #48]
  422eb4:	ldr	x10, [x10, #88]
  422eb8:	cmp	x9, x10
  422ebc:	b.le	422ed4 <_obstack_memory_used@@Base+0x4d38>
  422ec0:	ldr	x8, [sp, #56]
  422ec4:	ldr	x9, [x8, #48]
  422ec8:	ldr	x9, [x9, #88]
  422ecc:	str	x9, [sp, #8]
  422ed0:	b	422ee4 <_obstack_memory_used@@Base+0x4d48>
  422ed4:	ldr	x8, [sp, #56]
  422ed8:	ldr	x9, [x8, #48]
  422edc:	ldr	x9, [x9, #64]
  422ee0:	str	x9, [sp, #8]
  422ee4:	ldr	x8, [sp, #8]
  422ee8:	ldr	x9, [sp, #56]
  422eec:	str	x8, [x9, #16]
  422ef0:	ldr	x8, [sp, #88]
  422ef4:	ldr	x10, [x9, #24]
  422ef8:	add	x8, x10, x8
  422efc:	str	x8, [x9, #24]
  422f00:	ldr	x8, [x9]
  422f04:	ldr	x10, [x9, #32]
  422f08:	add	x8, x10, x8
  422f0c:	str	x8, [x9, #32]
  422f10:	b	422a60 <_obstack_memory_used@@Base+0x48c4>
  422f14:	ldr	x8, [sp, #56]
  422f18:	ldr	x9, [x8, #48]
  422f1c:	ldr	x9, [x9, #8]
  422f20:	ldr	x10, [x8, #24]
  422f24:	add	x0, x9, x10
  422f28:	ldr	x1, [sp, #112]
  422f2c:	ldr	x2, [x8]
  422f30:	bl	4026a0 <memcpy@plt>
  422f34:	b	422f58 <_obstack_memory_used@@Base+0x4dbc>
  422f38:	ldr	x8, [sp, #56]
  422f3c:	ldr	x9, [x8, #48]
  422f40:	ldr	x9, [x9, #8]
  422f44:	ldr	x10, [x8, #24]
  422f48:	add	x0, x9, x10
  422f4c:	ldr	x1, [sp, #112]
  422f50:	ldr	x2, [x8]
  422f54:	bl	4026a0 <memcpy@plt>
  422f58:	ldr	x8, [sp, #56]
  422f5c:	ldr	x9, [x8, #48]
  422f60:	ldrb	w10, [x9, #140]
  422f64:	cmp	w10, #0x0
  422f68:	cset	w10, ne  // ne = any
  422f6c:	and	w10, w10, #0x1
  422f70:	mov	w0, w10
  422f74:	sxtw	x9, w0
  422f78:	cbz	x9, 422fcc <_obstack_memory_used@@Base+0x4e30>
  422f7c:	str	xzr, [sp, #72]
  422f80:	ldr	x8, [sp, #72]
  422f84:	ldr	x9, [sp, #56]
  422f88:	ldr	x10, [x9]
  422f8c:	cmp	x8, x10
  422f90:	b.cs	422fcc <_obstack_memory_used@@Base+0x4e30>  // b.hs, b.nlast
  422f94:	ldr	x8, [sp, #56]
  422f98:	ldr	x9, [x8, #32]
  422f9c:	ldr	x10, [sp, #72]
  422fa0:	add	x9, x9, x10
  422fa4:	ldr	x10, [x8, #48]
  422fa8:	ldr	x10, [x10, #24]
  422fac:	ldr	x11, [x8, #24]
  422fb0:	ldr	x12, [sp, #72]
  422fb4:	add	x11, x11, x12
  422fb8:	str	x9, [x10, x11, lsl #3]
  422fbc:	ldr	x8, [sp, #72]
  422fc0:	add	x8, x8, #0x1
  422fc4:	str	x8, [sp, #72]
  422fc8:	b	422f80 <_obstack_memory_used@@Base+0x4de4>
  422fcc:	ldr	x8, [sp, #56]
  422fd0:	ldr	x9, [x8]
  422fd4:	ldr	x10, [x8, #32]
  422fd8:	add	x9, x10, x9
  422fdc:	str	x9, [x8, #32]
  422fe0:	ldr	w11, [sp, #100]
  422fe4:	ldr	x9, [x8, #48]
  422fe8:	ldr	x9, [x9, #16]
  422fec:	ldr	x10, [x8, #24]
  422ff0:	add	x12, x10, #0x1
  422ff4:	str	x12, [x8, #24]
  422ff8:	str	w11, [x9, x10, lsl #2]
  422ffc:	ldr	x9, [x8, #24]
  423000:	ldr	x10, [x8]
  423004:	add	x9, x9, x10
  423008:	subs	x9, x9, #0x1
  42300c:	str	x9, [x8, #8]
  423010:	ldr	x8, [sp, #56]
  423014:	ldr	x9, [x8, #24]
  423018:	ldr	x10, [x8, #8]
  42301c:	cmp	x9, x10
  423020:	b.ge	423048 <_obstack_memory_used@@Base+0x4eac>  // b.tcont
  423024:	ldr	x8, [sp, #56]
  423028:	ldr	x9, [x8, #48]
  42302c:	ldr	x9, [x9, #16]
  423030:	ldr	x10, [x8, #24]
  423034:	add	x11, x10, #0x1
  423038:	str	x11, [x8, #24]
  42303c:	mov	w12, #0xffffffff            	// #-1
  423040:	str	w12, [x9, x10, lsl #2]
  423044:	b	423010 <_obstack_memory_used@@Base+0x4e74>
  423048:	b	4231c0 <_obstack_memory_used@@Base+0x5024>
  42304c:	ldr	x8, [sp, #56]
  423050:	ldr	x9, [x8]
  423054:	mov	x10, #0xffffffffffffffff    	// #-1
  423058:	cmp	x9, x10
  42305c:	b.eq	42309c <_obstack_memory_used@@Base+0x4f00>  // b.none
  423060:	ldr	x8, [sp, #56]
  423064:	ldr	x9, [x8]
  423068:	cbz	x9, 42309c <_obstack_memory_used@@Base+0x4f00>
  42306c:	ldr	x8, [sp, #56]
  423070:	ldr	x9, [x8]
  423074:	mov	x10, #0xfffffffffffffffe    	// #-2
  423078:	cmp	x9, x10
  42307c:	b.ne	4231ac <_obstack_memory_used@@Base+0x5010>  // b.any
  423080:	ldr	x8, [sp, #56]
  423084:	ldr	x9, [x8, #48]
  423088:	ldr	x9, [x9, #64]
  42308c:	ldr	x10, [x8, #48]
  423090:	ldr	x10, [x10, #88]
  423094:	cmp	x9, x10
  423098:	b.lt	4231ac <_obstack_memory_used@@Base+0x5010>  // b.tstop
  42309c:	ldr	x8, [sp, #56]
  4230a0:	ldr	x9, [x8, #48]
  4230a4:	ldr	x9, [x9]
  4230a8:	ldr	x10, [x8, #48]
  4230ac:	ldr	x10, [x10, #40]
  4230b0:	ldr	x11, [x8, #32]
  4230b4:	add	x10, x10, x11
  4230b8:	ldrb	w12, [x9, x10]
  4230bc:	str	w12, [sp, #68]
  4230c0:	ldr	x9, [x8, #48]
  4230c4:	ldr	x9, [x9, #120]
  4230c8:	cmp	x9, #0x0
  4230cc:	cset	w12, ne  // ne = any
  4230d0:	and	w12, w12, #0x1
  4230d4:	mov	w0, w12
  4230d8:	sxtw	x9, w0
  4230dc:	cbz	x9, 4230f8 <_obstack_memory_used@@Base+0x4f5c>
  4230e0:	ldr	x8, [sp, #56]
  4230e4:	ldr	x9, [x8, #48]
  4230e8:	ldr	x9, [x9, #120]
  4230ec:	ldrsw	x10, [sp, #68]
  4230f0:	ldrb	w11, [x9, x10]
  4230f4:	str	w11, [sp, #68]
  4230f8:	ldr	w8, [sp, #68]
  4230fc:	ldr	x9, [sp, #56]
  423100:	ldr	x10, [x9, #48]
  423104:	ldr	x10, [x10, #8]
  423108:	ldr	x11, [x9, #24]
  42310c:	add	x10, x10, x11
  423110:	strb	w8, [x10]
  423114:	ldr	x10, [x9, #48]
  423118:	ldrb	w8, [x10, #140]
  42311c:	cmp	w8, #0x0
  423120:	cset	w8, ne  // ne = any
  423124:	and	w8, w8, #0x1
  423128:	mov	w0, w8
  42312c:	sxtw	x10, w0
  423130:	cbz	x10, 42314c <_obstack_memory_used@@Base+0x4fb0>
  423134:	ldr	x8, [sp, #56]
  423138:	ldr	x9, [x8, #32]
  42313c:	ldr	x10, [x8, #48]
  423140:	ldr	x10, [x10, #24]
  423144:	ldr	x11, [x8, #24]
  423148:	str	x9, [x10, x11, lsl #3]
  42314c:	ldr	x8, [sp, #56]
  423150:	ldr	x9, [x8, #32]
  423154:	add	x9, x9, #0x1
  423158:	str	x9, [x8, #32]
  42315c:	ldr	w10, [sp, #68]
  423160:	ldr	x9, [x8, #48]
  423164:	ldr	x9, [x9, #16]
  423168:	ldr	x11, [x8, #24]
  42316c:	add	x12, x11, #0x1
  423170:	str	x12, [x8, #24]
  423174:	str	w10, [x9, x11, lsl #2]
  423178:	ldr	x9, [x8]
  42317c:	mov	x11, #0xffffffffffffffff    	// #-1
  423180:	cmp	x9, x11
  423184:	cset	w10, eq  // eq = none
  423188:	and	w10, w10, #0x1
  42318c:	mov	w0, w10
  423190:	sxtw	x9, w0
  423194:	cbz	x9, 4231a8 <_obstack_memory_used@@Base+0x500c>
  423198:	ldr	x8, [sp, #56]
  42319c:	ldr	x9, [x8, #48]
  4231a0:	ldr	x10, [x8, #40]
  4231a4:	str	x10, [x9, #32]
  4231a8:	b	4231c0 <_obstack_memory_used@@Base+0x5024>
  4231ac:	ldr	x8, [sp, #56]
  4231b0:	ldr	x9, [x8, #48]
  4231b4:	ldr	x10, [x8, #40]
  4231b8:	str	x10, [x9, #32]
  4231bc:	b	4231c4 <_obstack_memory_used@@Base+0x5028>
  4231c0:	b	422a60 <_obstack_memory_used@@Base+0x48c4>
  4231c4:	ldr	x8, [sp, #56]
  4231c8:	ldr	x9, [x8, #24]
  4231cc:	ldr	x10, [x8, #48]
  4231d0:	str	x9, [x10, #48]
  4231d4:	ldr	x9, [x8, #32]
  4231d8:	ldr	x10, [x8, #48]
  4231dc:	str	x9, [x10, #56]
  4231e0:	stur	wzr, [x29, #-4]
  4231e4:	ldur	w0, [x29, #-4]
  4231e8:	ldr	x28, [sp, #288]
  4231ec:	ldp	x29, x30, [sp, #272]
  4231f0:	add	sp, sp, #0x130
  4231f4:	ret
  4231f8:	sub	sp, sp, #0x40
  4231fc:	stp	x29, x30, [sp, #48]
  423200:	add	x29, sp, #0x30
  423204:	stur	x0, [x29, #-8]
  423208:	ldur	x8, [x29, #-8]
  42320c:	ldr	x8, [x8, #64]
  423210:	ldur	x9, [x29, #-8]
  423214:	ldr	x9, [x9, #88]
  423218:	cmp	x8, x9
  42321c:	b.le	423230 <_obstack_memory_used@@Base+0x5094>
  423220:	ldur	x8, [x29, #-8]
  423224:	ldr	x8, [x8, #88]
  423228:	str	x8, [sp, #8]
  42322c:	b	42323c <_obstack_memory_used@@Base+0x50a0>
  423230:	ldur	x8, [x29, #-8]
  423234:	ldr	x8, [x8, #64]
  423238:	str	x8, [sp, #8]
  42323c:	ldr	x8, [sp, #8]
  423240:	str	x8, [sp, #24]
  423244:	ldur	x8, [x29, #-8]
  423248:	ldr	x8, [x8, #48]
  42324c:	stur	x8, [x29, #-16]
  423250:	ldur	x8, [x29, #-16]
  423254:	ldr	x9, [sp, #24]
  423258:	cmp	x8, x9
  42325c:	b.ge	4232e0 <_obstack_memory_used@@Base+0x5144>  // b.tcont
  423260:	ldur	x8, [x29, #-8]
  423264:	ldr	x8, [x8]
  423268:	ldur	x9, [x29, #-8]
  42326c:	ldr	x9, [x9, #40]
  423270:	ldur	x10, [x29, #-16]
  423274:	add	x9, x9, x10
  423278:	ldrb	w11, [x8, x9]
  42327c:	str	w11, [sp, #20]
  423280:	ldur	x8, [x29, #-8]
  423284:	ldr	x8, [x8, #120]
  423288:	cmp	x8, #0x0
  42328c:	cset	w11, ne  // ne = any
  423290:	and	w11, w11, #0x1
  423294:	mov	w0, w11
  423298:	sxtw	x8, w0
  42329c:	cbz	x8, 4232b4 <_obstack_memory_used@@Base+0x5118>
  4232a0:	ldur	x8, [x29, #-8]
  4232a4:	ldr	x8, [x8, #120]
  4232a8:	ldrsw	x9, [sp, #20]
  4232ac:	ldrb	w10, [x8, x9]
  4232b0:	str	w10, [sp, #20]
  4232b4:	ldr	w0, [sp, #20]
  4232b8:	bl	4028a0 <toupper@plt>
  4232bc:	ldur	x8, [x29, #-8]
  4232c0:	ldr	x8, [x8, #8]
  4232c4:	ldur	x9, [x29, #-16]
  4232c8:	add	x8, x8, x9
  4232cc:	strb	w0, [x8]
  4232d0:	ldur	x8, [x29, #-16]
  4232d4:	add	x8, x8, #0x1
  4232d8:	stur	x8, [x29, #-16]
  4232dc:	b	423250 <_obstack_memory_used@@Base+0x50b4>
  4232e0:	ldur	x8, [x29, #-16]
  4232e4:	ldur	x9, [x29, #-8]
  4232e8:	str	x8, [x9, #48]
  4232ec:	ldur	x8, [x29, #-16]
  4232f0:	ldur	x9, [x29, #-8]
  4232f4:	str	x8, [x9, #56]
  4232f8:	ldp	x29, x30, [sp, #48]
  4232fc:	add	sp, sp, #0x40
  423300:	ret
  423304:	sub	sp, sp, #0xb0
  423308:	stp	x29, x30, [sp, #160]
  42330c:	add	x29, sp, #0xa0
  423310:	stur	x0, [x29, #-8]
  423314:	ldur	x8, [x29, #-8]
  423318:	ldr	x8, [x8, #64]
  42331c:	ldur	x9, [x29, #-8]
  423320:	ldr	x9, [x9, #88]
  423324:	cmp	x8, x9
  423328:	b.le	42333c <_obstack_memory_used@@Base+0x51a0>
  42332c:	ldur	x8, [x29, #-8]
  423330:	ldr	x8, [x8, #88]
  423334:	str	x8, [sp, #16]
  423338:	b	423348 <_obstack_memory_used@@Base+0x51ac>
  42333c:	ldur	x8, [x29, #-8]
  423340:	ldr	x8, [x8, #64]
  423344:	str	x8, [sp, #16]
  423348:	ldr	x8, [sp, #16]
  42334c:	str	x8, [sp, #64]
  423350:	ldur	x8, [x29, #-8]
  423354:	ldr	x8, [x8, #48]
  423358:	str	x8, [sp, #72]
  42335c:	ldr	x8, [sp, #72]
  423360:	ldr	x9, [sp, #64]
  423364:	cmp	x8, x9
  423368:	b.ge	423624 <_obstack_memory_used@@Base+0x5488>  // b.tcont
  42336c:	ldr	x8, [sp, #64]
  423370:	ldr	x9, [sp, #72]
  423374:	subs	x8, x8, x9
  423378:	str	x8, [sp, #56]
  42337c:	ldur	x8, [x29, #-8]
  423380:	ldr	x8, [x8, #32]
  423384:	str	x8, [sp, #80]
  423388:	ldur	x8, [x29, #-8]
  42338c:	ldr	x8, [x8, #120]
  423390:	cmp	x8, #0x0
  423394:	cset	w10, ne  // ne = any
  423398:	and	w10, w10, #0x1
  42339c:	mov	w0, w10
  4233a0:	sxtw	x8, w0
  4233a4:	cbz	x8, 42346c <_obstack_memory_used@@Base+0x52d0>
  4233a8:	str	wzr, [sp, #28]
  4233ac:	ldr	w8, [sp, #28]
  4233b0:	ldur	x9, [x29, #-8]
  4233b4:	ldr	w10, [x9, #144]
  4233b8:	mov	w11, #0x0                   	// #0
  4233bc:	cmp	w8, w10
  4233c0:	str	w11, [sp, #12]
  4233c4:	b.ge	4233dc <_obstack_memory_used@@Base+0x5240>  // b.tcont
  4233c8:	ldrsw	x8, [sp, #28]
  4233cc:	ldr	x9, [sp, #56]
  4233d0:	cmp	x8, x9
  4233d4:	cset	w10, lt  // lt = tstop
  4233d8:	str	w10, [sp, #12]
  4233dc:	ldr	w8, [sp, #12]
  4233e0:	tbnz	w8, #0, 4233e8 <_obstack_memory_used@@Base+0x524c>
  4233e4:	b	423460 <_obstack_memory_used@@Base+0x52c4>
  4233e8:	ldur	x8, [x29, #-8]
  4233ec:	ldr	x8, [x8]
  4233f0:	ldur	x9, [x29, #-8]
  4233f4:	ldr	x9, [x9, #40]
  4233f8:	ldr	x10, [sp, #72]
  4233fc:	add	x9, x9, x10
  423400:	ldrsw	x10, [sp, #28]
  423404:	add	x9, x9, x10
  423408:	ldrb	w11, [x8, x9]
  42340c:	str	w11, [sp, #24]
  423410:	ldur	x8, [x29, #-8]
  423414:	ldr	x8, [x8, #120]
  423418:	ldrsw	x9, [sp, #24]
  42341c:	add	x8, x8, x9
  423420:	ldrb	w11, [x8]
  423424:	ldur	x8, [x29, #-8]
  423428:	ldr	x8, [x8, #8]
  42342c:	ldr	x9, [sp, #72]
  423430:	ldrsw	x10, [sp, #28]
  423434:	add	x9, x9, x10
  423438:	add	x8, x8, x9
  42343c:	strb	w11, [x8]
  423440:	ldrsw	x8, [sp, #28]
  423444:	sub	x9, x29, #0x48
  423448:	add	x8, x9, x8
  42344c:	strb	w11, [x8]
  423450:	ldr	w8, [sp, #28]
  423454:	add	w8, w8, #0x1
  423458:	str	w8, [sp, #28]
  42345c:	b	4233ac <_obstack_memory_used@@Base+0x5210>
  423460:	sub	x8, x29, #0x48
  423464:	str	x8, [sp, #32]
  423468:	b	42348c <_obstack_memory_used@@Base+0x52f0>
  42346c:	ldur	x8, [x29, #-8]
  423470:	ldr	x8, [x8]
  423474:	ldur	x9, [x29, #-8]
  423478:	ldr	x9, [x9, #40]
  42347c:	add	x8, x8, x9
  423480:	ldr	x9, [sp, #72]
  423484:	add	x8, x8, x9
  423488:	str	x8, [sp, #32]
  42348c:	ldr	x1, [sp, #32]
  423490:	ldr	x2, [sp, #56]
  423494:	ldur	x8, [x29, #-8]
  423498:	add	x3, x8, #0x20
  42349c:	add	x0, sp, #0x2c
  4234a0:	bl	41da58 <wcrtomb@plt+0x1aca8>
  4234a4:	str	x0, [sp, #48]
  4234a8:	ldr	x8, [sp, #48]
  4234ac:	mov	x9, #0xffffffffffffffff    	// #-1
  4234b0:	mov	w10, #0x1                   	// #1
  4234b4:	cmp	x8, x9
  4234b8:	str	w10, [sp, #8]
  4234bc:	b.eq	42350c <_obstack_memory_used@@Base+0x5370>  // b.none
  4234c0:	ldr	x8, [sp, #48]
  4234c4:	mov	w9, #0x1                   	// #1
  4234c8:	str	w9, [sp, #8]
  4234cc:	cbz	x8, 42350c <_obstack_memory_used@@Base+0x5370>
  4234d0:	ldr	x8, [sp, #48]
  4234d4:	mov	x9, #0xfffffffffffffffe    	// #-2
  4234d8:	mov	w10, #0x0                   	// #0
  4234dc:	cmp	x8, x9
  4234e0:	str	w10, [sp, #4]
  4234e4:	b.ne	423504 <_obstack_memory_used@@Base+0x5368>  // b.any
  4234e8:	ldur	x8, [x29, #-8]
  4234ec:	ldr	x8, [x8, #64]
  4234f0:	ldur	x9, [x29, #-8]
  4234f4:	ldr	x9, [x9, #88]
  4234f8:	cmp	x8, x9
  4234fc:	cset	w10, ge  // ge = tcont
  423500:	str	w10, [sp, #4]
  423504:	ldr	w8, [sp, #4]
  423508:	str	w8, [sp, #8]
  42350c:	ldr	w8, [sp, #8]
  423510:	and	w8, w8, #0x1
  423514:	mov	w0, w8
  423518:	sxtw	x9, w0
  42351c:	cbz	x9, 423590 <_obstack_memory_used@@Base+0x53f4>
  423520:	mov	x8, #0x1                   	// #1
  423524:	str	x8, [sp, #48]
  423528:	ldur	x8, [x29, #-8]
  42352c:	ldr	x8, [x8]
  423530:	ldur	x9, [x29, #-8]
  423534:	ldr	x9, [x9, #40]
  423538:	ldr	x10, [sp, #72]
  42353c:	add	x9, x9, x10
  423540:	ldrb	w11, [x8, x9]
  423544:	str	w11, [sp, #44]
  423548:	ldur	x8, [x29, #-8]
  42354c:	ldr	x8, [x8, #120]
  423550:	cmp	x8, #0x0
  423554:	cset	w11, ne  // ne = any
  423558:	and	w11, w11, #0x1
  42355c:	mov	w0, w11
  423560:	sxtw	x8, w0
  423564:	cbz	x8, 423580 <_obstack_memory_used@@Base+0x53e4>
  423568:	ldur	x8, [x29, #-8]
  42356c:	ldr	x8, [x8, #120]
  423570:	ldr	w9, [sp, #44]
  423574:	mov	w10, w9
  423578:	ldrb	w9, [x8, x10]
  42357c:	str	w9, [sp, #44]
  423580:	ldur	x8, [x29, #-8]
  423584:	ldr	x9, [sp, #80]
  423588:	str	x9, [x8, #32]
  42358c:	b	4235c0 <_obstack_memory_used@@Base+0x5424>
  423590:	ldr	x8, [sp, #48]
  423594:	mov	x9, #0xfffffffffffffffe    	// #-2
  423598:	cmp	x8, x9
  42359c:	cset	w10, eq  // eq = none
  4235a0:	and	w10, w10, #0x1
  4235a4:	mov	w0, w10
  4235a8:	sxtw	x8, w0
  4235ac:	cbz	x8, 4235c0 <_obstack_memory_used@@Base+0x5424>
  4235b0:	ldur	x8, [x29, #-8]
  4235b4:	ldr	x9, [sp, #80]
  4235b8:	str	x9, [x8, #32]
  4235bc:	b	423624 <_obstack_memory_used@@Base+0x5488>
  4235c0:	ldr	w8, [sp, #44]
  4235c4:	ldur	x9, [x29, #-8]
  4235c8:	ldr	x9, [x9, #16]
  4235cc:	ldr	x10, [sp, #72]
  4235d0:	add	x11, x10, #0x1
  4235d4:	str	x11, [sp, #72]
  4235d8:	str	w8, [x9, x10, lsl #2]
  4235dc:	ldr	x9, [sp, #72]
  4235e0:	ldr	x10, [sp, #48]
  4235e4:	add	x9, x9, x10
  4235e8:	subs	x9, x9, #0x1
  4235ec:	str	x9, [sp, #56]
  4235f0:	ldr	x8, [sp, #72]
  4235f4:	ldr	x9, [sp, #56]
  4235f8:	cmp	x8, x9
  4235fc:	b.ge	423620 <_obstack_memory_used@@Base+0x5484>  // b.tcont
  423600:	ldur	x8, [x29, #-8]
  423604:	ldr	x8, [x8, #16]
  423608:	ldr	x9, [sp, #72]
  42360c:	add	x10, x9, #0x1
  423610:	str	x10, [sp, #72]
  423614:	mov	w11, #0xffffffff            	// #-1
  423618:	str	w11, [x8, x9, lsl #2]
  42361c:	b	4235f0 <_obstack_memory_used@@Base+0x5454>
  423620:	b	42335c <_obstack_memory_used@@Base+0x51c0>
  423624:	ldr	x8, [sp, #72]
  423628:	ldur	x9, [x29, #-8]
  42362c:	str	x8, [x9, #48]
  423630:	ldr	x8, [sp, #72]
  423634:	ldur	x9, [x29, #-8]
  423638:	str	x8, [x9, #56]
  42363c:	ldp	x29, x30, [sp, #160]
  423640:	add	sp, sp, #0xb0
  423644:	ret
  423648:	sub	sp, sp, #0x30
  42364c:	str	x0, [sp, #40]
  423650:	ldr	x8, [sp, #40]
  423654:	ldr	x8, [x8, #64]
  423658:	ldr	x9, [sp, #40]
  42365c:	ldr	x9, [x9, #88]
  423660:	cmp	x8, x9
  423664:	b.le	423678 <_obstack_memory_used@@Base+0x54dc>
  423668:	ldr	x8, [sp, #40]
  42366c:	ldr	x8, [x8, #88]
  423670:	str	x8, [sp, #8]
  423674:	b	423684 <_obstack_memory_used@@Base+0x54e8>
  423678:	ldr	x8, [sp, #40]
  42367c:	ldr	x8, [x8, #64]
  423680:	str	x8, [sp, #8]
  423684:	ldr	x8, [sp, #8]
  423688:	str	x8, [sp, #24]
  42368c:	ldr	x8, [sp, #40]
  423690:	ldr	x8, [x8, #48]
  423694:	str	x8, [sp, #32]
  423698:	ldr	x8, [sp, #32]
  42369c:	ldr	x9, [sp, #24]
  4236a0:	cmp	x8, x9
  4236a4:	b.ge	423700 <_obstack_memory_used@@Base+0x5564>  // b.tcont
  4236a8:	ldr	x8, [sp, #40]
  4236ac:	ldr	x8, [x8]
  4236b0:	ldr	x9, [sp, #40]
  4236b4:	ldr	x9, [x9, #40]
  4236b8:	ldr	x10, [sp, #32]
  4236bc:	add	x9, x9, x10
  4236c0:	ldrb	w11, [x8, x9]
  4236c4:	str	w11, [sp, #20]
  4236c8:	ldr	x8, [sp, #40]
  4236cc:	ldr	x8, [x8, #120]
  4236d0:	ldrsw	x9, [sp, #20]
  4236d4:	add	x8, x8, x9
  4236d8:	ldrb	w11, [x8]
  4236dc:	ldr	x8, [sp, #40]
  4236e0:	ldr	x8, [x8, #8]
  4236e4:	ldr	x9, [sp, #32]
  4236e8:	add	x8, x8, x9
  4236ec:	strb	w11, [x8]
  4236f0:	ldr	x8, [sp, #32]
  4236f4:	add	x8, x8, #0x1
  4236f8:	str	x8, [sp, #32]
  4236fc:	b	423698 <_obstack_memory_used@@Base+0x54fc>
  423700:	ldr	x8, [sp, #32]
  423704:	ldr	x9, [sp, #40]
  423708:	str	x8, [x9, #48]
  42370c:	ldr	x8, [sp, #32]
  423710:	ldr	x9, [sp, #40]
  423714:	str	x8, [x9, #56]
  423718:	add	sp, sp, #0x30
  42371c:	ret
  423720:	sub	sp, sp, #0x30
  423724:	stp	x29, x30, [sp, #32]
  423728:	add	x29, sp, #0x20
  42372c:	stur	x0, [x29, #-8]
  423730:	str	x1, [sp, #16]
  423734:	str	x2, [sp, #8]
  423738:	ldur	x0, [x29, #-8]
  42373c:	ldr	x1, [sp, #16]
  423740:	ldr	x2, [sp, #8]
  423744:	bl	423a40 <_obstack_memory_used@@Base+0x58a4>
  423748:	ldr	x8, [sp, #16]
  42374c:	ldr	x9, [x8, #72]
  423750:	add	x9, x9, w0, sxtw
  423754:	str	x9, [x8, #72]
  423758:	ldp	x29, x30, [sp, #32]
  42375c:	add	sp, sp, #0x30
  423760:	ret
  423764:	sub	sp, sp, #0x80
  423768:	stp	x29, x30, [sp, #112]
  42376c:	add	x29, sp, #0x70
  423770:	mov	x8, xzr
  423774:	stur	x0, [x29, #-16]
  423778:	stur	x1, [x29, #-24]
  42377c:	stur	x2, [x29, #-32]
  423780:	stur	x3, [x29, #-40]
  423784:	stur	x4, [x29, #-48]
  423788:	str	x5, [sp, #56]
  42378c:	ldur	x9, [x29, #-24]
  423790:	ldr	x9, [x9]
  423794:	str	x9, [sp, #48]
  423798:	str	x8, [sp, #32]
  42379c:	ldr	x8, [sp, #48]
  4237a0:	ldr	x8, [x8, #168]
  4237a4:	str	x8, [sp, #24]
  4237a8:	ldur	x0, [x29, #-16]
  4237ac:	ldur	x1, [x29, #-24]
  4237b0:	ldur	x2, [x29, #-32]
  4237b4:	ldur	x3, [x29, #-40]
  4237b8:	ldur	x4, [x29, #-48]
  4237bc:	ldr	x5, [sp, #56]
  4237c0:	bl	424640 <_obstack_memory_used@@Base+0x64a4>
  4237c4:	str	x0, [sp, #40]
  4237c8:	ldr	x8, [sp, #56]
  4237cc:	ldr	w10, [x8]
  4237d0:	mov	w11, #0x0                   	// #0
  4237d4:	str	w11, [sp, #12]
  4237d8:	cbz	w10, 4237ec <_obstack_memory_used@@Base+0x5650>
  4237dc:	ldr	x8, [sp, #40]
  4237e0:	cmp	x8, #0x0
  4237e4:	cset	w9, eq  // eq = none
  4237e8:	str	w9, [sp, #12]
  4237ec:	ldr	w8, [sp, #12]
  4237f0:	and	w8, w8, #0x1
  4237f4:	mov	w0, w8
  4237f8:	sxtw	x9, w0
  4237fc:	cbz	x9, 42380c <_obstack_memory_used@@Base+0x5670>
  423800:	mov	x8, xzr
  423804:	stur	x8, [x29, #-8]
  423808:	b	42398c <_obstack_memory_used@@Base+0x57f0>
  42380c:	ldur	x8, [x29, #-32]
  423810:	ldr	w9, [x8, #8]
  423814:	and	w9, w9, #0xff
  423818:	cmp	w9, #0xa
  42381c:	b.ne	423984 <_obstack_memory_used@@Base+0x57e8>  // b.any
  423820:	ldur	x0, [x29, #-32]
  423824:	ldur	x1, [x29, #-16]
  423828:	ldur	x8, [x29, #-40]
  42382c:	orr	x2, x8, #0x800000
  423830:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  423834:	ldur	x8, [x29, #-32]
  423838:	ldr	w9, [x8, #8]
  42383c:	and	w9, w9, #0xff
  423840:	cmp	w9, #0xa
  423844:	b.eq	42392c <_obstack_memory_used@@Base+0x5790>  // b.none
  423848:	ldur	x8, [x29, #-32]
  42384c:	ldr	w9, [x8, #8]
  423850:	and	w9, w9, #0xff
  423854:	cmp	w9, #0x2
  423858:	b.eq	42392c <_obstack_memory_used@@Base+0x5790>  // b.none
  42385c:	ldur	x8, [x29, #-48]
  423860:	cbz	x8, 423878 <_obstack_memory_used@@Base+0x56dc>
  423864:	ldur	x8, [x29, #-32]
  423868:	ldr	w9, [x8, #8]
  42386c:	and	w9, w9, #0xff
  423870:	cmp	w9, #0x9
  423874:	b.eq	42392c <_obstack_memory_used@@Base+0x5790>  // b.none
  423878:	ldr	x8, [sp, #48]
  42387c:	ldr	x8, [x8, #168]
  423880:	str	x8, [sp, #16]
  423884:	ldr	x8, [sp, #24]
  423888:	ldr	x9, [sp, #48]
  42388c:	str	x8, [x9, #168]
  423890:	ldur	x0, [x29, #-16]
  423894:	ldur	x1, [x29, #-24]
  423898:	ldur	x2, [x29, #-32]
  42389c:	ldur	x3, [x29, #-40]
  4238a0:	ldur	x4, [x29, #-48]
  4238a4:	ldr	x5, [sp, #56]
  4238a8:	bl	424640 <_obstack_memory_used@@Base+0x64a4>
  4238ac:	str	x0, [sp, #32]
  4238b0:	ldr	x8, [sp, #56]
  4238b4:	ldr	w10, [x8]
  4238b8:	mov	w11, #0x0                   	// #0
  4238bc:	str	w11, [sp, #8]
  4238c0:	cbz	w10, 4238d4 <_obstack_memory_used@@Base+0x5738>
  4238c4:	ldr	x8, [sp, #32]
  4238c8:	cmp	x8, #0x0
  4238cc:	cset	w9, eq  // eq = none
  4238d0:	str	w9, [sp, #8]
  4238d4:	ldr	w8, [sp, #8]
  4238d8:	and	w8, w8, #0x1
  4238dc:	mov	w0, w8
  4238e0:	sxtw	x9, w0
  4238e4:	cbz	x9, 423914 <_obstack_memory_used@@Base+0x5778>
  4238e8:	ldr	x8, [sp, #40]
  4238ec:	cbz	x8, 423908 <_obstack_memory_used@@Base+0x576c>
  4238f0:	ldr	x0, [sp, #40]
  4238f4:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x5e64>
  4238f8:	add	x1, x1, #0x9c0
  4238fc:	mov	x8, xzr
  423900:	mov	x2, x8
  423904:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  423908:	mov	x8, xzr
  42390c:	stur	x8, [x29, #-8]
  423910:	b	42398c <_obstack_memory_used@@Base+0x57f0>
  423914:	ldr	x8, [sp, #16]
  423918:	ldr	x9, [sp, #48]
  42391c:	ldr	x10, [x9, #168]
  423920:	orr	x8, x10, x8
  423924:	str	x8, [x9, #168]
  423928:	b	423934 <_obstack_memory_used@@Base+0x5798>
  42392c:	mov	x8, xzr
  423930:	str	x8, [sp, #32]
  423934:	ldr	x0, [sp, #48]
  423938:	ldr	x1, [sp, #40]
  42393c:	ldr	x2, [sp, #32]
  423940:	mov	w3, #0xa                   	// #10
  423944:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  423948:	str	x0, [sp, #40]
  42394c:	ldr	x8, [sp, #40]
  423950:	cmp	x8, #0x0
  423954:	cset	w9, eq  // eq = none
  423958:	and	w9, w9, #0x1
  42395c:	mov	w0, w9
  423960:	sxtw	x8, w0
  423964:	cbz	x8, 423980 <_obstack_memory_used@@Base+0x57e4>
  423968:	ldr	x8, [sp, #56]
  42396c:	mov	w9, #0xc                   	// #12
  423970:	str	w9, [x8]
  423974:	mov	x8, xzr
  423978:	stur	x8, [x29, #-8]
  42397c:	b	42398c <_obstack_memory_used@@Base+0x57f0>
  423980:	b	42380c <_obstack_memory_used@@Base+0x5670>
  423984:	ldr	x8, [sp, #40]
  423988:	stur	x8, [x29, #-8]
  42398c:	ldur	x0, [x29, #-8]
  423990:	ldp	x29, x30, [sp, #112]
  423994:	add	sp, sp, #0x80
  423998:	ret
  42399c:	sub	sp, sp, #0x40
  4239a0:	stp	x29, x30, [sp, #48]
  4239a4:	add	x29, sp, #0x30
  4239a8:	mov	x8, sp
  4239ac:	stur	x0, [x29, #-8]
  4239b0:	stur	x1, [x29, #-16]
  4239b4:	str	x2, [sp, #24]
  4239b8:	str	w3, [sp, #20]
  4239bc:	str	xzr, [sp]
  4239c0:	ldr	w9, [sp, #20]
  4239c4:	ldr	w10, [sp, #8]
  4239c8:	and	w9, w9, #0xff
  4239cc:	and	w10, w10, #0xffffff00
  4239d0:	orr	w9, w10, w9
  4239d4:	str	w9, [sp, #8]
  4239d8:	ldr	w9, [sp, #8]
  4239dc:	and	w9, w9, #0xfffc00ff
  4239e0:	str	w9, [sp, #8]
  4239e4:	ldr	w9, [sp, #8]
  4239e8:	and	w9, w9, #0xfffbffff
  4239ec:	str	w9, [sp, #8]
  4239f0:	ldr	w9, [sp, #8]
  4239f4:	and	w9, w9, #0xfff7ffff
  4239f8:	str	w9, [sp, #8]
  4239fc:	ldr	w9, [sp, #8]
  423a00:	and	w9, w9, #0xffefffff
  423a04:	str	w9, [sp, #8]
  423a08:	ldr	w9, [sp, #8]
  423a0c:	and	w9, w9, #0xffdfffff
  423a10:	str	w9, [sp, #8]
  423a14:	ldr	w9, [sp, #8]
  423a18:	and	w9, w9, #0xffbfffff
  423a1c:	str	w9, [sp, #8]
  423a20:	ldur	x0, [x29, #-8]
  423a24:	ldur	x1, [x29, #-16]
  423a28:	ldr	x2, [sp, #24]
  423a2c:	mov	x3, x8
  423a30:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  423a34:	ldp	x29, x30, [sp, #48]
  423a38:	add	sp, sp, #0x40
  423a3c:	ret
  423a40:	sub	sp, sp, #0x70
  423a44:	stp	x29, x30, [sp, #96]
  423a48:	add	x29, sp, #0x60
  423a4c:	stur	x0, [x29, #-16]
  423a50:	stur	x1, [x29, #-24]
  423a54:	stur	x2, [x29, #-32]
  423a58:	ldur	x8, [x29, #-24]
  423a5c:	ldr	x8, [x8, #104]
  423a60:	ldur	x9, [x29, #-24]
  423a64:	ldr	x9, [x9, #72]
  423a68:	cmp	x8, x9
  423a6c:	b.gt	423a8c <_obstack_memory_used@@Base+0x58f0>
  423a70:	ldur	x8, [x29, #-16]
  423a74:	ldr	w9, [x8, #8]
  423a78:	and	w9, w9, #0xffffff00
  423a7c:	orr	w9, w9, #0x2
  423a80:	str	w9, [x8, #8]
  423a84:	stur	wzr, [x29, #-4]
  423a88:	b	424428 <_obstack_memory_used@@Base+0x628c>
  423a8c:	ldur	x8, [x29, #-24]
  423a90:	ldr	x8, [x8, #8]
  423a94:	ldur	x9, [x29, #-24]
  423a98:	ldr	x9, [x9, #72]
  423a9c:	add	x9, x9, #0x0
  423aa0:	add	x8, x8, x9
  423aa4:	ldrb	w10, [x8]
  423aa8:	sturb	w10, [x29, #-33]
  423aac:	ldurb	w10, [x29, #-33]
  423ab0:	ldur	x8, [x29, #-16]
  423ab4:	strb	w10, [x8]
  423ab8:	ldur	x8, [x29, #-16]
  423abc:	ldr	w10, [x8, #8]
  423ac0:	and	w10, w10, #0xffbfffff
  423ac4:	str	w10, [x8, #8]
  423ac8:	ldur	x8, [x29, #-16]
  423acc:	ldr	w10, [x8, #8]
  423ad0:	and	w10, w10, #0xffdfffff
  423ad4:	str	w10, [x8, #8]
  423ad8:	ldur	x8, [x29, #-24]
  423adc:	ldr	w10, [x8, #144]
  423ae0:	cmp	w10, #0x1
  423ae4:	b.le	423b54 <_obstack_memory_used@@Base+0x59b8>
  423ae8:	ldur	x8, [x29, #-24]
  423aec:	ldr	x8, [x8, #72]
  423af0:	ldur	x9, [x29, #-24]
  423af4:	ldr	x9, [x9, #48]
  423af8:	cmp	x8, x9
  423afc:	b.eq	423b54 <_obstack_memory_used@@Base+0x59b8>  // b.none
  423b00:	ldur	x8, [x29, #-24]
  423b04:	ldr	x8, [x8, #16]
  423b08:	ldur	x9, [x29, #-24]
  423b0c:	ldr	x9, [x9, #72]
  423b10:	ldr	w10, [x8, x9, lsl #2]
  423b14:	mov	w11, #0xffffffff            	// #-1
  423b18:	cmp	w10, w11
  423b1c:	b.ne	423b54 <_obstack_memory_used@@Base+0x59b8>  // b.any
  423b20:	ldur	x8, [x29, #-16]
  423b24:	ldr	w9, [x8, #8]
  423b28:	and	w9, w9, #0xffffff00
  423b2c:	mov	w10, #0x1                   	// #1
  423b30:	orr	w9, w9, #0x1
  423b34:	str	w9, [x8, #8]
  423b38:	ldur	x8, [x29, #-16]
  423b3c:	ldr	w9, [x8, #8]
  423b40:	and	w9, w9, #0xffdfffff
  423b44:	orr	w9, w9, #0x200000
  423b48:	str	w9, [x8, #8]
  423b4c:	stur	w10, [x29, #-4]
  423b50:	b	424428 <_obstack_memory_used@@Base+0x628c>
  423b54:	ldurb	w8, [x29, #-33]
  423b58:	cmp	w8, #0x5c
  423b5c:	b.ne	424024 <_obstack_memory_used@@Base+0x5e88>  // b.any
  423b60:	ldur	x8, [x29, #-24]
  423b64:	ldr	x8, [x8, #72]
  423b68:	add	x8, x8, #0x1
  423b6c:	ldur	x9, [x29, #-24]
  423b70:	ldr	x9, [x9, #88]
  423b74:	cmp	x8, x9
  423b78:	b.lt	423ba0 <_obstack_memory_used@@Base+0x5a04>  // b.tstop
  423b7c:	ldur	x8, [x29, #-16]
  423b80:	ldr	w9, [x8, #8]
  423b84:	and	w9, w9, #0xffffff00
  423b88:	mov	w10, #0x24                  	// #36
  423b8c:	orr	w9, w9, w10
  423b90:	str	w9, [x8, #8]
  423b94:	mov	w9, #0x1                   	// #1
  423b98:	stur	w9, [x29, #-4]
  423b9c:	b	424428 <_obstack_memory_used@@Base+0x628c>
  423ba0:	ldur	x0, [x29, #-24]
  423ba4:	mov	x1, #0x1                   	// #1
  423ba8:	bl	424438 <_obstack_memory_used@@Base+0x629c>
  423bac:	sturb	w0, [x29, #-34]
  423bb0:	ldurb	w8, [x29, #-34]
  423bb4:	ldur	x9, [x29, #-16]
  423bb8:	strb	w8, [x9]
  423bbc:	ldur	x9, [x29, #-16]
  423bc0:	ldr	w8, [x9, #8]
  423bc4:	and	w8, w8, #0xffffff00
  423bc8:	orr	w8, w8, #0x1
  423bcc:	str	w8, [x9, #8]
  423bd0:	ldur	x9, [x29, #-24]
  423bd4:	ldr	w8, [x9, #144]
  423bd8:	cmp	w8, #0x1
  423bdc:	b.le	423c48 <_obstack_memory_used@@Base+0x5aac>
  423be0:	ldur	x0, [x29, #-24]
  423be4:	ldur	x8, [x29, #-24]
  423be8:	ldr	x8, [x8, #72]
  423bec:	add	x1, x8, #0x1
  423bf0:	bl	4245ec <_obstack_memory_used@@Base+0x6450>
  423bf4:	stur	w0, [x29, #-40]
  423bf8:	ldur	w0, [x29, #-40]
  423bfc:	bl	402c30 <iswalnum@plt>
  423c00:	mov	w9, #0x1                   	// #1
  423c04:	str	w9, [sp, #28]
  423c08:	cbnz	w0, 423c1c <_obstack_memory_used@@Base+0x5a80>
  423c0c:	ldur	w8, [x29, #-40]
  423c10:	cmp	w8, #0x5f
  423c14:	cset	w8, eq  // eq = none
  423c18:	str	w8, [sp, #28]
  423c1c:	ldr	w8, [sp, #28]
  423c20:	tst	w8, #0x1
  423c24:	cset	w8, ne  // ne = any
  423c28:	and	w8, w8, #0x1
  423c2c:	ldur	x9, [x29, #-16]
  423c30:	ldr	w10, [x9, #8]
  423c34:	and	w8, w8, #0x1
  423c38:	and	w10, w10, #0xffbfffff
  423c3c:	orr	w8, w10, w8, lsl #22
  423c40:	str	w8, [x9, #8]
  423c44:	b	423ca0 <_obstack_memory_used@@Base+0x5b04>
  423c48:	bl	402b20 <__ctype_b_loc@plt>
  423c4c:	ldr	x8, [x0]
  423c50:	ldurb	w9, [x29, #-34]
  423c54:	ldrh	w9, [x8, w9, sxtw #1]
  423c58:	and	w9, w9, #0x8
  423c5c:	mov	w10, #0x1                   	// #1
  423c60:	str	w10, [sp, #24]
  423c64:	cbnz	w9, 423c78 <_obstack_memory_used@@Base+0x5adc>
  423c68:	ldurb	w8, [x29, #-34]
  423c6c:	cmp	w8, #0x5f
  423c70:	cset	w8, eq  // eq = none
  423c74:	str	w8, [sp, #24]
  423c78:	ldr	w8, [sp, #24]
  423c7c:	tst	w8, #0x1
  423c80:	cset	w8, ne  // ne = any
  423c84:	and	w8, w8, #0x1
  423c88:	ldur	x9, [x29, #-16]
  423c8c:	ldr	w10, [x9, #8]
  423c90:	and	w8, w8, #0x1
  423c94:	and	w10, w10, #0xffbfffff
  423c98:	orr	w8, w10, w8, lsl #22
  423c9c:	str	w8, [x9, #8]
  423ca0:	ldurb	w8, [x29, #-34]
  423ca4:	subs	w8, w8, #0x27
  423ca8:	mov	w9, w8
  423cac:	ubfx	x9, x9, #0, #32
  423cb0:	cmp	x9, #0x56
  423cb4:	str	x9, [sp, #16]
  423cb8:	b.hi	424018 <_obstack_memory_used@@Base+0x5e7c>  // b.pmore
  423cbc:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  423cc0:	add	x8, x8, #0xc9c
  423cc4:	ldr	x11, [sp, #16]
  423cc8:	ldrsw	x10, [x8, x11, lsl #2]
  423ccc:	add	x9, x8, x10
  423cd0:	br	x9
  423cd4:	ldur	x8, [x29, #-32]
  423cd8:	and	x8, x8, #0x400
  423cdc:	cbnz	x8, 423d04 <_obstack_memory_used@@Base+0x5b68>
  423ce0:	ldur	x8, [x29, #-32]
  423ce4:	and	x8, x8, #0x8000
  423ce8:	cbnz	x8, 423d04 <_obstack_memory_used@@Base+0x5b68>
  423cec:	ldur	x8, [x29, #-16]
  423cf0:	ldr	w9, [x8, #8]
  423cf4:	and	w9, w9, #0xffffff00
  423cf8:	mov	w10, #0xa                   	// #10
  423cfc:	orr	w9, w9, w10
  423d00:	str	w9, [x8, #8]
  423d04:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423d08:	ldur	x8, [x29, #-32]
  423d0c:	and	x8, x8, #0x4000
  423d10:	cbnz	x8, 423d40 <_obstack_memory_used@@Base+0x5ba4>
  423d14:	ldur	x8, [x29, #-16]
  423d18:	ldr	w9, [x8, #8]
  423d1c:	and	w9, w9, #0xffffff00
  423d20:	orr	w9, w9, #0x4
  423d24:	str	w9, [x8, #8]
  423d28:	ldurb	w9, [x29, #-34]
  423d2c:	subs	w9, w9, #0x31
  423d30:	mov	w0, w9
  423d34:	sxtw	x8, w0
  423d38:	ldur	x10, [x29, #-16]
  423d3c:	str	x8, [x10]
  423d40:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423d44:	ldur	x8, [x29, #-32]
  423d48:	and	x8, x8, #0x80000
  423d4c:	cbnz	x8, 423d70 <_obstack_memory_used@@Base+0x5bd4>
  423d50:	ldur	x8, [x29, #-16]
  423d54:	ldr	w9, [x8, #8]
  423d58:	and	w9, w9, #0xffffff00
  423d5c:	orr	w9, w9, #0xc
  423d60:	str	w9, [x8, #8]
  423d64:	ldur	x8, [x29, #-16]
  423d68:	mov	w9, #0x6                   	// #6
  423d6c:	str	w9, [x8]
  423d70:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423d74:	ldur	x8, [x29, #-32]
  423d78:	and	x8, x8, #0x80000
  423d7c:	cbnz	x8, 423da0 <_obstack_memory_used@@Base+0x5c04>
  423d80:	ldur	x8, [x29, #-16]
  423d84:	ldr	w9, [x8, #8]
  423d88:	and	w9, w9, #0xffffff00
  423d8c:	orr	w9, w9, #0xc
  423d90:	str	w9, [x8, #8]
  423d94:	ldur	x8, [x29, #-16]
  423d98:	mov	w9, #0x9                   	// #9
  423d9c:	str	w9, [x8]
  423da0:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423da4:	ldur	x8, [x29, #-32]
  423da8:	and	x8, x8, #0x80000
  423dac:	cbnz	x8, 423dd0 <_obstack_memory_used@@Base+0x5c34>
  423db0:	ldur	x8, [x29, #-16]
  423db4:	ldr	w9, [x8, #8]
  423db8:	and	w9, w9, #0xffffff00
  423dbc:	orr	w9, w9, #0xc
  423dc0:	str	w9, [x8, #8]
  423dc4:	ldur	x8, [x29, #-16]
  423dc8:	mov	w9, #0x100                 	// #256
  423dcc:	str	w9, [x8]
  423dd0:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423dd4:	ldur	x8, [x29, #-32]
  423dd8:	and	x8, x8, #0x80000
  423ddc:	cbnz	x8, 423e00 <_obstack_memory_used@@Base+0x5c64>
  423de0:	ldur	x8, [x29, #-16]
  423de4:	ldr	w9, [x8, #8]
  423de8:	and	w9, w9, #0xffffff00
  423dec:	orr	w9, w9, #0xc
  423df0:	str	w9, [x8, #8]
  423df4:	ldur	x8, [x29, #-16]
  423df8:	mov	w9, #0x200                 	// #512
  423dfc:	str	w9, [x8]
  423e00:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423e04:	ldur	x8, [x29, #-32]
  423e08:	and	x8, x8, #0x80000
  423e0c:	cbnz	x8, 423e24 <_obstack_memory_used@@Base+0x5c88>
  423e10:	ldur	x8, [x29, #-16]
  423e14:	ldr	w9, [x8, #8]
  423e18:	and	w9, w9, #0xffffff00
  423e1c:	orr	w9, w9, #0x20
  423e20:	str	w9, [x8, #8]
  423e24:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423e28:	ldur	x8, [x29, #-32]
  423e2c:	and	x8, x8, #0x80000
  423e30:	cbnz	x8, 423e4c <_obstack_memory_used@@Base+0x5cb0>
  423e34:	ldur	x8, [x29, #-16]
  423e38:	ldr	w9, [x8, #8]
  423e3c:	and	w9, w9, #0xffffff00
  423e40:	mov	w10, #0x21                  	// #33
  423e44:	orr	w9, w9, w10
  423e48:	str	w9, [x8, #8]
  423e4c:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423e50:	ldur	x8, [x29, #-32]
  423e54:	and	x8, x8, #0x80000
  423e58:	cbnz	x8, 423e74 <_obstack_memory_used@@Base+0x5cd8>
  423e5c:	ldur	x8, [x29, #-16]
  423e60:	ldr	w9, [x8, #8]
  423e64:	and	w9, w9, #0xffffff00
  423e68:	mov	w10, #0x22                  	// #34
  423e6c:	orr	w9, w9, w10
  423e70:	str	w9, [x8, #8]
  423e74:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423e78:	ldur	x8, [x29, #-32]
  423e7c:	and	x8, x8, #0x80000
  423e80:	cbnz	x8, 423e9c <_obstack_memory_used@@Base+0x5d00>
  423e84:	ldur	x8, [x29, #-16]
  423e88:	ldr	w9, [x8, #8]
  423e8c:	and	w9, w9, #0xffffff00
  423e90:	mov	w10, #0x23                  	// #35
  423e94:	orr	w9, w9, w10
  423e98:	str	w9, [x8, #8]
  423e9c:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423ea0:	ldur	x8, [x29, #-32]
  423ea4:	and	x8, x8, #0x80000
  423ea8:	cbnz	x8, 423ecc <_obstack_memory_used@@Base+0x5d30>
  423eac:	ldur	x8, [x29, #-16]
  423eb0:	ldr	w9, [x8, #8]
  423eb4:	and	w9, w9, #0xffffff00
  423eb8:	orr	w9, w9, #0xc
  423ebc:	str	w9, [x8, #8]
  423ec0:	ldur	x8, [x29, #-16]
  423ec4:	mov	w9, #0x40                  	// #64
  423ec8:	str	w9, [x8]
  423ecc:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423ed0:	ldur	x8, [x29, #-32]
  423ed4:	and	x8, x8, #0x80000
  423ed8:	cbnz	x8, 423efc <_obstack_memory_used@@Base+0x5d60>
  423edc:	ldur	x8, [x29, #-16]
  423ee0:	ldr	w9, [x8, #8]
  423ee4:	and	w9, w9, #0xffffff00
  423ee8:	orr	w9, w9, #0xc
  423eec:	str	w9, [x8, #8]
  423ef0:	ldur	x8, [x29, #-16]
  423ef4:	mov	w9, #0x80                  	// #128
  423ef8:	str	w9, [x8]
  423efc:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423f00:	ldur	x8, [x29, #-32]
  423f04:	and	x8, x8, #0x2000
  423f08:	cbnz	x8, 423f20 <_obstack_memory_used@@Base+0x5d84>
  423f0c:	ldur	x8, [x29, #-16]
  423f10:	ldr	w9, [x8, #8]
  423f14:	and	w9, w9, #0xffffff00
  423f18:	orr	w9, w9, #0x8
  423f1c:	str	w9, [x8, #8]
  423f20:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423f24:	ldur	x8, [x29, #-32]
  423f28:	and	x8, x8, #0x2000
  423f2c:	cbnz	x8, 423f48 <_obstack_memory_used@@Base+0x5dac>
  423f30:	ldur	x8, [x29, #-16]
  423f34:	ldr	w9, [x8, #8]
  423f38:	and	w9, w9, #0xffffff00
  423f3c:	mov	w10, #0x9                   	// #9
  423f40:	orr	w9, w9, w10
  423f44:	str	w9, [x8, #8]
  423f48:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423f4c:	ldur	x8, [x29, #-32]
  423f50:	and	x8, x8, #0x400
  423f54:	cbnz	x8, 423f7c <_obstack_memory_used@@Base+0x5de0>
  423f58:	ldur	x8, [x29, #-32]
  423f5c:	and	x8, x8, #0x2
  423f60:	cbz	x8, 423f7c <_obstack_memory_used@@Base+0x5de0>
  423f64:	ldur	x8, [x29, #-16]
  423f68:	ldr	w9, [x8, #8]
  423f6c:	and	w9, w9, #0xffffff00
  423f70:	mov	w10, #0x12                  	// #18
  423f74:	orr	w9, w9, w10
  423f78:	str	w9, [x8, #8]
  423f7c:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423f80:	ldur	x8, [x29, #-32]
  423f84:	and	x8, x8, #0x400
  423f88:	cbnz	x8, 423fb0 <_obstack_memory_used@@Base+0x5e14>
  423f8c:	ldur	x8, [x29, #-32]
  423f90:	and	x8, x8, #0x2
  423f94:	cbz	x8, 423fb0 <_obstack_memory_used@@Base+0x5e14>
  423f98:	ldur	x8, [x29, #-16]
  423f9c:	ldr	w9, [x8, #8]
  423fa0:	and	w9, w9, #0xffffff00
  423fa4:	mov	w10, #0x13                  	// #19
  423fa8:	orr	w9, w9, w10
  423fac:	str	w9, [x8, #8]
  423fb0:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423fb4:	ldur	x8, [x29, #-32]
  423fb8:	and	x8, x8, #0x200
  423fbc:	cbz	x8, 423fe4 <_obstack_memory_used@@Base+0x5e48>
  423fc0:	ldur	x8, [x29, #-32]
  423fc4:	and	x8, x8, #0x1000
  423fc8:	cbnz	x8, 423fe4 <_obstack_memory_used@@Base+0x5e48>
  423fcc:	ldur	x8, [x29, #-16]
  423fd0:	ldr	w9, [x8, #8]
  423fd4:	and	w9, w9, #0xffffff00
  423fd8:	mov	w10, #0x17                  	// #23
  423fdc:	orr	w9, w9, w10
  423fe0:	str	w9, [x8, #8]
  423fe4:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  423fe8:	ldur	x8, [x29, #-32]
  423fec:	and	x8, x8, #0x200
  423ff0:	cbz	x8, 424014 <_obstack_memory_used@@Base+0x5e78>
  423ff4:	ldur	x8, [x29, #-32]
  423ff8:	and	x8, x8, #0x1000
  423ffc:	cbnz	x8, 424014 <_obstack_memory_used@@Base+0x5e78>
  424000:	ldur	x8, [x29, #-16]
  424004:	ldr	w9, [x8, #8]
  424008:	and	w9, w9, #0xffffff00
  42400c:	orr	w9, w9, #0x18
  424010:	str	w9, [x8, #8]
  424014:	b	424018 <_obstack_memory_used@@Base+0x5e7c>
  424018:	mov	w8, #0x2                   	// #2
  42401c:	stur	w8, [x29, #-4]
  424020:	b	424428 <_obstack_memory_used@@Base+0x628c>
  424024:	ldur	x8, [x29, #-16]
  424028:	ldr	w9, [x8, #8]
  42402c:	and	w9, w9, #0xffffff00
  424030:	orr	w9, w9, #0x1
  424034:	str	w9, [x8, #8]
  424038:	ldur	x8, [x29, #-24]
  42403c:	ldr	w9, [x8, #144]
  424040:	cmp	w9, #0x1
  424044:	b.le	4240ac <_obstack_memory_used@@Base+0x5f10>
  424048:	ldur	x0, [x29, #-24]
  42404c:	ldur	x8, [x29, #-24]
  424050:	ldr	x1, [x8, #72]
  424054:	bl	4245ec <_obstack_memory_used@@Base+0x6450>
  424058:	stur	w0, [x29, #-44]
  42405c:	ldur	w0, [x29, #-44]
  424060:	bl	402c30 <iswalnum@plt>
  424064:	mov	w9, #0x1                   	// #1
  424068:	str	w9, [sp, #12]
  42406c:	cbnz	w0, 424080 <_obstack_memory_used@@Base+0x5ee4>
  424070:	ldur	w8, [x29, #-44]
  424074:	cmp	w8, #0x5f
  424078:	cset	w8, eq  // eq = none
  42407c:	str	w8, [sp, #12]
  424080:	ldr	w8, [sp, #12]
  424084:	tst	w8, #0x1
  424088:	cset	w8, ne  // ne = any
  42408c:	and	w8, w8, #0x1
  424090:	ldur	x9, [x29, #-16]
  424094:	ldr	w10, [x9, #8]
  424098:	and	w8, w8, #0x1
  42409c:	and	w10, w10, #0xffbfffff
  4240a0:	orr	w8, w10, w8, lsl #22
  4240a4:	str	w8, [x9, #8]
  4240a8:	b	424104 <_obstack_memory_used@@Base+0x5f68>
  4240ac:	bl	402b20 <__ctype_b_loc@plt>
  4240b0:	ldr	x8, [x0]
  4240b4:	ldur	x9, [x29, #-16]
  4240b8:	ldrb	w10, [x9]
  4240bc:	ldrh	w10, [x8, w10, sxtw #1]
  4240c0:	and	w10, w10, #0x8
  4240c4:	mov	w11, #0x1                   	// #1
  4240c8:	str	w11, [sp, #8]
  4240cc:	cbnz	w10, 4240e4 <_obstack_memory_used@@Base+0x5f48>
  4240d0:	ldur	x8, [x29, #-16]
  4240d4:	ldrb	w9, [x8]
  4240d8:	cmp	w9, #0x5f
  4240dc:	cset	w9, eq  // eq = none
  4240e0:	str	w9, [sp, #8]
  4240e4:	ldr	w8, [sp, #8]
  4240e8:	and	w8, w8, #0x1
  4240ec:	ldur	x9, [x29, #-16]
  4240f0:	ldr	w10, [x9, #8]
  4240f4:	and	w8, w8, #0x1
  4240f8:	and	w10, w10, #0xffbfffff
  4240fc:	orr	w8, w10, w8, lsl #22
  424100:	str	w8, [x9, #8]
  424104:	ldurb	w8, [x29, #-33]
  424108:	subs	w8, w8, #0xa
  42410c:	mov	w9, w8
  424110:	ubfx	x9, x9, #0, #32
  424114:	cmp	x9, #0x73
  424118:	str	x9, [sp]
  42411c:	b.hi	424420 <_obstack_memory_used@@Base+0x6284>  // b.pmore
  424120:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  424124:	add	x8, x8, #0xacc
  424128:	ldr	x11, [sp]
  42412c:	ldrsw	x10, [x8, x11, lsl #2]
  424130:	add	x9, x8, x10
  424134:	br	x9
  424138:	ldur	x8, [x29, #-32]
  42413c:	and	x8, x8, #0x800
  424140:	cbz	x8, 42415c <_obstack_memory_used@@Base+0x5fc0>
  424144:	ldur	x8, [x29, #-16]
  424148:	ldr	w9, [x8, #8]
  42414c:	and	w9, w9, #0xffffff00
  424150:	mov	w10, #0xa                   	// #10
  424154:	orr	w9, w9, w10
  424158:	str	w9, [x8, #8]
  42415c:	b	424420 <_obstack_memory_used@@Base+0x6284>
  424160:	ldur	x8, [x29, #-32]
  424164:	and	x8, x8, #0x400
  424168:	cbnz	x8, 424190 <_obstack_memory_used@@Base+0x5ff4>
  42416c:	ldur	x8, [x29, #-32]
  424170:	and	x8, x8, #0x8000
  424174:	cbz	x8, 424190 <_obstack_memory_used@@Base+0x5ff4>
  424178:	ldur	x8, [x29, #-16]
  42417c:	ldr	w9, [x8, #8]
  424180:	and	w9, w9, #0xffffff00
  424184:	mov	w10, #0xa                   	// #10
  424188:	orr	w9, w9, w10
  42418c:	str	w9, [x8, #8]
  424190:	b	424420 <_obstack_memory_used@@Base+0x6284>
  424194:	ldur	x8, [x29, #-16]
  424198:	ldr	w9, [x8, #8]
  42419c:	and	w9, w9, #0xffffff00
  4241a0:	mov	w10, #0xb                   	// #11
  4241a4:	orr	w9, w9, w10
  4241a8:	str	w9, [x8, #8]
  4241ac:	b	424420 <_obstack_memory_used@@Base+0x6284>
  4241b0:	ldur	x8, [x29, #-32]
  4241b4:	and	x8, x8, #0x400
  4241b8:	cbnz	x8, 4241e0 <_obstack_memory_used@@Base+0x6044>
  4241bc:	ldur	x8, [x29, #-32]
  4241c0:	and	x8, x8, #0x2
  4241c4:	cbnz	x8, 4241e0 <_obstack_memory_used@@Base+0x6044>
  4241c8:	ldur	x8, [x29, #-16]
  4241cc:	ldr	w9, [x8, #8]
  4241d0:	and	w9, w9, #0xffffff00
  4241d4:	mov	w10, #0x12                  	// #18
  4241d8:	orr	w9, w9, w10
  4241dc:	str	w9, [x8, #8]
  4241e0:	b	424420 <_obstack_memory_used@@Base+0x6284>
  4241e4:	ldur	x8, [x29, #-32]
  4241e8:	and	x8, x8, #0x400
  4241ec:	cbnz	x8, 424214 <_obstack_memory_used@@Base+0x6078>
  4241f0:	ldur	x8, [x29, #-32]
  4241f4:	and	x8, x8, #0x2
  4241f8:	cbnz	x8, 424214 <_obstack_memory_used@@Base+0x6078>
  4241fc:	ldur	x8, [x29, #-16]
  424200:	ldr	w9, [x8, #8]
  424204:	and	w9, w9, #0xffffff00
  424208:	mov	w10, #0x13                  	// #19
  42420c:	orr	w9, w9, w10
  424210:	str	w9, [x8, #8]
  424214:	b	424420 <_obstack_memory_used@@Base+0x6284>
  424218:	ldur	x8, [x29, #-32]
  42421c:	and	x8, x8, #0x200
  424220:	cbz	x8, 424248 <_obstack_memory_used@@Base+0x60ac>
  424224:	ldur	x8, [x29, #-32]
  424228:	and	x8, x8, #0x1000
  42422c:	cbz	x8, 424248 <_obstack_memory_used@@Base+0x60ac>
  424230:	ldur	x8, [x29, #-16]
  424234:	ldr	w9, [x8, #8]
  424238:	and	w9, w9, #0xffffff00
  42423c:	mov	w10, #0x17                  	// #23
  424240:	orr	w9, w9, w10
  424244:	str	w9, [x8, #8]
  424248:	b	424420 <_obstack_memory_used@@Base+0x6284>
  42424c:	ldur	x8, [x29, #-32]
  424250:	and	x8, x8, #0x200
  424254:	cbz	x8, 424278 <_obstack_memory_used@@Base+0x60dc>
  424258:	ldur	x8, [x29, #-32]
  42425c:	and	x8, x8, #0x1000
  424260:	cbz	x8, 424278 <_obstack_memory_used@@Base+0x60dc>
  424264:	ldur	x8, [x29, #-16]
  424268:	ldr	w9, [x8, #8]
  42426c:	and	w9, w9, #0xffffff00
  424270:	orr	w9, w9, #0x18
  424274:	str	w9, [x8, #8]
  424278:	b	424420 <_obstack_memory_used@@Base+0x6284>
  42427c:	ldur	x8, [x29, #-32]
  424280:	and	x8, x8, #0x2000
  424284:	cbz	x8, 42429c <_obstack_memory_used@@Base+0x6100>
  424288:	ldur	x8, [x29, #-16]
  42428c:	ldr	w9, [x8, #8]
  424290:	and	w9, w9, #0xffffff00
  424294:	orr	w9, w9, #0x8
  424298:	str	w9, [x8, #8]
  42429c:	b	424420 <_obstack_memory_used@@Base+0x6284>
  4242a0:	ldur	x8, [x29, #-32]
  4242a4:	and	x8, x8, #0x2000
  4242a8:	cbz	x8, 4242c4 <_obstack_memory_used@@Base+0x6128>
  4242ac:	ldur	x8, [x29, #-16]
  4242b0:	ldr	w9, [x8, #8]
  4242b4:	and	w9, w9, #0xffffff00
  4242b8:	mov	w10, #0x9                   	// #9
  4242bc:	orr	w9, w9, w10
  4242c0:	str	w9, [x8, #8]
  4242c4:	b	424420 <_obstack_memory_used@@Base+0x6284>
  4242c8:	ldur	x8, [x29, #-16]
  4242cc:	ldr	w9, [x8, #8]
  4242d0:	and	w9, w9, #0xffffff00
  4242d4:	mov	w10, #0x14                  	// #20
  4242d8:	orr	w9, w9, w10
  4242dc:	str	w9, [x8, #8]
  4242e0:	b	424420 <_obstack_memory_used@@Base+0x6284>
  4242e4:	ldur	x8, [x29, #-16]
  4242e8:	ldr	w9, [x8, #8]
  4242ec:	and	w9, w9, #0xffffff00
  4242f0:	mov	w10, #0x5                   	// #5
  4242f4:	orr	w9, w9, w10
  4242f8:	str	w9, [x8, #8]
  4242fc:	b	424420 <_obstack_memory_used@@Base+0x6284>
  424300:	ldur	x8, [x29, #-32]
  424304:	mov	x9, #0x8                   	// #8
  424308:	movk	x9, #0x80, lsl #16
  42430c:	and	x8, x8, x9
  424310:	cbnz	x8, 42435c <_obstack_memory_used@@Base+0x61c0>
  424314:	ldur	x8, [x29, #-24]
  424318:	ldr	x8, [x8, #72]
  42431c:	cbz	x8, 42435c <_obstack_memory_used@@Base+0x61c0>
  424320:	ldur	x8, [x29, #-24]
  424324:	ldr	x8, [x8, #8]
  424328:	ldur	x9, [x29, #-24]
  42432c:	ldr	x9, [x9, #72]
  424330:	subs	x9, x9, #0x1
  424334:	add	x8, x8, x9
  424338:	ldrb	w10, [x8]
  42433c:	sturb	w10, [x29, #-45]
  424340:	ldur	x8, [x29, #-32]
  424344:	and	x8, x8, #0x800
  424348:	cbz	x8, 424358 <_obstack_memory_used@@Base+0x61bc>
  42434c:	ldurb	w8, [x29, #-45]
  424350:	cmp	w8, #0xa
  424354:	b.eq	42435c <_obstack_memory_used@@Base+0x61c0>  // b.none
  424358:	b	424420 <_obstack_memory_used@@Base+0x6284>
  42435c:	ldur	x8, [x29, #-16]
  424360:	ldr	w9, [x8, #8]
  424364:	and	w9, w9, #0xffffff00
  424368:	orr	w9, w9, #0xc
  42436c:	str	w9, [x8, #8]
  424370:	ldur	x8, [x29, #-16]
  424374:	mov	w9, #0x10                  	// #16
  424378:	str	w9, [x8]
  42437c:	b	424420 <_obstack_memory_used@@Base+0x6284>
  424380:	ldur	x8, [x29, #-32]
  424384:	and	x8, x8, #0x8
  424388:	cbnz	x8, 4243fc <_obstack_memory_used@@Base+0x6260>
  42438c:	ldur	x8, [x29, #-24]
  424390:	ldr	x8, [x8, #72]
  424394:	add	x8, x8, #0x1
  424398:	ldur	x9, [x29, #-24]
  42439c:	ldr	x9, [x9, #88]
  4243a0:	cmp	x8, x9
  4243a4:	b.eq	4243fc <_obstack_memory_used@@Base+0x6260>  // b.none
  4243a8:	ldur	x8, [x29, #-24]
  4243ac:	ldr	x9, [x8, #72]
  4243b0:	add	x9, x9, #0x1
  4243b4:	str	x9, [x8, #72]
  4243b8:	ldur	x1, [x29, #-24]
  4243bc:	ldur	x2, [x29, #-32]
  4243c0:	add	x0, sp, #0x20
  4243c4:	bl	423a40 <_obstack_memory_used@@Base+0x58a4>
  4243c8:	ldur	x8, [x29, #-24]
  4243cc:	ldr	x9, [x8, #72]
  4243d0:	subs	x9, x9, #0x1
  4243d4:	str	x9, [x8, #72]
  4243d8:	ldr	w10, [sp, #40]
  4243dc:	and	w10, w10, #0xff
  4243e0:	cmp	w10, #0xa
  4243e4:	b.eq	4243fc <_obstack_memory_used@@Base+0x6260>  // b.none
  4243e8:	ldr	w8, [sp, #40]
  4243ec:	and	w8, w8, #0xff
  4243f0:	cmp	w8, #0x9
  4243f4:	b.eq	4243fc <_obstack_memory_used@@Base+0x6260>  // b.none
  4243f8:	b	424420 <_obstack_memory_used@@Base+0x6284>
  4243fc:	ldur	x8, [x29, #-16]
  424400:	ldr	w9, [x8, #8]
  424404:	and	w9, w9, #0xffffff00
  424408:	orr	w9, w9, #0xc
  42440c:	str	w9, [x8, #8]
  424410:	ldur	x8, [x29, #-16]
  424414:	mov	w9, #0x20                  	// #32
  424418:	str	w9, [x8]
  42441c:	b	424420 <_obstack_memory_used@@Base+0x6284>
  424420:	mov	w8, #0x1                   	// #1
  424424:	stur	w8, [x29, #-4]
  424428:	ldur	w0, [x29, #-4]
  42442c:	ldp	x29, x30, [sp, #96]
  424430:	add	sp, sp, #0x70
  424434:	ret
  424438:	sub	sp, sp, #0x30
  42443c:	mov	w8, #0x1                   	// #1
  424440:	str	x0, [sp, #32]
  424444:	str	x1, [sp, #24]
  424448:	ldr	x9, [sp, #32]
  42444c:	ldrb	w10, [x9, #139]
  424450:	cmp	w10, #0x0
  424454:	cset	w10, ne  // ne = any
  424458:	eor	w8, w10, w8
  42445c:	and	w8, w8, #0x1
  424460:	mov	w0, w8
  424464:	sxtw	x9, w0
  424468:	cbz	x9, 424494 <_obstack_memory_used@@Base+0x62f8>
  42446c:	ldr	x8, [sp, #32]
  424470:	ldr	x8, [x8, #8]
  424474:	ldr	x9, [sp, #32]
  424478:	ldr	x9, [x9, #72]
  42447c:	ldr	x10, [sp, #24]
  424480:	add	x9, x9, x10
  424484:	add	x8, x8, x9
  424488:	ldrb	w11, [x8]
  42448c:	strb	w11, [sp, #47]
  424490:	b	4245e0 <_obstack_memory_used@@Base+0x6444>
  424494:	ldr	x8, [sp, #32]
  424498:	ldr	w9, [x8, #144]
  42449c:	cmp	w9, #0x1
  4244a0:	b.le	424544 <_obstack_memory_used@@Base+0x63a8>
  4244a4:	ldr	x8, [sp, #32]
  4244a8:	ldr	x8, [x8, #16]
  4244ac:	ldr	x9, [sp, #32]
  4244b0:	ldr	x9, [x9, #72]
  4244b4:	ldr	x10, [sp, #24]
  4244b8:	add	x9, x9, x10
  4244bc:	ldr	w11, [x8, x9, lsl #2]
  4244c0:	mov	w12, #0xffffffff            	// #-1
  4244c4:	cmp	w11, w12
  4244c8:	b.eq	42451c <_obstack_memory_used@@Base+0x6380>  // b.none
  4244cc:	ldr	x8, [sp, #32]
  4244d0:	ldr	x8, [x8, #48]
  4244d4:	ldr	x9, [sp, #32]
  4244d8:	ldr	x9, [x9, #72]
  4244dc:	ldr	x10, [sp, #24]
  4244e0:	add	x9, x9, x10
  4244e4:	add	x9, x9, #0x1
  4244e8:	cmp	x8, x9
  4244ec:	b.eq	424544 <_obstack_memory_used@@Base+0x63a8>  // b.none
  4244f0:	ldr	x8, [sp, #32]
  4244f4:	ldr	x8, [x8, #16]
  4244f8:	ldr	x9, [sp, #32]
  4244fc:	ldr	x9, [x9, #72]
  424500:	ldr	x10, [sp, #24]
  424504:	add	x9, x9, x10
  424508:	add	x9, x9, #0x1
  42450c:	ldr	w11, [x8, x9, lsl #2]
  424510:	mov	w12, #0xffffffff            	// #-1
  424514:	cmp	w11, w12
  424518:	b.ne	424544 <_obstack_memory_used@@Base+0x63a8>  // b.any
  42451c:	ldr	x8, [sp, #32]
  424520:	ldr	x8, [x8, #8]
  424524:	ldr	x9, [sp, #32]
  424528:	ldr	x9, [x9, #72]
  42452c:	ldr	x10, [sp, #24]
  424530:	add	x9, x9, x10
  424534:	add	x8, x8, x9
  424538:	ldrb	w11, [x8]
  42453c:	strb	w11, [sp, #47]
  424540:	b	4245e0 <_obstack_memory_used@@Base+0x6444>
  424544:	ldr	x8, [sp, #32]
  424548:	ldr	x8, [x8, #72]
  42454c:	ldr	x9, [sp, #24]
  424550:	add	x8, x8, x9
  424554:	str	x8, [sp, #8]
  424558:	ldr	x8, [sp, #32]
  42455c:	ldrb	w10, [x8, #140]
  424560:	cbz	w10, 424578 <_obstack_memory_used@@Base+0x63dc>
  424564:	ldr	x8, [sp, #32]
  424568:	ldr	x8, [x8, #24]
  42456c:	ldr	x9, [sp, #8]
  424570:	ldr	x8, [x8, x9, lsl #3]
  424574:	str	x8, [sp, #8]
  424578:	ldr	x8, [sp, #32]
  42457c:	ldr	x8, [x8]
  424580:	ldr	x9, [sp, #32]
  424584:	ldr	x9, [x9, #40]
  424588:	ldr	x10, [sp, #8]
  42458c:	add	x9, x9, x10
  424590:	ldrb	w11, [x8, x9]
  424594:	str	w11, [sp, #20]
  424598:	ldr	x8, [sp, #32]
  42459c:	ldrb	w11, [x8, #140]
  4245a0:	cbz	w11, 4245d8 <_obstack_memory_used@@Base+0x643c>
  4245a4:	ldr	w8, [sp, #20]
  4245a8:	and	w8, w8, #0xffffff80
  4245ac:	cbz	w8, 4245d8 <_obstack_memory_used@@Base+0x643c>
  4245b0:	ldr	x8, [sp, #32]
  4245b4:	ldr	x8, [x8, #8]
  4245b8:	ldr	x9, [sp, #32]
  4245bc:	ldr	x9, [x9, #72]
  4245c0:	ldr	x10, [sp, #24]
  4245c4:	add	x9, x9, x10
  4245c8:	add	x8, x8, x9
  4245cc:	ldrb	w11, [x8]
  4245d0:	strb	w11, [sp, #47]
  4245d4:	b	4245e0 <_obstack_memory_used@@Base+0x6444>
  4245d8:	ldr	w8, [sp, #20]
  4245dc:	strb	w8, [sp, #47]
  4245e0:	ldrb	w0, [sp, #47]
  4245e4:	add	sp, sp, #0x30
  4245e8:	ret
  4245ec:	sub	sp, sp, #0x20
  4245f0:	str	x0, [sp, #16]
  4245f4:	str	x1, [sp, #8]
  4245f8:	ldr	x8, [sp, #16]
  4245fc:	ldr	w9, [x8, #144]
  424600:	cmp	w9, #0x1
  424604:	b.ne	424620 <_obstack_memory_used@@Base+0x6484>  // b.any
  424608:	ldr	x8, [sp, #16]
  42460c:	ldr	x8, [x8, #8]
  424610:	ldr	x9, [sp, #8]
  424614:	ldrb	w10, [x8, x9]
  424618:	str	w10, [sp, #28]
  42461c:	b	424634 <_obstack_memory_used@@Base+0x6498>
  424620:	ldr	x8, [sp, #16]
  424624:	ldr	x8, [x8, #16]
  424628:	ldr	x9, [sp, #8]
  42462c:	ldr	w10, [x8, x9, lsl #2]
  424630:	str	w10, [sp, #28]
  424634:	ldr	w0, [sp, #28]
  424638:	add	sp, sp, #0x20
  42463c:	ret
  424640:	sub	sp, sp, #0x90
  424644:	stp	x29, x30, [sp, #128]
  424648:	add	x29, sp, #0x80
  42464c:	adrp	x8, 424000 <_obstack_memory_used@@Base+0x5e64>
  424650:	add	x8, x8, #0x9c0
  424654:	stur	x0, [x29, #-16]
  424658:	stur	x1, [x29, #-24]
  42465c:	stur	x2, [x29, #-32]
  424660:	stur	x3, [x29, #-40]
  424664:	stur	x4, [x29, #-48]
  424668:	stur	x5, [x29, #-56]
  42466c:	ldur	x9, [x29, #-24]
  424670:	ldr	x9, [x9]
  424674:	str	x9, [sp, #48]
  424678:	ldur	x0, [x29, #-16]
  42467c:	ldur	x1, [x29, #-24]
  424680:	ldur	x2, [x29, #-32]
  424684:	ldur	x3, [x29, #-40]
  424688:	ldur	x4, [x29, #-48]
  42468c:	ldur	x5, [x29, #-56]
  424690:	str	x8, [sp, #32]
  424694:	bl	4249f8 <_obstack_memory_used@@Base+0x685c>
  424698:	str	x0, [sp, #64]
  42469c:	ldur	x8, [x29, #-56]
  4246a0:	ldr	w10, [x8]
  4246a4:	mov	w11, #0x0                   	// #0
  4246a8:	str	w11, [sp, #28]
  4246ac:	cbz	w10, 4246c0 <_obstack_memory_used@@Base+0x6524>
  4246b0:	ldr	x8, [sp, #64]
  4246b4:	cmp	x8, #0x0
  4246b8:	cset	w9, eq  // eq = none
  4246bc:	str	w9, [sp, #28]
  4246c0:	ldr	w8, [sp, #28]
  4246c4:	and	w8, w8, #0x1
  4246c8:	mov	w0, w8
  4246cc:	sxtw	x9, w0
  4246d0:	cbz	x9, 4246e0 <_obstack_memory_used@@Base+0x6544>
  4246d4:	mov	x8, xzr
  4246d8:	stur	x8, [x29, #-8]
  4246dc:	b	424874 <_obstack_memory_used@@Base+0x66d8>
  4246e0:	ldur	x8, [x29, #-32]
  4246e4:	ldr	w9, [x8, #8]
  4246e8:	and	w9, w9, #0xff
  4246ec:	mov	w10, #0x0                   	// #0
  4246f0:	cmp	w9, #0xa
  4246f4:	str	w10, [sp, #24]
  4246f8:	b.eq	424748 <_obstack_memory_used@@Base+0x65ac>  // b.none
  4246fc:	ldur	x8, [x29, #-32]
  424700:	ldr	w9, [x8, #8]
  424704:	and	w9, w9, #0xff
  424708:	mov	w10, #0x0                   	// #0
  42470c:	cmp	w9, #0x2
  424710:	str	w10, [sp, #24]
  424714:	b.eq	424748 <_obstack_memory_used@@Base+0x65ac>  // b.none
  424718:	ldur	x8, [x29, #-48]
  42471c:	mov	w9, #0x1                   	// #1
  424720:	str	w9, [sp, #20]
  424724:	cbz	x8, 424740 <_obstack_memory_used@@Base+0x65a4>
  424728:	ldur	x8, [x29, #-32]
  42472c:	ldr	w9, [x8, #8]
  424730:	and	w9, w9, #0xff
  424734:	cmp	w9, #0x9
  424738:	cset	w9, ne  // ne = any
  42473c:	str	w9, [sp, #20]
  424740:	ldr	w8, [sp, #20]
  424744:	str	w8, [sp, #24]
  424748:	ldr	w8, [sp, #24]
  42474c:	tbnz	w8, #0, 424754 <_obstack_memory_used@@Base+0x65b8>
  424750:	b	42486c <_obstack_memory_used@@Base+0x66d0>
  424754:	ldur	x0, [x29, #-16]
  424758:	ldur	x1, [x29, #-24]
  42475c:	ldur	x2, [x29, #-32]
  424760:	ldur	x3, [x29, #-40]
  424764:	ldur	x4, [x29, #-48]
  424768:	ldur	x5, [x29, #-56]
  42476c:	bl	4249f8 <_obstack_memory_used@@Base+0x685c>
  424770:	str	x0, [sp, #56]
  424774:	ldur	x8, [x29, #-56]
  424778:	ldr	w9, [x8]
  42477c:	mov	w10, #0x0                   	// #0
  424780:	str	w10, [sp, #16]
  424784:	cbz	w9, 424798 <_obstack_memory_used@@Base+0x65fc>
  424788:	ldr	x8, [sp, #56]
  42478c:	cmp	x8, #0x0
  424790:	cset	w9, eq  // eq = none
  424794:	str	w9, [sp, #16]
  424798:	ldr	w8, [sp, #16]
  42479c:	and	w8, w8, #0x1
  4247a0:	mov	w0, w8
  4247a4:	sxtw	x9, w0
  4247a8:	cbz	x9, 4247d4 <_obstack_memory_used@@Base+0x6638>
  4247ac:	ldr	x8, [sp, #64]
  4247b0:	cbz	x8, 4247c8 <_obstack_memory_used@@Base+0x662c>
  4247b4:	ldr	x0, [sp, #64]
  4247b8:	ldr	x1, [sp, #32]
  4247bc:	mov	x8, xzr
  4247c0:	mov	x2, x8
  4247c4:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  4247c8:	mov	x8, xzr
  4247cc:	stur	x8, [x29, #-8]
  4247d0:	b	424874 <_obstack_memory_used@@Base+0x66d8>
  4247d4:	ldr	x8, [sp, #64]
  4247d8:	cbz	x8, 424858 <_obstack_memory_used@@Base+0x66bc>
  4247dc:	ldr	x8, [sp, #56]
  4247e0:	cbz	x8, 424858 <_obstack_memory_used@@Base+0x66bc>
  4247e4:	ldr	x0, [sp, #48]
  4247e8:	ldr	x1, [sp, #64]
  4247ec:	ldr	x2, [sp, #56]
  4247f0:	mov	w3, #0x10                  	// #16
  4247f4:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  4247f8:	str	x0, [sp, #40]
  4247fc:	ldr	x8, [sp, #40]
  424800:	cbnz	x8, 42484c <_obstack_memory_used@@Base+0x66b0>
  424804:	ldr	x0, [sp, #56]
  424808:	ldr	x1, [sp, #32]
  42480c:	mov	x8, xzr
  424810:	mov	x2, x8
  424814:	str	x2, [sp, #8]
  424818:	str	x8, [sp]
  42481c:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  424820:	ldr	x8, [sp, #64]
  424824:	mov	x0, x8
  424828:	ldr	x1, [sp, #32]
  42482c:	ldr	x2, [sp, #8]
  424830:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  424834:	ldur	x8, [x29, #-56]
  424838:	mov	w9, #0xc                   	// #12
  42483c:	str	w9, [x8]
  424840:	ldr	x8, [sp]
  424844:	stur	x8, [x29, #-8]
  424848:	b	424874 <_obstack_memory_used@@Base+0x66d8>
  42484c:	ldr	x8, [sp, #40]
  424850:	str	x8, [sp, #64]
  424854:	b	424868 <_obstack_memory_used@@Base+0x66cc>
  424858:	ldr	x8, [sp, #64]
  42485c:	cbnz	x8, 424868 <_obstack_memory_used@@Base+0x66cc>
  424860:	ldr	x8, [sp, #56]
  424864:	str	x8, [sp, #64]
  424868:	b	4246e0 <_obstack_memory_used@@Base+0x6544>
  42486c:	ldr	x8, [sp, #64]
  424870:	stur	x8, [x29, #-8]
  424874:	ldur	x0, [x29, #-8]
  424878:	ldp	x29, x30, [sp, #128]
  42487c:	add	sp, sp, #0x90
  424880:	ret
  424884:	sub	sp, sp, #0x50
  424888:	stp	x29, x30, [sp, #64]
  42488c:	add	x29, sp, #0x40
  424890:	stur	x0, [x29, #-16]
  424894:	stur	x1, [x29, #-24]
  424898:	str	x2, [sp, #32]
  42489c:	ldur	x8, [x29, #-16]
  4248a0:	str	x8, [sp, #24]
  4248a4:	ldr	x8, [sp, #24]
  4248a8:	ldr	x8, [x8, #8]
  4248ac:	mov	w9, #0x1                   	// #1
  4248b0:	str	w9, [sp, #8]
  4248b4:	cbnz	x8, 4248cc <_obstack_memory_used@@Base+0x6730>
  4248b8:	ldr	x8, [sp, #24]
  4248bc:	ldr	x8, [x8, #16]
  4248c0:	cmp	x8, #0x0
  4248c4:	cset	w9, ne  // ne = any
  4248c8:	str	w9, [sp, #8]
  4248cc:	ldr	w8, [sp, #8]
  4248d0:	tbnz	w8, #0, 4248d8 <_obstack_memory_used@@Base+0x673c>
  4248d4:	b	424904 <_obstack_memory_used@@Base+0x6768>
  4248d8:	ldr	x8, [sp, #24]
  4248dc:	ldr	x8, [x8, #8]
  4248e0:	cbz	x8, 4248f4 <_obstack_memory_used@@Base+0x6758>
  4248e4:	ldr	x8, [sp, #24]
  4248e8:	ldr	x8, [x8, #8]
  4248ec:	str	x8, [sp, #24]
  4248f0:	b	424900 <_obstack_memory_used@@Base+0x6764>
  4248f4:	ldr	x8, [sp, #24]
  4248f8:	ldr	x8, [x8, #16]
  4248fc:	str	x8, [sp, #24]
  424900:	b	4248a4 <_obstack_memory_used@@Base+0x6708>
  424904:	ldur	x8, [x29, #-24]
  424908:	ldr	x0, [sp, #32]
  42490c:	ldr	x1, [sp, #24]
  424910:	blr	x8
  424914:	str	w0, [sp, #12]
  424918:	ldr	w9, [sp, #12]
  42491c:	cmp	w9, #0x0
  424920:	cset	w9, ne  // ne = any
  424924:	and	w9, w9, #0x1
  424928:	mov	w1, w9
  42492c:	sxtw	x8, w1
  424930:	cbz	x8, 424940 <_obstack_memory_used@@Base+0x67a4>
  424934:	ldr	w8, [sp, #12]
  424938:	stur	w8, [x29, #-4]
  42493c:	b	4249b0 <_obstack_memory_used@@Base+0x6814>
  424940:	ldr	x8, [sp, #24]
  424944:	ldr	x8, [x8]
  424948:	cbnz	x8, 424954 <_obstack_memory_used@@Base+0x67b8>
  42494c:	stur	wzr, [x29, #-4]
  424950:	b	4249b0 <_obstack_memory_used@@Base+0x6814>
  424954:	ldr	x8, [sp, #24]
  424958:	str	x8, [sp, #16]
  42495c:	ldr	x8, [sp, #24]
  424960:	ldr	x8, [x8]
  424964:	str	x8, [sp, #24]
  424968:	ldr	x8, [sp, #24]
  42496c:	ldr	x8, [x8, #16]
  424970:	ldr	x9, [sp, #16]
  424974:	mov	w10, #0x1                   	// #1
  424978:	cmp	x8, x9
  42497c:	str	w10, [sp, #4]
  424980:	b.eq	424998 <_obstack_memory_used@@Base+0x67fc>  // b.none
  424984:	ldr	x8, [sp, #24]
  424988:	ldr	x8, [x8, #16]
  42498c:	cmp	x8, #0x0
  424990:	cset	w9, eq  // eq = none
  424994:	str	w9, [sp, #4]
  424998:	ldr	w8, [sp, #4]
  42499c:	tbnz	w8, #0, 424904 <_obstack_memory_used@@Base+0x6768>
  4249a0:	ldr	x8, [sp, #24]
  4249a4:	ldr	x8, [x8, #16]
  4249a8:	str	x8, [sp, #24]
  4249ac:	b	4248a4 <_obstack_memory_used@@Base+0x6708>
  4249b0:	ldur	w0, [x29, #-4]
  4249b4:	ldp	x29, x30, [sp, #64]
  4249b8:	add	sp, sp, #0x50
  4249bc:	ret
  4249c0:	sub	sp, sp, #0x30
  4249c4:	stp	x29, x30, [sp, #32]
  4249c8:	add	x29, sp, #0x20
  4249cc:	mov	w8, wzr
  4249d0:	stur	x0, [x29, #-8]
  4249d4:	str	x1, [sp, #16]
  4249d8:	ldr	x9, [sp, #16]
  4249dc:	add	x0, x9, #0x28
  4249e0:	str	w8, [sp, #12]
  4249e4:	bl	420d5c <_obstack_memory_used@@Base+0x2bc0>
  4249e8:	ldr	w0, [sp, #12]
  4249ec:	ldp	x29, x30, [sp, #32]
  4249f0:	add	sp, sp, #0x30
  4249f4:	ret
  4249f8:	sub	sp, sp, #0xb0
  4249fc:	stp	x29, x30, [sp, #160]
  424a00:	add	x29, sp, #0xa0
  424a04:	stur	x0, [x29, #-16]
  424a08:	stur	x1, [x29, #-24]
  424a0c:	stur	x2, [x29, #-32]
  424a10:	stur	x3, [x29, #-40]
  424a14:	stur	x4, [x29, #-48]
  424a18:	stur	x5, [x29, #-56]
  424a1c:	ldur	x8, [x29, #-24]
  424a20:	ldr	x8, [x8]
  424a24:	stur	x8, [x29, #-64]
  424a28:	ldur	x8, [x29, #-32]
  424a2c:	ldr	w9, [x8, #8]
  424a30:	and	w9, w9, #0xff
  424a34:	subs	w9, w9, #0x1
  424a38:	mov	w8, w9
  424a3c:	ubfx	x8, x8, #0, #32
  424a40:	str	x8, [sp, #48]
  424a44:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  424a48:	add	x8, x8, #0xdf8
  424a4c:	ldr	x11, [sp, #48]
  424a50:	ldrsw	x10, [x8, x11, lsl #2]
  424a54:	add	x9, x8, x10
  424a58:	br	x9
  424a5c:	ldur	x0, [x29, #-64]
  424a60:	ldur	x3, [x29, #-32]
  424a64:	mov	x8, xzr
  424a68:	mov	x1, x8
  424a6c:	mov	x2, x8
  424a70:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424a74:	stur	x0, [x29, #-72]
  424a78:	ldur	x8, [x29, #-72]
  424a7c:	cmp	x8, #0x0
  424a80:	cset	w9, eq  // eq = none
  424a84:	and	w9, w9, #0x1
  424a88:	mov	w0, w9
  424a8c:	sxtw	x8, w0
  424a90:	cbz	x8, 424aac <_obstack_memory_used@@Base+0x6910>
  424a94:	ldur	x8, [x29, #-56]
  424a98:	mov	w9, #0xc                   	// #12
  424a9c:	str	w9, [x8]
  424aa0:	mov	x8, xzr
  424aa4:	stur	x8, [x29, #-8]
  424aa8:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424aac:	ldur	x8, [x29, #-64]
  424ab0:	ldr	w9, [x8, #180]
  424ab4:	cmp	w9, #0x1
  424ab8:	b.le	424bcc <_obstack_memory_used@@Base+0x6a30>
  424abc:	ldur	x8, [x29, #-16]
  424ac0:	ldr	x8, [x8, #104]
  424ac4:	ldur	x9, [x29, #-16]
  424ac8:	ldr	x9, [x9, #72]
  424acc:	mov	w10, #0x0                   	// #0
  424ad0:	cmp	x8, x9
  424ad4:	str	w10, [sp, #44]
  424ad8:	b.le	424b2c <_obstack_memory_used@@Base+0x6990>
  424adc:	ldur	x8, [x29, #-16]
  424ae0:	ldr	x8, [x8, #72]
  424ae4:	ldur	x9, [x29, #-16]
  424ae8:	ldr	x9, [x9, #48]
  424aec:	mov	w10, #0x1                   	// #1
  424af0:	cmp	x8, x9
  424af4:	str	w10, [sp, #40]
  424af8:	b.eq	424b20 <_obstack_memory_used@@Base+0x6984>  // b.none
  424afc:	ldur	x8, [x29, #-16]
  424b00:	ldr	x8, [x8, #16]
  424b04:	ldur	x9, [x29, #-16]
  424b08:	ldr	x9, [x9, #72]
  424b0c:	ldr	w10, [x8, x9, lsl #2]
  424b10:	mov	w11, #0xffffffff            	// #-1
  424b14:	cmp	w10, w11
  424b18:	cset	w10, ne  // ne = any
  424b1c:	str	w10, [sp, #40]
  424b20:	ldr	w8, [sp, #40]
  424b24:	eor	w8, w8, #0x1
  424b28:	str	w8, [sp, #44]
  424b2c:	ldr	w8, [sp, #44]
  424b30:	tbnz	w8, #0, 424b38 <_obstack_memory_used@@Base+0x699c>
  424b34:	b	424bcc <_obstack_memory_used@@Base+0x6a30>
  424b38:	ldur	x0, [x29, #-32]
  424b3c:	ldur	x1, [x29, #-16]
  424b40:	ldur	x2, [x29, #-40]
  424b44:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  424b48:	ldur	x0, [x29, #-64]
  424b4c:	ldur	x3, [x29, #-32]
  424b50:	mov	x8, xzr
  424b54:	mov	x1, x8
  424b58:	mov	x2, x8
  424b5c:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424b60:	str	x0, [sp, #80]
  424b64:	ldur	x0, [x29, #-64]
  424b68:	ldur	x1, [x29, #-72]
  424b6c:	ldr	x2, [sp, #80]
  424b70:	mov	w3, #0x10                  	// #16
  424b74:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  424b78:	stur	x0, [x29, #-72]
  424b7c:	ldr	x8, [sp, #80]
  424b80:	mov	w9, #0x1                   	// #1
  424b84:	str	w9, [sp, #36]
  424b88:	cbz	x8, 424b9c <_obstack_memory_used@@Base+0x6a00>
  424b8c:	ldur	x8, [x29, #-72]
  424b90:	cmp	x8, #0x0
  424b94:	cset	w9, eq  // eq = none
  424b98:	str	w9, [sp, #36]
  424b9c:	ldr	w8, [sp, #36]
  424ba0:	and	w8, w8, #0x1
  424ba4:	mov	w0, w8
  424ba8:	sxtw	x9, w0
  424bac:	cbz	x9, 424bc8 <_obstack_memory_used@@Base+0x6a2c>
  424bb0:	ldur	x8, [x29, #-56]
  424bb4:	mov	w9, #0xc                   	// #12
  424bb8:	str	w9, [x8]
  424bbc:	mov	x8, xzr
  424bc0:	stur	x8, [x29, #-8]
  424bc4:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424bc8:	b	424abc <_obstack_memory_used@@Base+0x6920>
  424bcc:	b	425228 <_obstack_memory_used@@Base+0x708c>
  424bd0:	ldur	x0, [x29, #-16]
  424bd4:	ldur	x1, [x29, #-24]
  424bd8:	ldur	x2, [x29, #-32]
  424bdc:	ldur	x3, [x29, #-40]
  424be0:	ldur	x8, [x29, #-48]
  424be4:	add	x4, x8, #0x1
  424be8:	ldur	x5, [x29, #-56]
  424bec:	bl	425524 <_obstack_memory_used@@Base+0x7388>
  424bf0:	stur	x0, [x29, #-72]
  424bf4:	ldur	x8, [x29, #-56]
  424bf8:	ldr	w9, [x8]
  424bfc:	mov	w10, #0x0                   	// #0
  424c00:	str	w10, [sp, #32]
  424c04:	cbz	w9, 424c18 <_obstack_memory_used@@Base+0x6a7c>
  424c08:	ldur	x8, [x29, #-72]
  424c0c:	cmp	x8, #0x0
  424c10:	cset	w9, eq  // eq = none
  424c14:	str	w9, [sp, #32]
  424c18:	ldr	w8, [sp, #32]
  424c1c:	and	w8, w8, #0x1
  424c20:	mov	w0, w8
  424c24:	sxtw	x9, w0
  424c28:	cbz	x9, 424c38 <_obstack_memory_used@@Base+0x6a9c>
  424c2c:	mov	x8, xzr
  424c30:	stur	x8, [x29, #-8]
  424c34:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424c38:	b	425228 <_obstack_memory_used@@Base+0x708c>
  424c3c:	ldur	x0, [x29, #-16]
  424c40:	ldur	x1, [x29, #-64]
  424c44:	ldur	x2, [x29, #-32]
  424c48:	ldur	x3, [x29, #-40]
  424c4c:	ldur	x4, [x29, #-56]
  424c50:	bl	4256f8 <_obstack_memory_used@@Base+0x755c>
  424c54:	stur	x0, [x29, #-72]
  424c58:	ldur	x8, [x29, #-56]
  424c5c:	ldr	w9, [x8]
  424c60:	mov	w10, #0x0                   	// #0
  424c64:	str	w10, [sp, #28]
  424c68:	cbz	w9, 424c7c <_obstack_memory_used@@Base+0x6ae0>
  424c6c:	ldur	x8, [x29, #-72]
  424c70:	cmp	x8, #0x0
  424c74:	cset	w9, eq  // eq = none
  424c78:	str	w9, [sp, #28]
  424c7c:	ldr	w8, [sp, #28]
  424c80:	and	w8, w8, #0x1
  424c84:	mov	w0, w8
  424c88:	sxtw	x9, w0
  424c8c:	cbz	x9, 424c9c <_obstack_memory_used@@Base+0x6b00>
  424c90:	mov	x8, xzr
  424c94:	stur	x8, [x29, #-8]
  424c98:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424c9c:	b	425228 <_obstack_memory_used@@Base+0x708c>
  424ca0:	ldur	x8, [x29, #-64]
  424ca4:	ldr	x8, [x8, #168]
  424ca8:	ldur	x9, [x29, #-32]
  424cac:	ldr	x9, [x9]
  424cb0:	mov	w10, #0x1                   	// #1
  424cb4:	lsl	w9, w10, w9
  424cb8:	mov	w0, w9
  424cbc:	sxtw	x11, w0
  424cc0:	and	x8, x8, x11
  424cc4:	cbnz	x8, 424ce0 <_obstack_memory_used@@Base+0x6b44>
  424cc8:	ldur	x8, [x29, #-56]
  424ccc:	mov	w9, #0x6                   	// #6
  424cd0:	str	w9, [x8]
  424cd4:	mov	x8, xzr
  424cd8:	stur	x8, [x29, #-8]
  424cdc:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424ce0:	ldur	x8, [x29, #-32]
  424ce4:	ldr	x8, [x8]
  424ce8:	mov	w9, #0x1                   	// #1
  424cec:	lsl	w8, w9, w8
  424cf0:	mov	w0, w8
  424cf4:	sxtw	x10, w0
  424cf8:	ldur	x11, [x29, #-64]
  424cfc:	ldr	x12, [x11, #160]
  424d00:	orr	x10, x12, x10
  424d04:	str	x10, [x11, #160]
  424d08:	ldur	x0, [x29, #-64]
  424d0c:	ldur	x3, [x29, #-32]
  424d10:	mov	x10, xzr
  424d14:	mov	x1, x10
  424d18:	mov	x2, x10
  424d1c:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424d20:	stur	x0, [x29, #-72]
  424d24:	ldur	x10, [x29, #-72]
  424d28:	cmp	x10, #0x0
  424d2c:	cset	w8, eq  // eq = none
  424d30:	and	w8, w8, #0x1
  424d34:	mov	w0, w8
  424d38:	sxtw	x10, w0
  424d3c:	cbz	x10, 424d58 <_obstack_memory_used@@Base+0x6bbc>
  424d40:	ldur	x8, [x29, #-56]
  424d44:	mov	w9, #0xc                   	// #12
  424d48:	str	w9, [x8]
  424d4c:	mov	x8, xzr
  424d50:	stur	x8, [x29, #-8]
  424d54:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424d58:	ldur	x8, [x29, #-64]
  424d5c:	ldr	x9, [x8, #152]
  424d60:	add	x9, x9, #0x1
  424d64:	str	x9, [x8, #152]
  424d68:	ldur	x8, [x29, #-64]
  424d6c:	ldrb	w10, [x8, #176]
  424d70:	and	w10, w10, #0xfffffffd
  424d74:	orr	w10, w10, #0x2
  424d78:	strb	w10, [x8, #176]
  424d7c:	b	425228 <_obstack_memory_used@@Base+0x708c>
  424d80:	ldur	x8, [x29, #-40]
  424d84:	and	x8, x8, #0x1000000
  424d88:	cbz	x8, 424da4 <_obstack_memory_used@@Base+0x6c08>
  424d8c:	ldur	x8, [x29, #-56]
  424d90:	mov	w9, #0xd                   	// #13
  424d94:	str	w9, [x8]
  424d98:	mov	x8, xzr
  424d9c:	stur	x8, [x29, #-8]
  424da0:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424da4:	ldur	x8, [x29, #-40]
  424da8:	and	x8, x8, #0x20
  424dac:	cbz	x8, 424dc8 <_obstack_memory_used@@Base+0x6c2c>
  424db0:	ldur	x8, [x29, #-56]
  424db4:	mov	w9, #0xd                   	// #13
  424db8:	str	w9, [x8]
  424dbc:	mov	x8, xzr
  424dc0:	stur	x8, [x29, #-8]
  424dc4:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424dc8:	ldur	x8, [x29, #-40]
  424dcc:	and	x8, x8, #0x10
  424dd0:	cbz	x8, 424e08 <_obstack_memory_used@@Base+0x6c6c>
  424dd4:	ldur	x0, [x29, #-32]
  424dd8:	ldur	x1, [x29, #-16]
  424ddc:	ldur	x2, [x29, #-40]
  424de0:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  424de4:	ldur	x0, [x29, #-16]
  424de8:	ldur	x1, [x29, #-24]
  424dec:	ldur	x2, [x29, #-32]
  424df0:	ldur	x3, [x29, #-40]
  424df4:	ldur	x4, [x29, #-48]
  424df8:	ldur	x5, [x29, #-56]
  424dfc:	bl	4249f8 <_obstack_memory_used@@Base+0x685c>
  424e00:	stur	x0, [x29, #-8]
  424e04:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424e08:	ldur	x8, [x29, #-32]
  424e0c:	ldr	w9, [x8, #8]
  424e10:	and	w9, w9, #0xff
  424e14:	cmp	w9, #0x9
  424e18:	b.ne	424e40 <_obstack_memory_used@@Base+0x6ca4>  // b.any
  424e1c:	ldur	x8, [x29, #-40]
  424e20:	and	x8, x8, #0x20000
  424e24:	cbnz	x8, 424e40 <_obstack_memory_used@@Base+0x6ca4>
  424e28:	ldur	x8, [x29, #-56]
  424e2c:	mov	w9, #0x10                  	// #16
  424e30:	str	w9, [x8]
  424e34:	mov	x8, xzr
  424e38:	stur	x8, [x29, #-8]
  424e3c:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424e40:	ldur	x8, [x29, #-32]
  424e44:	ldr	w9, [x8, #8]
  424e48:	and	w9, w9, #0xffffff00
  424e4c:	orr	w9, w9, #0x1
  424e50:	str	w9, [x8, #8]
  424e54:	ldur	x0, [x29, #-64]
  424e58:	ldur	x3, [x29, #-32]
  424e5c:	mov	x8, xzr
  424e60:	mov	x1, x8
  424e64:	mov	x2, x8
  424e68:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424e6c:	stur	x0, [x29, #-72]
  424e70:	ldur	x8, [x29, #-72]
  424e74:	cmp	x8, #0x0
  424e78:	cset	w9, eq  // eq = none
  424e7c:	and	w9, w9, #0x1
  424e80:	mov	w0, w9
  424e84:	sxtw	x8, w0
  424e88:	cbz	x8, 424ea4 <_obstack_memory_used@@Base+0x6d08>
  424e8c:	ldur	x8, [x29, #-56]
  424e90:	mov	w9, #0xc                   	// #12
  424e94:	str	w9, [x8]
  424e98:	mov	x8, xzr
  424e9c:	stur	x8, [x29, #-8]
  424ea0:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  424ea4:	b	425228 <_obstack_memory_used@@Base+0x708c>
  424ea8:	ldur	x8, [x29, #-32]
  424eac:	ldr	w9, [x8]
  424eb0:	mov	w10, #0x30f                 	// #783
  424eb4:	and	w9, w9, w10
  424eb8:	cbz	w9, 424ee0 <_obstack_memory_used@@Base+0x6d44>
  424ebc:	ldur	x8, [x29, #-64]
  424ec0:	ldrb	w9, [x8, #176]
  424ec4:	mov	w10, #0x4                   	// #4
  424ec8:	lsr	w9, w9, w10
  424ecc:	and	w9, w9, #0x1
  424ed0:	and	w9, w9, #0xff
  424ed4:	cbnz	w9, 424ee0 <_obstack_memory_used@@Base+0x6d44>
  424ed8:	ldur	x0, [x29, #-64]
  424edc:	bl	426168 <_obstack_memory_used@@Base+0x7fcc>
  424ee0:	ldur	x8, [x29, #-32]
  424ee4:	ldr	w9, [x8]
  424ee8:	cmp	w9, #0x100
  424eec:	b.eq	424f00 <_obstack_memory_used@@Base+0x6d64>  // b.none
  424ef0:	ldur	x8, [x29, #-32]
  424ef4:	ldr	w9, [x8]
  424ef8:	cmp	w9, #0x200
  424efc:	b.ne	425010 <_obstack_memory_used@@Base+0x6e74>  // b.any
  424f00:	ldur	x8, [x29, #-32]
  424f04:	ldr	w9, [x8]
  424f08:	cmp	w9, #0x100
  424f0c:	b.ne	424f48 <_obstack_memory_used@@Base+0x6dac>  // b.any
  424f10:	ldur	x8, [x29, #-32]
  424f14:	mov	w9, #0x6                   	// #6
  424f18:	str	w9, [x8]
  424f1c:	ldur	x0, [x29, #-64]
  424f20:	ldur	x3, [x29, #-32]
  424f24:	mov	x8, xzr
  424f28:	mov	x1, x8
  424f2c:	mov	x2, x8
  424f30:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424f34:	str	x0, [sp, #72]
  424f38:	ldur	x8, [x29, #-32]
  424f3c:	mov	w9, #0x9                   	// #9
  424f40:	str	w9, [x8]
  424f44:	b	424f7c <_obstack_memory_used@@Base+0x6de0>
  424f48:	ldur	x8, [x29, #-32]
  424f4c:	mov	w9, #0x5                   	// #5
  424f50:	str	w9, [x8]
  424f54:	ldur	x0, [x29, #-64]
  424f58:	ldur	x3, [x29, #-32]
  424f5c:	mov	x8, xzr
  424f60:	mov	x1, x8
  424f64:	mov	x2, x8
  424f68:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424f6c:	str	x0, [sp, #72]
  424f70:	ldur	x8, [x29, #-32]
  424f74:	mov	w9, #0xa                   	// #10
  424f78:	str	w9, [x8]
  424f7c:	ldur	x0, [x29, #-64]
  424f80:	ldur	x3, [x29, #-32]
  424f84:	mov	x8, xzr
  424f88:	mov	x1, x8
  424f8c:	mov	x2, x8
  424f90:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  424f94:	str	x0, [sp, #64]
  424f98:	ldur	x0, [x29, #-64]
  424f9c:	ldr	x1, [sp, #72]
  424fa0:	ldr	x2, [sp, #64]
  424fa4:	mov	w3, #0xa                   	// #10
  424fa8:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  424fac:	stur	x0, [x29, #-72]
  424fb0:	ldr	x8, [sp, #72]
  424fb4:	mov	w9, #0x1                   	// #1
  424fb8:	str	w9, [sp, #24]
  424fbc:	cbz	x8, 424fe0 <_obstack_memory_used@@Base+0x6e44>
  424fc0:	ldr	x8, [sp, #64]
  424fc4:	mov	w9, #0x1                   	// #1
  424fc8:	str	w9, [sp, #24]
  424fcc:	cbz	x8, 424fe0 <_obstack_memory_used@@Base+0x6e44>
  424fd0:	ldur	x8, [x29, #-72]
  424fd4:	cmp	x8, #0x0
  424fd8:	cset	w9, eq  // eq = none
  424fdc:	str	w9, [sp, #24]
  424fe0:	ldr	w8, [sp, #24]
  424fe4:	and	w8, w8, #0x1
  424fe8:	mov	w0, w8
  424fec:	sxtw	x9, w0
  424ff0:	cbz	x9, 42500c <_obstack_memory_used@@Base+0x6e70>
  424ff4:	ldur	x8, [x29, #-56]
  424ff8:	mov	w9, #0xc                   	// #12
  424ffc:	str	w9, [x8]
  425000:	mov	x8, xzr
  425004:	stur	x8, [x29, #-8]
  425008:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  42500c:	b	425060 <_obstack_memory_used@@Base+0x6ec4>
  425010:	ldur	x0, [x29, #-64]
  425014:	ldur	x3, [x29, #-32]
  425018:	mov	x8, xzr
  42501c:	mov	x1, x8
  425020:	mov	x2, x8
  425024:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  425028:	stur	x0, [x29, #-72]
  42502c:	ldur	x8, [x29, #-72]
  425030:	cmp	x8, #0x0
  425034:	cset	w9, eq  // eq = none
  425038:	and	w9, w9, #0x1
  42503c:	mov	w0, w9
  425040:	sxtw	x8, w0
  425044:	cbz	x8, 425060 <_obstack_memory_used@@Base+0x6ec4>
  425048:	ldur	x8, [x29, #-56]
  42504c:	mov	w9, #0xc                   	// #12
  425050:	str	w9, [x8]
  425054:	mov	x8, xzr
  425058:	stur	x8, [x29, #-8]
  42505c:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  425060:	ldur	x0, [x29, #-32]
  425064:	ldur	x1, [x29, #-16]
  425068:	ldur	x2, [x29, #-40]
  42506c:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  425070:	ldur	x8, [x29, #-72]
  425074:	stur	x8, [x29, #-8]
  425078:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  42507c:	ldur	x0, [x29, #-64]
  425080:	ldur	x3, [x29, #-32]
  425084:	mov	x8, xzr
  425088:	mov	x1, x8
  42508c:	mov	x2, x8
  425090:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  425094:	stur	x0, [x29, #-72]
  425098:	ldur	x8, [x29, #-72]
  42509c:	cmp	x8, #0x0
  4250a0:	cset	w9, eq  // eq = none
  4250a4:	and	w9, w9, #0x1
  4250a8:	mov	w0, w9
  4250ac:	sxtw	x8, w0
  4250b0:	cbz	x8, 4250cc <_obstack_memory_used@@Base+0x6f30>
  4250b4:	ldur	x8, [x29, #-56]
  4250b8:	mov	w9, #0xc                   	// #12
  4250bc:	str	w9, [x8]
  4250c0:	mov	x8, xzr
  4250c4:	stur	x8, [x29, #-8]
  4250c8:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  4250cc:	ldur	x8, [x29, #-64]
  4250d0:	ldr	w9, [x8, #180]
  4250d4:	cmp	w9, #0x1
  4250d8:	b.le	4250f0 <_obstack_memory_used@@Base+0x6f54>
  4250dc:	ldur	x8, [x29, #-64]
  4250e0:	ldrb	w9, [x8, #176]
  4250e4:	and	w9, w9, #0xfffffffd
  4250e8:	orr	w9, w9, #0x2
  4250ec:	strb	w9, [x8, #176]
  4250f0:	b	425228 <_obstack_memory_used@@Base+0x708c>
  4250f4:	ldur	x0, [x29, #-64]
  4250f8:	ldur	x8, [x29, #-16]
  4250fc:	ldr	x1, [x8, #120]
  425100:	ldur	x8, [x29, #-32]
  425104:	ldr	w9, [x8, #8]
  425108:	and	w9, w9, #0xff
  42510c:	cmp	w9, #0x21
  425110:	cset	w9, eq  // eq = none
  425114:	ldur	x5, [x29, #-56]
  425118:	adrp	x2, 439000 <_obstack_memory_used@@Base+0x1ae64>
  42511c:	add	x2, x2, #0x32a
  425120:	adrp	x3, 43a000 <_obstack_memory_used@@Base+0x1be64>
  425124:	add	x3, x3, #0x138
  425128:	and	w4, w9, #0x1
  42512c:	bl	426338 <_obstack_memory_used@@Base+0x819c>
  425130:	stur	x0, [x29, #-72]
  425134:	ldur	x8, [x29, #-56]
  425138:	ldr	w9, [x8]
  42513c:	mov	w10, #0x0                   	// #0
  425140:	str	w10, [sp, #20]
  425144:	cbz	w9, 425158 <_obstack_memory_used@@Base+0x6fbc>
  425148:	ldur	x8, [x29, #-72]
  42514c:	cmp	x8, #0x0
  425150:	cset	w9, eq  // eq = none
  425154:	str	w9, [sp, #20]
  425158:	ldr	w8, [sp, #20]
  42515c:	and	w8, w8, #0x1
  425160:	mov	w0, w8
  425164:	sxtw	x9, w0
  425168:	cbz	x9, 425178 <_obstack_memory_used@@Base+0x6fdc>
  42516c:	mov	x8, xzr
  425170:	stur	x8, [x29, #-8]
  425174:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  425178:	b	425228 <_obstack_memory_used@@Base+0x708c>
  42517c:	ldur	x0, [x29, #-64]
  425180:	ldur	x8, [x29, #-16]
  425184:	ldr	x1, [x8, #120]
  425188:	ldur	x8, [x29, #-32]
  42518c:	ldr	w9, [x8, #8]
  425190:	and	w9, w9, #0xff
  425194:	cmp	w9, #0x23
  425198:	cset	w9, eq  // eq = none
  42519c:	ldur	x5, [x29, #-56]
  4251a0:	adrp	x2, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4251a4:	add	x2, x2, #0x31e
  4251a8:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x19e64>
  4251ac:	add	x3, x3, #0x301
  4251b0:	and	w4, w9, #0x1
  4251b4:	bl	426338 <_obstack_memory_used@@Base+0x819c>
  4251b8:	stur	x0, [x29, #-72]
  4251bc:	ldur	x8, [x29, #-56]
  4251c0:	ldr	w9, [x8]
  4251c4:	mov	w10, #0x0                   	// #0
  4251c8:	str	w10, [sp, #16]
  4251cc:	cbz	w9, 4251e0 <_obstack_memory_used@@Base+0x7044>
  4251d0:	ldur	x8, [x29, #-72]
  4251d4:	cmp	x8, #0x0
  4251d8:	cset	w9, eq  // eq = none
  4251dc:	str	w9, [sp, #16]
  4251e0:	ldr	w8, [sp, #16]
  4251e4:	and	w8, w8, #0x1
  4251e8:	mov	w0, w8
  4251ec:	sxtw	x9, w0
  4251f0:	cbz	x9, 425200 <_obstack_memory_used@@Base+0x7064>
  4251f4:	mov	x8, xzr
  4251f8:	stur	x8, [x29, #-8]
  4251fc:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  425200:	b	425228 <_obstack_memory_used@@Base+0x708c>
  425204:	mov	x8, xzr
  425208:	stur	x8, [x29, #-8]
  42520c:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  425210:	ldur	x8, [x29, #-56]
  425214:	mov	w9, #0x5                   	// #5
  425218:	str	w9, [x8]
  42521c:	mov	x8, xzr
  425220:	stur	x8, [x29, #-8]
  425224:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  425228:	ldur	x0, [x29, #-32]
  42522c:	ldur	x1, [x29, #-16]
  425230:	ldur	x2, [x29, #-40]
  425234:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  425238:	ldur	x8, [x29, #-32]
  42523c:	ldr	w9, [x8, #8]
  425240:	and	w9, w9, #0xff
  425244:	mov	w10, #0x1                   	// #1
  425248:	cmp	w9, #0xb
  42524c:	str	w10, [sp, #12]
  425250:	b.eq	4252a4 <_obstack_memory_used@@Base+0x7108>  // b.none
  425254:	ldur	x8, [x29, #-32]
  425258:	ldr	w9, [x8, #8]
  42525c:	and	w9, w9, #0xff
  425260:	mov	w10, #0x1                   	// #1
  425264:	cmp	w9, #0x12
  425268:	str	w10, [sp, #12]
  42526c:	b.eq	4252a4 <_obstack_memory_used@@Base+0x7108>  // b.none
  425270:	ldur	x8, [x29, #-32]
  425274:	ldr	w9, [x8, #8]
  425278:	and	w9, w9, #0xff
  42527c:	mov	w10, #0x1                   	// #1
  425280:	cmp	w9, #0x13
  425284:	str	w10, [sp, #12]
  425288:	b.eq	4252a4 <_obstack_memory_used@@Base+0x7108>  // b.none
  42528c:	ldur	x8, [x29, #-32]
  425290:	ldr	w9, [x8, #8]
  425294:	and	w9, w9, #0xff
  425298:	cmp	w9, #0x17
  42529c:	cset	w9, eq  // eq = none
  4252a0:	str	w9, [sp, #12]
  4252a4:	ldr	w8, [sp, #12]
  4252a8:	tbnz	w8, #0, 4252b0 <_obstack_memory_used@@Base+0x7114>
  4252ac:	b	4253ac <_obstack_memory_used@@Base+0x7210>
  4252b0:	ldur	x0, [x29, #-72]
  4252b4:	ldur	x1, [x29, #-16]
  4252b8:	ldur	x2, [x29, #-64]
  4252bc:	ldur	x3, [x29, #-32]
  4252c0:	ldur	x4, [x29, #-40]
  4252c4:	ldur	x5, [x29, #-56]
  4252c8:	bl	42668c <_obstack_memory_used@@Base+0x84f0>
  4252cc:	str	x0, [sp, #56]
  4252d0:	ldur	x8, [x29, #-56]
  4252d4:	ldr	w9, [x8]
  4252d8:	mov	w10, #0x0                   	// #0
  4252dc:	str	w10, [sp, #8]
  4252e0:	cbz	w9, 4252f4 <_obstack_memory_used@@Base+0x7158>
  4252e4:	ldr	x8, [sp, #56]
  4252e8:	cmp	x8, #0x0
  4252ec:	cset	w9, eq  // eq = none
  4252f0:	str	w9, [sp, #8]
  4252f4:	ldr	w8, [sp, #8]
  4252f8:	and	w8, w8, #0x1
  4252fc:	mov	w0, w8
  425300:	sxtw	x9, w0
  425304:	cbz	x9, 425334 <_obstack_memory_used@@Base+0x7198>
  425308:	ldur	x8, [x29, #-72]
  42530c:	cbz	x8, 425328 <_obstack_memory_used@@Base+0x718c>
  425310:	ldur	x0, [x29, #-72]
  425314:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x5e64>
  425318:	add	x1, x1, #0x9c0
  42531c:	mov	x8, xzr
  425320:	mov	x2, x8
  425324:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  425328:	mov	x8, xzr
  42532c:	stur	x8, [x29, #-8]
  425330:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  425334:	ldr	x8, [sp, #56]
  425338:	stur	x8, [x29, #-72]
  42533c:	ldur	x8, [x29, #-40]
  425340:	and	x8, x8, #0x1000000
  425344:	cbz	x8, 4253a8 <_obstack_memory_used@@Base+0x720c>
  425348:	ldur	x8, [x29, #-32]
  42534c:	ldr	w9, [x8, #8]
  425350:	and	w9, w9, #0xff
  425354:	cmp	w9, #0xb
  425358:	b.eq	425370 <_obstack_memory_used@@Base+0x71d4>  // b.none
  42535c:	ldur	x8, [x29, #-32]
  425360:	ldr	w9, [x8, #8]
  425364:	and	w9, w9, #0xff
  425368:	cmp	w9, #0x17
  42536c:	b.ne	4253a8 <_obstack_memory_used@@Base+0x720c>  // b.any
  425370:	ldur	x8, [x29, #-72]
  425374:	cbz	x8, 425390 <_obstack_memory_used@@Base+0x71f4>
  425378:	ldur	x0, [x29, #-72]
  42537c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x5e64>
  425380:	add	x1, x1, #0x9c0
  425384:	mov	x8, xzr
  425388:	mov	x2, x8
  42538c:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  425390:	ldur	x8, [x29, #-56]
  425394:	mov	w9, #0xd                   	// #13
  425398:	str	w9, [x8]
  42539c:	mov	x8, xzr
  4253a0:	stur	x8, [x29, #-8]
  4253a4:	b	4253b4 <_obstack_memory_used@@Base+0x7218>
  4253a8:	b	425238 <_obstack_memory_used@@Base+0x709c>
  4253ac:	ldur	x8, [x29, #-72]
  4253b0:	stur	x8, [x29, #-8]
  4253b4:	ldur	x0, [x29, #-8]
  4253b8:	ldp	x29, x30, [sp, #160]
  4253bc:	add	sp, sp, #0xb0
  4253c0:	ret
  4253c4:	sub	sp, sp, #0x50
  4253c8:	stp	x29, x30, [sp, #64]
  4253cc:	add	x29, sp, #0x40
  4253d0:	stur	x0, [x29, #-16]
  4253d4:	stur	x1, [x29, #-24]
  4253d8:	str	x2, [sp, #32]
  4253dc:	str	x3, [sp, #24]
  4253e0:	ldur	x8, [x29, #-16]
  4253e4:	ldrsw	x8, [x8, #128]
  4253e8:	cmp	x8, #0xf
  4253ec:	cset	w9, eq  // eq = none
  4253f0:	and	w9, w9, #0x1
  4253f4:	mov	w0, w9
  4253f8:	sxtw	x8, w0
  4253fc:	cbz	x8, 425444 <_obstack_memory_used@@Base+0x72a8>
  425400:	mov	x0, #0x3c8                 	// #968
  425404:	bl	402890 <malloc@plt>
  425408:	str	x0, [sp, #8]
  42540c:	ldr	x8, [sp, #8]
  425410:	cbnz	x8, 425420 <_obstack_memory_used@@Base+0x7284>
  425414:	mov	x8, xzr
  425418:	stur	x8, [x29, #-8]
  42541c:	b	425514 <_obstack_memory_used@@Base+0x7378>
  425420:	ldur	x8, [x29, #-16]
  425424:	ldr	x8, [x8, #112]
  425428:	ldr	x9, [sp, #8]
  42542c:	str	x8, [x9]
  425430:	ldr	x8, [sp, #8]
  425434:	ldur	x9, [x29, #-16]
  425438:	str	x8, [x9, #112]
  42543c:	ldur	x8, [x29, #-16]
  425440:	str	wzr, [x8, #128]
  425444:	ldur	x8, [x29, #-16]
  425448:	ldr	x8, [x8, #112]
  42544c:	add	x8, x8, #0x8
  425450:	ldur	x9, [x29, #-16]
  425454:	ldrsw	x10, [x9, #128]
  425458:	mov	w11, w10
  42545c:	add	w11, w11, #0x1
  425460:	str	w11, [x9, #128]
  425464:	mov	x9, #0x40                  	// #64
  425468:	mul	x9, x9, x10
  42546c:	add	x8, x8, x9
  425470:	str	x8, [sp, #16]
  425474:	ldr	x8, [sp, #16]
  425478:	mov	x9, xzr
  42547c:	str	x9, [x8]
  425480:	ldur	x8, [x29, #-24]
  425484:	ldr	x10, [sp, #16]
  425488:	str	x8, [x10, #8]
  42548c:	ldr	x8, [sp, #32]
  425490:	ldr	x10, [sp, #16]
  425494:	str	x8, [x10, #16]
  425498:	ldr	x8, [sp, #16]
  42549c:	ldr	x10, [sp, #24]
  4254a0:	ldr	q0, [x10]
  4254a4:	stur	q0, [x8, #40]
  4254a8:	ldr	x8, [sp, #16]
  4254ac:	ldr	w11, [x8, #48]
  4254b0:	and	w11, w11, #0xfffbffff
  4254b4:	str	w11, [x8, #48]
  4254b8:	ldr	x8, [sp, #16]
  4254bc:	ldr	w11, [x8, #48]
  4254c0:	and	w11, w11, #0xfff7ffff
  4254c4:	str	w11, [x8, #48]
  4254c8:	ldr	x8, [sp, #16]
  4254cc:	str	x9, [x8, #24]
  4254d0:	ldr	x8, [sp, #16]
  4254d4:	str	x9, [x8, #32]
  4254d8:	ldr	x8, [sp, #16]
  4254dc:	mov	x9, #0xffffffffffffffff    	// #-1
  4254e0:	str	x9, [x8, #56]
  4254e4:	ldur	x8, [x29, #-24]
  4254e8:	cbz	x8, 4254f8 <_obstack_memory_used@@Base+0x735c>
  4254ec:	ldr	x8, [sp, #16]
  4254f0:	ldur	x9, [x29, #-24]
  4254f4:	str	x8, [x9]
  4254f8:	ldr	x8, [sp, #32]
  4254fc:	cbz	x8, 42550c <_obstack_memory_used@@Base+0x7370>
  425500:	ldr	x8, [sp, #16]
  425504:	ldr	x9, [sp, #32]
  425508:	str	x8, [x9]
  42550c:	ldr	x8, [sp, #16]
  425510:	stur	x8, [x29, #-8]
  425514:	ldur	x0, [x29, #-8]
  425518:	ldp	x29, x30, [sp, #64]
  42551c:	add	sp, sp, #0x50
  425520:	ret
  425524:	sub	sp, sp, #0x70
  425528:	stp	x29, x30, [sp, #96]
  42552c:	add	x29, sp, #0x60
  425530:	stur	x0, [x29, #-16]
  425534:	stur	x1, [x29, #-24]
  425538:	stur	x2, [x29, #-32]
  42553c:	stur	x3, [x29, #-40]
  425540:	str	x4, [sp, #48]
  425544:	str	x5, [sp, #40]
  425548:	ldur	x8, [x29, #-24]
  42554c:	ldr	x8, [x8]
  425550:	str	x8, [sp, #32]
  425554:	ldur	x8, [x29, #-24]
  425558:	ldr	x9, [x8, #48]
  42555c:	add	x10, x9, #0x1
  425560:	str	x10, [x8, #48]
  425564:	str	x9, [sp, #16]
  425568:	ldur	x0, [x29, #-32]
  42556c:	ldur	x1, [x29, #-16]
  425570:	ldur	x8, [x29, #-40]
  425574:	orr	x2, x8, #0x800000
  425578:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  42557c:	ldur	x8, [x29, #-32]
  425580:	ldr	w11, [x8, #8]
  425584:	and	w11, w11, #0xff
  425588:	cmp	w11, #0x9
  42558c:	b.ne	42559c <_obstack_memory_used@@Base+0x7400>  // b.any
  425590:	mov	x8, xzr
  425594:	str	x8, [sp, #24]
  425598:	b	425654 <_obstack_memory_used@@Base+0x74b8>
  42559c:	ldur	x0, [x29, #-16]
  4255a0:	ldur	x1, [x29, #-24]
  4255a4:	ldur	x2, [x29, #-32]
  4255a8:	ldur	x3, [x29, #-40]
  4255ac:	ldr	x4, [sp, #48]
  4255b0:	ldr	x5, [sp, #40]
  4255b4:	bl	423764 <_obstack_memory_used@@Base+0x55c8>
  4255b8:	str	x0, [sp, #24]
  4255bc:	ldr	x8, [sp, #40]
  4255c0:	ldr	w9, [x8]
  4255c4:	mov	w10, #0x0                   	// #0
  4255c8:	str	w10, [sp, #12]
  4255cc:	cbnz	w9, 4255e8 <_obstack_memory_used@@Base+0x744c>
  4255d0:	ldur	x8, [x29, #-32]
  4255d4:	ldr	w9, [x8, #8]
  4255d8:	and	w9, w9, #0xff
  4255dc:	cmp	w9, #0x9
  4255e0:	cset	w9, ne  // ne = any
  4255e4:	str	w9, [sp, #12]
  4255e8:	ldr	w8, [sp, #12]
  4255ec:	and	w8, w8, #0x1
  4255f0:	mov	w0, w8
  4255f4:	sxtw	x9, w0
  4255f8:	cbz	x9, 425628 <_obstack_memory_used@@Base+0x748c>
  4255fc:	ldr	x8, [sp, #24]
  425600:	cbz	x8, 42561c <_obstack_memory_used@@Base+0x7480>
  425604:	ldr	x0, [sp, #24]
  425608:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x5e64>
  42560c:	add	x1, x1, #0x9c0
  425610:	mov	x8, xzr
  425614:	mov	x2, x8
  425618:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  42561c:	ldr	x8, [sp, #40]
  425620:	mov	w9, #0x8                   	// #8
  425624:	str	w9, [x8]
  425628:	ldr	x8, [sp, #40]
  42562c:	ldr	w9, [x8]
  425630:	cmp	w9, #0x0
  425634:	cset	w9, ne  // ne = any
  425638:	and	w9, w9, #0x1
  42563c:	mov	w0, w9
  425640:	sxtw	x8, w0
  425644:	cbz	x8, 425654 <_obstack_memory_used@@Base+0x74b8>
  425648:	mov	x8, xzr
  42564c:	stur	x8, [x29, #-8]
  425650:	b	4256e8 <_obstack_memory_used@@Base+0x754c>
  425654:	ldr	x8, [sp, #16]
  425658:	cmp	x8, #0x8
  42565c:	b.hi	425684 <_obstack_memory_used@@Base+0x74e8>  // b.pmore
  425660:	ldr	x8, [sp, #16]
  425664:	mov	w9, #0x1                   	// #1
  425668:	lsl	w8, w9, w8
  42566c:	mov	w0, w8
  425670:	sxtw	x10, w0
  425674:	ldr	x11, [sp, #32]
  425678:	ldr	x12, [x11, #168]
  42567c:	orr	x10, x12, x10
  425680:	str	x10, [x11, #168]
  425684:	ldr	x0, [sp, #32]
  425688:	ldr	x1, [sp, #24]
  42568c:	mov	x8, xzr
  425690:	mov	x2, x8
  425694:	mov	w3, #0x11                  	// #17
  425698:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  42569c:	str	x0, [sp, #24]
  4256a0:	ldr	x8, [sp, #24]
  4256a4:	cmp	x8, #0x0
  4256a8:	cset	w9, eq  // eq = none
  4256ac:	and	w9, w9, #0x1
  4256b0:	mov	w0, w9
  4256b4:	sxtw	x8, w0
  4256b8:	cbz	x8, 4256d4 <_obstack_memory_used@@Base+0x7538>
  4256bc:	ldr	x8, [sp, #40]
  4256c0:	mov	w9, #0xc                   	// #12
  4256c4:	str	w9, [x8]
  4256c8:	mov	x8, xzr
  4256cc:	stur	x8, [x29, #-8]
  4256d0:	b	4256e8 <_obstack_memory_used@@Base+0x754c>
  4256d4:	ldr	x8, [sp, #16]
  4256d8:	ldr	x9, [sp, #24]
  4256dc:	str	x8, [x9, #40]
  4256e0:	ldr	x8, [sp, #24]
  4256e4:	stur	x8, [x29, #-8]
  4256e8:	ldur	x0, [x29, #-8]
  4256ec:	ldp	x29, x30, [sp, #96]
  4256f0:	add	sp, sp, #0x70
  4256f4:	ret
  4256f8:	sub	sp, sp, #0x190
  4256fc:	stp	x29, x30, [sp, #368]
  425700:	str	x28, [sp, #384]
  425704:	add	x29, sp, #0x170
  425708:	sub	x8, x29, #0x88
  42570c:	mov	w9, #0x0                   	// #0
  425710:	mov	w10, #0x1                   	// #1
  425714:	mov	x11, #0x20                  	// #32
  425718:	mov	x12, #0x1                   	// #1
  42571c:	mov	x13, #0x50                  	// #80
  425720:	str	x0, [x8, #120]
  425724:	str	x1, [x8, #112]
  425728:	str	x2, [x8, #104]
  42572c:	str	x3, [x8, #96]
  425730:	str	x4, [x8, #88]
  425734:	str	xzr, [x8, #48]
  425738:	str	xzr, [x8, #40]
  42573c:	str	xzr, [x8, #32]
  425740:	str	xzr, [x8, #24]
  425744:	str	xzr, [x8, #16]
  425748:	sturb	w9, [x29, #-121]
  42574c:	sturb	w10, [x29, #-141]
  425750:	mov	x0, x11
  425754:	mov	x1, x12
  425758:	str	x8, [sp, #64]
  42575c:	str	x12, [sp, #56]
  425760:	str	x13, [sp, #48]
  425764:	bl	4029a0 <calloc@plt>
  425768:	ldr	x8, [sp, #64]
  42576c:	str	x0, [x8, #64]
  425770:	ldr	x0, [sp, #48]
  425774:	ldr	x1, [sp, #56]
  425778:	bl	4029a0 <calloc@plt>
  42577c:	ldr	x8, [sp, #64]
  425780:	str	x0, [x8, #56]
  425784:	ldr	x11, [x8, #64]
  425788:	mov	w9, #0x1                   	// #1
  42578c:	str	w9, [sp, #44]
  425790:	cbz	x11, 4257a8 <_obstack_memory_used@@Base+0x760c>
  425794:	ldr	x8, [sp, #64]
  425798:	ldr	x9, [x8, #56]
  42579c:	cmp	x9, #0x0
  4257a0:	cset	w10, eq  // eq = none
  4257a4:	str	w10, [sp, #44]
  4257a8:	ldr	w8, [sp, #44]
  4257ac:	and	w8, w8, #0x1
  4257b0:	mov	w0, w8
  4257b4:	sxtw	x9, w0
  4257b8:	cbz	x9, 4257f0 <_obstack_memory_used@@Base+0x7654>
  4257bc:	ldr	x8, [sp, #64]
  4257c0:	ldr	x0, [x8, #64]
  4257c4:	bl	402b40 <free@plt>
  4257c8:	ldr	x8, [sp, #64]
  4257cc:	ldr	x0, [x8, #56]
  4257d0:	bl	402b40 <free@plt>
  4257d4:	ldr	x8, [sp, #64]
  4257d8:	ldr	x9, [x8, #88]
  4257dc:	mov	w10, #0xc                   	// #12
  4257e0:	str	w10, [x9]
  4257e4:	mov	x9, xzr
  4257e8:	str	x9, [x8, #128]
  4257ec:	b	426150 <_obstack_memory_used@@Base+0x7fb4>
  4257f0:	ldr	x8, [sp, #64]
  4257f4:	ldr	x0, [x8, #104]
  4257f8:	ldr	x1, [x8, #120]
  4257fc:	ldr	x2, [x8, #96]
  425800:	bl	426d14 <_obstack_memory_used@@Base+0x8b78>
  425804:	stur	w0, [x29, #-140]
  425808:	ldr	x8, [sp, #64]
  42580c:	ldr	x9, [x8, #104]
  425810:	ldr	w10, [x9, #8]
  425814:	and	w10, w10, #0xff
  425818:	cmp	w10, #0x2
  42581c:	cset	w10, eq  // eq = none
  425820:	and	w10, w10, #0x1
  425824:	mov	w1, w10
  425828:	sxtw	x9, w1
  42582c:	cbz	x9, 425844 <_obstack_memory_used@@Base+0x76a8>
  425830:	ldr	x8, [sp, #64]
  425834:	ldr	x9, [x8, #88]
  425838:	mov	w10, #0x2                   	// #2
  42583c:	str	w10, [x9]
  425840:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425844:	ldr	x8, [sp, #64]
  425848:	ldr	x9, [x8, #104]
  42584c:	ldr	w10, [x9, #8]
  425850:	and	w10, w10, #0xff
  425854:	cmp	w10, #0x19
  425858:	b.ne	425900 <_obstack_memory_used@@Base+0x7764>  // b.any
  42585c:	ldr	x8, [sp, #64]
  425860:	ldr	x9, [x8, #56]
  425864:	ldrb	w10, [x9, #32]
  425868:	and	w10, w10, #0xfffffffe
  42586c:	orr	w10, w10, #0x1
  425870:	strb	w10, [x9, #32]
  425874:	mov	w10, #0x1                   	// #1
  425878:	sturb	w10, [x29, #-121]
  42587c:	ldr	x9, [x8, #96]
  425880:	and	x9, x9, #0x100
  425884:	cbz	x9, 425898 <_obstack_memory_used@@Base+0x76fc>
  425888:	ldr	x8, [sp, #64]
  42588c:	ldr	x0, [x8, #64]
  425890:	mov	x1, #0xa                   	// #10
  425894:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  425898:	ldursw	x8, [x29, #-140]
  42589c:	ldr	x9, [sp, #64]
  4258a0:	ldr	x10, [x9, #120]
  4258a4:	ldr	x11, [x10, #72]
  4258a8:	add	x8, x11, x8
  4258ac:	str	x8, [x10, #72]
  4258b0:	ldr	x0, [x9, #104]
  4258b4:	ldr	x1, [x9, #120]
  4258b8:	ldr	x2, [x9, #96]
  4258bc:	bl	426d14 <_obstack_memory_used@@Base+0x8b78>
  4258c0:	stur	w0, [x29, #-140]
  4258c4:	ldr	x8, [sp, #64]
  4258c8:	ldr	x9, [x8, #104]
  4258cc:	ldr	w12, [x9, #8]
  4258d0:	and	w12, w12, #0xff
  4258d4:	cmp	w12, #0x2
  4258d8:	cset	w12, eq  // eq = none
  4258dc:	and	w12, w12, #0x1
  4258e0:	mov	w1, w12
  4258e4:	sxtw	x9, w1
  4258e8:	cbz	x9, 425900 <_obstack_memory_used@@Base+0x7764>
  4258ec:	ldr	x8, [sp, #64]
  4258f0:	ldr	x9, [x8, #88]
  4258f4:	mov	w10, #0x2                   	// #2
  4258f8:	str	w10, [x9]
  4258fc:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425900:	ldr	x8, [sp, #64]
  425904:	ldr	x9, [x8, #104]
  425908:	ldr	w10, [x9, #8]
  42590c:	and	w10, w10, #0xff
  425910:	cmp	w10, #0x15
  425914:	b.ne	425930 <_obstack_memory_used@@Base+0x7794>  // b.any
  425918:	ldr	x8, [sp, #64]
  42591c:	ldr	x9, [x8, #104]
  425920:	ldr	w10, [x9, #8]
  425924:	and	w10, w10, #0xffffff00
  425928:	orr	w10, w10, #0x1
  42592c:	str	w10, [x9, #8]
  425930:	str	wzr, [sp, #120]
  425934:	mov	w8, #0x0                   	// #0
  425938:	strb	w8, [sp, #119]
  42593c:	sub	x9, x29, #0xa0
  425940:	add	x10, sp, #0xa0
  425944:	str	x10, [x9, #8]
  425948:	mov	w8, #0x3                   	// #3
  42594c:	stur	w8, [x29, #-160]
  425950:	ldr	x10, [sp, #64]
  425954:	ldr	x1, [x10, #120]
  425958:	ldr	x2, [x10, #104]
  42595c:	ldur	w3, [x29, #-140]
  425960:	ldr	x4, [x10, #112]
  425964:	ldr	x5, [x10, #96]
  425968:	ldurb	w8, [x29, #-141]
  42596c:	mov	x0, x9
  425970:	and	w6, w8, #0x1
  425974:	bl	4270a8 <_obstack_memory_used@@Base+0x8f0c>
  425978:	str	w0, [sp, #124]
  42597c:	ldr	w8, [sp, #124]
  425980:	cmp	w8, #0x0
  425984:	cset	w8, ne  // ne = any
  425988:	and	w8, w8, #0x1
  42598c:	mov	w1, w8
  425990:	sxtw	x9, w1
  425994:	cbz	x9, 4259ac <_obstack_memory_used@@Base+0x7810>
  425998:	ldr	w8, [sp, #124]
  42599c:	ldr	x9, [sp, #64]
  4259a0:	ldr	x10, [x9, #88]
  4259a4:	str	w8, [x10]
  4259a8:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  4259ac:	mov	w8, #0x0                   	// #0
  4259b0:	sturb	w8, [x29, #-141]
  4259b4:	ldr	x9, [sp, #64]
  4259b8:	ldr	x0, [x9, #104]
  4259bc:	ldr	x1, [x9, #120]
  4259c0:	ldr	x2, [x9, #96]
  4259c4:	bl	426d14 <_obstack_memory_used@@Base+0x8b78>
  4259c8:	stur	w0, [x29, #-140]
  4259cc:	ldur	w8, [x29, #-160]
  4259d0:	cmp	w8, #0x4
  4259d4:	b.eq	425ae8 <_obstack_memory_used@@Base+0x794c>  // b.none
  4259d8:	ldur	w8, [x29, #-160]
  4259dc:	cmp	w8, #0x2
  4259e0:	b.eq	425ae8 <_obstack_memory_used@@Base+0x794c>  // b.none
  4259e4:	ldr	x8, [sp, #64]
  4259e8:	ldr	x9, [x8, #104]
  4259ec:	ldr	w10, [x9, #8]
  4259f0:	and	w10, w10, #0xff
  4259f4:	cmp	w10, #0x2
  4259f8:	cset	w10, eq  // eq = none
  4259fc:	and	w10, w10, #0x1
  425a00:	mov	w0, w10
  425a04:	sxtw	x9, w0
  425a08:	cbz	x9, 425a20 <_obstack_memory_used@@Base+0x7884>
  425a0c:	ldr	x8, [sp, #64]
  425a10:	ldr	x9, [x8, #88]
  425a14:	mov	w10, #0x7                   	// #7
  425a18:	str	w10, [x9]
  425a1c:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425a20:	ldr	x8, [sp, #64]
  425a24:	ldr	x9, [x8, #104]
  425a28:	ldr	w10, [x9, #8]
  425a2c:	and	w10, w10, #0xff
  425a30:	cmp	w10, #0x16
  425a34:	b.ne	425ae8 <_obstack_memory_used@@Base+0x794c>  // b.any
  425a38:	ldursw	x8, [x29, #-140]
  425a3c:	ldr	x9, [sp, #64]
  425a40:	ldr	x10, [x9, #120]
  425a44:	ldr	x11, [x10, #72]
  425a48:	add	x8, x11, x8
  425a4c:	str	x8, [x10, #72]
  425a50:	ldr	x1, [x9, #120]
  425a54:	ldr	x2, [x9, #96]
  425a58:	add	x0, sp, #0x60
  425a5c:	bl	426d14 <_obstack_memory_used@@Base+0x8b78>
  425a60:	str	w0, [sp, #120]
  425a64:	ldr	w12, [sp, #104]
  425a68:	and	w12, w12, #0xff
  425a6c:	cmp	w12, #0x2
  425a70:	cset	w12, eq  // eq = none
  425a74:	and	w12, w12, #0x1
  425a78:	mov	w1, w12
  425a7c:	sxtw	x8, w1
  425a80:	cbz	x8, 425a98 <_obstack_memory_used@@Base+0x78fc>
  425a84:	ldr	x8, [sp, #64]
  425a88:	ldr	x9, [x8, #88]
  425a8c:	mov	w10, #0x7                   	// #7
  425a90:	str	w10, [x9]
  425a94:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425a98:	ldr	w8, [sp, #104]
  425a9c:	and	w8, w8, #0xff
  425aa0:	cmp	w8, #0x15
  425aa4:	b.ne	425ae0 <_obstack_memory_used@@Base+0x7944>  // b.any
  425aa8:	ldur	w8, [x29, #-140]
  425aac:	mov	w9, wzr
  425ab0:	subs	w8, w9, w8
  425ab4:	ldr	x10, [sp, #64]
  425ab8:	ldr	x11, [x10, #120]
  425abc:	ldr	x12, [x11, #72]
  425ac0:	add	x12, x12, w8, sxtw
  425ac4:	str	x12, [x11, #72]
  425ac8:	ldr	x11, [x10, #104]
  425acc:	ldr	w8, [x11, #8]
  425ad0:	and	w8, w8, #0xffffff00
  425ad4:	orr	w8, w8, #0x1
  425ad8:	str	w8, [x11, #8]
  425adc:	b	425ae8 <_obstack_memory_used@@Base+0x794c>
  425ae0:	mov	w8, #0x1                   	// #1
  425ae4:	strb	w8, [sp, #119]
  425ae8:	ldrb	w8, [sp, #119]
  425aec:	and	w8, w8, #0x1
  425af0:	cmp	w8, #0x1
  425af4:	b.ne	425c10 <_obstack_memory_used@@Base+0x7a74>  // b.any
  425af8:	sub	x8, x29, #0xb0
  425afc:	add	x9, sp, #0x80
  425b00:	str	x9, [x8, #8]
  425b04:	mov	w10, #0x3                   	// #3
  425b08:	stur	w10, [x29, #-176]
  425b0c:	ldr	x9, [sp, #64]
  425b10:	ldr	x1, [x9, #120]
  425b14:	ldr	w3, [sp, #120]
  425b18:	ldr	x4, [x9, #112]
  425b1c:	ldr	x5, [x9, #96]
  425b20:	mov	x0, x8
  425b24:	add	x2, sp, #0x60
  425b28:	mov	w10, #0x1                   	// #1
  425b2c:	and	w6, w10, #0x1
  425b30:	bl	4270a8 <_obstack_memory_used@@Base+0x8f0c>
  425b34:	str	w0, [sp, #124]
  425b38:	ldr	w10, [sp, #124]
  425b3c:	cmp	w10, #0x0
  425b40:	cset	w10, ne  // ne = any
  425b44:	and	w10, w10, #0x1
  425b48:	mov	w1, w10
  425b4c:	sxtw	x8, w1
  425b50:	cbz	x8, 425b68 <_obstack_memory_used@@Base+0x79cc>
  425b54:	ldr	w8, [sp, #124]
  425b58:	ldr	x9, [sp, #64]
  425b5c:	ldr	x10, [x9, #88]
  425b60:	str	w8, [x10]
  425b64:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425b68:	ldr	x8, [sp, #64]
  425b6c:	ldr	x0, [x8, #104]
  425b70:	ldr	x1, [x8, #120]
  425b74:	ldr	x2, [x8, #96]
  425b78:	bl	426d14 <_obstack_memory_used@@Base+0x8b78>
  425b7c:	stur	w0, [x29, #-140]
  425b80:	ldr	x8, [sp, #64]
  425b84:	ldr	x0, [x8, #96]
  425b88:	ldr	x1, [x8, #64]
  425b8c:	ldr	x9, [x8, #112]
  425b90:	ldr	w10, [x9, #180]
  425b94:	cmp	w10, #0x1
  425b98:	str	x0, [sp, #32]
  425b9c:	str	x1, [sp, #24]
  425ba0:	b.le	425bb4 <_obstack_memory_used@@Base+0x7a18>
  425ba4:	ldr	x8, [sp, #64]
  425ba8:	ldr	x9, [x8, #56]
  425bac:	str	x9, [sp, #16]
  425bb0:	b	425bbc <_obstack_memory_used@@Base+0x7a20>
  425bb4:	mov	x8, xzr
  425bb8:	str	x8, [sp, #16]
  425bbc:	ldr	x8, [sp, #16]
  425bc0:	ldr	x0, [sp, #32]
  425bc4:	ldr	x1, [sp, #24]
  425bc8:	mov	x2, x8
  425bcc:	sub	x3, x29, #0x60
  425bd0:	sub	x4, x29, #0xa0
  425bd4:	sub	x5, x29, #0xb0
  425bd8:	bl	427224 <_obstack_memory_used@@Base+0x9088>
  425bdc:	ldr	x8, [sp, #64]
  425be0:	ldr	x9, [x8, #88]
  425be4:	str	w0, [x9]
  425be8:	ldr	x9, [x8, #88]
  425bec:	ldr	w10, [x9]
  425bf0:	cmp	w10, #0x0
  425bf4:	cset	w10, ne  // ne = any
  425bf8:	and	w10, w10, #0x1
  425bfc:	mov	w1, w10
  425c00:	sxtw	x9, w1
  425c04:	cbz	x9, 425c0c <_obstack_memory_used@@Base+0x7a70>
  425c08:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425c0c:	b	425e08 <_obstack_memory_used@@Base+0x7c6c>
  425c10:	ldur	w8, [x29, #-160]
  425c14:	subs	w8, w8, #0x0
  425c18:	mov	w9, w8
  425c1c:	ubfx	x9, x9, #0, #32
  425c20:	str	x9, [sp, #8]
  425c24:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  425c28:	add	x8, x8, #0xe88
  425c2c:	ldr	x11, [sp, #8]
  425c30:	ldrsw	x10, [x8, x11, lsl #2]
  425c34:	add	x9, x8, x10
  425c38:	br	x9
  425c3c:	ldr	x8, [sp, #64]
  425c40:	ldr	x0, [x8, #64]
  425c44:	ldurb	w9, [x29, #-152]
  425c48:	mov	w1, w9
  425c4c:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  425c50:	b	425e08 <_obstack_memory_used@@Base+0x7c6c>
  425c54:	ldr	x8, [sp, #64]
  425c58:	ldr	x9, [x8, #32]
  425c5c:	ldr	x10, [x8, #56]
  425c60:	ldr	x10, [x10, #40]
  425c64:	cmp	x9, x10
  425c68:	cset	w11, eq  // eq = none
  425c6c:	and	w11, w11, #0x1
  425c70:	mov	w0, w11
  425c74:	sxtw	x9, w0
  425c78:	cbz	x9, 425ce4 <_obstack_memory_used@@Base+0x7b48>
  425c7c:	ldr	x8, [sp, #64]
  425c80:	ldr	x9, [x8, #56]
  425c84:	ldr	x9, [x9, #40]
  425c88:	mov	x10, #0x2                   	// #2
  425c8c:	mul	x9, x10, x9
  425c90:	add	x9, x9, #0x1
  425c94:	str	x9, [x8, #32]
  425c98:	ldr	x9, [x8, #56]
  425c9c:	ldr	x0, [x9]
  425ca0:	ldr	x9, [x8, #32]
  425ca4:	mov	x10, #0x4                   	// #4
  425ca8:	mul	x1, x9, x10
  425cac:	bl	4029c0 <realloc@plt>
  425cb0:	str	x0, [sp, #88]
  425cb4:	ldr	x8, [sp, #88]
  425cb8:	cmp	x8, #0x0
  425cbc:	cset	w11, eq  // eq = none
  425cc0:	and	w11, w11, #0x1
  425cc4:	mov	w0, w11
  425cc8:	sxtw	x8, w0
  425ccc:	cbz	x8, 425cd4 <_obstack_memory_used@@Base+0x7b38>
  425cd0:	b	42611c <_obstack_memory_used@@Base+0x7f80>
  425cd4:	ldr	x8, [sp, #88]
  425cd8:	ldr	x9, [sp, #64]
  425cdc:	ldr	x10, [x9, #56]
  425ce0:	str	x8, [x10]
  425ce4:	ldur	w8, [x29, #-152]
  425ce8:	ldr	x9, [sp, #64]
  425cec:	ldr	x10, [x9, #56]
  425cf0:	ldr	x10, [x10]
  425cf4:	ldr	x11, [x9, #56]
  425cf8:	ldr	x12, [x11, #40]
  425cfc:	add	x13, x12, #0x1
  425d00:	str	x13, [x11, #40]
  425d04:	str	w8, [x10, x12, lsl #2]
  425d08:	b	425e08 <_obstack_memory_used@@Base+0x7c6c>
  425d0c:	ldr	x8, [sp, #64]
  425d10:	ldr	x0, [x8, #64]
  425d14:	ldr	x1, [x8, #56]
  425d18:	sub	x9, x29, #0xa0
  425d1c:	ldr	x3, [x9, #8]
  425d20:	sub	x2, x29, #0x70
  425d24:	bl	427690 <_obstack_memory_used@@Base+0x94f4>
  425d28:	ldr	x8, [sp, #64]
  425d2c:	ldr	x9, [x8, #88]
  425d30:	str	w0, [x9]
  425d34:	ldr	x9, [x8, #88]
  425d38:	ldr	w10, [x9]
  425d3c:	cmp	w10, #0x0
  425d40:	cset	w10, ne  // ne = any
  425d44:	and	w10, w10, #0x1
  425d48:	mov	w1, w10
  425d4c:	sxtw	x9, w1
  425d50:	cbz	x9, 425d58 <_obstack_memory_used@@Base+0x7bbc>
  425d54:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425d58:	b	425e08 <_obstack_memory_used@@Base+0x7c6c>
  425d5c:	ldr	x8, [sp, #64]
  425d60:	ldr	x0, [x8, #64]
  425d64:	ldr	x1, [x8, #56]
  425d68:	sub	x9, x29, #0xa0
  425d6c:	ldr	x3, [x9, #8]
  425d70:	sub	x2, x29, #0x58
  425d74:	bl	427700 <_obstack_memory_used@@Base+0x9564>
  425d78:	ldr	x8, [sp, #64]
  425d7c:	ldr	x9, [x8, #88]
  425d80:	str	w0, [x9]
  425d84:	ldr	x9, [x8, #88]
  425d88:	ldr	w10, [x9]
  425d8c:	cmp	w10, #0x0
  425d90:	cset	w10, ne  // ne = any
  425d94:	and	w10, w10, #0x1
  425d98:	mov	w1, w10
  425d9c:	sxtw	x9, w1
  425da0:	cbz	x9, 425da8 <_obstack_memory_used@@Base+0x7c0c>
  425da4:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425da8:	b	425e08 <_obstack_memory_used@@Base+0x7c6c>
  425dac:	ldr	x8, [sp, #64]
  425db0:	ldr	x9, [x8, #120]
  425db4:	ldr	x0, [x9, #120]
  425db8:	ldr	x1, [x8, #64]
  425dbc:	ldr	x2, [x8, #56]
  425dc0:	sub	x9, x29, #0xa0
  425dc4:	ldr	x4, [x9, #8]
  425dc8:	ldr	x5, [x8, #96]
  425dcc:	sub	x3, x29, #0x78
  425dd0:	bl	427778 <_obstack_memory_used@@Base+0x95dc>
  425dd4:	ldr	x8, [sp, #64]
  425dd8:	ldr	x9, [x8, #88]
  425ddc:	str	w0, [x9]
  425de0:	ldr	x9, [x8, #88]
  425de4:	ldr	w10, [x9]
  425de8:	cmp	w10, #0x0
  425dec:	cset	w10, ne  // ne = any
  425df0:	and	w10, w10, #0x1
  425df4:	mov	w1, w10
  425df8:	sxtw	x9, w1
  425dfc:	cbz	x9, 425e04 <_obstack_memory_used@@Base+0x7c68>
  425e00:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425e04:	b	425e08 <_obstack_memory_used@@Base+0x7c6c>
  425e08:	ldr	x8, [sp, #64]
  425e0c:	ldr	x9, [x8, #104]
  425e10:	ldr	w10, [x9, #8]
  425e14:	and	w10, w10, #0xff
  425e18:	cmp	w10, #0x2
  425e1c:	cset	w10, eq  // eq = none
  425e20:	and	w10, w10, #0x1
  425e24:	mov	w0, w10
  425e28:	sxtw	x9, w0
  425e2c:	cbz	x9, 425e44 <_obstack_memory_used@@Base+0x7ca8>
  425e30:	ldr	x8, [sp, #64]
  425e34:	ldr	x9, [x8, #88]
  425e38:	mov	w10, #0x7                   	// #7
  425e3c:	str	w10, [x9]
  425e40:	b	42612c <_obstack_memory_used@@Base+0x7f90>
  425e44:	ldr	x8, [sp, #64]
  425e48:	ldr	x9, [x8, #104]
  425e4c:	ldr	w10, [x9, #8]
  425e50:	and	w10, w10, #0xff
  425e54:	cmp	w10, #0x15
  425e58:	b.ne	425e60 <_obstack_memory_used@@Base+0x7cc4>  // b.any
  425e5c:	b	425e64 <_obstack_memory_used@@Base+0x7cc8>
  425e60:	b	425930 <_obstack_memory_used@@Base+0x7794>
  425e64:	ldursw	x8, [x29, #-140]
  425e68:	ldr	x9, [sp, #64]
  425e6c:	ldr	x10, [x9, #120]
  425e70:	ldr	x11, [x10, #72]
  425e74:	add	x8, x11, x8
  425e78:	str	x8, [x10, #72]
  425e7c:	ldurb	w12, [x29, #-121]
  425e80:	tbnz	w12, #0, 425e88 <_obstack_memory_used@@Base+0x7cec>
  425e84:	b	425e94 <_obstack_memory_used@@Base+0x7cf8>
  425e88:	ldr	x8, [sp, #64]
  425e8c:	ldr	x0, [x8, #64]
  425e90:	bl	428254 <_obstack_memory_used@@Base+0xa0b8>
  425e94:	ldr	x8, [sp, #64]
  425e98:	ldr	x9, [x8, #112]
  425e9c:	ldr	w10, [x9, #180]
  425ea0:	cmp	w10, #0x1
  425ea4:	b.le	425ebc <_obstack_memory_used@@Base+0x7d20>
  425ea8:	ldr	x8, [sp, #64]
  425eac:	ldr	x0, [x8, #64]
  425eb0:	ldr	x9, [x8, #112]
  425eb4:	ldr	x1, [x9, #120]
  425eb8:	bl	4282a0 <_obstack_memory_used@@Base+0xa104>
  425ebc:	ldr	x8, [sp, #64]
  425ec0:	ldr	x9, [x8, #56]
  425ec4:	ldr	x9, [x9, #40]
  425ec8:	cbnz	x9, 425f38 <_obstack_memory_used@@Base+0x7d9c>
  425ecc:	ldr	x8, [sp, #64]
  425ed0:	ldr	x9, [x8, #56]
  425ed4:	ldr	x9, [x9, #48]
  425ed8:	cbnz	x9, 425f38 <_obstack_memory_used@@Base+0x7d9c>
  425edc:	ldr	x8, [sp, #64]
  425ee0:	ldr	x9, [x8, #56]
  425ee4:	ldr	x9, [x9, #56]
  425ee8:	cbnz	x9, 425f38 <_obstack_memory_used@@Base+0x7d9c>
  425eec:	ldr	x8, [sp, #64]
  425ef0:	ldr	x9, [x8, #56]
  425ef4:	ldr	x9, [x9, #64]
  425ef8:	cbnz	x9, 425f38 <_obstack_memory_used@@Base+0x7d9c>
  425efc:	ldr	x8, [sp, #64]
  425f00:	ldr	x9, [x8, #112]
  425f04:	ldr	w10, [x9, #180]
  425f08:	cmp	w10, #0x1
  425f0c:	b.le	4260a4 <_obstack_memory_used@@Base+0x7f08>
  425f10:	ldr	x8, [sp, #64]
  425f14:	ldr	x9, [x8, #56]
  425f18:	ldr	x9, [x9, #72]
  425f1c:	cbnz	x9, 425f38 <_obstack_memory_used@@Base+0x7d9c>
  425f20:	ldr	x8, [sp, #64]
  425f24:	ldr	x9, [x8, #56]
  425f28:	ldrb	w10, [x9, #32]
  425f2c:	and	w10, w10, #0x1
  425f30:	and	w10, w10, #0xff
  425f34:	cbz	w10, 4260a4 <_obstack_memory_used@@Base+0x7f08>
  425f38:	ldr	x8, [sp, #64]
  425f3c:	ldr	x9, [x8, #112]
  425f40:	ldrb	w10, [x9, #176]
  425f44:	and	w10, w10, #0xfffffffd
  425f48:	orr	w10, w10, #0x2
  425f4c:	strb	w10, [x9, #176]
  425f50:	sub	x3, x29, #0x40
  425f54:	ldur	w10, [x29, #-56]
  425f58:	and	w10, w10, #0xffffff00
  425f5c:	orr	w10, w10, #0x6
  425f60:	stur	w10, [x29, #-56]
  425f64:	ldr	x9, [x8, #56]
  425f68:	str	x9, [x8, #72]
  425f6c:	ldr	x0, [x8, #112]
  425f70:	mov	x9, xzr
  425f74:	mov	x1, x9
  425f78:	mov	x2, x9
  425f7c:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  425f80:	str	x0, [sp, #80]
  425f84:	ldr	x8, [sp, #80]
  425f88:	cmp	x8, #0x0
  425f8c:	cset	w10, eq  // eq = none
  425f90:	and	w10, w10, #0x1
  425f94:	mov	w0, w10
  425f98:	sxtw	x8, w0
  425f9c:	cbz	x8, 425fa4 <_obstack_memory_used@@Base+0x7e08>
  425fa0:	b	42611c <_obstack_memory_used@@Base+0x7f80>
  425fa4:	str	wzr, [sp, #76]
  425fa8:	ldr	w8, [sp, #76]
  425fac:	cmp	w8, #0x4
  425fb0:	b.ge	425fdc <_obstack_memory_used@@Base+0x7e40>  // b.tcont
  425fb4:	ldr	x8, [sp, #64]
  425fb8:	ldr	x9, [x8, #64]
  425fbc:	ldrsw	x10, [sp, #76]
  425fc0:	ldr	x9, [x9, x10, lsl #3]
  425fc4:	cbz	x9, 425fcc <_obstack_memory_used@@Base+0x7e30>
  425fc8:	b	425fdc <_obstack_memory_used@@Base+0x7e40>
  425fcc:	ldr	w8, [sp, #76]
  425fd0:	add	w8, w8, #0x1
  425fd4:	str	w8, [sp, #76]
  425fd8:	b	425fa8 <_obstack_memory_used@@Base+0x7e0c>
  425fdc:	ldr	w8, [sp, #76]
  425fe0:	cmp	w8, #0x4
  425fe4:	b.ge	426088 <_obstack_memory_used@@Base+0x7eec>  // b.tcont
  425fe8:	sub	x3, x29, #0x40
  425fec:	ldur	w8, [x29, #-56]
  425ff0:	and	w8, w8, #0xffffff00
  425ff4:	orr	w8, w8, #0x3
  425ff8:	stur	w8, [x29, #-56]
  425ffc:	ldr	x9, [sp, #64]
  426000:	ldr	x10, [x9, #64]
  426004:	str	x10, [x9, #72]
  426008:	ldr	x0, [x9, #112]
  42600c:	mov	x10, xzr
  426010:	mov	x1, x10
  426014:	mov	x2, x10
  426018:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  42601c:	ldr	x9, [sp, #64]
  426020:	str	x0, [x9]
  426024:	ldr	x10, [x9]
  426028:	cmp	x10, #0x0
  42602c:	cset	w8, eq  // eq = none
  426030:	and	w8, w8, #0x1
  426034:	mov	w0, w8
  426038:	sxtw	x10, w0
  42603c:	cbz	x10, 426044 <_obstack_memory_used@@Base+0x7ea8>
  426040:	b	42611c <_obstack_memory_used@@Base+0x7f80>
  426044:	ldr	x8, [sp, #64]
  426048:	ldr	x0, [x8, #112]
  42604c:	ldr	x1, [x8]
  426050:	ldr	x2, [sp, #80]
  426054:	mov	w3, #0xa                   	// #10
  426058:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  42605c:	ldr	x8, [sp, #64]
  426060:	str	x0, [x8]
  426064:	ldr	x9, [x8]
  426068:	cmp	x9, #0x0
  42606c:	cset	w10, eq  // eq = none
  426070:	and	w10, w10, #0x1
  426074:	mov	w0, w10
  426078:	sxtw	x9, w0
  42607c:	cbz	x9, 426084 <_obstack_memory_used@@Base+0x7ee8>
  426080:	b	42611c <_obstack_memory_used@@Base+0x7f80>
  426084:	b	4260a0 <_obstack_memory_used@@Base+0x7f04>
  426088:	ldr	x8, [sp, #64]
  42608c:	ldr	x0, [x8, #64]
  426090:	bl	402b40 <free@plt>
  426094:	ldr	x8, [sp, #80]
  426098:	ldr	x9, [sp, #64]
  42609c:	str	x8, [x9]
  4260a0:	b	42610c <_obstack_memory_used@@Base+0x7f70>
  4260a4:	ldr	x8, [sp, #64]
  4260a8:	ldr	x0, [x8, #56]
  4260ac:	bl	420e78 <_obstack_memory_used@@Base+0x2cdc>
  4260b0:	sub	x3, x29, #0x40
  4260b4:	ldur	w9, [x29, #-56]
  4260b8:	and	w9, w9, #0xffffff00
  4260bc:	orr	w9, w9, #0x3
  4260c0:	stur	w9, [x29, #-56]
  4260c4:	ldr	x8, [sp, #64]
  4260c8:	ldr	x10, [x8, #64]
  4260cc:	str	x10, [x8, #72]
  4260d0:	ldr	x0, [x8, #112]
  4260d4:	mov	x10, xzr
  4260d8:	mov	x1, x10
  4260dc:	mov	x2, x10
  4260e0:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  4260e4:	ldr	x8, [sp, #64]
  4260e8:	str	x0, [x8]
  4260ec:	ldr	x10, [x8]
  4260f0:	cmp	x10, #0x0
  4260f4:	cset	w9, eq  // eq = none
  4260f8:	and	w9, w9, #0x1
  4260fc:	mov	w0, w9
  426100:	sxtw	x10, w0
  426104:	cbz	x10, 42610c <_obstack_memory_used@@Base+0x7f70>
  426108:	b	42611c <_obstack_memory_used@@Base+0x7f80>
  42610c:	ldr	x8, [sp, #64]
  426110:	ldr	x9, [x8]
  426114:	str	x9, [x8, #128]
  426118:	b	426150 <_obstack_memory_used@@Base+0x7fb4>
  42611c:	ldr	x8, [sp, #64]
  426120:	ldr	x9, [x8, #88]
  426124:	mov	w10, #0xc                   	// #12
  426128:	str	w10, [x9]
  42612c:	ldr	x8, [sp, #64]
  426130:	ldr	x0, [x8, #64]
  426134:	bl	402b40 <free@plt>
  426138:	ldr	x8, [sp, #64]
  42613c:	ldr	x0, [x8, #56]
  426140:	bl	420e78 <_obstack_memory_used@@Base+0x2cdc>
  426144:	mov	x8, xzr
  426148:	ldr	x9, [sp, #64]
  42614c:	str	x8, [x9, #128]
  426150:	ldr	x8, [sp, #64]
  426154:	ldr	x0, [x8, #128]
  426158:	ldr	x28, [sp, #384]
  42615c:	ldp	x29, x30, [sp, #368]
  426160:	add	sp, sp, #0x190
  426164:	ret
  426168:	sub	sp, sp, #0x50
  42616c:	stp	x29, x30, [sp, #64]
  426170:	add	x29, sp, #0x40
  426174:	mov	w8, #0x1                   	// #1
  426178:	stur	x0, [x29, #-8]
  42617c:	stur	wzr, [x29, #-12]
  426180:	stur	wzr, [x29, #-20]
  426184:	ldur	x9, [x29, #-8]
  426188:	ldrb	w10, [x9, #176]
  42618c:	and	w10, w10, #0xffffffef
  426190:	orr	w10, w10, #0x10
  426194:	strb	w10, [x9, #176]
  426198:	ldur	x9, [x29, #-8]
  42619c:	ldrb	w10, [x9, #176]
  4261a0:	mov	w11, #0x3                   	// #3
  4261a4:	lsr	w10, w10, w11
  4261a8:	and	w8, w10, w8
  4261ac:	tst	w8, #0xff
  4261b0:	cset	w8, eq  // eq = none
  4261b4:	and	w8, w8, #0x1
  4261b8:	mov	w0, w8
  4261bc:	sxtw	x9, w0
  4261c0:	cbz	x9, 42628c <_obstack_memory_used@@Base+0x80f0>
  4261c4:	str	xzr, [sp, #32]
  4261c8:	mov	x8, #0x3ff0000             	// #67043328
  4261cc:	str	x8, [sp, #24]
  4261d0:	mov	x8, #0xfffe                	// #65534
  4261d4:	movk	x8, #0x87ff, lsl #16
  4261d8:	str	x8, [sp, #16]
  4261dc:	mov	x8, #0x7fffffe             	// #134217726
  4261e0:	str	x8, [sp, #8]
  4261e4:	ldr	x8, [sp, #24]
  4261e8:	lsl	x8, x8, #31
  4261ec:	ldr	x9, [sp, #32]
  4261f0:	orr	x8, x9, x8, lsl #1
  4261f4:	ldur	x9, [x29, #-8]
  4261f8:	str	x8, [x9, #184]
  4261fc:	ldr	x8, [sp, #8]
  426200:	lsl	x8, x8, #31
  426204:	ldr	x9, [sp, #16]
  426208:	orr	x8, x9, x8, lsl #1
  42620c:	ldur	x9, [x29, #-8]
  426210:	str	x8, [x9, #192]
  426214:	mov	w10, #0x2                   	// #2
  426218:	stur	w10, [x29, #-12]
  42621c:	mov	w10, #0x80                  	// #128
  426220:	stur	w10, [x29, #-20]
  426224:	ldur	x8, [x29, #-8]
  426228:	ldrb	w10, [x8, #176]
  42622c:	mov	w11, #0x2                   	// #2
  426230:	lsr	w10, w10, w11
  426234:	and	w10, w10, #0x1
  426238:	and	w10, w10, #0xff
  42623c:	mov	w8, w10
  426240:	ubfx	x8, x8, #0, #32
  426244:	cbz	x8, 42628c <_obstack_memory_used@@Base+0x80f0>
  426248:	ldur	x8, [x29, #-8]
  42624c:	add	x8, x8, #0xb8
  426250:	ldursw	x9, [x29, #-12]
  426254:	mov	x10, #0x8                   	// #8
  426258:	mul	x9, x10, x9
  42625c:	add	x0, x8, x9
  426260:	ldur	w11, [x29, #-20]
  426264:	mov	w12, #0x100                 	// #256
  426268:	subs	w11, w12, w11
  42626c:	mov	w12, #0x8                   	// #8
  426270:	sdiv	w11, w11, w12
  426274:	mov	w1, w11
  426278:	sxtw	x2, w1
  42627c:	mov	w11, wzr
  426280:	mov	w1, w11
  426284:	bl	402960 <memset@plt>
  426288:	b	42632c <_obstack_memory_used@@Base+0x8190>
  42628c:	ldur	w8, [x29, #-12]
  426290:	cmp	w8, #0x4
  426294:	b.ge	42632c <_obstack_memory_used@@Base+0x8190>  // b.tcont
  426298:	stur	wzr, [x29, #-16]
  42629c:	ldur	w8, [x29, #-16]
  4262a0:	cmp	w8, #0x40
  4262a4:	b.ge	42631c <_obstack_memory_used@@Base+0x8180>  // b.tcont
  4262a8:	bl	402b20 <__ctype_b_loc@plt>
  4262ac:	ldr	x8, [x0]
  4262b0:	ldursw	x9, [x29, #-20]
  4262b4:	ldrh	w10, [x8, x9, lsl #1]
  4262b8:	and	w10, w10, #0x8
  4262bc:	cbnz	w10, 4262cc <_obstack_memory_used@@Base+0x8130>
  4262c0:	ldur	w8, [x29, #-20]
  4262c4:	cmp	w8, #0x5f
  4262c8:	b.ne	426300 <_obstack_memory_used@@Base+0x8164>  // b.any
  4262cc:	ldur	w8, [x29, #-16]
  4262d0:	mov	w9, w8
  4262d4:	mov	x10, #0x1                   	// #1
  4262d8:	lsl	x9, x10, x9
  4262dc:	ldur	x10, [x29, #-8]
  4262e0:	add	x10, x10, #0xb8
  4262e4:	ldursw	x11, [x29, #-12]
  4262e8:	mov	x12, #0x8                   	// #8
  4262ec:	mul	x11, x12, x11
  4262f0:	add	x10, x10, x11
  4262f4:	ldr	x11, [x10]
  4262f8:	orr	x9, x11, x9
  4262fc:	str	x9, [x10]
  426300:	ldur	w8, [x29, #-16]
  426304:	add	w8, w8, #0x1
  426308:	stur	w8, [x29, #-16]
  42630c:	ldur	w8, [x29, #-20]
  426310:	add	w8, w8, #0x1
  426314:	stur	w8, [x29, #-20]
  426318:	b	42629c <_obstack_memory_used@@Base+0x8100>
  42631c:	ldur	w8, [x29, #-12]
  426320:	add	w8, w8, #0x1
  426324:	stur	w8, [x29, #-12]
  426328:	b	42628c <_obstack_memory_used@@Base+0x80f0>
  42632c:	ldp	x29, x30, [sp, #64]
  426330:	add	sp, sp, #0x50
  426334:	ret
  426338:	sub	sp, sp, #0x90
  42633c:	stp	x29, x30, [sp, #128]
  426340:	add	x29, sp, #0x80
  426344:	mov	x8, #0x20                  	// #32
  426348:	mov	x9, #0x1                   	// #1
  42634c:	mov	w10, #0x1                   	// #1
  426350:	stur	x0, [x29, #-16]
  426354:	stur	x1, [x29, #-24]
  426358:	stur	x2, [x29, #-32]
  42635c:	stur	x3, [x29, #-40]
  426360:	and	w10, w4, w10
  426364:	sturb	w10, [x29, #-41]
  426368:	stur	x5, [x29, #-56]
  42636c:	str	xzr, [sp, #48]
  426370:	mov	x0, x8
  426374:	mov	x1, x9
  426378:	bl	4029a0 <calloc@plt>
  42637c:	str	x0, [sp, #64]
  426380:	ldr	x8, [sp, #64]
  426384:	cmp	x8, #0x0
  426388:	cset	w10, eq  // eq = none
  42638c:	and	w10, w10, #0x1
  426390:	mov	w0, w10
  426394:	sxtw	x8, w0
  426398:	cbz	x8, 4263b4 <_obstack_memory_used@@Base+0x8218>
  42639c:	ldur	x8, [x29, #-56]
  4263a0:	mov	w9, #0xc                   	// #12
  4263a4:	str	w9, [x8]
  4263a8:	mov	x8, xzr
  4263ac:	stur	x8, [x29, #-8]
  4263b0:	b	42667c <_obstack_memory_used@@Base+0x84e0>
  4263b4:	mov	x0, #0x50                  	// #80
  4263b8:	mov	x1, #0x1                   	// #1
  4263bc:	bl	4029a0 <calloc@plt>
  4263c0:	str	x0, [sp, #56]
  4263c4:	ldr	x8, [sp, #56]
  4263c8:	cmp	x8, #0x0
  4263cc:	cset	w9, eq  // eq = none
  4263d0:	and	w9, w9, #0x1
  4263d4:	mov	w0, w9
  4263d8:	sxtw	x8, w0
  4263dc:	cbz	x8, 426400 <_obstack_memory_used@@Base+0x8264>
  4263e0:	ldr	x0, [sp, #64]
  4263e4:	bl	402b40 <free@plt>
  4263e8:	ldur	x8, [x29, #-56]
  4263ec:	mov	w9, #0xc                   	// #12
  4263f0:	str	w9, [x8]
  4263f4:	mov	x8, xzr
  4263f8:	stur	x8, [x29, #-8]
  4263fc:	b	42667c <_obstack_memory_used@@Base+0x84e0>
  426400:	ldurb	w8, [x29, #-41]
  426404:	and	w8, w8, #0x1
  426408:	ldr	x9, [sp, #56]
  42640c:	ldrb	w10, [x9, #32]
  426410:	and	w8, w8, #0x1
  426414:	and	w10, w10, #0xfffffffe
  426418:	orr	w8, w10, w8
  42641c:	strb	w8, [x9, #32]
  426420:	ldur	x0, [x29, #-24]
  426424:	ldr	x1, [sp, #64]
  426428:	ldr	x2, [sp, #56]
  42642c:	ldur	x4, [x29, #-32]
  426430:	add	x3, sp, #0x30
  426434:	mov	x9, xzr
  426438:	mov	x5, x9
  42643c:	bl	427778 <_obstack_memory_used@@Base+0x95dc>
  426440:	str	w0, [sp, #44]
  426444:	ldr	w8, [sp, #44]
  426448:	cmp	w8, #0x0
  42644c:	cset	w8, ne  // ne = any
  426450:	and	w8, w8, #0x1
  426454:	mov	w1, w8
  426458:	sxtw	x9, w1
  42645c:	cbz	x9, 426488 <_obstack_memory_used@@Base+0x82ec>
  426460:	ldr	x0, [sp, #64]
  426464:	bl	402b40 <free@plt>
  426468:	ldr	x0, [sp, #56]
  42646c:	bl	420e78 <_obstack_memory_used@@Base+0x2cdc>
  426470:	ldr	w8, [sp, #44]
  426474:	ldur	x9, [x29, #-56]
  426478:	str	w8, [x9]
  42647c:	mov	x9, xzr
  426480:	stur	x9, [x29, #-8]
  426484:	b	42667c <_obstack_memory_used@@Base+0x84e0>
  426488:	ldur	x8, [x29, #-40]
  42648c:	ldrb	w9, [x8]
  426490:	cbz	w9, 4264b8 <_obstack_memory_used@@Base+0x831c>
  426494:	ldr	x0, [sp, #64]
  426498:	ldur	x8, [x29, #-40]
  42649c:	ldrb	w9, [x8]
  4264a0:	mov	w1, w9
  4264a4:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  4264a8:	ldur	x8, [x29, #-40]
  4264ac:	add	x8, x8, #0x1
  4264b0:	stur	x8, [x29, #-40]
  4264b4:	b	426488 <_obstack_memory_used@@Base+0x82ec>
  4264b8:	ldurb	w8, [x29, #-41]
  4264bc:	tbnz	w8, #0, 4264c4 <_obstack_memory_used@@Base+0x8328>
  4264c0:	b	4264cc <_obstack_memory_used@@Base+0x8330>
  4264c4:	ldr	x0, [sp, #64]
  4264c8:	bl	428254 <_obstack_memory_used@@Base+0xa0b8>
  4264cc:	ldur	x8, [x29, #-16]
  4264d0:	ldr	w9, [x8, #180]
  4264d4:	cmp	w9, #0x1
  4264d8:	b.le	4264ec <_obstack_memory_used@@Base+0x8350>
  4264dc:	ldr	x0, [sp, #64]
  4264e0:	ldur	x8, [x29, #-16]
  4264e4:	ldr	x1, [x8, #120]
  4264e8:	bl	4282a0 <_obstack_memory_used@@Base+0xa104>
  4264ec:	ldr	x8, [sp, #64]
  4264f0:	add	x3, sp, #0x10
  4264f4:	str	x8, [sp, #16]
  4264f8:	ldr	w9, [sp, #24]
  4264fc:	and	w9, w9, #0xffffff00
  426500:	orr	w9, w9, #0x3
  426504:	str	w9, [sp, #24]
  426508:	ldr	w9, [sp, #24]
  42650c:	and	w9, w9, #0xfffc00ff
  426510:	str	w9, [sp, #24]
  426514:	ldr	w9, [sp, #24]
  426518:	and	w9, w9, #0xfffbffff
  42651c:	str	w9, [sp, #24]
  426520:	ldr	w9, [sp, #24]
  426524:	and	w9, w9, #0xfff7ffff
  426528:	str	w9, [sp, #24]
  42652c:	ldr	w9, [sp, #24]
  426530:	and	w9, w9, #0xffefffff
  426534:	str	w9, [sp, #24]
  426538:	ldr	w9, [sp, #24]
  42653c:	and	w9, w9, #0xffdfffff
  426540:	str	w9, [sp, #24]
  426544:	ldr	w9, [sp, #24]
  426548:	and	w9, w9, #0xffbfffff
  42654c:	str	w9, [sp, #24]
  426550:	ldur	x0, [x29, #-16]
  426554:	mov	x8, xzr
  426558:	mov	x1, x8
  42655c:	mov	x2, x8
  426560:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  426564:	str	x0, [sp, #32]
  426568:	ldr	x8, [sp, #32]
  42656c:	cmp	x8, #0x0
  426570:	cset	w9, eq  // eq = none
  426574:	and	w9, w9, #0x1
  426578:	mov	w0, w9
  42657c:	sxtw	x8, w0
  426580:	cbz	x8, 426588 <_obstack_memory_used@@Base+0x83ec>
  426584:	b	426658 <_obstack_memory_used@@Base+0x84bc>
  426588:	ldur	x8, [x29, #-16]
  42658c:	ldr	w9, [x8, #180]
  426590:	cmp	w9, #0x1
  426594:	b.le	426644 <_obstack_memory_used@@Base+0x84a8>
  426598:	add	x3, sp, #0x10
  42659c:	ldr	w8, [sp, #24]
  4265a0:	and	w8, w8, #0xffffff00
  4265a4:	orr	w8, w8, #0x6
  4265a8:	str	w8, [sp, #24]
  4265ac:	ldr	x9, [sp, #56]
  4265b0:	str	x9, [sp, #16]
  4265b4:	ldur	x9, [x29, #-16]
  4265b8:	ldrb	w8, [x9, #176]
  4265bc:	and	w8, w8, #0xfffffffd
  4265c0:	orr	w8, w8, #0x2
  4265c4:	strb	w8, [x9, #176]
  4265c8:	ldur	x0, [x29, #-16]
  4265cc:	mov	x9, xzr
  4265d0:	mov	x1, x9
  4265d4:	mov	x2, x9
  4265d8:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  4265dc:	str	x0, [sp, #8]
  4265e0:	ldr	x9, [sp, #8]
  4265e4:	cmp	x9, #0x0
  4265e8:	cset	w8, eq  // eq = none
  4265ec:	and	w8, w8, #0x1
  4265f0:	mov	w0, w8
  4265f4:	sxtw	x9, w0
  4265f8:	cbz	x9, 426600 <_obstack_memory_used@@Base+0x8464>
  4265fc:	b	426658 <_obstack_memory_used@@Base+0x84bc>
  426600:	ldur	x0, [x29, #-16]
  426604:	ldr	x1, [sp, #32]
  426608:	ldr	x2, [sp, #8]
  42660c:	mov	w3, #0xa                   	// #10
  426610:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  426614:	str	x0, [sp, #32]
  426618:	ldr	x8, [sp, #8]
  42661c:	cmp	x8, #0x0
  426620:	cset	w9, ne  // ne = any
  426624:	and	w9, w9, #0x1
  426628:	mov	w0, w9
  42662c:	sxtw	x8, w0
  426630:	cbz	x8, 426640 <_obstack_memory_used@@Base+0x84a4>
  426634:	ldr	x8, [sp, #32]
  426638:	stur	x8, [x29, #-8]
  42663c:	b	42667c <_obstack_memory_used@@Base+0x84e0>
  426640:	b	426658 <_obstack_memory_used@@Base+0x84bc>
  426644:	ldr	x0, [sp, #56]
  426648:	bl	420e78 <_obstack_memory_used@@Base+0x2cdc>
  42664c:	ldr	x8, [sp, #32]
  426650:	stur	x8, [x29, #-8]
  426654:	b	42667c <_obstack_memory_used@@Base+0x84e0>
  426658:	ldr	x0, [sp, #64]
  42665c:	bl	402b40 <free@plt>
  426660:	ldr	x0, [sp, #56]
  426664:	bl	420e78 <_obstack_memory_used@@Base+0x2cdc>
  426668:	ldur	x8, [x29, #-56]
  42666c:	mov	w9, #0xc                   	// #12
  426670:	str	w9, [x8]
  426674:	mov	x8, xzr
  426678:	stur	x8, [x29, #-8]
  42667c:	ldur	x0, [x29, #-8]
  426680:	ldp	x29, x30, [sp, #128]
  426684:	add	sp, sp, #0x90
  426688:	ret
  42668c:	sub	sp, sp, #0xd0
  426690:	stp	x29, x30, [sp, #192]
  426694:	add	x29, sp, #0xc0
  426698:	mov	x8, xzr
  42669c:	stur	x0, [x29, #-16]
  4266a0:	stur	x1, [x29, #-24]
  4266a4:	stur	x2, [x29, #-32]
  4266a8:	stur	x3, [x29, #-40]
  4266ac:	stur	x4, [x29, #-48]
  4266b0:	stur	x5, [x29, #-56]
  4266b4:	stur	x8, [x29, #-64]
  4266b8:	stur	x8, [x29, #-72]
  4266bc:	ldur	x8, [x29, #-24]
  4266c0:	ldr	x8, [x8, #72]
  4266c4:	str	x8, [sp, #88]
  4266c8:	ldur	x8, [x29, #-40]
  4266cc:	ldr	q0, [x8]
  4266d0:	str	q0, [sp, #64]
  4266d4:	ldur	x8, [x29, #-40]
  4266d8:	ldr	w9, [x8, #8]
  4266dc:	and	w9, w9, #0xff
  4266e0:	cmp	w9, #0x17
  4266e4:	b.ne	426988 <_obstack_memory_used@@Base+0x87ec>  // b.any
  4266e8:	str	xzr, [sp, #96]
  4266ec:	ldur	x0, [x29, #-24]
  4266f0:	ldur	x1, [x29, #-40]
  4266f4:	ldur	x2, [x29, #-48]
  4266f8:	bl	428754 <_obstack_memory_used@@Base+0xa5b8>
  4266fc:	stur	x0, [x29, #-88]
  426700:	ldur	x8, [x29, #-88]
  426704:	mov	x9, #0xffffffffffffffff    	// #-1
  426708:	cmp	x8, x9
  42670c:	b.ne	426754 <_obstack_memory_used@@Base+0x85b8>  // b.any
  426710:	ldur	x8, [x29, #-40]
  426714:	ldr	w9, [x8, #8]
  426718:	and	w9, w9, #0xff
  42671c:	cmp	w9, #0x1
  426720:	b.ne	42673c <_obstack_memory_used@@Base+0x85a0>  // b.any
  426724:	ldur	x8, [x29, #-40]
  426728:	ldrb	w9, [x8]
  42672c:	cmp	w9, #0x2c
  426730:	b.ne	42673c <_obstack_memory_used@@Base+0x85a0>  // b.any
  426734:	stur	xzr, [x29, #-88]
  426738:	b	426754 <_obstack_memory_used@@Base+0x85b8>
  42673c:	ldur	x8, [x29, #-56]
  426740:	mov	w9, #0xa                   	// #10
  426744:	str	w9, [x8]
  426748:	mov	x8, xzr
  42674c:	stur	x8, [x29, #-8]
  426750:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426754:	ldur	x8, [x29, #-88]
  426758:	mov	x9, #0xfffffffffffffffe    	// #-2
  42675c:	cmp	x8, x9
  426760:	cset	w10, ne  // ne = any
  426764:	and	w10, w10, #0x1
  426768:	mov	w0, w10
  42676c:	sxtw	x8, w0
  426770:	cbz	x8, 4267e8 <_obstack_memory_used@@Base+0x864c>
  426774:	ldur	x8, [x29, #-40]
  426778:	ldr	w9, [x8, #8]
  42677c:	and	w9, w9, #0xff
  426780:	cmp	w9, #0x18
  426784:	b.ne	426794 <_obstack_memory_used@@Base+0x85f8>  // b.any
  426788:	ldur	x8, [x29, #-88]
  42678c:	str	x8, [sp, #48]
  426790:	b	4267e0 <_obstack_memory_used@@Base+0x8644>
  426794:	ldur	x8, [x29, #-40]
  426798:	ldr	w9, [x8, #8]
  42679c:	and	w9, w9, #0xff
  4267a0:	cmp	w9, #0x1
  4267a4:	b.ne	4267d0 <_obstack_memory_used@@Base+0x8634>  // b.any
  4267a8:	ldur	x8, [x29, #-40]
  4267ac:	ldrb	w9, [x8]
  4267b0:	cmp	w9, #0x2c
  4267b4:	b.ne	4267d0 <_obstack_memory_used@@Base+0x8634>  // b.any
  4267b8:	ldur	x0, [x29, #-24]
  4267bc:	ldur	x1, [x29, #-40]
  4267c0:	ldur	x2, [x29, #-48]
  4267c4:	bl	428754 <_obstack_memory_used@@Base+0xa5b8>
  4267c8:	str	x0, [sp, #40]
  4267cc:	b	4267d8 <_obstack_memory_used@@Base+0x863c>
  4267d0:	mov	x8, #0xfffffffffffffffe    	// #-2
  4267d4:	str	x8, [sp, #40]
  4267d8:	ldr	x8, [sp, #40]
  4267dc:	str	x8, [sp, #48]
  4267e0:	ldr	x8, [sp, #48]
  4267e4:	str	x8, [sp, #96]
  4267e8:	ldur	x8, [x29, #-88]
  4267ec:	mov	x9, #0xfffffffffffffffe    	// #-2
  4267f0:	mov	w10, #0x1                   	// #1
  4267f4:	cmp	x8, x9
  4267f8:	str	w10, [sp, #36]
  4267fc:	b.eq	426814 <_obstack_memory_used@@Base+0x8678>  // b.none
  426800:	ldr	x8, [sp, #96]
  426804:	mov	x9, #0xfffffffffffffffe    	// #-2
  426808:	cmp	x8, x9
  42680c:	cset	w10, eq  // eq = none
  426810:	str	w10, [sp, #36]
  426814:	ldr	w8, [sp, #36]
  426818:	and	w8, w8, #0x1
  42681c:	mov	w0, w8
  426820:	sxtw	x9, w0
  426824:	cbz	x9, 4268bc <_obstack_memory_used@@Base+0x8720>
  426828:	ldur	x8, [x29, #-48]
  42682c:	tst	x8, #0x200000
  426830:	cset	w9, ne  // ne = any
  426834:	eor	w9, w9, #0x1
  426838:	and	w9, w9, #0x1
  42683c:	mov	w0, w9
  426840:	sxtw	x8, w0
  426844:	cbz	x8, 426884 <_obstack_memory_used@@Base+0x86e8>
  426848:	ldur	x8, [x29, #-40]
  42684c:	ldr	w9, [x8, #8]
  426850:	and	w9, w9, #0xff
  426854:	cmp	w9, #0x2
  426858:	b.ne	42686c <_obstack_memory_used@@Base+0x86d0>  // b.any
  42685c:	ldur	x8, [x29, #-56]
  426860:	mov	w9, #0x9                   	// #9
  426864:	str	w9, [x8]
  426868:	b	426878 <_obstack_memory_used@@Base+0x86dc>
  42686c:	ldur	x8, [x29, #-56]
  426870:	mov	w9, #0xa                   	// #10
  426874:	str	w9, [x8]
  426878:	mov	x8, xzr
  42687c:	stur	x8, [x29, #-8]
  426880:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426884:	ldr	x8, [sp, #88]
  426888:	ldur	x9, [x29, #-24]
  42688c:	str	x8, [x9, #72]
  426890:	ldur	x8, [x29, #-40]
  426894:	ldr	q0, [sp, #64]
  426898:	str	q0, [x8]
  42689c:	ldur	x8, [x29, #-40]
  4268a0:	ldr	w10, [x8, #8]
  4268a4:	and	w10, w10, #0xffffff00
  4268a8:	orr	w10, w10, #0x1
  4268ac:	str	w10, [x8, #8]
  4268b0:	ldur	x8, [x29, #-16]
  4268b4:	stur	x8, [x29, #-8]
  4268b8:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  4268bc:	ldr	x8, [sp, #96]
  4268c0:	mov	x9, #0xffffffffffffffff    	// #-1
  4268c4:	cmp	x8, x9
  4268c8:	b.eq	4268e4 <_obstack_memory_used@@Base+0x8748>  // b.none
  4268cc:	ldur	x8, [x29, #-88]
  4268d0:	ldr	x9, [sp, #96]
  4268d4:	mov	w10, #0x1                   	// #1
  4268d8:	cmp	x8, x9
  4268dc:	str	w10, [sp, #32]
  4268e0:	b.gt	4268fc <_obstack_memory_used@@Base+0x8760>
  4268e4:	ldur	x8, [x29, #-40]
  4268e8:	ldr	w9, [x8, #8]
  4268ec:	and	w9, w9, #0xff
  4268f0:	cmp	w9, #0x18
  4268f4:	cset	w9, ne  // ne = any
  4268f8:	str	w9, [sp, #32]
  4268fc:	ldr	w8, [sp, #32]
  426900:	and	w8, w8, #0x1
  426904:	mov	w0, w8
  426908:	sxtw	x9, w0
  42690c:	cbz	x9, 426928 <_obstack_memory_used@@Base+0x878c>
  426910:	ldur	x8, [x29, #-56]
  426914:	mov	w9, #0xa                   	// #10
  426918:	str	w9, [x8]
  42691c:	mov	x8, xzr
  426920:	stur	x8, [x29, #-8]
  426924:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426928:	ldr	x8, [sp, #96]
  42692c:	mov	x9, #0xffffffffffffffff    	// #-1
  426930:	cmp	x8, x9
  426934:	b.ne	426944 <_obstack_memory_used@@Base+0x87a8>  // b.any
  426938:	ldur	x8, [x29, #-88]
  42693c:	str	x8, [sp, #24]
  426940:	b	42694c <_obstack_memory_used@@Base+0x87b0>
  426944:	ldr	x8, [sp, #96]
  426948:	str	x8, [sp, #24]
  42694c:	ldr	x8, [sp, #24]
  426950:	mov	x9, #0x7fff                	// #32767
  426954:	cmp	x9, x8
  426958:	cset	w10, lt  // lt = tstop
  42695c:	and	w10, w10, #0x1
  426960:	mov	w0, w10
  426964:	sxtw	x8, w0
  426968:	cbz	x8, 426984 <_obstack_memory_used@@Base+0x87e8>
  42696c:	ldur	x8, [x29, #-56]
  426970:	mov	w9, #0xf                   	// #15
  426974:	str	w9, [x8]
  426978:	mov	x8, xzr
  42697c:	stur	x8, [x29, #-8]
  426980:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426984:	b	4269d4 <_obstack_memory_used@@Base+0x8838>
  426988:	ldur	x8, [x29, #-40]
  42698c:	ldr	w9, [x8, #8]
  426990:	and	w9, w9, #0xff
  426994:	mov	w10, wzr
  426998:	mov	w11, #0x1                   	// #1
  42699c:	cmp	w9, #0x12
  4269a0:	csel	w9, w11, w10, eq  // eq = none
  4269a4:	mov	w0, w9
  4269a8:	sxtw	x8, w0
  4269ac:	stur	x8, [x29, #-88]
  4269b0:	ldur	x8, [x29, #-40]
  4269b4:	ldr	w9, [x8, #8]
  4269b8:	and	w9, w9, #0xff
  4269bc:	mov	w10, #0xffffffff            	// #-1
  4269c0:	cmp	w9, #0x13
  4269c4:	csel	w9, w11, w10, eq  // eq = none
  4269c8:	mov	w0, w9
  4269cc:	sxtw	x8, w0
  4269d0:	str	x8, [sp, #96]
  4269d4:	ldur	x0, [x29, #-40]
  4269d8:	ldur	x1, [x29, #-24]
  4269dc:	ldur	x2, [x29, #-48]
  4269e0:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  4269e4:	ldur	x8, [x29, #-16]
  4269e8:	cmp	x8, #0x0
  4269ec:	cset	w9, eq  // eq = none
  4269f0:	and	w9, w9, #0x1
  4269f4:	mov	w0, w9
  4269f8:	sxtw	x8, w0
  4269fc:	cbz	x8, 426a0c <_obstack_memory_used@@Base+0x8870>
  426a00:	mov	x8, xzr
  426a04:	stur	x8, [x29, #-8]
  426a08:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426a0c:	ldur	x8, [x29, #-88]
  426a10:	mov	w9, #0x0                   	// #0
  426a14:	str	w9, [sp, #20]
  426a18:	cbnz	x8, 426a2c <_obstack_memory_used@@Base+0x8890>
  426a1c:	ldr	x8, [sp, #96]
  426a20:	cmp	x8, #0x0
  426a24:	cset	w9, eq  // eq = none
  426a28:	str	w9, [sp, #20]
  426a2c:	ldr	w8, [sp, #20]
  426a30:	and	w8, w8, #0x1
  426a34:	mov	w0, w8
  426a38:	sxtw	x9, w0
  426a3c:	cbz	x9, 426a68 <_obstack_memory_used@@Base+0x88cc>
  426a40:	ldur	x0, [x29, #-16]
  426a44:	adrp	x1, 424000 <_obstack_memory_used@@Base+0x5e64>
  426a48:	add	x1, x1, #0x9c0
  426a4c:	mov	x8, xzr
  426a50:	mov	x2, x8
  426a54:	str	x8, [sp, #8]
  426a58:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  426a5c:	ldr	x8, [sp, #8]
  426a60:	stur	x8, [x29, #-8]
  426a64:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426a68:	ldur	x8, [x29, #-88]
  426a6c:	cmp	x8, #0x0
  426a70:	cset	w9, gt
  426a74:	and	w9, w9, #0x1
  426a78:	mov	w0, w9
  426a7c:	sxtw	x8, w0
  426a80:	cbz	x8, 426b6c <_obstack_memory_used@@Base+0x89d0>
  426a84:	ldur	x8, [x29, #-16]
  426a88:	stur	x8, [x29, #-64]
  426a8c:	mov	x8, #0x2                   	// #2
  426a90:	stur	x8, [x29, #-80]
  426a94:	ldur	x8, [x29, #-80]
  426a98:	ldur	x9, [x29, #-88]
  426a9c:	cmp	x8, x9
  426aa0:	b.gt	426b14 <_obstack_memory_used@@Base+0x8978>
  426aa4:	ldur	x0, [x29, #-16]
  426aa8:	ldur	x1, [x29, #-32]
  426aac:	bl	4288e0 <_obstack_memory_used@@Base+0xa744>
  426ab0:	stur	x0, [x29, #-16]
  426ab4:	ldur	x0, [x29, #-32]
  426ab8:	ldur	x1, [x29, #-64]
  426abc:	ldur	x2, [x29, #-16]
  426ac0:	mov	w3, #0x10                  	// #16
  426ac4:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  426ac8:	stur	x0, [x29, #-64]
  426acc:	ldur	x8, [x29, #-16]
  426ad0:	mov	w9, #0x1                   	// #1
  426ad4:	str	w9, [sp, #4]
  426ad8:	cbz	x8, 426aec <_obstack_memory_used@@Base+0x8950>
  426adc:	ldur	x8, [x29, #-64]
  426ae0:	cmp	x8, #0x0
  426ae4:	cset	w9, eq  // eq = none
  426ae8:	str	w9, [sp, #4]
  426aec:	ldr	w8, [sp, #4]
  426af0:	and	w8, w8, #0x1
  426af4:	mov	w0, w8
  426af8:	sxtw	x9, w0
  426afc:	cbz	x9, 426b04 <_obstack_memory_used@@Base+0x8968>
  426b00:	b	426cf0 <_obstack_memory_used@@Base+0x8b54>
  426b04:	ldur	x8, [x29, #-80]
  426b08:	add	x8, x8, #0x1
  426b0c:	stur	x8, [x29, #-80]
  426b10:	b	426a94 <_obstack_memory_used@@Base+0x88f8>
  426b14:	ldur	x8, [x29, #-88]
  426b18:	ldr	x9, [sp, #96]
  426b1c:	cmp	x8, x9
  426b20:	b.ne	426b30 <_obstack_memory_used@@Base+0x8994>  // b.any
  426b24:	ldur	x8, [x29, #-64]
  426b28:	stur	x8, [x29, #-8]
  426b2c:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426b30:	ldur	x0, [x29, #-16]
  426b34:	ldur	x1, [x29, #-32]
  426b38:	bl	4288e0 <_obstack_memory_used@@Base+0xa744>
  426b3c:	stur	x0, [x29, #-16]
  426b40:	ldur	x8, [x29, #-16]
  426b44:	cmp	x8, #0x0
  426b48:	cset	w9, eq  // eq = none
  426b4c:	and	w9, w9, #0x1
  426b50:	mov	w0, w9
  426b54:	sxtw	x8, w0
  426b58:	cbz	x8, 426b60 <_obstack_memory_used@@Base+0x89c4>
  426b5c:	b	426cf0 <_obstack_memory_used@@Base+0x8b54>
  426b60:	ldur	x8, [x29, #-64]
  426b64:	stur	x8, [x29, #-72]
  426b68:	b	426b74 <_obstack_memory_used@@Base+0x89d8>
  426b6c:	mov	x8, xzr
  426b70:	stur	x8, [x29, #-72]
  426b74:	ldur	x8, [x29, #-16]
  426b78:	ldr	w9, [x8, #48]
  426b7c:	and	w9, w9, #0xff
  426b80:	cmp	w9, #0x11
  426b84:	b.ne	426bac <_obstack_memory_used@@Base+0x8a10>  // b.any
  426b88:	ldur	x8, [x29, #-16]
  426b8c:	ldr	x8, [x8, #40]
  426b90:	str	x8, [sp, #56]
  426b94:	ldur	x0, [x29, #-16]
  426b98:	ldr	x8, [sp, #56]
  426b9c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x9e64>
  426ba0:	add	x1, x1, #0xa50
  426ba4:	mov	x2, x8
  426ba8:	bl	424884 <_obstack_memory_used@@Base+0x66e8>
  426bac:	ldur	x0, [x29, #-32]
  426bb0:	ldur	x1, [x29, #-16]
  426bb4:	ldr	x8, [sp, #96]
  426bb8:	mov	x9, #0xffffffffffffffff    	// #-1
  426bbc:	mov	w10, #0xb                   	// #11
  426bc0:	mov	w11, #0xa                   	// #10
  426bc4:	cmp	x8, x9
  426bc8:	csel	w3, w10, w11, eq  // eq = none
  426bcc:	mov	x8, xzr
  426bd0:	mov	x2, x8
  426bd4:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  426bd8:	stur	x0, [x29, #-64]
  426bdc:	ldur	x8, [x29, #-64]
  426be0:	cmp	x8, #0x0
  426be4:	cset	w10, eq  // eq = none
  426be8:	and	w10, w10, #0x1
  426bec:	mov	w0, w10
  426bf0:	sxtw	x8, w0
  426bf4:	cbz	x8, 426bfc <_obstack_memory_used@@Base+0x8a60>
  426bf8:	b	426cf0 <_obstack_memory_used@@Base+0x8b54>
  426bfc:	ldur	x8, [x29, #-88]
  426c00:	add	x8, x8, #0x2
  426c04:	stur	x8, [x29, #-80]
  426c08:	ldur	x8, [x29, #-80]
  426c0c:	ldr	x9, [sp, #96]
  426c10:	cmp	x8, x9
  426c14:	b.gt	426cc4 <_obstack_memory_used@@Base+0x8b28>
  426c18:	ldur	x0, [x29, #-16]
  426c1c:	ldur	x1, [x29, #-32]
  426c20:	bl	4288e0 <_obstack_memory_used@@Base+0xa744>
  426c24:	stur	x0, [x29, #-16]
  426c28:	ldur	x0, [x29, #-32]
  426c2c:	ldur	x1, [x29, #-64]
  426c30:	ldur	x2, [x29, #-16]
  426c34:	mov	w3, #0x10                  	// #16
  426c38:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  426c3c:	stur	x0, [x29, #-64]
  426c40:	ldur	x8, [x29, #-16]
  426c44:	mov	w9, #0x1                   	// #1
  426c48:	str	w9, [sp]
  426c4c:	cbz	x8, 426c60 <_obstack_memory_used@@Base+0x8ac4>
  426c50:	ldur	x8, [x29, #-64]
  426c54:	cmp	x8, #0x0
  426c58:	cset	w9, eq  // eq = none
  426c5c:	str	w9, [sp]
  426c60:	ldr	w8, [sp]
  426c64:	and	w8, w8, #0x1
  426c68:	mov	w0, w8
  426c6c:	sxtw	x9, w0
  426c70:	cbz	x9, 426c78 <_obstack_memory_used@@Base+0x8adc>
  426c74:	b	426cf0 <_obstack_memory_used@@Base+0x8b54>
  426c78:	ldur	x0, [x29, #-32]
  426c7c:	ldur	x1, [x29, #-64]
  426c80:	mov	x8, xzr
  426c84:	mov	x2, x8
  426c88:	mov	w3, #0xa                   	// #10
  426c8c:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  426c90:	stur	x0, [x29, #-64]
  426c94:	ldur	x8, [x29, #-64]
  426c98:	cmp	x8, #0x0
  426c9c:	cset	w9, eq  // eq = none
  426ca0:	and	w9, w9, #0x1
  426ca4:	mov	w0, w9
  426ca8:	sxtw	x8, w0
  426cac:	cbz	x8, 426cb4 <_obstack_memory_used@@Base+0x8b18>
  426cb0:	b	426cf0 <_obstack_memory_used@@Base+0x8b54>
  426cb4:	ldur	x8, [x29, #-80]
  426cb8:	add	x8, x8, #0x1
  426cbc:	stur	x8, [x29, #-80]
  426cc0:	b	426c08 <_obstack_memory_used@@Base+0x8a6c>
  426cc4:	ldur	x8, [x29, #-72]
  426cc8:	cbz	x8, 426ce4 <_obstack_memory_used@@Base+0x8b48>
  426ccc:	ldur	x0, [x29, #-32]
  426cd0:	ldur	x1, [x29, #-72]
  426cd4:	ldur	x2, [x29, #-64]
  426cd8:	mov	w3, #0x10                  	// #16
  426cdc:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  426ce0:	stur	x0, [x29, #-64]
  426ce4:	ldur	x8, [x29, #-64]
  426ce8:	stur	x8, [x29, #-8]
  426cec:	b	426d04 <_obstack_memory_used@@Base+0x8b68>
  426cf0:	ldur	x8, [x29, #-56]
  426cf4:	mov	w9, #0xc                   	// #12
  426cf8:	str	w9, [x8]
  426cfc:	mov	x8, xzr
  426d00:	stur	x8, [x29, #-8]
  426d04:	ldur	x0, [x29, #-8]
  426d08:	ldp	x29, x30, [sp, #192]
  426d0c:	add	sp, sp, #0xd0
  426d10:	ret
  426d14:	sub	sp, sp, #0x30
  426d18:	str	x0, [sp, #32]
  426d1c:	str	x1, [sp, #24]
  426d20:	str	x2, [sp, #16]
  426d24:	ldr	x8, [sp, #24]
  426d28:	ldr	x8, [x8, #104]
  426d2c:	ldr	x9, [sp, #24]
  426d30:	ldr	x9, [x9, #72]
  426d34:	cmp	x8, x9
  426d38:	b.gt	426d58 <_obstack_memory_used@@Base+0x8bbc>
  426d3c:	ldr	x8, [sp, #32]
  426d40:	ldr	w9, [x8, #8]
  426d44:	and	w9, w9, #0xffffff00
  426d48:	orr	w9, w9, #0x2
  426d4c:	str	w9, [x8, #8]
  426d50:	str	wzr, [sp, #44]
  426d54:	b	427048 <_obstack_memory_used@@Base+0x8eac>
  426d58:	ldr	x8, [sp, #24]
  426d5c:	ldr	x8, [x8, #8]
  426d60:	ldr	x9, [sp, #24]
  426d64:	ldr	x9, [x9, #72]
  426d68:	add	x9, x9, #0x0
  426d6c:	add	x8, x8, x9
  426d70:	ldrb	w10, [x8]
  426d74:	strb	w10, [sp, #15]
  426d78:	ldrb	w10, [sp, #15]
  426d7c:	ldr	x8, [sp, #32]
  426d80:	strb	w10, [x8]
  426d84:	ldr	x8, [sp, #24]
  426d88:	ldr	w10, [x8, #144]
  426d8c:	cmp	w10, #0x1
  426d90:	b.le	426dec <_obstack_memory_used@@Base+0x8c50>
  426d94:	ldr	x8, [sp, #24]
  426d98:	ldr	x8, [x8, #72]
  426d9c:	ldr	x9, [sp, #24]
  426da0:	ldr	x9, [x9, #48]
  426da4:	cmp	x8, x9
  426da8:	b.eq	426dec <_obstack_memory_used@@Base+0x8c50>  // b.none
  426dac:	ldr	x8, [sp, #24]
  426db0:	ldr	x8, [x8, #16]
  426db4:	ldr	x9, [sp, #24]
  426db8:	ldr	x9, [x9, #72]
  426dbc:	ldr	w10, [x8, x9, lsl #2]
  426dc0:	mov	w11, #0xffffffff            	// #-1
  426dc4:	cmp	w10, w11
  426dc8:	b.ne	426dec <_obstack_memory_used@@Base+0x8c50>  // b.any
  426dcc:	ldr	x8, [sp, #32]
  426dd0:	ldr	w9, [x8, #8]
  426dd4:	and	w9, w9, #0xffffff00
  426dd8:	mov	w10, #0x1                   	// #1
  426ddc:	orr	w9, w9, #0x1
  426de0:	str	w9, [x8, #8]
  426de4:	str	w10, [sp, #44]
  426de8:	b	427048 <_obstack_memory_used@@Base+0x8eac>
  426dec:	ldrb	w8, [sp, #15]
  426df0:	cmp	w8, #0x5c
  426df4:	b.ne	426e7c <_obstack_memory_used@@Base+0x8ce0>  // b.any
  426df8:	ldr	x8, [sp, #16]
  426dfc:	and	x8, x8, #0x1
  426e00:	cbz	x8, 426e7c <_obstack_memory_used@@Base+0x8ce0>
  426e04:	ldr	x8, [sp, #24]
  426e08:	ldr	x8, [x8, #72]
  426e0c:	add	x8, x8, #0x1
  426e10:	ldr	x9, [sp, #24]
  426e14:	ldr	x9, [x9, #88]
  426e18:	cmp	x8, x9
  426e1c:	b.ge	426e7c <_obstack_memory_used@@Base+0x8ce0>  // b.tcont
  426e20:	ldr	x8, [sp, #24]
  426e24:	ldr	x9, [x8, #72]
  426e28:	add	x9, x9, #0x1
  426e2c:	str	x9, [x8, #72]
  426e30:	ldr	x8, [sp, #24]
  426e34:	ldr	x8, [x8, #8]
  426e38:	ldr	x9, [sp, #24]
  426e3c:	ldr	x9, [x9, #72]
  426e40:	add	x9, x9, #0x0
  426e44:	add	x8, x8, x9
  426e48:	ldrb	w10, [x8]
  426e4c:	strb	w10, [sp, #14]
  426e50:	ldrb	w10, [sp, #14]
  426e54:	ldr	x8, [sp, #32]
  426e58:	strb	w10, [x8]
  426e5c:	ldr	x8, [sp, #32]
  426e60:	ldr	w10, [x8, #8]
  426e64:	and	w10, w10, #0xffffff00
  426e68:	mov	w11, #0x1                   	// #1
  426e6c:	orr	w10, w10, #0x1
  426e70:	str	w10, [x8, #8]
  426e74:	str	w11, [sp, #44]
  426e78:	b	427048 <_obstack_memory_used@@Base+0x8eac>
  426e7c:	ldrb	w8, [sp, #15]
  426e80:	cmp	w8, #0x5b
  426e84:	b.ne	426fa4 <_obstack_memory_used@@Base+0x8e08>  // b.any
  426e88:	ldr	x8, [sp, #24]
  426e8c:	ldr	x8, [x8, #72]
  426e90:	add	x8, x8, #0x1
  426e94:	ldr	x9, [sp, #24]
  426e98:	ldr	x9, [x9, #88]
  426e9c:	cmp	x8, x9
  426ea0:	b.ge	426ec8 <_obstack_memory_used@@Base+0x8d2c>  // b.tcont
  426ea4:	ldr	x8, [sp, #24]
  426ea8:	ldr	x8, [x8, #8]
  426eac:	ldr	x9, [sp, #24]
  426eb0:	ldr	x9, [x9, #72]
  426eb4:	add	x9, x9, #0x1
  426eb8:	add	x8, x8, x9
  426ebc:	ldrb	w10, [x8]
  426ec0:	strb	w10, [sp, #13]
  426ec4:	b	426ed0 <_obstack_memory_used@@Base+0x8d34>
  426ec8:	mov	w8, #0x0                   	// #0
  426ecc:	strb	w8, [sp, #13]
  426ed0:	ldrb	w8, [sp, #13]
  426ed4:	ldr	x9, [sp, #32]
  426ed8:	strb	w8, [x9]
  426edc:	mov	w8, #0x2                   	// #2
  426ee0:	str	w8, [sp, #8]
  426ee4:	ldrb	w8, [sp, #13]
  426ee8:	cmp	w8, #0x2e
  426eec:	str	w8, [sp, #4]
  426ef0:	b.eq	426f18 <_obstack_memory_used@@Base+0x8d7c>  // b.none
  426ef4:	b	426ef8 <_obstack_memory_used@@Base+0x8d5c>
  426ef8:	ldr	w8, [sp, #4]
  426efc:	cmp	w8, #0x3a
  426f00:	b.eq	426f4c <_obstack_memory_used@@Base+0x8db0>  // b.none
  426f04:	b	426f08 <_obstack_memory_used@@Base+0x8d6c>
  426f08:	ldr	w8, [sp, #4]
  426f0c:	cmp	w8, #0x3d
  426f10:	b.eq	426f34 <_obstack_memory_used@@Base+0x8d98>  // b.none
  426f14:	b	426f70 <_obstack_memory_used@@Base+0x8dd4>
  426f18:	ldr	x8, [sp, #32]
  426f1c:	ldr	w9, [x8, #8]
  426f20:	and	w9, w9, #0xffffff00
  426f24:	mov	w10, #0x1a                  	// #26
  426f28:	orr	w9, w9, w10
  426f2c:	str	w9, [x8, #8]
  426f30:	b	426f98 <_obstack_memory_used@@Base+0x8dfc>
  426f34:	ldr	x8, [sp, #32]
  426f38:	ldr	w9, [x8, #8]
  426f3c:	and	w9, w9, #0xffffff00
  426f40:	orr	w9, w9, #0x1c
  426f44:	str	w9, [x8, #8]
  426f48:	b	426f98 <_obstack_memory_used@@Base+0x8dfc>
  426f4c:	ldr	x8, [sp, #16]
  426f50:	and	x8, x8, #0x4
  426f54:	cbz	x8, 426f70 <_obstack_memory_used@@Base+0x8dd4>
  426f58:	ldr	x8, [sp, #32]
  426f5c:	ldr	w9, [x8, #8]
  426f60:	and	w9, w9, #0xffffff00
  426f64:	orr	w9, w9, #0x1e
  426f68:	str	w9, [x8, #8]
  426f6c:	b	426f98 <_obstack_memory_used@@Base+0x8dfc>
  426f70:	ldr	x8, [sp, #32]
  426f74:	ldr	w9, [x8, #8]
  426f78:	and	w9, w9, #0xffffff00
  426f7c:	mov	w10, #0x1                   	// #1
  426f80:	orr	w9, w9, #0x1
  426f84:	str	w9, [x8, #8]
  426f88:	ldrb	w9, [sp, #15]
  426f8c:	ldr	x8, [sp, #32]
  426f90:	strb	w9, [x8]
  426f94:	str	w10, [sp, #8]
  426f98:	ldr	w8, [sp, #8]
  426f9c:	str	w8, [sp, #44]
  426fa0:	b	427048 <_obstack_memory_used@@Base+0x8eac>
  426fa4:	ldrb	w8, [sp, #15]
  426fa8:	cmp	w8, #0x2d
  426fac:	str	w8, [sp]
  426fb0:	b.eq	426fd8 <_obstack_memory_used@@Base+0x8e3c>  // b.none
  426fb4:	b	426fb8 <_obstack_memory_used@@Base+0x8e1c>
  426fb8:	ldr	w8, [sp]
  426fbc:	cmp	w8, #0x5d
  426fc0:	b.eq	426ff4 <_obstack_memory_used@@Base+0x8e58>  // b.none
  426fc4:	b	426fc8 <_obstack_memory_used@@Base+0x8e2c>
  426fc8:	ldr	w8, [sp]
  426fcc:	cmp	w8, #0x5e
  426fd0:	b.eq	427010 <_obstack_memory_used@@Base+0x8e74>  // b.none
  426fd4:	b	42702c <_obstack_memory_used@@Base+0x8e90>
  426fd8:	ldr	x8, [sp, #32]
  426fdc:	ldr	w9, [x8, #8]
  426fe0:	and	w9, w9, #0xffffff00
  426fe4:	mov	w10, #0x16                  	// #22
  426fe8:	orr	w9, w9, w10
  426fec:	str	w9, [x8, #8]
  426ff0:	b	427040 <_obstack_memory_used@@Base+0x8ea4>
  426ff4:	ldr	x8, [sp, #32]
  426ff8:	ldr	w9, [x8, #8]
  426ffc:	and	w9, w9, #0xffffff00
  427000:	mov	w10, #0x15                  	// #21
  427004:	orr	w9, w9, w10
  427008:	str	w9, [x8, #8]
  42700c:	b	427040 <_obstack_memory_used@@Base+0x8ea4>
  427010:	ldr	x8, [sp, #32]
  427014:	ldr	w9, [x8, #8]
  427018:	and	w9, w9, #0xffffff00
  42701c:	mov	w10, #0x19                  	// #25
  427020:	orr	w9, w9, w10
  427024:	str	w9, [x8, #8]
  427028:	b	427040 <_obstack_memory_used@@Base+0x8ea4>
  42702c:	ldr	x8, [sp, #32]
  427030:	ldr	w9, [x8, #8]
  427034:	and	w9, w9, #0xffffff00
  427038:	orr	w9, w9, #0x1
  42703c:	str	w9, [x8, #8]
  427040:	mov	w8, #0x1                   	// #1
  427044:	str	w8, [sp, #44]
  427048:	ldr	w0, [sp, #44]
  42704c:	add	sp, sp, #0x30
  427050:	ret
  427054:	sub	sp, sp, #0x10
  427058:	mov	x8, #0x40                  	// #64
  42705c:	mov	x9, #0x1                   	// #1
  427060:	str	x0, [sp, #8]
  427064:	str	x1, [sp]
  427068:	ldr	x10, [sp]
  42706c:	sdiv	x11, x10, x8
  427070:	mul	x11, x11, x8
  427074:	subs	x10, x10, x11
  427078:	lsl	x9, x9, x10
  42707c:	ldr	x10, [sp, #8]
  427080:	ldr	x11, [sp]
  427084:	sdiv	x8, x11, x8
  427088:	mov	x11, #0x8                   	// #8
  42708c:	mul	x8, x11, x8
  427090:	add	x8, x10, x8
  427094:	ldr	x10, [x8]
  427098:	orr	x9, x10, x9
  42709c:	str	x9, [x8]
  4270a0:	add	sp, sp, #0x10
  4270a4:	ret
  4270a8:	sub	sp, sp, #0x60
  4270ac:	stp	x29, x30, [sp, #80]
  4270b0:	add	x29, sp, #0x50
  4270b4:	mov	w8, #0x1                   	// #1
  4270b8:	stur	x0, [x29, #-16]
  4270bc:	stur	x1, [x29, #-24]
  4270c0:	stur	x2, [x29, #-32]
  4270c4:	stur	w3, [x29, #-36]
  4270c8:	str	x4, [sp, #32]
  4270cc:	str	x5, [sp, #24]
  4270d0:	and	w8, w6, w8
  4270d4:	strb	w8, [sp, #23]
  4270d8:	ldur	x0, [x29, #-24]
  4270dc:	ldur	x9, [x29, #-24]
  4270e0:	ldr	x1, [x9, #72]
  4270e4:	bl	428300 <_obstack_memory_used@@Base+0xa164>
  4270e8:	str	w0, [sp, #16]
  4270ec:	ldr	w8, [sp, #16]
  4270f0:	cmp	w8, #0x1
  4270f4:	b.le	427138 <_obstack_memory_used@@Base+0x8f9c>
  4270f8:	ldur	x8, [x29, #-16]
  4270fc:	mov	w9, #0x1                   	// #1
  427100:	str	w9, [x8]
  427104:	ldur	x0, [x29, #-24]
  427108:	ldur	x8, [x29, #-24]
  42710c:	ldr	x1, [x8, #72]
  427110:	bl	4245ec <_obstack_memory_used@@Base+0x6450>
  427114:	ldur	x8, [x29, #-16]
  427118:	str	w0, [x8, #8]
  42711c:	ldrsw	x8, [sp, #16]
  427120:	ldur	x10, [x29, #-24]
  427124:	ldr	x11, [x10, #72]
  427128:	add	x8, x11, x8
  42712c:	str	x8, [x10, #72]
  427130:	stur	wzr, [x29, #-4]
  427134:	b	427214 <_obstack_memory_used@@Base+0x9078>
  427138:	ldursw	x8, [x29, #-36]
  42713c:	ldur	x9, [x29, #-24]
  427140:	ldr	x10, [x9, #72]
  427144:	add	x8, x10, x8
  427148:	str	x8, [x9, #72]
  42714c:	ldur	x8, [x29, #-32]
  427150:	ldr	w11, [x8, #8]
  427154:	and	w11, w11, #0xff
  427158:	cmp	w11, #0x1a
  42715c:	b.eq	427188 <_obstack_memory_used@@Base+0x8fec>  // b.none
  427160:	ldur	x8, [x29, #-32]
  427164:	ldr	w9, [x8, #8]
  427168:	and	w9, w9, #0xff
  42716c:	cmp	w9, #0x1e
  427170:	b.eq	427188 <_obstack_memory_used@@Base+0x8fec>  // b.none
  427174:	ldur	x8, [x29, #-32]
  427178:	ldr	w9, [x8, #8]
  42717c:	and	w9, w9, #0xff
  427180:	cmp	w9, #0x1c
  427184:	b.ne	4271a0 <_obstack_memory_used@@Base+0x9004>  // b.any
  427188:	ldur	x0, [x29, #-16]
  42718c:	ldur	x1, [x29, #-24]
  427190:	ldur	x2, [x29, #-32]
  427194:	bl	428398 <_obstack_memory_used@@Base+0xa1fc>
  427198:	stur	w0, [x29, #-4]
  42719c:	b	427214 <_obstack_memory_used@@Base+0x9078>
  4271a0:	ldur	x8, [x29, #-32]
  4271a4:	ldr	w9, [x8, #8]
  4271a8:	and	w9, w9, #0xff
  4271ac:	cmp	w9, #0x16
  4271b0:	cset	w9, eq  // eq = none
  4271b4:	and	w9, w9, #0x1
  4271b8:	mov	w0, w9
  4271bc:	sxtw	x8, w0
  4271c0:	cbz	x8, 4271f8 <_obstack_memory_used@@Base+0x905c>
  4271c4:	ldrb	w8, [sp, #23]
  4271c8:	tbnz	w8, #0, 4271f8 <_obstack_memory_used@@Base+0x905c>
  4271cc:	ldur	x1, [x29, #-24]
  4271d0:	ldr	x2, [sp, #24]
  4271d4:	mov	x0, sp
  4271d8:	bl	426d14 <_obstack_memory_used@@Base+0x8b78>
  4271dc:	ldr	w8, [sp, #8]
  4271e0:	and	w8, w8, #0xff
  4271e4:	cmp	w8, #0x15
  4271e8:	b.eq	4271f8 <_obstack_memory_used@@Base+0x905c>  // b.none
  4271ec:	mov	w8, #0xb                   	// #11
  4271f0:	stur	w8, [x29, #-4]
  4271f4:	b	427214 <_obstack_memory_used@@Base+0x9078>
  4271f8:	ldur	x8, [x29, #-16]
  4271fc:	str	wzr, [x8]
  427200:	ldur	x8, [x29, #-32]
  427204:	ldrb	w9, [x8]
  427208:	ldur	x8, [x29, #-16]
  42720c:	strb	w9, [x8, #8]
  427210:	stur	wzr, [x29, #-4]
  427214:	ldur	w0, [x29, #-4]
  427218:	ldp	x29, x30, [sp, #80]
  42721c:	add	sp, sp, #0x60
  427220:	ret
  427224:	sub	sp, sp, #0xb0
  427228:	stp	x29, x30, [sp, #160]
  42722c:	add	x29, sp, #0xa0
  427230:	stur	x0, [x29, #-16]
  427234:	stur	x1, [x29, #-24]
  427238:	stur	x2, [x29, #-32]
  42723c:	stur	x3, [x29, #-40]
  427240:	stur	x4, [x29, #-48]
  427244:	stur	x5, [x29, #-56]
  427248:	ldur	x8, [x29, #-48]
  42724c:	ldr	w9, [x8]
  427250:	mov	w10, #0x1                   	// #1
  427254:	cmp	w9, #0x2
  427258:	str	w10, [sp, #52]
  42725c:	b.eq	4272a4 <_obstack_memory_used@@Base+0x9108>  // b.none
  427260:	ldur	x8, [x29, #-48]
  427264:	ldr	w9, [x8]
  427268:	mov	w10, #0x1                   	// #1
  42726c:	cmp	w9, #0x4
  427270:	str	w10, [sp, #52]
  427274:	b.eq	4272a4 <_obstack_memory_used@@Base+0x9108>  // b.none
  427278:	ldur	x8, [x29, #-56]
  42727c:	ldr	w9, [x8]
  427280:	mov	w10, #0x1                   	// #1
  427284:	cmp	w9, #0x2
  427288:	str	w10, [sp, #52]
  42728c:	b.eq	4272a4 <_obstack_memory_used@@Base+0x9108>  // b.none
  427290:	ldur	x8, [x29, #-56]
  427294:	ldr	w9, [x8]
  427298:	cmp	w9, #0x4
  42729c:	cset	w9, eq  // eq = none
  4272a0:	str	w9, [sp, #52]
  4272a4:	ldr	w8, [sp, #52]
  4272a8:	and	w8, w8, #0x1
  4272ac:	mov	w0, w8
  4272b0:	sxtw	x9, w0
  4272b4:	cbz	x9, 4272c4 <_obstack_memory_used@@Base+0x9128>
  4272b8:	mov	w8, #0xb                   	// #11
  4272bc:	stur	w8, [x29, #-4]
  4272c0:	b	427680 <_obstack_memory_used@@Base+0x94e4>
  4272c4:	ldur	x8, [x29, #-48]
  4272c8:	ldr	w9, [x8]
  4272cc:	cmp	w9, #0x3
  4272d0:	b.ne	4272f0 <_obstack_memory_used@@Base+0x9154>  // b.any
  4272d4:	ldur	x8, [x29, #-48]
  4272d8:	ldr	x0, [x8, #8]
  4272dc:	bl	4026f0 <strlen@plt>
  4272e0:	mov	w9, #0x1                   	// #1
  4272e4:	cmp	x0, #0x1
  4272e8:	str	w9, [sp, #48]
  4272ec:	b.hi	427328 <_obstack_memory_used@@Base+0x918c>  // b.pmore
  4272f0:	ldur	x8, [x29, #-56]
  4272f4:	ldr	w9, [x8]
  4272f8:	mov	w10, #0x0                   	// #0
  4272fc:	cmp	w9, #0x3
  427300:	str	w10, [sp, #44]
  427304:	b.ne	427320 <_obstack_memory_used@@Base+0x9184>  // b.any
  427308:	ldur	x8, [x29, #-56]
  42730c:	ldr	x0, [x8, #8]
  427310:	bl	4026f0 <strlen@plt>
  427314:	cmp	x0, #0x1
  427318:	cset	w9, hi  // hi = pmore
  42731c:	str	w9, [sp, #44]
  427320:	ldr	w8, [sp, #44]
  427324:	str	w8, [sp, #48]
  427328:	ldr	w8, [sp, #48]
  42732c:	and	w8, w8, #0x1
  427330:	mov	w0, w8
  427334:	sxtw	x9, w0
  427338:	cbz	x9, 427348 <_obstack_memory_used@@Base+0x91ac>
  42733c:	mov	w8, #0x3                   	// #3
  427340:	stur	w8, [x29, #-4]
  427344:	b	427680 <_obstack_memory_used@@Base+0x94e4>
  427348:	ldur	x8, [x29, #-48]
  42734c:	ldr	w9, [x8]
  427350:	cbnz	w9, 427364 <_obstack_memory_used@@Base+0x91c8>
  427354:	ldur	x8, [x29, #-48]
  427358:	ldrb	w9, [x8, #8]
  42735c:	str	w9, [sp, #40]
  427360:	b	427398 <_obstack_memory_used@@Base+0x91fc>
  427364:	ldur	x8, [x29, #-48]
  427368:	ldr	w9, [x8]
  42736c:	cmp	w9, #0x3
  427370:	b.ne	427388 <_obstack_memory_used@@Base+0x91ec>  // b.any
  427374:	ldur	x8, [x29, #-48]
  427378:	ldr	x8, [x8, #8]
  42737c:	ldrb	w9, [x8]
  427380:	str	w9, [sp, #36]
  427384:	b	427390 <_obstack_memory_used@@Base+0x91f4>
  427388:	mov	w8, wzr
  42738c:	str	w8, [sp, #36]
  427390:	ldr	w8, [sp, #36]
  427394:	str	w8, [sp, #40]
  427398:	ldr	w8, [sp, #40]
  42739c:	stur	w8, [x29, #-60]
  4273a0:	ldur	x9, [x29, #-56]
  4273a4:	ldr	w8, [x9]
  4273a8:	cbnz	w8, 4273bc <_obstack_memory_used@@Base+0x9220>
  4273ac:	ldur	x8, [x29, #-56]
  4273b0:	ldrb	w9, [x8, #8]
  4273b4:	str	w9, [sp, #32]
  4273b8:	b	4273f0 <_obstack_memory_used@@Base+0x9254>
  4273bc:	ldur	x8, [x29, #-56]
  4273c0:	ldr	w9, [x8]
  4273c4:	cmp	w9, #0x3
  4273c8:	b.ne	4273e0 <_obstack_memory_used@@Base+0x9244>  // b.any
  4273cc:	ldur	x8, [x29, #-56]
  4273d0:	ldr	x8, [x8, #8]
  4273d4:	ldrb	w9, [x8]
  4273d8:	str	w9, [sp, #28]
  4273dc:	b	4273e8 <_obstack_memory_used@@Base+0x924c>
  4273e0:	mov	w8, wzr
  4273e4:	str	w8, [sp, #28]
  4273e8:	ldr	w8, [sp, #28]
  4273ec:	str	w8, [sp, #32]
  4273f0:	ldr	w8, [sp, #32]
  4273f4:	stur	w8, [x29, #-64]
  4273f8:	ldur	x9, [x29, #-48]
  4273fc:	ldr	w8, [x9]
  427400:	cbz	w8, 427414 <_obstack_memory_used@@Base+0x9278>
  427404:	ldur	x8, [x29, #-48]
  427408:	ldr	w9, [x8]
  42740c:	cmp	w9, #0x3
  427410:	b.ne	42742c <_obstack_memory_used@@Base+0x9290>  // b.any
  427414:	ldur	w8, [x29, #-60]
  427418:	ldur	x1, [x29, #-32]
  42741c:	mov	w0, w8
  427420:	bl	42870c <_obstack_memory_used@@Base+0xa570>
  427424:	str	w0, [sp, #24]
  427428:	b	427438 <_obstack_memory_used@@Base+0x929c>
  42742c:	ldur	x8, [x29, #-48]
  427430:	ldr	w9, [x8, #8]
  427434:	str	w9, [sp, #24]
  427438:	ldr	w8, [sp, #24]
  42743c:	stur	w8, [x29, #-72]
  427440:	ldur	x9, [x29, #-56]
  427444:	ldr	w8, [x9]
  427448:	cbz	w8, 42745c <_obstack_memory_used@@Base+0x92c0>
  42744c:	ldur	x8, [x29, #-56]
  427450:	ldr	w9, [x8]
  427454:	cmp	w9, #0x3
  427458:	b.ne	427474 <_obstack_memory_used@@Base+0x92d8>  // b.any
  42745c:	ldur	w8, [x29, #-64]
  427460:	ldur	x1, [x29, #-32]
  427464:	mov	w0, w8
  427468:	bl	42870c <_obstack_memory_used@@Base+0xa570>
  42746c:	str	w0, [sp, #20]
  427470:	b	427480 <_obstack_memory_used@@Base+0x92e4>
  427474:	ldur	x8, [x29, #-56]
  427478:	ldr	w9, [x8, #8]
  42747c:	str	w9, [sp, #20]
  427480:	ldr	w8, [sp, #20]
  427484:	stur	w8, [x29, #-76]
  427488:	ldur	w8, [x29, #-72]
  42748c:	mov	w9, #0xffffffff            	// #-1
  427490:	cmp	w8, w9
  427494:	b.eq	4274a8 <_obstack_memory_used@@Base+0x930c>  // b.none
  427498:	ldur	w8, [x29, #-76]
  42749c:	mov	w9, #0xffffffff            	// #-1
  4274a0:	cmp	w8, w9
  4274a4:	b.ne	4274b4 <_obstack_memory_used@@Base+0x9318>  // b.any
  4274a8:	mov	w8, #0x3                   	// #3
  4274ac:	stur	w8, [x29, #-4]
  4274b0:	b	427680 <_obstack_memory_used@@Base+0x94e4>
  4274b4:	ldur	x8, [x29, #-16]
  4274b8:	and	x8, x8, #0x10000
  4274bc:	mov	w9, #0x0                   	// #0
  4274c0:	str	w9, [sp, #16]
  4274c4:	cbz	x8, 4274dc <_obstack_memory_used@@Base+0x9340>
  4274c8:	ldur	w8, [x29, #-72]
  4274cc:	ldur	w9, [x29, #-76]
  4274d0:	cmp	w8, w9
  4274d4:	cset	w8, hi  // hi = pmore
  4274d8:	str	w8, [sp, #16]
  4274dc:	ldr	w8, [sp, #16]
  4274e0:	and	w8, w8, #0x1
  4274e4:	mov	w0, w8
  4274e8:	sxtw	x9, w0
  4274ec:	cbz	x9, 4274fc <_obstack_memory_used@@Base+0x9360>
  4274f0:	mov	w8, #0xb                   	// #11
  4274f4:	stur	w8, [x29, #-4]
  4274f8:	b	427680 <_obstack_memory_used@@Base+0x94e4>
  4274fc:	ldur	x8, [x29, #-32]
  427500:	cbz	x8, 42762c <_obstack_memory_used@@Base+0x9490>
  427504:	ldur	x8, [x29, #-40]
  427508:	ldr	x8, [x8]
  42750c:	ldur	x9, [x29, #-32]
  427510:	ldr	x9, [x9, #64]
  427514:	cmp	x8, x9
  427518:	cset	w10, eq  // eq = none
  42751c:	and	w10, w10, #0x1
  427520:	mov	w0, w10
  427524:	sxtw	x8, w0
  427528:	cbz	x8, 4275f4 <_obstack_memory_used@@Base+0x9458>
  42752c:	ldur	x8, [x29, #-32]
  427530:	ldr	x8, [x8, #64]
  427534:	mov	x9, #0x2                   	// #2
  427538:	mul	x8, x9, x8
  42753c:	add	x8, x8, #0x1
  427540:	str	x8, [sp, #56]
  427544:	ldur	x8, [x29, #-32]
  427548:	ldr	x0, [x8, #8]
  42754c:	ldr	x8, [sp, #56]
  427550:	mov	x9, #0x4                   	// #4
  427554:	mul	x1, x8, x9
  427558:	str	x9, [sp, #8]
  42755c:	bl	4029c0 <realloc@plt>
  427560:	str	x0, [sp, #72]
  427564:	ldur	x8, [x29, #-32]
  427568:	ldr	x0, [x8, #16]
  42756c:	ldr	x8, [sp, #56]
  427570:	ldr	x9, [sp, #8]
  427574:	mul	x1, x8, x9
  427578:	bl	4029c0 <realloc@plt>
  42757c:	str	x0, [sp, #64]
  427580:	ldr	x8, [sp, #72]
  427584:	mov	w10, #0x1                   	// #1
  427588:	str	w10, [sp, #4]
  42758c:	cbz	x8, 4275a0 <_obstack_memory_used@@Base+0x9404>
  427590:	ldr	x8, [sp, #64]
  427594:	cmp	x8, #0x0
  427598:	cset	w9, eq  // eq = none
  42759c:	str	w9, [sp, #4]
  4275a0:	ldr	w8, [sp, #4]
  4275a4:	and	w8, w8, #0x1
  4275a8:	mov	w0, w8
  4275ac:	sxtw	x9, w0
  4275b0:	cbz	x9, 4275d0 <_obstack_memory_used@@Base+0x9434>
  4275b4:	ldr	x0, [sp, #72]
  4275b8:	bl	402b40 <free@plt>
  4275bc:	ldr	x0, [sp, #64]
  4275c0:	bl	402b40 <free@plt>
  4275c4:	mov	w8, #0xc                   	// #12
  4275c8:	stur	w8, [x29, #-4]
  4275cc:	b	427680 <_obstack_memory_used@@Base+0x94e4>
  4275d0:	ldr	x8, [sp, #72]
  4275d4:	ldur	x9, [x29, #-32]
  4275d8:	str	x8, [x9, #8]
  4275dc:	ldr	x8, [sp, #64]
  4275e0:	ldur	x9, [x29, #-32]
  4275e4:	str	x8, [x9, #16]
  4275e8:	ldr	x8, [sp, #56]
  4275ec:	ldur	x9, [x29, #-40]
  4275f0:	str	x8, [x9]
  4275f4:	ldur	w8, [x29, #-72]
  4275f8:	ldur	x9, [x29, #-32]
  4275fc:	ldr	x9, [x9, #8]
  427600:	ldur	x10, [x29, #-32]
  427604:	ldr	x10, [x10, #64]
  427608:	str	w8, [x9, x10, lsl #2]
  42760c:	ldur	w8, [x29, #-76]
  427610:	ldur	x9, [x29, #-32]
  427614:	ldr	x9, [x9, #16]
  427618:	ldur	x10, [x29, #-32]
  42761c:	ldr	x11, [x10, #64]
  427620:	add	x12, x11, #0x1
  427624:	str	x12, [x10, #64]
  427628:	str	w8, [x9, x11, lsl #2]
  42762c:	stur	wzr, [x29, #-68]
  427630:	ldur	w8, [x29, #-68]
  427634:	cmp	w8, #0x100
  427638:	b.cs	42767c <_obstack_memory_used@@Base+0x94e0>  // b.hs, b.nlast
  42763c:	ldur	w8, [x29, #-72]
  427640:	ldur	w9, [x29, #-68]
  427644:	cmp	w8, w9
  427648:	b.hi	42766c <_obstack_memory_used@@Base+0x94d0>  // b.pmore
  42764c:	ldur	w8, [x29, #-68]
  427650:	ldur	w9, [x29, #-76]
  427654:	cmp	w8, w9
  427658:	b.hi	42766c <_obstack_memory_used@@Base+0x94d0>  // b.pmore
  42765c:	ldur	x0, [x29, #-24]
  427660:	ldur	w8, [x29, #-68]
  427664:	mov	w1, w8
  427668:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  42766c:	ldur	w8, [x29, #-68]
  427670:	add	w8, w8, #0x1
  427674:	stur	w8, [x29, #-68]
  427678:	b	427630 <_obstack_memory_used@@Base+0x9494>
  42767c:	stur	wzr, [x29, #-4]
  427680:	ldur	w0, [x29, #-4]
  427684:	ldp	x29, x30, [sp, #160]
  427688:	add	sp, sp, #0xb0
  42768c:	ret
  427690:	sub	sp, sp, #0x40
  427694:	stp	x29, x30, [sp, #48]
  427698:	add	x29, sp, #0x30
  42769c:	stur	x0, [x29, #-16]
  4276a0:	str	x1, [sp, #24]
  4276a4:	str	x2, [sp, #16]
  4276a8:	str	x3, [sp, #8]
  4276ac:	ldr	x0, [sp, #8]
  4276b0:	bl	4026f0 <strlen@plt>
  4276b4:	cmp	x0, #0x1
  4276b8:	cset	w8, ne  // ne = any
  4276bc:	and	w8, w8, #0x1
  4276c0:	mov	w0, w8
  4276c4:	sxtw	x9, w0
  4276c8:	cbz	x9, 4276d8 <_obstack_memory_used@@Base+0x953c>
  4276cc:	mov	w8, #0x3                   	// #3
  4276d0:	stur	w8, [x29, #-4]
  4276d4:	b	4276f0 <_obstack_memory_used@@Base+0x9554>
  4276d8:	ldur	x0, [x29, #-16]
  4276dc:	ldr	x8, [sp, #8]
  4276e0:	ldrb	w9, [x8]
  4276e4:	mov	w1, w9
  4276e8:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  4276ec:	stur	wzr, [x29, #-4]
  4276f0:	ldur	w0, [x29, #-4]
  4276f4:	ldp	x29, x30, [sp, #48]
  4276f8:	add	sp, sp, #0x40
  4276fc:	ret
  427700:	sub	sp, sp, #0x40
  427704:	stp	x29, x30, [sp, #48]
  427708:	add	x29, sp, #0x30
  42770c:	stur	x0, [x29, #-16]
  427710:	str	x1, [sp, #24]
  427714:	str	x2, [sp, #16]
  427718:	str	x3, [sp, #8]
  42771c:	ldr	x0, [sp, #8]
  427720:	bl	4026f0 <strlen@plt>
  427724:	str	x0, [sp]
  427728:	ldr	x8, [sp]
  42772c:	cmp	x8, #0x1
  427730:	cset	w9, ne  // ne = any
  427734:	and	w9, w9, #0x1
  427738:	mov	w0, w9
  42773c:	sxtw	x8, w0
  427740:	cbz	x8, 427750 <_obstack_memory_used@@Base+0x95b4>
  427744:	mov	w8, #0x3                   	// #3
  427748:	stur	w8, [x29, #-4]
  42774c:	b	427768 <_obstack_memory_used@@Base+0x95cc>
  427750:	ldur	x0, [x29, #-16]
  427754:	ldr	x8, [sp, #8]
  427758:	ldrb	w9, [x8]
  42775c:	mov	w1, w9
  427760:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427764:	stur	wzr, [x29, #-4]
  427768:	ldur	w0, [x29, #-4]
  42776c:	ldp	x29, x30, [sp, #48]
  427770:	add	sp, sp, #0x40
  427774:	ret
  427778:	sub	sp, sp, #0x70
  42777c:	stp	x29, x30, [sp, #96]
  427780:	add	x29, sp, #0x60
  427784:	stur	x0, [x29, #-16]
  427788:	stur	x1, [x29, #-24]
  42778c:	stur	x2, [x29, #-32]
  427790:	stur	x3, [x29, #-40]
  427794:	str	x4, [sp, #48]
  427798:	str	x5, [sp, #40]
  42779c:	ldr	x8, [sp, #48]
  4277a0:	str	x8, [sp, #24]
  4277a4:	ldr	x8, [sp, #40]
  4277a8:	and	x8, x8, #0x400000
  4277ac:	cbz	x8, 4277e4 <_obstack_memory_used@@Base+0x9648>
  4277b0:	ldr	x0, [sp, #24]
  4277b4:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4277b8:	add	x1, x1, #0x2ab
  4277bc:	bl	402b10 <strcmp@plt>
  4277c0:	cbz	w0, 4277d8 <_obstack_memory_used@@Base+0x963c>
  4277c4:	ldr	x0, [sp, #24]
  4277c8:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4277cc:	add	x1, x1, #0x2b1
  4277d0:	bl	402b10 <strcmp@plt>
  4277d4:	cbnz	w0, 4277e4 <_obstack_memory_used@@Base+0x9648>
  4277d8:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4277dc:	add	x8, x8, #0x2b7
  4277e0:	str	x8, [sp, #24]
  4277e4:	ldur	x8, [x29, #-40]
  4277e8:	ldr	x8, [x8]
  4277ec:	ldur	x9, [x29, #-32]
  4277f0:	ldr	x9, [x9, #72]
  4277f4:	cmp	x8, x9
  4277f8:	cset	w10, eq  // eq = none
  4277fc:	and	w10, w10, #0x1
  427800:	mov	w0, w10
  427804:	sxtw	x8, w0
  427808:	cbz	x8, 427880 <_obstack_memory_used@@Base+0x96e4>
  42780c:	ldur	x8, [x29, #-32]
  427810:	ldr	x8, [x8, #72]
  427814:	mov	x9, #0x2                   	// #2
  427818:	mul	x8, x9, x8
  42781c:	add	x8, x8, #0x1
  427820:	str	x8, [sp, #16]
  427824:	ldur	x8, [x29, #-32]
  427828:	ldr	x0, [x8, #24]
  42782c:	ldr	x8, [sp, #16]
  427830:	mov	x9, #0x8                   	// #8
  427834:	mul	x1, x8, x9
  427838:	bl	4029c0 <realloc@plt>
  42783c:	str	x0, [sp, #8]
  427840:	ldr	x8, [sp, #8]
  427844:	cmp	x8, #0x0
  427848:	cset	w10, eq  // eq = none
  42784c:	and	w10, w10, #0x1
  427850:	mov	w0, w10
  427854:	sxtw	x8, w0
  427858:	cbz	x8, 427868 <_obstack_memory_used@@Base+0x96cc>
  42785c:	mov	w8, #0xc                   	// #12
  427860:	stur	w8, [x29, #-4]
  427864:	b	428244 <_obstack_memory_used@@Base+0xa0a8>
  427868:	ldr	x8, [sp, #8]
  42786c:	ldur	x9, [x29, #-32]
  427870:	str	x8, [x9, #24]
  427874:	ldr	x8, [sp, #16]
  427878:	ldur	x9, [x29, #-40]
  42787c:	str	x8, [x9]
  427880:	ldr	x0, [sp, #24]
  427884:	bl	402750 <wctype@plt>
  427888:	ldur	x8, [x29, #-32]
  42788c:	ldr	x8, [x8, #24]
  427890:	ldur	x9, [x29, #-32]
  427894:	ldr	x10, [x9, #72]
  427898:	add	x11, x10, #0x1
  42789c:	str	x11, [x9, #72]
  4278a0:	str	x0, [x8, x10, lsl #3]
  4278a4:	ldr	x0, [sp, #24]
  4278a8:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4278ac:	add	x1, x1, #0x32a
  4278b0:	bl	402b10 <strcmp@plt>
  4278b4:	cbnz	w0, 427970 <_obstack_memory_used@@Base+0x97d4>
  4278b8:	ldur	x8, [x29, #-16]
  4278bc:	cmp	x8, #0x0
  4278c0:	cset	w9, ne  // ne = any
  4278c4:	and	w9, w9, #0x1
  4278c8:	mov	w0, w9
  4278cc:	sxtw	x8, w0
  4278d0:	cbz	x8, 427928 <_obstack_memory_used@@Base+0x978c>
  4278d4:	str	wzr, [sp, #36]
  4278d8:	ldr	w8, [sp, #36]
  4278dc:	cmp	w8, #0x100
  4278e0:	b.ge	427924 <_obstack_memory_used@@Base+0x9788>  // b.tcont
  4278e4:	bl	402b20 <__ctype_b_loc@plt>
  4278e8:	ldr	x8, [x0]
  4278ec:	ldrsw	x9, [sp, #36]
  4278f0:	ldrh	w10, [x8, x9, lsl #1]
  4278f4:	and	w10, w10, #0x8
  4278f8:	cbz	w10, 427914 <_obstack_memory_used@@Base+0x9778>
  4278fc:	ldur	x0, [x29, #-24]
  427900:	ldur	x8, [x29, #-16]
  427904:	ldrsw	x9, [sp, #36]
  427908:	ldrb	w10, [x8, x9]
  42790c:	mov	w1, w10
  427910:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427914:	ldr	w8, [sp, #36]
  427918:	add	w8, w8, #0x1
  42791c:	str	w8, [sp, #36]
  427920:	b	4278d8 <_obstack_memory_used@@Base+0x973c>
  427924:	b	42796c <_obstack_memory_used@@Base+0x97d0>
  427928:	str	wzr, [sp, #36]
  42792c:	ldr	w8, [sp, #36]
  427930:	cmp	w8, #0x100
  427934:	b.ge	42796c <_obstack_memory_used@@Base+0x97d0>  // b.tcont
  427938:	bl	402b20 <__ctype_b_loc@plt>
  42793c:	ldr	x8, [x0]
  427940:	ldrsw	x9, [sp, #36]
  427944:	ldrh	w10, [x8, x9, lsl #1]
  427948:	and	w10, w10, #0x8
  42794c:	cbz	w10, 42795c <_obstack_memory_used@@Base+0x97c0>
  427950:	ldur	x0, [x29, #-24]
  427954:	ldrsw	x1, [sp, #36]
  427958:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  42795c:	ldr	w8, [sp, #36]
  427960:	add	w8, w8, #0x1
  427964:	str	w8, [sp, #36]
  427968:	b	42792c <_obstack_memory_used@@Base+0x9790>
  42796c:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427970:	ldr	x0, [sp, #24]
  427974:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427978:	add	x1, x1, #0x33c
  42797c:	bl	402b10 <strcmp@plt>
  427980:	cbnz	w0, 427a3c <_obstack_memory_used@@Base+0x98a0>
  427984:	ldur	x8, [x29, #-16]
  427988:	cmp	x8, #0x0
  42798c:	cset	w9, ne  // ne = any
  427990:	and	w9, w9, #0x1
  427994:	mov	w0, w9
  427998:	sxtw	x8, w0
  42799c:	cbz	x8, 4279f4 <_obstack_memory_used@@Base+0x9858>
  4279a0:	str	wzr, [sp, #36]
  4279a4:	ldr	w8, [sp, #36]
  4279a8:	cmp	w8, #0x100
  4279ac:	b.ge	4279f0 <_obstack_memory_used@@Base+0x9854>  // b.tcont
  4279b0:	bl	402b20 <__ctype_b_loc@plt>
  4279b4:	ldr	x8, [x0]
  4279b8:	ldrsw	x9, [sp, #36]
  4279bc:	ldrh	w10, [x8, x9, lsl #1]
  4279c0:	and	w10, w10, #0x2
  4279c4:	cbz	w10, 4279e0 <_obstack_memory_used@@Base+0x9844>
  4279c8:	ldur	x0, [x29, #-24]
  4279cc:	ldur	x8, [x29, #-16]
  4279d0:	ldrsw	x9, [sp, #36]
  4279d4:	ldrb	w10, [x8, x9]
  4279d8:	mov	w1, w10
  4279dc:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  4279e0:	ldr	w8, [sp, #36]
  4279e4:	add	w8, w8, #0x1
  4279e8:	str	w8, [sp, #36]
  4279ec:	b	4279a4 <_obstack_memory_used@@Base+0x9808>
  4279f0:	b	427a38 <_obstack_memory_used@@Base+0x989c>
  4279f4:	str	wzr, [sp, #36]
  4279f8:	ldr	w8, [sp, #36]
  4279fc:	cmp	w8, #0x100
  427a00:	b.ge	427a38 <_obstack_memory_used@@Base+0x989c>  // b.tcont
  427a04:	bl	402b20 <__ctype_b_loc@plt>
  427a08:	ldr	x8, [x0]
  427a0c:	ldrsw	x9, [sp, #36]
  427a10:	ldrh	w10, [x8, x9, lsl #1]
  427a14:	and	w10, w10, #0x2
  427a18:	cbz	w10, 427a28 <_obstack_memory_used@@Base+0x988c>
  427a1c:	ldur	x0, [x29, #-24]
  427a20:	ldrsw	x1, [sp, #36]
  427a24:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427a28:	ldr	w8, [sp, #36]
  427a2c:	add	w8, w8, #0x1
  427a30:	str	w8, [sp, #36]
  427a34:	b	4279f8 <_obstack_memory_used@@Base+0x985c>
  427a38:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427a3c:	ldr	x0, [sp, #24]
  427a40:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427a44:	add	x1, x1, #0x2b1
  427a48:	bl	402b10 <strcmp@plt>
  427a4c:	cbnz	w0, 427b08 <_obstack_memory_used@@Base+0x996c>
  427a50:	ldur	x8, [x29, #-16]
  427a54:	cmp	x8, #0x0
  427a58:	cset	w9, ne  // ne = any
  427a5c:	and	w9, w9, #0x1
  427a60:	mov	w0, w9
  427a64:	sxtw	x8, w0
  427a68:	cbz	x8, 427ac0 <_obstack_memory_used@@Base+0x9924>
  427a6c:	str	wzr, [sp, #36]
  427a70:	ldr	w8, [sp, #36]
  427a74:	cmp	w8, #0x100
  427a78:	b.ge	427abc <_obstack_memory_used@@Base+0x9920>  // b.tcont
  427a7c:	bl	402b20 <__ctype_b_loc@plt>
  427a80:	ldr	x8, [x0]
  427a84:	ldrsw	x9, [sp, #36]
  427a88:	ldrh	w10, [x8, x9, lsl #1]
  427a8c:	and	w10, w10, #0x200
  427a90:	cbz	w10, 427aac <_obstack_memory_used@@Base+0x9910>
  427a94:	ldur	x0, [x29, #-24]
  427a98:	ldur	x8, [x29, #-16]
  427a9c:	ldrsw	x9, [sp, #36]
  427aa0:	ldrb	w10, [x8, x9]
  427aa4:	mov	w1, w10
  427aa8:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427aac:	ldr	w8, [sp, #36]
  427ab0:	add	w8, w8, #0x1
  427ab4:	str	w8, [sp, #36]
  427ab8:	b	427a70 <_obstack_memory_used@@Base+0x98d4>
  427abc:	b	427b04 <_obstack_memory_used@@Base+0x9968>
  427ac0:	str	wzr, [sp, #36]
  427ac4:	ldr	w8, [sp, #36]
  427ac8:	cmp	w8, #0x100
  427acc:	b.ge	427b04 <_obstack_memory_used@@Base+0x9968>  // b.tcont
  427ad0:	bl	402b20 <__ctype_b_loc@plt>
  427ad4:	ldr	x8, [x0]
  427ad8:	ldrsw	x9, [sp, #36]
  427adc:	ldrh	w10, [x8, x9, lsl #1]
  427ae0:	and	w10, w10, #0x200
  427ae4:	cbz	w10, 427af4 <_obstack_memory_used@@Base+0x9958>
  427ae8:	ldur	x0, [x29, #-24]
  427aec:	ldrsw	x1, [sp, #36]
  427af0:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427af4:	ldr	w8, [sp, #36]
  427af8:	add	w8, w8, #0x1
  427afc:	str	w8, [sp, #36]
  427b00:	b	427ac4 <_obstack_memory_used@@Base+0x9928>
  427b04:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427b08:	ldr	x0, [sp, #24]
  427b0c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427b10:	add	x1, x1, #0x31e
  427b14:	bl	402b10 <strcmp@plt>
  427b18:	cbnz	w0, 427bd4 <_obstack_memory_used@@Base+0x9a38>
  427b1c:	ldur	x8, [x29, #-16]
  427b20:	cmp	x8, #0x0
  427b24:	cset	w9, ne  // ne = any
  427b28:	and	w9, w9, #0x1
  427b2c:	mov	w0, w9
  427b30:	sxtw	x8, w0
  427b34:	cbz	x8, 427b8c <_obstack_memory_used@@Base+0x99f0>
  427b38:	str	wzr, [sp, #36]
  427b3c:	ldr	w8, [sp, #36]
  427b40:	cmp	w8, #0x100
  427b44:	b.ge	427b88 <_obstack_memory_used@@Base+0x99ec>  // b.tcont
  427b48:	bl	402b20 <__ctype_b_loc@plt>
  427b4c:	ldr	x8, [x0]
  427b50:	ldrsw	x9, [sp, #36]
  427b54:	ldrh	w10, [x8, x9, lsl #1]
  427b58:	and	w10, w10, #0x2000
  427b5c:	cbz	w10, 427b78 <_obstack_memory_used@@Base+0x99dc>
  427b60:	ldur	x0, [x29, #-24]
  427b64:	ldur	x8, [x29, #-16]
  427b68:	ldrsw	x9, [sp, #36]
  427b6c:	ldrb	w10, [x8, x9]
  427b70:	mov	w1, w10
  427b74:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427b78:	ldr	w8, [sp, #36]
  427b7c:	add	w8, w8, #0x1
  427b80:	str	w8, [sp, #36]
  427b84:	b	427b3c <_obstack_memory_used@@Base+0x99a0>
  427b88:	b	427bd0 <_obstack_memory_used@@Base+0x9a34>
  427b8c:	str	wzr, [sp, #36]
  427b90:	ldr	w8, [sp, #36]
  427b94:	cmp	w8, #0x100
  427b98:	b.ge	427bd0 <_obstack_memory_used@@Base+0x9a34>  // b.tcont
  427b9c:	bl	402b20 <__ctype_b_loc@plt>
  427ba0:	ldr	x8, [x0]
  427ba4:	ldrsw	x9, [sp, #36]
  427ba8:	ldrh	w10, [x8, x9, lsl #1]
  427bac:	and	w10, w10, #0x2000
  427bb0:	cbz	w10, 427bc0 <_obstack_memory_used@@Base+0x9a24>
  427bb4:	ldur	x0, [x29, #-24]
  427bb8:	ldrsw	x1, [sp, #36]
  427bbc:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427bc0:	ldr	w8, [sp, #36]
  427bc4:	add	w8, w8, #0x1
  427bc8:	str	w8, [sp, #36]
  427bcc:	b	427b90 <_obstack_memory_used@@Base+0x99f4>
  427bd0:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427bd4:	ldr	x0, [sp, #24]
  427bd8:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427bdc:	add	x1, x1, #0x2b7
  427be0:	bl	402b10 <strcmp@plt>
  427be4:	cbnz	w0, 427ca0 <_obstack_memory_used@@Base+0x9b04>
  427be8:	ldur	x8, [x29, #-16]
  427bec:	cmp	x8, #0x0
  427bf0:	cset	w9, ne  // ne = any
  427bf4:	and	w9, w9, #0x1
  427bf8:	mov	w0, w9
  427bfc:	sxtw	x8, w0
  427c00:	cbz	x8, 427c58 <_obstack_memory_used@@Base+0x9abc>
  427c04:	str	wzr, [sp, #36]
  427c08:	ldr	w8, [sp, #36]
  427c0c:	cmp	w8, #0x100
  427c10:	b.ge	427c54 <_obstack_memory_used@@Base+0x9ab8>  // b.tcont
  427c14:	bl	402b20 <__ctype_b_loc@plt>
  427c18:	ldr	x8, [x0]
  427c1c:	ldrsw	x9, [sp, #36]
  427c20:	ldrh	w10, [x8, x9, lsl #1]
  427c24:	and	w10, w10, #0x400
  427c28:	cbz	w10, 427c44 <_obstack_memory_used@@Base+0x9aa8>
  427c2c:	ldur	x0, [x29, #-24]
  427c30:	ldur	x8, [x29, #-16]
  427c34:	ldrsw	x9, [sp, #36]
  427c38:	ldrb	w10, [x8, x9]
  427c3c:	mov	w1, w10
  427c40:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427c44:	ldr	w8, [sp, #36]
  427c48:	add	w8, w8, #0x1
  427c4c:	str	w8, [sp, #36]
  427c50:	b	427c08 <_obstack_memory_used@@Base+0x9a6c>
  427c54:	b	427c9c <_obstack_memory_used@@Base+0x9b00>
  427c58:	str	wzr, [sp, #36]
  427c5c:	ldr	w8, [sp, #36]
  427c60:	cmp	w8, #0x100
  427c64:	b.ge	427c9c <_obstack_memory_used@@Base+0x9b00>  // b.tcont
  427c68:	bl	402b20 <__ctype_b_loc@plt>
  427c6c:	ldr	x8, [x0]
  427c70:	ldrsw	x9, [sp, #36]
  427c74:	ldrh	w10, [x8, x9, lsl #1]
  427c78:	and	w10, w10, #0x400
  427c7c:	cbz	w10, 427c8c <_obstack_memory_used@@Base+0x9af0>
  427c80:	ldur	x0, [x29, #-24]
  427c84:	ldrsw	x1, [sp, #36]
  427c88:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427c8c:	ldr	w8, [sp, #36]
  427c90:	add	w8, w8, #0x1
  427c94:	str	w8, [sp, #36]
  427c98:	b	427c5c <_obstack_memory_used@@Base+0x9ac0>
  427c9c:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427ca0:	ldr	x0, [sp, #24]
  427ca4:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427ca8:	add	x1, x1, #0x318
  427cac:	bl	402b10 <strcmp@plt>
  427cb0:	cbnz	w0, 427d6c <_obstack_memory_used@@Base+0x9bd0>
  427cb4:	ldur	x8, [x29, #-16]
  427cb8:	cmp	x8, #0x0
  427cbc:	cset	w9, ne  // ne = any
  427cc0:	and	w9, w9, #0x1
  427cc4:	mov	w0, w9
  427cc8:	sxtw	x8, w0
  427ccc:	cbz	x8, 427d24 <_obstack_memory_used@@Base+0x9b88>
  427cd0:	str	wzr, [sp, #36]
  427cd4:	ldr	w8, [sp, #36]
  427cd8:	cmp	w8, #0x100
  427cdc:	b.ge	427d20 <_obstack_memory_used@@Base+0x9b84>  // b.tcont
  427ce0:	bl	402b20 <__ctype_b_loc@plt>
  427ce4:	ldr	x8, [x0]
  427ce8:	ldrsw	x9, [sp, #36]
  427cec:	ldrh	w10, [x8, x9, lsl #1]
  427cf0:	and	w10, w10, #0x800
  427cf4:	cbz	w10, 427d10 <_obstack_memory_used@@Base+0x9b74>
  427cf8:	ldur	x0, [x29, #-24]
  427cfc:	ldur	x8, [x29, #-16]
  427d00:	ldrsw	x9, [sp, #36]
  427d04:	ldrb	w10, [x8, x9]
  427d08:	mov	w1, w10
  427d0c:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427d10:	ldr	w8, [sp, #36]
  427d14:	add	w8, w8, #0x1
  427d18:	str	w8, [sp, #36]
  427d1c:	b	427cd4 <_obstack_memory_used@@Base+0x9b38>
  427d20:	b	427d68 <_obstack_memory_used@@Base+0x9bcc>
  427d24:	str	wzr, [sp, #36]
  427d28:	ldr	w8, [sp, #36]
  427d2c:	cmp	w8, #0x100
  427d30:	b.ge	427d68 <_obstack_memory_used@@Base+0x9bcc>  // b.tcont
  427d34:	bl	402b20 <__ctype_b_loc@plt>
  427d38:	ldr	x8, [x0]
  427d3c:	ldrsw	x9, [sp, #36]
  427d40:	ldrh	w10, [x8, x9, lsl #1]
  427d44:	and	w10, w10, #0x800
  427d48:	cbz	w10, 427d58 <_obstack_memory_used@@Base+0x9bbc>
  427d4c:	ldur	x0, [x29, #-24]
  427d50:	ldrsw	x1, [sp, #36]
  427d54:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427d58:	ldr	w8, [sp, #36]
  427d5c:	add	w8, w8, #0x1
  427d60:	str	w8, [sp, #36]
  427d64:	b	427d28 <_obstack_memory_used@@Base+0x9b8c>
  427d68:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427d6c:	ldr	x0, [sp, #24]
  427d70:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427d74:	add	x1, x1, #0x330
  427d78:	bl	402b10 <strcmp@plt>
  427d7c:	cbnz	w0, 427e38 <_obstack_memory_used@@Base+0x9c9c>
  427d80:	ldur	x8, [x29, #-16]
  427d84:	cmp	x8, #0x0
  427d88:	cset	w9, ne  // ne = any
  427d8c:	and	w9, w9, #0x1
  427d90:	mov	w0, w9
  427d94:	sxtw	x8, w0
  427d98:	cbz	x8, 427df0 <_obstack_memory_used@@Base+0x9c54>
  427d9c:	str	wzr, [sp, #36]
  427da0:	ldr	w8, [sp, #36]
  427da4:	cmp	w8, #0x100
  427da8:	b.ge	427dec <_obstack_memory_used@@Base+0x9c50>  // b.tcont
  427dac:	bl	402b20 <__ctype_b_loc@plt>
  427db0:	ldr	x8, [x0]
  427db4:	ldrsw	x9, [sp, #36]
  427db8:	ldrh	w10, [x8, x9, lsl #1]
  427dbc:	and	w10, w10, #0x4000
  427dc0:	cbz	w10, 427ddc <_obstack_memory_used@@Base+0x9c40>
  427dc4:	ldur	x0, [x29, #-24]
  427dc8:	ldur	x8, [x29, #-16]
  427dcc:	ldrsw	x9, [sp, #36]
  427dd0:	ldrb	w10, [x8, x9]
  427dd4:	mov	w1, w10
  427dd8:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427ddc:	ldr	w8, [sp, #36]
  427de0:	add	w8, w8, #0x1
  427de4:	str	w8, [sp, #36]
  427de8:	b	427da0 <_obstack_memory_used@@Base+0x9c04>
  427dec:	b	427e34 <_obstack_memory_used@@Base+0x9c98>
  427df0:	str	wzr, [sp, #36]
  427df4:	ldr	w8, [sp, #36]
  427df8:	cmp	w8, #0x100
  427dfc:	b.ge	427e34 <_obstack_memory_used@@Base+0x9c98>  // b.tcont
  427e00:	bl	402b20 <__ctype_b_loc@plt>
  427e04:	ldr	x8, [x0]
  427e08:	ldrsw	x9, [sp, #36]
  427e0c:	ldrh	w10, [x8, x9, lsl #1]
  427e10:	and	w10, w10, #0x4000
  427e14:	cbz	w10, 427e24 <_obstack_memory_used@@Base+0x9c88>
  427e18:	ldur	x0, [x29, #-24]
  427e1c:	ldrsw	x1, [sp, #36]
  427e20:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427e24:	ldr	w8, [sp, #36]
  427e28:	add	w8, w8, #0x1
  427e2c:	str	w8, [sp, #36]
  427e30:	b	427df4 <_obstack_memory_used@@Base+0x9c58>
  427e34:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427e38:	ldr	x0, [sp, #24]
  427e3c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427e40:	add	x1, x1, #0x2ab
  427e44:	bl	402b10 <strcmp@plt>
  427e48:	cbnz	w0, 427f04 <_obstack_memory_used@@Base+0x9d68>
  427e4c:	ldur	x8, [x29, #-16]
  427e50:	cmp	x8, #0x0
  427e54:	cset	w9, ne  // ne = any
  427e58:	and	w9, w9, #0x1
  427e5c:	mov	w0, w9
  427e60:	sxtw	x8, w0
  427e64:	cbz	x8, 427ebc <_obstack_memory_used@@Base+0x9d20>
  427e68:	str	wzr, [sp, #36]
  427e6c:	ldr	w8, [sp, #36]
  427e70:	cmp	w8, #0x100
  427e74:	b.ge	427eb8 <_obstack_memory_used@@Base+0x9d1c>  // b.tcont
  427e78:	bl	402b20 <__ctype_b_loc@plt>
  427e7c:	ldr	x8, [x0]
  427e80:	ldrsw	x9, [sp, #36]
  427e84:	ldrh	w10, [x8, x9, lsl #1]
  427e88:	and	w10, w10, #0x100
  427e8c:	cbz	w10, 427ea8 <_obstack_memory_used@@Base+0x9d0c>
  427e90:	ldur	x0, [x29, #-24]
  427e94:	ldur	x8, [x29, #-16]
  427e98:	ldrsw	x9, [sp, #36]
  427e9c:	ldrb	w10, [x8, x9]
  427ea0:	mov	w1, w10
  427ea4:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427ea8:	ldr	w8, [sp, #36]
  427eac:	add	w8, w8, #0x1
  427eb0:	str	w8, [sp, #36]
  427eb4:	b	427e6c <_obstack_memory_used@@Base+0x9cd0>
  427eb8:	b	427f00 <_obstack_memory_used@@Base+0x9d64>
  427ebc:	str	wzr, [sp, #36]
  427ec0:	ldr	w8, [sp, #36]
  427ec4:	cmp	w8, #0x100
  427ec8:	b.ge	427f00 <_obstack_memory_used@@Base+0x9d64>  // b.tcont
  427ecc:	bl	402b20 <__ctype_b_loc@plt>
  427ed0:	ldr	x8, [x0]
  427ed4:	ldrsw	x9, [sp, #36]
  427ed8:	ldrh	w10, [x8, x9, lsl #1]
  427edc:	and	w10, w10, #0x100
  427ee0:	cbz	w10, 427ef0 <_obstack_memory_used@@Base+0x9d54>
  427ee4:	ldur	x0, [x29, #-24]
  427ee8:	ldrsw	x1, [sp, #36]
  427eec:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427ef0:	ldr	w8, [sp, #36]
  427ef4:	add	w8, w8, #0x1
  427ef8:	str	w8, [sp, #36]
  427efc:	b	427ec0 <_obstack_memory_used@@Base+0x9d24>
  427f00:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427f04:	ldr	x0, [sp, #24]
  427f08:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427f0c:	add	x1, x1, #0x342
  427f10:	bl	402b10 <strcmp@plt>
  427f14:	cbnz	w0, 427fd0 <_obstack_memory_used@@Base+0x9e34>
  427f18:	ldur	x8, [x29, #-16]
  427f1c:	cmp	x8, #0x0
  427f20:	cset	w9, ne  // ne = any
  427f24:	and	w9, w9, #0x1
  427f28:	mov	w0, w9
  427f2c:	sxtw	x8, w0
  427f30:	cbz	x8, 427f88 <_obstack_memory_used@@Base+0x9dec>
  427f34:	str	wzr, [sp, #36]
  427f38:	ldr	w8, [sp, #36]
  427f3c:	cmp	w8, #0x100
  427f40:	b.ge	427f84 <_obstack_memory_used@@Base+0x9de8>  // b.tcont
  427f44:	bl	402b20 <__ctype_b_loc@plt>
  427f48:	ldr	x8, [x0]
  427f4c:	ldrsw	x9, [sp, #36]
  427f50:	ldrh	w10, [x8, x9, lsl #1]
  427f54:	and	w10, w10, #0x1
  427f58:	cbz	w10, 427f74 <_obstack_memory_used@@Base+0x9dd8>
  427f5c:	ldur	x0, [x29, #-24]
  427f60:	ldur	x8, [x29, #-16]
  427f64:	ldrsw	x9, [sp, #36]
  427f68:	ldrb	w10, [x8, x9]
  427f6c:	mov	w1, w10
  427f70:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427f74:	ldr	w8, [sp, #36]
  427f78:	add	w8, w8, #0x1
  427f7c:	str	w8, [sp, #36]
  427f80:	b	427f38 <_obstack_memory_used@@Base+0x9d9c>
  427f84:	b	427fcc <_obstack_memory_used@@Base+0x9e30>
  427f88:	str	wzr, [sp, #36]
  427f8c:	ldr	w8, [sp, #36]
  427f90:	cmp	w8, #0x100
  427f94:	b.ge	427fcc <_obstack_memory_used@@Base+0x9e30>  // b.tcont
  427f98:	bl	402b20 <__ctype_b_loc@plt>
  427f9c:	ldr	x8, [x0]
  427fa0:	ldrsw	x9, [sp, #36]
  427fa4:	ldrh	w10, [x8, x9, lsl #1]
  427fa8:	and	w10, w10, #0x1
  427fac:	cbz	w10, 427fbc <_obstack_memory_used@@Base+0x9e20>
  427fb0:	ldur	x0, [x29, #-24]
  427fb4:	ldrsw	x1, [sp, #36]
  427fb8:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  427fbc:	ldr	w8, [sp, #36]
  427fc0:	add	w8, w8, #0x1
  427fc4:	str	w8, [sp, #36]
  427fc8:	b	427f8c <_obstack_memory_used@@Base+0x9df0>
  427fcc:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  427fd0:	ldr	x0, [sp, #24]
  427fd4:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  427fd8:	add	x1, x1, #0x336
  427fdc:	bl	402b10 <strcmp@plt>
  427fe0:	cbnz	w0, 42809c <_obstack_memory_used@@Base+0x9f00>
  427fe4:	ldur	x8, [x29, #-16]
  427fe8:	cmp	x8, #0x0
  427fec:	cset	w9, ne  // ne = any
  427ff0:	and	w9, w9, #0x1
  427ff4:	mov	w0, w9
  427ff8:	sxtw	x8, w0
  427ffc:	cbz	x8, 428054 <_obstack_memory_used@@Base+0x9eb8>
  428000:	str	wzr, [sp, #36]
  428004:	ldr	w8, [sp, #36]
  428008:	cmp	w8, #0x100
  42800c:	b.ge	428050 <_obstack_memory_used@@Base+0x9eb4>  // b.tcont
  428010:	bl	402b20 <__ctype_b_loc@plt>
  428014:	ldr	x8, [x0]
  428018:	ldrsw	x9, [sp, #36]
  42801c:	ldrh	w10, [x8, x9, lsl #1]
  428020:	and	w10, w10, #0x8000
  428024:	cbz	w10, 428040 <_obstack_memory_used@@Base+0x9ea4>
  428028:	ldur	x0, [x29, #-24]
  42802c:	ldur	x8, [x29, #-16]
  428030:	ldrsw	x9, [sp, #36]
  428034:	ldrb	w10, [x8, x9]
  428038:	mov	w1, w10
  42803c:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  428040:	ldr	w8, [sp, #36]
  428044:	add	w8, w8, #0x1
  428048:	str	w8, [sp, #36]
  42804c:	b	428004 <_obstack_memory_used@@Base+0x9e68>
  428050:	b	428098 <_obstack_memory_used@@Base+0x9efc>
  428054:	str	wzr, [sp, #36]
  428058:	ldr	w8, [sp, #36]
  42805c:	cmp	w8, #0x100
  428060:	b.ge	428098 <_obstack_memory_used@@Base+0x9efc>  // b.tcont
  428064:	bl	402b20 <__ctype_b_loc@plt>
  428068:	ldr	x8, [x0]
  42806c:	ldrsw	x9, [sp, #36]
  428070:	ldrh	w10, [x8, x9, lsl #1]
  428074:	and	w10, w10, #0x8000
  428078:	cbz	w10, 428088 <_obstack_memory_used@@Base+0x9eec>
  42807c:	ldur	x0, [x29, #-24]
  428080:	ldrsw	x1, [sp, #36]
  428084:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  428088:	ldr	w8, [sp, #36]
  42808c:	add	w8, w8, #0x1
  428090:	str	w8, [sp, #36]
  428094:	b	428058 <_obstack_memory_used@@Base+0x9ebc>
  428098:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  42809c:	ldr	x0, [sp, #24]
  4280a0:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  4280a4:	add	x1, x1, #0x324
  4280a8:	bl	402b10 <strcmp@plt>
  4280ac:	cbnz	w0, 428168 <_obstack_memory_used@@Base+0x9fcc>
  4280b0:	ldur	x8, [x29, #-16]
  4280b4:	cmp	x8, #0x0
  4280b8:	cset	w9, ne  // ne = any
  4280bc:	and	w9, w9, #0x1
  4280c0:	mov	w0, w9
  4280c4:	sxtw	x8, w0
  4280c8:	cbz	x8, 428120 <_obstack_memory_used@@Base+0x9f84>
  4280cc:	str	wzr, [sp, #36]
  4280d0:	ldr	w8, [sp, #36]
  4280d4:	cmp	w8, #0x100
  4280d8:	b.ge	42811c <_obstack_memory_used@@Base+0x9f80>  // b.tcont
  4280dc:	bl	402b20 <__ctype_b_loc@plt>
  4280e0:	ldr	x8, [x0]
  4280e4:	ldrsw	x9, [sp, #36]
  4280e8:	ldrh	w10, [x8, x9, lsl #1]
  4280ec:	and	w10, w10, #0x4
  4280f0:	cbz	w10, 42810c <_obstack_memory_used@@Base+0x9f70>
  4280f4:	ldur	x0, [x29, #-24]
  4280f8:	ldur	x8, [x29, #-16]
  4280fc:	ldrsw	x9, [sp, #36]
  428100:	ldrb	w10, [x8, x9]
  428104:	mov	w1, w10
  428108:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  42810c:	ldr	w8, [sp, #36]
  428110:	add	w8, w8, #0x1
  428114:	str	w8, [sp, #36]
  428118:	b	4280d0 <_obstack_memory_used@@Base+0x9f34>
  42811c:	b	428164 <_obstack_memory_used@@Base+0x9fc8>
  428120:	str	wzr, [sp, #36]
  428124:	ldr	w8, [sp, #36]
  428128:	cmp	w8, #0x100
  42812c:	b.ge	428164 <_obstack_memory_used@@Base+0x9fc8>  // b.tcont
  428130:	bl	402b20 <__ctype_b_loc@plt>
  428134:	ldr	x8, [x0]
  428138:	ldrsw	x9, [sp, #36]
  42813c:	ldrh	w10, [x8, x9, lsl #1]
  428140:	and	w10, w10, #0x4
  428144:	cbz	w10, 428154 <_obstack_memory_used@@Base+0x9fb8>
  428148:	ldur	x0, [x29, #-24]
  42814c:	ldrsw	x1, [sp, #36]
  428150:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  428154:	ldr	w8, [sp, #36]
  428158:	add	w8, w8, #0x1
  42815c:	str	w8, [sp, #36]
  428160:	b	428124 <_obstack_memory_used@@Base+0x9f88>
  428164:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  428168:	ldr	x0, [sp, #24]
  42816c:	adrp	x1, 439000 <_obstack_memory_used@@Base+0x1ae64>
  428170:	add	x1, x1, #0x317
  428174:	bl	402b10 <strcmp@plt>
  428178:	cbnz	w0, 428234 <_obstack_memory_used@@Base+0xa098>
  42817c:	ldur	x8, [x29, #-16]
  428180:	cmp	x8, #0x0
  428184:	cset	w9, ne  // ne = any
  428188:	and	w9, w9, #0x1
  42818c:	mov	w0, w9
  428190:	sxtw	x8, w0
  428194:	cbz	x8, 4281ec <_obstack_memory_used@@Base+0xa050>
  428198:	str	wzr, [sp, #36]
  42819c:	ldr	w8, [sp, #36]
  4281a0:	cmp	w8, #0x100
  4281a4:	b.ge	4281e8 <_obstack_memory_used@@Base+0xa04c>  // b.tcont
  4281a8:	bl	402b20 <__ctype_b_loc@plt>
  4281ac:	ldr	x8, [x0]
  4281b0:	ldrsw	x9, [sp, #36]
  4281b4:	ldrh	w10, [x8, x9, lsl #1]
  4281b8:	and	w10, w10, #0x1000
  4281bc:	cbz	w10, 4281d8 <_obstack_memory_used@@Base+0xa03c>
  4281c0:	ldur	x0, [x29, #-24]
  4281c4:	ldur	x8, [x29, #-16]
  4281c8:	ldrsw	x9, [sp, #36]
  4281cc:	ldrb	w10, [x8, x9]
  4281d0:	mov	w1, w10
  4281d4:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  4281d8:	ldr	w8, [sp, #36]
  4281dc:	add	w8, w8, #0x1
  4281e0:	str	w8, [sp, #36]
  4281e4:	b	42819c <_obstack_memory_used@@Base+0xa000>
  4281e8:	b	428230 <_obstack_memory_used@@Base+0xa094>
  4281ec:	str	wzr, [sp, #36]
  4281f0:	ldr	w8, [sp, #36]
  4281f4:	cmp	w8, #0x100
  4281f8:	b.ge	428230 <_obstack_memory_used@@Base+0xa094>  // b.tcont
  4281fc:	bl	402b20 <__ctype_b_loc@plt>
  428200:	ldr	x8, [x0]
  428204:	ldrsw	x9, [sp, #36]
  428208:	ldrh	w10, [x8, x9, lsl #1]
  42820c:	and	w10, w10, #0x1000
  428210:	cbz	w10, 428220 <_obstack_memory_used@@Base+0xa084>
  428214:	ldur	x0, [x29, #-24]
  428218:	ldrsw	x1, [sp, #36]
  42821c:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  428220:	ldr	w8, [sp, #36]
  428224:	add	w8, w8, #0x1
  428228:	str	w8, [sp, #36]
  42822c:	b	4281f0 <_obstack_memory_used@@Base+0xa054>
  428230:	b	428240 <_obstack_memory_used@@Base+0xa0a4>
  428234:	mov	w8, #0x4                   	// #4
  428238:	stur	w8, [x29, #-4]
  42823c:	b	428244 <_obstack_memory_used@@Base+0xa0a8>
  428240:	stur	wzr, [x29, #-4]
  428244:	ldur	w0, [x29, #-4]
  428248:	ldp	x29, x30, [sp, #96]
  42824c:	add	sp, sp, #0x70
  428250:	ret
  428254:	sub	sp, sp, #0x10
  428258:	str	x0, [sp, #8]
  42825c:	str	wzr, [sp, #4]
  428260:	ldr	w8, [sp, #4]
  428264:	cmp	w8, #0x4
  428268:	b.ge	428298 <_obstack_memory_used@@Base+0xa0fc>  // b.tcont
  42826c:	ldr	x8, [sp, #8]
  428270:	ldrsw	x9, [sp, #4]
  428274:	ldr	x8, [x8, x9, lsl #3]
  428278:	mvn	x8, x8
  42827c:	ldr	x9, [sp, #8]
  428280:	ldrsw	x10, [sp, #4]
  428284:	str	x8, [x9, x10, lsl #3]
  428288:	ldr	w8, [sp, #4]
  42828c:	add	w8, w8, #0x1
  428290:	str	w8, [sp, #4]
  428294:	b	428260 <_obstack_memory_used@@Base+0xa0c4>
  428298:	add	sp, sp, #0x10
  42829c:	ret
  4282a0:	sub	sp, sp, #0x20
  4282a4:	str	x0, [sp, #24]
  4282a8:	str	x1, [sp, #16]
  4282ac:	str	wzr, [sp, #12]
  4282b0:	ldr	w8, [sp, #12]
  4282b4:	cmp	w8, #0x4
  4282b8:	b.ge	4282f8 <_obstack_memory_used@@Base+0xa15c>  // b.tcont
  4282bc:	ldr	x8, [sp, #16]
  4282c0:	ldrsw	x9, [sp, #12]
  4282c4:	mov	x10, #0x8                   	// #8
  4282c8:	ldr	x8, [x8, x9, lsl #3]
  4282cc:	ldr	x9, [sp, #24]
  4282d0:	ldrsw	x11, [sp, #12]
  4282d4:	mul	x10, x10, x11
  4282d8:	add	x9, x9, x10
  4282dc:	ldr	x10, [x9]
  4282e0:	and	x8, x10, x8
  4282e4:	str	x8, [x9]
  4282e8:	ldr	w8, [sp, #12]
  4282ec:	add	w8, w8, #0x1
  4282f0:	str	w8, [sp, #12]
  4282f4:	b	4282b0 <_obstack_memory_used@@Base+0xa114>
  4282f8:	add	sp, sp, #0x20
  4282fc:	ret
  428300:	sub	sp, sp, #0x20
  428304:	str	x0, [sp, #16]
  428308:	str	x1, [sp, #8]
  42830c:	ldr	x8, [sp, #16]
  428310:	ldr	w9, [x8, #144]
  428314:	cmp	w9, #0x1
  428318:	b.ne	428328 <_obstack_memory_used@@Base+0xa18c>  // b.any
  42831c:	mov	w8, #0x1                   	// #1
  428320:	str	w8, [sp, #28]
  428324:	b	42838c <_obstack_memory_used@@Base+0xa1f0>
  428328:	mov	w8, #0x1                   	// #1
  42832c:	str	w8, [sp, #4]
  428330:	ldr	x8, [sp, #8]
  428334:	ldrsw	x9, [sp, #4]
  428338:	add	x8, x8, x9
  42833c:	ldr	x9, [sp, #16]
  428340:	ldr	x9, [x9, #48]
  428344:	cmp	x8, x9
  428348:	b.ge	428384 <_obstack_memory_used@@Base+0xa1e8>  // b.tcont
  42834c:	ldr	x8, [sp, #16]
  428350:	ldr	x8, [x8, #16]
  428354:	ldr	x9, [sp, #8]
  428358:	ldrsw	x10, [sp, #4]
  42835c:	add	x9, x9, x10
  428360:	ldr	w11, [x8, x9, lsl #2]
  428364:	mov	w12, #0xffffffff            	// #-1
  428368:	cmp	w11, w12
  42836c:	b.eq	428374 <_obstack_memory_used@@Base+0xa1d8>  // b.none
  428370:	b	428384 <_obstack_memory_used@@Base+0xa1e8>
  428374:	ldr	w8, [sp, #4]
  428378:	add	w8, w8, #0x1
  42837c:	str	w8, [sp, #4]
  428380:	b	428330 <_obstack_memory_used@@Base+0xa194>
  428384:	ldr	w8, [sp, #4]
  428388:	str	w8, [sp, #28]
  42838c:	ldr	w0, [sp, #28]
  428390:	add	sp, sp, #0x20
  428394:	ret
  428398:	sub	sp, sp, #0x40
  42839c:	stp	x29, x30, [sp, #48]
  4283a0:	add	x29, sp, #0x30
  4283a4:	stur	x0, [x29, #-16]
  4283a8:	str	x1, [sp, #24]
  4283ac:	str	x2, [sp, #16]
  4283b0:	ldr	x8, [sp, #16]
  4283b4:	ldrb	w9, [x8]
  4283b8:	strb	w9, [sp, #14]
  4283bc:	str	wzr, [sp, #8]
  4283c0:	ldr	x8, [sp, #24]
  4283c4:	ldr	x8, [x8, #104]
  4283c8:	ldr	x10, [sp, #24]
  4283cc:	ldr	x10, [x10, #72]
  4283d0:	cmp	x8, x10
  4283d4:	b.gt	4283e4 <_obstack_memory_used@@Base+0xa248>
  4283d8:	mov	w8, #0x7                   	// #7
  4283dc:	stur	w8, [x29, #-4]
  4283e0:	b	42855c <_obstack_memory_used@@Base+0xa3c0>
  4283e4:	ldr	w8, [sp, #8]
  4283e8:	cmp	w8, #0x20
  4283ec:	b.lt	4283fc <_obstack_memory_used@@Base+0xa260>  // b.tstop
  4283f0:	mov	w8, #0x7                   	// #7
  4283f4:	stur	w8, [x29, #-4]
  4283f8:	b	42855c <_obstack_memory_used@@Base+0xa3c0>
  4283fc:	ldr	x8, [sp, #16]
  428400:	ldr	w9, [x8, #8]
  428404:	and	w9, w9, #0xff
  428408:	cmp	w9, #0x1e
  42840c:	b.ne	428420 <_obstack_memory_used@@Base+0xa284>  // b.any
  428410:	ldr	x0, [sp, #24]
  428414:	bl	42856c <_obstack_memory_used@@Base+0xa3d0>
  428418:	strb	w0, [sp, #15]
  42841c:	b	428444 <_obstack_memory_used@@Base+0xa2a8>
  428420:	ldr	x8, [sp, #24]
  428424:	ldr	x8, [x8, #8]
  428428:	ldr	x9, [sp, #24]
  42842c:	ldr	x10, [x9, #72]
  428430:	add	x11, x10, #0x1
  428434:	str	x11, [x9, #72]
  428438:	add	x8, x8, x10
  42843c:	ldrb	w12, [x8]
  428440:	strb	w12, [sp, #15]
  428444:	ldr	x8, [sp, #24]
  428448:	ldr	x8, [x8, #104]
  42844c:	ldr	x9, [sp, #24]
  428450:	ldr	x9, [x9, #72]
  428454:	cmp	x8, x9
  428458:	b.gt	428468 <_obstack_memory_used@@Base+0xa2cc>
  42845c:	mov	w8, #0x7                   	// #7
  428460:	stur	w8, [x29, #-4]
  428464:	b	42855c <_obstack_memory_used@@Base+0xa3c0>
  428468:	ldrb	w8, [sp, #15]
  42846c:	ldrb	w9, [sp, #14]
  428470:	cmp	w8, w9
  428474:	b.ne	42849c <_obstack_memory_used@@Base+0xa300>  // b.any
  428478:	ldr	x8, [sp, #24]
  42847c:	ldr	x8, [x8, #8]
  428480:	ldr	x9, [sp, #24]
  428484:	ldr	x9, [x9, #72]
  428488:	add	x9, x9, #0x0
  42848c:	ldrb	w10, [x8, x9]
  428490:	cmp	w10, #0x5d
  428494:	b.ne	42849c <_obstack_memory_used@@Base+0xa300>  // b.any
  428498:	b	4284c4 <_obstack_memory_used@@Base+0xa328>
  42849c:	ldrb	w8, [sp, #15]
  4284a0:	ldur	x9, [x29, #-16]
  4284a4:	ldr	x9, [x9, #8]
  4284a8:	ldrsw	x10, [sp, #8]
  4284ac:	add	x9, x9, x10
  4284b0:	strb	w8, [x9]
  4284b4:	ldr	w8, [sp, #8]
  4284b8:	add	w8, w8, #0x1
  4284bc:	str	w8, [sp, #8]
  4284c0:	b	4283e4 <_obstack_memory_used@@Base+0xa248>
  4284c4:	ldr	x8, [sp, #24]
  4284c8:	ldr	x9, [x8, #72]
  4284cc:	add	x9, x9, #0x1
  4284d0:	str	x9, [x8, #72]
  4284d4:	ldur	x8, [x29, #-16]
  4284d8:	ldr	x8, [x8, #8]
  4284dc:	ldrsw	x9, [sp, #8]
  4284e0:	add	x8, x8, x9
  4284e4:	mov	w10, #0x0                   	// #0
  4284e8:	strb	w10, [x8]
  4284ec:	ldr	x8, [sp, #16]
  4284f0:	ldr	w10, [x8, #8]
  4284f4:	and	w10, w10, #0xff
  4284f8:	cmp	w10, #0x1a
  4284fc:	str	w10, [sp, #4]
  428500:	b.eq	428528 <_obstack_memory_used@@Base+0xa38c>  // b.none
  428504:	b	428508 <_obstack_memory_used@@Base+0xa36c>
  428508:	ldr	w8, [sp, #4]
  42850c:	cmp	w8, #0x1c
  428510:	b.eq	428538 <_obstack_memory_used@@Base+0xa39c>  // b.none
  428514:	b	428518 <_obstack_memory_used@@Base+0xa37c>
  428518:	ldr	w8, [sp, #4]
  42851c:	cmp	w8, #0x1e
  428520:	b.eq	428548 <_obstack_memory_used@@Base+0xa3ac>  // b.none
  428524:	b	428558 <_obstack_memory_used@@Base+0xa3bc>
  428528:	ldur	x8, [x29, #-16]
  42852c:	mov	w9, #0x3                   	// #3
  428530:	str	w9, [x8]
  428534:	b	428558 <_obstack_memory_used@@Base+0xa3bc>
  428538:	ldur	x8, [x29, #-16]
  42853c:	mov	w9, #0x2                   	// #2
  428540:	str	w9, [x8]
  428544:	b	428558 <_obstack_memory_used@@Base+0xa3bc>
  428548:	ldur	x8, [x29, #-16]
  42854c:	mov	w9, #0x4                   	// #4
  428550:	str	w9, [x8]
  428554:	b	428558 <_obstack_memory_used@@Base+0xa3bc>
  428558:	stur	wzr, [x29, #-4]
  42855c:	ldur	w0, [x29, #-4]
  428560:	ldp	x29, x30, [sp, #48]
  428564:	add	sp, sp, #0x40
  428568:	ret
  42856c:	sub	sp, sp, #0x30
  428570:	stp	x29, x30, [sp, #32]
  428574:	add	x29, sp, #0x20
  428578:	str	x0, [sp, #16]
  42857c:	ldr	x8, [sp, #16]
  428580:	ldrb	w9, [x8, #139]
  428584:	cmp	w9, #0x0
  428588:	cset	w9, ne  // ne = any
  42858c:	eor	w9, w9, #0x1
  428590:	and	w9, w9, #0x1
  428594:	mov	w0, w9
  428598:	sxtw	x8, w0
  42859c:	cbz	x8, 4285c8 <_obstack_memory_used@@Base+0xa42c>
  4285a0:	ldr	x8, [sp, #16]
  4285a4:	ldr	x8, [x8, #8]
  4285a8:	ldr	x9, [sp, #16]
  4285ac:	ldr	x10, [x9, #72]
  4285b0:	add	x11, x10, #0x1
  4285b4:	str	x11, [x9, #72]
  4285b8:	add	x8, x8, x10
  4285bc:	ldrb	w12, [x8]
  4285c0:	sturb	w12, [x29, #-1]
  4285c4:	b	4286fc <_obstack_memory_used@@Base+0xa560>
  4285c8:	ldr	x8, [sp, #16]
  4285cc:	ldrb	w9, [x8, #140]
  4285d0:	cbz	w9, 4286cc <_obstack_memory_used@@Base+0xa530>
  4285d4:	ldr	x8, [sp, #16]
  4285d8:	ldr	x8, [x8, #72]
  4285dc:	ldr	x9, [sp, #16]
  4285e0:	ldr	x9, [x9, #48]
  4285e4:	cmp	x8, x9
  4285e8:	b.eq	428634 <_obstack_memory_used@@Base+0xa498>  // b.none
  4285ec:	ldr	x8, [sp, #16]
  4285f0:	ldr	x8, [x8, #16]
  4285f4:	ldr	x9, [sp, #16]
  4285f8:	ldr	x9, [x9, #72]
  4285fc:	ldr	w10, [x8, x9, lsl #2]
  428600:	mov	w11, #0xffffffff            	// #-1
  428604:	cmp	w10, w11
  428608:	b.ne	428634 <_obstack_memory_used@@Base+0xa498>  // b.any
  42860c:	ldr	x8, [sp, #16]
  428610:	ldr	x8, [x8, #8]
  428614:	ldr	x9, [sp, #16]
  428618:	ldr	x10, [x9, #72]
  42861c:	add	x11, x10, #0x1
  428620:	str	x11, [x9, #72]
  428624:	add	x8, x8, x10
  428628:	ldrb	w12, [x8]
  42862c:	sturb	w12, [x29, #-1]
  428630:	b	4286fc <_obstack_memory_used@@Base+0xa560>
  428634:	ldr	x8, [sp, #16]
  428638:	ldr	x8, [x8, #24]
  42863c:	ldr	x9, [sp, #16]
  428640:	ldr	x9, [x9, #72]
  428644:	ldr	x8, [x8, x9, lsl #3]
  428648:	str	x8, [sp, #8]
  42864c:	ldr	x8, [sp, #16]
  428650:	ldr	x8, [x8]
  428654:	ldr	x9, [sp, #16]
  428658:	ldr	x9, [x9, #40]
  42865c:	ldr	x10, [sp, #8]
  428660:	add	x9, x9, x10
  428664:	ldrb	w11, [x8, x9]
  428668:	str	w11, [sp, #4]
  42866c:	ldr	w11, [sp, #4]
  428670:	and	w11, w11, #0xffffff80
  428674:	cbz	w11, 4286a0 <_obstack_memory_used@@Base+0xa504>
  428678:	ldr	x8, [sp, #16]
  42867c:	ldr	x8, [x8, #8]
  428680:	ldr	x9, [sp, #16]
  428684:	ldr	x10, [x9, #72]
  428688:	add	x11, x10, #0x1
  42868c:	str	x11, [x9, #72]
  428690:	add	x8, x8, x10
  428694:	ldrb	w12, [x8]
  428698:	sturb	w12, [x29, #-1]
  42869c:	b	4286fc <_obstack_memory_used@@Base+0xa560>
  4286a0:	ldr	x0, [sp, #16]
  4286a4:	ldr	x8, [sp, #16]
  4286a8:	ldr	x1, [x8, #72]
  4286ac:	bl	428300 <_obstack_memory_used@@Base+0xa164>
  4286b0:	ldr	x8, [sp, #16]
  4286b4:	ldr	x9, [x8, #72]
  4286b8:	add	x9, x9, w0, sxtw
  4286bc:	str	x9, [x8, #72]
  4286c0:	ldr	w10, [sp, #4]
  4286c4:	sturb	w10, [x29, #-1]
  4286c8:	b	4286fc <_obstack_memory_used@@Base+0xa560>
  4286cc:	ldr	x8, [sp, #16]
  4286d0:	ldr	x8, [x8]
  4286d4:	ldr	x9, [sp, #16]
  4286d8:	ldr	x9, [x9, #40]
  4286dc:	ldr	x10, [sp, #16]
  4286e0:	ldr	x11, [x10, #72]
  4286e4:	add	x12, x11, #0x1
  4286e8:	str	x12, [x10, #72]
  4286ec:	add	x9, x9, x11
  4286f0:	add	x8, x8, x9
  4286f4:	ldrb	w13, [x8]
  4286f8:	sturb	w13, [x29, #-1]
  4286fc:	ldurb	w0, [x29, #-1]
  428700:	ldp	x29, x30, [sp, #32]
  428704:	add	sp, sp, #0x30
  428708:	ret
  42870c:	sub	sp, sp, #0x30
  428710:	stp	x29, x30, [sp, #32]
  428714:	add	x29, sp, #0x20
  428718:	sturb	w0, [x29, #-1]
  42871c:	str	x1, [sp, #16]
  428720:	ldr	x8, [sp, #16]
  428724:	cbnz	x8, 428734 <_obstack_memory_used@@Base+0xa598>
  428728:	ldurb	w8, [x29, #-1]
  42872c:	str	w8, [sp, #12]
  428730:	b	428740 <_obstack_memory_used@@Base+0xa5a4>
  428734:	ldurb	w0, [x29, #-1]
  428738:	bl	402a60 <btowc@plt>
  42873c:	str	w0, [sp, #12]
  428740:	ldr	w8, [sp, #12]
  428744:	mov	w0, w8
  428748:	ldp	x29, x30, [sp, #32]
  42874c:	add	sp, sp, #0x30
  428750:	ret
  428754:	sub	sp, sp, #0x60
  428758:	stp	x29, x30, [sp, #80]
  42875c:	add	x29, sp, #0x50
  428760:	mov	x8, #0xffffffffffffffff    	// #-1
  428764:	stur	x0, [x29, #-16]
  428768:	stur	x1, [x29, #-24]
  42876c:	stur	x2, [x29, #-32]
  428770:	str	x8, [sp, #40]
  428774:	ldur	x0, [x29, #-24]
  428778:	ldur	x1, [x29, #-16]
  42877c:	ldur	x2, [x29, #-32]
  428780:	bl	423720 <_obstack_memory_used@@Base+0x5584>
  428784:	ldur	x8, [x29, #-24]
  428788:	ldrb	w9, [x8]
  42878c:	strb	w9, [sp, #39]
  428790:	ldur	x8, [x29, #-24]
  428794:	ldr	w9, [x8, #8]
  428798:	and	w9, w9, #0xff
  42879c:	cmp	w9, #0x2
  4287a0:	cset	w9, eq  // eq = none
  4287a4:	and	w9, w9, #0x1
  4287a8:	mov	w0, w9
  4287ac:	sxtw	x8, w0
  4287b0:	cbz	x8, 4287c0 <_obstack_memory_used@@Base+0xa624>
  4287b4:	mov	x8, #0xfffffffffffffffe    	// #-2
  4287b8:	stur	x8, [x29, #-8]
  4287bc:	b	4288d0 <_obstack_memory_used@@Base+0xa734>
  4287c0:	ldur	x8, [x29, #-24]
  4287c4:	ldr	w9, [x8, #8]
  4287c8:	and	w9, w9, #0xff
  4287cc:	cmp	w9, #0x18
  4287d0:	b.eq	4287e0 <_obstack_memory_used@@Base+0xa644>  // b.none
  4287d4:	ldrb	w8, [sp, #39]
  4287d8:	cmp	w8, #0x2c
  4287dc:	b.ne	4287e4 <_obstack_memory_used@@Base+0xa648>  // b.any
  4287e0:	b	4288c8 <_obstack_memory_used@@Base+0xa72c>
  4287e4:	ldur	x8, [x29, #-24]
  4287e8:	ldr	w9, [x8, #8]
  4287ec:	and	w9, w9, #0xff
  4287f0:	cmp	w9, #0x1
  4287f4:	b.ne	428824 <_obstack_memory_used@@Base+0xa688>  // b.any
  4287f8:	ldrb	w8, [sp, #39]
  4287fc:	cmp	w8, #0x30
  428800:	b.lt	428824 <_obstack_memory_used@@Base+0xa688>  // b.tstop
  428804:	ldrb	w8, [sp, #39]
  428808:	mov	w9, #0x39                  	// #57
  42880c:	cmp	w9, w8
  428810:	b.lt	428824 <_obstack_memory_used@@Base+0xa688>  // b.tstop
  428814:	ldr	x8, [sp, #40]
  428818:	mov	x9, #0xfffffffffffffffe    	// #-2
  42881c:	cmp	x8, x9
  428820:	b.ne	428830 <_obstack_memory_used@@Base+0xa694>  // b.any
  428824:	mov	x8, #0xfffffffffffffffe    	// #-2
  428828:	str	x8, [sp, #24]
  42882c:	b	4288bc <_obstack_memory_used@@Base+0xa720>
  428830:	ldr	x8, [sp, #40]
  428834:	mov	x9, #0xffffffffffffffff    	// #-1
  428838:	cmp	x8, x9
  42883c:	b.ne	428858 <_obstack_memory_used@@Base+0xa6bc>  // b.any
  428840:	ldrb	w8, [sp, #39]
  428844:	subs	w8, w8, #0x30
  428848:	mov	w0, w8
  42884c:	sxtw	x9, w0
  428850:	str	x9, [sp, #16]
  428854:	b	4288b4 <_obstack_memory_used@@Base+0xa718>
  428858:	ldr	x8, [sp, #40]
  42885c:	mov	x9, #0xa                   	// #10
  428860:	mul	x8, x8, x9
  428864:	ldrb	w10, [sp, #39]
  428868:	mov	w9, w10
  42886c:	add	x8, x8, x9
  428870:	subs	x8, x8, #0x30
  428874:	mov	x9, #0x8000                	// #32768
  428878:	cmp	x9, x8
  42887c:	b.ge	42888c <_obstack_memory_used@@Base+0xa6f0>  // b.tcont
  428880:	mov	x8, #0x8000                	// #32768
  428884:	str	x8, [sp, #8]
  428888:	b	4288ac <_obstack_memory_used@@Base+0xa710>
  42888c:	ldr	x8, [sp, #40]
  428890:	mov	x9, #0xa                   	// #10
  428894:	mul	x8, x8, x9
  428898:	ldrb	w10, [sp, #39]
  42889c:	mov	w9, w10
  4288a0:	add	x8, x8, x9
  4288a4:	subs	x8, x8, #0x30
  4288a8:	str	x8, [sp, #8]
  4288ac:	ldr	x8, [sp, #8]
  4288b0:	str	x8, [sp, #16]
  4288b4:	ldr	x8, [sp, #16]
  4288b8:	str	x8, [sp, #24]
  4288bc:	ldr	x8, [sp, #24]
  4288c0:	str	x8, [sp, #40]
  4288c4:	b	428774 <_obstack_memory_used@@Base+0xa5d8>
  4288c8:	ldr	x8, [sp, #40]
  4288cc:	stur	x8, [x29, #-8]
  4288d0:	ldur	x0, [x29, #-8]
  4288d4:	ldp	x29, x30, [sp, #80]
  4288d8:	add	sp, sp, #0x60
  4288dc:	ret
  4288e0:	sub	sp, sp, #0x60
  4288e4:	stp	x29, x30, [sp, #80]
  4288e8:	add	x29, sp, #0x50
  4288ec:	add	x8, sp, #0x28
  4288f0:	stur	x0, [x29, #-16]
  4288f4:	stur	x1, [x29, #-24]
  4288f8:	str	x8, [sp, #32]
  4288fc:	ldur	x8, [x29, #-16]
  428900:	ldr	x8, [x8]
  428904:	str	x8, [sp, #24]
  428908:	ldur	x8, [x29, #-16]
  42890c:	stur	x8, [x29, #-32]
  428910:	ldur	x0, [x29, #-24]
  428914:	ldur	x8, [x29, #-32]
  428918:	add	x3, x8, #0x28
  42891c:	mov	x8, xzr
  428920:	mov	x1, x8
  428924:	mov	x2, x8
  428928:	bl	4253c4 <_obstack_memory_used@@Base+0x7228>
  42892c:	ldr	x8, [sp, #32]
  428930:	str	x0, [x8]
  428934:	ldr	x8, [sp, #32]
  428938:	ldr	x8, [x8]
  42893c:	cbnz	x8, 42894c <_obstack_memory_used@@Base+0xa7b0>
  428940:	mov	x8, xzr
  428944:	stur	x8, [x29, #-8]
  428948:	b	428a40 <_obstack_memory_used@@Base+0xa8a4>
  42894c:	ldr	x8, [sp, #24]
  428950:	ldr	x9, [sp, #32]
  428954:	ldr	x9, [x9]
  428958:	str	x8, [x9]
  42895c:	ldr	x8, [sp, #32]
  428960:	ldr	x8, [x8]
  428964:	ldr	w10, [x8, #48]
  428968:	and	w10, w10, #0xfffbffff
  42896c:	orr	w10, w10, #0x40000
  428970:	str	w10, [x8, #48]
  428974:	ldr	x8, [sp, #32]
  428978:	ldr	x8, [x8]
  42897c:	str	x8, [sp, #24]
  428980:	ldur	x8, [x29, #-32]
  428984:	ldr	x8, [x8, #8]
  428988:	cbz	x8, 4289a8 <_obstack_memory_used@@Base+0xa80c>
  42898c:	ldur	x8, [x29, #-32]
  428990:	ldr	x8, [x8, #8]
  428994:	stur	x8, [x29, #-32]
  428998:	ldr	x8, [sp, #24]
  42899c:	add	x8, x8, #0x8
  4289a0:	str	x8, [sp, #32]
  4289a4:	b	428a3c <_obstack_memory_used@@Base+0xa8a0>
  4289a8:	mov	x8, xzr
  4289ac:	str	x8, [sp, #16]
  4289b0:	ldur	x8, [x29, #-32]
  4289b4:	ldr	x8, [x8, #16]
  4289b8:	ldr	x9, [sp, #16]
  4289bc:	mov	w10, #0x1                   	// #1
  4289c0:	cmp	x8, x9
  4289c4:	str	w10, [sp, #12]
  4289c8:	b.eq	4289e0 <_obstack_memory_used@@Base+0xa844>  // b.none
  4289cc:	ldur	x8, [x29, #-32]
  4289d0:	ldr	x8, [x8, #16]
  4289d4:	cmp	x8, #0x0
  4289d8:	cset	w9, eq  // eq = none
  4289dc:	str	w9, [sp, #12]
  4289e0:	ldr	w8, [sp, #12]
  4289e4:	tbnz	w8, #0, 4289ec <_obstack_memory_used@@Base+0xa850>
  4289e8:	b	428a24 <_obstack_memory_used@@Base+0xa888>
  4289ec:	ldur	x8, [x29, #-32]
  4289f0:	str	x8, [sp, #16]
  4289f4:	ldur	x8, [x29, #-32]
  4289f8:	ldr	x8, [x8]
  4289fc:	stur	x8, [x29, #-32]
  428a00:	ldr	x8, [sp, #24]
  428a04:	ldr	x8, [x8]
  428a08:	str	x8, [sp, #24]
  428a0c:	ldur	x8, [x29, #-32]
  428a10:	cbnz	x8, 428a20 <_obstack_memory_used@@Base+0xa884>
  428a14:	ldr	x8, [sp, #40]
  428a18:	stur	x8, [x29, #-8]
  428a1c:	b	428a40 <_obstack_memory_used@@Base+0xa8a4>
  428a20:	b	4289b0 <_obstack_memory_used@@Base+0xa814>
  428a24:	ldur	x8, [x29, #-32]
  428a28:	ldr	x8, [x8, #16]
  428a2c:	stur	x8, [x29, #-32]
  428a30:	ldr	x8, [sp, #24]
  428a34:	add	x8, x8, #0x10
  428a38:	str	x8, [sp, #32]
  428a3c:	b	428910 <_obstack_memory_used@@Base+0xa774>
  428a40:	ldur	x0, [x29, #-8]
  428a44:	ldp	x29, x30, [sp, #80]
  428a48:	add	sp, sp, #0x60
  428a4c:	ret
  428a50:	sub	sp, sp, #0x20
  428a54:	str	x0, [sp, #24]
  428a58:	str	x1, [sp, #16]
  428a5c:	ldr	x8, [sp, #24]
  428a60:	str	x8, [sp, #8]
  428a64:	ldr	x8, [sp, #16]
  428a68:	ldr	w9, [x8, #48]
  428a6c:	and	w9, w9, #0xff
  428a70:	cmp	w9, #0x11
  428a74:	b.ne	428aa0 <_obstack_memory_used@@Base+0xa904>  // b.any
  428a78:	ldr	x8, [sp, #16]
  428a7c:	ldr	x8, [x8, #40]
  428a80:	ldr	x9, [sp, #8]
  428a84:	cmp	x8, x9
  428a88:	b.ne	428aa0 <_obstack_memory_used@@Base+0xa904>  // b.any
  428a8c:	ldr	x8, [sp, #16]
  428a90:	ldr	w9, [x8, #48]
  428a94:	and	w9, w9, #0xfff7ffff
  428a98:	orr	w9, w9, #0x80000
  428a9c:	str	w9, [x8, #48]
  428aa0:	mov	w8, wzr
  428aa4:	mov	w0, w8
  428aa8:	add	sp, sp, #0x20
  428aac:	ret
  428ab0:	sub	sp, sp, #0x50
  428ab4:	stp	x29, x30, [sp, #64]
  428ab8:	add	x29, sp, #0x40
  428abc:	stur	x0, [x29, #-16]
  428ac0:	stur	x1, [x29, #-24]
  428ac4:	str	x2, [sp, #32]
  428ac8:	ldur	x8, [x29, #-16]
  428acc:	str	x8, [sp, #24]
  428ad0:	ldur	x8, [x29, #-24]
  428ad4:	ldr	x0, [sp, #32]
  428ad8:	ldr	x1, [sp, #24]
  428adc:	blr	x8
  428ae0:	str	w0, [sp, #20]
  428ae4:	ldr	w9, [sp, #20]
  428ae8:	cmp	w9, #0x0
  428aec:	cset	w9, ne  // ne = any
  428af0:	and	w9, w9, #0x1
  428af4:	mov	w1, w9
  428af8:	sxtw	x8, w1
  428afc:	cbz	x8, 428b0c <_obstack_memory_used@@Base+0xa970>
  428b00:	ldr	w8, [sp, #20]
  428b04:	stur	w8, [x29, #-4]
  428b08:	b	428ba4 <_obstack_memory_used@@Base+0xaa08>
  428b0c:	ldr	x8, [sp, #24]
  428b10:	ldr	x8, [x8, #8]
  428b14:	cbz	x8, 428b28 <_obstack_memory_used@@Base+0xa98c>
  428b18:	ldr	x8, [sp, #24]
  428b1c:	ldr	x8, [x8, #8]
  428b20:	str	x8, [sp, #24]
  428b24:	b	428ba0 <_obstack_memory_used@@Base+0xaa04>
  428b28:	mov	x8, xzr
  428b2c:	str	x8, [sp, #8]
  428b30:	ldr	x8, [sp, #24]
  428b34:	ldr	x8, [x8, #16]
  428b38:	ldr	x9, [sp, #8]
  428b3c:	mov	w10, #0x1                   	// #1
  428b40:	cmp	x8, x9
  428b44:	str	w10, [sp, #4]
  428b48:	b.eq	428b60 <_obstack_memory_used@@Base+0xa9c4>  // b.none
  428b4c:	ldr	x8, [sp, #24]
  428b50:	ldr	x8, [x8, #16]
  428b54:	cmp	x8, #0x0
  428b58:	cset	w9, eq  // eq = none
  428b5c:	str	w9, [sp, #4]
  428b60:	ldr	w8, [sp, #4]
  428b64:	tbnz	w8, #0, 428b6c <_obstack_memory_used@@Base+0xa9d0>
  428b68:	b	428b94 <_obstack_memory_used@@Base+0xa9f8>
  428b6c:	ldr	x8, [sp, #24]
  428b70:	str	x8, [sp, #8]
  428b74:	ldr	x8, [sp, #24]
  428b78:	ldr	x8, [x8]
  428b7c:	str	x8, [sp, #24]
  428b80:	ldr	x8, [sp, #24]
  428b84:	cbnz	x8, 428b90 <_obstack_memory_used@@Base+0xa9f4>
  428b88:	stur	wzr, [x29, #-4]
  428b8c:	b	428ba4 <_obstack_memory_used@@Base+0xaa08>
  428b90:	b	428b30 <_obstack_memory_used@@Base+0xa994>
  428b94:	ldr	x8, [sp, #24]
  428b98:	ldr	x8, [x8, #16]
  428b9c:	str	x8, [sp, #24]
  428ba0:	b	428ad0 <_obstack_memory_used@@Base+0xa934>
  428ba4:	ldur	w0, [x29, #-4]
  428ba8:	ldp	x29, x30, [sp, #64]
  428bac:	add	sp, sp, #0x50
  428bb0:	ret
  428bb4:	sub	sp, sp, #0x30
  428bb8:	str	x0, [sp, #40]
  428bbc:	str	x1, [sp, #32]
  428bc0:	ldr	x8, [sp, #40]
  428bc4:	str	x8, [sp, #24]
  428bc8:	ldr	x8, [sp, #32]
  428bcc:	ldr	w9, [x8, #48]
  428bd0:	and	w9, w9, #0xff
  428bd4:	cmp	w9, #0x4
  428bd8:	b.ne	428c38 <_obstack_memory_used@@Base+0xaa9c>  // b.any
  428bdc:	ldr	x8, [sp, #24]
  428be0:	ldr	x8, [x8, #224]
  428be4:	cbz	x8, 428c38 <_obstack_memory_used@@Base+0xaa9c>
  428be8:	ldr	x8, [sp, #32]
  428bec:	ldr	x8, [x8, #40]
  428bf0:	str	w8, [sp, #20]
  428bf4:	ldr	x9, [sp, #24]
  428bf8:	ldr	x9, [x9, #224]
  428bfc:	ldrsw	x10, [sp, #20]
  428c00:	ldr	x9, [x9, x10, lsl #3]
  428c04:	ldr	x10, [sp, #32]
  428c08:	str	x9, [x10, #40]
  428c0c:	ldr	x9, [sp, #32]
  428c10:	ldr	x9, [x9, #40]
  428c14:	mov	w8, #0x1                   	// #1
  428c18:	lsl	w8, w8, w9
  428c1c:	mov	w0, w8
  428c20:	sxtw	x10, w0
  428c24:	ldr	x11, [sp, #24]
  428c28:	ldr	x12, [x11, #160]
  428c2c:	orr	x10, x12, x10
  428c30:	str	x10, [x11, #160]
  428c34:	b	428cfc <_obstack_memory_used@@Base+0xab60>
  428c38:	ldr	x8, [sp, #32]
  428c3c:	ldr	w9, [x8, #48]
  428c40:	and	w9, w9, #0xff
  428c44:	cmp	w9, #0x11
  428c48:	b.ne	428cfc <_obstack_memory_used@@Base+0xab60>  // b.any
  428c4c:	ldr	x8, [sp, #32]
  428c50:	ldr	x8, [x8, #8]
  428c54:	cbz	x8, 428cfc <_obstack_memory_used@@Base+0xab60>
  428c58:	ldr	x8, [sp, #32]
  428c5c:	ldr	x8, [x8, #8]
  428c60:	ldr	w9, [x8, #48]
  428c64:	and	w9, w9, #0xff
  428c68:	cmp	w9, #0x11
  428c6c:	b.ne	428cfc <_obstack_memory_used@@Base+0xab60>  // b.any
  428c70:	ldr	x8, [sp, #32]
  428c74:	ldr	x8, [x8, #8]
  428c78:	ldr	x8, [x8, #40]
  428c7c:	str	x8, [sp, #8]
  428c80:	ldr	x8, [sp, #32]
  428c84:	ldr	x8, [x8, #8]
  428c88:	ldr	x8, [x8, #8]
  428c8c:	ldr	x9, [sp, #32]
  428c90:	str	x8, [x9, #8]
  428c94:	ldr	x8, [sp, #32]
  428c98:	ldr	x8, [x8, #8]
  428c9c:	cbz	x8, 428cb0 <_obstack_memory_used@@Base+0xab14>
  428ca0:	ldr	x8, [sp, #32]
  428ca4:	ldr	x9, [sp, #32]
  428ca8:	ldr	x9, [x9, #8]
  428cac:	str	x8, [x9]
  428cb0:	ldr	x8, [sp, #24]
  428cb4:	ldr	x8, [x8, #224]
  428cb8:	ldr	x9, [sp, #32]
  428cbc:	ldr	x9, [x9, #40]
  428cc0:	ldr	x8, [x8, x9, lsl #3]
  428cc4:	ldr	x9, [sp, #24]
  428cc8:	ldr	x9, [x9, #224]
  428ccc:	ldr	x10, [sp, #8]
  428cd0:	str	x8, [x9, x10, lsl #3]
  428cd4:	ldr	x8, [sp, #8]
  428cd8:	cmp	x8, #0x40
  428cdc:	b.ge	428cfc <_obstack_memory_used@@Base+0xab60>  // b.tcont
  428ce0:	ldr	x8, [sp, #8]
  428ce4:	mov	x9, #0x1                   	// #1
  428ce8:	lsl	x8, x9, x8
  428cec:	ldr	x9, [sp, #24]
  428cf0:	ldr	x10, [x9, #160]
  428cf4:	bic	x8, x10, x8
  428cf8:	str	x8, [x9, #160]
  428cfc:	mov	w8, wzr
  428d00:	mov	w0, w8
  428d04:	add	sp, sp, #0x30
  428d08:	ret
  428d0c:	sub	sp, sp, #0x30
  428d10:	stp	x29, x30, [sp, #32]
  428d14:	add	x29, sp, #0x20
  428d18:	stur	x0, [x29, #-8]
  428d1c:	str	x1, [sp, #16]
  428d20:	ldur	x8, [x29, #-8]
  428d24:	str	x8, [sp, #8]
  428d28:	str	wzr, [sp, #4]
  428d2c:	ldr	x8, [sp, #16]
  428d30:	ldr	x8, [x8, #8]
  428d34:	cbz	x8, 428d88 <_obstack_memory_used@@Base+0xabec>
  428d38:	ldr	x8, [sp, #16]
  428d3c:	ldr	x8, [x8, #8]
  428d40:	ldr	w9, [x8, #48]
  428d44:	and	w9, w9, #0xff
  428d48:	cmp	w9, #0x11
  428d4c:	b.ne	428d88 <_obstack_memory_used@@Base+0xabec>  // b.any
  428d50:	ldr	x1, [sp, #8]
  428d54:	ldr	x8, [sp, #16]
  428d58:	ldr	x2, [x8, #8]
  428d5c:	add	x0, sp, #0x4
  428d60:	bl	429494 <_obstack_memory_used@@Base+0xb2f8>
  428d64:	ldr	x8, [sp, #16]
  428d68:	str	x0, [x8, #8]
  428d6c:	ldr	x8, [sp, #16]
  428d70:	ldr	x8, [x8, #8]
  428d74:	cbz	x8, 428d88 <_obstack_memory_used@@Base+0xabec>
  428d78:	ldr	x8, [sp, #16]
  428d7c:	ldr	x9, [sp, #16]
  428d80:	ldr	x9, [x9, #8]
  428d84:	str	x8, [x9]
  428d88:	ldr	x8, [sp, #16]
  428d8c:	ldr	x8, [x8, #16]
  428d90:	cbz	x8, 428de4 <_obstack_memory_used@@Base+0xac48>
  428d94:	ldr	x8, [sp, #16]
  428d98:	ldr	x8, [x8, #16]
  428d9c:	ldr	w9, [x8, #48]
  428da0:	and	w9, w9, #0xff
  428da4:	cmp	w9, #0x11
  428da8:	b.ne	428de4 <_obstack_memory_used@@Base+0xac48>  // b.any
  428dac:	ldr	x1, [sp, #8]
  428db0:	ldr	x8, [sp, #16]
  428db4:	ldr	x2, [x8, #16]
  428db8:	add	x0, sp, #0x4
  428dbc:	bl	429494 <_obstack_memory_used@@Base+0xb2f8>
  428dc0:	ldr	x8, [sp, #16]
  428dc4:	str	x0, [x8, #16]
  428dc8:	ldr	x8, [sp, #16]
  428dcc:	ldr	x8, [x8, #16]
  428dd0:	cbz	x8, 428de4 <_obstack_memory_used@@Base+0xac48>
  428dd4:	ldr	x8, [sp, #16]
  428dd8:	ldr	x9, [sp, #16]
  428ddc:	ldr	x9, [x9, #16]
  428de0:	str	x8, [x9]
  428de4:	ldr	w0, [sp, #4]
  428de8:	ldp	x29, x30, [sp, #32]
  428dec:	add	sp, sp, #0x30
  428df0:	ret
  428df4:	sub	sp, sp, #0x30
  428df8:	stp	x29, x30, [sp, #32]
  428dfc:	add	x29, sp, #0x20
  428e00:	str	x0, [sp, #16]
  428e04:	str	x1, [sp, #8]
  428e08:	ldr	x8, [sp, #16]
  428e0c:	str	x8, [sp]
  428e10:	ldr	x8, [sp, #8]
  428e14:	ldr	w9, [x8, #48]
  428e18:	and	w9, w9, #0xff
  428e1c:	cmp	w9, #0x10
  428e20:	b.ne	428e50 <_obstack_memory_used@@Base+0xacb4>  // b.any
  428e24:	ldr	x8, [sp, #8]
  428e28:	ldr	x8, [x8, #8]
  428e2c:	ldr	x8, [x8, #24]
  428e30:	ldr	x9, [sp, #8]
  428e34:	str	x8, [x9, #24]
  428e38:	ldr	x8, [sp, #8]
  428e3c:	ldr	x8, [x8, #8]
  428e40:	ldr	x8, [x8, #56]
  428e44:	ldr	x9, [sp, #8]
  428e48:	str	x8, [x9, #56]
  428e4c:	b	428ef4 <_obstack_memory_used@@Base+0xad58>
  428e50:	ldr	x8, [sp, #8]
  428e54:	ldr	x9, [sp, #8]
  428e58:	str	x8, [x9, #24]
  428e5c:	ldr	x0, [sp]
  428e60:	ldr	x8, [sp, #8]
  428e64:	ldr	x1, [x8, #40]
  428e68:	ldr	x2, [x8, #48]
  428e6c:	bl	429690 <_obstack_memory_used@@Base+0xb4f4>
  428e70:	ldr	x8, [sp, #8]
  428e74:	str	x0, [x8, #56]
  428e78:	ldr	x8, [sp, #8]
  428e7c:	ldr	x8, [x8, #56]
  428e80:	mov	x9, #0xffffffffffffffff    	// #-1
  428e84:	cmp	x8, x9
  428e88:	cset	w10, eq  // eq = none
  428e8c:	and	w10, w10, #0x1
  428e90:	mov	w0, w10
  428e94:	sxtw	x8, w0
  428e98:	cbz	x8, 428ea8 <_obstack_memory_used@@Base+0xad0c>
  428e9c:	mov	w8, #0xc                   	// #12
  428ea0:	stur	w8, [x29, #-4]
  428ea4:	b	428ef8 <_obstack_memory_used@@Base+0xad5c>
  428ea8:	ldr	x8, [sp, #8]
  428eac:	ldr	w9, [x8, #48]
  428eb0:	and	w9, w9, #0xff
  428eb4:	cmp	w9, #0xc
  428eb8:	b.ne	428ef4 <_obstack_memory_used@@Base+0xad58>  // b.any
  428ebc:	ldr	x8, [sp, #8]
  428ec0:	ldr	w9, [x8, #40]
  428ec4:	ldr	x8, [sp]
  428ec8:	ldr	x8, [x8]
  428ecc:	ldr	x10, [sp, #8]
  428ed0:	ldr	x10, [x10, #56]
  428ed4:	mov	x11, #0x10                  	// #16
  428ed8:	mul	x10, x11, x10
  428edc:	add	x8, x8, x10
  428ee0:	ldr	w12, [x8, #8]
  428ee4:	and	w9, w9, #0x3ff
  428ee8:	and	w12, w12, #0xfffc00ff
  428eec:	orr	w9, w12, w9, lsl #8
  428ef0:	str	w9, [x8, #8]
  428ef4:	stur	wzr, [x29, #-4]
  428ef8:	ldur	w0, [x29, #-4]
  428efc:	ldp	x29, x30, [sp, #32]
  428f00:	add	sp, sp, #0x30
  428f04:	ret
  428f08:	sub	sp, sp, #0x20
  428f0c:	str	x0, [sp, #24]
  428f10:	str	x1, [sp, #16]
  428f14:	ldr	x8, [sp, #16]
  428f18:	ldr	w9, [x8, #48]
  428f1c:	and	w9, w9, #0xff
  428f20:	cmp	w9, #0xb
  428f24:	str	w9, [sp, #12]
  428f28:	b.eq	428f40 <_obstack_memory_used@@Base+0xada4>  // b.none
  428f2c:	b	428f30 <_obstack_memory_used@@Base+0xad94>
  428f30:	ldr	w8, [sp, #12]
  428f34:	cmp	w8, #0x10
  428f38:	b.eq	428f54 <_obstack_memory_used@@Base+0xadb8>  // b.none
  428f3c:	b	428f84 <_obstack_memory_used@@Base+0xade8>
  428f40:	ldr	x8, [sp, #16]
  428f44:	ldr	x9, [sp, #16]
  428f48:	ldr	x9, [x9, #8]
  428f4c:	str	x8, [x9, #32]
  428f50:	b	428fc4 <_obstack_memory_used@@Base+0xae28>
  428f54:	ldr	x8, [sp, #16]
  428f58:	ldr	x8, [x8, #16]
  428f5c:	ldr	x8, [x8, #24]
  428f60:	ldr	x9, [sp, #16]
  428f64:	ldr	x9, [x9, #8]
  428f68:	str	x8, [x9, #32]
  428f6c:	ldr	x8, [sp, #16]
  428f70:	ldr	x8, [x8, #32]
  428f74:	ldr	x9, [sp, #16]
  428f78:	ldr	x9, [x9, #16]
  428f7c:	str	x8, [x9, #32]
  428f80:	b	428fc4 <_obstack_memory_used@@Base+0xae28>
  428f84:	ldr	x8, [sp, #16]
  428f88:	ldr	x8, [x8, #8]
  428f8c:	cbz	x8, 428fa4 <_obstack_memory_used@@Base+0xae08>
  428f90:	ldr	x8, [sp, #16]
  428f94:	ldr	x8, [x8, #32]
  428f98:	ldr	x9, [sp, #16]
  428f9c:	ldr	x9, [x9, #8]
  428fa0:	str	x8, [x9, #32]
  428fa4:	ldr	x8, [sp, #16]
  428fa8:	ldr	x8, [x8, #16]
  428fac:	cbz	x8, 428fc4 <_obstack_memory_used@@Base+0xae28>
  428fb0:	ldr	x8, [sp, #16]
  428fb4:	ldr	x8, [x8, #32]
  428fb8:	ldr	x9, [sp, #16]
  428fbc:	ldr	x9, [x9, #16]
  428fc0:	str	x8, [x9, #32]
  428fc4:	mov	w8, wzr
  428fc8:	mov	w0, w8
  428fcc:	add	sp, sp, #0x20
  428fd0:	ret
  428fd4:	sub	sp, sp, #0x50
  428fd8:	stp	x29, x30, [sp, #64]
  428fdc:	add	x29, sp, #0x40
  428fe0:	stur	x0, [x29, #-8]
  428fe4:	stur	x1, [x29, #-16]
  428fe8:	ldur	x8, [x29, #-8]
  428fec:	stur	x8, [x29, #-24]
  428ff0:	ldur	x8, [x29, #-16]
  428ff4:	ldr	x8, [x8, #56]
  428ff8:	str	x8, [sp, #32]
  428ffc:	str	wzr, [sp, #28]
  429000:	ldur	x8, [x29, #-16]
  429004:	ldr	w9, [x8, #48]
  429008:	and	w9, w9, #0xff
  42900c:	subs	w9, w9, #0x2
  429010:	mov	w8, w9
  429014:	ubfx	x8, x8, #0, #32
  429018:	cmp	x8, #0xe
  42901c:	str	x8, [sp]
  429020:	b.hi	4291b8 <_obstack_memory_used@@Base+0xb01c>  // b.pmore
  429024:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  429028:	add	x8, x8, #0xe9c
  42902c:	ldr	x11, [sp]
  429030:	ldrsw	x10, [x8, x11, lsl #2]
  429034:	add	x9, x8, x10
  429038:	br	x9
  42903c:	b	4291ec <_obstack_memory_used@@Base+0xb050>
  429040:	ldur	x8, [x29, #-16]
  429044:	ldr	x8, [x8, #32]
  429048:	cbnz	x8, 429050 <_obstack_memory_used@@Base+0xaeb4>
  42904c:	b	429050 <_obstack_memory_used@@Base+0xaeb4>
  429050:	b	4291ec <_obstack_memory_used@@Base+0xb050>
  429054:	ldur	x8, [x29, #-24]
  429058:	ldrb	w9, [x8, #176]
  42905c:	and	w9, w9, #0xfffffffe
  429060:	orr	w9, w9, #0x1
  429064:	strb	w9, [x8, #176]
  429068:	ldur	x8, [x29, #-16]
  42906c:	ldr	x8, [x8, #8]
  429070:	cbz	x8, 42908c <_obstack_memory_used@@Base+0xaef0>
  429074:	ldur	x8, [x29, #-16]
  429078:	ldr	x8, [x8, #8]
  42907c:	ldr	x8, [x8, #24]
  429080:	ldr	x8, [x8, #56]
  429084:	str	x8, [sp, #16]
  429088:	b	42909c <_obstack_memory_used@@Base+0xaf00>
  42908c:	ldur	x8, [x29, #-16]
  429090:	ldr	x8, [x8, #32]
  429094:	ldr	x8, [x8, #56]
  429098:	str	x8, [sp, #16]
  42909c:	ldur	x8, [x29, #-16]
  4290a0:	ldr	x8, [x8, #16]
  4290a4:	cbz	x8, 4290c0 <_obstack_memory_used@@Base+0xaf24>
  4290a8:	ldur	x8, [x29, #-16]
  4290ac:	ldr	x8, [x8, #16]
  4290b0:	ldr	x8, [x8, #24]
  4290b4:	ldr	x8, [x8, #56]
  4290b8:	str	x8, [sp, #8]
  4290bc:	b	4290d0 <_obstack_memory_used@@Base+0xaf34>
  4290c0:	ldur	x8, [x29, #-16]
  4290c4:	ldr	x8, [x8, #32]
  4290c8:	ldr	x8, [x8, #56]
  4290cc:	str	x8, [sp, #8]
  4290d0:	ldr	x8, [sp, #16]
  4290d4:	mov	x9, #0xffffffffffffffff    	// #-1
  4290d8:	cmp	x8, x9
  4290dc:	b.le	4290e4 <_obstack_memory_used@@Base+0xaf48>
  4290e0:	b	4290e4 <_obstack_memory_used@@Base+0xaf48>
  4290e4:	ldr	x8, [sp, #8]
  4290e8:	mov	x9, #0xffffffffffffffff    	// #-1
  4290ec:	cmp	x8, x9
  4290f0:	b.le	4290f8 <_obstack_memory_used@@Base+0xaf5c>
  4290f4:	b	4290f8 <_obstack_memory_used@@Base+0xaf5c>
  4290f8:	ldur	x8, [x29, #-24]
  4290fc:	ldr	x8, [x8, #40]
  429100:	ldr	x9, [sp, #32]
  429104:	mov	x10, #0x18                  	// #24
  429108:	mul	x9, x10, x9
  42910c:	add	x0, x8, x9
  429110:	ldr	x1, [sp, #16]
  429114:	ldr	x2, [sp, #8]
  429118:	bl	4299dc <_obstack_memory_used@@Base+0xb840>
  42911c:	str	w0, [sp, #28]
  429120:	b	4291ec <_obstack_memory_used@@Base+0xb050>
  429124:	ldur	x8, [x29, #-24]
  429128:	ldr	x8, [x8, #40]
  42912c:	ldr	x9, [sp, #32]
  429130:	mov	x10, #0x18                  	// #24
  429134:	mul	x9, x10, x9
  429138:	add	x0, x8, x9
  42913c:	ldur	x8, [x29, #-16]
  429140:	ldr	x8, [x8, #32]
  429144:	ldr	x1, [x8, #56]
  429148:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  42914c:	str	w0, [sp, #28]
  429150:	b	4291ec <_obstack_memory_used@@Base+0xb050>
  429154:	ldur	x8, [x29, #-16]
  429158:	ldr	x8, [x8, #32]
  42915c:	ldr	x8, [x8, #56]
  429160:	ldur	x9, [x29, #-24]
  429164:	ldr	x9, [x9, #24]
  429168:	ldr	x10, [sp, #32]
  42916c:	str	x8, [x9, x10, lsl #3]
  429170:	ldur	x8, [x29, #-16]
  429174:	ldr	w11, [x8, #48]
  429178:	and	w11, w11, #0xff
  42917c:	cmp	w11, #0x4
  429180:	b.ne	4291b4 <_obstack_memory_used@@Base+0xb018>  // b.any
  429184:	ldur	x8, [x29, #-24]
  429188:	ldr	x8, [x8, #40]
  42918c:	ldr	x9, [sp, #32]
  429190:	mov	x10, #0x18                  	// #24
  429194:	mul	x9, x10, x9
  429198:	add	x0, x8, x9
  42919c:	ldur	x8, [x29, #-24]
  4291a0:	ldr	x8, [x8, #24]
  4291a4:	ldr	x9, [sp, #32]
  4291a8:	ldr	x1, [x8, x9, lsl #3]
  4291ac:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  4291b0:	str	w0, [sp, #28]
  4291b4:	b	4291ec <_obstack_memory_used@@Base+0xb050>
  4291b8:	ldur	x8, [x29, #-16]
  4291bc:	ldr	w9, [x8, #48]
  4291c0:	and	w9, w9, #0xff
  4291c4:	and	w9, w9, #0x8
  4291c8:	cbnz	w9, 4291d0 <_obstack_memory_used@@Base+0xb034>
  4291cc:	b	4291d0 <_obstack_memory_used@@Base+0xb034>
  4291d0:	ldur	x8, [x29, #-16]
  4291d4:	ldr	x8, [x8, #32]
  4291d8:	ldr	x8, [x8, #56]
  4291dc:	ldur	x9, [x29, #-24]
  4291e0:	ldr	x9, [x9, #24]
  4291e4:	ldr	x10, [sp, #32]
  4291e8:	str	x8, [x9, x10, lsl #3]
  4291ec:	ldr	w0, [sp, #28]
  4291f0:	ldp	x29, x30, [sp, #64]
  4291f4:	add	sp, sp, #0x50
  4291f8:	ret
  4291fc:	sub	sp, sp, #0x50
  429200:	stp	x29, x30, [sp, #64]
  429204:	add	x29, sp, #0x40
  429208:	stur	x0, [x29, #-16]
  42920c:	ldur	x8, [x29, #-16]
  429210:	ldr	x8, [x8, #16]
  429214:	cmp	x8, #0x0
  429218:	cset	w9, ls  // ls = plast
  42921c:	tbnz	w9, #0, 429224 <_obstack_memory_used@@Base+0xb088>
  429220:	b	429224 <_obstack_memory_used@@Base+0xb088>
  429224:	mov	w8, #0x0                   	// #0
  429228:	sturb	w8, [x29, #-25]
  42922c:	stur	xzr, [x29, #-24]
  429230:	ldur	x8, [x29, #-24]
  429234:	ldur	x9, [x29, #-16]
  429238:	ldr	x9, [x9, #16]
  42923c:	cmp	x8, x9
  429240:	b.ne	42925c <_obstack_memory_used@@Base+0xb0c0>  // b.any
  429244:	ldurb	w8, [x29, #-25]
  429248:	tbnz	w8, #0, 429250 <_obstack_memory_used@@Base+0xb0b4>
  42924c:	b	429334 <_obstack_memory_used@@Base+0xb198>
  429250:	mov	w8, #0x0                   	// #0
  429254:	sturb	w8, [x29, #-25]
  429258:	stur	xzr, [x29, #-24]
  42925c:	ldur	x8, [x29, #-16]
  429260:	ldr	x8, [x8, #48]
  429264:	ldur	x9, [x29, #-24]
  429268:	mov	x10, #0x18                  	// #24
  42926c:	mul	x9, x10, x9
  429270:	add	x8, x8, x9
  429274:	ldr	x8, [x8, #8]
  429278:	mov	x9, #0xffffffffffffffff    	// #-1
  42927c:	cmp	x8, x9
  429280:	b.eq	429288 <_obstack_memory_used@@Base+0xb0ec>  // b.none
  429284:	b	429288 <_obstack_memory_used@@Base+0xb0ec>
  429288:	ldur	x8, [x29, #-16]
  42928c:	ldr	x8, [x8, #48]
  429290:	ldur	x9, [x29, #-24]
  429294:	mov	x10, #0x18                  	// #24
  429298:	mul	x9, x10, x9
  42929c:	add	x8, x8, x9
  4292a0:	ldr	x8, [x8, #8]
  4292a4:	cbz	x8, 4292ac <_obstack_memory_used@@Base+0xb110>
  4292a8:	b	429324 <_obstack_memory_used@@Base+0xb188>
  4292ac:	ldur	x1, [x29, #-16]
  4292b0:	ldur	x2, [x29, #-24]
  4292b4:	add	x0, sp, #0x8
  4292b8:	mov	w8, #0x1                   	// #1
  4292bc:	and	w3, w8, #0x1
  4292c0:	bl	429b80 <_obstack_memory_used@@Base+0xb9e4>
  4292c4:	str	w0, [sp, #32]
  4292c8:	ldr	w8, [sp, #32]
  4292cc:	cmp	w8, #0x0
  4292d0:	cset	w8, ne  // ne = any
  4292d4:	and	w8, w8, #0x1
  4292d8:	mov	w1, w8
  4292dc:	sxtw	x9, w1
  4292e0:	cbz	x9, 4292f0 <_obstack_memory_used@@Base+0xb154>
  4292e4:	ldr	w8, [sp, #32]
  4292e8:	stur	w8, [x29, #-4]
  4292ec:	b	429338 <_obstack_memory_used@@Base+0xb19c>
  4292f0:	ldur	x8, [x29, #-16]
  4292f4:	ldr	x8, [x8, #48]
  4292f8:	ldur	x9, [x29, #-24]
  4292fc:	mov	x10, #0x18                  	// #24
  429300:	mul	x9, x10, x9
  429304:	add	x8, x8, x9
  429308:	ldr	x8, [x8, #8]
  42930c:	cbnz	x8, 429324 <_obstack_memory_used@@Base+0xb188>
  429310:	mov	w8, #0x1                   	// #1
  429314:	sturb	w8, [x29, #-25]
  429318:	add	x9, sp, #0x8
  42931c:	ldr	x0, [x9, #16]
  429320:	bl	402b40 <free@plt>
  429324:	ldur	x8, [x29, #-24]
  429328:	add	x8, x8, #0x1
  42932c:	stur	x8, [x29, #-24]
  429330:	b	429230 <_obstack_memory_used@@Base+0xb094>
  429334:	stur	wzr, [x29, #-4]
  429338:	ldur	w0, [x29, #-4]
  42933c:	ldp	x29, x30, [sp, #64]
  429340:	add	sp, sp, #0x50
  429344:	ret
  429348:	sub	sp, sp, #0x40
  42934c:	stp	x29, x30, [sp, #48]
  429350:	add	x29, sp, #0x30
  429354:	stur	x0, [x29, #-16]
  429358:	str	xzr, [sp, #16]
  42935c:	ldr	x8, [sp, #16]
  429360:	ldur	x9, [x29, #-16]
  429364:	ldr	x9, [x9, #16]
  429368:	cmp	x8, x9
  42936c:	b.cs	4293a4 <_obstack_memory_used@@Base+0xb208>  // b.hs, b.nlast
  429370:	ldur	x8, [x29, #-16]
  429374:	ldr	x8, [x8, #56]
  429378:	ldr	x9, [sp, #16]
  42937c:	mov	x10, #0x18                  	// #24
  429380:	mul	x9, x10, x9
  429384:	add	x8, x8, x9
  429388:	str	xzr, [x8]
  42938c:	str	xzr, [x8, #8]
  429390:	str	xzr, [x8, #16]
  429394:	ldr	x8, [sp, #16]
  429398:	add	x8, x8, #0x1
  42939c:	str	x8, [sp, #16]
  4293a0:	b	42935c <_obstack_memory_used@@Base+0xb1c0>
  4293a4:	str	xzr, [sp, #24]
  4293a8:	ldr	x8, [sp, #24]
  4293ac:	ldur	x9, [x29, #-16]
  4293b0:	ldr	x9, [x9, #16]
  4293b4:	cmp	x8, x9
  4293b8:	b.cs	429480 <_obstack_memory_used@@Base+0xb2e4>  // b.hs, b.nlast
  4293bc:	ldur	x8, [x29, #-16]
  4293c0:	ldr	x8, [x8, #48]
  4293c4:	ldr	x9, [sp, #24]
  4293c8:	mov	x10, #0x18                  	// #24
  4293cc:	mul	x9, x10, x9
  4293d0:	add	x8, x8, x9
  4293d4:	ldr	x8, [x8, #16]
  4293d8:	str	x8, [sp]
  4293dc:	str	xzr, [sp, #16]
  4293e0:	ldr	x8, [sp, #16]
  4293e4:	ldur	x9, [x29, #-16]
  4293e8:	ldr	x9, [x9, #48]
  4293ec:	ldr	x10, [sp, #24]
  4293f0:	mov	x11, #0x18                  	// #24
  4293f4:	mul	x10, x11, x10
  4293f8:	add	x9, x9, x10
  4293fc:	ldr	x9, [x9, #8]
  429400:	cmp	x8, x9
  429404:	b.ge	429470 <_obstack_memory_used@@Base+0xb2d4>  // b.tcont
  429408:	ldur	x8, [x29, #-16]
  42940c:	ldr	x8, [x8, #56]
  429410:	ldr	x9, [sp]
  429414:	ldr	x10, [sp, #16]
  429418:	ldr	x9, [x9, x10, lsl #3]
  42941c:	mov	x10, #0x18                  	// #24
  429420:	mul	x9, x10, x9
  429424:	add	x0, x8, x9
  429428:	ldr	x1, [sp, #24]
  42942c:	bl	42ae10 <_obstack_memory_used@@Base+0xcc74>
  429430:	mov	w11, #0x1                   	// #1
  429434:	and	w11, w0, w11
  429438:	strb	w11, [sp, #15]
  42943c:	ldrb	w11, [sp, #15]
  429440:	eor	w11, w11, #0x1
  429444:	and	w11, w11, #0x1
  429448:	mov	w1, w11
  42944c:	sxtw	x8, w1
  429450:	cbz	x8, 429460 <_obstack_memory_used@@Base+0xb2c4>
  429454:	mov	w8, #0xc                   	// #12
  429458:	stur	w8, [x29, #-4]
  42945c:	b	429484 <_obstack_memory_used@@Base+0xb2e8>
  429460:	ldr	x8, [sp, #16]
  429464:	add	x8, x8, #0x1
  429468:	str	x8, [sp, #16]
  42946c:	b	4293e0 <_obstack_memory_used@@Base+0xb244>
  429470:	ldr	x8, [sp, #24]
  429474:	add	x8, x8, #0x1
  429478:	str	x8, [sp, #24]
  42947c:	b	4293a8 <_obstack_memory_used@@Base+0xb20c>
  429480:	stur	wzr, [x29, #-4]
  429484:	ldur	w0, [x29, #-4]
  429488:	ldp	x29, x30, [sp, #48]
  42948c:	add	sp, sp, #0x40
  429490:	ret
  429494:	sub	sp, sp, #0x80
  429498:	stp	x29, x30, [sp, #112]
  42949c:	add	x29, sp, #0x70
  4294a0:	mov	w8, #0x1                   	// #1
  4294a4:	stur	x0, [x29, #-16]
  4294a8:	stur	x1, [x29, #-24]
  4294ac:	stur	x2, [x29, #-32]
  4294b0:	ldur	x9, [x29, #-24]
  4294b4:	ldr	x9, [x9]
  4294b8:	stur	x9, [x29, #-40]
  4294bc:	ldur	x9, [x29, #-32]
  4294c0:	ldr	x9, [x9, #8]
  4294c4:	stur	x9, [x29, #-48]
  4294c8:	ldur	x9, [x29, #-24]
  4294cc:	ldrb	w10, [x9, #56]
  4294d0:	mov	w11, #0x4                   	// #4
  4294d4:	lsr	w10, w10, w11
  4294d8:	and	w8, w10, w8
  4294dc:	and	w8, w8, #0xff
  4294e0:	cbz	w8, 429530 <_obstack_memory_used@@Base+0xb394>
  4294e4:	ldur	x8, [x29, #-32]
  4294e8:	ldr	x8, [x8, #8]
  4294ec:	cbz	x8, 429530 <_obstack_memory_used@@Base+0xb394>
  4294f0:	ldur	x8, [x29, #-32]
  4294f4:	ldr	x8, [x8, #40]
  4294f8:	cmp	x8, #0x40
  4294fc:	b.ge	429520 <_obstack_memory_used@@Base+0xb384>  // b.tcont
  429500:	ldur	x8, [x29, #-40]
  429504:	ldr	x8, [x8, #160]
  429508:	ldur	x9, [x29, #-32]
  42950c:	ldr	x9, [x9, #40]
  429510:	mov	x10, #0x1                   	// #1
  429514:	lsl	x9, x10, x9
  429518:	and	x8, x8, x9
  42951c:	cbnz	x8, 429530 <_obstack_memory_used@@Base+0xb394>
  429520:	ldur	x8, [x29, #-32]
  429524:	ldr	x8, [x8, #8]
  429528:	stur	x8, [x29, #-8]
  42952c:	b	429680 <_obstack_memory_used@@Base+0xb4e4>
  429530:	ldur	x0, [x29, #-40]
  429534:	mov	x8, xzr
  429538:	mov	x1, x8
  42953c:	mov	x2, x8
  429540:	mov	w3, #0x8                   	// #8
  429544:	str	x8, [sp, #24]
  429548:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  42954c:	str	x0, [sp, #56]
  429550:	ldur	x0, [x29, #-40]
  429554:	ldr	x1, [sp, #24]
  429558:	ldr	x2, [sp, #24]
  42955c:	mov	w3, #0x9                   	// #9
  429560:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  429564:	str	x0, [sp, #48]
  429568:	ldur	x8, [x29, #-48]
  42956c:	cbz	x8, 42958c <_obstack_memory_used@@Base+0xb3f0>
  429570:	ldur	x0, [x29, #-40]
  429574:	ldur	x1, [x29, #-48]
  429578:	ldr	x2, [sp, #48]
  42957c:	mov	w3, #0x10                  	// #16
  429580:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  429584:	str	x0, [sp, #16]
  429588:	b	429594 <_obstack_memory_used@@Base+0xb3f8>
  42958c:	ldr	x8, [sp, #48]
  429590:	str	x8, [sp, #16]
  429594:	ldr	x8, [sp, #16]
  429598:	str	x8, [sp, #40]
  42959c:	ldur	x0, [x29, #-40]
  4295a0:	ldr	x1, [sp, #56]
  4295a4:	ldr	x2, [sp, #40]
  4295a8:	mov	w3, #0x10                  	// #16
  4295ac:	bl	42399c <_obstack_memory_used@@Base+0x5800>
  4295b0:	str	x0, [sp, #32]
  4295b4:	ldr	x8, [sp, #32]
  4295b8:	mov	w9, #0x1                   	// #1
  4295bc:	str	w9, [sp, #12]
  4295c0:	cbz	x8, 4295f4 <_obstack_memory_used@@Base+0xb458>
  4295c4:	ldr	x8, [sp, #40]
  4295c8:	mov	w9, #0x1                   	// #1
  4295cc:	str	w9, [sp, #12]
  4295d0:	cbz	x8, 4295f4 <_obstack_memory_used@@Base+0xb458>
  4295d4:	ldr	x8, [sp, #56]
  4295d8:	mov	w9, #0x1                   	// #1
  4295dc:	str	w9, [sp, #12]
  4295e0:	cbz	x8, 4295f4 <_obstack_memory_used@@Base+0xb458>
  4295e4:	ldr	x8, [sp, #48]
  4295e8:	cmp	x8, #0x0
  4295ec:	cset	w9, eq  // eq = none
  4295f0:	str	w9, [sp, #12]
  4295f4:	ldr	w8, [sp, #12]
  4295f8:	and	w8, w8, #0x1
  4295fc:	mov	w0, w8
  429600:	sxtw	x9, w0
  429604:	cbz	x9, 429620 <_obstack_memory_used@@Base+0xb484>
  429608:	ldur	x8, [x29, #-16]
  42960c:	mov	w9, #0xc                   	// #12
  429610:	str	w9, [x8]
  429614:	mov	x8, xzr
  429618:	stur	x8, [x29, #-8]
  42961c:	b	429680 <_obstack_memory_used@@Base+0xb4e4>
  429620:	ldur	x8, [x29, #-32]
  429624:	ldr	x8, [x8, #40]
  429628:	ldr	x9, [sp, #48]
  42962c:	str	x8, [x9, #40]
  429630:	ldr	x9, [sp, #56]
  429634:	str	x8, [x9, #40]
  429638:	ldur	x8, [x29, #-32]
  42963c:	ldr	w10, [x8, #48]
  429640:	lsr	w10, w10, #19
  429644:	and	w10, w10, #0x1
  429648:	ldr	x8, [sp, #48]
  42964c:	ldr	w11, [x8, #48]
  429650:	and	w10, w10, #0x1
  429654:	and	w11, w11, #0xfff7ffff
  429658:	orr	w11, w11, w10, lsl #19
  42965c:	str	w11, [x8, #48]
  429660:	ldr	x8, [sp, #56]
  429664:	ldr	w11, [x8, #48]
  429668:	and	w10, w10, #0x1
  42966c:	and	w11, w11, #0xfff7ffff
  429670:	orr	w10, w11, w10, lsl #19
  429674:	str	w10, [x8, #48]
  429678:	ldr	x8, [sp, #32]
  42967c:	stur	x8, [x29, #-8]
  429680:	ldur	x0, [x29, #-8]
  429684:	ldp	x29, x30, [sp, #112]
  429688:	add	sp, sp, #0x80
  42968c:	ret
  429690:	sub	sp, sp, #0x80
  429694:	stp	x29, x30, [sp, #112]
  429698:	add	x29, sp, #0x70
  42969c:	stur	x1, [x29, #-24]
  4296a0:	stur	x2, [x29, #-16]
  4296a4:	stur	x0, [x29, #-32]
  4296a8:	ldur	x8, [x29, #-32]
  4296ac:	ldr	x8, [x8, #16]
  4296b0:	ldur	x9, [x29, #-32]
  4296b4:	ldr	x9, [x9, #8]
  4296b8:	cmp	x8, x9
  4296bc:	cset	w10, cs  // cs = hs, nlast
  4296c0:	and	w10, w10, #0x1
  4296c4:	mov	w0, w10
  4296c8:	sxtw	x8, w0
  4296cc:	cbz	x8, 4298a0 <_obstack_memory_used@@Base+0xb704>
  4296d0:	ldur	x8, [x29, #-32]
  4296d4:	ldr	x8, [x8, #8]
  4296d8:	mov	x9, #0x2                   	// #2
  4296dc:	mul	x8, x8, x9
  4296e0:	stur	x8, [x29, #-40]
  4296e4:	mov	x8, #0x18                  	// #24
  4296e8:	str	x8, [sp, #24]
  4296ec:	ldur	x8, [x29, #-40]
  4296f0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4296f4:	movk	x9, #0xaaa, lsl #48
  4296f8:	cmp	x9, x8
  4296fc:	cset	w10, cc  // cc = lo, ul, last
  429700:	and	w10, w10, #0x1
  429704:	mov	w0, w10
  429708:	sxtw	x8, w0
  42970c:	cbz	x8, 42971c <_obstack_memory_used@@Base+0xb580>
  429710:	mov	x8, #0xffffffffffffffff    	// #-1
  429714:	stur	x8, [x29, #-8]
  429718:	b	4299cc <_obstack_memory_used@@Base+0xb830>
  42971c:	ldur	x8, [x29, #-32]
  429720:	ldr	x0, [x8]
  429724:	ldur	x8, [x29, #-40]
  429728:	mov	x9, #0x10                  	// #16
  42972c:	mul	x1, x8, x9
  429730:	bl	4029c0 <realloc@plt>
  429734:	str	x0, [sp, #32]
  429738:	ldr	x8, [sp, #32]
  42973c:	cmp	x8, #0x0
  429740:	cset	w10, eq  // eq = none
  429744:	and	w10, w10, #0x1
  429748:	mov	w0, w10
  42974c:	sxtw	x8, w0
  429750:	cbz	x8, 429760 <_obstack_memory_used@@Base+0xb5c4>
  429754:	mov	x8, #0xffffffffffffffff    	// #-1
  429758:	stur	x8, [x29, #-8]
  42975c:	b	4299cc <_obstack_memory_used@@Base+0xb830>
  429760:	ldr	x8, [sp, #32]
  429764:	ldur	x9, [x29, #-32]
  429768:	str	x8, [x9]
  42976c:	ldur	x8, [x29, #-32]
  429770:	ldr	x0, [x8, #24]
  429774:	ldur	x8, [x29, #-40]
  429778:	mov	x9, #0x8                   	// #8
  42977c:	mul	x1, x8, x9
  429780:	str	x9, [sp, #16]
  429784:	bl	4029c0 <realloc@plt>
  429788:	stur	x0, [x29, #-48]
  42978c:	ldur	x8, [x29, #-32]
  429790:	ldr	x0, [x8, #32]
  429794:	ldur	x8, [x29, #-40]
  429798:	ldr	x9, [sp, #16]
  42979c:	mul	x1, x8, x9
  4297a0:	bl	4029c0 <realloc@plt>
  4297a4:	str	x0, [sp, #56]
  4297a8:	ldur	x8, [x29, #-32]
  4297ac:	ldr	x0, [x8, #40]
  4297b0:	ldur	x8, [x29, #-40]
  4297b4:	mov	x9, #0x18                  	// #24
  4297b8:	mul	x1, x8, x9
  4297bc:	str	x9, [sp, #8]
  4297c0:	bl	4029c0 <realloc@plt>
  4297c4:	str	x0, [sp, #48]
  4297c8:	ldur	x8, [x29, #-32]
  4297cc:	ldr	x0, [x8, #48]
  4297d0:	ldur	x8, [x29, #-40]
  4297d4:	ldr	x9, [sp, #8]
  4297d8:	mul	x1, x8, x9
  4297dc:	bl	4029c0 <realloc@plt>
  4297e0:	str	x0, [sp, #40]
  4297e4:	ldur	x8, [x29, #-48]
  4297e8:	mov	w10, #0x1                   	// #1
  4297ec:	str	w10, [sp, #4]
  4297f0:	cbz	x8, 429824 <_obstack_memory_used@@Base+0xb688>
  4297f4:	ldr	x8, [sp, #56]
  4297f8:	mov	w9, #0x1                   	// #1
  4297fc:	str	w9, [sp, #4]
  429800:	cbz	x8, 429824 <_obstack_memory_used@@Base+0xb688>
  429804:	ldr	x8, [sp, #48]
  429808:	mov	w9, #0x1                   	// #1
  42980c:	str	w9, [sp, #4]
  429810:	cbz	x8, 429824 <_obstack_memory_used@@Base+0xb688>
  429814:	ldr	x8, [sp, #40]
  429818:	cmp	x8, #0x0
  42981c:	cset	w9, eq  // eq = none
  429820:	str	w9, [sp, #4]
  429824:	ldr	w8, [sp, #4]
  429828:	and	w8, w8, #0x1
  42982c:	mov	w0, w8
  429830:	sxtw	x9, w0
  429834:	cbz	x9, 429864 <_obstack_memory_used@@Base+0xb6c8>
  429838:	ldur	x0, [x29, #-48]
  42983c:	bl	402b40 <free@plt>
  429840:	ldr	x0, [sp, #56]
  429844:	bl	402b40 <free@plt>
  429848:	ldr	x0, [sp, #48]
  42984c:	bl	402b40 <free@plt>
  429850:	ldr	x0, [sp, #40]
  429854:	bl	402b40 <free@plt>
  429858:	mov	x8, #0xffffffffffffffff    	// #-1
  42985c:	stur	x8, [x29, #-8]
  429860:	b	4299cc <_obstack_memory_used@@Base+0xb830>
  429864:	ldur	x8, [x29, #-48]
  429868:	ldur	x9, [x29, #-32]
  42986c:	str	x8, [x9, #24]
  429870:	ldr	x8, [sp, #56]
  429874:	ldur	x9, [x29, #-32]
  429878:	str	x8, [x9, #32]
  42987c:	ldr	x8, [sp, #48]
  429880:	ldur	x9, [x29, #-32]
  429884:	str	x8, [x9, #40]
  429888:	ldr	x8, [sp, #40]
  42988c:	ldur	x9, [x29, #-32]
  429890:	str	x8, [x9, #48]
  429894:	ldur	x8, [x29, #-40]
  429898:	ldur	x9, [x29, #-32]
  42989c:	str	x8, [x9, #8]
  4298a0:	ldur	x8, [x29, #-32]
  4298a4:	ldr	x8, [x8]
  4298a8:	ldur	x9, [x29, #-32]
  4298ac:	mov	x10, #0x10                  	// #16
  4298b0:	ldr	x9, [x9, #16]
  4298b4:	ldur	q0, [x29, #-24]
  4298b8:	str	q0, [x8, x9, lsl #4]
  4298bc:	ldur	x8, [x29, #-32]
  4298c0:	ldr	x8, [x8]
  4298c4:	ldur	x9, [x29, #-32]
  4298c8:	ldr	x9, [x9, #16]
  4298cc:	mul	x9, x10, x9
  4298d0:	add	x8, x8, x9
  4298d4:	ldr	w11, [x8, #8]
  4298d8:	and	w11, w11, #0xfffc00ff
  4298dc:	str	w11, [x8, #8]
  4298e0:	ldur	w11, [x29, #-16]
  4298e4:	and	w11, w11, #0xff
  4298e8:	cmp	w11, #0x5
  4298ec:	b.ne	429908 <_obstack_memory_used@@Base+0xb76c>  // b.any
  4298f0:	ldur	x8, [x29, #-32]
  4298f4:	ldr	w9, [x8, #180]
  4298f8:	mov	w10, #0x1                   	// #1
  4298fc:	cmp	w9, #0x1
  429900:	str	w10, [sp]
  429904:	b.gt	42991c <_obstack_memory_used@@Base+0xb780>
  429908:	ldur	w8, [x29, #-16]
  42990c:	and	w8, w8, #0xff
  429910:	cmp	w8, #0x6
  429914:	cset	w8, eq  // eq = none
  429918:	str	w8, [sp]
  42991c:	ldr	w8, [sp]
  429920:	and	w8, w8, #0x1
  429924:	ldur	x9, [x29, #-32]
  429928:	ldr	x9, [x9]
  42992c:	ldur	x10, [x29, #-32]
  429930:	mov	x11, #0x10                  	// #16
  429934:	ldr	x10, [x10, #16]
  429938:	mul	x10, x11, x10
  42993c:	add	x9, x9, x10
  429940:	ldr	w12, [x9, #8]
  429944:	and	w8, w8, #0x1
  429948:	and	w12, w12, #0xffefffff
  42994c:	orr	w8, w12, w8, lsl #20
  429950:	str	w8, [x9, #8]
  429954:	ldur	x9, [x29, #-32]
  429958:	mov	x10, #0x18                  	// #24
  42995c:	ldr	x9, [x9, #24]
  429960:	ldur	x11, [x29, #-32]
  429964:	ldr	x11, [x11, #16]
  429968:	mov	x13, #0xffffffffffffffff    	// #-1
  42996c:	str	x13, [x9, x11, lsl #3]
  429970:	ldur	x9, [x29, #-32]
  429974:	ldr	x9, [x9, #40]
  429978:	ldur	x11, [x29, #-32]
  42997c:	ldr	x11, [x11, #16]
  429980:	mul	x11, x10, x11
  429984:	add	x9, x9, x11
  429988:	str	xzr, [x9]
  42998c:	str	xzr, [x9, #8]
  429990:	str	xzr, [x9, #16]
  429994:	ldur	x9, [x29, #-32]
  429998:	ldr	x9, [x9, #48]
  42999c:	ldur	x11, [x29, #-32]
  4299a0:	ldr	x11, [x11, #16]
  4299a4:	mul	x10, x10, x11
  4299a8:	add	x9, x9, x10
  4299ac:	str	xzr, [x9]
  4299b0:	str	xzr, [x9, #8]
  4299b4:	str	xzr, [x9, #16]
  4299b8:	ldur	x9, [x29, #-32]
  4299bc:	ldr	x10, [x9, #16]
  4299c0:	add	x11, x10, #0x1
  4299c4:	str	x11, [x9, #16]
  4299c8:	stur	x10, [x29, #-8]
  4299cc:	ldur	x0, [x29, #-8]
  4299d0:	ldp	x29, x30, [sp, #112]
  4299d4:	add	sp, sp, #0x80
  4299d8:	ret
  4299dc:	sub	sp, sp, #0x30
  4299e0:	stp	x29, x30, [sp, #32]
  4299e4:	add	x29, sp, #0x20
  4299e8:	mov	x8, #0x2                   	// #2
  4299ec:	mov	x9, #0x10                  	// #16
  4299f0:	str	x0, [sp, #16]
  4299f4:	str	x1, [sp, #8]
  4299f8:	str	x2, [sp]
  4299fc:	ldr	x10, [sp, #16]
  429a00:	str	x8, [x10]
  429a04:	mov	x0, x9
  429a08:	bl	402890 <malloc@plt>
  429a0c:	ldr	x8, [sp, #16]
  429a10:	str	x0, [x8, #16]
  429a14:	ldr	x8, [sp, #16]
  429a18:	ldr	x8, [x8, #16]
  429a1c:	cmp	x8, #0x0
  429a20:	cset	w11, eq  // eq = none
  429a24:	and	w11, w11, #0x1
  429a28:	mov	w0, w11
  429a2c:	sxtw	x8, w0
  429a30:	cbz	x8, 429a40 <_obstack_memory_used@@Base+0xb8a4>
  429a34:	mov	w8, #0xc                   	// #12
  429a38:	stur	w8, [x29, #-4]
  429a3c:	b	429ad4 <_obstack_memory_used@@Base+0xb938>
  429a40:	ldr	x8, [sp, #8]
  429a44:	ldr	x9, [sp]
  429a48:	cmp	x8, x9
  429a4c:	b.ne	429a70 <_obstack_memory_used@@Base+0xb8d4>  // b.any
  429a50:	ldr	x8, [sp, #16]
  429a54:	mov	x9, #0x1                   	// #1
  429a58:	str	x9, [x8, #8]
  429a5c:	ldr	x8, [sp, #8]
  429a60:	ldr	x9, [sp, #16]
  429a64:	ldr	x9, [x9, #16]
  429a68:	str	x8, [x9]
  429a6c:	b	429ad0 <_obstack_memory_used@@Base+0xb934>
  429a70:	ldr	x8, [sp, #16]
  429a74:	mov	x9, #0x2                   	// #2
  429a78:	str	x9, [x8, #8]
  429a7c:	ldr	x8, [sp, #8]
  429a80:	ldr	x9, [sp]
  429a84:	cmp	x8, x9
  429a88:	b.ge	429ab0 <_obstack_memory_used@@Base+0xb914>  // b.tcont
  429a8c:	ldr	x8, [sp, #8]
  429a90:	ldr	x9, [sp, #16]
  429a94:	ldr	x9, [x9, #16]
  429a98:	str	x8, [x9]
  429a9c:	ldr	x8, [sp]
  429aa0:	ldr	x9, [sp, #16]
  429aa4:	ldr	x9, [x9, #16]
  429aa8:	str	x8, [x9, #8]
  429aac:	b	429ad0 <_obstack_memory_used@@Base+0xb934>
  429ab0:	ldr	x8, [sp]
  429ab4:	ldr	x9, [sp, #16]
  429ab8:	ldr	x9, [x9, #16]
  429abc:	str	x8, [x9]
  429ac0:	ldr	x8, [sp, #8]
  429ac4:	ldr	x9, [sp, #16]
  429ac8:	ldr	x9, [x9, #16]
  429acc:	str	x8, [x9, #8]
  429ad0:	stur	wzr, [x29, #-4]
  429ad4:	ldur	w0, [x29, #-4]
  429ad8:	ldp	x29, x30, [sp, #32]
  429adc:	add	sp, sp, #0x30
  429ae0:	ret
  429ae4:	sub	sp, sp, #0x30
  429ae8:	stp	x29, x30, [sp, #32]
  429aec:	add	x29, sp, #0x20
  429af0:	mov	x8, #0x1                   	// #1
  429af4:	mov	x9, #0x8                   	// #8
  429af8:	str	x0, [sp, #16]
  429afc:	str	x1, [sp, #8]
  429b00:	ldr	x10, [sp, #16]
  429b04:	str	x8, [x10]
  429b08:	ldr	x10, [sp, #16]
  429b0c:	str	x8, [x10, #8]
  429b10:	mov	x0, x9
  429b14:	bl	402890 <malloc@plt>
  429b18:	ldr	x8, [sp, #16]
  429b1c:	str	x0, [x8, #16]
  429b20:	ldr	x8, [sp, #16]
  429b24:	ldr	x8, [x8, #16]
  429b28:	cmp	x8, #0x0
  429b2c:	cset	w11, eq  // eq = none
  429b30:	and	w11, w11, #0x1
  429b34:	mov	w0, w11
  429b38:	sxtw	x8, w0
  429b3c:	cbz	x8, 429b5c <_obstack_memory_used@@Base+0xb9c0>
  429b40:	ldr	x8, [sp, #16]
  429b44:	str	xzr, [x8, #8]
  429b48:	ldr	x8, [sp, #16]
  429b4c:	str	xzr, [x8]
  429b50:	mov	w9, #0xc                   	// #12
  429b54:	stur	w9, [x29, #-4]
  429b58:	b	429b70 <_obstack_memory_used@@Base+0xb9d4>
  429b5c:	ldr	x8, [sp, #8]
  429b60:	ldr	x9, [sp, #16]
  429b64:	ldr	x9, [x9, #16]
  429b68:	str	x8, [x9]
  429b6c:	stur	wzr, [x29, #-4]
  429b70:	ldur	w0, [x29, #-4]
  429b74:	ldp	x29, x30, [sp, #32]
  429b78:	add	sp, sp, #0x30
  429b7c:	ret
  429b80:	sub	sp, sp, #0x90
  429b84:	stp	x29, x30, [sp, #128]
  429b88:	add	x29, sp, #0x80
  429b8c:	mov	w8, #0x0                   	// #0
  429b90:	mov	w9, #0x1                   	// #1
  429b94:	add	x10, sp, #0x38
  429b98:	stur	x0, [x29, #-16]
  429b9c:	stur	x1, [x29, #-24]
  429ba0:	stur	x2, [x29, #-32]
  429ba4:	and	w9, w3, w9
  429ba8:	sturb	w9, [x29, #-33]
  429bac:	strb	w8, [sp, #54]
  429bb0:	ldur	x11, [x29, #-24]
  429bb4:	ldr	x11, [x11, #40]
  429bb8:	ldur	x12, [x29, #-32]
  429bbc:	mov	x13, #0x18                  	// #24
  429bc0:	mul	x12, x13, x12
  429bc4:	add	x11, x11, x12
  429bc8:	ldr	x11, [x11, #8]
  429bcc:	add	x1, x11, #0x1
  429bd0:	mov	x0, x10
  429bd4:	bl	429f94 <_obstack_memory_used@@Base+0xbdf8>
  429bd8:	stur	w0, [x29, #-40]
  429bdc:	ldur	w8, [x29, #-40]
  429be0:	cmp	w8, #0x0
  429be4:	cset	w8, ne  // ne = any
  429be8:	and	w8, w8, #0x1
  429bec:	mov	w1, w8
  429bf0:	sxtw	x10, w1
  429bf4:	cbz	x10, 429c04 <_obstack_memory_used@@Base+0xba68>
  429bf8:	ldur	w8, [x29, #-40]
  429bfc:	stur	w8, [x29, #-4]
  429c00:	b	429f84 <_obstack_memory_used@@Base+0xbde8>
  429c04:	ldur	x8, [x29, #-24]
  429c08:	ldr	x8, [x8, #48]
  429c0c:	ldur	x9, [x29, #-32]
  429c10:	mov	x10, #0x18                  	// #24
  429c14:	mul	x9, x10, x9
  429c18:	add	x8, x8, x9
  429c1c:	mov	x9, #0x8                   	// #8
  429c20:	mov	x10, #0xffffffffffffffff    	// #-1
  429c24:	str	x10, [x8, #8]
  429c28:	ldur	x8, [x29, #-24]
  429c2c:	ldr	x8, [x8]
  429c30:	ldur	x10, [x29, #-32]
  429c34:	mov	x11, #0x10                  	// #16
  429c38:	mul	x10, x11, x10
  429c3c:	add	x8, x8, x10
  429c40:	ldr	w12, [x8, #8]
  429c44:	lsr	w9, w12, w9
  429c48:	and	w9, w9, #0x3ff
  429c4c:	cbz	w9, 429d1c <_obstack_memory_used@@Base+0xbb80>
  429c50:	ldur	x8, [x29, #-24]
  429c54:	ldr	x8, [x8, #40]
  429c58:	ldur	x9, [x29, #-32]
  429c5c:	mov	x10, #0x18                  	// #24
  429c60:	mul	x9, x10, x9
  429c64:	add	x8, x8, x9
  429c68:	ldr	x8, [x8, #8]
  429c6c:	cbz	x8, 429d1c <_obstack_memory_used@@Base+0xbb80>
  429c70:	ldur	x8, [x29, #-24]
  429c74:	ldr	x8, [x8]
  429c78:	ldur	x9, [x29, #-24]
  429c7c:	ldr	x9, [x9, #40]
  429c80:	ldur	x10, [x29, #-32]
  429c84:	mov	x11, #0x18                  	// #24
  429c88:	mul	x10, x11, x10
  429c8c:	add	x9, x9, x10
  429c90:	mov	x10, #0x10                  	// #16
  429c94:	ldr	x9, [x9, #16]
  429c98:	ldr	x9, [x9]
  429c9c:	mul	x9, x10, x9
  429ca0:	add	x8, x8, x9
  429ca4:	ldr	w12, [x8, #8]
  429ca8:	lsr	w12, w12, #18
  429cac:	and	w12, w12, #0x1
  429cb0:	cbnz	w12, 429d1c <_obstack_memory_used@@Base+0xbb80>
  429cb4:	ldur	x0, [x29, #-24]
  429cb8:	ldur	x1, [x29, #-32]
  429cbc:	ldur	x2, [x29, #-32]
  429cc0:	ldur	x3, [x29, #-32]
  429cc4:	ldur	x8, [x29, #-24]
  429cc8:	ldr	x8, [x8]
  429ccc:	ldur	x9, [x29, #-32]
  429cd0:	mov	x10, #0x10                  	// #16
  429cd4:	mul	x9, x10, x9
  429cd8:	add	x8, x8, x9
  429cdc:	mov	x9, #0x8                   	// #8
  429ce0:	ldr	w11, [x8, #8]
  429ce4:	lsr	w9, w11, w9
  429ce8:	and	w4, w9, #0x3ff
  429cec:	bl	42a014 <_obstack_memory_used@@Base+0xbe78>
  429cf0:	stur	w0, [x29, #-40]
  429cf4:	ldur	w9, [x29, #-40]
  429cf8:	cmp	w9, #0x0
  429cfc:	cset	w9, ne  // ne = any
  429d00:	and	w9, w9, #0x1
  429d04:	mov	w1, w9
  429d08:	sxtw	x8, w1
  429d0c:	cbz	x8, 429d1c <_obstack_memory_used@@Base+0xbb80>
  429d10:	ldur	w8, [x29, #-40]
  429d14:	stur	w8, [x29, #-4]
  429d18:	b	429f84 <_obstack_memory_used@@Base+0xbde8>
  429d1c:	ldur	x8, [x29, #-24]
  429d20:	ldr	x8, [x8]
  429d24:	ldur	x9, [x29, #-32]
  429d28:	mov	x10, #0x10                  	// #16
  429d2c:	mul	x9, x10, x9
  429d30:	add	x8, x8, x9
  429d34:	ldr	w11, [x8, #8]
  429d38:	and	w11, w11, #0xff
  429d3c:	and	w11, w11, #0x8
  429d40:	cbz	w11, 429ed4 <_obstack_memory_used@@Base+0xbd38>
  429d44:	stur	xzr, [x29, #-48]
  429d48:	ldur	x8, [x29, #-48]
  429d4c:	ldur	x9, [x29, #-24]
  429d50:	ldr	x9, [x9, #40]
  429d54:	ldur	x10, [x29, #-32]
  429d58:	mov	x11, #0x18                  	// #24
  429d5c:	mul	x10, x11, x10
  429d60:	add	x9, x9, x10
  429d64:	ldr	x9, [x9, #8]
  429d68:	cmp	x8, x9
  429d6c:	b.ge	429ed4 <_obstack_memory_used@@Base+0xbd38>  // b.tcont
  429d70:	ldur	x8, [x29, #-24]
  429d74:	ldr	x8, [x8, #40]
  429d78:	ldur	x9, [x29, #-32]
  429d7c:	mov	x10, #0x18                  	// #24
  429d80:	mul	x9, x10, x9
  429d84:	add	x8, x8, x9
  429d88:	ldr	x8, [x8, #16]
  429d8c:	ldur	x9, [x29, #-48]
  429d90:	ldr	x8, [x8, x9, lsl #3]
  429d94:	str	x8, [sp, #8]
  429d98:	ldur	x8, [x29, #-24]
  429d9c:	ldr	x8, [x8, #48]
  429da0:	ldr	x9, [sp, #8]
  429da4:	mul	x9, x10, x9
  429da8:	add	x8, x8, x9
  429dac:	ldr	x8, [x8, #8]
  429db0:	mov	x9, #0xffffffffffffffff    	// #-1
  429db4:	cmp	x8, x9
  429db8:	b.ne	429dc8 <_obstack_memory_used@@Base+0xbc2c>  // b.any
  429dbc:	mov	w8, #0x1                   	// #1
  429dc0:	strb	w8, [sp, #54]
  429dc4:	b	429ec4 <_obstack_memory_used@@Base+0xbd28>
  429dc8:	ldur	x8, [x29, #-24]
  429dcc:	ldr	x8, [x8, #48]
  429dd0:	ldr	x9, [sp, #8]
  429dd4:	mov	x10, #0x18                  	// #24
  429dd8:	mul	x9, x10, x9
  429ddc:	add	x8, x8, x9
  429de0:	ldr	x8, [x8, #8]
  429de4:	cbnz	x8, 429e30 <_obstack_memory_used@@Base+0xbc94>
  429de8:	ldur	x1, [x29, #-24]
  429dec:	ldr	x2, [sp, #8]
  429df0:	add	x0, sp, #0x10
  429df4:	mov	w8, wzr
  429df8:	and	w3, w8, #0x1
  429dfc:	bl	429b80 <_obstack_memory_used@@Base+0xb9e4>
  429e00:	stur	w0, [x29, #-40]
  429e04:	ldur	w8, [x29, #-40]
  429e08:	cmp	w8, #0x0
  429e0c:	cset	w8, ne  // ne = any
  429e10:	and	w8, w8, #0x1
  429e14:	mov	w1, w8
  429e18:	sxtw	x9, w1
  429e1c:	cbz	x9, 429e2c <_obstack_memory_used@@Base+0xbc90>
  429e20:	ldur	w8, [x29, #-40]
  429e24:	stur	w8, [x29, #-4]
  429e28:	b	429f84 <_obstack_memory_used@@Base+0xbde8>
  429e2c:	b	429e58 <_obstack_memory_used@@Base+0xbcbc>
  429e30:	ldur	x8, [x29, #-24]
  429e34:	ldr	x8, [x8, #48]
  429e38:	ldr	x9, [sp, #8]
  429e3c:	mov	x10, #0x18                  	// #24
  429e40:	mul	x9, x10, x9
  429e44:	add	x8, x8, x9
  429e48:	ldr	q0, [x8]
  429e4c:	str	q0, [sp, #16]
  429e50:	ldr	x8, [x8, #16]
  429e54:	str	x8, [sp, #32]
  429e58:	add	x0, sp, #0x38
  429e5c:	add	x1, sp, #0x10
  429e60:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  429e64:	stur	w0, [x29, #-40]
  429e68:	ldur	w8, [x29, #-40]
  429e6c:	cmp	w8, #0x0
  429e70:	cset	w8, ne  // ne = any
  429e74:	and	w8, w8, #0x1
  429e78:	mov	w1, w8
  429e7c:	sxtw	x9, w1
  429e80:	cbz	x9, 429e90 <_obstack_memory_used@@Base+0xbcf4>
  429e84:	ldur	w8, [x29, #-40]
  429e88:	stur	w8, [x29, #-4]
  429e8c:	b	429f84 <_obstack_memory_used@@Base+0xbde8>
  429e90:	ldur	x8, [x29, #-24]
  429e94:	ldr	x8, [x8, #48]
  429e98:	ldr	x9, [sp, #8]
  429e9c:	mov	x10, #0x18                  	// #24
  429ea0:	mul	x9, x10, x9
  429ea4:	add	x8, x8, x9
  429ea8:	ldr	x8, [x8, #8]
  429eac:	cbnz	x8, 429ec4 <_obstack_memory_used@@Base+0xbd28>
  429eb0:	mov	w8, #0x1                   	// #1
  429eb4:	strb	w8, [sp, #54]
  429eb8:	add	x9, sp, #0x10
  429ebc:	ldr	x0, [x9, #16]
  429ec0:	bl	402b40 <free@plt>
  429ec4:	ldur	x8, [x29, #-48]
  429ec8:	add	x8, x8, #0x1
  429ecc:	stur	x8, [x29, #-48]
  429ed0:	b	429d48 <_obstack_memory_used@@Base+0xbbac>
  429ed4:	ldur	x1, [x29, #-32]
  429ed8:	add	x0, sp, #0x38
  429edc:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  429ee0:	mov	w8, #0x1                   	// #1
  429ee4:	and	w8, w0, w8
  429ee8:	strb	w8, [sp, #55]
  429eec:	ldrb	w8, [sp, #55]
  429ef0:	eor	w8, w8, #0x1
  429ef4:	and	w8, w8, #0x1
  429ef8:	mov	w1, w8
  429efc:	sxtw	x9, w1
  429f00:	cbz	x9, 429f10 <_obstack_memory_used@@Base+0xbd74>
  429f04:	mov	w8, #0xc                   	// #12
  429f08:	stur	w8, [x29, #-4]
  429f0c:	b	429f84 <_obstack_memory_used@@Base+0xbde8>
  429f10:	ldrb	w8, [sp, #54]
  429f14:	tbnz	w8, #0, 429f1c <_obstack_memory_used@@Base+0xbd80>
  429f18:	b	429f44 <_obstack_memory_used@@Base+0xbda8>
  429f1c:	ldurb	w8, [x29, #-33]
  429f20:	tbnz	w8, #0, 429f44 <_obstack_memory_used@@Base+0xbda8>
  429f24:	ldur	x8, [x29, #-24]
  429f28:	ldr	x8, [x8, #48]
  429f2c:	ldur	x9, [x29, #-32]
  429f30:	mov	x10, #0x18                  	// #24
  429f34:	mul	x9, x10, x9
  429f38:	add	x8, x8, x9
  429f3c:	str	xzr, [x8, #8]
  429f40:	b	429f6c <_obstack_memory_used@@Base+0xbdd0>
  429f44:	ldur	x8, [x29, #-24]
  429f48:	ldr	x8, [x8, #48]
  429f4c:	ldur	x9, [x29, #-32]
  429f50:	mov	x10, #0x18                  	// #24
  429f54:	mul	x9, x10, x9
  429f58:	add	x8, x8, x9
  429f5c:	ldur	q0, [sp, #56]
  429f60:	str	q0, [x8]
  429f64:	ldr	x9, [sp, #72]
  429f68:	str	x9, [x8, #16]
  429f6c:	ldur	x8, [x29, #-16]
  429f70:	ldur	q0, [sp, #56]
  429f74:	str	q0, [x8]
  429f78:	ldr	x9, [sp, #72]
  429f7c:	str	x9, [x8, #16]
  429f80:	stur	wzr, [x29, #-4]
  429f84:	ldur	w0, [x29, #-4]
  429f88:	ldp	x29, x30, [sp, #128]
  429f8c:	add	sp, sp, #0x90
  429f90:	ret
  429f94:	sub	sp, sp, #0x30
  429f98:	stp	x29, x30, [sp, #32]
  429f9c:	add	x29, sp, #0x20
  429fa0:	mov	x8, #0x8                   	// #8
  429fa4:	str	x0, [sp, #16]
  429fa8:	str	x1, [sp, #8]
  429fac:	ldr	x9, [sp, #8]
  429fb0:	ldr	x10, [sp, #16]
  429fb4:	str	x9, [x10]
  429fb8:	ldr	x9, [sp, #16]
  429fbc:	str	xzr, [x9, #8]
  429fc0:	ldr	x9, [sp, #8]
  429fc4:	mul	x0, x9, x8
  429fc8:	bl	402890 <malloc@plt>
  429fcc:	ldr	x8, [sp, #16]
  429fd0:	str	x0, [x8, #16]
  429fd4:	ldr	x8, [sp, #16]
  429fd8:	ldr	x8, [x8, #16]
  429fdc:	cmp	x8, #0x0
  429fe0:	cset	w11, eq  // eq = none
  429fe4:	and	w11, w11, #0x1
  429fe8:	mov	w0, w11
  429fec:	sxtw	x8, w0
  429ff0:	cbz	x8, 42a000 <_obstack_memory_used@@Base+0xbe64>
  429ff4:	mov	w8, #0xc                   	// #12
  429ff8:	stur	w8, [x29, #-4]
  429ffc:	b	42a004 <_obstack_memory_used@@Base+0xbe68>
  42a000:	stur	wzr, [x29, #-4]
  42a004:	ldur	w0, [x29, #-4]
  42a008:	ldp	x29, x30, [sp, #32]
  42a00c:	add	sp, sp, #0x30
  42a010:	ret
  42a014:	sub	sp, sp, #0x70
  42a018:	stp	x29, x30, [sp, #96]
  42a01c:	add	x29, sp, #0x60
  42a020:	stur	x0, [x29, #-16]
  42a024:	stur	x1, [x29, #-24]
  42a028:	stur	x2, [x29, #-32]
  42a02c:	stur	x3, [x29, #-40]
  42a030:	stur	w4, [x29, #-44]
  42a034:	ldur	w8, [x29, #-44]
  42a038:	str	w8, [sp, #24]
  42a03c:	ldur	x9, [x29, #-24]
  42a040:	str	x9, [sp, #40]
  42a044:	ldur	x9, [x29, #-32]
  42a048:	str	x9, [sp, #32]
  42a04c:	ldur	x8, [x29, #-16]
  42a050:	ldr	x8, [x8]
  42a054:	ldr	x9, [sp, #40]
  42a058:	mov	x10, #0x10                  	// #16
  42a05c:	mul	x9, x10, x9
  42a060:	add	x8, x8, x9
  42a064:	ldr	w11, [x8, #8]
  42a068:	and	w11, w11, #0xff
  42a06c:	cmp	w11, #0x4
  42a070:	b.ne	42a158 <_obstack_memory_used@@Base+0xbfbc>  // b.any
  42a074:	ldur	x8, [x29, #-16]
  42a078:	mov	x9, #0x18                  	// #24
  42a07c:	ldr	x8, [x8, #24]
  42a080:	ldr	x10, [sp, #40]
  42a084:	ldr	x8, [x8, x10, lsl #3]
  42a088:	str	x8, [sp, #16]
  42a08c:	ldur	x8, [x29, #-16]
  42a090:	ldr	x8, [x8, #40]
  42a094:	ldr	x10, [sp, #32]
  42a098:	mul	x9, x9, x10
  42a09c:	add	x8, x8, x9
  42a0a0:	str	xzr, [x8, #8]
  42a0a4:	ldur	x0, [x29, #-16]
  42a0a8:	ldr	x1, [sp, #16]
  42a0ac:	ldr	w2, [sp, #24]
  42a0b0:	bl	42abe0 <_obstack_memory_used@@Base+0xca44>
  42a0b4:	str	x0, [sp, #8]
  42a0b8:	ldr	x8, [sp, #8]
  42a0bc:	mov	x9, #0xffffffffffffffff    	// #-1
  42a0c0:	cmp	x8, x9
  42a0c4:	cset	w11, eq  // eq = none
  42a0c8:	and	w11, w11, #0x1
  42a0cc:	mov	w0, w11
  42a0d0:	sxtw	x8, w0
  42a0d4:	cbz	x8, 42a0e4 <_obstack_memory_used@@Base+0xbf48>
  42a0d8:	mov	w8, #0xc                   	// #12
  42a0dc:	stur	w8, [x29, #-4]
  42a0e0:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a0e4:	ldur	x8, [x29, #-16]
  42a0e8:	mov	x9, #0x18                  	// #24
  42a0ec:	ldr	x8, [x8, #24]
  42a0f0:	ldr	x10, [sp, #40]
  42a0f4:	ldr	x8, [x8, x10, lsl #3]
  42a0f8:	ldur	x10, [x29, #-16]
  42a0fc:	ldr	x10, [x10, #24]
  42a100:	ldr	x11, [sp, #32]
  42a104:	str	x8, [x10, x11, lsl #3]
  42a108:	ldur	x8, [x29, #-16]
  42a10c:	ldr	x8, [x8, #40]
  42a110:	ldr	x10, [sp, #32]
  42a114:	mul	x9, x9, x10
  42a118:	add	x0, x8, x9
  42a11c:	ldr	x1, [sp, #8]
  42a120:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  42a124:	mov	w12, #0x1                   	// #1
  42a128:	and	w12, w0, w12
  42a12c:	strb	w12, [sp, #31]
  42a130:	ldrb	w12, [sp, #31]
  42a134:	eor	w12, w12, #0x1
  42a138:	and	w12, w12, #0x1
  42a13c:	mov	w1, w12
  42a140:	sxtw	x8, w1
  42a144:	cbz	x8, 42a154 <_obstack_memory_used@@Base+0xbfb8>
  42a148:	mov	w8, #0xc                   	// #12
  42a14c:	stur	w8, [x29, #-4]
  42a150:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a154:	b	42a574 <_obstack_memory_used@@Base+0xc3d8>
  42a158:	ldur	x8, [x29, #-16]
  42a15c:	ldr	x8, [x8, #40]
  42a160:	ldr	x9, [sp, #40]
  42a164:	mov	x10, #0x18                  	// #24
  42a168:	mul	x9, x10, x9
  42a16c:	add	x8, x8, x9
  42a170:	ldr	x8, [x8, #8]
  42a174:	cbnz	x8, 42a19c <_obstack_memory_used@@Base+0xc000>
  42a178:	ldur	x8, [x29, #-16]
  42a17c:	ldr	x8, [x8, #24]
  42a180:	ldr	x9, [sp, #40]
  42a184:	ldr	x8, [x8, x9, lsl #3]
  42a188:	ldur	x9, [x29, #-16]
  42a18c:	ldr	x9, [x9, #24]
  42a190:	ldr	x10, [sp, #32]
  42a194:	str	x8, [x9, x10, lsl #3]
  42a198:	b	42a588 <_obstack_memory_used@@Base+0xc3ec>
  42a19c:	ldur	x8, [x29, #-16]
  42a1a0:	ldr	x8, [x8, #40]
  42a1a4:	ldr	x9, [sp, #40]
  42a1a8:	mov	x10, #0x18                  	// #24
  42a1ac:	mul	x9, x10, x9
  42a1b0:	add	x8, x8, x9
  42a1b4:	ldr	x8, [x8, #8]
  42a1b8:	cmp	x8, #0x1
  42a1bc:	b.ne	42a338 <_obstack_memory_used@@Base+0xc19c>  // b.any
  42a1c0:	ldur	x8, [x29, #-16]
  42a1c4:	ldr	x8, [x8, #40]
  42a1c8:	ldr	x9, [sp, #40]
  42a1cc:	mov	x10, #0x18                  	// #24
  42a1d0:	mul	x9, x10, x9
  42a1d4:	add	x8, x8, x9
  42a1d8:	ldr	x8, [x8, #16]
  42a1dc:	ldr	x8, [x8]
  42a1e0:	str	x8, [sp, #16]
  42a1e4:	ldur	x8, [x29, #-16]
  42a1e8:	ldr	x8, [x8, #40]
  42a1ec:	ldr	x9, [sp, #32]
  42a1f0:	mul	x9, x10, x9
  42a1f4:	add	x8, x8, x9
  42a1f8:	str	xzr, [x8, #8]
  42a1fc:	ldr	x8, [sp, #40]
  42a200:	ldur	x9, [x29, #-40]
  42a204:	cmp	x8, x9
  42a208:	b.ne	42a270 <_obstack_memory_used@@Base+0xc0d4>  // b.any
  42a20c:	ldr	x8, [sp, #32]
  42a210:	ldr	x9, [sp, #40]
  42a214:	cmp	x8, x9
  42a218:	b.eq	42a270 <_obstack_memory_used@@Base+0xc0d4>  // b.none
  42a21c:	ldur	x8, [x29, #-16]
  42a220:	ldr	x8, [x8, #40]
  42a224:	ldr	x9, [sp, #32]
  42a228:	mov	x10, #0x18                  	// #24
  42a22c:	mul	x9, x10, x9
  42a230:	add	x0, x8, x9
  42a234:	ldr	x1, [sp, #16]
  42a238:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  42a23c:	mov	w11, #0x1                   	// #1
  42a240:	and	w11, w0, w11
  42a244:	strb	w11, [sp, #31]
  42a248:	ldrb	w11, [sp, #31]
  42a24c:	eor	w11, w11, #0x1
  42a250:	and	w11, w11, #0x1
  42a254:	mov	w1, w11
  42a258:	sxtw	x8, w1
  42a25c:	cbz	x8, 42a26c <_obstack_memory_used@@Base+0xc0d0>
  42a260:	mov	w8, #0xc                   	// #12
  42a264:	stur	w8, [x29, #-4]
  42a268:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a26c:	b	42a588 <_obstack_memory_used@@Base+0xc3ec>
  42a270:	ldur	x8, [x29, #-16]
  42a274:	ldr	x8, [x8]
  42a278:	ldr	x9, [sp, #40]
  42a27c:	mov	x10, #0x10                  	// #16
  42a280:	mul	x9, x10, x9
  42a284:	add	x8, x8, x9
  42a288:	mov	x9, #0x8                   	// #8
  42a28c:	ldr	w11, [x8, #8]
  42a290:	lsr	w9, w11, w9
  42a294:	and	w9, w9, #0x3ff
  42a298:	ldr	w11, [sp, #24]
  42a29c:	orr	w9, w11, w9
  42a2a0:	str	w9, [sp, #24]
  42a2a4:	ldur	x0, [x29, #-16]
  42a2a8:	ldr	x1, [sp, #16]
  42a2ac:	ldr	w2, [sp, #24]
  42a2b0:	bl	42abe0 <_obstack_memory_used@@Base+0xca44>
  42a2b4:	str	x0, [sp, #8]
  42a2b8:	ldr	x8, [sp, #8]
  42a2bc:	mov	x10, #0xffffffffffffffff    	// #-1
  42a2c0:	cmp	x8, x10
  42a2c4:	cset	w9, eq  // eq = none
  42a2c8:	and	w9, w9, #0x1
  42a2cc:	mov	w0, w9
  42a2d0:	sxtw	x8, w0
  42a2d4:	cbz	x8, 42a2e4 <_obstack_memory_used@@Base+0xc148>
  42a2d8:	mov	w8, #0xc                   	// #12
  42a2dc:	stur	w8, [x29, #-4]
  42a2e0:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a2e4:	ldur	x8, [x29, #-16]
  42a2e8:	ldr	x8, [x8, #40]
  42a2ec:	ldr	x9, [sp, #32]
  42a2f0:	mov	x10, #0x18                  	// #24
  42a2f4:	mul	x9, x10, x9
  42a2f8:	add	x0, x8, x9
  42a2fc:	ldr	x1, [sp, #8]
  42a300:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  42a304:	mov	w11, #0x1                   	// #1
  42a308:	and	w11, w0, w11
  42a30c:	strb	w11, [sp, #31]
  42a310:	ldrb	w11, [sp, #31]
  42a314:	eor	w11, w11, #0x1
  42a318:	and	w11, w11, #0x1
  42a31c:	mov	w1, w11
  42a320:	sxtw	x8, w1
  42a324:	cbz	x8, 42a334 <_obstack_memory_used@@Base+0xc198>
  42a328:	mov	w8, #0xc                   	// #12
  42a32c:	stur	w8, [x29, #-4]
  42a330:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a334:	b	42a574 <_obstack_memory_used@@Base+0xc3d8>
  42a338:	ldur	x8, [x29, #-16]
  42a33c:	ldr	x8, [x8, #40]
  42a340:	ldr	x9, [sp, #40]
  42a344:	mov	x10, #0x18                  	// #24
  42a348:	mul	x9, x10, x9
  42a34c:	add	x8, x8, x9
  42a350:	ldr	x8, [x8, #16]
  42a354:	ldr	x8, [x8]
  42a358:	str	x8, [sp, #16]
  42a35c:	ldur	x8, [x29, #-16]
  42a360:	ldr	x8, [x8, #40]
  42a364:	ldr	x9, [sp, #32]
  42a368:	mul	x9, x10, x9
  42a36c:	add	x8, x8, x9
  42a370:	str	xzr, [x8, #8]
  42a374:	ldur	x0, [x29, #-16]
  42a378:	ldr	x1, [sp, #16]
  42a37c:	ldr	w2, [sp, #24]
  42a380:	bl	42ad24 <_obstack_memory_used@@Base+0xcb88>
  42a384:	str	x0, [sp, #8]
  42a388:	ldr	x8, [sp, #8]
  42a38c:	mov	x9, #0xffffffffffffffff    	// #-1
  42a390:	cmp	x8, x9
  42a394:	b.ne	42a470 <_obstack_memory_used@@Base+0xc2d4>  // b.any
  42a398:	ldur	x0, [x29, #-16]
  42a39c:	ldr	x1, [sp, #16]
  42a3a0:	ldr	w2, [sp, #24]
  42a3a4:	bl	42abe0 <_obstack_memory_used@@Base+0xca44>
  42a3a8:	str	x0, [sp, #8]
  42a3ac:	ldr	x8, [sp, #8]
  42a3b0:	mov	x9, #0xffffffffffffffff    	// #-1
  42a3b4:	cmp	x8, x9
  42a3b8:	cset	w10, eq  // eq = none
  42a3bc:	and	w10, w10, #0x1
  42a3c0:	mov	w0, w10
  42a3c4:	sxtw	x8, w0
  42a3c8:	cbz	x8, 42a3d8 <_obstack_memory_used@@Base+0xc23c>
  42a3cc:	mov	w8, #0xc                   	// #12
  42a3d0:	stur	w8, [x29, #-4]
  42a3d4:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a3d8:	ldur	x8, [x29, #-16]
  42a3dc:	ldr	x8, [x8, #40]
  42a3e0:	ldr	x9, [sp, #32]
  42a3e4:	mov	x10, #0x18                  	// #24
  42a3e8:	mul	x9, x10, x9
  42a3ec:	add	x0, x8, x9
  42a3f0:	ldr	x1, [sp, #8]
  42a3f4:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  42a3f8:	mov	w11, #0x1                   	// #1
  42a3fc:	and	w11, w0, w11
  42a400:	strb	w11, [sp, #31]
  42a404:	ldrb	w11, [sp, #31]
  42a408:	eor	w11, w11, #0x1
  42a40c:	and	w11, w11, #0x1
  42a410:	mov	w1, w11
  42a414:	sxtw	x8, w1
  42a418:	cbz	x8, 42a428 <_obstack_memory_used@@Base+0xc28c>
  42a41c:	mov	w8, #0xc                   	// #12
  42a420:	stur	w8, [x29, #-4]
  42a424:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a428:	ldur	x0, [x29, #-16]
  42a42c:	ldr	x1, [sp, #16]
  42a430:	ldr	x2, [sp, #8]
  42a434:	ldur	x3, [x29, #-40]
  42a438:	ldr	w4, [sp, #24]
  42a43c:	bl	42a014 <_obstack_memory_used@@Base+0xbe78>
  42a440:	str	w0, [sp, #4]
  42a444:	ldr	w8, [sp, #4]
  42a448:	cmp	w8, #0x0
  42a44c:	cset	w8, ne  // ne = any
  42a450:	and	w8, w8, #0x1
  42a454:	mov	w1, w8
  42a458:	sxtw	x9, w1
  42a45c:	cbz	x9, 42a46c <_obstack_memory_used@@Base+0xc2d0>
  42a460:	ldr	w8, [sp, #4]
  42a464:	stur	w8, [x29, #-4]
  42a468:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a46c:	b	42a4c0 <_obstack_memory_used@@Base+0xc324>
  42a470:	ldur	x8, [x29, #-16]
  42a474:	ldr	x8, [x8, #40]
  42a478:	ldr	x9, [sp, #32]
  42a47c:	mov	x10, #0x18                  	// #24
  42a480:	mul	x9, x10, x9
  42a484:	add	x0, x8, x9
  42a488:	ldr	x1, [sp, #8]
  42a48c:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  42a490:	mov	w11, #0x1                   	// #1
  42a494:	and	w11, w0, w11
  42a498:	strb	w11, [sp, #31]
  42a49c:	ldrb	w11, [sp, #31]
  42a4a0:	eor	w11, w11, #0x1
  42a4a4:	and	w11, w11, #0x1
  42a4a8:	mov	w1, w11
  42a4ac:	sxtw	x8, w1
  42a4b0:	cbz	x8, 42a4c0 <_obstack_memory_used@@Base+0xc324>
  42a4b4:	mov	w8, #0xc                   	// #12
  42a4b8:	stur	w8, [x29, #-4]
  42a4bc:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a4c0:	ldur	x8, [x29, #-16]
  42a4c4:	ldr	x8, [x8, #40]
  42a4c8:	ldr	x9, [sp, #40]
  42a4cc:	mov	x10, #0x18                  	// #24
  42a4d0:	mul	x9, x10, x9
  42a4d4:	add	x8, x8, x9
  42a4d8:	ldr	x8, [x8, #16]
  42a4dc:	ldr	x8, [x8, #8]
  42a4e0:	str	x8, [sp, #16]
  42a4e4:	ldur	x0, [x29, #-16]
  42a4e8:	ldr	x1, [sp, #16]
  42a4ec:	ldr	w2, [sp, #24]
  42a4f0:	bl	42abe0 <_obstack_memory_used@@Base+0xca44>
  42a4f4:	str	x0, [sp, #8]
  42a4f8:	ldr	x8, [sp, #8]
  42a4fc:	mov	x9, #0xffffffffffffffff    	// #-1
  42a500:	cmp	x8, x9
  42a504:	cset	w11, eq  // eq = none
  42a508:	and	w11, w11, #0x1
  42a50c:	mov	w0, w11
  42a510:	sxtw	x8, w0
  42a514:	cbz	x8, 42a524 <_obstack_memory_used@@Base+0xc388>
  42a518:	mov	w8, #0xc                   	// #12
  42a51c:	stur	w8, [x29, #-4]
  42a520:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a524:	ldur	x8, [x29, #-16]
  42a528:	ldr	x8, [x8, #40]
  42a52c:	ldr	x9, [sp, #32]
  42a530:	mov	x10, #0x18                  	// #24
  42a534:	mul	x9, x10, x9
  42a538:	add	x0, x8, x9
  42a53c:	ldr	x1, [sp, #8]
  42a540:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  42a544:	mov	w11, #0x1                   	// #1
  42a548:	and	w11, w0, w11
  42a54c:	strb	w11, [sp, #31]
  42a550:	ldrb	w11, [sp, #31]
  42a554:	eor	w11, w11, #0x1
  42a558:	and	w11, w11, #0x1
  42a55c:	mov	w1, w11
  42a560:	sxtw	x8, w1
  42a564:	cbz	x8, 42a574 <_obstack_memory_used@@Base+0xc3d8>
  42a568:	mov	w8, #0xc                   	// #12
  42a56c:	stur	w8, [x29, #-4]
  42a570:	b	42a58c <_obstack_memory_used@@Base+0xc3f0>
  42a574:	ldr	x8, [sp, #16]
  42a578:	str	x8, [sp, #40]
  42a57c:	ldr	x8, [sp, #8]
  42a580:	str	x8, [sp, #32]
  42a584:	b	42a04c <_obstack_memory_used@@Base+0xbeb0>
  42a588:	stur	wzr, [x29, #-4]
  42a58c:	ldur	w0, [x29, #-4]
  42a590:	ldp	x29, x30, [sp, #96]
  42a594:	add	sp, sp, #0x70
  42a598:	ret
  42a59c:	sub	sp, sp, #0x60
  42a5a0:	stp	x29, x30, [sp, #80]
  42a5a4:	add	x29, sp, #0x50
  42a5a8:	stur	x0, [x29, #-16]
  42a5ac:	stur	x1, [x29, #-24]
  42a5b0:	ldur	x8, [x29, #-24]
  42a5b4:	cbz	x8, 42a5c4 <_obstack_memory_used@@Base+0xc428>
  42a5b8:	ldur	x8, [x29, #-24]
  42a5bc:	ldr	x8, [x8, #8]
  42a5c0:	cbnz	x8, 42a5cc <_obstack_memory_used@@Base+0xc430>
  42a5c4:	stur	wzr, [x29, #-4]
  42a5c8:	b	42a9a4 <_obstack_memory_used@@Base+0xc808>
  42a5cc:	ldur	x8, [x29, #-16]
  42a5d0:	ldr	x8, [x8]
  42a5d4:	ldur	x9, [x29, #-24]
  42a5d8:	ldr	x9, [x9, #8]
  42a5dc:	mov	x10, #0x2                   	// #2
  42a5e0:	mul	x9, x10, x9
  42a5e4:	ldur	x10, [x29, #-16]
  42a5e8:	ldr	x10, [x10, #8]
  42a5ec:	add	x9, x9, x10
  42a5f0:	cmp	x8, x9
  42a5f4:	b.ge	42a674 <_obstack_memory_used@@Base+0xc4d8>  // b.tcont
  42a5f8:	ldur	x8, [x29, #-24]
  42a5fc:	ldr	x8, [x8, #8]
  42a600:	ldur	x9, [x29, #-16]
  42a604:	ldr	x9, [x9]
  42a608:	add	x8, x8, x9
  42a60c:	mov	x9, #0x2                   	// #2
  42a610:	mul	x8, x9, x8
  42a614:	str	x8, [sp, #16]
  42a618:	ldur	x8, [x29, #-16]
  42a61c:	ldr	x0, [x8, #16]
  42a620:	ldr	x8, [sp, #16]
  42a624:	mov	x9, #0x8                   	// #8
  42a628:	mul	x1, x8, x9
  42a62c:	bl	4029c0 <realloc@plt>
  42a630:	str	x0, [sp, #8]
  42a634:	ldr	x8, [sp, #8]
  42a638:	cmp	x8, #0x0
  42a63c:	cset	w10, eq  // eq = none
  42a640:	and	w10, w10, #0x1
  42a644:	mov	w0, w10
  42a648:	sxtw	x8, w0
  42a64c:	cbz	x8, 42a65c <_obstack_memory_used@@Base+0xc4c0>
  42a650:	mov	w8, #0xc                   	// #12
  42a654:	stur	w8, [x29, #-4]
  42a658:	b	42a9a4 <_obstack_memory_used@@Base+0xc808>
  42a65c:	ldr	x8, [sp, #8]
  42a660:	ldur	x9, [x29, #-16]
  42a664:	str	x8, [x9, #16]
  42a668:	ldr	x8, [sp, #16]
  42a66c:	ldur	x9, [x29, #-16]
  42a670:	str	x8, [x9]
  42a674:	ldur	x8, [x29, #-16]
  42a678:	ldr	x8, [x8, #8]
  42a67c:	cmp	x8, #0x0
  42a680:	cset	w9, eq  // eq = none
  42a684:	and	w9, w9, #0x1
  42a688:	mov	w0, w9
  42a68c:	sxtw	x8, w0
  42a690:	cbz	x8, 42a6d0 <_obstack_memory_used@@Base+0xc534>
  42a694:	ldur	x8, [x29, #-24]
  42a698:	ldr	x8, [x8, #8]
  42a69c:	ldur	x9, [x29, #-16]
  42a6a0:	str	x8, [x9, #8]
  42a6a4:	ldur	x8, [x29, #-16]
  42a6a8:	ldr	x0, [x8, #16]
  42a6ac:	ldur	x8, [x29, #-24]
  42a6b0:	ldr	x1, [x8, #16]
  42a6b4:	ldur	x8, [x29, #-24]
  42a6b8:	ldr	x8, [x8, #8]
  42a6bc:	mov	x9, #0x8                   	// #8
  42a6c0:	mul	x2, x8, x9
  42a6c4:	bl	4026a0 <memcpy@plt>
  42a6c8:	stur	wzr, [x29, #-4]
  42a6cc:	b	42a9a4 <_obstack_memory_used@@Base+0xc808>
  42a6d0:	ldur	x8, [x29, #-16]
  42a6d4:	ldr	x8, [x8, #8]
  42a6d8:	ldur	x9, [x29, #-24]
  42a6dc:	ldr	x9, [x9, #8]
  42a6e0:	mov	x10, #0x2                   	// #2
  42a6e4:	mul	x9, x10, x9
  42a6e8:	add	x8, x8, x9
  42a6ec:	str	x8, [sp, #32]
  42a6f0:	ldur	x8, [x29, #-24]
  42a6f4:	ldr	x8, [x8, #8]
  42a6f8:	subs	x8, x8, #0x1
  42a6fc:	stur	x8, [x29, #-32]
  42a700:	ldur	x8, [x29, #-16]
  42a704:	ldr	x8, [x8, #8]
  42a708:	subs	x8, x8, #0x1
  42a70c:	str	x8, [sp, #40]
  42a710:	ldur	x8, [x29, #-32]
  42a714:	cmp	x8, #0x0
  42a718:	cset	w9, lt  // lt = tstop
  42a71c:	mov	w10, #0x0                   	// #0
  42a720:	str	w10, [sp, #4]
  42a724:	tbnz	w9, #0, 42a738 <_obstack_memory_used@@Base+0xc59c>
  42a728:	ldr	x8, [sp, #40]
  42a72c:	cmp	x8, #0x0
  42a730:	cset	w9, ge  // ge = tcont
  42a734:	str	w9, [sp, #4]
  42a738:	ldr	w8, [sp, #4]
  42a73c:	tbnz	w8, #0, 42a744 <_obstack_memory_used@@Base+0xc5a8>
  42a740:	b	42a7f4 <_obstack_memory_used@@Base+0xc658>
  42a744:	ldur	x8, [x29, #-16]
  42a748:	ldr	x8, [x8, #16]
  42a74c:	ldr	x9, [sp, #40]
  42a750:	ldr	x8, [x8, x9, lsl #3]
  42a754:	ldur	x9, [x29, #-24]
  42a758:	ldr	x9, [x9, #16]
  42a75c:	ldur	x10, [x29, #-32]
  42a760:	ldr	x9, [x9, x10, lsl #3]
  42a764:	cmp	x8, x9
  42a768:	b.ne	42a788 <_obstack_memory_used@@Base+0xc5ec>  // b.any
  42a76c:	ldur	x8, [x29, #-32]
  42a770:	subs	x8, x8, #0x1
  42a774:	stur	x8, [x29, #-32]
  42a778:	ldr	x8, [sp, #40]
  42a77c:	subs	x8, x8, #0x1
  42a780:	str	x8, [sp, #40]
  42a784:	b	42a7f0 <_obstack_memory_used@@Base+0xc654>
  42a788:	ldur	x8, [x29, #-16]
  42a78c:	ldr	x8, [x8, #16]
  42a790:	ldr	x9, [sp, #40]
  42a794:	ldr	x8, [x8, x9, lsl #3]
  42a798:	ldur	x9, [x29, #-24]
  42a79c:	ldr	x9, [x9, #16]
  42a7a0:	ldur	x10, [x29, #-32]
  42a7a4:	ldr	x9, [x9, x10, lsl #3]
  42a7a8:	cmp	x8, x9
  42a7ac:	b.ge	42a7e4 <_obstack_memory_used@@Base+0xc648>  // b.tcont
  42a7b0:	ldur	x8, [x29, #-24]
  42a7b4:	ldr	x8, [x8, #16]
  42a7b8:	ldur	x9, [x29, #-32]
  42a7bc:	subs	x10, x9, #0x1
  42a7c0:	stur	x10, [x29, #-32]
  42a7c4:	ldr	x8, [x8, x9, lsl #3]
  42a7c8:	ldur	x9, [x29, #-16]
  42a7cc:	ldr	x9, [x9, #16]
  42a7d0:	ldr	x10, [sp, #32]
  42a7d4:	subs	x10, x10, #0x1
  42a7d8:	str	x10, [sp, #32]
  42a7dc:	str	x8, [x9, x10, lsl #3]
  42a7e0:	b	42a7f0 <_obstack_memory_used@@Base+0xc654>
  42a7e4:	ldr	x8, [sp, #40]
  42a7e8:	subs	x8, x8, #0x1
  42a7ec:	str	x8, [sp, #40]
  42a7f0:	b	42a710 <_obstack_memory_used@@Base+0xc574>
  42a7f4:	ldur	x8, [x29, #-32]
  42a7f8:	cmp	x8, #0x0
  42a7fc:	cset	w9, lt  // lt = tstop
  42a800:	tbnz	w9, #0, 42a84c <_obstack_memory_used@@Base+0xc6b0>
  42a804:	ldur	x8, [x29, #-32]
  42a808:	add	x8, x8, #0x1
  42a80c:	ldr	x9, [sp, #32]
  42a810:	subs	x8, x9, x8
  42a814:	str	x8, [sp, #32]
  42a818:	ldur	x8, [x29, #-16]
  42a81c:	ldr	x8, [x8, #16]
  42a820:	ldr	x9, [sp, #32]
  42a824:	mov	x10, #0x8                   	// #8
  42a828:	mul	x9, x10, x9
  42a82c:	add	x0, x8, x9
  42a830:	ldur	x8, [x29, #-24]
  42a834:	ldr	x1, [x8, #16]
  42a838:	ldur	x8, [x29, #-32]
  42a83c:	add	x8, x8, #0x1
  42a840:	mov	x9, #0x8                   	// #8
  42a844:	mul	x2, x8, x9
  42a848:	bl	4026a0 <memcpy@plt>
  42a84c:	ldur	x8, [x29, #-16]
  42a850:	ldr	x8, [x8, #8]
  42a854:	subs	x8, x8, #0x1
  42a858:	str	x8, [sp, #40]
  42a85c:	ldur	x8, [x29, #-16]
  42a860:	ldr	x8, [x8, #8]
  42a864:	ldur	x9, [x29, #-24]
  42a868:	ldr	x9, [x9, #8]
  42a86c:	mov	x10, #0x2                   	// #2
  42a870:	mul	x9, x10, x9
  42a874:	add	x8, x8, x9
  42a878:	subs	x8, x8, #0x1
  42a87c:	stur	x8, [x29, #-32]
  42a880:	ldur	x8, [x29, #-32]
  42a884:	ldr	x9, [sp, #32]
  42a888:	subs	x8, x8, x9
  42a88c:	add	x8, x8, #0x1
  42a890:	str	x8, [sp, #24]
  42a894:	ldr	x8, [sp, #24]
  42a898:	cbnz	x8, 42a8a4 <_obstack_memory_used@@Base+0xc708>
  42a89c:	stur	wzr, [x29, #-4]
  42a8a0:	b	42a9a4 <_obstack_memory_used@@Base+0xc808>
  42a8a4:	ldr	x8, [sp, #24]
  42a8a8:	ldur	x9, [x29, #-16]
  42a8ac:	ldr	x10, [x9, #8]
  42a8b0:	add	x8, x10, x8
  42a8b4:	str	x8, [x9, #8]
  42a8b8:	ldur	x8, [x29, #-16]
  42a8bc:	ldr	x8, [x8, #16]
  42a8c0:	ldur	x9, [x29, #-32]
  42a8c4:	ldr	x8, [x8, x9, lsl #3]
  42a8c8:	ldur	x9, [x29, #-16]
  42a8cc:	ldr	x9, [x9, #16]
  42a8d0:	ldr	x10, [sp, #40]
  42a8d4:	ldr	x9, [x9, x10, lsl #3]
  42a8d8:	cmp	x8, x9
  42a8dc:	b.le	42a928 <_obstack_memory_used@@Base+0xc78c>
  42a8e0:	ldur	x8, [x29, #-16]
  42a8e4:	ldr	x8, [x8, #16]
  42a8e8:	ldur	x9, [x29, #-32]
  42a8ec:	subs	x10, x9, #0x1
  42a8f0:	stur	x10, [x29, #-32]
  42a8f4:	ldr	x8, [x8, x9, lsl #3]
  42a8f8:	ldur	x9, [x29, #-16]
  42a8fc:	ldr	x9, [x9, #16]
  42a900:	ldr	x10, [sp, #40]
  42a904:	ldr	x11, [sp, #24]
  42a908:	subs	x12, x11, #0x1
  42a90c:	str	x12, [sp, #24]
  42a910:	add	x10, x10, x11
  42a914:	str	x8, [x9, x10, lsl #3]
  42a918:	ldr	x8, [sp, #24]
  42a91c:	cbnz	x8, 42a924 <_obstack_memory_used@@Base+0xc788>
  42a920:	b	42a9a0 <_obstack_memory_used@@Base+0xc804>
  42a924:	b	42a99c <_obstack_memory_used@@Base+0xc800>
  42a928:	ldur	x8, [x29, #-16]
  42a92c:	ldr	x8, [x8, #16]
  42a930:	ldr	x9, [sp, #40]
  42a934:	ldr	x8, [x8, x9, lsl #3]
  42a938:	ldur	x9, [x29, #-16]
  42a93c:	ldr	x9, [x9, #16]
  42a940:	ldr	x10, [sp, #40]
  42a944:	ldr	x11, [sp, #24]
  42a948:	add	x10, x10, x11
  42a94c:	str	x8, [x9, x10, lsl #3]
  42a950:	ldr	x8, [sp, #40]
  42a954:	subs	x8, x8, #0x1
  42a958:	str	x8, [sp, #40]
  42a95c:	cmp	x8, #0x0
  42a960:	cset	w12, ge  // ge = tcont
  42a964:	tbnz	w12, #0, 42a99c <_obstack_memory_used@@Base+0xc800>
  42a968:	ldur	x8, [x29, #-16]
  42a96c:	ldr	x0, [x8, #16]
  42a970:	ldur	x8, [x29, #-16]
  42a974:	ldr	x8, [x8, #16]
  42a978:	ldr	x9, [sp, #32]
  42a97c:	mov	x10, #0x8                   	// #8
  42a980:	mul	x9, x10, x9
  42a984:	add	x1, x8, x9
  42a988:	ldr	x8, [sp, #24]
  42a98c:	mov	x9, #0x8                   	// #8
  42a990:	mul	x2, x8, x9
  42a994:	bl	4026a0 <memcpy@plt>
  42a998:	b	42a9a0 <_obstack_memory_used@@Base+0xc804>
  42a99c:	b	42a8b8 <_obstack_memory_used@@Base+0xc71c>
  42a9a0:	stur	wzr, [x29, #-4]
  42a9a4:	ldur	w0, [x29, #-4]
  42a9a8:	ldp	x29, x30, [sp, #80]
  42a9ac:	add	sp, sp, #0x60
  42a9b0:	ret
  42a9b4:	sub	sp, sp, #0x40
  42a9b8:	stp	x29, x30, [sp, #48]
  42a9bc:	add	x29, sp, #0x30
  42a9c0:	stur	x0, [x29, #-16]
  42a9c4:	str	x1, [sp, #24]
  42a9c8:	ldur	x8, [x29, #-16]
  42a9cc:	ldr	x8, [x8]
  42a9d0:	cbnz	x8, 42aa0c <_obstack_memory_used@@Base+0xc870>
  42a9d4:	ldur	x0, [x29, #-16]
  42a9d8:	ldr	x1, [sp, #24]
  42a9dc:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  42a9e0:	cmp	w0, #0x0
  42a9e4:	cset	w8, eq  // eq = none
  42a9e8:	mov	w9, #0x1                   	// #1
  42a9ec:	and	w8, w8, #0x1
  42a9f0:	mov	w1, w8
  42a9f4:	sxtw	x10, w1
  42a9f8:	cmp	x10, #0x0
  42a9fc:	cset	w8, ne  // ne = any
  42aa00:	and	w8, w8, w9
  42aa04:	sturb	w8, [x29, #-1]
  42aa08:	b	42abcc <_obstack_memory_used@@Base+0xca30>
  42aa0c:	ldur	x8, [x29, #-16]
  42aa10:	ldr	x8, [x8, #8]
  42aa14:	cbnz	x8, 42aa48 <_obstack_memory_used@@Base+0xc8ac>
  42aa18:	ldr	x8, [sp, #24]
  42aa1c:	ldur	x9, [x29, #-16]
  42aa20:	ldr	x9, [x9, #16]
  42aa24:	str	x8, [x9]
  42aa28:	ldur	x8, [x29, #-16]
  42aa2c:	ldr	x9, [x8, #8]
  42aa30:	add	x9, x9, #0x1
  42aa34:	str	x9, [x8, #8]
  42aa38:	mov	w10, #0x1                   	// #1
  42aa3c:	and	w10, w10, #0x1
  42aa40:	sturb	w10, [x29, #-1]
  42aa44:	b	42abcc <_obstack_memory_used@@Base+0xca30>
  42aa48:	ldur	x8, [x29, #-16]
  42aa4c:	ldr	x8, [x8]
  42aa50:	ldur	x9, [x29, #-16]
  42aa54:	ldr	x9, [x9, #8]
  42aa58:	cmp	x8, x9
  42aa5c:	b.ne	42aad0 <_obstack_memory_used@@Base+0xc934>  // b.any
  42aa60:	ldur	x8, [x29, #-16]
  42aa64:	ldr	x8, [x8]
  42aa68:	mov	x9, #0x2                   	// #2
  42aa6c:	mul	x8, x8, x9
  42aa70:	ldur	x9, [x29, #-16]
  42aa74:	str	x8, [x9]
  42aa78:	ldur	x8, [x29, #-16]
  42aa7c:	ldr	x0, [x8, #16]
  42aa80:	ldur	x8, [x29, #-16]
  42aa84:	ldr	x8, [x8]
  42aa88:	mov	x9, #0x8                   	// #8
  42aa8c:	mul	x1, x8, x9
  42aa90:	bl	4029c0 <realloc@plt>
  42aa94:	str	x0, [sp, #8]
  42aa98:	ldr	x8, [sp, #8]
  42aa9c:	cmp	x8, #0x0
  42aaa0:	cset	w10, eq  // eq = none
  42aaa4:	and	w10, w10, #0x1
  42aaa8:	mov	w0, w10
  42aaac:	sxtw	x8, w0
  42aab0:	cbz	x8, 42aac4 <_obstack_memory_used@@Base+0xc928>
  42aab4:	mov	w8, wzr
  42aab8:	and	w8, w8, #0x1
  42aabc:	sturb	w8, [x29, #-1]
  42aac0:	b	42abcc <_obstack_memory_used@@Base+0xca30>
  42aac4:	ldr	x8, [sp, #8]
  42aac8:	ldur	x9, [x29, #-16]
  42aacc:	str	x8, [x9, #16]
  42aad0:	ldr	x8, [sp, #24]
  42aad4:	ldur	x9, [x29, #-16]
  42aad8:	ldr	x9, [x9, #16]
  42aadc:	ldr	x9, [x9]
  42aae0:	cmp	x8, x9
  42aae4:	b.ge	42ab3c <_obstack_memory_used@@Base+0xc9a0>  // b.tcont
  42aae8:	ldur	x8, [x29, #-16]
  42aaec:	ldr	x8, [x8, #8]
  42aaf0:	str	x8, [sp, #16]
  42aaf4:	ldr	x8, [sp, #16]
  42aaf8:	cmp	x8, #0x0
  42aafc:	cset	w9, le
  42ab00:	tbnz	w9, #0, 42ab38 <_obstack_memory_used@@Base+0xc99c>
  42ab04:	ldur	x8, [x29, #-16]
  42ab08:	ldr	x8, [x8, #16]
  42ab0c:	ldr	x9, [sp, #16]
  42ab10:	subs	x9, x9, #0x1
  42ab14:	ldr	x8, [x8, x9, lsl #3]
  42ab18:	ldur	x9, [x29, #-16]
  42ab1c:	ldr	x9, [x9, #16]
  42ab20:	ldr	x10, [sp, #16]
  42ab24:	str	x8, [x9, x10, lsl #3]
  42ab28:	ldr	x8, [sp, #16]
  42ab2c:	subs	x8, x8, #0x1
  42ab30:	str	x8, [sp, #16]
  42ab34:	b	42aaf4 <_obstack_memory_used@@Base+0xc958>
  42ab38:	b	42ab9c <_obstack_memory_used@@Base+0xca00>
  42ab3c:	ldur	x8, [x29, #-16]
  42ab40:	ldr	x8, [x8, #8]
  42ab44:	str	x8, [sp, #16]
  42ab48:	ldur	x8, [x29, #-16]
  42ab4c:	ldr	x8, [x8, #16]
  42ab50:	ldr	x9, [sp, #16]
  42ab54:	subs	x9, x9, #0x1
  42ab58:	ldr	x8, [x8, x9, lsl #3]
  42ab5c:	ldr	x9, [sp, #24]
  42ab60:	cmp	x8, x9
  42ab64:	b.le	42ab9c <_obstack_memory_used@@Base+0xca00>
  42ab68:	ldur	x8, [x29, #-16]
  42ab6c:	ldr	x8, [x8, #16]
  42ab70:	ldr	x9, [sp, #16]
  42ab74:	subs	x9, x9, #0x1
  42ab78:	ldr	x8, [x8, x9, lsl #3]
  42ab7c:	ldur	x9, [x29, #-16]
  42ab80:	ldr	x9, [x9, #16]
  42ab84:	ldr	x10, [sp, #16]
  42ab88:	str	x8, [x9, x10, lsl #3]
  42ab8c:	ldr	x8, [sp, #16]
  42ab90:	subs	x8, x8, #0x1
  42ab94:	str	x8, [sp, #16]
  42ab98:	b	42ab48 <_obstack_memory_used@@Base+0xc9ac>
  42ab9c:	ldr	x8, [sp, #24]
  42aba0:	ldur	x9, [x29, #-16]
  42aba4:	ldr	x9, [x9, #16]
  42aba8:	ldr	x10, [sp, #16]
  42abac:	str	x8, [x9, x10, lsl #3]
  42abb0:	ldur	x8, [x29, #-16]
  42abb4:	ldr	x9, [x8, #8]
  42abb8:	add	x9, x9, #0x1
  42abbc:	str	x9, [x8, #8]
  42abc0:	mov	w11, #0x1                   	// #1
  42abc4:	and	w11, w11, #0x1
  42abc8:	sturb	w11, [x29, #-1]
  42abcc:	ldurb	w8, [x29, #-1]
  42abd0:	and	w0, w8, #0x1
  42abd4:	ldp	x29, x30, [sp, #48]
  42abd8:	add	sp, sp, #0x40
  42abdc:	ret
  42abe0:	sub	sp, sp, #0x40
  42abe4:	stp	x29, x30, [sp, #48]
  42abe8:	add	x29, sp, #0x30
  42abec:	mov	x8, #0xffffffffffffffff    	// #-1
  42abf0:	stur	x0, [x29, #-8]
  42abf4:	stur	x1, [x29, #-16]
  42abf8:	stur	w2, [x29, #-20]
  42abfc:	ldur	x0, [x29, #-8]
  42ac00:	ldur	x9, [x29, #-8]
  42ac04:	ldr	x9, [x9]
  42ac08:	ldur	x10, [x29, #-16]
  42ac0c:	mov	x11, #0x10                  	// #16
  42ac10:	mul	x10, x11, x10
  42ac14:	add	x9, x9, x10
  42ac18:	ldr	x1, [x9]
  42ac1c:	ldr	x2, [x9, #8]
  42ac20:	str	x8, [sp, #8]
  42ac24:	bl	429690 <_obstack_memory_used@@Base+0xb4f4>
  42ac28:	str	x0, [sp, #16]
  42ac2c:	ldr	x8, [sp, #16]
  42ac30:	ldr	x9, [sp, #8]
  42ac34:	cmp	x8, x9
  42ac38:	cset	w12, ne  // ne = any
  42ac3c:	and	w12, w12, #0x1
  42ac40:	mov	w0, w12
  42ac44:	sxtw	x8, w0
  42ac48:	cbz	x8, 42ad14 <_obstack_memory_used@@Base+0xcb78>
  42ac4c:	ldur	w8, [x29, #-20]
  42ac50:	ldur	x9, [x29, #-8]
  42ac54:	ldr	x9, [x9]
  42ac58:	ldr	x10, [sp, #16]
  42ac5c:	mov	x11, #0x10                  	// #16
  42ac60:	mul	x10, x11, x10
  42ac64:	add	x9, x9, x10
  42ac68:	mov	x10, #0x8                   	// #8
  42ac6c:	ldr	w12, [x9, #8]
  42ac70:	and	w8, w8, #0x3ff
  42ac74:	and	w12, w12, #0xfffc00ff
  42ac78:	orr	w8, w12, w8, lsl #8
  42ac7c:	str	w8, [x9, #8]
  42ac80:	ldur	x9, [x29, #-8]
  42ac84:	ldr	x9, [x9]
  42ac88:	ldur	x13, [x29, #-16]
  42ac8c:	mul	x13, x11, x13
  42ac90:	add	x9, x9, x13
  42ac94:	ldr	w8, [x9, #8]
  42ac98:	mov	x0, x10
  42ac9c:	lsr	w8, w8, w0
  42aca0:	and	w8, w8, #0x3ff
  42aca4:	ldur	x9, [x29, #-8]
  42aca8:	ldr	x9, [x9]
  42acac:	ldr	x13, [sp, #16]
  42acb0:	mul	x13, x11, x13
  42acb4:	add	x9, x9, x13
  42acb8:	ldr	w12, [x9, #8]
  42acbc:	lsr	w10, w12, w10
  42acc0:	and	w10, w10, #0x3ff
  42acc4:	orr	w8, w10, w8
  42acc8:	ldr	w10, [x9, #8]
  42accc:	and	w8, w8, #0x3ff
  42acd0:	and	w10, w10, #0xfffc00ff
  42acd4:	orr	w8, w10, w8, lsl #8
  42acd8:	str	w8, [x9, #8]
  42acdc:	ldur	x9, [x29, #-8]
  42ace0:	ldr	x9, [x9]
  42ace4:	ldr	x13, [sp, #16]
  42ace8:	mul	x11, x11, x13
  42acec:	add	x9, x9, x11
  42acf0:	ldr	w8, [x9, #8]
  42acf4:	and	w8, w8, #0xfffbffff
  42acf8:	orr	w8, w8, #0x40000
  42acfc:	str	w8, [x9, #8]
  42ad00:	ldur	x9, [x29, #-16]
  42ad04:	ldur	x11, [x29, #-8]
  42ad08:	ldr	x11, [x11, #32]
  42ad0c:	ldr	x13, [sp, #16]
  42ad10:	str	x9, [x11, x13, lsl #3]
  42ad14:	ldr	x0, [sp, #16]
  42ad18:	ldp	x29, x30, [sp, #48]
  42ad1c:	add	sp, sp, #0x40
  42ad20:	ret
  42ad24:	sub	sp, sp, #0x30
  42ad28:	str	x0, [sp, #32]
  42ad2c:	str	x1, [sp, #24]
  42ad30:	str	w2, [sp, #20]
  42ad34:	ldr	x8, [sp, #32]
  42ad38:	ldr	x8, [x8, #16]
  42ad3c:	subs	x8, x8, #0x1
  42ad40:	str	x8, [sp, #8]
  42ad44:	ldr	x8, [sp, #32]
  42ad48:	ldr	x8, [x8]
  42ad4c:	ldr	x9, [sp, #8]
  42ad50:	mov	x10, #0x10                  	// #16
  42ad54:	mul	x9, x10, x9
  42ad58:	add	x8, x8, x9
  42ad5c:	ldr	w11, [x8, #8]
  42ad60:	lsr	w11, w11, #18
  42ad64:	and	w11, w11, #0x1
  42ad68:	mov	w12, #0x0                   	// #0
  42ad6c:	str	w12, [sp, #4]
  42ad70:	cbz	w11, 42ad84 <_obstack_memory_used@@Base+0xcbe8>
  42ad74:	ldr	x8, [sp, #8]
  42ad78:	cmp	x8, #0x0
  42ad7c:	cset	w9, gt
  42ad80:	str	w9, [sp, #4]
  42ad84:	ldr	w8, [sp, #4]
  42ad88:	tbnz	w8, #0, 42ad90 <_obstack_memory_used@@Base+0xcbf4>
  42ad8c:	b	42adfc <_obstack_memory_used@@Base+0xcc60>
  42ad90:	ldr	x8, [sp, #24]
  42ad94:	ldr	x9, [sp, #32]
  42ad98:	ldr	x9, [x9, #32]
  42ad9c:	ldr	x10, [sp, #8]
  42ada0:	ldr	x9, [x9, x10, lsl #3]
  42ada4:	cmp	x8, x9
  42ada8:	b.ne	42adec <_obstack_memory_used@@Base+0xcc50>  // b.any
  42adac:	ldr	w8, [sp, #20]
  42adb0:	ldr	x9, [sp, #32]
  42adb4:	ldr	x9, [x9]
  42adb8:	ldr	x10, [sp, #8]
  42adbc:	mov	x11, #0x10                  	// #16
  42adc0:	mul	x10, x11, x10
  42adc4:	add	x9, x9, x10
  42adc8:	mov	x10, #0x8                   	// #8
  42adcc:	ldr	w12, [x9, #8]
  42add0:	lsr	w10, w12, w10
  42add4:	and	w10, w10, #0x3ff
  42add8:	cmp	w8, w10
  42addc:	b.ne	42adec <_obstack_memory_used@@Base+0xcc50>  // b.any
  42ade0:	ldr	x8, [sp, #8]
  42ade4:	str	x8, [sp, #40]
  42ade8:	b	42ae04 <_obstack_memory_used@@Base+0xcc68>
  42adec:	ldr	x8, [sp, #8]
  42adf0:	subs	x8, x8, #0x1
  42adf4:	str	x8, [sp, #8]
  42adf8:	b	42ad44 <_obstack_memory_used@@Base+0xcba8>
  42adfc:	mov	x8, #0xffffffffffffffff    	// #-1
  42ae00:	str	x8, [sp, #40]
  42ae04:	ldr	x0, [sp, #40]
  42ae08:	add	sp, sp, #0x30
  42ae0c:	ret
  42ae10:	sub	sp, sp, #0x30
  42ae14:	stp	x29, x30, [sp, #32]
  42ae18:	add	x29, sp, #0x20
  42ae1c:	str	x0, [sp, #16]
  42ae20:	str	x1, [sp, #8]
  42ae24:	ldr	x8, [sp, #16]
  42ae28:	ldr	x8, [x8]
  42ae2c:	ldr	x9, [sp, #16]
  42ae30:	ldr	x9, [x9, #8]
  42ae34:	cmp	x8, x9
  42ae38:	b.ne	42aeb0 <_obstack_memory_used@@Base+0xcd14>  // b.any
  42ae3c:	ldr	x8, [sp, #16]
  42ae40:	ldr	x8, [x8]
  42ae44:	add	x8, x8, #0x1
  42ae48:	mov	x9, #0x2                   	// #2
  42ae4c:	mul	x8, x8, x9
  42ae50:	ldr	x9, [sp, #16]
  42ae54:	str	x8, [x9]
  42ae58:	ldr	x8, [sp, #16]
  42ae5c:	ldr	x0, [x8, #16]
  42ae60:	ldr	x8, [sp, #16]
  42ae64:	ldr	x8, [x8]
  42ae68:	mov	x9, #0x8                   	// #8
  42ae6c:	mul	x1, x8, x9
  42ae70:	bl	4029c0 <realloc@plt>
  42ae74:	str	x0, [sp]
  42ae78:	ldr	x8, [sp]
  42ae7c:	cmp	x8, #0x0
  42ae80:	cset	w10, eq  // eq = none
  42ae84:	and	w10, w10, #0x1
  42ae88:	mov	w0, w10
  42ae8c:	sxtw	x8, w0
  42ae90:	cbz	x8, 42aea4 <_obstack_memory_used@@Base+0xcd08>
  42ae94:	mov	w8, wzr
  42ae98:	and	w8, w8, #0x1
  42ae9c:	sturb	w8, [x29, #-1]
  42aea0:	b	42aedc <_obstack_memory_used@@Base+0xcd40>
  42aea4:	ldr	x8, [sp]
  42aea8:	ldr	x9, [sp, #16]
  42aeac:	str	x8, [x9, #16]
  42aeb0:	ldr	x8, [sp, #8]
  42aeb4:	ldr	x9, [sp, #16]
  42aeb8:	ldr	x9, [x9, #16]
  42aebc:	ldr	x10, [sp, #16]
  42aec0:	ldr	x11, [x10, #8]
  42aec4:	add	x12, x11, #0x1
  42aec8:	str	x12, [x10, #8]
  42aecc:	str	x8, [x9, x11, lsl #3]
  42aed0:	mov	w13, #0x1                   	// #1
  42aed4:	and	w13, w13, #0x1
  42aed8:	sturb	w13, [x29, #-1]
  42aedc:	ldurb	w8, [x29, #-1]
  42aee0:	and	w0, w8, #0x1
  42aee4:	ldp	x29, x30, [sp, #32]
  42aee8:	add	sp, sp, #0x30
  42aeec:	ret
  42aef0:	sub	sp, sp, #0x30
  42aef4:	stp	x29, x30, [sp, #32]
  42aef8:	add	x29, sp, #0x20
  42aefc:	str	x0, [sp, #16]
  42af00:	str	x1, [sp, #8]
  42af04:	ldr	x8, [sp, #8]
  42af08:	ldr	x8, [x8, #8]
  42af0c:	ldr	x9, [sp, #16]
  42af10:	str	x8, [x9, #8]
  42af14:	ldr	x8, [sp, #8]
  42af18:	ldr	x8, [x8, #8]
  42af1c:	cmp	x8, #0x0
  42af20:	cset	w10, le
  42af24:	tbnz	w10, #0, 42afb8 <_obstack_memory_used@@Base+0xce1c>
  42af28:	ldr	x8, [sp, #16]
  42af2c:	ldr	x8, [x8, #8]
  42af30:	ldr	x9, [sp, #16]
  42af34:	str	x8, [x9]
  42af38:	ldr	x8, [sp, #16]
  42af3c:	ldr	x8, [x8]
  42af40:	mov	x9, #0x8                   	// #8
  42af44:	mul	x0, x8, x9
  42af48:	bl	402890 <malloc@plt>
  42af4c:	ldr	x8, [sp, #16]
  42af50:	str	x0, [x8, #16]
  42af54:	ldr	x8, [sp, #16]
  42af58:	ldr	x8, [x8, #16]
  42af5c:	cmp	x8, #0x0
  42af60:	cset	w10, eq  // eq = none
  42af64:	and	w10, w10, #0x1
  42af68:	mov	w0, w10
  42af6c:	sxtw	x8, w0
  42af70:	cbz	x8, 42af90 <_obstack_memory_used@@Base+0xcdf4>
  42af74:	ldr	x8, [sp, #16]
  42af78:	str	xzr, [x8, #8]
  42af7c:	ldr	x8, [sp, #16]
  42af80:	str	xzr, [x8]
  42af84:	mov	w9, #0xc                   	// #12
  42af88:	stur	w9, [x29, #-4]
  42af8c:	b	42afcc <_obstack_memory_used@@Base+0xce30>
  42af90:	ldr	x8, [sp, #16]
  42af94:	ldr	x0, [x8, #16]
  42af98:	ldr	x8, [sp, #8]
  42af9c:	ldr	x1, [x8, #16]
  42afa0:	ldr	x8, [sp, #8]
  42afa4:	ldr	x8, [x8, #8]
  42afa8:	mov	x9, #0x8                   	// #8
  42afac:	mul	x2, x8, x9
  42afb0:	bl	4026a0 <memcpy@plt>
  42afb4:	b	42afc8 <_obstack_memory_used@@Base+0xce2c>
  42afb8:	ldr	x8, [sp, #16]
  42afbc:	str	xzr, [x8]
  42afc0:	str	xzr, [x8, #8]
  42afc4:	str	xzr, [x8, #16]
  42afc8:	stur	wzr, [x29, #-4]
  42afcc:	ldur	w0, [x29, #-4]
  42afd0:	ldp	x29, x30, [sp, #32]
  42afd4:	add	sp, sp, #0x30
  42afd8:	ret
  42afdc:	sub	sp, sp, #0x40
  42afe0:	str	x0, [sp, #48]
  42afe4:	str	x1, [sp, #40]
  42afe8:	ldr	x8, [sp, #48]
  42afec:	ldr	x8, [x8, #8]
  42aff0:	cmp	x8, #0x0
  42aff4:	cset	w9, gt
  42aff8:	tbnz	w9, #0, 42b004 <_obstack_memory_used@@Base+0xce68>
  42affc:	str	xzr, [sp, #56]
  42b000:	b	42b0b4 <_obstack_memory_used@@Base+0xcf18>
  42b004:	str	xzr, [sp, #32]
  42b008:	ldr	x8, [sp, #48]
  42b00c:	ldr	x8, [x8, #8]
  42b010:	subs	x8, x8, #0x1
  42b014:	str	x8, [sp, #24]
  42b018:	ldr	x8, [sp, #32]
  42b01c:	ldr	x9, [sp, #24]
  42b020:	cmp	x8, x9
  42b024:	b.cs	42b078 <_obstack_memory_used@@Base+0xcedc>  // b.hs, b.nlast
  42b028:	ldr	x8, [sp, #32]
  42b02c:	ldr	x9, [sp, #24]
  42b030:	add	x8, x8, x9
  42b034:	mov	x9, #0x2                   	// #2
  42b038:	udiv	x8, x8, x9
  42b03c:	str	x8, [sp, #16]
  42b040:	ldr	x8, [sp, #48]
  42b044:	ldr	x8, [x8, #16]
  42b048:	ldr	x9, [sp, #16]
  42b04c:	ldr	x8, [x8, x9, lsl #3]
  42b050:	ldr	x9, [sp, #40]
  42b054:	cmp	x8, x9
  42b058:	b.ge	42b06c <_obstack_memory_used@@Base+0xced0>  // b.tcont
  42b05c:	ldr	x8, [sp, #16]
  42b060:	add	x8, x8, #0x1
  42b064:	str	x8, [sp, #32]
  42b068:	b	42b074 <_obstack_memory_used@@Base+0xced8>
  42b06c:	ldr	x8, [sp, #16]
  42b070:	str	x8, [sp, #24]
  42b074:	b	42b018 <_obstack_memory_used@@Base+0xce7c>
  42b078:	ldr	x8, [sp, #48]
  42b07c:	ldr	x8, [x8, #16]
  42b080:	ldr	x9, [sp, #32]
  42b084:	ldr	x8, [x8, x9, lsl #3]
  42b088:	ldr	x9, [sp, #40]
  42b08c:	cmp	x8, x9
  42b090:	b.ne	42b0a4 <_obstack_memory_used@@Base+0xcf08>  // b.any
  42b094:	ldr	x8, [sp, #32]
  42b098:	add	x8, x8, #0x1
  42b09c:	str	x8, [sp, #8]
  42b0a0:	b	42b0ac <_obstack_memory_used@@Base+0xcf10>
  42b0a4:	mov	x8, xzr
  42b0a8:	str	x8, [sp, #8]
  42b0ac:	ldr	x8, [sp, #8]
  42b0b0:	str	x8, [sp, #56]
  42b0b4:	ldr	x0, [sp, #56]
  42b0b8:	add	sp, sp, #0x40
  42b0bc:	ret
  42b0c0:	sub	sp, sp, #0x60
  42b0c4:	stp	x29, x30, [sp, #80]
  42b0c8:	add	x29, sp, #0x50
  42b0cc:	stur	x0, [x29, #-16]
  42b0d0:	stur	x1, [x29, #-24]
  42b0d4:	stur	x2, [x29, #-32]
  42b0d8:	stur	w3, [x29, #-36]
  42b0dc:	ldur	x8, [x29, #-32]
  42b0e0:	ldr	x8, [x8, #8]
  42b0e4:	cbnz	x8, 42b0fc <_obstack_memory_used@@Base+0xcf60>
  42b0e8:	ldur	x8, [x29, #-16]
  42b0ec:	str	wzr, [x8]
  42b0f0:	mov	x8, xzr
  42b0f4:	stur	x8, [x29, #-8]
  42b0f8:	b	42b218 <_obstack_memory_used@@Base+0xd07c>
  42b0fc:	ldur	x0, [x29, #-32]
  42b100:	ldur	w1, [x29, #-36]
  42b104:	bl	42b228 <_obstack_memory_used@@Base+0xd08c>
  42b108:	str	x0, [sp, #32]
  42b10c:	ldur	x8, [x29, #-24]
  42b110:	ldr	x8, [x8, #64]
  42b114:	ldr	x9, [sp, #32]
  42b118:	ldur	x10, [x29, #-24]
  42b11c:	ldr	x10, [x10, #136]
  42b120:	and	x9, x9, x10
  42b124:	mov	x10, #0x18                  	// #24
  42b128:	mul	x9, x10, x9
  42b12c:	add	x8, x8, x9
  42b130:	str	x8, [sp, #16]
  42b134:	str	xzr, [sp, #8]
  42b138:	ldr	x8, [sp, #8]
  42b13c:	ldr	x9, [sp, #16]
  42b140:	ldr	x9, [x9]
  42b144:	cmp	x8, x9
  42b148:	b.ge	42b1d0 <_obstack_memory_used@@Base+0xd034>  // b.tcont
  42b14c:	ldr	x8, [sp, #16]
  42b150:	ldr	x8, [x8, #16]
  42b154:	ldr	x9, [sp, #8]
  42b158:	mov	x10, #0x8                   	// #8
  42b15c:	mul	x9, x10, x9
  42b160:	add	x8, x8, x9
  42b164:	ldr	x8, [x8]
  42b168:	str	x8, [sp]
  42b16c:	ldr	x8, [sp]
  42b170:	ldr	x8, [x8]
  42b174:	ldr	x9, [sp, #32]
  42b178:	cmp	x8, x9
  42b17c:	b.ne	42b1c0 <_obstack_memory_used@@Base+0xd024>  // b.any
  42b180:	ldr	x8, [sp]
  42b184:	ldrb	w9, [x8, #104]
  42b188:	and	w9, w9, #0xf
  42b18c:	and	w9, w9, #0xff
  42b190:	ldur	w10, [x29, #-36]
  42b194:	cmp	w9, w10
  42b198:	b.ne	42b1c0 <_obstack_memory_used@@Base+0xd024>  // b.any
  42b19c:	ldr	x8, [sp]
  42b1a0:	ldr	x0, [x8, #80]
  42b1a4:	ldur	x1, [x29, #-32]
  42b1a8:	bl	42b29c <_obstack_memory_used@@Base+0xd100>
  42b1ac:	tbnz	w0, #0, 42b1b4 <_obstack_memory_used@@Base+0xd018>
  42b1b0:	b	42b1c0 <_obstack_memory_used@@Base+0xd024>
  42b1b4:	ldr	x8, [sp]
  42b1b8:	stur	x8, [x29, #-8]
  42b1bc:	b	42b218 <_obstack_memory_used@@Base+0xd07c>
  42b1c0:	ldr	x8, [sp, #8]
  42b1c4:	add	x8, x8, #0x1
  42b1c8:	str	x8, [sp, #8]
  42b1cc:	b	42b138 <_obstack_memory_used@@Base+0xcf9c>
  42b1d0:	ldur	x0, [x29, #-24]
  42b1d4:	ldur	x1, [x29, #-32]
  42b1d8:	ldur	w2, [x29, #-36]
  42b1dc:	ldr	x3, [sp, #32]
  42b1e0:	bl	42b35c <_obstack_memory_used@@Base+0xd1c0>
  42b1e4:	str	x0, [sp, #24]
  42b1e8:	ldr	x8, [sp, #24]
  42b1ec:	cmp	x8, #0x0
  42b1f0:	cset	w9, eq  // eq = none
  42b1f4:	and	w9, w9, #0x1
  42b1f8:	mov	w0, w9
  42b1fc:	sxtw	x8, w0
  42b200:	cbz	x8, 42b210 <_obstack_memory_used@@Base+0xd074>
  42b204:	ldur	x8, [x29, #-16]
  42b208:	mov	w9, #0xc                   	// #12
  42b20c:	str	w9, [x8]
  42b210:	ldr	x8, [sp, #24]
  42b214:	stur	x8, [x29, #-8]
  42b218:	ldur	x0, [x29, #-8]
  42b21c:	ldp	x29, x30, [sp, #80]
  42b220:	add	sp, sp, #0x60
  42b224:	ret
  42b228:	sub	sp, sp, #0x20
  42b22c:	str	x0, [sp, #24]
  42b230:	str	w1, [sp, #20]
  42b234:	ldr	x8, [sp, #24]
  42b238:	ldr	x8, [x8, #8]
  42b23c:	ldr	w9, [sp, #20]
  42b240:	mov	w10, w9
  42b244:	add	x8, x8, x10
  42b248:	str	x8, [sp, #8]
  42b24c:	str	xzr, [sp]
  42b250:	ldr	x8, [sp]
  42b254:	ldr	x9, [sp, #24]
  42b258:	ldr	x9, [x9, #8]
  42b25c:	cmp	x8, x9
  42b260:	b.ge	42b290 <_obstack_memory_used@@Base+0xd0f4>  // b.tcont
  42b264:	ldr	x8, [sp, #24]
  42b268:	ldr	x8, [x8, #16]
  42b26c:	ldr	x9, [sp]
  42b270:	ldr	x8, [x8, x9, lsl #3]
  42b274:	ldr	x9, [sp, #8]
  42b278:	add	x8, x9, x8
  42b27c:	str	x8, [sp, #8]
  42b280:	ldr	x8, [sp]
  42b284:	add	x8, x8, #0x1
  42b288:	str	x8, [sp]
  42b28c:	b	42b250 <_obstack_memory_used@@Base+0xd0b4>
  42b290:	ldr	x0, [sp, #8]
  42b294:	add	sp, sp, #0x20
  42b298:	ret
  42b29c:	sub	sp, sp, #0x20
  42b2a0:	str	x0, [sp, #16]
  42b2a4:	str	x1, [sp, #8]
  42b2a8:	ldr	x8, [sp, #16]
  42b2ac:	cbz	x8, 42b2d0 <_obstack_memory_used@@Base+0xd134>
  42b2b0:	ldr	x8, [sp, #8]
  42b2b4:	cbz	x8, 42b2d0 <_obstack_memory_used@@Base+0xd134>
  42b2b8:	ldr	x8, [sp, #16]
  42b2bc:	ldr	x8, [x8, #8]
  42b2c0:	ldr	x9, [sp, #8]
  42b2c4:	ldr	x9, [x9, #8]
  42b2c8:	cmp	x8, x9
  42b2cc:	b.eq	42b2e0 <_obstack_memory_used@@Base+0xd144>  // b.none
  42b2d0:	mov	w8, wzr
  42b2d4:	and	w8, w8, #0x1
  42b2d8:	strb	w8, [sp, #31]
  42b2dc:	b	42b34c <_obstack_memory_used@@Base+0xd1b0>
  42b2e0:	ldr	x8, [sp, #16]
  42b2e4:	ldr	x8, [x8, #8]
  42b2e8:	str	x8, [sp]
  42b2ec:	ldr	x8, [sp]
  42b2f0:	subs	x8, x8, #0x1
  42b2f4:	str	x8, [sp]
  42b2f8:	cmp	x8, #0x0
  42b2fc:	cset	w9, lt  // lt = tstop
  42b300:	tbnz	w9, #0, 42b340 <_obstack_memory_used@@Base+0xd1a4>
  42b304:	ldr	x8, [sp, #16]
  42b308:	ldr	x8, [x8, #16]
  42b30c:	ldr	x9, [sp]
  42b310:	ldr	x8, [x8, x9, lsl #3]
  42b314:	ldr	x9, [sp, #8]
  42b318:	ldr	x9, [x9, #16]
  42b31c:	ldr	x10, [sp]
  42b320:	ldr	x9, [x9, x10, lsl #3]
  42b324:	cmp	x8, x9
  42b328:	b.eq	42b33c <_obstack_memory_used@@Base+0xd1a0>  // b.none
  42b32c:	mov	w8, wzr
  42b330:	and	w8, w8, #0x1
  42b334:	strb	w8, [sp, #31]
  42b338:	b	42b34c <_obstack_memory_used@@Base+0xd1b0>
  42b33c:	b	42b2ec <_obstack_memory_used@@Base+0xd150>
  42b340:	mov	w8, #0x1                   	// #1
  42b344:	and	w8, w8, #0x1
  42b348:	strb	w8, [sp, #31]
  42b34c:	ldrb	w8, [sp, #31]
  42b350:	and	w0, w8, #0x1
  42b354:	add	sp, sp, #0x20
  42b358:	ret
  42b35c:	sub	sp, sp, #0x70
  42b360:	stp	x29, x30, [sp, #96]
  42b364:	add	x29, sp, #0x60
  42b368:	mov	x8, #0x70                  	// #112
  42b36c:	mov	x9, #0x1                   	// #1
  42b370:	stur	x0, [x29, #-16]
  42b374:	stur	x1, [x29, #-24]
  42b378:	stur	w2, [x29, #-28]
  42b37c:	stur	x3, [x29, #-40]
  42b380:	str	xzr, [sp, #40]
  42b384:	mov	x0, x8
  42b388:	mov	x1, x9
  42b38c:	bl	4029a0 <calloc@plt>
  42b390:	str	x0, [sp, #24]
  42b394:	ldr	x8, [sp, #24]
  42b398:	cmp	x8, #0x0
  42b39c:	cset	w10, eq  // eq = none
  42b3a0:	and	w10, w10, #0x1
  42b3a4:	mov	w0, w10
  42b3a8:	sxtw	x8, w0
  42b3ac:	cbz	x8, 42b3bc <_obstack_memory_used@@Base+0xd220>
  42b3b0:	mov	x8, xzr
  42b3b4:	stur	x8, [x29, #-8]
  42b3b8:	b	42b6bc <_obstack_memory_used@@Base+0xd520>
  42b3bc:	ldr	x8, [sp, #24]
  42b3c0:	add	x0, x8, #0x8
  42b3c4:	ldur	x1, [x29, #-24]
  42b3c8:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  42b3cc:	str	w0, [sp, #36]
  42b3d0:	ldr	w9, [sp, #36]
  42b3d4:	cmp	w9, #0x0
  42b3d8:	cset	w9, ne  // ne = any
  42b3dc:	and	w9, w9, #0x1
  42b3e0:	mov	w1, w9
  42b3e4:	sxtw	x8, w1
  42b3e8:	cbz	x8, 42b400 <_obstack_memory_used@@Base+0xd264>
  42b3ec:	ldr	x0, [sp, #24]
  42b3f0:	bl	402b40 <free@plt>
  42b3f4:	mov	x8, xzr
  42b3f8:	stur	x8, [x29, #-8]
  42b3fc:	b	42b6bc <_obstack_memory_used@@Base+0xd520>
  42b400:	ldur	w8, [x29, #-28]
  42b404:	ldr	x9, [sp, #24]
  42b408:	ldrb	w10, [x9, #104]
  42b40c:	and	w8, w8, #0xf
  42b410:	and	w10, w10, #0xfffffff0
  42b414:	orr	w8, w10, w8
  42b418:	strb	w8, [x9, #104]
  42b41c:	ldr	x9, [sp, #24]
  42b420:	add	x9, x9, #0x8
  42b424:	ldr	x11, [sp, #24]
  42b428:	str	x9, [x11, #80]
  42b42c:	str	xzr, [sp, #48]
  42b430:	ldr	x8, [sp, #48]
  42b434:	ldur	x9, [x29, #-24]
  42b438:	ldr	x9, [x9, #8]
  42b43c:	cmp	x8, x9
  42b440:	b.ge	42b674 <_obstack_memory_used@@Base+0xd4d8>  // b.tcont
  42b444:	ldur	x8, [x29, #-16]
  42b448:	ldr	x8, [x8]
  42b44c:	ldur	x9, [x29, #-24]
  42b450:	mov	x10, #0x10                  	// #16
  42b454:	ldr	x9, [x9, #16]
  42b458:	ldr	x11, [sp, #48]
  42b45c:	mov	x12, #0x8                   	// #8
  42b460:	ldr	x9, [x9, x11, lsl #3]
  42b464:	mul	x9, x10, x9
  42b468:	add	x8, x8, x9
  42b46c:	str	x8, [sp, #16]
  42b470:	ldr	x8, [sp, #16]
  42b474:	ldr	w13, [x8, #8]
  42b478:	and	w13, w13, #0xff
  42b47c:	str	w13, [sp, #12]
  42b480:	ldr	x8, [sp, #16]
  42b484:	ldr	w13, [x8, #8]
  42b488:	lsr	w12, w13, w12
  42b48c:	and	w12, w12, #0x3ff
  42b490:	str	w12, [sp, #8]
  42b494:	ldr	w12, [sp, #12]
  42b498:	cmp	w12, #0x1
  42b49c:	b.ne	42b4ac <_obstack_memory_used@@Base+0xd310>  // b.any
  42b4a0:	ldr	w8, [sp, #8]
  42b4a4:	cbnz	w8, 42b4ac <_obstack_memory_used@@Base+0xd310>
  42b4a8:	b	42b664 <_obstack_memory_used@@Base+0xd4c8>
  42b4ac:	ldr	x8, [sp, #16]
  42b4b0:	ldr	w9, [x8, #8]
  42b4b4:	lsr	w9, w9, #20
  42b4b8:	and	w9, w9, #0x1
  42b4bc:	ldr	x8, [sp, #24]
  42b4c0:	ldrb	w10, [x8, #104]
  42b4c4:	mov	w11, #0x5                   	// #5
  42b4c8:	lsr	w10, w10, w11
  42b4cc:	mov	w12, #0x1                   	// #1
  42b4d0:	and	w10, w10, #0x1
  42b4d4:	and	w10, w10, #0xff
  42b4d8:	orr	w9, w10, w9
  42b4dc:	ldrb	w10, [x8, #104]
  42b4e0:	and	w9, w9, w12
  42b4e4:	lsl	w9, w9, w11
  42b4e8:	and	w10, w10, #0xffffffdf
  42b4ec:	orr	w9, w10, w9
  42b4f0:	strb	w9, [x8, #104]
  42b4f4:	ldr	w9, [sp, #12]
  42b4f8:	cmp	w9, #0x2
  42b4fc:	b.ne	42b518 <_obstack_memory_used@@Base+0xd37c>  // b.any
  42b500:	ldr	x8, [sp, #24]
  42b504:	ldrb	w9, [x8, #104]
  42b508:	and	w9, w9, #0xffffffef
  42b50c:	orr	w9, w9, #0x10
  42b510:	strb	w9, [x8, #104]
  42b514:	b	42b538 <_obstack_memory_used@@Base+0xd39c>
  42b518:	ldr	w8, [sp, #12]
  42b51c:	cmp	w8, #0x4
  42b520:	b.ne	42b538 <_obstack_memory_used@@Base+0xd39c>  // b.any
  42b524:	ldr	x8, [sp, #24]
  42b528:	ldrb	w9, [x8, #104]
  42b52c:	and	w9, w9, #0xffffffbf
  42b530:	orr	w9, w9, #0x40
  42b534:	strb	w9, [x8, #104]
  42b538:	ldr	w8, [sp, #8]
  42b53c:	cbz	w8, 42b664 <_obstack_memory_used@@Base+0xd4c8>
  42b540:	ldr	x8, [sp, #24]
  42b544:	ldr	x8, [x8, #80]
  42b548:	ldr	x9, [sp, #24]
  42b54c:	add	x9, x9, #0x8
  42b550:	cmp	x8, x9
  42b554:	b.ne	42b5e0 <_obstack_memory_used@@Base+0xd444>  // b.any
  42b558:	mov	x0, #0x18                  	// #24
  42b55c:	bl	402890 <malloc@plt>
  42b560:	str	x0, [sp]
  42b564:	ldr	x8, [sp]
  42b568:	cmp	x8, #0x0
  42b56c:	cset	w9, eq  // eq = none
  42b570:	and	w9, w9, #0x1
  42b574:	mov	w0, w9
  42b578:	sxtw	x8, w0
  42b57c:	cbz	x8, 42b594 <_obstack_memory_used@@Base+0xd3f8>
  42b580:	ldr	x0, [sp, #24]
  42b584:	bl	420de4 <_obstack_memory_used@@Base+0x2c48>
  42b588:	mov	x8, xzr
  42b58c:	stur	x8, [x29, #-8]
  42b590:	b	42b6bc <_obstack_memory_used@@Base+0xd520>
  42b594:	ldr	x8, [sp]
  42b598:	ldr	x9, [sp, #24]
  42b59c:	str	x8, [x9, #80]
  42b5a0:	ldr	x8, [sp, #24]
  42b5a4:	ldr	x0, [x8, #80]
  42b5a8:	ldur	x1, [x29, #-24]
  42b5ac:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  42b5b0:	cbz	w0, 42b5c8 <_obstack_memory_used@@Base+0xd42c>
  42b5b4:	ldr	x0, [sp, #24]
  42b5b8:	bl	420de4 <_obstack_memory_used@@Base+0x2c48>
  42b5bc:	mov	x8, xzr
  42b5c0:	stur	x8, [x29, #-8]
  42b5c4:	b	42b6bc <_obstack_memory_used@@Base+0xd520>
  42b5c8:	str	xzr, [sp, #40]
  42b5cc:	ldr	x8, [sp, #24]
  42b5d0:	ldrb	w9, [x8, #104]
  42b5d4:	and	w9, w9, #0x7f
  42b5d8:	orr	w9, w9, #0xffffff80
  42b5dc:	strb	w9, [x8, #104]
  42b5e0:	ldr	w8, [sp, #8]
  42b5e4:	and	w8, w8, #0x1
  42b5e8:	cbz	w8, 42b5f8 <_obstack_memory_used@@Base+0xd45c>
  42b5ec:	ldur	w8, [x29, #-28]
  42b5f0:	and	w8, w8, #0x1
  42b5f4:	cbz	w8, 42b640 <_obstack_memory_used@@Base+0xd4a4>
  42b5f8:	ldr	w8, [sp, #8]
  42b5fc:	and	w8, w8, #0x2
  42b600:	cbz	w8, 42b610 <_obstack_memory_used@@Base+0xd474>
  42b604:	ldur	w8, [x29, #-28]
  42b608:	and	w8, w8, #0x1
  42b60c:	cbnz	w8, 42b640 <_obstack_memory_used@@Base+0xd4a4>
  42b610:	ldr	w8, [sp, #8]
  42b614:	and	w8, w8, #0x10
  42b618:	cbz	w8, 42b628 <_obstack_memory_used@@Base+0xd48c>
  42b61c:	ldur	w8, [x29, #-28]
  42b620:	and	w8, w8, #0x2
  42b624:	cbz	w8, 42b640 <_obstack_memory_used@@Base+0xd4a4>
  42b628:	ldr	w8, [sp, #8]
  42b62c:	and	w8, w8, #0x40
  42b630:	cbz	w8, 42b664 <_obstack_memory_used@@Base+0xd4c8>
  42b634:	ldur	w8, [x29, #-28]
  42b638:	and	w8, w8, #0x4
  42b63c:	cbnz	w8, 42b664 <_obstack_memory_used@@Base+0xd4c8>
  42b640:	ldr	x8, [sp, #24]
  42b644:	add	x0, x8, #0x8
  42b648:	ldr	x8, [sp, #48]
  42b64c:	ldr	x9, [sp, #40]
  42b650:	subs	x1, x8, x9
  42b654:	bl	42b6cc <_obstack_memory_used@@Base+0xd530>
  42b658:	ldr	x8, [sp, #40]
  42b65c:	add	x8, x8, #0x1
  42b660:	str	x8, [sp, #40]
  42b664:	ldr	x8, [sp, #48]
  42b668:	add	x8, x8, #0x1
  42b66c:	str	x8, [sp, #48]
  42b670:	b	42b430 <_obstack_memory_used@@Base+0xd294>
  42b674:	ldur	x0, [x29, #-16]
  42b678:	ldr	x1, [sp, #24]
  42b67c:	ldur	x2, [x29, #-40]
  42b680:	bl	42b760 <_obstack_memory_used@@Base+0xd5c4>
  42b684:	str	w0, [sp, #36]
  42b688:	ldr	w8, [sp, #36]
  42b68c:	cmp	w8, #0x0
  42b690:	cset	w8, ne  // ne = any
  42b694:	and	w8, w8, #0x1
  42b698:	mov	w1, w8
  42b69c:	sxtw	x9, w1
  42b6a0:	cbz	x9, 42b6b4 <_obstack_memory_used@@Base+0xd518>
  42b6a4:	ldr	x0, [sp, #24]
  42b6a8:	bl	420de4 <_obstack_memory_used@@Base+0x2c48>
  42b6ac:	mov	x8, xzr
  42b6b0:	str	x8, [sp, #24]
  42b6b4:	ldr	x8, [sp, #24]
  42b6b8:	stur	x8, [x29, #-8]
  42b6bc:	ldur	x0, [x29, #-8]
  42b6c0:	ldp	x29, x30, [sp, #96]
  42b6c4:	add	sp, sp, #0x70
  42b6c8:	ret
  42b6cc:	sub	sp, sp, #0x10
  42b6d0:	str	x0, [sp, #8]
  42b6d4:	str	x1, [sp]
  42b6d8:	ldr	x8, [sp]
  42b6dc:	cmp	x8, #0x0
  42b6e0:	cset	w9, lt  // lt = tstop
  42b6e4:	tbnz	w9, #0, 42b6fc <_obstack_memory_used@@Base+0xd560>
  42b6e8:	ldr	x8, [sp]
  42b6ec:	ldr	x9, [sp, #8]
  42b6f0:	ldr	x9, [x9, #8]
  42b6f4:	cmp	x8, x9
  42b6f8:	b.lt	42b700 <_obstack_memory_used@@Base+0xd564>  // b.tstop
  42b6fc:	b	42b758 <_obstack_memory_used@@Base+0xd5bc>
  42b700:	ldr	x8, [sp, #8]
  42b704:	ldr	x9, [x8, #8]
  42b708:	subs	x9, x9, #0x1
  42b70c:	str	x9, [x8, #8]
  42b710:	ldr	x8, [sp]
  42b714:	ldr	x9, [sp, #8]
  42b718:	ldr	x9, [x9, #8]
  42b71c:	cmp	x8, x9
  42b720:	b.ge	42b758 <_obstack_memory_used@@Base+0xd5bc>  // b.tcont
  42b724:	ldr	x8, [sp, #8]
  42b728:	ldr	x8, [x8, #16]
  42b72c:	ldr	x9, [sp]
  42b730:	add	x9, x9, #0x1
  42b734:	ldr	x8, [x8, x9, lsl #3]
  42b738:	ldr	x9, [sp, #8]
  42b73c:	ldr	x9, [x9, #16]
  42b740:	ldr	x10, [sp]
  42b744:	str	x8, [x9, x10, lsl #3]
  42b748:	ldr	x8, [sp]
  42b74c:	add	x8, x8, #0x1
  42b750:	str	x8, [sp]
  42b754:	b	42b710 <_obstack_memory_used@@Base+0xd574>
  42b758:	add	sp, sp, #0x10
  42b75c:	ret
  42b760:	sub	sp, sp, #0x60
  42b764:	stp	x29, x30, [sp, #80]
  42b768:	add	x29, sp, #0x50
  42b76c:	stur	x0, [x29, #-16]
  42b770:	stur	x1, [x29, #-24]
  42b774:	stur	x2, [x29, #-32]
  42b778:	ldur	x8, [x29, #-32]
  42b77c:	ldur	x9, [x29, #-24]
  42b780:	str	x8, [x9]
  42b784:	ldur	x8, [x29, #-24]
  42b788:	add	x0, x8, #0x20
  42b78c:	ldur	x8, [x29, #-24]
  42b790:	ldr	x1, [x8, #16]
  42b794:	bl	429f94 <_obstack_memory_used@@Base+0xbdf8>
  42b798:	str	w0, [sp, #36]
  42b79c:	ldr	w10, [sp, #36]
  42b7a0:	cmp	w10, #0x0
  42b7a4:	cset	w10, ne  // ne = any
  42b7a8:	and	w10, w10, #0x1
  42b7ac:	mov	w1, w10
  42b7b0:	sxtw	x8, w1
  42b7b4:	cbz	x8, 42b7c4 <_obstack_memory_used@@Base+0xd628>
  42b7b8:	mov	w8, #0xc                   	// #12
  42b7bc:	stur	w8, [x29, #-4]
  42b7c0:	b	42b93c <_obstack_memory_used@@Base+0xd7a0>
  42b7c4:	str	xzr, [sp, #24]
  42b7c8:	ldr	x8, [sp, #24]
  42b7cc:	ldur	x9, [x29, #-24]
  42b7d0:	ldr	x9, [x9, #16]
  42b7d4:	cmp	x8, x9
  42b7d8:	b.ge	42b848 <_obstack_memory_used@@Base+0xd6ac>  // b.tcont
  42b7dc:	ldur	x8, [x29, #-24]
  42b7e0:	mov	x9, #0x10                  	// #16
  42b7e4:	ldr	x8, [x8, #24]
  42b7e8:	ldr	x10, [sp, #24]
  42b7ec:	ldr	x8, [x8, x10, lsl #3]
  42b7f0:	str	x8, [sp, #16]
  42b7f4:	ldur	x8, [x29, #-16]
  42b7f8:	ldr	x8, [x8]
  42b7fc:	ldr	x10, [sp, #16]
  42b800:	mul	x9, x9, x10
  42b804:	add	x8, x8, x9
  42b808:	ldr	w11, [x8, #8]
  42b80c:	and	w11, w11, #0xff
  42b810:	and	w11, w11, #0x8
  42b814:	cbnz	w11, 42b838 <_obstack_memory_used@@Base+0xd69c>
  42b818:	ldur	x8, [x29, #-24]
  42b81c:	add	x0, x8, #0x20
  42b820:	ldr	x1, [sp, #16]
  42b824:	bl	42ae10 <_obstack_memory_used@@Base+0xcc74>
  42b828:	tbnz	w0, #0, 42b838 <_obstack_memory_used@@Base+0xd69c>
  42b82c:	mov	w8, #0xc                   	// #12
  42b830:	stur	w8, [x29, #-4]
  42b834:	b	42b93c <_obstack_memory_used@@Base+0xd7a0>
  42b838:	ldr	x8, [sp, #24]
  42b83c:	add	x8, x8, #0x1
  42b840:	str	x8, [sp, #24]
  42b844:	b	42b7c8 <_obstack_memory_used@@Base+0xd62c>
  42b848:	ldur	x8, [x29, #-16]
  42b84c:	ldr	x8, [x8, #64]
  42b850:	ldur	x9, [x29, #-32]
  42b854:	ldur	x10, [x29, #-16]
  42b858:	ldr	x10, [x10, #136]
  42b85c:	and	x9, x9, x10
  42b860:	mov	x10, #0x18                  	// #24
  42b864:	mul	x9, x10, x9
  42b868:	add	x8, x8, x9
  42b86c:	str	x8, [sp, #40]
  42b870:	ldr	x8, [sp, #40]
  42b874:	ldr	x8, [x8, #8]
  42b878:	ldr	x9, [sp, #40]
  42b87c:	ldr	x9, [x9]
  42b880:	cmp	x8, x9
  42b884:	cset	w11, le
  42b888:	and	w11, w11, #0x1
  42b88c:	mov	w0, w11
  42b890:	sxtw	x8, w0
  42b894:	cbz	x8, 42b90c <_obstack_memory_used@@Base+0xd770>
  42b898:	ldr	x8, [sp, #40]
  42b89c:	ldr	x8, [x8]
  42b8a0:	mov	x9, #0x2                   	// #2
  42b8a4:	mul	x8, x9, x8
  42b8a8:	add	x8, x8, #0x2
  42b8ac:	str	x8, [sp, #8]
  42b8b0:	ldr	x8, [sp, #40]
  42b8b4:	ldr	x0, [x8, #16]
  42b8b8:	ldr	x8, [sp, #8]
  42b8bc:	mov	x9, #0x8                   	// #8
  42b8c0:	mul	x1, x8, x9
  42b8c4:	bl	4029c0 <realloc@plt>
  42b8c8:	str	x0, [sp]
  42b8cc:	ldr	x8, [sp]
  42b8d0:	cmp	x8, #0x0
  42b8d4:	cset	w10, eq  // eq = none
  42b8d8:	and	w10, w10, #0x1
  42b8dc:	mov	w0, w10
  42b8e0:	sxtw	x8, w0
  42b8e4:	cbz	x8, 42b8f4 <_obstack_memory_used@@Base+0xd758>
  42b8e8:	mov	w8, #0xc                   	// #12
  42b8ec:	stur	w8, [x29, #-4]
  42b8f0:	b	42b93c <_obstack_memory_used@@Base+0xd7a0>
  42b8f4:	ldr	x8, [sp]
  42b8f8:	ldr	x9, [sp, #40]
  42b8fc:	str	x8, [x9, #16]
  42b900:	ldr	x8, [sp, #8]
  42b904:	ldr	x9, [sp, #40]
  42b908:	str	x8, [x9, #8]
  42b90c:	ldur	x8, [x29, #-24]
  42b910:	ldr	x9, [sp, #40]
  42b914:	ldr	x9, [x9, #16]
  42b918:	ldr	x10, [sp, #40]
  42b91c:	ldr	x11, [x10]
  42b920:	add	x12, x11, #0x1
  42b924:	str	x12, [x10]
  42b928:	mov	x10, #0x8                   	// #8
  42b92c:	mul	x10, x10, x11
  42b930:	add	x9, x9, x10
  42b934:	str	x8, [x9]
  42b938:	stur	wzr, [x29, #-4]
  42b93c:	ldur	w0, [x29, #-4]
  42b940:	ldp	x29, x30, [sp, #80]
  42b944:	add	sp, sp, #0x60
  42b948:	ret
  42b94c:	sub	sp, sp, #0x60
  42b950:	stp	x29, x30, [sp, #80]
  42b954:	add	x29, sp, #0x50
  42b958:	mov	w8, #0x1                   	// #1
  42b95c:	stur	x0, [x29, #-16]
  42b960:	stur	x1, [x29, #-24]
  42b964:	stur	x2, [x29, #-32]
  42b968:	stur	w3, [x29, #-36]
  42b96c:	str	w8, [sp, #40]
  42b970:	ldur	x9, [x29, #-32]
  42b974:	add	x9, x9, #0x1
  42b978:	str	x9, [sp, #24]
  42b97c:	ldur	w8, [x29, #-36]
  42b980:	cbnz	w8, 42ba20 <_obstack_memory_used@@Base+0xd884>
  42b984:	ldr	x8, [sp, #24]
  42b988:	mov	x9, #0x8                   	// #8
  42b98c:	mul	x0, x8, x9
  42b990:	bl	402890 <malloc@plt>
  42b994:	ldur	x8, [x29, #-16]
  42b998:	str	x0, [x8, #8]
  42b99c:	ldur	x8, [x29, #-16]
  42b9a0:	ldr	x8, [x8, #8]
  42b9a4:	cmp	x8, #0x0
  42b9a8:	cset	w10, eq  // eq = none
  42b9ac:	and	w10, w10, #0x1
  42b9b0:	mov	w0, w10
  42b9b4:	sxtw	x8, w0
  42b9b8:	cbz	x8, 42b9c4 <_obstack_memory_used@@Base+0xd828>
  42b9bc:	stur	wzr, [x29, #-4]
  42b9c0:	b	42bbec <_obstack_memory_used@@Base+0xda50>
  42b9c4:	ldr	x8, [sp, #24]
  42b9c8:	mov	x9, #0x8                   	// #8
  42b9cc:	mul	x0, x8, x9
  42b9d0:	bl	402890 <malloc@plt>
  42b9d4:	ldur	x8, [x29, #-16]
  42b9d8:	str	x0, [x8, #16]
  42b9dc:	ldur	x8, [x29, #-16]
  42b9e0:	ldr	x8, [x8, #16]
  42b9e4:	cmp	x8, #0x0
  42b9e8:	cset	w10, eq  // eq = none
  42b9ec:	and	w10, w10, #0x1
  42b9f0:	mov	w0, w10
  42b9f4:	sxtw	x8, w0
  42b9f8:	cbz	x8, 42ba10 <_obstack_memory_used@@Base+0xd874>
  42b9fc:	ldur	x8, [x29, #-16]
  42ba00:	ldr	x0, [x8, #8]
  42ba04:	bl	402b40 <free@plt>
  42ba08:	stur	wzr, [x29, #-4]
  42ba0c:	b	42bbec <_obstack_memory_used@@Base+0xda50>
  42ba10:	ldr	x8, [sp, #24]
  42ba14:	ldur	x9, [x29, #-16]
  42ba18:	str	x8, [x9]
  42ba1c:	b	42bb30 <_obstack_memory_used@@Base+0xd994>
  42ba20:	ldur	w8, [x29, #-36]
  42ba24:	cmp	w8, #0x1
  42ba28:	b.ne	42bb00 <_obstack_memory_used@@Base+0xd964>  // b.any
  42ba2c:	ldr	x8, [sp, #24]
  42ba30:	ldur	x9, [x29, #-16]
  42ba34:	ldr	x9, [x9]
  42ba38:	cmp	x8, x9
  42ba3c:	cset	w10, hi  // hi = pmore
  42ba40:	and	w10, w10, #0x1
  42ba44:	mov	w0, w10
  42ba48:	sxtw	x8, w0
  42ba4c:	cbz	x8, 42bafc <_obstack_memory_used@@Base+0xd960>
  42ba50:	ldur	x8, [x29, #-16]
  42ba54:	ldr	x0, [x8, #8]
  42ba58:	ldr	x8, [sp, #24]
  42ba5c:	mov	x9, #0x8                   	// #8
  42ba60:	mul	x1, x8, x9
  42ba64:	bl	4029c0 <realloc@plt>
  42ba68:	str	x0, [sp, #16]
  42ba6c:	ldr	x8, [sp, #16]
  42ba70:	cmp	x8, #0x0
  42ba74:	cset	w10, eq  // eq = none
  42ba78:	and	w10, w10, #0x1
  42ba7c:	mov	w0, w10
  42ba80:	sxtw	x8, w0
  42ba84:	cbz	x8, 42ba90 <_obstack_memory_used@@Base+0xd8f4>
  42ba88:	stur	wzr, [x29, #-4]
  42ba8c:	b	42bbec <_obstack_memory_used@@Base+0xda50>
  42ba90:	ldur	x8, [x29, #-16]
  42ba94:	ldr	x0, [x8, #16]
  42ba98:	ldr	x8, [sp, #24]
  42ba9c:	mov	x9, #0x8                   	// #8
  42baa0:	mul	x1, x8, x9
  42baa4:	bl	4029c0 <realloc@plt>
  42baa8:	str	x0, [sp, #8]
  42baac:	ldr	x8, [sp, #8]
  42bab0:	cmp	x8, #0x0
  42bab4:	cset	w10, eq  // eq = none
  42bab8:	and	w10, w10, #0x1
  42babc:	mov	w0, w10
  42bac0:	sxtw	x8, w0
  42bac4:	cbz	x8, 42bad8 <_obstack_memory_used@@Base+0xd93c>
  42bac8:	ldr	x0, [sp, #16]
  42bacc:	bl	402b40 <free@plt>
  42bad0:	stur	wzr, [x29, #-4]
  42bad4:	b	42bbec <_obstack_memory_used@@Base+0xda50>
  42bad8:	ldr	x8, [sp, #16]
  42badc:	ldur	x9, [x29, #-16]
  42bae0:	str	x8, [x9, #8]
  42bae4:	ldr	x8, [sp, #8]
  42bae8:	ldur	x9, [x29, #-16]
  42baec:	str	x8, [x9, #16]
  42baf0:	ldr	x8, [sp, #24]
  42baf4:	ldur	x9, [x29, #-16]
  42baf8:	str	x8, [x9]
  42bafc:	b	42bb30 <_obstack_memory_used@@Base+0xd994>
  42bb00:	ldur	w8, [x29, #-36]
  42bb04:	cmp	w8, #0x2
  42bb08:	b.ne	42bb10 <_obstack_memory_used@@Base+0xd974>  // b.any
  42bb0c:	b	42bb10 <_obstack_memory_used@@Base+0xd974>
  42bb10:	ldur	x8, [x29, #-32]
  42bb14:	ldur	x9, [x29, #-16]
  42bb18:	ldr	x9, [x9]
  42bb1c:	cmp	x8, x9
  42bb20:	b.hi	42bb28 <_obstack_memory_used@@Base+0xd98c>  // b.pmore
  42bb24:	b	42bb28 <_obstack_memory_used@@Base+0xd98c>
  42bb28:	mov	w8, #0x2                   	// #2
  42bb2c:	str	w8, [sp, #40]
  42bb30:	str	xzr, [sp, #32]
  42bb34:	ldr	x8, [sp, #32]
  42bb38:	ldur	x9, [x29, #-32]
  42bb3c:	cmp	x8, x9
  42bb40:	b.ge	42bb9c <_obstack_memory_used@@Base+0xda00>  // b.tcont
  42bb44:	ldur	x8, [x29, #-24]
  42bb48:	ldr	x9, [sp, #32]
  42bb4c:	mov	x10, #0x10                  	// #16
  42bb50:	mul	x9, x10, x9
  42bb54:	ldr	x8, [x8, x9]
  42bb58:	ldur	x9, [x29, #-16]
  42bb5c:	ldr	x9, [x9, #8]
  42bb60:	ldr	x11, [sp, #32]
  42bb64:	str	x8, [x9, x11, lsl #3]
  42bb68:	ldur	x8, [x29, #-24]
  42bb6c:	ldr	x9, [sp, #32]
  42bb70:	mul	x9, x10, x9
  42bb74:	add	x8, x8, x9
  42bb78:	ldr	x8, [x8, #8]
  42bb7c:	ldur	x9, [x29, #-16]
  42bb80:	ldr	x9, [x9, #16]
  42bb84:	ldr	x10, [sp, #32]
  42bb88:	str	x8, [x9, x10, lsl #3]
  42bb8c:	ldr	x8, [sp, #32]
  42bb90:	add	x8, x8, #0x1
  42bb94:	str	x8, [sp, #32]
  42bb98:	b	42bb34 <_obstack_memory_used@@Base+0xd998>
  42bb9c:	ldr	x8, [sp, #32]
  42bba0:	ldur	x9, [x29, #-16]
  42bba4:	ldr	x9, [x9]
  42bba8:	cmp	x8, x9
  42bbac:	b.cs	42bbe4 <_obstack_memory_used@@Base+0xda48>  // b.hs, b.nlast
  42bbb0:	ldur	x8, [x29, #-16]
  42bbb4:	ldr	x8, [x8, #16]
  42bbb8:	ldr	x9, [sp, #32]
  42bbbc:	mov	x10, #0xffffffffffffffff    	// #-1
  42bbc0:	str	x10, [x8, x9, lsl #3]
  42bbc4:	ldur	x8, [x29, #-16]
  42bbc8:	ldr	x8, [x8, #8]
  42bbcc:	ldr	x9, [sp, #32]
  42bbd0:	str	x10, [x8, x9, lsl #3]
  42bbd4:	ldr	x8, [sp, #32]
  42bbd8:	add	x8, x8, #0x1
  42bbdc:	str	x8, [sp, #32]
  42bbe0:	b	42bb9c <_obstack_memory_used@@Base+0xda00>
  42bbe4:	ldr	w8, [sp, #40]
  42bbe8:	stur	w8, [x29, #-4]
  42bbec:	ldur	w0, [x29, #-4]
  42bbf0:	ldp	x29, x30, [sp, #80]
  42bbf4:	add	sp, sp, #0x60
  42bbf8:	ret
  42bbfc:	sub	sp, sp, #0x80
  42bc00:	stp	x29, x30, [sp, #112]
  42bc04:	add	x29, sp, #0x70
  42bc08:	mov	w8, #0x1                   	// #1
  42bc0c:	stur	x0, [x29, #-16]
  42bc10:	stur	x1, [x29, #-24]
  42bc14:	stur	x2, [x29, #-32]
  42bc18:	stur	x3, [x29, #-40]
  42bc1c:	stur	x4, [x29, #-48]
  42bc20:	and	w8, w5, w8
  42bc24:	sturb	w8, [x29, #-49]
  42bc28:	str	x6, [sp, #48]
  42bc2c:	ldur	x9, [x29, #-40]
  42bc30:	ldr	x10, [sp, #48]
  42bc34:	ldrsw	x10, [x10, #180]
  42bc38:	cmp	x9, x10
  42bc3c:	b.ge	42bc4c <_obstack_memory_used@@Base+0xdab0>  // b.tcont
  42bc40:	ldr	x8, [sp, #48]
  42bc44:	ldrsw	x8, [x8, #180]
  42bc48:	stur	x8, [x29, #-40]
  42bc4c:	ldur	x8, [x29, #-32]
  42bc50:	add	x8, x8, #0x1
  42bc54:	ldur	x9, [x29, #-40]
  42bc58:	cmp	x8, x9
  42bc5c:	b.ge	42bc70 <_obstack_memory_used@@Base+0xdad4>  // b.tcont
  42bc60:	ldur	x8, [x29, #-32]
  42bc64:	add	x8, x8, #0x1
  42bc68:	str	x8, [sp, #24]
  42bc6c:	b	42bc78 <_obstack_memory_used@@Base+0xdadc>
  42bc70:	ldur	x8, [x29, #-40]
  42bc74:	str	x8, [sp, #24]
  42bc78:	ldr	x8, [sp, #24]
  42bc7c:	str	x8, [sp, #32]
  42bc80:	ldur	x0, [x29, #-24]
  42bc84:	ldur	x1, [x29, #-32]
  42bc88:	ldur	x2, [x29, #-16]
  42bc8c:	ldur	x3, [x29, #-48]
  42bc90:	ldurb	w9, [x29, #-49]
  42bc94:	ldr	x5, [sp, #48]
  42bc98:	and	w4, w9, #0x1
  42bc9c:	bl	422384 <_obstack_memory_used@@Base+0x41e8>
  42bca0:	ldur	x0, [x29, #-16]
  42bca4:	ldr	x1, [sp, #32]
  42bca8:	bl	42248c <_obstack_memory_used@@Base+0x42f0>
  42bcac:	str	w0, [sp, #44]
  42bcb0:	ldr	w9, [sp, #44]
  42bcb4:	cmp	w9, #0x0
  42bcb8:	cset	w9, ne  // ne = any
  42bcbc:	and	w9, w9, #0x1
  42bcc0:	mov	w1, w9
  42bcc4:	sxtw	x8, w1
  42bcc8:	cbz	x8, 42bcd8 <_obstack_memory_used@@Base+0xdb3c>
  42bccc:	ldr	w8, [sp, #44]
  42bcd0:	stur	w8, [x29, #-4]
  42bcd4:	b	42bd88 <_obstack_memory_used@@Base+0xdbec>
  42bcd8:	ldr	x8, [sp, #48]
  42bcdc:	add	x8, x8, #0xb8
  42bce0:	ldur	x9, [x29, #-16]
  42bce4:	str	x8, [x9, #128]
  42bce8:	ldr	x8, [sp, #48]
  42bcec:	ldrb	w10, [x8, #176]
  42bcf0:	mov	w11, #0x4                   	// #4
  42bcf4:	lsr	w10, w10, w11
  42bcf8:	and	w10, w10, #0x1
  42bcfc:	and	w10, w10, #0xff
  42bd00:	ldur	x8, [x29, #-16]
  42bd04:	strb	w10, [x8, #142]
  42bd08:	ldur	x8, [x29, #-16]
  42bd0c:	ldrb	w10, [x8, #139]
  42bd10:	cbz	w10, 42bd24 <_obstack_memory_used@@Base+0xdb88>
  42bd14:	ldur	x8, [x29, #-16]
  42bd18:	ldr	x8, [x8, #8]
  42bd1c:	str	x8, [sp, #16]
  42bd20:	b	42bd2c <_obstack_memory_used@@Base+0xdb90>
  42bd24:	ldur	x8, [x29, #-24]
  42bd28:	str	x8, [sp, #16]
  42bd2c:	ldr	x8, [sp, #16]
  42bd30:	ldur	x9, [x29, #-16]
  42bd34:	str	x8, [x9, #8]
  42bd38:	ldur	x8, [x29, #-16]
  42bd3c:	ldrb	w10, [x8, #139]
  42bd40:	cbnz	w10, 42bd54 <_obstack_memory_used@@Base+0xdbb8>
  42bd44:	ldr	x8, [sp, #48]
  42bd48:	ldr	w9, [x8, #180]
  42bd4c:	cmp	w9, #0x1
  42bd50:	b.le	42bd60 <_obstack_memory_used@@Base+0xdbc4>
  42bd54:	mov	x8, xzr
  42bd58:	str	x8, [sp, #8]
  42bd5c:	b	42bd68 <_obstack_memory_used@@Base+0xdbcc>
  42bd60:	ldur	x8, [x29, #-32]
  42bd64:	str	x8, [sp, #8]
  42bd68:	ldr	x8, [sp, #8]
  42bd6c:	ldur	x9, [x29, #-16]
  42bd70:	str	x8, [x9, #48]
  42bd74:	ldur	x8, [x29, #-16]
  42bd78:	ldr	x8, [x8, #48]
  42bd7c:	ldur	x9, [x29, #-16]
  42bd80:	str	x8, [x9, #56]
  42bd84:	stur	wzr, [x29, #-4]
  42bd88:	ldur	w0, [x29, #-4]
  42bd8c:	ldp	x29, x30, [sp, #112]
  42bd90:	add	sp, sp, #0x80
  42bd94:	ret
  42bd98:	sub	sp, sp, #0x50
  42bd9c:	stp	x29, x30, [sp, #64]
  42bda0:	add	x29, sp, #0x40
  42bda4:	mov	x8, #0xffffffffffffffff    	// #-1
  42bda8:	stur	x0, [x29, #-16]
  42bdac:	stur	w1, [x29, #-20]
  42bdb0:	str	x2, [sp, #32]
  42bdb4:	ldur	w9, [x29, #-20]
  42bdb8:	ldur	x10, [x29, #-16]
  42bdbc:	str	w9, [x10, #160]
  42bdc0:	ldur	x10, [x29, #-16]
  42bdc4:	str	x8, [x10, #168]
  42bdc8:	ldr	x8, [sp, #32]
  42bdcc:	cmp	x8, #0x0
  42bdd0:	cset	w9, le
  42bdd4:	tbnz	w9, #0, 42beb8 <_obstack_memory_used@@Base+0xdd1c>
  42bdd8:	mov	x8, #0x28                  	// #40
  42bddc:	str	x8, [sp, #24]
  42bde0:	ldr	x8, [sp, #24]
  42bde4:	mov	x9, #0xffffffffffffffff    	// #-1
  42bde8:	udiv	x8, x9, x8
  42bdec:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  42bdf0:	cmp	x9, x8
  42bdf4:	b.cs	42be04 <_obstack_memory_used@@Base+0xdc68>  // b.hs, b.nlast
  42bdf8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  42bdfc:	str	x8, [sp, #16]
  42be00:	b	42be14 <_obstack_memory_used@@Base+0xdc78>
  42be04:	ldr	x8, [sp, #24]
  42be08:	mov	x9, #0xffffffffffffffff    	// #-1
  42be0c:	udiv	x8, x9, x8
  42be10:	str	x8, [sp, #16]
  42be14:	ldr	x8, [sp, #16]
  42be18:	ldr	x9, [sp, #32]
  42be1c:	cmp	x8, x9
  42be20:	cset	w10, cc  // cc = lo, ul, last
  42be24:	and	w10, w10, #0x1
  42be28:	mov	w0, w10
  42be2c:	sxtw	x8, w0
  42be30:	cbz	x8, 42be40 <_obstack_memory_used@@Base+0xdca4>
  42be34:	mov	w8, #0xc                   	// #12
  42be38:	stur	w8, [x29, #-4]
  42be3c:	b	42bee0 <_obstack_memory_used@@Base+0xdd44>
  42be40:	ldr	x8, [sp, #32]
  42be44:	mov	x9, #0x28                  	// #40
  42be48:	mul	x0, x8, x9
  42be4c:	bl	402890 <malloc@plt>
  42be50:	ldur	x8, [x29, #-16]
  42be54:	str	x0, [x8, #216]
  42be58:	ldr	x8, [sp, #32]
  42be5c:	mov	x9, #0x8                   	// #8
  42be60:	mul	x0, x8, x9
  42be64:	bl	402890 <malloc@plt>
  42be68:	ldur	x8, [x29, #-16]
  42be6c:	str	x0, [x8, #248]
  42be70:	ldur	x8, [x29, #-16]
  42be74:	ldr	x8, [x8, #216]
  42be78:	mov	w10, #0x1                   	// #1
  42be7c:	str	w10, [sp, #12]
  42be80:	cbz	x8, 42be98 <_obstack_memory_used@@Base+0xdcfc>
  42be84:	ldur	x8, [x29, #-16]
  42be88:	ldr	x8, [x8, #248]
  42be8c:	cmp	x8, #0x0
  42be90:	cset	w9, eq  // eq = none
  42be94:	str	w9, [sp, #12]
  42be98:	ldr	w8, [sp, #12]
  42be9c:	and	w8, w8, #0x1
  42bea0:	mov	w0, w8
  42bea4:	sxtw	x9, w0
  42bea8:	cbz	x9, 42beb8 <_obstack_memory_used@@Base+0xdd1c>
  42beac:	mov	w8, #0xc                   	// #12
  42beb0:	stur	w8, [x29, #-4]
  42beb4:	b	42bee0 <_obstack_memory_used@@Base+0xdd44>
  42beb8:	ldr	x8, [sp, #32]
  42bebc:	ldur	x9, [x29, #-16]
  42bec0:	str	x8, [x9, #208]
  42bec4:	ldur	x8, [x29, #-16]
  42bec8:	mov	w10, #0x1                   	// #1
  42becc:	str	w10, [x8, #224]
  42bed0:	ldr	x8, [sp, #32]
  42bed4:	ldur	x9, [x29, #-16]
  42bed8:	str	x8, [x9, #240]
  42bedc:	stur	wzr, [x29, #-4]
  42bee0:	ldur	w0, [x29, #-4]
  42bee4:	ldp	x29, x30, [sp, #64]
  42bee8:	add	sp, sp, #0x50
  42beec:	ret
  42bef0:	sub	sp, sp, #0xf0
  42bef4:	stp	x29, x30, [sp, #224]
  42bef8:	add	x29, sp, #0xe0
  42befc:	sub	x8, x29, #0x28
  42bf00:	str	x0, [x8, #24]
  42bf04:	str	x1, [x8, #16]
  42bf08:	stur	w2, [x29, #-28]
  42bf0c:	ldr	x9, [x8, #24]
  42bf10:	ldr	x9, [x9, #40]
  42bf14:	ldr	x10, [x8, #16]
  42bf18:	cmp	x9, x10
  42bf1c:	cset	w11, le
  42bf20:	and	w11, w11, #0x1
  42bf24:	mov	w0, w11
  42bf28:	sxtw	x9, w0
  42bf2c:	str	x8, [sp, #40]
  42bf30:	cbz	x9, 42bf50 <_obstack_memory_used@@Base+0xddb4>
  42bf34:	ldr	x8, [sp, #40]
  42bf38:	ldr	x9, [x8, #16]
  42bf3c:	ldr	x10, [x8, #24]
  42bf40:	ldr	x10, [x10, #40]
  42bf44:	subs	x9, x9, x10
  42bf48:	str	x9, [x8]
  42bf4c:	b	42c000 <_obstack_memory_used@@Base+0xde64>
  42bf50:	ldr	x8, [sp, #40]
  42bf54:	ldr	x9, [x8, #24]
  42bf58:	ldr	w10, [x9, #144]
  42bf5c:	cmp	w10, #0x1
  42bf60:	b.le	42bf70 <_obstack_memory_used@@Base+0xddd4>
  42bf64:	ldr	x8, [sp, #40]
  42bf68:	ldr	x9, [x8, #24]
  42bf6c:	str	xzr, [x9, #32]
  42bf70:	ldr	x8, [sp, #40]
  42bf74:	ldr	x9, [x8, #24]
  42bf78:	ldr	x9, [x9, #80]
  42bf7c:	ldr	x10, [x8, #24]
  42bf80:	str	x9, [x10, #88]
  42bf84:	ldr	x9, [x8, #24]
  42bf88:	ldr	x9, [x9, #96]
  42bf8c:	ldr	x10, [x8, #24]
  42bf90:	str	x9, [x10, #104]
  42bf94:	ldr	x9, [x8, #24]
  42bf98:	str	xzr, [x9, #48]
  42bf9c:	ldr	x9, [x8, #24]
  42bfa0:	str	xzr, [x9, #40]
  42bfa4:	ldr	x9, [x8, #24]
  42bfa8:	str	xzr, [x9, #56]
  42bfac:	ldr	x9, [x8, #24]
  42bfb0:	mov	w11, #0x0                   	// #0
  42bfb4:	strb	w11, [x9, #140]
  42bfb8:	ldur	w11, [x29, #-28]
  42bfbc:	mov	w12, #0x6                   	// #6
  42bfc0:	mov	w13, #0x4                   	// #4
  42bfc4:	tst	w11, #0x1
  42bfc8:	csel	w11, w13, w12, ne  // ne = any
  42bfcc:	ldr	x9, [x8, #24]
  42bfd0:	str	w11, [x9, #112]
  42bfd4:	ldr	x9, [x8, #24]
  42bfd8:	ldrb	w11, [x9, #139]
  42bfdc:	cbnz	w11, 42bff4 <_obstack_memory_used@@Base+0xde58>
  42bfe0:	ldr	x8, [sp, #40]
  42bfe4:	ldr	x9, [x8, #24]
  42bfe8:	ldr	x9, [x9]
  42bfec:	ldr	x10, [x8, #24]
  42bff0:	str	x9, [x10, #8]
  42bff4:	ldr	x8, [sp, #40]
  42bff8:	ldr	x9, [x8, #16]
  42bffc:	str	x9, [x8]
  42c000:	ldr	x8, [sp, #40]
  42c004:	ldr	x9, [x8]
  42c008:	cmp	x9, #0x0
  42c00c:	cset	w10, ne  // ne = any
  42c010:	and	w10, w10, #0x1
  42c014:	mov	w0, w10
  42c018:	sxtw	x9, w0
  42c01c:	cbz	x9, 42caa0 <_obstack_memory_used@@Base+0xe904>
  42c020:	ldr	x8, [sp, #40]
  42c024:	ldr	x9, [x8]
  42c028:	ldr	x10, [x8, #24]
  42c02c:	ldr	x10, [x10, #56]
  42c030:	cmp	x9, x10
  42c034:	cset	w11, lt  // lt = tstop
  42c038:	and	w11, w11, #0x1
  42c03c:	mov	w0, w11
  42c040:	sxtw	x9, w0
  42c044:	cbz	x9, 42c558 <_obstack_memory_used@@Base+0xe3bc>
  42c048:	ldr	x8, [sp, #40]
  42c04c:	ldr	x9, [x8, #24]
  42c050:	ldrb	w10, [x9, #140]
  42c054:	mov	w9, w10
  42c058:	cbz	x9, 42c458 <_obstack_memory_used@@Base+0xe2bc>
  42c05c:	stur	xzr, [x29, #-48]
  42c060:	ldr	x8, [sp, #40]
  42c064:	ldr	x9, [x8, #24]
  42c068:	ldr	x9, [x9, #48]
  42c06c:	stur	x9, [x29, #-56]
  42c070:	ldur	x8, [x29, #-56]
  42c074:	ldur	x9, [x29, #-48]
  42c078:	add	x8, x8, x9
  42c07c:	mov	x9, #0x2                   	// #2
  42c080:	sdiv	x8, x8, x9
  42c084:	stur	x8, [x29, #-64]
  42c088:	ldr	x8, [sp, #40]
  42c08c:	ldr	x9, [x8, #24]
  42c090:	ldr	x9, [x9, #24]
  42c094:	ldur	x10, [x29, #-64]
  42c098:	ldr	x9, [x9, x10, lsl #3]
  42c09c:	ldr	x10, [x8]
  42c0a0:	cmp	x9, x10
  42c0a4:	b.le	42c0b4 <_obstack_memory_used@@Base+0xdf18>
  42c0a8:	ldur	x8, [x29, #-64]
  42c0ac:	stur	x8, [x29, #-56]
  42c0b0:	b	42c0e8 <_obstack_memory_used@@Base+0xdf4c>
  42c0b4:	ldr	x8, [sp, #40]
  42c0b8:	ldr	x9, [x8, #24]
  42c0bc:	ldr	x9, [x9, #24]
  42c0c0:	ldur	x10, [x29, #-64]
  42c0c4:	ldr	x9, [x9, x10, lsl #3]
  42c0c8:	ldr	x10, [x8]
  42c0cc:	cmp	x9, x10
  42c0d0:	b.ge	42c0e4 <_obstack_memory_used@@Base+0xdf48>  // b.tcont
  42c0d4:	ldur	x8, [x29, #-64]
  42c0d8:	add	x8, x8, #0x1
  42c0dc:	stur	x8, [x29, #-48]
  42c0e0:	b	42c0e8 <_obstack_memory_used@@Base+0xdf4c>
  42c0e4:	b	42c0f8 <_obstack_memory_used@@Base+0xdf5c>
  42c0e8:	ldur	x8, [x29, #-48]
  42c0ec:	ldur	x9, [x29, #-56]
  42c0f0:	cmp	x8, x9
  42c0f4:	b.lt	42c070 <_obstack_memory_used@@Base+0xded4>  // b.tstop
  42c0f8:	ldr	x8, [sp, #40]
  42c0fc:	ldr	x9, [x8, #24]
  42c100:	ldr	x9, [x9, #24]
  42c104:	ldur	x10, [x29, #-64]
  42c108:	ldr	x9, [x9, x10, lsl #3]
  42c10c:	ldr	x10, [x8]
  42c110:	cmp	x9, x10
  42c114:	b.ge	42c124 <_obstack_memory_used@@Base+0xdf88>  // b.tcont
  42c118:	ldur	x8, [x29, #-64]
  42c11c:	add	x8, x8, #0x1
  42c120:	stur	x8, [x29, #-64]
  42c124:	ldr	x8, [sp, #40]
  42c128:	ldr	x0, [x8, #24]
  42c12c:	ldur	x9, [x29, #-64]
  42c130:	subs	x1, x9, #0x1
  42c134:	ldur	w2, [x29, #-28]
  42c138:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42c13c:	ldr	x8, [sp, #40]
  42c140:	ldr	x9, [x8, #24]
  42c144:	str	w0, [x9, #112]
  42c148:	ldr	x9, [x8, #24]
  42c14c:	ldr	x9, [x9, #48]
  42c150:	ldr	x10, [x8]
  42c154:	cmp	x9, x10
  42c158:	b.le	42c290 <_obstack_memory_used@@Base+0xe0f4>
  42c15c:	ldur	x8, [x29, #-64]
  42c160:	ldr	x9, [sp, #40]
  42c164:	ldr	x10, [x9]
  42c168:	cmp	x8, x10
  42c16c:	b.ne	42c290 <_obstack_memory_used@@Base+0xe0f4>  // b.any
  42c170:	ldr	x8, [sp, #40]
  42c174:	ldr	x9, [x8, #24]
  42c178:	ldr	x9, [x9, #24]
  42c17c:	ldur	x10, [x29, #-64]
  42c180:	ldr	x9, [x9, x10, lsl #3]
  42c184:	ldr	x10, [x8]
  42c188:	cmp	x9, x10
  42c18c:	b.ne	42c290 <_obstack_memory_used@@Base+0xe0f4>  // b.any
  42c190:	ldr	x8, [sp, #40]
  42c194:	ldr	x9, [x8, #24]
  42c198:	ldr	x0, [x9, #16]
  42c19c:	ldr	x9, [x8, #24]
  42c1a0:	ldr	x9, [x9, #16]
  42c1a4:	ldr	x10, [x8]
  42c1a8:	mov	x11, #0x4                   	// #4
  42c1ac:	mul	x10, x11, x10
  42c1b0:	add	x1, x9, x10
  42c1b4:	ldr	x9, [x8, #24]
  42c1b8:	ldr	x9, [x9, #48]
  42c1bc:	ldr	x10, [x8]
  42c1c0:	subs	x9, x9, x10
  42c1c4:	mov	x10, #0x4                   	// #4
  42c1c8:	mul	x2, x9, x10
  42c1cc:	bl	4026b0 <memmove@plt>
  42c1d0:	ldr	x8, [sp, #40]
  42c1d4:	ldr	x9, [x8, #24]
  42c1d8:	ldr	x0, [x9, #8]
  42c1dc:	ldr	x9, [x8, #24]
  42c1e0:	ldr	x9, [x9, #8]
  42c1e4:	ldr	x10, [x8]
  42c1e8:	add	x1, x9, x10
  42c1ec:	ldr	x9, [x8, #24]
  42c1f0:	ldr	x9, [x9, #48]
  42c1f4:	ldr	x10, [x8]
  42c1f8:	subs	x2, x9, x10
  42c1fc:	bl	4026b0 <memmove@plt>
  42c200:	ldr	x8, [sp, #40]
  42c204:	ldr	x9, [x8]
  42c208:	ldr	x10, [x8, #24]
  42c20c:	ldr	x11, [x10, #48]
  42c210:	subs	x9, x11, x9
  42c214:	str	x9, [x10, #48]
  42c218:	ldr	x9, [x8]
  42c21c:	ldr	x10, [x8, #24]
  42c220:	ldr	x11, [x10, #56]
  42c224:	subs	x9, x11, x9
  42c228:	str	x9, [x10, #56]
  42c22c:	stur	xzr, [x29, #-48]
  42c230:	ldur	x8, [x29, #-48]
  42c234:	ldr	x9, [sp, #40]
  42c238:	ldr	x10, [x9, #24]
  42c23c:	ldr	x10, [x10, #48]
  42c240:	cmp	x8, x10
  42c244:	b.ge	42c28c <_obstack_memory_used@@Base+0xe0f0>  // b.tcont
  42c248:	ldr	x8, [sp, #40]
  42c24c:	ldr	x9, [x8, #24]
  42c250:	ldr	x9, [x9, #24]
  42c254:	ldur	x10, [x29, #-48]
  42c258:	ldr	x11, [x8]
  42c25c:	add	x10, x10, x11
  42c260:	ldr	x9, [x9, x10, lsl #3]
  42c264:	ldr	x10, [x8]
  42c268:	subs	x9, x9, x10
  42c26c:	ldr	x10, [x8, #24]
  42c270:	ldr	x10, [x10, #24]
  42c274:	ldur	x11, [x29, #-48]
  42c278:	str	x9, [x10, x11, lsl #3]
  42c27c:	ldur	x8, [x29, #-48]
  42c280:	add	x8, x8, #0x1
  42c284:	stur	x8, [x29, #-48]
  42c288:	b	42c230 <_obstack_memory_used@@Base+0xe094>
  42c28c:	b	42c454 <_obstack_memory_used@@Base+0xe2b8>
  42c290:	ldr	x8, [sp, #40]
  42c294:	ldr	x9, [x8, #24]
  42c298:	ldr	x9, [x9, #80]
  42c29c:	ldr	x10, [x8, #16]
  42c2a0:	subs	x9, x9, x10
  42c2a4:	ldr	x10, [x8]
  42c2a8:	add	x9, x9, x10
  42c2ac:	ldr	x10, [x8, #24]
  42c2b0:	str	x9, [x10, #88]
  42c2b4:	ldr	x9, [x8, #24]
  42c2b8:	ldr	x9, [x9, #96]
  42c2bc:	ldr	x10, [x8, #16]
  42c2c0:	subs	x9, x9, x10
  42c2c4:	ldr	x10, [x8]
  42c2c8:	add	x9, x9, x10
  42c2cc:	ldr	x10, [x8, #24]
  42c2d0:	str	x9, [x10, #104]
  42c2d4:	ldr	x9, [x8, #24]
  42c2d8:	mov	w11, #0x0                   	// #0
  42c2dc:	strb	w11, [x9, #140]
  42c2e0:	ldur	x8, [x29, #-64]
  42c2e4:	cmp	x8, #0x0
  42c2e8:	cset	w9, le
  42c2ec:	mov	w10, #0x0                   	// #0
  42c2f0:	str	w10, [sp, #36]
  42c2f4:	tbnz	w9, #0, 42c320 <_obstack_memory_used@@Base+0xe184>
  42c2f8:	ldr	x8, [sp, #40]
  42c2fc:	ldr	x9, [x8, #24]
  42c300:	ldr	x9, [x9, #24]
  42c304:	ldur	x10, [x29, #-64]
  42c308:	subs	x10, x10, #0x1
  42c30c:	ldr	x9, [x9, x10, lsl #3]
  42c310:	ldr	x10, [x8]
  42c314:	cmp	x9, x10
  42c318:	cset	w11, eq  // eq = none
  42c31c:	str	w11, [sp, #36]
  42c320:	ldr	w8, [sp, #36]
  42c324:	tbnz	w8, #0, 42c32c <_obstack_memory_used@@Base+0xe190>
  42c328:	b	42c33c <_obstack_memory_used@@Base+0xe1a0>
  42c32c:	ldur	x8, [x29, #-64]
  42c330:	subs	x8, x8, #0x1
  42c334:	stur	x8, [x29, #-64]
  42c338:	b	42c2e0 <_obstack_memory_used@@Base+0xe144>
  42c33c:	ldur	x8, [x29, #-64]
  42c340:	ldr	x9, [sp, #40]
  42c344:	ldr	x10, [x9, #24]
  42c348:	ldr	x10, [x10, #48]
  42c34c:	cmp	x8, x10
  42c350:	b.ge	42c388 <_obstack_memory_used@@Base+0xe1ec>  // b.tcont
  42c354:	ldr	x8, [sp, #40]
  42c358:	ldr	x9, [x8, #24]
  42c35c:	ldr	x9, [x9, #16]
  42c360:	ldur	x10, [x29, #-64]
  42c364:	ldr	w11, [x9, x10, lsl #2]
  42c368:	mov	w12, #0xffffffff            	// #-1
  42c36c:	cmp	w11, w12
  42c370:	b.eq	42c378 <_obstack_memory_used@@Base+0xe1dc>  // b.none
  42c374:	b	42c388 <_obstack_memory_used@@Base+0xe1ec>
  42c378:	ldur	x8, [x29, #-64]
  42c37c:	add	x8, x8, #0x1
  42c380:	stur	x8, [x29, #-64]
  42c384:	b	42c33c <_obstack_memory_used@@Base+0xe1a0>
  42c388:	ldur	x8, [x29, #-64]
  42c38c:	ldr	x9, [sp, #40]
  42c390:	ldr	x10, [x9, #24]
  42c394:	ldr	x10, [x10, #48]
  42c398:	cmp	x8, x10
  42c39c:	b.ne	42c3b0 <_obstack_memory_used@@Base+0xe214>  // b.any
  42c3a0:	ldr	x8, [sp, #40]
  42c3a4:	ldr	x9, [x8, #24]
  42c3a8:	str	xzr, [x9, #48]
  42c3ac:	b	42c440 <_obstack_memory_used@@Base+0xe2a4>
  42c3b0:	ldr	x8, [sp, #40]
  42c3b4:	ldr	x9, [x8, #24]
  42c3b8:	ldr	x9, [x9, #24]
  42c3bc:	ldur	x10, [x29, #-64]
  42c3c0:	ldr	x9, [x9, x10, lsl #3]
  42c3c4:	ldr	x10, [x8]
  42c3c8:	subs	x9, x9, x10
  42c3cc:	ldr	x10, [x8, #24]
  42c3d0:	str	x9, [x10, #48]
  42c3d4:	ldr	x9, [x8, #24]
  42c3d8:	ldr	x9, [x9, #48]
  42c3dc:	cbz	x9, 42c440 <_obstack_memory_used@@Base+0xe2a4>
  42c3e0:	stur	xzr, [x29, #-48]
  42c3e4:	ldur	x8, [x29, #-48]
  42c3e8:	ldr	x9, [sp, #40]
  42c3ec:	ldr	x10, [x9, #24]
  42c3f0:	ldr	x10, [x10, #48]
  42c3f4:	cmp	x8, x10
  42c3f8:	b.ge	42c424 <_obstack_memory_used@@Base+0xe288>  // b.tcont
  42c3fc:	ldr	x8, [sp, #40]
  42c400:	ldr	x9, [x8, #24]
  42c404:	ldr	x9, [x9, #16]
  42c408:	ldur	x10, [x29, #-48]
  42c40c:	mov	w11, #0xffffffff            	// #-1
  42c410:	str	w11, [x9, x10, lsl #2]
  42c414:	ldur	x8, [x29, #-48]
  42c418:	add	x8, x8, #0x1
  42c41c:	stur	x8, [x29, #-48]
  42c420:	b	42c3e4 <_obstack_memory_used@@Base+0xe248>
  42c424:	ldr	x8, [sp, #40]
  42c428:	ldr	x9, [x8, #24]
  42c42c:	ldr	x0, [x9, #8]
  42c430:	ldr	x9, [x8, #24]
  42c434:	ldr	x2, [x9, #48]
  42c438:	mov	w1, #0xffffffff            	// #-1
  42c43c:	bl	402960 <memset@plt>
  42c440:	ldr	x8, [sp, #40]
  42c444:	ldr	x9, [x8, #24]
  42c448:	ldr	x9, [x9, #48]
  42c44c:	ldr	x10, [x8, #24]
  42c450:	str	x9, [x10, #56]
  42c454:	b	42c554 <_obstack_memory_used@@Base+0xe3b8>
  42c458:	ldr	x8, [sp, #40]
  42c45c:	ldr	x0, [x8, #24]
  42c460:	ldr	x9, [x8]
  42c464:	subs	x1, x9, #0x1
  42c468:	ldur	w2, [x29, #-28]
  42c46c:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42c470:	ldr	x8, [sp, #40]
  42c474:	ldr	x9, [x8, #24]
  42c478:	str	w0, [x9, #112]
  42c47c:	ldr	x9, [x8, #24]
  42c480:	ldr	w10, [x9, #144]
  42c484:	cmp	w10, #0x1
  42c488:	b.le	42c4cc <_obstack_memory_used@@Base+0xe330>
  42c48c:	ldr	x8, [sp, #40]
  42c490:	ldr	x9, [x8, #24]
  42c494:	ldr	x0, [x9, #16]
  42c498:	ldr	x9, [x8, #24]
  42c49c:	ldr	x9, [x9, #16]
  42c4a0:	ldr	x10, [x8]
  42c4a4:	mov	x11, #0x4                   	// #4
  42c4a8:	mul	x10, x11, x10
  42c4ac:	add	x1, x9, x10
  42c4b0:	ldr	x9, [x8, #24]
  42c4b4:	ldr	x9, [x9, #48]
  42c4b8:	ldr	x10, [x8]
  42c4bc:	subs	x9, x9, x10
  42c4c0:	mov	x10, #0x4                   	// #4
  42c4c4:	mul	x2, x9, x10
  42c4c8:	bl	4026b0 <memmove@plt>
  42c4cc:	ldr	x8, [sp, #40]
  42c4d0:	ldr	x9, [x8, #24]
  42c4d4:	ldrb	w10, [x9, #139]
  42c4d8:	mov	w9, w10
  42c4dc:	cbz	x9, 42c510 <_obstack_memory_used@@Base+0xe374>
  42c4e0:	ldr	x8, [sp, #40]
  42c4e4:	ldr	x9, [x8, #24]
  42c4e8:	ldr	x0, [x9, #8]
  42c4ec:	ldr	x9, [x8, #24]
  42c4f0:	ldr	x9, [x9, #8]
  42c4f4:	ldr	x10, [x8]
  42c4f8:	add	x1, x9, x10
  42c4fc:	ldr	x9, [x8, #24]
  42c500:	ldr	x9, [x9, #48]
  42c504:	ldr	x10, [x8]
  42c508:	subs	x2, x9, x10
  42c50c:	bl	4026b0 <memmove@plt>
  42c510:	ldr	x8, [sp, #40]
  42c514:	ldr	x9, [x8]
  42c518:	ldr	x10, [x8, #24]
  42c51c:	ldr	x11, [x10, #48]
  42c520:	subs	x9, x11, x9
  42c524:	str	x9, [x10, #48]
  42c528:	ldr	x9, [x8]
  42c52c:	ldr	x10, [x8, #24]
  42c530:	ldr	x11, [x10, #56]
  42c534:	subs	x9, x11, x9
  42c538:	str	x9, [x10, #56]
  42c53c:	ldr	x9, [x8, #24]
  42c540:	ldr	x9, [x9, #48]
  42c544:	cmp	x9, #0x0
  42c548:	cset	w12, le
  42c54c:	tbnz	w12, #0, 42c554 <_obstack_memory_used@@Base+0xe3b8>
  42c550:	b	42c554 <_obstack_memory_used@@Base+0xe3b8>
  42c554:	b	42ca74 <_obstack_memory_used@@Base+0xe8d8>
  42c558:	ldr	x8, [sp, #40]
  42c55c:	ldr	x9, [x8, #24]
  42c560:	ldr	x9, [x9, #48]
  42c564:	stur	x9, [x29, #-72]
  42c568:	ldr	x9, [x8, #24]
  42c56c:	ldrb	w10, [x9, #140]
  42c570:	mov	w9, w10
  42c574:	cbz	x9, 42c5c8 <_obstack_memory_used@@Base+0xe42c>
  42c578:	ldr	x8, [sp, #40]
  42c57c:	ldr	x9, [x8, #24]
  42c580:	ldr	x9, [x9, #80]
  42c584:	ldr	x10, [x8, #16]
  42c588:	subs	x9, x9, x10
  42c58c:	ldr	x10, [x8]
  42c590:	add	x9, x9, x10
  42c594:	ldr	x10, [x8, #24]
  42c598:	str	x9, [x10, #88]
  42c59c:	ldr	x9, [x8, #24]
  42c5a0:	ldr	x9, [x9, #96]
  42c5a4:	ldr	x10, [x8, #16]
  42c5a8:	subs	x9, x9, x10
  42c5ac:	ldr	x10, [x8]
  42c5b0:	add	x9, x9, x10
  42c5b4:	ldr	x10, [x8, #24]
  42c5b8:	str	x9, [x10, #104]
  42c5bc:	ldr	x9, [x8, #24]
  42c5c0:	mov	w11, #0x0                   	// #0
  42c5c4:	strb	w11, [x9, #140]
  42c5c8:	ldr	x8, [sp, #40]
  42c5cc:	ldr	x9, [x8, #24]
  42c5d0:	str	xzr, [x9, #48]
  42c5d4:	ldr	x9, [x8, #24]
  42c5d8:	ldr	w10, [x9, #144]
  42c5dc:	cmp	w10, #0x1
  42c5e0:	b.le	42c9a4 <_obstack_memory_used@@Base+0xe808>
  42c5e4:	mov	w8, #0xffffffff            	// #-1
  42c5e8:	stur	w8, [x29, #-84]
  42c5ec:	ldr	x9, [sp, #40]
  42c5f0:	ldr	x10, [x9, #24]
  42c5f4:	ldrb	w8, [x10, #137]
  42c5f8:	cbz	w8, 42c800 <_obstack_memory_used@@Base+0xe664>
  42c5fc:	ldr	x8, [sp, #40]
  42c600:	ldr	x9, [x8, #24]
  42c604:	ldr	x9, [x9]
  42c608:	ldr	x10, [x8, #24]
  42c60c:	ldr	x10, [x10, #40]
  42c610:	add	x9, x9, x10
  42c614:	stur	x9, [x29, #-96]
  42c618:	ldur	x9, [x29, #-96]
  42c61c:	ldr	x10, [x8]
  42c620:	ldr	x11, [x8, #24]
  42c624:	ldrsw	x11, [x11, #144]
  42c628:	subs	x10, x10, x11
  42c62c:	add	x9, x9, x10
  42c630:	str	x9, [sp, #112]
  42c634:	ldr	x9, [sp, #112]
  42c638:	ldr	x10, [x8, #24]
  42c63c:	ldr	x10, [x10]
  42c640:	cmp	x9, x10
  42c644:	b.cs	42c658 <_obstack_memory_used@@Base+0xe4bc>  // b.hs, b.nlast
  42c648:	ldr	x8, [sp, #40]
  42c64c:	ldr	x9, [x8, #24]
  42c650:	ldr	x9, [x9]
  42c654:	str	x9, [sp, #112]
  42c658:	ldur	x8, [x29, #-96]
  42c65c:	ldr	x9, [sp, #40]
  42c660:	ldr	x10, [x9]
  42c664:	add	x8, x8, x10
  42c668:	mov	x10, #0xffffffffffffffff    	// #-1
  42c66c:	add	x8, x8, x10
  42c670:	stur	x8, [x29, #-104]
  42c674:	ldur	x8, [x29, #-104]
  42c678:	ldr	x9, [sp, #112]
  42c67c:	cmp	x8, x9
  42c680:	b.cc	42c800 <_obstack_memory_used@@Base+0xe664>  // b.lo, b.ul, b.last
  42c684:	ldur	x8, [x29, #-104]
  42c688:	ldrb	w9, [x8]
  42c68c:	and	w9, w9, #0xc0
  42c690:	cmp	w9, #0x80
  42c694:	b.eq	42c7ec <_obstack_memory_used@@Base+0xe650>  // b.none
  42c698:	ldur	x8, [x29, #-96]
  42c69c:	ldr	x9, [sp, #40]
  42c6a0:	ldr	x10, [x9, #24]
  42c6a4:	ldr	x10, [x10, #88]
  42c6a8:	add	x8, x8, x10
  42c6ac:	ldur	x10, [x29, #-104]
  42c6b0:	subs	x8, x8, x10
  42c6b4:	str	x8, [sp, #88]
  42c6b8:	ldur	x8, [x29, #-104]
  42c6bc:	str	x8, [sp, #64]
  42c6c0:	ldr	x8, [x9, #24]
  42c6c4:	ldr	x8, [x8, #120]
  42c6c8:	cmp	x8, #0x0
  42c6cc:	cset	w11, ne  // ne = any
  42c6d0:	and	w11, w11, #0x1
  42c6d4:	mov	w0, w11
  42c6d8:	sxtw	x8, w0
  42c6dc:	cbz	x8, 42c760 <_obstack_memory_used@@Base+0xe5c4>
  42c6e0:	ldr	x8, [sp, #88]
  42c6e4:	cmp	x8, #0x6
  42c6e8:	b.ge	42c6f8 <_obstack_memory_used@@Base+0xe55c>  // b.tcont
  42c6ec:	ldr	x8, [sp, #88]
  42c6f0:	str	x8, [sp, #24]
  42c6f4:	b	42c700 <_obstack_memory_used@@Base+0xe564>
  42c6f8:	mov	x8, #0x6                   	// #6
  42c6fc:	str	x8, [sp, #24]
  42c700:	ldr	x8, [sp, #24]
  42c704:	str	w8, [sp, #60]
  42c708:	ldr	w8, [sp, #60]
  42c70c:	subs	w8, w8, #0x1
  42c710:	str	w8, [sp, #60]
  42c714:	cmp	w8, #0x0
  42c718:	cset	w8, lt  // lt = tstop
  42c71c:	tbnz	w8, #0, 42c758 <_obstack_memory_used@@Base+0xe5bc>
  42c720:	ldr	x8, [sp, #40]
  42c724:	ldr	x9, [x8, #24]
  42c728:	ldr	x9, [x9, #120]
  42c72c:	ldur	x10, [x29, #-104]
  42c730:	ldrsw	x11, [sp, #60]
  42c734:	ldrb	w12, [x10, x11]
  42c738:	mov	w10, w12
  42c73c:	add	x9, x9, x10
  42c740:	ldrb	w12, [x9]
  42c744:	ldrsw	x9, [sp, #60]
  42c748:	add	x10, sp, #0x52
  42c74c:	add	x9, x10, x9
  42c750:	strb	w12, [x9]
  42c754:	b	42c708 <_obstack_memory_used@@Base+0xe56c>
  42c758:	add	x8, sp, #0x52
  42c75c:	str	x8, [sp, #64]
  42c760:	add	x3, sp, #0x68
  42c764:	str	xzr, [sp, #104]
  42c768:	ldr	x1, [sp, #64]
  42c76c:	ldr	x2, [sp, #88]
  42c770:	add	x0, sp, #0x64
  42c774:	bl	41da58 <wcrtomb@plt+0x1aca8>
  42c778:	str	x0, [sp, #72]
  42c77c:	ldur	x8, [x29, #-96]
  42c780:	ldr	x9, [sp, #40]
  42c784:	ldr	x10, [x9]
  42c788:	add	x8, x8, x10
  42c78c:	ldur	x10, [x29, #-104]
  42c790:	subs	x8, x8, x10
  42c794:	ldr	x10, [sp, #72]
  42c798:	cmp	x8, x10
  42c79c:	b.hi	42c7e8 <_obstack_memory_used@@Base+0xe64c>  // b.pmore
  42c7a0:	ldr	x8, [sp, #72]
  42c7a4:	mov	x9, #0xfffffffffffffffe    	// #-2
  42c7a8:	cmp	x8, x9
  42c7ac:	b.cs	42c7e8 <_obstack_memory_used@@Base+0xe64c>  // b.hs, b.nlast
  42c7b0:	ldr	x8, [sp, #40]
  42c7b4:	ldr	x9, [x8, #24]
  42c7b8:	str	xzr, [x9, #32]
  42c7bc:	ldr	x9, [sp, #72]
  42c7c0:	ldur	x10, [x29, #-96]
  42c7c4:	ldr	x11, [x8]
  42c7c8:	add	x10, x10, x11
  42c7cc:	ldur	x11, [x29, #-104]
  42c7d0:	subs	x10, x10, x11
  42c7d4:	subs	x9, x9, x10
  42c7d8:	ldr	x10, [x8, #24]
  42c7dc:	str	x9, [x10, #48]
  42c7e0:	ldr	w12, [sp, #100]
  42c7e4:	stur	w12, [x29, #-84]
  42c7e8:	b	42c800 <_obstack_memory_used@@Base+0xe664>
  42c7ec:	ldur	x8, [x29, #-104]
  42c7f0:	mov	x9, #0xffffffffffffffff    	// #-1
  42c7f4:	add	x8, x8, x9
  42c7f8:	stur	x8, [x29, #-104]
  42c7fc:	b	42c674 <_obstack_memory_used@@Base+0xe4d8>
  42c800:	ldur	w8, [x29, #-84]
  42c804:	mov	w9, #0xffffffff            	// #-1
  42c808:	cmp	w8, w9
  42c80c:	b.ne	42c838 <_obstack_memory_used@@Base+0xe69c>  // b.any
  42c810:	ldr	x8, [sp, #40]
  42c814:	ldr	x0, [x8, #24]
  42c818:	ldr	x1, [x8, #16]
  42c81c:	sub	x2, x29, #0x54
  42c820:	bl	42dd18 <_obstack_memory_used@@Base+0xfb7c>
  42c824:	ldr	x8, [sp, #40]
  42c828:	ldr	x9, [x8, #16]
  42c82c:	subs	x9, x0, x9
  42c830:	ldr	x10, [x8, #24]
  42c834:	str	x9, [x10, #48]
  42c838:	ldur	w8, [x29, #-84]
  42c83c:	mov	w9, #0xffffffff            	// #-1
  42c840:	cmp	w8, w9
  42c844:	b.ne	42c870 <_obstack_memory_used@@Base+0xe6d4>  // b.any
  42c848:	ldr	x8, [sp, #40]
  42c84c:	ldr	x0, [x8, #24]
  42c850:	ldur	x9, [x29, #-72]
  42c854:	subs	x1, x9, #0x1
  42c858:	ldur	w2, [x29, #-28]
  42c85c:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42c860:	ldr	x8, [sp, #40]
  42c864:	ldr	x9, [x8, #24]
  42c868:	str	w0, [x9, #112]
  42c86c:	b	42c90c <_obstack_memory_used@@Base+0xe770>
  42c870:	ldr	x8, [sp, #40]
  42c874:	ldr	x9, [x8, #24]
  42c878:	ldrb	w10, [x9, #142]
  42c87c:	cmp	w10, #0x0
  42c880:	cset	w10, ne  // ne = any
  42c884:	and	w10, w10, #0x1
  42c888:	mov	w0, w10
  42c88c:	sxtw	x9, w0
  42c890:	cbz	x9, 42c8b8 <_obstack_memory_used@@Base+0xe71c>
  42c894:	ldur	w0, [x29, #-84]
  42c898:	bl	402c30 <iswalnum@plt>
  42c89c:	cbnz	w0, 42c8ac <_obstack_memory_used@@Base+0xe710>
  42c8a0:	ldur	w8, [x29, #-84]
  42c8a4:	cmp	w8, #0x5f
  42c8a8:	b.ne	42c8b8 <_obstack_memory_used@@Base+0xe71c>  // b.any
  42c8ac:	mov	w8, #0x1                   	// #1
  42c8b0:	str	w8, [sp, #20]
  42c8b4:	b	42c8fc <_obstack_memory_used@@Base+0xe760>
  42c8b8:	ldur	w8, [x29, #-84]
  42c8bc:	mov	w9, #0x0                   	// #0
  42c8c0:	cmp	w8, #0xa
  42c8c4:	str	w9, [sp, #16]
  42c8c8:	b.ne	42c8e4 <_obstack_memory_used@@Base+0xe748>  // b.any
  42c8cc:	ldr	x8, [sp, #40]
  42c8d0:	ldr	x9, [x8, #24]
  42c8d4:	ldrb	w10, [x9, #141]
  42c8d8:	cmp	w10, #0x0
  42c8dc:	cset	w10, ne  // ne = any
  42c8e0:	str	w10, [sp, #16]
  42c8e4:	ldr	w8, [sp, #16]
  42c8e8:	mov	w9, #0x2                   	// #2
  42c8ec:	mov	w10, wzr
  42c8f0:	tst	w8, #0x1
  42c8f4:	csel	w8, w9, w10, ne  // ne = any
  42c8f8:	str	w8, [sp, #20]
  42c8fc:	ldr	w8, [sp, #20]
  42c900:	ldr	x9, [sp, #40]
  42c904:	ldr	x10, [x9, #24]
  42c908:	str	w8, [x10, #112]
  42c90c:	ldr	x8, [sp, #40]
  42c910:	ldr	x9, [x8, #24]
  42c914:	ldr	x9, [x9, #48]
  42c918:	cbz	x9, 42c98c <_obstack_memory_used@@Base+0xe7f0>
  42c91c:	stur	xzr, [x29, #-80]
  42c920:	ldur	x8, [x29, #-80]
  42c924:	ldr	x9, [sp, #40]
  42c928:	ldr	x10, [x9, #24]
  42c92c:	ldr	x10, [x10, #48]
  42c930:	cmp	x8, x10
  42c934:	b.ge	42c960 <_obstack_memory_used@@Base+0xe7c4>  // b.tcont
  42c938:	ldr	x8, [sp, #40]
  42c93c:	ldr	x9, [x8, #24]
  42c940:	ldr	x9, [x9, #16]
  42c944:	ldur	x10, [x29, #-80]
  42c948:	mov	w11, #0xffffffff            	// #-1
  42c94c:	str	w11, [x9, x10, lsl #2]
  42c950:	ldur	x8, [x29, #-80]
  42c954:	add	x8, x8, #0x1
  42c958:	stur	x8, [x29, #-80]
  42c95c:	b	42c920 <_obstack_memory_used@@Base+0xe784>
  42c960:	ldr	x8, [sp, #40]
  42c964:	ldr	x9, [x8, #24]
  42c968:	ldrb	w10, [x9, #139]
  42c96c:	cbz	w10, 42c98c <_obstack_memory_used@@Base+0xe7f0>
  42c970:	ldr	x8, [sp, #40]
  42c974:	ldr	x9, [x8, #24]
  42c978:	ldr	x0, [x9, #8]
  42c97c:	ldr	x9, [x8, #24]
  42c980:	ldr	x2, [x9, #48]
  42c984:	mov	w1, #0xffffffff            	// #-1
  42c988:	bl	402960 <memset@plt>
  42c98c:	ldr	x8, [sp, #40]
  42c990:	ldr	x9, [x8, #24]
  42c994:	ldr	x9, [x9, #48]
  42c998:	ldr	x10, [x8, #24]
  42c99c:	str	x9, [x10, #56]
  42c9a0:	b	42ca74 <_obstack_memory_used@@Base+0xe8d8>
  42c9a4:	ldr	x8, [sp, #40]
  42c9a8:	ldr	x9, [x8, #24]
  42c9ac:	ldr	x9, [x9]
  42c9b0:	ldr	x10, [x8, #24]
  42c9b4:	ldr	x10, [x10, #40]
  42c9b8:	ldr	x11, [x8]
  42c9bc:	add	x10, x10, x11
  42c9c0:	subs	x10, x10, #0x1
  42c9c4:	ldrb	w12, [x9, x10]
  42c9c8:	str	w12, [sp, #56]
  42c9cc:	ldr	x9, [x8, #24]
  42c9d0:	str	xzr, [x9, #56]
  42c9d4:	ldr	x9, [x8, #24]
  42c9d8:	ldr	x9, [x9, #120]
  42c9dc:	cbz	x9, 42c9f8 <_obstack_memory_used@@Base+0xe85c>
  42c9e0:	ldr	x8, [sp, #40]
  42c9e4:	ldr	x9, [x8, #24]
  42c9e8:	ldr	x9, [x9, #120]
  42c9ec:	ldrsw	x10, [sp, #56]
  42c9f0:	ldrb	w11, [x9, x10]
  42c9f4:	str	w11, [sp, #56]
  42c9f8:	ldr	x8, [sp, #40]
  42c9fc:	ldr	x9, [x8, #24]
  42ca00:	ldr	x0, [x9, #128]
  42ca04:	ldrsw	x1, [sp, #56]
  42ca08:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  42ca0c:	tbnz	w0, #0, 42ca14 <_obstack_memory_used@@Base+0xe878>
  42ca10:	b	42ca20 <_obstack_memory_used@@Base+0xe884>
  42ca14:	mov	w8, #0x1                   	// #1
  42ca18:	str	w8, [sp, #12]
  42ca1c:	b	42ca64 <_obstack_memory_used@@Base+0xe8c8>
  42ca20:	ldr	w8, [sp, #56]
  42ca24:	mov	w9, #0x0                   	// #0
  42ca28:	cmp	w8, #0xa
  42ca2c:	str	w9, [sp, #8]
  42ca30:	b.ne	42ca4c <_obstack_memory_used@@Base+0xe8b0>  // b.any
  42ca34:	ldr	x8, [sp, #40]
  42ca38:	ldr	x9, [x8, #24]
  42ca3c:	ldrb	w10, [x9, #141]
  42ca40:	cmp	w10, #0x0
  42ca44:	cset	w10, ne  // ne = any
  42ca48:	str	w10, [sp, #8]
  42ca4c:	ldr	w8, [sp, #8]
  42ca50:	mov	w9, #0x2                   	// #2
  42ca54:	mov	w10, wzr
  42ca58:	tst	w8, #0x1
  42ca5c:	csel	w8, w9, w10, ne  // ne = any
  42ca60:	str	w8, [sp, #12]
  42ca64:	ldr	w8, [sp, #12]
  42ca68:	ldr	x9, [sp, #40]
  42ca6c:	ldr	x10, [x9, #24]
  42ca70:	str	w8, [x10, #112]
  42ca74:	ldr	x8, [sp, #40]
  42ca78:	ldr	x9, [x8, #24]
  42ca7c:	ldrb	w10, [x9, #139]
  42ca80:	mov	w9, w10
  42ca84:	cbnz	x9, 42caa0 <_obstack_memory_used@@Base+0xe904>
  42ca88:	ldr	x8, [sp, #40]
  42ca8c:	ldr	x9, [x8]
  42ca90:	ldr	x10, [x8, #24]
  42ca94:	ldr	x11, [x10, #8]
  42ca98:	add	x9, x11, x9
  42ca9c:	str	x9, [x10, #8]
  42caa0:	ldr	x8, [sp, #40]
  42caa4:	ldr	x9, [x8, #16]
  42caa8:	ldr	x10, [x8, #24]
  42caac:	str	x9, [x10, #40]
  42cab0:	ldr	x9, [x8]
  42cab4:	ldr	x10, [x8, #24]
  42cab8:	ldr	x11, [x10, #88]
  42cabc:	subs	x9, x11, x9
  42cac0:	str	x9, [x10, #88]
  42cac4:	ldr	x9, [x8]
  42cac8:	ldr	x10, [x8, #24]
  42cacc:	ldr	x11, [x10, #104]
  42cad0:	subs	x9, x11, x9
  42cad4:	str	x9, [x10, #104]
  42cad8:	ldr	x9, [x8, #24]
  42cadc:	ldr	w12, [x9, #144]
  42cae0:	cmp	w12, #0x1
  42cae4:	b.le	42cb44 <_obstack_memory_used@@Base+0xe9a8>
  42cae8:	ldr	x8, [sp, #40]
  42caec:	ldr	x9, [x8, #24]
  42caf0:	ldrb	w10, [x9, #136]
  42caf4:	cbz	w10, 42cb34 <_obstack_memory_used@@Base+0xe998>
  42caf8:	ldr	x8, [sp, #40]
  42cafc:	ldr	x0, [x8, #24]
  42cb00:	bl	42260c <_obstack_memory_used@@Base+0x4470>
  42cb04:	str	w0, [sp, #52]
  42cb08:	ldr	w9, [sp, #52]
  42cb0c:	cmp	w9, #0x0
  42cb10:	cset	w9, ne  // ne = any
  42cb14:	and	w9, w9, #0x1
  42cb18:	mov	w1, w9
  42cb1c:	sxtw	x8, w1
  42cb20:	cbz	x8, 42cb30 <_obstack_memory_used@@Base+0xe994>
  42cb24:	ldr	w8, [sp, #52]
  42cb28:	stur	w8, [x29, #-4]
  42cb2c:	b	42cbbc <_obstack_memory_used@@Base+0xea20>
  42cb30:	b	42cb40 <_obstack_memory_used@@Base+0xe9a4>
  42cb34:	ldr	x8, [sp, #40]
  42cb38:	ldr	x0, [x8, #24]
  42cb3c:	bl	423304 <_obstack_memory_used@@Base+0x5168>
  42cb40:	b	42cbac <_obstack_memory_used@@Base+0xea10>
  42cb44:	ldr	x8, [sp, #40]
  42cb48:	ldr	x9, [x8, #24]
  42cb4c:	ldrb	w10, [x9, #139]
  42cb50:	mov	w9, w10
  42cb54:	cbz	x9, 42cb98 <_obstack_memory_used@@Base+0xe9fc>
  42cb58:	ldr	x8, [sp, #40]
  42cb5c:	ldr	x9, [x8, #24]
  42cb60:	ldrb	w10, [x9, #136]
  42cb64:	cbz	w10, 42cb78 <_obstack_memory_used@@Base+0xe9dc>
  42cb68:	ldr	x8, [sp, #40]
  42cb6c:	ldr	x0, [x8, #24]
  42cb70:	bl	4231f8 <_obstack_memory_used@@Base+0x505c>
  42cb74:	b	42cb94 <_obstack_memory_used@@Base+0xe9f8>
  42cb78:	ldr	x8, [sp, #40]
  42cb7c:	ldr	x9, [x8, #24]
  42cb80:	ldr	x9, [x9, #120]
  42cb84:	cbz	x9, 42cb94 <_obstack_memory_used@@Base+0xe9f8>
  42cb88:	ldr	x8, [sp, #40]
  42cb8c:	ldr	x0, [x8, #24]
  42cb90:	bl	423648 <_obstack_memory_used@@Base+0x54ac>
  42cb94:	b	42cbac <_obstack_memory_used@@Base+0xea10>
  42cb98:	ldr	x8, [sp, #40]
  42cb9c:	ldr	x9, [x8, #24]
  42cba0:	ldr	x9, [x9, #88]
  42cba4:	ldr	x10, [x8, #24]
  42cba8:	str	x9, [x10, #48]
  42cbac:	ldr	x8, [sp, #40]
  42cbb0:	ldr	x9, [x8, #24]
  42cbb4:	str	xzr, [x9, #72]
  42cbb8:	stur	wzr, [x29, #-4]
  42cbbc:	ldur	w0, [x29, #-4]
  42cbc0:	ldp	x29, x30, [sp, #224]
  42cbc4:	add	sp, sp, #0xf0
  42cbc8:	ret
  42cbcc:	sub	sp, sp, #0xb0
  42cbd0:	stp	x29, x30, [sp, #160]
  42cbd4:	add	x29, sp, #0xa0
  42cbd8:	mov	x8, #0xffffffffffffffff    	// #-1
  42cbdc:	mov	w9, #0x1                   	// #1
  42cbe0:	add	x10, sp, #0x44
  42cbe4:	stur	x0, [x29, #-64]
  42cbe8:	and	w11, w1, w9
  42cbec:	sturb	w11, [x29, #-65]
  42cbf0:	str	x2, [sp, #80]
  42cbf4:	ldur	x12, [x29, #-64]
  42cbf8:	ldr	x12, [x12, #152]
  42cbfc:	str	x12, [sp, #72]
  42cc00:	str	xzr, [sp, #56]
  42cc04:	str	x8, [sp, #48]
  42cc08:	ldur	x8, [x29, #-64]
  42cc0c:	ldr	x8, [x8, #72]
  42cc10:	str	x8, [sp, #40]
  42cc14:	ldr	x8, [sp, #80]
  42cc18:	cmp	x8, #0x0
  42cc1c:	cset	w11, ne  // ne = any
  42cc20:	and	w9, w11, w9
  42cc24:	strb	w9, [sp, #31]
  42cc28:	ldr	x8, [sp, #40]
  42cc2c:	str	x8, [sp, #16]
  42cc30:	str	wzr, [sp, #68]
  42cc34:	ldur	x8, [x29, #-64]
  42cc38:	ldr	x12, [sp, #40]
  42cc3c:	stur	x10, [x29, #-16]
  42cc40:	stur	x8, [x29, #-24]
  42cc44:	stur	x12, [x29, #-32]
  42cc48:	ldur	x8, [x29, #-24]
  42cc4c:	ldr	x8, [x8, #152]
  42cc50:	stur	x8, [x29, #-40]
  42cc54:	ldur	x8, [x29, #-40]
  42cc58:	ldr	x8, [x8, #72]
  42cc5c:	ldrb	w9, [x8, #104]
  42cc60:	mov	w11, #0x7                   	// #7
  42cc64:	lsr	w9, w9, w11
  42cc68:	and	w9, w9, #0xff
  42cc6c:	cbz	w9, 42cd44 <_obstack_memory_used@@Base+0xeba8>
  42cc70:	ldur	x0, [x29, #-24]
  42cc74:	ldur	x8, [x29, #-32]
  42cc78:	subs	x1, x8, #0x1
  42cc7c:	ldur	x8, [x29, #-24]
  42cc80:	ldr	w2, [x8, #160]
  42cc84:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42cc88:	stur	w0, [x29, #-44]
  42cc8c:	ldur	w9, [x29, #-44]
  42cc90:	and	w9, w9, #0x1
  42cc94:	cbz	w9, 42cca8 <_obstack_memory_used@@Base+0xeb0c>
  42cc98:	ldur	x8, [x29, #-40]
  42cc9c:	ldr	x8, [x8, #80]
  42cca0:	stur	x8, [x29, #-8]
  42cca4:	b	42cd50 <_obstack_memory_used@@Base+0xebb4>
  42cca8:	ldur	w8, [x29, #-44]
  42ccac:	cbnz	w8, 42ccc0 <_obstack_memory_used@@Base+0xeb24>
  42ccb0:	ldur	x8, [x29, #-40]
  42ccb4:	ldr	x8, [x8, #72]
  42ccb8:	stur	x8, [x29, #-8]
  42ccbc:	b	42cd50 <_obstack_memory_used@@Base+0xebb4>
  42ccc0:	ldur	w8, [x29, #-44]
  42ccc4:	and	w8, w8, #0x4
  42ccc8:	cbz	w8, 42cce8 <_obstack_memory_used@@Base+0xeb4c>
  42cccc:	ldur	w8, [x29, #-44]
  42ccd0:	and	w8, w8, #0x2
  42ccd4:	cbz	w8, 42cce8 <_obstack_memory_used@@Base+0xeb4c>
  42ccd8:	ldur	x8, [x29, #-40]
  42ccdc:	ldr	x8, [x8, #96]
  42cce0:	stur	x8, [x29, #-8]
  42cce4:	b	42cd50 <_obstack_memory_used@@Base+0xebb4>
  42cce8:	ldur	w8, [x29, #-44]
  42ccec:	and	w8, w8, #0x2
  42ccf0:	cbz	w8, 42cd04 <_obstack_memory_used@@Base+0xeb68>
  42ccf4:	ldur	x8, [x29, #-40]
  42ccf8:	ldr	x8, [x8, #88]
  42ccfc:	stur	x8, [x29, #-8]
  42cd00:	b	42cd50 <_obstack_memory_used@@Base+0xebb4>
  42cd04:	ldur	w8, [x29, #-44]
  42cd08:	and	w8, w8, #0x4
  42cd0c:	cbz	w8, 42cd34 <_obstack_memory_used@@Base+0xeb98>
  42cd10:	ldur	x0, [x29, #-16]
  42cd14:	ldur	x1, [x29, #-40]
  42cd18:	ldur	x8, [x29, #-40]
  42cd1c:	ldr	x8, [x8, #72]
  42cd20:	ldr	x2, [x8, #80]
  42cd24:	ldur	w3, [x29, #-44]
  42cd28:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  42cd2c:	stur	x0, [x29, #-8]
  42cd30:	b	42cd50 <_obstack_memory_used@@Base+0xebb4>
  42cd34:	ldur	x8, [x29, #-40]
  42cd38:	ldr	x8, [x8, #72]
  42cd3c:	stur	x8, [x29, #-8]
  42cd40:	b	42cd50 <_obstack_memory_used@@Base+0xebb4>
  42cd44:	ldur	x8, [x29, #-40]
  42cd48:	ldr	x8, [x8, #72]
  42cd4c:	stur	x8, [x29, #-8]
  42cd50:	ldur	x8, [x29, #-8]
  42cd54:	str	x8, [sp, #32]
  42cd58:	ldr	x8, [sp, #32]
  42cd5c:	cmp	x8, #0x0
  42cd60:	cset	w9, eq  // eq = none
  42cd64:	and	w9, w9, #0x1
  42cd68:	mov	w0, w9
  42cd6c:	sxtw	x8, w0
  42cd70:	cbz	x8, 42cd90 <_obstack_memory_used@@Base+0xebf4>
  42cd74:	ldr	w8, [sp, #68]
  42cd78:	cmp	w8, #0xc
  42cd7c:	b.ne	42cd84 <_obstack_memory_used@@Base+0xebe8>  // b.any
  42cd80:	b	42cd84 <_obstack_memory_used@@Base+0xebe8>
  42cd84:	mov	x8, #0xfffffffffffffffe    	// #-2
  42cd88:	stur	x8, [x29, #-56]
  42cd8c:	b	42d14c <_obstack_memory_used@@Base+0xefb0>
  42cd90:	ldur	x8, [x29, #-64]
  42cd94:	ldr	x8, [x8, #184]
  42cd98:	cbz	x8, 42ce6c <_obstack_memory_used@@Base+0xecd0>
  42cd9c:	ldr	x8, [sp, #32]
  42cda0:	ldur	x9, [x29, #-64]
  42cda4:	ldr	x9, [x9, #184]
  42cda8:	ldr	x10, [sp, #40]
  42cdac:	mov	x11, #0x8                   	// #8
  42cdb0:	mul	x10, x11, x10
  42cdb4:	add	x9, x9, x10
  42cdb8:	str	x8, [x9]
  42cdbc:	ldr	x8, [sp, #72]
  42cdc0:	ldr	x8, [x8, #152]
  42cdc4:	cbz	x8, 42ce6c <_obstack_memory_used@@Base+0xecd0>
  42cdc8:	mov	w8, #0x0                   	// #0
  42cdcc:	strb	w8, [sp, #31]
  42cdd0:	ldur	x0, [x29, #-64]
  42cdd4:	ldr	x9, [sp, #32]
  42cdd8:	add	x1, x9, #0x8
  42cddc:	mov	x9, xzr
  42cde0:	mov	x2, x9
  42cde4:	bl	42dec0 <_obstack_memory_used@@Base+0xfd24>
  42cde8:	str	w0, [sp, #68]
  42cdec:	ldr	w8, [sp, #68]
  42cdf0:	cmp	w8, #0x0
  42cdf4:	cset	w8, ne  // ne = any
  42cdf8:	and	w8, w8, #0x1
  42cdfc:	mov	w1, w8
  42ce00:	sxtw	x9, w1
  42ce04:	cbz	x9, 42ce14 <_obstack_memory_used@@Base+0xec78>
  42ce08:	ldrsw	x8, [sp, #68]
  42ce0c:	stur	x8, [x29, #-56]
  42ce10:	b	42d14c <_obstack_memory_used@@Base+0xefb0>
  42ce14:	ldr	x8, [sp, #32]
  42ce18:	ldrb	w9, [x8, #104]
  42ce1c:	mov	w10, #0x6                   	// #6
  42ce20:	lsr	w9, w9, w10
  42ce24:	and	w9, w9, #0x1
  42ce28:	and	w9, w9, #0xff
  42ce2c:	cbz	w9, 42ce6c <_obstack_memory_used@@Base+0xecd0>
  42ce30:	ldur	x0, [x29, #-64]
  42ce34:	ldr	x8, [sp, #32]
  42ce38:	add	x1, x8, #0x8
  42ce3c:	bl	42dfe8 <_obstack_memory_used@@Base+0xfe4c>
  42ce40:	str	w0, [sp, #68]
  42ce44:	ldr	w9, [sp, #68]
  42ce48:	cmp	w9, #0x0
  42ce4c:	cset	w9, ne  // ne = any
  42ce50:	and	w9, w9, #0x1
  42ce54:	mov	w1, w9
  42ce58:	sxtw	x8, w1
  42ce5c:	cbz	x8, 42ce6c <_obstack_memory_used@@Base+0xecd0>
  42ce60:	ldrsw	x8, [sp, #68]
  42ce64:	stur	x8, [x29, #-56]
  42ce68:	b	42d14c <_obstack_memory_used@@Base+0xefb0>
  42ce6c:	ldr	x8, [sp, #32]
  42ce70:	ldrb	w9, [x8, #104]
  42ce74:	mov	w10, #0x4                   	// #4
  42ce78:	lsr	w9, w9, w10
  42ce7c:	and	w9, w9, #0x1
  42ce80:	and	w9, w9, #0xff
  42ce84:	mov	w8, w9
  42ce88:	ubfx	x8, x8, #0, #32
  42ce8c:	cbz	x8, 42cee0 <_obstack_memory_used@@Base+0xed44>
  42ce90:	ldr	x8, [sp, #32]
  42ce94:	ldrb	w9, [x8, #104]
  42ce98:	mov	w10, #0x7                   	// #7
  42ce9c:	lsr	w9, w9, w10
  42cea0:	and	w9, w9, #0xff
  42cea4:	cbz	w9, 42cebc <_obstack_memory_used@@Base+0xed20>
  42cea8:	ldur	x0, [x29, #-64]
  42ceac:	ldr	x1, [sp, #32]
  42ceb0:	ldr	x2, [sp, #40]
  42ceb4:	bl	42d15c <_obstack_memory_used@@Base+0xefc0>
  42ceb8:	cbz	x0, 42cee0 <_obstack_memory_used@@Base+0xed44>
  42cebc:	ldurb	w8, [x29, #-65]
  42cec0:	tbnz	w8, #0, 42ced0 <_obstack_memory_used@@Base+0xed34>
  42cec4:	ldr	x8, [sp, #40]
  42cec8:	stur	x8, [x29, #-56]
  42cecc:	b	42d14c <_obstack_memory_used@@Base+0xefb0>
  42ced0:	ldr	x8, [sp, #40]
  42ced4:	str	x8, [sp, #48]
  42ced8:	mov	x8, #0x1                   	// #1
  42cedc:	str	x8, [sp, #56]
  42cee0:	ldur	x8, [x29, #-64]
  42cee4:	ldr	x8, [x8, #104]
  42cee8:	ldur	x9, [x29, #-64]
  42ceec:	ldr	x9, [x9, #72]
  42cef0:	cmp	x8, x9
  42cef4:	cset	w10, le
  42cef8:	eor	w10, w10, #0x1
  42cefc:	tbnz	w10, #0, 42cf04 <_obstack_memory_used@@Base+0xed68>
  42cf00:	b	42d128 <_obstack_memory_used@@Base+0xef8c>
  42cf04:	ldr	x8, [sp, #32]
  42cf08:	str	x8, [sp, #8]
  42cf0c:	ldur	x8, [x29, #-64]
  42cf10:	ldr	x8, [x8, #72]
  42cf14:	add	x8, x8, #0x1
  42cf18:	str	x8, [sp]
  42cf1c:	ldr	x8, [sp]
  42cf20:	ldur	x9, [x29, #-64]
  42cf24:	ldr	x9, [x9, #64]
  42cf28:	cmp	x8, x9
  42cf2c:	cset	w10, ge  // ge = tcont
  42cf30:	and	w10, w10, #0x1
  42cf34:	mov	w0, w10
  42cf38:	sxtw	x8, w0
  42cf3c:	cbz	x8, 42cf58 <_obstack_memory_used@@Base+0xedbc>
  42cf40:	ldur	x8, [x29, #-64]
  42cf44:	ldr	x8, [x8, #64]
  42cf48:	ldur	x9, [x29, #-64]
  42cf4c:	ldr	x9, [x9, #88]
  42cf50:	cmp	x8, x9
  42cf54:	b.lt	42cf94 <_obstack_memory_used@@Base+0xedf8>  // b.tstop
  42cf58:	ldr	x8, [sp]
  42cf5c:	ldur	x9, [x29, #-64]
  42cf60:	ldr	x9, [x9, #48]
  42cf64:	cmp	x8, x9
  42cf68:	cset	w10, ge  // ge = tcont
  42cf6c:	and	w10, w10, #0x1
  42cf70:	mov	w0, w10
  42cf74:	sxtw	x8, w0
  42cf78:	cbz	x8, 42cfe4 <_obstack_memory_used@@Base+0xee48>
  42cf7c:	ldur	x8, [x29, #-64]
  42cf80:	ldr	x8, [x8, #48]
  42cf84:	ldur	x9, [x29, #-64]
  42cf88:	ldr	x9, [x9, #88]
  42cf8c:	cmp	x8, x9
  42cf90:	b.ge	42cfe4 <_obstack_memory_used@@Base+0xee48>  // b.tcont
  42cf94:	ldur	x0, [x29, #-64]
  42cf98:	ldr	x8, [sp]
  42cf9c:	add	x8, x8, #0x1
  42cfa0:	mov	w1, w8
  42cfa4:	bl	42e56c <_obstack_memory_used@@Base+0x103d0>
  42cfa8:	str	w0, [sp, #68]
  42cfac:	ldr	w8, [sp, #68]
  42cfb0:	cmp	w8, #0x0
  42cfb4:	cset	w8, ne  // ne = any
  42cfb8:	and	w8, w8, #0x1
  42cfbc:	mov	w2, w8
  42cfc0:	sxtw	x9, w2
  42cfc4:	cbz	x9, 42cfe4 <_obstack_memory_used@@Base+0xee48>
  42cfc8:	ldr	w8, [sp, #68]
  42cfcc:	cmp	w8, #0xc
  42cfd0:	b.ne	42cfd8 <_obstack_memory_used@@Base+0xee3c>  // b.any
  42cfd4:	b	42cfd8 <_obstack_memory_used@@Base+0xee3c>
  42cfd8:	mov	x8, #0xfffffffffffffffe    	// #-2
  42cfdc:	stur	x8, [x29, #-56]
  42cfe0:	b	42d14c <_obstack_memory_used@@Base+0xefb0>
  42cfe4:	ldur	x1, [x29, #-64]
  42cfe8:	ldr	x2, [sp, #32]
  42cfec:	add	x0, sp, #0x44
  42cff0:	bl	42e7b8 <_obstack_memory_used@@Base+0x1061c>
  42cff4:	str	x0, [sp, #32]
  42cff8:	ldur	x8, [x29, #-64]
  42cffc:	ldr	x8, [x8, #184]
  42d000:	cbz	x8, 42d018 <_obstack_memory_used@@Base+0xee7c>
  42d004:	ldur	x1, [x29, #-64]
  42d008:	ldr	x2, [sp, #32]
  42d00c:	add	x0, sp, #0x44
  42d010:	bl	42e98c <_obstack_memory_used@@Base+0x107f0>
  42d014:	str	x0, [sp, #32]
  42d018:	ldr	x8, [sp, #32]
  42d01c:	cbnz	x8, 42d080 <_obstack_memory_used@@Base+0xeee4>
  42d020:	ldr	w8, [sp, #68]
  42d024:	cmp	w8, #0x0
  42d028:	cset	w8, ne  // ne = any
  42d02c:	and	w8, w8, #0x1
  42d030:	mov	w0, w8
  42d034:	sxtw	x9, w0
  42d038:	cbz	x9, 42d048 <_obstack_memory_used@@Base+0xeeac>
  42d03c:	mov	x8, #0xfffffffffffffffe    	// #-2
  42d040:	stur	x8, [x29, #-56]
  42d044:	b	42d14c <_obstack_memory_used@@Base+0xefb0>
  42d048:	ldur	x8, [x29, #-64]
  42d04c:	ldr	x8, [x8, #184]
  42d050:	cbz	x8, 42d07c <_obstack_memory_used@@Base+0xeee0>
  42d054:	ldr	x8, [sp, #56]
  42d058:	cbz	x8, 42d068 <_obstack_memory_used@@Base+0xeecc>
  42d05c:	ldurb	w8, [x29, #-65]
  42d060:	tbnz	w8, #0, 42d068 <_obstack_memory_used@@Base+0xeecc>
  42d064:	b	42d07c <_obstack_memory_used@@Base+0xeee0>
  42d068:	ldur	x1, [x29, #-64]
  42d06c:	add	x0, sp, #0x44
  42d070:	bl	42ec44 <_obstack_memory_used@@Base+0x10aa8>
  42d074:	str	x0, [sp, #32]
  42d078:	cbnz	x0, 42d080 <_obstack_memory_used@@Base+0xeee4>
  42d07c:	b	42d128 <_obstack_memory_used@@Base+0xef8c>
  42d080:	ldrb	w8, [sp, #31]
  42d084:	tbnz	w8, #0, 42d08c <_obstack_memory_used@@Base+0xeef0>
  42d088:	b	42d0b0 <_obstack_memory_used@@Base+0xef14>
  42d08c:	ldr	x8, [sp, #8]
  42d090:	ldr	x9, [sp, #32]
  42d094:	cmp	x8, x9
  42d098:	b.ne	42d0a8 <_obstack_memory_used@@Base+0xef0c>  // b.any
  42d09c:	ldr	x8, [sp]
  42d0a0:	str	x8, [sp, #16]
  42d0a4:	b	42d0b0 <_obstack_memory_used@@Base+0xef14>
  42d0a8:	mov	w8, #0x0                   	// #0
  42d0ac:	strb	w8, [sp, #31]
  42d0b0:	ldr	x8, [sp, #32]
  42d0b4:	ldrb	w9, [x8, #104]
  42d0b8:	mov	w10, #0x4                   	// #4
  42d0bc:	lsr	w9, w9, w10
  42d0c0:	and	w9, w9, #0x1
  42d0c4:	and	w9, w9, #0xff
  42d0c8:	cbz	w9, 42d124 <_obstack_memory_used@@Base+0xef88>
  42d0cc:	ldr	x8, [sp, #32]
  42d0d0:	ldrb	w9, [x8, #104]
  42d0d4:	mov	w10, #0x7                   	// #7
  42d0d8:	lsr	w9, w9, w10
  42d0dc:	and	w9, w9, #0xff
  42d0e0:	cbz	w9, 42d0fc <_obstack_memory_used@@Base+0xef60>
  42d0e4:	ldur	x0, [x29, #-64]
  42d0e8:	ldr	x1, [sp, #32]
  42d0ec:	ldur	x8, [x29, #-64]
  42d0f0:	ldr	x2, [x8, #72]
  42d0f4:	bl	42d15c <_obstack_memory_used@@Base+0xefc0>
  42d0f8:	cbz	x0, 42d124 <_obstack_memory_used@@Base+0xef88>
  42d0fc:	ldur	x8, [x29, #-64]
  42d100:	ldr	x8, [x8, #72]
  42d104:	str	x8, [sp, #48]
  42d108:	mov	x8, #0x1                   	// #1
  42d10c:	str	x8, [sp, #56]
  42d110:	mov	x8, xzr
  42d114:	str	x8, [sp, #80]
  42d118:	ldurb	w9, [x29, #-65]
  42d11c:	tbnz	w9, #0, 42d124 <_obstack_memory_used@@Base+0xef88>
  42d120:	b	42d128 <_obstack_memory_used@@Base+0xef8c>
  42d124:	b	42cee0 <_obstack_memory_used@@Base+0xed44>
  42d128:	ldr	x8, [sp, #80]
  42d12c:	cbz	x8, 42d144 <_obstack_memory_used@@Base+0xefa8>
  42d130:	ldr	x8, [sp, #16]
  42d134:	ldr	x9, [sp, #80]
  42d138:	ldr	x10, [x9]
  42d13c:	add	x8, x10, x8
  42d140:	str	x8, [x9]
  42d144:	ldr	x8, [sp, #48]
  42d148:	stur	x8, [x29, #-56]
  42d14c:	ldur	x0, [x29, #-56]
  42d150:	ldp	x29, x30, [sp, #160]
  42d154:	add	sp, sp, #0xb0
  42d158:	ret
  42d15c:	sub	sp, sp, #0x40
  42d160:	stp	x29, x30, [sp, #48]
  42d164:	add	x29, sp, #0x30
  42d168:	stur	x0, [x29, #-16]
  42d16c:	str	x1, [sp, #24]
  42d170:	str	x2, [sp, #16]
  42d174:	ldr	x8, [sp, #24]
  42d178:	ldrb	w9, [x8, #104]
  42d17c:	mov	w10, #0x4                   	// #4
  42d180:	lsr	w9, w9, w10
  42d184:	and	w9, w9, #0x1
  42d188:	and	w9, w9, #0xff
  42d18c:	cbz	w9, 42d194 <_obstack_memory_used@@Base+0xeff8>
  42d190:	b	42d194 <_obstack_memory_used@@Base+0xeff8>
  42d194:	ldur	x0, [x29, #-16]
  42d198:	ldr	x1, [sp, #16]
  42d19c:	ldur	x8, [x29, #-16]
  42d1a0:	ldr	w2, [x8, #160]
  42d1a4:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42d1a8:	str	w0, [sp, #4]
  42d1ac:	str	xzr, [sp, #8]
  42d1b0:	ldr	x8, [sp, #8]
  42d1b4:	ldr	x9, [sp, #24]
  42d1b8:	ldr	x9, [x9, #16]
  42d1bc:	cmp	x8, x9
  42d1c0:	b.ge	42d214 <_obstack_memory_used@@Base+0xf078>  // b.tcont
  42d1c4:	ldur	x8, [x29, #-16]
  42d1c8:	ldr	x0, [x8, #152]
  42d1cc:	ldr	x8, [sp, #24]
  42d1d0:	ldr	x8, [x8, #24]
  42d1d4:	ldr	x9, [sp, #8]
  42d1d8:	ldr	x1, [x8, x9, lsl #3]
  42d1dc:	ldr	w2, [sp, #4]
  42d1e0:	bl	433550 <_obstack_memory_used@@Base+0x153b4>
  42d1e4:	tbnz	w0, #0, 42d1ec <_obstack_memory_used@@Base+0xf050>
  42d1e8:	b	42d204 <_obstack_memory_used@@Base+0xf068>
  42d1ec:	ldr	x8, [sp, #24]
  42d1f0:	ldr	x8, [x8, #24]
  42d1f4:	ldr	x9, [sp, #8]
  42d1f8:	ldr	x8, [x8, x9, lsl #3]
  42d1fc:	stur	x8, [x29, #-8]
  42d200:	b	42d218 <_obstack_memory_used@@Base+0xf07c>
  42d204:	ldr	x8, [sp, #8]
  42d208:	add	x8, x8, #0x1
  42d20c:	str	x8, [sp, #8]
  42d210:	b	42d1b0 <_obstack_memory_used@@Base+0xf014>
  42d214:	stur	xzr, [x29, #-8]
  42d218:	ldur	x0, [x29, #-8]
  42d21c:	ldp	x29, x30, [sp, #48]
  42d220:	add	sp, sp, #0x40
  42d224:	ret
  42d228:	sub	sp, sp, #0xa0
  42d22c:	stp	x29, x30, [sp, #144]
  42d230:	add	x29, sp, #0x90
  42d234:	mov	x8, xzr
  42d238:	stur	x0, [x29, #-16]
  42d23c:	ldur	x9, [x29, #-16]
  42d240:	ldr	x9, [x9, #152]
  42d244:	stur	x9, [x29, #-24]
  42d248:	stur	x8, [x29, #-64]
  42d24c:	ldur	x8, [x29, #-16]
  42d250:	ldr	x8, [x8, #184]
  42d254:	cbz	x8, 42d25c <_obstack_memory_used@@Base+0xf0c0>
  42d258:	b	42d25c <_obstack_memory_used@@Base+0xf0c0>
  42d25c:	ldur	x8, [x29, #-16]
  42d260:	ldr	x8, [x8, #168]
  42d264:	stur	x8, [x29, #-40]
  42d268:	ldur	x8, [x29, #-16]
  42d26c:	ldr	x8, [x8, #176]
  42d270:	stur	x8, [x29, #-32]
  42d274:	ldur	x8, [x29, #-40]
  42d278:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  42d27c:	cmp	x9, x8
  42d280:	cset	w10, ls  // ls = plast
  42d284:	and	w10, w10, #0x1
  42d288:	mov	w0, w10
  42d28c:	sxtw	x8, w0
  42d290:	cbz	x8, 42d2a0 <_obstack_memory_used@@Base+0xf104>
  42d294:	mov	w8, #0xc                   	// #12
  42d298:	stur	w8, [x29, #-4]
  42d29c:	b	42d5a4 <_obstack_memory_used@@Base+0xf408>
  42d2a0:	ldur	x8, [x29, #-40]
  42d2a4:	add	x8, x8, #0x1
  42d2a8:	mov	x9, #0x8                   	// #8
  42d2ac:	mul	x0, x8, x9
  42d2b0:	bl	402890 <malloc@plt>
  42d2b4:	stur	x0, [x29, #-56]
  42d2b8:	ldur	x8, [x29, #-56]
  42d2bc:	cmp	x8, #0x0
  42d2c0:	cset	w10, eq  // eq = none
  42d2c4:	and	w10, w10, #0x1
  42d2c8:	mov	w0, w10
  42d2cc:	sxtw	x8, w0
  42d2d0:	cbz	x8, 42d2e0 <_obstack_memory_used@@Base+0xf144>
  42d2d4:	mov	w8, #0xc                   	// #12
  42d2d8:	stur	w8, [x29, #-44]
  42d2dc:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d2e0:	ldur	x8, [x29, #-24]
  42d2e4:	ldr	x8, [x8, #152]
  42d2e8:	cbz	x8, 42d4dc <_obstack_memory_used@@Base+0xf340>
  42d2ec:	ldur	x8, [x29, #-40]
  42d2f0:	add	x8, x8, #0x1
  42d2f4:	mov	x9, #0x8                   	// #8
  42d2f8:	mul	x0, x8, x9
  42d2fc:	bl	402890 <malloc@plt>
  42d300:	stur	x0, [x29, #-64]
  42d304:	ldur	x8, [x29, #-64]
  42d308:	cmp	x8, #0x0
  42d30c:	cset	w10, eq  // eq = none
  42d310:	and	w10, w10, #0x1
  42d314:	mov	w0, w10
  42d318:	sxtw	x8, w0
  42d31c:	cbz	x8, 42d32c <_obstack_memory_used@@Base+0xf190>
  42d320:	mov	w8, #0xc                   	// #12
  42d324:	stur	w8, [x29, #-44]
  42d328:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d32c:	ldur	x0, [x29, #-64]
  42d330:	ldur	x8, [x29, #-40]
  42d334:	add	x8, x8, #0x1
  42d338:	mov	x9, #0x8                   	// #8
  42d33c:	mul	x2, x9, x8
  42d340:	mov	w10, wzr
  42d344:	mov	w1, w10
  42d348:	bl	402960 <memset@plt>
  42d34c:	ldur	x1, [x29, #-56]
  42d350:	ldur	x2, [x29, #-64]
  42d354:	ldur	x3, [x29, #-32]
  42d358:	ldur	x4, [x29, #-40]
  42d35c:	add	x8, sp, #0x18
  42d360:	mov	x0, x8
  42d364:	str	x8, [sp, #16]
  42d368:	bl	43366c <_obstack_memory_used@@Base+0x154d0>
  42d36c:	ldur	x0, [x29, #-16]
  42d370:	ldr	x1, [sp, #16]
  42d374:	bl	4336cc <_obstack_memory_used@@Base+0x15530>
  42d378:	stur	w0, [x29, #-44]
  42d37c:	ldr	x8, [sp, #16]
  42d380:	ldr	x0, [x8, #48]
  42d384:	bl	402b40 <free@plt>
  42d388:	ldur	w10, [x29, #-44]
  42d38c:	cmp	w10, #0x0
  42d390:	cset	w10, ne  // ne = any
  42d394:	and	w10, w10, #0x1
  42d398:	mov	w0, w10
  42d39c:	sxtw	x8, w0
  42d3a0:	cbz	x8, 42d3a8 <_obstack_memory_used@@Base+0xf20c>
  42d3a4:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d3a8:	ldur	x8, [x29, #-56]
  42d3ac:	ldr	x8, [x8]
  42d3b0:	cbnz	x8, 42d3c0 <_obstack_memory_used@@Base+0xf224>
  42d3b4:	ldur	x8, [x29, #-64]
  42d3b8:	ldr	x8, [x8]
  42d3bc:	cbz	x8, 42d3c4 <_obstack_memory_used@@Base+0xf228>
  42d3c0:	b	42d48c <_obstack_memory_used@@Base+0xf2f0>
  42d3c4:	ldur	x8, [x29, #-40]
  42d3c8:	subs	x8, x8, #0x1
  42d3cc:	stur	x8, [x29, #-40]
  42d3d0:	ldur	x8, [x29, #-40]
  42d3d4:	cmp	x8, #0x0
  42d3d8:	cset	w9, ge  // ge = tcont
  42d3dc:	tbnz	w9, #0, 42d3ec <_obstack_memory_used@@Base+0xf250>
  42d3e0:	mov	w8, #0x1                   	// #1
  42d3e4:	stur	w8, [x29, #-44]
  42d3e8:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d3ec:	ldur	x8, [x29, #-16]
  42d3f0:	ldr	x8, [x8, #184]
  42d3f4:	ldur	x9, [x29, #-40]
  42d3f8:	mov	x10, #0x8                   	// #8
  42d3fc:	mul	x9, x10, x9
  42d400:	add	x8, x8, x9
  42d404:	ldr	x8, [x8]
  42d408:	mov	w11, #0x1                   	// #1
  42d40c:	str	w11, [sp, #12]
  42d410:	cbz	x8, 42d454 <_obstack_memory_used@@Base+0xf2b8>
  42d414:	ldur	x8, [x29, #-16]
  42d418:	ldr	x8, [x8, #184]
  42d41c:	ldur	x9, [x29, #-40]
  42d420:	mov	x10, #0x8                   	// #8
  42d424:	mul	x9, x10, x9
  42d428:	add	x8, x8, x9
  42d42c:	ldr	x8, [x8]
  42d430:	ldrb	w11, [x8, #104]
  42d434:	mov	w12, #0x4                   	// #4
  42d438:	lsr	w11, w11, w12
  42d43c:	mov	w12, #0x1                   	// #1
  42d440:	and	w11, w11, #0x1
  42d444:	tst	w11, #0xff
  42d448:	cset	w11, ne  // ne = any
  42d44c:	eor	w11, w11, w12
  42d450:	str	w11, [sp, #12]
  42d454:	ldr	w8, [sp, #12]
  42d458:	tbnz	w8, #0, 42d3c4 <_obstack_memory_used@@Base+0xf228>
  42d45c:	ldur	x0, [x29, #-16]
  42d460:	ldur	x8, [x29, #-16]
  42d464:	ldr	x8, [x8, #184]
  42d468:	ldur	x9, [x29, #-40]
  42d46c:	mov	x10, #0x8                   	// #8
  42d470:	mul	x9, x10, x9
  42d474:	add	x8, x8, x9
  42d478:	ldr	x1, [x8]
  42d47c:	ldur	x2, [x29, #-40]
  42d480:	bl	42d15c <_obstack_memory_used@@Base+0xefc0>
  42d484:	stur	x0, [x29, #-32]
  42d488:	b	42d32c <_obstack_memory_used@@Base+0xf190>
  42d48c:	ldur	x0, [x29, #-24]
  42d490:	ldur	x1, [x29, #-56]
  42d494:	ldur	x2, [x29, #-64]
  42d498:	ldur	x8, [x29, #-40]
  42d49c:	add	x3, x8, #0x1
  42d4a0:	bl	4338f8 <_obstack_memory_used@@Base+0x1575c>
  42d4a4:	stur	w0, [x29, #-44]
  42d4a8:	ldur	x0, [x29, #-64]
  42d4ac:	bl	402b40 <free@plt>
  42d4b0:	mov	x8, xzr
  42d4b4:	stur	x8, [x29, #-64]
  42d4b8:	ldur	w9, [x29, #-44]
  42d4bc:	cmp	w9, #0x0
  42d4c0:	cset	w9, ne  // ne = any
  42d4c4:	and	w9, w9, #0x1
  42d4c8:	mov	w0, w9
  42d4cc:	sxtw	x8, w0
  42d4d0:	cbz	x8, 42d4d8 <_obstack_memory_used@@Base+0xf33c>
  42d4d4:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d4d8:	b	42d550 <_obstack_memory_used@@Base+0xf3b4>
  42d4dc:	ldur	x1, [x29, #-56]
  42d4e0:	ldur	x2, [x29, #-64]
  42d4e4:	ldur	x3, [x29, #-32]
  42d4e8:	ldur	x4, [x29, #-40]
  42d4ec:	add	x8, sp, #0x18
  42d4f0:	mov	x0, x8
  42d4f4:	str	x8, [sp]
  42d4f8:	bl	43366c <_obstack_memory_used@@Base+0x154d0>
  42d4fc:	ldur	x0, [x29, #-16]
  42d500:	ldr	x1, [sp]
  42d504:	bl	4336cc <_obstack_memory_used@@Base+0x15530>
  42d508:	stur	w0, [x29, #-44]
  42d50c:	ldr	x8, [sp]
  42d510:	ldr	x0, [x8, #48]
  42d514:	bl	402b40 <free@plt>
  42d518:	ldur	w9, [x29, #-44]
  42d51c:	cmp	w9, #0x0
  42d520:	cset	w9, ne  // ne = any
  42d524:	and	w9, w9, #0x1
  42d528:	mov	w0, w9
  42d52c:	sxtw	x8, w0
  42d530:	cbz	x8, 42d538 <_obstack_memory_used@@Base+0xf39c>
  42d534:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d538:	ldur	x8, [x29, #-56]
  42d53c:	ldr	x8, [x8]
  42d540:	cbnz	x8, 42d550 <_obstack_memory_used@@Base+0xf3b4>
  42d544:	mov	w8, #0x1                   	// #1
  42d548:	stur	w8, [x29, #-44]
  42d54c:	b	42d58c <_obstack_memory_used@@Base+0xf3f0>
  42d550:	ldur	x8, [x29, #-16]
  42d554:	ldr	x0, [x8, #184]
  42d558:	bl	402b40 <free@plt>
  42d55c:	ldur	x8, [x29, #-56]
  42d560:	ldur	x9, [x29, #-16]
  42d564:	str	x8, [x9, #184]
  42d568:	mov	x8, xzr
  42d56c:	stur	x8, [x29, #-56]
  42d570:	ldur	x8, [x29, #-32]
  42d574:	ldur	x9, [x29, #-16]
  42d578:	str	x8, [x9, #176]
  42d57c:	ldur	x8, [x29, #-40]
  42d580:	ldur	x9, [x29, #-16]
  42d584:	str	x8, [x9, #168]
  42d588:	stur	wzr, [x29, #-44]
  42d58c:	ldur	x0, [x29, #-56]
  42d590:	bl	402b40 <free@plt>
  42d594:	ldur	x0, [x29, #-64]
  42d598:	bl	402b40 <free@plt>
  42d59c:	ldur	w8, [x29, #-44]
  42d5a0:	stur	w8, [x29, #-4]
  42d5a4:	ldur	w0, [x29, #-4]
  42d5a8:	ldp	x29, x30, [sp, #144]
  42d5ac:	add	sp, sp, #0xa0
  42d5b0:	ret
  42d5b4:	sub	sp, sp, #0x40
  42d5b8:	stp	x29, x30, [sp, #48]
  42d5bc:	add	x29, sp, #0x30
  42d5c0:	stur	x0, [x29, #-8]
  42d5c4:	stur	xzr, [x29, #-16]
  42d5c8:	ldur	x8, [x29, #-16]
  42d5cc:	ldur	x9, [x29, #-8]
  42d5d0:	ldr	x9, [x9, #232]
  42d5d4:	cmp	x8, x9
  42d5d8:	b.ge	42d6a4 <_obstack_memory_used@@Base+0xf508>  // b.tcont
  42d5dc:	ldur	x8, [x29, #-8]
  42d5e0:	ldr	x8, [x8, #248]
  42d5e4:	ldur	x9, [x29, #-16]
  42d5e8:	mov	x10, #0x8                   	// #8
  42d5ec:	mul	x9, x10, x9
  42d5f0:	add	x8, x8, x9
  42d5f4:	ldr	x8, [x8]
  42d5f8:	str	x8, [sp, #16]
  42d5fc:	str	xzr, [sp, #24]
  42d600:	ldr	x8, [sp, #24]
  42d604:	ldr	x9, [sp, #16]
  42d608:	ldr	x9, [x9, #32]
  42d60c:	cmp	x8, x9
  42d610:	b.ge	42d658 <_obstack_memory_used@@Base+0xf4bc>  // b.tcont
  42d614:	ldr	x8, [sp, #16]
  42d618:	ldr	x8, [x8, #40]
  42d61c:	ldr	x9, [sp, #24]
  42d620:	mov	x10, #0x8                   	// #8
  42d624:	mul	x9, x10, x9
  42d628:	add	x8, x8, x9
  42d62c:	ldr	x8, [x8]
  42d630:	str	x8, [sp, #8]
  42d634:	ldr	x8, [sp, #8]
  42d638:	ldr	x0, [x8, #32]
  42d63c:	bl	402b40 <free@plt>
  42d640:	ldr	x0, [sp, #8]
  42d644:	bl	402b40 <free@plt>
  42d648:	ldr	x8, [sp, #24]
  42d64c:	add	x8, x8, #0x1
  42d650:	str	x8, [sp, #24]
  42d654:	b	42d600 <_obstack_memory_used@@Base+0xf464>
  42d658:	ldr	x8, [sp, #16]
  42d65c:	ldr	x0, [x8, #40]
  42d660:	bl	402b40 <free@plt>
  42d664:	ldr	x8, [sp, #16]
  42d668:	ldr	x8, [x8, #16]
  42d66c:	cbz	x8, 42d68c <_obstack_memory_used@@Base+0xf4f0>
  42d670:	ldr	x8, [sp, #16]
  42d674:	ldr	x8, [x8, #16]
  42d678:	ldr	x0, [x8, #16]
  42d67c:	bl	402b40 <free@plt>
  42d680:	ldr	x8, [sp, #16]
  42d684:	ldr	x0, [x8, #16]
  42d688:	bl	402b40 <free@plt>
  42d68c:	ldr	x0, [sp, #16]
  42d690:	bl	402b40 <free@plt>
  42d694:	ldur	x8, [x29, #-16]
  42d698:	add	x8, x8, #0x1
  42d69c:	stur	x8, [x29, #-16]
  42d6a0:	b	42d5c8 <_obstack_memory_used@@Base+0xf42c>
  42d6a4:	ldur	x8, [x29, #-8]
  42d6a8:	str	xzr, [x8, #232]
  42d6ac:	ldur	x8, [x29, #-8]
  42d6b0:	str	xzr, [x8, #200]
  42d6b4:	ldp	x29, x30, [sp, #48]
  42d6b8:	add	sp, sp, #0x40
  42d6bc:	ret
  42d6c0:	stp	x29, x30, [sp, #-16]!
  42d6c4:	mov	x29, sp
  42d6c8:	sub	sp, sp, #0xa0
  42d6cc:	adrp	x8, 43a000 <_obstack_memory_used@@Base+0x1be64>
  42d6d0:	add	x8, x8, #0x120
  42d6d4:	mov	w9, #0x0                   	// #0
  42d6d8:	mov	w10, #0x1                   	// #1
  42d6dc:	stur	x0, [x29, #-16]
  42d6e0:	stur	x1, [x29, #-24]
  42d6e4:	stur	x2, [x29, #-32]
  42d6e8:	stur	x3, [x29, #-40]
  42d6ec:	and	w10, w4, w10
  42d6f0:	sturb	w10, [x29, #-41]
  42d6f4:	ldur	x11, [x29, #-16]
  42d6f8:	ldr	x11, [x11]
  42d6fc:	stur	x11, [x29, #-56]
  42d700:	ldr	q0, [x8]
  42d704:	stur	q0, [x29, #-128]
  42d708:	ldr	x8, [x8, #16]
  42d70c:	stur	x8, [x29, #-112]
  42d710:	sturb	w9, [x29, #-137]
  42d714:	ldur	x8, [x29, #-32]
  42d718:	cmp	x8, #0x1
  42d71c:	b.ls	42d724 <_obstack_memory_used@@Base+0xf588>  // b.plast
  42d720:	b	42d724 <_obstack_memory_used@@Base+0xf588>
  42d724:	ldur	x8, [x29, #-24]
  42d728:	ldr	x8, [x8, #184]
  42d72c:	cbz	x8, 42d734 <_obstack_memory_used@@Base+0xf598>
  42d730:	b	42d734 <_obstack_memory_used@@Base+0xf598>
  42d734:	ldurb	w8, [x29, #-41]
  42d738:	tbnz	w8, #0, 42d740 <_obstack_memory_used@@Base+0xf5a4>
  42d73c:	b	42d780 <_obstack_memory_used@@Base+0xf5e4>
  42d740:	sub	x8, x29, #0x80
  42d744:	stur	x8, [x29, #-104]
  42d748:	ldur	x8, [x29, #-104]
  42d74c:	ldr	x8, [x8, #8]
  42d750:	mov	x9, #0x30                  	// #48
  42d754:	mul	x0, x8, x9
  42d758:	bl	402890 <malloc@plt>
  42d75c:	ldur	x8, [x29, #-104]
  42d760:	str	x0, [x8, #16]
  42d764:	ldur	x8, [x29, #-104]
  42d768:	ldr	x8, [x8, #16]
  42d76c:	cbnz	x8, 42d77c <_obstack_memory_used@@Base+0xf5e0>
  42d770:	mov	w8, #0xc                   	// #12
  42d774:	stur	w8, [x29, #-4]
  42d778:	b	42daac <_obstack_memory_used@@Base+0xf910>
  42d77c:	b	42d788 <_obstack_memory_used@@Base+0xf5ec>
  42d780:	mov	x8, xzr
  42d784:	stur	x8, [x29, #-104]
  42d788:	ldur	x8, [x29, #-56]
  42d78c:	ldr	x8, [x8, #144]
  42d790:	stur	x8, [x29, #-72]
  42d794:	stur	xzr, [x29, #-96]
  42d798:	stur	xzr, [x29, #-88]
  42d79c:	stur	xzr, [x29, #-80]
  42d7a0:	ldur	x8, [x29, #-32]
  42d7a4:	mov	x9, #0x10                  	// #16
  42d7a8:	mul	x8, x8, x9
  42d7ac:	cmp	x8, #0xfc0
  42d7b0:	b.cs	42d7e4 <_obstack_memory_used@@Base+0xf648>  // b.hs, b.nlast
  42d7b4:	ldur	x8, [x29, #-32]
  42d7b8:	mov	x9, #0x10                  	// #16
  42d7bc:	mul	x8, x8, x9
  42d7c0:	mov	x9, #0x1                   	// #1
  42d7c4:	mul	x8, x8, x9
  42d7c8:	add	x8, x8, #0xf
  42d7cc:	and	x8, x8, #0xfffffffffffffff0
  42d7d0:	mov	x9, sp
  42d7d4:	subs	x8, x9, x8
  42d7d8:	mov	sp, x8
  42d7dc:	stur	x8, [x29, #-136]
  42d7e0:	b	42d81c <_obstack_memory_used@@Base+0xf680>
  42d7e4:	ldur	x8, [x29, #-32]
  42d7e8:	mov	x9, #0x10                  	// #16
  42d7ec:	mul	x0, x8, x9
  42d7f0:	bl	402890 <malloc@plt>
  42d7f4:	stur	x0, [x29, #-136]
  42d7f8:	ldur	x8, [x29, #-136]
  42d7fc:	cbnz	x8, 42d814 <_obstack_memory_used@@Base+0xf678>
  42d800:	ldur	x0, [x29, #-104]
  42d804:	bl	435584 <_obstack_memory_used@@Base+0x173e8>
  42d808:	mov	w8, #0xc                   	// #12
  42d80c:	stur	w8, [x29, #-4]
  42d810:	b	42daac <_obstack_memory_used@@Base+0xf910>
  42d814:	mov	w8, #0x1                   	// #1
  42d818:	sturb	w8, [x29, #-137]
  42d81c:	ldur	x0, [x29, #-136]
  42d820:	ldur	x1, [x29, #-40]
  42d824:	ldur	x8, [x29, #-32]
  42d828:	mov	x9, #0x10                  	// #16
  42d82c:	mul	x2, x9, x8
  42d830:	bl	4026a0 <memcpy@plt>
  42d834:	ldur	x8, [x29, #-40]
  42d838:	ldr	x8, [x8]
  42d83c:	stur	x8, [x29, #-64]
  42d840:	ldur	x8, [x29, #-64]
  42d844:	ldur	x9, [x29, #-40]
  42d848:	ldr	x9, [x9, #8]
  42d84c:	cmp	x8, x9
  42d850:	b.gt	42da80 <_obstack_memory_used@@Base+0xf8e4>
  42d854:	ldur	x0, [x29, #-56]
  42d858:	ldur	x1, [x29, #-40]
  42d85c:	ldur	x2, [x29, #-136]
  42d860:	ldur	x3, [x29, #-72]
  42d864:	ldur	x4, [x29, #-64]
  42d868:	ldur	x5, [x29, #-32]
  42d86c:	bl	435628 <_obstack_memory_used@@Base+0x1748c>
  42d870:	ldur	x8, [x29, #-64]
  42d874:	ldur	x9, [x29, #-40]
  42d878:	ldr	x9, [x9, #8]
  42d87c:	cmp	x8, x9
  42d880:	b.ne	42d994 <_obstack_memory_used@@Base+0xf7f8>  // b.any
  42d884:	ldur	x8, [x29, #-72]
  42d888:	ldur	x9, [x29, #-24]
  42d88c:	ldr	x9, [x9, #176]
  42d890:	cmp	x8, x9
  42d894:	b.ne	42d994 <_obstack_memory_used@@Base+0xf7f8>  // b.any
  42d898:	ldur	x8, [x29, #-104]
  42d89c:	cbz	x8, 42d96c <_obstack_memory_used@@Base+0xf7d0>
  42d8a0:	stur	xzr, [x29, #-152]
  42d8a4:	ldur	x8, [x29, #-152]
  42d8a8:	ldur	x9, [x29, #-32]
  42d8ac:	cmp	x8, x9
  42d8b0:	b.cs	42d90c <_obstack_memory_used@@Base+0xf770>  // b.hs, b.nlast
  42d8b4:	ldur	x8, [x29, #-40]
  42d8b8:	ldur	x9, [x29, #-152]
  42d8bc:	mov	x10, #0x10                  	// #16
  42d8c0:	mul	x9, x10, x9
  42d8c4:	ldr	x8, [x8, x9]
  42d8c8:	mov	x9, #0xffffffffffffffff    	// #-1
  42d8cc:	cmp	x8, x9
  42d8d0:	b.le	42d8fc <_obstack_memory_used@@Base+0xf760>
  42d8d4:	ldur	x8, [x29, #-40]
  42d8d8:	ldur	x9, [x29, #-152]
  42d8dc:	mov	x10, #0x10                  	// #16
  42d8e0:	mul	x9, x10, x9
  42d8e4:	add	x8, x8, x9
  42d8e8:	ldr	x8, [x8, #8]
  42d8ec:	mov	x9, #0xffffffffffffffff    	// #-1
  42d8f0:	cmp	x8, x9
  42d8f4:	b.ne	42d8fc <_obstack_memory_used@@Base+0xf760>  // b.any
  42d8f8:	b	42d90c <_obstack_memory_used@@Base+0xf770>
  42d8fc:	ldur	x8, [x29, #-152]
  42d900:	add	x8, x8, #0x1
  42d904:	stur	x8, [x29, #-152]
  42d908:	b	42d8a4 <_obstack_memory_used@@Base+0xf708>
  42d90c:	ldur	x8, [x29, #-152]
  42d910:	ldur	x9, [x29, #-32]
  42d914:	cmp	x8, x9
  42d918:	b.ne	42d94c <_obstack_memory_used@@Base+0xf7b0>  // b.any
  42d91c:	sub	x8, x29, #0x60
  42d920:	ldr	x0, [x8, #16]
  42d924:	bl	402b40 <free@plt>
  42d928:	ldurb	w9, [x29, #-137]
  42d92c:	tbnz	w9, #0, 42d934 <_obstack_memory_used@@Base+0xf798>
  42d930:	b	42d93c <_obstack_memory_used@@Base+0xf7a0>
  42d934:	ldur	x0, [x29, #-136]
  42d938:	bl	402b40 <free@plt>
  42d93c:	ldur	x0, [x29, #-104]
  42d940:	bl	435584 <_obstack_memory_used@@Base+0x173e8>
  42d944:	stur	w0, [x29, #-4]
  42d948:	b	42daac <_obstack_memory_used@@Base+0xf910>
  42d94c:	ldur	x0, [x29, #-104]
  42d950:	ldur	x2, [x29, #-32]
  42d954:	ldur	x3, [x29, #-40]
  42d958:	sub	x1, x29, #0x40
  42d95c:	sub	x4, x29, #0x60
  42d960:	bl	435800 <_obstack_memory_used@@Base+0x17664>
  42d964:	stur	x0, [x29, #-72]
  42d968:	b	42d994 <_obstack_memory_used@@Base+0xf7f8>
  42d96c:	sub	x8, x29, #0x60
  42d970:	ldr	x0, [x8, #16]
  42d974:	bl	402b40 <free@plt>
  42d978:	ldurb	w9, [x29, #-137]
  42d97c:	tbnz	w9, #0, 42d984 <_obstack_memory_used@@Base+0xf7e8>
  42d980:	b	42d98c <_obstack_memory_used@@Base+0xf7f0>
  42d984:	ldur	x0, [x29, #-136]
  42d988:	bl	402b40 <free@plt>
  42d98c:	stur	wzr, [x29, #-4]
  42d990:	b	42daac <_obstack_memory_used@@Base+0xf910>
  42d994:	ldur	x0, [x29, #-24]
  42d998:	ldur	x1, [x29, #-32]
  42d99c:	ldur	x2, [x29, #-40]
  42d9a0:	ldur	x4, [x29, #-72]
  42d9a4:	ldur	x6, [x29, #-104]
  42d9a8:	sub	x3, x29, #0x40
  42d9ac:	sub	x5, x29, #0x60
  42d9b0:	bl	435914 <_obstack_memory_used@@Base+0x17778>
  42d9b4:	stur	x0, [x29, #-72]
  42d9b8:	ldur	x8, [x29, #-72]
  42d9bc:	cmp	x8, #0x0
  42d9c0:	cset	w9, lt  // lt = tstop
  42d9c4:	and	w9, w9, #0x1
  42d9c8:	mov	w0, w9
  42d9cc:	sxtw	x8, w0
  42d9d0:	cbz	x8, 42da7c <_obstack_memory_used@@Base+0xf8e0>
  42d9d4:	ldur	x8, [x29, #-72]
  42d9d8:	mov	x9, #0xfffffffffffffffe    	// #-2
  42d9dc:	cmp	x8, x9
  42d9e0:	cset	w10, eq  // eq = none
  42d9e4:	and	w10, w10, #0x1
  42d9e8:	mov	w0, w10
  42d9ec:	sxtw	x8, w0
  42d9f0:	cbz	x8, 42da28 <_obstack_memory_used@@Base+0xf88c>
  42d9f4:	sub	x8, x29, #0x60
  42d9f8:	ldr	x0, [x8, #16]
  42d9fc:	bl	402b40 <free@plt>
  42da00:	ldurb	w9, [x29, #-137]
  42da04:	tbnz	w9, #0, 42da0c <_obstack_memory_used@@Base+0xf870>
  42da08:	b	42da14 <_obstack_memory_used@@Base+0xf878>
  42da0c:	ldur	x0, [x29, #-136]
  42da10:	bl	402b40 <free@plt>
  42da14:	ldur	x0, [x29, #-104]
  42da18:	bl	435584 <_obstack_memory_used@@Base+0x173e8>
  42da1c:	mov	w8, #0xc                   	// #12
  42da20:	stur	w8, [x29, #-4]
  42da24:	b	42daac <_obstack_memory_used@@Base+0xf910>
  42da28:	ldur	x8, [x29, #-104]
  42da2c:	cbz	x8, 42da50 <_obstack_memory_used@@Base+0xf8b4>
  42da30:	ldur	x0, [x29, #-104]
  42da34:	ldur	x2, [x29, #-32]
  42da38:	ldur	x3, [x29, #-40]
  42da3c:	sub	x1, x29, #0x40
  42da40:	sub	x4, x29, #0x60
  42da44:	bl	435800 <_obstack_memory_used@@Base+0x17664>
  42da48:	stur	x0, [x29, #-72]
  42da4c:	b	42da7c <_obstack_memory_used@@Base+0xf8e0>
  42da50:	sub	x8, x29, #0x60
  42da54:	ldr	x0, [x8, #16]
  42da58:	bl	402b40 <free@plt>
  42da5c:	ldurb	w9, [x29, #-137]
  42da60:	tbnz	w9, #0, 42da68 <_obstack_memory_used@@Base+0xf8cc>
  42da64:	b	42da70 <_obstack_memory_used@@Base+0xf8d4>
  42da68:	ldur	x0, [x29, #-136]
  42da6c:	bl	402b40 <free@plt>
  42da70:	mov	w8, #0x1                   	// #1
  42da74:	stur	w8, [x29, #-4]
  42da78:	b	42daac <_obstack_memory_used@@Base+0xf910>
  42da7c:	b	42d840 <_obstack_memory_used@@Base+0xf6a4>
  42da80:	sub	x8, x29, #0x60
  42da84:	ldr	x0, [x8, #16]
  42da88:	bl	402b40 <free@plt>
  42da8c:	ldurb	w9, [x29, #-137]
  42da90:	tbnz	w9, #0, 42da98 <_obstack_memory_used@@Base+0xf8fc>
  42da94:	b	42daa0 <_obstack_memory_used@@Base+0xf904>
  42da98:	ldur	x0, [x29, #-136]
  42da9c:	bl	402b40 <free@plt>
  42daa0:	ldur	x0, [x29, #-104]
  42daa4:	bl	435584 <_obstack_memory_used@@Base+0x173e8>
  42daa8:	stur	w0, [x29, #-4]
  42daac:	ldur	w0, [x29, #-4]
  42dab0:	mov	sp, x29
  42dab4:	ldp	x29, x30, [sp], #16
  42dab8:	ret
  42dabc:	sub	sp, sp, #0x20
  42dac0:	stp	x29, x30, [sp, #16]
  42dac4:	add	x29, sp, #0x10
  42dac8:	str	x0, [sp, #8]
  42dacc:	ldr	x0, [sp, #8]
  42dad0:	bl	42d5b4 <_obstack_memory_used@@Base+0xf418>
  42dad4:	ldr	x8, [sp, #8]
  42dad8:	ldr	x0, [x8, #248]
  42dadc:	bl	402b40 <free@plt>
  42dae0:	ldr	x8, [sp, #8]
  42dae4:	ldr	x0, [x8, #216]
  42dae8:	bl	402b40 <free@plt>
  42daec:	ldp	x29, x30, [sp, #16]
  42daf0:	add	sp, sp, #0x20
  42daf4:	ret
  42daf8:	sub	sp, sp, #0x50
  42dafc:	stp	x29, x30, [sp, #64]
  42db00:	add	x29, sp, #0x40
  42db04:	stur	x0, [x29, #-16]
  42db08:	stur	x1, [x29, #-24]
  42db0c:	stur	w2, [x29, #-28]
  42db10:	ldur	x8, [x29, #-24]
  42db14:	cmp	x8, #0x0
  42db18:	cset	w9, lt  // lt = tstop
  42db1c:	and	w9, w9, #0x1
  42db20:	mov	w0, w9
  42db24:	sxtw	x8, w0
  42db28:	cbz	x8, 42db3c <_obstack_memory_used@@Base+0xf9a0>
  42db2c:	ldur	x8, [x29, #-16]
  42db30:	ldr	w9, [x8, #112]
  42db34:	stur	w9, [x29, #-4]
  42db38:	b	42dd08 <_obstack_memory_used@@Base+0xfb6c>
  42db3c:	ldur	x8, [x29, #-24]
  42db40:	ldur	x9, [x29, #-16]
  42db44:	ldr	x9, [x9, #88]
  42db48:	cmp	x8, x9
  42db4c:	cset	w10, eq  // eq = none
  42db50:	and	w10, w10, #0x1
  42db54:	mov	w0, w10
  42db58:	sxtw	x8, w0
  42db5c:	cbz	x8, 42db7c <_obstack_memory_used@@Base+0xf9e0>
  42db60:	ldur	w8, [x29, #-28]
  42db64:	mov	w9, #0x8                   	// #8
  42db68:	mov	w10, #0xa                   	// #10
  42db6c:	tst	w8, #0x2
  42db70:	csel	w8, w9, w10, ne  // ne = any
  42db74:	stur	w8, [x29, #-4]
  42db78:	b	42dd08 <_obstack_memory_used@@Base+0xfb6c>
  42db7c:	ldur	x8, [x29, #-16]
  42db80:	ldr	w9, [x8, #144]
  42db84:	cmp	w9, #0x1
  42db88:	b.le	42dc90 <_obstack_memory_used@@Base+0xfaf4>
  42db8c:	ldur	x8, [x29, #-24]
  42db90:	str	x8, [sp, #16]
  42db94:	ldur	x8, [x29, #-16]
  42db98:	ldr	x8, [x8, #16]
  42db9c:	ldr	x9, [sp, #16]
  42dba0:	ldr	w10, [x8, x9, lsl #2]
  42dba4:	mov	w11, #0xffffffff            	// #-1
  42dba8:	cmp	w10, w11
  42dbac:	b.ne	42dbf4 <_obstack_memory_used@@Base+0xfa58>  // b.any
  42dbb0:	ldr	x8, [sp, #16]
  42dbb4:	cmp	x8, #0x0
  42dbb8:	cset	w9, lt  // lt = tstop
  42dbbc:	tbnz	w9, #0, 42dbc4 <_obstack_memory_used@@Base+0xfa28>
  42dbc0:	b	42dbc4 <_obstack_memory_used@@Base+0xfa28>
  42dbc4:	ldr	x8, [sp, #16]
  42dbc8:	subs	x8, x8, #0x1
  42dbcc:	str	x8, [sp, #16]
  42dbd0:	ldr	x8, [sp, #16]
  42dbd4:	cmp	x8, #0x0
  42dbd8:	cset	w9, ge  // ge = tcont
  42dbdc:	tbnz	w9, #0, 42dbf0 <_obstack_memory_used@@Base+0xfa54>
  42dbe0:	ldur	x8, [x29, #-16]
  42dbe4:	ldr	w9, [x8, #112]
  42dbe8:	stur	w9, [x29, #-4]
  42dbec:	b	42dd08 <_obstack_memory_used@@Base+0xfb6c>
  42dbf0:	b	42db94 <_obstack_memory_used@@Base+0xf9f8>
  42dbf4:	ldur	x8, [x29, #-16]
  42dbf8:	ldr	x8, [x8, #16]
  42dbfc:	ldr	x9, [sp, #16]
  42dc00:	ldr	w10, [x8, x9, lsl #2]
  42dc04:	str	w10, [sp, #28]
  42dc08:	ldur	x8, [x29, #-16]
  42dc0c:	ldrb	w10, [x8, #142]
  42dc10:	cmp	w10, #0x0
  42dc14:	cset	w10, ne  // ne = any
  42dc18:	and	w10, w10, #0x1
  42dc1c:	mov	w0, w10
  42dc20:	sxtw	x8, w0
  42dc24:	cbz	x8, 42dc4c <_obstack_memory_used@@Base+0xfab0>
  42dc28:	ldr	w0, [sp, #28]
  42dc2c:	bl	402c30 <iswalnum@plt>
  42dc30:	cbnz	w0, 42dc40 <_obstack_memory_used@@Base+0xfaa4>
  42dc34:	ldr	w8, [sp, #28]
  42dc38:	cmp	w8, #0x5f
  42dc3c:	b.ne	42dc4c <_obstack_memory_used@@Base+0xfab0>  // b.any
  42dc40:	mov	w8, #0x1                   	// #1
  42dc44:	stur	w8, [x29, #-4]
  42dc48:	b	42dd08 <_obstack_memory_used@@Base+0xfb6c>
  42dc4c:	ldr	w8, [sp, #28]
  42dc50:	mov	w9, #0x0                   	// #0
  42dc54:	cmp	w8, #0xa
  42dc58:	str	w9, [sp, #12]
  42dc5c:	b.ne	42dc74 <_obstack_memory_used@@Base+0xfad8>  // b.any
  42dc60:	ldur	x8, [x29, #-16]
  42dc64:	ldrb	w9, [x8, #141]
  42dc68:	cmp	w9, #0x0
  42dc6c:	cset	w9, ne  // ne = any
  42dc70:	str	w9, [sp, #12]
  42dc74:	ldr	w8, [sp, #12]
  42dc78:	mov	w9, #0x2                   	// #2
  42dc7c:	mov	w10, wzr
  42dc80:	tst	w8, #0x1
  42dc84:	csel	w8, w9, w10, ne  // ne = any
  42dc88:	stur	w8, [x29, #-4]
  42dc8c:	b	42dd08 <_obstack_memory_used@@Base+0xfb6c>
  42dc90:	ldur	x8, [x29, #-16]
  42dc94:	ldr	x8, [x8, #8]
  42dc98:	ldur	x9, [x29, #-24]
  42dc9c:	ldrb	w10, [x8, x9]
  42dca0:	str	w10, [sp, #32]
  42dca4:	ldur	x8, [x29, #-16]
  42dca8:	ldr	x0, [x8, #128]
  42dcac:	ldrsw	x1, [sp, #32]
  42dcb0:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  42dcb4:	tbnz	w0, #0, 42dcbc <_obstack_memory_used@@Base+0xfb20>
  42dcb8:	b	42dcc8 <_obstack_memory_used@@Base+0xfb2c>
  42dcbc:	mov	w8, #0x1                   	// #1
  42dcc0:	stur	w8, [x29, #-4]
  42dcc4:	b	42dd08 <_obstack_memory_used@@Base+0xfb6c>
  42dcc8:	ldr	w8, [sp, #32]
  42dccc:	mov	w9, #0x0                   	// #0
  42dcd0:	cmp	w8, #0xa
  42dcd4:	str	w9, [sp, #8]
  42dcd8:	b.ne	42dcf0 <_obstack_memory_used@@Base+0xfb54>  // b.any
  42dcdc:	ldur	x8, [x29, #-16]
  42dce0:	ldrb	w9, [x8, #141]
  42dce4:	cmp	w9, #0x0
  42dce8:	cset	w9, ne  // ne = any
  42dcec:	str	w9, [sp, #8]
  42dcf0:	ldr	w8, [sp, #8]
  42dcf4:	mov	w9, #0x2                   	// #2
  42dcf8:	mov	w10, wzr
  42dcfc:	tst	w8, #0x1
  42dd00:	csel	w8, w9, w10, ne  // ne = any
  42dd04:	stur	w8, [x29, #-4]
  42dd08:	ldur	w0, [x29, #-4]
  42dd0c:	ldp	x29, x30, [sp, #64]
  42dd10:	add	sp, sp, #0x50
  42dd14:	ret
  42dd18:	sub	sp, sp, #0x60
  42dd1c:	stp	x29, x30, [sp, #80]
  42dd20:	add	x29, sp, #0x50
  42dd24:	mov	w8, #0xffffffff            	// #-1
  42dd28:	stur	x0, [x29, #-8]
  42dd2c:	stur	x1, [x29, #-16]
  42dd30:	stur	x2, [x29, #-24]
  42dd34:	str	w8, [sp, #28]
  42dd38:	ldur	x9, [x29, #-8]
  42dd3c:	ldr	x9, [x9, #40]
  42dd40:	ldur	x10, [x29, #-8]
  42dd44:	ldr	x10, [x10, #56]
  42dd48:	add	x9, x9, x10
  42dd4c:	str	x9, [sp, #40]
  42dd50:	ldr	x8, [sp, #40]
  42dd54:	ldur	x9, [x29, #-16]
  42dd58:	cmp	x8, x9
  42dd5c:	b.ge	42de5c <_obstack_memory_used@@Base+0xfcc0>  // b.tcont
  42dd60:	ldur	x8, [x29, #-8]
  42dd64:	ldr	x8, [x8, #80]
  42dd68:	ldr	x9, [sp, #40]
  42dd6c:	subs	x8, x8, x9
  42dd70:	str	x8, [sp, #16]
  42dd74:	ldur	x8, [x29, #-8]
  42dd78:	ldr	x8, [x8, #32]
  42dd7c:	stur	x8, [x29, #-32]
  42dd80:	ldur	x8, [x29, #-8]
  42dd84:	ldr	x8, [x8]
  42dd88:	ldr	x9, [sp, #40]
  42dd8c:	add	x1, x8, x9
  42dd90:	ldr	x2, [sp, #16]
  42dd94:	ldur	x8, [x29, #-8]
  42dd98:	add	x3, x8, #0x20
  42dd9c:	add	x0, sp, #0x18
  42dda0:	bl	41da58 <wcrtomb@plt+0x1aca8>
  42dda4:	str	x0, [sp, #32]
  42dda8:	ldr	x8, [sp, #32]
  42ddac:	mov	x9, #0xfffffffffffffffe    	// #-2
  42ddb0:	mov	w10, #0x1                   	// #1
  42ddb4:	cmp	x8, x9
  42ddb8:	str	w10, [sp, #12]
  42ddbc:	b.eq	42dde8 <_obstack_memory_used@@Base+0xfc4c>  // b.none
  42ddc0:	ldr	x8, [sp, #32]
  42ddc4:	mov	x9, #0xffffffffffffffff    	// #-1
  42ddc8:	mov	w10, #0x1                   	// #1
  42ddcc:	cmp	x8, x9
  42ddd0:	str	w10, [sp, #12]
  42ddd4:	b.eq	42dde8 <_obstack_memory_used@@Base+0xfc4c>  // b.none
  42ddd8:	ldr	x8, [sp, #32]
  42dddc:	cmp	x8, #0x0
  42dde0:	cset	w9, eq  // eq = none
  42dde4:	str	w9, [sp, #12]
  42dde8:	ldr	w8, [sp, #12]
  42ddec:	and	w8, w8, #0x1
  42ddf0:	mov	w0, w8
  42ddf4:	sxtw	x9, w0
  42ddf8:	cbz	x9, 42de40 <_obstack_memory_used@@Base+0xfca4>
  42ddfc:	ldr	x8, [sp, #32]
  42de00:	cbz	x8, 42de0c <_obstack_memory_used@@Base+0xfc70>
  42de04:	ldr	x8, [sp, #16]
  42de08:	cbnz	x8, 42de14 <_obstack_memory_used@@Base+0xfc78>
  42de0c:	str	wzr, [sp, #28]
  42de10:	b	42de28 <_obstack_memory_used@@Base+0xfc8c>
  42de14:	ldur	x8, [x29, #-8]
  42de18:	ldr	x8, [x8]
  42de1c:	ldr	x9, [sp, #40]
  42de20:	ldrb	w10, [x8, x9]
  42de24:	str	w10, [sp, #28]
  42de28:	mov	x8, #0x1                   	// #1
  42de2c:	str	x8, [sp, #32]
  42de30:	ldur	x8, [x29, #-8]
  42de34:	ldur	x9, [x29, #-32]
  42de38:	str	x9, [x8, #32]
  42de3c:	b	42de48 <_obstack_memory_used@@Base+0xfcac>
  42de40:	ldr	w8, [sp, #24]
  42de44:	str	w8, [sp, #28]
  42de48:	ldr	x8, [sp, #32]
  42de4c:	ldr	x9, [sp, #40]
  42de50:	add	x8, x9, x8
  42de54:	str	x8, [sp, #40]
  42de58:	b	42dd50 <_obstack_memory_used@@Base+0xfbb4>
  42de5c:	ldr	w8, [sp, #28]
  42de60:	ldur	x9, [x29, #-24]
  42de64:	str	w8, [x9]
  42de68:	ldr	x0, [sp, #40]
  42de6c:	ldp	x29, x30, [sp, #80]
  42de70:	add	sp, sp, #0x60
  42de74:	ret
  42de78:	sub	sp, sp, #0x10
  42de7c:	mov	x8, #0x40                  	// #64
  42de80:	str	x0, [sp, #8]
  42de84:	str	x1, [sp]
  42de88:	ldr	x9, [sp, #8]
  42de8c:	ldr	x10, [sp]
  42de90:	sdiv	x10, x10, x8
  42de94:	ldr	x9, [x9, x10, lsl #3]
  42de98:	ldr	x10, [sp]
  42de9c:	sdiv	x11, x10, x8
  42dea0:	mul	x8, x11, x8
  42dea4:	subs	x8, x10, x8
  42dea8:	lsr	x8, x9, x8
  42deac:	tst	x8, #0x1
  42deb0:	cset	w12, ne  // ne = any
  42deb4:	and	w0, w12, #0x1
  42deb8:	add	sp, sp, #0x10
  42debc:	ret
  42dec0:	sub	sp, sp, #0x50
  42dec4:	stp	x29, x30, [sp, #64]
  42dec8:	add	x29, sp, #0x40
  42decc:	stur	x0, [x29, #-16]
  42ded0:	stur	x1, [x29, #-24]
  42ded4:	str	x2, [sp, #32]
  42ded8:	ldur	x8, [x29, #-16]
  42dedc:	ldr	x8, [x8, #152]
  42dee0:	str	x8, [sp, #24]
  42dee4:	str	xzr, [sp, #16]
  42dee8:	ldr	x8, [sp, #16]
  42deec:	ldur	x9, [x29, #-24]
  42def0:	ldr	x9, [x9, #8]
  42def4:	cmp	x8, x9
  42def8:	b.ge	42dfd4 <_obstack_memory_used@@Base+0xfe38>  // b.tcont
  42defc:	ldur	x8, [x29, #-24]
  42df00:	mov	x9, #0x10                  	// #16
  42df04:	ldr	x8, [x8, #16]
  42df08:	ldr	x10, [sp, #16]
  42df0c:	ldr	x8, [x8, x10, lsl #3]
  42df10:	str	x8, [sp]
  42df14:	ldr	x8, [sp, #24]
  42df18:	ldr	x8, [x8]
  42df1c:	ldr	x10, [sp]
  42df20:	mul	x9, x9, x10
  42df24:	add	x8, x8, x9
  42df28:	ldr	w11, [x8, #8]
  42df2c:	and	w11, w11, #0xff
  42df30:	cmp	w11, #0x8
  42df34:	b.ne	42dfc4 <_obstack_memory_used@@Base+0xfe28>  // b.any
  42df38:	ldr	x8, [sp, #24]
  42df3c:	ldr	x8, [x8]
  42df40:	ldr	x9, [sp]
  42df44:	mov	x10, #0x10                  	// #16
  42df48:	mul	x9, x10, x9
  42df4c:	ldr	x8, [x8, x9]
  42df50:	cmp	x8, #0x40
  42df54:	b.ge	42dfc4 <_obstack_memory_used@@Base+0xfe28>  // b.tcont
  42df58:	ldr	x8, [sp, #24]
  42df5c:	ldr	x8, [x8, #160]
  42df60:	ldr	x9, [sp, #24]
  42df64:	ldr	x9, [x9]
  42df68:	ldr	x10, [sp]
  42df6c:	mov	x11, #0x10                  	// #16
  42df70:	mul	x10, x11, x10
  42df74:	ldr	x9, [x9, x10]
  42df78:	mov	x10, #0x1                   	// #1
  42df7c:	lsl	x9, x10, x9
  42df80:	and	x8, x8, x9
  42df84:	cbz	x8, 42dfc4 <_obstack_memory_used@@Base+0xfe28>
  42df88:	ldur	x0, [x29, #-16]
  42df8c:	ldr	x1, [sp]
  42df90:	ldr	x2, [sp, #32]
  42df94:	bl	42ed20 <_obstack_memory_used@@Base+0x10b84>
  42df98:	str	w0, [sp, #12]
  42df9c:	ldr	w8, [sp, #12]
  42dfa0:	cmp	w8, #0x0
  42dfa4:	cset	w8, ne  // ne = any
  42dfa8:	and	w8, w8, #0x1
  42dfac:	mov	w1, w8
  42dfb0:	sxtw	x9, w1
  42dfb4:	cbz	x9, 42dfc4 <_obstack_memory_used@@Base+0xfe28>
  42dfb8:	ldr	w8, [sp, #12]
  42dfbc:	stur	w8, [x29, #-4]
  42dfc0:	b	42dfd8 <_obstack_memory_used@@Base+0xfe3c>
  42dfc4:	ldr	x8, [sp, #16]
  42dfc8:	add	x8, x8, #0x1
  42dfcc:	str	x8, [sp, #16]
  42dfd0:	b	42dee8 <_obstack_memory_used@@Base+0xfd4c>
  42dfd4:	stur	wzr, [x29, #-4]
  42dfd8:	ldur	w0, [x29, #-4]
  42dfdc:	ldp	x29, x30, [sp, #64]
  42dfe0:	add	sp, sp, #0x50
  42dfe4:	ret
  42dfe8:	sub	sp, sp, #0xe0
  42dfec:	stp	x29, x30, [sp, #208]
  42dff0:	add	x29, sp, #0xd0
  42dff4:	stur	x0, [x29, #-8]
  42dff8:	stur	x1, [x29, #-16]
  42dffc:	ldur	x8, [x29, #-8]
  42e000:	ldr	x8, [x8, #152]
  42e004:	stur	x8, [x29, #-24]
  42e008:	ldur	x8, [x29, #-8]
  42e00c:	ldr	x8, [x8, #72]
  42e010:	stur	x8, [x29, #-48]
  42e014:	stur	xzr, [x29, #-40]
  42e018:	ldur	x8, [x29, #-40]
  42e01c:	ldur	x9, [x29, #-16]
  42e020:	ldr	x9, [x9, #8]
  42e024:	cmp	x8, x9
  42e028:	b.ge	42e558 <_obstack_memory_used@@Base+0x103bc>  // b.tcont
  42e02c:	ldur	x8, [x29, #-16]
  42e030:	mov	x9, #0x10                  	// #16
  42e034:	ldr	x8, [x8, #16]
  42e038:	ldur	x10, [x29, #-40]
  42e03c:	ldr	x8, [x8, x10, lsl #3]
  42e040:	stur	x8, [x29, #-80]
  42e044:	ldur	x8, [x29, #-24]
  42e048:	ldr	x8, [x8]
  42e04c:	ldur	x10, [x29, #-80]
  42e050:	mul	x9, x9, x10
  42e054:	add	x8, x8, x9
  42e058:	stur	x8, [x29, #-96]
  42e05c:	ldur	x8, [x29, #-96]
  42e060:	ldr	w11, [x8, #8]
  42e064:	and	w11, w11, #0xff
  42e068:	cmp	w11, #0x4
  42e06c:	b.eq	42e074 <_obstack_memory_used@@Base+0xfed8>  // b.none
  42e070:	b	42e548 <_obstack_memory_used@@Base+0x103ac>
  42e074:	ldur	x8, [x29, #-96]
  42e078:	mov	x9, #0x8                   	// #8
  42e07c:	ldr	w10, [x8, #8]
  42e080:	lsr	w9, w10, w9
  42e084:	and	w9, w9, #0x3ff
  42e088:	cbz	w9, 42e148 <_obstack_memory_used@@Base+0xffac>
  42e08c:	ldur	x0, [x29, #-8]
  42e090:	ldur	x1, [x29, #-48]
  42e094:	ldur	x8, [x29, #-8]
  42e098:	ldr	w2, [x8, #160]
  42e09c:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42e0a0:	stur	w0, [x29, #-84]
  42e0a4:	ldur	x8, [x29, #-96]
  42e0a8:	mov	x9, #0x8                   	// #8
  42e0ac:	ldr	w10, [x8, #8]
  42e0b0:	lsr	w9, w10, w9
  42e0b4:	and	w9, w9, #0x3ff
  42e0b8:	and	w9, w9, #0x4
  42e0bc:	cbz	w9, 42e0cc <_obstack_memory_used@@Base+0xff30>
  42e0c0:	ldur	w8, [x29, #-84]
  42e0c4:	and	w8, w8, #0x1
  42e0c8:	cbz	w8, 42e144 <_obstack_memory_used@@Base+0xffa8>
  42e0cc:	ldur	x8, [x29, #-96]
  42e0d0:	mov	x9, #0x8                   	// #8
  42e0d4:	ldr	w10, [x8, #8]
  42e0d8:	lsr	w9, w10, w9
  42e0dc:	and	w9, w9, #0x3ff
  42e0e0:	and	w9, w9, #0x8
  42e0e4:	cbz	w9, 42e0f4 <_obstack_memory_used@@Base+0xff58>
  42e0e8:	ldur	w8, [x29, #-84]
  42e0ec:	and	w8, w8, #0x1
  42e0f0:	cbnz	w8, 42e144 <_obstack_memory_used@@Base+0xffa8>
  42e0f4:	ldur	x8, [x29, #-96]
  42e0f8:	mov	x9, #0x8                   	// #8
  42e0fc:	ldr	w10, [x8, #8]
  42e100:	lsr	w9, w10, w9
  42e104:	and	w9, w9, #0x3ff
  42e108:	and	w9, w9, #0x20
  42e10c:	cbz	w9, 42e11c <_obstack_memory_used@@Base+0xff80>
  42e110:	ldur	w8, [x29, #-84]
  42e114:	and	w8, w8, #0x2
  42e118:	cbz	w8, 42e144 <_obstack_memory_used@@Base+0xffa8>
  42e11c:	ldur	x8, [x29, #-96]
  42e120:	mov	x9, #0x8                   	// #8
  42e124:	ldr	w10, [x8, #8]
  42e128:	lsr	w9, w10, w9
  42e12c:	and	w9, w9, #0x3ff
  42e130:	and	w9, w9, #0x80
  42e134:	cbz	w9, 42e148 <_obstack_memory_used@@Base+0xffac>
  42e138:	ldur	w8, [x29, #-84]
  42e13c:	and	w8, w8, #0x8
  42e140:	cbnz	w8, 42e148 <_obstack_memory_used@@Base+0xffac>
  42e144:	b	42e548 <_obstack_memory_used@@Base+0x103ac>
  42e148:	ldur	x8, [x29, #-8]
  42e14c:	ldr	x8, [x8, #200]
  42e150:	stur	x8, [x29, #-72]
  42e154:	ldur	x0, [x29, #-8]
  42e158:	ldur	x1, [x29, #-80]
  42e15c:	ldur	x2, [x29, #-48]
  42e160:	bl	42eecc <_obstack_memory_used@@Base+0x10d30>
  42e164:	stur	w0, [x29, #-28]
  42e168:	ldur	w9, [x29, #-28]
  42e16c:	cmp	w9, #0x0
  42e170:	cset	w9, ne  // ne = any
  42e174:	and	w9, w9, #0x1
  42e178:	mov	w1, w9
  42e17c:	sxtw	x8, w1
  42e180:	cbz	x8, 42e188 <_obstack_memory_used@@Base+0xffec>
  42e184:	b	42e55c <_obstack_memory_used@@Base+0x103c0>
  42e188:	ldur	x8, [x29, #-24]
  42e18c:	ldr	x8, [x8, #24]
  42e190:	ldur	x9, [x29, #-80]
  42e194:	ldr	x8, [x8, x9, lsl #3]
  42e198:	mov	x9, #0xffffffffffffffff    	// #-1
  42e19c:	cmp	x8, x9
  42e1a0:	b.eq	42e1a8 <_obstack_memory_used@@Base+0x1000c>  // b.none
  42e1a4:	b	42e1a8 <_obstack_memory_used@@Base+0x1000c>
  42e1a8:	ldur	x8, [x29, #-72]
  42e1ac:	ldur	x9, [x29, #-8]
  42e1b0:	ldr	x9, [x9, #200]
  42e1b4:	cmp	x8, x9
  42e1b8:	b.ge	42e548 <_obstack_memory_used@@Base+0x103ac>  // b.tcont
  42e1bc:	ldur	x8, [x29, #-8]
  42e1c0:	ldr	x8, [x8, #216]
  42e1c4:	ldur	x9, [x29, #-72]
  42e1c8:	mov	x10, #0x28                  	// #40
  42e1cc:	mul	x9, x10, x9
  42e1d0:	add	x8, x8, x9
  42e1d4:	str	x8, [sp, #80]
  42e1d8:	ldr	x8, [sp, #80]
  42e1dc:	ldr	x8, [x8]
  42e1e0:	ldur	x9, [x29, #-80]
  42e1e4:	cmp	x8, x9
  42e1e8:	b.ne	42e200 <_obstack_memory_used@@Base+0x10064>  // b.any
  42e1ec:	ldr	x8, [sp, #80]
  42e1f0:	ldr	x8, [x8, #8]
  42e1f4:	ldur	x9, [x29, #-48]
  42e1f8:	cmp	x8, x9
  42e1fc:	b.eq	42e204 <_obstack_memory_used@@Base+0x10068>  // b.none
  42e200:	b	42e538 <_obstack_memory_used@@Base+0x1039c>
  42e204:	ldr	x8, [sp, #80]
  42e208:	ldr	x8, [x8, #24]
  42e20c:	ldr	x9, [sp, #80]
  42e210:	ldr	x9, [x9, #16]
  42e214:	subs	x8, x8, x9
  42e218:	str	x8, [sp, #96]
  42e21c:	ldr	x8, [sp, #96]
  42e220:	cbnz	x8, 42e25c <_obstack_memory_used@@Base+0x100c0>
  42e224:	ldur	x8, [x29, #-24]
  42e228:	ldr	x8, [x8, #48]
  42e22c:	ldur	x9, [x29, #-24]
  42e230:	ldr	x9, [x9, #40]
  42e234:	ldur	x10, [x29, #-80]
  42e238:	mov	x11, #0x18                  	// #24
  42e23c:	mul	x10, x11, x10
  42e240:	add	x9, x9, x10
  42e244:	ldr	x9, [x9, #16]
  42e248:	ldr	x9, [x9]
  42e24c:	mul	x9, x11, x9
  42e250:	add	x8, x8, x9
  42e254:	str	x8, [sp, #48]
  42e258:	b	42e284 <_obstack_memory_used@@Base+0x100e8>
  42e25c:	ldur	x8, [x29, #-24]
  42e260:	ldr	x8, [x8, #48]
  42e264:	ldur	x9, [x29, #-24]
  42e268:	mov	x10, #0x18                  	// #24
  42e26c:	ldr	x9, [x9, #24]
  42e270:	ldur	x11, [x29, #-80]
  42e274:	ldr	x9, [x9, x11, lsl #3]
  42e278:	mul	x9, x10, x9
  42e27c:	add	x8, x8, x9
  42e280:	str	x8, [sp, #48]
  42e284:	ldr	x8, [sp, #48]
  42e288:	str	x8, [sp, #104]
  42e28c:	ldur	x8, [x29, #-48]
  42e290:	ldr	x9, [sp, #80]
  42e294:	ldr	x9, [x9, #24]
  42e298:	add	x8, x8, x9
  42e29c:	ldr	x9, [sp, #80]
  42e2a0:	ldr	x9, [x9, #16]
  42e2a4:	subs	x8, x8, x9
  42e2a8:	stur	x8, [x29, #-56]
  42e2ac:	ldur	x0, [x29, #-8]
  42e2b0:	ldur	x8, [x29, #-56]
  42e2b4:	subs	x1, x8, #0x1
  42e2b8:	ldur	x8, [x29, #-8]
  42e2bc:	ldr	w2, [x8, #160]
  42e2c0:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42e2c4:	stur	w0, [x29, #-84]
  42e2c8:	ldur	x8, [x29, #-8]
  42e2cc:	ldr	x8, [x8, #184]
  42e2d0:	ldur	x9, [x29, #-56]
  42e2d4:	mov	x10, #0x8                   	// #8
  42e2d8:	mul	x9, x10, x9
  42e2dc:	add	x8, x8, x9
  42e2e0:	ldr	x8, [x8]
  42e2e4:	str	x8, [sp, #88]
  42e2e8:	ldur	x8, [x29, #-8]
  42e2ec:	ldr	x8, [x8, #184]
  42e2f0:	ldur	x9, [x29, #-48]
  42e2f4:	mul	x9, x10, x9
  42e2f8:	add	x8, x8, x9
  42e2fc:	ldr	x8, [x8]
  42e300:	cbnz	x8, 42e310 <_obstack_memory_used@@Base+0x10174>
  42e304:	mov	x8, xzr
  42e308:	str	x8, [sp, #40]
  42e30c:	b	42e334 <_obstack_memory_used@@Base+0x10198>
  42e310:	ldur	x8, [x29, #-8]
  42e314:	ldr	x8, [x8, #184]
  42e318:	ldur	x9, [x29, #-48]
  42e31c:	mov	x10, #0x8                   	// #8
  42e320:	mul	x9, x10, x9
  42e324:	add	x8, x8, x9
  42e328:	ldr	x8, [x8]
  42e32c:	ldr	x8, [x8, #16]
  42e330:	str	x8, [sp, #40]
  42e334:	ldr	x8, [sp, #40]
  42e338:	stur	x8, [x29, #-64]
  42e33c:	ldr	x8, [sp, #88]
  42e340:	cbnz	x8, 42e3c4 <_obstack_memory_used@@Base+0x10228>
  42e344:	ldur	x1, [x29, #-24]
  42e348:	ldr	x2, [sp, #104]
  42e34c:	ldur	w3, [x29, #-84]
  42e350:	sub	x0, x29, #0x1c
  42e354:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  42e358:	ldur	x8, [x29, #-8]
  42e35c:	ldr	x8, [x8, #184]
  42e360:	ldur	x9, [x29, #-56]
  42e364:	mov	x10, #0x8                   	// #8
  42e368:	mul	x9, x10, x9
  42e36c:	add	x8, x8, x9
  42e370:	str	x0, [x8]
  42e374:	ldur	x8, [x29, #-8]
  42e378:	ldr	x8, [x8, #184]
  42e37c:	ldur	x9, [x29, #-56]
  42e380:	mul	x9, x10, x9
  42e384:	add	x8, x8, x9
  42e388:	ldr	x8, [x8]
  42e38c:	mov	w11, #0x0                   	// #0
  42e390:	str	w11, [sp, #36]
  42e394:	cbnz	x8, 42e3a8 <_obstack_memory_used@@Base+0x1020c>
  42e398:	ldur	w8, [x29, #-28]
  42e39c:	cmp	w8, #0x0
  42e3a0:	cset	w8, ne  // ne = any
  42e3a4:	str	w8, [sp, #36]
  42e3a8:	ldr	w8, [sp, #36]
  42e3ac:	and	w8, w8, #0x1
  42e3b0:	mov	w0, w8
  42e3b4:	sxtw	x9, w0
  42e3b8:	cbz	x9, 42e3c0 <_obstack_memory_used@@Base+0x10224>
  42e3bc:	b	42e55c <_obstack_memory_used@@Base+0x103c0>
  42e3c0:	b	42e4a0 <_obstack_memory_used@@Base+0x10304>
  42e3c4:	ldr	x8, [sp, #88]
  42e3c8:	ldr	x1, [x8, #80]
  42e3cc:	ldr	x2, [sp, #104]
  42e3d0:	add	x0, sp, #0x38
  42e3d4:	bl	42f4c4 <_obstack_memory_used@@Base+0x11328>
  42e3d8:	stur	w0, [x29, #-28]
  42e3dc:	ldur	w9, [x29, #-28]
  42e3e0:	cmp	w9, #0x0
  42e3e4:	cset	w9, ne  // ne = any
  42e3e8:	and	w9, w9, #0x1
  42e3ec:	mov	w1, w9
  42e3f0:	sxtw	x8, w1
  42e3f4:	cbz	x8, 42e408 <_obstack_memory_used@@Base+0x1026c>
  42e3f8:	add	x8, sp, #0x38
  42e3fc:	ldr	x0, [x8, #16]
  42e400:	bl	402b40 <free@plt>
  42e404:	b	42e55c <_obstack_memory_used@@Base+0x103c0>
  42e408:	ldur	x1, [x29, #-24]
  42e40c:	ldur	w3, [x29, #-84]
  42e410:	sub	x0, x29, #0x1c
  42e414:	add	x8, sp, #0x38
  42e418:	mov	x2, x8
  42e41c:	str	x8, [sp, #24]
  42e420:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  42e424:	ldur	x8, [x29, #-8]
  42e428:	ldr	x8, [x8, #184]
  42e42c:	ldur	x9, [x29, #-56]
  42e430:	mov	x10, #0x8                   	// #8
  42e434:	mul	x9, x10, x9
  42e438:	add	x8, x8, x9
  42e43c:	str	x0, [x8]
  42e440:	ldr	x8, [sp, #24]
  42e444:	ldr	x0, [x8, #16]
  42e448:	str	x10, [sp, #16]
  42e44c:	bl	402b40 <free@plt>
  42e450:	ldur	x8, [x29, #-8]
  42e454:	ldr	x8, [x8, #184]
  42e458:	ldur	x9, [x29, #-56]
  42e45c:	ldr	x10, [sp, #16]
  42e460:	mul	x9, x10, x9
  42e464:	add	x8, x8, x9
  42e468:	ldr	x8, [x8]
  42e46c:	mov	w11, #0x0                   	// #0
  42e470:	str	w11, [sp, #12]
  42e474:	cbnz	x8, 42e488 <_obstack_memory_used@@Base+0x102ec>
  42e478:	ldur	w8, [x29, #-28]
  42e47c:	cmp	w8, #0x0
  42e480:	cset	w8, ne  // ne = any
  42e484:	str	w8, [sp, #12]
  42e488:	ldr	w8, [sp, #12]
  42e48c:	and	w8, w8, #0x1
  42e490:	mov	w0, w8
  42e494:	sxtw	x9, w0
  42e498:	cbz	x9, 42e4a0 <_obstack_memory_used@@Base+0x10304>
  42e49c:	b	42e55c <_obstack_memory_used@@Base+0x103c0>
  42e4a0:	ldr	x8, [sp, #96]
  42e4a4:	cbnz	x8, 42e538 <_obstack_memory_used@@Base+0x1039c>
  42e4a8:	ldur	x8, [x29, #-8]
  42e4ac:	ldr	x8, [x8, #184]
  42e4b0:	ldur	x9, [x29, #-48]
  42e4b4:	mov	x10, #0x8                   	// #8
  42e4b8:	mul	x9, x10, x9
  42e4bc:	add	x8, x8, x9
  42e4c0:	ldr	x8, [x8]
  42e4c4:	ldr	x8, [x8, #16]
  42e4c8:	ldur	x9, [x29, #-64]
  42e4cc:	cmp	x8, x9
  42e4d0:	b.le	42e538 <_obstack_memory_used@@Base+0x1039c>
  42e4d4:	ldur	x0, [x29, #-8]
  42e4d8:	ldr	x1, [sp, #104]
  42e4dc:	ldur	x2, [x29, #-48]
  42e4e0:	bl	42dec0 <_obstack_memory_used@@Base+0xfd24>
  42e4e4:	stur	w0, [x29, #-28]
  42e4e8:	ldur	w8, [x29, #-28]
  42e4ec:	cmp	w8, #0x0
  42e4f0:	cset	w8, ne  // ne = any
  42e4f4:	and	w8, w8, #0x1
  42e4f8:	mov	w1, w8
  42e4fc:	sxtw	x9, w1
  42e500:	cbz	x9, 42e508 <_obstack_memory_used@@Base+0x1036c>
  42e504:	b	42e55c <_obstack_memory_used@@Base+0x103c0>
  42e508:	ldur	x0, [x29, #-8]
  42e50c:	ldr	x1, [sp, #104]
  42e510:	bl	42dfe8 <_obstack_memory_used@@Base+0xfe4c>
  42e514:	stur	w0, [x29, #-28]
  42e518:	ldur	w8, [x29, #-28]
  42e51c:	cmp	w8, #0x0
  42e520:	cset	w8, ne  // ne = any
  42e524:	and	w8, w8, #0x1
  42e528:	mov	w1, w8
  42e52c:	sxtw	x9, w1
  42e530:	cbz	x9, 42e538 <_obstack_memory_used@@Base+0x1039c>
  42e534:	b	42e55c <_obstack_memory_used@@Base+0x103c0>
  42e538:	ldur	x8, [x29, #-72]
  42e53c:	add	x8, x8, #0x1
  42e540:	stur	x8, [x29, #-72]
  42e544:	b	42e1a8 <_obstack_memory_used@@Base+0x1000c>
  42e548:	ldur	x8, [x29, #-40]
  42e54c:	add	x8, x8, #0x1
  42e550:	stur	x8, [x29, #-40]
  42e554:	b	42e018 <_obstack_memory_used@@Base+0xfe7c>
  42e558:	stur	wzr, [x29, #-28]
  42e55c:	ldur	w0, [x29, #-28]
  42e560:	ldp	x29, x30, [sp, #208]
  42e564:	add	sp, sp, #0xe0
  42e568:	ret
  42e56c:	sub	sp, sp, #0x60
  42e570:	stp	x29, x30, [sp, #80]
  42e574:	add	x29, sp, #0x50
  42e578:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  42e57c:	stur	x0, [x29, #-16]
  42e580:	stur	w1, [x29, #-20]
  42e584:	ldur	x9, [x29, #-16]
  42e588:	stur	x9, [x29, #-32]
  42e58c:	ldur	x9, [x29, #-32]
  42e590:	ldr	x9, [x9, #64]
  42e594:	cmp	x8, x9
  42e598:	cset	w10, ls  // ls = plast
  42e59c:	and	w10, w10, #0x1
  42e5a0:	mov	w0, w10
  42e5a4:	sxtw	x8, w0
  42e5a8:	cbz	x8, 42e5b8 <_obstack_memory_used@@Base+0x1041c>
  42e5ac:	mov	w8, #0xc                   	// #12
  42e5b0:	stur	w8, [x29, #-4]
  42e5b4:	b	42e7a8 <_obstack_memory_used@@Base+0x1060c>
  42e5b8:	ldur	x0, [x29, #-32]
  42e5bc:	ldursw	x8, [x29, #-20]
  42e5c0:	ldur	x9, [x29, #-32]
  42e5c4:	ldr	x9, [x9, #88]
  42e5c8:	ldur	x10, [x29, #-32]
  42e5cc:	ldr	x10, [x10, #64]
  42e5d0:	mov	x11, #0x2                   	// #2
  42e5d4:	mul	x10, x10, x11
  42e5d8:	cmp	x9, x10
  42e5dc:	str	x0, [sp, #32]
  42e5e0:	str	x8, [sp, #24]
  42e5e4:	b.ge	42e5f8 <_obstack_memory_used@@Base+0x1045c>  // b.tcont
  42e5e8:	ldur	x8, [x29, #-32]
  42e5ec:	ldr	x8, [x8, #88]
  42e5f0:	str	x8, [sp, #16]
  42e5f4:	b	42e60c <_obstack_memory_used@@Base+0x10470>
  42e5f8:	ldur	x8, [x29, #-32]
  42e5fc:	ldr	x8, [x8, #64]
  42e600:	mov	x9, #0x2                   	// #2
  42e604:	mul	x8, x8, x9
  42e608:	str	x8, [sp, #16]
  42e60c:	ldr	x8, [sp, #16]
  42e610:	ldr	x9, [sp, #24]
  42e614:	cmp	x9, x8
  42e618:	b.ge	42e66c <_obstack_memory_used@@Base+0x104d0>  // b.tcont
  42e61c:	ldur	x8, [x29, #-32]
  42e620:	ldr	x8, [x8, #88]
  42e624:	ldur	x9, [x29, #-32]
  42e628:	ldr	x9, [x9, #64]
  42e62c:	mov	x10, #0x2                   	// #2
  42e630:	mul	x9, x9, x10
  42e634:	cmp	x8, x9
  42e638:	b.ge	42e64c <_obstack_memory_used@@Base+0x104b0>  // b.tcont
  42e63c:	ldur	x8, [x29, #-32]
  42e640:	ldr	x8, [x8, #88]
  42e644:	str	x8, [sp, #8]
  42e648:	b	42e660 <_obstack_memory_used@@Base+0x104c4>
  42e64c:	ldur	x8, [x29, #-32]
  42e650:	ldr	x8, [x8, #64]
  42e654:	mov	x9, #0x2                   	// #2
  42e658:	mul	x8, x8, x9
  42e65c:	str	x8, [sp, #8]
  42e660:	ldr	x8, [sp, #8]
  42e664:	str	x8, [sp]
  42e668:	b	42e674 <_obstack_memory_used@@Base+0x104d8>
  42e66c:	ldursw	x8, [x29, #-20]
  42e670:	str	x8, [sp]
  42e674:	ldr	x8, [sp]
  42e678:	ldr	x0, [sp, #32]
  42e67c:	mov	x1, x8
  42e680:	bl	42248c <_obstack_memory_used@@Base+0x42f0>
  42e684:	stur	w0, [x29, #-24]
  42e688:	ldur	w9, [x29, #-24]
  42e68c:	cmp	w9, #0x0
  42e690:	cset	w9, ne  // ne = any
  42e694:	and	w9, w9, #0x1
  42e698:	mov	w1, w9
  42e69c:	sxtw	x8, w1
  42e6a0:	cbz	x8, 42e6b0 <_obstack_memory_used@@Base+0x10514>
  42e6a4:	ldur	w8, [x29, #-24]
  42e6a8:	stur	w8, [x29, #-4]
  42e6ac:	b	42e7a8 <_obstack_memory_used@@Base+0x1060c>
  42e6b0:	ldur	x8, [x29, #-16]
  42e6b4:	ldr	x8, [x8, #184]
  42e6b8:	cbz	x8, 42e714 <_obstack_memory_used@@Base+0x10578>
  42e6bc:	ldur	x8, [x29, #-16]
  42e6c0:	ldr	x0, [x8, #184]
  42e6c4:	ldur	x8, [x29, #-32]
  42e6c8:	ldr	x8, [x8, #64]
  42e6cc:	add	x8, x8, #0x1
  42e6d0:	mov	x9, #0x8                   	// #8
  42e6d4:	mul	x1, x8, x9
  42e6d8:	bl	4029c0 <realloc@plt>
  42e6dc:	str	x0, [sp, #40]
  42e6e0:	ldr	x8, [sp, #40]
  42e6e4:	cmp	x8, #0x0
  42e6e8:	cset	w10, eq  // eq = none
  42e6ec:	and	w10, w10, #0x1
  42e6f0:	mov	w0, w10
  42e6f4:	sxtw	x8, w0
  42e6f8:	cbz	x8, 42e708 <_obstack_memory_used@@Base+0x1056c>
  42e6fc:	mov	w8, #0xc                   	// #12
  42e700:	stur	w8, [x29, #-4]
  42e704:	b	42e7a8 <_obstack_memory_used@@Base+0x1060c>
  42e708:	ldr	x8, [sp, #40]
  42e70c:	ldur	x9, [x29, #-16]
  42e710:	str	x8, [x9, #184]
  42e714:	ldur	x8, [x29, #-32]
  42e718:	ldrb	w9, [x8, #136]
  42e71c:	cbz	w9, 42e774 <_obstack_memory_used@@Base+0x105d8>
  42e720:	ldur	x8, [x29, #-32]
  42e724:	ldr	w9, [x8, #144]
  42e728:	cmp	w9, #0x1
  42e72c:	b.le	42e768 <_obstack_memory_used@@Base+0x105cc>
  42e730:	ldur	x0, [x29, #-32]
  42e734:	bl	42260c <_obstack_memory_used@@Base+0x4470>
  42e738:	stur	w0, [x29, #-24]
  42e73c:	ldur	w8, [x29, #-24]
  42e740:	cmp	w8, #0x0
  42e744:	cset	w8, ne  // ne = any
  42e748:	and	w8, w8, #0x1
  42e74c:	mov	w1, w8
  42e750:	sxtw	x9, w1
  42e754:	cbz	x9, 42e764 <_obstack_memory_used@@Base+0x105c8>
  42e758:	ldur	w8, [x29, #-24]
  42e75c:	stur	w8, [x29, #-4]
  42e760:	b	42e7a8 <_obstack_memory_used@@Base+0x1060c>
  42e764:	b	42e770 <_obstack_memory_used@@Base+0x105d4>
  42e768:	ldur	x0, [x29, #-32]
  42e76c:	bl	4231f8 <_obstack_memory_used@@Base+0x505c>
  42e770:	b	42e7a4 <_obstack_memory_used@@Base+0x10608>
  42e774:	ldur	x8, [x29, #-32]
  42e778:	ldr	w9, [x8, #144]
  42e77c:	cmp	w9, #0x1
  42e780:	b.le	42e790 <_obstack_memory_used@@Base+0x105f4>
  42e784:	ldur	x0, [x29, #-32]
  42e788:	bl	423304 <_obstack_memory_used@@Base+0x5168>
  42e78c:	b	42e7a4 <_obstack_memory_used@@Base+0x10608>
  42e790:	ldur	x8, [x29, #-32]
  42e794:	ldr	x8, [x8, #120]
  42e798:	cbz	x8, 42e7a4 <_obstack_memory_used@@Base+0x10608>
  42e79c:	ldur	x0, [x29, #-32]
  42e7a0:	bl	423648 <_obstack_memory_used@@Base+0x54ac>
  42e7a4:	stur	wzr, [x29, #-4]
  42e7a8:	ldur	w0, [x29, #-4]
  42e7ac:	ldp	x29, x30, [sp, #80]
  42e7b0:	add	sp, sp, #0x60
  42e7b4:	ret
  42e7b8:	sub	sp, sp, #0x40
  42e7bc:	stp	x29, x30, [sp, #48]
  42e7c0:	add	x29, sp, #0x30
  42e7c4:	mov	w8, #0x1                   	// #1
  42e7c8:	stur	x0, [x29, #-16]
  42e7cc:	str	x1, [sp, #24]
  42e7d0:	str	x2, [sp, #16]
  42e7d4:	ldr	x9, [sp, #16]
  42e7d8:	ldrb	w10, [x9, #104]
  42e7dc:	mov	w11, #0x5                   	// #5
  42e7e0:	lsr	w10, w10, w11
  42e7e4:	and	w8, w10, w8
  42e7e8:	and	w8, w8, #0xff
  42e7ec:	mov	w9, w8
  42e7f0:	ubfx	x9, x9, #0, #32
  42e7f4:	cbz	x9, 42e838 <_obstack_memory_used@@Base+0x1069c>
  42e7f8:	ldr	x0, [sp, #24]
  42e7fc:	ldr	x1, [sp, #16]
  42e800:	bl	431dc4 <_obstack_memory_used@@Base+0x13c28>
  42e804:	ldur	x8, [x29, #-16]
  42e808:	str	w0, [x8]
  42e80c:	ldur	x8, [x29, #-16]
  42e810:	ldr	w9, [x8]
  42e814:	cmp	w9, #0x0
  42e818:	cset	w9, ne  // ne = any
  42e81c:	and	w9, w9, #0x1
  42e820:	mov	w1, w9
  42e824:	sxtw	x8, w1
  42e828:	cbz	x8, 42e838 <_obstack_memory_used@@Base+0x1069c>
  42e82c:	mov	x8, xzr
  42e830:	stur	x8, [x29, #-8]
  42e834:	b	42e97c <_obstack_memory_used@@Base+0x107e0>
  42e838:	ldr	x8, [sp, #24]
  42e83c:	ldr	x8, [x8, #8]
  42e840:	ldr	x9, [sp, #24]
  42e844:	ldr	x10, [x9, #72]
  42e848:	add	x11, x10, #0x1
  42e84c:	str	x11, [x9, #72]
  42e850:	add	x8, x8, x10
  42e854:	ldrb	w12, [x8]
  42e858:	strb	w12, [sp, #7]
  42e85c:	ldr	x8, [sp, #16]
  42e860:	ldr	x8, [x8, #88]
  42e864:	str	x8, [sp, #8]
  42e868:	ldr	x8, [sp, #8]
  42e86c:	cmp	x8, #0x0
  42e870:	cset	w9, ne  // ne = any
  42e874:	and	w9, w9, #0x1
  42e878:	mov	w0, w9
  42e87c:	sxtw	x8, w0
  42e880:	cbz	x8, 42e8a8 <_obstack_memory_used@@Base+0x1070c>
  42e884:	ldr	x8, [sp, #8]
  42e888:	ldrb	w9, [sp, #7]
  42e88c:	mov	w10, w9
  42e890:	mov	x11, #0x8                   	// #8
  42e894:	mul	x10, x11, x10
  42e898:	add	x8, x8, x10
  42e89c:	ldr	x8, [x8]
  42e8a0:	stur	x8, [x29, #-8]
  42e8a4:	b	42e97c <_obstack_memory_used@@Base+0x107e0>
  42e8a8:	ldr	x8, [sp, #16]
  42e8ac:	ldr	x8, [x8, #96]
  42e8b0:	str	x8, [sp, #8]
  42e8b4:	ldr	x8, [sp, #8]
  42e8b8:	cmp	x8, #0x0
  42e8bc:	cset	w9, ne  // ne = any
  42e8c0:	and	w9, w9, #0x1
  42e8c4:	mov	w0, w9
  42e8c8:	sxtw	x8, w0
  42e8cc:	cbz	x8, 42e94c <_obstack_memory_used@@Base+0x107b0>
  42e8d0:	ldr	x0, [sp, #24]
  42e8d4:	ldr	x8, [sp, #24]
  42e8d8:	ldr	x8, [x8, #72]
  42e8dc:	subs	x1, x8, #0x1
  42e8e0:	ldr	x8, [sp, #24]
  42e8e4:	ldr	w2, [x8, #160]
  42e8e8:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42e8ec:	str	w0, [sp]
  42e8f0:	ldr	w9, [sp]
  42e8f4:	and	w9, w9, #0x1
  42e8f8:	cbz	w9, 42e928 <_obstack_memory_used@@Base+0x1078c>
  42e8fc:	ldr	x8, [sp, #8]
  42e900:	ldrb	w9, [sp, #7]
  42e904:	add	w9, w9, #0x100
  42e908:	mov	w0, w9
  42e90c:	sxtw	x10, w0
  42e910:	mov	x11, #0x8                   	// #8
  42e914:	mul	x10, x11, x10
  42e918:	add	x8, x8, x10
  42e91c:	ldr	x8, [x8]
  42e920:	stur	x8, [x29, #-8]
  42e924:	b	42e97c <_obstack_memory_used@@Base+0x107e0>
  42e928:	ldr	x8, [sp, #8]
  42e92c:	ldrb	w9, [sp, #7]
  42e930:	mov	w10, w9
  42e934:	mov	x11, #0x8                   	// #8
  42e938:	mul	x10, x11, x10
  42e93c:	add	x8, x8, x10
  42e940:	ldr	x8, [x8]
  42e944:	stur	x8, [x29, #-8]
  42e948:	b	42e97c <_obstack_memory_used@@Base+0x107e0>
  42e94c:	ldr	x8, [sp, #24]
  42e950:	ldr	x0, [x8, #152]
  42e954:	ldr	x1, [sp, #16]
  42e958:	bl	4321c8 <_obstack_memory_used@@Base+0x1402c>
  42e95c:	tbnz	w0, #0, 42e978 <_obstack_memory_used@@Base+0x107dc>
  42e960:	ldur	x8, [x29, #-16]
  42e964:	mov	w9, #0xc                   	// #12
  42e968:	str	w9, [x8]
  42e96c:	mov	x8, xzr
  42e970:	stur	x8, [x29, #-8]
  42e974:	b	42e97c <_obstack_memory_used@@Base+0x107e0>
  42e978:	b	42e85c <_obstack_memory_used@@Base+0x106c0>
  42e97c:	ldur	x0, [x29, #-8]
  42e980:	ldp	x29, x30, [sp, #48]
  42e984:	add	sp, sp, #0x40
  42e988:	ret
  42e98c:	sub	sp, sp, #0x80
  42e990:	stp	x29, x30, [sp, #112]
  42e994:	add	x29, sp, #0x70
  42e998:	stur	x0, [x29, #-16]
  42e99c:	stur	x1, [x29, #-24]
  42e9a0:	stur	x2, [x29, #-32]
  42e9a4:	ldur	x8, [x29, #-24]
  42e9a8:	ldr	x8, [x8, #152]
  42e9ac:	stur	x8, [x29, #-40]
  42e9b0:	ldur	x8, [x29, #-24]
  42e9b4:	ldr	x8, [x8, #72]
  42e9b8:	stur	x8, [x29, #-48]
  42e9bc:	ldur	x8, [x29, #-48]
  42e9c0:	ldur	x9, [x29, #-24]
  42e9c4:	ldr	x9, [x9, #192]
  42e9c8:	cmp	x8, x9
  42e9cc:	b.le	42ea00 <_obstack_memory_used@@Base+0x10864>
  42e9d0:	ldur	x8, [x29, #-32]
  42e9d4:	ldur	x9, [x29, #-24]
  42e9d8:	ldr	x9, [x9, #184]
  42e9dc:	ldur	x10, [x29, #-48]
  42e9e0:	mov	x11, #0x8                   	// #8
  42e9e4:	mul	x10, x11, x10
  42e9e8:	add	x9, x9, x10
  42e9ec:	str	x8, [x9]
  42e9f0:	ldur	x8, [x29, #-48]
  42e9f4:	ldur	x9, [x29, #-24]
  42e9f8:	str	x8, [x9, #192]
  42e9fc:	b	42eb50 <_obstack_memory_used@@Base+0x109b4>
  42ea00:	ldur	x8, [x29, #-24]
  42ea04:	ldr	x8, [x8, #184]
  42ea08:	ldur	x9, [x29, #-48]
  42ea0c:	mov	x10, #0x8                   	// #8
  42ea10:	mul	x9, x10, x9
  42ea14:	add	x8, x8, x9
  42ea18:	ldr	x8, [x8]
  42ea1c:	cbnz	x8, 42ea44 <_obstack_memory_used@@Base+0x108a8>
  42ea20:	ldur	x8, [x29, #-32]
  42ea24:	ldur	x9, [x29, #-24]
  42ea28:	ldr	x9, [x9, #184]
  42ea2c:	ldur	x10, [x29, #-48]
  42ea30:	mov	x11, #0x8                   	// #8
  42ea34:	mul	x10, x11, x10
  42ea38:	add	x9, x9, x10
  42ea3c:	str	x8, [x9]
  42ea40:	b	42eb50 <_obstack_memory_used@@Base+0x109b4>
  42ea44:	mov	x8, xzr
  42ea48:	str	x8, [sp]
  42ea4c:	ldur	x8, [x29, #-24]
  42ea50:	ldr	x8, [x8, #184]
  42ea54:	ldur	x9, [x29, #-48]
  42ea58:	mov	x10, #0x8                   	// #8
  42ea5c:	mul	x9, x10, x9
  42ea60:	add	x8, x8, x9
  42ea64:	ldr	x8, [x8]
  42ea68:	str	x8, [sp, #56]
  42ea6c:	ldr	x8, [sp, #56]
  42ea70:	ldr	x8, [x8, #80]
  42ea74:	str	x8, [sp, #8]
  42ea78:	ldur	x8, [x29, #-32]
  42ea7c:	cbz	x8, 42ead4 <_obstack_memory_used@@Base+0x10938>
  42ea80:	ldur	x8, [x29, #-32]
  42ea84:	ldr	x8, [x8, #80]
  42ea88:	str	x8, [sp]
  42ea8c:	ldr	x1, [sp]
  42ea90:	ldr	x2, [sp, #8]
  42ea94:	add	x0, sp, #0x10
  42ea98:	bl	42f4c4 <_obstack_memory_used@@Base+0x11328>
  42ea9c:	ldur	x8, [x29, #-16]
  42eaa0:	str	w0, [x8]
  42eaa4:	ldur	x8, [x29, #-16]
  42eaa8:	ldr	w9, [x8]
  42eaac:	cmp	w9, #0x0
  42eab0:	cset	w9, ne  // ne = any
  42eab4:	and	w9, w9, #0x1
  42eab8:	mov	w1, w9
  42eabc:	sxtw	x8, w1
  42eac0:	cbz	x8, 42ead0 <_obstack_memory_used@@Base+0x10934>
  42eac4:	mov	x8, xzr
  42eac8:	stur	x8, [x29, #-8]
  42eacc:	b	42ec34 <_obstack_memory_used@@Base+0x10a98>
  42ead0:	b	42eae8 <_obstack_memory_used@@Base+0x1094c>
  42ead4:	ldr	x8, [sp, #8]
  42ead8:	ldr	q0, [x8]
  42eadc:	str	q0, [sp, #16]
  42eae0:	ldr	x8, [x8, #16]
  42eae4:	str	x8, [sp, #32]
  42eae8:	ldur	x0, [x29, #-24]
  42eaec:	ldur	x8, [x29, #-24]
  42eaf0:	ldr	x8, [x8, #72]
  42eaf4:	subs	x1, x8, #0x1
  42eaf8:	ldur	x8, [x29, #-24]
  42eafc:	ldr	w2, [x8, #160]
  42eb00:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42eb04:	str	w0, [sp, #52]
  42eb08:	ldur	x0, [x29, #-16]
  42eb0c:	ldur	x1, [x29, #-40]
  42eb10:	ldr	w3, [sp, #52]
  42eb14:	add	x2, sp, #0x10
  42eb18:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  42eb1c:	ldur	x8, [x29, #-24]
  42eb20:	ldr	x8, [x8, #184]
  42eb24:	ldur	x9, [x29, #-48]
  42eb28:	mov	x10, #0x8                   	// #8
  42eb2c:	mul	x9, x10, x9
  42eb30:	add	x8, x8, x9
  42eb34:	str	x0, [x8]
  42eb38:	stur	x0, [x29, #-32]
  42eb3c:	ldr	x8, [sp]
  42eb40:	cbz	x8, 42eb50 <_obstack_memory_used@@Base+0x109b4>
  42eb44:	add	x8, sp, #0x10
  42eb48:	ldr	x0, [x8, #16]
  42eb4c:	bl	402b40 <free@plt>
  42eb50:	ldur	x8, [x29, #-40]
  42eb54:	ldr	x8, [x8, #152]
  42eb58:	cbz	x8, 42ec2c <_obstack_memory_used@@Base+0x10a90>
  42eb5c:	ldur	x8, [x29, #-32]
  42eb60:	cbz	x8, 42ec2c <_obstack_memory_used@@Base+0x10a90>
  42eb64:	ldur	x0, [x29, #-24]
  42eb68:	ldur	x8, [x29, #-32]
  42eb6c:	add	x1, x8, #0x8
  42eb70:	ldur	x2, [x29, #-48]
  42eb74:	bl	42dec0 <_obstack_memory_used@@Base+0xfd24>
  42eb78:	ldur	x8, [x29, #-16]
  42eb7c:	str	w0, [x8]
  42eb80:	ldur	x8, [x29, #-16]
  42eb84:	ldr	w9, [x8]
  42eb88:	cmp	w9, #0x0
  42eb8c:	cset	w9, ne  // ne = any
  42eb90:	and	w9, w9, #0x1
  42eb94:	mov	w1, w9
  42eb98:	sxtw	x8, w1
  42eb9c:	cbz	x8, 42ebac <_obstack_memory_used@@Base+0x10a10>
  42eba0:	mov	x8, xzr
  42eba4:	stur	x8, [x29, #-8]
  42eba8:	b	42ec34 <_obstack_memory_used@@Base+0x10a98>
  42ebac:	ldur	x8, [x29, #-32]
  42ebb0:	ldrb	w9, [x8, #104]
  42ebb4:	mov	w10, #0x6                   	// #6
  42ebb8:	lsr	w9, w9, w10
  42ebbc:	and	w9, w9, #0x1
  42ebc0:	and	w9, w9, #0xff
  42ebc4:	cbz	w9, 42ec2c <_obstack_memory_used@@Base+0x10a90>
  42ebc8:	ldur	x0, [x29, #-24]
  42ebcc:	ldur	x8, [x29, #-32]
  42ebd0:	add	x1, x8, #0x8
  42ebd4:	bl	42dfe8 <_obstack_memory_used@@Base+0xfe4c>
  42ebd8:	ldur	x8, [x29, #-16]
  42ebdc:	str	w0, [x8]
  42ebe0:	ldur	x8, [x29, #-16]
  42ebe4:	ldr	w9, [x8]
  42ebe8:	cmp	w9, #0x0
  42ebec:	cset	w9, ne  // ne = any
  42ebf0:	and	w9, w9, #0x1
  42ebf4:	mov	w1, w9
  42ebf8:	sxtw	x8, w1
  42ebfc:	cbz	x8, 42ec0c <_obstack_memory_used@@Base+0x10a70>
  42ec00:	mov	x8, xzr
  42ec04:	stur	x8, [x29, #-8]
  42ec08:	b	42ec34 <_obstack_memory_used@@Base+0x10a98>
  42ec0c:	ldur	x8, [x29, #-24]
  42ec10:	ldr	x8, [x8, #184]
  42ec14:	ldur	x9, [x29, #-48]
  42ec18:	mov	x10, #0x8                   	// #8
  42ec1c:	mul	x9, x10, x9
  42ec20:	add	x8, x8, x9
  42ec24:	ldr	x8, [x8]
  42ec28:	stur	x8, [x29, #-32]
  42ec2c:	ldur	x8, [x29, #-32]
  42ec30:	stur	x8, [x29, #-8]
  42ec34:	ldur	x0, [x29, #-8]
  42ec38:	ldp	x29, x30, [sp, #112]
  42ec3c:	add	sp, sp, #0x80
  42ec40:	ret
  42ec44:	sub	sp, sp, #0x50
  42ec48:	stp	x29, x30, [sp, #64]
  42ec4c:	add	x29, sp, #0x40
  42ec50:	stur	x0, [x29, #-16]
  42ec54:	stur	x1, [x29, #-24]
  42ec58:	ldur	x8, [x29, #-24]
  42ec5c:	ldr	x8, [x8, #192]
  42ec60:	str	x8, [sp, #24]
  42ec64:	ldur	x8, [x29, #-24]
  42ec68:	ldr	x8, [x8, #72]
  42ec6c:	str	x8, [sp, #16]
  42ec70:	ldr	x8, [sp, #16]
  42ec74:	add	x8, x8, #0x1
  42ec78:	str	x8, [sp, #16]
  42ec7c:	ldr	x9, [sp, #24]
  42ec80:	cmp	x8, x9
  42ec84:	b.le	42ec94 <_obstack_memory_used@@Base+0x10af8>
  42ec88:	mov	x8, xzr
  42ec8c:	stur	x8, [x29, #-8]
  42ec90:	b	42ed10 <_obstack_memory_used@@Base+0x10b74>
  42ec94:	ldur	x8, [x29, #-24]
  42ec98:	ldr	x9, [x8, #72]
  42ec9c:	add	x9, x9, #0x1
  42eca0:	str	x9, [x8, #72]
  42eca4:	ldur	x8, [x29, #-24]
  42eca8:	ldr	x8, [x8, #184]
  42ecac:	ldr	x9, [sp, #16]
  42ecb0:	mov	x10, #0x8                   	// #8
  42ecb4:	mul	x9, x10, x9
  42ecb8:	add	x8, x8, x9
  42ecbc:	ldr	x8, [x8]
  42ecc0:	cbz	x8, 42ec70 <_obstack_memory_used@@Base+0x10ad4>
  42ecc4:	ldur	x0, [x29, #-16]
  42ecc8:	ldur	x1, [x29, #-24]
  42eccc:	mov	x8, xzr
  42ecd0:	mov	x2, x8
  42ecd4:	bl	42e98c <_obstack_memory_used@@Base+0x107f0>
  42ecd8:	str	x0, [sp, #32]
  42ecdc:	ldur	x8, [x29, #-16]
  42ece0:	ldr	w9, [x8]
  42ece4:	mov	w10, #0x0                   	// #0
  42ece8:	str	w10, [sp, #12]
  42ecec:	cbnz	w9, 42ed00 <_obstack_memory_used@@Base+0x10b64>
  42ecf0:	ldr	x8, [sp, #32]
  42ecf4:	cmp	x8, #0x0
  42ecf8:	cset	w9, eq  // eq = none
  42ecfc:	str	w9, [sp, #12]
  42ed00:	ldr	w8, [sp, #12]
  42ed04:	tbnz	w8, #0, 42ec58 <_obstack_memory_used@@Base+0x10abc>
  42ed08:	ldr	x8, [sp, #32]
  42ed0c:	stur	x8, [x29, #-8]
  42ed10:	ldur	x0, [x29, #-8]
  42ed14:	ldp	x29, x30, [sp, #64]
  42ed18:	add	sp, sp, #0x50
  42ed1c:	ret
  42ed20:	sub	sp, sp, #0x40
  42ed24:	stp	x29, x30, [sp, #48]
  42ed28:	add	x29, sp, #0x30
  42ed2c:	stur	x0, [x29, #-16]
  42ed30:	str	x1, [sp, #24]
  42ed34:	str	x2, [sp, #16]
  42ed38:	ldur	x8, [x29, #-16]
  42ed3c:	ldr	x8, [x8, #248]
  42ed40:	cbz	x8, 42ed48 <_obstack_memory_used@@Base+0x10bac>
  42ed44:	b	42ed48 <_obstack_memory_used@@Base+0x10bac>
  42ed48:	ldur	x8, [x29, #-16]
  42ed4c:	ldr	x8, [x8, #240]
  42ed50:	cmp	x8, #0x0
  42ed54:	cset	w9, le
  42ed58:	tbnz	w9, #0, 42ed60 <_obstack_memory_used@@Base+0x10bc4>
  42ed5c:	b	42ed60 <_obstack_memory_used@@Base+0x10bc4>
  42ed60:	ldur	x8, [x29, #-16]
  42ed64:	ldr	x8, [x8, #232]
  42ed68:	ldur	x9, [x29, #-16]
  42ed6c:	ldr	x9, [x9, #240]
  42ed70:	cmp	x8, x9
  42ed74:	cset	w10, eq  // eq = none
  42ed78:	and	w10, w10, #0x1
  42ed7c:	mov	w0, w10
  42ed80:	sxtw	x8, w0
  42ed84:	cbz	x8, 42edf8 <_obstack_memory_used@@Base+0x10c5c>
  42ed88:	ldur	x8, [x29, #-16]
  42ed8c:	ldr	x8, [x8, #240]
  42ed90:	mov	x9, #0x2                   	// #2
  42ed94:	mul	x8, x8, x9
  42ed98:	str	x8, [sp, #8]
  42ed9c:	ldur	x8, [x29, #-16]
  42eda0:	ldr	x0, [x8, #248]
  42eda4:	ldr	x8, [sp, #8]
  42eda8:	mov	x9, #0x8                   	// #8
  42edac:	mul	x1, x8, x9
  42edb0:	bl	4029c0 <realloc@plt>
  42edb4:	str	x0, [sp]
  42edb8:	ldr	x8, [sp]
  42edbc:	cmp	x8, #0x0
  42edc0:	cset	w10, eq  // eq = none
  42edc4:	and	w10, w10, #0x1
  42edc8:	mov	w0, w10
  42edcc:	sxtw	x8, w0
  42edd0:	cbz	x8, 42ede0 <_obstack_memory_used@@Base+0x10c44>
  42edd4:	mov	w8, #0xc                   	// #12
  42edd8:	stur	w8, [x29, #-4]
  42eddc:	b	42eebc <_obstack_memory_used@@Base+0x10d20>
  42ede0:	ldr	x8, [sp]
  42ede4:	ldur	x9, [x29, #-16]
  42ede8:	str	x8, [x9, #248]
  42edec:	ldr	x8, [sp, #8]
  42edf0:	ldur	x9, [x29, #-16]
  42edf4:	str	x8, [x9, #240]
  42edf8:	mov	x0, #0x1                   	// #1
  42edfc:	mov	x1, #0x30                  	// #48
  42ee00:	bl	4029a0 <calloc@plt>
  42ee04:	ldur	x8, [x29, #-16]
  42ee08:	ldr	x8, [x8, #248]
  42ee0c:	ldur	x9, [x29, #-16]
  42ee10:	ldr	x9, [x9, #232]
  42ee14:	mov	x10, #0x8                   	// #8
  42ee18:	mul	x9, x10, x9
  42ee1c:	add	x8, x8, x9
  42ee20:	str	x0, [x8]
  42ee24:	ldur	x8, [x29, #-16]
  42ee28:	ldr	x8, [x8, #248]
  42ee2c:	ldur	x9, [x29, #-16]
  42ee30:	ldr	x9, [x9, #232]
  42ee34:	mul	x9, x10, x9
  42ee38:	add	x8, x8, x9
  42ee3c:	ldr	x8, [x8]
  42ee40:	cmp	x8, #0x0
  42ee44:	cset	w11, eq  // eq = none
  42ee48:	and	w11, w11, #0x1
  42ee4c:	mov	w0, w11
  42ee50:	sxtw	x8, w0
  42ee54:	cbz	x8, 42ee64 <_obstack_memory_used@@Base+0x10cc8>
  42ee58:	mov	w8, #0xc                   	// #12
  42ee5c:	stur	w8, [x29, #-4]
  42ee60:	b	42eebc <_obstack_memory_used@@Base+0x10d20>
  42ee64:	ldr	x8, [sp, #24]
  42ee68:	ldur	x9, [x29, #-16]
  42ee6c:	ldr	x9, [x9, #248]
  42ee70:	ldur	x10, [x29, #-16]
  42ee74:	ldr	x10, [x10, #232]
  42ee78:	mov	x11, #0x8                   	// #8
  42ee7c:	mul	x10, x11, x10
  42ee80:	add	x9, x9, x10
  42ee84:	ldr	x9, [x9]
  42ee88:	str	x8, [x9, #8]
  42ee8c:	ldr	x8, [sp, #16]
  42ee90:	ldur	x9, [x29, #-16]
  42ee94:	ldr	x9, [x9, #248]
  42ee98:	ldur	x10, [x29, #-16]
  42ee9c:	ldr	x12, [x10, #232]
  42eea0:	add	x13, x12, #0x1
  42eea4:	str	x13, [x10, #232]
  42eea8:	mul	x10, x11, x12
  42eeac:	add	x9, x9, x10
  42eeb0:	ldr	x9, [x9]
  42eeb4:	str	x8, [x9]
  42eeb8:	stur	wzr, [x29, #-4]
  42eebc:	ldur	w0, [x29, #-4]
  42eec0:	ldp	x29, x30, [sp, #48]
  42eec4:	add	sp, sp, #0x40
  42eec8:	ret
  42eecc:	sub	sp, sp, #0xc0
  42eed0:	stp	x29, x30, [sp, #176]
  42eed4:	add	x29, sp, #0xb0
  42eed8:	mov	x8, #0xffffffffffffffff    	// #-1
  42eedc:	stur	x0, [x29, #-16]
  42eee0:	stur	x1, [x29, #-24]
  42eee4:	stur	x2, [x29, #-32]
  42eee8:	ldur	x9, [x29, #-16]
  42eeec:	ldr	x9, [x9, #152]
  42eef0:	stur	x9, [x29, #-40]
  42eef4:	ldur	x9, [x29, #-16]
  42eef8:	ldr	x9, [x9, #8]
  42eefc:	stur	x9, [x29, #-64]
  42ef00:	ldur	x0, [x29, #-16]
  42ef04:	ldur	x1, [x29, #-32]
  42ef08:	str	x8, [sp, #8]
  42ef0c:	bl	42f818 <_obstack_memory_used@@Base+0x1167c>
  42ef10:	stur	x0, [x29, #-72]
  42ef14:	ldur	x8, [x29, #-72]
  42ef18:	ldr	x9, [sp, #8]
  42ef1c:	cmp	x8, x9
  42ef20:	b.eq	42ef70 <_obstack_memory_used@@Base+0x10dd4>  // b.none
  42ef24:	ldur	x8, [x29, #-16]
  42ef28:	ldr	x8, [x8, #216]
  42ef2c:	ldur	x9, [x29, #-72]
  42ef30:	mov	x10, #0x28                  	// #40
  42ef34:	mul	x9, x10, x9
  42ef38:	add	x8, x8, x9
  42ef3c:	stur	x8, [x29, #-80]
  42ef40:	ldur	x8, [x29, #-80]
  42ef44:	ldr	x8, [x8]
  42ef48:	ldur	x9, [x29, #-24]
  42ef4c:	cmp	x8, x9
  42ef50:	b.ne	42ef5c <_obstack_memory_used@@Base+0x10dc0>  // b.any
  42ef54:	stur	wzr, [x29, #-4]
  42ef58:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42ef5c:	ldur	x8, [x29, #-80]
  42ef60:	add	x9, x8, #0x28
  42ef64:	stur	x9, [x29, #-80]
  42ef68:	ldrb	w10, [x8, #32]
  42ef6c:	cbnz	w10, 42ef40 <_obstack_memory_used@@Base+0x10da4>
  42ef70:	ldur	x8, [x29, #-40]
  42ef74:	ldr	x8, [x8]
  42ef78:	ldur	x9, [x29, #-24]
  42ef7c:	mov	x10, #0x10                  	// #16
  42ef80:	mul	x9, x10, x9
  42ef84:	ldr	x8, [x8, x9]
  42ef88:	stur	x8, [x29, #-48]
  42ef8c:	stur	xzr, [x29, #-56]
  42ef90:	ldur	x8, [x29, #-56]
  42ef94:	ldur	x9, [x29, #-16]
  42ef98:	ldr	x9, [x9, #232]
  42ef9c:	cmp	x8, x9
  42efa0:	b.ge	42f4b0 <_obstack_memory_used@@Base+0x11314>  // b.tcont
  42efa4:	ldur	x8, [x29, #-16]
  42efa8:	ldr	x8, [x8, #248]
  42efac:	ldur	x9, [x29, #-56]
  42efb0:	mov	x10, #0x8                   	// #8
  42efb4:	mul	x9, x10, x9
  42efb8:	add	x8, x8, x9
  42efbc:	ldr	x8, [x8]
  42efc0:	str	x8, [sp, #80]
  42efc4:	ldur	x8, [x29, #-40]
  42efc8:	ldr	x8, [x8]
  42efcc:	ldr	x9, [sp, #80]
  42efd0:	ldr	x9, [x9, #8]
  42efd4:	mov	x10, #0x10                  	// #16
  42efd8:	mul	x9, x10, x9
  42efdc:	ldr	x8, [x8, x9]
  42efe0:	ldur	x9, [x29, #-48]
  42efe4:	cmp	x8, x9
  42efe8:	b.eq	42eff0 <_obstack_memory_used@@Base+0x10e54>  // b.none
  42efec:	b	42f4a0 <_obstack_memory_used@@Base+0x11304>
  42eff0:	ldr	x8, [sp, #80]
  42eff4:	ldr	x8, [x8]
  42eff8:	str	x8, [sp, #56]
  42effc:	ldur	x8, [x29, #-32]
  42f000:	str	x8, [sp, #48]
  42f004:	str	xzr, [sp, #64]
  42f008:	ldr	x8, [sp, #64]
  42f00c:	ldr	x9, [sp, #80]
  42f010:	ldr	x9, [x9, #32]
  42f014:	cmp	x8, x9
  42f018:	b.ge	42f1b0 <_obstack_memory_used@@Base+0x11014>  // b.tcont
  42f01c:	ldr	x8, [sp, #80]
  42f020:	ldr	x8, [x8, #40]
  42f024:	ldr	x9, [sp, #64]
  42f028:	mov	x10, #0x8                   	// #8
  42f02c:	mul	x9, x10, x9
  42f030:	add	x8, x8, x9
  42f034:	ldr	x8, [x8]
  42f038:	str	x8, [sp, #72]
  42f03c:	ldr	x8, [sp, #72]
  42f040:	ldr	x8, [x8, #8]
  42f044:	ldr	x9, [sp, #56]
  42f048:	subs	x8, x8, x9
  42f04c:	str	x8, [sp, #40]
  42f050:	ldr	x8, [sp, #40]
  42f054:	cmp	x8, #0x0
  42f058:	cset	w11, le
  42f05c:	tbnz	w11, #0, 42f120 <_obstack_memory_used@@Base+0x10f84>
  42f060:	ldr	x8, [sp, #48]
  42f064:	ldr	x9, [sp, #40]
  42f068:	add	x8, x8, x9
  42f06c:	ldur	x9, [x29, #-16]
  42f070:	ldr	x9, [x9, #48]
  42f074:	cmp	x8, x9
  42f078:	cset	w10, gt
  42f07c:	and	w10, w10, #0x1
  42f080:	mov	w0, w10
  42f084:	sxtw	x8, w0
  42f088:	cbz	x8, 42f0f8 <_obstack_memory_used@@Base+0x10f5c>
  42f08c:	ldr	x8, [sp, #48]
  42f090:	ldr	x9, [sp, #40]
  42f094:	add	x8, x8, x9
  42f098:	ldur	x9, [x29, #-16]
  42f09c:	ldr	x9, [x9, #88]
  42f0a0:	cmp	x8, x9
  42f0a4:	b.le	42f0ac <_obstack_memory_used@@Base+0x10f10>
  42f0a8:	b	42f1b0 <_obstack_memory_used@@Base+0x11014>
  42f0ac:	ldur	x0, [x29, #-16]
  42f0b0:	ldr	x8, [sp, #48]
  42f0b4:	ldr	x9, [sp, #40]
  42f0b8:	add	x1, x8, x9
  42f0bc:	bl	42f8fc <_obstack_memory_used@@Base+0x11760>
  42f0c0:	stur	w0, [x29, #-84]
  42f0c4:	ldur	w10, [x29, #-84]
  42f0c8:	cmp	w10, #0x0
  42f0cc:	cset	w10, ne  // ne = any
  42f0d0:	and	w10, w10, #0x1
  42f0d4:	mov	w1, w10
  42f0d8:	sxtw	x8, w1
  42f0dc:	cbz	x8, 42f0ec <_obstack_memory_used@@Base+0x10f50>
  42f0e0:	ldur	w8, [x29, #-84]
  42f0e4:	stur	w8, [x29, #-4]
  42f0e8:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f0ec:	ldur	x8, [x29, #-16]
  42f0f0:	ldr	x8, [x8, #8]
  42f0f4:	stur	x8, [x29, #-64]
  42f0f8:	ldur	x8, [x29, #-64]
  42f0fc:	ldr	x9, [sp, #48]
  42f100:	add	x0, x8, x9
  42f104:	ldur	x8, [x29, #-64]
  42f108:	ldr	x9, [sp, #56]
  42f10c:	add	x1, x8, x9
  42f110:	ldr	x2, [sp, #40]
  42f114:	bl	402ae0 <memcmp@plt>
  42f118:	cbz	w0, 42f120 <_obstack_memory_used@@Base+0x10f84>
  42f11c:	b	42f1b0 <_obstack_memory_used@@Base+0x11014>
  42f120:	ldr	x8, [sp, #40]
  42f124:	ldr	x9, [sp, #48]
  42f128:	add	x8, x9, x8
  42f12c:	str	x8, [sp, #48]
  42f130:	ldr	x8, [sp, #40]
  42f134:	ldr	x9, [sp, #56]
  42f138:	add	x8, x9, x8
  42f13c:	str	x8, [sp, #56]
  42f140:	ldur	x0, [x29, #-16]
  42f144:	ldr	x1, [sp, #80]
  42f148:	ldr	x2, [sp, #72]
  42f14c:	ldur	x3, [x29, #-24]
  42f150:	ldur	x4, [x29, #-32]
  42f154:	bl	42fa20 <_obstack_memory_used@@Base+0x11884>
  42f158:	stur	w0, [x29, #-84]
  42f15c:	ldur	x8, [x29, #-16]
  42f160:	ldr	x8, [x8, #8]
  42f164:	stur	x8, [x29, #-64]
  42f168:	ldur	w10, [x29, #-84]
  42f16c:	cmp	w10, #0x1
  42f170:	b.ne	42f178 <_obstack_memory_used@@Base+0x10fdc>  // b.any
  42f174:	b	42f1a0 <_obstack_memory_used@@Base+0x11004>
  42f178:	ldur	w8, [x29, #-84]
  42f17c:	cmp	w8, #0x0
  42f180:	cset	w8, ne  // ne = any
  42f184:	and	w8, w8, #0x1
  42f188:	mov	w0, w8
  42f18c:	sxtw	x9, w0
  42f190:	cbz	x9, 42f1a0 <_obstack_memory_used@@Base+0x11004>
  42f194:	ldur	w8, [x29, #-84]
  42f198:	stur	w8, [x29, #-4]
  42f19c:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f1a0:	ldr	x8, [sp, #64]
  42f1a4:	add	x8, x8, #0x1
  42f1a8:	str	x8, [sp, #64]
  42f1ac:	b	42f008 <_obstack_memory_used@@Base+0x10e6c>
  42f1b0:	ldr	x8, [sp, #64]
  42f1b4:	ldr	x9, [sp, #80]
  42f1b8:	ldr	x9, [x9, #32]
  42f1bc:	cmp	x8, x9
  42f1c0:	b.ge	42f1c8 <_obstack_memory_used@@Base+0x1102c>  // b.tcont
  42f1c4:	b	42f4a0 <_obstack_memory_used@@Base+0x11304>
  42f1c8:	ldr	x8, [sp, #64]
  42f1cc:	cmp	x8, #0x0
  42f1d0:	cset	w9, le
  42f1d4:	tbnz	w9, #0, 42f1e4 <_obstack_memory_used@@Base+0x11048>
  42f1d8:	ldr	x8, [sp, #56]
  42f1dc:	add	x8, x8, #0x1
  42f1e0:	str	x8, [sp, #56]
  42f1e4:	ldr	x8, [sp, #56]
  42f1e8:	ldur	x9, [x29, #-32]
  42f1ec:	cmp	x8, x9
  42f1f0:	b.gt	42f4a0 <_obstack_memory_used@@Base+0x11304>
  42f1f4:	ldr	x8, [sp, #56]
  42f1f8:	ldr	x9, [sp, #80]
  42f1fc:	ldr	x9, [x9]
  42f200:	subs	x8, x8, x9
  42f204:	str	x8, [sp, #24]
  42f208:	ldr	x8, [sp, #24]
  42f20c:	cmp	x8, #0x0
  42f210:	cset	w10, le
  42f214:	tbnz	w10, #0, 42f2d0 <_obstack_memory_used@@Base+0x11134>
  42f218:	ldr	x8, [sp, #48]
  42f21c:	ldur	x9, [x29, #-16]
  42f220:	ldr	x9, [x9, #48]
  42f224:	cmp	x8, x9
  42f228:	cset	w10, ge  // ge = tcont
  42f22c:	and	w10, w10, #0x1
  42f230:	mov	w0, w10
  42f234:	sxtw	x8, w0
  42f238:	cbz	x8, 42f2a0 <_obstack_memory_used@@Base+0x11104>
  42f23c:	ldr	x8, [sp, #48]
  42f240:	ldur	x9, [x29, #-16]
  42f244:	ldr	x9, [x9, #88]
  42f248:	cmp	x8, x9
  42f24c:	b.lt	42f254 <_obstack_memory_used@@Base+0x110b8>  // b.tstop
  42f250:	b	42f4a0 <_obstack_memory_used@@Base+0x11304>
  42f254:	ldur	x0, [x29, #-16]
  42f258:	ldr	x8, [sp, #48]
  42f25c:	add	x8, x8, #0x1
  42f260:	mov	w1, w8
  42f264:	bl	42e56c <_obstack_memory_used@@Base+0x103d0>
  42f268:	stur	w0, [x29, #-84]
  42f26c:	ldur	w8, [x29, #-84]
  42f270:	cmp	w8, #0x0
  42f274:	cset	w8, ne  // ne = any
  42f278:	and	w8, w8, #0x1
  42f27c:	mov	w2, w8
  42f280:	sxtw	x9, w2
  42f284:	cbz	x9, 42f294 <_obstack_memory_used@@Base+0x110f8>
  42f288:	ldur	w8, [x29, #-84]
  42f28c:	stur	w8, [x29, #-4]
  42f290:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f294:	ldur	x8, [x29, #-16]
  42f298:	ldr	x8, [x8, #8]
  42f29c:	stur	x8, [x29, #-64]
  42f2a0:	ldur	x8, [x29, #-64]
  42f2a4:	ldr	x9, [sp, #48]
  42f2a8:	add	x10, x9, #0x1
  42f2ac:	str	x10, [sp, #48]
  42f2b0:	ldrb	w11, [x8, x9]
  42f2b4:	ldur	x8, [x29, #-64]
  42f2b8:	ldr	x9, [sp, #56]
  42f2bc:	subs	x9, x9, #0x1
  42f2c0:	ldrb	w12, [x8, x9]
  42f2c4:	cmp	w11, w12
  42f2c8:	b.eq	42f2d0 <_obstack_memory_used@@Base+0x11134>  // b.none
  42f2cc:	b	42f4a0 <_obstack_memory_used@@Base+0x11304>
  42f2d0:	ldur	x8, [x29, #-16]
  42f2d4:	ldr	x8, [x8, #184]
  42f2d8:	ldr	x9, [sp, #56]
  42f2dc:	mov	x10, #0x8                   	// #8
  42f2e0:	mul	x9, x10, x9
  42f2e4:	add	x8, x8, x9
  42f2e8:	ldr	x8, [x8]
  42f2ec:	cbnz	x8, 42f2f4 <_obstack_memory_used@@Base+0x11158>
  42f2f0:	b	42f490 <_obstack_memory_used@@Base+0x112f4>
  42f2f4:	ldur	x8, [x29, #-16]
  42f2f8:	ldr	x8, [x8, #184]
  42f2fc:	ldr	x9, [sp, #56]
  42f300:	mov	x10, #0x8                   	// #8
  42f304:	mul	x9, x10, x9
  42f308:	add	x8, x8, x9
  42f30c:	ldr	x8, [x8]
  42f310:	add	x8, x8, #0x8
  42f314:	str	x8, [sp, #16]
  42f318:	ldur	x0, [x29, #-40]
  42f31c:	ldr	x1, [sp, #16]
  42f320:	ldur	x2, [x29, #-48]
  42f324:	mov	w3, #0x9                   	// #9
  42f328:	bl	42fb10 <_obstack_memory_used@@Base+0x11974>
  42f32c:	str	x0, [sp, #32]
  42f330:	ldr	x8, [sp, #32]
  42f334:	mov	x9, #0xffffffffffffffff    	// #-1
  42f338:	cmp	x8, x9
  42f33c:	b.ne	42f344 <_obstack_memory_used@@Base+0x111a8>  // b.any
  42f340:	b	42f490 <_obstack_memory_used@@Base+0x112f4>
  42f344:	ldr	x8, [sp, #80]
  42f348:	ldr	x8, [x8, #16]
  42f34c:	cbnz	x8, 42f38c <_obstack_memory_used@@Base+0x111f0>
  42f350:	ldr	x8, [sp, #56]
  42f354:	ldr	x9, [sp, #80]
  42f358:	ldr	x9, [x9]
  42f35c:	subs	x8, x8, x9
  42f360:	add	x1, x8, #0x1
  42f364:	mov	x0, #0x18                  	// #24
  42f368:	bl	4029a0 <calloc@plt>
  42f36c:	ldr	x8, [sp, #80]
  42f370:	str	x0, [x8, #16]
  42f374:	ldr	x8, [sp, #80]
  42f378:	ldr	x8, [x8, #16]
  42f37c:	cbnz	x8, 42f38c <_obstack_memory_used@@Base+0x111f0>
  42f380:	mov	w8, #0xc                   	// #12
  42f384:	stur	w8, [x29, #-4]
  42f388:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f38c:	ldur	x0, [x29, #-16]
  42f390:	ldr	x8, [sp, #80]
  42f394:	ldr	x1, [x8, #16]
  42f398:	ldr	x8, [sp, #80]
  42f39c:	ldr	x2, [x8, #8]
  42f3a0:	ldr	x8, [sp, #80]
  42f3a4:	ldr	x3, [x8]
  42f3a8:	ldr	x4, [sp, #32]
  42f3ac:	ldr	x5, [sp, #56]
  42f3b0:	mov	w6, #0x9                   	// #9
  42f3b4:	bl	42fbc8 <_obstack_memory_used@@Base+0x11a2c>
  42f3b8:	stur	w0, [x29, #-84]
  42f3bc:	ldur	w9, [x29, #-84]
  42f3c0:	cmp	w9, #0x1
  42f3c4:	b.ne	42f3cc <_obstack_memory_used@@Base+0x11230>  // b.any
  42f3c8:	b	42f490 <_obstack_memory_used@@Base+0x112f4>
  42f3cc:	ldur	w8, [x29, #-84]
  42f3d0:	cmp	w8, #0x0
  42f3d4:	cset	w8, ne  // ne = any
  42f3d8:	and	w8, w8, #0x1
  42f3dc:	mov	w0, w8
  42f3e0:	sxtw	x9, w0
  42f3e4:	cbz	x9, 42f3f4 <_obstack_memory_used@@Base+0x11258>
  42f3e8:	ldur	w8, [x29, #-84]
  42f3ec:	stur	w8, [x29, #-4]
  42f3f0:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f3f4:	ldr	x0, [sp, #80]
  42f3f8:	ldr	x1, [sp, #32]
  42f3fc:	ldr	x2, [sp, #56]
  42f400:	bl	430394 <_obstack_memory_used@@Base+0x121f8>
  42f404:	str	x0, [sp, #72]
  42f408:	ldr	x8, [sp, #72]
  42f40c:	cmp	x8, #0x0
  42f410:	cset	w9, eq  // eq = none
  42f414:	and	w9, w9, #0x1
  42f418:	mov	w0, w9
  42f41c:	sxtw	x8, w0
  42f420:	cbz	x8, 42f430 <_obstack_memory_used@@Base+0x11294>
  42f424:	mov	w8, #0xc                   	// #12
  42f428:	stur	w8, [x29, #-4]
  42f42c:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f430:	ldur	x0, [x29, #-16]
  42f434:	ldr	x1, [sp, #80]
  42f438:	ldr	x2, [sp, #72]
  42f43c:	ldur	x3, [x29, #-24]
  42f440:	ldur	x4, [x29, #-32]
  42f444:	bl	42fa20 <_obstack_memory_used@@Base+0x11884>
  42f448:	stur	w0, [x29, #-84]
  42f44c:	ldur	x8, [x29, #-16]
  42f450:	ldr	x8, [x8, #8]
  42f454:	stur	x8, [x29, #-64]
  42f458:	ldur	w9, [x29, #-84]
  42f45c:	cmp	w9, #0x1
  42f460:	b.ne	42f468 <_obstack_memory_used@@Base+0x112cc>  // b.any
  42f464:	b	42f490 <_obstack_memory_used@@Base+0x112f4>
  42f468:	ldur	w8, [x29, #-84]
  42f46c:	cmp	w8, #0x0
  42f470:	cset	w8, ne  // ne = any
  42f474:	and	w8, w8, #0x1
  42f478:	mov	w0, w8
  42f47c:	sxtw	x9, w0
  42f480:	cbz	x9, 42f490 <_obstack_memory_used@@Base+0x112f4>
  42f484:	ldur	w8, [x29, #-84]
  42f488:	stur	w8, [x29, #-4]
  42f48c:	b	42f4b4 <_obstack_memory_used@@Base+0x11318>
  42f490:	ldr	x8, [sp, #56]
  42f494:	add	x8, x8, #0x1
  42f498:	str	x8, [sp, #56]
  42f49c:	b	42f1e4 <_obstack_memory_used@@Base+0x11048>
  42f4a0:	ldur	x8, [x29, #-56]
  42f4a4:	add	x8, x8, #0x1
  42f4a8:	stur	x8, [x29, #-56]
  42f4ac:	b	42ef90 <_obstack_memory_used@@Base+0x10df4>
  42f4b0:	stur	wzr, [x29, #-4]
  42f4b4:	ldur	w0, [x29, #-4]
  42f4b8:	ldp	x29, x30, [sp, #176]
  42f4bc:	add	sp, sp, #0xc0
  42f4c0:	ret
  42f4c4:	sub	sp, sp, #0x50
  42f4c8:	stp	x29, x30, [sp, #64]
  42f4cc:	add	x29, sp, #0x40
  42f4d0:	stur	x0, [x29, #-16]
  42f4d4:	stur	x1, [x29, #-24]
  42f4d8:	str	x2, [sp, #32]
  42f4dc:	ldur	x8, [x29, #-24]
  42f4e0:	cbz	x8, 42f57c <_obstack_memory_used@@Base+0x113e0>
  42f4e4:	ldur	x8, [x29, #-24]
  42f4e8:	ldr	x8, [x8, #8]
  42f4ec:	cmp	x8, #0x0
  42f4f0:	cset	w9, le
  42f4f4:	tbnz	w9, #0, 42f57c <_obstack_memory_used@@Base+0x113e0>
  42f4f8:	ldr	x8, [sp, #32]
  42f4fc:	cbz	x8, 42f57c <_obstack_memory_used@@Base+0x113e0>
  42f500:	ldr	x8, [sp, #32]
  42f504:	ldr	x8, [x8, #8]
  42f508:	cmp	x8, #0x0
  42f50c:	cset	w9, le
  42f510:	tbnz	w9, #0, 42f57c <_obstack_memory_used@@Base+0x113e0>
  42f514:	ldur	x8, [x29, #-24]
  42f518:	ldr	x8, [x8, #8]
  42f51c:	ldr	x9, [sp, #32]
  42f520:	ldr	x9, [x9, #8]
  42f524:	add	x8, x8, x9
  42f528:	ldur	x9, [x29, #-16]
  42f52c:	str	x8, [x9]
  42f530:	ldur	x8, [x29, #-16]
  42f534:	ldr	x8, [x8]
  42f538:	mov	x9, #0x8                   	// #8
  42f53c:	mul	x0, x8, x9
  42f540:	bl	402890 <malloc@plt>
  42f544:	ldur	x8, [x29, #-16]
  42f548:	str	x0, [x8, #16]
  42f54c:	ldur	x8, [x29, #-16]
  42f550:	ldr	x8, [x8, #16]
  42f554:	cmp	x8, #0x0
  42f558:	cset	w10, eq  // eq = none
  42f55c:	and	w10, w10, #0x1
  42f560:	mov	w0, w10
  42f564:	sxtw	x8, w0
  42f568:	cbz	x8, 42f578 <_obstack_memory_used@@Base+0x113dc>
  42f56c:	mov	w8, #0xc                   	// #12
  42f570:	stur	w8, [x29, #-4]
  42f574:	b	42f808 <_obstack_memory_used@@Base+0x1166c>
  42f578:	b	42f5f4 <_obstack_memory_used@@Base+0x11458>
  42f57c:	ldur	x8, [x29, #-24]
  42f580:	cbz	x8, 42f5ac <_obstack_memory_used@@Base+0x11410>
  42f584:	ldur	x8, [x29, #-24]
  42f588:	ldr	x8, [x8, #8]
  42f58c:	cmp	x8, #0x0
  42f590:	cset	w9, le
  42f594:	tbnz	w9, #0, 42f5ac <_obstack_memory_used@@Base+0x11410>
  42f598:	ldur	x0, [x29, #-16]
  42f59c:	ldur	x1, [x29, #-24]
  42f5a0:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  42f5a4:	stur	w0, [x29, #-4]
  42f5a8:	b	42f808 <_obstack_memory_used@@Base+0x1166c>
  42f5ac:	ldr	x8, [sp, #32]
  42f5b0:	cbz	x8, 42f5dc <_obstack_memory_used@@Base+0x11440>
  42f5b4:	ldr	x8, [sp, #32]
  42f5b8:	ldr	x8, [x8, #8]
  42f5bc:	cmp	x8, #0x0
  42f5c0:	cset	w9, le
  42f5c4:	tbnz	w9, #0, 42f5dc <_obstack_memory_used@@Base+0x11440>
  42f5c8:	ldur	x0, [x29, #-16]
  42f5cc:	ldr	x1, [sp, #32]
  42f5d0:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  42f5d4:	stur	w0, [x29, #-4]
  42f5d8:	b	42f808 <_obstack_memory_used@@Base+0x1166c>
  42f5dc:	ldur	x8, [x29, #-16]
  42f5e0:	str	xzr, [x8]
  42f5e4:	str	xzr, [x8, #8]
  42f5e8:	str	xzr, [x8, #16]
  42f5ec:	stur	wzr, [x29, #-4]
  42f5f0:	b	42f808 <_obstack_memory_used@@Base+0x1166c>
  42f5f4:	str	xzr, [sp, #8]
  42f5f8:	str	xzr, [sp, #16]
  42f5fc:	str	xzr, [sp, #24]
  42f600:	ldr	x8, [sp, #24]
  42f604:	ldur	x9, [x29, #-24]
  42f608:	ldr	x9, [x9, #8]
  42f60c:	mov	w10, #0x0                   	// #0
  42f610:	cmp	x8, x9
  42f614:	str	w10, [sp, #4]
  42f618:	b.ge	42f634 <_obstack_memory_used@@Base+0x11498>  // b.tcont
  42f61c:	ldr	x8, [sp, #16]
  42f620:	ldr	x9, [sp, #32]
  42f624:	ldr	x9, [x9, #8]
  42f628:	cmp	x8, x9
  42f62c:	cset	w10, lt  // lt = tstop
  42f630:	str	w10, [sp, #4]
  42f634:	ldr	w8, [sp, #4]
  42f638:	tbnz	w8, #0, 42f640 <_obstack_memory_used@@Base+0x114a4>
  42f63c:	b	42f704 <_obstack_memory_used@@Base+0x11568>
  42f640:	ldur	x8, [x29, #-24]
  42f644:	ldr	x8, [x8, #16]
  42f648:	ldr	x9, [sp, #24]
  42f64c:	ldr	x8, [x8, x9, lsl #3]
  42f650:	ldr	x9, [sp, #32]
  42f654:	ldr	x9, [x9, #16]
  42f658:	ldr	x10, [sp, #16]
  42f65c:	ldr	x9, [x9, x10, lsl #3]
  42f660:	cmp	x8, x9
  42f664:	b.le	42f69c <_obstack_memory_used@@Base+0x11500>
  42f668:	ldr	x8, [sp, #32]
  42f66c:	ldr	x8, [x8, #16]
  42f670:	ldr	x9, [sp, #16]
  42f674:	add	x10, x9, #0x1
  42f678:	str	x10, [sp, #16]
  42f67c:	ldr	x8, [x8, x9, lsl #3]
  42f680:	ldur	x9, [x29, #-16]
  42f684:	ldr	x9, [x9, #16]
  42f688:	ldr	x10, [sp, #8]
  42f68c:	add	x11, x10, #0x1
  42f690:	str	x11, [sp, #8]
  42f694:	str	x8, [x9, x10, lsl #3]
  42f698:	b	42f600 <_obstack_memory_used@@Base+0x11464>
  42f69c:	ldur	x8, [x29, #-24]
  42f6a0:	ldr	x8, [x8, #16]
  42f6a4:	ldr	x9, [sp, #24]
  42f6a8:	ldr	x8, [x8, x9, lsl #3]
  42f6ac:	ldr	x9, [sp, #32]
  42f6b0:	ldr	x9, [x9, #16]
  42f6b4:	ldr	x10, [sp, #16]
  42f6b8:	ldr	x9, [x9, x10, lsl #3]
  42f6bc:	cmp	x8, x9
  42f6c0:	b.ne	42f6d0 <_obstack_memory_used@@Base+0x11534>  // b.any
  42f6c4:	ldr	x8, [sp, #16]
  42f6c8:	add	x8, x8, #0x1
  42f6cc:	str	x8, [sp, #16]
  42f6d0:	ldur	x8, [x29, #-24]
  42f6d4:	ldr	x8, [x8, #16]
  42f6d8:	ldr	x9, [sp, #24]
  42f6dc:	add	x10, x9, #0x1
  42f6e0:	str	x10, [sp, #24]
  42f6e4:	ldr	x8, [x8, x9, lsl #3]
  42f6e8:	ldur	x9, [x29, #-16]
  42f6ec:	ldr	x9, [x9, #16]
  42f6f0:	ldr	x10, [sp, #8]
  42f6f4:	add	x11, x10, #0x1
  42f6f8:	str	x11, [sp, #8]
  42f6fc:	str	x8, [x9, x10, lsl #3]
  42f700:	b	42f600 <_obstack_memory_used@@Base+0x11464>
  42f704:	ldr	x8, [sp, #24]
  42f708:	ldur	x9, [x29, #-24]
  42f70c:	ldr	x9, [x9, #8]
  42f710:	cmp	x8, x9
  42f714:	b.ge	42f780 <_obstack_memory_used@@Base+0x115e4>  // b.tcont
  42f718:	ldur	x8, [x29, #-16]
  42f71c:	ldr	x8, [x8, #16]
  42f720:	ldr	x9, [sp, #8]
  42f724:	mov	x10, #0x8                   	// #8
  42f728:	mul	x9, x10, x9
  42f72c:	add	x0, x8, x9
  42f730:	ldur	x8, [x29, #-24]
  42f734:	ldr	x8, [x8, #16]
  42f738:	ldr	x9, [sp, #24]
  42f73c:	mul	x9, x10, x9
  42f740:	add	x1, x8, x9
  42f744:	ldur	x8, [x29, #-24]
  42f748:	ldr	x8, [x8, #8]
  42f74c:	ldr	x9, [sp, #24]
  42f750:	subs	x8, x8, x9
  42f754:	mov	x9, #0x8                   	// #8
  42f758:	mul	x2, x8, x9
  42f75c:	bl	4026a0 <memcpy@plt>
  42f760:	ldur	x8, [x29, #-24]
  42f764:	ldr	x8, [x8, #8]
  42f768:	ldr	x9, [sp, #24]
  42f76c:	subs	x8, x8, x9
  42f770:	ldr	x9, [sp, #8]
  42f774:	add	x8, x9, x8
  42f778:	str	x8, [sp, #8]
  42f77c:	b	42f7f8 <_obstack_memory_used@@Base+0x1165c>
  42f780:	ldr	x8, [sp, #16]
  42f784:	ldr	x9, [sp, #32]
  42f788:	ldr	x9, [x9, #8]
  42f78c:	cmp	x8, x9
  42f790:	b.ge	42f7f8 <_obstack_memory_used@@Base+0x1165c>  // b.tcont
  42f794:	ldur	x8, [x29, #-16]
  42f798:	ldr	x8, [x8, #16]
  42f79c:	ldr	x9, [sp, #8]
  42f7a0:	mov	x10, #0x8                   	// #8
  42f7a4:	mul	x9, x10, x9
  42f7a8:	add	x0, x8, x9
  42f7ac:	ldr	x8, [sp, #32]
  42f7b0:	ldr	x8, [x8, #16]
  42f7b4:	ldr	x9, [sp, #16]
  42f7b8:	mul	x9, x10, x9
  42f7bc:	add	x1, x8, x9
  42f7c0:	ldr	x8, [sp, #32]
  42f7c4:	ldr	x8, [x8, #8]
  42f7c8:	ldr	x9, [sp, #16]
  42f7cc:	subs	x8, x8, x9
  42f7d0:	mov	x9, #0x8                   	// #8
  42f7d4:	mul	x2, x8, x9
  42f7d8:	bl	4026a0 <memcpy@plt>
  42f7dc:	ldr	x8, [sp, #32]
  42f7e0:	ldr	x8, [x8, #8]
  42f7e4:	ldr	x9, [sp, #16]
  42f7e8:	subs	x8, x8, x9
  42f7ec:	ldr	x9, [sp, #8]
  42f7f0:	add	x8, x9, x8
  42f7f4:	str	x8, [sp, #8]
  42f7f8:	ldr	x8, [sp, #8]
  42f7fc:	ldur	x9, [x29, #-16]
  42f800:	str	x8, [x9, #8]
  42f804:	stur	wzr, [x29, #-4]
  42f808:	ldur	w0, [x29, #-4]
  42f80c:	ldp	x29, x30, [sp, #64]
  42f810:	add	sp, sp, #0x50
  42f814:	ret
  42f818:	sub	sp, sp, #0x40
  42f81c:	str	x0, [sp, #48]
  42f820:	str	x1, [sp, #40]
  42f824:	ldr	x8, [sp, #48]
  42f828:	ldr	x8, [x8, #200]
  42f82c:	str	x8, [sp, #24]
  42f830:	str	x8, [sp, #8]
  42f834:	str	xzr, [sp, #32]
  42f838:	ldr	x8, [sp, #32]
  42f83c:	ldr	x9, [sp, #24]
  42f840:	cmp	x8, x9
  42f844:	b.ge	42f8a4 <_obstack_memory_used@@Base+0x11708>  // b.tcont
  42f848:	ldr	x8, [sp, #32]
  42f84c:	ldr	x9, [sp, #24]
  42f850:	add	x8, x8, x9
  42f854:	mov	x9, #0x2                   	// #2
  42f858:	sdiv	x8, x8, x9
  42f85c:	str	x8, [sp, #16]
  42f860:	ldr	x8, [sp, #48]
  42f864:	ldr	x8, [x8, #216]
  42f868:	ldr	x9, [sp, #16]
  42f86c:	mov	x10, #0x28                  	// #40
  42f870:	mul	x9, x10, x9
  42f874:	add	x8, x8, x9
  42f878:	ldr	x8, [x8, #8]
  42f87c:	ldr	x9, [sp, #40]
  42f880:	cmp	x8, x9
  42f884:	b.ge	42f898 <_obstack_memory_used@@Base+0x116fc>  // b.tcont
  42f888:	ldr	x8, [sp, #16]
  42f88c:	add	x8, x8, #0x1
  42f890:	str	x8, [sp, #32]
  42f894:	b	42f8a0 <_obstack_memory_used@@Base+0x11704>
  42f898:	ldr	x8, [sp, #16]
  42f89c:	str	x8, [sp, #24]
  42f8a0:	b	42f838 <_obstack_memory_used@@Base+0x1169c>
  42f8a4:	ldr	x8, [sp, #32]
  42f8a8:	ldr	x9, [sp, #8]
  42f8ac:	cmp	x8, x9
  42f8b0:	b.ge	42f8e8 <_obstack_memory_used@@Base+0x1174c>  // b.tcont
  42f8b4:	ldr	x8, [sp, #48]
  42f8b8:	ldr	x8, [x8, #216]
  42f8bc:	ldr	x9, [sp, #32]
  42f8c0:	mov	x10, #0x28                  	// #40
  42f8c4:	mul	x9, x10, x9
  42f8c8:	add	x8, x8, x9
  42f8cc:	ldr	x8, [x8, #8]
  42f8d0:	ldr	x9, [sp, #40]
  42f8d4:	cmp	x8, x9
  42f8d8:	b.ne	42f8e8 <_obstack_memory_used@@Base+0x1174c>  // b.any
  42f8dc:	ldr	x8, [sp, #32]
  42f8e0:	str	x8, [sp, #56]
  42f8e4:	b	42f8f0 <_obstack_memory_used@@Base+0x11754>
  42f8e8:	mov	x8, #0xffffffffffffffff    	// #-1
  42f8ec:	str	x8, [sp, #56]
  42f8f0:	ldr	x0, [sp, #56]
  42f8f4:	add	sp, sp, #0x40
  42f8f8:	ret
  42f8fc:	sub	sp, sp, #0x40
  42f900:	stp	x29, x30, [sp, #48]
  42f904:	add	x29, sp, #0x30
  42f908:	stur	x0, [x29, #-16]
  42f90c:	str	x1, [sp, #24]
  42f910:	ldur	x8, [x29, #-16]
  42f914:	ldr	x8, [x8, #192]
  42f918:	str	x8, [sp, #16]
  42f91c:	ldr	x8, [sp, #24]
  42f920:	ldur	x9, [x29, #-16]
  42f924:	ldr	x9, [x9, #64]
  42f928:	cmp	x8, x9
  42f92c:	b.lt	42f948 <_obstack_memory_used@@Base+0x117ac>  // b.tstop
  42f930:	ldur	x8, [x29, #-16]
  42f934:	ldr	x8, [x8, #64]
  42f938:	ldur	x9, [x29, #-16]
  42f93c:	ldr	x9, [x9, #88]
  42f940:	cmp	x8, x9
  42f944:	b.lt	42f974 <_obstack_memory_used@@Base+0x117d8>  // b.tstop
  42f948:	ldr	x8, [sp, #24]
  42f94c:	ldur	x9, [x29, #-16]
  42f950:	ldr	x9, [x9, #48]
  42f954:	cmp	x8, x9
  42f958:	b.lt	42f9b4 <_obstack_memory_used@@Base+0x11818>  // b.tstop
  42f95c:	ldur	x8, [x29, #-16]
  42f960:	ldr	x8, [x8, #48]
  42f964:	ldur	x9, [x29, #-16]
  42f968:	ldr	x9, [x9, #88]
  42f96c:	cmp	x8, x9
  42f970:	b.ge	42f9b4 <_obstack_memory_used@@Base+0x11818>  // b.tcont
  42f974:	ldur	x0, [x29, #-16]
  42f978:	ldr	x8, [sp, #24]
  42f97c:	add	x8, x8, #0x1
  42f980:	mov	w1, w8
  42f984:	bl	42e56c <_obstack_memory_used@@Base+0x103d0>
  42f988:	str	w0, [sp, #12]
  42f98c:	ldr	w8, [sp, #12]
  42f990:	cmp	w8, #0x0
  42f994:	cset	w8, ne  // ne = any
  42f998:	and	w8, w8, #0x1
  42f99c:	mov	w2, w8
  42f9a0:	sxtw	x9, w2
  42f9a4:	cbz	x9, 42f9b4 <_obstack_memory_used@@Base+0x11818>
  42f9a8:	ldr	w8, [sp, #12]
  42f9ac:	stur	w8, [x29, #-4]
  42f9b0:	b	42fa10 <_obstack_memory_used@@Base+0x11874>
  42f9b4:	ldr	x8, [sp, #16]
  42f9b8:	ldr	x9, [sp, #24]
  42f9bc:	cmp	x8, x9
  42f9c0:	b.ge	42fa0c <_obstack_memory_used@@Base+0x11870>  // b.tcont
  42f9c4:	ldur	x8, [x29, #-16]
  42f9c8:	ldr	x8, [x8, #184]
  42f9cc:	ldr	x9, [sp, #16]
  42f9d0:	mov	x10, #0x8                   	// #8
  42f9d4:	mul	x9, x10, x9
  42f9d8:	add	x8, x8, x9
  42f9dc:	add	x0, x8, #0x8
  42f9e0:	ldr	x8, [sp, #24]
  42f9e4:	ldr	x9, [sp, #16]
  42f9e8:	subs	x8, x8, x9
  42f9ec:	mov	x9, #0x8                   	// #8
  42f9f0:	mul	x2, x9, x8
  42f9f4:	mov	w11, wzr
  42f9f8:	mov	w1, w11
  42f9fc:	bl	402960 <memset@plt>
  42fa00:	ldr	x8, [sp, #24]
  42fa04:	ldur	x9, [x29, #-16]
  42fa08:	str	x8, [x9, #192]
  42fa0c:	stur	wzr, [x29, #-4]
  42fa10:	ldur	w0, [x29, #-4]
  42fa14:	ldp	x29, x30, [sp, #48]
  42fa18:	add	sp, sp, #0x40
  42fa1c:	ret
  42fa20:	sub	sp, sp, #0x50
  42fa24:	stp	x29, x30, [sp, #64]
  42fa28:	add	x29, sp, #0x40
  42fa2c:	mov	w6, #0x8                   	// #8
  42fa30:	stur	x0, [x29, #-16]
  42fa34:	stur	x1, [x29, #-24]
  42fa38:	str	x2, [sp, #32]
  42fa3c:	str	x3, [sp, #24]
  42fa40:	str	x4, [sp, #16]
  42fa44:	ldur	x0, [x29, #-16]
  42fa48:	ldr	x8, [sp, #32]
  42fa4c:	add	x1, x8, #0x10
  42fa50:	ldr	x8, [sp, #32]
  42fa54:	ldr	x2, [x8]
  42fa58:	ldr	x8, [sp, #32]
  42fa5c:	ldr	x3, [x8, #8]
  42fa60:	ldr	x4, [sp, #24]
  42fa64:	ldr	x5, [sp, #16]
  42fa68:	bl	42fbc8 <_obstack_memory_used@@Base+0x11a2c>
  42fa6c:	str	w0, [sp, #12]
  42fa70:	ldr	w9, [sp, #12]
  42fa74:	cbz	w9, 42fa84 <_obstack_memory_used@@Base+0x118e8>
  42fa78:	ldr	w8, [sp, #12]
  42fa7c:	stur	w8, [x29, #-4]
  42fa80:	b	42fb00 <_obstack_memory_used@@Base+0x11964>
  42fa84:	ldur	x0, [x29, #-16]
  42fa88:	ldr	x1, [sp, #24]
  42fa8c:	ldr	x2, [sp, #16]
  42fa90:	ldur	x8, [x29, #-24]
  42fa94:	ldr	x3, [x8]
  42fa98:	ldr	x8, [sp, #32]
  42fa9c:	ldr	x4, [x8, #8]
  42faa0:	bl	4304d8 <_obstack_memory_used@@Base+0x1233c>
  42faa4:	str	w0, [sp, #12]
  42faa8:	ldr	w9, [sp, #12]
  42faac:	cmp	w9, #0x0
  42fab0:	cset	w9, ne  // ne = any
  42fab4:	and	w9, w9, #0x1
  42fab8:	mov	w1, w9
  42fabc:	sxtw	x8, w1
  42fac0:	cbz	x8, 42fad0 <_obstack_memory_used@@Base+0x11934>
  42fac4:	ldr	w8, [sp, #12]
  42fac8:	stur	w8, [x29, #-4]
  42facc:	b	42fb00 <_obstack_memory_used@@Base+0x11964>
  42fad0:	ldr	x8, [sp, #16]
  42fad4:	ldr	x9, [sp, #32]
  42fad8:	ldr	x9, [x9, #8]
  42fadc:	add	x8, x8, x9
  42fae0:	ldur	x9, [x29, #-24]
  42fae4:	ldr	x9, [x9]
  42fae8:	subs	x8, x8, x9
  42faec:	str	x8, [sp]
  42faf0:	ldur	x0, [x29, #-16]
  42faf4:	ldr	x1, [sp]
  42faf8:	bl	42f8fc <_obstack_memory_used@@Base+0x11760>
  42fafc:	stur	w0, [x29, #-4]
  42fb00:	ldur	w0, [x29, #-4]
  42fb04:	ldp	x29, x30, [sp, #64]
  42fb08:	add	sp, sp, #0x50
  42fb0c:	ret
  42fb10:	sub	sp, sp, #0x40
  42fb14:	str	x0, [sp, #48]
  42fb18:	str	x1, [sp, #40]
  42fb1c:	str	x2, [sp, #32]
  42fb20:	str	w3, [sp, #28]
  42fb24:	str	xzr, [sp, #16]
  42fb28:	ldr	x8, [sp, #16]
  42fb2c:	ldr	x9, [sp, #40]
  42fb30:	ldr	x9, [x9, #8]
  42fb34:	cmp	x8, x9
  42fb38:	b.ge	42fbb4 <_obstack_memory_used@@Base+0x11a18>  // b.tcont
  42fb3c:	ldr	x8, [sp, #40]
  42fb40:	mov	x9, #0x10                  	// #16
  42fb44:	ldr	x8, [x8, #16]
  42fb48:	ldr	x10, [sp, #16]
  42fb4c:	ldr	x8, [x8, x10, lsl #3]
  42fb50:	str	x8, [sp, #8]
  42fb54:	ldr	x8, [sp, #48]
  42fb58:	ldr	x8, [x8]
  42fb5c:	ldr	x10, [sp, #8]
  42fb60:	mul	x9, x9, x10
  42fb64:	add	x8, x8, x9
  42fb68:	str	x8, [sp]
  42fb6c:	ldr	x8, [sp]
  42fb70:	ldr	w11, [x8, #8]
  42fb74:	and	w11, w11, #0xff
  42fb78:	ldr	w12, [sp, #28]
  42fb7c:	cmp	w11, w12
  42fb80:	b.ne	42fba4 <_obstack_memory_used@@Base+0x11a08>  // b.any
  42fb84:	ldr	x8, [sp]
  42fb88:	ldr	x8, [x8]
  42fb8c:	ldr	x9, [sp, #32]
  42fb90:	cmp	x8, x9
  42fb94:	b.ne	42fba4 <_obstack_memory_used@@Base+0x11a08>  // b.any
  42fb98:	ldr	x8, [sp, #8]
  42fb9c:	str	x8, [sp, #56]
  42fba0:	b	42fbbc <_obstack_memory_used@@Base+0x11a20>
  42fba4:	ldr	x8, [sp, #16]
  42fba8:	add	x8, x8, #0x1
  42fbac:	str	x8, [sp, #16]
  42fbb0:	b	42fb28 <_obstack_memory_used@@Base+0x1198c>
  42fbb4:	mov	x8, #0xffffffffffffffff    	// #-1
  42fbb8:	str	x8, [sp, #56]
  42fbbc:	ldr	x0, [sp, #56]
  42fbc0:	add	sp, sp, #0x40
  42fbc4:	ret
  42fbc8:	sub	sp, sp, #0x100
  42fbcc:	stp	x29, x30, [sp, #240]
  42fbd0:	add	x29, sp, #0xf0
  42fbd4:	mov	x8, xzr
  42fbd8:	stur	x0, [x29, #-16]
  42fbdc:	stur	x1, [x29, #-24]
  42fbe0:	stur	x2, [x29, #-32]
  42fbe4:	stur	x3, [x29, #-40]
  42fbe8:	stur	x4, [x29, #-48]
  42fbec:	stur	x5, [x29, #-56]
  42fbf0:	stur	w6, [x29, #-60]
  42fbf4:	ldur	x9, [x29, #-16]
  42fbf8:	ldr	x9, [x9, #152]
  42fbfc:	stur	x9, [x29, #-72]
  42fc00:	stur	wzr, [x29, #-76]
  42fc04:	str	x8, [sp, #120]
  42fc08:	ldur	x8, [x29, #-72]
  42fc0c:	ldr	x8, [x8]
  42fc10:	ldur	x9, [x29, #-32]
  42fc14:	mov	x10, #0x10                  	// #16
  42fc18:	mul	x9, x10, x9
  42fc1c:	ldr	x8, [x8, x9]
  42fc20:	stur	x8, [x29, #-88]
  42fc24:	ldur	x8, [x29, #-24]
  42fc28:	ldr	x8, [x8, #8]
  42fc2c:	ldur	x9, [x29, #-56]
  42fc30:	ldur	x10, [x29, #-16]
  42fc34:	ldrsw	x10, [x10, #224]
  42fc38:	add	x9, x9, x10
  42fc3c:	add	x9, x9, #0x1
  42fc40:	cmp	x8, x9
  42fc44:	cset	w11, lt  // lt = tstop
  42fc48:	and	w11, w11, #0x1
  42fc4c:	mov	w0, w11
  42fc50:	sxtw	x8, w0
  42fc54:	cbz	x8, 42fd80 <_obstack_memory_used@@Base+0x11be4>
  42fc58:	ldur	x8, [x29, #-24]
  42fc5c:	ldr	x8, [x8, #8]
  42fc60:	str	x8, [sp, #56]
  42fc64:	ldur	x8, [x29, #-56]
  42fc68:	ldur	x9, [x29, #-16]
  42fc6c:	ldrsw	x9, [x9, #224]
  42fc70:	add	x8, x8, x9
  42fc74:	add	x8, x8, #0x1
  42fc78:	str	x8, [sp, #48]
  42fc7c:	ldr	x8, [sp, #56]
  42fc80:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  42fc84:	subs	x8, x9, x8
  42fc88:	ldr	x9, [sp, #48]
  42fc8c:	cmp	x8, x9
  42fc90:	cset	w10, lt  // lt = tstop
  42fc94:	and	w10, w10, #0x1
  42fc98:	mov	w0, w10
  42fc9c:	sxtw	x8, w0
  42fca0:	cbz	x8, 42fcb0 <_obstack_memory_used@@Base+0x11b14>
  42fca4:	mov	w8, #0xc                   	// #12
  42fca8:	stur	w8, [x29, #-4]
  42fcac:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42fcb0:	ldr	x8, [sp, #56]
  42fcb4:	ldr	x9, [sp, #48]
  42fcb8:	add	x8, x8, x9
  42fcbc:	str	x8, [sp, #40]
  42fcc0:	ldr	x8, [sp, #40]
  42fcc4:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  42fcc8:	cmp	x9, x8
  42fccc:	cset	w10, cc  // cc = lo, ul, last
  42fcd0:	and	w10, w10, #0x1
  42fcd4:	mov	w0, w10
  42fcd8:	sxtw	x8, w0
  42fcdc:	cbz	x8, 42fcec <_obstack_memory_used@@Base+0x11b50>
  42fce0:	mov	w8, #0xc                   	// #12
  42fce4:	stur	w8, [x29, #-4]
  42fce8:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42fcec:	ldur	x8, [x29, #-24]
  42fcf0:	ldr	x0, [x8, #16]
  42fcf4:	ldr	x8, [sp, #40]
  42fcf8:	mov	x9, #0x8                   	// #8
  42fcfc:	mul	x1, x8, x9
  42fd00:	bl	4029c0 <realloc@plt>
  42fd04:	str	x0, [sp, #64]
  42fd08:	ldr	x8, [sp, #64]
  42fd0c:	cmp	x8, #0x0
  42fd10:	cset	w10, eq  // eq = none
  42fd14:	and	w10, w10, #0x1
  42fd18:	mov	w0, w10
  42fd1c:	sxtw	x8, w0
  42fd20:	cbz	x8, 42fd30 <_obstack_memory_used@@Base+0x11b94>
  42fd24:	mov	w8, #0xc                   	// #12
  42fd28:	stur	w8, [x29, #-4]
  42fd2c:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42fd30:	ldr	x8, [sp, #64]
  42fd34:	ldur	x9, [x29, #-24]
  42fd38:	str	x8, [x9, #16]
  42fd3c:	ldr	x8, [sp, #40]
  42fd40:	ldur	x9, [x29, #-24]
  42fd44:	mov	x10, #0x8                   	// #8
  42fd48:	str	x8, [x9, #8]
  42fd4c:	ldr	x8, [sp, #64]
  42fd50:	ldr	x9, [sp, #56]
  42fd54:	mul	x9, x10, x9
  42fd58:	add	x0, x8, x9
  42fd5c:	ldur	x8, [x29, #-24]
  42fd60:	ldr	x8, [x8, #8]
  42fd64:	ldr	x9, [sp, #56]
  42fd68:	subs	x8, x8, x9
  42fd6c:	mov	x9, #0x8                   	// #8
  42fd70:	mul	x2, x9, x8
  42fd74:	mov	w11, wzr
  42fd78:	mov	w1, w11
  42fd7c:	bl	402960 <memset@plt>
  42fd80:	ldur	x8, [x29, #-24]
  42fd84:	ldr	x8, [x8]
  42fd88:	cbz	x8, 42fd9c <_obstack_memory_used@@Base+0x11c00>
  42fd8c:	ldur	x8, [x29, #-24]
  42fd90:	ldr	x8, [x8]
  42fd94:	str	x8, [sp, #32]
  42fd98:	b	42fda4 <_obstack_memory_used@@Base+0x11c08>
  42fd9c:	ldur	x8, [x29, #-40]
  42fda0:	str	x8, [sp, #32]
  42fda4:	ldr	x8, [sp, #32]
  42fda8:	stur	x8, [x29, #-104]
  42fdac:	ldur	x8, [x29, #-16]
  42fdb0:	ldr	x8, [x8, #184]
  42fdb4:	str	x8, [sp, #80]
  42fdb8:	ldur	x8, [x29, #-16]
  42fdbc:	ldr	x8, [x8, #72]
  42fdc0:	stur	x8, [x29, #-96]
  42fdc4:	ldur	x8, [x29, #-24]
  42fdc8:	ldr	x8, [x8, #16]
  42fdcc:	ldur	x9, [x29, #-16]
  42fdd0:	str	x8, [x9, #184]
  42fdd4:	ldur	x8, [x29, #-104]
  42fdd8:	ldur	x9, [x29, #-16]
  42fddc:	str	x8, [x9, #72]
  42fde0:	ldur	x0, [x29, #-16]
  42fde4:	ldur	x8, [x29, #-104]
  42fde8:	subs	x1, x8, #0x1
  42fdec:	ldur	x8, [x29, #-16]
  42fdf0:	ldr	w2, [x8, #160]
  42fdf4:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  42fdf8:	str	w0, [sp, #76]
  42fdfc:	ldur	x8, [x29, #-104]
  42fe00:	ldur	x9, [x29, #-40]
  42fe04:	cmp	x8, x9
  42fe08:	b.ne	42fe94 <_obstack_memory_used@@Base+0x11cf8>  // b.any
  42fe0c:	ldur	x1, [x29, #-32]
  42fe10:	add	x0, sp, #0x58
  42fe14:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  42fe18:	stur	w0, [x29, #-76]
  42fe1c:	ldur	w8, [x29, #-76]
  42fe20:	cmp	w8, #0x0
  42fe24:	cset	w8, ne  // ne = any
  42fe28:	and	w8, w8, #0x1
  42fe2c:	mov	w1, w8
  42fe30:	sxtw	x9, w1
  42fe34:	cbz	x9, 42fe44 <_obstack_memory_used@@Base+0x11ca8>
  42fe38:	ldur	w8, [x29, #-76]
  42fe3c:	stur	w8, [x29, #-4]
  42fe40:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42fe44:	ldur	x0, [x29, #-72]
  42fe48:	ldur	x2, [x29, #-88]
  42fe4c:	ldur	w3, [x29, #-60]
  42fe50:	add	x1, sp, #0x58
  42fe54:	bl	430750 <_obstack_memory_used@@Base+0x125b4>
  42fe58:	stur	w0, [x29, #-76]
  42fe5c:	ldur	w8, [x29, #-76]
  42fe60:	cmp	w8, #0x0
  42fe64:	cset	w8, ne  // ne = any
  42fe68:	and	w8, w8, #0x1
  42fe6c:	mov	w1, w8
  42fe70:	sxtw	x9, w1
  42fe74:	cbz	x9, 42fe90 <_obstack_memory_used@@Base+0x11cf4>
  42fe78:	add	x8, sp, #0x58
  42fe7c:	ldr	x0, [x8, #16]
  42fe80:	bl	402b40 <free@plt>
  42fe84:	ldur	w9, [x29, #-76]
  42fe88:	stur	w9, [x29, #-4]
  42fe8c:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42fe90:	b	42ff24 <_obstack_memory_used@@Base+0x11d88>
  42fe94:	ldur	x8, [x29, #-16]
  42fe98:	ldr	x8, [x8, #184]
  42fe9c:	ldur	x9, [x29, #-104]
  42fea0:	mov	x10, #0x8                   	// #8
  42fea4:	mul	x9, x10, x9
  42fea8:	add	x8, x8, x9
  42feac:	ldr	x8, [x8]
  42feb0:	str	x8, [sp, #120]
  42feb4:	ldr	x8, [sp, #120]
  42feb8:	cbz	x8, 42ff18 <_obstack_memory_used@@Base+0x11d7c>
  42febc:	ldr	x8, [sp, #120]
  42fec0:	ldrb	w9, [x8, #104]
  42fec4:	mov	w10, #0x6                   	// #6
  42fec8:	lsr	w9, w9, w10
  42fecc:	and	w9, w9, #0x1
  42fed0:	and	w9, w9, #0xff
  42fed4:	cbz	w9, 42ff18 <_obstack_memory_used@@Base+0x11d7c>
  42fed8:	ldr	x8, [sp, #120]
  42fedc:	add	x1, x8, #0x8
  42fee0:	add	x0, sp, #0x58
  42fee4:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  42fee8:	stur	w0, [x29, #-76]
  42feec:	ldur	w9, [x29, #-76]
  42fef0:	cmp	w9, #0x0
  42fef4:	cset	w9, ne  // ne = any
  42fef8:	and	w9, w9, #0x1
  42fefc:	mov	w1, w9
  42ff00:	sxtw	x8, w1
  42ff04:	cbz	x8, 42ff14 <_obstack_memory_used@@Base+0x11d78>
  42ff08:	ldur	w8, [x29, #-76]
  42ff0c:	stur	w8, [x29, #-4]
  42ff10:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42ff14:	b	42ff24 <_obstack_memory_used@@Base+0x11d88>
  42ff18:	str	xzr, [sp, #88]
  42ff1c:	str	xzr, [sp, #96]
  42ff20:	str	xzr, [sp, #104]
  42ff24:	ldur	x8, [x29, #-104]
  42ff28:	ldur	x9, [x29, #-40]
  42ff2c:	cmp	x8, x9
  42ff30:	b.eq	42ff58 <_obstack_memory_used@@Base+0x11dbc>  // b.none
  42ff34:	ldr	x8, [sp, #120]
  42ff38:	cbz	x8, 430034 <_obstack_memory_used@@Base+0x11e98>
  42ff3c:	ldr	x8, [sp, #120]
  42ff40:	ldrb	w9, [x8, #104]
  42ff44:	mov	w10, #0x6                   	// #6
  42ff48:	lsr	w9, w9, w10
  42ff4c:	and	w9, w9, #0x1
  42ff50:	and	w9, w9, #0xff
  42ff54:	cbz	w9, 430034 <_obstack_memory_used@@Base+0x11e98>
  42ff58:	ldr	x8, [sp, #96]
  42ff5c:	cbz	x8, 42ffb0 <_obstack_memory_used@@Base+0x11e14>
  42ff60:	ldur	x0, [x29, #-16]
  42ff64:	ldur	x2, [x29, #-104]
  42ff68:	ldur	x3, [x29, #-88]
  42ff6c:	ldur	w4, [x29, #-60]
  42ff70:	add	x1, sp, #0x58
  42ff74:	bl	430904 <_obstack_memory_used@@Base+0x12768>
  42ff78:	stur	w0, [x29, #-76]
  42ff7c:	ldur	w8, [x29, #-76]
  42ff80:	cmp	w8, #0x0
  42ff84:	cset	w8, ne  // ne = any
  42ff88:	and	w8, w8, #0x1
  42ff8c:	mov	w1, w8
  42ff90:	sxtw	x9, w1
  42ff94:	cbz	x9, 42ffb0 <_obstack_memory_used@@Base+0x11e14>
  42ff98:	add	x8, sp, #0x58
  42ff9c:	ldr	x0, [x8, #16]
  42ffa0:	bl	402b40 <free@plt>
  42ffa4:	ldur	w9, [x29, #-76]
  42ffa8:	stur	w9, [x29, #-4]
  42ffac:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  42ffb0:	ldur	x1, [x29, #-72]
  42ffb4:	ldr	w3, [sp, #76]
  42ffb8:	sub	x0, x29, #0x4c
  42ffbc:	add	x2, sp, #0x58
  42ffc0:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  42ffc4:	str	x0, [sp, #120]
  42ffc8:	ldr	x8, [sp, #120]
  42ffcc:	mov	w9, #0x0                   	// #0
  42ffd0:	str	w9, [sp, #28]
  42ffd4:	cbnz	x8, 42ffe8 <_obstack_memory_used@@Base+0x11e4c>
  42ffd8:	ldur	w8, [x29, #-76]
  42ffdc:	cmp	w8, #0x0
  42ffe0:	cset	w8, ne  // ne = any
  42ffe4:	str	w8, [sp, #28]
  42ffe8:	ldr	w8, [sp, #28]
  42ffec:	and	w8, w8, #0x1
  42fff0:	mov	w0, w8
  42fff4:	sxtw	x9, w0
  42fff8:	cbz	x9, 430014 <_obstack_memory_used@@Base+0x11e78>
  42fffc:	add	x8, sp, #0x58
  430000:	ldr	x0, [x8, #16]
  430004:	bl	402b40 <free@plt>
  430008:	ldur	w9, [x29, #-76]
  43000c:	stur	w9, [x29, #-4]
  430010:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  430014:	ldr	x8, [sp, #120]
  430018:	ldur	x9, [x29, #-16]
  43001c:	ldr	x9, [x9, #184]
  430020:	ldur	x10, [x29, #-104]
  430024:	mov	x11, #0x8                   	// #8
  430028:	mul	x10, x11, x10
  43002c:	add	x9, x9, x10
  430030:	str	x8, [x9]
  430034:	stur	xzr, [x29, #-112]
  430038:	ldur	x8, [x29, #-104]
  43003c:	ldur	x9, [x29, #-56]
  430040:	mov	w10, #0x0                   	// #0
  430044:	cmp	x8, x9
  430048:	str	w10, [sp, #24]
  43004c:	b.ge	430068 <_obstack_memory_used@@Base+0x11ecc>  // b.tcont
  430050:	ldur	x8, [x29, #-112]
  430054:	ldur	x9, [x29, #-16]
  430058:	ldrsw	x9, [x9, #224]
  43005c:	cmp	x8, x9
  430060:	cset	w10, le
  430064:	str	w10, [sp, #24]
  430068:	ldr	w8, [sp, #24]
  43006c:	tbnz	w8, #0, 430074 <_obstack_memory_used@@Base+0x11ed8>
  430070:	b	4302d4 <_obstack_memory_used@@Base+0x12138>
  430074:	mov	x8, #0x8                   	// #8
  430078:	str	xzr, [sp, #96]
  43007c:	ldur	x9, [x29, #-16]
  430080:	ldr	x9, [x9, #184]
  430084:	ldur	x10, [x29, #-104]
  430088:	add	x10, x10, #0x1
  43008c:	mul	x8, x8, x10
  430090:	add	x8, x9, x8
  430094:	ldr	x8, [x8]
  430098:	cbz	x8, 430100 <_obstack_memory_used@@Base+0x11f64>
  43009c:	ldur	x8, [x29, #-16]
  4300a0:	ldr	x8, [x8, #184]
  4300a4:	ldur	x9, [x29, #-104]
  4300a8:	add	x9, x9, #0x1
  4300ac:	mov	x10, #0x8                   	// #8
  4300b0:	mul	x9, x10, x9
  4300b4:	add	x8, x8, x9
  4300b8:	ldr	x8, [x8]
  4300bc:	add	x1, x8, #0x8
  4300c0:	add	x0, sp, #0x58
  4300c4:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  4300c8:	stur	w0, [x29, #-76]
  4300cc:	ldur	w11, [x29, #-76]
  4300d0:	cmp	w11, #0x0
  4300d4:	cset	w11, ne  // ne = any
  4300d8:	and	w11, w11, #0x1
  4300dc:	mov	w1, w11
  4300e0:	sxtw	x8, w1
  4300e4:	cbz	x8, 430100 <_obstack_memory_used@@Base+0x11f64>
  4300e8:	add	x8, sp, #0x58
  4300ec:	ldr	x0, [x8, #16]
  4300f0:	bl	402b40 <free@plt>
  4300f4:	ldur	w9, [x29, #-76]
  4300f8:	stur	w9, [x29, #-4]
  4300fc:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  430100:	ldr	x8, [sp, #120]
  430104:	cbz	x8, 430158 <_obstack_memory_used@@Base+0x11fbc>
  430108:	ldur	x0, [x29, #-16]
  43010c:	ldur	x1, [x29, #-104]
  430110:	ldr	x8, [sp, #120]
  430114:	add	x2, x8, #0x20
  430118:	add	x3, sp, #0x58
  43011c:	bl	430d44 <_obstack_memory_used@@Base+0x12ba8>
  430120:	stur	w0, [x29, #-76]
  430124:	ldur	w9, [x29, #-76]
  430128:	cmp	w9, #0x0
  43012c:	cset	w9, ne  // ne = any
  430130:	and	w9, w9, #0x1
  430134:	mov	w1, w9
  430138:	sxtw	x8, w1
  43013c:	cbz	x8, 430158 <_obstack_memory_used@@Base+0x11fbc>
  430140:	add	x8, sp, #0x58
  430144:	ldr	x0, [x8, #16]
  430148:	bl	402b40 <free@plt>
  43014c:	ldur	w9, [x29, #-76]
  430150:	stur	w9, [x29, #-4]
  430154:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  430158:	ldur	x8, [x29, #-104]
  43015c:	add	x8, x8, #0x1
  430160:	stur	x8, [x29, #-104]
  430164:	ldr	x8, [sp, #96]
  430168:	cbz	x8, 430208 <_obstack_memory_used@@Base+0x1206c>
  43016c:	ldur	x0, [x29, #-72]
  430170:	ldur	x2, [x29, #-88]
  430174:	ldur	w3, [x29, #-60]
  430178:	add	x1, sp, #0x58
  43017c:	bl	430750 <_obstack_memory_used@@Base+0x125b4>
  430180:	stur	w0, [x29, #-76]
  430184:	ldur	w8, [x29, #-76]
  430188:	cmp	w8, #0x0
  43018c:	cset	w8, ne  // ne = any
  430190:	and	w8, w8, #0x1
  430194:	mov	w1, w8
  430198:	sxtw	x9, w1
  43019c:	cbz	x9, 4301b8 <_obstack_memory_used@@Base+0x1201c>
  4301a0:	add	x8, sp, #0x58
  4301a4:	ldr	x0, [x8, #16]
  4301a8:	bl	402b40 <free@plt>
  4301ac:	ldur	w9, [x29, #-76]
  4301b0:	stur	w9, [x29, #-4]
  4301b4:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  4301b8:	ldur	x0, [x29, #-16]
  4301bc:	ldur	x2, [x29, #-104]
  4301c0:	ldur	x3, [x29, #-88]
  4301c4:	ldur	w4, [x29, #-60]
  4301c8:	add	x1, sp, #0x58
  4301cc:	bl	430904 <_obstack_memory_used@@Base+0x12768>
  4301d0:	stur	w0, [x29, #-76]
  4301d4:	ldur	w8, [x29, #-76]
  4301d8:	cmp	w8, #0x0
  4301dc:	cset	w8, ne  // ne = any
  4301e0:	and	w8, w8, #0x1
  4301e4:	mov	w1, w8
  4301e8:	sxtw	x9, w1
  4301ec:	cbz	x9, 430208 <_obstack_memory_used@@Base+0x1206c>
  4301f0:	add	x8, sp, #0x58
  4301f4:	ldr	x0, [x8, #16]
  4301f8:	bl	402b40 <free@plt>
  4301fc:	ldur	w9, [x29, #-76]
  430200:	stur	w9, [x29, #-4]
  430204:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  430208:	ldur	x0, [x29, #-16]
  43020c:	ldur	x8, [x29, #-104]
  430210:	subs	x1, x8, #0x1
  430214:	ldur	x8, [x29, #-16]
  430218:	ldr	w2, [x8, #160]
  43021c:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  430220:	str	w0, [sp, #76]
  430224:	ldur	x1, [x29, #-72]
  430228:	ldr	w3, [sp, #76]
  43022c:	sub	x0, x29, #0x4c
  430230:	add	x2, sp, #0x58
  430234:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  430238:	str	x0, [sp, #120]
  43023c:	ldr	x8, [sp, #120]
  430240:	mov	w9, #0x0                   	// #0
  430244:	str	w9, [sp, #20]
  430248:	cbnz	x8, 43025c <_obstack_memory_used@@Base+0x120c0>
  43024c:	ldur	w8, [x29, #-76]
  430250:	cmp	w8, #0x0
  430254:	cset	w8, ne  // ne = any
  430258:	str	w8, [sp, #20]
  43025c:	ldr	w8, [sp, #20]
  430260:	and	w8, w8, #0x1
  430264:	mov	w0, w8
  430268:	sxtw	x9, w0
  43026c:	cbz	x9, 430288 <_obstack_memory_used@@Base+0x120ec>
  430270:	add	x8, sp, #0x58
  430274:	ldr	x0, [x8, #16]
  430278:	bl	402b40 <free@plt>
  43027c:	ldur	w9, [x29, #-76]
  430280:	stur	w9, [x29, #-4]
  430284:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  430288:	ldr	x8, [sp, #120]
  43028c:	ldur	x9, [x29, #-16]
  430290:	ldr	x9, [x9, #184]
  430294:	ldur	x10, [x29, #-104]
  430298:	mov	x11, #0x8                   	// #8
  43029c:	mul	x10, x11, x10
  4302a0:	add	x9, x9, x10
  4302a4:	str	x8, [x9]
  4302a8:	ldr	x8, [sp, #120]
  4302ac:	cbnz	x8, 4302c0 <_obstack_memory_used@@Base+0x12124>
  4302b0:	ldur	x8, [x29, #-112]
  4302b4:	add	x8, x8, #0x1
  4302b8:	str	x8, [sp, #8]
  4302bc:	b	4302c8 <_obstack_memory_used@@Base+0x1212c>
  4302c0:	mov	x8, xzr
  4302c4:	str	x8, [sp, #8]
  4302c8:	ldr	x8, [sp, #8]
  4302cc:	stur	x8, [x29, #-112]
  4302d0:	b	430038 <_obstack_memory_used@@Base+0x11e9c>
  4302d4:	add	x8, sp, #0x58
  4302d8:	ldr	x0, [x8, #16]
  4302dc:	bl	402b40 <free@plt>
  4302e0:	ldur	x8, [x29, #-16]
  4302e4:	ldr	x8, [x8, #184]
  4302e8:	ldur	x9, [x29, #-56]
  4302ec:	mov	x10, #0x8                   	// #8
  4302f0:	mul	x9, x10, x9
  4302f4:	add	x8, x8, x9
  4302f8:	ldr	x8, [x8]
  4302fc:	cbnz	x8, 43030c <_obstack_memory_used@@Base+0x12170>
  430300:	mov	x8, xzr
  430304:	str	x8, [sp]
  430308:	b	430330 <_obstack_memory_used@@Base+0x12194>
  43030c:	ldur	x8, [x29, #-16]
  430310:	ldr	x8, [x8, #184]
  430314:	ldur	x9, [x29, #-56]
  430318:	mov	x10, #0x8                   	// #8
  43031c:	mul	x9, x10, x9
  430320:	add	x8, x8, x9
  430324:	ldr	x8, [x8]
  430328:	add	x8, x8, #0x8
  43032c:	str	x8, [sp]
  430330:	ldr	x8, [sp]
  430334:	str	x8, [sp, #112]
  430338:	ldur	x8, [x29, #-104]
  43033c:	ldur	x9, [x29, #-24]
  430340:	str	x8, [x9]
  430344:	ldr	x8, [sp, #80]
  430348:	ldur	x9, [x29, #-16]
  43034c:	str	x8, [x9, #184]
  430350:	ldur	x8, [x29, #-96]
  430354:	ldur	x9, [x29, #-16]
  430358:	str	x8, [x9, #72]
  43035c:	ldr	x8, [sp, #112]
  430360:	cbz	x8, 43037c <_obstack_memory_used@@Base+0x121e0>
  430364:	ldr	x0, [sp, #112]
  430368:	ldur	x1, [x29, #-48]
  43036c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  430370:	cbz	x0, 43037c <_obstack_memory_used@@Base+0x121e0>
  430374:	stur	wzr, [x29, #-4]
  430378:	b	430384 <_obstack_memory_used@@Base+0x121e8>
  43037c:	mov	w8, #0x1                   	// #1
  430380:	stur	w8, [x29, #-4]
  430384:	ldur	w0, [x29, #-4]
  430388:	ldp	x29, x30, [sp, #240]
  43038c:	add	sp, sp, #0x100
  430390:	ret
  430394:	sub	sp, sp, #0x50
  430398:	stp	x29, x30, [sp, #64]
  43039c:	add	x29, sp, #0x40
  4303a0:	stur	x0, [x29, #-16]
  4303a4:	stur	x1, [x29, #-24]
  4303a8:	str	x2, [sp, #32]
  4303ac:	ldur	x8, [x29, #-16]
  4303b0:	ldr	x8, [x8, #32]
  4303b4:	ldur	x9, [x29, #-16]
  4303b8:	ldr	x9, [x9, #24]
  4303bc:	cmp	x8, x9
  4303c0:	cset	w10, eq  // eq = none
  4303c4:	and	w10, w10, #0x1
  4303c8:	mov	w0, w10
  4303cc:	sxtw	x8, w0
  4303d0:	cbz	x8, 430448 <_obstack_memory_used@@Base+0x122ac>
  4303d4:	ldur	x8, [x29, #-16]
  4303d8:	ldr	x8, [x8, #24]
  4303dc:	mov	x9, #0x2                   	// #2
  4303e0:	mul	x8, x9, x8
  4303e4:	add	x8, x8, #0x1
  4303e8:	str	x8, [sp, #16]
  4303ec:	ldur	x8, [x29, #-16]
  4303f0:	ldr	x0, [x8, #40]
  4303f4:	ldr	x8, [sp, #16]
  4303f8:	mov	x9, #0x8                   	// #8
  4303fc:	mul	x1, x8, x9
  430400:	bl	4029c0 <realloc@plt>
  430404:	str	x0, [sp, #8]
  430408:	ldr	x8, [sp, #8]
  43040c:	cmp	x8, #0x0
  430410:	cset	w10, eq  // eq = none
  430414:	and	w10, w10, #0x1
  430418:	mov	w0, w10
  43041c:	sxtw	x8, w0
  430420:	cbz	x8, 430430 <_obstack_memory_used@@Base+0x12294>
  430424:	mov	x8, xzr
  430428:	stur	x8, [x29, #-8]
  43042c:	b	4304c8 <_obstack_memory_used@@Base+0x1232c>
  430430:	ldr	x8, [sp, #8]
  430434:	ldur	x9, [x29, #-16]
  430438:	str	x8, [x9, #40]
  43043c:	ldr	x8, [sp, #16]
  430440:	ldur	x9, [x29, #-16]
  430444:	str	x8, [x9, #24]
  430448:	mov	x0, #0x1                   	// #1
  43044c:	mov	x1, #0x28                  	// #40
  430450:	bl	4029a0 <calloc@plt>
  430454:	str	x0, [sp, #24]
  430458:	ldr	x8, [sp, #24]
  43045c:	cmp	x8, #0x0
  430460:	cset	w9, ne  // ne = any
  430464:	and	w9, w9, #0x1
  430468:	mov	w0, w9
  43046c:	sxtw	x8, w0
  430470:	cbz	x8, 4304c0 <_obstack_memory_used@@Base+0x12324>
  430474:	ldr	x8, [sp, #24]
  430478:	ldur	x9, [x29, #-16]
  43047c:	ldr	x9, [x9, #40]
  430480:	ldur	x10, [x29, #-16]
  430484:	ldr	x10, [x10, #32]
  430488:	mov	x11, #0x8                   	// #8
  43048c:	mul	x10, x11, x10
  430490:	add	x9, x9, x10
  430494:	str	x8, [x9]
  430498:	ldur	x8, [x29, #-24]
  43049c:	ldr	x9, [sp, #24]
  4304a0:	str	x8, [x9]
  4304a4:	ldr	x8, [sp, #32]
  4304a8:	ldr	x9, [sp, #24]
  4304ac:	str	x8, [x9, #8]
  4304b0:	ldur	x8, [x29, #-16]
  4304b4:	ldr	x9, [x8, #32]
  4304b8:	add	x9, x9, #0x1
  4304bc:	str	x9, [x8, #32]
  4304c0:	ldr	x8, [sp, #24]
  4304c4:	stur	x8, [x29, #-8]
  4304c8:	ldur	x0, [x29, #-8]
  4304cc:	ldp	x29, x30, [sp, #64]
  4304d0:	add	sp, sp, #0x50
  4304d4:	ret
  4304d8:	sub	sp, sp, #0x50
  4304dc:	stp	x29, x30, [sp, #64]
  4304e0:	add	x29, sp, #0x40
  4304e4:	stur	x0, [x29, #-16]
  4304e8:	stur	x1, [x29, #-24]
  4304ec:	str	x2, [sp, #32]
  4304f0:	str	x3, [sp, #24]
  4304f4:	str	x4, [sp, #16]
  4304f8:	ldur	x8, [x29, #-16]
  4304fc:	ldr	x8, [x8, #200]
  430500:	ldur	x9, [x29, #-16]
  430504:	ldr	x9, [x9, #208]
  430508:	cmp	x8, x9
  43050c:	b.lt	4305c4 <_obstack_memory_used@@Base+0x12428>  // b.tstop
  430510:	ldur	x8, [x29, #-16]
  430514:	ldr	x0, [x8, #216]
  430518:	ldur	x8, [x29, #-16]
  43051c:	ldr	x8, [x8, #208]
  430520:	mov	x9, #0x2                   	// #2
  430524:	mul	x8, x8, x9
  430528:	mov	x9, #0x28                  	// #40
  43052c:	mul	x1, x8, x9
  430530:	bl	4029c0 <realloc@plt>
  430534:	str	x0, [sp, #8]
  430538:	ldr	x8, [sp, #8]
  43053c:	cmp	x8, #0x0
  430540:	cset	w10, eq  // eq = none
  430544:	and	w10, w10, #0x1
  430548:	mov	w0, w10
  43054c:	sxtw	x8, w0
  430550:	cbz	x8, 43056c <_obstack_memory_used@@Base+0x123d0>
  430554:	ldur	x8, [x29, #-16]
  430558:	ldr	x0, [x8, #216]
  43055c:	bl	402b40 <free@plt>
  430560:	mov	w9, #0xc                   	// #12
  430564:	stur	w9, [x29, #-4]
  430568:	b	430740 <_obstack_memory_used@@Base+0x125a4>
  43056c:	ldr	x8, [sp, #8]
  430570:	ldur	x9, [x29, #-16]
  430574:	str	x8, [x9, #216]
  430578:	ldur	x8, [x29, #-16]
  43057c:	ldr	x8, [x8, #216]
  430580:	ldur	x9, [x29, #-16]
  430584:	ldr	x9, [x9, #200]
  430588:	mov	x10, #0x28                  	// #40
  43058c:	mul	x9, x10, x9
  430590:	add	x0, x8, x9
  430594:	ldur	x8, [x29, #-16]
  430598:	ldr	x8, [x8, #208]
  43059c:	mov	x9, #0x28                  	// #40
  4305a0:	mul	x2, x9, x8
  4305a4:	mov	w11, wzr
  4305a8:	mov	w1, w11
  4305ac:	bl	402960 <memset@plt>
  4305b0:	ldur	x8, [x29, #-16]
  4305b4:	ldr	x9, [x8, #208]
  4305b8:	mov	x10, #0x2                   	// #2
  4305bc:	mul	x9, x9, x10
  4305c0:	str	x9, [x8, #208]
  4305c4:	ldur	x8, [x29, #-16]
  4305c8:	ldr	x8, [x8, #200]
  4305cc:	cmp	x8, #0x0
  4305d0:	cset	w9, le
  4305d4:	tbnz	w9, #0, 430630 <_obstack_memory_used@@Base+0x12494>
  4305d8:	ldur	x8, [x29, #-16]
  4305dc:	ldr	x8, [x8, #216]
  4305e0:	ldur	x9, [x29, #-16]
  4305e4:	ldr	x9, [x9, #200]
  4305e8:	subs	x9, x9, #0x1
  4305ec:	mov	x10, #0x28                  	// #40
  4305f0:	mul	x9, x10, x9
  4305f4:	add	x8, x8, x9
  4305f8:	ldr	x8, [x8, #8]
  4305fc:	ldr	x9, [sp, #32]
  430600:	cmp	x8, x9
  430604:	b.ne	430630 <_obstack_memory_used@@Base+0x12494>  // b.any
  430608:	ldur	x8, [x29, #-16]
  43060c:	ldr	x8, [x8, #216]
  430610:	ldur	x9, [x29, #-16]
  430614:	ldr	x9, [x9, #200]
  430618:	subs	x9, x9, #0x1
  43061c:	mov	x10, #0x28                  	// #40
  430620:	mul	x9, x10, x9
  430624:	add	x8, x8, x9
  430628:	mov	w11, #0x1                   	// #1
  43062c:	strb	w11, [x8, #32]
  430630:	ldur	x8, [x29, #-24]
  430634:	ldur	x9, [x29, #-16]
  430638:	ldr	x9, [x9, #216]
  43063c:	ldur	x10, [x29, #-16]
  430640:	ldr	x10, [x10, #200]
  430644:	mov	x11, #0x28                  	// #40
  430648:	mul	x10, x11, x10
  43064c:	str	x8, [x9, x10]
  430650:	ldr	x8, [sp, #32]
  430654:	ldur	x9, [x29, #-16]
  430658:	ldr	x9, [x9, #216]
  43065c:	ldur	x10, [x29, #-16]
  430660:	ldr	x10, [x10, #200]
  430664:	mul	x10, x11, x10
  430668:	add	x9, x9, x10
  43066c:	str	x8, [x9, #8]
  430670:	ldr	x8, [sp, #24]
  430674:	ldur	x9, [x29, #-16]
  430678:	ldr	x9, [x9, #216]
  43067c:	ldur	x10, [x29, #-16]
  430680:	ldr	x10, [x10, #200]
  430684:	mul	x10, x11, x10
  430688:	add	x9, x9, x10
  43068c:	str	x8, [x9, #16]
  430690:	ldr	x8, [sp, #16]
  430694:	ldur	x9, [x29, #-16]
  430698:	ldr	x9, [x9, #216]
  43069c:	ldur	x10, [x29, #-16]
  4306a0:	ldr	x10, [x10, #200]
  4306a4:	mul	x10, x11, x10
  4306a8:	add	x9, x9, x10
  4306ac:	str	x8, [x9, #24]
  4306b0:	ldr	x8, [sp, #24]
  4306b4:	ldr	x9, [sp, #16]
  4306b8:	mov	w12, wzr
  4306bc:	mov	w13, #0xffffffff            	// #-1
  4306c0:	cmp	x8, x9
  4306c4:	csel	w12, w13, w12, eq  // eq = none
  4306c8:	ldur	x8, [x29, #-16]
  4306cc:	ldr	x8, [x8, #216]
  4306d0:	ldur	x9, [x29, #-16]
  4306d4:	ldr	x9, [x9, #200]
  4306d8:	mul	x9, x11, x9
  4306dc:	add	x8, x8, x9
  4306e0:	strh	w12, [x8, #34]
  4306e4:	ldur	x8, [x29, #-16]
  4306e8:	ldr	x8, [x8, #216]
  4306ec:	ldur	x9, [x29, #-16]
  4306f0:	ldr	x10, [x9, #200]
  4306f4:	add	x14, x10, #0x1
  4306f8:	str	x14, [x9, #200]
  4306fc:	mul	x9, x11, x10
  430700:	add	x8, x8, x9
  430704:	mov	w12, #0x0                   	// #0
  430708:	strb	w12, [x8, #32]
  43070c:	ldur	x8, [x29, #-16]
  430710:	ldrsw	x8, [x8, #224]
  430714:	ldr	x9, [sp, #16]
  430718:	ldr	x10, [sp, #24]
  43071c:	subs	x9, x9, x10
  430720:	cmp	x8, x9
  430724:	b.ge	43073c <_obstack_memory_used@@Base+0x125a0>  // b.tcont
  430728:	ldr	x8, [sp, #16]
  43072c:	ldr	x9, [sp, #24]
  430730:	subs	x8, x8, x9
  430734:	ldur	x9, [x29, #-16]
  430738:	str	w8, [x9, #224]
  43073c:	stur	wzr, [x29, #-4]
  430740:	ldur	w0, [x29, #-4]
  430744:	ldp	x29, x30, [sp, #64]
  430748:	add	sp, sp, #0x50
  43074c:	ret
  430750:	sub	sp, sp, #0x70
  430754:	stp	x29, x30, [sp, #96]
  430758:	add	x29, sp, #0x60
  43075c:	stur	x0, [x29, #-16]
  430760:	stur	x1, [x29, #-24]
  430764:	stur	x2, [x29, #-32]
  430768:	stur	w3, [x29, #-36]
  43076c:	ldur	x8, [x29, #-24]
  430770:	ldr	x8, [x8, #8]
  430774:	cbz	x8, 43077c <_obstack_memory_used@@Base+0x125e0>
  430778:	b	43077c <_obstack_memory_used@@Base+0x125e0>
  43077c:	ldur	x8, [x29, #-24]
  430780:	ldr	x1, [x8, #8]
  430784:	add	x0, sp, #0x10
  430788:	bl	429f94 <_obstack_memory_used@@Base+0xbdf8>
  43078c:	stur	w0, [x29, #-40]
  430790:	ldur	w9, [x29, #-40]
  430794:	cmp	w9, #0x0
  430798:	cset	w9, ne  // ne = any
  43079c:	and	w9, w9, #0x1
  4307a0:	mov	w1, w9
  4307a4:	sxtw	x8, w1
  4307a8:	cbz	x8, 4307b8 <_obstack_memory_used@@Base+0x1261c>
  4307ac:	ldur	w8, [x29, #-40]
  4307b0:	stur	w8, [x29, #-4]
  4307b4:	b	4308f4 <_obstack_memory_used@@Base+0x12758>
  4307b8:	str	xzr, [sp, #48]
  4307bc:	ldr	x8, [sp, #48]
  4307c0:	ldur	x9, [x29, #-24]
  4307c4:	ldr	x9, [x9, #8]
  4307c8:	cmp	x8, x9
  4307cc:	b.ge	4308d0 <_obstack_memory_used@@Base+0x12734>  // b.tcont
  4307d0:	ldur	x8, [x29, #-24]
  4307d4:	ldr	x8, [x8, #16]
  4307d8:	ldr	x9, [sp, #48]
  4307dc:	ldr	x8, [x8, x9, lsl #3]
  4307e0:	str	x8, [sp, #8]
  4307e4:	ldur	x8, [x29, #-16]
  4307e8:	ldr	x8, [x8, #48]
  4307ec:	ldr	x9, [sp, #8]
  4307f0:	mov	x10, #0x18                  	// #24
  4307f4:	mul	x9, x10, x9
  4307f8:	add	x8, x8, x9
  4307fc:	str	x8, [sp]
  430800:	ldur	x0, [x29, #-16]
  430804:	ldr	x1, [sp]
  430808:	ldur	x2, [x29, #-32]
  43080c:	ldur	w3, [x29, #-36]
  430810:	bl	42fb10 <_obstack_memory_used@@Base+0x11974>
  430814:	str	x0, [sp, #40]
  430818:	ldr	x8, [sp, #40]
  43081c:	mov	x9, #0xffffffffffffffff    	// #-1
  430820:	cmp	x8, x9
  430824:	b.ne	430870 <_obstack_memory_used@@Base+0x126d4>  // b.any
  430828:	ldr	x1, [sp]
  43082c:	add	x0, sp, #0x10
  430830:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  430834:	stur	w0, [x29, #-40]
  430838:	ldur	w8, [x29, #-40]
  43083c:	cmp	w8, #0x0
  430840:	cset	w8, ne  // ne = any
  430844:	and	w8, w8, #0x1
  430848:	mov	w1, w8
  43084c:	sxtw	x9, w1
  430850:	cbz	x9, 43086c <_obstack_memory_used@@Base+0x126d0>
  430854:	add	x8, sp, #0x10
  430858:	ldr	x0, [x8, #16]
  43085c:	bl	402b40 <free@plt>
  430860:	ldur	w9, [x29, #-40]
  430864:	stur	w9, [x29, #-4]
  430868:	b	4308f4 <_obstack_memory_used@@Base+0x12758>
  43086c:	b	4308c0 <_obstack_memory_used@@Base+0x12724>
  430870:	ldur	x0, [x29, #-16]
  430874:	ldr	x2, [sp, #8]
  430878:	ldur	x3, [x29, #-32]
  43087c:	ldur	w4, [x29, #-36]
  430880:	add	x1, sp, #0x10
  430884:	bl	431048 <_obstack_memory_used@@Base+0x12eac>
  430888:	stur	w0, [x29, #-40]
  43088c:	ldur	w8, [x29, #-40]
  430890:	cmp	w8, #0x0
  430894:	cset	w8, ne  // ne = any
  430898:	and	w8, w8, #0x1
  43089c:	mov	w1, w8
  4308a0:	sxtw	x9, w1
  4308a4:	cbz	x9, 4308c0 <_obstack_memory_used@@Base+0x12724>
  4308a8:	add	x8, sp, #0x10
  4308ac:	ldr	x0, [x8, #16]
  4308b0:	bl	402b40 <free@plt>
  4308b4:	ldur	w9, [x29, #-40]
  4308b8:	stur	w9, [x29, #-4]
  4308bc:	b	4308f4 <_obstack_memory_used@@Base+0x12758>
  4308c0:	ldr	x8, [sp, #48]
  4308c4:	add	x8, x8, #0x1
  4308c8:	str	x8, [sp, #48]
  4308cc:	b	4307bc <_obstack_memory_used@@Base+0x12620>
  4308d0:	ldur	x8, [x29, #-24]
  4308d4:	ldr	x0, [x8, #16]
  4308d8:	bl	402b40 <free@plt>
  4308dc:	ldur	x8, [x29, #-24]
  4308e0:	ldr	q0, [sp, #16]
  4308e4:	str	q0, [x8]
  4308e8:	ldr	x9, [sp, #32]
  4308ec:	str	x9, [x8, #16]
  4308f0:	stur	wzr, [x29, #-4]
  4308f4:	ldur	w0, [x29, #-4]
  4308f8:	ldp	x29, x30, [sp, #96]
  4308fc:	add	sp, sp, #0x70
  430900:	ret
  430904:	sub	sp, sp, #0x100
  430908:	stp	x29, x30, [sp, #240]
  43090c:	add	x29, sp, #0xf0
  430910:	sub	x8, x29, #0x18
  430914:	mov	x9, #0xffffffffffffffff    	// #-1
  430918:	str	x0, [x8, #8]
  43091c:	str	x1, [x8]
  430920:	stur	x2, [x29, #-32]
  430924:	stur	x3, [x29, #-40]
  430928:	stur	w4, [x29, #-44]
  43092c:	ldr	x10, [x8, #8]
  430930:	ldr	x10, [x10, #152]
  430934:	stur	x10, [x29, #-56]
  430938:	ldr	x0, [x8, #8]
  43093c:	ldur	x1, [x29, #-32]
  430940:	str	x8, [sp, #72]
  430944:	str	x9, [sp, #64]
  430948:	bl	42f818 <_obstack_memory_used@@Base+0x1167c>
  43094c:	stur	x0, [x29, #-72]
  430950:	ldur	x8, [x29, #-72]
  430954:	ldr	x9, [sp, #64]
  430958:	cmp	x8, x9
  43095c:	b.ne	43096c <_obstack_memory_used@@Base+0x127d0>  // b.any
  430960:	ldr	x8, [sp, #72]
  430964:	str	wzr, [x8, #20]
  430968:	b	430d30 <_obstack_memory_used@@Base+0x12b94>
  43096c:	ldr	x8, [sp, #72]
  430970:	ldr	x9, [x8, #8]
  430974:	ldr	x9, [x9, #216]
  430978:	ldur	x10, [x29, #-72]
  43097c:	mov	x11, #0x28                  	// #40
  430980:	mul	x10, x11, x10
  430984:	add	x9, x9, x10
  430988:	stur	x9, [x29, #-80]
  43098c:	ldr	x8, [sp, #72]
  430990:	ldr	x0, [x8]
  430994:	ldur	x9, [x29, #-80]
  430998:	ldr	x1, [x9]
  43099c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  4309a0:	cbnz	x0, 4309a8 <_obstack_memory_used@@Base+0x1280c>
  4309a4:	b	430d14 <_obstack_memory_used@@Base+0x12b78>
  4309a8:	ldur	x8, [x29, #-32]
  4309ac:	ldur	x9, [x29, #-80]
  4309b0:	ldr	x9, [x9, #24]
  4309b4:	add	x8, x8, x9
  4309b8:	ldur	x9, [x29, #-80]
  4309bc:	ldr	x9, [x9, #16]
  4309c0:	subs	x8, x8, x9
  4309c4:	stur	x8, [x29, #-88]
  4309c8:	ldur	x8, [x29, #-88]
  4309cc:	ldur	x9, [x29, #-32]
  4309d0:	cmp	x8, x9
  4309d4:	b.ne	430b00 <_obstack_memory_used@@Base+0x12964>  // b.any
  4309d8:	ldur	x8, [x29, #-56]
  4309dc:	ldr	x8, [x8, #40]
  4309e0:	ldur	x9, [x29, #-80]
  4309e4:	ldr	x9, [x9]
  4309e8:	mov	x10, #0x18                  	// #24
  4309ec:	mul	x9, x10, x9
  4309f0:	add	x8, x8, x9
  4309f4:	ldr	x8, [x8, #16]
  4309f8:	ldr	x8, [x8]
  4309fc:	stur	x8, [x29, #-96]
  430a00:	ldr	x8, [sp, #72]
  430a04:	ldr	x0, [x8]
  430a08:	ldur	x1, [x29, #-96]
  430a0c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  430a10:	cbz	x0, 430a18 <_obstack_memory_used@@Base+0x1287c>
  430a14:	b	430d14 <_obstack_memory_used@@Base+0x12b78>
  430a18:	ldur	x1, [x29, #-96]
  430a1c:	add	x8, sp, #0x78
  430a20:	mov	x0, x8
  430a24:	str	x8, [sp, #56]
  430a28:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  430a2c:	stur	w0, [x29, #-60]
  430a30:	ldur	x0, [x29, #-56]
  430a34:	ldur	x2, [x29, #-40]
  430a38:	ldur	w3, [x29, #-44]
  430a3c:	ldr	x1, [sp, #56]
  430a40:	bl	430750 <_obstack_memory_used@@Base+0x125b4>
  430a44:	str	w0, [sp, #116]
  430a48:	ldr	x8, [sp, #72]
  430a4c:	ldr	x0, [x8]
  430a50:	ldr	x1, [sp, #56]
  430a54:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  430a58:	str	w0, [sp, #112]
  430a5c:	ldr	x8, [sp, #56]
  430a60:	ldr	x0, [x8, #16]
  430a64:	bl	402b40 <free@plt>
  430a68:	ldur	w9, [x29, #-60]
  430a6c:	mov	w10, #0x1                   	// #1
  430a70:	str	w10, [sp, #52]
  430a74:	cbnz	w9, 430a98 <_obstack_memory_used@@Base+0x128fc>
  430a78:	ldr	w8, [sp, #116]
  430a7c:	mov	w9, #0x1                   	// #1
  430a80:	str	w9, [sp, #52]
  430a84:	cbnz	w8, 430a98 <_obstack_memory_used@@Base+0x128fc>
  430a88:	ldr	w8, [sp, #112]
  430a8c:	cmp	w8, #0x0
  430a90:	cset	w8, ne  // ne = any
  430a94:	str	w8, [sp, #52]
  430a98:	ldr	w8, [sp, #52]
  430a9c:	and	w8, w8, #0x1
  430aa0:	mov	w0, w8
  430aa4:	sxtw	x9, w0
  430aa8:	cbz	x9, 430afc <_obstack_memory_used@@Base+0x12960>
  430aac:	ldur	w8, [x29, #-60]
  430ab0:	cbz	w8, 430ac0 <_obstack_memory_used@@Base+0x12924>
  430ab4:	ldur	w8, [x29, #-60]
  430ab8:	str	w8, [sp, #48]
  430abc:	b	430ae4 <_obstack_memory_used@@Base+0x12948>
  430ac0:	ldr	w8, [sp, #116]
  430ac4:	cbz	w8, 430ad4 <_obstack_memory_used@@Base+0x12938>
  430ac8:	ldr	w8, [sp, #116]
  430acc:	str	w8, [sp, #44]
  430ad0:	b	430adc <_obstack_memory_used@@Base+0x12940>
  430ad4:	ldr	w8, [sp, #112]
  430ad8:	str	w8, [sp, #44]
  430adc:	ldr	w8, [sp, #44]
  430ae0:	str	w8, [sp, #48]
  430ae4:	ldr	w8, [sp, #48]
  430ae8:	stur	w8, [x29, #-60]
  430aec:	ldur	w8, [x29, #-60]
  430af0:	ldr	x9, [sp, #72]
  430af4:	str	w8, [x9, #20]
  430af8:	b	430d30 <_obstack_memory_used@@Base+0x12b94>
  430afc:	b	43096c <_obstack_memory_used@@Base+0x127d0>
  430b00:	ldur	x8, [x29, #-56]
  430b04:	ldr	x8, [x8, #24]
  430b08:	ldur	x9, [x29, #-80]
  430b0c:	ldr	x9, [x9]
  430b10:	mov	x10, #0x8                   	// #8
  430b14:	ldr	x8, [x8, x9, lsl #3]
  430b18:	stur	x8, [x29, #-96]
  430b1c:	ldr	x8, [sp, #72]
  430b20:	ldr	x9, [x8, #8]
  430b24:	ldr	x9, [x9, #184]
  430b28:	ldur	x11, [x29, #-88]
  430b2c:	mul	x10, x10, x11
  430b30:	add	x9, x9, x10
  430b34:	ldr	x9, [x9]
  430b38:	cbz	x9, 430c30 <_obstack_memory_used@@Base+0x12a94>
  430b3c:	ldr	x8, [sp, #72]
  430b40:	ldr	x9, [x8, #8]
  430b44:	ldr	x9, [x9, #184]
  430b48:	ldur	x10, [x29, #-88]
  430b4c:	mov	x11, #0x8                   	// #8
  430b50:	mul	x10, x11, x10
  430b54:	add	x9, x9, x10
  430b58:	ldr	x9, [x9]
  430b5c:	add	x0, x9, #0x8
  430b60:	ldur	x1, [x29, #-96]
  430b64:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  430b68:	cbz	x0, 430b70 <_obstack_memory_used@@Base+0x129d4>
  430b6c:	b	430d14 <_obstack_memory_used@@Base+0x12b78>
  430b70:	ldr	x8, [sp, #72]
  430b74:	ldr	x9, [x8, #8]
  430b78:	ldr	x9, [x9, #184]
  430b7c:	ldur	x10, [x29, #-88]
  430b80:	mov	x11, #0x8                   	// #8
  430b84:	mul	x10, x11, x10
  430b88:	add	x9, x9, x10
  430b8c:	ldr	x9, [x9]
  430b90:	add	x1, x9, #0x8
  430b94:	add	x9, sp, #0x58
  430b98:	mov	x0, x9
  430b9c:	str	x9, [sp, #32]
  430ba0:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  430ba4:	stur	w0, [x29, #-60]
  430ba8:	ldur	x1, [x29, #-96]
  430bac:	ldr	x0, [sp, #32]
  430bb0:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  430bb4:	and	w12, w0, #0x1
  430bb8:	strb	w12, [sp, #87]
  430bbc:	ldur	w12, [x29, #-60]
  430bc0:	mov	w13, #0x1                   	// #1
  430bc4:	str	w13, [sp, #28]
  430bc8:	cbnz	w12, 430bd8 <_obstack_memory_used@@Base+0x12a3c>
  430bcc:	ldrb	w8, [sp, #87]
  430bd0:	eor	w8, w8, #0x1
  430bd4:	str	w8, [sp, #28]
  430bd8:	ldr	w8, [sp, #28]
  430bdc:	and	w8, w8, #0x1
  430be0:	mov	w0, w8
  430be4:	sxtw	x9, w0
  430be8:	cbz	x9, 430c2c <_obstack_memory_used@@Base+0x12a90>
  430bec:	add	x8, sp, #0x58
  430bf0:	ldr	x0, [x8, #16]
  430bf4:	bl	402b40 <free@plt>
  430bf8:	ldur	w9, [x29, #-60]
  430bfc:	cbz	w9, 430c0c <_obstack_memory_used@@Base+0x12a70>
  430c00:	ldur	w8, [x29, #-60]
  430c04:	str	w8, [sp, #24]
  430c08:	b	430c14 <_obstack_memory_used@@Base+0x12a78>
  430c0c:	mov	w8, #0xc                   	// #12
  430c10:	str	w8, [sp, #24]
  430c14:	ldr	w8, [sp, #24]
  430c18:	stur	w8, [x29, #-60]
  430c1c:	ldur	w8, [x29, #-60]
  430c20:	ldr	x9, [sp, #72]
  430c24:	str	w8, [x9, #20]
  430c28:	b	430d30 <_obstack_memory_used@@Base+0x12b94>
  430c2c:	b	430c6c <_obstack_memory_used@@Base+0x12ad0>
  430c30:	ldur	x1, [x29, #-96]
  430c34:	add	x0, sp, #0x58
  430c38:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  430c3c:	stur	w0, [x29, #-60]
  430c40:	ldur	w8, [x29, #-60]
  430c44:	cmp	w8, #0x0
  430c48:	cset	w8, ne  // ne = any
  430c4c:	and	w8, w8, #0x1
  430c50:	mov	w1, w8
  430c54:	sxtw	x9, w1
  430c58:	cbz	x9, 430c6c <_obstack_memory_used@@Base+0x12ad0>
  430c5c:	ldur	w8, [x29, #-60]
  430c60:	ldr	x9, [sp, #72]
  430c64:	str	w8, [x9, #20]
  430c68:	b	430d30 <_obstack_memory_used@@Base+0x12b94>
  430c6c:	ldur	x1, [x29, #-56]
  430c70:	sub	x0, x29, #0x3c
  430c74:	add	x8, sp, #0x58
  430c78:	mov	x2, x8
  430c7c:	str	x8, [sp, #16]
  430c80:	bl	43124c <_obstack_memory_used@@Base+0x130b0>
  430c84:	ldr	x8, [sp, #72]
  430c88:	ldr	x9, [x8, #8]
  430c8c:	ldr	x9, [x9, #184]
  430c90:	ldur	x10, [x29, #-88]
  430c94:	mov	x11, #0x8                   	// #8
  430c98:	mul	x10, x11, x10
  430c9c:	add	x9, x9, x10
  430ca0:	str	x0, [x9]
  430ca4:	ldr	x9, [sp, #16]
  430ca8:	ldr	x0, [x9, #16]
  430cac:	str	x11, [sp, #8]
  430cb0:	bl	402b40 <free@plt>
  430cb4:	ldr	x8, [sp, #72]
  430cb8:	ldr	x9, [x8, #8]
  430cbc:	ldr	x9, [x9, #184]
  430cc0:	ldur	x10, [x29, #-88]
  430cc4:	ldr	x11, [sp, #8]
  430cc8:	mul	x10, x11, x10
  430ccc:	add	x9, x9, x10
  430cd0:	ldr	x9, [x9]
  430cd4:	mov	w12, #0x0                   	// #0
  430cd8:	str	w12, [sp, #4]
  430cdc:	cbnz	x9, 430cf0 <_obstack_memory_used@@Base+0x12b54>
  430ce0:	ldur	w8, [x29, #-60]
  430ce4:	cmp	w8, #0x0
  430ce8:	cset	w8, ne  // ne = any
  430cec:	str	w8, [sp, #4]
  430cf0:	ldr	w8, [sp, #4]
  430cf4:	and	w8, w8, #0x1
  430cf8:	mov	w0, w8
  430cfc:	sxtw	x9, w0
  430d00:	cbz	x9, 430d14 <_obstack_memory_used@@Base+0x12b78>
  430d04:	ldur	w8, [x29, #-60]
  430d08:	ldr	x9, [sp, #72]
  430d0c:	str	w8, [x9, #20]
  430d10:	b	430d30 <_obstack_memory_used@@Base+0x12b94>
  430d14:	ldur	x8, [x29, #-80]
  430d18:	add	x9, x8, #0x28
  430d1c:	stur	x9, [x29, #-80]
  430d20:	ldrb	w10, [x8, #32]
  430d24:	cbnz	w10, 43098c <_obstack_memory_used@@Base+0x127f0>
  430d28:	ldr	x8, [sp, #72]
  430d2c:	str	wzr, [x8, #20]
  430d30:	ldr	x8, [sp, #72]
  430d34:	ldr	w0, [x8, #20]
  430d38:	ldp	x29, x30, [sp, #240]
  430d3c:	add	sp, sp, #0x100
  430d40:	ret
  430d44:	sub	sp, sp, #0xa0
  430d48:	stp	x29, x30, [sp, #144]
  430d4c:	add	x29, sp, #0x90
  430d50:	stur	x0, [x29, #-16]
  430d54:	stur	x1, [x29, #-24]
  430d58:	stur	x2, [x29, #-32]
  430d5c:	stur	x3, [x29, #-40]
  430d60:	ldur	x8, [x29, #-16]
  430d64:	ldr	x8, [x8, #152]
  430d68:	stur	x8, [x29, #-48]
  430d6c:	stur	wzr, [x29, #-68]
  430d70:	str	xzr, [sp, #48]
  430d74:	str	xzr, [sp, #56]
  430d78:	str	xzr, [sp, #64]
  430d7c:	stur	xzr, [x29, #-64]
  430d80:	ldur	x8, [x29, #-64]
  430d84:	ldur	x9, [x29, #-32]
  430d88:	ldr	x9, [x9, #8]
  430d8c:	cmp	x8, x9
  430d90:	b.ge	431028 <_obstack_memory_used@@Base+0x12e8c>  // b.tcont
  430d94:	str	wzr, [sp, #44]
  430d98:	ldur	x8, [x29, #-32]
  430d9c:	mov	x9, #0x10                  	// #16
  430da0:	ldr	x8, [x8, #16]
  430da4:	ldur	x10, [x29, #-64]
  430da8:	ldr	x8, [x8, x10, lsl #3]
  430dac:	str	x8, [sp, #32]
  430db0:	ldur	x8, [x29, #-48]
  430db4:	ldr	x8, [x8]
  430db8:	ldr	x10, [sp, #32]
  430dbc:	mul	x9, x9, x10
  430dc0:	add	x8, x8, x9
  430dc4:	ldr	w11, [x8, #8]
  430dc8:	and	w11, w11, #0xff
  430dcc:	and	w11, w11, #0x8
  430dd0:	cbnz	w11, 430dd8 <_obstack_memory_used@@Base+0x12c3c>
  430dd4:	b	430dd8 <_obstack_memory_used@@Base+0x12c3c>
  430dd8:	ldur	x8, [x29, #-48]
  430ddc:	ldr	x8, [x8]
  430de0:	ldr	x9, [sp, #32]
  430de4:	mov	x10, #0x10                  	// #16
  430de8:	mul	x9, x10, x9
  430dec:	add	x8, x8, x9
  430df0:	ldr	w11, [x8, #8]
  430df4:	lsr	w11, w11, #20
  430df8:	and	w11, w11, #0x1
  430dfc:	cbz	w11, 430f90 <_obstack_memory_used@@Base+0x12df4>
  430e00:	ldur	x0, [x29, #-48]
  430e04:	ldr	x1, [sp, #32]
  430e08:	ldur	x2, [x29, #-16]
  430e0c:	ldur	x3, [x29, #-24]
  430e10:	bl	431600 <_obstack_memory_used@@Base+0x13464>
  430e14:	str	w0, [sp, #44]
  430e18:	ldr	w8, [sp, #44]
  430e1c:	cmp	w8, #0x1
  430e20:	b.le	430f90 <_obstack_memory_used@@Base+0x12df4>
  430e24:	ldur	x8, [x29, #-48]
  430e28:	ldr	x8, [x8, #24]
  430e2c:	ldr	x9, [sp, #32]
  430e30:	mov	x10, #0x8                   	// #8
  430e34:	ldr	x8, [x8, x9, lsl #3]
  430e38:	str	x8, [sp, #16]
  430e3c:	ldur	x8, [x29, #-24]
  430e40:	ldrsw	x9, [sp, #44]
  430e44:	add	x8, x8, x9
  430e48:	str	x8, [sp, #8]
  430e4c:	ldur	x8, [x29, #-16]
  430e50:	ldr	x8, [x8, #184]
  430e54:	ldr	x9, [sp, #8]
  430e58:	mul	x9, x10, x9
  430e5c:	add	x8, x8, x9
  430e60:	ldr	x8, [x8]
  430e64:	str	x8, [sp, #24]
  430e68:	str	xzr, [sp, #56]
  430e6c:	ldr	x8, [sp, #24]
  430e70:	cbz	x8, 430ebc <_obstack_memory_used@@Base+0x12d20>
  430e74:	ldr	x8, [sp, #24]
  430e78:	add	x1, x8, #0x8
  430e7c:	add	x0, sp, #0x30
  430e80:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  430e84:	stur	w0, [x29, #-68]
  430e88:	ldur	w9, [x29, #-68]
  430e8c:	cmp	w9, #0x0
  430e90:	cset	w9, ne  // ne = any
  430e94:	and	w9, w9, #0x1
  430e98:	mov	w1, w9
  430e9c:	sxtw	x8, w1
  430ea0:	cbz	x8, 430ebc <_obstack_memory_used@@Base+0x12d20>
  430ea4:	add	x8, sp, #0x30
  430ea8:	ldr	x0, [x8, #16]
  430eac:	bl	402b40 <free@plt>
  430eb0:	ldur	w9, [x29, #-68]
  430eb4:	stur	w9, [x29, #-4]
  430eb8:	b	431038 <_obstack_memory_used@@Base+0x12e9c>
  430ebc:	ldr	x1, [sp, #16]
  430ec0:	add	x0, sp, #0x30
  430ec4:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  430ec8:	mov	w8, #0x1                   	// #1
  430ecc:	and	w8, w0, w8
  430ed0:	sturb	w8, [x29, #-49]
  430ed4:	ldurb	w8, [x29, #-49]
  430ed8:	eor	w8, w8, #0x1
  430edc:	and	w8, w8, #0x1
  430ee0:	mov	w1, w8
  430ee4:	sxtw	x9, w1
  430ee8:	cbz	x9, 430f04 <_obstack_memory_used@@Base+0x12d68>
  430eec:	add	x8, sp, #0x30
  430ef0:	ldr	x0, [x8, #16]
  430ef4:	bl	402b40 <free@plt>
  430ef8:	mov	w9, #0xc                   	// #12
  430efc:	stur	w9, [x29, #-4]
  430f00:	b	431038 <_obstack_memory_used@@Base+0x12e9c>
  430f04:	ldur	x1, [x29, #-48]
  430f08:	sub	x0, x29, #0x44
  430f0c:	add	x2, sp, #0x30
  430f10:	bl	43124c <_obstack_memory_used@@Base+0x130b0>
  430f14:	ldur	x8, [x29, #-16]
  430f18:	ldr	x8, [x8, #184]
  430f1c:	ldr	x9, [sp, #8]
  430f20:	mov	x10, #0x8                   	// #8
  430f24:	mul	x9, x10, x9
  430f28:	add	x8, x8, x9
  430f2c:	str	x0, [x8]
  430f30:	ldur	x8, [x29, #-16]
  430f34:	ldr	x8, [x8, #184]
  430f38:	ldr	x9, [sp, #8]
  430f3c:	mul	x9, x10, x9
  430f40:	add	x8, x8, x9
  430f44:	ldr	x8, [x8]
  430f48:	mov	w11, #0x0                   	// #0
  430f4c:	str	w11, [sp, #4]
  430f50:	cbnz	x8, 430f64 <_obstack_memory_used@@Base+0x12dc8>
  430f54:	ldur	w8, [x29, #-68]
  430f58:	cmp	w8, #0x0
  430f5c:	cset	w8, ne  // ne = any
  430f60:	str	w8, [sp, #4]
  430f64:	ldr	w8, [sp, #4]
  430f68:	and	w8, w8, #0x1
  430f6c:	mov	w0, w8
  430f70:	sxtw	x9, w0
  430f74:	cbz	x9, 430f90 <_obstack_memory_used@@Base+0x12df4>
  430f78:	add	x8, sp, #0x30
  430f7c:	ldr	x0, [x8, #16]
  430f80:	bl	402b40 <free@plt>
  430f84:	ldur	w9, [x29, #-68]
  430f88:	stur	w9, [x29, #-4]
  430f8c:	b	431038 <_obstack_memory_used@@Base+0x12e9c>
  430f90:	ldr	w8, [sp, #44]
  430f94:	cbnz	w8, 430fc4 <_obstack_memory_used@@Base+0x12e28>
  430f98:	ldur	x0, [x29, #-16]
  430f9c:	ldur	x8, [x29, #-48]
  430fa0:	ldr	x8, [x8]
  430fa4:	ldr	x9, [sp, #32]
  430fa8:	mov	x10, #0x10                  	// #16
  430fac:	mul	x9, x10, x9
  430fb0:	add	x1, x8, x9
  430fb4:	ldur	x2, [x29, #-24]
  430fb8:	bl	431b6c <_obstack_memory_used@@Base+0x139d0>
  430fbc:	tbnz	w0, #0, 430fc4 <_obstack_memory_used@@Base+0x12e28>
  430fc0:	b	431018 <_obstack_memory_used@@Base+0x12e7c>
  430fc4:	ldur	x0, [x29, #-40]
  430fc8:	ldur	x8, [x29, #-48]
  430fcc:	ldr	x8, [x8, #24]
  430fd0:	ldr	x9, [sp, #32]
  430fd4:	ldr	x1, [x8, x9, lsl #3]
  430fd8:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  430fdc:	mov	w10, #0x1                   	// #1
  430fe0:	and	w10, w0, w10
  430fe4:	sturb	w10, [x29, #-49]
  430fe8:	ldurb	w10, [x29, #-49]
  430fec:	eor	w10, w10, #0x1
  430ff0:	and	w10, w10, #0x1
  430ff4:	mov	w1, w10
  430ff8:	sxtw	x8, w1
  430ffc:	cbz	x8, 431018 <_obstack_memory_used@@Base+0x12e7c>
  431000:	add	x8, sp, #0x30
  431004:	ldr	x0, [x8, #16]
  431008:	bl	402b40 <free@plt>
  43100c:	mov	w9, #0xc                   	// #12
  431010:	stur	w9, [x29, #-4]
  431014:	b	431038 <_obstack_memory_used@@Base+0x12e9c>
  431018:	ldur	x8, [x29, #-64]
  43101c:	add	x8, x8, #0x1
  431020:	stur	x8, [x29, #-64]
  431024:	b	430d80 <_obstack_memory_used@@Base+0x12be4>
  431028:	add	x8, sp, #0x30
  43102c:	ldr	x0, [x8, #16]
  431030:	bl	402b40 <free@plt>
  431034:	stur	wzr, [x29, #-4]
  431038:	ldur	w0, [x29, #-4]
  43103c:	ldp	x29, x30, [sp, #144]
  431040:	add	sp, sp, #0xa0
  431044:	ret
  431048:	sub	sp, sp, #0x50
  43104c:	stp	x29, x30, [sp, #64]
  431050:	add	x29, sp, #0x40
  431054:	stur	x0, [x29, #-16]
  431058:	stur	x1, [x29, #-24]
  43105c:	str	x2, [sp, #32]
  431060:	str	x3, [sp, #24]
  431064:	str	w4, [sp, #20]
  431068:	ldr	x8, [sp, #32]
  43106c:	str	x8, [sp, #8]
  431070:	ldur	x0, [x29, #-24]
  431074:	ldr	x1, [sp, #8]
  431078:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  43107c:	cmp	x0, #0x0
  431080:	cset	w8, ne  // ne = any
  431084:	eor	w8, w8, #0x1
  431088:	tbnz	w8, #0, 431090 <_obstack_memory_used@@Base+0x12ef4>
  43108c:	b	431238 <_obstack_memory_used@@Base+0x1309c>
  431090:	ldur	x8, [x29, #-16]
  431094:	ldr	x8, [x8]
  431098:	ldr	x9, [sp, #8]
  43109c:	mov	x10, #0x10                  	// #16
  4310a0:	mul	x9, x10, x9
  4310a4:	add	x8, x8, x9
  4310a8:	ldr	w11, [x8, #8]
  4310ac:	and	w11, w11, #0xff
  4310b0:	ldr	w12, [sp, #20]
  4310b4:	cmp	w11, w12
  4310b8:	b.ne	43112c <_obstack_memory_used@@Base+0x12f90>  // b.any
  4310bc:	ldur	x8, [x29, #-16]
  4310c0:	ldr	x8, [x8]
  4310c4:	ldr	x9, [sp, #8]
  4310c8:	mov	x10, #0x10                  	// #16
  4310cc:	mul	x9, x10, x9
  4310d0:	ldr	x8, [x8, x9]
  4310d4:	ldr	x9, [sp, #24]
  4310d8:	cmp	x8, x9
  4310dc:	b.ne	43112c <_obstack_memory_used@@Base+0x12f90>  // b.any
  4310e0:	ldr	w8, [sp, #20]
  4310e4:	cmp	w8, #0x9
  4310e8:	b.ne	431128 <_obstack_memory_used@@Base+0x12f8c>  // b.any
  4310ec:	ldur	x0, [x29, #-24]
  4310f0:	ldr	x1, [sp, #8]
  4310f4:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  4310f8:	mov	w8, #0x1                   	// #1
  4310fc:	and	w8, w0, w8
  431100:	strb	w8, [sp, #7]
  431104:	ldrb	w8, [sp, #7]
  431108:	eor	w8, w8, #0x1
  43110c:	and	w8, w8, #0x1
  431110:	mov	w1, w8
  431114:	sxtw	x9, w1
  431118:	cbz	x9, 431128 <_obstack_memory_used@@Base+0x12f8c>
  43111c:	mov	w8, #0xc                   	// #12
  431120:	stur	w8, [x29, #-4]
  431124:	b	43123c <_obstack_memory_used@@Base+0x130a0>
  431128:	b	431238 <_obstack_memory_used@@Base+0x1309c>
  43112c:	ldur	x0, [x29, #-24]
  431130:	ldr	x1, [sp, #8]
  431134:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  431138:	mov	w8, #0x1                   	// #1
  43113c:	and	w8, w0, w8
  431140:	strb	w8, [sp, #7]
  431144:	ldrb	w8, [sp, #7]
  431148:	eor	w8, w8, #0x1
  43114c:	and	w8, w8, #0x1
  431150:	mov	w1, w8
  431154:	sxtw	x9, w1
  431158:	cbz	x9, 431168 <_obstack_memory_used@@Base+0x12fcc>
  43115c:	mov	w8, #0xc                   	// #12
  431160:	stur	w8, [x29, #-4]
  431164:	b	43123c <_obstack_memory_used@@Base+0x130a0>
  431168:	ldur	x8, [x29, #-16]
  43116c:	ldr	x8, [x8, #40]
  431170:	ldr	x9, [sp, #8]
  431174:	mov	x10, #0x18                  	// #24
  431178:	mul	x9, x10, x9
  43117c:	add	x8, x8, x9
  431180:	ldr	x8, [x8, #8]
  431184:	cbnz	x8, 43118c <_obstack_memory_used@@Base+0x12ff0>
  431188:	b	431238 <_obstack_memory_used@@Base+0x1309c>
  43118c:	ldur	x8, [x29, #-16]
  431190:	ldr	x8, [x8, #40]
  431194:	ldr	x9, [sp, #8]
  431198:	mov	x10, #0x18                  	// #24
  43119c:	mul	x9, x10, x9
  4311a0:	add	x8, x8, x9
  4311a4:	ldr	x8, [x8, #8]
  4311a8:	cmp	x8, #0x2
  4311ac:	b.ne	431210 <_obstack_memory_used@@Base+0x13074>  // b.any
  4311b0:	ldur	x0, [x29, #-16]
  4311b4:	ldur	x1, [x29, #-24]
  4311b8:	ldur	x8, [x29, #-16]
  4311bc:	ldr	x8, [x8, #40]
  4311c0:	ldr	x9, [sp, #8]
  4311c4:	mov	x10, #0x18                  	// #24
  4311c8:	mul	x9, x10, x9
  4311cc:	add	x8, x8, x9
  4311d0:	ldr	x8, [x8, #16]
  4311d4:	ldr	x2, [x8, #8]
  4311d8:	ldr	x3, [sp, #24]
  4311dc:	ldr	w4, [sp, #20]
  4311e0:	bl	431048 <_obstack_memory_used@@Base+0x12eac>
  4311e4:	str	w0, [sp]
  4311e8:	ldr	w11, [sp]
  4311ec:	cmp	w11, #0x0
  4311f0:	cset	w11, ne  // ne = any
  4311f4:	and	w11, w11, #0x1
  4311f8:	mov	w1, w11
  4311fc:	sxtw	x8, w1
  431200:	cbz	x8, 431210 <_obstack_memory_used@@Base+0x13074>
  431204:	ldr	w8, [sp]
  431208:	stur	w8, [x29, #-4]
  43120c:	b	43123c <_obstack_memory_used@@Base+0x130a0>
  431210:	ldur	x8, [x29, #-16]
  431214:	ldr	x8, [x8, #40]
  431218:	ldr	x9, [sp, #8]
  43121c:	mov	x10, #0x18                  	// #24
  431220:	mul	x9, x10, x9
  431224:	add	x8, x8, x9
  431228:	ldr	x8, [x8, #16]
  43122c:	ldr	x8, [x8]
  431230:	str	x8, [sp, #8]
  431234:	b	431070 <_obstack_memory_used@@Base+0x12ed4>
  431238:	stur	wzr, [x29, #-4]
  43123c:	ldur	w0, [x29, #-4]
  431240:	ldp	x29, x30, [sp, #64]
  431244:	add	sp, sp, #0x50
  431248:	ret
  43124c:	sub	sp, sp, #0x60
  431250:	stp	x29, x30, [sp, #80]
  431254:	add	x29, sp, #0x50
  431258:	stur	x0, [x29, #-16]
  43125c:	stur	x1, [x29, #-24]
  431260:	stur	x2, [x29, #-32]
  431264:	ldur	x8, [x29, #-32]
  431268:	ldr	x8, [x8, #8]
  43126c:	cmp	x8, #0x0
  431270:	cset	w9, eq  // eq = none
  431274:	and	w9, w9, #0x1
  431278:	mov	w0, w9
  43127c:	sxtw	x8, w0
  431280:	cbz	x8, 431298 <_obstack_memory_used@@Base+0x130fc>
  431284:	ldur	x8, [x29, #-16]
  431288:	str	wzr, [x8]
  43128c:	mov	x8, xzr
  431290:	stur	x8, [x29, #-8]
  431294:	b	43139c <_obstack_memory_used@@Base+0x13200>
  431298:	ldur	x0, [x29, #-32]
  43129c:	mov	w8, wzr
  4312a0:	mov	w1, w8
  4312a4:	bl	42b228 <_obstack_memory_used@@Base+0xd08c>
  4312a8:	str	x0, [sp, #40]
  4312ac:	ldur	x9, [x29, #-24]
  4312b0:	ldr	x9, [x9, #64]
  4312b4:	ldr	x10, [sp, #40]
  4312b8:	ldur	x11, [x29, #-24]
  4312bc:	ldr	x11, [x11, #136]
  4312c0:	and	x10, x10, x11
  4312c4:	mov	x11, #0x18                  	// #24
  4312c8:	mul	x10, x11, x10
  4312cc:	add	x9, x9, x10
  4312d0:	str	x9, [sp, #24]
  4312d4:	str	xzr, [sp, #16]
  4312d8:	ldr	x8, [sp, #16]
  4312dc:	ldr	x9, [sp, #24]
  4312e0:	ldr	x9, [x9]
  4312e4:	cmp	x8, x9
  4312e8:	b.ge	431358 <_obstack_memory_used@@Base+0x131bc>  // b.tcont
  4312ec:	ldr	x8, [sp, #24]
  4312f0:	ldr	x8, [x8, #16]
  4312f4:	ldr	x9, [sp, #16]
  4312f8:	mov	x10, #0x8                   	// #8
  4312fc:	mul	x9, x10, x9
  431300:	add	x8, x8, x9
  431304:	ldr	x8, [x8]
  431308:	str	x8, [sp, #8]
  43130c:	ldr	x8, [sp, #40]
  431310:	ldr	x9, [sp, #8]
  431314:	ldr	x9, [x9]
  431318:	cmp	x8, x9
  43131c:	b.eq	431324 <_obstack_memory_used@@Base+0x13188>  // b.none
  431320:	b	431348 <_obstack_memory_used@@Base+0x131ac>
  431324:	ldr	x8, [sp, #8]
  431328:	add	x0, x8, #0x8
  43132c:	ldur	x1, [x29, #-32]
  431330:	bl	42b29c <_obstack_memory_used@@Base+0xd100>
  431334:	tbnz	w0, #0, 43133c <_obstack_memory_used@@Base+0x131a0>
  431338:	b	431348 <_obstack_memory_used@@Base+0x131ac>
  43133c:	ldr	x8, [sp, #8]
  431340:	stur	x8, [x29, #-8]
  431344:	b	43139c <_obstack_memory_used@@Base+0x13200>
  431348:	ldr	x8, [sp, #16]
  43134c:	add	x8, x8, #0x1
  431350:	str	x8, [sp, #16]
  431354:	b	4312d8 <_obstack_memory_used@@Base+0x1313c>
  431358:	ldur	x0, [x29, #-24]
  43135c:	ldur	x1, [x29, #-32]
  431360:	ldr	x2, [sp, #40]
  431364:	bl	4313ac <_obstack_memory_used@@Base+0x13210>
  431368:	str	x0, [sp, #32]
  43136c:	ldr	x8, [sp, #32]
  431370:	cmp	x8, #0x0
  431374:	cset	w9, eq  // eq = none
  431378:	and	w9, w9, #0x1
  43137c:	mov	w0, w9
  431380:	sxtw	x8, w0
  431384:	cbz	x8, 431394 <_obstack_memory_used@@Base+0x131f8>
  431388:	ldur	x8, [x29, #-16]
  43138c:	mov	w9, #0xc                   	// #12
  431390:	str	w9, [x8]
  431394:	ldr	x8, [sp, #32]
  431398:	stur	x8, [x29, #-8]
  43139c:	ldur	x0, [x29, #-8]
  4313a0:	ldp	x29, x30, [sp, #80]
  4313a4:	add	sp, sp, #0x60
  4313a8:	ret
  4313ac:	sub	sp, sp, #0x60
  4313b0:	stp	x29, x30, [sp, #80]
  4313b4:	add	x29, sp, #0x50
  4313b8:	mov	x8, #0x70                  	// #112
  4313bc:	mov	x9, #0x1                   	// #1
  4313c0:	stur	x0, [x29, #-16]
  4313c4:	stur	x1, [x29, #-24]
  4313c8:	stur	x2, [x29, #-32]
  4313cc:	mov	x0, x8
  4313d0:	mov	x1, x9
  4313d4:	bl	4029a0 <calloc@plt>
  4313d8:	str	x0, [sp, #24]
  4313dc:	ldr	x8, [sp, #24]
  4313e0:	cmp	x8, #0x0
  4313e4:	cset	w10, eq  // eq = none
  4313e8:	and	w10, w10, #0x1
  4313ec:	mov	w0, w10
  4313f0:	sxtw	x8, w0
  4313f4:	cbz	x8, 431404 <_obstack_memory_used@@Base+0x13268>
  4313f8:	mov	x8, xzr
  4313fc:	stur	x8, [x29, #-8]
  431400:	b	4315f0 <_obstack_memory_used@@Base+0x13454>
  431404:	ldr	x8, [sp, #24]
  431408:	add	x0, x8, #0x8
  43140c:	ldur	x1, [x29, #-24]
  431410:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  431414:	str	w0, [sp, #36]
  431418:	ldr	w9, [sp, #36]
  43141c:	cmp	w9, #0x0
  431420:	cset	w9, ne  // ne = any
  431424:	and	w9, w9, #0x1
  431428:	mov	w1, w9
  43142c:	sxtw	x8, w1
  431430:	cbz	x8, 431448 <_obstack_memory_used@@Base+0x132ac>
  431434:	ldr	x0, [sp, #24]
  431438:	bl	402b40 <free@plt>
  43143c:	mov	x8, xzr
  431440:	stur	x8, [x29, #-8]
  431444:	b	4315f0 <_obstack_memory_used@@Base+0x13454>
  431448:	ldr	x8, [sp, #24]
  43144c:	add	x8, x8, #0x8
  431450:	ldr	x9, [sp, #24]
  431454:	str	x8, [x9, #80]
  431458:	str	xzr, [sp, #40]
  43145c:	ldr	x8, [sp, #40]
  431460:	ldur	x9, [x29, #-24]
  431464:	ldr	x9, [x9, #8]
  431468:	cmp	x8, x9
  43146c:	b.ge	4315a8 <_obstack_memory_used@@Base+0x1340c>  // b.tcont
  431470:	ldur	x8, [x29, #-16]
  431474:	ldr	x8, [x8]
  431478:	ldur	x9, [x29, #-24]
  43147c:	mov	x10, #0x10                  	// #16
  431480:	ldr	x9, [x9, #16]
  431484:	ldr	x11, [sp, #40]
  431488:	ldr	x9, [x9, x11, lsl #3]
  43148c:	mul	x9, x10, x9
  431490:	add	x8, x8, x9
  431494:	str	x8, [sp, #16]
  431498:	ldr	x8, [sp, #16]
  43149c:	ldr	w12, [x8, #8]
  4314a0:	and	w12, w12, #0xff
  4314a4:	str	w12, [sp, #12]
  4314a8:	ldr	w12, [sp, #12]
  4314ac:	cmp	w12, #0x1
  4314b0:	b.ne	4314d0 <_obstack_memory_used@@Base+0x13334>  // b.any
  4314b4:	ldr	x8, [sp, #16]
  4314b8:	mov	x9, #0x8                   	// #8
  4314bc:	ldr	w10, [x8, #8]
  4314c0:	lsr	w9, w10, w9
  4314c4:	and	w9, w9, #0x3ff
  4314c8:	cbnz	w9, 4314d0 <_obstack_memory_used@@Base+0x13334>
  4314cc:	b	431598 <_obstack_memory_used@@Base+0x133fc>
  4314d0:	ldr	x8, [sp, #16]
  4314d4:	ldr	w9, [x8, #8]
  4314d8:	lsr	w9, w9, #20
  4314dc:	and	w9, w9, #0x1
  4314e0:	ldr	x8, [sp, #24]
  4314e4:	ldrb	w10, [x8, #104]
  4314e8:	mov	w11, #0x5                   	// #5
  4314ec:	lsr	w10, w10, w11
  4314f0:	mov	w12, #0x1                   	// #1
  4314f4:	and	w10, w10, #0x1
  4314f8:	and	w10, w10, #0xff
  4314fc:	orr	w9, w10, w9
  431500:	ldrb	w10, [x8, #104]
  431504:	and	w9, w9, w12
  431508:	lsl	w9, w9, w11
  43150c:	and	w10, w10, #0xffffffdf
  431510:	orr	w9, w10, w9
  431514:	strb	w9, [x8, #104]
  431518:	ldr	w9, [sp, #12]
  43151c:	cmp	w9, #0x2
  431520:	b.ne	43153c <_obstack_memory_used@@Base+0x133a0>  // b.any
  431524:	ldr	x8, [sp, #24]
  431528:	ldrb	w9, [x8, #104]
  43152c:	and	w9, w9, #0xffffffef
  431530:	orr	w9, w9, #0x10
  431534:	strb	w9, [x8, #104]
  431538:	b	431598 <_obstack_memory_used@@Base+0x133fc>
  43153c:	ldr	w8, [sp, #12]
  431540:	cmp	w8, #0x4
  431544:	b.ne	431560 <_obstack_memory_used@@Base+0x133c4>  // b.any
  431548:	ldr	x8, [sp, #24]
  43154c:	ldrb	w9, [x8, #104]
  431550:	and	w9, w9, #0xffffffbf
  431554:	orr	w9, w9, #0x40
  431558:	strb	w9, [x8, #104]
  43155c:	b	431598 <_obstack_memory_used@@Base+0x133fc>
  431560:	ldr	w8, [sp, #12]
  431564:	cmp	w8, #0xc
  431568:	b.eq	431584 <_obstack_memory_used@@Base+0x133e8>  // b.none
  43156c:	ldr	x8, [sp, #16]
  431570:	mov	x9, #0x8                   	// #8
  431574:	ldr	w10, [x8, #8]
  431578:	lsr	w9, w10, w9
  43157c:	and	w9, w9, #0x3ff
  431580:	cbz	w9, 431598 <_obstack_memory_used@@Base+0x133fc>
  431584:	ldr	x8, [sp, #24]
  431588:	ldrb	w9, [x8, #104]
  43158c:	and	w9, w9, #0x7f
  431590:	orr	w9, w9, #0xffffff80
  431594:	strb	w9, [x8, #104]
  431598:	ldr	x8, [sp, #40]
  43159c:	add	x8, x8, #0x1
  4315a0:	str	x8, [sp, #40]
  4315a4:	b	43145c <_obstack_memory_used@@Base+0x132c0>
  4315a8:	ldur	x0, [x29, #-16]
  4315ac:	ldr	x1, [sp, #24]
  4315b0:	ldur	x2, [x29, #-32]
  4315b4:	bl	42b760 <_obstack_memory_used@@Base+0xd5c4>
  4315b8:	str	w0, [sp, #36]
  4315bc:	ldr	w8, [sp, #36]
  4315c0:	cmp	w8, #0x0
  4315c4:	cset	w8, ne  // ne = any
  4315c8:	and	w8, w8, #0x1
  4315cc:	mov	w1, w8
  4315d0:	sxtw	x9, w1
  4315d4:	cbz	x9, 4315e8 <_obstack_memory_used@@Base+0x1344c>
  4315d8:	ldr	x0, [sp, #24]
  4315dc:	bl	420de4 <_obstack_memory_used@@Base+0x2c48>
  4315e0:	mov	x8, xzr
  4315e4:	str	x8, [sp, #24]
  4315e8:	ldr	x8, [sp, #24]
  4315ec:	stur	x8, [x29, #-8]
  4315f0:	ldur	x0, [x29, #-8]
  4315f4:	ldp	x29, x30, [sp, #80]
  4315f8:	add	sp, sp, #0x60
  4315fc:	ret
  431600:	sub	sp, sp, #0x80
  431604:	stp	x29, x30, [sp, #112]
  431608:	add	x29, sp, #0x70
  43160c:	stur	x0, [x29, #-16]
  431610:	stur	x1, [x29, #-24]
  431614:	stur	x2, [x29, #-32]
  431618:	stur	x3, [x29, #-40]
  43161c:	ldur	x8, [x29, #-16]
  431620:	ldr	x8, [x8]
  431624:	ldur	x9, [x29, #-24]
  431628:	mov	x10, #0x10                  	// #16
  43162c:	mul	x9, x10, x9
  431630:	add	x8, x8, x9
  431634:	stur	x8, [x29, #-48]
  431638:	ldur	x8, [x29, #-48]
  43163c:	ldr	w11, [x8, #8]
  431640:	and	w11, w11, #0xff
  431644:	cmp	w11, #0x7
  431648:	cset	w11, eq  // eq = none
  43164c:	and	w11, w11, #0x1
  431650:	mov	w0, w11
  431654:	sxtw	x8, w0
  431658:	cbz	x8, 4318a0 <_obstack_memory_used@@Base+0x13704>
  43165c:	ldur	x8, [x29, #-32]
  431660:	ldr	x8, [x8, #8]
  431664:	ldur	x9, [x29, #-40]
  431668:	add	x8, x8, x9
  43166c:	ldrb	w10, [x8]
  431670:	strb	w10, [sp, #47]
  431674:	ldrb	w10, [sp, #47]
  431678:	cmp	w10, #0xc2
  43167c:	cset	w10, lt  // lt = tstop
  431680:	and	w10, w10, #0x1
  431684:	mov	w0, w10
  431688:	sxtw	x8, w0
  43168c:	cbz	x8, 431698 <_obstack_memory_used@@Base+0x134fc>
  431690:	stur	wzr, [x29, #-4]
  431694:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431698:	ldur	x8, [x29, #-40]
  43169c:	add	x8, x8, #0x2
  4316a0:	ldur	x9, [x29, #-32]
  4316a4:	ldr	x9, [x9, #88]
  4316a8:	cmp	x8, x9
  4316ac:	b.le	4316b8 <_obstack_memory_used@@Base+0x1351c>
  4316b0:	stur	wzr, [x29, #-4]
  4316b4:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  4316b8:	ldur	x8, [x29, #-32]
  4316bc:	ldr	x8, [x8, #8]
  4316c0:	ldur	x9, [x29, #-40]
  4316c4:	add	x9, x9, #0x1
  4316c8:	add	x8, x8, x9
  4316cc:	ldrb	w10, [x8]
  4316d0:	strb	w10, [sp, #46]
  4316d4:	ldrb	w10, [sp, #47]
  4316d8:	cmp	w10, #0xe0
  4316dc:	b.ge	431720 <_obstack_memory_used@@Base+0x13584>  // b.tcont
  4316e0:	ldrb	w8, [sp, #46]
  4316e4:	mov	w9, #0x1                   	// #1
  4316e8:	cmp	w8, #0x80
  4316ec:	str	w9, [sp, #12]
  4316f0:	b.lt	431704 <_obstack_memory_used@@Base+0x13568>  // b.tstop
  4316f4:	ldrb	w8, [sp, #46]
  4316f8:	cmp	w8, #0xbf
  4316fc:	cset	w8, gt
  431700:	str	w8, [sp, #12]
  431704:	ldr	w8, [sp, #12]
  431708:	mov	w9, #0x2                   	// #2
  43170c:	mov	w10, wzr
  431710:	tst	w8, #0x1
  431714:	csel	w8, w10, w9, ne  // ne = any
  431718:	stur	w8, [x29, #-4]
  43171c:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431720:	ldrb	w8, [sp, #47]
  431724:	cmp	w8, #0xf0
  431728:	b.ge	431758 <_obstack_memory_used@@Base+0x135bc>  // b.tcont
  43172c:	mov	w8, #0x3                   	// #3
  431730:	stur	w8, [x29, #-52]
  431734:	ldrb	w8, [sp, #47]
  431738:	cmp	w8, #0xe0
  43173c:	b.ne	431754 <_obstack_memory_used@@Base+0x135b8>  // b.any
  431740:	ldrb	w8, [sp, #46]
  431744:	cmp	w8, #0xa0
  431748:	b.ge	431754 <_obstack_memory_used@@Base+0x135b8>  // b.tcont
  43174c:	stur	wzr, [x29, #-4]
  431750:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431754:	b	431808 <_obstack_memory_used@@Base+0x1366c>
  431758:	ldrb	w8, [sp, #47]
  43175c:	cmp	w8, #0xf8
  431760:	b.ge	431790 <_obstack_memory_used@@Base+0x135f4>  // b.tcont
  431764:	mov	w8, #0x4                   	// #4
  431768:	stur	w8, [x29, #-52]
  43176c:	ldrb	w8, [sp, #47]
  431770:	cmp	w8, #0xf0
  431774:	b.ne	43178c <_obstack_memory_used@@Base+0x135f0>  // b.any
  431778:	ldrb	w8, [sp, #46]
  43177c:	cmp	w8, #0x90
  431780:	b.ge	43178c <_obstack_memory_used@@Base+0x135f0>  // b.tcont
  431784:	stur	wzr, [x29, #-4]
  431788:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  43178c:	b	431808 <_obstack_memory_used@@Base+0x1366c>
  431790:	ldrb	w8, [sp, #47]
  431794:	cmp	w8, #0xfc
  431798:	b.ge	4317c8 <_obstack_memory_used@@Base+0x1362c>  // b.tcont
  43179c:	mov	w8, #0x5                   	// #5
  4317a0:	stur	w8, [x29, #-52]
  4317a4:	ldrb	w8, [sp, #47]
  4317a8:	cmp	w8, #0xf8
  4317ac:	b.ne	4317c4 <_obstack_memory_used@@Base+0x13628>  // b.any
  4317b0:	ldrb	w8, [sp, #46]
  4317b4:	cmp	w8, #0x88
  4317b8:	b.ge	4317c4 <_obstack_memory_used@@Base+0x13628>  // b.tcont
  4317bc:	stur	wzr, [x29, #-4]
  4317c0:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  4317c4:	b	431808 <_obstack_memory_used@@Base+0x1366c>
  4317c8:	ldrb	w8, [sp, #47]
  4317cc:	cmp	w8, #0xfe
  4317d0:	b.ge	431800 <_obstack_memory_used@@Base+0x13664>  // b.tcont
  4317d4:	mov	w8, #0x6                   	// #6
  4317d8:	stur	w8, [x29, #-52]
  4317dc:	ldrb	w8, [sp, #47]
  4317e0:	cmp	w8, #0xfc
  4317e4:	b.ne	4317fc <_obstack_memory_used@@Base+0x13660>  // b.any
  4317e8:	ldrb	w8, [sp, #46]
  4317ec:	cmp	w8, #0x84
  4317f0:	b.ge	4317fc <_obstack_memory_used@@Base+0x13660>  // b.tcont
  4317f4:	stur	wzr, [x29, #-4]
  4317f8:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  4317fc:	b	431808 <_obstack_memory_used@@Base+0x1366c>
  431800:	stur	wzr, [x29, #-4]
  431804:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431808:	ldur	x8, [x29, #-40]
  43180c:	ldursw	x9, [x29, #-52]
  431810:	add	x8, x8, x9
  431814:	ldur	x9, [x29, #-32]
  431818:	ldr	x9, [x9, #88]
  43181c:	cmp	x8, x9
  431820:	b.le	43182c <_obstack_memory_used@@Base+0x13690>
  431824:	stur	wzr, [x29, #-4]
  431828:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  43182c:	mov	x8, #0x1                   	// #1
  431830:	str	x8, [sp, #48]
  431834:	ldr	x8, [sp, #48]
  431838:	ldursw	x9, [x29, #-52]
  43183c:	cmp	x8, x9
  431840:	b.ge	431894 <_obstack_memory_used@@Base+0x136f8>  // b.tcont
  431844:	ldur	x8, [x29, #-32]
  431848:	ldr	x8, [x8, #8]
  43184c:	ldur	x9, [x29, #-40]
  431850:	ldr	x10, [sp, #48]
  431854:	add	x9, x9, x10
  431858:	add	x8, x8, x9
  43185c:	ldrb	w11, [x8]
  431860:	strb	w11, [sp, #46]
  431864:	ldrb	w11, [sp, #46]
  431868:	cmp	w11, #0x80
  43186c:	b.lt	43187c <_obstack_memory_used@@Base+0x136e0>  // b.tstop
  431870:	ldrb	w8, [sp, #46]
  431874:	cmp	w8, #0xbf
  431878:	b.le	431884 <_obstack_memory_used@@Base+0x136e8>
  43187c:	stur	wzr, [x29, #-4]
  431880:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431884:	ldr	x8, [sp, #48]
  431888:	add	x8, x8, #0x1
  43188c:	str	x8, [sp, #48]
  431890:	b	431834 <_obstack_memory_used@@Base+0x13698>
  431894:	ldur	w8, [x29, #-52]
  431898:	stur	w8, [x29, #-4]
  43189c:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  4318a0:	ldur	x0, [x29, #-32]
  4318a4:	ldur	x1, [x29, #-40]
  4318a8:	bl	428300 <_obstack_memory_used@@Base+0xa164>
  4318ac:	stur	w0, [x29, #-52]
  4318b0:	ldur	x8, [x29, #-48]
  4318b4:	ldr	w9, [x8, #8]
  4318b8:	and	w9, w9, #0xff
  4318bc:	cmp	w9, #0x5
  4318c0:	b.ne	431938 <_obstack_memory_used@@Base+0x1379c>  // b.any
  4318c4:	ldur	w8, [x29, #-52]
  4318c8:	cmp	w8, #0x1
  4318cc:	b.gt	4318d8 <_obstack_memory_used@@Base+0x1373c>
  4318d0:	stur	wzr, [x29, #-4]
  4318d4:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  4318d8:	ldur	x8, [x29, #-16]
  4318dc:	ldr	x8, [x8, #216]
  4318e0:	and	x8, x8, #0x40
  4318e4:	cbnz	x8, 431900 <_obstack_memory_used@@Base+0x13764>
  4318e8:	ldur	x8, [x29, #-32]
  4318ec:	ldr	x8, [x8, #8]
  4318f0:	ldur	x9, [x29, #-40]
  4318f4:	ldrb	w10, [x8, x9]
  4318f8:	cmp	w10, #0xa
  4318fc:	b.eq	431924 <_obstack_memory_used@@Base+0x13788>  // b.none
  431900:	ldur	x8, [x29, #-16]
  431904:	ldr	x8, [x8, #216]
  431908:	and	x8, x8, #0x80
  43190c:	cbz	x8, 43192c <_obstack_memory_used@@Base+0x13790>
  431910:	ldur	x8, [x29, #-32]
  431914:	ldr	x8, [x8, #8]
  431918:	ldur	x9, [x29, #-40]
  43191c:	ldrb	w10, [x8, x9]
  431920:	cbnz	w10, 43192c <_obstack_memory_used@@Base+0x13790>
  431924:	stur	wzr, [x29, #-4]
  431928:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  43192c:	ldur	w8, [x29, #-52]
  431930:	stur	w8, [x29, #-4]
  431934:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431938:	ldur	x0, [x29, #-32]
  43193c:	ldur	x1, [x29, #-40]
  431940:	bl	431da8 <_obstack_memory_used@@Base+0x13c0c>
  431944:	str	w0, [sp, #56]
  431948:	ldr	w8, [sp, #56]
  43194c:	cmp	w8, #0x1
  431950:	b.gt	431960 <_obstack_memory_used@@Base+0x137c4>
  431954:	ldur	w8, [x29, #-52]
  431958:	cmp	w8, #0x1
  43195c:	b.le	431968 <_obstack_memory_used@@Base+0x137cc>
  431960:	ldur	w8, [x29, #-52]
  431964:	cbnz	w8, 431970 <_obstack_memory_used@@Base+0x137d4>
  431968:	stur	wzr, [x29, #-4]
  43196c:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431970:	ldur	x8, [x29, #-48]
  431974:	ldr	w9, [x8, #8]
  431978:	and	w9, w9, #0xff
  43197c:	cmp	w9, #0x6
  431980:	b.ne	431b58 <_obstack_memory_used@@Base+0x139bc>  // b.any
  431984:	ldur	x8, [x29, #-48]
  431988:	ldr	x8, [x8]
  43198c:	str	x8, [sp, #32]
  431990:	str	wzr, [sp, #28]
  431994:	ldr	x8, [sp, #32]
  431998:	ldr	x8, [x8, #64]
  43199c:	cbnz	x8, 4319b8 <_obstack_memory_used@@Base+0x1381c>
  4319a0:	ldr	x8, [sp, #32]
  4319a4:	ldr	x8, [x8, #72]
  4319a8:	cbnz	x8, 4319b8 <_obstack_memory_used@@Base+0x1381c>
  4319ac:	ldr	x8, [sp, #32]
  4319b0:	ldr	x8, [x8, #40]
  4319b4:	cbz	x8, 4319cc <_obstack_memory_used@@Base+0x13830>
  4319b8:	ldur	x0, [x29, #-32]
  4319bc:	ldur	x1, [x29, #-40]
  4319c0:	bl	4245ec <_obstack_memory_used@@Base+0x6450>
  4319c4:	str	w0, [sp, #8]
  4319c8:	b	4319d4 <_obstack_memory_used@@Base+0x13838>
  4319cc:	mov	w8, wzr
  4319d0:	str	w8, [sp, #8]
  4319d4:	ldr	w8, [sp, #8]
  4319d8:	str	w8, [sp, #24]
  4319dc:	str	xzr, [sp, #48]
  4319e0:	ldr	x8, [sp, #48]
  4319e4:	ldr	x9, [sp, #32]
  4319e8:	ldr	x9, [x9, #40]
  4319ec:	cmp	x8, x9
  4319f0:	b.ge	431a2c <_obstack_memory_used@@Base+0x13890>  // b.tcont
  4319f4:	ldr	w8, [sp, #24]
  4319f8:	ldr	x9, [sp, #32]
  4319fc:	ldr	x9, [x9]
  431a00:	ldr	x10, [sp, #48]
  431a04:	ldr	w11, [x9, x10, lsl #2]
  431a08:	cmp	w8, w11
  431a0c:	b.ne	431a1c <_obstack_memory_used@@Base+0x13880>  // b.any
  431a10:	ldur	w8, [x29, #-52]
  431a14:	str	w8, [sp, #28]
  431a18:	b	431af0 <_obstack_memory_used@@Base+0x13954>
  431a1c:	ldr	x8, [sp, #48]
  431a20:	add	x8, x8, #0x1
  431a24:	str	x8, [sp, #48]
  431a28:	b	4319e0 <_obstack_memory_used@@Base+0x13844>
  431a2c:	str	xzr, [sp, #48]
  431a30:	ldr	x8, [sp, #48]
  431a34:	ldr	x9, [sp, #32]
  431a38:	ldr	x9, [x9, #72]
  431a3c:	cmp	x8, x9
  431a40:	b.ge	431a84 <_obstack_memory_used@@Base+0x138e8>  // b.tcont
  431a44:	ldr	x8, [sp, #32]
  431a48:	ldr	x8, [x8, #24]
  431a4c:	ldr	x9, [sp, #48]
  431a50:	ldr	x8, [x8, x9, lsl #3]
  431a54:	str	x8, [sp, #16]
  431a58:	ldr	w0, [sp, #24]
  431a5c:	ldr	x1, [sp, #16]
  431a60:	bl	402880 <iswctype@plt>
  431a64:	cbz	w0, 431a74 <_obstack_memory_used@@Base+0x138d8>
  431a68:	ldur	w8, [x29, #-52]
  431a6c:	str	w8, [sp, #28]
  431a70:	b	431af0 <_obstack_memory_used@@Base+0x13954>
  431a74:	ldr	x8, [sp, #48]
  431a78:	add	x8, x8, #0x1
  431a7c:	str	x8, [sp, #48]
  431a80:	b	431a30 <_obstack_memory_used@@Base+0x13894>
  431a84:	str	xzr, [sp, #48]
  431a88:	ldr	x8, [sp, #48]
  431a8c:	ldr	x9, [sp, #32]
  431a90:	ldr	x9, [x9, #64]
  431a94:	cmp	x8, x9
  431a98:	b.ge	431af0 <_obstack_memory_used@@Base+0x13954>  // b.tcont
  431a9c:	ldr	x8, [sp, #32]
  431aa0:	ldr	x8, [x8, #8]
  431aa4:	ldr	x9, [sp, #48]
  431aa8:	ldr	w10, [x8, x9, lsl #2]
  431aac:	ldr	w11, [sp, #24]
  431ab0:	cmp	w10, w11
  431ab4:	b.hi	431ae0 <_obstack_memory_used@@Base+0x13944>  // b.pmore
  431ab8:	ldr	w8, [sp, #24]
  431abc:	ldr	x9, [sp, #32]
  431ac0:	ldr	x9, [x9, #16]
  431ac4:	ldr	x10, [sp, #48]
  431ac8:	ldr	w11, [x9, x10, lsl #2]
  431acc:	cmp	w8, w11
  431ad0:	b.hi	431ae0 <_obstack_memory_used@@Base+0x13944>  // b.pmore
  431ad4:	ldur	w8, [x29, #-52]
  431ad8:	str	w8, [sp, #28]
  431adc:	b	431af0 <_obstack_memory_used@@Base+0x13954>
  431ae0:	ldr	x8, [sp, #48]
  431ae4:	add	x8, x8, #0x1
  431ae8:	str	x8, [sp, #48]
  431aec:	b	431a88 <_obstack_memory_used@@Base+0x138ec>
  431af0:	ldr	x8, [sp, #32]
  431af4:	ldrb	w9, [x8, #32]
  431af8:	and	w9, w9, #0x1
  431afc:	and	w9, w9, #0xff
  431b00:	cbnz	w9, 431b10 <_obstack_memory_used@@Base+0x13974>
  431b04:	ldr	w8, [sp, #28]
  431b08:	stur	w8, [x29, #-4]
  431b0c:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431b10:	ldr	w8, [sp, #28]
  431b14:	cmp	w8, #0x0
  431b18:	cset	w8, le
  431b1c:	tbnz	w8, #0, 431b28 <_obstack_memory_used@@Base+0x1398c>
  431b20:	stur	wzr, [x29, #-4]
  431b24:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431b28:	ldr	w8, [sp, #56]
  431b2c:	ldur	w9, [x29, #-52]
  431b30:	cmp	w8, w9
  431b34:	b.le	431b44 <_obstack_memory_used@@Base+0x139a8>
  431b38:	ldr	w8, [sp, #56]
  431b3c:	str	w8, [sp, #4]
  431b40:	b	431b4c <_obstack_memory_used@@Base+0x139b0>
  431b44:	ldur	w8, [x29, #-52]
  431b48:	str	w8, [sp, #4]
  431b4c:	ldr	w8, [sp, #4]
  431b50:	stur	w8, [x29, #-4]
  431b54:	b	431b5c <_obstack_memory_used@@Base+0x139c0>
  431b58:	stur	wzr, [x29, #-4]
  431b5c:	ldur	w0, [x29, #-4]
  431b60:	ldp	x29, x30, [sp, #112]
  431b64:	add	sp, sp, #0x80
  431b68:	ret
  431b6c:	sub	sp, sp, #0x40
  431b70:	stp	x29, x30, [sp, #48]
  431b74:	add	x29, sp, #0x30
  431b78:	stur	x0, [x29, #-16]
  431b7c:	str	x1, [sp, #24]
  431b80:	str	x2, [sp, #16]
  431b84:	ldur	x8, [x29, #-16]
  431b88:	ldr	x8, [x8, #8]
  431b8c:	ldr	x9, [sp, #16]
  431b90:	add	x8, x8, x9
  431b94:	ldrb	w10, [x8]
  431b98:	strb	w10, [sp, #15]
  431b9c:	ldr	x8, [sp, #24]
  431ba0:	ldr	w10, [x8, #8]
  431ba4:	and	w10, w10, #0xff
  431ba8:	subs	w10, w10, #0x1
  431bac:	mov	w8, w10
  431bb0:	ubfx	x8, x8, #0, #32
  431bb4:	cmp	x8, #0x6
  431bb8:	str	x8, [sp]
  431bbc:	b.hi	431c98 <_obstack_memory_used@@Base+0x13afc>  // b.pmore
  431bc0:	adrp	x8, 439000 <_obstack_memory_used@@Base+0x1ae64>
  431bc4:	add	x8, x8, #0xed8
  431bc8:	ldr	x11, [sp]
  431bcc:	ldrsw	x10, [x8, x11, lsl #2]
  431bd0:	add	x9, x8, x10
  431bd4:	br	x9
  431bd8:	ldr	x8, [sp, #24]
  431bdc:	ldrb	w9, [x8]
  431be0:	ldrb	w10, [sp, #15]
  431be4:	cmp	w9, w10
  431be8:	b.eq	431bfc <_obstack_memory_used@@Base+0x13a60>  // b.none
  431bec:	mov	w8, wzr
  431bf0:	and	w8, w8, #0x1
  431bf4:	sturb	w8, [x29, #-1]
  431bf8:	b	431d94 <_obstack_memory_used@@Base+0x13bf8>
  431bfc:	b	431ca8 <_obstack_memory_used@@Base+0x13b0c>
  431c00:	ldr	x8, [sp, #24]
  431c04:	ldr	x0, [x8]
  431c08:	ldrb	w9, [sp, #15]
  431c0c:	mov	w1, w9
  431c10:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  431c14:	tbnz	w0, #0, 431c28 <_obstack_memory_used@@Base+0x13a8c>
  431c18:	mov	w8, wzr
  431c1c:	and	w8, w8, #0x1
  431c20:	sturb	w8, [x29, #-1]
  431c24:	b	431d94 <_obstack_memory_used@@Base+0x13bf8>
  431c28:	b	431ca8 <_obstack_memory_used@@Base+0x13b0c>
  431c2c:	ldrb	w8, [sp, #15]
  431c30:	cmp	w8, #0x80
  431c34:	b.lt	431c48 <_obstack_memory_used@@Base+0x13aac>  // b.tstop
  431c38:	mov	w8, wzr
  431c3c:	and	w8, w8, #0x1
  431c40:	sturb	w8, [x29, #-1]
  431c44:	b	431d94 <_obstack_memory_used@@Base+0x13bf8>
  431c48:	ldrb	w8, [sp, #15]
  431c4c:	cmp	w8, #0xa
  431c50:	b.ne	431c68 <_obstack_memory_used@@Base+0x13acc>  // b.any
  431c54:	ldur	x8, [x29, #-16]
  431c58:	ldr	x8, [x8, #152]
  431c5c:	ldr	x8, [x8, #216]
  431c60:	and	x8, x8, #0x40
  431c64:	cbz	x8, 431c84 <_obstack_memory_used@@Base+0x13ae8>
  431c68:	ldrb	w8, [sp, #15]
  431c6c:	cbnz	w8, 431c94 <_obstack_memory_used@@Base+0x13af8>
  431c70:	ldur	x8, [x29, #-16]
  431c74:	ldr	x8, [x8, #152]
  431c78:	ldr	x8, [x8, #216]
  431c7c:	and	x8, x8, #0x80
  431c80:	cbz	x8, 431c94 <_obstack_memory_used@@Base+0x13af8>
  431c84:	mov	w8, wzr
  431c88:	and	w8, w8, #0x1
  431c8c:	sturb	w8, [x29, #-1]
  431c90:	b	431d94 <_obstack_memory_used@@Base+0x13bf8>
  431c94:	b	431ca8 <_obstack_memory_used@@Base+0x13b0c>
  431c98:	mov	w8, wzr
  431c9c:	and	w8, w8, #0x1
  431ca0:	sturb	w8, [x29, #-1]
  431ca4:	b	431d94 <_obstack_memory_used@@Base+0x13bf8>
  431ca8:	ldr	x8, [sp, #24]
  431cac:	mov	x9, #0x8                   	// #8
  431cb0:	ldr	w10, [x8, #8]
  431cb4:	lsr	w9, w10, w9
  431cb8:	and	w9, w9, #0x3ff
  431cbc:	cbz	w9, 431d88 <_obstack_memory_used@@Base+0x13bec>
  431cc0:	ldur	x0, [x29, #-16]
  431cc4:	ldr	x1, [sp, #16]
  431cc8:	ldur	x8, [x29, #-16]
  431ccc:	ldr	w2, [x8, #160]
  431cd0:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  431cd4:	str	w0, [sp, #8]
  431cd8:	ldr	x8, [sp, #24]
  431cdc:	mov	x9, #0x8                   	// #8
  431ce0:	ldr	w10, [x8, #8]
  431ce4:	lsr	w9, w10, w9
  431ce8:	and	w9, w9, #0x3ff
  431cec:	and	w9, w9, #0x4
  431cf0:	cbz	w9, 431d00 <_obstack_memory_used@@Base+0x13b64>
  431cf4:	ldr	w8, [sp, #8]
  431cf8:	and	w8, w8, #0x1
  431cfc:	cbz	w8, 431d78 <_obstack_memory_used@@Base+0x13bdc>
  431d00:	ldr	x8, [sp, #24]
  431d04:	mov	x9, #0x8                   	// #8
  431d08:	ldr	w10, [x8, #8]
  431d0c:	lsr	w9, w10, w9
  431d10:	and	w9, w9, #0x3ff
  431d14:	and	w9, w9, #0x8
  431d18:	cbz	w9, 431d28 <_obstack_memory_used@@Base+0x13b8c>
  431d1c:	ldr	w8, [sp, #8]
  431d20:	and	w8, w8, #0x1
  431d24:	cbnz	w8, 431d78 <_obstack_memory_used@@Base+0x13bdc>
  431d28:	ldr	x8, [sp, #24]
  431d2c:	mov	x9, #0x8                   	// #8
  431d30:	ldr	w10, [x8, #8]
  431d34:	lsr	w9, w10, w9
  431d38:	and	w9, w9, #0x3ff
  431d3c:	and	w9, w9, #0x20
  431d40:	cbz	w9, 431d50 <_obstack_memory_used@@Base+0x13bb4>
  431d44:	ldr	w8, [sp, #8]
  431d48:	and	w8, w8, #0x2
  431d4c:	cbz	w8, 431d78 <_obstack_memory_used@@Base+0x13bdc>
  431d50:	ldr	x8, [sp, #24]
  431d54:	mov	x9, #0x8                   	// #8
  431d58:	ldr	w10, [x8, #8]
  431d5c:	lsr	w9, w10, w9
  431d60:	and	w9, w9, #0x3ff
  431d64:	and	w9, w9, #0x80
  431d68:	cbz	w9, 431d88 <_obstack_memory_used@@Base+0x13bec>
  431d6c:	ldr	w8, [sp, #8]
  431d70:	and	w8, w8, #0x8
  431d74:	cbnz	w8, 431d88 <_obstack_memory_used@@Base+0x13bec>
  431d78:	mov	w8, wzr
  431d7c:	and	w8, w8, #0x1
  431d80:	sturb	w8, [x29, #-1]
  431d84:	b	431d94 <_obstack_memory_used@@Base+0x13bf8>
  431d88:	mov	w8, #0x1                   	// #1
  431d8c:	and	w8, w8, #0x1
  431d90:	sturb	w8, [x29, #-1]
  431d94:	ldurb	w8, [x29, #-1]
  431d98:	and	w0, w8, #0x1
  431d9c:	ldp	x29, x30, [sp, #48]
  431da0:	add	sp, sp, #0x40
  431da4:	ret
  431da8:	sub	sp, sp, #0x10
  431dac:	mov	w8, #0x1                   	// #1
  431db0:	str	x0, [sp, #8]
  431db4:	str	x1, [sp]
  431db8:	mov	w0, w8
  431dbc:	add	sp, sp, #0x10
  431dc0:	ret
  431dc4:	sub	sp, sp, #0xa0
  431dc8:	stp	x29, x30, [sp, #144]
  431dcc:	add	x29, sp, #0x90
  431dd0:	stur	x0, [x29, #-16]
  431dd4:	stur	x1, [x29, #-24]
  431dd8:	ldur	x8, [x29, #-16]
  431ddc:	ldr	x8, [x8, #152]
  431de0:	stur	x8, [x29, #-32]
  431de4:	stur	xzr, [x29, #-48]
  431de8:	ldur	x8, [x29, #-48]
  431dec:	ldur	x9, [x29, #-24]
  431df0:	ldr	x9, [x9, #16]
  431df4:	cmp	x8, x9
  431df8:	b.ge	4321b4 <_obstack_memory_used@@Base+0x14018>  // b.tcont
  431dfc:	ldur	x8, [x29, #-24]
  431e00:	mov	x9, #0x10                  	// #16
  431e04:	ldr	x8, [x8, #24]
  431e08:	ldur	x10, [x29, #-48]
  431e0c:	ldr	x8, [x8, x10, lsl #3]
  431e10:	str	x8, [sp, #48]
  431e14:	ldur	x8, [x29, #-32]
  431e18:	ldr	x8, [x8]
  431e1c:	ldr	x10, [sp, #48]
  431e20:	mul	x9, x9, x10
  431e24:	add	x8, x8, x9
  431e28:	ldr	w11, [x8, #8]
  431e2c:	lsr	w11, w11, #20
  431e30:	and	w11, w11, #0x1
  431e34:	cbnz	w11, 431e3c <_obstack_memory_used@@Base+0x13ca0>
  431e38:	b	4321a4 <_obstack_memory_used@@Base+0x14008>
  431e3c:	ldur	x8, [x29, #-32]
  431e40:	ldr	x8, [x8]
  431e44:	ldr	x9, [sp, #48]
  431e48:	mov	x10, #0x10                  	// #16
  431e4c:	mul	x9, x10, x9
  431e50:	add	x8, x8, x9
  431e54:	mov	x9, #0x8                   	// #8
  431e58:	ldr	w11, [x8, #8]
  431e5c:	lsr	w9, w11, w9
  431e60:	and	w9, w9, #0x3ff
  431e64:	cbz	w9, 431f78 <_obstack_memory_used@@Base+0x13ddc>
  431e68:	ldur	x0, [x29, #-16]
  431e6c:	ldur	x8, [x29, #-16]
  431e70:	ldr	x1, [x8, #72]
  431e74:	ldur	x8, [x29, #-16]
  431e78:	ldr	w2, [x8, #160]
  431e7c:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  431e80:	str	w0, [sp, #28]
  431e84:	ldur	x8, [x29, #-32]
  431e88:	ldr	x8, [x8]
  431e8c:	ldr	x9, [sp, #48]
  431e90:	mov	x10, #0x10                  	// #16
  431e94:	mul	x9, x10, x9
  431e98:	add	x8, x8, x9
  431e9c:	mov	x9, #0x8                   	// #8
  431ea0:	ldr	w11, [x8, #8]
  431ea4:	lsr	w9, w11, w9
  431ea8:	and	w9, w9, #0x3ff
  431eac:	and	w9, w9, #0x4
  431eb0:	cbz	w9, 431ec0 <_obstack_memory_used@@Base+0x13d24>
  431eb4:	ldr	w8, [sp, #28]
  431eb8:	and	w8, w8, #0x1
  431ebc:	cbz	w8, 431f74 <_obstack_memory_used@@Base+0x13dd8>
  431ec0:	ldur	x8, [x29, #-32]
  431ec4:	ldr	x8, [x8]
  431ec8:	ldr	x9, [sp, #48]
  431ecc:	mov	x10, #0x10                  	// #16
  431ed0:	mul	x9, x10, x9
  431ed4:	add	x8, x8, x9
  431ed8:	mov	x9, #0x8                   	// #8
  431edc:	ldr	w11, [x8, #8]
  431ee0:	lsr	w9, w11, w9
  431ee4:	and	w9, w9, #0x3ff
  431ee8:	and	w9, w9, #0x8
  431eec:	cbz	w9, 431efc <_obstack_memory_used@@Base+0x13d60>
  431ef0:	ldr	w8, [sp, #28]
  431ef4:	and	w8, w8, #0x1
  431ef8:	cbnz	w8, 431f74 <_obstack_memory_used@@Base+0x13dd8>
  431efc:	ldur	x8, [x29, #-32]
  431f00:	ldr	x8, [x8]
  431f04:	ldr	x9, [sp, #48]
  431f08:	mov	x10, #0x10                  	// #16
  431f0c:	mul	x9, x10, x9
  431f10:	add	x8, x8, x9
  431f14:	mov	x9, #0x8                   	// #8
  431f18:	ldr	w11, [x8, #8]
  431f1c:	lsr	w9, w11, w9
  431f20:	and	w9, w9, #0x3ff
  431f24:	and	w9, w9, #0x20
  431f28:	cbz	w9, 431f38 <_obstack_memory_used@@Base+0x13d9c>
  431f2c:	ldr	w8, [sp, #28]
  431f30:	and	w8, w8, #0x2
  431f34:	cbz	w8, 431f74 <_obstack_memory_used@@Base+0x13dd8>
  431f38:	ldur	x8, [x29, #-32]
  431f3c:	ldr	x8, [x8]
  431f40:	ldr	x9, [sp, #48]
  431f44:	mov	x10, #0x10                  	// #16
  431f48:	mul	x9, x10, x9
  431f4c:	add	x8, x8, x9
  431f50:	mov	x9, #0x8                   	// #8
  431f54:	ldr	w11, [x8, #8]
  431f58:	lsr	w9, w11, w9
  431f5c:	and	w9, w9, #0x3ff
  431f60:	and	w9, w9, #0x80
  431f64:	cbz	w9, 431f78 <_obstack_memory_used@@Base+0x13ddc>
  431f68:	ldr	w8, [sp, #28]
  431f6c:	and	w8, w8, #0x8
  431f70:	cbnz	w8, 431f78 <_obstack_memory_used@@Base+0x13ddc>
  431f74:	b	4321a4 <_obstack_memory_used@@Base+0x14008>
  431f78:	ldur	x0, [x29, #-32]
  431f7c:	ldr	x1, [sp, #48]
  431f80:	ldur	x2, [x29, #-16]
  431f84:	ldur	x8, [x29, #-16]
  431f88:	ldr	x3, [x8, #72]
  431f8c:	bl	431600 <_obstack_memory_used@@Base+0x13464>
  431f90:	str	w0, [sp, #44]
  431f94:	ldr	w9, [sp, #44]
  431f98:	cbnz	w9, 431fa0 <_obstack_memory_used@@Base+0x13e04>
  431f9c:	b	4321a4 <_obstack_memory_used@@Base+0x14008>
  431fa0:	ldur	x8, [x29, #-16]
  431fa4:	ldr	x8, [x8, #72]
  431fa8:	ldrsw	x9, [sp, #44]
  431fac:	add	x8, x8, x9
  431fb0:	str	x8, [sp, #32]
  431fb4:	ldur	x8, [x29, #-16]
  431fb8:	ldr	w10, [x8, #224]
  431fbc:	ldr	w11, [sp, #44]
  431fc0:	cmp	w10, w11
  431fc4:	b.ge	431fd4 <_obstack_memory_used@@Base+0x13e38>  // b.tcont
  431fc8:	ldr	w8, [sp, #44]
  431fcc:	str	w8, [sp, #12]
  431fd0:	b	431fe0 <_obstack_memory_used@@Base+0x13e44>
  431fd4:	ldur	x8, [x29, #-16]
  431fd8:	ldr	w9, [x8, #224]
  431fdc:	str	w9, [sp, #12]
  431fe0:	ldr	w8, [sp, #12]
  431fe4:	ldur	x9, [x29, #-16]
  431fe8:	str	w8, [x9, #224]
  431fec:	ldur	x0, [x29, #-16]
  431ff0:	ldr	x1, [sp, #32]
  431ff4:	bl	42f8fc <_obstack_memory_used@@Base+0x11760>
  431ff8:	stur	w0, [x29, #-36]
  431ffc:	ldur	w8, [x29, #-36]
  432000:	cmp	w8, #0x0
  432004:	cset	w8, ne  // ne = any
  432008:	and	w8, w8, #0x1
  43200c:	mov	w1, w8
  432010:	sxtw	x9, w1
  432014:	cbz	x9, 432024 <_obstack_memory_used@@Base+0x13e88>
  432018:	ldur	w8, [x29, #-36]
  43201c:	stur	w8, [x29, #-4]
  432020:	b	4321b8 <_obstack_memory_used@@Base+0x1401c>
  432024:	ldur	x8, [x29, #-32]
  432028:	ldr	x8, [x8, #24]
  43202c:	ldr	x9, [sp, #48]
  432030:	ldr	x8, [x8, x9, lsl #3]
  432034:	mov	x9, #0xffffffffffffffff    	// #-1
  432038:	cmp	x8, x9
  43203c:	b.eq	432044 <_obstack_memory_used@@Base+0x13ea8>  // b.none
  432040:	b	432044 <_obstack_memory_used@@Base+0x13ea8>
  432044:	ldur	x8, [x29, #-32]
  432048:	ldr	x8, [x8, #48]
  43204c:	ldur	x9, [x29, #-32]
  432050:	mov	x10, #0x18                  	// #24
  432054:	ldr	x9, [x9, #24]
  432058:	ldr	x11, [sp, #48]
  43205c:	mov	x12, #0x8                   	// #8
  432060:	ldr	x9, [x9, x11, lsl #3]
  432064:	mul	x9, x10, x9
  432068:	add	x8, x8, x9
  43206c:	str	x8, [sp, #56]
  432070:	ldur	x8, [x29, #-16]
  432074:	ldr	x8, [x8, #184]
  432078:	ldr	x9, [sp, #32]
  43207c:	mul	x9, x12, x9
  432080:	add	x8, x8, x9
  432084:	ldr	x8, [x8]
  432088:	str	x8, [sp, #16]
  43208c:	ldr	x8, [sp, #16]
  432090:	cbnz	x8, 4320ac <_obstack_memory_used@@Base+0x13f10>
  432094:	ldr	x8, [sp, #56]
  432098:	ldr	q0, [x8]
  43209c:	str	q0, [sp, #64]
  4320a0:	ldr	x8, [x8, #16]
  4320a4:	str	x8, [sp, #80]
  4320a8:	b	4320ec <_obstack_memory_used@@Base+0x13f50>
  4320ac:	ldr	x8, [sp, #16]
  4320b0:	ldr	x1, [x8, #80]
  4320b4:	ldr	x2, [sp, #56]
  4320b8:	add	x0, sp, #0x40
  4320bc:	bl	42f4c4 <_obstack_memory_used@@Base+0x11328>
  4320c0:	stur	w0, [x29, #-36]
  4320c4:	ldur	w9, [x29, #-36]
  4320c8:	cmp	w9, #0x0
  4320cc:	cset	w9, ne  // ne = any
  4320d0:	and	w9, w9, #0x1
  4320d4:	mov	w1, w9
  4320d8:	sxtw	x8, w1
  4320dc:	cbz	x8, 4320ec <_obstack_memory_used@@Base+0x13f50>
  4320e0:	ldur	w8, [x29, #-36]
  4320e4:	stur	w8, [x29, #-4]
  4320e8:	b	4321b8 <_obstack_memory_used@@Base+0x1401c>
  4320ec:	ldur	x0, [x29, #-16]
  4320f0:	ldr	x8, [sp, #32]
  4320f4:	subs	x1, x8, #0x1
  4320f8:	ldur	x8, [x29, #-16]
  4320fc:	ldr	w2, [x8, #160]
  432100:	bl	42daf8 <_obstack_memory_used@@Base+0xf95c>
  432104:	str	w0, [sp, #28]
  432108:	ldur	x1, [x29, #-32]
  43210c:	ldr	w3, [sp, #28]
  432110:	sub	x0, x29, #0x24
  432114:	add	x2, sp, #0x40
  432118:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  43211c:	ldur	x8, [x29, #-16]
  432120:	ldr	x8, [x8, #184]
  432124:	ldr	x9, [sp, #32]
  432128:	mov	x10, #0x8                   	// #8
  43212c:	mul	x9, x10, x9
  432130:	add	x8, x8, x9
  432134:	str	x0, [x8]
  432138:	ldr	x8, [sp, #16]
  43213c:	cbz	x8, 43214c <_obstack_memory_used@@Base+0x13fb0>
  432140:	add	x8, sp, #0x40
  432144:	ldr	x0, [x8, #16]
  432148:	bl	402b40 <free@plt>
  43214c:	ldur	x8, [x29, #-16]
  432150:	ldr	x8, [x8, #184]
  432154:	ldr	x9, [sp, #32]
  432158:	mov	x10, #0x8                   	// #8
  43215c:	mul	x9, x10, x9
  432160:	add	x8, x8, x9
  432164:	ldr	x8, [x8]
  432168:	mov	w11, #0x0                   	// #0
  43216c:	str	w11, [sp, #8]
  432170:	cbnz	x8, 432184 <_obstack_memory_used@@Base+0x13fe8>
  432174:	ldur	w8, [x29, #-36]
  432178:	cmp	w8, #0x0
  43217c:	cset	w8, ne  // ne = any
  432180:	str	w8, [sp, #8]
  432184:	ldr	w8, [sp, #8]
  432188:	and	w8, w8, #0x1
  43218c:	mov	w0, w8
  432190:	sxtw	x9, w0
  432194:	cbz	x9, 4321a4 <_obstack_memory_used@@Base+0x14008>
  432198:	ldur	w8, [x29, #-36]
  43219c:	stur	w8, [x29, #-4]
  4321a0:	b	4321b8 <_obstack_memory_used@@Base+0x1401c>
  4321a4:	ldur	x8, [x29, #-48]
  4321a8:	add	x8, x8, #0x1
  4321ac:	stur	x8, [x29, #-48]
  4321b0:	b	431de8 <_obstack_memory_used@@Base+0x13c4c>
  4321b4:	stur	wzr, [x29, #-4]
  4321b8:	ldur	w0, [x29, #-4]
  4321bc:	ldp	x29, x30, [sp, #144]
  4321c0:	add	sp, sp, #0xa0
  4321c4:	ret
  4321c8:	stp	x29, x30, [sp, #-16]!
  4321cc:	mov	x29, sp
  4321d0:	sub	sp, sp, #0xf0
  4321d4:	mov	w8, #0x0                   	// #0
  4321d8:	mov	x9, xzr
  4321dc:	mov	x10, #0x3800                	// #14336
  4321e0:	stur	x0, [x29, #-16]
  4321e4:	stur	x1, [x29, #-24]
  4321e8:	sturb	w8, [x29, #-53]
  4321ec:	sturb	w8, [x29, #-73]
  4321f0:	sturb	w8, [x29, #-74]
  4321f4:	stur	x9, [x29, #-104]
  4321f8:	mov	x0, x10
  4321fc:	bl	402890 <malloc@plt>
  432200:	stur	x0, [x29, #-200]
  432204:	ldur	x9, [x29, #-200]
  432208:	cmp	x9, #0x0
  43220c:	cset	w8, eq  // eq = none
  432210:	and	w8, w8, #0x1
  432214:	mov	w0, w8
  432218:	sxtw	x9, w0
  43221c:	cbz	x9, 432230 <_obstack_memory_used@@Base+0x14094>
  432220:	mov	w8, wzr
  432224:	and	w8, w8, #0x1
  432228:	sturb	w8, [x29, #-1]
  43222c:	b	432c04 <_obstack_memory_used@@Base+0x14a68>
  432230:	mov	w8, #0x1                   	// #1
  432234:	sturb	w8, [x29, #-73]
  432238:	ldur	x9, [x29, #-200]
  43223c:	stur	x9, [x29, #-152]
  432240:	ldur	x9, [x29, #-200]
  432244:	mov	x10, #0x1800                	// #6144
  432248:	add	x9, x9, x10
  43224c:	stur	x9, [x29, #-160]
  432250:	ldur	x9, [x29, #-24]
  432254:	mov	x10, xzr
  432258:	str	x10, [x9, #88]
  43225c:	ldur	x9, [x29, #-24]
  432260:	str	x10, [x9, #96]
  432264:	ldur	x0, [x29, #-16]
  432268:	ldur	x1, [x29, #-24]
  43226c:	ldur	x2, [x29, #-152]
  432270:	ldur	x3, [x29, #-160]
  432274:	bl	432c18 <_obstack_memory_used@@Base+0x14a7c>
  432278:	stur	x0, [x29, #-88]
  43227c:	ldur	x9, [x29, #-88]
  432280:	cmp	x9, #0x0
  432284:	cset	w8, le
  432288:	and	w8, w8, #0x1
  43228c:	mov	w0, w8
  432290:	sxtw	x9, w0
  432294:	cbz	x9, 432318 <_obstack_memory_used@@Base+0x1417c>
  432298:	ldurb	w8, [x29, #-73]
  43229c:	tbnz	w8, #0, 4322a4 <_obstack_memory_used@@Base+0x14108>
  4322a0:	b	4322ac <_obstack_memory_used@@Base+0x14110>
  4322a4:	ldur	x0, [x29, #-200]
  4322a8:	bl	402b40 <free@plt>
  4322ac:	ldur	x8, [x29, #-88]
  4322b0:	cbnz	x8, 432308 <_obstack_memory_used@@Base+0x1416c>
  4322b4:	mov	x0, #0x8                   	// #8
  4322b8:	mov	x1, #0x100                 	// #256
  4322bc:	bl	4029a0 <calloc@plt>
  4322c0:	ldur	x8, [x29, #-24]
  4322c4:	str	x0, [x8, #88]
  4322c8:	ldur	x8, [x29, #-24]
  4322cc:	ldr	x8, [x8, #88]
  4322d0:	cmp	x8, #0x0
  4322d4:	cset	w9, eq  // eq = none
  4322d8:	and	w9, w9, #0x1
  4322dc:	mov	w0, w9
  4322e0:	sxtw	x8, w0
  4322e4:	cbz	x8, 4322f8 <_obstack_memory_used@@Base+0x1415c>
  4322e8:	mov	w8, wzr
  4322ec:	and	w8, w8, #0x1
  4322f0:	sturb	w8, [x29, #-1]
  4322f4:	b	432c04 <_obstack_memory_used@@Base+0x14a68>
  4322f8:	mov	w8, #0x1                   	// #1
  4322fc:	and	w8, w8, #0x1
  432300:	sturb	w8, [x29, #-1]
  432304:	b	432c04 <_obstack_memory_used@@Base+0x14a68>
  432308:	mov	w8, wzr
  43230c:	and	w8, w8, #0x1
  432310:	sturb	w8, [x29, #-1]
  432314:	b	432c04 <_obstack_memory_used@@Base+0x14a68>
  432318:	ldur	x8, [x29, #-88]
  43231c:	add	x1, x8, #0x1
  432320:	sub	x0, x29, #0x90
  432324:	bl	429f94 <_obstack_memory_used@@Base+0xbdf8>
  432328:	stur	w0, [x29, #-28]
  43232c:	ldur	w9, [x29, #-28]
  432330:	cmp	w9, #0x0
  432334:	cset	w9, ne  // ne = any
  432338:	and	w9, w9, #0x1
  43233c:	mov	w1, w9
  432340:	sxtw	x8, w1
  432344:	cbz	x8, 43234c <_obstack_memory_used@@Base+0x141b0>
  432348:	b	432414 <_obstack_memory_used@@Base+0x14278>
  43234c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  432350:	movk	x8, #0xa855
  432354:	movk	x8, #0xaaa, lsl #48
  432358:	stur	x8, [x29, #-208]
  43235c:	ldur	x8, [x29, #-208]
  432360:	ldur	x9, [x29, #-88]
  432364:	cmp	x8, x9
  432368:	cset	w10, cc  // cc = lo, ul, last
  43236c:	and	w10, w10, #0x1
  432370:	mov	w0, w10
  432374:	sxtw	x8, w0
  432378:	cbz	x8, 432380 <_obstack_memory_used@@Base+0x141e4>
  43237c:	b	432414 <_obstack_memory_used@@Base+0x14278>
  432380:	ldur	x8, [x29, #-88]
  432384:	mov	x9, #0x3                   	// #3
  432388:	mul	x8, x8, x9
  43238c:	mov	x9, #0x8                   	// #8
  432390:	mul	x8, x8, x9
  432394:	mov	x9, #0x3800                	// #14336
  432398:	add	x8, x9, x8
  43239c:	cmp	x8, #0xfc0
  4323a0:	b.cs	4323dc <_obstack_memory_used@@Base+0x14240>  // b.hs, b.nlast
  4323a4:	ldur	x8, [x29, #-88]
  4323a8:	mov	x9, #0x3                   	// #3
  4323ac:	mul	x8, x8, x9
  4323b0:	mov	x9, #0x8                   	// #8
  4323b4:	mul	x8, x8, x9
  4323b8:	mov	x9, #0x1                   	// #1
  4323bc:	mul	x8, x8, x9
  4323c0:	add	x8, x8, #0xf
  4323c4:	and	x8, x8, #0xfffffffffffffff0
  4323c8:	mov	x9, sp
  4323cc:	subs	x8, x9, x8
  4323d0:	mov	sp, x8
  4323d4:	stur	x8, [x29, #-104]
  4323d8:	b	4324a0 <_obstack_memory_used@@Base+0x14304>
  4323dc:	ldur	x8, [x29, #-88]
  4323e0:	mov	x9, #0x3                   	// #3
  4323e4:	mul	x8, x8, x9
  4323e8:	mov	x9, #0x8                   	// #8
  4323ec:	mul	x0, x8, x9
  4323f0:	bl	402890 <malloc@plt>
  4323f4:	stur	x0, [x29, #-104]
  4323f8:	ldur	x8, [x29, #-104]
  4323fc:	cmp	x8, #0x0
  432400:	cset	w10, eq  // eq = none
  432404:	and	w10, w10, #0x1
  432408:	mov	w0, w10
  43240c:	sxtw	x8, w0
  432410:	cbz	x8, 432498 <_obstack_memory_used@@Base+0x142fc>
  432414:	ldurb	w8, [x29, #-74]
  432418:	tbnz	w8, #0, 432420 <_obstack_memory_used@@Base+0x14284>
  43241c:	b	432428 <_obstack_memory_used@@Base+0x1428c>
  432420:	ldur	x0, [x29, #-104]
  432424:	bl	402b40 <free@plt>
  432428:	sub	x8, x29, #0x90
  43242c:	ldr	x0, [x8, #16]
  432430:	bl	402b40 <free@plt>
  432434:	stur	xzr, [x29, #-40]
  432438:	ldur	x8, [x29, #-40]
  43243c:	ldur	x9, [x29, #-88]
  432440:	cmp	x8, x9
  432444:	b.ge	432474 <_obstack_memory_used@@Base+0x142d8>  // b.tcont
  432448:	ldur	x8, [x29, #-152]
  43244c:	ldur	x9, [x29, #-40]
  432450:	mov	x10, #0x18                  	// #24
  432454:	mul	x9, x10, x9
  432458:	add	x8, x8, x9
  43245c:	ldr	x0, [x8, #16]
  432460:	bl	402b40 <free@plt>
  432464:	ldur	x8, [x29, #-40]
  432468:	add	x8, x8, #0x1
  43246c:	stur	x8, [x29, #-40]
  432470:	b	432438 <_obstack_memory_used@@Base+0x1429c>
  432474:	ldurb	w8, [x29, #-73]
  432478:	tbnz	w8, #0, 432480 <_obstack_memory_used@@Base+0x142e4>
  43247c:	b	432488 <_obstack_memory_used@@Base+0x142ec>
  432480:	ldur	x0, [x29, #-200]
  432484:	bl	402b40 <free@plt>
  432488:	mov	w8, wzr
  43248c:	and	w8, w8, #0x1
  432490:	sturb	w8, [x29, #-1]
  432494:	b	432c04 <_obstack_memory_used@@Base+0x14a68>
  432498:	mov	w8, #0x1                   	// #1
  43249c:	sturb	w8, [x29, #-74]
  4324a0:	ldur	x8, [x29, #-104]
  4324a4:	ldur	x9, [x29, #-88]
  4324a8:	mov	x10, #0x8                   	// #8
  4324ac:	mul	x9, x10, x9
  4324b0:	add	x8, x8, x9
  4324b4:	stur	x8, [x29, #-112]
  4324b8:	ldur	x8, [x29, #-112]
  4324bc:	ldur	x9, [x29, #-88]
  4324c0:	mul	x9, x10, x9
  4324c4:	add	x8, x8, x9
  4324c8:	stur	x8, [x29, #-120]
  4324cc:	sub	x0, x29, #0xc0
  4324d0:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  4324d4:	stur	xzr, [x29, #-40]
  4324d8:	ldur	x8, [x29, #-40]
  4324dc:	ldur	x9, [x29, #-88]
  4324e0:	cmp	x8, x9
  4324e4:	b.ge	432804 <_obstack_memory_used@@Base+0x14668>  // b.tcont
  4324e8:	stur	xzr, [x29, #-136]
  4324ec:	stur	xzr, [x29, #-48]
  4324f0:	ldur	x8, [x29, #-48]
  4324f4:	ldur	x9, [x29, #-152]
  4324f8:	ldur	x10, [x29, #-40]
  4324fc:	mov	x11, #0x18                  	// #24
  432500:	mul	x10, x11, x10
  432504:	add	x9, x9, x10
  432508:	ldr	x9, [x9, #8]
  43250c:	cmp	x8, x9
  432510:	b.ge	4325a8 <_obstack_memory_used@@Base+0x1440c>  // b.tcont
  432514:	ldur	x8, [x29, #-16]
  432518:	mov	x9, #0x18                  	// #24
  43251c:	ldr	x8, [x8, #24]
  432520:	ldur	x10, [x29, #-152]
  432524:	ldur	x11, [x29, #-40]
  432528:	mul	x9, x9, x11
  43252c:	add	x9, x10, x9
  432530:	ldr	x9, [x9, #16]
  432534:	ldur	x10, [x29, #-48]
  432538:	ldr	x9, [x9, x10, lsl #3]
  43253c:	ldr	x8, [x8, x9, lsl #3]
  432540:	stur	x8, [x29, #-216]
  432544:	ldur	x8, [x29, #-216]
  432548:	mov	x9, #0xffffffffffffffff    	// #-1
  43254c:	cmp	x8, x9
  432550:	b.eq	432598 <_obstack_memory_used@@Base+0x143fc>  // b.none
  432554:	ldur	x8, [x29, #-16]
  432558:	ldr	x8, [x8, #48]
  43255c:	ldur	x9, [x29, #-216]
  432560:	mov	x10, #0x18                  	// #24
  432564:	mul	x9, x10, x9
  432568:	add	x1, x8, x9
  43256c:	sub	x0, x29, #0x90
  432570:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  432574:	stur	w0, [x29, #-28]
  432578:	ldur	w11, [x29, #-28]
  43257c:	cmp	w11, #0x0
  432580:	cset	w11, ne  // ne = any
  432584:	and	w11, w11, #0x1
  432588:	mov	w1, w11
  43258c:	sxtw	x8, w1
  432590:	cbz	x8, 432598 <_obstack_memory_used@@Base+0x143fc>
  432594:	b	432414 <_obstack_memory_used@@Base+0x14278>
  432598:	ldur	x8, [x29, #-48]
  43259c:	add	x8, x8, #0x1
  4325a0:	stur	x8, [x29, #-48]
  4325a4:	b	4324f0 <_obstack_memory_used@@Base+0x14354>
  4325a8:	ldur	x1, [x29, #-16]
  4325ac:	sub	x0, x29, #0x1c
  4325b0:	sub	x2, x29, #0x90
  4325b4:	mov	w8, wzr
  4325b8:	mov	w3, w8
  4325bc:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  4325c0:	ldur	x9, [x29, #-104]
  4325c4:	ldur	x10, [x29, #-40]
  4325c8:	mov	x11, #0x8                   	// #8
  4325cc:	mul	x10, x11, x10
  4325d0:	add	x9, x9, x10
  4325d4:	str	x0, [x9]
  4325d8:	ldur	x9, [x29, #-104]
  4325dc:	ldur	x10, [x29, #-40]
  4325e0:	mul	x10, x11, x10
  4325e4:	add	x9, x9, x10
  4325e8:	ldr	x9, [x9]
  4325ec:	mov	w8, #0x0                   	// #0
  4325f0:	stur	w8, [x29, #-220]
  4325f4:	cbnz	x9, 432608 <_obstack_memory_used@@Base+0x1446c>
  4325f8:	ldur	w8, [x29, #-28]
  4325fc:	cmp	w8, #0x0
  432600:	cset	w8, ne  // ne = any
  432604:	stur	w8, [x29, #-220]
  432608:	ldur	w8, [x29, #-220]
  43260c:	and	w8, w8, #0x1
  432610:	mov	w0, w8
  432614:	sxtw	x9, w0
  432618:	cbz	x9, 432620 <_obstack_memory_used@@Base+0x14484>
  43261c:	b	432414 <_obstack_memory_used@@Base+0x14278>
  432620:	ldur	x8, [x29, #-104]
  432624:	ldur	x9, [x29, #-40]
  432628:	mov	x10, #0x8                   	// #8
  43262c:	mul	x9, x10, x9
  432630:	add	x8, x8, x9
  432634:	ldr	x8, [x8]
  432638:	ldrb	w11, [x8, #104]
  43263c:	mov	w12, #0x7                   	// #7
  432640:	lsr	w11, w11, w12
  432644:	and	w11, w11, #0xff
  432648:	cbz	w11, 432784 <_obstack_memory_used@@Base+0x145e8>
  43264c:	ldur	x1, [x29, #-16]
  432650:	sub	x0, x29, #0x1c
  432654:	sub	x2, x29, #0x90
  432658:	mov	w3, #0x1                   	// #1
  43265c:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  432660:	ldur	x8, [x29, #-112]
  432664:	ldur	x9, [x29, #-40]
  432668:	mov	x10, #0x8                   	// #8
  43266c:	mul	x9, x10, x9
  432670:	add	x8, x8, x9
  432674:	str	x0, [x8]
  432678:	ldur	x8, [x29, #-112]
  43267c:	ldur	x9, [x29, #-40]
  432680:	mul	x9, x10, x9
  432684:	add	x8, x8, x9
  432688:	ldr	x8, [x8]
  43268c:	mov	w11, #0x0                   	// #0
  432690:	stur	w11, [x29, #-224]
  432694:	cbnz	x8, 4326a8 <_obstack_memory_used@@Base+0x1450c>
  432698:	ldur	w8, [x29, #-28]
  43269c:	cmp	w8, #0x0
  4326a0:	cset	w8, ne  // ne = any
  4326a4:	stur	w8, [x29, #-224]
  4326a8:	ldur	w8, [x29, #-224]
  4326ac:	and	w8, w8, #0x1
  4326b0:	mov	w0, w8
  4326b4:	sxtw	x9, w0
  4326b8:	cbz	x9, 4326c0 <_obstack_memory_used@@Base+0x14524>
  4326bc:	b	432414 <_obstack_memory_used@@Base+0x14278>
  4326c0:	ldur	x8, [x29, #-104]
  4326c4:	ldur	x9, [x29, #-40]
  4326c8:	mov	x10, #0x8                   	// #8
  4326cc:	mul	x9, x10, x9
  4326d0:	add	x8, x8, x9
  4326d4:	ldr	x8, [x8]
  4326d8:	ldur	x9, [x29, #-112]
  4326dc:	ldur	x11, [x29, #-40]
  4326e0:	mul	x10, x10, x11
  4326e4:	add	x9, x9, x10
  4326e8:	ldr	x9, [x9]
  4326ec:	cmp	x8, x9
  4326f0:	b.eq	43270c <_obstack_memory_used@@Base+0x14570>  // b.none
  4326f4:	ldur	x8, [x29, #-16]
  4326f8:	ldr	w9, [x8, #180]
  4326fc:	cmp	w9, #0x1
  432700:	b.le	43270c <_obstack_memory_used@@Base+0x14570>
  432704:	mov	w8, #0x1                   	// #1
  432708:	sturb	w8, [x29, #-53]
  43270c:	ldur	x1, [x29, #-16]
  432710:	sub	x0, x29, #0x1c
  432714:	sub	x2, x29, #0x90
  432718:	mov	w3, #0x2                   	// #2
  43271c:	bl	42b0c0 <_obstack_memory_used@@Base+0xcf24>
  432720:	ldur	x8, [x29, #-120]
  432724:	ldur	x9, [x29, #-40]
  432728:	mov	x10, #0x8                   	// #8
  43272c:	mul	x9, x10, x9
  432730:	add	x8, x8, x9
  432734:	str	x0, [x8]
  432738:	ldur	x8, [x29, #-120]
  43273c:	ldur	x9, [x29, #-40]
  432740:	mul	x9, x10, x9
  432744:	add	x8, x8, x9
  432748:	ldr	x8, [x8]
  43274c:	mov	w11, #0x0                   	// #0
  432750:	stur	w11, [x29, #-228]
  432754:	cbnz	x8, 432768 <_obstack_memory_used@@Base+0x145cc>
  432758:	ldur	w8, [x29, #-28]
  43275c:	cmp	w8, #0x0
  432760:	cset	w8, ne  // ne = any
  432764:	stur	w8, [x29, #-228]
  432768:	ldur	w8, [x29, #-228]
  43276c:	and	w8, w8, #0x1
  432770:	mov	w0, w8
  432774:	sxtw	x9, w0
  432778:	cbz	x9, 432780 <_obstack_memory_used@@Base+0x145e4>
  43277c:	b	432414 <_obstack_memory_used@@Base+0x14278>
  432780:	b	4327d8 <_obstack_memory_used@@Base+0x1463c>
  432784:	ldur	x8, [x29, #-104]
  432788:	ldur	x9, [x29, #-40]
  43278c:	mov	x10, #0x8                   	// #8
  432790:	mul	x9, x10, x9
  432794:	add	x8, x8, x9
  432798:	ldr	x8, [x8]
  43279c:	ldur	x9, [x29, #-112]
  4327a0:	ldur	x11, [x29, #-40]
  4327a4:	mul	x11, x10, x11
  4327a8:	add	x9, x9, x11
  4327ac:	str	x8, [x9]
  4327b0:	ldur	x8, [x29, #-104]
  4327b4:	ldur	x9, [x29, #-40]
  4327b8:	mul	x9, x10, x9
  4327bc:	add	x8, x8, x9
  4327c0:	ldr	x8, [x8]
  4327c4:	ldur	x9, [x29, #-120]
  4327c8:	ldur	x11, [x29, #-40]
  4327cc:	mul	x10, x10, x11
  4327d0:	add	x9, x9, x10
  4327d4:	str	x8, [x9]
  4327d8:	ldur	x8, [x29, #-160]
  4327dc:	ldur	x9, [x29, #-40]
  4327e0:	mov	x10, #0x20                  	// #32
  4327e4:	mul	x9, x10, x9
  4327e8:	add	x1, x8, x9
  4327ec:	sub	x0, x29, #0xc0
  4327f0:	bl	433444 <_obstack_memory_used@@Base+0x152a8>
  4327f4:	ldur	x8, [x29, #-40]
  4327f8:	add	x8, x8, #0x1
  4327fc:	stur	x8, [x29, #-40]
  432800:	b	4324d8 <_obstack_memory_used@@Base+0x1433c>
  432804:	ldurb	w8, [x29, #-53]
  432808:	tbnz	w8, #0, 432980 <_obstack_memory_used@@Base+0x147e4>
  43280c:	mov	x0, #0x8                   	// #8
  432810:	mov	x1, #0x100                 	// #256
  432814:	bl	4029a0 <calloc@plt>
  432818:	ldur	x8, [x29, #-24]
  43281c:	str	x0, [x8, #88]
  432820:	stur	x0, [x29, #-96]
  432824:	ldur	x8, [x29, #-96]
  432828:	cmp	x8, #0x0
  43282c:	cset	w9, eq  // eq = none
  432830:	and	w9, w9, #0x1
  432834:	mov	w0, w9
  432838:	sxtw	x8, w0
  43283c:	cbz	x8, 432844 <_obstack_memory_used@@Base+0x146a8>
  432840:	b	432414 <_obstack_memory_used@@Base+0x14278>
  432844:	stur	xzr, [x29, #-40]
  432848:	ldur	x8, [x29, #-40]
  43284c:	cmp	x8, #0x4
  432850:	b.ge	43297c <_obstack_memory_used@@Base+0x147e0>  // b.tcont
  432854:	ldur	x8, [x29, #-40]
  432858:	mov	x9, #0x40                  	// #64
  43285c:	mul	x8, x8, x9
  432860:	stur	w8, [x29, #-52]
  432864:	ldur	x9, [x29, #-40]
  432868:	sub	x10, x29, #0xc0
  43286c:	ldr	x9, [x10, x9, lsl #3]
  432870:	stur	x9, [x29, #-64]
  432874:	mov	x9, #0x1                   	// #1
  432878:	stur	x9, [x29, #-72]
  43287c:	ldur	x8, [x29, #-64]
  432880:	cbz	x8, 43296c <_obstack_memory_used@@Base+0x147d0>
  432884:	ldur	x8, [x29, #-64]
  432888:	and	x8, x8, #0x1
  43288c:	cbz	x8, 432944 <_obstack_memory_used@@Base+0x147a8>
  432890:	stur	xzr, [x29, #-48]
  432894:	ldur	x8, [x29, #-160]
  432898:	ldur	x9, [x29, #-48]
  43289c:	mov	x10, #0x20                  	// #32
  4328a0:	mul	x9, x10, x9
  4328a4:	add	x8, x8, x9
  4328a8:	ldur	x9, [x29, #-40]
  4328ac:	ldr	x8, [x8, x9, lsl #3]
  4328b0:	ldur	x9, [x29, #-72]
  4328b4:	and	x8, x8, x9
  4328b8:	cbnz	x8, 4328cc <_obstack_memory_used@@Base+0x14730>
  4328bc:	ldur	x8, [x29, #-48]
  4328c0:	add	x8, x8, #0x1
  4328c4:	stur	x8, [x29, #-48]
  4328c8:	b	432894 <_obstack_memory_used@@Base+0x146f8>
  4328cc:	ldur	x8, [x29, #-16]
  4328d0:	add	x8, x8, #0xb8
  4328d4:	ldur	x9, [x29, #-40]
  4328d8:	ldr	x8, [x8, x9, lsl #3]
  4328dc:	ldur	x9, [x29, #-72]
  4328e0:	and	x8, x8, x9
  4328e4:	cbz	x8, 432918 <_obstack_memory_used@@Base+0x1477c>
  4328e8:	ldur	x8, [x29, #-112]
  4328ec:	ldur	x9, [x29, #-48]
  4328f0:	mov	x10, #0x8                   	// #8
  4328f4:	mul	x9, x10, x9
  4328f8:	add	x8, x8, x9
  4328fc:	ldr	x8, [x8]
  432900:	ldur	x9, [x29, #-96]
  432904:	ldursw	x11, [x29, #-52]
  432908:	mul	x10, x10, x11
  43290c:	add	x9, x9, x10
  432910:	str	x8, [x9]
  432914:	b	432944 <_obstack_memory_used@@Base+0x147a8>
  432918:	ldur	x8, [x29, #-104]
  43291c:	ldur	x9, [x29, #-48]
  432920:	mov	x10, #0x8                   	// #8
  432924:	mul	x9, x10, x9
  432928:	add	x8, x8, x9
  43292c:	ldr	x8, [x8]
  432930:	ldur	x9, [x29, #-96]
  432934:	ldursw	x11, [x29, #-52]
  432938:	mul	x10, x10, x11
  43293c:	add	x9, x9, x10
  432940:	str	x8, [x9]
  432944:	ldur	x8, [x29, #-72]
  432948:	lsl	x8, x8, #1
  43294c:	stur	x8, [x29, #-72]
  432950:	ldur	x8, [x29, #-64]
  432954:	lsr	x8, x8, #1
  432958:	stur	x8, [x29, #-64]
  43295c:	ldur	w9, [x29, #-52]
  432960:	add	w9, w9, #0x1
  432964:	stur	w9, [x29, #-52]
  432968:	b	43287c <_obstack_memory_used@@Base+0x146e0>
  43296c:	ldur	x8, [x29, #-40]
  432970:	add	x8, x8, #0x1
  432974:	stur	x8, [x29, #-40]
  432978:	b	432848 <_obstack_memory_used@@Base+0x146ac>
  43297c:	b	432ad8 <_obstack_memory_used@@Base+0x1493c>
  432980:	mov	x0, #0x8                   	// #8
  432984:	mov	x1, #0x200                 	// #512
  432988:	bl	4029a0 <calloc@plt>
  43298c:	ldur	x8, [x29, #-24]
  432990:	str	x0, [x8, #96]
  432994:	stur	x0, [x29, #-96]
  432998:	ldur	x8, [x29, #-96]
  43299c:	cmp	x8, #0x0
  4329a0:	cset	w9, eq  // eq = none
  4329a4:	and	w9, w9, #0x1
  4329a8:	mov	w0, w9
  4329ac:	sxtw	x8, w0
  4329b0:	cbz	x8, 4329b8 <_obstack_memory_used@@Base+0x1481c>
  4329b4:	b	432414 <_obstack_memory_used@@Base+0x14278>
  4329b8:	stur	xzr, [x29, #-40]
  4329bc:	ldur	x8, [x29, #-40]
  4329c0:	cmp	x8, #0x4
  4329c4:	b.ge	432ad8 <_obstack_memory_used@@Base+0x1493c>  // b.tcont
  4329c8:	ldur	x8, [x29, #-40]
  4329cc:	mov	x9, #0x40                  	// #64
  4329d0:	mul	x8, x8, x9
  4329d4:	stur	w8, [x29, #-52]
  4329d8:	ldur	x9, [x29, #-40]
  4329dc:	sub	x10, x29, #0xc0
  4329e0:	ldr	x9, [x10, x9, lsl #3]
  4329e4:	stur	x9, [x29, #-64]
  4329e8:	mov	x9, #0x1                   	// #1
  4329ec:	stur	x9, [x29, #-72]
  4329f0:	ldur	x8, [x29, #-64]
  4329f4:	cbz	x8, 432ac8 <_obstack_memory_used@@Base+0x1492c>
  4329f8:	ldur	x8, [x29, #-64]
  4329fc:	and	x8, x8, #0x1
  432a00:	cbz	x8, 432aa0 <_obstack_memory_used@@Base+0x14904>
  432a04:	stur	xzr, [x29, #-48]
  432a08:	ldur	x8, [x29, #-160]
  432a0c:	ldur	x9, [x29, #-48]
  432a10:	mov	x10, #0x20                  	// #32
  432a14:	mul	x9, x10, x9
  432a18:	add	x8, x8, x9
  432a1c:	ldur	x9, [x29, #-40]
  432a20:	ldr	x8, [x8, x9, lsl #3]
  432a24:	ldur	x9, [x29, #-72]
  432a28:	and	x8, x8, x9
  432a2c:	cbnz	x8, 432a40 <_obstack_memory_used@@Base+0x148a4>
  432a30:	ldur	x8, [x29, #-48]
  432a34:	add	x8, x8, #0x1
  432a38:	stur	x8, [x29, #-48]
  432a3c:	b	432a08 <_obstack_memory_used@@Base+0x1486c>
  432a40:	ldur	x8, [x29, #-104]
  432a44:	ldur	x9, [x29, #-48]
  432a48:	mov	x10, #0x8                   	// #8
  432a4c:	mul	x9, x10, x9
  432a50:	add	x8, x8, x9
  432a54:	ldr	x8, [x8]
  432a58:	ldur	x9, [x29, #-96]
  432a5c:	ldursw	x11, [x29, #-52]
  432a60:	mul	x11, x10, x11
  432a64:	add	x9, x9, x11
  432a68:	str	x8, [x9]
  432a6c:	ldur	x8, [x29, #-112]
  432a70:	ldur	x9, [x29, #-48]
  432a74:	mul	x9, x10, x9
  432a78:	add	x8, x8, x9
  432a7c:	ldr	x8, [x8]
  432a80:	ldur	x9, [x29, #-96]
  432a84:	ldur	w12, [x29, #-52]
  432a88:	add	w12, w12, #0x100
  432a8c:	mov	w0, w12
  432a90:	sxtw	x11, w0
  432a94:	mul	x10, x10, x11
  432a98:	add	x9, x9, x10
  432a9c:	str	x8, [x9]
  432aa0:	ldur	x8, [x29, #-72]
  432aa4:	lsl	x8, x8, #1
  432aa8:	stur	x8, [x29, #-72]
  432aac:	ldur	x8, [x29, #-64]
  432ab0:	lsr	x8, x8, #1
  432ab4:	stur	x8, [x29, #-64]
  432ab8:	ldur	w9, [x29, #-52]
  432abc:	add	w9, w9, #0x1
  432ac0:	stur	w9, [x29, #-52]
  432ac4:	b	4329f0 <_obstack_memory_used@@Base+0x14854>
  432ac8:	ldur	x8, [x29, #-40]
  432acc:	add	x8, x8, #0x1
  432ad0:	stur	x8, [x29, #-40]
  432ad4:	b	4329bc <_obstack_memory_used@@Base+0x14820>
  432ad8:	sub	x0, x29, #0xc0
  432adc:	mov	x1, #0xa                   	// #10
  432ae0:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  432ae4:	tbnz	w0, #0, 432aec <_obstack_memory_used@@Base+0x14950>
  432ae8:	b	432b84 <_obstack_memory_used@@Base+0x149e8>
  432aec:	stur	xzr, [x29, #-48]
  432af0:	ldur	x8, [x29, #-48]
  432af4:	ldur	x9, [x29, #-88]
  432af8:	cmp	x8, x9
  432afc:	b.ge	432b84 <_obstack_memory_used@@Base+0x149e8>  // b.tcont
  432b00:	ldur	x8, [x29, #-160]
  432b04:	ldur	x9, [x29, #-48]
  432b08:	mov	x10, #0x20                  	// #32
  432b0c:	mul	x9, x10, x9
  432b10:	add	x0, x8, x9
  432b14:	mov	x1, #0xa                   	// #10
  432b18:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  432b1c:	tbnz	w0, #0, 432b24 <_obstack_memory_used@@Base+0x14988>
  432b20:	b	432b74 <_obstack_memory_used@@Base+0x149d8>
  432b24:	ldur	x8, [x29, #-120]
  432b28:	ldur	x9, [x29, #-48]
  432b2c:	mov	x10, #0x8                   	// #8
  432b30:	mul	x9, x10, x9
  432b34:	add	x8, x8, x9
  432b38:	ldr	x8, [x8]
  432b3c:	ldur	x9, [x29, #-96]
  432b40:	str	x8, [x9, #80]
  432b44:	ldurb	w11, [x29, #-53]
  432b48:	tbnz	w11, #0, 432b50 <_obstack_memory_used@@Base+0x149b4>
  432b4c:	b	432b70 <_obstack_memory_used@@Base+0x149d4>
  432b50:	ldur	x8, [x29, #-120]
  432b54:	ldur	x9, [x29, #-48]
  432b58:	mov	x10, #0x8                   	// #8
  432b5c:	mul	x9, x10, x9
  432b60:	add	x8, x8, x9
  432b64:	ldr	x8, [x8]
  432b68:	ldur	x9, [x29, #-96]
  432b6c:	str	x8, [x9, #2128]
  432b70:	b	432b84 <_obstack_memory_used@@Base+0x149e8>
  432b74:	ldur	x8, [x29, #-48]
  432b78:	add	x8, x8, #0x1
  432b7c:	stur	x8, [x29, #-48]
  432b80:	b	432af0 <_obstack_memory_used@@Base+0x14954>
  432b84:	ldurb	w8, [x29, #-74]
  432b88:	tbnz	w8, #0, 432b90 <_obstack_memory_used@@Base+0x149f4>
  432b8c:	b	432b98 <_obstack_memory_used@@Base+0x149fc>
  432b90:	ldur	x0, [x29, #-104]
  432b94:	bl	402b40 <free@plt>
  432b98:	sub	x8, x29, #0x90
  432b9c:	ldr	x0, [x8, #16]
  432ba0:	bl	402b40 <free@plt>
  432ba4:	stur	xzr, [x29, #-40]
  432ba8:	ldur	x8, [x29, #-40]
  432bac:	ldur	x9, [x29, #-88]
  432bb0:	cmp	x8, x9
  432bb4:	b.ge	432be4 <_obstack_memory_used@@Base+0x14a48>  // b.tcont
  432bb8:	ldur	x8, [x29, #-152]
  432bbc:	ldur	x9, [x29, #-40]
  432bc0:	mov	x10, #0x18                  	// #24
  432bc4:	mul	x9, x10, x9
  432bc8:	add	x8, x8, x9
  432bcc:	ldr	x0, [x8, #16]
  432bd0:	bl	402b40 <free@plt>
  432bd4:	ldur	x8, [x29, #-40]
  432bd8:	add	x8, x8, #0x1
  432bdc:	stur	x8, [x29, #-40]
  432be0:	b	432ba8 <_obstack_memory_used@@Base+0x14a0c>
  432be4:	ldurb	w8, [x29, #-73]
  432be8:	tbnz	w8, #0, 432bf0 <_obstack_memory_used@@Base+0x14a54>
  432bec:	b	432bf8 <_obstack_memory_used@@Base+0x14a5c>
  432bf0:	ldur	x0, [x29, #-200]
  432bf4:	bl	402b40 <free@plt>
  432bf8:	mov	w8, #0x1                   	// #1
  432bfc:	and	w8, w8, #0x1
  432c00:	sturb	w8, [x29, #-1]
  432c04:	ldurb	w8, [x29, #-1]
  432c08:	and	w0, w8, #0x1
  432c0c:	mov	sp, x29
  432c10:	ldp	x29, x30, [sp], #16
  432c14:	ret
  432c18:	sub	sp, sp, #0x130
  432c1c:	stp	x29, x30, [sp, #272]
  432c20:	str	x28, [sp, #288]
  432c24:	add	x29, sp, #0x110
  432c28:	sub	x8, x29, #0x70
  432c2c:	stur	x0, [x29, #-16]
  432c30:	stur	x1, [x29, #-24]
  432c34:	stur	x2, [x29, #-32]
  432c38:	stur	x3, [x29, #-40]
  432c3c:	ldur	x9, [x29, #-24]
  432c40:	add	x9, x9, #0x8
  432c44:	stur	x9, [x29, #-120]
  432c48:	mov	x0, x8
  432c4c:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  432c50:	stur	xzr, [x29, #-80]
  432c54:	stur	xzr, [x29, #-56]
  432c58:	ldur	x8, [x29, #-56]
  432c5c:	ldur	x9, [x29, #-120]
  432c60:	ldr	x9, [x9, #8]
  432c64:	cmp	x8, x9
  432c68:	b.ge	43339c <_obstack_memory_used@@Base+0x15200>  // b.tcont
  432c6c:	ldur	x8, [x29, #-16]
  432c70:	ldr	x8, [x8]
  432c74:	ldur	x9, [x29, #-120]
  432c78:	mov	x10, #0x10                  	// #16
  432c7c:	ldr	x9, [x9, #16]
  432c80:	ldur	x11, [x29, #-56]
  432c84:	mov	x12, #0x8                   	// #8
  432c88:	ldr	x9, [x9, x11, lsl #3]
  432c8c:	mul	x9, x10, x9
  432c90:	add	x8, x8, x9
  432c94:	stur	x8, [x29, #-128]
  432c98:	ldur	x8, [x29, #-128]
  432c9c:	ldr	w13, [x8, #8]
  432ca0:	and	w13, w13, #0xff
  432ca4:	stur	w13, [x29, #-132]
  432ca8:	ldur	x8, [x29, #-128]
  432cac:	ldr	w13, [x8, #8]
  432cb0:	lsr	w12, w13, w12
  432cb4:	and	w12, w12, #0x3ff
  432cb8:	str	w12, [sp, #136]
  432cbc:	ldur	w12, [x29, #-132]
  432cc0:	cmp	w12, #0x1
  432cc4:	b.ne	432ce0 <_obstack_memory_used@@Base+0x14b44>  // b.any
  432cc8:	ldur	x8, [x29, #-128]
  432ccc:	ldrb	w9, [x8]
  432cd0:	mov	w1, w9
  432cd4:	sub	x0, x29, #0x70
  432cd8:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  432cdc:	b	432dd4 <_obstack_memory_used@@Base+0x14c38>
  432ce0:	ldur	w8, [x29, #-132]
  432ce4:	cmp	w8, #0x3
  432ce8:	b.ne	432d00 <_obstack_memory_used@@Base+0x14b64>  // b.any
  432cec:	ldur	x8, [x29, #-128]
  432cf0:	ldr	x1, [x8]
  432cf4:	sub	x0, x29, #0x70
  432cf8:	bl	433444 <_obstack_memory_used@@Base+0x152a8>
  432cfc:	b	432dd4 <_obstack_memory_used@@Base+0x14c38>
  432d00:	ldur	w8, [x29, #-132]
  432d04:	cmp	w8, #0x5
  432d08:	b.ne	432d78 <_obstack_memory_used@@Base+0x14bdc>  // b.any
  432d0c:	ldur	x8, [x29, #-16]
  432d10:	ldr	w9, [x8, #180]
  432d14:	cmp	w9, #0x1
  432d18:	b.le	432d30 <_obstack_memory_used@@Base+0x14b94>
  432d1c:	ldur	x8, [x29, #-16]
  432d20:	ldr	x1, [x8, #120]
  432d24:	sub	x0, x29, #0x70
  432d28:	bl	433444 <_obstack_memory_used@@Base+0x152a8>
  432d2c:	b	432d38 <_obstack_memory_used@@Base+0x14b9c>
  432d30:	sub	x0, x29, #0x70
  432d34:	bl	4334a4 <_obstack_memory_used@@Base+0x15308>
  432d38:	ldur	x8, [x29, #-16]
  432d3c:	ldr	x8, [x8, #216]
  432d40:	and	x8, x8, #0x40
  432d44:	cbnz	x8, 432d54 <_obstack_memory_used@@Base+0x14bb8>
  432d48:	sub	x0, x29, #0x70
  432d4c:	mov	x1, #0xa                   	// #10
  432d50:	bl	4334d0 <_obstack_memory_used@@Base+0x15334>
  432d54:	ldur	x8, [x29, #-16]
  432d58:	ldr	x8, [x8, #216]
  432d5c:	and	x8, x8, #0x80
  432d60:	cbz	x8, 432d74 <_obstack_memory_used@@Base+0x14bd8>
  432d64:	sub	x0, x29, #0x70
  432d68:	mov	x8, xzr
  432d6c:	mov	x1, x8
  432d70:	bl	4334d0 <_obstack_memory_used@@Base+0x15334>
  432d74:	b	432dd4 <_obstack_memory_used@@Base+0x14c38>
  432d78:	ldur	w8, [x29, #-132]
  432d7c:	cmp	w8, #0x7
  432d80:	b.ne	432dd0 <_obstack_memory_used@@Base+0x14c34>  // b.any
  432d84:	mov	x8, #0xffffffffffffffff    	// #-1
  432d88:	stur	x8, [x29, #-112]
  432d8c:	stur	x8, [x29, #-104]
  432d90:	ldur	x8, [x29, #-16]
  432d94:	ldr	x8, [x8, #216]
  432d98:	and	x8, x8, #0x40
  432d9c:	cbnz	x8, 432dac <_obstack_memory_used@@Base+0x14c10>
  432da0:	sub	x0, x29, #0x70
  432da4:	mov	x1, #0xa                   	// #10
  432da8:	bl	4334d0 <_obstack_memory_used@@Base+0x15334>
  432dac:	ldur	x8, [x29, #-16]
  432db0:	ldr	x8, [x8, #216]
  432db4:	and	x8, x8, #0x80
  432db8:	cbz	x8, 432dcc <_obstack_memory_used@@Base+0x14c30>
  432dbc:	sub	x0, x29, #0x70
  432dc0:	mov	x8, xzr
  432dc4:	mov	x1, x8
  432dc8:	bl	4334d0 <_obstack_memory_used@@Base+0x15334>
  432dcc:	b	432dd4 <_obstack_memory_used@@Base+0x14c38>
  432dd0:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  432dd4:	ldr	w8, [sp, #136]
  432dd8:	cbz	w8, 433094 <_obstack_memory_used@@Base+0x14ef8>
  432ddc:	ldr	w8, [sp, #136]
  432de0:	and	w8, w8, #0x20
  432de4:	cbz	w8, 432e2c <_obstack_memory_used@@Base+0x14c90>
  432de8:	sub	x8, x29, #0x70
  432dec:	mov	x0, x8
  432df0:	mov	x1, #0xa                   	// #10
  432df4:	str	x8, [sp, #16]
  432df8:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  432dfc:	and	w9, w0, #0x1
  432e00:	strb	w9, [sp, #135]
  432e04:	ldr	x0, [sp, #16]
  432e08:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  432e0c:	ldrb	w9, [sp, #135]
  432e10:	tbnz	w9, #0, 432e18 <_obstack_memory_used@@Base+0x14c7c>
  432e14:	b	432e28 <_obstack_memory_used@@Base+0x14c8c>
  432e18:	sub	x0, x29, #0x70
  432e1c:	mov	x1, #0xa                   	// #10
  432e20:	bl	427054 <_obstack_memory_used@@Base+0x8eb8>
  432e24:	b	432e2c <_obstack_memory_used@@Base+0x14c90>
  432e28:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  432e2c:	ldr	w8, [sp, #136]
  432e30:	and	w8, w8, #0x80
  432e34:	cbz	w8, 432e44 <_obstack_memory_used@@Base+0x14ca8>
  432e38:	sub	x0, x29, #0x70
  432e3c:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  432e40:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  432e44:	ldr	w8, [sp, #136]
  432e48:	and	w8, w8, #0x4
  432e4c:	cbz	w8, 432f6c <_obstack_memory_used@@Base+0x14dd0>
  432e50:	str	xzr, [sp, #120]
  432e54:	ldur	w8, [x29, #-132]
  432e58:	cmp	w8, #0x1
  432e5c:	b.ne	432e80 <_obstack_memory_used@@Base+0x14ce4>  // b.any
  432e60:	ldur	x8, [x29, #-128]
  432e64:	ldr	w9, [x8, #8]
  432e68:	lsr	w9, w9, #22
  432e6c:	and	w9, w9, #0x1
  432e70:	cbnz	w9, 432e80 <_obstack_memory_used@@Base+0x14ce4>
  432e74:	sub	x0, x29, #0x70
  432e78:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  432e7c:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  432e80:	ldur	x8, [x29, #-16]
  432e84:	ldr	w9, [x8, #180]
  432e88:	cmp	w9, #0x1
  432e8c:	b.le	432f04 <_obstack_memory_used@@Base+0x14d68>
  432e90:	stur	xzr, [x29, #-64]
  432e94:	ldur	x8, [x29, #-64]
  432e98:	cmp	x8, #0x4
  432e9c:	b.ge	432f00 <_obstack_memory_used@@Base+0x14d64>  // b.tcont
  432ea0:	ldur	x8, [x29, #-16]
  432ea4:	add	x8, x8, #0xb8
  432ea8:	ldur	x9, [x29, #-64]
  432eac:	mov	x10, #0x8                   	// #8
  432eb0:	ldr	x8, [x8, x9, lsl #3]
  432eb4:	ldur	x9, [x29, #-16]
  432eb8:	ldr	x9, [x9, #120]
  432ebc:	ldur	x11, [x29, #-64]
  432ec0:	ldr	x9, [x9, x11, lsl #3]
  432ec4:	orn	x8, x8, x9
  432ec8:	ldur	x9, [x29, #-64]
  432ecc:	mul	x9, x10, x9
  432ed0:	sub	x10, x29, #0x70
  432ed4:	add	x9, x10, x9
  432ed8:	ldr	x10, [x9]
  432edc:	and	x8, x10, x8
  432ee0:	str	x8, [x9]
  432ee4:	ldr	x9, [sp, #120]
  432ee8:	orr	x8, x9, x8
  432eec:	str	x8, [sp, #120]
  432ef0:	ldur	x8, [x29, #-64]
  432ef4:	add	x8, x8, #0x1
  432ef8:	stur	x8, [x29, #-64]
  432efc:	b	432e94 <_obstack_memory_used@@Base+0x14cf8>
  432f00:	b	432f60 <_obstack_memory_used@@Base+0x14dc4>
  432f04:	stur	xzr, [x29, #-64]
  432f08:	ldur	x8, [x29, #-64]
  432f0c:	cmp	x8, #0x4
  432f10:	b.ge	432f60 <_obstack_memory_used@@Base+0x14dc4>  // b.tcont
  432f14:	ldur	x8, [x29, #-16]
  432f18:	add	x8, x8, #0xb8
  432f1c:	ldur	x9, [x29, #-64]
  432f20:	mov	x10, #0x8                   	// #8
  432f24:	ldr	x8, [x8, x9, lsl #3]
  432f28:	ldur	x9, [x29, #-64]
  432f2c:	mul	x9, x10, x9
  432f30:	sub	x10, x29, #0x70
  432f34:	add	x9, x10, x9
  432f38:	ldr	x10, [x9]
  432f3c:	and	x8, x10, x8
  432f40:	str	x8, [x9]
  432f44:	ldr	x9, [sp, #120]
  432f48:	orr	x8, x9, x8
  432f4c:	str	x8, [sp, #120]
  432f50:	ldur	x8, [x29, #-64]
  432f54:	add	x8, x8, #0x1
  432f58:	stur	x8, [x29, #-64]
  432f5c:	b	432f08 <_obstack_memory_used@@Base+0x14d6c>
  432f60:	ldr	x8, [sp, #120]
  432f64:	cbnz	x8, 432f6c <_obstack_memory_used@@Base+0x14dd0>
  432f68:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  432f6c:	ldr	w8, [sp, #136]
  432f70:	and	w8, w8, #0x8
  432f74:	cbz	w8, 433094 <_obstack_memory_used@@Base+0x14ef8>
  432f78:	str	xzr, [sp, #112]
  432f7c:	ldur	w8, [x29, #-132]
  432f80:	cmp	w8, #0x1
  432f84:	b.ne	432fa8 <_obstack_memory_used@@Base+0x14e0c>  // b.any
  432f88:	ldur	x8, [x29, #-128]
  432f8c:	ldr	w9, [x8, #8]
  432f90:	lsr	w9, w9, #22
  432f94:	and	w9, w9, #0x1
  432f98:	cbz	w9, 432fa8 <_obstack_memory_used@@Base+0x14e0c>
  432f9c:	sub	x0, x29, #0x70
  432fa0:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  432fa4:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  432fa8:	ldur	x8, [x29, #-16]
  432fac:	ldr	w9, [x8, #180]
  432fb0:	cmp	w9, #0x1
  432fb4:	b.le	43302c <_obstack_memory_used@@Base+0x14e90>
  432fb8:	stur	xzr, [x29, #-64]
  432fbc:	ldur	x8, [x29, #-64]
  432fc0:	cmp	x8, #0x4
  432fc4:	b.ge	433028 <_obstack_memory_used@@Base+0x14e8c>  // b.tcont
  432fc8:	ldur	x8, [x29, #-16]
  432fcc:	add	x8, x8, #0xb8
  432fd0:	ldur	x9, [x29, #-64]
  432fd4:	mov	x10, #0x8                   	// #8
  432fd8:	ldr	x8, [x8, x9, lsl #3]
  432fdc:	ldur	x9, [x29, #-16]
  432fe0:	ldr	x9, [x9, #120]
  432fe4:	ldur	x11, [x29, #-64]
  432fe8:	ldr	x9, [x9, x11, lsl #3]
  432fec:	and	x8, x8, x9
  432ff0:	ldur	x9, [x29, #-64]
  432ff4:	mul	x9, x10, x9
  432ff8:	sub	x10, x29, #0x70
  432ffc:	add	x9, x10, x9
  433000:	ldr	x10, [x9]
  433004:	bic	x8, x10, x8
  433008:	str	x8, [x9]
  43300c:	ldr	x9, [sp, #112]
  433010:	orr	x8, x9, x8
  433014:	str	x8, [sp, #112]
  433018:	ldur	x8, [x29, #-64]
  43301c:	add	x8, x8, #0x1
  433020:	stur	x8, [x29, #-64]
  433024:	b	432fbc <_obstack_memory_used@@Base+0x14e20>
  433028:	b	433088 <_obstack_memory_used@@Base+0x14eec>
  43302c:	stur	xzr, [x29, #-64]
  433030:	ldur	x8, [x29, #-64]
  433034:	cmp	x8, #0x4
  433038:	b.ge	433088 <_obstack_memory_used@@Base+0x14eec>  // b.tcont
  43303c:	ldur	x8, [x29, #-16]
  433040:	add	x8, x8, #0xb8
  433044:	ldur	x9, [x29, #-64]
  433048:	mov	x10, #0x8                   	// #8
  43304c:	ldr	x8, [x8, x9, lsl #3]
  433050:	ldur	x9, [x29, #-64]
  433054:	mul	x9, x10, x9
  433058:	sub	x10, x29, #0x70
  43305c:	add	x9, x10, x9
  433060:	ldr	x10, [x9]
  433064:	bic	x8, x10, x8
  433068:	str	x8, [x9]
  43306c:	ldr	x9, [sp, #112]
  433070:	orr	x8, x9, x8
  433074:	str	x8, [sp, #112]
  433078:	ldur	x8, [x29, #-64]
  43307c:	add	x8, x8, #0x1
  433080:	stur	x8, [x29, #-64]
  433084:	b	433030 <_obstack_memory_used@@Base+0x14e94>
  433088:	ldr	x8, [sp, #112]
  43308c:	cbnz	x8, 433094 <_obstack_memory_used@@Base+0x14ef8>
  433090:	b	43338c <_obstack_memory_used@@Base+0x151f0>
  433094:	stur	xzr, [x29, #-64]
  433098:	ldur	x8, [x29, #-64]
  43309c:	ldur	x9, [x29, #-80]
  4330a0:	cmp	x8, x9
  4330a4:	b.ge	433300 <_obstack_memory_used@@Base+0x15164>  // b.tcont
  4330a8:	ldur	w8, [x29, #-132]
  4330ac:	cmp	w8, #0x1
  4330b0:	b.ne	4330e0 <_obstack_memory_used@@Base+0x14f44>  // b.any
  4330b4:	ldur	x8, [x29, #-40]
  4330b8:	ldur	x9, [x29, #-64]
  4330bc:	mov	x10, #0x20                  	// #32
  4330c0:	mul	x9, x10, x9
  4330c4:	add	x0, x8, x9
  4330c8:	ldur	x8, [x29, #-128]
  4330cc:	ldrb	w11, [x8]
  4330d0:	mov	w1, w11
  4330d4:	bl	42de78 <_obstack_memory_used@@Base+0xfcdc>
  4330d8:	tbnz	w0, #0, 4330e0 <_obstack_memory_used@@Base+0x14f44>
  4330dc:	b	4332f0 <_obstack_memory_used@@Base+0x15154>
  4330e0:	str	xzr, [sp, #40]
  4330e4:	stur	xzr, [x29, #-72]
  4330e8:	ldur	x8, [x29, #-72]
  4330ec:	cmp	x8, #0x4
  4330f0:	b.ge	433148 <_obstack_memory_used@@Base+0x14fac>  // b.tcont
  4330f4:	ldur	x8, [x29, #-72]
  4330f8:	sub	x9, x29, #0x70
  4330fc:	ldr	x8, [x9, x8, lsl #3]
  433100:	ldur	x9, [x29, #-40]
  433104:	ldur	x10, [x29, #-64]
  433108:	mov	x11, #0x20                  	// #32
  43310c:	mul	x10, x11, x10
  433110:	add	x9, x9, x10
  433114:	ldur	x10, [x29, #-72]
  433118:	ldr	x9, [x9, x10, lsl #3]
  43311c:	and	x8, x8, x9
  433120:	ldur	x9, [x29, #-72]
  433124:	add	x10, sp, #0x50
  433128:	str	x8, [x10, x9, lsl #3]
  43312c:	ldr	x9, [sp, #40]
  433130:	orr	x8, x9, x8
  433134:	str	x8, [sp, #40]
  433138:	ldur	x8, [x29, #-72]
  43313c:	add	x8, x8, #0x1
  433140:	stur	x8, [x29, #-72]
  433144:	b	4330e8 <_obstack_memory_used@@Base+0x14f4c>
  433148:	ldr	x8, [sp, #40]
  43314c:	cbnz	x8, 433154 <_obstack_memory_used@@Base+0x14fb8>
  433150:	b	4332f0 <_obstack_memory_used@@Base+0x15154>
  433154:	str	xzr, [sp, #24]
  433158:	str	xzr, [sp, #32]
  43315c:	stur	xzr, [x29, #-72]
  433160:	ldur	x8, [x29, #-72]
  433164:	cmp	x8, #0x4
  433168:	b.ge	4331f8 <_obstack_memory_used@@Base+0x1505c>  // b.tcont
  43316c:	ldur	x8, [x29, #-72]
  433170:	sub	x9, x29, #0x70
  433174:	ldr	x8, [x9, x8, lsl #3]
  433178:	ldur	x10, [x29, #-40]
  43317c:	ldur	x11, [x29, #-64]
  433180:	mov	x12, #0x20                  	// #32
  433184:	mul	x11, x12, x11
  433188:	add	x10, x10, x11
  43318c:	ldur	x11, [x29, #-72]
  433190:	ldr	x10, [x10, x11, lsl #3]
  433194:	bic	x8, x10, x8
  433198:	ldur	x10, [x29, #-72]
  43319c:	add	x11, sp, #0x30
  4331a0:	str	x8, [x11, x10, lsl #3]
  4331a4:	ldr	x10, [sp, #32]
  4331a8:	orr	x8, x10, x8
  4331ac:	str	x8, [sp, #32]
  4331b0:	ldur	x8, [x29, #-72]
  4331b4:	ldr	x8, [x9, x8, lsl #3]
  4331b8:	ldur	x10, [x29, #-40]
  4331bc:	ldur	x11, [x29, #-64]
  4331c0:	mul	x11, x12, x11
  4331c4:	add	x10, x10, x11
  4331c8:	ldur	x11, [x29, #-72]
  4331cc:	ldr	x10, [x10, x11, lsl #3]
  4331d0:	bic	x8, x8, x10
  4331d4:	ldur	x10, [x29, #-72]
  4331d8:	str	x8, [x9, x10, lsl #3]
  4331dc:	ldr	x9, [sp, #24]
  4331e0:	orr	x8, x9, x8
  4331e4:	str	x8, [sp, #24]
  4331e8:	ldur	x8, [x29, #-72]
  4331ec:	add	x8, x8, #0x1
  4331f0:	stur	x8, [x29, #-72]
  4331f4:	b	433160 <_obstack_memory_used@@Base+0x14fc4>
  4331f8:	ldr	x8, [sp, #32]
  4331fc:	cbz	x8, 433294 <_obstack_memory_used@@Base+0x150f8>
  433200:	ldur	x8, [x29, #-40]
  433204:	ldur	x9, [x29, #-80]
  433208:	mov	x10, #0x20                  	// #32
  43320c:	mul	x9, x10, x9
  433210:	add	x0, x8, x9
  433214:	add	x1, sp, #0x30
  433218:	str	x10, [sp, #8]
  43321c:	bl	433524 <_obstack_memory_used@@Base+0x15388>
  433220:	ldur	x8, [x29, #-40]
  433224:	ldur	x9, [x29, #-64]
  433228:	ldr	x10, [sp, #8]
  43322c:	mul	x9, x10, x9
  433230:	add	x0, x8, x9
  433234:	add	x1, sp, #0x50
  433238:	bl	433524 <_obstack_memory_used@@Base+0x15388>
  43323c:	ldur	x8, [x29, #-32]
  433240:	ldur	x9, [x29, #-80]
  433244:	mov	x10, #0x18                  	// #24
  433248:	mul	x9, x10, x9
  43324c:	add	x0, x8, x9
  433250:	ldur	x8, [x29, #-32]
  433254:	ldur	x9, [x29, #-64]
  433258:	mul	x9, x10, x9
  43325c:	add	x1, x8, x9
  433260:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  433264:	stur	w0, [x29, #-44]
  433268:	ldur	w11, [x29, #-44]
  43326c:	cmp	w11, #0x0
  433270:	cset	w11, ne  // ne = any
  433274:	and	w11, w11, #0x1
  433278:	mov	w1, w11
  43327c:	sxtw	x8, w1
  433280:	cbz	x8, 433288 <_obstack_memory_used@@Base+0x150ec>
  433284:	b	4333b8 <_obstack_memory_used@@Base+0x1521c>
  433288:	ldur	x8, [x29, #-80]
  43328c:	add	x8, x8, #0x1
  433290:	stur	x8, [x29, #-80]
  433294:	ldur	x8, [x29, #-32]
  433298:	ldur	x9, [x29, #-64]
  43329c:	mov	x10, #0x18                  	// #24
  4332a0:	mul	x9, x10, x9
  4332a4:	add	x0, x8, x9
  4332a8:	ldur	x8, [x29, #-120]
  4332ac:	ldr	x8, [x8, #16]
  4332b0:	ldur	x9, [x29, #-56]
  4332b4:	ldr	x1, [x8, x9, lsl #3]
  4332b8:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  4332bc:	mov	w11, #0x1                   	// #1
  4332c0:	and	w11, w0, w11
  4332c4:	sturb	w11, [x29, #-45]
  4332c8:	ldurb	w11, [x29, #-45]
  4332cc:	eor	w11, w11, #0x1
  4332d0:	and	w11, w11, #0x1
  4332d4:	mov	w1, w11
  4332d8:	sxtw	x8, w1
  4332dc:	cbz	x8, 4332e4 <_obstack_memory_used@@Base+0x15148>
  4332e0:	b	4333b8 <_obstack_memory_used@@Base+0x1521c>
  4332e4:	ldr	x8, [sp, #24]
  4332e8:	cbnz	x8, 4332f0 <_obstack_memory_used@@Base+0x15154>
  4332ec:	b	433300 <_obstack_memory_used@@Base+0x15164>
  4332f0:	ldur	x8, [x29, #-64]
  4332f4:	add	x8, x8, #0x1
  4332f8:	stur	x8, [x29, #-64]
  4332fc:	b	433098 <_obstack_memory_used@@Base+0x14efc>
  433300:	ldur	x8, [x29, #-64]
  433304:	ldur	x9, [x29, #-80]
  433308:	cmp	x8, x9
  43330c:	b.ne	43338c <_obstack_memory_used@@Base+0x151f0>  // b.any
  433310:	ldur	x8, [x29, #-40]
  433314:	ldur	x9, [x29, #-80]
  433318:	mov	x10, #0x20                  	// #32
  43331c:	mul	x9, x10, x9
  433320:	add	x0, x8, x9
  433324:	sub	x1, x29, #0x70
  433328:	bl	433524 <_obstack_memory_used@@Base+0x15388>
  43332c:	ldur	x8, [x29, #-32]
  433330:	ldur	x9, [x29, #-80]
  433334:	mov	x10, #0x18                  	// #24
  433338:	mul	x9, x10, x9
  43333c:	add	x0, x8, x9
  433340:	ldur	x8, [x29, #-120]
  433344:	ldr	x8, [x8, #16]
  433348:	ldur	x9, [x29, #-56]
  43334c:	ldr	x1, [x8, x9, lsl #3]
  433350:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  433354:	stur	w0, [x29, #-44]
  433358:	ldur	w11, [x29, #-44]
  43335c:	cmp	w11, #0x0
  433360:	cset	w11, ne  // ne = any
  433364:	and	w11, w11, #0x1
  433368:	mov	w1, w11
  43336c:	sxtw	x8, w1
  433370:	cbz	x8, 433378 <_obstack_memory_used@@Base+0x151dc>
  433374:	b	4333b8 <_obstack_memory_used@@Base+0x1521c>
  433378:	ldur	x8, [x29, #-80]
  43337c:	add	x8, x8, #0x1
  433380:	stur	x8, [x29, #-80]
  433384:	sub	x0, x29, #0x70
  433388:	bl	433414 <_obstack_memory_used@@Base+0x15278>
  43338c:	ldur	x8, [x29, #-56]
  433390:	add	x8, x8, #0x1
  433394:	stur	x8, [x29, #-56]
  433398:	b	432c58 <_obstack_memory_used@@Base+0x14abc>
  43339c:	ldur	x8, [x29, #-80]
  4333a0:	cmp	x8, #0x100
  4333a4:	b.gt	4333ac <_obstack_memory_used@@Base+0x15210>
  4333a8:	b	4333ac <_obstack_memory_used@@Base+0x15210>
  4333ac:	ldur	x8, [x29, #-80]
  4333b0:	stur	x8, [x29, #-8]
  4333b4:	b	433400 <_obstack_memory_used@@Base+0x15264>
  4333b8:	stur	xzr, [x29, #-64]
  4333bc:	ldur	x8, [x29, #-64]
  4333c0:	ldur	x9, [x29, #-80]
  4333c4:	cmp	x8, x9
  4333c8:	b.ge	4333f8 <_obstack_memory_used@@Base+0x1525c>  // b.tcont
  4333cc:	ldur	x8, [x29, #-32]
  4333d0:	ldur	x9, [x29, #-64]
  4333d4:	mov	x10, #0x18                  	// #24
  4333d8:	mul	x9, x10, x9
  4333dc:	add	x8, x8, x9
  4333e0:	ldr	x0, [x8, #16]
  4333e4:	bl	402b40 <free@plt>
  4333e8:	ldur	x8, [x29, #-64]
  4333ec:	add	x8, x8, #0x1
  4333f0:	stur	x8, [x29, #-64]
  4333f4:	b	4333bc <_obstack_memory_used@@Base+0x15220>
  4333f8:	mov	x8, #0xffffffffffffffff    	// #-1
  4333fc:	stur	x8, [x29, #-8]
  433400:	ldur	x0, [x29, #-8]
  433404:	ldr	x28, [sp, #288]
  433408:	ldp	x29, x30, [sp, #272]
  43340c:	add	sp, sp, #0x130
  433410:	ret
  433414:	sub	sp, sp, #0x20
  433418:	stp	x29, x30, [sp, #16]
  43341c:	add	x29, sp, #0x10
  433420:	mov	x2, #0x20                  	// #32
  433424:	str	x0, [sp, #8]
  433428:	ldr	x0, [sp, #8]
  43342c:	mov	w8, wzr
  433430:	mov	w1, w8
  433434:	bl	402960 <memset@plt>
  433438:	ldp	x29, x30, [sp, #16]
  43343c:	add	sp, sp, #0x20
  433440:	ret
  433444:	sub	sp, sp, #0x20
  433448:	str	x0, [sp, #24]
  43344c:	str	x1, [sp, #16]
  433450:	str	wzr, [sp, #12]
  433454:	ldr	w8, [sp, #12]
  433458:	cmp	w8, #0x4
  43345c:	b.ge	43349c <_obstack_memory_used@@Base+0x15300>  // b.tcont
  433460:	ldr	x8, [sp, #16]
  433464:	ldrsw	x9, [sp, #12]
  433468:	mov	x10, #0x8                   	// #8
  43346c:	ldr	x8, [x8, x9, lsl #3]
  433470:	ldr	x9, [sp, #24]
  433474:	ldrsw	x11, [sp, #12]
  433478:	mul	x10, x10, x11
  43347c:	add	x9, x9, x10
  433480:	ldr	x10, [x9]
  433484:	orr	x8, x10, x8
  433488:	str	x8, [x9]
  43348c:	ldr	w8, [sp, #12]
  433490:	add	w8, w8, #0x1
  433494:	str	w8, [sp, #12]
  433498:	b	433454 <_obstack_memory_used@@Base+0x152b8>
  43349c:	add	sp, sp, #0x20
  4334a0:	ret
  4334a4:	sub	sp, sp, #0x20
  4334a8:	stp	x29, x30, [sp, #16]
  4334ac:	add	x29, sp, #0x10
  4334b0:	mov	x2, #0x20                  	// #32
  4334b4:	str	x0, [sp, #8]
  4334b8:	ldr	x0, [sp, #8]
  4334bc:	mov	w1, #0xffffffff            	// #-1
  4334c0:	bl	402960 <memset@plt>
  4334c4:	ldp	x29, x30, [sp, #16]
  4334c8:	add	sp, sp, #0x20
  4334cc:	ret
  4334d0:	sub	sp, sp, #0x10
  4334d4:	mov	x8, #0x40                  	// #64
  4334d8:	mov	x9, #0x1                   	// #1
  4334dc:	str	x0, [sp, #8]
  4334e0:	str	x1, [sp]
  4334e4:	ldr	x10, [sp]
  4334e8:	sdiv	x11, x10, x8
  4334ec:	mul	x11, x11, x8
  4334f0:	subs	x10, x10, x11
  4334f4:	lsl	x9, x9, x10
  4334f8:	ldr	x10, [sp, #8]
  4334fc:	ldr	x11, [sp]
  433500:	sdiv	x8, x11, x8
  433504:	mov	x11, #0x8                   	// #8
  433508:	mul	x8, x11, x8
  43350c:	add	x8, x10, x8
  433510:	ldr	x10, [x8]
  433514:	bic	x9, x10, x9
  433518:	str	x9, [x8]
  43351c:	add	sp, sp, #0x10
  433520:	ret
  433524:	sub	sp, sp, #0x10
  433528:	str	x0, [sp, #8]
  43352c:	str	x1, [sp]
  433530:	ldr	x8, [sp, #8]
  433534:	ldr	x9, [sp]
  433538:	ldr	q0, [x9]
  43353c:	str	q0, [x8]
  433540:	ldr	q0, [x9, #16]
  433544:	str	q0, [x8, #16]
  433548:	add	sp, sp, #0x10
  43354c:	ret
  433550:	sub	sp, sp, #0x30
  433554:	str	x0, [sp, #32]
  433558:	str	x1, [sp, #24]
  43355c:	str	w2, [sp, #20]
  433560:	ldr	x8, [sp, #32]
  433564:	ldr	x8, [x8]
  433568:	ldr	x9, [sp, #24]
  43356c:	mov	x10, #0x10                  	// #16
  433570:	mul	x9, x10, x9
  433574:	add	x8, x8, x9
  433578:	mov	x9, #0x8                   	// #8
  43357c:	ldr	w11, [x8, #8]
  433580:	and	w11, w11, #0xff
  433584:	str	w11, [sp, #16]
  433588:	ldr	x8, [sp, #32]
  43358c:	ldr	x8, [x8]
  433590:	ldr	x12, [sp, #24]
  433594:	mul	x10, x10, x12
  433598:	add	x8, x8, x10
  43359c:	ldr	w11, [x8, #8]
  4335a0:	lsr	w9, w11, w9
  4335a4:	and	w9, w9, #0x3ff
  4335a8:	str	w9, [sp, #12]
  4335ac:	ldr	w9, [sp, #16]
  4335b0:	cmp	w9, #0x2
  4335b4:	b.eq	4335c8 <_obstack_memory_used@@Base+0x1542c>  // b.none
  4335b8:	mov	w8, wzr
  4335bc:	and	w8, w8, #0x1
  4335c0:	strb	w8, [sp, #47]
  4335c4:	b	43365c <_obstack_memory_used@@Base+0x154c0>
  4335c8:	ldr	w8, [sp, #12]
  4335cc:	cbnz	w8, 4335e0 <_obstack_memory_used@@Base+0x15444>
  4335d0:	mov	w8, #0x1                   	// #1
  4335d4:	and	w8, w8, #0x1
  4335d8:	strb	w8, [sp, #47]
  4335dc:	b	43365c <_obstack_memory_used@@Base+0x154c0>
  4335e0:	ldr	w8, [sp, #12]
  4335e4:	and	w8, w8, #0x4
  4335e8:	cbz	w8, 4335f8 <_obstack_memory_used@@Base+0x1545c>
  4335ec:	ldr	w8, [sp, #20]
  4335f0:	and	w8, w8, #0x1
  4335f4:	cbz	w8, 433640 <_obstack_memory_used@@Base+0x154a4>
  4335f8:	ldr	w8, [sp, #12]
  4335fc:	and	w8, w8, #0x8
  433600:	cbz	w8, 433610 <_obstack_memory_used@@Base+0x15474>
  433604:	ldr	w8, [sp, #20]
  433608:	and	w8, w8, #0x1
  43360c:	cbnz	w8, 433640 <_obstack_memory_used@@Base+0x154a4>
  433610:	ldr	w8, [sp, #12]
  433614:	and	w8, w8, #0x20
  433618:	cbz	w8, 433628 <_obstack_memory_used@@Base+0x1548c>
  43361c:	ldr	w8, [sp, #20]
  433620:	and	w8, w8, #0x2
  433624:	cbz	w8, 433640 <_obstack_memory_used@@Base+0x154a4>
  433628:	ldr	w8, [sp, #12]
  43362c:	and	w8, w8, #0x80
  433630:	cbz	w8, 433650 <_obstack_memory_used@@Base+0x154b4>
  433634:	ldr	w8, [sp, #20]
  433638:	and	w8, w8, #0x8
  43363c:	cbnz	w8, 433650 <_obstack_memory_used@@Base+0x154b4>
  433640:	mov	w8, wzr
  433644:	and	w8, w8, #0x1
  433648:	strb	w8, [sp, #47]
  43364c:	b	43365c <_obstack_memory_used@@Base+0x154c0>
  433650:	mov	w8, #0x1                   	// #1
  433654:	and	w8, w8, #0x1
  433658:	strb	w8, [sp, #47]
  43365c:	ldrb	w8, [sp, #47]
  433660:	and	w0, w8, #0x1
  433664:	add	sp, sp, #0x30
  433668:	ret
  43366c:	sub	sp, sp, #0x30
  433670:	str	x0, [sp, #40]
  433674:	str	x1, [sp, #32]
  433678:	str	x2, [sp, #24]
  43367c:	str	x3, [sp, #16]
  433680:	str	x4, [sp, #8]
  433684:	ldr	x8, [sp, #32]
  433688:	ldr	x9, [sp, #40]
  43368c:	str	x8, [x9]
  433690:	ldr	x8, [sp, #24]
  433694:	ldr	x9, [sp, #40]
  433698:	str	x8, [x9, #8]
  43369c:	ldr	x8, [sp, #16]
  4336a0:	ldr	x9, [sp, #40]
  4336a4:	str	x8, [x9, #16]
  4336a8:	ldr	x8, [sp, #8]
  4336ac:	ldr	x9, [sp, #40]
  4336b0:	str	x8, [x9, #24]
  4336b4:	ldr	x8, [sp, #40]
  4336b8:	str	xzr, [x8, #32]
  4336bc:	str	xzr, [x8, #40]
  4336c0:	str	xzr, [x8, #48]
  4336c4:	add	sp, sp, #0x30
  4336c8:	ret
  4336cc:	sub	sp, sp, #0x60
  4336d0:	stp	x29, x30, [sp, #80]
  4336d4:	add	x29, sp, #0x50
  4336d8:	stur	x0, [x29, #-16]
  4336dc:	stur	x1, [x29, #-24]
  4336e0:	stur	wzr, [x29, #-32]
  4336e4:	ldur	x8, [x29, #-24]
  4336e8:	ldr	x8, [x8, #24]
  4336ec:	str	x8, [sp, #40]
  4336f0:	ldur	x8, [x29, #-16]
  4336f4:	ldr	x8, [x8, #184]
  4336f8:	cbz	x8, 433720 <_obstack_memory_used@@Base+0x15584>
  4336fc:	ldur	x8, [x29, #-16]
  433700:	ldr	x8, [x8, #184]
  433704:	ldr	x9, [sp, #40]
  433708:	mov	x10, #0x8                   	// #8
  43370c:	mul	x9, x10, x9
  433710:	add	x8, x8, x9
  433714:	ldr	x8, [x8]
  433718:	cbz	x8, 433720 <_obstack_memory_used@@Base+0x15584>
  43371c:	b	433720 <_obstack_memory_used@@Base+0x15584>
  433720:	ldur	x8, [x29, #-24]
  433724:	ldr	x1, [x8, #16]
  433728:	add	x0, sp, #0x10
  43372c:	bl	429ae4 <_obstack_memory_used@@Base+0xb948>
  433730:	stur	w0, [x29, #-28]
  433734:	ldur	w9, [x29, #-28]
  433738:	cmp	w9, #0x0
  43373c:	cset	w9, ne  // ne = any
  433740:	and	w9, w9, #0x1
  433744:	mov	w1, w9
  433748:	sxtw	x8, w1
  43374c:	cbz	x8, 43375c <_obstack_memory_used@@Base+0x155c0>
  433750:	ldur	w8, [x29, #-28]
  433754:	stur	w8, [x29, #-4]
  433758:	b	4338e8 <_obstack_memory_used@@Base+0x1574c>
  43375c:	ldur	x0, [x29, #-16]
  433760:	ldur	x1, [x29, #-24]
  433764:	ldr	x2, [sp, #40]
  433768:	add	x3, sp, #0x10
  43376c:	bl	433a80 <_obstack_memory_used@@Base+0x158e4>
  433770:	stur	w0, [x29, #-28]
  433774:	ldur	w8, [x29, #-28]
  433778:	cmp	w8, #0x0
  43377c:	cset	w8, ne  // ne = any
  433780:	and	w8, w8, #0x1
  433784:	mov	w1, w8
  433788:	sxtw	x9, w1
  43378c:	cbz	x9, 433794 <_obstack_memory_used@@Base+0x155f8>
  433790:	b	4338d4 <_obstack_memory_used@@Base+0x15738>
  433794:	ldr	x8, [sp, #40]
  433798:	cmp	x8, #0x0
  43379c:	cset	w9, le
  4337a0:	tbnz	w9, #0, 4338d0 <_obstack_memory_used@@Base+0x15734>
  4337a4:	ldur	x8, [x29, #-24]
  4337a8:	ldr	x8, [x8]
  4337ac:	ldr	x9, [sp, #40]
  4337b0:	mov	x10, #0x8                   	// #8
  4337b4:	mul	x9, x10, x9
  4337b8:	add	x8, x8, x9
  4337bc:	ldr	x8, [x8]
  4337c0:	cbnz	x8, 4337d4 <_obstack_memory_used@@Base+0x15638>
  4337c4:	ldur	w8, [x29, #-32]
  4337c8:	add	w8, w8, #0x1
  4337cc:	str	w8, [sp, #12]
  4337d0:	b	4337dc <_obstack_memory_used@@Base+0x15640>
  4337d4:	mov	w8, wzr
  4337d8:	str	w8, [sp, #12]
  4337dc:	ldr	w8, [sp, #12]
  4337e0:	stur	w8, [x29, #-32]
  4337e4:	ldur	w8, [x29, #-32]
  4337e8:	ldur	x9, [x29, #-16]
  4337ec:	ldr	w10, [x9, #224]
  4337f0:	cmp	w8, w10
  4337f4:	b.le	43382c <_obstack_memory_used@@Base+0x15690>
  4337f8:	ldur	x8, [x29, #-24]
  4337fc:	ldr	x0, [x8]
  433800:	ldr	x8, [sp, #40]
  433804:	mov	x9, #0x8                   	// #8
  433808:	mul	x2, x9, x8
  43380c:	mov	w10, wzr
  433810:	mov	w1, w10
  433814:	bl	402960 <memset@plt>
  433818:	add	x8, sp, #0x10
  43381c:	ldr	x0, [x8, #16]
  433820:	bl	402b40 <free@plt>
  433824:	stur	wzr, [x29, #-4]
  433828:	b	4338e8 <_obstack_memory_used@@Base+0x1574c>
  43382c:	mov	x8, #0x8                   	// #8
  433830:	str	xzr, [sp, #24]
  433834:	ldr	x9, [sp, #40]
  433838:	subs	x9, x9, #0x1
  43383c:	str	x9, [sp, #40]
  433840:	ldur	x9, [x29, #-16]
  433844:	ldr	x9, [x9, #184]
  433848:	ldr	x10, [sp, #40]
  43384c:	mul	x8, x8, x10
  433850:	add	x8, x9, x8
  433854:	ldr	x8, [x8]
  433858:	cbz	x8, 433894 <_obstack_memory_used@@Base+0x156f8>
  43385c:	ldur	x0, [x29, #-16]
  433860:	ldur	x1, [x29, #-24]
  433864:	ldr	x2, [sp, #40]
  433868:	add	x3, sp, #0x10
  43386c:	bl	433cb8 <_obstack_memory_used@@Base+0x15b1c>
  433870:	stur	w0, [x29, #-28]
  433874:	ldur	w8, [x29, #-28]
  433878:	cmp	w8, #0x0
  43387c:	cset	w8, ne  // ne = any
  433880:	and	w8, w8, #0x1
  433884:	mov	w1, w8
  433888:	sxtw	x9, w1
  43388c:	cbz	x9, 433894 <_obstack_memory_used@@Base+0x156f8>
  433890:	b	4338d4 <_obstack_memory_used@@Base+0x15738>
  433894:	ldur	x0, [x29, #-16]
  433898:	ldur	x1, [x29, #-24]
  43389c:	ldr	x2, [sp, #40]
  4338a0:	add	x3, sp, #0x10
  4338a4:	bl	433a80 <_obstack_memory_used@@Base+0x158e4>
  4338a8:	stur	w0, [x29, #-28]
  4338ac:	ldur	w8, [x29, #-28]
  4338b0:	cmp	w8, #0x0
  4338b4:	cset	w8, ne  // ne = any
  4338b8:	and	w8, w8, #0x1
  4338bc:	mov	w1, w8
  4338c0:	sxtw	x9, w1
  4338c4:	cbz	x9, 4338cc <_obstack_memory_used@@Base+0x15730>
  4338c8:	b	4338d4 <_obstack_memory_used@@Base+0x15738>
  4338cc:	b	433794 <_obstack_memory_used@@Base+0x155f8>
  4338d0:	stur	wzr, [x29, #-28]
  4338d4:	add	x8, sp, #0x10
  4338d8:	ldr	x0, [x8, #16]
  4338dc:	bl	402b40 <free@plt>
  4338e0:	ldur	w9, [x29, #-28]
  4338e4:	stur	w9, [x29, #-4]
  4338e8:	ldur	w0, [x29, #-4]
  4338ec:	ldp	x29, x30, [sp, #80]
  4338f0:	add	sp, sp, #0x60
  4338f4:	ret
  4338f8:	sub	sp, sp, #0x70
  4338fc:	stp	x29, x30, [sp, #96]
  433900:	add	x29, sp, #0x60
  433904:	stur	x0, [x29, #-16]
  433908:	stur	x1, [x29, #-24]
  43390c:	stur	x2, [x29, #-32]
  433910:	stur	x3, [x29, #-40]
  433914:	str	xzr, [sp, #48]
  433918:	ldr	x8, [sp, #48]
  43391c:	ldur	x9, [x29, #-40]
  433920:	cmp	x8, x9
  433924:	b.ge	433a6c <_obstack_memory_used@@Base+0x158d0>  // b.tcont
  433928:	ldur	x8, [x29, #-24]
  43392c:	ldr	x9, [sp, #48]
  433930:	mov	x10, #0x8                   	// #8
  433934:	mul	x9, x10, x9
  433938:	add	x8, x8, x9
  43393c:	ldr	x8, [x8]
  433940:	cbnz	x8, 433974 <_obstack_memory_used@@Base+0x157d8>
  433944:	ldur	x8, [x29, #-32]
  433948:	ldr	x9, [sp, #48]
  43394c:	mov	x10, #0x8                   	// #8
  433950:	mul	x9, x10, x9
  433954:	add	x8, x8, x9
  433958:	ldr	x8, [x8]
  43395c:	ldur	x9, [x29, #-24]
  433960:	ldr	x11, [sp, #48]
  433964:	mul	x10, x10, x11
  433968:	add	x9, x9, x10
  43396c:	str	x8, [x9]
  433970:	b	433a5c <_obstack_memory_used@@Base+0x158c0>
  433974:	ldur	x8, [x29, #-32]
  433978:	ldr	x9, [sp, #48]
  43397c:	mov	x10, #0x8                   	// #8
  433980:	mul	x9, x10, x9
  433984:	add	x8, x8, x9
  433988:	ldr	x8, [x8]
  43398c:	cbz	x8, 433a5c <_obstack_memory_used@@Base+0x158c0>
  433990:	ldur	x8, [x29, #-24]
  433994:	ldr	x9, [sp, #48]
  433998:	mov	x10, #0x8                   	// #8
  43399c:	mul	x9, x10, x9
  4339a0:	add	x8, x8, x9
  4339a4:	ldr	x8, [x8]
  4339a8:	add	x1, x8, #0x8
  4339ac:	ldur	x8, [x29, #-32]
  4339b0:	ldr	x9, [sp, #48]
  4339b4:	mul	x9, x10, x9
  4339b8:	add	x8, x8, x9
  4339bc:	ldr	x8, [x8]
  4339c0:	add	x2, x8, #0x8
  4339c4:	add	x0, sp, #0x10
  4339c8:	bl	42f4c4 <_obstack_memory_used@@Base+0x11328>
  4339cc:	str	w0, [sp, #44]
  4339d0:	ldr	w11, [sp, #44]
  4339d4:	cmp	w11, #0x0
  4339d8:	cset	w11, ne  // ne = any
  4339dc:	and	w11, w11, #0x1
  4339e0:	mov	w1, w11
  4339e4:	sxtw	x8, w1
  4339e8:	cbz	x8, 4339f8 <_obstack_memory_used@@Base+0x1585c>
  4339ec:	ldr	w8, [sp, #44]
  4339f0:	stur	w8, [x29, #-4]
  4339f4:	b	433a70 <_obstack_memory_used@@Base+0x158d4>
  4339f8:	ldur	x1, [x29, #-16]
  4339fc:	add	x0, sp, #0x2c
  433a00:	add	x8, sp, #0x10
  433a04:	mov	x2, x8
  433a08:	str	x8, [sp, #8]
  433a0c:	bl	43124c <_obstack_memory_used@@Base+0x130b0>
  433a10:	ldur	x8, [x29, #-24]
  433a14:	ldr	x9, [sp, #48]
  433a18:	mov	x10, #0x8                   	// #8
  433a1c:	mul	x9, x10, x9
  433a20:	add	x8, x8, x9
  433a24:	str	x0, [x8]
  433a28:	ldr	x8, [sp, #8]
  433a2c:	ldr	x0, [x8, #16]
  433a30:	bl	402b40 <free@plt>
  433a34:	ldr	w11, [sp, #44]
  433a38:	cmp	w11, #0x0
  433a3c:	cset	w11, ne  // ne = any
  433a40:	and	w11, w11, #0x1
  433a44:	mov	w0, w11
  433a48:	sxtw	x8, w0
  433a4c:	cbz	x8, 433a5c <_obstack_memory_used@@Base+0x158c0>
  433a50:	ldr	w8, [sp, #44]
  433a54:	stur	w8, [x29, #-4]
  433a58:	b	433a70 <_obstack_memory_used@@Base+0x158d4>
  433a5c:	ldr	x8, [sp, #48]
  433a60:	add	x8, x8, #0x1
  433a64:	str	x8, [sp, #48]
  433a68:	b	433918 <_obstack_memory_used@@Base+0x1577c>
  433a6c:	stur	wzr, [x29, #-4]
  433a70:	ldur	w0, [x29, #-4]
  433a74:	ldp	x29, x30, [sp, #96]
  433a78:	add	sp, sp, #0x70
  433a7c:	ret
  433a80:	sub	sp, sp, #0x60
  433a84:	stp	x29, x30, [sp, #80]
  433a88:	add	x29, sp, #0x50
  433a8c:	stur	x0, [x29, #-16]
  433a90:	stur	x1, [x29, #-24]
  433a94:	stur	x2, [x29, #-32]
  433a98:	str	x3, [sp, #40]
  433a9c:	ldur	x8, [x29, #-16]
  433aa0:	ldr	x8, [x8, #152]
  433aa4:	str	x8, [sp, #32]
  433aa8:	str	wzr, [sp, #28]
  433aac:	ldur	x8, [x29, #-16]
  433ab0:	ldr	x8, [x8, #184]
  433ab4:	ldur	x9, [x29, #-32]
  433ab8:	mov	x10, #0x8                   	// #8
  433abc:	mul	x9, x10, x9
  433ac0:	add	x8, x8, x9
  433ac4:	ldr	x8, [x8]
  433ac8:	cbnz	x8, 433ad8 <_obstack_memory_used@@Base+0x1593c>
  433acc:	mov	x8, xzr
  433ad0:	str	x8, [sp, #8]
  433ad4:	b	433afc <_obstack_memory_used@@Base+0x15960>
  433ad8:	ldur	x8, [x29, #-16]
  433adc:	ldr	x8, [x8, #184]
  433ae0:	ldur	x9, [x29, #-32]
  433ae4:	mov	x10, #0x8                   	// #8
  433ae8:	mul	x9, x10, x9
  433aec:	add	x8, x8, x9
  433af0:	ldr	x8, [x8]
  433af4:	add	x8, x8, #0x8
  433af8:	str	x8, [sp, #8]
  433afc:	ldr	x8, [sp, #8]
  433b00:	str	x8, [sp, #16]
  433b04:	ldr	x8, [sp, #40]
  433b08:	ldr	x8, [x8, #8]
  433b0c:	cbnz	x8, 433b34 <_obstack_memory_used@@Base+0x15998>
  433b10:	ldur	x8, [x29, #-24]
  433b14:	ldr	x8, [x8]
  433b18:	ldur	x9, [x29, #-32]
  433b1c:	mov	x10, #0x8                   	// #8
  433b20:	mul	x9, x10, x9
  433b24:	add	x8, x8, x9
  433b28:	mov	x9, xzr
  433b2c:	str	x9, [x8]
  433b30:	b	433c28 <_obstack_memory_used@@Base+0x15a8c>
  433b34:	ldr	x8, [sp, #16]
  433b38:	cbz	x8, 433bd4 <_obstack_memory_used@@Base+0x15a38>
  433b3c:	ldr	x0, [sp, #32]
  433b40:	ldr	x1, [sp, #40]
  433b44:	ldr	x2, [sp, #16]
  433b48:	bl	433f04 <_obstack_memory_used@@Base+0x15d68>
  433b4c:	str	w0, [sp, #28]
  433b50:	ldr	w8, [sp, #28]
  433b54:	cmp	w8, #0x0
  433b58:	cset	w8, ne  // ne = any
  433b5c:	and	w8, w8, #0x1
  433b60:	mov	w1, w8
  433b64:	sxtw	x9, w1
  433b68:	cbz	x9, 433b78 <_obstack_memory_used@@Base+0x159dc>
  433b6c:	ldr	w8, [sp, #28]
  433b70:	stur	w8, [x29, #-4]
  433b74:	b	433ca8 <_obstack_memory_used@@Base+0x15b0c>
  433b78:	ldur	x8, [x29, #-24]
  433b7c:	ldr	x8, [x8, #40]
  433b80:	cbz	x8, 433bd4 <_obstack_memory_used@@Base+0x15a38>
  433b84:	ldr	x0, [sp, #32]
  433b88:	ldr	x1, [sp, #40]
  433b8c:	ldr	x2, [sp, #16]
  433b90:	ldur	x8, [x29, #-24]
  433b94:	add	x3, x8, #0x20
  433b98:	ldur	x8, [x29, #-16]
  433b9c:	ldr	x4, [x8, #216]
  433ba0:	ldur	x5, [x29, #-32]
  433ba4:	bl	434058 <_obstack_memory_used@@Base+0x15ebc>
  433ba8:	str	w0, [sp, #28]
  433bac:	ldr	w9, [sp, #28]
  433bb0:	cmp	w9, #0x0
  433bb4:	cset	w9, ne  // ne = any
  433bb8:	and	w9, w9, #0x1
  433bbc:	mov	w1, w9
  433bc0:	sxtw	x8, w1
  433bc4:	cbz	x8, 433bd4 <_obstack_memory_used@@Base+0x15a38>
  433bc8:	ldr	w8, [sp, #28]
  433bcc:	stur	w8, [x29, #-4]
  433bd0:	b	433ca8 <_obstack_memory_used@@Base+0x15b0c>
  433bd4:	ldr	x1, [sp, #32]
  433bd8:	ldr	x2, [sp, #40]
  433bdc:	add	x0, sp, #0x1c
  433be0:	bl	43124c <_obstack_memory_used@@Base+0x130b0>
  433be4:	ldur	x8, [x29, #-24]
  433be8:	ldr	x8, [x8]
  433bec:	ldur	x9, [x29, #-32]
  433bf0:	mov	x10, #0x8                   	// #8
  433bf4:	mul	x9, x10, x9
  433bf8:	add	x8, x8, x9
  433bfc:	str	x0, [x8]
  433c00:	ldr	w11, [sp, #28]
  433c04:	cmp	w11, #0x0
  433c08:	cset	w11, ne  // ne = any
  433c0c:	and	w11, w11, #0x1
  433c10:	mov	w0, w11
  433c14:	sxtw	x8, w0
  433c18:	cbz	x8, 433c28 <_obstack_memory_used@@Base+0x15a8c>
  433c1c:	ldr	w8, [sp, #28]
  433c20:	stur	w8, [x29, #-4]
  433c24:	b	433ca8 <_obstack_memory_used@@Base+0x15b0c>
  433c28:	ldr	x8, [sp, #16]
  433c2c:	cbz	x8, 433ca4 <_obstack_memory_used@@Base+0x15b08>
  433c30:	ldur	x8, [x29, #-16]
  433c34:	ldr	x8, [x8, #184]
  433c38:	ldur	x9, [x29, #-32]
  433c3c:	mov	x10, #0x8                   	// #8
  433c40:	mul	x9, x10, x9
  433c44:	add	x8, x8, x9
  433c48:	ldr	x8, [x8]
  433c4c:	ldrb	w11, [x8, #104]
  433c50:	mov	w12, #0x6                   	// #6
  433c54:	lsr	w11, w11, w12
  433c58:	and	w11, w11, #0x1
  433c5c:	and	w11, w11, #0xff
  433c60:	cbz	w11, 433ca4 <_obstack_memory_used@@Base+0x15b08>
  433c64:	ldur	x0, [x29, #-16]
  433c68:	ldur	x1, [x29, #-24]
  433c6c:	ldur	x2, [x29, #-32]
  433c70:	ldr	x3, [sp, #16]
  433c74:	bl	434464 <_obstack_memory_used@@Base+0x162c8>
  433c78:	str	w0, [sp, #28]
  433c7c:	ldr	w8, [sp, #28]
  433c80:	cmp	w8, #0x0
  433c84:	cset	w8, ne  // ne = any
  433c88:	and	w8, w8, #0x1
  433c8c:	mov	w1, w8
  433c90:	sxtw	x9, w1
  433c94:	cbz	x9, 433ca4 <_obstack_memory_used@@Base+0x15b08>
  433c98:	ldr	w8, [sp, #28]
  433c9c:	stur	w8, [x29, #-4]
  433ca0:	b	433ca8 <_obstack_memory_used@@Base+0x15b0c>
  433ca4:	stur	wzr, [x29, #-4]
  433ca8:	ldur	w0, [x29, #-4]
  433cac:	ldp	x29, x30, [sp, #80]
  433cb0:	add	sp, sp, #0x60
  433cb4:	ret
  433cb8:	sub	sp, sp, #0x70
  433cbc:	stp	x29, x30, [sp, #96]
  433cc0:	add	x29, sp, #0x60
  433cc4:	stur	x0, [x29, #-16]
  433cc8:	stur	x1, [x29, #-24]
  433ccc:	stur	x2, [x29, #-32]
  433cd0:	stur	x3, [x29, #-40]
  433cd4:	ldur	x8, [x29, #-16]
  433cd8:	ldr	x8, [x8, #152]
  433cdc:	str	x8, [sp, #48]
  433ce0:	ldur	x8, [x29, #-16]
  433ce4:	ldr	x8, [x8, #184]
  433ce8:	ldur	x9, [x29, #-32]
  433cec:	mov	x10, #0x8                   	// #8
  433cf0:	mul	x9, x10, x9
  433cf4:	add	x8, x8, x9
  433cf8:	ldr	x8, [x8]
  433cfc:	add	x8, x8, #0x20
  433d00:	str	x8, [sp, #40]
  433d04:	str	xzr, [sp, #32]
  433d08:	ldr	x8, [sp, #32]
  433d0c:	ldr	x9, [sp, #40]
  433d10:	ldr	x9, [x9, #8]
  433d14:	cmp	x8, x9
  433d18:	b.ge	433ef0 <_obstack_memory_used@@Base+0x15d54>  // b.tcont
  433d1c:	ldr	x8, [sp, #40]
  433d20:	mov	x9, #0x10                  	// #16
  433d24:	ldr	x8, [x8, #16]
  433d28:	ldr	x10, [sp, #32]
  433d2c:	ldr	x8, [x8, x10, lsl #3]
  433d30:	str	x8, [sp, #24]
  433d34:	str	wzr, [sp, #20]
  433d38:	ldr	x8, [sp, #48]
  433d3c:	ldr	x8, [x8]
  433d40:	ldr	x10, [sp, #24]
  433d44:	mul	x9, x9, x10
  433d48:	add	x8, x8, x9
  433d4c:	ldr	w11, [x8, #8]
  433d50:	and	w11, w11, #0xff
  433d54:	and	w11, w11, #0x8
  433d58:	cbnz	w11, 433d60 <_obstack_memory_used@@Base+0x15bc4>
  433d5c:	b	433d60 <_obstack_memory_used@@Base+0x15bc4>
  433d60:	ldr	x8, [sp, #48]
  433d64:	ldr	x8, [x8]
  433d68:	ldr	x9, [sp, #24]
  433d6c:	mov	x10, #0x10                  	// #16
  433d70:	mul	x9, x10, x9
  433d74:	add	x8, x8, x9
  433d78:	ldr	w11, [x8, #8]
  433d7c:	lsr	w11, w11, #20
  433d80:	and	w11, w11, #0x1
  433d84:	cbz	w11, 433da8 <_obstack_memory_used@@Base+0x15c0c>
  433d88:	ldur	x0, [x29, #-16]
  433d8c:	ldur	x1, [x29, #-24]
  433d90:	ldr	x2, [sp, #24]
  433d94:	ldur	x3, [x29, #-32]
  433d98:	ldur	x8, [x29, #-24]
  433d9c:	ldr	x4, [x8, #24]
  433da0:	bl	43549c <_obstack_memory_used@@Base+0x17300>
  433da4:	str	w0, [sp, #20]
  433da8:	ldr	w8, [sp, #20]
  433dac:	cbnz	w8, 433e44 <_obstack_memory_used@@Base+0x15ca8>
  433db0:	ldur	x0, [x29, #-16]
  433db4:	ldr	x8, [sp, #48]
  433db8:	ldr	x8, [x8]
  433dbc:	ldr	x9, [sp, #24]
  433dc0:	mov	x10, #0x10                  	// #16
  433dc4:	mul	x9, x10, x9
  433dc8:	add	x1, x8, x9
  433dcc:	ldur	x2, [x29, #-32]
  433dd0:	bl	431b6c <_obstack_memory_used@@Base+0x139d0>
  433dd4:	tbnz	w0, #0, 433ddc <_obstack_memory_used@@Base+0x15c40>
  433dd8:	b	433e44 <_obstack_memory_used@@Base+0x15ca8>
  433ddc:	ldur	x8, [x29, #-24]
  433de0:	ldr	x8, [x8]
  433de4:	ldur	x9, [x29, #-32]
  433de8:	add	x9, x9, #0x1
  433dec:	mov	x10, #0x8                   	// #8
  433df0:	mul	x9, x10, x9
  433df4:	add	x8, x8, x9
  433df8:	ldr	x8, [x8]
  433dfc:	cbz	x8, 433e44 <_obstack_memory_used@@Base+0x15ca8>
  433e00:	ldur	x8, [x29, #-24]
  433e04:	ldr	x8, [x8]
  433e08:	ldur	x9, [x29, #-32]
  433e0c:	add	x9, x9, #0x1
  433e10:	mov	x10, #0x8                   	// #8
  433e14:	mul	x9, x10, x9
  433e18:	add	x8, x8, x9
  433e1c:	ldr	x8, [x8]
  433e20:	add	x0, x8, #0x8
  433e24:	ldr	x8, [sp, #48]
  433e28:	ldr	x8, [x8, #24]
  433e2c:	ldr	x9, [sp, #24]
  433e30:	ldr	x1, [x8, x9, lsl #3]
  433e34:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  433e38:	cbz	x0, 433e44 <_obstack_memory_used@@Base+0x15ca8>
  433e3c:	mov	w8, #0x1                   	// #1
  433e40:	str	w8, [sp, #20]
  433e44:	ldr	w8, [sp, #20]
  433e48:	cbnz	w8, 433e50 <_obstack_memory_used@@Base+0x15cb4>
  433e4c:	b	433ee0 <_obstack_memory_used@@Base+0x15d44>
  433e50:	ldur	x8, [x29, #-24]
  433e54:	ldr	x8, [x8, #40]
  433e58:	cbz	x8, 433ea4 <_obstack_memory_used@@Base+0x15d08>
  433e5c:	ldur	x8, [x29, #-32]
  433e60:	ldrsw	x9, [sp, #20]
  433e64:	add	x8, x8, x9
  433e68:	str	x8, [sp, #8]
  433e6c:	ldur	x0, [x29, #-16]
  433e70:	ldur	x8, [x29, #-24]
  433e74:	add	x1, x8, #0x20
  433e78:	ldr	x8, [sp, #48]
  433e7c:	ldr	x8, [x8, #24]
  433e80:	ldr	x9, [sp, #24]
  433e84:	ldr	x2, [x8, x9, lsl #3]
  433e88:	ldr	x3, [sp, #8]
  433e8c:	ldr	x4, [sp, #24]
  433e90:	ldur	x5, [x29, #-32]
  433e94:	bl	434f5c <_obstack_memory_used@@Base+0x16dc0>
  433e98:	tbnz	w0, #0, 433ea0 <_obstack_memory_used@@Base+0x15d04>
  433e9c:	b	433ea4 <_obstack_memory_used@@Base+0x15d08>
  433ea0:	b	433ee0 <_obstack_memory_used@@Base+0x15d44>
  433ea4:	ldur	x0, [x29, #-40]
  433ea8:	ldr	x1, [sp, #24]
  433eac:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  433eb0:	mov	w8, #0x1                   	// #1
  433eb4:	and	w8, w0, w8
  433eb8:	strb	w8, [sp, #19]
  433ebc:	ldrb	w8, [sp, #19]
  433ec0:	eor	w8, w8, #0x1
  433ec4:	and	w8, w8, #0x1
  433ec8:	mov	w1, w8
  433ecc:	sxtw	x9, w1
  433ed0:	cbz	x9, 433ee0 <_obstack_memory_used@@Base+0x15d44>
  433ed4:	mov	w8, #0xc                   	// #12
  433ed8:	stur	w8, [x29, #-4]
  433edc:	b	433ef4 <_obstack_memory_used@@Base+0x15d58>
  433ee0:	ldr	x8, [sp, #32]
  433ee4:	add	x8, x8, #0x1
  433ee8:	str	x8, [sp, #32]
  433eec:	b	433d08 <_obstack_memory_used@@Base+0x15b6c>
  433ef0:	stur	wzr, [x29, #-4]
  433ef4:	ldur	w0, [x29, #-4]
  433ef8:	ldp	x29, x30, [sp, #96]
  433efc:	add	sp, sp, #0x70
  433f00:	ret
  433f04:	sub	sp, sp, #0x50
  433f08:	stp	x29, x30, [sp, #64]
  433f0c:	add	x29, sp, #0x40
  433f10:	add	x8, sp, #0x1c
  433f14:	stur	x0, [x29, #-16]
  433f18:	stur	x1, [x29, #-24]
  433f1c:	str	x2, [sp, #32]
  433f20:	str	wzr, [sp, #28]
  433f24:	ldur	x1, [x29, #-16]
  433f28:	ldur	x2, [x29, #-24]
  433f2c:	mov	x0, x8
  433f30:	bl	43124c <_obstack_memory_used@@Base+0x130b0>
  433f34:	str	x0, [sp, #8]
  433f38:	ldr	w9, [sp, #28]
  433f3c:	cmp	w9, #0x0
  433f40:	cset	w9, ne  // ne = any
  433f44:	and	w9, w9, #0x1
  433f48:	mov	w0, w9
  433f4c:	sxtw	x8, w0
  433f50:	cbz	x8, 433f60 <_obstack_memory_used@@Base+0x15dc4>
  433f54:	ldr	w8, [sp, #28]
  433f58:	stur	w8, [x29, #-4]
  433f5c:	b	434048 <_obstack_memory_used@@Base+0x15eac>
  433f60:	ldr	x8, [sp, #8]
  433f64:	ldr	x8, [x8, #56]
  433f68:	cbnz	x8, 434030 <_obstack_memory_used@@Base+0x15e94>
  433f6c:	ldr	x8, [sp, #8]
  433f70:	add	x0, x8, #0x38
  433f74:	ldur	x8, [x29, #-24]
  433f78:	ldr	x1, [x8, #8]
  433f7c:	bl	429f94 <_obstack_memory_used@@Base+0xbdf8>
  433f80:	str	w0, [sp, #28]
  433f84:	ldr	w9, [sp, #28]
  433f88:	cmp	w9, #0x0
  433f8c:	cset	w9, ne  // ne = any
  433f90:	and	w9, w9, #0x1
  433f94:	mov	w1, w9
  433f98:	sxtw	x8, w1
  433f9c:	cbz	x8, 433fac <_obstack_memory_used@@Base+0x15e10>
  433fa0:	mov	w8, #0xc                   	// #12
  433fa4:	stur	w8, [x29, #-4]
  433fa8:	b	434048 <_obstack_memory_used@@Base+0x15eac>
  433fac:	str	xzr, [sp, #16]
  433fb0:	ldr	x8, [sp, #16]
  433fb4:	ldur	x9, [x29, #-24]
  433fb8:	ldr	x9, [x9, #8]
  433fbc:	cmp	x8, x9
  433fc0:	b.ge	434030 <_obstack_memory_used@@Base+0x15e94>  // b.tcont
  433fc4:	ldr	x8, [sp, #8]
  433fc8:	add	x0, x8, #0x38
  433fcc:	ldur	x8, [x29, #-16]
  433fd0:	ldr	x8, [x8, #56]
  433fd4:	ldur	x9, [x29, #-24]
  433fd8:	ldr	x9, [x9, #16]
  433fdc:	ldr	x10, [sp, #16]
  433fe0:	ldr	x9, [x9, x10, lsl #3]
  433fe4:	mov	x10, #0x18                  	// #24
  433fe8:	mul	x9, x10, x9
  433fec:	add	x1, x8, x9
  433ff0:	bl	42a59c <_obstack_memory_used@@Base+0xc400>
  433ff4:	str	w0, [sp, #28]
  433ff8:	ldr	w11, [sp, #28]
  433ffc:	cmp	w11, #0x0
  434000:	cset	w11, ne  // ne = any
  434004:	and	w11, w11, #0x1
  434008:	mov	w1, w11
  43400c:	sxtw	x8, w1
  434010:	cbz	x8, 434020 <_obstack_memory_used@@Base+0x15e84>
  434014:	mov	w8, #0xc                   	// #12
  434018:	stur	w8, [x29, #-4]
  43401c:	b	434048 <_obstack_memory_used@@Base+0x15eac>
  434020:	ldr	x8, [sp, #16]
  434024:	add	x8, x8, #0x1
  434028:	str	x8, [sp, #16]
  43402c:	b	433fb0 <_obstack_memory_used@@Base+0x15e14>
  434030:	ldur	x0, [x29, #-24]
  434034:	ldr	x1, [sp, #32]
  434038:	ldr	x8, [sp, #8]
  43403c:	add	x2, x8, #0x38
  434040:	bl	4348ac <_obstack_memory_used@@Base+0x16710>
  434044:	stur	w0, [x29, #-4]
  434048:	ldur	w0, [x29, #-4]
  43404c:	ldp	x29, x30, [sp, #64]
  434050:	add	sp, sp, #0x50
  434054:	ret
  434058:	sub	sp, sp, #0xb0
  43405c:	stp	x29, x30, [sp, #160]
  434060:	add	x29, sp, #0xa0
  434064:	sub	x8, x29, #0x10
  434068:	str	x0, [x8]
  43406c:	stur	x1, [x29, #-24]
  434070:	stur	x2, [x29, #-32]
  434074:	stur	x3, [x29, #-40]
  434078:	stur	x4, [x29, #-48]
  43407c:	stur	x5, [x29, #-56]
  434080:	str	xzr, [sp, #80]
  434084:	str	x8, [sp]
  434088:	ldr	x8, [sp, #80]
  43408c:	ldur	x9, [x29, #-40]
  434090:	ldr	x9, [x9, #8]
  434094:	cmp	x8, x9
  434098:	b.ge	434450 <_obstack_memory_used@@Base+0x162b4>  // b.tcont
  43409c:	ldur	x8, [x29, #-48]
  4340a0:	ldur	x9, [x29, #-40]
  4340a4:	ldr	x9, [x9, #16]
  4340a8:	ldr	x10, [sp, #80]
  4340ac:	ldr	x9, [x9, x10, lsl #3]
  4340b0:	mov	x10, #0x28                  	// #40
  4340b4:	mul	x9, x10, x9
  4340b8:	add	x8, x8, x9
  4340bc:	str	x8, [sp, #64]
  4340c0:	ldur	x8, [x29, #-56]
  4340c4:	ldr	x9, [sp, #64]
  4340c8:	ldr	x9, [x9, #16]
  4340cc:	cmp	x8, x9
  4340d0:	b.le	4340e8 <_obstack_memory_used@@Base+0x15f4c>
  4340d4:	ldr	x8, [sp, #64]
  4340d8:	ldr	x8, [x8, #8]
  4340dc:	ldur	x9, [x29, #-56]
  4340e0:	cmp	x8, x9
  4340e4:	b.ge	4340ec <_obstack_memory_used@@Base+0x15f50>  // b.tcont
  4340e8:	b	434440 <_obstack_memory_used@@Base+0x162a4>
  4340ec:	ldr	x8, [sp]
  4340f0:	ldr	x9, [x8]
  4340f4:	ldr	x9, [x9]
  4340f8:	ldr	x10, [sp, #64]
  4340fc:	ldr	x10, [x10]
  434100:	mov	x11, #0x10                  	// #16
  434104:	mul	x10, x11, x10
  434108:	ldr	x9, [x9, x10]
  43410c:	str	x9, [sp, #72]
  434110:	ldr	x9, [sp, #64]
  434114:	ldr	x9, [x9, #24]
  434118:	ldur	x10, [x29, #-56]
  43411c:	cmp	x9, x10
  434120:	b.ne	434354 <_obstack_memory_used@@Base+0x161b8>  // b.any
  434124:	mov	x8, #0xffffffffffffffff    	// #-1
  434128:	str	x8, [sp, #56]
  43412c:	str	x8, [sp, #48]
  434130:	stur	xzr, [x29, #-72]
  434134:	ldur	x8, [x29, #-72]
  434138:	ldur	x9, [x29, #-24]
  43413c:	ldr	x9, [x9, #8]
  434140:	cmp	x8, x9
  434144:	b.ge	434210 <_obstack_memory_used@@Base+0x16074>  // b.tcont
  434148:	ldur	x8, [x29, #-24]
  43414c:	mov	x9, #0x10                  	// #16
  434150:	ldr	x8, [x8, #16]
  434154:	ldur	x10, [x29, #-72]
  434158:	ldr	x8, [x8, x10, lsl #3]
  43415c:	str	x8, [sp, #40]
  434160:	ldr	x8, [sp]
  434164:	ldr	x10, [x8]
  434168:	ldr	x10, [x10]
  43416c:	ldr	x11, [sp, #40]
  434170:	mul	x9, x9, x11
  434174:	add	x9, x10, x9
  434178:	ldr	w12, [x9, #8]
  43417c:	and	w12, w12, #0xff
  434180:	str	w12, [sp, #36]
  434184:	ldr	w12, [sp, #36]
  434188:	cmp	w12, #0x8
  43418c:	b.ne	4341c4 <_obstack_memory_used@@Base+0x16028>  // b.any
  434190:	ldr	x8, [sp, #72]
  434194:	ldr	x9, [sp]
  434198:	ldr	x10, [x9]
  43419c:	ldr	x10, [x10]
  4341a0:	ldr	x11, [sp, #40]
  4341a4:	mov	x12, #0x10                  	// #16
  4341a8:	mul	x11, x12, x11
  4341ac:	ldr	x10, [x10, x11]
  4341b0:	cmp	x8, x10
  4341b4:	b.ne	4341c4 <_obstack_memory_used@@Base+0x16028>  // b.any
  4341b8:	ldr	x8, [sp, #40]
  4341bc:	str	x8, [sp, #56]
  4341c0:	b	434200 <_obstack_memory_used@@Base+0x16064>
  4341c4:	ldr	w8, [sp, #36]
  4341c8:	cmp	w8, #0x9
  4341cc:	b.ne	434200 <_obstack_memory_used@@Base+0x16064>  // b.any
  4341d0:	ldr	x8, [sp, #72]
  4341d4:	ldr	x9, [sp]
  4341d8:	ldr	x10, [x9]
  4341dc:	ldr	x10, [x10]
  4341e0:	ldr	x11, [sp, #40]
  4341e4:	mov	x12, #0x10                  	// #16
  4341e8:	mul	x11, x12, x11
  4341ec:	ldr	x10, [x10, x11]
  4341f0:	cmp	x8, x10
  4341f4:	b.ne	434200 <_obstack_memory_used@@Base+0x16064>  // b.any
  4341f8:	ldr	x8, [sp, #40]
  4341fc:	str	x8, [sp, #48]
  434200:	ldur	x8, [x29, #-72]
  434204:	add	x8, x8, #0x1
  434208:	stur	x8, [x29, #-72]
  43420c:	b	434134 <_obstack_memory_used@@Base+0x15f98>
  434210:	ldr	x8, [sp, #56]
  434214:	cmp	x8, #0x0
  434218:	cset	w9, lt  // lt = tstop
  43421c:	tbnz	w9, #0, 434264 <_obstack_memory_used@@Base+0x160c8>
  434220:	ldr	x8, [sp]
  434224:	ldr	x0, [x8]
  434228:	ldr	x1, [sp, #56]
  43422c:	ldur	x2, [x29, #-24]
  434230:	ldur	x3, [x29, #-32]
  434234:	bl	434cec <_obstack_memory_used@@Base+0x16b50>
  434238:	stur	w0, [x29, #-60]
  43423c:	ldur	w9, [x29, #-60]
  434240:	cmp	w9, #0x0
  434244:	cset	w9, ne  // ne = any
  434248:	and	w9, w9, #0x1
  43424c:	mov	w1, w9
  434250:	sxtw	x8, w1
  434254:	cbz	x8, 434264 <_obstack_memory_used@@Base+0x160c8>
  434258:	ldur	w8, [x29, #-60]
  43425c:	stur	w8, [x29, #-4]
  434260:	b	434454 <_obstack_memory_used@@Base+0x162b8>
  434264:	ldr	x8, [sp, #48]
  434268:	cmp	x8, #0x0
  43426c:	cset	w9, lt  // lt = tstop
  434270:	tbnz	w9, #0, 434350 <_obstack_memory_used@@Base+0x161b4>
  434274:	stur	xzr, [x29, #-72]
  434278:	ldur	x8, [x29, #-72]
  43427c:	ldur	x9, [x29, #-24]
  434280:	ldr	x9, [x9, #8]
  434284:	cmp	x8, x9
  434288:	b.ge	434350 <_obstack_memory_used@@Base+0x161b4>  // b.tcont
  43428c:	ldur	x8, [x29, #-24]
  434290:	ldr	x8, [x8, #16]
  434294:	ldur	x9, [x29, #-72]
  434298:	ldr	x8, [x8, x9, lsl #3]
  43429c:	str	x8, [sp, #24]
  4342a0:	ldr	x8, [sp]
  4342a4:	ldr	x9, [x8]
  4342a8:	ldr	x9, [x9, #56]
  4342ac:	ldr	x10, [sp, #24]
  4342b0:	mov	x11, #0x18                  	// #24
  4342b4:	mul	x10, x11, x10
  4342b8:	add	x0, x9, x10
  4342bc:	ldr	x1, [sp, #48]
  4342c0:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  4342c4:	cbnz	x0, 434340 <_obstack_memory_used@@Base+0x161a4>
  4342c8:	ldr	x8, [sp]
  4342cc:	ldr	x9, [x8]
  4342d0:	ldr	x9, [x9, #48]
  4342d4:	ldr	x10, [sp, #24]
  4342d8:	mov	x11, #0x18                  	// #24
  4342dc:	mul	x10, x11, x10
  4342e0:	add	x0, x9, x10
  4342e4:	ldr	x1, [sp, #48]
  4342e8:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  4342ec:	cbnz	x0, 434340 <_obstack_memory_used@@Base+0x161a4>
  4342f0:	ldr	x8, [sp]
  4342f4:	ldr	x0, [x8]
  4342f8:	ldr	x1, [sp, #24]
  4342fc:	ldur	x2, [x29, #-24]
  434300:	ldur	x3, [x29, #-32]
  434304:	bl	434cec <_obstack_memory_used@@Base+0x16b50>
  434308:	stur	w0, [x29, #-60]
  43430c:	ldur	w9, [x29, #-60]
  434310:	cmp	w9, #0x0
  434314:	cset	w9, ne  // ne = any
  434318:	and	w9, w9, #0x1
  43431c:	mov	w1, w9
  434320:	sxtw	x8, w1
  434324:	cbz	x8, 434334 <_obstack_memory_used@@Base+0x16198>
  434328:	ldur	w8, [x29, #-60]
  43432c:	stur	w8, [x29, #-4]
  434330:	b	434454 <_obstack_memory_used@@Base+0x162b8>
  434334:	ldur	x8, [x29, #-72]
  434338:	subs	x8, x8, #0x1
  43433c:	stur	x8, [x29, #-72]
  434340:	ldur	x8, [x29, #-72]
  434344:	add	x8, x8, #0x1
  434348:	stur	x8, [x29, #-72]
  43434c:	b	434278 <_obstack_memory_used@@Base+0x160dc>
  434350:	b	434440 <_obstack_memory_used@@Base+0x162a4>
  434354:	stur	xzr, [x29, #-72]
  434358:	ldur	x8, [x29, #-72]
  43435c:	ldur	x9, [x29, #-24]
  434360:	ldr	x9, [x9, #8]
  434364:	cmp	x8, x9
  434368:	b.ge	434440 <_obstack_memory_used@@Base+0x162a4>  // b.tcont
  43436c:	ldur	x8, [x29, #-24]
  434370:	mov	x9, #0x10                  	// #16
  434374:	ldr	x8, [x8, #16]
  434378:	ldur	x10, [x29, #-72]
  43437c:	ldr	x8, [x8, x10, lsl #3]
  434380:	str	x8, [sp, #16]
  434384:	ldr	x8, [sp]
  434388:	ldr	x10, [x8]
  43438c:	ldr	x10, [x10]
  434390:	ldr	x11, [sp, #16]
  434394:	mul	x9, x9, x11
  434398:	add	x9, x10, x9
  43439c:	ldr	w12, [x9, #8]
  4343a0:	and	w12, w12, #0xff
  4343a4:	str	w12, [sp, #12]
  4343a8:	ldr	w12, [sp, #12]
  4343ac:	cmp	w12, #0x9
  4343b0:	b.eq	4343c0 <_obstack_memory_used@@Base+0x16224>  // b.none
  4343b4:	ldr	w8, [sp, #12]
  4343b8:	cmp	w8, #0x8
  4343bc:	b.ne	434430 <_obstack_memory_used@@Base+0x16294>  // b.any
  4343c0:	ldr	x8, [sp, #72]
  4343c4:	ldr	x9, [sp]
  4343c8:	ldr	x10, [x9]
  4343cc:	ldr	x10, [x10]
  4343d0:	ldr	x11, [sp, #16]
  4343d4:	mov	x12, #0x10                  	// #16
  4343d8:	mul	x11, x12, x11
  4343dc:	ldr	x10, [x10, x11]
  4343e0:	cmp	x8, x10
  4343e4:	b.eq	4343ec <_obstack_memory_used@@Base+0x16250>  // b.none
  4343e8:	b	434430 <_obstack_memory_used@@Base+0x16294>
  4343ec:	ldr	x8, [sp]
  4343f0:	ldr	x0, [x8]
  4343f4:	ldr	x1, [sp, #16]
  4343f8:	ldur	x2, [x29, #-24]
  4343fc:	ldur	x3, [x29, #-32]
  434400:	bl	434cec <_obstack_memory_used@@Base+0x16b50>
  434404:	stur	w0, [x29, #-60]
  434408:	ldur	w9, [x29, #-60]
  43440c:	cmp	w9, #0x0
  434410:	cset	w9, ne  // ne = any
  434414:	and	w9, w9, #0x1
  434418:	mov	w1, w9
  43441c:	sxtw	x8, w1
  434420:	cbz	x8, 434430 <_obstack_memory_used@@Base+0x16294>
  434424:	ldur	w8, [x29, #-60]
  434428:	stur	w8, [x29, #-4]
  43442c:	b	434454 <_obstack_memory_used@@Base+0x162b8>
  434430:	ldur	x8, [x29, #-72]
  434434:	add	x8, x8, #0x1
  434438:	stur	x8, [x29, #-72]
  43443c:	b	434358 <_obstack_memory_used@@Base+0x161bc>
  434440:	ldr	x8, [sp, #80]
  434444:	add	x8, x8, #0x1
  434448:	str	x8, [sp, #80]
  43444c:	b	434088 <_obstack_memory_used@@Base+0x15eec>
  434450:	stur	wzr, [x29, #-4]
  434454:	ldur	w0, [x29, #-4]
  434458:	ldp	x29, x30, [sp, #160]
  43445c:	add	sp, sp, #0xb0
  434460:	ret
  434464:	sub	sp, sp, #0x100
  434468:	stp	x29, x30, [sp, #240]
  43446c:	add	x29, sp, #0xf0
  434470:	mov	x8, #0xffffffffffffffff    	// #-1
  434474:	stur	x0, [x29, #-16]
  434478:	stur	x1, [x29, #-24]
  43447c:	stur	x2, [x29, #-32]
  434480:	stur	x3, [x29, #-40]
  434484:	ldur	x9, [x29, #-16]
  434488:	ldr	x9, [x9, #152]
  43448c:	stur	x9, [x29, #-48]
  434490:	ldur	x0, [x29, #-16]
  434494:	ldur	x1, [x29, #-32]
  434498:	str	x8, [sp, #32]
  43449c:	bl	42f818 <_obstack_memory_used@@Base+0x1167c>
  4344a0:	str	x0, [sp, #104]
  4344a4:	ldr	x8, [sp, #104]
  4344a8:	ldr	x9, [sp, #32]
  4344ac:	cmp	x8, x9
  4344b0:	b.ne	4344bc <_obstack_memory_used@@Base+0x16320>  // b.any
  4344b4:	stur	wzr, [x29, #-4]
  4344b8:	b	43489c <_obstack_memory_used@@Base+0x16700>
  4344bc:	mov	x8, xzr
  4344c0:	str	x8, [sp, #112]
  4344c4:	stur	xzr, [x29, #-64]
  4344c8:	ldur	x8, [x29, #-64]
  4344cc:	ldur	x9, [x29, #-40]
  4344d0:	ldr	x9, [x9, #8]
  4344d4:	cmp	x8, x9
  4344d8:	b.ge	43487c <_obstack_memory_used@@Base+0x166e0>  // b.tcont
  4344dc:	ldur	x8, [x29, #-40]
  4344e0:	mov	x9, #0x10                  	// #16
  4344e4:	ldr	x8, [x8, #16]
  4344e8:	ldur	x10, [x29, #-64]
  4344ec:	ldr	x8, [x8, x10, lsl #3]
  4344f0:	stur	x8, [x29, #-72]
  4344f4:	ldur	x8, [x29, #-48]
  4344f8:	ldr	x8, [x8]
  4344fc:	ldur	x10, [x29, #-72]
  434500:	mul	x9, x9, x10
  434504:	add	x8, x8, x9
  434508:	ldr	w11, [x8, #8]
  43450c:	and	w11, w11, #0xff
  434510:	str	w11, [sp, #92]
  434514:	ldur	x8, [x29, #-72]
  434518:	ldur	x9, [x29, #-24]
  43451c:	ldr	x9, [x9, #16]
  434520:	cmp	x8, x9
  434524:	b.ne	434540 <_obstack_memory_used@@Base+0x163a4>  // b.any
  434528:	ldur	x8, [x29, #-32]
  43452c:	ldur	x9, [x29, #-24]
  434530:	ldr	x9, [x9, #24]
  434534:	cmp	x8, x9
  434538:	b.ne	434540 <_obstack_memory_used@@Base+0x163a4>  // b.any
  43453c:	b	43486c <_obstack_memory_used@@Base+0x166d0>
  434540:	ldr	w8, [sp, #92]
  434544:	cmp	w8, #0x4
  434548:	b.eq	434550 <_obstack_memory_used@@Base+0x163b4>  // b.none
  43454c:	b	43486c <_obstack_memory_used@@Base+0x166d0>
  434550:	ldur	x8, [x29, #-16]
  434554:	ldr	x8, [x8, #216]
  434558:	ldr	x9, [sp, #104]
  43455c:	mov	x10, #0x28                  	// #40
  434560:	mul	x9, x10, x9
  434564:	add	x8, x8, x9
  434568:	str	x8, [sp, #80]
  43456c:	ldr	x8, [sp, #104]
  434570:	str	x8, [sp, #96]
  434574:	ldr	x8, [sp, #80]
  434578:	ldr	x8, [x8]
  43457c:	ldur	x9, [x29, #-72]
  434580:	cmp	x8, x9
  434584:	b.eq	43458c <_obstack_memory_used@@Base+0x163f0>  // b.none
  434588:	b	43484c <_obstack_memory_used@@Base+0x166b0>
  43458c:	ldr	x8, [sp, #80]
  434590:	ldr	x8, [x8, #24]
  434594:	ldr	x9, [sp, #80]
  434598:	ldr	x9, [x9, #16]
  43459c:	subs	x8, x8, x9
  4345a0:	str	x8, [sp, #72]
  4345a4:	ldur	x8, [x29, #-32]
  4345a8:	ldr	x9, [sp, #72]
  4345ac:	add	x8, x8, x9
  4345b0:	str	x8, [sp, #64]
  4345b4:	ldr	x8, [sp, #72]
  4345b8:	cbz	x8, 4345d4 <_obstack_memory_used@@Base+0x16438>
  4345bc:	ldur	x8, [x29, #-48]
  4345c0:	ldr	x8, [x8, #24]
  4345c4:	ldur	x9, [x29, #-72]
  4345c8:	ldr	x8, [x8, x9, lsl #3]
  4345cc:	str	x8, [sp, #24]
  4345d0:	b	4345f8 <_obstack_memory_used@@Base+0x1645c>
  4345d4:	ldur	x8, [x29, #-48]
  4345d8:	ldr	x8, [x8, #40]
  4345dc:	ldur	x9, [x29, #-72]
  4345e0:	mov	x10, #0x18                  	// #24
  4345e4:	mul	x9, x10, x9
  4345e8:	add	x8, x8, x9
  4345ec:	ldr	x8, [x8, #16]
  4345f0:	ldr	x8, [x8]
  4345f4:	str	x8, [sp, #24]
  4345f8:	ldr	x8, [sp, #24]
  4345fc:	str	x8, [sp, #56]
  434600:	ldr	x8, [sp, #64]
  434604:	ldur	x9, [x29, #-24]
  434608:	ldr	x9, [x9, #24]
  43460c:	cmp	x8, x9
  434610:	b.gt	4346a8 <_obstack_memory_used@@Base+0x1650c>
  434614:	ldur	x8, [x29, #-24]
  434618:	ldr	x8, [x8]
  43461c:	ldr	x9, [sp, #64]
  434620:	mov	x10, #0x8                   	// #8
  434624:	mul	x9, x10, x9
  434628:	add	x8, x8, x9
  43462c:	ldr	x8, [x8]
  434630:	cbz	x8, 4346a8 <_obstack_memory_used@@Base+0x1650c>
  434634:	ldur	x8, [x29, #-24]
  434638:	ldr	x8, [x8]
  43463c:	ldr	x9, [sp, #64]
  434640:	mov	x10, #0x8                   	// #8
  434644:	mul	x9, x10, x9
  434648:	add	x8, x8, x9
  43464c:	ldr	x8, [x8]
  434650:	cbz	x8, 4346a8 <_obstack_memory_used@@Base+0x1650c>
  434654:	ldur	x8, [x29, #-24]
  434658:	ldr	x8, [x8]
  43465c:	ldr	x9, [sp, #64]
  434660:	mov	x10, #0x8                   	// #8
  434664:	mul	x9, x10, x9
  434668:	add	x8, x8, x9
  43466c:	ldr	x8, [x8]
  434670:	add	x0, x8, #0x8
  434674:	ldr	x1, [sp, #56]
  434678:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  43467c:	cbz	x0, 4346a8 <_obstack_memory_used@@Base+0x1650c>
  434680:	ldur	x0, [x29, #-16]
  434684:	ldur	x8, [x29, #-24]
  434688:	add	x1, x8, #0x20
  43468c:	ldur	x2, [x29, #-72]
  434690:	ldur	x3, [x29, #-32]
  434694:	ldr	x4, [sp, #56]
  434698:	ldr	x5, [sp, #64]
  43469c:	bl	434f5c <_obstack_memory_used@@Base+0x16dc0>
  4346a0:	tbnz	w0, #0, 4346a8 <_obstack_memory_used@@Base+0x1650c>
  4346a4:	b	4346ac <_obstack_memory_used@@Base+0x16510>
  4346a8:	b	43484c <_obstack_memory_used@@Base+0x166b0>
  4346ac:	ldr	x8, [sp, #112]
  4346b0:	cbnz	x8, 434704 <_obstack_memory_used@@Base+0x16568>
  4346b4:	ldur	x1, [x29, #-24]
  4346b8:	add	x8, sp, #0x70
  4346bc:	mov	x0, x8
  4346c0:	mov	x2, #0x38                  	// #56
  4346c4:	str	x8, [sp, #16]
  4346c8:	bl	4026a0 <memcpy@plt>
  4346cc:	ldr	x8, [sp, #16]
  4346d0:	add	x0, x8, #0x20
  4346d4:	ldur	x9, [x29, #-24]
  4346d8:	add	x1, x9, #0x20
  4346dc:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  4346e0:	stur	w0, [x29, #-52]
  4346e4:	ldur	w10, [x29, #-52]
  4346e8:	cmp	w10, #0x0
  4346ec:	cset	w10, ne  // ne = any
  4346f0:	and	w10, w10, #0x1
  4346f4:	mov	w1, w10
  4346f8:	sxtw	x8, w1
  4346fc:	cbz	x8, 434704 <_obstack_memory_used@@Base+0x16568>
  434700:	b	434880 <_obstack_memory_used@@Base+0x166e4>
  434704:	ldur	x8, [x29, #-72]
  434708:	add	x9, sp, #0x70
  43470c:	str	x8, [sp, #128]
  434710:	ldur	x8, [x29, #-32]
  434714:	str	x8, [sp, #136]
  434718:	add	x0, x9, #0x20
  43471c:	ldr	x1, [sp, #96]
  434720:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  434724:	mov	w10, #0x1                   	// #1
  434728:	and	w10, w0, w10
  43472c:	strb	w10, [sp, #55]
  434730:	ldrb	w10, [sp, #55]
  434734:	eor	w10, w10, #0x1
  434738:	and	w10, w10, #0x1
  43473c:	mov	w1, w10
  434740:	sxtw	x8, w1
  434744:	cbz	x8, 434754 <_obstack_memory_used@@Base+0x165b8>
  434748:	mov	w8, #0xc                   	// #12
  43474c:	stur	w8, [x29, #-52]
  434750:	b	434880 <_obstack_memory_used@@Base+0x166e4>
  434754:	add	x1, sp, #0x70
  434758:	ldr	x8, [sp, #112]
  43475c:	ldur	x9, [x29, #-32]
  434760:	mov	x10, #0x8                   	// #8
  434764:	mul	x9, x10, x9
  434768:	add	x8, x8, x9
  43476c:	ldr	x8, [x8]
  434770:	str	x8, [sp, #40]
  434774:	ldur	x0, [x29, #-16]
  434778:	bl	4336cc <_obstack_memory_used@@Base+0x15530>
  43477c:	stur	w0, [x29, #-52]
  434780:	ldur	w11, [x29, #-52]
  434784:	cmp	w11, #0x0
  434788:	cset	w11, ne  // ne = any
  43478c:	and	w11, w11, #0x1
  434790:	mov	w1, w11
  434794:	sxtw	x8, w1
  434798:	cbz	x8, 4347a0 <_obstack_memory_used@@Base+0x16604>
  43479c:	b	434880 <_obstack_memory_used@@Base+0x166e4>
  4347a0:	ldur	x8, [x29, #-24]
  4347a4:	ldr	x8, [x8, #8]
  4347a8:	cbz	x8, 4347ec <_obstack_memory_used@@Base+0x16650>
  4347ac:	ldur	x0, [x29, #-48]
  4347b0:	ldur	x8, [x29, #-24]
  4347b4:	ldr	x1, [x8, #8]
  4347b8:	ldr	x2, [sp, #112]
  4347bc:	ldur	x8, [x29, #-32]
  4347c0:	add	x3, x8, #0x1
  4347c4:	bl	4338f8 <_obstack_memory_used@@Base+0x1575c>
  4347c8:	stur	w0, [x29, #-52]
  4347cc:	ldur	w9, [x29, #-52]
  4347d0:	cmp	w9, #0x0
  4347d4:	cset	w9, ne  // ne = any
  4347d8:	and	w9, w9, #0x1
  4347dc:	mov	w1, w9
  4347e0:	sxtw	x8, w1
  4347e4:	cbz	x8, 4347ec <_obstack_memory_used@@Base+0x16650>
  4347e8:	b	434880 <_obstack_memory_used@@Base+0x166e4>
  4347ec:	ldr	x8, [sp, #40]
  4347f0:	add	x9, sp, #0x70
  4347f4:	ldr	x10, [sp, #112]
  4347f8:	ldur	x11, [x29, #-32]
  4347fc:	mov	x12, #0x8                   	// #8
  434800:	mul	x11, x12, x11
  434804:	add	x10, x10, x11
  434808:	str	x8, [x10]
  43480c:	add	x0, x9, #0x20
  434810:	add	x8, x9, #0x20
  434814:	ldr	x1, [sp, #96]
  434818:	str	x0, [sp, #8]
  43481c:	mov	x0, x8
  434820:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434824:	subs	x1, x0, #0x1
  434828:	ldr	x0, [sp, #8]
  43482c:	bl	42b6cc <_obstack_memory_used@@Base+0xd530>
  434830:	ldur	x8, [x29, #-16]
  434834:	ldr	x8, [x8, #216]
  434838:	ldr	x9, [sp, #96]
  43483c:	mov	x10, #0x28                  	// #40
  434840:	mul	x9, x10, x9
  434844:	add	x8, x8, x9
  434848:	str	x8, [sp, #80]
  43484c:	ldr	x8, [sp, #96]
  434850:	add	x8, x8, #0x1
  434854:	str	x8, [sp, #96]
  434858:	ldr	x8, [sp, #80]
  43485c:	add	x9, x8, #0x28
  434860:	str	x9, [sp, #80]
  434864:	ldrb	w10, [x8, #32]
  434868:	cbnz	w10, 434574 <_obstack_memory_used@@Base+0x163d8>
  43486c:	ldur	x8, [x29, #-64]
  434870:	add	x8, x8, #0x1
  434874:	stur	x8, [x29, #-64]
  434878:	b	4344c8 <_obstack_memory_used@@Base+0x1632c>
  43487c:	stur	wzr, [x29, #-52]
  434880:	ldr	x8, [sp, #112]
  434884:	cbz	x8, 434894 <_obstack_memory_used@@Base+0x166f8>
  434888:	add	x8, sp, #0x70
  43488c:	ldr	x0, [x8, #48]
  434890:	bl	402b40 <free@plt>
  434894:	ldur	w8, [x29, #-52]
  434898:	stur	w8, [x29, #-4]
  43489c:	ldur	w0, [x29, #-4]
  4348a0:	ldp	x29, x30, [sp, #240]
  4348a4:	add	sp, sp, #0x100
  4348a8:	ret
  4348ac:	sub	sp, sp, #0x80
  4348b0:	stp	x29, x30, [sp, #112]
  4348b4:	add	x29, sp, #0x70
  4348b8:	stur	x0, [x29, #-16]
  4348bc:	stur	x1, [x29, #-24]
  4348c0:	stur	x2, [x29, #-32]
  4348c4:	ldur	x8, [x29, #-24]
  4348c8:	ldr	x8, [x8, #8]
  4348cc:	cbz	x8, 4348dc <_obstack_memory_used@@Base+0x16740>
  4348d0:	ldur	x8, [x29, #-32]
  4348d4:	ldr	x8, [x8, #8]
  4348d8:	cbnz	x8, 4348e4 <_obstack_memory_used@@Base+0x16748>
  4348dc:	stur	wzr, [x29, #-4]
  4348e0:	b	434cdc <_obstack_memory_used@@Base+0x16b40>
  4348e4:	ldur	x8, [x29, #-24]
  4348e8:	ldr	x8, [x8, #8]
  4348ec:	ldur	x9, [x29, #-32]
  4348f0:	ldr	x9, [x9, #8]
  4348f4:	add	x8, x8, x9
  4348f8:	ldur	x9, [x29, #-16]
  4348fc:	ldr	x9, [x9, #8]
  434900:	add	x8, x8, x9
  434904:	ldur	x9, [x29, #-16]
  434908:	ldr	x9, [x9]
  43490c:	cmp	x8, x9
  434910:	b.le	434994 <_obstack_memory_used@@Base+0x167f8>
  434914:	ldur	x8, [x29, #-24]
  434918:	ldr	x8, [x8, #8]
  43491c:	ldur	x9, [x29, #-32]
  434920:	ldr	x9, [x9, #8]
  434924:	add	x8, x8, x9
  434928:	ldur	x9, [x29, #-16]
  43492c:	ldr	x9, [x9]
  434930:	add	x8, x8, x9
  434934:	str	x8, [sp, #24]
  434938:	ldur	x8, [x29, #-16]
  43493c:	ldr	x0, [x8, #16]
  434940:	ldr	x8, [sp, #24]
  434944:	mov	x9, #0x8                   	// #8
  434948:	mul	x1, x8, x9
  43494c:	bl	4029c0 <realloc@plt>
  434950:	str	x0, [sp, #16]
  434954:	ldr	x8, [sp, #16]
  434958:	cmp	x8, #0x0
  43495c:	cset	w10, eq  // eq = none
  434960:	and	w10, w10, #0x1
  434964:	mov	w0, w10
  434968:	sxtw	x8, w0
  43496c:	cbz	x8, 43497c <_obstack_memory_used@@Base+0x167e0>
  434970:	mov	w8, #0xc                   	// #12
  434974:	stur	w8, [x29, #-4]
  434978:	b	434cdc <_obstack_memory_used@@Base+0x16b40>
  43497c:	ldr	x8, [sp, #16]
  434980:	ldur	x9, [x29, #-16]
  434984:	str	x8, [x9, #16]
  434988:	ldr	x8, [sp, #24]
  43498c:	ldur	x9, [x29, #-16]
  434990:	str	x8, [x9]
  434994:	ldur	x8, [x29, #-16]
  434998:	ldr	x8, [x8, #8]
  43499c:	ldur	x9, [x29, #-24]
  4349a0:	ldr	x9, [x9, #8]
  4349a4:	add	x8, x8, x9
  4349a8:	ldur	x9, [x29, #-32]
  4349ac:	ldr	x9, [x9, #8]
  4349b0:	add	x8, x8, x9
  4349b4:	str	x8, [sp, #32]
  4349b8:	ldur	x8, [x29, #-24]
  4349bc:	ldr	x8, [x8, #8]
  4349c0:	subs	x8, x8, #0x1
  4349c4:	stur	x8, [x29, #-40]
  4349c8:	ldur	x8, [x29, #-32]
  4349cc:	ldr	x8, [x8, #8]
  4349d0:	subs	x8, x8, #0x1
  4349d4:	stur	x8, [x29, #-48]
  4349d8:	ldur	x8, [x29, #-16]
  4349dc:	ldr	x8, [x8, #8]
  4349e0:	subs	x8, x8, #0x1
  4349e4:	str	x8, [sp, #48]
  4349e8:	ldur	x8, [x29, #-24]
  4349ec:	ldr	x8, [x8, #16]
  4349f0:	ldur	x9, [x29, #-40]
  4349f4:	ldr	x8, [x8, x9, lsl #3]
  4349f8:	ldur	x9, [x29, #-32]
  4349fc:	ldr	x9, [x9, #16]
  434a00:	ldur	x10, [x29, #-48]
  434a04:	ldr	x9, [x9, x10, lsl #3]
  434a08:	cmp	x8, x9
  434a0c:	b.ne	434b08 <_obstack_memory_used@@Base+0x1696c>  // b.any
  434a10:	ldr	x8, [sp, #48]
  434a14:	cmp	x8, #0x0
  434a18:	cset	w9, lt  // lt = tstop
  434a1c:	mov	w10, #0x0                   	// #0
  434a20:	str	w10, [sp, #12]
  434a24:	tbnz	w9, #0, 434a54 <_obstack_memory_used@@Base+0x168b8>
  434a28:	ldur	x8, [x29, #-16]
  434a2c:	ldr	x8, [x8, #16]
  434a30:	ldr	x9, [sp, #48]
  434a34:	ldr	x8, [x8, x9, lsl #3]
  434a38:	ldur	x9, [x29, #-24]
  434a3c:	ldr	x9, [x9, #16]
  434a40:	ldur	x10, [x29, #-40]
  434a44:	ldr	x9, [x9, x10, lsl #3]
  434a48:	cmp	x8, x9
  434a4c:	cset	w11, gt
  434a50:	str	w11, [sp, #12]
  434a54:	ldr	w8, [sp, #12]
  434a58:	tbnz	w8, #0, 434a60 <_obstack_memory_used@@Base+0x168c4>
  434a5c:	b	434a70 <_obstack_memory_used@@Base+0x168d4>
  434a60:	ldr	x8, [sp, #48]
  434a64:	subs	x8, x8, #0x1
  434a68:	str	x8, [sp, #48]
  434a6c:	b	434a10 <_obstack_memory_used@@Base+0x16874>
  434a70:	ldr	x8, [sp, #48]
  434a74:	cmp	x8, #0x0
  434a78:	cset	w9, lt  // lt = tstop
  434a7c:	tbnz	w9, #0, 434aa8 <_obstack_memory_used@@Base+0x1690c>
  434a80:	ldur	x8, [x29, #-16]
  434a84:	ldr	x8, [x8, #16]
  434a88:	ldr	x9, [sp, #48]
  434a8c:	ldr	x8, [x8, x9, lsl #3]
  434a90:	ldur	x9, [x29, #-24]
  434a94:	ldr	x9, [x9, #16]
  434a98:	ldur	x10, [x29, #-40]
  434a9c:	ldr	x9, [x9, x10, lsl #3]
  434aa0:	cmp	x8, x9
  434aa4:	b.eq	434ad0 <_obstack_memory_used@@Base+0x16934>  // b.none
  434aa8:	ldur	x8, [x29, #-24]
  434aac:	ldr	x8, [x8, #16]
  434ab0:	ldur	x9, [x29, #-40]
  434ab4:	ldr	x8, [x8, x9, lsl #3]
  434ab8:	ldur	x9, [x29, #-16]
  434abc:	ldr	x9, [x9, #16]
  434ac0:	ldr	x10, [sp, #32]
  434ac4:	subs	x10, x10, #0x1
  434ac8:	str	x10, [sp, #32]
  434acc:	str	x8, [x9, x10, lsl #3]
  434ad0:	ldur	x8, [x29, #-40]
  434ad4:	subs	x8, x8, #0x1
  434ad8:	stur	x8, [x29, #-40]
  434adc:	cmp	x8, #0x0
  434ae0:	cset	w9, lt  // lt = tstop
  434ae4:	tbnz	w9, #0, 434b00 <_obstack_memory_used@@Base+0x16964>
  434ae8:	ldur	x8, [x29, #-48]
  434aec:	subs	x8, x8, #0x1
  434af0:	stur	x8, [x29, #-48]
  434af4:	cmp	x8, #0x0
  434af8:	cset	w9, ge  // ge = tcont
  434afc:	tbnz	w9, #0, 434b04 <_obstack_memory_used@@Base+0x16968>
  434b00:	b	434b70 <_obstack_memory_used@@Base+0x169d4>
  434b04:	b	434b6c <_obstack_memory_used@@Base+0x169d0>
  434b08:	ldur	x8, [x29, #-24]
  434b0c:	ldr	x8, [x8, #16]
  434b10:	ldur	x9, [x29, #-40]
  434b14:	ldr	x8, [x8, x9, lsl #3]
  434b18:	ldur	x9, [x29, #-32]
  434b1c:	ldr	x9, [x9, #16]
  434b20:	ldur	x10, [x29, #-48]
  434b24:	ldr	x9, [x9, x10, lsl #3]
  434b28:	cmp	x8, x9
  434b2c:	b.ge	434b50 <_obstack_memory_used@@Base+0x169b4>  // b.tcont
  434b30:	ldur	x8, [x29, #-48]
  434b34:	subs	x8, x8, #0x1
  434b38:	stur	x8, [x29, #-48]
  434b3c:	cmp	x8, #0x0
  434b40:	cset	w9, ge  // ge = tcont
  434b44:	tbnz	w9, #0, 434b4c <_obstack_memory_used@@Base+0x169b0>
  434b48:	b	434b70 <_obstack_memory_used@@Base+0x169d4>
  434b4c:	b	434b6c <_obstack_memory_used@@Base+0x169d0>
  434b50:	ldur	x8, [x29, #-40]
  434b54:	subs	x8, x8, #0x1
  434b58:	stur	x8, [x29, #-40]
  434b5c:	cmp	x8, #0x0
  434b60:	cset	w9, ge  // ge = tcont
  434b64:	tbnz	w9, #0, 434b6c <_obstack_memory_used@@Base+0x169d0>
  434b68:	b	434b70 <_obstack_memory_used@@Base+0x169d4>
  434b6c:	b	4349e8 <_obstack_memory_used@@Base+0x1684c>
  434b70:	ldur	x8, [x29, #-16]
  434b74:	ldr	x8, [x8, #8]
  434b78:	subs	x8, x8, #0x1
  434b7c:	str	x8, [sp, #48]
  434b80:	ldur	x8, [x29, #-16]
  434b84:	ldr	x8, [x8, #8]
  434b88:	ldur	x9, [x29, #-24]
  434b8c:	ldr	x9, [x9, #8]
  434b90:	add	x8, x8, x9
  434b94:	ldur	x9, [x29, #-32]
  434b98:	ldr	x9, [x9, #8]
  434b9c:	add	x8, x8, x9
  434ba0:	subs	x8, x8, #0x1
  434ba4:	str	x8, [sp, #56]
  434ba8:	ldr	x8, [sp, #56]
  434bac:	ldr	x9, [sp, #32]
  434bb0:	subs	x8, x8, x9
  434bb4:	add	x8, x8, #0x1
  434bb8:	str	x8, [sp, #40]
  434bbc:	ldr	x8, [sp, #40]
  434bc0:	ldur	x9, [x29, #-16]
  434bc4:	ldr	x10, [x9, #8]
  434bc8:	add	x8, x10, x8
  434bcc:	str	x8, [x9, #8]
  434bd0:	ldr	x8, [sp, #40]
  434bd4:	cmp	x8, #0x0
  434bd8:	cset	w11, le
  434bdc:	tbnz	w11, #0, 434ca8 <_obstack_memory_used@@Base+0x16b0c>
  434be0:	ldr	x8, [sp, #48]
  434be4:	cmp	x8, #0x0
  434be8:	cset	w9, lt  // lt = tstop
  434bec:	tbnz	w9, #0, 434ca8 <_obstack_memory_used@@Base+0x16b0c>
  434bf0:	ldur	x8, [x29, #-16]
  434bf4:	ldr	x8, [x8, #16]
  434bf8:	ldr	x9, [sp, #56]
  434bfc:	ldr	x8, [x8, x9, lsl #3]
  434c00:	ldur	x9, [x29, #-16]
  434c04:	ldr	x9, [x9, #16]
  434c08:	ldr	x10, [sp, #48]
  434c0c:	ldr	x9, [x9, x10, lsl #3]
  434c10:	cmp	x8, x9
  434c14:	b.le	434c60 <_obstack_memory_used@@Base+0x16ac4>
  434c18:	ldur	x8, [x29, #-16]
  434c1c:	ldr	x8, [x8, #16]
  434c20:	ldr	x9, [sp, #56]
  434c24:	subs	x10, x9, #0x1
  434c28:	str	x10, [sp, #56]
  434c2c:	ldr	x8, [x8, x9, lsl #3]
  434c30:	ldur	x9, [x29, #-16]
  434c34:	ldr	x9, [x9, #16]
  434c38:	ldr	x10, [sp, #48]
  434c3c:	ldr	x11, [sp, #40]
  434c40:	subs	x12, x11, #0x1
  434c44:	str	x12, [sp, #40]
  434c48:	add	x10, x10, x11
  434c4c:	str	x8, [x9, x10, lsl #3]
  434c50:	ldr	x8, [sp, #40]
  434c54:	cbnz	x8, 434c5c <_obstack_memory_used@@Base+0x16ac0>
  434c58:	b	434ca8 <_obstack_memory_used@@Base+0x16b0c>
  434c5c:	b	434ca4 <_obstack_memory_used@@Base+0x16b08>
  434c60:	ldur	x8, [x29, #-16]
  434c64:	ldr	x8, [x8, #16]
  434c68:	ldr	x9, [sp, #48]
  434c6c:	ldr	x8, [x8, x9, lsl #3]
  434c70:	ldur	x9, [x29, #-16]
  434c74:	ldr	x9, [x9, #16]
  434c78:	ldr	x10, [sp, #48]
  434c7c:	ldr	x11, [sp, #40]
  434c80:	add	x10, x10, x11
  434c84:	str	x8, [x9, x10, lsl #3]
  434c88:	ldr	x8, [sp, #48]
  434c8c:	subs	x8, x8, #0x1
  434c90:	str	x8, [sp, #48]
  434c94:	cmp	x8, #0x0
  434c98:	cset	w12, ge  // ge = tcont
  434c9c:	tbnz	w12, #0, 434ca4 <_obstack_memory_used@@Base+0x16b08>
  434ca0:	b	434ca8 <_obstack_memory_used@@Base+0x16b0c>
  434ca4:	b	434bf0 <_obstack_memory_used@@Base+0x16a54>
  434ca8:	ldur	x8, [x29, #-16]
  434cac:	ldr	x0, [x8, #16]
  434cb0:	ldur	x8, [x29, #-16]
  434cb4:	ldr	x8, [x8, #16]
  434cb8:	ldr	x9, [sp, #32]
  434cbc:	mov	x10, #0x8                   	// #8
  434cc0:	mul	x9, x10, x9
  434cc4:	add	x1, x8, x9
  434cc8:	ldr	x8, [sp, #40]
  434ccc:	mov	x9, #0x8                   	// #8
  434cd0:	mul	x2, x8, x9
  434cd4:	bl	4026a0 <memcpy@plt>
  434cd8:	stur	wzr, [x29, #-4]
  434cdc:	ldur	w0, [x29, #-4]
  434ce0:	ldp	x29, x30, [sp, #112]
  434ce4:	add	sp, sp, #0x80
  434ce8:	ret
  434cec:	sub	sp, sp, #0xa0
  434cf0:	stp	x29, x30, [sp, #144]
  434cf4:	add	x29, sp, #0x90
  434cf8:	stur	x0, [x29, #-16]
  434cfc:	stur	x1, [x29, #-24]
  434d00:	stur	x2, [x29, #-32]
  434d04:	stur	x3, [x29, #-40]
  434d08:	ldur	x8, [x29, #-16]
  434d0c:	ldr	x8, [x8, #56]
  434d10:	ldur	x9, [x29, #-24]
  434d14:	mov	x10, #0x18                  	// #24
  434d18:	mul	x9, x10, x9
  434d1c:	add	x8, x8, x9
  434d20:	stur	x8, [x29, #-64]
  434d24:	str	xzr, [sp, #56]
  434d28:	str	xzr, [sp, #64]
  434d2c:	str	xzr, [sp, #72]
  434d30:	stur	xzr, [x29, #-48]
  434d34:	ldur	x8, [x29, #-48]
  434d38:	ldur	x9, [x29, #-64]
  434d3c:	ldr	x9, [x9, #8]
  434d40:	cmp	x8, x9
  434d44:	b.ge	434ed0 <_obstack_memory_used@@Base+0x16d34>  // b.tcont
  434d48:	ldur	x8, [x29, #-64]
  434d4c:	ldr	x8, [x8, #16]
  434d50:	ldur	x9, [x29, #-48]
  434d54:	ldr	x8, [x8, x9, lsl #3]
  434d58:	str	x8, [sp, #48]
  434d5c:	ldr	x8, [sp, #48]
  434d60:	ldur	x9, [x29, #-24]
  434d64:	cmp	x8, x9
  434d68:	b.ne	434d70 <_obstack_memory_used@@Base+0x16bd4>  // b.any
  434d6c:	b	434ec0 <_obstack_memory_used@@Base+0x16d24>
  434d70:	ldur	x8, [x29, #-16]
  434d74:	ldr	x8, [x8]
  434d78:	ldr	x9, [sp, #48]
  434d7c:	mov	x10, #0x10                  	// #16
  434d80:	mul	x9, x10, x9
  434d84:	add	x8, x8, x9
  434d88:	ldr	w11, [x8, #8]
  434d8c:	and	w11, w11, #0xff
  434d90:	and	w11, w11, #0x8
  434d94:	cbz	w11, 434ec0 <_obstack_memory_used@@Base+0x16d24>
  434d98:	ldur	x8, [x29, #-16]
  434d9c:	ldr	x8, [x8, #40]
  434da0:	ldr	x9, [sp, #48]
  434da4:	mov	x10, #0x18                  	// #24
  434da8:	mul	x9, x10, x9
  434dac:	add	x8, x8, x9
  434db0:	ldr	x8, [x8, #16]
  434db4:	ldr	x8, [x8]
  434db8:	str	x8, [sp, #40]
  434dbc:	ldur	x8, [x29, #-16]
  434dc0:	ldr	x8, [x8, #40]
  434dc4:	ldr	x9, [sp, #48]
  434dc8:	mul	x9, x10, x9
  434dcc:	add	x8, x8, x9
  434dd0:	ldr	x8, [x8, #8]
  434dd4:	cmp	x8, #0x1
  434dd8:	b.le	434e04 <_obstack_memory_used@@Base+0x16c68>
  434ddc:	ldur	x8, [x29, #-16]
  434de0:	ldr	x8, [x8, #40]
  434de4:	ldr	x9, [sp, #48]
  434de8:	mov	x10, #0x18                  	// #24
  434dec:	mul	x9, x10, x9
  434df0:	add	x8, x8, x9
  434df4:	ldr	x8, [x8, #16]
  434df8:	ldr	x8, [x8, #8]
  434dfc:	str	x8, [sp, #8]
  434e00:	b	434e0c <_obstack_memory_used@@Base+0x16c70>
  434e04:	mov	x8, #0xffffffffffffffff    	// #-1
  434e08:	str	x8, [sp, #8]
  434e0c:	ldr	x8, [sp, #8]
  434e10:	str	x8, [sp, #32]
  434e14:	ldur	x0, [x29, #-64]
  434e18:	ldr	x1, [sp, #40]
  434e1c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434e20:	cbnz	x0, 434e34 <_obstack_memory_used@@Base+0x16c98>
  434e24:	ldur	x0, [x29, #-32]
  434e28:	ldr	x1, [sp, #40]
  434e2c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434e30:	cbnz	x0, 434e64 <_obstack_memory_used@@Base+0x16cc8>
  434e34:	ldr	x8, [sp, #32]
  434e38:	cmp	x8, #0x0
  434e3c:	cset	w9, le
  434e40:	tbnz	w9, #0, 434ec0 <_obstack_memory_used@@Base+0x16d24>
  434e44:	ldur	x0, [x29, #-64]
  434e48:	ldr	x1, [sp, #32]
  434e4c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434e50:	cbnz	x0, 434ec0 <_obstack_memory_used@@Base+0x16d24>
  434e54:	ldur	x0, [x29, #-32]
  434e58:	ldr	x1, [sp, #32]
  434e5c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434e60:	cbz	x0, 434ec0 <_obstack_memory_used@@Base+0x16d24>
  434e64:	ldur	x1, [x29, #-40]
  434e68:	ldur	x8, [x29, #-16]
  434e6c:	ldr	x8, [x8, #56]
  434e70:	ldr	x9, [sp, #48]
  434e74:	mov	x10, #0x18                  	// #24
  434e78:	mul	x9, x10, x9
  434e7c:	add	x2, x8, x9
  434e80:	add	x0, sp, #0x38
  434e84:	bl	4348ac <_obstack_memory_used@@Base+0x16710>
  434e88:	stur	w0, [x29, #-52]
  434e8c:	ldur	w11, [x29, #-52]
  434e90:	cmp	w11, #0x0
  434e94:	cset	w11, ne  // ne = any
  434e98:	and	w11, w11, #0x1
  434e9c:	mov	w1, w11
  434ea0:	sxtw	x8, w1
  434ea4:	cbz	x8, 434ec0 <_obstack_memory_used@@Base+0x16d24>
  434ea8:	add	x8, sp, #0x38
  434eac:	ldr	x0, [x8, #16]
  434eb0:	bl	402b40 <free@plt>
  434eb4:	ldur	w9, [x29, #-52]
  434eb8:	stur	w9, [x29, #-4]
  434ebc:	b	434f4c <_obstack_memory_used@@Base+0x16db0>
  434ec0:	ldur	x8, [x29, #-48]
  434ec4:	add	x8, x8, #0x1
  434ec8:	stur	x8, [x29, #-48]
  434ecc:	b	434d34 <_obstack_memory_used@@Base+0x16b98>
  434ed0:	stur	xzr, [x29, #-48]
  434ed4:	ldur	x8, [x29, #-48]
  434ed8:	ldur	x9, [x29, #-64]
  434edc:	ldr	x9, [x9, #8]
  434ee0:	cmp	x8, x9
  434ee4:	b.ge	434f3c <_obstack_memory_used@@Base+0x16da0>  // b.tcont
  434ee8:	ldur	x8, [x29, #-64]
  434eec:	ldr	x8, [x8, #16]
  434ef0:	ldur	x9, [x29, #-48]
  434ef4:	ldr	x8, [x8, x9, lsl #3]
  434ef8:	str	x8, [sp, #24]
  434efc:	ldr	x1, [sp, #24]
  434f00:	add	x0, sp, #0x38
  434f04:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434f08:	cbnz	x0, 434f2c <_obstack_memory_used@@Base+0x16d90>
  434f0c:	ldur	x0, [x29, #-32]
  434f10:	ldr	x1, [sp, #24]
  434f14:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  434f18:	subs	x8, x0, #0x1
  434f1c:	str	x8, [sp, #16]
  434f20:	ldur	x0, [x29, #-32]
  434f24:	ldr	x1, [sp, #16]
  434f28:	bl	42b6cc <_obstack_memory_used@@Base+0xd530>
  434f2c:	ldur	x8, [x29, #-48]
  434f30:	add	x8, x8, #0x1
  434f34:	stur	x8, [x29, #-48]
  434f38:	b	434ed4 <_obstack_memory_used@@Base+0x16d38>
  434f3c:	add	x8, sp, #0x38
  434f40:	ldr	x0, [x8, #16]
  434f44:	bl	402b40 <free@plt>
  434f48:	stur	wzr, [x29, #-4]
  434f4c:	ldur	w0, [x29, #-4]
  434f50:	ldp	x29, x30, [sp, #144]
  434f54:	add	sp, sp, #0xa0
  434f58:	ret
  434f5c:	sub	sp, sp, #0x90
  434f60:	stp	x29, x30, [sp, #128]
  434f64:	add	x29, sp, #0x80
  434f68:	stur	x0, [x29, #-16]
  434f6c:	stur	x1, [x29, #-24]
  434f70:	stur	x2, [x29, #-32]
  434f74:	stur	x3, [x29, #-40]
  434f78:	stur	x4, [x29, #-48]
  434f7c:	stur	x5, [x29, #-56]
  434f80:	ldur	x8, [x29, #-16]
  434f84:	ldr	x8, [x8, #152]
  434f88:	str	x8, [sp, #64]
  434f8c:	ldur	x0, [x29, #-16]
  434f90:	ldur	x1, [x29, #-40]
  434f94:	bl	42f818 <_obstack_memory_used@@Base+0x1167c>
  434f98:	str	x0, [sp, #32]
  434f9c:	ldur	x0, [x29, #-16]
  434fa0:	ldur	x1, [x29, #-56]
  434fa4:	bl	42f818 <_obstack_memory_used@@Base+0x1167c>
  434fa8:	str	x0, [sp, #24]
  434fac:	str	xzr, [sp, #56]
  434fb0:	ldr	x8, [sp, #56]
  434fb4:	ldur	x9, [x29, #-24]
  434fb8:	ldr	x9, [x9, #8]
  434fbc:	cmp	x8, x9
  434fc0:	b.ge	4350a8 <_obstack_memory_used@@Base+0x16f0c>  // b.tcont
  434fc4:	ldur	x8, [x29, #-16]
  434fc8:	ldr	x8, [x8, #216]
  434fcc:	ldur	x9, [x29, #-24]
  434fd0:	mov	x10, #0x10                  	// #16
  434fd4:	ldr	x9, [x9, #16]
  434fd8:	ldr	x11, [sp, #56]
  434fdc:	ldr	x9, [x9, x11, lsl #3]
  434fe0:	mov	x11, #0x28                  	// #40
  434fe4:	mul	x9, x11, x9
  434fe8:	add	x8, x8, x9
  434fec:	str	x8, [sp, #8]
  434ff0:	ldr	x8, [sp, #64]
  434ff4:	ldr	x8, [x8]
  434ff8:	ldr	x9, [sp, #8]
  434ffc:	ldr	x9, [x9]
  435000:	mul	x9, x10, x9
  435004:	ldr	x8, [x8, x9]
  435008:	str	x8, [sp, #16]
  43500c:	ldur	x0, [x29, #-16]
  435010:	ldur	x8, [x29, #-24]
  435014:	ldr	x8, [x8, #16]
  435018:	ldr	x9, [sp, #56]
  43501c:	ldr	x1, [x8, x9, lsl #3]
  435020:	ldr	x2, [sp, #16]
  435024:	ldur	x3, [x29, #-32]
  435028:	ldur	x4, [x29, #-40]
  43502c:	ldr	x5, [sp, #32]
  435030:	bl	4350c8 <_obstack_memory_used@@Base+0x16f2c>
  435034:	mov	w1, w0
  435038:	sxtw	x8, w1
  43503c:	str	x8, [sp, #40]
  435040:	ldur	x0, [x29, #-16]
  435044:	ldur	x8, [x29, #-24]
  435048:	ldr	x8, [x8, #16]
  43504c:	ldr	x9, [sp, #56]
  435050:	ldr	x1, [x8, x9, lsl #3]
  435054:	ldr	x2, [sp, #16]
  435058:	ldur	x3, [x29, #-48]
  43505c:	ldur	x4, [x29, #-56]
  435060:	ldr	x5, [sp, #24]
  435064:	bl	4350c8 <_obstack_memory_used@@Base+0x16f2c>
  435068:	mov	w1, w0
  43506c:	sxtw	x8, w1
  435070:	str	x8, [sp, #48]
  435074:	ldr	x8, [sp, #48]
  435078:	ldr	x9, [sp, #40]
  43507c:	cmp	x8, x9
  435080:	b.ne	435088 <_obstack_memory_used@@Base+0x16eec>  // b.any
  435084:	b	435098 <_obstack_memory_used@@Base+0x16efc>
  435088:	mov	w8, #0x1                   	// #1
  43508c:	and	w8, w8, #0x1
  435090:	sturb	w8, [x29, #-1]
  435094:	b	4350b4 <_obstack_memory_used@@Base+0x16f18>
  435098:	ldr	x8, [sp, #56]
  43509c:	add	x8, x8, #0x1
  4350a0:	str	x8, [sp, #56]
  4350a4:	b	434fb0 <_obstack_memory_used@@Base+0x16e14>
  4350a8:	mov	w8, wzr
  4350ac:	and	w8, w8, #0x1
  4350b0:	sturb	w8, [x29, #-1]
  4350b4:	ldurb	w8, [x29, #-1]
  4350b8:	and	w0, w8, #0x1
  4350bc:	ldp	x29, x30, [sp, #128]
  4350c0:	add	sp, sp, #0x90
  4350c4:	ret
  4350c8:	sub	sp, sp, #0x60
  4350cc:	stp	x29, x30, [sp, #80]
  4350d0:	add	x29, sp, #0x50
  4350d4:	stur	x0, [x29, #-16]
  4350d8:	stur	x1, [x29, #-24]
  4350dc:	stur	x2, [x29, #-32]
  4350e0:	str	x3, [sp, #40]
  4350e4:	str	x4, [sp, #32]
  4350e8:	str	x5, [sp, #24]
  4350ec:	ldur	x8, [x29, #-16]
  4350f0:	ldr	x8, [x8, #216]
  4350f4:	ldur	x9, [x29, #-24]
  4350f8:	mov	x10, #0x28                  	// #40
  4350fc:	mul	x9, x10, x9
  435100:	add	x8, x8, x9
  435104:	str	x8, [sp, #16]
  435108:	ldr	x8, [sp, #32]
  43510c:	ldr	x9, [sp, #16]
  435110:	ldr	x9, [x9, #16]
  435114:	cmp	x8, x9
  435118:	b.ge	435128 <_obstack_memory_used@@Base+0x16f8c>  // b.tcont
  43511c:	mov	w8, #0xffffffff            	// #-1
  435120:	stur	w8, [x29, #-4]
  435124:	b	4351b4 <_obstack_memory_used@@Base+0x17018>
  435128:	ldr	x8, [sp, #16]
  43512c:	ldr	x8, [x8, #24]
  435130:	ldr	x9, [sp, #32]
  435134:	cmp	x8, x9
  435138:	b.ge	435148 <_obstack_memory_used@@Base+0x16fac>  // b.tcont
  43513c:	mov	w8, #0x1                   	// #1
  435140:	stur	w8, [x29, #-4]
  435144:	b	4351b4 <_obstack_memory_used@@Base+0x17018>
  435148:	ldr	x8, [sp, #32]
  43514c:	ldr	x9, [sp, #16]
  435150:	ldr	x9, [x9, #16]
  435154:	cmp	x8, x9
  435158:	cset	w10, eq  // eq = none
  43515c:	and	w10, w10, #0x1
  435160:	str	w10, [sp, #12]
  435164:	ldr	x8, [sp, #32]
  435168:	ldr	x9, [sp, #16]
  43516c:	ldr	x9, [x9, #24]
  435170:	cmp	x8, x9
  435174:	cset	w10, eq  // eq = none
  435178:	and	w10, w10, #0x1
  43517c:	ldr	w11, [sp, #12]
  435180:	orr	w10, w11, w10, lsl #1
  435184:	str	w10, [sp, #12]
  435188:	ldr	w10, [sp, #12]
  43518c:	cbnz	w10, 435198 <_obstack_memory_used@@Base+0x16ffc>
  435190:	stur	wzr, [x29, #-4]
  435194:	b	4351b4 <_obstack_memory_used@@Base+0x17018>
  435198:	ldur	x0, [x29, #-16]
  43519c:	ldr	w1, [sp, #12]
  4351a0:	ldur	x2, [x29, #-32]
  4351a4:	ldr	x3, [sp, #40]
  4351a8:	ldr	x4, [sp, #24]
  4351ac:	bl	4351c4 <_obstack_memory_used@@Base+0x17028>
  4351b0:	stur	w0, [x29, #-4]
  4351b4:	ldur	w0, [x29, #-4]
  4351b8:	ldp	x29, x30, [sp, #80]
  4351bc:	add	sp, sp, #0x60
  4351c0:	ret
  4351c4:	sub	sp, sp, #0x80
  4351c8:	stp	x29, x30, [sp, #112]
  4351cc:	add	x29, sp, #0x70
  4351d0:	stur	x0, [x29, #-16]
  4351d4:	stur	w1, [x29, #-20]
  4351d8:	stur	x2, [x29, #-32]
  4351dc:	stur	x3, [x29, #-40]
  4351e0:	stur	x4, [x29, #-48]
  4351e4:	ldur	x8, [x29, #-16]
  4351e8:	ldr	x8, [x8, #152]
  4351ec:	str	x8, [sp, #56]
  4351f0:	ldr	x8, [sp, #56]
  4351f4:	ldr	x8, [x8, #48]
  4351f8:	ldur	x9, [x29, #-40]
  4351fc:	mov	x10, #0x18                  	// #24
  435200:	mul	x9, x10, x9
  435204:	add	x8, x8, x9
  435208:	str	x8, [sp, #48]
  43520c:	str	xzr, [sp, #40]
  435210:	ldr	x8, [sp, #40]
  435214:	ldr	x9, [sp, #48]
  435218:	ldr	x9, [x9, #8]
  43521c:	cmp	x8, x9
  435220:	b.ge	435474 <_obstack_memory_used@@Base+0x172d8>  // b.tcont
  435224:	ldr	x8, [sp, #48]
  435228:	mov	x9, #0x10                  	// #16
  43522c:	ldr	x8, [x8, #16]
  435230:	ldr	x10, [sp, #40]
  435234:	ldr	x8, [x8, x10, lsl #3]
  435238:	str	x8, [sp, #32]
  43523c:	ldr	x8, [sp, #56]
  435240:	ldr	x8, [x8]
  435244:	ldr	x10, [sp, #32]
  435248:	mul	x9, x9, x10
  43524c:	add	x8, x8, x9
  435250:	ldr	w11, [x8, #8]
  435254:	and	w11, w11, #0xff
  435258:	cmp	w11, #0x4
  43525c:	str	w11, [sp, #8]
  435260:	b.eq	435288 <_obstack_memory_used@@Base+0x170ec>  // b.none
  435264:	b	435268 <_obstack_memory_used@@Base+0x170cc>
  435268:	ldr	w8, [sp, #8]
  43526c:	cmp	w8, #0x8
  435270:	b.eq	4353e8 <_obstack_memory_used@@Base+0x1724c>  // b.none
  435274:	b	435278 <_obstack_memory_used@@Base+0x170dc>
  435278:	ldr	w8, [sp, #8]
  43527c:	cmp	w8, #0x9
  435280:	b.eq	435428 <_obstack_memory_used@@Base+0x1728c>  // b.none
  435284:	b	435464 <_obstack_memory_used@@Base+0x172c8>
  435288:	ldur	x8, [x29, #-48]
  43528c:	mov	x9, #0xffffffffffffffff    	// #-1
  435290:	cmp	x8, x9
  435294:	b.eq	4353e4 <_obstack_memory_used@@Base+0x17248>  // b.none
  435298:	ldur	x8, [x29, #-16]
  43529c:	ldr	x8, [x8, #216]
  4352a0:	ldur	x9, [x29, #-48]
  4352a4:	mov	x10, #0x28                  	// #40
  4352a8:	mul	x9, x10, x9
  4352ac:	add	x8, x8, x9
  4352b0:	str	x8, [sp, #24]
  4352b4:	ldr	x8, [sp, #24]
  4352b8:	ldr	x8, [x8]
  4352bc:	ldr	x9, [sp, #32]
  4352c0:	cmp	x8, x9
  4352c4:	b.eq	4352cc <_obstack_memory_used@@Base+0x17130>  // b.none
  4352c8:	b	4353d0 <_obstack_memory_used@@Base+0x17234>
  4352cc:	ldur	x8, [x29, #-32]
  4352d0:	cmp	x8, #0x40
  4352d4:	b.ge	4352fc <_obstack_memory_used@@Base+0x17160>  // b.tcont
  4352d8:	ldr	x8, [sp, #24]
  4352dc:	ldrh	w9, [x8, #34]
  4352e0:	mov	w8, w9
  4352e4:	ldur	x10, [x29, #-32]
  4352e8:	mov	x11, #0x1                   	// #1
  4352ec:	lsl	x10, x11, x10
  4352f0:	and	x8, x8, x10
  4352f4:	cbnz	x8, 4352fc <_obstack_memory_used@@Base+0x17160>
  4352f8:	b	4353d0 <_obstack_memory_used@@Base+0x17234>
  4352fc:	ldr	x8, [sp, #56]
  435300:	ldr	x8, [x8, #40]
  435304:	ldr	x9, [sp, #32]
  435308:	mov	x10, #0x18                  	// #24
  43530c:	mul	x9, x10, x9
  435310:	add	x8, x8, x9
  435314:	ldr	x8, [x8, #16]
  435318:	ldr	x8, [x8]
  43531c:	str	x8, [sp, #16]
  435320:	ldr	x8, [sp, #16]
  435324:	ldur	x9, [x29, #-40]
  435328:	cmp	x8, x9
  43532c:	b.ne	435350 <_obstack_memory_used@@Base+0x171b4>  // b.any
  435330:	ldur	w8, [x29, #-20]
  435334:	and	w8, w8, #0x1
  435338:	cbz	w8, 435348 <_obstack_memory_used@@Base+0x171ac>
  43533c:	mov	w8, #0xffffffff            	// #-1
  435340:	stur	w8, [x29, #-4]
  435344:	b	43548c <_obstack_memory_used@@Base+0x172f0>
  435348:	stur	wzr, [x29, #-4]
  43534c:	b	43548c <_obstack_memory_used@@Base+0x172f0>
  435350:	ldur	x0, [x29, #-16]
  435354:	ldur	w1, [x29, #-20]
  435358:	ldur	x2, [x29, #-32]
  43535c:	ldr	x3, [sp, #16]
  435360:	ldur	x4, [x29, #-48]
  435364:	bl	4351c4 <_obstack_memory_used@@Base+0x17028>
  435368:	str	w0, [sp, #12]
  43536c:	ldr	w8, [sp, #12]
  435370:	mov	w9, #0xffffffff            	// #-1
  435374:	cmp	w8, w9
  435378:	b.ne	435388 <_obstack_memory_used@@Base+0x171ec>  // b.any
  43537c:	mov	w8, #0xffffffff            	// #-1
  435380:	stur	w8, [x29, #-4]
  435384:	b	43548c <_obstack_memory_used@@Base+0x172f0>
  435388:	ldr	w8, [sp, #12]
  43538c:	cbnz	w8, 4353a4 <_obstack_memory_used@@Base+0x17208>
  435390:	ldur	w8, [x29, #-20]
  435394:	and	w8, w8, #0x2
  435398:	cbz	w8, 4353a4 <_obstack_memory_used@@Base+0x17208>
  43539c:	stur	wzr, [x29, #-4]
  4353a0:	b	43548c <_obstack_memory_used@@Base+0x172f0>
  4353a4:	ldur	x8, [x29, #-32]
  4353a8:	cmp	x8, #0x40
  4353ac:	b.ge	4353d0 <_obstack_memory_used@@Base+0x17234>  // b.tcont
  4353b0:	ldur	x8, [x29, #-32]
  4353b4:	mov	x9, #0x1                   	// #1
  4353b8:	lsl	x8, x9, x8
  4353bc:	ldr	x9, [sp, #24]
  4353c0:	ldrh	w10, [x9, #34]
  4353c4:	mov	w11, w10
  4353c8:	bic	x8, x11, x8
  4353cc:	strh	w8, [x9, #34]
  4353d0:	ldr	x8, [sp, #24]
  4353d4:	add	x9, x8, #0x28
  4353d8:	str	x9, [sp, #24]
  4353dc:	ldrb	w10, [x8, #32]
  4353e0:	cbnz	w10, 4352b4 <_obstack_memory_used@@Base+0x17118>
  4353e4:	b	435464 <_obstack_memory_used@@Base+0x172c8>
  4353e8:	ldur	w8, [x29, #-20]
  4353ec:	and	w8, w8, #0x1
  4353f0:	cbz	w8, 435424 <_obstack_memory_used@@Base+0x17288>
  4353f4:	ldur	x8, [x29, #-32]
  4353f8:	ldr	x9, [sp, #56]
  4353fc:	ldr	x9, [x9]
  435400:	ldr	x10, [sp, #32]
  435404:	mov	x11, #0x10                  	// #16
  435408:	mul	x10, x11, x10
  43540c:	ldr	x9, [x9, x10]
  435410:	cmp	x8, x9
  435414:	b.ne	435424 <_obstack_memory_used@@Base+0x17288>  // b.any
  435418:	mov	w8, #0xffffffff            	// #-1
  43541c:	stur	w8, [x29, #-4]
  435420:	b	43548c <_obstack_memory_used@@Base+0x172f0>
  435424:	b	435464 <_obstack_memory_used@@Base+0x172c8>
  435428:	ldur	w8, [x29, #-20]
  43542c:	and	w8, w8, #0x2
  435430:	cbz	w8, 435460 <_obstack_memory_used@@Base+0x172c4>
  435434:	ldur	x8, [x29, #-32]
  435438:	ldr	x9, [sp, #56]
  43543c:	ldr	x9, [x9]
  435440:	ldr	x10, [sp, #32]
  435444:	mov	x11, #0x10                  	// #16
  435448:	mul	x10, x11, x10
  43544c:	ldr	x9, [x9, x10]
  435450:	cmp	x8, x9
  435454:	b.ne	435460 <_obstack_memory_used@@Base+0x172c4>  // b.any
  435458:	stur	wzr, [x29, #-4]
  43545c:	b	43548c <_obstack_memory_used@@Base+0x172f0>
  435460:	b	435464 <_obstack_memory_used@@Base+0x172c8>
  435464:	ldr	x8, [sp, #40]
  435468:	add	x8, x8, #0x1
  43546c:	str	x8, [sp, #40]
  435470:	b	435210 <_obstack_memory_used@@Base+0x17074>
  435474:	ldur	w8, [x29, #-20]
  435478:	mov	w9, wzr
  43547c:	mov	w10, #0x1                   	// #1
  435480:	tst	w8, #0x2
  435484:	csel	w8, w10, w9, ne  // ne = any
  435488:	stur	w8, [x29, #-4]
  43548c:	ldur	w0, [x29, #-4]
  435490:	ldp	x29, x30, [sp, #112]
  435494:	add	sp, sp, #0x80
  435498:	ret
  43549c:	sub	sp, sp, #0x50
  4354a0:	stp	x29, x30, [sp, #64]
  4354a4:	add	x29, sp, #0x40
  4354a8:	stur	x0, [x29, #-8]
  4354ac:	stur	x1, [x29, #-16]
  4354b0:	stur	x2, [x29, #-24]
  4354b4:	str	x3, [sp, #32]
  4354b8:	str	x4, [sp, #24]
  4354bc:	ldur	x8, [x29, #-8]
  4354c0:	ldr	x8, [x8, #152]
  4354c4:	str	x8, [sp, #16]
  4354c8:	ldr	x0, [sp, #16]
  4354cc:	ldur	x1, [x29, #-24]
  4354d0:	ldur	x2, [x29, #-8]
  4354d4:	ldr	x3, [sp, #32]
  4354d8:	bl	431600 <_obstack_memory_used@@Base+0x13464>
  4354dc:	str	w0, [sp, #12]
  4354e0:	ldr	w9, [sp, #12]
  4354e4:	cmp	w9, #0x0
  4354e8:	cset	w9, le
  4354ec:	tbnz	w9, #0, 435574 <_obstack_memory_used@@Base+0x173d8>
  4354f0:	ldr	x8, [sp, #32]
  4354f4:	ldrsw	x9, [sp, #12]
  4354f8:	add	x8, x8, x9
  4354fc:	ldr	x9, [sp, #24]
  435500:	cmp	x8, x9
  435504:	b.gt	435574 <_obstack_memory_used@@Base+0x173d8>
  435508:	ldur	x8, [x29, #-16]
  43550c:	ldr	x8, [x8]
  435510:	ldr	x9, [sp, #32]
  435514:	ldrsw	x10, [sp, #12]
  435518:	add	x9, x9, x10
  43551c:	mov	x10, #0x8                   	// #8
  435520:	mul	x9, x10, x9
  435524:	add	x8, x8, x9
  435528:	ldr	x8, [x8]
  43552c:	cbz	x8, 435570 <_obstack_memory_used@@Base+0x173d4>
  435530:	ldur	x8, [x29, #-16]
  435534:	ldr	x8, [x8]
  435538:	ldr	x9, [sp, #32]
  43553c:	ldrsw	x10, [sp, #12]
  435540:	add	x9, x9, x10
  435544:	mov	x10, #0x8                   	// #8
  435548:	mul	x9, x10, x9
  43554c:	add	x8, x8, x9
  435550:	ldr	x8, [x8]
  435554:	add	x0, x8, #0x8
  435558:	ldr	x8, [sp, #16]
  43555c:	ldr	x8, [x8, #24]
  435560:	ldur	x9, [x29, #-24]
  435564:	ldr	x1, [x8, x9, lsl #3]
  435568:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  43556c:	cbnz	x0, 435574 <_obstack_memory_used@@Base+0x173d8>
  435570:	str	wzr, [sp, #12]
  435574:	ldr	w0, [sp, #12]
  435578:	ldp	x29, x30, [sp, #64]
  43557c:	add	sp, sp, #0x50
  435580:	ret
  435584:	sub	sp, sp, #0x30
  435588:	stp	x29, x30, [sp, #32]
  43558c:	add	x29, sp, #0x20
  435590:	stur	x0, [x29, #-8]
  435594:	ldur	x8, [x29, #-8]
  435598:	cbz	x8, 435614 <_obstack_memory_used@@Base+0x17478>
  43559c:	str	xzr, [sp, #16]
  4355a0:	ldr	x8, [sp, #16]
  4355a4:	ldur	x9, [x29, #-8]
  4355a8:	ldr	x9, [x9]
  4355ac:	cmp	x8, x9
  4355b0:	b.ge	435608 <_obstack_memory_used@@Base+0x1746c>  // b.tcont
  4355b4:	ldur	x8, [x29, #-8]
  4355b8:	ldr	x8, [x8, #16]
  4355bc:	ldr	x9, [sp, #16]
  4355c0:	mov	x10, #0x30                  	// #48
  4355c4:	mul	x9, x10, x9
  4355c8:	add	x8, x8, x9
  4355cc:	ldr	x0, [x8, #40]
  4355d0:	str	x10, [sp, #8]
  4355d4:	bl	402b40 <free@plt>
  4355d8:	ldur	x8, [x29, #-8]
  4355dc:	ldr	x8, [x8, #16]
  4355e0:	ldr	x9, [sp, #16]
  4355e4:	ldr	x10, [sp, #8]
  4355e8:	mul	x9, x10, x9
  4355ec:	add	x8, x8, x9
  4355f0:	ldr	x0, [x8, #16]
  4355f4:	bl	402b40 <free@plt>
  4355f8:	ldr	x8, [sp, #16]
  4355fc:	add	x8, x8, #0x1
  435600:	str	x8, [sp, #16]
  435604:	b	4355a0 <_obstack_memory_used@@Base+0x17404>
  435608:	ldur	x8, [x29, #-8]
  43560c:	ldr	x0, [x8, #16]
  435610:	bl	402b40 <free@plt>
  435614:	mov	w8, wzr
  435618:	mov	w0, w8
  43561c:	ldp	x29, x30, [sp, #32]
  435620:	add	sp, sp, #0x30
  435624:	ret
  435628:	sub	sp, sp, #0x60
  43562c:	stp	x29, x30, [sp, #80]
  435630:	add	x29, sp, #0x50
  435634:	stur	x0, [x29, #-8]
  435638:	stur	x1, [x29, #-16]
  43563c:	stur	x2, [x29, #-24]
  435640:	stur	x3, [x29, #-32]
  435644:	str	x4, [sp, #40]
  435648:	str	x5, [sp, #32]
  43564c:	ldur	x8, [x29, #-8]
  435650:	ldr	x8, [x8]
  435654:	ldur	x9, [x29, #-32]
  435658:	mov	x10, #0x10                  	// #16
  43565c:	mul	x9, x10, x9
  435660:	add	x8, x8, x9
  435664:	ldr	w11, [x8, #8]
  435668:	and	w11, w11, #0xff
  43566c:	str	w11, [sp, #28]
  435670:	ldr	w11, [sp, #28]
  435674:	cmp	w11, #0x8
  435678:	b.ne	4356e0 <_obstack_memory_used@@Base+0x17544>  // b.any
  43567c:	ldur	x8, [x29, #-8]
  435680:	ldr	x8, [x8]
  435684:	ldur	x9, [x29, #-32]
  435688:	mov	x10, #0x10                  	// #16
  43568c:	mul	x9, x10, x9
  435690:	ldr	x8, [x8, x9]
  435694:	add	x8, x8, #0x1
  435698:	str	x8, [sp, #16]
  43569c:	ldr	x8, [sp, #16]
  4356a0:	ldr	x9, [sp, #32]
  4356a4:	cmp	x8, x9
  4356a8:	b.ge	4356dc <_obstack_memory_used@@Base+0x17540>  // b.tcont
  4356ac:	ldr	x8, [sp, #40]
  4356b0:	ldur	x9, [x29, #-16]
  4356b4:	ldr	x10, [sp, #16]
  4356b8:	mov	x11, #0x10                  	// #16
  4356bc:	mul	x10, x11, x10
  4356c0:	str	x8, [x9, x10]
  4356c4:	ldur	x8, [x29, #-16]
  4356c8:	ldr	x9, [sp, #16]
  4356cc:	mul	x9, x11, x9
  4356d0:	add	x8, x8, x9
  4356d4:	mov	x9, #0xffffffffffffffff    	// #-1
  4356d8:	str	x9, [x8, #8]
  4356dc:	b	4357f4 <_obstack_memory_used@@Base+0x17658>
  4356e0:	ldr	w8, [sp, #28]
  4356e4:	cmp	w8, #0x9
  4356e8:	b.ne	4357f4 <_obstack_memory_used@@Base+0x17658>  // b.any
  4356ec:	ldur	x8, [x29, #-8]
  4356f0:	ldr	x8, [x8]
  4356f4:	ldur	x9, [x29, #-32]
  4356f8:	mov	x10, #0x10                  	// #16
  4356fc:	mul	x9, x10, x9
  435700:	ldr	x8, [x8, x9]
  435704:	add	x8, x8, #0x1
  435708:	str	x8, [sp, #8]
  43570c:	ldr	x8, [sp, #8]
  435710:	ldr	x9, [sp, #32]
  435714:	cmp	x8, x9
  435718:	b.ge	4357f4 <_obstack_memory_used@@Base+0x17658>  // b.tcont
  43571c:	ldur	x8, [x29, #-16]
  435720:	ldr	x9, [sp, #8]
  435724:	mov	x10, #0x10                  	// #16
  435728:	mul	x9, x10, x9
  43572c:	ldr	x8, [x8, x9]
  435730:	ldr	x9, [sp, #40]
  435734:	cmp	x8, x9
  435738:	b.ge	435774 <_obstack_memory_used@@Base+0x175d8>  // b.tcont
  43573c:	ldr	x8, [sp, #40]
  435740:	ldur	x9, [x29, #-16]
  435744:	ldr	x10, [sp, #8]
  435748:	mov	x11, #0x10                  	// #16
  43574c:	mul	x10, x11, x10
  435750:	add	x9, x9, x10
  435754:	str	x8, [x9, #8]
  435758:	ldur	x0, [x29, #-24]
  43575c:	ldur	x1, [x29, #-16]
  435760:	ldr	x8, [sp, #32]
  435764:	mov	x9, #0x10                  	// #16
  435768:	mul	x2, x9, x8
  43576c:	bl	4026a0 <memcpy@plt>
  435770:	b	4357f4 <_obstack_memory_used@@Base+0x17658>
  435774:	ldur	x8, [x29, #-8]
  435778:	ldr	x8, [x8]
  43577c:	ldur	x9, [x29, #-32]
  435780:	mov	x10, #0x10                  	// #16
  435784:	mul	x9, x10, x9
  435788:	add	x8, x8, x9
  43578c:	ldr	w11, [x8, #8]
  435790:	lsr	w11, w11, #19
  435794:	and	w11, w11, #0x1
  435798:	cbz	w11, 4357d8 <_obstack_memory_used@@Base+0x1763c>
  43579c:	ldur	x8, [x29, #-24]
  4357a0:	ldr	x9, [sp, #8]
  4357a4:	mov	x10, #0x10                  	// #16
  4357a8:	mul	x9, x10, x9
  4357ac:	ldr	x8, [x8, x9]
  4357b0:	mov	x9, #0xffffffffffffffff    	// #-1
  4357b4:	cmp	x8, x9
  4357b8:	b.eq	4357d8 <_obstack_memory_used@@Base+0x1763c>  // b.none
  4357bc:	ldur	x0, [x29, #-16]
  4357c0:	ldur	x1, [x29, #-24]
  4357c4:	ldr	x8, [sp, #32]
  4357c8:	mov	x9, #0x10                  	// #16
  4357cc:	mul	x2, x9, x8
  4357d0:	bl	4026a0 <memcpy@plt>
  4357d4:	b	4357f4 <_obstack_memory_used@@Base+0x17658>
  4357d8:	ldr	x8, [sp, #40]
  4357dc:	ldur	x9, [x29, #-16]
  4357e0:	ldr	x10, [sp, #8]
  4357e4:	mov	x11, #0x10                  	// #16
  4357e8:	mul	x10, x11, x10
  4357ec:	add	x9, x9, x10
  4357f0:	str	x8, [x9, #8]
  4357f4:	ldp	x29, x30, [sp, #80]
  4357f8:	add	sp, sp, #0x60
  4357fc:	ret
  435800:	sub	sp, sp, #0x50
  435804:	stp	x29, x30, [sp, #64]
  435808:	add	x29, sp, #0x40
  43580c:	stur	x0, [x29, #-8]
  435810:	stur	x1, [x29, #-16]
  435814:	stur	x2, [x29, #-24]
  435818:	str	x3, [sp, #32]
  43581c:	str	x4, [sp, #24]
  435820:	ldur	x8, [x29, #-8]
  435824:	ldr	x9, [x8]
  435828:	subs	x9, x9, #0x1
  43582c:	str	x9, [x8]
  435830:	str	x9, [sp, #16]
  435834:	ldr	x8, [sp, #16]
  435838:	cmp	x8, #0x0
  43583c:	cset	w10, lt  // lt = tstop
  435840:	tbnz	w10, #0, 435848 <_obstack_memory_used@@Base+0x176ac>
  435844:	b	435848 <_obstack_memory_used@@Base+0x176ac>
  435848:	ldur	x8, [x29, #-8]
  43584c:	ldr	x8, [x8, #16]
  435850:	ldr	x9, [sp, #16]
  435854:	mov	x10, #0x30                  	// #48
  435858:	mul	x9, x10, x9
  43585c:	ldr	x8, [x8, x9]
  435860:	ldur	x9, [x29, #-16]
  435864:	str	x8, [x9]
  435868:	ldr	x0, [sp, #32]
  43586c:	ldur	x8, [x29, #-8]
  435870:	ldr	x8, [x8, #16]
  435874:	ldr	x9, [sp, #16]
  435878:	mul	x9, x10, x9
  43587c:	add	x8, x8, x9
  435880:	ldr	x1, [x8, #16]
  435884:	ldur	x8, [x29, #-24]
  435888:	mov	x9, #0x10                  	// #16
  43588c:	mul	x2, x9, x8
  435890:	str	x10, [sp, #8]
  435894:	bl	4026a0 <memcpy@plt>
  435898:	ldr	x8, [sp, #24]
  43589c:	ldr	x0, [x8, #16]
  4358a0:	bl	402b40 <free@plt>
  4358a4:	ldur	x8, [x29, #-8]
  4358a8:	ldr	x8, [x8, #16]
  4358ac:	ldr	x9, [sp, #16]
  4358b0:	ldr	x10, [sp, #8]
  4358b4:	mul	x9, x10, x9
  4358b8:	add	x8, x8, x9
  4358bc:	ldr	x0, [x8, #16]
  4358c0:	bl	402b40 <free@plt>
  4358c4:	ldr	x8, [sp, #24]
  4358c8:	ldur	x9, [x29, #-8]
  4358cc:	ldr	x9, [x9, #16]
  4358d0:	ldr	x10, [sp, #16]
  4358d4:	ldr	x11, [sp, #8]
  4358d8:	mul	x10, x11, x10
  4358dc:	add	x9, x9, x10
  4358e0:	ldur	q0, [x9, #24]
  4358e4:	str	q0, [x8]
  4358e8:	ldr	x9, [x9, #40]
  4358ec:	str	x9, [x8, #16]
  4358f0:	ldur	x8, [x29, #-8]
  4358f4:	ldr	x8, [x8, #16]
  4358f8:	ldr	x9, [sp, #16]
  4358fc:	mul	x9, x11, x9
  435900:	add	x8, x8, x9
  435904:	ldr	x0, [x8, #8]
  435908:	ldp	x29, x30, [sp, #64]
  43590c:	add	sp, sp, #0x50
  435910:	ret
  435914:	sub	sp, sp, #0xc0
  435918:	stp	x29, x30, [sp, #176]
  43591c:	add	x29, sp, #0xb0
  435920:	stur	x0, [x29, #-16]
  435924:	stur	x1, [x29, #-24]
  435928:	stur	x2, [x29, #-32]
  43592c:	stur	x3, [x29, #-40]
  435930:	stur	x4, [x29, #-48]
  435934:	stur	x5, [x29, #-56]
  435938:	stur	x6, [x29, #-64]
  43593c:	ldur	x8, [x29, #-16]
  435940:	ldr	x8, [x8, #152]
  435944:	stur	x8, [x29, #-72]
  435948:	ldur	x8, [x29, #-72]
  43594c:	ldr	x8, [x8]
  435950:	ldur	x9, [x29, #-48]
  435954:	mov	x10, #0x10                  	// #16
  435958:	mul	x9, x10, x9
  43595c:	add	x8, x8, x9
  435960:	ldr	w11, [x8, #8]
  435964:	and	w11, w11, #0xff
  435968:	and	w11, w11, #0x8
  43596c:	cbz	w11, 435ac8 <_obstack_memory_used@@Base+0x1792c>
  435970:	ldur	x8, [x29, #-16]
  435974:	ldr	x8, [x8, #184]
  435978:	ldur	x9, [x29, #-40]
  43597c:	ldr	x9, [x9]
  435980:	mov	x10, #0x8                   	// #8
  435984:	mul	x9, x10, x9
  435988:	add	x8, x8, x9
  43598c:	ldr	x8, [x8]
  435990:	add	x8, x8, #0x8
  435994:	str	x8, [sp, #80]
  435998:	ldur	x8, [x29, #-72]
  43599c:	ldr	x8, [x8, #40]
  4359a0:	ldur	x9, [x29, #-48]
  4359a4:	mov	x10, #0x18                  	// #24
  4359a8:	mul	x9, x10, x9
  4359ac:	add	x8, x8, x9
  4359b0:	str	x8, [sp, #72]
  4359b4:	ldur	x0, [x29, #-56]
  4359b8:	ldur	x1, [x29, #-48]
  4359bc:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  4359c0:	mov	w11, #0x1                   	// #1
  4359c4:	and	w11, w0, w11
  4359c8:	sturb	w11, [x29, #-81]
  4359cc:	ldurb	w11, [x29, #-81]
  4359d0:	eor	w11, w11, #0x1
  4359d4:	and	w11, w11, #0x1
  4359d8:	mov	w1, w11
  4359dc:	sxtw	x8, w1
  4359e0:	cbz	x8, 4359f0 <_obstack_memory_used@@Base+0x17854>
  4359e4:	mov	x8, #0xfffffffffffffffe    	// #-2
  4359e8:	stur	x8, [x29, #-8]
  4359ec:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  4359f0:	mov	x8, #0xffffffffffffffff    	// #-1
  4359f4:	str	x8, [sp, #64]
  4359f8:	stur	xzr, [x29, #-80]
  4359fc:	ldur	x8, [x29, #-80]
  435a00:	ldr	x9, [sp, #72]
  435a04:	ldr	x9, [x9, #8]
  435a08:	cmp	x8, x9
  435a0c:	b.ge	435abc <_obstack_memory_used@@Base+0x17920>  // b.tcont
  435a10:	ldr	x8, [sp, #72]
  435a14:	ldr	x8, [x8, #16]
  435a18:	ldur	x9, [x29, #-80]
  435a1c:	ldr	x8, [x8, x9, lsl #3]
  435a20:	str	x8, [sp, #56]
  435a24:	ldr	x0, [sp, #80]
  435a28:	ldr	x1, [sp, #56]
  435a2c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  435a30:	cbnz	x0, 435a38 <_obstack_memory_used@@Base+0x1789c>
  435a34:	b	435aac <_obstack_memory_used@@Base+0x17910>
  435a38:	ldr	x8, [sp, #64]
  435a3c:	mov	x9, #0xffffffffffffffff    	// #-1
  435a40:	cmp	x8, x9
  435a44:	b.ne	435a54 <_obstack_memory_used@@Base+0x178b8>  // b.any
  435a48:	ldr	x8, [sp, #56]
  435a4c:	str	x8, [sp, #64]
  435a50:	b	435aac <_obstack_memory_used@@Base+0x17910>
  435a54:	ldur	x0, [x29, #-56]
  435a58:	ldr	x1, [sp, #64]
  435a5c:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  435a60:	cbz	x0, 435a70 <_obstack_memory_used@@Base+0x178d4>
  435a64:	ldr	x8, [sp, #56]
  435a68:	stur	x8, [x29, #-8]
  435a6c:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435a70:	ldur	x8, [x29, #-64]
  435a74:	cbz	x8, 435aa8 <_obstack_memory_used@@Base+0x1790c>
  435a78:	ldur	x0, [x29, #-64]
  435a7c:	ldur	x8, [x29, #-40]
  435a80:	ldr	x1, [x8]
  435a84:	ldr	x2, [sp, #56]
  435a88:	ldur	x3, [x29, #-24]
  435a8c:	ldur	x4, [x29, #-32]
  435a90:	ldur	x5, [x29, #-56]
  435a94:	bl	435e60 <_obstack_memory_used@@Base+0x17cc4>
  435a98:	cbz	w0, 435aa8 <_obstack_memory_used@@Base+0x1790c>
  435a9c:	mov	x8, #0xfffffffffffffffe    	// #-2
  435aa0:	stur	x8, [x29, #-8]
  435aa4:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435aa8:	b	435abc <_obstack_memory_used@@Base+0x17920>
  435aac:	ldur	x8, [x29, #-80]
  435ab0:	add	x8, x8, #0x1
  435ab4:	stur	x8, [x29, #-80]
  435ab8:	b	4359fc <_obstack_memory_used@@Base+0x17860>
  435abc:	ldr	x8, [sp, #64]
  435ac0:	stur	x8, [x29, #-8]
  435ac4:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435ac8:	str	xzr, [sp, #48]
  435acc:	ldur	x8, [x29, #-72]
  435ad0:	ldr	x8, [x8]
  435ad4:	ldur	x9, [x29, #-48]
  435ad8:	mov	x10, #0x10                  	// #16
  435adc:	mul	x9, x10, x9
  435ae0:	add	x8, x8, x9
  435ae4:	ldr	w11, [x8, #8]
  435ae8:	and	w11, w11, #0xff
  435aec:	str	w11, [sp, #44]
  435af0:	ldur	x8, [x29, #-72]
  435af4:	ldr	x8, [x8]
  435af8:	ldur	x9, [x29, #-48]
  435afc:	mul	x9, x10, x9
  435b00:	add	x8, x8, x9
  435b04:	ldr	w11, [x8, #8]
  435b08:	lsr	w11, w11, #20
  435b0c:	and	w11, w11, #0x1
  435b10:	cbz	w11, 435b3c <_obstack_memory_used@@Base+0x179a0>
  435b14:	ldur	x0, [x29, #-72]
  435b18:	ldur	x1, [x29, #-48]
  435b1c:	ldur	x2, [x29, #-16]
  435b20:	ldur	x8, [x29, #-40]
  435b24:	ldr	x3, [x8]
  435b28:	bl	431600 <_obstack_memory_used@@Base+0x13464>
  435b2c:	mov	w1, w0
  435b30:	sxtw	x8, w1
  435b34:	str	x8, [sp, #48]
  435b38:	b	435d2c <_obstack_memory_used@@Base+0x17b90>
  435b3c:	ldr	w8, [sp, #44]
  435b40:	cmp	w8, #0x4
  435b44:	b.ne	435d2c <_obstack_memory_used@@Base+0x17b90>  // b.any
  435b48:	ldur	x8, [x29, #-72]
  435b4c:	ldr	x8, [x8]
  435b50:	ldur	x9, [x29, #-48]
  435b54:	mov	x10, #0x10                  	// #16
  435b58:	mul	x9, x10, x9
  435b5c:	ldr	x8, [x8, x9]
  435b60:	add	x8, x8, #0x1
  435b64:	str	x8, [sp, #32]
  435b68:	ldr	x8, [sp, #32]
  435b6c:	ldur	x9, [x29, #-24]
  435b70:	cmp	x8, x9
  435b74:	b.ge	435ba8 <_obstack_memory_used@@Base+0x17a0c>  // b.tcont
  435b78:	ldur	x8, [x29, #-32]
  435b7c:	ldr	x9, [sp, #32]
  435b80:	mov	x10, #0x10                  	// #16
  435b84:	mul	x9, x10, x9
  435b88:	add	x8, x8, x9
  435b8c:	ldr	x8, [x8, #8]
  435b90:	ldur	x9, [x29, #-32]
  435b94:	ldr	x11, [sp, #32]
  435b98:	mul	x10, x10, x11
  435b9c:	ldr	x9, [x9, x10]
  435ba0:	subs	x8, x8, x9
  435ba4:	str	x8, [sp, #48]
  435ba8:	ldur	x8, [x29, #-64]
  435bac:	cbz	x8, 435c88 <_obstack_memory_used@@Base+0x17aec>
  435bb0:	ldr	x8, [sp, #32]
  435bb4:	ldur	x9, [x29, #-24]
  435bb8:	cmp	x8, x9
  435bbc:	b.ge	435c04 <_obstack_memory_used@@Base+0x17a68>  // b.tcont
  435bc0:	ldur	x8, [x29, #-32]
  435bc4:	ldr	x9, [sp, #32]
  435bc8:	mov	x10, #0x10                  	// #16
  435bcc:	mul	x9, x10, x9
  435bd0:	ldr	x8, [x8, x9]
  435bd4:	mov	x9, #0xffffffffffffffff    	// #-1
  435bd8:	cmp	x8, x9
  435bdc:	b.eq	435c04 <_obstack_memory_used@@Base+0x17a68>  // b.none
  435be0:	ldur	x8, [x29, #-32]
  435be4:	ldr	x9, [sp, #32]
  435be8:	mov	x10, #0x10                  	// #16
  435bec:	mul	x9, x10, x9
  435bf0:	add	x8, x8, x9
  435bf4:	ldr	x8, [x8, #8]
  435bf8:	mov	x9, #0xffffffffffffffff    	// #-1
  435bfc:	cmp	x8, x9
  435c00:	b.ne	435c10 <_obstack_memory_used@@Base+0x17a74>  // b.any
  435c04:	mov	x8, #0xffffffffffffffff    	// #-1
  435c08:	stur	x8, [x29, #-8]
  435c0c:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435c10:	ldr	x8, [sp, #48]
  435c14:	cbz	x8, 435c88 <_obstack_memory_used@@Base+0x17aec>
  435c18:	ldur	x8, [x29, #-16]
  435c1c:	ldr	x8, [x8, #8]
  435c20:	str	x8, [sp, #24]
  435c24:	ldur	x8, [x29, #-16]
  435c28:	ldr	x8, [x8, #48]
  435c2c:	ldur	x9, [x29, #-40]
  435c30:	ldr	x9, [x9]
  435c34:	subs	x8, x8, x9
  435c38:	ldr	x9, [sp, #48]
  435c3c:	cmp	x8, x9
  435c40:	b.lt	435c7c <_obstack_memory_used@@Base+0x17ae0>  // b.tstop
  435c44:	ldr	x8, [sp, #24]
  435c48:	ldur	x9, [x29, #-32]
  435c4c:	ldr	x10, [sp, #32]
  435c50:	mov	x11, #0x10                  	// #16
  435c54:	mul	x10, x11, x10
  435c58:	ldr	x9, [x9, x10]
  435c5c:	add	x0, x8, x9
  435c60:	ldr	x8, [sp, #24]
  435c64:	ldur	x9, [x29, #-40]
  435c68:	ldr	x9, [x9]
  435c6c:	add	x1, x8, x9
  435c70:	ldr	x2, [sp, #48]
  435c74:	bl	402ae0 <memcmp@plt>
  435c78:	cbz	w0, 435c88 <_obstack_memory_used@@Base+0x17aec>
  435c7c:	mov	x8, #0xffffffffffffffff    	// #-1
  435c80:	stur	x8, [x29, #-8]
  435c84:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435c88:	ldr	x8, [sp, #48]
  435c8c:	cbnz	x8, 435d2c <_obstack_memory_used@@Base+0x17b90>
  435c90:	ldur	x0, [x29, #-56]
  435c94:	ldur	x1, [x29, #-48]
  435c98:	bl	42a9b4 <_obstack_memory_used@@Base+0xc818>
  435c9c:	mov	w8, #0x1                   	// #1
  435ca0:	and	w8, w0, w8
  435ca4:	sturb	w8, [x29, #-81]
  435ca8:	ldurb	w8, [x29, #-81]
  435cac:	eor	w8, w8, #0x1
  435cb0:	and	w8, w8, #0x1
  435cb4:	mov	w1, w8
  435cb8:	sxtw	x9, w1
  435cbc:	cbz	x9, 435ccc <_obstack_memory_used@@Base+0x17b30>
  435cc0:	mov	x8, #0xfffffffffffffffe    	// #-2
  435cc4:	stur	x8, [x29, #-8]
  435cc8:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435ccc:	ldur	x8, [x29, #-72]
  435cd0:	ldr	x8, [x8, #40]
  435cd4:	ldur	x9, [x29, #-48]
  435cd8:	mov	x10, #0x18                  	// #24
  435cdc:	mul	x9, x10, x9
  435ce0:	add	x8, x8, x9
  435ce4:	ldr	x8, [x8, #16]
  435ce8:	ldr	x8, [x8]
  435cec:	str	x8, [sp, #16]
  435cf0:	ldur	x8, [x29, #-16]
  435cf4:	ldr	x8, [x8, #184]
  435cf8:	ldur	x9, [x29, #-40]
  435cfc:	ldr	x9, [x9]
  435d00:	mov	x10, #0x8                   	// #8
  435d04:	mul	x9, x10, x9
  435d08:	add	x8, x8, x9
  435d0c:	ldr	x8, [x8]
  435d10:	add	x0, x8, #0x8
  435d14:	ldr	x1, [sp, #16]
  435d18:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  435d1c:	cbz	x0, 435d2c <_obstack_memory_used@@Base+0x17b90>
  435d20:	ldr	x8, [sp, #16]
  435d24:	stur	x8, [x29, #-8]
  435d28:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435d2c:	ldr	x8, [sp, #48]
  435d30:	cbnz	x8, 435d64 <_obstack_memory_used@@Base+0x17bc8>
  435d34:	ldur	x0, [x29, #-16]
  435d38:	ldur	x8, [x29, #-72]
  435d3c:	ldr	x8, [x8]
  435d40:	ldur	x9, [x29, #-48]
  435d44:	mov	x10, #0x10                  	// #16
  435d48:	mul	x9, x10, x9
  435d4c:	add	x1, x8, x9
  435d50:	ldur	x8, [x29, #-40]
  435d54:	ldr	x2, [x8]
  435d58:	bl	431b6c <_obstack_memory_used@@Base+0x139d0>
  435d5c:	tbnz	w0, #0, 435d64 <_obstack_memory_used@@Base+0x17bc8>
  435d60:	b	435e48 <_obstack_memory_used@@Base+0x17cac>
  435d64:	ldur	x8, [x29, #-72]
  435d68:	ldr	x8, [x8, #24]
  435d6c:	ldur	x9, [x29, #-48]
  435d70:	ldr	x8, [x8, x9, lsl #3]
  435d74:	str	x8, [sp, #8]
  435d78:	ldr	x8, [sp, #48]
  435d7c:	cbnz	x8, 435d94 <_obstack_memory_used@@Base+0x17bf8>
  435d80:	ldur	x8, [x29, #-40]
  435d84:	ldr	x8, [x8]
  435d88:	add	x8, x8, #0x1
  435d8c:	str	x8, [sp]
  435d90:	b	435da8 <_obstack_memory_used@@Base+0x17c0c>
  435d94:	ldur	x8, [x29, #-40]
  435d98:	ldr	x8, [x8]
  435d9c:	ldr	x9, [sp, #48]
  435da0:	add	x8, x8, x9
  435da4:	str	x8, [sp]
  435da8:	ldr	x8, [sp]
  435dac:	ldur	x9, [x29, #-40]
  435db0:	str	x8, [x9]
  435db4:	ldur	x8, [x29, #-64]
  435db8:	cbz	x8, 435e34 <_obstack_memory_used@@Base+0x17c98>
  435dbc:	ldur	x8, [x29, #-40]
  435dc0:	ldr	x8, [x8]
  435dc4:	ldur	x9, [x29, #-16]
  435dc8:	ldr	x9, [x9, #168]
  435dcc:	cmp	x8, x9
  435dd0:	b.gt	435e28 <_obstack_memory_used@@Base+0x17c8c>
  435dd4:	ldur	x8, [x29, #-16]
  435dd8:	ldr	x8, [x8, #184]
  435ddc:	ldur	x9, [x29, #-40]
  435de0:	ldr	x9, [x9]
  435de4:	mov	x10, #0x8                   	// #8
  435de8:	mul	x9, x10, x9
  435dec:	add	x8, x8, x9
  435df0:	ldr	x8, [x8]
  435df4:	cbz	x8, 435e28 <_obstack_memory_used@@Base+0x17c8c>
  435df8:	ldur	x8, [x29, #-16]
  435dfc:	ldr	x8, [x8, #184]
  435e00:	ldur	x9, [x29, #-40]
  435e04:	ldr	x9, [x9]
  435e08:	mov	x10, #0x8                   	// #8
  435e0c:	mul	x9, x10, x9
  435e10:	add	x8, x8, x9
  435e14:	ldr	x8, [x8]
  435e18:	add	x0, x8, #0x8
  435e1c:	ldr	x1, [sp, #8]
  435e20:	bl	42afdc <_obstack_memory_used@@Base+0xce40>
  435e24:	cbnz	x0, 435e34 <_obstack_memory_used@@Base+0x17c98>
  435e28:	mov	x8, #0xffffffffffffffff    	// #-1
  435e2c:	stur	x8, [x29, #-8]
  435e30:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435e34:	ldur	x8, [x29, #-56]
  435e38:	str	xzr, [x8, #8]
  435e3c:	ldr	x8, [sp, #8]
  435e40:	stur	x8, [x29, #-8]
  435e44:	b	435e50 <_obstack_memory_used@@Base+0x17cb4>
  435e48:	mov	x8, #0xffffffffffffffff    	// #-1
  435e4c:	stur	x8, [x29, #-8]
  435e50:	ldur	x0, [x29, #-8]
  435e54:	ldp	x29, x30, [sp, #176]
  435e58:	add	sp, sp, #0xc0
  435e5c:	ret
  435e60:	sub	sp, sp, #0x70
  435e64:	stp	x29, x30, [sp, #96]
  435e68:	add	x29, sp, #0x60
  435e6c:	stur	x0, [x29, #-16]
  435e70:	stur	x1, [x29, #-24]
  435e74:	stur	x2, [x29, #-32]
  435e78:	stur	x3, [x29, #-40]
  435e7c:	str	x4, [sp, #48]
  435e80:	str	x5, [sp, #40]
  435e84:	ldur	x8, [x29, #-16]
  435e88:	ldr	x9, [x8]
  435e8c:	add	x10, x9, #0x1
  435e90:	str	x10, [x8]
  435e94:	str	x9, [sp, #24]
  435e98:	ldur	x8, [x29, #-16]
  435e9c:	ldr	x8, [x8]
  435ea0:	ldur	x9, [x29, #-16]
  435ea4:	ldr	x9, [x9, #8]
  435ea8:	cmp	x8, x9
  435eac:	b.ne	435f0c <_obstack_memory_used@@Base+0x17d70>  // b.any
  435eb0:	ldur	x8, [x29, #-16]
  435eb4:	ldr	x0, [x8, #16]
  435eb8:	ldur	x8, [x29, #-16]
  435ebc:	ldr	x8, [x8, #8]
  435ec0:	mov	x9, #0x2                   	// #2
  435ec4:	mul	x8, x8, x9
  435ec8:	mov	x9, #0x30                  	// #48
  435ecc:	mul	x1, x8, x9
  435ed0:	bl	4029c0 <realloc@plt>
  435ed4:	str	x0, [sp, #16]
  435ed8:	ldr	x8, [sp, #16]
  435edc:	cbnz	x8, 435eec <_obstack_memory_used@@Base+0x17d50>
  435ee0:	mov	w8, #0xc                   	// #12
  435ee4:	stur	w8, [x29, #-4]
  435ee8:	b	436000 <_obstack_memory_used@@Base+0x17e64>
  435eec:	ldur	x8, [x29, #-16]
  435ef0:	ldr	x9, [x8, #8]
  435ef4:	mov	x10, #0x2                   	// #2
  435ef8:	mul	x9, x9, x10
  435efc:	str	x9, [x8, #8]
  435f00:	ldr	x8, [sp, #16]
  435f04:	ldur	x9, [x29, #-16]
  435f08:	str	x8, [x9, #16]
  435f0c:	ldur	x8, [x29, #-24]
  435f10:	ldur	x9, [x29, #-16]
  435f14:	ldr	x9, [x9, #16]
  435f18:	ldr	x10, [sp, #24]
  435f1c:	mov	x11, #0x30                  	// #48
  435f20:	mul	x10, x11, x10
  435f24:	str	x8, [x9, x10]
  435f28:	ldur	x8, [x29, #-32]
  435f2c:	ldur	x9, [x29, #-16]
  435f30:	ldr	x9, [x9, #16]
  435f34:	ldr	x10, [sp, #24]
  435f38:	mul	x10, x11, x10
  435f3c:	add	x9, x9, x10
  435f40:	str	x8, [x9, #8]
  435f44:	ldur	x8, [x29, #-40]
  435f48:	mov	x9, #0x10                  	// #16
  435f4c:	mul	x0, x8, x9
  435f50:	str	x11, [sp, #8]
  435f54:	bl	402890 <malloc@plt>
  435f58:	ldur	x8, [x29, #-16]
  435f5c:	ldr	x8, [x8, #16]
  435f60:	ldr	x9, [sp, #24]
  435f64:	ldr	x10, [sp, #8]
  435f68:	mul	x9, x10, x9
  435f6c:	add	x8, x8, x9
  435f70:	str	x0, [x8, #16]
  435f74:	ldur	x8, [x29, #-16]
  435f78:	ldr	x8, [x8, #16]
  435f7c:	ldr	x9, [sp, #24]
  435f80:	mul	x9, x10, x9
  435f84:	add	x8, x8, x9
  435f88:	ldr	x8, [x8, #16]
  435f8c:	cbnz	x8, 435f9c <_obstack_memory_used@@Base+0x17e00>
  435f90:	mov	w8, #0xc                   	// #12
  435f94:	stur	w8, [x29, #-4]
  435f98:	b	436000 <_obstack_memory_used@@Base+0x17e64>
  435f9c:	ldur	x8, [x29, #-16]
  435fa0:	ldr	x8, [x8, #16]
  435fa4:	ldr	x9, [sp, #24]
  435fa8:	mov	x10, #0x30                  	// #48
  435fac:	mul	x9, x10, x9
  435fb0:	add	x8, x8, x9
  435fb4:	ldr	x0, [x8, #16]
  435fb8:	ldr	x1, [sp, #48]
  435fbc:	ldur	x8, [x29, #-40]
  435fc0:	mov	x9, #0x10                  	// #16
  435fc4:	mul	x2, x9, x8
  435fc8:	str	x10, [sp]
  435fcc:	bl	4026a0 <memcpy@plt>
  435fd0:	ldur	x8, [x29, #-16]
  435fd4:	ldr	x8, [x8, #16]
  435fd8:	ldr	x9, [sp, #24]
  435fdc:	ldr	x10, [sp]
  435fe0:	mul	x9, x10, x9
  435fe4:	add	x8, x8, x9
  435fe8:	add	x0, x8, #0x18
  435fec:	ldr	x1, [sp, #40]
  435ff0:	bl	42aef0 <_obstack_memory_used@@Base+0xcd54>
  435ff4:	str	w0, [sp, #36]
  435ff8:	ldr	w11, [sp, #36]
  435ffc:	stur	w11, [x29, #-4]
  436000:	ldur	w0, [x29, #-4]
  436004:	ldp	x29, x30, [sp, #96]
  436008:	add	sp, sp, #0x70
  43600c:	ret
  436010:	sub	sp, sp, #0x30
  436014:	stp	x29, x30, [sp, #32]
  436018:	add	x29, sp, #0x20
  43601c:	mov	w8, wzr
  436020:	add	x2, sp, #0x8
  436024:	str	x0, [sp, #16]
  436028:	ldr	x0, [sp, #16]
  43602c:	mov	w1, w8
  436030:	bl	402b70 <acl_get_entry@plt>
  436034:	str	w0, [sp, #4]
  436038:	ldr	w8, [sp, #4]
  43603c:	cmp	w8, #0x0
  436040:	cset	w8, le
  436044:	tbnz	w8, #0, 4360b4 <_obstack_memory_used@@Base+0x17f18>
  436048:	ldr	x0, [sp, #8]
  43604c:	mov	x1, sp
  436050:	bl	402950 <acl_get_tag_type@plt>
  436054:	cmp	w0, #0x0
  436058:	cset	w8, ge  // ge = tcont
  43605c:	tbnz	w8, #0, 43606c <_obstack_memory_used@@Base+0x17ed0>
  436060:	mov	w8, #0xffffffff            	// #-1
  436064:	stur	w8, [x29, #-4]
  436068:	b	4360bc <_obstack_memory_used@@Base+0x17f20>
  43606c:	ldr	w8, [sp]
  436070:	cmp	w8, #0x1
  436074:	b.eq	43609c <_obstack_memory_used@@Base+0x17f00>  // b.none
  436078:	ldr	w8, [sp]
  43607c:	cmp	w8, #0x4
  436080:	b.eq	43609c <_obstack_memory_used@@Base+0x17f00>  // b.none
  436084:	ldr	w8, [sp]
  436088:	cmp	w8, #0x20
  43608c:	b.eq	43609c <_obstack_memory_used@@Base+0x17f00>  // b.none
  436090:	mov	w8, #0x1                   	// #1
  436094:	stur	w8, [x29, #-4]
  436098:	b	4360bc <_obstack_memory_used@@Base+0x17f20>
  43609c:	ldr	x0, [sp, #16]
  4360a0:	mov	w1, #0x1                   	// #1
  4360a4:	add	x2, sp, #0x8
  4360a8:	bl	402b70 <acl_get_entry@plt>
  4360ac:	str	w0, [sp, #4]
  4360b0:	b	436038 <_obstack_memory_used@@Base+0x17e9c>
  4360b4:	ldr	w8, [sp, #4]
  4360b8:	stur	w8, [x29, #-4]
  4360bc:	ldur	w0, [x29, #-4]
  4360c0:	ldp	x29, x30, [sp, #32]
  4360c4:	add	sp, sp, #0x30
  4360c8:	ret
  4360cc:	sub	sp, sp, #0x20
  4360d0:	stp	x29, x30, [sp, #16]
  4360d4:	add	x29, sp, #0x10
  4360d8:	str	x0, [sp, #8]
  4360dc:	ldr	x0, [sp, #8]
  4360e0:	bl	402740 <acl_entries@plt>
  4360e4:	cmp	w0, #0x0
  4360e8:	cset	w8, gt
  4360ec:	and	w0, w8, #0x1
  4360f0:	ldp	x29, x30, [sp, #16]
  4360f4:	add	sp, sp, #0x20
  4360f8:	ret
  4360fc:	sub	sp, sp, #0x20
  436100:	stp	x29, x30, [sp, #16]
  436104:	add	x29, sp, #0x10
  436108:	str	x0, [sp, #8]
  43610c:	ldr	x8, [sp, #8]
  436110:	ldr	x8, [x8, #8]
  436114:	cbz	x8, 436124 <_obstack_memory_used@@Base+0x17f88>
  436118:	ldr	x8, [sp, #8]
  43611c:	ldr	x0, [x8, #8]
  436120:	bl	402da0 <acl_free@plt>
  436124:	ldr	x8, [sp, #8]
  436128:	ldr	x8, [x8, #16]
  43612c:	cbz	x8, 43613c <_obstack_memory_used@@Base+0x17fa0>
  436130:	ldr	x8, [sp, #8]
  436134:	ldr	x0, [x8, #16]
  436138:	bl	402da0 <acl_free@plt>
  43613c:	ldp	x29, x30, [sp, #16]
  436140:	add	sp, sp, #0x20
  436144:	ret
  436148:	sub	sp, sp, #0x40
  43614c:	stp	x29, x30, [sp, #48]
  436150:	add	x29, sp, #0x30
  436154:	mov	x8, #0x20                  	// #32
  436158:	mov	w9, #0xffffffff            	// #-1
  43615c:	mov	w10, wzr
  436160:	stur	x0, [x29, #-16]
  436164:	stur	w1, [x29, #-20]
  436168:	str	w2, [sp, #24]
  43616c:	str	x3, [sp, #16]
  436170:	ldr	x0, [sp, #16]
  436174:	mov	w1, w10
  436178:	mov	x2, x8
  43617c:	str	w9, [sp, #12]
  436180:	bl	402960 <memset@plt>
  436184:	ldr	w9, [sp, #24]
  436188:	ldr	x8, [sp, #16]
  43618c:	str	w9, [x8]
  436190:	ldur	w9, [x29, #-20]
  436194:	ldr	w10, [sp, #12]
  436198:	cmp	w9, w10
  43619c:	b.eq	4361b4 <_obstack_memory_used@@Base+0x18018>  // b.none
  4361a0:	ldur	w0, [x29, #-20]
  4361a4:	bl	402a00 <acl_get_fd@plt>
  4361a8:	ldr	x8, [sp, #16]
  4361ac:	str	x0, [x8, #8]
  4361b0:	b	4361c8 <_obstack_memory_used@@Base+0x1802c>
  4361b4:	ldur	x0, [x29, #-16]
  4361b8:	mov	w1, #0x8000                	// #32768
  4361bc:	bl	402b30 <acl_get_file@plt>
  4361c0:	ldr	x8, [sp, #16]
  4361c4:	str	x0, [x8, #8]
  4361c8:	ldr	x8, [sp, #16]
  4361cc:	ldr	x8, [x8, #8]
  4361d0:	cbnz	x8, 4361f8 <_obstack_memory_used@@Base+0x1805c>
  4361d4:	bl	402d00 <__errno_location@plt>
  4361d8:	ldr	w0, [x0]
  4361dc:	bl	4368ac <_obstack_memory_used@@Base+0x18710>
  4361e0:	mov	w8, wzr
  4361e4:	mov	w9, #0xffffffff            	// #-1
  4361e8:	tst	w0, #0x1
  4361ec:	csel	w8, w9, w8, ne  // ne = any
  4361f0:	stur	w8, [x29, #-4]
  4361f4:	b	436238 <_obstack_memory_used@@Base+0x1809c>
  4361f8:	ldr	w8, [sp, #24]
  4361fc:	and	w8, w8, #0xf000
  436200:	cmp	w8, #0x4, lsl #12
  436204:	b.ne	436234 <_obstack_memory_used@@Base+0x18098>  // b.any
  436208:	ldur	x0, [x29, #-16]
  43620c:	mov	w1, #0x4000                	// #16384
  436210:	bl	402b30 <acl_get_file@plt>
  436214:	ldr	x8, [sp, #16]
  436218:	str	x0, [x8, #16]
  43621c:	ldr	x8, [sp, #16]
  436220:	ldr	x8, [x8, #16]
  436224:	cbnz	x8, 436234 <_obstack_memory_used@@Base+0x18098>
  436228:	mov	w8, #0xffffffff            	// #-1
  43622c:	stur	w8, [x29, #-4]
  436230:	b	436238 <_obstack_memory_used@@Base+0x1809c>
  436234:	stur	wzr, [x29, #-4]
  436238:	ldur	w0, [x29, #-4]
  43623c:	ldp	x29, x30, [sp, #48]
  436240:	add	sp, sp, #0x40
  436244:	ret
  436248:	sub	sp, sp, #0x30
  43624c:	stp	x29, x30, [sp, #32]
  436250:	add	x29, sp, #0x20
  436254:	mov	w8, #0xffffffff            	// #-1
  436258:	str	x0, [sp, #16]
  43625c:	str	w1, [sp, #12]
  436260:	str	w2, [sp, #8]
  436264:	ldr	w9, [sp, #12]
  436268:	cmp	w9, w8
  43626c:	b.eq	436284 <_obstack_memory_used@@Base+0x180e8>  // b.none
  436270:	ldr	w0, [sp, #12]
  436274:	ldr	w1, [sp, #8]
  436278:	bl	402980 <fchmod@plt>
  43627c:	stur	w0, [x29, #-4]
  436280:	b	436294 <_obstack_memory_used@@Base+0x180f8>
  436284:	ldr	x0, [sp, #16]
  436288:	ldr	w1, [sp, #8]
  43628c:	bl	4028b0 <chmod@plt>
  436290:	stur	w0, [x29, #-4]
  436294:	ldur	w0, [x29, #-4]
  436298:	ldp	x29, x30, [sp, #32]
  43629c:	add	sp, sp, #0x30
  4362a0:	ret
  4362a4:	sub	sp, sp, #0x50
  4362a8:	stp	x29, x30, [sp, #64]
  4362ac:	add	x29, sp, #0x40
  4362b0:	mov	w8, #0x0                   	// #0
  4362b4:	mov	w9, #0x1                   	// #1
  4362b8:	stur	x0, [x29, #-16]
  4362bc:	stur	x1, [x29, #-24]
  4362c0:	stur	w2, [x29, #-28]
  4362c4:	sturb	w8, [x29, #-29]
  4362c8:	sturb	w8, [x29, #-31]
  4362cc:	str	wzr, [sp, #28]
  4362d0:	ldur	x10, [x29, #-16]
  4362d4:	ldr	w8, [x10]
  4362d8:	tst	w8, #0xe00
  4362dc:	cset	w8, ne  // ne = any
  4362e0:	and	w8, w8, w9
  4362e4:	sturb	w8, [x29, #-30]
  4362e8:	ldurb	w8, [x29, #-30]
  4362ec:	tbnz	w8, #0, 4362f4 <_obstack_memory_used@@Base+0x18158>
  4362f0:	b	436320 <_obstack_memory_used@@Base+0x18184>
  4362f4:	ldur	x0, [x29, #-24]
  4362f8:	ldur	w1, [x29, #-28]
  4362fc:	ldur	x8, [x29, #-16]
  436300:	ldr	w2, [x8]
  436304:	bl	436248 <_obstack_memory_used@@Base+0x180ac>
  436308:	str	w0, [sp, #28]
  43630c:	ldr	w9, [sp, #28]
  436310:	cbz	w9, 436320 <_obstack_memory_used@@Base+0x18184>
  436314:	mov	w8, #0xffffffff            	// #-1
  436318:	stur	w8, [x29, #-4]
  43631c:	b	436448 <_obstack_memory_used@@Base+0x182ac>
  436320:	ldur	x0, [x29, #-16]
  436324:	ldur	x1, [x29, #-24]
  436328:	ldur	w2, [x29, #-28]
  43632c:	mov	w8, wzr
  436330:	mov	w3, w8
  436334:	sub	x4, x29, #0x1f
  436338:	sub	x5, x29, #0x1d
  43633c:	bl	436458 <_obstack_memory_used@@Base+0x182bc>
  436340:	str	w0, [sp, #28]
  436344:	ldurb	w8, [x29, #-29]
  436348:	tbnz	w8, #0, 4363c8 <_obstack_memory_used@@Base+0x1822c>
  43634c:	ldr	w8, [sp, #28]
  436350:	cbz	w8, 436364 <_obstack_memory_used@@Base+0x181c8>
  436354:	bl	402d00 <__errno_location@plt>
  436358:	ldr	w8, [x0]
  43635c:	str	w8, [sp, #16]
  436360:	b	43636c <_obstack_memory_used@@Base+0x181d0>
  436364:	mov	w8, wzr
  436368:	str	w8, [sp, #16]
  43636c:	ldr	w8, [sp, #16]
  436370:	str	w8, [sp, #24]
  436374:	ldur	x0, [x29, #-16]
  436378:	ldur	x1, [x29, #-24]
  43637c:	ldur	w2, [x29, #-28]
  436380:	mov	w3, #0x1                   	// #1
  436384:	sub	x4, x29, #0x1f
  436388:	sub	x5, x29, #0x1d
  43638c:	bl	436458 <_obstack_memory_used@@Base+0x182bc>
  436390:	str	w0, [sp, #28]
  436394:	ldurb	w8, [x29, #-29]
  436398:	tbnz	w8, #0, 4363a4 <_obstack_memory_used@@Base+0x18208>
  43639c:	mov	w8, #0x1                   	// #1
  4363a0:	sturb	w8, [x29, #-31]
  4363a4:	ldr	w8, [sp, #24]
  4363a8:	cbz	w8, 4363c8 <_obstack_memory_used@@Base+0x1822c>
  4363ac:	ldr	w8, [sp, #24]
  4363b0:	str	w8, [sp, #12]
  4363b4:	bl	402d00 <__errno_location@plt>
  4363b8:	ldr	w8, [sp, #12]
  4363bc:	str	w8, [x0]
  4363c0:	mov	w9, #0xffffffff            	// #-1
  4363c4:	str	w9, [sp, #28]
  4363c8:	ldurb	w8, [x29, #-31]
  4363cc:	tbnz	w8, #0, 4363d4 <_obstack_memory_used@@Base+0x18238>
  4363d0:	b	436440 <_obstack_memory_used@@Base+0x182a4>
  4363d4:	ldurb	w8, [x29, #-30]
  4363d8:	tbnz	w8, #0, 436440 <_obstack_memory_used@@Base+0x182a4>
  4363dc:	ldr	w8, [sp, #28]
  4363e0:	cbz	w8, 4363f4 <_obstack_memory_used@@Base+0x18258>
  4363e4:	bl	402d00 <__errno_location@plt>
  4363e8:	ldr	w8, [x0]
  4363ec:	str	w8, [sp, #8]
  4363f0:	b	4363fc <_obstack_memory_used@@Base+0x18260>
  4363f4:	mov	w8, wzr
  4363f8:	str	w8, [sp, #8]
  4363fc:	ldr	w8, [sp, #8]
  436400:	str	w8, [sp, #20]
  436404:	ldur	x0, [x29, #-24]
  436408:	ldur	w1, [x29, #-28]
  43640c:	ldur	x9, [x29, #-16]
  436410:	ldr	w2, [x9]
  436414:	bl	436248 <_obstack_memory_used@@Base+0x180ac>
  436418:	str	w0, [sp, #28]
  43641c:	ldr	w8, [sp, #20]
  436420:	cbz	w8, 436440 <_obstack_memory_used@@Base+0x182a4>
  436424:	ldr	w8, [sp, #20]
  436428:	str	w8, [sp, #4]
  43642c:	bl	402d00 <__errno_location@plt>
  436430:	ldr	w8, [sp, #4]
  436434:	str	w8, [x0]
  436438:	mov	w9, #0xffffffff            	// #-1
  43643c:	str	w9, [sp, #28]
  436440:	ldr	w8, [sp, #28]
  436444:	stur	w8, [x29, #-4]
  436448:	ldur	w0, [x29, #-4]
  43644c:	ldp	x29, x30, [sp, #64]
  436450:	add	sp, sp, #0x50
  436454:	ret
  436458:	sub	sp, sp, #0x40
  43645c:	stp	x29, x30, [sp, #48]
  436460:	add	x29, sp, #0x30
  436464:	stur	x0, [x29, #-8]
  436468:	stur	x1, [x29, #-16]
  43646c:	stur	w2, [x29, #-20]
  436470:	str	w3, [sp, #24]
  436474:	str	x4, [sp, #16]
  436478:	str	x5, [sp, #8]
  43647c:	str	wzr, [sp, #4]
  436480:	ldur	x8, [x29, #-8]
  436484:	ldrb	w9, [x8, #24]
  436488:	tbnz	w9, #0, 4365e0 <_obstack_memory_used@@Base+0x18444>
  43648c:	ldr	w8, [sp, #4]
  436490:	cbnz	w8, 4364dc <_obstack_memory_used@@Base+0x18340>
  436494:	ldr	w8, [sp, #24]
  436498:	cbz	w8, 4364dc <_obstack_memory_used@@Base+0x18340>
  43649c:	ldur	x8, [x29, #-8]
  4364a0:	ldr	x8, [x8, #8]
  4364a4:	cbz	x8, 4364b4 <_obstack_memory_used@@Base+0x18318>
  4364a8:	ldur	x8, [x29, #-8]
  4364ac:	ldr	x0, [x8, #8]
  4364b0:	bl	402da0 <acl_free@plt>
  4364b4:	ldur	x8, [x29, #-8]
  4364b8:	ldr	w0, [x8]
  4364bc:	bl	4029f0 <acl_from_mode@plt>
  4364c0:	ldur	x8, [x29, #-8]
  4364c4:	str	x0, [x8, #8]
  4364c8:	ldur	x8, [x29, #-8]
  4364cc:	ldr	x8, [x8, #8]
  4364d0:	cbnz	x8, 4364dc <_obstack_memory_used@@Base+0x18340>
  4364d4:	mov	w8, #0xffffffff            	// #-1
  4364d8:	str	w8, [sp, #4]
  4364dc:	ldr	w8, [sp, #4]
  4364e0:	cbnz	w8, 4365e0 <_obstack_memory_used@@Base+0x18444>
  4364e4:	ldur	x8, [x29, #-8]
  4364e8:	ldr	x8, [x8, #8]
  4364ec:	cbz	x8, 4365e0 <_obstack_memory_used@@Base+0x18444>
  4364f0:	ldur	w8, [x29, #-20]
  4364f4:	mov	w9, #0xffffffff            	// #-1
  4364f8:	cmp	w8, w9
  4364fc:	b.eq	436518 <_obstack_memory_used@@Base+0x1837c>  // b.none
  436500:	ldur	w0, [x29, #-20]
  436504:	ldur	x8, [x29, #-8]
  436508:	ldr	x1, [x8, #8]
  43650c:	bl	402710 <acl_set_fd@plt>
  436510:	str	w0, [sp, #4]
  436514:	b	436530 <_obstack_memory_used@@Base+0x18394>
  436518:	ldur	x0, [x29, #-16]
  43651c:	ldur	x8, [x29, #-8]
  436520:	ldr	x2, [x8, #8]
  436524:	mov	w1, #0x8000                	// #32768
  436528:	bl	4029d0 <acl_set_file@plt>
  43652c:	str	w0, [sp, #4]
  436530:	ldr	w8, [sp, #4]
  436534:	cbz	w8, 436574 <_obstack_memory_used@@Base+0x183d8>
  436538:	bl	402d00 <__errno_location@plt>
  43653c:	ldr	w0, [x0]
  436540:	bl	4368ac <_obstack_memory_used@@Base+0x18710>
  436544:	tbnz	w0, #0, 436570 <_obstack_memory_used@@Base+0x183d4>
  436548:	ldur	x8, [x29, #-8]
  43654c:	mov	w9, #0x1                   	// #1
  436550:	strb	w9, [x8, #24]
  436554:	ldr	w9, [sp, #24]
  436558:	cbnz	w9, 43656c <_obstack_memory_used@@Base+0x183d0>
  43655c:	ldur	x8, [x29, #-8]
  436560:	ldr	x0, [x8, #8]
  436564:	bl	436010 <_obstack_memory_used@@Base+0x17e74>
  436568:	cbnz	w0, 436570 <_obstack_memory_used@@Base+0x183d4>
  43656c:	str	wzr, [sp, #4]
  436570:	b	4365e0 <_obstack_memory_used@@Base+0x18444>
  436574:	ldr	x8, [sp, #8]
  436578:	mov	w9, #0x1                   	// #1
  43657c:	strb	w9, [x8]
  436580:	ldur	x8, [x29, #-8]
  436584:	ldr	w9, [x8]
  436588:	and	w9, w9, #0xf000
  43658c:	cmp	w9, #0x4, lsl #12
  436590:	b.ne	4365e0 <_obstack_memory_used@@Base+0x18444>  // b.any
  436594:	ldr	w8, [sp, #24]
  436598:	cbnz	w8, 4365d4 <_obstack_memory_used@@Base+0x18438>
  43659c:	ldur	x8, [x29, #-8]
  4365a0:	ldr	x8, [x8, #16]
  4365a4:	cbz	x8, 4365d4 <_obstack_memory_used@@Base+0x18438>
  4365a8:	ldur	x8, [x29, #-8]
  4365ac:	ldr	x0, [x8, #16]
  4365b0:	bl	4360cc <_obstack_memory_used@@Base+0x17f30>
  4365b4:	cbz	w0, 4365d4 <_obstack_memory_used@@Base+0x18438>
  4365b8:	ldur	x0, [x29, #-16]
  4365bc:	ldur	x8, [x29, #-8]
  4365c0:	ldr	x2, [x8, #16]
  4365c4:	mov	w1, #0x4000                	// #16384
  4365c8:	bl	4029d0 <acl_set_file@plt>
  4365cc:	str	w0, [sp, #4]
  4365d0:	b	4365e0 <_obstack_memory_used@@Base+0x18444>
  4365d4:	ldur	x0, [x29, #-16]
  4365d8:	bl	402810 <acl_delete_def_file@plt>
  4365dc:	str	w0, [sp, #4]
  4365e0:	ldr	w0, [sp, #4]
  4365e4:	ldp	x29, x30, [sp, #48]
  4365e8:	add	sp, sp, #0x40
  4365ec:	ret
  4365f0:	sub	sp, sp, #0x40
  4365f4:	stp	x29, x30, [sp, #48]
  4365f8:	add	x29, sp, #0x30
  4365fc:	stur	x0, [x29, #-16]
  436600:	str	x1, [sp, #24]
  436604:	ldur	x8, [x29, #-16]
  436608:	str	x8, [sp, #16]
  43660c:	ldr	x8, [sp, #24]
  436610:	str	x8, [sp, #8]
  436614:	ldr	x8, [sp, #16]
  436618:	ldr	x9, [sp, #8]
  43661c:	cmp	x8, x9
  436620:	b.ne	43662c <_obstack_memory_used@@Base+0x18490>  // b.any
  436624:	stur	wzr, [x29, #-4]
  436628:	b	436690 <_obstack_memory_used@@Base+0x184f4>
  43662c:	ldr	x8, [sp, #16]
  436630:	ldrb	w0, [x8]
  436634:	bl	436e00 <_obstack_memory_used@@Base+0x18c64>
  436638:	strb	w0, [sp, #7]
  43663c:	ldr	x8, [sp, #8]
  436640:	ldrb	w0, [x8]
  436644:	bl	436e00 <_obstack_memory_used@@Base+0x18c64>
  436648:	strb	w0, [sp, #6]
  43664c:	ldrb	w9, [sp, #7]
  436650:	cbnz	w9, 436658 <_obstack_memory_used@@Base+0x184bc>
  436654:	b	436680 <_obstack_memory_used@@Base+0x184e4>
  436658:	ldr	x8, [sp, #16]
  43665c:	add	x8, x8, #0x1
  436660:	str	x8, [sp, #16]
  436664:	ldr	x8, [sp, #8]
  436668:	add	x8, x8, #0x1
  43666c:	str	x8, [sp, #8]
  436670:	ldrb	w8, [sp, #7]
  436674:	ldrb	w9, [sp, #6]
  436678:	cmp	w8, w9
  43667c:	b.eq	43662c <_obstack_memory_used@@Base+0x18490>  // b.none
  436680:	ldrb	w8, [sp, #7]
  436684:	ldrb	w9, [sp, #6]
  436688:	subs	w8, w8, w9
  43668c:	stur	w8, [x29, #-4]
  436690:	ldur	w0, [x29, #-4]
  436694:	ldp	x29, x30, [sp, #48]
  436698:	add	sp, sp, #0x40
  43669c:	ret
  4366a0:	sub	sp, sp, #0x130
  4366a4:	stp	x29, x30, [sp, #272]
  4366a8:	str	x28, [sp, #288]
  4366ac:	add	x29, sp, #0x110
  4366b0:	sub	x8, x29, #0x8
  4366b4:	mov	x2, #0x101                 	// #257
  4366b8:	add	x1, sp, #0x7
  4366bc:	str	w0, [x8]
  4366c0:	ldr	w0, [x8]
  4366c4:	bl	436740 <_obstack_memory_used@@Base+0x185a4>
  4366c8:	cbz	w0, 4366dc <_obstack_memory_used@@Base+0x18540>
  4366cc:	mov	w8, wzr
  4366d0:	and	w8, w8, #0x1
  4366d4:	sturb	w8, [x29, #-1]
  4366d8:	b	436728 <_obstack_memory_used@@Base+0x1858c>
  4366dc:	add	x0, sp, #0x7
  4366e0:	adrp	x1, 43a000 <_obstack_memory_used@@Base+0x1be64>
  4366e4:	add	x1, x1, #0x13a
  4366e8:	bl	402b10 <strcmp@plt>
  4366ec:	mov	w8, #0x1                   	// #1
  4366f0:	str	w8, [sp]
  4366f4:	cbz	w0, 436714 <_obstack_memory_used@@Base+0x18578>
  4366f8:	add	x0, sp, #0x7
  4366fc:	adrp	x1, 43a000 <_obstack_memory_used@@Base+0x1be64>
  436700:	add	x1, x1, #0x13c
  436704:	bl	402b10 <strcmp@plt>
  436708:	cmp	w0, #0x0
  43670c:	cset	w8, eq  // eq = none
  436710:	str	w8, [sp]
  436714:	ldr	w8, [sp]
  436718:	mov	w9, #0x1                   	// #1
  43671c:	eor	w8, w8, #0x1
  436720:	and	w8, w8, w9
  436724:	sturb	w8, [x29, #-1]
  436728:	ldurb	w8, [x29, #-1]
  43672c:	and	w0, w8, #0x1
  436730:	ldr	x28, [sp, #288]
  436734:	ldp	x29, x30, [sp, #272]
  436738:	add	sp, sp, #0x130
  43673c:	ret
  436740:	sub	sp, sp, #0x30
  436744:	stp	x29, x30, [sp, #32]
  436748:	add	x29, sp, #0x20
  43674c:	stur	w0, [x29, #-4]
  436750:	str	x1, [sp, #16]
  436754:	str	x2, [sp, #8]
  436758:	ldur	w0, [x29, #-4]
  43675c:	ldr	x1, [sp, #16]
  436760:	ldr	x2, [sp, #8]
  436764:	bl	436774 <_obstack_memory_used@@Base+0x185d8>
  436768:	ldp	x29, x30, [sp, #32]
  43676c:	add	sp, sp, #0x30
  436770:	ret
  436774:	sub	sp, sp, #0x40
  436778:	stp	x29, x30, [sp, #48]
  43677c:	add	x29, sp, #0x30
  436780:	stur	w0, [x29, #-8]
  436784:	stur	x1, [x29, #-16]
  436788:	str	x2, [sp, #24]
  43678c:	ldur	w0, [x29, #-8]
  436790:	bl	436878 <_obstack_memory_used@@Base+0x186dc>
  436794:	str	x0, [sp, #16]
  436798:	ldr	x8, [sp, #16]
  43679c:	cbnz	x8, 4367c8 <_obstack_memory_used@@Base+0x1862c>
  4367a0:	ldr	x8, [sp, #24]
  4367a4:	cmp	x8, #0x0
  4367a8:	cset	w9, ls  // ls = plast
  4367ac:	tbnz	w9, #0, 4367bc <_obstack_memory_used@@Base+0x18620>
  4367b0:	ldur	x8, [x29, #-16]
  4367b4:	mov	w9, #0x0                   	// #0
  4367b8:	strb	w9, [x8]
  4367bc:	mov	w8, #0x16                  	// #22
  4367c0:	stur	w8, [x29, #-4]
  4367c4:	b	436844 <_obstack_memory_used@@Base+0x186a8>
  4367c8:	ldr	x0, [sp, #16]
  4367cc:	bl	4026f0 <strlen@plt>
  4367d0:	str	x0, [sp, #8]
  4367d4:	ldr	x8, [sp, #8]
  4367d8:	ldr	x9, [sp, #24]
  4367dc:	cmp	x8, x9
  4367e0:	b.cs	436800 <_obstack_memory_used@@Base+0x18664>  // b.hs, b.nlast
  4367e4:	ldur	x0, [x29, #-16]
  4367e8:	ldr	x1, [sp, #16]
  4367ec:	ldr	x8, [sp, #8]
  4367f0:	add	x2, x8, #0x1
  4367f4:	bl	4026a0 <memcpy@plt>
  4367f8:	stur	wzr, [x29, #-4]
  4367fc:	b	436844 <_obstack_memory_used@@Base+0x186a8>
  436800:	ldr	x8, [sp, #24]
  436804:	cmp	x8, #0x0
  436808:	cset	w9, ls  // ls = plast
  43680c:	tbnz	w9, #0, 43683c <_obstack_memory_used@@Base+0x186a0>
  436810:	ldur	x0, [x29, #-16]
  436814:	ldr	x1, [sp, #16]
  436818:	ldr	x8, [sp, #24]
  43681c:	subs	x2, x8, #0x1
  436820:	bl	4026a0 <memcpy@plt>
  436824:	ldur	x8, [x29, #-16]
  436828:	ldr	x9, [sp, #24]
  43682c:	subs	x9, x9, #0x1
  436830:	add	x8, x8, x9
  436834:	mov	w10, #0x0                   	// #0
  436838:	strb	w10, [x8]
  43683c:	mov	w8, #0x22                  	// #34
  436840:	stur	w8, [x29, #-4]
  436844:	ldur	w0, [x29, #-4]
  436848:	ldp	x29, x30, [sp, #48]
  43684c:	add	sp, sp, #0x40
  436850:	ret
  436854:	sub	sp, sp, #0x20
  436858:	stp	x29, x30, [sp, #16]
  43685c:	add	x29, sp, #0x10
  436860:	stur	w0, [x29, #-4]
  436864:	ldur	w0, [x29, #-4]
  436868:	bl	436878 <_obstack_memory_used@@Base+0x186dc>
  43686c:	ldp	x29, x30, [sp, #16]
  436870:	add	sp, sp, #0x20
  436874:	ret
  436878:	sub	sp, sp, #0x20
  43687c:	stp	x29, x30, [sp, #16]
  436880:	add	x29, sp, #0x10
  436884:	mov	x8, xzr
  436888:	stur	w0, [x29, #-4]
  43688c:	ldur	w0, [x29, #-4]
  436890:	mov	x1, x8
  436894:	bl	402d90 <setlocale@plt>
  436898:	str	x0, [sp]
  43689c:	ldr	x0, [sp]
  4368a0:	ldp	x29, x30, [sp, #16]
  4368a4:	add	sp, sp, #0x20
  4368a8:	ret
  4368ac:	sub	sp, sp, #0x10
  4368b0:	str	w0, [sp, #8]
  4368b4:	ldr	w8, [sp, #8]
  4368b8:	cmp	w8, #0x10
  4368bc:	str	w8, [sp, #4]
  4368c0:	b.eq	4368f8 <_obstack_memory_used@@Base+0x1875c>  // b.none
  4368c4:	b	4368c8 <_obstack_memory_used@@Base+0x1872c>
  4368c8:	ldr	w8, [sp, #4]
  4368cc:	cmp	w8, #0x16
  4368d0:	b.eq	436908 <_obstack_memory_used@@Base+0x1876c>  // b.none
  4368d4:	b	4368d8 <_obstack_memory_used@@Base+0x1873c>
  4368d8:	ldr	w8, [sp, #4]
  4368dc:	cmp	w8, #0x26
  4368e0:	b.eq	436918 <_obstack_memory_used@@Base+0x1877c>  // b.none
  4368e4:	b	4368e8 <_obstack_memory_used@@Base+0x1874c>
  4368e8:	ldr	w8, [sp, #4]
  4368ec:	cmp	w8, #0x5f
  4368f0:	b.eq	436928 <_obstack_memory_used@@Base+0x1878c>  // b.none
  4368f4:	b	436938 <_obstack_memory_used@@Base+0x1879c>
  4368f8:	mov	w8, wzr
  4368fc:	and	w8, w8, #0x1
  436900:	strb	w8, [sp, #15]
  436904:	b	436944 <_obstack_memory_used@@Base+0x187a8>
  436908:	mov	w8, wzr
  43690c:	and	w8, w8, #0x1
  436910:	strb	w8, [sp, #15]
  436914:	b	436944 <_obstack_memory_used@@Base+0x187a8>
  436918:	mov	w8, wzr
  43691c:	and	w8, w8, #0x1
  436920:	strb	w8, [sp, #15]
  436924:	b	436944 <_obstack_memory_used@@Base+0x187a8>
  436928:	mov	w8, wzr
  43692c:	and	w8, w8, #0x1
  436930:	strb	w8, [sp, #15]
  436934:	b	436944 <_obstack_memory_used@@Base+0x187a8>
  436938:	mov	w8, #0x1                   	// #1
  43693c:	and	w8, w8, #0x1
  436940:	strb	w8, [sp, #15]
  436944:	ldrb	w8, [sp, #15]
  436948:	and	w0, w8, #0x1
  43694c:	add	sp, sp, #0x10
  436950:	ret
  436954:	sub	sp, sp, #0x10
  436958:	str	w0, [sp, #8]
  43695c:	ldr	w8, [sp, #8]
  436960:	subs	w9, w8, #0x30
  436964:	cmp	w9, #0x9
  436968:	str	w8, [sp, #4]
  43696c:	b.ls	4369a4 <_obstack_memory_used@@Base+0x18808>  // b.plast
  436970:	b	436974 <_obstack_memory_used@@Base+0x187d8>
  436974:	ldr	w8, [sp, #4]
  436978:	subs	w9, w8, #0x41
  43697c:	cmp	w9, #0x19
  436980:	b.ls	4369a4 <_obstack_memory_used@@Base+0x18808>  // b.plast
  436984:	b	436988 <_obstack_memory_used@@Base+0x187ec>
  436988:	ldr	w8, [sp, #4]
  43698c:	subs	w9, w8, #0x61
  436990:	cmp	w9, #0x19
  436994:	cset	w9, ls  // ls = plast
  436998:	eor	w9, w9, #0x1
  43699c:	tbnz	w9, #0, 4369b4 <_obstack_memory_used@@Base+0x18818>
  4369a0:	b	4369a4 <_obstack_memory_used@@Base+0x18808>
  4369a4:	mov	w8, #0x1                   	// #1
  4369a8:	and	w8, w8, #0x1
  4369ac:	strb	w8, [sp, #15]
  4369b0:	b	4369c0 <_obstack_memory_used@@Base+0x18824>
  4369b4:	mov	w8, wzr
  4369b8:	and	w8, w8, #0x1
  4369bc:	strb	w8, [sp, #15]
  4369c0:	ldrb	w8, [sp, #15]
  4369c4:	and	w0, w8, #0x1
  4369c8:	add	sp, sp, #0x10
  4369cc:	ret
  4369d0:	sub	sp, sp, #0x10
  4369d4:	str	w0, [sp, #8]
  4369d8:	ldr	w8, [sp, #8]
  4369dc:	subs	w9, w8, #0x41
  4369e0:	cmp	w9, #0x19
  4369e4:	str	w8, [sp, #4]
  4369e8:	b.ls	436a0c <_obstack_memory_used@@Base+0x18870>  // b.plast
  4369ec:	b	4369f0 <_obstack_memory_used@@Base+0x18854>
  4369f0:	ldr	w8, [sp, #4]
  4369f4:	subs	w9, w8, #0x61
  4369f8:	cmp	w9, #0x19
  4369fc:	cset	w9, ls  // ls = plast
  436a00:	eor	w9, w9, #0x1
  436a04:	tbnz	w9, #0, 436a1c <_obstack_memory_used@@Base+0x18880>
  436a08:	b	436a0c <_obstack_memory_used@@Base+0x18870>
  436a0c:	mov	w8, #0x1                   	// #1
  436a10:	and	w8, w8, #0x1
  436a14:	strb	w8, [sp, #15]
  436a18:	b	436a28 <_obstack_memory_used@@Base+0x1888c>
  436a1c:	mov	w8, wzr
  436a20:	and	w8, w8, #0x1
  436a24:	strb	w8, [sp, #15]
  436a28:	ldrb	w8, [sp, #15]
  436a2c:	and	w0, w8, #0x1
  436a30:	add	sp, sp, #0x10
  436a34:	ret
  436a38:	sub	sp, sp, #0x10
  436a3c:	str	w0, [sp, #8]
  436a40:	ldr	w8, [sp, #8]
  436a44:	subs	w8, w8, #0x0
  436a48:	cmp	w8, #0x7f
  436a4c:	cset	w8, ls  // ls = plast
  436a50:	eor	w8, w8, #0x1
  436a54:	tbnz	w8, #0, 436a6c <_obstack_memory_used@@Base+0x188d0>
  436a58:	b	436a5c <_obstack_memory_used@@Base+0x188c0>
  436a5c:	mov	w8, #0x1                   	// #1
  436a60:	and	w8, w8, #0x1
  436a64:	strb	w8, [sp, #15]
  436a68:	b	436a78 <_obstack_memory_used@@Base+0x188dc>
  436a6c:	mov	w8, wzr
  436a70:	and	w8, w8, #0x1
  436a74:	strb	w8, [sp, #15]
  436a78:	ldrb	w8, [sp, #15]
  436a7c:	and	w0, w8, #0x1
  436a80:	add	sp, sp, #0x10
  436a84:	ret
  436a88:	sub	sp, sp, #0x10
  436a8c:	str	w0, [sp, #12]
  436a90:	ldr	w8, [sp, #12]
  436a94:	mov	w9, #0x1                   	// #1
  436a98:	cmp	w8, #0x20
  436a9c:	str	w9, [sp, #8]
  436aa0:	b.eq	436ab4 <_obstack_memory_used@@Base+0x18918>  // b.none
  436aa4:	ldr	w8, [sp, #12]
  436aa8:	cmp	w8, #0x9
  436aac:	cset	w8, eq  // eq = none
  436ab0:	str	w8, [sp, #8]
  436ab4:	ldr	w8, [sp, #8]
  436ab8:	and	w0, w8, #0x1
  436abc:	add	sp, sp, #0x10
  436ac0:	ret
  436ac4:	sub	sp, sp, #0x10
  436ac8:	str	w0, [sp, #8]
  436acc:	ldr	w8, [sp, #8]
  436ad0:	subs	w9, w8, #0x0
  436ad4:	cmp	w9, #0x1f
  436ad8:	str	w8, [sp, #4]
  436adc:	b.ls	436afc <_obstack_memory_used@@Base+0x18960>  // b.plast
  436ae0:	b	436ae4 <_obstack_memory_used@@Base+0x18948>
  436ae4:	ldr	w8, [sp, #4]
  436ae8:	cmp	w8, #0x7f
  436aec:	cset	w9, eq  // eq = none
  436af0:	eor	w9, w9, #0x1
  436af4:	tbnz	w9, #0, 436b0c <_obstack_memory_used@@Base+0x18970>
  436af8:	b	436afc <_obstack_memory_used@@Base+0x18960>
  436afc:	mov	w8, #0x1                   	// #1
  436b00:	and	w8, w8, #0x1
  436b04:	strb	w8, [sp, #15]
  436b08:	b	436b18 <_obstack_memory_used@@Base+0x1897c>
  436b0c:	mov	w8, wzr
  436b10:	and	w8, w8, #0x1
  436b14:	strb	w8, [sp, #15]
  436b18:	ldrb	w8, [sp, #15]
  436b1c:	and	w0, w8, #0x1
  436b20:	add	sp, sp, #0x10
  436b24:	ret
  436b28:	sub	sp, sp, #0x10
  436b2c:	str	w0, [sp, #8]
  436b30:	ldr	w8, [sp, #8]
  436b34:	subs	w8, w8, #0x30
  436b38:	cmp	w8, #0x9
  436b3c:	cset	w8, ls  // ls = plast
  436b40:	eor	w8, w8, #0x1
  436b44:	tbnz	w8, #0, 436b5c <_obstack_memory_used@@Base+0x189c0>
  436b48:	b	436b4c <_obstack_memory_used@@Base+0x189b0>
  436b4c:	mov	w8, #0x1                   	// #1
  436b50:	and	w8, w8, #0x1
  436b54:	strb	w8, [sp, #15]
  436b58:	b	436b68 <_obstack_memory_used@@Base+0x189cc>
  436b5c:	mov	w8, wzr
  436b60:	and	w8, w8, #0x1
  436b64:	strb	w8, [sp, #15]
  436b68:	ldrb	w8, [sp, #15]
  436b6c:	and	w0, w8, #0x1
  436b70:	add	sp, sp, #0x10
  436b74:	ret
  436b78:	sub	sp, sp, #0x10
  436b7c:	str	w0, [sp, #8]
  436b80:	ldr	w8, [sp, #8]
  436b84:	subs	w8, w8, #0x21
  436b88:	cmp	w8, #0x5d
  436b8c:	cset	w8, ls  // ls = plast
  436b90:	eor	w8, w8, #0x1
  436b94:	tbnz	w8, #0, 436bac <_obstack_memory_used@@Base+0x18a10>
  436b98:	b	436b9c <_obstack_memory_used@@Base+0x18a00>
  436b9c:	mov	w8, #0x1                   	// #1
  436ba0:	and	w8, w8, #0x1
  436ba4:	strb	w8, [sp, #15]
  436ba8:	b	436bb8 <_obstack_memory_used@@Base+0x18a1c>
  436bac:	mov	w8, wzr
  436bb0:	and	w8, w8, #0x1
  436bb4:	strb	w8, [sp, #15]
  436bb8:	ldrb	w8, [sp, #15]
  436bbc:	and	w0, w8, #0x1
  436bc0:	add	sp, sp, #0x10
  436bc4:	ret
  436bc8:	sub	sp, sp, #0x10
  436bcc:	str	w0, [sp, #8]
  436bd0:	ldr	w8, [sp, #8]
  436bd4:	subs	w8, w8, #0x61
  436bd8:	cmp	w8, #0x19
  436bdc:	cset	w8, ls  // ls = plast
  436be0:	eor	w8, w8, #0x1
  436be4:	tbnz	w8, #0, 436bfc <_obstack_memory_used@@Base+0x18a60>
  436be8:	b	436bec <_obstack_memory_used@@Base+0x18a50>
  436bec:	mov	w8, #0x1                   	// #1
  436bf0:	and	w8, w8, #0x1
  436bf4:	strb	w8, [sp, #15]
  436bf8:	b	436c08 <_obstack_memory_used@@Base+0x18a6c>
  436bfc:	mov	w8, wzr
  436c00:	and	w8, w8, #0x1
  436c04:	strb	w8, [sp, #15]
  436c08:	ldrb	w8, [sp, #15]
  436c0c:	and	w0, w8, #0x1
  436c10:	add	sp, sp, #0x10
  436c14:	ret
  436c18:	sub	sp, sp, #0x10
  436c1c:	str	w0, [sp, #8]
  436c20:	ldr	w8, [sp, #8]
  436c24:	subs	w8, w8, #0x20
  436c28:	cmp	w8, #0x5e
  436c2c:	cset	w8, ls  // ls = plast
  436c30:	eor	w8, w8, #0x1
  436c34:	tbnz	w8, #0, 436c4c <_obstack_memory_used@@Base+0x18ab0>
  436c38:	b	436c3c <_obstack_memory_used@@Base+0x18aa0>
  436c3c:	mov	w8, #0x1                   	// #1
  436c40:	and	w8, w8, #0x1
  436c44:	strb	w8, [sp, #15]
  436c48:	b	436c58 <_obstack_memory_used@@Base+0x18abc>
  436c4c:	mov	w8, wzr
  436c50:	and	w8, w8, #0x1
  436c54:	strb	w8, [sp, #15]
  436c58:	ldrb	w8, [sp, #15]
  436c5c:	and	w0, w8, #0x1
  436c60:	add	sp, sp, #0x10
  436c64:	ret
  436c68:	sub	sp, sp, #0x10
  436c6c:	str	w0, [sp, #8]
  436c70:	ldr	w8, [sp, #8]
  436c74:	subs	w8, w8, #0x21
  436c78:	mov	w9, w8
  436c7c:	ubfx	x9, x9, #0, #32
  436c80:	cmp	x9, #0x5d
  436c84:	str	x9, [sp]
  436c88:	b.hi	436cb4 <_obstack_memory_used@@Base+0x18b18>  // b.pmore
  436c8c:	adrp	x8, 43a000 <_obstack_memory_used@@Base+0x1be64>
  436c90:	add	x8, x8, #0x144
  436c94:	ldr	x11, [sp]
  436c98:	ldrsw	x10, [x8, x11, lsl #2]
  436c9c:	add	x9, x8, x10
  436ca0:	br	x9
  436ca4:	mov	w8, #0x1                   	// #1
  436ca8:	and	w8, w8, #0x1
  436cac:	strb	w8, [sp, #15]
  436cb0:	b	436cc0 <_obstack_memory_used@@Base+0x18b24>
  436cb4:	mov	w8, wzr
  436cb8:	and	w8, w8, #0x1
  436cbc:	strb	w8, [sp, #15]
  436cc0:	ldrb	w8, [sp, #15]
  436cc4:	and	w0, w8, #0x1
  436cc8:	add	sp, sp, #0x10
  436ccc:	ret
  436cd0:	sub	sp, sp, #0x10
  436cd4:	str	w0, [sp, #8]
  436cd8:	ldr	w8, [sp, #8]
  436cdc:	subs	w9, w8, #0x9
  436ce0:	cmp	w9, #0x4
  436ce4:	str	w8, [sp, #4]
  436ce8:	b.ls	436d08 <_obstack_memory_used@@Base+0x18b6c>  // b.plast
  436cec:	b	436cf0 <_obstack_memory_used@@Base+0x18b54>
  436cf0:	ldr	w8, [sp, #4]
  436cf4:	cmp	w8, #0x20
  436cf8:	cset	w9, eq  // eq = none
  436cfc:	eor	w9, w9, #0x1
  436d00:	tbnz	w9, #0, 436d18 <_obstack_memory_used@@Base+0x18b7c>
  436d04:	b	436d08 <_obstack_memory_used@@Base+0x18b6c>
  436d08:	mov	w8, #0x1                   	// #1
  436d0c:	and	w8, w8, #0x1
  436d10:	strb	w8, [sp, #15]
  436d14:	b	436d24 <_obstack_memory_used@@Base+0x18b88>
  436d18:	mov	w8, wzr
  436d1c:	and	w8, w8, #0x1
  436d20:	strb	w8, [sp, #15]
  436d24:	ldrb	w8, [sp, #15]
  436d28:	and	w0, w8, #0x1
  436d2c:	add	sp, sp, #0x10
  436d30:	ret
  436d34:	sub	sp, sp, #0x10
  436d38:	str	w0, [sp, #8]
  436d3c:	ldr	w8, [sp, #8]
  436d40:	subs	w8, w8, #0x41
  436d44:	cmp	w8, #0x19
  436d48:	cset	w8, ls  // ls = plast
  436d4c:	eor	w8, w8, #0x1
  436d50:	tbnz	w8, #0, 436d68 <_obstack_memory_used@@Base+0x18bcc>
  436d54:	b	436d58 <_obstack_memory_used@@Base+0x18bbc>
  436d58:	mov	w8, #0x1                   	// #1
  436d5c:	and	w8, w8, #0x1
  436d60:	strb	w8, [sp, #15]
  436d64:	b	436d74 <_obstack_memory_used@@Base+0x18bd8>
  436d68:	mov	w8, wzr
  436d6c:	and	w8, w8, #0x1
  436d70:	strb	w8, [sp, #15]
  436d74:	ldrb	w8, [sp, #15]
  436d78:	and	w0, w8, #0x1
  436d7c:	add	sp, sp, #0x10
  436d80:	ret
  436d84:	sub	sp, sp, #0x10
  436d88:	str	w0, [sp, #8]
  436d8c:	ldr	w8, [sp, #8]
  436d90:	subs	w9, w8, #0x30
  436d94:	cmp	w9, #0x9
  436d98:	str	w8, [sp, #4]
  436d9c:	b.ls	436dd4 <_obstack_memory_used@@Base+0x18c38>  // b.plast
  436da0:	b	436da4 <_obstack_memory_used@@Base+0x18c08>
  436da4:	ldr	w8, [sp, #4]
  436da8:	subs	w9, w8, #0x41
  436dac:	cmp	w9, #0x5
  436db0:	b.ls	436dd4 <_obstack_memory_used@@Base+0x18c38>  // b.plast
  436db4:	b	436db8 <_obstack_memory_used@@Base+0x18c1c>
  436db8:	ldr	w8, [sp, #4]
  436dbc:	subs	w9, w8, #0x61
  436dc0:	cmp	w9, #0x5
  436dc4:	cset	w9, ls  // ls = plast
  436dc8:	eor	w9, w9, #0x1
  436dcc:	tbnz	w9, #0, 436de4 <_obstack_memory_used@@Base+0x18c48>
  436dd0:	b	436dd4 <_obstack_memory_used@@Base+0x18c38>
  436dd4:	mov	w8, #0x1                   	// #1
  436dd8:	and	w8, w8, #0x1
  436ddc:	strb	w8, [sp, #15]
  436de0:	b	436df0 <_obstack_memory_used@@Base+0x18c54>
  436de4:	mov	w8, wzr
  436de8:	and	w8, w8, #0x1
  436dec:	strb	w8, [sp, #15]
  436df0:	ldrb	w8, [sp, #15]
  436df4:	and	w0, w8, #0x1
  436df8:	add	sp, sp, #0x10
  436dfc:	ret
  436e00:	sub	sp, sp, #0x10
  436e04:	str	w0, [sp, #8]
  436e08:	ldr	w8, [sp, #8]
  436e0c:	subs	w8, w8, #0x41
  436e10:	cmp	w8, #0x19
  436e14:	cset	w8, ls  // ls = plast
  436e18:	eor	w8, w8, #0x1
  436e1c:	tbnz	w8, #0, 436e38 <_obstack_memory_used@@Base+0x18c9c>
  436e20:	b	436e24 <_obstack_memory_used@@Base+0x18c88>
  436e24:	ldr	w8, [sp, #8]
  436e28:	subs	w8, w8, #0x41
  436e2c:	add	w8, w8, #0x61
  436e30:	str	w8, [sp, #12]
  436e34:	b	436e40 <_obstack_memory_used@@Base+0x18ca4>
  436e38:	ldr	w8, [sp, #8]
  436e3c:	str	w8, [sp, #12]
  436e40:	ldr	w0, [sp, #12]
  436e44:	add	sp, sp, #0x10
  436e48:	ret
  436e4c:	sub	sp, sp, #0x10
  436e50:	str	w0, [sp, #8]
  436e54:	ldr	w8, [sp, #8]
  436e58:	subs	w8, w8, #0x61
  436e5c:	cmp	w8, #0x19
  436e60:	cset	w8, ls  // ls = plast
  436e64:	eor	w8, w8, #0x1
  436e68:	tbnz	w8, #0, 436e84 <_obstack_memory_used@@Base+0x18ce8>
  436e6c:	b	436e70 <_obstack_memory_used@@Base+0x18cd4>
  436e70:	ldr	w8, [sp, #8]
  436e74:	subs	w8, w8, #0x61
  436e78:	add	w8, w8, #0x41
  436e7c:	str	w8, [sp, #12]
  436e80:	b	436e8c <_obstack_memory_used@@Base+0x18cf0>
  436e84:	ldr	w8, [sp, #8]
  436e88:	str	w8, [sp, #12]
  436e8c:	ldr	w0, [sp, #12]
  436e90:	add	sp, sp, #0x10
  436e94:	ret
  436e98:	stp	x29, x30, [sp, #-64]!
  436e9c:	mov	x29, sp
  436ea0:	stp	x19, x20, [sp, #16]
  436ea4:	adrp	x20, 44a000 <_obstack_memory_used@@Base+0x2be64>
  436ea8:	add	x20, x20, #0xde0
  436eac:	stp	x21, x22, [sp, #32]
  436eb0:	adrp	x21, 44a000 <_obstack_memory_used@@Base+0x2be64>
  436eb4:	add	x21, x21, #0xdd8
  436eb8:	sub	x20, x20, x21
  436ebc:	mov	w22, w0
  436ec0:	stp	x23, x24, [sp, #48]
  436ec4:	mov	x23, x1
  436ec8:	mov	x24, x2
  436ecc:	bl	402650 <mbrtowc@plt-0x40>
  436ed0:	cmp	xzr, x20, asr #3
  436ed4:	b.eq	436f00 <_obstack_memory_used@@Base+0x18d64>  // b.none
  436ed8:	asr	x20, x20, #3
  436edc:	mov	x19, #0x0                   	// #0
  436ee0:	ldr	x3, [x21, x19, lsl #3]
  436ee4:	mov	x2, x24
  436ee8:	add	x19, x19, #0x1
  436eec:	mov	x1, x23
  436ef0:	mov	w0, w22
  436ef4:	blr	x3
  436ef8:	cmp	x20, x19
  436efc:	b.ne	436ee0 <_obstack_memory_used@@Base+0x18d44>  // b.any
  436f00:	ldp	x19, x20, [sp, #16]
  436f04:	ldp	x21, x22, [sp, #32]
  436f08:	ldp	x23, x24, [sp, #48]
  436f0c:	ldp	x29, x30, [sp], #64
  436f10:	ret
  436f14:	nop
  436f18:	ret
  436f1c:	nop
  436f20:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x2ce64>
  436f24:	mov	x1, #0x0                   	// #0
  436f28:	ldr	x2, [x2, #928]
  436f2c:	b	4027a0 <__cxa_atexit@plt>
  436f30:	mov	x2, x1
  436f34:	mov	w1, w0
  436f38:	mov	w0, #0x0                   	// #0
  436f3c:	b	402c40 <__fxstat@plt>
  436f40:	mov	x2, x1
  436f44:	mov	x1, x0
  436f48:	mov	w0, #0x0                   	// #0
  436f4c:	b	402bf0 <__lxstat@plt>

Disassembly of section .fini:

0000000000436f50 <.fini>:
  436f50:	stp	x29, x30, [sp, #-16]!
  436f54:	mov	x29, sp
  436f58:	ldp	x29, x30, [sp], #16
  436f5c:	ret
