
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-rc-local-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400a88 <_init>:
  400a88:	stp	x29, x30, [sp, #-16]!
  400a8c:	mov	x29, sp
  400a90:	bl	400c30 <call_weak_fn>
  400a94:	ldp	x29, x30, [sp], #16
  400a98:	ret

Disassembly of section .plt:

0000000000400aa0 <.plt>:
  400aa0:	stp	x16, x30, [sp, #-16]!
  400aa4:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400aa8:	ldr	x17, [x16, #3928]
  400aac:	add	x16, x16, #0xf58
  400ab0:	br	x17
  400ab4:	nop
  400ab8:	nop
  400abc:	nop

0000000000400ac0 <mkdir_parents_label@plt>:
  400ac0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400ac4:	ldr	x17, [x16, #3936]
  400ac8:	add	x16, x16, #0xf60
  400acc:	br	x17

0000000000400ad0 <stpcpy@plt>:
  400ad0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400ad4:	ldr	x17, [x16, #3944]
  400ad8:	add	x16, x16, #0xf68
  400adc:	br	x17

0000000000400ae0 <__libc_start_main@plt>:
  400ae0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400ae4:	ldr	x17, [x16, #3952]
  400ae8:	add	x16, x16, #0xf70
  400aec:	br	x17

0000000000400af0 <__gmon_start__@plt>:
  400af0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400af4:	ldr	x17, [x16, #3960]
  400af8:	add	x16, x16, #0xf78
  400afc:	br	x17

0000000000400b00 <polkit_agent_close@plt>:
  400b00:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b04:	ldr	x17, [x16, #3968]
  400b08:	add	x16, x16, #0xf80
  400b0c:	br	x17

0000000000400b10 <symlink@plt>:
  400b10:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b14:	ldr	x17, [x16, #3976]
  400b18:	add	x16, x16, #0xf88
  400b1c:	br	x17

0000000000400b20 <log_assert_failed_realm@plt>:
  400b20:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b24:	ldr	x17, [x16, #3984]
  400b28:	add	x16, x16, #0xf90
  400b2c:	br	x17

0000000000400b30 <access@plt>:
  400b30:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b34:	ldr	x17, [x16, #3992]
  400b38:	add	x16, x16, #0xf98
  400b3c:	br	x17

0000000000400b40 <abort@plt>:
  400b40:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b44:	ldr	x17, [x16, #4000]
  400b48:	add	x16, x16, #0xfa0
  400b4c:	br	x17

0000000000400b50 <log_setup_generator@plt>:
  400b50:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b54:	ldr	x17, [x16, #4008]
  400b58:	add	x16, x16, #0xfa8
  400b5c:	br	x17

0000000000400b60 <__errno_location@plt>:
  400b60:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b64:	ldr	x17, [x16, #4016]
  400b68:	add	x16, x16, #0xfb0
  400b6c:	br	x17

0000000000400b70 <__stack_chk_fail@plt>:
  400b70:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b74:	ldr	x17, [x16, #4024]
  400b78:	add	x16, x16, #0xfb8
  400b7c:	br	x17

0000000000400b80 <ask_password_agent_close@plt>:
  400b80:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b84:	ldr	x17, [x16, #4032]
  400b88:	add	x16, x16, #0xfc0
  400b8c:	br	x17

0000000000400b90 <pager_close@plt>:
  400b90:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400b94:	ldr	x17, [x16, #4040]
  400b98:	add	x16, x16, #0xfc8
  400b9c:	br	x17

0000000000400ba0 <log_internal_realm@plt>:
  400ba0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400ba4:	ldr	x17, [x16, #4048]
  400ba8:	add	x16, x16, #0xfd0
  400bac:	br	x17

0000000000400bb0 <mac_selinux_finish@plt>:
  400bb0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400bb4:	ldr	x17, [x16, #4056]
  400bb8:	add	x16, x16, #0xfd8
  400bbc:	br	x17

0000000000400bc0 <strlen@plt>:
  400bc0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400bc4:	ldr	x17, [x16, #4064]
  400bc8:	add	x16, x16, #0xfe0
  400bcc:	br	x17

0000000000400bd0 <log_get_max_level_realm@plt>:
  400bd0:	adrp	x16, 412000 <__FRAME_END__+0x10188>
  400bd4:	ldr	x17, [x16, #4072]
  400bd8:	add	x16, x16, #0xfe8
  400bdc:	br	x17

Disassembly of section .text:

0000000000400be0 <_start>:
  400be0:	mov	x29, #0x0                   	// #0
  400be4:	mov	x30, #0x0                   	// #0
  400be8:	mov	x5, x0
  400bec:	ldr	x1, [sp]
  400bf0:	add	x2, sp, #0x8
  400bf4:	mov	x6, sp
  400bf8:	movz	x0, #0x0, lsl #48
  400bfc:	movk	x0, #0x0, lsl #32
  400c00:	movk	x0, #0x40, lsl #16
  400c04:	movk	x0, #0x179c
  400c08:	movz	x3, #0x0, lsl #48
  400c0c:	movk	x3, #0x0, lsl #32
  400c10:	movk	x3, #0x40, lsl #16
  400c14:	movk	x3, #0x18f0
  400c18:	movz	x4, #0x0, lsl #48
  400c1c:	movk	x4, #0x0, lsl #32
  400c20:	movk	x4, #0x40, lsl #16
  400c24:	movk	x4, #0x1970
  400c28:	bl	400ae0 <__libc_start_main@plt>
  400c2c:	bl	400b40 <abort@plt>

0000000000400c30 <call_weak_fn>:
  400c30:	adrp	x0, 412000 <__FRAME_END__+0x10188>
  400c34:	ldr	x0, [x0, #4088]
  400c38:	cbz	x0, 400c40 <call_weak_fn+0x10>
  400c3c:	b	400af0 <__gmon_start__@plt>
  400c40:	ret

0000000000400c44 <deregister_tm_clones>:
  400c44:	stp	x29, x30, [sp, #-32]!
  400c48:	mov	x29, sp
  400c4c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400c50:	add	x0, x0, #0x0
  400c54:	str	x0, [sp, #24]
  400c58:	ldr	x0, [sp, #24]
  400c5c:	str	x0, [sp, #24]
  400c60:	ldr	x1, [sp, #24]
  400c64:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400c68:	add	x0, x0, #0x0
  400c6c:	cmp	x1, x0
  400c70:	b.eq	400cac <deregister_tm_clones+0x68>  // b.none
  400c74:	adrp	x0, 401000 <add_symlink+0xec>
  400c78:	add	x0, x0, #0x988
  400c7c:	ldr	x0, [x0]
  400c80:	str	x0, [sp, #16]
  400c84:	ldr	x0, [sp, #16]
  400c88:	str	x0, [sp, #16]
  400c8c:	ldr	x0, [sp, #16]
  400c90:	cmp	x0, #0x0
  400c94:	b.eq	400cb0 <deregister_tm_clones+0x6c>  // b.none
  400c98:	ldr	x1, [sp, #16]
  400c9c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400ca0:	add	x0, x0, #0x0
  400ca4:	blr	x1
  400ca8:	b	400cb0 <deregister_tm_clones+0x6c>
  400cac:	nop
  400cb0:	ldp	x29, x30, [sp], #32
  400cb4:	ret

0000000000400cb8 <register_tm_clones>:
  400cb8:	stp	x29, x30, [sp, #-48]!
  400cbc:	mov	x29, sp
  400cc0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400cc4:	add	x0, x0, #0x0
  400cc8:	str	x0, [sp, #40]
  400ccc:	ldr	x0, [sp, #40]
  400cd0:	str	x0, [sp, #40]
  400cd4:	ldr	x1, [sp, #40]
  400cd8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400cdc:	add	x0, x0, #0x0
  400ce0:	sub	x0, x1, x0
  400ce4:	asr	x0, x0, #3
  400ce8:	lsr	x1, x0, #63
  400cec:	add	x0, x1, x0
  400cf0:	asr	x0, x0, #1
  400cf4:	str	x0, [sp, #32]
  400cf8:	ldr	x0, [sp, #32]
  400cfc:	cmp	x0, #0x0
  400d00:	b.eq	400d40 <register_tm_clones+0x88>  // b.none
  400d04:	adrp	x0, 401000 <add_symlink+0xec>
  400d08:	add	x0, x0, #0x990
  400d0c:	ldr	x0, [x0]
  400d10:	str	x0, [sp, #24]
  400d14:	ldr	x0, [sp, #24]
  400d18:	str	x0, [sp, #24]
  400d1c:	ldr	x0, [sp, #24]
  400d20:	cmp	x0, #0x0
  400d24:	b.eq	400d44 <register_tm_clones+0x8c>  // b.none
  400d28:	ldr	x2, [sp, #24]
  400d2c:	ldr	x1, [sp, #32]
  400d30:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d34:	add	x0, x0, #0x0
  400d38:	blr	x2
  400d3c:	b	400d44 <register_tm_clones+0x8c>
  400d40:	nop
  400d44:	ldp	x29, x30, [sp], #48
  400d48:	ret

0000000000400d4c <__do_global_dtors_aux>:
  400d4c:	stp	x29, x30, [sp, #-16]!
  400d50:	mov	x29, sp
  400d54:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d58:	add	x0, x0, #0xc
  400d5c:	ldrb	w0, [x0]
  400d60:	and	x0, x0, #0xff
  400d64:	cmp	x0, #0x0
  400d68:	b.ne	400d84 <__do_global_dtors_aux+0x38>  // b.any
  400d6c:	bl	400c44 <deregister_tm_clones>
  400d70:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400d74:	add	x0, x0, #0xc
  400d78:	mov	w1, #0x1                   	// #1
  400d7c:	strb	w1, [x0]
  400d80:	b	400d88 <__do_global_dtors_aux+0x3c>
  400d84:	nop
  400d88:	ldp	x29, x30, [sp], #16
  400d8c:	ret

0000000000400d90 <frame_dummy>:
  400d90:	stp	x29, x30, [sp, #-16]!
  400d94:	mov	x29, sp
  400d98:	bl	400cb8 <register_tm_clones>
  400d9c:	nop
  400da0:	ldp	x29, x30, [sp], #16
  400da4:	ret

0000000000400da8 <ALIGN_TO>:
  400da8:	sub	sp, sp, #0x10
  400dac:	str	x0, [sp, #8]
  400db0:	str	x1, [sp]
  400db4:	ldr	x1, [sp, #8]
  400db8:	ldr	x0, [sp]
  400dbc:	add	x0, x1, x0
  400dc0:	sub	x1, x0, #0x1
  400dc4:	ldr	x0, [sp]
  400dc8:	neg	x0, x0
  400dcc:	and	x0, x1, x0
  400dd0:	add	sp, sp, #0x10
  400dd4:	ret

0000000000400dd8 <size_multiply_overflow>:
  400dd8:	sub	sp, sp, #0x10
  400ddc:	str	x0, [sp, #8]
  400de0:	str	x1, [sp]
  400de4:	ldr	x0, [sp]
  400de8:	cmp	x0, #0x0
  400dec:	cset	w0, ne  // ne = any
  400df0:	and	w0, w0, #0xff
  400df4:	and	x0, x0, #0xff
  400df8:	cmp	x0, #0x0
  400dfc:	b.eq	400e40 <size_multiply_overflow+0x68>  // b.none
  400e00:	mov	x2, #0x0                   	// #0
  400e04:	ldr	x1, [sp, #8]
  400e08:	ldr	x0, [sp]
  400e0c:	umulh	x0, x1, x0
  400e10:	cmp	x0, #0x0
  400e14:	b.eq	400e1c <size_multiply_overflow+0x44>  // b.none
  400e18:	mov	x2, #0x1                   	// #1
  400e1c:	mov	x0, x2
  400e20:	cmp	x0, #0x0
  400e24:	cset	w0, ne  // ne = any
  400e28:	and	w0, w0, #0xff
  400e2c:	and	x0, x0, #0xff
  400e30:	cmp	x0, #0x0
  400e34:	b.eq	400e40 <size_multiply_overflow+0x68>  // b.none
  400e38:	mov	w0, #0x1                   	// #1
  400e3c:	b	400e44 <size_multiply_overflow+0x6c>
  400e40:	mov	w0, #0x0                   	// #0
  400e44:	and	w0, w0, #0x1
  400e48:	and	w0, w0, #0xff
  400e4c:	add	sp, sp, #0x10
  400e50:	ret

0000000000400e54 <save_argc_argv>:
  400e54:	sub	sp, sp, #0x10
  400e58:	str	w0, [sp, #12]
  400e5c:	str	x1, [sp]
  400e60:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400e64:	add	x0, x0, #0x8
  400e68:	ldr	w1, [sp, #12]
  400e6c:	str	w1, [x0]
  400e70:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400e74:	add	x0, x0, #0x0
  400e78:	ldr	x1, [sp]
  400e7c:	str	x1, [x0]
  400e80:	nop
  400e84:	add	sp, sp, #0x10
  400e88:	ret

0000000000400e8c <static_destruct>:
  400e8c:	stp	x29, x30, [sp, #-32]!
  400e90:	mov	x29, sp
  400e94:	adrp	x0, 401000 <add_symlink+0xec>
  400e98:	add	x0, x0, #0xbb0
  400e9c:	ldr	x0, [x0]
  400ea0:	cmp	x0, #0x0
  400ea4:	b.eq	400f08 <static_destruct+0x7c>  // b.none
  400ea8:	adrp	x0, 401000 <add_symlink+0xec>
  400eac:	add	x0, x0, #0xbb0
  400eb0:	ldr	x0, [x0]
  400eb4:	mov	x1, #0x8                   	// #8
  400eb8:	bl	400da8 <ALIGN_TO>
  400ebc:	str	x0, [sp, #24]
  400ec0:	b	400eec <static_destruct+0x60>
  400ec4:	ldr	x0, [sp, #24]
  400ec8:	ldr	x1, [x0, #8]
  400ecc:	ldr	x0, [sp, #24]
  400ed0:	ldr	x0, [x0]
  400ed4:	blr	x1
  400ed8:	ldr	x0, [sp, #24]
  400edc:	add	x0, x0, #0x10
  400ee0:	mov	x1, #0x8                   	// #8
  400ee4:	bl	400da8 <ALIGN_TO>
  400ee8:	str	x0, [sp, #24]
  400eec:	ldr	x1, [sp, #24]
  400ef0:	adrp	x0, 401000 <add_symlink+0xec>
  400ef4:	add	x0, x0, #0xbb8
  400ef8:	ldr	x0, [x0]
  400efc:	cmp	x1, x0
  400f00:	b.cc	400ec4 <static_destruct+0x38>  // b.lo, b.ul, b.last
  400f04:	b	400f0c <static_destruct+0x80>
  400f08:	nop
  400f0c:	ldp	x29, x30, [sp], #32
  400f10:	ret

0000000000400f14 <add_symlink>:
  400f14:	stp	x29, x30, [sp, #-192]!
  400f18:	mov	x29, sp
  400f1c:	str	x0, [x29, #24]
  400f20:	str	x1, [x29, #16]
  400f24:	adrp	x0, 412000 <__FRAME_END__+0x10188>
  400f28:	add	x0, x0, #0xd10
  400f2c:	ldr	x1, [x0]
  400f30:	str	x1, [x29, #184]
  400f34:	mov	x1, #0x0                   	// #0
  400f38:	ldr	x0, [x29, #24]
  400f3c:	cmp	x0, #0x0
  400f40:	cset	w0, eq  // eq = none
  400f44:	and	w0, w0, #0xff
  400f48:	and	x0, x0, #0xff
  400f4c:	cmp	x0, #0x0
  400f50:	b.eq	400f7c <add_symlink+0x68>  // b.none
  400f54:	adrp	x0, 401000 <add_symlink+0xec>
  400f58:	add	x1, x0, #0x99b
  400f5c:	adrp	x0, 401000 <add_symlink+0xec>
  400f60:	add	x4, x0, #0xbc0
  400f64:	mov	w3, #0x18                  	// #24
  400f68:	mov	x2, x1
  400f6c:	adrp	x0, 401000 <add_symlink+0xec>
  400f70:	add	x1, x0, #0x9c8
  400f74:	mov	w0, #0x0                   	// #0
  400f78:	bl	400b20 <log_assert_failed_realm@plt>
  400f7c:	ldr	x0, [x29, #16]
  400f80:	cmp	x0, #0x0
  400f84:	cset	w0, eq  // eq = none
  400f88:	and	w0, w0, #0xff
  400f8c:	and	x0, x0, #0xff
  400f90:	cmp	x0, #0x0
  400f94:	b.eq	400fc0 <add_symlink+0xac>  // b.none
  400f98:	adrp	x0, 401000 <add_symlink+0xec>
  400f9c:	add	x1, x0, #0x99b
  400fa0:	adrp	x0, 401000 <add_symlink+0xec>
  400fa4:	add	x4, x0, #0xbc0
  400fa8:	mov	w3, #0x19                  	// #25
  400fac:	mov	x2, x1
  400fb0:	adrp	x0, 401000 <add_symlink+0xec>
  400fb4:	add	x1, x0, #0x9d0
  400fb8:	mov	w0, #0x0                   	// #0
  400fbc:	bl	400b20 <log_assert_failed_realm@plt>
  400fc0:	adrp	x0, 401000 <add_symlink+0xec>
  400fc4:	add	x0, x0, #0x9d8
  400fc8:	str	x0, [x29, #144]
  400fcc:	ldr	x0, [x29, #24]
  400fd0:	str	x0, [x29, #152]
  400fd4:	str	xzr, [x29, #56]
  400fd8:	str	xzr, [x29, #64]
  400fdc:	b	401010 <add_symlink+0xfc>
  400fe0:	ldr	x0, [x29, #64]
  400fe4:	lsl	x0, x0, #3
  400fe8:	add	x1, x29, #0x90
  400fec:	ldr	x0, [x1, x0]
  400ff0:	bl	400bc0 <strlen@plt>
  400ff4:	mov	x1, x0
  400ff8:	ldr	x0, [x29, #56]
  400ffc:	add	x0, x0, x1
  401000:	str	x0, [x29, #56]
  401004:	ldr	x0, [x29, #64]
  401008:	add	x0, x0, #0x1
  40100c:	str	x0, [x29, #64]
  401010:	ldr	x0, [x29, #64]
  401014:	cmp	x0, #0x1
  401018:	b.hi	401034 <add_symlink+0x120>  // b.pmore
  40101c:	ldr	x0, [x29, #64]
  401020:	lsl	x0, x0, #3
  401024:	add	x1, x29, #0x90
  401028:	ldr	x0, [x1, x0]
  40102c:	cmp	x0, #0x0
  401030:	b.ne	400fe0 <add_symlink+0xcc>  // b.any
  401034:	ldr	x0, [x29, #56]
  401038:	add	x0, x0, #0x1
  40103c:	str	x0, [x29, #96]
  401040:	ldr	x1, [x29, #96]
  401044:	mov	x0, #0x1                   	// #1
  401048:	bl	400dd8 <size_multiply_overflow>
  40104c:	and	w0, w0, #0xff
  401050:	and	x0, x0, #0xff
  401054:	cmp	x0, #0x0
  401058:	b.eq	401084 <add_symlink+0x170>  // b.none
  40105c:	adrp	x0, 401000 <add_symlink+0xec>
  401060:	add	x1, x0, #0x99b
  401064:	adrp	x0, 401000 <add_symlink+0xec>
  401068:	add	x4, x0, #0xbc0
  40106c:	mov	w3, #0x1b                  	// #27
  401070:	mov	x2, x1
  401074:	adrp	x0, 401000 <add_symlink+0xec>
  401078:	add	x1, x0, #0x9f0
  40107c:	mov	w0, #0x0                   	// #0
  401080:	bl	400b20 <log_assert_failed_realm@plt>
  401084:	ldr	x0, [x29, #96]
  401088:	cmp	x0, #0x400, lsl #12
  40108c:	cset	w0, hi  // hi = pmore
  401090:	and	w0, w0, #0xff
  401094:	and	x0, x0, #0xff
  401098:	cmp	x0, #0x0
  40109c:	b.eq	4010c8 <add_symlink+0x1b4>  // b.none
  4010a0:	adrp	x0, 401000 <add_symlink+0xec>
  4010a4:	add	x1, x0, #0x99b
  4010a8:	adrp	x0, 401000 <add_symlink+0xec>
  4010ac:	add	x4, x0, #0xbc0
  4010b0:	mov	w3, #0x1b                  	// #27
  4010b4:	mov	x2, x1
  4010b8:	adrp	x0, 401000 <add_symlink+0xec>
  4010bc:	add	x1, x0, #0xa20
  4010c0:	mov	w0, #0x0                   	// #0
  4010c4:	bl	400b20 <log_assert_failed_realm@plt>
  4010c8:	ldr	x0, [x29, #96]
  4010cc:	add	x0, x0, #0xf
  4010d0:	lsr	x0, x0, #4
  4010d4:	lsl	x0, x0, #4
  4010d8:	sub	sp, sp, x0
  4010dc:	mov	x0, sp
  4010e0:	add	x0, x0, #0xf
  4010e4:	lsr	x0, x0, #4
  4010e8:	lsl	x0, x0, #4
  4010ec:	str	x0, [x29, #104]
  4010f0:	ldr	x0, [x29, #104]
  4010f4:	str	x0, [x29, #48]
  4010f8:	str	xzr, [x29, #64]
  4010fc:	b	40112c <add_symlink+0x218>
  401100:	ldr	x0, [x29, #64]
  401104:	lsl	x0, x0, #3
  401108:	add	x1, x29, #0x90
  40110c:	ldr	x0, [x1, x0]
  401110:	mov	x1, x0
  401114:	ldr	x0, [x29, #48]
  401118:	bl	400ad0 <stpcpy@plt>
  40111c:	str	x0, [x29, #48]
  401120:	ldr	x0, [x29, #64]
  401124:	add	x0, x0, #0x1
  401128:	str	x0, [x29, #64]
  40112c:	ldr	x0, [x29, #64]
  401130:	cmp	x0, #0x1
  401134:	b.hi	401150 <add_symlink+0x23c>  // b.pmore
  401138:	ldr	x0, [x29, #64]
  40113c:	lsl	x0, x0, #3
  401140:	add	x1, x29, #0x90
  401144:	ldr	x0, [x1, x0]
  401148:	cmp	x0, #0x0
  40114c:	b.ne	401100 <add_symlink+0x1ec>  // b.any
  401150:	ldr	x0, [x29, #48]
  401154:	strb	wzr, [x0]
  401158:	ldr	x0, [x29, #104]
  40115c:	str	x0, [x29, #112]
  401160:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401164:	add	x0, x0, #0x10
  401168:	ldr	x0, [x0]
  40116c:	str	x0, [x29, #144]
  401170:	adrp	x0, 401000 <add_symlink+0xec>
  401174:	add	x0, x0, #0xa40
  401178:	str	x0, [x29, #152]
  40117c:	ldr	x0, [x29, #16]
  401180:	str	x0, [x29, #160]
  401184:	adrp	x0, 401000 <add_symlink+0xec>
  401188:	add	x0, x0, #0xa48
  40118c:	str	x0, [x29, #168]
  401190:	ldr	x0, [x29, #24]
  401194:	str	x0, [x29, #176]
  401198:	str	xzr, [x29, #80]
  40119c:	str	xzr, [x29, #88]
  4011a0:	b	4011d4 <add_symlink+0x2c0>
  4011a4:	ldr	x0, [x29, #88]
  4011a8:	lsl	x0, x0, #3
  4011ac:	add	x1, x29, #0x90
  4011b0:	ldr	x0, [x1, x0]
  4011b4:	bl	400bc0 <strlen@plt>
  4011b8:	mov	x1, x0
  4011bc:	ldr	x0, [x29, #80]
  4011c0:	add	x0, x0, x1
  4011c4:	str	x0, [x29, #80]
  4011c8:	ldr	x0, [x29, #88]
  4011cc:	add	x0, x0, #0x1
  4011d0:	str	x0, [x29, #88]
  4011d4:	ldr	x0, [x29, #88]
  4011d8:	cmp	x0, #0x4
  4011dc:	b.hi	4011f8 <add_symlink+0x2e4>  // b.pmore
  4011e0:	ldr	x0, [x29, #88]
  4011e4:	lsl	x0, x0, #3
  4011e8:	add	x1, x29, #0x90
  4011ec:	ldr	x0, [x1, x0]
  4011f0:	cmp	x0, #0x0
  4011f4:	b.ne	4011a4 <add_symlink+0x290>  // b.any
  4011f8:	ldr	x0, [x29, #80]
  4011fc:	add	x0, x0, #0x1
  401200:	str	x0, [x29, #120]
  401204:	ldr	x1, [x29, #120]
  401208:	mov	x0, #0x1                   	// #1
  40120c:	bl	400dd8 <size_multiply_overflow>
  401210:	and	w0, w0, #0xff
  401214:	and	x0, x0, #0xff
  401218:	cmp	x0, #0x0
  40121c:	b.eq	401248 <add_symlink+0x334>  // b.none
  401220:	adrp	x0, 401000 <add_symlink+0xec>
  401224:	add	x1, x0, #0x99b
  401228:	adrp	x0, 401000 <add_symlink+0xec>
  40122c:	add	x4, x0, #0xbc0
  401230:	mov	w3, #0x1c                  	// #28
  401234:	mov	x2, x1
  401238:	adrp	x0, 401000 <add_symlink+0xec>
  40123c:	add	x1, x0, #0x9f0
  401240:	mov	w0, #0x0                   	// #0
  401244:	bl	400b20 <log_assert_failed_realm@plt>
  401248:	ldr	x0, [x29, #120]
  40124c:	cmp	x0, #0x400, lsl #12
  401250:	cset	w0, hi  // hi = pmore
  401254:	and	w0, w0, #0xff
  401258:	and	x0, x0, #0xff
  40125c:	cmp	x0, #0x0
  401260:	b.eq	40128c <add_symlink+0x378>  // b.none
  401264:	adrp	x0, 401000 <add_symlink+0xec>
  401268:	add	x1, x0, #0x99b
  40126c:	adrp	x0, 401000 <add_symlink+0xec>
  401270:	add	x4, x0, #0xbc0
  401274:	mov	w3, #0x1c                  	// #28
  401278:	mov	x2, x1
  40127c:	adrp	x0, 401000 <add_symlink+0xec>
  401280:	add	x1, x0, #0xa20
  401284:	mov	w0, #0x0                   	// #0
  401288:	bl	400b20 <log_assert_failed_realm@plt>
  40128c:	ldr	x0, [x29, #120]
  401290:	add	x0, x0, #0xf
  401294:	lsr	x0, x0, #4
  401298:	lsl	x0, x0, #4
  40129c:	sub	sp, sp, x0
  4012a0:	mov	x0, sp
  4012a4:	add	x0, x0, #0xf
  4012a8:	lsr	x0, x0, #4
  4012ac:	lsl	x0, x0, #4
  4012b0:	str	x0, [x29, #128]
  4012b4:	ldr	x0, [x29, #128]
  4012b8:	str	x0, [x29, #72]
  4012bc:	str	xzr, [x29, #88]
  4012c0:	b	4012f0 <add_symlink+0x3dc>
  4012c4:	ldr	x0, [x29, #88]
  4012c8:	lsl	x0, x0, #3
  4012cc:	add	x1, x29, #0x90
  4012d0:	ldr	x0, [x1, x0]
  4012d4:	mov	x1, x0
  4012d8:	ldr	x0, [x29, #72]
  4012dc:	bl	400ad0 <stpcpy@plt>
  4012e0:	str	x0, [x29, #72]
  4012e4:	ldr	x0, [x29, #88]
  4012e8:	add	x0, x0, #0x1
  4012ec:	str	x0, [x29, #88]
  4012f0:	ldr	x0, [x29, #88]
  4012f4:	cmp	x0, #0x4
  4012f8:	b.hi	401314 <add_symlink+0x400>  // b.pmore
  4012fc:	ldr	x0, [x29, #88]
  401300:	lsl	x0, x0, #3
  401304:	add	x1, x29, #0x90
  401308:	ldr	x0, [x1, x0]
  40130c:	cmp	x0, #0x0
  401310:	b.ne	4012c4 <add_symlink+0x3b0>  // b.any
  401314:	ldr	x0, [x29, #72]
  401318:	strb	wzr, [x0]
  40131c:	ldr	x0, [x29, #128]
  401320:	str	x0, [x29, #136]
  401324:	mov	w1, #0x1ed                 	// #493
  401328:	ldr	x0, [x29, #136]
  40132c:	bl	400ac0 <mkdir_parents_label@plt>
  401330:	ldr	x1, [x29, #136]
  401334:	ldr	x0, [x29, #112]
  401338:	bl	400b10 <symlink@plt>
  40133c:	cmp	w0, #0x0
  401340:	b.ge	4013ec <add_symlink+0x4d8>  // b.tcont
  401344:	bl	400b60 <__errno_location@plt>
  401348:	ldr	w0, [x0]
  40134c:	cmp	w0, #0x11
  401350:	b.ne	40135c <add_symlink+0x448>  // b.any
  401354:	mov	w0, #0x0                   	// #0
  401358:	b	4013f0 <add_symlink+0x4dc>
  40135c:	mov	w0, #0x3                   	// #3
  401360:	str	w0, [x29, #36]
  401364:	bl	400b60 <__errno_location@plt>
  401368:	ldr	w0, [x0]
  40136c:	str	w0, [x29, #40]
  401370:	str	wzr, [x29, #44]
  401374:	ldr	w0, [x29, #44]
  401378:	bl	400bd0 <log_get_max_level_realm@plt>
  40137c:	mov	w1, w0
  401380:	ldr	w0, [x29, #36]
  401384:	and	w0, w0, #0x7
  401388:	cmp	w1, w0
  40138c:	b.lt	4013d4 <add_symlink+0x4c0>  // b.tstop
  401390:	ldr	w0, [x29, #44]
  401394:	lsl	w1, w0, #10
  401398:	ldr	w0, [x29, #36]
  40139c:	orr	w7, w1, w0
  4013a0:	adrp	x0, 401000 <add_symlink+0xec>
  4013a4:	add	x1, x0, #0x99b
  4013a8:	ldr	x6, [x29, #136]
  4013ac:	adrp	x0, 401000 <add_symlink+0xec>
  4013b0:	add	x5, x0, #0xa50
  4013b4:	adrp	x0, 401000 <add_symlink+0xec>
  4013b8:	add	x4, x0, #0xbd0
  4013bc:	mov	w3, #0x24                  	// #36
  4013c0:	mov	x2, x1
  4013c4:	ldr	w1, [x29, #40]
  4013c8:	mov	w0, w7
  4013cc:	bl	400ba0 <log_internal_realm@plt>
  4013d0:	b	4013f0 <add_symlink+0x4dc>
  4013d4:	ldr	w0, [x29, #40]
  4013d8:	cmp	w0, #0x0
  4013dc:	cneg	w0, w0, lt  // lt = tstop
  4013e0:	and	w0, w0, #0xff
  4013e4:	neg	w0, w0
  4013e8:	b	4013f0 <add_symlink+0x4dc>
  4013ec:	mov	w0, #0x1                   	// #1
  4013f0:	mov	w1, w0
  4013f4:	adrp	x0, 412000 <__FRAME_END__+0x10188>
  4013f8:	add	x0, x0, #0xd10
  4013fc:	ldr	x2, [x29, #184]
  401400:	ldr	x0, [x0]
  401404:	eor	x0, x2, x0
  401408:	cmp	x0, #0x0
  40140c:	b.eq	401414 <add_symlink+0x500>  // b.none
  401410:	bl	400b70 <__stack_chk_fail@plt>
  401414:	mov	w0, w1
  401418:	mov	sp, x29
  40141c:	ldp	x29, x30, [sp], #192
  401420:	ret

0000000000401424 <check_executable>:
  401424:	stp	x29, x30, [sp, #-80]!
  401428:	mov	x29, sp
  40142c:	str	x0, [sp, #24]
  401430:	ldr	x0, [sp, #24]
  401434:	cmp	x0, #0x0
  401438:	cset	w0, eq  // eq = none
  40143c:	and	w0, w0, #0xff
  401440:	and	x0, x0, #0xff
  401444:	cmp	x0, #0x0
  401448:	b.eq	401474 <check_executable+0x50>  // b.none
  40144c:	adrp	x0, 401000 <add_symlink+0xec>
  401450:	add	x1, x0, #0x99b
  401454:	adrp	x0, 401000 <add_symlink+0xec>
  401458:	add	x4, x0, #0xbe0
  40145c:	mov	w3, #0x2b                  	// #43
  401460:	mov	x2, x1
  401464:	adrp	x0, 401000 <add_symlink+0xec>
  401468:	add	x1, x0, #0xa70
  40146c:	mov	w0, #0x0                   	// #0
  401470:	bl	400b20 <log_assert_failed_realm@plt>
  401474:	mov	w1, #0x1                   	// #1
  401478:	ldr	x0, [sp, #24]
  40147c:	bl	400b30 <access@plt>
  401480:	cmp	w0, #0x0
  401484:	b.ge	401658 <check_executable+0x234>  // b.tcont
  401488:	bl	400b60 <__errno_location@plt>
  40148c:	ldr	w0, [x0]
  401490:	cmp	w0, #0x2
  401494:	b.ne	401528 <check_executable+0x104>  // b.any
  401498:	mov	w0, #0x7                   	// #7
  40149c:	str	w0, [sp, #68]
  4014a0:	bl	400b60 <__errno_location@plt>
  4014a4:	ldr	w0, [x0]
  4014a8:	str	w0, [sp, #72]
  4014ac:	str	wzr, [sp, #76]
  4014b0:	ldr	w0, [sp, #76]
  4014b4:	bl	400bd0 <log_get_max_level_realm@plt>
  4014b8:	mov	w1, w0
  4014bc:	ldr	w0, [sp, #68]
  4014c0:	and	w0, w0, #0x7
  4014c4:	cmp	w1, w0
  4014c8:	b.lt	401510 <check_executable+0xec>  // b.tstop
  4014cc:	ldr	w0, [sp, #76]
  4014d0:	lsl	w1, w0, #10
  4014d4:	ldr	w0, [sp, #68]
  4014d8:	orr	w7, w1, w0
  4014dc:	adrp	x0, 401000 <add_symlink+0xec>
  4014e0:	add	x1, x0, #0x99b
  4014e4:	ldr	x6, [sp, #24]
  4014e8:	adrp	x0, 401000 <add_symlink+0xec>
  4014ec:	add	x5, x0, #0xa78
  4014f0:	adrp	x0, 401000 <add_symlink+0xec>
  4014f4:	add	x4, x0, #0xbf8
  4014f8:	mov	w3, #0x2f                  	// #47
  4014fc:	mov	x2, x1
  401500:	ldr	w1, [sp, #72]
  401504:	mov	w0, w7
  401508:	bl	400ba0 <log_internal_realm@plt>
  40150c:	b	40165c <check_executable+0x238>
  401510:	ldr	w0, [sp, #72]
  401514:	cmp	w0, #0x0
  401518:	cneg	w0, w0, lt  // lt = tstop
  40151c:	and	w0, w0, #0xff
  401520:	neg	w0, w0
  401524:	b	40165c <check_executable+0x238>
  401528:	bl	400b60 <__errno_location@plt>
  40152c:	ldr	w0, [x0]
  401530:	cmp	w0, #0xd
  401534:	b.ne	4015c8 <check_executable+0x1a4>  // b.any
  401538:	mov	w0, #0x6                   	// #6
  40153c:	str	w0, [sp, #56]
  401540:	bl	400b60 <__errno_location@plt>
  401544:	ldr	w0, [x0]
  401548:	str	w0, [sp, #60]
  40154c:	str	wzr, [sp, #64]
  401550:	ldr	w0, [sp, #64]
  401554:	bl	400bd0 <log_get_max_level_realm@plt>
  401558:	mov	w1, w0
  40155c:	ldr	w0, [sp, #56]
  401560:	and	w0, w0, #0x7
  401564:	cmp	w1, w0
  401568:	b.lt	4015b0 <check_executable+0x18c>  // b.tstop
  40156c:	ldr	w0, [sp, #64]
  401570:	lsl	w1, w0, #10
  401574:	ldr	w0, [sp, #56]
  401578:	orr	w7, w1, w0
  40157c:	adrp	x0, 401000 <add_symlink+0xec>
  401580:	add	x1, x0, #0x99b
  401584:	ldr	x6, [sp, #24]
  401588:	adrp	x0, 401000 <add_symlink+0xec>
  40158c:	add	x5, x0, #0xa98
  401590:	adrp	x0, 401000 <add_symlink+0xec>
  401594:	add	x4, x0, #0xbf8
  401598:	mov	w3, #0x31                  	// #49
  40159c:	mov	x2, x1
  4015a0:	ldr	w1, [sp, #60]
  4015a4:	mov	w0, w7
  4015a8:	bl	400ba0 <log_internal_realm@plt>
  4015ac:	b	40165c <check_executable+0x238>
  4015b0:	ldr	w0, [sp, #60]
  4015b4:	cmp	w0, #0x0
  4015b8:	cneg	w0, w0, lt  // lt = tstop
  4015bc:	and	w0, w0, #0xff
  4015c0:	neg	w0, w0
  4015c4:	b	40165c <check_executable+0x238>
  4015c8:	mov	w0, #0x4                   	// #4
  4015cc:	str	w0, [sp, #44]
  4015d0:	bl	400b60 <__errno_location@plt>
  4015d4:	ldr	w0, [x0]
  4015d8:	str	w0, [sp, #48]
  4015dc:	str	wzr, [sp, #52]
  4015e0:	ldr	w0, [sp, #52]
  4015e4:	bl	400bd0 <log_get_max_level_realm@plt>
  4015e8:	mov	w1, w0
  4015ec:	ldr	w0, [sp, #44]
  4015f0:	and	w0, w0, #0x7
  4015f4:	cmp	w1, w0
  4015f8:	b.lt	401640 <check_executable+0x21c>  // b.tstop
  4015fc:	ldr	w0, [sp, #52]
  401600:	lsl	w1, w0, #10
  401604:	ldr	w0, [sp, #44]
  401608:	orr	w7, w1, w0
  40160c:	adrp	x0, 401000 <add_symlink+0xec>
  401610:	add	x1, x0, #0x99b
  401614:	ldr	x6, [sp, #24]
  401618:	adrp	x0, 401000 <add_symlink+0xec>
  40161c:	add	x5, x0, #0xac0
  401620:	adrp	x0, 401000 <add_symlink+0xec>
  401624:	add	x4, x0, #0xbf8
  401628:	mov	w3, #0x33                  	// #51
  40162c:	mov	x2, x1
  401630:	ldr	w1, [sp, #48]
  401634:	mov	w0, w7
  401638:	bl	400ba0 <log_internal_realm@plt>
  40163c:	b	40165c <check_executable+0x238>
  401640:	ldr	w0, [sp, #48]
  401644:	cmp	w0, #0x0
  401648:	cneg	w0, w0, lt  // lt = tstop
  40164c:	and	w0, w0, #0xff
  401650:	neg	w0, w0
  401654:	b	40165c <check_executable+0x238>
  401658:	mov	w0, #0x0                   	// #0
  40165c:	ldp	x29, x30, [sp], #80
  401660:	ret

0000000000401664 <run>:
  401664:	stp	x29, x30, [sp, #-80]!
  401668:	mov	x29, sp
  40166c:	str	x0, [sp, #40]
  401670:	str	x1, [sp, #32]
  401674:	str	x2, [sp, #24]
  401678:	str	wzr, [sp, #60]
  40167c:	str	wzr, [sp, #64]
  401680:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401684:	add	x0, x0, #0x10
  401688:	ldr	x1, [sp, #40]
  40168c:	str	x1, [x0]
  401690:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401694:	add	x0, x0, #0x10
  401698:	ldr	x0, [x0]
  40169c:	cmp	x0, #0x0
  4016a0:	cset	w0, eq  // eq = none
  4016a4:	and	w0, w0, #0xff
  4016a8:	and	x0, x0, #0xff
  4016ac:	cmp	x0, #0x0
  4016b0:	b.eq	4016dc <run+0x78>  // b.none
  4016b4:	adrp	x0, 401000 <add_symlink+0xec>
  4016b8:	add	x1, x0, #0x99b
  4016bc:	adrp	x0, 401000 <add_symlink+0xec>
  4016c0:	add	x4, x0, #0xc10
  4016c4:	mov	w3, #0x3c                  	// #60
  4016c8:	mov	x2, x1
  4016cc:	adrp	x0, 401000 <add_symlink+0xec>
  4016d0:	add	x1, x0, #0xb00
  4016d4:	mov	w0, #0x0                   	// #0
  4016d8:	bl	400b20 <log_assert_failed_realm@plt>
  4016dc:	adrp	x0, 401000 <add_symlink+0xec>
  4016e0:	add	x0, x0, #0xb10
  4016e4:	bl	401424 <check_executable>
  4016e8:	cmp	w0, #0x0
  4016ec:	b.lt	40177c <run+0x118>  // b.tstop
  4016f0:	mov	w0, #0x7                   	// #7
  4016f4:	str	w0, [sp, #68]
  4016f8:	str	wzr, [sp, #72]
  4016fc:	str	wzr, [sp, #76]
  401700:	ldr	w0, [sp, #76]
  401704:	bl	400bd0 <log_get_max_level_realm@plt>
  401708:	mov	w1, w0
  40170c:	ldr	w0, [sp, #68]
  401710:	and	w0, w0, #0x7
  401714:	cmp	w1, w0
  401718:	b.lt	40175c <run+0xf8>  // b.tstop
  40171c:	ldr	w0, [sp, #76]
  401720:	lsl	w1, w0, #10
  401724:	ldr	w0, [sp, #68]
  401728:	orr	w6, w1, w0
  40172c:	adrp	x0, 401000 <add_symlink+0xec>
  401730:	add	x1, x0, #0x99b
  401734:	adrp	x0, 401000 <add_symlink+0xec>
  401738:	add	x5, x0, #0xb20
  40173c:	adrp	x0, 401000 <add_symlink+0xec>
  401740:	add	x4, x0, #0xc18
  401744:	mov	w3, #0x3f                  	// #63
  401748:	mov	x2, x1
  40174c:	ldr	w1, [sp, #72]
  401750:	mov	w0, w6
  401754:	bl	400ba0 <log_internal_realm@plt>
  401758:	b	401764 <run+0x100>
  40175c:	ldr	w0, [sp, #72]
  401760:	cmp	w0, #0x0
  401764:	adrp	x0, 401000 <add_symlink+0xec>
  401768:	add	x1, x0, #0xb48
  40176c:	adrp	x0, 401000 <add_symlink+0xec>
  401770:	add	x0, x0, #0xb60
  401774:	bl	400f14 <add_symlink>
  401778:	str	w0, [sp, #60]
  40177c:	ldr	w0, [sp, #60]
  401780:	cmp	w0, #0x0
  401784:	b.ge	401790 <run+0x12c>  // b.tcont
  401788:	ldr	w0, [sp, #60]
  40178c:	b	401794 <run+0x130>
  401790:	ldr	w0, [sp, #64]
  401794:	ldp	x29, x30, [sp], #80
  401798:	ret

000000000040179c <main>:
  40179c:	stp	x29, x30, [sp, #-48]!
  4017a0:	mov	x29, sp
  4017a4:	str	w0, [sp, #28]
  4017a8:	str	x1, [sp, #16]
  4017ac:	ldr	x1, [sp, #16]
  4017b0:	ldr	w0, [sp, #28]
  4017b4:	bl	400e54 <save_argc_argv>
  4017b8:	bl	400b50 <log_setup_generator@plt>
  4017bc:	ldr	w0, [sp, #28]
  4017c0:	cmp	w0, #0x1
  4017c4:	b.le	401860 <main+0xc4>
  4017c8:	ldr	w0, [sp, #28]
  4017cc:	cmp	w0, #0x4
  4017d0:	b.eq	401860 <main+0xc4>  // b.none
  4017d4:	mov	w0, #0x3                   	// #3
  4017d8:	str	w0, [sp, #32]
  4017dc:	mov	w0, #0x16                  	// #22
  4017e0:	movk	w0, #0x4000, lsl #16
  4017e4:	str	w0, [sp, #36]
  4017e8:	str	wzr, [sp, #40]
  4017ec:	ldr	w0, [sp, #40]
  4017f0:	bl	400bd0 <log_get_max_level_realm@plt>
  4017f4:	mov	w1, w0
  4017f8:	ldr	w0, [sp, #32]
  4017fc:	and	w0, w0, #0x7
  401800:	cmp	w1, w0
  401804:	b.lt	401848 <main+0xac>  // b.tstop
  401808:	ldr	w0, [sp, #40]
  40180c:	lsl	w1, w0, #10
  401810:	ldr	w0, [sp, #32]
  401814:	orr	w6, w1, w0
  401818:	adrp	x0, 401000 <add_symlink+0xec>
  40181c:	add	x1, x0, #0x99b
  401820:	adrp	x0, 401000 <add_symlink+0xec>
  401824:	add	x5, x0, #0xb78
  401828:	adrp	x0, 401000 <add_symlink+0xec>
  40182c:	add	x4, x0, #0xc20
  401830:	mov	w3, #0x47                  	// #71
  401834:	mov	x2, x1
  401838:	ldr	w1, [sp, #36]
  40183c:	mov	w0, w6
  401840:	bl	400ba0 <log_internal_realm@plt>
  401844:	b	4018e4 <main+0x148>
  401848:	ldr	w0, [sp, #36]
  40184c:	cmp	w0, #0x0
  401850:	cneg	w0, w0, lt  // lt = tstop
  401854:	and	w0, w0, #0xff
  401858:	neg	w0, w0
  40185c:	b	4018e4 <main+0x148>
  401860:	ldr	w0, [sp, #28]
  401864:	cmp	w0, #0x1
  401868:	b.le	401878 <main+0xdc>
  40186c:	ldr	x0, [sp, #16]
  401870:	ldr	x0, [x0, #8]
  401874:	b	401880 <main+0xe4>
  401878:	adrp	x0, 401000 <add_symlink+0xec>
  40187c:	add	x0, x0, #0xba8
  401880:	ldr	w1, [sp, #28]
  401884:	cmp	w1, #0x1
  401888:	b.le	401898 <main+0xfc>
  40188c:	ldr	x1, [sp, #16]
  401890:	ldr	x1, [x1, #16]
  401894:	b	4018a0 <main+0x104>
  401898:	adrp	x1, 401000 <add_symlink+0xec>
  40189c:	add	x1, x1, #0xba8
  4018a0:	ldr	w2, [sp, #28]
  4018a4:	cmp	w2, #0x1
  4018a8:	b.le	4018b8 <main+0x11c>
  4018ac:	ldr	x2, [sp, #16]
  4018b0:	ldr	x2, [x2, #24]
  4018b4:	b	4018c0 <main+0x124>
  4018b8:	adrp	x2, 401000 <add_symlink+0xec>
  4018bc:	add	x2, x2, #0xba8
  4018c0:	bl	401664 <run>
  4018c4:	str	w0, [sp, #44]
  4018c8:	bl	400b80 <ask_password_agent_close@plt>
  4018cc:	bl	400b00 <polkit_agent_close@plt>
  4018d0:	bl	400b90 <pager_close@plt>
  4018d4:	bl	400bb0 <mac_selinux_finish@plt>
  4018d8:	bl	400e8c <static_destruct>
  4018dc:	ldr	w0, [sp, #44]
  4018e0:	lsr	w0, w0, #31
  4018e4:	ldp	x29, x30, [sp], #48
  4018e8:	ret
  4018ec:	nop

00000000004018f0 <__libc_csu_init>:
  4018f0:	stp	x29, x30, [sp, #-64]!
  4018f4:	mov	x29, sp
  4018f8:	stp	x19, x20, [sp, #16]
  4018fc:	adrp	x20, 412000 <__FRAME_END__+0x10188>
  401900:	add	x20, x20, #0xd08
  401904:	stp	x21, x22, [sp, #32]
  401908:	adrp	x21, 412000 <__FRAME_END__+0x10188>
  40190c:	add	x21, x21, #0xd00
  401910:	sub	x20, x20, x21
  401914:	mov	w22, w0
  401918:	stp	x23, x24, [sp, #48]
  40191c:	mov	x23, x1
  401920:	mov	x24, x2
  401924:	bl	400a88 <_init>
  401928:	cmp	xzr, x20, asr #3
  40192c:	b.eq	401958 <__libc_csu_init+0x68>  // b.none
  401930:	asr	x20, x20, #3
  401934:	mov	x19, #0x0                   	// #0
  401938:	ldr	x3, [x21, x19, lsl #3]
  40193c:	mov	x2, x24
  401940:	add	x19, x19, #0x1
  401944:	mov	x1, x23
  401948:	mov	w0, w22
  40194c:	blr	x3
  401950:	cmp	x20, x19
  401954:	b.ne	401938 <__libc_csu_init+0x48>  // b.any
  401958:	ldp	x19, x20, [sp, #16]
  40195c:	ldp	x21, x22, [sp, #32]
  401960:	ldp	x23, x24, [sp, #48]
  401964:	ldp	x29, x30, [sp], #64
  401968:	ret
  40196c:	nop

0000000000401970 <__libc_csu_fini>:
  401970:	ret

Disassembly of section .fini:

0000000000401974 <_fini>:
  401974:	stp	x29, x30, [sp, #-16]!
  401978:	mov	x29, sp
  40197c:	ldp	x29, x30, [sp], #16
  401980:	ret
