
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//kernel.img_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_start>:
       0:	ldr	x2, 28 <_start+0x28>
       4:	str	x0, [x2]
       8:	ldr	x2, 20 <_start+0x20>
       c:	str	x1, [x2]
      10:	ldr	x2, 18 <_start+0x18>
      14:	br	x2
	...
      30:	mrs	x1, cntvct_el0
      34:	adrp	x0, 0 <_start>
      38:	ldr	x0, [x0]
      3c:	ldr	x0, [x0]
      40:	udiv	x0, x1, x0
      44:	ret
	...

0000000000000050 <grub_machine_init>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	mov	x29, sp
      58:	bl	3808 <grub_efi_init>
      5c:	mrs	x0, cntfrq_el0
      60:	adrp	x1, 0 <_start>
      64:	ldr	x1, [x1]
      68:	lsr	x0, x0, #3
      6c:	mov	x2, #0xf7cf                	// #63439
      70:	movk	x2, #0xe353, lsl #16
      74:	movk	x2, #0x9ba5, lsl #32
      78:	movk	x2, #0x20c4, lsl #48
      7c:	umulh	x0, x0, x2
      80:	lsr	x0, x0, #4
      84:	str	x0, [x1]
      88:	adrp	x0, 0 <_start>
      8c:	ldr	x0, [x0]
      90:	bl	5868 <grub_install_get_time_ms>
      94:	ldp	x29, x30, [sp], #16
      98:	ret
      9c:	nop
	...

00000000000000b0 <grub_machine_fini>:
      b0:	tbnz	w0, #0, b8 <grub_machine_fini+0x8>
      b4:	ret
      b8:	stp	x29, x30, [sp, #-16]!
      bc:	mov	x29, sp
      c0:	bl	3918 <grub_efi_fini>
      c4:	ldp	x29, x30, [sp], #16
      c8:	ret
      cc:	nop

00000000000000d0 <grub_efi_get_firmware_fdt>:
      d0:	stp	x29, x30, [sp, #-80]!
      d4:	mov	x29, sp
      d8:	stp	x19, x20, [sp, #16]
      dc:	stp	x21, x22, [sp, #32]
      e0:	mov	w0, #0x21d5                	// #8661
      e4:	movk	w0, #0xb1b6, lsl #16
      e8:	str	w0, [sp, #64]
      ec:	mov	w0, #0xfffff19c            	// #-3684
      f0:	strh	w0, [sp, #68]
      f4:	mov	w0, #0x41a5                	// #16805
      f8:	strh	w0, [sp, #70]
      fc:	mov	x0, #0xb83                 	// #2947
     100:	movk	x0, #0x15d9, lsl #16
     104:	movk	x0, #0x692c, lsl #32
     108:	movk	x0, #0xe0aa, lsl #48
     10c:	str	x0, [sp, #72]
     110:	adrp	x0, 0 <_start>
     114:	ldr	x0, [x0]
     118:	ldr	x0, [x0]
     11c:	ldr	x21, [x0, #112]
     120:	ldr	x0, [x0, #104]
     124:	cbz	x0, 1c0 <grub_efi_get_firmware_fdt+0xf0>
     128:	str	x23, [sp, #48]
     12c:	mov	w20, #0x0                   	// #0
     130:	mov	x0, #0x0                   	// #0
     134:	mov	x22, #0x10                  	// #16
     138:	adrp	x23, 0 <_start>
     13c:	add	x0, x0, x0, lsl #1
     140:	add	x19, x21, x0, lsl #3
     144:	mov	x2, x22
     148:	add	x1, sp, #0x40
     14c:	mov	x0, x19
     150:	bl	9918 <grub_memcmp>
     154:	cbz	w0, 180 <grub_efi_get_firmware_fdt+0xb0>
     158:	add	w20, w20, #0x1
     15c:	mov	w0, w20
     160:	ldr	x1, [x23]
     164:	ldr	x1, [x1]
     168:	ldr	x1, [x1, #104]
     16c:	cmp	x1, w20, uxtw
     170:	b.hi	13c <grub_efi_get_firmware_fdt+0x6c>  // b.pmore
     174:	mov	x19, #0x0                   	// #0
     178:	ldr	x23, [sp, #48]
     17c:	b	1ac <grub_efi_get_firmware_fdt+0xdc>
     180:	ldr	x19, [x19, #16]
     184:	mov	x4, x19
     188:	adrp	x0, 0 <_start>
     18c:	ldr	x3, [x0]
     190:	adrp	x0, 0 <_start>
     194:	ldr	x2, [x0]
     198:	mov	w1, #0x26                  	// #38
     19c:	adrp	x0, 0 <_start>
     1a0:	ldr	x0, [x0]
     1a4:	bl	aca0 <grub_real_dprintf>
     1a8:	ldr	x23, [sp, #48]
     1ac:	mov	x0, x19
     1b0:	ldp	x19, x20, [sp, #16]
     1b4:	ldp	x21, x22, [sp, #32]
     1b8:	ldp	x29, x30, [sp], #80
     1bc:	ret
     1c0:	mov	x19, #0x0                   	// #0
     1c4:	b	1ac <grub_efi_get_firmware_fdt+0xdc>
	...

00000000000001e8 <grub_arch_sync_caches>:
     1e8:	stp	x29, x30, [sp, #-64]!
     1ec:	mov	x29, sp
     1f0:	stp	x19, x20, [sp, #16]
     1f4:	stp	x21, x22, [sp, #32]
     1f8:	mov	x19, x0
     1fc:	sub	x20, x1, #0x1
     200:	adrp	x0, 0 <_start>
     204:	ldr	x0, [x0]
     208:	ldr	x2, [x0]
     20c:	cbz	x2, 264 <grub_arch_sync_caches+0x7c>
     210:	adrp	x0, 0 <_start>
     214:	ldr	x22, [x0]
     218:	ldr	x0, [x22, #8]
     21c:	cmp	x0, x2
     220:	csel	x0, x0, x2, ge  // ge = tcont
     224:	neg	x1, x0
     228:	and	x21, x1, x19
     22c:	add	x19, x19, x0
     230:	add	x19, x19, x20
     234:	and	x19, x19, x1
     238:	mov	x1, x19
     23c:	mov	x0, x21
     240:	bl	328 <grub_arch_clean_dcache_range>
     244:	ldr	x2, [x22, #8]
     248:	mov	x1, x19
     24c:	mov	x0, x21
     250:	bl	348 <grub_arch_invalidate_icache_range>
     254:	ldp	x19, x20, [sp, #16]
     258:	ldp	x21, x22, [sp, #32]
     25c:	ldp	x29, x30, [sp], #64
     260:	ret
     264:	str	x23, [sp, #48]
     268:	mrs	x1, ctr_el0
     26c:	ubfx	w4, w1, #16, #4
     270:	mov	w0, #0x4                   	// #4
     274:	lsl	w4, w0, w4
     278:	sxtw	x4, w4
     27c:	adrp	x2, 0 <_start>
     280:	ldr	x21, [x2]
     284:	str	x4, [x21]
     288:	and	w1, w1, #0xf
     28c:	lsl	w0, w0, w1
     290:	sxtw	x0, w0
     294:	str	x0, [x21, #8]
     298:	adrp	x0, 0 <_start>
     29c:	ldr	x23, [x0]
     2a0:	adrp	x0, 0 <_start>
     2a4:	ldr	x22, [x0]
     2a8:	adrp	x0, 0 <_start>
     2ac:	ldr	x3, [x0]
     2b0:	mov	x2, x23
     2b4:	mov	w1, #0x2a                  	// #42
     2b8:	mov	x0, x22
     2bc:	bl	aca0 <grub_real_dprintf>
     2c0:	ldr	x4, [x21, #8]
     2c4:	adrp	x0, 0 <_start>
     2c8:	ldr	x3, [x0]
     2cc:	mov	x2, x23
     2d0:	mov	w1, #0x2b                  	// #43
     2d4:	mov	x0, x22
     2d8:	bl	aca0 <grub_real_dprintf>
     2dc:	ldr	x2, [x21]
     2e0:	cbz	x2, 2ec <grub_arch_sync_caches+0x104>
     2e4:	ldr	x23, [sp, #48]
     2e8:	b	210 <grub_arch_sync_caches+0x28>
     2ec:	adrp	x0, 0 <_start>
     2f0:	ldr	x0, [x0]
     2f4:	bl	af6c <grub_fatal>
	...

0000000000000328 <grub_arch_clean_dcache_range>:
     328:	cmp	x0, x1
     32c:	b.ge	33c <grub_arch_clean_dcache_range+0x14>  // b.tcont
     330:	dc	cvau, x0
     334:	add	x0, x0, x2
     338:	b	328 <grub_arch_clean_dcache_range>
     33c:	dsb	ish
     340:	isb
     344:	ret

0000000000000348 <grub_arch_invalidate_icache_range>:
     348:	cmp	x0, x1
     34c:	b.ge	35c <grub_arch_invalidate_icache_range+0x14>  // b.tcont
     350:	ic	ivau, x0
     354:	add	x0, x0, x2
     358:	b	348 <grub_arch_invalidate_icache_range>
     35c:	dsb	ish
     360:	isb
     364:	ret

0000000000000368 <grub_arch_dl_check_header>:
     368:	ldrh	w1, [x0, #4]
     36c:	cmp	w1, #0x102
     370:	b.ne	384 <grub_arch_dl_check_header+0x1c>  // b.any
     374:	ldrh	w1, [x0, #18]
     378:	mov	w0, #0x0                   	// #0
     37c:	cmp	w1, #0xb7
     380:	b.eq	3a4 <grub_arch_dl_check_header+0x3c>  // b.none
     384:	stp	x29, x30, [sp, #-16]!
     388:	mov	x29, sp
     38c:	adrp	x0, 0 <_start>
     390:	ldr	x1, [x0]
     394:	mov	w0, #0x15                  	// #21
     398:	bl	8408 <grub_error>
     39c:	ldp	x29, x30, [sp], #16
     3a0:	ret
     3a4:	ret
	...

00000000000003b0 <grub_arch_dl_relocate_symbols>:
     3b0:	stp	x29, x30, [sp, #-112]!
     3b4:	mov	x29, sp
     3b8:	stp	x19, x20, [sp, #16]
     3bc:	stp	x23, x24, [sp, #48]
     3c0:	mov	x23, x0
     3c4:	ldr	x0, [x2, #24]
     3c8:	add	x19, x1, x0
     3cc:	ldr	x20, [x2, #32]
     3d0:	add	x20, x19, x20
     3d4:	cmp	x19, x20
     3d8:	b.cs	7ac <grub_arch_dl_relocate_symbols+0x3fc>  // b.hs, b.nlast
     3dc:	stp	x21, x22, [sp, #32]
     3e0:	stp	x25, x26, [sp, #64]
     3e4:	stp	x27, x28, [sp, #80]
     3e8:	mov	x24, x2
     3ec:	mov	x25, x3
     3f0:	mov	w28, #0x0                   	// #0
     3f4:	b	4f0 <grub_arch_dl_relocate_symbols+0x140>
     3f8:	adrp	x0, 0 <_start>
     3fc:	ldr	x1, [x0]
     400:	mov	w0, #0x2                   	// #2
     404:	bl	8408 <grub_error>
     408:	ldp	x21, x22, [sp, #32]
     40c:	ldp	x25, x26, [sp, #64]
     410:	ldp	x27, x28, [sp, #80]
     414:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     418:	ldr	x1, [x19, #16]
     41c:	add	x21, x21, x1
     420:	b	524 <grub_arch_dl_relocate_symbols+0x174>
     424:	cmp	x2, #0x101
     428:	b.eq	4b4 <grub_arch_dl_relocate_symbols+0x104>  // b.none
     42c:	cmp	x2, #0x105
     430:	b.ne	76c <grub_arch_dl_relocate_symbols+0x3bc>  // b.any
     434:	ldrsw	x0, [x27, x22]
     438:	add	x0, x0, x21
     43c:	sub	x0, x0, x26
     440:	str	x0, [sp, #104]
     444:	cmp	x0, w0, sxtw
     448:	b.ne	5dc <grub_arch_dl_relocate_symbols+0x22c>  // b.any
     44c:	mov	x5, x21
     450:	mov	x4, x26
     454:	adrp	x0, 0 <_start>
     458:	ldr	x3, [x0]
     45c:	adrp	x0, 0 <_start>
     460:	ldr	x2, [x0]
     464:	mov	w1, #0x83                  	// #131
     468:	adrp	x0, 0 <_start>
     46c:	ldr	x0, [x0]
     470:	bl	aca0 <grub_real_dprintf>
     474:	ldr	w0, [sp, #104]
     478:	str	w0, [x27, x22]
     47c:	b	4e0 <grub_arch_dl_relocate_symbols+0x130>
     480:	cmp	x2, #0x137
     484:	b.eq	5fc <grub_arch_dl_relocate_symbols+0x24c>  // b.none
     488:	cmp	x2, #0x138
     48c:	b.ne	49c <grub_arch_dl_relocate_symbols+0xec>  // b.any
     490:	cbz	w28, 704 <grub_arch_dl_relocate_symbols+0x354>
     494:	sub	w28, w28, #0x1
     498:	b	4e0 <grub_arch_dl_relocate_symbols+0x130>
     49c:	cmp	x2, #0x11e
     4a0:	b.ne	76c <grub_arch_dl_relocate_symbols+0x3bc>  // b.any
     4a4:	mov	x1, x21
     4a8:	mov	x0, x26
     4ac:	bl	914 <grub_arm64_set_abs_lo12_ldst64>
     4b0:	b	4e0 <grub_arch_dl_relocate_symbols+0x130>
     4b4:	mov	x5, x21
     4b8:	mov	x4, x26
     4bc:	adrp	x0, 0 <_start>
     4c0:	ldr	x3, [x0]
     4c4:	adrp	x0, 0 <_start>
     4c8:	ldr	x2, [x0]
     4cc:	mov	w1, #0x59                  	// #89
     4d0:	adrp	x0, 0 <_start>
     4d4:	ldr	x0, [x0]
     4d8:	bl	aca0 <grub_real_dprintf>
     4dc:	str	x21, [x27, x22]
     4e0:	ldr	x0, [x24, #56]
     4e4:	add	x19, x19, x0
     4e8:	cmp	x20, x19
     4ec:	b.ls	798 <grub_arch_dl_relocate_symbols+0x3e8>  // b.plast
     4f0:	ldr	x22, [x19]
     4f4:	ldr	x0, [x25, #16]
     4f8:	cmp	x22, x0
     4fc:	b.cs	3f8 <grub_arch_dl_relocate_symbols+0x48>  // b.hs, b.nlast
     500:	ldr	x0, [x19, #8]
     504:	lsr	x1, x0, #32
     508:	ldr	x3, [x23, #40]
     50c:	ldr	x2, [x23, #32]
     510:	madd	x1, x1, x3, x2
     514:	ldr	x21, [x1, #8]
     518:	ldr	w1, [x24, #4]
     51c:	cmp	w1, #0x4
     520:	b.eq	418 <grub_arch_dl_relocate_symbols+0x68>  // b.none
     524:	ldr	x27, [x25, #8]
     528:	add	x26, x27, x22
     52c:	and	x2, x0, #0xffffffff
     530:	cmp	w0, #0x11b
     534:	b.hi	480 <grub_arch_dl_relocate_symbols+0xd0>  // b.pmore
     538:	cmp	x2, #0x119
     53c:	b.hi	564 <grub_arch_dl_relocate_symbols+0x1b4>  // b.pmore
     540:	cmp	x2, #0x113
     544:	b.eq	724 <grub_arch_dl_relocate_symbols+0x374>  // b.none
     548:	b.ls	424 <grub_arch_dl_relocate_symbols+0x74>  // b.plast
     54c:	cmp	x2, #0x115
     550:	b.ne	76c <grub_arch_dl_relocate_symbols+0x3bc>  // b.any
     554:	mov	x1, x21
     558:	mov	x0, x26
     55c:	bl	904 <grub_arm64_set_abs_lo12>
     560:	b	4e0 <grub_arch_dl_relocate_symbols+0x130>
     564:	sub	x22, x21, x26
     568:	mov	x0, x22
     56c:	bl	818 <grub_arm_64_check_xxxx26_offset>
     570:	cbnz	w0, 5a0 <grub_arch_dl_relocate_symbols+0x1f0>
     574:	ldr	x22, [x23, #88]
     578:	add	x0, x22, #0x10
     57c:	str	x0, [x23, #88]
     580:	mov	w0, #0x50                  	// #80
     584:	movk	w0, #0x5800, lsl #16
     588:	str	w0, [x22]
     58c:	mov	w0, #0x200                 	// #512
     590:	movk	w0, #0xd61f, lsl #16
     594:	str	w0, [x22, #4]
     598:	str	x21, [x22, #8]
     59c:	sub	x22, x22, x26
     5a0:	mov	x0, x22
     5a4:	bl	818 <grub_arm_64_check_xxxx26_offset>
     5a8:	cbz	w0, 5bc <grub_arch_dl_relocate_symbols+0x20c>
     5ac:	mov	x1, x22
     5b0:	mov	x0, x26
     5b4:	bl	830 <grub_arm64_set_xxxx26_offset>
     5b8:	b	4e0 <grub_arch_dl_relocate_symbols+0x130>
     5bc:	adrp	x0, 0 <_start>
     5c0:	ldr	x1, [x0]
     5c4:	mov	w0, #0x2                   	// #2
     5c8:	bl	8408 <grub_error>
     5cc:	ldp	x21, x22, [sp, #32]
     5d0:	ldp	x25, x26, [sp, #64]
     5d4:	ldp	x27, x28, [sp, #80]
     5d8:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     5dc:	adrp	x0, 0 <_start>
     5e0:	ldr	x1, [x0]
     5e4:	mov	w0, #0x2                   	// #2
     5e8:	bl	8408 <grub_error>
     5ec:	ldp	x21, x22, [sp, #32]
     5f0:	ldp	x25, x26, [sp, #64]
     5f4:	ldp	x27, x28, [sp, #80]
     5f8:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     5fc:	ldr	x22, [x23, #72]
     600:	and	x0, x22, #0xfffffffffffff000
     604:	and	x27, x26, #0xfffffffffffff000
     608:	sub	x27, x0, x27
     60c:	mov	x0, x22
     610:	str	x21, [x0], #8
     614:	str	x0, [x23, #72]
     618:	add	w28, w28, #0x1
     61c:	mov	x6, x22
     620:	mov	x5, x21
     624:	mov	x4, x26
     628:	adrp	x0, 0 <_start>
     62c:	ldr	x3, [x0]
     630:	adrp	x0, 0 <_start>
     634:	ldr	x2, [x0]
     638:	mov	w1, #0x90                  	// #144
     63c:	adrp	x0, 0 <_start>
     640:	ldr	x0, [x0]
     644:	bl	aca0 <grub_real_dprintf>
     648:	mov	x0, x27
     64c:	bl	8c8 <grub_arm64_check_hi21_signed>
     650:	cbz	w0, 678 <grub_arch_dl_relocate_symbols+0x2c8>
     654:	mov	x1, x27
     658:	mov	x0, x26
     65c:	bl	8d4 <grub_arm64_set_hi21>
     660:	ldr	x1, [x24, #56]
     664:	add	x21, x19, x1
     668:	cmp	x20, x21
     66c:	b.ls	6e4 <grub_arch_dl_relocate_symbols+0x334>  // b.plast
     670:	ldr	w2, [x19, #12]
     674:	b	6a4 <grub_arch_dl_relocate_symbols+0x2f4>
     678:	adrp	x0, 0 <_start>
     67c:	ldr	x1, [x0]
     680:	mov	w0, #0x2                   	// #2
     684:	bl	8408 <grub_error>
     688:	ldp	x21, x22, [sp, #32]
     68c:	ldp	x25, x26, [sp, #64]
     690:	ldp	x27, x28, [sp, #80]
     694:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     698:	add	x21, x21, x1
     69c:	cmp	x20, x21
     6a0:	b.ls	6e4 <grub_arch_dl_relocate_symbols+0x334>  // b.plast
     6a4:	ldr	x0, [x21, #8]
     6a8:	cmp	x2, x0, lsr #32
     6ac:	b.ne	698 <grub_arch_dl_relocate_symbols+0x2e8>  // b.any
     6b0:	ldr	x4, [x19, #16]
     6b4:	ldr	x3, [x21, #16]
     6b8:	cmp	x4, x3
     6bc:	b.ne	698 <grub_arch_dl_relocate_symbols+0x2e8>  // b.any
     6c0:	cmp	w0, #0x138
     6c4:	b.ne	698 <grub_arch_dl_relocate_symbols+0x2e8>  // b.any
     6c8:	ldr	x2, [x25, #8]
     6cc:	ldr	x0, [x21]
     6d0:	mov	x1, x22
     6d4:	add	x0, x2, x0
     6d8:	bl	914 <grub_arm64_set_abs_lo12_ldst64>
     6dc:	cmp	x20, x21
     6e0:	b.hi	4e0 <grub_arch_dl_relocate_symbols+0x130>  // b.pmore
     6e4:	adrp	x0, 0 <_start>
     6e8:	ldr	x1, [x0]
     6ec:	mov	w0, #0x2                   	// #2
     6f0:	bl	8408 <grub_error>
     6f4:	ldp	x21, x22, [sp, #32]
     6f8:	ldp	x25, x26, [sp, #64]
     6fc:	ldp	x27, x28, [sp, #80]
     700:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     704:	adrp	x0, 0 <_start>
     708:	ldr	x1, [x0]
     70c:	mov	w0, #0x2                   	// #2
     710:	bl	8408 <grub_error>
     714:	ldp	x21, x22, [sp, #32]
     718:	ldp	x25, x26, [sp, #64]
     71c:	ldp	x27, x28, [sp, #80]
     720:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     724:	and	x21, x21, #0xfffffffffffff000
     728:	and	x0, x26, #0xfffffffffffff000
     72c:	sub	x21, x21, x0
     730:	mov	x0, x21
     734:	bl	8c8 <grub_arm64_check_hi21_signed>
     738:	cbz	w0, 74c <grub_arch_dl_relocate_symbols+0x39c>
     73c:	mov	x1, x21
     740:	mov	x0, x26
     744:	bl	8d4 <grub_arm64_set_hi21>
     748:	b	4e0 <grub_arch_dl_relocate_symbols+0x130>
     74c:	adrp	x0, 0 <_start>
     750:	ldr	x1, [x0]
     754:	mov	w0, #0x2                   	// #2
     758:	bl	8408 <grub_error>
     75c:	ldp	x21, x22, [sp, #32]
     760:	ldp	x25, x26, [sp, #64]
     764:	ldp	x27, x28, [sp, #80]
     768:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     76c:	adrp	x0, 0 <_start>
     770:	ldr	x1, [x0]
     774:	mov	w0, #0x18                  	// #24
     778:	bl	8408 <grub_error>
     77c:	ldp	x21, x22, [sp, #32]
     780:	ldp	x25, x26, [sp, #64]
     784:	ldp	x27, x28, [sp, #80]
     788:	ldp	x19, x20, [sp, #16]
     78c:	ldp	x23, x24, [sp, #48]
     790:	ldp	x29, x30, [sp], #112
     794:	ret
     798:	mov	w0, #0x0                   	// #0
     79c:	ldp	x21, x22, [sp, #32]
     7a0:	ldp	x25, x26, [sp, #64]
     7a4:	ldp	x27, x28, [sp, #80]
     7a8:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     7ac:	mov	w0, #0x0                   	// #0
     7b0:	b	788 <grub_arch_dl_relocate_symbols+0x3d8>
     7b4:	nop
	...

0000000000000818 <grub_arm_64_check_xxxx26_offset>:
     818:	mov	x1, #0x8000000             	// #134217728
     81c:	add	x0, x0, x1
     820:	mov	x1, #0xfffffff             	// #268435455
     824:	cmp	x0, x1
     828:	cset	w0, ls  // ls = plast
     82c:	ret

0000000000000830 <grub_arm64_set_xxxx26_offset>:
     830:	stp	x29, x30, [sp, #-32]!
     834:	mov	x29, sp
     838:	stp	x19, x20, [sp, #16]
     83c:	mov	x20, x0
     840:	mov	x19, x1
     844:	mov	x6, x1
     848:	mov	w5, #0x2b                  	// #43
     84c:	cmp	x1, #0x0
     850:	b.le	898 <grub_arm64_set_xxxx26_offset+0x68>
     854:	mov	x4, x20
     858:	adrp	x0, 0 <_start>
     85c:	ldr	x3, [x0]
     860:	adrp	x0, 0 <_start>
     864:	ldr	x2, [x0]
     868:	mov	w1, #0x31                  	// #49
     86c:	adrp	x0, 0 <_start>
     870:	ldr	x0, [x0]
     874:	bl	aca0 <grub_real_dprintf>
     878:	ldr	w1, [x20]
     87c:	and	w1, w1, #0xfc000000
     880:	ubfx	w19, w19, #2, #26
     884:	orr	w19, w1, w19
     888:	str	w19, [x20]
     88c:	ldp	x19, x20, [sp, #16]
     890:	ldp	x29, x30, [sp], #32
     894:	ret
     898:	tbz	x1, #63, 8a8 <grub_arm64_set_xxxx26_offset+0x78>
     89c:	neg	x6, x1
     8a0:	mov	w5, #0x2d                  	// #45
     8a4:	b	854 <grub_arm64_set_xxxx26_offset+0x24>
     8a8:	mov	w5, #0x2d                  	// #45
     8ac:	b	854 <grub_arm64_set_xxxx26_offset+0x24>
	...

00000000000008c8 <grub_arm64_check_hi21_signed>:
     8c8:	cmp	x0, w0, sxtw
     8cc:	cset	w0, eq  // eq = none
     8d0:	ret

00000000000008d4 <grub_arm64_set_hi21>:
     8d4:	asr	x2, x1, #12
     8d8:	ubfiz	w2, w2, #29, #2
     8dc:	asr	x1, x1, #14
     8e0:	ubfiz	w1, w1, #5, #19
     8e4:	orr	w1, w2, w1
     8e8:	ldr	w2, [x0]
     8ec:	mov	w3, #0x1f                  	// #31
     8f0:	movk	w3, #0x9f00, lsl #16
     8f4:	and	w2, w2, w3
     8f8:	orr	w1, w1, w2
     8fc:	str	w1, [x0]
     900:	ret

0000000000000904 <grub_arm64_set_abs_lo12>:
     904:	ldr	w2, [x0]
     908:	bfi	w2, w1, #10, #12
     90c:	str	w2, [x0]
     910:	ret

0000000000000914 <grub_arm64_set_abs_lo12_ldst64>:
     914:	ldr	w2, [x0]
     918:	and	w2, w2, #0xfff803ff
     91c:	lsl	w1, w1, #7
     920:	and	w1, w1, #0x7fc00
     924:	orr	w2, w2, w1
     928:	str	w2, [x0]
     92c:	ret

0000000000000930 <grub_arm64_dl_get_tramp_got_size>:
     930:	str	xzr, [x1]
     934:	str	xzr, [x2]
     938:	ldr	x5, [x0, #40]
     93c:	add	x5, x0, x5
     940:	ldrh	w3, [x0, #60]
     944:	cbz	w3, 9e0 <grub_arm64_dl_get_tramp_got_size+0xb0>
     948:	mov	w7, #0x0                   	// #0
     94c:	b	9b4 <grub_arm64_dl_get_tramp_got_size+0x84>
     950:	cmp	x4, #0x119
     954:	b.hi	98c <grub_arm64_dl_get_tramp_got_size+0x5c>  // b.pmore
     958:	ldr	x4, [x5, #56]
     95c:	add	x3, x3, x4
     960:	cmp	x6, x3
     964:	b.ls	99c <grub_arm64_dl_get_tramp_got_size+0x6c>  // b.plast
     968:	ldr	w4, [x3, #8]
     96c:	cmp	x4, #0x11b
     970:	b.ls	950 <grub_arm64_dl_get_tramp_got_size+0x20>  // b.plast
     974:	cmp	x4, #0x137
     978:	b.ne	958 <grub_arm64_dl_get_tramp_got_size+0x28>  // b.any
     97c:	ldr	x4, [x2]
     980:	add	x4, x4, #0x8
     984:	str	x4, [x2]
     988:	b	958 <grub_arm64_dl_get_tramp_got_size+0x28>
     98c:	ldr	x4, [x1]
     990:	add	x4, x4, #0x10
     994:	str	x4, [x1]
     998:	b	958 <grub_arm64_dl_get_tramp_got_size+0x28>
     99c:	add	w7, w7, #0x1
     9a0:	ldrh	w3, [x0, #58]
     9a4:	add	x5, x5, x3
     9a8:	ldrh	w3, [x0, #60]
     9ac:	cmp	w3, w7
     9b0:	b.ls	9e0 <grub_arm64_dl_get_tramp_got_size+0xb0>  // b.plast
     9b4:	ldr	w3, [x5, #4]
     9b8:	cmp	w3, #0x9
     9bc:	ccmp	w3, #0x4, #0x4, ne  // ne = any
     9c0:	b.ne	99c <grub_arm64_dl_get_tramp_got_size+0x6c>  // b.any
     9c4:	ldr	x3, [x5, #24]
     9c8:	add	x3, x0, x3
     9cc:	ldr	x6, [x5, #32]
     9d0:	add	x6, x3, x6
     9d4:	cmp	x3, x6
     9d8:	b.cc	968 <grub_arm64_dl_get_tramp_got_size+0x38>  // b.lo, b.ul, b.last
     9dc:	b	99c <grub_arm64_dl_get_tramp_got_size+0x6c>
     9e0:	mov	w0, #0x0                   	// #0
     9e4:	ret
     9e8:	cmp	x0, #0x0
     9ec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9f0:	b.eq	a08 <grub_arm64_dl_get_tramp_got_size+0xd8>  // b.none
     9f4:	ldr	x0, [x0, #32]
     9f8:	sub	w1, w1, #0x1
     9fc:	cmp	x0, #0x0
     a00:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     a04:	b.ne	9f4 <grub_arm64_dl_get_tramp_got_size+0xc4>  // b.any
     a08:	cmp	w1, #0x0
     a0c:	csel	x0, x0, xzr, eq  // eq = none
     a10:	ret
     a14:	stp	x29, x30, [sp, #-16]!
     a18:	mov	x29, sp
     a1c:	ldr	x4, [x0]
     a20:	adrp	x0, 0 <_start>
     a24:	ldr	x3, [x0]
     a28:	adrp	x0, 0 <_start>
     a2c:	ldr	x2, [x0]
     a30:	mov	w1, #0x21c                 	// #540
     a34:	adrp	x0, 0 <_start>
     a38:	ldr	x0, [x0]
     a3c:	bl	aca0 <grub_real_dprintf>
     a40:	ldp	x29, x30, [sp], #16
     a44:	ret
	...
     a60:	stp	x29, x30, [sp, #-32]!
     a64:	mov	x29, sp
     a68:	str	x19, [sp, #16]
     a6c:	mov	x19, x0
     a70:	cbz	x0, a84 <grub_arm64_dl_get_tramp_got_size+0x154>
     a74:	mov	x0, x19
     a78:	ldr	x19, [x19, #32]
     a7c:	bl	547c <grub_free>
     a80:	cbnz	x19, a74 <grub_arm64_dl_get_tramp_got_size+0x144>
     a84:	ldr	x19, [sp, #16]
     a88:	ldp	x29, x30, [sp], #32
     a8c:	ret

0000000000000a90 <grub_efidisk_fini>:
     a90:	stp	x29, x30, [sp, #-32]!
     a94:	mov	x29, sp
     a98:	str	x19, [sp, #16]
     a9c:	adrp	x0, 0 <_start>
     aa0:	ldr	x19, [x0]
     aa4:	ldr	x0, [x19]
     aa8:	bl	a60 <grub_arm64_dl_get_tramp_got_size+0x130>
     aac:	ldr	x0, [x19, #8]
     ab0:	bl	a60 <grub_arm64_dl_get_tramp_got_size+0x130>
     ab4:	ldr	x0, [x19, #16]
     ab8:	bl	a60 <grub_arm64_dl_get_tramp_got_size+0x130>
     abc:	str	xzr, [x19]
     ac0:	str	xzr, [x19, #8]
     ac4:	str	xzr, [x19, #16]
     ac8:	adrp	x0, 0 <_start>
     acc:	ldr	x0, [x0]
     ad0:	bl	6830 <grub_disk_dev_unregister>
     ad4:	ldr	x19, [sp, #16]
     ad8:	ldp	x29, x30, [sp], #32
     adc:	ret
	...
     af0:	stp	x29, x30, [sp, #-64]!
     af4:	mov	x29, sp
     af8:	stp	x19, x20, [sp, #16]
     afc:	stp	x21, x22, [sp, #32]
     b00:	stp	x23, x24, [sp, #48]
     b04:	mov	x6, x0
     b08:	mov	x23, x1
     b0c:	mov	x19, x3
     b10:	mov	w22, w4
     b14:	ldr	x0, [x0, #64]
     b18:	ldr	x21, [x0, #24]
     b1c:	ldr	x0, [x21, #8]
     b20:	ldr	w5, [x0, #16]
     b24:	cmp	w5, #0x0
     b28:	csinc	w0, w5, wzr, ne  // ne = any
     b2c:	ldr	w1, [x6, #24]
     b30:	lsl	x20, x2, x1
     b34:	sub	x1, x0, #0x1
     b38:	tst	x3, x1
     b3c:	b.ne	b6c <grub_efidisk_fini+0xdc>  // b.any
     b40:	cbz	w4, c14 <grub_efidisk_fini+0x184>
     b44:	ldr	x0, [x21, #8]
     b48:	ldr	x5, [x21, #32]
     b4c:	mov	x4, x3
     b50:	mov	x3, x20
     b54:	mov	x2, x23
     b58:	ldr	w1, [x0]
     b5c:	mov	x0, x21
     b60:	blr	x5
     b64:	mov	x21, x0
     b68:	b	bbc <grub_efidisk_fini+0x12c>
     b6c:	mov	x1, x20
     b70:	bl	51c8 <grub_memalign>
     b74:	mov	x24, x0
     b78:	cbz	x0, c08 <grub_efidisk_fini+0x178>
     b7c:	cbnz	w22, bd4 <grub_efidisk_fini+0x144>
     b80:	ldr	x0, [x21, #8]
     b84:	ldr	x5, [x21, #24]
     b88:	mov	x4, x24
     b8c:	mov	x3, x20
     b90:	mov	x2, x23
     b94:	ldr	w1, [x0]
     b98:	mov	x0, x21
     b9c:	blr	x5
     ba0:	mov	x21, x0
     ba4:	mov	x2, x20
     ba8:	mov	x1, x24
     bac:	mov	x0, x19
     bb0:	bl	9854 <grub_memmove>
     bb4:	mov	x0, x24
     bb8:	bl	547c <grub_free>
     bbc:	mov	x0, x21
     bc0:	ldp	x19, x20, [sp, #16]
     bc4:	ldp	x21, x22, [sp, #32]
     bc8:	ldp	x23, x24, [sp, #48]
     bcc:	ldp	x29, x30, [sp], #64
     bd0:	ret
     bd4:	mov	x2, x20
     bd8:	mov	x1, x19
     bdc:	bl	9854 <grub_memmove>
     be0:	ldr	x0, [x21, #8]
     be4:	ldr	x5, [x21, #32]
     be8:	mov	x4, x24
     bec:	mov	x3, x20
     bf0:	mov	x2, x23
     bf4:	ldr	w1, [x0]
     bf8:	mov	x0, x21
     bfc:	blr	x5
     c00:	mov	x21, x0
     c04:	b	bb4 <grub_efidisk_fini+0x124>
     c08:	mov	x21, #0x9                   	// #9
     c0c:	movk	x21, #0x8000, lsl #48
     c10:	b	bbc <grub_efidisk_fini+0x12c>
     c14:	ldr	x0, [x21, #8]
     c18:	ldr	x5, [x21, #24]
     c1c:	mov	x4, x3
     c20:	mov	x3, x20
     c24:	mov	x2, x23
     c28:	ldr	w1, [x0]
     c2c:	mov	x0, x21
     c30:	blr	x5
     c34:	mov	x21, x0
     c38:	b	bbc <grub_efidisk_fini+0x12c>
     c3c:	stp	x29, x30, [sp, #-48]!
     c40:	mov	x29, sp
     c44:	stp	x19, x20, [sp, #16]
     c48:	stp	x21, x22, [sp, #32]
     c4c:	mov	x19, x0
     c50:	mov	x20, x1
     c54:	mov	x21, x2
     c58:	mov	x22, x3
     c5c:	ldr	x6, [x0]
     c60:	mov	x5, x1
     c64:	mov	x4, x2
     c68:	adrp	x0, 0 <_start>
     c6c:	ldr	x3, [x0]
     c70:	adrp	x0, 0 <_start>
     c74:	ldr	x2, [x0]
     c78:	mov	w1, #0x268                 	// #616
     c7c:	adrp	x0, 0 <_start>
     c80:	ldr	x0, [x0]
     c84:	bl	aca0 <grub_real_dprintf>
     c88:	mov	w4, #0x1                   	// #1
     c8c:	mov	x3, x22
     c90:	mov	x2, x21
     c94:	mov	x1, x20
     c98:	mov	x0, x19
     c9c:	bl	af0 <grub_efidisk_fini+0x60>
     ca0:	mov	x1, x0
     ca4:	mov	x0, #0xc                   	// #12
     ca8:	movk	x0, #0x8000, lsl #48
     cac:	cmp	x1, x0
     cb0:	b.eq	ccc <grub_efidisk_fini+0x23c>  // b.none
     cb4:	mov	w0, #0x0                   	// #0
     cb8:	cbnz	x1, ce4 <grub_efidisk_fini+0x254>
     cbc:	ldp	x19, x20, [sp, #16]
     cc0:	ldp	x21, x22, [sp, #32]
     cc4:	ldp	x29, x30, [sp], #48
     cc8:	ret
     ccc:	ldr	x2, [x19]
     cd0:	adrp	x0, 0 <_start>
     cd4:	ldr	x1, [x0]
     cd8:	mov	w0, #0xb                   	// #11
     cdc:	bl	8408 <grub_error>
     ce0:	b	cbc <grub_efidisk_fini+0x22c>
     ce4:	ldr	x3, [x19]
     ce8:	mov	x2, x20
     cec:	adrp	x0, 0 <_start>
     cf0:	ldr	x1, [x0]
     cf4:	mov	w0, #0xf                   	// #15
     cf8:	bl	8408 <grub_error>
     cfc:	b	cbc <grub_efidisk_fini+0x22c>
	...
     d28:	stp	x29, x30, [sp, #-48]!
     d2c:	mov	x29, sp
     d30:	stp	x19, x20, [sp, #16]
     d34:	stp	x21, x22, [sp, #32]
     d38:	mov	x19, x0
     d3c:	mov	x20, x1
     d40:	mov	x21, x2
     d44:	mov	x22, x3
     d48:	ldr	x6, [x0]
     d4c:	mov	x5, x1
     d50:	mov	x4, x2
     d54:	adrp	x0, 0 <_start>
     d58:	ldr	x3, [x0]
     d5c:	adrp	x0, 0 <_start>
     d60:	ldr	x2, [x0]
     d64:	mov	w1, #0x251                 	// #593
     d68:	adrp	x0, 0 <_start>
     d6c:	ldr	x0, [x0]
     d70:	bl	aca0 <grub_real_dprintf>
     d74:	mov	w4, #0x0                   	// #0
     d78:	mov	x3, x22
     d7c:	mov	x2, x21
     d80:	mov	x1, x20
     d84:	mov	x0, x19
     d88:	bl	af0 <grub_efidisk_fini+0x60>
     d8c:	mov	x1, x0
     d90:	mov	x0, #0xc                   	// #12
     d94:	movk	x0, #0x8000, lsl #48
     d98:	cmp	x1, x0
     d9c:	b.eq	db8 <grub_efidisk_fini+0x328>  // b.none
     da0:	mov	w0, #0x0                   	// #0
     da4:	cbnz	x1, dd0 <grub_efidisk_fini+0x340>
     da8:	ldp	x19, x20, [sp, #16]
     dac:	ldp	x21, x22, [sp, #32]
     db0:	ldp	x29, x30, [sp], #48
     db4:	ret
     db8:	ldr	x2, [x19]
     dbc:	adrp	x0, 0 <_start>
     dc0:	ldr	x1, [x0]
     dc4:	mov	w0, #0xb                   	// #11
     dc8:	bl	8408 <grub_error>
     dcc:	b	da8 <grub_efidisk_fini+0x318>
     dd0:	ldr	x3, [x19]
     dd4:	mov	x2, x20
     dd8:	adrp	x0, 0 <_start>
     ddc:	ldr	x1, [x0]
     de0:	mov	w0, #0xe                   	// #14
     de4:	bl	8408 <grub_error>
     de8:	b	da8 <grub_efidisk_fini+0x318>
     dec:	nop
	...
     e18:	stp	x29, x30, [sp, #-64]!
     e1c:	mov	x29, sp
     e20:	stp	x19, x20, [sp, #16]
     e24:	stp	x21, x22, [sp, #32]
     e28:	mov	x19, x0
     e2c:	mov	x21, x1
     e30:	mov	x4, x0
     e34:	adrp	x0, 0 <_start>
     e38:	ldr	x3, [x0]
     e3c:	adrp	x0, 0 <_start>
     e40:	ldr	x2, [x0]
     e44:	mov	w1, #0x1e2                 	// #482
     e48:	adrp	x0, 0 <_start>
     e4c:	ldr	x0, [x0]
     e50:	bl	aca0 <grub_real_dprintf>
     e54:	ldrb	w1, [x19]
     e58:	sub	w0, w1, #0x66
     e5c:	and	w0, w0, #0xfffffffd
     e60:	and	w0, w0, #0xff
     e64:	cmp	w1, #0x63
     e68:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     e6c:	b.ne	ef0 <grub_efidisk_fini+0x460>  // b.any
     e70:	ldrb	w0, [x19, #1]
     e74:	cmp	w0, #0x64
     e78:	b.ne	ef0 <grub_efidisk_fini+0x460>  // b.any
     e7c:	mov	w2, #0xa                   	// #10
     e80:	mov	x1, #0x0                   	// #0
     e84:	add	x0, x19, #0x2
     e88:	bl	a3e8 <grub_strtoul>
     e8c:	mov	x20, x0
     e90:	adrp	x0, 0 <_start>
     e94:	ldr	x0, [x0]
     e98:	ldr	w0, [x0]
     e9c:	cbnz	w0, ef0 <grub_efidisk_fini+0x460>
     ea0:	tbnz	w20, #31, f00 <grub_efidisk_fini+0x470>
     ea4:	str	x23, [sp, #48]
     ea8:	ldrb	w22, [x19]
     eac:	cmp	w22, #0x66
     eb0:	b.eq	f10 <grub_efidisk_fini+0x480>  // b.none
     eb4:	cmp	w22, #0x68
     eb8:	b.eq	1024 <grub_efidisk_fini+0x594>  // b.none
     ebc:	cmp	w22, #0x63
     ec0:	b.eq	1008 <grub_efidisk_fini+0x578>  // b.none
     ec4:	adrp	x0, 0 <_start>
     ec8:	ldr	x1, [x0]
     ecc:	mov	w0, #0xc                   	// #12
     ed0:	bl	8408 <grub_error>
     ed4:	mov	w20, w0
     ed8:	ldr	x23, [sp, #48]
     edc:	mov	w0, w20
     ee0:	ldp	x19, x20, [sp, #16]
     ee4:	ldp	x21, x22, [sp, #32]
     ee8:	ldp	x29, x30, [sp], #64
     eec:	ret
     ef0:	adrp	x0, 0 <_start>
     ef4:	ldr	x1, [x0]
     ef8:	mov	w0, #0xc                   	// #12
     efc:	bl	8408 <grub_error>
     f00:	adrp	x0, 0 <_start>
     f04:	ldr	x0, [x0]
     f08:	ldr	w20, [x0]
     f0c:	b	edc <grub_efidisk_fini+0x44c>
     f10:	adrp	x0, 0 <_start>
     f14:	ldr	x0, [x0]
     f18:	mov	w1, w20
     f1c:	ldr	x0, [x0]
     f20:	bl	9e8 <grub_arm64_dl_get_tramp_got_size+0xb8>
     f24:	mov	x23, x0
     f28:	cbz	x23, ec4 <grub_efidisk_fini+0x434>
     f2c:	orr	w20, w22, w20, lsl #8
     f30:	sxtw	x20, w20
     f34:	str	x20, [x21, #32]
     f38:	ldr	x0, [x23, #24]
     f3c:	ldr	x22, [x0, #8]
     f40:	ldr	w7, [x22, #16]
     f44:	ldr	w6, [x22, #12]
     f48:	ldr	x5, [x22, #24]
     f4c:	mov	x4, x22
     f50:	adrp	x0, 0 <_start>
     f54:	ldr	x3, [x0]
     f58:	adrp	x0, 0 <_start>
     f5c:	ldr	x2, [x0]
     f60:	mov	w1, #0x1ff                 	// #511
     f64:	adrp	x0, 0 <_start>
     f68:	ldr	x0, [x0]
     f6c:	bl	aca0 <grub_real_dprintf>
     f70:	ldr	w2, [x22, #16]
     f74:	sub	w20, w2, #0x1
     f78:	ands	w20, w20, w2
     f7c:	b.ne	1040 <grub_efidisk_fini+0x5b0>  // b.any
     f80:	ldr	x0, [x22, #24]
     f84:	add	x0, x0, #0x1
     f88:	str	x0, [x21, #16]
     f8c:	mov	w0, #0x14                  	// #20
     f90:	str	w0, [x21, #28]
     f94:	ldr	w2, [x22, #12]
     f98:	sub	w0, w2, #0x1
     f9c:	tst	w0, w2
     fa0:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     fa4:	b.eq	105c <grub_efidisk_fini+0x5cc>  // b.none
     fa8:	str	wzr, [x21, #24]
     fac:	ldr	w0, [x22, #12]
     fb0:	cmp	w0, #0x1
     fb4:	b.ls	fd8 <grub_efidisk_fini+0x548>  // b.plast
     fb8:	mov	w2, #0x1                   	// #1
     fbc:	mov	w0, w2
     fc0:	str	w2, [x21, #24]
     fc4:	lsl	w3, w0, w2
     fc8:	ldr	w1, [x22, #12]
     fcc:	cmp	w3, w1
     fd0:	add	w2, w2, #0x1
     fd4:	b.cc	fc0 <grub_efidisk_fini+0x530>  // b.lo, b.ul, b.last
     fd8:	str	x23, [x21, #64]
     fdc:	mov	x4, x19
     fe0:	adrp	x0, 0 <_start>
     fe4:	ldr	x3, [x0]
     fe8:	adrp	x0, 0 <_start>
     fec:	ldr	x2, [x0]
     ff0:	mov	w1, #0x213                 	// #531
     ff4:	adrp	x0, 0 <_start>
     ff8:	ldr	x0, [x0]
     ffc:	bl	aca0 <grub_real_dprintf>
    1000:	ldr	x23, [sp, #48]
    1004:	b	edc <grub_efidisk_fini+0x44c>
    1008:	adrp	x0, 0 <_start>
    100c:	ldr	x0, [x0]
    1010:	mov	w1, w20
    1014:	ldr	x0, [x0, #16]
    1018:	bl	9e8 <grub_arm64_dl_get_tramp_got_size+0xb8>
    101c:	mov	x23, x0
    1020:	b	f28 <grub_efidisk_fini+0x498>
    1024:	adrp	x0, 0 <_start>
    1028:	ldr	x0, [x0]
    102c:	mov	w1, w20
    1030:	ldr	x0, [x0, #8]
    1034:	bl	9e8 <grub_arm64_dl_get_tramp_got_size+0xb8>
    1038:	mov	x23, x0
    103c:	b	f28 <grub_efidisk_fini+0x498>
    1040:	adrp	x0, 0 <_start>
    1044:	ldr	x1, [x0]
    1048:	mov	w0, #0x1d                  	// #29
    104c:	bl	8408 <grub_error>
    1050:	mov	w20, w0
    1054:	ldr	x23, [sp, #48]
    1058:	b	edc <grub_efidisk_fini+0x44c>
    105c:	adrp	x0, 0 <_start>
    1060:	ldr	x1, [x0]
    1064:	mov	w0, #0x1d                  	// #29
    1068:	bl	8408 <grub_error>
    106c:	mov	w20, w0
    1070:	ldr	x23, [sp, #48]
    1074:	b	edc <grub_efidisk_fini+0x44c>
	...
    10d0:	stp	x29, x30, [sp, #-96]!
    10d4:	mov	x29, sp
    10d8:	stp	x19, x20, [sp, #16]
    10dc:	mov	x19, x0
    10e0:	mov	x20, x1
    10e4:	cbz	w2, 11f0 <grub_efidisk_fini+0x760>
    10e8:	mov	w0, #0x0                   	// #0
    10ec:	cmp	w2, #0x1
    10f0:	b.ne	1298 <grub_efidisk_fini+0x808>  // b.any
    10f4:	stp	x21, x22, [sp, #32]
    10f8:	stp	x23, x24, [sp, #48]
    10fc:	stp	x25, x26, [sp, #64]
    1100:	adrp	x0, 0 <_start>
    1104:	ldr	x0, [x0]
    1108:	ldr	x21, [x0]
    110c:	cbz	x21, 1170 <grub_efidisk_fini+0x6e0>
    1110:	mov	w22, #0x0                   	// #0
    1114:	adrp	x26, 0 <_start>
    1118:	mov	x25, #0x10                  	// #16
    111c:	adrp	x24, 0 <_start>
    1120:	adrp	x23, 0 <_start>
    1124:	mov	w3, w22
    1128:	ldr	x2, [x26]
    112c:	mov	x1, x25
    1130:	add	x0, sp, #0x50
    1134:	bl	ae14 <grub_snprintf>
    1138:	add	x4, sp, #0x50
    113c:	ldr	x3, [x24]
    1140:	ldr	x2, [x23]
    1144:	mov	w1, #0x1a6                 	// #422
    1148:	adrp	x0, 0 <_start>
    114c:	ldr	x0, [x0]
    1150:	bl	aca0 <grub_real_dprintf>
    1154:	mov	x1, x20
    1158:	add	x0, sp, #0x50
    115c:	blr	x19
    1160:	cbnz	w0, 12a4 <grub_efidisk_fini+0x814>
    1164:	ldr	x21, [x21, #32]
    1168:	add	w22, w22, #0x1
    116c:	cbnz	x21, 1124 <grub_efidisk_fini+0x694>
    1170:	adrp	x0, 0 <_start>
    1174:	ldr	x0, [x0]
    1178:	ldr	x21, [x0, #16]
    117c:	cbz	x21, 12b8 <grub_efidisk_fini+0x828>
    1180:	mov	w22, #0x0                   	// #0
    1184:	adrp	x26, 0 <_start>
    1188:	mov	x25, #0x10                  	// #16
    118c:	adrp	x24, 0 <_start>
    1190:	adrp	x23, 0 <_start>
    1194:	mov	w3, w22
    1198:	ldr	x2, [x26]
    119c:	mov	x1, x25
    11a0:	add	x0, sp, #0x50
    11a4:	bl	ae14 <grub_snprintf>
    11a8:	add	x4, sp, #0x50
    11ac:	ldr	x3, [x24]
    11b0:	ldr	x2, [x23]
    11b4:	mov	w1, #0x1ae                 	// #430
    11b8:	adrp	x0, 0 <_start>
    11bc:	ldr	x0, [x0]
    11c0:	bl	aca0 <grub_real_dprintf>
    11c4:	mov	x1, x20
    11c8:	add	x0, sp, #0x50
    11cc:	blr	x19
    11d0:	cbnz	w0, 12cc <grub_efidisk_fini+0x83c>
    11d4:	ldr	x21, [x21, #32]
    11d8:	add	w22, w22, #0x1
    11dc:	cbnz	x21, 1194 <grub_efidisk_fini+0x704>
    11e0:	ldp	x21, x22, [sp, #32]
    11e4:	ldp	x23, x24, [sp, #48]
    11e8:	ldp	x25, x26, [sp, #64]
    11ec:	b	1298 <grub_efidisk_fini+0x808>
    11f0:	stp	x21, x22, [sp, #32]
    11f4:	adrp	x0, 0 <_start>
    11f8:	ldr	x0, [x0]
    11fc:	ldr	x21, [x0, #8]
    1200:	cbz	x21, 127c <grub_efidisk_fini+0x7ec>
    1204:	stp	x23, x24, [sp, #48]
    1208:	stp	x25, x26, [sp, #64]
    120c:	mov	w22, #0x0                   	// #0
    1210:	adrp	x26, 0 <_start>
    1214:	mov	x25, #0x10                  	// #16
    1218:	adrp	x24, 0 <_start>
    121c:	adrp	x23, 0 <_start>
    1220:	mov	w3, w22
    1224:	ldr	x2, [x26]
    1228:	mov	x1, x25
    122c:	add	x0, sp, #0x50
    1230:	bl	ae14 <grub_snprintf>
    1234:	add	x4, sp, #0x50
    1238:	ldr	x3, [x24]
    123c:	ldr	x2, [x23]
    1240:	mov	w1, #0x19d                 	// #413
    1244:	adrp	x0, 0 <_start>
    1248:	ldr	x0, [x0]
    124c:	bl	aca0 <grub_real_dprintf>
    1250:	mov	x1, x20
    1254:	add	x0, sp, #0x50
    1258:	blr	x19
    125c:	cbnz	w0, 1288 <grub_efidisk_fini+0x7f8>
    1260:	ldr	x21, [x21, #32]
    1264:	add	w22, w22, #0x1
    1268:	cbnz	x21, 1220 <grub_efidisk_fini+0x790>
    126c:	ldp	x21, x22, [sp, #32]
    1270:	ldp	x23, x24, [sp, #48]
    1274:	ldp	x25, x26, [sp, #64]
    1278:	b	1298 <grub_efidisk_fini+0x808>
    127c:	mov	w0, #0x0                   	// #0
    1280:	ldp	x21, x22, [sp, #32]
    1284:	b	1298 <grub_efidisk_fini+0x808>
    1288:	mov	w0, #0x1                   	// #1
    128c:	ldp	x21, x22, [sp, #32]
    1290:	ldp	x23, x24, [sp, #48]
    1294:	ldp	x25, x26, [sp, #64]
    1298:	ldp	x19, x20, [sp, #16]
    129c:	ldp	x29, x30, [sp], #96
    12a0:	ret
    12a4:	mov	w0, #0x1                   	// #1
    12a8:	ldp	x21, x22, [sp, #32]
    12ac:	ldp	x23, x24, [sp, #48]
    12b0:	ldp	x25, x26, [sp, #64]
    12b4:	b	1298 <grub_efidisk_fini+0x808>
    12b8:	mov	w0, #0x0                   	// #0
    12bc:	ldp	x21, x22, [sp, #32]
    12c0:	ldp	x23, x24, [sp, #48]
    12c4:	ldp	x25, x26, [sp, #64]
    12c8:	b	1298 <grub_efidisk_fini+0x808>
    12cc:	mov	w0, #0x1                   	// #1
    12d0:	ldp	x21, x22, [sp, #32]
    12d4:	ldp	x23, x24, [sp, #48]
    12d8:	ldp	x25, x26, [sp, #64]
    12dc:	b	1298 <grub_efidisk_fini+0x808>
	...
    1318:	stp	x29, x30, [sp, #-112]!
    131c:	mov	x29, sp
    1320:	stp	x23, x24, [sp, #48]
    1324:	stp	x25, x26, [sp, #64]
    1328:	adrp	x0, 0 <_start>
    132c:	ldr	x1, [x0]
    1330:	add	x3, sp, #0x68
    1334:	mov	x2, #0x0                   	// #0
    1338:	add	x1, x1, #0x40
    133c:	mov	w0, #0x2                   	// #2
    1340:	bl	1fa8 <grub_efi_locate_handle>
    1344:	mov	x26, x0
    1348:	cbz	x0, 147c <grub_efidisk_fini+0x9ec>
    134c:	ldr	x0, [sp, #104]
    1350:	sub	x1, x0, #0x1
    1354:	str	x1, [sp, #104]
    1358:	cbz	x0, 1474 <grub_efidisk_fini+0x9e4>
    135c:	stp	x19, x20, [sp, #16]
    1360:	stp	x21, x22, [sp, #32]
    1364:	stp	x27, x28, [sp, #80]
    1368:	mov	x20, x26
    136c:	mov	x23, #0x0                   	// #0
    1370:	adrp	x25, 0 <_start>
    1374:	mov	w24, #0x2                   	// #2
    1378:	mov	x27, #0x28                  	// #40
    137c:	mov	w28, #0x5845                	// #22597
    1380:	movk	w28, #0x6950, lsl #16
    1384:	b	13c4 <grub_efidisk_fini+0x934>
    1388:	mov	x0, x27
    138c:	bl	5420 <grub_malloc>
    1390:	cbz	x0, 1420 <grub_efidisk_fini+0x990>
    1394:	ldr	x1, [x20]
    1398:	str	x1, [x0]
    139c:	str	x19, [x0, #8]
    13a0:	str	x21, [x0, #16]
    13a4:	str	x22, [x0, #24]
    13a8:	str	x23, [x0, #32]
    13ac:	mov	x23, x0
    13b0:	add	x20, x20, #0x8
    13b4:	ldr	x0, [sp, #104]
    13b8:	sub	x1, x0, #0x1
    13bc:	str	x1, [sp, #104]
    13c0:	cbz	x0, 144c <grub_efidisk_fini+0x9bc>
    13c4:	ldr	x0, [x20]
    13c8:	bl	2be0 <grub_efi_get_device_path>
    13cc:	mov	x19, x0
    13d0:	cbz	x0, 13b0 <grub_efidisk_fini+0x920>
    13d4:	bl	2c10 <grub_efi_find_last_device_path>
    13d8:	mov	x21, x0
    13dc:	cbz	x0, 13b0 <grub_efidisk_fini+0x920>
    13e0:	ldr	x1, [x25]
    13e4:	mov	w2, w24
    13e8:	add	x1, x1, #0x40
    13ec:	ldr	x0, [x20]
    13f0:	bl	2098 <grub_efi_open_protocol>
    13f4:	mov	x22, x0
    13f8:	cbz	x0, 13b0 <grub_efidisk_fini+0x920>
    13fc:	ldr	x0, [x0, #8]
    1400:	cbz	x0, 1388 <grub_efidisk_fini+0x8f8>
    1404:	ldr	w1, [x0]
    1408:	cmp	w1, w28
    140c:	b.ne	1388 <grub_efidisk_fini+0x8f8>  // b.any
    1410:	ldr	w0, [x0, #12]
    1414:	cmp	w0, #0x1
    1418:	b.ne	1388 <grub_efidisk_fini+0x8f8>  // b.any
    141c:	b	13b0 <grub_efidisk_fini+0x920>
    1420:	mov	x0, x26
    1424:	bl	547c <grub_free>
    1428:	cbz	x23, 1484 <grub_efidisk_fini+0x9f4>
    142c:	mov	x0, x23
    1430:	ldr	x23, [x23, #32]
    1434:	bl	547c <grub_free>
    1438:	cbnz	x23, 142c <grub_efidisk_fini+0x99c>
    143c:	ldp	x19, x20, [sp, #16]
    1440:	ldp	x21, x22, [sp, #32]
    1444:	ldp	x27, x28, [sp, #80]
    1448:	b	1460 <grub_efidisk_fini+0x9d0>
    144c:	ldp	x19, x20, [sp, #16]
    1450:	ldp	x21, x22, [sp, #32]
    1454:	ldp	x27, x28, [sp, #80]
    1458:	mov	x0, x26
    145c:	bl	547c <grub_free>
    1460:	mov	x0, x23
    1464:	ldp	x23, x24, [sp, #48]
    1468:	ldp	x25, x26, [sp, #64]
    146c:	ldp	x29, x30, [sp], #112
    1470:	ret
    1474:	mov	x23, #0x0                   	// #0
    1478:	b	1458 <grub_efidisk_fini+0x9c8>
    147c:	mov	x23, x0
    1480:	b	1460 <grub_efidisk_fini+0x9d0>
    1484:	ldp	x19, x20, [sp, #16]
    1488:	ldp	x21, x22, [sp, #32]
    148c:	ldp	x27, x28, [sp, #80]
    1490:	b	1460 <grub_efidisk_fini+0x9d0>
    1494:	nop
	...
    14a0:	stp	x29, x30, [sp, #-48]!
    14a4:	mov	x29, sp
    14a8:	stp	x19, x20, [sp, #16]
    14ac:	str	x21, [sp, #32]
    14b0:	mov	x19, x0
    14b4:	mov	x21, x1
    14b8:	ldr	x0, [x1, #8]
    14bc:	bl	2c6c <grub_efi_duplicate_device_path>
    14c0:	mov	x20, x0
    14c4:	cbz	x0, 151c <grub_efidisk_fini+0xa8c>
    14c8:	bl	2c10 <grub_efi_find_last_device_path>
    14cc:	cbz	x0, 1530 <grub_efidisk_fini+0xaa0>
    14d0:	mov	w1, #0x7f                  	// #127
    14d4:	strb	w1, [x0]
    14d8:	mov	w1, #0xffffffff            	// #-1
    14dc:	strb	w1, [x0, #1]
    14e0:	mov	w1, #0x4                   	// #4
    14e4:	strh	w1, [x0, #2]
    14e8:	cbnz	x19, 14f8 <grub_efidisk_fini+0xa68>
    14ec:	b	1510 <grub_efidisk_fini+0xa80>
    14f0:	ldr	x19, [x19, #32]
    14f4:	cbz	x19, 1510 <grub_efidisk_fini+0xa80>
    14f8:	cmp	x21, x19
    14fc:	b.eq	14f0 <grub_efidisk_fini+0xa60>  // b.none
    1500:	mov	x1, x20
    1504:	ldr	x0, [x19, #8]
    1508:	bl	3710 <grub_efi_compare_device_paths>
    150c:	cbnz	w0, 14f0 <grub_efidisk_fini+0xa60>
    1510:	mov	x0, x20
    1514:	bl	547c <grub_free>
    1518:	mov	x20, x19
    151c:	mov	x0, x20
    1520:	ldp	x19, x20, [sp, #16]
    1524:	ldr	x21, [sp, #32]
    1528:	ldp	x29, x30, [sp], #48
    152c:	ret
    1530:	mov	x20, x0
    1534:	b	151c <grub_efidisk_fini+0xa8c>
    1538:	stp	x29, x30, [sp, #-48]!
    153c:	mov	x29, sp
    1540:	stp	x19, x20, [sp, #16]
    1544:	str	x21, [sp, #32]
    1548:	mov	x20, x0
    154c:	mov	x21, x1
    1550:	ldr	x2, [x0]
    1554:	cbnz	x2, 15a8 <grub_efidisk_fini+0xb18>
    1558:	mov	x0, #0x28                  	// #40
    155c:	bl	5420 <grub_malloc>
    1560:	mov	x19, x0
    1564:	cbz	x0, 1580 <grub_efidisk_fini+0xaf0>
    1568:	mov	x2, #0x28                  	// #40
    156c:	mov	x1, x21
    1570:	bl	9854 <grub_memmove>
    1574:	ldr	x0, [x20]
    1578:	str	x0, [x19, #32]
    157c:	str	x19, [x20]
    1580:	ldp	x19, x20, [sp, #16]
    1584:	ldr	x21, [sp, #32]
    1588:	ldp	x29, x30, [sp], #48
    158c:	ret
    1590:	cmp	w0, #0x0
    1594:	b.gt	1558 <grub_efidisk_fini+0xac8>
    1598:	ldr	x2, [x20]
    159c:	add	x20, x2, #0x20
    15a0:	ldr	x2, [x2, #32]
    15a4:	cbz	x2, 1558 <grub_efidisk_fini+0xac8>
    15a8:	ldr	x0, [x2, #8]
    15ac:	bl	2c10 <grub_efi_find_last_device_path>
    15b0:	mov	x19, x0
    15b4:	ldr	x0, [x21, #8]
    15b8:	bl	2c10 <grub_efi_find_last_device_path>
    15bc:	mov	x1, x0
    15c0:	mov	x0, x19
    15c4:	bl	3710 <grub_efi_compare_device_paths>
    15c8:	cbnz	w0, 1590 <grub_efidisk_fini+0xb00>
    15cc:	ldr	x0, [x20]
    15d0:	ldr	x1, [x21, #8]
    15d4:	ldr	x0, [x0, #8]
    15d8:	bl	3710 <grub_efi_compare_device_paths>
    15dc:	cbnz	w0, 1590 <grub_efidisk_fini+0xb00>
    15e0:	b	1580 <grub_efidisk_fini+0xaf0>
    15e4:	stp	x29, x30, [sp, #-32]!
    15e8:	mov	x29, sp
    15ec:	str	x19, [sp, #16]
    15f0:	mov	x19, x2
    15f4:	cbz	x1, 163c <grub_efidisk_fini+0xbac>
    15f8:	mov	x3, x1
    15fc:	mov	x4, #0x0                   	// #0
    1600:	ldr	x5, [x3, #8]
    1604:	add	x4, x4, x5
    1608:	ldr	x3, [x3, #40]
    160c:	cbnz	x3, 1600 <grub_efidisk_fini+0xb70>
    1610:	ldr	x5, [x19, #8]
    1614:	ldr	w3, [x0, #24]
    1618:	sub	w3, w3, #0x9
    161c:	ldr	x2, [x5, #8]
    1620:	lsl	x2, x2, x3
    1624:	mov	w0, #0x0                   	// #0
    1628:	cmp	x2, x4
    162c:	b.eq	1644 <grub_efidisk_fini+0xbb4>  // b.none
    1630:	ldr	x19, [sp, #16]
    1634:	ldp	x29, x30, [sp], #32
    1638:	ret
    163c:	mov	x4, #0x0                   	// #0
    1640:	b	1610 <grub_efidisk_fini+0xb80>
    1644:	ldr	x0, [x5, #16]
    1648:	lsl	x3, x0, x3
    164c:	ldr	x2, [x1, #16]
    1650:	mov	w0, #0x0                   	// #0
    1654:	cmp	x3, x2
    1658:	b.ne	1630 <grub_efidisk_fini+0xba0>  // b.any
    165c:	mov	x0, x1
    1660:	bl	b838 <grub_partition_get_name>
    1664:	str	x0, [x19]
    1668:	mov	w0, #0x1                   	// #1
    166c:	b	1630 <grub_efidisk_fini+0xba0>

0000000000001670 <grub_efidisk_init>:
    1670:	stp	x29, x30, [sp, #-96]!
    1674:	mov	x29, sp
    1678:	adrp	x0, 0 <_start>
    167c:	ldr	x0, [x0]
    1680:	adrp	x1, 0 <_start>
    1684:	ldr	x1, [x1]
    1688:	str	x1, [x0]
    168c:	bl	1318 <grub_efidisk_fini+0x888>
    1690:	cbz	x0, 18c8 <grub_efidisk_init+0x258>
    1694:	stp	x19, x20, [sp, #16]
    1698:	stp	x21, x22, [sp, #32]
    169c:	stp	x23, x24, [sp, #48]
    16a0:	stp	x25, x26, [sp, #64]
    16a4:	mov	x20, x0
    16a8:	mov	x19, x0
    16ac:	adrp	x24, 0 <_start>
    16b0:	mov	w23, #0x1                   	// #1
    16b4:	mov	w22, #0x0                   	// #0
    16b8:	b	16f0 <grub_efidisk_init+0x80>
    16bc:	mov	w25, w23
    16c0:	b	1720 <grub_efidisk_init+0xb0>
    16c4:	ldr	x0, [x21, #16]
    16c8:	cbz	x0, 174c <grub_efidisk_init+0xdc>
    16cc:	cbz	w25, 1754 <grub_efidisk_init+0xe4>
    16d0:	ldr	x0, [x24]
    16d4:	mov	x1, x21
    16d8:	add	x0, x0, #0x8
    16dc:	bl	1538 <grub_efidisk_fini+0xaa8>
    16e0:	str	xzr, [x21, #16]
    16e4:	str	xzr, [x19, #16]
    16e8:	ldr	x19, [x19, #32]
    16ec:	cbz	x19, 1768 <grub_efidisk_init+0xf8>
    16f0:	ldr	x0, [x19, #16]
    16f4:	cbz	x0, 16e8 <grub_efidisk_init+0x78>
    16f8:	ldrb	w1, [x0]
    16fc:	and	w1, w1, #0x7f
    1700:	cmp	w1, #0x4
    1704:	b.ne	16e8 <grub_efidisk_init+0x78>  // b.any
    1708:	ldrb	w0, [x0, #1]
    170c:	cmp	w0, #0x1
    1710:	b.eq	16bc <grub_efidisk_init+0x4c>  // b.none
    1714:	mov	w25, w22
    1718:	cmp	w0, #0x2
    171c:	b.ne	16e8 <grub_efidisk_init+0x78>  // b.any
    1720:	mov	x1, x19
    1724:	mov	x0, x20
    1728:	bl	14a0 <grub_efidisk_fini+0xa10>
    172c:	mov	x21, x0
    1730:	cbz	x0, 16e8 <grub_efidisk_init+0x78>
    1734:	mov	x1, x0
    1738:	mov	x0, x20
    173c:	bl	14a0 <grub_efidisk_fini+0xa10>
    1740:	cbz	x0, 16c4 <grub_efidisk_init+0x54>
    1744:	str	xzr, [x19, #16]
    1748:	b	16e8 <grub_efidisk_init+0x78>
    174c:	str	xzr, [x19, #16]
    1750:	b	16e8 <grub_efidisk_init+0x78>
    1754:	ldr	x0, [x24]
    1758:	mov	x1, x21
    175c:	add	x0, x0, #0x10
    1760:	bl	1538 <grub_efidisk_fini+0xaa8>
    1764:	b	16e0 <grub_efidisk_init+0x70>
    1768:	mov	x19, x20
    176c:	mov	w26, #0x41d0                	// #16848
    1770:	movk	w26, #0x604, lsl #16
    1774:	mov	w25, #0x41d0                	// #16848
    1778:	movk	w25, #0x700, lsl #16
    177c:	mov	w24, #0x41d1                	// #16849
    1780:	movk	w24, #0x701, lsl #16
    1784:	mov	w23, #0x85eb                	// #34283
    1788:	movk	w23, #0x2b05, lsl #16
    178c:	mov	x22, #0x8c8b                	// #35979
    1790:	movk	x22, #0x1be2, lsl #16
    1794:	movk	x22, #0xae01, lsl #32
    1798:	movk	x22, #0xb7f2, lsl #48
    179c:	b	1854 <grub_efidisk_init+0x1e4>
    17a0:	ldrb	w0, [x21, #1]
    17a4:	cmp	w0, #0x3
    17a8:	b.eq	17b8 <grub_efidisk_init+0x148>  // b.none
    17ac:	ldr	x0, [x19, #24]
    17b0:	ldr	x0, [x0, #8]
    17b4:	b	1884 <grub_efidisk_init+0x214>
    17b8:	str	w23, [sp, #80]
    17bc:	mov	w0, #0xffffd8b8            	// #-10056
    17c0:	strh	w0, [sp, #84]
    17c4:	mov	w0, #0x49a9                	// #18857
    17c8:	strh	w0, [sp, #86]
    17cc:	str	x22, [sp, #88]
    17d0:	ldrh	w0, [x21, #2]
    17d4:	cmp	w0, #0x14
    17d8:	b.ne	186c <grub_efidisk_init+0x1fc>  // b.any
    17dc:	mov	x2, #0x10                  	// #16
    17e0:	add	x1, sp, #0x50
    17e4:	add	x0, x21, #0x4
    17e8:	bl	9918 <grub_memcmp>
    17ec:	cbnz	w0, 186c <grub_efidisk_init+0x1fc>
    17f0:	mov	x1, x19
    17f4:	mov	x0, x20
    17f8:	bl	14a0 <grub_efidisk_fini+0xa10>
    17fc:	cbnz	x0, 184c <grub_efidisk_init+0x1dc>
    1800:	b	186c <grub_efidisk_init+0x1fc>
    1804:	ldrb	w1, [x21, #1]
    1808:	cmp	w1, #0x1
    180c:	b.ne	1884 <grub_efidisk_init+0x214>  // b.any
    1810:	ldr	w1, [x21, #4]
    1814:	cmp	w1, w26
    1818:	ccmp	w1, w25, #0x4, ne  // ne = any
    181c:	ccmp	w1, w24, #0x4, ne  // ne = any
    1820:	b.ne	1884 <grub_efidisk_init+0x214>  // b.any
    1824:	mov	x1, x19
    1828:	adrp	x0, 0 <_start>
    182c:	ldr	x0, [x0]
    1830:	bl	1538 <grub_efidisk_fini+0xaa8>
    1834:	b	184c <grub_efidisk_init+0x1dc>
    1838:	adrp	x0, 0 <_start>
    183c:	ldr	x0, [x0]
    1840:	mov	x1, x19
    1844:	add	x0, x0, #0x8
    1848:	bl	1538 <grub_efidisk_fini+0xaa8>
    184c:	ldr	x19, [x19, #32]
    1850:	cbz	x19, 18b0 <grub_efidisk_init+0x240>
    1854:	ldr	x21, [x19, #16]
    1858:	cbz	x21, 184c <grub_efidisk_init+0x1dc>
    185c:	ldrb	w0, [x21]
    1860:	and	w0, w0, #0x7f
    1864:	cmp	w0, #0x4
    1868:	b.eq	17a0 <grub_efidisk_init+0x130>  // b.none
    186c:	ldr	x0, [x19, #24]
    1870:	ldr	x0, [x0, #8]
    1874:	ldrb	w1, [x21]
    1878:	and	w1, w1, #0x7f
    187c:	cmp	w1, #0x2
    1880:	b.eq	1804 <grub_efidisk_init+0x194>  // b.none
    1884:	ldrb	w1, [x0, #7]
    1888:	cbz	w1, 1838 <grub_efidisk_init+0x1c8>
    188c:	ldr	w0, [x0, #12]
    1890:	cmp	w0, #0x200
    1894:	b.ls	1838 <grub_efidisk_init+0x1c8>  // b.plast
    1898:	adrp	x0, 0 <_start>
    189c:	ldr	x0, [x0]
    18a0:	mov	x1, x19
    18a4:	add	x0, x0, #0x10
    18a8:	bl	1538 <grub_efidisk_fini+0xaa8>
    18ac:	b	184c <grub_efidisk_init+0x1dc>
    18b0:	mov	x0, x20
    18b4:	bl	a60 <grub_arm64_dl_get_tramp_got_size+0x130>
    18b8:	ldp	x19, x20, [sp, #16]
    18bc:	ldp	x21, x22, [sp, #32]
    18c0:	ldp	x23, x24, [sp, #48]
    18c4:	ldp	x25, x26, [sp, #64]
    18c8:	adrp	x0, 0 <_start>
    18cc:	ldr	x0, [x0]
    18d0:	bl	6810 <grub_disk_dev_register>
    18d4:	ldp	x29, x30, [sp], #96
    18d8:	ret
    18dc:	nop
	...

0000000000001900 <grub_efidisk_get_device_handle>:
    1900:	stp	x29, x30, [sp, #-96]!
    1904:	mov	x29, sp
    1908:	stp	x21, x22, [sp, #32]
    190c:	mov	x21, x0
    1910:	ldr	x0, [x0, #8]
    1914:	ldr	w0, [x0, #8]
    1918:	cmp	w0, #0x3
    191c:	b.ne	1a98 <grub_efidisk_get_device_handle+0x198>  // b.any
    1920:	ldr	x22, [x21, #64]
    1924:	ldr	x0, [x21]
    1928:	ldrb	w0, [x0]
    192c:	cmp	w0, #0x66
    1930:	b.eq	1954 <grub_efidisk_get_device_handle+0x54>  // b.none
    1934:	cmp	w0, #0x68
    1938:	b.eq	1964 <grub_efidisk_get_device_handle+0x64>  // b.none
    193c:	cmp	w0, #0x63
    1940:	b.eq	195c <grub_efidisk_get_device_handle+0x5c>  // b.none
    1944:	mov	x0, #0x0                   	// #0
    1948:	ldp	x21, x22, [sp, #32]
    194c:	ldp	x29, x30, [sp], #96
    1950:	ret
    1954:	ldr	x0, [x22]
    1958:	b	1948 <grub_efidisk_get_device_handle+0x48>
    195c:	ldr	x0, [x22]
    1960:	b	1948 <grub_efidisk_get_device_handle+0x48>
    1964:	ldr	x0, [x21, #40]
    1968:	cbz	x0, 199c <grub_efidisk_get_device_handle+0x9c>
    196c:	stp	x19, x20, [sp, #16]
    1970:	stp	x25, x26, [sp, #64]
    1974:	bl	1318 <grub_efidisk_fini+0x888>
    1978:	mov	x26, x0
    197c:	cbz	x0, 1a90 <grub_efidisk_get_device_handle+0x190>
    1980:	stp	x23, x24, [sp, #48]
    1984:	str	x27, [sp, #80]
    1988:	mov	x19, x0
    198c:	mov	w25, #0x7f                  	// #127
    1990:	mov	w24, #0xffffffff            	// #-1
    1994:	mov	w23, #0x4                   	// #4
    1998:	b	19b4 <grub_efidisk_get_device_handle+0xb4>
    199c:	ldr	x0, [x22]
    19a0:	b	1948 <grub_efidisk_get_device_handle+0x48>
    19a4:	mov	x2, #0x0                   	// #0
    19a8:	b	1a34 <grub_efidisk_get_device_handle+0x134>
    19ac:	ldr	x19, [x19, #32]
    19b0:	cbz	x19, 1a70 <grub_efidisk_get_device_handle+0x170>
    19b4:	ldr	x0, [x19, #8]
    19b8:	bl	2c6c <grub_efi_duplicate_device_path>
    19bc:	mov	x20, x0
    19c0:	cbz	x0, 19ac <grub_efidisk_get_device_handle+0xac>
    19c4:	bl	2c10 <grub_efi_find_last_device_path>
    19c8:	cbz	x0, 19ac <grub_efidisk_get_device_handle+0xac>
    19cc:	strb	w25, [x0]
    19d0:	strb	w24, [x0, #1]
    19d4:	strh	w23, [x0, #2]
    19d8:	ldr	x1, [x22, #8]
    19dc:	mov	x0, x20
    19e0:	bl	3710 <grub_efi_compare_device_paths>
    19e4:	mov	w27, w0
    19e8:	mov	x0, x20
    19ec:	bl	547c <grub_free>
    19f0:	cbnz	w27, 19ac <grub_efidisk_get_device_handle+0xac>
    19f4:	ldr	x1, [x19, #16]
    19f8:	ldrb	w0, [x1]
    19fc:	and	w0, w0, #0x7f
    1a00:	cmp	w0, #0x4
    1a04:	b.ne	19ac <grub_efidisk_get_device_handle+0xac>  // b.any
    1a08:	ldrb	w0, [x1, #1]
    1a0c:	cmp	w0, #0x1
    1a10:	b.ne	19ac <grub_efidisk_get_device_handle+0xac>  // b.any
    1a14:	ldr	x4, [x21, #40]
    1a18:	cbz	x4, 19a4 <grub_efidisk_get_device_handle+0xa4>
    1a1c:	mov	x0, x4
    1a20:	mov	x2, #0x0                   	// #0
    1a24:	ldr	x3, [x0, #8]
    1a28:	add	x2, x2, x3
    1a2c:	ldr	x0, [x0, #40]
    1a30:	cbnz	x0, 1a24 <grub_efidisk_get_device_handle+0x124>
    1a34:	ldr	w0, [x21, #24]
    1a38:	sub	w0, w0, #0x9
    1a3c:	ldr	x3, [x1, #8]
    1a40:	lsl	x3, x3, x0
    1a44:	cmp	x3, x2
    1a48:	b.ne	19ac <grub_efidisk_get_device_handle+0xac>  // b.any
    1a4c:	ldr	x1, [x1, #16]
    1a50:	lsl	x0, x1, x0
    1a54:	ldr	x1, [x4, #16]
    1a58:	cmp	x0, x1
    1a5c:	b.ne	19ac <grub_efidisk_get_device_handle+0xac>  // b.any
    1a60:	ldr	x19, [x19]
    1a64:	ldp	x23, x24, [sp, #48]
    1a68:	ldr	x27, [sp, #80]
    1a6c:	b	1a78 <grub_efidisk_get_device_handle+0x178>
    1a70:	ldp	x23, x24, [sp, #48]
    1a74:	ldr	x27, [sp, #80]
    1a78:	mov	x0, x26
    1a7c:	bl	a60 <grub_arm64_dl_get_tramp_got_size+0x130>
    1a80:	mov	x0, x19
    1a84:	ldp	x19, x20, [sp, #16]
    1a88:	ldp	x25, x26, [sp, #64]
    1a8c:	b	1948 <grub_efidisk_get_device_handle+0x48>
    1a90:	mov	x19, x0
    1a94:	b	1a78 <grub_efidisk_get_device_handle+0x178>
    1a98:	mov	x0, #0x0                   	// #0
    1a9c:	b	1948 <grub_efidisk_get_device_handle+0x48>

0000000000001aa0 <grub_efidisk_get_device_name>:
    1aa0:	stp	x29, x30, [sp, #-96]!
    1aa4:	mov	x29, sp
    1aa8:	stp	x19, x20, [sp, #16]
    1aac:	bl	2be0 <grub_efi_get_device_path>
    1ab0:	mov	x19, x0
    1ab4:	cbz	x0, 1e00 <grub_efidisk_get_device_name+0x360>
    1ab8:	bl	2c10 <grub_efi_find_last_device_path>
    1abc:	mov	x20, x0
    1ac0:	cbz	x0, 1e58 <grub_efidisk_get_device_name+0x3b8>
    1ac4:	ldrb	w0, [x0]
    1ac8:	and	w0, w0, #0x7f
    1acc:	cmp	w0, #0x4
    1ad0:	b.ne	1ae8 <grub_efidisk_get_device_name+0x48>  // b.any
    1ad4:	ldrb	w0, [x20, #1]
    1ad8:	sub	w0, w0, #0x1
    1adc:	and	w0, w0, #0xff
    1ae0:	cmp	w0, #0x1
    1ae4:	b.ls	1b88 <grub_efidisk_get_device_name+0xe8>  // b.plast
    1ae8:	stp	x21, x22, [sp, #32]
    1aec:	adrp	x0, 0 <_start>
    1af0:	ldr	x0, [x0]
    1af4:	ldr	x20, [x0, #8]
    1af8:	cbz	x20, 1b1c <grub_efidisk_get_device_name+0x7c>
    1afc:	mov	w21, #0x0                   	// #0
    1b00:	mov	x1, x19
    1b04:	ldr	x0, [x20, #8]
    1b08:	bl	3710 <grub_efi_compare_device_paths>
    1b0c:	cbz	w0, 1dd0 <grub_efidisk_get_device_name+0x330>
    1b10:	ldr	x20, [x20, #32]
    1b14:	add	w21, w21, #0x1
    1b18:	cbnz	x20, 1b00 <grub_efidisk_get_device_name+0x60>
    1b1c:	adrp	x0, 0 <_start>
    1b20:	ldr	x0, [x0]
    1b24:	ldr	x20, [x0]
    1b28:	mov	w21, #0x0                   	// #0
    1b2c:	cbz	x20, 1b4c <grub_efidisk_get_device_name+0xac>
    1b30:	mov	x1, x19
    1b34:	ldr	x0, [x20, #8]
    1b38:	bl	3710 <grub_efi_compare_device_paths>
    1b3c:	cbz	w0, 1e10 <grub_efidisk_get_device_name+0x370>
    1b40:	ldr	x20, [x20, #32]
    1b44:	add	w21, w21, #0x1
    1b48:	cbnz	x20, 1b30 <grub_efidisk_get_device_name+0x90>
    1b4c:	adrp	x0, 0 <_start>
    1b50:	ldr	x0, [x0]
    1b54:	ldr	x20, [x0, #16]
    1b58:	mov	w21, #0x0                   	// #0
    1b5c:	cbz	x20, 1b7c <grub_efidisk_get_device_name+0xdc>
    1b60:	mov	x1, x19
    1b64:	ldr	x0, [x20, #8]
    1b68:	bl	3710 <grub_efi_compare_device_paths>
    1b6c:	cbz	w0, 1e34 <grub_efidisk_get_device_name+0x394>
    1b70:	ldr	x20, [x20, #32]
    1b74:	add	w21, w21, #0x1
    1b78:	cbnz	x20, 1b60 <grub_efidisk_get_device_name+0xc0>
    1b7c:	mov	x19, #0x0                   	// #0
    1b80:	ldp	x21, x22, [sp, #32]
    1b84:	b	1e00 <grub_efidisk_get_device_name+0x360>
    1b88:	mov	x0, x19
    1b8c:	bl	2c6c <grub_efi_duplicate_device_path>
    1b90:	mov	x19, x0
    1b94:	cbz	x0, 1e00 <grub_efidisk_get_device_name+0x360>
    1b98:	stp	x21, x22, [sp, #32]
    1b9c:	str	x23, [sp, #48]
    1ba0:	mov	w23, #0x7f                  	// #127
    1ba4:	mov	w22, #0xffffffff            	// #-1
    1ba8:	mov	w21, #0x4                   	// #4
    1bac:	b	1bbc <grub_efidisk_get_device_name+0x11c>
    1bb0:	strb	w23, [x0]
    1bb4:	strb	w22, [x0, #1]
    1bb8:	strh	w21, [x0, #2]
    1bbc:	mov	x0, x19
    1bc0:	bl	2c10 <grub_efi_find_last_device_path>
    1bc4:	cbz	x0, 1bec <grub_efidisk_get_device_name+0x14c>
    1bc8:	ldrb	w1, [x0]
    1bcc:	and	w1, w1, #0x7f
    1bd0:	cmp	w1, #0x4
    1bd4:	b.ne	1bec <grub_efidisk_get_device_name+0x14c>  // b.any
    1bd8:	ldrb	w1, [x0, #1]
    1bdc:	sub	w1, w1, #0x1
    1be0:	and	w1, w1, #0xff
    1be4:	cmp	w1, #0x1
    1be8:	b.ls	1bb0 <grub_efidisk_get_device_name+0x110>  // b.plast
    1bec:	adrp	x0, 0 <_start>
    1bf0:	ldr	x0, [x0]
    1bf4:	ldr	x21, [x0, #8]
    1bf8:	cbz	x21, 1c1c <grub_efidisk_get_device_name+0x17c>
    1bfc:	mov	w22, #0x0                   	// #0
    1c00:	mov	x1, x19
    1c04:	ldr	x0, [x21, #8]
    1c08:	bl	3710 <grub_efi_compare_device_paths>
    1c0c:	cbz	w0, 1c94 <grub_efidisk_get_device_name+0x1f4>
    1c10:	ldr	x21, [x21, #32]
    1c14:	add	w22, w22, #0x1
    1c18:	cbnz	x21, 1c00 <grub_efidisk_get_device_name+0x160>
    1c1c:	adrp	x0, 0 <_start>
    1c20:	ldr	x0, [x0]
    1c24:	ldr	x21, [x0]
    1c28:	mov	w22, #0x0                   	// #0
    1c2c:	cbz	x21, 1c4c <grub_efidisk_get_device_name+0x1ac>
    1c30:	mov	x1, x19
    1c34:	ldr	x0, [x21, #8]
    1c38:	bl	3710 <grub_efi_compare_device_paths>
    1c3c:	cbz	w0, 1d48 <grub_efidisk_get_device_name+0x2a8>
    1c40:	ldr	x21, [x21, #32]
    1c44:	add	w22, w22, #0x1
    1c48:	cbnz	x21, 1c30 <grub_efidisk_get_device_name+0x190>
    1c4c:	adrp	x0, 0 <_start>
    1c50:	ldr	x0, [x0]
    1c54:	ldr	x21, [x0, #16]
    1c58:	mov	w22, #0x0                   	// #0
    1c5c:	cbz	x21, 1c7c <grub_efidisk_get_device_name+0x1dc>
    1c60:	mov	x1, x19
    1c64:	ldr	x0, [x21, #8]
    1c68:	bl	3710 <grub_efi_compare_device_paths>
    1c6c:	cbz	w0, 1d6c <grub_efidisk_get_device_name+0x2cc>
    1c70:	ldr	x21, [x21, #32]
    1c74:	add	w22, w22, #0x1
    1c78:	cbnz	x21, 1c60 <grub_efidisk_get_device_name+0x1c0>
    1c7c:	mov	x0, x19
    1c80:	bl	547c <grub_free>
    1c84:	mov	x19, #0x0                   	// #0
    1c88:	ldp	x21, x22, [sp, #32]
    1c8c:	ldr	x23, [sp, #48]
    1c90:	b	1e00 <grub_efidisk_get_device_name+0x360>
    1c94:	mov	w3, w22
    1c98:	adrp	x0, 0 <_start>
    1c9c:	ldr	x2, [x0]
    1ca0:	mov	x1, #0xc                   	// #12
    1ca4:	add	x0, sp, #0x51
    1ca8:	bl	ae14 <grub_snprintf>
    1cac:	mov	w0, #0x68                  	// #104
    1cb0:	strb	w0, [sp, #80]
    1cb4:	add	x0, sp, #0x50
    1cb8:	bl	6940 <grub_disk_open>
    1cbc:	mov	x21, x0
    1cc0:	mov	x0, x19
    1cc4:	bl	547c <grub_free>
    1cc8:	cbz	x21, 1dc0 <grub_efidisk_get_device_name+0x320>
    1ccc:	str	xzr, [sp, #64]
    1cd0:	str	x20, [sp, #72]
    1cd4:	ldr	x0, [x20, #8]
    1cd8:	cbnz	x0, 1cfc <grub_efidisk_get_device_name+0x25c>
    1cdc:	ldr	w0, [x21, #24]
    1ce0:	sub	w0, w0, #0x9
    1ce4:	ldr	x19, [x20, #16]
    1ce8:	lsl	x19, x19, x0
    1cec:	mov	x0, x21
    1cf0:	bl	6f50 <grub_disk_get_size>
    1cf4:	cmp	x19, x0
    1cf8:	b.eq	1d90 <grub_efidisk_get_device_name+0x2f0>  // b.none
    1cfc:	add	x2, sp, #0x40
    1d00:	adrp	x0, 0 <_start>
    1d04:	ldr	x1, [x0]
    1d08:	mov	x0, x21
    1d0c:	bl	b790 <grub_partition_iterate>
    1d10:	ldr	x2, [sp, #64]
    1d14:	cbz	x2, 1da0 <grub_efidisk_get_device_name+0x300>
    1d18:	ldr	x1, [x21]
    1d1c:	adrp	x0, 0 <_start>
    1d20:	ldr	x0, [x0]
    1d24:	bl	af08 <grub_xasprintf>
    1d28:	mov	x19, x0
    1d2c:	ldr	x0, [sp, #64]
    1d30:	bl	547c <grub_free>
    1d34:	mov	x0, x21
    1d38:	bl	6888 <grub_disk_close>
    1d3c:	ldp	x21, x22, [sp, #32]
    1d40:	ldr	x23, [sp, #48]
    1d44:	b	1e00 <grub_efidisk_get_device_name+0x360>
    1d48:	mov	w3, w22
    1d4c:	adrp	x0, 0 <_start>
    1d50:	ldr	x2, [x0]
    1d54:	mov	x1, #0xc                   	// #12
    1d58:	add	x0, sp, #0x51
    1d5c:	bl	ae14 <grub_snprintf>
    1d60:	mov	w0, #0x66                  	// #102
    1d64:	strb	w0, [sp, #80]
    1d68:	b	1cb4 <grub_efidisk_get_device_name+0x214>
    1d6c:	mov	w3, w22
    1d70:	adrp	x0, 0 <_start>
    1d74:	ldr	x2, [x0]
    1d78:	mov	x1, #0xc                   	// #12
    1d7c:	add	x0, sp, #0x51
    1d80:	bl	ae14 <grub_snprintf>
    1d84:	mov	w0, #0x63                  	// #99
    1d88:	strb	w0, [sp, #80]
    1d8c:	b	1cb4 <grub_efidisk_get_device_name+0x214>
    1d90:	ldr	x0, [x21]
    1d94:	bl	9c18 <grub_strdup>
    1d98:	mov	x19, x0
    1d9c:	b	1d34 <grub_efidisk_get_device_name+0x294>
    1da0:	mov	x0, x21
    1da4:	bl	6888 <grub_disk_close>
    1da8:	add	x0, sp, #0x50
    1dac:	bl	9c18 <grub_strdup>
    1db0:	mov	x19, x0
    1db4:	ldp	x21, x22, [sp, #32]
    1db8:	ldr	x23, [sp, #48]
    1dbc:	b	1e00 <grub_efidisk_get_device_name+0x360>
    1dc0:	mov	x19, x21
    1dc4:	ldp	x21, x22, [sp, #32]
    1dc8:	ldr	x23, [sp, #48]
    1dcc:	b	1e00 <grub_efidisk_get_device_name+0x360>
    1dd0:	mov	w3, w21
    1dd4:	adrp	x0, 0 <_start>
    1dd8:	ldr	x2, [x0]
    1ddc:	mov	x1, #0xc                   	// #12
    1de0:	add	x0, sp, #0x51
    1de4:	bl	ae14 <grub_snprintf>
    1de8:	mov	w0, #0x68                  	// #104
    1dec:	strb	w0, [sp, #80]
    1df0:	add	x0, sp, #0x50
    1df4:	bl	9c18 <grub_strdup>
    1df8:	mov	x19, x0
    1dfc:	ldp	x21, x22, [sp, #32]
    1e00:	mov	x0, x19
    1e04:	ldp	x19, x20, [sp, #16]
    1e08:	ldp	x29, x30, [sp], #96
    1e0c:	ret
    1e10:	mov	w3, w21
    1e14:	adrp	x0, 0 <_start>
    1e18:	ldr	x2, [x0]
    1e1c:	mov	x1, #0xc                   	// #12
    1e20:	add	x0, sp, #0x51
    1e24:	bl	ae14 <grub_snprintf>
    1e28:	mov	w0, #0x66                  	// #102
    1e2c:	strb	w0, [sp, #80]
    1e30:	b	1df0 <grub_efidisk_get_device_name+0x350>
    1e34:	mov	w3, w21
    1e38:	adrp	x0, 0 <_start>
    1e3c:	ldr	x2, [x0]
    1e40:	mov	x1, #0xc                   	// #12
    1e44:	add	x0, sp, #0x51
    1e48:	bl	ae14 <grub_snprintf>
    1e4c:	mov	w0, #0x63                  	// #99
    1e50:	strb	w0, [sp, #80]
    1e54:	b	1df0 <grub_efidisk_get_device_name+0x350>
    1e58:	mov	x19, x0
    1e5c:	b	1e00 <grub_efidisk_get_device_name+0x360>
	...
    1e80:	sub	sp, sp, #0x60
    1e84:	stp	x29, x30, [sp, #48]
    1e88:	add	x29, sp, #0x30
    1e8c:	stp	x19, x20, [sp, #64]
    1e90:	str	x21, [sp, #80]
    1e94:	mov	x19, x1
    1e98:	ldrh	w21, [x1, #2]
    1e9c:	sub	w20, w21, #0x14
    1ea0:	str	w20, [sp, #40]
    1ea4:	ldrb	w1, [x1, #19]
    1ea8:	str	w1, [sp, #32]
    1eac:	ldrb	w1, [x19, #18]
    1eb0:	str	w1, [sp, #24]
    1eb4:	ldrb	w1, [x19, #17]
    1eb8:	str	w1, [sp, #16]
    1ebc:	ldrb	w1, [x19, #16]
    1ec0:	str	w1, [sp, #8]
    1ec4:	ldrb	w1, [x19, #15]
    1ec8:	str	w1, [sp]
    1ecc:	ldrb	w7, [x19, #14]
    1ed0:	ldrb	w6, [x19, #13]
    1ed4:	ldrb	w5, [x19, #12]
    1ed8:	ldrh	w4, [x19, #10]
    1edc:	ldrh	w3, [x19, #8]
    1ee0:	ldr	w2, [x19, #4]
    1ee4:	mov	x1, x0
    1ee8:	adrp	x0, 0 <_start>
    1eec:	ldr	x0, [x0]
    1ef0:	bl	abc0 <grub_err_printf>
    1ef4:	ldrh	w0, [x19, #2]
    1ef8:	cmp	w0, #0x14
    1efc:	b.ls	1f2c <grub_efidisk_get_device_name+0x48c>  // b.plast
    1f00:	cbz	w20, 1f2c <grub_efidisk_get_device_name+0x48c>
    1f04:	add	x20, x19, #0x14
    1f08:	add	x19, x19, #0x15
    1f0c:	sub	w21, w21, #0x15
    1f10:	add	x19, x19, x21
    1f14:	adrp	x21, 0 <_start>
    1f18:	ldrb	w1, [x20], #1
    1f1c:	ldr	x0, [x21]
    1f20:	bl	abc0 <grub_err_printf>
    1f24:	cmp	x20, x19
    1f28:	b.ne	1f18 <grub_efidisk_get_device_name+0x478>  // b.any
    1f2c:	adrp	x0, 0 <_start>
    1f30:	ldr	x0, [x0]
    1f34:	bl	abc0 <grub_err_printf>
    1f38:	ldp	x19, x20, [sp, #64]
    1f3c:	ldr	x21, [sp, #80]
    1f40:	ldp	x29, x30, [sp, #48]
    1f44:	add	sp, sp, #0x60
    1f48:	ret
    1f4c:	nop
	...

0000000000001f68 <grub_efi_locate_protocol>:
    1f68:	stp	x29, x30, [sp, #-32]!
    1f6c:	mov	x29, sp
    1f70:	adrp	x2, 0 <_start>
    1f74:	ldr	x2, [x2]
    1f78:	ldr	x2, [x2]
    1f7c:	ldr	x2, [x2, #96]
    1f80:	ldr	x3, [x2, #320]
    1f84:	add	x2, sp, #0x18
    1f88:	blr	x3
    1f8c:	cmp	x0, #0x0
    1f90:	ldr	x0, [sp, #24]
    1f94:	csel	x0, x0, xzr, eq  // eq = none
    1f98:	ldp	x29, x30, [sp], #32
    1f9c:	ret
	...

0000000000001fa8 <grub_efi_locate_handle>:
    1fa8:	stp	x29, x30, [sp, #-80]!
    1fac:	mov	x29, sp
    1fb0:	stp	x19, x20, [sp, #16]
    1fb4:	stp	x21, x22, [sp, #32]
    1fb8:	stp	x23, x24, [sp, #48]
    1fbc:	mov	w20, w0
    1fc0:	mov	x21, x1
    1fc4:	mov	x22, x2
    1fc8:	mov	x23, x3
    1fcc:	mov	x0, #0x40                  	// #64
    1fd0:	str	x0, [sp, #72]
    1fd4:	bl	5420 <grub_malloc>
    1fd8:	mov	x19, x0
    1fdc:	cbz	x0, 202c <grub_efi_locate_handle+0x84>
    1fe0:	adrp	x0, 0 <_start>
    1fe4:	ldr	x0, [x0]
    1fe8:	ldr	x0, [x0]
    1fec:	ldr	x24, [x0, #96]
    1ff0:	ldr	x5, [x24, #176]
    1ff4:	mov	x4, x19
    1ff8:	add	x3, sp, #0x48
    1ffc:	mov	x2, x22
    2000:	mov	x1, x21
    2004:	mov	w0, w20
    2008:	blr	x5
    200c:	mov	x1, #0x5                   	// #5
    2010:	movk	x1, #0x8000, lsl #48
    2014:	cmp	x0, x1
    2018:	b.eq	2044 <grub_efi_locate_handle+0x9c>  // b.none
    201c:	cbnz	x0, 207c <grub_efi_locate_handle+0xd4>
    2020:	ldr	x0, [sp, #72]
    2024:	lsr	x0, x0, #3
    2028:	str	x0, [x23]
    202c:	mov	x0, x19
    2030:	ldp	x19, x20, [sp, #16]
    2034:	ldp	x21, x22, [sp, #32]
    2038:	ldp	x23, x24, [sp, #48]
    203c:	ldp	x29, x30, [sp], #80
    2040:	ret
    2044:	mov	x0, x19
    2048:	bl	547c <grub_free>
    204c:	ldr	x0, [sp, #72]
    2050:	bl	5420 <grub_malloc>
    2054:	mov	x19, x0
    2058:	cbz	x0, 202c <grub_efi_locate_handle+0x84>
    205c:	ldr	x5, [x24, #176]
    2060:	mov	x4, x0
    2064:	add	x3, sp, #0x48
    2068:	mov	x2, x22
    206c:	mov	x1, x21
    2070:	mov	w0, w20
    2074:	blr	x5
    2078:	b	201c <grub_efi_locate_handle+0x74>
    207c:	mov	x0, x19
    2080:	bl	547c <grub_free>
    2084:	mov	x19, #0x0                   	// #0
    2088:	b	202c <grub_efi_locate_handle+0x84>
    208c:	nop
	...

0000000000002098 <grub_efi_open_protocol>:
    2098:	stp	x29, x30, [sp, #-32]!
    209c:	mov	x29, sp
    20a0:	adrp	x3, 0 <_start>
    20a4:	ldr	x3, [x3]
    20a8:	adrp	x4, 0 <_start>
    20ac:	ldr	x4, [x4]
    20b0:	ldr	x4, [x4]
    20b4:	ldr	x4, [x4, #96]
    20b8:	ldr	x6, [x4, #280]
    20bc:	mov	w5, w2
    20c0:	mov	x4, #0x0                   	// #0
    20c4:	ldr	x3, [x3]
    20c8:	add	x2, sp, #0x18
    20cc:	blr	x6
    20d0:	cmp	x0, #0x0
    20d4:	ldr	x0, [sp, #24]
    20d8:	csel	x0, x0, xzr, eq  // eq = none
    20dc:	ldp	x29, x30, [sp], #32
    20e0:	ret
    20e4:	nop
	...

00000000000020f8 <grub_efi_set_text_mode>:
    20f8:	stp	x29, x30, [sp, #-48]!
    20fc:	mov	x29, sp
    2100:	stp	x19, x20, [sp, #16]
    2104:	mov	w20, w0
    2108:	mov	x1, #0x0                   	// #0
    210c:	adrp	x0, 0 <_start>
    2110:	ldr	x0, [x0]
    2114:	bl	1f68 <grub_efi_locate_protocol>
    2118:	cbz	x0, 2178 <grub_efi_set_text_mode+0x80>
    211c:	mov	x19, x0
    2120:	ldr	x4, [x0]
    2124:	mov	x3, #0x0                   	// #0
    2128:	mov	x2, #0x0                   	// #0
    212c:	add	x1, sp, #0x2c
    2130:	blr	x4
    2134:	mov	x1, x0
    2138:	mov	w0, #0x0                   	// #0
    213c:	cbnz	x1, 216c <grub_efi_set_text_mode+0x74>
    2140:	cmp	w20, #0x0
    2144:	cset	w1, eq  // eq = none
    2148:	mov	w0, #0x1                   	// #1
    214c:	ldr	w2, [sp, #44]
    2150:	cmp	w2, w1
    2154:	b.eq	216c <grub_efi_set_text_mode+0x74>  // b.none
    2158:	ldr	x2, [x19, #8]
    215c:	mov	x0, x19
    2160:	blr	x2
    2164:	cmp	x0, #0x0
    2168:	cset	w0, eq  // eq = none
    216c:	ldp	x19, x20, [sp, #16]
    2170:	ldp	x29, x30, [sp], #48
    2174:	ret
    2178:	mov	w0, #0x1                   	// #1
    217c:	b	216c <grub_efi_set_text_mode+0x74>
	...

0000000000002188 <grub_efi_stall>:
    2188:	stp	x29, x30, [sp, #-16]!
    218c:	mov	x29, sp
    2190:	adrp	x1, 0 <_start>
    2194:	ldr	x1, [x1]
    2198:	ldr	x1, [x1]
    219c:	ldr	x1, [x1, #96]
    21a0:	ldr	x1, [x1, #248]
    21a4:	blr	x1
    21a8:	ldp	x29, x30, [sp], #16
    21ac:	ret
	...

00000000000021b8 <grub_efi_get_loaded_image>:
    21b8:	stp	x29, x30, [sp, #-16]!
    21bc:	mov	x29, sp
    21c0:	adrp	x1, 0 <_start>
    21c4:	ldr	x1, [x1]
    21c8:	mov	w2, #0x2                   	// #2
    21cc:	add	x1, x1, #0x10
    21d0:	bl	2098 <grub_efi_open_protocol>
    21d4:	ldp	x29, x30, [sp], #16
    21d8:	ret
    21dc:	nop
	...

00000000000021e8 <grub_reboot>:
    21e8:	stp	x29, x30, [sp, #-16]!
    21ec:	mov	x29, sp
    21f0:	mov	w0, #0x1                   	// #1
    21f4:	bl	b0 <grub_machine_fini>
    21f8:	adrp	x0, 0 <_start>
    21fc:	ldr	x0, [x0]
    2200:	ldr	x0, [x0]
    2204:	ldr	x0, [x0, #88]
    2208:	ldr	x4, [x0, #104]
    220c:	mov	x3, #0x0                   	// #0
    2210:	mov	x2, #0x0                   	// #0
    2214:	mov	x1, #0x0                   	// #0
    2218:	mov	w0, #0x0                   	// #0
    221c:	blr	x4
    2220:	b	2220 <grub_reboot+0x38>
    2224:	nop
	...

0000000000002230 <grub_exit>:
    2230:	stp	x29, x30, [sp, #-16]!
    2234:	mov	x29, sp
    2238:	mov	w0, #0x1                   	// #1
    223c:	bl	b0 <grub_machine_fini>
    2240:	adrp	x0, 0 <_start>
    2244:	ldr	x0, [x0]
    2248:	adrp	x1, 0 <_start>
    224c:	ldr	x1, [x1]
    2250:	ldr	x1, [x1]
    2254:	ldr	x1, [x1, #96]
    2258:	ldr	x4, [x1, #216]
    225c:	mov	x3, #0x0                   	// #0
    2260:	mov	x2, #0x0                   	// #0
    2264:	mov	x1, #0x0                   	// #0
    2268:	ldr	x0, [x0]
    226c:	blr	x4
	...

0000000000002280 <grub_efi_set_virtual_address_map>:
    2280:	stp	x29, x30, [sp, #-16]!
    2284:	mov	x29, sp
    2288:	adrp	x4, 0 <_start>
    228c:	ldr	x4, [x4]
    2290:	ldr	x4, [x4]
    2294:	ldr	x4, [x4, #88]
    2298:	ldr	x4, [x4, #56]
    229c:	blr	x4
    22a0:	cbnz	x0, 22b0 <grub_efi_set_virtual_address_map+0x30>
    22a4:	mov	w0, #0x0                   	// #0
    22a8:	ldp	x29, x30, [sp], #16
    22ac:	ret
    22b0:	adrp	x0, 0 <_start>
    22b4:	ldr	x1, [x0]
    22b8:	mov	w0, #0x1d                  	// #29
    22bc:	bl	8408 <grub_error>
    22c0:	b	22a8 <grub_efi_set_virtual_address_map+0x28>
    22c4:	nop
	...

00000000000022d8 <grub_efi_set_variable>:
    22d8:	stp	x29, x30, [sp, #-64]!
    22dc:	mov	x29, sp
    22e0:	stp	x19, x20, [sp, #16]
    22e4:	stp	x21, x22, [sp, #32]
    22e8:	stp	x23, x24, [sp, #48]
    22ec:	mov	x21, x0
    22f0:	mov	x22, x1
    22f4:	mov	x24, x2
    22f8:	mov	x23, x3
    22fc:	bl	9bf4 <grub_strlen>
    2300:	mov	x19, x0
    2304:	add	x0, x0, #0x1
    2308:	lsl	x0, x0, #1
    230c:	bl	5420 <grub_malloc>
    2310:	cbz	x0, 2344 <grub_efi_set_variable+0x6c>
    2314:	mov	x20, x0
    2318:	mov	x5, x0
    231c:	cbz	x19, 2474 <grub_efi_set_variable+0x19c>
    2320:	mov	x1, x19
    2324:	mov	x3, x21
    2328:	mov	w4, #0x0                   	// #0
    232c:	mov	w6, #0x0                   	// #0
    2330:	mov	w11, #0x3f                  	// #63
    2334:	mov	w7, #0xffff                	// #65535
    2338:	mov	w10, #0xffffd800            	// #-10240
    233c:	mov	w9, #0xffffdc00            	// #-9216
    2340:	b	241c <grub_efi_set_variable+0x144>
    2344:	adrp	x0, 0 <_start>
    2348:	ldr	x0, [x0]
    234c:	ldr	w0, [x0]
    2350:	b	24b8 <grub_efi_set_variable+0x1e0>
    2354:	mov	w4, w0
    2358:	tbz	w0, #7, 23c8 <grub_efi_set_variable+0xf0>
    235c:	and	w3, w0, #0xe0
    2360:	cmp	w3, #0xc0
    2364:	b.eq	23a4 <grub_efi_set_variable+0xcc>  // b.none
    2368:	and	w3, w0, #0xf0
    236c:	and	w4, w0, #0xf
    2370:	mov	w6, #0x2                   	// #2
    2374:	cmp	w3, #0xe0
    2378:	b.eq	240c <grub_efi_set_variable+0x134>  // b.none
    237c:	and	w4, w0, #0xf8
    2380:	mov	x3, x2
    2384:	cmp	w4, #0xf0
    2388:	b.eq	23bc <grub_efi_set_variable+0xe4>  // b.none
    238c:	mov	w4, w11
    2390:	strh	w4, [x5], #2
    2394:	sub	x1, x1, #0x1
    2398:	mov	x2, x3
    239c:	mov	w6, #0x0                   	// #0
    23a0:	b	240c <grub_efi_set_variable+0x134>
    23a4:	and	w4, w0, #0x1f
    23a8:	mov	w6, #0x1                   	// #1
    23ac:	cmp	w4, #0x1
    23b0:	b.hi	240c <grub_efi_set_variable+0x134>  // b.pmore
    23b4:	mov	x3, x2
    23b8:	b	238c <grub_efi_set_variable+0xb4>
    23bc:	and	w4, w0, #0x7
    23c0:	mov	w6, #0x3                   	// #3
    23c4:	b	240c <grub_efi_set_variable+0x134>
    23c8:	cbz	w4, 2474 <grub_efi_set_variable+0x19c>
    23cc:	cmp	x1, #0x1
    23d0:	ccmp	w4, w7, #0x0, ls  // ls = plast
    23d4:	b.hi	2474 <grub_efi_set_variable+0x19c>  // b.pmore
    23d8:	cmp	w4, w7
    23dc:	b.ls	246c <grub_efi_set_variable+0x194>  // b.plast
    23e0:	sub	w0, w4, #0x10, lsl #12
    23e4:	ubfx	x0, x0, #10, #10
    23e8:	orr	w0, w0, w10
    23ec:	mov	x3, x5
    23f0:	strh	w0, [x3], #4
    23f4:	and	w0, w4, #0x3ff
    23f8:	orr	w0, w0, w9
    23fc:	strh	w0, [x5, #2]
    2400:	sub	x1, x1, #0x2
    2404:	mov	x5, x3
    2408:	mov	w6, #0x0                   	// #0
    240c:	cmp	x19, #0x0
    2410:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2414:	b.eq	2474 <grub_efi_set_variable+0x19c>  // b.none
    2418:	mov	x3, x2
    241c:	cmn	x19, #0x1
    2420:	cset	x0, ne  // ne = any
    2424:	sub	x19, x19, x0
    2428:	mov	x2, x3
    242c:	ldrb	w0, [x2], #1
    2430:	cbz	w6, 2354 <grub_efi_set_variable+0x7c>
    2434:	and	w8, w0, #0xc0
    2438:	cmp	w8, #0x80
    243c:	b.ne	238c <grub_efi_set_variable+0xb4>  // b.any
    2440:	bfi	w0, w4, #6, #26
    2444:	mov	w4, w0
    2448:	sub	w6, w6, #0x1
    244c:	cmp	w0, #0x1f
    2450:	ccmp	w6, #0x1, #0x0, ls  // ls = plast
    2454:	b.eq	238c <grub_efi_set_variable+0xb4>  // b.none
    2458:	cmp	w6, #0x2
    245c:	ccmp	w0, #0xf, #0x2, eq  // eq = none
    2460:	b.ls	238c <grub_efi_set_variable+0xb4>  // b.plast
    2464:	cbnz	w6, 240c <grub_efi_set_variable+0x134>
    2468:	b	23c8 <grub_efi_set_variable+0xf0>
    246c:	mov	x3, x2
    2470:	b	2390 <grub_efi_set_variable+0xb8>
    2474:	strh	wzr, [x5]
    2478:	adrp	x0, 0 <_start>
    247c:	ldr	x0, [x0]
    2480:	ldr	x0, [x0]
    2484:	ldr	x0, [x0, #88]
    2488:	ldr	x5, [x0, #88]
    248c:	mov	x4, x24
    2490:	mov	x3, x23
    2494:	mov	w2, #0x7                   	// #7
    2498:	mov	x1, x22
    249c:	mov	x0, x20
    24a0:	blr	x5
    24a4:	mov	x19, x0
    24a8:	mov	x0, x20
    24ac:	bl	547c <grub_free>
    24b0:	mov	w0, #0x0                   	// #0
    24b4:	cbnz	x19, 24cc <grub_efi_set_variable+0x1f4>
    24b8:	ldp	x19, x20, [sp, #16]
    24bc:	ldp	x21, x22, [sp, #32]
    24c0:	ldp	x23, x24, [sp, #48]
    24c4:	ldp	x29, x30, [sp], #64
    24c8:	ret
    24cc:	mov	x2, x21
    24d0:	adrp	x0, 0 <_start>
    24d4:	ldr	x1, [x0]
    24d8:	mov	w0, #0x1d                  	// #29
    24dc:	bl	8408 <grub_error>
    24e0:	b	24b8 <grub_efi_set_variable+0x1e0>
    24e4:	nop
	...

0000000000002500 <grub_efi_get_variable>:
    2500:	stp	x29, x30, [sp, #-80]!
    2504:	mov	x29, sp
    2508:	stp	x19, x20, [sp, #16]
    250c:	stp	x21, x22, [sp, #32]
    2510:	str	x23, [sp, #48]
    2514:	mov	x20, x0
    2518:	mov	x23, x1
    251c:	mov	x22, x2
    2520:	str	xzr, [sp, #72]
    2524:	str	xzr, [x2]
    2528:	bl	9bf4 <grub_strlen>
    252c:	mov	x19, x0
    2530:	add	x0, x0, #0x1
    2534:	lsl	x0, x0, #1
    2538:	bl	5420 <grub_malloc>
    253c:	mov	x21, x0
    2540:	cbz	x0, 2758 <grub_efi_get_variable+0x258>
    2544:	cbz	x19, 2688 <grub_efi_get_variable+0x188>
    2548:	mov	x4, x0
    254c:	mov	x0, x19
    2550:	mov	w3, #0x0                   	// #0
    2554:	mov	w5, #0x0                   	// #0
    2558:	mov	w10, #0x3f                  	// #63
    255c:	mov	w7, #0xffff                	// #65535
    2560:	mov	w9, #0xffffd800            	// #-10240
    2564:	mov	w8, #0xffffdc00            	// #-9216
    2568:	b	2630 <grub_efi_get_variable+0x130>
    256c:	mov	w3, w6
    2570:	tbz	w6, #7, 25dc <grub_efi_get_variable+0xdc>
    2574:	and	w2, w6, #0xe0
    2578:	cmp	w2, #0xc0
    257c:	b.eq	25c4 <grub_efi_get_variable+0xc4>  // b.none
    2580:	and	w2, w6, #0xf0
    2584:	and	w3, w6, #0xf
    2588:	mov	w5, #0x2                   	// #2
    258c:	cmp	w2, #0xe0
    2590:	b.eq	2620 <grub_efi_get_variable+0x120>  // b.none
    2594:	and	w2, w6, #0xf8
    2598:	mov	x20, x1
    259c:	and	w3, w6, #0x7
    25a0:	mov	w5, #0x3                   	// #3
    25a4:	cmp	w2, #0xf0
    25a8:	b.eq	2620 <grub_efi_get_variable+0x120>  // b.none
    25ac:	mov	w3, w10
    25b0:	strh	w3, [x4], #2
    25b4:	sub	x0, x0, #0x1
    25b8:	mov	x1, x20
    25bc:	mov	w5, #0x0                   	// #0
    25c0:	b	2620 <grub_efi_get_variable+0x120>
    25c4:	and	w3, w6, #0x1f
    25c8:	mov	w5, #0x1                   	// #1
    25cc:	cmp	w3, #0x1
    25d0:	b.hi	2620 <grub_efi_get_variable+0x120>  // b.pmore
    25d4:	mov	x20, x1
    25d8:	b	25ac <grub_efi_get_variable+0xac>
    25dc:	cbz	w3, 268c <grub_efi_get_variable+0x18c>
    25e0:	cmp	x0, #0x1
    25e4:	ccmp	w3, w7, #0x0, ls  // ls = plast
    25e8:	b.hi	268c <grub_efi_get_variable+0x18c>  // b.pmore
    25ec:	cmp	w3, w7
    25f0:	b.ls	2680 <grub_efi_get_variable+0x180>  // b.plast
    25f4:	sub	w2, w3, #0x10, lsl #12
    25f8:	ubfx	x2, x2, #10, #10
    25fc:	orr	w2, w2, w9
    2600:	mov	x5, x4
    2604:	strh	w2, [x5], #4
    2608:	and	w2, w3, #0x3ff
    260c:	orr	w2, w2, w8
    2610:	strh	w2, [x4, #2]
    2614:	sub	x0, x0, #0x2
    2618:	mov	x4, x5
    261c:	mov	w5, #0x0                   	// #0
    2620:	cmp	x19, #0x0
    2624:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    2628:	b.eq	268c <grub_efi_get_variable+0x18c>  // b.none
    262c:	mov	x20, x1
    2630:	cmn	x19, #0x1
    2634:	cset	x1, ne  // ne = any
    2638:	sub	x19, x19, x1
    263c:	mov	x1, x20
    2640:	ldrb	w6, [x1], #1
    2644:	cbz	w5, 256c <grub_efi_get_variable+0x6c>
    2648:	and	w2, w6, #0xc0
    264c:	cmp	w2, #0x80
    2650:	b.ne	25ac <grub_efi_get_variable+0xac>  // b.any
    2654:	bfi	w6, w3, #6, #26
    2658:	mov	w3, w6
    265c:	sub	w5, w5, #0x1
    2660:	cmp	w6, #0x1f
    2664:	ccmp	w5, #0x1, #0x0, ls  // ls = plast
    2668:	b.eq	25ac <grub_efi_get_variable+0xac>  // b.none
    266c:	cmp	w5, #0x2
    2670:	ccmp	w6, #0xf, #0x2, eq  // eq = none
    2674:	b.ls	25ac <grub_efi_get_variable+0xac>  // b.plast
    2678:	cbnz	w5, 2620 <grub_efi_get_variable+0x120>
    267c:	b	25dc <grub_efi_get_variable+0xdc>
    2680:	mov	x20, x1
    2684:	b	25b0 <grub_efi_get_variable+0xb0>
    2688:	mov	x4, x0
    268c:	strh	wzr, [x4]
    2690:	adrp	x0, 0 <_start>
    2694:	ldr	x0, [x0]
    2698:	ldr	x0, [x0]
    269c:	ldr	x20, [x0, #88]
    26a0:	ldr	x5, [x20, #72]
    26a4:	mov	x4, #0x0                   	// #0
    26a8:	add	x3, sp, #0x48
    26ac:	mov	x2, #0x0                   	// #0
    26b0:	mov	x1, x23
    26b4:	mov	x0, x21
    26b8:	blr	x5
    26bc:	mov	x1, #0x5                   	// #5
    26c0:	movk	x1, #0x8000, lsl #48
    26c4:	cmp	x0, x1
    26c8:	b.ne	2718 <grub_efi_get_variable+0x218>  // b.any
    26cc:	ldr	x0, [sp, #72]
    26d0:	cbz	x0, 2718 <grub_efi_get_variable+0x218>
    26d4:	bl	5420 <grub_malloc>
    26d8:	mov	x19, x0
    26dc:	cbz	x0, 273c <grub_efi_get_variable+0x23c>
    26e0:	ldr	x5, [x20, #72]
    26e4:	mov	x4, x0
    26e8:	add	x3, sp, #0x48
    26ec:	mov	x2, #0x0                   	// #0
    26f0:	mov	x1, x23
    26f4:	mov	x0, x21
    26f8:	blr	x5
    26fc:	mov	x20, x0
    2700:	mov	x0, x21
    2704:	bl	547c <grub_free>
    2708:	cbnz	x20, 2748 <grub_efi_get_variable+0x248>
    270c:	ldr	x0, [sp, #72]
    2710:	str	x0, [x22]
    2714:	b	2724 <grub_efi_get_variable+0x224>
    2718:	mov	x0, x21
    271c:	bl	547c <grub_free>
    2720:	mov	x19, #0x0                   	// #0
    2724:	mov	x0, x19
    2728:	ldp	x19, x20, [sp, #16]
    272c:	ldp	x21, x22, [sp, #32]
    2730:	ldr	x23, [sp, #48]
    2734:	ldp	x29, x30, [sp], #80
    2738:	ret
    273c:	mov	x0, x21
    2740:	bl	547c <grub_free>
    2744:	b	2724 <grub_efi_get_variable+0x224>
    2748:	mov	x0, x19
    274c:	bl	547c <grub_free>
    2750:	mov	x19, #0x0                   	// #0
    2754:	b	2724 <grub_efi_get_variable+0x224>
    2758:	mov	x19, x0
    275c:	b	2724 <grub_efi_get_variable+0x224>
	...

0000000000002768 <grub_efi_modules_addr>:
    2768:	stp	x29, x30, [sp, #-64]!
    276c:	mov	x29, sp
    2770:	adrp	x0, 0 <_start>
    2774:	ldr	x0, [x0]
    2778:	ldr	x0, [x0]
    277c:	bl	21b8 <grub_efi_get_loaded_image>
    2780:	cbz	x0, 2824 <grub_efi_modules_addr+0xbc>
    2784:	stp	x19, x20, [sp, #16]
    2788:	stp	x23, x24, [sp, #48]
    278c:	mov	x23, x0
    2790:	ldr	x24, [x0, #64]
    2794:	add	x0, x24, #0x84
    2798:	ldrh	w19, [x24, #148]
    279c:	add	x19, x19, #0x14
    27a0:	add	x19, x0, x19
    27a4:	ldrh	w0, [x24, #134]
    27a8:	cbz	w0, 282c <grub_efi_modules_addr+0xc4>
    27ac:	stp	x21, x22, [sp, #32]
    27b0:	mov	w20, #0x0                   	// #0
    27b4:	adrp	x21, 0 <_start>
    27b8:	add	x22, x24, #0x84
    27bc:	ldr	x1, [x21]
    27c0:	mov	x0, x19
    27c4:	bl	9954 <grub_strcmp>
    27c8:	cbz	w0, 27e4 <grub_efi_modules_addr+0x7c>
    27cc:	add	w1, w20, #0x1
    27d0:	and	w20, w1, #0xffff
    27d4:	add	x19, x19, #0x28
    27d8:	ldrh	w2, [x22, #2]
    27dc:	cmp	w2, w1, uxth
    27e0:	b.hi	27bc <grub_efi_modules_addr+0x54>  // b.pmore
    27e4:	ldrh	w0, [x24, #134]
    27e8:	cmp	w0, w20
    27ec:	b.eq	283c <grub_efi_modules_addr+0xd4>  // b.none
    27f0:	ldr	w1, [x19, #12]
    27f4:	ldr	x2, [x23, #64]
    27f8:	add	x0, x2, x1
    27fc:	ldr	w2, [x2, x1]
    2800:	mov	w1, #0x696d                	// #26989
    2804:	movk	w1, #0x676d, lsl #16
    2808:	cmp	w2, w1
    280c:	csel	x0, x0, xzr, eq  // eq = none
    2810:	ldp	x19, x20, [sp, #16]
    2814:	ldp	x21, x22, [sp, #32]
    2818:	ldp	x23, x24, [sp, #48]
    281c:	ldp	x29, x30, [sp], #64
    2820:	ret
    2824:	mov	x0, #0x0                   	// #0
    2828:	b	281c <grub_efi_modules_addr+0xb4>
    282c:	mov	x0, #0x0                   	// #0
    2830:	ldp	x19, x20, [sp, #16]
    2834:	ldp	x23, x24, [sp, #48]
    2838:	b	281c <grub_efi_modules_addr+0xb4>
    283c:	mov	x0, #0x0                   	// #0
    2840:	ldp	x19, x20, [sp, #16]
    2844:	ldp	x21, x22, [sp, #32]
    2848:	ldp	x23, x24, [sp, #48]
    284c:	b	281c <grub_efi_modules_addr+0xb4>
	...

0000000000002860 <grub_efi_get_filename>:
    2860:	stp	x29, x30, [sp, #-96]!
    2864:	mov	x29, sp
    2868:	stp	x21, x22, [sp, #32]
    286c:	stp	x23, x24, [sp, #48]
    2870:	mov	x21, x0
    2874:	cbz	x0, 2b20 <grub_efi_get_filename+0x2c0>
    2878:	ldrb	w2, [x0]
    287c:	and	w2, w2, #0x7f
    2880:	ldrb	w3, [x0, #1]
    2884:	cmp	w2, #0x7f
    2888:	b.eq	2b28 <grub_efi_get_filename+0x2c8>  // b.none
    288c:	mov	x1, x0
    2890:	mov	x0, #0x0                   	// #0
    2894:	b	28b4 <grub_efi_get_filename+0x54>
    2898:	ldrh	w2, [x1, #2]
    289c:	add	x1, x1, x2
    28a0:	ldrb	w2, [x1]
    28a4:	and	w2, w2, #0x7f
    28a8:	ldrb	w3, [x1, #1]
    28ac:	cmp	w2, #0x7f
    28b0:	b.eq	28dc <grub_efi_get_filename+0x7c>  // b.none
    28b4:	cmp	w2, #0x4
    28b8:	ccmp	w3, #0x4, #0x0, eq  // eq = none
    28bc:	b.ne	2898 <grub_efi_get_filename+0x38>  // b.any
    28c0:	ldrh	w2, [x1, #2]
    28c4:	sub	w2, w2, #0x4
    28c8:	ubfx	x2, x2, #1, #16
    28cc:	lsl	w2, w2, #2
    28d0:	add	w2, w2, #0x2
    28d4:	add	x0, x0, w2, sxtw
    28d8:	b	2898 <grub_efi_get_filename+0x38>
    28dc:	mov	x24, #0x0                   	// #0
    28e0:	cbz	x0, 2b0c <grub_efi_get_filename+0x2ac>
    28e4:	bl	5420 <grub_malloc>
    28e8:	mov	x24, x0
    28ec:	cbz	x0, 2b0c <grub_efi_get_filename+0x2ac>
    28f0:	stp	x19, x20, [sp, #16]
    28f4:	ldrb	w0, [x21]
    28f8:	and	w0, w0, #0x7f
    28fc:	ldrb	w1, [x21, #1]
    2900:	cmp	w0, #0x7f
    2904:	b.eq	2aa8 <grub_efi_get_filename+0x248>  // b.none
    2908:	stp	x25, x26, [sp, #64]
    290c:	str	x27, [sp, #80]
    2910:	mov	x19, x24
    2914:	mov	w25, #0x2f                  	// #47
    2918:	mov	w23, #0xffff2800            	// #-55296
    291c:	mov	w22, #0xffff2400            	// #-56320
    2920:	b	2b64 <grub_efi_get_filename+0x304>
    2924:	and	x27, x1, #0xffff
    2928:	ubfiz	x20, x1, #1, #16
    292c:	mov	x0, x20
    2930:	bl	5420 <grub_malloc>
    2934:	mov	x26, x0
    2938:	cbz	x0, 2bc4 <grub_efi_get_filename+0x364>
    293c:	mov	x2, x20
    2940:	add	x1, x21, #0x4
    2944:	bl	9854 <grub_memmove>
    2948:	sub	x4, x27, #0x1
    294c:	cbz	x27, 2b40 <grub_efi_get_filename+0x2e0>
    2950:	mov	w1, #0x0                   	// #0
    2954:	mov	w7, #0x3f                  	// #63
    2958:	mov	w6, #0x0                   	// #0
    295c:	mov	w8, #0x2400                	// #9216
    2960:	b	2978 <grub_efi_get_filename+0x118>
    2964:	strb	w7, [x19], #1
    2968:	mov	w1, w6
    296c:	sub	x4, x4, #0x1
    2970:	cmn	x4, #0x1
    2974:	b.eq	2b40 <grub_efi_get_filename+0x2e0>  // b.none
    2978:	mov	x3, x0
    297c:	ldrh	w2, [x3], #2
    2980:	cbz	w1, 29dc <grub_efi_get_filename+0x17c>
    2984:	add	w5, w2, w22
    2988:	cmp	w5, #0x3ff
    298c:	b.hi	2964 <grub_efi_get_filename+0x104>  // b.pmore
    2990:	add	w1, w1, w23
    2994:	add	w2, w2, w1, lsl #10
    2998:	add	w2, w2, w8
    299c:	lsr	w0, w2, #18
    29a0:	orr	w0, w0, #0xfffffff0
    29a4:	strb	w0, [x19]
    29a8:	ubfx	x0, x2, #12, #6
    29ac:	orr	w0, w0, #0xffffff80
    29b0:	strb	w0, [x19, #1]
    29b4:	ubfx	x0, x2, #6, #6
    29b8:	orr	w0, w0, #0xffffff80
    29bc:	strb	w0, [x19, #2]
    29c0:	and	w2, w2, #0x3f
    29c4:	orr	w2, w2, #0xffffff80
    29c8:	strb	w2, [x19, #3]
    29cc:	mov	x0, x3
    29d0:	add	x19, x19, #0x4
    29d4:	mov	w1, w6
    29d8:	b	296c <grub_efi_get_filename+0x10c>
    29dc:	cmp	w2, #0x7f
    29e0:	b.hi	29f0 <grub_efi_get_filename+0x190>  // b.pmore
    29e4:	strb	w2, [x19], #1
    29e8:	mov	x0, x3
    29ec:	b	296c <grub_efi_get_filename+0x10c>
    29f0:	cmp	w2, #0x7ff
    29f4:	b.hi	2a20 <grub_efi_get_filename+0x1c0>  // b.pmore
    29f8:	lsr	w0, w2, #6
    29fc:	orr	w0, w0, #0xffffffc0
    2a00:	mov	x5, x19
    2a04:	strb	w0, [x5], #2
    2a08:	and	w2, w2, #0x3f
    2a0c:	orr	w2, w2, #0xffffff80
    2a10:	strb	w2, [x19, #1]
    2a14:	mov	x0, x3
    2a18:	mov	x19, x5
    2a1c:	b	296c <grub_efi_get_filename+0x10c>
    2a20:	add	w0, w2, w23
    2a24:	cmp	w0, #0x3ff
    2a28:	b.ls	2a74 <grub_efi_get_filename+0x214>  // b.plast
    2a2c:	add	w0, w2, w22
    2a30:	cmp	w0, #0x3ff
    2a34:	b.hi	2a44 <grub_efi_get_filename+0x1e4>  // b.pmore
    2a38:	strb	w7, [x19], #1
    2a3c:	mov	x0, x3
    2a40:	b	296c <grub_efi_get_filename+0x10c>
    2a44:	lsr	w0, w2, #12
    2a48:	orr	w0, w0, #0xffffffe0
    2a4c:	strb	w0, [x19]
    2a50:	ubfx	x0, x2, #6, #6
    2a54:	orr	w0, w0, #0xffffff80
    2a58:	strb	w0, [x19, #1]
    2a5c:	and	w2, w2, #0x3f
    2a60:	orr	w2, w2, #0xffffff80
    2a64:	strb	w2, [x19, #2]
    2a68:	mov	x0, x3
    2a6c:	add	x19, x19, #0x3
    2a70:	b	296c <grub_efi_get_filename+0x10c>
    2a74:	mov	w1, w2
    2a78:	mov	x0, x3
    2a7c:	b	296c <grub_efi_get_filename+0x10c>
    2a80:	ldp	x25, x26, [sp, #64]
    2a84:	ldr	x27, [sp, #80]
    2a88:	strb	wzr, [x19]
    2a8c:	ldrb	w1, [x24]
    2a90:	cbz	w1, 2b00 <grub_efi_get_filename+0x2a0>
    2a94:	add	x2, x24, #0x1
    2a98:	mov	x0, x24
    2a9c:	mov	w3, #0x2f                  	// #47
    2aa0:	mov	w5, #0x2f                  	// #47
    2aa4:	b	2ac8 <grub_efi_get_filename+0x268>
    2aa8:	mov	x19, x24
    2aac:	b	2a88 <grub_efi_get_filename+0x228>
    2ab0:	add	x0, x0, #0x1
    2ab4:	mov	x4, x2
    2ab8:	sturb	w1, [x2, #-1]
    2abc:	ldrb	w1, [x0]
    2ac0:	add	x2, x2, #0x1
    2ac4:	cbz	w1, 2b04 <grub_efi_get_filename+0x2a4>
    2ac8:	cmp	w1, #0x5c
    2acc:	ccmp	w1, w3, #0x4, ne  // ne = any
    2ad0:	b.ne	2ab0 <grub_efi_get_filename+0x250>  // b.any
    2ad4:	mov	x4, x2
    2ad8:	sturb	w5, [x2, #-1]
    2adc:	ldrb	w1, [x0]
    2ae0:	cmp	w1, #0x5c
    2ae4:	ccmp	w1, w3, #0x4, ne  // ne = any
    2ae8:	b.ne	2abc <grub_efi_get_filename+0x25c>  // b.any
    2aec:	ldrb	w1, [x0, #1]!
    2af0:	cmp	w1, #0x5c
    2af4:	ccmp	w1, w3, #0x4, ne  // ne = any
    2af8:	b.eq	2aec <grub_efi_get_filename+0x28c>  // b.none
    2afc:	b	2abc <grub_efi_get_filename+0x25c>
    2b00:	mov	x4, x24
    2b04:	strb	wzr, [x4]
    2b08:	ldp	x19, x20, [sp, #16]
    2b0c:	mov	x0, x24
    2b10:	ldp	x21, x22, [sp, #32]
    2b14:	ldp	x23, x24, [sp, #48]
    2b18:	ldp	x29, x30, [sp], #96
    2b1c:	ret
    2b20:	mov	x24, x0
    2b24:	b	2b0c <grub_efi_get_filename+0x2ac>
    2b28:	mov	x24, #0x0                   	// #0
    2b2c:	b	2b0c <grub_efi_get_filename+0x2ac>
    2b30:	mov	x2, #0x0                   	// #0
    2b34:	add	x1, x21, #0x4
    2b38:	mov	x0, x26
    2b3c:	bl	9854 <grub_memmove>
    2b40:	mov	x0, x26
    2b44:	bl	547c <grub_free>
    2b48:	ldrh	w0, [x21, #2]
    2b4c:	add	x21, x21, x0
    2b50:	ldrb	w0, [x21]
    2b54:	and	w0, w0, #0x7f
    2b58:	ldrb	w1, [x21, #1]
    2b5c:	cmp	w0, #0x7f
    2b60:	b.eq	2a80 <grub_efi_get_filename+0x220>  // b.none
    2b64:	cmp	w0, #0x4
    2b68:	ccmp	w1, #0x4, #0x0, eq  // eq = none
    2b6c:	b.ne	2b48 <grub_efi_get_filename+0x2e8>  // b.any
    2b70:	strb	w25, [x19], #1
    2b74:	ldrh	w2, [x21, #2]
    2b78:	sub	w2, w2, #0x4
    2b7c:	sxtw	x2, w2
    2b80:	lsr	x0, x2, #1
    2b84:	ubfx	w1, w2, #1, #16
    2b88:	tst	w2, #0x1fffe
    2b8c:	b.eq	2bb4 <grub_efi_get_filename+0x354>  // b.none
    2b90:	ubfiz	x0, x0, #1, #16
    2b94:	add	x0, x0, #0x2
    2b98:	add	x0, x21, x0
    2b9c:	ldrh	w2, [x0]
    2ba0:	cbnz	w2, 2924 <grub_efi_get_filename+0xc4>
    2ba4:	sub	w1, w1, #0x1
    2ba8:	sub	x0, x0, #0x2
    2bac:	ands	w1, w1, #0xffff
    2bb0:	b.ne	2b9c <grub_efi_get_filename+0x33c>  // b.any
    2bb4:	mov	x0, #0x0                   	// #0
    2bb8:	bl	5420 <grub_malloc>
    2bbc:	mov	x26, x0
    2bc0:	cbnz	x0, 2b30 <grub_efi_get_filename+0x2d0>
    2bc4:	mov	x0, x24
    2bc8:	bl	547c <grub_free>
    2bcc:	mov	x24, #0x0                   	// #0
    2bd0:	ldp	x19, x20, [sp, #16]
    2bd4:	ldp	x25, x26, [sp, #64]
    2bd8:	ldr	x27, [sp, #80]
    2bdc:	b	2b0c <grub_efi_get_filename+0x2ac>

0000000000002be0 <grub_efi_get_device_path>:
    2be0:	stp	x29, x30, [sp, #-16]!
    2be4:	mov	x29, sp
    2be8:	adrp	x1, 0 <_start>
    2bec:	ldr	x1, [x1]
    2bf0:	mov	w2, #0x2                   	// #2
    2bf4:	add	x1, x1, #0x20
    2bf8:	bl	2098 <grub_efi_open_protocol>
    2bfc:	ldp	x29, x30, [sp], #16
    2c00:	ret
    2c04:	nop
	...

0000000000002c10 <grub_efi_find_last_device_path>:
    2c10:	ldrb	w1, [x0]
    2c14:	and	w1, w1, #0x7f
    2c18:	cmp	w1, #0x7f
    2c1c:	b.eq	2c2c <grub_efi_find_last_device_path+0x1c>  // b.none
    2c20:	ldrh	w1, [x0, #2]
    2c24:	add	x1, x0, x1
    2c28:	b	2c4c <grub_efi_find_last_device_path+0x3c>
    2c2c:	ldrb	w1, [x0, #1]
    2c30:	cmp	w1, #0xff
    2c34:	b.ne	2c20 <grub_efi_find_last_device_path+0x10>  // b.any
    2c38:	mov	x0, #0x0                   	// #0
    2c3c:	b	2c68 <grub_efi_find_last_device_path+0x58>
    2c40:	ldrh	w2, [x1, #2]
    2c44:	mov	x0, x1
    2c48:	add	x1, x1, x2
    2c4c:	ldrb	w2, [x1]
    2c50:	and	w2, w2, #0x7f
    2c54:	cmp	w2, #0x7f
    2c58:	b.ne	2c40 <grub_efi_find_last_device_path+0x30>  // b.any
    2c5c:	ldrb	w2, [x1, #1]
    2c60:	cmp	w2, #0xff
    2c64:	b.ne	2c40 <grub_efi_find_last_device_path+0x30>  // b.any
    2c68:	ret

0000000000002c6c <grub_efi_duplicate_device_path>:
    2c6c:	stp	x29, x30, [sp, #-48]!
    2c70:	mov	x29, sp
    2c74:	stp	x19, x20, [sp, #16]
    2c78:	str	x21, [sp, #32]
    2c7c:	mov	x21, x0
    2c80:	mov	x1, x0
    2c84:	mov	x19, #0x0                   	// #0
    2c88:	b	2c90 <grub_efi_duplicate_device_path+0x24>
    2c8c:	add	x1, x1, x3
    2c90:	ldrh	w3, [x1, #2]
    2c94:	add	x19, x19, x3
    2c98:	ldrb	w2, [x1]
    2c9c:	and	w2, w2, #0x7f
    2ca0:	cmp	w2, #0x7f
    2ca4:	b.ne	2c8c <grub_efi_duplicate_device_path+0x20>  // b.any
    2ca8:	ldrb	w2, [x1, #1]
    2cac:	cmp	w2, #0xff
    2cb0:	b.ne	2c8c <grub_efi_duplicate_device_path+0x20>  // b.any
    2cb4:	mov	x0, x19
    2cb8:	bl	5420 <grub_malloc>
    2cbc:	mov	x20, x0
    2cc0:	cbz	x0, 2cd0 <grub_efi_duplicate_device_path+0x64>
    2cc4:	mov	x2, x19
    2cc8:	mov	x1, x21
    2ccc:	bl	9854 <grub_memmove>
    2cd0:	mov	x0, x20
    2cd4:	ldp	x19, x20, [sp, #16]
    2cd8:	ldr	x21, [sp, #32]
    2cdc:	ldp	x29, x30, [sp], #48
    2ce0:	ret

0000000000002ce4 <grub_efi_print_device_path>:
    2ce4:	sub	sp, sp, #0xc0
    2ce8:	stp	x29, x30, [sp, #112]
    2cec:	add	x29, sp, #0x70
    2cf0:	stp	x19, x20, [sp, #128]
    2cf4:	stp	x21, x22, [sp, #144]
    2cf8:	stp	x23, x24, [sp, #160]
    2cfc:	mov	x19, x0
    2d00:	adrp	x23, 0 <_start>
    2d04:	mov	w22, #0xffff2800            	// #-55296
    2d08:	mov	w21, #0xffff2400            	// #-56320
    2d0c:	b	34f4 <grub_efi_print_device_path+0x810>
    2d10:	cmp	w3, #0x1
    2d14:	b.ne	3584 <grub_efi_print_device_path+0x8a0>  // b.any
    2d18:	cmp	w1, #0x3
    2d1c:	b.eq	2dd4 <grub_efi_print_device_path+0xf0>  // b.none
    2d20:	b.ls	2d98 <grub_efi_print_device_path+0xb4>  // b.plast
    2d24:	cmp	w1, #0x4
    2d28:	b.eq	2df0 <grub_efi_print_device_path+0x10c>  // b.none
    2d2c:	cmp	w1, #0x5
    2d30:	b.ne	2e04 <grub_efi_print_device_path+0x120>  // b.any
    2d34:	ldr	w1, [x19, #4]
    2d38:	adrp	x0, 0 <_start>
    2d3c:	ldr	x0, [x0]
    2d40:	bl	abc0 <grub_err_printf>
    2d44:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2d48:	cmp	w3, #0x5
    2d4c:	b.eq	34cc <grub_efi_print_device_path+0x7e8>  // b.none
    2d50:	cmp	w3, #0x7f
    2d54:	b.ne	3584 <grub_efi_print_device_path+0x8a0>  // b.any
    2d58:	cmp	w1, #0x1
    2d5c:	b.eq	2d78 <grub_efi_print_device_path+0x94>  // b.none
    2d60:	cmp	w1, #0xff
    2d64:	b.ne	2d88 <grub_efi_print_device_path+0xa4>  // b.any
    2d68:	adrp	x0, 0 <_start>
    2d6c:	ldr	x0, [x0]
    2d70:	bl	abc0 <grub_err_printf>
    2d74:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2d78:	adrp	x0, 0 <_start>
    2d7c:	ldr	x0, [x0]
    2d80:	bl	abc0 <grub_err_printf>
    2d84:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2d88:	adrp	x0, 0 <_start>
    2d8c:	ldr	x0, [x0]
    2d90:	bl	abc0 <grub_err_printf>
    2d94:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2d98:	cmp	w1, #0x1
    2d9c:	b.eq	2dbc <grub_efi_print_device_path+0xd8>  // b.none
    2da0:	cmp	w1, #0x2
    2da4:	b.ne	2e04 <grub_efi_print_device_path+0x120>  // b.any
    2da8:	ldrb	w1, [x19, #4]
    2dac:	adrp	x0, 0 <_start>
    2db0:	ldr	x0, [x0]
    2db4:	bl	abc0 <grub_err_printf>
    2db8:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2dbc:	ldrb	w2, [x19, #5]
    2dc0:	ldrb	w1, [x19, #4]
    2dc4:	adrp	x0, 0 <_start>
    2dc8:	ldr	x0, [x0]
    2dcc:	bl	abc0 <grub_err_printf>
    2dd0:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2dd4:	ldr	x3, [x19, #16]
    2dd8:	ldr	x2, [x19, #8]
    2ddc:	ldr	w1, [x19, #4]
    2de0:	adrp	x0, 0 <_start>
    2de4:	ldr	x0, [x0]
    2de8:	bl	abc0 <grub_err_printf>
    2dec:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2df0:	mov	x1, x19
    2df4:	adrp	x0, 0 <_start>
    2df8:	ldr	x0, [x0]
    2dfc:	bl	1e80 <grub_efidisk_get_device_name+0x3e0>
    2e00:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2e04:	adrp	x0, 0 <_start>
    2e08:	ldr	x0, [x0]
    2e0c:	bl	abc0 <grub_err_printf>
    2e10:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2e14:	cmp	w1, #0x1
    2e18:	b.eq	2e34 <grub_efi_print_device_path+0x150>  // b.none
    2e1c:	cmp	w1, #0x2
    2e20:	b.eq	2e4c <grub_efi_print_device_path+0x168>  // b.none
    2e24:	adrp	x0, 0 <_start>
    2e28:	ldr	x0, [x0]
    2e2c:	bl	abc0 <grub_err_printf>
    2e30:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2e34:	ldr	w2, [x19, #8]
    2e38:	ldr	w1, [x19, #4]
    2e3c:	adrp	x0, 0 <_start>
    2e40:	ldr	x0, [x0]
    2e44:	bl	abc0 <grub_err_printf>
    2e48:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2e4c:	stp	x25, x26, [sp, #176]
    2e50:	adrp	x0, 0 <_start>
    2e54:	ldr	x0, [x0]
    2e58:	bl	abc0 <grub_err_printf>
    2e5c:	ldrb	w0, [x19, #16]
    2e60:	cbnz	w0, 2ee4 <grub_efi_print_device_path+0x200>
    2e64:	ldr	w1, [x19, #4]
    2e68:	adrp	x0, 0 <_start>
    2e6c:	ldr	x0, [x0]
    2e70:	bl	abc0 <grub_err_printf>
    2e74:	add	x24, x19, #0x10
    2e78:	mov	x0, x24
    2e7c:	bl	9bf4 <grub_strlen>
    2e80:	add	x0, x24, x0
    2e84:	ldrb	w0, [x0, #1]
    2e88:	cbnz	w0, 2ef8 <grub_efi_print_device_path+0x214>
    2e8c:	ldr	w1, [x19, #8]
    2e90:	adrp	x0, 0 <_start>
    2e94:	ldr	x0, [x0]
    2e98:	bl	abc0 <grub_err_printf>
    2e9c:	mov	x0, x24
    2ea0:	bl	9bf4 <grub_strlen>
    2ea4:	mov	x25, x0
    2ea8:	mov	x0, x24
    2eac:	bl	9bf4 <grub_strlen>
    2eb0:	add	x0, x0, #0x1
    2eb4:	add	x0, x24, x0
    2eb8:	bl	9bf4 <grub_strlen>
    2ebc:	add	x25, x24, x25
    2ec0:	add	x25, x25, x0
    2ec4:	ldrb	w0, [x25, #2]
    2ec8:	cbnz	w0, 2f18 <grub_efi_print_device_path+0x234>
    2ecc:	ldr	w1, [x19, #12]
    2ed0:	adrp	x0, 0 <_start>
    2ed4:	ldr	x0, [x0]
    2ed8:	bl	abc0 <grub_err_printf>
    2edc:	ldp	x25, x26, [sp, #176]
    2ee0:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2ee4:	add	x1, x19, #0x10
    2ee8:	adrp	x0, 0 <_start>
    2eec:	ldr	x0, [x0]
    2ef0:	bl	abc0 <grub_err_printf>
    2ef4:	b	2e74 <grub_efi_print_device_path+0x190>
    2ef8:	mov	x0, x24
    2efc:	bl	9bf4 <grub_strlen>
    2f00:	add	x1, x0, #0x1
    2f04:	add	x1, x24, x1
    2f08:	adrp	x0, 0 <_start>
    2f0c:	ldr	x0, [x0]
    2f10:	bl	abc0 <grub_err_printf>
    2f14:	b	2e9c <grub_efi_print_device_path+0x1b8>
    2f18:	mov	x0, x24
    2f1c:	bl	9bf4 <grub_strlen>
    2f20:	mov	x25, x0
    2f24:	mov	x0, x24
    2f28:	bl	9bf4 <grub_strlen>
    2f2c:	add	x0, x0, #0x1
    2f30:	add	x0, x24, x0
    2f34:	bl	9bf4 <grub_strlen>
    2f38:	add	x1, x25, x0
    2f3c:	add	x1, x1, #0x2
    2f40:	add	x1, x24, x1
    2f44:	adrp	x0, 0 <_start>
    2f48:	ldr	x0, [x0]
    2f4c:	bl	abc0 <grub_err_printf>
    2f50:	ldp	x25, x26, [sp, #176]
    2f54:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2f58:	cmp	w1, #0x2
    2f5c:	b.eq	30d4 <grub_efi_print_device_path+0x3f0>  // b.none
    2f60:	cmp	w1, #0x3
    2f64:	b.ne	2f80 <grub_efi_print_device_path+0x29c>  // b.any
    2f68:	ldr	x2, [x19, #16]
    2f6c:	ldr	x1, [x19, #8]
    2f70:	adrp	x0, 0 <_start>
    2f74:	ldr	x0, [x0]
    2f78:	bl	abc0 <grub_err_printf>
    2f7c:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2f80:	cmp	w1, #0x1
    2f84:	b.ne	31c0 <grub_efi_print_device_path+0x4dc>  // b.any
    2f88:	ldrh	w3, [x19, #6]
    2f8c:	ldrb	w2, [x19, #5]
    2f90:	ldrb	w1, [x19, #4]
    2f94:	adrp	x0, 0 <_start>
    2f98:	ldr	x0, [x0]
    2f9c:	bl	abc0 <grub_err_printf>
    2fa0:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2fa4:	cmp	w1, #0x5
    2fa8:	b.ne	31c0 <grub_efi_print_device_path+0x4dc>  // b.any
    2fac:	ldrb	w2, [x19, #5]
    2fb0:	ldrb	w1, [x19, #4]
    2fb4:	adrp	x0, 0 <_start>
    2fb8:	ldr	x0, [x0]
    2fbc:	bl	abc0 <grub_err_printf>
    2fc0:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2fc4:	cmp	w1, #0xe
    2fc8:	b.eq	318c <grub_efi_print_device_path+0x4a8>  // b.none
    2fcc:	b.ls	2ffc <grub_efi_print_device_path+0x318>  // b.plast
    2fd0:	cmp	w1, #0xf
    2fd4:	b.eq	3100 <grub_efi_print_device_path+0x41c>  // b.none
    2fd8:	cmp	w1, #0x12
    2fdc:	b.ne	31c0 <grub_efi_print_device_path+0x4dc>  // b.any
    2fe0:	ldrh	w3, [x19, #8]
    2fe4:	ldrh	w2, [x19, #6]
    2fe8:	ldrh	w1, [x19, #4]
    2fec:	adrp	x0, 0 <_start>
    2ff0:	ldr	x0, [x0]
    2ff4:	bl	abc0 <grub_err_printf>
    2ff8:	b	34e0 <grub_efi_print_device_path+0x7fc>
    2ffc:	cmp	w1, #0xc
    3000:	b.eq	3138 <grub_efi_print_device_path+0x454>  // b.none
    3004:	cmp	w1, #0xd
    3008:	b.ne	30a0 <grub_efi_print_device_path+0x3bc>  // b.any
    300c:	ldrb	w0, [x19, #42]
    3010:	str	w0, [sp, #96]
    3014:	ldrh	w0, [x19, #40]
    3018:	str	w0, [sp, #88]
    301c:	ldrh	w0, [x19, #38]
    3020:	str	w0, [sp, #80]
    3024:	ldrh	w0, [x19, #36]
    3028:	str	w0, [sp, #72]
    302c:	ldrh	w0, [x19, #34]
    3030:	str	w0, [sp, #64]
    3034:	ldrh	w0, [x19, #32]
    3038:	str	w0, [sp, #56]
    303c:	ldrh	w0, [x19, #30]
    3040:	str	w0, [sp, #48]
    3044:	ldrh	w0, [x19, #28]
    3048:	str	w0, [sp, #40]
    304c:	ldrh	w0, [x19, #26]
    3050:	str	w0, [sp, #32]
    3054:	ldrh	w0, [x19, #24]
    3058:	str	w0, [sp, #24]
    305c:	ldrh	w0, [x19, #22]
    3060:	str	w0, [sp, #16]
    3064:	ldrh	w0, [x19, #20]
    3068:	str	w0, [sp, #8]
    306c:	ldrh	w0, [x19, #18]
    3070:	str	w0, [sp]
    3074:	ldrh	w7, [x19, #16]
    3078:	ldrh	w6, [x19, #14]
    307c:	ldrh	w5, [x19, #12]
    3080:	ldrh	w4, [x19, #10]
    3084:	ldrh	w3, [x19, #8]
    3088:	ldrh	w2, [x19, #6]
    308c:	ldrh	w1, [x19, #4]
    3090:	adrp	x0, 0 <_start>
    3094:	ldr	x0, [x0]
    3098:	bl	abc0 <grub_err_printf>
    309c:	b	34e0 <grub_efi_print_device_path+0x7fc>
    30a0:	cmp	w1, #0xb
    30a4:	b.ne	31c0 <grub_efi_print_device_path+0x4dc>  // b.any
    30a8:	ldrb	w7, [x19, #36]
    30ac:	ldrb	w6, [x19, #9]
    30b0:	ldrb	w5, [x19, #8]
    30b4:	ldrb	w4, [x19, #7]
    30b8:	ldrb	w3, [x19, #6]
    30bc:	ldrb	w2, [x19, #5]
    30c0:	ldrb	w1, [x19, #4]
    30c4:	adrp	x0, 0 <_start>
    30c8:	ldr	x0, [x0]
    30cc:	bl	abc0 <grub_err_printf>
    30d0:	b	34e0 <grub_efi_print_device_path+0x7fc>
    30d4:	ldrh	w2, [x19, #6]
    30d8:	ldrh	w1, [x19, #4]
    30dc:	adrp	x0, 0 <_start>
    30e0:	ldr	x0, [x0]
    30e4:	bl	abc0 <grub_err_printf>
    30e8:	b	34e0 <grub_efi_print_device_path+0x7fc>
    30ec:	ldr	x1, [x19, #8]
    30f0:	adrp	x0, 0 <_start>
    30f4:	ldr	x0, [x0]
    30f8:	bl	abc0 <grub_err_printf>
    30fc:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3100:	ldrb	w5, [x19, #10]
    3104:	ldrb	w4, [x19, #9]
    3108:	ldrb	w3, [x19, #8]
    310c:	ldrh	w2, [x19, #6]
    3110:	ldrh	w1, [x19, #4]
    3114:	adrp	x0, 0 <_start>
    3118:	ldr	x0, [x0]
    311c:	bl	abc0 <grub_err_printf>
    3120:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3124:	ldr	w1, [x19, #4]
    3128:	adrp	x0, 0 <_start>
    312c:	ldr	x0, [x0]
    3130:	bl	abc0 <grub_err_printf>
    3134:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3138:	ldrb	w0, [x19, #18]
    313c:	str	w0, [sp, #32]
    3140:	ldrh	w0, [x19, #16]
    3144:	str	w0, [sp, #24]
    3148:	ldrh	w0, [x19, #14]
    314c:	str	w0, [sp, #16]
    3150:	ldrh	w0, [x19, #12]
    3154:	str	w0, [sp, #8]
    3158:	ldrb	w0, [x19, #11]
    315c:	str	w0, [sp]
    3160:	ldrb	w7, [x19, #10]
    3164:	ldrb	w6, [x19, #9]
    3168:	ldrb	w5, [x19, #8]
    316c:	ldrb	w4, [x19, #7]
    3170:	ldrb	w3, [x19, #6]
    3174:	ldrb	w2, [x19, #5]
    3178:	ldrb	w1, [x19, #4]
    317c:	adrp	x0, 0 <_start>
    3180:	ldr	x0, [x0]
    3184:	bl	abc0 <grub_err_printf>
    3188:	b	34e0 <grub_efi_print_device_path+0x7fc>
    318c:	ldrb	w4, [x19, #18]
    3190:	ldrb	w3, [x19, #17]
    3194:	ldrb	w2, [x19, #16]
    3198:	ldr	x1, [x19, #8]
    319c:	adrp	x0, 0 <_start>
    31a0:	ldr	x0, [x0]
    31a4:	bl	abc0 <grub_err_printf>
    31a8:	b	34e0 <grub_efi_print_device_path+0x7fc>
    31ac:	mov	x1, x19
    31b0:	adrp	x0, 0 <_start>
    31b4:	ldr	x0, [x0]
    31b8:	bl	1e80 <grub_efidisk_get_device_name+0x3e0>
    31bc:	b	34e0 <grub_efi_print_device_path+0x7fc>
    31c0:	adrp	x0, 0 <_start>
    31c4:	ldr	x0, [x0]
    31c8:	bl	abc0 <grub_err_printf>
    31cc:	b	34e0 <grub_efi_print_device_path+0x7fc>
    31d0:	cmp	w1, #0x3
    31d4:	b.eq	32c0 <grub_efi_print_device_path+0x5dc>  // b.none
    31d8:	b.ls	3238 <grub_efi_print_device_path+0x554>  // b.plast
    31dc:	cmp	w1, #0x4
    31e0:	b.eq	32d0 <grub_efi_print_device_path+0x5ec>  // b.none
    31e4:	cmp	w1, #0x5
    31e8:	b.ne	34bc <grub_efi_print_device_path+0x7d8>  // b.any
    31ec:	ldrb	w0, [x19, #19]
    31f0:	str	w0, [sp, #24]
    31f4:	ldrb	w0, [x19, #18]
    31f8:	str	w0, [sp, #16]
    31fc:	ldrb	w0, [x19, #17]
    3200:	str	w0, [sp, #8]
    3204:	ldrb	w0, [x19, #16]
    3208:	str	w0, [sp]
    320c:	ldrb	w7, [x19, #15]
    3210:	ldrb	w6, [x19, #14]
    3214:	ldrb	w5, [x19, #13]
    3218:	ldrb	w4, [x19, #12]
    321c:	ldrh	w3, [x19, #10]
    3220:	ldrh	w2, [x19, #8]
    3224:	ldr	w1, [x19, #4]
    3228:	adrp	x0, 0 <_start>
    322c:	ldr	x0, [x0]
    3230:	bl	abc0 <grub_err_printf>
    3234:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3238:	cmp	w1, #0x1
    323c:	b.eq	3264 <grub_efi_print_device_path+0x580>  // b.none
    3240:	cmp	w1, #0x2
    3244:	b.ne	34bc <grub_efi_print_device_path+0x7d8>  // b.any
    3248:	ldr	x3, [x19, #16]
    324c:	ldr	x2, [x19, #8]
    3250:	ldr	w1, [x19, #4]
    3254:	adrp	x0, 0 <_start>
    3258:	ldr	x0, [x0]
    325c:	bl	abc0 <grub_err_printf>
    3260:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3264:	ldrb	w0, [x19, #41]
    3268:	str	w0, [sp, #40]
    326c:	ldrb	w0, [x19, #40]
    3270:	str	w0, [sp, #32]
    3274:	ldrb	w0, [x19, #31]
    3278:	str	w0, [sp, #24]
    327c:	ldrb	w0, [x19, #30]
    3280:	str	w0, [sp, #16]
    3284:	ldrb	w0, [x19, #29]
    3288:	str	w0, [sp, #8]
    328c:	ldrb	w0, [x19, #28]
    3290:	str	w0, [sp]
    3294:	ldrb	w7, [x19, #27]
    3298:	ldrb	w6, [x19, #26]
    329c:	ldrb	w5, [x19, #25]
    32a0:	ldrb	w4, [x19, #24]
    32a4:	ldr	x3, [x19, #16]
    32a8:	ldr	x2, [x19, #8]
    32ac:	ldr	w1, [x19, #4]
    32b0:	adrp	x0, 0 <_start>
    32b4:	ldr	x0, [x0]
    32b8:	bl	abc0 <grub_err_printf>
    32bc:	b	34e0 <grub_efi_print_device_path+0x7fc>
    32c0:	mov	x1, x19
    32c4:	ldr	x0, [x23]
    32c8:	bl	1e80 <grub_efidisk_get_device_name+0x3e0>
    32cc:	b	34e0 <grub_efi_print_device_path+0x7fc>
    32d0:	stp	x25, x26, [sp, #176]
    32d4:	sub	w26, w20, #0x4
    32d8:	lsl	w0, w26, #1
    32dc:	add	w0, w0, #0x1
    32e0:	sxtw	x0, w0
    32e4:	bl	5420 <grub_malloc>
    32e8:	mov	x24, x0
    32ec:	cbz	x0, 3490 <grub_efi_print_device_path+0x7ac>
    32f0:	sxtw	x26, w26
    32f4:	mov	x0, x26
    32f8:	bl	5420 <grub_malloc>
    32fc:	mov	x25, x0
    3300:	cbz	x0, 3338 <grub_efi_print_device_path+0x654>
    3304:	mov	x2, x26
    3308:	add	x1, x19, #0x4
    330c:	bl	9854 <grub_memmove>
    3310:	lsr	x5, x26, #1
    3314:	sub	x5, x5, #0x1
    3318:	cmp	x26, #0x1
    331c:	b.ls	347c <grub_efi_print_device_path+0x798>  // b.plast
    3320:	mov	x1, x24
    3324:	mov	w2, #0x0                   	// #0
    3328:	mov	w7, #0x3f                  	// #63
    332c:	mov	w6, #0x0                   	// #0
    3330:	mov	w8, #0x2400                	// #9216
    3334:	b	3374 <grub_efi_print_device_path+0x690>
    3338:	adrp	x0, 0 <_start>
    333c:	ldr	x0, [x0]
    3340:	str	wzr, [x0]
    3344:	adrp	x0, 0 <_start>
    3348:	ldr	x0, [x0]
    334c:	bl	abc0 <grub_err_printf>
    3350:	mov	x0, x24
    3354:	bl	547c <grub_free>
    3358:	ldp	x25, x26, [sp, #176]
    335c:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3360:	strb	w7, [x1], #1
    3364:	mov	w2, w6
    3368:	sub	x5, x5, #0x1
    336c:	cmn	x5, #0x1
    3370:	b.eq	3480 <grub_efi_print_device_path+0x79c>  // b.none
    3374:	mov	x4, x0
    3378:	ldrh	w3, [x4], #2
    337c:	cbz	w2, 33d8 <grub_efi_print_device_path+0x6f4>
    3380:	add	w9, w3, w21
    3384:	cmp	w9, #0x3ff
    3388:	b.hi	3360 <grub_efi_print_device_path+0x67c>  // b.pmore
    338c:	add	w0, w2, w22
    3390:	add	w0, w3, w0, lsl #10
    3394:	add	w0, w0, w8
    3398:	lsr	w2, w0, #18
    339c:	orr	w2, w2, #0xfffffff0
    33a0:	strb	w2, [x1]
    33a4:	ubfx	x2, x0, #12, #6
    33a8:	orr	w2, w2, #0xffffff80
    33ac:	strb	w2, [x1, #1]
    33b0:	ubfx	x2, x0, #6, #6
    33b4:	orr	w2, w2, #0xffffff80
    33b8:	strb	w2, [x1, #2]
    33bc:	and	w0, w0, #0x3f
    33c0:	orr	w0, w0, #0xffffff80
    33c4:	strb	w0, [x1, #3]
    33c8:	mov	x0, x4
    33cc:	add	x1, x1, #0x4
    33d0:	mov	w2, w6
    33d4:	b	3368 <grub_efi_print_device_path+0x684>
    33d8:	cmp	w3, #0x7f
    33dc:	b.hi	33ec <grub_efi_print_device_path+0x708>  // b.pmore
    33e0:	strb	w3, [x1], #1
    33e4:	mov	x0, x4
    33e8:	b	3368 <grub_efi_print_device_path+0x684>
    33ec:	cmp	w3, #0x7ff
    33f0:	b.hi	341c <grub_efi_print_device_path+0x738>  // b.pmore
    33f4:	lsr	w0, w3, #6
    33f8:	orr	w0, w0, #0xffffffc0
    33fc:	mov	x9, x1
    3400:	strb	w0, [x9], #2
    3404:	and	w0, w3, #0x3f
    3408:	orr	w0, w0, #0xffffff80
    340c:	strb	w0, [x1, #1]
    3410:	mov	x0, x4
    3414:	mov	x1, x9
    3418:	b	3368 <grub_efi_print_device_path+0x684>
    341c:	add	w0, w3, w22
    3420:	cmp	w0, #0x3ff
    3424:	b.ls	3470 <grub_efi_print_device_path+0x78c>  // b.plast
    3428:	add	w0, w3, w21
    342c:	cmp	w0, #0x3ff
    3430:	b.hi	3440 <grub_efi_print_device_path+0x75c>  // b.pmore
    3434:	strb	w7, [x1], #1
    3438:	mov	x0, x4
    343c:	b	3368 <grub_efi_print_device_path+0x684>
    3440:	lsr	w0, w3, #12
    3444:	orr	w0, w0, #0xffffffe0
    3448:	strb	w0, [x1]
    344c:	ubfx	x0, x3, #6, #6
    3450:	orr	w0, w0, #0xffffff80
    3454:	strb	w0, [x1, #1]
    3458:	and	w0, w3, #0x3f
    345c:	orr	w0, w0, #0xffffff80
    3460:	strb	w0, [x1, #2]
    3464:	mov	x0, x4
    3468:	add	x1, x1, #0x3
    346c:	b	3368 <grub_efi_print_device_path+0x684>
    3470:	mov	w2, w3
    3474:	mov	x0, x4
    3478:	b	3368 <grub_efi_print_device_path+0x684>
    347c:	mov	x1, x24
    3480:	strb	wzr, [x1]
    3484:	mov	x0, x25
    3488:	bl	547c <grub_free>
    348c:	b	349c <grub_efi_print_device_path+0x7b8>
    3490:	adrp	x0, 0 <_start>
    3494:	ldr	x0, [x0]
    3498:	str	wzr, [x0]
    349c:	mov	x1, x24
    34a0:	adrp	x0, 0 <_start>
    34a4:	ldr	x0, [x0]
    34a8:	bl	abc0 <grub_err_printf>
    34ac:	mov	x0, x24
    34b0:	bl	547c <grub_free>
    34b4:	ldp	x25, x26, [sp, #176]
    34b8:	b	34e0 <grub_efi_print_device_path+0x7fc>
    34bc:	adrp	x0, 0 <_start>
    34c0:	ldr	x0, [x0]
    34c4:	bl	abc0 <grub_err_printf>
    34c8:	b	34e0 <grub_efi_print_device_path+0x7fc>
    34cc:	cmp	w1, #0x1
    34d0:	b.eq	3568 <grub_efi_print_device_path+0x884>  // b.none
    34d4:	adrp	x0, 0 <_start>
    34d8:	ldr	x0, [x0]
    34dc:	bl	abc0 <grub_err_printf>
    34e0:	ldrb	w0, [x19]
    34e4:	and	w0, w0, #0x7f
    34e8:	cmp	w0, #0x7f
    34ec:	b.eq	35b0 <grub_efi_print_device_path+0x8cc>  // b.none
    34f0:	add	x19, x19, w20, uxth
    34f4:	ldrb	w3, [x19]
    34f8:	and	w3, w3, #0x7f
    34fc:	ldrb	w1, [x19, #1]
    3500:	ldrh	w20, [x19, #2]
    3504:	cmp	w3, #0x4
    3508:	b.eq	31d0 <grub_efi_print_device_path+0x4ec>  // b.none
    350c:	b.hi	2d48 <grub_efi_print_device_path+0x64>  // b.pmore
    3510:	cmp	w3, #0x2
    3514:	b.eq	2e14 <grub_efi_print_device_path+0x130>  // b.none
    3518:	cmp	w3, #0x3
    351c:	b.ne	2d10 <grub_efi_print_device_path+0x2c>  // b.any
    3520:	cmp	w1, #0xa
    3524:	b.eq	31ac <grub_efi_print_device_path+0x4c8>  // b.none
    3528:	b.hi	2fc4 <grub_efi_print_device_path+0x2e0>  // b.pmore
    352c:	cmp	w1, #0x4
    3530:	b.eq	30ec <grub_efi_print_device_path+0x408>  // b.none
    3534:	b.ls	2f58 <grub_efi_print_device_path+0x274>  // b.plast
    3538:	cmp	w1, #0x6
    353c:	b.eq	3124 <grub_efi_print_device_path+0x440>  // b.none
    3540:	cmp	w1, #0x9
    3544:	b.ne	2fa4 <grub_efi_print_device_path+0x2c0>  // b.any
    3548:	ldr	x4, [x19, #40]
    354c:	ldr	x3, [x19, #32]
    3550:	ldr	x2, [x19, #24]
    3554:	ldrb	w1, [x19, #8]
    3558:	adrp	x0, 0 <_start>
    355c:	ldr	x0, [x0]
    3560:	bl	abc0 <grub_err_printf>
    3564:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3568:	add	x3, x19, #0x4
    356c:	ldrh	w2, [x19, #6]
    3570:	ldrh	w1, [x19, #4]
    3574:	adrp	x0, 0 <_start>
    3578:	ldr	x0, [x0]
    357c:	bl	abc0 <grub_err_printf>
    3580:	b	34e0 <grub_efi_print_device_path+0x7fc>
    3584:	mov	w2, w1
    3588:	mov	w1, w3
    358c:	adrp	x0, 0 <_start>
    3590:	ldr	x0, [x0]
    3594:	bl	abc0 <grub_err_printf>
    3598:	ldp	x19, x20, [sp, #128]
    359c:	ldp	x21, x22, [sp, #144]
    35a0:	ldp	x23, x24, [sp, #160]
    35a4:	ldp	x29, x30, [sp, #112]
    35a8:	add	sp, sp, #0xc0
    35ac:	ret
    35b0:	ldrb	w0, [x19, #1]
    35b4:	cmp	w0, #0xff
    35b8:	b.ne	34f0 <grub_efi_print_device_path+0x80c>  // b.any
    35bc:	b	3598 <grub_efi_print_device_path+0x8b4>
	...

0000000000003710 <grub_efi_compare_device_paths>:
    3710:	cmp	x0, #0x0
    3714:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    3718:	b.eq	37f8 <grub_efi_compare_device_paths+0xe8>  // b.none
    371c:	stp	x29, x30, [sp, #-48]!
    3720:	mov	x29, sp
    3724:	stp	x19, x20, [sp, #16]
    3728:	mov	x19, x0
    372c:	mov	x20, x1
    3730:	ldrb	w0, [x0]
    3734:	and	w0, w0, #0x7f
    3738:	ldrb	w2, [x1]
    373c:	and	w2, w2, #0x7f
    3740:	cmp	w0, w2
    3744:	b.ne	37e8 <grub_efi_compare_device_paths+0xd8>  // b.any
    3748:	stp	x21, x22, [sp, #32]
    374c:	b	3788 <grub_efi_compare_device_paths+0x78>
    3750:	sub	w0, w2, w0
    3754:	ldp	x21, x22, [sp, #32]
    3758:	b	37ec <grub_efi_compare_device_paths+0xdc>
    375c:	sub	w0, w2, w22
    3760:	ldp	x21, x22, [sp, #32]
    3764:	b	37ec <grub_efi_compare_device_paths+0xdc>
    3768:	add	x19, x19, x21
    376c:	add	x20, x20, w22, uxth
    3770:	ldrb	w0, [x19]
    3774:	and	w0, w0, #0x7f
    3778:	ldrb	w2, [x20]
    377c:	and	w2, w2, #0x7f
    3780:	cmp	w0, w2
    3784:	b.ne	37e4 <grub_efi_compare_device_paths+0xd4>  // b.any
    3788:	ldrb	w2, [x19, #1]
    378c:	ldrb	w0, [x20, #1]
    3790:	cmp	w2, w0
    3794:	b.ne	3750 <grub_efi_compare_device_paths+0x40>  // b.any
    3798:	ldrh	w2, [x19, #2]
    379c:	ldrh	w22, [x20, #2]
    37a0:	cmp	w2, w22
    37a4:	b.ne	375c <grub_efi_compare_device_paths+0x4c>  // b.any
    37a8:	and	x21, x2, #0xffff
    37ac:	mov	x2, x21
    37b0:	mov	x1, x20
    37b4:	mov	x0, x19
    37b8:	bl	9918 <grub_memcmp>
    37bc:	cbnz	w0, 3800 <grub_efi_compare_device_paths+0xf0>
    37c0:	ldrb	w1, [x19]
    37c4:	and	w1, w1, #0x7f
    37c8:	cmp	w1, #0x7f
    37cc:	b.ne	3768 <grub_efi_compare_device_paths+0x58>  // b.any
    37d0:	ldrb	w1, [x19, #1]
    37d4:	cmp	w1, #0xff
    37d8:	b.ne	3768 <grub_efi_compare_device_paths+0x58>  // b.any
    37dc:	ldp	x21, x22, [sp, #32]
    37e0:	b	37ec <grub_efi_compare_device_paths+0xdc>
    37e4:	ldp	x21, x22, [sp, #32]
    37e8:	sub	w0, w2, w0
    37ec:	ldp	x19, x20, [sp, #16]
    37f0:	ldp	x29, x30, [sp], #48
    37f4:	ret
    37f8:	mov	w0, #0x1                   	// #1
    37fc:	ret
    3800:	ldp	x21, x22, [sp, #32]
    3804:	b	37ec <grub_efi_compare_device_paths+0xdc>

0000000000003808 <grub_efi_init>:
    3808:	stp	x29, x30, [sp, #-16]!
    380c:	mov	x29, sp
    3810:	bl	2768 <grub_efi_modules_addr>
    3814:	adrp	x1, 0 <_start>
    3818:	ldr	x1, [x1]
    381c:	str	x0, [x1]
    3820:	bl	4b68 <grub_console_init>
    3824:	bl	3ff8 <grub_efi_mm_init>
    3828:	adrp	x0, 0 <_start>
    382c:	ldr	x0, [x0]
    3830:	ldr	x0, [x0]
    3834:	ldr	x0, [x0, #96]
    3838:	ldr	x4, [x0, #256]
    383c:	mov	x3, #0x0                   	// #0
    3840:	mov	x2, #0x0                   	// #0
    3844:	mov	x1, #0x0                   	// #0
    3848:	mov	x0, #0x0                   	// #0
    384c:	blr	x4
    3850:	bl	1670 <grub_efidisk_init>
    3854:	ldp	x29, x30, [sp], #16
    3858:	ret
    385c:	nop
	...

0000000000003870 <grub_machine_get_bootlocation>:
    3870:	stp	x29, x30, [sp, #-48]!
    3874:	mov	x29, sp
    3878:	stp	x19, x20, [sp, #16]
    387c:	str	x21, [sp, #32]
    3880:	mov	x20, x0
    3884:	mov	x21, x1
    3888:	adrp	x2, 0 <_start>
    388c:	ldr	x2, [x2]
    3890:	ldr	x0, [x2]
    3894:	bl	21b8 <grub_efi_get_loaded_image>
    3898:	cbz	x0, 38d0 <grub_machine_get_bootlocation+0x60>
    389c:	mov	x19, x0
    38a0:	ldr	x0, [x0, #24]
    38a4:	bl	1aa0 <grub_efidisk_get_device_name>
    38a8:	str	x0, [x20]
    38ac:	cbz	x0, 38e0 <grub_machine_get_bootlocation+0x70>
    38b0:	ldr	x0, [x19, #32]
    38b4:	bl	2860 <grub_efi_get_filename>
    38b8:	str	x0, [x21]
    38bc:	cbz	x0, 38d0 <grub_machine_get_bootlocation+0x60>
    38c0:	mov	w1, #0x2f                  	// #47
    38c4:	bl	99ec <grub_strrchr>
    38c8:	cbz	x0, 38d0 <grub_machine_get_bootlocation+0x60>
    38cc:	strb	wzr, [x0]
    38d0:	ldp	x19, x20, [sp, #16]
    38d4:	ldr	x21, [sp, #32]
    38d8:	ldp	x29, x30, [sp], #48
    38dc:	ret
    38e0:	adrp	x0, 0 <_start>
    38e4:	ldr	x0, [x0]
    38e8:	ldr	x3, [x0]
    38ec:	cbz	x3, 38b0 <grub_machine_get_bootlocation+0x40>
    38f0:	mov	x2, x21
    38f4:	mov	x1, x20
    38f8:	ldr	x0, [x19, #24]
    38fc:	blr	x3
    3900:	b	38d0 <grub_machine_get_bootlocation+0x60>
    3904:	nop
	...

0000000000003918 <grub_efi_fini>:
    3918:	stp	x29, x30, [sp, #-16]!
    391c:	mov	x29, sp
    3920:	bl	a90 <grub_efidisk_fini>
    3924:	bl	4c90 <grub_console_fini>
    3928:	bl	3fa8 <grub_efi_memory_fini>
    392c:	ldp	x29, x30, [sp], #16
    3930:	ret
    3934:	nop

0000000000003938 <grub_efi_free_pages>:
    3938:	stp	x29, x30, [sp, #-32]!
    393c:	mov	x29, sp
    3940:	stp	x19, x20, [sp, #16]
    3944:	mov	x19, x0
    3948:	mov	x20, x1
    394c:	adrp	x2, 0 <_start>
    3950:	ldr	x2, [x2]
    3954:	ldr	x2, [x2]
    3958:	ldr	x2, [x2, #96]
    395c:	ldr	x2, [x2, #48]
    3960:	blr	x2
    3964:	adrp	x0, 0 <_start>
    3968:	ldr	x0, [x0]
    396c:	ldr	x0, [x0]
    3970:	cbz	x0, 39c8 <grub_efi_free_pages+0x90>
    3974:	mov	x1, #0x0                   	// #0
    3978:	b	398c <grub_efi_free_pages+0x54>
    397c:	ldr	x2, [x0, #16]
    3980:	mov	x1, x0
    3984:	cbz	x2, 39c8 <grub_efi_free_pages+0x90>
    3988:	mov	x0, x2
    398c:	ldr	x2, [x0]
    3990:	cmp	x19, x2
    3994:	b.ne	397c <grub_efi_free_pages+0x44>  // b.any
    3998:	ldr	x2, [x0, #8]
    399c:	cmp	x20, x2
    39a0:	b.ne	397c <grub_efi_free_pages+0x44>  // b.any
    39a4:	adrp	x2, 0 <_start>
    39a8:	ldr	x2, [x2]
    39ac:	ldr	x2, [x2]
    39b0:	ldr	x2, [x2, #96]
    39b4:	cbz	x1, 39d4 <grub_efi_free_pages+0x9c>
    39b8:	ldr	x3, [x0, #16]
    39bc:	str	x3, [x1, #16]
    39c0:	ldr	x1, [x2, #72]
    39c4:	blr	x1
    39c8:	ldp	x19, x20, [sp, #16]
    39cc:	ldp	x29, x30, [sp], #32
    39d0:	ret
    39d4:	adrp	x1, 0 <_start>
    39d8:	ldr	x1, [x1]
    39dc:	ldr	x3, [x0, #16]
    39e0:	str	x3, [x1]
    39e4:	b	39c0 <grub_efi_free_pages+0x88>
	...

00000000000039f8 <grub_efi_allocate_pages_real>:
    39f8:	stp	x29, x30, [sp, #-80]!
    39fc:	mov	x29, sp
    3a00:	stp	x19, x20, [sp, #16]
    3a04:	str	x0, [sp, #56]
    3a08:	mov	x19, x1
    3a0c:	mov	x1, #0xffffffffffff        	// #281474976710655
    3a10:	cmp	x0, x1
    3a14:	b.hi	3b00 <grub_efi_allocate_pages_real+0x108>  // b.pmore
    3a18:	stp	x21, x22, [sp, #32]
    3a1c:	mov	w20, w2
    3a20:	mov	w21, w3
    3a24:	adrp	x0, 0 <_start>
    3a28:	ldr	x0, [x0]
    3a2c:	ldr	x0, [x0]
    3a30:	ldr	x22, [x0, #96]
    3a34:	ldr	x4, [x22, #40]
    3a38:	add	x3, sp, #0x38
    3a3c:	mov	x2, x19
    3a40:	mov	w1, w21
    3a44:	mov	w0, w20
    3a48:	blr	x4
    3a4c:	cbnz	x0, 3b08 <grub_efi_allocate_pages_real+0x110>
    3a50:	ldr	x0, [sp, #56]
    3a54:	cbnz	x0, 3a8c <grub_efi_allocate_pages_real+0x94>
    3a58:	mov	x0, #0xffffffffffff        	// #281474976710655
    3a5c:	str	x0, [sp, #56]
    3a60:	ldr	x4, [x22, #40]
    3a64:	add	x3, sp, #0x38
    3a68:	mov	x2, x19
    3a6c:	mov	w1, w21
    3a70:	mov	w0, w20
    3a74:	blr	x4
    3a78:	mov	x20, x0
    3a7c:	mov	x1, x19
    3a80:	mov	x0, #0x0                   	// #0
    3a84:	bl	3938 <grub_efi_free_pages>
    3a88:	cbnz	x20, 3b14 <grub_efi_allocate_pages_real+0x11c>
    3a8c:	ldr	x20, [sp, #56]
    3a90:	adrp	x0, 0 <_start>
    3a94:	ldr	x0, [x0]
    3a98:	ldr	x0, [x0]
    3a9c:	ldr	x0, [x0, #96]
    3aa0:	ldr	x3, [x0, #64]
    3aa4:	add	x2, sp, #0x48
    3aa8:	mov	x1, #0x18                  	// #24
    3aac:	mov	w0, #0x2                   	// #2
    3ab0:	blr	x3
    3ab4:	cbnz	x0, 3af0 <grub_efi_allocate_pages_real+0xf8>
    3ab8:	ldr	x1, [sp, #72]
    3abc:	adrp	x0, 0 <_start>
    3ac0:	ldr	x0, [x0]
    3ac4:	ldr	x2, [x0]
    3ac8:	str	x2, [x1, #16]
    3acc:	str	x20, [x1]
    3ad0:	ldr	x1, [sp, #72]
    3ad4:	str	x19, [x1, #8]
    3ad8:	str	x1, [x0]
    3adc:	ldr	x0, [sp, #56]
    3ae0:	ldp	x21, x22, [sp, #32]
    3ae4:	ldp	x19, x20, [sp, #16]
    3ae8:	ldp	x29, x30, [sp], #80
    3aec:	ret
    3af0:	adrp	x0, 0 <_start>
    3af4:	ldr	x0, [x0]
    3af8:	bl	abc0 <grub_err_printf>
    3afc:	b	3adc <grub_efi_allocate_pages_real+0xe4>
    3b00:	mov	x0, #0x0                   	// #0
    3b04:	b	3ae4 <grub_efi_allocate_pages_real+0xec>
    3b08:	mov	x0, #0x0                   	// #0
    3b0c:	ldp	x21, x22, [sp, #32]
    3b10:	b	3ae4 <grub_efi_allocate_pages_real+0xec>
    3b14:	mov	x0, #0x0                   	// #0
    3b18:	ldp	x21, x22, [sp, #32]
    3b1c:	b	3ae4 <grub_efi_allocate_pages_real+0xec>
	...

0000000000003b38 <grub_efi_allocate_any_pages>:
    3b38:	stp	x29, x30, [sp, #-16]!
    3b3c:	mov	x29, sp
    3b40:	mov	w3, #0x2                   	// #2
    3b44:	mov	w2, #0x1                   	// #1
    3b48:	mov	x1, x0
    3b4c:	mov	x0, #0xffffffffffff        	// #281474976710655
    3b50:	bl	39f8 <grub_efi_allocate_pages_real>
    3b54:	ldp	x29, x30, [sp], #16
    3b58:	ret

0000000000003b5c <grub_efi_allocate_fixed>:
    3b5c:	stp	x29, x30, [sp, #-16]!
    3b60:	mov	x29, sp
    3b64:	mov	w3, #0x2                   	// #2
    3b68:	mov	w2, w3
    3b6c:	bl	39f8 <grub_efi_allocate_pages_real>
    3b70:	ldp	x29, x30, [sp], #16
    3b74:	ret

0000000000003b78 <grub_efi_get_memory_map>:
    3b78:	stp	x29, x30, [sp, #-80]!
    3b7c:	mov	x29, sp
    3b80:	stp	x19, x20, [sp, #16]
    3b84:	stp	x21, x22, [sp, #32]
    3b88:	mov	x22, x0
    3b8c:	mov	x0, x1
    3b90:	mov	x20, x2
    3b94:	mov	x19, x3
    3b98:	mov	x21, x4
    3b9c:	adrp	x1, 0 <_start>
    3ba0:	ldr	x1, [x1]
    3ba4:	ldr	w1, [x1, #8]
    3ba8:	cbnz	w1, 3c38 <grub_efi_get_memory_map+0xc0>
    3bac:	cmp	x2, #0x0
    3bb0:	add	x1, sp, #0x48
    3bb4:	csel	x20, x1, x2, eq  // eq = none
    3bb8:	cmp	x4, #0x0
    3bbc:	add	x1, sp, #0x44
    3bc0:	csel	x21, x1, x4, eq  // eq = none
    3bc4:	cmp	x3, #0x0
    3bc8:	add	x1, sp, #0x38
    3bcc:	csel	x19, x1, x3, eq  // eq = none
    3bd0:	adrp	x1, 0 <_start>
    3bd4:	ldr	x1, [x1]
    3bd8:	ldr	x1, [x1]
    3bdc:	ldr	x1, [x1, #96]
    3be0:	ldr	x5, [x1, #56]
    3be4:	mov	x4, x21
    3be8:	mov	x3, x19
    3bec:	mov	x2, x20
    3bf0:	mov	x1, x0
    3bf4:	mov	x0, x22
    3bf8:	blr	x5
    3bfc:	mov	x1, x0
    3c00:	ldr	x0, [x19]
    3c04:	cbnz	x0, 3c10 <grub_efi_get_memory_map+0x98>
    3c08:	mov	x0, #0x28                  	// #40
    3c0c:	str	x0, [x19]
    3c10:	mov	w0, #0x1                   	// #1
    3c14:	cbz	x1, 3c28 <grub_efi_get_memory_map+0xb0>
    3c18:	mov	x0, #0x5                   	// #5
    3c1c:	movk	x0, #0x8000, lsl #48
    3c20:	cmp	x1, x0
    3c24:	csetm	w0, ne  // ne = any
    3c28:	ldp	x19, x20, [sp, #16]
    3c2c:	ldp	x21, x22, [sp, #32]
    3c30:	ldp	x29, x30, [sp], #80
    3c34:	ret
    3c38:	ldr	x2, [x22]
    3c3c:	adrp	x1, 0 <_start>
    3c40:	ldr	x1, [x1]
    3c44:	ldr	x1, [x1, #16]
    3c48:	cmp	x2, x1
    3c4c:	b.cs	3cb4 <grub_efi_get_memory_map+0x13c>  // b.hs, b.nlast
    3c50:	adrp	x1, 0 <_start>
    3c54:	ldr	x1, [x1]
    3c58:	ldr	x1, [x1, #24]
    3c5c:	bl	9854 <grub_memmove>
    3c60:	mov	w0, #0x0                   	// #0
    3c64:	adrp	x1, 0 <_start>
    3c68:	ldr	x1, [x1]
    3c6c:	ldr	x1, [x1, #16]
    3c70:	str	x1, [x22]
    3c74:	cbz	x20, 3c88 <grub_efi_get_memory_map+0x110>
    3c78:	adrp	x1, 0 <_start>
    3c7c:	ldr	x1, [x1]
    3c80:	ldr	x1, [x1, #32]
    3c84:	str	x1, [x20]
    3c88:	cbz	x19, 3c9c <grub_efi_get_memory_map+0x124>
    3c8c:	adrp	x1, 0 <_start>
    3c90:	ldr	x1, [x1]
    3c94:	ldr	x1, [x1, #40]
    3c98:	str	x1, [x19]
    3c9c:	cbz	x21, 3c28 <grub_efi_get_memory_map+0xb0>
    3ca0:	adrp	x1, 0 <_start>
    3ca4:	ldr	x1, [x1]
    3ca8:	ldr	w1, [x1, #48]
    3cac:	str	w1, [x21]
    3cb0:	b	3c28 <grub_efi_get_memory_map+0xb0>
    3cb4:	adrp	x2, 0 <_start>
    3cb8:	ldr	x3, [x2]
    3cbc:	mov	x2, x1
    3cc0:	ldr	x1, [x3, #24]
    3cc4:	bl	9854 <grub_memmove>
    3cc8:	mov	w0, #0x1                   	// #1
    3ccc:	b	3c64 <grub_efi_get_memory_map+0xec>
	...

0000000000003ce0 <grub_efi_finish_boot_services>:
    3ce0:	stp	x29, x30, [sp, #-112]!
    3ce4:	mov	x29, sp
    3ce8:	stp	x19, x20, [sp, #16]
    3cec:	stp	x21, x22, [sp, #32]
    3cf0:	stp	x23, x24, [sp, #48]
    3cf4:	stp	x25, x26, [sp, #64]
    3cf8:	stp	x27, x28, [sp, #80]
    3cfc:	mov	x22, x0
    3d00:	mov	x21, x1
    3d04:	mov	x28, x2
    3d08:	mov	x27, x3
    3d0c:	str	x4, [sp, #104]
    3d10:	adrp	x19, 0 <_start>
    3d14:	adrp	x24, 0 <_start>
    3d18:	adrp	x23, 0 <_start>
    3d1c:	mov	x25, #0x2                   	// #2
    3d20:	movk	x25, #0x8000, lsl #48
    3d24:	adrp	x26, 0 <_start>
    3d28:	b	3dd4 <grub_efi_finish_boot_services+0xf4>
    3d2c:	adrp	x0, 0 <_start>
    3d30:	ldr	x1, [x0]
    3d34:	mov	w0, #0x1d                  	// #29
    3d38:	bl	8408 <grub_error>
    3d3c:	ldp	x19, x20, [sp, #16]
    3d40:	ldp	x21, x22, [sp, #32]
    3d44:	ldp	x23, x24, [sp, #48]
    3d48:	ldp	x25, x26, [sp, #64]
    3d4c:	ldp	x27, x28, [sp, #80]
    3d50:	ldp	x29, x30, [sp], #112
    3d54:	ret
    3d58:	ldr	x20, [x19]
    3d5c:	ldr	x0, [x20, #16]
    3d60:	bl	5420 <grub_malloc>
    3d64:	mov	x1, x0
    3d68:	str	x0, [x20, #24]
    3d6c:	cbz	x0, 3e20 <grub_efi_finish_boot_services+0x140>
    3d70:	ldr	x0, [x19]
    3d74:	add	x4, x0, #0x30
    3d78:	add	x3, x0, #0x28
    3d7c:	add	x2, x0, #0x20
    3d80:	add	x0, x0, #0x10
    3d84:	bl	3b78 <grub_efi_get_memory_map>
    3d88:	cmp	w0, #0x0
    3d8c:	b.le	3e30 <grub_efi_finish_boot_services+0x150>
    3d90:	ldr	x1, [x19]
    3d94:	ldr	x0, [x24]
    3d98:	ldr	x2, [x23]
    3d9c:	ldr	x2, [x2]
    3da0:	ldr	x2, [x2, #96]
    3da4:	ldr	x2, [x2, #232]
    3da8:	ldr	x1, [x1, #32]
    3dac:	ldr	x0, [x0]
    3db0:	blr	x2
    3db4:	cbz	x0, 3e78 <grub_efi_finish_boot_services+0x198>
    3db8:	cmp	x0, x25
    3dbc:	b.ne	3e54 <grub_efi_finish_boot_services+0x174>  // b.any
    3dc0:	ldr	x0, [x19]
    3dc4:	ldr	x0, [x0, #24]
    3dc8:	bl	547c <grub_free>
    3dcc:	ldr	x0, [x26]
    3dd0:	bl	abc0 <grub_err_printf>
    3dd4:	ldr	x0, [x19]
    3dd8:	add	x4, x0, #0x30
    3ddc:	add	x3, x0, #0x28
    3de0:	add	x2, x0, #0x20
    3de4:	ldr	x1, [x0, #24]
    3de8:	add	x0, x0, #0x10
    3dec:	bl	3b78 <grub_efi_get_memory_map>
    3df0:	tbnz	w0, #31, 3d2c <grub_efi_finish_boot_services+0x4c>
    3df4:	cbz	x21, 3d58 <grub_efi_finish_boot_services+0x78>
    3df8:	ldr	x0, [x19]
    3dfc:	ldr	x1, [x22]
    3e00:	ldr	x0, [x0, #16]
    3e04:	cmp	x1, x0
    3e08:	b.cs	3d58 <grub_efi_finish_boot_services+0x78>  // b.hs, b.nlast
    3e0c:	adrp	x0, 0 <_start>
    3e10:	ldr	x1, [x0]
    3e14:	mov	w0, #0x1d                  	// #29
    3e18:	bl	8408 <grub_error>
    3e1c:	b	3d3c <grub_efi_finish_boot_services+0x5c>
    3e20:	adrp	x0, 0 <_start>
    3e24:	ldr	x0, [x0]
    3e28:	ldr	w0, [x0]
    3e2c:	b	3d3c <grub_efi_finish_boot_services+0x5c>
    3e30:	adrp	x0, 0 <_start>
    3e34:	ldr	x0, [x0]
    3e38:	ldr	x0, [x0, #24]
    3e3c:	bl	547c <grub_free>
    3e40:	adrp	x0, 0 <_start>
    3e44:	ldr	x1, [x0]
    3e48:	mov	w0, #0x1d                  	// #29
    3e4c:	bl	8408 <grub_error>
    3e50:	b	3d3c <grub_efi_finish_boot_services+0x5c>
    3e54:	adrp	x0, 0 <_start>
    3e58:	ldr	x0, [x0]
    3e5c:	ldr	x0, [x0, #24]
    3e60:	bl	547c <grub_free>
    3e64:	adrp	x0, 0 <_start>
    3e68:	ldr	x1, [x0]
    3e6c:	mov	w0, #0x1d                  	// #29
    3e70:	bl	8408 <grub_error>
    3e74:	b	3d3c <grub_efi_finish_boot_services+0x5c>
    3e78:	adrp	x0, 0 <_start>
    3e7c:	ldr	x0, [x0]
    3e80:	mov	w1, #0x1                   	// #1
    3e84:	str	w1, [x0, #8]
    3e88:	cbz	x22, 3e9c <grub_efi_finish_boot_services+0x1bc>
    3e8c:	adrp	x0, 0 <_start>
    3e90:	ldr	x0, [x0]
    3e94:	ldr	x0, [x0, #16]
    3e98:	str	x0, [x22]
    3e9c:	cbz	x21, 3eb8 <grub_efi_finish_boot_services+0x1d8>
    3ea0:	adrp	x0, 0 <_start>
    3ea4:	ldr	x0, [x0]
    3ea8:	ldr	x2, [x0, #16]
    3eac:	ldr	x1, [x0, #24]
    3eb0:	mov	x0, x21
    3eb4:	bl	9854 <grub_memmove>
    3eb8:	cbz	x28, 3ecc <grub_efi_finish_boot_services+0x1ec>
    3ebc:	adrp	x0, 0 <_start>
    3ec0:	ldr	x0, [x0]
    3ec4:	ldr	x0, [x0, #32]
    3ec8:	str	x0, [x28]
    3ecc:	cbz	x27, 3ee0 <grub_efi_finish_boot_services+0x200>
    3ed0:	adrp	x0, 0 <_start>
    3ed4:	ldr	x0, [x0]
    3ed8:	ldr	x0, [x0, #40]
    3edc:	str	x0, [x27]
    3ee0:	mov	w0, #0x0                   	// #0
    3ee4:	ldr	x1, [sp, #104]
    3ee8:	cbz	x1, 3d3c <grub_efi_finish_boot_services+0x5c>
    3eec:	adrp	x0, 0 <_start>
    3ef0:	ldr	x0, [x0]
    3ef4:	ldr	w0, [x0, #48]
    3ef8:	str	w0, [x1]
    3efc:	mov	w0, #0x0                   	// #0
    3f00:	b	3d3c <grub_efi_finish_boot_services+0x5c>
    3f04:	nop
	...

0000000000003f48 <grub_efi_find_mmap_size>:
    3f48:	stp	x29, x30, [sp, #-32]!
    3f4c:	mov	x29, sp
    3f50:	str	xzr, [sp, #24]
    3f54:	mov	x4, #0x0                   	// #0
    3f58:	add	x3, sp, #0x10
    3f5c:	mov	x2, #0x0                   	// #0
    3f60:	mov	x1, #0x0                   	// #0
    3f64:	add	x0, sp, #0x18
    3f68:	bl	3b78 <grub_efi_get_memory_map>
    3f6c:	tbnz	w0, #31, 3f88 <grub_efi_find_mmap_size+0x40>
    3f70:	ldr	x0, [sp, #24]
    3f74:	add	x0, x0, #0x1, lsl #12
    3f78:	add	x0, x0, #0xfff
    3f7c:	and	x0, x0, #0xfffffffffffff000
    3f80:	ldp	x29, x30, [sp], #32
    3f84:	ret
    3f88:	adrp	x0, 0 <_start>
    3f8c:	ldr	x1, [x0]
    3f90:	mov	w0, #0x1d                  	// #29
    3f94:	bl	8408 <grub_error>
    3f98:	mov	x0, #0x0                   	// #0
    3f9c:	b	3f80 <grub_efi_find_mmap_size+0x38>
	...

0000000000003fa8 <grub_efi_memory_fini>:
    3fa8:	adrp	x0, 0 <_start>
    3fac:	ldr	x0, [x0]
    3fb0:	ldr	x0, [x0]
    3fb4:	cbz	x0, 3fec <grub_efi_memory_fini+0x44>
    3fb8:	stp	x29, x30, [sp, #-32]!
    3fbc:	mov	x29, sp
    3fc0:	str	x19, [sp, #16]
    3fc4:	adrp	x19, 0 <_start>
    3fc8:	ldr	x1, [x0, #8]
    3fcc:	ldr	x0, [x0]
    3fd0:	bl	3938 <grub_efi_free_pages>
    3fd4:	ldr	x0, [x19]
    3fd8:	ldr	x0, [x0]
    3fdc:	cbnz	x0, 3fc8 <grub_efi_memory_fini+0x20>
    3fe0:	ldr	x19, [sp, #16]
    3fe4:	ldp	x29, x30, [sp], #32
    3fe8:	ret
    3fec:	ret
	...

0000000000003ff8 <grub_efi_mm_init>:
    3ff8:	stp	x29, x30, [sp, #-160]!
    3ffc:	mov	x29, sp
    4000:	stp	x19, x20, [sp, #16]
    4004:	stp	x21, x22, [sp, #32]
    4008:	stp	x23, x24, [sp, #48]
    400c:	stp	x25, x26, [sp, #64]
    4010:	stp	x27, x28, [sp, #80]
    4014:	mov	x0, #0x6                   	// #6
    4018:	bl	3b38 <grub_efi_allocate_any_pages>
    401c:	cbz	x0, 4084 <grub_efi_mm_init+0x8c>
    4020:	mov	x21, x0
    4024:	mov	x0, #0x3000                	// #12288
    4028:	str	x0, [sp, #152]
    402c:	mov	x4, #0x0                   	// #0
    4030:	add	x3, sp, #0x90
    4034:	mov	x2, #0x0                   	// #0
    4038:	mov	x1, x21
    403c:	add	x0, sp, #0x98
    4040:	bl	3b78 <grub_efi_get_memory_map>
    4044:	cbz	w0, 4090 <grub_efi_mm_init+0x98>
    4048:	tbnz	w0, #31, 40ec <grub_efi_mm_init+0xf4>
    404c:	ldr	x20, [sp, #152]
    4050:	add	x20, x21, x20
    4054:	ldr	x22, [sp, #144]
    4058:	cmp	x21, x20
    405c:	b.cs	42e8 <grub_efi_mm_init+0x2f0>  // b.hs, b.nlast
    4060:	mov	x23, x20
    4064:	mov	x19, x21
    4068:	mov	x24, #0xffffffffffff        	// #281474976710655
    406c:	mov	x26, #0xfffff               	// #1048575
    4070:	mov	x25, #0xfffffffff           	// #68719476735
    4074:	mov	x28, #0xfff                 	// #4095
    4078:	movk	x28, #0x10, lsl #16
    407c:	mov	x27, #0x100000              	// #1048576
    4080:	b	4114 <grub_efi_mm_init+0x11c>
    4084:	adrp	x0, 0 <_start>
    4088:	ldr	x0, [x0]
    408c:	bl	af6c <grub_fatal>
    4090:	mov	x1, #0x6                   	// #6
    4094:	mov	x0, x21
    4098:	bl	3938 <grub_efi_free_pages>
    409c:	ldr	x0, [sp, #144]
    40a0:	ldr	x1, [sp, #152]
    40a4:	add	x0, x1, x0, lsl #5
    40a8:	str	x0, [sp, #152]
    40ac:	add	x0, x0, #0xfff
    40b0:	lsr	x0, x0, #12
    40b4:	lsl	x0, x0, #1
    40b8:	bl	3b38 <grub_efi_allocate_any_pages>
    40bc:	mov	x21, x0
    40c0:	cbz	x0, 40e0 <grub_efi_mm_init+0xe8>
    40c4:	mov	x4, #0x0                   	// #0
    40c8:	add	x3, sp, #0x90
    40cc:	mov	x2, #0x0                   	// #0
    40d0:	mov	x1, x0
    40d4:	add	x0, sp, #0x98
    40d8:	bl	3b78 <grub_efi_get_memory_map>
    40dc:	b	4048 <grub_efi_mm_init+0x50>
    40e0:	adrp	x0, 0 <_start>
    40e4:	ldr	x0, [x0]
    40e8:	bl	af6c <grub_fatal>
    40ec:	adrp	x0, 0 <_start>
    40f0:	ldr	x0, [x0]
    40f4:	bl	af6c <grub_fatal>
    40f8:	ldr	x1, [x23, #24]
    40fc:	add	x0, x23, x22
    4100:	cmp	x1, #0x0
    4104:	csel	x23, x0, x23, ne  // ne = any
    4108:	add	x19, x19, x22
    410c:	cmp	x20, x19
    4110:	b.ls	4198 <grub_efi_mm_init+0x1a0>  // b.plast
    4114:	ldr	w0, [x19]
    4118:	cmp	w0, #0x7
    411c:	b.ne	4108 <grub_efi_mm_init+0x110>  // b.any
    4120:	ldr	x0, [x19, #8]
    4124:	cmp	x0, x24
    4128:	b.hi	4108 <grub_efi_mm_init+0x110>  // b.pmore
    412c:	ldr	x1, [x19, #24]
    4130:	add	x0, x0, x1, lsl #12
    4134:	cmp	x0, #0x100, lsl #12
    4138:	ccmp	x1, #0x0, #0x4, hi  // hi = pmore
    413c:	b.eq	4108 <grub_efi_mm_init+0x110>  // b.none
    4140:	mov	x2, x22
    4144:	mov	x1, x19
    4148:	mov	x0, x23
    414c:	bl	9854 <grub_memmove>
    4150:	ldr	x0, [x19, #8]
    4154:	cmp	x0, x26
    4158:	b.hi	4170 <grub_efi_mm_init+0x178>  // b.pmore
    415c:	sub	x0, x28, x0
    4160:	ldr	x1, [x19, #24]
    4164:	sub	x0, x1, x0, lsr #12
    4168:	str	x0, [x19, #24]
    416c:	str	x27, [x19, #8]
    4170:	ldr	x0, [x23, #8]
    4174:	add	x0, x0, #0xfff
    4178:	lsr	x0, x0, #12
    417c:	ldr	x1, [x23, #24]
    4180:	add	x1, x0, x1
    4184:	cmp	x1, x25
    4188:	b.ls	40f8 <grub_efi_mm_init+0x100>  // b.plast
    418c:	sub	x0, x25, x0
    4190:	str	x0, [x23, #24]
    4194:	b	40f8 <grub_efi_mm_init+0x100>
    4198:	ldr	x3, [sp, #144]
    419c:	cmp	x20, x23
    41a0:	b.cs	42e8 <grub_efi_mm_init+0x2f0>  // b.hs, b.nlast
    41a4:	mov	x0, x20
    41a8:	mov	x19, #0x0                   	// #0
    41ac:	ldr	x1, [x0, #24]
    41b0:	add	x19, x19, x1
    41b4:	add	x0, x0, x3
    41b8:	cmp	x0, x23
    41bc:	b.cc	41ac <grub_efi_mm_init+0x1b4>  // b.lo, b.ul, b.last
    41c0:	lsr	x19, x19, #2
    41c4:	cmp	x19, #0x64, lsl #12
    41c8:	mov	x0, #0x4000                	// #16384
    41cc:	movk	x0, #0x6, lsl #16
    41d0:	csel	x19, x19, x0, ls  // ls = plast
    41d4:	cmp	x19, #0x100
    41d8:	mov	x0, #0x100                 	// #256
    41dc:	csel	x19, x19, x0, cs  // cs = hs, nlast
    41e0:	mov	x2, x20
    41e4:	mov	x1, x20
    41e8:	b	4230 <grub_efi_mm_init+0x238>
    41ec:	ldp	x10, x11, [x2]
    41f0:	stp	x10, x11, [sp, #104]
    41f4:	ldp	x8, x9, [x2, #16]
    41f8:	stp	x8, x9, [sp, #120]
    41fc:	ldr	x0, [x2, #32]
    4200:	str	x0, [sp, #136]
    4204:	ldp	x6, x7, [x1]
    4208:	stp	x6, x7, [x2]
    420c:	ldp	x6, x7, [x1, #16]
    4210:	stp	x6, x7, [x2, #16]
    4214:	ldr	x5, [x1, #32]
    4218:	str	x5, [x2, #32]
    421c:	stp	x10, x11, [x1]
    4220:	stp	x8, x9, [x1, #16]
    4224:	str	x0, [x1, #32]
    4228:	add	x2, x2, x3
    422c:	mov	x1, x4
    4230:	add	x4, x1, x3
    4234:	cmp	x4, x23
    4238:	b.cs	4324 <grub_efi_mm_init+0x32c>  // b.hs, b.nlast
    423c:	mov	x0, x4
    4240:	ldr	x6, [x1, #24]
    4244:	ldr	x5, [x0, #24]
    4248:	cmp	x6, x5
    424c:	csel	x1, x1, x0, cs  // cs = hs, nlast
    4250:	add	x0, x0, x3
    4254:	cmp	x0, x23
    4258:	b.cc	4240 <grub_efi_mm_init+0x248>  // b.lo, b.ul, b.last
    425c:	cmp	x1, x2
    4260:	b.ne	41ec <grub_efi_mm_init+0x1f4>  // b.any
    4264:	b	4228 <grub_efi_mm_init+0x230>
    4268:	mov	w3, w26
    426c:	mov	w2, w25
    4270:	mov	x1, x22
    4274:	mov	x0, x24
    4278:	bl	39f8 <grub_efi_allocate_pages_real>
    427c:	cbz	x0, 42e0 <grub_efi_mm_init+0x2e8>
    4280:	lsl	x1, x22, #12
    4284:	bl	5608 <grub_mm_init_region>
    4288:	subs	x19, x19, x22
    428c:	b.eq	42fc <grub_efi_mm_init+0x304>  // b.none
    4290:	add	x20, x20, x27
    4294:	cmp	x20, x23
    4298:	b.cs	42e8 <grub_efi_mm_init+0x2f0>  // b.hs, b.nlast
    429c:	ldr	x24, [x20, #8]
    42a0:	ldr	x22, [x20, #24]
    42a4:	cmp	x22, x19
    42a8:	b.ls	4268 <grub_efi_mm_init+0x270>  // b.plast
    42ac:	sub	x22, x22, x19
    42b0:	add	x24, x24, x22, lsl #12
    42b4:	mov	w3, #0x1                   	// #1
    42b8:	mov	w2, #0x2                   	// #2
    42bc:	mov	x1, x19
    42c0:	mov	x0, x24
    42c4:	bl	39f8 <grub_efi_allocate_pages_real>
    42c8:	cbnz	x0, 42f4 <grub_efi_mm_init+0x2fc>
    42cc:	mov	w2, w19
    42d0:	mov	x1, x24
    42d4:	adrp	x0, 0 <_start>
    42d8:	ldr	x0, [x0]
    42dc:	bl	af6c <grub_fatal>
    42e0:	mov	x19, x22
    42e4:	b	42cc <grub_efi_mm_init+0x2d4>
    42e8:	adrp	x0, 0 <_start>
    42ec:	ldr	x0, [x0]
    42f0:	bl	af6c <grub_fatal>
    42f4:	lsl	x1, x19, #12
    42f8:	bl	5608 <grub_mm_init_region>
    42fc:	mov	x1, #0x6                   	// #6
    4300:	mov	x0, x21
    4304:	bl	3938 <grub_efi_free_pages>
    4308:	ldp	x19, x20, [sp, #16]
    430c:	ldp	x21, x22, [sp, #32]
    4310:	ldp	x23, x24, [sp, #48]
    4314:	ldp	x25, x26, [sp, #64]
    4318:	ldp	x27, x28, [sp, #80]
    431c:	ldp	x29, x30, [sp], #160
    4320:	ret
    4324:	ldr	x27, [sp, #144]
    4328:	mov	w26, #0x1                   	// #1
    432c:	mov	w25, #0x2                   	// #2
    4330:	b	429c <grub_efi_mm_init+0x2a4>
    4334:	nop
	...

0000000000004358 <grub_efi_get_ram_base>:
    4358:	stp	x29, x30, [sp, #-48]!
    435c:	mov	x29, sp
    4360:	stp	x19, x20, [sp, #16]
    4364:	mov	x19, x0
    4368:	bl	3f48 <grub_efi_find_mmap_size>
    436c:	str	x0, [sp, #40]
    4370:	bl	5420 <grub_malloc>
    4374:	cbz	x0, 4404 <grub_efi_get_ram_base+0xac>
    4378:	mov	x20, x0
    437c:	mov	x4, #0x0                   	// #0
    4380:	add	x3, sp, #0x20
    4384:	mov	x2, #0x0                   	// #0
    4388:	mov	x1, x0
    438c:	add	x0, sp, #0x28
    4390:	bl	3b78 <grub_efi_get_memory_map>
    4394:	cmp	w0, #0x0
    4398:	b.le	440c <grub_efi_get_ram_base+0xb4>
    439c:	mov	x0, #0xffffffffffff        	// #281474976710655
    43a0:	str	x0, [x19]
    43a4:	ldr	x4, [sp, #40]
    43a8:	add	x4, x20, x4
    43ac:	cmp	x20, x4
    43b0:	b.cs	43ec <grub_efi_get_ram_base+0x94>  // b.hs, b.nlast
    43b4:	ldr	x0, [sp, #32]
    43b8:	mov	x1, x20
    43bc:	b	43cc <grub_efi_get_ram_base+0x74>
    43c0:	add	x1, x1, x0
    43c4:	cmp	x1, x4
    43c8:	b.cs	43ec <grub_efi_get_ram_base+0x94>  // b.hs, b.nlast
    43cc:	ldr	x2, [x1, #32]
    43d0:	tbz	w2, #3, 43c0 <grub_efi_get_ram_base+0x68>
    43d4:	ldr	x3, [x19]
    43d8:	ldr	x2, [x1, #8]
    43dc:	cmp	x2, x3
    43e0:	csel	x2, x2, x3, ls  // ls = plast
    43e4:	str	x2, [x19]
    43e8:	b	43c0 <grub_efi_get_ram_base+0x68>
    43ec:	mov	x0, x20
    43f0:	bl	547c <grub_free>
    43f4:	mov	w0, #0x0                   	// #0
    43f8:	ldp	x19, x20, [sp, #16]
    43fc:	ldp	x29, x30, [sp], #48
    4400:	ret
    4404:	mov	w0, #0x3                   	// #3
    4408:	b	43f8 <grub_efi_get_ram_base+0xa0>
    440c:	mov	w0, #0x26                  	// #38
    4410:	b	43f8 <grub_efi_get_ram_base+0xa0>
    4414:	nop
    4418:	adrp	x0, 0 <_start>
    441c:	ldr	x0, [x0]
    4420:	ldr	w0, [x0]
    4424:	cbnz	w0, 464c <grub_efi_get_ram_base+0x2f4>
    4428:	stp	x29, x30, [sp, #-96]!
    442c:	mov	x29, sp
    4430:	str	x19, [sp, #16]
    4434:	adrp	x0, 0 <_start>
    4438:	ldr	x0, [x0]
    443c:	ldr	x0, [x0]
    4440:	ldr	x19, [x0, #64]
    4444:	ldr	w5, [x1]
    4448:	ubfx	x5, x5, #0, #23
    444c:	mov	w0, #0xffff                	// #65535
    4450:	cmp	w5, w0
    4454:	b.ls	4494 <grub_efi_get_ram_base+0x13c>  // b.plast
    4458:	mov	w0, #0x3f                  	// #63
    445c:	strh	w0, [sp, #32]
    4460:	ldrh	w9, [x1, #6]
    4464:	ubfx	x9, x9, #3, #8
    4468:	mov	w7, w9
    446c:	cbz	w9, 462c <grub_efi_get_ram_base+0x2d4>
    4470:	mov	x3, #0x0                   	// #0
    4474:	mov	w4, #0x1                   	// #1
    4478:	mov	w0, #0x0                   	// #0
    447c:	mov	w2, #0x2                   	// #2
    4480:	mov	w8, #0xfffe                	// #65534
    4484:	add	x10, sp, #0x20
    4488:	mov	x12, #0x0                   	// #0
    448c:	add	x11, x1, #0x18
    4490:	b	4604 <grub_efi_get_ram_base+0x2ac>
    4494:	and	w0, w5, #0xffff
    4498:	mov	w2, #0x2503                	// #9475
    449c:	cmp	w2, w5, uxth
    44a0:	b.eq	45c8 <grub_efi_get_ram_base+0x270>  // b.none
    44a4:	cmp	w0, w2
    44a8:	b.hi	457c <grub_efi_get_ram_base+0x224>  // b.pmore
    44ac:	mov	w2, #0x2192                	// #8594
    44b0:	cmp	w0, w2
    44b4:	b.eq	45d0 <grub_efi_get_ram_base+0x278>  // b.none
    44b8:	cmp	w0, w2
    44bc:	b.ls	44f8 <grub_efi_get_ram_base+0x1a0>  // b.plast
    44c0:	mov	w2, #0x2193                	// #8595
    44c4:	cmp	w0, w2
    44c8:	b.eq	4634 <grub_efi_get_ram_base+0x2dc>  // b.none
    44cc:	mov	w2, #0x2500                	// #9472
    44d0:	mov	w3, #0x2501                	// #9473
    44d4:	cmp	w0, w3
    44d8:	b.ne	45a0 <grub_efi_get_ram_base+0x248>  // b.any
    44dc:	strh	w2, [sp, #32]
    44e0:	ldrh	w9, [x1, #6]
    44e4:	ubfx	x9, x9, #3, #8
    44e8:	mov	w7, w9
    44ec:	cbnz	w9, 4470 <grub_efi_get_ram_base+0x118>
    44f0:	strh	wzr, [sp, #34]
    44f4:	b	454c <grub_efi_get_ram_base+0x1f4>
    44f8:	mov	w2, #0x25c4                	// #9668
    44fc:	mov	w3, #0x2190                	// #8592
    4500:	cmp	w0, w3
    4504:	b.eq	4518 <grub_efi_get_ram_base+0x1c0>  // b.none
    4508:	mov	w2, #0x25b2                	// #9650
    450c:	mov	w3, #0x2191                	// #8593
    4510:	cmp	w0, w3
    4514:	b.ne	45a0 <grub_efi_get_ram_base+0x248>  // b.any
    4518:	strh	w2, [sp, #32]
    451c:	ldrh	w9, [x1, #6]
    4520:	ubfx	x9, x9, #3, #8
    4524:	mov	w7, w9
    4528:	mov	w4, #0x1                   	// #1
    452c:	cbnz	w9, 4470 <grub_efi_get_ram_base+0x118>
    4530:	add	x0, sp, #0x20
    4534:	strh	wzr, [x0, w4, uxtw #1]
    4538:	cmp	w5, #0x7f
    453c:	b.hi	454c <grub_efi_get_ram_base+0x1f4>  // b.pmore
    4540:	ldrh	w0, [x1, #6]
    4544:	tst	w0, #0x7f8
    4548:	b.eq	4560 <grub_efi_get_ram_base+0x208>  // b.none
    454c:	ldr	x2, [x19, #16]
    4550:	add	x1, sp, #0x20
    4554:	mov	x0, x19
    4558:	blr	x2
    455c:	cbnz	x0, 4570 <grub_efi_get_ram_base+0x218>
    4560:	ldr	x2, [x19, #8]
    4564:	add	x1, sp, #0x20
    4568:	mov	x0, x19
    456c:	blr	x2
    4570:	ldr	x19, [sp, #16]
    4574:	ldp	x29, x30, [sp], #96
    4578:	ret
    457c:	mov	w2, #0x2517                	// #9495
    4580:	cmp	w0, w2
    4584:	b.eq	463c <grub_efi_get_ram_base+0x2e4>  // b.none
    4588:	cmp	w0, w2
    458c:	b.ls	45a8 <grub_efi_get_ram_base+0x250>  // b.plast
    4590:	mov	w2, #0x2518                	// #9496
    4594:	mov	w3, #0x251b                	// #9499
    4598:	cmp	w0, w3
    459c:	b.eq	44dc <grub_efi_get_ram_base+0x184>  // b.none
    45a0:	mov	w2, w0
    45a4:	b	4518 <grub_efi_get_ram_base+0x1c0>
    45a8:	mov	w2, #0x250f                	// #9487
    45ac:	cmp	w0, w2
    45b0:	b.eq	4644 <grub_efi_get_ram_base+0x2ec>  // b.none
    45b4:	mov	w2, #0x2510                	// #9488
    45b8:	mov	w3, #0x2513                	// #9491
    45bc:	cmp	w0, w3
    45c0:	b.eq	44dc <grub_efi_get_ram_base+0x184>  // b.none
    45c4:	b	45a0 <grub_efi_get_ram_base+0x248>
    45c8:	mov	w2, #0x2502                	// #9474
    45cc:	b	4518 <grub_efi_get_ram_base+0x1c0>
    45d0:	mov	w2, #0x25ba                	// #9658
    45d4:	b	4518 <grub_efi_get_ram_base+0x1c0>
    45d8:	mov	x6, x12
    45dc:	ldr	w6, [x6, x3]
    45e0:	strh	w6, [x10, w4, uxtw #1]
    45e4:	mov	w4, w2
    45e8:	add	w0, w0, #0x1
    45ec:	cmp	w0, w7
    45f0:	b.cs	4530 <grub_efi_get_ram_base+0x1d8>  // b.hs, b.nlast
    45f4:	add	w2, w4, #0x1
    45f8:	add	x3, x3, #0x4
    45fc:	cmp	w2, #0x1f
    4600:	b.hi	4530 <grub_efi_get_ram_base+0x1d8>  // b.pmore
    4604:	cmp	w5, w8
    4608:	b.hi	45e8 <grub_efi_get_ram_base+0x290>  // b.pmore
    460c:	ldrh	w6, [x1, #6]
    4610:	tst	w6, #0x7f8
    4614:	b.eq	45d8 <grub_efi_get_ram_base+0x280>  // b.none
    4618:	mov	x6, x11
    461c:	cmp	w9, #0x2
    4620:	b.ls	45dc <grub_efi_get_ram_base+0x284>  // b.plast
    4624:	ldr	x6, [x1, #24]
    4628:	b	45dc <grub_efi_get_ram_base+0x284>
    462c:	strh	wzr, [sp, #34]
    4630:	b	454c <grub_efi_get_ram_base+0x1f4>
    4634:	mov	w2, #0x25bc                	// #9660
    4638:	b	44dc <grub_efi_get_ram_base+0x184>
    463c:	mov	w2, #0x2514                	// #9492
    4640:	b	44dc <grub_efi_get_ram_base+0x184>
    4644:	mov	w2, #0x250c                	// #9484
    4648:	b	44dc <grub_efi_get_ram_base+0x184>
    464c:	ret
	...
    4660:	lsr	w1, w0, #16
    4664:	ands	w0, w0, #0xffff
    4668:	b.ne	4698 <grub_efi_get_ram_base+0x340>  // b.any
    466c:	sub	w2, w1, #0x1
    4670:	and	w2, w2, #0xffff
    4674:	sub	w0, w1, #0x8
    4678:	and	w0, w0, #0xffff
    467c:	cmp	w2, #0x1e
    4680:	ccmp	w0, #0x2, #0x0, ls  // ls = plast
    4684:	add	w0, w1, #0x60
    4688:	orr	w0, w0, #0x2000000
    468c:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
    4690:	csel	w0, w0, w1, ne  // ne = any
    4694:	ret
    4698:	cmp	w1, #0xd
    469c:	cset	w2, eq  // eq = none
    46a0:	cmp	w2, #0x0
    46a4:	ccmp	w0, #0xd, #0x0, ne  // ne = any
    46a8:	b.eq	46e8 <grub_efi_get_ram_base+0x390>  // b.none
    46ac:	cmp	w0, #0x17
    46b0:	b.ls	46d8 <grub_efi_get_ram_base+0x380>  // b.plast
    46b4:	sub	w3, w1, #0x20
    46b8:	and	w3, w3, #0xffff
    46bc:	sub	w0, w1, #0x8
    46c0:	and	w0, w0, #0xffff
    46c4:	cmp	w3, #0x5f
    46c8:	ccmp	w0, #0x2, #0x0, hi  // hi = pmore
    46cc:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
    46d0:	csel	w0, w1, wzr, ne  // ne = any
    46d4:	b	4694 <grub_efi_get_ram_base+0x33c>
    46d8:	adrp	x1, 0 <_start>
    46dc:	ldr	x1, [x1]
    46e0:	ldr	w0, [x1, w0, sxtw #2]
    46e4:	b	4694 <grub_efi_get_ram_base+0x33c>
    46e8:	mov	w0, #0xd                   	// #13
    46ec:	b	4694 <grub_efi_get_ram_base+0x33c>
	...
    46f8:	stp	x29, x30, [sp, #-48]!
    46fc:	mov	x29, sp
    4700:	stp	x19, x20, [sp, #16]
    4704:	adrp	x1, 0 <_start>
    4708:	ldr	x1, [x1]
    470c:	ldr	w19, [x1]
    4710:	cbnz	w19, 47a4 <grub_efi_get_ram_base+0x44c>
    4714:	ldr	x0, [x0, #56]
    4718:	cbz	x0, 4774 <grub_efi_get_ram_base+0x41c>
    471c:	ldr	x2, [x0, #8]
    4720:	add	x1, sp, #0x20
    4724:	blr	x2
    4728:	cbnz	x0, 47a8 <grub_efi_get_ram_base+0x450>
    472c:	ldr	w20, [sp, #36]
    4730:	ldr	w0, [sp, #32]
    4734:	bl	4660 <grub_efi_get_ram_base+0x308>
    4738:	mov	w19, w0
    473c:	cbz	w0, 47a8 <grub_efi_get_ram_base+0x450>
    4740:	tbz	w20, #31, 47a8 <grub_efi_get_ram_base+0x450>
    4744:	tst	x20, #0x3
    4748:	b.eq	4758 <grub_efi_get_ram_base+0x400>  // b.none
    474c:	orr	w0, w0, #0x1000000
    4750:	tst	x19, #0x800000
    4754:	csel	w19, w0, w19, ne  // ne = any
    4758:	orr	w0, w19, #0x4000000
    475c:	tst	w20, #0x30
    4760:	csel	w19, w0, w19, ne  // ne = any
    4764:	orr	w0, w19, #0x2000000
    4768:	tst	w20, #0xc
    476c:	csel	w19, w0, w19, ne  // ne = any
    4770:	b	47a8 <grub_efi_get_ram_base+0x450>
    4774:	adrp	x0, 0 <_start>
    4778:	ldr	x0, [x0]
    477c:	ldr	x0, [x0]
    4780:	ldr	x0, [x0, #48]
    4784:	ldr	x2, [x0, #8]
    4788:	add	x1, sp, #0x20
    478c:	blr	x2
    4790:	cbnz	x0, 47a8 <grub_efi_get_ram_base+0x450>
    4794:	ldr	w0, [sp, #32]
    4798:	bl	4660 <grub_efi_get_ram_base+0x308>
    479c:	mov	w19, w0
    47a0:	b	47a8 <grub_efi_get_ram_base+0x450>
    47a4:	mov	w19, #0x0                   	// #0
    47a8:	mov	w0, w19
    47ac:	ldp	x19, x20, [sp, #16]
    47b0:	ldp	x29, x30, [sp], #48
    47b4:	ret
	...
    47c8:	stp	x29, x30, [sp, #-32]!
    47cc:	mov	x29, sp
    47d0:	adrp	x0, 0 <_start>
    47d4:	ldr	x0, [x0]
    47d8:	ldr	w0, [x0]
    47dc:	cbnz	w0, 480c <grub_efi_get_ram_base+0x4b4>
    47e0:	adrp	x0, 0 <_start>
    47e4:	ldr	x0, [x0]
    47e8:	ldr	x0, [x0]
    47ec:	ldr	x0, [x0, #64]
    47f0:	ldr	x1, [x0, #72]
    47f4:	ldr	x4, [x0, #24]
    47f8:	add	x3, sp, #0x10
    47fc:	add	x2, sp, #0x18
    4800:	ldrsw	x1, [x1, #4]
    4804:	blr	x4
    4808:	cbz	x0, 481c <grub_efi_get_ram_base+0x4c4>
    480c:	mov	x0, #0x50                  	// #80
    4810:	str	x0, [sp, #24]
    4814:	mov	x0, #0x19                  	// #25
    4818:	str	x0, [sp, #16]
    481c:	ldrh	w1, [sp, #16]
    4820:	ldr	x0, [sp, #24]
    4824:	bfi	w0, w1, #16, #16
    4828:	ldp	x29, x30, [sp], #32
    482c:	ret
	...
    4840:	adrp	x0, 0 <_start>
    4844:	ldr	x0, [x0]
    4848:	ldr	w0, [x0]
    484c:	cbnz	w0, 487c <grub_efi_get_ram_base+0x524>
    4850:	adrp	x0, 0 <_start>
    4854:	ldr	x0, [x0]
    4858:	ldr	x0, [x0]
    485c:	ldr	x0, [x0, #64]
    4860:	ldr	x0, [x0, #72]
    4864:	ldrh	w1, [x0, #16]
    4868:	ldr	w2, [x0, #12]
    486c:	mov	w0, #0x0                   	// #0
    4870:	bfxil	w0, w2, #0, #16
    4874:	bfi	w0, w1, #16, #16
    4878:	ret
    487c:	mov	w0, #0x0                   	// #0
    4880:	b	4878 <grub_efi_get_ram_base+0x520>
    4884:	nop
	...
    4898:	adrp	x0, 0 <_start>
    489c:	ldr	x0, [x0]
    48a0:	ldr	w0, [x0]
    48a4:	cbnz	w0, 48d8 <grub_efi_get_ram_base+0x580>
    48a8:	stp	x29, x30, [sp, #-16]!
    48ac:	mov	x29, sp
    48b0:	adrp	x0, 0 <_start>
    48b4:	ldr	x0, [x0]
    48b8:	ldr	x0, [x0]
    48bc:	ldr	x0, [x0, #64]
    48c0:	ldr	x3, [x0, #56]
    48c4:	lsr	w2, w1, #16
    48c8:	and	x1, x1, #0xffff
    48cc:	blr	x3
    48d0:	ldp	x29, x30, [sp], #16
    48d4:	ret
    48d8:	ret
    48dc:	nop
	...
    48f0:	adrp	x0, 0 <_start>
    48f4:	ldr	x0, [x0]
    48f8:	ldr	w0, [x0]
    48fc:	cbnz	w0, 495c <grub_efi_get_ram_base+0x604>
    4900:	stp	x29, x30, [sp, #-32]!
    4904:	mov	x29, sp
    4908:	stp	x19, x20, [sp, #16]
    490c:	adrp	x0, 0 <_start>
    4910:	ldr	x0, [x0]
    4914:	ldr	x0, [x0]
    4918:	ldr	x19, [x0, #64]
    491c:	ldr	x0, [x19, #72]
    4920:	ldr	w20, [x0, #8]
    4924:	ldr	x2, [x19, #40]
    4928:	mov	x1, #0x0                   	// #0
    492c:	mov	x0, x19
    4930:	blr	x2
    4934:	ldr	x1, [x19, #48]
    4938:	mov	x0, x19
    493c:	blr	x1
    4940:	ldr	x2, [x19, #40]
    4944:	sxtw	x1, w20
    4948:	mov	x0, x19
    494c:	blr	x2
    4950:	ldp	x19, x20, [sp, #16]
    4954:	ldp	x29, x30, [sp], #32
    4958:	ret
    495c:	ret
	...
    4970:	adrp	x0, 0 <_start>
    4974:	ldr	x0, [x0]
    4978:	ldr	w0, [x0]
    497c:	cbnz	w0, 49fc <grub_efi_get_ram_base+0x6a4>
    4980:	stp	x29, x30, [sp, #-16]!
    4984:	mov	x29, sp
    4988:	adrp	x0, 0 <_start>
    498c:	ldr	x0, [x0]
    4990:	ldr	x0, [x0]
    4994:	ldr	x0, [x0, #64]
    4998:	cmp	w1, #0x1
    499c:	b.eq	49c4 <grub_efi_get_ram_base+0x66c>  // b.none
    49a0:	cmp	w1, #0x2
    49a4:	b.eq	49e0 <grub_efi_get_ram_base+0x688>  // b.none
    49a8:	cbz	w1, 49b4 <grub_efi_get_ram_base+0x65c>
    49ac:	ldp	x29, x30, [sp], #16
    49b0:	ret
    49b4:	ldr	x2, [x0, #40]
    49b8:	mov	x1, #0x7                   	// #7
    49bc:	blr	x2
    49c0:	b	49ac <grub_efi_get_ram_base+0x654>
    49c4:	adrp	x1, 0 <_start>
    49c8:	ldr	x1, [x1]
    49cc:	ldrb	w1, [x1]
    49d0:	ldr	x2, [x0, #40]
    49d4:	and	x1, x1, #0x7f
    49d8:	blr	x2
    49dc:	b	49ac <grub_efi_get_ram_base+0x654>
    49e0:	adrp	x1, 0 <_start>
    49e4:	ldr	x1, [x1]
    49e8:	ldrb	w1, [x1]
    49ec:	ldr	x2, [x0, #40]
    49f0:	and	x1, x1, #0x7f
    49f4:	blr	x2
    49f8:	b	49ac <grub_efi_get_ram_base+0x654>
    49fc:	ret
	...
    4a20:	adrp	x0, 0 <_start>
    4a24:	ldr	x0, [x0]
    4a28:	ldr	w0, [x0]
    4a2c:	cbnz	w0, 4a58 <grub_efi_get_ram_base+0x700>
    4a30:	stp	x29, x30, [sp, #-16]!
    4a34:	mov	x29, sp
    4a38:	adrp	x0, 0 <_start>
    4a3c:	ldr	x0, [x0]
    4a40:	ldr	x0, [x0]
    4a44:	ldr	x0, [x0, #64]
    4a48:	ldr	x2, [x0, #64]
    4a4c:	blr	x2
    4a50:	ldp	x29, x30, [sp], #16
    4a54:	ret
    4a58:	ret
    4a5c:	nop
	...
    4a70:	stp	x29, x30, [sp, #-16]!
    4a74:	mov	x29, sp
    4a78:	mov	w1, #0x0                   	// #0
    4a7c:	bl	4a20 <grub_efi_get_ram_base+0x6c8>
    4a80:	mov	w0, #0x0                   	// #0
    4a84:	bl	20f8 <grub_efi_set_text_mode>
    4a88:	mov	w0, #0x0                   	// #0
    4a8c:	ldp	x29, x30, [sp], #16
    4a90:	ret
    4a94:	stp	x29, x30, [sp, #-32]!
    4a98:	mov	x29, sp
    4a9c:	str	x19, [sp, #16]
    4aa0:	mov	x19, x0
    4aa4:	mov	w0, #0x1                   	// #1
    4aa8:	bl	20f8 <grub_efi_set_text_mode>
    4aac:	mov	w1, #0x1                   	// #1
    4ab0:	mov	x0, x19
    4ab4:	bl	4a20 <grub_efi_get_ram_base+0x6c8>
    4ab8:	mov	w0, #0x0                   	// #0
    4abc:	ldr	x19, [sp, #16]
    4ac0:	ldp	x29, x30, [sp], #32
    4ac4:	ret
    4ac8:	stp	x29, x30, [sp, #-48]!
    4acc:	mov	x29, sp
    4ad0:	mov	w1, #0x7534                	// #30004
    4ad4:	movk	w1, #0xdd9e, lsl #16
    4ad8:	str	w1, [sp, #32]
    4adc:	mov	w1, #0x7762                	// #30562
    4ae0:	strh	w1, [sp, #36]
    4ae4:	mov	w1, #0x4698                	// #18072
    4ae8:	strh	w1, [sp, #38]
    4aec:	mov	x1, #0x148c                	// #5260
    4af0:	movk	x1, #0x85f5, lsl #16
    4af4:	movk	x1, #0xa617, lsl #32
    4af8:	movk	x1, #0xaa25, lsl #48
    4afc:	str	x1, [sp, #40]
    4b00:	adrp	x1, 0 <_start>
    4b04:	ldr	x1, [x1]
    4b08:	ldr	w1, [x1]
    4b0c:	cbnz	w1, 4b24 <grub_efi_get_ram_base+0x7cc>
    4b10:	str	x19, [sp, #16]
    4b14:	mov	x19, x0
    4b18:	ldr	x0, [x0, #56]
    4b1c:	cbz	x0, 4b30 <grub_efi_get_ram_base+0x7d8>
    4b20:	ldr	x19, [sp, #16]
    4b24:	mov	w0, #0x0                   	// #0
    4b28:	ldp	x29, x30, [sp], #48
    4b2c:	ret
    4b30:	adrp	x0, 0 <_start>
    4b34:	ldr	x0, [x0]
    4b38:	ldr	x0, [x0]
    4b3c:	mov	w2, #0x2                   	// #2
    4b40:	add	x1, sp, #0x20
    4b44:	ldr	x0, [x0, #40]
    4b48:	bl	2098 <grub_efi_open_protocol>
    4b4c:	str	x0, [x19, #56]
    4b50:	ldr	x19, [sp, #16]
    4b54:	b	4b24 <grub_efi_get_ram_base+0x7cc>
	...

0000000000004b68 <grub_console_init>:
    4b68:	stp	x29, x30, [sp, #-16]!
    4b6c:	mov	x29, sp
    4b70:	mov	w0, #0x1                   	// #1
    4b74:	bl	20f8 <grub_efi_set_text_mode>
    4b78:	cbz	w0, 4bd0 <grub_console_init+0x68>
    4b7c:	adrp	x0, 0 <_start>
    4b80:	ldr	x0, [x0]
    4b84:	ldr	x0, [x0]
    4b88:	cbz	x0, 4be4 <grub_console_init+0x7c>
    4b8c:	adrp	x0, 0 <_start>
    4b90:	ldr	x1, [x0]
    4b94:	adrp	x0, 0 <_start>
    4b98:	ldr	x0, [x0]
    4b9c:	bl	90e0 <grub_list_push>
    4ba0:	adrp	x0, 0 <_start>
    4ba4:	ldr	x0, [x0]
    4ba8:	ldr	x0, [x0]
    4bac:	cbz	x0, 4c1c <grub_console_init+0xb4>
    4bb0:	adrp	x0, 0 <_start>
    4bb4:	ldr	x1, [x0]
    4bb8:	add	x1, x1, #0x90
    4bbc:	adrp	x0, 0 <_start>
    4bc0:	ldr	x0, [x0]
    4bc4:	bl	90e0 <grub_list_push>
    4bc8:	ldp	x29, x30, [sp], #16
    4bcc:	ret
    4bd0:	adrp	x0, 0 <_start>
    4bd4:	ldr	x1, [x0]
    4bd8:	mov	w0, #0xd                   	// #13
    4bdc:	bl	8408 <grub_error>
    4be0:	b	4bc8 <grub_console_init+0x60>
    4be4:	adrp	x0, 0 <_start>
    4be8:	ldr	x0, [x0]
    4bec:	ldr	x1, [x0, #24]
    4bf0:	cbz	x1, 4c04 <grub_console_init+0x9c>
    4bf4:	adrp	x0, 0 <_start>
    4bf8:	ldr	x0, [x0]
    4bfc:	blr	x1
    4c00:	cbnz	w0, 4ba0 <grub_console_init+0x38>
    4c04:	adrp	x0, 0 <_start>
    4c08:	ldr	x1, [x0]
    4c0c:	adrp	x0, 0 <_start>
    4c10:	ldr	x0, [x0]
    4c14:	bl	90e0 <grub_list_push>
    4c18:	b	4ba0 <grub_console_init+0x38>
    4c1c:	adrp	x0, 0 <_start>
    4c20:	ldr	x0, [x0]
    4c24:	ldr	x1, [x0, #168]
    4c28:	cbz	x1, 4c40 <grub_console_init+0xd8>
    4c2c:	adrp	x0, 0 <_start>
    4c30:	ldr	x0, [x0]
    4c34:	add	x0, x0, #0x90
    4c38:	blr	x1
    4c3c:	cbnz	w0, 4bc8 <grub_console_init+0x60>
    4c40:	adrp	x0, 0 <_start>
    4c44:	ldr	x1, [x0]
    4c48:	add	x1, x1, #0x90
    4c4c:	adrp	x0, 0 <_start>
    4c50:	ldr	x0, [x0]
    4c54:	bl	90e0 <grub_list_push>
    4c58:	b	4bc8 <grub_console_init+0x60>
    4c5c:	nop
	...

0000000000004c90 <grub_console_fini>:
    4c90:	stp	x29, x30, [sp, #-32]!
    4c94:	mov	x29, sp
    4c98:	stp	x19, x20, [sp, #16]
    4c9c:	adrp	x0, 0 <_start>
    4ca0:	ldr	x19, [x0]
    4ca4:	add	x20, x19, #0x90
    4ca8:	mov	x0, x20
    4cac:	bl	9100 <grub_list_remove>
    4cb0:	mov	x0, x20
    4cb4:	bl	9100 <grub_list_remove>
    4cb8:	mov	x0, x19
    4cbc:	bl	9100 <grub_list_remove>
    4cc0:	mov	x0, x19
    4cc4:	bl	9100 <grub_list_remove>
    4cc8:	ldp	x19, x20, [sp, #16]
    4ccc:	ldp	x29, x30, [sp], #32
    4cd0:	ret
    4cd4:	nop
	...
    4ce0:	stp	x29, x30, [sp, #-64]!
    4ce4:	mov	x29, sp
    4ce8:	stp	x19, x20, [sp, #16]
    4cec:	mov	x19, x0
    4cf0:	cbz	x0, 4d88 <grub_console_fini+0xf8>
    4cf4:	stp	x21, x22, [sp, #32]
    4cf8:	mov	x22, x1
    4cfc:	mov	x2, #0x4                   	// #4
    4d00:	adrp	x0, 0 <_start>
    4d04:	ldr	x1, [x0]
    4d08:	mov	x0, x19
    4d0c:	bl	9918 <grub_memcmp>
    4d10:	cbnz	w0, 4d68 <grub_console_fini+0xd8>
    4d14:	add	x20, x19, #0x24
    4d18:	ldr	w0, [x19, #4]
    4d1c:	sub	x0, x0, #0x24
    4d20:	lsr	x21, x0, #2
    4d24:	cmp	x0, #0x3
    4d28:	b.ls	4d74 <grub_console_fini+0xe4>  // b.plast
    4d2c:	str	x23, [sp, #48]
    4d30:	mov	x23, #0x4                   	// #4
    4d34:	ldr	w19, [x20]
    4d38:	mov	x2, x23
    4d3c:	mov	x1, x22
    4d40:	mov	x0, x19
    4d44:	bl	9918 <grub_memcmp>
    4d48:	cbz	w0, 4d80 <grub_console_fini+0xf0>
    4d4c:	add	x20, x20, #0x4
    4d50:	subs	x21, x21, #0x1
    4d54:	b.ne	4d34 <grub_console_fini+0xa4>  // b.any
    4d58:	mov	x19, #0x0                   	// #0
    4d5c:	ldp	x21, x22, [sp, #32]
    4d60:	ldr	x23, [sp, #48]
    4d64:	b	4d88 <grub_console_fini+0xf8>
    4d68:	mov	x19, #0x0                   	// #0
    4d6c:	ldp	x21, x22, [sp, #32]
    4d70:	b	4d88 <grub_console_fini+0xf8>
    4d74:	mov	x19, #0x0                   	// #0
    4d78:	ldp	x21, x22, [sp, #32]
    4d7c:	b	4d88 <grub_console_fini+0xf8>
    4d80:	ldp	x21, x22, [sp, #32]
    4d84:	ldr	x23, [sp, #48]
    4d88:	mov	x0, x19
    4d8c:	ldp	x19, x20, [sp, #16]
    4d90:	ldp	x29, x30, [sp], #64
    4d94:	ret
	...

0000000000004da0 <grub_byte_checksum>:
    4da0:	mov	x2, x0
    4da4:	add	x1, x0, x1
    4da8:	cmp	x0, x1
    4dac:	b.cs	4dcc <grub_byte_checksum+0x2c>  // b.hs, b.nlast
    4db0:	mov	w0, #0x0                   	// #0
    4db4:	ldrb	w3, [x2], #1
    4db8:	add	w0, w0, w3
    4dbc:	and	w0, w0, #0xff
    4dc0:	cmp	x2, x1
    4dc4:	b.ne	4db4 <grub_byte_checksum+0x14>  // b.any
    4dc8:	ret
    4dcc:	mov	w0, #0x0                   	// #0
    4dd0:	b	4dc8 <grub_byte_checksum+0x28>

0000000000004dd4 <grub_acpi_find_fadt>:
    4dd4:	stp	x29, x30, [sp, #-64]!
    4dd8:	mov	x29, sp
    4ddc:	stp	x19, x20, [sp, #16]
    4de0:	bl	4ef0 <grub_machine_acpi_get_rsdpv1>
    4de4:	cbz	x0, 4e10 <grub_acpi_find_fadt+0x3c>
    4de8:	adrp	x1, 0 <_start>
    4dec:	ldr	x1, [x1]
    4df0:	ldr	w0, [x0, #16]
    4df4:	bl	4ce0 <grub_console_fini+0x50>
    4df8:	mov	x19, x0
    4dfc:	cbz	x0, 4e10 <grub_acpi_find_fadt+0x3c>
    4e00:	mov	x0, x19
    4e04:	ldp	x19, x20, [sp, #16]
    4e08:	ldp	x29, x30, [sp], #64
    4e0c:	ret
    4e10:	bl	4fb8 <grub_machine_acpi_get_rsdpv2>
    4e14:	mov	x20, x0
    4e18:	cbz	x0, 4ed4 <grub_acpi_find_fadt+0x100>
    4e1c:	adrp	x0, 0 <_start>
    4e20:	ldr	x1, [x0]
    4e24:	ldr	w0, [x20, #16]
    4e28:	bl	4ce0 <grub_console_fini+0x50>
    4e2c:	mov	x19, x0
    4e30:	cbnz	x0, 4e00 <grub_acpi_find_fadt+0x2c>
    4e34:	ldr	x20, [x20, #24]
    4e38:	cbz	x20, 4eb0 <grub_acpi_find_fadt+0xdc>
    4e3c:	mov	x2, #0x4                   	// #4
    4e40:	adrp	x0, 0 <_start>
    4e44:	ldr	x1, [x0]
    4e48:	mov	x0, x20
    4e4c:	bl	9918 <grub_memcmp>
    4e50:	cbnz	w0, 4eb8 <grub_acpi_find_fadt+0xe4>
    4e54:	stp	x21, x22, [sp, #32]
    4e58:	add	x21, x20, #0x24
    4e5c:	ldr	w0, [x20, #4]
    4e60:	sub	x0, x0, #0x24
    4e64:	lsr	x22, x0, #2
    4e68:	cmp	x0, #0x3
    4e6c:	b.ls	4ec0 <grub_acpi_find_fadt+0xec>  // b.plast
    4e70:	stp	x23, x24, [sp, #48]
    4e74:	adrp	x24, 0 <_start>
    4e78:	mov	x23, #0x4                   	// #4
    4e7c:	ldr	x20, [x21]
    4e80:	mov	x2, x23
    4e84:	ldr	x1, [x24]
    4e88:	mov	x0, x20
    4e8c:	bl	9918 <grub_memcmp>
    4e90:	cbz	w0, 4ecc <grub_acpi_find_fadt+0xf8>
    4e94:	add	x21, x21, #0x8
    4e98:	subs	x22, x22, #0x1
    4e9c:	b.ne	4e7c <grub_acpi_find_fadt+0xa8>  // b.any
    4ea0:	mov	x20, x19
    4ea4:	ldp	x21, x22, [sp, #32]
    4ea8:	ldp	x23, x24, [sp, #48]
    4eac:	b	4ed4 <grub_acpi_find_fadt+0x100>
    4eb0:	mov	x20, x0
    4eb4:	b	4ed4 <grub_acpi_find_fadt+0x100>
    4eb8:	mov	x20, x19
    4ebc:	b	4ed4 <grub_acpi_find_fadt+0x100>
    4ec0:	mov	x20, x19
    4ec4:	ldp	x21, x22, [sp, #32]
    4ec8:	b	4ed4 <grub_acpi_find_fadt+0x100>
    4ecc:	ldp	x21, x22, [sp, #32]
    4ed0:	ldp	x23, x24, [sp, #48]
    4ed4:	mov	x19, x20
    4ed8:	b	4e00 <grub_acpi_find_fadt+0x2c>
    4edc:	nop
	...

0000000000004ef0 <grub_machine_acpi_get_rsdpv1>:
    4ef0:	adrp	x0, 0 <_start>
    4ef4:	ldr	x0, [x0]
    4ef8:	ldr	x1, [x0]
    4efc:	ldr	x0, [x1, #104]
    4f00:	cbz	x0, 4fa0 <grub_machine_acpi_get_rsdpv1+0xb0>
    4f04:	stp	x29, x30, [sp, #-64]!
    4f08:	mov	x29, sp
    4f0c:	stp	x19, x20, [sp, #16]
    4f10:	stp	x21, x22, [sp, #32]
    4f14:	str	x23, [sp, #48]
    4f18:	mov	w19, #0x0                   	// #0
    4f1c:	mov	x0, #0x0                   	// #0
    4f20:	adrp	x21, 0 <_start>
    4f24:	mov	x20, #0x10                  	// #16
    4f28:	adrp	x22, 0 <_start>
    4f2c:	add	x0, x0, x0, lsl #1
    4f30:	lsl	x0, x0, #3
    4f34:	mov	x23, x0
    4f38:	ldr	x3, [x1, #112]
    4f3c:	mov	x2, x20
    4f40:	ldr	x1, [x21]
    4f44:	add	x0, x3, x0
    4f48:	bl	9918 <grub_memcmp>
    4f4c:	cbz	w0, 4f74 <grub_machine_acpi_get_rsdpv1+0x84>
    4f50:	add	w19, w19, #0x1
    4f54:	mov	w0, w19
    4f58:	ldr	x1, [x22]
    4f5c:	ldr	x1, [x1]
    4f60:	ldr	x2, [x1, #104]
    4f64:	cmp	x2, w19, uxtw
    4f68:	b.hi	4f2c <grub_machine_acpi_get_rsdpv1+0x3c>  // b.pmore
    4f6c:	mov	x0, #0x0                   	// #0
    4f70:	b	4f8c <grub_machine_acpi_get_rsdpv1+0x9c>
    4f74:	adrp	x0, 0 <_start>
    4f78:	ldr	x0, [x0]
    4f7c:	ldr	x0, [x0]
    4f80:	ldr	x0, [x0, #112]
    4f84:	add	x23, x0, x23
    4f88:	ldr	x0, [x23, #16]
    4f8c:	ldp	x19, x20, [sp, #16]
    4f90:	ldp	x21, x22, [sp, #32]
    4f94:	ldr	x23, [sp, #48]
    4f98:	ldp	x29, x30, [sp], #64
    4f9c:	ret
    4fa0:	mov	x0, #0x0                   	// #0
    4fa4:	ret
	...

0000000000004fb8 <grub_machine_acpi_get_rsdpv2>:
    4fb8:	adrp	x0, 0 <_start>
    4fbc:	ldr	x0, [x0]
    4fc0:	ldr	x2, [x0]
    4fc4:	ldr	x0, [x2, #104]
    4fc8:	cbz	x0, 506c <grub_machine_acpi_get_rsdpv2+0xb4>
    4fcc:	stp	x29, x30, [sp, #-64]!
    4fd0:	mov	x29, sp
    4fd4:	stp	x19, x20, [sp, #16]
    4fd8:	stp	x21, x22, [sp, #32]
    4fdc:	str	x23, [sp, #48]
    4fe0:	mov	w19, #0x0                   	// #0
    4fe4:	mov	x0, #0x0                   	// #0
    4fe8:	adrp	x21, 0 <_start>
    4fec:	mov	x20, #0x10                  	// #16
    4ff0:	adrp	x22, 0 <_start>
    4ff4:	add	x0, x0, x0, lsl #1
    4ff8:	lsl	x0, x0, #3
    4ffc:	mov	x23, x0
    5000:	ldr	x1, [x21]
    5004:	ldr	x3, [x2, #112]
    5008:	mov	x2, x20
    500c:	add	x1, x1, #0x10
    5010:	add	x0, x3, x0
    5014:	bl	9918 <grub_memcmp>
    5018:	cbz	w0, 5040 <grub_machine_acpi_get_rsdpv2+0x88>
    501c:	add	w19, w19, #0x1
    5020:	mov	w0, w19
    5024:	ldr	x1, [x22]
    5028:	ldr	x2, [x1]
    502c:	ldr	x1, [x2, #104]
    5030:	cmp	x1, w19, uxtw
    5034:	b.hi	4ff4 <grub_machine_acpi_get_rsdpv2+0x3c>  // b.pmore
    5038:	mov	x0, #0x0                   	// #0
    503c:	b	5058 <grub_machine_acpi_get_rsdpv2+0xa0>
    5040:	adrp	x0, 0 <_start>
    5044:	ldr	x0, [x0]
    5048:	ldr	x0, [x0]
    504c:	ldr	x0, [x0, #112]
    5050:	add	x23, x0, x23
    5054:	ldr	x0, [x23, #16]
    5058:	ldp	x19, x20, [sp, #16]
    505c:	ldp	x21, x22, [sp, #32]
    5060:	ldr	x23, [sp, #48]
    5064:	ldp	x29, x30, [sp], #64
    5068:	ret
    506c:	mov	x0, #0x0                   	// #0
    5070:	ret
    5074:	nop
	...

0000000000005088 <memcpy>:
    5088:	stp	x29, x30, [sp, #-16]!
    508c:	mov	x29, sp
    5090:	bl	9854 <grub_memmove>
    5094:	ldp	x29, x30, [sp], #16
    5098:	ret

000000000000509c <memmove>:
    509c:	stp	x29, x30, [sp, #-16]!
    50a0:	mov	x29, sp
    50a4:	bl	9854 <grub_memmove>
    50a8:	ldp	x29, x30, [sp], #16
    50ac:	ret

00000000000050b0 <memcmp>:
    50b0:	stp	x29, x30, [sp, #-16]!
    50b4:	mov	x29, sp
    50b8:	bl	9918 <grub_memcmp>
    50bc:	ldp	x29, x30, [sp], #16
    50c0:	ret

00000000000050c4 <memset>:
    50c4:	stp	x29, x30, [sp, #-16]!
    50c8:	mov	x29, sp
    50cc:	bl	9b50 <grub_memset>
    50d0:	ldp	x29, x30, [sp], #16
    50d4:	ret
    50d8:	stp	x29, x30, [sp, #-16]!
    50dc:	mov	x29, sp
    50e0:	tst	x0, #0x1f
    50e4:	b.ne	5110 <memset+0x4c>  // b.any
    50e8:	mov	x5, x0
    50ec:	adrp	x3, 0 <_start>
    50f0:	ldr	x3, [x3]
    50f4:	ldr	x3, [x3]
    50f8:	str	x3, [x2]
    50fc:	cbnz	x3, 512c <memset+0x68>
    5100:	mov	x1, x0
    5104:	adrp	x0, 0 <_start>
    5108:	ldr	x0, [x0]
    510c:	bl	af6c <grub_fatal>
    5110:	mov	x1, x0
    5114:	adrp	x0, 0 <_start>
    5118:	ldr	x0, [x0]
    511c:	bl	af6c <grub_fatal>
    5120:	ldr	x3, [x3, #8]
    5124:	str	x3, [x2]
    5128:	cbz	x3, 5100 <memset+0x3c>
    512c:	add	x4, x3, #0x20
    5130:	cmp	x5, x4
    5134:	b.ls	5120 <memset+0x5c>  // b.plast
    5138:	ldr	x4, [x3, #24]
    513c:	add	x4, x3, x4
    5140:	add	x4, x4, #0x20
    5144:	cmp	x5, x4
    5148:	b.hi	5120 <memset+0x5c>  // b.pmore
    514c:	sub	x3, x0, #0x20
    5150:	str	x3, [x1]
    5154:	ldur	x2, [x0, #-16]
    5158:	mov	x0, #0x2808                	// #10248
    515c:	movk	x0, #0x2d3c, lsl #16
    5160:	cmp	x2, x0
    5164:	b.eq	5180 <memset+0xbc>  // b.none
    5168:	mov	x0, #0x8fa4                	// #36772
    516c:	movk	x0, #0x6db0, lsl #16
    5170:	cmp	x2, x0
    5174:	b.ne	5190 <memset+0xcc>  // b.any
    5178:	ldp	x29, x30, [sp], #16
    517c:	ret
    5180:	mov	x1, x3
    5184:	adrp	x0, 0 <_start>
    5188:	ldr	x0, [x0]
    518c:	bl	af6c <grub_fatal>
    5190:	mov	x1, x3
    5194:	adrp	x0, 0 <_start>
    5198:	ldr	x0, [x0]
    519c:	bl	af6c <grub_fatal>
	...

00000000000051c8 <grub_memalign>:
    51c8:	stp	x29, x30, [sp, #-64]!
    51cc:	mov	x29, sp
    51d0:	adrp	x2, 0 <_start>
    51d4:	ldr	x2, [x2]
    51d8:	ldr	x2, [x2]
    51dc:	cbz	x2, 53e8 <grub_memalign+0x220>
    51e0:	mvn	x2, x0
    51e4:	cmp	x2, x1
    51e8:	b.cc	53e8 <grub_memalign+0x220>  // b.lo, b.ul, b.last
    51ec:	add	x3, x1, x0
    51f0:	mov	x2, #0xffffffffffefffff    	// #-1048577
    51f4:	cmp	x3, x2
    51f8:	b.hi	53e8 <grub_memalign+0x220>  // b.pmore
    51fc:	stp	x19, x20, [sp, #16]
    5200:	stp	x21, x22, [sp, #32]
    5204:	str	x23, [sp, #48]
    5208:	add	x19, x1, #0x1f
    520c:	lsr	x19, x19, #5
    5210:	add	x19, x19, #0x1
    5214:	lsr	x21, x0, #5
    5218:	cmp	x21, #0x0
    521c:	csinc	x20, x21, xzr, ne  // ne = any
    5220:	mov	w8, #0x0                   	// #0
    5224:	sub	x23, x20, #0x1
    5228:	mov	x22, #0x2808                	// #10248
    522c:	movk	x22, #0x2d3c, lsl #16
    5230:	adrp	x0, 0 <_start>
    5234:	ldr	x0, [x0]
    5238:	ldr	x4, [x0]
    523c:	cbz	x4, 53cc <grub_memalign+0x204>
    5240:	mov	x7, #0x8fa4                	// #36772
    5244:	movk	x7, #0x6db0, lsl #16
    5248:	b	53b0 <grub_memalign+0x1e8>
    524c:	adrp	x0, 0 <_start>
    5250:	ldr	x0, [x0]
    5254:	bl	af6c <grub_fatal>
    5258:	mov	x1, x0
    525c:	adrp	x0, 0 <_start>
    5260:	ldr	x0, [x0]
    5264:	bl	af6c <grub_fatal>
    5268:	sub	x6, x2, x19
    526c:	sub	x3, x6, x1
    5270:	neg	x20, x20
    5274:	and	x20, x3, x20
    5278:	adds	x1, x1, x20
    527c:	ccmp	x19, x2, #0x0, eq  // eq = none
    5280:	b.eq	52dc <grub_memalign+0x114>  // b.none
    5284:	cmp	x21, #0x1
    5288:	b.ls	52e8 <grub_memalign+0x120>  // b.plast
    528c:	add	x3, x19, x1
    5290:	cmp	x2, x3
    5294:	b.eq	52e8 <grub_memalign+0x120>  // b.none
    5298:	cbnz	x1, 5330 <grub_memalign+0x168>
    529c:	lsl	x6, x3, #5
    52a0:	add	x1, x0, x6
    52a4:	mov	x2, #0x2808                	// #10248
    52a8:	movk	x2, #0x2d3c, lsl #16
    52ac:	str	x2, [x1, #16]
    52b0:	ldr	x2, [x0, #8]
    52b4:	sub	x3, x2, x3
    52b8:	str	x3, [x1, #8]
    52bc:	ldr	x2, [x0]
    52c0:	str	x2, [x0, x6]
    52c4:	str	x1, [x5]
    52c8:	cmp	x0, x5
    52cc:	b.ne	52f0 <grub_memalign+0x128>  // b.any
    52d0:	str	x1, [x0, x6]
    52d4:	mov	x5, x1
    52d8:	b	52f0 <grub_memalign+0x128>
    52dc:	ldr	x1, [x0]
    52e0:	str	x1, [x5]
    52e4:	b	52f0 <grub_memalign+0x128>
    52e8:	str	x6, [x0, #8]
    52ec:	add	x0, x0, x6, lsl #5
    52f0:	mov	x1, #0x8fa4                	// #36772
    52f4:	movk	x1, #0x6db0, lsl #16
    52f8:	str	x1, [x0, #16]
    52fc:	str	x19, [x0, #8]
    5300:	cmp	x19, #0x3ff
    5304:	b.ls	5314 <grub_memalign+0x14c>  // b.plast
    5308:	ldr	x1, [x4]
    530c:	cmp	x0, x1
    5310:	b.ne	5318 <grub_memalign+0x150>  // b.any
    5314:	str	x5, [x4]
    5318:	add	x0, x0, #0x20
    531c:	ldp	x19, x20, [sp, #16]
    5320:	ldp	x21, x22, [sp, #32]
    5324:	ldr	x23, [sp, #48]
    5328:	ldp	x29, x30, [sp], #64
    532c:	ret
    5330:	lsl	x3, x3, #5
    5334:	add	x6, x0, x3
    5338:	mov	x2, #0x2808                	// #10248
    533c:	movk	x2, #0x2d3c, lsl #16
    5340:	str	x2, [x6, #16]
    5344:	ldr	x2, [x0, #8]
    5348:	sub	x2, x2, x19
    534c:	sub	x2, x2, x1
    5350:	str	x2, [x6, #8]
    5354:	str	x0, [x0, x3]
    5358:	str	x1, [x0, #8]
    535c:	str	x6, [x5]
    5360:	add	x0, x0, x1, lsl #5
    5364:	b	52f0 <grub_memalign+0x128>
    5368:	mov	x5, x0
    536c:	ldr	x0, [x0]
    5370:	add	x1, x0, #0x20
    5374:	ands	x1, x23, x1, lsr #5
    5378:	sub	x2, x20, x1
    537c:	csel	x1, x2, x1, ne  // ne = any
    5380:	cbz	x0, 524c <grub_memalign+0x84>
    5384:	ldr	x2, [x0, #16]
    5388:	cmp	x2, x22
    538c:	b.ne	5258 <grub_memalign+0x90>  // b.any
    5390:	ldr	x2, [x0, #8]
    5394:	add	x6, x19, x1
    5398:	cmp	x2, x6
    539c:	b.cs	5268 <grub_memalign+0xa0>  // b.hs, b.nlast
    53a0:	cmp	x3, x0
    53a4:	b.ne	5368 <grub_memalign+0x1a0>  // b.any
    53a8:	ldr	x4, [x4, #8]
    53ac:	cbz	x4, 53cc <grub_memalign+0x204>
    53b0:	ldr	x3, [x4]
    53b4:	ldr	x0, [x3, #16]
    53b8:	cmp	x0, x7
    53bc:	b.eq	53a8 <grub_memalign+0x1e0>  // b.none
    53c0:	ldr	x0, [x3]
    53c4:	mov	x5, x3
    53c8:	b	5370 <grub_memalign+0x1a8>
    53cc:	cbnz	w8, 53dc <grub_memalign+0x214>
    53d0:	bl	67a8 <grub_disk_cache_invalidate_all>
    53d4:	mov	w8, #0x1                   	// #1
    53d8:	b	5230 <grub_memalign+0x68>
    53dc:	ldp	x19, x20, [sp, #16]
    53e0:	ldp	x21, x22, [sp, #32]
    53e4:	ldr	x23, [sp, #48]
    53e8:	adrp	x0, 0 <_start>
    53ec:	ldr	x1, [x0]
    53f0:	mov	w0, #0x3                   	// #3
    53f4:	bl	8408 <grub_error>
    53f8:	mov	x0, #0x0                   	// #0
    53fc:	b	5328 <grub_memalign+0x160>
	...

0000000000005420 <grub_malloc>:
    5420:	stp	x29, x30, [sp, #-16]!
    5424:	mov	x29, sp
    5428:	mov	x1, x0
    542c:	mov	x0, #0x0                   	// #0
    5430:	bl	51c8 <grub_memalign>
    5434:	ldp	x29, x30, [sp], #16
    5438:	ret

000000000000543c <grub_zalloc>:
    543c:	stp	x29, x30, [sp, #-32]!
    5440:	mov	x29, sp
    5444:	stp	x19, x20, [sp, #16]
    5448:	mov	x20, x0
    544c:	mov	x1, x0
    5450:	mov	x0, #0x0                   	// #0
    5454:	bl	51c8 <grub_memalign>
    5458:	mov	x19, x0
    545c:	cbz	x0, 546c <grub_zalloc+0x30>
    5460:	mov	x2, x20
    5464:	mov	w1, #0x0                   	// #0
    5468:	bl	9b50 <grub_memset>
    546c:	mov	x0, x19
    5470:	ldp	x19, x20, [sp, #16]
    5474:	ldp	x29, x30, [sp], #32
    5478:	ret

000000000000547c <grub_free>:
    547c:	cbz	x0, 55f8 <grub_free+0x17c>
    5480:	stp	x29, x30, [sp, #-32]!
    5484:	mov	x29, sp
    5488:	add	x2, sp, #0x10
    548c:	add	x1, sp, #0x18
    5490:	bl	50d8 <memset+0x14>
    5494:	ldr	x0, [sp, #16]
    5498:	ldr	x4, [x0]
    549c:	ldr	x1, [x4, #16]
    54a0:	mov	x0, #0x8fa4                	// #36772
    54a4:	movk	x0, #0x6db0, lsl #16
    54a8:	cmp	x1, x0
    54ac:	b.eq	54c4 <grub_free+0x48>  // b.none
    54b0:	ldr	x1, [x4]
    54b4:	ldr	x3, [sp, #24]
    54b8:	mov	x5, #0x2808                	// #10248
    54bc:	movk	x5, #0x2d3c, lsl #16
    54c0:	b	54f8 <grub_free+0x7c>
    54c4:	ldr	x0, [sp, #24]
    54c8:	mov	x1, #0x2808                	// #10248
    54cc:	movk	x1, #0x2d3c, lsl #16
    54d0:	str	x1, [x0, #16]
    54d4:	str	x0, [x0]
    54d8:	ldr	x1, [sp, #16]
    54dc:	str	x0, [x1]
    54e0:	b	559c <grub_free+0x120>
    54e4:	adrp	x0, 0 <_start>
    54e8:	ldr	x0, [x0]
    54ec:	bl	af6c <grub_fatal>
    54f0:	mov	x4, x1
    54f4:	mov	x1, x0
    54f8:	cmp	x3, x1
    54fc:	b.cs	550c <grub_free+0x90>  // b.hs, b.nlast
    5500:	ldr	x0, [x1]
    5504:	cmp	x3, x0
    5508:	b.hi	5548 <grub_free+0xcc>  // b.pmore
    550c:	ldr	x2, [x1, #16]
    5510:	cmp	x2, x5
    5514:	b.ne	54e4 <grub_free+0x68>  // b.any
    5518:	ldr	x0, [x1]
    551c:	cmp	x0, x1
    5520:	b.cc	54f0 <grub_free+0x74>  // b.lo, b.ul, b.last
    5524:	cmp	x3, x1
    5528:	cset	w2, cc  // cc = lo, ul, last
    552c:	cmp	x0, x3
    5530:	cset	w6, cc  // cc = lo, ul, last
    5534:	orr	w2, w2, w6
    5538:	cbnz	w2, 5548 <grub_free+0xcc>
    553c:	mov	x4, x1
    5540:	mov	x1, x0
    5544:	b	54f8 <grub_free+0x7c>
    5548:	mov	x0, #0x2808                	// #10248
    554c:	movk	x0, #0x2d3c, lsl #16
    5550:	str	x0, [x3, #16]
    5554:	ldr	x0, [x1]
    5558:	str	x0, [x3]
    555c:	ldr	x0, [sp, #24]
    5560:	str	x0, [x1]
    5564:	ldr	x3, [x0]
    5568:	ldr	x2, [x3, #8]
    556c:	add	x2, x3, x2, lsl #5
    5570:	cmp	x0, x2
    5574:	b.eq	55a4 <grub_free+0x128>  // b.none
    5578:	ldr	x0, [sp, #16]
    557c:	str	x1, [x0]
    5580:	ldr	x0, [sp, #24]
    5584:	ldr	x2, [x0, #8]
    5588:	add	x2, x0, x2, lsl #5
    558c:	cmp	x1, x2
    5590:	b.eq	55d0 <grub_free+0x154>  // b.none
    5594:	ldr	x0, [sp, #16]
    5598:	str	x1, [x0]
    559c:	ldp	x29, x30, [sp], #32
    55a0:	ret
    55a4:	str	xzr, [x0, #16]
    55a8:	ldr	x2, [x3, #8]
    55ac:	ldr	x5, [x0, #8]
    55b0:	add	x2, x2, x5
    55b4:	str	x2, [x3, #8]
    55b8:	ldr	x0, [x0]
    55bc:	str	x0, [x1]
    55c0:	ldr	x0, [sp, #24]
    55c4:	ldr	x0, [x0]
    55c8:	str	x0, [sp, #24]
    55cc:	b	5578 <grub_free+0xfc>
    55d0:	str	xzr, [x1, #16]
    55d4:	ldr	x2, [x0, #8]
    55d8:	ldr	x3, [x1, #8]
    55dc:	add	x2, x2, x3
    55e0:	str	x2, [x0, #8]
    55e4:	cmp	x1, x4
    55e8:	csel	x4, x4, x0, ne  // ne = any
    55ec:	str	x0, [x4]
    55f0:	mov	x1, x4
    55f4:	b	5594 <grub_free+0x118>
    55f8:	ret
    55fc:	nop
	...

0000000000005608 <grub_mm_init_region>:
    5608:	mov	x2, #0xffffffffffffefff    	// #-4097
    560c:	cmp	x0, x2
    5610:	b.hi	5780 <grub_mm_init_region+0x178>  // b.pmore
    5614:	stp	x29, x30, [sp, #-32]!
    5618:	mov	x29, sp
    561c:	add	x3, x0, #0x1, lsl #12
    5620:	mvn	x4, x1
    5624:	mov	x2, #0xfffffffffffff000    	// #-4096
    5628:	sub	x2, x2, x0
    562c:	cmp	x3, x4
    5630:	csel	x1, x2, x1, hi  // hi = pmore
    5634:	adrp	x2, 0 <_start>
    5638:	ldr	x2, [x2]
    563c:	ldr	x2, [x2]
    5640:	cbz	x2, 5674 <grub_mm_init_region+0x6c>
    5644:	stp	x19, x20, [sp, #16]
    5648:	adrp	x3, 0 <_start>
    564c:	ldr	x20, [x3]
    5650:	ldr	x3, [x2, #16]
    5654:	add	x3, x1, x3
    5658:	add	x4, x0, x3
    565c:	cmp	x2, x4
    5660:	b.eq	5704 <grub_mm_init_region+0xfc>  // b.none
    5664:	add	x20, x2, #0x8
    5668:	ldr	x2, [x2, #8]
    566c:	cbnz	x2, 5650 <grub_mm_init_region+0x48>
    5670:	ldp	x19, x20, [sp, #16]
    5674:	add	x3, x0, #0x1f
    5678:	and	x3, x3, #0xffffffffffffffe0
    567c:	add	x4, x3, #0x20
    5680:	sub	x2, x4, x0
    5684:	add	x2, x2, #0x20
    5688:	cmp	x2, x1
    568c:	b.hi	5734 <grub_mm_init_region+0x12c>  // b.pmore
    5690:	sub	x2, x0, x3
    5694:	sub	x2, x2, #0x20
    5698:	add	x1, x2, x1
    569c:	str	x4, [x3, #32]
    56a0:	mov	x5, #0x2808                	// #10248
    56a4:	movk	x5, #0x2d3c, lsl #16
    56a8:	str	x5, [x4, #16]
    56ac:	lsr	x5, x1, #5
    56b0:	str	x5, [x4, #8]
    56b4:	str	x4, [x3]
    56b8:	sub	x0, x3, x0
    56bc:	str	x0, [x3, #16]
    56c0:	and	x1, x1, #0xffffffffffffffe0
    56c4:	str	x1, [x3, #24]
    56c8:	adrp	x0, 0 <_start>
    56cc:	ldr	x0, [x0]
    56d0:	ldr	x0, [x0]
    56d4:	cbz	x0, 5774 <grub_mm_init_region+0x16c>
    56d8:	adrp	x2, 0 <_start>
    56dc:	ldr	x4, [x2]
    56e0:	ldr	x2, [x0, #24]
    56e4:	cmp	x1, x2
    56e8:	b.cc	56f8 <grub_mm_init_region+0xf0>  // b.lo, b.ul, b.last
    56ec:	add	x4, x0, #0x8
    56f0:	ldr	x0, [x0, #8]
    56f4:	cbnz	x0, 56e0 <grub_mm_init_region+0xd8>
    56f8:	str	x3, [x4]
    56fc:	str	x0, [x3, #8]
    5700:	b	5734 <grub_mm_init_region+0x12c>
    5704:	add	x0, x0, #0x1f
    5708:	and	x19, x0, #0xffffffffffffffe0
    570c:	ldp	x0, x1, [x2]
    5710:	stp	x0, x1, [x19]
    5714:	ldp	x0, x1, [x2, #16]
    5718:	stp	x0, x1, [x19, #16]
    571c:	str	x3, [x19, #16]
    5720:	lsr	x0, x3, #5
    5724:	cmp	xzr, x3, lsr #5
    5728:	b.ne	573c <grub_mm_init_region+0x134>  // b.any
    572c:	str	x19, [x20]
    5730:	ldp	x19, x20, [sp, #16]
    5734:	ldp	x29, x30, [sp], #32
    5738:	ret
    573c:	str	x0, [x19, #40]
    5740:	mov	x0, #0x8fa4                	// #36772
    5744:	movk	x0, #0x6db0, lsl #16
    5748:	str	x0, [x19, #48]
    574c:	and	x1, x3, #0xffffffffffffffe0
    5750:	ldr	x0, [x19, #24]
    5754:	add	x0, x0, x1
    5758:	str	x0, [x19, #24]
    575c:	and	x3, x3, #0x1f
    5760:	str	x3, [x19, #16]
    5764:	str	x19, [x20]
    5768:	add	x0, x19, #0x40
    576c:	bl	547c <grub_free>
    5770:	b	572c <grub_mm_init_region+0x124>
    5774:	adrp	x1, 0 <_start>
    5778:	ldr	x4, [x1]
    577c:	b	56f8 <grub_mm_init_region+0xf0>
    5780:	ret
    5784:	nop
	...

0000000000005790 <grub_realloc>:
    5790:	stp	x29, x30, [sp, #-64]!
    5794:	mov	x29, sp
    5798:	stp	x19, x20, [sp, #16]
    579c:	str	x21, [sp, #32]
    57a0:	mov	x20, x1
    57a4:	cbz	x0, 57f0 <grub_realloc+0x60>
    57a8:	mov	x19, x0
    57ac:	cbz	x1, 5800 <grub_realloc+0x70>
    57b0:	add	x2, sp, #0x30
    57b4:	add	x1, sp, #0x38
    57b8:	bl	50d8 <memset+0x14>
    57bc:	add	x1, x20, #0x1f
    57c0:	lsr	x1, x1, #5
    57c4:	add	x1, x1, #0x1
    57c8:	ldr	x0, [sp, #56]
    57cc:	ldr	x0, [x0, #8]
    57d0:	mov	x21, x19
    57d4:	cmp	x0, x1
    57d8:	b.cc	580c <grub_realloc+0x7c>  // b.lo, b.ul, b.last
    57dc:	mov	x0, x21
    57e0:	ldp	x19, x20, [sp, #16]
    57e4:	ldr	x21, [sp, #32]
    57e8:	ldp	x29, x30, [sp], #64
    57ec:	ret
    57f0:	mov	x0, x1
    57f4:	bl	5420 <grub_malloc>
    57f8:	mov	x21, x0
    57fc:	b	57dc <grub_realloc+0x4c>
    5800:	bl	547c <grub_free>
    5804:	mov	x21, #0x0                   	// #0
    5808:	b	57dc <grub_realloc+0x4c>
    580c:	mov	x0, x20
    5810:	bl	5420 <grub_malloc>
    5814:	mov	x21, x0
    5818:	cbz	x0, 57dc <grub_realloc+0x4c>
    581c:	ldr	x0, [sp, #56]
    5820:	ldr	x2, [x0, #8]
    5824:	lsl	x2, x2, #5
    5828:	mov	x1, x19
    582c:	mov	x0, x21
    5830:	bl	9854 <grub_memmove>
    5834:	mov	x0, x19
    5838:	bl	547c <grub_free>
    583c:	b	57dc <grub_realloc+0x4c>

0000000000005840 <grub_get_time_ms>:
    5840:	stp	x29, x30, [sp, #-16]!
    5844:	mov	x29, sp
    5848:	adrp	x0, 0 <_start>
    584c:	ldr	x0, [x0]
    5850:	ldr	x0, [x0]
    5854:	blr	x0
    5858:	ldp	x29, x30, [sp], #16
    585c:	ret
	...

0000000000005868 <grub_install_get_time_ms>:
    5868:	adrp	x1, 0 <_start>
    586c:	ldr	x1, [x1]
    5870:	str	x0, [x1]
    5874:	ret
	...

0000000000005880 <grub_millisleep>:
    5880:	stp	x29, x30, [sp, #-32]!
    5884:	mov	x29, sp
    5888:	stp	x19, x20, [sp, #16]
    588c:	mov	w19, w0
    5890:	bl	5840 <grub_get_time_ms>
    5894:	mov	x20, x0
    5898:	mov	w19, w19
    589c:	bl	5840 <grub_get_time_ms>
    58a0:	sub	x0, x0, x20
    58a4:	cmp	x0, x19
    58a8:	b.cc	589c <grub_millisleep+0x1c>  // b.lo, b.ul, b.last
    58ac:	ldp	x19, x20, [sp, #16]
    58b0:	ldp	x29, x30, [sp], #32
    58b4:	ret

00000000000058b8 <grub_register_command_prio>:
    58b8:	stp	x29, x30, [sp, #-64]!
    58bc:	mov	x29, sp
    58c0:	stp	x19, x20, [sp, #16]
    58c4:	stp	x21, x22, [sp, #32]
    58c8:	stp	x23, x24, [sp, #48]
    58cc:	mov	x24, x0
    58d0:	mov	x23, x1
    58d4:	mov	x19, x2
    58d8:	mov	x22, x3
    58dc:	mov	w21, w4
    58e0:	mov	x0, #0x48                  	// #72
    58e4:	bl	543c <grub_zalloc>
    58e8:	mov	x20, x0
    58ec:	cbz	x0, 5964 <grub_register_command_prio+0xac>
    58f0:	str	x24, [x0, #16]
    58f4:	str	x23, [x0, #32]
    58f8:	adrp	x0, 0 <_start>
    58fc:	ldr	x0, [x0]
    5900:	cmp	x19, #0x0
    5904:	csel	x19, x19, x0, ne  // ne = any
    5908:	str	x19, [x20, #48]
    590c:	str	x22, [x20, #56]
    5910:	str	wzr, [x20, #40]
    5914:	str	w21, [x20, #24]
    5918:	adrp	x0, 0 <_start>
    591c:	ldr	x0, [x0]
    5920:	ldr	x19, [x0]
    5924:	cbz	x19, 59b8 <grub_register_command_prio+0x100>
    5928:	adrp	x0, 0 <_start>
    592c:	ldr	x21, [x0]
    5930:	mov	w22, #0x0                   	// #0
    5934:	mov	w23, #0x1                   	// #1
    5938:	b	5988 <grub_register_command_prio+0xd0>
    593c:	and	w0, w0, #0xfffffeff
    5940:	str	w0, [x19, #24]
    5944:	str	x20, [x21]
    5948:	str	x19, [x20]
    594c:	str	x20, [x19, #8]
    5950:	str	x21, [x20, #8]
    5954:	cbnz	w22, 5964 <grub_register_command_prio+0xac>
    5958:	ldr	w0, [x20, #24]
    595c:	orr	w0, w0, #0x100
    5960:	str	w0, [x20, #24]
    5964:	mov	x0, x20
    5968:	ldp	x19, x20, [sp, #16]
    596c:	ldp	x21, x22, [sp, #32]
    5970:	ldp	x23, x24, [sp, #48]
    5974:	ldp	x29, x30, [sp], #64
    5978:	ret
    597c:	mov	x21, x19
    5980:	ldr	x19, [x19]
    5984:	cbz	x19, 59c4 <grub_register_command_prio+0x10c>
    5988:	ldr	x1, [x19, #16]
    598c:	ldr	x0, [x20, #16]
    5990:	bl	9954 <grub_strcmp>
    5994:	tbnz	w0, #31, 5944 <grub_register_command_prio+0x8c>
    5998:	cmp	w0, #0x0
    599c:	b.gt	597c <grub_register_command_prio+0xc4>
    59a0:	ldr	w0, [x19, #24]
    59a4:	ldr	w1, [x20, #24]
    59a8:	cmp	w1, w0, uxtb
    59ac:	b.ge	593c <grub_register_command_prio+0x84>  // b.tcont
    59b0:	mov	w22, w23
    59b4:	b	597c <grub_register_command_prio+0xc4>
    59b8:	adrp	x0, 0 <_start>
    59bc:	ldr	x21, [x0]
    59c0:	mov	w22, #0x0                   	// #0
    59c4:	str	x20, [x21]
    59c8:	str	xzr, [x20]
    59cc:	b	5950 <grub_register_command_prio+0x98>
	...

00000000000059e0 <grub_unregister_command>:
    59e0:	stp	x29, x30, [sp, #-32]!
    59e4:	mov	x29, sp
    59e8:	str	x19, [sp, #16]
    59ec:	mov	x19, x0
    59f0:	ldr	w0, [x0, #24]
    59f4:	tbz	w0, #8, 5a0c <grub_unregister_command+0x2c>
    59f8:	ldr	x0, [x19]
    59fc:	cbz	x0, 5a0c <grub_unregister_command+0x2c>
    5a00:	ldr	w1, [x0, #24]
    5a04:	orr	w1, w1, #0x100
    5a08:	str	w1, [x0, #24]
    5a0c:	mov	x0, x19
    5a10:	bl	9100 <grub_list_remove>
    5a14:	mov	x0, x19
    5a18:	bl	547c <grub_free>
    5a1c:	ldr	x19, [sp, #16]
    5a20:	ldp	x29, x30, [sp], #32
    5a24:	ret
    5a28:	stp	x29, x30, [sp, #-16]!
    5a2c:	mov	x29, sp
    5a30:	cbz	w1, 5a78 <grub_unregister_command+0x98>
    5a34:	ldr	x0, [x2]
    5a38:	ldrb	w2, [x0]
    5a3c:	and	w1, w2, #0xfffffffb
    5a40:	and	w1, w1, #0xff
    5a44:	cmp	w1, #0x2b
    5a48:	mov	w1, #0x28                  	// #40
    5a4c:	ccmp	w2, w1, #0x4, ne  // ne = any
    5a50:	b.ne	5a8c <grub_unregister_command+0xac>  // b.any
    5a54:	bl	7d98 <grub_dl_load_file>
    5a58:	mov	x1, x0
    5a5c:	mov	w0, #0x0                   	// #0
    5a60:	cbz	x1, 5a70 <grub_unregister_command+0x90>
    5a64:	mov	x0, x1
    5a68:	bl	71c8 <grub_dl_ref>
    5a6c:	mov	w0, #0x0                   	// #0
    5a70:	ldp	x29, x30, [sp], #16
    5a74:	ret
    5a78:	adrp	x0, 0 <_start>
    5a7c:	ldr	x1, [x0]
    5a80:	mov	w0, #0x12                  	// #18
    5a84:	bl	8408 <grub_error>
    5a88:	b	5a70 <grub_unregister_command+0x90>
    5a8c:	bl	7e60 <grub_dl_load>
    5a90:	mov	x1, x0
    5a94:	b	5a5c <grub_unregister_command+0x7c>
	...
    5aa0:	stp	x29, x30, [sp, #-16]!
    5aa4:	mov	x29, sp
    5aa8:	ldrb	w1, [x1]
    5aac:	tbnz	w1, #0, 5ad4 <grub_unregister_command+0xf4>
    5ab0:	adrp	x1, 0 <_start>
    5ab4:	ldr	x2, [x1]
    5ab8:	mov	x1, x0
    5abc:	adrp	x0, 0 <_start>
    5ac0:	ldr	x0, [x0]
    5ac4:	bl	abc0 <grub_err_printf>
    5ac8:	mov	w0, #0x0                   	// #0
    5acc:	ldp	x29, x30, [sp], #16
    5ad0:	ret
    5ad4:	adrp	x1, 0 <_start>
    5ad8:	ldr	x2, [x1]
    5adc:	b	5ab8 <grub_unregister_command+0xd8>
	...
    5af8:	stp	x29, x30, [sp, #-16]!
    5afc:	mov	x29, sp
    5b00:	mov	x1, x0
    5b04:	adrp	x0, 0 <_start>
    5b08:	ldr	x0, [x0]
    5b0c:	bl	abc0 <grub_err_printf>
    5b10:	mov	w0, #0x0                   	// #0
    5b14:	ldp	x29, x30, [sp], #16
    5b18:	ret
    5b1c:	nop
	...
    5b28:	stp	x29, x30, [sp, #-48]!
    5b2c:	mov	x29, sp
    5b30:	cmp	w1, #0x0
    5b34:	b.le	5b7c <grub_unregister_command+0x19c>
    5b38:	stp	x19, x20, [sp, #16]
    5b3c:	mov	x20, x2
    5b40:	ldr	x0, [x2]
    5b44:	bl	8708 <grub_file_get_device_name>
    5b48:	mov	x19, x0
    5b4c:	adrp	x0, 0 <_start>
    5b50:	ldr	x0, [x0]
    5b54:	ldr	w0, [x0]
    5b58:	cbz	w0, 5bac <grub_unregister_command+0x1cc>
    5b5c:	mov	x0, x19
    5b60:	bl	547c <grub_free>
    5b64:	ldp	x19, x20, [sp, #16]
    5b68:	adrp	x0, 0 <_start>
    5b6c:	ldr	x0, [x0]
    5b70:	ldr	w0, [x0]
    5b74:	ldp	x29, x30, [sp], #48
    5b78:	ret
    5b7c:	mov	x1, #0x0                   	// #0
    5b80:	adrp	x0, 0 <_start>
    5b84:	ldr	x0, [x0]
    5b88:	bl	6240 <grub_device_iterate>
    5b8c:	adrp	x0, 0 <_start>
    5b90:	ldr	x0, [x0]
    5b94:	ldr	x1, [x0]
    5b98:	adrp	x0, 0 <_start>
    5b9c:	ldr	x0, [x0]
    5ba0:	blr	x1
    5ba4:	bl	c0b0 <grub_refresh>
    5ba8:	b	5b68 <grub_unregister_command+0x188>
    5bac:	stp	x21, x22, [sp, #32]
    5bb0:	mov	x0, x19
    5bb4:	bl	5fe8 <grub_device_open>
    5bb8:	mov	x21, x0
    5bbc:	cbz	x0, 5ca0 <grub_unregister_command+0x2c0>
    5bc0:	bl	8e20 <grub_fs_probe>
    5bc4:	mov	x22, x0
    5bc8:	mov	w1, #0x29                  	// #41
    5bcc:	ldr	x0, [x20]
    5bd0:	bl	99d0 <grub_strchr>
    5bd4:	add	x1, x0, #0x1
    5bd8:	cbz	x0, 5c2c <grub_unregister_command+0x24c>
    5bdc:	ldrb	w0, [x1]
    5be0:	cmp	x19, #0x0
    5be4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
    5be8:	b.eq	5c34 <grub_unregister_command+0x254>  // b.none
    5bec:	cbnz	w0, 5c64 <grub_unregister_command+0x284>
    5bf0:	adrp	x0, 0 <_start>
    5bf4:	ldr	x0, [x0]
    5bf8:	ldr	w0, [x0]
    5bfc:	cmp	w0, #0x8
    5c00:	b.eq	5c48 <grub_unregister_command+0x268>  // b.none
    5c04:	cbz	x22, 5c58 <grub_unregister_command+0x278>
    5c08:	ldr	x2, [x22, #16]
    5c0c:	mov	x1, x19
    5c10:	adrp	x0, 0 <_start>
    5c14:	ldr	x0, [x0]
    5c18:	bl	abc0 <grub_err_printf>
    5c1c:	mov	x0, x21
    5c20:	bl	60e8 <grub_device_close>
    5c24:	ldp	x21, x22, [sp, #32]
    5c28:	b	5b5c <grub_unregister_command+0x17c>
    5c2c:	ldr	x1, [x20]
    5c30:	b	5bdc <grub_unregister_command+0x1fc>
    5c34:	adrp	x0, 0 <_start>
    5c38:	ldr	x1, [x0]
    5c3c:	mov	w0, #0x12                  	// #18
    5c40:	bl	8408 <grub_error>
    5c44:	b	5c1c <grub_unregister_command+0x23c>
    5c48:	adrp	x0, 0 <_start>
    5c4c:	ldr	x0, [x0]
    5c50:	str	wzr, [x0]
    5c54:	b	5c04 <grub_unregister_command+0x224>
    5c58:	adrp	x0, 0 <_start>
    5c5c:	ldr	x2, [x0]
    5c60:	b	5c0c <grub_unregister_command+0x22c>
    5c64:	cbz	x22, 5c1c <grub_unregister_command+0x23c>
    5c68:	ldr	x4, [x22, #24]
    5c6c:	mov	x3, #0x0                   	// #0
    5c70:	adrp	x0, 0 <_start>
    5c74:	ldr	x2, [x0]
    5c78:	mov	x0, x21
    5c7c:	blr	x4
    5c80:	adrp	x0, 0 <_start>
    5c84:	ldr	x0, [x0]
    5c88:	ldr	x1, [x0]
    5c8c:	adrp	x0, 0 <_start>
    5c90:	ldr	x0, [x0]
    5c94:	blr	x1
    5c98:	bl	c0b0 <grub_refresh>
    5c9c:	b	5c1c <grub_unregister_command+0x23c>
    5ca0:	ldp	x21, x22, [sp, #32]
    5ca4:	b	5b5c <grub_unregister_command+0x17c>
	...
    5ce8:	stp	x29, x30, [sp, #-16]!
    5cec:	mov	x29, sp
    5cf0:	cmp	w1, #0x0
    5cf4:	b.le	5d0c <grub_unregister_command+0x32c>
    5cf8:	ldr	x0, [x2]
    5cfc:	bl	8200 <grub_env_unset>
    5d00:	mov	w0, #0x0                   	// #0
    5d04:	ldp	x29, x30, [sp], #16
    5d08:	ret
    5d0c:	adrp	x0, 0 <_start>
    5d10:	ldr	x1, [x0]
    5d14:	mov	w0, #0x12                  	// #18
    5d18:	bl	8408 <grub_error>
    5d1c:	b	5d04 <grub_unregister_command+0x324>
	...
    5d28:	stp	x29, x30, [sp, #-48]!
    5d2c:	mov	x29, sp
    5d30:	stp	x19, x20, [sp, #16]
    5d34:	cmp	w1, #0x0
    5d38:	b.le	5d7c <grub_unregister_command+0x39c>
    5d3c:	ldr	x20, [x2]
    5d40:	mov	w1, #0x3d                  	// #61
    5d44:	mov	x0, x20
    5d48:	bl	99d0 <grub_strchr>
    5d4c:	mov	x19, x0
    5d50:	cbz	x0, 5dc0 <grub_unregister_command+0x3e0>
    5d54:	mov	x1, x0
    5d58:	strb	wzr, [x1], #1
    5d5c:	mov	x0, x20
    5d60:	bl	8058 <grub_env_set>
    5d64:	mov	w0, #0x3d                  	// #61
    5d68:	strb	w0, [x19]
    5d6c:	mov	w0, #0x0                   	// #0
    5d70:	ldp	x19, x20, [sp, #16]
    5d74:	ldp	x29, x30, [sp], #48
    5d78:	ret
    5d7c:	bl	8288 <grub_env_update_get_sorted>
    5d80:	mov	x19, x0
    5d84:	cbz	x0, 5dd4 <grub_unregister_command+0x3f4>
    5d88:	str	x21, [sp, #32]
    5d8c:	adrp	x21, 0 <_start>
    5d90:	ldr	x20, [x19]
    5d94:	mov	x0, x20
    5d98:	bl	81d0 <grub_env_get>
    5d9c:	mov	x2, x0
    5da0:	mov	x1, x20
    5da4:	ldr	x0, [x21]
    5da8:	bl	abc0 <grub_err_printf>
    5dac:	ldr	x19, [x19, #48]
    5db0:	cbnz	x19, 5d90 <grub_unregister_command+0x3b0>
    5db4:	mov	w0, #0x0                   	// #0
    5db8:	ldr	x21, [sp, #32]
    5dbc:	b	5d70 <grub_unregister_command+0x390>
    5dc0:	adrp	x0, 0 <_start>
    5dc4:	ldr	x1, [x0]
    5dc8:	mov	w0, #0x12                  	// #18
    5dcc:	bl	8408 <grub_error>
    5dd0:	b	5d70 <grub_unregister_command+0x390>
    5dd4:	mov	w0, #0x0                   	// #0
    5dd8:	b	5d70 <grub_unregister_command+0x390>
    5ddc:	nop
	...

0000000000005df0 <grub_register_core_commands>:
    5df0:	stp	x29, x30, [sp, #-16]!
    5df4:	mov	x29, sp
    5df8:	mov	w4, #0x0                   	// #0
    5dfc:	adrp	x0, 0 <_start>
    5e00:	ldr	x3, [x0]
    5e04:	adrp	x0, 0 <_start>
    5e08:	ldr	x2, [x0]
    5e0c:	adrp	x0, 0 <_start>
    5e10:	ldr	x1, [x0]
    5e14:	adrp	x0, 0 <_start>
    5e18:	ldr	x0, [x0]
    5e1c:	bl	58b8 <grub_register_command_prio>
    5e20:	cbz	x0, 5e30 <grub_register_core_commands+0x40>
    5e24:	ldr	w1, [x0, #40]
    5e28:	orr	w1, w1, #0x200
    5e2c:	str	w1, [x0, #40]
    5e30:	mov	w4, #0x0                   	// #0
    5e34:	adrp	x0, 0 <_start>
    5e38:	ldr	x3, [x0]
    5e3c:	adrp	x0, 0 <_start>
    5e40:	ldr	x2, [x0]
    5e44:	adrp	x0, 0 <_start>
    5e48:	ldr	x1, [x0]
    5e4c:	adrp	x0, 0 <_start>
    5e50:	ldr	x0, [x0]
    5e54:	bl	58b8 <grub_register_command_prio>
    5e58:	mov	w4, #0x0                   	// #0
    5e5c:	adrp	x0, 0 <_start>
    5e60:	ldr	x3, [x0]
    5e64:	adrp	x0, 0 <_start>
    5e68:	ldr	x2, [x0]
    5e6c:	adrp	x0, 0 <_start>
    5e70:	ldr	x1, [x0]
    5e74:	adrp	x0, 0 <_start>
    5e78:	ldr	x0, [x0]
    5e7c:	bl	58b8 <grub_register_command_prio>
    5e80:	mov	w4, #0x0                   	// #0
    5e84:	adrp	x0, 0 <_start>
    5e88:	ldr	x3, [x0]
    5e8c:	adrp	x0, 0 <_start>
    5e90:	ldr	x2, [x0]
    5e94:	adrp	x0, 0 <_start>
    5e98:	ldr	x1, [x0]
    5e9c:	adrp	x0, 0 <_start>
    5ea0:	ldr	x0, [x0]
    5ea4:	bl	58b8 <grub_register_command_prio>
    5ea8:	ldp	x29, x30, [sp], #16
    5eac:	ret
	...
    5f30:	stp	x29, x30, [sp, #-48]!
    5f34:	mov	x29, sp
    5f38:	stp	x19, x20, [sp, #16]
    5f3c:	stp	x21, x22, [sp, #32]
    5f40:	mov	x22, x0
    5f44:	mov	x21, x1
    5f48:	mov	x20, x2
    5f4c:	mov	x0, #0x10                  	// #16
    5f50:	bl	5420 <grub_malloc>
    5f54:	cbz	x0, 5fd4 <grub_register_core_commands+0x1e4>
    5f58:	mov	x19, x0
    5f5c:	mov	x0, x21
    5f60:	bl	b838 <grub_partition_get_name>
    5f64:	mov	x21, x0
    5f68:	cbz	x0, 5fb4 <grub_register_core_commands+0x1c4>
    5f6c:	mov	x2, x0
    5f70:	ldr	x1, [x22]
    5f74:	adrp	x0, 0 <_start>
    5f78:	ldr	x0, [x0]
    5f7c:	bl	af08 <grub_xasprintf>
    5f80:	str	x0, [x19, #8]
    5f84:	mov	x0, x21
    5f88:	bl	547c <grub_free>
    5f8c:	ldr	x0, [x19, #8]
    5f90:	cbz	x0, 5fc4 <grub_register_core_commands+0x1d4>
    5f94:	ldr	x0, [x20, #16]
    5f98:	str	x0, [x19]
    5f9c:	str	x19, [x20, #16]
    5fa0:	mov	w0, #0x0                   	// #0
    5fa4:	ldp	x19, x20, [sp, #16]
    5fa8:	ldp	x21, x22, [sp, #32]
    5fac:	ldp	x29, x30, [sp], #48
    5fb0:	ret
    5fb4:	mov	x0, x19
    5fb8:	bl	547c <grub_free>
    5fbc:	mov	w0, #0x1                   	// #1
    5fc0:	b	5fa4 <grub_register_core_commands+0x1b4>
    5fc4:	mov	x0, x19
    5fc8:	bl	547c <grub_free>
    5fcc:	mov	w0, #0x1                   	// #1
    5fd0:	b	5fa4 <grub_register_core_commands+0x1b4>
    5fd4:	mov	w0, #0x1                   	// #1
    5fd8:	b	5fa4 <grub_register_core_commands+0x1b4>
    5fdc:	nop
	...

0000000000005fe8 <grub_device_open>:
    5fe8:	stp	x29, x30, [sp, #-32]!
    5fec:	mov	x29, sp
    5ff0:	stp	x19, x20, [sp, #16]
    5ff4:	mov	x20, x0
    5ff8:	cbz	x0, 6030 <grub_device_open+0x48>
    5ffc:	mov	x0, #0x10                  	// #16
    6000:	bl	5420 <grub_malloc>
    6004:	mov	x19, x0
    6008:	cbz	x0, 609c <grub_device_open+0xb4>
    600c:	str	xzr, [x0, #8]
    6010:	mov	x0, x20
    6014:	bl	6940 <grub_disk_open>
    6018:	str	x0, [x19]
    601c:	cbz	x0, 6070 <grub_device_open+0x88>
    6020:	mov	x0, x19
    6024:	ldp	x19, x20, [sp, #16]
    6028:	ldp	x29, x30, [sp], #32
    602c:	ret
    6030:	adrp	x0, 0 <_start>
    6034:	ldr	x0, [x0]
    6038:	bl	81d0 <grub_env_get>
    603c:	cbz	x0, 6050 <grub_device_open+0x68>
    6040:	ldrb	w1, [x0]
    6044:	cbz	w1, 6050 <grub_device_open+0x68>
    6048:	mov	x20, x0
    604c:	b	5ffc <grub_device_open+0x14>
    6050:	adrp	x0, 0 <_start>
    6054:	ldr	x2, [x0]
    6058:	adrp	x0, 0 <_start>
    605c:	ldr	x1, [x0]
    6060:	mov	w0, #0xd                   	// #13
    6064:	bl	8408 <grub_error>
    6068:	mov	x19, x20
    606c:	b	609c <grub_device_open+0xb4>
    6070:	adrp	x0, 0 <_start>
    6074:	ldr	x0, [x0]
    6078:	ldr	x1, [x0]
    607c:	cbz	x1, 6094 <grub_device_open+0xac>
    6080:	adrp	x0, 0 <_start>
    6084:	ldr	x0, [x0]
    6088:	ldr	w0, [x0]
    608c:	cmp	w0, #0xc
    6090:	b.eq	60ac <grub_device_open+0xc4>  // b.none
    6094:	ldr	x0, [x19, #8]
    6098:	cbnz	x0, 6020 <grub_device_open+0x38>
    609c:	mov	x0, x19
    60a0:	bl	547c <grub_free>
    60a4:	mov	x19, #0x0                   	// #0
    60a8:	b	6020 <grub_device_open+0x38>
    60ac:	adrp	x0, 0 <_start>
    60b0:	ldr	x0, [x0]
    60b4:	str	wzr, [x0]
    60b8:	mov	x0, x20
    60bc:	blr	x1
    60c0:	str	x0, [x19, #8]
    60c4:	b	6094 <grub_device_open+0xac>
	...

00000000000060e8 <grub_device_close>:
    60e8:	stp	x29, x30, [sp, #-32]!
    60ec:	mov	x29, sp
    60f0:	str	x19, [sp, #16]
    60f4:	mov	x19, x0
    60f8:	ldr	x0, [x0]
    60fc:	cbz	x0, 6104 <grub_device_close+0x1c>
    6100:	bl	6888 <grub_disk_close>
    6104:	ldr	x0, [x19, #8]
    6108:	cbz	x0, 611c <grub_device_close+0x34>
    610c:	ldr	x0, [x0]
    6110:	bl	547c <grub_free>
    6114:	ldr	x0, [x19, #8]
    6118:	bl	547c <grub_free>
    611c:	mov	x0, x19
    6120:	bl	547c <grub_free>
    6124:	adrp	x0, 0 <_start>
    6128:	ldr	x0, [x0]
    612c:	ldr	w0, [x0]
    6130:	ldr	x19, [sp, #16]
    6134:	ldp	x29, x30, [sp], #32
    6138:	ret
    613c:	nop
	...
    6148:	stp	x29, x30, [sp, #-48]!
    614c:	mov	x29, sp
    6150:	stp	x19, x20, [sp, #16]
    6154:	stp	x21, x22, [sp, #32]
    6158:	mov	x20, x0
    615c:	mov	x22, x1
    6160:	ldr	x2, [x1]
    6164:	ldr	x1, [x1, #8]
    6168:	blr	x2
    616c:	mov	w19, #0x1                   	// #1
    6170:	cbz	w0, 6188 <grub_device_close+0xa0>
    6174:	mov	w0, w19
    6178:	ldp	x19, x20, [sp, #16]
    617c:	ldp	x21, x22, [sp, #32]
    6180:	ldp	x29, x30, [sp], #48
    6184:	ret
    6188:	mov	w19, w0
    618c:	mov	x0, x20
    6190:	bl	5fe8 <grub_device_open>
    6194:	mov	x20, x0
    6198:	cbz	x0, 61dc <grub_device_close+0xf4>
    619c:	ldr	x0, [x0]
    61a0:	cbz	x0, 6224 <grub_device_close+0x13c>
    61a4:	str	xzr, [x22, #16]
    61a8:	mov	x2, x22
    61ac:	adrp	x0, 0 <_start>
    61b0:	ldr	x1, [x0]
    61b4:	ldr	x0, [x20]
    61b8:	bl	b790 <grub_partition_iterate>
    61bc:	mov	x0, x20
    61c0:	bl	60e8 <grub_device_close>
    61c4:	adrp	x0, 0 <_start>
    61c8:	ldr	x0, [x0]
    61cc:	str	wzr, [x0]
    61d0:	ldr	x20, [x22, #16]
    61d4:	cbnz	x20, 6200 <grub_device_close+0x118>
    61d8:	b	6174 <grub_device_close+0x8c>
    61dc:	adrp	x0, 0 <_start>
    61e0:	ldr	x0, [x0]
    61e4:	str	wzr, [x0]
    61e8:	b	6174 <grub_device_close+0x8c>
    61ec:	ldr	x0, [x21, #8]
    61f0:	bl	547c <grub_free>
    61f4:	mov	x0, x21
    61f8:	bl	547c <grub_free>
    61fc:	cbz	x20, 6174 <grub_device_close+0x8c>
    6200:	mov	x21, x20
    6204:	ldr	x20, [x20]
    6208:	cbnz	w19, 61ec <grub_device_close+0x104>
    620c:	ldr	x2, [x22]
    6210:	ldr	x1, [x22, #8]
    6214:	ldr	x0, [x21, #8]
    6218:	blr	x2
    621c:	mov	w19, w0
    6220:	b	61ec <grub_device_close+0x104>
    6224:	mov	x0, x20
    6228:	bl	60e8 <grub_device_close>
    622c:	b	6174 <grub_device_close+0x8c>
	...

0000000000006240 <grub_device_iterate>:
    6240:	stp	x29, x30, [sp, #-80]!
    6244:	mov	x29, sp
    6248:	stp	x19, x20, [sp, #16]
    624c:	stp	x21, x22, [sp, #32]
    6250:	str	x0, [sp, #56]
    6254:	str	x1, [sp, #64]
    6258:	str	xzr, [sp, #72]
    625c:	mov	w20, #0x0                   	// #0
    6260:	adrp	x22, 0 <_start>
    6264:	adrp	x21, 0 <_start>
    6268:	ldr	x0, [x22]
    626c:	ldr	x19, [x0]
    6270:	cbnz	x19, 6290 <grub_device_iterate+0x50>
    6274:	add	w20, w20, #0x1
    6278:	cmp	w20, #0x2
    627c:	b.ls	6268 <grub_device_iterate+0x28>  // b.plast
    6280:	mov	w0, #0x0                   	// #0
    6284:	b	62b0 <grub_device_iterate+0x70>
    6288:	ldr	x19, [x19, #56]
    628c:	cbz	x19, 6274 <grub_device_iterate+0x34>
    6290:	ldr	x3, [x19, #16]
    6294:	cbz	x3, 6288 <grub_device_iterate+0x48>
    6298:	mov	w2, w20
    629c:	add	x1, sp, #0x38
    62a0:	ldr	x0, [x21]
    62a4:	blr	x3
    62a8:	cbz	w0, 6288 <grub_device_iterate+0x48>
    62ac:	mov	w0, #0x1                   	// #1
    62b0:	ldp	x19, x20, [sp, #16]
    62b4:	ldp	x21, x22, [sp, #32]
    62b8:	ldp	x29, x30, [sp], #80
    62bc:	ret
	...
    62d0:	ubfx	x4, x2, #6, #32
    62d4:	mov	x3, #0xc57b                	// #50555
    62d8:	movk	x3, #0x27, lsl #16
    62dc:	madd	x3, x1, x3, x4
    62e0:	lsl	x4, x0, #19
    62e4:	sub	x4, x4, x0
    62e8:	add	x3, x3, x4
    62ec:	mov	x4, #0xedb3                	// #60851
    62f0:	movk	x4, #0x513c, lsl #16
    62f4:	movk	x4, #0x906c, lsl #32
    62f8:	movk	x4, #0xc0, lsl #48
    62fc:	umulh	x5, x3, x4
    6300:	sub	x4, x3, x5
    6304:	add	x4, x5, x4, lsr #1
    6308:	lsr	x4, x4, #9
    630c:	lsl	x5, x4, #8
    6310:	sub	x5, x5, x4
    6314:	add	x4, x4, x5, lsl #2
    6318:	sub	x3, x3, x4
    631c:	add	x3, x3, x3, lsl #2
    6320:	lsl	x3, x3, #3
    6324:	adrp	x4, 0 <_start>
    6328:	ldr	x4, [x4]
    632c:	add	x5, x3, x4
    6330:	ldr	w3, [x3, x4]
    6334:	cmp	x3, x0
    6338:	b.ne	6368 <grub_device_iterate+0x128>  // b.any
    633c:	ldr	x3, [x5, #8]
    6340:	mov	x0, #0x0                   	// #0
    6344:	cmp	x3, x1
    6348:	b.ne	636c <grub_device_iterate+0x12c>  // b.any
    634c:	ldr	x1, [x5, #16]
    6350:	cmp	x1, x2
    6354:	b.ne	636c <grub_device_iterate+0x12c>  // b.any
    6358:	mov	w0, #0x1                   	// #1
    635c:	str	w0, [x5, #32]
    6360:	ldr	x0, [x5, #24]
    6364:	b	636c <grub_device_iterate+0x12c>
    6368:	mov	x0, #0x0                   	// #0
    636c:	ret
	...
    6378:	stp	x29, x30, [sp, #-80]!
    637c:	mov	x29, sp
    6380:	stp	x19, x20, [sp, #16]
    6384:	stp	x21, x22, [sp, #32]
    6388:	stp	x23, x24, [sp, #48]
    638c:	str	x25, [sp, #64]
    6390:	mov	x20, x0
    6394:	mov	x22, x1
    6398:	mov	x21, x2
    639c:	mov	x23, x3
    63a0:	ubfx	x0, x2, #6, #32
    63a4:	mov	x4, #0xc57b                	// #50555
    63a8:	movk	x4, #0x27, lsl #16
    63ac:	madd	x4, x1, x4, x0
    63b0:	lsl	x0, x20, #19
    63b4:	sub	x0, x0, x20
    63b8:	add	x4, x4, x0
    63bc:	mov	x0, #0xedb3                	// #60851
    63c0:	movk	x0, #0x513c, lsl #16
    63c4:	movk	x0, #0x906c, lsl #32
    63c8:	movk	x0, #0xc0, lsl #48
    63cc:	umulh	x1, x4, x0
    63d0:	sub	x0, x4, x1
    63d4:	add	x0, x1, x0, lsr #1
    63d8:	lsr	x0, x0, #9
    63dc:	lsl	x1, x0, #8
    63e0:	sub	x1, x1, x0
    63e4:	add	x0, x0, x1, lsl #2
    63e8:	sub	x4, x4, x0
    63ec:	add	x4, x4, x4, lsl #2
    63f0:	lsl	x19, x4, #3
    63f4:	adrp	x0, 0 <_start>
    63f8:	ldr	x25, [x0]
    63fc:	add	x24, x19, x25
    6400:	mov	w0, #0x1                   	// #1
    6404:	str	w0, [x24, #32]
    6408:	ldr	x0, [x24, #24]
    640c:	bl	547c <grub_free>
    6410:	str	xzr, [x24, #24]
    6414:	str	wzr, [x24, #32]
    6418:	mov	x0, #0x8000                	// #32768
    641c:	bl	5420 <grub_malloc>
    6420:	str	x0, [x24, #24]
    6424:	cbz	x0, 645c <grub_device_iterate+0x21c>
    6428:	mov	x2, #0x8000                	// #32768
    642c:	mov	x1, x23
    6430:	bl	9854 <grub_memmove>
    6434:	str	w20, [x19, x25]
    6438:	str	x22, [x24, #8]
    643c:	str	x21, [x24, #16]
    6440:	mov	w0, #0x0                   	// #0
    6444:	ldp	x19, x20, [sp, #16]
    6448:	ldp	x21, x22, [sp, #32]
    644c:	ldp	x23, x24, [sp, #48]
    6450:	ldr	x25, [sp, #64]
    6454:	ldp	x29, x30, [sp], #80
    6458:	ret
    645c:	adrp	x0, 0 <_start>
    6460:	ldr	x0, [x0]
    6464:	ldr	w0, [x0]
    6468:	b	6444 <grub_device_iterate+0x204>
    646c:	nop
	...
    6480:	ubfx	x4, x2, #6, #32
    6484:	mov	x3, #0xc57b                	// #50555
    6488:	movk	x3, #0x27, lsl #16
    648c:	madd	x3, x1, x3, x4
    6490:	lsl	x4, x0, #19
    6494:	sub	x4, x4, x0
    6498:	add	x3, x3, x4
    649c:	mov	x4, #0xedb3                	// #60851
    64a0:	movk	x4, #0x513c, lsl #16
    64a4:	movk	x4, #0x906c, lsl #32
    64a8:	movk	x4, #0xc0, lsl #48
    64ac:	umulh	x5, x3, x4
    64b0:	sub	x4, x3, x5
    64b4:	add	x4, x5, x4, lsr #1
    64b8:	lsr	x4, x4, #9
    64bc:	lsl	x5, x4, #8
    64c0:	sub	x5, x5, x4
    64c4:	add	x4, x4, x5, lsl #2
    64c8:	sub	x3, x3, x4
    64cc:	add	x3, x3, x3, lsl #2
    64d0:	lsl	x3, x3, #3
    64d4:	adrp	x4, 0 <_start>
    64d8:	ldr	x4, [x4]
    64dc:	add	x5, x3, x4
    64e0:	ldr	w3, [x3, x4]
    64e4:	cmp	x3, x0
    64e8:	b.eq	64f0 <grub_device_iterate+0x2b0>  // b.none
    64ec:	ret
    64f0:	ldr	x0, [x5, #8]
    64f4:	cmp	x0, x1
    64f8:	b.ne	64ec <grub_device_iterate+0x2ac>  // b.any
    64fc:	ldr	x0, [x5, #16]
    6500:	cmp	x0, x2
    6504:	b.ne	64ec <grub_device_iterate+0x2ac>  // b.any
    6508:	str	wzr, [x5, #32]
    650c:	b	64ec <grub_device_iterate+0x2ac>
	...
    6518:	stp	x29, x30, [sp, #-96]!
    651c:	mov	x29, sp
    6520:	stp	x19, x20, [sp, #16]
    6524:	stp	x21, x22, [sp, #32]
    6528:	stp	x23, x24, [sp, #48]
    652c:	mov	x19, x0
    6530:	mov	x20, x1
    6534:	mov	x22, x2
    6538:	mov	x21, x3
    653c:	mov	x24, x4
    6540:	sub	x23, x3, #0x1
    6544:	ldr	x0, [x0, #8]
    6548:	mov	x2, x1
    654c:	ldr	x1, [x19, #32]
    6550:	ldr	w0, [x0, #8]
    6554:	bl	62d0 <grub_device_iterate+0x90>
    6558:	cbz	x0, 65b8 <grub_device_iterate+0x378>
    655c:	mov	x2, x21
    6560:	add	x1, x0, x22
    6564:	mov	x0, x24
    6568:	bl	9854 <grub_memmove>
    656c:	ldr	x0, [x19, #8]
    6570:	mov	x2, x20
    6574:	ldr	x1, [x19, #32]
    6578:	ldr	w0, [x0, #8]
    657c:	bl	6480 <grub_device_iterate+0x240>
    6580:	ldr	x4, [x19, #48]
    6584:	mov	w0, #0x0                   	// #0
    6588:	cbz	x4, 65a4 <grub_device_iterate+0x364>
    658c:	ldr	x3, [x19, #56]
    6590:	mov	w2, w21
    6594:	and	w1, w22, #0x1ff
    6598:	add	x0, x20, x22, lsr #9
    659c:	blr	x4
    65a0:	mov	w0, #0x0                   	// #0
    65a4:	ldp	x19, x20, [sp, #16]
    65a8:	ldp	x21, x22, [sp, #32]
    65ac:	ldp	x23, x24, [sp, #48]
    65b0:	ldp	x29, x30, [sp], #96
    65b4:	ret
    65b8:	stp	x25, x26, [sp, #64]
    65bc:	mov	x0, #0x8000                	// #32768
    65c0:	bl	5420 <grub_malloc>
    65c4:	mov	x25, x0
    65c8:	cbz	x0, 66d0 <grub_device_iterate+0x490>
    65cc:	ldr	x0, [x19, #16]
    65d0:	cmn	x0, #0x1
    65d4:	b.eq	65f0 <grub_device_iterate+0x3b0>  // b.none
    65d8:	add	x1, x20, #0x40
    65dc:	ldr	w2, [x19, #24]
    65e0:	sub	w2, w2, #0x9
    65e4:	lsl	x0, x0, x2
    65e8:	cmp	x1, x0
    65ec:	b.cs	6624 <grub_device_iterate+0x3e4>  // b.hs, b.nlast
    65f0:	ldr	w1, [x19, #24]
    65f4:	mov	w0, #0xf                   	// #15
    65f8:	sub	w0, w0, w1
    65fc:	sub	w1, w1, #0x9
    6600:	ldr	x2, [x19, #8]
    6604:	ldr	x4, [x2, #40]
    6608:	mov	x3, x25
    660c:	mov	w2, #0x1                   	// #1
    6610:	lsl	w2, w2, w0
    6614:	lsr	x1, x20, x1
    6618:	mov	x0, x19
    661c:	blr	x4
    6620:	cbz	w0, 66e0 <grub_device_iterate+0x4a0>
    6624:	str	x27, [sp, #80]
    6628:	mov	x0, x25
    662c:	bl	547c <grub_free>
    6630:	adrp	x0, 0 <_start>
    6634:	ldr	x0, [x0]
    6638:	str	wzr, [x0]
    663c:	add	x25, x20, x22, lsr #9
    6640:	and	x4, x22, #0x1ff
    6644:	ldr	w0, [x19, #24]
    6648:	sub	w3, w0, #0x9
    664c:	mov	x1, #0x1                   	// #1
    6650:	lsl	x3, x1, x3
    6654:	neg	x2, x3
    6658:	and	x26, x2, x25
    665c:	bic	x2, x25, x2
    6660:	add	x25, x4, x2, lsl #9
    6664:	lsl	x1, x1, x0
    6668:	add	x1, x1, x25
    666c:	add	x23, x1, x23
    6670:	lsr	x23, x23, x0
    6674:	lsl	w0, w23, w0
    6678:	bl	5420 <grub_malloc>
    667c:	mov	x27, x0
    6680:	cbz	x0, 6718 <grub_device_iterate+0x4d8>
    6684:	ldr	w1, [x19, #24]
    6688:	sub	w1, w1, #0x9
    668c:	ldr	x0, [x19, #8]
    6690:	ldr	x4, [x0, #40]
    6694:	mov	x3, x27
    6698:	mov	w2, w23
    669c:	lsr	x1, x26, x1
    66a0:	mov	x0, x19
    66a4:	blr	x4
    66a8:	cbnz	w0, 672c <grub_device_iterate+0x4ec>
    66ac:	mov	x2, x21
    66b0:	add	x1, x27, x25
    66b4:	mov	x0, x24
    66b8:	bl	9854 <grub_memmove>
    66bc:	mov	x0, x27
    66c0:	bl	547c <grub_free>
    66c4:	ldp	x25, x26, [sp, #64]
    66c8:	ldr	x27, [sp, #80]
    66cc:	b	6580 <grub_device_iterate+0x340>
    66d0:	adrp	x0, 0 <_start>
    66d4:	ldr	x0, [x0]
    66d8:	ldr	w0, [x0]
    66dc:	b	6770 <grub_device_iterate+0x530>
    66e0:	mov	x2, x21
    66e4:	add	x1, x25, x22
    66e8:	mov	x0, x24
    66ec:	bl	9854 <grub_memmove>
    66f0:	ldr	x0, [x19, #8]
    66f4:	mov	x3, x25
    66f8:	mov	x2, x20
    66fc:	ldr	x1, [x19, #32]
    6700:	ldr	w0, [x0, #8]
    6704:	bl	6378 <grub_device_iterate+0x138>
    6708:	mov	x0, x25
    670c:	bl	547c <grub_free>
    6710:	ldp	x25, x26, [sp, #64]
    6714:	b	6580 <grub_device_iterate+0x340>
    6718:	adrp	x0, 0 <_start>
    671c:	ldr	x0, [x0]
    6720:	ldr	w0, [x0]
    6724:	ldr	x27, [sp, #80]
    6728:	b	6770 <grub_device_iterate+0x530>
    672c:	bl	84c0 <grub_error_push>
    6730:	ldr	x4, [x19]
    6734:	adrp	x0, 0 <_start>
    6738:	ldr	x3, [x0]
    673c:	adrp	x0, 0 <_start>
    6740:	ldr	x2, [x0]
    6744:	mov	w1, #0x180                 	// #384
    6748:	adrp	x0, 0 <_start>
    674c:	ldr	x0, [x0]
    6750:	bl	aca0 <grub_real_dprintf>
    6754:	bl	8580 <grub_error_pop>
    6758:	mov	x0, x27
    675c:	bl	547c <grub_free>
    6760:	adrp	x0, 0 <_start>
    6764:	ldr	x0, [x0]
    6768:	ldr	w0, [x0]
    676c:	ldr	x27, [sp, #80]
    6770:	cbz	w0, 677c <grub_device_iterate+0x53c>
    6774:	ldp	x25, x26, [sp, #64]
    6778:	b	65a4 <grub_device_iterate+0x364>
    677c:	ldp	x25, x26, [sp, #64]
    6780:	b	6580 <grub_device_iterate+0x340>
    6784:	nop
	...

00000000000067a8 <grub_disk_cache_invalidate_all>:
    67a8:	stp	x29, x30, [sp, #-48]!
    67ac:	mov	x29, sp
    67b0:	stp	x19, x20, [sp, #16]
    67b4:	str	x21, [sp, #32]
    67b8:	adrp	x0, 0 <_start>
    67bc:	ldr	x19, [x0]
    67c0:	add	x21, x19, #0x9, lsl #12
    67c4:	add	x21, x21, #0xf88
    67c8:	b	67e0 <grub_disk_cache_invalidate_all+0x38>
    67cc:	bl	547c <grub_free>
    67d0:	str	xzr, [x19]
    67d4:	add	x19, x19, #0x28
    67d8:	cmp	x19, x21
    67dc:	b.eq	67f4 <grub_disk_cache_invalidate_all+0x4c>  // b.none
    67e0:	ldr	x0, [x19]
    67e4:	cbz	x0, 67d4 <grub_disk_cache_invalidate_all+0x2c>
    67e8:	ldr	w1, [x19, #8]
    67ec:	cbnz	w1, 67d4 <grub_disk_cache_invalidate_all+0x2c>
    67f0:	b	67cc <grub_disk_cache_invalidate_all+0x24>
    67f4:	ldp	x19, x20, [sp, #16]
    67f8:	ldr	x21, [sp, #32]
    67fc:	ldp	x29, x30, [sp], #48
    6800:	ret
    6804:	nop
	...

0000000000006810 <grub_disk_dev_register>:
    6810:	adrp	x1, 0 <_start>
    6814:	ldr	x1, [x1]
    6818:	ldr	x2, [x1]
    681c:	str	x2, [x0, #56]
    6820:	str	x0, [x1]
    6824:	ret
	...

0000000000006830 <grub_disk_dev_unregister>:
    6830:	adrp	x1, 0 <_start>
    6834:	ldr	x1, [x1]
    6838:	ldr	x1, [x1]
    683c:	cbz	x1, 6868 <grub_disk_dev_unregister+0x38>
    6840:	cmp	x1, x0
    6844:	b.eq	686c <grub_disk_dev_unregister+0x3c>  // b.none
    6848:	mov	x2, x1
    684c:	ldr	x1, [x1, #56]
    6850:	cbz	x1, 6868 <grub_disk_dev_unregister+0x38>
    6854:	cmp	x0, x1
    6858:	b.ne	6848 <grub_disk_dev_unregister+0x18>  // b.any
    685c:	add	x2, x2, #0x38
    6860:	ldr	x0, [x1, #56]
    6864:	str	x0, [x2]
    6868:	ret
    686c:	mov	x1, x0
    6870:	adrp	x0, 0 <_start>
    6874:	ldr	x2, [x0]
    6878:	b	6860 <grub_disk_dev_unregister+0x30>
    687c:	nop
	...

0000000000006888 <grub_disk_close>:
    6888:	stp	x29, x30, [sp, #-32]!
    688c:	mov	x29, sp
    6890:	stp	x19, x20, [sp, #16]
    6894:	mov	x20, x0
    6898:	ldr	x4, [x0]
    689c:	adrp	x0, 0 <_start>
    68a0:	ldr	x3, [x0]
    68a4:	adrp	x0, 0 <_start>
    68a8:	ldr	x2, [x0]
    68ac:	mov	w1, #0x127                 	// #295
    68b0:	adrp	x0, 0 <_start>
    68b4:	ldr	x0, [x0]
    68b8:	bl	aca0 <grub_real_dprintf>
    68bc:	ldr	x0, [x20, #8]
    68c0:	cbz	x0, 68d4 <grub_disk_close+0x4c>
    68c4:	ldr	x1, [x0, #32]
    68c8:	cbz	x1, 68d4 <grub_disk_close+0x4c>
    68cc:	mov	x0, x20
    68d0:	blr	x1
    68d4:	bl	5840 <grub_get_time_ms>
    68d8:	adrp	x1, 0 <_start>
    68dc:	ldr	x1, [x1]
    68e0:	str	x0, [x1]
    68e4:	ldr	x19, [x20, #40]
    68e8:	cbz	x19, 6900 <grub_disk_close+0x78>
    68ec:	mov	x0, x19
    68f0:	ldr	x19, [x19, #40]
    68f4:	bl	547c <grub_free>
    68f8:	str	x19, [x20, #40]
    68fc:	cbnz	x19, 68ec <grub_disk_close+0x64>
    6900:	ldr	x0, [x20]
    6904:	bl	547c <grub_free>
    6908:	mov	x0, x20
    690c:	bl	547c <grub_free>
    6910:	ldp	x19, x20, [sp, #16]
    6914:	ldp	x29, x30, [sp], #32
    6918:	ret
    691c:	nop
	...

0000000000006940 <grub_disk_open>:
    6940:	stp	x29, x30, [sp, #-64]!
    6944:	mov	x29, sp
    6948:	stp	x21, x22, [sp, #32]
    694c:	stp	x23, x24, [sp, #48]
    6950:	mov	x23, x0
    6954:	mov	x4, x0
    6958:	adrp	x0, 0 <_start>
    695c:	ldr	x3, [x0]
    6960:	adrp	x0, 0 <_start>
    6964:	ldr	x2, [x0]
    6968:	mov	w1, #0xc4                  	// #196
    696c:	adrp	x0, 0 <_start>
    6970:	ldr	x0, [x0]
    6974:	bl	aca0 <grub_real_dprintf>
    6978:	mov	x0, #0x48                  	// #72
    697c:	bl	543c <grub_zalloc>
    6980:	mov	x21, x0
    6984:	cbz	x0, 6b9c <grub_disk_open+0x25c>
    6988:	stp	x19, x20, [sp, #16]
    698c:	mov	w0, #0x9                   	// #9
    6990:	str	w0, [x21, #24]
    6994:	mov	w0, #0x20                  	// #32
    6998:	str	w0, [x21, #28]
    699c:	mov	x1, x23
    69a0:	ldrb	w2, [x1], #1
    69a4:	cbz	w2, 6a98 <grub_disk_open+0x158>
    69a8:	mov	x20, x23
    69ac:	b	69d4 <grub_disk_open+0x94>
    69b0:	ldrb	w0, [x20, #1]
    69b4:	add	x20, x20, #0x2
    69b8:	cmp	w0, #0x2c
    69bc:	csel	x1, x20, x1, eq  // eq = none
    69c0:	mov	x3, x1
    69c4:	ldrb	w2, [x3], #1
    69c8:	cbz	w2, 6a7c <grub_disk_open+0x13c>
    69cc:	mov	x20, x1
    69d0:	mov	x1, x3
    69d4:	cmp	w2, #0x5c
    69d8:	b.eq	69b0 <grub_disk_open+0x70>  // b.none
    69dc:	cmp	w2, #0x2c
    69e0:	b.ne	69c0 <grub_disk_open+0x80>  // b.any
    69e4:	cbz	x20, 6a80 <grub_disk_open+0x140>
    69e8:	sub	x19, x20, x23
    69ec:	add	x0, x19, #0x1
    69f0:	bl	5420 <grub_malloc>
    69f4:	mov	x22, x0
    69f8:	cbz	x0, 6b88 <grub_disk_open+0x248>
    69fc:	mov	x2, x19
    6a00:	mov	x1, x23
    6a04:	bl	9854 <grub_memmove>
    6a08:	strb	wzr, [x22, x19]
    6a0c:	mov	x0, x22
    6a10:	bl	9c18 <grub_strdup>
    6a14:	str	x0, [x21]
    6a18:	cbz	x0, 6b7c <grub_disk_open+0x23c>
    6a1c:	adrp	x0, 0 <_start>
    6a20:	ldr	x0, [x0]
    6a24:	ldr	x19, [x0]
    6a28:	cbz	x19, 6a64 <grub_disk_open+0x124>
    6a2c:	adrp	x24, 0 <_start>
    6a30:	ldr	x2, [x19, #24]
    6a34:	mov	x1, x21
    6a38:	mov	x0, x22
    6a3c:	blr	x2
    6a40:	cbz	w0, 6b24 <grub_disk_open+0x1e4>
    6a44:	ldr	x0, [x24]
    6a48:	ldr	w0, [x0]
    6a4c:	cmp	w0, #0xc
    6a50:	b.ne	6b7c <grub_disk_open+0x23c>  // b.any
    6a54:	ldr	x0, [x24]
    6a58:	str	wzr, [x0]
    6a5c:	ldr	x19, [x19, #56]
    6a60:	cbnz	x19, 6a30 <grub_disk_open+0xf0>
    6a64:	mov	x2, x23
    6a68:	adrp	x0, 0 <_start>
    6a6c:	ldr	x1, [x0]
    6a70:	mov	w0, #0xc                   	// #12
    6a74:	bl	8408 <grub_error>
    6a78:	b	6b7c <grub_disk_open+0x23c>
    6a7c:	mov	x20, #0x0                   	// #0
    6a80:	mov	x0, x23
    6a84:	bl	9c18 <grub_strdup>
    6a88:	str	x0, [x21]
    6a8c:	cbz	x0, 6b88 <grub_disk_open+0x248>
    6a90:	mov	x22, x23
    6a94:	b	6a1c <grub_disk_open+0xdc>
    6a98:	mov	x20, #0x0                   	// #0
    6a9c:	b	6a80 <grub_disk_open+0x140>
    6aa0:	mov	w2, #0x1                   	// #1
    6aa4:	lsl	w2, w2, w0
    6aa8:	adrp	x0, 0 <_start>
    6aac:	ldr	x1, [x0]
    6ab0:	mov	w0, #0x18                  	// #24
    6ab4:	bl	8408 <grub_error>
    6ab8:	b	6b7c <grub_disk_open+0x23c>
    6abc:	adrp	x0, 0 <_start>
    6ac0:	ldr	x1, [x0]
    6ac4:	mov	w0, #0xc                   	// #12
    6ac8:	bl	8408 <grub_error>
    6acc:	b	6b7c <grub_disk_open+0x23c>
    6ad0:	bl	67a8 <grub_disk_cache_invalidate_all>
    6ad4:	b	6b70 <grub_disk_open+0x230>
    6ad8:	mov	x0, x22
    6adc:	bl	547c <grub_free>
    6ae0:	b	6b88 <grub_disk_open+0x248>
    6ae4:	bl	84c0 <grub_error_push>
    6ae8:	mov	x4, x23
    6aec:	adrp	x0, 0 <_start>
    6af0:	ldr	x3, [x0]
    6af4:	adrp	x0, 0 <_start>
    6af8:	ldr	x2, [x0]
    6afc:	mov	w1, #0x119                 	// #281
    6b00:	adrp	x0, 0 <_start>
    6b04:	ldr	x0, [x0]
    6b08:	bl	aca0 <grub_real_dprintf>
    6b0c:	bl	8580 <grub_error_pop>
    6b10:	mov	x0, x21
    6b14:	bl	6888 <grub_disk_close>
    6b18:	mov	x21, #0x0                   	// #0
    6b1c:	ldp	x19, x20, [sp, #16]
    6b20:	b	6b9c <grub_disk_open+0x25c>
    6b24:	ldr	w0, [x21, #24]
    6b28:	sub	w1, w0, #0x9
    6b2c:	cmp	w1, #0x6
    6b30:	b.hi	6aa0 <grub_disk_open+0x160>  // b.pmore
    6b34:	str	x19, [x21, #8]
    6b38:	cbz	x20, 6b50 <grub_disk_open+0x210>
    6b3c:	add	x1, x20, #0x1
    6b40:	mov	x0, x21
    6b44:	bl	b590 <grub_partition_probe>
    6b48:	str	x0, [x21, #40]
    6b4c:	cbz	x0, 6abc <grub_disk_open+0x17c>
    6b50:	bl	5840 <grub_get_time_ms>
    6b54:	mov	x19, x0
    6b58:	adrp	x0, 0 <_start>
    6b5c:	ldr	x0, [x0]
    6b60:	ldr	x0, [x0]
    6b64:	add	x0, x0, #0x7d0
    6b68:	cmp	x0, x19
    6b6c:	b.cc	6ad0 <grub_disk_open+0x190>  // b.lo, b.ul, b.last
    6b70:	adrp	x0, 0 <_start>
    6b74:	ldr	x0, [x0]
    6b78:	str	x19, [x0]
    6b7c:	cmp	x22, #0x0
    6b80:	ccmp	x22, x23, #0x4, ne  // ne = any
    6b84:	b.ne	6ad8 <grub_disk_open+0x198>  // b.any
    6b88:	adrp	x0, 0 <_start>
    6b8c:	ldr	x0, [x0]
    6b90:	ldr	w0, [x0]
    6b94:	cbnz	w0, 6ae4 <grub_disk_open+0x1a4>
    6b98:	ldp	x19, x20, [sp, #16]
    6b9c:	mov	x0, x21
    6ba0:	ldp	x21, x22, [sp, #32]
    6ba4:	ldp	x23, x24, [sp, #48]
    6ba8:	ldp	x29, x30, [sp], #64
    6bac:	ret
	...

0000000000006c00 <grub_disk_read>:
    6c00:	stp	x29, x30, [sp, #-96]!
    6c04:	mov	x29, sp
    6c08:	stp	x19, x20, [sp, #16]
    6c0c:	stp	x21, x22, [sp, #32]
    6c10:	stp	x25, x26, [sp, #64]
    6c14:	stp	x27, x28, [sp, #80]
    6c18:	mov	x21, x0
    6c1c:	mov	x26, x3
    6c20:	mov	x27, x4
    6c24:	add	x25, x1, x2, lsr #9
    6c28:	and	x19, x2, #0x1ff
    6c2c:	ldr	x0, [x0, #40]
    6c30:	cbz	x0, 6c68 <grub_disk_read+0x68>
    6c34:	add	x3, x19, #0x1ff
    6c38:	add	x3, x3, x26
    6c3c:	lsr	x3, x3, #9
    6c40:	ldr	x2, [x0, #8]
    6c44:	ldr	x1, [x0, #16]
    6c48:	cmp	x25, x1
    6c4c:	b.cs	6cb8 <grub_disk_read+0xb8>  // b.hs, b.nlast
    6c50:	sub	x1, x1, x25
    6c54:	cmp	x1, x3
    6c58:	b.cc	6cb8 <grub_disk_read+0xb8>  // b.lo, b.ul, b.last
    6c5c:	add	x25, x25, x2
    6c60:	ldr	x0, [x0, #40]
    6c64:	cbnz	x0, 6c40 <grub_disk_read+0x40>
    6c68:	ldr	w0, [x21, #24]
    6c6c:	sub	w1, w0, #0x9
    6c70:	ldr	x0, [x21, #16]
    6c74:	lsl	x0, x0, x1
    6c78:	mov	x1, #0x8000000000000       	// #2251799813685248
    6c7c:	cmp	x0, x1
    6c80:	csel	x0, x0, x1, ls  // ls = plast
    6c84:	cmp	x0, x25
    6c88:	b.ls	6ca0 <grub_disk_read+0xa0>  // b.plast
    6c8c:	add	x1, x19, #0x1ff
    6c90:	add	x1, x1, x26
    6c94:	sub	x0, x0, x25
    6c98:	cmp	x0, x1, lsr #9
    6c9c:	b.cs	6ccc <grub_disk_read+0xcc>  // b.hs, b.nlast
    6ca0:	ldr	x2, [x21]
    6ca4:	adrp	x0, 0 <_start>
    6ca8:	ldr	x1, [x0]
    6cac:	mov	w0, #0xb                   	// #11
    6cb0:	bl	8408 <grub_error>
    6cb4:	b	6cc8 <grub_disk_read+0xc8>
    6cb8:	adrp	x0, 0 <_start>
    6cbc:	ldr	x1, [x0]
    6cc0:	mov	w0, #0xb                   	// #11
    6cc4:	bl	8408 <grub_error>
    6cc8:	cbnz	w0, 6d20 <grub_disk_read+0x120>
    6ccc:	and	x0, x25, #0x3f
    6cd0:	orr	x0, x0, x19
    6cd4:	cbz	x0, 6d64 <grub_disk_read+0x164>
    6cd8:	ubfiz	x2, x25, #9, #6
    6cdc:	add	x2, x2, x19
    6ce0:	mov	x20, #0x8000                	// #32768
    6ce4:	sub	x20, x20, x2
    6ce8:	cmp	x26, x20
    6cec:	csel	x20, x26, x20, ls  // ls = plast
    6cf0:	mov	x4, x27
    6cf4:	mov	x3, x20
    6cf8:	and	x1, x25, #0xffffffffffffffc0
    6cfc:	mov	x0, x21
    6d00:	bl	6518 <grub_device_iterate+0x2d8>
    6d04:	cbnz	w0, 6dbc <grub_disk_read+0x1bc>
    6d08:	stp	x23, x24, [sp, #48]
    6d0c:	add	x27, x27, x20
    6d10:	sub	x26, x26, x20
    6d14:	add	x19, x20, x19
    6d18:	add	x25, x25, x19, lsr #9
    6d1c:	b	6d68 <grub_disk_read+0x168>
    6d20:	bl	84c0 <grub_error_push>
    6d24:	adrp	x0, 0 <_start>
    6d28:	ldr	x5, [x0]
    6d2c:	mov	x4, x25
    6d30:	adrp	x0, 0 <_start>
    6d34:	ldr	x3, [x0]
    6d38:	adrp	x0, 0 <_start>
    6d3c:	ldr	x2, [x0]
    6d40:	mov	w1, #0x1a4                 	// #420
    6d44:	adrp	x0, 0 <_start>
    6d48:	ldr	x0, [x0]
    6d4c:	bl	aca0 <grub_real_dprintf>
    6d50:	bl	8580 <grub_error_pop>
    6d54:	adrp	x0, 0 <_start>
    6d58:	ldr	x0, [x0]
    6d5c:	ldr	w0, [x0]
    6d60:	b	6dbc <grub_disk_read+0x1bc>
    6d64:	stp	x23, x24, [sp, #48]
    6d68:	mov	x28, #0x7fff                	// #32767
    6d6c:	b	6eb8 <grub_disk_read+0x2b8>
    6d70:	mov	x20, #0x0                   	// #0
    6d74:	cbz	x19, 6eb8 <grub_disk_read+0x2b8>
    6d78:	b	6e20 <grub_disk_read+0x220>
    6d7c:	ldr	x4, [x21, #48]
    6d80:	cbz	x4, 6d98 <grub_disk_read+0x198>
    6d84:	ldr	x3, [x21, #56]
    6d88:	mov	w2, #0x8000                	// #32768
    6d8c:	mov	w1, #0x0                   	// #0
    6d90:	mov	x0, x25
    6d94:	blr	x4
    6d98:	add	x25, x25, #0x40
    6d9c:	add	x27, x27, #0x8, lsl #12
    6da0:	sub	x26, x26, #0x8, lsl #12
    6da4:	b	6eb8 <grub_disk_read+0x2b8>
    6da8:	cbnz	x26, 6dd4 <grub_disk_read+0x1d4>
    6dac:	adrp	x0, 0 <_start>
    6db0:	ldr	x0, [x0]
    6db4:	ldr	w0, [x0]
    6db8:	ldp	x23, x24, [sp, #48]
    6dbc:	ldp	x19, x20, [sp, #16]
    6dc0:	ldp	x21, x22, [sp, #32]
    6dc4:	ldp	x25, x26, [sp, #64]
    6dc8:	ldp	x27, x28, [sp, #80]
    6dcc:	ldp	x29, x30, [sp], #96
    6dd0:	ret
    6dd4:	mov	x4, x27
    6dd8:	mov	x3, x26
    6ddc:	mov	x2, #0x0                   	// #0
    6de0:	mov	x1, x25
    6de4:	mov	x0, x21
    6de8:	bl	6518 <grub_device_iterate+0x2d8>
    6dec:	cbz	w0, 6dac <grub_disk_read+0x1ac>
    6df0:	ldp	x23, x24, [sp, #48]
    6df4:	b	6dbc <grub_disk_read+0x1bc>
    6df8:	mov	x2, #0x8000                	// #32768
    6dfc:	mov	x1, x0
    6e00:	add	x0, x27, x19, lsl #15
    6e04:	bl	9854 <grub_memmove>
    6e08:	ldr	x0, [x21, #8]
    6e0c:	add	x2, x25, x19, lsl #6
    6e10:	ldr	x1, [x21, #32]
    6e14:	ldr	w0, [x0, #8]
    6e18:	bl	6480 <grub_device_iterate+0x240>
    6e1c:	cbz	x19, 6d7c <grub_disk_read+0x17c>
    6e20:	ldr	w0, [x21, #24]
    6e24:	mov	w1, #0xf                   	// #15
    6e28:	sub	w2, w1, w0
    6e2c:	sub	w0, w0, #0x9
    6e30:	ldr	x1, [x21, #8]
    6e34:	ldr	x4, [x1, #40]
    6e38:	mov	x3, x27
    6e3c:	lsl	x2, x19, x2
    6e40:	lsr	x1, x25, x0
    6e44:	mov	x0, x21
    6e48:	blr	x4
    6e4c:	cbnz	w0, 6f0c <grub_disk_read+0x30c>
    6e50:	mov	x24, x27
    6e54:	mov	x23, x25
    6e58:	mov	x22, #0x0                   	// #0
    6e5c:	ldr	x0, [x21, #8]
    6e60:	mov	x3, x24
    6e64:	mov	x2, x23
    6e68:	ldr	x1, [x21, #32]
    6e6c:	ldr	w0, [x0, #8]
    6e70:	bl	6378 <grub_device_iterate+0x138>
    6e74:	add	x22, x22, #0x1
    6e78:	add	x23, x23, #0x40
    6e7c:	add	x24, x24, #0x8, lsl #12
    6e80:	cmp	x22, x19
    6e84:	b.cc	6e5c <grub_disk_read+0x25c>  // b.lo, b.ul, b.last
    6e88:	ldr	x4, [x21, #48]
    6e8c:	cbz	x4, 6ea4 <grub_disk_read+0x2a4>
    6e90:	ldr	x3, [x21, #56]
    6e94:	lsl	w2, w19, #15
    6e98:	mov	w1, #0x0                   	// #0
    6e9c:	mov	x0, x25
    6ea0:	blr	x4
    6ea4:	add	x25, x25, x19, lsl #6
    6ea8:	lsl	x19, x19, #15
    6eac:	sub	x26, x26, x19
    6eb0:	add	x27, x27, x19
    6eb4:	cbnz	x20, 6d7c <grub_disk_read+0x17c>
    6eb8:	cmp	x26, x28
    6ebc:	b.ls	6da8 <grub_disk_read+0x1a8>  // b.plast
    6ec0:	lsr	x23, x26, #15
    6ec4:	mov	x22, x25
    6ec8:	mov	x19, #0x0                   	// #0
    6ecc:	ldr	w0, [x21, #28]
    6ed0:	cmp	x19, x0
    6ed4:	b.cs	6d70 <grub_disk_read+0x170>  // b.hs, b.nlast
    6ed8:	ldr	x0, [x21, #8]
    6edc:	mov	x2, x22
    6ee0:	ldr	x1, [x21, #32]
    6ee4:	ldr	w0, [x0, #8]
    6ee8:	bl	62d0 <grub_device_iterate+0x90>
    6eec:	mov	x20, x0
    6ef0:	cbnz	x0, 6df8 <grub_disk_read+0x1f8>
    6ef4:	add	x19, x19, #0x1
    6ef8:	add	x22, x22, #0x40
    6efc:	cmp	x19, x23
    6f00:	b.ne	6ecc <grub_disk_read+0x2cc>  // b.any
    6f04:	mov	x19, x23
    6f08:	b	6e20 <grub_disk_read+0x220>
    6f0c:	ldp	x23, x24, [sp, #48]
    6f10:	b	6dbc <grub_disk_read+0x1bc>
    6f14:	nop
	...

0000000000006f50 <grub_disk_get_size>:
    6f50:	mov	x1, x0
    6f54:	ldr	x0, [x0, #40]
    6f58:	cbz	x0, 6f64 <grub_disk_get_size+0x14>
    6f5c:	ldr	x0, [x0, #16]
    6f60:	ret
    6f64:	ldr	x0, [x1, #16]
    6f68:	cmn	x0, #0x1
    6f6c:	b.eq	6f60 <grub_disk_get_size+0x10>  // b.none
    6f70:	ldr	w1, [x1, #24]
    6f74:	sub	w1, w1, #0x9
    6f78:	lsl	x0, x0, x1
    6f7c:	b	6f60 <grub_disk_get_size+0x10>
    6f80:	ldr	x0, [x0, #24]
    6f84:	cbz	x0, 6fa4 <grub_disk_get_size+0x54>
    6f88:	ldr	w2, [x0, #24]
    6f8c:	cmp	w2, w1
    6f90:	b.eq	6fa0 <grub_disk_get_size+0x50>  // b.none
    6f94:	ldr	x0, [x0]
    6f98:	cbnz	x0, 6f88 <grub_disk_get_size+0x38>
    6f9c:	b	6fa4 <grub_disk_get_size+0x54>
    6fa0:	ldr	x0, [x0, #8]
    6fa4:	ret
    6fa8:	stp	x29, x30, [sp, #-64]!
    6fac:	mov	x29, sp
    6fb0:	stp	x19, x20, [sp, #16]
    6fb4:	stp	x21, x22, [sp, #32]
    6fb8:	str	x23, [sp, #48]
    6fbc:	mov	x19, x0
    6fc0:	mov	x22, x1
    6fc4:	ldr	x20, [x0, #40]
    6fc8:	ldrh	w0, [x0, #62]
    6fcc:	ldrh	w1, [x19, #58]
    6fd0:	mul	w0, w0, w1
    6fd4:	add	x20, x19, x20
    6fd8:	add	x0, x20, w0, sxtw
    6fdc:	ldr	x23, [x0, #24]
    6fe0:	ldrh	w0, [x19, #60]
    6fe4:	cbz	w0, 7038 <grub_disk_get_size+0xe8>
    6fe8:	mov	w21, #0x0                   	// #0
    6fec:	ldr	w0, [x20]
    6ff0:	add	x0, x0, x23
    6ff4:	mov	x1, x22
    6ff8:	add	x0, x19, x0
    6ffc:	bl	9954 <grub_strcmp>
    7000:	cbz	w0, 7020 <grub_disk_get_size+0xd0>
    7004:	add	w21, w21, #0x1
    7008:	ldrh	w0, [x19, #58]
    700c:	add	x20, x20, x0
    7010:	ldrh	w0, [x19, #60]
    7014:	cmp	w0, w21
    7018:	b.hi	6fec <grub_disk_get_size+0x9c>  // b.pmore
    701c:	mov	x20, #0x0                   	// #0
    7020:	mov	x0, x20
    7024:	ldp	x19, x20, [sp, #16]
    7028:	ldp	x21, x22, [sp, #32]
    702c:	ldr	x23, [sp, #48]
    7030:	ldp	x29, x30, [sp], #64
    7034:	ret
    7038:	mov	x20, #0x0                   	// #0
    703c:	b	7020 <grub_disk_get_size+0xd0>

0000000000007040 <grub_dl_add>:
    7040:	stp	x29, x30, [sp, #-48]!
    7044:	mov	x29, sp
    7048:	stp	x19, x20, [sp, #16]
    704c:	str	x21, [sp, #32]
    7050:	mov	x20, x0
    7054:	ldr	x21, [x0]
    7058:	adrp	x0, 0 <_start>
    705c:	ldr	x0, [x0]
    7060:	ldr	x19, [x0]
    7064:	cbz	x19, 7080 <grub_dl_add+0x40>
    7068:	ldr	x1, [x19]
    706c:	mov	x0, x21
    7070:	bl	9954 <grub_strcmp>
    7074:	cbz	w0, 7094 <grub_dl_add+0x54>
    7078:	ldr	x19, [x19, #112]
    707c:	cbnz	x19, 7068 <grub_dl_add+0x28>
    7080:	mov	w0, #0x0                   	// #0
    7084:	ldp	x19, x20, [sp, #16]
    7088:	ldr	x21, [sp, #32]
    708c:	ldp	x29, x30, [sp], #48
    7090:	ret
    7094:	ldr	x2, [x20]
    7098:	adrp	x0, 0 <_start>
    709c:	ldr	x1, [x0]
    70a0:	mov	w0, #0x2                   	// #2
    70a4:	bl	8408 <grub_error>
    70a8:	b	7084 <grub_dl_add+0x44>
    70ac:	nop
	...

00000000000070c0 <grub_dl_register_symbol>:
    70c0:	stp	x29, x30, [sp, #-64]!
    70c4:	mov	x29, sp
    70c8:	stp	x19, x20, [sp, #16]
    70cc:	stp	x21, x22, [sp, #32]
    70d0:	str	x23, [sp, #48]
    70d4:	mov	x20, x0
    70d8:	mov	x23, x1
    70dc:	mov	w22, w2
    70e0:	mov	x21, x3
    70e4:	mov	x0, #0x28                  	// #40
    70e8:	bl	5420 <grub_malloc>
    70ec:	cbz	x0, 7180 <grub_dl_register_symbol+0xc0>
    70f0:	mov	x19, x0
    70f4:	cbz	x21, 71a8 <grub_dl_register_symbol+0xe8>
    70f8:	mov	x0, x20
    70fc:	bl	9c18 <grub_strdup>
    7100:	str	x0, [x19, #8]
    7104:	cbz	x0, 7190 <grub_dl_register_symbol+0xd0>
    7108:	str	x23, [x19, #16]
    710c:	str	x21, [x19, #32]
    7110:	str	w22, [x19, #24]
    7114:	ldrb	w0, [x20]
    7118:	cbz	w0, 71b0 <grub_dl_register_symbol+0xf0>
    711c:	mov	w1, #0x0                   	// #0
    7120:	add	w2, w1, w1, lsl #10
    7124:	add	w0, w0, w2, lsl #6
    7128:	sub	w1, w0, w1
    712c:	ldrb	w0, [x20, #1]!
    7130:	cbnz	w0, 7120 <grub_dl_register_symbol+0x60>
    7134:	add	w1, w1, w1, lsr #5
    7138:	mov	w0, #0x21b3                	// #8627
    713c:	movk	w0, #0x80c1, lsl #16
    7140:	umull	x0, w1, w0
    7144:	lsr	x0, x0, #40
    7148:	adrp	x2, 0 <_start>
    714c:	ldr	x2, [x2]
    7150:	add	x2, x2, #0x8
    7154:	mov	w3, #0x1fd                 	// #509
    7158:	msub	w1, w0, w3, w1
    715c:	ldr	x0, [x2, x1, lsl #3]
    7160:	str	x0, [x19]
    7164:	str	x19, [x2, x1, lsl #3]
    7168:	mov	w0, #0x0                   	// #0
    716c:	ldp	x19, x20, [sp, #16]
    7170:	ldp	x21, x22, [sp, #32]
    7174:	ldr	x23, [sp, #48]
    7178:	ldp	x29, x30, [sp], #64
    717c:	ret
    7180:	adrp	x0, 0 <_start>
    7184:	ldr	x0, [x0]
    7188:	ldr	w0, [x0]
    718c:	b	716c <grub_dl_register_symbol+0xac>
    7190:	mov	x0, x19
    7194:	bl	547c <grub_free>
    7198:	adrp	x0, 0 <_start>
    719c:	ldr	x0, [x0]
    71a0:	ldr	w0, [x0]
    71a4:	b	716c <grub_dl_register_symbol+0xac>
    71a8:	str	x20, [x0, #8]
    71ac:	b	7108 <grub_dl_register_symbol+0x48>
    71b0:	mov	w1, #0x0                   	// #0
    71b4:	b	7134 <grub_dl_register_symbol+0x74>
	...

00000000000071c8 <grub_dl_ref>:
    71c8:	cbz	x0, 720c <grub_dl_ref+0x44>
    71cc:	stp	x29, x30, [sp, #-32]!
    71d0:	mov	x29, sp
    71d4:	stp	x19, x20, [sp, #16]
    71d8:	mov	x20, x0
    71dc:	ldr	x19, [x0, #16]
    71e0:	cbz	x19, 71f4 <grub_dl_ref+0x2c>
    71e4:	ldr	x0, [x19, #8]
    71e8:	bl	71c8 <grub_dl_ref>
    71ec:	ldr	x19, [x19]
    71f0:	cbnz	x19, 71e4 <grub_dl_ref+0x1c>
    71f4:	ldr	w0, [x20, #8]
    71f8:	add	w0, w0, #0x1
    71fc:	str	w0, [x20, #8]
    7200:	ldp	x19, x20, [sp, #16]
    7204:	ldp	x29, x30, [sp], #32
    7208:	ret
    720c:	mov	w0, #0x0                   	// #0
    7210:	ret

0000000000007214 <grub_dl_unref>:
    7214:	cbz	x0, 7258 <grub_dl_unref+0x44>
    7218:	stp	x29, x30, [sp, #-32]!
    721c:	mov	x29, sp
    7220:	stp	x19, x20, [sp, #16]
    7224:	mov	x20, x0
    7228:	ldr	x19, [x0, #16]
    722c:	cbz	x19, 7240 <grub_dl_unref+0x2c>
    7230:	ldr	x0, [x19, #8]
    7234:	bl	7214 <grub_dl_unref>
    7238:	ldr	x19, [x19]
    723c:	cbnz	x19, 7230 <grub_dl_unref+0x1c>
    7240:	ldr	w0, [x20, #8]
    7244:	sub	w0, w0, #0x1
    7248:	str	w0, [x20, #8]
    724c:	ldp	x19, x20, [sp, #16]
    7250:	ldp	x29, x30, [sp], #32
    7254:	ret
    7258:	mov	w0, #0x0                   	// #0
    725c:	ret

0000000000007260 <grub_dl_unload>:
    7260:	stp	x29, x30, [sp, #-64]!
    7264:	mov	x29, sp
    7268:	stp	x21, x22, [sp, #32]
    726c:	mov	x22, x0
    7270:	ldr	w0, [x0, #8]
    7274:	cmp	w0, #0x0
    7278:	b.gt	738c <grub_dl_unload+0x12c>
    727c:	stp	x19, x20, [sp, #16]
    7280:	stp	x23, x24, [sp, #48]
    7284:	ldr	x0, [x22, #56]
    7288:	cbz	x0, 7290 <grub_dl_unload+0x30>
    728c:	blr	x0
    7290:	adrp	x0, 0 <_start>
    7294:	ldr	x0, [x0]
    7298:	ldr	x1, [x0]
    729c:	cbz	x1, 72c8 <grub_dl_unload+0x68>
    72a0:	cmp	x22, x1
    72a4:	b.eq	72dc <grub_dl_unload+0x7c>  // b.none
    72a8:	mov	x0, x1
    72ac:	ldr	x1, [x1, #112]
    72b0:	cbz	x1, 72c8 <grub_dl_unload+0x68>
    72b4:	cmp	x22, x1
    72b8:	b.ne	72a8 <grub_dl_unload+0x48>  // b.any
    72bc:	add	x0, x0, #0x70
    72c0:	ldr	x1, [x1, #112]
    72c4:	str	x1, [x0]
    72c8:	adrp	x0, 0 <_start>
    72cc:	ldr	x24, [x0]
    72d0:	add	x20, x24, #0x8
    72d4:	add	x24, x24, #0xff0
    72d8:	b	7328 <grub_dl_unload+0xc8>
    72dc:	adrp	x0, 0 <_start>
    72e0:	ldr	x0, [x0]
    72e4:	b	72c0 <grub_dl_unload+0x60>
    72e8:	mov	x23, x21
    72ec:	cbz	x19, 731c <grub_dl_unload+0xbc>
    72f0:	mov	x21, x19
    72f4:	ldr	x19, [x19]
    72f8:	ldr	x0, [x21, #32]
    72fc:	cmp	x22, x0
    7300:	b.ne	72e8 <grub_dl_unload+0x88>  // b.any
    7304:	str	x19, [x23]
    7308:	ldr	x0, [x21, #8]
    730c:	bl	547c <grub_free>
    7310:	mov	x0, x21
    7314:	bl	547c <grub_free>
    7318:	b	72ec <grub_dl_unload+0x8c>
    731c:	add	x20, x20, #0x8
    7320:	cmp	x20, x24
    7324:	b.eq	7338 <grub_dl_unload+0xd8>  // b.none
    7328:	mov	x23, x20
    732c:	ldr	x19, [x20]
    7330:	cbnz	x19, 72f0 <grub_dl_unload+0x90>
    7334:	b	731c <grub_dl_unload+0xbc>
    7338:	ldr	x19, [x22, #16]
    733c:	cbz	x19, 735c <grub_dl_unload+0xfc>
    7340:	mov	x20, x19
    7344:	ldr	x19, [x19]
    7348:	ldr	x0, [x20, #8]
    734c:	bl	7260 <grub_dl_unload>
    7350:	mov	x0, x20
    7354:	bl	547c <grub_free>
    7358:	cbnz	x19, 7340 <grub_dl_unload+0xe0>
    735c:	ldr	x0, [x22, #96]
    7360:	bl	547c <grub_free>
    7364:	ldr	x0, [x22]
    7368:	bl	547c <grub_free>
    736c:	mov	x0, x22
    7370:	bl	547c <grub_free>
    7374:	mov	w0, #0x1                   	// #1
    7378:	ldp	x19, x20, [sp, #16]
    737c:	ldp	x23, x24, [sp, #48]
    7380:	ldp	x21, x22, [sp, #32]
    7384:	ldp	x29, x30, [sp], #64
    7388:	ret
    738c:	mov	w0, #0x0                   	// #0
    7390:	b	7380 <grub_dl_unload+0x120>
    7394:	nop
	...

00000000000073a0 <grub_dl_load_core_noinit>:
    73a0:	stp	x29, x30, [sp, #-128]!
    73a4:	mov	x29, sp
    73a8:	stp	x19, x20, [sp, #16]
    73ac:	stp	x21, x22, [sp, #32]
    73b0:	mov	x19, x0
    73b4:	mov	x20, x1
    73b8:	mov	x5, x1
    73bc:	mov	x4, x0
    73c0:	adrp	x0, 0 <_start>
    73c4:	ldr	x3, [x0]
    73c8:	adrp	x0, 0 <_start>
    73cc:	ldr	x2, [x0]
    73d0:	mov	w1, #0x259                 	// #601
    73d4:	adrp	x0, 0 <_start>
    73d8:	ldr	x0, [x0]
    73dc:	bl	aca0 <grub_real_dprintf>
    73e0:	cmp	x20, #0x3f
    73e4:	b.ls	75e8 <grub_dl_load_core_noinit+0x248>  // b.plast
    73e8:	ldr	w1, [x19]
    73ec:	mov	w0, #0x457f                	// #17791
    73f0:	movk	w0, #0x464c, lsl #16
    73f4:	cmp	w1, w0
    73f8:	b.ne	7414 <grub_dl_load_core_noinit+0x74>  // b.any
    73fc:	ldrb	w0, [x19, #6]
    7400:	cmp	w0, #0x1
    7404:	b.ne	7414 <grub_dl_load_core_noinit+0x74>  // b.any
    7408:	ldr	w0, [x19, #20]
    740c:	cmp	w0, #0x1
    7410:	b.eq	7600 <grub_dl_load_core_noinit+0x260>  // b.none
    7414:	adrp	x0, 0 <_start>
    7418:	ldr	x1, [x0]
    741c:	mov	w0, #0x15                  	// #21
    7420:	bl	8408 <grub_error>
    7424:	mov	w22, w0
    7428:	cbnz	w22, 7be4 <grub_dl_load_core_noinit+0x844>
    742c:	ldrh	w0, [x19, #16]
    7430:	cmp	w0, #0x1
    7434:	b.ne	7610 <grub_dl_load_core_noinit+0x270>  // b.any
    7438:	ldrh	w0, [x19, #58]
    743c:	ldrh	w1, [x19, #60]
    7440:	mul	w0, w0, w1
    7444:	ldr	x1, [x19, #40]
    7448:	add	x0, x0, x1
    744c:	cmp	x0, x20
    7450:	b.hi	7628 <grub_dl_load_core_noinit+0x288>  // b.pmore
    7454:	mov	x0, #0x78                  	// #120
    7458:	bl	543c <grub_zalloc>
    745c:	mov	x20, x0
    7460:	cbz	x0, 76ac <grub_dl_load_core_noinit+0x30c>
    7464:	mov	w0, #0x1                   	// #1
    7468:	str	w0, [x20, #8]
    746c:	mov	x4, x20
    7470:	adrp	x0, 0 <_start>
    7474:	ldr	x3, [x0]
    7478:	adrp	x0, 0 <_start>
    747c:	ldr	x2, [x0]
    7480:	mov	w1, #0x272                 	// #626
    7484:	adrp	x0, 0 <_start>
    7488:	ldr	x0, [x0]
    748c:	bl	aca0 <grub_real_dprintf>
    7490:	adrp	x0, 0 <_start>
    7494:	ldr	x1, [x0]
    7498:	mov	x0, x19
    749c:	bl	6fa8 <grub_disk_get_size+0x58>
    74a0:	mov	x21, x0
    74a4:	cbz	x0, 7670 <grub_dl_load_core_noinit+0x2d0>
    74a8:	ldr	x0, [x0, #24]
    74ac:	adrp	x1, 0 <_start>
    74b0:	ldr	x1, [x1]
    74b4:	add	x0, x19, x0
    74b8:	bl	9954 <grub_strcmp>
    74bc:	cbnz	w0, 7640 <grub_dl_load_core_noinit+0x2a0>
    74c0:	adrp	x0, 0 <_start>
    74c4:	ldr	x1, [x0]
    74c8:	mov	x0, x19
    74cc:	bl	6fa8 <grub_disk_get_size+0x58>
    74d0:	cbz	x0, 7688 <grub_dl_load_core_noinit+0x2e8>
    74d4:	ldr	x0, [x0, #24]
    74d8:	add	x0, x19, x0
    74dc:	bl	9c18 <grub_strdup>
    74e0:	str	x0, [x20]
    74e4:	cbz	x0, 76c0 <grub_dl_load_core_noinit+0x320>
    74e8:	stp	x23, x24, [sp, #48]
    74ec:	stp	x25, x26, [sp, #64]
    74f0:	adrp	x0, 0 <_start>
    74f4:	ldr	x1, [x0]
    74f8:	mov	x0, x19
    74fc:	bl	6fa8 <grub_disk_get_size+0x58>
    7500:	cbz	x0, 7574 <grub_dl_load_core_noinit+0x1d4>
    7504:	ldr	x21, [x0, #24]
    7508:	add	x21, x19, x21
    750c:	ldr	x24, [x0, #32]
    7510:	add	x24, x21, x24
    7514:	mov	x25, #0x10                  	// #16
    7518:	cmp	x21, x24
    751c:	b.cs	7574 <grub_dl_load_core_noinit+0x1d4>  // b.hs, b.nlast
    7520:	ldrb	w0, [x21]
    7524:	cbz	w0, 7574 <grub_dl_load_core_noinit+0x1d4>
    7528:	mov	x0, x21
    752c:	bl	7e60 <grub_dl_load>
    7530:	mov	x23, x0
    7534:	cbz	x0, 76d0 <grub_dl_load_core_noinit+0x330>
    7538:	bl	71c8 <grub_dl_ref>
    753c:	mov	x0, x25
    7540:	bl	5420 <grub_malloc>
    7544:	mov	x1, x0
    7548:	cbz	x0, 76ec <grub_dl_load_core_noinit+0x34c>
    754c:	str	x23, [x0, #8]
    7550:	ldr	x0, [x20, #16]
    7554:	str	x0, [x1]
    7558:	str	x1, [x20, #16]
    755c:	mov	x0, x21
    7560:	bl	9bf4 <grub_strlen>
    7564:	add	x0, x0, #0x1
    7568:	add	x21, x21, x0
    756c:	cmp	x24, x21
    7570:	b.hi	7520 <grub_dl_load_core_noinit+0x180>  // b.pmore
    7574:	ldr	x2, [x19, #40]
    7578:	add	x2, x19, x2
    757c:	ldrh	w4, [x19, #60]
    7580:	cbz	w4, 76fc <grub_dl_load_core_noinit+0x35c>
    7584:	ldrh	w5, [x19, #58]
    7588:	mov	x23, #0x1                   	// #1
    758c:	mov	x24, #0x0                   	// #0
    7590:	ldr	x1, [x2, #48]
    7594:	sub	x0, x1, #0x1
    7598:	add	x0, x0, x24
    759c:	neg	x3, x1
    75a0:	and	x0, x0, x3
    75a4:	ldr	x24, [x2, #32]
    75a8:	add	x24, x0, x24
    75ac:	cmp	x23, x1
    75b0:	csel	x23, x23, x1, cs  // cs = hs, nlast
    75b4:	add	w22, w22, #0x1
    75b8:	add	x2, x2, x5
    75bc:	cmp	w22, w4
    75c0:	b.ne	7590 <grub_dl_load_core_noinit+0x1f0>  // b.any
    75c4:	add	x2, sp, #0x78
    75c8:	add	x1, sp, #0x70
    75cc:	mov	x0, x19
    75d0:	bl	930 <grub_arm64_dl_get_tramp_got_size>
    75d4:	mov	w21, w0
    75d8:	cbz	w0, 7708 <grub_dl_load_core_noinit+0x368>
    75dc:	ldp	x23, x24, [sp, #48]
    75e0:	ldp	x25, x26, [sp, #64]
    75e4:	b	769c <grub_dl_load_core_noinit+0x2fc>
    75e8:	adrp	x0, 0 <_start>
    75ec:	ldr	x1, [x0]
    75f0:	mov	w0, #0x15                  	// #21
    75f4:	bl	8408 <grub_error>
    75f8:	mov	w22, w0
    75fc:	b	7428 <grub_dl_load_core_noinit+0x88>
    7600:	mov	x0, x19
    7604:	bl	368 <grub_arch_dl_check_header>
    7608:	mov	w22, w0
    760c:	b	7428 <grub_dl_load_core_noinit+0x88>
    7610:	adrp	x0, 0 <_start>
    7614:	ldr	x1, [x0]
    7618:	mov	w0, #0x2                   	// #2
    761c:	bl	8408 <grub_error>
    7620:	mov	x20, #0x0                   	// #0
    7624:	b	76ac <grub_dl_load_core_noinit+0x30c>
    7628:	adrp	x0, 0 <_start>
    762c:	ldr	x1, [x0]
    7630:	mov	w0, #0x15                  	// #21
    7634:	bl	8408 <grub_error>
    7638:	mov	x20, #0x0                   	// #0
    763c:	b	76ac <grub_dl_load_core_noinit+0x30c>
    7640:	ldr	x0, [x21, #24]
    7644:	adrp	x1, 0 <_start>
    7648:	ldr	x1, [x1]
    764c:	add	x0, x19, x0
    7650:	bl	9954 <grub_strcmp>
    7654:	cbz	w0, 74c0 <grub_dl_load_core_noinit+0x120>
    7658:	ldr	x0, [x21, #24]
    765c:	adrp	x1, 0 <_start>
    7660:	ldr	x1, [x1]
    7664:	add	x0, x19, x0
    7668:	bl	9954 <grub_strcmp>
    766c:	cbz	w0, 74c0 <grub_dl_load_core_noinit+0x120>
    7670:	adrp	x0, 0 <_start>
    7674:	ldr	x1, [x0]
    7678:	mov	w0, #0x2                   	// #2
    767c:	bl	8408 <grub_error>
    7680:	cbz	w0, 74c0 <grub_dl_load_core_noinit+0x120>
    7684:	b	769c <grub_dl_load_core_noinit+0x2fc>
    7688:	adrp	x0, 0 <_start>
    768c:	ldr	x1, [x0]
    7690:	mov	w0, #0x2                   	// #2
    7694:	bl	8408 <grub_error>
    7698:	cbz	w0, 74e8 <grub_dl_load_core_noinit+0x148>
    769c:	str	xzr, [x20, #56]
    76a0:	mov	x0, x20
    76a4:	bl	7260 <grub_dl_unload>
    76a8:	mov	x20, #0x0                   	// #0
    76ac:	mov	x0, x20
    76b0:	ldp	x19, x20, [sp, #16]
    76b4:	ldp	x21, x22, [sp, #32]
    76b8:	ldp	x29, x30, [sp], #128
    76bc:	ret
    76c0:	adrp	x0, 0 <_start>
    76c4:	ldr	x0, [x0]
    76c8:	ldr	w0, [x0]
    76cc:	b	7698 <grub_dl_load_core_noinit+0x2f8>
    76d0:	adrp	x0, 0 <_start>
    76d4:	ldr	x0, [x0]
    76d8:	ldr	w0, [x0]
    76dc:	cbz	w0, 7574 <grub_dl_load_core_noinit+0x1d4>
    76e0:	ldp	x23, x24, [sp, #48]
    76e4:	ldp	x25, x26, [sp, #64]
    76e8:	b	769c <grub_dl_load_core_noinit+0x2fc>
    76ec:	adrp	x0, 0 <_start>
    76f0:	ldr	x0, [x0]
    76f4:	ldr	w0, [x0]
    76f8:	b	76dc <grub_dl_load_core_noinit+0x33c>
    76fc:	mov	x23, #0x1                   	// #1
    7700:	mov	x24, #0x0                   	// #0
    7704:	b	75c4 <grub_dl_load_core_noinit+0x224>
    7708:	stp	x27, x28, [sp, #80]
    770c:	ldr	x0, [sp, #112]
    7710:	add	x0, x0, #0x7
    7714:	and	x0, x0, #0xfffffffffffffff8
    7718:	ldr	x1, [sp, #120]
    771c:	add	x1, x1, #0x7
    7720:	and	x1, x1, #0xfffffffffffffff8
    7724:	add	x0, x0, x1
    7728:	add	x24, x0, x24
    772c:	cmp	x23, #0x8
    7730:	mov	x1, x24
    7734:	mov	x0, #0x8                   	// #8
    7738:	csel	x0, x23, x0, cs  // cs = hs, nlast
    773c:	bl	51c8 <grub_memalign>
    7740:	mov	x25, x0
    7744:	str	x0, [x20, #96]
    7748:	cbz	x0, 776c <grub_dl_load_core_noinit+0x3cc>
    774c:	str	x24, [x20, #104]
    7750:	ldr	x23, [x19, #40]
    7754:	add	x23, x19, x23
    7758:	ldrh	w0, [x19, #60]
    775c:	cbz	w0, 7878 <grub_dl_load_core_noinit+0x4d8>
    7760:	mov	w24, w21
    7764:	mov	x26, #0x20                  	// #32
    7768:	b	7824 <grub_dl_load_core_noinit+0x484>
    776c:	adrp	x0, 0 <_start>
    7770:	ldr	x0, [x0]
    7774:	ldr	w0, [x0]
    7778:	b	7788 <grub_dl_load_core_noinit+0x3e8>
    777c:	adrp	x0, 0 <_start>
    7780:	ldr	x0, [x0]
    7784:	ldr	w0, [x0]
    7788:	cbnz	w0, 7b98 <grub_dl_load_core_noinit+0x7f8>
    778c:	ldr	x0, [x19, #40]
    7790:	add	x0, x19, x0
    7794:	ldrh	w3, [x19, #60]
    7798:	cbz	w3, 7ae4 <grub_dl_load_core_noinit+0x744>
    779c:	mov	w1, w21
    77a0:	ldr	w2, [x0, #4]
    77a4:	cmp	w2, #0x2
    77a8:	b.eq	78a4 <grub_dl_load_core_noinit+0x504>  // b.none
    77ac:	add	w1, w1, #0x1
    77b0:	ldrh	w2, [x19, #58]
    77b4:	add	x0, x0, x2
    77b8:	cmp	w1, w3
    77bc:	b.ne	77a0 <grub_dl_load_core_noinit+0x400>  // b.any
    77c0:	ldr	x22, [x19, #40]
    77c4:	add	x22, x19, x22
    77c8:	b	7c20 <grub_dl_load_core_noinit+0x880>
    77cc:	ldr	x1, [x23, #24]
    77d0:	add	x1, x19, x1
    77d4:	mov	x0, x27
    77d8:	bl	9854 <grub_memmove>
    77dc:	b	7870 <grub_dl_load_core_noinit+0x4d0>
    77e0:	mov	w1, #0x0                   	// #0
    77e4:	mov	x0, x27
    77e8:	bl	9b50 <grub_memset>
    77ec:	b	7870 <grub_dl_load_core_noinit+0x4d0>
    77f0:	str	xzr, [x0, #8]
    77f4:	ldr	x0, [x23, #32]
    77f8:	str	x0, [x22, #16]
    77fc:	str	w24, [x22, #24]
    7800:	ldr	x0, [x20, #24]
    7804:	str	x0, [x22]
    7808:	str	x22, [x20, #24]
    780c:	add	w24, w24, #0x1
    7810:	ldrh	w1, [x19, #58]
    7814:	add	x23, x23, x1
    7818:	ldrh	w1, [x19, #60]
    781c:	cmp	w24, w1
    7820:	b.cs	7878 <grub_dl_load_core_noinit+0x4d8>  // b.hs, b.nlast
    7824:	ldr	x0, [x23, #8]
    7828:	tbz	w0, #1, 780c <grub_dl_load_core_noinit+0x46c>
    782c:	mov	x0, x26
    7830:	bl	5420 <grub_malloc>
    7834:	mov	x22, x0
    7838:	cbz	x0, 777c <grub_dl_load_core_noinit+0x3dc>
    783c:	ldr	x2, [x23, #32]
    7840:	cbz	x2, 77f0 <grub_dl_load_core_noinit+0x450>
    7844:	ldr	x1, [x23, #48]
    7848:	add	x27, x25, x1
    784c:	sub	x27, x27, #0x1
    7850:	neg	x1, x1
    7854:	and	x27, x27, x1
    7858:	add	x25, x27, x2
    785c:	ldr	w0, [x23, #4]
    7860:	cmp	w0, #0x1
    7864:	b.eq	77cc <grub_dl_load_core_noinit+0x42c>  // b.none
    7868:	cmp	w0, #0x8
    786c:	b.eq	77e0 <grub_dl_load_core_noinit+0x440>  // b.none
    7870:	str	x27, [x22, #8]
    7874:	b	77f4 <grub_dl_load_core_noinit+0x454>
    7878:	add	x25, x25, #0x7
    787c:	and	x25, x25, #0xfffffffffffffff8
    7880:	str	x25, [x20, #80]
    7884:	str	x25, [x20, #88]
    7888:	ldr	x0, [sp, #112]
    788c:	add	x0, x25, x0
    7890:	add	x0, x0, #0x7
    7894:	and	x0, x0, #0xfffffffffffffff8
    7898:	str	x0, [x20, #64]
    789c:	str	x0, [x20, #72]
    78a0:	b	778c <grub_dl_load_core_noinit+0x3ec>
    78a4:	cmp	w3, w1
    78a8:	b.eq	77c0 <grub_dl_load_core_noinit+0x420>  // b.none
    78ac:	ldr	x22, [x0, #24]
    78b0:	add	x22, x19, x22
    78b4:	str	x22, [x20, #32]
    78b8:	ldr	x25, [x0, #56]
    78bc:	str	x25, [x20, #40]
    78c0:	ldr	x2, [x0, #32]
    78c4:	ldrh	w1, [x19, #58]
    78c8:	ldr	w0, [x0, #40]
    78cc:	mul	w0, w1, w0
    78d0:	ldr	x1, [x19, #40]
    78d4:	add	x0, x0, x1
    78d8:	add	x0, x19, x0
    78dc:	ldr	x28, [x0, #24]
    78e0:	udiv	w0, w2, w25
    78e4:	str	w0, [sp, #104]
    78e8:	cmp	w2, w25
    78ec:	b.cc	7ad4 <grub_dl_load_core_noinit+0x734>  // b.lo, b.ul, b.last
    78f0:	mov	w23, w21
    78f4:	str	w21, [sp, #108]
    78f8:	b	7a38 <grub_dl_load_core_noinit+0x698>
    78fc:	cmp	w2, #0x4
    7900:	b.ne	7ac0 <grub_dl_load_core_noinit+0x720>  // b.any
    7904:	str	xzr, [x22, #8]
    7908:	b	7a24 <grub_dl_load_core_noinit+0x684>
    790c:	cbz	w1, 7918 <grub_dl_load_core_noinit+0x578>
    7910:	ldrh	w0, [x22, #6]
    7914:	cbz	w0, 7958 <grub_dl_load_core_noinit+0x5b8>
    7918:	ldrh	w1, [x22, #6]
    791c:	mov	x0, x20
    7920:	bl	6f80 <grub_disk_get_size+0x30>
    7924:	ldr	x1, [x22, #8]
    7928:	add	x1, x0, x1
    792c:	str	x1, [x22, #8]
    7930:	cbz	w27, 7a24 <grub_dl_load_core_noinit+0x684>
    7934:	mov	x3, x20
    7938:	mov	w2, #0x0                   	// #0
    793c:	mov	x0, x24
    7940:	bl	70c0 <grub_dl_register_symbol>
    7944:	cbz	w0, 7a24 <grub_dl_load_core_noinit+0x684>
    7948:	adrp	x0, 0 <_start>
    794c:	ldr	x0, [x0]
    7950:	ldr	w0, [x0]
    7954:	b	7ad0 <grub_dl_load_core_noinit+0x730>
    7958:	ldrb	w2, [x19, x3]
    795c:	cbz	w2, 79dc <grub_dl_load_core_noinit+0x63c>
    7960:	mov	x3, x24
    7964:	ldr	w0, [sp, #108]
    7968:	add	w1, w0, w0, lsl #10
    796c:	add	w1, w2, w1, lsl #6
    7970:	sub	w0, w1, w0
    7974:	ldrb	w2, [x3, #1]!
    7978:	cbnz	w2, 7968 <grub_dl_load_core_noinit+0x5c8>
    797c:	adrp	x1, 0 <_start>
    7980:	ldr	x2, [x1]
    7984:	add	x2, x2, #0x8
    7988:	add	w0, w0, w0, lsr #5
    798c:	mov	w1, #0x21b3                	// #8627
    7990:	movk	w1, #0x80c1, lsl #16
    7994:	umull	x1, w0, w1
    7998:	lsr	x1, x1, #40
    799c:	mov	w3, #0x1fd                 	// #509
    79a0:	msub	w0, w1, w3, w0
    79a4:	ldr	x26, [x2, x0, lsl #3]
    79a8:	cbz	x26, 79c4 <grub_dl_load_core_noinit+0x624>
    79ac:	mov	x1, x24
    79b0:	ldr	x0, [x26, #8]
    79b4:	bl	9954 <grub_strcmp>
    79b8:	cbz	w0, 7c54 <grub_dl_load_core_noinit+0x8b4>
    79bc:	ldr	x26, [x26]
    79c0:	cbnz	x26, 79ac <grub_dl_load_core_noinit+0x60c>
    79c4:	mov	x2, x24
    79c8:	adrp	x0, 0 <_start>
    79cc:	ldr	x1, [x0]
    79d0:	mov	w0, #0x2                   	// #2
    79d4:	bl	8408 <grub_error>
    79d8:	b	7ad0 <grub_dl_load_core_noinit+0x730>
    79dc:	ldr	w0, [sp, #108]
    79e0:	b	797c <grub_dl_load_core_noinit+0x5dc>
    79e4:	adrp	x0, 0 <_start>
    79e8:	ldr	x0, [x0]
    79ec:	ldr	w0, [x0]
    79f0:	b	7ad0 <grub_dl_load_core_noinit+0x730>
    79f4:	adrp	x0, 0 <_start>
    79f8:	ldr	x1, [x0]
    79fc:	mov	x0, x24
    7a00:	bl	9954 <grub_strcmp>
    7a04:	cbnz	w0, 7a24 <grub_dl_load_core_noinit+0x684>
    7a08:	ldr	x0, [x22, #8]
    7a0c:	str	x0, [x20, #56]
    7a10:	b	7a24 <grub_dl_load_core_noinit+0x684>
    7a14:	ldrh	w1, [x22, #6]
    7a18:	mov	x0, x20
    7a1c:	bl	6f80 <grub_disk_get_size+0x30>
    7a20:	str	x0, [x22, #8]
    7a24:	add	w23, w23, #0x1
    7a28:	add	x22, x22, w25, uxtw
    7a2c:	ldr	w0, [sp, #104]
    7a30:	cmp	w0, w23
    7a34:	b.ls	7ad4 <grub_dl_load_core_noinit+0x734>  // b.plast
    7a38:	ldrb	w0, [x22, #4]
    7a3c:	and	w2, w0, #0xf
    7a40:	lsr	w27, w0, #4
    7a44:	ldr	w1, [x22]
    7a48:	add	x3, x28, w1, uxtw
    7a4c:	add	x24, x19, x3
    7a50:	cmp	w2, #0x3
    7a54:	b.eq	7a14 <grub_dl_load_core_noinit+0x674>  // b.none
    7a58:	tst	w0, #0xc
    7a5c:	b.ne	78fc <grub_dl_load_core_noinit+0x55c>  // b.any
    7a60:	tst	w0, #0xe
    7a64:	b.eq	790c <grub_dl_load_core_noinit+0x56c>  // b.none
    7a68:	cmp	w2, #0x2
    7a6c:	b.ne	7ac0 <grub_dl_load_core_noinit+0x720>  // b.any
    7a70:	ldrh	w1, [x22, #6]
    7a74:	mov	x0, x20
    7a78:	bl	6f80 <grub_disk_get_size+0x30>
    7a7c:	ldr	x1, [x22, #8]
    7a80:	add	x1, x0, x1
    7a84:	str	x1, [x22, #8]
    7a88:	cbz	w27, 7aa0 <grub_dl_load_core_noinit+0x700>
    7a8c:	mov	x3, x20
    7a90:	mov	w2, #0x1                   	// #1
    7a94:	mov	x0, x24
    7a98:	bl	70c0 <grub_dl_register_symbol>
    7a9c:	cbnz	w0, 79e4 <grub_dl_load_core_noinit+0x644>
    7aa0:	adrp	x0, 0 <_start>
    7aa4:	ldr	x1, [x0]
    7aa8:	mov	x0, x24
    7aac:	bl	9954 <grub_strcmp>
    7ab0:	cbnz	w0, 79f4 <grub_dl_load_core_noinit+0x654>
    7ab4:	ldr	x0, [x22, #8]
    7ab8:	str	x0, [x20, #48]
    7abc:	b	7a24 <grub_dl_load_core_noinit+0x684>
    7ac0:	adrp	x0, 0 <_start>
    7ac4:	ldr	x1, [x0]
    7ac8:	mov	w0, #0x2                   	// #2
    7acc:	bl	8408 <grub_error>
    7ad0:	cbnz	w0, 7ba8 <grub_dl_load_core_noinit+0x808>
    7ad4:	ldr	x22, [x19, #40]
    7ad8:	add	x22, x19, x22
    7adc:	ldrh	w0, [x19, #60]
    7ae0:	cbnz	w0, 7c20 <grub_dl_load_core_noinit+0x880>
    7ae4:	adrp	x0, 0 <_start>
    7ae8:	ldr	x21, [x0]
    7aec:	adrp	x0, 0 <_start>
    7af0:	ldr	x19, [x0]
    7af4:	ldr	x5, [x20, #96]
    7af8:	ldr	x4, [x20, #104]
    7afc:	adrp	x0, 0 <_start>
    7b00:	ldr	x3, [x0]
    7b04:	mov	x2, x21
    7b08:	mov	w1, #0x22b                 	// #555
    7b0c:	mov	x0, x19
    7b10:	bl	aca0 <grub_real_dprintf>
    7b14:	ldr	x1, [x20, #104]
    7b18:	ldr	x0, [x20, #96]
    7b1c:	bl	1e8 <grub_arch_sync_caches>
    7b20:	ldr	x4, [x20]
    7b24:	adrp	x0, 0 <_start>
    7b28:	ldr	x3, [x0]
    7b2c:	mov	x2, x21
    7b30:	mov	w1, #0x289                 	// #649
    7b34:	mov	x0, x19
    7b38:	bl	aca0 <grub_real_dprintf>
    7b3c:	ldr	x4, [x20, #48]
    7b40:	adrp	x0, 0 <_start>
    7b44:	ldr	x3, [x0]
    7b48:	mov	x2, x21
    7b4c:	mov	w1, #0x28a                 	// #650
    7b50:	mov	x0, x19
    7b54:	bl	aca0 <grub_real_dprintf>
    7b58:	mov	x0, x20
    7b5c:	bl	7040 <grub_dl_add>
    7b60:	cbnz	w0, 7bc8 <grub_dl_load_core_noinit+0x828>
    7b64:	ldp	x23, x24, [sp, #48]
    7b68:	ldp	x25, x26, [sp, #64]
    7b6c:	ldp	x27, x28, [sp, #80]
    7b70:	b	76ac <grub_dl_load_core_noinit+0x30c>
    7b74:	adrp	x0, 0 <_start>
    7b78:	ldr	x1, [x0]
    7b7c:	mov	w0, #0x2                   	// #2
    7b80:	bl	8408 <grub_error>
    7b84:	cbz	w0, 7ae4 <grub_dl_load_core_noinit+0x744>
    7b88:	ldp	x23, x24, [sp, #48]
    7b8c:	ldp	x25, x26, [sp, #64]
    7b90:	ldp	x27, x28, [sp, #80]
    7b94:	b	769c <grub_dl_load_core_noinit+0x2fc>
    7b98:	ldp	x23, x24, [sp, #48]
    7b9c:	ldp	x25, x26, [sp, #64]
    7ba0:	ldp	x27, x28, [sp, #80]
    7ba4:	b	769c <grub_dl_load_core_noinit+0x2fc>
    7ba8:	ldp	x23, x24, [sp, #48]
    7bac:	ldp	x25, x26, [sp, #64]
    7bb0:	ldp	x27, x28, [sp, #80]
    7bb4:	b	769c <grub_dl_load_core_noinit+0x2fc>
    7bb8:	ldp	x23, x24, [sp, #48]
    7bbc:	ldp	x25, x26, [sp, #64]
    7bc0:	ldp	x27, x28, [sp, #80]
    7bc4:	b	769c <grub_dl_load_core_noinit+0x2fc>
    7bc8:	mov	x0, x20
    7bcc:	bl	7260 <grub_dl_unload>
    7bd0:	mov	x20, #0x0                   	// #0
    7bd4:	ldp	x23, x24, [sp, #48]
    7bd8:	ldp	x25, x26, [sp, #64]
    7bdc:	ldp	x27, x28, [sp, #80]
    7be0:	b	76ac <grub_dl_load_core_noinit+0x30c>
    7be4:	mov	x20, #0x0                   	// #0
    7be8:	b	76ac <grub_dl_load_core_noinit+0x30c>
    7bec:	ldr	x0, [x20, #32]
    7bf0:	cbz	x0, 7b74 <grub_dl_load_core_noinit+0x7d4>
    7bf4:	mov	x2, x22
    7bf8:	mov	x1, x19
    7bfc:	mov	x0, x20
    7c00:	bl	3b0 <grub_arch_dl_relocate_symbols>
    7c04:	cbnz	w0, 7bb8 <grub_dl_load_core_noinit+0x818>
    7c08:	add	w21, w21, #0x1
    7c0c:	ldrh	w0, [x19, #58]
    7c10:	add	x22, x22, x0
    7c14:	ldrh	w0, [x19, #60]
    7c18:	cmp	w21, w0
    7c1c:	b.cs	7ae4 <grub_dl_load_core_noinit+0x744>  // b.hs, b.nlast
    7c20:	ldr	w0, [x22, #4]
    7c24:	cmp	w0, #0x9
    7c28:	ccmp	w0, #0x4, #0x4, ne  // ne = any
    7c2c:	b.ne	7c08 <grub_dl_load_core_noinit+0x868>  // b.any
    7c30:	ldr	x3, [x20, #24]
    7c34:	cbz	x3, 7c08 <grub_dl_load_core_noinit+0x868>
    7c38:	ldr	w1, [x22, #44]
    7c3c:	ldr	w0, [x3, #24]
    7c40:	cmp	w0, w1
    7c44:	b.eq	7bec <grub_dl_load_core_noinit+0x84c>  // b.none
    7c48:	ldr	x3, [x3]
    7c4c:	cbnz	x3, 7c3c <grub_dl_load_core_noinit+0x89c>
    7c50:	b	7c08 <grub_dl_load_core_noinit+0x868>
    7c54:	ldr	x0, [x26, #16]
    7c58:	str	x0, [x22, #8]
    7c5c:	ldr	w0, [x26, #24]
    7c60:	cbz	w0, 7a24 <grub_dl_load_core_noinit+0x684>
    7c64:	ubfiz	w0, w27, #4, #4
    7c68:	add	w0, w0, #0x2
    7c6c:	strb	w0, [x22, #4]
    7c70:	b	7a24 <grub_dl_load_core_noinit+0x684>
    7c74:	nop
	...

0000000000007d48 <grub_dl_load_core>:
    7d48:	stp	x29, x30, [sp, #-32]!
    7d4c:	mov	x29, sp
    7d50:	str	x19, [sp, #16]
    7d54:	bl	73a0 <grub_dl_load_core_noinit>
    7d58:	mov	x19, x0
    7d5c:	cbz	x0, 7d80 <grub_dl_load_core+0x38>
    7d60:	ldr	x1, [x0, #48]
    7d64:	cbz	x1, 7d6c <grub_dl_load_core+0x24>
    7d68:	blr	x1
    7d6c:	adrp	x0, 0 <_start>
    7d70:	ldr	x0, [x0]
    7d74:	ldr	x1, [x0]
    7d78:	str	x1, [x19, #112]
    7d7c:	str	x19, [x0]
    7d80:	mov	x0, x19
    7d84:	ldr	x19, [sp, #16]
    7d88:	ldp	x29, x30, [sp], #32
    7d8c:	ret
	...

0000000000007d98 <grub_dl_load_file>:
    7d98:	stp	x29, x30, [sp, #-48]!
    7d9c:	mov	x29, sp
    7da0:	stp	x19, x20, [sp, #16]
    7da4:	mov	w1, #0x1                   	// #1
    7da8:	bl	8900 <grub_file_open>
    7dac:	mov	x19, x0
    7db0:	cbz	x0, 7e18 <grub_dl_load_file+0x80>
    7db4:	str	x21, [sp, #32]
    7db8:	ldr	x21, [x0, #64]
    7dbc:	mov	x0, x21
    7dc0:	bl	5420 <grub_malloc>
    7dc4:	mov	x20, x0
    7dc8:	cbz	x0, 7e28 <grub_dl_load_file+0x90>
    7dcc:	mov	x2, x21
    7dd0:	mov	x1, x0
    7dd4:	mov	x0, x19
    7dd8:	bl	87a8 <grub_file_read>
    7ddc:	cmp	x0, w21, sxtw
    7de0:	b.ne	7e3c <grub_dl_load_file+0xa4>  // b.any
    7de4:	mov	x0, x19
    7de8:	bl	88a0 <grub_file_close>
    7dec:	mov	x1, x21
    7df0:	mov	x0, x20
    7df4:	bl	7d48 <grub_dl_load_core>
    7df8:	mov	x19, x0
    7dfc:	mov	x0, x20
    7e00:	bl	547c <grub_free>
    7e04:	cbz	x19, 7e58 <grub_dl_load_file+0xc0>
    7e08:	ldr	w0, [x19, #8]
    7e0c:	sub	w0, w0, #0x1
    7e10:	str	w0, [x19, #8]
    7e14:	ldr	x21, [sp, #32]
    7e18:	mov	x0, x19
    7e1c:	ldp	x19, x20, [sp, #16]
    7e20:	ldp	x29, x30, [sp], #48
    7e24:	ret
    7e28:	mov	x0, x19
    7e2c:	bl	88a0 <grub_file_close>
    7e30:	mov	x19, x20
    7e34:	ldr	x21, [sp, #32]
    7e38:	b	7e18 <grub_dl_load_file+0x80>
    7e3c:	mov	x0, x19
    7e40:	bl	88a0 <grub_file_close>
    7e44:	mov	x0, x20
    7e48:	bl	547c <grub_free>
    7e4c:	mov	x19, #0x0                   	// #0
    7e50:	ldr	x21, [sp, #32]
    7e54:	b	7e18 <grub_dl_load_file+0x80>
    7e58:	ldr	x21, [sp, #32]
    7e5c:	b	7e18 <grub_dl_load_file+0x80>

0000000000007e60 <grub_dl_load>:
    7e60:	stp	x29, x30, [sp, #-48]!
    7e64:	mov	x29, sp
    7e68:	stp	x19, x20, [sp, #16]
    7e6c:	str	x21, [sp, #32]
    7e70:	mov	x20, x0
    7e74:	adrp	x0, 0 <_start>
    7e78:	ldr	x0, [x0]
    7e7c:	bl	81d0 <grub_env_get>
    7e80:	mov	x21, x0
    7e84:	adrp	x0, 0 <_start>
    7e88:	ldr	x0, [x0]
    7e8c:	ldr	x19, [x0]
    7e90:	cbz	x19, 7eac <grub_dl_load+0x4c>
    7e94:	ldr	x1, [x19]
    7e98:	mov	x0, x20
    7e9c:	bl	9954 <grub_strcmp>
    7ea0:	cbz	w0, 7ef0 <grub_dl_load+0x90>
    7ea4:	ldr	x19, [x19, #112]
    7ea8:	cbnz	x19, 7e94 <grub_dl_load+0x34>
    7eac:	cbz	x21, 7f04 <grub_dl_load+0xa4>
    7eb0:	mov	x2, x20
    7eb4:	mov	x1, x21
    7eb8:	adrp	x0, 0 <_start>
    7ebc:	ldr	x0, [x0]
    7ec0:	bl	af08 <grub_xasprintf>
    7ec4:	mov	x21, x0
    7ec8:	cbz	x0, 7f38 <grub_dl_load+0xd8>
    7ecc:	bl	7d98 <grub_dl_load_file>
    7ed0:	mov	x19, x0
    7ed4:	mov	x0, x21
    7ed8:	bl	547c <grub_free>
    7edc:	cbz	x19, 7ef0 <grub_dl_load+0x90>
    7ee0:	mov	x1, x20
    7ee4:	ldr	x0, [x19]
    7ee8:	bl	9954 <grub_strcmp>
    7eec:	cbnz	w0, 7f24 <grub_dl_load+0xc4>
    7ef0:	mov	x0, x19
    7ef4:	ldp	x19, x20, [sp, #16]
    7ef8:	ldr	x21, [sp, #32]
    7efc:	ldp	x29, x30, [sp], #48
    7f00:	ret
    7f04:	adrp	x0, 0 <_start>
    7f08:	ldr	x2, [x0]
    7f0c:	adrp	x0, 0 <_start>
    7f10:	ldr	x1, [x0]
    7f14:	mov	w0, #0x5                   	// #5
    7f18:	bl	8408 <grub_error>
    7f1c:	mov	x19, x21
    7f20:	b	7ef0 <grub_dl_load+0x90>
    7f24:	adrp	x0, 0 <_start>
    7f28:	ldr	x1, [x0]
    7f2c:	mov	w0, #0x2                   	// #2
    7f30:	bl	8408 <grub_error>
    7f34:	b	7ef0 <grub_dl_load+0x90>
    7f38:	mov	x19, x0
    7f3c:	b	7ef0 <grub_dl_load+0x90>
	...

0000000000007f68 <grub_dl_unload_unneeded>:
    7f68:	stp	x29, x30, [sp, #-32]!
    7f6c:	mov	x29, sp
    7f70:	stp	x19, x20, [sp, #16]
    7f74:	adrp	x0, 0 <_start>
    7f78:	ldr	x0, [x0]
    7f7c:	ldr	x19, [x0]
    7f80:	cbz	x19, 7fac <grub_dl_unload_unneeded+0x44>
    7f84:	adrp	x20, 0 <_start>
    7f88:	b	7f98 <grub_dl_unload_unneeded+0x30>
    7f8c:	ldr	x0, [x20]
    7f90:	ldr	x19, [x0]
    7f94:	cbz	x19, 7fac <grub_dl_unload_unneeded+0x44>
    7f98:	mov	x0, x19
    7f9c:	bl	7260 <grub_dl_unload>
    7fa0:	cbnz	w0, 7f8c <grub_dl_unload_unneeded+0x24>
    7fa4:	ldr	x19, [x19, #112]
    7fa8:	b	7f94 <grub_dl_unload_unneeded+0x2c>
    7fac:	ldp	x19, x20, [sp, #16]
    7fb0:	ldp	x29, x30, [sp], #32
    7fb4:	ret
	...
    7fc0:	stp	x29, x30, [sp, #-32]!
    7fc4:	mov	x29, sp
    7fc8:	stp	x19, x20, [sp, #16]
    7fcc:	mov	x20, x0
    7fd0:	ldrb	w1, [x0]
    7fd4:	cbz	w1, 8044 <grub_dl_unload_unneeded+0xdc>
    7fd8:	mov	x3, x0
    7fdc:	mov	w2, #0x0                   	// #0
    7fe0:	add	w1, w1, w1, lsl #2
    7fe4:	add	w2, w2, w1
    7fe8:	ldrb	w1, [x3, #1]!
    7fec:	cbnz	w1, 7fe0 <grub_dl_unload_unneeded+0x78>
    7ff0:	adrp	x0, 0 <_start>
    7ff4:	ldr	x0, [x0]
    7ff8:	ldr	x1, [x0]
    7ffc:	mov	w0, #0xec4f                	// #60495
    8000:	movk	w0, #0x4ec4, lsl #16
    8004:	umull	x0, w2, w0
    8008:	lsr	x0, x0, #34
    800c:	mov	w3, #0xd                   	// #13
    8010:	msub	w2, w0, w3, w2
    8014:	ldr	x19, [x1, w2, sxtw #3]
    8018:	cbz	x19, 8034 <grub_dl_unload_unneeded+0xcc>
    801c:	mov	x1, x20
    8020:	ldr	x0, [x19]
    8024:	bl	9954 <grub_strcmp>
    8028:	cbz	w0, 8034 <grub_dl_unload_unneeded+0xcc>
    802c:	ldr	x19, [x19, #32]
    8030:	cbnz	x19, 801c <grub_dl_unload_unneeded+0xb4>
    8034:	mov	x0, x19
    8038:	ldp	x19, x20, [sp, #16]
    803c:	ldp	x29, x30, [sp], #32
    8040:	ret
    8044:	mov	w2, #0x0                   	// #0
    8048:	b	7ff0 <grub_dl_unload_unneeded+0x88>
    804c:	nop
	...

0000000000008058 <grub_env_set>:
    8058:	stp	x29, x30, [sp, #-48]!
    805c:	mov	x29, sp
    8060:	stp	x19, x20, [sp, #16]
    8064:	str	x21, [sp, #32]
    8068:	mov	x21, x0
    806c:	mov	x20, x1
    8070:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    8074:	cbz	x0, 80dc <grub_env_set+0x84>
    8078:	mov	x19, x0
    807c:	ldr	x21, [x0, #8]
    8080:	ldr	x2, [x0, #24]
    8084:	cbz	x2, 80b8 <grub_env_set+0x60>
    8088:	mov	x1, x20
    808c:	blr	x2
    8090:	str	x0, [x19, #8]
    8094:	ldr	x0, [x19, #8]
    8098:	cbz	x0, 80c8 <grub_env_set+0x70>
    809c:	mov	x0, x21
    80a0:	bl	547c <grub_free>
    80a4:	mov	w0, #0x0                   	// #0
    80a8:	ldp	x19, x20, [sp, #16]
    80ac:	ldr	x21, [sp, #32]
    80b0:	ldp	x29, x30, [sp], #48
    80b4:	ret
    80b8:	mov	x0, x20
    80bc:	bl	9c18 <grub_strdup>
    80c0:	str	x0, [x19, #8]
    80c4:	b	8094 <grub_env_set+0x3c>
    80c8:	str	x21, [x19, #8]
    80cc:	adrp	x0, 0 <_start>
    80d0:	ldr	x0, [x0]
    80d4:	ldr	w0, [x0]
    80d8:	b	80a8 <grub_env_set+0x50>
    80dc:	mov	x0, #0x40                  	// #64
    80e0:	bl	543c <grub_zalloc>
    80e4:	mov	x19, x0
    80e8:	cbz	x0, 817c <grub_env_set+0x124>
    80ec:	mov	x0, x21
    80f0:	bl	9c18 <grub_strdup>
    80f4:	str	x0, [x19]
    80f8:	cbz	x0, 8194 <grub_env_set+0x13c>
    80fc:	mov	x0, x20
    8100:	bl	9c18 <grub_strdup>
    8104:	str	x0, [x19, #8]
    8108:	cbz	x0, 8194 <grub_env_set+0x13c>
    810c:	adrp	x0, 0 <_start>
    8110:	ldr	x0, [x0]
    8114:	ldr	x3, [x0]
    8118:	ldr	x2, [x19]
    811c:	ldrb	w1, [x2]
    8120:	cbz	w1, 818c <grub_env_set+0x134>
    8124:	mov	w0, #0x0                   	// #0
    8128:	add	w1, w1, w1, lsl #2
    812c:	add	w0, w0, w1
    8130:	ldrb	w1, [x2, #1]!
    8134:	cbnz	w1, 8128 <grub_env_set+0xd0>
    8138:	mov	w1, #0xec4f                	// #60495
    813c:	movk	w1, #0x4ec4, lsl #16
    8140:	umull	x1, w0, w1
    8144:	lsr	x1, x1, #34
    8148:	mov	w2, #0xd                   	// #13
    814c:	msub	w0, w1, w2, w0
    8150:	sxtw	x1, w0
    8154:	add	x0, x3, w0, sxtw #3
    8158:	str	x0, [x19, #40]
    815c:	ldr	x0, [x3, x1, lsl #3]
    8160:	str	x0, [x19, #32]
    8164:	cbz	x0, 8170 <grub_env_set+0x118>
    8168:	add	x2, x19, #0x20
    816c:	str	x2, [x0, #40]
    8170:	str	x19, [x3, x1, lsl #3]
    8174:	mov	w0, #0x0                   	// #0
    8178:	b	80a8 <grub_env_set+0x50>
    817c:	adrp	x0, 0 <_start>
    8180:	ldr	x0, [x0]
    8184:	ldr	w0, [x0]
    8188:	b	80a8 <grub_env_set+0x50>
    818c:	mov	w0, #0x0                   	// #0
    8190:	b	8138 <grub_env_set+0xe0>
    8194:	ldr	x0, [x19]
    8198:	bl	547c <grub_free>
    819c:	ldr	x0, [x19, #8]
    81a0:	bl	547c <grub_free>
    81a4:	mov	x0, x19
    81a8:	bl	547c <grub_free>
    81ac:	adrp	x0, 0 <_start>
    81b0:	ldr	x0, [x0]
    81b4:	ldr	w0, [x0]
    81b8:	b	80a8 <grub_env_set+0x50>
    81bc:	nop
	...

00000000000081d0 <grub_env_get>:
    81d0:	stp	x29, x30, [sp, #-16]!
    81d4:	mov	x29, sp
    81d8:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    81dc:	cbz	x0, 81f0 <grub_env_get+0x20>
    81e0:	ldr	x2, [x0, #16]
    81e4:	cbz	x2, 81f8 <grub_env_get+0x28>
    81e8:	ldr	x1, [x0, #8]
    81ec:	blr	x2
    81f0:	ldp	x29, x30, [sp], #16
    81f4:	ret
    81f8:	ldr	x0, [x0, #8]
    81fc:	b	81f0 <grub_env_get+0x20>

0000000000008200 <grub_env_unset>:
    8200:	stp	x29, x30, [sp, #-32]!
    8204:	mov	x29, sp
    8208:	stp	x19, x20, [sp, #16]
    820c:	mov	x20, x0
    8210:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    8214:	cbz	x0, 823c <grub_env_unset+0x3c>
    8218:	mov	x19, x0
    821c:	ldr	x0, [x0, #16]
    8220:	cbnz	x0, 822c <grub_env_unset+0x2c>
    8224:	ldr	x0, [x19, #24]
    8228:	cbz	x0, 8248 <grub_env_unset+0x48>
    822c:	adrp	x0, 0 <_start>
    8230:	ldr	x1, [x0]
    8234:	mov	x0, x20
    8238:	bl	8058 <grub_env_set>
    823c:	ldp	x19, x20, [sp, #16]
    8240:	ldp	x29, x30, [sp], #32
    8244:	ret
    8248:	ldr	x1, [x19, #40]
    824c:	ldr	x0, [x19, #32]
    8250:	str	x0, [x1]
    8254:	cbz	x0, 8260 <grub_env_unset+0x60>
    8258:	ldr	x1, [x19, #40]
    825c:	str	x1, [x0, #40]
    8260:	ldr	x0, [x19]
    8264:	bl	547c <grub_free>
    8268:	ldr	x0, [x19, #8]
    826c:	bl	547c <grub_free>
    8270:	mov	x0, x19
    8274:	bl	547c <grub_free>
    8278:	b	823c <grub_env_unset+0x3c>
    827c:	nop
	...

0000000000008288 <grub_env_update_get_sorted>:
    8288:	stp	x29, x30, [sp, #-64]!
    828c:	mov	x29, sp
    8290:	stp	x19, x20, [sp, #16]
    8294:	stp	x21, x22, [sp, #32]
    8298:	str	xzr, [sp, #56]
    829c:	mov	w21, #0x0                   	// #0
    82a0:	adrp	x22, 0 <_start>
    82a4:	b	8300 <grub_env_update_get_sorted+0x78>
    82a8:	add	x19, sp, #0x38
    82ac:	ldr	x0, [x19]
    82b0:	str	x0, [x20, #48]
    82b4:	str	x20, [x19]
    82b8:	ldr	x20, [x20, #32]
    82bc:	cbz	x20, 82f4 <grub_env_update_get_sorted+0x6c>
    82c0:	ldr	x0, [sp, #56]
    82c4:	cbz	x0, 82a8 <grub_env_update_get_sorted+0x20>
    82c8:	add	x19, sp, #0x38
    82cc:	ldr	x1, [x20]
    82d0:	ldr	x0, [x0]
    82d4:	bl	9954 <grub_strcmp>
    82d8:	cmp	w0, #0x0
    82dc:	b.gt	82ac <grub_env_update_get_sorted+0x24>
    82e0:	ldr	x0, [x19]
    82e4:	add	x19, x0, #0x30
    82e8:	ldr	x0, [x0, #48]
    82ec:	cbnz	x0, 82cc <grub_env_update_get_sorted+0x44>
    82f0:	b	82ac <grub_env_update_get_sorted+0x24>
    82f4:	add	w21, w21, #0x1
    82f8:	cmp	w21, #0xd
    82fc:	b.eq	8314 <grub_env_update_get_sorted+0x8c>  // b.none
    8300:	ldr	x0, [x22]
    8304:	ldr	x0, [x0]
    8308:	ldr	x20, [x0, w21, sxtw #3]
    830c:	cbnz	x20, 82c0 <grub_env_update_get_sorted+0x38>
    8310:	b	82f4 <grub_env_update_get_sorted+0x6c>
    8314:	ldr	x0, [sp, #56]
    8318:	ldp	x19, x20, [sp, #16]
    831c:	ldp	x21, x22, [sp, #32]
    8320:	ldp	x29, x30, [sp], #64
    8324:	ret
	...

0000000000008330 <grub_register_variable_hook>:
    8330:	stp	x29, x30, [sp, #-48]!
    8334:	mov	x29, sp
    8338:	stp	x19, x20, [sp, #16]
    833c:	str	x21, [sp, #32]
    8340:	mov	x21, x0
    8344:	mov	x20, x1
    8348:	mov	x19, x2
    834c:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    8350:	cbz	x0, 8370 <grub_register_variable_hook+0x40>
    8354:	str	x20, [x0, #16]
    8358:	str	x19, [x0, #24]
    835c:	mov	w0, #0x0                   	// #0
    8360:	ldp	x19, x20, [sp, #16]
    8364:	ldr	x21, [sp, #32]
    8368:	ldp	x29, x30, [sp], #48
    836c:	ret
    8370:	adrp	x0, 0 <_start>
    8374:	ldr	x1, [x0]
    8378:	mov	x0, x21
    837c:	bl	8058 <grub_env_set>
    8380:	cbz	w0, 8394 <grub_register_variable_hook+0x64>
    8384:	adrp	x0, 0 <_start>
    8388:	ldr	x0, [x0]
    838c:	ldr	w0, [x0]
    8390:	b	8360 <grub_register_variable_hook+0x30>
    8394:	mov	x0, x21
    8398:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    839c:	b	8354 <grub_register_variable_hook+0x24>
	...

00000000000083b0 <grub_env_export>:
    83b0:	stp	x29, x30, [sp, #-32]!
    83b4:	mov	x29, sp
    83b8:	str	x19, [sp, #16]
    83bc:	mov	x19, x0
    83c0:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    83c4:	cbz	x0, 83e0 <grub_env_export+0x30>
    83c8:	mov	w1, #0x1                   	// #1
    83cc:	str	w1, [x0, #56]
    83d0:	mov	w0, #0x0                   	// #0
    83d4:	ldr	x19, [sp, #16]
    83d8:	ldp	x29, x30, [sp], #32
    83dc:	ret
    83e0:	adrp	x0, 0 <_start>
    83e4:	ldr	x1, [x0]
    83e8:	mov	x0, x19
    83ec:	bl	8058 <grub_env_set>
    83f0:	cbnz	w0, 83d4 <grub_env_export+0x24>
    83f4:	mov	x0, x19
    83f8:	bl	7fc0 <grub_dl_unload_unneeded+0x58>
    83fc:	b	83c8 <grub_env_export+0x18>
	...

0000000000008408 <grub_error>:
    8408:	stp	x29, x30, [sp, #-144]!
    840c:	mov	x29, sp
    8410:	str	x19, [sp, #16]
    8414:	mov	w19, w0
    8418:	mov	x0, x1
    841c:	str	x2, [sp, #96]
    8420:	str	x3, [sp, #104]
    8424:	str	x4, [sp, #112]
    8428:	str	x5, [sp, #120]
    842c:	str	x6, [sp, #128]
    8430:	str	x7, [sp, #136]
    8434:	adrp	x1, 0 <_start>
    8438:	ldr	x1, [x1]
    843c:	str	w19, [x1]
    8440:	add	x1, sp, #0x90
    8444:	str	x1, [sp, #64]
    8448:	str	x1, [sp, #72]
    844c:	add	x1, sp, #0x60
    8450:	str	x1, [sp, #80]
    8454:	mov	w1, #0xffffffd0            	// #-48
    8458:	str	w1, [sp, #88]
    845c:	str	wzr, [sp, #92]
    8460:	adrp	x1, 0 <_start>
    8464:	ldr	x1, [x1]
    8468:	ldr	x2, [x1]
    846c:	blr	x2
    8470:	ldp	x2, x3, [sp, #64]
    8474:	stp	x2, x3, [sp, #32]
    8478:	ldp	x2, x3, [sp, #80]
    847c:	stp	x2, x3, [sp, #48]
    8480:	add	x3, sp, #0x20
    8484:	mov	x2, x0
    8488:	mov	x1, #0x100                 	// #256
    848c:	adrp	x0, 0 <_start>
    8490:	ldr	x0, [x0]
    8494:	bl	ad90 <grub_vsnprintf>
    8498:	mov	w0, w19
    849c:	ldr	x19, [sp, #16]
    84a0:	ldp	x29, x30, [sp], #144
    84a4:	ret
	...

00000000000084c0 <grub_error_push>:
    84c0:	adrp	x0, 0 <_start>
    84c4:	ldr	x0, [x0]
    84c8:	ldr	w1, [x0]
    84cc:	cmp	w1, #0x9
    84d0:	b.le	84f4 <grub_error_push+0x34>
    84d4:	adrp	x0, 0 <_start>
    84d8:	ldr	x0, [x0]
    84dc:	mov	w1, #0x1                   	// #1
    84e0:	str	w1, [x0, #2608]
    84e4:	adrp	x0, 0 <_start>
    84e8:	ldr	x0, [x0]
    84ec:	str	wzr, [x0]
    84f0:	ret
    84f4:	stp	x29, x30, [sp, #-32]!
    84f8:	mov	x29, sp
    84fc:	str	x19, [sp, #16]
    8500:	adrp	x0, 0 <_start>
    8504:	ldr	x19, [x0]
    8508:	add	x0, x19, #0x8
    850c:	sxtw	x2, w1
    8510:	sbfiz	x1, x1, #6, #32
    8514:	add	x3, x1, x2
    8518:	adrp	x4, 0 <_start>
    851c:	ldr	x4, [x4]
    8520:	ldr	w4, [x4]
    8524:	str	w4, [x0, x3, lsl #2]
    8528:	add	x0, x0, x3, lsl #2
    852c:	mov	x2, #0x100                 	// #256
    8530:	adrp	x1, 0 <_start>
    8534:	ldr	x1, [x1]
    8538:	add	x0, x0, #0x4
    853c:	bl	9854 <grub_memmove>
    8540:	ldr	w0, [x19]
    8544:	add	w0, w0, #0x1
    8548:	str	w0, [x19]
    854c:	adrp	x0, 0 <_start>
    8550:	ldr	x0, [x0]
    8554:	str	wzr, [x0]
    8558:	ldr	x19, [sp, #16]
    855c:	ldp	x29, x30, [sp], #32
    8560:	ret
    8564:	nop
	...

0000000000008580 <grub_error_pop>:
    8580:	adrp	x0, 0 <_start>
    8584:	ldr	x0, [x0]
    8588:	ldr	w0, [x0]
    858c:	cmp	w0, #0x0
    8590:	b.gt	85a8 <grub_error_pop+0x28>
    8594:	adrp	x0, 0 <_start>
    8598:	ldr	x0, [x0]
    859c:	str	wzr, [x0]
    85a0:	mov	w0, #0x0                   	// #0
    85a4:	ret
    85a8:	stp	x29, x30, [sp, #-16]!
    85ac:	mov	x29, sp
    85b0:	sub	w0, w0, #0x1
    85b4:	adrp	x1, 0 <_start>
    85b8:	ldr	x1, [x1]
    85bc:	str	w0, [x1], #8
    85c0:	adrp	x2, 0 <_start>
    85c4:	ldr	x3, [x2]
    85c8:	sxtw	x2, w0
    85cc:	sbfiz	x0, x0, #6, #32
    85d0:	add	x4, x0, x2
    85d4:	ldr	w4, [x1, x4, lsl #2]
    85d8:	str	w4, [x3]
    85dc:	add	x0, x0, x2
    85e0:	add	x1, x1, x0, lsl #2
    85e4:	mov	x2, #0x100                 	// #256
    85e8:	add	x1, x1, #0x4
    85ec:	adrp	x0, 0 <_start>
    85f0:	ldr	x0, [x0]
    85f4:	bl	9854 <grub_memmove>
    85f8:	mov	w0, #0x1                   	// #1
    85fc:	ldp	x29, x30, [sp], #16
    8600:	ret
    8604:	nop
	...

0000000000008620 <grub_print_error>:
    8620:	stp	x29, x30, [sp, #-64]!
    8624:	mov	x29, sp
    8628:	stp	x19, x20, [sp, #16]
    862c:	stp	x21, x22, [sp, #32]
    8630:	str	x23, [sp, #48]
    8634:	adrp	x19, 0 <_start>
    8638:	adrp	x23, 0 <_start>
    863c:	adrp	x22, 0 <_start>
    8640:	adrp	x21, 0 <_start>
    8644:	adrp	x20, 0 <_start>
    8648:	b	867c <grub_print_error+0x5c>
    864c:	ldr	x0, [x22]
    8650:	ldr	x1, [x0]
    8654:	ldr	x0, [x23]
    8658:	blr	x1
    865c:	ldr	x1, [x21]
    8660:	bl	abc0 <grub_err_printf>
    8664:	ldr	x1, [x20]
    8668:	ldr	w0, [x1]
    866c:	add	w0, w0, #0x1
    8670:	str	w0, [x1]
    8674:	bl	8580 <grub_error_pop>
    8678:	cbz	w0, 868c <grub_print_error+0x6c>
    867c:	ldr	x0, [x19]
    8680:	ldr	w0, [x0]
    8684:	cbz	w0, 8674 <grub_print_error+0x54>
    8688:	b	864c <grub_print_error+0x2c>
    868c:	adrp	x0, 0 <_start>
    8690:	ldr	x0, [x0]
    8694:	ldr	w0, [x0, #2608]
    8698:	cbnz	w0, 86b0 <grub_print_error+0x90>
    869c:	ldp	x19, x20, [sp, #16]
    86a0:	ldp	x21, x22, [sp, #32]
    86a4:	ldr	x23, [sp, #48]
    86a8:	ldp	x29, x30, [sp], #64
    86ac:	ret
    86b0:	adrp	x0, 0 <_start>
    86b4:	ldr	x0, [x0]
    86b8:	bl	abc0 <grub_err_printf>
    86bc:	adrp	x0, 0 <_start>
    86c0:	ldr	x0, [x0]
    86c4:	str	wzr, [x0, #2608]
    86c8:	b	869c <grub_print_error+0x7c>
    86cc:	nop
	...

0000000000008708 <grub_file_get_device_name>:
    8708:	stp	x29, x30, [sp, #-48]!
    870c:	mov	x29, sp
    8710:	stp	x19, x20, [sp, #16]
    8714:	mov	x20, x0
    8718:	ldrb	w0, [x0]
    871c:	mov	x19, #0x0                   	// #0
    8720:	cmp	w0, #0x28
    8724:	b.eq	8738 <grub_file_get_device_name+0x30>  // b.none
    8728:	mov	x0, x19
    872c:	ldp	x19, x20, [sp, #16]
    8730:	ldp	x29, x30, [sp], #48
    8734:	ret
    8738:	mov	w1, #0x29                  	// #41
    873c:	mov	x0, x20
    8740:	bl	99d0 <grub_strchr>
    8744:	mov	x19, x0
    8748:	cbz	x0, 8780 <grub_file_get_device_name+0x78>
    874c:	str	x21, [sp, #32]
    8750:	sub	x21, x0, x20
    8754:	mov	x0, x21
    8758:	bl	5420 <grub_malloc>
    875c:	mov	x19, x0
    8760:	cbz	x0, 8798 <grub_file_get_device_name+0x90>
    8764:	sub	x2, x21, #0x1
    8768:	add	x1, x20, #0x1
    876c:	bl	9854 <grub_memmove>
    8770:	add	x21, x19, x21
    8774:	sturb	wzr, [x21, #-1]
    8778:	ldr	x21, [sp, #32]
    877c:	b	8728 <grub_file_get_device_name+0x20>
    8780:	mov	w2, #0x29                  	// #41
    8784:	adrp	x0, 0 <_start>
    8788:	ldr	x1, [x0]
    878c:	mov	w0, #0x7                   	// #7
    8790:	bl	8408 <grub_error>
    8794:	b	8728 <grub_file_get_device_name+0x20>
    8798:	ldr	x21, [sp, #32]
    879c:	b	8728 <grub_file_get_device_name+0x20>
	...

00000000000087a8 <grub_file_read>:
    87a8:	stp	x29, x30, [sp, #-48]!
    87ac:	mov	x29, sp
    87b0:	ldr	x4, [x0, #24]
    87b4:	ldr	x3, [x0, #64]
    87b8:	cmp	x4, x3
    87bc:	b.hi	87f0 <grub_file_read+0x48>  // b.pmore
    87c0:	stp	x19, x20, [sp, #16]
    87c4:	mov	x19, x0
    87c8:	mov	x0, #0x0                   	// #0
    87cc:	cbz	x2, 8878 <grub_file_read+0xd0>
    87d0:	sub	x3, x3, x4
    87d4:	cmp	x3, x2
    87d8:	csel	x2, x3, x2, ls  // ls = plast
    87dc:	tbnz	x2, #63, 8808 <grub_file_read+0x60>
    87e0:	mov	x0, #0x0                   	// #0
    87e4:	cbnz	x2, 8854 <grub_file_read+0xac>
    87e8:	ldp	x19, x20, [sp, #16]
    87ec:	b	887c <grub_file_read+0xd4>
    87f0:	adrp	x0, 0 <_start>
    87f4:	ldr	x1, [x0]
    87f8:	mov	w0, #0xb                   	// #11
    87fc:	bl	8408 <grub_error>
    8800:	mov	x0, #0xffffffffffffffff    	// #-1
    8804:	b	887c <grub_file_read+0xd4>
    8808:	str	x21, [sp, #32]
    880c:	lsr	x2, x2, #1
    8810:	ldr	x20, [x19, #88]
    8814:	ldr	x21, [x19, #96]
    8818:	cbz	x20, 885c <grub_file_read+0xb4>
    881c:	ldr	x0, [x19, #16]
    8820:	ldr	x3, [x0, #40]
    8824:	mov	x0, x19
    8828:	blr	x3
    882c:	str	x20, [x19, #88]
    8830:	str	x21, [x19, #96]
    8834:	cmp	x0, #0x0
    8838:	b.le	8884 <grub_file_read+0xdc>
    883c:	ldr	x1, [x19, #24]
    8840:	add	x1, x1, x0
    8844:	str	x1, [x19, #24]
    8848:	ldp	x19, x20, [sp, #16]
    884c:	ldr	x21, [sp, #32]
    8850:	b	887c <grub_file_read+0xd4>
    8854:	str	x21, [sp, #32]
    8858:	b	8810 <grub_file_read+0x68>
    885c:	adrp	x0, 0 <_start>
    8860:	ldr	x0, [x0]
    8864:	ldr	x0, [x0]
    8868:	str	x0, [x19, #88]
    886c:	str	x19, [x19, #96]
    8870:	str	x4, [x19, #32]
    8874:	b	881c <grub_file_read+0x74>
    8878:	ldp	x19, x20, [sp, #16]
    887c:	ldp	x29, x30, [sp], #48
    8880:	ret
    8884:	ldp	x19, x20, [sp, #16]
    8888:	ldr	x21, [sp, #32]
    888c:	b	887c <grub_file_read+0xd4>
	...

00000000000088a0 <grub_file_close>:
    88a0:	stp	x29, x30, [sp, #-32]!
    88a4:	mov	x29, sp
    88a8:	str	x19, [sp, #16]
    88ac:	mov	x19, x0
    88b0:	ldr	x0, [x0, #16]
    88b4:	ldr	x1, [x0, #48]
    88b8:	cbz	x1, 88c4 <grub_file_close+0x24>
    88bc:	mov	x0, x19
    88c0:	blr	x1
    88c4:	ldr	x0, [x19, #8]
    88c8:	cbz	x0, 88d0 <grub_file_close+0x30>
    88cc:	bl	60e8 <grub_device_close>
    88d0:	ldr	x0, [x19]
    88d4:	bl	547c <grub_free>
    88d8:	mov	x0, x19
    88dc:	bl	547c <grub_free>
    88e0:	adrp	x0, 0 <_start>
    88e4:	ldr	x0, [x0]
    88e8:	ldr	w0, [x0]
    88ec:	ldr	x19, [sp, #16]
    88f0:	ldp	x29, x30, [sp], #32
    88f4:	ret
	...

0000000000008900 <grub_file_open>:
    8900:	stp	x29, x30, [sp, #-80]!
    8904:	mov	x29, sp
    8908:	stp	x19, x20, [sp, #16]
    890c:	stp	x21, x22, [sp, #32]
    8910:	stp	x23, x24, [sp, #48]
    8914:	mov	x22, x0
    8918:	mov	w23, w1
    891c:	bl	8708 <grub_file_get_device_name>
    8920:	mov	x19, x0
    8924:	adrp	x0, 0 <_start>
    8928:	ldr	x0, [x0]
    892c:	ldr	w0, [x0]
    8930:	cbnz	w0, 8ab4 <grub_file_open+0x1b4>
    8934:	ldrb	w0, [x22]
    8938:	mov	x21, x22
    893c:	cmp	w0, #0x28
    8940:	b.eq	89d8 <grub_file_open+0xd8>  // b.none
    8944:	mov	x0, x19
    8948:	bl	5fe8 <grub_device_open>
    894c:	mov	x20, x0
    8950:	mov	x0, x19
    8954:	bl	547c <grub_free>
    8958:	cbz	x20, 8a0c <grub_file_open+0x10c>
    895c:	mov	x0, #0x68                  	// #104
    8960:	bl	543c <grub_zalloc>
    8964:	mov	x19, x0
    8968:	cbz	x0, 8a00 <grub_file_open+0x100>
    896c:	str	x20, [x0, #8]
    8970:	ldr	x0, [x20]
    8974:	cbz	x0, 89f0 <grub_file_open+0xf0>
    8978:	ldrb	w0, [x21]
    897c:	cmp	w0, #0x2f
    8980:	b.eq	89f0 <grub_file_open+0xf0>  // b.none
    8984:	adrp	x0, 0 <_start>
    8988:	ldr	x0, [x0]
    898c:	str	x0, [x19, #16]
    8990:	ldr	x0, [x19, #16]
    8994:	ldr	x2, [x0, #32]
    8998:	mov	x1, x21
    899c:	mov	x0, x19
    89a0:	blr	x2
    89a4:	cbnz	w0, 8a00 <grub_file_open+0x100>
    89a8:	str	x25, [sp, #64]
    89ac:	mov	x0, x22
    89b0:	bl	9c18 <grub_strdup>
    89b4:	str	x0, [x19]
    89b8:	adrp	x0, 0 <_start>
    89bc:	ldr	x0, [x0]
    89c0:	str	wzr, [x0]
    89c4:	mov	x21, #0x1                   	// #1
    89c8:	mov	x0, #0x0                   	// #0
    89cc:	adrp	x24, 0 <_start>
    89d0:	adrp	x25, 0 <_start>
    89d4:	b	8a68 <grub_file_open+0x168>
    89d8:	mov	w1, #0x29                  	// #41
    89dc:	mov	x0, x22
    89e0:	bl	99d0 <grub_strchr>
    89e4:	cmp	x0, #0x0
    89e8:	csinc	x21, x22, x0, eq  // eq = none
    89ec:	b	8944 <grub_file_open+0x44>
    89f0:	mov	x0, x20
    89f4:	bl	8e20 <grub_fs_probe>
    89f8:	str	x0, [x19, #16]
    89fc:	cbnz	x0, 8990 <grub_file_open+0x90>
    8a00:	mov	x0, x20
    8a04:	bl	60e8 <grub_device_close>
    8a08:	mov	x20, x19
    8a0c:	mov	x0, x20
    8a10:	bl	547c <grub_free>
    8a14:	mov	x19, #0x0                   	// #0
    8a18:	mov	x0, x19
    8a1c:	ldp	x19, x20, [sp, #16]
    8a20:	ldp	x21, x22, [sp, #32]
    8a24:	ldp	x23, x24, [sp, #48]
    8a28:	ldp	x29, x30, [sp], #80
    8a2c:	ret
    8a30:	mov	x0, x22
    8a34:	bl	9c18 <grub_strdup>
    8a38:	str	x0, [x20]
    8a3c:	ldr	x0, [x25]
    8a40:	str	wzr, [x0]
    8a44:	mov	x0, x19
    8a48:	mov	x19, x20
    8a4c:	cmp	x19, #0x0
    8a50:	cset	w2, ne  // ne = any
    8a54:	cmp	w21, #0x3
    8a58:	cset	w1, ls  // ls = plast
    8a5c:	add	x21, x21, #0x1
    8a60:	tst	w2, w1
    8a64:	b.eq	8a9c <grub_file_open+0x19c>  // b.none
    8a68:	ldr	x1, [x24]
    8a6c:	ldr	x2, [x1, x21, lsl #3]
    8a70:	cbz	x2, 8a4c <grub_file_open+0x14c>
    8a74:	mov	w1, w23
    8a78:	mov	x0, x19
    8a7c:	blr	x2
    8a80:	mov	x20, x0
    8a84:	cmp	x0, #0x0
    8a88:	ccmp	x0, x19, #0x4, ne  // ne = any
    8a8c:	b.ne	8a30 <grub_file_open+0x130>  // b.any
    8a90:	mov	x0, x19
    8a94:	mov	x19, x20
    8a98:	b	8a4c <grub_file_open+0x14c>
    8a9c:	cbz	x19, 8aa8 <grub_file_open+0x1a8>
    8aa0:	ldr	x25, [sp, #64]
    8aa4:	b	8a18 <grub_file_open+0x118>
    8aa8:	bl	88a0 <grub_file_close>
    8aac:	ldr	x25, [sp, #64]
    8ab0:	b	8a18 <grub_file_open+0x118>
    8ab4:	mov	x20, #0x0                   	// #0
    8ab8:	b	8a0c <grub_file_open+0x10c>
    8abc:	nop
	...

0000000000008ad8 <grub_file_seek>:
    8ad8:	mov	x2, x0
    8adc:	ldr	x0, [x0, #64]
    8ae0:	cmp	x0, x1
    8ae4:	b.cc	8af4 <grub_file_seek+0x1c>  // b.lo, b.ul, b.last
    8ae8:	ldr	x0, [x2, #24]
    8aec:	str	x1, [x2, #24]
    8af0:	ret
    8af4:	stp	x29, x30, [sp, #-16]!
    8af8:	mov	x29, sp
    8afc:	adrp	x0, 0 <_start>
    8b00:	ldr	x1, [x0]
    8b04:	mov	w0, #0xb                   	// #11
    8b08:	bl	8408 <grub_error>
    8b0c:	mov	x0, #0xffffffffffffffff    	// #-1
    8b10:	ldp	x29, x30, [sp], #16
    8b14:	ret
	...
    8b20:	mov	w0, #0x1                   	// #1
    8b24:	ret
    8b28:	stp	x29, x30, [sp, #-80]!
    8b2c:	mov	x29, sp
    8b30:	stp	x19, x20, [sp, #16]
    8b34:	stp	x21, x22, [sp, #32]
    8b38:	stp	x23, x24, [sp, #48]
    8b3c:	ldr	x19, [x0, #24]
    8b40:	ldr	x22, [x0, #64]
    8b44:	sub	x22, x22, x19
    8b48:	cmp	x22, x2
    8b4c:	csel	x22, x22, x2, ls  // ls = plast
    8b50:	ldr	x21, [x0, #80]
    8b54:	ldr	x2, [x21, #8]
    8b58:	cmp	x22, #0x0
    8b5c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    8b60:	b.eq	8c14 <grub_file_seek+0x13c>  // b.none
    8b64:	stp	x25, x26, [sp, #64]
    8b68:	mov	x24, x0
    8b6c:	mov	x25, x1
    8b70:	lsr	x20, x19, #9
    8b74:	and	x26, x19, #0x1ff
    8b78:	mov	x23, #0x0                   	// #0
    8b7c:	b	8b98 <grub_file_seek+0xc0>
    8b80:	sub	x20, x20, x2
    8b84:	add	x21, x21, #0x10
    8b88:	ldr	x2, [x21, #8]
    8b8c:	cmp	x22, #0x0
    8b90:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    8b94:	b.eq	8bf8 <grub_file_seek+0x120>  // b.none
    8b98:	cmp	x2, x20
    8b9c:	b.ls	8b80 <grub_file_seek+0xa8>  // b.plast
    8ba0:	sub	x2, x2, x20
    8ba4:	add	x0, x22, x26
    8ba8:	add	x0, x0, #0x1ff
    8bac:	lsl	x19, x2, #9
    8bb0:	sub	x19, x19, x26
    8bb4:	cmp	x2, x0, lsr #9
    8bb8:	csel	x19, x19, x22, cc  // cc = lo, ul, last
    8bbc:	ldr	x1, [x21]
    8bc0:	ldr	x0, [x24, #8]
    8bc4:	mov	x4, x25
    8bc8:	mov	x3, x19
    8bcc:	mov	x2, x26
    8bd0:	add	x1, x20, x1
    8bd4:	ldr	x0, [x0]
    8bd8:	bl	6c00 <grub_disk_read>
    8bdc:	cbnz	w0, 8c1c <grub_file_seek+0x144>
    8be0:	add	x23, x23, x19
    8be4:	sub	x22, x22, x19
    8be8:	add	x19, x19, x26
    8bec:	sub	x20, x20, x19, lsr #9
    8bf0:	and	x26, x19, #0x1ff
    8bf4:	b	8b84 <grub_file_seek+0xac>
    8bf8:	ldp	x25, x26, [sp, #64]
    8bfc:	mov	x0, x23
    8c00:	ldp	x19, x20, [sp, #16]
    8c04:	ldp	x21, x22, [sp, #32]
    8c08:	ldp	x23, x24, [sp, #48]
    8c0c:	ldp	x29, x30, [sp], #80
    8c10:	ret
    8c14:	mov	x23, #0x0                   	// #0
    8c18:	b	8bfc <grub_file_seek+0x124>
    8c1c:	mov	x23, #0xffffffffffffffff    	// #-1
    8c20:	ldp	x25, x26, [sp, #64]
    8c24:	b	8bfc <grub_file_seek+0x124>
    8c28:	stp	x29, x30, [sp, #-96]!
    8c2c:	mov	x29, sp
    8c30:	stp	x19, x20, [sp, #16]
    8c34:	stp	x21, x22, [sp, #32]
    8c38:	stp	x23, x24, [sp, #48]
    8c3c:	stp	x25, x26, [sp, #64]
    8c40:	mov	x20, x0
    8c44:	mov	x22, x1
    8c48:	str	x1, [sp, #88]
    8c4c:	ldr	x0, [x0, #8]
    8c50:	ldr	x21, [x0]
    8c54:	mov	w23, #0x0                   	// #0
    8c58:	mov	w24, #0x2c                  	// #44
    8c5c:	add	w19, w23, #0x1
    8c60:	mov	w1, w24
    8c64:	ldr	x0, [sp, #88]
    8c68:	bl	99d0 <grub_strchr>
    8c6c:	str	x0, [sp, #88]
    8c70:	cbz	x0, 8dcc <grub_file_seek+0x2f4>
    8c74:	add	x0, x0, #0x1
    8c78:	str	x0, [sp, #88]
    8c7c:	mov	w23, w19
    8c80:	b	8c5c <grub_file_seek+0x184>
    8c84:	mov	x2, x22
    8c88:	adrp	x0, 0 <_start>
    8c8c:	ldr	x1, [x0]
    8c90:	mov	w0, #0x7                   	// #7
    8c94:	bl	8408 <grub_error>
    8c98:	b	8d78 <grub_file_seek+0x2a0>
    8c9c:	ldr	x0, [x26, #8]
    8ca0:	ldr	x1, [x26]
    8ca4:	add	x1, x0, x1
    8ca8:	ldr	x2, [x21, #16]
    8cac:	cmp	x2, x1
    8cb0:	b.cc	8da4 <grub_file_seek+0x2cc>  // b.lo, b.ul, b.last
    8cb4:	ldr	x1, [x20, #64]
    8cb8:	add	x0, x1, x0, lsl #9
    8cbc:	str	x0, [x20, #64]
    8cc0:	ldr	x0, [sp, #88]
    8cc4:	add	x0, x0, #0x1
    8cc8:	str	x0, [sp, #88]
    8ccc:	add	x19, x19, #0x10
    8cd0:	cmp	x19, x24
    8cd4:	b.eq	8db8 <grub_file_seek+0x2e0>  // b.none
    8cd8:	ldr	x0, [sp, #88]
    8cdc:	ldrb	w1, [x0]
    8ce0:	cmp	w1, #0x2b
    8ce4:	b.eq	8d14 <grub_file_seek+0x23c>  // b.none
    8ce8:	mov	w2, #0x0                   	// #0
    8cec:	add	x1, sp, #0x58
    8cf0:	bl	9d28 <grub_strtoull>
    8cf4:	str	x0, [x19]
    8cf8:	ldr	x0, [x23]
    8cfc:	ldr	w0, [x0]
    8d00:	cbnz	w0, 8c84 <grub_file_seek+0x1ac>
    8d04:	ldr	x0, [sp, #88]
    8d08:	ldrb	w0, [x0]
    8d0c:	cmp	w0, #0x2b
    8d10:	b.ne	8c84 <grub_file_seek+0x1ac>  // b.any
    8d14:	ldr	x0, [sp, #88]
    8d18:	add	x0, x0, #0x1
    8d1c:	str	x0, [sp, #88]
    8d20:	mov	w2, #0x0                   	// #0
    8d24:	add	x1, sp, #0x58
    8d28:	bl	a3e8 <grub_strtoul>
    8d2c:	mov	x26, x19
    8d30:	str	x0, [x19, #8]
    8d34:	ldr	x1, [x23]
    8d38:	ldr	w1, [x1]
    8d3c:	cmp	w1, #0x0
    8d40:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    8d44:	b.eq	8d64 <grub_file_seek+0x28c>  // b.none
    8d48:	ldr	x0, [sp, #88]
    8d4c:	ldrb	w0, [x0]
    8d50:	cmp	w0, #0x2c
    8d54:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    8d58:	b.eq	8c9c <grub_file_seek+0x1c4>  // b.none
    8d5c:	bl	9a0c <grub_isspace>
    8d60:	cbnz	w0, 8c9c <grub_file_seek+0x1c4>
    8d64:	mov	x2, x22
    8d68:	adrp	x0, 0 <_start>
    8d6c:	ldr	x1, [x0]
    8d70:	mov	w0, #0x7                   	// #7
    8d74:	bl	8408 <grub_error>
    8d78:	mov	x0, x25
    8d7c:	bl	547c <grub_free>
    8d80:	adrp	x0, 0 <_start>
    8d84:	ldr	x0, [x0]
    8d88:	ldr	w0, [x0]
    8d8c:	ldp	x19, x20, [sp, #16]
    8d90:	ldp	x21, x22, [sp, #32]
    8d94:	ldp	x23, x24, [sp, #48]
    8d98:	ldp	x25, x26, [sp, #64]
    8d9c:	ldp	x29, x30, [sp], #96
    8da0:	ret
    8da4:	adrp	x0, 0 <_start>
    8da8:	ldr	x1, [x0]
    8dac:	mov	w0, #0x7                   	// #7
    8db0:	bl	8408 <grub_error>
    8db4:	b	8d78 <grub_file_seek+0x2a0>
    8db8:	str	x25, [x20, #80]
    8dbc:	mov	w0, #0x0                   	// #0
    8dc0:	b	8d8c <grub_file_seek+0x2b4>
    8dc4:	mov	w0, #0x0                   	// #0
    8dc8:	b	8d8c <grub_file_seek+0x2b4>
    8dcc:	add	w0, w23, #0x2
    8dd0:	lsl	x0, x0, #4
    8dd4:	bl	543c <grub_zalloc>
    8dd8:	mov	x25, x0
    8ddc:	cbz	x0, 8dc4 <grub_file_seek+0x2ec>
    8de0:	str	xzr, [x20, #64]
    8de4:	str	x22, [sp, #88]
    8de8:	cbz	w19, 8db8 <grub_file_seek+0x2e0>
    8dec:	mov	x19, x25
    8df0:	add	x24, x25, #0x10
    8df4:	ubfiz	x23, x23, #4, #32
    8df8:	add	x24, x24, x23
    8dfc:	adrp	x23, 0 <_start>
    8e00:	b	8cd8 <grub_file_seek+0x200>
    8e04:	nop
	...

0000000000008e20 <grub_fs_probe>:
    8e20:	stp	x29, x30, [sp, #-80]!
    8e24:	mov	x29, sp
    8e28:	stp	x19, x20, [sp, #16]
    8e2c:	stp	x21, x22, [sp, #32]
    8e30:	mov	x22, x0
    8e34:	ldr	x0, [x0]
    8e38:	cbz	x0, 8fec <grub_fs_probe+0x1cc>
    8e3c:	stp	x23, x24, [sp, #48]
    8e40:	adrp	x0, 0 <_start>
    8e44:	ldr	x0, [x0]
    8e48:	ldr	x19, [x0]
    8e4c:	cbz	x19, 8f00 <grub_fs_probe+0xe0>
    8e50:	str	x25, [sp, #64]
    8e54:	adrp	x25, 0 <_start>
    8e58:	adrp	x21, 0 <_start>
    8e5c:	adrp	x20, 0 <_start>
    8e60:	mov	w24, #0x38                  	// #56
    8e64:	adrp	x23, 0 <_start>
    8e68:	ldr	x4, [x19, #16]
    8e6c:	ldr	x3, [x25]
    8e70:	ldr	x2, [x21]
    8e74:	mov	w1, w24
    8e78:	ldr	x0, [x20]
    8e7c:	bl	aca0 <grub_real_dprintf>
    8e80:	ldr	x4, [x19, #24]
    8e84:	mov	x3, #0x0                   	// #0
    8e88:	ldr	x2, [x23]
    8e8c:	adrp	x0, 0 <_start>
    8e90:	ldr	x1, [x0]
    8e94:	mov	x0, x22
    8e98:	blr	x4
    8e9c:	adrp	x0, 0 <_start>
    8ea0:	ldr	x0, [x0]
    8ea4:	ldr	w1, [x0]
    8ea8:	cbz	w1, 9044 <grub_fs_probe+0x224>
    8eac:	bl	84c0 <grub_error_push>
    8eb0:	ldr	x4, [x19, #16]
    8eb4:	adrp	x0, 0 <_start>
    8eb8:	ldr	x3, [x0]
    8ebc:	ldr	x2, [x21]
    8ec0:	mov	w1, #0x4e                  	// #78
    8ec4:	ldr	x0, [x20]
    8ec8:	bl	aca0 <grub_real_dprintf>
    8ecc:	bl	8580 <grub_error_pop>
    8ed0:	adrp	x0, 0 <_start>
    8ed4:	ldr	x0, [x0]
    8ed8:	ldr	w1, [x0]
    8edc:	and	w1, w1, #0xfffffffd
    8ee0:	cmp	w1, #0x9
    8ee4:	b.ne	9034 <grub_fs_probe+0x214>  // b.any
    8ee8:	adrp	x0, 0 <_start>
    8eec:	ldr	x0, [x0]
    8ef0:	str	wzr, [x0]
    8ef4:	ldr	x19, [x19]
    8ef8:	cbnz	x19, 8e68 <grub_fs_probe+0x48>
    8efc:	ldr	x25, [sp, #64]
    8f00:	adrp	x0, 0 <_start>
    8f04:	ldr	x0, [x0]
    8f08:	ldr	x0, [x0, #8]
    8f0c:	cbz	x0, 9024 <grub_fs_probe+0x204>
    8f10:	adrp	x0, 0 <_start>
    8f14:	ldr	x0, [x0]
    8f18:	ldr	w0, [x0, #16]
    8f1c:	cbnz	w0, 902c <grub_fs_probe+0x20c>
    8f20:	adrp	x0, 0 <_start>
    8f24:	ldr	x0, [x0]
    8f28:	mov	w1, #0x1                   	// #1
    8f2c:	str	w1, [x0, #16]
    8f30:	adrp	x20, 0 <_start>
    8f34:	adrp	x24, 0 <_start>
    8f38:	adrp	x23, 0 <_start>
    8f3c:	adrp	x21, 0 <_start>
    8f40:	b	8f68 <grub_fs_probe+0x148>
    8f44:	adrp	x0, 0 <_start>
    8f48:	ldr	x1, [x0]
    8f4c:	ldr	w0, [x1, #16]
    8f50:	sub	w0, w0, #0x1
    8f54:	str	w0, [x1, #16]
    8f58:	ldp	x23, x24, [sp, #48]
    8f5c:	b	9010 <grub_fs_probe+0x1f0>
    8f60:	ldr	x0, [x21]
    8f64:	str	wzr, [x0]
    8f68:	ldr	x0, [x20]
    8f6c:	ldr	x0, [x0, #8]
    8f70:	blr	x0
    8f74:	cbz	w0, 8fd0 <grub_fs_probe+0x1b0>
    8f78:	ldr	x0, [x20]
    8f7c:	ldr	x19, [x0]
    8f80:	ldr	x4, [x19, #24]
    8f84:	mov	x3, #0x0                   	// #0
    8f88:	ldr	x2, [x24]
    8f8c:	ldr	x1, [x23]
    8f90:	mov	x0, x22
    8f94:	blr	x4
    8f98:	ldr	x0, [x21]
    8f9c:	ldr	w0, [x0]
    8fa0:	cbz	w0, 8f44 <grub_fs_probe+0x124>
    8fa4:	and	w0, w0, #0xfffffffd
    8fa8:	cmp	w0, #0x9
    8fac:	b.eq	8f60 <grub_fs_probe+0x140>  // b.none
    8fb0:	adrp	x0, 0 <_start>
    8fb4:	ldr	x1, [x0]
    8fb8:	ldr	w0, [x1, #16]
    8fbc:	sub	w0, w0, #0x1
    8fc0:	str	w0, [x1, #16]
    8fc4:	mov	x19, #0x0                   	// #0
    8fc8:	ldp	x23, x24, [sp, #48]
    8fcc:	b	9010 <grub_fs_probe+0x1f0>
    8fd0:	adrp	x0, 0 <_start>
    8fd4:	ldr	x1, [x0]
    8fd8:	ldr	w0, [x1, #16]
    8fdc:	sub	w0, w0, #0x1
    8fe0:	str	w0, [x1, #16]
    8fe4:	ldp	x23, x24, [sp, #48]
    8fe8:	b	8ffc <grub_fs_probe+0x1dc>
    8fec:	ldr	x0, [x22, #8]
    8ff0:	cbz	x0, 8ffc <grub_fs_probe+0x1dc>
    8ff4:	ldr	x19, [x0, #56]
    8ff8:	cbnz	x19, 9010 <grub_fs_probe+0x1f0>
    8ffc:	adrp	x0, 0 <_start>
    9000:	ldr	x1, [x0]
    9004:	mov	w0, #0x8                   	// #8
    9008:	bl	8408 <grub_error>
    900c:	mov	x19, #0x0                   	// #0
    9010:	mov	x0, x19
    9014:	ldp	x19, x20, [sp, #16]
    9018:	ldp	x21, x22, [sp, #32]
    901c:	ldp	x29, x30, [sp], #80
    9020:	ret
    9024:	ldp	x23, x24, [sp, #48]
    9028:	b	8ffc <grub_fs_probe+0x1dc>
    902c:	ldp	x23, x24, [sp, #48]
    9030:	b	8ffc <grub_fs_probe+0x1dc>
    9034:	mov	x19, #0x0                   	// #0
    9038:	ldp	x23, x24, [sp, #48]
    903c:	ldr	x25, [sp, #64]
    9040:	b	9010 <grub_fs_probe+0x1f0>
    9044:	ldp	x23, x24, [sp, #48]
    9048:	ldr	x25, [sp, #64]
    904c:	b	9010 <grub_fs_probe+0x1f0>
	...

0000000000009098 <grub_named_list_find>:
    9098:	stp	x29, x30, [sp, #-32]!
    909c:	mov	x29, sp
    90a0:	stp	x19, x20, [sp, #16]
    90a4:	mov	x19, x0
    90a8:	mov	x20, x1
    90ac:	cbz	x0, 90d4 <grub_named_list_find+0x3c>
    90b0:	mov	x1, x20
    90b4:	ldr	x0, [x19, #16]
    90b8:	bl	9954 <grub_strcmp>
    90bc:	cbz	w0, 90d0 <grub_named_list_find+0x38>
    90c0:	ldr	x19, [x19]
    90c4:	cbnz	x19, 90b0 <grub_named_list_find+0x18>
    90c8:	mov	x0, x19
    90cc:	b	90d4 <grub_named_list_find+0x3c>
    90d0:	mov	x0, x19
    90d4:	ldp	x19, x20, [sp, #16]
    90d8:	ldp	x29, x30, [sp], #32
    90dc:	ret

00000000000090e0 <grub_list_push>:
    90e0:	str	x0, [x1, #8]
    90e4:	ldr	x2, [x0]
    90e8:	cbz	x2, 90f0 <grub_list_push+0x10>
    90ec:	str	x1, [x2, #8]
    90f0:	ldr	x2, [x0]
    90f4:	str	x2, [x1]
    90f8:	str	x1, [x0]
    90fc:	ret

0000000000009100 <grub_list_remove>:
    9100:	ldr	x1, [x0, #8]
    9104:	cbz	x1, 9110 <grub_list_remove+0x10>
    9108:	ldr	x2, [x0]
    910c:	str	x2, [x1]
    9110:	ldr	x1, [x0]
    9114:	cbz	x1, 9120 <grub_list_remove+0x20>
    9118:	ldr	x2, [x0, #8]
    911c:	str	x2, [x1, #8]
    9120:	str	xzr, [x0]
    9124:	str	xzr, [x0, #8]
    9128:	ret
    912c:	nop
    9130:	stp	x29, x30, [sp, #-32]!
    9134:	mov	x29, sp
    9138:	str	x19, [sp, #16]
    913c:	mov	x19, x1
    9140:	mov	x0, x1
    9144:	bl	9bf4 <grub_strlen>
    9148:	ldrb	w1, [x19]
    914c:	cmp	w1, #0x28
    9150:	b.ne	9164 <grub_list_remove+0x64>  // b.any
    9154:	add	x1, x19, x0
    9158:	ldurb	w1, [x1, #-1]
    915c:	cmp	w1, #0x29
    9160:	b.eq	9178 <grub_list_remove+0x78>  // b.none
    9164:	mov	x0, x19
    9168:	bl	9c18 <grub_strdup>
    916c:	ldr	x19, [sp, #16]
    9170:	ldp	x29, x30, [sp], #32
    9174:	ret
    9178:	sub	x1, x0, #0x2
    917c:	add	x0, x19, #0x1
    9180:	bl	9c54 <grub_strndup>
    9184:	b	916c <grub_list_remove+0x6c>

0000000000009188 <grub_modules_get_end>:
    9188:	adrp	x0, 0 <_start>
    918c:	ldr	x0, [x0]
    9190:	ldr	x0, [x0]
    9194:	cbz	x0, 91b4 <grub_modules_get_end+0x2c>
    9198:	ldr	w2, [x0]
    919c:	mov	w1, #0x696d                	// #26989
    91a0:	movk	w1, #0x676d, lsl #16
    91a4:	cmp	w2, w1
    91a8:	b.ne	91b4 <grub_modules_get_end+0x2c>  // b.any
    91ac:	ldr	x1, [x0, #16]
    91b0:	add	x0, x0, x1
    91b4:	ret
	...

00000000000091c0 <grub_main>:
    91c0:	stp	x29, x30, [sp, #-64]!
    91c4:	mov	x29, sp
    91c8:	stp	x19, x20, [sp, #16]
    91cc:	stp	x21, x22, [sp, #32]
    91d0:	bl	50 <grub_machine_init>
    91d4:	adrp	x0, 0 <_start>
    91d8:	ldr	x0, [x0]
    91dc:	ldr	x19, [x0]
    91e0:	cbz	x19, 920c <grub_main+0x4c>
    91e4:	mov	w20, #0x2                   	// #2
    91e8:	b	91f4 <grub_main+0x34>
    91ec:	ldr	x19, [x19]
    91f0:	cbz	x19, 920c <grub_main+0x4c>
    91f4:	ldr	x2, [x19, #88]
    91f8:	cbz	x2, 91ec <grub_main+0x2c>
    91fc:	mov	w1, w20
    9200:	mov	x0, x19
    9204:	blr	x2
    9208:	b	91ec <grub_main+0x2c>
    920c:	adrp	x0, 0 <_start>
    9210:	ldr	x0, [x0]
    9214:	bl	abc0 <grub_err_printf>
    9218:	adrp	x0, 0 <_start>
    921c:	ldr	x0, [x0]
    9220:	ldr	x19, [x0]
    9224:	cbnz	x19, 926c <grub_main+0xac>
    9228:	adrp	x0, 0 <_start>
    922c:	ldr	x0, [x0]
    9230:	ldr	x0, [x0]
    9234:	cbz	x0, 92ec <grub_main+0x12c>
    9238:	ldr	w2, [x0]
    923c:	mov	w1, #0x696d                	// #26989
    9240:	movk	w1, #0x676d, lsl #16
    9244:	cmp	w2, w1
    9248:	b.ne	92ec <grub_main+0x12c>  // b.any
    924c:	ldr	x19, [x0, #8]
    9250:	adds	x19, x0, x19
    9254:	b.eq	92ec <grub_main+0x12c>  // b.none
    9258:	ldr	x1, [x0, #16]
    925c:	add	x0, x0, x1
    9260:	b	9294 <grub_main+0xd4>
    9264:	ldr	x19, [x19]
    9268:	cbz	x19, 9228 <grub_main+0x68>
    926c:	ldr	x2, [x19, #88]
    9270:	cbz	x2, 9264 <grub_main+0xa4>
    9274:	mov	w1, #0x0                   	// #0
    9278:	mov	x0, x19
    927c:	blr	x2
    9280:	b	9264 <grub_main+0xa4>
    9284:	ldr	w1, [x19, #4]
    9288:	add	x1, x1, #0x7
    928c:	and	x1, x1, #0xfffffffffffffff8
    9290:	add	x19, x19, x1
    9294:	cmp	x19, x0
    9298:	b.cs	92ec <grub_main+0x12c>  // b.hs, b.nlast
    929c:	ldr	w1, [x19]
    92a0:	cmp	w1, #0x2
    92a4:	b.ne	9284 <grub_main+0xc4>  // b.any
    92a8:	ldr	w0, [x19, #4]
    92ac:	sub	x0, x0, #0x7
    92b0:	bl	5420 <grub_malloc>
    92b4:	adrp	x1, 0 <_start>
    92b8:	ldr	x1, [x1]
    92bc:	str	x0, [x1]
    92c0:	cbz	x0, 9374 <grub_main+0x1b4>
    92c4:	ldr	w2, [x19, #4]
    92c8:	sub	x2, x2, #0x8
    92cc:	add	x1, x19, #0x8
    92d0:	bl	9854 <grub_memmove>
    92d4:	adrp	x0, 0 <_start>
    92d8:	ldr	x0, [x0]
    92dc:	ldr	w1, [x19, #4]
    92e0:	ldr	x0, [x0]
    92e4:	add	x0, x0, x1
    92e8:	sturb	wzr, [x0, #-8]
    92ec:	bl	c120 <grub_register_exported_symbols>
    92f0:	adrp	x0, 0 <_start>
    92f4:	ldr	x0, [x0]
    92f8:	ldr	x19, [x0]
    92fc:	cbz	x19, 9314 <grub_main+0x154>
    9300:	ldr	w1, [x19]
    9304:	mov	w0, #0x696d                	// #26989
    9308:	movk	w0, #0x676d, lsl #16
    930c:	cmp	w1, w0
    9310:	b.eq	937c <grub_main+0x1bc>  // b.none
    9314:	str	xzr, [sp, #48]
    9318:	str	xzr, [sp, #56]
    931c:	adrp	x0, 0 <_start>
    9320:	ldr	x0, [x0]
    9324:	ldr	x0, [x0]
    9328:	cbz	x0, 9340 <grub_main+0x180>
    932c:	ldr	w2, [x0]
    9330:	mov	w1, #0x696d                	// #26989
    9334:	movk	w1, #0x676d, lsl #16
    9338:	cmp	w2, w1
    933c:	b.eq	9400 <grub_main+0x240>  // b.none
    9340:	adrp	x0, 0 <_start>
    9344:	ldr	x2, [x0]
    9348:	mov	x1, #0x0                   	// #0
    934c:	adrp	x0, 0 <_start>
    9350:	ldr	x0, [x0]
    9354:	bl	8330 <grub_register_variable_hook>
    9358:	add	x1, sp, #0x38
    935c:	add	x0, sp, #0x30
    9360:	bl	3870 <grub_machine_get_bootlocation>
    9364:	ldr	x1, [sp, #48]
    9368:	cbz	x1, 9674 <grub_main+0x4b4>
    936c:	mov	x19, #0x0                   	// #0
    9370:	b	9470 <grub_main+0x2b0>
    9374:	bl	8620 <grub_print_error>
    9378:	b	92ec <grub_main+0x12c>
    937c:	ldr	x0, [x19, #8]
    9380:	adds	x19, x19, x0
    9384:	b.eq	9314 <grub_main+0x154>  // b.none
    9388:	adrp	x20, 0 <_start>
    938c:	adrp	x21, 0 <_start>
    9390:	b	93bc <grub_main+0x1fc>
    9394:	adrp	x0, 0 <_start>
    9398:	ldr	x1, [x0]
    939c:	adrp	x0, 0 <_start>
    93a0:	ldr	x0, [x0]
    93a4:	bl	af6c <grub_fatal>
    93a8:	bl	8620 <grub_print_error>
    93ac:	ldr	w0, [x19, #4]
    93b0:	add	x0, x0, #0x7
    93b4:	and	x0, x0, #0xfffffffffffffff8
    93b8:	add	x19, x19, x0
    93bc:	ldr	x0, [x20]
    93c0:	ldr	x0, [x0]
    93c4:	ldr	x1, [x0, #16]
    93c8:	add	x0, x0, x1
    93cc:	cmp	x19, x0
    93d0:	b.cs	9314 <grub_main+0x154>  // b.hs, b.nlast
    93d4:	ldr	w0, [x19]
    93d8:	cbnz	w0, 93ac <grub_main+0x1ec>
    93dc:	ldr	w1, [x19, #4]
    93e0:	sub	x1, x1, #0x8
    93e4:	add	x0, x19, #0x8
    93e8:	bl	7d48 <grub_dl_load_core>
    93ec:	cbz	x0, 9394 <grub_main+0x1d4>
    93f0:	ldr	x0, [x21]
    93f4:	ldr	w0, [x0]
    93f8:	cbz	w0, 93ac <grub_main+0x1ec>
    93fc:	b	93a8 <grub_main+0x1e8>
    9400:	ldr	x2, [x0, #8]
    9404:	adds	x2, x0, x2
    9408:	b.eq	9340 <grub_main+0x180>  // b.none
    940c:	ldr	x1, [x0, #16]
    9410:	add	x0, x0, x1
    9414:	mov	x19, #0x0                   	// #0
    9418:	cmp	x2, x0
    941c:	b.cs	9444 <grub_main+0x284>  // b.hs, b.nlast
    9420:	mov	x1, x2
    9424:	ldr	w3, [x1], #8
    9428:	cmp	w3, #0x3
    942c:	csel	x19, x1, x19, eq  // eq = none
    9430:	ldr	w1, [x2, #4]
    9434:	add	x1, x1, #0x7
    9438:	and	x1, x1, #0xfffffffffffffff8
    943c:	add	x2, x2, x1
    9440:	b	9418 <grub_main+0x258>
    9444:	adrp	x0, 0 <_start>
    9448:	ldr	x2, [x0]
    944c:	mov	x1, #0x0                   	// #0
    9450:	adrp	x0, 0 <_start>
    9454:	ldr	x0, [x0]
    9458:	bl	8330 <grub_register_variable_hook>
    945c:	add	x1, sp, #0x38
    9460:	add	x0, sp, #0x30
    9464:	bl	3870 <grub_machine_get_bootlocation>
    9468:	ldr	x1, [sp, #48]
    946c:	cbz	x1, 966c <grub_main+0x4ac>
    9470:	ldr	x0, [sp, #56]
    9474:	adrp	x2, 0 <_start>
    9478:	ldr	x2, [x2]
    947c:	cmp	x0, #0x0
    9480:	csel	x2, x0, x2, ne  // ne = any
    9484:	adrp	x0, 0 <_start>
    9488:	ldr	x0, [x0]
    948c:	bl	af08 <grub_xasprintf>
    9490:	mov	x20, x0
    9494:	cbz	x0, 94b8 <grub_main+0x2f8>
    9498:	mov	x1, x0
    949c:	adrp	x21, 0 <_start>
    94a0:	ldr	x0, [x21]
    94a4:	bl	8058 <grub_env_set>
    94a8:	ldr	x0, [x21]
    94ac:	bl	83b0 <grub_env_export>
    94b0:	mov	x0, x20
    94b4:	bl	547c <grub_free>
    94b8:	cbz	x19, 964c <grub_main+0x48c>
    94bc:	ldrb	w0, [x19]
    94c0:	cmp	w0, #0x28
    94c4:	b.eq	9508 <grub_main+0x348>  // b.none
    94c8:	cbz	w0, 9648 <grub_main+0x488>
    94cc:	mov	x20, #0x0                   	// #0
    94d0:	mov	x0, x19
    94d4:	bl	9c18 <grub_strdup>
    94d8:	mov	x19, x0
    94dc:	cbz	x20, 964c <grub_main+0x48c>
    94e0:	ldr	x0, [sp, #48]
    94e4:	cbz	x0, 9680 <grub_main+0x4c0>
    94e8:	ldrb	w1, [x20]
    94ec:	cmp	w1, #0x2c
    94f0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    94f4:	b.ne	9680 <grub_main+0x4c0>  // b.any
    94f8:	ldrb	w2, [x0]
    94fc:	cbz	w2, 962c <grub_main+0x46c>
    9500:	mov	x1, x0
    9504:	b	9564 <grub_main+0x3a4>
    9508:	mov	w1, #0x29                  	// #41
    950c:	mov	x0, x19
    9510:	bl	99ec <grub_strrchr>
    9514:	mov	x21, x0
    9518:	cbz	x0, 965c <grub_main+0x49c>
    951c:	sub	x1, x0, x19
    9520:	sub	x1, x1, #0x1
    9524:	add	x0, x19, #0x1
    9528:	bl	9c54 <grub_strndup>
    952c:	mov	x20, x0
    9530:	add	x19, x21, #0x1
    9534:	ldrb	w0, [x21, #1]
    9538:	cbnz	w0, 94d0 <grub_main+0x310>
    953c:	mov	x19, #0x0                   	// #0
    9540:	b	94dc <grub_main+0x31c>
    9544:	mov	x20, x21
    9548:	b	94d0 <grub_main+0x310>
    954c:	ldrb	w2, [x1, #1]
    9550:	cmp	w2, #0x2c
    9554:	b.eq	95b4 <grub_main+0x3f4>  // b.none
    9558:	add	x1, x1, #0x1
    955c:	ldrb	w2, [x1]
    9560:	cbz	w2, 962c <grub_main+0x46c>
    9564:	cmp	w2, #0x5c
    9568:	b.eq	954c <grub_main+0x38c>  // b.none
    956c:	cmp	w2, #0x2c
    9570:	b.ne	9558 <grub_main+0x398>  // b.any
    9574:	sub	x1, x1, x0
    9578:	bl	9c54 <grub_strndup>
    957c:	mov	x22, x0
    9580:	mov	x2, x20
    9584:	mov	x1, x0
    9588:	adrp	x0, 0 <_start>
    958c:	ldr	x0, [x0]
    9590:	bl	af08 <grub_xasprintf>
    9594:	mov	x21, x0
    9598:	mov	x0, x22
    959c:	bl	547c <grub_free>
    95a0:	ldr	x0, [sp, #48]
    95a4:	bl	547c <grub_free>
    95a8:	mov	x0, x20
    95ac:	bl	547c <grub_free>
    95b0:	b	9688 <grub_main+0x4c8>
    95b4:	add	x1, x1, #0x2
    95b8:	b	955c <grub_main+0x39c>
    95bc:	bl	9bf4 <grub_strlen>
    95c0:	cmp	x0, #0x1
    95c4:	b.ls	95f8 <grub_main+0x438>  // b.plast
    95c8:	mov	x3, x0
    95cc:	sub	x0, x0, #0x1
    95d0:	ldr	x1, [sp, #56]
    95d4:	ldrb	w2, [x1, x0]
    95d8:	cmp	w2, #0x2f
    95dc:	b.ne	95f4 <grub_main+0x434>  // b.any
    95e0:	strb	wzr, [x1, x0]
    95e4:	cmp	x0, #0x1
    95e8:	b.ne	95c8 <grub_main+0x408>  // b.any
    95ec:	ldr	x19, [sp, #56]
    95f0:	b	969c <grub_main+0x4dc>
    95f4:	mov	x0, x3
    95f8:	cmp	x0, #0x8
    95fc:	b.ls	95ec <grub_main+0x42c>  // b.plast
    9600:	sub	x19, x0, #0x9
    9604:	mov	x2, #0x9                   	// #9
    9608:	adrp	x0, 0 <_start>
    960c:	ldr	x1, [x0]
    9610:	ldr	x0, [sp, #56]
    9614:	add	x0, x0, x19
    9618:	bl	9918 <grub_memcmp>
    961c:	cbnz	w0, 95ec <grub_main+0x42c>
    9620:	ldr	x0, [sp, #56]
    9624:	strb	wzr, [x0, x19]
    9628:	b	95ec <grub_main+0x42c>
    962c:	mov	x2, x20
    9630:	mov	x1, x0
    9634:	adrp	x0, 0 <_start>
    9638:	ldr	x0, [x0]
    963c:	bl	af08 <grub_xasprintf>
    9640:	mov	x21, x0
    9644:	b	95a0 <grub_main+0x3e0>
    9648:	mov	x19, #0x0                   	// #0
    964c:	ldr	x21, [sp, #48]
    9650:	cbnz	x21, 9688 <grub_main+0x4c8>
    9654:	mov	x1, x19
    9658:	b	9674 <grub_main+0x4b4>
    965c:	ldrb	w0, [x19]
    9660:	cbnz	w0, 9544 <grub_main+0x384>
    9664:	mov	x19, x21
    9668:	b	964c <grub_main+0x48c>
    966c:	cbnz	x19, 94bc <grub_main+0x2fc>
    9670:	mov	x1, x19
    9674:	mov	x19, x1
    9678:	mov	x20, #0x0                   	// #0
    967c:	mov	x0, #0x0                   	// #0
    9680:	bl	547c <grub_free>
    9684:	mov	x21, x20
    9688:	ldr	x0, [sp, #56]
    968c:	cmp	x19, #0x0
    9690:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    9694:	b.ne	95bc <grub_main+0x3fc>  // b.any
    9698:	bl	547c <grub_free>
    969c:	cbz	x21, 96f0 <grub_main+0x530>
    96a0:	adrp	x0, 0 <_start>
    96a4:	ldr	x2, [x0]
    96a8:	cmp	x19, #0x0
    96ac:	csel	x2, x19, x2, ne  // ne = any
    96b0:	mov	x1, x21
    96b4:	adrp	x0, 0 <_start>
    96b8:	ldr	x0, [x0]
    96bc:	bl	af08 <grub_xasprintf>
    96c0:	mov	x20, x0
    96c4:	cbz	x0, 96e0 <grub_main+0x520>
    96c8:	mov	x1, x0
    96cc:	adrp	x0, 0 <_start>
    96d0:	ldr	x0, [x0]
    96d4:	bl	8058 <grub_env_set>
    96d8:	mov	x0, x20
    96dc:	bl	547c <grub_free>
    96e0:	mov	x1, x21
    96e4:	adrp	x0, 0 <_start>
    96e8:	ldr	x0, [x0]
    96ec:	bl	8058 <grub_env_set>
    96f0:	mov	x0, x21
    96f4:	bl	547c <grub_free>
    96f8:	mov	x0, x19
    96fc:	bl	547c <grub_free>
    9700:	bl	8620 <grub_print_error>
    9704:	adrp	x0, 0 <_start>
    9708:	ldr	x0, [x0]
    970c:	bl	83b0 <grub_env_export>
    9710:	adrp	x0, 0 <_start>
    9714:	ldr	x0, [x0]
    9718:	bl	83b0 <grub_env_export>
    971c:	adrp	x0, 0 <_start>
    9720:	ldr	x0, [x0]
    9724:	ldr	x0, [x0]
    9728:	cbz	x0, 9738 <grub_main+0x578>
    972c:	adrp	x0, 0 <_start>
    9730:	ldr	x0, [x0]
    9734:	str	xzr, [x0]
    9738:	bl	5df0 <grub_register_core_commands>
    973c:	adrp	x0, 0 <_start>
    9740:	ldr	x0, [x0]
    9744:	ldr	x0, [x0]
    9748:	cbz	x0, 9750 <grub_main+0x590>
    974c:	bl	b518 <grub_parser_execute>
    9750:	adrp	x0, 0 <_start>
    9754:	ldr	x19, [x0]
    9758:	mov	x0, x19
    975c:	bl	7e60 <grub_dl_load>
    9760:	bl	8620 <grub_print_error>
    9764:	adrp	x0, 0 <_start>
    9768:	ldr	x0, [x0]
    976c:	str	wzr, [x0]
    9770:	adrp	x0, 0 <_start>
    9774:	ldr	x0, [x0]
    9778:	mov	x1, x19
    977c:	ldr	x0, [x0]
    9780:	bl	9098 <grub_named_list_find>
    9784:	cbz	x0, 9798 <grub_main+0x5d8>
    9788:	ldr	x3, [x0, #32]
    978c:	mov	x2, #0x0                   	// #0
    9790:	mov	w1, #0x0                   	// #0
    9794:	blr	x3
    9798:	bl	be68 <grub_rescue_run>
    979c:	nop
	...
    9828:	ret
    982c:	mov	x1, x0
    9830:	ldr	x0, [x0, #256]
    9834:	cmp	x0, x1
    9838:	b.eq	9850 <grub_main+0x690>  // b.none
    983c:	stp	x29, x30, [sp, #-16]!
    9840:	mov	x29, sp
    9844:	bl	547c <grub_free>
    9848:	ldp	x29, x30, [sp], #16
    984c:	ret
    9850:	ret

0000000000009854 <grub_memmove>:
    9854:	cmp	x0, x1
    9858:	b.cs	987c <grub_memmove+0x28>  // b.hs, b.nlast
    985c:	cbz	x2, 9878 <grub_memmove+0x24>
    9860:	mov	x3, #0x0                   	// #0
    9864:	ldrb	w4, [x1, x3]
    9868:	strb	w4, [x0, x3]
    986c:	add	x3, x3, #0x1
    9870:	cmp	x3, x2
    9874:	b.ne	9864 <grub_memmove+0x10>  // b.any
    9878:	ret
    987c:	sub	x3, x2, #0x1
    9880:	cbz	x2, 9878 <grub_memmove+0x24>
    9884:	ldrb	w2, [x1, x3]
    9888:	strb	w2, [x0, x3]
    988c:	sub	x3, x3, #0x1
    9890:	cmn	x3, #0x1
    9894:	b.ne	9884 <grub_memmove+0x30>  // b.any
    9898:	b	9878 <grub_memmove+0x24>

000000000000989c <grub_strcpy>:
    989c:	mov	x2, #0x0                   	// #0
    98a0:	ldrb	w3, [x1, x2]
    98a4:	strb	w3, [x0, x2]
    98a8:	add	x2, x2, #0x1
    98ac:	cbnz	w3, 98a0 <grub_strcpy+0x4>
    98b0:	ret

00000000000098b4 <grub_puts_>:
    98b4:	stp	x29, x30, [sp, #-48]!
    98b8:	mov	x29, sp
    98bc:	str	x19, [sp, #16]
    98c0:	adrp	x1, 0 <_start>
    98c4:	ldr	x1, [x1]
    98c8:	ldr	x1, [x1]
    98cc:	blr	x1
    98d0:	mov	w1, #0xa                   	// #10
    98d4:	strh	w1, [sp, #40]
    98d8:	adrp	x1, 0 <_start>
    98dc:	ldr	x19, [x1]
    98e0:	ldr	x1, [x19]
    98e4:	blr	x1
    98e8:	ldr	x1, [x19]
    98ec:	add	x0, sp, #0x28
    98f0:	blr	x1
    98f4:	mov	w0, #0x1                   	// #1
    98f8:	ldr	x19, [sp, #16]
    98fc:	ldp	x29, x30, [sp], #48
    9900:	ret
    9904:	nop
	...

0000000000009918 <grub_memcmp>:
    9918:	cbz	x2, 994c <grub_memcmp+0x34>
    991c:	mov	x3, #0x0                   	// #0
    9920:	ldrb	w4, [x0, x3]
    9924:	ldrb	w5, [x1, x3]
    9928:	cmp	w4, w5
    992c:	b.ne	9944 <grub_memcmp+0x2c>  // b.any
    9930:	add	x3, x3, #0x1
    9934:	cmp	x2, x3
    9938:	b.ne	9920 <grub_memcmp+0x8>  // b.any
    993c:	mov	w0, #0x0                   	// #0
    9940:	b	9948 <grub_memcmp+0x30>
    9944:	sub	w0, w4, w5
    9948:	ret
    994c:	mov	w0, #0x0                   	// #0
    9950:	b	9948 <grub_memcmp+0x30>

0000000000009954 <grub_strcmp>:
    9954:	ldrb	w2, [x0]
    9958:	cbz	w2, 9978 <grub_strcmp+0x24>
    995c:	ldrb	w3, [x1]
    9960:	cmp	w3, #0x0
    9964:	ccmp	w3, w2, #0x0, ne  // ne = any
    9968:	b.ne	9978 <grub_strcmp+0x24>  // b.any
    996c:	add	x1, x1, #0x1
    9970:	ldrb	w2, [x0, #1]!
    9974:	cbnz	w2, 995c <grub_strcmp+0x8>
    9978:	ldrb	w0, [x1]
    997c:	sub	w0, w2, w0
    9980:	ret

0000000000009984 <grub_strncmp>:
    9984:	cbz	x2, 99c8 <grub_strncmp+0x44>
    9988:	ldrb	w3, [x0]
    998c:	mov	x4, x0
    9990:	add	x5, x0, x2
    9994:	cbz	w3, 99bc <grub_strncmp+0x38>
    9998:	ldrb	w0, [x1]
    999c:	cbz	w0, 99bc <grub_strncmp+0x38>
    99a0:	mvn	x2, x4
    99a4:	cmn	x2, x5
    99a8:	ccmp	w0, w3, #0x0, ne  // ne = any
    99ac:	b.ne	99bc <grub_strncmp+0x38>  // b.any
    99b0:	add	x1, x1, #0x1
    99b4:	ldrb	w3, [x4, #1]!
    99b8:	cbnz	w3, 9998 <grub_strncmp+0x14>
    99bc:	ldrb	w0, [x1]
    99c0:	sub	w0, w3, w0
    99c4:	ret
    99c8:	mov	w0, #0x0                   	// #0
    99cc:	b	99c4 <grub_strncmp+0x40>

00000000000099d0 <grub_strchr>:
    99d0:	ldrb	w2, [x0]
    99d4:	cmp	w2, w1
    99d8:	b.eq	99e8 <grub_strchr+0x18>  // b.none
    99dc:	add	x0, x0, #0x1
    99e0:	cbnz	w2, 99d0 <grub_strchr>
    99e4:	mov	x0, #0x0                   	// #0
    99e8:	ret

00000000000099ec <grub_strrchr>:
    99ec:	mov	x2, x0
    99f0:	mov	x0, #0x0                   	// #0
    99f4:	ldrb	w3, [x2]
    99f8:	cmp	w3, w1
    99fc:	csel	x0, x0, x2, ne  // ne = any
    9a00:	add	x2, x2, #0x1
    9a04:	cbnz	w3, 99f4 <grub_strrchr+0x8>
    9a08:	ret

0000000000009a0c <grub_isspace>:
    9a0c:	cmp	w0, #0xd
    9a10:	b.eq	9a28 <grub_isspace+0x1c>  // b.none
    9a14:	sub	w1, w0, #0x9
    9a18:	cmp	w0, #0x20
    9a1c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
    9a20:	cset	w0, ls  // ls = plast
    9a24:	ret
    9a28:	mov	w0, #0x1                   	// #1
    9a2c:	b	9a24 <grub_isspace+0x18>
    9a30:	stp	x29, x30, [sp, #-32]!
    9a34:	mov	x29, sp
    9a38:	str	x19, [sp, #16]
    9a3c:	mov	w19, w0
    9a40:	bl	9a0c <grub_isspace>
    9a44:	cbnz	w0, 9a70 <grub_isspace+0x64>
    9a48:	cmp	w19, #0x2c
    9a4c:	mov	w0, #0x1                   	// #1
    9a50:	mov	w1, #0x3b                  	// #59
    9a54:	ccmp	w19, w1, #0x4, ne  // ne = any
    9a58:	b.eq	9a74 <grub_isspace+0x68>  // b.none
    9a5c:	cmp	w19, #0x7c
    9a60:	mov	w0, #0x26                  	// #38
    9a64:	ccmp	w19, w0, #0x4, ne  // ne = any
    9a68:	cset	w0, eq  // eq = none
    9a6c:	b	9a74 <grub_isspace+0x68>
    9a70:	mov	w0, #0x1                   	// #1
    9a74:	ldr	x19, [sp, #16]
    9a78:	ldp	x29, x30, [sp], #32
    9a7c:	ret

0000000000009a80 <grub_strword>:
    9a80:	stp	x29, x30, [sp, #-48]!
    9a84:	mov	x29, sp
    9a88:	stp	x19, x20, [sp, #16]
    9a8c:	stp	x21, x22, [sp, #32]
    9a90:	mov	x19, x0
    9a94:	mov	x22, x1
    9a98:	b	9aa0 <grub_strword+0x20>
    9a9c:	add	x19, x19, #0x1
    9aa0:	ldrb	w20, [x19]
    9aa4:	mov	w0, w20
    9aa8:	bl	9a30 <grub_isspace+0x24>
    9aac:	cbnz	w0, 9a9c <grub_strword+0x1c>
    9ab0:	cbnz	w20, 9ad0 <grub_strword+0x50>
    9ab4:	b	9b30 <grub_strword+0xb0>
    9ab8:	add	x19, x19, #0x1
    9abc:	ldrb	w20, [x19]
    9ac0:	mov	w0, w20
    9ac4:	bl	9a30 <grub_isspace+0x24>
    9ac8:	cbnz	w0, 9ab8 <grub_strword+0x38>
    9acc:	cbz	w20, 9b30 <grub_strword+0xb0>
    9ad0:	ldrb	w20, [x19]
    9ad4:	mov	x21, x22
    9ad8:	cbz	w20, 9b00 <grub_strword+0x80>
    9adc:	mov	w0, w20
    9ae0:	bl	9a30 <grub_isspace+0x24>
    9ae4:	cbnz	w0, 9b00 <grub_strword+0x80>
    9ae8:	ldrb	w0, [x21]
    9aec:	cmp	w0, w20
    9af0:	b.ne	9b48 <grub_strword+0xc8>  // b.any
    9af4:	add	x21, x21, #0x1
    9af8:	ldrb	w20, [x19, #1]!
    9afc:	cbnz	w20, 9adc <grub_strword+0x5c>
    9b00:	ldrb	w0, [x21]
    9b04:	cbz	w0, 9b2c <grub_strword+0xac>
    9b08:	bl	9a30 <grub_isspace+0x24>
    9b0c:	cbnz	w0, 9b40 <grub_strword+0xc0>
    9b10:	ldrb	w0, [x19]
    9b14:	cbz	w0, 9abc <grub_strword+0x3c>
    9b18:	bl	9a30 <grub_isspace+0x24>
    9b1c:	cbnz	w0, 9abc <grub_strword+0x3c>
    9b20:	ldrb	w0, [x19, #1]!
    9b24:	cbnz	w0, 9b18 <grub_strword+0x98>
    9b28:	b	9abc <grub_strword+0x3c>
    9b2c:	mov	w0, #0x1                   	// #1
    9b30:	ldp	x19, x20, [sp, #16]
    9b34:	ldp	x21, x22, [sp, #32]
    9b38:	ldp	x29, x30, [sp], #48
    9b3c:	ret
    9b40:	mov	w0, #0x1                   	// #1
    9b44:	b	9b30 <grub_strword+0xb0>
    9b48:	cbnz	w20, 9b10 <grub_strword+0x90>
    9b4c:	b	9b00 <grub_strword+0x80>

0000000000009b50 <grub_memset>:
    9b50:	and	w1, w1, #0xff
    9b54:	cmp	x2, #0x17
    9b58:	b.hi	9b78 <grub_memset+0x28>  // b.pmore
    9b5c:	mov	x3, x0
    9b60:	cbz	x2, 9b74 <grub_memset+0x24>
    9b64:	add	x2, x3, x2
    9b68:	strb	w1, [x3], #1
    9b6c:	cmp	x2, x3
    9b70:	b.ne	9b68 <grub_memset+0x18>  // b.any
    9b74:	ret
    9b78:	mov	w3, #0x0                   	// #0
    9b7c:	mov	x5, #0x0                   	// #0
    9b80:	and	x6, x1, #0xff
    9b84:	lsl	x4, x6, x3
    9b88:	orr	x5, x5, x4
    9b8c:	add	w3, w3, #0x8
    9b90:	cmp	w3, #0x40
    9b94:	b.ne	9b84 <grub_memset+0x34>  // b.any
    9b98:	mov	x4, x0
    9b9c:	tst	x0, #0x7
    9ba0:	b.eq	9bd0 <grub_memset+0x80>  // b.none
    9ba4:	strb	w1, [x4], #1
    9ba8:	sub	x2, x2, #0x1
    9bac:	tst	x4, #0x7
    9bb0:	b.eq	9bc4 <grub_memset+0x74>  // b.none
    9bb4:	strb	w1, [x4], #1
    9bb8:	subs	x2, x2, #0x1
    9bbc:	b.ne	9bac <grub_memset+0x5c>  // b.any
    9bc0:	b	9b74 <grub_memset+0x24>
    9bc4:	mov	x3, x4
    9bc8:	cmp	x2, #0x7
    9bcc:	b.ls	9b64 <grub_memset+0x14>  // b.plast
    9bd0:	sub	x3, x2, #0x8
    9bd4:	and	x3, x3, #0xfffffffffffffff8
    9bd8:	add	x3, x3, #0x8
    9bdc:	add	x3, x4, x3
    9be0:	str	x5, [x4], #8
    9be4:	cmp	x4, x3
    9be8:	b.ne	9be0 <grub_memset+0x90>  // b.any
    9bec:	and	x2, x2, #0x7
    9bf0:	b	9b60 <grub_memset+0x10>

0000000000009bf4 <grub_strlen>:
    9bf4:	ldrb	w1, [x0]
    9bf8:	cbz	w1, 9c10 <grub_strlen+0x1c>
    9bfc:	mov	x1, x0
    9c00:	ldrb	w2, [x1, #1]!
    9c04:	cbnz	w2, 9c00 <grub_strlen+0xc>
    9c08:	sub	x0, x1, x0
    9c0c:	ret
    9c10:	mov	x1, x0
    9c14:	b	9c08 <grub_strlen+0x14>

0000000000009c18 <grub_strdup>:
    9c18:	stp	x29, x30, [sp, #-32]!
    9c1c:	mov	x29, sp
    9c20:	stp	x19, x20, [sp, #16]
    9c24:	mov	x20, x0
    9c28:	bl	9bf4 <grub_strlen>
    9c2c:	add	x19, x0, #0x1
    9c30:	mov	x0, x19
    9c34:	bl	5420 <grub_malloc>
    9c38:	cbz	x0, 9c48 <grub_strdup+0x30>
    9c3c:	mov	x2, x19
    9c40:	mov	x1, x20
    9c44:	bl	9854 <grub_memmove>
    9c48:	ldp	x19, x20, [sp, #16]
    9c4c:	ldp	x29, x30, [sp], #32
    9c50:	ret

0000000000009c54 <grub_strndup>:
    9c54:	stp	x29, x30, [sp, #-48]!
    9c58:	mov	x29, sp
    9c5c:	stp	x19, x20, [sp, #16]
    9c60:	str	x21, [sp, #32]
    9c64:	mov	x21, x0
    9c68:	mov	x19, x1
    9c6c:	bl	9bf4 <grub_strlen>
    9c70:	cmp	x0, x19
    9c74:	csel	x19, x0, x19, ls  // ls = plast
    9c78:	add	x0, x19, #0x1
    9c7c:	bl	5420 <grub_malloc>
    9c80:	mov	x20, x0
    9c84:	cbz	x0, 9c98 <grub_strndup+0x44>
    9c88:	mov	x2, x19
    9c8c:	mov	x1, x21
    9c90:	bl	9854 <grub_memmove>
    9c94:	strb	wzr, [x20, x19]
    9c98:	mov	x0, x20
    9c9c:	ldp	x19, x20, [sp, #16]
    9ca0:	ldr	x21, [sp, #32]
    9ca4:	ldp	x29, x30, [sp], #48
    9ca8:	ret

0000000000009cac <grub_divmod64>:
    9cac:	mov	x4, x0
    9cb0:	mov	x0, #0xfffffffe            	// #4294967294
    9cb4:	cmp	x4, x0
    9cb8:	ccmp	x1, x0, #0x2, ls  // ls = plast
    9cbc:	b.ls	9cd0 <grub_divmod64+0x24>  // b.plast
    9cc0:	mov	w5, #0x40                  	// #64
    9cc4:	mov	x3, #0x0                   	// #0
    9cc8:	mov	x0, #0x0                   	// #0
    9ccc:	b	9cf0 <grub_divmod64+0x44>
    9cd0:	cbz	x2, 9ce0 <grub_divmod64+0x34>
    9cd4:	udiv	w0, w4, w1
    9cd8:	msub	w0, w0, w1, w4
    9cdc:	str	x0, [x2]
    9ce0:	udiv	w0, w4, w1
    9ce4:	b	9d24 <grub_divmod64+0x78>
    9ce8:	subs	w5, w5, #0x1
    9cec:	b.eq	9d1c <grub_divmod64+0x70>  // b.none
    9cf0:	lsl	x3, x3, #1
    9cf4:	orr	x6, x3, #0x1
    9cf8:	cmp	x4, #0x0
    9cfc:	csel	x3, x6, x3, lt  // lt = tstop
    9d00:	lsl	x0, x0, #1
    9d04:	lsl	x4, x4, #1
    9d08:	cmp	x3, x1
    9d0c:	b.cc	9ce8 <grub_divmod64+0x3c>  // b.lo, b.ul, b.last
    9d10:	orr	x0, x0, #0x1
    9d14:	sub	x3, x3, x1
    9d18:	b	9ce8 <grub_divmod64+0x3c>
    9d1c:	cbz	x2, 9d24 <grub_divmod64+0x78>
    9d20:	str	x3, [x2]
    9d24:	ret

0000000000009d28 <grub_strtoull>:
    9d28:	stp	x29, x30, [sp, #-64]!
    9d2c:	mov	x29, sp
    9d30:	stp	x19, x20, [sp, #16]
    9d34:	stp	x21, x22, [sp, #32]
    9d38:	stp	x23, x24, [sp, #48]
    9d3c:	mov	x20, x0
    9d40:	mov	x24, x1
    9d44:	mov	w21, w2
    9d48:	ldrb	w19, [x20]
    9d4c:	mov	w0, w19
    9d50:	bl	9a0c <grub_isspace>
    9d54:	cbz	w0, 9d60 <grub_strtoull+0x38>
    9d58:	add	x20, x20, #0x1
    9d5c:	b	9d48 <grub_strtoull+0x20>
    9d60:	cmp	w19, #0x30
    9d64:	b.eq	9d8c <grub_strtoull+0x64>  // b.none
    9d68:	cmp	w21, #0x0
    9d6c:	mov	w1, #0xa                   	// #10
    9d70:	csel	w21, w21, w1, ne  // ne = any
    9d74:	ldrb	w3, [x20]
    9d78:	cbz	w3, 9e68 <grub_strtoull+0x140>
    9d7c:	mov	x22, #0x0                   	// #0
    9d80:	sxtw	x21, w21
    9d84:	mov	w23, #0x1                   	// #1
    9d88:	b	9e04 <grub_strtoull+0xdc>
    9d8c:	ldrb	w1, [x20, #1]
    9d90:	cmp	w1, #0x78
    9d94:	b.eq	9db8 <grub_strtoull+0x90>  // b.none
    9d98:	sub	w1, w1, #0x30
    9d9c:	and	w1, w1, #0xff
    9da0:	cmp	w21, #0x0
    9da4:	ccmp	w1, #0x7, #0x2, eq  // eq = none
    9da8:	b.hi	9d68 <grub_strtoull+0x40>  // b.pmore
    9dac:	ldrb	w3, [x20]
    9db0:	mov	w21, #0x8                   	// #8
    9db4:	b	9d7c <grub_strtoull+0x54>
    9db8:	tst	w21, #0xffffffef
    9dbc:	b.ne	9d74 <grub_strtoull+0x4c>  // b.any
    9dc0:	add	x20, x20, #0x2
    9dc4:	mov	w21, #0x10                  	// #16
    9dc8:	b	9d74 <grub_strtoull+0x4c>
    9dcc:	cmp	x19, #0x9
    9dd0:	b.hi	9e44 <grub_strtoull+0x11c>  // b.pmore
    9dd4:	cmp	x21, x19
    9dd8:	b.ls	9e44 <grub_strtoull+0x11c>  // b.plast
    9ddc:	mov	x2, #0x0                   	// #0
    9de0:	mov	x1, x21
    9de4:	mvn	x0, x19
    9de8:	bl	9cac <grub_divmod64>
    9dec:	cmp	x0, x22
    9df0:	b.cc	9e2c <grub_strtoull+0x104>  // b.lo, b.ul, b.last
    9df4:	madd	x22, x21, x22, x19
    9df8:	ldrb	w3, [x20, #1]!
    9dfc:	mov	w0, w23
    9e00:	cbz	w3, 9e48 <grub_strtoull+0x120>
    9e04:	sub	w1, w3, #0x41
    9e08:	add	w19, w3, #0x20
    9e0c:	cmp	w1, #0x1a
    9e10:	csel	w19, w19, w3, cc  // cc = lo, ul, last
    9e14:	sub	w19, w19, #0x30
    9e18:	sxtw	x19, w19
    9e1c:	cmp	x19, #0x30
    9e20:	b.ls	9dcc <grub_strtoull+0xa4>  // b.plast
    9e24:	sub	x19, x19, #0x27
    9e28:	b	9dd4 <grub_strtoull+0xac>
    9e2c:	adrp	x0, 0 <_start>
    9e30:	ldr	x1, [x0]
    9e34:	mov	w0, #0xb                   	// #11
    9e38:	bl	8408 <grub_error>
    9e3c:	mov	x22, #0xffffffffffffffff    	// #-1
    9e40:	b	9e50 <grub_strtoull+0x128>
    9e44:	cbz	w0, 9e68 <grub_strtoull+0x140>
    9e48:	cbz	x24, 9e50 <grub_strtoull+0x128>
    9e4c:	str	x20, [x24]
    9e50:	mov	x0, x22
    9e54:	ldp	x19, x20, [sp, #16]
    9e58:	ldp	x21, x22, [sp, #32]
    9e5c:	ldp	x23, x24, [sp, #48]
    9e60:	ldp	x29, x30, [sp], #64
    9e64:	ret
    9e68:	adrp	x0, 0 <_start>
    9e6c:	ldr	x1, [x0]
    9e70:	mov	w0, #0xa                   	// #10
    9e74:	bl	8408 <grub_error>
    9e78:	mov	x22, #0x0                   	// #0
    9e7c:	b	9e50 <grub_strtoull+0x128>
	...
    9e90:	stp	x29, x30, [sp, #-96]!
    9e94:	mov	x29, sp
    9e98:	stp	x19, x20, [sp, #16]
    9e9c:	stp	x21, x22, [sp, #32]
    9ea0:	stp	x23, x24, [sp, #48]
    9ea4:	stp	x25, x26, [sp, #64]
    9ea8:	stp	x27, x28, [sp, #80]
    9eac:	mov	x20, x0
    9eb0:	mov	x21, x1
    9eb4:	ldr	x22, [x2]
    9eb8:	ldr	x26, [x2, #8]
    9ebc:	ldr	w23, [x2, #24]
    9ec0:	str	xzr, [x1, #264]
    9ec4:	mov	x4, #0x1                   	// #1
    9ec8:	mov	x3, #0x1                   	// #1
    9ecc:	movk	x3, #0x2003, lsl #32
    9ed0:	movk	x3, #0x25, lsl #48
    9ed4:	b	9f00 <grub_strtoull+0x1d8>
    9ed8:	ldrb	w1, [x2, #1]
    9edc:	add	x0, x2, #0x2
    9ee0:	cmp	w1, #0x6c
    9ee4:	b.ne	9fb0 <grub_strtoull+0x288>  // b.any
    9ee8:	add	x0, x2, #0x3
    9eec:	ldrb	w1, [x2, #2]
    9ef0:	b	9fb0 <grub_strtoull+0x288>
    9ef4:	ldr	x1, [x21, #264]
    9ef8:	add	x1, x1, #0x1
    9efc:	str	x1, [x21, #264]
    9f00:	mov	x2, x0
    9f04:	ldrb	w1, [x0], #1
    9f08:	cbz	w1, 9fd0 <grub_strtoull+0x2a8>
    9f0c:	cmp	w1, #0x25
    9f10:	b.ne	9f00 <grub_strtoull+0x1d8>  // b.any
    9f14:	ldrb	w1, [x2, #1]
    9f18:	add	x2, x2, #0x2
    9f1c:	cmp	w1, #0x2d
    9f20:	csel	x0, x2, x0, eq  // eq = none
    9f24:	ldrb	w1, [x0]
    9f28:	sub	w2, w1, #0x30
    9f2c:	cmp	w2, #0x9
    9f30:	b.hi	9f44 <grub_strtoull+0x21c>  // b.pmore
    9f34:	ldrb	w1, [x0, #1]!
    9f38:	sub	w2, w1, #0x30
    9f3c:	cmp	w2, #0x9
    9f40:	b.ls	9f34 <grub_strtoull+0x20c>  // b.plast
    9f44:	cmp	w1, #0x24
    9f48:	cinc	x0, x0, eq  // eq = none
    9f4c:	ldrb	w1, [x0]
    9f50:	cmp	w1, #0x2d
    9f54:	cinc	x0, x0, eq  // eq = none
    9f58:	ldrb	w1, [x0]
    9f5c:	sub	w2, w1, #0x30
    9f60:	cmp	w2, #0x9
    9f64:	b.hi	9f78 <grub_strtoull+0x250>  // b.pmore
    9f68:	ldrb	w1, [x0, #1]!
    9f6c:	sub	w2, w1, #0x30
    9f70:	cmp	w2, #0x9
    9f74:	b.ls	9f68 <grub_strtoull+0x240>  // b.plast
    9f78:	cmp	w1, #0x2e
    9f7c:	b.ne	a3a8 <grub_strtoull+0x680>  // b.any
    9f80:	add	x2, x0, #0x1
    9f84:	ldrb	w1, [x0, #1]
    9f88:	sub	w0, w1, #0x30
    9f8c:	cmp	w0, #0x9
    9f90:	b.hi	9fa4 <grub_strtoull+0x27c>  // b.pmore
    9f94:	ldrb	w1, [x2, #1]!
    9f98:	sub	w0, w1, #0x30
    9f9c:	cmp	w0, #0x9
    9fa0:	b.ls	9f94 <grub_strtoull+0x26c>  // b.plast
    9fa4:	add	x0, x2, #0x1
    9fa8:	cmp	w1, #0x6c
    9fac:	b.eq	9ed8 <grub_strtoull+0x1b0>  // b.none
    9fb0:	sub	w1, w1, #0x43
    9fb4:	and	w1, w1, #0xff
    9fb8:	cmp	w1, #0x35
    9fbc:	b.hi	9f00 <grub_strtoull+0x1d8>  // b.pmore
    9fc0:	lsl	x1, x4, x1
    9fc4:	tst	x1, x3
    9fc8:	b.eq	9f00 <grub_strtoull+0x1d8>  // b.none
    9fcc:	b	9ef4 <grub_strtoull+0x1cc>
    9fd0:	ldr	x0, [x21, #264]
    9fd4:	cmp	x0, #0x20
    9fd8:	b.hi	a004 <grub_strtoull+0x2dc>  // b.pmore
    9fdc:	str	x21, [x21, #256]
    9fe0:	ldr	x2, [x21, #264]
    9fe4:	lsl	x2, x2, #3
    9fe8:	mov	w1, #0x0                   	// #0
    9fec:	ldr	x0, [x21, #256]
    9ff0:	bl	9b50 <grub_memset>
    9ff4:	mov	x24, #0x0                   	// #0
    9ff8:	mov	w27, #0xa                   	// #10
    9ffc:	mov	w28, #0x5                   	// #5
    a000:	b	a090 <grub_strtoull+0x368>
    a004:	lsl	x0, x0, #3
    a008:	bl	5420 <grub_malloc>
    a00c:	str	x0, [x21, #256]
    a010:	cbnz	x0, 9fe0 <grub_strtoull+0x2b8>
    a014:	adrp	x0, 0 <_start>
    a018:	ldr	x0, [x0]
    a01c:	str	wzr, [x0]
    a020:	str	x21, [x21, #256]
    a024:	mov	x0, #0x20                  	// #32
    a028:	str	x0, [x21, #264]
    a02c:	b	9fe0 <grub_strtoull+0x2b8>
    a030:	mov	x19, x20
    a034:	b	a0dc <grub_strtoull+0x3b4>
    a038:	mov	w2, w27
    a03c:	mov	x1, #0x0                   	// #0
    a040:	mov	x0, x20
    a044:	bl	9d28 <grub_strtoull>
    a048:	sub	x3, x0, #0x1
    a04c:	add	x19, x19, #0x1
    a050:	b	a0e8 <grub_strtoull+0x3c0>
    a054:	ldrb	w0, [x1, #1]
    a058:	cmp	w0, #0x6c
    a05c:	b.ne	a070 <grub_strtoull+0x348>  // b.any
    a060:	add	x20, x1, #0x3
    a064:	ldrb	w0, [x1, #2]
    a068:	mov	w2, #0x2                   	// #2
    a06c:	b	a158 <grub_strtoull+0x430>
    a070:	add	x20, x1, #0x2
    a074:	mov	w2, #0x1                   	// #1
    a078:	b	a158 <grub_strtoull+0x430>
    a07c:	and	w0, w0, #0xffffffdf
    a080:	and	w0, w0, #0xff
    a084:	cmp	w0, #0x43
    a088:	b.eq	a1d0 <grub_strtoull+0x4a8>  // b.none
    a08c:	mov	x24, x25
    a090:	mov	x1, x20
    a094:	ldrb	w0, [x20], #1
    a098:	cbz	w0, a1e8 <grub_strtoull+0x4c0>
    a09c:	cmp	w0, #0x25
    a0a0:	b.ne	a090 <grub_strtoull+0x368>  // b.any
    a0a4:	add	x25, x24, #0x1
    a0a8:	ldrb	w0, [x1, #1]
    a0ac:	add	x1, x1, #0x2
    a0b0:	cmp	w0, #0x2d
    a0b4:	csel	x20, x1, x20, eq  // eq = none
    a0b8:	ldrb	w0, [x20]
    a0bc:	sub	w1, w0, #0x30
    a0c0:	cmp	w1, #0x9
    a0c4:	b.hi	a030 <grub_strtoull+0x308>  // b.pmore
    a0c8:	mov	x19, x20
    a0cc:	ldrb	w0, [x19, #1]!
    a0d0:	sub	w1, w0, #0x30
    a0d4:	cmp	w1, #0x9
    a0d8:	b.ls	a0cc <grub_strtoull+0x3a4>  // b.plast
    a0dc:	mov	x3, x24
    a0e0:	cmp	w0, #0x24
    a0e4:	b.eq	a038 <grub_strtoull+0x310>  // b.none
    a0e8:	ldrb	w0, [x19]
    a0ec:	cmp	w0, #0x2d
    a0f0:	cinc	x19, x19, eq  // eq = none
    a0f4:	ldrb	w0, [x19]
    a0f8:	sub	w1, w0, #0x30
    a0fc:	cmp	w1, #0x9
    a100:	b.hi	a114 <grub_strtoull+0x3ec>  // b.pmore
    a104:	ldrb	w0, [x19, #1]!
    a108:	sub	w1, w0, #0x30
    a10c:	cmp	w1, #0x9
    a110:	b.ls	a104 <grub_strtoull+0x3dc>  // b.plast
    a114:	cmp	w0, #0x2e
    a118:	b.ne	a3b4 <grub_strtoull+0x68c>  // b.any
    a11c:	add	x1, x19, #0x1
    a120:	ldrb	w0, [x19, #1]
    a124:	sub	w2, w0, #0x30
    a128:	cmp	w2, #0x9
    a12c:	b.hi	a140 <grub_strtoull+0x418>  // b.pmore
    a130:	ldrb	w0, [x1, #1]!
    a134:	sub	w2, w0, #0x30
    a138:	cmp	w2, #0x9
    a13c:	b.ls	a130 <grub_strtoull+0x408>  // b.plast
    a140:	add	x20, x1, #0x1
    a144:	cmp	w0, #0x25
    a148:	b.eq	a1e0 <grub_strtoull+0x4b8>  // b.none
    a14c:	mov	w2, #0x0                   	// #0
    a150:	cmp	w0, #0x6c
    a154:	b.eq	a054 <grub_strtoull+0x32c>  // b.none
    a158:	ldr	x1, [x21, #264]
    a15c:	cmp	x1, x3
    a160:	b.ls	a08c <grub_strtoull+0x364>  // b.plast
    a164:	cmp	w0, #0x70
    a168:	b.eq	a1b0 <grub_strtoull+0x488>  // b.none
    a16c:	b.hi	a184 <grub_strtoull+0x45c>  // b.pmore
    a170:	cmp	w0, #0x64
    a174:	b.eq	a1c0 <grub_strtoull+0x498>  // b.none
    a178:	cmp	w0, #0x64
    a17c:	b.hi	a08c <grub_strtoull+0x364>  // b.pmore
    a180:	b	a07c <grub_strtoull+0x354>
    a184:	cmp	w0, #0x75
    a188:	b.eq	a194 <grub_strtoull+0x46c>  // b.none
    a18c:	cmp	w0, #0x78
    a190:	b.ne	a1a8 <grub_strtoull+0x480>  // b.any
    a194:	ldr	x0, [x21, #256]
    a198:	lsl	x3, x3, #3
    a19c:	add	w2, w2, #0x3
    a1a0:	str	w2, [x0, x3]
    a1a4:	b	a08c <grub_strtoull+0x364>
    a1a8:	cmp	w0, #0x73
    a1ac:	b.ne	a08c <grub_strtoull+0x364>  // b.any
    a1b0:	ldr	x0, [x21, #256]
    a1b4:	lsl	x3, x3, #3
    a1b8:	str	w28, [x0, x3]
    a1bc:	b	a08c <grub_strtoull+0x364>
    a1c0:	ldr	x0, [x21, #256]
    a1c4:	lsl	x3, x3, #3
    a1c8:	str	w2, [x0, x3]
    a1cc:	b	a08c <grub_strtoull+0x364>
    a1d0:	ldr	x0, [x21, #256]
    a1d4:	lsl	x3, x3, #3
    a1d8:	str	wzr, [x0, x3]
    a1dc:	b	a08c <grub_strtoull+0x364>
    a1e0:	mov	x25, x24
    a1e4:	b	a08c <grub_strtoull+0x364>
    a1e8:	ldr	x0, [x21, #264]
    a1ec:	cbz	x0, a3c0 <grub_strtoull+0x698>
    a1f0:	mov	x1, #0x0                   	// #0
    a1f4:	b	a258 <grub_strtoull+0x530>
    a1f8:	cmp	w0, #0x4
    a1fc:	b.eq	a334 <grub_strtoull+0x60c>  // b.none
    a200:	cmp	w0, #0x5
    a204:	b.ne	a248 <grub_strtoull+0x520>  // b.any
    a208:	tbnz	w23, #31, a37c <grub_strtoull+0x654>
    a20c:	add	x4, x22, #0xf
    a210:	mov	x0, x22
    a214:	and	x22, x4, #0xfffffffffffffff8
    a218:	ldr	x0, [x0]
    a21c:	str	x0, [x3, x2]
    a220:	b	a248 <grub_strtoull+0x520>
    a224:	add	w4, w23, #0x8
    a228:	cmp	w4, #0x0
    a22c:	b.le	a298 <grub_strtoull+0x570>
    a230:	add	x5, x22, #0xb
    a234:	mov	w23, w4
    a238:	mov	x0, x22
    a23c:	and	x22, x5, #0xfffffffffffffff8
    a240:	ldrsw	x0, [x0]
    a244:	str	x0, [x3, x2]
    a248:	add	x1, x1, #0x1
    a24c:	ldr	x0, [x21, #264]
    a250:	cmp	x0, x1
    a254:	b.ls	a3c0 <grub_strtoull+0x698>  // b.plast
    a258:	lsl	x2, x1, #3
    a25c:	ldr	x3, [x21, #256]
    a260:	ldr	w0, [x3, x2]
    a264:	cmp	w0, #0x3
    a268:	b.eq	a2ec <grub_strtoull+0x5c4>  // b.none
    a26c:	b.hi	a1f8 <grub_strtoull+0x4d0>  // b.pmore
    a270:	cmp	w0, #0x1
    a274:	b.eq	a2a4 <grub_strtoull+0x57c>  // b.none
    a278:	cmp	w0, #0x2
    a27c:	b.eq	a208 <grub_strtoull+0x4e0>  // b.none
    a280:	cbnz	w0, a248 <grub_strtoull+0x520>
    a284:	tbnz	w23, #31, a224 <grub_strtoull+0x4fc>
    a288:	add	x4, x22, #0xb
    a28c:	mov	x0, x22
    a290:	and	x22, x4, #0xfffffffffffffff8
    a294:	b	a240 <grub_strtoull+0x518>
    a298:	add	x0, x26, w23, sxtw
    a29c:	mov	w23, w4
    a2a0:	b	a240 <grub_strtoull+0x518>
    a2a4:	tbnz	w23, #31, a2c0 <grub_strtoull+0x598>
    a2a8:	add	x4, x22, #0xf
    a2ac:	mov	x0, x22
    a2b0:	and	x22, x4, #0xfffffffffffffff8
    a2b4:	ldr	x0, [x0]
    a2b8:	str	x0, [x3, x2]
    a2bc:	b	a248 <grub_strtoull+0x520>
    a2c0:	add	w4, w23, #0x8
    a2c4:	cmp	w4, #0x0
    a2c8:	b.le	a2e0 <grub_strtoull+0x5b8>
    a2cc:	add	x5, x22, #0xf
    a2d0:	mov	w23, w4
    a2d4:	mov	x0, x22
    a2d8:	and	x22, x5, #0xfffffffffffffff8
    a2dc:	b	a2b4 <grub_strtoull+0x58c>
    a2e0:	add	x0, x26, w23, sxtw
    a2e4:	mov	w23, w4
    a2e8:	b	a2b4 <grub_strtoull+0x58c>
    a2ec:	tbnz	w23, #31, a308 <grub_strtoull+0x5e0>
    a2f0:	add	x4, x22, #0xb
    a2f4:	mov	x0, x22
    a2f8:	and	x22, x4, #0xfffffffffffffff8
    a2fc:	ldr	w0, [x0]
    a300:	str	x0, [x3, x2]
    a304:	b	a248 <grub_strtoull+0x520>
    a308:	add	w4, w23, #0x8
    a30c:	cmp	w4, #0x0
    a310:	b.le	a328 <grub_strtoull+0x600>
    a314:	add	x5, x22, #0xb
    a318:	mov	w23, w4
    a31c:	mov	x0, x22
    a320:	and	x22, x5, #0xfffffffffffffff8
    a324:	b	a2fc <grub_strtoull+0x5d4>
    a328:	add	x0, x26, w23, sxtw
    a32c:	mov	w23, w4
    a330:	b	a2fc <grub_strtoull+0x5d4>
    a334:	tbnz	w23, #31, a350 <grub_strtoull+0x628>
    a338:	add	x4, x22, #0xf
    a33c:	mov	x0, x22
    a340:	and	x22, x4, #0xfffffffffffffff8
    a344:	ldr	x0, [x0]
    a348:	str	x0, [x3, x2]
    a34c:	b	a248 <grub_strtoull+0x520>
    a350:	add	w4, w23, #0x8
    a354:	cmp	w4, #0x0
    a358:	b.le	a370 <grub_strtoull+0x648>
    a35c:	add	x5, x22, #0xf
    a360:	mov	w23, w4
    a364:	mov	x0, x22
    a368:	and	x22, x5, #0xfffffffffffffff8
    a36c:	b	a344 <grub_strtoull+0x61c>
    a370:	add	x0, x26, w23, sxtw
    a374:	mov	w23, w4
    a378:	b	a344 <grub_strtoull+0x61c>
    a37c:	add	w4, w23, #0x8
    a380:	cmp	w4, #0x0
    a384:	b.le	a39c <grub_strtoull+0x674>
    a388:	add	x5, x22, #0xf
    a38c:	mov	w23, w4
    a390:	mov	x0, x22
    a394:	and	x22, x5, #0xfffffffffffffff8
    a398:	b	a218 <grub_strtoull+0x4f0>
    a39c:	add	x0, x26, w23, sxtw
    a3a0:	mov	w23, w4
    a3a4:	b	a218 <grub_strtoull+0x4f0>
    a3a8:	ldrb	w1, [x0]
    a3ac:	mov	x2, x0
    a3b0:	b	9fa4 <grub_strtoull+0x27c>
    a3b4:	ldrb	w0, [x19]
    a3b8:	mov	x1, x19
    a3bc:	b	a140 <grub_strtoull+0x418>
    a3c0:	ldp	x19, x20, [sp, #16]
    a3c4:	ldp	x21, x22, [sp, #32]
    a3c8:	ldp	x23, x24, [sp, #48]
    a3cc:	ldp	x25, x26, [sp, #64]
    a3d0:	ldp	x27, x28, [sp, #80]
    a3d4:	ldp	x29, x30, [sp], #96
    a3d8:	ret
    a3dc:	nop
	...

000000000000a3e8 <grub_strtoul>:
    a3e8:	stp	x29, x30, [sp, #-16]!
    a3ec:	mov	x29, sp
    a3f0:	bl	9d28 <grub_strtoull>
    a3f4:	ldp	x29, x30, [sp], #16
    a3f8:	ret
    a3fc:	stp	x29, x30, [sp, #-176]!
    a400:	mov	x29, sp
    a404:	stp	x21, x22, [sp, #32]
    a408:	stp	x25, x26, [sp, #64]
    a40c:	stp	x27, x28, [sp, #80]
    a410:	mov	x28, x0
    a414:	mov	x26, x1
    a418:	str	x3, [sp, #120]
    a41c:	add	x0, x2, #0x1
    a420:	str	x0, [sp, #168]
    a424:	ldrb	w0, [x2]
    a428:	cbz	w0, a904 <grub_strtoul+0x51c>
    a42c:	stp	x19, x20, [sp, #16]
    a430:	stp	x23, x24, [sp, #48]
    a434:	mov	x21, #0x0                   	// #0
    a438:	str	xzr, [sp, #104]
    a43c:	mov	w22, #0x0                   	// #0
    a440:	b	a45c <grub_strtoul+0x74>
    a444:	add	x21, x21, #0x1
    a448:	ldr	x0, [sp, #168]
    a44c:	add	x1, x0, #0x1
    a450:	str	x1, [sp, #168]
    a454:	ldrb	w0, [x0]
    a458:	cbz	w0, a8d8 <grub_strtoul+0x4f0>
    a45c:	cmp	w0, #0x25
    a460:	b.eq	a474 <grub_strtoul+0x8c>  // b.none
    a464:	cmp	x26, x21
    a468:	b.ls	a444 <grub_strtoul+0x5c>  // b.plast
    a46c:	strb	w0, [x28, x21]
    a470:	b	a444 <grub_strtoul+0x5c>
    a474:	ldr	x24, [sp, #104]
    a478:	add	x0, x24, #0x1
    a47c:	str	x0, [sp, #112]
    a480:	mov	w25, #0xffffffff            	// #-1
    a484:	mov	w27, #0xa                   	// #10
    a488:	b	a4e0 <grub_strtoul+0xf8>
    a48c:	add	x0, x0, #0x1
    a490:	str	x0, [sp, #168]
    a494:	mov	w23, #0x1                   	// #1
    a498:	b	a4f4 <grub_strtoul+0x10c>
    a49c:	mov	w19, #0x20                  	// #32
    a4a0:	mov	w20, w22
    a4a4:	add	x0, x0, #0x1
    a4a8:	str	x0, [sp, #168]
    a4ac:	ldr	x0, [sp, #168]
    a4b0:	ldrb	w1, [x0]
    a4b4:	sub	w1, w1, #0x30
    a4b8:	mov	w2, w25
    a4bc:	cmp	w1, #0x9
    a4c0:	b.ls	a538 <grub_strtoul+0x150>  // b.plast
    a4c4:	ldr	x1, [sp, #168]
    a4c8:	ldrb	w0, [x1]
    a4cc:	cmp	w0, #0x24
    a4d0:	b.ne	a54c <grub_strtoul+0x164>  // b.any
    a4d4:	sub	w24, w20, #0x1
    a4d8:	add	x1, x1, #0x1
    a4dc:	str	x1, [sp, #168]
    a4e0:	ldr	x0, [sp, #168]
    a4e4:	ldrb	w1, [x0]
    a4e8:	mov	w23, w22
    a4ec:	cmp	w1, #0x2d
    a4f0:	b.eq	a48c <grub_strtoul+0xa4>  // b.none
    a4f4:	ldr	x0, [sp, #168]
    a4f8:	ldrb	w19, [x0]
    a4fc:	sub	w1, w19, #0x30
    a500:	cmp	w1, #0x9
    a504:	b.hi	a990 <grub_strtoul+0x5a8>  // b.pmore
    a508:	cmp	w19, #0x30
    a50c:	mov	w1, #0x20                  	// #32
    a510:	csel	w19, w19, w1, eq  // eq = none
    a514:	mov	w2, w27
    a518:	add	x1, sp, #0xa8
    a51c:	bl	9d28 <grub_strtoull>
    a520:	mov	w20, w0
    a524:	ldr	x0, [sp, #168]
    a528:	ldrb	w1, [x0]
    a52c:	cmp	w1, #0x2e
    a530:	b.ne	a4ac <grub_strtoul+0xc4>  // b.any
    a534:	b	a4a4 <grub_strtoul+0xbc>
    a538:	mov	w2, w27
    a53c:	add	x1, sp, #0xa8
    a540:	bl	9d28 <grub_strtoull>
    a544:	mov	w2, w0
    a548:	b	a4c4 <grub_strtoul+0xdc>
    a54c:	add	x0, x1, #0x1
    a550:	str	x0, [sp, #168]
    a554:	ldrb	w3, [x1]
    a558:	cmp	w3, #0x6c
    a55c:	b.eq	a5fc <grub_strtoul+0x214>  // b.none
    a560:	cmp	w3, #0x25
    a564:	b.eq	a620 <grub_strtoul+0x238>  // b.none
    a568:	ldr	x1, [sp, #120]
    a56c:	ldr	x0, [x1, #264]
    a570:	ldr	x4, [sp, #112]
    a574:	str	x4, [sp, #104]
    a578:	cmp	x0, x24
    a57c:	b.ls	a448 <grub_strtoul+0x60>  // b.plast
    a580:	ldr	x0, [x1, #256]
    a584:	ldr	x1, [x0, x24, lsl #3]
    a588:	cmp	w3, #0x70
    a58c:	b.eq	a6a4 <grub_strtoul+0x2bc>  // b.none
    a590:	b.hi	a638 <grub_strtoul+0x250>  // b.pmore
    a594:	cmp	w3, #0x63
    a598:	b.eq	a770 <grub_strtoul+0x388>  // b.none
    a59c:	cmp	w3, #0x64
    a5a0:	b.eq	a9c8 <grub_strtoul+0x5e0>  // b.none
    a5a4:	cmp	w3, #0x43
    a5a8:	b.ne	a648 <grub_strtoul+0x260>  // b.any
    a5ac:	mov	w3, w1
    a5b0:	cmp	w1, #0x7f
    a5b4:	b.ls	a5dc <grub_strtoul+0x1f4>  // b.plast
    a5b8:	cmp	w1, #0x7ff
    a5bc:	b.ls	a924 <grub_strtoul+0x53c>  // b.plast
    a5c0:	mov	w0, #0xffff                	// #65535
    a5c4:	cmp	w1, w0
    a5c8:	b.ls	a940 <grub_strtoul+0x558>  // b.plast
    a5cc:	mov	w0, #0x10ffff              	// #1114111
    a5d0:	cmp	w1, w0
    a5d4:	b.ls	a94c <grub_strtoul+0x564>  // b.plast
    a5d8:	mov	w3, #0x3f                  	// #63
    a5dc:	and	w3, w3, #0xff
    a5e0:	cmp	x26, x21
    a5e4:	b.ls	a914 <grub_strtoul+0x52c>  // b.plast
    a5e8:	strb	w3, [x28, x21]
    a5ec:	add	x21, x21, #0x1
    a5f0:	ldr	x0, [sp, #112]
    a5f4:	str	x0, [sp, #104]
    a5f8:	b	a448 <grub_strtoul+0x60>
    a5fc:	add	x0, x1, #0x2
    a600:	str	x0, [sp, #168]
    a604:	ldrb	w3, [x1, #1]
    a608:	cmp	w3, #0x6c
    a60c:	b.ne	a560 <grub_strtoul+0x178>  // b.any
    a610:	add	x0, x1, #0x3
    a614:	str	x0, [sp, #168]
    a618:	ldrb	w3, [x1, #2]
    a61c:	b	a560 <grub_strtoul+0x178>
    a620:	cmp	x26, x21
    a624:	b.ls	a630 <grub_strtoul+0x248>  // b.plast
    a628:	mov	w0, #0x25                  	// #37
    a62c:	strb	w0, [x28, x21]
    a630:	add	x21, x21, #0x1
    a634:	b	a448 <grub_strtoul+0x60>
    a638:	cmp	w3, #0x73
    a63c:	b.eq	a7c0 <grub_strtoul+0x3d8>  // b.none
    a640:	cmp	w3, #0x72
    a644:	b.hi	a664 <grub_strtoul+0x27c>  // b.pmore
    a648:	cmp	x26, x21
    a64c:	b.ls	a654 <grub_strtoul+0x26c>  // b.plast
    a650:	strb	w3, [x28, x21]
    a654:	add	x21, x21, #0x1
    a658:	ldr	x0, [sp, #112]
    a65c:	str	x0, [sp, #104]
    a660:	b	a448 <grub_strtoul+0x60>
    a664:	cmp	w3, #0x75
    a668:	b.eq	a9c8 <grub_strtoul+0x5e0>  // b.none
    a66c:	mov	x0, x1
    a670:	cmp	w3, #0x78
    a674:	b.ne	a648 <grub_strtoul+0x260>  // b.any
    a678:	add	x25, sp, #0x88
    a67c:	and	w2, w0, #0xf
    a680:	add	w1, w2, #0x57
    a684:	add	w3, w2, #0x30
    a688:	cmp	w2, #0xa
    a68c:	csel	w1, w1, w3, cs  // cs = hs, nlast
    a690:	strb	w1, [x25], #1
    a694:	lsr	x0, x0, #4
    a698:	cbnz	x0, a67c <grub_strtoul+0x294>
    a69c:	add	x24, sp, #0x88
    a6a0:	b	aa10 <grub_strtoul+0x628>
    a6a4:	cmp	x26, x21
    a6a8:	b.ls	a6b4 <grub_strtoul+0x2cc>  // b.plast
    a6ac:	mov	w0, #0x30                  	// #48
    a6b0:	strb	w0, [x28, x21]
    a6b4:	add	x0, x21, #0x1
    a6b8:	cmp	x26, x0
    a6bc:	b.ls	a6c8 <grub_strtoul+0x2e0>  // b.plast
    a6c0:	mov	w2, #0x78                  	// #120
    a6c4:	strb	w2, [x28, x0]
    a6c8:	add	x21, x21, #0x2
    a6cc:	mov	x0, x1
    a6d0:	b	a678 <grub_strtoul+0x290>
    a6d4:	add	x21, x21, #0x1
    a6d8:	cmp	x21, x0
    a6dc:	b.eq	a6f0 <grub_strtoul+0x308>  // b.none
    a6e0:	cmp	x26, x21
    a6e4:	b.ls	a6d4 <grub_strtoul+0x2ec>  // b.plast
    a6e8:	strb	w19, [x28, x21]
    a6ec:	b	a6d4 <grub_strtoul+0x2ec>
    a6f0:	sub	x25, x25, x1
    a6f4:	add	x2, x25, x3
    a6f8:	mov	x21, x0
    a6fc:	ldrb	w1, [sp, #136]
    a700:	mov	x0, x21
    a704:	cbnz	w1, a9b8 <grub_strtoul+0x5d0>
    a708:	b	a72c <grub_strtoul+0x344>
    a70c:	add	x0, x0, #0x1
    a710:	ldrb	w1, [x21, x0]
    a714:	cbz	w1, a728 <grub_strtoul+0x340>
    a718:	cmp	x26, x0
    a71c:	b.ls	a70c <grub_strtoul+0x324>  // b.plast
    a720:	strb	w1, [x28, x0]
    a724:	b	a70c <grub_strtoul+0x324>
    a728:	cbnz	w23, a73c <grub_strtoul+0x354>
    a72c:	mov	x21, x0
    a730:	ldr	x0, [sp, #112]
    a734:	str	x0, [sp, #104]
    a738:	b	a448 <grub_strtoul+0x60>
    a73c:	mov	x21, x0
    a740:	cbz	x2, a768 <grub_strtoul+0x380>
    a744:	add	x0, x2, x21
    a748:	b	a758 <grub_strtoul+0x370>
    a74c:	add	x21, x21, #0x1
    a750:	cmp	x21, x0
    a754:	b.eq	a72c <grub_strtoul+0x344>  // b.none
    a758:	cmp	x26, x21
    a75c:	b.ls	a74c <grub_strtoul+0x364>  // b.plast
    a760:	strb	w19, [x28, x21]
    a764:	b	a74c <grub_strtoul+0x364>
    a768:	mov	x0, x21
    a76c:	b	a72c <grub_strtoul+0x344>
    a770:	cmp	x26, x21
    a774:	b.ls	a77c <grub_strtoul+0x394>  // b.plast
    a778:	strb	w1, [x28, x21]
    a77c:	add	x21, x21, #0x1
    a780:	ldr	x0, [sp, #112]
    a784:	str	x0, [sp, #104]
    a788:	b	a448 <grub_strtoul+0x60>
    a78c:	add	x21, x21, #0x1
    a790:	subs	w0, w0, #0x6
    a794:	b.mi	a7b4 <grub_strtoul+0x3cc>  // b.first
    a798:	cmp	x26, x21
    a79c:	b.ls	a78c <grub_strtoul+0x3a4>  // b.plast
    a7a0:	lsr	w1, w3, w0
    a7a4:	and	w1, w1, #0x3f
    a7a8:	orr	w1, w1, #0xffffff80
    a7ac:	strb	w1, [x28, x21]
    a7b0:	b	a78c <grub_strtoul+0x3a4>
    a7b4:	ldr	x0, [sp, #112]
    a7b8:	str	x0, [sp, #104]
    a7bc:	b	a448 <grub_strtoul+0x60>
    a7c0:	adrp	x0, 0 <_start>
    a7c4:	ldr	x0, [x0]
    a7c8:	cmp	x1, #0x0
    a7cc:	csel	x3, x1, x0, ne  // ne = any
    a7d0:	mov	w1, w2
    a7d4:	mov	x0, #0x0                   	// #0
    a7d8:	cbz	w2, a7f8 <grub_strtoul+0x410>
    a7dc:	ldrb	w2, [x3, x0]
    a7e0:	cbz	w2, a7f4 <grub_strtoul+0x40c>
    a7e4:	add	x0, x0, #0x1
    a7e8:	cmp	x0, x1
    a7ec:	b.ne	a7dc <grub_strtoul+0x3f4>  // b.any
    a7f0:	b	a7f8 <grub_strtoul+0x410>
    a7f4:	mov	x1, x0
    a7f8:	mov	w2, w20
    a7fc:	cmp	x1, w20, uxtw
    a800:	b.cs	aa70 <grub_strtoul+0x688>  // b.hs, b.nlast
    a804:	sub	x5, x2, x1
    a808:	cbnz	w23, aa78 <grub_strtoul+0x690>
    a80c:	sub	x4, x5, #0x1
    a810:	cbz	x5, a980 <grub_strtoul+0x598>
    a814:	add	x0, x5, x21
    a818:	b	a828 <grub_strtoul+0x440>
    a81c:	add	x21, x21, #0x1
    a820:	cmp	x21, x0
    a824:	b.eq	a838 <grub_strtoul+0x450>  // b.none
    a828:	cmp	x26, x21
    a82c:	b.ls	a81c <grub_strtoul+0x434>  // b.plast
    a830:	strb	w19, [x28, x21]
    a834:	b	a81c <grub_strtoul+0x434>
    a838:	sub	x2, x1, x2
    a83c:	add	x5, x2, x4
    a840:	mov	x21, x0
    a844:	cbnz	x1, aa80 <grub_strtoul+0x698>
    a848:	ldr	x0, [sp, #112]
    a84c:	str	x0, [sp, #104]
    a850:	b	a448 <grub_strtoul+0x60>
    a854:	add	x0, x0, #0x1
    a858:	cmp	x0, x1
    a85c:	b.cs	a878 <grub_strtoul+0x490>  // b.hs, b.nlast
    a860:	add	x2, x0, x21
    a864:	cmp	x26, x2
    a868:	b.ls	a854 <grub_strtoul+0x46c>  // b.plast
    a86c:	ldrb	w2, [x3, x0]
    a870:	strb	w2, [x4, x0]
    a874:	b	a854 <grub_strtoul+0x46c>
    a878:	cmp	x1, #0x0
    a87c:	csinc	x1, x1, xzr, ne  // ne = any
    a880:	add	x21, x21, x1
    a884:	ldr	x0, [sp, #112]
    a888:	str	x0, [sp, #104]
    a88c:	cbz	w23, a448 <grub_strtoul+0x60>
    a890:	mov	x0, x21
    a894:	cbz	x5, a8c8 <grub_strtoul+0x4e0>
    a898:	add	x21, x5, x0
    a89c:	b	a8ac <grub_strtoul+0x4c4>
    a8a0:	add	x0, x0, #0x1
    a8a4:	cmp	x21, x0
    a8a8:	b.eq	a8bc <grub_strtoul+0x4d4>  // b.none
    a8ac:	cmp	x26, x0
    a8b0:	b.ls	a8a0 <grub_strtoul+0x4b8>  // b.plast
    a8b4:	strb	w19, [x28, x0]
    a8b8:	b	a8a0 <grub_strtoul+0x4b8>
    a8bc:	ldr	x0, [sp, #112]
    a8c0:	str	x0, [sp, #104]
    a8c4:	b	a448 <grub_strtoul+0x60>
    a8c8:	mov	x21, x0
    a8cc:	ldr	x0, [sp, #112]
    a8d0:	str	x0, [sp, #104]
    a8d4:	b	a448 <grub_strtoul+0x60>
    a8d8:	ldp	x19, x20, [sp, #16]
    a8dc:	ldp	x23, x24, [sp, #48]
    a8e0:	cmp	x26, x21
    a8e4:	b.ls	a90c <grub_strtoul+0x524>  // b.plast
    a8e8:	strb	wzr, [x28, x21]
    a8ec:	mov	w0, w21
    a8f0:	ldp	x21, x22, [sp, #32]
    a8f4:	ldp	x25, x26, [sp, #64]
    a8f8:	ldp	x27, x28, [sp, #80]
    a8fc:	ldp	x29, x30, [sp], #176
    a900:	ret
    a904:	mov	x21, #0x0                   	// #0
    a908:	b	a8e0 <grub_strtoul+0x4f8>
    a90c:	strb	wzr, [x28, x26]
    a910:	b	a8ec <grub_strtoul+0x504>
    a914:	add	x21, x21, #0x1
    a918:	ldr	x0, [sp, #112]
    a91c:	str	x0, [sp, #104]
    a920:	b	a448 <grub_strtoul+0x60>
    a924:	mov	w4, #0xc0                  	// #192
    a928:	mov	w2, #0x6                   	// #6
    a92c:	cmp	x26, x21
    a930:	b.hi	a958 <grub_strtoul+0x570>  // b.pmore
    a934:	add	x21, x21, #0x1
    a938:	sub	w0, w2, #0x6
    a93c:	b	a798 <grub_strtoul+0x3b0>
    a940:	mov	w4, #0xe0                  	// #224
    a944:	mov	w2, #0xc                   	// #12
    a948:	b	a92c <grub_strtoul+0x544>
    a94c:	mov	w4, #0xf0                  	// #240
    a950:	mov	w2, #0x12                  	// #18
    a954:	b	a92c <grub_strtoul+0x544>
    a958:	lsr	w0, w1, w2
    a95c:	orr	w0, w0, w4
    a960:	strb	w0, [x28, x21]
    a964:	add	x21, x21, #0x1
    a968:	sub	w0, w2, #0x6
    a96c:	b	a798 <grub_strtoul+0x3b0>
    a970:	mov	x2, x3
    a974:	b	a6fc <grub_strtoul+0x314>
    a978:	mov	x2, #0xffffffffffffffff    	// #-1
    a97c:	b	a6fc <grub_strtoul+0x314>
    a980:	mov	x5, x4
    a984:	b	a844 <grub_strtoul+0x45c>
    a988:	mov	x5, #0xffffffffffffffff    	// #-1
    a98c:	b	a844 <grub_strtoul+0x45c>
    a990:	cmp	w19, #0x2e
    a994:	b.eq	a49c <grub_strtoul+0xb4>  // b.none
    a998:	mov	w19, #0x20                  	// #32
    a99c:	mov	w20, w22
    a9a0:	mov	w2, w25
    a9a4:	b	a4c4 <grub_strtoul+0xdc>
    a9a8:	cbz	w23, a978 <grub_strtoul+0x590>
    a9ac:	mov	x2, #0x0                   	// #0
    a9b0:	ldrb	w1, [sp, #136]
    a9b4:	cbz	w1, a740 <grub_strtoul+0x358>
    a9b8:	mov	x0, x21
    a9bc:	add	x3, sp, #0x88
    a9c0:	sub	x21, x3, x21
    a9c4:	b	a718 <grub_strtoul+0x330>
    a9c8:	mov	x0, x1
    a9cc:	cmp	w3, #0x64
    a9d0:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    a9d4:	add	x24, sp, #0x88
    a9d8:	b.ge	a9ec <grub_strtoul+0x604>  // b.tcont
    a9dc:	neg	x0, x1
    a9e0:	mov	w1, #0x2d                  	// #45
    a9e4:	strb	w1, [sp, #136]
    a9e8:	add	x24, sp, #0x89
    a9ec:	mov	x25, x24
    a9f0:	mov	x27, #0xa                   	// #10
    a9f4:	add	x2, sp, #0x80
    a9f8:	mov	x1, x27
    a9fc:	bl	9cac <grub_divmod64>
    aa00:	ldr	x1, [sp, #128]
    aa04:	add	w1, w1, #0x30
    aa08:	strb	w1, [x25], #1
    aa0c:	cbnz	x0, a9f4 <grub_strtoul+0x60c>
    aa10:	strb	wzr, [x25]
    aa14:	mov	x0, x24
    aa18:	bl	9bf4 <grub_strlen>
    aa1c:	sub	x0, x0, #0x1
    aa20:	add	x0, x24, x0
    aa24:	cmp	x0, x24
    aa28:	b.ls	aa44 <grub_strtoul+0x65c>  // b.plast
    aa2c:	ldrb	w1, [x24]
    aa30:	ldrb	w2, [x0]
    aa34:	strb	w2, [x24], #1
    aa38:	strb	w1, [x0], #-1
    aa3c:	cmp	x24, x0
    aa40:	b.cc	aa2c <grub_strtoul+0x644>  // b.lo, b.ul, b.last
    aa44:	add	x0, sp, #0x88
    aa48:	sub	x25, x25, x0
    aa4c:	mov	w1, w20
    aa50:	cmp	x25, w20, uxtw
    aa54:	b.cs	a9a8 <grub_strtoul+0x5c0>  // b.hs, b.nlast
    aa58:	sub	x2, x1, x25
    aa5c:	cbnz	w23, a9b0 <grub_strtoul+0x5c8>
    aa60:	sub	x3, x2, #0x1
    aa64:	cbz	x2, a970 <grub_strtoul+0x588>
    aa68:	add	x0, x2, x21
    aa6c:	b	a6e0 <grub_strtoul+0x2f8>
    aa70:	cbz	w23, a988 <grub_strtoul+0x5a0>
    aa74:	mov	x5, #0x0                   	// #0
    aa78:	mov	x0, x21
    aa7c:	cbz	x1, a894 <grub_strtoul+0x4ac>
    aa80:	mov	x0, #0x0                   	// #0
    aa84:	add	x4, x28, x21
    aa88:	b	a860 <grub_strtoul+0x478>
    aa8c:	nop
	...

000000000000aa98 <grub_vprintf>:
    aa98:	stp	x29, x30, [sp, #-352]!
    aa9c:	mov	x29, sp
    aaa0:	stp	x19, x20, [sp, #16]
    aaa4:	str	x21, [sp, #32]
    aaa8:	mov	x21, x0
    aaac:	ldp	x2, x3, [x1]
    aab0:	stp	x2, x3, [sp, #48]
    aab4:	ldp	x2, x3, [x1, #16]
    aab8:	stp	x2, x3, [sp, #64]
    aabc:	add	x2, sp, #0x30
    aac0:	add	x1, sp, #0x50
    aac4:	bl	9e90 <grub_strtoull+0x168>
    aac8:	add	x3, sp, #0x50
    aacc:	mov	x2, x21
    aad0:	mov	x1, #0xff                  	// #255
    aad4:	adrp	x0, 0 <_start>
    aad8:	ldr	x0, [x0]
    aadc:	bl	a3fc <grub_strtoul+0x14>
    aae0:	sxtw	x19, w0
    aae4:	cmp	x19, #0xff
    aae8:	b.hi	ab10 <grub_vprintf+0x78>  // b.pmore
    aaec:	add	x0, sp, #0x50
    aaf0:	bl	982c <grub_main+0x66c>
    aaf4:	adrp	x0, 0 <_start>
    aaf8:	ldr	x0, [x0]
    aafc:	ldr	x1, [x0]
    ab00:	adrp	x0, 0 <_start>
    ab04:	ldr	x0, [x0]
    ab08:	blr	x1
    ab0c:	b	ab68 <grub_vprintf+0xd0>
    ab10:	add	x0, x19, #0x1
    ab14:	bl	5420 <grub_malloc>
    ab18:	mov	x20, x0
    ab1c:	cbz	x0, ab7c <grub_vprintf+0xe4>
    ab20:	add	x3, sp, #0x50
    ab24:	mov	x2, x21
    ab28:	mov	x1, x19
    ab2c:	bl	a3fc <grub_strtoul+0x14>
    ab30:	sxtw	x19, w0
    ab34:	add	x0, sp, #0x50
    ab38:	bl	982c <grub_main+0x66c>
    ab3c:	adrp	x0, 0 <_start>
    ab40:	ldr	x0, [x0]
    ab44:	ldr	x1, [x0]
    ab48:	mov	x0, x20
    ab4c:	blr	x1
    ab50:	adrp	x0, 0 <_start>
    ab54:	ldr	x0, [x0]
    ab58:	cmp	x20, x0
    ab5c:	b.eq	ab68 <grub_vprintf+0xd0>  // b.none
    ab60:	mov	x0, x20
    ab64:	bl	547c <grub_free>
    ab68:	mov	w0, w19
    ab6c:	ldp	x19, x20, [sp, #16]
    ab70:	ldr	x21, [sp, #32]
    ab74:	ldp	x29, x30, [sp], #352
    ab78:	ret
    ab7c:	adrp	x0, 0 <_start>
    ab80:	ldr	x0, [x0]
    ab84:	str	wzr, [x0]
    ab88:	adrp	x0, 0 <_start>
    ab8c:	ldr	x0, [x0]
    ab90:	mov	w1, #0x2e                  	// #46
    ab94:	strb	w1, [x0, #252]
    ab98:	strb	w1, [x0, #253]
    ab9c:	strb	w1, [x0, #254]
    aba0:	strb	wzr, [x0, #255]
    aba4:	b	aaec <grub_vprintf+0x54>
	...

000000000000abc0 <grub_err_printf>:
    abc0:	stp	x29, x30, [sp, #-144]!
    abc4:	mov	x29, sp
    abc8:	str	x1, [sp, #88]
    abcc:	str	x2, [sp, #96]
    abd0:	str	x3, [sp, #104]
    abd4:	str	x4, [sp, #112]
    abd8:	str	x5, [sp, #120]
    abdc:	str	x6, [sp, #128]
    abe0:	str	x7, [sp, #136]
    abe4:	add	x1, sp, #0x90
    abe8:	str	x1, [sp, #48]
    abec:	str	x1, [sp, #56]
    abf0:	add	x1, sp, #0x50
    abf4:	str	x1, [sp, #64]
    abf8:	mov	w1, #0xffffffc8            	// #-56
    abfc:	str	w1, [sp, #72]
    ac00:	str	wzr, [sp, #76]
    ac04:	ldp	x2, x3, [sp, #48]
    ac08:	stp	x2, x3, [sp, #16]
    ac0c:	ldp	x2, x3, [sp, #64]
    ac10:	stp	x2, x3, [sp, #32]
    ac14:	add	x1, sp, #0x10
    ac18:	bl	aa98 <grub_vprintf>
    ac1c:	ldp	x29, x30, [sp], #144
    ac20:	ret

000000000000ac24 <grub_printf_>:
    ac24:	stp	x29, x30, [sp, #-144]!
    ac28:	mov	x29, sp
    ac2c:	str	x1, [sp, #88]
    ac30:	str	x2, [sp, #96]
    ac34:	str	x3, [sp, #104]
    ac38:	str	x4, [sp, #112]
    ac3c:	str	x5, [sp, #120]
    ac40:	str	x6, [sp, #128]
    ac44:	str	x7, [sp, #136]
    ac48:	add	x1, sp, #0x90
    ac4c:	str	x1, [sp, #48]
    ac50:	str	x1, [sp, #56]
    ac54:	add	x1, sp, #0x50
    ac58:	str	x1, [sp, #64]
    ac5c:	mov	w1, #0xffffffc8            	// #-56
    ac60:	str	w1, [sp, #72]
    ac64:	str	wzr, [sp, #76]
    ac68:	adrp	x1, 0 <_start>
    ac6c:	ldr	x1, [x1]
    ac70:	ldr	x1, [x1]
    ac74:	blr	x1
    ac78:	ldp	x2, x3, [sp, #48]
    ac7c:	stp	x2, x3, [sp, #16]
    ac80:	ldp	x2, x3, [sp, #64]
    ac84:	stp	x2, x3, [sp, #32]
    ac88:	add	x1, sp, #0x10
    ac8c:	bl	aa98 <grub_vprintf>
    ac90:	ldp	x29, x30, [sp], #144
    ac94:	ret
	...

000000000000aca0 <grub_real_dprintf>:
    aca0:	stp	x29, x30, [sp, #-160]!
    aca4:	mov	x29, sp
    aca8:	stp	x19, x20, [sp, #16]
    acac:	stp	x21, x22, [sp, #32]
    acb0:	str	x23, [sp, #48]
    acb4:	mov	x23, x0
    acb8:	mov	w22, w1
    acbc:	mov	x20, x2
    acc0:	mov	x21, x3
    acc4:	str	x4, [sp, #128]
    acc8:	str	x5, [sp, #136]
    accc:	str	x6, [sp, #144]
    acd0:	str	x7, [sp, #152]
    acd4:	adrp	x2, 0 <_start>
    acd8:	ldr	x0, [x2]
    acdc:	bl	81d0 <grub_env_get>
    ace0:	cbz	x0, ad60 <grub_real_dprintf+0xc0>
    ace4:	mov	x19, x0
    ace8:	adrp	x0, 0 <_start>
    acec:	ldr	x1, [x0]
    acf0:	mov	x0, x19
    acf4:	bl	9a80 <grub_strword>
    acf8:	cbnz	w0, ad0c <grub_real_dprintf+0x6c>
    acfc:	mov	x1, x20
    ad00:	mov	x0, x19
    ad04:	bl	9a80 <grub_strword>
    ad08:	cbz	w0, ad60 <grub_real_dprintf+0xc0>
    ad0c:	mov	w2, w22
    ad10:	mov	x1, x23
    ad14:	adrp	x0, 0 <_start>
    ad18:	ldr	x0, [x0]
    ad1c:	bl	abc0 <grub_err_printf>
    ad20:	add	x0, sp, #0xa0
    ad24:	str	x0, [sp, #96]
    ad28:	str	x0, [sp, #104]
    ad2c:	add	x0, sp, #0x80
    ad30:	str	x0, [sp, #112]
    ad34:	mov	w0, #0xffffffe0            	// #-32
    ad38:	str	w0, [sp, #120]
    ad3c:	str	wzr, [sp, #124]
    ad40:	ldp	x0, x1, [sp, #96]
    ad44:	stp	x0, x1, [sp, #64]
    ad48:	ldp	x0, x1, [sp, #112]
    ad4c:	stp	x0, x1, [sp, #80]
    ad50:	add	x1, sp, #0x40
    ad54:	mov	x0, x21
    ad58:	bl	aa98 <grub_vprintf>
    ad5c:	bl	c0b0 <grub_refresh>
    ad60:	ldp	x19, x20, [sp, #16]
    ad64:	ldp	x21, x22, [sp, #32]
    ad68:	ldr	x23, [sp, #48]
    ad6c:	ldp	x29, x30, [sp], #160
    ad70:	ret
    ad74:	nop
	...

000000000000ad90 <grub_vsnprintf>:
    ad90:	cbnz	x1, ad9c <grub_vsnprintf+0xc>
    ad94:	mov	w0, #0x0                   	// #0
    ad98:	ret
    ad9c:	stp	x29, x30, [sp, #-352]!
    ada0:	mov	x29, sp
    ada4:	stp	x19, x20, [sp, #16]
    ada8:	str	x21, [sp, #32]
    adac:	mov	x21, x0
    adb0:	mov	x19, x2
    adb4:	sub	x20, x1, #0x1
    adb8:	ldp	x0, x1, [x3]
    adbc:	stp	x0, x1, [sp, #48]
    adc0:	ldp	x0, x1, [x3, #16]
    adc4:	stp	x0, x1, [sp, #64]
    adc8:	add	x2, sp, #0x30
    adcc:	add	x1, sp, #0x50
    add0:	mov	x0, x19
    add4:	bl	9e90 <grub_strtoull+0x168>
    add8:	add	x3, sp, #0x50
    addc:	mov	x2, x19
    ade0:	mov	x1, x20
    ade4:	mov	x0, x21
    ade8:	bl	a3fc <grub_strtoul+0x14>
    adec:	mov	w19, w0
    adf0:	add	x0, sp, #0x50
    adf4:	bl	982c <grub_main+0x66c>
    adf8:	sxtw	x0, w19
    adfc:	cmp	x0, x20
    ae00:	csel	x0, x0, x20, ls  // ls = plast
    ae04:	ldp	x19, x20, [sp, #16]
    ae08:	ldr	x21, [sp, #32]
    ae0c:	ldp	x29, x30, [sp], #352
    ae10:	ret

000000000000ae14 <grub_snprintf>:
    ae14:	stp	x29, x30, [sp, #-128]!
    ae18:	mov	x29, sp
    ae1c:	str	x3, [sp, #88]
    ae20:	str	x4, [sp, #96]
    ae24:	str	x5, [sp, #104]
    ae28:	str	x6, [sp, #112]
    ae2c:	str	x7, [sp, #120]
    ae30:	add	x3, sp, #0x80
    ae34:	str	x3, [sp, #48]
    ae38:	str	x3, [sp, #56]
    ae3c:	add	x3, sp, #0x50
    ae40:	str	x3, [sp, #64]
    ae44:	mov	w3, #0xffffffd8            	// #-40
    ae48:	str	w3, [sp, #72]
    ae4c:	str	wzr, [sp, #76]
    ae50:	ldp	x4, x5, [sp, #48]
    ae54:	stp	x4, x5, [sp, #16]
    ae58:	ldp	x4, x5, [sp, #64]
    ae5c:	stp	x4, x5, [sp, #32]
    ae60:	add	x3, sp, #0x10
    ae64:	bl	ad90 <grub_vsnprintf>
    ae68:	ldp	x29, x30, [sp], #128
    ae6c:	ret

000000000000ae70 <grub_xvasprintf>:
    ae70:	stp	x29, x30, [sp, #-352]!
    ae74:	mov	x29, sp
    ae78:	stp	x19, x20, [sp, #16]
    ae7c:	stp	x21, x22, [sp, #32]
    ae80:	mov	x22, x0
    ae84:	ldp	x2, x3, [x1]
    ae88:	stp	x2, x3, [sp, #48]
    ae8c:	ldp	x2, x3, [x1, #16]
    ae90:	stp	x2, x3, [sp, #64]
    ae94:	add	x2, sp, #0x30
    ae98:	add	x1, sp, #0x50
    ae9c:	bl	9e90 <grub_strtoull+0x168>
    aea0:	mov	x20, #0xff                  	// #255
    aea4:	add	x0, x20, #0x1
    aea8:	bl	5420 <grub_malloc>
    aeac:	mov	x19, x0
    aeb0:	cbz	x0, aee0 <grub_xvasprintf+0x70>
    aeb4:	add	x3, sp, #0x50
    aeb8:	mov	x2, x22
    aebc:	mov	x1, x20
    aec0:	bl	a3fc <grub_strtoul+0x14>
    aec4:	sxtw	x21, w0
    aec8:	cmp	x20, w0, sxtw
    aecc:	b.cs	aefc <grub_xvasprintf+0x8c>  // b.hs, b.nlast
    aed0:	mov	x0, x19
    aed4:	bl	547c <grub_free>
    aed8:	mov	x20, x21
    aedc:	b	aea4 <grub_xvasprintf+0x34>
    aee0:	add	x0, sp, #0x50
    aee4:	bl	982c <grub_main+0x66c>
    aee8:	mov	x0, x19
    aeec:	ldp	x19, x20, [sp, #16]
    aef0:	ldp	x21, x22, [sp, #32]
    aef4:	ldp	x29, x30, [sp], #352
    aef8:	ret
    aefc:	add	x0, sp, #0x50
    af00:	bl	982c <grub_main+0x66c>
    af04:	b	aee8 <grub_xvasprintf+0x78>

000000000000af08 <grub_xasprintf>:
    af08:	stp	x29, x30, [sp, #-144]!
    af0c:	mov	x29, sp
    af10:	str	x1, [sp, #88]
    af14:	str	x2, [sp, #96]
    af18:	str	x3, [sp, #104]
    af1c:	str	x4, [sp, #112]
    af20:	str	x5, [sp, #120]
    af24:	str	x6, [sp, #128]
    af28:	str	x7, [sp, #136]
    af2c:	add	x1, sp, #0x90
    af30:	str	x1, [sp, #48]
    af34:	str	x1, [sp, #56]
    af38:	add	x1, sp, #0x50
    af3c:	str	x1, [sp, #64]
    af40:	mov	w1, #0xffffffc8            	// #-56
    af44:	str	w1, [sp, #72]
    af48:	str	wzr, [sp, #76]
    af4c:	ldp	x2, x3, [sp, #48]
    af50:	stp	x2, x3, [sp, #16]
    af54:	ldp	x2, x3, [sp, #64]
    af58:	stp	x2, x3, [sp, #32]
    af5c:	add	x1, sp, #0x10
    af60:	bl	ae70 <grub_xvasprintf>
    af64:	ldp	x29, x30, [sp], #144
    af68:	ret

000000000000af6c <grub_fatal>:
    af6c:	stp	x29, x30, [sp, #-144]!
    af70:	mov	x29, sp
    af74:	str	x1, [sp, #88]
    af78:	str	x2, [sp, #96]
    af7c:	str	x3, [sp, #104]
    af80:	str	x4, [sp, #112]
    af84:	str	x5, [sp, #120]
    af88:	str	x6, [sp, #128]
    af8c:	str	x7, [sp, #136]
    af90:	add	x1, sp, #0x90
    af94:	str	x1, [sp, #48]
    af98:	str	x1, [sp, #56]
    af9c:	add	x1, sp, #0x50
    afa0:	str	x1, [sp, #64]
    afa4:	mov	w1, #0xffffffc8            	// #-56
    afa8:	str	w1, [sp, #72]
    afac:	str	wzr, [sp, #76]
    afb0:	adrp	x1, 0 <_start>
    afb4:	ldr	x1, [x1]
    afb8:	ldr	x1, [x1]
    afbc:	blr	x1
    afc0:	ldp	x2, x3, [sp, #48]
    afc4:	stp	x2, x3, [sp, #16]
    afc8:	ldp	x2, x3, [sp, #64]
    afcc:	stp	x2, x3, [sp, #32]
    afd0:	add	x1, sp, #0x10
    afd4:	bl	aa98 <grub_vprintf>
    afd8:	bl	c0b0 <grub_refresh>
    afdc:	adrp	x0, 0 <_start>
    afe0:	ldr	x0, [x0]
    afe4:	bl	abc0 <grub_err_printf>
    afe8:	adrp	x0, 0 <_start>
    afec:	ldr	x0, [x0]
    aff0:	ldr	x0, [x0]
    aff4:	cbz	x0, b008 <grub_fatal+0x9c>
    aff8:	adrp	x0, 0 <_start>
    affc:	ldr	x0, [x0]
    b000:	bl	abc0 <grub_err_printf>
    b004:	bl	c100 <grub_getkey>
    b008:	bl	2230 <grub_exit>
    b00c:	nop
	...
    b030:	stp	x29, x30, [sp, #-48]!
    b034:	mov	x29, sp
    b038:	str	x21, [sp, #32]
    b03c:	mov	x21, x0
    b040:	sub	w0, w3, #0x6
    b044:	sub	w3, w3, #0x9
    b048:	cmp	w0, #0x1
    b04c:	ccmp	w3, #0x1, #0x0, hi  // hi = pmore
    b050:	b.hi	b078 <grub_fatal+0x10c>  // b.pmore
    b054:	stp	x19, x20, [sp, #16]
    b058:	mov	x19, x1
    b05c:	mov	x20, x2
    b060:	sub	w0, w4, #0x6
    b064:	sub	w4, w4, #0x9
    b068:	cmp	w0, #0x1
    b06c:	ccmp	w4, #0x1, #0x0, hi  // hi = pmore
    b070:	b.hi	b084 <grub_fatal+0x118>  // b.pmore
    b074:	ldp	x19, x20, [sp, #16]
    b078:	ldr	x21, [sp, #32]
    b07c:	ldp	x29, x30, [sp], #48
    b080:	ret
    b084:	ldr	x0, [x2]
    b088:	add	x1, x0, #0x1
    b08c:	str	x1, [x2]
    b090:	strb	wzr, [x0]
    b094:	mov	x0, x21
    b098:	bl	81d0 <grub_env_get>
    b09c:	mov	x1, x0
    b0a0:	str	x21, [x20]
    b0a4:	cbz	x0, b0d4 <grub_fatal+0x168>
    b0a8:	ldrb	w0, [x0]
    b0ac:	cbz	w0, b0dc <grub_fatal+0x170>
    b0b0:	ldr	x0, [x19]
    b0b4:	add	x2, x0, #0x1
    b0b8:	str	x2, [x19]
    b0bc:	ldrb	w2, [x1]
    b0c0:	strb	w2, [x0]
    b0c4:	ldrb	w0, [x1, #1]!
    b0c8:	cbnz	w0, b0b0 <grub_fatal+0x144>
    b0cc:	ldp	x19, x20, [sp, #16]
    b0d0:	b	b078 <grub_fatal+0x10c>
    b0d4:	ldp	x19, x20, [sp, #16]
    b0d8:	b	b078 <grub_fatal+0x10c>
    b0dc:	ldp	x19, x20, [sp, #16]
    b0e0:	b	b078 <grub_fatal+0x10c>
    b0e4:	stp	x29, x30, [sp, #-48]!
    b0e8:	mov	x29, sp
    b0ec:	str	x21, [sp, #32]
    b0f0:	mov	x21, x0
    b0f4:	ldr	x0, [x2]
    b0f8:	cbz	x0, b140 <grub_fatal+0x1d4>
    b0fc:	stp	x19, x20, [sp, #16]
    b100:	mov	x19, x2
    b104:	mov	w1, #0xa                   	// #10
    b108:	bl	99d0 <grub_strchr>
    b10c:	mov	x20, x0
    b110:	cbz	x0, b148 <grub_fatal+0x1dc>
    b114:	ldr	x0, [x19]
    b118:	sub	x1, x20, x0
    b11c:	bl	9c54 <grub_strndup>
    b120:	str	x0, [x21]
    b124:	add	x20, x20, #0x1
    b128:	str	x20, [x19]
    b12c:	ldp	x19, x20, [sp, #16]
    b130:	mov	w0, #0x0                   	// #0
    b134:	ldr	x21, [sp, #32]
    b138:	ldp	x29, x30, [sp], #48
    b13c:	ret
    b140:	str	xzr, [x21]
    b144:	b	b130 <grub_fatal+0x1c4>
    b148:	ldr	x0, [x19]
    b14c:	bl	9c18 <grub_strdup>
    b150:	str	x0, [x21]
    b154:	b	b128 <grub_fatal+0x1bc>

000000000000b158 <grub_parser_cmdline_state>:
    b158:	stp	x29, x30, [sp, #-80]!
    b15c:	mov	x29, sp
    b160:	stp	x19, x20, [sp, #16]
    b164:	stp	x21, x22, [sp, #32]
    b168:	stp	x23, x24, [sp, #48]
    b16c:	mov	w20, w0
    b170:	and	w21, w1, #0xff
    b174:	mov	x23, x2
    b178:	str	w0, [sp, #68]
    b17c:	mov	w0, #0x1                   	// #1
    b180:	str	w0, [sp, #76]
    b184:	adrp	x0, 0 <_start>
    b188:	ldr	x0, [x0]
    b18c:	ldr	w1, [x0]
    b190:	cbz	w1, b220 <grub_parser_cmdline_state+0xc8>
    b194:	adrp	x0, 0 <_start>
    b198:	ldr	x19, [x0]
    b19c:	and	w22, w21, #0xffffffdf
    b1a0:	sub	w22, w22, #0x41
    b1a4:	and	w22, w22, #0xff
    b1a8:	sub	w24, w21, #0x30
    b1ac:	b	b1c0 <grub_parser_cmdline_state+0x68>
    b1b0:	ldrb	w0, [x19, #8]
    b1b4:	cbz	w0, b1f0 <grub_parser_cmdline_state+0x98>
    b1b8:	ldr	w1, [x19, #16]!
    b1bc:	cbz	w1, b220 <grub_parser_cmdline_state+0xc8>
    b1c0:	cmp	w20, w1
    b1c4:	b.ne	b1b8 <grub_parser_cmdline_state+0x60>  // b.any
    b1c8:	ldrb	w0, [x19, #8]
    b1cc:	cmp	w0, w21
    b1d0:	b.eq	b1f0 <grub_parser_cmdline_state+0x98>  // b.none
    b1d4:	bl	9a0c <grub_isspace>
    b1d8:	cbz	w0, b1b0 <grub_parser_cmdline_state+0x58>
    b1dc:	cmp	w22, #0x19
    b1e0:	b.ls	b1b0 <grub_parser_cmdline_state+0x58>  // b.plast
    b1e4:	cmp	w21, #0x5f
    b1e8:	ccmp	w24, #0x9, #0x0, ne  // ne = any
    b1ec:	b.ls	b1b0 <grub_parser_cmdline_state+0x58>  // b.plast
    b1f0:	ldr	w0, [x19]
    b1f4:	cbz	w0, b220 <grub_parser_cmdline_state+0xc8>
    b1f8:	ldr	w0, [x19, #12]
    b1fc:	cmp	w0, #0x0
    b200:	csel	w21, w21, wzr, ne  // ne = any
    b204:	strb	w21, [x23]
    b208:	ldr	w0, [x19, #4]
    b20c:	ldp	x19, x20, [sp, #16]
    b210:	ldp	x21, x22, [sp, #32]
    b214:	ldp	x23, x24, [sp, #48]
    b218:	ldp	x29, x30, [sp], #80
    b21c:	ret
    b220:	add	x19, sp, #0x40
    b224:	b	b204 <grub_parser_cmdline_state+0xac>
	...

000000000000b230 <grub_parser_split_cmdline>:
    b230:	sub	sp, sp, #0x540
    b234:	stp	x29, x30, [sp]
    b238:	mov	x29, sp
    b23c:	stp	x19, x20, [sp, #16]
    b240:	stp	x21, x22, [sp, #32]
    b244:	stp	x23, x24, [sp, #48]
    b248:	str	x25, [sp, #64]
    b24c:	mov	x23, x1
    b250:	mov	x24, x2
    b254:	mov	x21, x3
    b258:	mov	x22, x4
    b25c:	add	x1, sp, #0x140
    b260:	str	x1, [sp, #312]
    b264:	str	x0, [sp, #304]
    b268:	add	x0, sp, #0x68
    b26c:	str	x0, [sp, #96]
    b270:	str	wzr, [x3]
    b274:	mov	w20, #0x1                   	// #1
    b278:	mov	x25, x1
    b27c:	ldr	x0, [sp, #304]
    b280:	cbz	x0, b28c <grub_parser_split_cmdline+0x5c>
    b284:	ldrb	w1, [x0]
    b288:	cbnz	w1, b508 <grub_parser_split_cmdline+0x2d8>
    b28c:	cbz	x23, b460 <grub_parser_split_cmdline+0x230>
    b290:	mov	x2, x24
    b294:	mov	w1, #0x1                   	// #1
    b298:	add	x0, sp, #0x130
    b29c:	blr	x23
    b2a0:	ldr	x0, [sp, #304]
    b2a4:	cbz	x0, b468 <grub_parser_split_cmdline+0x238>
    b2a8:	ldrb	w1, [x0]
    b2ac:	cbnz	w1, b3b4 <grub_parser_split_cmdline+0x184>
    b2b0:	mov	w19, w20
    b2b4:	cmp	w19, #0x1
    b2b8:	b.eq	b2d0 <grub_parser_split_cmdline+0xa0>  // b.none
    b2bc:	sub	w1, w19, #0x6
    b2c0:	sub	w0, w19, #0x9
    b2c4:	cmp	w1, #0x1
    b2c8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    b2cc:	b.hi	b370 <grub_parser_split_cmdline+0x140>  // b.pmore
    b2d0:	mov	w4, #0x1                   	// #1
    b2d4:	mov	w3, w19
    b2d8:	add	x2, sp, #0x60
    b2dc:	add	x1, sp, #0x138
    b2e0:	add	x0, sp, #0x68
    b2e4:	bl	b030 <grub_fatal+0xc4>
    b2e8:	ldr	x0, [sp, #312]
    b2ec:	add	x1, sp, #0x140
    b2f0:	cmp	x0, x1
    b2f4:	b.eq	b318 <grub_parser_split_cmdline+0xe8>  // b.none
    b2f8:	ldurb	w1, [x0, #-1]
    b2fc:	cbz	w1, b318 <grub_parser_split_cmdline+0xe8>
    b300:	add	x1, x0, #0x1
    b304:	str	x1, [sp, #312]
    b308:	strb	wzr, [x0]
    b30c:	ldr	w0, [x21]
    b310:	add	w0, w0, #0x1
    b314:	str	w0, [x21]
    b318:	add	x0, sp, #0x140
    b31c:	ldr	x1, [sp, #312]
    b320:	sub	x0, x1, x0
    b324:	bl	5420 <grub_malloc>
    b328:	mov	x19, x0
    b32c:	cbz	x0, b470 <grub_parser_split_cmdline+0x240>
    b330:	add	x1, sp, #0x140
    b334:	ldr	x2, [sp, #312]
    b338:	sub	x2, x2, x1
    b33c:	bl	9854 <grub_memmove>
    b340:	ldr	w0, [x21]
    b344:	add	w0, w0, #0x1
    b348:	sbfiz	x0, x0, #3, #32
    b34c:	bl	5420 <grub_malloc>
    b350:	str	x0, [x22]
    b354:	cbz	x0, b480 <grub_parser_split_cmdline+0x250>
    b358:	str	x19, [sp, #312]
    b35c:	ldr	w0, [x21]
    b360:	cmp	w0, #0x0
    b364:	b.le	b500 <grub_parser_split_cmdline+0x2d0>
    b368:	mov	x3, #0x0                   	// #0
    b36c:	b	b4b0 <grub_parser_split_cmdline+0x280>
    b370:	mov	w20, w19
    b374:	b	b27c <grub_parser_split_cmdline+0x4c>
    b378:	cmp	w19, #0x1
    b37c:	ccmp	w20, #0x2, #0x4, eq  // eq = none
    b380:	b.ne	b40c <grub_parser_split_cmdline+0x1dc>  // b.any
    b384:	ldrb	w0, [sp, #95]
    b388:	cbz	w0, b39c <grub_parser_split_cmdline+0x16c>
    b38c:	ldr	x1, [sp, #312]
    b390:	add	x2, x1, #0x1
    b394:	str	x2, [sp, #312]
    b398:	strb	w0, [x1]
    b39c:	ldr	x0, [sp, #304]
    b3a0:	add	x1, x0, #0x1
    b3a4:	str	x1, [sp, #304]
    b3a8:	ldrb	w1, [x0, #1]
    b3ac:	cbz	w1, b2b4 <grub_parser_split_cmdline+0x84>
    b3b0:	mov	w20, w19
    b3b4:	add	x2, sp, #0x5f
    b3b8:	mov	w0, w20
    b3bc:	bl	b158 <grub_parser_cmdline_state>
    b3c0:	mov	w19, w0
    b3c4:	mov	w4, w0
    b3c8:	mov	w3, w20
    b3cc:	add	x2, sp, #0x60
    b3d0:	add	x1, sp, #0x138
    b3d4:	add	x0, sp, #0x68
    b3d8:	bl	b030 <grub_fatal+0xc4>
    b3dc:	sub	w1, w19, #0x9
    b3e0:	sub	w0, w19, #0x6
    b3e4:	cmp	w1, #0x1
    b3e8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    b3ec:	b.hi	b378 <grub_parser_split_cmdline+0x148>  // b.pmore
    b3f0:	ldrb	w0, [sp, #95]
    b3f4:	cbz	w0, b39c <grub_parser_split_cmdline+0x16c>
    b3f8:	ldr	x1, [sp, #96]
    b3fc:	add	x2, x1, #0x1
    b400:	str	x2, [sp, #96]
    b404:	strb	w0, [x1]
    b408:	b	b39c <grub_parser_split_cmdline+0x16c>
    b40c:	ldrb	w0, [sp, #95]
    b410:	bl	9a0c <grub_isspace>
    b414:	cbz	w0, b384 <grub_parser_split_cmdline+0x154>
    b418:	ldr	x0, [sp, #312]
    b41c:	cmp	x0, x25
    b420:	b.eq	b444 <grub_parser_split_cmdline+0x214>  // b.none
    b424:	ldurb	w1, [x0, #-1]
    b428:	cbz	w1, b444 <grub_parser_split_cmdline+0x214>
    b42c:	add	x1, x0, #0x1
    b430:	str	x1, [sp, #312]
    b434:	strb	wzr, [x0]
    b438:	ldr	w0, [x21]
    b43c:	add	w0, w0, #0x1
    b440:	str	w0, [x21]
    b444:	ldr	x0, [sp, #304]
    b448:	add	x1, x0, #0x1
    b44c:	str	x1, [sp, #304]
    b450:	ldrb	w1, [x0, #1]
    b454:	cbnz	w1, b3b0 <grub_parser_split_cmdline+0x180>
    b458:	mov	w19, #0x1                   	// #1
    b45c:	b	b2d0 <grub_parser_split_cmdline+0xa0>
    b460:	mov	w19, w20
    b464:	b	b2d0 <grub_parser_split_cmdline+0xa0>
    b468:	mov	w19, w20
    b46c:	b	b2d0 <grub_parser_split_cmdline+0xa0>
    b470:	adrp	x0, 0 <_start>
    b474:	ldr	x0, [x0]
    b478:	ldr	w0, [x0]
    b47c:	b	b4e4 <grub_parser_split_cmdline+0x2b4>
    b480:	mov	x0, x19
    b484:	bl	547c <grub_free>
    b488:	adrp	x0, 0 <_start>
    b48c:	ldr	x0, [x0]
    b490:	ldr	w0, [x0]
    b494:	b	b4e4 <grub_parser_split_cmdline+0x2b4>
    b498:	add	x2, x2, #0x1
    b49c:	str	x2, [sp, #312]
    b4a0:	add	x3, x3, #0x1
    b4a4:	ldr	w0, [x21]
    b4a8:	cmp	w0, w3
    b4ac:	b.le	b4e0 <grub_parser_split_cmdline+0x2b0>
    b4b0:	ldr	x0, [x22]
    b4b4:	ldr	x1, [sp, #312]
    b4b8:	str	x1, [x0, x3, lsl #3]
    b4bc:	ldr	x2, [sp, #312]
    b4c0:	ldrb	w0, [x2]
    b4c4:	cbz	w0, b498 <grub_parser_split_cmdline+0x268>
    b4c8:	add	x0, x2, #0x1
    b4cc:	mov	x2, x0
    b4d0:	str	x0, [sp, #312]
    b4d4:	ldrb	w1, [x0], #1
    b4d8:	cbnz	w1, b4cc <grub_parser_split_cmdline+0x29c>
    b4dc:	b	b498 <grub_parser_split_cmdline+0x268>
    b4e0:	mov	w0, #0x0                   	// #0
    b4e4:	ldp	x19, x20, [sp, #16]
    b4e8:	ldp	x21, x22, [sp, #32]
    b4ec:	ldp	x23, x24, [sp, #48]
    b4f0:	ldr	x25, [sp, #64]
    b4f4:	ldp	x29, x30, [sp]
    b4f8:	add	sp, sp, #0x540
    b4fc:	ret
    b500:	mov	w0, #0x0                   	// #0
    b504:	b	b4e4 <grub_parser_split_cmdline+0x2b4>
    b508:	ldrb	w1, [x0]
    b50c:	b	b3b4 <grub_parser_split_cmdline+0x184>
	...

000000000000b518 <grub_parser_execute>:
    b518:	stp	x29, x30, [sp, #-64]!
    b51c:	mov	x29, sp
    b520:	str	x0, [sp, #40]
    b524:	cbz	x0, b568 <grub_parser_execute+0x50>
    b528:	str	x19, [sp, #16]
    b52c:	adrp	x19, 0 <_start>
    b530:	add	x2, sp, #0x28
    b534:	mov	w1, #0x0                   	// #0
    b538:	add	x0, sp, #0x38
    b53c:	bl	b0e4 <grub_fatal+0x178>
    b540:	add	x2, sp, #0x28
    b544:	ldr	x1, [x19]
    b548:	ldr	x0, [sp, #56]
    b54c:	bl	bbb0 <grub_rescue_parse_line>
    b550:	ldr	x0, [sp, #56]
    b554:	bl	547c <grub_free>
    b558:	bl	8620 <grub_print_error>
    b55c:	ldr	x0, [sp, #40]
    b560:	cbnz	x0, b530 <grub_parser_execute+0x18>
    b564:	ldr	x19, [sp, #16]
    b568:	adrp	x0, 0 <_start>
    b56c:	ldr	x0, [x0]
    b570:	ldr	w0, [x0]
    b574:	ldp	x29, x30, [sp], #64
    b578:	ret
    b57c:	nop
	...

000000000000b590 <grub_partition_probe>:
    b590:	stp	x29, x30, [sp, #-128]!
    b594:	mov	x29, sp
    b598:	stp	x21, x22, [sp, #32]
    b59c:	stp	x23, x24, [sp, #48]
    b5a0:	mov	x22, x0
    b5a4:	ldr	x23, [x0, #40]
    b5a8:	str	x1, [sp, #120]
    b5ac:	ldrb	w0, [x1]
    b5b0:	cbz	w0, b5d0 <grub_partition_probe+0x40>
    b5b4:	stp	x19, x20, [sp, #16]
    b5b8:	stp	x25, x26, [sp, #64]
    b5bc:	stp	x27, x28, [sp, #80]
    b5c0:	mov	x20, x1
    b5c4:	mov	x21, x23
    b5c8:	adrp	x24, 0 <_start>
    b5cc:	b	b654 <grub_partition_probe+0xc4>
    b5d0:	mov	x0, x23
    b5d4:	b	b744 <grub_partition_probe+0x1b4>
    b5d8:	ldr	x0, [sp, #112]
    b5dc:	bl	547c <grub_free>
    b5e0:	str	x23, [x22, #40]
    b5e4:	ldr	x0, [x28]
    b5e8:	ldr	w0, [x0]
    b5ec:	cmp	w0, #0x13
    b5f0:	b.ne	b710 <grub_partition_probe+0x180>  // b.any
    b5f4:	ldr	x0, [x28]
    b5f8:	str	wzr, [x0]
    b5fc:	ldr	x25, [x25]
    b600:	cbnz	x25, b6b0 <grub_partition_probe+0x120>
    b604:	b	b710 <grub_partition_probe+0x180>
    b608:	ldr	x25, [x25]
    b60c:	cbnz	x25, b6b0 <grub_partition_probe+0x120>
    b610:	b	b710 <grub_partition_probe+0x180>
    b614:	mov	x0, x21
    b618:	ldp	x19, x20, [sp, #16]
    b61c:	ldp	x25, x26, [sp, #64]
    b620:	ldp	x27, x28, [sp, #80]
    b624:	b	b744 <grub_partition_probe+0x1b4>
    b628:	str	x21, [x0, #40]
    b62c:	ldr	x1, [sp, #120]
    b630:	cbz	x1, b738 <grub_partition_probe+0x1a8>
    b634:	ldrb	w2, [x1]
    b638:	cmp	w2, #0x2c
    b63c:	b.ne	b754 <grub_partition_probe+0x1c4>  // b.any
    b640:	add	x20, x1, #0x1
    b644:	str	x20, [sp, #120]
    b648:	ldrb	w1, [x1, #1]
    b64c:	cbz	w1, b764 <grub_partition_probe+0x1d4>
    b650:	mov	x21, x0
    b654:	ldr	x19, [sp, #120]
    b658:	ldrb	w2, [x19]
    b65c:	cbz	w2, b684 <grub_partition_probe+0xf4>
    b660:	and	w2, w2, #0xffffffdf
    b664:	sub	w2, w2, #0x41
    b668:	and	w2, w2, #0xff
    b66c:	cmp	w2, #0x19
    b670:	b.hi	b684 <grub_partition_probe+0xf4>  // b.pmore
    b674:	add	x19, x19, #0x1
    b678:	str	x19, [sp, #120]
    b67c:	ldrb	w2, [x19]
    b680:	cbnz	w2, b660 <grub_partition_probe+0xd0>
    b684:	mov	w2, #0x0                   	// #0
    b688:	add	x1, sp, #0x78
    b68c:	mov	x0, x19
    b690:	bl	a3e8 <grub_strtoul>
    b694:	sub	w26, w0, #0x1
    b698:	adrp	x0, 0 <_start>
    b69c:	ldr	x0, [x0]
    b6a0:	ldr	x25, [x0]
    b6a4:	cbz	x25, b710 <grub_partition_probe+0x180>
    b6a8:	adrp	x28, 0 <_start>
    b6ac:	sub	x27, x19, x20
    b6b0:	cmp	x19, x20
    b6b4:	b.eq	b6d8 <grub_partition_probe+0x148>  // b.none
    b6b8:	mov	x2, x27
    b6bc:	mov	x1, x20
    b6c0:	ldr	x0, [x25, #16]
    b6c4:	bl	9984 <grub_strncmp>
    b6c8:	cbnz	w0, b608 <grub_partition_probe+0x78>
    b6cc:	ldr	x0, [x25, #16]
    b6d0:	ldrb	w0, [x0, x27]
    b6d4:	cbnz	w0, b608 <grub_partition_probe+0x78>
    b6d8:	str	x21, [x22, #40]
    b6dc:	str	w26, [sp, #104]
    b6e0:	str	xzr, [sp, #112]
    b6e4:	ldr	x3, [x25, #24]
    b6e8:	add	x2, sp, #0x68
    b6ec:	ldr	x1, [x24]
    b6f0:	mov	x0, x22
    b6f4:	blr	x3
    b6f8:	ldr	x0, [x28]
    b6fc:	ldr	w0, [x0]
    b700:	cbnz	w0, b5d8 <grub_partition_probe+0x48>
    b704:	ldr	x0, [sp, #112]
    b708:	str	x23, [x22, #40]
    b70c:	cbnz	x0, b628 <grub_partition_probe+0x98>
    b710:	cbz	x21, b614 <grub_partition_probe+0x84>
    b714:	mov	x0, x21
    b718:	ldr	x21, [x21, #40]
    b71c:	bl	547c <grub_free>
    b720:	cbnz	x21, b714 <grub_partition_probe+0x184>
    b724:	mov	x0, x21
    b728:	ldp	x19, x20, [sp, #16]
    b72c:	ldp	x25, x26, [sp, #64]
    b730:	ldp	x27, x28, [sp, #80]
    b734:	b	b744 <grub_partition_probe+0x1b4>
    b738:	ldp	x19, x20, [sp, #16]
    b73c:	ldp	x25, x26, [sp, #64]
    b740:	ldp	x27, x28, [sp, #80]
    b744:	ldp	x21, x22, [sp, #32]
    b748:	ldp	x23, x24, [sp, #48]
    b74c:	ldp	x29, x30, [sp], #128
    b750:	ret
    b754:	ldp	x19, x20, [sp, #16]
    b758:	ldp	x25, x26, [sp, #64]
    b75c:	ldp	x27, x28, [sp, #80]
    b760:	b	b744 <grub_partition_probe+0x1b4>
    b764:	ldp	x19, x20, [sp, #16]
    b768:	ldp	x25, x26, [sp, #64]
    b76c:	ldp	x27, x28, [sp, #80]
    b770:	b	b744 <grub_partition_probe+0x1b4>
    b774:	nop
	...

000000000000b790 <grub_partition_iterate>:
    b790:	stp	x29, x30, [sp, #-80]!
    b794:	mov	x29, sp
    b798:	stp	x19, x20, [sp, #16]
    b79c:	mov	x20, x0
    b7a0:	str	wzr, [sp, #56]
    b7a4:	str	x1, [sp, #64]
    b7a8:	str	x2, [sp, #72]
    b7ac:	adrp	x0, 0 <_start>
    b7b0:	ldr	x0, [x0]
    b7b4:	ldr	x19, [x0]
    b7b8:	cbz	x19, b80c <grub_partition_iterate+0x7c>
    b7bc:	stp	x21, x22, [sp, #32]
    b7c0:	adrp	x21, 0 <_start>
    b7c4:	adrp	x22, 0 <_start>
    b7c8:	b	b7dc <grub_partition_iterate+0x4c>
    b7cc:	ldr	w1, [sp, #56]
    b7d0:	cbnz	w1, b808 <grub_partition_iterate+0x78>
    b7d4:	ldr	x19, [x19]
    b7d8:	cbz	x19, b800 <grub_partition_iterate+0x70>
    b7dc:	ldr	x3, [x19, #24]
    b7e0:	add	x2, sp, #0x38
    b7e4:	ldr	x1, [x21]
    b7e8:	mov	x0, x20
    b7ec:	blr	x3
    b7f0:	cbz	w0, b7cc <grub_partition_iterate+0x3c>
    b7f4:	ldr	x0, [x22]
    b7f8:	str	wzr, [x0]
    b7fc:	b	b7cc <grub_partition_iterate+0x3c>
    b800:	ldp	x21, x22, [sp, #32]
    b804:	b	b80c <grub_partition_iterate+0x7c>
    b808:	ldp	x21, x22, [sp, #32]
    b80c:	ldr	w0, [sp, #56]
    b810:	ldp	x19, x20, [sp, #16]
    b814:	ldp	x29, x30, [sp], #80
    b818:	ret
    b81c:	nop
	...

000000000000b838 <grub_partition_get_name>:
    b838:	stp	x29, x30, [sp, #-112]!
    b83c:	mov	x29, sp
    b840:	stp	x19, x20, [sp, #16]
    b844:	stp	x21, x22, [sp, #32]
    b848:	stp	x23, x24, [sp, #48]
    b84c:	mov	x20, x0
    b850:	mov	x19, x0
    b854:	mov	x21, #0x0                   	// #0
    b858:	cbz	x0, b938 <grub_partition_get_name+0x100>
    b85c:	stp	x25, x26, [sp, #64]
    b860:	ldr	x0, [x19, #48]
    b864:	ldr	x0, [x0, #16]
    b868:	bl	9bf4 <grub_strlen>
    b86c:	add	x0, x0, #0x1c
    b870:	add	x21, x21, x0
    b874:	ldr	x19, [x19, #40]
    b878:	cbnz	x19, b860 <grub_partition_get_name+0x28>
    b87c:	add	x0, x21, #0x1
    b880:	bl	5420 <grub_malloc>
    b884:	mov	x24, x0
    b888:	cbz	x0, b94c <grub_partition_get_name+0x114>
    b88c:	add	x25, x0, x21
    b890:	strb	wzr, [x0, x21]
    b894:	mov	x26, x25
    b898:	adrp	x23, 0 <_start>
    b89c:	mov	x22, #0x1b                  	// #27
    b8a0:	mov	w21, #0x2c                  	// #44
    b8a4:	ldr	w3, [x20]
    b8a8:	add	w3, w3, #0x1
    b8ac:	ldr	x2, [x23]
    b8b0:	mov	x1, x22
    b8b4:	add	x0, sp, #0x50
    b8b8:	bl	ae14 <grub_snprintf>
    b8bc:	add	x0, sp, #0x50
    b8c0:	bl	9bf4 <grub_strlen>
    b8c4:	mov	x2, x0
    b8c8:	sub	x19, x26, x0
    b8cc:	add	x1, sp, #0x50
    b8d0:	mov	x0, x19
    b8d4:	bl	9854 <grub_memmove>
    b8d8:	ldr	x0, [x20, #48]
    b8dc:	ldr	x0, [x0, #16]
    b8e0:	bl	9bf4 <grub_strlen>
    b8e4:	mov	x2, x0
    b8e8:	sub	x19, x19, x0
    b8ec:	ldr	x0, [x20, #48]
    b8f0:	ldr	x1, [x0, #16]
    b8f4:	mov	x0, x19
    b8f8:	bl	9854 <grub_memmove>
    b8fc:	sub	x26, x19, #0x1
    b900:	sturb	w21, [x19, #-1]
    b904:	ldr	x20, [x20, #40]
    b908:	cbnz	x20, b8a4 <grub_partition_get_name+0x6c>
    b90c:	sub	x2, x25, x26
    b910:	mov	x1, x19
    b914:	mov	x0, x24
    b918:	bl	9854 <grub_memmove>
    b91c:	ldp	x25, x26, [sp, #64]
    b920:	mov	x0, x24
    b924:	ldp	x19, x20, [sp, #16]
    b928:	ldp	x21, x22, [sp, #32]
    b92c:	ldp	x23, x24, [sp, #48]
    b930:	ldp	x29, x30, [sp], #112
    b934:	ret
    b938:	adrp	x0, 0 <_start>
    b93c:	ldr	x0, [x0]
    b940:	bl	9c18 <grub_strdup>
    b944:	mov	x24, x0
    b948:	b	b920 <grub_partition_get_name+0xe8>
    b94c:	ldp	x25, x26, [sp, #64]
    b950:	b	b920 <grub_partition_get_name+0xe8>
    b954:	nop
	...
    b968:	ldr	x2, [x0, #40]
    b96c:	cbz	x2, ba08 <grub_partition_get_name+0x1d0>
    b970:	stp	x29, x30, [sp, #-48]!
    b974:	mov	x29, sp
    b978:	stp	x19, x20, [sp, #16]
    b97c:	mov	x20, x0
    b980:	mov	x19, x1
    b984:	ldr	x1, [x1, #8]
    b988:	ldr	x0, [x19, #16]
    b98c:	add	x1, x1, x0
    b990:	ldr	x3, [x2, #16]
    b994:	mov	w0, #0x1                   	// #1
    b998:	cmp	x1, x3
    b99c:	b.hi	b9ac <grub_partition_get_name+0x174>  // b.pmore
    b9a0:	ldp	x19, x20, [sp, #16]
    b9a4:	ldp	x29, x30, [sp], #48
    b9a8:	ret
    b9ac:	str	x21, [sp, #32]
    b9b0:	mov	x0, x2
    b9b4:	bl	b838 <grub_partition_get_name>
    b9b8:	mov	x21, x0
    b9bc:	ldr	w5, [x19]
    b9c0:	ldr	x0, [x19, #48]
    b9c4:	mov	x7, x21
    b9c8:	ldr	x6, [x20]
    b9cc:	add	w5, w5, #0x1
    b9d0:	ldr	x4, [x0, #16]
    b9d4:	adrp	x0, 0 <_start>
    b9d8:	ldr	x3, [x0]
    b9dc:	adrp	x0, 0 <_start>
    b9e0:	ldr	x2, [x0]
    b9e4:	mov	w1, #0x30                  	// #48
    b9e8:	adrp	x0, 0 <_start>
    b9ec:	ldr	x0, [x0]
    b9f0:	bl	aca0 <grub_real_dprintf>
    b9f4:	mov	x0, x21
    b9f8:	bl	547c <grub_free>
    b9fc:	mov	w0, #0x0                   	// #0
    ba00:	ldr	x21, [sp, #32]
    ba04:	b	b9a0 <grub_partition_get_name+0x168>
    ba08:	mov	w0, #0x1                   	// #1
    ba0c:	ret
	...
    ba28:	stp	x29, x30, [sp, #-32]!
    ba2c:	mov	x29, sp
    ba30:	stp	x19, x20, [sp, #16]
    ba34:	mov	x19, x1
    ba38:	mov	x20, x2
    ba3c:	ldr	w2, [x2]
    ba40:	ldr	w1, [x1]
    ba44:	cmp	w2, w1
    ba48:	b.eq	ba5c <grub_partition_get_name+0x224>  // b.none
    ba4c:	mov	w0, #0x0                   	// #0
    ba50:	ldp	x19, x20, [sp, #16]
    ba54:	ldp	x29, x30, [sp], #32
    ba58:	ret
    ba5c:	mov	x1, x19
    ba60:	bl	b968 <grub_partition_get_name+0x130>
    ba64:	cbz	w0, ba50 <grub_partition_get_name+0x218>
    ba68:	mov	x0, #0x40                  	// #64
    ba6c:	bl	5420 <grub_malloc>
    ba70:	mov	x3, x0
    ba74:	str	x0, [x20, #8]
    ba78:	mov	w0, #0x1                   	// #1
    ba7c:	cbz	x3, ba50 <grub_partition_get_name+0x218>
    ba80:	mov	x2, #0x40                  	// #64
    ba84:	mov	x1, x19
    ba88:	mov	x0, x3
    ba8c:	bl	9854 <grub_memmove>
    ba90:	mov	w0, #0x1                   	// #1
    ba94:	b	ba50 <grub_partition_get_name+0x218>
    ba98:	stp	x29, x30, [sp, #-128]!
    ba9c:	mov	x29, sp
    baa0:	stp	x19, x20, [sp, #16]
    baa4:	stp	x21, x22, [sp, #32]
    baa8:	mov	x21, x0
    baac:	mov	x19, x2
    bab0:	ldp	x4, x5, [x1]
    bab4:	stp	x4, x5, [sp, #64]
    bab8:	ldp	x4, x5, [x1, #16]
    babc:	stp	x4, x5, [sp, #80]
    bac0:	ldp	x4, x5, [x1, #32]
    bac4:	stp	x4, x5, [sp, #96]
    bac8:	ldp	x2, x3, [x1, #48]
    bacc:	stp	x2, x3, [sp, #112]
    bad0:	bl	b968 <grub_partition_get_name+0x130>
    bad4:	cbz	w0, bb84 <grub_partition_get_name+0x34c>
    bad8:	ldr	x0, [x21, #40]
    badc:	str	x0, [sp, #104]
    bae0:	str	xzr, [x21, #40]
    bae4:	ldr	x3, [x19, #8]
    bae8:	ldr	x2, [x19, #16]
    baec:	add	x1, sp, #0x40
    baf0:	mov	x0, x21
    baf4:	blr	x3
    baf8:	cbnz	w0, bb2c <grub_partition_get_name+0x2f4>
    bafc:	ldr	x0, [sp, #72]
    bb00:	cbz	x0, bb78 <grub_partition_get_name+0x340>
    bb04:	add	x0, sp, #0x40
    bb08:	str	x0, [x21, #40]
    bb0c:	adrp	x0, 0 <_start>
    bb10:	ldr	x0, [x0]
    bb14:	ldr	x20, [x0]
    bb18:	cbz	x20, bb78 <grub_partition_get_name+0x340>
    bb1c:	str	x23, [sp, #48]
    bb20:	adrp	x22, 0 <_start>
    bb24:	adrp	x23, 0 <_start>
    bb28:	b	bb48 <grub_partition_get_name+0x310>
    bb2c:	mov	w0, #0x1                   	// #1
    bb30:	str	w0, [x19]
    bb34:	b	bb84 <grub_partition_get_name+0x34c>
    bb38:	ldr	w0, [x19]
    bb3c:	cbnz	w0, bb74 <grub_partition_get_name+0x33c>
    bb40:	ldr	x20, [x20]
    bb44:	cbz	x20, bb6c <grub_partition_get_name+0x334>
    bb48:	ldr	x3, [x20, #24]
    bb4c:	mov	x2, x19
    bb50:	ldr	x1, [x22]
    bb54:	mov	x0, x21
    bb58:	blr	x3
    bb5c:	cbz	w0, bb38 <grub_partition_get_name+0x300>
    bb60:	ldr	x0, [x23]
    bb64:	str	wzr, [x0]
    bb68:	b	bb38 <grub_partition_get_name+0x300>
    bb6c:	ldr	x23, [sp, #48]
    bb70:	b	bb78 <grub_partition_get_name+0x340>
    bb74:	ldr	x23, [sp, #48]
    bb78:	ldr	x0, [sp, #104]
    bb7c:	str	x0, [x21, #40]
    bb80:	ldr	w0, [x19]
    bb84:	ldp	x19, x20, [sp, #16]
    bb88:	ldp	x21, x22, [sp, #32]
    bb8c:	ldp	x29, x30, [sp], #128
    bb90:	ret
    bb94:	nop
	...

000000000000bbb0 <grub_rescue_parse_line>:
    bbb0:	stp	x29, x30, [sp, #-48]!
    bbb4:	mov	x29, sp
    bbb8:	add	x4, sp, #0x20
    bbbc:	add	x3, sp, #0x2c
    bbc0:	bl	b230 <grub_parser_split_cmdline>
    bbc4:	cbnz	w0, bc18 <grub_rescue_parse_line+0x68>
    bbc8:	ldr	w1, [sp, #44]
    bbcc:	tbnz	w1, #31, bc18 <grub_rescue_parse_line+0x68>
    bbd0:	cbz	w1, bc24 <grub_rescue_parse_line+0x74>
    bbd4:	str	x19, [sp, #16]
    bbd8:	cmp	w1, #0x1
    bbdc:	b.eq	bc2c <grub_rescue_parse_line+0x7c>  // b.none
    bbe0:	ldr	x0, [sp, #32]
    bbe4:	ldr	x19, [x0]
    bbe8:	ldrb	w0, [x19]
    bbec:	cbnz	w0, bc64 <grub_rescue_parse_line+0xb4>
    bbf0:	ldr	x0, [sp, #32]
    bbf4:	ldr	x0, [x0]
    bbf8:	bl	547c <grub_free>
    bbfc:	ldr	x0, [sp, #32]
    bc00:	bl	547c <grub_free>
    bc04:	adrp	x0, 0 <_start>
    bc08:	ldr	x0, [x0]
    bc0c:	ldr	w0, [x0]
    bc10:	ldr	x19, [sp, #16]
    bc14:	b	bc24 <grub_rescue_parse_line+0x74>
    bc18:	adrp	x0, 0 <_start>
    bc1c:	ldr	x0, [x0]
    bc20:	ldr	w0, [x0]
    bc24:	ldp	x29, x30, [sp], #48
    bc28:	ret
    bc2c:	mov	w1, #0x3d                  	// #61
    bc30:	ldr	x0, [sp, #32]
    bc34:	ldr	x0, [x0]
    bc38:	bl	99d0 <grub_strchr>
    bc3c:	mov	x19, x0
    bc40:	cbz	x0, bbe0 <grub_rescue_parse_line+0x30>
    bc44:	mov	x1, x0
    bc48:	strb	wzr, [x1], #1
    bc4c:	ldr	x0, [sp, #32]
    bc50:	ldr	x0, [x0]
    bc54:	bl	8058 <grub_env_set>
    bc58:	mov	w0, #0x3d                  	// #61
    bc5c:	strb	w0, [x19]
    bc60:	b	bbf0 <grub_rescue_parse_line+0x40>
    bc64:	adrp	x0, 0 <_start>
    bc68:	ldr	x0, [x0]
    bc6c:	mov	x1, x19
    bc70:	ldr	x0, [x0]
    bc74:	bl	9098 <grub_named_list_find>
    bc78:	cbz	x0, bc98 <grub_rescue_parse_line+0xe8>
    bc7c:	ldr	x3, [x0, #32]
    bc80:	ldr	x2, [sp, #32]
    bc84:	add	x2, x2, #0x8
    bc88:	ldr	w1, [sp, #44]
    bc8c:	sub	w1, w1, #0x1
    bc90:	blr	x3
    bc94:	b	bbf0 <grub_rescue_parse_line+0x40>
    bc98:	mov	x1, x19
    bc9c:	adrp	x0, 0 <_start>
    bca0:	ldr	x0, [x0]
    bca4:	bl	ac24 <grub_printf_>
    bca8:	adrp	x0, 0 <_start>
    bcac:	ldr	x0, [x0]
    bcb0:	adrp	x1, 0 <_start>
    bcb4:	ldr	x1, [x1]
    bcb8:	ldr	x0, [x0]
    bcbc:	bl	9098 <grub_named_list_find>
    bcc0:	cbz	x0, bbf0 <grub_rescue_parse_line+0x40>
    bcc4:	adrp	x0, 0 <_start>
    bcc8:	ldr	x0, [x0]
    bccc:	bl	abc0 <grub_err_printf>
    bcd0:	b	bbf0 <grub_rescue_parse_line+0x40>
    bcd4:	nop
	...
    bd00:	stp	x29, x30, [sp, #-96]!
    bd04:	mov	x29, sp
    bd08:	stp	x19, x20, [sp, #16]
    bd0c:	stp	x21, x22, [sp, #32]
    bd10:	stp	x23, x24, [sp, #48]
    bd14:	str	x25, [sp, #64]
    bd18:	mov	x20, x0
    bd1c:	cbnz	w1, bd58 <grub_rescue_parse_line+0x1a8>
    bd20:	adrp	x0, 0 <_start>
    bd24:	ldr	x0, [x0]
    bd28:	bl	abc0 <grub_err_printf>
    bd2c:	mov	x2, #0x100                 	// #256
    bd30:	mov	w1, #0x0                   	// #0
    bd34:	adrp	x0, 0 <_start>
    bd38:	ldr	x0, [x0]
    bd3c:	bl	9b50 <grub_memset>
    bd40:	mov	w19, #0x0                   	// #0
    bd44:	mov	w23, #0x8                   	// #8
    bd48:	mov	w24, #0x20                  	// #32
    bd4c:	adrp	x22, 0 <_start>
    bd50:	adrp	x21, 0 <_start>
    bd54:	b	bd74 <grub_rescue_parse_line+0x1c4>
    bd58:	adrp	x0, 0 <_start>
    bd5c:	ldr	x0, [x0]
    bd60:	b	bd28 <grub_rescue_parse_line+0x178>
    bd64:	cmp	w19, #0x0
    bd68:	ccmp	w0, #0x8, #0x0, gt
    bd6c:	b.eq	bdc8 <grub_rescue_parse_line+0x218>  // b.none
    bd70:	bl	c0b0 <grub_refresh>
    bd74:	bl	c100 <grub_getkey>
    bd78:	cmp	w0, #0xd
    bd7c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    bd80:	b.eq	bdf8 <grub_rescue_parse_line+0x248>  // b.none
    bd84:	sub	w1, w0, #0x20
    bd88:	cmp	w1, #0x5e
    bd8c:	b.hi	bd64 <grub_rescue_parse_line+0x1b4>  // b.pmore
    bd90:	cmp	w19, #0xfe
    bd94:	b.gt	bd70 <grub_rescue_parse_line+0x1c0>
    bd98:	and	w0, w0, #0xff
    bd9c:	strb	w0, [sp, #88]
    bda0:	strb	wzr, [sp, #89]
    bda4:	add	w25, w19, #0x1
    bda8:	ldr	x1, [x22]
    bdac:	strb	w0, [x1, w19, sxtw]
    bdb0:	ldr	x0, [x21]
    bdb4:	ldr	x1, [x0]
    bdb8:	add	x0, sp, #0x58
    bdbc:	blr	x1
    bdc0:	mov	w19, w25
    bdc4:	b	bd70 <grub_rescue_parse_line+0x1c0>
    bdc8:	strb	w23, [sp, #88]
    bdcc:	strb	w24, [sp, #89]
    bdd0:	strb	w23, [sp, #90]
    bdd4:	strb	wzr, [sp, #91]
    bdd8:	sub	w19, w19, #0x1
    bddc:	ldr	x0, [x22]
    bde0:	strb	wzr, [x0, w19, sxtw]
    bde4:	ldr	x0, [x21]
    bde8:	ldr	x1, [x0]
    bdec:	add	x0, sp, #0x58
    bdf0:	blr	x1
    bdf4:	b	bd70 <grub_rescue_parse_line+0x1c0>
    bdf8:	adrp	x0, 0 <_start>
    bdfc:	ldr	x0, [x0]
    be00:	ldr	x1, [x0]
    be04:	adrp	x0, 0 <_start>
    be08:	ldr	x0, [x0]
    be0c:	blr	x1
    be10:	bl	c0b0 <grub_refresh>
    be14:	adrp	x0, 0 <_start>
    be18:	ldr	x0, [x0]
    be1c:	bl	9c18 <grub_strdup>
    be20:	str	x0, [x20]
    be24:	mov	w0, #0x0                   	// #0
    be28:	ldp	x19, x20, [sp, #16]
    be2c:	ldp	x21, x22, [sp, #32]
    be30:	ldp	x23, x24, [sp, #48]
    be34:	ldr	x25, [sp, #64]
    be38:	ldp	x29, x30, [sp], #96
    be3c:	ret
	...

000000000000be68 <grub_rescue_run>:
    be68:	stp	x29, x30, [sp, #-48]!
    be6c:	mov	x29, sp
    be70:	stp	x19, x20, [sp, #16]
    be74:	adrp	x0, 0 <_start>
    be78:	ldr	x0, [x0]
    be7c:	bl	abc0 <grub_err_printf>
    be80:	adrp	x19, 0 <_start>
    be84:	adrp	x20, 0 <_start>
    be88:	b	bea0 <grub_rescue_run+0x38>
    be8c:	mov	x2, #0x0                   	// #0
    be90:	ldr	x1, [x20]
    be94:	bl	bbb0 <grub_rescue_parse_line>
    be98:	ldr	x0, [sp, #40]
    be9c:	bl	547c <grub_free>
    bea0:	bl	8620 <grub_print_error>
    bea4:	ldr	x0, [x19]
    bea8:	str	wzr, [x0]
    beac:	mov	x2, #0x0                   	// #0
    beb0:	mov	w1, #0x0                   	// #0
    beb4:	add	x0, sp, #0x28
    beb8:	bl	bd00 <grub_rescue_parse_line+0x150>
    bebc:	ldr	x0, [sp, #40]
    bec0:	cbz	x0, bea0 <grub_rescue_run+0x38>
    bec4:	ldrb	w1, [x0]
    bec8:	cbz	w1, bea0 <grub_rescue_run+0x38>
    becc:	b	be8c <grub_rescue_run+0x24>
	...
    bee8:	stp	x29, x30, [sp, #-80]!
    beec:	mov	x29, sp
    bef0:	stp	x19, x20, [sp, #16]
    bef4:	mov	w20, w0
    bef8:	mov	x19, x1
    befc:	stp	xzr, xzr, [sp, #48]
    bf00:	stp	xzr, xzr, [sp, #64]
    bf04:	mov	w0, #0x0                   	// #0
    bf08:	bfxil	w0, w20, #0, #23
    bf0c:	str	w0, [sp, #48]
    bf10:	mov	w0, #0x1                   	// #1
    bf14:	strb	w0, [sp, #56]
    bf18:	cmp	w20, #0x9
    bf1c:	b.eq	bf44 <grub_rescue_run+0xdc>  // b.none
    bf20:	ldr	x2, [x1, #40]
    bf24:	add	x1, sp, #0x30
    bf28:	mov	x0, x19
    bf2c:	blr	x2
    bf30:	cmp	w20, #0xa
    bf34:	b.eq	bf84 <grub_rescue_run+0x11c>  // b.none
    bf38:	ldp	x19, x20, [sp, #16]
    bf3c:	ldp	x29, x30, [sp], #80
    bf40:	ret
    bf44:	ldr	x1, [x1, #64]
    bf48:	cbz	x1, bf94 <grub_rescue_run+0x12c>
    bf4c:	str	x21, [sp, #32]
    bf50:	mov	x0, x19
    bf54:	blr	x1
    bf58:	mvn	w20, w0
    bf5c:	and	w20, w20, #0x7
    bf60:	mov	w21, #0x20                  	// #32
    bf64:	mov	x1, x19
    bf68:	mov	w0, w21
    bf6c:	bl	bee8 <grub_rescue_run+0x80>
    bf70:	sub	w20, w20, #0x1
    bf74:	cmn	w20, #0x1
    bf78:	b.ne	bf64 <grub_rescue_run+0xfc>  // b.any
    bf7c:	ldr	x21, [sp, #32]
    bf80:	b	bf38 <grub_rescue_run+0xd0>
    bf84:	mov	x1, x19
    bf88:	mov	w0, #0xd                   	// #13
    bf8c:	bl	bee8 <grub_rescue_run+0x80>
    bf90:	b	bf38 <grub_rescue_run+0xd0>
    bf94:	ldr	x2, [x19, #40]
    bf98:	add	x1, sp, #0x30
    bf9c:	mov	x0, x19
    bfa0:	blr	x2
    bfa4:	b	bf38 <grub_rescue_run+0xd0>
    bfa8:	stp	x29, x30, [sp, #-64]!
    bfac:	mov	x29, sp
    bfb0:	stp	x19, x20, [sp, #16]
    bfb4:	ldrb	w20, [x0]
    bfb8:	cbz	w20, c010 <grub_rescue_run+0x1a8>
    bfbc:	stp	x21, x22, [sp, #32]
    bfc0:	str	x23, [sp, #48]
    bfc4:	mov	x21, x0
    bfc8:	mov	w23, #0x3f                  	// #63
    bfcc:	adrp	x22, 0 <_start>
    bfd0:	b	bfdc <grub_rescue_run+0x174>
    bfd4:	ldrb	w20, [x21, #1]!
    bfd8:	cbz	w20, c008 <grub_rescue_run+0x1a0>
    bfdc:	cmp	w20, #0x80
    bfe0:	csel	w20, w20, w23, cc  // cc = lo, ul, last
    bfe4:	ldr	x0, [x22]
    bfe8:	ldr	x19, [x0]
    bfec:	cbz	x19, bfd4 <grub_rescue_run+0x16c>
    bff0:	mov	x1, x19
    bff4:	mov	w0, w20
    bff8:	bl	bee8 <grub_rescue_run+0x80>
    bffc:	ldr	x19, [x19]
    c000:	cbnz	x19, bff0 <grub_rescue_run+0x188>
    c004:	b	bfd4 <grub_rescue_run+0x16c>
    c008:	ldp	x21, x22, [sp, #32]
    c00c:	ldr	x23, [sp, #48]
    c010:	ldp	x19, x20, [sp, #16]
    c014:	ldp	x29, x30, [sp], #64
    c018:	ret
    c01c:	nop
	...

000000000000c028 <grub_getkey_noblock>:
    c028:	stp	x29, x30, [sp, #-32]!
    c02c:	mov	x29, sp
    c030:	str	x19, [sp, #16]
    c034:	adrp	x0, 0 <_start>
    c038:	ldr	x0, [x0]
    c03c:	ldr	x1, [x0]
    c040:	cbz	x1, c04c <grub_getkey_noblock+0x24>
    c044:	mov	w0, #0x0                   	// #0
    c048:	blr	x1
    c04c:	adrp	x0, 0 <_start>
    c050:	ldr	x0, [x0]
    c054:	ldr	x0, [x0, #8]
    c058:	cbz	x0, c060 <grub_getkey_noblock+0x38>
    c05c:	blr	x0
    c060:	adrp	x0, 0 <_start>
    c064:	ldr	x0, [x0]
    c068:	ldr	x19, [x0]
    c06c:	cbz	x19, c094 <grub_getkey_noblock+0x6c>
    c070:	ldr	x1, [x19, #40]
    c074:	mov	x0, x19
    c078:	blr	x1
    c07c:	cbnz	w0, c088 <grub_getkey_noblock+0x60>
    c080:	ldr	x19, [x19]
    c084:	cbnz	x19, c070 <grub_getkey_noblock+0x48>
    c088:	ldr	x19, [sp, #16]
    c08c:	ldp	x29, x30, [sp], #32
    c090:	ret
    c094:	mov	w0, #0x0                   	// #0
    c098:	b	c088 <grub_getkey_noblock+0x60>
    c09c:	nop
	...

000000000000c0b0 <grub_refresh>:
    c0b0:	stp	x29, x30, [sp, #-32]!
    c0b4:	mov	x29, sp
    c0b8:	str	x19, [sp, #16]
    c0bc:	adrp	x0, 0 <_start>
    c0c0:	ldr	x0, [x0]
    c0c4:	ldr	x19, [x0]
    c0c8:	cbnz	x19, c0e0 <grub_refresh+0x30>
    c0cc:	ldr	x19, [sp, #16]
    c0d0:	ldp	x29, x30, [sp], #32
    c0d4:	ret
    c0d8:	ldr	x19, [x19]
    c0dc:	cbz	x19, c0cc <grub_refresh+0x1c>
    c0e0:	ldr	x1, [x19, #104]
    c0e4:	cbz	x1, c0d8 <grub_refresh+0x28>
    c0e8:	mov	x0, x19
    c0ec:	blr	x1
    c0f0:	b	c0d8 <grub_refresh+0x28>
    c0f4:	nop
	...

000000000000c100 <grub_getkey>:
    c100:	stp	x29, x30, [sp, #-16]!
    c104:	mov	x29, sp
    c108:	bl	c0b0 <grub_refresh>
    c10c:	bl	c028 <grub_getkey_noblock>
    c110:	cbz	w0, c10c <grub_getkey+0xc>
    c114:	ldp	x29, x30, [sp], #16
    c118:	ret
    c11c:	nop

000000000000c120 <grub_register_exported_symbols>:
    c120:	adrp	x0, 0 <_start>
    c124:	ldr	x0, [x0]
    c128:	ldr	x0, [x0]
    c12c:	cbz	x0, c168 <grub_register_exported_symbols+0x48>
    c130:	stp	x29, x30, [sp, #-32]!
    c134:	mov	x29, sp
    c138:	str	x19, [sp, #16]
    c13c:	adrp	x1, 0 <_start>
    c140:	ldr	x19, [x1]
    c144:	mov	x3, #0x0                   	// #0
    c148:	ldr	w2, [x19, #16]
    c14c:	ldr	x1, [x19, #8]
    c150:	bl	70c0 <grub_dl_register_symbol>
    c154:	ldr	x0, [x19, #24]!
    c158:	cbnz	x0, c144 <grub_register_exported_symbols+0x24>
    c15c:	ldr	x19, [sp, #16]
    c160:	ldp	x29, x30, [sp], #32
    c164:	ret
    c168:	ret
    c16c:	nop
	...
