
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lzopio.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x900>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x20, [x0, #80]
      14:	ldr	x0, [x20]
      18:	bl	0 <grub_file_close>
      1c:	ldr	x0, [x20, #64]
      20:	bl	0 <grub_free>
      24:	ldr	x0, [x20, #72]
      28:	bl	0 <grub_free>
      2c:	mov	x0, x20
      30:	bl	0 <grub_free>
      34:	adrp	x0, 0 <grub_mod_init-0x900>
      38:	ldr	x0, [x0]
      3c:	ldr	w0, [x0]
      40:	stp	xzr, xzr, [x19]
      44:	ldp	x19, x20, [sp, #16]
      48:	ldp	x29, x30, [sp], #32
      4c:	ret
	...
      58:	stp	x29, x30, [sp, #-32]!
      5c:	mov	x29, sp
      60:	ldr	x1, [x0, #32]
      64:	ldr	w2, [x0, #48]
      68:	str	x19, [sp, #16]
      6c:	mov	x19, x0
      70:	ldr	x0, [x0, #72]
      74:	add	x1, x1, x2
      78:	str	x1, [x19, #32]
      7c:	bl	0 <grub_free>
      80:	ldr	x0, [x19, #64]
      84:	bl	0 <grub_free>
      88:	mov	x1, x19
      8c:	mov	x2, #0x4                   	// #4
      90:	ldr	x0, [x1], #48
      94:	stp	xzr, xzr, [x19, #64]
      98:	bl	0 <grub_file_read>
      9c:	cmp	x0, #0x4
      a0:	b.ne	140 <grub_mod_init-0x7c0>  // b.any
      a4:	ldr	w1, [x19, #48]
      a8:	mov	x2, x0
      ac:	ldr	x0, [x19]
      b0:	rev	w1, w1
      b4:	str	w1, [x19, #48]
      b8:	cbnz	w1, d8 <grub_mod_init-0x828>
      bc:	ldr	x1, [x0, #24]
      c0:	ldr	x0, [x0, #64]
      c4:	cmp	x0, x1
      c8:	csetm	w0, ne  // ne = any
      cc:	ldr	x19, [sp, #16]
      d0:	ldp	x29, x30, [sp], #32
      d4:	ret
      d8:	add	x1, x19, #0x34
      dc:	bl	0 <grub_file_read>
      e0:	cmp	x0, #0x4
      e4:	b.ne	140 <grub_mod_init-0x7c0>  // b.any
      e8:	ldp	w2, w1, [x19, #48]
      ec:	rev	w1, w1
      f0:	str	w1, [x19, #52]
      f4:	cmp	w1, w2
      f8:	b.hi	140 <grub_mod_init-0x7c0>  // b.pmore
      fc:	ldr	w1, [x19, #12]
     100:	cbnz	w1, 128 <grub_mod_init-0x7d8>
     104:	ldr	w0, [x19, #8]
     108:	cbz	w0, cc <grub_mod_init-0x834>
     10c:	ldp	w0, w1, [x19, #48]
     110:	cmp	w1, w0
     114:	b.ne	148 <grub_mod_init-0x7b8>  // b.any
     118:	ldr	w1, [x19, #56]
     11c:	mov	w0, #0x0                   	// #0
     120:	str	w1, [x19, #60]
     124:	b	cc <grub_mod_init-0x834>
     128:	mov	x1, x19
     12c:	mov	x2, x0
     130:	ldr	x0, [x1], #56
     134:	bl	0 <grub_file_read>
     138:	cmp	x0, #0x4
     13c:	b.eq	104 <grub_mod_init-0x7fc>  // b.none
     140:	mov	w0, #0xffffffff            	// #-1
     144:	b	cc <grub_mod_init-0x834>
     148:	mov	x1, x19
     14c:	mov	x2, #0x4                   	// #4
     150:	ldr	x0, [x1], #60
     154:	bl	0 <grub_file_read>
     158:	cmp	x0, #0x4
     15c:	csetm	w0, ne  // ne = any
     160:	b	cc <grub_mod_init-0x834>
     164:	nop
     168:	stp	x29, x30, [sp, #-128]!
     16c:	mov	x29, sp
     170:	stp	x19, x20, [sp, #16]
     174:	mov	x19, x0
     178:	tbz	w1, #17, 18c <grub_mod_init-0x774>
     17c:	mov	x0, x19
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x29, x30, [sp], #128
     188:	ret
     18c:	mov	x0, #0x68                  	// #104
     190:	bl	0 <grub_zalloc>
     194:	mov	x20, x0
     198:	cbz	x0, 3b8 <grub_mod_init-0x548>
     19c:	mov	x0, #0x50                  	// #80
     1a0:	stp	x21, x22, [sp, #32]
     1a4:	bl	0 <grub_zalloc>
     1a8:	mov	x21, x0
     1ac:	cbz	x0, 40c <grub_mod_init-0x4f4>
     1b0:	ldr	x3, [x19, #8]
     1b4:	str	x19, [x21]
     1b8:	mov	x0, #0xffffffffffffffff    	// #-1
     1bc:	str	x0, [x20, #64]
     1c0:	adrp	x2, 0 <grub_mod_init-0x900>
     1c4:	mov	w0, #0x1                   	// #1
     1c8:	ldr	x1, [x19, #24]
     1cc:	str	w0, [x20, #72]
     1d0:	ldr	x2, [x2]
     1d4:	stp	x3, x2, [x20, #8]
     1d8:	mov	x22, x21
     1dc:	str	x21, [x20, #80]
     1e0:	mov	x0, x19
     1e4:	cbnz	x1, 22c <grub_mod_init-0x6d4>
     1e8:	add	x1, sp, #0x58
     1ec:	mov	x2, #0x22                  	// #34
     1f0:	bl	0 <grub_file_read>
     1f4:	cmp	x0, #0x22
     1f8:	b.eq	250 <grub_mod_init-0x6b0>  // b.none
     1fc:	adrp	x2, 0 <grub_mod_init-0x900>
     200:	mov	x1, #0x0                   	// #0
     204:	mov	x0, x19
     208:	ldr	x2, [x2]
     20c:	str	wzr, [x2]
     210:	bl	0 <grub_file_seek>
     214:	mov	x0, x21
     218:	bl	0 <grub_free>
     21c:	mov	x0, x20
     220:	bl	0 <grub_free>
     224:	ldp	x21, x22, [sp, #32]
     228:	b	17c <grub_mod_init-0x784>
     22c:	mov	x1, #0x0                   	// #0
     230:	bl	0 <grub_file_seek>
     234:	ldr	x22, [x20, #80]
     238:	add	x1, sp, #0x58
     23c:	mov	x2, #0x22                  	// #34
     240:	ldr	x0, [x22]
     244:	bl	0 <grub_file_read>
     248:	cmp	x0, #0x22
     24c:	b.ne	1fc <grub_mod_init-0x704>  // b.any
     250:	adrp	x1, 0 <grub_mod_init-0x900>
     254:	add	x0, sp, #0x58
     258:	mov	x2, #0x9                   	// #9
     25c:	ldr	x1, [x1]
     260:	bl	0 <grub_memcmp>
     264:	cbnz	w0, 1fc <grub_mod_init-0x704>
     268:	ldurh	w0, [sp, #99]
     26c:	lsr	w1, w0, #8
     270:	orr	w0, w1, w0, lsl #8
     274:	and	w0, w0, #0xffff
     278:	cmp	w0, #0x93f
     27c:	b.ls	1fc <grub_mod_init-0x704>  // b.plast
     280:	ldurh	w0, [sp, #101]
     284:	mov	w1, #0x2050                	// #8272
     288:	lsr	w2, w0, #8
     28c:	orr	w0, w2, w0, lsl #8
     290:	cmp	w1, w0, uxth
     294:	b.cc	1fc <grub_mod_init-0x704>  // b.lo, b.ul, b.last
     298:	stp	x23, x24, [sp, #48]
     29c:	ldur	w23, [sp, #105]
     2a0:	rev	w23, w23
     2a4:	tbnz	w23, #8, 49c <grub_mod_init-0x464>
     2a8:	tbnz	w23, #0, 3dc <grub_mod_init-0x524>
     2ac:	tbnz	w23, #9, 480 <grub_mod_init-0x480>
     2b0:	tbnz	w23, #1, 3c0 <grub_mod_init-0x540>
     2b4:	tbz	w23, #12, 3f8 <grub_mod_init-0x508>
     2b8:	adrp	x0, 0 <grub_mod_init-0x900>
     2bc:	ldr	x0, [x0]
     2c0:	bl	0 <grub_crypto_lookup_md_by_name>
     2c4:	mov	x23, x0
     2c8:	cbz	x23, 420 <grub_mod_init-0x4e0>
     2cc:	ldr	x0, [x23, #72]
     2d0:	bl	0 <grub_malloc>
     2d4:	mov	x24, x0
     2d8:	cbz	x0, 3b0 <grub_mod_init-0x550>
     2dc:	ldr	x1, [x23, #40]
     2e0:	str	x25, [sp, #64]
     2e4:	blr	x1
     2e8:	ldr	x3, [x23, #48]
     2ec:	mov	x0, x24
     2f0:	add	x1, sp, #0x61
     2f4:	mov	x2, #0x19                  	// #25
     2f8:	blr	x3
     2fc:	ldrb	w0, [sp, #121]
     300:	cbnz	w0, 430 <grub_mod_init-0x4d0>
     304:	ldr	x1, [x23, #56]
     308:	mov	x0, x24
     30c:	blr	x1
     310:	ldr	x0, [x22]
     314:	add	x1, sp, #0x54
     318:	mov	x2, #0x4                   	// #4
     31c:	bl	0 <grub_file_read>
     320:	mov	x25, x0
     324:	cmp	x0, #0x4
     328:	b.ne	4b8 <grub_mod_init-0x448>  // b.any
     32c:	ldr	x1, [x23, #64]
     330:	mov	x0, x24
     334:	blr	x1
     338:	mov	x1, x0
     33c:	mov	x2, x25
     340:	add	x0, sp, #0x54
     344:	bl	0 <grub_memcmp>
     348:	cbnz	w0, 4b8 <grub_mod_init-0x448>
     34c:	ldr	x25, [sp, #64]
     350:	ldr	x0, [x22]
     354:	ldr	x23, [x20, #80]
     358:	ldr	x0, [x0, #24]
     35c:	str	x0, [x22, #40]
     360:	mov	x0, x23
     364:	bl	58 <grub_mod_init-0x8a8>
     368:	tbnz	w0, #31, 3b0 <grub_mod_init-0x550>
     36c:	mov	x24, #0x0                   	// #0
     370:	b	380 <grub_mod_init-0x580>
     374:	mov	x0, x23
     378:	bl	58 <grub_mod_init-0x8a8>
     37c:	tbnz	w0, #31, 3b0 <grub_mod_init-0x550>
     380:	ldr	w0, [x23, #48]
     384:	cbz	w0, 4f0 <grub_mod_init-0x410>
     388:	ldr	x1, [x23, #72]
     38c:	add	x24, x24, w0, uxtw
     390:	cbnz	x1, 374 <grub_mod_init-0x58c>
     394:	ldr	x0, [x23]
     398:	ldr	w2, [x23, #52]
     39c:	ldr	x1, [x0, #24]
     3a0:	add	x1, x2, x1
     3a4:	bl	0 <grub_file_seek>
     3a8:	cmn	x0, #0x1
     3ac:	b.ne	374 <grub_mod_init-0x58c>  // b.any
     3b0:	ldp	x23, x24, [sp, #48]
     3b4:	b	1fc <grub_mod_init-0x704>
     3b8:	mov	x19, #0x0                   	// #0
     3bc:	b	17c <grub_mod_init-0x784>
     3c0:	adrp	x0, 0 <grub_mod_init-0x900>
     3c4:	mov	w1, #0x1                   	// #1
     3c8:	str	w1, [x22, #8]
     3cc:	ldr	x0, [x0]
     3d0:	bl	0 <grub_crypto_lookup_md_by_name>
     3d4:	str	x0, [x22, #24]
     3d8:	b	2b4 <grub_mod_init-0x64c>
     3dc:	adrp	x0, 0 <grub_mod_init-0x900>
     3e0:	mov	w1, #0x1                   	// #1
     3e4:	str	w1, [x22, #12]
     3e8:	ldr	x0, [x0]
     3ec:	bl	0 <grub_crypto_lookup_md_by_name>
     3f0:	str	x0, [x22, #16]
     3f4:	b	2ac <grub_mod_init-0x654>
     3f8:	adrp	x0, 0 <grub_mod_init-0x900>
     3fc:	ldr	x0, [x0]
     400:	bl	0 <grub_crypto_lookup_md_by_name>
     404:	mov	x23, x0
     408:	b	2c8 <grub_mod_init-0x638>
     40c:	mov	x0, x20
     410:	mov	x19, #0x0                   	// #0
     414:	bl	0 <grub_free>
     418:	ldp	x21, x22, [sp, #32]
     41c:	b	17c <grub_mod_init-0x784>
     420:	ldrb	w0, [sp, #121]
     424:	mov	x24, #0x0                   	// #0
     428:	cbz	w0, 4d0 <grub_mod_init-0x430>
     42c:	str	x25, [sp, #64]
     430:	and	x0, x0, #0xff
     434:	bl	0 <grub_malloc>
     438:	mov	x25, x0
     43c:	cbz	x0, 534 <grub_mod_init-0x3cc>
     440:	mov	x1, x0
     444:	ldrb	w2, [sp, #121]
     448:	ldr	x0, [x22]
     44c:	bl	0 <grub_file_read>
     450:	ldrb	w1, [sp, #121]
     454:	cmp	x0, x1
     458:	b.ne	520 <grub_mod_init-0x3e0>  // b.any
     45c:	cbz	x23, 4c4 <grub_mod_init-0x43c>
     460:	ldr	x3, [x23, #48]
     464:	mov	x2, x0
     468:	mov	x1, x25
     46c:	mov	x0, x24
     470:	blr	x3
     474:	mov	x0, x25
     478:	bl	0 <grub_free>
     47c:	b	304 <grub_mod_init-0x5fc>
     480:	adrp	x0, 0 <grub_mod_init-0x900>
     484:	mov	w1, #0x1                   	// #1
     488:	str	w1, [x22, #8]
     48c:	ldr	x0, [x0]
     490:	bl	0 <grub_crypto_lookup_md_by_name>
     494:	str	x0, [x22, #24]
     498:	b	2b4 <grub_mod_init-0x64c>
     49c:	adrp	x0, 0 <grub_mod_init-0x900>
     4a0:	mov	w1, #0x1                   	// #1
     4a4:	str	w1, [x22, #12]
     4a8:	ldr	x0, [x0]
     4ac:	bl	0 <grub_crypto_lookup_md_by_name>
     4b0:	str	x0, [x22, #16]
     4b4:	b	2ac <grub_mod_init-0x654>
     4b8:	ldp	x23, x24, [sp, #48]
     4bc:	ldr	x25, [sp, #64]
     4c0:	b	1fc <grub_mod_init-0x704>
     4c4:	mov	x0, x25
     4c8:	bl	0 <grub_free>
     4cc:	ldr	x25, [sp, #64]
     4d0:	add	x1, sp, #0x54
     4d4:	ldr	x0, [x22]
     4d8:	mov	x2, #0x4                   	// #4
     4dc:	bl	0 <grub_file_read>
     4e0:	cmp	x0, #0x4
     4e4:	b.eq	350 <grub_mod_init-0x5b0>  // b.none
     4e8:	ldp	x23, x24, [sp, #48]
     4ec:	b	1fc <grub_mod_init-0x704>
     4f0:	ldr	x0, [x22]
     4f4:	str	x24, [x20, #64]
     4f8:	ldr	x1, [x22, #40]
     4fc:	bl	0 <grub_file_seek>
     500:	mov	x0, x22
     504:	bl	58 <grub_mod_init-0x8a8>
     508:	tbnz	w0, #31, 3b0 <grub_mod_init-0x550>
     50c:	mov	x19, x20
     510:	ldp	x23, x24, [sp, #48]
     514:	str	xzr, [x22, #32]
     518:	ldp	x21, x22, [sp, #32]
     51c:	b	17c <grub_mod_init-0x784>
     520:	mov	x0, x25
     524:	bl	0 <grub_free>
     528:	ldp	x23, x24, [sp, #48]
     52c:	ldr	x25, [sp, #64]
     530:	b	1fc <grub_mod_init-0x704>
     534:	mov	x0, x24
     538:	bl	0 <grub_free>
     53c:	ldp	x23, x24, [sp, #48]
     540:	ldr	x25, [sp, #64]
     544:	b	1fc <grub_mod_init-0x704>
	...
     570:	stp	x29, x30, [sp, #-160]!
     574:	mov	x29, sp
     578:	stp	x19, x20, [sp, #16]
     57c:	ldr	x19, [x0, #80]
     580:	stp	x21, x22, [sp, #32]
     584:	mov	x22, x0
     588:	stp	x23, x24, [sp, #48]
     58c:	mov	x23, x1
     590:	mov	x21, x2
     594:	ldr	x1, [x0, #24]
     598:	ldr	x0, [x19, #32]
     59c:	cmp	x0, x1
     5a0:	b.hi	8c8 <grub_mod_init-0x38>  // b.pmore
     5a4:	stp	x25, x26, [sp, #64]
     5a8:	ldr	w3, [x19, #48]
     5ac:	add	x2, x0, w3, uxtw
     5b0:	cmp	x1, x2
     5b4:	b.cc	6c4 <grub_mod_init-0x23c>  // b.lo, b.ul, b.last
     5b8:	add	x24, x19, #0x30
     5bc:	add	x25, x19, #0x34
     5c0:	add	x20, x19, #0x38
     5c4:	add	x26, x19, #0x3c
     5c8:	cbz	w3, 644 <grub_mod_init-0x2bc>
     5cc:	ldr	x0, [x19, #72]
     5d0:	cbz	x0, 72c <grub_mod_init-0x1d4>
     5d4:	ldr	x1, [x19, #32]
     5d8:	ldr	w2, [x19, #48]
     5dc:	add	x1, x1, x2
     5e0:	str	x1, [x19, #32]
     5e4:	bl	0 <grub_free>
     5e8:	ldr	x0, [x19, #64]
     5ec:	bl	0 <grub_free>
     5f0:	stp	xzr, xzr, [x19, #64]
     5f4:	mov	x2, #0x4                   	// #4
     5f8:	ldr	x0, [x19]
     5fc:	mov	x1, x24
     600:	bl	0 <grub_file_read>
     604:	mov	x2, x0
     608:	cmp	x0, #0x4
     60c:	b.ne	76c <grub_mod_init-0x194>  // b.any
     610:	ldr	w3, [x19, #48]
     614:	ldr	x0, [x19]
     618:	rev	w3, w3
     61c:	str	w3, [x19, #48]
     620:	cbnz	w3, 664 <grub_mod_init-0x29c>
     624:	ldr	x1, [x0, #24]
     628:	ldr	x0, [x0, #64]
     62c:	cmp	x1, x0
     630:	b.ne	76c <grub_mod_init-0x194>  // b.any
     634:	ldr	x1, [x22, #24]
     638:	ldr	x0, [x19, #32]
     63c:	cmp	x1, x0
     640:	b.cc	6c4 <grub_mod_init-0x23c>  // b.lo, b.ul, b.last
     644:	ldp	x25, x26, [sp, #64]
     648:	mov	x22, #0x0                   	// #0
     64c:	mov	x0, x22
     650:	ldp	x19, x20, [sp, #16]
     654:	ldp	x21, x22, [sp, #32]
     658:	ldp	x23, x24, [sp, #48]
     65c:	ldp	x29, x30, [sp], #160
     660:	ret
     664:	mov	x1, x25
     668:	bl	0 <grub_file_read>
     66c:	mov	x2, x0
     670:	cmp	x0, #0x4
     674:	b.ne	76c <grub_mod_init-0x194>  // b.any
     678:	ldp	w3, w1, [x19, #48]
     67c:	rev	w1, w1
     680:	str	w1, [x19, #52]
     684:	cmp	w1, w3
     688:	b.hi	76c <grub_mod_init-0x194>  // b.pmore
     68c:	ldr	w0, [x19, #12]
     690:	cbnz	w0, 750 <grub_mod_init-0x1b0>
     694:	ldr	w0, [x19, #8]
     698:	cbz	w0, 6b0 <grub_mod_init-0x250>
     69c:	ldr	w0, [x19, #52]
     6a0:	cmp	w0, w3
     6a4:	b.ne	788 <grub_mod_init-0x178>  // b.any
     6a8:	ldr	w0, [x19, #56]
     6ac:	str	w0, [x19, #60]
     6b0:	ldr	x0, [x19, #32]
     6b4:	ldr	x1, [x22, #24]
     6b8:	add	x2, x0, w3, uxtw
     6bc:	cmp	x2, x1
     6c0:	b.ls	5c8 <grub_mod_init-0x338>  // b.plast
     6c4:	sub	x20, x1, x0
     6c8:	mov	x22, #0x0                   	// #0
     6cc:	cbz	x21, 644 <grub_mod_init-0x2bc>
     6d0:	add	x25, x19, #0x38
     6d4:	add	x24, x19, #0x3c
     6d8:	cbz	w3, 710 <grub_mod_init-0x1f0>
     6dc:	ldr	x1, [x19, #72]
     6e0:	mov	w3, w3
     6e4:	cbz	x1, 7c4 <grub_mod_init-0x13c>
     6e8:	sub	x3, x3, x20
     6ec:	add	x1, x1, x20
     6f0:	cmp	x3, x21
     6f4:	mov	x0, x23
     6f8:	csel	x20, x3, x21, ls  // ls = plast
     6fc:	mov	x2, x20
     700:	add	x22, x22, x20
     704:	bl	0 <grub_memmove>
     708:	subs	x21, x21, x20
     70c:	b.ne	7a8 <grub_mod_init-0x158>  // b.any
     710:	mov	x0, x22
     714:	ldp	x19, x20, [sp, #16]
     718:	ldp	x21, x22, [sp, #32]
     71c:	ldp	x23, x24, [sp, #48]
     720:	ldp	x25, x26, [sp, #64]
     724:	ldp	x29, x30, [sp], #160
     728:	ret
     72c:	ldr	x0, [x19]
     730:	ldr	w2, [x19, #52]
     734:	ldr	x1, [x0, #24]
     738:	add	x1, x2, x1
     73c:	bl	0 <grub_file_seek>
     740:	cmn	x0, #0x1
     744:	b.eq	76c <grub_mod_init-0x194>  // b.none
     748:	ldr	x0, [x19, #72]
     74c:	b	5d4 <grub_mod_init-0x32c>
     750:	ldr	x0, [x19]
     754:	mov	x1, x20
     758:	bl	0 <grub_file_read>
     75c:	cmp	x0, #0x4
     760:	b.ne	76c <grub_mod_init-0x194>  // b.any
     764:	ldr	w3, [x19, #48]
     768:	b	694 <grub_mod_init-0x26c>
     76c:	ldp	x25, x26, [sp, #64]
     770:	adrp	x1, 0 <grub_mod_init-0x900>
     774:	mov	x22, #0xffffffffffffffff    	// #-1
     778:	mov	w0, #0x1a                  	// #26
     77c:	ldr	x1, [x1]
     780:	bl	0 <grub_error>
     784:	b	64c <grub_mod_init-0x2b4>
     788:	ldr	x0, [x19]
     78c:	mov	x1, x26
     790:	mov	x2, #0x4                   	// #4
     794:	bl	0 <grub_file_read>
     798:	cmp	x0, #0x4
     79c:	b.ne	76c <grub_mod_init-0x194>  // b.any
     7a0:	ldr	w3, [x19, #48]
     7a4:	b	6b0 <grub_mod_init-0x250>
     7a8:	mov	x0, x19
     7ac:	bl	58 <grub_mod_init-0x8a8>
     7b0:	tbnz	w0, #31, 76c <grub_mod_init-0x194>
     7b4:	add	x23, x23, x20
     7b8:	ldr	w3, [x19, #48]
     7bc:	mov	x20, #0x0                   	// #0
     7c0:	b	6d8 <grub_mod_init-0x228>
     7c4:	ldr	w0, [x19, #52]
     7c8:	str	x3, [sp, #88]
     7cc:	bl	0 <grub_malloc>
     7d0:	str	x0, [x19, #64]
     7d4:	mov	x1, x0
     7d8:	cbz	x0, 76c <grub_mod_init-0x194>
     7dc:	ldr	w2, [x19, #52]
     7e0:	ldr	x0, [x19]
     7e4:	bl	0 <grub_file_read>
     7e8:	mov	x3, x0
     7ec:	ldr	w1, [x19, #52]
     7f0:	cmp	x0, w1, uxtw
     7f4:	b.ne	76c <grub_mod_init-0x194>  // b.any
     7f8:	ldr	x0, [x19, #24]
     7fc:	cbz	x0, 830 <grub_mod_init-0xd0>
     800:	ldr	x1, [x0, #32]
     804:	cmp	x1, #0x40
     808:	b.hi	76c <grub_mod_init-0x194>  // b.pmore
     80c:	ldr	x2, [x19, #64]
     810:	add	x1, sp, #0x60
     814:	bl	0 <grub_crypto_hash>
     818:	mov	x1, x24
     81c:	add	x0, sp, #0x60
     820:	mov	x2, #0x4                   	// #4
     824:	bl	0 <grub_memcmp>
     828:	cbnz	w0, 76c <grub_mod_init-0x194>
     82c:	ldr	w1, [x19, #52]
     830:	ldr	w3, [x19, #48]
     834:	cmp	w3, w1
     838:	mov	w3, w3
     83c:	b.ne	84c <grub_mod_init-0xb4>  // b.any
     840:	ldr	x1, [x19, #64]
     844:	stp	xzr, x1, [x19, #64]
     848:	b	6e8 <grub_mod_init-0x218>
     84c:	mov	x0, x3
     850:	bl	0 <grub_malloc>
     854:	str	x0, [x19, #72]
     858:	mov	x2, x0
     85c:	cbz	x0, 76c <grub_mod_init-0x194>
     860:	ldr	w1, [x19, #52]
     864:	add	x3, sp, #0x58
     868:	ldr	x0, [x19, #64]
     86c:	mov	x4, #0x0                   	// #0
     870:	bl	940 <lzo1x_decompress_safe>
     874:	cbnz	w0, 76c <grub_mod_init-0x194>
     878:	ldr	x0, [x19, #16]
     87c:	cbz	x0, 8b0 <grub_mod_init-0x50>
     880:	ldr	x1, [x0, #32]
     884:	cmp	x1, #0x40
     888:	b.hi	76c <grub_mod_init-0x194>  // b.pmore
     88c:	ldr	w3, [x19, #48]
     890:	add	x1, sp, #0x60
     894:	ldr	x2, [x19, #72]
     898:	bl	0 <grub_crypto_hash>
     89c:	mov	x1, x25
     8a0:	add	x0, sp, #0x60
     8a4:	mov	x2, #0x4                   	// #4
     8a8:	bl	0 <grub_memcmp>
     8ac:	cbnz	w0, 76c <grub_mod_init-0x194>
     8b0:	ldr	x0, [x19, #64]
     8b4:	bl	0 <grub_free>
     8b8:	str	xzr, [x19, #64]
     8bc:	ldr	w3, [x19, #48]
     8c0:	ldr	x1, [x19, #72]
     8c4:	b	6e8 <grub_mod_init-0x218>
     8c8:	ldr	x0, [x19]
     8cc:	ldr	x1, [x19, #40]
     8d0:	bl	0 <grub_file_seek>
     8d4:	mov	x0, x19
     8d8:	bl	58 <grub_mod_init-0x8a8>
     8dc:	tbnz	w0, #31, 770 <grub_mod_init-0x190>
     8e0:	stp	x25, x26, [sp, #64]
     8e4:	mov	x0, #0x0                   	// #0
     8e8:	str	xzr, [x19, #32]
     8ec:	ldr	x1, [x22, #24]
     8f0:	b	5a8 <grub_mod_init-0x358>
     8f4:	nop
	...

0000000000000900 <grub_mod_init>:
     900:	adrp	x0, 0 <grub_mod_init-0x900>
     904:	adrp	x1, 0 <grub_mod_init-0x900>
     908:	ldr	x0, [x0]
     90c:	ldr	x1, [x1]
     910:	str	x1, [x0, #24]
     914:	ret
	...

0000000000000928 <grub_mod_fini>:
     928:	adrp	x0, 0 <grub_mod_init-0x900>
     92c:	ldr	x0, [x0]
     930:	str	xzr, [x0, #24]
     934:	ret
	...

0000000000000940 <lzo1x_decompress_safe>:
     940:	stp	x29, x30, [sp, #-96]!
     944:	mov	x29, sp
     948:	stp	x19, x20, [sp, #16]
     94c:	stp	x21, x22, [sp, #32]
     950:	mov	x21, x2
     954:	mov	x22, x3
     958:	stp	x23, x24, [sp, #48]
     95c:	add	x23, x0, x1
     960:	stp	x25, x26, [sp, #64]
     964:	mov	x26, x0
     968:	ldr	x0, [x3]
     96c:	str	xzr, [x3]
     970:	add	x24, x2, x0
     974:	ldrb	w2, [x26]
     978:	cmp	w2, #0x11
     97c:	b.ls	aec <lzo1x_decompress_safe+0x1ac>  // b.plast
     980:	sub	w19, w2, #0x11
     984:	add	x4, x26, #0x1
     988:	cmp	w19, #0x3
     98c:	sxtw	x19, w19
     990:	b.le	e04 <lzo1x_decompress_safe+0x4c4>
     994:	cmp	x0, x19
     998:	b.cc	1058 <lzo1x_decompress_safe+0x718>  // b.lo, b.ul, b.last
     99c:	sub	x1, x1, #0x1
     9a0:	add	x0, x19, #0x1
     9a4:	cmp	x1, x0
     9a8:	b.cc	1038 <lzo1x_decompress_safe+0x6f8>  // b.lo, b.ul, b.last
     9ac:	add	x1, x21, #0x8
     9b0:	add	x26, x26, #0x9
     9b4:	cmp	x4, x1
     9b8:	orr	x0, x21, x4
     9bc:	and	x0, x0, #0x7
     9c0:	ccmp	x21, x26, #0x2, cc  // cc = lo, ul, last
     9c4:	ccmp	x0, #0x0, #0x0, cs  // cs = hs, nlast
     9c8:	sub	x0, x19, #0x1
     9cc:	ccmp	x0, #0x9, #0x0, eq  // eq = none
     9d0:	b.ls	e84 <lzo1x_decompress_safe+0x544>  // b.plast
     9d4:	and	x2, x19, #0xfffffffffffffff8
     9d8:	mov	x0, #0x0                   	// #0
     9dc:	nop
     9e0:	ldr	x1, [x4, x0]
     9e4:	str	x1, [x21, x0]
     9e8:	add	x0, x0, #0x8
     9ec:	cmp	x0, x2
     9f0:	b.ne	9e0 <lzo1x_decompress_safe+0xa0>  // b.any
     9f4:	and	x0, x19, #0xfffffffffffffff8
     9f8:	cmp	x19, x0
     9fc:	add	x2, x21, x0
     a00:	add	x3, x4, x0
     a04:	sub	x1, x19, x0
     a08:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a0c:	ldrb	w5, [x4, x0]
     a10:	cmp	x1, #0x1
     a14:	strb	w5, [x21, x0]
     a18:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a1c:	ldrb	w0, [x3, #1]
     a20:	cmp	x1, #0x2
     a24:	strb	w0, [x2, #1]
     a28:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a2c:	ldrb	w0, [x3, #2]
     a30:	cmp	x1, #0x3
     a34:	strb	w0, [x2, #2]
     a38:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a3c:	ldrb	w0, [x3, #3]
     a40:	cmp	x1, #0x4
     a44:	strb	w0, [x2, #3]
     a48:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a4c:	ldrb	w0, [x3, #4]
     a50:	cmp	x1, #0x5
     a54:	strb	w0, [x2, #4]
     a58:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a5c:	ldrb	w0, [x3, #5]
     a60:	cmp	x1, #0x6
     a64:	strb	w0, [x2, #5]
     a68:	b.eq	a74 <lzo1x_decompress_safe+0x134>  // b.none
     a6c:	ldrb	w0, [x3, #6]
     a70:	strb	w0, [x2, #6]
     a74:	add	x4, x4, x19
     a78:	add	x19, x21, x19
     a7c:	add	x20, x4, #0x1
     a80:	ldrb	w25, [x4]
     a84:	cmp	x25, #0xf
     a88:	b.hi	c94 <lzo1x_decompress_safe+0x354>  // b.pmore
     a8c:	ldrb	w1, [x4, #1]
     a90:	mov	x0, #0xfffffffffffff7ff    	// #-2049
     a94:	sub	x25, x0, x25, lsr #2
     a98:	add	x26, x4, #0x2
     a9c:	sub	x1, x25, w1, uxtb #2
     aa0:	add	x1, x19, x1
     aa4:	cmp	x21, x1
     aa8:	ccmp	x19, x1, #0x0, ls  // ls = plast
     aac:	b.ls	1048 <lzo1x_decompress_safe+0x708>  // b.plast
     ab0:	sub	x0, x24, x19
     ab4:	cmp	x0, #0x2
     ab8:	b.ls	fc8 <lzo1x_decompress_safe+0x688>  // b.plast
     abc:	ldrb	w2, [x1]
     ac0:	add	x0, x19, #0x3
     ac4:	strb	w2, [x19]
     ac8:	ldrb	w2, [x1, #1]
     acc:	strb	w2, [x19, #1]
     ad0:	ldrb	w1, [x1, #2]
     ad4:	strb	w1, [x19, #2]
     ad8:	ldurb	w1, [x26, #-2]
     adc:	ands	w1, w1, #0x3
     ae0:	b.ne	f3c <lzo1x_decompress_safe+0x5fc>  // b.any
     ae4:	mov	x19, x0
     ae8:	b	af0 <lzo1x_decompress_safe+0x1b0>
     aec:	mov	x19, x21
     af0:	cmp	x26, x23
     af4:	b.cs	e60 <lzo1x_decompress_safe+0x520>  // b.hs, b.nlast
     af8:	mov	x20, x26
     afc:	ldrb	w25, [x20], #1
     b00:	cmp	x25, #0xf
     b04:	b.hi	c94 <lzo1x_decompress_safe+0x354>  // b.pmore
     b08:	cbnz	x25, b74 <lzo1x_decompress_safe+0x234>
     b0c:	cmp	x23, x20
     b10:	b.ne	b44 <lzo1x_decompress_safe+0x204>  // b.any
     b14:	nop
     b18:	sub	x19, x19, x21
     b1c:	mov	w0, #0xfffffffc            	// #-4
     b20:	str	x19, [x22]
     b24:	ldp	x19, x20, [sp, #16]
     b28:	ldp	x21, x22, [sp, #32]
     b2c:	ldp	x23, x24, [sp, #48]
     b30:	ldp	x25, x26, [sp, #64]
     b34:	ldp	x29, x30, [sp], #96
     b38:	ret
     b3c:	add	x25, x25, #0xff
     b40:	b.eq	b18 <lzo1x_decompress_safe+0x1d8>  // b.none
     b44:	ldrb	w0, [x20], #1
     b48:	cmp	x23, x20
     b4c:	cbz	w0, b3c <lzo1x_decompress_safe+0x1fc>
     b50:	add	w0, w0, #0xf
     b54:	adds	x25, x25, w0, sxtw
     b58:	b.ne	b74 <lzo1x_decompress_safe+0x234>  // b.any
     b5c:	adrp	x1, 0 <grub_mod_init-0x900>
     b60:	adrp	x0, 0 <grub_mod_init-0x900>
     b64:	mov	w2, #0x106b                	// #4203
     b68:	ldr	x1, [x1]
     b6c:	ldr	x0, [x0]
     b70:	bl	0 <grub_printf>
     b74:	add	x2, x25, #0x3
     b78:	sub	x0, x24, x19
     b7c:	cmp	x0, x2
     b80:	b.cc	fc8 <lzo1x_decompress_safe+0x688>  // b.lo, b.ul, b.last
     b84:	sub	x0, x23, x20
     b88:	add	x1, x25, #0x4
     b8c:	cmp	x0, x1
     b90:	b.cc	b18 <lzo1x_decompress_safe+0x1d8>  // b.lo, b.ul, b.last
     b94:	ldrb	w0, [x20]
     b98:	add	x4, x20, #0x3
     b9c:	strb	w0, [x19]
     ba0:	add	x0, x19, #0xa
     ba4:	sub	x0, x0, x4
     ba8:	add	x3, x19, #0x3
     bac:	ldrb	w1, [x20, #1]
     bb0:	cmp	x0, #0xe
     bb4:	strb	w1, [x19, #1]
     bb8:	sub	x1, x25, #0x1
     bbc:	ccmp	x1, #0x9, #0x0, hi  // hi = pmore
     bc0:	orr	x0, x3, x4
     bc4:	ldrb	w1, [x20, #2]
     bc8:	and	x0, x0, #0x7
     bcc:	strb	w1, [x19, #2]
     bd0:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
     bd4:	b.ne	ea8 <lzo1x_decompress_safe+0x568>  // b.any
     bd8:	sub	x1, x25, #0x8
     bdc:	mov	x0, #0x0                   	// #0
     be0:	lsr	x1, x1, #3
     be4:	add	x1, x1, #0x1
     be8:	ldr	x2, [x4, x0, lsl #3]
     bec:	str	x2, [x3, x0, lsl #3]
     bf0:	add	x0, x0, #0x1
     bf4:	cmp	x0, x1
     bf8:	b.cc	be8 <lzo1x_decompress_safe+0x2a8>  // b.lo, b.ul, b.last
     bfc:	lsl	x1, x1, #3
     c00:	cmp	x25, x1
     c04:	add	x2, x3, x1
     c08:	add	x5, x4, x1
     c0c:	sub	x0, x25, x1
     c10:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c14:	ldrb	w6, [x4, x1]
     c18:	cmp	x0, #0x1
     c1c:	strb	w6, [x3, x1]
     c20:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c24:	ldrb	w1, [x5, #1]
     c28:	cmp	x0, #0x2
     c2c:	strb	w1, [x2, #1]
     c30:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c34:	ldrb	w1, [x5, #2]
     c38:	cmp	x0, #0x3
     c3c:	strb	w1, [x2, #2]
     c40:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c44:	ldrb	w1, [x5, #3]
     c48:	cmp	x0, #0x4
     c4c:	strb	w1, [x2, #3]
     c50:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c54:	ldrb	w1, [x5, #4]
     c58:	cmp	x0, #0x5
     c5c:	strb	w1, [x2, #4]
     c60:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c64:	ldrb	w1, [x5, #5]
     c68:	cmp	x0, #0x6
     c6c:	strb	w1, [x2, #5]
     c70:	b.eq	c7c <lzo1x_decompress_safe+0x33c>  // b.none
     c74:	ldrb	w0, [x5, #6]
     c78:	strb	w0, [x2, #6]
     c7c:	add	x4, x4, x25
     c80:	add	x19, x3, x25
     c84:	add	x20, x4, #0x1
     c88:	ldrb	w25, [x4]
     c8c:	cmp	x25, #0xf
     c90:	b.ls	a8c <lzo1x_decompress_safe+0x14c>  // b.plast
     c94:	cmp	x25, #0x3f
     c98:	b.hi	ec8 <lzo1x_decompress_safe+0x588>  // b.pmore
     c9c:	cmp	x25, #0x1f
     ca0:	b.ls	f54 <lzo1x_decompress_safe+0x614>  // b.plast
     ca4:	ands	x25, x25, #0x1f
     ca8:	b.ne	cd4 <lzo1x_decompress_safe+0x394>  // b.any
     cac:	cmp	x20, x23
     cb0:	b.ne	cc0 <lzo1x_decompress_safe+0x380>  // b.any
     cb4:	b	b18 <lzo1x_decompress_safe+0x1d8>
     cb8:	add	x25, x25, #0xff
     cbc:	b.eq	b18 <lzo1x_decompress_safe+0x1d8>  // b.none
     cc0:	ldrb	w0, [x20], #1
     cc4:	cmp	x23, x20
     cc8:	cbz	w0, cb8 <lzo1x_decompress_safe+0x378>
     ccc:	add	w0, w0, #0x1f
     cd0:	add	x25, x25, w0, sxtw
     cd4:	ldrb	w0, [x20, #1]
     cd8:	add	x26, x20, #0x2
     cdc:	ldrb	w20, [x20]
     ce0:	lsl	w0, w0, #6
     ce4:	add	w20, w0, w20, lsr #2
     ce8:	sxtw	x20, w20
     cec:	mvn	x20, x20
     cf0:	add	x20, x19, x20
     cf4:	cmp	x20, x21
     cf8:	ccmp	x19, x20, #0x0, cs  // cs = hs, nlast
     cfc:	b.ls	1048 <lzo1x_decompress_safe+0x708>  // b.plast
     d00:	cbz	x25, 101c <lzo1x_decompress_safe+0x6dc>
     d04:	sub	x0, x24, x19
     d08:	add	x1, x25, #0x2
     d0c:	cmp	x0, x1
     d10:	b.cc	fc8 <lzo1x_decompress_safe+0x688>  // b.lo, b.ul, b.last
     d14:	mov	x4, x20
     d18:	mov	x3, x19
     d1c:	add	x0, x19, #0x9
     d20:	sub	x5, x25, #0x1
     d24:	ldrb	w2, [x4], #2
     d28:	strb	w2, [x3], #2
     d2c:	sub	x0, x0, x4
     d30:	ldrb	w6, [x20, #1]
     d34:	cmp	x0, #0xe
     d38:	orr	x2, x3, x4
     d3c:	strb	w6, [x19, #1]
     d40:	and	x0, x2, #0x7
     d44:	ccmp	x5, #0x9, #0x0, hi  // hi = pmore
     d48:	ccmp	x0, #0x0, #0x0, hi  // hi = pmore
     d4c:	mov	x0, x3
     d50:	b.ne	f1c <lzo1x_decompress_safe+0x5dc>  // b.any
     d54:	sub	x2, x25, #0x8
     d58:	mov	x1, #0x0                   	// #0
     d5c:	lsr	x2, x2, #3
     d60:	add	x2, x2, #0x1
     d64:	nop
     d68:	ldr	x5, [x4, x1, lsl #3]
     d6c:	str	x5, [x3, x1, lsl #3]
     d70:	add	x1, x1, #0x1
     d74:	cmp	x1, x2
     d78:	b.cc	d68 <lzo1x_decompress_safe+0x428>  // b.lo, b.ul, b.last
     d7c:	lsl	x2, x2, #3
     d80:	cmp	x25, x2
     d84:	add	x5, x3, x2
     d88:	sub	x1, x25, x2
     d8c:	add	x6, x4, x2
     d90:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     d94:	ldrb	w4, [x4, x2]
     d98:	cmp	x1, #0x1
     d9c:	strb	w4, [x3, x2]
     da0:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     da4:	ldrb	w2, [x6, #1]
     da8:	cmp	x1, #0x2
     dac:	strb	w2, [x5, #1]
     db0:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     db4:	ldrb	w2, [x6, #2]
     db8:	cmp	x1, #0x3
     dbc:	strb	w2, [x5, #2]
     dc0:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     dc4:	ldrb	w2, [x6, #3]
     dc8:	cmp	x1, #0x4
     dcc:	strb	w2, [x5, #3]
     dd0:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     dd4:	ldrb	w2, [x6, #4]
     dd8:	cmp	x1, #0x5
     ddc:	strb	w2, [x5, #4]
     de0:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     de4:	ldrb	w2, [x6, #5]
     de8:	cmp	x1, #0x6
     dec:	strb	w2, [x5, #5]
     df0:	b.eq	dfc <lzo1x_decompress_safe+0x4bc>  // b.none
     df4:	ldrb	w1, [x6, #6]
     df8:	strb	w1, [x5, #6]
     dfc:	add	x0, x0, x25
     e00:	b	ad8 <lzo1x_decompress_safe+0x198>
     e04:	mov	x0, x21
     e08:	sub	x1, x24, x0
     e0c:	cmp	x1, x19
     e10:	b.cc	1068 <lzo1x_decompress_safe+0x728>  // b.lo, b.ul, b.last
     e14:	sub	x1, x23, x4
     e18:	add	x2, x19, #0x1
     e1c:	cmp	x1, x2
     e20:	b.cc	1060 <lzo1x_decompress_safe+0x720>  // b.lo, b.ul, b.last
     e24:	ldrb	w1, [x4]
     e28:	cmp	x19, #0x1
     e2c:	strb	w1, [x0]
     e30:	b.eq	e78 <lzo1x_decompress_safe+0x538>  // b.none
     e34:	ldrb	w1, [x4, #1]
     e38:	cmp	x19, #0x2
     e3c:	strb	w1, [x0, #1]
     e40:	b.eq	f48 <lzo1x_decompress_safe+0x608>  // b.none
     e44:	ldrb	w1, [x4, #2]
     e48:	add	x19, x0, #0x3
     e4c:	add	x4, x4, #0x3
     e50:	strb	w1, [x0, #2]
     e54:	add	x20, x4, #0x1
     e58:	cmp	x23, x20
     e5c:	b.hi	e70 <lzo1x_decompress_safe+0x530>  // b.pmore
     e60:	sub	x19, x19, x21
     e64:	mov	w0, #0xfffffff9            	// #-7
     e68:	str	x19, [x22]
     e6c:	b	b24 <lzo1x_decompress_safe+0x1e4>
     e70:	ldrb	w25, [x4]
     e74:	b	c94 <lzo1x_decompress_safe+0x354>
     e78:	add	x4, x4, #0x1
     e7c:	add	x19, x0, #0x1
     e80:	b	e54 <lzo1x_decompress_safe+0x514>
     e84:	and	x0, x2, #0xff
     e88:	mov	x1, #0x0                   	// #0
     e8c:	sub	x0, x0, #0x11
     e90:	ldrb	w2, [x4, x1]
     e94:	strb	w2, [x21, x1]
     e98:	add	x1, x1, #0x1
     e9c:	cmp	x1, x0
     ea0:	b.ne	e90 <lzo1x_decompress_safe+0x550>  // b.any
     ea4:	b	a74 <lzo1x_decompress_safe+0x134>
     ea8:	mov	x0, #0x3                   	// #3
     eac:	nop
     eb0:	ldrb	w1, [x20, x0]
     eb4:	strb	w1, [x19, x0]
     eb8:	add	x0, x0, #0x1
     ebc:	cmp	x2, x0
     ec0:	b.ne	eb0 <lzo1x_decompress_safe+0x570>  // b.any
     ec4:	b	c7c <lzo1x_decompress_safe+0x33c>
     ec8:	mov	x26, x20
     ecc:	ubfx	x0, x25, #2, #3
     ed0:	mvn	x0, x0
     ed4:	lsr	x1, x25, #5
     ed8:	sub	x25, x1, #0x1
     edc:	ldrb	w20, [x26], #1
     ee0:	sub	x20, x0, w20, uxtb #3
     ee4:	add	x20, x19, x20
     ee8:	cmp	x21, x20
     eec:	ccmp	x19, x20, #0x0, ls  // ls = plast
     ef0:	b.ls	1048 <lzo1x_decompress_safe+0x708>  // b.plast
     ef4:	sub	x0, x24, x19
     ef8:	add	x2, x1, #0x1
     efc:	cmp	x0, x2
     f00:	b.cc	fc8 <lzo1x_decompress_safe+0x688>  // b.lo, b.ul, b.last
     f04:	mov	x0, x19
     f08:	ldrb	w2, [x20]
     f0c:	add	x1, x1, #0x1
     f10:	strb	w2, [x0], #2
     f14:	ldrb	w2, [x20, #1]
     f18:	strb	w2, [x19, #1]
     f1c:	mov	x2, #0x2                   	// #2
     f20:	ldrb	w3, [x20, x2]
     f24:	strb	w3, [x19, x2]
     f28:	add	x2, x2, #0x1
     f2c:	cmp	x2, x1
     f30:	b.ne	f20 <lzo1x_decompress_safe+0x5e0>  // b.any
     f34:	add	x0, x0, x25
     f38:	b	ad8 <lzo1x_decompress_safe+0x198>
     f3c:	and	x19, x1, #0xff
     f40:	mov	x4, x26
     f44:	b	e08 <lzo1x_decompress_safe+0x4c8>
     f48:	add	x4, x4, #0x2
     f4c:	add	x19, x0, #0x2
     f50:	b	e54 <lzo1x_decompress_safe+0x514>
     f54:	cmp	x25, #0xf
     f58:	b.ls	fd8 <lzo1x_decompress_safe+0x698>  // b.plast
     f5c:	lsl	x0, x25, #11
     f60:	ands	x25, x25, #0x7
     f64:	and	x1, x0, #0x4000
     f68:	b.ne	1040 <lzo1x_decompress_safe+0x700>  // b.any
     f6c:	cmp	x20, x23
     f70:	b.ne	f80 <lzo1x_decompress_safe+0x640>  // b.any
     f74:	b	b18 <lzo1x_decompress_safe+0x1d8>
     f78:	add	x25, x25, #0xff
     f7c:	b.eq	b18 <lzo1x_decompress_safe+0x1d8>  // b.none
     f80:	ldrb	w0, [x20], #1
     f84:	cmp	x23, x20
     f88:	cbz	w0, f78 <lzo1x_decompress_safe+0x638>
     f8c:	add	w0, w0, #0x7
     f90:	str	x27, [sp, #80]
     f94:	add	x25, x25, w0, sxtw
     f98:	ldrb	w0, [x20, #1]
     f9c:	add	x26, x20, #0x2
     fa0:	ldrb	w27, [x20]
     fa4:	lsl	w0, w0, #6
     fa8:	add	w27, w0, w27, lsr #2
     fac:	add	x27, x1, w27, sxtw
     fb0:	sub	x27, x19, x27
     fb4:	cmp	x19, x27
     fb8:	sub	x20, x27, #0x4, lsl #12
     fbc:	b.eq	1070 <lzo1x_decompress_safe+0x730>  // b.none
     fc0:	ldr	x27, [sp, #80]
     fc4:	b	cf4 <lzo1x_decompress_safe+0x3b4>
     fc8:	sub	x19, x19, x21
     fcc:	mov	w0, #0xfffffffb            	// #-5
     fd0:	str	x19, [x22]
     fd4:	b	b24 <lzo1x_decompress_safe+0x1e4>
     fd8:	mov	x26, x20
     fdc:	mvn	x25, x25, lsr #2
     fe0:	ldrb	w1, [x26], #1
     fe4:	sub	x1, x25, w1, uxtb #2
     fe8:	add	x1, x19, x1
     fec:	cmp	x21, x1
     ff0:	ccmp	x19, x1, #0x0, ls  // ls = plast
     ff4:	b.ls	1048 <lzo1x_decompress_safe+0x708>  // b.plast
     ff8:	sub	x0, x24, x19
     ffc:	cmp	x0, #0x1
    1000:	b.ls	fc8 <lzo1x_decompress_safe+0x688>  // b.plast
    1004:	mov	x0, x19
    1008:	ldrb	w2, [x1]
    100c:	strb	w2, [x0], #2
    1010:	ldrb	w1, [x1, #1]
    1014:	strb	w1, [x19, #1]
    1018:	b	ad8 <lzo1x_decompress_safe+0x198>
    101c:	adrp	x1, 0 <grub_mod_init-0x900>
    1020:	adrp	x0, 0 <grub_mod_init-0x900>
    1024:	mov	w2, #0x116b                	// #4459
    1028:	ldr	x1, [x1]
    102c:	ldr	x0, [x0]
    1030:	bl	0 <grub_printf>
    1034:	b	d04 <lzo1x_decompress_safe+0x3c4>
    1038:	mov	x19, #0x0                   	// #0
    103c:	b	b1c <lzo1x_decompress_safe+0x1dc>
    1040:	str	x27, [sp, #80]
    1044:	b	f98 <lzo1x_decompress_safe+0x658>
    1048:	sub	x19, x19, x21
    104c:	mov	w0, #0xfffffffa            	// #-6
    1050:	str	x19, [x22]
    1054:	b	b24 <lzo1x_decompress_safe+0x1e4>
    1058:	mov	x19, #0x0                   	// #0
    105c:	b	fcc <lzo1x_decompress_safe+0x68c>
    1060:	sub	x19, x0, x21
    1064:	b	b1c <lzo1x_decompress_safe+0x1dc>
    1068:	sub	x19, x0, x21
    106c:	b	fcc <lzo1x_decompress_safe+0x68c>
    1070:	cmp	x25, #0x1
    1074:	b.ne	10a0 <lzo1x_decompress_safe+0x760>  // b.any
    1078:	cmp	x23, x26
    107c:	mov	w1, #0xfffffffc            	// #-4
    1080:	mov	w0, #0xfffffff8            	// #-8
    1084:	csel	w0, w0, w1, hi  // hi = pmore
    1088:	sub	x21, x27, x21
    108c:	mov	w1, #0x0                   	// #0
    1090:	csel	w0, w0, w1, ne  // ne = any
    1094:	ldr	x27, [sp, #80]
    1098:	str	x21, [x22]
    109c:	b	b24 <lzo1x_decompress_safe+0x1e4>
    10a0:	adrp	x1, 0 <grub_mod_init-0x900>
    10a4:	adrp	x0, 0 <grub_mod_init-0x900>
    10a8:	mov	w2, #0x11b7                	// #4535
    10ac:	ldr	x1, [x1]
    10b0:	ldr	x0, [x0]
    10b4:	bl	0 <grub_printf>
    10b8:	b	1078 <lzo1x_decompress_safe+0x738>
    10bc:	nop
	...
