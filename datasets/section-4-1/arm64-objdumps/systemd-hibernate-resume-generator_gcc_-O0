
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400c68 <_init>:
  400c68:	stp	x29, x30, [sp, #-16]!
  400c6c:	mov	x29, sp
  400c70:	bl	400e70 <call_weak_fn>
  400c74:	ldp	x29, x30, [sp], #16
  400c78:	ret

Disassembly of section .plt:

0000000000400c80 <.plt>:
  400c80:	stp	x16, x30, [sp, #-16]!
  400c84:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400c88:	ldr	x17, [x16, #3880]
  400c8c:	add	x16, x16, #0xf28
  400c90:	br	x17
  400c94:	nop
  400c98:	nop
  400c9c:	nop

0000000000400ca0 <mkdir_parents_label@plt>:
  400ca0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400ca4:	ldr	x17, [x16, #3888]
  400ca8:	add	x16, x16, #0xf30
  400cac:	br	x17

0000000000400cb0 <__libc_start_main@plt>:
  400cb0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400cb4:	ldr	x17, [x16, #3896]
  400cb8:	add	x16, x16, #0xf38
  400cbc:	br	x17

0000000000400cc0 <__gmon_start__@plt>:
  400cc0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400cc4:	ldr	x17, [x16, #3904]
  400cc8:	add	x16, x16, #0xf40
  400ccc:	br	x17

0000000000400cd0 <polkit_agent_close@plt>:
  400cd0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400cd4:	ldr	x17, [x16, #3912]
  400cd8:	add	x16, x16, #0xf48
  400cdc:	br	x17

0000000000400ce0 <generator_write_timeouts@plt>:
  400ce0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400ce4:	ldr	x17, [x16, #3920]
  400ce8:	add	x16, x16, #0xf50
  400cec:	br	x17

0000000000400cf0 <symlink@plt>:
  400cf0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400cf4:	ldr	x17, [x16, #3928]
  400cf8:	add	x16, x16, #0xf58
  400cfc:	br	x17

0000000000400d00 <strjoin_real@plt>:
  400d00:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d04:	ldr	x17, [x16, #3936]
  400d08:	add	x16, x16, #0xf60
  400d0c:	br	x17

0000000000400d10 <in_initrd@plt>:
  400d10:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d14:	ldr	x17, [x16, #3944]
  400d18:	add	x16, x16, #0xf68
  400d1c:	br	x17

0000000000400d20 <abort@plt>:
  400d20:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d24:	ldr	x17, [x16, #3952]
  400d28:	add	x16, x16, #0xf70
  400d2c:	br	x17

0000000000400d30 <unit_name_from_path_instance@plt>:
  400d30:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d34:	ldr	x17, [x16, #3960]
  400d38:	add	x16, x16, #0xf78
  400d3c:	br	x17

0000000000400d40 <log_setup_generator@plt>:
  400d40:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d44:	ldr	x17, [x16, #3968]
  400d48:	add	x16, x16, #0xf80
  400d4c:	br	x17

0000000000400d50 <fstab_node_to_udev_node@plt>:
  400d50:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d54:	ldr	x17, [x16, #3976]
  400d58:	add	x16, x16, #0xf88
  400d5c:	br	x17

0000000000400d60 <__errno_location@plt>:
  400d60:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d64:	ldr	x17, [x16, #3984]
  400d68:	add	x16, x16, #0xf90
  400d6c:	br	x17

0000000000400d70 <strextend_with_separator@plt>:
  400d70:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d74:	ldr	x17, [x16, #3992]
  400d78:	add	x16, x16, #0xf98
  400d7c:	br	x17

0000000000400d80 <__stack_chk_fail@plt>:
  400d80:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d84:	ldr	x17, [x16, #4000]
  400d88:	add	x16, x16, #0xfa0
  400d8c:	br	x17

0000000000400d90 <ask_password_agent_close@plt>:
  400d90:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400d94:	ldr	x17, [x16, #4008]
  400d98:	add	x16, x16, #0xfa8
  400d9c:	br	x17

0000000000400da0 <pager_close@plt>:
  400da0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400da4:	ldr	x17, [x16, #4016]
  400da8:	add	x16, x16, #0xfb0
  400dac:	br	x17

0000000000400db0 <log_internal_realm@plt>:
  400db0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400db4:	ldr	x17, [x16, #4024]
  400db8:	add	x16, x16, #0xfb8
  400dbc:	br	x17

0000000000400dc0 <strcmp@plt>:
  400dc0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400dc4:	ldr	x17, [x16, #4032]
  400dc8:	add	x16, x16, #0xfc0
  400dcc:	br	x17

0000000000400dd0 <proc_cmdline_parse@plt>:
  400dd0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400dd4:	ldr	x17, [x16, #4040]
  400dd8:	add	x16, x16, #0xfc8
  400ddc:	br	x17

0000000000400de0 <free@plt>:
  400de0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400de4:	ldr	x17, [x16, #4048]
  400de8:	add	x16, x16, #0xfd0
  400dec:	br	x17

0000000000400df0 <mac_selinux_finish@plt>:
  400df0:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400df4:	ldr	x17, [x16, #4056]
  400df8:	add	x16, x16, #0xfd8
  400dfc:	br	x17

0000000000400e00 <log_oom_internal@plt>:
  400e00:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400e04:	ldr	x17, [x16, #4064]
  400e08:	add	x16, x16, #0xfe0
  400e0c:	br	x17

0000000000400e10 <log_get_max_level_realm@plt>:
  400e10:	adrp	x16, 412000 <__FRAME_END__+0xfea8>
  400e14:	ldr	x17, [x16, #4072]
  400e18:	add	x16, x16, #0xfe8
  400e1c:	br	x17

Disassembly of section .text:

0000000000400e20 <_start>:
  400e20:	mov	x29, #0x0                   	// #0
  400e24:	mov	x30, #0x0                   	// #0
  400e28:	mov	x5, x0
  400e2c:	ldr	x1, [sp]
  400e30:	add	x2, sp, #0x8
  400e34:	mov	x6, sp
  400e38:	movz	x0, #0x0, lsl #48
  400e3c:	movk	x0, #0x0, lsl #32
  400e40:	movk	x0, #0x40, lsl #16
  400e44:	movk	x0, #0x1a18
  400e48:	movz	x3, #0x0, lsl #48
  400e4c:	movk	x3, #0x0, lsl #32
  400e50:	movk	x3, #0x40, lsl #16
  400e54:	movk	x3, #0x1a68
  400e58:	movz	x4, #0x0, lsl #48
  400e5c:	movk	x4, #0x0, lsl #32
  400e60:	movk	x4, #0x40, lsl #16
  400e64:	movk	x4, #0x1ae8
  400e68:	bl	400cb0 <__libc_start_main@plt>
  400e6c:	bl	400d20 <abort@plt>

0000000000400e70 <call_weak_fn>:
  400e70:	adrp	x0, 412000 <__FRAME_END__+0xfea8>
  400e74:	ldr	x0, [x0, #4088]
  400e78:	cbz	x0, 400e80 <call_weak_fn+0x10>
  400e7c:	b	400cc0 <__gmon_start__@plt>
  400e80:	ret

0000000000400e84 <deregister_tm_clones>:
  400e84:	stp	x29, x30, [sp, #-32]!
  400e88:	mov	x29, sp
  400e8c:	adrp	x0, 413000 <arg_dest>
  400e90:	add	x0, x0, #0x8
  400e94:	str	x0, [sp, #24]
  400e98:	ldr	x0, [sp, #24]
  400e9c:	str	x0, [sp, #24]
  400ea0:	ldr	x1, [sp, #24]
  400ea4:	adrp	x0, 413000 <arg_dest>
  400ea8:	add	x0, x0, #0x8
  400eac:	cmp	x1, x0
  400eb0:	b.eq	400eec <deregister_tm_clones+0x68>  // b.none
  400eb4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  400eb8:	add	x0, x0, #0xb00
  400ebc:	ldr	x0, [x0]
  400ec0:	str	x0, [sp, #16]
  400ec4:	ldr	x0, [sp, #16]
  400ec8:	str	x0, [sp, #16]
  400ecc:	ldr	x0, [sp, #16]
  400ed0:	cmp	x0, #0x0
  400ed4:	b.eq	400ef0 <deregister_tm_clones+0x6c>  // b.none
  400ed8:	ldr	x1, [sp, #16]
  400edc:	adrp	x0, 413000 <arg_dest>
  400ee0:	add	x0, x0, #0x8
  400ee4:	blr	x1
  400ee8:	b	400ef0 <deregister_tm_clones+0x6c>
  400eec:	nop
  400ef0:	ldp	x29, x30, [sp], #32
  400ef4:	ret

0000000000400ef8 <register_tm_clones>:
  400ef8:	stp	x29, x30, [sp, #-48]!
  400efc:	mov	x29, sp
  400f00:	adrp	x0, 413000 <arg_dest>
  400f04:	add	x0, x0, #0x8
  400f08:	str	x0, [sp, #40]
  400f0c:	ldr	x0, [sp, #40]
  400f10:	str	x0, [sp, #40]
  400f14:	ldr	x1, [sp, #40]
  400f18:	adrp	x0, 413000 <arg_dest>
  400f1c:	add	x0, x0, #0x8
  400f20:	sub	x0, x1, x0
  400f24:	asr	x0, x0, #3
  400f28:	lsr	x1, x0, #63
  400f2c:	add	x0, x1, x0
  400f30:	asr	x0, x0, #1
  400f34:	str	x0, [sp, #32]
  400f38:	ldr	x0, [sp, #32]
  400f3c:	cmp	x0, #0x0
  400f40:	b.eq	400f80 <register_tm_clones+0x88>  // b.none
  400f44:	adrp	x0, 401000 <ALIGN_TO+0x18>
  400f48:	add	x0, x0, #0xb08
  400f4c:	ldr	x0, [x0]
  400f50:	str	x0, [sp, #24]
  400f54:	ldr	x0, [sp, #24]
  400f58:	str	x0, [sp, #24]
  400f5c:	ldr	x0, [sp, #24]
  400f60:	cmp	x0, #0x0
  400f64:	b.eq	400f84 <register_tm_clones+0x8c>  // b.none
  400f68:	ldr	x2, [sp, #24]
  400f6c:	ldr	x1, [sp, #32]
  400f70:	adrp	x0, 413000 <arg_dest>
  400f74:	add	x0, x0, #0x8
  400f78:	blr	x2
  400f7c:	b	400f84 <register_tm_clones+0x8c>
  400f80:	nop
  400f84:	ldp	x29, x30, [sp], #48
  400f88:	ret

0000000000400f8c <__do_global_dtors_aux>:
  400f8c:	stp	x29, x30, [sp, #-16]!
  400f90:	mov	x29, sp
  400f94:	adrp	x0, 413000 <arg_dest>
  400f98:	add	x0, x0, #0x14
  400f9c:	ldrb	w0, [x0]
  400fa0:	and	x0, x0, #0xff
  400fa4:	cmp	x0, #0x0
  400fa8:	b.ne	400fc4 <__do_global_dtors_aux+0x38>  // b.any
  400fac:	bl	400e84 <deregister_tm_clones>
  400fb0:	adrp	x0, 413000 <arg_dest>
  400fb4:	add	x0, x0, #0x14
  400fb8:	mov	w1, #0x1                   	// #1
  400fbc:	strb	w1, [x0]
  400fc0:	b	400fc8 <__do_global_dtors_aux+0x3c>
  400fc4:	nop
  400fc8:	ldp	x29, x30, [sp], #16
  400fcc:	ret

0000000000400fd0 <frame_dummy>:
  400fd0:	stp	x29, x30, [sp, #-16]!
  400fd4:	mov	x29, sp
  400fd8:	bl	400ef8 <register_tm_clones>
  400fdc:	nop
  400fe0:	ldp	x29, x30, [sp], #16
  400fe4:	ret

0000000000400fe8 <ALIGN_TO>:
  400fe8:	sub	sp, sp, #0x10
  400fec:	str	x0, [sp, #8]
  400ff0:	str	x1, [sp]
  400ff4:	ldr	x1, [sp, #8]
  400ff8:	ldr	x0, [sp]
  400ffc:	add	x0, x1, x0
  401000:	sub	x1, x0, #0x1
  401004:	ldr	x0, [sp]
  401008:	neg	x0, x0
  40100c:	and	x0, x1, x0
  401010:	add	sp, sp, #0x10
  401014:	ret

0000000000401018 <freep>:
  401018:	stp	x29, x30, [sp, #-32]!
  40101c:	mov	x29, sp
  401020:	str	x0, [sp, #24]
  401024:	ldr	x0, [sp, #24]
  401028:	ldr	x0, [x0]
  40102c:	bl	400de0 <free@plt>
  401030:	nop
  401034:	ldp	x29, x30, [sp], #32
  401038:	ret

000000000040103c <save_argc_argv>:
  40103c:	sub	sp, sp, #0x10
  401040:	str	w0, [sp, #12]
  401044:	str	x1, [sp]
  401048:	adrp	x0, 413000 <arg_dest>
  40104c:	add	x0, x0, #0x10
  401050:	ldr	w1, [sp, #12]
  401054:	str	w1, [x0]
  401058:	adrp	x0, 413000 <arg_dest>
  40105c:	add	x0, x0, #0x8
  401060:	ldr	x1, [sp]
  401064:	str	x1, [x0]
  401068:	nop
  40106c:	add	sp, sp, #0x10
  401070:	ret

0000000000401074 <static_destruct>:
  401074:	stp	x29, x30, [sp, #-32]!
  401078:	mov	x29, sp
  40107c:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401080:	add	x0, x0, #0xdd0
  401084:	ldr	x0, [x0]
  401088:	cmp	x0, #0x0
  40108c:	b.eq	4010f0 <static_destruct+0x7c>  // b.none
  401090:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401094:	add	x0, x0, #0xdd0
  401098:	ldr	x0, [x0]
  40109c:	mov	x1, #0x8                   	// #8
  4010a0:	bl	400fe8 <ALIGN_TO>
  4010a4:	str	x0, [sp, #24]
  4010a8:	b	4010d4 <static_destruct+0x60>
  4010ac:	ldr	x0, [sp, #24]
  4010b0:	ldr	x1, [x0, #8]
  4010b4:	ldr	x0, [sp, #24]
  4010b8:	ldr	x0, [x0]
  4010bc:	blr	x1
  4010c0:	ldr	x0, [sp, #24]
  4010c4:	add	x0, x0, #0x10
  4010c8:	mov	x1, #0x8                   	// #8
  4010cc:	bl	400fe8 <ALIGN_TO>
  4010d0:	str	x0, [sp, #24]
  4010d4:	ldr	x1, [sp, #24]
  4010d8:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4010dc:	add	x0, x0, #0xdd8
  4010e0:	ldr	x0, [x0]
  4010e4:	cmp	x1, x0
  4010e8:	b.cc	4010ac <static_destruct+0x38>  // b.lo, b.ul, b.last
  4010ec:	b	4010f4 <static_destruct+0x80>
  4010f0:	nop
  4010f4:	ldp	x29, x30, [sp], #32
  4010f8:	ret

00000000004010fc <proc_cmdline_value_missing>:
  4010fc:	stp	x29, x30, [sp, #-48]!
  401100:	mov	x29, sp
  401104:	str	x0, [sp, #24]
  401108:	str	x1, [sp, #16]
  40110c:	ldr	x0, [sp, #16]
  401110:	cmp	x0, #0x0
  401114:	b.ne	401198 <proc_cmdline_value_missing+0x9c>  // b.any
  401118:	mov	w0, #0x4                   	// #4
  40111c:	str	w0, [sp, #36]
  401120:	str	wzr, [sp, #40]
  401124:	str	wzr, [sp, #44]
  401128:	ldr	w0, [sp, #44]
  40112c:	bl	400e10 <log_get_max_level_realm@plt>
  401130:	mov	w1, w0
  401134:	ldr	w0, [sp, #36]
  401138:	and	w0, w0, #0x7
  40113c:	cmp	w1, w0
  401140:	b.lt	401188 <proc_cmdline_value_missing+0x8c>  // b.tstop
  401144:	ldr	w0, [sp, #44]
  401148:	lsl	w1, w0, #10
  40114c:	ldr	w0, [sp, #36]
  401150:	orr	w7, w1, w0
  401154:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401158:	add	x1, x0, #0xb13
  40115c:	ldr	x6, [sp, #24]
  401160:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401164:	add	x5, x0, #0xb30
  401168:	adrp	x0, 401000 <ALIGN_TO+0x18>
  40116c:	add	x4, x0, #0xdf8
  401170:	mov	w3, #0x21                  	// #33
  401174:	mov	x2, x1
  401178:	ldr	w1, [sp, #40]
  40117c:	mov	w0, w7
  401180:	bl	400db0 <log_internal_realm@plt>
  401184:	b	401190 <proc_cmdline_value_missing+0x94>
  401188:	ldr	w0, [sp, #40]
  40118c:	cmp	w0, #0x0
  401190:	mov	w0, #0x1                   	// #1
  401194:	b	40119c <proc_cmdline_value_missing+0xa0>
  401198:	mov	w0, #0x0                   	// #0
  40119c:	ldp	x29, x30, [sp], #48
  4011a0:	ret

00000000004011a4 <__unique_prefix_static_destructor_wrapper0>:
  4011a4:	stp	x29, x30, [sp, #-48]!
  4011a8:	mov	x29, sp
  4011ac:	str	x0, [sp, #24]
  4011b0:	ldr	x0, [sp, #24]
  4011b4:	str	x0, [sp, #40]
  4011b8:	ldr	x0, [sp, #40]
  4011bc:	bl	401018 <freep>
  4011c0:	nop
  4011c4:	ldp	x29, x30, [sp], #48
  4011c8:	ret

00000000004011cc <__unique_prefix_static_destructor_wrapper1>:
  4011cc:	stp	x29, x30, [sp, #-48]!
  4011d0:	mov	x29, sp
  4011d4:	str	x0, [sp, #24]
  4011d8:	ldr	x0, [sp, #24]
  4011dc:	str	x0, [sp, #40]
  4011e0:	ldr	x0, [sp, #40]
  4011e4:	bl	401018 <freep>
  4011e8:	nop
  4011ec:	ldp	x29, x30, [sp], #48
  4011f0:	ret

00000000004011f4 <__unique_prefix_static_destructor_wrapper2>:
  4011f4:	stp	x29, x30, [sp, #-48]!
  4011f8:	mov	x29, sp
  4011fc:	str	x0, [sp, #24]
  401200:	ldr	x0, [sp, #24]
  401204:	str	x0, [sp, #40]
  401208:	ldr	x0, [sp, #40]
  40120c:	bl	401018 <freep>
  401210:	nop
  401214:	ldp	x29, x30, [sp], #48
  401218:	ret

000000000040121c <parse_proc_cmdline_item>:
  40121c:	stp	x29, x30, [sp, #-80]!
  401220:	mov	x29, sp
  401224:	str	x0, [sp, #40]
  401228:	str	x1, [sp, #32]
  40122c:	str	x2, [sp, #24]
  401230:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401234:	add	x1, x0, #0xb78
  401238:	ldr	x0, [sp, #40]
  40123c:	bl	400dc0 <strcmp@plt>
  401240:	cmp	w0, #0x0
  401244:	b.ne	4012c8 <parse_proc_cmdline_item+0xac>  // b.any
  401248:	ldr	x1, [sp, #32]
  40124c:	ldr	x0, [sp, #40]
  401250:	bl	4010fc <proc_cmdline_value_missing>
  401254:	and	w0, w0, #0xff
  401258:	cmp	w0, #0x0
  40125c:	b.eq	401268 <parse_proc_cmdline_item+0x4c>  // b.none
  401260:	mov	w0, #0x0                   	// #0
  401264:	b	401474 <parse_proc_cmdline_item+0x258>
  401268:	ldr	x0, [sp, #32]
  40126c:	bl	400d50 <fstab_node_to_udev_node@plt>
  401270:	str	x0, [sp, #72]
  401274:	ldr	x0, [sp, #72]
  401278:	cmp	x0, #0x0
  40127c:	b.ne	4012a0 <parse_proc_cmdline_item+0x84>  // b.any
  401280:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401284:	add	x1, x0, #0xb83
  401288:	adrp	x0, 401000 <ALIGN_TO+0x18>
  40128c:	add	x3, x0, #0xde0
  401290:	mov	w2, #0x26                  	// #38
  401294:	mov	w0, #0x0                   	// #0
  401298:	bl	400e00 <log_oom_internal@plt>
  40129c:	b	401474 <parse_proc_cmdline_item+0x258>
  4012a0:	adrp	x0, 413000 <arg_dest>
  4012a4:	add	x0, x0, #0x18
  4012a8:	ldr	x0, [x0]
  4012ac:	bl	400de0 <free@plt>
  4012b0:	adrp	x0, 413000 <arg_dest>
  4012b4:	add	x0, x0, #0x18
  4012b8:	ldr	x1, [sp, #72]
  4012bc:	str	x1, [x0]
  4012c0:	str	xzr, [sp, #72]
  4012c4:	b	401470 <parse_proc_cmdline_item+0x254>
  4012c8:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4012cc:	add	x1, x0, #0xbb8
  4012d0:	ldr	x0, [sp, #40]
  4012d4:	bl	400dc0 <strcmp@plt>
  4012d8:	cmp	w0, #0x0
  4012dc:	b.ne	401344 <parse_proc_cmdline_item+0x128>  // b.any
  4012e0:	ldr	x1, [sp, #32]
  4012e4:	ldr	x0, [sp, #40]
  4012e8:	bl	4010fc <proc_cmdline_value_missing>
  4012ec:	and	w0, w0, #0xff
  4012f0:	cmp	w0, #0x0
  4012f4:	b.eq	401300 <parse_proc_cmdline_item+0xe4>  // b.none
  4012f8:	mov	w0, #0x0                   	// #0
  4012fc:	b	401474 <parse_proc_cmdline_item+0x258>
  401300:	mov	x3, #0x0                   	// #0
  401304:	ldr	x2, [sp, #32]
  401308:	adrp	x0, 401000 <ALIGN_TO+0x18>
  40130c:	add	x1, x0, #0xbc8
  401310:	adrp	x0, 413000 <arg_dest>
  401314:	add	x0, x0, #0x20
  401318:	bl	400d70 <strextend_with_separator@plt>
  40131c:	cmp	x0, #0x0
  401320:	b.ne	401470 <parse_proc_cmdline_item+0x254>  // b.any
  401324:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401328:	add	x1, x0, #0xb83
  40132c:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401330:	add	x3, x0, #0xde0
  401334:	mov	w2, #0x30                  	// #48
  401338:	mov	w0, #0x0                   	// #0
  40133c:	bl	400e00 <log_oom_internal@plt>
  401340:	b	401474 <parse_proc_cmdline_item+0x258>
  401344:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401348:	add	x1, x0, #0xbd0
  40134c:	ldr	x0, [sp, #40]
  401350:	bl	400dc0 <strcmp@plt>
  401354:	cmp	w0, #0x0
  401358:	b.ne	4013c0 <parse_proc_cmdline_item+0x1a4>  // b.any
  40135c:	ldr	x1, [sp, #32]
  401360:	ldr	x0, [sp, #40]
  401364:	bl	4010fc <proc_cmdline_value_missing>
  401368:	and	w0, w0, #0xff
  40136c:	cmp	w0, #0x0
  401370:	b.eq	40137c <parse_proc_cmdline_item+0x160>  // b.none
  401374:	mov	w0, #0x0                   	// #0
  401378:	b	401474 <parse_proc_cmdline_item+0x258>
  40137c:	mov	x3, #0x0                   	// #0
  401380:	ldr	x2, [sp, #32]
  401384:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401388:	add	x1, x0, #0xbc8
  40138c:	adrp	x0, 413000 <arg_dest>
  401390:	add	x0, x0, #0x28
  401394:	bl	400d70 <strextend_with_separator@plt>
  401398:	cmp	x0, #0x0
  40139c:	b.ne	401470 <parse_proc_cmdline_item+0x254>  // b.any
  4013a0:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4013a4:	add	x1, x0, #0xb83
  4013a8:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4013ac:	add	x3, x0, #0xde0
  4013b0:	mov	w2, #0x38                  	// #56
  4013b4:	mov	w0, #0x0                   	// #0
  4013b8:	bl	400e00 <log_oom_internal@plt>
  4013bc:	b	401474 <parse_proc_cmdline_item+0x258>
  4013c0:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4013c4:	add	x1, x0, #0xbe0
  4013c8:	ldr	x0, [sp, #40]
  4013cc:	bl	400dc0 <strcmp@plt>
  4013d0:	cmp	w0, #0x0
  4013d4:	b.ne	401470 <parse_proc_cmdline_item+0x254>  // b.any
  4013d8:	ldr	x0, [sp, #32]
  4013dc:	cmp	x0, #0x0
  4013e0:	b.eq	401460 <parse_proc_cmdline_item+0x244>  // b.none
  4013e4:	mov	w0, #0x4                   	// #4
  4013e8:	str	w0, [sp, #60]
  4013ec:	str	wzr, [sp, #64]
  4013f0:	str	wzr, [sp, #68]
  4013f4:	ldr	w0, [sp, #68]
  4013f8:	bl	400e10 <log_get_max_level_realm@plt>
  4013fc:	mov	w1, w0
  401400:	ldr	w0, [sp, #60]
  401404:	and	w0, w0, #0x7
  401408:	cmp	w1, w0
  40140c:	b.lt	401450 <parse_proc_cmdline_item+0x234>  // b.tstop
  401410:	ldr	w0, [sp, #68]
  401414:	lsl	w1, w0, #10
  401418:	ldr	w0, [sp, #60]
  40141c:	orr	w6, w1, w0
  401420:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401424:	add	x1, x0, #0xb83
  401428:	adrp	x0, 401000 <ALIGN_TO+0x18>
  40142c:	add	x5, x0, #0xbf0
  401430:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401434:	add	x4, x0, #0xde0
  401438:	mov	w3, #0x3c                  	// #60
  40143c:	mov	x2, x1
  401440:	ldr	w1, [sp, #64]
  401444:	mov	w0, w6
  401448:	bl	400db0 <log_internal_realm@plt>
  40144c:	b	401458 <parse_proc_cmdline_item+0x23c>
  401450:	ldr	w0, [sp, #64]
  401454:	cmp	w0, #0x0
  401458:	mov	w0, #0x0                   	// #0
  40145c:	b	401474 <parse_proc_cmdline_item+0x258>
  401460:	adrp	x0, 413000 <arg_dest>
  401464:	add	x0, x0, #0x30
  401468:	mov	w1, #0x1                   	// #1
  40146c:	strb	w1, [x0]
  401470:	mov	w0, #0x0                   	// #0
  401474:	ldp	x29, x30, [sp], #80
  401478:	ret

000000000040147c <process_resume>:
  40147c:	stp	x29, x30, [sp, #-96]!
  401480:	mov	x29, sp
  401484:	str	x19, [sp, #16]
  401488:	adrp	x0, 412000 <__FRAME_END__+0xfea8>
  40148c:	add	x0, x0, #0xce0
  401490:	ldr	x1, [x0]
  401494:	str	x1, [sp, #88]
  401498:	mov	x1, #0x0                   	// #0
  40149c:	str	xzr, [sp, #64]
  4014a0:	str	xzr, [sp, #72]
  4014a4:	adrp	x0, 413000 <arg_dest>
  4014a8:	add	x0, x0, #0x18
  4014ac:	ldr	x0, [x0]
  4014b0:	cmp	x0, #0x0
  4014b4:	b.ne	4014c0 <process_resume+0x44>  // b.any
  4014b8:	mov	w19, #0x0                   	// #0
  4014bc:	b	40172c <process_resume+0x2b0>
  4014c0:	adrp	x0, 413000 <arg_dest>
  4014c4:	add	x0, x0, #0x18
  4014c8:	ldr	x1, [x0]
  4014cc:	add	x0, sp, #0x40
  4014d0:	mov	x3, x0
  4014d4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4014d8:	add	x2, x0, #0xc40
  4014dc:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4014e0:	add	x0, x0, #0xc50
  4014e4:	bl	400d30 <unit_name_from_path_instance@plt>
  4014e8:	str	w0, [sp, #36]
  4014ec:	ldr	w0, [sp, #36]
  4014f0:	cmp	w0, #0x0
  4014f4:	b.ge	401584 <process_resume+0x108>  // b.tcont
  4014f8:	mov	w0, #0x3                   	// #3
  4014fc:	str	w0, [sp, #52]
  401500:	ldr	w0, [sp, #36]
  401504:	str	w0, [sp, #56]
  401508:	str	wzr, [sp, #60]
  40150c:	ldr	w0, [sp, #60]
  401510:	bl	400e10 <log_get_max_level_realm@plt>
  401514:	mov	w1, w0
  401518:	ldr	w0, [sp, #52]
  40151c:	and	w0, w0, #0x7
  401520:	cmp	w1, w0
  401524:	b.lt	40156c <process_resume+0xf0>  // b.tstop
  401528:	ldr	w0, [sp, #60]
  40152c:	lsl	w1, w0, #10
  401530:	ldr	w0, [sp, #52]
  401534:	orr	w6, w1, w0
  401538:	adrp	x0, 401000 <ALIGN_TO+0x18>
  40153c:	add	x1, x0, #0xb83
  401540:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401544:	add	x5, x0, #0xc70
  401548:	adrp	x0, 401000 <ALIGN_TO+0x18>
  40154c:	add	x4, x0, #0xe18
  401550:	mov	w3, #0x50                  	// #80
  401554:	mov	x2, x1
  401558:	ldr	w1, [sp, #56]
  40155c:	mov	w0, w6
  401560:	bl	400db0 <log_internal_realm@plt>
  401564:	mov	w19, w0
  401568:	b	40172c <process_resume+0x2b0>
  40156c:	ldr	w0, [sp, #56]
  401570:	cmp	w0, #0x0
  401574:	cneg	w0, w0, lt  // lt = tstop
  401578:	and	w0, w0, #0xff
  40157c:	neg	w19, w0
  401580:	b	40172c <process_resume+0x2b0>
  401584:	adrp	x0, 413000 <arg_dest>
  401588:	add	x0, x0, #0x0
  40158c:	ldr	x4, [x0]
  401590:	ldr	x0, [sp, #64]
  401594:	mov	x3, #0x0                   	// #0
  401598:	mov	x2, x0
  40159c:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4015a0:	add	x1, x0, #0xc98
  4015a4:	mov	x0, x4
  4015a8:	bl	400d00 <strjoin_real@plt>
  4015ac:	str	x0, [sp, #72]
  4015b0:	ldr	x0, [sp, #72]
  4015b4:	cmp	x0, #0x0
  4015b8:	b.ne	4015e0 <process_resume+0x164>  // b.any
  4015bc:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4015c0:	add	x1, x0, #0xb83
  4015c4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4015c8:	add	x3, x0, #0xe18
  4015cc:	mov	w2, #0x54                  	// #84
  4015d0:	mov	w0, #0x0                   	// #0
  4015d4:	bl	400e00 <log_oom_internal@plt>
  4015d8:	mov	w19, w0
  4015dc:	b	40172c <process_resume+0x2b0>
  4015e0:	ldr	x0, [sp, #72]
  4015e4:	mov	w1, #0x1ed                 	// #493
  4015e8:	bl	400ca0 <mkdir_parents_label@plt>
  4015ec:	ldr	x0, [sp, #72]
  4015f0:	mov	x1, x0
  4015f4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4015f8:	add	x0, x0, #0xcb0
  4015fc:	bl	400cf0 <symlink@plt>
  401600:	cmp	w0, #0x0
  401604:	b.ge	4016a0 <process_resume+0x224>  // b.tcont
  401608:	mov	w0, #0x3                   	// #3
  40160c:	str	w0, [sp, #40]
  401610:	bl	400d60 <__errno_location@plt>
  401614:	ldr	w0, [x0]
  401618:	str	w0, [sp, #44]
  40161c:	str	wzr, [sp, #48]
  401620:	ldr	w0, [sp, #48]
  401624:	bl	400e10 <log_get_max_level_realm@plt>
  401628:	mov	w1, w0
  40162c:	ldr	w0, [sp, #40]
  401630:	and	w0, w0, #0x7
  401634:	cmp	w1, w0
  401638:	b.lt	401688 <process_resume+0x20c>  // b.tstop
  40163c:	ldr	w0, [sp, #48]
  401640:	lsl	w1, w0, #10
  401644:	ldr	w0, [sp, #40]
  401648:	orr	w7, w1, w0
  40164c:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401650:	add	x1, x0, #0xb83
  401654:	ldr	x0, [sp, #72]
  401658:	mov	x6, x0
  40165c:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401660:	add	x5, x0, #0xce8
  401664:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401668:	add	x4, x0, #0xe18
  40166c:	mov	w3, #0x58                  	// #88
  401670:	mov	x2, x1
  401674:	ldr	w1, [sp, #44]
  401678:	mov	w0, w7
  40167c:	bl	400db0 <log_internal_realm@plt>
  401680:	mov	w19, w0
  401684:	b	40172c <process_resume+0x2b0>
  401688:	ldr	w0, [sp, #44]
  40168c:	cmp	w0, #0x0
  401690:	cneg	w0, w0, lt  // lt = tstop
  401694:	and	w0, w0, #0xff
  401698:	neg	w19, w0
  40169c:	b	40172c <process_resume+0x2b0>
  4016a0:	adrp	x0, 413000 <arg_dest>
  4016a4:	add	x0, x0, #0x20
  4016a8:	ldr	x0, [x0]
  4016ac:	cmp	x0, #0x0
  4016b0:	b.eq	4016c8 <process_resume+0x24c>  // b.none
  4016b4:	adrp	x0, 413000 <arg_dest>
  4016b8:	add	x0, x0, #0x20
  4016bc:	ldr	x0, [x0]
  4016c0:	str	x0, [sp, #80]
  4016c4:	b	4016d8 <process_resume+0x25c>
  4016c8:	adrp	x0, 413000 <arg_dest>
  4016cc:	add	x0, x0, #0x28
  4016d0:	ldr	x0, [x0]
  4016d4:	str	x0, [sp, #80]
  4016d8:	adrp	x0, 413000 <arg_dest>
  4016dc:	add	x0, x0, #0x0
  4016e0:	ldr	x5, [x0]
  4016e4:	adrp	x0, 413000 <arg_dest>
  4016e8:	add	x0, x0, #0x18
  4016ec:	ldr	x1, [x0]
  4016f0:	adrp	x0, 413000 <arg_dest>
  4016f4:	add	x0, x0, #0x18
  4016f8:	ldr	x0, [x0]
  4016fc:	mov	x4, #0x0                   	// #0
  401700:	ldr	x3, [sp, #80]
  401704:	mov	x2, x0
  401708:	mov	x0, x5
  40170c:	bl	400ce0 <generator_write_timeouts@plt>
  401710:	str	w0, [sp, #36]
  401714:	ldr	w0, [sp, #36]
  401718:	cmp	w0, #0x0
  40171c:	b.ge	401728 <process_resume+0x2ac>  // b.tcont
  401720:	ldr	w19, [sp, #36]
  401724:	b	40172c <process_resume+0x2b0>
  401728:	mov	w19, #0x0                   	// #0
  40172c:	add	x0, sp, #0x48
  401730:	bl	401018 <freep>
  401734:	add	x0, sp, #0x40
  401738:	bl	401018 <freep>
  40173c:	mov	w1, w19
  401740:	adrp	x0, 412000 <__FRAME_END__+0xfea8>
  401744:	add	x0, x0, #0xce0
  401748:	ldr	x2, [sp, #88]
  40174c:	ldr	x0, [x0]
  401750:	eor	x0, x2, x0
  401754:	cmp	x0, #0x0
  401758:	b.eq	401760 <process_resume+0x2e4>  // b.none
  40175c:	bl	400d80 <__stack_chk_fail@plt>
  401760:	mov	w0, w1
  401764:	ldr	x19, [sp, #16]
  401768:	ldp	x29, x30, [sp], #96
  40176c:	ret

0000000000401770 <run>:
  401770:	stp	x29, x30, [sp, #-96]!
  401774:	mov	x29, sp
  401778:	str	w0, [sp, #28]
  40177c:	str	x1, [sp, #16]
  401780:	str	wzr, [sp, #44]
  401784:	bl	400d40 <log_setup_generator@plt>
  401788:	ldr	w0, [sp, #28]
  40178c:	cmp	w0, #0x1
  401790:	b.le	40182c <run+0xbc>
  401794:	ldr	w0, [sp, #28]
  401798:	cmp	w0, #0x4
  40179c:	b.eq	40182c <run+0xbc>  // b.none
  4017a0:	mov	w0, #0x3                   	// #3
  4017a4:	str	w0, [sp, #48]
  4017a8:	mov	w0, #0x16                  	// #22
  4017ac:	movk	w0, #0x4000, lsl #16
  4017b0:	str	w0, [sp, #52]
  4017b4:	str	wzr, [sp, #56]
  4017b8:	ldr	w0, [sp, #56]
  4017bc:	bl	400e10 <log_get_max_level_realm@plt>
  4017c0:	mov	w1, w0
  4017c4:	ldr	w0, [sp, #48]
  4017c8:	and	w0, w0, #0x7
  4017cc:	cmp	w1, w0
  4017d0:	b.lt	401814 <run+0xa4>  // b.tstop
  4017d4:	ldr	w0, [sp, #56]
  4017d8:	lsl	w1, w0, #10
  4017dc:	ldr	w0, [sp, #48]
  4017e0:	orr	w6, w1, w0
  4017e4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4017e8:	add	x1, x0, #0xb83
  4017ec:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4017f0:	add	x5, x0, #0xd08
  4017f4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4017f8:	add	x4, x0, #0xe28
  4017fc:	mov	w3, #0x6c                  	// #108
  401800:	mov	x2, x1
  401804:	ldr	w1, [sp, #52]
  401808:	mov	w0, w6
  40180c:	bl	400db0 <log_internal_realm@plt>
  401810:	b	401a10 <run+0x2a0>
  401814:	ldr	w0, [sp, #52]
  401818:	cmp	w0, #0x0
  40181c:	cneg	w0, w0, lt  // lt = tstop
  401820:	and	w0, w0, #0xff
  401824:	neg	w0, w0
  401828:	b	401a10 <run+0x2a0>
  40182c:	ldr	w0, [sp, #28]
  401830:	cmp	w0, #0x1
  401834:	b.le	40184c <run+0xdc>
  401838:	ldr	x0, [sp, #16]
  40183c:	ldr	x1, [x0, #8]
  401840:	adrp	x0, 413000 <arg_dest>
  401844:	add	x0, x0, #0x0
  401848:	str	x1, [x0]
  40184c:	bl	400d10 <in_initrd@plt>
  401850:	and	w0, w0, #0xff
  401854:	eor	w0, w0, #0x1
  401858:	and	w0, w0, #0xff
  40185c:	cmp	w0, #0x0
  401860:	b.eq	4018e0 <run+0x170>  // b.none
  401864:	mov	w0, #0x7                   	// #7
  401868:	str	w0, [sp, #84]
  40186c:	str	wzr, [sp, #88]
  401870:	str	wzr, [sp, #92]
  401874:	ldr	w0, [sp, #92]
  401878:	bl	400e10 <log_get_max_level_realm@plt>
  40187c:	mov	w1, w0
  401880:	ldr	w0, [sp, #84]
  401884:	and	w0, w0, #0x7
  401888:	cmp	w1, w0
  40188c:	b.lt	4018d0 <run+0x160>  // b.tstop
  401890:	ldr	w0, [sp, #92]
  401894:	lsl	w1, w0, #10
  401898:	ldr	w0, [sp, #84]
  40189c:	orr	w6, w1, w0
  4018a0:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4018a4:	add	x1, x0, #0xb83
  4018a8:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4018ac:	add	x5, x0, #0xd38
  4018b0:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4018b4:	add	x4, x0, #0xe28
  4018b8:	mov	w3, #0x74                  	// #116
  4018bc:	mov	x2, x1
  4018c0:	ldr	w1, [sp, #88]
  4018c4:	mov	w0, w6
  4018c8:	bl	400db0 <log_internal_realm@plt>
  4018cc:	b	4018d8 <run+0x168>
  4018d0:	ldr	w0, [sp, #88]
  4018d4:	cmp	w0, #0x0
  4018d8:	mov	w0, #0x0                   	// #0
  4018dc:	b	401a10 <run+0x2a0>
  4018e0:	mov	w2, #0x0                   	// #0
  4018e4:	mov	x1, #0x0                   	// #0
  4018e8:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4018ec:	add	x0, x0, #0x21c
  4018f0:	bl	400dd0 <proc_cmdline_parse@plt>
  4018f4:	str	w0, [sp, #44]
  4018f8:	ldr	w0, [sp, #44]
  4018fc:	cmp	w0, #0x0
  401900:	b.ge	40197c <run+0x20c>  // b.tcont
  401904:	mov	w0, #0x4                   	// #4
  401908:	str	w0, [sp, #60]
  40190c:	ldr	w0, [sp, #44]
  401910:	str	w0, [sp, #64]
  401914:	str	wzr, [sp, #68]
  401918:	ldr	w0, [sp, #68]
  40191c:	bl	400e10 <log_get_max_level_realm@plt>
  401920:	mov	w1, w0
  401924:	ldr	w0, [sp, #60]
  401928:	and	w0, w0, #0x7
  40192c:	cmp	w1, w0
  401930:	b.lt	401974 <run+0x204>  // b.tstop
  401934:	ldr	w0, [sp, #68]
  401938:	lsl	w1, w0, #10
  40193c:	ldr	w0, [sp, #60]
  401940:	orr	w6, w1, w0
  401944:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401948:	add	x1, x0, #0xb83
  40194c:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401950:	add	x5, x0, #0xd60
  401954:	adrp	x0, 401000 <ALIGN_TO+0x18>
  401958:	add	x4, x0, #0xe28
  40195c:	mov	w3, #0x7a                  	// #122
  401960:	mov	x2, x1
  401964:	ldr	w1, [sp, #64]
  401968:	mov	w0, w6
  40196c:	bl	400db0 <log_internal_realm@plt>
  401970:	b	40197c <run+0x20c>
  401974:	ldr	w0, [sp, #64]
  401978:	cmp	w0, #0x0
  40197c:	adrp	x0, 413000 <arg_dest>
  401980:	add	x0, x0, #0x30
  401984:	ldrb	w0, [x0]
  401988:	cmp	w0, #0x0
  40198c:	b.eq	401a0c <run+0x29c>  // b.none
  401990:	mov	w0, #0x5                   	// #5
  401994:	str	w0, [sp, #72]
  401998:	str	wzr, [sp, #76]
  40199c:	str	wzr, [sp, #80]
  4019a0:	ldr	w0, [sp, #80]
  4019a4:	bl	400e10 <log_get_max_level_realm@plt>
  4019a8:	mov	w1, w0
  4019ac:	ldr	w0, [sp, #72]
  4019b0:	and	w0, w0, #0x7
  4019b4:	cmp	w1, w0
  4019b8:	b.lt	4019fc <run+0x28c>  // b.tstop
  4019bc:	ldr	w0, [sp, #80]
  4019c0:	lsl	w1, w0, #10
  4019c4:	ldr	w0, [sp, #72]
  4019c8:	orr	w6, w1, w0
  4019cc:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4019d0:	add	x1, x0, #0xb83
  4019d4:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4019d8:	add	x5, x0, #0xd98
  4019dc:	adrp	x0, 401000 <ALIGN_TO+0x18>
  4019e0:	add	x4, x0, #0xe28
  4019e4:	mov	w3, #0x7d                  	// #125
  4019e8:	mov	x2, x1
  4019ec:	ldr	w1, [sp, #76]
  4019f0:	mov	w0, w6
  4019f4:	bl	400db0 <log_internal_realm@plt>
  4019f8:	b	401a04 <run+0x294>
  4019fc:	ldr	w0, [sp, #76]
  401a00:	cmp	w0, #0x0
  401a04:	mov	w0, #0x0                   	// #0
  401a08:	b	401a10 <run+0x2a0>
  401a0c:	bl	40147c <process_resume>
  401a10:	ldp	x29, x30, [sp], #96
  401a14:	ret

0000000000401a18 <main>:
  401a18:	stp	x29, x30, [sp, #-48]!
  401a1c:	mov	x29, sp
  401a20:	str	w0, [sp, #28]
  401a24:	str	x1, [sp, #16]
  401a28:	ldr	x1, [sp, #16]
  401a2c:	ldr	w0, [sp, #28]
  401a30:	bl	40103c <save_argc_argv>
  401a34:	ldr	x1, [sp, #16]
  401a38:	ldr	w0, [sp, #28]
  401a3c:	bl	401770 <run>
  401a40:	str	w0, [sp, #44]
  401a44:	bl	400d90 <ask_password_agent_close@plt>
  401a48:	bl	400cd0 <polkit_agent_close@plt>
  401a4c:	bl	400da0 <pager_close@plt>
  401a50:	bl	400df0 <mac_selinux_finish@plt>
  401a54:	bl	401074 <static_destruct>
  401a58:	ldr	w0, [sp, #44]
  401a5c:	lsr	w0, w0, #31
  401a60:	ldp	x29, x30, [sp], #48
  401a64:	ret

0000000000401a68 <__libc_csu_init>:
  401a68:	stp	x29, x30, [sp, #-64]!
  401a6c:	mov	x29, sp
  401a70:	stp	x19, x20, [sp, #16]
  401a74:	adrp	x20, 412000 <__FRAME_END__+0xfea8>
  401a78:	add	x20, x20, #0xcd8
  401a7c:	stp	x21, x22, [sp, #32]
  401a80:	adrp	x21, 412000 <__FRAME_END__+0xfea8>
  401a84:	add	x21, x21, #0xcd0
  401a88:	sub	x20, x20, x21
  401a8c:	mov	w22, w0
  401a90:	stp	x23, x24, [sp, #48]
  401a94:	mov	x23, x1
  401a98:	mov	x24, x2
  401a9c:	bl	400c68 <_init>
  401aa0:	cmp	xzr, x20, asr #3
  401aa4:	b.eq	401ad0 <__libc_csu_init+0x68>  // b.none
  401aa8:	asr	x20, x20, #3
  401aac:	mov	x19, #0x0                   	// #0
  401ab0:	ldr	x3, [x21, x19, lsl #3]
  401ab4:	mov	x2, x24
  401ab8:	add	x19, x19, #0x1
  401abc:	mov	x1, x23
  401ac0:	mov	w0, w22
  401ac4:	blr	x3
  401ac8:	cmp	x20, x19
  401acc:	b.ne	401ab0 <__libc_csu_init+0x48>  // b.any
  401ad0:	ldp	x19, x20, [sp, #16]
  401ad4:	ldp	x21, x22, [sp, #32]
  401ad8:	ldp	x23, x24, [sp, #48]
  401adc:	ldp	x29, x30, [sp], #64
  401ae0:	ret
  401ae4:	nop

0000000000401ae8 <__libc_csu_fini>:
  401ae8:	ret

Disassembly of section .fini:

0000000000401aec <_fini>:
  401aec:	stp	x29, x30, [sp, #-16]!
  401af0:	mov	x29, sp
  401af4:	ldp	x29, x30, [sp], #16
  401af8:	ret
