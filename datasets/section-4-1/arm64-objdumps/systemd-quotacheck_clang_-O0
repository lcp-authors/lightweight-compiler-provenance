
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-quotacheck_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400a98 <_init>:
  400a98:	stp	x29, x30, [sp, #-16]!
  400a9c:	mov	x29, sp
  400aa0:	bl	400c40 <call_weak_fn>
  400aa4:	ldp	x29, x30, [sp], #16
  400aa8:	ret

Disassembly of section .plt:

0000000000400ab0 <__libc_start_main@plt-0x20>:
  400ab0:	stp	x16, x30, [sp, #-16]!
  400ab4:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400ab8:	ldr	x17, [x16, #3944]
  400abc:	add	x16, x16, #0xf68
  400ac0:	br	x17
  400ac4:	nop
  400ac8:	nop
  400acc:	nop

0000000000400ad0 <__libc_start_main@plt>:
  400ad0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400ad4:	ldr	x17, [x16, #3952]
  400ad8:	add	x16, x16, #0xf70
  400adc:	br	x17

0000000000400ae0 <abort@plt>:
  400ae0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400ae4:	ldr	x17, [x16, #3960]
  400ae8:	add	x16, x16, #0xf78
  400aec:	br	x17

0000000000400af0 <__gmon_start__@plt>:
  400af0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400af4:	ldr	x17, [x16, #3968]
  400af8:	add	x16, x16, #0xf80
  400afc:	br	x17

0000000000400b00 <ask_password_agent_close@plt>:
  400b00:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b04:	ldr	x17, [x16, #3976]
  400b08:	add	x16, x16, #0xf88
  400b0c:	br	x17

0000000000400b10 <polkit_agent_close@plt>:
  400b10:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b14:	ldr	x17, [x16, #3984]
  400b18:	add	x16, x16, #0xf90
  400b1c:	br	x17

0000000000400b20 <pager_close@plt>:
  400b20:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b24:	ldr	x17, [x16, #3992]
  400b28:	add	x16, x16, #0xf98
  400b2c:	br	x17

0000000000400b30 <mac_selinux_finish@plt>:
  400b30:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b34:	ldr	x17, [x16, #4000]
  400b38:	add	x16, x16, #0xfa0
  400b3c:	br	x17

0000000000400b40 <log_setup_service@plt>:
  400b40:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b44:	ldr	x17, [x16, #4008]
  400b48:	add	x16, x16, #0xfa8
  400b4c:	br	x17

0000000000400b50 <log_get_max_level_realm@plt>:
  400b50:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b54:	ldr	x17, [x16, #4016]
  400b58:	add	x16, x16, #0xfb0
  400b5c:	br	x17

0000000000400b60 <log_internal_realm@plt>:
  400b60:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b64:	ldr	x17, [x16, #4024]
  400b68:	add	x16, x16, #0xfb8
  400b6c:	br	x17

0000000000400b70 <abs@plt>:
  400b70:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b74:	ldr	x17, [x16, #4032]
  400b78:	add	x16, x16, #0xfc0
  400b7c:	br	x17

0000000000400b80 <umask@plt>:
  400b80:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b84:	ldr	x17, [x16, #4040]
  400b88:	add	x16, x16, #0xfc8
  400b8c:	br	x17

0000000000400b90 <proc_cmdline_parse@plt>:
  400b90:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400b94:	ldr	x17, [x16, #4048]
  400b98:	add	x16, x16, #0xfd0
  400b9c:	br	x17

0000000000400ba0 <access@plt>:
  400ba0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400ba4:	ldr	x17, [x16, #4056]
  400ba8:	add	x16, x16, #0xfd8
  400bac:	br	x17

0000000000400bb0 <execv@plt>:
  400bb0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400bb4:	ldr	x17, [x16, #4064]
  400bb8:	add	x16, x16, #0xfe0
  400bbc:	br	x17

0000000000400bc0 <_exit@plt>:
  400bc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400bc4:	ldr	x17, [x16, #4072]
  400bc8:	add	x16, x16, #0xfe8
  400bcc:	br	x17

0000000000400bd0 <strcmp@plt>:
  400bd0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400bd4:	ldr	x17, [x16, #4080]
  400bd8:	add	x16, x16, #0xff0
  400bdc:	br	x17

0000000000400be0 <safe_fork_full@plt>:
  400be0:	adrp	x16, 41f000 <__FRAME_END__+0x1d650>
  400be4:	ldr	x17, [x16, #4088]
  400be8:	add	x16, x16, #0xff8
  400bec:	br	x17

Disassembly of section .text:

0000000000400bf0 <_start>:
  400bf0:	mov	x29, #0x0                   	// #0
  400bf4:	mov	x30, #0x0                   	// #0
  400bf8:	mov	x5, x0
  400bfc:	ldr	x1, [sp]
  400c00:	add	x2, sp, #0x8
  400c04:	mov	x6, sp
  400c08:	movz	x0, #0x0, lsl #48
  400c0c:	movk	x0, #0x0, lsl #32
  400c10:	movk	x0, #0x40, lsl #16
  400c14:	movk	x0, #0xdb8
  400c18:	movz	x3, #0x0, lsl #48
  400c1c:	movk	x3, #0x0, lsl #32
  400c20:	movk	x3, #0x40, lsl #16
  400c24:	movk	x3, #0x1560
  400c28:	movz	x4, #0x0, lsl #48
  400c2c:	movk	x4, #0x0, lsl #32
  400c30:	movk	x4, #0x40, lsl #16
  400c34:	movk	x4, #0x15e0
  400c38:	bl	400ad0 <__libc_start_main@plt>
  400c3c:	bl	400ae0 <abort@plt>

0000000000400c40 <call_weak_fn>:
  400c40:	adrp	x0, 41f000 <__FRAME_END__+0x1d650>
  400c44:	ldr	x0, [x0, #3904]
  400c48:	cbz	x0, 400c50 <call_weak_fn+0x10>
  400c4c:	b	400af0 <__gmon_start__@plt>
  400c50:	ret

0000000000400c54 <deregister_tm_clones>:
  400c54:	stp	x29, x30, [sp, #-32]!
  400c58:	mov	x29, sp
  400c5c:	adrp	x0, 420000 <completed.8445>
  400c60:	add	x0, x0, #0x0
  400c64:	str	x0, [sp, #24]
  400c68:	ldr	x0, [sp, #24]
  400c6c:	str	x0, [sp, #24]
  400c70:	ldr	x1, [sp, #24]
  400c74:	adrp	x0, 420000 <completed.8445>
  400c78:	add	x0, x0, #0x0
  400c7c:	cmp	x1, x0
  400c80:	b.eq	400cbc <deregister_tm_clones+0x68>  // b.none
  400c84:	adrp	x0, 401000 <run+0x19c>
  400c88:	add	x0, x0, #0x5f8
  400c8c:	ldr	x0, [x0]
  400c90:	str	x0, [sp, #16]
  400c94:	ldr	x0, [sp, #16]
  400c98:	str	x0, [sp, #16]
  400c9c:	ldr	x0, [sp, #16]
  400ca0:	cmp	x0, #0x0
  400ca4:	b.eq	400cc0 <deregister_tm_clones+0x6c>  // b.none
  400ca8:	ldr	x1, [sp, #16]
  400cac:	adrp	x0, 420000 <completed.8445>
  400cb0:	add	x0, x0, #0x0
  400cb4:	blr	x1
  400cb8:	b	400cc0 <deregister_tm_clones+0x6c>
  400cbc:	nop
  400cc0:	ldp	x29, x30, [sp], #32
  400cc4:	ret

0000000000400cc8 <register_tm_clones>:
  400cc8:	stp	x29, x30, [sp, #-48]!
  400ccc:	mov	x29, sp
  400cd0:	adrp	x0, 420000 <completed.8445>
  400cd4:	add	x0, x0, #0x0
  400cd8:	str	x0, [sp, #40]
  400cdc:	ldr	x0, [sp, #40]
  400ce0:	str	x0, [sp, #40]
  400ce4:	ldr	x1, [sp, #40]
  400ce8:	adrp	x0, 420000 <completed.8445>
  400cec:	add	x0, x0, #0x0
  400cf0:	sub	x0, x1, x0
  400cf4:	asr	x0, x0, #3
  400cf8:	lsr	x1, x0, #63
  400cfc:	add	x0, x1, x0
  400d00:	asr	x0, x0, #1
  400d04:	str	x0, [sp, #32]
  400d08:	ldr	x0, [sp, #32]
  400d0c:	cmp	x0, #0x0
  400d10:	b.eq	400d50 <register_tm_clones+0x88>  // b.none
  400d14:	adrp	x0, 401000 <run+0x19c>
  400d18:	add	x0, x0, #0x600
  400d1c:	ldr	x0, [x0]
  400d20:	str	x0, [sp, #24]
  400d24:	ldr	x0, [sp, #24]
  400d28:	str	x0, [sp, #24]
  400d2c:	ldr	x0, [sp, #24]
  400d30:	cmp	x0, #0x0
  400d34:	b.eq	400d54 <register_tm_clones+0x8c>  // b.none
  400d38:	ldr	x2, [sp, #24]
  400d3c:	ldr	x1, [sp, #32]
  400d40:	adrp	x0, 420000 <completed.8445>
  400d44:	add	x0, x0, #0x0
  400d48:	blr	x2
  400d4c:	b	400d54 <register_tm_clones+0x8c>
  400d50:	nop
  400d54:	ldp	x29, x30, [sp], #48
  400d58:	ret

0000000000400d5c <__do_global_dtors_aux>:
  400d5c:	stp	x29, x30, [sp, #-16]!
  400d60:	mov	x29, sp
  400d64:	adrp	x0, 420000 <completed.8445>
  400d68:	add	x0, x0, #0x0
  400d6c:	ldrb	w0, [x0]
  400d70:	and	x0, x0, #0xff
  400d74:	cmp	x0, #0x0
  400d78:	b.ne	400d94 <__do_global_dtors_aux+0x38>  // b.any
  400d7c:	bl	400c54 <deregister_tm_clones>
  400d80:	adrp	x0, 420000 <completed.8445>
  400d84:	add	x0, x0, #0x0
  400d88:	mov	w1, #0x1                   	// #1
  400d8c:	strb	w1, [x0]
  400d90:	b	400d98 <__do_global_dtors_aux+0x3c>
  400d94:	nop
  400d98:	ldp	x29, x30, [sp], #16
  400d9c:	ret

0000000000400da0 <frame_dummy>:
  400da0:	stp	x29, x30, [sp, #-16]!
  400da4:	mov	x29, sp
  400da8:	bl	400cc8 <register_tm_clones>
  400dac:	nop
  400db0:	ldp	x29, x30, [sp], #16
  400db4:	ret

0000000000400db8 <main>:
  400db8:	sub	sp, sp, #0x30
  400dbc:	stp	x29, x30, [sp, #32]
  400dc0:	add	x29, sp, #0x20
  400dc4:	mov	w8, wzr
  400dc8:	mov	w9, #0x1                   	// #1
  400dcc:	stur	wzr, [x29, #-4]
  400dd0:	stur	w0, [x29, #-8]
  400dd4:	str	x1, [sp, #16]
  400dd8:	ldur	w0, [x29, #-8]
  400ddc:	ldr	x1, [sp, #16]
  400de0:	str	w8, [sp, #8]
  400de4:	str	w9, [sp, #4]
  400de8:	bl	400e30 <save_argc_argv>
  400dec:	ldur	w0, [x29, #-8]
  400df0:	ldr	x1, [sp, #16]
  400df4:	bl	400e64 <run>
  400df8:	str	w0, [sp, #12]
  400dfc:	bl	400b00 <ask_password_agent_close@plt>
  400e00:	bl	400b10 <polkit_agent_close@plt>
  400e04:	bl	400b20 <pager_close@plt>
  400e08:	bl	400b30 <mac_selinux_finish@plt>
  400e0c:	bl	4010a8 <static_destruct>
  400e10:	ldr	w8, [sp, #12]
  400e14:	cmp	w8, #0x0
  400e18:	ldr	w8, [sp, #4]
  400e1c:	ldr	w9, [sp, #8]
  400e20:	csel	w0, w8, w9, lt  // lt = tstop
  400e24:	ldp	x29, x30, [sp, #32]
  400e28:	add	sp, sp, #0x30
  400e2c:	ret

0000000000400e30 <save_argc_argv>:
  400e30:	sub	sp, sp, #0x10
  400e34:	adrp	x8, 420000 <completed.8445>
  400e38:	add	x8, x8, #0x8
  400e3c:	adrp	x9, 420000 <completed.8445>
  400e40:	add	x9, x9, #0x10
  400e44:	str	w0, [sp, #12]
  400e48:	str	x1, [sp]
  400e4c:	ldr	w10, [sp, #12]
  400e50:	str	w10, [x8]
  400e54:	ldr	x8, [sp]
  400e58:	str	x8, [x9]
  400e5c:	add	sp, sp, #0x10
  400e60:	ret

0000000000400e64 <run>:
  400e64:	sub	sp, sp, #0x60
  400e68:	stp	x29, x30, [sp, #80]
  400e6c:	add	x29, sp, #0x50
  400e70:	adrp	x8, 401000 <run+0x19c>
  400e74:	add	x8, x8, #0x608
  400e78:	add	x8, x8, #0x3
  400e7c:	stur	w0, [x29, #-8]
  400e80:	stur	x1, [x29, #-16]
  400e84:	str	x8, [sp, #16]
  400e88:	bl	400b40 <log_setup_service@plt>
  400e8c:	ldur	w9, [x29, #-8]
  400e90:	cmp	w9, #0x1
  400e94:	b.le	400f24 <run+0xc0>
  400e98:	mov	w8, #0x3                   	// #3
  400e9c:	stur	w8, [x29, #-24]
  400ea0:	mov	w8, #0x16                  	// #22
  400ea4:	movk	w8, #0x4000, lsl #16
  400ea8:	stur	w8, [x29, #-28]
  400eac:	stur	wzr, [x29, #-32]
  400eb0:	ldur	w0, [x29, #-32]
  400eb4:	bl	400b50 <log_get_max_level_realm@plt>
  400eb8:	ldur	w8, [x29, #-24]
  400ebc:	and	w8, w8, #0x7
  400ec0:	cmp	w0, w8
  400ec4:	b.lt	400efc <run+0x98>  // b.tstop
  400ec8:	ldur	w8, [x29, #-32]
  400ecc:	ldur	w9, [x29, #-24]
  400ed0:	orr	w0, w9, w8, lsl #10
  400ed4:	ldur	w1, [x29, #-28]
  400ed8:	ldr	x2, [sp, #16]
  400edc:	mov	w3, #0x41                  	// #65
  400ee0:	adrp	x4, 401000 <run+0x19c>
  400ee4:	add	x4, x4, #0x627
  400ee8:	adrp	x5, 401000 <run+0x19c>
  400eec:	add	x5, x5, #0x62b
  400ef0:	bl	400b60 <log_internal_realm@plt>
  400ef4:	str	w0, [sp, #12]
  400ef8:	b	400f10 <run+0xac>
  400efc:	ldur	w0, [x29, #-28]
  400f00:	bl	400b70 <abs@plt>
  400f04:	mov	w8, wzr
  400f08:	subs	w8, w8, w0, uxtb
  400f0c:	str	w8, [sp, #12]
  400f10:	ldr	w8, [sp, #12]
  400f14:	stur	w8, [x29, #-36]
  400f18:	ldur	w8, [x29, #-36]
  400f1c:	stur	w8, [x29, #-4]
  400f20:	b	401098 <run+0x234>
  400f24:	mov	w0, #0x12                  	// #18
  400f28:	bl	400b80 <umask@plt>
  400f2c:	adrp	x8, 401000 <run+0x19c>
  400f30:	add	x8, x8, #0x128
  400f34:	mov	x0, x8
  400f38:	mov	x8, xzr
  400f3c:	mov	x1, x8
  400f40:	mov	w9, wzr
  400f44:	mov	w2, w9
  400f48:	bl	400b90 <proc_cmdline_parse@plt>
  400f4c:	stur	w0, [x29, #-20]
  400f50:	ldur	w9, [x29, #-20]
  400f54:	cmp	w9, #0x0
  400f58:	cset	w9, ge  // ge = tcont
  400f5c:	tbnz	w9, #0, 400fdc <run+0x178>
  400f60:	mov	w8, #0x4                   	// #4
  400f64:	str	w8, [sp, #40]
  400f68:	ldur	w8, [x29, #-20]
  400f6c:	str	w8, [sp, #36]
  400f70:	str	wzr, [sp, #32]
  400f74:	ldr	w0, [sp, #32]
  400f78:	bl	400b50 <log_get_max_level_realm@plt>
  400f7c:	ldr	w8, [sp, #40]
  400f80:	and	w8, w8, #0x7
  400f84:	cmp	w0, w8
  400f88:	b.lt	400fc0 <run+0x15c>  // b.tstop
  400f8c:	ldr	w8, [sp, #32]
  400f90:	ldr	w9, [sp, #40]
  400f94:	orr	w0, w9, w8, lsl #10
  400f98:	ldr	w1, [sp, #36]
  400f9c:	ldr	x2, [sp, #16]
  400fa0:	mov	w3, #0x47                  	// #71
  400fa4:	adrp	x4, 401000 <run+0x19c>
  400fa8:	add	x4, x4, #0x627
  400fac:	adrp	x5, 401000 <run+0x19c>
  400fb0:	add	x5, x5, #0x64c
  400fb4:	bl	400b60 <log_internal_realm@plt>
  400fb8:	str	w0, [sp, #8]
  400fbc:	b	400fd4 <run+0x170>
  400fc0:	ldr	w0, [sp, #36]
  400fc4:	bl	400b70 <abs@plt>
  400fc8:	mov	w8, wzr
  400fcc:	subs	w8, w8, w0, uxtb
  400fd0:	str	w8, [sp, #8]
  400fd4:	ldr	w8, [sp, #8]
  400fd8:	str	w8, [sp, #28]
  400fdc:	bl	401340 <test_files>
  400fe0:	adrp	x8, 420000 <completed.8445>
  400fe4:	add	x8, x8, #0x1
  400fe8:	ldrb	w9, [x8]
  400fec:	tbnz	w9, #0, 401034 <run+0x1d0>
  400ff0:	adrp	x8, 420000 <completed.8445>
  400ff4:	add	x8, x8, #0x2
  400ff8:	ldrb	w9, [x8]
  400ffc:	tbnz	w9, #0, 401004 <run+0x1a0>
  401000:	b	40100c <run+0x1a8>
  401004:	stur	wzr, [x29, #-4]
  401008:	b	401098 <run+0x234>
  40100c:	adrp	x0, 401000 <run+0x19c>
  401010:	add	x0, x0, #0x67e
  401014:	mov	w8, wzr
  401018:	mov	w1, w8
  40101c:	bl	400ba0 <access@plt>
  401020:	cmp	w0, #0x0
  401024:	cset	w8, ge  // ge = tcont
  401028:	tbnz	w8, #0, 401034 <run+0x1d0>
  40102c:	stur	wzr, [x29, #-4]
  401030:	b	401098 <run+0x234>
  401034:	adrp	x0, 401000 <run+0x19c>
  401038:	add	x0, x0, #0x696
  40103c:	mov	w1, #0x265                 	// #613
  401040:	mov	x8, xzr
  401044:	mov	x2, x8
  401048:	bl	401410 <safe_fork>
  40104c:	stur	w0, [x29, #-20]
  401050:	ldur	w9, [x29, #-20]
  401054:	cmp	w9, #0x0
  401058:	cset	w9, ge  // ge = tcont
  40105c:	tbnz	w9, #0, 40106c <run+0x208>
  401060:	ldur	w8, [x29, #-20]
  401064:	stur	w8, [x29, #-4]
  401068:	b	401098 <run+0x234>
  40106c:	ldur	w8, [x29, #-20]
  401070:	cbnz	w8, 401094 <run+0x230>
  401074:	adrp	x8, 401000 <run+0x19c>
  401078:	add	x8, x8, #0x8a8
  40107c:	ldr	x0, [x8]
  401080:	mov	x1, x8
  401084:	bl	400bb0 <execv@plt>
  401088:	mov	w9, #0x1                   	// #1
  40108c:	mov	w0, w9
  401090:	bl	400bc0 <_exit@plt>
  401094:	stur	wzr, [x29, #-4]
  401098:	ldur	w0, [x29, #-4]
  40109c:	ldp	x29, x30, [sp, #80]
  4010a0:	add	sp, sp, #0x60
  4010a4:	ret

00000000004010a8 <static_destruct>:
  4010a8:	sub	sp, sp, #0x20
  4010ac:	stp	x29, x30, [sp, #16]
  4010b0:	add	x29, sp, #0x10
  4010b4:	adrp	x8, 41f000 <__FRAME_END__+0x1d650>
  4010b8:	ldr	x8, [x8, #3912]
  4010bc:	str	x8, [sp]
  4010c0:	cbnz	x8, 4010c8 <static_destruct+0x20>
  4010c4:	b	40111c <static_destruct+0x74>
  4010c8:	ldr	x0, [sp]
  4010cc:	mov	x1, #0x8                   	// #8
  4010d0:	bl	401530 <ALIGN_TO>
  4010d4:	str	x0, [sp, #8]
  4010d8:	ldr	x8, [sp, #8]
  4010dc:	adrp	x9, 41f000 <__FRAME_END__+0x1d650>
  4010e0:	ldr	x9, [x9, #3920]
  4010e4:	cmp	x8, x9
  4010e8:	b.cs	40111c <static_destruct+0x74>  // b.hs, b.nlast
  4010ec:	ldr	x8, [sp, #8]
  4010f0:	ldr	x8, [x8, #8]
  4010f4:	ldr	x9, [sp, #8]
  4010f8:	ldr	x0, [x9]
  4010fc:	blr	x8
  401100:	ldr	x8, [sp, #8]
  401104:	add	x8, x8, #0x10
  401108:	mov	x0, x8
  40110c:	mov	x1, #0x8                   	// #8
  401110:	bl	401530 <ALIGN_TO>
  401114:	str	x0, [sp, #8]
  401118:	b	4010d8 <static_destruct+0x30>
  40111c:	ldp	x29, x30, [sp, #16]
  401120:	add	sp, sp, #0x20
  401124:	ret

0000000000401128 <parse_proc_cmdline_item>:
  401128:	sub	sp, sp, #0x70
  40112c:	stp	x29, x30, [sp, #96]
  401130:	add	x29, sp, #0x60
  401134:	adrp	x8, 401000 <run+0x19c>
  401138:	add	x8, x8, #0x6be
  40113c:	adrp	x9, 401000 <run+0x19c>
  401140:	add	x9, x9, #0x608
  401144:	add	x9, x9, #0x3
  401148:	adrp	x10, 420000 <completed.8445>
  40114c:	add	x10, x10, #0x1
  401150:	stur	x0, [x29, #-16]
  401154:	stur	x1, [x29, #-24]
  401158:	stur	x2, [x29, #-32]
  40115c:	ldur	x0, [x29, #-16]
  401160:	mov	x1, x8
  401164:	str	x9, [sp, #24]
  401168:	str	x10, [sp, #16]
  40116c:	bl	400bd0 <strcmp@plt>
  401170:	cbnz	w0, 40128c <parse_proc_cmdline_item+0x164>
  401174:	ldur	x0, [x29, #-16]
  401178:	ldur	x1, [x29, #-24]
  40117c:	bl	401458 <proc_cmdline_value_missing>
  401180:	tbnz	w0, #0, 401188 <parse_proc_cmdline_item+0x60>
  401184:	b	401190 <parse_proc_cmdline_item+0x68>
  401188:	stur	wzr, [x29, #-4]
  40118c:	b	401330 <parse_proc_cmdline_item+0x208>
  401190:	ldur	x0, [x29, #-24]
  401194:	adrp	x1, 401000 <run+0x19c>
  401198:	add	x1, x1, #0x6ce
  40119c:	bl	400bd0 <strcmp@plt>
  4011a0:	cbnz	w0, 4011c0 <parse_proc_cmdline_item+0x98>
  4011a4:	mov	w8, #0x0                   	// #0
  4011a8:	adrp	x9, 420000 <completed.8445>
  4011ac:	add	x9, x9, #0x2
  4011b0:	strb	w8, [x9]
  4011b4:	ldr	x9, [sp, #16]
  4011b8:	strb	w8, [x9]
  4011bc:	b	401288 <parse_proc_cmdline_item+0x160>
  4011c0:	ldur	x0, [x29, #-24]
  4011c4:	adrp	x1, 401000 <run+0x19c>
  4011c8:	add	x1, x1, #0x6d3
  4011cc:	bl	400bd0 <strcmp@plt>
  4011d0:	cbnz	w0, 4011e4 <parse_proc_cmdline_item+0xbc>
  4011d4:	mov	w8, #0x1                   	// #1
  4011d8:	ldr	x9, [sp, #16]
  4011dc:	strb	w8, [x9]
  4011e0:	b	401288 <parse_proc_cmdline_item+0x160>
  4011e4:	ldur	x0, [x29, #-24]
  4011e8:	adrp	x1, 401000 <run+0x19c>
  4011ec:	add	x1, x1, #0x6d9
  4011f0:	bl	400bd0 <strcmp@plt>
  4011f4:	cbnz	w0, 40120c <parse_proc_cmdline_item+0xe4>
  4011f8:	adrp	x8, 420000 <completed.8445>
  4011fc:	add	x8, x8, #0x2
  401200:	mov	w9, #0x1                   	// #1
  401204:	strb	w9, [x8]
  401208:	b	401288 <parse_proc_cmdline_item+0x160>
  40120c:	mov	w8, #0x4                   	// #4
  401210:	stur	w8, [x29, #-36]
  401214:	stur	wzr, [x29, #-40]
  401218:	stur	wzr, [x29, #-44]
  40121c:	ldur	w0, [x29, #-44]
  401220:	bl	400b50 <log_get_max_level_realm@plt>
  401224:	ldur	w8, [x29, #-36]
  401228:	and	w8, w8, #0x7
  40122c:	cmp	w0, w8
  401230:	b.lt	40126c <parse_proc_cmdline_item+0x144>  // b.tstop
  401234:	ldur	w8, [x29, #-44]
  401238:	ldur	w9, [x29, #-36]
  40123c:	orr	w0, w9, w8, lsl #10
  401240:	ldur	w1, [x29, #-40]
  401244:	ldur	x6, [x29, #-24]
  401248:	ldr	x2, [sp, #24]
  40124c:	mov	w3, #0x23                  	// #35
  401250:	adrp	x4, 401000 <run+0x19c>
  401254:	add	x4, x4, #0x6de
  401258:	adrp	x5, 401000 <run+0x19c>
  40125c:	add	x5, x5, #0x6f6
  401260:	bl	400b60 <log_internal_realm@plt>
  401264:	str	w0, [sp, #12]
  401268:	b	401280 <parse_proc_cmdline_item+0x158>
  40126c:	ldur	w0, [x29, #-40]
  401270:	bl	400b70 <abs@plt>
  401274:	mov	w8, wzr
  401278:	subs	w8, w8, w0, uxtb
  40127c:	str	w8, [sp, #12]
  401280:	ldr	w8, [sp, #12]
  401284:	str	w8, [sp, #48]
  401288:	b	40132c <parse_proc_cmdline_item+0x204>
  40128c:	ldur	x0, [x29, #-16]
  401290:	adrp	x1, 401000 <run+0x19c>
  401294:	add	x1, x1, #0x729
  401298:	bl	400bd0 <strcmp@plt>
  40129c:	cbnz	w0, 40132c <parse_proc_cmdline_item+0x204>
  4012a0:	ldur	x8, [x29, #-24]
  4012a4:	cbnz	x8, 40132c <parse_proc_cmdline_item+0x204>
  4012a8:	mov	w8, #0x4                   	// #4
  4012ac:	str	w8, [sp, #44]
  4012b0:	str	wzr, [sp, #40]
  4012b4:	str	wzr, [sp, #36]
  4012b8:	ldr	w0, [sp, #36]
  4012bc:	bl	400b50 <log_get_max_level_realm@plt>
  4012c0:	ldr	w8, [sp, #44]
  4012c4:	and	w8, w8, #0x7
  4012c8:	cmp	w0, w8
  4012cc:	b.lt	401304 <parse_proc_cmdline_item+0x1dc>  // b.tstop
  4012d0:	ldr	w8, [sp, #36]
  4012d4:	ldr	w9, [sp, #44]
  4012d8:	orr	w0, w9, w8, lsl #10
  4012dc:	ldr	w1, [sp, #40]
  4012e0:	ldr	x2, [sp, #24]
  4012e4:	mov	w3, #0x28                  	// #40
  4012e8:	adrp	x4, 401000 <run+0x19c>
  4012ec:	add	x4, x4, #0x6de
  4012f0:	adrp	x5, 401000 <run+0x19c>
  4012f4:	add	x5, x5, #0x739
  4012f8:	bl	400b60 <log_internal_realm@plt>
  4012fc:	str	w0, [sp, #8]
  401300:	b	401318 <parse_proc_cmdline_item+0x1f0>
  401304:	ldr	w0, [sp, #40]
  401308:	bl	400b70 <abs@plt>
  40130c:	mov	w8, wzr
  401310:	subs	w8, w8, w0, uxtb
  401314:	str	w8, [sp, #8]
  401318:	ldr	w8, [sp, #8]
  40131c:	str	w8, [sp, #32]
  401320:	mov	w8, #0x1                   	// #1
  401324:	ldr	x9, [sp, #16]
  401328:	strb	w8, [x9]
  40132c:	stur	wzr, [x29, #-4]
  401330:	ldur	w0, [x29, #-4]
  401334:	ldp	x29, x30, [sp, #96]
  401338:	add	sp, sp, #0x70
  40133c:	ret

0000000000401340 <test_files>:
  401340:	sub	sp, sp, #0x30
  401344:	stp	x29, x30, [sp, #32]
  401348:	add	x29, sp, #0x20
  40134c:	adrp	x0, 401000 <run+0x19c>
  401350:	add	x0, x0, #0x80c
  401354:	mov	w8, wzr
  401358:	adrp	x9, 401000 <run+0x19c>
  40135c:	add	x9, x9, #0x608
  401360:	add	x2, x9, #0x3
  401364:	mov	w1, w8
  401368:	str	x2, [sp, #8]
  40136c:	bl	400ba0 <access@plt>
  401370:	cmp	w0, #0x0
  401374:	cset	w8, lt  // lt = tstop
  401378:	tbnz	w8, #0, 401404 <test_files+0xc4>
  40137c:	mov	w8, #0x3                   	// #3
  401380:	stur	w8, [x29, #-4]
  401384:	stur	wzr, [x29, #-8]
  401388:	stur	wzr, [x29, #-12]
  40138c:	ldur	w0, [x29, #-12]
  401390:	bl	400b50 <log_get_max_level_realm@plt>
  401394:	ldur	w8, [x29, #-4]
  401398:	and	w8, w8, #0x7
  40139c:	cmp	w0, w8
  4013a0:	b.lt	4013d8 <test_files+0x98>  // b.tstop
  4013a4:	ldur	w8, [x29, #-12]
  4013a8:	ldur	w9, [x29, #-4]
  4013ac:	orr	w0, w9, w8, lsl #10
  4013b0:	ldur	w1, [x29, #-8]
  4013b4:	ldr	x2, [sp, #8]
  4013b8:	mov	w3, #0x34                  	// #52
  4013bc:	adrp	x4, 401000 <run+0x19c>
  4013c0:	add	x4, x4, #0x81d
  4013c4:	adrp	x5, 401000 <run+0x19c>
  4013c8:	add	x5, x5, #0x828
  4013cc:	bl	400b60 <log_internal_realm@plt>
  4013d0:	str	w0, [sp, #4]
  4013d4:	b	4013ec <test_files+0xac>
  4013d8:	ldur	w0, [x29, #-8]
  4013dc:	bl	400b70 <abs@plt>
  4013e0:	mov	w8, wzr
  4013e4:	subs	w8, w8, w0, uxtb
  4013e8:	str	w8, [sp, #4]
  4013ec:	ldr	w8, [sp, #4]
  4013f0:	str	w8, [sp, #16]
  4013f4:	adrp	x9, 420000 <completed.8445>
  4013f8:	add	x9, x9, #0x1
  4013fc:	mov	w8, #0x1                   	// #1
  401400:	strb	w8, [x9]
  401404:	ldp	x29, x30, [sp, #32]
  401408:	add	sp, sp, #0x30
  40140c:	ret

0000000000401410 <safe_fork>:
  401410:	sub	sp, sp, #0x30
  401414:	stp	x29, x30, [sp, #32]
  401418:	add	x29, sp, #0x20
  40141c:	mov	x8, xzr
  401420:	mov	x3, x8
  401424:	stur	x0, [x29, #-8]
  401428:	stur	w1, [x29, #-12]
  40142c:	str	x2, [sp, #8]
  401430:	ldur	x0, [x29, #-8]
  401434:	ldur	w9, [x29, #-12]
  401438:	ldr	x4, [sp, #8]
  40143c:	mov	x1, x3
  401440:	mov	x2, x8
  401444:	mov	w3, w9
  401448:	bl	400be0 <safe_fork_full@plt>
  40144c:	ldp	x29, x30, [sp, #32]
  401450:	add	sp, sp, #0x30
  401454:	ret

0000000000401458 <proc_cmdline_value_missing>:
  401458:	sub	sp, sp, #0x50
  40145c:	stp	x29, x30, [sp, #64]
  401460:	add	x29, sp, #0x40
  401464:	adrp	x8, 401000 <run+0x19c>
  401468:	add	x8, x8, #0x796
  40146c:	add	x2, x8, #0x3
  401470:	stur	x0, [x29, #-16]
  401474:	stur	x1, [x29, #-24]
  401478:	ldur	x8, [x29, #-24]
  40147c:	str	x2, [sp, #16]
  401480:	cbnz	x8, 401510 <proc_cmdline_value_missing+0xb8>
  401484:	mov	w8, #0x4                   	// #4
  401488:	stur	w8, [x29, #-28]
  40148c:	str	wzr, [sp, #32]
  401490:	str	wzr, [sp, #28]
  401494:	ldr	w0, [sp, #28]
  401498:	bl	400b50 <log_get_max_level_realm@plt>
  40149c:	ldur	w8, [x29, #-28]
  4014a0:	and	w8, w8, #0x7
  4014a4:	cmp	w0, w8
  4014a8:	b.lt	4014e4 <proc_cmdline_value_missing+0x8c>  // b.tstop
  4014ac:	ldr	w8, [sp, #28]
  4014b0:	ldur	w9, [x29, #-28]
  4014b4:	orr	w0, w9, w8, lsl #10
  4014b8:	ldr	w1, [sp, #32]
  4014bc:	ldur	x6, [x29, #-16]
  4014c0:	ldr	x2, [sp, #16]
  4014c4:	mov	w3, #0x21                  	// #33
  4014c8:	adrp	x4, 401000 <run+0x19c>
  4014cc:	add	x4, x4, #0x7b2
  4014d0:	adrp	x5, 401000 <run+0x19c>
  4014d4:	add	x5, x5, #0x7cd
  4014d8:	bl	400b60 <log_internal_realm@plt>
  4014dc:	str	w0, [sp, #12]
  4014e0:	b	4014f8 <proc_cmdline_value_missing+0xa0>
  4014e4:	ldr	w0, [sp, #32]
  4014e8:	bl	400b70 <abs@plt>
  4014ec:	mov	w8, wzr
  4014f0:	subs	w8, w8, w0, uxtb
  4014f4:	str	w8, [sp, #12]
  4014f8:	ldr	w8, [sp, #12]
  4014fc:	str	w8, [sp, #24]
  401500:	mov	w8, #0x1                   	// #1
  401504:	and	w8, w8, #0x1
  401508:	sturb	w8, [x29, #-1]
  40150c:	b	40151c <proc_cmdline_value_missing+0xc4>
  401510:	mov	w8, wzr
  401514:	and	w8, w8, #0x1
  401518:	sturb	w8, [x29, #-1]
  40151c:	ldurb	w8, [x29, #-1]
  401520:	and	w0, w8, #0x1
  401524:	ldp	x29, x30, [sp, #64]
  401528:	add	sp, sp, #0x50
  40152c:	ret

0000000000401530 <ALIGN_TO>:
  401530:	sub	sp, sp, #0x10
  401534:	str	x0, [sp, #8]
  401538:	str	x1, [sp]
  40153c:	ldr	x8, [sp, #8]
  401540:	ldr	x9, [sp]
  401544:	add	x8, x8, x9
  401548:	subs	x8, x8, #0x1
  40154c:	ldr	x9, [sp]
  401550:	subs	x9, x9, #0x1
  401554:	bic	x0, x8, x9
  401558:	add	sp, sp, #0x10
  40155c:	ret

0000000000401560 <__libc_csu_init>:
  401560:	stp	x29, x30, [sp, #-64]!
  401564:	mov	x29, sp
  401568:	stp	x19, x20, [sp, #16]
  40156c:	adrp	x20, 41f000 <__FRAME_END__+0x1d650>
  401570:	add	x20, x20, #0xd18
  401574:	stp	x21, x22, [sp, #32]
  401578:	adrp	x21, 41f000 <__FRAME_END__+0x1d650>
  40157c:	add	x21, x21, #0xd10
  401580:	sub	x20, x20, x21
  401584:	mov	w22, w0
  401588:	stp	x23, x24, [sp, #48]
  40158c:	mov	x23, x1
  401590:	mov	x24, x2
  401594:	bl	400a98 <_init>
  401598:	cmp	xzr, x20, asr #3
  40159c:	b.eq	4015c8 <__libc_csu_init+0x68>  // b.none
  4015a0:	asr	x20, x20, #3
  4015a4:	mov	x19, #0x0                   	// #0
  4015a8:	ldr	x3, [x21, x19, lsl #3]
  4015ac:	mov	x2, x24
  4015b0:	add	x19, x19, #0x1
  4015b4:	mov	x1, x23
  4015b8:	mov	w0, w22
  4015bc:	blr	x3
  4015c0:	cmp	x20, x19
  4015c4:	b.ne	4015a8 <__libc_csu_init+0x48>  // b.any
  4015c8:	ldp	x19, x20, [sp, #16]
  4015cc:	ldp	x21, x22, [sp, #32]
  4015d0:	ldp	x23, x24, [sp, #48]
  4015d4:	ldp	x29, x30, [sp], #64
  4015d8:	ret
  4015dc:	nop

00000000004015e0 <__libc_csu_fini>:
  4015e0:	ret

Disassembly of section .fini:

00000000004015e4 <_fini>:
  4015e4:	stp	x29, x30, [sp, #-16]!
  4015e8:	mov	x29, sp
  4015ec:	ldp	x29, x30, [sp], #16
  4015f0:	ret
