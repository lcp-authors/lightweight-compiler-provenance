
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi_id_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401828 <_init>:
  401828:	stp	x29, x30, [sp, #-16]!
  40182c:	mov	x29, sp
  401830:	bl	401c50 <call_weak_fn>
  401834:	ldp	x29, x30, [sp], #16
  401838:	ret

Disassembly of section .plt:

0000000000401840 <.plt>:
  401840:	stp	x16, x30, [sp, #-16]!
  401844:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401848:	ldr	x17, [x16, #3600]
  40184c:	add	x16, x16, #0xe10
  401850:	br	x17
  401854:	nop
  401858:	nop
  40185c:	nop

0000000000401860 <safe_fclose@plt>:
  401860:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401864:	ldr	x17, [x16, #3608]
  401868:	add	x16, x16, #0xe18
  40186c:	br	x17

0000000000401870 <strscpy@plt>:
  401870:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401874:	ldr	x17, [x16, #3616]
  401878:	add	x16, x16, #0xe20
  40187c:	br	x17

0000000000401880 <nanosleep@plt>:
  401880:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401884:	ldr	x17, [x16, #3624]
  401888:	add	x16, x16, #0xe28
  40188c:	br	x17

0000000000401890 <fgets@plt>:
  401890:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401894:	ldr	x17, [x16, #3632]
  401898:	add	x16, x16, #0xe30
  40189c:	br	x17

00000000004018a0 <__libc_start_main@plt>:
  4018a0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4018a4:	ldr	x17, [x16, #3640]
  4018a8:	add	x16, x16, #0xe38
  4018ac:	br	x17

00000000004018b0 <log_close@plt>:
  4018b0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4018b4:	ldr	x17, [x16, #3648]
  4018b8:	add	x16, x16, #0xe40
  4018bc:	br	x17

00000000004018c0 <__gmon_start__@plt>:
  4018c0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4018c4:	ldr	x17, [x16, #3656]
  4018c8:	add	x16, x16, #0xe48
  4018cc:	br	x17

00000000004018d0 <strsep@plt>:
  4018d0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4018d4:	ldr	x17, [x16, #3664]
  4018d8:	add	x16, x16, #0xe50
  4018dc:	br	x17

00000000004018e0 <log_parse_environment_realm@plt>:
  4018e0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4018e4:	ldr	x17, [x16, #3672]
  4018e8:	add	x16, x16, #0xe58
  4018ec:	br	x17

00000000004018f0 <strscpyl@plt>:
  4018f0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4018f4:	ldr	x17, [x16, #3680]
  4018f8:	add	x16, x16, #0xe60
  4018fc:	br	x17

0000000000401900 <strnlen@plt>:
  401900:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401904:	ldr	x17, [x16, #3688]
  401908:	add	x16, x16, #0xe68
  40190c:	br	x17

0000000000401910 <sd_device_new_from_subsystem_sysname@plt>:
  401910:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401914:	ldr	x17, [x16, #3696]
  401918:	add	x16, x16, #0xe70
  40191c:	br	x17

0000000000401920 <memcpy@plt>:
  401920:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401924:	ldr	x17, [x16, #3704]
  401928:	add	x16, x16, #0xe78
  40192c:	br	x17

0000000000401930 <__ctype_b_loc@plt>:
  401930:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401934:	ldr	x17, [x16, #3712]
  401938:	add	x16, x16, #0xe80
  40193c:	br	x17

0000000000401940 <strncpy@plt>:
  401940:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401944:	ldr	x17, [x16, #3720]
  401948:	add	x16, x16, #0xe88
  40194c:	br	x17

0000000000401950 <exit@plt>:
  401950:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401954:	ldr	x17, [x16, #3728]
  401958:	add	x16, x16, #0xe90
  40195c:	br	x17

0000000000401960 <log_assert_failed_realm@plt>:
  401960:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401964:	ldr	x17, [x16, #3736]
  401968:	add	x16, x16, #0xe98
  40196c:	br	x17

0000000000401970 <utf8_encoded_valid_unichar@plt>:
  401970:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401974:	ldr	x17, [x16, #3744]
  401978:	add	x16, x16, #0xea0
  40197c:	br	x17

0000000000401980 <getopt_long@plt>:
  401980:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401984:	ldr	x17, [x16, #3752]
  401988:	add	x16, x16, #0xea8
  40198c:	br	x17

0000000000401990 <encode_devnode_name@plt>:
  401990:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401994:	ldr	x17, [x16, #3760]
  401998:	add	x16, x16, #0xeb0
  40199c:	br	x17

00000000004019a0 <log_assert_failed_unreachable_realm@plt>:
  4019a0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4019a4:	ldr	x17, [x16, #3768]
  4019a8:	add	x16, x16, #0xeb8
  4019ac:	br	x17

00000000004019b0 <strncmp@plt>:
  4019b0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4019b4:	ldr	x17, [x16, #3776]
  4019b8:	add	x16, x16, #0xec0
  4019bc:	br	x17

00000000004019c0 <abort@plt>:
  4019c0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4019c4:	ldr	x17, [x16, #3784]
  4019c8:	add	x16, x16, #0xec8
  4019cc:	br	x17

00000000004019d0 <strspn@plt>:
  4019d0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4019d4:	ldr	x17, [x16, #3792]
  4019d8:	add	x16, x16, #0xed0
  4019dc:	br	x17

00000000004019e0 <__fxstat64@plt>:
  4019e0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4019e4:	ldr	x17, [x16, #3800]
  4019e8:	add	x16, x16, #0xed8
  4019ec:	br	x17

00000000004019f0 <__errno_location@plt>:
  4019f0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  4019f4:	ldr	x17, [x16, #3808]
  4019f8:	add	x16, x16, #0xee0
  4019fc:	br	x17

0000000000401a00 <log_set_target@plt>:
  401a00:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a04:	ldr	x17, [x16, #3816]
  401a08:	add	x16, x16, #0xee8
  401a0c:	br	x17

0000000000401a10 <__stack_chk_fail@plt>:
  401a10:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a14:	ldr	x17, [x16, #3824]
  401a18:	add	x16, x16, #0xef0
  401a1c:	br	x17

0000000000401a20 <initialize_srand@plt>:
  401a20:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a24:	ldr	x17, [x16, #3832]
  401a28:	add	x16, x16, #0xef8
  401a2c:	br	x17

0000000000401a30 <rand@plt>:
  401a30:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a34:	ldr	x17, [x16, #3840]
  401a38:	add	x16, x16, #0xf00
  401a3c:	br	x17

0000000000401a40 <malloc@plt>:
  401a40:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a44:	ldr	x17, [x16, #3848]
  401a48:	add	x16, x16, #0xf08
  401a4c:	br	x17

0000000000401a50 <udev_parse_config_full@plt>:
  401a50:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a54:	ldr	x17, [x16, #3856]
  401a58:	add	x16, x16, #0xf10
  401a5c:	br	x17

0000000000401a60 <log_internal_realm@plt>:
  401a60:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a64:	ldr	x17, [x16, #3864]
  401a68:	add	x16, x16, #0xf18
  401a6c:	br	x17

0000000000401a70 <ioctl@plt>:
  401a70:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a74:	ldr	x17, [x16, #3872]
  401a78:	add	x16, x16, #0xf20
  401a7c:	br	x17

0000000000401a80 <strtoul@plt>:
  401a80:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a84:	ldr	x17, [x16, #3880]
  401a88:	add	x16, x16, #0xf28
  401a8c:	br	x17

0000000000401a90 <strcmp@plt>:
  401a90:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401a94:	ldr	x17, [x16, #3888]
  401a98:	add	x16, x16, #0xf30
  401a9c:	br	x17

0000000000401aa0 <strtol@plt>:
  401aa0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401aa4:	ldr	x17, [x16, #3896]
  401aa8:	add	x16, x16, #0xf38
  401aac:	br	x17

0000000000401ab0 <calloc@plt>:
  401ab0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401ab4:	ldr	x17, [x16, #3904]
  401ab8:	add	x16, x16, #0xf40
  401abc:	br	x17

0000000000401ac0 <whitelisted_char_for_devnode@plt>:
  401ac0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401ac4:	ldr	x17, [x16, #3912]
  401ac8:	add	x16, x16, #0xf48
  401acc:	br	x17

0000000000401ad0 <strchr@plt>:
  401ad0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401ad4:	ldr	x17, [x16, #3920]
  401ad8:	add	x16, x16, #0xf50
  401adc:	br	x17

0000000000401ae0 <log_set_max_level_realm@plt>:
  401ae0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401ae4:	ldr	x17, [x16, #3928]
  401ae8:	add	x16, x16, #0xf58
  401aec:	br	x17

0000000000401af0 <sd_device_get_sysattr_value@plt>:
  401af0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401af4:	ldr	x17, [x16, #3936]
  401af8:	add	x16, x16, #0xf60
  401afc:	br	x17

0000000000401b00 <free@plt>:
  401b00:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b04:	ldr	x17, [x16, #3944]
  401b08:	add	x16, x16, #0xf68
  401b0c:	br	x17

0000000000401b10 <puts@plt>:
  401b10:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b14:	ldr	x17, [x16, #3952]
  401b18:	add	x16, x16, #0xf70
  401b1c:	br	x17

0000000000401b20 <sprintf@plt>:
  401b20:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b24:	ldr	x17, [x16, #3960]
  401b28:	add	x16, x16, #0xf78
  401b2c:	br	x17

0000000000401b30 <sd_device_unref@plt>:
  401b30:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b34:	ldr	x17, [x16, #3968]
  401b38:	add	x16, x16, #0xf80
  401b3c:	br	x17

0000000000401b40 <printf@plt>:
  401b40:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b44:	ldr	x17, [x16, #3976]
  401b48:	add	x16, x16, #0xf88
  401b4c:	br	x17

0000000000401b50 <strcpy@plt>:
  401b50:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b54:	ldr	x17, [x16, #3984]
  401b58:	add	x16, x16, #0xf90
  401b5c:	br	x17

0000000000401b60 <close@plt>:
  401b60:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b64:	ldr	x17, [x16, #3992]
  401b68:	add	x16, x16, #0xf98
  401b6c:	br	x17

0000000000401b70 <open64@plt>:
  401b70:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b74:	ldr	x17, [x16, #4000]
  401b78:	add	x16, x16, #0xfa0
  401b7c:	br	x17

0000000000401b80 <strlen@plt>:
  401b80:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b84:	ldr	x17, [x16, #4008]
  401b88:	add	x16, x16, #0xfa8
  401b8c:	br	x17

0000000000401b90 <strcasecmp@plt>:
  401b90:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401b94:	ldr	x17, [x16, #4016]
  401b98:	add	x16, x16, #0xfb0
  401b9c:	br	x17

0000000000401ba0 <sd_device_get_syspath@plt>:
  401ba0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401ba4:	ldr	x17, [x16, #4024]
  401ba8:	add	x16, x16, #0xfb8
  401bac:	br	x17

0000000000401bb0 <fopen64@plt>:
  401bb0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401bb4:	ldr	x17, [x16, #4032]
  401bb8:	add	x16, x16, #0xfc0
  401bbc:	br	x17

0000000000401bc0 <log_open@plt>:
  401bc0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401bc4:	ldr	x17, [x16, #4040]
  401bc8:	add	x16, x16, #0xfc8
  401bcc:	br	x17

0000000000401bd0 <log_oom_internal@plt>:
  401bd0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401bd4:	ldr	x17, [x16, #4048]
  401bd8:	add	x16, x16, #0xfd0
  401bdc:	br	x17

0000000000401be0 <memset@plt>:
  401be0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401be4:	ldr	x17, [x16, #4056]
  401be8:	add	x16, x16, #0xfd8
  401bec:	br	x17

0000000000401bf0 <log_get_max_level_realm@plt>:
  401bf0:	adrp	x16, 416000 <__FRAME_END__+0xfde8>
  401bf4:	ldr	x17, [x16, #4064]
  401bf8:	add	x16, x16, #0xfe0
  401bfc:	br	x17

Disassembly of section .text:

0000000000401c00 <_start>:
  401c00:	mov	x29, #0x0                   	// #0
  401c04:	mov	x30, #0x0                   	// #0
  401c08:	mov	x5, x0
  401c0c:	ldr	x1, [sp]
  401c10:	add	x2, sp, #0x8
  401c14:	mov	x6, sp
  401c18:	movz	x0, #0x0, lsl #48
  401c1c:	movk	x0, #0x0, lsl #32
  401c20:	movk	x0, #0x40, lsl #16
  401c24:	movk	x0, #0x2634
  401c28:	movz	x3, #0x0, lsl #48
  401c2c:	movk	x3, #0x0, lsl #32
  401c30:	movk	x3, #0x40, lsl #16
  401c34:	movk	x3, #0x4c58
  401c38:	movz	x4, #0x0, lsl #48
  401c3c:	movk	x4, #0x0, lsl #32
  401c40:	movk	x4, #0x40, lsl #16
  401c44:	movk	x4, #0x4cd8
  401c48:	bl	4018a0 <__libc_start_main@plt>
  401c4c:	bl	4019c0 <abort@plt>

0000000000401c50 <call_weak_fn>:
  401c50:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  401c54:	ldr	x0, [x0, #4080]
  401c58:	cbz	x0, 401c60 <call_weak_fn+0x10>
  401c5c:	b	4018c0 <__gmon_start__@plt>
  401c60:	ret

0000000000401c64 <deregister_tm_clones>:
  401c64:	adrp	x0, 417000 <config_file>
  401c68:	add	x0, x0, #0x208
  401c6c:	adrp	x1, 417000 <config_file>
  401c70:	add	x1, x1, #0x208
  401c74:	cmp	x0, x1
  401c78:	b.eq	401cac <deregister_tm_clones+0x48>  // b.none
  401c7c:	stp	x29, x30, [sp, #-32]!
  401c80:	mov	x29, sp
  401c84:	adrp	x0, 404000 <scsi_std_inquiry+0xd0>
  401c88:	ldr	x0, [x0, #3312]
  401c8c:	str	x0, [sp, #24]
  401c90:	mov	x1, x0
  401c94:	cbz	x1, 401ca4 <deregister_tm_clones+0x40>
  401c98:	adrp	x0, 417000 <config_file>
  401c9c:	add	x0, x0, #0x208
  401ca0:	blr	x1
  401ca4:	ldp	x29, x30, [sp], #32
  401ca8:	ret
  401cac:	ret

0000000000401cb0 <register_tm_clones>:
  401cb0:	adrp	x0, 417000 <config_file>
  401cb4:	add	x0, x0, #0x208
  401cb8:	adrp	x1, 417000 <config_file>
  401cbc:	add	x1, x1, #0x208
  401cc0:	sub	x0, x0, x1
  401cc4:	lsr	x1, x0, #63
  401cc8:	add	x0, x1, x0, asr #3
  401ccc:	cmp	xzr, x0, asr #1
  401cd0:	b.eq	401d08 <register_tm_clones+0x58>  // b.none
  401cd4:	stp	x29, x30, [sp, #-32]!
  401cd8:	mov	x29, sp
  401cdc:	asr	x1, x0, #1
  401ce0:	adrp	x0, 404000 <scsi_std_inquiry+0xd0>
  401ce4:	ldr	x0, [x0, #3320]
  401ce8:	str	x0, [sp, #24]
  401cec:	mov	x2, x0
  401cf0:	cbz	x2, 401d00 <register_tm_clones+0x50>
  401cf4:	adrp	x0, 417000 <config_file>
  401cf8:	add	x0, x0, #0x208
  401cfc:	blr	x2
  401d00:	ldp	x29, x30, [sp], #32
  401d04:	ret
  401d08:	ret

0000000000401d0c <__do_global_dtors_aux>:
  401d0c:	adrp	x0, 417000 <config_file>
  401d10:	ldrb	w0, [x0, #544]
  401d14:	cbnz	w0, 401d38 <__do_global_dtors_aux+0x2c>
  401d18:	stp	x29, x30, [sp, #-16]!
  401d1c:	mov	x29, sp
  401d20:	bl	401c64 <deregister_tm_clones>
  401d24:	adrp	x0, 417000 <config_file>
  401d28:	mov	w1, #0x1                   	// #1
  401d2c:	strb	w1, [x0, #544]
  401d30:	ldp	x29, x30, [sp], #16
  401d34:	ret
  401d38:	ret

0000000000401d3c <frame_dummy>:
  401d3c:	stp	x29, x30, [sp, #-16]!
  401d40:	mov	x29, sp
  401d44:	bl	401cb0 <register_tm_clones>
  401d48:	ldp	x29, x30, [sp], #16
  401d4c:	ret

0000000000401d50 <get_value>:
  401d50:	stp	x29, x30, [sp, #-48]!
  401d54:	mov	x29, sp
  401d58:	stp	x19, x20, [sp, #16]
  401d5c:	str	x21, [sp, #32]
  401d60:	mov	x19, x0
  401d64:	ldr	x0, [x0]
  401d68:	ldrb	w1, [x0]
  401d6c:	adrp	x20, 404000 <scsi_std_inquiry+0xd0>
  401d70:	add	x20, x20, #0xd08
  401d74:	cmp	w1, #0x22
  401d78:	b.eq	401dc4 <get_value+0x74>  // b.none
  401d7c:	mov	x1, x20
  401d80:	mov	x0, x19
  401d84:	bl	4018d0 <strsep@plt>
  401d88:	mov	x21, x0
  401d8c:	cmp	x0, #0x0
  401d90:	adrp	x0, 404000 <scsi_std_inquiry+0xd0>
  401d94:	add	x0, x0, #0xd00
  401d98:	ccmp	x20, x0, #0x0, ne  // ne = any
  401d9c:	b.eq	401dd8 <get_value+0x88>  // b.none
  401da0:	bl	401930 <__ctype_b_loc@plt>
  401da4:	ldr	x1, [x19]
  401da8:	ldrb	w3, [x1]
  401dac:	ldr	x2, [x0]
  401db0:	ldrh	w2, [x2, x3, lsl #1]
  401db4:	tbz	w2, #13, 401de8 <get_value+0x98>
  401db8:	add	x1, x1, #0x1
  401dbc:	str	x1, [x19]
  401dc0:	b	401da4 <get_value+0x54>
  401dc4:	add	x0, x0, #0x1
  401dc8:	str	x0, [x19]
  401dcc:	adrp	x20, 404000 <scsi_std_inquiry+0xd0>
  401dd0:	add	x20, x20, #0xd00
  401dd4:	b	401d7c <get_value+0x2c>
  401dd8:	ldr	x0, [x19]
  401ddc:	add	x0, x0, #0x1
  401de0:	str	x0, [x19]
  401de4:	b	401da0 <get_value+0x50>
  401de8:	mov	x0, x21
  401dec:	ldp	x19, x20, [sp, #16]
  401df0:	ldr	x21, [sp, #32]
  401df4:	ldp	x29, x30, [sp], #48
  401df8:	ret

0000000000401dfc <set_options>:
  401dfc:	stp	x29, x30, [sp, #-80]!
  401e00:	mov	x29, sp
  401e04:	stp	x19, x20, [sp, #16]
  401e08:	stp	x21, x22, [sp, #32]
  401e0c:	stp	x23, x24, [sp, #48]
  401e10:	stp	x25, x26, [sp, #64]
  401e14:	mov	w19, w0
  401e18:	mov	x20, x1
  401e1c:	mov	x23, x2
  401e20:	adrp	x0, 417000 <config_file>
  401e24:	mov	w1, #0x1                   	// #1
  401e28:	str	w1, [x0, #528]
  401e2c:	adrp	x22, 405000 <_fini+0x324>
  401e30:	add	x22, x22, #0x3c0
  401e34:	adrp	x21, 405000 <_fini+0x324>
  401e38:	add	x21, x21, #0x88
  401e3c:	adrp	x24, 417000 <config_file>
  401e40:	add	x24, x24, #0x370
  401e44:	mov	w25, #0x1                   	// #1
  401e48:	mov	x4, #0x0                   	// #0
  401e4c:	mov	x3, x22
  401e50:	mov	x2, x21
  401e54:	mov	x1, x20
  401e58:	mov	w0, w19
  401e5c:	bl	401980 <getopt_long@plt>
  401e60:	tbnz	w0, #31, 402108 <set_options+0x30c>
  401e64:	cmp	w0, #0x68
  401e68:	b.eq	401f90 <set_options+0x194>  // b.none
  401e6c:	b.gt	401edc <set_options+0xe0>
  401e70:	cmp	w0, #0x64
  401e74:	b.eq	401f54 <set_options+0x158>  // b.none
  401e78:	b.le	401e98 <set_options+0x9c>
  401e7c:	cmp	w0, #0x66
  401e80:	b.eq	401f74 <set_options+0x178>  // b.none
  401e84:	cmp	w0, #0x67
  401e88:	b.ne	4020e4 <set_options+0x2e8>  // b.any
  401e8c:	adrp	x0, 417000 <config_file>
  401e90:	strb	w25, [x0, #545]
  401e94:	b	401e48 <set_options+0x4c>
  401e98:	cmp	w0, #0x56
  401e9c:	b.eq	4020d0 <set_options+0x2d4>  // b.none
  401ea0:	cmp	w0, #0x62
  401ea4:	b.ne	401eb4 <set_options+0xb8>  // b.any
  401ea8:	adrp	x0, 417000 <config_file>
  401eac:	strb	wzr, [x0, #545]
  401eb0:	b	401e48 <set_options+0x4c>
  401eb4:	mov	w1, #0xffffffff            	// #-1
  401eb8:	cmp	w0, #0x3f
  401ebc:	b.ne	4020e4 <set_options+0x2e8>  // b.any
  401ec0:	mov	w0, w1
  401ec4:	ldp	x19, x20, [sp, #16]
  401ec8:	ldp	x21, x22, [sp, #32]
  401ecc:	ldp	x23, x24, [sp, #48]
  401ed0:	ldp	x25, x26, [sp, #64]
  401ed4:	ldp	x29, x30, [sp], #80
  401ed8:	ret
  401edc:	cmp	w0, #0x75
  401ee0:	b.eq	4020ac <set_options+0x2b0>  // b.none
  401ee4:	b.le	401f04 <set_options+0x108>
  401ee8:	cmp	w0, #0x76
  401eec:	b.eq	4020b4 <set_options+0x2b8>  // b.none
  401ef0:	cmp	w0, #0x78
  401ef4:	b.ne	4020e4 <set_options+0x2e8>  // b.any
  401ef8:	adrp	x0, 417000 <config_file>
  401efc:	strb	w25, [x0, #553]
  401f00:	b	401e48 <set_options+0x4c>
  401f04:	cmp	w0, #0x70
  401f08:	b.eq	401fac <set_options+0x1b0>  // b.none
  401f0c:	cmp	w0, #0x73
  401f10:	b.ne	4020e4 <set_options+0x2e8>  // b.any
  401f14:	mov	w2, #0xa                   	// #10
  401f18:	mov	x1, #0x0                   	// #0
  401f1c:	adrp	x0, 417000 <config_file>
  401f20:	ldr	x0, [x0, #536]
  401f24:	bl	401aa0 <strtol@plt>
  401f28:	adrp	x1, 417000 <config_file>
  401f2c:	str	w0, [x1, #512]
  401f30:	sub	w0, w0, #0x3
  401f34:	cmp	w0, #0x1
  401f38:	b.ls	401e48 <set_options+0x4c>  // b.plast
  401f3c:	mov	w0, #0x1                   	// #1
  401f40:	bl	401bf0 <log_get_max_level_realm@plt>
  401f44:	cmp	w0, #0x2
  401f48:	b.gt	402070 <set_options+0x274>
  401f4c:	mov	w1, #0xffffffea            	// #-22
  401f50:	b	401ec0 <set_options+0xc4>
  401f54:	adrp	x0, 417000 <config_file>
  401f58:	strb	w25, [x0, #552]
  401f5c:	adrp	x0, 417000 <config_file>
  401f60:	ldr	x2, [x0, #536]
  401f64:	mov	x1, #0x200                 	// #512
  401f68:	mov	x0, x23
  401f6c:	bl	401870 <strscpy@plt>
  401f70:	b	401e48 <set_options+0x4c>
  401f74:	adrp	x0, 417000 <config_file>
  401f78:	ldr	x2, [x0, #536]
  401f7c:	mov	x1, #0x200                 	// #512
  401f80:	adrp	x0, 417000 <config_file>
  401f84:	add	x0, x0, #0x0
  401f88:	bl	401870 <strscpy@plt>
  401f8c:	b	401e48 <set_options+0x4c>
  401f90:	adrp	x0, 417000 <config_file>
  401f94:	ldr	x1, [x0, #520]
  401f98:	adrp	x0, 404000 <scsi_std_inquiry+0xd0>
  401f9c:	add	x0, x0, #0xd10
  401fa0:	bl	401b40 <printf@plt>
  401fa4:	mov	w0, #0x0                   	// #0
  401fa8:	bl	401950 <exit@plt>
  401fac:	adrp	x0, 417000 <config_file>
  401fb0:	ldr	x26, [x0, #536]
  401fb4:	adrp	x1, 405000 <_fini+0x324>
  401fb8:	add	x1, x1, #0x0
  401fbc:	mov	x0, x26
  401fc0:	bl	401a90 <strcmp@plt>
  401fc4:	cbnz	w0, 401fd8 <set_options+0x1dc>
  401fc8:	adrp	x0, 417000 <config_file>
  401fcc:	mov	w1, #0x80                  	// #128
  401fd0:	str	w1, [x0, #548]
  401fd4:	b	401e48 <set_options+0x4c>
  401fd8:	adrp	x1, 405000 <_fini+0x324>
  401fdc:	add	x1, x1, #0x8
  401fe0:	mov	x0, x26
  401fe4:	bl	401a90 <strcmp@plt>
  401fe8:	cbnz	w0, 401ffc <set_options+0x200>
  401fec:	adrp	x0, 417000 <config_file>
  401ff0:	mov	w1, #0x83                  	// #131
  401ff4:	str	w1, [x0, #548]
  401ff8:	b	401e48 <set_options+0x4c>
  401ffc:	adrp	x1, 405000 <_fini+0x324>
  402000:	add	x1, x1, #0x10
  402004:	mov	x0, x26
  402008:	bl	401a90 <strcmp@plt>
  40200c:	cbnz	w0, 402020 <set_options+0x224>
  402010:	adrp	x0, 417000 <config_file>
  402014:	mov	w1, #0xffffff7d            	// #-131
  402018:	str	w1, [x0, #548]
  40201c:	b	401e48 <set_options+0x4c>
  402020:	mov	w0, #0x1                   	// #1
  402024:	bl	401bf0 <log_get_max_level_realm@plt>
  402028:	cmp	w0, #0x2
  40202c:	b.gt	402038 <set_options+0x23c>
  402030:	mov	w1, #0xffffffea            	// #-22
  402034:	b	401ec0 <set_options+0xc4>
  402038:	mov	x6, x26
  40203c:	adrp	x5, 405000 <_fini+0x324>
  402040:	add	x5, x5, #0x20
  402044:	adrp	x4, 405000 <_fini+0x324>
  402048:	add	x4, x4, #0x398
  40204c:	mov	w3, #0x15d                 	// #349
  402050:	adrp	x2, 405000 <_fini+0x324>
  402054:	add	x2, x2, #0x3b
  402058:	mov	w1, #0x16                  	// #22
  40205c:	movk	w1, #0x4000, lsl #16
  402060:	mov	w0, #0x403                 	// #1027
  402064:	bl	401a60 <log_internal_realm@plt>
  402068:	mov	w1, w0
  40206c:	b	401ec0 <set_options+0xc4>
  402070:	adrp	x0, 417000 <config_file>
  402074:	ldr	x6, [x0, #536]
  402078:	adrp	x5, 405000 <_fini+0x324>
  40207c:	add	x5, x5, #0x58
  402080:	adrp	x4, 405000 <_fini+0x324>
  402084:	add	x4, x4, #0x398
  402088:	mov	w3, #0x165                 	// #357
  40208c:	adrp	x2, 405000 <_fini+0x324>
  402090:	add	x2, x2, #0x3b
  402094:	mov	w1, #0x16                  	// #22
  402098:	movk	w1, #0x4000, lsl #16
  40209c:	mov	w0, #0x403                 	// #1027
  4020a0:	bl	401a60 <log_internal_realm@plt>
  4020a4:	mov	w1, w0
  4020a8:	b	401ec0 <set_options+0xc4>
  4020ac:	strb	w25, [x24]
  4020b0:	b	401e48 <set_options+0x4c>
  4020b4:	mov	w0, #0x0                   	// #0
  4020b8:	bl	401a00 <log_set_target@plt>
  4020bc:	mov	w1, #0x7                   	// #7
  4020c0:	mov	w0, #0x1                   	// #1
  4020c4:	bl	401ae0 <log_set_max_level_realm@plt>
  4020c8:	bl	401bc0 <log_open@plt>
  4020cc:	b	401e48 <set_options+0x4c>
  4020d0:	adrp	x0, 405000 <_fini+0x324>
  4020d4:	add	x0, x0, #0x70
  4020d8:	bl	401b10 <puts@plt>
  4020dc:	mov	w0, #0x0                   	// #0
  4020e0:	bl	401950 <exit@plt>
  4020e4:	adrp	x4, 405000 <_fini+0x324>
  4020e8:	add	x4, x4, #0x368
  4020ec:	mov	w3, #0x180                 	// #384
  4020f0:	adrp	x2, 405000 <_fini+0x324>
  4020f4:	add	x2, x2, #0x3b
  4020f8:	adrp	x1, 405000 <_fini+0x324>
  4020fc:	add	x1, x1, #0x78
  402100:	mov	w0, #0x1                   	// #1
  402104:	bl	4019a0 <log_assert_failed_unreachable_realm@plt>
  402108:	adrp	x0, 417000 <config_file>
  40210c:	ldr	w0, [x0, #528]
  402110:	cmp	w0, w19
  402114:	b.ge	402150 <set_options+0x354>  // b.tcont
  402118:	adrp	x1, 417000 <config_file>
  40211c:	ldrb	w1, [x1, #552]
  402120:	cbz	w1, 40212c <set_options+0x330>
  402124:	mov	w1, #0x0                   	// #0
  402128:	b	401ec0 <set_options+0xc4>
  40212c:	adrp	x1, 417000 <config_file>
  402130:	mov	w2, #0x1                   	// #1
  402134:	strb	w2, [x1, #552]
  402138:	ldr	x2, [x20, w0, sxtw #3]
  40213c:	mov	x1, #0x200                 	// #512
  402140:	mov	x0, x23
  402144:	bl	401870 <strscpy@plt>
  402148:	mov	w1, #0x0                   	// #0
  40214c:	b	401ec0 <set_options+0xc4>
  402150:	mov	w1, #0x0                   	// #0
  402154:	b	401ec0 <set_options+0xc4>

0000000000402158 <get_file_options>:
  402158:	stp	x29, x30, [sp, #-144]!
  40215c:	mov	x29, sp
  402160:	stp	x19, x20, [sp, #16]
  402164:	stp	x21, x22, [sp, #32]
  402168:	stp	x25, x26, [sp, #64]
  40216c:	stp	x27, x28, [sp, #80]
  402170:	mov	x25, x0
  402174:	str	x1, [sp, #104]
  402178:	mov	x27, x2
  40217c:	mov	x26, x3
  402180:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  402184:	ldr	x1, [x0, #3016]
  402188:	str	x1, [sp, #136]
  40218c:	mov	x1, #0x0                   	// #0
  402190:	str	xzr, [sp, #120]
  402194:	adrp	x1, 405000 <_fini+0x324>
  402198:	add	x1, x1, #0x98
  40219c:	adrp	x0, 417000 <config_file>
  4021a0:	add	x0, x0, #0x0
  4021a4:	bl	401bb0 <fopen64@plt>
  4021a8:	mov	x22, x0
  4021ac:	cbz	x0, 4021e0 <get_file_options+0x88>
  4021b0:	mov	x0, #0x100                 	// #256
  4021b4:	bl	401a40 <malloc@plt>
  4021b8:	str	x0, [sp, #120]
  4021bc:	cbz	x0, 402284 <get_file_options+0x12c>
  4021c0:	stp	x23, x24, [sp, #48]
  4021c4:	str	xzr, [x26]
  4021c8:	mov	w20, #0x0                   	// #0
  4021cc:	adrp	x24, 405000 <_fini+0x324>
  4021d0:	add	x24, x24, #0xd8
  4021d4:	adrp	x28, 405000 <_fini+0x324>
  4021d8:	add	x28, x28, #0xe0
  4021dc:	b	402300 <get_file_options+0x1a8>
  4021e0:	bl	4019f0 <__errno_location@plt>
  4021e4:	ldr	w20, [x0]
  4021e8:	mov	w19, #0x1                   	// #1
  4021ec:	cmp	w20, #0x2
  4021f0:	b.ne	402234 <get_file_options+0xdc>  // b.any
  4021f4:	mov	x0, x22
  4021f8:	bl	401860 <safe_fclose@plt>
  4021fc:	ldr	x0, [sp, #120]
  402200:	bl	401b00 <free@plt>
  402204:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  402208:	ldr	x1, [sp, #136]
  40220c:	ldr	x0, [x0, #3016]
  402210:	eor	x0, x1, x0
  402214:	cbnz	x0, 402620 <get_file_options+0x4c8>
  402218:	mov	w0, w19
  40221c:	ldp	x19, x20, [sp, #16]
  402220:	ldp	x21, x22, [sp, #32]
  402224:	ldp	x25, x26, [sp, #64]
  402228:	ldp	x27, x28, [sp, #80]
  40222c:	ldp	x29, x30, [sp], #144
  402230:	ret
  402234:	mov	w0, w19
  402238:	bl	401bf0 <log_get_max_level_realm@plt>
  40223c:	cmp	w0, #0x2
  402240:	b.gt	40224c <get_file_options+0xf4>
  402244:	mov	w19, #0xffffffff            	// #-1
  402248:	b	4021f4 <get_file_options+0x9c>
  40224c:	adrp	x6, 417000 <config_file>
  402250:	add	x6, x6, #0x0
  402254:	adrp	x5, 405000 <_fini+0x324>
  402258:	add	x5, x5, #0xa0
  40225c:	adrp	x4, 405000 <_fini+0x324>
  402260:	add	x4, x4, #0x380
  402264:	mov	w3, #0xa3                  	// #163
  402268:	adrp	x2, 405000 <_fini+0x324>
  40226c:	add	x2, x2, #0x3b
  402270:	mov	w1, w20
  402274:	mov	w0, #0x403                 	// #1027
  402278:	bl	401a60 <log_internal_realm@plt>
  40227c:	mov	w19, #0xffffffff            	// #-1
  402280:	b	4021f4 <get_file_options+0x9c>
  402284:	adrp	x3, 405000 <_fini+0x324>
  402288:	add	x3, x3, #0x380
  40228c:	mov	w2, #0xaf                  	// #175
  402290:	adrp	x1, 405000 <_fini+0x324>
  402294:	add	x1, x1, #0x3b
  402298:	mov	w0, #0x1                   	// #1
  40229c:	bl	401bd0 <log_oom_internal@plt>
  4022a0:	mov	w19, w0
  4022a4:	b	4021f4 <get_file_options+0x9c>
  4022a8:	mov	w0, #0x1                   	// #1
  4022ac:	bl	401bf0 <log_get_max_level_realm@plt>
  4022b0:	cmp	w0, #0x2
  4022b4:	b.gt	4022c4 <get_file_options+0x16c>
  4022b8:	mov	w19, #0x1                   	// #1
  4022bc:	ldp	x23, x24, [sp, #48]
  4022c0:	b	4021f4 <get_file_options+0x9c>
  4022c4:	mov	w6, w20
  4022c8:	adrp	x5, 405000 <_fini+0x324>
  4022cc:	add	x5, x5, #0xb8
  4022d0:	adrp	x4, 405000 <_fini+0x324>
  4022d4:	add	x4, x4, #0x380
  4022d8:	mov	w3, #0xbb                  	// #187
  4022dc:	adrp	x2, 405000 <_fini+0x324>
  4022e0:	add	x2, x2, #0x3b
  4022e4:	mov	w1, #0x0                   	// #0
  4022e8:	mov	w0, #0x403                 	// #1027
  4022ec:	bl	401a60 <log_internal_realm@plt>
  4022f0:	b	4022b8 <get_file_options+0x160>
  4022f4:	cmp	w1, #0x23
  4022f8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4022fc:	b.ne	402360 <get_file_options+0x208>  // b.any
  402300:	mov	x2, x22
  402304:	mov	w1, #0x100                 	// #256
  402308:	ldr	x0, [sp, #120]
  40230c:	bl	401890 <fgets@plt>
  402310:	mov	x19, x0
  402314:	str	x0, [sp, #128]
  402318:	cbz	x0, 4022b8 <get_file_options+0x160>
  40231c:	add	w20, w20, #0x1
  402320:	ldr	x0, [sp, #120]
  402324:	bl	401b80 <strlen@plt>
  402328:	add	x19, x19, x0
  40232c:	ldurb	w0, [x19, #-1]
  402330:	cmp	w0, #0xa
  402334:	b.ne	4022a8 <get_file_options+0x150>  // b.any
  402338:	bl	401930 <__ctype_b_loc@plt>
  40233c:	ldr	x3, [x0]
  402340:	ldr	x0, [sp, #128]
  402344:	ldrb	w1, [x0]
  402348:	and	x2, x1, #0xff
  40234c:	ldrh	w2, [x3, x2, lsl #1]
  402350:	tbz	w2, #13, 4022f4 <get_file_options+0x19c>
  402354:	add	x0, x0, #0x1
  402358:	str	x0, [sp, #128]
  40235c:	b	402340 <get_file_options+0x1e8>
  402360:	mov	x1, x24
  402364:	add	x0, sp, #0x80
  402368:	bl	4018d0 <strsep@plt>
  40236c:	mov	x19, x0
  402370:	cbz	x0, 402574 <get_file_options+0x41c>
  402374:	mov	x1, x28
  402378:	bl	401b90 <strcasecmp@plt>
  40237c:	cbnz	w0, 402628 <get_file_options+0x4d0>
  402380:	add	x0, sp, #0x80
  402384:	bl	401d50 <get_value>
  402388:	mov	x21, x0
  40238c:	cbz	x0, 4024f4 <get_file_options+0x39c>
  402390:	mov	x1, x24
  402394:	add	x0, sp, #0x80
  402398:	bl	4018d0 <strsep@plt>
  40239c:	mov	x19, x0
  4023a0:	cbz	x0, 402574 <get_file_options+0x41c>
  4023a4:	adrp	x1, 405000 <_fini+0x324>
  4023a8:	add	x1, x1, #0xe8
  4023ac:	bl	401b90 <strcasecmp@plt>
  4023b0:	cbnz	w0, 40262c <get_file_options+0x4d4>
  4023b4:	add	x0, sp, #0x80
  4023b8:	bl	401d50 <get_value>
  4023bc:	mov	x23, x0
  4023c0:	cbz	x0, 40251c <get_file_options+0x3c4>
  4023c4:	mov	x1, x24
  4023c8:	add	x0, sp, #0x80
  4023cc:	bl	4018d0 <strsep@plt>
  4023d0:	mov	x19, x0
  4023d4:	cbz	x0, 402574 <get_file_options+0x41c>
  4023d8:	adrp	x1, 405000 <_fini+0x324>
  4023dc:	add	x1, x1, #0xf0
  4023e0:	mov	x0, x19
  4023e4:	bl	401b90 <strcasecmp@plt>
  4023e8:	cbnz	w0, 402574 <get_file_options+0x41c>
  4023ec:	add	x0, sp, #0x80
  4023f0:	bl	401d50 <get_value>
  4023f4:	mov	x19, x0
  4023f8:	cbz	x0, 402548 <get_file_options+0x3f0>
  4023fc:	cmp	x21, #0x0
  402400:	ccmp	x23, #0x0, #0x4, eq  // eq = none
  402404:	b.ne	402574 <get_file_options+0x41c>  // b.any
  402408:	cbz	x25, 4025c4 <get_file_options+0x46c>
  40240c:	cbz	x21, 402300 <get_file_options+0x1a8>
  402410:	mov	x0, x21
  402414:	bl	401b80 <strlen@plt>
  402418:	mov	x2, x0
  40241c:	mov	x1, x21
  402420:	mov	x0, x25
  402424:	bl	4019b0 <strncmp@plt>
  402428:	cbnz	w0, 402300 <get_file_options+0x1a8>
  40242c:	cbz	x23, 40244c <get_file_options+0x2f4>
  402430:	mov	x0, x23
  402434:	bl	401b80 <strlen@plt>
  402438:	mov	x2, x0
  40243c:	mov	x1, x23
  402440:	ldr	x0, [sp, #104]
  402444:	bl	4019b0 <strncmp@plt>
  402448:	cbnz	w0, 402300 <get_file_options+0x1a8>
  40244c:	mov	x1, x19
  402450:	ldr	x0, [sp, #120]
  402454:	bl	401b50 <strcpy@plt>
  402458:	ldr	x20, [sp, #120]
  40245c:	ldrb	w0, [x20]
  402460:	cbz	w0, 4025f0 <get_file_options+0x498>
  402464:	mov	x2, x20
  402468:	mov	w1, #0x0                   	// #0
  40246c:	cmp	w0, #0x20
  402470:	cinc	w1, w1, eq  // eq = none
  402474:	ldrb	w0, [x2, #1]!
  402478:	cbnz	w0, 40246c <get_file_options+0x314>
  40247c:	add	w19, w1, #0x2
  402480:	mov	x1, #0x8                   	// #8
  402484:	sxtw	x0, w19
  402488:	bl	401ab0 <calloc@plt>
  40248c:	str	x0, [x26]
  402490:	cbz	x0, 4025f8 <get_file_options+0x4a0>
  402494:	str	w19, [x27]
  402498:	ldr	x0, [x26]
  40249c:	str	x20, [x0]
  4024a0:	ldr	w0, [x27]
  4024a4:	cmp	w0, #0x1
  4024a8:	b.le	4024e4 <get_file_options+0x38c>
  4024ac:	mov	x20, #0x8                   	// #8
  4024b0:	mov	w19, #0x1                   	// #1
  4024b4:	adrp	x23, 405000 <_fini+0x324>
  4024b8:	add	x23, x23, #0x120
  4024bc:	ldr	x21, [x26]
  4024c0:	mov	x1, x23
  4024c4:	add	x0, sp, #0x78
  4024c8:	bl	4018d0 <strsep@plt>
  4024cc:	str	x0, [x21, x20]
  4024d0:	add	w19, w19, #0x1
  4024d4:	add	x20, x20, #0x8
  4024d8:	ldr	w0, [x27]
  4024dc:	cmp	w0, w19
  4024e0:	b.gt	4024bc <get_file_options+0x364>
  4024e4:	str	xzr, [sp, #120]
  4024e8:	mov	w19, #0x0                   	// #0
  4024ec:	ldp	x23, x24, [sp, #48]
  4024f0:	b	4021f4 <get_file_options+0x9c>
  4024f4:	adrp	x3, 405000 <_fini+0x324>
  4024f8:	add	x3, x3, #0x380
  4024fc:	mov	w2, #0xce                  	// #206
  402500:	adrp	x1, 405000 <_fini+0x324>
  402504:	add	x1, x1, #0x3b
  402508:	mov	w0, #0x1                   	// #1
  40250c:	bl	401bd0 <log_oom_internal@plt>
  402510:	mov	w19, w0
  402514:	mov	x23, x21
  402518:	b	402568 <get_file_options+0x410>
  40251c:	adrp	x3, 405000 <_fini+0x324>
  402520:	add	x3, x3, #0x380
  402524:	mov	w2, #0xd7                  	// #215
  402528:	adrp	x1, 405000 <_fini+0x324>
  40252c:	add	x1, x1, #0x3b
  402530:	mov	w0, #0x1                   	// #1
  402534:	bl	401bd0 <log_oom_internal@plt>
  402538:	mov	w19, w0
  40253c:	cbz	w0, 4025e8 <get_file_options+0x490>
  402540:	ldp	x23, x24, [sp, #48]
  402544:	b	4021f4 <get_file_options+0x9c>
  402548:	adrp	x3, 405000 <_fini+0x324>
  40254c:	add	x3, x3, #0x380
  402550:	mov	w2, #0xe2                  	// #226
  402554:	adrp	x1, 405000 <_fini+0x324>
  402558:	add	x1, x1, #0x3b
  40255c:	mov	w0, #0x1                   	// #1
  402560:	bl	401bd0 <log_oom_internal@plt>
  402564:	mov	w19, w0
  402568:	cbz	w19, 4025cc <get_file_options+0x474>
  40256c:	ldp	x23, x24, [sp, #48]
  402570:	b	4021f4 <get_file_options+0x9c>
  402574:	mov	w0, #0x1                   	// #1
  402578:	bl	401bf0 <log_get_max_level_realm@plt>
  40257c:	cmp	w0, #0x2
  402580:	b.gt	402590 <get_file_options+0x438>
  402584:	mov	w19, #0xffffffff            	// #-1
  402588:	ldp	x23, x24, [sp, #48]
  40258c:	b	4021f4 <get_file_options+0x9c>
  402590:	ldr	x7, [sp, #120]
  402594:	mov	w6, w20
  402598:	adrp	x5, 405000 <_fini+0x324>
  40259c:	add	x5, x5, #0xf8
  4025a0:	adrp	x4, 405000 <_fini+0x324>
  4025a4:	add	x4, x4, #0x380
  4025a8:	mov	w3, #0xec                  	// #236
  4025ac:	adrp	x2, 405000 <_fini+0x324>
  4025b0:	add	x2, x2, #0x3b
  4025b4:	mov	w1, #0x0                   	// #0
  4025b8:	mov	w0, #0x403                 	// #1027
  4025bc:	bl	401a60 <log_internal_realm@plt>
  4025c0:	b	402584 <get_file_options+0x42c>
  4025c4:	cbnz	x21, 402300 <get_file_options+0x1a8>
  4025c8:	b	40244c <get_file_options+0x2f4>
  4025cc:	orr	x21, x21, x23
  4025d0:	mov	w19, #0x1                   	// #1
  4025d4:	cbnz	x21, 4025e0 <get_file_options+0x488>
  4025d8:	ldp	x23, x24, [sp, #48]
  4025dc:	b	4021f4 <get_file_options+0x9c>
  4025e0:	mov	x19, #0x0                   	// #0
  4025e4:	b	40244c <get_file_options+0x2f4>
  4025e8:	mov	x19, x23
  4025ec:	b	40244c <get_file_options+0x2f4>
  4025f0:	mov	w1, #0x0                   	// #0
  4025f4:	b	40247c <get_file_options+0x324>
  4025f8:	adrp	x3, 405000 <_fini+0x324>
  4025fc:	add	x3, x3, #0x380
  402600:	mov	w2, #0x10c                 	// #268
  402604:	adrp	x1, 405000 <_fini+0x324>
  402608:	add	x1, x1, #0x3b
  40260c:	mov	w0, #0x1                   	// #1
  402610:	bl	401bd0 <log_oom_internal@plt>
  402614:	mov	w19, w0
  402618:	ldp	x23, x24, [sp, #48]
  40261c:	b	4021f4 <get_file_options+0x9c>
  402620:	stp	x23, x24, [sp, #48]
  402624:	bl	401a10 <__stack_chk_fail@plt>
  402628:	mov	x21, #0x0                   	// #0
  40262c:	mov	x23, #0x0                   	// #0
  402630:	b	4023d8 <get_file_options+0x280>

0000000000402634 <main>:
  402634:	sub	sp, sp, #0x720
  402638:	stp	x29, x30, [sp]
  40263c:	mov	x29, sp
  402640:	stp	x19, x20, [sp, #16]
  402644:	mov	w19, w0
  402648:	mov	x20, x1
  40264c:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  402650:	ldr	x1, [x0, #3016]
  402654:	str	x1, [sp, #1816]
  402658:	mov	x1, #0x0                   	// #0
  40265c:	str	xzr, [sp, #88]
  402660:	mov	w0, #0x7                   	// #7
  402664:	bl	401a00 <log_set_target@plt>
  402668:	mov	x3, #0x0                   	// #0
  40266c:	mov	x2, #0x0                   	// #0
  402670:	mov	x1, #0x0                   	// #0
  402674:	mov	x0, #0x0                   	// #0
  402678:	bl	401a50 <udev_parse_config_full@plt>
  40267c:	mov	w0, #0x1                   	// #1
  402680:	bl	4018e0 <log_parse_environment_realm@plt>
  402684:	bl	401bc0 <log_open@plt>
  402688:	add	x3, sp, #0x58
  40268c:	add	x2, sp, #0x50
  402690:	mov	x1, #0x0                   	// #0
  402694:	mov	x0, #0x0                   	// #0
  402698:	bl	402158 <get_file_options>
  40269c:	tbnz	w0, #31, 402cec <main+0x6b8>
  4026a0:	cbnz	w0, 4026bc <main+0x88>
  4026a4:	ldr	x1, [sp, #88]
  4026a8:	cbz	x1, 4026f4 <main+0xc0>
  4026ac:	add	x2, sp, #0x518
  4026b0:	ldr	w0, [sp, #80]
  4026b4:	bl	401dfc <set_options>
  4026b8:	tbnz	w0, #31, 402d34 <main+0x700>
  4026bc:	add	x2, sp, #0x518
  4026c0:	mov	x1, x20
  4026c4:	mov	w0, w19
  4026c8:	bl	401dfc <set_options>
  4026cc:	tbnz	w0, #31, 402724 <main+0xf0>
  4026d0:	adrp	x0, 417000 <config_file>
  4026d4:	ldrb	w0, [x0, #552]
  4026d8:	cbnz	w0, 402768 <main+0x134>
  4026dc:	mov	w0, #0x1                   	// #1
  4026e0:	bl	401bf0 <log_get_max_level_realm@plt>
  4026e4:	cmp	w0, #0x2
  4026e8:	b.gt	402738 <main+0x104>
  4026ec:	mov	w20, #0x1                   	// #1
  4026f0:	b	402cf0 <main+0x6bc>
  4026f4:	stp	x21, x22, [sp, #32]
  4026f8:	stp	x23, x24, [sp, #48]
  4026fc:	str	x25, [sp, #64]
  402700:	adrp	x4, 405000 <_fini+0x324>
  402704:	add	x4, x4, #0x378
  402708:	mov	w3, #0x237                 	// #567
  40270c:	adrp	x2, 405000 <_fini+0x324>
  402710:	add	x2, x2, #0x3b
  402714:	adrp	x1, 405000 <_fini+0x324>
  402718:	add	x1, x1, #0x150
  40271c:	mov	w0, #0x1                   	// #1
  402720:	bl	401960 <log_assert_failed_realm@plt>
  402724:	stp	x21, x22, [sp, #32]
  402728:	stp	x23, x24, [sp, #48]
  40272c:	str	x25, [sp, #64]
  402730:	mov	w0, #0x1                   	// #1
  402734:	bl	401950 <exit@plt>
  402738:	adrp	x5, 405000 <_fini+0x324>
  40273c:	add	x5, x5, #0x158
  402740:	adrp	x4, 405000 <_fini+0x324>
  402744:	add	x4, x4, #0x3b8
  402748:	mov	w3, #0x246                 	// #582
  40274c:	adrp	x2, 405000 <_fini+0x324>
  402750:	add	x2, x2, #0x3b
  402754:	mov	w1, #0x0                   	// #0
  402758:	mov	w0, #0x403                 	// #1027
  40275c:	bl	401a60 <log_internal_realm@plt>
  402760:	mov	w20, #0x1                   	// #1
  402764:	b	402cf0 <main+0x6bc>
  402768:	mov	x2, #0x3b0                 	// #944
  40276c:	mov	w1, #0x0                   	// #0
  402770:	add	x0, sp, #0x68
  402774:	bl	401be0 <memset@plt>
  402778:	adrp	x0, 417000 <config_file>
  40277c:	ldr	w0, [x0, #512]
  402780:	str	w0, [sp, #744]
  402784:	add	x1, sp, #0x518
  402788:	add	x0, sp, #0x68
  40278c:	bl	403f30 <scsi_std_inquiry>
  402790:	cbz	w0, 4027a0 <main+0x16c>
  402794:	tbz	w0, #31, 402964 <main+0x330>
  402798:	mov	w20, #0x1                   	// #1
  40279c:	b	402cf0 <main+0x6bc>
  4027a0:	stp	x21, x22, [sp, #32]
  4027a4:	stp	x23, x24, [sp, #48]
  4027a8:	str	x25, [sp, #64]
  4027ac:	mov	x2, #0x100                 	// #256
  4027b0:	adrp	x1, 417000 <config_file>
  4027b4:	add	x1, x1, #0x398
  4027b8:	add	x0, sp, #0x68
  4027bc:	bl	404c44 <udev_util_encode_string>
  4027c0:	add	x20, sp, #0x71
  4027c4:	mov	x2, #0x100                 	// #256
  4027c8:	adrp	x1, 417000 <config_file>
  4027cc:	add	x1, x1, #0x230
  4027d0:	mov	x0, x20
  4027d4:	bl	404c44 <udev_util_encode_string>
  4027d8:	adrp	x19, 417000 <config_file>
  4027dc:	add	x19, x19, #0x498
  4027e0:	mov	x2, #0x3f                  	// #63
  4027e4:	mov	x1, x19
  4027e8:	add	x0, sp, #0x68
  4027ec:	bl	4049c0 <util_replace_whitespace>
  4027f0:	mov	x1, #0x0                   	// #0
  4027f4:	mov	x0, x19
  4027f8:	bl	404aec <util_replace_chars>
  4027fc:	adrp	x19, 417000 <config_file>
  402800:	add	x19, x19, #0x330
  402804:	mov	x2, #0x3f                  	// #63
  402808:	mov	x1, x19
  40280c:	mov	x0, x20
  402810:	bl	4049c0 <util_replace_whitespace>
  402814:	mov	x1, #0x0                   	// #0
  402818:	mov	x0, x19
  40281c:	bl	404aec <util_replace_chars>
  402820:	add	x19, sp, #0x87
  402824:	mov	w2, #0x0                   	// #0
  402828:	add	x1, sp, #0x60
  40282c:	mov	x0, x19
  402830:	bl	401a80 <strtoul@plt>
  402834:	ldr	x1, [sp, #96]
  402838:	cmp	x1, x19
  40283c:	b.eq	402934 <main+0x300>  // b.none
  402840:	cmp	w0, #0x5
  402844:	b.eq	402940 <main+0x30c>  // b.none
  402848:	b.gt	40290c <main+0x2d8>
  40284c:	cmp	w0, #0x1
  402850:	b.eq	40294c <main+0x318>  // b.none
  402854:	cmp	w0, #0x4
  402858:	b.ne	402868 <main+0x234>  // b.any
  40285c:	adrp	x2, 405000 <_fini+0x324>
  402860:	add	x2, x2, #0x130
  402864:	b	402880 <main+0x24c>
  402868:	adrp	x2, 405000 <_fini+0x324>
  40286c:	add	x1, x2, #0x138
  402870:	adrp	x2, 405000 <_fini+0x324>
  402874:	add	x2, x2, #0x128
  402878:	cmp	w0, #0x0
  40287c:	csel	x2, x2, x1, ne  // ne = any
  402880:	mov	x1, #0x10                  	// #16
  402884:	adrp	x0, 417000 <config_file>
  402888:	add	x0, x0, #0x388
  40288c:	bl	401870 <strscpy@plt>
  402890:	adrp	x19, 417000 <config_file>
  402894:	add	x19, x19, #0x378
  402898:	mov	x2, #0xf                   	// #15
  40289c:	mov	x1, x19
  4028a0:	add	x0, sp, #0x82
  4028a4:	bl	4049c0 <util_replace_whitespace>
  4028a8:	mov	x1, #0x0                   	// #0
  4028ac:	mov	x0, x19
  4028b0:	bl	404aec <util_replace_chars>
  4028b4:	str	xzr, [sp, #96]
  4028b8:	adrp	x0, 417000 <config_file>
  4028bc:	ldrb	w20, [x0, #545]
  4028c0:	adrp	x0, 417000 <config_file>
  4028c4:	ldr	w24, [x0, #548]
  4028c8:	add	x3, sp, #0x60
  4028cc:	add	x2, sp, #0x54
  4028d0:	adrp	x1, 417000 <config_file>
  4028d4:	add	x1, x1, #0x330
  4028d8:	adrp	x0, 417000 <config_file>
  4028dc:	add	x0, x0, #0x498
  4028e0:	bl	402158 <get_file_options>
  4028e4:	mov	w21, w0
  4028e8:	adrp	x0, 417000 <config_file>
  4028ec:	mov	w1, #0x1                   	// #1
  4028f0:	str	w1, [x0, #528]
  4028f4:	adrp	x23, 405000 <_fini+0x324>
  4028f8:	add	x23, x23, #0x3c0
  4028fc:	adrp	x22, 405000 <_fini+0x324>
  402900:	add	x22, x22, #0x170
  402904:	mov	w25, w1
  402908:	b	402a40 <main+0x40c>
  40290c:	cmp	w0, #0xe
  402910:	b.eq	402958 <main+0x324>  // b.none
  402914:	and	w0, w0, #0xfffffff7
  402918:	adrp	x2, 405000 <_fini+0x324>
  40291c:	add	x1, x2, #0x130
  402920:	adrp	x2, 405000 <_fini+0x324>
  402924:	add	x2, x2, #0x128
  402928:	cmp	w0, #0x7
  40292c:	csel	x2, x2, x1, ne  // ne = any
  402930:	b	402880 <main+0x24c>
  402934:	adrp	x2, 405000 <_fini+0x324>
  402938:	add	x2, x2, #0x128
  40293c:	b	402880 <main+0x24c>
  402940:	adrp	x2, 405000 <_fini+0x324>
  402944:	add	x2, x2, #0x140
  402948:	b	402880 <main+0x24c>
  40294c:	adrp	x2, 405000 <_fini+0x324>
  402950:	add	x2, x2, #0x148
  402954:	b	402880 <main+0x24c>
  402958:	adrp	x2, 405000 <_fini+0x324>
  40295c:	add	x2, x2, #0x138
  402960:	b	402880 <main+0x24c>
  402964:	stp	x21, x22, [sp, #32]
  402968:	stp	x23, x24, [sp, #48]
  40296c:	str	x25, [sp, #64]
  402970:	b	4028b4 <main+0x280>
  402974:	adrp	x0, 417000 <config_file>
  402978:	ldr	x19, [x0, #536]
  40297c:	adrp	x1, 405000 <_fini+0x324>
  402980:	add	x1, x1, #0x0
  402984:	mov	x0, x19
  402988:	bl	401a90 <strcmp@plt>
  40298c:	cbz	w0, 402ac0 <main+0x48c>
  402990:	adrp	x1, 405000 <_fini+0x324>
  402994:	add	x1, x1, #0x8
  402998:	mov	x0, x19
  40299c:	bl	401a90 <strcmp@plt>
  4029a0:	cbz	w0, 402ac8 <main+0x494>
  4029a4:	adrp	x1, 405000 <_fini+0x324>
  4029a8:	add	x1, x1, #0x10
  4029ac:	mov	x0, x19
  4029b0:	bl	401a90 <strcmp@plt>
  4029b4:	cbnz	w0, 4029c0 <main+0x38c>
  4029b8:	mov	w24, #0xffffff7d            	// #-131
  4029bc:	b	402a40 <main+0x40c>
  4029c0:	mov	w0, #0x1                   	// #1
  4029c4:	bl	401bf0 <log_get_max_level_realm@plt>
  4029c8:	cmp	w0, #0x2
  4029cc:	b.le	402a90 <main+0x45c>
  4029d0:	mov	x6, x19
  4029d4:	adrp	x5, 405000 <_fini+0x324>
  4029d8:	add	x5, x5, #0x20
  4029dc:	adrp	x4, 405000 <_fini+0x324>
  4029e0:	add	x4, x4, #0x3a8
  4029e4:	mov	w3, #0x1ad                 	// #429
  4029e8:	adrp	x2, 405000 <_fini+0x324>
  4029ec:	add	x2, x2, #0x3b
  4029f0:	mov	w1, #0x0                   	// #0
  4029f4:	mov	w0, #0x403                 	// #1027
  4029f8:	bl	401a60 <log_internal_realm@plt>
  4029fc:	b	402a90 <main+0x45c>
  402a00:	mov	w7, w19
  402a04:	mov	w6, w19
  402a08:	adrp	x5, 405000 <_fini+0x324>
  402a0c:	add	x5, x5, #0x178
  402a10:	adrp	x4, 405000 <_fini+0x324>
  402a14:	add	x4, x4, #0x3a8
  402a18:	mov	w3, #0x1b3                 	// #435
  402a1c:	adrp	x2, 405000 <_fini+0x324>
  402a20:	add	x2, x2, #0x3b
  402a24:	mov	w1, #0x0                   	// #0
  402a28:	mov	w0, #0x403                 	// #1027
  402a2c:	bl	401a60 <log_internal_realm@plt>
  402a30:	b	402a90 <main+0x45c>
  402a34:	mov	w20, w25
  402a38:	b	402a40 <main+0x40c>
  402a3c:	mov	w20, w21
  402a40:	cbnz	w21, 402a90 <main+0x45c>
  402a44:	mov	x4, #0x0                   	// #0
  402a48:	mov	x3, x23
  402a4c:	mov	x2, x22
  402a50:	ldr	x1, [sp, #96]
  402a54:	ldr	w0, [sp, #84]
  402a58:	bl	401980 <getopt_long@plt>
  402a5c:	mov	w19, w0
  402a60:	cmn	w0, #0x1
  402a64:	b.eq	402a90 <main+0x45c>  // b.none
  402a68:	cmp	w0, #0x67
  402a6c:	b.eq	402a34 <main+0x400>  // b.none
  402a70:	cmp	w0, #0x70
  402a74:	b.eq	402974 <main+0x340>  // b.none
  402a78:	cmp	w0, #0x62
  402a7c:	b.eq	402a3c <main+0x408>  // b.none
  402a80:	mov	w0, #0x1                   	// #1
  402a84:	bl	401bf0 <log_get_max_level_realm@plt>
  402a88:	cmp	w0, #0x2
  402a8c:	b.gt	402a00 <main+0x3cc>
  402a90:	ldr	x0, [sp, #96]
  402a94:	cbz	x0, 402aa8 <main+0x474>
  402a98:	ldr	x0, [x0]
  402a9c:	bl	401b00 <free@plt>
  402aa0:	ldr	x0, [sp, #96]
  402aa4:	bl	401b00 <free@plt>
  402aa8:	cbnz	w20, 402ad0 <main+0x49c>
  402aac:	mov	w20, #0x1                   	// #1
  402ab0:	ldp	x21, x22, [sp, #32]
  402ab4:	ldp	x23, x24, [sp, #48]
  402ab8:	ldr	x25, [sp, #64]
  402abc:	b	402cf0 <main+0x6bc>
  402ac0:	mov	w24, #0x80                  	// #128
  402ac4:	b	402a40 <main+0x40c>
  402ac8:	mov	w24, #0x83                  	// #131
  402acc:	b	402a40 <main+0x40c>
  402ad0:	mov	w3, #0x100                 	// #256
  402ad4:	mov	w2, w24
  402ad8:	add	x1, sp, #0x518
  402adc:	add	x0, sp, #0x68
  402ae0:	bl	4040f0 <scsi_get_serial>
  402ae4:	adrp	x0, 417000 <config_file>
  402ae8:	ldrb	w0, [x0, #553]
  402aec:	cbnz	w0, 402b20 <main+0x4ec>
  402af0:	ldrb	w0, [sp, #232]
  402af4:	cbz	w0, 402d3c <main+0x708>
  402af8:	adrp	x0, 417000 <config_file>
  402afc:	ldrb	w0, [x0, #880]
  402b00:	cbnz	w0, 402cb4 <main+0x680>
  402b04:	add	x0, sp, #0xe8
  402b08:	bl	401b10 <puts@plt>
  402b0c:	mov	w20, #0x0                   	// #0
  402b10:	ldp	x21, x22, [sp, #32]
  402b14:	ldp	x23, x24, [sp, #48]
  402b18:	ldr	x25, [sp, #64]
  402b1c:	b	402cf0 <main+0x6bc>
  402b20:	adrp	x0, 405000 <_fini+0x324>
  402b24:	add	x0, x0, #0x1a0
  402b28:	bl	401b10 <puts@plt>
  402b2c:	adrp	x1, 417000 <config_file>
  402b30:	add	x1, x1, #0x498
  402b34:	adrp	x0, 405000 <_fini+0x324>
  402b38:	add	x0, x0, #0x1b0
  402b3c:	bl	401b40 <printf@plt>
  402b40:	adrp	x1, 417000 <config_file>
  402b44:	add	x1, x1, #0x398
  402b48:	adrp	x0, 405000 <_fini+0x324>
  402b4c:	add	x0, x0, #0x1c0
  402b50:	bl	401b40 <printf@plt>
  402b54:	adrp	x1, 417000 <config_file>
  402b58:	add	x1, x1, #0x330
  402b5c:	adrp	x0, 405000 <_fini+0x324>
  402b60:	add	x0, x0, #0x1d8
  402b64:	bl	401b40 <printf@plt>
  402b68:	adrp	x1, 417000 <config_file>
  402b6c:	add	x1, x1, #0x230
  402b70:	adrp	x0, 405000 <_fini+0x324>
  402b74:	add	x0, x0, #0x1e8
  402b78:	bl	401b40 <printf@plt>
  402b7c:	adrp	x1, 417000 <config_file>
  402b80:	add	x1, x1, #0x378
  402b84:	adrp	x0, 405000 <_fini+0x324>
  402b88:	add	x0, x0, #0x200
  402b8c:	bl	401b40 <printf@plt>
  402b90:	adrp	x1, 417000 <config_file>
  402b94:	add	x1, x1, #0x388
  402b98:	adrp	x0, 405000 <_fini+0x324>
  402b9c:	add	x0, x0, #0x210
  402ba0:	bl	401b40 <printf@plt>
  402ba4:	ldrb	w0, [sp, #232]
  402ba8:	cbnz	w0, 402bd8 <main+0x5a4>
  402bac:	ldrb	w0, [sp, #1004]
  402bb0:	cbnz	w0, 402c34 <main+0x600>
  402bb4:	ldrb	w0, [sp, #1038]
  402bb8:	cbnz	w0, 402c8c <main+0x658>
  402bbc:	ldrb	w0, [sp, #748]
  402bc0:	cbnz	w0, 402ca0 <main+0x66c>
  402bc4:	mov	w20, #0x0                   	// #0
  402bc8:	ldp	x21, x22, [sp, #32]
  402bcc:	ldp	x23, x24, [sp, #48]
  402bd0:	ldr	x25, [sp, #64]
  402bd4:	b	402cf0 <main+0x6bc>
  402bd8:	mov	x2, #0xff                  	// #255
  402bdc:	add	x1, sp, #0x418
  402be0:	add	x0, sp, #0xe8
  402be4:	bl	4049c0 <util_replace_whitespace>
  402be8:	mov	x1, #0x0                   	// #0
  402bec:	add	x0, sp, #0x418
  402bf0:	bl	404aec <util_replace_chars>
  402bf4:	add	x1, sp, #0x418
  402bf8:	adrp	x0, 405000 <_fini+0x324>
  402bfc:	add	x0, x0, #0x220
  402c00:	bl	401b40 <printf@plt>
  402c04:	mov	x2, #0xff                  	// #255
  402c08:	add	x1, sp, #0x418
  402c0c:	add	x0, sp, #0x1e8
  402c10:	bl	4049c0 <util_replace_whitespace>
  402c14:	mov	x1, #0x0                   	// #0
  402c18:	add	x0, sp, #0x418
  402c1c:	bl	404aec <util_replace_chars>
  402c20:	add	x1, sp, #0x418
  402c24:	adrp	x0, 405000 <_fini+0x324>
  402c28:	add	x0, x0, #0x230
  402c2c:	bl	401b40 <printf@plt>
  402c30:	b	402bac <main+0x578>
  402c34:	add	x1, sp, #0x3ec
  402c38:	adrp	x0, 405000 <_fini+0x324>
  402c3c:	add	x0, x0, #0x248
  402c40:	bl	401b40 <printf@plt>
  402c44:	ldrb	w0, [sp, #1021]
  402c48:	cbz	w0, 402c78 <main+0x644>
  402c4c:	add	x19, sp, #0x3fd
  402c50:	mov	x1, x19
  402c54:	adrp	x0, 405000 <_fini+0x324>
  402c58:	add	x0, x0, #0x258
  402c5c:	bl	401b40 <printf@plt>
  402c60:	mov	x2, x19
  402c64:	add	x1, sp, #0x3ec
  402c68:	adrp	x0, 405000 <_fini+0x324>
  402c6c:	add	x0, x0, #0x278
  402c70:	bl	401b40 <printf@plt>
  402c74:	b	402bb4 <main+0x580>
  402c78:	add	x1, sp, #0x3ec
  402c7c:	adrp	x0, 405000 <_fini+0x324>
  402c80:	add	x0, x0, #0x298
  402c84:	bl	401b40 <printf@plt>
  402c88:	b	402bb4 <main+0x580>
  402c8c:	add	x1, sp, #0x40e
  402c90:	adrp	x0, 405000 <_fini+0x324>
  402c94:	add	x0, x0, #0x2b8
  402c98:	bl	401b40 <printf@plt>
  402c9c:	b	402bbc <main+0x588>
  402ca0:	add	x1, sp, #0x2ec
  402ca4:	adrp	x0, 405000 <_fini+0x324>
  402ca8:	add	x0, x0, #0x2d0
  402cac:	bl	401b40 <printf@plt>
  402cb0:	b	402bc4 <main+0x590>
  402cb4:	mov	x2, #0xff                  	// #255
  402cb8:	add	x1, sp, #0x418
  402cbc:	add	x0, sp, #0xe8
  402cc0:	bl	4049c0 <util_replace_whitespace>
  402cc4:	mov	x1, #0x0                   	// #0
  402cc8:	add	x0, sp, #0x418
  402ccc:	bl	404aec <util_replace_chars>
  402cd0:	add	x0, sp, #0x418
  402cd4:	bl	401b10 <puts@plt>
  402cd8:	mov	w20, #0x0                   	// #0
  402cdc:	ldp	x21, x22, [sp, #32]
  402ce0:	ldp	x23, x24, [sp, #48]
  402ce4:	ldr	x25, [sp, #64]
  402ce8:	b	402cf0 <main+0x6bc>
  402cec:	mov	w20, #0x1                   	// #1
  402cf0:	ldr	x0, [sp, #88]
  402cf4:	cbz	x0, 402d08 <main+0x6d4>
  402cf8:	ldr	x0, [x0]
  402cfc:	bl	401b00 <free@plt>
  402d00:	ldr	x0, [sp, #88]
  402d04:	bl	401b00 <free@plt>
  402d08:	bl	4018b0 <log_close@plt>
  402d0c:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  402d10:	ldr	x1, [sp, #1816]
  402d14:	ldr	x0, [x0, #3016]
  402d18:	eor	x0, x1, x0
  402d1c:	cbnz	x0, 402d4c <main+0x718>
  402d20:	mov	w0, w20
  402d24:	ldp	x19, x20, [sp, #16]
  402d28:	ldp	x29, x30, [sp]
  402d2c:	add	sp, sp, #0x720
  402d30:	ret
  402d34:	mov	w20, #0x2                   	// #2
  402d38:	b	402cf0 <main+0x6bc>
  402d3c:	ldp	x21, x22, [sp, #32]
  402d40:	ldp	x23, x24, [sp, #48]
  402d44:	ldr	x25, [sp, #64]
  402d48:	b	402cf0 <main+0x6bc>
  402d4c:	stp	x21, x22, [sp, #32]
  402d50:	stp	x23, x24, [sp, #48]
  402d54:	str	x25, [sp, #64]
  402d58:	bl	401a10 <__stack_chk_fail@plt>

0000000000402d5c <sg_err_category_new>:
  402d5c:	mov	w6, w0
  402d60:	and	w1, w0, #0x7e
  402d64:	orr	w0, w2, w3
  402d68:	orr	w0, w1, w0
  402d6c:	cbz	w0, 402df4 <sg_err_category_new+0x98>
  402d70:	mov	w0, #0x5e                  	// #94
  402d74:	and	w6, w6, w0
  402d78:	cmp	w6, #0x2
  402d7c:	b.eq	402db0 <sg_err_category_new+0x54>  // b.none
  402d80:	and	w0, w3, #0xf
  402d84:	cmp	w0, #0x8
  402d88:	b.eq	402db0 <sg_err_category_new+0x54>  // b.none
  402d8c:	sub	w2, w2, #0x1
  402d90:	mov	w0, #0x3                   	// #3
  402d94:	cmp	w2, #0x2
  402d98:	b.ls	402df4 <sg_err_category_new+0x98>  // b.plast
  402d9c:	cmp	w3, #0x6
  402da0:	mov	w0, #0x63                  	// #99
  402da4:	mov	w1, #0x3                   	// #3
  402da8:	csel	w0, w0, w1, ne  // ne = any
  402dac:	b	402df4 <sg_err_category_new+0x98>
  402db0:	cmp	x4, #0x0
  402db4:	mov	w0, #0x62                  	// #98
  402db8:	ccmp	w5, #0x2, #0x4, ne  // ne = any
  402dbc:	b.le	402df4 <sg_err_category_new+0x98>
  402dc0:	ldrb	w0, [x4]
  402dc4:	and	w1, w0, #0x2
  402dc8:	tbz	w0, #1, 402df8 <sg_err_category_new+0x9c>
  402dcc:	ldrb	w0, [x4, #1]
  402dd0:	and	w0, w0, #0xf
  402dd4:	ldrb	w1, [x4, #2]
  402dd8:	cmp	w0, #0x1
  402ddc:	b.eq	402e30 <sg_err_category_new+0xd4>  // b.none
  402de0:	cmp	w0, #0x6
  402de4:	b.eq	402e10 <sg_err_category_new+0xb4>  // b.none
  402de8:	cmp	w0, #0x5
  402dec:	mov	w1, #0x62                  	// #98
  402df0:	csel	w0, w0, w1, eq  // eq = none
  402df4:	ret
  402df8:	ldrb	w0, [x4, #2]
  402dfc:	and	w0, w0, #0xf
  402e00:	cmp	w5, #0xc
  402e04:	b.le	402dd8 <sg_err_category_new+0x7c>
  402e08:	ldrb	w1, [x4, #12]
  402e0c:	b	402dd8 <sg_err_category_new+0x7c>
  402e10:	mov	w0, #0x1                   	// #1
  402e14:	cmp	w1, #0x28
  402e18:	b.eq	402df4 <sg_err_category_new+0x98>  // b.none
  402e1c:	cmp	w1, #0x29
  402e20:	mov	w0, #0x62                  	// #98
  402e24:	mov	w1, #0x2                   	// #2
  402e28:	csel	w0, w0, w1, ne  // ne = any
  402e2c:	b	402df4 <sg_err_category_new+0x98>
  402e30:	mov	w0, #0x4                   	// #4
  402e34:	b	402df4 <sg_err_category_new+0x98>

0000000000402e38 <scsi_dump_sense>:
  402e38:	sub	sp, sp, #0x50
  402e3c:	stp	x29, x30, [sp, #16]
  402e40:	add	x29, sp, #0x10
  402e44:	stp	x21, x22, [sp, #48]
  402e48:	mov	x22, x0
  402e4c:	cmp	w2, #0x0
  402e50:	b.le	402ea8 <scsi_dump_sense+0x70>
  402e54:	stp	x19, x20, [sp, #32]
  402e58:	stp	x23, x24, [sp, #64]
  402e5c:	mov	x21, x1
  402e60:	mov	w19, w2
  402e64:	ldrb	w20, [x1]
  402e68:	ubfx	x23, x20, #4, #3
  402e6c:	and	w24, w20, #0xf
  402e70:	cmp	w23, #0x7
  402e74:	b.eq	402f08 <scsi_dump_sense+0xd0>  // b.none
  402e78:	cmp	w2, #0x3
  402e7c:	b.le	4030f4 <scsi_dump_sense+0x2bc>
  402e80:	cmp	w20, #0xe
  402e84:	b.hi	4031e8 <scsi_dump_sense+0x3b0>  // b.pmore
  402e88:	mov	w0, #0x1                   	// #1
  402e8c:	bl	401bf0 <log_get_max_level_realm@plt>
  402e90:	mov	w2, #0xffffffff            	// #-1
  402e94:	cmp	w0, #0x6
  402e98:	b.gt	403164 <scsi_dump_sense+0x32c>
  402e9c:	ldp	x19, x20, [sp, #32]
  402ea0:	ldp	x23, x24, [sp, #64]
  402ea4:	b	402ebc <scsi_dump_sense+0x84>
  402ea8:	mov	w0, #0x1                   	// #1
  402eac:	bl	401bf0 <log_get_max_level_realm@plt>
  402eb0:	mov	w2, #0xffffffea            	// #-22
  402eb4:	cmp	w0, #0x6
  402eb8:	b.gt	402ed0 <scsi_dump_sense+0x98>
  402ebc:	mov	w0, w2
  402ec0:	ldp	x21, x22, [sp, #48]
  402ec4:	ldp	x29, x30, [sp, #16]
  402ec8:	add	sp, sp, #0x50
  402ecc:	ret
  402ed0:	add	x6, x22, #0x40
  402ed4:	adrp	x5, 405000 <_fini+0x324>
  402ed8:	add	x5, x5, #0x540
  402edc:	adrp	x4, 405000 <_fini+0x324>
  402ee0:	add	x4, x4, #0x910
  402ee4:	mov	w3, #0xab                  	// #171
  402ee8:	adrp	x2, 405000 <_fini+0x324>
  402eec:	add	x2, x2, #0x55b
  402ef0:	mov	w1, #0x16                  	// #22
  402ef4:	movk	w1, #0x4000, lsl #16
  402ef8:	mov	w0, #0x407                 	// #1031
  402efc:	bl	401a60 <log_internal_realm@plt>
  402f00:	mov	w2, w0
  402f04:	b	402ebc <scsi_dump_sense+0x84>
  402f08:	ldrb	w23, [x1, #7]
  402f0c:	add	w23, w23, #0x8
  402f10:	cmp	w2, w23
  402f14:	b.lt	402f58 <scsi_dump_sense+0x120>  // b.tstop
  402f18:	tst	w20, #0xe
  402f1c:	b.ne	402fc4 <scsi_dump_sense+0x18c>  // b.any
  402f20:	cmp	w23, #0xd
  402f24:	b.le	402fe4 <scsi_dump_sense+0x1ac>
  402f28:	ldrb	w19, [x1, #2]
  402f2c:	and	w19, w19, #0xf
  402f30:	ldrb	w20, [x1, #12]
  402f34:	ldrb	w21, [x1, #13]
  402f38:	mov	w0, #0x1                   	// #1
  402f3c:	bl	401bf0 <log_get_max_level_realm@plt>
  402f40:	mov	w2, #0xffffffff            	// #-1
  402f44:	cmp	w0, #0x6
  402f48:	b.gt	4030ac <scsi_dump_sense+0x274>
  402f4c:	ldp	x19, x20, [sp, #32]
  402f50:	ldp	x23, x24, [sp, #64]
  402f54:	b	402ebc <scsi_dump_sense+0x84>
  402f58:	mov	w0, #0x1                   	// #1
  402f5c:	bl	401bf0 <log_get_max_level_realm@plt>
  402f60:	mov	w2, #0xffffffea            	// #-22
  402f64:	cmp	w0, #0x6
  402f68:	b.gt	402f78 <scsi_dump_sense+0x140>
  402f6c:	ldp	x19, x20, [sp, #32]
  402f70:	ldp	x23, x24, [sp, #64]
  402f74:	b	402ebc <scsi_dump_sense+0x84>
  402f78:	sub	w23, w23, w19
  402f7c:	str	w23, [sp]
  402f80:	mov	w7, w19
  402f84:	add	x6, x22, #0x40
  402f88:	adrp	x5, 405000 <_fini+0x324>
  402f8c:	add	x5, x5, #0x580
  402f90:	adrp	x4, 405000 <_fini+0x324>
  402f94:	add	x4, x4, #0x910
  402f98:	mov	w3, #0xb8                  	// #184
  402f9c:	adrp	x2, 405000 <_fini+0x324>
  402fa0:	add	x2, x2, #0x55b
  402fa4:	mov	w1, #0x16                  	// #22
  402fa8:	movk	w1, #0x4000, lsl #16
  402fac:	mov	w0, #0x407                 	// #1031
  402fb0:	bl	401a60 <log_internal_realm@plt>
  402fb4:	mov	w2, w0
  402fb8:	ldp	x19, x20, [sp, #32]
  402fbc:	ldp	x23, x24, [sp, #64]
  402fc0:	b	402ebc <scsi_dump_sense+0x84>
  402fc4:	sub	w0, w24, #0x2
  402fc8:	cmp	w0, #0x1
  402fcc:	b.hi	403048 <scsi_dump_sense+0x210>  // b.pmore
  402fd0:	ldrb	w19, [x1, #1]
  402fd4:	and	w19, w19, #0xf
  402fd8:	ldrb	w20, [x1, #2]
  402fdc:	ldrb	w21, [x1, #3]
  402fe0:	b	402f38 <scsi_dump_sense+0x100>
  402fe4:	mov	w0, #0x1                   	// #1
  402fe8:	bl	401bf0 <log_get_max_level_realm@plt>
  402fec:	mov	w2, #0xffffffea            	// #-22
  402ff0:	cmp	w0, #0x6
  402ff4:	b.gt	403004 <scsi_dump_sense+0x1cc>
  402ff8:	ldp	x19, x20, [sp, #32]
  402ffc:	ldp	x23, x24, [sp, #64]
  403000:	b	402ebc <scsi_dump_sense+0x84>
  403004:	mov	w7, w23
  403008:	add	x6, x22, #0x40
  40300c:	adrp	x5, 405000 <_fini+0x324>
  403010:	add	x5, x5, #0x5b8
  403014:	adrp	x4, 405000 <_fini+0x324>
  403018:	add	x4, x4, #0x910
  40301c:	mov	w3, #0xc3                  	// #195
  403020:	adrp	x2, 405000 <_fini+0x324>
  403024:	add	x2, x2, #0x55b
  403028:	mov	w1, #0x16                  	// #22
  40302c:	movk	w1, #0x4000, lsl #16
  403030:	mov	w0, #0x407                 	// #1031
  403034:	bl	401a60 <log_internal_realm@plt>
  403038:	mov	w2, w0
  40303c:	ldp	x19, x20, [sp, #32]
  403040:	ldp	x23, x24, [sp, #64]
  403044:	b	402ebc <scsi_dump_sense+0x84>
  403048:	mov	w0, #0x1                   	// #1
  40304c:	bl	401bf0 <log_get_max_level_realm@plt>
  403050:	cmp	w0, #0x6
  403054:	b.gt	403068 <scsi_dump_sense+0x230>
  403058:	mov	w2, #0xffffffea            	// #-22
  40305c:	ldp	x19, x20, [sp, #32]
  403060:	ldp	x23, x24, [sp, #64]
  403064:	b	402ebc <scsi_dump_sense+0x84>
  403068:	mov	w7, w24
  40306c:	add	x6, x22, #0x40
  403070:	adrp	x5, 405000 <_fini+0x324>
  403074:	add	x5, x5, #0x5e0
  403078:	adrp	x4, 405000 <_fini+0x324>
  40307c:	add	x4, x4, #0x910
  403080:	mov	w3, #0xce                  	// #206
  403084:	adrp	x2, 405000 <_fini+0x324>
  403088:	add	x2, x2, #0x55b
  40308c:	mov	w1, #0x16                  	// #22
  403090:	movk	w1, #0x4000, lsl #16
  403094:	mov	w0, #0x407                 	// #1031
  403098:	bl	401a60 <log_internal_realm@plt>
  40309c:	mov	w2, w0
  4030a0:	ldp	x19, x20, [sp, #32]
  4030a4:	ldp	x23, x24, [sp, #64]
  4030a8:	b	402ebc <scsi_dump_sense+0x84>
  4030ac:	str	w21, [sp, #8]
  4030b0:	str	w20, [sp]
  4030b4:	mov	w7, w19
  4030b8:	add	x6, x22, #0x40
  4030bc:	adrp	x5, 405000 <_fini+0x324>
  4030c0:	add	x5, x5, #0x600
  4030c4:	adrp	x4, 405000 <_fini+0x324>
  4030c8:	add	x4, x4, #0x910
  4030cc:	mov	w3, #0xd2                  	// #210
  4030d0:	adrp	x2, 405000 <_fini+0x324>
  4030d4:	add	x2, x2, #0x55b
  4030d8:	mov	w1, #0x0                   	// #0
  4030dc:	mov	w0, #0x407                 	// #1031
  4030e0:	bl	401a60 <log_internal_realm@plt>
  4030e4:	mov	w2, #0xffffffff            	// #-1
  4030e8:	ldp	x19, x20, [sp, #32]
  4030ec:	ldp	x23, x24, [sp, #64]
  4030f0:	b	402ebc <scsi_dump_sense+0x84>
  4030f4:	mov	w0, #0x1                   	// #1
  4030f8:	bl	401bf0 <log_get_max_level_realm@plt>
  4030fc:	mov	w2, #0xffffffea            	// #-22
  403100:	cmp	w0, #0x6
  403104:	b.gt	403114 <scsi_dump_sense+0x2dc>
  403108:	ldp	x19, x20, [sp, #32]
  40310c:	ldp	x23, x24, [sp, #64]
  403110:	b	402ebc <scsi_dump_sense+0x84>
  403114:	mov	w0, #0x4                   	// #4
  403118:	sub	w0, w0, w19
  40311c:	str	w0, [sp]
  403120:	mov	w7, w19
  403124:	add	x6, x22, #0x40
  403128:	adrp	x5, 405000 <_fini+0x324>
  40312c:	add	x5, x5, #0x580
  403130:	adrp	x4, 405000 <_fini+0x324>
  403134:	add	x4, x4, #0x910
  403138:	mov	w3, #0xd6                  	// #214
  40313c:	adrp	x2, 405000 <_fini+0x324>
  403140:	add	x2, x2, #0x55b
  403144:	mov	w1, #0x16                  	// #22
  403148:	movk	w1, #0x4000, lsl #16
  40314c:	mov	w0, #0x407                 	// #1031
  403150:	bl	401a60 <log_internal_realm@plt>
  403154:	mov	w2, w0
  403158:	ldp	x19, x20, [sp, #32]
  40315c:	ldp	x23, x24, [sp, #64]
  403160:	b	402ebc <scsi_dump_sense+0x84>
  403164:	mov	w7, w24
  403168:	add	x6, x22, #0x40
  40316c:	adrp	x5, 405000 <_fini+0x324>
  403170:	add	x5, x5, #0x628
  403174:	adrp	x4, 405000 <_fini+0x324>
  403178:	add	x4, x4, #0x910
  40317c:	mov	w3, #0xdc                  	// #220
  403180:	adrp	x2, 405000 <_fini+0x324>
  403184:	add	x2, x2, #0x55b
  403188:	mov	w1, #0x0                   	// #0
  40318c:	mov	w0, #0x407                 	// #1031
  403190:	bl	401a60 <log_internal_realm@plt>
  403194:	mov	w0, #0x1                   	// #1
  403198:	bl	401bf0 <log_get_max_level_realm@plt>
  40319c:	cmp	w0, #0x6
  4031a0:	b.le	403244 <scsi_dump_sense+0x40c>
  4031a4:	str	w24, [sp]
  4031a8:	mov	w7, w23
  4031ac:	add	x6, x22, #0x40
  4031b0:	adrp	x5, 405000 <_fini+0x324>
  4031b4:	add	x5, x5, #0x658
  4031b8:	adrp	x4, 405000 <_fini+0x324>
  4031bc:	add	x4, x4, #0x910
  4031c0:	mov	w3, #0xe0                  	// #224
  4031c4:	adrp	x2, 405000 <_fini+0x324>
  4031c8:	add	x2, x2, #0x55b
  4031cc:	mov	w1, #0x0                   	// #0
  4031d0:	mov	w0, #0x407                 	// #1031
  4031d4:	bl	401a60 <log_internal_realm@plt>
  4031d8:	mov	w2, #0xffffffff            	// #-1
  4031dc:	ldp	x19, x20, [sp, #32]
  4031e0:	ldp	x23, x24, [sp, #64]
  4031e4:	b	402ebc <scsi_dump_sense+0x84>
  4031e8:	mov	w0, #0x1                   	// #1
  4031ec:	bl	401bf0 <log_get_max_level_realm@plt>
  4031f0:	mov	w2, #0xffffffff            	// #-1
  4031f4:	cmp	w0, #0x6
  4031f8:	b.gt	403208 <scsi_dump_sense+0x3d0>
  4031fc:	ldp	x19, x20, [sp, #32]
  403200:	ldp	x23, x24, [sp, #64]
  403204:	b	402ebc <scsi_dump_sense+0x84>
  403208:	ldrb	w0, [x21, #2]
  40320c:	str	w0, [sp]
  403210:	mov	w7, w20
  403214:	add	x6, x22, #0x40
  403218:	adrp	x5, 405000 <_fini+0x324>
  40321c:	add	x5, x5, #0x640
  403220:	adrp	x4, 405000 <_fini+0x324>
  403224:	add	x4, x4, #0x910
  403228:	mov	w3, #0xde                  	// #222
  40322c:	adrp	x2, 405000 <_fini+0x324>
  403230:	add	x2, x2, #0x55b
  403234:	mov	w1, #0x0                   	// #0
  403238:	mov	w0, #0x407                 	// #1031
  40323c:	bl	401a60 <log_internal_realm@plt>
  403240:	b	403194 <scsi_dump_sense+0x35c>
  403244:	mov	w2, #0xffffffff            	// #-1
  403248:	ldp	x19, x20, [sp, #32]
  40324c:	ldp	x23, x24, [sp, #64]
  403250:	b	402ebc <scsi_dump_sense+0x84>

0000000000403254 <scsi_inquiry>:
  403254:	sub	sp, sp, #0x1d0
  403258:	stp	x29, x30, [sp, #32]
  40325c:	add	x29, sp, #0x20
  403260:	stp	x19, x20, [sp, #48]
  403264:	stp	x21, x22, [sp, #64]
  403268:	stp	x23, x24, [sp, #80]
  40326c:	stp	x25, x26, [sp, #96]
  403270:	stp	x27, x28, [sp, #112]
  403274:	mov	x21, x0
  403278:	mov	w23, w1
  40327c:	and	w25, w2, #0xff
  403280:	and	w26, w3, #0xff
  403284:	mov	w20, w5
  403288:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  40328c:	ldr	x1, [x0, #3016]
  403290:	str	x1, [sp, #456]
  403294:	mov	x1, #0x0                   	// #0
  403298:	mov	w0, #0x12                  	// #18
  40329c:	strb	w0, [sp, #416]
  4032a0:	strb	w25, [sp, #417]
  4032a4:	strb	w26, [sp, #418]
  4032a8:	strb	wzr, [sp, #419]
  4032ac:	strb	w5, [sp, #420]
  4032b0:	strb	wzr, [sp, #421]
  4032b4:	cmp	w5, #0xfe
  4032b8:	b.hi	403400 <scsi_inquiry+0x1ac>  // b.pmore
  4032bc:	mov	x22, x4
  4032c0:	mov	w27, #0x3                   	// #3
  4032c4:	add	x24, sp, #0x1a0
  4032c8:	add	x0, sp, #0xa8
  4032cc:	str	x0, [sp, #128]
  4032d0:	add	x0, sp, #0x100
  4032d4:	str	x0, [sp, #136]
  4032d8:	ldr	w0, [x21, #640]
  4032dc:	cmp	w0, #0x4
  4032e0:	b.eq	40344c <scsi_inquiry+0x1f8>  // b.none
  4032e4:	stp	xzr, xzr, [sp, #176]
  4032e8:	stp	xzr, xzr, [sp, #208]
  4032ec:	stp	xzr, xzr, [sp, #224]
  4032f0:	stp	xzr, xzr, [sp, #240]
  4032f4:	mov	w0, #0x53                  	// #83
  4032f8:	str	w0, [sp, #168]
  4032fc:	mov	w0, #0x6                   	// #6
  403300:	strb	w0, [sp, #176]
  403304:	mov	w0, #0x20                  	// #32
  403308:	strb	w0, [sp, #177]
  40330c:	mov	w0, #0xfffffffd            	// #-3
  403310:	str	w0, [sp, #172]
  403314:	str	w20, [sp, #180]
  403318:	str	x22, [sp, #184]
  40331c:	str	x24, [sp, #192]
  403320:	add	x0, sp, #0x1a8
  403324:	str	x0, [sp, #200]
  403328:	mov	w0, #0x1388                	// #5000
  40332c:	str	w0, [sp, #208]
  403330:	ldr	x19, [sp, #128]
  403334:	mov	x2, x19
  403338:	mov	x1, #0x2285                	// #8837
  40333c:	mov	w0, w23
  403340:	bl	401a70 <ioctl@plt>
  403344:	mov	w28, w0
  403348:	tbnz	w0, #31, 4034a8 <scsi_inquiry+0x254>
  40334c:	ldr	w0, [x21, #640]
  403350:	cmp	w0, #0x4
  403354:	b.eq	403514 <scsi_inquiry+0x2c0>  // b.none
  403358:	ldrb	w28, [x19, #64]
  40335c:	ldrb	w1, [x19, #66]
  403360:	str	w1, [sp, #148]
  403364:	ldrh	w2, [x19, #68]
  403368:	str	w2, [sp, #152]
  40336c:	ldrh	w0, [x19, #70]
  403370:	str	w0, [sp, #156]
  403374:	ldrb	w5, [x19, #67]
  403378:	ldr	x4, [x19, #32]
  40337c:	mov	w3, w0
  403380:	mov	w0, w28
  403384:	bl	402d5c <sg_err_category_new>
  403388:	cmp	w0, #0x5
  40338c:	b.eq	403594 <scsi_inquiry+0x340>  // b.none
  403390:	b.gt	40339c <scsi_inquiry+0x148>
  403394:	tst	w0, #0xfffffffb
  403398:	b.eq	403598 <scsi_inquiry+0x344>  // b.none
  40339c:	ldr	x1, [x19, #64]
  4033a0:	mov	x0, #0xffffffffffff00ff    	// #-65281
  4033a4:	movk	x0, #0xff, lsl #16
  4033a8:	tst	x1, x0
  4033ac:	b.eq	40366c <scsi_inquiry+0x418>  // b.none
  4033b0:	mov	w0, #0x1                   	// #1
  4033b4:	bl	401bf0 <log_get_max_level_realm@plt>
  4033b8:	cmp	w0, #0x6
  4033bc:	b.gt	403704 <scsi_inquiry+0x4b0>
  4033c0:	ldrb	w0, [x19, #64]
  4033c4:	cmp	w0, #0x2
  4033c8:	b.ne	403754 <scsi_inquiry+0x500>  // b.any
  4033cc:	ldrb	w2, [x19, #67]
  4033d0:	ldr	x1, [x19, #32]
  4033d4:	mov	x0, x21
  4033d8:	bl	402e38 <scsi_dump_sense>
  4033dc:	mov	w28, w0
  4033e0:	cbz	w28, 403598 <scsi_inquiry+0x344>
  4033e4:	cmp	w28, #0x0
  4033e8:	b.le	403680 <scsi_inquiry+0x42c>
  4033ec:	sub	w27, w27, #0x1
  4033f0:	cmp	w27, #0x0
  4033f4:	b.gt	4032d8 <scsi_inquiry+0x84>
  4033f8:	mov	w28, #0xffffffff            	// #-1
  4033fc:	b	403680 <scsi_inquiry+0x42c>
  403400:	mov	w0, #0x1                   	// #1
  403404:	bl	401bf0 <log_get_max_level_realm@plt>
  403408:	mov	w28, #0xffffffea            	// #-22
  40340c:	cmp	w0, #0x6
  403410:	b.le	40359c <scsi_inquiry+0x348>
  403414:	mov	w6, w20
  403418:	adrp	x5, 405000 <_fini+0x324>
  40341c:	add	x5, x5, #0x688
  403420:	adrp	x4, 405000 <_fini+0x324>
  403424:	add	x4, x4, #0x940
  403428:	mov	w3, #0x11a                 	// #282
  40342c:	adrp	x2, 405000 <_fini+0x324>
  403430:	add	x2, x2, #0x55b
  403434:	mov	w1, #0x16                  	// #22
  403438:	movk	w1, #0x4000, lsl #16
  40343c:	mov	w0, #0x407                 	// #1031
  403440:	bl	401a60 <log_internal_realm@plt>
  403444:	mov	w28, w0
  403448:	b	40359c <scsi_inquiry+0x348>
  40344c:	stp	xzr, xzr, [sp, #256]
  403450:	stp	xzr, xzr, [sp, #272]
  403454:	stp	xzr, xzr, [sp, #288]
  403458:	stp	xzr, xzr, [sp, #304]
  40345c:	stp	xzr, xzr, [sp, #320]
  403460:	stp	xzr, xzr, [sp, #336]
  403464:	stp	xzr, xzr, [sp, #352]
  403468:	stp	xzr, xzr, [sp, #368]
  40346c:	stp	xzr, xzr, [sp, #384]
  403470:	stp	xzr, xzr, [sp, #400]
  403474:	mov	w0, #0x51                  	// #81
  403478:	str	w0, [sp, #256]
  40347c:	mov	w0, #0x6                   	// #6
  403480:	str	w0, [sp, #268]
  403484:	str	x24, [sp, #272]
  403488:	mov	w0, #0x20                  	// #32
  40348c:	str	w0, [sp, #300]
  403490:	add	x0, sp, #0x1a8
  403494:	str	x0, [sp, #304]
  403498:	str	w20, [sp, #324]
  40349c:	str	x22, [sp, #336]
  4034a0:	ldr	x19, [sp, #136]
  4034a4:	b	403334 <scsi_inquiry+0xe0>
  4034a8:	bl	4019f0 <__errno_location@plt>
  4034ac:	ldr	w19, [x0]
  4034b0:	sub	w0, w19, #0x16
  4034b4:	tst	w0, #0xffffffef
  4034b8:	b.eq	4034fc <scsi_inquiry+0x2a8>  // b.none
  4034bc:	mov	w0, #0x1                   	// #1
  4034c0:	bl	401bf0 <log_get_max_level_realm@plt>
  4034c4:	cmp	w0, #0x6
  4034c8:	b.le	40359c <scsi_inquiry+0x348>
  4034cc:	add	x6, x21, #0x40
  4034d0:	adrp	x5, 405000 <_fini+0x324>
  4034d4:	add	x5, x5, #0x6a0
  4034d8:	adrp	x4, 405000 <_fini+0x324>
  4034dc:	add	x4, x4, #0x940
  4034e0:	mov	w3, #0x13e                 	// #318
  4034e4:	adrp	x2, 405000 <_fini+0x324>
  4034e8:	add	x2, x2, #0x55b
  4034ec:	mov	w1, w19
  4034f0:	mov	w0, #0x407                 	// #1031
  4034f4:	bl	401a60 <log_internal_realm@plt>
  4034f8:	b	403680 <scsi_inquiry+0x42c>
  4034fc:	ldr	w0, [x21, #640]
  403500:	cmp	w0, #0x4
  403504:	b.ne	4034bc <scsi_inquiry+0x268>  // b.any
  403508:	mov	w0, #0x3                   	// #3
  40350c:	str	w0, [x21, #640]
  403510:	b	4032d8 <scsi_inquiry+0x84>
  403514:	ldr	w0, [x19, #116]
  403518:	str	w0, [sp, #148]
  40351c:	ldr	w1, [x19, #112]
  403520:	str	w1, [sp, #152]
  403524:	ldr	w28, [x19, #108]
  403528:	ldr	w5, [x19, #132]
  40352c:	ldr	x4, [x19, #48]
  403530:	mov	w3, w28
  403534:	mov	w2, w1
  403538:	mov	w1, #0x0                   	// #0
  40353c:	bl	402d5c <sg_err_category_new>
  403540:	cmp	w0, #0x5
  403544:	b.eq	403594 <scsi_inquiry+0x340>  // b.none
  403548:	b.gt	403554 <scsi_inquiry+0x300>
  40354c:	tst	w0, #0xfffffffb
  403550:	b.eq	403598 <scsi_inquiry+0x344>  // b.none
  403554:	ldr	x0, [x19, #112]
  403558:	cbnz	x0, 403560 <scsi_inquiry+0x30c>
  40355c:	cbz	w28, 4035d4 <scsi_inquiry+0x380>
  403560:	mov	w0, #0x1                   	// #1
  403564:	bl	401bf0 <log_get_max_level_realm@plt>
  403568:	cmp	w0, #0x6
  40356c:	b.gt	403628 <scsi_inquiry+0x3d4>
  403570:	ldr	w0, [x19, #116]
  403574:	cmp	w0, #0x2
  403578:	b.ne	40374c <scsi_inquiry+0x4f8>  // b.any
  40357c:	ldr	w2, [x19, #132]
  403580:	ldr	x1, [x19, #48]
  403584:	mov	x0, x21
  403588:	bl	402e38 <scsi_dump_sense>
  40358c:	mov	w28, w0
  403590:	b	4033e0 <scsi_inquiry+0x18c>
  403594:	strb	wzr, [x22, #1]
  403598:	mov	w28, w20
  40359c:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  4035a0:	ldr	x1, [sp, #456]
  4035a4:	ldr	x0, [x0, #3016]
  4035a8:	eor	x0, x1, x0
  4035ac:	cbnz	x0, 40375c <scsi_inquiry+0x508>
  4035b0:	mov	w0, w28
  4035b4:	ldp	x19, x20, [sp, #48]
  4035b8:	ldp	x21, x22, [sp, #64]
  4035bc:	ldp	x23, x24, [sp, #80]
  4035c0:	ldp	x25, x26, [sp, #96]
  4035c4:	ldp	x27, x28, [sp, #112]
  4035c8:	ldp	x29, x30, [sp, #32]
  4035cc:	add	sp, sp, #0x1d0
  4035d0:	ret
  4035d4:	mov	w0, #0x1                   	// #1
  4035d8:	bl	401bf0 <log_get_max_level_realm@plt>
  4035dc:	cmp	w0, #0x6
  4035e0:	b.gt	4035ec <scsi_inquiry+0x398>
  4035e4:	mov	w28, #0xffffffea            	// #-22
  4035e8:	b	403680 <scsi_inquiry+0x42c>
  4035ec:	adrp	x6, 405000 <_fini+0x324>
  4035f0:	add	x6, x6, #0x8e8
  4035f4:	adrp	x5, 405000 <_fini+0x324>
  4035f8:	add	x5, x5, #0x6b8
  4035fc:	adrp	x4, 405000 <_fini+0x324>
  403600:	add	x4, x4, #0x930
  403604:	mov	w3, #0x100                 	// #256
  403608:	adrp	x2, 405000 <_fini+0x324>
  40360c:	add	x2, x2, #0x55b
  403610:	mov	w1, #0x16                  	// #22
  403614:	movk	w1, #0x4000, lsl #16
  403618:	mov	w0, #0x407                 	// #1031
  40361c:	bl	401a60 <log_internal_realm@plt>
  403620:	mov	w28, w0
  403624:	b	4033e0 <scsi_inquiry+0x18c>
  403628:	ldr	w0, [sp, #148]
  40362c:	str	w0, [sp, #8]
  403630:	ldr	w0, [sp, #152]
  403634:	str	w0, [sp]
  403638:	mov	w7, w28
  40363c:	add	x6, x21, #0x40
  403640:	adrp	x5, 405000 <_fini+0x324>
  403644:	add	x5, x5, #0x6d8
  403648:	adrp	x4, 405000 <_fini+0x324>
  40364c:	add	x4, x4, #0x930
  403650:	mov	w3, #0x104                 	// #260
  403654:	adrp	x2, 405000 <_fini+0x324>
  403658:	add	x2, x2, #0x55b
  40365c:	mov	w1, #0x0                   	// #0
  403660:	mov	w0, #0x407                 	// #1031
  403664:	bl	401a60 <log_internal_realm@plt>
  403668:	b	403570 <scsi_inquiry+0x31c>
  40366c:	mov	w0, #0x1                   	// #1
  403670:	bl	401bf0 <log_get_max_level_realm@plt>
  403674:	cmp	w0, #0x6
  403678:	b.gt	4036c8 <scsi_inquiry+0x474>
  40367c:	mov	w28, #0xffffffea            	// #-22
  403680:	mov	w0, #0x1                   	// #1
  403684:	bl	401bf0 <log_get_max_level_realm@plt>
  403688:	cmp	w0, #0x6
  40368c:	b.le	40359c <scsi_inquiry+0x348>
  403690:	str	w26, [sp]
  403694:	mov	w7, w25
  403698:	add	x6, x21, #0x40
  40369c:	adrp	x5, 405000 <_fini+0x324>
  4036a0:	add	x5, x5, #0x730
  4036a4:	adrp	x4, 405000 <_fini+0x324>
  4036a8:	add	x4, x4, #0x940
  4036ac:	mov	w3, #0x161                 	// #353
  4036b0:	adrp	x2, 405000 <_fini+0x324>
  4036b4:	add	x2, x2, #0x55b
  4036b8:	mov	w1, #0x0                   	// #0
  4036bc:	mov	w0, #0x407                 	// #1031
  4036c0:	bl	401a60 <log_internal_realm@plt>
  4036c4:	b	40359c <scsi_inquiry+0x348>
  4036c8:	adrp	x6, 405000 <_fini+0x324>
  4036cc:	add	x6, x6, #0x8d8
  4036d0:	adrp	x5, 405000 <_fini+0x324>
  4036d4:	add	x5, x5, #0x6b8
  4036d8:	adrp	x4, 405000 <_fini+0x324>
  4036dc:	add	x4, x4, #0x920
  4036e0:	mov	w3, #0xee                  	// #238
  4036e4:	adrp	x2, 405000 <_fini+0x324>
  4036e8:	add	x2, x2, #0x55b
  4036ec:	mov	w1, #0x16                  	// #22
  4036f0:	movk	w1, #0x4000, lsl #16
  4036f4:	mov	w0, #0x407                 	// #1031
  4036f8:	bl	401a60 <log_internal_realm@plt>
  4036fc:	mov	w28, w0
  403700:	b	4033e0 <scsi_inquiry+0x18c>
  403704:	str	w28, [sp, #16]
  403708:	ldr	w0, [sp, #148]
  40370c:	str	w0, [sp, #8]
  403710:	ldr	w0, [sp, #152]
  403714:	str	w0, [sp]
  403718:	ldr	w7, [sp, #156]
  40371c:	add	x6, x21, #0x40
  403720:	adrp	x5, 405000 <_fini+0x324>
  403724:	add	x5, x5, #0x700
  403728:	adrp	x4, 405000 <_fini+0x324>
  40372c:	add	x4, x4, #0x920
  403730:	mov	w3, #0xf2                  	// #242
  403734:	adrp	x2, 405000 <_fini+0x324>
  403738:	add	x2, x2, #0x55b
  40373c:	mov	w1, #0x0                   	// #0
  403740:	mov	w0, #0x407                 	// #1031
  403744:	bl	401a60 <log_internal_realm@plt>
  403748:	b	4033c0 <scsi_inquiry+0x16c>
  40374c:	mov	w28, #0xffffffff            	// #-1
  403750:	b	403680 <scsi_inquiry+0x42c>
  403754:	mov	w28, #0xffffffff            	// #-1
  403758:	b	403680 <scsi_inquiry+0x42c>
  40375c:	bl	401a10 <__stack_chk_fail@plt>

0000000000403760 <append_vendor_model>:
  403760:	stp	x29, x30, [sp, #-48]!
  403764:	mov	x29, sp
  403768:	cbz	x0, 4037b0 <append_vendor_model+0x50>
  40376c:	stp	x19, x20, [sp, #16]
  403770:	mov	x19, x0
  403774:	mov	x20, x1
  403778:	cbz	x1, 4037dc <append_vendor_model+0x7c>
  40377c:	mov	x1, #0x8                   	// #8
  403780:	bl	401900 <strnlen@plt>
  403784:	cmp	x0, #0x8
  403788:	b.eq	40383c <append_vendor_model+0xdc>  // b.none
  40378c:	mov	w0, #0x1                   	// #1
  403790:	bl	401bf0 <log_get_max_level_realm@plt>
  403794:	mov	w1, w0
  403798:	mov	w0, #0xffffffea            	// #-22
  40379c:	cmp	w1, #0x6
  4037a0:	b.gt	403804 <append_vendor_model+0xa4>
  4037a4:	ldp	x19, x20, [sp, #16]
  4037a8:	ldp	x29, x30, [sp], #48
  4037ac:	ret
  4037b0:	stp	x19, x20, [sp, #16]
  4037b4:	str	x21, [sp, #32]
  4037b8:	adrp	x4, 405000 <_fini+0x324>
  4037bc:	add	x4, x4, #0x8f8
  4037c0:	mov	w3, #0x192                 	// #402
  4037c4:	adrp	x2, 405000 <_fini+0x324>
  4037c8:	add	x2, x2, #0x55b
  4037cc:	adrp	x1, 405000 <_fini+0x324>
  4037d0:	add	x1, x1, #0x760
  4037d4:	mov	w0, #0x1                   	// #1
  4037d8:	bl	401960 <log_assert_failed_realm@plt>
  4037dc:	str	x21, [sp, #32]
  4037e0:	adrp	x4, 405000 <_fini+0x324>
  4037e4:	add	x4, x4, #0x8f8
  4037e8:	mov	w3, #0x193                 	// #403
  4037ec:	adrp	x2, 405000 <_fini+0x324>
  4037f0:	add	x2, x2, #0x55b
  4037f4:	adrp	x1, 405000 <_fini+0x324>
  4037f8:	add	x1, x1, #0x770
  4037fc:	mov	w0, #0x1                   	// #1
  403800:	bl	401960 <log_assert_failed_realm@plt>
  403804:	mov	x7, x19
  403808:	add	x6, x19, #0x40
  40380c:	adrp	x5, 405000 <_fini+0x324>
  403810:	add	x5, x5, #0x778
  403814:	adrp	x4, 405000 <_fini+0x324>
  403818:	add	x4, x4, #0x968
  40381c:	mov	w3, #0x196                 	// #406
  403820:	adrp	x2, 405000 <_fini+0x324>
  403824:	add	x2, x2, #0x55b
  403828:	mov	w1, #0x16                  	// #22
  40382c:	movk	w1, #0x4000, lsl #16
  403830:	mov	w0, #0x407                 	// #1031
  403834:	bl	401a60 <log_internal_realm@plt>
  403838:	b	4037a4 <append_vendor_model+0x44>
  40383c:	str	x21, [sp, #32]
  403840:	add	x21, x19, #0x9
  403844:	mov	x1, #0x10                  	// #16
  403848:	mov	x0, x21
  40384c:	bl	401900 <strnlen@plt>
  403850:	cmp	x0, #0x10
  403854:	b.eq	4038b4 <append_vendor_model+0x154>  // b.none
  403858:	mov	w0, #0x1                   	// #1
  40385c:	bl	401bf0 <log_get_max_level_realm@plt>
  403860:	mov	w1, w0
  403864:	mov	w0, #0xffffffea            	// #-22
  403868:	cmp	w1, #0x6
  40386c:	b.gt	403878 <append_vendor_model+0x118>
  403870:	ldr	x21, [sp, #32]
  403874:	b	4037a4 <append_vendor_model+0x44>
  403878:	mov	x7, x21
  40387c:	add	x6, x19, #0x40
  403880:	adrp	x5, 405000 <_fini+0x324>
  403884:	add	x5, x5, #0x798
  403888:	adrp	x4, 405000 <_fini+0x324>
  40388c:	add	x4, x4, #0x968
  403890:	mov	w3, #0x19a                 	// #410
  403894:	adrp	x2, 405000 <_fini+0x324>
  403898:	add	x2, x2, #0x55b
  40389c:	mov	w1, #0x16                  	// #22
  4038a0:	movk	w1, #0x4000, lsl #16
  4038a4:	mov	w0, #0x407                 	// #1031
  4038a8:	bl	401a60 <log_internal_realm@plt>
  4038ac:	ldr	x21, [sp, #32]
  4038b0:	b	4037a4 <append_vendor_model+0x44>
  4038b4:	ldr	x0, [x19], #9
  4038b8:	str	x0, [x20]
  4038bc:	ldp	x0, x1, [x19]
  4038c0:	stp	x0, x1, [x20, #8]
  4038c4:	mov	w0, #0x18                  	// #24
  4038c8:	ldr	x21, [sp, #32]
  4038cc:	b	4037a4 <append_vendor_model+0x44>

00000000004038d0 <do_scsi_page80_inquiry>:
  4038d0:	sub	sp, sp, #0x160
  4038d4:	stp	x29, x30, [sp, #16]
  4038d8:	add	x29, sp, #0x10
  4038dc:	stp	x19, x20, [sp, #32]
  4038e0:	stp	x21, x22, [sp, #48]
  4038e4:	stp	x23, x24, [sp, #64]
  4038e8:	mov	x23, x0
  4038ec:	mov	w20, w1
  4038f0:	mov	x19, x2
  4038f4:	mov	x22, x3
  4038f8:	mov	w24, w4
  4038fc:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  403900:	ldr	x1, [x0, #3016]
  403904:	str	x1, [sp, #344]
  403908:	mov	x1, #0x0                   	// #0
  40390c:	mov	x21, #0xfe                  	// #254
  403910:	mov	x2, x21
  403914:	add	x0, sp, #0x58
  403918:	bl	401be0 <memset@plt>
  40391c:	mov	w5, w21
  403920:	add	x4, sp, #0x58
  403924:	mov	w3, #0xffffff80            	// #-128
  403928:	mov	w2, #0x1                   	// #1
  40392c:	mov	w1, w20
  403930:	mov	x0, x23
  403934:	bl	403254 <scsi_inquiry>
  403938:	tbnz	w0, #31, 403960 <do_scsi_page80_inquiry+0x90>
  40393c:	ldrb	w0, [sp, #89]
  403940:	cmp	w0, #0x80
  403944:	b.eq	4039c0 <do_scsi_page80_inquiry+0xf0>  // b.none
  403948:	mov	w0, #0x1                   	// #1
  40394c:	bl	401bf0 <log_get_max_level_realm@plt>
  403950:	mov	w1, w0
  403954:	mov	w0, #0x1                   	// #1
  403958:	cmp	w1, #0x6
  40395c:	b.gt	40398c <do_scsi_page80_inquiry+0xbc>
  403960:	adrp	x1, 416000 <__FRAME_END__+0xfde8>
  403964:	ldr	x2, [sp, #344]
  403968:	ldr	x1, [x1, #3016]
  40396c:	eor	x1, x2, x1
  403970:	cbnz	x1, 403aa4 <do_scsi_page80_inquiry+0x1d4>
  403974:	ldp	x19, x20, [sp, #32]
  403978:	ldp	x21, x22, [sp, #48]
  40397c:	ldp	x23, x24, [sp, #64]
  403980:	ldp	x29, x30, [sp, #16]
  403984:	add	sp, sp, #0x160
  403988:	ret
  40398c:	add	x6, x23, #0x40
  403990:	adrp	x5, 405000 <_fini+0x324>
  403994:	add	x5, x5, #0x7b8
  403998:	adrp	x4, 405000 <_fini+0x324>
  40399c:	add	x4, x4, #0x9d0
  4039a0:	mov	w3, #0x2c9                 	// #713
  4039a4:	adrp	x2, 405000 <_fini+0x324>
  4039a8:	add	x2, x2, #0x55b
  4039ac:	mov	w1, #0x0                   	// #0
  4039b0:	mov	w0, #0x407                 	// #1031
  4039b4:	bl	401a60 <log_internal_realm@plt>
  4039b8:	mov	w0, #0x1                   	// #1
  4039bc:	b	403960 <do_scsi_page80_inquiry+0x90>
  4039c0:	ldrb	w20, [sp, #91]
  4039c4:	add	w21, w20, #0x19
  4039c8:	cmp	w21, w24
  4039cc:	b.gt	403a50 <do_scsi_page80_inquiry+0x180>
  4039d0:	cbz	x19, 403a28 <do_scsi_page80_inquiry+0x158>
  4039d4:	mov	x1, x19
  4039d8:	mov	w0, #0x53                  	// #83
  4039dc:	strb	w0, [x1], #1
  4039e0:	mov	x0, x23
  4039e4:	bl	403760 <append_vendor_model>
  4039e8:	mov	w2, w0
  4039ec:	mov	w0, #0x1                   	// #1
  4039f0:	tbnz	w2, #31, 403960 <do_scsi_page80_inquiry+0x90>
  4039f4:	cbz	w20, 403a28 <do_scsi_page80_inquiry+0x158>
  4039f8:	sub	w3, w20, #0x1
  4039fc:	mov	x1, #0x0                   	// #0
  403a00:	sxtw	x2, w2
  403a04:	add	x2, x2, #0x1
  403a08:	add	x19, x19, x2
  403a0c:	add	x0, sp, #0x58
  403a10:	add	x0, x1, x0
  403a14:	ldrb	w0, [x0, #4]
  403a18:	strb	w0, [x19, x1]
  403a1c:	cmp	x1, x3
  403a20:	add	x1, x1, #0x1
  403a24:	b.ne	403a0c <do_scsi_page80_inquiry+0x13c>  // b.any
  403a28:	mov	w0, #0x0                   	// #0
  403a2c:	cbz	x22, 403960 <do_scsi_page80_inquiry+0x90>
  403a30:	and	x20, x20, #0xff
  403a34:	mov	x2, x20
  403a38:	add	x1, sp, #0x5c
  403a3c:	mov	x0, x22
  403a40:	bl	401920 <memcpy@plt>
  403a44:	strb	wzr, [x22, x20]
  403a48:	mov	w0, #0x0                   	// #0
  403a4c:	b	403960 <do_scsi_page80_inquiry+0x90>
  403a50:	mov	w0, #0x1                   	// #1
  403a54:	bl	401bf0 <log_get_max_level_realm@plt>
  403a58:	mov	w1, w0
  403a5c:	mov	w0, #0x1                   	// #1
  403a60:	cmp	w1, #0x6
  403a64:	b.le	403960 <do_scsi_page80_inquiry+0x90>
  403a68:	str	w21, [sp]
  403a6c:	mov	w7, w24
  403a70:	add	x6, x23, #0x40
  403a74:	adrp	x5, 405000 <_fini+0x324>
  403a78:	add	x5, x5, #0x7d0
  403a7c:	adrp	x4, 405000 <_fini+0x324>
  403a80:	add	x4, x4, #0x9d0
  403a84:	mov	w3, #0x2cf                 	// #719
  403a88:	adrp	x2, 405000 <_fini+0x324>
  403a8c:	add	x2, x2, #0x55b
  403a90:	mov	w1, #0x0                   	// #0
  403a94:	mov	w0, #0x407                 	// #1031
  403a98:	bl	401a60 <log_internal_realm@plt>
  403a9c:	mov	w0, #0x1                   	// #1
  403aa0:	b	403960 <do_scsi_page80_inquiry+0x90>
  403aa4:	bl	401a10 <__stack_chk_fail@plt>

0000000000403aa8 <do_scsi_page83_inquiry>:
  403aa8:	sub	sp, sp, #0x1b0
  403aac:	stp	x29, x30, [sp, #16]
  403ab0:	add	x29, sp, #0x10
  403ab4:	stp	x19, x20, [sp, #32]
  403ab8:	stp	x23, x24, [sp, #64]
  403abc:	stp	x25, x26, [sp, #80]
  403ac0:	stp	x27, x28, [sp, #96]
  403ac4:	mov	x23, x0
  403ac8:	mov	w19, w1
  403acc:	mov	x24, x2
  403ad0:	str	x3, [sp, #112]
  403ad4:	mov	w25, w4
  403ad8:	mov	x3, x5
  403adc:	str	x6, [sp, #120]
  403ae0:	str	x7, [sp, #128]
  403ae4:	ldr	x28, [sp, #432]
  403ae8:	adrp	x2, 416000 <__FRAME_END__+0xfde8>
  403aec:	ldr	x4, [x2, #3016]
  403af0:	str	x4, [sp, #424]
  403af4:	mov	x4, #0x0                   	// #0
  403af8:	mov	w4, #0x100                 	// #256
  403afc:	mov	x2, #0x0                   	// #0
  403b00:	bl	4038d0 <do_scsi_page80_inquiry>
  403b04:	mov	x20, #0xfe                  	// #254
  403b08:	mov	x2, x20
  403b0c:	mov	w1, #0x0                   	// #0
  403b10:	add	x0, sp, #0xa8
  403b14:	bl	401be0 <memset@plt>
  403b18:	mov	w5, w20
  403b1c:	add	x4, sp, #0xa8
  403b20:	mov	w3, #0xffffff83            	// #-125
  403b24:	mov	w2, #0x1                   	// #1
  403b28:	mov	w1, w19
  403b2c:	mov	x0, x23
  403b30:	bl	403254 <scsi_inquiry>
  403b34:	mov	w1, #0x1                   	// #1
  403b38:	tbnz	w0, #31, 403b5c <do_scsi_page83_inquiry+0xb4>
  403b3c:	ldrb	w0, [sp, #169]
  403b40:	cmp	w0, #0x83
  403b44:	b.eq	403bc4 <do_scsi_page83_inquiry+0x11c>  // b.none
  403b48:	mov	w0, w1
  403b4c:	bl	401bf0 <log_get_max_level_realm@plt>
  403b50:	mov	w1, #0x1                   	// #1
  403b54:	cmp	w0, #0x6
  403b58:	b.gt	403b90 <do_scsi_page83_inquiry+0xe8>
  403b5c:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  403b60:	ldr	x2, [sp, #424]
  403b64:	ldr	x0, [x0, #3016]
  403b68:	eor	x0, x2, x0
  403b6c:	cbnz	x0, 403f28 <do_scsi_page83_inquiry+0x480>
  403b70:	mov	w0, w1
  403b74:	ldp	x19, x20, [sp, #32]
  403b78:	ldp	x23, x24, [sp, #64]
  403b7c:	ldp	x25, x26, [sp, #80]
  403b80:	ldp	x27, x28, [sp, #96]
  403b84:	ldp	x29, x30, [sp, #16]
  403b88:	add	sp, sp, #0x1b0
  403b8c:	ret
  403b90:	add	x6, x23, #0x40
  403b94:	adrp	x5, 405000 <_fini+0x324>
  403b98:	add	x5, x5, #0x7f8
  403b9c:	adrp	x4, 405000 <_fini+0x324>
  403ba0:	add	x4, x4, #0x998
  403ba4:	mov	w3, #0x239                 	// #569
  403ba8:	adrp	x2, 405000 <_fini+0x324>
  403bac:	add	x2, x2, #0x55b
  403bb0:	mov	w1, #0x0                   	// #0
  403bb4:	mov	w0, #0x407                 	// #1031
  403bb8:	bl	401a60 <log_internal_realm@plt>
  403bbc:	mov	w1, #0x1                   	// #1
  403bc0:	b	403b5c <do_scsi_page83_inquiry+0xb4>
  403bc4:	ldrb	w0, [sp, #174]
  403bc8:	cbnz	w0, 403c38 <do_scsi_page83_inquiry+0x190>
  403bcc:	stp	x21, x22, [sp, #48]
  403bd0:	adrp	x27, 405000 <_fini+0x324>
  403bd4:	add	x27, x27, #0xa28
  403bd8:	add	x0, x27, #0x27
  403bdc:	str	x0, [sp, #152]
  403be0:	add	x21, sp, #0xa8
  403be4:	adrp	x0, 405000 <_fini+0x324>
  403be8:	add	x0, x0, #0xa10
  403bec:	str	x0, [sp, #136]
  403bf0:	ldrb	w0, [sp, #171]
  403bf4:	add	w1, w0, #0x3
  403bf8:	ldrb	w0, [sp, #170]
  403bfc:	add	w0, w1, w0, lsl #8
  403c00:	mov	x22, x27
  403c04:	mov	w19, #0x4                   	// #4
  403c08:	adrp	x1, 405000 <_fini+0x324>
  403c0c:	add	x1, x1, #0x7d0
  403c10:	str	x1, [sp, #144]
  403c14:	cmp	w0, #0x3
  403c18:	b.hi	403d10 <do_scsi_page83_inquiry+0x268>  // b.pmore
  403c1c:	add	x27, x27, #0x3
  403c20:	ldr	x0, [sp, #152]
  403c24:	cmp	x27, x0
  403c28:	b.ne	403bf0 <do_scsi_page83_inquiry+0x148>  // b.any
  403c2c:	mov	w1, #0x1                   	// #1
  403c30:	ldp	x21, x22, [sp, #48]
  403c34:	b	403b5c <do_scsi_page83_inquiry+0xb4>
  403c38:	mov	w0, #0x33                  	// #51
  403c3c:	strb	w0, [x24]
  403c40:	mov	x0, x24
  403c44:	bl	401b80 <strlen@plt>
  403c48:	ldrb	w6, [sp, #171]
  403c4c:	cbz	w6, 403cb8 <do_scsi_page83_inquiry+0x210>
  403c50:	sub	w1, w25, #0x3
  403c54:	cmp	w0, w1
  403c58:	b.ge	403cb8 <do_scsi_page83_inquiry+0x210>  // b.tcont
  403c5c:	add	x2, x24, w0, sxtw
  403c60:	sub	w5, w25, #0x4
  403c64:	sub	w5, w5, w0
  403c68:	lsr	w5, w5, #1
  403c6c:	add	x5, x5, #0x2
  403c70:	mov	x1, #0x1                   	// #1
  403c74:	adrp	x3, 405000 <_fini+0x324>
  403c78:	add	x3, x3, #0xa10
  403c7c:	add	x0, sp, #0xa8
  403c80:	add	x0, x1, x0
  403c84:	ldrb	w0, [x0, #3]
  403c88:	lsr	w4, w0, #4
  403c8c:	ldrb	w4, [x3, w4, sxtw]
  403c90:	strb	w4, [x2]
  403c94:	and	w0, w0, #0xf
  403c98:	ldrb	w0, [x3, w0, sxtw]
  403c9c:	strb	w0, [x2, #1]
  403ca0:	cmp	w6, w1
  403ca4:	b.le	403cb8 <do_scsi_page83_inquiry+0x210>
  403ca8:	add	x1, x1, #0x1
  403cac:	add	x2, x2, #0x2
  403cb0:	cmp	x1, x5
  403cb4:	b.ne	403c7c <do_scsi_page83_inquiry+0x1d4>  // b.any
  403cb8:	add	x0, x24, w25, sxtw
  403cbc:	sturb	wzr, [x0, #-1]
  403cc0:	sub	w2, w25, #0x1
  403cc4:	sxtw	x2, w2
  403cc8:	mov	x1, x24
  403ccc:	ldr	x0, [sp, #112]
  403cd0:	bl	401940 <strncpy@plt>
  403cd4:	mov	w1, #0x0                   	// #0
  403cd8:	b	403b5c <do_scsi_page83_inquiry+0xb4>
  403cdc:	ldrb	w1, [x22]
  403ce0:	cmp	w1, #0x5
  403ce4:	b.eq	403d2c <do_scsi_page83_inquiry+0x284>  // b.none
  403ce8:	add	w0, w19, #0x3
  403cec:	ldrb	w0, [x21, w0, uxtw]
  403cf0:	add	w0, w0, #0x4
  403cf4:	add	w19, w19, w0
  403cf8:	ldrb	w0, [sp, #170]
  403cfc:	ldrb	w1, [sp, #171]
  403d00:	add	w1, w1, #0x3
  403d04:	add	w0, w1, w0, lsl #8
  403d08:	cmp	w0, w19
  403d0c:	b.cc	403c1c <do_scsi_page83_inquiry+0x174>  // b.lo, b.ul, b.last
  403d10:	mov	w2, w19
  403d14:	add	x20, x21, x2
  403d18:	ldrb	w0, [x20, #1]
  403d1c:	and	w1, w0, #0x30
  403d20:	cmp	w1, #0x10
  403d24:	b.eq	403cdc <do_scsi_page83_inquiry+0x234>  // b.none
  403d28:	cbnz	w1, 403ce8 <do_scsi_page83_inquiry+0x240>
  403d2c:	ldrb	w1, [x22]
  403d30:	and	w0, w0, #0xf
  403d34:	cmp	w0, w1
  403d38:	b.ne	403ce8 <do_scsi_page83_inquiry+0x240>  // b.any
  403d3c:	ldrb	w0, [x22, #1]
  403d40:	cmp	w0, #0xff
  403d44:	b.eq	403d54 <do_scsi_page83_inquiry+0x2ac>  // b.none
  403d48:	ldrb	w3, [x20, #4]
  403d4c:	cmp	w0, w3, lsr #4
  403d50:	b.ne	403ce8 <do_scsi_page83_inquiry+0x240>  // b.any
  403d54:	ldrb	w0, [x21, x2]
  403d58:	and	w0, w0, #0xf
  403d5c:	ldrb	w2, [x22, #2]
  403d60:	cmp	w2, w0
  403d64:	b.ne	403ce8 <do_scsi_page83_inquiry+0x240>  // b.any
  403d68:	ldrb	w26, [x20, #3]
  403d6c:	lsl	w2, w26, #1
  403d70:	cmp	w0, #0x2
  403d74:	csel	w26, w2, w26, ne  // ne = any
  403d78:	cbnz	w1, 403e34 <do_scsi_page83_inquiry+0x38c>
  403d7c:	add	w26, w26, #0x1a
  403d80:	cmp	w25, w26
  403d84:	b.lt	403e6c <do_scsi_page83_inquiry+0x3c4>  // b.tstop
  403d88:	ldr	x0, [sp, #136]
  403d8c:	ldrb	w0, [x0, w1, sxtw]
  403d90:	strb	w0, [x24]
  403d94:	ldrb	w0, [x22]
  403d98:	cbz	w0, 403eb0 <do_scsi_page83_inquiry+0x408>
  403d9c:	mov	x0, x24
  403da0:	bl	401b80 <strlen@plt>
  403da4:	ldrb	w1, [x20]
  403da8:	and	w1, w1, #0xf
  403dac:	cmp	w1, #0x2
  403db0:	b.eq	403ec4 <do_scsi_page83_inquiry+0x41c>  // b.none
  403db4:	ldrb	w6, [x20, #3]
  403db8:	add	w6, w6, #0x3
  403dbc:	add	x3, x24, w0, sxtw
  403dc0:	mov	x2, #0x4                   	// #4
  403dc4:	adrp	x4, 405000 <_fini+0x324>
  403dc8:	add	x4, x4, #0xa10
  403dcc:	cmp	w6, #0x3
  403dd0:	b.le	403e00 <do_scsi_page83_inquiry+0x358>
  403dd4:	ldrb	w1, [x20, x2]
  403dd8:	lsr	w5, w1, #4
  403ddc:	ldrb	w5, [x4, w5, sxtw]
  403de0:	strb	w5, [x3]
  403de4:	and	w1, w1, #0xf
  403de8:	ldrb	w1, [x4, w1, sxtw]
  403dec:	strb	w1, [x3, #1]
  403df0:	add	x2, x2, #0x1
  403df4:	add	x3, x3, #0x2
  403df8:	cmp	w6, w2
  403dfc:	b.ge	403dd4 <do_scsi_page83_inquiry+0x32c>  // b.tcont
  403e00:	sxtw	x20, w0
  403e04:	add	x19, x24, w0, sxtw
  403e08:	mov	x1, x19
  403e0c:	ldr	x0, [sp, #112]
  403e10:	bl	401b50 <strcpy@plt>
  403e14:	ldrb	w0, [x22]
  403e18:	ldr	x1, [sp, #120]
  403e1c:	cmp	x1, #0x0
  403e20:	ccmp	w0, #0x3, #0x0, ne  // ne = any
  403e24:	b.eq	403efc <do_scsi_page83_inquiry+0x454>  // b.none
  403e28:	mov	w1, #0x0                   	// #0
  403e2c:	ldp	x21, x22, [sp, #48]
  403e30:	b	403b5c <do_scsi_page83_inquiry+0xb4>
  403e34:	add	w26, w26, #0x2
  403e38:	cmp	w25, w26
  403e3c:	b.lt	403e6c <do_scsi_page83_inquiry+0x3c4>  // b.tstop
  403e40:	cmp	x28, #0x0
  403e44:	ccmp	w1, #0x5, #0x0, ne  // ne = any
  403e48:	b.ne	403d88 <do_scsi_page83_inquiry+0x2e0>  // b.any
  403e4c:	ldrb	w2, [x20, #6]
  403e50:	ldrb	w0, [x20, #7]
  403e54:	orr	w2, w0, w2, lsl #8
  403e58:	adrp	x1, 405000 <_fini+0x324>
  403e5c:	add	x1, x1, #0x810
  403e60:	mov	x0, x28
  403e64:	bl	401b20 <sprintf@plt>
  403e68:	b	403ce8 <do_scsi_page83_inquiry+0x240>
  403e6c:	mov	w0, #0x1                   	// #1
  403e70:	bl	401bf0 <log_get_max_level_realm@plt>
  403e74:	cmp	w0, #0x6
  403e78:	b.le	403ce8 <do_scsi_page83_inquiry+0x240>
  403e7c:	str	w26, [sp]
  403e80:	mov	w7, w25
  403e84:	add	x6, x23, #0x40
  403e88:	ldr	x5, [sp, #144]
  403e8c:	adrp	x4, 405000 <_fini+0x324>
  403e90:	add	x4, x4, #0x980
  403e94:	mov	w3, #0x1da                 	// #474
  403e98:	adrp	x2, 405000 <_fini+0x324>
  403e9c:	add	x2, x2, #0x55b
  403ea0:	mov	w1, #0x0                   	// #0
  403ea4:	mov	w0, #0x407                 	// #1031
  403ea8:	bl	401a60 <log_internal_realm@plt>
  403eac:	b	403ce8 <do_scsi_page83_inquiry+0x240>
  403eb0:	add	x1, x24, #0x1
  403eb4:	mov	x0, x23
  403eb8:	bl	403760 <append_vendor_model>
  403ebc:	tbz	w0, #31, 403d9c <do_scsi_page83_inquiry+0x2f4>
  403ec0:	b	403ce8 <do_scsi_page83_inquiry+0x240>
  403ec4:	ldrb	w4, [x20, #3]
  403ec8:	add	w4, w4, #0x3
  403ecc:	cmp	w4, #0x3
  403ed0:	b.le	403e00 <do_scsi_page83_inquiry+0x358>
  403ed4:	mov	x1, #0x4                   	// #4
  403ed8:	sxtw	x2, w0
  403edc:	sub	x2, x2, #0x4
  403ee0:	add	x2, x24, x2
  403ee4:	ldrb	w3, [x20, x1]
  403ee8:	strb	w3, [x2, x1]
  403eec:	add	x1, x1, #0x1
  403ef0:	cmp	w4, w1
  403ef4:	b.ge	403ee4 <do_scsi_page83_inquiry+0x43c>  // b.tcont
  403ef8:	b	403e00 <do_scsi_page83_inquiry+0x358>
  403efc:	mov	x2, #0x10                  	// #16
  403f00:	mov	x1, x19
  403f04:	ldr	x0, [sp, #120]
  403f08:	bl	401940 <strncpy@plt>
  403f0c:	ldr	x0, [sp, #128]
  403f10:	cbz	x0, 403e28 <do_scsi_page83_inquiry+0x380>
  403f14:	add	x1, x20, #0x10
  403f18:	mov	x2, #0x10                  	// #16
  403f1c:	add	x1, x24, x1
  403f20:	bl	401940 <strncpy@plt>
  403f24:	b	403e28 <do_scsi_page83_inquiry+0x380>
  403f28:	stp	x21, x22, [sp, #48]
  403f2c:	bl	401a10 <__stack_chk_fail@plt>

0000000000403f30 <scsi_std_inquiry>:
  403f30:	stp	x29, x30, [sp, #-448]!
  403f34:	mov	x29, sp
  403f38:	stp	x19, x20, [sp, #16]
  403f3c:	stp	x21, x22, [sp, #32]
  403f40:	mov	x22, x0
  403f44:	mov	x20, x1
  403f48:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  403f4c:	ldr	x1, [x0, #3016]
  403f50:	str	x1, [sp, #440]
  403f54:	mov	x1, #0x0                   	// #0
  403f58:	mov	w1, #0x800                 	// #2048
  403f5c:	movk	w1, #0x8, lsl #16
  403f60:	mov	x0, x20
  403f64:	bl	401b70 <open64@plt>
  403f68:	tbnz	w0, #31, 40405c <scsi_std_inquiry+0x12c>
  403f6c:	mov	w19, w0
  403f70:	add	x2, sp, #0x38
  403f74:	mov	w1, w0
  403f78:	mov	w0, #0x0                   	// #0
  403f7c:	bl	4019e0 <__fxstat64@plt>
  403f80:	tbnz	w0, #31, 4040a4 <scsi_std_inquiry+0x174>
  403f84:	ldr	x0, [sp, #88]
  403f88:	ubfx	w2, w0, #8, #12
  403f8c:	lsr	x3, x0, #12
  403f90:	lsr	x1, x0, #32
  403f94:	and	w1, w1, #0xfffff000
  403f98:	bfxil	w3, w0, #0, #8
  403f9c:	orr	w2, w1, w2
  403fa0:	adrp	x1, 405000 <_fini+0x324>
  403fa4:	add	x1, x1, #0x858
  403fa8:	add	x0, x22, #0x40
  403fac:	bl	401b20 <sprintf@plt>
  403fb0:	mov	x20, #0xfe                  	// #254
  403fb4:	mov	x2, x20
  403fb8:	mov	w1, #0x0                   	// #0
  403fbc:	add	x0, sp, #0xb8
  403fc0:	bl	401be0 <memset@plt>
  403fc4:	mov	w5, w20
  403fc8:	add	x4, sp, #0xb8
  403fcc:	mov	w3, #0x0                   	// #0
  403fd0:	mov	w2, #0x0                   	// #0
  403fd4:	mov	w1, w19
  403fd8:	mov	x0, x22
  403fdc:	bl	403254 <scsi_inquiry>
  403fe0:	mov	w21, w0
  403fe4:	tbnz	w0, #31, 40402c <scsi_std_inquiry+0xfc>
  403fe8:	ldr	x0, [sp, #192]
  403fec:	str	x0, [x22]
  403ff0:	strb	wzr, [x22, #8]
  403ff4:	add	x0, x22, #0x9
  403ff8:	ldp	x2, x3, [sp, #200]
  403ffc:	stp	x2, x3, [x0]
  404000:	strb	wzr, [x22, #25]
  404004:	ldr	w0, [sp, #216]
  404008:	stur	w0, [x22, #26]
  40400c:	strb	wzr, [x22, #30]
  404010:	ldrb	w2, [sp, #184]
  404014:	and	w2, w2, #0x1f
  404018:	adrp	x1, 405000 <_fini+0x324>
  40401c:	add	x1, x1, #0x810
  404020:	add	x0, x22, #0x1f
  404024:	bl	401b20 <sprintf@plt>
  404028:	mov	w21, #0x0                   	// #0
  40402c:	mov	w0, w19
  404030:	bl	401b60 <close@plt>
  404034:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  404038:	ldr	x1, [sp, #440]
  40403c:	ldr	x0, [x0, #3016]
  404040:	eor	x0, x1, x0
  404044:	cbnz	x0, 4040ec <scsi_std_inquiry+0x1bc>
  404048:	mov	w0, w21
  40404c:	ldp	x19, x20, [sp, #16]
  404050:	ldp	x21, x22, [sp, #32]
  404054:	ldp	x29, x30, [sp], #448
  404058:	ret
  40405c:	mov	w0, #0x1                   	// #1
  404060:	bl	401bf0 <log_get_max_level_realm@plt>
  404064:	mov	w21, #0x1                   	// #1
  404068:	cmp	w0, #0x6
  40406c:	b.le	404034 <scsi_std_inquiry+0x104>
  404070:	bl	4019f0 <__errno_location@plt>
  404074:	mov	x6, x20
  404078:	adrp	x5, 405000 <_fini+0x324>
  40407c:	add	x5, x5, #0x818
  404080:	adrp	x4, 405000 <_fini+0x324>
  404084:	add	x4, x4, #0x9e8
  404088:	mov	w3, #0x2f0                 	// #752
  40408c:	adrp	x2, 405000 <_fini+0x324>
  404090:	add	x2, x2, #0x55b
  404094:	ldr	w1, [x0]
  404098:	mov	w0, #0x407                 	// #1031
  40409c:	bl	401a60 <log_internal_realm@plt>
  4040a0:	b	404034 <scsi_std_inquiry+0x104>
  4040a4:	mov	w0, #0x1                   	// #1
  4040a8:	bl	401bf0 <log_get_max_level_realm@plt>
  4040ac:	mov	w21, #0x2                   	// #2
  4040b0:	cmp	w0, #0x6
  4040b4:	b.le	40402c <scsi_std_inquiry+0xfc>
  4040b8:	bl	4019f0 <__errno_location@plt>
  4040bc:	mov	x6, x20
  4040c0:	adrp	x5, 405000 <_fini+0x324>
  4040c4:	add	x5, x5, #0x838
  4040c8:	adrp	x4, 405000 <_fini+0x324>
  4040cc:	add	x4, x4, #0x9e8
  4040d0:	mov	w3, #0x2f5                 	// #757
  4040d4:	adrp	x2, 405000 <_fini+0x324>
  4040d8:	add	x2, x2, #0x55b
  4040dc:	ldr	w1, [x0]
  4040e0:	mov	w0, #0x407                 	// #1031
  4040e4:	bl	401a60 <log_internal_realm@plt>
  4040e8:	b	40402c <scsi_std_inquiry+0xfc>
  4040ec:	bl	401a10 <__stack_chk_fail@plt>

00000000004040f0 <scsi_get_serial>:
  4040f0:	sub	sp, sp, #0x1a0
  4040f4:	stp	x29, x30, [sp, #16]
  4040f8:	add	x29, sp, #0x10
  4040fc:	stp	x19, x20, [sp, #32]
  404100:	stp	x21, x22, [sp, #48]
  404104:	stp	x23, x24, [sp, #64]
  404108:	stp	x25, x26, [sp, #80]
  40410c:	stp	x27, x28, [sp, #96]
  404110:	mov	x20, x0
  404114:	mov	x22, x1
  404118:	mov	w27, w2
  40411c:	mov	w23, w3
  404120:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  404124:	ldr	x1, [x0, #3016]
  404128:	str	x1, [sp, #408]
  40412c:	mov	x1, #0x0                   	// #0
  404130:	cbnz	w3, 4041c4 <scsi_get_serial+0xd4>
  404134:	bl	401a20 <initialize_srand@plt>
  404138:	mov	w21, #0x14                  	// #20
  40413c:	mov	w24, #0x800                 	// #2048
  404140:	movk	w24, #0x8, lsl #16
  404144:	mov	w28, #0x851f                	// #34079
  404148:	movk	w28, #0x51eb, lsl #16
  40414c:	mov	w26, #0x4240                	// #16960
  404150:	movk	w26, #0xf, lsl #16
  404154:	mov	w25, #0xc200                	// #49664
  404158:	movk	w25, #0xbeb, lsl #16
  40415c:	mov	w1, w24
  404160:	mov	x0, x22
  404164:	bl	401b70 <open64@plt>
  404168:	mov	w19, w0
  40416c:	tbz	w0, #31, 4041dc <scsi_get_serial+0xec>
  404170:	bl	4019f0 <__errno_location@plt>
  404174:	ldr	w0, [x0]
  404178:	cmp	w0, #0x10
  40417c:	b.ne	4041d4 <scsi_get_serial+0xe4>  // b.any
  404180:	str	xzr, [sp, #136]
  404184:	bl	401a30 <rand@plt>
  404188:	smull	x1, w0, w28
  40418c:	asr	x1, x1, #37
  404190:	sub	w1, w1, w0, asr #31
  404194:	mov	w2, #0x64                  	// #100
  404198:	msub	w0, w1, w2, w0
  40419c:	madd	w0, w0, w26, w25
  4041a0:	sxtw	x0, w0
  4041a4:	str	x0, [sp, #144]
  4041a8:	mov	x1, #0x0                   	// #0
  4041ac:	add	x0, sp, #0x88
  4041b0:	bl	401880 <nanosleep@plt>
  4041b4:	subs	w21, w21, #0x1
  4041b8:	b.ne	40415c <scsi_get_serial+0x6c>  // b.any
  4041bc:	mov	w24, #0x1                   	// #1
  4041c0:	b	404268 <scsi_get_serial+0x178>
  4041c4:	sxtw	x2, w3
  4041c8:	add	x0, x20, #0x80
  4041cc:	bl	401be0 <memset@plt>
  4041d0:	b	404134 <scsi_get_serial+0x44>
  4041d4:	mov	w24, #0x1                   	// #1
  4041d8:	b	404268 <scsi_get_serial+0x178>
  4041dc:	cmp	w27, #0x80
  4041e0:	b.eq	404240 <scsi_get_serial+0x150>  // b.none
  4041e4:	cmp	w27, #0x83
  4041e8:	b.eq	4042a0 <scsi_get_serial+0x1b0>  // b.none
  4041ec:	cmn	w27, #0x83
  4041f0:	b.eq	4042d8 <scsi_get_serial+0x1e8>  // b.none
  4041f4:	cbz	w27, 4043d0 <scsi_get_serial+0x2e0>
  4041f8:	mov	w0, #0x1                   	// #1
  4041fc:	bl	401bf0 <log_get_max_level_realm@plt>
  404200:	mov	w24, #0x1                   	// #1
  404204:	cmp	w0, #0x6
  404208:	b.le	404260 <scsi_get_serial+0x170>
  40420c:	mov	w7, w27
  404210:	add	x6, x20, #0x40
  404214:	adrp	x5, 405000 <_fini+0x324>
  404218:	add	x5, x5, #0x860
  40421c:	adrp	x4, 405000 <_fini+0x324>
  404220:	add	x4, x4, #0xa00
  404224:	mov	w3, #0x350                 	// #848
  404228:	adrp	x2, 405000 <_fini+0x324>
  40422c:	add	x2, x2, #0x55b
  404230:	mov	w1, #0x0                   	// #0
  404234:	mov	w0, #0x407                 	// #1031
  404238:	bl	401a60 <log_internal_realm@plt>
  40423c:	b	404260 <scsi_get_serial+0x170>
  404240:	mov	w4, w23
  404244:	add	x3, x20, #0x180
  404248:	add	x2, x20, #0x80
  40424c:	mov	w1, w0
  404250:	mov	x0, x20
  404254:	bl	4038d0 <do_scsi_page80_inquiry>
  404258:	cmp	w0, #0x0
  40425c:	cset	w24, ne  // ne = any
  404260:	mov	w0, w19
  404264:	bl	401b60 <close@plt>
  404268:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  40426c:	ldr	x1, [sp, #408]
  404270:	ldr	x0, [x0, #3016]
  404274:	eor	x0, x1, x0
  404278:	cbnz	x0, 40462c <scsi_get_serial+0x53c>
  40427c:	mov	w0, w24
  404280:	ldp	x19, x20, [sp, #32]
  404284:	ldp	x21, x22, [sp, #48]
  404288:	ldp	x23, x24, [sp, #64]
  40428c:	ldp	x25, x26, [sp, #80]
  404290:	ldp	x27, x28, [sp, #96]
  404294:	ldp	x29, x30, [sp, #16]
  404298:	add	sp, sp, #0x1a0
  40429c:	ret
  4042a0:	add	x0, x20, #0x3a6
  4042a4:	str	x0, [sp]
  4042a8:	add	x7, x20, #0x395
  4042ac:	add	x6, x20, #0x384
  4042b0:	add	x5, x20, #0x284
  4042b4:	mov	w4, w23
  4042b8:	add	x3, x20, #0x180
  4042bc:	add	x2, x20, #0x80
  4042c0:	mov	w1, w19
  4042c4:	mov	x0, x20
  4042c8:	bl	403aa8 <do_scsi_page83_inquiry>
  4042cc:	cmp	w0, #0x0
  4042d0:	cset	w24, ne  // ne = any
  4042d4:	b	404260 <scsi_get_serial+0x170>
  4042d8:	mov	x21, #0xfe                  	// #254
  4042dc:	mov	x2, x21
  4042e0:	mov	w1, #0x0                   	// #0
  4042e4:	add	x0, sp, #0x98
  4042e8:	bl	401be0 <memset@plt>
  4042ec:	mov	w5, w21
  4042f0:	add	x4, sp, #0x98
  4042f4:	mov	w3, #0xffffff83            	// #-125
  4042f8:	mov	w2, #0x1                   	// #1
  4042fc:	mov	w1, w19
  404300:	mov	x0, x20
  404304:	bl	403254 <scsi_inquiry>
  404308:	tbnz	w0, #31, 404328 <scsi_get_serial+0x238>
  40430c:	ldrb	w0, [sp, #153]
  404310:	cmp	w0, #0x83
  404314:	b.eq	404360 <scsi_get_serial+0x270>  // b.none
  404318:	mov	w0, #0x1                   	// #1
  40431c:	bl	401bf0 <log_get_max_level_realm@plt>
  404320:	cmp	w0, #0x6
  404324:	b.gt	404330 <scsi_get_serial+0x240>
  404328:	mov	w24, #0x1                   	// #1
  40432c:	b	404260 <scsi_get_serial+0x170>
  404330:	add	x6, x20, #0x40
  404334:	adrp	x5, 405000 <_fini+0x324>
  404338:	add	x5, x5, #0x7f8
  40433c:	adrp	x4, 405000 <_fini+0x324>
  404340:	add	x4, x4, #0x9b0
  404344:	mov	w3, #0x28b                 	// #651
  404348:	adrp	x2, 405000 <_fini+0x324>
  40434c:	add	x2, x2, #0x55b
  404350:	mov	w1, #0x0                   	// #0
  404354:	mov	w0, #0x407                 	// #1031
  404358:	bl	401a60 <log_internal_realm@plt>
  40435c:	b	404328 <scsi_get_serial+0x238>
  404360:	add	x0, x20, #0x80
  404364:	ldrb	w1, [sp, #158]
  404368:	cbz	w1, 4045c8 <scsi_get_serial+0x4d8>
  40436c:	mov	w1, #0x33                  	// #51
  404370:	strb	w1, [x20, #128]
  404374:	bl	401b80 <strlen@plt>
  404378:	ldrb	w2, [sp, #155]
  40437c:	cbz	w2, 4043c8 <scsi_get_serial+0x2d8>
  404380:	add	x1, sp, #0x98
  404384:	add	x20, x20, w0, sxtw
  404388:	sub	w2, w2, #0x1
  40438c:	add	x4, sp, #0x99
  404390:	add	x4, x2, x4
  404394:	adrp	x2, 405000 <_fini+0x324>
  404398:	add	x2, x2, #0xa10
  40439c:	ldrb	w0, [x1, #4]
  4043a0:	lsr	w3, w0, #4
  4043a4:	ldrb	w3, [x2, w3, sxtw]
  4043a8:	strb	w3, [x20, #128]
  4043ac:	and	w0, w0, #0xf
  4043b0:	ldrb	w0, [x2, w0, sxtw]
  4043b4:	strb	w0, [x20, #129]
  4043b8:	add	x1, x1, #0x1
  4043bc:	add	x20, x20, #0x2
  4043c0:	cmp	x4, x1
  4043c4:	b.ne	40439c <scsi_get_serial+0x2ac>  // b.any
  4043c8:	mov	w24, #0x0                   	// #0
  4043cc:	b	404260 <scsi_get_serial+0x170>
  4043d0:	mov	x21, #0xfe                  	// #254
  4043d4:	mov	x2, x21
  4043d8:	mov	w1, #0x0                   	// #0
  4043dc:	add	x0, sp, #0x98
  4043e0:	bl	401be0 <memset@plt>
  4043e4:	mov	w5, w21
  4043e8:	add	x4, sp, #0x98
  4043ec:	mov	w3, #0x0                   	// #0
  4043f0:	mov	w2, #0x1                   	// #1
  4043f4:	mov	w1, w19
  4043f8:	mov	x0, x20
  4043fc:	bl	403254 <scsi_inquiry>
  404400:	tbnz	w0, #31, 404484 <scsi_get_serial+0x394>
  404404:	ldrb	w0, [sp, #153]
  404408:	cbnz	w0, 404474 <scsi_get_serial+0x384>
  40440c:	ldrb	w0, [sp, #155]
  404410:	cmp	w0, #0xff
  404414:	b.eq	4044bc <scsi_get_serial+0x3cc>  // b.none
  404418:	cmp	w0, #0x10
  40441c:	b.ls	404600 <scsi_get_serial+0x510>  // b.plast
  404420:	mov	x2, #0x8                   	// #8
  404424:	mov	x1, x20
  404428:	add	x0, sp, #0xa0
  40442c:	bl	4019b0 <strncmp@plt>
  404430:	cbnz	w0, 404608 <scsi_get_serial+0x518>
  404434:	mov	w0, #0x1                   	// #1
  404438:	bl	401bf0 <log_get_max_level_realm@plt>
  40443c:	cmp	w0, #0x6
  404440:	b.le	404484 <scsi_get_serial+0x394>
  404444:	add	x6, x20, #0x40
  404448:	adrp	x5, 405000 <_fini+0x324>
  40444c:	add	x5, x5, #0x8c0
  404450:	adrp	x4, 405000 <_fini+0x324>
  404454:	add	x4, x4, #0x950
  404458:	mov	w3, #0x187                 	// #391
  40445c:	adrp	x2, 405000 <_fini+0x324>
  404460:	add	x2, x2, #0x55b
  404464:	mov	w1, #0x0                   	// #0
  404468:	mov	w0, #0x407                 	// #1031
  40446c:	bl	401a60 <log_internal_realm@plt>
  404470:	b	404484 <scsi_get_serial+0x394>
  404474:	mov	w0, #0x1                   	// #1
  404478:	bl	401bf0 <log_get_max_level_realm@plt>
  40447c:	cmp	w0, #0x6
  404480:	b.gt	40448c <scsi_get_serial+0x39c>
  404484:	mov	w24, #0x1                   	// #1
  404488:	b	404260 <scsi_get_serial+0x170>
  40448c:	add	x6, x20, #0x40
  404490:	adrp	x5, 405000 <_fini+0x324>
  404494:	add	x5, x5, #0x880
  404498:	adrp	x4, 405000 <_fini+0x324>
  40449c:	add	x4, x4, #0x950
  4044a0:	mov	w3, #0x172                 	// #370
  4044a4:	adrp	x2, 405000 <_fini+0x324>
  4044a8:	add	x2, x2, #0x55b
  4044ac:	mov	w1, #0x0                   	// #0
  4044b0:	mov	w0, #0x407                 	// #1031
  4044b4:	bl	401a60 <log_internal_realm@plt>
  4044b8:	b	404484 <scsi_get_serial+0x394>
  4044bc:	mov	w0, #0x1                   	// #1
  4044c0:	bl	401bf0 <log_get_max_level_realm@plt>
  4044c4:	cmp	w0, #0x6
  4044c8:	b.le	404484 <scsi_get_serial+0x394>
  4044cc:	mov	w7, #0xff                  	// #255
  4044d0:	add	x6, x20, #0x40
  4044d4:	adrp	x5, 405000 <_fini+0x324>
  4044d8:	add	x5, x5, #0x8a0
  4044dc:	adrp	x4, 405000 <_fini+0x324>
  4044e0:	add	x4, x4, #0x950
  4044e4:	mov	w3, #0x176                 	// #374
  4044e8:	adrp	x2, 405000 <_fini+0x324>
  4044ec:	add	x2, x2, #0x55b
  4044f0:	mov	w1, #0x0                   	// #0
  4044f4:	mov	w0, #0x407                 	// #1031
  4044f8:	bl	401a60 <log_internal_realm@plt>
  4044fc:	b	404484 <scsi_get_serial+0x394>
  404500:	ldrb	w0, [sp, #155]
  404504:	add	x21, x21, #0x1
  404508:	mov	w26, w25
  40450c:	add	w2, w0, #0x3
  404510:	add	w1, w25, w21
  404514:	cmp	w2, w1
  404518:	b.lt	404560 <scsi_get_serial+0x470>  // b.tstop
  40451c:	ldrb	w0, [x21, #4]
  404520:	cmp	w0, #0x83
  404524:	b.ne	404500 <scsi_get_serial+0x410>  // b.any
  404528:	add	x0, x20, #0x3a6
  40452c:	str	x0, [sp]
  404530:	mov	x7, x28
  404534:	mov	x6, x27
  404538:	ldr	x5, [sp, #120]
  40453c:	mov	w4, w23
  404540:	add	x3, x20, #0x180
  404544:	add	x2, x20, #0x80
  404548:	mov	w1, w19
  40454c:	mov	x0, x20
  404550:	bl	403aa8 <do_scsi_page83_inquiry>
  404554:	mov	w24, w0
  404558:	cbnz	w0, 404500 <scsi_get_serial+0x410>
  40455c:	b	404260 <scsi_get_serial+0x170>
  404560:	cbz	w0, 4045c0 <scsi_get_serial+0x4d0>
  404564:	add	x25, x20, #0x180
  404568:	add	x21, x20, #0x80
  40456c:	b	404588 <scsi_get_serial+0x498>
  404570:	add	x22, x22, #0x1
  404574:	ldrb	w0, [sp, #155]
  404578:	add	w0, w0, #0x3
  40457c:	add	w1, w26, w22
  404580:	cmp	w0, w1
  404584:	b.lt	4045b8 <scsi_get_serial+0x4c8>  // b.tstop
  404588:	ldrb	w0, [x22, #4]
  40458c:	cmp	w0, #0x80
  404590:	b.ne	404570 <scsi_get_serial+0x480>  // b.any
  404594:	mov	w4, w23
  404598:	mov	x3, x25
  40459c:	mov	x2, x21
  4045a0:	mov	w1, w19
  4045a4:	mov	x0, x20
  4045a8:	bl	4038d0 <do_scsi_page80_inquiry>
  4045ac:	mov	w24, w0
  4045b0:	cbnz	w0, 404570 <scsi_get_serial+0x480>
  4045b4:	b	404260 <scsi_get_serial+0x170>
  4045b8:	mov	w24, #0x1                   	// #1
  4045bc:	b	404260 <scsi_get_serial+0x170>
  4045c0:	mov	w24, #0x1                   	// #1
  4045c4:	b	404260 <scsi_get_serial+0x170>
  4045c8:	add	x1, x20, #0x3a6
  4045cc:	str	x1, [sp]
  4045d0:	add	x7, x20, #0x395
  4045d4:	add	x6, x20, #0x384
  4045d8:	add	x5, x20, #0x284
  4045dc:	mov	w4, w23
  4045e0:	add	x3, x20, #0x180
  4045e4:	mov	x2, x0
  4045e8:	mov	w1, w19
  4045ec:	mov	x0, x20
  4045f0:	bl	403aa8 <do_scsi_page83_inquiry>
  4045f4:	cmp	w0, #0x0
  4045f8:	cset	w24, ne  // ne = any
  4045fc:	b	404260 <scsi_get_serial+0x170>
  404600:	mov	w24, #0x1                   	// #1
  404604:	cbz	w0, 404260 <scsi_get_serial+0x170>
  404608:	add	x22, sp, #0x98
  40460c:	mov	x21, x22
  404610:	add	x28, x20, #0x395
  404614:	add	x27, x20, #0x384
  404618:	add	x0, x20, #0x284
  40461c:	str	x0, [sp, #120]
  404620:	mov	w25, #0x4                   	// #4
  404624:	sub	w25, w25, w22
  404628:	b	40451c <scsi_get_serial+0x42c>
  40462c:	bl	401a10 <__stack_chk_fail@plt>

0000000000404630 <util_resolve_subsys_kernel>:
  404630:	sub	sp, sp, #0x470
  404634:	stp	x29, x30, [sp, #16]
  404638:	add	x29, sp, #0x10
  40463c:	stp	x19, x20, [sp, #32]
  404640:	stp	x21, x22, [sp, #48]
  404644:	stp	x23, x24, [sp, #64]
  404648:	mov	x22, x1
  40464c:	mov	x23, x2
  404650:	adrp	x1, 416000 <__FRAME_END__+0xfde8>
  404654:	ldr	x1, [x1, #4088]
  404658:	ldr	x2, [x1]
  40465c:	str	x2, [sp, #1128]
  404660:	mov	x2, #0x0                   	// #0
  404664:	str	xzr, [sp, #88]
  404668:	ldrb	w1, [x0]
  40466c:	cmp	w1, #0x5b
  404670:	b.ne	40487c <util_resolve_subsys_kernel+0x24c>  // b.any
  404674:	and	w24, w3, #0xff
  404678:	add	x19, sp, #0x68
  40467c:	mov	x2, x0
  404680:	mov	x1, #0x400                 	// #1024
  404684:	mov	x0, x19
  404688:	bl	401870 <strscpy@plt>
  40468c:	mov	w1, #0x2f                  	// #47
  404690:	add	x0, x19, #0x1
  404694:	bl	401ad0 <strchr@plt>
  404698:	mov	x21, x0
  40469c:	cbz	x0, 404864 <util_resolve_subsys_kernel+0x234>
  4046a0:	strb	wzr, [x21], #1
  4046a4:	mov	w1, #0x5d                  	// #93
  4046a8:	mov	x0, x21
  4046ac:	bl	401ad0 <strchr@plt>
  4046b0:	cbz	x0, 40486c <util_resolve_subsys_kernel+0x23c>
  4046b4:	strb	wzr, [x0]
  4046b8:	ldrb	w1, [x0, #1]
  4046bc:	cmp	w1, #0x2f
  4046c0:	cinc	x20, x0, eq  // eq = none
  4046c4:	ldrb	w0, [x20, #1]!
  4046c8:	cbnz	w0, 404778 <util_resolve_subsys_kernel+0x148>
  4046cc:	cbnz	w24, 404874 <util_resolve_subsys_kernel+0x244>
  4046d0:	mov	x2, x21
  4046d4:	add	x1, sp, #0x69
  4046d8:	add	x0, sp, #0x58
  4046dc:	bl	401910 <sd_device_new_from_subsystem_sysname@plt>
  4046e0:	mov	w19, w0
  4046e4:	mov	x20, #0x0                   	// #0
  4046e8:	tbnz	w0, #31, 4047d4 <util_resolve_subsys_kernel+0x1a4>
  4046ec:	add	x1, sp, #0x60
  4046f0:	ldr	x0, [sp, #88]
  4046f4:	bl	401ba0 <sd_device_get_syspath@plt>
  4046f8:	mov	w19, w0
  4046fc:	tbnz	w0, #31, 4047d4 <util_resolve_subsys_kernel+0x1a4>
  404700:	ldr	x2, [sp, #96]
  404704:	cbz	x20, 404884 <util_resolve_subsys_kernel+0x254>
  404708:	mov	x5, #0x0                   	// #0
  40470c:	mov	x4, x20
  404710:	adrp	x3, 405000 <_fini+0x324>
  404714:	add	x3, x3, #0xab0
  404718:	mov	x1, x23
  40471c:	mov	x0, x22
  404720:	bl	4018f0 <strscpyl@plt>
  404724:	mov	w0, #0x0                   	// #0
  404728:	bl	401bf0 <log_get_max_level_realm@plt>
  40472c:	mov	w19, #0x0                   	// #0
  404730:	cmp	w0, #0x6
  404734:	b.le	4047d4 <util_resolve_subsys_kernel+0x1a4>
  404738:	str	x22, [sp, #8]
  40473c:	str	x20, [sp]
  404740:	mov	x7, x21
  404744:	add	x6, sp, #0x69
  404748:	adrp	x5, 405000 <_fini+0x324>
  40474c:	add	x5, x5, #0xa90
  404750:	adrp	x4, 405000 <_fini+0x324>
  404754:	add	x4, x4, #0xb28
  404758:	mov	w3, #0x49                  	// #73
  40475c:	adrp	x2, 405000 <_fini+0x324>
  404760:	add	x2, x2, #0xa73
  404764:	mov	w1, #0x0                   	// #0
  404768:	mov	w0, #0x7                   	// #7
  40476c:	bl	401a60 <log_internal_realm@plt>
  404770:	mov	w19, #0x0                   	// #0
  404774:	b	4047d4 <util_resolve_subsys_kernel+0x1a4>
  404778:	mov	x2, x21
  40477c:	add	x1, sp, #0x69
  404780:	add	x0, sp, #0x58
  404784:	bl	401910 <sd_device_new_from_subsystem_sysname@plt>
  404788:	mov	w19, w0
  40478c:	tbnz	w0, #31, 4047d4 <util_resolve_subsys_kernel+0x1a4>
  404790:	cbz	w24, 4046ec <util_resolve_subsys_kernel+0xbc>
  404794:	add	x2, sp, #0x60
  404798:	mov	x1, x20
  40479c:	ldr	x0, [sp, #88]
  4047a0:	bl	401af0 <sd_device_get_sysattr_value@plt>
  4047a4:	mov	w19, w0
  4047a8:	cmp	w0, #0x0
  4047ac:	ccmn	w0, #0x2, #0x4, lt  // lt = tstop
  4047b0:	b.ne	4047d4 <util_resolve_subsys_kernel+0x1a4>  // b.any
  4047b4:	cmn	w0, #0x2
  4047b8:	b.ne	404814 <util_resolve_subsys_kernel+0x1e4>  // b.any
  4047bc:	strb	wzr, [x22]
  4047c0:	mov	w0, #0x0                   	// #0
  4047c4:	bl	401bf0 <log_get_max_level_realm@plt>
  4047c8:	mov	w19, #0x0                   	// #0
  4047cc:	cmp	w0, #0x6
  4047d0:	b.gt	404828 <util_resolve_subsys_kernel+0x1f8>
  4047d4:	ldr	x0, [sp, #88]
  4047d8:	cbz	x0, 4047e0 <util_resolve_subsys_kernel+0x1b0>
  4047dc:	bl	401b30 <sd_device_unref@plt>
  4047e0:	adrp	x0, 416000 <__FRAME_END__+0xfde8>
  4047e4:	ldr	x0, [x0, #4088]
  4047e8:	ldr	x1, [sp, #1128]
  4047ec:	ldr	x0, [x0]
  4047f0:	eor	x0, x1, x0
  4047f4:	cbnz	x0, 4048bc <util_resolve_subsys_kernel+0x28c>
  4047f8:	mov	w0, w19
  4047fc:	ldp	x19, x20, [sp, #32]
  404800:	ldp	x21, x22, [sp, #48]
  404804:	ldp	x23, x24, [sp, #64]
  404808:	ldp	x29, x30, [sp, #16]
  40480c:	add	sp, sp, #0x470
  404810:	ret
  404814:	ldr	x2, [sp, #96]
  404818:	mov	x1, x23
  40481c:	mov	x0, x22
  404820:	bl	401870 <strscpy@plt>
  404824:	b	4047c0 <util_resolve_subsys_kernel+0x190>
  404828:	str	x22, [sp, #8]
  40482c:	str	x20, [sp]
  404830:	mov	x7, x21
  404834:	add	x6, sp, #0x69
  404838:	adrp	x5, 405000 <_fini+0x324>
  40483c:	add	x5, x5, #0xa50
  404840:	adrp	x4, 405000 <_fini+0x324>
  404844:	add	x4, x4, #0xb28
  404848:	mov	w3, #0x42                  	// #66
  40484c:	adrp	x2, 405000 <_fini+0x324>
  404850:	add	x2, x2, #0xa73
  404854:	mov	w1, #0x0                   	// #0
  404858:	mov	w0, #0x7                   	// #7
  40485c:	bl	401a60 <log_internal_realm@plt>
  404860:	b	4047d4 <util_resolve_subsys_kernel+0x1a4>
  404864:	mov	w19, #0xffffffea            	// #-22
  404868:	b	4047d4 <util_resolve_subsys_kernel+0x1a4>
  40486c:	mov	w19, #0xffffffea            	// #-22
  404870:	b	4047d4 <util_resolve_subsys_kernel+0x1a4>
  404874:	mov	w19, #0xffffffea            	// #-22
  404878:	b	4047d4 <util_resolve_subsys_kernel+0x1a4>
  40487c:	mov	w19, #0xffffffea            	// #-22
  404880:	b	4047e0 <util_resolve_subsys_kernel+0x1b0>
  404884:	mov	x5, #0x0                   	// #0
  404888:	mov	x4, #0x0                   	// #0
  40488c:	mov	x3, #0x0                   	// #0
  404890:	mov	x1, x23
  404894:	mov	x0, x22
  404898:	bl	4018f0 <strscpyl@plt>
  40489c:	mov	w0, #0x0                   	// #0
  4048a0:	bl	401bf0 <log_get_max_level_realm@plt>
  4048a4:	mov	w19, #0x0                   	// #0
  4048a8:	cmp	w0, #0x6
  4048ac:	b.le	4047d4 <util_resolve_subsys_kernel+0x1a4>
  4048b0:	adrp	x0, 405000 <_fini+0x324>
  4048b4:	add	x20, x0, #0x1f8
  4048b8:	b	404738 <util_resolve_subsys_kernel+0x108>
  4048bc:	bl	401a10 <__stack_chk_fail@plt>

00000000004048c0 <util_path_encode>:
  4048c0:	stp	x29, x30, [sp, #-16]!
  4048c4:	mov	x29, sp
  4048c8:	cbz	x0, 4048f4 <util_path_encode+0x34>
  4048cc:	mov	x4, x0
  4048d0:	cbz	x1, 404920 <util_path_encode+0x60>
  4048d4:	ldrb	w3, [x4], #1
  4048d8:	mov	x0, #0x0                   	// #0
  4048dc:	cbz	w3, 404918 <util_path_encode+0x58>
  4048e0:	mov	w7, #0x785c                	// #30812
  4048e4:	movk	w7, #0x6335, lsl #16
  4048e8:	mov	w6, #0x785c                	// #30812
  4048ec:	movk	w6, #0x6632, lsl #16
  4048f0:	b	404984 <util_path_encode+0xc4>
  4048f4:	adrp	x4, 405000 <_fini+0x324>
  4048f8:	add	x4, x4, #0xae0
  4048fc:	mov	w3, #0x51                  	// #81
  404900:	adrp	x2, 405000 <_fini+0x324>
  404904:	add	x2, x2, #0xa73
  404908:	adrp	x1, 405000 <_fini+0x324>
  40490c:	add	x1, x1, #0xab8
  404910:	mov	w0, #0x0                   	// #0
  404914:	bl	401960 <log_assert_failed_realm@plt>
  404918:	mov	x0, #0x0                   	// #0
  40491c:	b	4049a4 <util_path_encode+0xe4>
  404920:	adrp	x4, 405000 <_fini+0x324>
  404924:	add	x4, x4, #0xae0
  404928:	mov	w3, #0x52                  	// #82
  40492c:	adrp	x2, 405000 <_fini+0x324>
  404930:	add	x2, x2, #0xa73
  404934:	adrp	x1, 405000 <_fini+0x324>
  404938:	add	x1, x1, #0xac0
  40493c:	mov	w0, #0x0                   	// #0
  404940:	bl	401960 <log_assert_failed_realm@plt>
  404944:	add	x3, x0, #0x4
  404948:	cmp	x3, x2
  40494c:	b.cs	4049b0 <util_path_encode+0xf0>  // b.hs, b.nlast
  404950:	str	w6, [x1, x0]
  404954:	mov	x0, x3
  404958:	b	40497c <util_path_encode+0xbc>
  40495c:	add	x3, x0, #0x4
  404960:	cmp	x3, x2
  404964:	b.cs	4049b8 <util_path_encode+0xf8>  // b.hs, b.nlast
  404968:	str	w7, [x1, x0]
  40496c:	mov	x0, x3
  404970:	b	40497c <util_path_encode+0xbc>
  404974:	strb	w3, [x1, x0]
  404978:	mov	x0, x5
  40497c:	ldrb	w3, [x4], #1
  404980:	cbz	w3, 4049a4 <util_path_encode+0xe4>
  404984:	cmp	w3, #0x2f
  404988:	b.eq	404944 <util_path_encode+0x84>  // b.none
  40498c:	cmp	w3, #0x5c
  404990:	b.eq	40495c <util_path_encode+0x9c>  // b.none
  404994:	add	x5, x0, #0x1
  404998:	cmp	x5, x2
  40499c:	b.cc	404974 <util_path_encode+0xb4>  // b.lo, b.ul, b.last
  4049a0:	mov	x0, #0x0                   	// #0
  4049a4:	strb	wzr, [x1, x0]
  4049a8:	ldp	x29, x30, [sp], #16
  4049ac:	ret
  4049b0:	mov	x0, #0x0                   	// #0
  4049b4:	b	4049a4 <util_path_encode+0xe4>
  4049b8:	mov	x0, #0x0                   	// #0
  4049bc:	b	4049a4 <util_path_encode+0xe4>

00000000004049c0 <util_replace_whitespace>:
  4049c0:	stp	x29, x30, [sp, #-96]!
  4049c4:	mov	x29, sp
  4049c8:	stp	x19, x20, [sp, #16]
  4049cc:	stp	x21, x22, [sp, #32]
  4049d0:	stp	x23, x24, [sp, #48]
  4049d4:	stp	x25, x26, [sp, #64]
  4049d8:	stp	x27, x28, [sp, #80]
  4049dc:	cbz	x0, 404a20 <util_replace_whitespace+0x60>
  4049e0:	mov	x22, x0
  4049e4:	mov	x25, x1
  4049e8:	mov	x24, x2
  4049ec:	cbz	x1, 404a44 <util_replace_whitespace+0x84>
  4049f0:	adrp	x1, 405000 <_fini+0x324>
  4049f4:	add	x1, x1, #0xad8
  4049f8:	bl	4019d0 <strspn@plt>
  4049fc:	mov	x19, x0
  404a00:	mov	x20, #0x0                   	// #0
  404a04:	mov	w23, #0x0                   	// #0
  404a08:	mov	w27, #0x1                   	// #1
  404a0c:	mov	w26, #0x0                   	// #0
  404a10:	mov	w28, #0x5f                  	// #95
  404a14:	cmp	x0, x24
  404a18:	b.cc	404a94 <util_replace_whitespace+0xd4>  // b.lo, b.ul, b.last
  404a1c:	b	404ac0 <util_replace_whitespace+0x100>
  404a20:	adrp	x4, 405000 <_fini+0x324>
  404a24:	add	x4, x4, #0xaf8
  404a28:	mov	w3, #0x84                  	// #132
  404a2c:	adrp	x2, 405000 <_fini+0x324>
  404a30:	add	x2, x2, #0xa73
  404a34:	adrp	x1, 405000 <_fini+0x324>
  404a38:	add	x1, x1, #0xac8
  404a3c:	mov	w0, #0x0                   	// #0
  404a40:	bl	401960 <log_assert_failed_realm@plt>
  404a44:	adrp	x4, 405000 <_fini+0x324>
  404a48:	add	x4, x4, #0xaf8
  404a4c:	mov	w3, #0x85                  	// #133
  404a50:	adrp	x2, 405000 <_fini+0x324>
  404a54:	add	x2, x2, #0xa73
  404a58:	adrp	x1, 405000 <_fini+0x324>
  404a5c:	add	x1, x1, #0xad0
  404a60:	mov	w0, #0x0                   	// #0
  404a64:	bl	401960 <log_assert_failed_realm@plt>
  404a68:	strb	w28, [x25, x20]
  404a6c:	mov	x20, x0
  404a70:	ldrb	w0, [x22, x19]
  404a74:	strb	w0, [x25, x20]
  404a78:	add	x20, x20, #0x1
  404a7c:	mov	w23, w26
  404a80:	add	x19, x19, #0x1
  404a84:	cmp	x20, x19
  404a88:	csel	x0, x20, x19, cs  // cs = hs, nlast
  404a8c:	cmp	x0, x24
  404a90:	b.cs	404ac0 <util_replace_whitespace+0x100>  // b.hs, b.nlast
  404a94:	ldrb	w21, [x22, x19]
  404a98:	cbz	w21, 404ac0 <util_replace_whitespace+0x100>
  404a9c:	bl	401930 <__ctype_b_loc@plt>
  404aa0:	and	x21, x21, #0xff
  404aa4:	ldr	x0, [x0]
  404aa8:	ldrh	w0, [x0, x21, lsl #1]
  404aac:	tbnz	w0, #13, 404ae4 <util_replace_whitespace+0x124>
  404ab0:	cbz	w23, 404a70 <util_replace_whitespace+0xb0>
  404ab4:	add	x0, x20, #0x1
  404ab8:	cmp	x0, x24
  404abc:	b.cc	404a68 <util_replace_whitespace+0xa8>  // b.lo, b.ul, b.last
  404ac0:	strb	wzr, [x25, x20]
  404ac4:	mov	x0, x20
  404ac8:	ldp	x19, x20, [sp, #16]
  404acc:	ldp	x21, x22, [sp, #32]
  404ad0:	ldp	x23, x24, [sp, #48]
  404ad4:	ldp	x25, x26, [sp, #64]
  404ad8:	ldp	x27, x28, [sp, #80]
  404adc:	ldp	x29, x30, [sp], #96
  404ae0:	ret
  404ae4:	mov	w23, w27
  404ae8:	b	404a80 <util_replace_whitespace+0xc0>

0000000000404aec <util_replace_chars>:
  404aec:	stp	x29, x30, [sp, #-96]!
  404af0:	mov	x29, sp
  404af4:	cbz	x0, 404b44 <util_replace_chars+0x58>
  404af8:	stp	x19, x20, [sp, #16]
  404afc:	stp	x21, x22, [sp, #32]
  404b00:	stp	x23, x24, [sp, #48]
  404b04:	mov	x20, x0
  404b08:	mov	x22, x1
  404b0c:	ldrb	w0, [x0]
  404b10:	mov	x21, x20
  404b14:	mov	x23, #0x0                   	// #0
  404b18:	mov	x19, #0x0                   	// #0
  404b1c:	cbz	w0, 404b3c <util_replace_chars+0x50>
  404b20:	stp	x25, x26, [sp, #64]
  404b24:	str	x27, [sp, #80]
  404b28:	mov	x24, #0xffffffffffffffff    	// #-1
  404b2c:	mov	w25, #0x5f                  	// #95
  404b30:	mov	w26, #0x20                  	// #32
  404b34:	mov	w27, #0x20                  	// #32
  404b38:	b	404b8c <util_replace_chars+0xa0>
  404b3c:	mov	x23, #0x0                   	// #0
  404b40:	b	404c2c <util_replace_chars+0x140>
  404b44:	stp	x19, x20, [sp, #16]
  404b48:	stp	x21, x22, [sp, #32]
  404b4c:	stp	x23, x24, [sp, #48]
  404b50:	stp	x25, x26, [sp, #64]
  404b54:	str	x27, [sp, #80]
  404b58:	adrp	x4, 405000 <_fini+0x324>
  404b5c:	add	x4, x4, #0xb10
  404b60:	mov	w3, #0xa1                  	// #161
  404b64:	adrp	x2, 405000 <_fini+0x324>
  404b68:	add	x2, x2, #0xa73
  404b6c:	adrp	x1, 405000 <_fini+0x324>
  404b70:	add	x1, x1, #0xac8
  404b74:	mov	w0, #0x0                   	// #0
  404b78:	bl	401960 <log_assert_failed_realm@plt>
  404b7c:	add	x19, x19, #0x1
  404b80:	add	x21, x20, x19
  404b84:	ldrb	w0, [x20, x19]
  404b88:	cbz	w0, 404c24 <util_replace_chars+0x138>
  404b8c:	mov	x1, x22
  404b90:	bl	401ac0 <whitelisted_char_for_devnode@plt>
  404b94:	cbnz	w0, 404b7c <util_replace_chars+0x90>
  404b98:	ldrb	w0, [x21]
  404b9c:	cmp	w0, #0x5c
  404ba0:	b.ne	404bb4 <util_replace_chars+0xc8>  // b.any
  404ba4:	add	x0, x20, x19
  404ba8:	ldrb	w0, [x0, #1]
  404bac:	cmp	w0, #0x78
  404bb0:	b.eq	404bf4 <util_replace_chars+0x108>  // b.none
  404bb4:	mov	x1, x24
  404bb8:	mov	x0, x21
  404bbc:	bl	401970 <utf8_encoded_valid_unichar@plt>
  404bc0:	cmp	w0, #0x1
  404bc4:	b.gt	404bfc <util_replace_chars+0x110>
  404bc8:	bl	401930 <__ctype_b_loc@plt>
  404bcc:	ldrb	w1, [x21]
  404bd0:	ldr	x0, [x0]
  404bd4:	ldrh	w0, [x0, x1, lsl #1]
  404bd8:	tst	x0, #0x2000
  404bdc:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  404be0:	b.ne	404c04 <util_replace_chars+0x118>  // b.any
  404be4:	strb	w25, [x21]
  404be8:	add	x19, x19, #0x1
  404bec:	add	x23, x23, #0x1
  404bf0:	b	404b80 <util_replace_chars+0x94>
  404bf4:	add	x19, x19, #0x2
  404bf8:	b	404b80 <util_replace_chars+0x94>
  404bfc:	add	x19, x19, w0, sxtw
  404c00:	b	404b80 <util_replace_chars+0x94>
  404c04:	mov	w1, w26
  404c08:	mov	x0, x22
  404c0c:	bl	401ad0 <strchr@plt>
  404c10:	cbz	x0, 404be4 <util_replace_chars+0xf8>
  404c14:	strb	w27, [x21]
  404c18:	add	x19, x19, #0x1
  404c1c:	add	x23, x23, #0x1
  404c20:	b	404b80 <util_replace_chars+0x94>
  404c24:	ldp	x25, x26, [sp, #64]
  404c28:	ldr	x27, [sp, #80]
  404c2c:	mov	x0, x23
  404c30:	ldp	x19, x20, [sp, #16]
  404c34:	ldp	x21, x22, [sp, #32]
  404c38:	ldp	x23, x24, [sp, #48]
  404c3c:	ldp	x29, x30, [sp], #96
  404c40:	ret

0000000000404c44 <udev_util_encode_string>:
  404c44:	stp	x29, x30, [sp, #-16]!
  404c48:	mov	x29, sp
  404c4c:	bl	401990 <encode_devnode_name@plt>
  404c50:	ldp	x29, x30, [sp], #16
  404c54:	ret

0000000000404c58 <__libc_csu_init>:
  404c58:	stp	x29, x30, [sp, #-64]!
  404c5c:	mov	x29, sp
  404c60:	stp	x19, x20, [sp, #16]
  404c64:	adrp	x20, 416000 <__FRAME_END__+0xfde8>
  404c68:	add	x20, x20, #0xbc0
  404c6c:	stp	x21, x22, [sp, #32]
  404c70:	adrp	x21, 416000 <__FRAME_END__+0xfde8>
  404c74:	add	x21, x21, #0xbb8
  404c78:	sub	x20, x20, x21
  404c7c:	mov	w22, w0
  404c80:	stp	x23, x24, [sp, #48]
  404c84:	mov	x23, x1
  404c88:	mov	x24, x2
  404c8c:	bl	401828 <_init>
  404c90:	cmp	xzr, x20, asr #3
  404c94:	b.eq	404cc0 <__libc_csu_init+0x68>  // b.none
  404c98:	asr	x20, x20, #3
  404c9c:	mov	x19, #0x0                   	// #0
  404ca0:	ldr	x3, [x21, x19, lsl #3]
  404ca4:	mov	x2, x24
  404ca8:	add	x19, x19, #0x1
  404cac:	mov	x1, x23
  404cb0:	mov	w0, w22
  404cb4:	blr	x3
  404cb8:	cmp	x20, x19
  404cbc:	b.ne	404ca0 <__libc_csu_init+0x48>  // b.any
  404cc0:	ldp	x19, x20, [sp, #16]
  404cc4:	ldp	x21, x22, [sp, #32]
  404cc8:	ldp	x23, x24, [sp, #48]
  404ccc:	ldp	x29, x30, [sp], #64
  404cd0:	ret
  404cd4:	nop

0000000000404cd8 <__libc_csu_fini>:
  404cd8:	ret

Disassembly of section .fini:

0000000000404cdc <_fini>:
  404cdc:	stp	x29, x30, [sp, #-16]!
  404ce0:	mov	x29, sp
  404ce4:	ldp	x29, x30, [sp], #16
  404ce8:	ret
