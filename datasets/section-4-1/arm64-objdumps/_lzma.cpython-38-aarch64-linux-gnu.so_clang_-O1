
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x138dc>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0xd4>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    266c:	add	x0, x0, #0x9b0
    2670:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2674:	add	x1, x1, #0x9b0
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <_PyDict_SetItemId@plt+0x54>  // b.none
    2680:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2684:	ldr	x1, [x1, #3976]
    2688:	cbz	x1, 2694 <_PyDict_SetItemId@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    269c:	add	x0, x0, #0x9b0
    26a0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    26a4:	add	x1, x1, #0x9b0
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x94>  // b.none
    26c0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x138dc>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <_PyDict_SetItemId@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 17000 <PyInit__lzma@@Base+0x148dc>
    26e8:	ldrb	w0, [x19, #2480]
    26ec:	cbnz	w0, 2714 <_PyDict_SetItemId@plt+0xd4>
    26f0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    26f4:	ldr	x0, [x0, #3992]
    26f8:	cbz	x0, 2708 <_PyDict_SetItemId@plt+0xc8>
    26fc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2700:	ldr	x0, [x0, #552]
    2704:	bl	22b0 <__cxa_finalize@plt>
    2708:	bl	2668 <_PyDict_SetItemId@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #2480]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <_PyDict_SetItemId@plt+0x58>

0000000000002724 <PyInit__lzma@@Base>:
    2724:	stp	x29, x30, [sp, #-32]!
    2728:	stp	x20, x19, [sp, #16]
    272c:	mov	x29, sp
    2730:	mov	x0, xzr
    2734:	bl	2450 <PyTuple_New@plt>
    2738:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    273c:	str	x0, [x8, #2488]
    2740:	cbz	x0, 2b3c <PyInit__lzma@@Base+0x418>
    2744:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2748:	add	x0, x0, #0x230
    274c:	mov	w1, #0x3f5                 	// #1013
    2750:	bl	2490 <PyModule_Create2@plt>
    2754:	cbz	x0, 2b3c <PyInit__lzma@@Base+0x418>
    2758:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    275c:	add	x1, x1, #0xb96
    2760:	mov	x2, xzr
    2764:	mov	x19, x0
    2768:	bl	2220 <PyModule_AddIntConstant@plt>
    276c:	cmn	w0, #0x1
    2770:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2774:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2778:	add	x1, x1, #0xdc
    277c:	mov	w2, #0x1                   	// #1
    2780:	mov	x0, x19
    2784:	bl	2220 <PyModule_AddIntConstant@plt>
    2788:	cmn	w0, #0x1
    278c:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2790:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2794:	add	x1, x1, #0xba2
    2798:	mov	w2, #0x2                   	// #2
    279c:	mov	x0, x19
    27a0:	bl	2220 <PyModule_AddIntConstant@plt>
    27a4:	cmn	w0, #0x1
    27a8:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    27ac:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    27b0:	add	x1, x1, #0x281
    27b4:	mov	w2, #0x3                   	// #3
    27b8:	mov	x0, x19
    27bc:	bl	2220 <PyModule_AddIntConstant@plt>
    27c0:	cmn	w0, #0x1
    27c4:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    27c8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27cc:	add	x1, x1, #0xbaf
    27d0:	mov	x0, x19
    27d4:	mov	x2, xzr
    27d8:	bl	2b48 <PyInit__lzma@@Base+0x424>
    27dc:	cmn	w0, #0x1
    27e0:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    27e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27e8:	add	x1, x1, #0xbba
    27ec:	mov	w2, #0x1                   	// #1
    27f0:	mov	x0, x19
    27f4:	bl	2b48 <PyInit__lzma@@Base+0x424>
    27f8:	cmn	w0, #0x1
    27fc:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2800:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2804:	add	x1, x1, #0xbc6
    2808:	mov	w2, #0x4                   	// #4
    280c:	mov	x0, x19
    2810:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2814:	cmn	w0, #0x1
    2818:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    281c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2820:	add	x1, x1, #0xbd2
    2824:	mov	w2, #0xa                   	// #10
    2828:	mov	x0, x19
    282c:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2830:	cmn	w0, #0x1
    2834:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2838:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    283c:	add	x1, x1, #0xbdf
    2840:	mov	w2, #0xf                   	// #15
    2844:	mov	x0, x19
    2848:	bl	2b48 <PyInit__lzma@@Base+0x424>
    284c:	cmn	w0, #0x1
    2850:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2854:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2858:	add	x1, x1, #0xbec
    285c:	mov	w2, #0x10                  	// #16
    2860:	mov	x0, x19
    2864:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2868:	cmn	w0, #0x1
    286c:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2870:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2874:	mov	x2, #0x1                   	// #1
    2878:	add	x1, x1, #0xbfa
    287c:	movk	x2, #0x4000, lsl #48
    2880:	mov	x0, x19
    2884:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2888:	cmn	w0, #0x1
    288c:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2890:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2894:	add	x1, x1, #0xc07
    2898:	mov	w2, #0x21                  	// #33
    289c:	mov	x0, x19
    28a0:	bl	2b48 <PyInit__lzma@@Base+0x424>
    28a4:	cmn	w0, #0x1
    28a8:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    28ac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28b0:	add	x1, x1, #0xc14
    28b4:	mov	w2, #0x3                   	// #3
    28b8:	mov	x0, x19
    28bc:	bl	2b48 <PyInit__lzma@@Base+0x424>
    28c0:	cmn	w0, #0x1
    28c4:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    28c8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28cc:	add	x1, x1, #0xc21
    28d0:	mov	w2, #0x4                   	// #4
    28d4:	mov	x0, x19
    28d8:	bl	2b48 <PyInit__lzma@@Base+0x424>
    28dc:	cmn	w0, #0x1
    28e0:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    28e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28e8:	add	x1, x1, #0xc2c
    28ec:	mov	w2, #0x6                   	// #6
    28f0:	mov	x0, x19
    28f4:	bl	2b48 <PyInit__lzma@@Base+0x424>
    28f8:	cmn	w0, #0x1
    28fc:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2900:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2904:	add	x1, x1, #0xc38
    2908:	mov	w2, #0x7                   	// #7
    290c:	mov	x0, x19
    2910:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2914:	cmn	w0, #0x1
    2918:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    291c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2920:	add	x1, x1, #0xc43
    2924:	mov	w2, #0x8                   	// #8
    2928:	mov	x0, x19
    292c:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2930:	cmn	w0, #0x1
    2934:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2938:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    293c:	add	x1, x1, #0xc53
    2940:	mov	w2, #0x9                   	// #9
    2944:	mov	x0, x19
    2948:	bl	2b48 <PyInit__lzma@@Base+0x424>
    294c:	cmn	w0, #0x1
    2950:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2954:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2958:	add	x1, x1, #0xc60
    295c:	mov	w2, #0x5                   	// #5
    2960:	mov	x0, x19
    2964:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2968:	cmn	w0, #0x1
    296c:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2970:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2974:	add	x1, x1, #0xc6f
    2978:	mov	w2, #0x3                   	// #3
    297c:	mov	x0, x19
    2980:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2984:	cmn	w0, #0x1
    2988:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    298c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2990:	add	x1, x1, #0xc76
    2994:	mov	w2, #0x4                   	// #4
    2998:	mov	x0, x19
    299c:	bl	2b48 <PyInit__lzma@@Base+0x424>
    29a0:	cmn	w0, #0x1
    29a4:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    29a8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29ac:	add	x1, x1, #0xc7d
    29b0:	mov	w2, #0x12                  	// #18
    29b4:	mov	x0, x19
    29b8:	bl	2b48 <PyInit__lzma@@Base+0x424>
    29bc:	cmn	w0, #0x1
    29c0:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    29c4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29c8:	add	x1, x1, #0xc84
    29cc:	mov	w2, #0x13                  	// #19
    29d0:	mov	x0, x19
    29d4:	bl	2b48 <PyInit__lzma@@Base+0x424>
    29d8:	cmn	w0, #0x1
    29dc:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    29e0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29e4:	add	x1, x1, #0xc8b
    29e8:	mov	w2, #0x14                  	// #20
    29ec:	mov	x0, x19
    29f0:	bl	2b48 <PyInit__lzma@@Base+0x424>
    29f4:	cmn	w0, #0x1
    29f8:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    29fc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a00:	add	x1, x1, #0xc92
    2a04:	mov	w2, #0x1                   	// #1
    2a08:	mov	x0, x19
    2a0c:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2a10:	cmn	w0, #0x1
    2a14:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2a18:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a1c:	add	x1, x1, #0xc9c
    2a20:	mov	w2, #0x2                   	// #2
    2a24:	mov	x0, x19
    2a28:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2a2c:	cmn	w0, #0x1
    2a30:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2a34:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a38:	add	x1, x1, #0xca8
    2a3c:	mov	w2, #0x6                   	// #6
    2a40:	mov	x0, x19
    2a44:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2a48:	cmn	w0, #0x1
    2a4c:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2a50:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a54:	add	x1, x1, #0xcb7
    2a58:	mov	w2, #0x80000000            	// #-2147483648
    2a5c:	mov	x0, x19
    2a60:	bl	2b48 <PyInit__lzma@@Base+0x424>
    2a64:	cmn	w0, #0x1
    2a68:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2a6c:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2a70:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a74:	add	x0, x0, #0xcc6
    2a78:	add	x1, x1, #0xcd6
    2a7c:	mov	x2, xzr
    2a80:	mov	x3, xzr
    2a84:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    2a88:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2a8c:	str	x0, [x20, #2496]
    2a90:	cbz	x0, 2b3c <PyInit__lzma@@Base+0x418>
    2a94:	bl	2ba0 <PyInit__lzma@@Base+0x47c>
    2a98:	ldr	x2, [x20, #2496]
    2a9c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2aa0:	add	x1, x1, #0xccc
    2aa4:	mov	x0, x19
    2aa8:	bl	2590 <PyModule_AddObject@plt>
    2aac:	cmn	w0, #0x1
    2ab0:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2ab4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2ab8:	add	x0, x0, #0x298
    2abc:	bl	23e0 <PyType_Ready@plt>
    2ac0:	cmn	w0, #0x1
    2ac4:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2ac8:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2acc:	add	x20, x20, #0x298
    2ad0:	mov	x0, x20
    2ad4:	bl	2ba0 <PyInit__lzma@@Base+0x47c>
    2ad8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2adc:	add	x1, x1, #0x3e
    2ae0:	mov	x0, x19
    2ae4:	mov	x2, x20
    2ae8:	bl	2590 <PyModule_AddObject@plt>
    2aec:	cmn	w0, #0x1
    2af0:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2af4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2af8:	add	x0, x0, #0x438
    2afc:	bl	23e0 <PyType_Ready@plt>
    2b00:	cmn	w0, #0x1
    2b04:	b.eq	2b38 <PyInit__lzma@@Base+0x414>  // b.none
    2b08:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2b0c:	add	x20, x20, #0x438
    2b10:	mov	x0, x20
    2b14:	bl	2ba0 <PyInit__lzma@@Base+0x47c>
    2b18:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2b1c:	add	x1, x1, #0x1eb
    2b20:	mov	x0, x19
    2b24:	mov	x2, x20
    2b28:	bl	2590 <PyModule_AddObject@plt>
    2b2c:	cmn	w0, #0x1
    2b30:	csel	x0, xzr, x19, eq  // eq = none
    2b34:	b	2b3c <PyInit__lzma@@Base+0x418>
    2b38:	mov	x0, xzr
    2b3c:	ldp	x20, x19, [sp, #16]
    2b40:	ldp	x29, x30, [sp], #32
    2b44:	ret
    2b48:	stp	x29, x30, [sp, #-48]!
    2b4c:	str	x21, [sp, #16]
    2b50:	stp	x20, x19, [sp, #32]
    2b54:	mov	x29, sp
    2b58:	mov	x21, x0
    2b5c:	mov	x0, x2
    2b60:	mov	x20, x1
    2b64:	bl	25e0 <PyLong_FromLongLong@plt>
    2b68:	cbz	x0, 2b8c <PyInit__lzma@@Base+0x468>
    2b6c:	mov	x19, x0
    2b70:	mov	x0, x21
    2b74:	mov	x1, x20
    2b78:	mov	x2, x19
    2b7c:	bl	2590 <PyModule_AddObject@plt>
    2b80:	cbz	w0, 2b90 <PyInit__lzma@@Base+0x46c>
    2b84:	mov	x0, x19
    2b88:	bl	2f48 <PyInit__lzma@@Base+0x824>
    2b8c:	mov	w0, #0xffffffff            	// #-1
    2b90:	ldp	x20, x19, [sp, #32]
    2b94:	ldr	x21, [sp, #16]
    2b98:	ldp	x29, x30, [sp], #48
    2b9c:	ret
    2ba0:	ldr	x8, [x0]
    2ba4:	add	x8, x8, #0x1
    2ba8:	str	x8, [x0]
    2bac:	ret
    2bb0:	stp	x29, x30, [sp, #-32]!
    2bb4:	str	x19, [sp, #16]
    2bb8:	mov	x29, sp
    2bbc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2bc0:	ldr	x0, [x1, #8]
    2bc4:	ldr	x8, [x8, #3984]
    2bc8:	cmp	x0, x8
    2bcc:	b.eq	2be4 <PyInit__lzma@@Base+0x4c0>  // b.none
    2bd0:	mov	x19, x1
    2bd4:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2bd8:	ldr	x1, [x1, #3984]
    2bdc:	bl	25a0 <PyType_IsSubtype@plt>
    2be0:	cbz	w0, 2c0c <PyInit__lzma@@Base+0x4e8>
    2be4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2be8:	ldr	x8, [x8, #4016]
    2bec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2bf0:	add	x1, x1, #0xd3b
    2bf4:	ldr	x0, [x8]
    2bf8:	bl	2350 <PyErr_SetString@plt>
    2bfc:	mov	x0, xzr
    2c00:	ldr	x19, [sp, #16]
    2c04:	ldp	x29, x30, [sp], #32
    2c08:	ret
    2c0c:	mov	x0, x19
    2c10:	bl	2600 <_PyLong_AsInt@plt>
    2c14:	mov	w19, w0
    2c18:	cmn	w0, #0x1
    2c1c:	b.eq	2c2c <PyInit__lzma@@Base+0x508>  // b.none
    2c20:	mov	w0, w19
    2c24:	bl	2d8c <PyInit__lzma@@Base+0x668>
    2c28:	b	2c00 <PyInit__lzma@@Base+0x4dc>
    2c2c:	bl	2480 <PyErr_Occurred@plt>
    2c30:	cbnz	x0, 2bfc <PyInit__lzma@@Base+0x4d8>
    2c34:	b	2c20 <PyInit__lzma@@Base+0x4fc>
    2c38:	sub	sp, sp, #0x30
    2c3c:	stp	x29, x30, [sp, #16]
    2c40:	str	x19, [sp, #32]
    2c44:	add	x29, sp, #0x10
    2c48:	adrp	x8, 6000 <PyInit__lzma@@Base+0x38dc>
    2c4c:	add	x8, x8, #0x2c0
    2c50:	ldr	q0, [x8]
    2c54:	mov	x0, x1
    2c58:	mov	x1, sp
    2c5c:	str	q0, [sp]
    2c60:	bl	2da8 <PyInit__lzma@@Base+0x684>
    2c64:	cbz	w0, 2c78 <PyInit__lzma@@Base+0x554>
    2c68:	ldp	x0, x1, [sp]
    2c6c:	bl	2ed0 <PyInit__lzma@@Base+0x7ac>
    2c70:	mov	x19, x0
    2c74:	b	2c7c <PyInit__lzma@@Base+0x558>
    2c78:	mov	x19, xzr
    2c7c:	ldr	x8, [sp]
    2c80:	cmn	x8, #0x1
    2c84:	b.eq	2c90 <PyInit__lzma@@Base+0x56c>  // b.none
    2c88:	ldr	x0, [sp, #8]
    2c8c:	bl	2270 <PyMem_Free@plt>
    2c90:	mov	x0, x19
    2c94:	ldr	x19, [sp, #32]
    2c98:	ldp	x29, x30, [sp, #16]
    2c9c:	add	sp, sp, #0x30
    2ca0:	ret
    2ca4:	sub	sp, sp, #0x70
    2ca8:	stp	x29, x30, [sp, #80]
    2cac:	str	x19, [sp, #96]
    2cb0:	add	x29, sp, #0x50
    2cb4:	mov	x19, x1
    2cb8:	movi	v0.2d, #0x0
    2cbc:	cmp	x2, #0x2
    2cc0:	stp	q0, q0, [sp, #48]
    2cc4:	stp	q0, q0, [sp, #16]
    2cc8:	str	q0, [sp]
    2ccc:	b.eq	2cf0 <PyInit__lzma@@Base+0x5cc>  // b.none
    2cd0:	mov	x8, x2
    2cd4:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2cd8:	add	x0, x0, #0xd21
    2cdc:	mov	w2, #0x2                   	// #2
    2ce0:	mov	w3, #0x2                   	// #2
    2ce4:	mov	x1, x8
    2ce8:	bl	2460 <_PyArg_CheckPositional@plt>
    2cec:	cbz	w0, 2d14 <PyInit__lzma@@Base+0x5f0>
    2cf0:	ldr	x0, [x19]
    2cf4:	add	x1, x29, #0x18
    2cf8:	bl	3484 <PyInit__lzma@@Base+0xd60>
    2cfc:	cbz	w0, 2d14 <PyInit__lzma@@Base+0x5f0>
    2d00:	ldr	x0, [x19, #8]
    2d04:	mov	x1, sp
    2d08:	mov	w2, wzr
    2d0c:	bl	2560 <PyObject_GetBuffer@plt>
    2d10:	cbz	w0, 2d3c <PyInit__lzma@@Base+0x618>
    2d14:	mov	x19, xzr
    2d18:	ldr	x8, [sp, #8]
    2d1c:	cbz	x8, 2d28 <PyInit__lzma@@Base+0x604>
    2d20:	mov	x0, sp
    2d24:	bl	2290 <PyBuffer_Release@plt>
    2d28:	mov	x0, x19
    2d2c:	ldr	x19, [sp, #96]
    2d30:	ldp	x29, x30, [sp, #80]
    2d34:	add	sp, sp, #0x70
    2d38:	ret
    2d3c:	mov	x0, sp
    2d40:	mov	w1, #0x43                  	// #67
    2d44:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2d48:	cbz	w0, 2d68 <PyInit__lzma@@Base+0x644>
    2d4c:	ldr	x0, [x29, #24]
    2d50:	mov	x1, sp
    2d54:	bl	34c0 <PyInit__lzma@@Base+0xd9c>
    2d58:	mov	x19, x0
    2d5c:	ldr	x8, [sp, #8]
    2d60:	cbnz	x8, 2d20 <PyInit__lzma@@Base+0x5fc>
    2d64:	b	2d28 <PyInit__lzma@@Base+0x604>
    2d68:	ldr	x3, [x19, #8]
    2d6c:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2d70:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2d74:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    2d78:	add	x0, x0, #0xd21
    2d7c:	add	x1, x1, #0x1b
    2d80:	add	x2, x2, #0x26
    2d84:	bl	2400 <_PyArg_BadArgument@plt>
    2d88:	b	2d14 <PyInit__lzma@@Base+0x5f0>
    2d8c:	stp	x29, x30, [sp, #-16]!
    2d90:	mov	x29, sp
    2d94:	bl	25c0 <lzma_check_is_supported@plt>
    2d98:	and	x0, x0, #0xff
    2d9c:	bl	2430 <PyBool_FromLong@plt>
    2da0:	ldp	x29, x30, [sp], #16
    2da4:	ret
    2da8:	stp	x29, x30, [sp, #-48]!
    2dac:	str	x21, [sp, #16]
    2db0:	stp	x20, x19, [sp, #32]
    2db4:	mov	x29, sp
    2db8:	mov	x19, x1
    2dbc:	mov	x20, x0
    2dc0:	bl	2230 <PyMapping_Check@plt>
    2dc4:	cbz	w0, 2e1c <PyInit__lzma@@Base+0x6f8>
    2dc8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2dcc:	add	x1, x1, #0xd94
    2dd0:	mov	x0, x20
    2dd4:	bl	2360 <PyMapping_GetItemString@plt>
    2dd8:	cbz	x0, 2e30 <PyInit__lzma@@Base+0x70c>
    2ddc:	mov	x21, x0
    2de0:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2de4:	str	x0, [x19]
    2de8:	mov	x0, x21
    2dec:	bl	2f48 <PyInit__lzma@@Base+0x824>
    2df0:	bl	2480 <PyErr_Occurred@plt>
    2df4:	cbnz	x0, 2e5c <PyInit__lzma@@Base+0x738>
    2df8:	ldr	x2, [x19]
    2dfc:	cmp	x2, #0x20
    2e00:	b.gt	2e70 <PyInit__lzma@@Base+0x74c>
    2e04:	sub	x8, x2, #0x4
    2e08:	cmp	x8, #0x6
    2e0c:	b.cs	2e94 <PyInit__lzma@@Base+0x770>  // b.hs, b.nlast
    2e10:	mov	x0, x20
    2e14:	bl	31a4 <PyInit__lzma@@Base+0xa80>
    2e18:	b	2ea4 <PyInit__lzma@@Base+0x780>
    2e1c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2e20:	ldr	x8, [x8, #4016]
    2e24:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2e28:	add	x1, x1, #0xd60
    2e2c:	b	2e54 <PyInit__lzma@@Base+0x730>
    2e30:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2e34:	ldr	x8, [x8, #4024]
    2e38:	ldr	x0, [x8]
    2e3c:	bl	23a0 <PyErr_ExceptionMatches@plt>
    2e40:	cbz	w0, 2e60 <PyInit__lzma@@Base+0x73c>
    2e44:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2e48:	ldr	x8, [x8, #4008]
    2e4c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2e50:	add	x1, x1, #0xd97
    2e54:	ldr	x0, [x8]
    2e58:	bl	2350 <PyErr_SetString@plt>
    2e5c:	mov	w0, wzr
    2e60:	ldp	x20, x19, [sp, #32]
    2e64:	ldr	x21, [sp, #16]
    2e68:	ldp	x29, x30, [sp], #48
    2e6c:	ret
    2e70:	mov	x8, #0x1                   	// #1
    2e74:	movk	x8, #0x4000, lsl #48
    2e78:	cmp	x2, x8
    2e7c:	b.eq	2e88 <PyInit__lzma@@Base+0x764>  // b.none
    2e80:	cmp	x2, #0x21
    2e84:	b.ne	2eb4 <PyInit__lzma@@Base+0x790>  // b.any
    2e88:	mov	x0, x20
    2e8c:	bl	2f74 <PyInit__lzma@@Base+0x850>
    2e90:	b	2ea4 <PyInit__lzma@@Base+0x780>
    2e94:	cmp	x2, #0x3
    2e98:	b.ne	2eb4 <PyInit__lzma@@Base+0x790>  // b.any
    2e9c:	mov	x0, x20
    2ea0:	bl	3108 <PyInit__lzma@@Base+0x9e4>
    2ea4:	cmp	x0, #0x0
    2ea8:	str	x0, [x19, #8]
    2eac:	cset	w0, ne  // ne = any
    2eb0:	b	2e60 <PyInit__lzma@@Base+0x73c>
    2eb4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2eb8:	ldr	x8, [x8, #4008]
    2ebc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ec0:	add	x1, x1, #0xdc0
    2ec4:	ldr	x0, [x8]
    2ec8:	bl	25b0 <PyErr_Format@plt>
    2ecc:	b	2e5c <PyInit__lzma@@Base+0x738>
    2ed0:	sub	sp, sp, #0x30
    2ed4:	stp	x29, x30, [sp, #16]
    2ed8:	str	x19, [sp, #32]
    2edc:	add	x29, sp, #0x10
    2ee0:	stp	x0, x1, [sp]
    2ee4:	add	x0, x29, #0x1c
    2ee8:	mov	x1, sp
    2eec:	bl	23b0 <lzma_properties_size@plt>
    2ef0:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    2ef4:	cbz	w0, 2f1c <PyInit__lzma@@Base+0x7f8>
    2ef8:	mov	x19, xzr
    2efc:	mov	x0, x19
    2f00:	bl	346c <PyInit__lzma@@Base+0xd48>
    2f04:	mov	x19, xzr
    2f08:	mov	x0, x19
    2f0c:	ldr	x19, [sp, #32]
    2f10:	ldp	x29, x30, [sp, #16]
    2f14:	add	sp, sp, #0x30
    2f18:	ret
    2f1c:	ldr	w1, [x29, #28]
    2f20:	mov	x0, xzr
    2f24:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2f28:	mov	x19, x0
    2f2c:	cbz	x0, 2efc <PyInit__lzma@@Base+0x7d8>
    2f30:	add	x1, x19, #0x20
    2f34:	mov	x0, sp
    2f38:	bl	2570 <lzma_properties_encode@plt>
    2f3c:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    2f40:	cbnz	w0, 2efc <PyInit__lzma@@Base+0x7d8>
    2f44:	b	2f08 <PyInit__lzma@@Base+0x7e4>
    2f48:	stp	x29, x30, [sp, #-16]!
    2f4c:	mov	x29, sp
    2f50:	ldr	x8, [x0]
    2f54:	subs	x8, x8, #0x1
    2f58:	str	x8, [x0]
    2f5c:	b.eq	2f68 <PyInit__lzma@@Base+0x844>  // b.none
    2f60:	ldp	x29, x30, [sp], #16
    2f64:	ret
    2f68:	bl	22f0 <_Py_Dealloc@plt>
    2f6c:	ldp	x29, x30, [sp], #16
    2f70:	ret
    2f74:	sub	sp, sp, #0xb0
    2f78:	stp	x29, x30, [sp, #128]
    2f7c:	str	x21, [sp, #144]
    2f80:	stp	x20, x19, [sp, #160]
    2f84:	add	x29, sp, #0x80
    2f88:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2f8c:	mov	w8, #0x6                   	// #6
    2f90:	add	x1, x1, #0xdd8
    2f94:	mov	x19, x0
    2f98:	stur	w8, [x29, #-12]
    2f9c:	bl	2360 <PyMapping_GetItemString@plt>
    2fa0:	stur	x0, [x29, #-8]
    2fa4:	cbz	x0, 2fc8 <PyInit__lzma@@Base+0x8a4>
    2fa8:	sub	x1, x29, #0xc
    2fac:	bl	3234 <PyInit__lzma@@Base+0xb10>
    2fb0:	ldur	x8, [x29, #-8]
    2fb4:	mov	w20, w0
    2fb8:	mov	x0, x8
    2fbc:	bl	2f48 <PyInit__lzma@@Base+0x824>
    2fc0:	cbnz	w20, 2fe0 <PyInit__lzma@@Base+0x8bc>
    2fc4:	b	3038 <PyInit__lzma@@Base+0x914>
    2fc8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2fcc:	ldr	x8, [x8, #4024]
    2fd0:	ldr	x0, [x8]
    2fd4:	bl	23a0 <PyErr_ExceptionMatches@plt>
    2fd8:	cbz	w0, 3038 <PyInit__lzma@@Base+0x914>
    2fdc:	bl	2420 <PyErr_Clear@plt>
    2fe0:	mov	w0, #0x70                  	// #112
    2fe4:	bl	2620 <PyMem_Malloc@plt>
    2fe8:	cbz	x0, 3040 <PyInit__lzma@@Base+0x91c>
    2fec:	movi	v0.2d, #0x0
    2ff0:	stp	q0, q0, [x0, #80]
    2ff4:	stp	q0, q0, [x0, #48]
    2ff8:	stp	q0, q0, [x0, #16]
    2ffc:	str	q0, [x0]
    3000:	ldur	w21, [x29, #-12]
    3004:	mov	x20, x0
    3008:	mov	w1, w21
    300c:	bl	2610 <lzma_lzma_preset@plt>
    3010:	tst	w0, #0xff
    3014:	b.eq	304c <PyInit__lzma@@Base+0x928>  // b.none
    3018:	mov	x0, x20
    301c:	bl	2270 <PyMem_Free@plt>
    3020:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3024:	ldr	x0, [x8, #2496]
    3028:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    302c:	add	x1, x1, #0xe09
    3030:	mov	w2, w21
    3034:	bl	25b0 <PyErr_Format@plt>
    3038:	mov	x20, xzr
    303c:	b	30cc <PyInit__lzma@@Base+0x9a8>
    3040:	bl	2300 <PyErr_NoMemory@plt>
    3044:	mov	x20, x0
    3048:	b	30cc <PyInit__lzma@@Base+0x9a8>
    304c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3050:	ldr	x0, [x8, #2488]
    3054:	adrp	x6, 3000 <PyInit__lzma@@Base+0x8dc>
    3058:	adrp	x15, 3000 <PyInit__lzma@@Base+0x8dc>
    305c:	adrp	x16, 3000 <PyInit__lzma@@Base+0x8dc>
    3060:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3064:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3068:	add	x9, x20, #0x14
    306c:	add	x10, x20, #0x18
    3070:	add	x11, x20, #0x1c
    3074:	add	x8, x20, #0x20
    3078:	add	x12, x20, #0x24
    307c:	add	x13, x20, #0x28
    3080:	add	x14, x20, #0x2c
    3084:	add	x6, x6, #0x234
    3088:	add	x15, x15, #0x2fc
    308c:	add	x16, x16, #0x298
    3090:	add	x2, x2, #0xe28
    3094:	add	x3, x3, #0x658
    3098:	add	x4, x29, #0x18
    309c:	sub	x5, x29, #0x8
    30a0:	mov	x1, x19
    30a4:	mov	x7, x20
    30a8:	stp	x15, x13, [sp, #80]
    30ac:	stp	x16, x8, [sp, #48]
    30b0:	stp	x6, x14, [sp, #96]
    30b4:	stp	x6, x12, [sp, #64]
    30b8:	stp	x6, x11, [sp, #32]
    30bc:	stp	x6, x10, [sp, #16]
    30c0:	stp	x6, x9, [sp]
    30c4:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    30c8:	cbz	w0, 30e4 <PyInit__lzma@@Base+0x9c0>
    30cc:	mov	x0, x20
    30d0:	ldp	x20, x19, [sp, #160]
    30d4:	ldr	x21, [sp, #144]
    30d8:	ldp	x29, x30, [sp, #128]
    30dc:	add	sp, sp, #0xb0
    30e0:	ret
    30e4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    30e8:	ldr	x8, [x8, #4008]
    30ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    30f0:	add	x1, x1, #0xe3c
    30f4:	ldr	x0, [x8]
    30f8:	bl	2350 <PyErr_SetString@plt>
    30fc:	mov	x0, x20
    3100:	bl	2270 <PyMem_Free@plt>
    3104:	b	3038 <PyInit__lzma@@Base+0x914>
    3108:	sub	sp, sp, #0x20
    310c:	stp	x29, x30, [sp, #16]
    3110:	add	x29, sp, #0x10
    3114:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3118:	mov	x1, x0
    311c:	ldr	x0, [x8, #2488]
    3120:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3124:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3128:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    312c:	mov	w8, #0x1                   	// #1
    3130:	add	x2, x2, #0xeda
    3134:	add	x3, x3, #0x6b0
    3138:	add	x5, x5, #0x234
    313c:	add	x4, sp, #0x8
    3140:	add	x6, sp, #0x4
    3144:	str	w8, [sp, #4]
    3148:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    314c:	cbz	w0, 3174 <PyInit__lzma@@Base+0xa50>
    3150:	mov	w0, #0x28                  	// #40
    3154:	bl	2620 <PyMem_Malloc@plt>
    3158:	cbz	x0, 3194 <PyInit__lzma@@Base+0xa70>
    315c:	movi	v0.2d, #0x0
    3160:	str	xzr, [x0, #32]
    3164:	stp	q0, q0, [x0]
    3168:	ldr	w8, [sp, #4]
    316c:	str	w8, [x0, #4]
    3170:	b	3198 <PyInit__lzma@@Base+0xa74>
    3174:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3178:	ldr	x8, [x8, #4008]
    317c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3180:	add	x1, x1, #0xedf
    3184:	ldr	x0, [x8]
    3188:	bl	2350 <PyErr_SetString@plt>
    318c:	mov	x0, xzr
    3190:	b	3198 <PyInit__lzma@@Base+0xa74>
    3194:	bl	2300 <PyErr_NoMemory@plt>
    3198:	ldp	x29, x30, [sp, #16]
    319c:	add	sp, sp, #0x20
    31a0:	ret
    31a4:	sub	sp, sp, #0x20
    31a8:	stp	x29, x30, [sp, #16]
    31ac:	add	x29, sp, #0x10
    31b0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    31b4:	mov	x1, x0
    31b8:	ldr	x0, [x8, #2488]
    31bc:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    31c0:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    31c4:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    31c8:	add	x2, x2, #0xeda
    31cc:	add	x3, x3, #0x6c8
    31d0:	add	x5, x5, #0x234
    31d4:	add	x4, sp, #0x8
    31d8:	add	x6, sp, #0x4
    31dc:	str	wzr, [sp, #4]
    31e0:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    31e4:	cbz	w0, 3204 <PyInit__lzma@@Base+0xae0>
    31e8:	mov	w0, #0x4                   	// #4
    31ec:	bl	2620 <PyMem_Malloc@plt>
    31f0:	cbz	x0, 3224 <PyInit__lzma@@Base+0xb00>
    31f4:	str	wzr, [x0]
    31f8:	ldr	w8, [sp, #4]
    31fc:	str	w8, [x0]
    3200:	b	3228 <PyInit__lzma@@Base+0xb04>
    3204:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3208:	ldr	x8, [x8, #4008]
    320c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3210:	add	x1, x1, #0xf16
    3214:	ldr	x0, [x8]
    3218:	bl	2350 <PyErr_SetString@plt>
    321c:	mov	x0, xzr
    3220:	b	3228 <PyInit__lzma@@Base+0xb04>
    3224:	bl	2300 <PyErr_NoMemory@plt>
    3228:	ldp	x29, x30, [sp, #16]
    322c:	add	sp, sp, #0x20
    3230:	ret
    3234:	stp	x29, x30, [sp, #-32]!
    3238:	stp	x20, x19, [sp, #16]
    323c:	mov	x29, sp
    3240:	mov	x19, x1
    3244:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3248:	mov	x20, x0
    324c:	bl	2480 <PyErr_Occurred@plt>
    3250:	cbz	x0, 325c <PyInit__lzma@@Base+0xb38>
    3254:	mov	w0, wzr
    3258:	b	328c <PyInit__lzma@@Base+0xb68>
    325c:	lsr	x8, x20, #32
    3260:	cbz	x8, 3284 <PyInit__lzma@@Base+0xb60>
    3264:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3268:	ldr	x8, [x8, #4040]
    326c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3270:	add	x1, x1, #0xe65
    3274:	ldr	x0, [x8]
    3278:	bl	2350 <PyErr_SetString@plt>
    327c:	mov	w0, wzr
    3280:	b	328c <PyInit__lzma@@Base+0xb68>
    3284:	mov	w0, #0x1                   	// #1
    3288:	str	w20, [x19]
    328c:	ldp	x20, x19, [sp, #16]
    3290:	ldp	x29, x30, [sp], #32
    3294:	ret
    3298:	stp	x29, x30, [sp, #-32]!
    329c:	stp	x20, x19, [sp, #16]
    32a0:	mov	x29, sp
    32a4:	mov	x19, x1
    32a8:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    32ac:	mov	x20, x0
    32b0:	bl	2480 <PyErr_Occurred@plt>
    32b4:	cbz	x0, 32c0 <PyInit__lzma@@Base+0xb9c>
    32b8:	mov	w0, wzr
    32bc:	b	32f0 <PyInit__lzma@@Base+0xbcc>
    32c0:	lsr	x8, x20, #32
    32c4:	cbz	x8, 32e8 <PyInit__lzma@@Base+0xbc4>
    32c8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    32cc:	ldr	x8, [x8, #4040]
    32d0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    32d4:	add	x1, x1, #0xe87
    32d8:	ldr	x0, [x8]
    32dc:	bl	2350 <PyErr_SetString@plt>
    32e0:	mov	w0, wzr
    32e4:	b	32f0 <PyInit__lzma@@Base+0xbcc>
    32e8:	mov	w0, #0x1                   	// #1
    32ec:	str	w20, [x19]
    32f0:	ldp	x20, x19, [sp, #16]
    32f4:	ldp	x29, x30, [sp], #32
    32f8:	ret
    32fc:	stp	x29, x30, [sp, #-32]!
    3300:	stp	x20, x19, [sp, #16]
    3304:	mov	x29, sp
    3308:	mov	x19, x1
    330c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3310:	mov	x20, x0
    3314:	bl	2480 <PyErr_Occurred@plt>
    3318:	cbz	x0, 3324 <PyInit__lzma@@Base+0xc00>
    331c:	mov	w0, wzr
    3320:	b	3354 <PyInit__lzma@@Base+0xc30>
    3324:	lsr	x8, x20, #32
    3328:	cbz	x8, 334c <PyInit__lzma@@Base+0xc28>
    332c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3330:	ldr	x8, [x8, #4040]
    3334:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3338:	add	x1, x1, #0xeaa
    333c:	ldr	x0, [x8]
    3340:	bl	2350 <PyErr_SetString@plt>
    3344:	mov	w0, wzr
    3348:	b	3354 <PyInit__lzma@@Base+0xc30>
    334c:	mov	w0, #0x1                   	// #1
    3350:	str	w20, [x19]
    3354:	ldp	x20, x19, [sp, #16]
    3358:	ldp	x29, x30, [sp], #32
    335c:	ret
    3360:	stp	x29, x30, [sp, #-16]!
    3364:	mov	x29, sp
    3368:	mov	w2, w0
    336c:	cmp	w0, #0xb
    3370:	b.hi	344c <PyInit__lzma@@Base+0xd28>  // b.pmore
    3374:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    3378:	mov	w8, w2
    337c:	add	x9, x9, #0xb50
    3380:	adr	x10, 3394 <PyInit__lzma@@Base+0xc70>
    3384:	ldrb	w11, [x9, x8]
    3388:	add	x10, x10, x11, lsl #2
    338c:	mov	w0, wzr
    3390:	br	x10
    3394:	ldp	x29, x30, [sp], #16
    3398:	ret
    339c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    33a0:	ldr	x0, [x8, #2496]
    33a4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33a8:	add	x1, x1, #0xf3e
    33ac:	bl	2350 <PyErr_SetString@plt>
    33b0:	b	3460 <PyInit__lzma@@Base+0xd3c>
    33b4:	bl	2300 <PyErr_NoMemory@plt>
    33b8:	b	3460 <PyInit__lzma@@Base+0xd3c>
    33bc:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    33c0:	ldr	x0, [x8, #2496]
    33c4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33c8:	add	x1, x1, #0xf5a
    33cc:	bl	2350 <PyErr_SetString@plt>
    33d0:	b	3460 <PyInit__lzma@@Base+0xd3c>
    33d4:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    33d8:	ldr	x0, [x8, #2496]
    33dc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33e0:	add	x1, x1, #0xf76
    33e4:	bl	2350 <PyErr_SetString@plt>
    33e8:	b	3460 <PyInit__lzma@@Base+0xd3c>
    33ec:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    33f0:	ldr	x0, [x8, #2496]
    33f4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33f8:	add	x1, x1, #0xf9c
    33fc:	bl	2350 <PyErr_SetString@plt>
    3400:	b	3460 <PyInit__lzma@@Base+0xd3c>
    3404:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3408:	ldr	x0, [x8, #2496]
    340c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3410:	add	x1, x1, #0xfbb
    3414:	bl	2350 <PyErr_SetString@plt>
    3418:	b	3460 <PyInit__lzma@@Base+0xd3c>
    341c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3420:	ldr	x0, [x8, #2496]
    3424:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3428:	add	x1, x1, #0xfce
    342c:	bl	2350 <PyErr_SetString@plt>
    3430:	b	3460 <PyInit__lzma@@Base+0xd3c>
    3434:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3438:	ldr	x0, [x8, #2496]
    343c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3440:	add	x1, x1, #0xfe8
    3444:	bl	2350 <PyErr_SetString@plt>
    3448:	b	3460 <PyInit__lzma@@Base+0xd3c>
    344c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3450:	ldr	x0, [x8, #2496]
    3454:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3458:	add	x1, x1, #0xff7
    345c:	bl	25b0 <PyErr_Format@plt>
    3460:	mov	w0, #0x1                   	// #1
    3464:	ldp	x29, x30, [sp], #16
    3468:	ret
    346c:	cbz	x0, 3480 <PyInit__lzma@@Base+0xd5c>
    3470:	stp	x29, x30, [sp, #-16]!
    3474:	mov	x29, sp
    3478:	bl	2f48 <PyInit__lzma@@Base+0x824>
    347c:	ldp	x29, x30, [sp], #16
    3480:	ret
    3484:	stp	x29, x30, [sp, #-32]!
    3488:	stp	x20, x19, [sp, #16]
    348c:	mov	x29, sp
    3490:	mov	x19, x1
    3494:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3498:	mov	x20, x0
    349c:	bl	2480 <PyErr_Occurred@plt>
    34a0:	cbz	x0, 34ac <PyInit__lzma@@Base+0xd88>
    34a4:	mov	w0, wzr
    34a8:	b	34b4 <PyInit__lzma@@Base+0xd90>
    34ac:	mov	w0, #0x1                   	// #1
    34b0:	str	x20, [x19]
    34b4:	ldp	x20, x19, [sp, #16]
    34b8:	ldp	x29, x30, [sp], #32
    34bc:	ret
    34c0:	sub	sp, sp, #0x30
    34c4:	stp	x29, x30, [sp, #16]
    34c8:	str	x19, [sp, #32]
    34cc:	add	x29, sp, #0x10
    34d0:	str	x0, [sp]
    34d4:	ldr	x2, [x1]
    34d8:	ldr	x3, [x1, #16]
    34dc:	mov	x0, sp
    34e0:	mov	x1, xzr
    34e4:	bl	2470 <lzma_properties_decode@plt>
    34e8:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    34ec:	mov	x19, xzr
    34f0:	cbnz	w0, 350c <PyInit__lzma@@Base+0xde8>
    34f4:	mov	x0, sp
    34f8:	bl	3520 <PyInit__lzma@@Base+0xdfc>
    34fc:	ldr	x8, [sp, #8]
    3500:	mov	x19, x0
    3504:	mov	x0, x8
    3508:	bl	24f0 <free@plt>
    350c:	mov	x0, x19
    3510:	ldr	x19, [sp, #32]
    3514:	ldp	x29, x30, [sp, #16]
    3518:	add	sp, sp, #0x30
    351c:	ret
    3520:	stp	x29, x30, [sp, #-32]!
    3524:	stp	x20, x19, [sp, #16]
    3528:	mov	x29, sp
    352c:	mov	x20, x0
    3530:	bl	2540 <PyDict_New@plt>
    3534:	mov	x19, x0
    3538:	cbz	x0, 3664 <PyInit__lzma@@Base+0xf40>
    353c:	ldr	x2, [x20]
    3540:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3544:	add	x1, x1, #0x6e0
    3548:	mov	x0, x19
    354c:	bl	3674 <PyInit__lzma@@Base+0xf50>
    3550:	cmn	w0, #0x1
    3554:	b.eq	3658 <PyInit__lzma@@Base+0xf34>  // b.none
    3558:	ldr	x2, [x20]
    355c:	cmp	x2, #0x20
    3560:	b.gt	3594 <PyInit__lzma@@Base+0xe70>
    3564:	sub	x8, x2, #0x4
    3568:	cmp	x8, #0x6
    356c:	b.cs	3614 <PyInit__lzma@@Base+0xef0>  // b.hs, b.nlast
    3570:	ldr	x8, [x20, #8]
    3574:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3578:	add	x1, x1, #0x788
    357c:	ldr	w2, [x8]
    3580:	mov	x0, x19
    3584:	bl	3674 <PyInit__lzma@@Base+0xf50>
    3588:	cmn	w0, #0x1
    358c:	b.ne	3664 <PyInit__lzma@@Base+0xf40>  // b.any
    3590:	b	3658 <PyInit__lzma@@Base+0xf34>
    3594:	cmp	x2, #0x21
    3598:	b.eq	3630 <PyInit__lzma@@Base+0xf0c>  // b.none
    359c:	mov	x8, #0x1                   	// #1
    35a0:	movk	x8, #0x4000, lsl #48
    35a4:	cmp	x2, x8
    35a8:	b.ne	3640 <PyInit__lzma@@Base+0xf1c>  // b.any
    35ac:	ldr	x20, [x20, #8]
    35b0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    35b4:	add	x1, x1, #0x6f8
    35b8:	mov	x0, x19
    35bc:	ldr	w2, [x20, #20]
    35c0:	bl	3674 <PyInit__lzma@@Base+0xf50>
    35c4:	cmn	w0, #0x1
    35c8:	b.eq	3658 <PyInit__lzma@@Base+0xf34>  // b.none
    35cc:	ldr	w2, [x20, #24]
    35d0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    35d4:	add	x1, x1, #0x710
    35d8:	mov	x0, x19
    35dc:	bl	3674 <PyInit__lzma@@Base+0xf50>
    35e0:	cmn	w0, #0x1
    35e4:	b.eq	3658 <PyInit__lzma@@Base+0xf34>  // b.none
    35e8:	ldr	w2, [x20, #28]
    35ec:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    35f0:	add	x1, x1, #0x728
    35f4:	mov	x0, x19
    35f8:	bl	3674 <PyInit__lzma@@Base+0xf50>
    35fc:	cmn	w0, #0x1
    3600:	b.eq	3658 <PyInit__lzma@@Base+0xf34>  // b.none
    3604:	ldr	w2, [x20]
    3608:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    360c:	add	x1, x1, #0x740
    3610:	b	3580 <PyInit__lzma@@Base+0xe5c>
    3614:	cmp	x2, #0x3
    3618:	b.ne	3640 <PyInit__lzma@@Base+0xf1c>  // b.any
    361c:	ldr	x8, [x20, #8]
    3620:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3624:	add	x1, x1, #0x770
    3628:	ldr	w2, [x8, #4]
    362c:	b	3580 <PyInit__lzma@@Base+0xe5c>
    3630:	ldr	x8, [x20, #8]
    3634:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3638:	add	x1, x1, #0x758
    363c:	b	357c <PyInit__lzma@@Base+0xe58>
    3640:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3644:	ldr	x8, [x8, #4008]
    3648:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    364c:	add	x1, x1, #0xdc0
    3650:	ldr	x0, [x8]
    3654:	bl	25b0 <PyErr_Format@plt>
    3658:	mov	x0, x19
    365c:	bl	2f48 <PyInit__lzma@@Base+0x824>
    3660:	mov	x19, xzr
    3664:	mov	x0, x19
    3668:	ldp	x20, x19, [sp, #16]
    366c:	ldp	x29, x30, [sp], #32
    3670:	ret
    3674:	stp	x29, x30, [sp, #-48]!
    3678:	str	x21, [sp, #16]
    367c:	stp	x20, x19, [sp, #32]
    3680:	mov	x29, sp
    3684:	mov	x21, x0
    3688:	mov	x0, x2
    368c:	mov	x20, x1
    3690:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    3694:	cbz	x0, 36bc <PyInit__lzma@@Base+0xf98>
    3698:	mov	x19, x0
    369c:	mov	x0, x21
    36a0:	mov	x1, x20
    36a4:	mov	x2, x19
    36a8:	bl	2640 <_PyDict_SetItemId@plt>
    36ac:	mov	w20, w0
    36b0:	mov	x0, x19
    36b4:	bl	2f48 <PyInit__lzma@@Base+0x824>
    36b8:	b	36c0 <PyInit__lzma@@Base+0xf9c>
    36bc:	mov	w20, #0xffffffff            	// #-1
    36c0:	mov	w0, w20
    36c4:	ldp	x20, x19, [sp, #32]
    36c8:	ldr	x21, [sp, #16]
    36cc:	ldp	x29, x30, [sp], #48
    36d0:	ret
    36d4:	stp	x29, x30, [sp, #-32]!
    36d8:	str	x19, [sp, #16]
    36dc:	mov	x29, sp
    36e0:	mov	x19, x0
    36e4:	add	x0, x0, #0x28
    36e8:	bl	24c0 <lzma_end@plt>
    36ec:	ldr	x0, [x19, #184]
    36f0:	cbz	x0, 36f8 <PyInit__lzma@@Base+0xfd4>
    36f4:	bl	2630 <PyThread_free_lock@plt>
    36f8:	ldr	x8, [x19, #8]
    36fc:	mov	x0, x19
    3700:	ldr	x8, [x8, #320]
    3704:	blr	x8
    3708:	ldr	x19, [sp, #16]
    370c:	ldp	x29, x30, [sp], #32
    3710:	ret
    3714:	sub	sp, sp, #0x50
    3718:	stp	x29, x30, [sp, #32]
    371c:	str	x21, [sp, #48]
    3720:	stp	x20, x19, [sp, #64]
    3724:	add	x29, sp, #0x20
    3728:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    372c:	ldr	x21, [x21, #4056]
    3730:	mov	x8, x2
    3734:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    3738:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    373c:	mov	x19, x0
    3740:	mov	w9, #0x1                   	// #1
    3744:	mov	w20, #0xffffffff            	// #-1
    3748:	mov	w10, #0x6                   	// #6
    374c:	add	x2, x2, #0xa0
    3750:	add	x3, x3, #0x800
    3754:	add	x4, x29, #0x1c
    3758:	add	x5, x29, #0x18
    375c:	add	x6, sp, #0x10
    3760:	add	x7, sp, #0x8
    3764:	mov	x0, x1
    3768:	mov	x1, x8
    376c:	stp	w20, w9, [x29, #24]
    3770:	stur	w10, [x29, #-4]
    3774:	stp	x21, x21, [sp, #8]
    3778:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    377c:	cbz	w0, 3888 <PyInit__lzma@@Base+0x1164>
    3780:	ldr	w8, [x29, #28]
    3784:	cmp	w8, #0x1
    3788:	b.eq	37b0 <PyInit__lzma@@Base+0x108c>  // b.none
    378c:	ldr	w8, [x29, #24]
    3790:	add	w8, w8, #0x1
    3794:	cmp	w8, #0x2
    3798:	b.cc	37b0 <PyInit__lzma@@Base+0x108c>  // b.lo, b.ul, b.last
    379c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    37a0:	ldr	x8, [x8, #4008]
    37a4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    37a8:	add	x1, x1, #0xb5
    37ac:	b	387c <PyInit__lzma@@Base+0x1158>
    37b0:	ldr	x0, [sp, #16]
    37b4:	cmp	x0, x21
    37b8:	b.eq	37dc <PyInit__lzma@@Base+0x10b8>  // b.none
    37bc:	ldr	x8, [sp, #8]
    37c0:	cmp	x8, x21
    37c4:	b.eq	37dc <PyInit__lzma@@Base+0x10b8>  // b.none
    37c8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    37cc:	ldr	x8, [x8, #4008]
    37d0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    37d4:	add	x1, x1, #0xe6
    37d8:	b	387c <PyInit__lzma@@Base+0x1158>
    37dc:	cmp	x0, x21
    37e0:	b.eq	37f0 <PyInit__lzma@@Base+0x10cc>  // b.none
    37e4:	sub	x1, x29, #0x4
    37e8:	bl	3234 <PyInit__lzma@@Base+0xb10>
    37ec:	cbz	w0, 3884 <PyInit__lzma@@Base+0x1160>
    37f0:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    37f4:	add	x8, x8, #0xcd4
    37f8:	mov	x20, x19
    37fc:	adrp	x9, 3000 <PyInit__lzma@@Base+0x8dc>
    3800:	add	x9, x9, #0xd08
    3804:	str	x8, [x20, #16]!
    3808:	stp	x9, xzr, [x20, #8]
    380c:	str	x20, [x20, #72]
    3810:	bl	2500 <PyThread_allocate_lock@plt>
    3814:	str	x0, [x20, #168]
    3818:	cbz	x0, 386c <PyInit__lzma@@Base+0x1148>
    381c:	str	wzr, [x19, #176]
    3820:	ldr	w2, [x29, #28]
    3824:	add	x0, x20, #0x18
    3828:	cmp	w2, #0x3
    382c:	b.eq	38a0 <PyInit__lzma@@Base+0x117c>  // b.none
    3830:	cmp	w2, #0x2
    3834:	b.eq	38b0 <PyInit__lzma@@Base+0x118c>  // b.none
    3838:	cmp	w2, #0x1
    383c:	b.ne	38c8 <PyInit__lzma@@Base+0x11a4>  // b.any
    3840:	ldr	w8, [x29, #24]
    3844:	cmn	w8, #0x1
    3848:	b.ne	3854 <PyInit__lzma@@Base+0x1130>  // b.any
    384c:	mov	w8, #0x4                   	// #4
    3850:	str	w8, [x29, #24]
    3854:	ldr	w1, [x29, #24]
    3858:	ldur	w2, [x29, #-4]
    385c:	ldr	x3, [sp, #8]
    3860:	bl	3d20 <PyInit__lzma@@Base+0x15fc>
    3864:	cbnz	w0, 38e0 <PyInit__lzma@@Base+0x11bc>
    3868:	b	38c0 <PyInit__lzma@@Base+0x119c>
    386c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3870:	ldr	x8, [x8, #4000]
    3874:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3878:	add	x1, x1, #0x112
    387c:	ldr	x0, [x8]
    3880:	bl	2350 <PyErr_SetString@plt>
    3884:	mov	w20, #0xffffffff            	// #-1
    3888:	mov	w0, w20
    388c:	ldp	x20, x19, [sp, #64]
    3890:	ldr	x21, [sp, #48]
    3894:	ldp	x29, x30, [sp, #32]
    3898:	add	sp, sp, #0x50
    389c:	ret
    38a0:	ldr	x1, [sp, #8]
    38a4:	bl	3ef4 <PyInit__lzma@@Base+0x17d0>
    38a8:	cbnz	w0, 38e0 <PyInit__lzma@@Base+0x11bc>
    38ac:	b	38c0 <PyInit__lzma@@Base+0x119c>
    38b0:	ldur	w1, [x29, #-4]
    38b4:	ldr	x2, [sp, #8]
    38b8:	bl	3dcc <PyInit__lzma@@Base+0x16a8>
    38bc:	cbnz	w0, 38e0 <PyInit__lzma@@Base+0x11bc>
    38c0:	mov	w20, wzr
    38c4:	b	3888 <PyInit__lzma@@Base+0x1164>
    38c8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    38cc:	ldr	x8, [x8, #4008]
    38d0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    38d4:	add	x1, x1, #0x12a
    38d8:	ldr	x0, [x8]
    38dc:	bl	25b0 <PyErr_Format@plt>
    38e0:	ldr	x0, [x19, #184]
    38e4:	bl	2630 <PyThread_free_lock@plt>
    38e8:	str	xzr, [x19, #184]
    38ec:	b	3884 <PyInit__lzma@@Base+0x1160>
    38f0:	sub	sp, sp, #0x70
    38f4:	stp	x29, x30, [sp, #80]
    38f8:	stp	x20, x19, [sp, #96]
    38fc:	add	x29, sp, #0x50
    3900:	mov	x19, x1
    3904:	mov	x20, x0
    3908:	movi	v0.2d, #0x0
    390c:	mov	x1, sp
    3910:	mov	x0, x19
    3914:	mov	w2, wzr
    3918:	stp	q0, q0, [sp, #48]
    391c:	stp	q0, q0, [sp, #16]
    3920:	str	q0, [sp]
    3924:	bl	2560 <PyObject_GetBuffer@plt>
    3928:	cbz	w0, 3954 <PyInit__lzma@@Base+0x1230>
    392c:	mov	x19, xzr
    3930:	ldr	x8, [sp, #8]
    3934:	cbz	x8, 3940 <PyInit__lzma@@Base+0x121c>
    3938:	mov	x0, sp
    393c:	bl	2290 <PyBuffer_Release@plt>
    3940:	mov	x0, x19
    3944:	ldp	x20, x19, [sp, #96]
    3948:	ldp	x29, x30, [sp, #80]
    394c:	add	sp, sp, #0x70
    3950:	ret
    3954:	mov	x0, sp
    3958:	mov	w1, #0x43                  	// #67
    395c:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3960:	cbz	w0, 3980 <PyInit__lzma@@Base+0x125c>
    3964:	mov	x1, sp
    3968:	mov	x0, x20
    396c:	bl	39b8 <PyInit__lzma@@Base+0x1294>
    3970:	mov	x19, x0
    3974:	ldr	x8, [sp, #8]
    3978:	cbnz	x8, 3938 <PyInit__lzma@@Base+0x1214>
    397c:	b	3940 <PyInit__lzma@@Base+0x121c>
    3980:	adrp	x0, 6000 <PyInit__lzma@@Base+0x38dc>
    3984:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3988:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    398c:	add	x0, x0, #0x1fe
    3990:	add	x1, x1, #0x53
    3994:	add	x2, x2, #0x26
    3998:	mov	x3, x19
    399c:	bl	2400 <_PyArg_BadArgument@plt>
    39a0:	b	392c <PyInit__lzma@@Base+0x1208>
    39a4:	stp	x29, x30, [sp, #-16]!
    39a8:	mov	x29, sp
    39ac:	bl	3c2c <PyInit__lzma@@Base+0x1508>
    39b0:	ldp	x29, x30, [sp], #16
    39b4:	ret
    39b8:	stp	x29, x30, [sp, #-48]!
    39bc:	str	x21, [sp, #16]
    39c0:	stp	x20, x19, [sp, #32]
    39c4:	mov	x29, sp
    39c8:	mov	x19, x0
    39cc:	ldr	x0, [x0, #184]
    39d0:	mov	x20, x1
    39d4:	mov	w1, wzr
    39d8:	bl	2320 <PyThread_acquire_lock@plt>
    39dc:	cbz	w0, 3a08 <PyInit__lzma@@Base+0x12e4>
    39e0:	ldr	w8, [x19, #176]
    39e4:	cbz	w8, 3a30 <PyInit__lzma@@Base+0x130c>
    39e8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    39ec:	ldr	x8, [x8, #4008]
    39f0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    39f4:	add	x1, x1, #0x5c
    39f8:	ldr	x0, [x8]
    39fc:	bl	2350 <PyErr_SetString@plt>
    3a00:	mov	x20, xzr
    3a04:	b	3a48 <PyInit__lzma@@Base+0x1324>
    3a08:	bl	2580 <PyEval_SaveThread@plt>
    3a0c:	ldr	x8, [x19, #184]
    3a10:	mov	x21, x0
    3a14:	mov	w1, #0x1                   	// #1
    3a18:	mov	x0, x8
    3a1c:	bl	2320 <PyThread_acquire_lock@plt>
    3a20:	mov	x0, x21
    3a24:	bl	2260 <PyEval_RestoreThread@plt>
    3a28:	ldr	w8, [x19, #176]
    3a2c:	cbnz	w8, 39e8 <PyInit__lzma@@Base+0x12c4>
    3a30:	ldr	x1, [x20]
    3a34:	ldr	x2, [x20, #16]
    3a38:	mov	x0, x19
    3a3c:	mov	w3, wzr
    3a40:	bl	3a64 <PyInit__lzma@@Base+0x1340>
    3a44:	mov	x20, x0
    3a48:	ldr	x0, [x19, #184]
    3a4c:	bl	2520 <PyThread_release_lock@plt>
    3a50:	mov	x0, x20
    3a54:	ldp	x20, x19, [sp, #32]
    3a58:	ldr	x21, [sp, #16]
    3a5c:	ldp	x29, x30, [sp], #48
    3a60:	ret
    3a64:	sub	sp, sp, #0x60
    3a68:	stp	x29, x30, [sp, #16]
    3a6c:	stp	x26, x25, [sp, #32]
    3a70:	stp	x24, x23, [sp, #48]
    3a74:	stp	x22, x21, [sp, #64]
    3a78:	stp	x20, x19, [sp, #80]
    3a7c:	add	x29, sp, #0x10
    3a80:	mov	x23, x1
    3a84:	mov	x21, x0
    3a88:	mov	w1, #0x2000                	// #8192
    3a8c:	mov	x0, xzr
    3a90:	mov	w19, w3
    3a94:	mov	x20, x2
    3a98:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3a9c:	str	x0, [sp, #8]
    3aa0:	cbz	x0, 3be0 <PyInit__lzma@@Base+0x14bc>
    3aa4:	mov	x22, x21
    3aa8:	str	x23, [x22, #40]!
    3aac:	str	x20, [x22, #8]
    3ab0:	ldr	x8, [sp, #8]
    3ab4:	mov	w26, #0xa                   	// #10
    3ab8:	add	x9, x8, #0x20
    3abc:	str	x9, [x22, #24]
    3ac0:	ldr	x8, [x8, #16]
    3ac4:	str	x8, [x22, #32]
    3ac8:	b	3ad4 <PyInit__lzma@@Base+0x13b0>
    3acc:	mov	w8, #0x4                   	// #4
    3ad0:	cbnz	w8, 3b94 <PyInit__lzma@@Base+0x1470>
    3ad4:	bl	2580 <PyEval_SaveThread@plt>
    3ad8:	mov	x25, x0
    3adc:	mov	x0, x22
    3ae0:	mov	w1, w19
    3ae4:	bl	2250 <lzma_code@plt>
    3ae8:	ldr	x8, [x21, #64]
    3aec:	ldr	x9, [sp, #8]
    3af0:	mov	w24, w0
    3af4:	sub	x8, x8, x9
    3af8:	cbnz	x20, 3b10 <PyInit__lzma@@Base+0x13ec>
    3afc:	cmp	w24, #0xa
    3b00:	b.ne	3b10 <PyInit__lzma@@Base+0x13ec>  // b.any
    3b04:	ldr	x9, [x21, #72]
    3b08:	cmp	x9, #0x0
    3b0c:	csel	w24, w26, wzr, eq  // eq = none
    3b10:	mov	x0, x25
    3b14:	sub	x23, x8, #0x20
    3b18:	bl	2260 <PyEval_RestoreThread@plt>
    3b1c:	mov	w0, w24
    3b20:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    3b24:	cbnz	w0, 3acc <PyInit__lzma@@Base+0x13a8>
    3b28:	cbnz	w19, 3b34 <PyInit__lzma@@Base+0x1410>
    3b2c:	ldr	x8, [x21, #48]
    3b30:	cbz	x8, 3b44 <PyInit__lzma@@Base+0x1420>
    3b34:	cmp	w19, #0x3
    3b38:	b.ne	3b4c <PyInit__lzma@@Base+0x1428>  // b.any
    3b3c:	cmp	w24, #0x1
    3b40:	b.ne	3b4c <PyInit__lzma@@Base+0x1428>  // b.any
    3b44:	mov	w8, #0x2                   	// #2
    3b48:	b	3ad0 <PyInit__lzma@@Base+0x13ac>
    3b4c:	ldr	x8, [x21, #72]
    3b50:	cbz	x8, 3b5c <PyInit__lzma@@Base+0x1438>
    3b54:	mov	w8, wzr
    3b58:	b	3ad0 <PyInit__lzma@@Base+0x13ac>
    3b5c:	add	x0, sp, #0x8
    3b60:	mov	x1, #0xffffffffffffffff    	// #-1
    3b64:	bl	3bfc <PyInit__lzma@@Base+0x14d8>
    3b68:	cmn	w0, #0x1
    3b6c:	b.eq	3acc <PyInit__lzma@@Base+0x13a8>  // b.none
    3b70:	ldr	x9, [sp, #8]
    3b74:	mov	w8, wzr
    3b78:	add	x10, x9, x23
    3b7c:	add	x10, x10, #0x20
    3b80:	str	x10, [x21, #64]
    3b84:	ldr	x9, [x9, #16]
    3b88:	sub	x9, x9, x23
    3b8c:	str	x9, [x21, #72]
    3b90:	b	3ad0 <PyInit__lzma@@Base+0x13ac>
    3b94:	cmp	w8, #0x4
    3b98:	b.eq	3bd0 <PyInit__lzma@@Base+0x14ac>  // b.none
    3b9c:	cmp	w8, #0x2
    3ba0:	b.ne	3be0 <PyInit__lzma@@Base+0x14bc>  // b.any
    3ba4:	ldr	x8, [sp, #8]
    3ba8:	ldr	x8, [x8, #16]
    3bac:	cmp	x23, x8
    3bb0:	b.eq	3bc8 <PyInit__lzma@@Base+0x14a4>  // b.none
    3bb4:	add	x0, sp, #0x8
    3bb8:	mov	x1, x23
    3bbc:	bl	2240 <_PyBytes_Resize@plt>
    3bc0:	cmn	w0, #0x1
    3bc4:	b.eq	3bd0 <PyInit__lzma@@Base+0x14ac>  // b.none
    3bc8:	ldr	x0, [sp, #8]
    3bcc:	b	3be0 <PyInit__lzma@@Base+0x14bc>
    3bd0:	ldr	x0, [sp, #8]
    3bd4:	bl	346c <PyInit__lzma@@Base+0xd48>
    3bd8:	mov	x0, xzr
    3bdc:	b	3be0 <PyInit__lzma@@Base+0x14bc>
    3be0:	ldp	x20, x19, [sp, #80]
    3be4:	ldp	x22, x21, [sp, #64]
    3be8:	ldp	x24, x23, [sp, #48]
    3bec:	ldp	x26, x25, [sp, #32]
    3bf0:	ldp	x29, x30, [sp, #16]
    3bf4:	add	sp, sp, #0x60
    3bf8:	ret
    3bfc:	stp	x29, x30, [sp, #-16]!
    3c00:	mov	x29, sp
    3c04:	ldr	x8, [x0]
    3c08:	ldr	x8, [x8, #16]
    3c0c:	add	x8, x8, x8, asr #3
    3c10:	add	x8, x8, #0x6
    3c14:	cmp	x8, x1
    3c18:	ccmp	x1, #0x0, #0x4, gt
    3c1c:	csel	x1, x1, x8, gt
    3c20:	bl	2240 <_PyBytes_Resize@plt>
    3c24:	ldp	x29, x30, [sp], #16
    3c28:	ret
    3c2c:	stp	x29, x30, [sp, #-32]!
    3c30:	stp	x20, x19, [sp, #16]
    3c34:	mov	x29, sp
    3c38:	mov	x19, x0
    3c3c:	ldr	x0, [x0, #184]
    3c40:	mov	w1, wzr
    3c44:	bl	2320 <PyThread_acquire_lock@plt>
    3c48:	cbz	w0, 3c74 <PyInit__lzma@@Base+0x1550>
    3c4c:	ldr	w8, [x19, #176]
    3c50:	cbz	w8, 3c9c <PyInit__lzma@@Base+0x1578>
    3c54:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3c58:	ldr	x8, [x8, #4008]
    3c5c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3c60:	add	x1, x1, #0x78
    3c64:	ldr	x0, [x8]
    3c68:	bl	2350 <PyErr_SetString@plt>
    3c6c:	mov	x20, xzr
    3c70:	b	3cbc <PyInit__lzma@@Base+0x1598>
    3c74:	bl	2580 <PyEval_SaveThread@plt>
    3c78:	ldr	x8, [x19, #184]
    3c7c:	mov	x20, x0
    3c80:	mov	w1, #0x1                   	// #1
    3c84:	mov	x0, x8
    3c88:	bl	2320 <PyThread_acquire_lock@plt>
    3c8c:	mov	x0, x20
    3c90:	bl	2260 <PyEval_RestoreThread@plt>
    3c94:	ldr	w8, [x19, #176]
    3c98:	cbnz	w8, 3c54 <PyInit__lzma@@Base+0x1530>
    3c9c:	mov	w8, #0x1                   	// #1
    3ca0:	mov	w3, #0x3                   	// #3
    3ca4:	mov	x0, x19
    3ca8:	mov	x1, xzr
    3cac:	mov	x2, xzr
    3cb0:	str	w8, [x19, #176]
    3cb4:	bl	3a64 <PyInit__lzma@@Base+0x1340>
    3cb8:	mov	x20, x0
    3cbc:	ldr	x0, [x19, #184]
    3cc0:	bl	2520 <PyThread_release_lock@plt>
    3cc4:	mov	x0, x20
    3cc8:	ldp	x20, x19, [sp, #16]
    3ccc:	ldp	x29, x30, [sp], #32
    3cd0:	ret
    3cd4:	cbz	x2, 3cf0 <PyInit__lzma@@Base+0x15cc>
    3cd8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    3cdc:	udiv	x8, x8, x2
    3ce0:	cmp	x8, x1
    3ce4:	b.cs	3cf0 <PyInit__lzma@@Base+0x15cc>  // b.hs, b.nlast
    3ce8:	mov	x0, xzr
    3cec:	ret
    3cf0:	stp	x29, x30, [sp, #-16]!
    3cf4:	mov	x29, sp
    3cf8:	mul	x0, x2, x1
    3cfc:	bl	22c0 <PyMem_RawMalloc@plt>
    3d00:	ldp	x29, x30, [sp], #16
    3d04:	ret
    3d08:	stp	x29, x30, [sp, #-16]!
    3d0c:	mov	x29, sp
    3d10:	mov	x0, x1
    3d14:	bl	24d0 <PyMem_RawFree@plt>
    3d18:	ldp	x29, x30, [sp], #16
    3d1c:	ret
    3d20:	sub	sp, sp, #0x70
    3d24:	stp	x29, x30, [sp, #80]
    3d28:	stp	x20, x19, [sp, #96]
    3d2c:	add	x29, sp, #0x50
    3d30:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3d34:	ldr	x8, [x8, #4056]
    3d38:	mov	w19, w1
    3d3c:	mov	x20, x0
    3d40:	cmp	x3, x8
    3d44:	b.eq	3d84 <PyInit__lzma@@Base+0x1660>  // b.none
    3d48:	mov	x0, sp
    3d4c:	mov	x1, x3
    3d50:	bl	3f80 <PyInit__lzma@@Base+0x185c>
    3d54:	cmn	w0, #0x1
    3d58:	b.eq	3d9c <PyInit__lzma@@Base+0x1678>  // b.none
    3d5c:	mov	x1, sp
    3d60:	mov	x0, x20
    3d64:	mov	w2, w19
    3d68:	bl	25d0 <lzma_stream_encoder@plt>
    3d6c:	mov	w19, w0
    3d70:	mov	x0, sp
    3d74:	bl	4068 <PyInit__lzma@@Base+0x1944>
    3d78:	mov	w8, #0x1                   	// #1
    3d7c:	cbnz	w8, 3da4 <PyInit__lzma@@Base+0x1680>
    3d80:	b	3db8 <PyInit__lzma@@Base+0x1694>
    3d84:	mov	x0, x20
    3d88:	mov	w1, w2
    3d8c:	mov	w2, w19
    3d90:	bl	2330 <lzma_easy_encoder@plt>
    3d94:	mov	w19, w0
    3d98:	b	3da4 <PyInit__lzma@@Base+0x1680>
    3d9c:	mov	w8, wzr
    3da0:	cbz	w8, 3db8 <PyInit__lzma@@Base+0x1694>
    3da4:	mov	w0, w19
    3da8:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    3dac:	cmp	w0, #0x0
    3db0:	csetm	w0, ne  // ne = any
    3db4:	b	3dbc <PyInit__lzma@@Base+0x1698>
    3db8:	mov	w0, #0xffffffff            	// #-1
    3dbc:	ldp	x20, x19, [sp, #96]
    3dc0:	ldp	x29, x30, [sp, #80]
    3dc4:	add	sp, sp, #0x70
    3dc8:	ret
    3dcc:	sub	sp, sp, #0x90
    3dd0:	stp	x29, x30, [sp, #112]
    3dd4:	stp	x20, x19, [sp, #128]
    3dd8:	add	x29, sp, #0x70
    3ddc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3de0:	ldr	x8, [x8, #4056]
    3de4:	mov	x19, x0
    3de8:	cmp	x2, x8
    3dec:	b.eq	3e6c <PyInit__lzma@@Base+0x1748>  // b.none
    3df0:	mov	x0, sp
    3df4:	mov	x1, x2
    3df8:	bl	3f80 <PyInit__lzma@@Base+0x185c>
    3dfc:	cmn	w0, #0x1
    3e00:	b.eq	3ea0 <PyInit__lzma@@Base+0x177c>  // b.none
    3e04:	ldr	x8, [sp]
    3e08:	mov	x9, #0x1                   	// #1
    3e0c:	movk	x9, #0x4000, lsl #48
    3e10:	cmp	x8, x9
    3e14:	b.ne	3e24 <PyInit__lzma@@Base+0x1700>  // b.any
    3e18:	ldr	x8, [sp, #16]
    3e1c:	cmn	x8, #0x1
    3e20:	b.eq	3ee0 <PyInit__lzma@@Base+0x17bc>  // b.none
    3e24:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3e28:	ldr	x8, [x8, #4008]
    3e2c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3e30:	add	x1, x1, #0x17b
    3e34:	ldr	x0, [x8]
    3e38:	bl	2350 <PyErr_SetString@plt>
    3e3c:	mov	w19, #0xb                   	// #11
    3e40:	mov	x0, sp
    3e44:	bl	4068 <PyInit__lzma@@Base+0x1944>
    3e48:	mov	w8, #0x1                   	// #1
    3e4c:	cbz	w8, 3ecc <PyInit__lzma@@Base+0x17a8>
    3e50:	bl	2480 <PyErr_Occurred@plt>
    3e54:	cbnz	x0, 3ecc <PyInit__lzma@@Base+0x17a8>
    3e58:	mov	w0, w19
    3e5c:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    3e60:	cmp	w0, #0x0
    3e64:	csetm	w0, ne  // ne = any
    3e68:	b	3ed0 <PyInit__lzma@@Base+0x17ac>
    3e6c:	mov	x0, sp
    3e70:	mov	w20, w1
    3e74:	bl	2610 <lzma_lzma_preset@plt>
    3e78:	tst	w0, #0xff
    3e7c:	b.eq	3eac <PyInit__lzma@@Base+0x1788>  // b.none
    3e80:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3e84:	ldr	x0, [x8, #2496]
    3e88:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3e8c:	add	x1, x1, #0xe09
    3e90:	mov	w2, w20
    3e94:	bl	25b0 <PyErr_Format@plt>
    3e98:	tbnz	wzr, #0, 3e50 <PyInit__lzma@@Base+0x172c>
    3e9c:	b	3ecc <PyInit__lzma@@Base+0x17a8>
    3ea0:	mov	w8, wzr
    3ea4:	cbnz	w8, 3e50 <PyInit__lzma@@Base+0x172c>
    3ea8:	b	3ecc <PyInit__lzma@@Base+0x17a8>
    3eac:	mov	x1, sp
    3eb0:	mov	x0, x19
    3eb4:	bl	2550 <lzma_alone_encoder@plt>
    3eb8:	mov	w8, #0x1                   	// #1
    3ebc:	tbz	w8, #0, 3ecc <PyInit__lzma@@Base+0x17a8>
    3ec0:	mov	w19, w0
    3ec4:	bl	2480 <PyErr_Occurred@plt>
    3ec8:	cbz	x0, 3e58 <PyInit__lzma@@Base+0x1734>
    3ecc:	mov	w0, #0xffffffff            	// #-1
    3ed0:	ldp	x20, x19, [sp, #128]
    3ed4:	ldp	x29, x30, [sp, #112]
    3ed8:	add	sp, sp, #0x90
    3edc:	ret
    3ee0:	ldr	x1, [sp, #8]
    3ee4:	mov	x0, x19
    3ee8:	bl	2550 <lzma_alone_encoder@plt>
    3eec:	mov	w19, w0
    3ef0:	b	3e40 <PyInit__lzma@@Base+0x171c>
    3ef4:	sub	sp, sp, #0x70
    3ef8:	stp	x29, x30, [sp, #80]
    3efc:	str	x19, [sp, #96]
    3f00:	add	x29, sp, #0x50
    3f04:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3f08:	ldr	x8, [x8, #4056]
    3f0c:	cmp	x1, x8
    3f10:	b.eq	3f54 <PyInit__lzma@@Base+0x1830>  // b.none
    3f14:	mov	x19, x0
    3f18:	mov	x0, sp
    3f1c:	bl	3f80 <PyInit__lzma@@Base+0x185c>
    3f20:	cmn	w0, #0x1
    3f24:	b.eq	3f70 <PyInit__lzma@@Base+0x184c>  // b.none
    3f28:	mov	x1, sp
    3f2c:	mov	x0, x19
    3f30:	bl	2370 <lzma_raw_encoder@plt>
    3f34:	mov	w19, w0
    3f38:	mov	x0, sp
    3f3c:	bl	4068 <PyInit__lzma@@Base+0x1944>
    3f40:	mov	w0, w19
    3f44:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    3f48:	cmp	w0, #0x0
    3f4c:	csetm	w0, ne  // ne = any
    3f50:	b	3f70 <PyInit__lzma@@Base+0x184c>
    3f54:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3f58:	ldr	x8, [x8, #4008]
    3f5c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3f60:	add	x1, x1, #0x1c1
    3f64:	ldr	x0, [x8]
    3f68:	bl	2350 <PyErr_SetString@plt>
    3f6c:	mov	w0, #0xffffffff            	// #-1
    3f70:	ldr	x19, [sp, #96]
    3f74:	ldp	x29, x30, [sp, #80]
    3f78:	add	sp, sp, #0x70
    3f7c:	ret
    3f80:	stp	x29, x30, [sp, #-64]!
    3f84:	stp	x24, x23, [sp, #16]
    3f88:	stp	x22, x21, [sp, #32]
    3f8c:	stp	x20, x19, [sp, #48]
    3f90:	mov	x29, sp
    3f94:	mov	x19, x0
    3f98:	mov	x0, x1
    3f9c:	mov	x20, x1
    3fa0:	bl	2410 <PySequence_Size@plt>
    3fa4:	cmn	x0, #0x1
    3fa8:	b.eq	4054 <PyInit__lzma@@Base+0x1930>  // b.none
    3fac:	mov	x21, x0
    3fb0:	cmp	x0, #0x4
    3fb4:	b.le	3fd8 <PyInit__lzma@@Base+0x18b4>
    3fb8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3fbc:	ldr	x8, [x8, #4008]
    3fc0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3fc4:	add	x1, x1, #0x147
    3fc8:	mov	w2, #0x4                   	// #4
    3fcc:	ldr	x0, [x8]
    3fd0:	bl	25b0 <PyErr_Format@plt>
    3fd4:	b	4050 <PyInit__lzma@@Base+0x192c>
    3fd8:	cmp	x21, #0x1
    3fdc:	b.lt	4024 <PyInit__lzma@@Base+0x1900>  // b.tstop
    3fe0:	mov	x23, xzr
    3fe4:	mov	x22, x19
    3fe8:	mov	x0, x20
    3fec:	mov	x1, x23
    3ff0:	bl	23c0 <PySequence_GetItem@plt>
    3ff4:	mov	x24, x0
    3ff8:	cbz	x0, 4038 <PyInit__lzma@@Base+0x1914>
    3ffc:	mov	x0, x24
    4000:	mov	x1, x22
    4004:	bl	2da8 <PyInit__lzma@@Base+0x684>
    4008:	cbz	w0, 4038 <PyInit__lzma@@Base+0x1914>
    400c:	mov	x0, x24
    4010:	bl	346c <PyInit__lzma@@Base+0xd48>
    4014:	add	x23, x23, #0x1
    4018:	cmp	x21, x23
    401c:	add	x22, x22, #0x10
    4020:	b.ne	3fe8 <PyInit__lzma@@Base+0x18c4>  // b.any
    4024:	mov	w0, wzr
    4028:	lsl	x8, x21, #4
    402c:	mov	x9, #0xffffffffffffffff    	// #-1
    4030:	str	x9, [x19, x8]
    4034:	b	4054 <PyInit__lzma@@Base+0x1930>
    4038:	mov	x0, x24
    403c:	bl	346c <PyInit__lzma@@Base+0xd48>
    4040:	mov	x8, #0xffffffffffffffff    	// #-1
    4044:	mov	x0, x19
    4048:	str	x8, [x22]
    404c:	bl	4068 <PyInit__lzma@@Base+0x1944>
    4050:	mov	w0, #0xffffffff            	// #-1
    4054:	ldp	x20, x19, [sp, #48]
    4058:	ldp	x22, x21, [sp, #32]
    405c:	ldp	x24, x23, [sp, #16]
    4060:	ldp	x29, x30, [sp], #64
    4064:	ret
    4068:	stp	x29, x30, [sp, #-32]!
    406c:	stp	x20, x19, [sp, #16]
    4070:	mov	x29, sp
    4074:	ldr	x8, [x0]
    4078:	cmn	x8, #0x1
    407c:	b.eq	40b0 <PyInit__lzma@@Base+0x198c>  // b.none
    4080:	mov	x19, x0
    4084:	mov	x8, xzr
    4088:	mov	w20, #0x1                   	// #1
    408c:	add	x8, x19, x8, lsl #4
    4090:	ldr	x0, [x8, #8]
    4094:	bl	2270 <PyMem_Free@plt>
    4098:	sbfiz	x8, x20, #4, #32
    409c:	ldr	x9, [x19, x8]
    40a0:	sxtw	x8, w20
    40a4:	add	w20, w20, #0x1
    40a8:	cmn	x9, #0x1
    40ac:	b.ne	408c <PyInit__lzma@@Base+0x1968>  // b.any
    40b0:	ldp	x20, x19, [sp, #16]
    40b4:	ldp	x29, x30, [sp], #32
    40b8:	ret
    40bc:	stp	x29, x30, [sp, #-32]!
    40c0:	str	x19, [sp, #16]
    40c4:	mov	x29, sp
    40c8:	mov	x19, x0
    40cc:	ldr	x0, [x0, #200]
    40d0:	cbz	x0, 40d8 <PyInit__lzma@@Base+0x19b4>
    40d4:	bl	2270 <PyMem_Free@plt>
    40d8:	add	x0, x19, #0x28
    40dc:	bl	24c0 <lzma_end@plt>
    40e0:	ldr	x0, [x19, #184]
    40e4:	cbz	x0, 40f0 <PyInit__lzma@@Base+0x19cc>
    40e8:	str	xzr, [x19, #184]
    40ec:	bl	2f48 <PyInit__lzma@@Base+0x824>
    40f0:	ldr	x0, [x19, #216]
    40f4:	cbz	x0, 40fc <PyInit__lzma@@Base+0x19d8>
    40f8:	bl	2630 <PyThread_free_lock@plt>
    40fc:	ldr	x8, [x19, #8]
    4100:	mov	x0, x19
    4104:	ldr	x8, [x8, #320]
    4108:	blr	x8
    410c:	ldr	x19, [sp, #16]
    4110:	ldp	x29, x30, [sp], #32
    4114:	ret
    4118:	sub	sp, sp, #0x50
    411c:	stp	x29, x30, [sp, #32]
    4120:	stp	x22, x21, [sp, #48]
    4124:	stp	x20, x19, [sp, #64]
    4128:	add	x29, sp, #0x20
    412c:	ldr	x21, [x1, #16]
    4130:	mov	x19, x0
    4134:	cbz	x2, 4148 <PyInit__lzma@@Base+0x1a24>
    4138:	ldr	x22, [x2, #16]
    413c:	add	x20, x1, #0x18
    4140:	cbz	x2, 4154 <PyInit__lzma@@Base+0x1a30>
    4144:	b	4164 <PyInit__lzma@@Base+0x1a40>
    4148:	mov	x22, xzr
    414c:	add	x20, x1, #0x18
    4150:	cbnz	x2, 4164 <PyInit__lzma@@Base+0x1a40>
    4154:	cmp	x21, #0x4
    4158:	b.cs	4164 <PyInit__lzma@@Base+0x1a40>  // b.hs, b.nlast
    415c:	cbnz	x20, 4198 <PyInit__lzma@@Base+0x1a74>
    4160:	b	4264 <PyInit__lzma@@Base+0x1b40>
    4164:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    4168:	add	x8, sp, #0x8
    416c:	add	x4, x4, #0x970
    4170:	mov	w6, #0x3                   	// #3
    4174:	mov	x0, x20
    4178:	mov	x1, x21
    417c:	mov	x3, xzr
    4180:	mov	w5, wzr
    4184:	mov	w7, wzr
    4188:	str	x8, [sp]
    418c:	bl	2340 <_PyArg_UnpackKeywords@plt>
    4190:	mov	x20, x0
    4194:	cbz	x20, 4264 <PyInit__lzma@@Base+0x1b40>
    4198:	add	x22, x22, x21
    419c:	cbz	x22, 41ec <PyInit__lzma@@Base+0x1ac8>
    41a0:	ldr	x8, [x20]
    41a4:	cbz	x8, 4200 <PyInit__lzma@@Base+0x1adc>
    41a8:	ldr	x0, [x8, #8]
    41ac:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    41b0:	ldr	x8, [x8, #3984]
    41b4:	cmp	x0, x8
    41b8:	b.eq	41cc <PyInit__lzma@@Base+0x1aa8>  // b.none
    41bc:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    41c0:	ldr	x1, [x1, #3984]
    41c4:	bl	25a0 <PyType_IsSubtype@plt>
    41c8:	cbz	w0, 423c <PyInit__lzma@@Base+0x1b18>
    41cc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    41d0:	ldr	x8, [x8, #4016]
    41d4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    41d8:	add	x1, x1, #0xd3b
    41dc:	ldr	x0, [x8]
    41e0:	bl	2350 <PyErr_SetString@plt>
    41e4:	mov	w0, #0xffffffff            	// #-1
    41e8:	b	4268 <PyInit__lzma@@Base+0x1b44>
    41ec:	mov	w21, wzr
    41f0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x138dc>
    41f4:	ldr	x2, [x2, #4056]
    41f8:	mov	x3, x2
    41fc:	b	422c <PyInit__lzma@@Base+0x1b08>
    4200:	mov	w21, wzr
    4204:	ldr	x2, [x20, #8]
    4208:	cbz	x2, 4220 <PyInit__lzma@@Base+0x1afc>
    420c:	cmp	x22, #0x1
    4210:	b.ne	4228 <PyInit__lzma@@Base+0x1b04>  // b.any
    4214:	adrp	x3, 16000 <PyInit__lzma@@Base+0x138dc>
    4218:	ldr	x3, [x3, #4056]
    421c:	b	422c <PyInit__lzma@@Base+0x1b08>
    4220:	adrp	x2, 16000 <PyInit__lzma@@Base+0x138dc>
    4224:	ldr	x2, [x2, #4056]
    4228:	ldr	x3, [x20, #16]
    422c:	mov	x0, x19
    4230:	mov	w1, w21
    4234:	bl	48c4 <PyInit__lzma@@Base+0x21a0>
    4238:	b	4268 <PyInit__lzma@@Base+0x1b44>
    423c:	ldr	x0, [x20]
    4240:	bl	2600 <_PyLong_AsInt@plt>
    4244:	mov	w21, w0
    4248:	cmn	w0, #0x1
    424c:	b.eq	425c <PyInit__lzma@@Base+0x1b38>  // b.none
    4250:	subs	x22, x22, #0x1
    4254:	b.ne	4204 <PyInit__lzma@@Base+0x1ae0>  // b.any
    4258:	b	41f0 <PyInit__lzma@@Base+0x1acc>
    425c:	bl	2480 <PyErr_Occurred@plt>
    4260:	cbz	x0, 4250 <PyInit__lzma@@Base+0x1b2c>
    4264:	mov	w0, #0xffffffff            	// #-1
    4268:	ldp	x20, x19, [sp, #64]
    426c:	ldp	x22, x21, [sp, #48]
    4270:	ldp	x29, x30, [sp, #32]
    4274:	add	sp, sp, #0x50
    4278:	ret
    427c:	sub	sp, sp, #0xa0
    4280:	stp	x29, x30, [sp, #112]
    4284:	stp	x22, x21, [sp, #128]
    4288:	stp	x20, x19, [sp, #144]
    428c:	add	x29, sp, #0x70
    4290:	mov	x21, x2
    4294:	mov	x20, x1
    4298:	mov	x19, x0
    429c:	cbz	x3, 42a8 <PyInit__lzma@@Base+0x1b84>
    42a0:	ldr	x22, [x3, #16]
    42a4:	b	42ac <PyInit__lzma@@Base+0x1b88>
    42a8:	mov	x22, xzr
    42ac:	movi	v0.2d, #0x0
    42b0:	stp	q0, q0, [sp, #64]
    42b4:	stp	q0, q0, [sp, #32]
    42b8:	str	q0, [sp, #16]
    42bc:	cbz	x20, 42d8 <PyInit__lzma@@Base+0x1bb4>
    42c0:	sub	x8, x21, #0x1
    42c4:	cmp	x8, #0x1
    42c8:	b.hi	42d8 <PyInit__lzma@@Base+0x1bb4>  // b.pmore
    42cc:	cbnz	x3, 42d8 <PyInit__lzma@@Base+0x1bb4>
    42d0:	cbnz	x20, 430c <PyInit__lzma@@Base+0x1be8>
    42d4:	b	4320 <PyInit__lzma@@Base+0x1bfc>
    42d8:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    42dc:	sub	x8, x29, #0x10
    42e0:	add	x4, x4, #0x930
    42e4:	mov	w5, #0x1                   	// #1
    42e8:	mov	w6, #0x2                   	// #2
    42ec:	mov	x0, x20
    42f0:	mov	x1, x21
    42f4:	mov	x2, xzr
    42f8:	mov	w7, wzr
    42fc:	str	x8, [sp]
    4300:	bl	2340 <_PyArg_UnpackKeywords@plt>
    4304:	mov	x20, x0
    4308:	cbz	x20, 4320 <PyInit__lzma@@Base+0x1bfc>
    430c:	ldr	x0, [x20]
    4310:	add	x1, sp, #0x10
    4314:	mov	w2, wzr
    4318:	bl	2560 <PyObject_GetBuffer@plt>
    431c:	cbz	w0, 434c <PyInit__lzma@@Base+0x1c28>
    4320:	mov	x19, xzr
    4324:	ldr	x8, [sp, #24]
    4328:	cbz	x8, 4334 <PyInit__lzma@@Base+0x1c10>
    432c:	add	x0, sp, #0x10
    4330:	bl	2290 <PyBuffer_Release@plt>
    4334:	mov	x0, x19
    4338:	ldp	x20, x19, [sp, #144]
    433c:	ldp	x22, x21, [sp, #128]
    4340:	ldp	x29, x30, [sp, #112]
    4344:	add	sp, sp, #0xa0
    4348:	ret
    434c:	add	x0, sp, #0x10
    4350:	mov	w1, #0x43                  	// #67
    4354:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4358:	cbz	w0, 438c <PyInit__lzma@@Base+0x1c68>
    435c:	add	x8, x22, x21
    4360:	cmp	x8, #0x1
    4364:	b.ne	43b0 <PyInit__lzma@@Base+0x1c8c>  // b.any
    4368:	mov	x20, #0xffffffffffffffff    	// #-1
    436c:	add	x1, sp, #0x10
    4370:	mov	x0, x19
    4374:	mov	x2, x20
    4378:	bl	4444 <PyInit__lzma@@Base+0x1d20>
    437c:	mov	x19, x0
    4380:	ldr	x8, [sp, #24]
    4384:	cbnz	x8, 432c <PyInit__lzma@@Base+0x1c08>
    4388:	b	4334 <PyInit__lzma@@Base+0x1c10>
    438c:	ldr	x3, [x20]
    4390:	adrp	x0, 6000 <PyInit__lzma@@Base+0x38dc>
    4394:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4398:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    439c:	add	x0, x0, #0x1fc
    43a0:	add	x1, x1, #0x212
    43a4:	add	x2, x2, #0x26
    43a8:	bl	2400 <_PyArg_BadArgument@plt>
    43ac:	b	4320 <PyInit__lzma@@Base+0x1bfc>
    43b0:	ldr	x8, [x20, #8]
    43b4:	ldr	x0, [x8, #8]
    43b8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    43bc:	ldr	x8, [x8, #3984]
    43c0:	cmp	x0, x8
    43c4:	b.eq	43d8 <PyInit__lzma@@Base+0x1cb4>  // b.none
    43c8:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    43cc:	ldr	x1, [x1, #3984]
    43d0:	bl	25a0 <PyType_IsSubtype@plt>
    43d4:	cbz	w0, 43f4 <PyInit__lzma@@Base+0x1cd0>
    43d8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    43dc:	ldr	x8, [x8, #4016]
    43e0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    43e4:	add	x1, x1, #0xd3b
    43e8:	ldr	x0, [x8]
    43ec:	bl	2350 <PyErr_SetString@plt>
    43f0:	b	4320 <PyInit__lzma@@Base+0x1bfc>
    43f4:	ldr	x0, [x20, #8]
    43f8:	bl	25f0 <PyNumber_Index@plt>
    43fc:	cbz	x0, 4418 <PyInit__lzma@@Base+0x1cf4>
    4400:	mov	x21, x0
    4404:	bl	23f0 <PyLong_AsSsize_t@plt>
    4408:	mov	x20, x0
    440c:	mov	x0, x21
    4410:	bl	2f48 <PyInit__lzma@@Base+0x824>
    4414:	b	441c <PyInit__lzma@@Base+0x1cf8>
    4418:	mov	x20, #0xffffffffffffffff    	// #-1
    441c:	cmn	x20, #0x1
    4420:	b.eq	442c <PyInit__lzma@@Base+0x1d08>  // b.none
    4424:	mov	w8, #0x1                   	// #1
    4428:	b	443c <PyInit__lzma@@Base+0x1d18>
    442c:	bl	2480 <PyErr_Occurred@plt>
    4430:	cbz	x0, 4424 <PyInit__lzma@@Base+0x1d00>
    4434:	mov	w8, wzr
    4438:	mov	x20, #0xffffffffffffffff    	// #-1
    443c:	cbz	w8, 4320 <PyInit__lzma@@Base+0x1bfc>
    4440:	b	436c <PyInit__lzma@@Base+0x1c48>
    4444:	stp	x29, x30, [sp, #-48]!
    4448:	stp	x22, x21, [sp, #16]
    444c:	stp	x20, x19, [sp, #32]
    4450:	mov	x29, sp
    4454:	mov	x19, x0
    4458:	ldr	x0, [x0, #216]
    445c:	mov	x21, x1
    4460:	mov	w1, wzr
    4464:	mov	x20, x2
    4468:	bl	2320 <PyThread_acquire_lock@plt>
    446c:	cbz	w0, 4498 <PyInit__lzma@@Base+0x1d74>
    4470:	ldrb	w8, [x19, #180]
    4474:	cbz	w8, 44c0 <PyInit__lzma@@Base+0x1d9c>
    4478:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    447c:	ldr	x8, [x8, #4048]
    4480:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4484:	add	x1, x1, #0x222
    4488:	ldr	x0, [x8]
    448c:	bl	2350 <PyErr_SetString@plt>
    4490:	mov	x20, xzr
    4494:	b	44d8 <PyInit__lzma@@Base+0x1db4>
    4498:	bl	2580 <PyEval_SaveThread@plt>
    449c:	ldr	x8, [x19, #216]
    44a0:	mov	x22, x0
    44a4:	mov	w1, #0x1                   	// #1
    44a8:	mov	x0, x8
    44ac:	bl	2320 <PyThread_acquire_lock@plt>
    44b0:	mov	x0, x22
    44b4:	bl	2260 <PyEval_RestoreThread@plt>
    44b8:	ldrb	w8, [x19, #180]
    44bc:	cbnz	w8, 4478 <PyInit__lzma@@Base+0x1d54>
    44c0:	ldr	x1, [x21]
    44c4:	ldr	x2, [x21, #16]
    44c8:	mov	x0, x19
    44cc:	mov	x3, x20
    44d0:	bl	44f4 <PyInit__lzma@@Base+0x1dd0>
    44d4:	mov	x20, x0
    44d8:	ldr	x0, [x19, #216]
    44dc:	bl	2520 <PyThread_release_lock@plt>
    44e0:	mov	x0, x20
    44e4:	ldp	x20, x19, [sp, #32]
    44e8:	ldp	x22, x21, [sp, #16]
    44ec:	ldp	x29, x30, [sp], #48
    44f0:	ret
    44f4:	stp	x29, x30, [sp, #-80]!
    44f8:	str	x25, [sp, #16]
    44fc:	stp	x24, x23, [sp, #32]
    4500:	stp	x22, x21, [sp, #48]
    4504:	stp	x20, x19, [sp, #64]
    4508:	mov	x29, sp
    450c:	ldr	x23, [x0, #40]
    4510:	mov	x20, x3
    4514:	mov	x21, x2
    4518:	mov	x19, x0
    451c:	mov	x22, x1
    4520:	cbz	x23, 457c <PyInit__lzma@@Base+0x1e58>
    4524:	ldp	x24, x8, [x19, #200]
    4528:	ldr	x2, [x19, #48]
    452c:	add	x9, x24, x8
    4530:	add	x10, x23, x2
    4534:	sub	x11, x8, x2
    4538:	cmp	x11, x21
    453c:	sub	x9, x9, x10
    4540:	b.cs	4584 <PyInit__lzma@@Base+0x1e60>  // b.hs, b.nlast
    4544:	add	x8, x8, x21
    4548:	sub	x25, x8, x9
    454c:	mov	x0, x24
    4550:	mov	x1, x25
    4554:	bl	2380 <PyMem_Realloc@plt>
    4558:	cbz	x0, 45a4 <PyInit__lzma@@Base+0x1e80>
    455c:	sub	x9, x23, x24
    4560:	mov	w8, wzr
    4564:	add	x9, x0, x9
    4568:	stp	x0, x25, [x19, #200]
    456c:	str	x9, [x19, #40]
    4570:	cbz	wzr, 45bc <PyInit__lzma@@Base+0x1e98>
    4574:	cbnz	w8, 45e4 <PyInit__lzma@@Base+0x1ec0>
    4578:	b	45ec <PyInit__lzma@@Base+0x1ec8>
    457c:	stp	x22, x21, [x19, #40]
    4580:	b	45f0 <PyInit__lzma@@Base+0x1ecc>
    4584:	cmp	x9, x21
    4588:	b.cs	45bc <PyInit__lzma@@Base+0x1e98>  // b.hs, b.nlast
    458c:	mov	x0, x24
    4590:	mov	x1, x23
    4594:	bl	2210 <memmove@plt>
    4598:	ldr	x8, [x19, #200]
    459c:	str	x8, [x19, #40]
    45a0:	b	45bc <PyInit__lzma@@Base+0x1e98>
    45a4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    45a8:	ldr	x8, [x8, #4000]
    45ac:	ldr	x0, [x8]
    45b0:	bl	2390 <PyErr_SetNone@plt>
    45b4:	mov	w8, #0x1                   	// #1
    45b8:	cbnz	w8, 4574 <PyInit__lzma@@Base+0x1e50>
    45bc:	ldp	x8, x9, [x19, #40]
    45c0:	mov	x1, x22
    45c4:	mov	x2, x21
    45c8:	add	x0, x8, x9
    45cc:	bl	2200 <memcpy@plt>
    45d0:	ldr	x9, [x19, #48]
    45d4:	mov	w8, wzr
    45d8:	add	x9, x9, x21
    45dc:	str	x9, [x19, #48]
    45e0:	cbz	w8, 45ec <PyInit__lzma@@Base+0x1ec8>
    45e4:	mov	x20, xzr
    45e8:	b	4648 <PyInit__lzma@@Base+0x1f24>
    45ec:	mov	w23, #0x1                   	// #1
    45f0:	mov	x0, x19
    45f4:	mov	x1, x20
    45f8:	bl	46fc <PyInit__lzma@@Base+0x1fd8>
    45fc:	mov	x20, x0
    4600:	cbz	x0, 4644 <PyInit__lzma@@Base+0x1f20>
    4604:	ldrb	w8, [x19, #180]
    4608:	cbz	w8, 4664 <PyInit__lzma@@Base+0x1f40>
    460c:	ldr	x1, [x19, #48]
    4610:	strb	wzr, [x19, #192]
    4614:	cbz	x1, 4648 <PyInit__lzma@@Base+0x1f24>
    4618:	ldr	x0, [x19, #40]
    461c:	ldr	x21, [x19, #184]
    4620:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4624:	str	x0, [x19, #184]
    4628:	mov	x0, x21
    462c:	bl	346c <PyInit__lzma@@Base+0xd48>
    4630:	ldr	x8, [x19, #184]
    4634:	cbnz	x8, 4648 <PyInit__lzma@@Base+0x1f24>
    4638:	mov	x0, x20
    463c:	bl	346c <PyInit__lzma@@Base+0xd48>
    4640:	b	45e4 <PyInit__lzma@@Base+0x1ec0>
    4644:	str	xzr, [x19, #40]
    4648:	mov	x0, x20
    464c:	ldp	x20, x19, [sp, #64]
    4650:	ldp	x22, x21, [sp, #48]
    4654:	ldp	x24, x23, [sp, #32]
    4658:	ldr	x25, [sp, #16]
    465c:	ldp	x29, x30, [sp], #80
    4660:	ret
    4664:	ldr	x8, [x19, #48]
    4668:	cbz	x8, 46c8 <PyInit__lzma@@Base+0x1fa4>
    466c:	strb	wzr, [x19, #192]
    4670:	cbnz	w23, 4648 <PyInit__lzma@@Base+0x1f24>
    4674:	ldr	x0, [x19, #200]
    4678:	cbz	x0, 4690 <PyInit__lzma@@Base+0x1f6c>
    467c:	ldr	x9, [x19, #208]
    4680:	cmp	x9, x8
    4684:	b.cs	4690 <PyInit__lzma@@Base+0x1f6c>  // b.hs, b.nlast
    4688:	bl	2270 <PyMem_Free@plt>
    468c:	str	xzr, [x19, #200]
    4690:	ldr	x8, [x19, #200]
    4694:	cbnz	x8, 46b0 <PyInit__lzma@@Base+0x1f8c>
    4698:	ldr	x0, [x19, #48]
    469c:	bl	2620 <PyMem_Malloc@plt>
    46a0:	str	x0, [x19, #200]
    46a4:	cbz	x0, 46e8 <PyInit__lzma@@Base+0x1fc4>
    46a8:	ldr	x8, [x19, #48]
    46ac:	str	x8, [x19, #208]
    46b0:	ldr	x0, [x19, #200]
    46b4:	ldp	x1, x2, [x19, #40]
    46b8:	bl	2200 <memcpy@plt>
    46bc:	ldr	x8, [x19, #200]
    46c0:	str	x8, [x19, #40]
    46c4:	b	4648 <PyInit__lzma@@Base+0x1f24>
    46c8:	ldr	x8, [x19, #72]
    46cc:	str	xzr, [x19, #40]
    46d0:	cbz	x8, 46e0 <PyInit__lzma@@Base+0x1fbc>
    46d4:	mov	w8, #0x1                   	// #1
    46d8:	strb	w8, [x19, #192]
    46dc:	b	4648 <PyInit__lzma@@Base+0x1f24>
    46e0:	strb	wzr, [x19, #192]
    46e4:	b	4648 <PyInit__lzma@@Base+0x1f24>
    46e8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    46ec:	ldr	x8, [x8, #4000]
    46f0:	ldr	x0, [x8]
    46f4:	bl	2390 <PyErr_SetNone@plt>
    46f8:	b	4638 <PyInit__lzma@@Base+0x1f14>
    46fc:	sub	sp, sp, #0x60
    4700:	stp	x29, x30, [sp, #16]
    4704:	stp	x26, x25, [sp, #32]
    4708:	stp	x24, x23, [sp, #48]
    470c:	stp	x22, x21, [sp, #64]
    4710:	stp	x20, x19, [sp, #80]
    4714:	add	x29, sp, #0x10
    4718:	cmp	x1, #0x2, lsl #12
    471c:	mov	w8, #0x2000                	// #8192
    4720:	mov	x19, x1
    4724:	mov	x20, x0
    4728:	csel	x1, x1, x8, cc  // cc = lo, ul, last
    472c:	mov	x0, xzr
    4730:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4734:	str	x0, [sp, #8]
    4738:	cbz	x0, 48a8 <PyInit__lzma@@Base+0x2184>
    473c:	add	x8, x0, #0x20
    4740:	str	x8, [x20, #64]
    4744:	ldr	x8, [sp, #8]
    4748:	add	x21, x20, #0x28
    474c:	mov	w25, #0xa                   	// #10
    4750:	mov	w26, #0x1                   	// #1
    4754:	ldr	x8, [x8, #16]
    4758:	str	x8, [x20, #72]
    475c:	b	478c <PyInit__lzma@@Base+0x2068>
    4760:	ldr	x9, [x20, #72]
    4764:	cmp	x9, #0x0
    4768:	csel	w23, w25, wzr, eq  // eq = none
    476c:	mov	x0, x24
    4770:	sub	x22, x8, #0x20
    4774:	bl	2260 <PyEval_RestoreThread@plt>
    4778:	mov	w0, w23
    477c:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    4780:	cbz	w0, 47c8 <PyInit__lzma@@Base+0x20a4>
    4784:	mov	w8, #0x4                   	// #4
    4788:	cbnz	w8, 485c <PyInit__lzma@@Base+0x2138>
    478c:	bl	2580 <PyEval_SaveThread@plt>
    4790:	mov	x24, x0
    4794:	mov	x0, x21
    4798:	mov	w1, wzr
    479c:	bl	2250 <lzma_code@plt>
    47a0:	ldr	x8, [x20, #64]
    47a4:	ldr	x9, [sp, #8]
    47a8:	mov	w23, w0
    47ac:	cmp	w0, #0xa
    47b0:	sub	x8, x8, x9
    47b4:	b.ne	476c <PyInit__lzma@@Base+0x2048>  // b.any
    47b8:	ldr	x9, [x20, #48]
    47bc:	cbz	x9, 4760 <PyInit__lzma@@Base+0x203c>
    47c0:	mov	w23, #0xa                   	// #10
    47c4:	b	476c <PyInit__lzma@@Base+0x2048>
    47c8:	cmp	w23, #0x1
    47cc:	b.eq	47f4 <PyInit__lzma@@Base+0x20d0>  // b.none
    47d0:	cmp	w23, #0x4
    47d4:	b.eq	47e0 <PyInit__lzma@@Base+0x20bc>  // b.none
    47d8:	cmp	w23, #0x2
    47dc:	b.ne	4800 <PyInit__lzma@@Base+0x20dc>  // b.any
    47e0:	mov	x0, x21
    47e4:	bl	24e0 <lzma_get_check@plt>
    47e8:	cmp	w23, #0x1
    47ec:	str	w0, [x20, #176]
    47f0:	b.ne	4800 <PyInit__lzma@@Base+0x20dc>  // b.any
    47f4:	strb	w26, [x20, #180]
    47f8:	mov	w8, #0x2                   	// #2
    47fc:	b	4788 <PyInit__lzma@@Base+0x2064>
    4800:	ldr	x8, [x20, #72]
    4804:	cbz	x8, 4814 <PyInit__lzma@@Base+0x20f0>
    4808:	ldr	x8, [x20, #48]
    480c:	cbnz	x8, 4854 <PyInit__lzma@@Base+0x2130>
    4810:	b	481c <PyInit__lzma@@Base+0x20f8>
    4814:	cmp	x22, x19
    4818:	b.ne	4824 <PyInit__lzma@@Base+0x2100>  // b.any
    481c:	mov	w8, #0x2                   	// #2
    4820:	b	4788 <PyInit__lzma@@Base+0x2064>
    4824:	add	x0, sp, #0x8
    4828:	mov	x1, x19
    482c:	bl	3bfc <PyInit__lzma@@Base+0x14d8>
    4830:	cmn	w0, #0x1
    4834:	b.eq	4784 <PyInit__lzma@@Base+0x2060>  // b.none
    4838:	ldr	x8, [sp, #8]
    483c:	add	x9, x8, x22
    4840:	add	x9, x9, #0x20
    4844:	str	x9, [x20, #64]
    4848:	ldr	x8, [x8, #16]
    484c:	sub	x8, x8, x22
    4850:	str	x8, [x20, #72]
    4854:	mov	w8, wzr
    4858:	b	4788 <PyInit__lzma@@Base+0x2064>
    485c:	cmp	w8, #0x4
    4860:	b.eq	4898 <PyInit__lzma@@Base+0x2174>  // b.none
    4864:	cmp	w8, #0x2
    4868:	b.ne	48a8 <PyInit__lzma@@Base+0x2184>  // b.any
    486c:	ldr	x8, [sp, #8]
    4870:	ldr	x8, [x8, #16]
    4874:	cmp	x22, x8
    4878:	b.eq	4890 <PyInit__lzma@@Base+0x216c>  // b.none
    487c:	add	x0, sp, #0x8
    4880:	mov	x1, x22
    4884:	bl	2240 <_PyBytes_Resize@plt>
    4888:	cmn	w0, #0x1
    488c:	b.eq	4898 <PyInit__lzma@@Base+0x2174>  // b.none
    4890:	ldr	x0, [sp, #8]
    4894:	b	48a8 <PyInit__lzma@@Base+0x2184>
    4898:	ldr	x0, [sp, #8]
    489c:	bl	346c <PyInit__lzma@@Base+0xd48>
    48a0:	mov	x0, xzr
    48a4:	b	48a8 <PyInit__lzma@@Base+0x2184>
    48a8:	ldp	x20, x19, [sp, #80]
    48ac:	ldp	x22, x21, [sp, #64]
    48b0:	ldp	x24, x23, [sp, #48]
    48b4:	ldp	x26, x25, [sp, #32]
    48b8:	ldp	x29, x30, [sp, #16]
    48bc:	add	sp, sp, #0x60
    48c0:	ret
    48c4:	stp	x29, x30, [sp, #-64]!
    48c8:	stp	x24, x23, [sp, #16]
    48cc:	stp	x22, x21, [sp, #32]
    48d0:	stp	x20, x19, [sp, #48]
    48d4:	mov	x29, sp
    48d8:	adrp	x23, 16000 <PyInit__lzma@@Base+0x138dc>
    48dc:	ldr	x23, [x23, #4056]
    48e0:	mov	x20, x3
    48e4:	mov	w21, w1
    48e8:	mov	x19, x0
    48ec:	cmp	x2, x23
    48f0:	b.eq	4910 <PyInit__lzma@@Base+0x21ec>  // b.none
    48f4:	cmp	w21, #0x3
    48f8:	b.ne	4918 <PyInit__lzma@@Base+0x21f4>  // b.any
    48fc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4900:	ldr	x8, [x8, #4008]
    4904:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4908:	add	x1, x1, #0x260
    490c:	b	4a38 <PyInit__lzma@@Base+0x2314>
    4910:	mov	x22, #0xffffffffffffffff    	// #-1
    4914:	b	492c <PyInit__lzma@@Base+0x2208>
    4918:	mov	x0, x2
    491c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    4920:	mov	x22, x0
    4924:	bl	2480 <PyErr_Occurred@plt>
    4928:	cbnz	x0, 4a40 <PyInit__lzma@@Base+0x231c>
    492c:	cmp	w21, #0x3
    4930:	b.ne	4950 <PyInit__lzma@@Base+0x222c>  // b.any
    4934:	cmp	x20, x23
    4938:	b.ne	4950 <PyInit__lzma@@Base+0x222c>  // b.any
    493c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4940:	ldr	x8, [x8, #4008]
    4944:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4948:	add	x1, x1, #0x1c1
    494c:	b	4a38 <PyInit__lzma@@Base+0x2314>
    4950:	cmp	w21, #0x3
    4954:	b.eq	4974 <PyInit__lzma@@Base+0x2250>  // b.none
    4958:	cmp	x20, x23
    495c:	b.eq	4974 <PyInit__lzma@@Base+0x2250>  // b.none
    4960:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4964:	ldr	x8, [x8, #4008]
    4968:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    496c:	add	x1, x1, #0x28c
    4970:	b	4a38 <PyInit__lzma@@Base+0x2314>
    4974:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    4978:	add	x8, x8, #0xcd4
    497c:	mov	x9, x19
    4980:	adrp	x10, 3000 <PyInit__lzma@@Base+0x8dc>
    4984:	str	x8, [x9, #16]!
    4988:	add	x10, x10, #0xd08
    498c:	mov	x23, x9
    4990:	stp	x10, xzr, [x9, #8]
    4994:	str	xzr, [x23, #24]!
    4998:	str	x9, [x9, #72]
    499c:	bl	2500 <PyThread_allocate_lock@plt>
    49a0:	cbz	x0, 4a28 <PyInit__lzma@@Base+0x2304>
    49a4:	mov	x24, x0
    49a8:	ldr	x0, [x19, #216]
    49ac:	cbz	x0, 49b4 <PyInit__lzma@@Base+0x2290>
    49b0:	bl	2630 <PyThread_free_lock@plt>
    49b4:	stp	xzr, x24, [x19, #208]
    49b8:	ldr	x24, [x19, #184]
    49bc:	mov	w8, #0x10                  	// #16
    49c0:	mov	w9, #0x1                   	// #1
    49c4:	mov	x0, xzr
    49c8:	mov	x1, xzr
    49cc:	str	w8, [x19, #176]
    49d0:	strb	w9, [x19, #192]
    49d4:	str	xzr, [x19, #200]
    49d8:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    49dc:	str	x0, [x19, #184]
    49e0:	mov	x0, x24
    49e4:	bl	346c <PyInit__lzma@@Base+0xd48>
    49e8:	ldr	x8, [x19, #184]
    49ec:	cbz	x8, 4ac4 <PyInit__lzma@@Base+0x23a0>
    49f0:	cmp	w21, #0x3
    49f4:	b.hi	4aa8 <PyInit__lzma@@Base+0x2384>  // b.pmore
    49f8:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    49fc:	mov	w8, w21
    4a00:	add	x9, x9, #0xb5c
    4a04:	adr	x10, 4a14 <PyInit__lzma@@Base+0x22f0>
    4a08:	ldrb	w11, [x9, x8]
    4a0c:	add	x10, x10, x11, lsl #2
    4a10:	br	x10
    4a14:	mov	w2, #0x5                   	// #5
    4a18:	mov	x0, x23
    4a1c:	mov	x1, x22
    4a20:	bl	23d0 <lzma_auto_decoder@plt>
    4a24:	b	4a7c <PyInit__lzma@@Base+0x2358>
    4a28:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4a2c:	ldr	x8, [x8, #4000]
    4a30:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4a34:	add	x1, x1, #0x112
    4a38:	ldr	x0, [x8]
    4a3c:	bl	2350 <PyErr_SetString@plt>
    4a40:	mov	w0, #0xffffffff            	// #-1
    4a44:	ldp	x20, x19, [sp, #48]
    4a48:	ldp	x22, x21, [sp, #32]
    4a4c:	ldp	x24, x23, [sp, #16]
    4a50:	ldp	x29, x30, [sp], #64
    4a54:	ret
    4a58:	mov	w2, #0x5                   	// #5
    4a5c:	mov	x0, x23
    4a60:	mov	x1, x22
    4a64:	bl	24a0 <lzma_stream_decoder@plt>
    4a68:	b	4a7c <PyInit__lzma@@Base+0x2358>
    4a6c:	mov	x0, x23
    4a70:	mov	x1, x22
    4a74:	str	wzr, [x19, #176]
    4a78:	bl	24b0 <lzma_alone_decoder@plt>
    4a7c:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    4a80:	cbnz	w0, 4ac4 <PyInit__lzma@@Base+0x23a0>
    4a84:	b	4a44 <PyInit__lzma@@Base+0x2320>
    4a88:	mov	x0, x23
    4a8c:	mov	x1, x20
    4a90:	str	wzr, [x19, #176]
    4a94:	bl	4ae4 <PyInit__lzma@@Base+0x23c0>
    4a98:	cmn	w0, #0x1
    4a9c:	mov	w0, wzr
    4aa0:	b.ne	4a44 <PyInit__lzma@@Base+0x2320>  // b.any
    4aa4:	b	4ac4 <PyInit__lzma@@Base+0x23a0>
    4aa8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4aac:	ldr	x8, [x8, #4008]
    4ab0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4ab4:	add	x1, x1, #0x12a
    4ab8:	mov	w2, w21
    4abc:	ldr	x0, [x8]
    4ac0:	bl	25b0 <PyErr_Format@plt>
    4ac4:	ldr	x0, [x19, #184]
    4ac8:	cbz	x0, 4ad4 <PyInit__lzma@@Base+0x23b0>
    4acc:	str	xzr, [x19, #184]
    4ad0:	bl	2f48 <PyInit__lzma@@Base+0x824>
    4ad4:	ldr	x0, [x19, #216]
    4ad8:	bl	2630 <PyThread_free_lock@plt>
    4adc:	str	xzr, [x19, #216]
    4ae0:	b	4a40 <PyInit__lzma@@Base+0x231c>
    4ae4:	sub	sp, sp, #0x70
    4ae8:	stp	x29, x30, [sp, #80]
    4aec:	str	x19, [sp, #96]
    4af0:	add	x29, sp, #0x50
    4af4:	mov	x19, x0
    4af8:	mov	x0, sp
    4afc:	bl	3f80 <PyInit__lzma@@Base+0x185c>
    4b00:	cmn	w0, #0x1
    4b04:	b.eq	4b30 <PyInit__lzma@@Base+0x240c>  // b.none
    4b08:	mov	x1, sp
    4b0c:	mov	x0, x19
    4b10:	bl	2530 <lzma_raw_decoder@plt>
    4b14:	mov	w19, w0
    4b18:	mov	x0, sp
    4b1c:	bl	4068 <PyInit__lzma@@Base+0x1944>
    4b20:	mov	w0, w19
    4b24:	bl	3360 <PyInit__lzma@@Base+0xc3c>
    4b28:	cmp	w0, #0x0
    4b2c:	csetm	w0, ne  // ne = any
    4b30:	ldr	x19, [sp, #96]
    4b34:	ldp	x29, x30, [sp, #80]
    4b38:	add	sp, sp, #0x70
    4b3c:	ret

Disassembly of section .fini:

0000000000004b40 <.fini>:
    4b40:	stp	x29, x30, [sp, #-16]!
    4b44:	mov	x29, sp
    4b48:	ldp	x29, x30, [sp], #16
    4b4c:	ret
