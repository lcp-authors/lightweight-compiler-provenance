
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblsan.so.0.0.0_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006618 <.init>:
    6618:	stp	x29, x30, [sp, #-16]!
    661c:	mov	x29, sp
    6620:	bl	6d70 <*ABS*+0x10@plt+0x10>
    6624:	ldp	x29, x30, [sp], #16
    6628:	ret

Disassembly of section .plt:

0000000000006630 <_Unwind_Backtrace@plt-0x20>:
    6630:	stp	x16, x30, [sp, #-16]!
    6634:	adrp	x16, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6638:	ldr	x17, [x16, #4088]
    663c:	add	x16, x16, #0xff8
    6640:	br	x17
    6644:	nop
    6648:	nop
    664c:	nop

0000000000006650 <_Unwind_Backtrace@plt>:
    6650:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16]
    6658:	add	x16, x16, #0x0
    665c:	br	x17

0000000000006660 <__fxstat@plt>:
    6660:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #8]
    6668:	add	x16, x16, #0x8
    666c:	br	x17

0000000000006670 <__sanitizer_report_error_summary@plt>:
    6670:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #16]
    6678:	add	x16, x16, #0x10
    667c:	br	x17

0000000000006680 <OnPrint@plt>:
    6680:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #24]
    6688:	add	x16, x16, #0x18
    668c:	br	x17

0000000000006690 <__lsan_default_options@plt>:
    6690:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #32]
    6698:	add	x16, x16, #0x20
    669c:	br	x17

00000000000066a0 <__asan_cplus_demangle_init_info@plt>:
    66a0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #40]
    66a8:	add	x16, x16, #0x28
    66ac:	br	x17

00000000000066b0 <__asan_backtrace_qsort@plt>:
    66b0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #48]
    66b8:	add	x16, x16, #0x30
    66bc:	br	x17

00000000000066c0 <readlink@plt>:
    66c0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #56]
    66c8:	add	x16, x16, #0x38
    66cc:	br	x17

00000000000066d0 <shm_open@plt>:
    66d0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #64]
    66d8:	add	x16, x16, #0x40
    66dc:	br	x17

00000000000066e0 <sched_getaffinity@plt>:
    66e0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #72]
    66e8:	add	x16, x16, #0x48
    66ec:	br	x17

00000000000066f0 <free@plt>:
    66f0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #80]
    66f8:	add	x16, x16, #0x50
    66fc:	br	x17

0000000000006700 <__asan_backtrace_pcinfo@plt>:
    6700:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #88]
    6708:	add	x16, x16, #0x58
    670c:	br	x17

0000000000006710 <execv@plt>:
    6710:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #96]
    6718:	add	x16, x16, #0x60
    671c:	br	x17

0000000000006720 <pipe@plt>:
    6720:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #104]
    6728:	add	x16, x16, #0x68
    672c:	br	x17

0000000000006730 <pthread_attr_getdetachstate@plt>:
    6730:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #112]
    6738:	add	x16, x16, #0x70
    673c:	br	x17

0000000000006740 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6740:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #120]
    6748:	add	x16, x16, #0x78
    674c:	br	x17

0000000000006750 <__asan_cplus_demangle_type@plt>:
    6750:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #128]
    6758:	add	x16, x16, #0x80
    675c:	br	x17

0000000000006760 <__asan_backtrace_release_view@plt>:
    6760:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #136]
    6768:	add	x16, x16, #0x88
    676c:	br	x17

0000000000006770 <__asan_backtrace_dwarf_add@plt>:
    6770:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #144]
    6778:	add	x16, x16, #0x90
    677c:	br	x17

0000000000006780 <__sanitizer_malloc_hook@plt>:
    6780:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #152]
    6788:	add	x16, x16, #0x98
    678c:	br	x17

0000000000006790 <dlvsym@plt>:
    6790:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #160]
    6798:	add	x16, x16, #0xa0
    679c:	br	x17

00000000000067a0 <pthread_getattr_np@plt>:
    67a0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #168]
    67a8:	add	x16, x16, #0xa8
    67ac:	br	x17

00000000000067b0 <__sanitizer_symbolize_demangle@plt>:
    67b0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #176]
    67b8:	add	x16, x16, #0xb0
    67bc:	br	x17

00000000000067c0 <__asan_cplus_demangle_fill_name@plt>:
    67c0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #184]
    67c8:	add	x16, x16, #0xb8
    67cc:	br	x17

00000000000067d0 <__asan_internal_memcpy@plt>:
    67d0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #192]
    67d8:	add	x16, x16, #0xc0
    67dc:	br	x17

00000000000067e0 <__asan_internal_strlen@plt>:
    67e0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #200]
    67e8:	add	x16, x16, #0xc8
    67ec:	br	x17

00000000000067f0 <open@plt>:
    67f0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #208]
    67f8:	add	x16, x16, #0xd0
    67fc:	br	x17

0000000000006800 <pthread_attr_init@plt>:
    6800:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #216]
    6808:	add	x16, x16, #0xd8
    680c:	br	x17

0000000000006810 <real_pthread_attr_getstack@plt>:
    6810:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #224]
    6818:	add	x16, x16, #0xe0
    681c:	br	x17

0000000000006820 <sleep@plt>:
    6820:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #232]
    6828:	add	x16, x16, #0xe8
    682c:	br	x17

0000000000006830 <dlsym@plt>:
    6830:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #240]
    6838:	add	x16, x16, #0xf0
    683c:	br	x17

0000000000006840 <__asan_backtrace_vector_grow@plt>:
    6840:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #248]
    6848:	add	x16, x16, #0xf8
    684c:	br	x17

0000000000006850 <__asan_backtrace_syminfo@plt>:
    6850:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #256]
    6858:	add	x16, x16, #0x100
    685c:	br	x17

0000000000006860 <__asan_internal_memset@plt>:
    6860:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #264]
    6868:	add	x16, x16, #0x108
    686c:	br	x17

0000000000006870 <memset@plt>:
    6870:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #272]
    6878:	add	x16, x16, #0x110
    687c:	br	x17

0000000000006880 <__sanitizer_symbolize_data@plt>:
    6880:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #280]
    6888:	add	x16, x16, #0x118
    688c:	br	x17

0000000000006890 <isatty@plt>:
    6890:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #288]
    6898:	add	x16, x16, #0x120
    689c:	br	x17

00000000000068a0 <dlerror@plt>:
    68a0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #296]
    68a8:	add	x16, x16, #0x128
    68ac:	br	x17

00000000000068b0 <__cxa_finalize@plt>:
    68b0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #304]
    68b8:	add	x16, x16, #0x130
    68bc:	br	x17

00000000000068c0 <__asan_backtrace_alloc@plt>:
    68c0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #312]
    68c8:	add	x16, x16, #0x138
    68cc:	br	x17

00000000000068d0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    68d0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #320]
    68d8:	add	x16, x16, #0x140
    68dc:	br	x17

00000000000068e0 <getrusage@plt>:
    68e0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #328]
    68e8:	add	x16, x16, #0x148
    68ec:	br	x17

00000000000068f0 <pthread_attr_destroy@plt>:
    68f0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #336]
    68f8:	add	x16, x16, #0x150
    68fc:	br	x17

0000000000006900 <sprintf@plt>:
    6900:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #344]
    6908:	add	x16, x16, #0x158
    690c:	br	x17

0000000000006910 <__asan_backtrace_vector_release@plt>:
    6910:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #352]
    6918:	add	x16, x16, #0x160
    691c:	br	x17

0000000000006920 <real_clock_gettime@plt>:
    6920:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #360]
    6928:	add	x16, x16, #0x168
    692c:	br	x17

0000000000006930 <__cxa_demangle@plt>:
    6930:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #368]
    6938:	add	x16, x16, #0x170
    693c:	br	x17

0000000000006940 <__sanitizer_symbolize_code@plt>:
    6940:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #376]
    6948:	add	x16, x16, #0x178
    694c:	br	x17

0000000000006950 <dl_iterate_phdr@plt>:
    6950:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #384]
    6958:	add	x16, x16, #0x180
    695c:	br	x17

0000000000006960 <__sanitizer_dump_coverage@plt>:
    6960:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #392]
    6968:	add	x16, x16, #0x188
    696c:	br	x17

0000000000006970 <clock_gettime@plt>:
    6970:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #400]
    6978:	add	x16, x16, #0x190
    697c:	br	x17

0000000000006980 <__lsan_default_suppressions@plt>:
    6980:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #408]
    6988:	add	x16, x16, #0x198
    698c:	br	x17

0000000000006990 <getpid@plt>:
    6990:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #416]
    6998:	add	x16, x16, #0x1a0
    699c:	br	x17

00000000000069a0 <__lsan_is_turned_off@plt>:
    69a0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #424]
    69a8:	add	x16, x16, #0x1a8
    69ac:	br	x17

00000000000069b0 <__sanitizer_symbolize_flush@plt>:
    69b0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #432]
    69b8:	add	x16, x16, #0x1b0
    69bc:	br	x17

00000000000069c0 <__asan_backtrace_create_state@plt>:
    69c0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #440]
    69c8:	add	x16, x16, #0x1b8
    69cc:	br	x17

00000000000069d0 <mmap@plt>:
    69d0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #448]
    69d8:	add	x16, x16, #0x1c0
    69dc:	br	x17

00000000000069e0 <pthread_setspecific@plt>:
    69e0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #456]
    69e8:	add	x16, x16, #0x1c8
    69ec:	br	x17

00000000000069f0 <munmap@plt>:
    69f0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #464]
    69f8:	add	x16, x16, #0x1d0
    69fc:	br	x17

0000000000006a00 <__asan_cplus_demangle_print_callback@plt>:
    6a00:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #472]
    6a08:	add	x16, x16, #0x1d8
    6a0c:	br	x17

0000000000006a10 <__cxa_atexit@plt>:
    6a10:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #480]
    6a18:	add	x16, x16, #0x1e0
    6a1c:	br	x17

0000000000006a20 <snprintf@plt>:
    6a20:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #488]
    6a28:	add	x16, x16, #0x1e8
    6a2c:	br	x17

0000000000006a30 <malloc@plt>:
    6a30:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #496]
    6a38:	add	x16, x16, #0x1f0
    6a3c:	br	x17

0000000000006a40 <pthread_attr_getstack@plt>:
    6a40:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #504]
    6a48:	add	x16, x16, #0x1f8
    6a4c:	br	x17

0000000000006a50 <pthread_attr_setstacksize@plt>:
    6a50:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #512]
    6a58:	add	x16, x16, #0x200
    6a5c:	br	x17

0000000000006a60 <_Unwind_GetIP@plt>:
    6a60:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #520]
    6a68:	add	x16, x16, #0x208
    6a6c:	br	x17

0000000000006a70 <madvise@plt>:
    6a70:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #528]
    6a78:	add	x16, x16, #0x210
    6a7c:	br	x17

0000000000006a80 <usleep@plt>:
    6a80:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #536]
    6a88:	add	x16, x16, #0x218
    6a8c:	br	x17

0000000000006a90 <shm_unlink@plt>:
    6a90:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #544]
    6a98:	add	x16, x16, #0x220
    6a9c:	br	x17

0000000000006aa0 <__sched_cpucount@plt>:
    6aa0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #552]
    6aa8:	add	x16, x16, #0x228
    6aac:	br	x17

0000000000006ab0 <strrchr@plt>:
    6ab0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #560]
    6ab8:	add	x16, x16, #0x230
    6abc:	br	x17

0000000000006ac0 <__errno_location@plt>:
    6ac0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #568]
    6ac8:	add	x16, x16, #0x238
    6acc:	br	x17

0000000000006ad0 <sched_yield@plt>:
    6ad0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #576]
    6ad8:	add	x16, x16, #0x240
    6adc:	br	x17

0000000000006ae0 <__asan_backtrace_get_view@plt>:
    6ae0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #584]
    6ae8:	add	x16, x16, #0x248
    6aec:	br	x17

0000000000006af0 <syslog@plt>:
    6af0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #592]
    6af8:	add	x16, x16, #0x250
    6afc:	br	x17

0000000000006b00 <sigaction@plt>:
    6b00:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #600]
    6b08:	add	x16, x16, #0x258
    6b0c:	br	x17

0000000000006b10 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6b10:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #608]
    6b18:	add	x16, x16, #0x260
    6b1c:	br	x17

0000000000006b20 <__asan_cplus_demangle_fill_extended_operator@plt>:
    6b20:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #616]
    6b28:	add	x16, x16, #0x268
    6b2c:	br	x17

0000000000006b30 <__asan_internal_strcmp@plt>:
    6b30:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #624]
    6b38:	add	x16, x16, #0x270
    6b3c:	br	x17

0000000000006b40 <__lsan_init@plt>:
    6b40:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #632]
    6b48:	add	x16, x16, #0x278
    6b4c:	br	x17

0000000000006b50 <__asan_internal_strnlen@plt>:
    6b50:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #640]
    6b58:	add	x16, x16, #0x280
    6b5c:	br	x17

0000000000006b60 <close@plt>:
    6b60:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #648]
    6b68:	add	x16, x16, #0x288
    6b6c:	br	x17

0000000000006b70 <__asan_internal_strncmp@plt>:
    6b70:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #656]
    6b78:	add	x16, x16, #0x290
    6b7c:	br	x17

0000000000006b80 <pthread_key_create@plt>:
    6b80:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #664]
    6b88:	add	x16, x16, #0x298
    6b8c:	br	x17

0000000000006b90 <__asan_cplus_demangle_fill_ctor@plt>:
    6b90:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #672]
    6b98:	add	x16, x16, #0x2a0
    6b9c:	br	x17

0000000000006ba0 <setrlimit@plt>:
    6ba0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #680]
    6ba8:	add	x16, x16, #0x2a8
    6bac:	br	x17

0000000000006bb0 <getauxval@plt>:
    6bb0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #688]
    6bb8:	add	x16, x16, #0x2b0
    6bbc:	br	x17

0000000000006bc0 <__asan_backtrace_free@plt>:
    6bc0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #696]
    6bc8:	add	x16, x16, #0x2b8
    6bcc:	br	x17

0000000000006bd0 <__lxstat@plt>:
    6bd0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #704]
    6bd8:	add	x16, x16, #0x2c0
    6bdc:	br	x17

0000000000006be0 <__sanitizer_free_hook@plt>:
    6be0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #712]
    6be8:	add	x16, x16, #0x2c8
    6bec:	br	x17

0000000000006bf0 <abort@plt>:
    6bf0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #720]
    6bf8:	add	x16, x16, #0x2d0
    6bfc:	br	x17

0000000000006c00 <__asan_backtrace_initialize@plt>:
    6c00:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #728]
    6c08:	add	x16, x16, #0x2d8
    6c0c:	br	x17

0000000000006c10 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6c10:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #736]
    6c18:	add	x16, x16, #0x2e0
    6c1c:	br	x17

0000000000006c20 <__asan_internal_memcmp@plt>:
    6c20:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #744]
    6c28:	add	x16, x16, #0x2e8
    6c2c:	br	x17

0000000000006c30 <sysconf@plt>:
    6c30:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #752]
    6c38:	add	x16, x16, #0x2f0
    6c3c:	br	x17

0000000000006c40 <realloc@plt>:
    6c40:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #760]
    6c48:	add	x16, x16, #0x2f8
    6c4c:	br	x17

0000000000006c50 <pthread_self@plt>:
    6c50:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #768]
    6c58:	add	x16, x16, #0x300
    6c5c:	br	x17

0000000000006c60 <getuid@plt>:
    6c60:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #776]
    6c68:	add	x16, x16, #0x308
    6c6c:	br	x17

0000000000006c70 <getpagesize@plt>:
    6c70:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #784]
    6c78:	add	x16, x16, #0x310
    6c7c:	br	x17

0000000000006c80 <__asan_backtrace_vector_finish@plt>:
    6c80:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c84:	ldr	x17, [x16, #792]
    6c88:	add	x16, x16, #0x318
    6c8c:	br	x17

0000000000006c90 <__asan_backtrace_close@plt>:
    6c90:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6c94:	ldr	x17, [x16, #800]
    6c98:	add	x16, x16, #0x320
    6c9c:	br	x17

0000000000006ca0 <__asan_cplus_demangle_mangled_name@plt>:
    6ca0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ca4:	ldr	x17, [x16, #808]
    6ca8:	add	x16, x16, #0x328
    6cac:	br	x17

0000000000006cb0 <getrlimit@plt>:
    6cb0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6cb4:	ldr	x17, [x16, #816]
    6cb8:	add	x16, x16, #0x330
    6cbc:	br	x17

0000000000006cc0 <sigaltstack@plt>:
    6cc0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6cc4:	ldr	x17, [x16, #824]
    6cc8:	add	x16, x16, #0x338
    6ccc:	br	x17

0000000000006cd0 <fcntl@plt>:
    6cd0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6cd4:	ldr	x17, [x16, #832]
    6cd8:	add	x16, x16, #0x340
    6cdc:	br	x17

0000000000006ce0 <__gmon_start__@plt>:
    6ce0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6ce4:	ldr	x17, [x16, #840]
    6ce8:	add	x16, x16, #0x348
    6cec:	br	x17

0000000000006cf0 <__sanitizer_set_report_path@plt>:
    6cf0:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6cf4:	ldr	x17, [x16, #848]
    6cf8:	add	x16, x16, #0x350
    6cfc:	br	x17

0000000000006d00 <__asan_cplus_demangle_v3_callback@plt>:
    6d00:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6d04:	ldr	x17, [x16, #856]
    6d08:	add	x16, x16, #0x358
    6d0c:	br	x17

0000000000006d10 <__sanitizer_print_memory_profile@plt>:
    6d10:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6d14:	ldr	x17, [x16, #864]
    6d18:	add	x16, x16, #0x360
    6d1c:	br	x17

0000000000006d20 <__asan_cplus_demangle_fill_dtor@plt>:
    6d20:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6d24:	ldr	x17, [x16, #872]
    6d28:	add	x16, x16, #0x368
    6d2c:	br	x17

0000000000006d30 <__sancov_default_options@plt>:
    6d30:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6d34:	ldr	x17, [x16, #880]
    6d38:	add	x16, x16, #0x370
    6d3c:	br	x17

0000000000006d40 <__asan_backtrace_open@plt>:
    6d40:	adrp	x16, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6d44:	ldr	x17, [x16, #888]
    6d48:	add	x16, x16, #0x378
    6d4c:	br	x17

0000000000006d50 <*ABS*@plt>:
    6d50:	stp	x2, x3, [sp, #-16]!
    6d54:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d58:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d5c:	ldr	x2, [x2, #4064]

0000000000006d60 <*ABS*+0x10@plt>:
    6d60:	add	x3, x3, #0xfe8
    6d64:	br	x2
    6d68:	nop
    6d6c:	nop

Disassembly of section .text:

0000000000006d70 <__lsan_ignore_object@@Base-0x2ac0>:
    6d70:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d74:	ldr	x0, [x0, #4016]
    6d78:	cbz	x0, 6d80 <*ABS*+0x10@plt+0x20>
    6d7c:	b	6ce0 <__gmon_start__@plt>
    6d80:	ret
    6d84:	nop
    6d88:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6d8c:	add	x0, x0, #0xc60
    6d90:	adrp	x1, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6d94:	add	x1, x1, #0xc60
    6d98:	cmp	x1, x0
    6d9c:	b.eq	6db4 <*ABS*+0x10@plt+0x54>  // b.none
    6da0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6da4:	ldr	x1, [x1, #3920]
    6da8:	cbz	x1, 6db4 <*ABS*+0x10@plt+0x54>
    6dac:	mov	x16, x1
    6db0:	br	x16
    6db4:	ret
    6db8:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6dbc:	add	x0, x0, #0xc60
    6dc0:	adrp	x1, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6dc4:	add	x1, x1, #0xc60
    6dc8:	sub	x1, x1, x0
    6dcc:	lsr	x2, x1, #63
    6dd0:	add	x1, x2, x1, asr #3
    6dd4:	cmp	xzr, x1, asr #1
    6dd8:	asr	x1, x1, #1
    6ddc:	b.eq	6df4 <*ABS*+0x10@plt+0x94>  // b.none
    6de0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6de4:	ldr	x2, [x2, #4024]
    6de8:	cbz	x2, 6df4 <*ABS*+0x10@plt+0x94>
    6dec:	mov	x16, x2
    6df0:	br	x16
    6df4:	ret
    6df8:	stp	x29, x30, [sp, #-32]!
    6dfc:	mov	x29, sp
    6e00:	str	x19, [sp, #16]
    6e04:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e08:	ldrb	w0, [x19, #3200]
    6e0c:	cbnz	w0, 6e34 <*ABS*+0x10@plt+0xd4>
    6e10:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e14:	ldr	x0, [x0, #3584]
    6e18:	cbz	x0, 6e28 <*ABS*+0x10@plt+0xc8>
    6e1c:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
    6e20:	ldr	x0, [x0, #928]
    6e24:	bl	68b0 <__cxa_finalize@plt>
    6e28:	bl	6d88 <*ABS*+0x10@plt+0x28>
    6e2c:	mov	w0, #0x1                   	// #1
    6e30:	strb	w0, [x19, #3200]
    6e34:	ldr	x19, [sp, #16]
    6e38:	ldp	x29, x30, [sp], #32
    6e3c:	ret
    6e40:	b	6db8 <*ABS*+0x10@plt+0x58>
    6e44:	nop
    6e48:	stp	x19, x30, [sp, #-32]!
    6e4c:	bl	b750 <__sanitizer_print_stack_trace@@Base+0x5f8>
    6e50:	mov	x1, x0
    6e54:	add	x19, sp, #0x18
    6e58:	mov	x0, x19
    6e5c:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    6e60:	mov	x0, x19
    6e64:	bl	b8e0 <__sanitizer_print_stack_trace@@Base+0x788>
    6e68:	tst	w0, #0xff
    6e6c:	b.ne	6e78 <*ABS*+0x10@plt+0x118>  // b.any
    6e70:	ldp	x19, x30, [sp], #32
    6e74:	ret
    6e78:	mov	x0, x19
    6e7c:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    6e80:	cmp	w0, #0x3
    6e84:	b.eq	6e70 <*ABS*+0x10@plt+0x110>  // b.none
    6e88:	mov	x0, x19
    6e8c:	mov	w1, #0x0                   	// #0
    6e90:	bl	b908 <__sanitizer_print_stack_trace@@Base+0x7b0>
    6e94:	ldp	x19, x30, [sp], #32
    6e98:	ret
    6e9c:	nop
    6ea0:	ldr	w2, [x0, #112]
    6ea4:	cmp	w2, #0x2
    6ea8:	b.eq	6eb0 <*ABS*+0x10@plt+0x150>  // b.none
    6eac:	ret
    6eb0:	ldr	x4, [x1, #16]
    6eb4:	mov	x5, #0x0                   	// #0
    6eb8:	mov	x2, x4
    6ebc:	b	6ed4 <*ABS*+0x10@plt+0x174>
    6ec0:	ldr	x7, [x6, x3, lsl #3]
    6ec4:	ldr	x6, [x0, #32]
    6ec8:	cmp	w7, w6
    6ecc:	b.lt	6f38 <*ABS*+0x10@plt+0x1d8>  // b.tstop
    6ed0:	mov	x2, x3
    6ed4:	cmp	x2, x5
    6ed8:	b.ls	6f0c <*ABS*+0x10@plt+0x1ac>  // b.plast
    6edc:	add	x3, x2, x5
    6ee0:	ldr	x6, [x1]
    6ee4:	cmp	x4, x3, lsr #1
    6ee8:	lsr	x3, x3, #1
    6eec:	b.hi	6ec0 <*ABS*+0x10@plt+0x160>  // b.pmore
    6ef0:	str	x30, [sp, #-16]!
    6ef4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    6ef8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    6efc:	add	x2, x2, #0x560
    6f00:	add	x0, x0, #0x578
    6f04:	mov	w1, #0x1ba                 	// #442
    6f08:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    6f0c:	cmp	x4, x5
    6f10:	ldr	x0, [x0, #32]
    6f14:	b.ls	6f28 <*ABS*+0x10@plt+0x1c8>  // b.plast
    6f18:	ldr	x1, [x1]
    6f1c:	ldr	x1, [x1, x5, lsl #3]
    6f20:	cmp	x1, x0
    6f24:	b.eq	6eac <*ABS*+0x10@plt+0x14c>  // b.none
    6f28:	mov	x1, x0
    6f2c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    6f30:	add	x0, x0, #0x5b8
    6f34:	b	22d00 <OnPrint@@Base+0x398>
    6f38:	add	x5, x3, #0x1
    6f3c:	b	6ed4 <*ABS*+0x10@plt+0x174>
    6f40:	stp	x19, x20, [sp, #-64]!
    6f44:	str	x30, [sp, #24]
    6f48:	str	x0, [sp, #40]
    6f4c:	cbz	x1, 6fe0 <*ABS*+0x10@plt+0x280>
    6f50:	mov	x19, x1
    6f54:	bl	b750 <__sanitizer_print_stack_trace@@Base+0x5f8>
    6f58:	mov	x1, x0
    6f5c:	add	x20, sp, #0x38
    6f60:	mov	x0, x20
    6f64:	str	x1, [sp, #40]
    6f68:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    6f6c:	mov	x0, x20
    6f70:	bl	b8e0 <__sanitizer_print_stack_trace@@Base+0x788>
    6f74:	tst	w0, #0xff
    6f78:	b.ne	6f88 <*ABS*+0x10@plt+0x228>  // b.any
    6f7c:	ldr	x30, [sp, #24]
    6f80:	ldp	x19, x20, [sp], #64
    6f84:	ret
    6f88:	mov	x0, x20
    6f8c:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    6f90:	cmp	w0, #0x3
    6f94:	b.ne	6f7c <*ABS*+0x10@plt+0x21c>  // b.any
    6f98:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6f9c:	str	x21, [sp, #16]
    6fa0:	ldrb	w0, [x0, #3284]
    6fa4:	cbnz	w0, 7004 <*ABS*+0x10@plt+0x2a4>
    6fa8:	ldp	x4, x3, [x19, #8]
    6fac:	lsr	x4, x4, #3
    6fb0:	cmp	x3, x4
    6fb4:	b.hi	70ec <*ABS*+0x10@plt+0x38c>  // b.pmore
    6fb8:	add	x20, x3, #0x1
    6fbc:	b.eq	7040 <*ABS*+0x10@plt+0x2e0>  // b.none
    6fc0:	ldr	x21, [x19]
    6fc4:	str	x20, [x19, #16]
    6fc8:	add	x0, x21, x3, lsl #3
    6fcc:	add	x1, sp, #0x28
    6fd0:	mov	x2, #0x8                   	// #8
    6fd4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    6fd8:	ldr	x21, [sp, #16]
    6fdc:	b	6f7c <*ABS*+0x10@plt+0x21c>
    6fe0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    6fe4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    6fe8:	add	x2, x2, #0x5f8
    6fec:	add	x0, x0, #0x608
    6ff0:	mov	x4, #0x0                   	// #0
    6ff4:	mov	x3, #0x0                   	// #0
    6ff8:	mov	w1, #0x16f                 	// #367
    6ffc:	str	x21, [sp, #16]
    7000:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7004:	mov	x0, x20
    7008:	ldr	x21, [sp, #40]
    700c:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7010:	mov	x2, x0
    7014:	mov	x0, x20
    7018:	ldr	x20, [sp, #40]
    701c:	add	x20, x2, x20
    7020:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7024:	mov	x2, x20
    7028:	mov	x3, x0
    702c:	mov	x1, x21
    7030:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7034:	add	x0, x0, #0x638
    7038:	bl	22d00 <OnPrint@@Base+0x398>
    703c:	b	6fa8 <*ABS*+0x10@plt+0x248>
    7040:	tst	x20, x3
    7044:	b.eq	7080 <*ABS*+0x10@plt+0x320>  // b.none
    7048:	clz	x2, x20
    704c:	mov	w0, #0x3f                  	// #63
    7050:	sub	w0, w0, w2
    7054:	mov	x2, #0x1                   	// #1
    7058:	add	w4, w0, #0x1
    705c:	lsl	x4, x2, x4
    7060:	cmp	x20, x4
    7064:	b.cs	7138 <*ABS*+0x10@plt+0x3d8>  // b.hs, b.nlast
    7068:	lsl	x0, x2, x0
    706c:	cmp	x20, x0
    7070:	b.ls	7154 <*ABS*+0x10@plt+0x3f4>  // b.plast
    7074:	cmp	x3, x4
    7078:	b.hi	7110 <*ABS*+0x10@plt+0x3b0>  // b.pmore
    707c:	mov	x20, x4
    7080:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7084:	lsl	x20, x20, #3
    7088:	ldr	x21, [x21, #4000]
    708c:	ldr	x0, [x21]
    7090:	cbz	x0, 7104 <*ABS*+0x10@plt+0x3a4>
    7094:	sub	x1, x0, #0x1
    7098:	tst	x0, x1
    709c:	b.ne	7128 <*ABS*+0x10@plt+0x3c8>  // b.any
    70a0:	add	x20, x20, x1
    70a4:	neg	x0, x0
    70a8:	and	x20, x20, x0
    70ac:	mov	w2, #0x0                   	// #0
    70b0:	mov	x0, x20
    70b4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    70b8:	add	x1, x1, #0x700
    70bc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    70c0:	ldr	x1, [x19]
    70c4:	mov	x21, x0
    70c8:	ldr	x2, [x19, #16]
    70cc:	lsl	x2, x2, #3
    70d0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    70d4:	ldp	x0, x1, [x19]
    70d8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    70dc:	stp	x21, x20, [x19]
    70e0:	ldr	x3, [x19, #16]
    70e4:	add	x20, x3, #0x1
    70e8:	b	6fc4 <*ABS*+0x10@plt+0x264>
    70ec:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    70f0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    70f4:	add	x2, x2, #0x660
    70f8:	add	x0, x0, #0x578
    70fc:	mov	w1, #0x1be                 	// #446
    7100:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7104:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    7108:	str	x0, [x21]
    710c:	b	7094 <*ABS*+0x10@plt+0x334>
    7110:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7114:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7118:	add	x2, x2, #0x6c8
    711c:	add	x0, x0, #0x578
    7120:	mov	w1, #0x1fd                 	// #509
    7124:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7128:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    712c:	add	x0, x0, #0x6e8
    7130:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    7134:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    7138:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    713c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7140:	mov	x3, x20
    7144:	add	x2, x2, #0x680
    7148:	add	x0, x0, #0x578
    714c:	mov	w1, #0x17b                 	// #379
    7150:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7154:	mov	x4, x0
    7158:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    715c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7160:	mov	x3, x20
    7164:	add	x2, x2, #0x6a8
    7168:	add	x0, x0, #0x578
    716c:	mov	w1, #0x17c                 	// #380
    7170:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7174:	nop
    7178:	stp	x19, x20, [sp, #-64]!
    717c:	str	x30, [sp, #24]
    7180:	str	x0, [sp, #40]
    7184:	cbz	x1, 7278 <*ABS*+0x10@plt+0x518>
    7188:	mov	x19, x1
    718c:	bl	b750 <__sanitizer_print_stack_trace@@Base+0x5f8>
    7190:	mov	x1, x0
    7194:	add	x20, sp, #0x38
    7198:	mov	x0, x20
    719c:	str	x1, [sp, #40]
    71a0:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    71a4:	mov	x0, x20
    71a8:	bl	b8e0 <__sanitizer_print_stack_trace@@Base+0x788>
    71ac:	tst	w0, #0xff
    71b0:	b.ne	71c0 <*ABS*+0x10@plt+0x460>  // b.any
    71b4:	ldr	x30, [sp, #24]
    71b8:	ldp	x19, x20, [sp], #64
    71bc:	ret
    71c0:	mov	x0, x20
    71c4:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    71c8:	cmp	w0, #0x2
    71cc:	b.eq	71b4 <*ABS*+0x10@plt+0x454>  // b.none
    71d0:	mov	x0, x20
    71d4:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    71d8:	cmp	w0, #0x3
    71dc:	b.eq	71b4 <*ABS*+0x10@plt+0x454>  // b.none
    71e0:	mov	x0, x20
    71e4:	str	x21, [sp, #16]
    71e8:	bl	b930 <__sanitizer_print_stack_trace@@Base+0x7d8>
    71ec:	mov	w1, w0
    71f0:	cbz	w0, 7230 <*ABS*+0x10@plt+0x4d0>
    71f4:	ldr	x0, [x19, #8]
    71f8:	bl	24338 <OnPrint@@Base+0x19d0>
    71fc:	cmp	w1, #0x1
    7200:	b.ls	7230 <*ABS*+0x10@plt+0x4d0>  // b.plast
    7204:	ldr	x21, [x0, #8]
    7208:	cbz	x21, 7230 <*ABS*+0x10@plt+0x4d0>
    720c:	ldrb	w0, [x19, #16]
    7210:	cbnz	w0, 721c <*ABS*+0x10@plt+0x4bc>
    7214:	ldr	x21, [sp, #16]
    7218:	b	71b4 <*ABS*+0x10@plt+0x454>
    721c:	bl	add8 <__lsan_do_recoverable_leak_check@@Base+0x1110>
    7220:	mov	x1, x21
    7224:	bl	15b18 <__sancov_default_options@@Base+0x3048>
    7228:	tst	w0, #0xff
    722c:	b.eq	7214 <*ABS*+0x10@plt+0x4b4>  // b.none
    7230:	mov	x0, x20
    7234:	mov	w1, #0x2                   	// #2
    7238:	bl	b908 <__sanitizer_print_stack_trace@@Base+0x7b0>
    723c:	ldr	x19, [x19]
    7240:	ldp	x4, x3, [x19, #8]
    7244:	lsr	x4, x4, #3
    7248:	cmp	x3, x4
    724c:	b.hi	729c <*ABS*+0x10@plt+0x53c>  // b.pmore
    7250:	add	x20, x3, #0x1
    7254:	b.eq	72b4 <*ABS*+0x10@plt+0x554>  // b.none
    7258:	ldr	x21, [x19]
    725c:	str	x20, [x19, #16]
    7260:	add	x0, x21, x3, lsl #3
    7264:	add	x1, sp, #0x28
    7268:	mov	x2, #0x8                   	// #8
    726c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    7270:	ldr	x21, [sp, #16]
    7274:	b	71b4 <*ABS*+0x10@plt+0x454>
    7278:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    727c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7280:	add	x2, x2, #0x5f8
    7284:	add	x0, x0, #0x608
    7288:	mov	x4, #0x0                   	// #0
    728c:	mov	x3, #0x0                   	// #0
    7290:	mov	w1, #0x18b                 	// #395
    7294:	str	x21, [sp, #16]
    7298:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    729c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    72a0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    72a4:	add	x2, x2, #0x660
    72a8:	add	x0, x0, #0x578
    72ac:	mov	w1, #0x1be                 	// #446
    72b0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    72b4:	tst	x20, x3
    72b8:	b.eq	72f4 <*ABS*+0x10@plt+0x594>  // b.none
    72bc:	clz	x2, x20
    72c0:	mov	w1, #0x3f                  	// #63
    72c4:	sub	w2, w1, w2
    72c8:	mov	x1, #0x1                   	// #1
    72cc:	add	w4, w2, #0x1
    72d0:	lsl	x4, x1, x4
    72d4:	cmp	x20, x4
    72d8:	b.cs	7394 <*ABS*+0x10@plt+0x634>  // b.hs, b.nlast
    72dc:	lsl	x1, x1, x2
    72e0:	cmp	x20, x1
    72e4:	b.ls	73b0 <*ABS*+0x10@plt+0x650>  // b.plast
    72e8:	cmp	x3, x4
    72ec:	b.hi	736c <*ABS*+0x10@plt+0x60c>  // b.pmore
    72f0:	mov	x20, x4
    72f4:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    72f8:	lsl	x20, x20, #3
    72fc:	ldr	x21, [x21, #4000]
    7300:	ldr	x0, [x21]
    7304:	cbz	x0, 7360 <*ABS*+0x10@plt+0x600>
    7308:	sub	x1, x0, #0x1
    730c:	tst	x1, x0
    7310:	b.ne	7384 <*ABS*+0x10@plt+0x624>  // b.any
    7314:	add	x20, x20, x1
    7318:	neg	x0, x0
    731c:	and	x20, x20, x0
    7320:	mov	w2, #0x0                   	// #0
    7324:	mov	x0, x20
    7328:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    732c:	add	x1, x1, #0x700
    7330:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    7334:	ldr	x1, [x19]
    7338:	mov	x21, x0
    733c:	ldr	x2, [x19, #16]
    7340:	lsl	x2, x2, #3
    7344:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    7348:	ldp	x0, x1, [x19]
    734c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    7350:	stp	x21, x20, [x19]
    7354:	ldr	x3, [x19, #16]
    7358:	add	x20, x3, #0x1
    735c:	b	725c <*ABS*+0x10@plt+0x4fc>
    7360:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    7364:	str	x0, [x21]
    7368:	b	7308 <*ABS*+0x10@plt+0x5a8>
    736c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7370:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7374:	add	x2, x2, #0x6c8
    7378:	add	x0, x0, #0x578
    737c:	mov	w1, #0x1fd                 	// #509
    7380:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7384:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7388:	add	x0, x0, #0x6e8
    738c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    7390:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    7394:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7398:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    739c:	mov	x3, x20
    73a0:	add	x2, x2, #0x680
    73a4:	add	x0, x0, #0x578
    73a8:	mov	w1, #0x17b                 	// #379
    73ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    73b0:	mov	x4, x1
    73b4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    73b8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    73bc:	mov	x3, x20
    73c0:	add	x2, x2, #0x6a8
    73c4:	add	x0, x0, #0x578
    73c8:	mov	w1, #0x17c                 	// #380
    73cc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    73d0:	stp	x29, x30, [sp, #-128]!
    73d4:	mov	x29, sp
    73d8:	stp	x27, x28, [sp, #80]
    73dc:	adrp	x27, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    73e0:	add	x4, x27, #0xcc0
    73e4:	stp	x19, x20, [sp, #16]
    73e8:	ldrb	w5, [x4, #18]
    73ec:	stp	x21, x22, [sp, #32]
    73f0:	mov	x22, x0
    73f4:	mov	x21, x1
    73f8:	stp	x23, x24, [sp, #48]
    73fc:	ldrb	w0, [x4, #20]
    7400:	stp	x25, x26, [sp, #64]
    7404:	mov	x25, x2
    7408:	cbz	w5, 757c <*ABS*+0x10@plt+0x81c>
    740c:	cbnz	w0, 7544 <*ABS*+0x10@plt+0x7e4>
    7410:	mov	x19, x22
    7414:	mov	x24, #0x1                   	// #1
    7418:	add	x0, x19, #0x8
    741c:	cmp	x21, x0
    7420:	b.cc	7528 <*ABS*+0x10@plt+0x7c8>  // b.lo, b.ul, b.last
    7424:	clz	x23, x29
    7428:	mov	w28, #0x3f                  	// #63
    742c:	sub	w23, w28, w23
    7430:	add	x26, x29, #0x78
    7434:	add	w23, w23, #0x1
    7438:	b	744c <*ABS*+0x10@plt+0x6ec>
    743c:	add	x19, x19, x24
    7440:	add	x0, x19, #0x8
    7444:	cmp	x21, x0
    7448:	b.cc	7528 <*ABS*+0x10@plt+0x7c8>  // b.lo, b.ul, b.last
    744c:	ldr	x20, [x19]
    7450:	mov	x0, #0x3fff                	// #16383
    7454:	cmp	x20, x0
    7458:	b.ls	743c <*ABS*+0x10@plt+0x6dc>  // b.plast
    745c:	lsr	x0, x20, x23
    7460:	cbnz	x0, 743c <*ABS*+0x10@plt+0x6dc>
    7464:	mov	x0, x20
    7468:	bl	c180 <__sanitizer_get_allocated_size@@Base+0x170>
    746c:	str	x0, [x29, #112]
    7470:	cmp	x0, #0x0
    7474:	ccmp	x22, x0, #0x4, ne  // ne = any
    7478:	b.eq	743c <*ABS*+0x10@plt+0x6dc>  // b.none
    747c:	mov	x1, x0
    7480:	mov	x0, x26
    7484:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    7488:	mov	x0, x26
    748c:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    7490:	cmp	w0, #0x2
    7494:	b.eq	743c <*ABS*+0x10@plt+0x6dc>  // b.none
    7498:	mov	x0, x26
    749c:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    74a0:	cmp	w0, #0x3
    74a4:	b.eq	743c <*ABS*+0x10@plt+0x6dc>  // b.none
    74a8:	add	x1, x27, #0xcc0
    74ac:	ldrb	w0, [x1, #19]
    74b0:	cbnz	w0, 74cc <*ABS*+0x10@plt+0x76c>
    74b4:	mov	x0, x19
    74b8:	str	x1, [x29, #104]
    74bc:	bl	b018 <__lsan_do_recoverable_leak_check@@Base+0x1350>
    74c0:	tst	w0, #0xff
    74c4:	ldr	x1, [x29, #104]
    74c8:	b.ne	75d0 <*ABS*+0x10@plt+0x870>  // b.any
    74cc:	mov	x0, x26
    74d0:	mov	w1, #0x2                   	// #2
    74d4:	bl	b908 <__sanitizer_print_stack_trace@@Base+0x7b0>
    74d8:	add	x0, x27, #0xcc0
    74dc:	ldrb	w0, [x0, #20]
    74e0:	cbnz	w0, 7588 <*ABS*+0x10@plt+0x828>
    74e4:	cbz	x25, 743c <*ABS*+0x10@plt+0x6dc>
    74e8:	ldp	x4, x0, [x25, #8]
    74ec:	lsr	x4, x4, #3
    74f0:	cmp	x0, x4
    74f4:	b.hi	7620 <*ABS*+0x10@plt+0x8c0>  // b.pmore
    74f8:	add	x3, x0, #0x1
    74fc:	b.eq	763c <*ABS*+0x10@plt+0x8dc>  // b.none
    7500:	ldr	x4, [x25]
    7504:	str	x3, [x25, #16]
    7508:	add	x0, x4, x0, lsl #3
    750c:	add	x1, x29, #0x70
    7510:	add	x19, x19, x24
    7514:	mov	x2, #0x8                   	// #8
    7518:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    751c:	add	x0, x19, #0x8
    7520:	cmp	x21, x0
    7524:	b.cs	744c <*ABS*+0x10@plt+0x6ec>  // b.hs, b.nlast
    7528:	ldp	x19, x20, [sp, #16]
    752c:	ldp	x21, x22, [sp, #32]
    7530:	ldp	x23, x24, [sp, #48]
    7534:	ldp	x25, x26, [sp, #64]
    7538:	ldp	x27, x28, [sp, #80]
    753c:	ldp	x29, x30, [sp], #128
    7540:	ret
    7544:	mov	x24, #0x1                   	// #1
    7548:	mov	x1, x3
    754c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7550:	mov	x3, x21
    7554:	add	x0, x0, #0x718
    7558:	mov	x2, x22
    755c:	bl	22d00 <OnPrint@@Base+0x398>
    7560:	udiv	x0, x22, x24
    7564:	add	x19, x22, x24
    7568:	msub	x0, x0, x24, x22
    756c:	cmp	x0, #0x0
    7570:	sub	x19, x19, x0
    7574:	csel	x19, x19, x22, ne  // ne = any
    7578:	b	7418 <*ABS*+0x10@plt+0x6b8>
    757c:	mov	x24, #0x8                   	// #8
    7580:	cbz	w0, 7560 <*ABS*+0x10@plt+0x800>
    7584:	b	7548 <*ABS*+0x10@plt+0x7e8>
    7588:	ldr	x3, [x29, #112]
    758c:	mov	x0, x26
    7590:	str	x3, [x29, #96]
    7594:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7598:	mov	x4, x0
    759c:	ldr	x1, [x29, #112]
    75a0:	mov	x0, x26
    75a4:	add	x4, x4, x1
    75a8:	str	x4, [x29, #104]
    75ac:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    75b0:	mov	x5, x0
    75b4:	ldp	x3, x4, [x29, #96]
    75b8:	mov	x2, x20
    75bc:	mov	x1, x19
    75c0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    75c4:	add	x0, x0, #0x790
    75c8:	bl	22d00 <OnPrint@@Base+0x398>
    75cc:	b	74e4 <*ABS*+0x10@plt+0x784>
    75d0:	ldrb	w0, [x1, #20]
    75d4:	cbz	w0, 743c <*ABS*+0x10@plt+0x6dc>
    75d8:	ldr	x3, [x29, #112]
    75dc:	mov	x0, x26
    75e0:	str	x3, [x29, #96]
    75e4:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    75e8:	mov	x4, x0
    75ec:	ldr	x1, [x29, #112]
    75f0:	mov	x0, x26
    75f4:	add	x4, x4, x1
    75f8:	str	x4, [x29, #104]
    75fc:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7600:	mov	x5, x0
    7604:	ldp	x3, x4, [x29, #96]
    7608:	mov	x2, x20
    760c:	mov	x1, x19
    7610:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7614:	add	x0, x0, #0x748
    7618:	bl	22d00 <OnPrint@@Base+0x398>
    761c:	b	743c <*ABS*+0x10@plt+0x6dc>
    7620:	mov	x3, x0
    7624:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7628:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    762c:	add	x2, x2, #0x660
    7630:	add	x0, x0, #0x578
    7634:	mov	w1, #0x1be                 	// #446
    7638:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    763c:	tst	x3, x0
    7640:	b.eq	7678 <*ABS*+0x10@plt+0x918>  // b.none
    7644:	clz	x2, x3
    7648:	mov	x1, #0x1                   	// #1
    764c:	sub	w2, w28, w2
    7650:	add	w4, w2, #0x1
    7654:	lsl	x4, x1, x4
    7658:	cmp	x3, x4
    765c:	b.cs	7718 <*ABS*+0x10@plt+0x9b8>  // b.hs, b.nlast
    7660:	lsl	x1, x1, x2
    7664:	cmp	x3, x1
    7668:	b.ls	76fc <*ABS*+0x10@plt+0x99c>  // b.plast
    766c:	cmp	x0, x4
    7670:	b.hi	7730 <*ABS*+0x10@plt+0x9d0>  // b.pmore
    7674:	mov	x3, x4
    7678:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    767c:	lsl	x20, x3, #3
    7680:	ldr	x1, [x1, #4000]
    7684:	ldr	x0, [x1]
    7688:	cbz	x0, 76e8 <*ABS*+0x10@plt+0x988>
    768c:	sub	x1, x0, #0x1
    7690:	tst	x1, x0
    7694:	b.ne	774c <*ABS*+0x10@plt+0x9ec>  // b.any
    7698:	add	x20, x20, x1
    769c:	neg	x0, x0
    76a0:	and	x20, x20, x0
    76a4:	mov	w2, #0x0                   	// #0
    76a8:	mov	x0, x20
    76ac:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    76b0:	add	x1, x1, #0x700
    76b4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    76b8:	ldr	x1, [x25]
    76bc:	str	x0, [x29, #104]
    76c0:	ldr	x2, [x25, #16]
    76c4:	lsl	x2, x2, #3
    76c8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    76cc:	ldp	x0, x1, [x25]
    76d0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    76d4:	ldr	x0, [x25, #16]
    76d8:	ldr	x4, [x29, #104]
    76dc:	add	x3, x0, #0x1
    76e0:	stp	x4, x20, [x25]
    76e4:	b	7504 <*ABS*+0x10@plt+0x7a4>
    76e8:	str	x1, [x29, #104]
    76ec:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    76f0:	ldr	x1, [x29, #104]
    76f4:	str	x0, [x1]
    76f8:	b	768c <*ABS*+0x10@plt+0x92c>
    76fc:	mov	x4, x1
    7700:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7704:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7708:	add	x2, x2, #0x6a8
    770c:	add	x0, x0, #0x578
    7710:	mov	w1, #0x17c                 	// #380
    7714:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7718:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    771c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7720:	add	x2, x2, #0x680
    7724:	add	x0, x0, #0x578
    7728:	mov	w1, #0x17b                 	// #379
    772c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7730:	mov	x3, x0
    7734:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7738:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    773c:	add	x2, x2, #0x6c8
    7740:	add	x0, x0, #0x578
    7744:	mov	w1, #0x1fd                 	// #509
    7748:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    774c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7750:	add	x0, x0, #0x6e8
    7754:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    7758:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    775c:	nop
    7760:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7764:	add	x3, x3, #0x7c8
    7768:	b	73d0 <*ABS*+0x10@plt+0x670>
    776c:	nop
    7770:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7774:	ldr	x0, [x0, #4040]
    7778:	ldrb	w0, [x0, #57]
    777c:	cbnz	w0, 7784 <*ABS*+0x10@plt+0xa24>
    7780:	ret
    7784:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7788:	add	x0, x0, #0x7d8
    778c:	str	x30, [sp, #-16]!
    7790:	bl	22d00 <OnPrint@@Base+0x398>
    7794:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    7798:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    779c:	strb	wzr, [x0]
    77a0:	stur	xzr, [x0, #4]
    77a4:	ldr	d0, [x1, #1224]
    77a8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
    77ac:	add	x1, x1, #0xb00
    77b0:	strh	wzr, [x0, #20]
    77b4:	str	x1, [x0, #24]
    77b8:	stur	d0, [x0, #12]
    77bc:	ret
    77c0:	stp	x19, x20, [sp, #-48]!
    77c4:	mov	x20, x0
    77c8:	mov	x19, x1
    77cc:	stp	x21, x22, [sp, #16]
    77d0:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    77d4:	mov	x1, #0x10                  	// #16
    77d8:	ldr	x21, [x21, #3456]
    77dc:	stp	x23, x30, [sp, #32]
    77e0:	adrp	x22, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
    77e4:	mov	x0, x21
    77e8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    77ec:	mov	x2, x0
    77f0:	add	x22, x22, #0xb80
    77f4:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    77f8:	add	x3, x3, #0x800
    77fc:	mov	x0, x20
    7800:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7804:	stp	x22, x19, [x2]
    7808:	add	x1, x1, #0x840
    780c:	adrp	x23, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
    7810:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7814:	add	x23, x23, #0xbb0
    7818:	mov	x0, x21
    781c:	mov	x1, #0x10                  	// #16
    7820:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    7824:	mov	x2, x0
    7828:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    782c:	add	x0, x19, #0x4
    7830:	add	x3, x3, #0x850
    7834:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7838:	stp	x23, x0, [x2]
    783c:	add	x1, x1, #0x8c8
    7840:	mov	x0, x20
    7844:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7848:	mov	x0, x21
    784c:	mov	x1, #0x10                  	// #16
    7850:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    7854:	mov	x2, x0
    7858:	add	x4, x19, #0x8
    785c:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7860:	add	x3, x3, #0x8d8
    7864:	mov	x0, x20
    7868:	stp	x23, x4, [x2]
    786c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7870:	add	x1, x1, #0x8f8
    7874:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7878:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
    787c:	mov	x0, x21
    7880:	mov	x1, #0x10                  	// #16
    7884:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    7888:	mov	x2, x0
    788c:	add	x4, x19, #0xc
    7890:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7894:	add	x3, x3, #0x908
    7898:	mov	x0, x20
    789c:	stp	x22, x4, [x2]
    78a0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    78a4:	add	x1, x1, #0x940
    78a8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    78ac:	add	x23, x23, #0xb98
    78b0:	mov	x0, x21
    78b4:	mov	x1, #0x10                  	// #16
    78b8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    78bc:	mov	x2, x0
    78c0:	add	x4, x19, #0xd
    78c4:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    78c8:	add	x3, x3, #0x950
    78cc:	mov	x0, x20
    78d0:	stp	x22, x4, [x2]
    78d4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    78d8:	add	x1, x1, #0x970
    78dc:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    78e0:	mov	x0, x21
    78e4:	mov	x1, #0x10                  	// #16
    78e8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    78ec:	mov	x2, x0
    78f0:	add	x4, x19, #0xe
    78f4:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    78f8:	add	x3, x3, #0x980
    78fc:	mov	x0, x20
    7900:	stp	x22, x4, [x2]
    7904:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7908:	add	x1, x1, #0x9a8
    790c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7910:	mov	x0, x21
    7914:	mov	x1, #0x10                  	// #16
    7918:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    791c:	mov	x2, x0
    7920:	add	x4, x19, #0xf
    7924:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7928:	add	x3, x3, #0x9b8
    792c:	mov	x0, x20
    7930:	stp	x22, x4, [x2]
    7934:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7938:	add	x1, x1, #0x9f0
    793c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7940:	mov	x0, x21
    7944:	mov	x1, #0x10                  	// #16
    7948:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    794c:	mov	x2, x0
    7950:	add	x4, x19, #0x10
    7954:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7958:	add	x3, x3, #0x9f8
    795c:	mov	x0, x20
    7960:	stp	x22, x4, [x2]
    7964:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7968:	add	x1, x1, #0xa40
    796c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7970:	mov	x0, x21
    7974:	mov	x1, #0x10                  	// #16
    7978:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    797c:	mov	x2, x0
    7980:	add	x4, x19, #0x11
    7984:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7988:	add	x3, x3, #0xa58
    798c:	mov	x0, x20
    7990:	stp	x22, x4, [x2]
    7994:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7998:	add	x1, x1, #0xb00
    799c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    79a0:	mov	x0, x21
    79a4:	mov	x1, #0x10                  	// #16
    79a8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    79ac:	mov	x2, x0
    79b0:	add	x4, x19, #0x12
    79b4:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    79b8:	add	x3, x3, #0xb18
    79bc:	mov	x0, x20
    79c0:	stp	x22, x4, [x2]
    79c4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    79c8:	add	x1, x1, #0xb40
    79cc:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    79d0:	mov	x0, x21
    79d4:	mov	x1, #0x10                  	// #16
    79d8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    79dc:	mov	x2, x0
    79e0:	add	x4, x19, #0x13
    79e4:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    79e8:	add	x3, x3, #0xb50
    79ec:	mov	x0, x20
    79f0:	stp	x22, x4, [x2]
    79f4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    79f8:	add	x1, x1, #0xb88
    79fc:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7a00:	mov	x0, x21
    7a04:	mov	x1, #0x10                  	// #16
    7a08:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    7a0c:	mov	x2, x0
    7a10:	mov	x3, x23
    7a14:	add	x1, x19, #0x14
    7a18:	mov	x0, x20
    7a1c:	stp	x22, x1, [x2]
    7a20:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7a24:	add	x1, x1, #0xba8
    7a28:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7a2c:	mov	x0, x21
    7a30:	mov	x1, #0x10                  	// #16
    7a34:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    7a38:	mov	x2, x0
    7a3c:	add	x4, x19, #0x15
    7a40:	mov	x3, x23
    7a44:	mov	x0, x20
    7a48:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7a4c:	stp	x22, x4, [x2]
    7a50:	add	x1, x1, #0xbb8
    7a54:	add	x19, x19, #0x18
    7a58:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7a5c:	mov	x0, x21
    7a60:	mov	x1, #0x10                  	// #16
    7a64:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
    7a68:	mov	x2, x0
    7a6c:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
    7a70:	add	x1, x1, #0xb98
    7a74:	ldp	x21, x22, [sp, #16]
    7a78:	mov	x0, x20
    7a7c:	ldp	x23, x30, [sp, #32]
    7a80:	stp	x1, x19, [x2]
    7a84:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7a88:	ldp	x19, x20, [sp], #48
    7a8c:	add	x3, x3, #0xbc8
    7a90:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7a94:	add	x1, x1, #0xbe0
    7a98:	b	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
    7a9c:	nop
    7aa0:	stp	x19, x20, [sp, #-32]!
    7aa4:	stp	x21, x30, [sp, #16]
    7aa8:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7aac:	add	x20, x21, #0xcc0
    7ab0:	ldr	x4, [x20, #32]
    7ab4:	cbnz	x4, 7b1c <*ABS*+0x10@plt+0xdbc>
    7ab8:	add	x19, x20, #0x40
    7abc:	mov	w2, #0x1                   	// #1
    7ac0:	mov	x0, x19
    7ac4:	adrp	x1, 6d000 <_Unwind_Backtrace@GCC_3.3>
    7ac8:	add	x1, x1, #0x3a8
    7acc:	bl	28198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c88>
    7ad0:	ldr	x1, [x20, #24]
    7ad4:	mov	x0, x19
    7ad8:	str	x19, [x20, #32]
    7adc:	bl	286f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e8>
    7ae0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7ae4:	ldr	x0, [x0, #3704]
    7ae8:	cbz	x0, 7b00 <*ABS*+0x10@plt+0xda0>
    7aec:	ldr	x19, [x20, #32]
    7af0:	bl	6980 <__lsan_default_suppressions@plt>
    7af4:	mov	x1, x0
    7af8:	mov	x0, x19
    7afc:	bl	28370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e60>
    7b00:	add	x21, x21, #0xcc0
    7b04:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    7b08:	add	x1, x1, #0x4e0
    7b0c:	ldr	x0, [x21, #32]
    7b10:	ldp	x21, x30, [sp, #16]
    7b14:	ldp	x19, x20, [sp], #32
    7b18:	b	28370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e60>
    7b1c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7b20:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7b24:	add	x2, x2, #0xbf0
    7b28:	add	x0, x0, #0x608
    7b2c:	mov	x3, #0x0                   	// #0
    7b30:	mov	w1, #0x55                  	// #85
    7b34:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7b38:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7b3c:	ldr	x0, [x0, #3408]
    7b40:	ret
    7b44:	nop
    7b48:	stp	x19, x20, [sp, #-48]!
    7b4c:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7b50:	add	x0, x19, #0xcc0
    7b54:	stp	x21, x22, [sp, #16]
    7b58:	ldr	x1, [x0, #144]
    7b5c:	str	x30, [sp, #32]
    7b60:	cbnz	x1, 7bf0 <*ABS*+0x10@plt+0xe90>
    7b64:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7b68:	str	xzr, [x0, #192]
    7b6c:	stp	xzr, xzr, [x0, #200]
    7b70:	ldr	x20, [x20, #4000]
    7b74:	ldr	x0, [x20]
    7b78:	cbz	x0, 7be4 <*ABS*+0x10@plt+0xe84>
    7b7c:	sub	x1, x0, #0x1
    7b80:	tst	x1, x0
    7b84:	b.ne	7c10 <*ABS*+0x10@plt+0xeb0>  // b.any
    7b88:	add	x19, x19, #0xcc0
    7b8c:	add	x21, x0, #0xf
    7b90:	neg	x0, x0
    7b94:	mov	w2, #0x0                   	// #0
    7b98:	and	x21, x21, x0
    7b9c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7ba0:	mov	x0, x21
    7ba4:	add	x1, x1, #0x700
    7ba8:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    7bac:	mov	x22, x0
    7bb0:	ldr	x1, [x19, #192]
    7bb4:	add	x20, x19, #0xc0
    7bb8:	ldr	x2, [x19, #208]
    7bbc:	lsl	x2, x2, #4
    7bc0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    7bc4:	ldp	x0, x1, [x19, #192]
    7bc8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    7bcc:	str	x20, [x19, #144]
    7bd0:	stp	x22, x21, [x19, #192]
    7bd4:	ldp	x21, x22, [sp, #16]
    7bd8:	ldr	x30, [sp, #32]
    7bdc:	ldp	x19, x20, [sp], #48
    7be0:	ret
    7be4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    7be8:	str	x0, [x20]
    7bec:	b	7b7c <*ABS*+0x10@plt+0xe1c>
    7bf0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7bf4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7bf8:	add	x2, x2, #0xc18
    7bfc:	add	x0, x0, #0x608
    7c00:	mov	x4, #0x0                   	// #0
    7c04:	mov	x3, #0x0                   	// #0
    7c08:	mov	w1, #0x68                  	// #104
    7c0c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7c10:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7c14:	add	x0, x0, #0x6e8
    7c18:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    7c1c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    7c20:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7c24:	ldr	x0, [x0, #3432]
    7c28:	cbz	x0, 7c30 <*ABS*+0x10@plt+0xed0>
    7c2c:	b	6690 <__lsan_default_options@plt>
    7c30:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
    7c34:	add	x0, x0, #0xb00
    7c38:	ret
    7c3c:	nop
    7c40:	stp	x19, x20, [sp, #-48]!
    7c44:	stp	x21, x22, [sp, #16]
    7c48:	adrp	x22, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7c4c:	add	x0, x22, #0xcc0
    7c50:	stp	x23, x30, [sp, #32]
    7c54:	ldr	x1, [x0, #144]
    7c58:	cbnz	x1, 7d6c <*ABS*+0x10@plt+0x100c>
    7c5c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7c60:	str	xzr, [x0, #192]
    7c64:	stp	xzr, xzr, [x0, #200]
    7c68:	ldr	x19, [x19, #4000]
    7c6c:	ldr	x0, [x19]
    7c70:	cbz	x0, 7d60 <*ABS*+0x10@plt+0x1000>
    7c74:	sub	x1, x0, #0x1
    7c78:	tst	x1, x0
    7c7c:	b.ne	7d8c <*ABS*+0x10@plt+0x102c>  // b.any
    7c80:	add	x19, x22, #0xcc0
    7c84:	add	x21, x0, #0xf
    7c88:	neg	x0, x0
    7c8c:	mov	w2, #0x0                   	// #0
    7c90:	and	x21, x21, x0
    7c94:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7c98:	mov	x0, x21
    7c9c:	add	x1, x1, #0x700
    7ca0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    7ca4:	mov	x23, x0
    7ca8:	ldr	x1, [x19, #192]
    7cac:	add	x20, x19, #0xc0
    7cb0:	ldr	x2, [x19, #208]
    7cb4:	lsl	x2, x2, #4
    7cb8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    7cbc:	ldp	x0, x1, [x19, #192]
    7cc0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    7cc4:	str	x20, [x19, #144]
    7cc8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7ccc:	stp	x23, x21, [x19, #192]
    7cd0:	ldr	x1, [x1, #4040]
    7cd4:	ldrb	w0, [x1, #57]
    7cd8:	cbnz	w0, 7cec <*ABS*+0x10@plt+0xf8c>
    7cdc:	ldp	x21, x22, [sp, #16]
    7ce0:	ldp	x23, x30, [sp, #32]
    7ce4:	ldp	x19, x20, [sp], #48
    7ce8:	ret
    7cec:	ldr	x4, [x19, #32]
    7cf0:	cbnz	x4, 7d9c <*ABS*+0x10@plt+0x103c>
    7cf4:	add	x20, x19, #0x40
    7cf8:	mov	w2, #0x1                   	// #1
    7cfc:	mov	x0, x20
    7d00:	adrp	x1, 6d000 <_Unwind_Backtrace@GCC_3.3>
    7d04:	add	x1, x1, #0x3a8
    7d08:	bl	28198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c88>
    7d0c:	ldr	x1, [x19, #24]
    7d10:	mov	x0, x20
    7d14:	str	x20, [x19, #32]
    7d18:	bl	286f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e8>
    7d1c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7d20:	ldr	x0, [x0, #3704]
    7d24:	cbz	x0, 7d3c <*ABS*+0x10@plt+0xfdc>
    7d28:	ldr	x19, [x19, #32]
    7d2c:	bl	6980 <__lsan_default_suppressions@plt>
    7d30:	mov	x1, x0
    7d34:	mov	x0, x19
    7d38:	bl	28370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e60>
    7d3c:	add	x22, x22, #0xcc0
    7d40:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    7d44:	add	x1, x1, #0x4e0
    7d48:	ldr	x0, [x22, #32]
    7d4c:	bl	28370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e60>
    7d50:	ldp	x21, x22, [sp, #16]
    7d54:	ldp	x23, x30, [sp, #32]
    7d58:	ldp	x19, x20, [sp], #48
    7d5c:	b	abc0 <__lsan_do_recoverable_leak_check@@Base+0xef8>
    7d60:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    7d64:	str	x0, [x19]
    7d68:	b	7c74 <*ABS*+0x10@plt+0xf14>
    7d6c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7d70:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7d74:	add	x2, x2, #0xc18
    7d78:	add	x0, x0, #0x608
    7d7c:	mov	x4, #0x0                   	// #0
    7d80:	mov	x3, #0x0                   	// #0
    7d84:	mov	w1, #0x68                  	// #104
    7d88:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7d8c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7d90:	add	x0, x0, #0x6e8
    7d94:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    7d98:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    7d9c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7da0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7da4:	add	x2, x2, #0xbf0
    7da8:	add	x0, x0, #0x608
    7dac:	mov	x3, #0x0                   	// #0
    7db0:	mov	w1, #0x55                  	// #85
    7db4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7db8:	stp	x29, x30, [sp, #-128]!
    7dbc:	mov	x29, sp
    7dc0:	stp	x19, x20, [sp, #16]
    7dc4:	stp	x21, x22, [sp, #32]
    7dc8:	stp	x23, x24, [sp, #48]
    7dcc:	mov	w24, w4
    7dd0:	sub	w4, w4, #0x1
    7dd4:	stp	x25, x26, [sp, #64]
    7dd8:	cmp	w4, #0x1
    7ddc:	stp	x27, x28, [sp, #80]
    7de0:	b.hi	8018 <*ABS*+0x10@plt+0x12b8>  // b.pmore
    7de4:	mov	x21, x0
    7de8:	adrp	x27, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7dec:	add	x0, x27, #0xcc0
    7df0:	mov	x20, x1
    7df4:	mov	x25, x2
    7df8:	ldrb	w1, [x0, #18]
    7dfc:	ldrb	w0, [x0, #20]
    7e00:	cbz	w1, 7f3c <*ABS*+0x10@plt+0x11dc>
    7e04:	cbnz	w0, 7f60 <*ABS*+0x10@plt+0x1200>
    7e08:	mov	x19, x21
    7e0c:	mov	x23, #0x1                   	// #1
    7e10:	add	x0, x19, #0x8
    7e14:	cmp	x20, x0
    7e18:	b.cc	7f20 <*ABS*+0x10@plt+0x11c0>  // b.lo, b.ul, b.last
    7e1c:	clz	x22, x29
    7e20:	mov	w0, #0x3f                  	// #63
    7e24:	sub	w22, w0, w22
    7e28:	add	x26, x29, #0x78
    7e2c:	add	w22, w22, #0x1
    7e30:	b	7e44 <*ABS*+0x10@plt+0x10e4>
    7e34:	add	x19, x19, x23
    7e38:	add	x0, x19, #0x8
    7e3c:	cmp	x20, x0
    7e40:	b.cc	7f20 <*ABS*+0x10@plt+0x11c0>  // b.lo, b.ul, b.last
    7e44:	ldr	x28, [x19]
    7e48:	mov	x0, #0x3fff                	// #16383
    7e4c:	cmp	x28, x0
    7e50:	b.ls	7e34 <*ABS*+0x10@plt+0x10d4>  // b.plast
    7e54:	lsr	x0, x28, x22
    7e58:	cbnz	x0, 7e34 <*ABS*+0x10@plt+0x10d4>
    7e5c:	mov	x0, x28
    7e60:	bl	c180 <__sanitizer_get_allocated_size@@Base+0x170>
    7e64:	str	x0, [x29, #112]
    7e68:	cmp	x0, #0x0
    7e6c:	ccmp	x0, x21, #0x4, ne  // ne = any
    7e70:	b.eq	7e34 <*ABS*+0x10@plt+0x10d4>  // b.none
    7e74:	mov	x1, x0
    7e78:	mov	x0, x26
    7e7c:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    7e80:	mov	x0, x26
    7e84:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    7e88:	cmp	w0, #0x2
    7e8c:	b.eq	7e34 <*ABS*+0x10@plt+0x10d4>  // b.none
    7e90:	mov	x0, x26
    7e94:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    7e98:	cmp	w0, #0x3
    7e9c:	b.eq	7e34 <*ABS*+0x10@plt+0x10d4>  // b.none
    7ea0:	add	x1, x27, #0xcc0
    7ea4:	ldrb	w0, [x1, #19]
    7ea8:	cbnz	w0, 7ec4 <*ABS*+0x10@plt+0x1164>
    7eac:	mov	x0, x19
    7eb0:	str	x1, [x29, #104]
    7eb4:	bl	b018 <__lsan_do_recoverable_leak_check@@Base+0x1350>
    7eb8:	tst	w0, #0xff
    7ebc:	ldr	x1, [x29, #104]
    7ec0:	b.ne	7fc8 <*ABS*+0x10@plt+0x1268>  // b.any
    7ec4:	mov	x0, x26
    7ec8:	mov	w1, w24
    7ecc:	bl	b908 <__sanitizer_print_stack_trace@@Base+0x7b0>
    7ed0:	add	x0, x27, #0xcc0
    7ed4:	ldrb	w0, [x0, #20]
    7ed8:	cbnz	w0, 7f80 <*ABS*+0x10@plt+0x1220>
    7edc:	cbz	x25, 7e34 <*ABS*+0x10@plt+0x10d4>
    7ee0:	ldp	x4, x0, [x25, #8]
    7ee4:	lsr	x4, x4, #3
    7ee8:	cmp	x0, x4
    7eec:	b.hi	8038 <*ABS*+0x10@plt+0x12d8>  // b.pmore
    7ef0:	add	x3, x0, #0x1
    7ef4:	b.eq	8054 <*ABS*+0x10@plt+0x12f4>  // b.none
    7ef8:	ldr	x4, [x25]
    7efc:	str	x3, [x25, #16]
    7f00:	add	x0, x4, x0, lsl #3
    7f04:	add	x1, x29, #0x70
    7f08:	add	x19, x19, x23
    7f0c:	mov	x2, #0x8                   	// #8
    7f10:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    7f14:	add	x0, x19, #0x8
    7f18:	cmp	x20, x0
    7f1c:	b.cs	7e44 <*ABS*+0x10@plt+0x10e4>  // b.hs, b.nlast
    7f20:	ldp	x19, x20, [sp, #16]
    7f24:	ldp	x21, x22, [sp, #32]
    7f28:	ldp	x23, x24, [sp, #48]
    7f2c:	ldp	x25, x26, [sp, #64]
    7f30:	ldp	x27, x28, [sp, #80]
    7f34:	ldp	x29, x30, [sp], #128
    7f38:	ret
    7f3c:	mov	x23, #0x8                   	// #8
    7f40:	cbnz	w0, 7f64 <*ABS*+0x10@plt+0x1204>
    7f44:	udiv	x0, x21, x23
    7f48:	add	x19, x21, x23
    7f4c:	msub	x0, x0, x23, x21
    7f50:	cmp	x0, #0x0
    7f54:	sub	x19, x19, x0
    7f58:	csel	x19, x19, x21, ne  // ne = any
    7f5c:	b	7e10 <*ABS*+0x10@plt+0x10b0>
    7f60:	mov	x23, #0x1                   	// #1
    7f64:	mov	x1, x3
    7f68:	mov	x2, x21
    7f6c:	mov	x3, x20
    7f70:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7f74:	add	x0, x0, #0x718
    7f78:	bl	22d00 <OnPrint@@Base+0x398>
    7f7c:	b	7f44 <*ABS*+0x10@plt+0x11e4>
    7f80:	ldr	x3, [x29, #112]
    7f84:	mov	x0, x26
    7f88:	str	x3, [x29, #96]
    7f8c:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7f90:	mov	x4, x0
    7f94:	ldr	x1, [x29, #112]
    7f98:	mov	x0, x26
    7f9c:	add	x4, x4, x1
    7fa0:	str	x4, [x29, #104]
    7fa4:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7fa8:	mov	x5, x0
    7fac:	ldp	x3, x4, [x29, #96]
    7fb0:	mov	x2, x28
    7fb4:	mov	x1, x19
    7fb8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    7fbc:	add	x0, x0, #0x790
    7fc0:	bl	22d00 <OnPrint@@Base+0x398>
    7fc4:	b	7edc <*ABS*+0x10@plt+0x117c>
    7fc8:	ldrb	w0, [x1, #20]
    7fcc:	cbz	w0, 7e34 <*ABS*+0x10@plt+0x10d4>
    7fd0:	ldr	x3, [x29, #112]
    7fd4:	mov	x0, x26
    7fd8:	str	x3, [x29, #96]
    7fdc:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7fe0:	mov	x4, x0
    7fe4:	ldr	x1, [x29, #112]
    7fe8:	mov	x0, x26
    7fec:	add	x4, x4, x1
    7ff0:	str	x4, [x29, #104]
    7ff4:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    7ff8:	mov	x5, x0
    7ffc:	ldp	x3, x4, [x29, #96]
    8000:	mov	x2, x28
    8004:	mov	x1, x19
    8008:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    800c:	add	x0, x0, #0x748
    8010:	bl	22d00 <OnPrint@@Base+0x398>
    8014:	b	7e34 <*ABS*+0x10@plt+0x10d4>
    8018:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    801c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8020:	add	x2, x2, #0xc38
    8024:	add	x0, x0, #0x608
    8028:	mov	x4, #0x0                   	// #0
    802c:	mov	x3, #0x0                   	// #0
    8030:	mov	w1, #0x9e                  	// #158
    8034:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8038:	mov	x3, x0
    803c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8040:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8044:	add	x2, x2, #0x660
    8048:	add	x0, x0, #0x578
    804c:	mov	w1, #0x1be                 	// #446
    8050:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8054:	tst	x0, x3
    8058:	b.eq	8094 <*ABS*+0x10@plt+0x1334>  // b.none
    805c:	clz	x2, x3
    8060:	mov	w4, #0x3f                  	// #63
    8064:	sub	w2, w4, w2
    8068:	mov	x1, #0x1                   	// #1
    806c:	add	w4, w2, #0x1
    8070:	lsl	x4, x1, x4
    8074:	cmp	x4, x3
    8078:	b.ls	8138 <*ABS*+0x10@plt+0x13d8>  // b.plast
    807c:	lsl	x1, x1, x2
    8080:	cmp	x1, x3
    8084:	b.cs	811c <*ABS*+0x10@plt+0x13bc>  // b.hs, b.nlast
    8088:	cmp	x0, x4
    808c:	b.hi	8150 <*ABS*+0x10@plt+0x13f0>  // b.pmore
    8090:	mov	x3, x4
    8094:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8098:	lsl	x3, x3, #3
    809c:	ldr	x1, [x1, #4000]
    80a0:	ldr	x0, [x1]
    80a4:	cbz	x0, 8108 <*ABS*+0x10@plt+0x13a8>
    80a8:	sub	x1, x0, #0x1
    80ac:	tst	x1, x0
    80b0:	b.ne	816c <*ABS*+0x10@plt+0x140c>  // b.any
    80b4:	add	x3, x3, x1
    80b8:	neg	x0, x0
    80bc:	and	x3, x3, x0
    80c0:	mov	w2, #0x0                   	// #0
    80c4:	mov	x0, x3
    80c8:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    80cc:	add	x1, x1, #0x700
    80d0:	str	x3, [x29, #96]
    80d4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    80d8:	str	x0, [x29, #104]
    80dc:	ldr	x1, [x25]
    80e0:	ldr	x2, [x25, #16]
    80e4:	lsl	x2, x2, #3
    80e8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    80ec:	ldp	x0, x1, [x25]
    80f0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    80f4:	ldr	x0, [x25, #16]
    80f8:	ldp	x3, x4, [x29, #96]
    80fc:	stp	x4, x3, [x25]
    8100:	add	x3, x0, #0x1
    8104:	b	7efc <*ABS*+0x10@plt+0x119c>
    8108:	stp	x1, x3, [x29, #96]
    810c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    8110:	ldp	x1, x3, [x29, #96]
    8114:	str	x0, [x1]
    8118:	b	80a8 <*ABS*+0x10@plt+0x1348>
    811c:	mov	x4, x1
    8120:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8124:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8128:	add	x2, x2, #0x6a8
    812c:	add	x0, x0, #0x578
    8130:	mov	w1, #0x17c                 	// #380
    8134:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8138:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    813c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8140:	add	x2, x2, #0x680
    8144:	add	x0, x0, #0x578
    8148:	mov	w1, #0x17b                 	// #379
    814c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8150:	mov	x3, x0
    8154:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8158:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    815c:	add	x2, x2, #0x6c8
    8160:	add	x0, x0, #0x578
    8164:	mov	w1, #0x1fd                 	// #509
    8168:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    816c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8170:	add	x0, x0, #0x6e8
    8174:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    8178:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    817c:	nop
    8180:	stp	x19, x20, [sp, #-48]!
    8184:	str	x30, [sp, #16]
    8188:	bl	b750 <__sanitizer_print_stack_trace@@Base+0x5f8>
    818c:	mov	x1, x0
    8190:	add	x20, sp, #0x28
    8194:	mov	x19, x0
    8198:	mov	x0, x20
    819c:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    81a0:	mov	x0, x20
    81a4:	bl	b8e0 <__sanitizer_print_stack_trace@@Base+0x788>
    81a8:	tst	w0, #0xff
    81ac:	b.ne	81bc <*ABS*+0x10@plt+0x145c>  // b.any
    81b0:	ldr	x30, [sp, #16]
    81b4:	ldp	x19, x20, [sp], #48
    81b8:	ret
    81bc:	mov	x0, x20
    81c0:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    81c4:	cmp	w0, #0x2
    81c8:	b.eq	81b0 <*ABS*+0x10@plt+0x1450>  // b.none
    81cc:	mov	x0, x20
    81d0:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    81d4:	mov	w4, #0x1                   	// #1
    81d8:	add	x1, x0, x19
    81dc:	mov	x2, #0x0                   	// #0
    81e0:	mov	x0, x19
    81e4:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    81e8:	add	x3, x3, #0xc78
    81ec:	bl	7db8 <*ABS*+0x10@plt+0x1058>
    81f0:	ldr	x30, [sp, #16]
    81f4:	ldp	x19, x20, [sp], #48
    81f8:	ret
    81fc:	nop
    8200:	stp	x19, x20, [sp, #-48]!
    8204:	mov	x20, x0
    8208:	mov	x19, x1
    820c:	add	x0, sp, #0x20
    8210:	add	x1, sp, #0x28
    8214:	stp	x21, x30, [sp, #16]
    8218:	mov	x21, x2
    821c:	stp	xzr, xzr, [sp, #32]
    8220:	bl	b730 <__sanitizer_print_stack_trace@@Base+0x5d8>
    8224:	ldr	x1, [sp, #32]
    8228:	cmp	x1, x19
    822c:	ccmp	x1, x20, #0x0, cc  // cc = lo, ul, last
    8230:	b.cs	8258 <*ABS*+0x10@plt+0x14f8>  // b.hs, b.nlast
    8234:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8238:	mov	x2, x21
    823c:	mov	x1, x19
    8240:	mov	x0, x20
    8244:	add	x3, x3, #0xcd0
    8248:	bl	73d0 <*ABS*+0x10@plt+0x670>
    824c:	ldp	x21, x30, [sp, #16]
    8250:	ldp	x19, x20, [sp], #48
    8254:	ret
    8258:	ldr	x0, [sp, #40]
    825c:	cmp	x1, x0
    8260:	b.hi	82b0 <*ABS*+0x10@plt+0x1550>  // b.pmore
    8264:	cmp	x19, x0
    8268:	b.cc	82d0 <*ABS*+0x10@plt+0x1570>  // b.lo, b.ul, b.last
    826c:	cmp	x1, x20
    8270:	b.hi	8294 <*ABS*+0x10@plt+0x1534>  // b.pmore
    8274:	cmp	x19, x0
    8278:	b.ls	824c <*ABS*+0x10@plt+0x14ec>  // b.plast
    827c:	mov	x2, x21
    8280:	mov	x1, x19
    8284:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8288:	add	x3, x3, #0xcd0
    828c:	bl	73d0 <*ABS*+0x10@plt+0x670>
    8290:	b	824c <*ABS*+0x10@plt+0x14ec>
    8294:	mov	x0, x20
    8298:	mov	x2, x21
    829c:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    82a0:	add	x3, x3, #0xcd0
    82a4:	bl	73d0 <*ABS*+0x10@plt+0x670>
    82a8:	ldr	x0, [sp, #40]
    82ac:	b	8274 <*ABS*+0x10@plt+0x1514>
    82b0:	mov	x4, x0
    82b4:	mov	x3, x1
    82b8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    82bc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    82c0:	add	x2, x2, #0xc80
    82c4:	add	x0, x0, #0x608
    82c8:	mov	w1, #0xc4                  	// #196
    82cc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    82d0:	mov	x3, x0
    82d4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    82d8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    82dc:	mov	x4, x19
    82e0:	add	x2, x2, #0xcb0
    82e4:	add	x0, x0, #0x608
    82e8:	mov	w1, #0xc5                  	// #197
    82ec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    82f0:	stp	x19, x20, [sp, #-48]!
    82f4:	mov	x5, x1
    82f8:	mov	x6, x2
    82fc:	ldr	x1, [x1]
    8300:	stp	x21, x22, [sp, #16]
    8304:	and	w22, w4, #0xff
    8308:	ldr	x4, [x5, #8]
    830c:	cmp	x1, x2
    8310:	csel	x20, x1, x2, cs  // cs = hs, nlast
    8314:	str	x30, [sp, #32]
    8318:	add	x2, x1, x4
    831c:	cmp	x2, x3
    8320:	csel	x21, x2, x3, ls  // ls = plast
    8324:	cmp	x20, x21
    8328:	b.cs	836c <*ABS*+0x10@plt+0x160c>  // b.hs, b.nlast
    832c:	mov	x19, x0
    8330:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8334:	ldrb	w0, [x0, #3284]
    8338:	cbz	w0, 8368 <*ABS*+0x10@plt+0x1608>
    833c:	cmp	w22, #0x0
    8340:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8344:	adrp	x5, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8348:	add	x0, x0, #0xce8
    834c:	add	x5, x5, #0xcd8
    8350:	mov	x4, x3
    8354:	csel	x5, x5, x0, ne  // ne = any
    8358:	mov	x3, x6
    835c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8360:	add	x0, x0, #0xcf8
    8364:	bl	22d00 <OnPrint@@Base+0x398>
    8368:	cbnz	w22, 837c <*ABS*+0x10@plt+0x161c>
    836c:	ldp	x21, x22, [sp, #16]
    8370:	ldr	x30, [sp, #32]
    8374:	ldp	x19, x20, [sp], #48
    8378:	ret
    837c:	mov	x2, x19
    8380:	mov	x1, x21
    8384:	mov	x0, x20
    8388:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    838c:	ldp	x21, x22, [sp, #16]
    8390:	add	x3, x3, #0xd38
    8394:	ldr	x30, [sp, #32]
    8398:	ldp	x19, x20, [sp], #48
    839c:	b	73d0 <*ABS*+0x10@plt+0x670>
    83a0:	stp	x19, x20, [sp, #-80]!
    83a4:	mov	x20, x0
    83a8:	add	x19, sp, #0x20
    83ac:	str	x30, [sp, #16]
    83b0:	mov	x0, x19
    83b4:	bl	23ee0 <OnPrint@@Base+0x1578>
    83b8:	adrp	x1, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    83bc:	add	x1, x1, #0xcc0
    83c0:	stp	x20, x19, [sp, #56]
    83c4:	ldrb	w2, [x1, #15]
    83c8:	cbz	w2, 83d4 <*ABS*+0x10@plt+0x1674>
    83cc:	ldrb	w2, [x1, #17]
    83d0:	cbnz	w2, 83fc <*ABS*+0x10@plt+0x169c>
    83d4:	add	x1, sp, #0x38
    83d8:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    83dc:	add	x0, x0, #0x178
    83e0:	strb	w2, [sp, #72]
    83e4:	bl	c5d0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    83e8:	ldp	x0, x1, [sp, #32]
    83ec:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    83f0:	ldr	x30, [sp, #16]
    83f4:	ldp	x19, x20, [sp], #80
    83f8:	ret
    83fc:	bl	add8 <__lsan_do_recoverable_leak_check@@Base+0x1110>
    8400:	cmp	x0, #0x0
    8404:	cset	w2, ne  // ne = any
    8408:	b	83d4 <*ABS*+0x10@plt+0x1674>
    840c:	nop
    8410:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8414:	ldrb	w0, [x0, #3480]
    8418:	ret
    841c:	nop
    8420:	stp	x19, x20, [sp, #-144]!
    8424:	cmp	w4, #0x1
    8428:	stp	x21, x22, [sp, #16]
    842c:	str	x30, [sp, #48]
    8430:	b.hi	85b8 <*ABS*+0x10@plt+0x1858>  // b.pmore
    8434:	ldr	x6, [x0, #24]
    8438:	eor	w4, w4, #0x1
    843c:	mov	x20, x0
    8440:	mov	x22, x1
    8444:	mov	x21, x3
    8448:	and	w7, w4, #0x1
    844c:	cbz	x6, 8788 <*ABS*+0x10@plt+0x1a28>
    8450:	ldr	x3, [x0, #8]
    8454:	mov	x19, #0x0                   	// #0
    8458:	mov	x5, x3
    845c:	b	8470 <*ABS*+0x10@plt+0x1710>
    8460:	add	x19, x19, #0x1
    8464:	add	x5, x5, #0x20
    8468:	cmp	x19, x6
    846c:	b.eq	8544 <*ABS*+0x10@plt+0x17e4>  // b.none
    8470:	ldr	w4, [x5, #24]
    8474:	cmp	w4, w2
    8478:	b.ne	8460 <*ABS*+0x10@plt+0x1700>  // b.any
    847c:	ldrb	w4, [x5, #28]
    8480:	cmp	w4, w7
    8484:	b.ne	8460 <*ABS*+0x10@plt+0x1700>  // b.any
    8488:	ldr	x0, [x5, #8]
    848c:	add	x0, x0, #0x1
    8490:	str	x0, [x5, #8]
    8494:	ldr	x4, [x20, #24]
    8498:	cmp	x19, x4
    849c:	b.cs	8698 <*ABS*+0x10@plt+0x1938>  // b.hs, b.nlast
    84a0:	ldr	x0, [x5, #16]
    84a4:	add	x0, x0, x21
    84a8:	str	x0, [x5, #16]
    84ac:	ldr	x0, [x20, #24]
    84b0:	cmp	x19, x0
    84b4:	b.eq	8548 <*ABS*+0x10@plt+0x17e8>  // b.none
    84b8:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    84bc:	ldrb	w0, [x0, #3264]
    84c0:	cbz	w0, 8534 <*ABS*+0x10@plt+0x17d4>
    84c4:	ldr	x4, [x20, #24]
    84c8:	stp	x23, x24, [sp, #32]
    84cc:	cmp	x19, x4
    84d0:	ldr	x1, [x20, #8]
    84d4:	b.cs	869c <*ABS*+0x10@plt+0x193c>  // b.hs, b.nlast
    84d8:	ldr	x0, [x20, #40]
    84dc:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    84e0:	movk	x4, #0xaaab
    84e4:	lsl	x19, x19, #5
    84e8:	ldr	x3, [x20, #48]
    84ec:	umulh	x0, x0, x4
    84f0:	ldr	w1, [x1, x19]
    84f4:	add	x23, x20, #0x20
    84f8:	str	w1, [sp, #88]
    84fc:	stp	x22, x21, [sp, #96]
    8500:	lsr	x4, x0, #4
    8504:	cmp	x3, x4
    8508:	b.hi	86bc <*ABS*+0x10@plt+0x195c>  // b.pmore
    850c:	add	x1, x3, #0x1
    8510:	b.eq	85dc <*ABS*+0x10@plt+0x187c>  // b.none
    8514:	ldr	x21, [x20, #32]
    8518:	add	x3, x3, x3, lsl #1
    851c:	str	x1, [x23, #16]
    8520:	mov	x2, #0x18                  	// #24
    8524:	add	x0, x21, x3, lsl #3
    8528:	add	x1, sp, #0x58
    852c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    8530:	ldp	x23, x24, [sp, #32]
    8534:	ldp	x21, x22, [sp, #16]
    8538:	ldr	x30, [sp, #48]
    853c:	ldp	x19, x20, [sp], #144
    8540:	ret
    8544:	mov	x0, x19
    8548:	mov	x1, #0x1388                	// #5000
    854c:	cmp	x0, x1
    8550:	b.eq	8534 <*ABS*+0x10@plt+0x17d4>  // b.none
    8554:	ldr	x4, [x20, #16]
    8558:	stp	x23, x24, [sp, #32]
    855c:	ldr	w1, [x20]
    8560:	stp	xzr, xzr, [sp, #112]
    8564:	mov	x5, #0x1                   	// #1
    8568:	add	w8, w1, #0x1
    856c:	stp	xzr, xzr, [sp, #128]
    8570:	lsr	x4, x4, #5
    8574:	cmp	x4, x0
    8578:	str	w8, [x20]
    857c:	str	w1, [sp, #112]
    8580:	stp	x5, x21, [sp, #120]
    8584:	str	w2, [sp, #136]
    8588:	strb	w7, [sp, #140]
    858c:	b.cc	86b8 <*ABS*+0x10@plt+0x1958>  // b.lo, b.ul, b.last
    8590:	b.eq	86d4 <*ABS*+0x10@plt+0x1974>  // b.none
    8594:	add	x23, x20, #0x8
    8598:	add	x0, x6, #0x1
    859c:	str	x0, [x23, #16]
    85a0:	add	x1, sp, #0x70
    85a4:	add	x0, x3, x6, lsl #5
    85a8:	mov	x2, #0x20                  	// #32
    85ac:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    85b0:	ldp	x23, x24, [sp, #32]
    85b4:	b	84b8 <*ABS*+0x10@plt+0x1758>
    85b8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    85bc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    85c0:	add	x2, x2, #0xd40
    85c4:	add	x0, x0, #0x608
    85c8:	mov	x4, #0x0                   	// #0
    85cc:	mov	x3, #0x0                   	// #0
    85d0:	mov	w1, #0x29f                 	// #671
    85d4:	stp	x23, x24, [sp, #32]
    85d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    85dc:	tst	x3, x1
    85e0:	b.eq	861c <*ABS*+0x10@plt+0x18bc>  // b.none
    85e4:	clz	x2, x1
    85e8:	mov	w0, #0x3f                  	// #63
    85ec:	sub	w2, w0, w2
    85f0:	mov	x0, #0x1                   	// #1
    85f4:	add	w4, w2, #0x1
    85f8:	lsl	x4, x0, x4
    85fc:	cmp	x4, x1
    8600:	b.ls	881c <*ABS*+0x10@plt+0x1abc>  // b.plast
    8604:	lsl	x0, x0, x2
    8608:	cmp	x0, x1
    860c:	b.cs	8838 <*ABS*+0x10@plt+0x1ad8>  // b.hs, b.nlast
    8610:	cmp	x3, x4
    8614:	b.hi	8804 <*ABS*+0x10@plt+0x1aa4>  // b.pmore
    8618:	mov	x1, x4
    861c:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8620:	add	x1, x1, x1, lsl #1
    8624:	ldr	x21, [x21, #4000]
    8628:	lsl	x19, x1, #3
    862c:	ldr	x0, [x21]
    8630:	cbz	x0, 87d0 <*ABS*+0x10@plt+0x1a70>
    8634:	sub	x1, x0, #0x1
    8638:	tst	x0, x1
    863c:	b.ne	87f0 <*ABS*+0x10@plt+0x1a90>  // b.any
    8640:	add	x19, x19, x1
    8644:	neg	x0, x0
    8648:	and	x19, x19, x0
    864c:	mov	w2, #0x0                   	// #0
    8650:	mov	x0, x19
    8654:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8658:	add	x1, x1, #0x700
    865c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    8660:	ldr	x2, [x23, #16]
    8664:	mov	x21, x0
    8668:	ldr	x1, [x20, #32]
    866c:	add	x2, x2, x2, lsl #1
    8670:	lsl	x2, x2, #3
    8674:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    8678:	ldr	x1, [x23, #8]
    867c:	ldr	x0, [x20, #32]
    8680:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    8684:	ldr	x3, [x23, #16]
    8688:	str	x21, [x20, #32]
    868c:	str	x19, [x23, #8]
    8690:	add	x1, x3, #0x1
    8694:	b	8518 <*ABS*+0x10@plt+0x17b8>
    8698:	stp	x23, x24, [sp, #32]
    869c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    86a0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    86a4:	mov	x3, x19
    86a8:	add	x2, x2, #0x560
    86ac:	add	x0, x0, #0x578
    86b0:	mov	w1, #0x1b6                 	// #438
    86b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    86b8:	mov	x3, x0
    86bc:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    86c0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    86c4:	add	x2, x2, #0x660
    86c8:	add	x0, x0, #0x578
    86cc:	mov	w1, #0x1be                 	// #446
    86d0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    86d4:	add	x3, x0, #0x1
    86d8:	tst	x3, x0
    86dc:	b.eq	8858 <*ABS*+0x10@plt+0x1af8>  // b.none
    86e0:	clz	x2, x3
    86e4:	mov	w1, #0x3f                  	// #63
    86e8:	sub	w1, w1, w2
    86ec:	add	w4, w1, #0x1
    86f0:	lsl	x4, x5, x4
    86f4:	cmp	x3, x4
    86f8:	b.cs	8820 <*ABS*+0x10@plt+0x1ac0>  // b.hs, b.nlast
    86fc:	lsl	x5, x5, x1
    8700:	cmp	x3, x5
    8704:	b.ls	8860 <*ABS*+0x10@plt+0x1b00>  // b.plast
    8708:	cmp	x4, x0
    870c:	b.cc	8800 <*ABS*+0x10@plt+0x1aa0>  // b.lo, b.ul, b.last
    8710:	adrp	x24, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8714:	lsl	x23, x4, #5
    8718:	ldr	x24, [x24, #4000]
    871c:	ldr	x0, [x24]
    8720:	cbz	x0, 87e4 <*ABS*+0x10@plt+0x1a84>
    8724:	sub	x4, x0, #0x1
    8728:	tst	x4, x0
    872c:	b.ne	87f0 <*ABS*+0x10@plt+0x1a90>  // b.any
    8730:	add	x4, x23, x4
    8734:	neg	x0, x0
    8738:	add	x23, x20, #0x8
    873c:	and	x24, x4, x0
    8740:	mov	w2, #0x0                   	// #0
    8744:	mov	x0, x24
    8748:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    874c:	add	x1, x1, #0x700
    8750:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    8754:	str	x0, [sp, #72]
    8758:	ldr	x1, [x20, #8]
    875c:	ldr	x2, [x23, #16]
    8760:	lsl	x2, x2, #5
    8764:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    8768:	ldr	x0, [x20, #8]
    876c:	ldr	x1, [x23, #8]
    8770:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    8774:	ldr	x3, [sp, #72]
    8778:	ldr	x6, [x23, #16]
    877c:	str	x3, [x20, #8]
    8780:	str	x24, [x23, #8]
    8784:	b	8598 <*ABS*+0x10@plt+0x1838>
    8788:	ldr	w1, [x20]
    878c:	mov	x0, #0x1                   	// #1
    8790:	ldr	x19, [x20, #16]
    8794:	stp	x23, x24, [sp, #32]
    8798:	add	w3, w1, #0x1
    879c:	stp	xzr, xzr, [sp, #112]
    87a0:	cmp	xzr, x19, lsr #5
    87a4:	stp	xzr, xzr, [sp, #128]
    87a8:	lsr	x19, x19, #5
    87ac:	str	w3, [x20]
    87b0:	str	w1, [sp, #112]
    87b4:	stp	x0, x21, [sp, #120]
    87b8:	str	w2, [sp, #136]
    87bc:	strb	w7, [sp, #140]
    87c0:	b.eq	87dc <*ABS*+0x10@plt+0x1a7c>  // b.none
    87c4:	mov	x19, #0x0                   	// #0
    87c8:	ldr	x3, [x20, #8]
    87cc:	b	8594 <*ABS*+0x10@plt+0x1834>
    87d0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    87d4:	str	x0, [x21]
    87d8:	b	8634 <*ABS*+0x10@plt+0x18d4>
    87dc:	mov	x4, x0
    87e0:	b	8710 <*ABS*+0x10@plt+0x19b0>
    87e4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    87e8:	str	x0, [x24]
    87ec:	b	8724 <*ABS*+0x10@plt+0x19c4>
    87f0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    87f4:	add	x0, x0, #0x6e8
    87f8:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    87fc:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    8800:	mov	x3, x0
    8804:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8808:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    880c:	add	x2, x2, #0x6c8
    8810:	add	x0, x0, #0x578
    8814:	mov	w1, #0x1fd                 	// #509
    8818:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    881c:	mov	x3, x1
    8820:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8824:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8828:	add	x2, x2, #0x680
    882c:	add	x0, x0, #0x578
    8830:	mov	w1, #0x17b                 	// #379
    8834:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8838:	mov	x4, x0
    883c:	mov	x3, x1
    8840:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8844:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8848:	add	x2, x2, #0x6a8
    884c:	add	x0, x0, #0x578
    8850:	mov	w1, #0x17c                 	// #380
    8854:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8858:	mov	x4, x3
    885c:	b	8710 <*ABS*+0x10@plt+0x19b0>
    8860:	mov	x4, x5
    8864:	b	8840 <*ABS*+0x10@plt+0x1ae0>
    8868:	stp	x19, x20, [sp, #-64]!
    886c:	stp	x21, x22, [sp, #16]
    8870:	str	x30, [sp, #32]
    8874:	cbz	x1, 8950 <*ABS*+0x10@plt+0x1bf0>
    8878:	mov	x19, x1
    887c:	bl	b750 <__sanitizer_print_stack_trace@@Base+0x5f8>
    8880:	mov	x1, x0
    8884:	add	x20, sp, #0x38
    8888:	mov	x21, x0
    888c:	mov	x0, x20
    8890:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    8894:	mov	x0, x20
    8898:	bl	b8e0 <__sanitizer_print_stack_trace@@Base+0x788>
    889c:	tst	w0, #0xff
    88a0:	b.ne	88b4 <*ABS*+0x10@plt+0x1b54>  // b.any
    88a4:	ldp	x21, x22, [sp, #16]
    88a8:	ldr	x30, [sp, #32]
    88ac:	ldp	x19, x20, [sp], #64
    88b0:	ret
    88b4:	mov	x0, x20
    88b8:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    88bc:	cbnz	w0, 893c <*ABS*+0x10@plt+0x1bdc>
    88c0:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    88c4:	ldr	w22, [x0, #3268]
    88c8:	cbnz	w22, 8918 <*ABS*+0x10@plt+0x1bb8>
    88cc:	mov	x0, x20
    88d0:	bl	b930 <__sanitizer_print_stack_trace@@Base+0x7d8>
    88d4:	mov	w22, w0
    88d8:	mov	x0, x20
    88dc:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    88e0:	mov	x3, x0
    88e4:	mov	x0, x20
    88e8:	mov	x20, x3
    88ec:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    88f0:	mov	w4, w0
    88f4:	mov	x3, x20
    88f8:	mov	w2, w22
    88fc:	mov	x1, x21
    8900:	mov	x0, x19
    8904:	bl	8420 <*ABS*+0x10@plt+0x16c0>
    8908:	ldp	x21, x22, [sp, #16]
    890c:	ldr	x30, [sp, #32]
    8910:	ldp	x19, x20, [sp], #64
    8914:	ret
    8918:	mov	x0, x20
    891c:	bl	b930 <__sanitizer_print_stack_trace@@Base+0x7d8>
    8920:	bl	23d18 <OnPrint@@Base+0x13b0>
    8924:	cmp	w22, w1
    8928:	csel	w22, w22, w1, cc  // cc = lo, ul, last
    892c:	bfxil	x1, x22, #0, #32
    8930:	bl	24410 <OnPrint@@Base+0x1aa8>
    8934:	mov	w22, w0
    8938:	b	88d8 <*ABS*+0x10@plt+0x1b78>
    893c:	mov	x0, x20
    8940:	bl	b8f8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    8944:	cmp	w0, #0x1
    8948:	b.ne	88a4 <*ABS*+0x10@plt+0x1b44>  // b.any
    894c:	b	88c0 <*ABS*+0x10@plt+0x1b60>
    8950:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8954:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8958:	add	x2, x2, #0x5f8
    895c:	add	x0, x0, #0x608
    8960:	mov	x4, #0x0                   	// #0
    8964:	mov	x3, #0x0                   	// #0
    8968:	mov	w1, #0x1e8                 	// #488
    896c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8970:	stp	x19, x20, [sp, #-80]!
    8974:	mov	x19, x0
    8978:	mov	x20, x1
    897c:	stp	x21, x22, [sp, #16]
    8980:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
    8984:	adrp	x22, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8988:	stp	x23, x24, [sp, #32]
    898c:	add	x21, x21, #0xb00
    8990:	add	x22, x22, #0xdb8
    8994:	str	x30, [sp, #48]
    8998:	bl	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
    899c:	ands	w23, w0, #0xff
    89a0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    89a4:	add	x1, x1, #0xd80
    89a8:	mov	x0, x22
    89ac:	csel	x1, x1, x21, ne  // ne = any
    89b0:	bl	22c78 <OnPrint@@Base+0x310>
    89b4:	ldr	x4, [x19, #24]
    89b8:	ldr	x2, [x19, #8]
    89bc:	cmp	x20, x4
    89c0:	b.cs	8ae0 <*ABS*+0x10@plt+0x1d80>  // b.hs, b.nlast
    89c4:	lsl	x24, x20, #5
    89c8:	adrp	x4, 46000 <__asan_backtrace_release_view@@Base+0x48>
    89cc:	add	x2, x2, x24
    89d0:	add	x4, x4, #0xd98
    89d4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    89d8:	add	x1, x1, #0xd90
    89dc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    89e0:	add	x0, x0, #0xdc0
    89e4:	ldrb	w5, [x2, #28]
    89e8:	ldp	x3, x2, [x2, #8]
    89ec:	cmp	w5, #0x0
    89f0:	csel	x1, x1, x4, ne  // ne = any
    89f4:	bl	22c78 <OnPrint@@Base+0x310>
    89f8:	cmp	w23, #0x0
    89fc:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8a00:	add	x1, x1, #0xda8
    8a04:	mov	x0, x22
    8a08:	csel	x1, x1, x21, ne  // ne = any
    8a0c:	bl	22c78 <OnPrint@@Base+0x310>
    8a10:	ldr	x4, [x19, #24]
    8a14:	ldr	x0, [x19, #8]
    8a18:	cmp	x20, x4
    8a1c:	b.cs	8ae0 <*ABS*+0x10@plt+0x1d80>  // b.hs, b.nlast
    8a20:	add	x0, x0, x24
    8a24:	ldr	w0, [x0, #24]
    8a28:	cbz	w0, 8b24 <*ABS*+0x10@plt+0x1dc4>
    8a2c:	bl	23d18 <OnPrint@@Base+0x13b0>
    8a30:	mov	x2, x0
    8a34:	mov	x3, x1
    8a38:	add	x0, sp, #0x40
    8a3c:	stp	x2, x3, [sp, #64]
    8a40:	bl	24b80 <OnPrint@@Base+0x2218>
    8a44:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8a48:	ldrb	w0, [x0, #3264]
    8a4c:	cbnz	w0, 8a64 <*ABS*+0x10@plt+0x1d04>
    8a50:	ldp	x21, x22, [sp, #16]
    8a54:	ldp	x23, x24, [sp, #32]
    8a58:	ldr	x30, [sp, #48]
    8a5c:	ldp	x19, x20, [sp], #80
    8a60:	ret
    8a64:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8a68:	add	x0, x0, #0xe20
    8a6c:	bl	22c78 <OnPrint@@Base+0x310>
    8a70:	ldr	x4, [x19, #24]
    8a74:	ldr	x0, [x19, #8]
    8a78:	cmp	x20, x4
    8a7c:	b.cs	8ae0 <*ABS*+0x10@plt+0x1d80>  // b.hs, b.nlast
    8a80:	ldr	x2, [x19, #48]
    8a84:	ldr	w22, [x0, x24]
    8a88:	cbz	x2, 8ac0 <*ABS*+0x10@plt+0x1d60>
    8a8c:	ldr	x1, [x19, #32]
    8a90:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8a94:	add	x23, x23, #0xe38
    8a98:	mov	x20, #0x0                   	// #0
    8a9c:	mov	x21, #0x0                   	// #0
    8aa0:	ldr	w3, [x1, x20]
    8aa4:	add	x4, x1, x20
    8aa8:	cmp	w22, w3
    8aac:	b.eq	8afc <*ABS*+0x10@plt+0x1d9c>  // b.none
    8ab0:	add	x21, x21, #0x1
    8ab4:	add	x20, x20, #0x18
    8ab8:	cmp	x21, x2
    8abc:	b.cc	8aa0 <*ABS*+0x10@plt+0x1d40>  // b.lo, b.ul, b.last
    8ac0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
    8ac4:	add	x0, x0, #0x1a0
    8ac8:	bl	22c78 <OnPrint@@Base+0x310>
    8acc:	ldp	x21, x22, [sp, #16]
    8ad0:	ldp	x23, x24, [sp, #32]
    8ad4:	ldr	x30, [sp, #48]
    8ad8:	ldp	x19, x20, [sp], #80
    8adc:	ret
    8ae0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8ae4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8ae8:	mov	x3, x20
    8aec:	add	x2, x2, #0x560
    8af0:	add	x0, x0, #0x578
    8af4:	mov	w1, #0x1b6                 	// #438
    8af8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8afc:	ldp	x1, x2, [x4, #8]
    8b00:	mov	x0, x23
    8b04:	add	x21, x21, #0x1
    8b08:	add	x20, x20, #0x18
    8b0c:	bl	22c78 <OnPrint@@Base+0x310>
    8b10:	ldr	x2, [x19, #48]
    8b14:	cmp	x21, x2
    8b18:	b.cs	8ac0 <*ABS*+0x10@plt+0x1d60>  // b.hs, b.nlast
    8b1c:	ldr	x1, [x19, #32]
    8b20:	b	8aa0 <*ABS*+0x10@plt+0x1d40>
    8b24:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8b28:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8b2c:	add	x2, x2, #0xe00
    8b30:	add	x0, x0, #0x608
    8b34:	mov	x4, #0x0                   	// #0
    8b38:	mov	x3, #0x0                   	// #0
    8b3c:	mov	w1, #0x1e1                 	// #481
    8b40:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8b44:	nop
    8b48:	stp	x19, x20, [sp, #-80]!
    8b4c:	mov	x20, x0
    8b50:	ldr	x0, [x0, #24]
    8b54:	stp	x21, x22, [sp, #16]
    8b58:	mov	x21, #0x1388                	// #5000
    8b5c:	str	x30, [sp, #40]
    8b60:	cmp	x0, x21
    8b64:	b.hi	8e9c <*ABS*+0x10@plt+0x213c>  // b.pmore
    8b68:	mov	x19, x1
    8b6c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
    8b70:	add	x0, x0, #0x1a0
    8b74:	bl	22c78 <OnPrint@@Base+0x310>
    8b78:	ldr	x7, [x20, #24]
    8b7c:	cmp	x7, x21
    8b80:	b.eq	8e84 <*ABS*+0x10@plt+0x2124>  // b.none
    8b84:	ldr	x3, [x20, #8]
    8b88:	cbz	x7, 8df8 <*ABS*+0x10@plt+0x2098>
    8b8c:	mov	x0, x3
    8b90:	add	x2, x3, x7, lsl #5
    8b94:	mov	x21, #0x0                   	// #0
    8b98:	str	x23, [sp, #32]
    8b9c:	nop
    8ba0:	ldrb	w1, [x0, #29]
    8ba4:	add	x0, x0, #0x20
    8ba8:	cmp	w1, #0x0
    8bac:	cinc	x21, x21, eq  // eq = none
    8bb0:	cmp	x2, x0
    8bb4:	b.ne	8ba0 <*ABS*+0x10@plt+0x1e40>  // b.any
    8bb8:	cmp	x19, #0x0
    8bbc:	ccmp	x19, x21, #0x2, ne  // ne = any
    8bc0:	b.cc	8e30 <*ABS*+0x10@plt+0x20d0>  // b.lo, b.ul, b.last
    8bc4:	cmp	x7, #0x1
    8bc8:	b.ls	8e7c <*ABS*+0x10@plt+0x211c>  // b.plast
    8bcc:	add	x6, sp, #0x30
    8bd0:	mov	x12, #0x1                   	// #1
    8bd4:	nop
    8bd8:	mov	x5, x12
    8bdc:	nop
    8be0:	sub	x0, x5, #0x1
    8be4:	mov	x2, x5
    8be8:	lsr	x5, x0, #1
    8bec:	add	x2, x3, x2, lsl #5
    8bf0:	add	x4, x3, x5, lsl #5
    8bf4:	ldrb	w1, [x2, #28]
    8bf8:	ldrb	w0, [x4, #28]
    8bfc:	cmp	w1, w0
    8c00:	b.eq	8e08 <*ABS*+0x10@plt+0x20a8>  // b.none
    8c04:	cbz	w0, 8c34 <*ABS*+0x10@plt+0x1ed4>
    8c08:	ldp	x0, x1, [x4]
    8c0c:	ldp	x10, x11, [x2]
    8c10:	stp	x0, x1, [x2]
    8c14:	ldp	x0, x1, [x4, #16]
    8c18:	stp	x10, x11, [x6]
    8c1c:	ldp	x8, x9, [x2, #16]
    8c20:	stp	x0, x1, [x2, #16]
    8c24:	stp	x10, x11, [x4]
    8c28:	stp	x8, x9, [x6, #16]
    8c2c:	stp	x8, x9, [x4, #16]
    8c30:	cbnz	x5, 8be0 <*ABS*+0x10@plt+0x1e80>
    8c34:	add	x12, x12, #0x1
    8c38:	cmp	x7, x12
    8c3c:	b.ne	8bd8 <*ABS*+0x10@plt+0x1e78>  // b.any
    8c40:	sub	x9, x7, #0x1
    8c44:	add	x10, x3, x9, lsl #5
    8c48:	ldp	x0, x1, [x10]
    8c4c:	mov	x2, #0x0                   	// #0
    8c50:	ldp	x12, x13, [x3]
    8c54:	stp	x0, x1, [x3]
    8c58:	lsl	x11, x2, #1
    8c5c:	ldp	x0, x1, [x10, #16]
    8c60:	stp	x12, x13, [x6]
    8c64:	add	x7, x11, #0x1
    8c68:	ldp	x4, x5, [x3, #16]
    8c6c:	stp	x0, x1, [x3, #16]
    8c70:	add	x11, x11, #0x2
    8c74:	stp	x12, x13, [x10]
    8c78:	cmp	x7, x9
    8c7c:	stp	x4, x5, [x6, #16]
    8c80:	stp	x4, x5, [x10, #16]
    8c84:	add	x4, x2, #0x1
    8c88:	b.cs	8d10 <*ABS*+0x10@plt+0x1fb0>  // b.hs, b.nlast
    8c8c:	nop
    8c90:	lsl	x5, x2, #5
    8c94:	lsl	x1, x7, #5
    8c98:	add	x12, x3, x5
    8c9c:	add	x8, x3, x1
    8ca0:	ldrb	w0, [x12, #28]
    8ca4:	ldrb	w13, [x8, #28]
    8ca8:	cmp	w13, w0
    8cac:	b.eq	8e1c <*ABS*+0x10@plt+0x20bc>  // b.none
    8cb0:	cbz	w0, 8d10 <*ABS*+0x10@plt+0x1fb0>
    8cb4:	cmp	x11, x9
    8cb8:	b.cc	8d20 <*ABS*+0x10@plt+0x1fc0>  // b.lo, b.ul, b.last
    8cbc:	cmp	x7, x2
    8cc0:	b.eq	8d90 <*ABS*+0x10@plt+0x2030>  // b.none
    8cc4:	add	x2, x3, x5
    8cc8:	mov	x11, x7
    8ccc:	ldp	x0, x1, [x8]
    8cd0:	ldp	x4, x5, [x2]
    8cd4:	stp	x0, x1, [x2]
    8cd8:	ldp	x0, x1, [x8, #16]
    8cdc:	stp	x4, x5, [x6]
    8ce0:	ldp	x12, x13, [x2, #16]
    8ce4:	stp	x0, x1, [x2, #16]
    8ce8:	stp	x4, x5, [x8]
    8cec:	stp	x12, x13, [x6, #16]
    8cf0:	stp	x12, x13, [x8, #16]
    8cf4:	mov	x2, x11
    8cf8:	add	x4, x2, #0x1
    8cfc:	lsl	x11, x2, #1
    8d00:	add	x7, x11, #0x1
    8d04:	add	x11, x11, #0x2
    8d08:	cmp	x7, x9
    8d0c:	b.cc	8c90 <*ABS*+0x10@plt+0x1f30>  // b.lo, b.ul, b.last
    8d10:	cmp	x11, x9
    8d14:	b.cs	8d90 <*ABS*+0x10@plt+0x2030>  // b.hs, b.nlast
    8d18:	mov	x7, x2
    8d1c:	lsl	x1, x2, #5
    8d20:	add	x1, x3, x1
    8d24:	add	x4, x3, x4, lsl #6
    8d28:	ldrb	w0, [x1, #28]
    8d2c:	ldrb	w5, [x4, #28]
    8d30:	cmp	w5, w0
    8d34:	b.ne	8d48 <*ABS*+0x10@plt+0x1fe8>  // b.any
    8d38:	ldr	x0, [x4, #16]
    8d3c:	ldr	x5, [x1, #16]
    8d40:	cmp	x5, x0
    8d44:	cset	w0, hi  // hi = pmore
    8d48:	cmp	w0, #0x0
    8d4c:	csel	x11, x11, x7, ne  // ne = any
    8d50:	csel	x4, x4, x1, ne  // ne = any
    8d54:	cmp	x11, x2
    8d58:	b.eq	8d90 <*ABS*+0x10@plt+0x2030>  // b.none
    8d5c:	add	x2, x3, x2, lsl #5
    8d60:	cmp	x11, x9
    8d64:	ldp	x0, x1, [x4]
    8d68:	ldp	x12, x13, [x2]
    8d6c:	stp	x0, x1, [x2]
    8d70:	ldp	x0, x1, [x4, #16]
    8d74:	stp	x12, x13, [x6]
    8d78:	ldp	x14, x15, [x2, #16]
    8d7c:	stp	x0, x1, [x2, #16]
    8d80:	stp	x12, x13, [x4]
    8d84:	stp	x14, x15, [x6, #16]
    8d88:	stp	x14, x15, [x4, #16]
    8d8c:	b.cc	8cf4 <*ABS*+0x10@plt+0x1f94>  // b.lo, b.ul, b.last
    8d90:	sub	x10, x10, #0x20
    8d94:	subs	x9, x9, #0x1
    8d98:	b.ne	8c48 <*ABS*+0x10@plt+0x1ee8>  // b.any
    8d9c:	ldr	x7, [x20, #24]
    8da0:	mov	x23, #0x0                   	// #0
    8da4:	cbz	x7, 8dec <*ABS*+0x10@plt+0x208c>
    8da8:	mov	x23, #0x0                   	// #0
    8dac:	mov	x22, #0x0                   	// #0
    8db0:	b	8db8 <*ABS*+0x10@plt+0x2058>
    8db4:	ldr	x3, [x20, #8]
    8db8:	add	x3, x3, x22, lsl #5
    8dbc:	ldrb	w0, [x3, #29]
    8dc0:	cbnz	w0, 8de0 <*ABS*+0x10@plt+0x2080>
    8dc4:	add	x23, x23, #0x1
    8dc8:	mov	x1, x22
    8dcc:	mov	x0, x20
    8dd0:	bl	8970 <*ABS*+0x10@plt+0x1c10>
    8dd4:	cmp	x19, x23
    8dd8:	b.eq	8dec <*ABS*+0x10@plt+0x208c>  // b.none
    8ddc:	ldr	x7, [x20, #24]
    8de0:	add	x22, x22, #0x1
    8de4:	cmp	x22, x7
    8de8:	b.cc	8db4 <*ABS*+0x10@plt+0x2054>  // b.lo, b.ul, b.last
    8dec:	cmp	x23, x21
    8df0:	b.cc	8e5c <*ABS*+0x10@plt+0x20fc>  // b.lo, b.ul, b.last
    8df4:	ldr	x23, [sp, #32]
    8df8:	ldp	x21, x22, [sp, #16]
    8dfc:	ldr	x30, [sp, #40]
    8e00:	ldp	x19, x20, [sp], #80
    8e04:	ret
    8e08:	ldr	x0, [x2, #16]
    8e0c:	ldr	x1, [x4, #16]
    8e10:	cmp	x1, x0
    8e14:	cset	w0, hi  // hi = pmore
    8e18:	b	8c04 <*ABS*+0x10@plt+0x1ea4>
    8e1c:	ldr	x0, [x8, #16]
    8e20:	ldr	x12, [x12, #16]
    8e24:	cmp	x12, x0
    8e28:	cset	w0, hi  // hi = pmore
    8e2c:	b	8cb0 <*ABS*+0x10@plt+0x1f50>
    8e30:	mov	x1, x19
    8e34:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8e38:	add	x0, x0, #0xec0
    8e3c:	bl	22c78 <OnPrint@@Base+0x310>
    8e40:	ldr	x7, [x20, #24]
    8e44:	ldr	x3, [x20, #8]
    8e48:	cmp	x7, #0x1
    8e4c:	b.ls	8da0 <*ABS*+0x10@plt+0x2040>  // b.plast
    8e50:	add	x6, sp, #0x30
    8e54:	mov	x12, #0x1                   	// #1
    8e58:	b	8bd8 <*ABS*+0x10@plt+0x1e78>
    8e5c:	sub	x1, x21, x23
    8e60:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8e64:	ldp	x21, x22, [sp, #16]
    8e68:	add	x0, x0, #0xed8
    8e6c:	ldr	x23, [sp, #32]
    8e70:	ldr	x30, [sp, #40]
    8e74:	ldp	x19, x20, [sp], #80
    8e78:	b	22c78 <OnPrint@@Base+0x310>
    8e7c:	mov	x7, #0x1                   	// #1
    8e80:	b	8da8 <*ABS*+0x10@plt+0x2048>
    8e84:	mov	x1, x7
    8e88:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8e8c:	add	x0, x0, #0xe78
    8e90:	bl	22c78 <OnPrint@@Base+0x310>
    8e94:	ldr	x7, [x20, #24]
    8e98:	b	8b84 <*ABS*+0x10@plt+0x1e24>
    8e9c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8ea0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8ea4:	add	x2, x2, #0xe48
    8ea8:	add	x0, x0, #0x608
    8eac:	mov	x4, #0x0                   	// #0
    8eb0:	mov	x3, #0x0                   	// #0
    8eb4:	mov	w1, #0x2be                 	// #702
    8eb8:	str	x23, [sp, #32]
    8ebc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8ec0:	stp	x19, x20, [sp, #-48]!
    8ec4:	ldr	x4, [x0, #24]
    8ec8:	stp	x21, x22, [sp, #16]
    8ecc:	mov	x21, x0
    8ed0:	ldr	x0, [x0, #8]
    8ed4:	str	x30, [sp, #40]
    8ed8:	cmp	x1, x4
    8edc:	b.cs	8f64 <*ABS*+0x10@plt+0x2204>  // b.hs, b.nlast
    8ee0:	ldr	x4, [x21, #48]
    8ee4:	lsl	x1, x1, #5
    8ee8:	ldr	w22, [x0, x1]
    8eec:	cbz	x4, 8f2c <*ABS*+0x10@plt+0x21cc>
    8ef0:	ldr	x1, [x21, #32]
    8ef4:	str	x23, [sp, #32]
    8ef8:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8efc:	add	x23, x23, #0xe38
    8f00:	mov	x19, #0x0                   	// #0
    8f04:	mov	x20, #0x0                   	// #0
    8f08:	ldr	w2, [x1, x19]
    8f0c:	add	x3, x1, x19
    8f10:	cmp	w2, w22
    8f14:	b.eq	8f3c <*ABS*+0x10@plt+0x21dc>  // b.none
    8f18:	add	x20, x20, #0x1
    8f1c:	add	x19, x19, #0x18
    8f20:	cmp	x20, x4
    8f24:	b.cc	8f08 <*ABS*+0x10@plt+0x21a8>  // b.lo, b.ul, b.last
    8f28:	ldr	x23, [sp, #32]
    8f2c:	ldp	x21, x22, [sp, #16]
    8f30:	ldr	x30, [sp, #40]
    8f34:	ldp	x19, x20, [sp], #48
    8f38:	ret
    8f3c:	ldp	x1, x2, [x3, #8]
    8f40:	mov	x0, x23
    8f44:	add	x20, x20, #0x1
    8f48:	add	x19, x19, #0x18
    8f4c:	bl	22c78 <OnPrint@@Base+0x310>
    8f50:	ldr	x4, [x21, #48]
    8f54:	cmp	x20, x4
    8f58:	b.cs	8f28 <*ABS*+0x10@plt+0x21c8>  // b.hs, b.nlast
    8f5c:	ldr	x1, [x21, #32]
    8f60:	b	8f08 <*ABS*+0x10@plt+0x21a8>
    8f64:	mov	x3, x1
    8f68:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8f6c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    8f70:	add	x2, x2, #0x560
    8f74:	add	x0, x0, #0x578
    8f78:	mov	w1, #0x1b6                 	// #438
    8f7c:	str	x23, [sp, #32]
    8f80:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    8f84:	nop
    8f88:	stp	x19, x20, [sp, #-96]!
    8f8c:	mov	x1, #0x1388                	// #5000
    8f90:	ldr	x19, [x0, #24]
    8f94:	stp	x21, x22, [sp, #16]
    8f98:	stp	x23, x24, [sp, #32]
    8f9c:	cmp	x19, x1
    8fa0:	str	x30, [sp, #48]
    8fa4:	b.hi	90c8 <*ABS*+0x10@plt+0x2368>  // b.pmore
    8fa8:	cbz	x19, 90e8 <*ABS*+0x10@plt+0x2388>
    8fac:	ldr	x0, [x0, #8]
    8fb0:	mov	x20, #0x0                   	// #0
    8fb4:	add	x3, x0, x19, lsl #5
    8fb8:	mov	x19, #0x0                   	// #0
    8fbc:	nop
    8fc0:	ldrb	w1, [x0, #29]
    8fc4:	cbnz	w1, 8fd4 <*ABS*+0x10@plt+0x2274>
    8fc8:	ldp	x2, x1, [x0, #8]
    8fcc:	add	x20, x20, x2
    8fd0:	add	x19, x19, x1
    8fd4:	add	x0, x0, #0x20
    8fd8:	cmp	x3, x0
    8fdc:	b.ne	8fc0 <*ABS*+0x10@plt+0x2260>  // b.any
    8fe0:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8fe4:	str	xzr, [sp, #64]
    8fe8:	stp	xzr, xzr, [sp, #72]
    8fec:	ldr	x21, [x23, #4000]
    8ff0:	ldr	x0, [x21]
    8ff4:	cbz	x0, 90bc <*ABS*+0x10@plt+0x235c>
    8ff8:	sub	x1, x0, #0x1
    8ffc:	tst	x1, x0
    9000:	b.ne	9148 <*ABS*+0x10@plt+0x23e8>  // b.any
    9004:	add	x22, x0, #0x3ff
    9008:	neg	x0, x0
    900c:	and	x22, x22, x0
    9010:	mov	w2, #0x0                   	// #0
    9014:	mov	x0, x22
    9018:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
    901c:	add	x1, x24, #0x700
    9020:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    9024:	ldr	x1, [sp, #64]
    9028:	mov	x21, x0
    902c:	ldr	x2, [sp, #80]
    9030:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9034:	ldp	x0, x1, [sp, #64]
    9038:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    903c:	stp	x21, x22, [sp, #64]
    9040:	ldr	x2, [sp, #80]
    9044:	cmp	x2, #0x3ff
    9048:	b.hi	906c <*ABS*+0x10@plt+0x230c>  // b.pmore
    904c:	cmp	x22, #0x3ff
    9050:	b.ls	90f0 <*ABS*+0x10@plt+0x2390>  // b.plast
    9054:	mov	x3, #0x400                 	// #1024
    9058:	add	x0, x21, x2
    905c:	mov	w1, #0x0                   	// #0
    9060:	sub	x2, x3, x2
    9064:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    9068:	ldr	x21, [sp, #64]
    906c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9070:	mov	x3, x20
    9074:	mov	x2, x19
    9078:	ldr	q0, [x0, #1232]
    907c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9080:	add	x0, sp, #0x40
    9084:	add	x1, x1, #0xef8
    9088:	str	q0, [sp, #80]
    908c:	strb	wzr, [x21]
    9090:	bl	22d88 <OnPrint@@Base+0x420>
    9094:	ldr	x0, [sp, #64]
    9098:	mov	x1, #0x0                   	// #0
    909c:	bl	160c8 <__sanitizer_report_error_summary@@Base+0x10>
    90a0:	ldp	x0, x1, [sp, #64]
    90a4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    90a8:	ldp	x21, x22, [sp, #16]
    90ac:	ldp	x23, x24, [sp, #32]
    90b0:	ldr	x30, [sp, #48]
    90b4:	ldp	x19, x20, [sp], #96
    90b8:	ret
    90bc:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    90c0:	str	x0, [x21]
    90c4:	b	8ff8 <*ABS*+0x10@plt+0x2298>
    90c8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    90cc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    90d0:	add	x2, x2, #0xe48
    90d4:	add	x0, x0, #0x608
    90d8:	mov	x4, #0x0                   	// #0
    90dc:	mov	x3, #0x0                   	// #0
    90e0:	mov	w1, #0x2f1                 	// #753
    90e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    90e8:	mov	x20, #0x0                   	// #0
    90ec:	b	8fe0 <*ABS*+0x10@plt+0x2280>
    90f0:	ldr	x23, [x23, #4000]
    90f4:	ldr	x0, [x23]
    90f8:	cbz	x0, 9158 <*ABS*+0x10@plt+0x23f8>
    90fc:	sub	x1, x0, #0x1
    9100:	tst	x1, x0
    9104:	b.ne	9148 <*ABS*+0x10@plt+0x23e8>  // b.any
    9108:	add	x22, x0, #0x3ff
    910c:	neg	x0, x0
    9110:	and	x22, x22, x0
    9114:	add	x1, x24, #0x700
    9118:	mov	w2, #0x0                   	// #0
    911c:	mov	x0, x22
    9120:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    9124:	mov	x21, x0
    9128:	ldr	x1, [sp, #64]
    912c:	ldr	x2, [sp, #80]
    9130:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9134:	ldp	x0, x1, [sp, #64]
    9138:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    913c:	stp	x21, x22, [sp, #64]
    9140:	ldr	x2, [sp, #80]
    9144:	b	9054 <*ABS*+0x10@plt+0x22f4>
    9148:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    914c:	add	x0, x0, #0x6e8
    9150:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    9154:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    9158:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    915c:	str	x0, [x23]
    9160:	b	90fc <*ABS*+0x10@plt+0x239c>
    9164:	nop
    9168:	stp	x19, x20, [sp, #-160]!
    916c:	stp	x23, x24, [sp, #32]
    9170:	mov	x24, x0
    9174:	ldr	x0, [x0, #24]
    9178:	str	x30, [sp, #80]
    917c:	str	xzr, [sp, #112]
    9180:	cbz	x0, 9348 <*ABS*+0x10@plt+0x25e8>
    9184:	stp	x21, x22, [sp, #16]
    9188:	adrp	x22, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    918c:	add	x22, x22, #0x4e0
    9190:	add	x22, x22, #0x18
    9194:	stp	x27, x28, [sp, #64]
    9198:	add	x28, sp, #0x98
    919c:	stp	x25, x26, [sp, #48]
    91a0:	ldr	x1, [sp, #112]
    91a4:	ldr	x0, [x24, #8]
    91a8:	lsl	x1, x1, #5
    91ac:	str	x1, [sp, #120]
    91b0:	add	x0, x0, x1
    91b4:	ldr	w0, [x0, #24]
    91b8:	bl	23d18 <OnPrint@@Base+0x13b0>
    91bc:	str	x0, [sp, #104]
    91c0:	mov	w25, w1
    91c4:	cbz	w1, 92ac <*ABS*+0x10@plt+0x254c>
    91c8:	add	x27, sp, #0x90
    91cc:	mov	x21, #0x0                   	// #0
    91d0:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    91d4:	add	x0, x0, #0xcc0
    91d8:	ldr	x1, [sp, #104]
    91dc:	ldr	x20, [x0, #32]
    91e0:	ldr	x19, [x1, x21, lsl #3]
    91e4:	str	xzr, [sp, #136]
    91e8:	sub	x19, x19, #0x4
    91ec:	cbz	x20, 92b4 <*ABS*+0x10@plt+0x2554>
    91f0:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    91f4:	str	xzr, [sp, #144]
    91f8:	mov	x3, x28
    91fc:	mov	x2, x27
    9200:	mov	x1, x19
    9204:	bl	2a148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
    9208:	tst	w0, #0xff
    920c:	b.eq	9230 <*ABS*+0x10@plt+0x24d0>  // b.none
    9210:	ldr	x1, [sp, #144]
    9214:	cbz	x1, 9230 <*ABS*+0x10@plt+0x24d0>
    9218:	add	x3, sp, #0x88
    921c:	mov	x2, x22
    9220:	mov	x0, x20
    9224:	bl	28280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    9228:	tst	w0, #0xff
    922c:	b.ne	9298 <*ABS*+0x10@plt+0x2538>  // b.any
    9230:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    9234:	add	x23, sp, #0x88
    9238:	mov	x1, x19
    923c:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
    9240:	mov	x19, x0
    9244:	mov	x26, x0
    9248:	cbnz	x0, 9274 <*ABS*+0x10@plt+0x2514>
    924c:	b	9290 <*ABS*+0x10@plt+0x2530>
    9250:	ldr	x1, [x26, #56]
    9254:	mov	x3, x23
    9258:	mov	x2, x22
    925c:	mov	x0, x20
    9260:	bl	28280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    9264:	tst	w0, #0xff
    9268:	b.ne	9290 <*ABS*+0x10@plt+0x2530>  // b.any
    926c:	ldr	x26, [x26]
    9270:	cbz	x26, 9290 <*ABS*+0x10@plt+0x2530>
    9274:	ldr	x1, [x26, #40]
    9278:	mov	x3, x23
    927c:	mov	x2, x22
    9280:	mov	x0, x20
    9284:	bl	28280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    9288:	tst	w0, #0xff
    928c:	b.eq	9250 <*ABS*+0x10@plt+0x24f0>  // b.none
    9290:	mov	x0, x19
    9294:	bl	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
    9298:	ldr	x0, [sp, #136]
    929c:	cbnz	x0, 92d4 <*ABS*+0x10@plt+0x2574>
    92a0:	add	x21, x21, #0x1
    92a4:	cmp	x21, x25
    92a8:	b.ne	91d0 <*ABS*+0x10@plt+0x2470>  // b.any
    92ac:	ldr	x4, [x24, #24]
    92b0:	b	9328 <*ABS*+0x10@plt+0x25c8>
    92b4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    92b8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    92bc:	add	x2, x2, #0xf28
    92c0:	add	x0, x0, #0x608
    92c4:	mov	x4, #0x0                   	// #0
    92c8:	mov	x3, #0x0                   	// #0
    92cc:	mov	w1, #0x5f                  	// #95
    92d0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    92d4:	ldr	x4, [x24, #24]
    92d8:	ldr	x2, [sp, #112]
    92dc:	ldr	x1, [x24, #8]
    92e0:	cmp	x4, x2
    92e4:	b.ls	9358 <*ABS*+0x10@plt+0x25f8>  // b.plast
    92e8:	ldr	x2, [sp, #120]
    92ec:	ldr	w3, [x0, #16]
    92f0:	add	x1, x1, x2
    92f4:	ldr	x2, [x0, #24]
    92f8:	ldr	x4, [x1, #16]
    92fc:	add	x2, x2, x4
    9300:	str	x2, [x0, #24]
    9304:	ldr	x2, [sp, #112]
    9308:	ldr	x4, [x24, #24]
    930c:	cmp	x4, x2
    9310:	b.ls	9358 <*ABS*+0x10@plt+0x25f8>  // b.plast
    9314:	ldr	x5, [x1, #8]
    9318:	mov	w2, #0x1                   	// #1
    931c:	add	w3, w3, w5
    9320:	str	w3, [x0, #16]
    9324:	strb	w2, [x1, #29]
    9328:	ldr	x0, [sp, #112]
    932c:	add	x0, x0, #0x1
    9330:	str	x0, [sp, #112]
    9334:	cmp	x0, x4
    9338:	b.cc	91a0 <*ABS*+0x10@plt+0x2440>  // b.lo, b.ul, b.last
    933c:	ldp	x21, x22, [sp, #16]
    9340:	ldp	x25, x26, [sp, #48]
    9344:	ldp	x27, x28, [sp, #64]
    9348:	ldp	x23, x24, [sp, #32]
    934c:	ldr	x30, [sp, #80]
    9350:	ldp	x19, x20, [sp], #160
    9354:	ret
    9358:	mov	x3, x2
    935c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9360:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9364:	add	x0, x0, #0x578
    9368:	add	x2, x2, #0x560
    936c:	mov	w1, #0x1b6                 	// #438
    9370:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9374:	nop
    9378:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    937c:	stp	x19, x20, [sp, #-160]!
    9380:	ldr	x0, [x0, #3712]
    9384:	stp	x23, x24, [sp, #32]
    9388:	str	x30, [sp, #56]
    938c:	cbz	x0, 9398 <*ABS*+0x10@plt+0x2638>
    9390:	bl	69a0 <__lsan_is_turned_off@plt>
    9394:	cbnz	w0, 9510 <*ABS*+0x10@plt+0x27b0>
    9398:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    939c:	stp	x21, x22, [sp, #16]
    93a0:	bl	12948 <_ZdaPvmSt11align_val_t@@Base+0x5e8>
    93a4:	ldr	x19, [x20, #4000]
    93a8:	str	wzr, [sp, #104]
    93ac:	str	xzr, [sp, #112]
    93b0:	stp	xzr, xzr, [sp, #120]
    93b4:	ldr	x0, [x19]
    93b8:	cbz	x0, 9528 <*ABS*+0x10@plt+0x27c8>
    93bc:	sub	x1, x0, #0x1
    93c0:	tst	x1, x0
    93c4:	b.ne	96cc <*ABS*+0x10@plt+0x296c>  // b.any
    93c8:	add	x19, x0, #0x1f
    93cc:	neg	x0, x0
    93d0:	and	x19, x19, x0
    93d4:	mov	w2, #0x0                   	// #0
    93d8:	mov	x0, x19
    93dc:	adrp	x21, 46000 <__asan_backtrace_release_view@@Base+0x48>
    93e0:	add	x1, x21, #0x700
    93e4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    93e8:	ldr	x1, [sp, #112]
    93ec:	mov	x22, x0
    93f0:	ldr	x2, [sp, #128]
    93f4:	lsl	x2, x2, #5
    93f8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    93fc:	ldp	x0, x1, [sp, #112]
    9400:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    9404:	stp	x22, x19, [sp, #112]
    9408:	ldr	x22, [x20, #4000]
    940c:	str	xzr, [sp, #136]
    9410:	stp	xzr, xzr, [sp, #144]
    9414:	ldr	x0, [x22]
    9418:	cbz	x0, 9534 <*ABS*+0x10@plt+0x27d4>
    941c:	sub	x22, x0, #0x1
    9420:	ands	x22, x22, x0
    9424:	b.ne	96cc <*ABS*+0x10@plt+0x296c>  // b.any
    9428:	add	x19, x0, #0x17
    942c:	neg	x0, x0
    9430:	and	x19, x19, x0
    9434:	add	x1, x21, #0x700
    9438:	mov	w2, #0x0                   	// #0
    943c:	mov	x0, x19
    9440:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    9444:	mov	x23, x0
    9448:	ldr	x2, [sp, #152]
    944c:	add	x24, sp, #0x60
    9450:	ldr	x1, [sp, #136]
    9454:	add	x2, x2, x2, lsl #1
    9458:	lsl	x2, x2, #3
    945c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9460:	ldp	x0, x1, [sp, #136]
    9464:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    9468:	strb	wzr, [sp, #96]
    946c:	stp	x23, x19, [sp, #136]
    9470:	bl	12a60 <_ZdaPvmSt11align_val_t@@Base+0x700>
    9474:	bl	b660 <__sanitizer_print_stack_trace@@Base+0x508>
    9478:	mov	x1, x24
    947c:	adrp	x0, 9000 <*ABS*+0x10@plt+0x22a0>
    9480:	add	x0, x0, #0xd28
    9484:	bl	ae10 <__lsan_do_recoverable_leak_check@@Base+0x1148>
    9488:	bl	b6f0 <__sanitizer_print_stack_trace@@Base+0x598>
    948c:	bl	12a70 <_ZdaPvmSt11align_val_t@@Base+0x710>
    9490:	ldrb	w23, [sp, #96]
    9494:	cbz	w23, 973c <*ABS*+0x10@plt+0x29dc>
    9498:	add	x0, x24, #0x8
    949c:	bl	9168 <*ABS*+0x10@plt+0x2408>
    94a0:	ldr	x2, [sp, #128]
    94a4:	cbz	x2, 94d4 <*ABS*+0x10@plt+0x2774>
    94a8:	ldr	x0, [sp, #112]
    94ac:	mov	x19, #0x0                   	// #0
    94b0:	add	x2, x0, x2, lsl #5
    94b4:	nop
    94b8:	ldrb	w1, [x0, #29]
    94bc:	add	x0, x0, #0x20
    94c0:	cmp	w1, #0x0
    94c4:	cinc	x19, x19, eq  // eq = none
    94c8:	cmp	x2, x0
    94cc:	b.ne	94b8 <*ABS*+0x10@plt+0x2758>  // b.any
    94d0:	cbnz	x19, 9650 <*ABS*+0x10@plt+0x28f0>
    94d4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    94d8:	ldr	x0, [x0, #4040]
    94dc:	ldrb	w0, [x0, #177]
    94e0:	cbnz	w0, 9548 <*ABS*+0x10@plt+0x27e8>
    94e4:	mov	w23, #0x0                   	// #0
    94e8:	ldp	x0, x1, [sp, #136]
    94ec:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    94f0:	ldp	x0, x1, [sp, #112]
    94f4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    94f8:	mov	w0, w23
    94fc:	ldp	x21, x22, [sp, #16]
    9500:	ldp	x23, x24, [sp, #32]
    9504:	ldr	x30, [sp, #56]
    9508:	ldp	x19, x20, [sp], #160
    950c:	ret
    9510:	mov	w23, #0x0                   	// #0
    9514:	mov	w0, w23
    9518:	ldp	x23, x24, [sp, #32]
    951c:	ldr	x30, [sp, #56]
    9520:	ldp	x19, x20, [sp], #160
    9524:	ret
    9528:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    952c:	str	x0, [x19]
    9530:	b	93bc <*ABS*+0x10@plt+0x265c>
    9534:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    9538:	str	x0, [x22]
    953c:	b	941c <*ABS*+0x10@plt+0x26bc>
    9540:	ldr	x25, [sp, #48]
    9544:	mov	x22, x19
    9548:	ldr	x20, [x20, #4000]
    954c:	str	xzr, [sp, #64]
    9550:	stp	xzr, xzr, [sp, #72]
    9554:	ldr	x0, [x20]
    9558:	cbz	x0, 970c <*ABS*+0x10@plt+0x29ac>
    955c:	sub	x19, x0, #0x1
    9560:	ands	x19, x19, x0
    9564:	b.ne	96cc <*ABS*+0x10@plt+0x296c>  // b.any
    9568:	add	x20, x0, #0x7
    956c:	neg	x0, x0
    9570:	and	x20, x20, x0
    9574:	add	x1, x21, #0x700
    9578:	mov	w2, #0x0                   	// #0
    957c:	mov	x0, x20
    9580:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    9584:	mov	x21, x0
    9588:	ldr	x1, [sp, #64]
    958c:	ldr	x2, [sp, #80]
    9590:	lsl	x2, x2, #3
    9594:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9598:	ldp	x0, x1, [sp, #64]
    959c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    95a0:	stp	x21, x20, [sp, #64]
    95a4:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    95a8:	ldr	x0, [x0, #3296]
    95ac:	cbz	x0, 9718 <*ABS*+0x10@plt+0x29b8>
    95b0:	add	x1, sp, #0x40
    95b4:	bl	28b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f0>
    95b8:	ldr	x0, [sp, #80]
    95bc:	cbz	x0, 9640 <*ABS*+0x10@plt+0x28e0>
    95c0:	adrp	x21, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    95c4:	add	x1, x21, #0x68
    95c8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
    95cc:	add	x0, x0, #0x550
    95d0:	bl	22c78 <OnPrint@@Base+0x310>
    95d4:	adrp	x20, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    95d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    95dc:	add	x0, x0, #0xa0
    95e0:	bl	22c78 <OnPrint@@Base+0x310>
    95e4:	add	x20, x20, #0xe0
    95e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    95ec:	add	x0, x0, #0xb8
    95f0:	bl	22c78 <OnPrint@@Base+0x310>
    95f4:	ldr	x0, [sp, #80]
    95f8:	cbz	x0, 9630 <*ABS*+0x10@plt+0x28d0>
    95fc:	nop
    9600:	ldr	x1, [sp, #64]
    9604:	mov	x0, x20
    9608:	ldr	x1, [x1, x19, lsl #3]
    960c:	add	x19, x19, #0x1
    9610:	ldr	x3, [x1, #8]
    9614:	ldr	x2, [x1, #24]
    9618:	ldr	w1, [x1, #16]
    961c:	mov	w1, w1
    9620:	bl	22c78 <OnPrint@@Base+0x310>
    9624:	ldr	x1, [sp, #80]
    9628:	cmp	x1, x19
    962c:	b.hi	9600 <*ABS*+0x10@plt+0x28a0>  // b.pmore
    9630:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9634:	add	x1, x21, #0x68
    9638:	add	x0, x0, #0xd8
    963c:	bl	22c78 <OnPrint@@Base+0x310>
    9640:	ldp	x0, x1, [sp, #64]
    9644:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    9648:	cbz	x22, 94e4 <*ABS*+0x10@plt+0x2784>
    964c:	b	96c0 <*ABS*+0x10@plt+0x2960>
    9650:	str	x25, [sp, #48]
    9654:	bl	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
    9658:	and	w22, w0, #0xff
    965c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9660:	add	x0, x0, #0x20
    9664:	bl	22c78 <OnPrint@@Base+0x310>
    9668:	cbz	w22, 96e0 <*ABS*+0x10@plt+0x2980>
    966c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9670:	add	x1, x1, #0xf0
    9674:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9678:	add	x0, x25, #0xdb8
    967c:	bl	22c78 <OnPrint@@Base+0x310>
    9680:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9684:	add	x0, x0, #0x100
    9688:	bl	22d00 <OnPrint@@Base+0x398>
    968c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9690:	add	x1, x1, #0xda8
    9694:	add	x0, x25, #0xdb8
    9698:	bl	22c78 <OnPrint@@Base+0x310>
    969c:	adrp	x1, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    96a0:	add	x0, x24, #0x8
    96a4:	ldrsw	x1, [x1, #3272]
    96a8:	bl	8b48 <*ABS*+0x10@plt+0x1de8>
    96ac:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    96b0:	ldr	x0, [x0, #4040]
    96b4:	ldrb	w0, [x0, #177]
    96b8:	cbnz	w0, 9540 <*ABS*+0x10@plt+0x27e0>
    96bc:	ldr	x25, [sp, #48]
    96c0:	add	x0, x24, #0x8
    96c4:	bl	8f88 <*ABS*+0x10@plt+0x2228>
    96c8:	b	94e8 <*ABS*+0x10@plt+0x2788>
    96cc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    96d0:	add	x0, x0, #0x6e8
    96d4:	str	x25, [sp, #48]
    96d8:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    96dc:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    96e0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
    96e4:	add	x22, x1, #0xb00
    96e8:	mov	x1, x22
    96ec:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
    96f0:	add	x0, x25, #0xdb8
    96f4:	bl	22c78 <OnPrint@@Base+0x310>
    96f8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    96fc:	add	x0, x0, #0x100
    9700:	bl	22d00 <OnPrint@@Base+0x398>
    9704:	mov	x1, x22
    9708:	b	9694 <*ABS*+0x10@plt+0x2934>
    970c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    9710:	str	x0, [x20]
    9714:	b	955c <*ABS*+0x10@plt+0x27fc>
    9718:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    971c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9720:	add	x2, x2, #0xf28
    9724:	add	x0, x0, #0x608
    9728:	mov	x4, #0x0                   	// #0
    972c:	mov	x3, #0x0                   	// #0
    9730:	mov	w1, #0x5f                  	// #95
    9734:	str	x25, [sp, #48]
    9738:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    973c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9740:	add	x0, x0, #0xf48
    9744:	str	x25, [sp, #48]
    9748:	bl	22d00 <OnPrint@@Base+0x398>
    974c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9750:	add	x0, x0, #0xf78
    9754:	bl	22d00 <OnPrint@@Base+0x398>
    9758:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    975c:	add	x0, x0, #0xfd8
    9760:	bl	22d00 <OnPrint@@Base+0x398>
    9764:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    9768:	stp	x19, x20, [sp, #-32]!
    976c:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9770:	add	x20, x19, #0xcc0
    9774:	add	x0, x20, #0xe0
    9778:	str	x30, [sp, #16]
    977c:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    9780:	ldrb	w0, [x20, #312]
    9784:	cbnz	w0, 97a0 <*ABS*+0x10@plt+0x2a40>
    9788:	mov	w0, #0x1                   	// #1
    978c:	strb	w0, [x20, #312]
    9790:	bl	9378 <*ABS*+0x10@plt+0x2618>
    9794:	strb	w0, [x20, #216]
    9798:	tst	w0, #0xff
    979c:	b.ne	97b4 <*ABS*+0x10@plt+0x2a54>  // b.any
    97a0:	add	x0, x19, #0xcc0
    97a4:	ldr	x30, [sp, #16]
    97a8:	add	x0, x0, #0xe0
    97ac:	ldp	x19, x20, [sp], #32
    97b0:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    97b4:	bl	adf0 <__lsan_do_recoverable_leak_check@@Base+0x1128>
    97b8:	add	x0, x19, #0xcc0
    97bc:	ldr	x30, [sp, #16]
    97c0:	add	x0, x0, #0xe0
    97c4:	ldp	x19, x20, [sp], #32
    97c8:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    97cc:	nop
    97d0:	stp	x19, x30, [sp, #-16]!
    97d4:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    97d8:	add	x19, x19, #0xcc0
    97dc:	add	x19, x19, #0xe0
    97e0:	mov	x0, x19
    97e4:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    97e8:	bl	9378 <*ABS*+0x10@plt+0x2618>
    97ec:	mov	x0, x19
    97f0:	ldp	x19, x30, [sp], #16
    97f4:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    97f8:	mov	x1, x0
    97fc:	ldr	x0, [x0, #24]
    9800:	cbz	x0, 9828 <*ABS*+0x10@plt+0x2ac8>
    9804:	ldr	x1, [x1, #8]
    9808:	add	x3, x1, x0, lsl #5
    980c:	mov	x0, #0x0                   	// #0
    9810:	ldrb	w2, [x1, #29]
    9814:	add	x1, x1, #0x20
    9818:	cmp	w2, #0x0
    981c:	cinc	x0, x0, eq  // eq = none
    9820:	cmp	x1, x3
    9824:	b.ne	9810 <*ABS*+0x10@plt+0x2ab0>  // b.any
    9828:	ret
    982c:	nop

0000000000009830 <__lsan_ignore_object@@Base>:
    9830:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9834:	stp	x19, x20, [sp, #-32]!
    9838:	mov	x19, x0
    983c:	ldr	x2, [x2, #4040]
    9840:	ldrb	w0, [x2, #57]
    9844:	str	x30, [sp, #16]
    9848:	cbnz	w0, 9858 <__lsan_ignore_object@@Base+0x28>
    984c:	ldr	x30, [sp, #16]
    9850:	ldp	x19, x20, [sp], #32
    9854:	ret
    9858:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    985c:	add	x0, x20, #0xcc0
    9860:	add	x0, x0, #0xe0
    9864:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    9868:	mov	x0, x19
    986c:	bl	b940 <__sanitizer_print_stack_trace@@Base+0x7e8>
    9870:	cmp	w0, #0x2
    9874:	b.eq	98dc <__lsan_ignore_object@@Base+0xac>  // b.none
    9878:	cmp	w0, #0x1
    987c:	b.ne	98b4 <__lsan_ignore_object@@Base+0x84>  // b.any
    9880:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9884:	ldr	x0, [x0, #3680]
    9888:	ldr	w0, [x0]
    988c:	cbz	w0, 98a0 <__lsan_ignore_object@@Base+0x70>
    9890:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9894:	mov	x1, x19
    9898:	add	x0, x0, #0x168
    989c:	bl	22d00 <OnPrint@@Base+0x398>
    98a0:	add	x0, x20, #0xcc0
    98a4:	ldr	x30, [sp, #16]
    98a8:	add	x0, x0, #0xe0
    98ac:	ldp	x19, x20, [sp], #32
    98b0:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    98b4:	cbnz	w0, 98a0 <__lsan_ignore_object@@Base+0x70>
    98b8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    98bc:	ldr	x0, [x0, #3680]
    98c0:	ldr	w0, [x0]
    98c4:	cbz	w0, 98a0 <__lsan_ignore_object@@Base+0x70>
    98c8:	mov	x1, x19
    98cc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    98d0:	add	x0, x0, #0x1b0
    98d4:	bl	22d00 <OnPrint@@Base+0x398>
    98d8:	b	98a0 <__lsan_ignore_object@@Base+0x70>
    98dc:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    98e0:	ldr	x0, [x0, #3680]
    98e4:	ldr	w0, [x0]
    98e8:	cbz	w0, 98a0 <__lsan_ignore_object@@Base+0x70>
    98ec:	mov	x1, x19
    98f0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    98f4:	add	x0, x0, #0x130
    98f8:	bl	22d00 <OnPrint@@Base+0x398>
    98fc:	b	98a0 <__lsan_ignore_object@@Base+0x70>

0000000000009900 <__lsan_register_root_region@@Base>:
    9900:	stp	x19, x20, [sp, #-80]!
    9904:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9908:	add	x19, x20, #0xcc0
    990c:	stp	x21, x22, [sp, #16]
    9910:	mov	x21, x0
    9914:	mov	x22, x1
    9918:	add	x0, x19, #0xe0
    991c:	stp	x23, x24, [sp, #32]
    9920:	str	x30, [sp, #48]
    9924:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    9928:	ldr	x19, [x19, #144]
    992c:	cbz	x19, 9a78 <__lsan_register_root_region@@Base+0x178>
    9930:	stp	x21, x22, [sp, #64]
    9934:	ldr	x4, [x19, #8]
    9938:	ldr	x3, [x19, #16]
    993c:	lsr	x4, x4, #4
    9940:	cmp	x3, x4
    9944:	b.hi	9a98 <__lsan_register_root_region@@Base+0x198>  // b.pmore
    9948:	add	x23, x3, #0x1
    994c:	b.eq	99cc <__lsan_register_root_region@@Base+0xcc>  // b.none
    9950:	ldr	x24, [x19]
    9954:	str	x23, [x19, #16]
    9958:	add	x0, x24, x3, lsl #4
    995c:	add	x1, sp, #0x40
    9960:	mov	x2, #0x10                  	// #16
    9964:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9968:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    996c:	ldr	x0, [x0, #3680]
    9970:	ldr	w0, [x0]
    9974:	cbnz	w0, 9998 <__lsan_register_root_region@@Base+0x98>
    9978:	add	x0, x20, #0xcc0
    997c:	add	x0, x0, #0xe0
    9980:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    9984:	ldp	x21, x22, [sp, #16]
    9988:	ldp	x23, x24, [sp, #32]
    998c:	ldr	x30, [sp, #48]
    9990:	ldp	x19, x20, [sp], #80
    9994:	ret
    9998:	mov	x2, x22
    999c:	mov	x1, x21
    99a0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    99a4:	add	x0, x0, #0x200
    99a8:	bl	22d00 <OnPrint@@Base+0x398>
    99ac:	add	x0, x20, #0xcc0
    99b0:	add	x0, x0, #0xe0
    99b4:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    99b8:	ldp	x21, x22, [sp, #16]
    99bc:	ldp	x23, x24, [sp, #32]
    99c0:	ldr	x30, [sp, #48]
    99c4:	ldp	x19, x20, [sp], #80
    99c8:	ret
    99cc:	tst	x3, x23
    99d0:	b.eq	9a0c <__lsan_register_root_region@@Base+0x10c>  // b.none
    99d4:	clz	x4, x23
    99d8:	mov	w0, #0x3f                  	// #63
    99dc:	sub	w0, w0, w4
    99e0:	mov	x2, #0x1                   	// #1
    99e4:	add	w4, w0, #0x1
    99e8:	lsl	x4, x2, x4
    99ec:	cmp	x23, x4
    99f0:	b.cs	9ae4 <__lsan_register_root_region@@Base+0x1e4>  // b.hs, b.nlast
    99f4:	lsl	x0, x2, x0
    99f8:	cmp	x23, x0
    99fc:	b.ls	9b00 <__lsan_register_root_region@@Base+0x200>  // b.plast
    9a00:	cmp	x3, x4
    9a04:	b.hi	9ab0 <__lsan_register_root_region@@Base+0x1b0>  // b.pmore
    9a08:	mov	x23, x4
    9a0c:	adrp	x24, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9a10:	lsl	x23, x23, #4
    9a14:	ldr	x24, [x24, #4000]
    9a18:	ldr	x0, [x24]
    9a1c:	cbz	x0, 9ac8 <__lsan_register_root_region@@Base+0x1c8>
    9a20:	sub	x1, x0, #0x1
    9a24:	tst	x1, x0
    9a28:	b.ne	9ad4 <__lsan_register_root_region@@Base+0x1d4>  // b.any
    9a2c:	add	x23, x23, x1
    9a30:	neg	x0, x0
    9a34:	and	x23, x23, x0
    9a38:	mov	w2, #0x0                   	// #0
    9a3c:	mov	x0, x23
    9a40:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9a44:	add	x1, x1, #0x700
    9a48:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    9a4c:	ldr	x1, [x19]
    9a50:	mov	x24, x0
    9a54:	ldr	x2, [x19, #16]
    9a58:	lsl	x2, x2, #4
    9a5c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9a60:	ldp	x0, x1, [x19]
    9a64:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    9a68:	stp	x24, x23, [x19]
    9a6c:	ldr	x3, [x19, #16]
    9a70:	add	x23, x3, #0x1
    9a74:	b	9954 <__lsan_register_root_region@@Base+0x54>
    9a78:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9a7c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9a80:	add	x2, x2, #0x1e8
    9a84:	add	x0, x0, #0x608
    9a88:	mov	x4, #0x0                   	// #0
    9a8c:	mov	x3, #0x0                   	// #0
    9a90:	mov	w1, #0x336                 	// #822
    9a94:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9a98:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9a9c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9aa0:	add	x2, x2, #0x660
    9aa4:	add	x0, x0, #0x578
    9aa8:	mov	w1, #0x1be                 	// #446
    9aac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9ab0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9ab4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9ab8:	add	x2, x2, #0x6c8
    9abc:	add	x0, x0, #0x578
    9ac0:	mov	w1, #0x1fd                 	// #509
    9ac4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9ac8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    9acc:	str	x0, [x24]
    9ad0:	b	9a20 <__lsan_register_root_region@@Base+0x120>
    9ad4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9ad8:	add	x0, x0, #0x6e8
    9adc:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    9ae0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    9ae4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9ae8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9aec:	mov	x3, x23
    9af0:	add	x2, x2, #0x680
    9af4:	add	x0, x0, #0x578
    9af8:	mov	w1, #0x17b                 	// #379
    9afc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9b00:	mov	x4, x0
    9b04:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9b08:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9b0c:	mov	x3, x23
    9b10:	add	x2, x2, #0x6a8
    9b14:	add	x0, x0, #0x578
    9b18:	mov	w1, #0x17c                 	// #380
    9b1c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000009b20 <__lsan_unregister_root_region@@Base>:
    9b20:	stp	x19, x20, [sp, #-48]!
    9b24:	mov	x19, x0
    9b28:	mov	x20, x1
    9b2c:	stp	x21, x22, [sp, #16]
    9b30:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9b34:	add	x22, x21, #0xcc0
    9b38:	add	x0, x22, #0xe0
    9b3c:	str	x30, [sp, #32]
    9b40:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    9b44:	ldr	x0, [x22, #144]
    9b48:	cbz	x0, 9bf4 <__lsan_unregister_root_region@@Base+0xd4>
    9b4c:	ldr	x7, [x0, #16]
    9b50:	cbz	x7, 9c34 <__lsan_unregister_root_region@@Base+0x114>
    9b54:	ldr	x1, [x0]
    9b58:	mov	x4, #0x0                   	// #0
    9b5c:	mov	x3, x1
    9b60:	b	9b74 <__lsan_unregister_root_region@@Base+0x54>
    9b64:	add	x4, x4, #0x1
    9b68:	add	x3, x3, #0x10
    9b6c:	cmp	x7, x4
    9b70:	b.eq	9c34 <__lsan_unregister_root_region@@Base+0x114>  // b.none
    9b74:	ldp	x5, x6, [x3]
    9b78:	cmp	x6, x20
    9b7c:	ccmp	x5, x19, #0x0, eq  // eq = none
    9b80:	b.ne	9b64 <__lsan_unregister_root_region@@Base+0x44>  // b.any
    9b84:	add	x7, x1, x7, lsl #4
    9b88:	ldp	x4, x5, [x7, #-16]
    9b8c:	stp	x4, x5, [x3]
    9b90:	ldr	x1, [x0, #16]
    9b94:	cbz	x1, 9c14 <__lsan_unregister_root_region@@Base+0xf4>
    9b98:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9b9c:	sub	x1, x1, #0x1
    9ba0:	str	x1, [x0, #16]
    9ba4:	ldr	x0, [x2, #3680]
    9ba8:	ldr	w0, [x0]
    9bac:	cbnz	w0, 9bc8 <__lsan_unregister_root_region@@Base+0xa8>
    9bb0:	add	x0, x21, #0xcc0
    9bb4:	ldp	x21, x22, [sp, #16]
    9bb8:	add	x0, x0, #0xe0
    9bbc:	ldr	x30, [sp, #32]
    9bc0:	ldp	x19, x20, [sp], #48
    9bc4:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    9bc8:	mov	x2, x20
    9bcc:	mov	x1, x19
    9bd0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9bd4:	add	x0, x0, #0x248
    9bd8:	bl	22d00 <OnPrint@@Base+0x398>
    9bdc:	add	x0, x21, #0xcc0
    9be0:	ldp	x21, x22, [sp, #16]
    9be4:	add	x0, x0, #0xe0
    9be8:	ldr	x30, [sp, #32]
    9bec:	ldp	x19, x20, [sp], #48
    9bf0:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    9bf4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9bf8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9bfc:	add	x2, x2, #0x1e8
    9c00:	add	x0, x0, #0x608
    9c04:	mov	x4, #0x0                   	// #0
    9c08:	mov	x3, #0x0                   	// #0
    9c0c:	mov	w1, #0x341                 	// #833
    9c10:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9c14:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9c18:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9c1c:	add	x2, x2, #0x230
    9c20:	add	x0, x0, #0x578
    9c24:	mov	x4, #0x0                   	// #0
    9c28:	mov	x3, #0x0                   	// #0
    9c2c:	mov	w1, #0x1ca                 	// #458
    9c30:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9c34:	mov	x2, x20
    9c38:	mov	x1, x19
    9c3c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9c40:	add	x0, x0, #0x278
    9c44:	bl	22d00 <OnPrint@@Base+0x398>
    9c48:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    9c4c:	nop

0000000000009c50 <__lsan_disable@@Base>:
    9c50:	b	ab50 <__lsan_do_recoverable_leak_check@@Base+0xe88>
    9c54:	nop

0000000000009c58 <__lsan_enable@@Base>:
    9c58:	b	ab70 <__lsan_do_recoverable_leak_check@@Base+0xea8>
    9c5c:	nop

0000000000009c60 <__lsan_do_leak_check@@Base>:
    9c60:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9c64:	ldr	x0, [x0, #4040]
    9c68:	ldrb	w0, [x0, #57]
    9c6c:	cbnz	w0, 9c74 <__lsan_do_leak_check@@Base+0x14>
    9c70:	ret
    9c74:	stp	x19, x20, [sp, #-32]!
    9c78:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9c7c:	add	x20, x19, #0xcc0
    9c80:	add	x0, x20, #0xe0
    9c84:	str	x30, [sp, #16]
    9c88:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    9c8c:	ldrb	w0, [x20, #312]
    9c90:	cbnz	w0, 9cac <__lsan_do_leak_check@@Base+0x4c>
    9c94:	mov	w0, #0x1                   	// #1
    9c98:	strb	w0, [x20, #312]
    9c9c:	bl	9378 <*ABS*+0x10@plt+0x2618>
    9ca0:	strb	w0, [x20, #216]
    9ca4:	tst	w0, #0xff
    9ca8:	b.ne	9cc0 <__lsan_do_leak_check@@Base+0x60>  // b.any
    9cac:	add	x0, x19, #0xcc0
    9cb0:	ldr	x30, [sp, #16]
    9cb4:	add	x0, x0, #0xe0
    9cb8:	ldp	x19, x20, [sp], #32
    9cbc:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    9cc0:	bl	adf0 <__lsan_do_recoverable_leak_check@@Base+0x1128>
    9cc4:	b	9cac <__lsan_do_leak_check@@Base+0x4c>

0000000000009cc8 <__lsan_do_recoverable_leak_check@@Base>:
    9cc8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9ccc:	stp	x19, x20, [sp, #-32]!
    9cd0:	mov	w19, #0x0                   	// #0
    9cd4:	ldr	x1, [x1, #4040]
    9cd8:	ldrb	w0, [x1, #57]
    9cdc:	str	x30, [sp, #16]
    9ce0:	cbnz	w0, 9cf4 <__lsan_do_recoverable_leak_check@@Base+0x2c>
    9ce4:	mov	w0, w19
    9ce8:	ldr	x30, [sp, #16]
    9cec:	ldp	x19, x20, [sp], #32
    9cf0:	ret
    9cf4:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9cf8:	add	x20, x20, #0xcc0
    9cfc:	add	x20, x20, #0xe0
    9d00:	mov	x0, x20
    9d04:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
    9d08:	bl	9378 <*ABS*+0x10@plt+0x2618>
    9d0c:	and	w19, w0, #0xff
    9d10:	mov	x0, x20
    9d14:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
    9d18:	mov	w0, w19
    9d1c:	ldr	x30, [sp, #16]
    9d20:	ldp	x19, x20, [sp], #32
    9d24:	ret
    9d28:	stp	x19, x20, [sp, #-368]!
    9d2c:	stp	x21, x22, [sp, #16]
    9d30:	stp	x23, x24, [sp, #32]
    9d34:	stp	x25, x26, [sp, #48]
    9d38:	stp	x27, x28, [sp, #64]
    9d3c:	str	x30, [sp, #80]
    9d40:	cbz	x1, a524 <__lsan_do_recoverable_leak_check@@Base+0x85c>
    9d44:	mov	x23, x1
    9d48:	ldrb	w1, [x1]
    9d4c:	cbnz	w1, a5a4 <__lsan_do_recoverable_leak_check@@Base+0x8dc>
    9d50:	ldr	x1, [x0]
    9d54:	mov	x19, x0
    9d58:	ldr	x1, [x1, #16]
    9d5c:	blr	x1
    9d60:	mov	x21, x0
    9d64:	add	x0, sp, #0x200
    9d68:	str	xzr, [sp, #288]
    9d6c:	stp	xzr, xzr, [x0, #-216]
    9d70:	cbnz	x21, a30c <__lsan_do_recoverable_leak_check@@Base+0x644>
    9d74:	mov	x20, #0x0                   	// #0
    9d78:	str	x21, [sp, #304]
    9d7c:	b	9d94 <__lsan_do_recoverable_leak_check@@Base+0xcc>
    9d80:	mov	x1, x20
    9d84:	mov	x0, x19
    9d88:	blr	x2
    9d8c:	str	x0, [x21, x20, lsl #3]
    9d90:	add	x20, x20, #0x1
    9d94:	ldr	x1, [x19]
    9d98:	mov	x0, x19
    9d9c:	ldr	x1, [x1, #16]
    9da0:	blr	x1
    9da4:	cmp	x0, x20
    9da8:	b.ls	9de0 <__lsan_do_recoverable_leak_check@@Base+0x118>  // b.plast
    9dac:	ldr	x0, [x19]
    9db0:	ldr	x4, [sp, #304]
    9db4:	ldr	x2, [x0, #24]
    9db8:	cmp	x20, x4
    9dbc:	ldr	x21, [sp, #288]
    9dc0:	b.cc	9d80 <__lsan_do_recoverable_leak_check@@Base+0xb8>  // b.lo, b.ul, b.last
    9dc4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9dc8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9dcc:	mov	x3, x20
    9dd0:	add	x2, x2, #0x560
    9dd4:	add	x0, x0, #0x578
    9dd8:	mov	w1, #0x1b6                 	// #438
    9ddc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9de0:	ldr	x0, [sp, #288]
    9de4:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9de8:	ldr	x1, [sp, #304]
    9dec:	mov	w2, #0x0                   	// #0
    9df0:	mov	x20, x3
    9df4:	str	x3, [sp, #112]
    9df8:	add	x24, sp, #0x120
    9dfc:	bl	a950 <__lsan_do_recoverable_leak_check@@Base+0xc88>
    9e00:	bl	12a80 <_ZdaPvmSt11align_val_t@@Base+0x720>
    9e04:	mov	x2, x24
    9e08:	adrp	x1, 6000 <_Unwind_Backtrace@plt-0x650>
    9e0c:	add	x1, x1, #0xea0
    9e10:	bl	2ce18 <__sanitizer_set_death_callback@@Base+0x730>
    9e14:	ldp	x0, x1, [sp, #288]
    9e18:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    9e1c:	str	xzr, [sp, #224]
    9e20:	ldr	x20, [x20, #4000]
    9e24:	stp	xzr, xzr, [sp, #232]
    9e28:	ldr	x0, [x20]
    9e2c:	cbz	x0, a39c <__lsan_do_recoverable_leak_check@@Base+0x6d4>
    9e30:	sub	x26, x0, #0x1
    9e34:	ands	x26, x26, x0
    9e38:	b.ne	a4c8 <__lsan_do_recoverable_leak_check@@Base+0x800>  // b.any
    9e3c:	add	x21, x0, #0x7
    9e40:	neg	x0, x0
    9e44:	and	x21, x21, x0
    9e48:	mov	w2, #0x0                   	// #0
    9e4c:	mov	x0, x21
    9e50:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
    9e54:	add	x1, x20, #0x700
    9e58:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    9e5c:	ldr	x1, [sp, #224]
    9e60:	mov	x22, x0
    9e64:	ldr	x2, [sp, #240]
    9e68:	add	x25, sp, #0xe0
    9e6c:	lsl	x2, x2, #3
    9e70:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    9e74:	ldp	x0, x1, [sp, #224]
    9e78:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    9e7c:	stp	x22, x21, [sp, #224]
    9e80:	mov	x1, x25
    9e84:	adrp	x0, 6000 <_Unwind_Backtrace@plt-0x650>
    9e88:	add	x0, x0, #0xf40
    9e8c:	bl	c5d0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    9e90:	mov	x0, x25
    9e94:	bl	adb0 <__lsan_do_recoverable_leak_check@@Base+0x10e8>
    9e98:	ldr	x1, [x19]
    9e9c:	mov	x0, x19
    9ea0:	ldr	x1, [x1, #8]
    9ea4:	blr	x1
    9ea8:	str	x0, [sp, #128]
    9eac:	cbnz	x0, a49c <__lsan_do_recoverable_leak_check@@Base+0x7d4>
    9eb0:	mov	x22, #0x0                   	// #0
    9eb4:	mov	x27, #0x0                   	// #0
    9eb8:	str	xzr, [sp, #144]
    9ebc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9ec0:	add	x1, x1, #0x308
    9ec4:	str	x1, [sp, #120]
    9ec8:	add	x0, x27, x22
    9ecc:	ldr	x1, [x19]
    9ed0:	str	x0, [sp, #152]
    9ed4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9ed8:	add	x0, x0, #0x448
    9edc:	str	x0, [sp, #136]
    9ee0:	mov	x22, #0x0                   	// #0
    9ee4:	ldr	x1, [x1, #16]
    9ee8:	mov	x0, x19
    9eec:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9ef0:	blr	x1
    9ef4:	cmp	x0, x22
    9ef8:	b.ls	a090 <__lsan_do_recoverable_leak_check@@Base+0x3c8>  // b.plast
    9efc:	nop
    9f00:	ldr	x2, [x19]
    9f04:	mov	x1, x22
    9f08:	mov	x0, x19
    9f0c:	ldr	x2, [x2, #24]
    9f10:	blr	x2
    9f14:	mov	x20, x0
    9f18:	add	x1, x21, #0xcc0
    9f1c:	ldrb	w0, [x1, #21]
    9f20:	cbnz	w0, a4fc <__lsan_do_recoverable_leak_check@@Base+0x834>
    9f24:	add	x7, sp, #0x100
    9f28:	add	x6, sp, #0xd8
    9f2c:	add	x5, sp, #0xd0
    9f30:	add	x4, sp, #0xc8
    9f34:	add	x3, sp, #0xc0
    9f38:	add	x2, sp, #0xb8
    9f3c:	add	x1, sp, #0xb0
    9f40:	mov	x0, x20
    9f44:	bl	129a8 <_ZdaPvmSt11align_val_t@@Base+0x648>
    9f48:	tst	w0, #0xff
    9f4c:	b.eq	a4d8 <__lsan_do_recoverable_leak_check@@Base+0x810>  // b.none
    9f50:	ldr	x4, [x19]
    9f54:	mov	x3, x24
    9f58:	mov	x2, x27
    9f5c:	mov	x1, x22
    9f60:	mov	x0, x19
    9f64:	ldr	x4, [x4]
    9f68:	blr	x4
    9f6c:	mov	w28, w0
    9f70:	cmp	w0, #0x1
    9f74:	b.eq	9f98 <__lsan_do_recoverable_leak_check@@Base+0x2d0>  // b.none
    9f78:	mov	x1, x20
    9f7c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9f80:	add	x0, x0, #0x348
    9f84:	bl	22d00 <OnPrint@@Base+0x398>
    9f88:	cmn	w28, #0x1
    9f8c:	b.eq	a074 <__lsan_do_recoverable_leak_check@@Base+0x3ac>  // b.none
    9f90:	ldr	x0, [sp, #176]
    9f94:	str	x0, [sp, #288]
    9f98:	add	x0, x21, #0xcc0
    9f9c:	cmp	w28, #0x0
    9fa0:	cset	w1, ne  // ne = any
    9fa4:	ldrb	w0, [x0, #14]
    9fa8:	tst	w1, w0
    9fac:	b.ne	a50c <__lsan_do_recoverable_leak_check@@Base+0x844>  // b.any
    9fb0:	add	x0, x21, #0xcc0
    9fb4:	ldrb	w1, [x0, #13]
    9fb8:	cbz	w1, a008 <__lsan_do_recoverable_leak_check@@Base+0x340>
    9fbc:	ldrb	w2, [x0, #21]
    9fc0:	ldr	x1, [sp, #176]
    9fc4:	ldr	x0, [sp, #288]
    9fc8:	cbnz	w2, a3b4 <__lsan_do_recoverable_leak_check@@Base+0x6ec>
    9fcc:	cmp	x1, x0
    9fd0:	b.hi	a3fc <__lsan_do_recoverable_leak_check@@Base+0x734>  // b.pmore
    9fd4:	ldr	x1, [sp, #184]
    9fd8:	cmp	x0, x1
    9fdc:	b.cs	a3fc <__lsan_do_recoverable_leak_check@@Base+0x734>  // b.hs, b.nlast
    9fe0:	str	x0, [sp, #176]
    9fe4:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    9fe8:	add	x3, x3, #0x410
    9fec:	mov	x2, x25
    9ff0:	bl	73d0 <*ABS*+0x10@plt+0x670>
    9ff4:	adrp	x1, 7000 <*ABS*+0x10@plt+0x2a0>
    9ff8:	mov	x2, x25
    9ffc:	mov	x0, x20
    a000:	add	x1, x1, #0x760
    a004:	bl	12a58 <_ZdaPvmSt11align_val_t@@Base+0x6f8>
    a008:	add	x1, x21, #0xcc0
    a00c:	ldrb	w0, [x1, #15]
    a010:	cbz	w0, a074 <__lsan_do_recoverable_leak_check@@Base+0x3ac>
    a014:	ldr	x0, [sp, #192]
    a018:	cbz	x0, a054 <__lsan_do_recoverable_leak_check@@Base+0x38c>
    a01c:	ldrb	w2, [x1, #21]
    a020:	ldr	x1, [sp, #200]
    a024:	cbnz	w2, a5cc <__lsan_do_recoverable_leak_check@@Base+0x904>
    a028:	ldp	x2, x3, [sp, #208]
    a02c:	cmp	x2, x3
    a030:	b.eq	a044 <__lsan_do_recoverable_leak_check@@Base+0x37c>  // b.none
    a034:	cmp	x2, x1
    a038:	b.hi	a044 <__lsan_do_recoverable_leak_check@@Base+0x37c>  // b.pmore
    a03c:	cmp	x3, x0
    a040:	b.cs	a704 <__lsan_do_recoverable_leak_check@@Base+0xa3c>  // b.hs, b.nlast
    a044:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a048:	mov	x2, x25
    a04c:	add	x3, x3, #0x428
    a050:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a054:	ldr	x0, [sp, #256]
    a058:	cbz	x0, a068 <__lsan_do_recoverable_leak_check@@Base+0x3a0>
    a05c:	bl	2de78 <__sanitizer_set_death_callback@@Base+0x1790>
    a060:	tst	w0, #0xff
    a064:	b.eq	a5f8 <__lsan_do_recoverable_leak_check@@Base+0x930>  // b.none
    a068:	add	x0, x21, #0xcc0
    a06c:	ldrb	w0, [x0, #21]
    a070:	cbnz	w0, a484 <__lsan_do_recoverable_leak_check@@Base+0x7bc>
    a074:	add	x22, x22, #0x1
    a078:	ldr	x1, [x19]
    a07c:	mov	x0, x19
    a080:	ldr	x1, [x1, #16]
    a084:	blr	x1
    a088:	cmp	x0, x22
    a08c:	b.hi	9f00 <__lsan_do_recoverable_leak_check@@Base+0x238>  // b.pmore
    a090:	ldr	x1, [sp, #128]
    a094:	mov	x0, x27
    a098:	add	x27, x21, #0xcc0
    a09c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a0a0:	ldrb	w0, [x27, #16]
    a0a4:	cbz	w0, a5c4 <__lsan_do_recoverable_leak_check@@Base+0x8fc>
    a0a8:	ldr	x0, [x27, #144]
    a0ac:	cbz	x0, a7c8 <__lsan_do_recoverable_leak_check@@Base+0xb00>
    a0b0:	ldr	x1, [x0, #16]
    a0b4:	cbz	x1, a5c4 <__lsan_do_recoverable_leak_check@@Base+0x8fc>
    a0b8:	add	x22, sp, #0x100
    a0bc:	adrp	x28, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a0c0:	add	x1, x28, #0xce8
    a0c4:	str	x27, [sp, #104]
    a0c8:	str	x1, [sp, #120]
    a0cc:	nop
    a0d0:	ldr	x19, [x0]
    a0d4:	mov	w1, #0x1                   	// #1
    a0d8:	mov	x0, x22
    a0dc:	bl	22fe8 <OnPrint@@Base+0x680>
    a0e0:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a0e4:	add	x0, x20, #0xcd8
    a0e8:	add	x19, x19, x26, lsl #4
    a0ec:	str	x0, [sp, #112]
    a0f0:	stp	xzr, xzr, [sp, #312]
    a0f4:	str	xzr, [sp, #360]
    a0f8:	mov	x1, x24
    a0fc:	mov	x0, x22
    a100:	bl	23890 <OnPrint@@Base+0xf28>
    a104:	tst	w0, #0xff
    a108:	b.eq	a190 <__lsan_do_recoverable_leak_check@@Base+0x4c8>  // b.none
    a10c:	ldp	x1, x2, [x19]
    a110:	ldp	x3, x4, [sp, #288]
    a114:	add	x2, x1, x2
    a118:	cmp	x3, x1
    a11c:	csel	x28, x3, x1, cs  // cs = hs, nlast
    a120:	cmp	x4, x2
    a124:	csel	x20, x4, x2, ls  // ls = plast
    a128:	cmp	x28, x20
    a12c:	b.cs	a0f8 <__lsan_do_recoverable_leak_check@@Base+0x430>  // b.hs, b.nlast
    a130:	ldr	x0, [sp, #104]
    a134:	ldr	x6, [sp, #328]
    a138:	ldrb	w0, [x0, #20]
    a13c:	and	w27, w6, #0x1
    a140:	cbz	w0, a15c <__lsan_do_recoverable_leak_check@@Base+0x494>
    a144:	ldp	x0, x5, [sp, #112]
    a148:	cmp	w27, #0x0
    a14c:	csel	x5, x0, x5, ne  // ne = any
    a150:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a154:	add	x0, x0, #0xcf8
    a158:	bl	22d00 <OnPrint@@Base+0x398>
    a15c:	cbz	w27, a0f8 <__lsan_do_recoverable_leak_check@@Base+0x430>
    a160:	mov	x2, x25
    a164:	adrp	x3, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a168:	add	x3, x3, #0xd38
    a16c:	mov	x1, x20
    a170:	mov	x0, x28
    a174:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a178:	mov	x1, x24
    a17c:	mov	x0, x22
    a180:	bl	23890 <OnPrint@@Base+0xf28>
    a184:	tst	w0, #0xff
    a188:	b.ne	a10c <__lsan_do_recoverable_leak_check@@Base+0x444>  // b.any
    a18c:	nop
    a190:	mov	x0, x22
    a194:	bl	23150 <OnPrint@@Base+0x7e8>
    a198:	ldr	x0, [sp, #104]
    a19c:	add	x26, x26, #0x1
    a1a0:	ldr	x0, [x0, #144]
    a1a4:	ldr	x1, [x0, #16]
    a1a8:	cmp	x1, x26
    a1ac:	b.hi	a0d0 <__lsan_do_recoverable_leak_check@@Base+0x408>  // b.pmore
    a1b0:	ldr	x1, [sp, #240]
    a1b4:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a1b8:	add	x20, x20, #0xc78
    a1bc:	cbz	x1, a204 <__lsan_do_recoverable_leak_check@@Base+0x53c>
    a1c0:	ldr	x3, [sp, #224]
    a1c4:	sub	x2, x1, #0x1
    a1c8:	mov	x0, x24
    a1cc:	add	x1, x3, x1, lsl #3
    a1d0:	ldur	x19, [x1, #-8]
    a1d4:	str	x2, [sp, #240]
    a1d8:	mov	x1, x19
    a1dc:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    a1e0:	mov	x0, x24
    a1e4:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    a1e8:	add	x1, x19, x0
    a1ec:	mov	x3, x20
    a1f0:	mov	x2, x25
    a1f4:	mov	x0, x19
    a1f8:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a1fc:	ldr	x1, [sp, #240]
    a200:	cbnz	x1, a1c0 <__lsan_do_recoverable_leak_check@@Base+0x4f8>
    a204:	mov	x0, x22
    a208:	bl	23ee0 <OnPrint@@Base+0x1578>
    a20c:	add	x0, x21, #0xcc0
    a210:	stp	x25, x22, [sp, #288]
    a214:	ldrb	w2, [x0, #15]
    a218:	cbnz	w2, a6ec <__lsan_do_recoverable_leak_check@@Base+0xa24>
    a21c:	mov	x1, x24
    a220:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    a224:	add	x0, x0, #0x178
    a228:	strb	w2, [sp, #304]
    a22c:	bl	c5d0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    a230:	ldp	x0, x1, [sp, #256]
    a234:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a238:	add	x0, x21, #0xcc0
    a23c:	ldrb	w0, [x0, #20]
    a240:	cbnz	w0, a728 <__lsan_do_recoverable_leak_check@@Base+0xa60>
    a244:	mov	x0, x25
    a248:	bl	ade8 <__lsan_do_recoverable_leak_check@@Base+0x1120>
    a24c:	ldr	x1, [sp, #240]
    a250:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a254:	add	x20, x20, #0xc78
    a258:	cbz	x1, a2a4 <__lsan_do_recoverable_leak_check@@Base+0x5dc>
    a25c:	nop
    a260:	ldr	x3, [sp, #224]
    a264:	sub	x2, x1, #0x1
    a268:	mov	x0, x24
    a26c:	add	x1, x3, x1, lsl #3
    a270:	ldur	x19, [x1, #-8]
    a274:	str	x2, [sp, #240]
    a278:	mov	x1, x19
    a27c:	bl	b758 <__sanitizer_print_stack_trace@@Base+0x600>
    a280:	mov	x0, x24
    a284:	bl	b920 <__sanitizer_print_stack_trace@@Base+0x7c8>
    a288:	add	x1, x19, x0
    a28c:	mov	x3, x20
    a290:	mov	x2, x25
    a294:	mov	x0, x19
    a298:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a29c:	ldr	x1, [sp, #240]
    a2a0:	cbnz	x1, a260 <__lsan_do_recoverable_leak_check@@Base+0x598>
    a2a4:	add	x21, x21, #0xcc0
    a2a8:	ldrb	w0, [x21, #20]
    a2ac:	cbnz	w0, a798 <__lsan_do_recoverable_leak_check@@Base+0xad0>
    a2b0:	mov	x1, #0x0                   	// #0
    a2b4:	adrp	x0, 8000 <*ABS*+0x10@plt+0x12a0>
    a2b8:	add	x0, x0, #0x180
    a2bc:	bl	c5d0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    a2c0:	ldp	x0, x1, [sp, #224]
    a2c4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a2c8:	add	x1, x23, #0x8
    a2cc:	adrp	x0, 8000 <*ABS*+0x10@plt+0x12a0>
    a2d0:	add	x0, x0, #0x868
    a2d4:	bl	c5d0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    a2d8:	mov	x1, #0x0                   	// #0
    a2dc:	adrp	x0, 6000 <_Unwind_Backtrace@plt-0x650>
    a2e0:	add	x0, x0, #0xe48
    a2e4:	bl	c5d0 <__sanitizer_get_allocated_size@@Base+0x5c0>
    a2e8:	mov	w0, #0x1                   	// #1
    a2ec:	strb	w0, [x23]
    a2f0:	ldp	x21, x22, [sp, #16]
    a2f4:	ldp	x23, x24, [sp, #32]
    a2f8:	ldp	x25, x26, [sp, #48]
    a2fc:	ldp	x27, x28, [sp, #64]
    a300:	ldr	x30, [sp, #80]
    a304:	ldp	x19, x20, [sp], #368
    a308:	ret
    a30c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a310:	str	x0, [sp, #112]
    a314:	lsl	x24, x21, #3
    a318:	ldr	x20, [x0, #4000]
    a31c:	ldr	x0, [x20]
    a320:	cbz	x0, a3a8 <__lsan_do_recoverable_leak_check@@Base+0x6e0>
    a324:	sub	x1, x0, #0x1
    a328:	tst	x1, x0
    a32c:	b.ne	a4c8 <__lsan_do_recoverable_leak_check@@Base+0x800>  // b.any
    a330:	add	x1, x24, x1
    a334:	neg	x0, x0
    a338:	and	x22, x1, x0
    a33c:	mov	w2, #0x0                   	// #0
    a340:	mov	x0, x22
    a344:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a348:	add	x1, x20, #0x700
    a34c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    a350:	ldr	x1, [sp, #288]
    a354:	mov	x25, x0
    a358:	ldr	x2, [sp, #304]
    a35c:	lsl	x2, x2, #3
    a360:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    a364:	ldp	x0, x1, [sp, #288]
    a368:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a36c:	stp	x25, x22, [sp, #288]
    a370:	ldr	x0, [sp, #304]
    a374:	cmp	x21, x0
    a378:	b.ls	9d74 <__lsan_do_recoverable_leak_check@@Base+0xac>  // b.plast
    a37c:	cmp	x21, x22, lsr #3
    a380:	b.hi	a544 <__lsan_do_recoverable_leak_check@@Base+0x87c>  // b.pmore
    a384:	sub	x2, x21, x0
    a388:	mov	w1, #0x0                   	// #0
    a38c:	add	x0, x25, x0, lsl #3
    a390:	lsl	x2, x2, #3
    a394:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    a398:	b	9d74 <__lsan_do_recoverable_leak_check@@Base+0xac>
    a39c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    a3a0:	str	x0, [x20]
    a3a4:	b	9e30 <__lsan_do_recoverable_leak_check@@Base+0x168>
    a3a8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    a3ac:	str	x0, [x20]
    a3b0:	b	a324 <__lsan_do_recoverable_leak_check@@Base+0x65c>
    a3b4:	ldr	x2, [sp, #184]
    a3b8:	mov	x3, x0
    a3bc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a3c0:	add	x0, x0, #0x388
    a3c4:	bl	22d00 <OnPrint@@Base+0x398>
    a3c8:	ldr	x1, [sp, #176]
    a3cc:	ldr	x0, [sp, #288]
    a3d0:	cmp	x0, x1
    a3d4:	b.cc	a3e4 <__lsan_do_recoverable_leak_check@@Base+0x71c>  // b.lo, b.ul, b.last
    a3d8:	ldr	x1, [sp, #184]
    a3dc:	cmp	x0, x1
    a3e0:	b.cc	9fe0 <__lsan_do_recoverable_leak_check@@Base+0x318>  // b.lo, b.ul, b.last
    a3e4:	add	x0, x21, #0xcc0
    a3e8:	ldrb	w0, [x0, #21]
    a3ec:	cbz	w0, a3fc <__lsan_do_recoverable_leak_check@@Base+0x734>
    a3f0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a3f4:	add	x0, x0, #0x3a8
    a3f8:	bl	22d00 <OnPrint@@Base+0x398>
    a3fc:	ldr	x0, [sp, #112]
    a400:	ldr	x28, [x0, #4000]
    a404:	ldr	x0, [x28]
    a408:	str	x0, [sp, #104]
    a40c:	cbz	x0, a5e8 <__lsan_do_recoverable_leak_check@@Base+0x920>
    a410:	ldp	x0, x1, [sp, #176]
    a414:	mov	w28, #0x0                   	// #0
    a418:	cmp	x1, x0
    a41c:	b.hi	a440 <__lsan_do_recoverable_leak_check@@Base+0x778>  // b.pmore
    a420:	b	a458 <__lsan_do_recoverable_leak_check@@Base+0x790>
    a424:	ldr	x2, [sp, #104]
    a428:	add	w28, w28, #0x1
    a42c:	ldr	x1, [sp, #184]
    a430:	add	x0, x2, x0
    a434:	str	x0, [sp, #176]
    a438:	cmp	x1, x0
    a43c:	b.ls	a458 <__lsan_do_recoverable_leak_check@@Base+0x790>  // b.plast
    a440:	mov	x1, #0x1                   	// #1
    a444:	bl	21760 <__sanitizer_set_report_fd@@Base+0x7e98>
    a448:	tst	w0, #0xff
    a44c:	ldr	x0, [sp, #176]
    a450:	b.eq	a424 <__lsan_do_recoverable_leak_check@@Base+0x75c>  // b.none
    a454:	ldr	x1, [sp, #184]
    a458:	add	x2, x21, #0xcc0
    a45c:	ldrb	w2, [x2, #21]
    a460:	cbz	w2, 9fe4 <__lsan_do_recoverable_leak_check@@Base+0x31c>
    a464:	mov	x3, x1
    a468:	mov	x2, x0
    a46c:	mov	w1, w28
    a470:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a474:	add	x0, x0, #0x3d8
    a478:	bl	22d00 <OnPrint@@Base+0x398>
    a47c:	ldp	x0, x1, [sp, #176]
    a480:	b	9fe4 <__lsan_do_recoverable_leak_check@@Base+0x31c>
    a484:	mov	x1, x20
    a488:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a48c:	add	x22, x22, #0x1
    a490:	add	x0, x0, #0x450
    a494:	bl	22d00 <OnPrint@@Base+0x398>
    a498:	b	a078 <__lsan_do_recoverable_leak_check@@Base+0x3b0>
    a49c:	ldr	x0, [sp, #112]
    a4a0:	ldr	x21, [x0, #4000]
    a4a4:	ldr	x0, [sp, #128]
    a4a8:	lsl	x22, x0, #3
    a4ac:	ldr	x0, [x21]
    a4b0:	cbnz	x0, a4bc <__lsan_do_recoverable_leak_check@@Base+0x7f4>
    a4b4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    a4b8:	str	x0, [x21]
    a4bc:	sub	x1, x0, #0x1
    a4c0:	tst	x1, x0
    a4c4:	b.eq	a68c <__lsan_do_recoverable_leak_check@@Base+0x9c4>  // b.none
    a4c8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a4cc:	add	x0, x0, #0x6e8
    a4d0:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    a4d4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    a4d8:	add	x0, x21, #0xcc0
    a4dc:	ldrb	w0, [x0, #21]
    a4e0:	cbz	w0, a074 <__lsan_do_recoverable_leak_check@@Base+0x3ac>
    a4e4:	mov	x1, x20
    a4e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a4ec:	add	x22, x22, #0x1
    a4f0:	add	x0, x0, #0x320
    a4f4:	bl	22d00 <OnPrint@@Base+0x398>
    a4f8:	b	a078 <__lsan_do_recoverable_leak_check@@Base+0x3b0>
    a4fc:	ldr	x0, [sp, #120]
    a500:	mov	x1, x20
    a504:	bl	22d00 <OnPrint@@Base+0x398>
    a508:	b	9f24 <__lsan_do_recoverable_leak_check@@Base+0x25c>
    a50c:	ldp	x0, x1, [sp, #144]
    a510:	mov	x2, x25
    a514:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a518:	add	x3, x3, #0x378
    a51c:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a520:	b	9fb0 <__lsan_do_recoverable_leak_check@@Base+0x2e8>
    a524:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a528:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a52c:	add	x2, x2, #0x2d0
    a530:	add	x0, x0, #0x608
    a534:	mov	x4, #0x0                   	// #0
    a538:	mov	x3, #0x0                   	// #0
    a53c:	mov	w1, #0x22b                 	// #555
    a540:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a544:	ldr	x0, [sp, #112]
    a548:	ldr	x22, [x0, #4000]
    a54c:	ldr	x0, [x22]
    a550:	cbz	x0, a71c <__lsan_do_recoverable_leak_check@@Base+0xa54>
    a554:	sub	x1, x0, #0x1
    a558:	tst	x1, x0
    a55c:	b.ne	a4c8 <__lsan_do_recoverable_leak_check@@Base+0x800>  // b.any
    a560:	add	x24, x24, x1
    a564:	neg	x0, x0
    a568:	and	x24, x24, x0
    a56c:	add	x1, x20, #0x700
    a570:	mov	w2, #0x0                   	// #0
    a574:	mov	x0, x24
    a578:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    a57c:	mov	x25, x0
    a580:	ldr	x1, [sp, #288]
    a584:	ldr	x2, [sp, #304]
    a588:	lsl	x2, x2, #3
    a58c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    a590:	ldp	x0, x1, [sp, #288]
    a594:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a598:	stp	x25, x24, [sp, #288]
    a59c:	ldr	x0, [sp, #304]
    a5a0:	b	a384 <__lsan_do_recoverable_leak_check@@Base+0x6bc>
    a5a4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a5a8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a5ac:	add	x2, x2, #0x2e8
    a5b0:	add	x0, x0, #0x608
    a5b4:	mov	x4, #0x0                   	// #0
    a5b8:	mov	x3, #0x0                   	// #0
    a5bc:	mov	w1, #0x22c                 	// #556
    a5c0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a5c4:	add	x22, sp, #0x100
    a5c8:	b	a1b0 <__lsan_do_recoverable_leak_check@@Base+0x4e8>
    a5cc:	mov	x2, x1
    a5d0:	mov	x1, x0
    a5d4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a5d8:	add	x0, x0, #0x418
    a5dc:	bl	22d00 <OnPrint@@Base+0x398>
    a5e0:	ldp	x0, x1, [sp, #192]
    a5e4:	b	a028 <__lsan_do_recoverable_leak_check@@Base+0x360>
    a5e8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    a5ec:	str	x0, [x28]
    a5f0:	str	x0, [sp, #104]
    a5f4:	b	a410 <__lsan_do_recoverable_leak_check@@Base+0x748>
    a5f8:	ldr	x5, [sp, #256]
    a5fc:	ldr	x6, [x5]
    a600:	cbz	x6, a074 <__lsan_do_recoverable_leak_check@@Base+0x3ac>
    a604:	adrp	x28, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a608:	add	x20, x21, #0xcc0
    a60c:	add	x0, x28, #0x430
    a610:	mov	x28, #0x0                   	// #0
    a614:	str	x0, [sp, #168]
    a618:	b	a644 <__lsan_do_recoverable_leak_check@@Base+0x97c>
    a61c:	mov	x1, x3
    a620:	mov	x0, x2
    a624:	ldr	x3, [sp, #136]
    a628:	mov	x2, x25
    a62c:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a630:	ldr	x5, [sp, #256]
    a634:	ldr	x6, [x5]
    a638:	add	x28, x28, #0x1
    a63c:	cmp	x28, x6
    a640:	b.cs	a074 <__lsan_do_recoverable_leak_check@@Base+0x3ac>  // b.hs, b.nlast
    a644:	ldr	x1, [x5, #8]
    a648:	lsl	x0, x28, #4
    a64c:	add	x3, x1, x0
    a650:	ldr	x2, [x1, x0]
    a654:	ldr	x3, [x3, #8]
    a658:	add	x3, x2, x3
    a65c:	cmp	x2, x3
    a660:	b.cs	a638 <__lsan_do_recoverable_leak_check@@Base+0x970>  // b.hs, b.nlast
    a664:	ldrb	w0, [x20, #21]
    a668:	cbz	w0, a61c <__lsan_do_recoverable_leak_check@@Base+0x954>
    a66c:	ldr	x0, [sp, #168]
    a670:	mov	x1, x28
    a674:	str	x2, [sp, #104]
    a678:	str	x3, [sp, #160]
    a67c:	bl	22d00 <OnPrint@@Base+0x398>
    a680:	ldr	x2, [sp, #104]
    a684:	ldr	x3, [sp, #160]
    a688:	b	a61c <__lsan_do_recoverable_leak_check@@Base+0x954>
    a68c:	add	x1, x22, x1
    a690:	neg	x0, x0
    a694:	and	x21, x1, x0
    a698:	mov	w2, #0x0                   	// #0
    a69c:	add	x1, x20, #0x700
    a6a0:	mov	x0, x21
    a6a4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    a6a8:	mov	x27, x0
    a6ac:	mov	x2, #0x0                   	// #0
    a6b0:	mov	x1, #0x0                   	// #0
    a6b4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    a6b8:	mov	x0, #0x0                   	// #0
    a6bc:	mov	x1, #0x0                   	// #0
    a6c0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a6c4:	ldr	x0, [sp, #128]
    a6c8:	cmp	x0, x21, lsr #3
    a6cc:	b.hi	a738 <__lsan_do_recoverable_leak_check@@Base+0xa70>  // b.pmore
    a6d0:	mov	x2, x22
    a6d4:	mov	x0, x27
    a6d8:	mov	w1, #0x0                   	// #0
    a6dc:	str	x21, [sp, #128]
    a6e0:	str	x27, [sp, #144]
    a6e4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    a6e8:	b	9ebc <__lsan_do_recoverable_leak_check@@Base+0x1f4>
    a6ec:	ldrb	w2, [x0, #17]
    a6f0:	cbz	w2, a21c <__lsan_do_recoverable_leak_check@@Base+0x554>
    a6f4:	bl	add8 <__lsan_do_recoverable_leak_check@@Base+0x1110>
    a6f8:	cmp	x0, #0x0
    a6fc:	cset	w2, ne  // ne = any
    a700:	b	a21c <__lsan_do_recoverable_leak_check@@Base+0x554>
    a704:	cmp	x2, x0
    a708:	b.hi	a7a8 <__lsan_do_recoverable_leak_check@@Base+0xae0>  // b.pmore
    a70c:	cmp	x1, x3
    a710:	b.ls	a054 <__lsan_do_recoverable_leak_check@@Base+0x38c>  // b.plast
    a714:	mov	x0, x3
    a718:	b	a044 <__lsan_do_recoverable_leak_check@@Base+0x37c>
    a71c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    a720:	str	x0, [x22]
    a724:	b	a554 <__lsan_do_recoverable_leak_check@@Base+0x88c>
    a728:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a72c:	add	x0, x0, #0x478
    a730:	bl	22d00 <OnPrint@@Base+0x398>
    a734:	b	a244 <__lsan_do_recoverable_leak_check@@Base+0x57c>
    a738:	ldr	x0, [sp, #112]
    a73c:	ldr	x28, [x0, #4000]
    a740:	ldr	x0, [x28]
    a744:	cbz	x0, a7e8 <__lsan_do_recoverable_leak_check@@Base+0xb20>
    a748:	sub	x1, x0, #0x1
    a74c:	tst	x1, x0
    a750:	b.ne	a4c8 <__lsan_do_recoverable_leak_check@@Base+0x800>  // b.any
    a754:	add	x1, x22, x1
    a758:	neg	x0, x0
    a75c:	and	x28, x1, x0
    a760:	mov	w2, #0x0                   	// #0
    a764:	add	x1, x20, #0x700
    a768:	mov	x0, x28
    a76c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    a770:	mov	x20, x0
    a774:	mov	x2, #0x0                   	// #0
    a778:	mov	x1, x27
    a77c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    a780:	mov	x1, x21
    a784:	mov	x0, x27
    a788:	mov	x21, x28
    a78c:	mov	x27, x20
    a790:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    a794:	b	a6d0 <__lsan_do_recoverable_leak_check@@Base+0xa08>
    a798:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a79c:	add	x0, x0, #0x4a8
    a7a0:	bl	22d00 <OnPrint@@Base+0x398>
    a7a4:	b	a2b0 <__lsan_do_recoverable_leak_check@@Base+0x5e8>
    a7a8:	mov	x1, x2
    a7ac:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a7b0:	mov	x2, x25
    a7b4:	add	x3, x3, #0x428
    a7b8:	bl	73d0 <*ABS*+0x10@plt+0x670>
    a7bc:	ldr	x1, [sp, #200]
    a7c0:	ldr	x3, [sp, #216]
    a7c4:	b	a70c <__lsan_do_recoverable_leak_check@@Base+0xa44>
    a7c8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    a7cc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a7d0:	add	x2, x2, #0x1e8
    a7d4:	add	x0, x0, #0x608
    a7d8:	mov	x4, #0x0                   	// #0
    a7dc:	mov	x3, #0x0                   	// #0
    a7e0:	mov	w1, #0x151                 	// #337
    a7e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a7e8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    a7ec:	str	x0, [x28]
    a7f0:	b	a748 <__lsan_do_recoverable_leak_check@@Base+0xa80>
    a7f4:	nop
    a7f8:	mov	x2, x0
    a7fc:	mov	w0, #0x1                   	// #1
    a800:	ldr	x2, [x2, #8]
    a804:	str	x1, [x2]
    a808:	ret
    a80c:	nop
    a810:	stp	x19, x20, [sp, #-48]!
    a814:	mov	x20, x0
    a818:	mov	w2, #0xa                   	// #10
    a81c:	mov	x0, x1
    a820:	mov	x19, x1
    a824:	add	x1, sp, #0x28
    a828:	str	x30, [sp, #16]
    a82c:	bl	1ce08 <__sanitizer_set_report_fd@@Base+0x3540>
    a830:	ldr	x2, [x20, #8]
    a834:	ldr	x1, [sp, #40]
    a838:	str	w0, [x2]
    a83c:	ldrb	w0, [x1]
    a840:	cmp	w0, #0x0
    a844:	cset	w20, eq  // eq = none
    a848:	cbnz	w0, a85c <__lsan_do_recoverable_leak_check@@Base+0xb94>
    a84c:	mov	w0, w20
    a850:	ldr	x30, [sp, #16]
    a854:	ldp	x19, x20, [sp], #48
    a858:	ret
    a85c:	mov	x1, x19
    a860:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a864:	add	x0, x0, #0x4d0
    a868:	bl	22c78 <OnPrint@@Base+0x310>
    a86c:	mov	w0, w20
    a870:	ldr	x30, [sp, #16]
    a874:	ldp	x19, x20, [sp], #48
    a878:	ret
    a87c:	nop
    a880:	mov	x2, x0
    a884:	stp	x19, x20, [sp, #-32]!
    a888:	mov	x19, x1
    a88c:	mov	x0, x19
    a890:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a894:	add	x1, x1, #0x500
    a898:	ldr	x20, [x2, #8]
    a89c:	str	x30, [sp, #16]
    a8a0:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
    a8a4:	cbnz	w0, a8bc <__lsan_do_recoverable_leak_check@@Base+0xbf4>
    a8a8:	mov	w0, #0x1                   	// #1
    a8ac:	strb	wzr, [x20]
    a8b0:	ldr	x30, [sp, #16]
    a8b4:	ldp	x19, x20, [sp], #32
    a8b8:	ret
    a8bc:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a8c0:	mov	x0, x19
    a8c4:	add	x1, x1, #0x508
    a8c8:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
    a8cc:	cbz	w0, a8a8 <__lsan_do_recoverable_leak_check@@Base+0xbe0>
    a8d0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a8d4:	mov	x0, x19
    a8d8:	add	x1, x1, #0x510
    a8dc:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
    a8e0:	cbz	w0, a8a8 <__lsan_do_recoverable_leak_check@@Base+0xbe0>
    a8e4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a8e8:	mov	x0, x19
    a8ec:	add	x1, x1, #0x518
    a8f0:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
    a8f4:	cbz	w0, a90c <__lsan_do_recoverable_leak_check@@Base+0xc44>
    a8f8:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a8fc:	mov	x0, x19
    a900:	add	x1, x1, #0x520
    a904:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
    a908:	cbnz	w0, a91c <__lsan_do_recoverable_leak_check@@Base+0xc54>
    a90c:	mov	w1, #0x1                   	// #1
    a910:	mov	w0, #0x1                   	// #1
    a914:	strb	w1, [x20]
    a918:	b	a8b0 <__lsan_do_recoverable_leak_check@@Base+0xbe8>
    a91c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a920:	mov	x0, x19
    a924:	add	x1, x1, #0x528
    a928:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
    a92c:	cbz	w0, a90c <__lsan_do_recoverable_leak_check@@Base+0xc44>
    a930:	mov	x1, x19
    a934:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    a938:	add	x0, x0, #0x530
    a93c:	bl	22c78 <OnPrint@@Base+0x310>
    a940:	mov	w0, #0x0                   	// #0
    a944:	ldr	x30, [sp, #16]
    a948:	ldp	x19, x20, [sp], #32
    a94c:	ret
    a950:	cmp	x1, #0x1
    a954:	mov	x4, #0x1                   	// #1
    a958:	b.ls	aa4c <__lsan_do_recoverable_leak_check@@Base+0xd84>  // b.plast
    a95c:	nop
    a960:	ldr	x5, [x0, x4, lsl #3]
    a964:	mov	x2, x4
    a968:	sub	x3, x2, #0x1
    a96c:	mov	x6, x2
    a970:	lsr	x2, x3, #1
    a974:	ldr	x3, [x0, x2, lsl #3]
    a978:	cmp	x3, x5
    a97c:	b.cs	a98c <__lsan_do_recoverable_leak_check@@Base+0xcc4>  // b.hs, b.nlast
    a980:	str	x3, [x0, x6, lsl #3]
    a984:	str	x5, [x0, x2, lsl #3]
    a988:	cbnz	x2, a968 <__lsan_do_recoverable_leak_check@@Base+0xca0>
    a98c:	add	x2, x4, #0x1
    a990:	cmp	x1, x2
    a994:	b.eq	a9e4 <__lsan_do_recoverable_leak_check@@Base+0xd1c>  // b.none
    a998:	mov	x4, x2
    a99c:	b	a960 <__lsan_do_recoverable_leak_check@@Base+0xc98>
    a9a0:	cmp	x1, x4
    a9a4:	b.cs	a9dc <__lsan_do_recoverable_leak_check@@Base+0xd14>  // b.hs, b.nlast
    a9a8:	lsl	x5, x5, #4
    a9ac:	add	x7, x0, x5
    a9b0:	ldr	x3, [x0, x2, lsl #3]
    a9b4:	ldr	x5, [x0, x5]
    a9b8:	cmp	x5, x3
    a9bc:	b.ls	a9dc <__lsan_do_recoverable_leak_check@@Base+0xd14>  // b.plast
    a9c0:	cmp	x1, x2
    a9c4:	b.eq	a9dc <__lsan_do_recoverable_leak_check@@Base+0xd14>  // b.none
    a9c8:	ldr	x3, [x0, x2, lsl #3]
    a9cc:	str	x5, [x0, x2, lsl #3]
    a9d0:	str	x3, [x7]
    a9d4:	cmp	x1, x4
    a9d8:	b.cc	aa44 <__lsan_do_recoverable_leak_check@@Base+0xd7c>  // b.lo, b.ul, b.last
    a9dc:	subs	x4, x4, #0x1
    a9e0:	b.eq	aa4c <__lsan_do_recoverable_leak_check@@Base+0xd84>  // b.none
    a9e4:	ldr	x3, [x0, x4, lsl #3]
    a9e8:	mov	x2, #0x0                   	// #0
    a9ec:	ldr	x1, [x0]
    a9f0:	str	x3, [x0]
    a9f4:	str	x1, [x0, x4, lsl #3]
    a9f8:	lsl	x1, x2, #1
    a9fc:	add	x5, x2, #0x1
    aa00:	add	x3, x1, #0x1
    aa04:	add	x1, x1, #0x2
    aa08:	cmp	x3, x4
    aa0c:	b.cs	a9a0 <__lsan_do_recoverable_leak_check@@Base+0xcd8>  // b.hs, b.nlast
    aa10:	ldr	x6, [x0, x3, lsl #3]
    aa14:	add	x8, x0, x3, lsl #3
    aa18:	ldr	x7, [x0, x2, lsl #3]
    aa1c:	cmp	x7, x6
    aa20:	b.cs	a9a0 <__lsan_do_recoverable_leak_check@@Base+0xcd8>  // b.hs, b.nlast
    aa24:	cmp	x1, x4
    aa28:	b.cc	aa50 <__lsan_do_recoverable_leak_check@@Base+0xd88>  // b.lo, b.ul, b.last
    aa2c:	cmp	x3, x2
    aa30:	b.eq	a9dc <__lsan_do_recoverable_leak_check@@Base+0xd14>  // b.none
    aa34:	mov	x1, x3
    aa38:	ldr	x5, [x0, x2, lsl #3]
    aa3c:	str	x6, [x0, x2, lsl #3]
    aa40:	str	x5, [x0, x3, lsl #3]
    aa44:	mov	x2, x1
    aa48:	b	a9f8 <__lsan_do_recoverable_leak_check@@Base+0xd30>
    aa4c:	ret
    aa50:	lsl	x9, x5, #4
    aa54:	add	x7, x0, x5, lsl #4
    aa58:	ldr	x5, [x0, x9]
    aa5c:	cmp	x6, x5
    aa60:	b.cc	a9c0 <__lsan_do_recoverable_leak_check@@Base+0xcf8>  // b.lo, b.ul, b.last
    aa64:	mov	x5, x6
    aa68:	mov	x7, x8
    aa6c:	mov	x1, x3
    aa70:	b	a9c0 <__lsan_do_recoverable_leak_check@@Base+0xcf8>
    aa74:	nop
    aa78:	stp	x19, x20, [sp, #-64]!
    aa7c:	stp	x21, x22, [sp, #16]
    aa80:	mov	x21, x0
    aa84:	ldrh	w0, [x0, #24]
    aa88:	str	x30, [sp, #48]
    aa8c:	cbz	w0, ab00 <__lsan_do_recoverable_leak_check@@Base+0xe38>
    aa90:	mov	x22, #0x1                   	// #1
    aa94:	stp	x23, x24, [sp, #32]
    aa98:	mov	x23, #0xffffffff            	// #4294967295
    aa9c:	mov	x24, x2
    aaa0:	mov	x19, #0x0                   	// #0
    aaa4:	mov	x20, #0x0                   	// #0
    aaa8:	movk	x23, #0x2, lsl #32
    aaac:	movk	x22, #0x2, lsl #32
    aab0:	ldr	x1, [x21, #16]
    aab4:	add	x20, x20, #0x1
    aab8:	add	x3, x1, x19
    aabc:	ldr	x1, [x1, x19]
    aac0:	add	x19, x19, #0x38
    aac4:	and	x1, x1, x23
    aac8:	cmp	x1, x22
    aacc:	b.ne	aaf4 <__lsan_do_recoverable_leak_check@@Base+0xe2c>  // b.any
    aad0:	ldr	x1, [x3, #40]
    aad4:	mov	x2, x24
    aad8:	cbz	x1, aaf4 <__lsan_do_recoverable_leak_check@@Base+0xe2c>
    aadc:	ldr	x0, [x21]
    aae0:	ldr	x3, [x3, #16]
    aae4:	add	x0, x0, x3
    aae8:	add	x1, x1, x0
    aaec:	bl	8200 <*ABS*+0x10@plt+0x14a0>
    aaf0:	ldrh	w0, [x21, #24]
    aaf4:	cmp	x20, w0, uxth
    aaf8:	b.cc	aab0 <__lsan_do_recoverable_leak_check@@Base+0xde8>  // b.lo, b.ul, b.last
    aafc:	ldp	x23, x24, [sp, #32]
    ab00:	mov	w0, #0x0                   	// #0
    ab04:	ldp	x21, x22, [sp, #16]
    ab08:	ldr	x30, [sp, #48]
    ab0c:	ldp	x19, x20, [sp], #64
    ab10:	ret
    ab14:	nop
    ab18:	ldp	x0, x1, [x2]
    ab1c:	str	x30, [sp, #-16]!
    ab20:	bl	27cc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27b8>
    ab24:	mov	w0, #0x1                   	// #1
    ab28:	ldr	x30, [sp], #16
    ab2c:	ret
    ab30:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ab34:	ldr	x0, [x0, #3400]
    ab38:	mrs	x1, tpidr_el0
    ab3c:	ldr	w0, [x1, x0]
    ab40:	cmp	w0, #0x0
    ab44:	cset	w0, gt
    ab48:	ret
    ab4c:	nop
    ab50:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ab54:	ldr	x1, [x1, #3400]
    ab58:	mrs	x2, tpidr_el0
    ab5c:	ldr	w0, [x2, x1]
    ab60:	add	w0, w0, #0x1
    ab64:	str	w0, [x2, x1]
    ab68:	ret
    ab6c:	nop
    ab70:	stp	x19, x20, [sp, #-32]!
    ab74:	mrs	x20, tpidr_el0
    ab78:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ab7c:	ldr	x19, [x19, #3400]
    ab80:	ldr	w0, [x20, x19]
    ab84:	str	x30, [sp, #16]
    ab88:	cbz	w0, aba0 <__lsan_do_recoverable_leak_check@@Base+0xed8>
    ab8c:	sub	w0, w0, #0x1
    ab90:	str	w0, [x20, x19]
    ab94:	ldr	x30, [sp, #16]
    ab98:	ldp	x19, x20, [sp], #32
    ab9c:	ret
    aba0:	bl	7770 <*ABS*+0x10@plt+0xa10>
    aba4:	ldr	w0, [x20, x19]
    aba8:	ldr	x30, [sp, #16]
    abac:	sub	w0, w0, #0x1
    abb0:	str	w0, [x20, x19]
    abb4:	ldp	x19, x20, [sp], #32
    abb8:	ret
    abbc:	nop
    abc0:	stp	x19, x20, [sp, #-192]!
    abc4:	add	x0, sp, #0x50
    abc8:	stp	x23, x24, [sp, #32]
    abcc:	str	x30, [sp, #64]
    abd0:	strb	wzr, [sp, #104]
    abd4:	bl	1fb50 <__sanitizer_set_report_fd@@Base+0x6288>
    abd8:	ldr	x23, [sp, #96]
    abdc:	ldr	x19, [sp, #80]
    abe0:	add	x23, x23, x23, lsl #3
    abe4:	add	x23, x19, x23, lsl #3
    abe8:	cmp	x23, x19
    abec:	b.eq	ad04 <__lsan_do_recoverable_leak_check@@Base+0x103c>  // b.none
    abf0:	stp	x21, x22, [sp, #16]
    abf4:	add	x21, sp, #0x70
    abf8:	stp	x25, x26, [sp, #48]
    abfc:	adrp	x26, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ac00:	add	x24, x26, #0xe00
    ac04:	add	x20, x24, #0x40
    ac08:	add	x25, x21, #0x1c
    ac0c:	nop
    ac10:	ldr	x22, [x19, #8]
    ac14:	mov	x0, #0x7                   	// #7
    ac18:	bl	6bb0 <getauxval@plt>
    ac1c:	mov	x3, x0
    ac20:	cmp	x22, x3
    ac24:	mov	x0, x25
    ac28:	mov	x2, #0x10                  	// #16
    ac2c:	mov	w1, #0x0                   	// #0
    ac30:	b.ne	acac <__lsan_do_recoverable_leak_check@@Base+0xfe4>  // b.any
    ac34:	ldr	x3, [x24]
    ac38:	cbnz	x3, ad30 <__lsan_do_recoverable_leak_check@@Base+0x1068>
    ac3c:	ldp	x4, x5, [x19]
    ac40:	stp	x4, x5, [x20]
    ac44:	ldp	x4, x5, [x19, #16]
    ac48:	stp	x4, x5, [x20, #16]
    ac4c:	ldp	x4, x5, [x19, #32]
    ac50:	stp	x4, x5, [x20, #32]
    ac54:	ldp	x4, x5, [x19, #48]
    ac58:	stp	x4, x5, [x20, #48]
    ac5c:	ldr	x3, [x19, #64]
    ac60:	str	x3, [x20, #64]
    ac64:	str	x20, [x24]
    ac68:	str	xzr, [sp, #112]
    ac6c:	stp	xzr, xzr, [sp, #120]
    ac70:	str	wzr, [sp, #136]
    ac74:	strb	wzr, [sp, #156]
    ac78:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    ac7c:	str	xzr, [sp, #160]
    ac80:	stp	xzr, xzr, [sp, #168]
    ac84:	ldp	x0, x1, [x21]
    ac88:	stp	x0, x1, [x19]
    ac8c:	ldp	x0, x1, [x21, #16]
    ac90:	stp	x0, x1, [x19, #16]
    ac94:	ldp	x0, x1, [x21, #32]
    ac98:	stp	x0, x1, [x19, #32]
    ac9c:	ldp	x0, x1, [x21, #48]
    aca0:	stp	x0, x1, [x19, #48]
    aca4:	ldr	x0, [x21, #64]
    aca8:	str	x0, [x19, #64]
    acac:	add	x19, x19, #0x48
    acb0:	cmp	x23, x19
    acb4:	b.ne	ac10 <__lsan_do_recoverable_leak_check@@Base+0xf48>  // b.any
    acb8:	ldr	x0, [x26, #3584]
    acbc:	ldp	x21, x22, [sp, #16]
    acc0:	ldp	x25, x26, [sp, #48]
    acc4:	cbz	x0, ad10 <__lsan_do_recoverable_leak_check@@Base+0x1048>
    acc8:	ldr	x20, [sp, #96]
    accc:	ldr	x19, [sp, #80]
    acd0:	add	x20, x20, x20, lsl #3
    acd4:	add	x20, x19, x20, lsl #3
    acd8:	cmp	x19, x20
    acdc:	b.eq	acf4 <__lsan_do_recoverable_leak_check@@Base+0x102c>  // b.none
    ace0:	mov	x0, x19
    ace4:	add	x19, x19, #0x48
    ace8:	bl	15918 <__sancov_default_options@@Base+0x2e48>
    acec:	cmp	x20, x19
    acf0:	b.ne	ace0 <__lsan_do_recoverable_leak_check@@Base+0x1018>  // b.any
    acf4:	ldp	x23, x24, [sp, #32]
    acf8:	ldr	x30, [sp, #64]
    acfc:	ldp	x19, x20, [sp], #192
    ad00:	ret
    ad04:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ad08:	ldr	x0, [x0, #3584]
    ad0c:	cbnz	x0, acf4 <__lsan_do_recoverable_leak_check@@Base+0x102c>
    ad10:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ad14:	ldr	x0, [x0, #3680]
    ad18:	ldr	w0, [x0]
    ad1c:	cbz	w0, acc8 <__lsan_do_recoverable_leak_check@@Base+0x1000>
    ad20:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ad24:	add	x0, x0, #0x588
    ad28:	bl	22d00 <OnPrint@@Base+0x398>
    ad2c:	b	acc8 <__lsan_do_recoverable_leak_check@@Base+0x1000>
    ad30:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ad34:	ldr	x0, [x0, #3680]
    ad38:	ldr	w0, [x0]
    ad3c:	cbnz	w0, ad94 <__lsan_do_recoverable_leak_check@@Base+0x10cc>
    ad40:	mov	x0, x3
    ad44:	bl	15918 <__sancov_default_options@@Base+0x2e48>
    ad48:	ldr	x20, [sp, #96]
    ad4c:	str	xzr, [x26, #3584]
    ad50:	ldr	x0, [sp, #80]
    ad54:	add	x20, x20, x20, lsl #3
    ad58:	mov	x19, x0
    ad5c:	add	x20, x0, x20, lsl #3
    ad60:	cmp	x0, x20
    ad64:	b.eq	ad7c <__lsan_do_recoverable_leak_check@@Base+0x10b4>  // b.none
    ad68:	mov	x0, x19
    ad6c:	add	x19, x19, #0x48
    ad70:	bl	15918 <__sancov_default_options@@Base+0x2e48>
    ad74:	cmp	x20, x19
    ad78:	b.ne	ad68 <__lsan_do_recoverable_leak_check@@Base+0x10a0>  // b.any
    ad7c:	ldp	x21, x22, [sp, #16]
    ad80:	ldp	x23, x24, [sp, #32]
    ad84:	ldp	x25, x26, [sp, #48]
    ad88:	ldr	x30, [sp, #64]
    ad8c:	ldp	x19, x20, [sp], #192
    ad90:	ret
    ad94:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ad98:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ad9c:	add	x1, x1, #0x608
    ada0:	add	x0, x0, #0x500
    ada4:	bl	22d00 <OnPrint@@Base+0x398>
    ada8:	ldr	x3, [x24]
    adac:	b	ad40 <__lsan_do_recoverable_leak_check@@Base+0x1078>
    adb0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    adb4:	ldr	x2, [x2, #3928]
    adb8:	ldrb	w1, [x2, #12]
    adbc:	cbnz	w1, adc4 <__lsan_do_recoverable_leak_check@@Base+0x10fc>
    adc0:	ret
    adc4:	mov	x1, x0
    adc8:	adrp	x0, a000 <__lsan_do_recoverable_leak_check@@Base+0x338>
    adcc:	add	x0, x0, #0xa78
    add0:	b	6950 <dl_iterate_phdr@plt>
    add4:	nop
    add8:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    addc:	ldr	x0, [x0, #3584]
    ade0:	ret
    ade4:	nop
    ade8:	ret
    adec:	nop
    adf0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    adf4:	ldr	x0, [x0, #4040]
    adf8:	ldr	w0, [x0, #216]
    adfc:	cbnz	w0, ae04 <__lsan_do_recoverable_leak_check@@Base+0x113c>
    ae00:	ret
    ae04:	str	x30, [sp, #-16]!
    ae08:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    ae0c:	nop
    ae10:	mov	x3, x0
    ae14:	mov	x2, x1
    ae18:	str	x30, [sp, #-32]!
    ae1c:	adrp	x0, a000 <__lsan_do_recoverable_leak_check@@Base+0x338>
    ae20:	add	x0, x0, #0xb18
    ae24:	add	x1, sp, #0x10
    ae28:	stp	x3, x2, [sp, #16]
    ae2c:	bl	6950 <dl_iterate_phdr@plt>
    ae30:	ldr	x30, [sp], #32
    ae34:	ret
    ae38:	stp	x19, x20, [sp, #-32]!
    ae3c:	mov	x19, x1
    ae40:	mov	x20, x2
    ae44:	str	x30, [sp, #16]
    ae48:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
    ae4c:	mov	x1, x20
    ae50:	mov	w2, w0
    ae54:	mov	x0, x19
    ae58:	adrp	x3, a000 <__lsan_do_recoverable_leak_check@@Base+0x338>
    ae5c:	ldr	x30, [sp, #16]
    ae60:	add	x3, x3, #0xe70
    ae64:	ldp	x19, x20, [sp], #32
    ae68:	mov	x4, #0x0                   	// #0
    ae6c:	b	26710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1200>
    ae70:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ae74:	stp	x19, x20, [sp, #-48]!
    ae78:	mov	x19, x2
    ae7c:	ldr	x1, [x1, #4040]
    ae80:	stp	x21, x22, [sp, #16]
    ae84:	stp	x23, x30, [sp, #32]
    ae88:	ldrb	w20, [x1, #33]
    ae8c:	ldr	x23, [x0, #8]
    ae90:	ldr	x21, [x0, #24]
    ae94:	ldr	x22, [x0, #40]
    ae98:	cbnz	w20, aecc <__lsan_do_recoverable_leak_check@@Base+0x1204>
    ae9c:	mov	x6, #0x0                   	// #0
    aea0:	mov	x5, #0x0                   	// #0
    aea4:	mov	w7, w20
    aea8:	mov	x4, x23
    aeac:	mov	x3, x22
    aeb0:	mov	x2, x21
    aeb4:	mov	x0, x19
    aeb8:	mov	w1, #0x100                 	// #256
    aebc:	ldp	x21, x22, [sp, #16]
    aec0:	ldp	x23, x30, [sp, #32]
    aec4:	ldp	x19, x20, [sp], #48
    aec8:	b	24fe8 <OnPrint@@Base+0x2680>
    aecc:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
    aed0:	cbz	x0, ae9c <__lsan_do_recoverable_leak_check@@Base+0x11d4>
    aed4:	ldp	x6, x5, [x0, #144]
    aed8:	b	aea4 <__lsan_do_recoverable_leak_check@@Base+0x11dc>
    aedc:	nop
    aee0:	stp	x19, x20, [sp, #-288]!
    aee4:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aee8:	stp	x21, x22, [sp, #16]
    aeec:	add	x19, sp, #0x30
    aef0:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aef4:	ldr	x21, [x20, #4040]
    aef8:	str	x30, [sp, #32]
    aefc:	mov	x0, x21
    af00:	bl	198e8 <__sanitizer_set_report_fd@@Base+0x20>
    af04:	mov	x1, x21
    af08:	mov	x0, x19
    af0c:	bl	199e8 <__sanitizer_set_report_fd@@Base+0x120>
    af10:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    af14:	add	x0, x0, #0x610
    af18:	bl	1dcb8 <__sanitizer_set_report_fd@@Base+0x43f0>
    af1c:	mov	x5, x0
    af20:	mov	w2, #0x1                   	// #1
    af24:	mov	w4, #0x1e                  	// #30
    af28:	mov	w3, #0x17                  	// #23
    af2c:	mov	x1, x19
    af30:	mov	x0, x21
    af34:	str	x5, [sp, #56]
    af38:	str	w4, [sp, #84]
    af3c:	strb	w2, [sp, #105]
    af40:	strb	w2, [sp, #169]
    af44:	str	w3, [sp, #264]
    af48:	bl	199e8 <__sanitizer_set_report_fd@@Base+0x120>
    af4c:	ldr	x22, [x22, #3928]
    af50:	mov	x0, x22
    af54:	bl	7798 <*ABS*+0x10@plt+0xa38>
    af58:	mov	x0, x19
    af5c:	bl	1b4e0 <__sanitizer_set_report_fd@@Base+0x1c18>
    af60:	mov	x1, x22
    af64:	mov	x0, x19
    af68:	bl	77c0 <*ABS*+0x10@plt+0xa60>
    af6c:	mov	x1, x21
    af70:	mov	x0, x19
    af74:	bl	19be8 <__sanitizer_set_report_fd@@Base+0x320>
    af78:	bl	7c20 <*ABS*+0x10@plt+0xec0>
    af7c:	mov	x1, x0
    af80:	mov	x0, x19
    af84:	bl	1b290 <__sanitizer_set_report_fd@@Base+0x19c8>
    af88:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    af8c:	add	x0, x0, #0x628
    af90:	bl	1dcb8 <__sanitizer_set_report_fd@@Base+0x43f0>
    af94:	mov	x1, x0
    af98:	mov	x0, x19
    af9c:	bl	1b290 <__sanitizer_set_report_fd@@Base+0x19c8>
    afa0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    afa4:	ldr	w1, [x21, #52]
    afa8:	ldr	x0, [x0, #3680]
    afac:	str	w1, [x0]
    afb0:	ldr	w0, [x0]
    afb4:	cbnz	w0, afe0 <__lsan_do_recoverable_leak_check@@Base+0x1318>
    afb8:	ldr	x0, [x20, #4040]
    afbc:	ldrb	w0, [x0, #122]
    afc0:	cbnz	w0, aff0 <__lsan_do_recoverable_leak_check@@Base+0x1328>
    afc4:	ldr	x20, [x20, #4040]
    afc8:	ldr	x0, [x20, #40]
    afcc:	bl	6cf0 <__sanitizer_set_report_path@plt>
    afd0:	ldp	x21, x22, [sp, #16]
    afd4:	ldr	x30, [sp, #32]
    afd8:	ldp	x19, x20, [sp], #288
    afdc:	ret
    afe0:	bl	1acf8 <__sanitizer_set_report_fd@@Base+0x1430>
    afe4:	ldr	x0, [x20, #4040]
    afe8:	ldrb	w0, [x0, #122]
    afec:	cbz	w0, afc4 <__lsan_do_recoverable_leak_check@@Base+0x12fc>
    aff0:	mov	x0, x19
    aff4:	bl	1add8 <__sanitizer_set_report_fd@@Base+0x1510>
    aff8:	ldr	x20, [x20, #4040]
    affc:	ldr	x0, [x20, #40]
    b000:	bl	6cf0 <__sanitizer_set_report_path@plt>
    b004:	ldp	x21, x22, [sp, #16]
    b008:	ldr	x30, [sp, #32]
    b00c:	ldp	x19, x20, [sp], #288
    b010:	ret
    b014:	nop
    b018:	mov	w0, #0x0                   	// #0
    b01c:	ret

000000000000b020 <__lsan_init@@Base>:
    b020:	stp	x19, x20, [sp, #-32]!
    b024:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b028:	ldrb	w0, [x19, #3720]
    b02c:	str	x30, [sp, #16]
    b030:	cbnz	w0, b118 <__lsan_init@@Base+0xf8>
    b034:	add	x1, x19, #0xe88
    b038:	ldrb	w0, [x1, #1]
    b03c:	cbz	w0, b04c <__lsan_init@@Base+0x2c>
    b040:	ldr	x30, [sp, #16]
    b044:	ldp	x19, x20, [sp], #32
    b048:	ret
    b04c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b050:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b054:	add	x1, x1, #0x688
    b058:	mov	w20, #0x1                   	// #1
    b05c:	ldr	x0, [x0, #4008]
    b060:	strb	w20, [x19, #3720]
    b064:	str	x1, [x0]
    b068:	bl	15e30 <__sancov_default_options@@Base+0x3360>
    b06c:	bl	aee0 <__lsan_do_recoverable_leak_check@@Base+0x1218>
    b070:	bl	7c40 <*ABS*+0x10@plt+0xee0>
    b074:	bl	b270 <__sanitizer_print_stack_trace@@Base+0x118>
    b078:	bl	b268 <__sanitizer_print_stack_trace@@Base+0x110>
    b07c:	bl	1f918 <__sanitizer_set_report_fd@@Base+0x6050>
    b080:	bl	123d0 <_ZdaPvmSt11align_val_t@@Base+0x70>
    b084:	bl	12760 <_ZdaPvmSt11align_val_t@@Base+0x400>
    b088:	adrp	x0, a000 <__lsan_do_recoverable_leak_check@@Base+0x338>
    b08c:	add	x0, x0, #0xe38
    b090:	bl	21658 <__sanitizer_set_report_fd@@Base+0x7d90>
    b094:	mov	w2, w20
    b098:	mov	x1, #0x0                   	// #0
    b09c:	mov	w0, #0x0                   	// #0
    b0a0:	bl	127c8 <_ZdaPvmSt11align_val_t@@Base+0x468>
    b0a4:	mov	w3, w0
    b0a8:	cbnz	w0, b138 <__lsan_init@@Base+0x118>
    b0ac:	bl	1dc30 <__sanitizer_set_report_fd@@Base+0x4368>
    b0b0:	mov	x1, x0
    b0b4:	mov	w2, #0x0                   	// #0
    b0b8:	mov	w0, #0x0                   	// #0
    b0bc:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b0c0:	bl	127e0 <_ZdaPvmSt11align_val_t@@Base+0x480>
    b0c4:	mov	w0, #0x0                   	// #0
    b0c8:	bl	b218 <__sanitizer_print_stack_trace@@Base+0xc0>
    b0cc:	ldr	x0, [x20, #4040]
    b0d0:	ldrb	w1, [x0, #57]
    b0d4:	cbz	w1, b0ec <__lsan_init@@Base+0xcc>
    b0d8:	ldrb	w0, [x0, #58]
    b0dc:	cbz	w0, b0ec <__lsan_init@@Base+0xcc>
    b0e0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b0e4:	ldr	x0, [x0, #3552]
    b0e8:	bl	21538 <__sanitizer_set_report_fd@@Base+0x7c70>
    b0ec:	ldr	x20, [x20, #4040]
    b0f0:	ldrb	w0, [x20, #161]
    b0f4:	ldr	x1, [x20, #168]
    b0f8:	bl	168d8 <__sanitizer_sandbox_on_notify@@Base+0x140>
    b0fc:	strb	wzr, [x19, #3720]
    b100:	add	x0, x19, #0xe88
    b104:	mov	w1, #0x1                   	// #1
    b108:	ldr	x30, [sp, #16]
    b10c:	strb	w1, [x0, #1]
    b110:	ldp	x19, x20, [sp], #32
    b114:	ret
    b118:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b11c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b120:	add	x2, x2, #0x638
    b124:	add	x0, x0, #0x660
    b128:	mov	x4, #0x0                   	// #0
    b12c:	mov	x3, #0x0                   	// #0
    b130:	mov	w1, #0x53                  	// #83
    b134:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b138:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b13c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b140:	add	x2, x2, #0x698
    b144:	add	x0, x0, #0x660
    b148:	mov	x4, #0x0                   	// #0
    b14c:	mov	w1, #0x63                  	// #99
    b150:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b154:	nop

000000000000b158 <__sanitizer_print_stack_trace@@Base>:
    b158:	sub	sp, sp, #0x850
    b15c:	stp	x29, x30, [sp]
    b160:	mov	x29, sp
    b164:	stp	x19, x20, [sp, #16]
    b168:	add	x19, x29, #0x38
    b16c:	add	x0, x19, #0x10
    b170:	stp	x21, x22, [sp, #32]
    b174:	mov	x22, x29
    b178:	str	x0, [x29, #56]
    b17c:	str	xzr, [x29, #64]
    b180:	str	xzr, [x29, #2120]
    b184:	bl	248d0 <OnPrint@@Base+0x1f68>
    b188:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b18c:	mov	x20, x0
    b190:	ldr	x1, [x1, #4040]
    b194:	ldrb	w21, [x1, #33]
    b198:	cbnz	w21, b1dc <__sanitizer_print_stack_trace@@Base+0x84>
    b19c:	mov	x6, #0x0                   	// #0
    b1a0:	mov	x5, #0x0                   	// #0
    b1a4:	mov	w7, w21
    b1a8:	mov	x3, x22
    b1ac:	mov	x2, x20
    b1b0:	mov	x4, #0x0                   	// #0
    b1b4:	mov	w1, #0x100                 	// #256
    b1b8:	mov	x0, x19
    b1bc:	bl	24fe8 <OnPrint@@Base+0x2680>
    b1c0:	mov	x0, x19
    b1c4:	bl	24b80 <OnPrint@@Base+0x2218>
    b1c8:	ldp	x29, x30, [sp]
    b1cc:	ldp	x19, x20, [sp, #16]
    b1d0:	ldp	x21, x22, [sp, #32]
    b1d4:	add	sp, sp, #0x850
    b1d8:	ret
    b1dc:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
    b1e0:	cbz	x0, b19c <__sanitizer_print_stack_trace@@Base+0x44>
    b1e4:	ldp	x6, x5, [x0, #144]
    b1e8:	b	b1a4 <__sanitizer_print_stack_trace@@Base+0x4c>
    b1ec:	nop
    b1f0:	mrs	x1, tpidr_el0
    b1f4:	str	x30, [sp, #-16]!
    b1f8:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
    b1fc:	ldr	x2, [x0, #912]
    b200:	add	x0, x0, #0x390
    b204:	blr	x2
    b208:	ldr	x30, [sp], #16
    b20c:	ldr	w0, [x1, x0]
    b210:	ret
    b214:	nop
    b218:	mrs	x1, tpidr_el0
    b21c:	str	x30, [sp, #-16]!
    b220:	mov	w2, w0
    b224:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
    b228:	ldr	x3, [x0, #912]
    b22c:	add	x0, x0, #0x390
    b230:	blr	x3
    b234:	ldr	x30, [sp], #16
    b238:	str	w2, [x1, x0]
    b23c:	ret
    b240:	str	x30, [sp, #-16]!
    b244:	mrs	x1, tpidr_el0
    b248:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
    b24c:	ldr	x2, [x0, #896]
    b250:	add	x0, x0, #0x380
    b254:	blr	x2
    b258:	add	x0, x1, x0
    b25c:	ldr	x30, [sp], #16
    b260:	ret
    b264:	nop
    b268:	ret
    b26c:	nop
    b270:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b274:	stp	x19, x20, [sp, #-32]!
    b278:	adrp	x19, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b27c:	ldr	x0, [x0, #4040]
    b280:	add	x20, x19, #0xec0
    b284:	ldrb	w0, [x0, #59]
    b288:	str	x30, [sp, #16]
    b28c:	bl	12f18 <__sancov_default_options@@Base+0x448>
    b290:	mov	x0, x20
    b294:	add	x20, x20, #0x80, lsl #12
    b298:	mov	x2, #0x80000               	// #524288
    b29c:	mov	w1, #0x0                   	// #0
    b2a0:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    b2a4:	strb	wzr, [x20]
    b2a8:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b2ac:	mov	x2, #0xd80                 	// #3456
    b2b0:	adrp	x0, ef000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    b2b4:	mov	w1, #0x0                   	// #0
    b2b8:	add	x0, x0, #0xf00
    b2bc:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    b2c0:	ldr	x20, [x20, #4000]
    b2c4:	ldr	x2, [x20]
    b2c8:	cbz	x2, b31c <__sanitizer_print_stack_trace@@Base+0x1c4>
    b2cc:	adrp	x4, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b2d0:	add	x19, x19, #0xec0
    b2d4:	add	x19, x19, #0x80, lsl #12
    b2d8:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b2dc:	ldr	x4, [x4, #3840]
    b2e0:	add	x0, x0, #0xc90
    b2e4:	str	x2, [x19, #3520]
    b2e8:	mov	x3, #0x0                   	// #0
    b2ec:	mov	x1, #0x800000              	// #8388608
    b2f0:	ldr	x2, [x4]
    b2f4:	bl	21ab0 <__sanitizer_set_report_fd@@Base+0x81e8>
    b2f8:	cbz	x0, b32c <__sanitizer_print_stack_trace@@Base+0x1d4>
    b2fc:	adrp	x1, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b300:	add	x1, x1, #0xef0
    b304:	ldr	x30, [sp, #16]
    b308:	str	x0, [x19, #3528]
    b30c:	str	x1, [x19, #4144]
    b310:	str	x1, [x19, #4152]
    b314:	ldp	x19, x20, [sp], #32
    b318:	ret
    b31c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    b320:	mov	x2, x0
    b324:	str	x0, [x20]
    b328:	b	b2cc <__sanitizer_print_stack_trace@@Base+0x174>
    b32c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b330:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b334:	add	x2, x2, #0x718
    b338:	add	x0, x0, #0x728
    b33c:	mov	x4, #0x0                   	// #0
    b340:	mov	x3, #0x0                   	// #0
    b344:	mov	w1, #0x24                  	// #36
    b348:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b34c:	nop
    b350:	stp	x19, x20, [sp, #-32]!
    b354:	mov	x20, x0
    b358:	mov	x19, x1
    b35c:	str	x30, [sp, #16]
    b360:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    b364:	ldr	x30, [sp, #16]
    b368:	str	x0, [x20]
    b36c:	mov	x1, #0xd820                	// #55328
    b370:	add	x0, x0, x1
    b374:	str	x0, [x19]
    b378:	ldp	x19, x20, [sp], #32
    b37c:	ret
    b380:	stp	x19, x20, [sp, #-32]!
    b384:	mov	x19, x0
    b388:	mov	x1, #0xffffffffffff        	// #281474976710655
    b38c:	str	x30, [sp, #16]
    b390:	cmp	x19, x1
    b394:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b398:	b.ls	b41c <__sanitizer_print_stack_trace@@Base+0x2c4>  // b.plast
    b39c:	add	x0, x0, #0xec0
    b3a0:	add	x20, x0, #0x80, lsl #12
    b3a4:	ldr	x2, [x20, #3520]
    b3a8:	sub	x0, x2, #0x1
    b3ac:	tst	x0, x19
    b3b0:	b.ne	b3d0 <__sanitizer_print_stack_trace@@Base+0x278>  // b.any
    b3b4:	sub	x19, x19, x2
    b3b8:	add	x19, x19, #0x20
    b3bc:	ldr	x0, [x19]
    b3c0:	lsr	x0, x0, #10
    b3c4:	ldr	x30, [sp, #16]
    b3c8:	ldp	x19, x20, [sp], #32
    b3cc:	ret
    b3d0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b3d4:	mov	x2, x19
    b3d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b3dc:	add	x0, x0, #0x798
    b3e0:	ldr	x1, [x1, #4008]
    b3e4:	ldr	x1, [x1]
    b3e8:	bl	22c78 <OnPrint@@Base+0x310>
    b3ec:	ldr	x2, [x20, #3520]
    b3f0:	sub	x0, x2, #0x1
    b3f4:	tst	x0, x19
    b3f8:	b.eq	b3b4 <__sanitizer_print_stack_trace@@Base+0x25c>  // b.none
    b3fc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b400:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b404:	add	x2, x2, #0x7b0
    b408:	add	x0, x0, #0x728
    b40c:	mov	x4, #0x0                   	// #0
    b410:	mov	x3, #0x0                   	// #0
    b414:	mov	w1, #0xae                  	// #174
    b418:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b41c:	lsr	x3, x19, #32
    b420:	add	x2, x0, #0xec0
    b424:	ldr	x1, [x2, x3, lsl #3]
    b428:	dmb	ish
    b42c:	cbz	x1, b39c <__sanitizer_print_stack_trace@@Base+0x244>
    b430:	lsr	w4, w19, #20
    b434:	ldrb	w1, [x1, x4]
    b438:	cbz	w1, b39c <__sanitizer_print_stack_trace@@Base+0x244>
    b43c:	ldr	x0, [x2, x3, lsl #3]
    b440:	dmb	ish
    b444:	cbz	x0, b4cc <__sanitizer_print_stack_trace@@Base+0x374>
    b448:	ldrb	w0, [x0, x4]
    b44c:	cbz	w0, b4cc <__sanitizer_print_stack_trace@@Base+0x374>
    b450:	and	x0, x19, #0xfffffffffff00000
    b454:	ldr	x1, [x2, x3, lsl #3]
    b458:	dmb	ish
    b45c:	cbz	x1, b4c4 <__sanitizer_print_stack_trace@@Base+0x36c>
    b460:	ldrb	w3, [x1, x4]
    b464:	mov	w2, #0x200                 	// #512
    b468:	cmp	w3, #0x35
    b46c:	and	x1, x3, #0xff
    b470:	b.eq	b49c <__sanitizer_print_stack_trace@@Base+0x344>  // b.none
    b474:	lsl	w2, w3, #4
    b478:	cmp	x1, #0x10
    b47c:	b.ls	b49c <__sanitizer_print_stack_trace@@Base+0x344>  // b.plast
    b480:	sub	x1, x1, #0x10
    b484:	mov	x2, #0x100                 	// #256
    b488:	and	x3, x1, #0x3
    b48c:	lsr	x1, x1, #2
    b490:	lsl	x1, x2, x1
    b494:	lsr	x2, x1, #2
    b498:	madd	w2, w2, w3, w1
    b49c:	sub	w19, w19, w0
    b4a0:	add	x1, x0, #0x100, lsl #12
    b4a4:	mov	x0, #0x0                   	// #0
    b4a8:	udiv	w19, w19, w2
    b4ac:	add	x19, x19, #0x1
    b4b0:	cmp	x1, x19, lsl #4
    b4b4:	lsl	x19, x19, #4
    b4b8:	b.eq	b3c4 <__sanitizer_print_stack_trace@@Base+0x26c>  // b.none
    b4bc:	sub	x19, x1, x19
    b4c0:	b	b3bc <__sanitizer_print_stack_trace@@Base+0x264>
    b4c4:	mov	w2, #0x0                   	// #0
    b4c8:	b	b49c <__sanitizer_print_stack_trace@@Base+0x344>
    b4cc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b4d0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b4d4:	add	x2, x2, #0x778
    b4d8:	add	x0, x0, #0x6c8
    b4dc:	mov	x4, #0x0                   	// #0
    b4e0:	mov	x3, #0x0                   	// #0
    b4e4:	mov	w1, #0x91                  	// #145
    b4e8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b4ec:	nop
    b4f0:	stp	x19, x20, [sp, #-32]!
    b4f4:	mov	x19, x0
    b4f8:	mov	x1, #0xffffffffffff        	// #281474976710655
    b4fc:	str	x30, [sp, #16]
    b500:	cmp	x19, x1
    b504:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b508:	b.ls	b58c <__sanitizer_print_stack_trace@@Base+0x434>  // b.plast
    b50c:	add	x0, x0, #0xec0
    b510:	add	x20, x0, #0x80, lsl #12
    b514:	ldr	x2, [x20, #3520]
    b518:	sub	x0, x2, #0x1
    b51c:	tst	x0, x19
    b520:	b.ne	b540 <__sanitizer_print_stack_trace@@Base+0x3e8>  // b.any
    b524:	sub	x19, x19, x2
    b528:	add	x19, x19, #0x20
    b52c:	ldr	x0, [x19]
    b530:	lsr	x0, x0, #10
    b534:	ldr	x30, [sp, #16]
    b538:	ldp	x19, x20, [sp], #32
    b53c:	ret
    b540:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b544:	mov	x2, x19
    b548:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b54c:	add	x0, x0, #0x798
    b550:	ldr	x1, [x1, #4008]
    b554:	ldr	x1, [x1]
    b558:	bl	22c78 <OnPrint@@Base+0x310>
    b55c:	ldr	x2, [x20, #3520]
    b560:	sub	x0, x2, #0x1
    b564:	tst	x0, x19
    b568:	b.eq	b524 <__sanitizer_print_stack_trace@@Base+0x3cc>  // b.none
    b56c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b570:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b574:	add	x2, x2, #0x7b0
    b578:	add	x0, x0, #0x728
    b57c:	mov	x4, #0x0                   	// #0
    b580:	mov	x3, #0x0                   	// #0
    b584:	mov	w1, #0xae                  	// #174
    b588:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b58c:	lsr	x3, x19, #32
    b590:	add	x2, x0, #0xec0
    b594:	ldr	x1, [x2, x3, lsl #3]
    b598:	dmb	ish
    b59c:	cbz	x1, b50c <__sanitizer_print_stack_trace@@Base+0x3b4>
    b5a0:	lsr	w4, w19, #20
    b5a4:	ldrb	w1, [x1, x4]
    b5a8:	cbz	w1, b50c <__sanitizer_print_stack_trace@@Base+0x3b4>
    b5ac:	ldr	x0, [x2, x3, lsl #3]
    b5b0:	dmb	ish
    b5b4:	cbz	x0, b63c <__sanitizer_print_stack_trace@@Base+0x4e4>
    b5b8:	ldrb	w0, [x0, x4]
    b5bc:	cbz	w0, b63c <__sanitizer_print_stack_trace@@Base+0x4e4>
    b5c0:	and	x0, x19, #0xfffffffffff00000
    b5c4:	ldr	x1, [x2, x3, lsl #3]
    b5c8:	dmb	ish
    b5cc:	cbz	x1, b634 <__sanitizer_print_stack_trace@@Base+0x4dc>
    b5d0:	ldrb	w3, [x1, x4]
    b5d4:	mov	w2, #0x200                 	// #512
    b5d8:	cmp	w3, #0x35
    b5dc:	and	x1, x3, #0xff
    b5e0:	b.eq	b60c <__sanitizer_print_stack_trace@@Base+0x4b4>  // b.none
    b5e4:	lsl	w2, w3, #4
    b5e8:	cmp	x1, #0x10
    b5ec:	b.ls	b60c <__sanitizer_print_stack_trace@@Base+0x4b4>  // b.plast
    b5f0:	sub	x1, x1, #0x10
    b5f4:	mov	x2, #0x100                 	// #256
    b5f8:	and	x3, x1, #0x3
    b5fc:	lsr	x1, x1, #2
    b600:	lsl	x1, x2, x1
    b604:	lsr	x2, x1, #2
    b608:	madd	w2, w2, w3, w1
    b60c:	sub	w19, w19, w0
    b610:	add	x1, x0, #0x100, lsl #12
    b614:	mov	x0, #0x0                   	// #0
    b618:	udiv	w19, w19, w2
    b61c:	add	x19, x19, #0x1
    b620:	cmp	x1, x19, lsl #4
    b624:	lsl	x19, x19, #4
    b628:	b.eq	b534 <__sanitizer_print_stack_trace@@Base+0x3dc>  // b.none
    b62c:	sub	x19, x1, x19
    b630:	b	b52c <__sanitizer_print_stack_trace@@Base+0x3d4>
    b634:	mov	w2, #0x0                   	// #0
    b638:	b	b60c <__sanitizer_print_stack_trace@@Base+0x4b4>
    b63c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b640:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b644:	add	x2, x2, #0x778
    b648:	add	x0, x0, #0x6c8
    b64c:	mov	x4, #0x0                   	// #0
    b650:	mov	x3, #0x0                   	// #0
    b654:	mov	w1, #0x91                  	// #145
    b658:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b65c:	nop
    b660:	stp	x19, x20, [sp, #-32]!
    b664:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b668:	add	x20, x20, #0xec0
    b66c:	add	x20, x20, #0x80, lsl #12
    b670:	adrp	x19, ef000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    b674:	add	x20, x20, #0xdc0
    b678:	add	x19, x19, #0xf00
    b67c:	stp	x21, x30, [sp, #16]
    b680:	mov	w21, #0x1                   	// #1
    b684:	nop
    b688:	ldxrb	w0, [x19]
    b68c:	stxrb	w1, w21, [x19]
    b690:	cbnz	w1, b688 <__sanitizer_print_stack_trace@@Base+0x530>
    b694:	dmb	ish
    b698:	tst	w0, #0xff
    b69c:	b.eq	b6a8 <__sanitizer_print_stack_trace@@Base+0x550>  // b.none
    b6a0:	mov	x0, x19
    b6a4:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    b6a8:	add	x19, x19, #0x40
    b6ac:	cmp	x19, x20
    b6b0:	b.ne	b688 <__sanitizer_print_stack_trace@@Base+0x530>  // b.any
    b6b4:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b6b8:	add	x0, x0, #0xee8
    b6bc:	mov	w2, #0x1                   	// #1
    b6c0:	ldxrb	w1, [x0]
    b6c4:	stxrb	w3, w2, [x0]
    b6c8:	cbnz	w3, b6c0 <__sanitizer_print_stack_trace@@Base+0x568>
    b6cc:	dmb	ish
    b6d0:	tst	w1, #0xff
    b6d4:	b.eq	b6e4 <__sanitizer_print_stack_trace@@Base+0x58c>  // b.none
    b6d8:	ldp	x21, x30, [sp, #16]
    b6dc:	ldp	x19, x20, [sp], #32
    b6e0:	b	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    b6e4:	ldp	x21, x30, [sp, #16]
    b6e8:	ldp	x19, x20, [sp], #32
    b6ec:	ret
    b6f0:	dmb	ish
    b6f4:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b6f8:	add	x0, x0, #0xec0
    b6fc:	add	x1, x0, #0x81, lsl #12
    b700:	strb	wzr, [x1, #40]
    b704:	mov	x1, #0x35                  	// #53
    b708:	mov	x3, #0x2001                	// #8193
    b70c:	nop
    b710:	dmb	ish
    b714:	add	x2, x1, x3
    b718:	lsl	x2, x2, #6
    b71c:	strb	wzr, [x0, x2]
    b720:	sub	x1, x1, #0x1
    b724:	cmn	x1, #0x1
    b728:	b.ne	b710 <__sanitizer_print_stack_trace@@Base+0x5b8>  // b.any
    b72c:	ret
    b730:	adrp	x2, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b734:	add	x2, x2, #0xec0
    b738:	add	x3, x2, #0x81, lsl #12
    b73c:	str	x2, [x0]
    b740:	add	x3, x3, #0x80
    b744:	str	x3, [x1]
    b748:	ret
    b74c:	nop
    b750:	ret
    b754:	nop
    b758:	stp	x19, x20, [sp, #-32]!
    b75c:	mov	x19, x1
    b760:	mov	x2, #0xffffffffffff        	// #281474976710655
    b764:	stp	x21, x30, [sp, #16]
    b768:	cmp	x19, x2
    b76c:	mov	x21, x0
    b770:	adrp	x1, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b774:	b.ls	b7f4 <__sanitizer_print_stack_trace@@Base+0x69c>  // b.plast
    b778:	add	x1, x1, #0xec0
    b77c:	add	x20, x1, #0x80, lsl #12
    b780:	ldr	x2, [x20, #3520]
    b784:	sub	x0, x2, #0x1
    b788:	tst	x0, x19
    b78c:	b.ne	b7a8 <__sanitizer_print_stack_trace@@Base+0x650>  // b.any
    b790:	sub	x19, x19, x2
    b794:	add	x19, x19, #0x20
    b798:	str	x19, [x21]
    b79c:	ldp	x21, x30, [sp, #16]
    b7a0:	ldp	x19, x20, [sp], #32
    b7a4:	ret
    b7a8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b7ac:	mov	x2, x19
    b7b0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b7b4:	add	x0, x0, #0x798
    b7b8:	ldr	x1, [x1, #4008]
    b7bc:	ldr	x1, [x1]
    b7c0:	bl	22c78 <OnPrint@@Base+0x310>
    b7c4:	ldr	x2, [x20, #3520]
    b7c8:	sub	x0, x2, #0x1
    b7cc:	tst	x0, x19
    b7d0:	b.eq	b790 <__sanitizer_print_stack_trace@@Base+0x638>  // b.none
    b7d4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b7d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b7dc:	add	x2, x2, #0x7b0
    b7e0:	add	x0, x0, #0x728
    b7e4:	mov	x4, #0x0                   	// #0
    b7e8:	mov	x3, #0x0                   	// #0
    b7ec:	mov	w1, #0xae                  	// #174
    b7f0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b7f4:	lsr	x3, x19, #32
    b7f8:	add	x2, x1, #0xec0
    b7fc:	ldr	x0, [x2, x3, lsl #3]
    b800:	dmb	ish
    b804:	cbz	x0, b778 <__sanitizer_print_stack_trace@@Base+0x620>
    b808:	lsr	w4, w19, #20
    b80c:	ldrb	w0, [x0, x4]
    b810:	cbz	w0, b778 <__sanitizer_print_stack_trace@@Base+0x620>
    b814:	ldr	x0, [x2, x3, lsl #3]
    b818:	dmb	ish
    b81c:	cbz	x0, b8c0 <__sanitizer_print_stack_trace@@Base+0x768>
    b820:	ldrb	w0, [x0, x4]
    b824:	cbz	w0, b8c0 <__sanitizer_print_stack_trace@@Base+0x768>
    b828:	and	x1, x19, #0xfffffffffff00000
    b82c:	ldr	x0, [x2, x3, lsl #3]
    b830:	dmb	ish
    b834:	cbz	x0, b8b8 <__sanitizer_print_stack_trace@@Base+0x760>
    b838:	ldrb	w0, [x0, x4]
    b83c:	mov	w3, #0x200                 	// #512
    b840:	cmp	w0, #0x35
    b844:	and	x2, x0, #0xff
    b848:	b.eq	b874 <__sanitizer_print_stack_trace@@Base+0x71c>  // b.none
    b84c:	lsl	w3, w0, #4
    b850:	cmp	x2, #0x10
    b854:	b.ls	b874 <__sanitizer_print_stack_trace@@Base+0x71c>  // b.plast
    b858:	sub	x2, x2, #0x10
    b85c:	mov	x3, #0x100                 	// #256
    b860:	and	x4, x2, #0x3
    b864:	lsr	x2, x2, #2
    b868:	lsl	x2, x3, x2
    b86c:	lsr	x0, x2, #2
    b870:	madd	w3, w0, w4, w2
    b874:	sub	w0, w19, w1
    b878:	add	x1, x1, #0x100, lsl #12
    b87c:	udiv	w0, w0, w3
    b880:	add	x0, x0, #0x1
    b884:	lsl	x0, x0, #4
    b888:	sub	x2, x1, x0
    b88c:	str	x2, [x21]
    b890:	cmp	x0, x1
    b894:	b.ne	b79c <__sanitizer_print_stack_trace@@Base+0x644>  // b.any
    b898:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b89c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b8a0:	add	x2, x2, #0x7f0
    b8a4:	add	x0, x0, #0x808
    b8a8:	mov	x4, #0x0                   	// #0
    b8ac:	mov	x3, #0x0                   	// #0
    b8b0:	mov	w1, #0xff                  	// #255
    b8b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b8b8:	mov	w3, #0x0                   	// #0
    b8bc:	b	b874 <__sanitizer_print_stack_trace@@Base+0x71c>
    b8c0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b8c4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    b8c8:	add	x2, x2, #0x778
    b8cc:	add	x0, x0, #0x6c8
    b8d0:	mov	x4, #0x0                   	// #0
    b8d4:	mov	x3, #0x0                   	// #0
    b8d8:	mov	w1, #0x91                  	// #145
    b8dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    b8e0:	ldr	x0, [x0]
    b8e4:	ldrb	w0, [x0]
    b8e8:	cmp	w0, #0x0
    b8ec:	cset	w0, ne  // ne = any
    b8f0:	ret
    b8f4:	nop
    b8f8:	ldr	x0, [x0]
    b8fc:	ldrb	w0, [x0, #1]
    b900:	and	w0, w0, #0x3
    b904:	ret
    b908:	ldr	x0, [x0]
    b90c:	ldrb	w2, [x0, #1]
    b910:	bfxil	w2, w1, #0, #2
    b914:	strb	w2, [x0, #1]
    b918:	ret
    b91c:	nop
    b920:	ldr	x0, [x0]
    b924:	ldr	x0, [x0]
    b928:	lsr	x0, x0, #10
    b92c:	ret
    b930:	ldr	x0, [x0]
    b934:	ldr	w0, [x0, #8]
    b938:	ret
    b93c:	nop
    b940:	stp	x19, x20, [sp, #-32]!
    b944:	mov	x1, #0xffffffffffff        	// #281474976710655
    b948:	mov	x19, x0
    b94c:	stp	x21, x30, [sp, #16]
    b950:	cmp	x0, x1
    b954:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b958:	b.ls	bac0 <__sanitizer_print_stack_trace@@Base+0x968>  // b.plast
    b95c:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b960:	add	x0, x0, #0xee8
    b964:	mov	w2, #0x1                   	// #1
    b968:	ldxrb	w1, [x0]
    b96c:	stxrb	w3, w2, [x0]
    b970:	cbnz	w3, b968 <__sanitizer_print_stack_trace@@Base+0x810>
    b974:	dmb	ish
    b978:	tst	w1, #0xff
    b97c:	b.eq	b984 <__sanitizer_print_stack_trace@@Base+0x82c>  // b.none
    b980:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    b984:	add	x2, x20, #0xec0
    b988:	add	x0, x2, #0x80, lsl #12
    b98c:	ldr	x1, [x0, #3576]
    b990:	cbz	x1, baa4 <__sanitizer_print_stack_trace@@Base+0x94c>
    b994:	ldr	x0, [x0, #3528]
    b998:	mov	x3, #0x0                   	// #0
    b99c:	add	x2, x0, x1, lsl #3
    b9a0:	ldr	x1, [x0]
    b9a4:	cmp	x19, x1
    b9a8:	b.cc	b9bc <__sanitizer_print_stack_trace@@Base+0x864>  // b.lo, b.ul, b.last
    b9ac:	sub	x5, x19, x3
    b9b0:	sub	x4, x19, x1
    b9b4:	cmp	x5, x4
    b9b8:	csel	x3, x3, x1, ls  // ls = plast
    b9bc:	add	x0, x0, #0x8
    b9c0:	cmp	x0, x2
    b9c4:	b.ne	b9a0 <__sanitizer_print_stack_trace@@Base+0x848>  // b.any
    b9c8:	cbz	x3, bc84 <__sanitizer_print_stack_trace@@Base+0xb2c>
    b9cc:	ldr	x4, [x3]
    b9d0:	cmp	x4, x3
    b9d4:	b.hi	bc98 <__sanitizer_print_stack_trace@@Base+0xb40>  // b.pmore
    b9d8:	ldr	x0, [x3, #8]
    b9dc:	add	x4, x4, x0
    b9e0:	cmp	x4, x3
    b9e4:	b.ls	bcb0 <__sanitizer_print_stack_trace@@Base+0xb58>  // b.plast
    b9e8:	cmp	x19, x3
    b9ec:	b.cc	bbac <__sanitizer_print_stack_trace@@Base+0xa54>  // b.lo, b.ul, b.last
    b9f0:	cmp	x19, x4
    b9f4:	b.cs	bc84 <__sanitizer_print_stack_trace@@Base+0xb2c>  // b.hs, b.nlast
    b9f8:	add	x0, x20, #0xec0
    b9fc:	add	x1, x0, #0x80, lsl #12
    ba00:	ldr	x21, [x1, #3520]
    ba04:	sub	x1, x21, #0x1
    ba08:	tst	x1, x3
    ba0c:	b.ne	bcc8 <__sanitizer_print_stack_trace@@Base+0xb70>  // b.any
    ba10:	add	x21, x21, x3
    ba14:	dmb	ish
    ba18:	cmp	x19, x21
    ba1c:	cset	w1, cc  // cc = lo, ul, last
    ba20:	cmp	x21, #0x0
    ba24:	csinc	w1, w1, wzr, ne  // ne = any
    ba28:	add	x0, x0, #0x81, lsl #12
    ba2c:	strb	wzr, [x0, #40]
    ba30:	cbnz	w1, bab0 <__sanitizer_print_stack_trace@@Base+0x958>
    ba34:	mov	x0, #0xffffffffffff        	// #281474976710655
    ba38:	cmp	x21, x0
    ba3c:	b.ls	bbc8 <__sanitizer_print_stack_trace@@Base+0xa70>  // b.plast
    ba40:	add	x20, x20, #0xec0
    ba44:	add	x20, x20, #0x80, lsl #12
    ba48:	ldr	x0, [x20, #3520]
    ba4c:	sub	x1, x0, #0x1
    ba50:	tst	x21, x1
    ba54:	b.ne	bb60 <__sanitizer_print_stack_trace@@Base+0xa08>  // b.any
    ba58:	sub	x0, x21, x0
    ba5c:	add	x1, x0, #0x20
    ba60:	ldrb	w0, [x1]
    ba64:	cbz	w0, bab0 <__sanitizer_print_stack_trace@@Base+0x958>
    ba68:	ldr	x3, [x1]
    ba6c:	add	x3, x21, x3, lsr #10
    ba70:	cmp	x3, x19
    ba74:	b.ls	bab0 <__sanitizer_print_stack_trace@@Base+0x958>  // b.plast
    ba78:	ldrb	w2, [x1, #1]
    ba7c:	mov	w0, #0x1                   	// #1
    ba80:	and	w3, w2, #0x3
    ba84:	cmp	w3, #0x3
    ba88:	b.eq	bab4 <__sanitizer_print_stack_trace@@Base+0x95c>  // b.none
    ba8c:	orr	w2, w2, #0x3
    ba90:	strb	w2, [x1, #1]
    ba94:	mov	w0, #0x0                   	// #0
    ba98:	ldp	x21, x30, [sp, #16]
    ba9c:	ldp	x19, x20, [sp], #32
    baa0:	ret
    baa4:	dmb	ish
    baa8:	add	x2, x2, #0x81, lsl #12
    baac:	strb	wzr, [x2, #40]
    bab0:	mov	w0, #0x2                   	// #2
    bab4:	ldp	x21, x30, [sp, #16]
    bab8:	ldp	x19, x20, [sp], #32
    babc:	ret
    bac0:	lsr	x4, x0, #32
    bac4:	add	x1, x20, #0xec0
    bac8:	ldr	x0, [x1, x4, lsl #3]
    bacc:	dmb	ish
    bad0:	cbz	x0, b95c <__sanitizer_print_stack_trace@@Base+0x804>
    bad4:	lsr	w5, w19, #20
    bad8:	ldrb	w0, [x0, x5]
    badc:	cbz	w0, b95c <__sanitizer_print_stack_trace@@Base+0x804>
    bae0:	ldr	x0, [x1, x4, lsl #3]
    bae4:	dmb	ish
    bae8:	cbz	x0, bcf4 <__sanitizer_print_stack_trace@@Base+0xb9c>
    baec:	ldrb	w0, [x0, x5]
    baf0:	cbz	w0, bcf4 <__sanitizer_print_stack_trace@@Base+0xb9c>
    baf4:	and	x3, x19, #0xfffffffffff00000
    baf8:	ldr	x0, [x1, x4, lsl #3]
    bafc:	dmb	ish
    bb00:	sub	w1, w19, w3
    bb04:	cbz	x0, bb48 <__sanitizer_print_stack_trace@@Base+0x9f0>
    bb08:	ldrb	w2, [x0, x5]
    bb0c:	cmp	w2, #0x35
    bb10:	and	x0, x2, #0xff
    bb14:	b.eq	bce8 <__sanitizer_print_stack_trace@@Base+0xb90>  // b.none
    bb18:	cmp	x0, #0x10
    bb1c:	b.ls	bd3c <__sanitizer_print_stack_trace@@Base+0xbe4>  // b.plast
    bb20:	sub	x0, x0, #0x10
    bb24:	mov	x2, #0x100                 	// #256
    bb28:	and	x4, x0, #0x3
    bb2c:	lsr	x0, x0, #2
    bb30:	lsl	x2, x2, x0
    bb34:	lsr	x0, x2, #2
    bb38:	madd	x0, x0, x4, x2
    bb3c:	udiv	w1, w1, w0
    bb40:	mul	w1, w1, w0
    bb44:	add	x3, x3, x1
    bb48:	cmp	x19, x3
    bb4c:	mov	x21, x3
    bb50:	cset	w1, cc  // cc = lo, ul, last
    bb54:	cmp	x3, #0x0
    bb58:	csinc	w1, w1, wzr, ne  // ne = any
    bb5c:	b	ba30 <__sanitizer_print_stack_trace@@Base+0x8d8>
    bb60:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    bb64:	mov	x2, x21
    bb68:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bb6c:	add	x0, x0, #0x798
    bb70:	ldr	x1, [x1, #4008]
    bb74:	ldr	x1, [x1]
    bb78:	bl	22c78 <OnPrint@@Base+0x310>
    bb7c:	ldr	x0, [x20, #3520]
    bb80:	sub	x1, x0, #0x1
    bb84:	tst	x21, x1
    bb88:	b.eq	ba58 <__sanitizer_print_stack_trace@@Base+0x900>  // b.none
    bb8c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bb90:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bb94:	add	x2, x2, #0x7b0
    bb98:	add	x0, x0, #0x728
    bb9c:	mov	x4, #0x0                   	// #0
    bba0:	mov	x3, #0x0                   	// #0
    bba4:	mov	w1, #0xae                  	// #174
    bba8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bbac:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bbb0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bbb4:	mov	x4, x19
    bbb8:	add	x2, x2, #0x898
    bbbc:	add	x0, x0, #0x728
    bbc0:	mov	w1, #0xc3                  	// #195
    bbc4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bbc8:	lsr	x2, x21, #32
    bbcc:	add	x1, x20, #0xec0
    bbd0:	ldr	x0, [x1, x2, lsl #3]
    bbd4:	dmb	ish
    bbd8:	cbz	x0, ba40 <__sanitizer_print_stack_trace@@Base+0x8e8>
    bbdc:	lsr	w3, w21, #20
    bbe0:	ldrb	w0, [x0, x3]
    bbe4:	cbz	w0, ba40 <__sanitizer_print_stack_trace@@Base+0x8e8>
    bbe8:	ldr	x0, [x1, x2, lsl #3]
    bbec:	dmb	ish
    bbf0:	cbz	x0, bd1c <__sanitizer_print_stack_trace@@Base+0xbc4>
    bbf4:	ldrb	w0, [x0, x3]
    bbf8:	cbz	w0, bd1c <__sanitizer_print_stack_trace@@Base+0xbc4>
    bbfc:	and	x0, x21, #0xfffffffffff00000
    bc00:	ldr	x1, [x1, x2, lsl #3]
    bc04:	dmb	ish
    bc08:	cbz	x1, bd14 <__sanitizer_print_stack_trace@@Base+0xbbc>
    bc0c:	ldrb	w3, [x1, x3]
    bc10:	mov	w2, #0x200                 	// #512
    bc14:	cmp	w3, #0x35
    bc18:	and	x1, x3, #0xff
    bc1c:	b.eq	bc48 <__sanitizer_print_stack_trace@@Base+0xaf0>  // b.none
    bc20:	lsl	w2, w3, #4
    bc24:	cmp	x1, #0x10
    bc28:	b.ls	bc48 <__sanitizer_print_stack_trace@@Base+0xaf0>  // b.plast
    bc2c:	sub	x1, x1, #0x10
    bc30:	mov	x2, #0x100                 	// #256
    bc34:	and	x3, x1, #0x3
    bc38:	lsr	x1, x1, #2
    bc3c:	lsl	x2, x2, x1
    bc40:	lsr	x1, x2, #2
    bc44:	madd	w2, w1, w3, w2
    bc48:	sub	w1, w21, w0
    bc4c:	add	x0, x0, #0x100, lsl #12
    bc50:	udiv	w1, w1, w2
    bc54:	add	x1, x1, #0x1
    bc58:	cmp	x0, x1, lsl #4
    bc5c:	lsl	x1, x1, #4
    bc60:	b.ne	bd50 <__sanitizer_print_stack_trace@@Base+0xbf8>  // b.any
    bc64:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bc68:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bc6c:	add	x2, x2, #0x8e8
    bc70:	add	x0, x0, #0x808
    bc74:	mov	x4, #0x0                   	// #0
    bc78:	mov	x3, #0x0                   	// #0
    bc7c:	mov	w1, #0x11e                 	// #286
    bc80:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bc84:	dmb	ish
    bc88:	add	x20, x20, #0xec0
    bc8c:	add	x20, x20, #0x81, lsl #12
    bc90:	strb	wzr, [x20, #40]
    bc94:	b	bab0 <__sanitizer_print_stack_trace@@Base+0x958>
    bc98:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bc9c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bca0:	add	x2, x2, #0x838
    bca4:	add	x0, x0, #0x728
    bca8:	mov	w1, #0xc1                  	// #193
    bcac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bcb0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bcb4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bcb8:	add	x2, x2, #0x860
    bcbc:	add	x0, x0, #0x728
    bcc0:	mov	w1, #0xc2                  	// #194
    bcc4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bcc8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bccc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bcd0:	add	x2, x2, #0x8b8
    bcd4:	add	x0, x0, #0x728
    bcd8:	mov	x4, #0x0                   	// #0
    bcdc:	mov	x3, #0x0                   	// #0
    bce0:	mov	w1, #0x12b                 	// #299
    bce4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bce8:	and	x1, x1, #0xfffffe00
    bcec:	add	x3, x3, x1
    bcf0:	b	bb48 <__sanitizer_print_stack_trace@@Base+0x9f0>
    bcf4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bcf8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bcfc:	add	x2, x2, #0x778
    bd00:	add	x0, x0, #0x6c8
    bd04:	mov	x4, #0x0                   	// #0
    bd08:	mov	x3, #0x0                   	// #0
    bd0c:	mov	w1, #0xc1                  	// #193
    bd10:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bd14:	mov	w2, #0x0                   	// #0
    bd18:	b	bc48 <__sanitizer_print_stack_trace@@Base+0xaf0>
    bd1c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bd20:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bd24:	add	x2, x2, #0x778
    bd28:	add	x0, x0, #0x6c8
    bd2c:	mov	x4, #0x0                   	// #0
    bd30:	mov	x3, #0x0                   	// #0
    bd34:	mov	w1, #0x91                  	// #145
    bd38:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bd3c:	ubfiz	x2, x2, #4, #8
    bd40:	udiv	w0, w1, w2
    bd44:	mul	w0, w0, w2
    bd48:	add	x3, x3, w0, uxtw
    bd4c:	b	bb48 <__sanitizer_print_stack_trace@@Base+0x9f0>
    bd50:	sub	x1, x0, x1
    bd54:	b	ba60 <__sanitizer_print_stack_trace@@Base+0x908>

000000000000bd58 <__sanitizer_get_current_allocated_bytes@@Base>:
    bd58:	str	x30, [sp, #-32]!
    bd5c:	mov	x2, #0x10                  	// #16
    bd60:	mov	w1, #0x0                   	// #0
    bd64:	add	x0, sp, x2
    bd68:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    bd6c:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    bd70:	add	x0, x0, #0xf10
    bd74:	mov	w2, #0x1                   	// #1
    bd78:	ldxrb	w1, [x0]
    bd7c:	stxrb	w3, w2, [x0]
    bd80:	cbnz	w3, bd78 <__sanitizer_get_current_allocated_bytes@@Base+0x20>
    bd84:	dmb	ish
    bd88:	tst	w1, #0xff
    bd8c:	b.eq	bd94 <__sanitizer_get_current_allocated_bytes@@Base+0x3c>  // b.none
    bd90:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    bd94:	ldp	x2, x1, [sp, #16]
    bd98:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    bd9c:	add	x0, x0, #0xef0
    bda0:	mov	x3, x0
    bda4:	nop
    bda8:	ldr	x5, [x0, #16]
    bdac:	ldr	x4, [x0, #24]
    bdb0:	add	x2, x2, x5
    bdb4:	ldr	x0, [x0]
    bdb8:	add	x1, x1, x4
    bdbc:	cmp	x0, x3
    bdc0:	b.ne	bda8 <__sanitizer_get_current_allocated_bytes@@Base+0x50>  // b.any
    bdc4:	cmp	x2, #0x0
    bdc8:	csel	x2, x2, xzr, ge  // ge = tcont
    bdcc:	cmp	x1, #0x0
    bdd0:	csel	x1, x1, xzr, ge  // ge = tcont
    bdd4:	stp	x2, x1, [sp, #16]
    bdd8:	dmb	ish
    bddc:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bde0:	add	x0, x0, #0xec0
    bde4:	add	x0, x0, #0x81, lsl #12
    bde8:	strb	wzr, [x0, #80]
    bdec:	ldr	x0, [sp, #16]
    bdf0:	ldr	x30, [sp], #32
    bdf4:	ret

000000000000bdf8 <__sanitizer_get_heap_size@@Base>:
    bdf8:	str	x30, [sp, #-32]!
    bdfc:	mov	x2, #0x10                  	// #16
    be00:	mov	w1, #0x0                   	// #0
    be04:	add	x0, sp, x2
    be08:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
    be0c:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    be10:	add	x0, x0, #0xf10
    be14:	mov	w2, #0x1                   	// #1
    be18:	ldxrb	w1, [x0]
    be1c:	stxrb	w3, w2, [x0]
    be20:	cbnz	w3, be18 <__sanitizer_get_heap_size@@Base+0x20>
    be24:	dmb	ish
    be28:	tst	w1, #0xff
    be2c:	b.eq	be34 <__sanitizer_get_heap_size@@Base+0x3c>  // b.none
    be30:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    be34:	ldp	x2, x1, [sp, #16]
    be38:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    be3c:	add	x0, x0, #0xef0
    be40:	mov	x3, x0
    be44:	nop
    be48:	ldr	x5, [x0, #16]
    be4c:	ldr	x4, [x0, #24]
    be50:	add	x2, x2, x5
    be54:	ldr	x0, [x0]
    be58:	add	x1, x1, x4
    be5c:	cmp	x0, x3
    be60:	b.ne	be48 <__sanitizer_get_heap_size@@Base+0x50>  // b.any
    be64:	cmp	x2, #0x0
    be68:	csel	x2, x2, xzr, ge  // ge = tcont
    be6c:	cmp	x1, #0x0
    be70:	csel	x1, x1, xzr, ge  // ge = tcont
    be74:	stp	x2, x1, [sp, #16]
    be78:	dmb	ish
    be7c:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    be80:	add	x0, x0, #0xec0
    be84:	add	x0, x0, #0x81, lsl #12
    be88:	strb	wzr, [x0, #80]
    be8c:	ldr	x0, [sp, #24]
    be90:	ldr	x30, [sp], #32
    be94:	ret

000000000000be98 <__sanitizer_get_free_bytes@@Base>:
    be98:	mov	x0, #0x0                   	// #0
    be9c:	ret

000000000000bea0 <__sanitizer_get_unmapped_bytes@@Base>:
    bea0:	mov	x0, #0x0                   	// #0
    bea4:	ret

000000000000bea8 <__sanitizer_get_estimated_allocated_size@@Base>:
    bea8:	ret
    beac:	nop

000000000000beb0 <__sanitizer_get_ownership@@Base>:
    beb0:	stp	x19, x20, [sp, #-32]!
    beb4:	mov	x19, x0
    beb8:	mov	x1, #0xffffffffffff        	// #281474976710655
    bebc:	str	x30, [sp, #16]
    bec0:	cmp	x19, x1
    bec4:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bec8:	b.ls	bf4c <__sanitizer_get_ownership@@Base+0x9c>  // b.plast
    becc:	add	x0, x0, #0xec0
    bed0:	add	x20, x0, #0x80, lsl #12
    bed4:	ldr	x2, [x20, #3520]
    bed8:	sub	x0, x2, #0x1
    bedc:	tst	x0, x19
    bee0:	b.ne	bf00 <__sanitizer_get_ownership@@Base+0x50>  // b.any
    bee4:	sub	x19, x19, x2
    bee8:	add	x19, x19, #0x20
    beec:	cmp	x19, #0x0
    bef0:	cset	w0, ne  // ne = any
    bef4:	ldr	x30, [sp, #16]
    bef8:	ldp	x19, x20, [sp], #32
    befc:	ret
    bf00:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    bf04:	mov	x2, x19
    bf08:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bf0c:	add	x0, x0, #0x798
    bf10:	ldr	x1, [x1, #4008]
    bf14:	ldr	x1, [x1]
    bf18:	bl	22c78 <OnPrint@@Base+0x310>
    bf1c:	ldr	x2, [x20, #3520]
    bf20:	sub	x0, x2, #0x1
    bf24:	tst	x0, x19
    bf28:	b.eq	bee4 <__sanitizer_get_ownership@@Base+0x34>  // b.none
    bf2c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bf30:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bf34:	add	x2, x2, #0x7b0
    bf38:	add	x0, x0, #0x728
    bf3c:	mov	x4, #0x0                   	// #0
    bf40:	mov	x3, #0x0                   	// #0
    bf44:	mov	w1, #0xae                  	// #174
    bf48:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bf4c:	lsr	x3, x19, #32
    bf50:	add	x2, x0, #0xec0
    bf54:	ldr	x1, [x2, x3, lsl #3]
    bf58:	dmb	ish
    bf5c:	cbz	x1, becc <__sanitizer_get_ownership@@Base+0x1c>
    bf60:	lsr	w4, w19, #20
    bf64:	ldrb	w1, [x1, x4]
    bf68:	cbz	w1, becc <__sanitizer_get_ownership@@Base+0x1c>
    bf6c:	ldr	x0, [x2, x3, lsl #3]
    bf70:	dmb	ish
    bf74:	cbz	x0, bfec <__sanitizer_get_ownership@@Base+0x13c>
    bf78:	ldrb	w0, [x0, x4]
    bf7c:	cbz	w0, bfec <__sanitizer_get_ownership@@Base+0x13c>
    bf80:	and	x0, x19, #0xfffffffffff00000
    bf84:	ldr	x1, [x2, x3, lsl #3]
    bf88:	dmb	ish
    bf8c:	cbz	x1, bfe4 <__sanitizer_get_ownership@@Base+0x134>
    bf90:	ldrb	w3, [x1, x4]
    bf94:	mov	w2, #0x200                 	// #512
    bf98:	cmp	w3, #0x35
    bf9c:	and	x1, x3, #0xff
    bfa0:	b.eq	bfcc <__sanitizer_get_ownership@@Base+0x11c>  // b.none
    bfa4:	lsl	w2, w3, #4
    bfa8:	cmp	x1, #0x10
    bfac:	b.ls	bfcc <__sanitizer_get_ownership@@Base+0x11c>  // b.plast
    bfb0:	sub	x1, x1, #0x10
    bfb4:	mov	x2, #0x100                 	// #256
    bfb8:	and	x3, x1, #0x3
    bfbc:	lsr	x1, x1, #2
    bfc0:	lsl	x1, x2, x1
    bfc4:	lsr	x2, x1, #2
    bfc8:	madd	w2, w2, w3, w1
    bfcc:	sub	w19, w19, w0
    bfd0:	add	x0, x0, #0x100, lsl #12
    bfd4:	udiv	w19, w19, w2
    bfd8:	add	x19, x19, #0x1
    bfdc:	sub	x19, x0, x19, lsl #4
    bfe0:	b	beec <__sanitizer_get_ownership@@Base+0x3c>
    bfe4:	mov	w2, #0x0                   	// #0
    bfe8:	b	bfcc <__sanitizer_get_ownership@@Base+0x11c>
    bfec:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bff0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    bff4:	add	x2, x2, #0x778
    bff8:	add	x0, x0, #0x6c8
    bffc:	mov	x4, #0x0                   	// #0
    c000:	mov	x3, #0x0                   	// #0
    c004:	mov	w1, #0x91                  	// #145
    c008:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c00c:	nop

000000000000c010 <__sanitizer_get_allocated_size@@Base>:
    c010:	stp	x19, x20, [sp, #-32]!
    c014:	mov	x19, x0
    c018:	mov	x1, #0xffffffffffff        	// #281474976710655
    c01c:	str	x30, [sp, #16]
    c020:	cmp	x19, x1
    c024:	adrp	x0, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c028:	b.ls	c0ac <__sanitizer_get_allocated_size@@Base+0x9c>  // b.plast
    c02c:	add	x0, x0, #0xec0
    c030:	add	x20, x0, #0x80, lsl #12
    c034:	ldr	x2, [x20, #3520]
    c038:	sub	x0, x2, #0x1
    c03c:	tst	x0, x19
    c040:	b.ne	c060 <__sanitizer_get_allocated_size@@Base+0x50>  // b.any
    c044:	sub	x19, x19, x2
    c048:	add	x19, x19, #0x20
    c04c:	ldr	x0, [x19]
    c050:	lsr	x0, x0, #10
    c054:	ldr	x30, [sp, #16]
    c058:	ldp	x19, x20, [sp], #32
    c05c:	ret
    c060:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c064:	mov	x2, x19
    c068:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c06c:	add	x0, x0, #0x798
    c070:	ldr	x1, [x1, #4008]
    c074:	ldr	x1, [x1]
    c078:	bl	22c78 <OnPrint@@Base+0x310>
    c07c:	ldr	x2, [x20, #3520]
    c080:	sub	x0, x2, #0x1
    c084:	tst	x0, x19
    c088:	b.eq	c044 <__sanitizer_get_allocated_size@@Base+0x34>  // b.none
    c08c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c090:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c094:	add	x2, x2, #0x7b0
    c098:	add	x0, x0, #0x728
    c09c:	mov	x4, #0x0                   	// #0
    c0a0:	mov	x3, #0x0                   	// #0
    c0a4:	mov	w1, #0xae                  	// #174
    c0a8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c0ac:	lsr	x3, x19, #32
    c0b0:	add	x2, x0, #0xec0
    c0b4:	ldr	x1, [x2, x3, lsl #3]
    c0b8:	dmb	ish
    c0bc:	cbz	x1, c02c <__sanitizer_get_allocated_size@@Base+0x1c>
    c0c0:	lsr	w4, w19, #20
    c0c4:	ldrb	w1, [x1, x4]
    c0c8:	cbz	w1, c02c <__sanitizer_get_allocated_size@@Base+0x1c>
    c0cc:	ldr	x0, [x2, x3, lsl #3]
    c0d0:	dmb	ish
    c0d4:	cbz	x0, c15c <__sanitizer_get_allocated_size@@Base+0x14c>
    c0d8:	ldrb	w0, [x0, x4]
    c0dc:	cbz	w0, c15c <__sanitizer_get_allocated_size@@Base+0x14c>
    c0e0:	and	x0, x19, #0xfffffffffff00000
    c0e4:	ldr	x1, [x2, x3, lsl #3]
    c0e8:	dmb	ish
    c0ec:	cbz	x1, c154 <__sanitizer_get_allocated_size@@Base+0x144>
    c0f0:	ldrb	w3, [x1, x4]
    c0f4:	mov	w2, #0x200                 	// #512
    c0f8:	cmp	w3, #0x35
    c0fc:	and	x1, x3, #0xff
    c100:	b.eq	c12c <__sanitizer_get_allocated_size@@Base+0x11c>  // b.none
    c104:	lsl	w2, w3, #4
    c108:	cmp	x1, #0x10
    c10c:	b.ls	c12c <__sanitizer_get_allocated_size@@Base+0x11c>  // b.plast
    c110:	sub	x1, x1, #0x10
    c114:	mov	x2, #0x100                 	// #256
    c118:	and	x3, x1, #0x3
    c11c:	lsr	x1, x1, #2
    c120:	lsl	x1, x2, x1
    c124:	lsr	x2, x1, #2
    c128:	madd	w2, w2, w3, w1
    c12c:	sub	w19, w19, w0
    c130:	add	x1, x0, #0x100, lsl #12
    c134:	mov	x0, #0x0                   	// #0
    c138:	udiv	w19, w19, w2
    c13c:	add	x19, x19, #0x1
    c140:	cmp	x1, x19, lsl #4
    c144:	lsl	x19, x19, #4
    c148:	b.eq	c054 <__sanitizer_get_allocated_size@@Base+0x44>  // b.none
    c14c:	sub	x19, x1, x19
    c150:	b	c04c <__sanitizer_get_allocated_size@@Base+0x3c>
    c154:	mov	w2, #0x0                   	// #0
    c158:	b	c12c <__sanitizer_get_allocated_size@@Base+0x11c>
    c15c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c160:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c164:	add	x2, x2, #0x778
    c168:	add	x0, x0, #0x6c8
    c16c:	mov	x4, #0x0                   	// #0
    c170:	mov	x3, #0x0                   	// #0
    c174:	mov	w1, #0x91                  	// #145
    c178:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c17c:	nop
    c180:	stp	x19, x20, [sp, #-48]!
    c184:	mov	x1, #0xffffffffffff        	// #281474976710655
    c188:	mov	x19, x0
    c18c:	stp	x21, x22, [sp, #16]
    c190:	cmp	x0, x1
    c194:	adrp	x22, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c198:	str	x30, [sp, #32]
    c19c:	b.ls	c368 <__sanitizer_get_allocated_size@@Base+0x358>  // b.plast
    c1a0:	add	x21, x22, #0xec0
    c1a4:	add	x0, x21, #0x81, lsl #12
    c1a8:	ldrb	w3, [x0, #40]
    c1ac:	and	x3, x3, #0xff
    c1b0:	cmp	x3, #0x1
    c1b4:	b.ne	c504 <__sanitizer_get_allocated_size@@Base+0x4f4>  // b.any
    c1b8:	add	x21, x21, #0x80, lsl #12
    c1bc:	ldr	x20, [x21, #3576]
    c1c0:	cbz	x20, c280 <__sanitizer_get_allocated_size@@Base+0x270>
    c1c4:	ldrb	w1, [x21, #3584]
    c1c8:	ldr	x0, [x21, #3528]
    c1cc:	cbz	w1, c298 <__sanitizer_get_allocated_size@@Base+0x288>
    c1d0:	add	x1, x0, x20, lsl #3
    c1d4:	ldr	x2, [x0]
    c1d8:	ldur	x1, [x1, #-8]
    c1dc:	ldr	x3, [x1, #8]
    c1e0:	add	x1, x1, x3
    c1e4:	cmp	x19, x1
    c1e8:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    c1ec:	b.cc	c280 <__sanitizer_get_allocated_size@@Base+0x270>  // b.lo, b.ul, b.last
    c1f0:	sub	x20, x20, #0x1
    c1f4:	mov	x2, #0x0                   	// #0
    c1f8:	b	c214 <__sanitizer_get_allocated_size@@Base+0x204>
    c1fc:	add	x1, x2, x20
    c200:	lsr	x1, x1, #1
    c204:	ldr	x3, [x0, x1, lsl #3]
    c208:	cmp	x3, x19
    c20c:	b.hi	c3f4 <__sanitizer_get_allocated_size@@Base+0x3e4>  // b.pmore
    c210:	mov	x2, x1
    c214:	sub	x1, x20, x2
    c218:	cmp	x1, #0x1
    c21c:	b.hi	c1fc <__sanitizer_get_allocated_size@@Base+0x1ec>  // b.pmore
    c220:	cmp	x2, x20
    c224:	b.cs	c240 <__sanitizer_get_allocated_size@@Base+0x230>  // b.hs, b.nlast
    c228:	add	x3, x2, #0x1
    c22c:	cmp	x3, x20
    c230:	b.ne	c540 <__sanitizer_get_allocated_size@@Base+0x530>  // b.any
    c234:	ldr	x1, [x0, x20, lsl #3]
    c238:	cmp	x1, x19
    c23c:	csel	x2, x2, x20, hi  // hi = pmore
    c240:	ldr	x0, [x0, x2, lsl #3]
    c244:	ldp	x2, x1, [x0]
    c248:	add	x1, x2, x1
    c24c:	cmp	x19, x1
    c250:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    c254:	b.cc	c280 <__sanitizer_get_allocated_size@@Base+0x270>  // b.lo, b.ul, b.last
    c258:	add	x1, x22, #0xec0
    c25c:	add	x1, x1, #0x80, lsl #12
    c260:	ldr	x20, [x1, #3520]
    c264:	sub	x1, x20, #0x1
    c268:	add	x20, x0, x20
    c26c:	tst	x0, x1
    c270:	b.ne	c520 <__sanitizer_get_allocated_size@@Base+0x510>  // b.any
    c274:	cmp	x20, #0x0
    c278:	ccmp	x19, x20, #0x0, ne  // ne = any
    c27c:	b.cs	c300 <__sanitizer_get_allocated_size@@Base+0x2f0>  // b.hs, b.nlast
    c280:	mov	x20, #0x0                   	// #0
    c284:	mov	x0, x20
    c288:	ldp	x21, x22, [sp, #16]
    c28c:	ldr	x30, [sp, #32]
    c290:	ldp	x19, x20, [sp], #48
    c294:	ret
    c298:	mov	x1, x20
    c29c:	mov	w2, #0x0                   	// #0
    c2a0:	bl	f718 <__sancov_lowest_stack@@Base+0x1ee8>
    c2a4:	ldr	x3, [x21, #3576]
    c2a8:	ldr	x0, [x21, #3528]
    c2ac:	cbz	x3, c2cc <__sanitizer_get_allocated_size@@Base+0x2bc>
    c2b0:	mov	x1, #0x0                   	// #0
    c2b4:	nop
    c2b8:	ldr	x2, [x0, x1, lsl #3]
    c2bc:	str	x1, [x2, #24]
    c2c0:	add	x1, x1, #0x1
    c2c4:	cmp	x1, x3
    c2c8:	b.ne	c2b8 <__sanitizer_get_allocated_size@@Base+0x2a8>  // b.any
    c2cc:	add	x1, x22, #0xec0
    c2d0:	mov	w2, #0x1                   	// #1
    c2d4:	add	x1, x1, #0x80, lsl #12
    c2d8:	strb	w2, [x1, #3584]
    c2dc:	add	x1, x0, x20, lsl #3
    c2e0:	ldr	x2, [x0]
    c2e4:	ldur	x1, [x1, #-8]
    c2e8:	ldr	x3, [x1, #8]
    c2ec:	add	x1, x1, x3
    c2f0:	cmp	x19, x1
    c2f4:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    c2f8:	b.cs	c1f0 <__sanitizer_get_allocated_size@@Base+0x1e0>  // b.hs, b.nlast
    c2fc:	b	c280 <__sanitizer_get_allocated_size@@Base+0x270>
    c300:	mov	x0, #0xffffffffffff        	// #281474976710655
    c304:	cmp	x20, x0
    c308:	b.ls	c3fc <__sanitizer_get_allocated_size@@Base+0x3ec>  // b.plast
    c30c:	add	x22, x22, #0xec0
    c310:	add	x22, x22, #0x80, lsl #12
    c314:	ldr	x0, [x22, #3520]
    c318:	sub	x1, x0, #0x1
    c31c:	tst	x1, x20
    c320:	b.ne	c4b8 <__sanitizer_get_allocated_size@@Base+0x4a8>  // b.any
    c324:	sub	x0, x20, x0
    c328:	add	x0, x0, #0x20
    c32c:	ldrb	w1, [x0]
    c330:	cbz	w1, c280 <__sanitizer_get_allocated_size@@Base+0x270>
    c334:	ldr	x0, [x0]
    c338:	lsr	x0, x0, #10
    c33c:	add	x1, x0, x20
    c340:	cmp	x1, x19
    c344:	b.hi	c284 <__sanitizer_get_allocated_size@@Base+0x274>  // b.pmore
    c348:	cmp	x0, #0x8
    c34c:	b.ne	c280 <__sanitizer_get_allocated_size@@Base+0x270>  // b.any
    c350:	add	x0, x20, #0x8
    c354:	cmp	x19, x0
    c358:	b.ne	c280 <__sanitizer_get_allocated_size@@Base+0x270>  // b.any
    c35c:	ldr	x0, [x20]
    c360:	cbz	x0, c284 <__sanitizer_get_allocated_size@@Base+0x274>
    c364:	b	c280 <__sanitizer_get_allocated_size@@Base+0x270>
    c368:	lsr	x2, x0, #32
    c36c:	add	x1, x22, #0xec0
    c370:	ldr	x0, [x1, x2, lsl #3]
    c374:	dmb	ish
    c378:	cbz	x0, c1a0 <__sanitizer_get_allocated_size@@Base+0x190>
    c37c:	lsr	w3, w19, #20
    c380:	ldrb	w0, [x0, x3]
    c384:	cbz	w0, c1a0 <__sanitizer_get_allocated_size@@Base+0x190>
    c388:	ldr	x0, [x1, x2, lsl #3]
    c38c:	dmb	ish
    c390:	cbz	x0, c568 <__sanitizer_get_allocated_size@@Base+0x558>
    c394:	ldrb	w0, [x0, x3]
    c398:	cbz	w0, c568 <__sanitizer_get_allocated_size@@Base+0x558>
    c39c:	and	x20, x19, #0xfffffffffff00000
    c3a0:	ldr	x0, [x1, x2, lsl #3]
    c3a4:	dmb	ish
    c3a8:	sub	w1, w19, w20
    c3ac:	cbz	x0, c274 <__sanitizer_get_allocated_size@@Base+0x264>
    c3b0:	ldrb	w2, [x0, x3]
    c3b4:	cmp	w2, #0x35
    c3b8:	and	x0, x2, #0xff
    c3bc:	b.eq	c55c <__sanitizer_get_allocated_size@@Base+0x54c>  // b.none
    c3c0:	cmp	x0, #0x10
    c3c4:	b.ls	c5b0 <__sanitizer_get_allocated_size@@Base+0x5a0>  // b.plast
    c3c8:	sub	x0, x0, #0x10
    c3cc:	mov	x2, #0x100                 	// #256
    c3d0:	and	x3, x0, #0x3
    c3d4:	lsr	x0, x0, #2
    c3d8:	lsl	x2, x2, x0
    c3dc:	lsr	x0, x2, #2
    c3e0:	madd	x0, x0, x3, x2
    c3e4:	udiv	w1, w1, w0
    c3e8:	mul	w1, w1, w0
    c3ec:	add	x20, x20, x1
    c3f0:	b	c274 <__sanitizer_get_allocated_size@@Base+0x264>
    c3f4:	sub	x20, x1, #0x1
    c3f8:	b	c214 <__sanitizer_get_allocated_size@@Base+0x204>
    c3fc:	lsr	x2, x20, #32
    c400:	add	x1, x22, #0xec0
    c404:	ldr	x0, [x1, x2, lsl #3]
    c408:	dmb	ish
    c40c:	cbz	x0, c30c <__sanitizer_get_allocated_size@@Base+0x2fc>
    c410:	lsr	w3, w20, #20
    c414:	ldrb	w0, [x0, x3]
    c418:	cbz	w0, c30c <__sanitizer_get_allocated_size@@Base+0x2fc>
    c41c:	ldr	x0, [x1, x2, lsl #3]
    c420:	dmb	ish
    c424:	cbz	x0, c590 <__sanitizer_get_allocated_size@@Base+0x580>
    c428:	ldrb	w0, [x0, x3]
    c42c:	cbz	w0, c590 <__sanitizer_get_allocated_size@@Base+0x580>
    c430:	and	x0, x20, #0xfffffffffff00000
    c434:	ldr	x1, [x1, x2, lsl #3]
    c438:	dmb	ish
    c43c:	cbz	x1, c588 <__sanitizer_get_allocated_size@@Base+0x578>
    c440:	ldrb	w3, [x1, x3]
    c444:	mov	w2, #0x200                 	// #512
    c448:	cmp	w3, #0x35
    c44c:	and	x1, x3, #0xff
    c450:	b.eq	c47c <__sanitizer_get_allocated_size@@Base+0x46c>  // b.none
    c454:	lsl	w2, w3, #4
    c458:	cmp	x1, #0x10
    c45c:	b.ls	c47c <__sanitizer_get_allocated_size@@Base+0x46c>  // b.plast
    c460:	sub	x1, x1, #0x10
    c464:	mov	x2, #0x100                 	// #256
    c468:	and	x3, x1, #0x3
    c46c:	lsr	x1, x1, #2
    c470:	lsl	x2, x2, x1
    c474:	lsr	x1, x2, #2
    c478:	madd	w2, w1, w3, w2
    c47c:	sub	w1, w20, w0
    c480:	add	x0, x0, #0x100, lsl #12
    c484:	udiv	w1, w1, w2
    c488:	add	x1, x1, #0x1
    c48c:	cmp	x0, x1, lsl #4
    c490:	lsl	x1, x1, #4
    c494:	b.ne	c5c4 <__sanitizer_get_allocated_size@@Base+0x5b4>  // b.any
    c498:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c49c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c4a0:	add	x2, x2, #0x8e8
    c4a4:	add	x0, x0, #0x808
    c4a8:	mov	x4, #0x0                   	// #0
    c4ac:	mov	x3, #0x0                   	// #0
    c4b0:	mov	w1, #0xef                  	// #239
    c4b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c4b8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c4bc:	mov	x2, x20
    c4c0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c4c4:	add	x0, x0, #0x798
    c4c8:	ldr	x1, [x1, #4008]
    c4cc:	ldr	x1, [x1]
    c4d0:	bl	22c78 <OnPrint@@Base+0x310>
    c4d4:	ldr	x0, [x22, #3520]
    c4d8:	sub	x1, x0, #0x1
    c4dc:	tst	x1, x20
    c4e0:	b.eq	c324 <__sanitizer_get_allocated_size@@Base+0x314>  // b.none
    c4e4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c4e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c4ec:	add	x2, x2, #0x7b0
    c4f0:	add	x0, x0, #0x728
    c4f4:	mov	x4, #0x0                   	// #0
    c4f8:	mov	x3, #0x0                   	// #0
    c4fc:	mov	w1, #0xae                  	// #174
    c500:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c504:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c508:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c50c:	add	x2, x2, #0x8f8
    c510:	add	x0, x0, #0x930
    c514:	mov	x4, #0x1                   	// #1
    c518:	mov	w1, #0x2a                  	// #42
    c51c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c520:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c524:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c528:	add	x2, x2, #0x8b8
    c52c:	add	x0, x0, #0x728
    c530:	mov	x4, #0x0                   	// #0
    c534:	mov	x3, #0x0                   	// #0
    c538:	mov	w1, #0x12b                 	// #299
    c53c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c540:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c544:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c548:	mov	x4, x20
    c54c:	add	x2, x2, #0x970
    c550:	add	x0, x0, #0x728
    c554:	mov	w1, #0xea                  	// #234
    c558:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c55c:	and	x1, x1, #0xfffffe00
    c560:	add	x20, x20, x1
    c564:	b	c274 <__sanitizer_get_allocated_size@@Base+0x264>
    c568:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c56c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c570:	add	x2, x2, #0x778
    c574:	add	x0, x0, #0x6c8
    c578:	mov	x4, #0x0                   	// #0
    c57c:	mov	x3, #0x0                   	// #0
    c580:	mov	w1, #0xc1                  	// #193
    c584:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c588:	mov	w2, #0x0                   	// #0
    c58c:	b	c47c <__sanitizer_get_allocated_size@@Base+0x46c>
    c590:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c594:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c598:	add	x2, x2, #0x778
    c59c:	add	x0, x0, #0x6c8
    c5a0:	mov	x4, #0x0                   	// #0
    c5a4:	mov	x3, #0x0                   	// #0
    c5a8:	mov	w1, #0x91                  	// #145
    c5ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c5b0:	ubfiz	x2, x2, #4, #8
    c5b4:	udiv	w0, w1, w2
    c5b8:	mul	w0, w0, w2
    c5bc:	add	x20, x20, w0, uxtw
    c5c0:	b	c274 <__sanitizer_get_allocated_size@@Base+0x264>
    c5c4:	sub	x0, x0, x1
    c5c8:	b	c32c <__sanitizer_get_allocated_size@@Base+0x31c>
    c5cc:	nop
    c5d0:	stp	x19, x20, [sp, #-96]!
    c5d4:	mov	x19, #0x0                   	// #0
    c5d8:	stp	x21, x22, [sp, #16]
    c5dc:	mov	x21, x0
    c5e0:	mov	x22, x1
    c5e4:	stp	x23, x24, [sp, #32]
    c5e8:	stp	x25, x26, [sp, #48]
    c5ec:	mov	x26, #0x100                 	// #256
    c5f0:	mov	x25, #0x100000              	// #1048576
    c5f4:	stp	x27, x28, [sp, #64]
    c5f8:	adrp	x27, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c5fc:	add	x28, x27, #0xec0
    c600:	str	x30, [sp, #80]
    c604:	b	c618 <__sanitizer_get_allocated_size@@Base+0x608>
    c608:	add	x19, x19, #0x1
    c60c:	mov	x0, #0x10000000            	// #268435456
    c610:	cmp	x19, x0
    c614:	b.eq	c6bc <__sanitizer_get_allocated_size@@Base+0x6ac>  // b.none
    c618:	lsr	x1, x19, #12
    c61c:	ldr	x0, [x28, x1, lsl #3]
    c620:	dmb	ish
    c624:	cbz	x0, c608 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c628:	and	x2, x19, #0xfff
    c62c:	ldrb	w0, [x0, x2]
    c630:	cbz	w0, c608 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c634:	ldr	x0, [x28, x1, lsl #3]
    c638:	dmb	ish
    c63c:	cbz	x0, c608 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c640:	ldrb	w24, [x0, x2]
    c644:	cmp	w24, #0x35
    c648:	and	x0, x24, #0xff
    c64c:	b.eq	c6ac <__sanitizer_get_allocated_size@@Base+0x69c>  // b.none
    c650:	cmp	x0, #0x10
    c654:	b.ls	c794 <__sanitizer_get_allocated_size@@Base+0x784>  // b.plast
    c658:	sub	x0, x0, #0x10
    c65c:	and	x1, x0, #0x3
    c660:	lsr	x0, x0, #2
    c664:	lsl	x0, x26, x0
    c668:	lsr	x24, x0, #2
    c66c:	madd	x24, x24, x1, x0
    c670:	add	x23, x24, #0x10
    c674:	udiv	x23, x25, x23
    c678:	mul	x23, x23, x24
    c67c:	lsl	x20, x19, #20
    c680:	add	x23, x20, x23
    c684:	cmp	x23, x20
    c688:	b.ls	c608 <__sanitizer_get_allocated_size@@Base+0x5f8>  // b.plast
    c68c:	nop
    c690:	mov	x0, x20
    c694:	mov	x1, x22
    c698:	add	x20, x20, x24
    c69c:	blr	x21
    c6a0:	cmp	x23, x20
    c6a4:	b.hi	c690 <__sanitizer_get_allocated_size@@Base+0x680>  // b.pmore
    c6a8:	b	c608 <__sanitizer_get_allocated_size@@Base+0x5f8>
    c6ac:	mov	x23, #0x8200                	// #33280
    c6b0:	mov	x24, #0x200                 	// #512
    c6b4:	movk	x23, #0xf, lsl #16
    c6b8:	b	c67c <__sanitizer_get_allocated_size@@Base+0x66c>
    c6bc:	add	x19, x27, #0xec0
    c6c0:	add	x19, x19, #0x80, lsl #12
    c6c4:	ldrb	w0, [x19, #3584]
    c6c8:	ldr	x1, [x19, #3576]
    c6cc:	cbnz	w0, c714 <__sanitizer_get_allocated_size@@Base+0x704>
    c6d0:	ldr	x0, [x19, #3528]
    c6d4:	mov	w2, #0x0                   	// #0
    c6d8:	bl	f718 <__sancov_lowest_stack@@Base+0x1ee8>
    c6dc:	ldr	x1, [x19, #3576]
    c6e0:	cbz	x1, c704 <__sanitizer_get_allocated_size@@Base+0x6f4>
    c6e4:	ldr	x4, [x19, #3528]
    c6e8:	mov	x0, #0x0                   	// #0
    c6ec:	nop
    c6f0:	ldr	x2, [x4, x0, lsl #3]
    c6f4:	str	x0, [x2, #24]
    c6f8:	add	x0, x0, #0x1
    c6fc:	cmp	x0, x1
    c700:	b.ne	c6f0 <__sanitizer_get_allocated_size@@Base+0x6e0>  // b.any
    c704:	add	x0, x27, #0xec0
    c708:	mov	w2, #0x1                   	// #1
    c70c:	add	x0, x0, #0x80, lsl #12
    c710:	strb	w2, [x0, #3584]
    c714:	cbz	x1, c778 <__sanitizer_get_allocated_size@@Base+0x768>
    c718:	add	x3, x27, #0xec0
    c71c:	mov	x19, #0x0                   	// #0
    c720:	add	x3, x3, #0x80, lsl #12
    c724:	mov	x23, x3
    c728:	ldr	x1, [x3, #3528]
    c72c:	ldr	x0, [x23, #3520]
    c730:	ldr	x20, [x1, x19, lsl #3]
    c734:	sub	x1, x0, #0x1
    c738:	tst	x1, x20
    c73c:	b.ne	c7a8 <__sanitizer_get_allocated_size@@Base+0x798>  // b.any
    c740:	mov	x1, x22
    c744:	add	x0, x20, x0
    c748:	blr	x21
    c74c:	ldr	x1, [x23, #3528]
    c750:	ldr	x3, [x1, x19, lsl #3]
    c754:	cmp	x3, x20
    c758:	b.ne	c7c8 <__sanitizer_get_allocated_size@@Base+0x7b8>  // b.any
    c75c:	ldr	x3, [x3, #24]
    c760:	cmp	x3, x19
    c764:	b.ne	c7e4 <__sanitizer_get_allocated_size@@Base+0x7d4>  // b.any
    c768:	ldr	x0, [x23, #3576]
    c76c:	add	x19, x19, #0x1
    c770:	cmp	x0, x19
    c774:	b.hi	c72c <__sanitizer_get_allocated_size@@Base+0x71c>  // b.pmore
    c778:	ldp	x21, x22, [sp, #16]
    c77c:	ldp	x23, x24, [sp, #32]
    c780:	ldp	x25, x26, [sp, #48]
    c784:	ldp	x27, x28, [sp, #64]
    c788:	ldr	x30, [sp, #80]
    c78c:	ldp	x19, x20, [sp], #96
    c790:	ret
    c794:	ubfiz	x24, x24, #4, #8
    c798:	add	x23, x24, #0x10
    c79c:	udiv	x23, x25, x23
    c7a0:	mul	x23, x23, x24
    c7a4:	b	c67c <__sanitizer_get_allocated_size@@Base+0x66c>
    c7a8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c7ac:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c7b0:	add	x2, x2, #0x8b8
    c7b4:	add	x0, x0, #0x728
    c7b8:	mov	x4, #0x0                   	// #0
    c7bc:	mov	x3, #0x0                   	// #0
    c7c0:	mov	w1, #0x12b                 	// #299
    c7c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c7c8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c7cc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c7d0:	mov	x4, x20
    c7d4:	add	x2, x2, #0x988
    c7d8:	add	x0, x0, #0x728
    c7dc:	mov	w1, #0x115                 	// #277
    c7e0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c7e4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c7e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c7ec:	mov	x4, x19
    c7f0:	add	x2, x2, #0x9a0
    c7f4:	add	x0, x0, #0x728
    c7f8:	mov	w1, #0x116                 	// #278
    c7fc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c800:	stp	x19, x20, [sp, #-64]!
    c804:	mov	x20, x2
    c808:	stp	x21, x22, [sp, #16]
    c80c:	stp	x23, x24, [sp, #32]
    c810:	mov	x23, x0
    c814:	and	w24, w3, #0xff
    c818:	str	x30, [sp, #56]
    c81c:	cbz	x1, c9a0 <__sanitizer_get_allocated_size@@Base+0x990>
    c820:	mov	x21, #0x100000000           	// #4294967296
    c824:	mov	x19, x1
    c828:	cmp	x1, x21
    c82c:	b.hi	c968 <__sanitizer_get_allocated_size@@Base+0x958>  // b.pmore
    c830:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    c834:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c838:	add	x22, x21, #0xec0
    c83c:	mov	x1, x0
    c840:	mov	x3, x20
    c844:	mov	x0, x22
    c848:	mov	x2, x19
    c84c:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    c850:	mov	x20, x0
    c854:	cbz	x0, c9f8 <__sanitizer_get_allocated_size@@Base+0x9e8>
    c858:	cbnz	w24, c928 <__sanitizer_get_allocated_size@@Base+0x918>
    c85c:	mov	x0, #0xffffffffffff        	// #281474976710655
    c860:	cmp	x20, x0
    c864:	b.hi	c894 <__sanitizer_get_allocated_size@@Base+0x884>  // b.pmore
    c868:	lsr	x24, x20, #20
    c86c:	str	x25, [sp, #48]
    c870:	lsr	x25, x20, #32
    c874:	add	x1, x21, #0xec0
    c878:	ldr	x0, [x1, x25, lsl #3]
    c87c:	dmb	ish
    c880:	cbz	x0, c890 <__sanitizer_get_allocated_size@@Base+0x880>
    c884:	and	x24, x24, #0xfff
    c888:	ldrb	w0, [x0, x24]
    c88c:	cbnz	w0, ca18 <__sanitizer_get_allocated_size@@Base+0xa08>
    c890:	ldr	x25, [sp, #48]
    c894:	add	x21, x21, #0xec0
    c898:	add	x22, x21, #0x80, lsl #12
    c89c:	ldr	x21, [x22, #3520]
    c8a0:	sub	x0, x21, #0x1
    c8a4:	tst	x20, x0
    c8a8:	b.ne	c9a8 <__sanitizer_get_allocated_size@@Base+0x998>  // b.any
    c8ac:	sub	x21, x20, x21
    c8b0:	add	x21, x21, #0x20
    c8b4:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    c8b8:	mov	w2, w0
    c8bc:	ldrb	w3, [x21, #1]
    c8c0:	neg	w2, w2
    c8c4:	ldp	x0, x1, [x23]
    c8c8:	bfxil	w3, w2, #0, #2
    c8cc:	strb	w3, [x21, #1]
    c8d0:	bl	24410 <OnPrint@@Base+0x1aa8>
    c8d4:	str	w0, [x21, #8]
    c8d8:	ldr	x2, [x21]
    c8dc:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c8e0:	mov	w3, #0x1                   	// #1
    c8e4:	ldr	x1, [x1, #3488]
    c8e8:	bfi	x2, x19, #10, #54
    c8ec:	str	x2, [x21]
    c8f0:	strb	w3, [x21]
    c8f4:	cbz	x1, c904 <__sanitizer_get_allocated_size@@Base+0x8f4>
    c8f8:	mov	x1, x19
    c8fc:	mov	x0, x20
    c900:	bl	6780 <__sanitizer_malloc_hook@plt>
    c904:	mov	x1, x19
    c908:	mov	x0, x20
    c90c:	bl	16018 <__sancov_default_options@@Base+0x3548>
    c910:	mov	x0, x20
    c914:	ldp	x21, x22, [sp, #16]
    c918:	ldp	x23, x24, [sp, #32]
    c91c:	ldr	x30, [sp, #56]
    c920:	ldp	x19, x20, [sp], #64
    c924:	ret
    c928:	mov	x1, #0xffffffffffff        	// #281474976710655
    c92c:	cmp	x0, x1
    c930:	b.hi	c894 <__sanitizer_get_allocated_size@@Base+0x884>  // b.pmore
    c934:	lsr	x24, x0, #20
    c938:	str	x25, [sp, #48]
    c93c:	lsr	x25, x0, #32
    c940:	ldr	x1, [x22, x25, lsl #3]
    c944:	dmb	ish
    c948:	cbz	x1, c874 <__sanitizer_get_allocated_size@@Base+0x864>
    c94c:	and	x2, x24, #0xfff
    c950:	ldrb	w1, [x1, x2]
    c954:	cbz	w1, c874 <__sanitizer_get_allocated_size@@Base+0x864>
    c958:	mov	x2, x19
    c95c:	mov	w1, #0x0                   	// #0
    c960:	bl	6870 <memset@plt>
    c964:	b	c874 <__sanitizer_get_allocated_size@@Base+0x864>
    c968:	bl	12f00 <__sancov_default_options@@Base+0x430>
    c96c:	tst	w0, #0xff
    c970:	b.eq	cadc <__sanitizer_get_allocated_size@@Base+0xacc>  // b.none
    c974:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c978:	mov	x1, x19
    c97c:	add	x0, x0, #0x9c8
    c980:	mov	x20, #0x0                   	// #0
    c984:	bl	22d00 <OnPrint@@Base+0x398>
    c988:	mov	x0, x20
    c98c:	ldp	x21, x22, [sp, #16]
    c990:	ldp	x23, x24, [sp, #32]
    c994:	ldr	x30, [sp, #56]
    c998:	ldp	x19, x20, [sp], #64
    c99c:	ret
    c9a0:	mov	x19, #0x1                   	// #1
    c9a4:	b	c830 <__sanitizer_get_allocated_size@@Base+0x820>
    c9a8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c9ac:	mov	x2, x20
    c9b0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c9b4:	add	x0, x0, #0x798
    c9b8:	ldr	x1, [x1, #4008]
    c9bc:	ldr	x1, [x1]
    c9c0:	bl	22c78 <OnPrint@@Base+0x310>
    c9c4:	ldr	x21, [x22, #3520]
    c9c8:	sub	x0, x21, #0x1
    c9cc:	tst	x20, x0
    c9d0:	b.eq	c8ac <__sanitizer_get_allocated_size@@Base+0x89c>  // b.none
    c9d4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c9d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    c9dc:	add	x2, x2, #0x7b0
    c9e0:	add	x0, x0, #0x728
    c9e4:	mov	x4, #0x0                   	// #0
    c9e8:	mov	x3, #0x0                   	// #0
    c9ec:	mov	w1, #0xae                  	// #174
    c9f0:	str	x25, [sp, #48]
    c9f4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c9f8:	bl	12ef0 <__sancov_default_options@@Base+0x420>
    c9fc:	bl	12f00 <__sancov_default_options@@Base+0x430>
    ca00:	tst	w0, #0xff
    ca04:	b.ne	c988 <__sanitizer_get_allocated_size@@Base+0x978>  // b.any
    ca08:	mov	x1, x23
    ca0c:	mov	x0, x19
    ca10:	str	x25, [sp, #48]
    ca14:	bl	15668 <__sancov_default_options@@Base+0x2b98>
    ca18:	ldr	x0, [x1, x25, lsl #3]
    ca1c:	dmb	ish
    ca20:	cbz	x0, cabc <__sanitizer_get_allocated_size@@Base+0xaac>
    ca24:	ldrb	w0, [x0, x24]
    ca28:	cbz	w0, cabc <__sanitizer_get_allocated_size@@Base+0xaac>
    ca2c:	and	x21, x20, #0xfffffffffff00000
    ca30:	ldr	x0, [x1, x25, lsl #3]
    ca34:	dmb	ish
    ca38:	cbz	x0, cab4 <__sanitizer_get_allocated_size@@Base+0xaa4>
    ca3c:	ldrb	w0, [x0, x24]
    ca40:	mov	w2, #0x200                 	// #512
    ca44:	cmp	w0, #0x35
    ca48:	and	x1, x0, #0xff
    ca4c:	b.eq	ca78 <__sanitizer_get_allocated_size@@Base+0xa68>  // b.none
    ca50:	lsl	w2, w0, #4
    ca54:	cmp	x1, #0x10
    ca58:	b.ls	ca78 <__sanitizer_get_allocated_size@@Base+0xa68>  // b.plast
    ca5c:	sub	x1, x1, #0x10
    ca60:	mov	x2, #0x100                 	// #256
    ca64:	and	x3, x1, #0x3
    ca68:	lsr	x1, x1, #2
    ca6c:	lsl	x1, x2, x1
    ca70:	lsr	x0, x1, #2
    ca74:	madd	w2, w0, w3, w1
    ca78:	sub	w0, w20, w21
    ca7c:	add	x21, x21, #0x100, lsl #12
    ca80:	udiv	w0, w0, w2
    ca84:	add	x0, x0, #0x1
    ca88:	cmp	x21, x0, lsl #4
    ca8c:	lsl	x0, x0, #4
    ca90:	b.ne	caf0 <__sanitizer_get_allocated_size@@Base+0xae0>  // b.any
    ca94:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ca98:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ca9c:	add	x2, x2, #0x8e8
    caa0:	add	x0, x0, #0x808
    caa4:	mov	x4, #0x0                   	// #0
    caa8:	mov	x3, #0x0                   	// #0
    caac:	mov	w1, #0x3a                  	// #58
    cab0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cab4:	mov	w2, #0x0                   	// #0
    cab8:	b	ca78 <__sanitizer_get_allocated_size@@Base+0xa68>
    cabc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cac0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cac4:	add	x2, x2, #0x778
    cac8:	add	x0, x0, #0x6c8
    cacc:	mov	x4, #0x0                   	// #0
    cad0:	mov	x3, #0x0                   	// #0
    cad4:	mov	w1, #0x91                  	// #145
    cad8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cadc:	mov	x2, x23
    cae0:	mov	x1, x21
    cae4:	mov	x0, x19
    cae8:	str	x25, [sp, #48]
    caec:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    caf0:	sub	x21, x21, x0
    caf4:	ldr	x25, [sp, #48]
    caf8:	b	c8b4 <__sanitizer_get_allocated_size@@Base+0x8a4>
    cafc:	nop
    cb00:	stp	x19, x20, [sp, #-48]!
    cb04:	mov	x19, x1
    cb08:	str	x30, [sp, #24]
    cb0c:	cbnz	x1, cb34 <__sanitizer_get_allocated_size@@Base+0xb24>
    cb10:	str	x3, [sp, #40]
    cb14:	bl	12f00 <__sancov_default_options@@Base+0x430>
    cb18:	tst	w0, #0xff
    cb1c:	mov	w0, #0x16                  	// #22
    cb20:	ldr	x3, [sp, #40]
    cb24:	b.eq	cbbc <__sanitizer_get_allocated_size@@Base+0xbac>  // b.none
    cb28:	ldr	x30, [sp, #24]
    cb2c:	ldp	x19, x20, [sp], #48
    cb30:	ret
    cb34:	str	x21, [sp, #16]
    cb38:	sub	x21, x1, #0x1
    cb3c:	mov	x20, x0
    cb40:	orr	x0, x21, #0x7
    cb44:	tst	x0, x1
    cb48:	b.eq	cb54 <__sanitizer_get_allocated_size@@Base+0xb44>  // b.none
    cb4c:	ldr	x21, [sp, #16]
    cb50:	b	cb10 <__sanitizer_get_allocated_size@@Base+0xb00>
    cb54:	mov	x1, x2
    cb58:	mov	x0, x3
    cb5c:	mov	x2, x19
    cb60:	mov	w3, #0x1                   	// #1
    cb64:	bl	c800 <__sanitizer_get_allocated_size@@Base+0x7f0>
    cb68:	mov	x1, x0
    cb6c:	cbz	x0, cb90 <__sanitizer_get_allocated_size@@Base+0xb80>
    cb70:	tst	x0, x21
    cb74:	b.ne	cb9c <__sanitizer_get_allocated_size@@Base+0xb8c>  // b.any
    cb78:	ldr	x21, [sp, #16]
    cb7c:	str	x1, [x20]
    cb80:	mov	w0, #0x0                   	// #0
    cb84:	ldr	x30, [sp, #24]
    cb88:	ldp	x19, x20, [sp], #48
    cb8c:	ret
    cb90:	mov	w0, #0xc                   	// #12
    cb94:	ldr	x21, [sp, #16]
    cb98:	b	cb28 <__sanitizer_get_allocated_size@@Base+0xb18>
    cb9c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cba0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cba4:	add	x2, x2, #0xa00
    cba8:	add	x0, x0, #0x808
    cbac:	mov	x4, #0x0                   	// #0
    cbb0:	mov	x3, #0x0                   	// #0
    cbb4:	mov	w1, #0x99                  	// #153
    cbb8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cbbc:	mov	x1, x3
    cbc0:	mov	x0, x19
    cbc4:	str	x21, [sp, #16]
    cbc8:	bl	155c0 <__sancov_default_options@@Base+0x2af0>
    cbcc:	nop
    cbd0:	stp	x19, x20, [sp, #-32]!
    cbd4:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cbd8:	mov	x19, x0
    cbdc:	ldr	x20, [x20, #4000]
    cbe0:	stp	x21, x30, [sp, #16]
    cbe4:	mov	x21, x1
    cbe8:	ldr	x2, [x20]
    cbec:	cbz	x2, cc3c <__sanitizer_get_allocated_size@@Base+0xc2c>
    cbf0:	sub	x3, x2, #0x1
    cbf4:	tst	x2, x3
    cbf8:	b.ne	cc54 <__sanitizer_get_allocated_size@@Base+0xc44>  // b.any
    cbfc:	add	x3, x19, x3
    cc00:	neg	x1, x2
    cc04:	and	x1, x3, x1
    cc08:	cmp	x19, x1
    cc0c:	b.hi	cc64 <__sanitizer_get_allocated_size@@Base+0xc54>  // b.pmore
    cc10:	cmp	x19, #0x0
    cc14:	mov	x0, x21
    cc18:	csel	x1, x1, x2, ne  // ne = any
    cc1c:	mov	w3, #0x1                   	// #1
    cc20:	bl	c800 <__sanitizer_get_allocated_size@@Base+0x7f0>
    cc24:	mov	x20, x0
    cc28:	cbz	x0, cc8c <__sanitizer_get_allocated_size@@Base+0xc7c>
    cc2c:	mov	x0, x20
    cc30:	ldp	x21, x30, [sp, #16]
    cc34:	ldp	x19, x20, [sp], #32
    cc38:	ret
    cc3c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    cc40:	mov	x2, x0
    cc44:	str	x0, [x20]
    cc48:	sub	x3, x2, #0x1
    cc4c:	tst	x2, x3
    cc50:	b.eq	cbfc <__sanitizer_get_allocated_size@@Base+0xbec>  // b.none
    cc54:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    cc58:	add	x0, x0, #0x6e8
    cc5c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    cc60:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    cc64:	bl	6ac0 <__errno_location@plt>
    cc68:	mov	x20, #0x0                   	// #0
    cc6c:	mov	w1, #0xc                   	// #12
    cc70:	str	w1, [x0]
    cc74:	bl	12f00 <__sancov_default_options@@Base+0x430>
    cc78:	tst	w0, #0xff
    cc7c:	b.ne	cc2c <__sanitizer_get_allocated_size@@Base+0xc1c>  // b.any
    cc80:	mov	x1, x21
    cc84:	mov	x0, x19
    cc88:	bl	154a0 <__sancov_default_options@@Base+0x29d0>
    cc8c:	bl	15438 <__sancov_default_options@@Base+0x2968>
    cc90:	b	cc2c <__sanitizer_get_allocated_size@@Base+0xc1c>
    cc94:	nop
    cc98:	stp	x19, x20, [sp, #-64]!
    cc9c:	stp	x23, x24, [sp, #32]
    cca0:	mov	x23, x1
    cca4:	str	x30, [sp, #56]
    cca8:	cbz	x0, ce20 <__sanitizer_get_allocated_size@@Base+0xe10>
    ccac:	mov	x20, #0x100000000           	// #4294967296
    ccb0:	mov	x19, x0
    ccb4:	cmp	x0, x20
    ccb8:	b.hi	cdf8 <__sanitizer_get_allocated_size@@Base+0xde8>  // b.pmore
    ccbc:	stp	x21, x22, [sp, #16]
    ccc0:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    ccc4:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ccc8:	add	x22, x21, #0xec0
    cccc:	mov	x1, x0
    ccd0:	mov	x2, x19
    ccd4:	mov	x0, x22
    ccd8:	mov	x3, #0x1                   	// #1
    ccdc:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    cce0:	mov	x20, x0
    cce4:	cbz	x0, ce3c <__sanitizer_get_allocated_size@@Base+0xe2c>
    cce8:	mov	x1, #0xffffffffffff        	// #281474976710655
    ccec:	cmp	x0, x1
    ccf0:	b.hi	cd38 <__sanitizer_get_allocated_size@@Base+0xd28>  // b.pmore
    ccf4:	lsr	x24, x0, #20
    ccf8:	str	x25, [sp, #48]
    ccfc:	lsr	x25, x0, #32
    cd00:	ldr	x1, [x22, x25, lsl #3]
    cd04:	dmb	ish
    cd08:	cbz	x1, cd18 <__sanitizer_get_allocated_size@@Base+0xd08>
    cd0c:	and	x2, x24, #0xfff
    cd10:	ldrb	w1, [x1, x2]
    cd14:	cbnz	w1, ce2c <__sanitizer_get_allocated_size@@Base+0xe1c>
    cd18:	add	x1, x21, #0xec0
    cd1c:	ldr	x0, [x1, x25, lsl #3]
    cd20:	dmb	ish
    cd24:	cbz	x0, cd34 <__sanitizer_get_allocated_size@@Base+0xd24>
    cd28:	and	x24, x24, #0xfff
    cd2c:	ldrb	w0, [x0, x24]
    cd30:	cbnz	w0, ce54 <__sanitizer_get_allocated_size@@Base+0xe44>
    cd34:	ldr	x25, [sp, #48]
    cd38:	add	x21, x21, #0xec0
    cd3c:	add	x22, x21, #0x80, lsl #12
    cd40:	ldr	x21, [x22, #3520]
    cd44:	sub	x0, x21, #0x1
    cd48:	tst	x20, x0
    cd4c:	b.eq	cd7c <__sanitizer_get_allocated_size@@Base+0xd6c>  // b.none
    cd50:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cd54:	mov	x2, x20
    cd58:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cd5c:	add	x0, x0, #0x798
    cd60:	ldr	x1, [x1, #4008]
    cd64:	ldr	x1, [x1]
    cd68:	bl	22c78 <OnPrint@@Base+0x310>
    cd6c:	ldr	x21, [x22, #3520]
    cd70:	sub	x0, x21, #0x1
    cd74:	tst	x20, x0
    cd78:	b.ne	cef0 <__sanitizer_get_allocated_size@@Base+0xee0>  // b.any
    cd7c:	sub	x21, x20, x21
    cd80:	add	x21, x21, #0x20
    cd84:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    cd88:	mov	w2, w0
    cd8c:	ldrb	w3, [x21, #1]
    cd90:	neg	w2, w2
    cd94:	ldp	x0, x1, [x23]
    cd98:	bfxil	w3, w2, #0, #2
    cd9c:	strb	w3, [x21, #1]
    cda0:	bl	24410 <OnPrint@@Base+0x1aa8>
    cda4:	str	w0, [x21, #8]
    cda8:	ldr	x2, [x21]
    cdac:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cdb0:	mov	w3, #0x1                   	// #1
    cdb4:	ldr	x1, [x1, #3488]
    cdb8:	bfi	x2, x19, #10, #54
    cdbc:	str	x2, [x21]
    cdc0:	strb	w3, [x21]
    cdc4:	cbz	x1, cdd4 <__sanitizer_get_allocated_size@@Base+0xdc4>
    cdc8:	mov	x1, x19
    cdcc:	mov	x0, x20
    cdd0:	bl	6780 <__sanitizer_malloc_hook@plt>
    cdd4:	mov	x1, x19
    cdd8:	mov	x0, x20
    cddc:	bl	16018 <__sancov_default_options@@Base+0x3548>
    cde0:	ldp	x21, x22, [sp, #16]
    cde4:	mov	x0, x20
    cde8:	ldp	x23, x24, [sp, #32]
    cdec:	ldr	x30, [sp, #56]
    cdf0:	ldp	x19, x20, [sp], #64
    cdf4:	ret
    cdf8:	bl	12f00 <__sancov_default_options@@Base+0x430>
    cdfc:	tst	w0, #0xff
    ce00:	b.eq	cf3c <__sanitizer_get_allocated_size@@Base+0xf2c>  // b.none
    ce04:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ce08:	mov	x1, x19
    ce0c:	add	x0, x0, #0x9c8
    ce10:	bl	22d00 <OnPrint@@Base+0x398>
    ce14:	mov	x20, #0x0                   	// #0
    ce18:	bl	15438 <__sancov_default_options@@Base+0x2968>
    ce1c:	b	cde4 <__sanitizer_get_allocated_size@@Base+0xdd4>
    ce20:	mov	x19, #0x1                   	// #1
    ce24:	stp	x21, x22, [sp, #16]
    ce28:	b	ccc0 <__sanitizer_get_allocated_size@@Base+0xcb0>
    ce2c:	mov	x2, x19
    ce30:	mov	w1, #0x0                   	// #0
    ce34:	bl	6870 <memset@plt>
    ce38:	b	cd18 <__sanitizer_get_allocated_size@@Base+0xd08>
    ce3c:	bl	12ef0 <__sancov_default_options@@Base+0x420>
    ce40:	bl	12f00 <__sancov_default_options@@Base+0x430>
    ce44:	tst	w0, #0xff
    ce48:	b.eq	cf54 <__sanitizer_get_allocated_size@@Base+0xf44>  // b.none
    ce4c:	ldp	x21, x22, [sp, #16]
    ce50:	b	ce14 <__sanitizer_get_allocated_size@@Base+0xe04>
    ce54:	ldr	x0, [x1, x25, lsl #3]
    ce58:	dmb	ish
    ce5c:	cbz	x0, cf1c <__sanitizer_get_allocated_size@@Base+0xf0c>
    ce60:	ldrb	w0, [x0, x24]
    ce64:	cbz	w0, cf1c <__sanitizer_get_allocated_size@@Base+0xf0c>
    ce68:	and	x0, x20, #0xfffffffffff00000
    ce6c:	ldr	x1, [x1, x25, lsl #3]
    ce70:	dmb	ish
    ce74:	cbz	x1, cf14 <__sanitizer_get_allocated_size@@Base+0xf04>
    ce78:	ldrb	w3, [x1, x24]
    ce7c:	mov	w2, #0x200                 	// #512
    ce80:	cmp	w3, #0x35
    ce84:	and	x1, x3, #0xff
    ce88:	b.eq	ceb4 <__sanitizer_get_allocated_size@@Base+0xea4>  // b.none
    ce8c:	lsl	w2, w3, #4
    ce90:	cmp	x1, #0x10
    ce94:	b.ls	ceb4 <__sanitizer_get_allocated_size@@Base+0xea4>  // b.plast
    ce98:	sub	x1, x1, #0x10
    ce9c:	mov	x2, #0x100                 	// #256
    cea0:	and	x3, x1, #0x3
    cea4:	lsr	x1, x1, #2
    cea8:	lsl	x2, x2, x1
    ceac:	lsr	x1, x2, #2
    ceb0:	madd	w2, w1, w3, w2
    ceb4:	sub	w1, w20, w0
    ceb8:	add	x0, x0, #0x100, lsl #12
    cebc:	udiv	w1, w1, w2
    cec0:	add	x1, x1, #0x1
    cec4:	cmp	x0, x1, lsl #4
    cec8:	lsl	x1, x1, #4
    cecc:	b.ne	cf64 <__sanitizer_get_allocated_size@@Base+0xf54>  // b.any
    ced0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ced4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ced8:	add	x2, x2, #0x8e8
    cedc:	add	x0, x0, #0x808
    cee0:	mov	x4, #0x0                   	// #0
    cee4:	mov	x3, #0x0                   	// #0
    cee8:	mov	w1, #0x3a                  	// #58
    ceec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cef0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cef4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cef8:	add	x2, x2, #0x7b0
    cefc:	add	x0, x0, #0x728
    cf00:	mov	x4, #0x0                   	// #0
    cf04:	mov	x3, #0x0                   	// #0
    cf08:	mov	w1, #0xae                  	// #174
    cf0c:	str	x25, [sp, #48]
    cf10:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cf14:	mov	w2, #0x0                   	// #0
    cf18:	b	ceb4 <__sanitizer_get_allocated_size@@Base+0xea4>
    cf1c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cf20:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    cf24:	add	x2, x2, #0x778
    cf28:	add	x0, x0, #0x6c8
    cf2c:	mov	x4, #0x0                   	// #0
    cf30:	mov	x3, #0x0                   	// #0
    cf34:	mov	w1, #0x91                  	// #145
    cf38:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cf3c:	mov	x2, x23
    cf40:	mov	x1, x20
    cf44:	mov	x0, x19
    cf48:	stp	x21, x22, [sp, #16]
    cf4c:	str	x25, [sp, #48]
    cf50:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    cf54:	mov	x1, x23
    cf58:	mov	x0, x19
    cf5c:	str	x25, [sp, #48]
    cf60:	bl	15668 <__sancov_default_options@@Base+0x2b98>
    cf64:	sub	x21, x0, x1
    cf68:	ldr	x25, [sp, #48]
    cf6c:	b	cd84 <__sanitizer_get_allocated_size@@Base+0xd74>
    cf70:	stp	x19, x20, [sp, #-64]!
    cf74:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cf78:	mov	x19, x0
    cf7c:	ldr	x20, [x20, #4000]
    cf80:	stp	x21, x22, [sp, #16]
    cf84:	stp	x23, x24, [sp, #32]
    cf88:	mov	x23, x1
    cf8c:	ldr	x22, [x20]
    cf90:	str	x30, [sp, #56]
    cf94:	cbz	x22, d0d0 <__sanitizer_get_allocated_size@@Base+0x10c0>
    cf98:	cbz	x19, d0e0 <__sanitizer_get_allocated_size@@Base+0x10d0>
    cf9c:	mov	x20, #0x100000000           	// #4294967296
    cfa0:	cmp	x19, x20
    cfa4:	b.hi	d0e8 <__sanitizer_get_allocated_size@@Base+0x10d8>  // b.pmore
    cfa8:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    cfac:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    cfb0:	add	x24, x21, #0xec0
    cfb4:	mov	x1, x0
    cfb8:	mov	x3, x22
    cfbc:	mov	x0, x24
    cfc0:	mov	x2, x19
    cfc4:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    cfc8:	mov	x20, x0
    cfcc:	cbz	x0, d170 <__sanitizer_get_allocated_size@@Base+0x1160>
    cfd0:	mov	x1, #0xffffffffffff        	// #281474976710655
    cfd4:	cmp	x0, x1
    cfd8:	b.ls	d070 <__sanitizer_get_allocated_size@@Base+0x1060>  // b.plast
    cfdc:	add	x21, x21, #0xec0
    cfe0:	add	x22, x21, #0x80, lsl #12
    cfe4:	ldr	x21, [x22, #3520]
    cfe8:	sub	x0, x21, #0x1
    cfec:	tst	x20, x0
    cff0:	b.ne	d110 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.any
    cff4:	sub	x21, x20, x21
    cff8:	add	x21, x21, #0x20
    cffc:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    d000:	mov	w2, w0
    d004:	ldrb	w3, [x21, #1]
    d008:	neg	w2, w2
    d00c:	ldp	x0, x1, [x23]
    d010:	bfxil	w3, w2, #0, #2
    d014:	strb	w3, [x21, #1]
    d018:	bl	24410 <OnPrint@@Base+0x1aa8>
    d01c:	str	w0, [x21, #8]
    d020:	ldr	x2, [x21]
    d024:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d028:	mov	w3, #0x1                   	// #1
    d02c:	ldr	x1, [x1, #3488]
    d030:	bfi	x2, x19, #10, #54
    d034:	str	x2, [x21]
    d038:	strb	w3, [x21]
    d03c:	cbz	x1, d04c <__sanitizer_get_allocated_size@@Base+0x103c>
    d040:	mov	x1, x19
    d044:	mov	x0, x20
    d048:	bl	6780 <__sanitizer_malloc_hook@plt>
    d04c:	mov	x1, x19
    d050:	mov	x0, x20
    d054:	bl	16018 <__sancov_default_options@@Base+0x3548>
    d058:	mov	x0, x20
    d05c:	ldp	x21, x22, [sp, #16]
    d060:	ldp	x23, x24, [sp, #32]
    d064:	ldr	x30, [sp, #56]
    d068:	ldp	x19, x20, [sp], #64
    d06c:	ret
    d070:	lsr	x22, x0, #20
    d074:	str	x25, [sp, #48]
    d078:	lsr	x25, x0, #32
    d07c:	ldr	x1, [x24, x25, lsl #3]
    d080:	dmb	ish
    d084:	cbz	x1, d094 <__sanitizer_get_allocated_size@@Base+0x1084>
    d088:	and	x2, x22, #0xfff
    d08c:	ldrb	w1, [x1, x2]
    d090:	cbnz	w1, d160 <__sanitizer_get_allocated_size@@Base+0x1150>
    d094:	add	x1, x21, #0xec0
    d098:	ldr	x0, [x1, x25, lsl #3]
    d09c:	dmb	ish
    d0a0:	cbz	x0, d0b0 <__sanitizer_get_allocated_size@@Base+0x10a0>
    d0a4:	and	x22, x22, #0xfff
    d0a8:	ldrb	w0, [x0, x22]
    d0ac:	cbnz	w0, d190 <__sanitizer_get_allocated_size@@Base+0x1180>
    d0b0:	add	x21, x21, #0xec0
    d0b4:	add	x22, x21, #0x80, lsl #12
    d0b8:	ldr	x25, [sp, #48]
    d0bc:	ldr	x21, [x22, #3520]
    d0c0:	sub	x0, x21, #0x1
    d0c4:	tst	x20, x0
    d0c8:	b.eq	cff4 <__sanitizer_get_allocated_size@@Base+0xfe4>  // b.none
    d0cc:	b	d110 <__sanitizer_get_allocated_size@@Base+0x1100>
    d0d0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
    d0d4:	str	x0, [x20]
    d0d8:	mov	x22, x0
    d0dc:	cbnz	x19, cf9c <__sanitizer_get_allocated_size@@Base+0xf8c>
    d0e0:	mov	x19, #0x1                   	// #1
    d0e4:	b	cfa8 <__sanitizer_get_allocated_size@@Base+0xf98>
    d0e8:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d0ec:	tst	w0, #0xff
    d0f0:	b.eq	d254 <__sanitizer_get_allocated_size@@Base+0x1244>  // b.none
    d0f4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d0f8:	mov	x1, x19
    d0fc:	add	x0, x0, #0x9c8
    d100:	bl	22d00 <OnPrint@@Base+0x398>
    d104:	mov	x20, #0x0                   	// #0
    d108:	bl	15438 <__sancov_default_options@@Base+0x2968>
    d10c:	b	d058 <__sanitizer_get_allocated_size@@Base+0x1048>
    d110:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d114:	mov	x2, x20
    d118:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d11c:	add	x0, x0, #0x798
    d120:	ldr	x1, [x1, #4008]
    d124:	ldr	x1, [x1]
    d128:	bl	22c78 <OnPrint@@Base+0x310>
    d12c:	ldr	x21, [x22, #3520]
    d130:	sub	x0, x21, #0x1
    d134:	tst	x20, x0
    d138:	b.eq	cff4 <__sanitizer_get_allocated_size@@Base+0xfe4>  // b.none
    d13c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d140:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d144:	add	x2, x2, #0x7b0
    d148:	add	x0, x0, #0x728
    d14c:	mov	x4, #0x0                   	// #0
    d150:	mov	x3, #0x0                   	// #0
    d154:	mov	w1, #0xae                  	// #174
    d158:	str	x25, [sp, #48]
    d15c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d160:	mov	x2, x19
    d164:	mov	w1, #0x0                   	// #0
    d168:	bl	6870 <memset@plt>
    d16c:	b	d094 <__sanitizer_get_allocated_size@@Base+0x1084>
    d170:	bl	12ef0 <__sancov_default_options@@Base+0x420>
    d174:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d178:	tst	w0, #0xff
    d17c:	b.ne	d104 <__sanitizer_get_allocated_size@@Base+0x10f4>  // b.any
    d180:	mov	x1, x23
    d184:	mov	x0, x19
    d188:	str	x25, [sp, #48]
    d18c:	bl	15668 <__sancov_default_options@@Base+0x2b98>
    d190:	ldr	x0, [x1, x25, lsl #3]
    d194:	dmb	ish
    d198:	cbz	x0, d234 <__sanitizer_get_allocated_size@@Base+0x1224>
    d19c:	ldrb	w0, [x0, x22]
    d1a0:	cbz	w0, d234 <__sanitizer_get_allocated_size@@Base+0x1224>
    d1a4:	and	x0, x20, #0xfffffffffff00000
    d1a8:	ldr	x1, [x1, x25, lsl #3]
    d1ac:	dmb	ish
    d1b0:	cbz	x1, d22c <__sanitizer_get_allocated_size@@Base+0x121c>
    d1b4:	ldrb	w3, [x1, x22]
    d1b8:	mov	w2, #0x200                 	// #512
    d1bc:	cmp	w3, #0x35
    d1c0:	and	x1, x3, #0xff
    d1c4:	b.eq	d1f0 <__sanitizer_get_allocated_size@@Base+0x11e0>  // b.none
    d1c8:	lsl	w2, w3, #4
    d1cc:	cmp	x1, #0x10
    d1d0:	b.ls	d1f0 <__sanitizer_get_allocated_size@@Base+0x11e0>  // b.plast
    d1d4:	sub	x1, x1, #0x10
    d1d8:	mov	x2, #0x100                 	// #256
    d1dc:	and	x3, x1, #0x3
    d1e0:	lsr	x1, x1, #2
    d1e4:	lsl	x2, x2, x1
    d1e8:	lsr	x1, x2, #2
    d1ec:	madd	w2, w1, w3, w2
    d1f0:	sub	w1, w20, w0
    d1f4:	add	x0, x0, #0x100, lsl #12
    d1f8:	udiv	w1, w1, w2
    d1fc:	add	x1, x1, #0x1
    d200:	cmp	x0, x1, lsl #4
    d204:	lsl	x1, x1, #4
    d208:	b.ne	d268 <__sanitizer_get_allocated_size@@Base+0x1258>  // b.any
    d20c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d210:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d214:	add	x2, x2, #0x8e8
    d218:	add	x0, x0, #0x808
    d21c:	mov	x4, #0x0                   	// #0
    d220:	mov	x3, #0x0                   	// #0
    d224:	mov	w1, #0x3a                  	// #58
    d228:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d22c:	mov	w2, #0x0                   	// #0
    d230:	b	d1f0 <__sanitizer_get_allocated_size@@Base+0x11e0>
    d234:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d238:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d23c:	add	x2, x2, #0x778
    d240:	add	x0, x0, #0x6c8
    d244:	mov	x4, #0x0                   	// #0
    d248:	mov	x3, #0x0                   	// #0
    d24c:	mov	w1, #0x91                  	// #145
    d250:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d254:	mov	x2, x23
    d258:	mov	x1, x20
    d25c:	mov	x0, x19
    d260:	str	x25, [sp, #48]
    d264:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    d268:	sub	x21, x0, x1
    d26c:	ldr	x25, [sp, #48]
    d270:	b	cffc <__sanitizer_get_allocated_size@@Base+0xfec>
    d274:	nop
    d278:	stp	x19, x20, [sp, #-80]!
    d27c:	stp	x21, x22, [sp, #16]
    d280:	mov	x22, x2
    d284:	str	x30, [sp, #56]
    d288:	cbz	x1, d3e8 <__sanitizer_get_allocated_size@@Base+0x13d8>
    d28c:	mov	x19, x0
    d290:	umulh	x0, x0, x1
    d294:	cbnz	x0, d52c <__sanitizer_get_allocated_size@@Base+0x151c>
    d298:	mul	x19, x19, x1
    d29c:	cbz	x19, d3e8 <__sanitizer_get_allocated_size@@Base+0x13d8>
    d2a0:	mov	x20, #0x100000000           	// #4294967296
    d2a4:	cmp	x19, x20
    d2a8:	b.hi	d3f4 <__sanitizer_get_allocated_size@@Base+0x13e4>  // b.pmore
    d2ac:	stp	x23, x24, [sp, #32]
    d2b0:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    d2b4:	adrp	x21, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    d2b8:	add	x23, x21, #0xec0
    d2bc:	mov	x1, x0
    d2c0:	mov	x2, x19
    d2c4:	mov	x0, x23
    d2c8:	mov	x3, #0x1                   	// #1
    d2cc:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    d2d0:	mov	x20, x0
    d2d4:	cbz	x0, d42c <__sanitizer_get_allocated_size@@Base+0x141c>
    d2d8:	mov	x1, #0xffffffffffff        	// #281474976710655
    d2dc:	cmp	x0, x1
    d2e0:	b.hi	d328 <__sanitizer_get_allocated_size@@Base+0x1318>  // b.pmore
    d2e4:	lsr	x24, x0, #20
    d2e8:	str	x25, [sp, #48]
    d2ec:	lsr	x25, x0, #32
    d2f0:	ldr	x1, [x23, x25, lsl #3]
    d2f4:	dmb	ish
    d2f8:	cbz	x1, d308 <__sanitizer_get_allocated_size@@Base+0x12f8>
    d2fc:	and	x2, x24, #0xfff
    d300:	ldrb	w1, [x1, x2]
    d304:	cbnz	w1, d41c <__sanitizer_get_allocated_size@@Base+0x140c>
    d308:	add	x1, x21, #0xec0
    d30c:	ldr	x0, [x1, x25, lsl #3]
    d310:	dmb	ish
    d314:	cbz	x0, d324 <__sanitizer_get_allocated_size@@Base+0x1314>
    d318:	and	x24, x24, #0xfff
    d31c:	ldrb	w0, [x0, x24]
    d320:	cbnz	w0, d444 <__sanitizer_get_allocated_size@@Base+0x1434>
    d324:	ldr	x25, [sp, #48]
    d328:	add	x21, x21, #0xec0
    d32c:	add	x23, x21, #0x80, lsl #12
    d330:	ldr	x21, [x23, #3520]
    d334:	sub	x0, x21, #0x1
    d338:	tst	x20, x0
    d33c:	b.eq	d36c <__sanitizer_get_allocated_size@@Base+0x135c>  // b.none
    d340:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d344:	mov	x2, x20
    d348:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d34c:	add	x0, x0, #0x798
    d350:	ldr	x1, [x1, #4008]
    d354:	ldr	x1, [x1]
    d358:	bl	22c78 <OnPrint@@Base+0x310>
    d35c:	ldr	x21, [x23, #3520]
    d360:	sub	x0, x21, #0x1
    d364:	tst	x20, x0
    d368:	b.ne	d4e0 <__sanitizer_get_allocated_size@@Base+0x14d0>  // b.any
    d36c:	sub	x21, x20, x21
    d370:	add	x21, x21, #0x20
    d374:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    d378:	mov	w2, w0
    d37c:	ldrb	w3, [x21, #1]
    d380:	neg	w2, w2
    d384:	ldp	x0, x1, [x22]
    d388:	bfxil	w3, w2, #0, #2
    d38c:	strb	w3, [x21, #1]
    d390:	bl	24410 <OnPrint@@Base+0x1aa8>
    d394:	str	w0, [x21, #8]
    d398:	ldr	x2, [x21]
    d39c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d3a0:	mov	w3, #0x1                   	// #1
    d3a4:	ldr	x1, [x1, #3488]
    d3a8:	bfi	x2, x19, #10, #54
    d3ac:	str	x2, [x21]
    d3b0:	strb	w3, [x21]
    d3b4:	cbz	x1, d3c4 <__sanitizer_get_allocated_size@@Base+0x13b4>
    d3b8:	mov	x1, x19
    d3bc:	mov	x0, x20
    d3c0:	bl	6780 <__sanitizer_malloc_hook@plt>
    d3c4:	mov	x1, x19
    d3c8:	mov	x0, x20
    d3cc:	bl	16018 <__sancov_default_options@@Base+0x3548>
    d3d0:	ldp	x23, x24, [sp, #32]
    d3d4:	mov	x0, x20
    d3d8:	ldp	x21, x22, [sp, #16]
    d3dc:	ldr	x30, [sp, #56]
    d3e0:	ldp	x19, x20, [sp], #80
    d3e4:	ret
    d3e8:	mov	x19, #0x1                   	// #1
    d3ec:	stp	x23, x24, [sp, #32]
    d3f0:	b	d2b0 <__sanitizer_get_allocated_size@@Base+0x12a0>
    d3f4:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d3f8:	tst	w0, #0xff
    d3fc:	b.eq	d554 <__sanitizer_get_allocated_size@@Base+0x1544>  // b.none
    d400:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d404:	mov	x1, x19
    d408:	add	x0, x0, #0x9c8
    d40c:	bl	22d00 <OnPrint@@Base+0x398>
    d410:	mov	x20, #0x0                   	// #0
    d414:	bl	15438 <__sancov_default_options@@Base+0x2968>
    d418:	b	d3d4 <__sanitizer_get_allocated_size@@Base+0x13c4>
    d41c:	mov	x2, x19
    d420:	mov	w1, #0x0                   	// #0
    d424:	bl	6870 <memset@plt>
    d428:	b	d308 <__sanitizer_get_allocated_size@@Base+0x12f8>
    d42c:	bl	12ef0 <__sancov_default_options@@Base+0x420>
    d430:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d434:	tst	w0, #0xff
    d438:	b.eq	d56c <__sanitizer_get_allocated_size@@Base+0x155c>  // b.none
    d43c:	ldp	x23, x24, [sp, #32]
    d440:	b	d410 <__sanitizer_get_allocated_size@@Base+0x1400>
    d444:	ldr	x0, [x1, x25, lsl #3]
    d448:	dmb	ish
    d44c:	cbz	x0, d50c <__sanitizer_get_allocated_size@@Base+0x14fc>
    d450:	ldrb	w0, [x0, x24]
    d454:	cbz	w0, d50c <__sanitizer_get_allocated_size@@Base+0x14fc>
    d458:	and	x0, x20, #0xfffffffffff00000
    d45c:	ldr	x1, [x1, x25, lsl #3]
    d460:	dmb	ish
    d464:	cbz	x1, d504 <__sanitizer_get_allocated_size@@Base+0x14f4>
    d468:	ldrb	w3, [x1, x24]
    d46c:	mov	w2, #0x200                 	// #512
    d470:	cmp	w3, #0x35
    d474:	and	x1, x3, #0xff
    d478:	b.eq	d4a4 <__sanitizer_get_allocated_size@@Base+0x1494>  // b.none
    d47c:	lsl	w2, w3, #4
    d480:	cmp	x1, #0x10
    d484:	b.ls	d4a4 <__sanitizer_get_allocated_size@@Base+0x1494>  // b.plast
    d488:	sub	x1, x1, #0x10
    d48c:	mov	x2, #0x100                 	// #256
    d490:	and	x3, x1, #0x3
    d494:	lsr	x1, x1, #2
    d498:	lsl	x2, x2, x1
    d49c:	lsr	x1, x2, #2
    d4a0:	madd	w2, w1, w3, w2
    d4a4:	sub	w1, w20, w0
    d4a8:	add	x0, x0, #0x100, lsl #12
    d4ac:	udiv	w1, w1, w2
    d4b0:	add	x1, x1, #0x1
    d4b4:	cmp	x0, x1, lsl #4
    d4b8:	lsl	x1, x1, #4
    d4bc:	b.ne	d57c <__sanitizer_get_allocated_size@@Base+0x156c>  // b.any
    d4c0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d4c4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d4c8:	add	x2, x2, #0x8e8
    d4cc:	add	x0, x0, #0x808
    d4d0:	mov	x4, #0x0                   	// #0
    d4d4:	mov	x3, #0x0                   	// #0
    d4d8:	mov	w1, #0x3a                  	// #58
    d4dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d4e0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d4e4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d4e8:	add	x2, x2, #0x7b0
    d4ec:	add	x0, x0, #0x728
    d4f0:	mov	x4, #0x0                   	// #0
    d4f4:	mov	x3, #0x0                   	// #0
    d4f8:	mov	w1, #0xae                  	// #174
    d4fc:	str	x25, [sp, #48]
    d500:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d504:	mov	w2, #0x0                   	// #0
    d508:	b	d4a4 <__sanitizer_get_allocated_size@@Base+0x1494>
    d50c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d510:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d514:	add	x2, x2, #0x778
    d518:	add	x0, x0, #0x6c8
    d51c:	mov	x4, #0x0                   	// #0
    d520:	mov	x3, #0x0                   	// #0
    d524:	mov	w1, #0x91                  	// #145
    d528:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d52c:	str	x1, [sp, #72]
    d530:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d534:	tst	w0, #0xff
    d538:	ldr	x1, [sp, #72]
    d53c:	b.ne	d410 <__sanitizer_get_allocated_size@@Base+0x1400>  // b.any
    d540:	mov	x2, x22
    d544:	mov	x0, x19
    d548:	stp	x23, x24, [sp, #32]
    d54c:	str	x25, [sp, #48]
    d550:	bl	15450 <__sancov_default_options@@Base+0x2980>
    d554:	mov	x2, x22
    d558:	mov	x1, x20
    d55c:	mov	x0, x19
    d560:	stp	x23, x24, [sp, #32]
    d564:	str	x25, [sp, #48]
    d568:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    d56c:	mov	x1, x22
    d570:	mov	x0, x19
    d574:	str	x25, [sp, #48]
    d578:	bl	15668 <__sancov_default_options@@Base+0x2b98>
    d57c:	sub	x21, x0, x1
    d580:	ldr	x25, [sp, #48]
    d584:	b	d374 <__sanitizer_get_allocated_size@@Base+0x1364>
    d588:	stp	x19, x20, [sp, #-64]!
    d58c:	stp	x21, x22, [sp, #16]
    d590:	mov	x21, x0
    d594:	sub	x0, x0, #0x1
    d598:	stp	x23, x24, [sp, #32]
    d59c:	tst	x0, x21
    d5a0:	mov	x23, x2
    d5a4:	str	x30, [sp, #56]
    d5a8:	b.ne	d73c <__sanitizer_get_allocated_size@@Base+0x172c>  // b.any
    d5ac:	mov	x19, x1
    d5b0:	cbz	x1, d6fc <__sanitizer_get_allocated_size@@Base+0x16ec>
    d5b4:	mov	x20, #0x100000000           	// #4294967296
    d5b8:	cmp	x1, x20
    d5bc:	b.hi	d704 <__sanitizer_get_allocated_size@@Base+0x16f4>  // b.pmore
    d5c0:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    d5c4:	adrp	x22, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    d5c8:	add	x24, x22, #0xec0
    d5cc:	mov	x1, x0
    d5d0:	mov	x3, x21
    d5d4:	mov	x0, x24
    d5d8:	mov	x2, x19
    d5dc:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    d5e0:	mov	x20, x0
    d5e4:	cbz	x0, d768 <__sanitizer_get_allocated_size@@Base+0x1758>
    d5e8:	mov	x1, #0xffffffffffff        	// #281474976710655
    d5ec:	cmp	x0, x1
    d5f0:	b.ls	d6b4 <__sanitizer_get_allocated_size@@Base+0x16a4>  // b.plast
    d5f4:	add	x22, x22, #0xec0
    d5f8:	add	x22, x22, #0x80, lsl #12
    d5fc:	ldr	x21, [x22, #3520]
    d600:	sub	x0, x21, #0x1
    d604:	tst	x20, x0
    d608:	b.eq	d638 <__sanitizer_get_allocated_size@@Base+0x1628>  // b.none
    d60c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d610:	mov	x2, x20
    d614:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d618:	add	x0, x0, #0x798
    d61c:	ldr	x1, [x1, #4008]
    d620:	ldr	x1, [x1]
    d624:	bl	22c78 <OnPrint@@Base+0x310>
    d628:	ldr	x21, [x22, #3520]
    d62c:	sub	x0, x21, #0x1
    d630:	tst	x20, x0
    d634:	b.ne	d824 <__sanitizer_get_allocated_size@@Base+0x1814>  // b.any
    d638:	sub	x21, x20, x21
    d63c:	add	x21, x21, #0x20
    d640:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    d644:	mov	w2, w0
    d648:	ldrb	w3, [x21, #1]
    d64c:	neg	w2, w2
    d650:	ldp	x0, x1, [x23]
    d654:	bfxil	w3, w2, #0, #2
    d658:	strb	w3, [x21, #1]
    d65c:	bl	24410 <OnPrint@@Base+0x1aa8>
    d660:	str	w0, [x21, #8]
    d664:	ldr	x2, [x21]
    d668:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d66c:	mov	w3, #0x1                   	// #1
    d670:	ldr	x1, [x1, #3488]
    d674:	bfi	x2, x19, #10, #54
    d678:	str	x2, [x21]
    d67c:	strb	w3, [x21]
    d680:	cbz	x1, d690 <__sanitizer_get_allocated_size@@Base+0x1680>
    d684:	mov	x1, x19
    d688:	mov	x0, x20
    d68c:	bl	6780 <__sanitizer_malloc_hook@plt>
    d690:	mov	x1, x19
    d694:	mov	x0, x20
    d698:	bl	16018 <__sancov_default_options@@Base+0x3548>
    d69c:	mov	x0, x20
    d6a0:	ldp	x21, x22, [sp, #16]
    d6a4:	ldp	x23, x24, [sp, #32]
    d6a8:	ldr	x30, [sp, #56]
    d6ac:	ldp	x19, x20, [sp], #64
    d6b0:	ret
    d6b4:	lsr	x21, x0, #20
    d6b8:	str	x25, [sp, #48]
    d6bc:	lsr	x25, x0, #32
    d6c0:	ldr	x1, [x24, x25, lsl #3]
    d6c4:	dmb	ish
    d6c8:	cbz	x1, d6d8 <__sanitizer_get_allocated_size@@Base+0x16c8>
    d6cc:	and	x2, x21, #0xfff
    d6d0:	ldrb	w1, [x1, x2]
    d6d4:	cbnz	w1, d72c <__sanitizer_get_allocated_size@@Base+0x171c>
    d6d8:	add	x1, x22, #0xec0
    d6dc:	ldr	x0, [x1, x25, lsl #3]
    d6e0:	dmb	ish
    d6e4:	cbz	x0, d6f4 <__sanitizer_get_allocated_size@@Base+0x16e4>
    d6e8:	and	x21, x21, #0xfff
    d6ec:	ldrb	w0, [x0, x21]
    d6f0:	cbnz	w0, d788 <__sanitizer_get_allocated_size@@Base+0x1778>
    d6f4:	ldr	x25, [sp, #48]
    d6f8:	b	d5f4 <__sanitizer_get_allocated_size@@Base+0x15e4>
    d6fc:	mov	x19, #0x1                   	// #1
    d700:	b	d5c0 <__sanitizer_get_allocated_size@@Base+0x15b0>
    d704:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d708:	tst	w0, #0xff
    d70c:	b.eq	d870 <__sancov_lowest_stack@@Base+0x40>  // b.none
    d710:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d714:	mov	x1, x19
    d718:	add	x0, x0, #0x9c8
    d71c:	bl	22d00 <OnPrint@@Base+0x398>
    d720:	mov	x20, #0x0                   	// #0
    d724:	bl	15438 <__sancov_default_options@@Base+0x2968>
    d728:	b	d69c <__sanitizer_get_allocated_size@@Base+0x168c>
    d72c:	mov	x2, x19
    d730:	mov	w1, #0x0                   	// #0
    d734:	bl	6870 <memset@plt>
    d738:	b	d6d8 <__sanitizer_get_allocated_size@@Base+0x16c8>
    d73c:	bl	6ac0 <__errno_location@plt>
    d740:	mov	x20, #0x0                   	// #0
    d744:	mov	w1, #0x16                  	// #22
    d748:	str	w1, [x0]
    d74c:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d750:	tst	w0, #0xff
    d754:	b.ne	d69c <__sanitizer_get_allocated_size@@Base+0x168c>  // b.any
    d758:	mov	x1, x23
    d75c:	mov	x0, x21
    d760:	str	x25, [sp, #48]
    d764:	bl	15518 <__sancov_default_options@@Base+0x2a48>
    d768:	bl	12ef0 <__sancov_default_options@@Base+0x420>
    d76c:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d770:	tst	w0, #0xff
    d774:	b.ne	d720 <__sanitizer_get_allocated_size@@Base+0x1710>  // b.any
    d778:	mov	x1, x23
    d77c:	mov	x0, x19
    d780:	str	x25, [sp, #48]
    d784:	bl	15668 <__sancov_default_options@@Base+0x2b98>
    d788:	ldr	x0, [x1, x25, lsl #3]
    d78c:	dmb	ish
    d790:	cbz	x0, d850 <__sancov_lowest_stack@@Base+0x20>
    d794:	ldrb	w0, [x0, x21]
    d798:	cbz	w0, d850 <__sancov_lowest_stack@@Base+0x20>
    d79c:	and	x0, x20, #0xfffffffffff00000
    d7a0:	ldr	x1, [x1, x25, lsl #3]
    d7a4:	dmb	ish
    d7a8:	cbz	x1, d848 <__sancov_lowest_stack@@Base+0x18>
    d7ac:	ldrb	w3, [x1, x21]
    d7b0:	mov	w2, #0x200                 	// #512
    d7b4:	cmp	w3, #0x35
    d7b8:	and	x1, x3, #0xff
    d7bc:	b.eq	d7e8 <__sanitizer_get_allocated_size@@Base+0x17d8>  // b.none
    d7c0:	lsl	w2, w3, #4
    d7c4:	cmp	x1, #0x10
    d7c8:	b.ls	d7e8 <__sanitizer_get_allocated_size@@Base+0x17d8>  // b.plast
    d7cc:	sub	x1, x1, #0x10
    d7d0:	mov	x2, #0x100                 	// #256
    d7d4:	and	x3, x1, #0x3
    d7d8:	lsr	x1, x1, #2
    d7dc:	lsl	x2, x2, x1
    d7e0:	lsr	x1, x2, #2
    d7e4:	madd	w2, w1, w3, w2
    d7e8:	sub	w1, w20, w0
    d7ec:	add	x0, x0, #0x100, lsl #12
    d7f0:	udiv	w1, w1, w2
    d7f4:	add	x1, x1, #0x1
    d7f8:	cmp	x0, x1, lsl #4
    d7fc:	lsl	x1, x1, #4
    d800:	b.ne	d884 <__sancov_lowest_stack@@Base+0x54>  // b.any
    d804:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d808:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d80c:	add	x2, x2, #0x8e8
    d810:	add	x0, x0, #0x808
    d814:	mov	x4, #0x0                   	// #0
    d818:	mov	x3, #0x0                   	// #0
    d81c:	mov	w1, #0x3a                  	// #58
    d820:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d824:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d828:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d82c:	add	x2, x2, #0x7b0
    d830:	add	x0, x0, #0x728
    d834:	mov	x4, #0x0                   	// #0
    d838:	mov	x3, #0x0                   	// #0
    d83c:	mov	w1, #0xae                  	// #174
    d840:	str	x25, [sp, #48]
    d844:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d848:	mov	w2, #0x0                   	// #0
    d84c:	b	d7e8 <__sanitizer_get_allocated_size@@Base+0x17d8>
    d850:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d854:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d858:	add	x2, x2, #0x778
    d85c:	add	x0, x0, #0x6c8
    d860:	mov	x4, #0x0                   	// #0
    d864:	mov	x3, #0x0                   	// #0
    d868:	mov	w1, #0x91                  	// #145
    d86c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d870:	mov	x2, x23
    d874:	mov	x1, x20
    d878:	mov	x0, x19
    d87c:	str	x25, [sp, #48]
    d880:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    d884:	sub	x21, x0, x1
    d888:	ldr	x25, [sp, #48]
    d88c:	b	d640 <__sanitizer_get_allocated_size@@Base+0x1630>
    d890:	stp	x19, x20, [sp, #-64]!
    d894:	mov	x19, x1
    d898:	stp	x21, x22, [sp, #16]
    d89c:	mov	x21, x0
    d8a0:	stp	x23, x24, [sp, #32]
    d8a4:	mov	x23, x2
    d8a8:	str	x30, [sp, #56]
    d8ac:	cbnz	x0, d8e4 <__sancov_lowest_stack@@Base+0xb4>
    d8b0:	bl	6ac0 <__errno_location@plt>
    d8b4:	mov	x20, #0x0                   	// #0
    d8b8:	mov	w1, #0x16                  	// #22
    d8bc:	str	w1, [x0]
    d8c0:	bl	12f00 <__sancov_default_options@@Base+0x430>
    d8c4:	tst	w0, #0xff
    d8c8:	b.eq	db9c <__sancov_lowest_stack@@Base+0x36c>  // b.none
    d8cc:	mov	x0, x20
    d8d0:	ldp	x21, x22, [sp, #16]
    d8d4:	ldp	x23, x24, [sp, #32]
    d8d8:	ldr	x30, [sp, #56]
    d8dc:	ldp	x19, x20, [sp], #64
    d8e0:	ret
    d8e4:	sub	x0, x0, #0x1
    d8e8:	orr	x1, x21, x1
    d8ec:	tst	x0, x1
    d8f0:	b.ne	d8b0 <__sancov_lowest_stack@@Base+0x80>  // b.any
    d8f4:	cbz	x19, da40 <__sancov_lowest_stack@@Base+0x210>
    d8f8:	mov	x20, #0x100000000           	// #4294967296
    d8fc:	cmp	x19, x20
    d900:	b.hi	da48 <__sancov_lowest_stack@@Base+0x218>  // b.pmore
    d904:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    d908:	adrp	x22, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    d90c:	add	x24, x22, #0xec0
    d910:	mov	x1, x0
    d914:	mov	x3, x21
    d918:	mov	x0, x24
    d91c:	mov	x2, x19
    d920:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    d924:	mov	x20, x0
    d928:	cbz	x0, da80 <__sancov_lowest_stack@@Base+0x250>
    d92c:	mov	x1, #0xffffffffffff        	// #281474976710655
    d930:	cmp	x0, x1
    d934:	b.ls	d9f8 <__sancov_lowest_stack@@Base+0x1c8>  // b.plast
    d938:	add	x22, x22, #0xec0
    d93c:	add	x22, x22, #0x80, lsl #12
    d940:	ldr	x21, [x22, #3520]
    d944:	sub	x0, x21, #0x1
    d948:	tst	x20, x0
    d94c:	b.eq	d97c <__sancov_lowest_stack@@Base+0x14c>  // b.none
    d950:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d954:	mov	x2, x20
    d958:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    d95c:	add	x0, x0, #0x798
    d960:	ldr	x1, [x1, #4008]
    d964:	ldr	x1, [x1]
    d968:	bl	22c78 <OnPrint@@Base+0x310>
    d96c:	ldr	x21, [x22, #3520]
    d970:	sub	x0, x21, #0x1
    d974:	tst	x20, x0
    d978:	b.ne	db3c <__sancov_lowest_stack@@Base+0x30c>  // b.any
    d97c:	sub	x21, x20, x21
    d980:	add	x21, x21, #0x20
    d984:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    d988:	mov	w2, w0
    d98c:	ldrb	w3, [x21, #1]
    d990:	neg	w2, w2
    d994:	ldp	x0, x1, [x23]
    d998:	bfxil	w3, w2, #0, #2
    d99c:	strb	w3, [x21, #1]
    d9a0:	bl	24410 <OnPrint@@Base+0x1aa8>
    d9a4:	str	w0, [x21, #8]
    d9a8:	ldr	x2, [x21]
    d9ac:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d9b0:	mov	w3, #0x1                   	// #1
    d9b4:	ldr	x1, [x1, #3488]
    d9b8:	bfi	x2, x19, #10, #54
    d9bc:	str	x2, [x21]
    d9c0:	strb	w3, [x21]
    d9c4:	cbz	x1, d9d4 <__sancov_lowest_stack@@Base+0x1a4>
    d9c8:	mov	x1, x19
    d9cc:	mov	x0, x20
    d9d0:	bl	6780 <__sanitizer_malloc_hook@plt>
    d9d4:	mov	x1, x19
    d9d8:	mov	x0, x20
    d9dc:	bl	16018 <__sancov_default_options@@Base+0x3548>
    d9e0:	mov	x0, x20
    d9e4:	ldp	x21, x22, [sp, #16]
    d9e8:	ldp	x23, x24, [sp, #32]
    d9ec:	ldr	x30, [sp, #56]
    d9f0:	ldp	x19, x20, [sp], #64
    d9f4:	ret
    d9f8:	lsr	x21, x0, #20
    d9fc:	str	x25, [sp, #48]
    da00:	lsr	x25, x0, #32
    da04:	ldr	x1, [x24, x25, lsl #3]
    da08:	dmb	ish
    da0c:	cbz	x1, da1c <__sancov_lowest_stack@@Base+0x1ec>
    da10:	and	x2, x21, #0xfff
    da14:	ldrb	w1, [x1, x2]
    da18:	cbnz	w1, da70 <__sancov_lowest_stack@@Base+0x240>
    da1c:	add	x1, x22, #0xec0
    da20:	ldr	x0, [x1, x25, lsl #3]
    da24:	dmb	ish
    da28:	cbz	x0, da38 <__sancov_lowest_stack@@Base+0x208>
    da2c:	and	x21, x21, #0xfff
    da30:	ldrb	w0, [x0, x21]
    da34:	cbnz	w0, daa0 <__sancov_lowest_stack@@Base+0x270>
    da38:	ldr	x25, [sp, #48]
    da3c:	b	d938 <__sancov_lowest_stack@@Base+0x108>
    da40:	mov	x19, #0x1                   	// #1
    da44:	b	d904 <__sancov_lowest_stack@@Base+0xd4>
    da48:	bl	12f00 <__sancov_default_options@@Base+0x430>
    da4c:	tst	w0, #0xff
    da50:	b.eq	db88 <__sancov_lowest_stack@@Base+0x358>  // b.none
    da54:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    da58:	mov	x1, x19
    da5c:	add	x0, x0, #0x9c8
    da60:	bl	22d00 <OnPrint@@Base+0x398>
    da64:	mov	x20, #0x0                   	// #0
    da68:	bl	15438 <__sancov_default_options@@Base+0x2968>
    da6c:	b	d8cc <__sancov_lowest_stack@@Base+0x9c>
    da70:	mov	x2, x19
    da74:	mov	w1, #0x0                   	// #0
    da78:	bl	6870 <memset@plt>
    da7c:	b	da1c <__sancov_lowest_stack@@Base+0x1ec>
    da80:	bl	12ef0 <__sancov_default_options@@Base+0x420>
    da84:	bl	12f00 <__sancov_default_options@@Base+0x430>
    da88:	tst	w0, #0xff
    da8c:	b.ne	da64 <__sancov_lowest_stack@@Base+0x234>  // b.any
    da90:	mov	x1, x23
    da94:	mov	x0, x19
    da98:	str	x25, [sp, #48]
    da9c:	bl	15668 <__sancov_default_options@@Base+0x2b98>
    daa0:	ldr	x0, [x1, x25, lsl #3]
    daa4:	dmb	ish
    daa8:	cbz	x0, db68 <__sancov_lowest_stack@@Base+0x338>
    daac:	ldrb	w0, [x0, x21]
    dab0:	cbz	w0, db68 <__sancov_lowest_stack@@Base+0x338>
    dab4:	and	x0, x20, #0xfffffffffff00000
    dab8:	ldr	x1, [x1, x25, lsl #3]
    dabc:	dmb	ish
    dac0:	cbz	x1, db60 <__sancov_lowest_stack@@Base+0x330>
    dac4:	ldrb	w3, [x1, x21]
    dac8:	mov	w2, #0x200                 	// #512
    dacc:	cmp	w3, #0x35
    dad0:	and	x1, x3, #0xff
    dad4:	b.eq	db00 <__sancov_lowest_stack@@Base+0x2d0>  // b.none
    dad8:	lsl	w2, w3, #4
    dadc:	cmp	x1, #0x10
    dae0:	b.ls	db00 <__sancov_lowest_stack@@Base+0x2d0>  // b.plast
    dae4:	sub	x1, x1, #0x10
    dae8:	mov	x2, #0x100                 	// #256
    daec:	and	x3, x1, #0x3
    daf0:	lsr	x1, x1, #2
    daf4:	lsl	x2, x2, x1
    daf8:	lsr	x1, x2, #2
    dafc:	madd	w2, w1, w3, w2
    db00:	sub	w1, w20, w0
    db04:	add	x0, x0, #0x100, lsl #12
    db08:	udiv	w1, w1, w2
    db0c:	add	x1, x1, #0x1
    db10:	cmp	x0, x1, lsl #4
    db14:	lsl	x1, x1, #4
    db18:	b.ne	dbb0 <__sancov_lowest_stack@@Base+0x380>  // b.any
    db1c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    db20:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    db24:	add	x2, x2, #0x8e8
    db28:	add	x0, x0, #0x808
    db2c:	mov	x4, #0x0                   	// #0
    db30:	mov	x3, #0x0                   	// #0
    db34:	mov	w1, #0x3a                  	// #58
    db38:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    db3c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    db40:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    db44:	add	x2, x2, #0x7b0
    db48:	add	x0, x0, #0x728
    db4c:	mov	x4, #0x0                   	// #0
    db50:	mov	x3, #0x0                   	// #0
    db54:	mov	w1, #0xae                  	// #174
    db58:	str	x25, [sp, #48]
    db5c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    db60:	mov	w2, #0x0                   	// #0
    db64:	b	db00 <__sancov_lowest_stack@@Base+0x2d0>
    db68:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    db6c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    db70:	add	x2, x2, #0x778
    db74:	add	x0, x0, #0x6c8
    db78:	mov	x4, #0x0                   	// #0
    db7c:	mov	x3, #0x0                   	// #0
    db80:	mov	w1, #0x91                  	// #145
    db84:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    db88:	mov	x2, x23
    db8c:	mov	x1, x20
    db90:	mov	x0, x19
    db94:	str	x25, [sp, #48]
    db98:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    db9c:	mov	x2, x23
    dba0:	mov	x1, x21
    dba4:	mov	x0, x19
    dba8:	str	x25, [sp, #48]
    dbac:	bl	15568 <__sancov_default_options@@Base+0x2a98>
    dbb0:	sub	x21, x0, x1
    dbb4:	ldr	x25, [sp, #48]
    dbb8:	b	d984 <__sancov_lowest_stack@@Base+0x154>
    dbbc:	nop
    dbc0:	stp	x19, x20, [sp, #-48]!
    dbc4:	mov	x20, #0x1                   	// #1
    dbc8:	stp	x21, x22, [sp, #16]
    dbcc:	adrp	x22, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    dbd0:	add	x22, x22, #0xec0
    dbd4:	str	x30, [sp, #32]
    dbd8:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    dbdc:	mov	x21, x0
    dbe0:	add	x19, x0, #0x400
    dbe4:	b	dbfc <__sancov_lowest_stack@@Base+0x3cc>
    dbe8:	mov	x3, x20
    dbec:	mov	x2, x22
    dbf0:	mov	x1, x19
    dbf4:	mov	x0, x21
    dbf8:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
    dbfc:	ldr	x0, [x19]
    dc00:	cbnz	x0, dbe8 <__sancov_lowest_stack@@Base+0x3b8>
    dc04:	add	x20, x20, #0x1
    dc08:	add	x19, x19, #0x400
    dc0c:	cmp	x20, #0x36
    dc10:	b.ne	dbfc <__sancov_lowest_stack@@Base+0x3cc>  // b.any
    dc14:	ldp	x21, x22, [sp, #16]
    dc18:	ldr	x30, [sp, #32]
    dc1c:	ldp	x19, x20, [sp], #48
    dc20:	ret
    dc24:	nop
    dc28:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dc2c:	stp	x19, x20, [sp, #-64]!
    dc30:	mov	x19, x0
    dc34:	ldr	x1, [x1, #3856]
    dc38:	str	x30, [sp, #40]
    dc3c:	cbz	x1, dc44 <__sancov_lowest_stack@@Base+0x414>
    dc40:	bl	6be0 <__sanitizer_free_hook@plt>
    dc44:	mov	x0, x19
    dc48:	bl	16070 <__sancov_default_options@@Base+0x35a0>
    dc4c:	cbz	x19, dec4 <__sancov_lowest_stack@@Base+0x694>
    dc50:	stp	x21, x22, [sp, #16]
    dc54:	mov	x0, #0xffffffffffff        	// #281474976710655
    dc58:	cmp	x19, x0
    dc5c:	b.ls	dd60 <__sancov_lowest_stack@@Base+0x530>  // b.plast
    dc60:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    dc64:	add	x21, x20, #0xec0
    dc68:	add	x21, x21, #0x80, lsl #12
    dc6c:	ldr	x0, [x21, #3520]
    dc70:	sub	x1, x0, #0x1
    dc74:	tst	x19, x1
    dc78:	b.ne	de44 <__sancov_lowest_stack@@Base+0x614>  // b.any
    dc7c:	sub	x0, x19, x0
    dc80:	strb	wzr, [x0, #32]
    dc84:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    dc88:	add	x0, x20, #0xec0
    dc8c:	add	x0, x0, #0x80, lsl #12
    dc90:	ldr	x4, [x0, #3520]
    dc94:	sub	x0, x4, #0x1
    dc98:	tst	x19, x0
    dc9c:	b.ne	df90 <__sancov_lowest_stack@@Base+0x760>  // b.any
    dca0:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    dca4:	sub	x19, x19, x4
    dca8:	add	x0, x0, #0xee8
    dcac:	mov	w2, #0x1                   	// #1
    dcb0:	ldxrb	w1, [x0]
    dcb4:	stxrb	w3, w2, [x0]
    dcb8:	cbnz	w3, dcb0 <__sancov_lowest_stack@@Base+0x480>
    dcbc:	dmb	ish
    dcc0:	tst	w1, #0xff
    dcc4:	b.eq	dccc <__sancov_lowest_stack@@Base+0x49c>  // b.none
    dcc8:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    dccc:	add	x20, x20, #0xec0
    dcd0:	add	x0, x20, #0x80, lsl #12
    dcd4:	ldr	x1, [x19, #24]
    dcd8:	ldr	x2, [x0, #3528]
    dcdc:	ldr	x3, [x2, x1, lsl #3]
    dce0:	cmp	x3, x19
    dce4:	b.ne	dfb4 <__sancov_lowest_stack@@Base+0x784>  // b.any
    dce8:	ldr	x4, [x0, #3576]
    dcec:	cmp	x1, x4
    dcf0:	b.cs	dfd4 <__sancov_lowest_stack@@Base+0x7a4>  // b.hs, b.nlast
    dcf4:	sub	x4, x4, #0x1
    dcf8:	ldr	x3, [x19, #8]
    dcfc:	str	x4, [x0, #3576]
    dd00:	ldr	x4, [x2, x4, lsl #3]
    dd04:	str	x4, [x2, x1, lsl #3]
    dd08:	ldr	x2, [x0, #4160]
    dd0c:	str	x1, [x4, #24]
    dd10:	sub	x2, x2, x3
    dd14:	str	x2, [x0, #4160]
    dd18:	ldr	x4, [x0, #3600]
    dd1c:	strb	wzr, [x0, #3584]
    dd20:	ldr	x2, [x0, #3608]
    dd24:	add	x4, x4, #0x1
    dd28:	ldr	x1, [x0, #4168]
    dd2c:	sub	x2, x2, x3
    dd30:	str	x4, [x0, #3600]
    dd34:	sub	x1, x1, x3
    dd38:	str	x2, [x0, #3608]
    dd3c:	str	x1, [x0, #4168]
    dd40:	dmb	ish
    dd44:	add	x20, x20, #0x81, lsl #12
    dd48:	strb	wzr, [x20, #40]
    dd4c:	ldp	x0, x1, [x19]
    dd50:	ldp	x21, x22, [sp, #16]
    dd54:	ldr	x30, [sp, #40]
    dd58:	ldp	x19, x20, [sp], #64
    dd5c:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    dd60:	lsr	x21, x19, #32
    dd64:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    dd68:	add	x1, x20, #0xec0
    dd6c:	ldr	x0, [x1, x21, lsl #3]
    dd70:	dmb	ish
    dd74:	cbz	x0, dd84 <__sancov_lowest_stack@@Base+0x554>
    dd78:	lsr	w2, w19, #20
    dd7c:	ldrb	w0, [x0, x2]
    dd80:	cbnz	w0, ded0 <__sancov_lowest_stack@@Base+0x6a0>
    dd84:	add	x22, x20, #0xec0
    dd88:	add	x22, x22, #0x80, lsl #12
    dd8c:	ldr	x0, [x22, #3520]
    dd90:	sub	x1, x0, #0x1
    dd94:	tst	x19, x1
    dd98:	b.ne	de94 <__sancov_lowest_stack@@Base+0x664>  // b.any
    dd9c:	sub	x0, x19, x0
    dda0:	strb	wzr, [x0, #32]
    dda4:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    dda8:	add	x2, x20, #0xec0
    ddac:	ldr	x1, [x2, x21, lsl #3]
    ddb0:	dmb	ish
    ddb4:	cbz	x1, dc88 <__sancov_lowest_stack@@Base+0x458>
    ddb8:	lsr	w3, w19, #20
    ddbc:	ldrb	w1, [x1, x3]
    ddc0:	cbz	w1, dc88 <__sancov_lowest_stack@@Base+0x458>
    ddc4:	str	x23, [sp, #32]
    ddc8:	ldr	x1, [x2, x21, lsl #3]
    ddcc:	dmb	ish
    ddd0:	cbz	x1, df70 <__sancov_lowest_stack@@Base+0x740>
    ddd4:	ldrb	w21, [x1, x3]
    ddd8:	cbz	x21, df70 <__sancov_lowest_stack@@Base+0x740>
    dddc:	cmp	x21, #0x35
    dde0:	b.hi	e01c <__sancov_lowest_stack@@Base+0x7ec>  // b.pmore
    dde4:	lsl	x23, x21, #10
    dde8:	add	x22, x0, x23
    ddec:	ldr	x1, [x22, #8]
    ddf0:	cbz	x1, e03c <__sancov_lowest_stack@@Base+0x80c>
    ddf4:	ldr	x2, [x22]
    ddf8:	cmp	x2, x1
    ddfc:	b.eq	e118 <__sancov_lowest_stack@@Base+0x8e8>  // b.none
    de00:	add	x21, x2, x21, lsl #7
    de04:	add	x23, x0, x23
    de08:	add	x21, x21, #0x4
    de0c:	add	x2, x2, #0x1
    de10:	mov	x3, #0xd800                	// #55296
    de14:	add	x1, x0, x3
    de18:	ldr	x30, [sp, #40]
    de1c:	str	x2, [x22]
    de20:	str	x19, [x0, x21, lsl #3]
    de24:	ldr	x0, [x1, #16]
    de28:	ldr	x2, [x23, #16]
    de2c:	ldp	x21, x22, [sp, #16]
    de30:	sub	x0, x0, x2
    de34:	ldr	x23, [sp, #32]
    de38:	str	x0, [x1, #16]
    de3c:	ldp	x19, x20, [sp], #64
    de40:	ret
    de44:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de48:	mov	x2, x19
    de4c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    de50:	add	x0, x0, #0x798
    de54:	ldr	x1, [x1, #4008]
    de58:	ldr	x1, [x1]
    de5c:	bl	22c78 <OnPrint@@Base+0x310>
    de60:	ldr	x0, [x21, #3520]
    de64:	sub	x1, x0, #0x1
    de68:	tst	x19, x1
    de6c:	b.eq	dc7c <__sancov_lowest_stack@@Base+0x44c>  // b.none
    de70:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    de74:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    de78:	add	x2, x2, #0x7b0
    de7c:	add	x0, x0, #0x728
    de80:	mov	x4, #0x0                   	// #0
    de84:	mov	x3, #0x0                   	// #0
    de88:	mov	w1, #0xae                  	// #174
    de8c:	str	x23, [sp, #32]
    de90:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    de94:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de98:	mov	x2, x19
    de9c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    dea0:	add	x0, x0, #0x798
    dea4:	ldr	x1, [x1, #4008]
    dea8:	ldr	x1, [x1]
    deac:	bl	22c78 <OnPrint@@Base+0x310>
    deb0:	ldr	x0, [x22, #3520]
    deb4:	sub	x1, x0, #0x1
    deb8:	tst	x19, x1
    debc:	b.eq	dd9c <__sancov_lowest_stack@@Base+0x56c>  // b.none
    dec0:	b	de70 <__sancov_lowest_stack@@Base+0x640>
    dec4:	ldr	x30, [sp, #40]
    dec8:	ldp	x19, x20, [sp], #64
    decc:	b	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    ded0:	str	x23, [sp, #32]
    ded4:	ldr	x0, [x1, x21, lsl #3]
    ded8:	dmb	ish
    dedc:	cbz	x0, dffc <__sancov_lowest_stack@@Base+0x7cc>
    dee0:	ldrb	w0, [x0, x2]
    dee4:	cbz	w0, dffc <__sancov_lowest_stack@@Base+0x7cc>
    dee8:	and	x3, x19, #0xfffffffffff00000
    deec:	ldr	x0, [x1, x21, lsl #3]
    def0:	dmb	ish
    def4:	cbz	x0, dff4 <__sancov_lowest_stack@@Base+0x7c4>
    def8:	ldrb	w0, [x0, x2]
    defc:	mov	w2, #0x200                 	// #512
    df00:	cmp	w0, #0x35
    df04:	and	x1, x0, #0xff
    df08:	b.eq	df34 <__sancov_lowest_stack@@Base+0x704>  // b.none
    df0c:	lsl	w2, w0, #4
    df10:	cmp	x1, #0x10
    df14:	b.ls	df34 <__sancov_lowest_stack@@Base+0x704>  // b.plast
    df18:	sub	x1, x1, #0x10
    df1c:	mov	x2, #0x100                 	// #256
    df20:	and	x4, x1, #0x3
    df24:	lsr	x1, x1, #2
    df28:	lsl	x1, x2, x1
    df2c:	lsr	x0, x1, #2
    df30:	madd	w2, w0, w4, w1
    df34:	sub	w0, w19, w3
    df38:	add	x3, x3, #0x100, lsl #12
    df3c:	udiv	w0, w0, w2
    df40:	add	x0, x0, #0x1
    df44:	cmp	x3, x0, lsl #4
    df48:	lsl	x0, x0, #4
    df4c:	b.ne	e138 <__sancov_lowest_stack@@Base+0x908>  // b.any
    df50:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    df54:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    df58:	add	x2, x2, #0x8e8
    df5c:	add	x0, x0, #0x808
    df60:	mov	x4, #0x0                   	// #0
    df64:	mov	x3, #0x0                   	// #0
    df68:	mov	w1, #0x44                  	// #68
    df6c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    df70:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    df74:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    df78:	add	x2, x2, #0xc88
    df7c:	add	x0, x0, #0xb80
    df80:	mov	x4, #0x0                   	// #0
    df84:	mov	x3, #0x0                   	// #0
    df88:	mov	w1, #0xae                  	// #174
    df8c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    df90:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    df94:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    df98:	add	x2, x2, #0xa30
    df9c:	add	x0, x0, #0x728
    dfa0:	mov	x4, #0x0                   	// #0
    dfa4:	mov	x3, #0x0                   	// #0
    dfa8:	mov	w1, #0x123                 	// #291
    dfac:	str	x23, [sp, #32]
    dfb0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    dfb4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    dfb8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    dfbc:	mov	x4, x19
    dfc0:	add	x2, x2, #0xa58
    dfc4:	add	x0, x0, #0x728
    dfc8:	mov	w1, #0x88                  	// #136
    dfcc:	str	x23, [sp, #32]
    dfd0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    dfd4:	mov	x3, x1
    dfd8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    dfdc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    dfe0:	add	x2, x2, #0xa78
    dfe4:	add	x0, x0, #0x728
    dfe8:	mov	w1, #0x89                  	// #137
    dfec:	str	x23, [sp, #32]
    dff0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    dff4:	mov	w2, #0x0                   	// #0
    dff8:	b	df34 <__sancov_lowest_stack@@Base+0x704>
    dffc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e000:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e004:	add	x2, x2, #0x778
    e008:	add	x0, x0, #0x6c8
    e00c:	mov	x4, #0x0                   	// #0
    e010:	mov	x3, #0x0                   	// #0
    e014:	mov	w1, #0x91                  	// #145
    e018:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e01c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e020:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e024:	mov	x3, x21
    e028:	add	x2, x2, #0xb60
    e02c:	add	x0, x0, #0xb80
    e030:	mov	x4, #0x36                  	// #54
    e034:	mov	w1, #0xaf                  	// #175
    e038:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e03c:	mov	x4, #0x1                   	// #1
    e040:	mov	x11, x4
    e044:	mov	x12, #0x7c                  	// #124
    e048:	mov	x10, #0x14                  	// #20
    e04c:	mov	x9, #0x100                 	// #256
    e050:	mov	w8, #0x4000                	// #16384
    e054:	mov	x1, #0x3e                  	// #62
    e058:	add	x6, x0, x4, lsl #10
    e05c:	lsl	x7, x4, #4
    e060:	mov	x5, x6
    e064:	mov	x2, #0x14                  	// #20
    e068:	mov	x3, x4
    e06c:	add	x4, x4, #0x1
    e070:	stp	x12, x7, [x6, #8]
    e074:	cmp	x4, #0x36
    e078:	str	x2, [x5, #24]
    e07c:	b.eq	e0ec <__sancov_lowest_stack@@Base+0x8bc>  // b.none
    e080:	cmp	x4, #0x35
    e084:	b.eq	e0f4 <__sancov_lowest_stack@@Base+0x8c4>  // b.none
    e088:	cmp	x4, #0x10
    e08c:	b.ls	e058 <__sancov_lowest_stack@@Base+0x828>  // b.plast
    e090:	sub	x2, x3, #0xf
    e094:	add	x5, x5, #0x400
    e098:	and	x7, x2, #0x3
    e09c:	mov	x3, x4
    e0a0:	lsr	x2, x2, #2
    e0a4:	add	x4, x4, #0x1
    e0a8:	lsl	x2, x9, x2
    e0ac:	lsr	x6, x2, #2
    e0b0:	madd	x6, x6, x7, x2
    e0b4:	str	x6, [x5, #16]
    e0b8:	udiv	w2, w8, w6
    e0bc:	cmp	x2, #0x0
    e0c0:	csel	x2, x2, x11, ne  // ne = any
    e0c4:	cmp	x2, #0x3e
    e0c8:	csel	x2, x2, x1, ls  // ls = plast
    e0cc:	add	x7, x2, #0x2
    e0d0:	lsl	x2, x2, #1
    e0d4:	str	x2, [x5, #8]
    e0d8:	cmp	x6, x7, lsl #3
    e0dc:	csel	x2, x10, xzr, cc  // cc = lo, ul, last
    e0e0:	str	x2, [x5, #24]
    e0e4:	cmp	x4, #0x36
    e0e8:	b.ne	e080 <__sancov_lowest_stack@@Base+0x850>  // b.any
    e0ec:	ldr	x1, [x22, #8]
    e0f0:	b	ddf4 <__sancov_lowest_stack@@Base+0x5c4>
    e0f4:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e0f8:	ldr	q0, [x1, #3824]
    e0fc:	mov	x1, #0xd400                	// #54272
    e100:	add	x2, x0, x1
    e104:	add	x1, x0, #0x8, lsl #12
    e108:	stur	q0, [x2, #8]
    e10c:	str	xzr, [x1, #21528]
    e110:	ldr	x1, [x22, #8]
    e114:	b	ddf4 <__sancov_lowest_stack@@Base+0x5c4>
    e118:	add	x2, x20, #0xec0
    e11c:	mov	x3, x21
    e120:	mov	x1, x22
    e124:	str	x0, [sp, #56]
    e128:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
    e12c:	ldr	x2, [x22]
    e130:	ldr	x0, [sp, #56]
    e134:	b	de00 <__sancov_lowest_stack@@Base+0x5d0>
    e138:	sub	x0, x3, x0
    e13c:	strb	wzr, [x0]
    e140:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e144:	ldr	x23, [sp, #32]
    e148:	b	dda8 <__sancov_lowest_stack@@Base+0x578>
    e14c:	nop
    e150:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e154:	stp	x19, x20, [sp, #-64]!
    e158:	mov	x19, x0
    e15c:	ldr	x1, [x1, #3856]
    e160:	str	x30, [sp, #40]
    e164:	cbz	x1, e16c <__sancov_lowest_stack@@Base+0x93c>
    e168:	bl	6be0 <__sanitizer_free_hook@plt>
    e16c:	mov	x0, x19
    e170:	bl	16070 <__sancov_default_options@@Base+0x35a0>
    e174:	cbz	x19, e3ec <__sancov_lowest_stack@@Base+0xbbc>
    e178:	stp	x21, x22, [sp, #16]
    e17c:	mov	x0, #0xffffffffffff        	// #281474976710655
    e180:	cmp	x19, x0
    e184:	b.ls	e288 <__sancov_lowest_stack@@Base+0xa58>  // b.plast
    e188:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    e18c:	add	x21, x20, #0xec0
    e190:	add	x21, x21, #0x80, lsl #12
    e194:	ldr	x0, [x21, #3520]
    e198:	sub	x1, x0, #0x1
    e19c:	tst	x19, x1
    e1a0:	b.ne	e36c <__sancov_lowest_stack@@Base+0xb3c>  // b.any
    e1a4:	sub	x0, x19, x0
    e1a8:	strb	wzr, [x0, #32]
    e1ac:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e1b0:	add	x0, x20, #0xec0
    e1b4:	add	x0, x0, #0x80, lsl #12
    e1b8:	ldr	x4, [x0, #3520]
    e1bc:	sub	x0, x4, #0x1
    e1c0:	tst	x19, x0
    e1c4:	b.ne	e4b8 <__sancov_lowest_stack@@Base+0xc88>  // b.any
    e1c8:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    e1cc:	sub	x19, x19, x4
    e1d0:	add	x0, x0, #0xee8
    e1d4:	mov	w2, #0x1                   	// #1
    e1d8:	ldxrb	w1, [x0]
    e1dc:	stxrb	w3, w2, [x0]
    e1e0:	cbnz	w3, e1d8 <__sancov_lowest_stack@@Base+0x9a8>
    e1e4:	dmb	ish
    e1e8:	tst	w1, #0xff
    e1ec:	b.eq	e1f4 <__sancov_lowest_stack@@Base+0x9c4>  // b.none
    e1f0:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    e1f4:	add	x20, x20, #0xec0
    e1f8:	add	x0, x20, #0x80, lsl #12
    e1fc:	ldr	x1, [x19, #24]
    e200:	ldr	x2, [x0, #3528]
    e204:	ldr	x3, [x2, x1, lsl #3]
    e208:	cmp	x3, x19
    e20c:	b.ne	e4dc <__sancov_lowest_stack@@Base+0xcac>  // b.any
    e210:	ldr	x4, [x0, #3576]
    e214:	cmp	x1, x4
    e218:	b.cs	e4fc <__sancov_lowest_stack@@Base+0xccc>  // b.hs, b.nlast
    e21c:	sub	x4, x4, #0x1
    e220:	ldr	x3, [x19, #8]
    e224:	str	x4, [x0, #3576]
    e228:	ldr	x4, [x2, x4, lsl #3]
    e22c:	str	x4, [x2, x1, lsl #3]
    e230:	ldr	x2, [x0, #4160]
    e234:	str	x1, [x4, #24]
    e238:	sub	x2, x2, x3
    e23c:	str	x2, [x0, #4160]
    e240:	ldr	x4, [x0, #3600]
    e244:	strb	wzr, [x0, #3584]
    e248:	ldr	x2, [x0, #3608]
    e24c:	add	x4, x4, #0x1
    e250:	ldr	x1, [x0, #4168]
    e254:	sub	x2, x2, x3
    e258:	str	x4, [x0, #3600]
    e25c:	sub	x1, x1, x3
    e260:	str	x2, [x0, #3608]
    e264:	str	x1, [x0, #4168]
    e268:	dmb	ish
    e26c:	add	x20, x20, #0x81, lsl #12
    e270:	strb	wzr, [x20, #40]
    e274:	ldp	x0, x1, [x19]
    e278:	ldp	x21, x22, [sp, #16]
    e27c:	ldr	x30, [sp, #40]
    e280:	ldp	x19, x20, [sp], #64
    e284:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    e288:	lsr	x21, x19, #32
    e28c:	adrp	x20, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    e290:	add	x1, x20, #0xec0
    e294:	ldr	x0, [x1, x21, lsl #3]
    e298:	dmb	ish
    e29c:	cbz	x0, e2ac <__sancov_lowest_stack@@Base+0xa7c>
    e2a0:	lsr	w2, w19, #20
    e2a4:	ldrb	w0, [x0, x2]
    e2a8:	cbnz	w0, e3f8 <__sancov_lowest_stack@@Base+0xbc8>
    e2ac:	add	x22, x20, #0xec0
    e2b0:	add	x22, x22, #0x80, lsl #12
    e2b4:	ldr	x0, [x22, #3520]
    e2b8:	sub	x1, x0, #0x1
    e2bc:	tst	x19, x1
    e2c0:	b.ne	e3bc <__sancov_lowest_stack@@Base+0xb8c>  // b.any
    e2c4:	sub	x0, x19, x0
    e2c8:	strb	wzr, [x0, #32]
    e2cc:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e2d0:	add	x2, x20, #0xec0
    e2d4:	ldr	x1, [x2, x21, lsl #3]
    e2d8:	dmb	ish
    e2dc:	cbz	x1, e1b0 <__sancov_lowest_stack@@Base+0x980>
    e2e0:	lsr	w3, w19, #20
    e2e4:	ldrb	w1, [x1, x3]
    e2e8:	cbz	w1, e1b0 <__sancov_lowest_stack@@Base+0x980>
    e2ec:	str	x23, [sp, #32]
    e2f0:	ldr	x1, [x2, x21, lsl #3]
    e2f4:	dmb	ish
    e2f8:	cbz	x1, e498 <__sancov_lowest_stack@@Base+0xc68>
    e2fc:	ldrb	w21, [x1, x3]
    e300:	cbz	x21, e498 <__sancov_lowest_stack@@Base+0xc68>
    e304:	cmp	x21, #0x35
    e308:	b.hi	e544 <__sancov_lowest_stack@@Base+0xd14>  // b.pmore
    e30c:	lsl	x23, x21, #10
    e310:	add	x22, x0, x23
    e314:	ldr	x1, [x22, #8]
    e318:	cbz	x1, e564 <__sancov_lowest_stack@@Base+0xd34>
    e31c:	ldr	x2, [x22]
    e320:	cmp	x2, x1
    e324:	b.eq	e640 <__sancov_lowest_stack@@Base+0xe10>  // b.none
    e328:	add	x21, x2, x21, lsl #7
    e32c:	add	x23, x0, x23
    e330:	add	x21, x21, #0x4
    e334:	add	x2, x2, #0x1
    e338:	mov	x3, #0xd800                	// #55296
    e33c:	add	x1, x0, x3
    e340:	ldr	x30, [sp, #40]
    e344:	str	x2, [x22]
    e348:	str	x19, [x0, x21, lsl #3]
    e34c:	ldr	x0, [x1, #16]
    e350:	ldr	x2, [x23, #16]
    e354:	ldp	x21, x22, [sp, #16]
    e358:	sub	x0, x0, x2
    e35c:	ldr	x23, [sp, #32]
    e360:	str	x0, [x1, #16]
    e364:	ldp	x19, x20, [sp], #64
    e368:	ret
    e36c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e370:	mov	x2, x19
    e374:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e378:	add	x0, x0, #0x798
    e37c:	ldr	x1, [x1, #4008]
    e380:	ldr	x1, [x1]
    e384:	bl	22c78 <OnPrint@@Base+0x310>
    e388:	ldr	x0, [x21, #3520]
    e38c:	sub	x1, x0, #0x1
    e390:	tst	x19, x1
    e394:	b.eq	e1a4 <__sancov_lowest_stack@@Base+0x974>  // b.none
    e398:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e39c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e3a0:	add	x2, x2, #0x7b0
    e3a4:	add	x0, x0, #0x728
    e3a8:	mov	x4, #0x0                   	// #0
    e3ac:	mov	x3, #0x0                   	// #0
    e3b0:	mov	w1, #0xae                  	// #174
    e3b4:	str	x23, [sp, #32]
    e3b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e3bc:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e3c0:	mov	x2, x19
    e3c4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e3c8:	add	x0, x0, #0x798
    e3cc:	ldr	x1, [x1, #4008]
    e3d0:	ldr	x1, [x1]
    e3d4:	bl	22c78 <OnPrint@@Base+0x310>
    e3d8:	ldr	x0, [x22, #3520]
    e3dc:	sub	x1, x0, #0x1
    e3e0:	tst	x19, x1
    e3e4:	b.eq	e2c4 <__sancov_lowest_stack@@Base+0xa94>  // b.none
    e3e8:	b	e398 <__sancov_lowest_stack@@Base+0xb68>
    e3ec:	ldr	x30, [sp, #40]
    e3f0:	ldp	x19, x20, [sp], #64
    e3f4:	b	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e3f8:	str	x23, [sp, #32]
    e3fc:	ldr	x0, [x1, x21, lsl #3]
    e400:	dmb	ish
    e404:	cbz	x0, e524 <__sancov_lowest_stack@@Base+0xcf4>
    e408:	ldrb	w0, [x0, x2]
    e40c:	cbz	w0, e524 <__sancov_lowest_stack@@Base+0xcf4>
    e410:	and	x3, x19, #0xfffffffffff00000
    e414:	ldr	x0, [x1, x21, lsl #3]
    e418:	dmb	ish
    e41c:	cbz	x0, e51c <__sancov_lowest_stack@@Base+0xcec>
    e420:	ldrb	w0, [x0, x2]
    e424:	mov	w2, #0x200                 	// #512
    e428:	cmp	w0, #0x35
    e42c:	and	x1, x0, #0xff
    e430:	b.eq	e45c <__sancov_lowest_stack@@Base+0xc2c>  // b.none
    e434:	lsl	w2, w0, #4
    e438:	cmp	x1, #0x10
    e43c:	b.ls	e45c <__sancov_lowest_stack@@Base+0xc2c>  // b.plast
    e440:	sub	x1, x1, #0x10
    e444:	mov	x2, #0x100                 	// #256
    e448:	and	x4, x1, #0x3
    e44c:	lsr	x1, x1, #2
    e450:	lsl	x1, x2, x1
    e454:	lsr	x0, x1, #2
    e458:	madd	w2, w0, w4, w1
    e45c:	sub	w0, w19, w3
    e460:	add	x3, x3, #0x100, lsl #12
    e464:	udiv	w0, w0, w2
    e468:	add	x0, x0, #0x1
    e46c:	cmp	x3, x0, lsl #4
    e470:	lsl	x0, x0, #4
    e474:	b.ne	e660 <__sancov_lowest_stack@@Base+0xe30>  // b.any
    e478:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e47c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e480:	add	x2, x2, #0x8e8
    e484:	add	x0, x0, #0x808
    e488:	mov	x4, #0x0                   	// #0
    e48c:	mov	x3, #0x0                   	// #0
    e490:	mov	w1, #0x44                  	// #68
    e494:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e498:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e49c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e4a0:	add	x2, x2, #0xc88
    e4a4:	add	x0, x0, #0xb80
    e4a8:	mov	x4, #0x0                   	// #0
    e4ac:	mov	x3, #0x0                   	// #0
    e4b0:	mov	w1, #0xae                  	// #174
    e4b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e4b8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e4bc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e4c0:	add	x2, x2, #0xa30
    e4c4:	add	x0, x0, #0x728
    e4c8:	mov	x4, #0x0                   	// #0
    e4cc:	mov	x3, #0x0                   	// #0
    e4d0:	mov	w1, #0x123                 	// #291
    e4d4:	str	x23, [sp, #32]
    e4d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e4dc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e4e0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e4e4:	mov	x4, x19
    e4e8:	add	x2, x2, #0xa58
    e4ec:	add	x0, x0, #0x728
    e4f0:	mov	w1, #0x88                  	// #136
    e4f4:	str	x23, [sp, #32]
    e4f8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e4fc:	mov	x3, x1
    e500:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e504:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e508:	add	x2, x2, #0xa78
    e50c:	add	x0, x0, #0x728
    e510:	mov	w1, #0x89                  	// #137
    e514:	str	x23, [sp, #32]
    e518:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e51c:	mov	w2, #0x0                   	// #0
    e520:	b	e45c <__sancov_lowest_stack@@Base+0xc2c>
    e524:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e528:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e52c:	add	x2, x2, #0x778
    e530:	add	x0, x0, #0x6c8
    e534:	mov	x4, #0x0                   	// #0
    e538:	mov	x3, #0x0                   	// #0
    e53c:	mov	w1, #0x91                  	// #145
    e540:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e544:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e548:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e54c:	mov	x3, x21
    e550:	add	x2, x2, #0xb60
    e554:	add	x0, x0, #0xb80
    e558:	mov	x4, #0x36                  	// #54
    e55c:	mov	w1, #0xaf                  	// #175
    e560:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e564:	mov	x4, #0x1                   	// #1
    e568:	mov	x11, x4
    e56c:	mov	x12, #0x7c                  	// #124
    e570:	mov	x10, #0x14                  	// #20
    e574:	mov	x9, #0x100                 	// #256
    e578:	mov	w8, #0x4000                	// #16384
    e57c:	mov	x1, #0x3e                  	// #62
    e580:	add	x6, x0, x4, lsl #10
    e584:	lsl	x7, x4, #4
    e588:	mov	x5, x6
    e58c:	mov	x2, #0x14                  	// #20
    e590:	mov	x3, x4
    e594:	add	x4, x4, #0x1
    e598:	stp	x12, x7, [x6, #8]
    e59c:	cmp	x4, #0x36
    e5a0:	str	x2, [x5, #24]
    e5a4:	b.eq	e614 <__sancov_lowest_stack@@Base+0xde4>  // b.none
    e5a8:	cmp	x4, #0x35
    e5ac:	b.eq	e61c <__sancov_lowest_stack@@Base+0xdec>  // b.none
    e5b0:	cmp	x4, #0x10
    e5b4:	b.ls	e580 <__sancov_lowest_stack@@Base+0xd50>  // b.plast
    e5b8:	sub	x2, x3, #0xf
    e5bc:	add	x5, x5, #0x400
    e5c0:	and	x7, x2, #0x3
    e5c4:	mov	x3, x4
    e5c8:	lsr	x2, x2, #2
    e5cc:	add	x4, x4, #0x1
    e5d0:	lsl	x2, x9, x2
    e5d4:	lsr	x6, x2, #2
    e5d8:	madd	x6, x6, x7, x2
    e5dc:	str	x6, [x5, #16]
    e5e0:	udiv	w2, w8, w6
    e5e4:	cmp	x2, #0x0
    e5e8:	csel	x2, x2, x11, ne  // ne = any
    e5ec:	cmp	x2, #0x3e
    e5f0:	csel	x2, x2, x1, ls  // ls = plast
    e5f4:	add	x7, x2, #0x2
    e5f8:	lsl	x2, x2, #1
    e5fc:	str	x2, [x5, #8]
    e600:	cmp	x6, x7, lsl #3
    e604:	csel	x2, x10, xzr, cc  // cc = lo, ul, last
    e608:	str	x2, [x5, #24]
    e60c:	cmp	x4, #0x36
    e610:	b.ne	e5a8 <__sancov_lowest_stack@@Base+0xd78>  // b.any
    e614:	ldr	x1, [x22, #8]
    e618:	b	e31c <__sancov_lowest_stack@@Base+0xaec>
    e61c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e620:	ldr	q0, [x1, #3824]
    e624:	mov	x1, #0xd400                	// #54272
    e628:	add	x2, x0, x1
    e62c:	add	x1, x0, #0x8, lsl #12
    e630:	stur	q0, [x2, #8]
    e634:	str	xzr, [x1, #21528]
    e638:	ldr	x1, [x22, #8]
    e63c:	b	e31c <__sancov_lowest_stack@@Base+0xaec>
    e640:	add	x2, x20, #0xec0
    e644:	mov	x3, x21
    e648:	mov	x1, x22
    e64c:	str	x0, [sp, #56]
    e650:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
    e654:	ldr	x2, [x22]
    e658:	ldr	x0, [sp, #56]
    e65c:	b	e328 <__sancov_lowest_stack@@Base+0xaf8>
    e660:	sub	x0, x3, x0
    e664:	strb	wzr, [x0]
    e668:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e66c:	ldr	x23, [sp, #32]
    e670:	b	e2d0 <__sancov_lowest_stack@@Base+0xaa0>
    e674:	nop
    e678:	stp	x19, x20, [sp, #-96]!
    e67c:	mov	x20, x2
    e680:	stp	x21, x22, [sp, #16]
    e684:	mov	x22, x0
    e688:	mov	x21, x3
    e68c:	str	x30, [sp, #72]
    e690:	cbz	x1, e908 <__sancov_lowest_stack@@Base+0x10d8>
    e694:	stp	x23, x24, [sp, #32]
    e698:	mov	x0, #0xffffffffffff        	// #281474976710655
    e69c:	mov	x19, x1
    e6a0:	stp	x25, x26, [sp, #48]
    e6a4:	cmp	x1, x0
    e6a8:	adrp	x24, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    e6ac:	b.ls	e7f8 <__sancov_lowest_stack@@Base+0xfc8>  // b.plast
    e6b0:	add	x23, x24, #0xec0
    e6b4:	add	x23, x23, #0x80, lsl #12
    e6b8:	ldr	x0, [x23, #3520]
    e6bc:	sub	x1, x0, #0x1
    e6c0:	tst	x19, x1
    e6c4:	b.ne	e8b8 <__sancov_lowest_stack@@Base+0x1088>  // b.any
    e6c8:	sub	x0, x19, x0
    e6cc:	mov	x1, #0x100000000           	// #4294967296
    e6d0:	cmp	x20, x1
    e6d4:	strb	wzr, [x0, #32]
    e6d8:	b.ls	ea0c <__sancov_lowest_stack@@Base+0x11dc>  // b.plast
    e6dc:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e6e0:	lsr	x23, x19, #32
    e6e4:	mov	x1, #0xffffffffffff        	// #281474976710655
    e6e8:	cmp	x19, x1
    e6ec:	b.ls	ec68 <__sancov_lowest_stack@@Base+0x1438>  // b.plast
    e6f0:	add	x0, x24, #0xec0
    e6f4:	add	x0, x0, #0x80, lsl #12
    e6f8:	ldr	x4, [x0, #3520]
    e6fc:	sub	x0, x4, #0x1
    e700:	tst	x19, x0
    e704:	b.ne	ee8c <__sancov_lowest_stack@@Base+0x165c>  // b.any
    e708:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    e70c:	sub	x19, x19, x4
    e710:	add	x0, x0, #0xee8
    e714:	mov	w2, #0x1                   	// #1
    e718:	ldxrb	w1, [x0]
    e71c:	stxrb	w3, w2, [x0]
    e720:	cbnz	w3, e718 <__sancov_lowest_stack@@Base+0xee8>
    e724:	dmb	ish
    e728:	tst	w1, #0xff
    e72c:	b.eq	e734 <__sancov_lowest_stack@@Base+0xf04>  // b.none
    e730:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    e734:	add	x24, x24, #0xec0
    e738:	add	x0, x24, #0x80, lsl #12
    e73c:	ldr	x1, [x19, #24]
    e740:	ldr	x2, [x0, #3528]
    e744:	ldr	x3, [x2, x1, lsl #3]
    e748:	cmp	x3, x19
    e74c:	b.ne	ee44 <__sancov_lowest_stack@@Base+0x1614>  // b.any
    e750:	ldr	x4, [x0, #3576]
    e754:	cmp	x1, x4
    e758:	b.cs	ee64 <__sancov_lowest_stack@@Base+0x1634>  // b.hs, b.nlast
    e75c:	sub	x4, x4, #0x1
    e760:	ldr	x3, [x19, #8]
    e764:	str	x4, [x0, #3576]
    e768:	ldr	x4, [x2, x4, lsl #3]
    e76c:	str	x4, [x2, x1, lsl #3]
    e770:	ldr	x2, [x0, #4160]
    e774:	str	x1, [x4, #24]
    e778:	sub	x2, x2, x3
    e77c:	str	x2, [x0, #4160]
    e780:	ldr	x4, [x0, #3600]
    e784:	strb	wzr, [x0, #3584]
    e788:	ldr	x2, [x0, #3608]
    e78c:	add	x4, x4, #0x1
    e790:	ldr	x1, [x0, #4168]
    e794:	sub	x2, x2, x3
    e798:	str	x4, [x0, #3600]
    e79c:	sub	x1, x1, x3
    e7a0:	str	x2, [x0, #3608]
    e7a4:	str	x1, [x0, #4168]
    e7a8:	dmb	ish
    e7ac:	add	x24, x24, #0x81, lsl #12
    e7b0:	strb	wzr, [x24, #40]
    e7b4:	ldp	x0, x1, [x19]
    e7b8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    e7bc:	ldp	x23, x24, [sp, #32]
    e7c0:	ldp	x25, x26, [sp, #48]
    e7c4:	bl	12f00 <__sancov_default_options@@Base+0x430>
    e7c8:	tst	w0, #0xff
    e7cc:	b.eq	f56c <__sancov_lowest_stack@@Base+0x1d3c>  // b.none
    e7d0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e7d4:	mov	x1, x20
    e7d8:	add	x0, x0, #0x9c8
    e7dc:	mov	x21, #0x0                   	// #0
    e7e0:	bl	22d00 <OnPrint@@Base+0x398>
    e7e4:	mov	x0, x21
    e7e8:	ldp	x21, x22, [sp, #16]
    e7ec:	ldr	x30, [sp, #72]
    e7f0:	ldp	x19, x20, [sp], #96
    e7f4:	ret
    e7f8:	lsr	x23, x1, #32
    e7fc:	add	x1, x24, #0xec0
    e800:	ldr	x0, [x1, x23, lsl #3]
    e804:	dmb	ish
    e808:	cbz	x0, e6b0 <__sancov_lowest_stack@@Base+0xe80>
    e80c:	lsr	w2, w19, #20
    e810:	ldrb	w0, [x0, x2]
    e814:	cbz	w0, e6b0 <__sancov_lowest_stack@@Base+0xe80>
    e818:	str	x27, [sp, #64]
    e81c:	ldr	x0, [x1, x23, lsl #3]
    e820:	dmb	ish
    e824:	cbz	x0, f134 <__sancov_lowest_stack@@Base+0x1904>
    e828:	ldrb	w0, [x0, x2]
    e82c:	cbz	w0, f134 <__sancov_lowest_stack@@Base+0x1904>
    e830:	and	x3, x19, #0xfffffffffff00000
    e834:	ldr	x0, [x1, x23, lsl #3]
    e838:	dmb	ish
    e83c:	cbz	x0, f12c <__sancov_lowest_stack@@Base+0x18fc>
    e840:	ldrb	w0, [x0, x2]
    e844:	mov	w2, #0x200                 	// #512
    e848:	cmp	w0, #0x35
    e84c:	and	x1, x0, #0xff
    e850:	b.eq	e87c <__sancov_lowest_stack@@Base+0x104c>  // b.none
    e854:	lsl	w2, w0, #4
    e858:	cmp	x1, #0x10
    e85c:	b.ls	e87c <__sancov_lowest_stack@@Base+0x104c>  // b.plast
    e860:	sub	x1, x1, #0x10
    e864:	mov	x2, #0x100                 	// #256
    e868:	and	x4, x1, #0x3
    e86c:	lsr	x1, x1, #2
    e870:	lsl	x1, x2, x1
    e874:	lsr	x0, x1, #2
    e878:	madd	w2, w0, w4, w1
    e87c:	sub	w0, w19, w3
    e880:	add	x3, x3, #0x100, lsl #12
    e884:	udiv	w0, w0, w2
    e888:	add	x0, x0, #0x1
    e88c:	cmp	x3, x0, lsl #4
    e890:	lsl	x0, x0, #4
    e894:	b.ne	ec48 <__sancov_lowest_stack@@Base+0x1418>  // b.any
    e898:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e89c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e8a0:	add	x2, x2, #0x8e8
    e8a4:	add	x0, x0, #0x808
    e8a8:	mov	x4, #0x0                   	// #0
    e8ac:	mov	x3, #0x0                   	// #0
    e8b0:	mov	w1, #0x44                  	// #68
    e8b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e8b8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e8bc:	mov	x2, x19
    e8c0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e8c4:	add	x0, x0, #0x798
    e8c8:	ldr	x1, [x1, #4008]
    e8cc:	ldr	x1, [x1]
    e8d0:	bl	22c78 <OnPrint@@Base+0x310>
    e8d4:	ldr	x0, [x23, #3520]
    e8d8:	sub	x1, x0, #0x1
    e8dc:	tst	x19, x1
    e8e0:	b.eq	e6c8 <__sancov_lowest_stack@@Base+0xe98>  // b.none
    e8e4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e8e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e8ec:	add	x2, x2, #0x7b0
    e8f0:	add	x0, x0, #0x728
    e8f4:	mov	x4, #0x0                   	// #0
    e8f8:	mov	x3, #0x0                   	// #0
    e8fc:	mov	w1, #0xae                  	// #174
    e900:	str	x27, [sp, #64]
    e904:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e908:	mov	x0, #0x100000000           	// #4294967296
    e90c:	cmp	x2, x0
    e910:	b.hi	ee3c <__sancov_lowest_stack@@Base+0x160c>  // b.pmore
    e914:	stp	x23, x24, [sp, #32]
    e918:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    e91c:	mov	x3, x21
    e920:	mov	x1, x0
    e924:	mov	x2, x20
    e928:	adrp	x24, 6f000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    e92c:	add	x0, x24, #0xec0
    e930:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    e934:	mov	x21, x0
    e938:	cbz	x21, f094 <__sancov_lowest_stack@@Base+0x1864>
    e93c:	mov	x0, #0xffffffffffff        	// #281474976710655
    e940:	cmp	x21, x0
    e944:	b.hi	edb0 <__sancov_lowest_stack@@Base+0x1580>  // b.pmore
    e948:	lsr	x2, x21, #32
    e94c:	add	x1, x24, #0xec0
    e950:	ldr	x0, [x1, x2, lsl #3]
    e954:	dmb	ish
    e958:	cbz	x0, edb0 <__sancov_lowest_stack@@Base+0x1580>
    e95c:	lsr	w3, w21, #20
    e960:	ldrb	w0, [x0, x3]
    e964:	cbz	w0, edb0 <__sancov_lowest_stack@@Base+0x1580>
    e968:	stp	x25, x26, [sp, #48]
    e96c:	str	x27, [sp, #64]
    e970:	ldr	x0, [x1, x2, lsl #3]
    e974:	dmb	ish
    e978:	cbz	x0, f134 <__sancov_lowest_stack@@Base+0x1904>
    e97c:	ldrb	w0, [x0, x3]
    e980:	cbz	w0, f134 <__sancov_lowest_stack@@Base+0x1904>
    e984:	and	x0, x21, #0xfffffffffff00000
    e988:	ldr	x1, [x1, x2, lsl #3]
    e98c:	dmb	ish
    e990:	cbz	x1, f374 <__sancov_lowest_stack@@Base+0x1b44>
    e994:	ldrb	w3, [x1, x3]
    e998:	mov	w2, #0x200                 	// #512
    e99c:	cmp	w3, #0x35
    e9a0:	and	x1, x3, #0xff
    e9a4:	b.eq	e9d0 <__sancov_lowest_stack@@Base+0x11a0>  // b.none
    e9a8:	lsl	w2, w3, #4
    e9ac:	cmp	x1, #0x10
    e9b0:	b.ls	e9d0 <__sancov_lowest_stack@@Base+0x11a0>  // b.plast
    e9b4:	sub	x1, x1, #0x10
    e9b8:	mov	x2, #0x100                 	// #256
    e9bc:	and	x3, x1, #0x3
    e9c0:	lsr	x1, x1, #2
    e9c4:	lsl	x2, x2, x1
    e9c8:	lsr	x1, x2, #2
    e9cc:	madd	w2, w1, w3, w2
    e9d0:	sub	w1, w21, w0
    e9d4:	add	x0, x0, #0x100, lsl #12
    e9d8:	udiv	w1, w1, w2
    e9dc:	add	x1, x1, #0x1
    e9e0:	cmp	x0, x1, lsl #4
    e9e4:	lsl	x1, x1, #4
    e9e8:	b.ne	f588 <__sancov_lowest_stack@@Base+0x1d58>  // b.any
    e9ec:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e9f0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    e9f4:	add	x2, x2, #0x8e8
    e9f8:	add	x0, x0, #0x808
    e9fc:	mov	x4, #0x0                   	// #0
    ea00:	mov	x3, #0x0                   	// #0
    ea04:	mov	w1, #0x3a                  	// #58
    ea08:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    ea0c:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    ea10:	mov	x25, x0
    ea14:	cbz	x20, eeb0 <__sancov_lowest_stack@@Base+0x1680>
    ea18:	mov	x0, #0xffffffffffff        	// #281474976710655
    ea1c:	lsr	x23, x19, #32
    ea20:	cmp	x19, x0
    ea24:	b.ls	ed08 <__sancov_lowest_stack@@Base+0x14d8>  // b.plast
    ea28:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ea2c:	add	x0, x0, #0xee8
    ea30:	mov	w2, #0x1                   	// #1
    ea34:	str	x27, [sp, #64]
    ea38:	ldxrb	w1, [x0]
    ea3c:	stxrb	w3, w2, [x0]
    ea40:	cbnz	w3, ea38 <__sancov_lowest_stack@@Base+0x1208>
    ea44:	dmb	ish
    ea48:	tst	w1, #0xff
    ea4c:	b.eq	ea54 <__sancov_lowest_stack@@Base+0x1224>  // b.none
    ea50:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    ea54:	add	x1, x24, #0xec0
    ea58:	add	x0, x1, #0x80, lsl #12
    ea5c:	ldr	x6, [x0, #3576]
    ea60:	cbz	x6, f09c <__sancov_lowest_stack@@Base+0x186c>
    ea64:	ldr	x1, [x0, #3528]
    ea68:	mov	x2, #0x0                   	// #0
    ea6c:	add	x6, x1, x6, lsl #3
    ea70:	ldr	x4, [x1]
    ea74:	cmp	x19, x4
    ea78:	b.cc	ea8c <__sancov_lowest_stack@@Base+0x125c>  // b.lo, b.ul, b.last
    ea7c:	sub	x5, x19, x2
    ea80:	sub	x3, x19, x4
    ea84:	cmp	x5, x3
    ea88:	csel	x2, x2, x4, ls  // ls = plast
    ea8c:	add	x1, x1, #0x8
    ea90:	cmp	x1, x6
    ea94:	b.ne	ea70 <__sancov_lowest_stack@@Base+0x1240>  // b.any
    ea98:	cbz	x2, f118 <__sancov_lowest_stack@@Base+0x18e8>
    ea9c:	ldr	x4, [x2]
    eaa0:	cmp	x4, x2
    eaa4:	b.hi	f0ac <__sancov_lowest_stack@@Base+0x187c>  // b.pmore
    eaa8:	ldr	x0, [x2, #8]
    eaac:	add	x4, x4, x0
    eab0:	cmp	x4, x2
    eab4:	b.ls	f0c8 <__sancov_lowest_stack@@Base+0x1898>  // b.plast
    eab8:	cmp	x19, x2
    eabc:	b.cc	f0e4 <__sancov_lowest_stack@@Base+0x18b4>  // b.lo, b.ul, b.last
    eac0:	cmp	x19, x4
    eac4:	b.cs	f064 <__sancov_lowest_stack@@Base+0x1834>  // b.hs, b.nlast
    eac8:	add	x0, x24, #0xec0
    eacc:	add	x1, x0, #0x80, lsl #12
    ead0:	ldr	x1, [x1, #3520]
    ead4:	sub	x3, x1, #0x1
    ead8:	tst	x3, x2
    eadc:	b.ne	f154 <__sancov_lowest_stack@@Base+0x1924>  // b.any
    eae0:	dmb	ish
    eae4:	add	x0, x0, #0x81, lsl #12
    eae8:	strb	wzr, [x0, #40]
    eaec:	cmn	x1, x2
    eaf0:	b.eq	f074 <__sancov_lowest_stack@@Base+0x1844>  // b.none
    eaf4:	mov	x0, #0xffffffffffff        	// #281474976710655
    eaf8:	cmp	x19, x0
    eafc:	b.ls	efb8 <__sancov_lowest_stack@@Base+0x1788>  // b.plast
    eb00:	ldr	x27, [sp, #64]
    eb04:	add	x0, x24, #0xec0
    eb08:	add	x0, x0, #0x80, lsl #12
    eb0c:	ldr	x1, [x0, #3520]
    eb10:	sub	x2, x1, #0x1
    eb14:	tst	x19, x2
    eb18:	b.ne	ee8c <__sancov_lowest_stack@@Base+0x165c>  // b.any
    eb1c:	sub	x0, x19, x1
    eb20:	tst	x1, x2
    eb24:	ldr	x0, [x0, #16]
    eb28:	b.ne	f104 <__sancov_lowest_stack@@Base+0x18d4>  // b.any
    eb2c:	add	x0, x0, x2
    eb30:	neg	x2, x1
    eb34:	and	x2, x0, x2
    eb38:	cmp	x2, x20
    eb3c:	csel	x23, x2, x20, ls  // ls = plast
    eb40:	mov	x3, x21
    eb44:	mov	x2, x20
    eb48:	mov	x1, x25
    eb4c:	add	x0, x24, #0xec0
    eb50:	bl	10260 <__sancov_lowest_stack@@Base+0x2a30>
    eb54:	mov	x21, x0
    eb58:	cbz	x0, eb68 <__sancov_lowest_stack@@Base+0x1338>
    eb5c:	mov	x2, x23
    eb60:	mov	x1, x19
    eb64:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
    eb68:	mov	x0, #0xffffffffffff        	// #281474976710655
    eb6c:	cmp	x19, x0
    eb70:	b.ls	efc8 <__sancov_lowest_stack@@Base+0x1798>  // b.plast
    eb74:	add	x0, x24, #0xec0
    eb78:	add	x0, x0, #0x80, lsl #12
    eb7c:	ldr	x4, [x0, #3520]
    eb80:	sub	x0, x4, #0x1
    eb84:	tst	x19, x0
    eb88:	b.ne	ee8c <__sancov_lowest_stack@@Base+0x165c>  // b.any
    eb8c:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    eb90:	sub	x19, x19, x4
    eb94:	add	x0, x0, #0xee8
    eb98:	mov	w2, #0x1                   	// #1
    eb9c:	ldxrb	w1, [x0]
    eba0:	stxrb	w3, w2, [x0]
    eba4:	cbnz	w3, eb9c <__sancov_lowest_stack@@Base+0x136c>
    eba8:	dmb	ish
    ebac:	tst	w1, #0xff
    ebb0:	b.eq	ebb8 <__sancov_lowest_stack@@Base+0x1388>  // b.none
    ebb4:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    ebb8:	add	x2, x24, #0xec0
    ebbc:	add	x0, x2, #0x80, lsl #12
    ebc0:	ldr	x1, [x19, #24]
    ebc4:	ldr	x5, [x0, #3528]
    ebc8:	ldr	x3, [x5, x1, lsl #3]
    ebcc:	cmp	x3, x19
    ebd0:	b.ne	ee44 <__sancov_lowest_stack@@Base+0x1614>  // b.any
    ebd4:	ldr	x4, [x0, #3576]
    ebd8:	cmp	x1, x4
    ebdc:	b.cs	ee64 <__sancov_lowest_stack@@Base+0x1634>  // b.hs, b.nlast
    ebe0:	sub	x4, x4, #0x1
    ebe4:	ldr	x6, [x19, #8]
    ebe8:	str	x4, [x0, #3576]
    ebec:	ldr	x4, [x5, x4, lsl #3]
    ebf0:	ldr	x3, [x0, #4160]
    ebf4:	str	x4, [x5, x1, lsl #3]
    ebf8:	str	x1, [x4, #24]
    ebfc:	sub	x3, x3, x6
    ec00:	str	x3, [x0, #4160]
    ec04:	ldr	x4, [x0, #3600]
    ec08:	strb	wzr, [x0, #3584]
    ec0c:	ldr	x3, [x0, #3608]
    ec10:	add	x4, x4, #0x1
    ec14:	ldr	x1, [x0, #4168]
    ec18:	sub	x3, x3, x6
    ec1c:	str	x4, [x0, #3600]
    ec20:	sub	x1, x1, x6
    ec24:	str	x3, [x0, #3608]
    ec28:	str	x1, [x0, #4168]
    ec2c:	dmb	ish
    ec30:	add	x2, x2, #0x81, lsl #12
    ec34:	strb	wzr, [x2, #40]
    ec38:	ldp	x0, x1, [x19]
    ec3c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    ec40:	ldp	x25, x26, [sp, #48]
    ec44:	b	e938 <__sancov_lowest_stack@@Base+0x1108>
    ec48:	sub	x0, x3, x0
    ec4c:	mov	x1, #0x100000000           	// #4294967296
    ec50:	cmp	x20, x1
    ec54:	strb	wzr, [x0]
    ec58:	b.ls	ecf8 <__sancov_lowest_stack@@Base+0x14c8>  // b.plast
    ec5c:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    ec60:	ldr	x27, [sp, #64]
    ec64:	nop
    ec68:	add	x2, x24, #0xec0
    ec6c:	ldr	x1, [x2, x23, lsl #3]
    ec70:	dmb	ish
    ec74:	cbz	x1, e6f0 <__sancov_lowest_stack@@Base+0xec0>
    ec78:	lsr	w3, w19, #20
    ec7c:	ldrb	w1, [x1, x3]
    ec80:	cbz	w1, e6f0 <__sancov_lowest_stack@@Base+0xec0>
    ec84:	ldr	x1, [x2, x23, lsl #3]
    ec88:	dmb	ish
    ec8c:	cbz	x1, f174 <__sancov_lowest_stack@@Base+0x1944>
    ec90:	ldrb	w21, [x1, x3]
    ec94:	cbz	x21, f174 <__sancov_lowest_stack@@Base+0x1944>
    ec98:	cmp	x21, #0x35
    ec9c:	b.hi	f234 <__sancov_lowest_stack@@Base+0x1a04>  // b.pmore
    eca0:	lsl	x23, x21, #10
    eca4:	add	x25, x0, x23
    eca8:	ldr	x1, [x25, #8]
    ecac:	cbz	x1, f270 <__sancov_lowest_stack@@Base+0x1a40>
    ecb0:	ldr	x2, [x25]
    ecb4:	cmp	x2, x1
    ecb8:	b.eq	f250 <__sancov_lowest_stack@@Base+0x1a20>  // b.none
    ecbc:	add	x1, x2, x21, lsl #7
    ecc0:	add	x23, x0, x23
    ecc4:	add	x1, x1, #0x4
    ecc8:	add	x2, x2, #0x1
    eccc:	mov	x5, #0xd800                	// #55296
    ecd0:	add	x3, x0, x5
    ecd4:	str	x2, [x25]
    ecd8:	str	x19, [x0, x1, lsl #3]
    ecdc:	ldr	x0, [x3, #16]
    ece0:	ldr	x1, [x23, #16]
    ece4:	ldp	x23, x24, [sp, #32]
    ece8:	sub	x0, x0, x1
    ecec:	ldp	x25, x26, [sp, #48]
    ecf0:	str	x0, [x3, #16]
    ecf4:	b	e7c4 <__sancov_lowest_stack@@Base+0xf94>
    ecf8:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    ecfc:	mov	x25, x0
    ed00:	ldr	x27, [sp, #64]
    ed04:	cbz	x20, eec0 <__sancov_lowest_stack@@Base+0x1690>
    ed08:	add	x0, x24, #0xec0
    ed0c:	ldr	x0, [x0, x23, lsl #3]
    ed10:	dmb	ish
    ed14:	cbz	x0, ea28 <__sancov_lowest_stack@@Base+0x11f8>
    ed18:	lsr	w1, w19, #20
    ed1c:	lsr	x2, x19, #20
    ed20:	ldrb	w0, [x0, x1]
    ed24:	cbz	w0, ea28 <__sancov_lowest_stack@@Base+0x11f8>
    ed28:	add	x1, x24, #0xec0
    ed2c:	ldr	x0, [x1, x23, lsl #3]
    ed30:	dmb	ish
    ed34:	cbz	x0, eb04 <__sancov_lowest_stack@@Base+0x12d4>
    ed38:	and	x2, x2, #0xfff
    ed3c:	ldrb	w0, [x0, x2]
    ed40:	cbz	w0, eb04 <__sancov_lowest_stack@@Base+0x12d4>
    ed44:	ldr	x0, [x1, x23, lsl #3]
    ed48:	dmb	ish
    ed4c:	cbz	x0, f350 <__sancov_lowest_stack@@Base+0x1b20>
    ed50:	ldrb	w0, [x0, x2]
    ed54:	cbz	w0, f350 <__sancov_lowest_stack@@Base+0x1b20>
    ed58:	ldr	x23, [x1, x23, lsl #3]
    ed5c:	dmb	ish
    ed60:	cbz	x23, eb40 <__sancov_lowest_stack@@Base+0x1310>
    ed64:	ldrb	w0, [x23, x2]
    ed68:	cmp	w0, #0x35
    ed6c:	and	x1, x0, #0xff
    ed70:	b.eq	f240 <__sancov_lowest_stack@@Base+0x1a10>  // b.none
    ed74:	ubfiz	x0, x0, #4, #8
    ed78:	cmp	x0, x20
    ed7c:	csel	x23, x0, x20, ls  // ls = plast
    ed80:	cmp	x1, #0x10
    ed84:	b.ls	eb40 <__sancov_lowest_stack@@Base+0x1310>  // b.plast
    ed88:	sub	x1, x1, #0x10
    ed8c:	mov	x2, #0x100                 	// #256
    ed90:	and	x23, x1, #0x3
    ed94:	lsr	x1, x1, #2
    ed98:	lsl	x1, x2, x1
    ed9c:	lsr	x2, x1, #2
    eda0:	madd	x2, x2, x23, x1
    eda4:	cmp	x2, x20
    eda8:	csel	x23, x2, x20, ls  // ls = plast
    edac:	b	eb40 <__sancov_lowest_stack@@Base+0x1310>
    edb0:	add	x24, x24, #0xec0
    edb4:	add	x24, x24, #0x80, lsl #12
    edb8:	ldr	x19, [x24, #3520]
    edbc:	sub	x0, x19, #0x1
    edc0:	tst	x21, x0
    edc4:	b.eq	edf4 <__sancov_lowest_stack@@Base+0x15c4>  // b.none
    edc8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    edcc:	mov	x2, x21
    edd0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    edd4:	add	x0, x0, #0x798
    edd8:	ldr	x1, [x1, #4008]
    eddc:	ldr	x1, [x1]
    ede0:	bl	22c78 <OnPrint@@Base+0x310>
    ede4:	ldr	x19, [x24, #3520]
    ede8:	sub	x0, x19, #0x1
    edec:	tst	x21, x0
    edf0:	b.ne	ee84 <__sancov_lowest_stack@@Base+0x1654>  // b.any
    edf4:	sub	x19, x21, x19
    edf8:	add	x19, x19, #0x20
    edfc:	bl	ab30 <__lsan_do_recoverable_leak_check@@Base+0xe68>
    ee00:	mov	w2, w0
    ee04:	ldrb	w3, [x19, #1]
    ee08:	neg	w2, w2
    ee0c:	ldp	x0, x1, [x22]
    ee10:	bfxil	w3, w2, #0, #2
    ee14:	strb	w3, [x19, #1]
    ee18:	bl	24410 <OnPrint@@Base+0x1aa8>
    ee1c:	str	w0, [x19, #8]
    ee20:	ldr	x1, [x19]
    ee24:	mov	w2, #0x1                   	// #1
    ee28:	bfi	x1, x20, #10, #54
    ee2c:	str	x1, [x19]
    ee30:	strb	w2, [x19]
    ee34:	ldp	x23, x24, [sp, #32]
    ee38:	b	e7e4 <__sancov_lowest_stack@@Base+0xfb4>
    ee3c:	bl	b240 <__sanitizer_print_stack_trace@@Base+0xe8>
    ee40:	b	e7c4 <__sancov_lowest_stack@@Base+0xf94>
    ee44:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ee48:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ee4c:	mov	x4, x19
    ee50:	add	x2, x2, #0xa58
    ee54:	add	x0, x0, #0x728
    ee58:	mov	w1, #0x88                  	// #136
    ee5c:	str	x27, [sp, #64]
    ee60:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    ee64:	mov	x3, x1
    ee68:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ee6c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ee70:	add	x2, x2, #0xa78
    ee74:	add	x0, x0, #0x728
    ee78:	mov	w1, #0x89                  	// #137
    ee7c:	str	x27, [sp, #64]
    ee80:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    ee84:	stp	x25, x26, [sp, #48]
    ee88:	b	e8e4 <__sancov_lowest_stack@@Base+0x10b4>
    ee8c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ee90:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    ee94:	add	x2, x2, #0xa30
    ee98:	add	x0, x0, #0x728
    ee9c:	mov	x4, #0x0                   	// #0
    eea0:	mov	x3, #0x0                   	// #0
    eea4:	mov	w1, #0x123                 	// #291
    eea8:	str	x27, [sp, #64]
    eeac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    eeb0:	mov	x0, #0xffffffffffff        	// #281474976710655
    eeb4:	cmp	x19, x0
    eeb8:	b.hi	eedc <__sancov_lowest_stack@@Base+0x16ac>  // b.pmore
    eebc:	lsr	x23, x19, #32
    eec0:	add	x1, x24, #0xec0
    eec4:	ldr	x0, [x1, x23, lsl #3]
    eec8:	dmb	ish
    eecc:	cbz	x0, eedc <__sancov_lowest_stack@@Base+0x16ac>
    eed0:	lsr	w2, w19, #20
    eed4:	ldrb	w0, [x0, x2]
    eed8:	cbnz	w0, f198 <__sancov_lowest_stack@@Base+0x1968>
    eedc:	add	x0, x24, #0xec0
    eee0:	add	x0, x0, #0x80, lsl #12
    eee4:	ldr	x0, [x0, #3520]
    eee8:	sub	x1, x0, #0x1
    eeec:	tst	x19, x1
    eef0:	b.ne	ee8c <__sancov_lowest_stack@@Base+0x165c>  // b.any
    eef4:	sub	x19, x19, x0
    eef8:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    eefc:	add	x0, x0, #0xee8
    ef00:	mov	w2, #0x1                   	// #1
    ef04:	ldxrb	w1, [x0]
    ef08:	stxrb	w3, w2, [x0]
    ef0c:	cbnz	w3, ef04 <__sancov_lowest_stack@@Base+0x16d4>
    ef10:	dmb	ish
    ef14:	tst	w1, #0xff
    ef18:	b.eq	ef20 <__sancov_lowest_stack@@Base+0x16f0>  // b.none
    ef1c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    ef20:	add	x24, x24, #0xec0
    ef24:	add	x0, x24, #0x80, lsl #12
    ef28:	ldr	x1, [x19, #24]
    ef2c:	ldr	x2, [x0, #3528]
    ef30:	ldr	x3, [x2, x1, lsl #3]
    ef34:	cmp	x3, x19
    ef38:	b.ne	ee44 <__sancov_lowest_stack@@Base+0x1614>  // b.any
    ef3c:	ldr	x4, [x0, #3576]
    ef40:	cmp	x1, x4
    ef44:	b.cs	ee64 <__sancov_lowest_stack@@Base+0x1634>  // b.hs, b.nlast
    ef48:	sub	x4, x4, #0x1
    ef4c:	ldr	x3, [x19, #8]
    ef50:	str	x4, [x0, #3576]
    ef54:	ldr	x4, [x2, x4, lsl #3]
    ef58:	str	x4, [x2, x1, lsl #3]
    ef5c:	ldr	x2, [x0, #4160]
    ef60:	str	x1, [x4, #24]
    ef64:	sub	x2, x2, x3
    ef68:	str	x2, [x0, #4160]
    ef6c:	ldr	x4, [x0, #3600]
    ef70:	strb	wzr, [x0, #3584]
    ef74:	ldr	x2, [x0, #3608]
    ef78:	add	x4, x4, #0x1
    ef7c:	ldr	x1, [x0, #4168]
    ef80:	sub	x2, x2, x3
    ef84:	str	x4, [x0, #3600]
    ef88:	sub	x1, x1, x3
    ef8c:	str	x2, [x0, #3608]
    ef90:	str	x1, [x0, #4168]
    ef94:	dmb	ish
    ef98:	add	x24, x24, #0x81, lsl #12
    ef9c:	strb	wzr, [x24, #40]
    efa0:	ldp	x0, x1, [x19]
    efa4:	mov	x21, #0x0                   	// #0
    efa8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
    efac:	ldp	x23, x24, [sp, #32]
    efb0:	ldp	x25, x26, [sp, #48]
    efb4:	b	e7e4 <__sancov_lowest_stack@@Base+0xfb4>
    efb8:	lsr	x2, x19, #20
    efbc:	lsr	x23, x19, #32
    efc0:	ldr	x27, [sp, #64]
    efc4:	b	ed28 <__sancov_lowest_stack@@Base+0x14f8>
    efc8:	lsr	x2, x19, #32
    efcc:	add	x1, x24, #0xec0
    efd0:	ldr	x0, [x1, x2, lsl #3]
    efd4:	dmb	ish
    efd8:	cbz	x0, eb74 <__sancov_lowest_stack@@Base+0x1344>
    efdc:	lsr	w3, w19, #20
    efe0:	ldrb	w0, [x0, x3]
    efe4:	cbz	w0, eb74 <__sancov_lowest_stack@@Base+0x1344>
    efe8:	str	x27, [sp, #64]
    efec:	ldr	x0, [x1, x2, lsl #3]
    eff0:	dmb	ish
    eff4:	cbz	x0, f178 <__sancov_lowest_stack@@Base+0x1948>
    eff8:	ldrb	w23, [x0, x3]
    effc:	cbz	x23, f178 <__sancov_lowest_stack@@Base+0x1948>
    f000:	mov	x3, x23
    f004:	cmp	x23, #0x35
    f008:	b.hi	f218 <__sancov_lowest_stack@@Base+0x19e8>  // b.pmore
    f00c:	lsl	x26, x23, #10
    f010:	add	x27, x25, x26
    f014:	ldr	x2, [x27, #8]
    f018:	cbz	x2, f398 <__sancov_lowest_stack@@Base+0x1b68>
    f01c:	ldr	x0, [x27]
    f020:	cmp	x0, x2
    f024:	b.eq	f37c <__sancov_lowest_stack@@Base+0x1b4c>  // b.none
    f028:	add	x2, x0, x23, lsl #7
    f02c:	add	x26, x25, x26
    f030:	add	x2, x2, #0x4
    f034:	add	x0, x0, #0x1
    f038:	mov	x3, #0xd800                	// #55296
    f03c:	add	x3, x25, x3
    f040:	str	x0, [x27]
    f044:	str	x19, [x25, x2, lsl #3]
    f048:	ldr	x0, [x3, #16]
    f04c:	ldr	x1, [x26, #16]
    f050:	ldp	x25, x26, [sp, #48]
    f054:	sub	x0, x0, x1
    f058:	ldr	x27, [sp, #64]
    f05c:	str	x0, [x3, #16]
    f060:	b	e938 <__sancov_lowest_stack@@Base+0x1108>
    f064:	dmb	ish
    f068:	add	x24, x24, #0xec0
    f06c:	add	x24, x24, #0x81, lsl #12
    f070:	strb	wzr, [x24, #40]
    f074:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f078:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f07c:	add	x2, x2, #0x778
    f080:	add	x0, x0, #0xe50
    f084:	mov	x4, #0x0                   	// #0
    f088:	mov	x3, #0x0                   	// #0
    f08c:	mov	w1, #0x62                  	// #98
    f090:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f094:	ldp	x23, x24, [sp, #32]
    f098:	b	e7e4 <__sancov_lowest_stack@@Base+0xfb4>
    f09c:	dmb	ish
    f0a0:	add	x1, x1, #0x81, lsl #12
    f0a4:	strb	wzr, [x1, #40]
    f0a8:	b	f074 <__sancov_lowest_stack@@Base+0x1844>
    f0ac:	mov	x3, x2
    f0b0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f0b4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f0b8:	add	x0, x0, #0x728
    f0bc:	add	x2, x2, #0x838
    f0c0:	mov	w1, #0xc1                  	// #193
    f0c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f0c8:	mov	x3, x2
    f0cc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f0d0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f0d4:	add	x0, x0, #0x728
    f0d8:	add	x2, x2, #0x860
    f0dc:	mov	w1, #0xc2                  	// #194
    f0e0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f0e4:	mov	x3, x2
    f0e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f0ec:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f0f0:	mov	x4, x19
    f0f4:	add	x2, x2, #0x898
    f0f8:	add	x0, x0, #0x728
    f0fc:	mov	w1, #0xc3                  	// #195
    f100:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f104:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
    f108:	add	x0, x0, #0x6e8
    f10c:	str	x27, [sp, #64]
    f110:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
    f114:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f118:	dmb	ish
    f11c:	add	x0, x24, #0xec0
    f120:	add	x0, x0, #0x81, lsl #12
    f124:	strb	wzr, [x0, #40]
    f128:	b	f074 <__sancov_lowest_stack@@Base+0x1844>
    f12c:	mov	w2, #0x0                   	// #0
    f130:	b	e87c <__sancov_lowest_stack@@Base+0x104c>
    f134:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f138:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f13c:	add	x2, x2, #0x778
    f140:	add	x0, x0, #0x6c8
    f144:	mov	x4, #0x0                   	// #0
    f148:	mov	x3, #0x0                   	// #0
    f14c:	mov	w1, #0x91                  	// #145
    f150:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f154:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f158:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f15c:	add	x2, x2, #0x8b8
    f160:	add	x0, x0, #0x728
    f164:	mov	x4, #0x0                   	// #0
    f168:	mov	x3, #0x0                   	// #0
    f16c:	mov	w1, #0x12b                 	// #299
    f170:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f174:	str	x27, [sp, #64]
    f178:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f17c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f180:	add	x2, x2, #0xc88
    f184:	add	x0, x0, #0xb80
    f188:	mov	x4, #0x0                   	// #0
    f18c:	mov	x3, #0x0                   	// #0
    f190:	mov	w1, #0xae                  	// #174
    f194:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f198:	ldr	x0, [x1, x23, lsl #3]
    f19c:	dmb	ish
    f1a0:	cbz	x0, f174 <__sancov_lowest_stack@@Base+0x1944>
    f1a4:	ldrb	w20, [x0, x2]
    f1a8:	cbz	x20, f174 <__sancov_lowest_stack@@Base+0x1944>
    f1ac:	cmp	x20, #0x35
    f1b0:	b.hi	f210 <__sancov_lowest_stack@@Base+0x19e0>  // b.pmore
    f1b4:	lsl	x22, x20, #10
    f1b8:	add	x21, x25, x22
    f1bc:	ldr	x1, [x21, #8]
    f1c0:	cbz	x1, f490 <__sancov_lowest_stack@@Base+0x1c60>
    f1c4:	ldr	x0, [x21]
    f1c8:	cmp	x0, x1
    f1cc:	b.eq	f474 <__sancov_lowest_stack@@Base+0x1c44>  // b.none
    f1d0:	add	x1, x0, x20, lsl #7
    f1d4:	add	x22, x25, x22
    f1d8:	add	x1, x1, #0x4
    f1dc:	add	x0, x0, #0x1
    f1e0:	mov	x4, #0xd800                	// #55296
    f1e4:	add	x2, x25, x4
    f1e8:	ldp	x23, x24, [sp, #32]
    f1ec:	str	x0, [x21]
    f1f0:	str	x19, [x25, x1, lsl #3]
    f1f4:	mov	x21, #0x0                   	// #0
    f1f8:	ldr	x0, [x2, #16]
    f1fc:	ldr	x1, [x22, #16]
    f200:	ldp	x25, x26, [sp, #48]
    f204:	sub	x0, x0, x1
    f208:	str	x0, [x2, #16]
    f20c:	b	e7e4 <__sancov_lowest_stack@@Base+0xfb4>
    f210:	mov	x3, x20
    f214:	str	x27, [sp, #64]
    f218:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f21c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f220:	add	x2, x2, #0xb60
    f224:	add	x0, x0, #0xb80
    f228:	mov	x4, #0x36                  	// #54
    f22c:	mov	w1, #0xaf                  	// #175
    f230:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f234:	mov	x3, x21
    f238:	str	x27, [sp, #64]
    f23c:	b	f218 <__sancov_lowest_stack@@Base+0x19e8>
    f240:	cmp	x20, #0x200
    f244:	mov	x2, #0x200                 	// #512
    f248:	csel	x23, x20, x2, ls  // ls = plast
    f24c:	b	eb40 <__sancov_lowest_stack@@Base+0x1310>
    f250:	add	x2, x24, #0xec0
    f254:	mov	x3, x21
    f258:	mov	x1, x25
    f25c:	str	x0, [sp, #88]
    f260:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
    f264:	ldr	x2, [x25]
    f268:	ldr	x0, [sp, #88]
    f26c:	b	ecbc <__sancov_lowest_stack@@Base+0x148c>
    f270:	mov	x4, #0x1                   	// #1
    f274:	mov	x12, x4
    f278:	mov	x13, #0x7c                  	// #124
    f27c:	mov	x11, #0x14                  	// #20
    f280:	mov	x10, #0x100                 	// #256
    f284:	mov	w9, #0x4000                	// #16384
    f288:	mov	x8, #0x3e                  	// #62
    f28c:	nop
    f290:	add	x6, x0, x4, lsl #10
    f294:	lsl	x1, x4, #4
    f298:	mov	x5, x6
    f29c:	mov	x2, #0x14                  	// #20
    f2a0:	mov	x3, x4
    f2a4:	add	x4, x4, #0x1
    f2a8:	stp	x13, x1, [x6, #8]
    f2ac:	cmp	x4, #0x36
    f2b0:	str	x2, [x5, #24]
    f2b4:	b.eq	f324 <__sancov_lowest_stack@@Base+0x1af4>  // b.none
    f2b8:	cmp	x4, #0x35
    f2bc:	b.eq	f32c <__sancov_lowest_stack@@Base+0x1afc>  // b.none
    f2c0:	cmp	x4, #0x10
    f2c4:	b.ls	f290 <__sancov_lowest_stack@@Base+0x1a60>  // b.plast
    f2c8:	sub	x2, x3, #0xf
    f2cc:	add	x5, x5, #0x400
    f2d0:	and	x1, x2, #0x3
    f2d4:	mov	x3, x4
    f2d8:	lsr	x2, x2, #2
    f2dc:	add	x4, x4, #0x1
    f2e0:	lsl	x2, x10, x2
    f2e4:	lsr	x6, x2, #2
    f2e8:	madd	x6, x6, x1, x2
    f2ec:	str	x6, [x5, #16]
    f2f0:	udiv	w2, w9, w6
    f2f4:	cmp	x2, #0x0
    f2f8:	csel	x2, x2, x12, ne  // ne = any
    f2fc:	cmp	x2, #0x3e
    f300:	csel	x2, x2, x8, ls  // ls = plast
    f304:	add	x7, x2, #0x2
    f308:	lsl	x2, x2, #1
    f30c:	str	x2, [x5, #8]
    f310:	cmp	x6, x7, lsl #3
    f314:	csel	x2, x11, xzr, cc  // cc = lo, ul, last
    f318:	str	x2, [x5, #24]
    f31c:	cmp	x4, #0x36
    f320:	b.ne	f2b8 <__sancov_lowest_stack@@Base+0x1a88>  // b.any
    f324:	ldr	x1, [x25, #8]
    f328:	b	ecb0 <__sancov_lowest_stack@@Base+0x1480>
    f32c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f330:	mov	x2, #0xd400                	// #54272
    f334:	add	x2, x0, x2
    f338:	ldr	q0, [x1, #3824]
    f33c:	add	x1, x0, #0x8, lsl #12
    f340:	stur	q0, [x2, #8]
    f344:	str	xzr, [x1, #21528]
    f348:	ldr	x1, [x25, #8]
    f34c:	b	ecb0 <__sancov_lowest_stack@@Base+0x1480>
    f350:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f354:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f358:	add	x2, x2, #0x778
    f35c:	add	x0, x0, #0x6c8
    f360:	mov	x4, #0x0                   	// #0
    f364:	mov	x3, #0x0                   	// #0
    f368:	mov	w1, #0xcc                  	// #204
    f36c:	str	x27, [sp, #64]
    f370:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f374:	mov	w2, #0x0                   	// #0
    f378:	b	e9d0 <__sancov_lowest_stack@@Base+0x11a0>
    f37c:	mov	x0, x25
    f380:	mov	x3, x23
    f384:	add	x2, x24, #0xec0
    f388:	mov	x1, x27
    f38c:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
    f390:	ldr	x0, [x27]
    f394:	b	f028 <__sancov_lowest_stack@@Base+0x17f8>
    f398:	mov	x2, #0x1                   	// #1
    f39c:	mov	x11, x2
    f3a0:	mov	x12, #0x7c                  	// #124
    f3a4:	mov	x10, #0x14                  	// #20
    f3a8:	mov	x9, #0x100                 	// #256
    f3ac:	mov	w8, #0x4000                	// #16384
    f3b0:	mov	x7, #0x3e                  	// #62
    f3b4:	add	x5, x25, x2, lsl #10
    f3b8:	lsl	x6, x2, #4
    f3bc:	mov	x4, x5
    f3c0:	mov	x0, #0x14                  	// #20
    f3c4:	mov	x3, x2
    f3c8:	add	x2, x2, #0x1
    f3cc:	stp	x12, x6, [x5, #8]
    f3d0:	cmp	x2, #0x36
    f3d4:	str	x0, [x4, #24]
    f3d8:	b.eq	f448 <__sancov_lowest_stack@@Base+0x1c18>  // b.none
    f3dc:	cmp	x2, #0x35
    f3e0:	b.eq	f450 <__sancov_lowest_stack@@Base+0x1c20>  // b.none
    f3e4:	cmp	x2, #0x10
    f3e8:	b.ls	f3b4 <__sancov_lowest_stack@@Base+0x1b84>  // b.plast
    f3ec:	sub	x0, x3, #0xf
    f3f0:	add	x4, x4, #0x400
    f3f4:	and	x6, x0, #0x3
    f3f8:	mov	x3, x2
    f3fc:	lsr	x0, x0, #2
    f400:	add	x2, x2, #0x1
    f404:	lsl	x0, x9, x0
    f408:	lsr	x5, x0, #2
    f40c:	madd	x5, x5, x6, x0
    f410:	str	x5, [x4, #16]
    f414:	udiv	w0, w8, w5
    f418:	cmp	x0, #0x0
    f41c:	csel	x0, x0, x11, ne  // ne = any
    f420:	cmp	x0, #0x3e
    f424:	csel	x0, x0, x7, ls  // ls = plast
    f428:	add	x6, x0, #0x2
    f42c:	lsl	x0, x0, #1
    f430:	str	x0, [x4, #8]
    f434:	cmp	x5, x6, lsl #3
    f438:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    f43c:	str	x0, [x4, #24]
    f440:	cmp	x2, #0x36
    f444:	b.ne	f3dc <__sancov_lowest_stack@@Base+0x1bac>  // b.any
    f448:	ldr	x2, [x27, #8]
    f44c:	b	f01c <__sancov_lowest_stack@@Base+0x17ec>
    f450:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f454:	ldr	q0, [x0, #3824]
    f458:	mov	x0, #0xd400                	// #54272
    f45c:	add	x2, x25, x0
    f460:	add	x0, x25, #0x8, lsl #12
    f464:	stur	q0, [x2, #8]
    f468:	str	xzr, [x0, #21528]
    f46c:	ldr	x2, [x27, #8]
    f470:	b	f01c <__sancov_lowest_stack@@Base+0x17ec>
    f474:	mov	x0, x25
    f478:	add	x2, x24, #0xec0
    f47c:	mov	x3, x20
    f480:	mov	x1, x21
    f484:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
    f488:	ldr	x0, [x21]
    f48c:	b	f1d0 <__sancov_lowest_stack@@Base+0x19a0>
    f490:	mov	x2, #0x1                   	// #1
    f494:	mov	x10, x2
    f498:	mov	x11, #0x7c                  	// #124
    f49c:	mov	x9, #0x14                  	// #20
    f4a0:	mov	x8, #0x100                 	// #256
    f4a4:	mov	w7, #0x4000                	// #16384
    f4a8:	mov	x6, #0x3e                  	// #62
    f4ac:	add	x1, x25, x2, lsl #10
    f4b0:	lsl	x5, x2, #4
    f4b4:	mov	x4, x1
    f4b8:	mov	x0, #0x14                  	// #20
    f4bc:	mov	x3, x2
    f4c0:	add	x2, x2, #0x1
    f4c4:	stp	x11, x5, [x1, #8]
    f4c8:	cmp	x2, #0x36
    f4cc:	str	x0, [x4, #24]
    f4d0:	b.eq	f540 <__sancov_lowest_stack@@Base+0x1d10>  // b.none
    f4d4:	cmp	x2, #0x35
    f4d8:	b.eq	f548 <__sancov_lowest_stack@@Base+0x1d18>  // b.none
    f4dc:	cmp	x2, #0x10
    f4e0:	b.ls	f4ac <__sancov_lowest_stack@@Base+0x1c7c>  // b.plast
    f4e4:	sub	x0, x3, #0xf
    f4e8:	add	x4, x4, #0x400
    f4ec:	and	x1, x0, #0x3
    f4f0:	mov	x3, x2
    f4f4:	lsr	x0, x0, #2
    f4f8:	add	x2, x2, #0x1
    f4fc:	lsl	x0, x8, x0
    f500:	lsr	x5, x0, #2
    f504:	madd	x5, x5, x1, x0
    f508:	str	x5, [x4, #16]
    f50c:	udiv	w0, w7, w5
    f510:	cmp	x0, #0x0
    f514:	csel	x0, x0, x10, ne  // ne = any
    f518:	cmp	x0, #0x3e
    f51c:	csel	x0, x0, x6, ls  // ls = plast
    f520:	add	x1, x0, #0x2
    f524:	lsl	x0, x0, #1
    f528:	str	x0, [x4, #8]
    f52c:	cmp	x5, x1, lsl #3
    f530:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
    f534:	str	x0, [x4, #24]
    f538:	cmp	x2, #0x36
    f53c:	b.ne	f4d4 <__sancov_lowest_stack@@Base+0x1ca4>  // b.any
    f540:	ldr	x1, [x21, #8]
    f544:	b	f1c4 <__sancov_lowest_stack@@Base+0x1994>
    f548:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f54c:	mov	x1, #0xd400                	// #54272
    f550:	add	x1, x25, x1
    f554:	ldr	q0, [x0, #3824]
    f558:	add	x0, x25, #0x8, lsl #12
    f55c:	stur	q0, [x1, #8]
    f560:	str	xzr, [x0, #21528]
    f564:	ldr	x1, [x21, #8]
    f568:	b	f1c4 <__sancov_lowest_stack@@Base+0x1994>
    f56c:	mov	x2, x22
    f570:	mov	x0, x20
    f574:	mov	x1, #0x100000000           	// #4294967296
    f578:	stp	x23, x24, [sp, #32]
    f57c:	stp	x25, x26, [sp, #48]
    f580:	str	x27, [sp, #64]
    f584:	bl	15610 <__sancov_default_options@@Base+0x2b40>
    f588:	sub	x19, x0, x1
    f58c:	ldp	x25, x26, [sp, #48]
    f590:	ldr	x27, [sp, #64]
    f594:	b	edfc <__sancov_lowest_stack@@Base+0x15cc>
    f598:	mov	x4, x0
    f59c:	str	x30, [sp, #-32]!
    f5a0:	mov	x3, x1
    f5a4:	mov	x0, x2
    f5a8:	mov	x1, x4
    f5ac:	mov	x2, x3
    f5b0:	mov	x3, #0x1                   	// #1
    f5b4:	bl	e678 <__sancov_lowest_stack@@Base+0xe48>
    f5b8:	cbz	x0, f5c4 <__sancov_lowest_stack@@Base+0x1d94>
    f5bc:	ldr	x30, [sp], #32
    f5c0:	ret
    f5c4:	str	x0, [sp, #24]
    f5c8:	bl	15438 <__sancov_default_options@@Base+0x2968>
    f5cc:	ldr	x0, [sp, #24]
    f5d0:	ldr	x30, [sp], #32
    f5d4:	ret
    f5d8:	stp	x19, x20, [sp, #-32]!
    f5dc:	mov	x20, x0
    f5e0:	mov	w19, #0x0                   	// #0
    f5e4:	stp	x21, x30, [sp, #16]
    f5e8:	mov	w21, #0x1                   	// #1
    f5ec:	nop
    f5f0:	cmp	w19, #0x9
    f5f4:	b.gt	f630 <__sancov_lowest_stack@@Base+0x1e00>
    f5f8:	ldrb	w0, [x20]
    f5fc:	tst	w0, #0xff
    f600:	b.ne	f61c <__sancov_lowest_stack@@Base+0x1dec>  // b.any
    f604:	ldxrb	w0, [x20]
    f608:	stxrb	w1, w21, [x20]
    f60c:	cbnz	w1, f604 <__sancov_lowest_stack@@Base+0x1dd4>
    f610:	dmb	ish
    f614:	tst	w0, #0xff
    f618:	b.eq	f624 <__sancov_lowest_stack@@Base+0x1df4>  // b.none
    f61c:	add	w19, w19, #0x1
    f620:	b	f5f0 <__sancov_lowest_stack@@Base+0x1dc0>
    f624:	ldp	x21, x30, [sp, #16]
    f628:	ldp	x19, x20, [sp], #32
    f62c:	ret
    f630:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
    f634:	b	f5f8 <__sancov_lowest_stack@@Base+0x1dc8>
    f638:	stp	x19, x20, [sp, #-48]!
    f63c:	stp	x21, x22, [sp, #16]
    f640:	mov	x21, x0
    f644:	ldr	x0, [x2, #8]
    f648:	stp	x23, x30, [sp, #32]
    f64c:	cbz	x0, f6f8 <__sancov_lowest_stack@@Base+0x1ec8>
    f650:	mov	x0, #0x2001                	// #8193
    f654:	add	x22, x1, x0
    f658:	mov	x20, x2
    f65c:	mov	x19, x1
    f660:	add	x23, x21, x22, lsl #6
    f664:	mov	w1, #0x1                   	// #1
    f668:	ldxrb	w0, [x23]
    f66c:	stxrb	w2, w1, [x23]
    f670:	cbnz	w2, f668 <__sancov_lowest_stack@@Base+0x1e38>
    f674:	dmb	ish
    f678:	tst	w0, #0xff
    f67c:	b.eq	f688 <__sancov_lowest_stack@@Base+0x1e58>  // b.none
    f680:	mov	x0, x23
    f684:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    f688:	ldr	x0, [x23, #8]
    f68c:	cbz	x0, f6c4 <__sancov_lowest_stack@@Base+0x1e94>
    f690:	add	x19, x21, x19, lsl #6
    f694:	add	x0, x0, #0x1
    f698:	add	x19, x19, #0x80, lsl #12
    f69c:	ldr	x1, [x19, #80]
    f6a0:	str	x1, [x20]
    f6a4:	stp	x0, x20, [x19, #72]
    f6a8:	dmb	ish
    f6ac:	lsl	x22, x22, #6
    f6b0:	strb	wzr, [x21, x22]
    f6b4:	ldp	x21, x22, [sp, #16]
    f6b8:	ldp	x23, x30, [sp, #32]
    f6bc:	ldp	x19, x20, [sp], #48
    f6c0:	ret
    f6c4:	add	x0, x21, x22, lsl #6
    f6c8:	dup	v0.2d, x20
    f6cc:	str	xzr, [x20]
    f6d0:	mov	x1, #0x1                   	// #1
    f6d4:	str	x1, [x0, #8]
    f6d8:	str	q0, [x0, #16]
    f6dc:	dmb	ish
    f6e0:	lsl	x22, x22, #6
    f6e4:	strb	wzr, [x21, x22]
    f6e8:	ldp	x21, x22, [sp, #16]
    f6ec:	ldp	x23, x30, [sp, #32]
    f6f0:	ldp	x19, x20, [sp], #48
    f6f4:	ret
    f6f8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f6fc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    f700:	add	x2, x2, #0x6b0
    f704:	add	x0, x0, #0x6c8
    f708:	mov	x4, #0x0                   	// #0
    f70c:	mov	x3, #0x0                   	// #0
    f710:	mov	w1, #0xad                  	// #173
    f714:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f718:	cmp	x1, #0x1
    f71c:	mov	x4, #0x1                   	// #1
    f720:	b.ls	f814 <__sancov_lowest_stack@@Base+0x1fe4>  // b.plast
    f724:	nop
    f728:	ldr	x5, [x0, x4, lsl #3]
    f72c:	mov	x2, x4
    f730:	sub	x3, x2, #0x1
    f734:	mov	x6, x2
    f738:	lsr	x2, x3, #1
    f73c:	ldr	x3, [x0, x2, lsl #3]
    f740:	cmp	x3, x5
    f744:	b.cs	f754 <__sancov_lowest_stack@@Base+0x1f24>  // b.hs, b.nlast
    f748:	str	x3, [x0, x6, lsl #3]
    f74c:	str	x5, [x0, x2, lsl #3]
    f750:	cbnz	x2, f730 <__sancov_lowest_stack@@Base+0x1f00>
    f754:	add	x2, x4, #0x1
    f758:	cmp	x1, x2
    f75c:	b.eq	f7ac <__sancov_lowest_stack@@Base+0x1f7c>  // b.none
    f760:	mov	x4, x2
    f764:	b	f728 <__sancov_lowest_stack@@Base+0x1ef8>
    f768:	cmp	x1, x4
    f76c:	b.cs	f7a4 <__sancov_lowest_stack@@Base+0x1f74>  // b.hs, b.nlast
    f770:	lsl	x5, x5, #4
    f774:	add	x7, x0, x5
    f778:	ldr	x3, [x0, x2, lsl #3]
    f77c:	ldr	x5, [x0, x5]
    f780:	cmp	x5, x3
    f784:	b.ls	f7a4 <__sancov_lowest_stack@@Base+0x1f74>  // b.plast
    f788:	cmp	x1, x2
    f78c:	b.eq	f7a4 <__sancov_lowest_stack@@Base+0x1f74>  // b.none
    f790:	ldr	x3, [x0, x2, lsl #3]
    f794:	str	x5, [x0, x2, lsl #3]
    f798:	str	x3, [x7]
    f79c:	cmp	x1, x4
    f7a0:	b.cc	f80c <__sancov_lowest_stack@@Base+0x1fdc>  // b.lo, b.ul, b.last
    f7a4:	subs	x4, x4, #0x1
    f7a8:	b.eq	f814 <__sancov_lowest_stack@@Base+0x1fe4>  // b.none
    f7ac:	ldr	x3, [x0, x4, lsl #3]
    f7b0:	mov	x2, #0x0                   	// #0
    f7b4:	ldr	x1, [x0]
    f7b8:	str	x3, [x0]
    f7bc:	str	x1, [x0, x4, lsl #3]
    f7c0:	lsl	x1, x2, #1
    f7c4:	add	x5, x2, #0x1
    f7c8:	add	x3, x1, #0x1
    f7cc:	add	x1, x1, #0x2
    f7d0:	cmp	x3, x4
    f7d4:	b.cs	f768 <__sancov_lowest_stack@@Base+0x1f38>  // b.hs, b.nlast
    f7d8:	ldr	x6, [x0, x3, lsl #3]
    f7dc:	add	x8, x0, x3, lsl #3
    f7e0:	ldr	x7, [x0, x2, lsl #3]
    f7e4:	cmp	x7, x6
    f7e8:	b.cs	f768 <__sancov_lowest_stack@@Base+0x1f38>  // b.hs, b.nlast
    f7ec:	cmp	x1, x4
    f7f0:	b.cc	f818 <__sancov_lowest_stack@@Base+0x1fe8>  // b.lo, b.ul, b.last
    f7f4:	cmp	x3, x2
    f7f8:	b.eq	f7a4 <__sancov_lowest_stack@@Base+0x1f74>  // b.none
    f7fc:	mov	x1, x3
    f800:	ldr	x5, [x0, x2, lsl #3]
    f804:	str	x6, [x0, x2, lsl #3]
    f808:	str	x5, [x0, x3, lsl #3]
    f80c:	mov	x2, x1
    f810:	b	f7c0 <__sancov_lowest_stack@@Base+0x1f90>
    f814:	ret
    f818:	lsl	x9, x5, #4
    f81c:	add	x7, x0, x5, lsl #4
    f820:	ldr	x5, [x0, x9]
    f824:	cmp	x6, x5
    f828:	b.cc	f788 <__sancov_lowest_stack@@Base+0x1f58>  // b.lo, b.ul, b.last
    f82c:	mov	x5, x6
    f830:	mov	x7, x8
    f834:	mov	x1, x3
    f838:	b	f788 <__sancov_lowest_stack@@Base+0x1f58>
    f83c:	nop
    f840:	adrp	x5, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f844:	sub	sp, sp, #0x210
    f848:	ldr	x5, [x5, #3616]
    f84c:	stp	x25, x26, [sp, #48]
    f850:	mov	x26, x2
    f854:	mov	x25, x3
    f858:	stp	x19, x20, [sp]
    f85c:	mov	x19, x1
    f860:	ldr	x2, [x5]
    f864:	mov	x1, #0x100000              	// #1048576
    f868:	stp	x21, x22, [sp, #16]
    f86c:	mov	x21, x0
    f870:	mov	x0, x1
    f874:	str	x30, [sp, #80]
    f878:	str	x4, [sp, #104]
    f87c:	bl	20230 <__sanitizer_set_report_fd@@Base+0x6968>
    f880:	ldr	x4, [sp, #104]
    f884:	cbz	x0, fa6c <__sancov_lowest_stack@@Base+0x223c>
    f888:	mov	x22, x0
    f88c:	tst	x0, #0xfffff
    f890:	ldr	x0, [x19, #24]
    f894:	stp	x23, x24, [sp, #32]
    f898:	stp	x27, x28, [sp, #64]
    f89c:	add	x0, x0, #0x100, lsl #12
    f8a0:	str	x0, [x19, #24]
    f8a4:	b.ne	fc78 <__sancov_lowest_stack@@Base+0x2448>  // b.any
    f8a8:	mov	x0, #0xfffffff             	// #268435455
    f8ac:	lsr	x19, x22, #20
    f8b0:	cmp	x0, x22, lsr #20
    f8b4:	b.cc	fce0 <__sancov_lowest_stack@@Base+0x24b0>  // b.lo, b.ul, b.last
    f8b8:	and	w23, w4, #0xff
    f8bc:	lsr	x20, x22, #32
    f8c0:	ldr	x0, [x21, x20, lsl #3]
    f8c4:	dmb	ish
    f8c8:	cbz	x0, fc30 <__sancov_lowest_stack@@Base+0x2400>
    f8cc:	and	x3, x19, #0xfff
    f8d0:	ldrb	w1, [x0, x3]
    f8d4:	cbnz	x1, fd38 <__sancov_lowest_stack@@Base+0x2508>
    f8d8:	strb	w23, [x0, x3]
    f8dc:	cmp	x4, #0x35
    f8e0:	b.eq	fb04 <__sancov_lowest_stack@@Base+0x22d4>  // b.none
    f8e4:	lsl	x28, x4, #4
    f8e8:	cmp	x4, #0x10
    f8ec:	b.ls	f90c <__sancov_lowest_stack@@Base+0x20dc>  // b.plast
    f8f0:	sub	x0, x4, #0x10
    f8f4:	mov	x28, #0x100                 	// #256
    f8f8:	and	x1, x0, #0x3
    f8fc:	lsr	x0, x0, #2
    f900:	lsl	x0, x28, x0
    f904:	lsr	x28, x0, #2
    f908:	madd	x28, x28, x1, x0
    f90c:	add	x0, x28, #0x10
    f910:	mov	x27, #0x100000              	// #1048576
    f914:	udiv	x27, x27, x0
    f918:	cbz	x28, fc20 <__sancov_lowest_stack@@Base+0x23f0>
    f91c:	mov	w23, #0x4000                	// #16384
    f920:	mov	x1, #0x40                  	// #64
    f924:	mov	x0, #0x3e                  	// #62
    f928:	mul	x27, x27, x28
    f92c:	udiv	w23, w23, w28
    f930:	cmp	x23, x1
    f934:	csel	x23, x23, x1, ls  // ls = plast
    f938:	cmp	x23, #0x0
    f93c:	csinc	x23, x23, xzr, ne  // ne = any
    f940:	cmp	x23, x0
    f944:	csel	x23, x23, x0, ls  // ls = plast
    f948:	add	x27, x22, x27
    f94c:	cmp	x22, x27
    f950:	b.cs	fc20 <__sancov_lowest_stack@@Base+0x23f0>  // b.hs, b.nlast
    f954:	add	x24, sp, #0x90
    f958:	add	x7, x26, x4, lsl #10
    f95c:	mov	x1, #0x0                   	// #0
    f960:	mov	x19, #0x1                   	// #1
    f964:	str	x22, [sp, #144]
    f968:	add	x22, x22, x28
    f96c:	cmp	x22, x27
    f970:	b.cs	fac0 <__sancov_lowest_stack@@Base+0x2290>  // b.hs, b.nlast
    f974:	str	x22, [x24, x19, lsl #3]
    f978:	cmp	x19, #0x2f
    f97c:	add	x19, x19, #0x1
    f980:	b.ne	f968 <__sancov_lowest_stack@@Base+0x2138>  // b.any
    f984:	mov	x2, #0xd800                	// #55296
    f988:	mov	x19, #0x0                   	// #0
    f98c:	add	x9, x26, x2
    f990:	b	f99c <__sancov_lowest_stack@@Base+0x216c>
    f994:	cmp	x19, #0x2f
    f998:	b.hi	fafc <__sancov_lowest_stack@@Base+0x22cc>  // b.pmore
    f99c:	ldr	x8, [x24, x19, lsl #3]
    f9a0:	cbz	x1, f9ec <__sancov_lowest_stack@@Base+0x21bc>
    f9a4:	ldr	x5, [x1, #8]
    f9a8:	add	x6, x5, #0x1
    f9ac:	add	x5, x5, #0x2
    f9b0:	str	x6, [x1, #8]
    f9b4:	add	x19, x19, #0x1
    f9b8:	cmp	x6, x23
    f9bc:	str	x8, [x1, x5, lsl #3]
    f9c0:	b.ne	f994 <__sancov_lowest_stack@@Base+0x2164>  // b.any
    f9c4:	ldr	x5, [x25, #8]
    f9c8:	cbnz	x5, fa88 <__sancov_lowest_stack@@Base+0x2258>
    f9cc:	dup	v0.2d, x1
    f9d0:	str	xzr, [x1]
    f9d4:	mov	x0, #0x1                   	// #1
    f9d8:	str	x0, [x25, #8]
    f9dc:	cmp	x19, #0x2f
    f9e0:	str	q0, [x25, #16]
    f9e4:	b.hi	faa8 <__sancov_lowest_stack@@Base+0x2278>  // b.pmore
    f9e8:	ldr	x8, [x24, x19, lsl #3]
    f9ec:	mov	x1, x8
    f9f0:	ldr	x20, [x7, #24]
    f9f4:	cbnz	x20, fa0c <__sancov_lowest_stack@@Base+0x21dc>
    f9f8:	cbz	x1, fa64 <__sancov_lowest_stack@@Base+0x2234>
    f9fc:	mov	x5, #0x0                   	// #0
    fa00:	mov	x6, #0x1                   	// #1
    fa04:	str	xzr, [x1, #8]
    fa08:	b	f9ac <__sancov_lowest_stack@@Base+0x217c>
    fa0c:	cmp	x20, #0x35
    fa10:	b.hi	fc98 <__sancov_lowest_stack@@Base+0x2468>  // b.pmore
    fa14:	lsl	x5, x20, #10
    fa18:	add	x1, x26, x5
    fa1c:	ldr	x0, [x26, x5]
    fa20:	cbz	x0, fd00 <__sancov_lowest_stack@@Base+0x24d0>
    fa24:	lsl	x20, x20, #7
    fa28:	add	x3, x26, x5
    fa2c:	add	x1, x20, x0
    fa30:	sub	x0, x0, #0x1
    fa34:	add	x1, x1, #0x2
    fa38:	str	x0, [x26, x5]
    fa3c:	add	x20, x20, x0
    fa40:	add	x20, x20, #0x4
    fa44:	ldr	x2, [x26, x1, lsl #3]
    fa48:	ldr	x0, [x9, #16]
    fa4c:	ldr	x1, [x3, #16]
    fa50:	prfm	pldl1keep, [x2]
    fa54:	add	x0, x0, x1
    fa58:	ldr	x1, [x26, x20, lsl #3]
    fa5c:	str	x0, [x9, #16]
    fa60:	cbnz	x1, f9fc <__sancov_lowest_stack@@Base+0x21cc>
    fa64:	ldp	x23, x24, [sp, #32]
    fa68:	ldp	x27, x28, [sp, #64]
    fa6c:	mov	w0, #0x0                   	// #0
    fa70:	ldp	x19, x20, [sp]
    fa74:	ldp	x21, x22, [sp, #16]
    fa78:	ldp	x25, x26, [sp, #48]
    fa7c:	ldr	x30, [sp, #80]
    fa80:	add	sp, sp, #0x210
    fa84:	ret
    fa88:	ldr	x2, [x25, #24]
    fa8c:	str	xzr, [x1]
    fa90:	add	x5, x5, #0x1
    fa94:	cmp	x19, #0x2f
    fa98:	str	x1, [x2]
    fa9c:	str	x5, [x25, #8]
    faa0:	str	x1, [x25, #24]
    faa4:	b.ls	f9e8 <__sancov_lowest_stack@@Base+0x21b8>  // b.plast
    faa8:	add	x22, x22, x28
    faac:	mov	x19, #0x0                   	// #0
    fab0:	cmp	x22, x27
    fab4:	mov	x1, #0x0                   	// #0
    fab8:	b.cc	f974 <__sancov_lowest_stack@@Base+0x2144>  // b.lo, b.ul, b.last
    fabc:	nop
    fac0:	cbnz	x19, fb18 <__sancov_lowest_stack@@Base+0x22e8>
    fac4:	cbz	x1, fc20 <__sancov_lowest_stack@@Base+0x23f0>
    fac8:	ldr	x2, [x1, #8]
    facc:	cbz	x2, fd58 <__sancov_lowest_stack@@Base+0x2528>
    fad0:	ldr	x0, [x25, #8]
    fad4:	cbnz	x0, fcb8 <__sancov_lowest_stack@@Base+0x2488>
    fad8:	dup	v0.2d, x1
    fadc:	ldp	x23, x24, [sp, #32]
    fae0:	ldp	x27, x28, [sp, #64]
    fae4:	str	xzr, [x1]
    fae8:	mov	x1, #0x1                   	// #1
    faec:	mov	w0, w1
    faf0:	str	x1, [x25, #8]
    faf4:	str	q0, [x25, #16]
    faf8:	b	fa70 <__sancov_lowest_stack@@Base+0x2240>
    fafc:	mov	x19, #0x0                   	// #0
    fb00:	b	f968 <__sancov_lowest_stack@@Base+0x2138>
    fb04:	mov	x27, #0x8200                	// #33280
    fb08:	mov	x23, #0x20                  	// #32
    fb0c:	movk	x27, #0xf, lsl #16
    fb10:	mov	x28, #0x200                 	// #512
    fb14:	b	f948 <__sancov_lowest_stack@@Base+0x2118>
    fb18:	add	x28, x26, x4, lsl #10
    fb1c:	mov	x0, #0xd800                	// #55296
    fb20:	add	x27, sp, #0x90
    fb24:	add	x4, x26, x0
    fb28:	mov	x20, #0x0                   	// #0
    fb2c:	b	fb38 <__sancov_lowest_stack@@Base+0x2308>
    fb30:	cmp	x19, x20
    fb34:	b.ls	facc <__sancov_lowest_stack@@Base+0x229c>  // b.plast
    fb38:	ldr	x22, [x27, x20, lsl #3]
    fb3c:	cbz	x1, fb88 <__sancov_lowest_stack@@Base+0x2358>
    fb40:	ldr	x0, [x1, #8]
    fb44:	add	x2, x0, #0x1
    fb48:	add	x0, x0, #0x2
    fb4c:	str	x2, [x1, #8]
    fb50:	add	x20, x20, #0x1
    fb54:	cmp	x2, x23
    fb58:	str	x22, [x1, x0, lsl #3]
    fb5c:	b.ne	fb30 <__sancov_lowest_stack@@Base+0x2300>  // b.any
    fb60:	ldr	x0, [x25, #8]
    fb64:	cbnz	x0, fc00 <__sancov_lowest_stack@@Base+0x23d0>
    fb68:	dup	v0.2d, x1
    fb6c:	str	xzr, [x1]
    fb70:	mov	x0, #0x1                   	// #1
    fb74:	str	x0, [x25, #8]
    fb78:	cmp	x19, x20
    fb7c:	str	q0, [x25, #16]
    fb80:	b.ls	fc20 <__sancov_lowest_stack@@Base+0x23f0>  // b.plast
    fb84:	ldr	x22, [x27, x20, lsl #3]
    fb88:	mov	x1, x22
    fb8c:	ldr	x24, [x28, #24]
    fb90:	cbnz	x24, fba8 <__sancov_lowest_stack@@Base+0x2378>
    fb94:	cbz	x1, fa64 <__sancov_lowest_stack@@Base+0x2234>
    fb98:	mov	x0, #0x0                   	// #0
    fb9c:	mov	x2, #0x1                   	// #1
    fba0:	str	xzr, [x1, #8]
    fba4:	b	fb48 <__sancov_lowest_stack@@Base+0x2318>
    fba8:	cmp	x24, #0x35
    fbac:	b.hi	fda0 <__sancov_lowest_stack@@Base+0x2570>  // b.pmore
    fbb0:	lsl	x5, x24, #10
    fbb4:	add	x1, x26, x5
    fbb8:	ldr	x0, [x26, x5]
    fbbc:	cbz	x0, fda8 <__sancov_lowest_stack@@Base+0x2578>
    fbc0:	lsl	x24, x24, #7
    fbc4:	add	x2, x26, x5
    fbc8:	add	x1, x24, x0
    fbcc:	sub	x0, x0, #0x1
    fbd0:	add	x1, x1, #0x2
    fbd4:	str	x0, [x26, x5]
    fbd8:	add	x24, x24, x0
    fbdc:	add	x0, x24, #0x4
    fbe0:	ldr	x3, [x26, x1, lsl #3]
    fbe4:	ldr	x1, [x2, #16]
    fbe8:	ldr	x2, [x4, #16]
    fbec:	prfm	pldl1keep, [x3]
    fbf0:	add	x2, x2, x1
    fbf4:	ldr	x1, [x26, x0, lsl #3]
    fbf8:	str	x2, [x4, #16]
    fbfc:	b	fb94 <__sancov_lowest_stack@@Base+0x2364>
    fc00:	ldr	x3, [x25, #24]
    fc04:	str	xzr, [x1]
    fc08:	add	x0, x0, #0x1
    fc0c:	cmp	x19, x20
    fc10:	str	x1, [x3]
    fc14:	str	x0, [x25, #8]
    fc18:	str	x1, [x25, #24]
    fc1c:	b.hi	fb84 <__sancov_lowest_stack@@Base+0x2354>  // b.pmore
    fc20:	mov	w0, #0x1                   	// #1
    fc24:	ldp	x23, x24, [sp, #32]
    fc28:	ldp	x27, x28, [sp, #64]
    fc2c:	b	fa70 <__sancov_lowest_stack@@Base+0x2240>
    fc30:	add	x24, x21, #0x80, lsl #12
    fc34:	mov	w1, #0x1                   	// #1
    fc38:	ldxrb	w0, [x24]
    fc3c:	stxrb	w2, w1, [x24]
    fc40:	cbnz	w2, fc38 <__sancov_lowest_stack@@Base+0x2408>
    fc44:	dmb	ish
    fc48:	tst	w0, #0xff
    fc4c:	b.eq	fc60 <__sancov_lowest_stack@@Base+0x2430>  // b.none
    fc50:	mov	x0, x24
    fc54:	str	x4, [sp, #104]
    fc58:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    fc5c:	ldr	x4, [sp, #104]
    fc60:	ldr	x0, [x21, x20, lsl #3]
    fc64:	dmb	ish
    fc68:	cbz	x0, fd78 <__sancov_lowest_stack@@Base+0x2548>
    fc6c:	dmb	ish
    fc70:	strb	wzr, [x24]
    fc74:	b	f8cc <__sancov_lowest_stack@@Base+0x209c>
    fc78:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fc7c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fc80:	add	x2, x2, #0xa90
    fc84:	add	x0, x0, #0x6c8
    fc88:	mov	x4, #0x0                   	// #0
    fc8c:	mov	x3, #0x0                   	// #0
    fc90:	mov	w1, #0x126                 	// #294
    fc94:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    fc98:	mov	x3, x20
    fc9c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fca0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fca4:	add	x2, x2, #0xb60
    fca8:	add	x0, x0, #0xb80
    fcac:	mov	x4, #0x36                  	// #54
    fcb0:	mov	w1, #0xa0                  	// #160
    fcb4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    fcb8:	ldr	x4, [x25, #24]
    fcbc:	add	x2, x0, #0x1
    fcc0:	ldp	x23, x24, [sp, #32]
    fcc4:	mov	w0, #0x1                   	// #1
    fcc8:	ldp	x27, x28, [sp, #64]
    fccc:	str	xzr, [x1]
    fcd0:	str	x1, [x4]
    fcd4:	str	x2, [x25, #8]
    fcd8:	str	x1, [x25, #24]
    fcdc:	b	fa70 <__sancov_lowest_stack@@Base+0x2240>
    fce0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fce4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fce8:	mov	x3, x19
    fcec:	add	x2, x2, #0xab8
    fcf0:	add	x0, x0, #0x6c8
    fcf4:	mov	x4, #0x10000000            	// #268435456
    fcf8:	mov	w1, #0x116                 	// #278
    fcfc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    fd00:	mov	x3, x20
    fd04:	mov	x2, x21
    fd08:	mov	x0, x26
    fd0c:	stp	x8, x4, [sp, #104]
    fd10:	stp	x5, x9, [sp, #120]
    fd14:	str	x7, [sp, #136]
    fd18:	bl	fed8 <__sancov_lowest_stack@@Base+0x26a8>
    fd1c:	tst	w0, #0xff
    fd20:	b.eq	fa64 <__sancov_lowest_stack@@Base+0x2234>  // b.none
    fd24:	ldp	x5, x9, [sp, #120]
    fd28:	ldp	x8, x4, [sp, #104]
    fd2c:	ldr	x7, [sp, #136]
    fd30:	ldr	x0, [x26, x5]
    fd34:	b	fa24 <__sancov_lowest_stack@@Base+0x21f4>
    fd38:	mov	x4, x1
    fd3c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fd40:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fd44:	add	x2, x2, #0xaf0
    fd48:	add	x0, x0, #0xb18
    fd4c:	mov	x3, #0x0                   	// #0
    fd50:	mov	w1, #0x42                  	// #66
    fd54:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    fd58:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fd5c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fd60:	add	x2, x2, #0x6b0
    fd64:	add	x0, x0, #0x6c8
    fd68:	mov	x4, #0x0                   	// #0
    fd6c:	mov	x3, #0x0                   	// #0
    fd70:	mov	w1, #0x169                 	// #361
    fd74:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    fd78:	mov	w2, #0x0                   	// #0
    fd7c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    fd80:	mov	x0, #0x1000                	// #4096
    fd84:	add	x1, x1, #0xae0
    fd88:	str	x4, [sp, #104]
    fd8c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
    fd90:	dmb	ish
    fd94:	str	x0, [x21, x20, lsl #3]
    fd98:	ldr	x4, [sp, #104]
    fd9c:	b	fc6c <__sancov_lowest_stack@@Base+0x243c>
    fda0:	mov	x3, x24
    fda4:	b	fc9c <__sancov_lowest_stack@@Base+0x246c>
    fda8:	mov	x3, x24
    fdac:	mov	x2, x21
    fdb0:	mov	x0, x26
    fdb4:	stp	x5, x4, [sp, #104]
    fdb8:	bl	fed8 <__sancov_lowest_stack@@Base+0x26a8>
    fdbc:	tst	w0, #0xff
    fdc0:	b.eq	fa64 <__sancov_lowest_stack@@Base+0x2234>  // b.none
    fdc4:	ldp	x5, x4, [sp, #104]
    fdc8:	ldr	x0, [x26, x5]
    fdcc:	b	fbc0 <__sancov_lowest_stack@@Base+0x2390>
    fdd0:	stp	x19, x20, [sp, #-80]!
    fdd4:	mov	x20, x0
    fdd8:	mov	x0, #0x2001                	// #8193
    fddc:	stp	x21, x22, [sp, #16]
    fde0:	add	x22, x3, x0
    fde4:	mov	x19, x3
    fde8:	lsl	x21, x22, #6
    fdec:	stp	x23, x24, [sp, #32]
    fdf0:	add	x23, x20, x21
    fdf4:	stp	x25, x26, [sp, #48]
    fdf8:	mov	x25, x2
    fdfc:	mov	x24, x1
    fe00:	mov	w1, #0x1                   	// #1
    fe04:	str	x30, [sp, #64]
    fe08:	ldxrb	w0, [x23]
    fe0c:	stxrb	w2, w1, [x23]
    fe10:	cbnz	w2, fe08 <__sancov_lowest_stack@@Base+0x25d8>
    fe14:	dmb	ish
    fe18:	tst	w0, #0xff
    fe1c:	b.eq	fe28 <__sancov_lowest_stack@@Base+0x25f8>  // b.none
    fe20:	mov	x0, x23
    fe24:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
    fe28:	add	x21, x21, #0x8
    fe2c:	add	x26, x20, x21
    fe30:	ldr	x5, [x20, x21]
    fe34:	cbnz	x5, fe60 <__sancov_lowest_stack@@Base+0x2630>
    fe38:	mov	x3, x23
    fe3c:	mov	x2, x25
    fe40:	mov	x1, x24
    fe44:	mov	x4, x19
    fe48:	mov	x0, x20
    fe4c:	bl	f840 <__sancov_lowest_stack@@Base+0x2010>
    fe50:	tst	w0, #0xff
    fe54:	b.eq	fed0 <__sancov_lowest_stack@@Base+0x26a0>  // b.none
    fe58:	ldr	x5, [x20, x21]
    fe5c:	cbz	x5, feb0 <__sancov_lowest_stack@@Base+0x2680>
    fe60:	add	x4, x20, x19, lsl #6
    fe64:	add	x4, x4, #0x80, lsl #12
    fe68:	ldr	x0, [x26, #8]
    fe6c:	ldr	x1, [x4, #80]
    fe70:	ldr	x1, [x1]
    fe74:	str	x1, [x4, #80]
    fe78:	cbz	x1, fea8 <__sancov_lowest_stack@@Base+0x2678>
    fe7c:	sub	x5, x5, #0x1
    fe80:	str	x5, [x4, #72]
    fe84:	dmb	ish
    fe88:	lsl	x22, x22, #6
    fe8c:	strb	wzr, [x20, x22]
    fe90:	ldp	x21, x22, [sp, #16]
    fe94:	ldp	x23, x24, [sp, #32]
    fe98:	ldp	x25, x26, [sp, #48]
    fe9c:	ldr	x30, [sp, #64]
    fea0:	ldp	x19, x20, [sp], #80
    fea4:	ret
    fea8:	str	xzr, [x4, #88]
    feac:	b	fe7c <__sancov_lowest_stack@@Base+0x264c>
    feb0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    feb4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
    feb8:	add	x2, x2, #0xbd0
    febc:	add	x0, x0, #0xbe8
    fec0:	mov	x4, #0x0                   	// #0
    fec4:	mov	x3, #0x0                   	// #0
    fec8:	mov	w1, #0x40                  	// #64
    fecc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    fed0:	mov	x0, #0x0                   	// #0
    fed4:	b	fe84 <__sancov_lowest_stack@@Base+0x2654>
    fed8:	stp	x19, x20, [sp, #-64]!
    fedc:	mov	x19, x0
    fee0:	ldr	x0, [x1, #8]
    fee4:	stp	x21, x22, [sp, #16]
    fee8:	mov	x21, x1
    feec:	stp	x23, x24, [sp, #32]
    fef0:	mov	x22, x2
    fef4:	mov	x23, x3
    fef8:	str	x30, [sp, #48]
    fefc:	cbz	x0, 10040 <__sancov_lowest_stack@@Base+0x2810>
    ff00:	mov	x3, #0xd800                	// #55296
    ff04:	add	x24, x19, x3
    ff08:	mov	x1, x24
    ff0c:	mov	x3, x23
    ff10:	mov	x2, x19
    ff14:	mov	x0, x22
    ff18:	bl	fdd0 <__sancov_lowest_stack@@Base+0x25a0>
    ff1c:	mov	x20, x0
    ff20:	cbz	x0, 10028 <__sancov_lowest_stack@@Base+0x27f8>
    ff24:	ldr	x5, [x0, #8]
    ff28:	cbz	x5, 1011c <__sancov_lowest_stack@@Base+0x28ec>
    ff2c:	add	x2, x0, #0x10
    ff30:	add	x0, x21, #0x30
    ff34:	cmp	x2, x0
    ff38:	sub	x1, x5, #0x1
    ff3c:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
    ff40:	add	x0, x21, #0x20
    ff44:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
    ff48:	b.ls	1000c <__sancov_lowest_stack@@Base+0x27dc>  // b.plast
    ff4c:	lsr	x1, x5, #1
    ff50:	mov	x4, #0x0                   	// #0
    ff54:	lsl	x1, x1, #4
    ff58:	ldr	q0, [x2, x4]
    ff5c:	str	q0, [x0, x4]
    ff60:	add	x4, x4, #0x10
    ff64:	cmp	x1, x4
    ff68:	b.ne	ff58 <__sancov_lowest_stack@@Base+0x2728>  // b.any
    ff6c:	and	x4, x5, #0xfffffffffffffffe
    ff70:	tbz	w5, #0, ff80 <__sancov_lowest_stack@@Base+0x2750>
    ff74:	add	x1, x4, #0x2
    ff78:	ldr	x1, [x20, x1, lsl #3]
    ff7c:	str	x1, [x0, x4, lsl #3]
    ff80:	add	x23, x19, x23, lsl #10
    ff84:	str	x5, [x21]
    ff88:	mov	w0, #0x1                   	// #1
    ff8c:	ldr	x21, [x23, #24]
    ff90:	cbnz	x21, ffa8 <__sancov_lowest_stack@@Base+0x2778>
    ff94:	ldp	x21, x22, [sp, #16]
    ff98:	ldp	x23, x24, [sp, #32]
    ff9c:	ldr	x30, [sp, #48]
    ffa0:	ldp	x19, x20, [sp], #64
    ffa4:	ret
    ffa8:	cmp	x21, #0x35
    ffac:	b.hi	1023c <__sancov_lowest_stack@@Base+0x2a0c>  // b.pmore
    ffb0:	lsl	x23, x21, #10
    ffb4:	add	x1, x19, x23
    ffb8:	ldr	x2, [x1, #8]
    ffbc:	cbz	x2, 10154 <__sancov_lowest_stack@@Base+0x2924>
    ffc0:	ldr	x0, [x19, x23]
    ffc4:	cmp	x0, x2
    ffc8:	b.eq	1013c <__sancov_lowest_stack@@Base+0x290c>  // b.none
    ffcc:	add	x2, x0, x21, lsl #7
    ffd0:	add	x3, x19, x23
    ffd4:	add	x2, x2, #0x4
    ffd8:	add	x0, x0, #0x1
    ffdc:	str	x0, [x19, x23]
    ffe0:	mov	w0, #0x1                   	// #1
    ffe4:	ldr	x1, [x24, #16]
    ffe8:	str	x20, [x19, x2, lsl #3]
    ffec:	ldp	x21, x22, [sp, #16]
    fff0:	ldr	x2, [x3, #16]
    fff4:	ldr	x30, [sp, #48]
    fff8:	sub	x1, x1, x2
    fffc:	str	x1, [x24, #16]
   10000:	ldp	x23, x24, [sp, #32]
   10004:	ldp	x19, x20, [sp], #64
   10008:	ret
   1000c:	mov	x1, #0x0                   	// #0
   10010:	ldr	x3, [x2, x1, lsl #3]
   10014:	str	x3, [x0, x1, lsl #3]
   10018:	add	x1, x1, #0x1
   1001c:	cmp	x5, x1
   10020:	b.ne	10010 <__sancov_lowest_stack@@Base+0x27e0>  // b.any
   10024:	b	ff80 <__sancov_lowest_stack@@Base+0x2750>
   10028:	mov	w0, #0x0                   	// #0
   1002c:	ldp	x21, x22, [sp, #16]
   10030:	ldp	x23, x24, [sp, #32]
   10034:	ldr	x30, [sp, #48]
   10038:	ldp	x19, x20, [sp], #64
   1003c:	ret
   10040:	mov	x5, #0x1                   	// #1
   10044:	mov	x11, x5
   10048:	mov	x12, #0x7c                  	// #124
   1004c:	mov	x10, #0x14                  	// #20
   10050:	mov	x9, #0x100                 	// #256
   10054:	mov	w8, #0x4000                	// #16384
   10058:	mov	x3, #0x3e                  	// #62
   1005c:	nop
   10060:	add	x2, x19, x5, lsl #10
   10064:	lsl	x4, x5, #4
   10068:	mov	x6, x2
   1006c:	mov	x0, #0x14                  	// #20
   10070:	mov	x1, x5
   10074:	add	x5, x5, #0x1
   10078:	stp	x12, x4, [x2, #8]
   1007c:	cmp	x5, #0x36
   10080:	str	x0, [x6, #24]
   10084:	b.eq	ff00 <__sancov_lowest_stack@@Base+0x26d0>  // b.none
   10088:	cmp	x5, #0x35
   1008c:	b.eq	100fc <__sancov_lowest_stack@@Base+0x28cc>  // b.none
   10090:	cmp	x5, #0x10
   10094:	b.ls	10060 <__sancov_lowest_stack@@Base+0x2830>  // b.plast
   10098:	sub	x4, x1, #0xf
   1009c:	add	x6, x6, #0x400
   100a0:	and	x0, x4, #0x3
   100a4:	mov	x1, x5
   100a8:	lsr	x4, x4, #2
   100ac:	add	x5, x5, #0x1
   100b0:	lsl	x4, x9, x4
   100b4:	lsr	x7, x4, #2
   100b8:	madd	x7, x7, x0, x4
   100bc:	str	x7, [x6, #16]
   100c0:	udiv	w4, w8, w7
   100c4:	cmp	x4, #0x0
   100c8:	csel	x4, x4, x11, ne  // ne = any
   100cc:	cmp	x4, #0x3e
   100d0:	csel	x4, x4, x3, ls  // ls = plast
   100d4:	add	x0, x4, #0x2
   100d8:	lsl	x4, x4, #1
   100dc:	str	x4, [x6, #8]
   100e0:	cmp	x7, x0, lsl #3
   100e4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   100e8:	str	x0, [x6, #24]
   100ec:	cmp	x5, #0x36
   100f0:	b.eq	ff00 <__sancov_lowest_stack@@Base+0x26d0>  // b.none
   100f4:	cmp	x5, #0x35
   100f8:	b.ne	10090 <__sancov_lowest_stack@@Base+0x2860>  // b.any
   100fc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10100:	ldr	q0, [x0, #3824]
   10104:	mov	x0, #0xd400                	// #54272
   10108:	add	x1, x19, x0
   1010c:	add	x0, x19, #0x8, lsl #12
   10110:	stur	q0, [x1, #8]
   10114:	str	xzr, [x0, #21528]
   10118:	b	ff00 <__sancov_lowest_stack@@Base+0x26d0>
   1011c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10120:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10124:	add	x2, x2, #0x6b0
   10128:	add	x0, x0, #0xb80
   1012c:	mov	x4, #0x0                   	// #0
   10130:	mov	x3, #0x0                   	// #0
   10134:	mov	w1, #0xf6                  	// #246
   10138:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1013c:	mov	x0, x19
   10140:	mov	x2, x22
   10144:	mov	x3, x21
   10148:	bl	10750 <__sancov_lowest_stack@@Base+0x2f20>
   1014c:	ldr	x0, [x19, x23]
   10150:	b	ffcc <__sancov_lowest_stack@@Base+0x279c>
   10154:	mov	x2, #0x1                   	// #1
   10158:	mov	x11, x2
   1015c:	mov	x12, #0x7c                  	// #124
   10160:	mov	x10, #0x14                  	// #20
   10164:	mov	x9, #0x100                 	// #256
   10168:	mov	w8, #0x4000                	// #16384
   1016c:	mov	x7, #0x3e                  	// #62
   10170:	add	x5, x19, x2, lsl #10
   10174:	lsl	x6, x2, #4
   10178:	mov	x4, x5
   1017c:	mov	x0, #0x14                  	// #20
   10180:	mov	x3, x2
   10184:	add	x2, x2, #0x1
   10188:	stp	x12, x6, [x5, #8]
   1018c:	cmp	x2, #0x36
   10190:	str	x0, [x4, #24]
   10194:	b.eq	10204 <__sancov_lowest_stack@@Base+0x29d4>  // b.none
   10198:	cmp	x2, #0x35
   1019c:	b.eq	1020c <__sancov_lowest_stack@@Base+0x29dc>  // b.none
   101a0:	cmp	x2, #0x10
   101a4:	b.ls	10170 <__sancov_lowest_stack@@Base+0x2940>  // b.plast
   101a8:	sub	x0, x3, #0xf
   101ac:	add	x4, x4, #0x400
   101b0:	and	x6, x0, #0x3
   101b4:	mov	x3, x2
   101b8:	lsr	x0, x0, #2
   101bc:	add	x2, x2, #0x1
   101c0:	lsl	x0, x9, x0
   101c4:	lsr	x5, x0, #2
   101c8:	madd	x5, x5, x6, x0
   101cc:	str	x5, [x4, #16]
   101d0:	udiv	w0, w8, w5
   101d4:	cmp	x0, #0x0
   101d8:	csel	x0, x0, x11, ne  // ne = any
   101dc:	cmp	x0, #0x3e
   101e0:	csel	x0, x0, x7, ls  // ls = plast
   101e4:	add	x6, x0, #0x2
   101e8:	lsl	x0, x0, #1
   101ec:	str	x0, [x4, #8]
   101f0:	cmp	x5, x6, lsl #3
   101f4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   101f8:	str	x0, [x4, #24]
   101fc:	cmp	x2, #0x36
   10200:	b.ne	10198 <__sancov_lowest_stack@@Base+0x2968>  // b.any
   10204:	ldr	x2, [x1, #8]
   10208:	b	ffc0 <__sancov_lowest_stack@@Base+0x2790>
   1020c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10210:	mov	x2, #0xd400                	// #54272
   10214:	add	x2, x19, x2
   10218:	ldr	q0, [x0, #3824]
   1021c:	add	x0, x19, #0x8, lsl #12
   10220:	stur	q0, [x2, #8]
   10224:	str	xzr, [x0, #21528]
   10228:	ldr	x0, [x19, x23]
   1022c:	ldr	x2, [x1, #8]
   10230:	cmp	x0, x2
   10234:	b.ne	ffcc <__sancov_lowest_stack@@Base+0x279c>  // b.any
   10238:	b	1013c <__sancov_lowest_stack@@Base+0x290c>
   1023c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10240:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10244:	mov	x3, x21
   10248:	add	x2, x2, #0xb60
   1024c:	add	x0, x0, #0xb80
   10250:	mov	x4, #0x36                  	// #54
   10254:	mov	w1, #0xaf                  	// #175
   10258:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1025c:	nop
   10260:	stp	x19, x20, [sp, #-80]!
   10264:	cmp	x2, #0x0
   10268:	stp	x21, x22, [sp, #16]
   1026c:	csinc	x22, x2, xzr, ne  // ne = any
   10270:	stp	x23, x24, [sp, #32]
   10274:	mov	x23, x0
   10278:	adds	x0, x3, x22
   1027c:	str	x30, [sp, #72]
   10280:	b.cs	1072c <__sancov_lowest_stack@@Base+0x2efc>  // b.hs, b.nlast
   10284:	mov	x19, x3
   10288:	mov	x21, x1
   1028c:	cmp	x3, #0x8
   10290:	b.hi	10500 <__sancov_lowest_stack@@Base+0x2cd0>  // b.pmore
   10294:	cmp	x2, #0x20, lsl #12
   10298:	b.hi	1035c <__sancov_lowest_stack@@Base+0x2b2c>  // b.pmore
   1029c:	cmp	x22, #0x100
   102a0:	b.ls	1053c <__sancov_lowest_stack@@Base+0x2d0c>  // b.plast
   102a4:	clz	x3, x22
   102a8:	mov	w20, #0x3f                  	// #63
   102ac:	sub	w20, w20, w3
   102b0:	mov	w0, #0x1                   	// #1
   102b4:	sub	w2, w20, #0x2
   102b8:	lsl	w0, w0, w2
   102bc:	sub	w0, w0, #0x1
   102c0:	tst	x0, x22
   102c4:	lsr	x3, x22, x2
   102c8:	and	x3, x3, #0x3
   102cc:	cinc	x3, x3, ne  // ne = any
   102d0:	add	x20, x3, w20, sxtw #2
   102d4:	sub	x20, x20, #0x10
   102d8:	cmp	x20, #0x35
   102dc:	b.hi	10588 <__sancov_lowest_stack@@Base+0x2d58>  // b.pmore
   102e0:	lsl	x22, x20, #10
   102e4:	add	x1, x21, x22
   102e8:	ldr	x0, [x21, x22]
   102ec:	cbz	x0, 10600 <__sancov_lowest_stack@@Base+0x2dd0>
   102f0:	lsl	x20, x20, #7
   102f4:	add	x4, x21, x22
   102f8:	add	x1, x20, x0
   102fc:	mov	x2, #0xd800                	// #55296
   10300:	add	x1, x1, #0x2
   10304:	sub	x0, x0, #0x1
   10308:	add	x2, x21, x2
   1030c:	str	x0, [x21, x22]
   10310:	add	x20, x20, x0
   10314:	ldr	x3, [x21, x1, lsl #3]
   10318:	add	x20, x20, #0x4
   1031c:	ldr	x0, [x4, #16]
   10320:	ldr	x1, [x2, #16]
   10324:	prfm	pldl1keep, [x3]
   10328:	add	x1, x1, x0
   1032c:	ldr	x0, [x21, x20, lsl #3]
   10330:	str	x1, [x2, #16]
   10334:	cmp	x19, #0x8
   10338:	b.ls	10348 <__sancov_lowest_stack@@Base+0x2b18>  // b.plast
   1033c:	sub	x19, x19, #0x1
   10340:	ands	x3, x0, x19
   10344:	b.ne	10620 <__sancov_lowest_stack@@Base+0x2df0>  // b.any
   10348:	ldp	x21, x22, [sp, #16]
   1034c:	ldp	x23, x24, [sp, #32]
   10350:	ldr	x30, [sp, #72]
   10354:	ldp	x19, x20, [sp], #80
   10358:	ret
   1035c:	stp	x25, x26, [sp, #48]
   10360:	sub	x25, x3, #0x1
   10364:	tst	x3, x25
   10368:	b.ne	105dc <__sancov_lowest_stack@@Base+0x2dac>  // b.any
   1036c:	add	x24, x23, #0x80, lsl #12
   10370:	add	x24, x24, #0xc00
   10374:	ldr	x1, [x24, #448]
   10378:	sub	x0, x1, #0x1
   1037c:	tst	x1, x0
   10380:	b.ne	10574 <__sancov_lowest_stack@@Base+0x2d44>  // b.any
   10384:	add	x20, x22, x0
   10388:	neg	x0, x1
   1038c:	and	x20, x20, x0
   10390:	cmp	x19, x1
   10394:	add	x20, x20, x1
   10398:	add	x0, x20, x19
   1039c:	csel	x20, x0, x20, hi  // hi = pmore
   103a0:	cmp	x22, x20
   103a4:	b.hi	105b0 <__sancov_lowest_stack@@Base+0x2d80>  // b.pmore
   103a8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   103ac:	mov	x0, x20
   103b0:	ldr	x1, [x1, #3840]
   103b4:	ldr	x1, [x1]
   103b8:	bl	20160 <__sanitizer_set_report_fd@@Base+0x6898>
   103bc:	mov	x4, x0
   103c0:	cbz	x0, 10644 <__sancov_lowest_stack@@Base+0x2e14>
   103c4:	ldr	x1, [x24, #448]
   103c8:	str	x27, [sp, #64]
   103cc:	sub	x2, x1, #0x1
   103d0:	tst	x0, x2
   103d4:	b.ne	10650 <__sancov_lowest_stack@@Base+0x2e20>  // b.any
   103d8:	add	x21, x0, x1
   103dc:	ands	x3, x25, x21
   103e0:	b.eq	103f4 <__sancov_lowest_stack@@Base+0x2bc4>  // b.none
   103e4:	add	x0, x19, x21
   103e8:	sub	x21, x0, x3
   103ec:	tst	x25, x21
   103f0:	b.ne	10670 <__sancov_lowest_stack@@Base+0x2e40>  // b.any
   103f4:	tst	x21, x2
   103f8:	b.ne	10690 <__sancov_lowest_stack@@Base+0x2e60>  // b.any
   103fc:	add	x3, x21, x22
   10400:	cmp	x4, x3
   10404:	b.hi	106b0 <__sancov_lowest_stack@@Base+0x2e80>  // b.pmore
   10408:	add	x0, x4, x20
   1040c:	cmp	x0, x3
   10410:	b.cc	106c8 <__sancov_lowest_stack@@Base+0x2e98>  // b.lo, b.ul, b.last
   10414:	sub	x25, x21, x1
   10418:	add	x26, x23, #0x80, lsl #12
   1041c:	add	x26, x26, #0xdc0
   10420:	mov	w2, #0x1                   	// #1
   10424:	add	x0, x26, #0x268
   10428:	stp	x4, x20, [x25]
   1042c:	str	x22, [x25, #16]
   10430:	ldxrb	w1, [x0]
   10434:	stxrb	w3, w2, [x0]
   10438:	cbnz	w3, 10430 <__sancov_lowest_stack@@Base+0x2c00>
   1043c:	dmb	ish
   10440:	tst	w1, #0xff
   10444:	b.eq	1044c <__sancov_lowest_stack@@Base+0x2c1c>  // b.none
   10448:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   1044c:	ldr	x3, [x24, #504]
   10450:	add	x22, x24, #0x1c0
   10454:	mov	x0, #0xfffff               	// #1048575
   10458:	cmp	x3, x0
   1045c:	b.hi	106e4 <__sancov_lowest_stack@@Base+0x2eb4>  // b.pmore
   10460:	ldr	x0, [x24, #496]
   10464:	cmp	x3, x0
   10468:	b.eq	10700 <__sancov_lowest_stack@@Base+0x2ed0>  // b.none
   1046c:	clz	x1, x20
   10470:	mov	w0, #0x3f                  	// #63
   10474:	sub	w0, w0, w1
   10478:	add	x1, x3, #0x1
   1047c:	str	x1, [x24, #504]
   10480:	add	x24, x24, #0x1c0
   10484:	ldr	x1, [x24, #88]
   10488:	add	x4, x23, #0x81, lsl #12
   1048c:	ldr	x5, [x24, #8]
   10490:	add	x23, x23, w0, sxtw #3
   10494:	ldr	x2, [x24, #96]
   10498:	add	x0, x20, x1
   1049c:	ldr	x1, [x24, #72]
   104a0:	str	x3, [x25, #24]
   104a4:	add	x23, x23, #0x80, lsl #12
   104a8:	cmp	x2, x0
   104ac:	str	x25, [x5, x3, lsl #3]
   104b0:	csel	x2, x2, x0, cs  // cs = hs, nlast
   104b4:	add	x3, x1, #0x1
   104b8:	strb	wzr, [x24, #64]
   104bc:	str	x3, [x24, #72]
   104c0:	stp	x0, x2, [x24, #88]
   104c4:	ldr	x2, [x23, #3624]
   104c8:	ldr	x0, [x4, #64]
   104cc:	add	x2, x2, #0x1
   104d0:	str	x2, [x23, #3624]
   104d4:	add	x0, x20, x0
   104d8:	str	x0, [x4, #64]
   104dc:	ldr	x0, [x4, #72]
   104e0:	add	x20, x20, x0
   104e4:	str	x20, [x4, #72]
   104e8:	dmb	ish
   104ec:	strb	wzr, [x4, #40]
   104f0:	mov	x0, x21
   104f4:	ldp	x25, x26, [sp, #48]
   104f8:	ldr	x27, [sp, #64]
   104fc:	b	10334 <__sancov_lowest_stack@@Base+0x2b04>
   10500:	stp	x25, x26, [sp, #48]
   10504:	sub	x25, x3, #0x1
   10508:	tst	x3, x25
   1050c:	b.ne	10574 <__sancov_lowest_stack@@Base+0x2d44>  // b.any
   10510:	sub	x1, x0, #0x1
   10514:	neg	x0, x3
   10518:	and	x0, x1, x0
   1051c:	cmp	x3, #0x20, lsl #12
   10520:	mov	x1, #0x20000               	// #131072
   10524:	ccmp	x0, x1, #0x2, ls  // ls = plast
   10528:	b.hi	1036c <__sancov_lowest_stack@@Base+0x2b3c>  // b.pmore
   1052c:	mov	x22, x0
   10530:	cmp	x22, #0x100
   10534:	ldp	x25, x26, [sp, #48]
   10538:	b.hi	102a4 <__sancov_lowest_stack@@Base+0x2a74>  // b.pmore
   1053c:	add	x20, x22, #0xf
   10540:	cmp	xzr, x20, lsr #4
   10544:	lsr	x20, x20, #4
   10548:	b.ne	102e0 <__sancov_lowest_stack@@Base+0x2ab0>  // b.any
   1054c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10550:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10554:	add	x2, x2, #0xc88
   10558:	add	x0, x0, #0xb80
   1055c:	mov	x4, #0x0                   	// #0
   10560:	mov	x3, #0x0                   	// #0
   10564:	mov	w1, #0x9f                  	// #159
   10568:	stp	x25, x26, [sp, #48]
   1056c:	str	x27, [sp, #64]
   10570:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10574:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   10578:	add	x0, x0, #0x6e8
   1057c:	str	x27, [sp, #64]
   10580:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   10584:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   10588:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1058c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10590:	mov	x3, x20
   10594:	add	x2, x2, #0xb60
   10598:	add	x0, x0, #0xb80
   1059c:	mov	x4, #0x36                  	// #54
   105a0:	mov	w1, #0xa0                  	// #160
   105a4:	stp	x25, x26, [sp, #48]
   105a8:	str	x27, [sp, #64]
   105ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   105b0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105b4:	mov	x3, x19
   105b8:	mov	x2, x20
   105bc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   105c0:	ldr	x1, [x1, #4008]
   105c4:	add	x0, x0, #0xcc8
   105c8:	ldr	x1, [x1]
   105cc:	bl	22d00 <OnPrint@@Base+0x398>
   105d0:	mov	x0, #0x0                   	// #0
   105d4:	ldp	x25, x26, [sp, #48]
   105d8:	b	10348 <__sancov_lowest_stack@@Base+0x2b18>
   105dc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   105e0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   105e4:	add	x2, x2, #0xca0
   105e8:	add	x0, x0, #0x728
   105ec:	mov	x4, #0x0                   	// #0
   105f0:	mov	x3, #0x0                   	// #0
   105f4:	mov	w1, #0x53                  	// #83
   105f8:	str	x27, [sp, #64]
   105fc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10600:	mov	x2, x23
   10604:	mov	x3, x20
   10608:	mov	x0, x21
   1060c:	bl	fed8 <__sancov_lowest_stack@@Base+0x26a8>
   10610:	tst	w0, #0xff
   10614:	b.eq	10648 <__sancov_lowest_stack@@Base+0x2e18>  // b.none
   10618:	ldr	x0, [x21, x22]
   1061c:	b	102f0 <__sancov_lowest_stack@@Base+0x2ac0>
   10620:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10624:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10628:	add	x2, x2, #0xe10
   1062c:	add	x0, x0, #0xe50
   10630:	mov	x4, #0x0                   	// #0
   10634:	mov	w1, #0x42                  	// #66
   10638:	stp	x25, x26, [sp, #48]
   1063c:	str	x27, [sp, #64]
   10640:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10644:	ldp	x25, x26, [sp, #48]
   10648:	mov	x0, #0x0                   	// #0
   1064c:	b	10348 <__sancov_lowest_stack@@Base+0x2b18>
   10650:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10654:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10658:	add	x2, x2, #0xd30
   1065c:	add	x0, x0, #0x728
   10660:	mov	x4, #0x0                   	// #0
   10664:	mov	x3, #0x0                   	// #0
   10668:	mov	w1, #0x62                  	// #98
   1066c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10670:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10674:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10678:	add	x2, x2, #0xd60
   1067c:	add	x0, x0, #0x728
   10680:	mov	x4, #0x0                   	// #0
   10684:	mov	x3, #0x0                   	// #0
   10688:	mov	w1, #0x68                  	// #104
   1068c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10690:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10694:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10698:	add	x2, x2, #0xd88
   1069c:	add	x0, x0, #0x728
   106a0:	mov	x4, #0x0                   	// #0
   106a4:	mov	x3, #0x0                   	// #0
   106a8:	mov	w1, #0x69                  	// #105
   106ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   106b0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   106b4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   106b8:	add	x2, x2, #0xdb0
   106bc:	add	x0, x0, #0x728
   106c0:	mov	w1, #0x6a                  	// #106
   106c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   106c8:	mov	x4, x0
   106cc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   106d0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   106d4:	add	x2, x2, #0xdd0
   106d8:	add	x0, x0, #0x728
   106dc:	mov	w1, #0x6b                  	// #107
   106e0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   106e4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   106e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   106ec:	add	x2, x2, #0xdf0
   106f0:	add	x0, x0, #0x728
   106f4:	mov	x4, #0x100000              	// #1048576
   106f8:	mov	w1, #0x29                  	// #41
   106fc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10700:	add	x1, x23, #0x80, lsl #12
   10704:	add	x0, x26, #0x10
   10708:	mov	x2, #0x20000               	// #131072
   1070c:	ldr	x1, [x1, #3536]
   10710:	add	x1, x1, x3, lsl #3
   10714:	bl	21b30 <__sanitizer_set_report_fd@@Base+0x8268>
   10718:	ldr	x0, [x24, #496]
   1071c:	ldr	x3, [x22, #56]
   10720:	add	x0, x0, #0x4, lsl #12
   10724:	str	x0, [x24, #496]
   10728:	b	1046c <__sancov_lowest_stack@@Base+0x2c3c>
   1072c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10730:	mov	x2, x22
   10734:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10738:	add	x0, x0, #0xc28
   1073c:	ldr	x1, [x1, #4008]
   10740:	ldr	x1, [x1]
   10744:	bl	22d00 <OnPrint@@Base+0x398>
   10748:	mov	x0, #0x0                   	// #0
   1074c:	b	10348 <__sancov_lowest_stack@@Base+0x2b18>
   10750:	stp	x19, x20, [sp, #-80]!
   10754:	stp	x23, x24, [sp, #32]
   10758:	mov	x23, x1
   1075c:	add	x1, x0, x3, lsl #10
   10760:	stp	x25, x26, [sp, #48]
   10764:	mov	x24, x3
   10768:	mov	x25, x2
   1076c:	ldp	x20, x19, [x23]
   10770:	stp	x21, x22, [sp, #16]
   10774:	ldr	x26, [x1, #24]
   10778:	str	x30, [sp, #72]
   1077c:	lsr	x19, x19, #1
   10780:	cmp	x19, x20
   10784:	csel	x19, x19, x20, ls  // ls = plast
   10788:	sub	x21, x20, x19
   1078c:	cbnz	x26, 10844 <__sancov_lowest_stack@@Base+0x3014>
   10790:	add	x0, x21, #0x4
   10794:	ldr	x2, [x23, x0, lsl #3]
   10798:	cbz	x2, 108d0 <__sancov_lowest_stack@@Base+0x30a0>
   1079c:	add	x5, x21, #0x4
   107a0:	str	x19, [x2, #8]
   107a4:	add	x5, x23, x5, lsl #3
   107a8:	cbz	x19, 10818 <__sancov_lowest_stack@@Base+0x2fe8>
   107ac:	add	x0, x20, #0x6
   107b0:	add	x4, x20, #0x4
   107b4:	sub	x0, x0, x19
   107b8:	sub	x4, x4, x19
   107bc:	add	x7, x2, #0x10
   107c0:	add	x1, x2, #0x20
   107c4:	add	x0, x23, x0, lsl #3
   107c8:	add	x4, x23, x4, lsl #3
   107cc:	cmp	x7, x0
   107d0:	sub	x0, x19, #0x1
   107d4:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
   107d8:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   107dc:	b.ls	108b0 <__sancov_lowest_stack@@Base+0x3080>  // b.plast
   107e0:	lsr	x6, x19, #1
   107e4:	mov	x0, #0x0                   	// #0
   107e8:	lsl	x6, x6, #4
   107ec:	nop
   107f0:	ldr	q0, [x4, x0]
   107f4:	str	q0, [x7, x0]
   107f8:	add	x0, x0, #0x10
   107fc:	cmp	x0, x6
   10800:	b.ne	107f0 <__sancov_lowest_stack@@Base+0x2fc0>  // b.any
   10804:	and	x0, x19, #0xfffffffffffffffe
   10808:	tbz	w19, #0, 10818 <__sancov_lowest_stack@@Base+0x2fe8>
   1080c:	add	x4, x0, #0x2
   10810:	ldr	x0, [x5, x0, lsl #3]
   10814:	str	x0, [x2, x4, lsl #3]
   10818:	ldr	x3, [x23]
   1081c:	mov	x0, x25
   10820:	ldp	x21, x22, [sp, #16]
   10824:	sub	x19, x3, x19
   10828:	ldp	x25, x26, [sp, #48]
   1082c:	mov	x1, x24
   10830:	ldr	x30, [sp, #72]
   10834:	str	x19, [x23]
   10838:	ldp	x23, x24, [sp, #32]
   1083c:	ldp	x19, x20, [sp], #80
   10840:	b	f638 <__sancov_lowest_stack@@Base+0x1e08>
   10844:	str	x27, [sp, #64]
   10848:	cmp	x26, #0x35
   1084c:	b.hi	108f0 <__sancov_lowest_stack@@Base+0x30c0>  // b.pmore
   10850:	lsl	x27, x26, #10
   10854:	mov	x22, x0
   10858:	add	x1, x0, x27
   1085c:	ldr	x3, [x0, x27]
   10860:	cbz	x3, 10910 <__sancov_lowest_stack@@Base+0x30e0>
   10864:	lsl	x26, x26, #7
   10868:	add	x2, x22, x27
   1086c:	add	x0, x26, x3
   10870:	mov	x1, #0xd800                	// #55296
   10874:	add	x0, x0, #0x2
   10878:	sub	x3, x3, #0x1
   1087c:	add	x1, x22, x1
   10880:	str	x3, [x22, x27]
   10884:	add	x26, x26, x3
   10888:	ldr	x3, [x22, x0, lsl #3]
   1088c:	add	x26, x26, #0x4
   10890:	ldr	x2, [x2, #16]
   10894:	ldr	x0, [x1, #16]
   10898:	prfm	pldl1keep, [x3]
   1089c:	add	x0, x0, x2
   108a0:	ldr	x2, [x22, x26, lsl #3]
   108a4:	ldr	x27, [sp, #64]
   108a8:	str	x0, [x1, #16]
   108ac:	b	10798 <__sancov_lowest_stack@@Base+0x2f68>
   108b0:	mov	x0, #0x0                   	// #0
   108b4:	nop
   108b8:	ldr	x1, [x5, x0, lsl #3]
   108bc:	str	x1, [x7, x0, lsl #3]
   108c0:	add	x0, x0, #0x1
   108c4:	cmp	x19, x0
   108c8:	b.ne	108b8 <__sancov_lowest_stack@@Base+0x3088>  // b.any
   108cc:	b	10818 <__sancov_lowest_stack@@Base+0x2fe8>
   108d0:	str	x27, [sp, #64]
   108d4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   108d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   108dc:	add	x0, x0, #0xea0
   108e0:	ldr	x1, [x1, #4008]
   108e4:	ldr	x1, [x1]
   108e8:	bl	22d00 <OnPrint@@Base+0x398>
   108ec:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   108f0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   108f4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   108f8:	mov	x3, x26
   108fc:	add	x2, x2, #0xb60
   10900:	add	x0, x0, #0xb80
   10904:	mov	x4, #0x36                  	// #54
   10908:	mov	w1, #0xa0                  	// #160
   1090c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10910:	mov	x3, x26
   10914:	bl	fed8 <__sancov_lowest_stack@@Base+0x26a8>
   10918:	tst	w0, #0xff
   1091c:	b.eq	108d4 <__sancov_lowest_stack@@Base+0x30a4>  // b.none
   10920:	ldr	x3, [x22, x27]
   10924:	b	10864 <__sancov_lowest_stack@@Base+0x3034>

0000000000010928 <__interceptor_mallopt@@Base>:
   10928:	mov	w0, #0xffffffff            	// #-1
   1092c:	ret

0000000000010930 <__interceptor_malloc@@Base>:
   10930:	sub	sp, sp, #0x860
   10934:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10938:	stp	x29, x30, [sp]
   1093c:	mov	x29, sp
   10940:	ldr	x1, [x1, #4048]
   10944:	stp	x19, x20, [sp, #16]
   10948:	mov	x20, x0
   1094c:	stp	x21, x22, [sp, #32]
   10950:	ldrb	w0, [x1]
   10954:	stp	x23, x24, [sp, #48]
   10958:	cbnz	w0, 10a00 <__interceptor_malloc@@Base+0xd0>
   1095c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10960:	ldr	x0, [x0, #3592]
   10964:	ldrb	w0, [x0]
   10968:	cbz	w0, 109e8 <__interceptor_malloc@@Base+0xb8>
   1096c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10970:	add	x21, x29, #0x48
   10974:	add	x0, x21, #0x10
   10978:	str	x0, [x29, #72]
   1097c:	ldr	x19, [x19, #4040]
   10980:	str	xzr, [x29, #80]
   10984:	str	xzr, [x29, #2136]
   10988:	mov	x24, x29
   1098c:	ldrsw	x23, [x19, #36]
   10990:	bl	248d0 <OnPrint@@Base+0x1f68>
   10994:	ldrb	w22, [x19, #34]
   10998:	mov	x19, x0
   1099c:	cbnz	w22, 109f0 <__interceptor_malloc@@Base+0xc0>
   109a0:	mov	x6, #0x0                   	// #0
   109a4:	mov	x5, #0x0                   	// #0
   109a8:	mov	w7, w22
   109ac:	mov	x3, x24
   109b0:	mov	x2, x19
   109b4:	mov	x4, #0x0                   	// #0
   109b8:	mov	w1, w23
   109bc:	mov	x0, x21
   109c0:	bl	24fe8 <OnPrint@@Base+0x2680>
   109c4:	mov	x1, x21
   109c8:	mov	x0, x20
   109cc:	bl	cc98 <__sanitizer_get_allocated_size@@Base+0xc88>
   109d0:	ldp	x29, x30, [sp]
   109d4:	ldp	x19, x20, [sp, #16]
   109d8:	ldp	x21, x22, [sp, #32]
   109dc:	ldp	x23, x24, [sp, #48]
   109e0:	add	sp, sp, #0x860
   109e4:	ret
   109e8:	bl	6b40 <__lsan_init@plt>
   109ec:	b	1096c <__interceptor_malloc@@Base+0x3c>
   109f0:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   109f4:	cbz	x0, 109a0 <__interceptor_malloc@@Base+0x70>
   109f8:	ldp	x6, x5, [x0, #144]
   109fc:	b	109a8 <__interceptor_malloc@@Base+0x78>
   10a00:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10a04:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10a08:	add	x2, x2, #0x638
   10a0c:	add	x0, x0, #0xf00
   10a10:	mov	x4, #0x0                   	// #0
   10a14:	mov	x3, #0x0                   	// #0
   10a18:	mov	w1, #0x34                  	// #52
   10a1c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010a20 <__interceptor_cfree@@Base>:
   10a20:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10a24:	str	x30, [sp, #-32]!
   10a28:	ldr	x1, [x1, #4048]
   10a2c:	ldrb	w1, [x1]
   10a30:	cbnz	w1, 10a60 <__interceptor_cfree@@Base+0x40>
   10a34:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10a38:	ldr	x1, [x1, #3592]
   10a3c:	ldrb	w1, [x1]
   10a40:	cbz	w1, 10a4c <__interceptor_cfree@@Base+0x2c>
   10a44:	ldr	x30, [sp], #32
   10a48:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   10a4c:	str	x0, [sp, #24]
   10a50:	bl	6b40 <__lsan_init@plt>
   10a54:	ldr	x0, [sp, #24]
   10a58:	ldr	x30, [sp], #32
   10a5c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   10a60:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10a64:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10a68:	add	x2, x2, #0x638
   10a6c:	add	x0, x0, #0xf00
   10a70:	mov	x4, #0x0                   	// #0
   10a74:	mov	x3, #0x0                   	// #0
   10a78:	mov	w1, #0x3a                  	// #58
   10a7c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010a80 <__interceptor_realloc@@Base>:
   10a80:	sub	sp, sp, #0x870
   10a84:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10a88:	stp	x29, x30, [sp]
   10a8c:	mov	x29, sp
   10a90:	ldr	x2, [x2, #4048]
   10a94:	stp	x19, x20, [sp, #16]
   10a98:	mov	x20, x0
   10a9c:	stp	x21, x22, [sp, #32]
   10aa0:	ldrb	w0, [x2]
   10aa4:	stp	x23, x24, [sp, #48]
   10aa8:	str	x25, [sp, #64]
   10aac:	cbnz	w0, 10b60 <__interceptor_realloc@@Base+0xe0>
   10ab0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10ab4:	mov	x21, x1
   10ab8:	ldr	x0, [x0, #3592]
   10abc:	ldrb	w0, [x0]
   10ac0:	cbz	w0, 10b48 <__interceptor_realloc@@Base+0xc8>
   10ac4:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10ac8:	add	x22, x29, #0x58
   10acc:	add	x0, x22, #0x10
   10ad0:	str	x0, [x29, #88]
   10ad4:	ldr	x19, [x19, #4040]
   10ad8:	str	xzr, [x29, #96]
   10adc:	str	xzr, [x29, #2152]
   10ae0:	mov	x25, x29
   10ae4:	ldrsw	x24, [x19, #36]
   10ae8:	bl	248d0 <OnPrint@@Base+0x1f68>
   10aec:	ldrb	w23, [x19, #34]
   10af0:	mov	x19, x0
   10af4:	cbnz	w23, 10b50 <__interceptor_realloc@@Base+0xd0>
   10af8:	mov	x6, #0x0                   	// #0
   10afc:	mov	x5, #0x0                   	// #0
   10b00:	mov	w7, w23
   10b04:	mov	x3, x25
   10b08:	mov	x4, #0x0                   	// #0
   10b0c:	mov	x2, x19
   10b10:	mov	w1, w24
   10b14:	mov	x0, x22
   10b18:	bl	24fe8 <OnPrint@@Base+0x2680>
   10b1c:	mov	x2, x22
   10b20:	mov	x1, x21
   10b24:	mov	x0, x20
   10b28:	bl	f598 <__sancov_lowest_stack@@Base+0x1d68>
   10b2c:	ldp	x29, x30, [sp]
   10b30:	ldp	x19, x20, [sp, #16]
   10b34:	ldp	x21, x22, [sp, #32]
   10b38:	ldp	x23, x24, [sp, #48]
   10b3c:	ldr	x25, [sp, #64]
   10b40:	add	sp, sp, #0x870
   10b44:	ret
   10b48:	bl	6b40 <__lsan_init@plt>
   10b4c:	b	10ac4 <__interceptor_realloc@@Base+0x44>
   10b50:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   10b54:	cbz	x0, 10af8 <__interceptor_realloc@@Base+0x78>
   10b58:	ldp	x6, x5, [x0, #144]
   10b5c:	b	10b00 <__interceptor_realloc@@Base+0x80>
   10b60:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10b64:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10b68:	add	x2, x2, #0x638
   10b6c:	add	x0, x0, #0xf00
   10b70:	mov	x4, #0x0                   	// #0
   10b74:	mov	x3, #0x0                   	// #0
   10b78:	mov	w1, #0x50                  	// #80
   10b7c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010b80 <__interceptor_posix_memalign@@Base>:
   10b80:	sub	sp, sp, #0x870
   10b84:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10b88:	stp	x29, x30, [sp]
   10b8c:	mov	x29, sp
   10b90:	ldr	x3, [x3, #4048]
   10b94:	stp	x19, x20, [sp, #16]
   10b98:	mov	x20, x0
   10b9c:	stp	x21, x22, [sp, #32]
   10ba0:	ldrb	w0, [x3]
   10ba4:	stp	x23, x24, [sp, #48]
   10ba8:	stp	x25, x26, [sp, #64]
   10bac:	cbnz	w0, 10c68 <__interceptor_posix_memalign@@Base+0xe8>
   10bb0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10bb4:	mov	x21, x1
   10bb8:	mov	x22, x2
   10bbc:	ldr	x0, [x0, #3592]
   10bc0:	ldrb	w0, [x0]
   10bc4:	cbz	w0, 10c50 <__interceptor_posix_memalign@@Base+0xd0>
   10bc8:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10bcc:	add	x23, x29, #0x58
   10bd0:	add	x0, x23, #0x10
   10bd4:	str	x0, [x29, #88]
   10bd8:	ldr	x19, [x19, #4040]
   10bdc:	str	xzr, [x29, #96]
   10be0:	str	xzr, [x29, #2152]
   10be4:	mov	x26, x29
   10be8:	ldrsw	x25, [x19, #36]
   10bec:	bl	248d0 <OnPrint@@Base+0x1f68>
   10bf0:	ldrb	w24, [x19, #34]
   10bf4:	mov	x19, x0
   10bf8:	cbnz	w24, 10c58 <__interceptor_posix_memalign@@Base+0xd8>
   10bfc:	mov	x6, #0x0                   	// #0
   10c00:	mov	x5, #0x0                   	// #0
   10c04:	mov	w7, w24
   10c08:	mov	x4, #0x0                   	// #0
   10c0c:	mov	x3, x26
   10c10:	mov	x2, x19
   10c14:	mov	w1, w25
   10c18:	mov	x0, x23
   10c1c:	bl	24fe8 <OnPrint@@Base+0x2680>
   10c20:	mov	x3, x23
   10c24:	mov	x2, x22
   10c28:	mov	x1, x21
   10c2c:	mov	x0, x20
   10c30:	bl	cb00 <__sanitizer_get_allocated_size@@Base+0xaf0>
   10c34:	ldp	x29, x30, [sp]
   10c38:	ldp	x19, x20, [sp, #16]
   10c3c:	ldp	x21, x22, [sp, #32]
   10c40:	ldp	x23, x24, [sp, #48]
   10c44:	ldp	x25, x26, [sp, #64]
   10c48:	add	sp, sp, #0x870
   10c4c:	ret
   10c50:	bl	6b40 <__lsan_init@plt>
   10c54:	b	10bc8 <__interceptor_posix_memalign@@Base+0x48>
   10c58:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   10c5c:	cbz	x0, 10bfc <__interceptor_posix_memalign@@Base+0x7c>
   10c60:	ldp	x6, x5, [x0, #144]
   10c64:	b	10c04 <__interceptor_posix_memalign@@Base+0x84>
   10c68:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10c6c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10c70:	add	x2, x2, #0x638
   10c74:	add	x0, x0, #0xf00
   10c78:	mov	x4, #0x0                   	// #0
   10c7c:	mov	x3, #0x0                   	// #0
   10c80:	mov	w1, #0x56                  	// #86
   10c84:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010c88 <__interceptor_valloc@@Base>:
   10c88:	sub	sp, sp, #0x860
   10c8c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10c90:	stp	x29, x30, [sp]
   10c94:	mov	x29, sp
   10c98:	ldr	x1, [x1, #4048]
   10c9c:	stp	x19, x20, [sp, #16]
   10ca0:	mov	x20, x0
   10ca4:	stp	x21, x22, [sp, #32]
   10ca8:	ldrb	w0, [x1]
   10cac:	stp	x23, x24, [sp, #48]
   10cb0:	cbnz	w0, 10d58 <__interceptor_valloc@@Base+0xd0>
   10cb4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10cb8:	ldr	x0, [x0, #3592]
   10cbc:	ldrb	w0, [x0]
   10cc0:	cbz	w0, 10d40 <__interceptor_valloc@@Base+0xb8>
   10cc4:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10cc8:	add	x21, x29, #0x48
   10ccc:	add	x0, x21, #0x10
   10cd0:	str	x0, [x29, #72]
   10cd4:	ldr	x19, [x19, #4040]
   10cd8:	str	xzr, [x29, #80]
   10cdc:	str	xzr, [x29, #2136]
   10ce0:	mov	x24, x29
   10ce4:	ldrsw	x23, [x19, #36]
   10ce8:	bl	248d0 <OnPrint@@Base+0x1f68>
   10cec:	ldrb	w22, [x19, #34]
   10cf0:	mov	x19, x0
   10cf4:	cbnz	w22, 10d48 <__interceptor_valloc@@Base+0xc0>
   10cf8:	mov	x6, #0x0                   	// #0
   10cfc:	mov	x5, #0x0                   	// #0
   10d00:	mov	w7, w22
   10d04:	mov	x3, x24
   10d08:	mov	x2, x19
   10d0c:	mov	x4, #0x0                   	// #0
   10d10:	mov	w1, w23
   10d14:	mov	x0, x21
   10d18:	bl	24fe8 <OnPrint@@Base+0x2680>
   10d1c:	mov	x1, x21
   10d20:	mov	x0, x20
   10d24:	bl	cf70 <__sanitizer_get_allocated_size@@Base+0xf60>
   10d28:	ldp	x29, x30, [sp]
   10d2c:	ldp	x19, x20, [sp, #16]
   10d30:	ldp	x21, x22, [sp, #32]
   10d34:	ldp	x23, x24, [sp, #48]
   10d38:	add	sp, sp, #0x860
   10d3c:	ret
   10d40:	bl	6b40 <__lsan_init@plt>
   10d44:	b	10cc4 <__interceptor_valloc@@Base+0x3c>
   10d48:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   10d4c:	cbz	x0, 10cf8 <__interceptor_valloc@@Base+0x70>
   10d50:	ldp	x6, x5, [x0, #144]
   10d54:	b	10d00 <__interceptor_valloc@@Base+0x78>
   10d58:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10d5c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10d60:	add	x2, x2, #0x638
   10d64:	add	x0, x0, #0xf00
   10d68:	mov	x4, #0x0                   	// #0
   10d6c:	mov	x3, #0x0                   	// #0
   10d70:	mov	w1, #0x5c                  	// #92
   10d74:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010d78 <__interceptor_memalign@@Base>:
   10d78:	sub	sp, sp, #0x870
   10d7c:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10d80:	stp	x29, x30, [sp]
   10d84:	mov	x29, sp
   10d88:	ldr	x2, [x2, #4048]
   10d8c:	stp	x19, x20, [sp, #16]
   10d90:	mov	x20, x0
   10d94:	stp	x21, x22, [sp, #32]
   10d98:	ldrb	w0, [x2]
   10d9c:	stp	x23, x24, [sp, #48]
   10da0:	str	x25, [sp, #64]
   10da4:	cbnz	w0, 10e58 <__interceptor_memalign@@Base+0xe0>
   10da8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10dac:	mov	x21, x1
   10db0:	ldr	x0, [x0, #3592]
   10db4:	ldrb	w0, [x0]
   10db8:	cbz	w0, 10e40 <__interceptor_memalign@@Base+0xc8>
   10dbc:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10dc0:	add	x22, x29, #0x58
   10dc4:	add	x0, x22, #0x10
   10dc8:	str	x0, [x29, #88]
   10dcc:	ldr	x19, [x19, #4040]
   10dd0:	str	xzr, [x29, #96]
   10dd4:	str	xzr, [x29, #2152]
   10dd8:	mov	x25, x29
   10ddc:	ldrsw	x24, [x19, #36]
   10de0:	bl	248d0 <OnPrint@@Base+0x1f68>
   10de4:	ldrb	w23, [x19, #34]
   10de8:	mov	x19, x0
   10dec:	cbnz	w23, 10e48 <__interceptor_memalign@@Base+0xd0>
   10df0:	mov	x6, #0x0                   	// #0
   10df4:	mov	x5, #0x0                   	// #0
   10df8:	mov	w7, w23
   10dfc:	mov	x3, x25
   10e00:	mov	x4, #0x0                   	// #0
   10e04:	mov	x2, x19
   10e08:	mov	w1, w24
   10e0c:	mov	x0, x22
   10e10:	bl	24fe8 <OnPrint@@Base+0x2680>
   10e14:	mov	x2, x22
   10e18:	mov	x1, x21
   10e1c:	mov	x0, x20
   10e20:	bl	d588 <__sanitizer_get_allocated_size@@Base+0x1578>
   10e24:	ldp	x29, x30, [sp]
   10e28:	ldp	x19, x20, [sp, #16]
   10e2c:	ldp	x21, x22, [sp, #32]
   10e30:	ldp	x23, x24, [sp, #48]
   10e34:	ldr	x25, [sp, #64]
   10e38:	add	sp, sp, #0x870
   10e3c:	ret
   10e40:	bl	6b40 <__lsan_init@plt>
   10e44:	b	10dbc <__interceptor_memalign@@Base+0x44>
   10e48:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   10e4c:	cbz	x0, 10df0 <__interceptor_memalign@@Base+0x78>
   10e50:	ldp	x6, x5, [x0, #144]
   10e54:	b	10df8 <__interceptor_memalign@@Base+0x80>
   10e58:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10e5c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10e60:	add	x2, x2, #0x638
   10e64:	add	x0, x0, #0xf00
   10e68:	mov	x4, #0x0                   	// #0
   10e6c:	mov	x3, #0x0                   	// #0
   10e70:	mov	w1, #0x64                  	// #100
   10e74:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010e78 <__interceptor___libc_memalign@@Base>:
   10e78:	sub	sp, sp, #0x870
   10e7c:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10e80:	stp	x29, x30, [sp]
   10e84:	mov	x29, sp
   10e88:	ldr	x2, [x2, #4048]
   10e8c:	stp	x21, x22, [sp, #32]
   10e90:	mov	x21, x0
   10e94:	stp	x19, x20, [sp, #16]
   10e98:	ldrb	w0, [x2]
   10e9c:	stp	x23, x24, [sp, #48]
   10ea0:	str	x25, [sp, #64]
   10ea4:	cbnz	w0, 10f68 <__interceptor___libc_memalign@@Base+0xf0>
   10ea8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10eac:	mov	x19, x1
   10eb0:	ldr	x0, [x0, #3592]
   10eb4:	ldrb	w0, [x0]
   10eb8:	cbz	w0, 10f50 <__interceptor___libc_memalign@@Base+0xd8>
   10ebc:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10ec0:	add	x22, x29, #0x58
   10ec4:	add	x0, x22, #0x10
   10ec8:	str	x0, [x29, #88]
   10ecc:	ldr	x20, [x20, #4040]
   10ed0:	str	xzr, [x29, #96]
   10ed4:	str	xzr, [x29, #2152]
   10ed8:	mov	x25, x29
   10edc:	ldrsw	x24, [x20, #36]
   10ee0:	bl	248d0 <OnPrint@@Base+0x1f68>
   10ee4:	ldrb	w23, [x20, #34]
   10ee8:	mov	x20, x0
   10eec:	cbnz	w23, 10f58 <__interceptor___libc_memalign@@Base+0xe0>
   10ef0:	mov	x6, #0x0                   	// #0
   10ef4:	mov	x5, #0x0                   	// #0
   10ef8:	mov	w7, w23
   10efc:	mov	x3, x25
   10f00:	mov	x4, #0x0                   	// #0
   10f04:	mov	x2, x20
   10f08:	mov	w1, w24
   10f0c:	mov	x0, x22
   10f10:	bl	24fe8 <OnPrint@@Base+0x2680>
   10f14:	mov	x2, x22
   10f18:	mov	x1, x19
   10f1c:	mov	x0, x21
   10f20:	bl	d588 <__sanitizer_get_allocated_size@@Base+0x1578>
   10f24:	mov	x1, x19
   10f28:	mov	x19, x0
   10f2c:	bl	2ddf0 <__sanitizer_set_death_callback@@Base+0x1708>
   10f30:	mov	x0, x19
   10f34:	ldp	x29, x30, [sp]
   10f38:	ldp	x19, x20, [sp, #16]
   10f3c:	ldp	x21, x22, [sp, #32]
   10f40:	ldp	x23, x24, [sp, #48]
   10f44:	ldr	x25, [sp, #64]
   10f48:	add	sp, sp, #0x870
   10f4c:	ret
   10f50:	bl	6b40 <__lsan_init@plt>
   10f54:	b	10ebc <__interceptor___libc_memalign@@Base+0x44>
   10f58:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   10f5c:	cbz	x0, 10ef0 <__interceptor___libc_memalign@@Base+0x78>
   10f60:	ldp	x6, x5, [x0, #144]
   10f64:	b	10ef8 <__interceptor___libc_memalign@@Base+0x80>
   10f68:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10f6c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   10f70:	add	x2, x2, #0x638
   10f74:	add	x0, x0, #0xf00
   10f78:	mov	x4, #0x0                   	// #0
   10f7c:	mov	x3, #0x0                   	// #0
   10f80:	mov	w1, #0x6b                  	// #107
   10f84:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010f88 <__interceptor_aligned_alloc@@Base>:
   10f88:	sub	sp, sp, #0x870
   10f8c:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10f90:	stp	x29, x30, [sp]
   10f94:	mov	x29, sp
   10f98:	ldr	x2, [x2, #4048]
   10f9c:	stp	x19, x20, [sp, #16]
   10fa0:	mov	x20, x0
   10fa4:	stp	x21, x22, [sp, #32]
   10fa8:	ldrb	w0, [x2]
   10fac:	stp	x23, x24, [sp, #48]
   10fb0:	str	x25, [sp, #64]
   10fb4:	cbnz	w0, 11068 <__interceptor_aligned_alloc@@Base+0xe0>
   10fb8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10fbc:	mov	x21, x1
   10fc0:	ldr	x0, [x0, #3592]
   10fc4:	ldrb	w0, [x0]
   10fc8:	cbz	w0, 11050 <__interceptor_aligned_alloc@@Base+0xc8>
   10fcc:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10fd0:	add	x22, x29, #0x58
   10fd4:	add	x0, x22, #0x10
   10fd8:	str	x0, [x29, #88]
   10fdc:	ldr	x19, [x19, #4040]
   10fe0:	str	xzr, [x29, #96]
   10fe4:	str	xzr, [x29, #2152]
   10fe8:	mov	x25, x29
   10fec:	ldrsw	x24, [x19, #36]
   10ff0:	bl	248d0 <OnPrint@@Base+0x1f68>
   10ff4:	ldrb	w23, [x19, #34]
   10ff8:	mov	x19, x0
   10ffc:	cbnz	w23, 11058 <__interceptor_aligned_alloc@@Base+0xd0>
   11000:	mov	x6, #0x0                   	// #0
   11004:	mov	x5, #0x0                   	// #0
   11008:	mov	w7, w23
   1100c:	mov	x3, x25
   11010:	mov	x4, #0x0                   	// #0
   11014:	mov	x2, x19
   11018:	mov	w1, w24
   1101c:	mov	x0, x22
   11020:	bl	24fe8 <OnPrint@@Base+0x2680>
   11024:	mov	x2, x22
   11028:	mov	x1, x21
   1102c:	mov	x0, x20
   11030:	bl	d890 <__sancov_lowest_stack@@Base+0x60>
   11034:	ldp	x29, x30, [sp]
   11038:	ldp	x19, x20, [sp, #16]
   1103c:	ldp	x21, x22, [sp, #32]
   11040:	ldp	x23, x24, [sp, #48]
   11044:	ldr	x25, [sp, #64]
   11048:	add	sp, sp, #0x870
   1104c:	ret
   11050:	bl	6b40 <__lsan_init@plt>
   11054:	b	10fcc <__interceptor_aligned_alloc@@Base+0x44>
   11058:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   1105c:	cbz	x0, 11000 <__interceptor_aligned_alloc@@Base+0x78>
   11060:	ldp	x6, x5, [x0, #144]
   11064:	b	11008 <__interceptor_aligned_alloc@@Base+0x80>
   11068:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1106c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11070:	add	x2, x2, #0x638
   11074:	add	x0, x0, #0xf00
   11078:	mov	x4, #0x0                   	// #0
   1107c:	mov	x3, #0x0                   	// #0
   11080:	mov	w1, #0x79                  	// #121
   11084:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000011088 <__interceptor_malloc_usable_size@@Base>:
   11088:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1108c:	str	x30, [sp, #-32]!
   11090:	ldr	x1, [x1, #4048]
   11094:	ldrb	w1, [x1]
   11098:	cbnz	w1, 110c8 <__interceptor_malloc_usable_size@@Base+0x40>
   1109c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   110a0:	ldr	x1, [x1, #3592]
   110a4:	ldrb	w1, [x1]
   110a8:	cbz	w1, 110b4 <__interceptor_malloc_usable_size@@Base+0x2c>
   110ac:	ldr	x30, [sp], #32
   110b0:	b	b380 <__sanitizer_print_stack_trace@@Base+0x228>
   110b4:	str	x0, [sp, #24]
   110b8:	bl	6b40 <__lsan_init@plt>
   110bc:	ldr	x0, [sp, #24]
   110c0:	ldr	x30, [sp], #32
   110c4:	b	b380 <__sanitizer_print_stack_trace@@Base+0x228>
   110c8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   110cc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   110d0:	add	x2, x2, #0x638
   110d4:	add	x0, x0, #0xf00
   110d8:	mov	x4, #0x0                   	// #0
   110dc:	mov	x3, #0x0                   	// #0
   110e0:	mov	w1, #0x84                  	// #132
   110e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000110e8 <__interceptor_mallinfo@@Base>:
   110e8:	str	x30, [sp, #-16]!
   110ec:	mov	x0, x8
   110f0:	mov	x2, #0x28                  	// #40
   110f4:	mov	w1, #0x0                   	// #0
   110f8:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   110fc:	ldr	x30, [sp], #16
   11100:	ret
   11104:	nop

0000000000011108 <__interceptor_pvalloc@@Base>:
   11108:	sub	sp, sp, #0x860
   1110c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11110:	stp	x29, x30, [sp]
   11114:	mov	x29, sp
   11118:	ldr	x1, [x1, #4048]
   1111c:	stp	x19, x20, [sp, #16]
   11120:	mov	x20, x0
   11124:	stp	x21, x22, [sp, #32]
   11128:	ldrb	w0, [x1]
   1112c:	stp	x23, x24, [sp, #48]
   11130:	cbnz	w0, 111d8 <__interceptor_pvalloc@@Base+0xd0>
   11134:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11138:	ldr	x0, [x0, #3592]
   1113c:	ldrb	w0, [x0]
   11140:	cbz	w0, 111c0 <__interceptor_pvalloc@@Base+0xb8>
   11144:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11148:	add	x21, x29, #0x48
   1114c:	add	x0, x21, #0x10
   11150:	str	x0, [x29, #72]
   11154:	ldr	x19, [x19, #4040]
   11158:	str	xzr, [x29, #80]
   1115c:	str	xzr, [x29, #2136]
   11160:	mov	x24, x29
   11164:	ldrsw	x23, [x19, #36]
   11168:	bl	248d0 <OnPrint@@Base+0x1f68>
   1116c:	ldrb	w22, [x19, #34]
   11170:	mov	x19, x0
   11174:	cbnz	w22, 111c8 <__interceptor_pvalloc@@Base+0xc0>
   11178:	mov	x6, #0x0                   	// #0
   1117c:	mov	x5, #0x0                   	// #0
   11180:	mov	w7, w22
   11184:	mov	x3, x24
   11188:	mov	x2, x19
   1118c:	mov	x4, #0x0                   	// #0
   11190:	mov	w1, w23
   11194:	mov	x0, x21
   11198:	bl	24fe8 <OnPrint@@Base+0x2680>
   1119c:	mov	x1, x21
   111a0:	mov	x0, x20
   111a4:	bl	cbd0 <__sanitizer_get_allocated_size@@Base+0xbc0>
   111a8:	ldp	x29, x30, [sp]
   111ac:	ldp	x19, x20, [sp, #16]
   111b0:	ldp	x21, x22, [sp, #32]
   111b4:	ldp	x23, x24, [sp, #48]
   111b8:	add	sp, sp, #0x860
   111bc:	ret
   111c0:	bl	6b40 <__lsan_init@plt>
   111c4:	b	11144 <__interceptor_pvalloc@@Base+0x3c>
   111c8:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   111cc:	cbz	x0, 11178 <__interceptor_pvalloc@@Base+0x70>
   111d0:	ldp	x6, x5, [x0, #144]
   111d4:	b	11180 <__interceptor_pvalloc@@Base+0x78>
   111d8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   111dc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   111e0:	add	x2, x2, #0x638
   111e4:	add	x0, x0, #0xf00
   111e8:	mov	x4, #0x0                   	// #0
   111ec:	mov	x3, #0x0                   	// #0
   111f0:	mov	w1, #0xa4                  	// #164
   111f4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000111f8 <__interceptor_pthread_join@@Base>:
   111f8:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   111fc:	stp	x19, x20, [sp, #-32]!
   11200:	mov	x19, x0
   11204:	ldr	x2, [x2, #4048]
   11208:	stp	x21, x30, [sp, #16]
   1120c:	ldrb	w0, [x2]
   11210:	cbnz	w0, 11280 <__interceptor_pthread_join@@Base+0x88>
   11214:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11218:	mov	x20, x1
   1121c:	ldr	x0, [x0, #3592]
   11220:	ldrb	w0, [x0]
   11224:	cbz	w0, 11260 <__interceptor_pthread_join@@Base+0x68>
   11228:	mov	x0, x19
   1122c:	bl	128f0 <_ZdaPvmSt11align_val_t@@Base+0x590>
   11230:	adrp	x2, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   11234:	mov	w21, w0
   11238:	mov	x1, x20
   1123c:	mov	x0, x19
   11240:	ldr	x2, [x2, #3904]
   11244:	blr	x2
   11248:	mov	w19, w0
   1124c:	cbz	w0, 11268 <__interceptor_pthread_join@@Base+0x70>
   11250:	mov	w0, w19
   11254:	ldp	x21, x30, [sp, #16]
   11258:	ldp	x19, x20, [sp], #32
   1125c:	ret
   11260:	bl	6b40 <__lsan_init@plt>
   11264:	b	11228 <__interceptor_pthread_join@@Base+0x30>
   11268:	mov	w0, w21
   1126c:	bl	12908 <_ZdaPvmSt11align_val_t@@Base+0x5a8>
   11270:	mov	w0, w19
   11274:	ldp	x21, x30, [sp, #16]
   11278:	ldp	x19, x20, [sp], #32
   1127c:	ret
   11280:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11284:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11288:	add	x2, x2, #0x638
   1128c:	add	x0, x0, #0xf00
   11290:	mov	x4, #0x0                   	// #0
   11294:	mov	x3, #0x0                   	// #0
   11298:	mov	w1, #0x198                 	// #408
   1129c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000112a0 <__interceptor__exit@@Base>:
   112a0:	stp	x19, x30, [sp, #-16]!
   112a4:	mov	w19, w0
   112a8:	cbz	w0, 112c4 <__interceptor__exit@@Base+0x24>
   112ac:	mov	w0, w19
   112b0:	adrp	x1, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   112b4:	ldp	x19, x30, [sp], #16
   112b8:	ldr	x1, [x1, #3912]
   112bc:	mov	x16, x1
   112c0:	br	x16
   112c4:	bl	8410 <*ABS*+0x10@plt+0x16b0>
   112c8:	tst	w0, #0xff
   112cc:	b.eq	112ac <__interceptor__exit@@Base+0xc>  // b.none
   112d0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   112d4:	adrp	x1, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   112d8:	ldr	x0, [x0, #4040]
   112dc:	ldr	x1, [x1, #3912]
   112e0:	ldr	w19, [x0, #216]
   112e4:	mov	x16, x1
   112e8:	mov	w0, w19
   112ec:	ldp	x19, x30, [sp], #16
   112f0:	br	x16
   112f4:	nop

00000000000112f8 <__interceptor_signal@@Base>:
   112f8:	stp	x19, x20, [sp, #-32]!
   112fc:	mov	x20, x1
   11300:	mov	w19, w0
   11304:	str	x30, [sp, #16]
   11308:	bl	1ef78 <__sanitizer_set_report_fd@@Base+0x56b0>
   1130c:	cmp	w0, #0x2
   11310:	b.eq	11334 <__interceptor_signal@@Base+0x3c>  // b.none
   11314:	mov	x1, x20
   11318:	mov	w0, w19
   1131c:	adrp	x2, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   11320:	ldr	x30, [sp, #16]
   11324:	ldp	x19, x20, [sp], #32
   11328:	ldr	x2, [x2, #3920]
   1132c:	mov	x16, x2
   11330:	br	x16
   11334:	mov	x0, #0x0                   	// #0
   11338:	ldr	x30, [sp, #16]
   1133c:	ldp	x19, x20, [sp], #32
   11340:	ret
   11344:	nop

0000000000011348 <__interceptor_sigaction@@Base>:
   11348:	stp	x19, x20, [sp, #-48]!
   1134c:	mov	x20, x1
   11350:	mov	w19, w0
   11354:	stp	x21, x30, [sp, #16]
   11358:	mov	x21, x2
   1135c:	str	x2, [sp, #40]
   11360:	bl	1ef78 <__sanitizer_set_report_fd@@Base+0x56b0>
   11364:	cmp	w0, #0x2
   11368:	b.eq	11390 <__interceptor_sigaction@@Base+0x48>  // b.none
   1136c:	adrp	x3, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   11370:	mov	x2, x21
   11374:	mov	x1, x20
   11378:	mov	w0, w19
   1137c:	ldr	x3, [x3, #3928]
   11380:	ldp	x21, x30, [sp, #16]
   11384:	mov	x16, x3
   11388:	ldp	x19, x20, [sp], #48
   1138c:	br	x16
   11390:	mov	w0, #0x0                   	// #0
   11394:	ldp	x21, x30, [sp, #16]
   11398:	ldp	x19, x20, [sp], #48
   1139c:	ret
   113a0:	sub	sp, sp, #0x870
   113a4:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   113a8:	stp	x29, x30, [sp]
   113ac:	mov	x29, sp
   113b0:	ldr	x2, [x2, #3592]
   113b4:	stp	x19, x20, [sp, #16]
   113b8:	mov	x20, x0
   113bc:	stp	x21, x22, [sp, #32]
   113c0:	mov	x21, x1
   113c4:	ldrb	w0, [x2]
   113c8:	stp	x23, x24, [sp, #48]
   113cc:	str	x25, [sp, #64]
   113d0:	cbz	w0, 11458 <__interceptor_sigaction@@Base+0x110>
   113d4:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   113d8:	add	x22, x29, #0x58
   113dc:	add	x0, x22, #0x10
   113e0:	str	x0, [x29, #88]
   113e4:	ldr	x19, [x19, #4040]
   113e8:	str	xzr, [x29, #96]
   113ec:	str	xzr, [x29, #2152]
   113f0:	mov	x25, x29
   113f4:	ldrsw	x24, [x19, #36]
   113f8:	bl	248d0 <OnPrint@@Base+0x1f68>
   113fc:	ldrb	w23, [x19, #34]
   11400:	mov	x19, x0
   11404:	cbnz	w23, 11460 <__interceptor_sigaction@@Base+0x118>
   11408:	mov	x6, #0x0                   	// #0
   1140c:	mov	x5, #0x0                   	// #0
   11410:	mov	w7, w23
   11414:	mov	x3, x25
   11418:	mov	x4, #0x0                   	// #0
   1141c:	mov	x2, x19
   11420:	mov	w1, w24
   11424:	mov	x0, x22
   11428:	bl	24fe8 <OnPrint@@Base+0x2680>
   1142c:	mov	x2, x22
   11430:	mov	x1, x21
   11434:	mov	x0, x20
   11438:	bl	d278 <__sanitizer_get_allocated_size@@Base+0x1268>
   1143c:	ldp	x29, x30, [sp]
   11440:	ldp	x19, x20, [sp, #16]
   11444:	ldp	x21, x22, [sp, #32]
   11448:	ldp	x23, x24, [sp, #48]
   1144c:	ldr	x25, [sp, #64]
   11450:	add	sp, sp, #0x870
   11454:	ret
   11458:	bl	6b40 <__lsan_init@plt>
   1145c:	b	113d4 <__interceptor_sigaction@@Base+0x8c>
   11460:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11464:	cbz	x0, 11408 <__interceptor_sigaction@@Base+0xc0>
   11468:	ldp	x6, x5, [x0, #144]
   1146c:	b	11410 <__interceptor_sigaction@@Base+0xc8>

0000000000011470 <__interceptor_calloc@@Base>:
   11470:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11474:	ldr	x3, [x3, #4048]
   11478:	ldrb	w3, [x3]
   1147c:	cbz	w3, 114b8 <__interceptor_calloc@@Base+0x48>
   11480:	mov	x4, x1
   11484:	adrp	x1, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   11488:	add	x1, x1, #0xf40
   1148c:	mul	x2, x0, x4
   11490:	adrp	x0, f1000 <__asan_cplus_demangle_operators@@Base+0x84be0>
   11494:	add	x3, x0, #0x10
   11498:	ldr	x0, [x1, #32]
   1149c:	add	x2, x2, #0x7
   114a0:	add	x2, x0, x2, lsr #3
   114a4:	str	x2, [x1, #32]
   114a8:	cmp	x2, #0x3ff
   114ac:	add	x0, x3, x0, lsl #3
   114b0:	b.hi	114bc <__interceptor_calloc@@Base+0x4c>  // b.pmore
   114b4:	ret
   114b8:	b	113a0 <__interceptor_sigaction@@Base+0x58>
   114bc:	str	x30, [sp, #-16]!
   114c0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   114c4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   114c8:	add	x2, x2, #0xf38
   114cc:	add	x0, x0, #0xf00
   114d0:	mov	x4, #0x0                   	// #0
   114d4:	mov	x3, #0x0                   	// #0
   114d8:	mov	w1, #0x47                  	// #71
   114dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   114e0:	adrp	x2, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   114e4:	stp	x19, x20, [sp, #-48]!
   114e8:	mov	x20, x0
   114ec:	ldr	w0, [x2, #3944]
   114f0:	mov	x1, #0x4                   	// #4
   114f4:	stp	x21, x22, [sp, #16]
   114f8:	ldp	x21, x22, [x20]
   114fc:	str	x30, [sp, #32]
   11500:	bl	69e0 <pthread_setspecific@plt>
   11504:	cbz	w0, 11510 <__interceptor_calloc@@Base+0xa0>
   11508:	b	11558 <__interceptor_calloc@@Base+0xe8>
   1150c:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   11510:	ldr	x19, [x20, #16]
   11514:	dmb	ish
   11518:	cbz	w19, 1150c <__interceptor_calloc@@Base+0x9c>
   1151c:	mov	w0, w19
   11520:	bl	b218 <__sanitizer_print_stack_trace@@Base+0xc0>
   11524:	bl	1dc30 <__sanitizer_set_report_fd@@Base+0x4368>
   11528:	mov	x1, x0
   1152c:	mov	w2, #0x0                   	// #0
   11530:	mov	w0, w19
   11534:	bl	127e0 <_ZdaPvmSt11align_val_t@@Base+0x480>
   11538:	dmb	ish
   1153c:	str	xzr, [x20, #16]
   11540:	mov	x0, x22
   11544:	mov	x16, x21
   11548:	ldp	x21, x22, [sp, #16]
   1154c:	ldr	x30, [sp, #32]
   11550:	ldp	x19, x20, [sp], #48
   11554:	br	x16
   11558:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1155c:	add	x0, x0, #0xf60
   11560:	bl	22d00 <OnPrint@@Base+0x398>
   11564:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

0000000000011568 <__interceptor_pthread_create@@Base>:
   11568:	adrp	x4, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1156c:	stp	x19, x20, [sp, #-208]!
   11570:	ldr	x4, [x4, #4048]
   11574:	stp	x21, x22, [sp, #16]
   11578:	mov	x21, x0
   1157c:	ldrb	w0, [x4]
   11580:	str	x30, [sp, #32]
   11584:	cbnz	w0, 116a8 <__interceptor_pthread_create@@Base+0x140>
   11588:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1158c:	mov	x19, x1
   11590:	mov	x22, x2
   11594:	mov	x20, x3
   11598:	ldr	x0, [x0, #3592]
   1159c:	ldrb	w0, [x0]
   115a0:	cbz	w0, 1161c <__interceptor_pthread_create@@Base+0xb4>
   115a4:	bl	12948 <_ZdaPvmSt11align_val_t@@Base+0x5e8>
   115a8:	cbz	x19, 11628 <__interceptor_pthread_create@@Base+0xc0>
   115ac:	mov	x0, x19
   115b0:	bl	21c90 <__sanitizer_set_report_fd@@Base+0x83c8>
   115b4:	add	x1, sp, #0x34
   115b8:	mov	x0, x19
   115bc:	str	wzr, [sp, #52]
   115c0:	bl	6730 <pthread_attr_getdetachstate@plt>
   115c4:	stp	x22, x20, [sp, #56]
   115c8:	str	xzr, [sp, #72]
   115cc:	bl	ab50 <__lsan_do_recoverable_leak_check@@Base+0xe88>
   115d0:	adrp	x0, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   115d4:	add	x3, sp, #0x38
   115d8:	mov	x1, x19
   115dc:	adrp	x2, 11000 <__interceptor_aligned_alloc@@Base+0x78>
   115e0:	ldr	x4, [x0, #3952]
   115e4:	add	x2, x2, #0x4e0
   115e8:	mov	x0, x21
   115ec:	blr	x4
   115f0:	mov	w20, w0
   115f4:	bl	ab70 <__lsan_do_recoverable_leak_check@@Base+0xea8>
   115f8:	cbz	w20, 11638 <__interceptor_pthread_create@@Base+0xd0>
   115fc:	add	x0, sp, #0x50
   11600:	cmp	x19, x0
   11604:	b.eq	1168c <__interceptor_pthread_create@@Base+0x124>  // b.none
   11608:	mov	w0, w20
   1160c:	ldp	x21, x22, [sp, #16]
   11610:	ldr	x30, [sp, #32]
   11614:	ldp	x19, x20, [sp], #208
   11618:	ret
   1161c:	bl	6b40 <__lsan_init@plt>
   11620:	bl	12948 <_ZdaPvmSt11align_val_t@@Base+0x5e8>
   11624:	cbnz	x19, 115ac <__interceptor_pthread_create@@Base+0x44>
   11628:	add	x0, sp, #0x50
   1162c:	mov	x19, x0
   11630:	bl	6800 <pthread_attr_init@plt>
   11634:	b	115ac <__interceptor_pthread_create@@Base+0x44>
   11638:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   1163c:	mov	w22, w0
   11640:	ldr	w0, [sp, #52]
   11644:	ldr	x21, [x21]
   11648:	bl	21f80 <__sanitizer_set_report_fd@@Base+0x86b8>
   1164c:	mov	w2, w0
   11650:	mov	x1, x21
   11654:	mov	w0, w22
   11658:	bl	127c8 <_ZdaPvmSt11align_val_t@@Base+0x468>
   1165c:	sxtw	x1, w0
   11660:	cbz	w0, 116c8 <__interceptor_pthread_create@@Base+0x160>
   11664:	dmb	ish
   11668:	str	x1, [sp, #72]
   1166c:	b	11674 <__interceptor_pthread_create@@Base+0x10c>
   11670:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   11674:	ldr	x1, [sp, #72]
   11678:	dmb	ish
   1167c:	cbnz	x1, 11670 <__interceptor_pthread_create@@Base+0x108>
   11680:	add	x0, sp, #0x50
   11684:	cmp	x19, x0
   11688:	b.ne	11608 <__interceptor_pthread_create@@Base+0xa0>  // b.any
   1168c:	mov	x0, x19
   11690:	bl	68f0 <pthread_attr_destroy@plt>
   11694:	mov	w0, w20
   11698:	ldp	x21, x22, [sp, #16]
   1169c:	ldr	x30, [sp, #32]
   116a0:	ldp	x19, x20, [sp], #208
   116a4:	ret
   116a8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   116ac:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   116b0:	add	x2, x2, #0x638
   116b4:	add	x0, x0, #0xf00
   116b8:	mov	x4, #0x0                   	// #0
   116bc:	mov	x3, #0x0                   	// #0
   116c0:	mov	w1, #0x173                 	// #371
   116c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   116c8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   116cc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   116d0:	add	x2, x2, #0xf90
   116d4:	add	x0, x0, #0xf00
   116d8:	mov	x4, #0x0                   	// #0
   116dc:	mov	x3, #0x0                   	// #0
   116e0:	mov	w1, #0x18d                 	// #397
   116e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   116e8:	cmp	x0, #0x1
   116ec:	b.ls	11710 <__interceptor_pthread_create@@Base+0x1a8>  // b.plast
   116f0:	adrp	x2, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   116f4:	sub	x1, x0, #0x1
   116f8:	str	x30, [sp, #-16]!
   116fc:	ldr	w0, [x2, #3944]
   11700:	bl	69e0 <pthread_setspecific@plt>
   11704:	cbnz	w0, 11714 <__interceptor_pthread_create@@Base+0x1ac>
   11708:	ldr	x30, [sp], #16
   1170c:	ret
   11710:	b	12880 <_ZdaPvmSt11align_val_t@@Base+0x520>
   11714:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11718:	add	x0, x0, #0xf60
   1171c:	bl	22d00 <OnPrint@@Base+0x398>
   11720:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   11724:	nop

0000000000011728 <__interceptor_mcheck@@Base>:
   11728:	mov	w0, #0x0                   	// #0
   1172c:	ret

0000000000011730 <__interceptor_mcheck_pedantic@@Base>:
   11730:	mov	w0, #0x0                   	// #0
   11734:	ret

0000000000011738 <__interceptor_mprobe@@Base>:
   11738:	mov	w0, #0x0                   	// #0
   1173c:	ret

0000000000011740 <_Znwm@@Base>:
   11740:	sub	sp, sp, #0x860
   11744:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11748:	stp	x29, x30, [sp]
   1174c:	mov	x29, sp
   11750:	ldr	x1, [x1, #4048]
   11754:	stp	x19, x20, [sp, #16]
   11758:	mov	x20, x0
   1175c:	stp	x21, x22, [sp, #32]
   11760:	ldrb	w0, [x1]
   11764:	stp	x23, x24, [sp, #48]
   11768:	cbnz	w0, 11814 <_Znwm@@Base+0xd4>
   1176c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11770:	ldr	x0, [x0, #3592]
   11774:	ldrb	w0, [x0]
   11778:	cbz	w0, 117fc <_Znwm@@Base+0xbc>
   1177c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11780:	add	x21, x29, #0x48
   11784:	add	x0, x21, #0x10
   11788:	str	x0, [x29, #72]
   1178c:	ldr	x19, [x19, #4040]
   11790:	str	xzr, [x29, #80]
   11794:	str	xzr, [x29, #2136]
   11798:	mov	x24, x29
   1179c:	ldrsw	x23, [x19, #36]
   117a0:	bl	248d0 <OnPrint@@Base+0x1f68>
   117a4:	ldrb	w22, [x19, #34]
   117a8:	mov	x19, x0
   117ac:	cbnz	w22, 11804 <_Znwm@@Base+0xc4>
   117b0:	mov	x6, #0x0                   	// #0
   117b4:	mov	x5, #0x0                   	// #0
   117b8:	mov	w7, w22
   117bc:	mov	x3, x24
   117c0:	mov	x2, x19
   117c4:	mov	x4, #0x0                   	// #0
   117c8:	mov	w1, w23
   117cc:	mov	x0, x21
   117d0:	bl	24fe8 <OnPrint@@Base+0x2680>
   117d4:	mov	x1, x21
   117d8:	mov	x0, x20
   117dc:	bl	cc98 <__sanitizer_get_allocated_size@@Base+0xc88>
   117e0:	cbz	x0, 11834 <_Znwm@@Base+0xf4>
   117e4:	ldp	x29, x30, [sp]
   117e8:	ldp	x19, x20, [sp, #16]
   117ec:	ldp	x21, x22, [sp, #32]
   117f0:	ldp	x23, x24, [sp, #48]
   117f4:	add	sp, sp, #0x860
   117f8:	ret
   117fc:	bl	6b40 <__lsan_init@plt>
   11800:	b	1177c <_Znwm@@Base+0x3c>
   11804:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11808:	cbz	x0, 117b0 <_Znwm@@Base+0x70>
   1180c:	ldp	x6, x5, [x0, #144]
   11810:	b	117b8 <_Znwm@@Base+0x78>
   11814:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11818:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1181c:	add	x2, x2, #0x638
   11820:	add	x0, x0, #0xf00
   11824:	mov	x4, #0x0                   	// #0
   11828:	mov	x3, #0x0                   	// #0
   1182c:	mov	w1, #0xde                  	// #222
   11830:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11834:	mov	x1, x21
   11838:	mov	x0, x20
   1183c:	bl	15668 <__sancov_default_options@@Base+0x2b98>

0000000000011840 <_Znam@@Base>:
   11840:	sub	sp, sp, #0x860
   11844:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11848:	stp	x29, x30, [sp]
   1184c:	mov	x29, sp
   11850:	ldr	x1, [x1, #4048]
   11854:	stp	x19, x20, [sp, #16]
   11858:	mov	x20, x0
   1185c:	stp	x21, x22, [sp, #32]
   11860:	ldrb	w0, [x1]
   11864:	stp	x23, x24, [sp, #48]
   11868:	cbnz	w0, 11914 <_Znam@@Base+0xd4>
   1186c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11870:	ldr	x0, [x0, #3592]
   11874:	ldrb	w0, [x0]
   11878:	cbz	w0, 118fc <_Znam@@Base+0xbc>
   1187c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11880:	add	x21, x29, #0x48
   11884:	add	x0, x21, #0x10
   11888:	str	x0, [x29, #72]
   1188c:	ldr	x19, [x19, #4040]
   11890:	str	xzr, [x29, #80]
   11894:	str	xzr, [x29, #2136]
   11898:	mov	x24, x29
   1189c:	ldrsw	x23, [x19, #36]
   118a0:	bl	248d0 <OnPrint@@Base+0x1f68>
   118a4:	ldrb	w22, [x19, #34]
   118a8:	mov	x19, x0
   118ac:	cbnz	w22, 11904 <_Znam@@Base+0xc4>
   118b0:	mov	x6, #0x0                   	// #0
   118b4:	mov	x5, #0x0                   	// #0
   118b8:	mov	w7, w22
   118bc:	mov	x3, x24
   118c0:	mov	x2, x19
   118c4:	mov	x4, #0x0                   	// #0
   118c8:	mov	w1, w23
   118cc:	mov	x0, x21
   118d0:	bl	24fe8 <OnPrint@@Base+0x2680>
   118d4:	mov	x1, x21
   118d8:	mov	x0, x20
   118dc:	bl	cc98 <__sanitizer_get_allocated_size@@Base+0xc88>
   118e0:	cbz	x0, 11934 <_Znam@@Base+0xf4>
   118e4:	ldp	x29, x30, [sp]
   118e8:	ldp	x19, x20, [sp, #16]
   118ec:	ldp	x21, x22, [sp, #32]
   118f0:	ldp	x23, x24, [sp, #48]
   118f4:	add	sp, sp, #0x860
   118f8:	ret
   118fc:	bl	6b40 <__lsan_init@plt>
   11900:	b	1187c <_Znam@@Base+0x3c>
   11904:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11908:	cbz	x0, 118b0 <_Znam@@Base+0x70>
   1190c:	ldp	x6, x5, [x0, #144]
   11910:	b	118b8 <_Znam@@Base+0x78>
   11914:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11918:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1191c:	add	x2, x2, #0x638
   11920:	add	x0, x0, #0xf00
   11924:	mov	x4, #0x0                   	// #0
   11928:	mov	x3, #0x0                   	// #0
   1192c:	mov	w1, #0xe0                  	// #224
   11930:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11934:	mov	x1, x21
   11938:	mov	x0, x20
   1193c:	bl	15668 <__sancov_default_options@@Base+0x2b98>

0000000000011940 <_ZnwmRKSt9nothrow_t@@Base>:
   11940:	sub	sp, sp, #0x860
   11944:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11948:	stp	x29, x30, [sp]
   1194c:	mov	x29, sp
   11950:	ldr	x1, [x1, #4048]
   11954:	stp	x19, x20, [sp, #16]
   11958:	mov	x20, x0
   1195c:	stp	x21, x22, [sp, #32]
   11960:	ldrb	w0, [x1]
   11964:	stp	x23, x24, [sp, #48]
   11968:	cbnz	w0, 11a10 <_ZnwmRKSt9nothrow_t@@Base+0xd0>
   1196c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11970:	ldr	x0, [x0, #3592]
   11974:	ldrb	w0, [x0]
   11978:	cbz	w0, 119f8 <_ZnwmRKSt9nothrow_t@@Base+0xb8>
   1197c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11980:	add	x21, x29, #0x48
   11984:	add	x0, x21, #0x10
   11988:	str	x0, [x29, #72]
   1198c:	ldr	x19, [x19, #4040]
   11990:	str	xzr, [x29, #80]
   11994:	str	xzr, [x29, #2136]
   11998:	mov	x24, x29
   1199c:	ldrsw	x23, [x19, #36]
   119a0:	bl	248d0 <OnPrint@@Base+0x1f68>
   119a4:	ldrb	w22, [x19, #34]
   119a8:	mov	x19, x0
   119ac:	cbnz	w22, 11a00 <_ZnwmRKSt9nothrow_t@@Base+0xc0>
   119b0:	mov	x6, #0x0                   	// #0
   119b4:	mov	x5, #0x0                   	// #0
   119b8:	mov	w7, w22
   119bc:	mov	x3, x24
   119c0:	mov	x2, x19
   119c4:	mov	x4, #0x0                   	// #0
   119c8:	mov	w1, w23
   119cc:	mov	x0, x21
   119d0:	bl	24fe8 <OnPrint@@Base+0x2680>
   119d4:	mov	x1, x21
   119d8:	mov	x0, x20
   119dc:	bl	cc98 <__sanitizer_get_allocated_size@@Base+0xc88>
   119e0:	ldp	x29, x30, [sp]
   119e4:	ldp	x19, x20, [sp, #16]
   119e8:	ldp	x21, x22, [sp, #32]
   119ec:	ldp	x23, x24, [sp, #48]
   119f0:	add	sp, sp, #0x860
   119f4:	ret
   119f8:	bl	6b40 <__lsan_init@plt>
   119fc:	b	1197c <_ZnwmRKSt9nothrow_t@@Base+0x3c>
   11a00:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11a04:	cbz	x0, 119b0 <_ZnwmRKSt9nothrow_t@@Base+0x70>
   11a08:	ldp	x6, x5, [x0, #144]
   11a0c:	b	119b8 <_ZnwmRKSt9nothrow_t@@Base+0x78>
   11a10:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11a14:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11a18:	add	x2, x2, #0x638
   11a1c:	add	x0, x0, #0xf00
   11a20:	mov	x4, #0x0                   	// #0
   11a24:	mov	x3, #0x0                   	// #0
   11a28:	mov	w1, #0xe3                  	// #227
   11a2c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000011a30 <_ZnamRKSt9nothrow_t@@Base>:
   11a30:	sub	sp, sp, #0x860
   11a34:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11a38:	stp	x29, x30, [sp]
   11a3c:	mov	x29, sp
   11a40:	ldr	x1, [x1, #4048]
   11a44:	stp	x19, x20, [sp, #16]
   11a48:	mov	x20, x0
   11a4c:	stp	x21, x22, [sp, #32]
   11a50:	ldrb	w0, [x1]
   11a54:	stp	x23, x24, [sp, #48]
   11a58:	cbnz	w0, 11b00 <_ZnamRKSt9nothrow_t@@Base+0xd0>
   11a5c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11a60:	ldr	x0, [x0, #3592]
   11a64:	ldrb	w0, [x0]
   11a68:	cbz	w0, 11ae8 <_ZnamRKSt9nothrow_t@@Base+0xb8>
   11a6c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11a70:	add	x21, x29, #0x48
   11a74:	add	x0, x21, #0x10
   11a78:	str	x0, [x29, #72]
   11a7c:	ldr	x19, [x19, #4040]
   11a80:	str	xzr, [x29, #80]
   11a84:	str	xzr, [x29, #2136]
   11a88:	mov	x24, x29
   11a8c:	ldrsw	x23, [x19, #36]
   11a90:	bl	248d0 <OnPrint@@Base+0x1f68>
   11a94:	ldrb	w22, [x19, #34]
   11a98:	mov	x19, x0
   11a9c:	cbnz	w22, 11af0 <_ZnamRKSt9nothrow_t@@Base+0xc0>
   11aa0:	mov	x6, #0x0                   	// #0
   11aa4:	mov	x5, #0x0                   	// #0
   11aa8:	mov	w7, w22
   11aac:	mov	x3, x24
   11ab0:	mov	x2, x19
   11ab4:	mov	x4, #0x0                   	// #0
   11ab8:	mov	w1, w23
   11abc:	mov	x0, x21
   11ac0:	bl	24fe8 <OnPrint@@Base+0x2680>
   11ac4:	mov	x1, x21
   11ac8:	mov	x0, x20
   11acc:	bl	cc98 <__sanitizer_get_allocated_size@@Base+0xc88>
   11ad0:	ldp	x29, x30, [sp]
   11ad4:	ldp	x19, x20, [sp, #16]
   11ad8:	ldp	x21, x22, [sp, #32]
   11adc:	ldp	x23, x24, [sp, #48]
   11ae0:	add	sp, sp, #0x860
   11ae4:	ret
   11ae8:	bl	6b40 <__lsan_init@plt>
   11aec:	b	11a6c <_ZnamRKSt9nothrow_t@@Base+0x3c>
   11af0:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11af4:	cbz	x0, 11aa0 <_ZnamRKSt9nothrow_t@@Base+0x70>
   11af8:	ldp	x6, x5, [x0, #144]
   11afc:	b	11aa8 <_ZnamRKSt9nothrow_t@@Base+0x78>
   11b00:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11b04:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11b08:	add	x2, x2, #0x638
   11b0c:	add	x0, x0, #0xf00
   11b10:	mov	x4, #0x0                   	// #0
   11b14:	mov	x3, #0x0                   	// #0
   11b18:	mov	w1, #0xe6                  	// #230
   11b1c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000011b20 <_ZnwmSt11align_val_t@@Base>:
   11b20:	sub	sp, sp, #0x870
   11b24:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11b28:	stp	x29, x30, [sp]
   11b2c:	mov	x29, sp
   11b30:	ldr	x2, [x2, #4048]
   11b34:	stp	x19, x20, [sp, #16]
   11b38:	mov	x20, x0
   11b3c:	stp	x21, x22, [sp, #32]
   11b40:	ldrb	w0, [x2]
   11b44:	stp	x23, x24, [sp, #48]
   11b48:	str	x25, [sp, #64]
   11b4c:	cbnz	w0, 11c04 <_ZnwmSt11align_val_t@@Base+0xe4>
   11b50:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11b54:	mov	x21, x1
   11b58:	ldr	x0, [x0, #3592]
   11b5c:	ldrb	w0, [x0]
   11b60:	cbz	w0, 11bec <_ZnwmSt11align_val_t@@Base+0xcc>
   11b64:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11b68:	add	x22, x29, #0x58
   11b6c:	add	x0, x22, #0x10
   11b70:	str	x0, [x29, #88]
   11b74:	ldr	x19, [x19, #4040]
   11b78:	str	xzr, [x29, #96]
   11b7c:	str	xzr, [x29, #2152]
   11b80:	mov	x25, x29
   11b84:	ldrsw	x24, [x19, #36]
   11b88:	bl	248d0 <OnPrint@@Base+0x1f68>
   11b8c:	ldrb	w23, [x19, #34]
   11b90:	mov	x19, x0
   11b94:	cbnz	w23, 11bf4 <_ZnwmSt11align_val_t@@Base+0xd4>
   11b98:	mov	x6, #0x0                   	// #0
   11b9c:	mov	x5, #0x0                   	// #0
   11ba0:	mov	w7, w23
   11ba4:	mov	x3, x25
   11ba8:	mov	x4, #0x0                   	// #0
   11bac:	mov	x2, x19
   11bb0:	mov	w1, w24
   11bb4:	mov	x0, x22
   11bb8:	bl	24fe8 <OnPrint@@Base+0x2680>
   11bbc:	mov	x2, x22
   11bc0:	mov	x1, x20
   11bc4:	mov	x0, x21
   11bc8:	bl	d588 <__sanitizer_get_allocated_size@@Base+0x1578>
   11bcc:	cbz	x0, 11c24 <_ZnwmSt11align_val_t@@Base+0x104>
   11bd0:	ldp	x29, x30, [sp]
   11bd4:	ldp	x19, x20, [sp, #16]
   11bd8:	ldp	x21, x22, [sp, #32]
   11bdc:	ldp	x23, x24, [sp, #48]
   11be0:	ldr	x25, [sp, #64]
   11be4:	add	sp, sp, #0x870
   11be8:	ret
   11bec:	bl	6b40 <__lsan_init@plt>
   11bf0:	b	11b64 <_ZnwmSt11align_val_t@@Base+0x44>
   11bf4:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11bf8:	cbz	x0, 11b98 <_ZnwmSt11align_val_t@@Base+0x78>
   11bfc:	ldp	x6, x5, [x0, #144]
   11c00:	b	11ba0 <_ZnwmSt11align_val_t@@Base+0x80>
   11c04:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11c08:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11c0c:	add	x2, x2, #0x638
   11c10:	add	x0, x0, #0xf00
   11c14:	mov	x4, #0x0                   	// #0
   11c18:	mov	x3, #0x0                   	// #0
   11c1c:	mov	w1, #0xe9                  	// #233
   11c20:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11c24:	mov	x1, x22
   11c28:	mov	x0, x20
   11c2c:	bl	15668 <__sancov_default_options@@Base+0x2b98>

0000000000011c30 <_ZnamSt11align_val_t@@Base>:
   11c30:	sub	sp, sp, #0x870
   11c34:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11c38:	stp	x29, x30, [sp]
   11c3c:	mov	x29, sp
   11c40:	ldr	x2, [x2, #4048]
   11c44:	stp	x19, x20, [sp, #16]
   11c48:	mov	x20, x0
   11c4c:	stp	x21, x22, [sp, #32]
   11c50:	ldrb	w0, [x2]
   11c54:	stp	x23, x24, [sp, #48]
   11c58:	str	x25, [sp, #64]
   11c5c:	cbnz	w0, 11d14 <_ZnamSt11align_val_t@@Base+0xe4>
   11c60:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11c64:	mov	x21, x1
   11c68:	ldr	x0, [x0, #3592]
   11c6c:	ldrb	w0, [x0]
   11c70:	cbz	w0, 11cfc <_ZnamSt11align_val_t@@Base+0xcc>
   11c74:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11c78:	add	x22, x29, #0x58
   11c7c:	add	x0, x22, #0x10
   11c80:	str	x0, [x29, #88]
   11c84:	ldr	x19, [x19, #4040]
   11c88:	str	xzr, [x29, #96]
   11c8c:	str	xzr, [x29, #2152]
   11c90:	mov	x25, x29
   11c94:	ldrsw	x24, [x19, #36]
   11c98:	bl	248d0 <OnPrint@@Base+0x1f68>
   11c9c:	ldrb	w23, [x19, #34]
   11ca0:	mov	x19, x0
   11ca4:	cbnz	w23, 11d04 <_ZnamSt11align_val_t@@Base+0xd4>
   11ca8:	mov	x6, #0x0                   	// #0
   11cac:	mov	x5, #0x0                   	// #0
   11cb0:	mov	w7, w23
   11cb4:	mov	x3, x25
   11cb8:	mov	x4, #0x0                   	// #0
   11cbc:	mov	x2, x19
   11cc0:	mov	w1, w24
   11cc4:	mov	x0, x22
   11cc8:	bl	24fe8 <OnPrint@@Base+0x2680>
   11ccc:	mov	x2, x22
   11cd0:	mov	x1, x20
   11cd4:	mov	x0, x21
   11cd8:	bl	d588 <__sanitizer_get_allocated_size@@Base+0x1578>
   11cdc:	cbz	x0, 11d34 <_ZnamSt11align_val_t@@Base+0x104>
   11ce0:	ldp	x29, x30, [sp]
   11ce4:	ldp	x19, x20, [sp, #16]
   11ce8:	ldp	x21, x22, [sp, #32]
   11cec:	ldp	x23, x24, [sp, #48]
   11cf0:	ldr	x25, [sp, #64]
   11cf4:	add	sp, sp, #0x870
   11cf8:	ret
   11cfc:	bl	6b40 <__lsan_init@plt>
   11d00:	b	11c74 <_ZnamSt11align_val_t@@Base+0x44>
   11d04:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11d08:	cbz	x0, 11ca8 <_ZnamSt11align_val_t@@Base+0x78>
   11d0c:	ldp	x6, x5, [x0, #144]
   11d10:	b	11cb0 <_ZnamSt11align_val_t@@Base+0x80>
   11d14:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11d18:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11d1c:	add	x2, x2, #0x638
   11d20:	add	x0, x0, #0xf00
   11d24:	mov	x4, #0x0                   	// #0
   11d28:	mov	x3, #0x0                   	// #0
   11d2c:	mov	w1, #0xec                  	// #236
   11d30:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11d34:	mov	x1, x22
   11d38:	mov	x0, x20
   11d3c:	bl	15668 <__sancov_default_options@@Base+0x2b98>

0000000000011d40 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base>:
   11d40:	sub	sp, sp, #0x870
   11d44:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11d48:	stp	x29, x30, [sp]
   11d4c:	mov	x29, sp
   11d50:	ldr	x2, [x2, #4048]
   11d54:	stp	x21, x22, [sp, #32]
   11d58:	mov	x21, x0
   11d5c:	stp	x19, x20, [sp, #16]
   11d60:	ldrb	w0, [x2]
   11d64:	stp	x23, x24, [sp, #48]
   11d68:	str	x25, [sp, #64]
   11d6c:	cbnz	w0, 11e20 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xe0>
   11d70:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11d74:	mov	x20, x1
   11d78:	ldr	x0, [x0, #3592]
   11d7c:	ldrb	w0, [x0]
   11d80:	cbz	w0, 11e08 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xc8>
   11d84:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11d88:	add	x22, x29, #0x58
   11d8c:	add	x0, x22, #0x10
   11d90:	str	x0, [x29, #88]
   11d94:	ldr	x19, [x19, #4040]
   11d98:	str	xzr, [x29, #96]
   11d9c:	str	xzr, [x29, #2152]
   11da0:	mov	x25, x29
   11da4:	ldrsw	x24, [x19, #36]
   11da8:	bl	248d0 <OnPrint@@Base+0x1f68>
   11dac:	ldrb	w23, [x19, #34]
   11db0:	mov	x19, x0
   11db4:	cbnz	w23, 11e10 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xd0>
   11db8:	mov	x6, #0x0                   	// #0
   11dbc:	mov	x5, #0x0                   	// #0
   11dc0:	mov	w7, w23
   11dc4:	mov	x3, x25
   11dc8:	mov	x4, #0x0                   	// #0
   11dcc:	mov	x2, x19
   11dd0:	mov	w1, w24
   11dd4:	mov	x0, x22
   11dd8:	bl	24fe8 <OnPrint@@Base+0x2680>
   11ddc:	mov	x2, x22
   11de0:	mov	x1, x21
   11de4:	mov	x0, x20
   11de8:	bl	d588 <__sanitizer_get_allocated_size@@Base+0x1578>
   11dec:	ldp	x29, x30, [sp]
   11df0:	ldp	x19, x20, [sp, #16]
   11df4:	ldp	x21, x22, [sp, #32]
   11df8:	ldp	x23, x24, [sp, #48]
   11dfc:	ldr	x25, [sp, #64]
   11e00:	add	sp, sp, #0x870
   11e04:	ret
   11e08:	bl	6b40 <__lsan_init@plt>
   11e0c:	b	11d84 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x44>
   11e10:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11e14:	cbz	x0, 11db8 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x78>
   11e18:	ldp	x6, x5, [x0, #144]
   11e1c:	b	11dc0 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x80>
   11e20:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11e24:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11e28:	add	x2, x2, #0x638
   11e2c:	add	x0, x0, #0xf00
   11e30:	mov	x4, #0x0                   	// #0
   11e34:	mov	x3, #0x0                   	// #0
   11e38:	mov	w1, #0xef                  	// #239
   11e3c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000011e40 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base>:
   11e40:	sub	sp, sp, #0x870
   11e44:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11e48:	stp	x29, x30, [sp]
   11e4c:	mov	x29, sp
   11e50:	ldr	x2, [x2, #4048]
   11e54:	stp	x21, x22, [sp, #32]
   11e58:	mov	x21, x0
   11e5c:	stp	x19, x20, [sp, #16]
   11e60:	ldrb	w0, [x2]
   11e64:	stp	x23, x24, [sp, #48]
   11e68:	str	x25, [sp, #64]
   11e6c:	cbnz	w0, 11f20 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xe0>
   11e70:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11e74:	mov	x20, x1
   11e78:	ldr	x0, [x0, #3592]
   11e7c:	ldrb	w0, [x0]
   11e80:	cbz	w0, 11f08 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xc8>
   11e84:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11e88:	add	x22, x29, #0x58
   11e8c:	add	x0, x22, #0x10
   11e90:	str	x0, [x29, #88]
   11e94:	ldr	x19, [x19, #4040]
   11e98:	str	xzr, [x29, #96]
   11e9c:	str	xzr, [x29, #2152]
   11ea0:	mov	x25, x29
   11ea4:	ldrsw	x24, [x19, #36]
   11ea8:	bl	248d0 <OnPrint@@Base+0x1f68>
   11eac:	ldrb	w23, [x19, #34]
   11eb0:	mov	x19, x0
   11eb4:	cbnz	w23, 11f10 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xd0>
   11eb8:	mov	x6, #0x0                   	// #0
   11ebc:	mov	x5, #0x0                   	// #0
   11ec0:	mov	w7, w23
   11ec4:	mov	x3, x25
   11ec8:	mov	x4, #0x0                   	// #0
   11ecc:	mov	x2, x19
   11ed0:	mov	w1, w24
   11ed4:	mov	x0, x22
   11ed8:	bl	24fe8 <OnPrint@@Base+0x2680>
   11edc:	mov	x2, x22
   11ee0:	mov	x1, x21
   11ee4:	mov	x0, x20
   11ee8:	bl	d588 <__sanitizer_get_allocated_size@@Base+0x1578>
   11eec:	ldp	x29, x30, [sp]
   11ef0:	ldp	x19, x20, [sp, #16]
   11ef4:	ldp	x21, x22, [sp, #32]
   11ef8:	ldp	x23, x24, [sp, #48]
   11efc:	ldr	x25, [sp, #64]
   11f00:	add	sp, sp, #0x870
   11f04:	ret
   11f08:	bl	6b40 <__lsan_init@plt>
   11f0c:	b	11e84 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x44>
   11f10:	bl	128a8 <_ZdaPvmSt11align_val_t@@Base+0x548>
   11f14:	cbz	x0, 11eb8 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x78>
   11f18:	ldp	x6, x5, [x0, #144]
   11f1c:	b	11ec0 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x80>
   11f20:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11f24:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11f28:	add	x2, x2, #0x638
   11f2c:	add	x0, x0, #0xf00
   11f30:	mov	x4, #0x0                   	// #0
   11f34:	mov	x3, #0x0                   	// #0
   11f38:	mov	w1, #0xf2                  	// #242
   11f3c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000011f40 <_ZdlPv@@Base>:
   11f40:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11f44:	str	x30, [sp, #-32]!
   11f48:	ldr	x1, [x1, #4048]
   11f4c:	ldrb	w1, [x1]
   11f50:	cbnz	w1, 11f80 <_ZdlPv@@Base+0x40>
   11f54:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11f58:	ldr	x1, [x1, #3592]
   11f5c:	ldrb	w1, [x1]
   11f60:	cbz	w1, 11f6c <_ZdlPv@@Base+0x2c>
   11f64:	ldr	x30, [sp], #32
   11f68:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   11f6c:	str	x0, [sp, #24]
   11f70:	bl	6b40 <__lsan_init@plt>
   11f74:	ldr	x0, [sp, #24]
   11f78:	ldr	x30, [sp], #32
   11f7c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   11f80:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11f84:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11f88:	add	x2, x2, #0x638
   11f8c:	add	x0, x0, #0xf00
   11f90:	mov	x4, #0x0                   	// #0
   11f94:	mov	x3, #0x0                   	// #0
   11f98:	mov	w1, #0xf5                  	// #245
   11f9c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000011fa0 <_ZdaPv@@Base>:
   11fa0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11fa4:	str	x30, [sp, #-32]!
   11fa8:	ldr	x1, [x1, #4048]
   11fac:	ldrb	w1, [x1]
   11fb0:	cbnz	w1, 11fe0 <_ZdaPv@@Base+0x40>
   11fb4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11fb8:	ldr	x1, [x1, #3592]
   11fbc:	ldrb	w1, [x1]
   11fc0:	cbz	w1, 11fcc <_ZdaPv@@Base+0x2c>
   11fc4:	ldr	x30, [sp], #32
   11fc8:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   11fcc:	str	x0, [sp, #24]
   11fd0:	bl	6b40 <__lsan_init@plt>
   11fd4:	ldr	x0, [sp, #24]
   11fd8:	ldr	x30, [sp], #32
   11fdc:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   11fe0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11fe4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   11fe8:	add	x2, x2, #0x638
   11fec:	add	x0, x0, #0xf00
   11ff0:	mov	x4, #0x0                   	// #0
   11ff4:	mov	x3, #0x0                   	// #0
   11ff8:	mov	w1, #0xf7                  	// #247
   11ffc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012000 <_ZdlPvRKSt9nothrow_t@@Base>:
   12000:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12004:	str	x30, [sp, #-32]!
   12008:	ldr	x1, [x1, #4048]
   1200c:	ldrb	w1, [x1]
   12010:	cbnz	w1, 12040 <_ZdlPvRKSt9nothrow_t@@Base+0x40>
   12014:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12018:	ldr	x1, [x1, #3592]
   1201c:	ldrb	w1, [x1]
   12020:	cbz	w1, 1202c <_ZdlPvRKSt9nothrow_t@@Base+0x2c>
   12024:	ldr	x30, [sp], #32
   12028:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1202c:	str	x0, [sp, #24]
   12030:	bl	6b40 <__lsan_init@plt>
   12034:	ldr	x0, [sp, #24]
   12038:	ldr	x30, [sp], #32
   1203c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   12040:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12044:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12048:	add	x2, x2, #0x638
   1204c:	add	x0, x0, #0xf00
   12050:	mov	x4, #0x0                   	// #0
   12054:	mov	x3, #0x0                   	// #0
   12058:	mov	w1, #0xf9                  	// #249
   1205c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012060 <_ZdaPvRKSt9nothrow_t@@Base>:
   12060:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12064:	str	x30, [sp, #-32]!
   12068:	ldr	x1, [x1, #4048]
   1206c:	ldrb	w1, [x1]
   12070:	cbnz	w1, 120a0 <_ZdaPvRKSt9nothrow_t@@Base+0x40>
   12074:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12078:	ldr	x1, [x1, #3592]
   1207c:	ldrb	w1, [x1]
   12080:	cbz	w1, 1208c <_ZdaPvRKSt9nothrow_t@@Base+0x2c>
   12084:	ldr	x30, [sp], #32
   12088:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1208c:	str	x0, [sp, #24]
   12090:	bl	6b40 <__lsan_init@plt>
   12094:	ldr	x0, [sp, #24]
   12098:	ldr	x30, [sp], #32
   1209c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   120a0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   120a4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   120a8:	add	x2, x2, #0x638
   120ac:	add	x0, x0, #0xf00
   120b0:	mov	x4, #0x0                   	// #0
   120b4:	mov	x3, #0x0                   	// #0
   120b8:	mov	w1, #0xfc                  	// #252
   120bc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000120c0 <_ZdlPvm@@Base>:
   120c0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   120c4:	str	x30, [sp, #-32]!
   120c8:	ldr	x1, [x1, #4048]
   120cc:	ldrb	w1, [x1]
   120d0:	cbnz	w1, 12100 <_ZdlPvm@@Base+0x40>
   120d4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   120d8:	ldr	x1, [x1, #3592]
   120dc:	ldrb	w1, [x1]
   120e0:	cbz	w1, 120ec <_ZdlPvm@@Base+0x2c>
   120e4:	ldr	x30, [sp], #32
   120e8:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   120ec:	str	x0, [sp, #24]
   120f0:	bl	6b40 <__lsan_init@plt>
   120f4:	ldr	x0, [sp, #24]
   120f8:	ldr	x30, [sp], #32
   120fc:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   12100:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12104:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12108:	add	x2, x2, #0x638
   1210c:	add	x0, x0, #0xf00
   12110:	mov	x4, #0x0                   	// #0
   12114:	mov	x3, #0x0                   	// #0
   12118:	mov	w1, #0xff                  	// #255
   1211c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012120 <_ZdaPvm@@Base>:
   12120:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12124:	str	x30, [sp, #-32]!
   12128:	ldr	x1, [x1, #4048]
   1212c:	ldrb	w1, [x1]
   12130:	cbnz	w1, 12160 <_ZdaPvm@@Base+0x40>
   12134:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12138:	ldr	x1, [x1, #3592]
   1213c:	ldrb	w1, [x1]
   12140:	cbz	w1, 1214c <_ZdaPvm@@Base+0x2c>
   12144:	ldr	x30, [sp], #32
   12148:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1214c:	str	x0, [sp, #24]
   12150:	bl	6b40 <__lsan_init@plt>
   12154:	ldr	x0, [sp, #24]
   12158:	ldr	x30, [sp], #32
   1215c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   12160:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12164:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12168:	add	x2, x2, #0x638
   1216c:	add	x0, x0, #0xf00
   12170:	mov	x4, #0x0                   	// #0
   12174:	mov	x3, #0x0                   	// #0
   12178:	mov	w1, #0x102                 	// #258
   1217c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012180 <_ZdlPvSt11align_val_t@@Base>:
   12180:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12184:	str	x30, [sp, #-32]!
   12188:	ldr	x1, [x1, #4048]
   1218c:	ldrb	w1, [x1]
   12190:	cbnz	w1, 121c0 <_ZdlPvSt11align_val_t@@Base+0x40>
   12194:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12198:	ldr	x1, [x1, #3592]
   1219c:	ldrb	w1, [x1]
   121a0:	cbz	w1, 121ac <_ZdlPvSt11align_val_t@@Base+0x2c>
   121a4:	ldr	x30, [sp], #32
   121a8:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   121ac:	str	x0, [sp, #24]
   121b0:	bl	6b40 <__lsan_init@plt>
   121b4:	ldr	x0, [sp, #24]
   121b8:	ldr	x30, [sp], #32
   121bc:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   121c0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   121c4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   121c8:	add	x2, x2, #0x638
   121cc:	add	x0, x0, #0xf00
   121d0:	mov	x4, #0x0                   	// #0
   121d4:	mov	x3, #0x0                   	// #0
   121d8:	mov	w1, #0x105                 	// #261
   121dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000121e0 <_ZdaPvSt11align_val_t@@Base>:
   121e0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   121e4:	str	x30, [sp, #-32]!
   121e8:	ldr	x1, [x1, #4048]
   121ec:	ldrb	w1, [x1]
   121f0:	cbnz	w1, 12220 <_ZdaPvSt11align_val_t@@Base+0x40>
   121f4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   121f8:	ldr	x1, [x1, #3592]
   121fc:	ldrb	w1, [x1]
   12200:	cbz	w1, 1220c <_ZdaPvSt11align_val_t@@Base+0x2c>
   12204:	ldr	x30, [sp], #32
   12208:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1220c:	str	x0, [sp, #24]
   12210:	bl	6b40 <__lsan_init@plt>
   12214:	ldr	x0, [sp, #24]
   12218:	ldr	x30, [sp], #32
   1221c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   12220:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12224:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12228:	add	x2, x2, #0x638
   1222c:	add	x0, x0, #0xf00
   12230:	mov	x4, #0x0                   	// #0
   12234:	mov	x3, #0x0                   	// #0
   12238:	mov	w1, #0x108                 	// #264
   1223c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012240 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base>:
   12240:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12244:	str	x30, [sp, #-32]!
   12248:	ldr	x1, [x1, #4048]
   1224c:	ldrb	w1, [x1]
   12250:	cbnz	w1, 12280 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x40>
   12254:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12258:	ldr	x1, [x1, #3592]
   1225c:	ldrb	w1, [x1]
   12260:	cbz	w1, 1226c <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x2c>
   12264:	ldr	x30, [sp], #32
   12268:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1226c:	str	x0, [sp, #24]
   12270:	bl	6b40 <__lsan_init@plt>
   12274:	ldr	x0, [sp, #24]
   12278:	ldr	x30, [sp], #32
   1227c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   12280:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12284:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12288:	add	x2, x2, #0x638
   1228c:	add	x0, x0, #0xf00
   12290:	mov	x4, #0x0                   	// #0
   12294:	mov	x3, #0x0                   	// #0
   12298:	mov	w1, #0x10b                 	// #267
   1229c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000122a0 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base>:
   122a0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   122a4:	str	x30, [sp, #-32]!
   122a8:	ldr	x1, [x1, #4048]
   122ac:	ldrb	w1, [x1]
   122b0:	cbnz	w1, 122e0 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x40>
   122b4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   122b8:	ldr	x1, [x1, #3592]
   122bc:	ldrb	w1, [x1]
   122c0:	cbz	w1, 122cc <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x2c>
   122c4:	ldr	x30, [sp], #32
   122c8:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   122cc:	str	x0, [sp, #24]
   122d0:	bl	6b40 <__lsan_init@plt>
   122d4:	ldr	x0, [sp, #24]
   122d8:	ldr	x30, [sp], #32
   122dc:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   122e0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   122e4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   122e8:	add	x2, x2, #0x638
   122ec:	add	x0, x0, #0xf00
   122f0:	mov	x4, #0x0                   	// #0
   122f4:	mov	x3, #0x0                   	// #0
   122f8:	mov	w1, #0x10e                 	// #270
   122fc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012300 <_ZdlPvmSt11align_val_t@@Base>:
   12300:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12304:	str	x30, [sp, #-32]!
   12308:	ldr	x1, [x1, #4048]
   1230c:	ldrb	w1, [x1]
   12310:	cbnz	w1, 12340 <_ZdlPvmSt11align_val_t@@Base+0x40>
   12314:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12318:	ldr	x1, [x1, #3592]
   1231c:	ldrb	w1, [x1]
   12320:	cbz	w1, 1232c <_ZdlPvmSt11align_val_t@@Base+0x2c>
   12324:	ldr	x30, [sp], #32
   12328:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1232c:	str	x0, [sp, #24]
   12330:	bl	6b40 <__lsan_init@plt>
   12334:	ldr	x0, [sp, #24]
   12338:	ldr	x30, [sp], #32
   1233c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   12340:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12344:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12348:	add	x2, x2, #0x638
   1234c:	add	x0, x0, #0xf00
   12350:	mov	x4, #0x0                   	// #0
   12354:	mov	x3, #0x0                   	// #0
   12358:	mov	w1, #0x111                 	// #273
   1235c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000012360 <_ZdaPvmSt11align_val_t@@Base>:
   12360:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12364:	str	x30, [sp, #-32]!
   12368:	ldr	x1, [x1, #4048]
   1236c:	ldrb	w1, [x1]
   12370:	cbnz	w1, 123a0 <_ZdaPvmSt11align_val_t@@Base+0x40>
   12374:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12378:	ldr	x1, [x1, #3592]
   1237c:	ldrb	w1, [x1]
   12380:	cbz	w1, 1238c <_ZdaPvmSt11align_val_t@@Base+0x2c>
   12384:	ldr	x30, [sp], #32
   12388:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   1238c:	str	x0, [sp, #24]
   12390:	bl	6b40 <__lsan_init@plt>
   12394:	ldr	x0, [sp, #24]
   12398:	ldr	x30, [sp], #32
   1239c:	b	dc28 <__sancov_lowest_stack@@Base+0x3f8>
   123a0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   123a4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   123a8:	add	x2, x2, #0x638
   123ac:	add	x0, x0, #0xf00
   123b0:	mov	x4, #0x0                   	// #0
   123b4:	mov	x3, #0x0                   	// #0
   123b8:	mov	w1, #0x114                 	// #276
   123bc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   123c0:	adrp	x3, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   123c4:	ldr	x3, [x3, #3928]
   123c8:	mov	x16, x3
   123cc:	br	x16
   123d0:	stp	x19, x30, [sp, #-16]!
   123d4:	adrp	x19, f0000 <__asan_cplus_demangle_operators@@Base+0x83be0>
   123d8:	add	x19, x19, #0xf40
   123dc:	ldrb	w0, [x19, #56]
   123e0:	cbnz	w0, 12668 <_ZdaPvmSt11align_val_t@@Base+0x308>
   123e4:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   123e8:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   123ec:	mov	w4, #0x1                   	// #1
   123f0:	add	x1, x19, #0x10
   123f4:	ldr	x3, [x3, #3984]
   123f8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   123fc:	ldr	x2, [x2, #3440]
   12400:	add	x0, x0, #0x18
   12404:	strb	w4, [x19, #56]
   12408:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1240c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12410:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12414:	add	x1, x19, #0x18
   12418:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1241c:	ldr	x3, [x3, #3720]
   12420:	add	x0, x0, #0x20
   12424:	ldr	x2, [x2, #3800]
   12428:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1242c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12430:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12434:	add	x1, x19, #0x40
   12438:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1243c:	ldr	x3, [x3, #3640]
   12440:	add	x0, x0, #0x30
   12444:	ldr	x2, [x2, #3752]
   12448:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1244c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12450:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12454:	add	x1, x19, #0x48
   12458:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1245c:	ldr	x3, [x3, #3848]
   12460:	add	x0, x0, #0x38
   12464:	ldr	x2, [x2, #3464]
   12468:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1246c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12470:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12474:	add	x1, x19, #0x50
   12478:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1247c:	ldr	x3, [x3, #3944]
   12480:	add	x0, x0, #0x40
   12484:	ldr	x2, [x2, #4056]
   12488:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1248c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12490:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12494:	add	x1, x19, #0x58
   12498:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1249c:	ldr	x3, [x3, #3864]
   124a0:	add	x0, x0, #0x48
   124a4:	ldr	x2, [x2, #3768]
   124a8:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   124ac:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124b0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124b4:	add	x1, x19, #0x60
   124b8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   124bc:	ldr	x3, [x3, #3960]
   124c0:	add	x0, x0, #0x50
   124c4:	ldr	x2, [x2, #3904]
   124c8:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   124cc:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124d0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124d4:	add	x1, x19, #0x68
   124d8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   124dc:	ldr	x3, [x3, #3576]
   124e0:	add	x0, x0, #0x58
   124e4:	ldr	x2, [x2, #3416]
   124e8:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   124ec:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124f0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124f4:	add	x1, x19, #0x70
   124f8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   124fc:	ldr	x3, [x3, #3448]
   12500:	add	x0, x0, #0x68
   12504:	ldr	x2, [x2, #3872]
   12508:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1250c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12510:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12514:	add	x1, x19, #0x78
   12518:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1251c:	ldr	x3, [x3, #3952]
   12520:	add	x0, x0, #0x78
   12524:	ldr	x2, [x2, #3896]
   12528:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1252c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12530:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12534:	add	x1, x19, #0x80
   12538:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1253c:	ldr	x3, [x3, #3792]
   12540:	add	x0, x0, #0x88
   12544:	ldr	x2, [x2, #3656]
   12548:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1254c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12550:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12554:	add	x1, x19, #0x88
   12558:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1255c:	ldr	x3, [x3, #3624]
   12560:	add	x0, x0, #0x98
   12564:	ldr	x2, [x2, #3912]
   12568:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1256c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12570:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12574:	add	x1, x19, #0x90
   12578:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1257c:	ldr	x3, [x3, #3824]
   12580:	add	x0, x0, #0xa0
   12584:	ldr	x2, [x2, #3888]
   12588:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1258c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12590:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12594:	add	x1, x19, #0x98
   12598:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1259c:	ldr	x3, [x3, #3776]
   125a0:	add	x0, x0, #0xa8
   125a4:	ldr	x2, [x2, #3992]
   125a8:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   125ac:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   125b0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   125b4:	add	x1, x19, #0xa0
   125b8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   125bc:	ldr	x3, [x3, #3480]
   125c0:	add	x0, x0, #0xc0
   125c4:	ldr	x2, [x2, #3632]
   125c8:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   125cc:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   125d0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   125d4:	add	x1, x19, #0xa8
   125d8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   125dc:	ldr	x3, [x3, #3688]
   125e0:	add	x0, x0, #0xd0
   125e4:	ldr	x2, [x2, #3600]
   125e8:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   125ec:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   125f0:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   125f4:	add	x1, x19, #0x30
   125f8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   125fc:	ldr	x3, [x3, #3520]
   12600:	add	x0, x0, #0xd8
   12604:	ldr	x2, [x2, #3504]
   12608:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1260c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12610:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12614:	mov	x1, x19
   12618:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1261c:	ldr	x3, [x3, #3968]
   12620:	add	x0, x0, #0xe8
   12624:	ldr	x2, [x2, #3936]
   12628:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1262c:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12630:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12634:	add	x1, x19, #0x8
   12638:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1263c:	ldr	x3, [x3, #3696]
   12640:	add	x0, x0, #0xf8
   12644:	ldr	x2, [x2, #3608]
   12648:	bl	2e358 <__sanitizer_set_death_callback@@Base+0x1c70>
   1264c:	adrp	x1, 11000 <__interceptor_aligned_alloc@@Base+0x78>
   12650:	add	x0, x19, #0x28
   12654:	add	x1, x1, #0x6e8
   12658:	bl	6b80 <pthread_key_create@plt>
   1265c:	cbnz	w0, 12688 <_ZdaPvmSt11align_val_t@@Base+0x328>
   12660:	ldp	x19, x30, [sp], #16
   12664:	ret
   12668:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1266c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12670:	add	x2, x2, #0xfa8
   12674:	add	x0, x0, #0xfc8
   12678:	mov	x4, #0x0                   	// #0
   1267c:	mov	x3, #0x0                   	// #0
   12680:	mov	w1, #0x4f                  	// #79
   12684:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12688:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1268c:	add	x0, x0, #0x100
   12690:	bl	22d00 <OnPrint@@Base+0x398>
   12694:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   12698:	ldr	x2, [x1]
   1269c:	str	x2, [x0, #144]
   126a0:	ldr	x2, [x1, #48]
   126a4:	ldr	x3, [x1, #8]
   126a8:	str	x3, [x0, #152]
   126ac:	ldr	x3, [x1, #32]
   126b0:	str	x3, [x0, #176]
   126b4:	ldr	x3, [x1, #40]
   126b8:	str	x3, [x0, #184]
   126bc:	ldr	x3, [x1, #16]
   126c0:	str	x3, [x0, #160]
   126c4:	ldr	x1, [x1, #24]
   126c8:	str	x1, [x0, #168]
   126cc:	str	x2, [x0, #192]
   126d0:	ret
   126d4:	nop
   126d8:	ldr	x2, [x0, #40]
   126dc:	cmp	x1, x2
   126e0:	b.eq	126ec <_ZdaPvmSt11align_val_t@@Base+0x38c>  // b.none
   126e4:	mov	w0, #0x0                   	// #0
   126e8:	ret
   126ec:	ldr	w0, [x0, #112]
   126f0:	cmp	w0, #0x0
   126f4:	cset	w0, ne  // ne = any
   126f8:	ret
   126fc:	nop
   12700:	stp	x19, x30, [sp, #-16]!
   12704:	mov	w2, #0x0                   	// #0
   12708:	mov	w19, w0
   1270c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12710:	mov	x0, #0xc8                  	// #200
   12714:	add	x1, x1, #0x130
   12718:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1271c:	mov	w1, w19
   12720:	mov	x19, x0
   12724:	bl	2c848 <__sanitizer_set_death_callback@@Base+0x160>
   12728:	movi	v0.4s, #0x0
   1272c:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   12730:	add	x1, x1, #0xbc8
   12734:	str	x1, [x19]
   12738:	str	xzr, [x19, #192]
   1273c:	mov	x0, x19
   12740:	stp	q0, q0, [x19, #144]
   12744:	str	q0, [x19, #176]
   12748:	ldp	x19, x30, [sp], #16
   1274c:	ret
   12750:	str	x30, [sp, #-16]!
   12754:	bl	dbc0 <__sancov_lowest_stack@@Base+0x390>
   12758:	ldr	x30, [sp], #16
   1275c:	b	2d940 <__sanitizer_set_death_callback@@Base+0x1258>
   12760:	stp	x19, x30, [sp, #-16]!
   12764:	adrp	x19, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12768:	add	x19, x19, #0x40
   1276c:	mov	x0, x19
   12770:	mov	w4, #0x0                   	// #0
   12774:	mov	w3, #0x40                  	// #64
   12778:	mov	w2, #0x2000                	// #8192
   1277c:	adrp	x1, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   12780:	add	x1, x1, #0x700
   12784:	bl	2cb18 <__sanitizer_set_death_callback@@Base+0x430>
   12788:	str	x19, [x19, #208]
   1278c:	ldp	x19, x30, [sp], #16
   12790:	ret
   12794:	nop
   12798:	stp	x19, x30, [sp, #-16]!
   1279c:	mov	x19, x0
   127a0:	bl	2c848 <__sanitizer_set_death_callback@@Base+0x160>
   127a4:	movi	v0.4s, #0x0
   127a8:	adrp	x0, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   127ac:	add	x0, x0, #0xbc8
   127b0:	str	x0, [x19]
   127b4:	str	xzr, [x19, #192]
   127b8:	stp	q0, q0, [x19, #144]
   127bc:	str	q0, [x19, #176]
   127c0:	ldp	x19, x30, [sp], #16
   127c4:	ret
   127c8:	adrp	x5, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   127cc:	mov	w3, w0
   127d0:	mov	x4, #0x0                   	// #0
   127d4:	ldr	x0, [x5, #272]
   127d8:	b	2cc10 <__sanitizer_set_death_callback@@Base+0x528>
   127dc:	nop
   127e0:	stp	x19, x20, [sp, #-128]!
   127e4:	cmp	w0, #0x0
   127e8:	mov	x20, x1
   127ec:	add	x19, sp, #0x48
   127f0:	add	x3, sp, #0x68
   127f4:	mov	x1, x19
   127f8:	add	x4, sp, #0x40
   127fc:	stp	x21, x22, [sp, #16]
   12800:	mov	w22, w0
   12804:	and	w21, w2, #0xff
   12808:	cset	w0, eq  // eq = none
   1280c:	add	x2, sp, #0x38
   12810:	str	x30, [sp, #32]
   12814:	stp	xzr, xzr, [sp, #56]
   12818:	bl	1fa50 <__sanitizer_set_report_fd@@Base+0x6188>
   1281c:	add	x1, x19, #0x18
   12820:	ldp	x5, x4, [sp, #56]
   12824:	add	x0, x19, #0x10
   12828:	ldr	x3, [sp, #72]
   1282c:	ldr	x2, [sp, #104]
   12830:	add	x3, x3, x5
   12834:	str	x3, [sp, #80]
   12838:	add	x2, x2, x4
   1283c:	str	x2, [sp, #112]
   12840:	bl	b350 <__sanitizer_print_stack_trace@@Base+0x1f8>
   12844:	bl	2de60 <__sanitizer_set_death_callback@@Base+0x1778>
   12848:	mov	x5, x0
   1284c:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12850:	mov	x2, x20
   12854:	mov	x4, x19
   12858:	mov	w3, w21
   1285c:	ldr	x0, [x0, #272]
   12860:	mov	w1, w22
   12864:	str	x5, [sp, #120]
   12868:	bl	2d698 <__sanitizer_set_death_callback@@Base+0xfb0>
   1286c:	ldp	x21, x22, [sp, #16]
   12870:	ldr	x30, [sp, #32]
   12874:	ldp	x19, x20, [sp], #128
   12878:	ret
   1287c:	nop
   12880:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12884:	stp	x19, x30, [sp, #-16]!
   12888:	ldr	x19, [x0, #272]
   1288c:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   12890:	mov	w1, w0
   12894:	mov	x0, x19
   12898:	bl	2d460 <__sanitizer_set_death_callback@@Base+0xd78>
   1289c:	ldp	x19, x30, [sp], #16
   128a0:	mov	w0, #0xffffffff            	// #-1
   128a4:	b	b218 <__sanitizer_print_stack_trace@@Base+0xc0>
   128a8:	stp	x19, x30, [sp, #-16]!
   128ac:	adrp	x19, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   128b0:	add	x19, x19, #0x40
   128b4:	ldr	x0, [x19, #208]
   128b8:	cbz	x0, 128e0 <_ZdaPvmSt11align_val_t@@Base+0x580>
   128bc:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   128c0:	cmn	w0, #0x1
   128c4:	b.eq	128e0 <_ZdaPvmSt11align_val_t@@Base+0x580>  // b.none
   128c8:	ldr	x19, [x19, #208]
   128cc:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   128d0:	ldr	x1, [x19, #152]
   128d4:	ldp	x19, x30, [sp], #16
   128d8:	ldr	x0, [x1, w0, uxtw #3]
   128dc:	ret
   128e0:	mov	x0, #0x0                   	// #0
   128e4:	ldp	x19, x30, [sp], #16
   128e8:	ret
   128ec:	nop
   128f0:	adrp	x3, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   128f4:	mov	x2, x0
   128f8:	adrp	x1, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   128fc:	add	x1, x1, #0x6d8
   12900:	ldr	x0, [x3, #272]
   12904:	b	2ce98 <__sanitizer_set_death_callback@@Base+0x7b0>
   12908:	cmn	w0, #0x1
   1290c:	b.eq	12924 <_ZdaPvmSt11align_val_t@@Base+0x5c4>  // b.none
   12910:	mov	w1, w0
   12914:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12918:	mov	x2, #0x0                   	// #0
   1291c:	ldr	x0, [x0, #272]
   12920:	b	2d2e0 <__sanitizer_set_death_callback@@Base+0xbf8>
   12924:	str	x30, [sp, #-16]!
   12928:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1292c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12930:	mov	x4, #0xffffffff            	// #4294967295
   12934:	add	x2, x2, #0x140
   12938:	add	x0, x0, #0x160
   1293c:	mov	x3, x4
   12940:	mov	w1, #0x75                  	// #117
   12944:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12948:	stp	x19, x30, [sp, #-16]!
   1294c:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   12950:	cbz	w0, 1295c <_ZdaPvmSt11align_val_t@@Base+0x5fc>
   12954:	ldp	x19, x30, [sp], #16
   12958:	ret
   1295c:	adrp	x19, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12960:	add	x19, x19, #0x40
   12964:	ldr	x0, [x19, #208]
   12968:	cbz	x0, 12998 <_ZdaPvmSt11align_val_t@@Base+0x638>
   1296c:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   12970:	cmn	w0, #0x1
   12974:	b.eq	12998 <_ZdaPvmSt11align_val_t@@Base+0x638>  // b.none
   12978:	ldr	x19, [x19, #208]
   1297c:	bl	b1f0 <__sanitizer_print_stack_trace@@Base+0x98>
   12980:	ldr	x1, [x19, #152]
   12984:	ldr	x19, [x1, w0, uxtw #3]
   12988:	bl	1dc30 <__sanitizer_set_report_fd@@Base+0x4368>
   1298c:	str	x0, [x19, #32]
   12990:	ldp	x19, x30, [sp], #16
   12994:	ret
   12998:	bl	1dc30 <__sanitizer_set_report_fd@@Base+0x4368>
   1299c:	mov	x0, #0x0                   	// #0
   129a0:	str	xzr, [x0, #32]
   129a4:	brk	#0x3e8
   129a8:	adrp	x8, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   129ac:	mov	x9, x0
   129b0:	stp	x19, x20, [sp, #-64]!
   129b4:	mov	x20, x5
   129b8:	mov	x19, x7
   129bc:	ldr	x0, [x8, #272]
   129c0:	stp	x21, x22, [sp, #16]
   129c4:	mov	x22, x3
   129c8:	mov	x21, x4
   129cc:	stp	x23, x24, [sp, #32]
   129d0:	mov	x24, x1
   129d4:	mov	x23, x2
   129d8:	mov	x1, x9
   129dc:	stp	x25, x30, [sp, #48]
   129e0:	mov	x25, x6
   129e4:	bl	2cfc0 <__sanitizer_set_death_callback@@Base+0x8d8>
   129e8:	cbz	x0, 12a40 <_ZdaPvmSt11align_val_t@@Base+0x6e0>
   129ec:	mov	x8, x0
   129f0:	ldr	x0, [x0, #144]
   129f4:	ldr	x1, [x8, #192]
   129f8:	str	x0, [x24]
   129fc:	mov	w0, #0x1                   	// #1
   12a00:	ldr	x2, [x8, #152]
   12a04:	str	x2, [x23]
   12a08:	ldp	x23, x24, [sp, #32]
   12a0c:	ldr	x2, [x8, #176]
   12a10:	str	x2, [x22]
   12a14:	ldr	x2, [x8, #184]
   12a18:	str	x2, [x21]
   12a1c:	ldp	x21, x22, [sp, #16]
   12a20:	ldr	x2, [x8, #160]
   12a24:	str	x2, [x20]
   12a28:	ldr	x2, [x8, #168]
   12a2c:	str	x2, [x25]
   12a30:	str	x1, [x19]
   12a34:	ldp	x25, x30, [sp, #48]
   12a38:	ldp	x19, x20, [sp], #64
   12a3c:	ret
   12a40:	mov	w0, #0x0                   	// #0
   12a44:	ldp	x21, x22, [sp, #16]
   12a48:	ldp	x23, x24, [sp, #32]
   12a4c:	ldp	x25, x30, [sp, #48]
   12a50:	ldp	x19, x20, [sp], #64
   12a54:	ret
   12a58:	ret
   12a5c:	nop
   12a60:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12a64:	ldr	x0, [x0, #272]
   12a68:	add	x0, x0, #0x18
   12a6c:	b	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   12a70:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12a74:	ldr	x0, [x0, #272]
   12a78:	add	x0, x0, #0x18
   12a7c:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   12a80:	stp	x19, x30, [sp, #-16]!
   12a84:	adrp	x19, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12a88:	add	x19, x19, #0x40
   12a8c:	ldr	x0, [x19, #208]
   12a90:	add	x0, x0, #0x18
   12a94:	bl	1dfc0 <__sanitizer_set_report_fd@@Base+0x46f8>
   12a98:	ldr	x0, [x19, #208]
   12a9c:	ldp	x19, x30, [sp], #16
   12aa0:	ret
   12aa4:	nop
   12aa8:	ret
   12aac:	nop
   12ab0:	ret
   12ab4:	nop
   12ab8:	ret
   12abc:	nop
   12ac0:	ret
   12ac4:	nop
   12ac8:	ret
   12acc:	nop

0000000000012ad0 <__sancov_default_options@@Base>:
   12ad0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   12ad4:	add	x0, x0, #0xb00
   12ad8:	ret
   12adc:	nop
   12ae0:	mov	w1, #0x1                   	// #1
   12ae4:	strh	w1, [x0]
   12ae8:	ret
   12aec:	nop
   12af0:	stp	x19, x20, [sp, #-80]!
   12af4:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12af8:	mov	w1, #0x1                   	// #1
   12afc:	stp	x21, x22, [sp, #16]
   12b00:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12b04:	add	x19, sp, #0x30
   12b08:	add	x22, x0, #0x118
   12b0c:	strh	w1, [x0, #280]
   12b10:	mov	x0, x19
   12b14:	str	x30, [sp, #32]
   12b18:	bl	1b4e0 <__sanitizer_set_report_fd@@Base+0x1c18>
   12b1c:	adrp	x20, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   12b20:	ldr	x21, [x21, #3456]
   12b24:	mov	x1, #0x10                  	// #16
   12b28:	add	x20, x20, #0xb80
   12b2c:	mov	x0, x21
   12b30:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   12b34:	mov	x2, x0
   12b38:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12b3c:	add	x3, x3, #0x190
   12b40:	mov	x0, x19
   12b44:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12b48:	add	x1, x1, #0x1e0
   12b4c:	stp	x20, x22, [x2]
   12b50:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   12b54:	mov	x1, #0x10                  	// #16
   12b58:	mov	x0, x21
   12b5c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   12b60:	mov	x2, x0
   12b64:	add	x4, x22, #0x1
   12b68:	mov	x0, x19
   12b6c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12b70:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12b74:	add	x3, x3, #0x1f0
   12b78:	add	x1, x1, #0x208
   12b7c:	stp	x20, x4, [x2]
   12b80:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   12b84:	bl	6d30 <__sancov_default_options@plt>
   12b88:	mov	x1, x0
   12b8c:	mov	x0, x19
   12b90:	bl	1b290 <__sanitizer_set_report_fd@@Base+0x19c8>
   12b94:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12b98:	add	x0, x0, #0x210
   12b9c:	bl	1dcb8 <__sanitizer_set_report_fd@@Base+0x43f0>
   12ba0:	mov	x1, x0
   12ba4:	mov	x0, x19
   12ba8:	bl	1b290 <__sanitizer_set_report_fd@@Base+0x19c8>
   12bac:	bl	1acf8 <__sanitizer_set_report_fd@@Base+0x1430>
   12bb0:	ldrb	w0, [x22, #1]
   12bb4:	cbnz	w0, 12bc8 <__sancov_default_options@@Base+0xf8>
   12bb8:	ldp	x21, x22, [sp, #16]
   12bbc:	ldr	x30, [sp, #32]
   12bc0:	ldp	x19, x20, [sp], #80
   12bc4:	ret
   12bc8:	mov	x0, x19
   12bcc:	bl	1add8 <__sanitizer_set_report_fd@@Base+0x1510>
   12bd0:	ldp	x21, x22, [sp, #16]
   12bd4:	ldr	x30, [sp, #32]
   12bd8:	ldp	x19, x20, [sp], #80
   12bdc:	ret
   12be0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12be4:	mov	x2, x0
   12be8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12bec:	add	x0, x0, #0x220
   12bf0:	ldr	x1, [x1, #4008]
   12bf4:	adrp	x3, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12bf8:	mov	w4, #0x1                   	// #1
   12bfc:	str	x30, [sp, #-16]!
   12c00:	strb	w4, [x3, #320]
   12c04:	ldr	x1, [x1]
   12c08:	bl	22d00 <OnPrint@@Base+0x398>
   12c0c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   12c10:	stp	x19, x20, [sp, #-32]!
   12c14:	adrp	x19, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12c18:	add	x0, x19, #0x140
   12c1c:	add	x0, x0, #0x8
   12c20:	mov	w2, #0x1                   	// #1
   12c24:	str	x30, [sp, #24]
   12c28:	ldxrb	w1, [x0]
   12c2c:	stxrb	w3, w2, [x0]
   12c30:	cbnz	w3, 12c28 <__sancov_default_options@@Base+0x158>
   12c34:	dmb	ish
   12c38:	tst	w1, #0xff
   12c3c:	b.eq	12c44 <__sancov_default_options@@Base+0x174>  // b.none
   12c40:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   12c44:	add	x0, x19, #0x140
   12c48:	ldrb	w0, [x0, #16]
   12c4c:	tst	w0, #0xff
   12c50:	b.eq	12c6c <__sancov_default_options@@Base+0x19c>  // b.none
   12c54:	dmb	ish
   12c58:	add	x19, x19, #0x140
   12c5c:	strb	wzr, [x19, #8]
   12c60:	ldr	x30, [sp, #24]
   12c64:	ldp	x19, x20, [sp], #32
   12c68:	ret
   12c6c:	adrp	x20, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   12c70:	str	x21, [sp, #16]
   12c74:	add	x21, x20, #0x9c0
   12c78:	mov	x2, #0x80000               	// #524288
   12c7c:	mov	x0, x21
   12c80:	add	x21, x21, #0x80, lsl #12
   12c84:	mov	w1, #0x0                   	// #0
   12c88:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   12c8c:	mov	x2, #0xd80                 	// #3456
   12c90:	mov	w1, #0x0                   	// #0
   12c94:	strb	wzr, [x21]
   12c98:	adrp	x0, 180000 <__asan_cplus_demangle_operators@@Base+0x113be0>
   12c9c:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12ca0:	add	x0, x0, #0xa00
   12ca4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   12ca8:	mov	x2, #0x248                 	// #584
   12cac:	adrp	x0, 181000 <__asan_cplus_demangle_operators@@Base+0x114be0>
   12cb0:	movk	x2, #0x4, lsl #16
   12cb4:	add	x0, x0, #0x780
   12cb8:	mov	w1, #0x0                   	// #0
   12cbc:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   12cc0:	ldr	x21, [x21, #4000]
   12cc4:	ldr	x3, [x21]
   12cc8:	cbz	x3, 12d34 <__sancov_default_options@@Base+0x264>
   12ccc:	add	x20, x20, #0x9c0
   12cd0:	adrp	x4, 181000 <__asan_cplus_demangle_operators@@Base+0x114be0>
   12cd4:	add	x5, x20, #0x80, lsl #12
   12cd8:	add	x4, x4, #0x790
   12cdc:	add	x20, x20, #0xc0, lsl #12
   12ce0:	adrp	x21, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12ce4:	mov	x2, #0x28                  	// #40
   12ce8:	add	x0, x21, #0x9c8
   12cec:	str	x3, [x5, #3520]
   12cf0:	add	x21, x21, #0x9c8
   12cf4:	str	x4, [x5, #3528]
   12cf8:	mov	w1, #0x0                   	// #0
   12cfc:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   12d00:	str	x21, [x20, #4104]
   12d04:	str	x21, [x20, #4112]
   12d08:	dmb	ish
   12d0c:	add	x0, x19, #0x140
   12d10:	mov	w1, #0x1                   	// #1
   12d14:	strb	w1, [x0, #16]
   12d18:	ldr	x21, [sp, #16]
   12d1c:	dmb	ish
   12d20:	add	x19, x19, #0x140
   12d24:	strb	wzr, [x19, #8]
   12d28:	ldr	x30, [sp, #24]
   12d2c:	ldp	x19, x20, [sp], #32
   12d30:	ret
   12d34:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   12d38:	mov	x3, x0
   12d3c:	str	x0, [x21]
   12d40:	b	12ccc <__sancov_default_options@@Base+0x1fc>
   12d44:	nop
   12d48:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12d4c:	add	x0, x0, #0x140
   12d50:	ldrb	w0, [x0, #16]
   12d54:	dmb	ish
   12d58:	and	w0, w0, #0xff
   12d5c:	cbz	w0, 12d6c <__sancov_default_options@@Base+0x29c>
   12d60:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   12d64:	add	x0, x0, #0x9c0
   12d68:	ret
   12d6c:	str	x30, [sp, #-16]!
   12d70:	bl	12c10 <__sancov_default_options@@Base+0x140>
   12d74:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   12d78:	add	x0, x0, #0x9c0
   12d7c:	ldr	x30, [sp], #16
   12d80:	ret
   12d84:	nop
   12d88:	adrp	x2, 6d000 <_Unwind_Backtrace@GCC_3.3>
   12d8c:	stp	x19, x20, [sp, #-32]!
   12d90:	mov	x20, x0
   12d94:	ldr	x0, [x2, #944]
   12d98:	str	x30, [sp, #24]
   12d9c:	sub	x19, x0, #0x1
   12da0:	tst	x0, x19
   12da4:	b.ne	12e4c <__sancov_default_options@@Base+0x37c>  // b.any
   12da8:	ldp	x3, x2, [x20]
   12dac:	add	x1, x1, x19
   12db0:	neg	x19, x0
   12db4:	and	x19, x1, x19
   12db8:	sub	x0, x3, x2
   12dbc:	cmp	x0, x19
   12dc0:	b.ge	12e28 <__sancov_default_options@@Base+0x358>  // b.tcont
   12dc4:	str	x21, [sp, #16]
   12dc8:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12dcc:	ldr	x21, [x21, #4000]
   12dd0:	ldr	x0, [x21]
   12dd4:	cbz	x0, 12e40 <__sancov_default_options@@Base+0x370>
   12dd8:	cmp	x19, x0
   12ddc:	mov	w2, #0x0                   	// #0
   12de0:	csel	x21, x19, x0, cs  // cs = hs, nlast
   12de4:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12de8:	mov	x0, x21
   12dec:	add	x1, x1, #0x270
   12df0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   12df4:	add	x1, x0, x21
   12df8:	adrp	x3, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12dfc:	stp	x1, x0, [x20]
   12e00:	mov	x2, x0
   12e04:	ldr	x3, [x3, #344]
   12e08:	cbz	x3, 12e18 <__sancov_default_options@@Base+0x348>
   12e0c:	mov	x1, x21
   12e10:	blr	x3
   12e14:	ldp	x1, x2, [x20]
   12e18:	sub	x1, x1, x2
   12e1c:	cmp	x19, x1
   12e20:	b.gt	12e60 <__sancov_default_options@@Base+0x390>
   12e24:	ldr	x21, [sp, #16]
   12e28:	add	x19, x2, x19
   12e2c:	ldr	x30, [sp, #24]
   12e30:	str	x19, [x20, #8]
   12e34:	mov	x0, x2
   12e38:	ldp	x19, x20, [sp], #32
   12e3c:	ret
   12e40:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   12e44:	str	x0, [x21]
   12e48:	b	12dd8 <__sancov_default_options@@Base+0x308>
   12e4c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   12e50:	add	x0, x0, #0x6e8
   12e54:	str	x21, [sp, #16]
   12e58:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   12e5c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   12e60:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12e64:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12e68:	add	x2, x2, #0x280
   12e6c:	add	x0, x0, #0x2c0
   12e70:	mov	x4, #0x0                   	// #0
   12e74:	mov	x3, #0x0                   	// #0
   12e78:	mov	w1, #0xd4                  	// #212
   12e7c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12e80:	sub	x1, x0, #0x1
   12e84:	tst	x1, x0
   12e88:	b.ne	12ea4 <__sancov_default_options@@Base+0x3d4>  // b.any
   12e8c:	adrp	x2, 6d000 <_Unwind_Backtrace@GCC_3.3>
   12e90:	ldr	x1, [x2, #944]
   12e94:	cmp	x1, x0
   12e98:	csel	x0, x1, x0, cs  // cs = hs, nlast
   12e9c:	str	x0, [x2, #944]
   12ea0:	ret
   12ea4:	str	x30, [sp, #-16]!
   12ea8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   12eac:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12eb0:	add	x2, x2, #0xca0
   12eb4:	add	x0, x0, #0x2c0
   12eb8:	mov	x4, #0x0                   	// #0
   12ebc:	mov	x3, #0x0                   	// #0
   12ec0:	mov	w1, #0xdb                  	// #219
   12ec4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12ec8:	adrp	x1, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12ecc:	str	x0, [x1, #344]
   12ed0:	ret
   12ed4:	nop
   12ed8:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12edc:	ldrb	w0, [x0, #320]
   12ee0:	tst	w0, #0xff
   12ee4:	cset	w0, ne  // ne = any
   12ee8:	ret
   12eec:	nop
   12ef0:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12ef4:	mov	w1, #0x1                   	// #1
   12ef8:	strb	w1, [x0, #320]
   12efc:	ret
   12f00:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12f04:	add	x0, x0, #0x140
   12f08:	ldrb	w0, [x0, #32]
   12f0c:	tst	w0, #0xff
   12f10:	cset	w0, ne  // ne = any
   12f14:	ret
   12f18:	adrp	x1, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12f1c:	add	x1, x1, #0x140
   12f20:	and	w0, w0, #0xff
   12f24:	strb	w0, [x1, #32]
   12f28:	ret
   12f2c:	nop
   12f30:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   12f34:	add	x0, x0, #0x308
   12f38:	b	22d00 <OnPrint@@Base+0x398>
   12f3c:	nop
   12f40:	cmn	x0, #0x9
   12f44:	b.hi	13028 <__sancov_default_options@@Base+0x558>  // b.pmore
   12f48:	stp	x19, x20, [sp, #-48]!
   12f4c:	cmp	x2, #0x0
   12f50:	add	x20, x0, #0x8
   12f54:	str	x30, [sp, #24]
   12f58:	mov	x0, #0x8                   	// #8
   12f5c:	csel	x19, x2, x0, ne  // ne = any
   12f60:	cbz	x1, 12fb4 <__sancov_default_options@@Base+0x4e4>
   12f64:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12f68:	add	x0, x0, #0x140
   12f6c:	ldrb	w0, [x0, #16]
   12f70:	dmb	ish
   12f74:	and	w0, w0, #0xff
   12f78:	cbz	w0, 13038 <__sancov_default_options@@Base+0x568>
   12f7c:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   12f80:	mov	x3, x19
   12f84:	mov	x2, x20
   12f88:	add	x0, x0, #0x9c0
   12f8c:	bl	14548 <__sancov_default_options@@Base+0x1a78>
   12f90:	cbz	x0, 13048 <__sancov_default_options@@Base+0x578>
   12f94:	mov	x1, #0xc041                	// #49217
   12f98:	movk	x1, #0xbceb, lsl #16
   12f9c:	movk	x1, #0xb03a, lsl #32
   12fa0:	movk	x1, #0x6a6c, lsl #48
   12fa4:	str	x1, [x0], #8
   12fa8:	ldr	x30, [sp, #24]
   12fac:	ldp	x19, x20, [sp], #48
   12fb0:	ret
   12fb4:	str	x21, [sp, #16]
   12fb8:	adrp	x21, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   12fbc:	add	x0, x21, #0x140
   12fc0:	mov	w2, #0x1                   	// #1
   12fc4:	add	x0, x0, #0x28
   12fc8:	ldxrb	w1, [x0]
   12fcc:	stxrb	w3, w2, [x0]
   12fd0:	cbnz	w3, 12fc8 <__sancov_default_options@@Base+0x4f8>
   12fd4:	dmb	ish
   12fd8:	tst	w1, #0xff
   12fdc:	b.eq	12fe4 <__sancov_default_options@@Base+0x514>  // b.none
   12fe0:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   12fe4:	add	x0, x21, #0x140
   12fe8:	ldrb	w0, [x0, #16]
   12fec:	dmb	ish
   12ff0:	and	w0, w0, #0xff
   12ff4:	cbz	w0, 13030 <__sancov_default_options@@Base+0x560>
   12ff8:	mov	x3, x19
   12ffc:	mov	x2, x20
   13000:	adrp	x1, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13004:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   13008:	add	x1, x1, #0x170
   1300c:	add	x0, x0, #0x9c0
   13010:	bl	14548 <__sancov_default_options@@Base+0x1a78>
   13014:	dmb	ish
   13018:	add	x21, x21, #0x140
   1301c:	strb	wzr, [x21, #40]
   13020:	ldr	x21, [sp, #16]
   13024:	b	12f90 <__sancov_default_options@@Base+0x4c0>
   13028:	mov	x0, #0x0                   	// #0
   1302c:	ret
   13030:	bl	12c10 <__sancov_default_options@@Base+0x140>
   13034:	b	12ff8 <__sancov_default_options@@Base+0x528>
   13038:	str	x1, [sp, #40]
   1303c:	bl	12c10 <__sancov_default_options@@Base+0x140>
   13040:	ldr	x1, [sp, #40]
   13044:	b	12f7c <__sancov_default_options@@Base+0x4ac>
   13048:	mov	x0, x20
   1304c:	str	x21, [sp, #16]
   13050:	bl	12be0 <__sancov_default_options@@Base+0x110>
   13054:	nop
   13058:	stp	x19, x20, [sp, #-48]!
   1305c:	mov	x19, x2
   13060:	str	x30, [sp, #32]
   13064:	cbz	x0, 13110 <__sancov_default_options@@Base+0x640>
   13068:	mov	x20, x1
   1306c:	umulh	x1, x1, x0
   13070:	cbnz	x1, 131a8 <__sancov_default_options@@Base+0x6d8>
   13074:	mul	x20, x0, x20
   13078:	cmn	x20, #0x9
   1307c:	b.hi	130fc <__sancov_default_options@@Base+0x62c>  // b.pmore
   13080:	stp	x21, x22, [sp, #16]
   13084:	add	x21, x20, #0x8
   13088:	cbz	x19, 13120 <__sancov_default_options@@Base+0x650>
   1308c:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13090:	add	x0, x0, #0x140
   13094:	ldrb	w0, [x0, #16]
   13098:	dmb	ish
   1309c:	and	w0, w0, #0xff
   130a0:	cbz	w0, 13190 <__sancov_default_options@@Base+0x6c0>
   130a4:	mov	x1, x19
   130a8:	mov	x2, x21
   130ac:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   130b0:	mov	x3, #0x8                   	// #8
   130b4:	add	x0, x0, #0x9c0
   130b8:	bl	14548 <__sancov_default_options@@Base+0x1a78>
   130bc:	mov	x19, x0
   130c0:	cbz	x19, 13198 <__sancov_default_options@@Base+0x6c8>
   130c4:	mov	x0, #0xc041                	// #49217
   130c8:	mov	x2, x20
   130cc:	movk	x0, #0xbceb, lsl #16
   130d0:	mov	w1, #0x0                   	// #0
   130d4:	movk	x0, #0xb03a, lsl #32
   130d8:	movk	x0, #0x6a6c, lsl #48
   130dc:	str	x0, [x19], #8
   130e0:	mov	x0, x19
   130e4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   130e8:	mov	x0, x19
   130ec:	ldp	x21, x22, [sp, #16]
   130f0:	ldr	x30, [sp, #32]
   130f4:	ldp	x19, x20, [sp], #48
   130f8:	ret
   130fc:	mov	x19, #0x0                   	// #0
   13100:	mov	x0, x19
   13104:	ldr	x30, [sp, #32]
   13108:	ldp	x19, x20, [sp], #48
   1310c:	ret
   13110:	stp	x21, x22, [sp, #16]
   13114:	mov	x20, #0x0                   	// #0
   13118:	add	x21, x20, #0x8
   1311c:	cbnz	x19, 1308c <__sancov_default_options@@Base+0x5bc>
   13120:	adrp	x22, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13124:	add	x0, x22, #0x140
   13128:	add	x0, x0, #0x28
   1312c:	mov	w2, #0x1                   	// #1
   13130:	ldxrb	w1, [x0]
   13134:	stxrb	w3, w2, [x0]
   13138:	cbnz	w3, 13130 <__sancov_default_options@@Base+0x660>
   1313c:	dmb	ish
   13140:	tst	w1, #0xff
   13144:	b.eq	1314c <__sancov_default_options@@Base+0x67c>  // b.none
   13148:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   1314c:	add	x0, x22, #0x140
   13150:	ldrb	w0, [x0, #16]
   13154:	dmb	ish
   13158:	and	w0, w0, #0xff
   1315c:	cbz	w0, 131a0 <__sancov_default_options@@Base+0x6d0>
   13160:	mov	x2, x21
   13164:	mov	x3, #0x8                   	// #8
   13168:	adrp	x1, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   1316c:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   13170:	add	x1, x1, #0x170
   13174:	add	x0, x0, #0x9c0
   13178:	bl	14548 <__sancov_default_options@@Base+0x1a78>
   1317c:	dmb	ish
   13180:	mov	x19, x0
   13184:	add	x22, x22, #0x140
   13188:	strb	wzr, [x22, #40]
   1318c:	b	130c0 <__sancov_default_options@@Base+0x5f0>
   13190:	bl	12c10 <__sancov_default_options@@Base+0x140>
   13194:	b	130a4 <__sancov_default_options@@Base+0x5d4>
   13198:	mov	x0, x21
   1319c:	bl	12be0 <__sancov_default_options@@Base+0x110>
   131a0:	bl	12c10 <__sancov_default_options@@Base+0x140>
   131a4:	b	13160 <__sancov_default_options@@Base+0x690>
   131a8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   131ac:	mov	x2, x0
   131b0:	mov	x3, x20
   131b4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   131b8:	ldr	x1, [x1, #4008]
   131bc:	add	x0, x0, #0x360
   131c0:	stp	x21, x22, [sp, #16]
   131c4:	ldr	x1, [x1]
   131c8:	bl	22d00 <OnPrint@@Base+0x398>
   131cc:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   131d0:	stp	x19, x20, [sp, #-48]!
   131d4:	mov	x20, x1
   131d8:	mov	x1, x2
   131dc:	str	x30, [sp, #24]
   131e0:	cbz	x0, 132d8 <__sancov_default_options@@Base+0x808>
   131e4:	cmn	x20, #0x9
   131e8:	b.hi	132ec <__sancov_default_options@@Base+0x81c>  // b.pmore
   131ec:	mov	x3, #0xc041                	// #49217
   131f0:	add	x20, x20, #0x8
   131f4:	ldur	x4, [x0, #-8]
   131f8:	movk	x3, #0xbceb, lsl #16
   131fc:	movk	x3, #0xb03a, lsl #32
   13200:	sub	x19, x0, #0x8
   13204:	movk	x3, #0x6a6c, lsl #48
   13208:	cmp	x4, x3
   1320c:	b.ne	1330c <__sancov_default_options@@Base+0x83c>  // b.any
   13210:	cbz	x2, 1325c <__sancov_default_options@@Base+0x78c>
   13214:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13218:	add	x0, x0, #0x140
   1321c:	ldrb	w0, [x0, #16]
   13220:	dmb	ish
   13224:	and	w0, w0, #0xff
   13228:	cbz	w0, 132fc <__sancov_default_options@@Base+0x82c>
   1322c:	mov	x2, x19
   13230:	mov	x3, x20
   13234:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   13238:	mov	x4, #0x8                   	// #8
   1323c:	add	x0, x0, #0x9c0
   13240:	bl	14bb8 <__sancov_default_options@@Base+0x20e8>
   13244:	mov	x1, x0
   13248:	add	x0, x1, #0x8
   1324c:	cbz	x1, 13328 <__sancov_default_options@@Base+0x858>
   13250:	ldr	x30, [sp, #24]
   13254:	ldp	x19, x20, [sp], #48
   13258:	ret
   1325c:	str	x21, [sp, #16]
   13260:	adrp	x21, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13264:	add	x0, x21, #0x140
   13268:	mov	w2, #0x1                   	// #1
   1326c:	add	x0, x0, #0x28
   13270:	ldxrb	w1, [x0]
   13274:	stxrb	w3, w2, [x0]
   13278:	cbnz	w3, 13270 <__sancov_default_options@@Base+0x7a0>
   1327c:	dmb	ish
   13280:	tst	w1, #0xff
   13284:	b.eq	1328c <__sancov_default_options@@Base+0x7bc>  // b.none
   13288:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   1328c:	add	x0, x21, #0x140
   13290:	ldrb	w0, [x0, #16]
   13294:	dmb	ish
   13298:	and	w0, w0, #0xff
   1329c:	cbz	w0, 13334 <__sancov_default_options@@Base+0x864>
   132a0:	adrp	x1, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   132a4:	add	x1, x1, #0x170
   132a8:	mov	x2, x19
   132ac:	mov	x3, x20
   132b0:	mov	x4, #0x8                   	// #8
   132b4:	adrp	x0, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   132b8:	add	x0, x0, #0x9c0
   132bc:	bl	14bb8 <__sancov_default_options@@Base+0x20e8>
   132c0:	dmb	ish
   132c4:	mov	x1, x0
   132c8:	add	x21, x21, #0x140
   132cc:	strb	wzr, [x21, #40]
   132d0:	ldr	x21, [sp, #16]
   132d4:	b	13248 <__sancov_default_options@@Base+0x778>
   132d8:	mov	x0, x20
   132dc:	mov	x2, #0x0                   	// #0
   132e0:	ldr	x30, [sp, #24]
   132e4:	ldp	x19, x20, [sp], #48
   132e8:	b	12f40 <__sancov_default_options@@Base+0x470>
   132ec:	mov	x0, #0x0                   	// #0
   132f0:	ldr	x30, [sp, #24]
   132f4:	ldp	x19, x20, [sp], #48
   132f8:	ret
   132fc:	str	x2, [sp, #40]
   13300:	bl	12c10 <__sancov_default_options@@Base+0x140>
   13304:	ldr	x1, [sp, #40]
   13308:	b	1322c <__sancov_default_options@@Base+0x75c>
   1330c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   13310:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   13314:	add	x2, x2, #0x3c8
   13318:	add	x0, x0, #0x2c0
   1331c:	mov	w1, #0xa5                  	// #165
   13320:	str	x21, [sp, #16]
   13324:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13328:	mov	x0, x20
   1332c:	str	x21, [sp, #16]
   13330:	bl	12be0 <__sancov_default_options@@Base+0x110>
   13334:	bl	12c10 <__sancov_default_options@@Base+0x140>
   13338:	b	132a0 <__sancov_default_options@@Base+0x7d0>
   1333c:	nop
   13340:	cbz	x0, 136a8 <__sancov_default_options@@Base+0xbd8>
   13344:	stp	x19, x20, [sp, #-64]!
   13348:	mov	x3, #0xc041                	// #49217
   1334c:	movk	x3, #0xbceb, lsl #16
   13350:	ldur	x4, [x0, #-8]
   13354:	stp	x21, x22, [sp, #16]
   13358:	movk	x3, #0xb03a, lsl #32
   1335c:	str	x30, [sp, #48]
   13360:	movk	x3, #0x6a6c, lsl #48
   13364:	sub	x21, x0, #0x8
   13368:	cmp	x4, x3
   1336c:	b.ne	1368c <__sancov_default_options@@Base+0xbbc>  // b.any
   13370:	stur	xzr, [x0, #-8]
   13374:	mov	x19, x1
   13378:	cbz	x1, 134a8 <__sancov_default_options@@Base+0x9d8>
   1337c:	adrp	x0, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13380:	add	x0, x0, #0x140
   13384:	ldrb	w0, [x0, #16]
   13388:	dmb	ish
   1338c:	and	w0, w0, #0xff
   13390:	cbz	w0, 134a0 <__sancov_default_options@@Base+0x9d0>
   13394:	mov	x0, #0xffffffffffff        	// #281474976710655
   13398:	adrp	x20, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   1339c:	cmp	x21, x0
   133a0:	b.hi	133c4 <__sancov_default_options@@Base+0x8f4>  // b.pmore
   133a4:	lsr	x2, x21, #32
   133a8:	add	x1, x20, #0x9c0
   133ac:	ldr	x0, [x1, x2, lsl #3]
   133b0:	dmb	ish
   133b4:	cbz	x0, 133c4 <__sancov_default_options@@Base+0x8f4>
   133b8:	lsr	w3, w21, #20
   133bc:	ldrb	w0, [x0, x3]
   133c0:	cbnz	w0, 136ac <__sancov_default_options@@Base+0xbdc>
   133c4:	add	x0, x20, #0x9c0
   133c8:	add	x0, x0, #0x80, lsl #12
   133cc:	ldr	x19, [x0, #3520]
   133d0:	sub	x0, x19, #0x1
   133d4:	tst	x21, x0
   133d8:	b.ne	13728 <__sancov_default_options@@Base+0xc58>  // b.any
   133dc:	adrp	x0, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   133e0:	sub	x19, x21, x19
   133e4:	add	x0, x0, #0x9c0
   133e8:	mov	w2, #0x1                   	// #1
   133ec:	ldxrb	w1, [x0]
   133f0:	stxrb	w3, w2, [x0]
   133f4:	cbnz	w3, 133ec <__sancov_default_options@@Base+0x91c>
   133f8:	dmb	ish
   133fc:	tst	w1, #0xff
   13400:	b.eq	13408 <__sancov_default_options@@Base+0x938>  // b.none
   13404:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   13408:	add	x20, x20, #0x9c0
   1340c:	add	x0, x20, #0x80, lsl #12
   13410:	ldr	x1, [x19, #24]
   13414:	ldr	x2, [x0, #3528]
   13418:	ldr	x3, [x2, x1, lsl #3]
   1341c:	cmp	x3, x19
   13420:	b.ne	1374c <__sancov_default_options@@Base+0xc7c>  // b.any
   13424:	add	x0, x20, #0xc0, lsl #12
   13428:	ldr	x4, [x0, #3536]
   1342c:	cmp	x1, x4
   13430:	b.cs	1376c <__sancov_default_options@@Base+0xc9c>  // b.hs, b.nlast
   13434:	sub	x4, x4, #0x1
   13438:	ldr	x3, [x19, #8]
   1343c:	str	x4, [x0, #3536]
   13440:	ldr	x4, [x2, x4, lsl #3]
   13444:	str	x4, [x2, x1, lsl #3]
   13448:	ldr	x2, [x0, #4120]
   1344c:	str	x1, [x4, #24]
   13450:	sub	x2, x2, x3
   13454:	str	x2, [x0, #4120]
   13458:	ldr	x4, [x0, #3560]
   1345c:	strb	wzr, [x0, #3544]
   13460:	ldr	x2, [x0, #3568]
   13464:	add	x4, x4, #0x1
   13468:	ldr	x1, [x0, #4128]
   1346c:	sub	x2, x2, x3
   13470:	str	x4, [x0, #3560]
   13474:	sub	x1, x1, x3
   13478:	str	x2, [x0, #3568]
   1347c:	str	x1, [x0, #4128]
   13480:	dmb	ish
   13484:	add	x20, x20, #0xc1, lsl #12
   13488:	strb	wzr, [x20]
   1348c:	ldp	x0, x1, [x19]
   13490:	ldp	x21, x22, [sp, #16]
   13494:	ldr	x30, [sp, #48]
   13498:	ldp	x19, x20, [sp], #64
   1349c:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   134a0:	bl	12c10 <__sancov_default_options@@Base+0x140>
   134a4:	b	13394 <__sancov_default_options@@Base+0x8c4>
   134a8:	adrp	x19, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   134ac:	add	x0, x19, #0x140
   134b0:	add	x0, x0, #0x28
   134b4:	mov	w2, #0x1                   	// #1
   134b8:	ldxrb	w1, [x0]
   134bc:	stxrb	w3, w2, [x0]
   134c0:	cbnz	w3, 134b8 <__sancov_default_options@@Base+0x9e8>
   134c4:	dmb	ish
   134c8:	tst	w1, #0xff
   134cc:	b.eq	134d4 <__sancov_default_options@@Base+0xa04>  // b.none
   134d0:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   134d4:	add	x0, x19, #0x140
   134d8:	ldrb	w0, [x0, #16]
   134dc:	dmb	ish
   134e0:	and	w0, w0, #0xff
   134e4:	cbz	w0, 13720 <__sancov_default_options@@Base+0xc50>
   134e8:	mov	x0, #0xffffffffffff        	// #281474976710655
   134ec:	adrp	x20, 100000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   134f0:	cmp	x21, x0
   134f4:	b.hi	135a0 <__sancov_default_options@@Base+0xad0>  // b.pmore
   134f8:	lsr	x2, x21, #32
   134fc:	add	x1, x20, #0x9c0
   13500:	ldr	x0, [x1, x2, lsl #3]
   13504:	dmb	ish
   13508:	cbz	x0, 135a0 <__sancov_default_options@@Base+0xad0>
   1350c:	lsr	w3, w21, #20
   13510:	ldrb	w0, [x0, x3]
   13514:	cbz	w0, 135a0 <__sancov_default_options@@Base+0xad0>
   13518:	stp	x23, x24, [sp, #32]
   1351c:	ldr	x0, [x1, x2, lsl #3]
   13520:	dmb	ish
   13524:	cbz	x0, 1378c <__sancov_default_options@@Base+0xcbc>
   13528:	ldrb	w24, [x0, x3]
   1352c:	cbz	x24, 1378c <__sancov_default_options@@Base+0xcbc>
   13530:	cmp	x24, #0x35
   13534:	b.hi	13928 <__sancov_default_options@@Base+0xe58>  // b.pmore
   13538:	lsl	x23, x24, #10
   1353c:	adrp	x22, f3000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   13540:	add	x6, x22, #0x170
   13544:	add	x0, x6, x23
   13548:	ldr	x2, [x0, #8]
   1354c:	cbz	x2, 13958 <__sancov_default_options@@Base+0xe88>
   13550:	add	x0, x22, #0x170
   13554:	add	x1, x0, x23
   13558:	ldr	x4, [x0, x23]
   1355c:	cmp	x4, x2
   13560:	b.eq	13948 <__sancov_default_options@@Base+0xe78>  // b.none
   13564:	add	x22, x22, #0x170
   13568:	add	x1, x22, x23
   1356c:	add	x2, x22, #0x8, lsl #12
   13570:	ldr	x0, [x22, x23]
   13574:	ldr	x4, [x1, #16]
   13578:	add	x1, x0, #0x1
   1357c:	add	x0, x0, x24, lsl #7
   13580:	str	x1, [x22, x23]
   13584:	add	x0, x0, #0x4
   13588:	ldr	x1, [x2, #22544]
   1358c:	str	x21, [x22, x0, lsl #3]
   13590:	sub	x0, x1, x4
   13594:	ldp	x23, x24, [sp, #32]
   13598:	str	x0, [x2, #22544]
   1359c:	b	13670 <__sancov_default_options@@Base+0xba0>
   135a0:	add	x0, x20, #0x9c0
   135a4:	add	x0, x0, #0x80, lsl #12
   135a8:	ldr	x4, [x0, #3520]
   135ac:	sub	x0, x4, #0x1
   135b0:	tst	x21, x0
   135b4:	b.ne	137ac <__sancov_default_options@@Base+0xcdc>  // b.any
   135b8:	adrp	x0, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   135bc:	sub	x21, x21, x4
   135c0:	add	x0, x0, #0x9c0
   135c4:	mov	w2, #0x1                   	// #1
   135c8:	ldxrb	w1, [x0]
   135cc:	stxrb	w3, w2, [x0]
   135d0:	cbnz	w3, 135c8 <__sancov_default_options@@Base+0xaf8>
   135d4:	dmb	ish
   135d8:	tst	w1, #0xff
   135dc:	b.eq	135e4 <__sancov_default_options@@Base+0xb14>  // b.none
   135e0:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   135e4:	add	x20, x20, #0x9c0
   135e8:	add	x0, x20, #0x80, lsl #12
   135ec:	ldr	x1, [x21, #24]
   135f0:	ldr	x2, [x0, #3528]
   135f4:	ldr	x3, [x2, x1, lsl #3]
   135f8:	cmp	x3, x21
   135fc:	b.ne	137d0 <__sancov_default_options@@Base+0xd00>  // b.any
   13600:	add	x0, x20, #0xc0, lsl #12
   13604:	ldr	x4, [x0, #3536]
   13608:	cmp	x1, x4
   1360c:	b.cs	137f0 <__sancov_default_options@@Base+0xd20>  // b.hs, b.nlast
   13610:	sub	x4, x4, #0x1
   13614:	ldr	x3, [x21, #8]
   13618:	str	x4, [x0, #3536]
   1361c:	ldr	x4, [x2, x4, lsl #3]
   13620:	str	x4, [x2, x1, lsl #3]
   13624:	ldr	x2, [x0, #4120]
   13628:	str	x1, [x4, #24]
   1362c:	sub	x2, x2, x3
   13630:	str	x2, [x0, #4120]
   13634:	ldr	x4, [x0, #3560]
   13638:	strb	wzr, [x0, #3544]
   1363c:	ldr	x2, [x0, #3568]
   13640:	add	x4, x4, #0x1
   13644:	ldr	x1, [x0, #4128]
   13648:	sub	x2, x2, x3
   1364c:	str	x4, [x0, #3560]
   13650:	sub	x1, x1, x3
   13654:	str	x2, [x0, #3568]
   13658:	str	x1, [x0, #4128]
   1365c:	dmb	ish
   13660:	add	x20, x20, #0xc1, lsl #12
   13664:	strb	wzr, [x20]
   13668:	ldp	x0, x1, [x21]
   1366c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   13670:	dmb	ish
   13674:	add	x19, x19, #0x140
   13678:	strb	wzr, [x19, #40]
   1367c:	ldp	x21, x22, [sp, #16]
   13680:	ldr	x30, [sp, #48]
   13684:	ldp	x19, x20, [sp], #64
   13688:	ret
   1368c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   13690:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   13694:	add	x2, x2, #0x3c8
   13698:	add	x0, x0, #0x2c0
   1369c:	mov	w1, #0xbd                  	// #189
   136a0:	stp	x23, x24, [sp, #32]
   136a4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   136a8:	ret
   136ac:	stp	x23, x24, [sp, #32]
   136b0:	ldr	x0, [x1, x2, lsl #3]
   136b4:	dmb	ish
   136b8:	cbz	x0, 1378c <__sancov_default_options@@Base+0xcbc>
   136bc:	ldrb	w22, [x0, x3]
   136c0:	cbz	x22, 1378c <__sancov_default_options@@Base+0xcbc>
   136c4:	cmp	x22, #0x35
   136c8:	b.hi	13810 <__sancov_default_options@@Base+0xd40>  // b.pmore
   136cc:	lsl	x23, x22, #10
   136d0:	add	x1, x19, x23
   136d4:	ldr	x2, [x1, #8]
   136d8:	cbz	x2, 13830 <__sancov_default_options@@Base+0xd60>
   136dc:	ldr	x0, [x19, x23]
   136e0:	cmp	x2, x0
   136e4:	b.eq	13910 <__sancov_default_options@@Base+0xe40>  // b.none
   136e8:	add	x22, x0, x22, lsl #7
   136ec:	add	x2, x19, x23
   136f0:	add	x22, x22, #0x4
   136f4:	add	x0, x0, #0x1
   136f8:	mov	x3, #0xd800                	// #55296
   136fc:	add	x1, x19, x3
   13700:	str	x0, [x19, x23]
   13704:	str	x21, [x19, x22, lsl #3]
   13708:	ldr	x0, [x1, #16]
   1370c:	ldr	x2, [x2, #16]
   13710:	ldp	x23, x24, [sp, #32]
   13714:	sub	x0, x0, x2
   13718:	str	x0, [x1, #16]
   1371c:	b	1367c <__sancov_default_options@@Base+0xbac>
   13720:	bl	12c10 <__sancov_default_options@@Base+0x140>
   13724:	b	134e8 <__sancov_default_options@@Base+0xa18>
   13728:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1372c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13730:	add	x2, x2, #0xa30
   13734:	add	x0, x0, #0x728
   13738:	mov	x4, #0x0                   	// #0
   1373c:	mov	x3, #0x0                   	// #0
   13740:	mov	w1, #0x123                 	// #291
   13744:	stp	x23, x24, [sp, #32]
   13748:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1374c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13750:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13754:	mov	x4, x19
   13758:	add	x2, x2, #0xa58
   1375c:	add	x0, x0, #0x728
   13760:	mov	w1, #0x88                  	// #136
   13764:	stp	x23, x24, [sp, #32]
   13768:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1376c:	mov	x3, x1
   13770:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13774:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13778:	add	x2, x2, #0xa78
   1377c:	add	x0, x0, #0x728
   13780:	mov	w1, #0x89                  	// #137
   13784:	stp	x23, x24, [sp, #32]
   13788:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1378c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13790:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13794:	add	x2, x2, #0xc88
   13798:	add	x0, x0, #0xb80
   1379c:	mov	x4, #0x0                   	// #0
   137a0:	mov	x3, #0x0                   	// #0
   137a4:	mov	w1, #0xae                  	// #174
   137a8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   137ac:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   137b0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   137b4:	add	x2, x2, #0xa30
   137b8:	add	x0, x0, #0x728
   137bc:	mov	x4, #0x0                   	// #0
   137c0:	mov	x3, #0x0                   	// #0
   137c4:	mov	w1, #0x123                 	// #291
   137c8:	stp	x23, x24, [sp, #32]
   137cc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   137d0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   137d4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   137d8:	mov	x4, x21
   137dc:	add	x2, x2, #0xa58
   137e0:	add	x0, x0, #0x728
   137e4:	mov	w1, #0x88                  	// #136
   137e8:	stp	x23, x24, [sp, #32]
   137ec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   137f0:	mov	x3, x1
   137f4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   137f8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   137fc:	add	x2, x2, #0xa78
   13800:	add	x0, x0, #0x728
   13804:	mov	w1, #0x89                  	// #137
   13808:	stp	x23, x24, [sp, #32]
   1380c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13810:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13814:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13818:	mov	x3, x22
   1381c:	add	x2, x2, #0xb60
   13820:	add	x0, x0, #0xb80
   13824:	mov	x4, #0x36                  	// #54
   13828:	mov	w1, #0xaf                  	// #175
   1382c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13830:	mov	x2, #0x1                   	// #1
   13834:	mov	x11, x2
   13838:	mov	x12, #0x7c                  	// #124
   1383c:	mov	x10, #0x14                  	// #20
   13840:	mov	x9, #0x100                 	// #256
   13844:	mov	w8, #0x4000                	// #16384
   13848:	mov	x7, #0x3e                  	// #62
   1384c:	nop
   13850:	add	x5, x19, x2, lsl #10
   13854:	lsl	x6, x2, #4
   13858:	mov	x4, x5
   1385c:	mov	x0, #0x14                  	// #20
   13860:	mov	x3, x2
   13864:	add	x2, x2, #0x1
   13868:	stp	x12, x6, [x5, #8]
   1386c:	cmp	x2, #0x36
   13870:	str	x0, [x4, #24]
   13874:	b.eq	138e4 <__sancov_default_options@@Base+0xe14>  // b.none
   13878:	cmp	x2, #0x35
   1387c:	b.eq	138ec <__sancov_default_options@@Base+0xe1c>  // b.none
   13880:	cmp	x2, #0x10
   13884:	b.ls	13850 <__sancov_default_options@@Base+0xd80>  // b.plast
   13888:	sub	x0, x3, #0xf
   1388c:	add	x4, x4, #0x400
   13890:	and	x6, x0, #0x3
   13894:	mov	x3, x2
   13898:	lsr	x0, x0, #2
   1389c:	add	x2, x2, #0x1
   138a0:	lsl	x0, x9, x0
   138a4:	lsr	x5, x0, #2
   138a8:	madd	x5, x5, x6, x0
   138ac:	str	x5, [x4, #16]
   138b0:	udiv	w0, w8, w5
   138b4:	cmp	x0, #0x0
   138b8:	csel	x0, x0, x11, ne  // ne = any
   138bc:	cmp	x0, #0x3e
   138c0:	csel	x0, x0, x7, ls  // ls = plast
   138c4:	add	x6, x0, #0x2
   138c8:	lsl	x0, x0, #1
   138cc:	str	x0, [x4, #8]
   138d0:	cmp	x5, x6, lsl #3
   138d4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   138d8:	str	x0, [x4, #24]
   138dc:	cmp	x2, #0x36
   138e0:	b.ne	13878 <__sancov_default_options@@Base+0xda8>  // b.any
   138e4:	ldr	x2, [x1, #8]
   138e8:	b	136dc <__sancov_default_options@@Base+0xc0c>
   138ec:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   138f0:	ldr	q0, [x0, #3824]
   138f4:	mov	x0, #0xd400                	// #54272
   138f8:	add	x2, x19, x0
   138fc:	add	x0, x19, #0x8, lsl #12
   13900:	stur	q0, [x2, #8]
   13904:	str	xzr, [x0, #21528]
   13908:	ldr	x2, [x1, #8]
   1390c:	b	136dc <__sancov_default_options@@Base+0xc0c>
   13910:	mov	x0, x19
   13914:	add	x2, x20, #0x9c0
   13918:	mov	x3, x22
   1391c:	bl	149e0 <__sancov_default_options@@Base+0x1f10>
   13920:	ldr	x0, [x19, x23]
   13924:	b	136e8 <__sancov_default_options@@Base+0xc18>
   13928:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1392c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13930:	mov	x3, x24
   13934:	add	x2, x2, #0xb60
   13938:	add	x0, x0, #0xb80
   1393c:	mov	x4, #0x36                  	// #54
   13940:	mov	w1, #0xaf                  	// #175
   13944:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13948:	add	x2, x20, #0x9c0
   1394c:	mov	x3, x24
   13950:	bl	149e0 <__sancov_default_options@@Base+0x1f10>
   13954:	b	13564 <__sancov_default_options@@Base+0xa94>
   13958:	mov	x1, #0x1                   	// #1
   1395c:	mov	x11, x1
   13960:	mov	x12, #0x7c                  	// #124
   13964:	mov	x10, #0x14                  	// #20
   13968:	mov	x9, #0x100                 	// #256
   1396c:	mov	w8, #0x4000                	// #16384
   13970:	mov	x7, #0x3e                  	// #62
   13974:	nop
   13978:	lsl	x0, x1, #10
   1397c:	lsl	x4, x1, #4
   13980:	add	x13, x6, x0
   13984:	add	x0, x0, #0x18
   13988:	add	x2, x0, x6
   1398c:	mov	x0, #0x14                  	// #20
   13990:	mov	x5, x1
   13994:	add	x1, x1, #0x1
   13998:	stp	x12, x4, [x13, #8]
   1399c:	cmp	x1, #0x36
   139a0:	str	x0, [x2]
   139a4:	b.eq	13a14 <__sancov_default_options@@Base+0xf44>  // b.none
   139a8:	cmp	x1, #0x35
   139ac:	b.eq	13a24 <__sancov_default_options@@Base+0xf54>  // b.none
   139b0:	cmp	x1, #0x10
   139b4:	b.ls	13978 <__sancov_default_options@@Base+0xea8>  // b.plast
   139b8:	sub	x0, x5, #0xf
   139bc:	add	x2, x2, #0x400
   139c0:	and	x13, x0, #0x3
   139c4:	mov	x5, x1
   139c8:	lsr	x0, x0, #2
   139cc:	add	x1, x1, #0x1
   139d0:	lsl	x0, x9, x0
   139d4:	lsr	x4, x0, #2
   139d8:	madd	x4, x4, x13, x0
   139dc:	stur	x4, [x2, #-8]
   139e0:	udiv	w0, w8, w4
   139e4:	cmp	x0, #0x0
   139e8:	csel	x0, x0, x11, ne  // ne = any
   139ec:	cmp	x0, #0x3e
   139f0:	csel	x0, x0, x7, ls  // ls = plast
   139f4:	add	x13, x0, #0x2
   139f8:	lsl	x0, x0, #1
   139fc:	stur	x0, [x2, #-16]
   13a00:	cmp	x4, x13, lsl #3
   13a04:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13a08:	str	x0, [x2]
   13a0c:	cmp	x1, #0x36
   13a10:	b.ne	139a8 <__sancov_default_options@@Base+0xed8>  // b.any
   13a14:	add	x0, x22, #0x170
   13a18:	add	x0, x0, x23
   13a1c:	ldr	x2, [x0, #8]
   13a20:	b	13550 <__sancov_default_options@@Base+0xa80>
   13a24:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13a28:	add	x0, x22, #0x170
   13a2c:	ldr	q0, [x1, #3824]
   13a30:	mov	x1, #0xd400                	// #54272
   13a34:	add	x2, x0, x1
   13a38:	add	x1, x0, x23
   13a3c:	add	x0, x0, #0x8, lsl #12
   13a40:	stur	q0, [x2, #8]
   13a44:	str	xzr, [x0, #21528]
   13a48:	ldr	x2, [x1, #8]
   13a4c:	b	13550 <__sancov_default_options@@Base+0xa80>
   13a50:	stp	x19, x20, [sp, #-48]!
   13a54:	stp	x21, x22, [sp, #16]
   13a58:	mov	x21, x0
   13a5c:	ldr	x0, [x2, #8]
   13a60:	stp	x23, x30, [sp, #32]
   13a64:	cbz	x0, 13b10 <__sancov_default_options@@Base+0x1040>
   13a68:	mov	x0, #0x2001                	// #8193
   13a6c:	add	x22, x1, x0
   13a70:	mov	x20, x2
   13a74:	mov	x19, x1
   13a78:	add	x23, x21, x22, lsl #6
   13a7c:	mov	w1, #0x1                   	// #1
   13a80:	ldxrb	w0, [x23]
   13a84:	stxrb	w2, w1, [x23]
   13a88:	cbnz	w2, 13a80 <__sancov_default_options@@Base+0xfb0>
   13a8c:	dmb	ish
   13a90:	tst	w0, #0xff
   13a94:	b.eq	13aa0 <__sancov_default_options@@Base+0xfd0>  // b.none
   13a98:	mov	x0, x23
   13a9c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   13aa0:	ldr	x0, [x23, #8]
   13aa4:	cbz	x0, 13adc <__sancov_default_options@@Base+0x100c>
   13aa8:	add	x19, x21, x19, lsl #6
   13aac:	add	x0, x0, #0x1
   13ab0:	add	x19, x19, #0x80, lsl #12
   13ab4:	ldr	x1, [x19, #80]
   13ab8:	str	x1, [x20]
   13abc:	stp	x0, x20, [x19, #72]
   13ac0:	dmb	ish
   13ac4:	lsl	x22, x22, #6
   13ac8:	strb	wzr, [x21, x22]
   13acc:	ldp	x21, x22, [sp, #16]
   13ad0:	ldp	x23, x30, [sp, #32]
   13ad4:	ldp	x19, x20, [sp], #48
   13ad8:	ret
   13adc:	add	x0, x21, x22, lsl #6
   13ae0:	dup	v0.2d, x20
   13ae4:	str	xzr, [x20]
   13ae8:	mov	x1, #0x1                   	// #1
   13aec:	str	x1, [x0, #8]
   13af0:	str	q0, [x0, #16]
   13af4:	dmb	ish
   13af8:	lsl	x22, x22, #6
   13afc:	strb	wzr, [x21, x22]
   13b00:	ldp	x21, x22, [sp, #16]
   13b04:	ldp	x23, x30, [sp, #32]
   13b08:	ldp	x19, x20, [sp], #48
   13b0c:	ret
   13b10:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13b14:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13b18:	add	x2, x2, #0x6b0
   13b1c:	add	x0, x0, #0x6c8
   13b20:	mov	x4, #0x0                   	// #0
   13b24:	mov	x3, #0x0                   	// #0
   13b28:	mov	w1, #0xad                  	// #173
   13b2c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13b30:	sub	sp, sp, #0x210
   13b34:	adrp	x5, 6d000 <_Unwind_Backtrace@GCC_3.3>
   13b38:	stp	x25, x26, [sp, #48]
   13b3c:	mov	x26, x2
   13b40:	mov	x25, x3
   13b44:	ldr	x2, [x5, #952]
   13b48:	stp	x19, x20, [sp]
   13b4c:	mov	x19, x1
   13b50:	mov	x1, #0x100000              	// #1048576
   13b54:	stp	x21, x22, [sp, #16]
   13b58:	mov	x21, x0
   13b5c:	mov	x0, x1
   13b60:	str	x30, [sp, #80]
   13b64:	str	x4, [sp, #104]
   13b68:	bl	20230 <__sanitizer_set_report_fd@@Base+0x6968>
   13b6c:	ldr	x4, [sp, #104]
   13b70:	cbz	x0, 13d54 <__sancov_default_options@@Base+0x1284>
   13b74:	mov	x22, x0
   13b78:	tst	x0, #0xfffff
   13b7c:	ldr	x0, [x19, #24]
   13b80:	stp	x23, x24, [sp, #32]
   13b84:	stp	x27, x28, [sp, #64]
   13b88:	add	x0, x0, #0x100, lsl #12
   13b8c:	str	x0, [x19, #24]
   13b90:	b.ne	13f5c <__sancov_default_options@@Base+0x148c>  // b.any
   13b94:	mov	x0, #0xfffffff             	// #268435455
   13b98:	lsr	x19, x22, #20
   13b9c:	cmp	x0, x22, lsr #20
   13ba0:	b.cc	13fc4 <__sancov_default_options@@Base+0x14f4>  // b.lo, b.ul, b.last
   13ba4:	and	w23, w4, #0xff
   13ba8:	lsr	x20, x22, #32
   13bac:	ldr	x0, [x21, x20, lsl #3]
   13bb0:	dmb	ish
   13bb4:	cbz	x0, 13f14 <__sancov_default_options@@Base+0x1444>
   13bb8:	and	x3, x19, #0xfff
   13bbc:	ldrb	w1, [x0, x3]
   13bc0:	cbnz	x1, 1401c <__sancov_default_options@@Base+0x154c>
   13bc4:	strb	w23, [x0, x3]
   13bc8:	cmp	x4, #0x35
   13bcc:	b.eq	13dec <__sancov_default_options@@Base+0x131c>  // b.none
   13bd0:	lsl	x28, x4, #4
   13bd4:	cmp	x4, #0x10
   13bd8:	b.ls	13bf8 <__sancov_default_options@@Base+0x1128>  // b.plast
   13bdc:	sub	x0, x4, #0x10
   13be0:	mov	x28, #0x100                 	// #256
   13be4:	and	x1, x0, #0x3
   13be8:	lsr	x0, x0, #2
   13bec:	lsl	x0, x28, x0
   13bf0:	lsr	x28, x0, #2
   13bf4:	madd	x28, x28, x1, x0
   13bf8:	mov	x27, #0x100000              	// #1048576
   13bfc:	udiv	x27, x27, x28
   13c00:	cbz	x28, 13f04 <__sancov_default_options@@Base+0x1434>
   13c04:	mov	w23, #0x4000                	// #16384
   13c08:	mov	x1, #0x40                  	// #64
   13c0c:	mov	x0, #0x3e                  	// #62
   13c10:	mul	x27, x27, x28
   13c14:	udiv	w23, w23, w28
   13c18:	cmp	x23, x1
   13c1c:	csel	x23, x23, x1, ls  // ls = plast
   13c20:	cmp	x23, #0x0
   13c24:	csinc	x23, x23, xzr, ne  // ne = any
   13c28:	cmp	x23, x0
   13c2c:	csel	x23, x23, x0, ls  // ls = plast
   13c30:	add	x27, x22, x27
   13c34:	cmp	x22, x27
   13c38:	b.cs	13f04 <__sancov_default_options@@Base+0x1434>  // b.hs, b.nlast
   13c3c:	add	x24, sp, #0x90
   13c40:	add	x7, x26, x4, lsl #10
   13c44:	mov	x1, #0x0                   	// #0
   13c48:	mov	x19, #0x1                   	// #1
   13c4c:	str	x22, [sp, #144]
   13c50:	add	x22, x22, x28
   13c54:	cmp	x22, x27
   13c58:	b.cs	13da8 <__sancov_default_options@@Base+0x12d8>  // b.hs, b.nlast
   13c5c:	str	x22, [x24, x19, lsl #3]
   13c60:	cmp	x19, #0x2f
   13c64:	add	x19, x19, #0x1
   13c68:	b.ne	13c50 <__sancov_default_options@@Base+0x1180>  // b.any
   13c6c:	mov	x2, #0xd800                	// #55296
   13c70:	mov	x19, #0x0                   	// #0
   13c74:	add	x9, x26, x2
   13c78:	b	13c84 <__sancov_default_options@@Base+0x11b4>
   13c7c:	cmp	x19, #0x2f
   13c80:	b.hi	13de4 <__sancov_default_options@@Base+0x1314>  // b.pmore
   13c84:	ldr	x8, [x24, x19, lsl #3]
   13c88:	cbz	x1, 13cd4 <__sancov_default_options@@Base+0x1204>
   13c8c:	ldr	x5, [x1, #8]
   13c90:	add	x6, x5, #0x1
   13c94:	add	x5, x5, #0x2
   13c98:	str	x6, [x1, #8]
   13c9c:	add	x19, x19, #0x1
   13ca0:	cmp	x6, x23
   13ca4:	str	x8, [x1, x5, lsl #3]
   13ca8:	b.ne	13c7c <__sancov_default_options@@Base+0x11ac>  // b.any
   13cac:	ldr	x5, [x25, #8]
   13cb0:	cbnz	x5, 13d70 <__sancov_default_options@@Base+0x12a0>
   13cb4:	dup	v0.2d, x1
   13cb8:	str	xzr, [x1]
   13cbc:	mov	x0, #0x1                   	// #1
   13cc0:	str	x0, [x25, #8]
   13cc4:	cmp	x19, #0x2f
   13cc8:	str	q0, [x25, #16]
   13ccc:	b.hi	13d90 <__sancov_default_options@@Base+0x12c0>  // b.pmore
   13cd0:	ldr	x8, [x24, x19, lsl #3]
   13cd4:	mov	x1, x8
   13cd8:	ldr	x20, [x7, #24]
   13cdc:	cbnz	x20, 13cf4 <__sancov_default_options@@Base+0x1224>
   13ce0:	cbz	x1, 13d4c <__sancov_default_options@@Base+0x127c>
   13ce4:	mov	x5, #0x0                   	// #0
   13ce8:	mov	x6, #0x1                   	// #1
   13cec:	str	xzr, [x1, #8]
   13cf0:	b	13c94 <__sancov_default_options@@Base+0x11c4>
   13cf4:	cmp	x20, #0x35
   13cf8:	b.hi	13f7c <__sancov_default_options@@Base+0x14ac>  // b.pmore
   13cfc:	lsl	x5, x20, #10
   13d00:	add	x1, x26, x5
   13d04:	ldr	x0, [x26, x5]
   13d08:	cbz	x0, 13fe4 <__sancov_default_options@@Base+0x1514>
   13d0c:	lsl	x20, x20, #7
   13d10:	add	x3, x26, x5
   13d14:	add	x1, x20, x0
   13d18:	sub	x0, x0, #0x1
   13d1c:	add	x1, x1, #0x2
   13d20:	str	x0, [x26, x5]
   13d24:	add	x20, x20, x0
   13d28:	add	x20, x20, #0x4
   13d2c:	ldr	x2, [x26, x1, lsl #3]
   13d30:	ldr	x0, [x9, #16]
   13d34:	ldr	x1, [x3, #16]
   13d38:	prfm	pldl1keep, [x2]
   13d3c:	add	x0, x0, x1
   13d40:	ldr	x1, [x26, x20, lsl #3]
   13d44:	str	x0, [x9, #16]
   13d48:	cbnz	x1, 13ce4 <__sancov_default_options@@Base+0x1214>
   13d4c:	ldp	x23, x24, [sp, #32]
   13d50:	ldp	x27, x28, [sp, #64]
   13d54:	mov	w0, #0x0                   	// #0
   13d58:	ldp	x19, x20, [sp]
   13d5c:	ldp	x21, x22, [sp, #16]
   13d60:	ldp	x25, x26, [sp, #48]
   13d64:	ldr	x30, [sp, #80]
   13d68:	add	sp, sp, #0x210
   13d6c:	ret
   13d70:	ldr	x2, [x25, #24]
   13d74:	str	xzr, [x1]
   13d78:	add	x5, x5, #0x1
   13d7c:	cmp	x19, #0x2f
   13d80:	str	x1, [x2]
   13d84:	str	x5, [x25, #8]
   13d88:	str	x1, [x25, #24]
   13d8c:	b.ls	13cd0 <__sancov_default_options@@Base+0x1200>  // b.plast
   13d90:	add	x22, x22, x28
   13d94:	mov	x19, #0x0                   	// #0
   13d98:	cmp	x22, x27
   13d9c:	mov	x1, #0x0                   	// #0
   13da0:	b.cc	13c5c <__sancov_default_options@@Base+0x118c>  // b.lo, b.ul, b.last
   13da4:	nop
   13da8:	cbnz	x19, 13dfc <__sancov_default_options@@Base+0x132c>
   13dac:	cbz	x1, 13f04 <__sancov_default_options@@Base+0x1434>
   13db0:	ldr	x2, [x1, #8]
   13db4:	cbz	x2, 1403c <__sancov_default_options@@Base+0x156c>
   13db8:	ldr	x0, [x25, #8]
   13dbc:	cbnz	x0, 13f9c <__sancov_default_options@@Base+0x14cc>
   13dc0:	dup	v0.2d, x1
   13dc4:	ldp	x23, x24, [sp, #32]
   13dc8:	ldp	x27, x28, [sp, #64]
   13dcc:	str	xzr, [x1]
   13dd0:	mov	x1, #0x1                   	// #1
   13dd4:	mov	w0, w1
   13dd8:	str	x1, [x25, #8]
   13ddc:	str	q0, [x25, #16]
   13de0:	b	13d58 <__sancov_default_options@@Base+0x1288>
   13de4:	mov	x19, #0x0                   	// #0
   13de8:	b	13c50 <__sancov_default_options@@Base+0x1180>
   13dec:	mov	x27, #0x100000              	// #1048576
   13df0:	mov	x23, #0x20                  	// #32
   13df4:	mov	x28, #0x200                 	// #512
   13df8:	b	13c30 <__sancov_default_options@@Base+0x1160>
   13dfc:	add	x28, x26, x4, lsl #10
   13e00:	mov	x0, #0xd800                	// #55296
   13e04:	add	x27, sp, #0x90
   13e08:	add	x4, x26, x0
   13e0c:	mov	x20, #0x0                   	// #0
   13e10:	b	13e1c <__sancov_default_options@@Base+0x134c>
   13e14:	cmp	x19, x20
   13e18:	b.ls	13db4 <__sancov_default_options@@Base+0x12e4>  // b.plast
   13e1c:	ldr	x22, [x27, x20, lsl #3]
   13e20:	cbz	x1, 13e6c <__sancov_default_options@@Base+0x139c>
   13e24:	ldr	x0, [x1, #8]
   13e28:	add	x2, x0, #0x1
   13e2c:	add	x0, x0, #0x2
   13e30:	str	x2, [x1, #8]
   13e34:	add	x20, x20, #0x1
   13e38:	cmp	x2, x23
   13e3c:	str	x22, [x1, x0, lsl #3]
   13e40:	b.ne	13e14 <__sancov_default_options@@Base+0x1344>  // b.any
   13e44:	ldr	x0, [x25, #8]
   13e48:	cbnz	x0, 13ee4 <__sancov_default_options@@Base+0x1414>
   13e4c:	dup	v0.2d, x1
   13e50:	str	xzr, [x1]
   13e54:	mov	x0, #0x1                   	// #1
   13e58:	str	x0, [x25, #8]
   13e5c:	cmp	x19, x20
   13e60:	str	q0, [x25, #16]
   13e64:	b.ls	13f04 <__sancov_default_options@@Base+0x1434>  // b.plast
   13e68:	ldr	x22, [x27, x20, lsl #3]
   13e6c:	mov	x1, x22
   13e70:	ldr	x24, [x28, #24]
   13e74:	cbnz	x24, 13e8c <__sancov_default_options@@Base+0x13bc>
   13e78:	cbz	x1, 13d4c <__sancov_default_options@@Base+0x127c>
   13e7c:	mov	x0, #0x0                   	// #0
   13e80:	mov	x2, #0x1                   	// #1
   13e84:	str	xzr, [x1, #8]
   13e88:	b	13e2c <__sancov_default_options@@Base+0x135c>
   13e8c:	cmp	x24, #0x35
   13e90:	b.hi	14084 <__sancov_default_options@@Base+0x15b4>  // b.pmore
   13e94:	lsl	x5, x24, #10
   13e98:	add	x1, x26, x5
   13e9c:	ldr	x0, [x26, x5]
   13ea0:	cbz	x0, 1408c <__sancov_default_options@@Base+0x15bc>
   13ea4:	lsl	x24, x24, #7
   13ea8:	add	x2, x26, x5
   13eac:	add	x1, x24, x0
   13eb0:	sub	x0, x0, #0x1
   13eb4:	add	x1, x1, #0x2
   13eb8:	str	x0, [x26, x5]
   13ebc:	add	x24, x24, x0
   13ec0:	add	x0, x24, #0x4
   13ec4:	ldr	x3, [x26, x1, lsl #3]
   13ec8:	ldr	x1, [x2, #16]
   13ecc:	ldr	x2, [x4, #16]
   13ed0:	prfm	pldl1keep, [x3]
   13ed4:	add	x2, x2, x1
   13ed8:	ldr	x1, [x26, x0, lsl #3]
   13edc:	str	x2, [x4, #16]
   13ee0:	b	13e78 <__sancov_default_options@@Base+0x13a8>
   13ee4:	ldr	x3, [x25, #24]
   13ee8:	str	xzr, [x1]
   13eec:	add	x0, x0, #0x1
   13ef0:	cmp	x19, x20
   13ef4:	str	x1, [x3]
   13ef8:	str	x0, [x25, #8]
   13efc:	str	x1, [x25, #24]
   13f00:	b.hi	13e68 <__sancov_default_options@@Base+0x1398>  // b.pmore
   13f04:	mov	w0, #0x1                   	// #1
   13f08:	ldp	x23, x24, [sp, #32]
   13f0c:	ldp	x27, x28, [sp, #64]
   13f10:	b	13d58 <__sancov_default_options@@Base+0x1288>
   13f14:	add	x24, x21, #0x80, lsl #12
   13f18:	mov	w1, #0x1                   	// #1
   13f1c:	ldxrb	w0, [x24]
   13f20:	stxrb	w2, w1, [x24]
   13f24:	cbnz	w2, 13f1c <__sancov_default_options@@Base+0x144c>
   13f28:	dmb	ish
   13f2c:	tst	w0, #0xff
   13f30:	b.eq	13f44 <__sancov_default_options@@Base+0x1474>  // b.none
   13f34:	mov	x0, x24
   13f38:	str	x4, [sp, #104]
   13f3c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   13f40:	ldr	x4, [sp, #104]
   13f44:	ldr	x0, [x21, x20, lsl #3]
   13f48:	dmb	ish
   13f4c:	cbz	x0, 1405c <__sancov_default_options@@Base+0x158c>
   13f50:	dmb	ish
   13f54:	strb	wzr, [x24]
   13f58:	b	13bb8 <__sancov_default_options@@Base+0x10e8>
   13f5c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13f60:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13f64:	add	x2, x2, #0xa90
   13f68:	add	x0, x0, #0x6c8
   13f6c:	mov	x4, #0x0                   	// #0
   13f70:	mov	x3, #0x0                   	// #0
   13f74:	mov	w1, #0x126                 	// #294
   13f78:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13f7c:	mov	x3, x20
   13f80:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13f84:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13f88:	add	x2, x2, #0xb60
   13f8c:	add	x0, x0, #0xb80
   13f90:	mov	x4, #0x36                  	// #54
   13f94:	mov	w1, #0xa0                  	// #160
   13f98:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13f9c:	ldr	x4, [x25, #24]
   13fa0:	add	x2, x0, #0x1
   13fa4:	ldp	x23, x24, [sp, #32]
   13fa8:	mov	w0, #0x1                   	// #1
   13fac:	ldp	x27, x28, [sp, #64]
   13fb0:	str	xzr, [x1]
   13fb4:	str	x1, [x4]
   13fb8:	str	x2, [x25, #8]
   13fbc:	str	x1, [x25, #24]
   13fc0:	b	13d58 <__sancov_default_options@@Base+0x1288>
   13fc4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13fc8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   13fcc:	mov	x3, x19
   13fd0:	add	x2, x2, #0xab8
   13fd4:	add	x0, x0, #0x6c8
   13fd8:	mov	x4, #0x10000000            	// #268435456
   13fdc:	mov	w1, #0x116                 	// #278
   13fe0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13fe4:	mov	x3, x20
   13fe8:	mov	x2, x21
   13fec:	mov	x0, x26
   13ff0:	stp	x8, x4, [sp, #104]
   13ff4:	stp	x5, x9, [sp, #120]
   13ff8:	str	x7, [sp, #136]
   13ffc:	bl	141c0 <__sancov_default_options@@Base+0x16f0>
   14000:	tst	w0, #0xff
   14004:	b.eq	13d4c <__sancov_default_options@@Base+0x127c>  // b.none
   14008:	ldp	x5, x9, [sp, #120]
   1400c:	ldp	x8, x4, [sp, #104]
   14010:	ldr	x7, [sp, #136]
   14014:	ldr	x0, [x26, x5]
   14018:	b	13d0c <__sancov_default_options@@Base+0x123c>
   1401c:	mov	x4, x1
   14020:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14024:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14028:	add	x2, x2, #0xaf0
   1402c:	add	x0, x0, #0xb18
   14030:	mov	x3, #0x0                   	// #0
   14034:	mov	w1, #0x42                  	// #66
   14038:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1403c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14040:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14044:	add	x2, x2, #0x6b0
   14048:	add	x0, x0, #0x6c8
   1404c:	mov	x4, #0x0                   	// #0
   14050:	mov	x3, #0x0                   	// #0
   14054:	mov	w1, #0x169                 	// #361
   14058:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1405c:	mov	w2, #0x0                   	// #0
   14060:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14064:	mov	x0, #0x1000                	// #4096
   14068:	add	x1, x1, #0xae0
   1406c:	str	x4, [sp, #104]
   14070:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   14074:	dmb	ish
   14078:	str	x0, [x21, x20, lsl #3]
   1407c:	ldr	x4, [sp, #104]
   14080:	b	13f50 <__sancov_default_options@@Base+0x1480>
   14084:	mov	x3, x24
   14088:	b	13f80 <__sancov_default_options@@Base+0x14b0>
   1408c:	mov	x3, x24
   14090:	mov	x2, x21
   14094:	mov	x0, x26
   14098:	stp	x5, x4, [sp, #104]
   1409c:	bl	141c0 <__sancov_default_options@@Base+0x16f0>
   140a0:	tst	w0, #0xff
   140a4:	b.eq	13d4c <__sancov_default_options@@Base+0x127c>  // b.none
   140a8:	ldp	x5, x4, [sp, #104]
   140ac:	ldr	x0, [x26, x5]
   140b0:	b	13ea4 <__sancov_default_options@@Base+0x13d4>
   140b4:	nop
   140b8:	stp	x19, x20, [sp, #-80]!
   140bc:	mov	x20, x0
   140c0:	mov	x0, #0x2001                	// #8193
   140c4:	stp	x21, x22, [sp, #16]
   140c8:	add	x22, x3, x0
   140cc:	mov	x19, x3
   140d0:	lsl	x21, x22, #6
   140d4:	stp	x23, x24, [sp, #32]
   140d8:	add	x23, x20, x21
   140dc:	stp	x25, x26, [sp, #48]
   140e0:	mov	x25, x2
   140e4:	mov	x24, x1
   140e8:	mov	w1, #0x1                   	// #1
   140ec:	str	x30, [sp, #64]
   140f0:	ldxrb	w0, [x23]
   140f4:	stxrb	w2, w1, [x23]
   140f8:	cbnz	w2, 140f0 <__sancov_default_options@@Base+0x1620>
   140fc:	dmb	ish
   14100:	tst	w0, #0xff
   14104:	b.eq	14110 <__sancov_default_options@@Base+0x1640>  // b.none
   14108:	mov	x0, x23
   1410c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   14110:	add	x21, x21, #0x8
   14114:	add	x26, x20, x21
   14118:	ldr	x5, [x20, x21]
   1411c:	cbnz	x5, 14148 <__sancov_default_options@@Base+0x1678>
   14120:	mov	x3, x23
   14124:	mov	x2, x25
   14128:	mov	x1, x24
   1412c:	mov	x4, x19
   14130:	mov	x0, x20
   14134:	bl	13b30 <__sancov_default_options@@Base+0x1060>
   14138:	tst	w0, #0xff
   1413c:	b.eq	141b8 <__sancov_default_options@@Base+0x16e8>  // b.none
   14140:	ldr	x5, [x20, x21]
   14144:	cbz	x5, 14198 <__sancov_default_options@@Base+0x16c8>
   14148:	add	x4, x20, x19, lsl #6
   1414c:	add	x4, x4, #0x80, lsl #12
   14150:	ldr	x0, [x26, #8]
   14154:	ldr	x1, [x4, #80]
   14158:	ldr	x1, [x1]
   1415c:	str	x1, [x4, #80]
   14160:	cbz	x1, 14190 <__sancov_default_options@@Base+0x16c0>
   14164:	sub	x5, x5, #0x1
   14168:	str	x5, [x4, #72]
   1416c:	dmb	ish
   14170:	lsl	x22, x22, #6
   14174:	strb	wzr, [x20, x22]
   14178:	ldp	x21, x22, [sp, #16]
   1417c:	ldp	x23, x24, [sp, #32]
   14180:	ldp	x25, x26, [sp, #48]
   14184:	ldr	x30, [sp, #64]
   14188:	ldp	x19, x20, [sp], #80
   1418c:	ret
   14190:	str	xzr, [x4, #88]
   14194:	b	14164 <__sancov_default_options@@Base+0x1694>
   14198:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1419c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   141a0:	add	x2, x2, #0xbd0
   141a4:	add	x0, x0, #0xbe8
   141a8:	mov	x4, #0x0                   	// #0
   141ac:	mov	x3, #0x0                   	// #0
   141b0:	mov	w1, #0x40                  	// #64
   141b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   141b8:	mov	x0, #0x0                   	// #0
   141bc:	b	1416c <__sancov_default_options@@Base+0x169c>
   141c0:	stp	x19, x20, [sp, #-64]!
   141c4:	mov	x19, x0
   141c8:	ldr	x0, [x1, #8]
   141cc:	stp	x21, x22, [sp, #16]
   141d0:	mov	x21, x1
   141d4:	stp	x23, x24, [sp, #32]
   141d8:	mov	x22, x2
   141dc:	mov	x23, x3
   141e0:	str	x30, [sp, #48]
   141e4:	cbz	x0, 14328 <__sancov_default_options@@Base+0x1858>
   141e8:	mov	x3, #0xd800                	// #55296
   141ec:	add	x24, x19, x3
   141f0:	mov	x1, x24
   141f4:	mov	x3, x23
   141f8:	mov	x2, x19
   141fc:	mov	x0, x22
   14200:	bl	140b8 <__sancov_default_options@@Base+0x15e8>
   14204:	mov	x20, x0
   14208:	cbz	x0, 14310 <__sancov_default_options@@Base+0x1840>
   1420c:	ldr	x5, [x0, #8]
   14210:	cbz	x5, 14404 <__sancov_default_options@@Base+0x1934>
   14214:	add	x2, x0, #0x10
   14218:	add	x0, x21, #0x30
   1421c:	cmp	x2, x0
   14220:	sub	x1, x5, #0x1
   14224:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
   14228:	add	x0, x21, #0x20
   1422c:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
   14230:	b.ls	142f4 <__sancov_default_options@@Base+0x1824>  // b.plast
   14234:	lsr	x1, x5, #1
   14238:	mov	x4, #0x0                   	// #0
   1423c:	lsl	x1, x1, #4
   14240:	ldr	q0, [x2, x4]
   14244:	str	q0, [x0, x4]
   14248:	add	x4, x4, #0x10
   1424c:	cmp	x1, x4
   14250:	b.ne	14240 <__sancov_default_options@@Base+0x1770>  // b.any
   14254:	and	x4, x5, #0xfffffffffffffffe
   14258:	tbz	w5, #0, 14268 <__sancov_default_options@@Base+0x1798>
   1425c:	add	x1, x4, #0x2
   14260:	ldr	x1, [x20, x1, lsl #3]
   14264:	str	x1, [x0, x4, lsl #3]
   14268:	add	x23, x19, x23, lsl #10
   1426c:	str	x5, [x21]
   14270:	mov	w0, #0x1                   	// #1
   14274:	ldr	x21, [x23, #24]
   14278:	cbnz	x21, 14290 <__sancov_default_options@@Base+0x17c0>
   1427c:	ldp	x21, x22, [sp, #16]
   14280:	ldp	x23, x24, [sp, #32]
   14284:	ldr	x30, [sp, #48]
   14288:	ldp	x19, x20, [sp], #64
   1428c:	ret
   14290:	cmp	x21, #0x35
   14294:	b.hi	14524 <__sancov_default_options@@Base+0x1a54>  // b.pmore
   14298:	lsl	x23, x21, #10
   1429c:	add	x1, x19, x23
   142a0:	ldr	x2, [x1, #8]
   142a4:	cbz	x2, 1443c <__sancov_default_options@@Base+0x196c>
   142a8:	ldr	x0, [x19, x23]
   142ac:	cmp	x0, x2
   142b0:	b.eq	14424 <__sancov_default_options@@Base+0x1954>  // b.none
   142b4:	add	x2, x0, x21, lsl #7
   142b8:	add	x3, x19, x23
   142bc:	add	x2, x2, #0x4
   142c0:	add	x0, x0, #0x1
   142c4:	str	x0, [x19, x23]
   142c8:	mov	w0, #0x1                   	// #1
   142cc:	ldr	x1, [x24, #16]
   142d0:	str	x20, [x19, x2, lsl #3]
   142d4:	ldp	x21, x22, [sp, #16]
   142d8:	ldr	x2, [x3, #16]
   142dc:	ldr	x30, [sp, #48]
   142e0:	sub	x1, x1, x2
   142e4:	str	x1, [x24, #16]
   142e8:	ldp	x23, x24, [sp, #32]
   142ec:	ldp	x19, x20, [sp], #64
   142f0:	ret
   142f4:	mov	x1, #0x0                   	// #0
   142f8:	ldr	x3, [x2, x1, lsl #3]
   142fc:	str	x3, [x0, x1, lsl #3]
   14300:	add	x1, x1, #0x1
   14304:	cmp	x5, x1
   14308:	b.ne	142f8 <__sancov_default_options@@Base+0x1828>  // b.any
   1430c:	b	14268 <__sancov_default_options@@Base+0x1798>
   14310:	mov	w0, #0x0                   	// #0
   14314:	ldp	x21, x22, [sp, #16]
   14318:	ldp	x23, x24, [sp, #32]
   1431c:	ldr	x30, [sp, #48]
   14320:	ldp	x19, x20, [sp], #64
   14324:	ret
   14328:	mov	x5, #0x1                   	// #1
   1432c:	mov	x11, x5
   14330:	mov	x12, #0x7c                  	// #124
   14334:	mov	x10, #0x14                  	// #20
   14338:	mov	x9, #0x100                 	// #256
   1433c:	mov	w8, #0x4000                	// #16384
   14340:	mov	x3, #0x3e                  	// #62
   14344:	nop
   14348:	add	x2, x19, x5, lsl #10
   1434c:	lsl	x4, x5, #4
   14350:	mov	x6, x2
   14354:	mov	x0, #0x14                  	// #20
   14358:	mov	x1, x5
   1435c:	add	x5, x5, #0x1
   14360:	stp	x12, x4, [x2, #8]
   14364:	cmp	x5, #0x36
   14368:	str	x0, [x6, #24]
   1436c:	b.eq	141e8 <__sancov_default_options@@Base+0x1718>  // b.none
   14370:	cmp	x5, #0x35
   14374:	b.eq	143e4 <__sancov_default_options@@Base+0x1914>  // b.none
   14378:	cmp	x5, #0x10
   1437c:	b.ls	14348 <__sancov_default_options@@Base+0x1878>  // b.plast
   14380:	sub	x4, x1, #0xf
   14384:	add	x6, x6, #0x400
   14388:	and	x0, x4, #0x3
   1438c:	mov	x1, x5
   14390:	lsr	x4, x4, #2
   14394:	add	x5, x5, #0x1
   14398:	lsl	x4, x9, x4
   1439c:	lsr	x7, x4, #2
   143a0:	madd	x7, x7, x0, x4
   143a4:	str	x7, [x6, #16]
   143a8:	udiv	w4, w8, w7
   143ac:	cmp	x4, #0x0
   143b0:	csel	x4, x4, x11, ne  // ne = any
   143b4:	cmp	x4, #0x3e
   143b8:	csel	x4, x4, x3, ls  // ls = plast
   143bc:	add	x0, x4, #0x2
   143c0:	lsl	x4, x4, #1
   143c4:	str	x4, [x6, #8]
   143c8:	cmp	x7, x0, lsl #3
   143cc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   143d0:	str	x0, [x6, #24]
   143d4:	cmp	x5, #0x36
   143d8:	b.eq	141e8 <__sancov_default_options@@Base+0x1718>  // b.none
   143dc:	cmp	x5, #0x35
   143e0:	b.ne	14378 <__sancov_default_options@@Base+0x18a8>  // b.any
   143e4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   143e8:	ldr	q0, [x0, #3824]
   143ec:	mov	x0, #0xd400                	// #54272
   143f0:	add	x1, x19, x0
   143f4:	add	x0, x19, #0x8, lsl #12
   143f8:	stur	q0, [x1, #8]
   143fc:	str	xzr, [x0, #21528]
   14400:	b	141e8 <__sancov_default_options@@Base+0x1718>
   14404:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14408:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1440c:	add	x2, x2, #0x6b0
   14410:	add	x0, x0, #0xb80
   14414:	mov	x4, #0x0                   	// #0
   14418:	mov	x3, #0x0                   	// #0
   1441c:	mov	w1, #0xf6                  	// #246
   14420:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14424:	mov	x0, x19
   14428:	mov	x2, x22
   1442c:	mov	x3, x21
   14430:	bl	149e0 <__sancov_default_options@@Base+0x1f10>
   14434:	ldr	x0, [x19, x23]
   14438:	b	142b4 <__sancov_default_options@@Base+0x17e4>
   1443c:	mov	x2, #0x1                   	// #1
   14440:	mov	x11, x2
   14444:	mov	x12, #0x7c                  	// #124
   14448:	mov	x10, #0x14                  	// #20
   1444c:	mov	x9, #0x100                 	// #256
   14450:	mov	w8, #0x4000                	// #16384
   14454:	mov	x7, #0x3e                  	// #62
   14458:	add	x5, x19, x2, lsl #10
   1445c:	lsl	x6, x2, #4
   14460:	mov	x4, x5
   14464:	mov	x0, #0x14                  	// #20
   14468:	mov	x3, x2
   1446c:	add	x2, x2, #0x1
   14470:	stp	x12, x6, [x5, #8]
   14474:	cmp	x2, #0x36
   14478:	str	x0, [x4, #24]
   1447c:	b.eq	144ec <__sancov_default_options@@Base+0x1a1c>  // b.none
   14480:	cmp	x2, #0x35
   14484:	b.eq	144f4 <__sancov_default_options@@Base+0x1a24>  // b.none
   14488:	cmp	x2, #0x10
   1448c:	b.ls	14458 <__sancov_default_options@@Base+0x1988>  // b.plast
   14490:	sub	x0, x3, #0xf
   14494:	add	x4, x4, #0x400
   14498:	and	x6, x0, #0x3
   1449c:	mov	x3, x2
   144a0:	lsr	x0, x0, #2
   144a4:	add	x2, x2, #0x1
   144a8:	lsl	x0, x9, x0
   144ac:	lsr	x5, x0, #2
   144b0:	madd	x5, x5, x6, x0
   144b4:	str	x5, [x4, #16]
   144b8:	udiv	w0, w8, w5
   144bc:	cmp	x0, #0x0
   144c0:	csel	x0, x0, x11, ne  // ne = any
   144c4:	cmp	x0, #0x3e
   144c8:	csel	x0, x0, x7, ls  // ls = plast
   144cc:	add	x6, x0, #0x2
   144d0:	lsl	x0, x0, #1
   144d4:	str	x0, [x4, #8]
   144d8:	cmp	x5, x6, lsl #3
   144dc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   144e0:	str	x0, [x4, #24]
   144e4:	cmp	x2, #0x36
   144e8:	b.ne	14480 <__sancov_default_options@@Base+0x19b0>  // b.any
   144ec:	ldr	x2, [x1, #8]
   144f0:	b	142a8 <__sancov_default_options@@Base+0x17d8>
   144f4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   144f8:	mov	x2, #0xd400                	// #54272
   144fc:	add	x2, x19, x2
   14500:	ldr	q0, [x0, #3824]
   14504:	add	x0, x19, #0x8, lsl #12
   14508:	stur	q0, [x2, #8]
   1450c:	str	xzr, [x0, #21528]
   14510:	ldr	x0, [x19, x23]
   14514:	ldr	x2, [x1, #8]
   14518:	cmp	x0, x2
   1451c:	b.ne	142b4 <__sancov_default_options@@Base+0x17e4>  // b.any
   14520:	b	14424 <__sancov_default_options@@Base+0x1954>
   14524:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14528:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1452c:	mov	x3, x21
   14530:	add	x2, x2, #0xb60
   14534:	add	x0, x0, #0xb80
   14538:	mov	x4, #0x36                  	// #54
   1453c:	mov	w1, #0xaf                  	// #175
   14540:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14544:	nop
   14548:	stp	x19, x20, [sp, #-80]!
   1454c:	cmp	x2, #0x0
   14550:	stp	x21, x22, [sp, #16]
   14554:	csinc	x22, x2, xzr, ne  // ne = any
   14558:	mov	x21, x1
   1455c:	str	x30, [sp, #64]
   14560:	adds	x1, x3, x22
   14564:	b.cs	149b8 <__sancov_default_options@@Base+0x1ee8>  // b.hs, b.nlast
   14568:	stp	x23, x24, [sp, #32]
   1456c:	mov	x19, x3
   14570:	mov	x23, x0
   14574:	cmp	x3, #0x8
   14578:	b.hi	147c0 <__sancov_default_options@@Base+0x1cf0>  // b.pmore
   1457c:	cmp	x2, #0x20, lsl #12
   14580:	b.hi	14644 <__sancov_default_options@@Base+0x1b74>  // b.pmore
   14584:	cmp	x22, #0x100
   14588:	b.ls	147f4 <__sancov_default_options@@Base+0x1d24>  // b.plast
   1458c:	clz	x3, x22
   14590:	mov	w20, #0x3f                  	// #63
   14594:	sub	w20, w20, w3
   14598:	mov	w3, #0x1                   	// #1
   1459c:	sub	w1, w20, #0x2
   145a0:	lsl	w3, w3, w1
   145a4:	sub	w3, w3, #0x1
   145a8:	tst	x3, x22
   145ac:	lsr	x3, x22, x1
   145b0:	and	x3, x3, #0x3
   145b4:	cinc	x3, x3, ne  // ne = any
   145b8:	add	x20, x3, w20, sxtw #2
   145bc:	sub	x20, x20, #0x10
   145c0:	cmp	x20, #0x35
   145c4:	b.hi	14844 <__sancov_default_options@@Base+0x1d74>  // b.pmore
   145c8:	lsl	x22, x20, #10
   145cc:	add	x1, x21, x22
   145d0:	ldr	x3, [x21, x22]
   145d4:	cbz	x3, 148d8 <__sancov_default_options@@Base+0x1e08>
   145d8:	lsl	x20, x20, #7
   145dc:	add	x1, x21, x22
   145e0:	add	x0, x20, x3
   145e4:	mov	x2, #0xd800                	// #55296
   145e8:	add	x0, x0, #0x2
   145ec:	sub	x3, x3, #0x1
   145f0:	add	x2, x21, x2
   145f4:	str	x3, [x21, x22]
   145f8:	add	x20, x20, x3
   145fc:	ldr	x3, [x21, x0, lsl #3]
   14600:	add	x20, x20, #0x4
   14604:	ldr	x0, [x1, #16]
   14608:	ldr	x1, [x2, #16]
   1460c:	prfm	pldl1keep, [x3]
   14610:	add	x1, x1, x0
   14614:	ldr	x0, [x21, x20, lsl #3]
   14618:	str	x1, [x2, #16]
   1461c:	cmp	x19, #0x8
   14620:	b.ls	14630 <__sancov_default_options@@Base+0x1b60>  // b.plast
   14624:	sub	x19, x19, #0x1
   14628:	ands	x3, x0, x19
   1462c:	b.ne	14898 <__sancov_default_options@@Base+0x1dc8>  // b.any
   14630:	ldp	x23, x24, [sp, #32]
   14634:	ldp	x21, x22, [sp, #16]
   14638:	ldr	x30, [sp, #64]
   1463c:	ldp	x19, x20, [sp], #80
   14640:	ret
   14644:	stp	x25, x26, [sp, #48]
   14648:	sub	x24, x3, #0x1
   1464c:	tst	x3, x24
   14650:	b.ne	148b8 <__sancov_default_options@@Base+0x1de8>  // b.any
   14654:	add	x25, x23, #0x80, lsl #12
   14658:	add	x25, x25, #0xc00
   1465c:	ldr	x2, [x25, #448]
   14660:	sub	x0, x2, #0x1
   14664:	tst	x2, x0
   14668:	b.ne	14834 <__sancov_default_options@@Base+0x1d64>  // b.any
   1466c:	add	x20, x22, x0
   14670:	neg	x0, x2
   14674:	and	x20, x20, x0
   14678:	cmp	x19, x2
   1467c:	add	x20, x20, x2
   14680:	add	x0, x20, x19
   14684:	csel	x20, x0, x20, hi  // hi = pmore
   14688:	cmp	x22, x20
   1468c:	b.hi	14868 <__sancov_default_options@@Base+0x1d98>  // b.pmore
   14690:	adrp	x1, 6d000 <_Unwind_Backtrace@GCC_3.3>
   14694:	mov	x0, x20
   14698:	ldr	x1, [x1, #960]
   1469c:	bl	20160 <__sanitizer_set_report_fd@@Base+0x6898>
   146a0:	cbz	x0, 148f8 <__sancov_default_options@@Base+0x1e28>
   146a4:	ldr	x1, [x25, #448]
   146a8:	sub	x2, x1, #0x1
   146ac:	tst	x0, x2
   146b0:	b.ne	14908 <__sancov_default_options@@Base+0x1e38>  // b.any
   146b4:	add	x21, x0, x1
   146b8:	ands	x3, x24, x21
   146bc:	b.eq	146d0 <__sancov_default_options@@Base+0x1c00>  // b.none
   146c0:	add	x21, x19, x21
   146c4:	sub	x21, x21, x3
   146c8:	tst	x24, x21
   146cc:	b.ne	14928 <__sancov_default_options@@Base+0x1e58>  // b.any
   146d0:	tst	x21, x2
   146d4:	b.ne	14948 <__sancov_default_options@@Base+0x1e78>  // b.any
   146d8:	add	x3, x21, x22
   146dc:	cmp	x0, x3
   146e0:	b.hi	14968 <__sancov_default_options@@Base+0x1e98>  // b.pmore
   146e4:	add	x4, x0, x20
   146e8:	cmp	x4, x3
   146ec:	b.cc	14984 <__sancov_default_options@@Base+0x1eb4>  // b.lo, b.ul, b.last
   146f0:	sub	x24, x21, x1
   146f4:	add	x26, x23, #0xc1, lsl #12
   146f8:	mov	w1, #0x1                   	// #1
   146fc:	stp	x0, x20, [x24]
   14700:	str	x22, [x24, #16]
   14704:	ldxrb	w0, [x26]
   14708:	stxrb	w2, w1, [x26]
   1470c:	cbnz	w2, 14704 <__sancov_default_options@@Base+0x1c34>
   14710:	dmb	ish
   14714:	tst	w0, #0xff
   14718:	b.eq	14724 <__sancov_default_options@@Base+0x1c54>  // b.none
   1471c:	mov	x0, x26
   14720:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   14724:	add	x25, x25, #0x1c0
   14728:	mov	x0, #0x7fff                	// #32767
   1472c:	add	x1, x25, #0x40, lsl #12
   14730:	ldr	x3, [x1, #16]
   14734:	cmp	x3, x0
   14738:	b.hi	1499c <__sancov_default_options@@Base+0x1ecc>  // b.pmore
   1473c:	clz	x0, x20
   14740:	mov	w2, #0x3f                  	// #63
   14744:	sub	w2, w2, w0
   14748:	add	x5, x3, #0x1
   1474c:	ldp	x0, x4, [x1, #48]
   14750:	add	x23, x23, w2, sxtw #3
   14754:	ldr	x6, [x25, #8]
   14758:	str	x5, [x1, #16]
   1475c:	ldr	x5, [x1, #32]
   14760:	str	x3, [x24, #24]
   14764:	add	x0, x20, x0
   14768:	add	x23, x23, #0xc0, lsl #12
   1476c:	cmp	x4, x0
   14770:	str	x24, [x6, x3, lsl #3]
   14774:	csel	x4, x4, x0, cs  // cs = hs, nlast
   14778:	add	x5, x5, #0x1
   1477c:	strb	wzr, [x1, #24]
   14780:	str	x5, [x1, #32]
   14784:	stp	x0, x4, [x1, #48]
   14788:	ldr	x1, [x23, #3584]
   1478c:	ldr	x0, [x26, #24]
   14790:	add	x1, x1, #0x1
   14794:	str	x1, [x23, #3584]
   14798:	add	x0, x20, x0
   1479c:	str	x0, [x26, #24]
   147a0:	ldr	x0, [x26, #32]
   147a4:	add	x20, x20, x0
   147a8:	str	x20, [x26, #32]
   147ac:	dmb	ish
   147b0:	strb	wzr, [x26]
   147b4:	mov	x0, x21
   147b8:	ldp	x25, x26, [sp, #48]
   147bc:	b	1461c <__sancov_default_options@@Base+0x1b4c>
   147c0:	sub	x24, x3, #0x1
   147c4:	tst	x3, x24
   147c8:	b.ne	14830 <__sancov_default_options@@Base+0x1d60>  // b.any
   147cc:	sub	x3, x1, #0x1
   147d0:	neg	x1, x19
   147d4:	cmp	x19, #0x20, lsl #12
   147d8:	and	x1, x3, x1
   147dc:	mov	x0, #0x20000               	// #131072
   147e0:	ccmp	x1, x0, #0x2, ls  // ls = plast
   147e4:	b.hi	14828 <__sancov_default_options@@Base+0x1d58>  // b.pmore
   147e8:	mov	x22, x1
   147ec:	cmp	x22, #0x100
   147f0:	b.hi	1458c <__sancov_default_options@@Base+0x1abc>  // b.pmore
   147f4:	add	x20, x22, #0xf
   147f8:	cmp	xzr, x20, lsr #4
   147fc:	lsr	x20, x20, #4
   14800:	b.ne	145c8 <__sancov_default_options@@Base+0x1af8>  // b.any
   14804:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14808:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1480c:	add	x2, x2, #0xc88
   14810:	add	x0, x0, #0xb80
   14814:	mov	x4, #0x0                   	// #0
   14818:	mov	x3, #0x0                   	// #0
   1481c:	mov	w1, #0x9f                  	// #159
   14820:	stp	x25, x26, [sp, #48]
   14824:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14828:	stp	x25, x26, [sp, #48]
   1482c:	b	14654 <__sancov_default_options@@Base+0x1b84>
   14830:	stp	x25, x26, [sp, #48]
   14834:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   14838:	add	x0, x0, #0x6e8
   1483c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   14840:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   14844:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14848:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1484c:	mov	x3, x20
   14850:	add	x2, x2, #0xb60
   14854:	add	x0, x0, #0xb80
   14858:	mov	x4, #0x36                  	// #54
   1485c:	mov	w1, #0xa0                  	// #160
   14860:	stp	x25, x26, [sp, #48]
   14864:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14868:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1486c:	mov	x3, x19
   14870:	mov	x2, x20
   14874:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14878:	ldr	x1, [x1, #4008]
   1487c:	add	x0, x0, #0xcc8
   14880:	ldr	x1, [x1]
   14884:	bl	22d00 <OnPrint@@Base+0x398>
   14888:	mov	x0, #0x0                   	// #0
   1488c:	ldp	x23, x24, [sp, #32]
   14890:	ldp	x25, x26, [sp, #48]
   14894:	b	14634 <__sancov_default_options@@Base+0x1b64>
   14898:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1489c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   148a0:	add	x2, x2, #0xe10
   148a4:	add	x0, x0, #0xe50
   148a8:	mov	x4, #0x0                   	// #0
   148ac:	mov	w1, #0x42                  	// #66
   148b0:	stp	x25, x26, [sp, #48]
   148b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   148b8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   148bc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   148c0:	add	x2, x2, #0xca0
   148c4:	add	x0, x0, #0x728
   148c8:	mov	x4, #0x0                   	// #0
   148cc:	mov	x3, #0x0                   	// #0
   148d0:	mov	w1, #0x53                  	// #83
   148d4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   148d8:	mov	x2, x23
   148dc:	mov	x3, x20
   148e0:	mov	x0, x21
   148e4:	bl	141c0 <__sancov_default_options@@Base+0x16f0>
   148e8:	tst	w0, #0xff
   148ec:	b.eq	148fc <__sancov_default_options@@Base+0x1e2c>  // b.none
   148f0:	ldr	x3, [x21, x22]
   148f4:	b	145d8 <__sancov_default_options@@Base+0x1b08>
   148f8:	ldp	x25, x26, [sp, #48]
   148fc:	mov	x0, #0x0                   	// #0
   14900:	ldp	x23, x24, [sp, #32]
   14904:	b	14634 <__sancov_default_options@@Base+0x1b64>
   14908:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1490c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14910:	add	x2, x2, #0xd30
   14914:	add	x0, x0, #0x728
   14918:	mov	x4, #0x0                   	// #0
   1491c:	mov	x3, #0x0                   	// #0
   14920:	mov	w1, #0x62                  	// #98
   14924:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14928:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1492c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14930:	add	x2, x2, #0xd60
   14934:	add	x0, x0, #0x728
   14938:	mov	x4, #0x0                   	// #0
   1493c:	mov	x3, #0x0                   	// #0
   14940:	mov	w1, #0x68                  	// #104
   14944:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14948:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1494c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14950:	add	x2, x2, #0xd88
   14954:	add	x0, x0, #0x728
   14958:	mov	x4, #0x0                   	// #0
   1495c:	mov	x3, #0x0                   	// #0
   14960:	mov	w1, #0x69                  	// #105
   14964:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14968:	mov	x4, x0
   1496c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14970:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14974:	add	x2, x2, #0xdb0
   14978:	add	x0, x0, #0x728
   1497c:	mov	w1, #0x6a                  	// #106
   14980:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14984:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14988:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1498c:	add	x2, x2, #0xdd0
   14990:	add	x0, x0, #0x728
   14994:	mov	w1, #0x6b                  	// #107
   14998:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1499c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   149a0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   149a4:	add	x2, x2, #0xdf0
   149a8:	add	x0, x0, #0x728
   149ac:	mov	x4, #0x8000                	// #32768
   149b0:	mov	w1, #0x15                  	// #21
   149b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   149b8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   149bc:	mov	x2, x22
   149c0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   149c4:	add	x0, x0, #0xc28
   149c8:	ldr	x1, [x1, #4008]
   149cc:	ldr	x1, [x1]
   149d0:	bl	22d00 <OnPrint@@Base+0x398>
   149d4:	mov	x0, #0x0                   	// #0
   149d8:	b	14634 <__sancov_default_options@@Base+0x1b64>
   149dc:	nop
   149e0:	stp	x19, x20, [sp, #-80]!
   149e4:	stp	x23, x24, [sp, #32]
   149e8:	mov	x23, x1
   149ec:	add	x1, x0, x3, lsl #10
   149f0:	stp	x25, x26, [sp, #48]
   149f4:	mov	x24, x3
   149f8:	mov	x25, x2
   149fc:	ldp	x20, x19, [x23]
   14a00:	stp	x21, x22, [sp, #16]
   14a04:	ldr	x26, [x1, #24]
   14a08:	str	x30, [sp, #72]
   14a0c:	lsr	x19, x19, #1
   14a10:	cmp	x19, x20
   14a14:	csel	x19, x19, x20, ls  // ls = plast
   14a18:	sub	x21, x20, x19
   14a1c:	cbnz	x26, 14ad4 <__sancov_default_options@@Base+0x2004>
   14a20:	add	x0, x21, #0x4
   14a24:	ldr	x2, [x23, x0, lsl #3]
   14a28:	cbz	x2, 14b60 <__sancov_default_options@@Base+0x2090>
   14a2c:	add	x5, x21, #0x4
   14a30:	str	x19, [x2, #8]
   14a34:	add	x5, x23, x5, lsl #3
   14a38:	cbz	x19, 14aa8 <__sancov_default_options@@Base+0x1fd8>
   14a3c:	add	x0, x20, #0x6
   14a40:	add	x4, x20, #0x4
   14a44:	sub	x0, x0, x19
   14a48:	sub	x4, x4, x19
   14a4c:	add	x7, x2, #0x10
   14a50:	add	x1, x2, #0x20
   14a54:	add	x0, x23, x0, lsl #3
   14a58:	add	x4, x23, x4, lsl #3
   14a5c:	cmp	x7, x0
   14a60:	sub	x0, x19, #0x1
   14a64:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
   14a68:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   14a6c:	b.ls	14b40 <__sancov_default_options@@Base+0x2070>  // b.plast
   14a70:	lsr	x6, x19, #1
   14a74:	mov	x0, #0x0                   	// #0
   14a78:	lsl	x6, x6, #4
   14a7c:	nop
   14a80:	ldr	q0, [x4, x0]
   14a84:	str	q0, [x7, x0]
   14a88:	add	x0, x0, #0x10
   14a8c:	cmp	x0, x6
   14a90:	b.ne	14a80 <__sancov_default_options@@Base+0x1fb0>  // b.any
   14a94:	and	x0, x19, #0xfffffffffffffffe
   14a98:	tbz	w19, #0, 14aa8 <__sancov_default_options@@Base+0x1fd8>
   14a9c:	add	x4, x0, #0x2
   14aa0:	ldr	x0, [x5, x0, lsl #3]
   14aa4:	str	x0, [x2, x4, lsl #3]
   14aa8:	ldr	x3, [x23]
   14aac:	mov	x0, x25
   14ab0:	ldp	x21, x22, [sp, #16]
   14ab4:	sub	x19, x3, x19
   14ab8:	ldp	x25, x26, [sp, #48]
   14abc:	mov	x1, x24
   14ac0:	ldr	x30, [sp, #72]
   14ac4:	str	x19, [x23]
   14ac8:	ldp	x23, x24, [sp, #32]
   14acc:	ldp	x19, x20, [sp], #80
   14ad0:	b	13a50 <__sancov_default_options@@Base+0xf80>
   14ad4:	str	x27, [sp, #64]
   14ad8:	cmp	x26, #0x35
   14adc:	b.hi	14b80 <__sancov_default_options@@Base+0x20b0>  // b.pmore
   14ae0:	lsl	x27, x26, #10
   14ae4:	mov	x22, x0
   14ae8:	add	x1, x0, x27
   14aec:	ldr	x3, [x0, x27]
   14af0:	cbz	x3, 14ba0 <__sancov_default_options@@Base+0x20d0>
   14af4:	lsl	x26, x26, #7
   14af8:	add	x2, x22, x27
   14afc:	add	x0, x26, x3
   14b00:	mov	x1, #0xd800                	// #55296
   14b04:	add	x0, x0, #0x2
   14b08:	sub	x3, x3, #0x1
   14b0c:	add	x1, x22, x1
   14b10:	str	x3, [x22, x27]
   14b14:	add	x26, x26, x3
   14b18:	ldr	x3, [x22, x0, lsl #3]
   14b1c:	add	x26, x26, #0x4
   14b20:	ldr	x2, [x2, #16]
   14b24:	ldr	x0, [x1, #16]
   14b28:	prfm	pldl1keep, [x3]
   14b2c:	add	x0, x0, x2
   14b30:	ldr	x2, [x22, x26, lsl #3]
   14b34:	ldr	x27, [sp, #64]
   14b38:	str	x0, [x1, #16]
   14b3c:	b	14a28 <__sancov_default_options@@Base+0x1f58>
   14b40:	mov	x0, #0x0                   	// #0
   14b44:	nop
   14b48:	ldr	x1, [x5, x0, lsl #3]
   14b4c:	str	x1, [x7, x0, lsl #3]
   14b50:	add	x0, x0, #0x1
   14b54:	cmp	x19, x0
   14b58:	b.ne	14b48 <__sancov_default_options@@Base+0x2078>  // b.any
   14b5c:	b	14aa8 <__sancov_default_options@@Base+0x1fd8>
   14b60:	str	x27, [sp, #64]
   14b64:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14b68:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14b6c:	add	x0, x0, #0xea0
   14b70:	ldr	x1, [x1, #4008]
   14b74:	ldr	x1, [x1]
   14b78:	bl	22d00 <OnPrint@@Base+0x398>
   14b7c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   14b80:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14b84:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14b88:	mov	x3, x26
   14b8c:	add	x2, x2, #0xb60
   14b90:	add	x0, x0, #0xb80
   14b94:	mov	x4, #0x36                  	// #54
   14b98:	mov	w1, #0xa0                  	// #160
   14b9c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14ba0:	mov	x3, x26
   14ba4:	bl	141c0 <__sancov_default_options@@Base+0x16f0>
   14ba8:	tst	w0, #0xff
   14bac:	b.eq	14b64 <__sancov_default_options@@Base+0x2094>  // b.none
   14bb0:	ldr	x3, [x22, x27]
   14bb4:	b	14af4 <__sancov_default_options@@Base+0x2024>
   14bb8:	stp	x19, x20, [sp, #-64]!
   14bbc:	stp	x23, x24, [sp, #32]
   14bc0:	mov	x23, x3
   14bc4:	mov	x24, x4
   14bc8:	str	x30, [sp, #56]
   14bcc:	cbz	x2, 14e78 <__sancov_default_options@@Base+0x23a8>
   14bd0:	stp	x21, x22, [sp, #16]
   14bd4:	mov	x19, x2
   14bd8:	mov	x20, x0
   14bdc:	mov	x22, x1
   14be0:	cbz	x3, 14e90 <__sancov_default_options@@Base+0x23c0>
   14be4:	str	x25, [sp, #48]
   14be8:	mov	x0, #0xffffffffffff        	// #281474976710655
   14bec:	cmp	x2, x0
   14bf0:	b.ls	14e08 <__sancov_default_options@@Base+0x2338>  // b.plast
   14bf4:	add	x25, x20, #0xc1, lsl #12
   14bf8:	mov	w2, #0x1                   	// #1
   14bfc:	ldxrb	w1, [x25]
   14c00:	stxrb	w0, w2, [x25]
   14c04:	cbnz	w0, 14bfc <__sancov_default_options@@Base+0x212c>
   14c08:	dmb	ish
   14c0c:	tst	w1, #0xff
   14c10:	b.eq	14c1c <__sancov_default_options@@Base+0x214c>  // b.none
   14c14:	mov	x0, x25
   14c18:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   14c1c:	add	x21, x20, #0x80, lsl #12
   14c20:	add	x21, x21, #0xc00
   14c24:	add	x1, x21, #0x1c0
   14c28:	add	x2, x1, #0x40, lsl #12
   14c2c:	ldr	x7, [x2, #16]
   14c30:	cbz	x7, 14e50 <__sancov_default_options@@Base+0x2380>
   14c34:	ldr	x6, [x1, #8]
   14c38:	mov	x3, #0x0                   	// #0
   14c3c:	add	x8, x6, x7, lsl #3
   14c40:	ldr	x7, [x6]
   14c44:	cmp	x19, x7
   14c48:	b.cc	14c5c <__sancov_default_options@@Base+0x218c>  // b.lo, b.ul, b.last
   14c4c:	sub	x2, x19, x3
   14c50:	sub	x1, x19, x7
   14c54:	cmp	x2, x1
   14c58:	csel	x3, x3, x7, ls  // ls = plast
   14c5c:	add	x6, x6, #0x8
   14c60:	cmp	x6, x8
   14c64:	b.ne	14c40 <__sancov_default_options@@Base+0x2170>  // b.any
   14c68:	cbz	x3, 14e50 <__sancov_default_options@@Base+0x2380>
   14c6c:	ldr	x4, [x3]
   14c70:	cmp	x4, x3
   14c74:	b.hi	1513c <__sancov_default_options@@Base+0x266c>  // b.pmore
   14c78:	ldr	x0, [x3, #8]
   14c7c:	add	x4, x4, x0
   14c80:	cmp	x4, x3
   14c84:	b.ls	15154 <__sancov_default_options@@Base+0x2684>  // b.plast
   14c88:	cmp	x19, x3
   14c8c:	b.cc	1516c <__sancov_default_options@@Base+0x269c>  // b.lo, b.ul, b.last
   14c90:	cmp	x4, x19
   14c94:	b.ls	14e50 <__sancov_default_options@@Base+0x2380>  // b.plast
   14c98:	ldr	x0, [x21, #448]
   14c9c:	sub	x1, x0, #0x1
   14ca0:	tst	x1, x3
   14ca4:	b.ne	150b0 <__sancov_default_options@@Base+0x25e0>  // b.any
   14ca8:	dmb	ish
   14cac:	strb	wzr, [x25]
   14cb0:	cmn	x0, x3
   14cb4:	b.eq	14e58 <__sancov_default_options@@Base+0x2388>  // b.none
   14cb8:	mov	x0, #0xffffffffffff        	// #281474976710655
   14cbc:	cmp	x19, x0
   14cc0:	b.ls	14ff8 <__sancov_default_options@@Base+0x2528>  // b.plast
   14cc4:	ldr	x1, [x21, #448]
   14cc8:	sub	x0, x1, #0x1
   14ccc:	tst	x19, x0
   14cd0:	b.ne	15090 <__sancov_default_options@@Base+0x25c0>  // b.any
   14cd4:	sub	x2, x19, x1
   14cd8:	tst	x1, x0
   14cdc:	ldr	x5, [x2, #16]
   14ce0:	b.ne	15188 <__sancov_default_options@@Base+0x26b8>  // b.any
   14ce4:	add	x5, x5, x0
   14ce8:	neg	x0, x1
   14cec:	and	x0, x5, x0
   14cf0:	cmp	x0, x23
   14cf4:	csel	x21, x0, x23, ls  // ls = plast
   14cf8:	mov	x2, x23
   14cfc:	mov	x3, x24
   14d00:	mov	x1, x22
   14d04:	mov	x0, x20
   14d08:	bl	14548 <__sancov_default_options@@Base+0x1a78>
   14d0c:	mov	x23, x0
   14d10:	cbz	x0, 14d20 <__sancov_default_options@@Base+0x2250>
   14d14:	mov	x2, x21
   14d18:	mov	x1, x19
   14d1c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   14d20:	mov	x0, #0xffffffffffff        	// #281474976710655
   14d24:	cmp	x19, x0
   14d28:	b.ls	15004 <__sancov_default_options@@Base+0x2534>  // b.plast
   14d2c:	add	x21, x20, #0x80, lsl #12
   14d30:	add	x21, x21, #0xc00
   14d34:	ldr	x4, [x21, #448]
   14d38:	sub	x0, x4, #0x1
   14d3c:	tst	x19, x0
   14d40:	b.ne	15090 <__sancov_default_options@@Base+0x25c0>  // b.any
   14d44:	sub	x19, x19, x4
   14d48:	add	x25, x20, #0xc1, lsl #12
   14d4c:	mov	w1, #0x1                   	// #1
   14d50:	ldxrb	w0, [x25]
   14d54:	stxrb	w2, w1, [x25]
   14d58:	cbnz	w2, 14d50 <__sancov_default_options@@Base+0x2280>
   14d5c:	dmb	ish
   14d60:	tst	w0, #0xff
   14d64:	b.eq	14d70 <__sancov_default_options@@Base+0x22a0>  // b.none
   14d68:	mov	x0, x25
   14d6c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   14d70:	ldr	x0, [x19, #24]
   14d74:	add	x21, x21, #0x1c0
   14d78:	ldr	x2, [x21, #8]
   14d7c:	ldr	x3, [x2, x0, lsl #3]
   14d80:	cmp	x3, x19
   14d84:	b.ne	15198 <__sancov_default_options@@Base+0x26c8>  // b.any
   14d88:	add	x21, x21, #0x40, lsl #12
   14d8c:	ldr	x4, [x21, #16]
   14d90:	cmp	x0, x4
   14d94:	b.cs	151b4 <__sancov_default_options@@Base+0x26e4>  // b.hs, b.nlast
   14d98:	sub	x4, x4, #0x1
   14d9c:	ldr	x3, [x19, #8]
   14da0:	ldr	x5, [x2, x4, lsl #3]
   14da4:	str	x4, [x21, #16]
   14da8:	str	x5, [x2, x0, lsl #3]
   14dac:	ldp	x4, x2, [x21, #40]
   14db0:	str	x0, [x5, #24]
   14db4:	ldr	x0, [x25, #24]
   14db8:	strb	wzr, [x21, #24]
   14dbc:	sub	x0, x0, x3
   14dc0:	sub	x2, x2, x3
   14dc4:	add	x4, x4, #0x1
   14dc8:	stp	x4, x2, [x21, #40]
   14dcc:	str	x0, [x25, #24]
   14dd0:	ldr	x0, [x25, #32]
   14dd4:	sub	x0, x0, x3
   14dd8:	str	x0, [x25, #32]
   14ddc:	dmb	ish
   14de0:	strb	wzr, [x25]
   14de4:	ldp	x0, x1, [x19]
   14de8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   14dec:	ldr	x25, [sp, #48]
   14df0:	mov	x0, x23
   14df4:	ldp	x21, x22, [sp, #16]
   14df8:	ldp	x23, x24, [sp, #32]
   14dfc:	ldr	x30, [sp, #56]
   14e00:	ldp	x19, x20, [sp], #64
   14e04:	ret
   14e08:	lsr	x0, x2, #32
   14e0c:	ldr	x1, [x20, x0, lsl #3]
   14e10:	dmb	ish
   14e14:	cbz	x1, 14bf4 <__sancov_default_options@@Base+0x2124>
   14e18:	lsr	w2, w2, #20
   14e1c:	lsr	x3, x19, #20
   14e20:	ldrb	w1, [x1, x2]
   14e24:	cbz	w1, 14bf4 <__sancov_default_options@@Base+0x2124>
   14e28:	lsl	x1, x0, #3
   14e2c:	ldr	x0, [x20, x0, lsl #3]
   14e30:	dmb	ish
   14e34:	cbz	x0, 14e44 <__sancov_default_options@@Base+0x2374>
   14e38:	and	x3, x3, #0xfff
   14e3c:	ldrb	w0, [x0, x3]
   14e40:	cbnz	w0, 150d0 <__sancov_default_options@@Base+0x2600>
   14e44:	add	x21, x20, #0x80, lsl #12
   14e48:	add	x21, x21, #0xc00
   14e4c:	b	14cc4 <__sancov_default_options@@Base+0x21f4>
   14e50:	dmb	ish
   14e54:	strb	wzr, [x25]
   14e58:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14e5c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   14e60:	add	x2, x2, #0x778
   14e64:	add	x0, x0, #0xe50
   14e68:	mov	x4, #0x0                   	// #0
   14e6c:	mov	x3, #0x0                   	// #0
   14e70:	mov	w1, #0x62                  	// #98
   14e74:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   14e78:	mov	x2, x23
   14e7c:	mov	x3, x4
   14e80:	ldp	x23, x24, [sp, #32]
   14e84:	ldr	x30, [sp, #56]
   14e88:	ldp	x19, x20, [sp], #64
   14e8c:	b	14548 <__sancov_default_options@@Base+0x1a78>
   14e90:	mov	x0, #0xffffffffffff        	// #281474976710655
   14e94:	cmp	x2, x0
   14e98:	b.hi	14f28 <__sancov_default_options@@Base+0x2458>  // b.pmore
   14e9c:	lsr	x1, x2, #32
   14ea0:	ldr	x0, [x20, x1, lsl #3]
   14ea4:	dmb	ish
   14ea8:	cbz	x0, 14f28 <__sancov_default_options@@Base+0x2458>
   14eac:	lsr	w2, w2, #20
   14eb0:	ldrb	w0, [x0, x2]
   14eb4:	cbz	w0, 14f28 <__sancov_default_options@@Base+0x2458>
   14eb8:	ldr	x0, [x20, x1, lsl #3]
   14ebc:	dmb	ish
   14ec0:	cbz	x0, 151e0 <__sancov_default_options@@Base+0x2710>
   14ec4:	ldrb	w21, [x0, x2]
   14ec8:	cbz	x21, 151e0 <__sancov_default_options@@Base+0x2710>
   14ecc:	cmp	x21, #0x35
   14ed0:	b.hi	15224 <__sancov_default_options@@Base+0x2754>  // b.pmore
   14ed4:	lsl	x23, x21, #10
   14ed8:	add	x1, x22, x23
   14edc:	ldr	x2, [x1, #8]
   14ee0:	cbz	x2, 15358 <__sancov_default_options@@Base+0x2888>
   14ee4:	ldr	x0, [x22, x23]
   14ee8:	cmp	x0, x2
   14eec:	b.eq	15340 <__sancov_default_options@@Base+0x2870>  // b.none
   14ef0:	add	x1, x0, x21, lsl #7
   14ef4:	add	x3, x22, x23
   14ef8:	add	x1, x1, #0x4
   14efc:	add	x0, x0, #0x1
   14f00:	mov	x5, #0xd800                	// #55296
   14f04:	add	x2, x22, x5
   14f08:	str	x0, [x22, x23]
   14f0c:	mov	x23, #0x0                   	// #0
   14f10:	str	x19, [x22, x1, lsl #3]
   14f14:	ldr	x0, [x2, #16]
   14f18:	ldr	x1, [x3, #16]
   14f1c:	sub	x0, x0, x1
   14f20:	str	x0, [x2, #16]
   14f24:	b	14df0 <__sancov_default_options@@Base+0x2320>
   14f28:	add	x21, x20, #0x80, lsl #12
   14f2c:	add	x21, x21, #0xc00
   14f30:	ldr	x4, [x21, #448]
   14f34:	str	x25, [sp, #48]
   14f38:	sub	x0, x4, #0x1
   14f3c:	tst	x19, x0
   14f40:	b.ne	15090 <__sancov_default_options@@Base+0x25c0>  // b.any
   14f44:	sub	x19, x19, x4
   14f48:	add	x25, x20, #0xc1, lsl #12
   14f4c:	mov	w1, #0x1                   	// #1
   14f50:	ldxrb	w0, [x25]
   14f54:	stxrb	w2, w1, [x25]
   14f58:	cbnz	w2, 14f50 <__sancov_default_options@@Base+0x2480>
   14f5c:	dmb	ish
   14f60:	tst	w0, #0xff
   14f64:	b.eq	14f70 <__sancov_default_options@@Base+0x24a0>  // b.none
   14f68:	mov	x0, x25
   14f6c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   14f70:	ldr	x0, [x19, #24]
   14f74:	add	x21, x21, #0x1c0
   14f78:	ldr	x2, [x21, #8]
   14f7c:	ldr	x3, [x2, x0, lsl #3]
   14f80:	cmp	x3, x19
   14f84:	b.ne	15198 <__sancov_default_options@@Base+0x26c8>  // b.any
   14f88:	add	x21, x21, #0x40, lsl #12
   14f8c:	ldr	x4, [x21, #16]
   14f90:	cmp	x0, x4
   14f94:	b.cs	151b4 <__sancov_default_options@@Base+0x26e4>  // b.hs, b.nlast
   14f98:	sub	x4, x4, #0x1
   14f9c:	ldr	x3, [x19, #8]
   14fa0:	ldr	x5, [x2, x4, lsl #3]
   14fa4:	str	x4, [x21, #16]
   14fa8:	str	x5, [x2, x0, lsl #3]
   14fac:	ldp	x4, x2, [x21, #40]
   14fb0:	str	x0, [x5, #24]
   14fb4:	ldr	x0, [x25, #24]
   14fb8:	strb	wzr, [x21, #24]
   14fbc:	sub	x0, x0, x3
   14fc0:	sub	x2, x2, x3
   14fc4:	add	x4, x4, #0x1
   14fc8:	stp	x4, x2, [x21, #40]
   14fcc:	str	x0, [x25, #24]
   14fd0:	ldr	x0, [x25, #32]
   14fd4:	sub	x0, x0, x3
   14fd8:	str	x0, [x25, #32]
   14fdc:	dmb	ish
   14fe0:	strb	wzr, [x25]
   14fe4:	ldp	x0, x1, [x19]
   14fe8:	mov	x23, #0x0                   	// #0
   14fec:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   14ff0:	ldr	x25, [sp, #48]
   14ff4:	b	14df0 <__sancov_default_options@@Base+0x2320>
   14ff8:	lsr	x3, x19, #20
   14ffc:	lsr	x0, x19, #32
   15000:	b	14e28 <__sancov_default_options@@Base+0x2358>
   15004:	lsr	x1, x19, #32
   15008:	ldr	x0, [x20, x1, lsl #3]
   1500c:	dmb	ish
   15010:	cbz	x0, 14d2c <__sancov_default_options@@Base+0x225c>
   15014:	lsr	w2, w19, #20
   15018:	ldrb	w0, [x0, x2]
   1501c:	cbz	w0, 14d2c <__sancov_default_options@@Base+0x225c>
   15020:	ldr	x0, [x20, x1, lsl #3]
   15024:	dmb	ish
   15028:	cbz	x0, 151e4 <__sancov_default_options@@Base+0x2714>
   1502c:	ldrb	w21, [x0, x2]
   15030:	cbz	x21, 151e4 <__sancov_default_options@@Base+0x2714>
   15034:	cmp	x21, #0x35
   15038:	b.hi	15228 <__sancov_default_options@@Base+0x2758>  // b.pmore
   1503c:	lsl	x24, x21, #10
   15040:	add	x1, x22, x24
   15044:	ldr	x2, [x1, #8]
   15048:	cbz	x2, 15260 <__sancov_default_options@@Base+0x2790>
   1504c:	ldr	x0, [x22, x24]
   15050:	cmp	x0, x2
   15054:	b.eq	15248 <__sancov_default_options@@Base+0x2778>  // b.none
   15058:	add	x1, x0, x21, lsl #7
   1505c:	add	x3, x22, x24
   15060:	add	x1, x1, #0x4
   15064:	add	x0, x0, #0x1
   15068:	mov	x4, #0xd800                	// #55296
   1506c:	add	x2, x22, x4
   15070:	str	x0, [x22, x24]
   15074:	str	x19, [x22, x1, lsl #3]
   15078:	ldr	x0, [x2, #16]
   1507c:	ldr	x1, [x3, #16]
   15080:	ldr	x25, [sp, #48]
   15084:	sub	x0, x0, x1
   15088:	str	x0, [x2, #16]
   1508c:	b	14df0 <__sancov_default_options@@Base+0x2320>
   15090:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15094:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15098:	add	x2, x2, #0xa30
   1509c:	add	x0, x0, #0x728
   150a0:	mov	x4, #0x0                   	// #0
   150a4:	mov	x3, #0x0                   	// #0
   150a8:	mov	w1, #0x123                 	// #291
   150ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   150b0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   150b4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   150b8:	add	x2, x2, #0x8b8
   150bc:	add	x0, x0, #0x728
   150c0:	mov	x4, #0x0                   	// #0
   150c4:	mov	x3, #0x0                   	// #0
   150c8:	mov	w1, #0x12b                 	// #299
   150cc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   150d0:	ldr	x0, [x20, x1]
   150d4:	dmb	ish
   150d8:	cbz	x0, 15204 <__sancov_default_options@@Base+0x2734>
   150dc:	ldrb	w0, [x0, x3]
   150e0:	cbz	w0, 15204 <__sancov_default_options@@Base+0x2734>
   150e4:	ldr	x21, [x20, x1]
   150e8:	dmb	ish
   150ec:	cbz	x21, 14cf8 <__sancov_default_options@@Base+0x2228>
   150f0:	ldrb	w0, [x21, x3]
   150f4:	cmp	w0, #0x35
   150f8:	and	x1, x0, #0xff
   150fc:	b.eq	151d0 <__sancov_default_options@@Base+0x2700>  // b.none
   15100:	ubfiz	x0, x0, #4, #8
   15104:	cmp	x0, x23
   15108:	csel	x21, x0, x23, ls  // ls = plast
   1510c:	cmp	x1, #0x10
   15110:	b.ls	14cf8 <__sancov_default_options@@Base+0x2228>  // b.plast
   15114:	sub	x1, x1, #0x10
   15118:	mov	x0, #0x100                 	// #256
   1511c:	and	x21, x1, #0x3
   15120:	lsr	x1, x1, #2
   15124:	lsl	x1, x0, x1
   15128:	lsr	x0, x1, #2
   1512c:	madd	x0, x0, x21, x1
   15130:	cmp	x0, x23
   15134:	csel	x21, x0, x23, ls  // ls = plast
   15138:	b	14cf8 <__sancov_default_options@@Base+0x2228>
   1513c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15140:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15144:	add	x2, x2, #0x838
   15148:	add	x0, x0, #0x728
   1514c:	mov	w1, #0xc1                  	// #193
   15150:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15154:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15158:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1515c:	add	x2, x2, #0x860
   15160:	add	x0, x0, #0x728
   15164:	mov	w1, #0xc2                  	// #194
   15168:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1516c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15170:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15174:	mov	x4, x19
   15178:	add	x2, x2, #0x898
   1517c:	add	x0, x0, #0x728
   15180:	mov	w1, #0xc3                  	// #195
   15184:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15188:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1518c:	add	x0, x0, #0x6e8
   15190:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   15194:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   15198:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1519c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   151a0:	mov	x4, x19
   151a4:	add	x2, x2, #0xa58
   151a8:	add	x0, x0, #0x728
   151ac:	mov	w1, #0x88                  	// #136
   151b0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   151b4:	mov	x3, x0
   151b8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   151bc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   151c0:	add	x2, x2, #0xa78
   151c4:	add	x0, x0, #0x728
   151c8:	mov	w1, #0x89                  	// #137
   151cc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   151d0:	cmp	x23, #0x200
   151d4:	mov	x0, #0x200                 	// #512
   151d8:	csel	x21, x23, x0, ls  // ls = plast
   151dc:	b	14cf8 <__sancov_default_options@@Base+0x2228>
   151e0:	str	x25, [sp, #48]
   151e4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   151e8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   151ec:	add	x2, x2, #0xc88
   151f0:	add	x0, x0, #0xb80
   151f4:	mov	x4, #0x0                   	// #0
   151f8:	mov	x3, #0x0                   	// #0
   151fc:	mov	w1, #0xae                  	// #174
   15200:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15204:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15208:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1520c:	add	x2, x2, #0x778
   15210:	add	x0, x0, #0x6c8
   15214:	mov	x4, #0x0                   	// #0
   15218:	mov	x3, #0x0                   	// #0
   1521c:	mov	w1, #0xcc                  	// #204
   15220:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15224:	str	x25, [sp, #48]
   15228:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1522c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15230:	mov	x3, x21
   15234:	add	x2, x2, #0xb60
   15238:	add	x0, x0, #0xb80
   1523c:	mov	x4, #0x36                  	// #54
   15240:	mov	w1, #0xaf                  	// #175
   15244:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15248:	mov	x0, x22
   1524c:	mov	x2, x20
   15250:	mov	x3, x21
   15254:	bl	149e0 <__sancov_default_options@@Base+0x1f10>
   15258:	ldr	x0, [x22, x24]
   1525c:	b	15058 <__sancov_default_options@@Base+0x2588>
   15260:	mov	x2, #0x1                   	// #1
   15264:	mov	x11, x2
   15268:	mov	x12, #0x7c                  	// #124
   1526c:	mov	x10, #0x14                  	// #20
   15270:	mov	x9, #0x100                 	// #256
   15274:	mov	w8, #0x4000                	// #16384
   15278:	mov	x7, #0x3e                  	// #62
   1527c:	nop
   15280:	add	x5, x22, x2, lsl #10
   15284:	lsl	x6, x2, #4
   15288:	mov	x4, x5
   1528c:	mov	x0, #0x14                  	// #20
   15290:	mov	x3, x2
   15294:	add	x2, x2, #0x1
   15298:	stp	x12, x6, [x5, #8]
   1529c:	cmp	x2, #0x36
   152a0:	str	x0, [x4, #24]
   152a4:	b.eq	15314 <__sancov_default_options@@Base+0x2844>  // b.none
   152a8:	cmp	x2, #0x35
   152ac:	b.eq	1531c <__sancov_default_options@@Base+0x284c>  // b.none
   152b0:	cmp	x2, #0x10
   152b4:	b.ls	15280 <__sancov_default_options@@Base+0x27b0>  // b.plast
   152b8:	sub	x0, x3, #0xf
   152bc:	add	x4, x4, #0x400
   152c0:	and	x6, x0, #0x3
   152c4:	mov	x3, x2
   152c8:	lsr	x0, x0, #2
   152cc:	add	x2, x2, #0x1
   152d0:	lsl	x0, x9, x0
   152d4:	lsr	x5, x0, #2
   152d8:	madd	x5, x5, x6, x0
   152dc:	str	x5, [x4, #16]
   152e0:	udiv	w0, w8, w5
   152e4:	cmp	x0, #0x0
   152e8:	csel	x0, x0, x11, ne  // ne = any
   152ec:	cmp	x0, #0x3e
   152f0:	csel	x0, x0, x7, ls  // ls = plast
   152f4:	add	x6, x0, #0x2
   152f8:	lsl	x0, x0, #1
   152fc:	str	x0, [x4, #8]
   15300:	cmp	x5, x6, lsl #3
   15304:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   15308:	str	x0, [x4, #24]
   1530c:	cmp	x2, #0x36
   15310:	b.ne	152a8 <__sancov_default_options@@Base+0x27d8>  // b.any
   15314:	ldr	x2, [x1, #8]
   15318:	b	1504c <__sancov_default_options@@Base+0x257c>
   1531c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15320:	ldr	q0, [x0, #3824]
   15324:	mov	x0, #0xd400                	// #54272
   15328:	add	x2, x22, x0
   1532c:	add	x0, x22, #0x8, lsl #12
   15330:	stur	q0, [x2, #8]
   15334:	str	xzr, [x0, #21528]
   15338:	ldr	x2, [x1, #8]
   1533c:	b	1504c <__sancov_default_options@@Base+0x257c>
   15340:	mov	x0, x22
   15344:	mov	x2, x20
   15348:	mov	x3, x21
   1534c:	bl	149e0 <__sancov_default_options@@Base+0x1f10>
   15350:	ldr	x0, [x22, x23]
   15354:	b	14ef0 <__sancov_default_options@@Base+0x2420>
   15358:	mov	x2, #0x1                   	// #1
   1535c:	mov	x11, x2
   15360:	mov	x12, #0x7c                  	// #124
   15364:	mov	x10, #0x14                  	// #20
   15368:	mov	x9, #0x100                 	// #256
   1536c:	mov	w8, #0x4000                	// #16384
   15370:	mov	x7, #0x3e                  	// #62
   15374:	nop
   15378:	add	x5, x22, x2, lsl #10
   1537c:	lsl	x6, x2, #4
   15380:	mov	x4, x5
   15384:	mov	x0, #0x14                  	// #20
   15388:	mov	x3, x2
   1538c:	add	x2, x2, #0x1
   15390:	stp	x12, x6, [x5, #8]
   15394:	cmp	x2, #0x36
   15398:	str	x0, [x4, #24]
   1539c:	b.eq	1540c <__sancov_default_options@@Base+0x293c>  // b.none
   153a0:	cmp	x2, #0x35
   153a4:	b.eq	15414 <__sancov_default_options@@Base+0x2944>  // b.none
   153a8:	cmp	x2, #0x10
   153ac:	b.ls	15378 <__sancov_default_options@@Base+0x28a8>  // b.plast
   153b0:	sub	x0, x3, #0xf
   153b4:	add	x4, x4, #0x400
   153b8:	and	x6, x0, #0x3
   153bc:	mov	x3, x2
   153c0:	lsr	x0, x0, #2
   153c4:	add	x2, x2, #0x1
   153c8:	lsl	x0, x9, x0
   153cc:	lsr	x5, x0, #2
   153d0:	madd	x5, x5, x6, x0
   153d4:	str	x5, [x4, #16]
   153d8:	udiv	w0, w8, w5
   153dc:	cmp	x0, #0x0
   153e0:	csel	x0, x0, x11, ne  // ne = any
   153e4:	cmp	x0, #0x3e
   153e8:	csel	x0, x0, x7, ls  // ls = plast
   153ec:	add	x6, x0, #0x2
   153f0:	lsl	x0, x0, #1
   153f4:	str	x0, [x4, #8]
   153f8:	cmp	x5, x6, lsl #3
   153fc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   15400:	str	x0, [x4, #24]
   15404:	cmp	x2, #0x36
   15408:	b.ne	153a0 <__sancov_default_options@@Base+0x28d0>  // b.any
   1540c:	ldr	x2, [x1, #8]
   15410:	b	14ee4 <__sancov_default_options@@Base+0x2414>
   15414:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   15418:	mov	x2, #0xd400                	// #54272
   1541c:	add	x2, x22, x2
   15420:	ldr	q0, [x0, #3824]
   15424:	add	x0, x22, #0x8, lsl #12
   15428:	stur	q0, [x2, #8]
   1542c:	str	xzr, [x0, #21528]
   15430:	ldr	x2, [x1, #8]
   15434:	b	14ee4 <__sancov_default_options@@Base+0x2414>
   15438:	str	x30, [sp, #-16]!
   1543c:	bl	6ac0 <__errno_location@plt>
   15440:	mov	w1, #0xc                   	// #12
   15444:	ldr	x30, [sp], #16
   15448:	str	w1, [x0]
   1544c:	ret
   15450:	stp	x19, x20, [sp, #-64]!
   15454:	mov	x20, x0
   15458:	add	x19, sp, #0x20
   1545c:	stp	x21, x30, [sp, #16]
   15460:	mov	x0, x19
   15464:	mov	x21, x1
   15468:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1546c:	add	x1, x1, #0x420
   15470:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   15474:	adrp	x4, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15478:	mov	x3, x21
   1547c:	mov	x2, x20
   15480:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15484:	ldr	x1, [x4, #4008]
   15488:	add	x0, x0, #0x430
   1548c:	ldr	x1, [x1]
   15490:	bl	22d00 <OnPrint@@Base+0x398>
   15494:	mov	x0, x19
   15498:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   1549c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   154a0:	stp	x19, x20, [sp, #-80]!
   154a4:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   154a8:	mov	x2, x1
   154ac:	stp	x21, x22, [sp, #16]
   154b0:	add	x21, sp, #0x30
   154b4:	mov	x20, x0
   154b8:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   154bc:	mov	x0, x21
   154c0:	add	x1, x1, #0x498
   154c4:	str	x30, [sp, #32]
   154c8:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   154cc:	ldr	x19, [x19, #4000]
   154d0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   154d4:	ldr	x0, [x0, #4008]
   154d8:	ldr	x3, [x19]
   154dc:	ldr	x22, [x0]
   154e0:	cbz	x3, 15504 <__sancov_default_options@@Base+0x2a34>
   154e4:	mov	x2, x20
   154e8:	mov	x1, x22
   154ec:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   154f0:	add	x0, x0, #0x4b0
   154f4:	bl	22d00 <OnPrint@@Base+0x398>
   154f8:	mov	x0, x21
   154fc:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   15500:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   15504:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   15508:	mov	x3, x0
   1550c:	str	x0, [x19]
   15510:	b	154e4 <__sancov_default_options@@Base+0x2a14>
   15514:	nop
   15518:	stp	x19, x20, [sp, #-64]!
   1551c:	mov	x2, x1
   15520:	mov	x20, x0
   15524:	add	x19, sp, #0x20
   15528:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1552c:	mov	x0, x19
   15530:	add	x1, x1, #0x530
   15534:	str	x30, [sp, #16]
   15538:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   1553c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15540:	mov	x2, x20
   15544:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15548:	add	x0, x0, #0x550
   1554c:	ldr	x1, [x1, #4008]
   15550:	ldr	x1, [x1]
   15554:	bl	22d00 <OnPrint@@Base+0x398>
   15558:	mov	x0, x19
   1555c:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   15560:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   15564:	nop
   15568:	stp	x19, x20, [sp, #-80]!
   1556c:	mov	x20, x1
   15570:	add	x19, sp, #0x30
   15574:	stp	x21, x30, [sp, #16]
   15578:	mov	x21, x0
   1557c:	mov	x0, x19
   15580:	str	x1, [sp, #40]
   15584:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15588:	add	x1, x1, #0x5a0
   1558c:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   15590:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15594:	mov	x3, x21
   15598:	mov	x2, x20
   1559c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   155a0:	ldr	x1, [x1, #4008]
   155a4:	add	x0, x0, #0x5c0
   155a8:	ldr	x1, [x1]
   155ac:	bl	22d00 <OnPrint@@Base+0x398>
   155b0:	mov	x0, x19
   155b4:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   155b8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   155bc:	nop
   155c0:	stp	x19, x20, [sp, #-64]!
   155c4:	mov	x2, x1
   155c8:	mov	x20, x0
   155cc:	add	x19, sp, #0x20
   155d0:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   155d4:	mov	x0, x19
   155d8:	add	x1, x1, #0x660
   155dc:	str	x30, [sp, #16]
   155e0:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   155e4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   155e8:	mov	x2, x20
   155ec:	mov	x3, #0x8                   	// #8
   155f0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   155f4:	ldr	x1, [x1, #4008]
   155f8:	add	x0, x0, #0x688
   155fc:	ldr	x1, [x1]
   15600:	bl	22d00 <OnPrint@@Base+0x398>
   15604:	mov	x0, x19
   15608:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   1560c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   15610:	stp	x19, x20, [sp, #-80]!
   15614:	mov	x20, x0
   15618:	add	x19, sp, #0x30
   1561c:	stp	x21, x30, [sp, #16]
   15620:	mov	x0, x19
   15624:	mov	x21, x1
   15628:	str	x1, [sp, #40]
   1562c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15630:	add	x1, x1, #0x710
   15634:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   15638:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1563c:	mov	x3, x21
   15640:	mov	x2, x20
   15644:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15648:	ldr	x1, [x1, #4008]
   1564c:	add	x0, x0, #0x728
   15650:	ldr	x1, [x1]
   15654:	bl	22d00 <OnPrint@@Base+0x398>
   15658:	mov	x0, x19
   1565c:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   15660:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   15664:	nop
   15668:	stp	x19, x20, [sp, #-64]!
   1566c:	mov	x2, x1
   15670:	mov	x20, x0
   15674:	add	x19, sp, #0x20
   15678:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1567c:	mov	x0, x19
   15680:	add	x1, x1, #0x780
   15684:	str	x30, [sp, #16]
   15688:	bl	156b8 <__sancov_default_options@@Base+0x2be8>
   1568c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15690:	mov	x2, x20
   15694:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15698:	add	x0, x0, #0x790
   1569c:	ldr	x1, [x1, #4008]
   156a0:	ldr	x1, [x1]
   156a4:	bl	22d00 <OnPrint@@Base+0x398>
   156a8:	mov	x0, x19
   156ac:	bl	15708 <__sancov_default_options@@Base+0x2c38>
   156b0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   156b4:	nop
   156b8:	stp	x19, x20, [sp, #-32]!
   156bc:	mov	x19, x0
   156c0:	mov	x20, x2
   156c4:	stp	x21, x30, [sp, #16]
   156c8:	mov	x21, x1
   156cc:	bl	26650 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1140>
   156d0:	stp	x21, x20, [x19, #8]
   156d4:	bl	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
   156d8:	strb	w0, [x19, #24]
   156dc:	ldp	x21, x30, [sp, #16]
   156e0:	tst	w0, #0xff
   156e4:	ldp	x19, x20, [sp], #32
   156e8:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   156ec:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   156f0:	add	x2, x2, #0xb00
   156f4:	add	x1, x1, #0xf0
   156f8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   156fc:	csel	x1, x1, x2, ne  // ne = any
   15700:	add	x0, x0, #0xdb8
   15704:	b	22c78 <OnPrint@@Base+0x310>
   15708:	stp	x19, x30, [sp, #-16]!
   1570c:	mov	x19, x0
   15710:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   15714:	add	x2, x2, #0xb00
   15718:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1571c:	ldrb	w3, [x19, #24]
   15720:	add	x1, x1, #0xda8
   15724:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   15728:	add	x0, x0, #0xdb8
   1572c:	cmp	w3, #0x0
   15730:	csel	x1, x1, x2, ne  // ne = any
   15734:	bl	22c78 <OnPrint@@Base+0x310>
   15738:	ldr	x0, [x19, #16]
   1573c:	bl	24b80 <OnPrint@@Base+0x2218>
   15740:	bl	12f30 <__sancov_default_options@@Base+0x460>
   15744:	ldp	x0, x1, [x19, #8]
   15748:	mov	x2, #0x0                   	// #0
   1574c:	bl	25878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x368>
   15750:	mov	x0, x19
   15754:	ldp	x19, x30, [sp], #16
   15758:	b	267a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1298>
   1575c:	nop
   15760:	str	x30, [sp, #-16]!
   15764:	tst	w4, #0xff
   15768:	b.ne	1577c <__sancov_default_options@@Base+0x2cac>  // b.any
   1576c:	adrp	x8, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15770:	mov	x7, x0
   15774:	ldr	w0, [x8, #2560]
   15778:	cbz	w0, 1578c <__sancov_default_options@@Base+0x2cbc>
   1577c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15780:	add	x0, x0, #0x7d8
   15784:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   15788:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1578c:	adrp	x4, 6d000 <_Unwind_Backtrace@GCC_3.3>
   15790:	mov	x5, x1
   15794:	mov	w6, w3
   15798:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1579c:	ldr	x1, [x4, #968]
   157a0:	mov	x3, x7
   157a4:	mov	x4, x7
   157a8:	add	x0, x0, #0x7f0
   157ac:	mov	w7, #0x1                   	// #1
   157b0:	str	w7, [x8, #2560]
   157b4:	bl	22d00 <OnPrint@@Base+0x398>
   157b8:	bl	20bf0 <__sanitizer_set_report_fd@@Base+0x7328>
   157bc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   157c0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   157c4:	add	x2, x2, #0x838
   157c8:	add	x0, x0, #0x860
   157cc:	mov	x4, #0x0                   	// #0
   157d0:	mov	x3, #0x0                   	// #0
   157d4:	mov	w1, #0x35                  	// #53
   157d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   157dc:	nop
   157e0:	stp	x19, x20, [sp, #-32]!
   157e4:	str	x30, [sp, #24]
   157e8:	cbz	x0, 15858 <__sancov_default_options@@Base+0x2d88>
   157ec:	mov	x19, x0
   157f0:	mov	x20, x1
   157f4:	cbz	x1, 15824 <__sancov_default_options@@Base+0x2d54>
   157f8:	str	x21, [sp, #16]
   157fc:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   15800:	mov	x21, x0
   15804:	cbz	x0, 15814 <__sancov_default_options@@Base+0x2d44>
   15808:	mov	x0, x20
   1580c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15810:	add	x19, x21, x0
   15814:	ldrb	w0, [x19]
   15818:	cmp	w0, #0x2e
   1581c:	b.eq	15834 <__sancov_default_options@@Base+0x2d64>  // b.none
   15820:	ldr	x21, [sp, #16]
   15824:	mov	x0, x19
   15828:	ldr	x30, [sp, #24]
   1582c:	ldp	x19, x20, [sp], #32
   15830:	ret
   15834:	ldrb	w1, [x19, #1]
   15838:	add	x0, x19, #0x2
   1583c:	ldr	x21, [sp, #16]
   15840:	cmp	w1, #0x2f
   15844:	csel	x19, x0, x19, eq  // eq = none
   15848:	mov	x0, x19
   1584c:	ldr	x30, [sp, #24]
   15850:	ldp	x19, x20, [sp], #32
   15854:	ret
   15858:	mov	x19, #0x0                   	// #0
   1585c:	b	15824 <__sancov_default_options@@Base+0x2d54>
   15860:	stp	x19, x30, [sp, #-16]!
   15864:	mov	x19, x0
   15868:	cbz	x0, 1587c <__sancov_default_options@@Base+0x2dac>
   1586c:	mov	w1, #0x2f                  	// #47
   15870:	bl	1be60 <__sanitizer_set_report_fd@@Base+0x2598>
   15874:	cmp	x0, #0x0
   15878:	csinc	x19, x19, x0, eq  // eq = none
   1587c:	mov	x0, x19
   15880:	ldp	x19, x30, [sp], #16
   15884:	ret
   15888:	cbz	x0, 15914 <__sancov_default_options@@Base+0x2e44>
   1588c:	stp	x19, x30, [sp, #-16]!
   15890:	mov	x19, x0
   15894:	ldrb	w1, [x0]
   15898:	cbz	w1, 15908 <__sancov_default_options@@Base+0x2e38>
   1589c:	nop
   158a0:	cmp	w1, #0x1b
   158a4:	b.eq	158ec <__sancov_default_options@@Base+0x2e1c>  // b.none
   158a8:	cmp	x0, x19
   158ac:	b.eq	158b4 <__sancov_default_options@@Base+0x2de4>  // b.none
   158b0:	strb	w1, [x19]
   158b4:	add	x19, x19, #0x1
   158b8:	ldrb	w1, [x0, #1]
   158bc:	add	x0, x0, #0x1
   158c0:	cbz	w1, 15908 <__sancov_default_options@@Base+0x2e38>
   158c4:	cmp	x0, x19
   158c8:	b.cs	158a0 <__sancov_default_options@@Base+0x2dd0>  // b.hs, b.nlast
   158cc:	mov	x3, x0
   158d0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   158d4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   158d8:	mov	x4, x19
   158dc:	add	x2, x2, #0x8a0
   158e0:	add	x0, x0, #0x860
   158e4:	mov	w1, #0x68                  	// #104
   158e8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   158ec:	ldrb	w2, [x0, #1]
   158f0:	cmp	w2, #0x5b
   158f4:	b.ne	158a8 <__sancov_default_options@@Base+0x2dd8>  // b.any
   158f8:	mov	w1, #0x6d                  	// #109
   158fc:	bl	1be10 <__sanitizer_set_report_fd@@Base+0x2548>
   15900:	ldrb	w1, [x0]
   15904:	cbnz	w1, 158b8 <__sancov_default_options@@Base+0x2de8>
   15908:	strb	wzr, [x19]
   1590c:	ldp	x19, x30, [sp], #16
   15910:	ret
   15914:	ret
   15918:	stp	x19, x20, [sp, #-32]!
   1591c:	mov	x19, x0
   15920:	mov	x1, #0x0                   	// #0
   15924:	ldr	x0, [x0]
   15928:	str	x30, [sp, #16]
   1592c:	bl	13340 <__sancov_default_options@@Base+0x870>
   15930:	str	xzr, [x19]
   15934:	stp	xzr, xzr, [x19, #8]
   15938:	mov	x2, #0x10                  	// #16
   1593c:	add	x0, x19, #0x1c
   15940:	str	wzr, [x19, #24]
   15944:	mov	w1, #0x0                   	// #0
   15948:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1594c:	strb	wzr, [x19, #44]
   15950:	ldr	x2, [x19, #48]
   15954:	cbz	x2, 15988 <__sancov_default_options@@Base+0x2eb8>
   15958:	add	x20, x19, #0x30
   1595c:	nop
   15960:	ldr	x0, [x19, #56]
   15964:	sub	x4, x2, #0x1
   15968:	mov	x1, #0x0                   	// #0
   1596c:	ldr	x3, [x0]
   15970:	str	x3, [x20, #8]
   15974:	cbz	x3, 15994 <__sancov_default_options@@Base+0x2ec4>
   15978:	str	x4, [x20]
   1597c:	bl	13340 <__sancov_default_options@@Base+0x870>
   15980:	ldr	x2, [x19, #48]
   15984:	cbnz	x2, 15960 <__sancov_default_options@@Base+0x2e90>
   15988:	ldr	x30, [sp, #16]
   1598c:	ldp	x19, x20, [sp], #32
   15990:	ret
   15994:	str	x4, [x20]
   15998:	str	xzr, [x20, #16]
   1599c:	bl	13340 <__sancov_default_options@@Base+0x870>
   159a0:	ldr	x2, [x19, #48]
   159a4:	cbnz	x2, 15960 <__sancov_default_options@@Base+0x2e90>
   159a8:	ldr	x30, [sp, #16]
   159ac:	ldp	x19, x20, [sp], #32
   159b0:	ret
   159b4:	nop
   159b8:	stp	x19, x20, [sp, #-32]!
   159bc:	mov	x19, x0
   159c0:	mov	x20, x2
   159c4:	stp	x21, x30, [sp, #16]
   159c8:	mov	x21, x1
   159cc:	bl	15918 <__sancov_default_options@@Base+0x2e48>
   159d0:	mov	x0, x21
   159d4:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   159d8:	ldp	x21, x30, [sp, #16]
   159dc:	stp	x0, x20, [x19]
   159e0:	ldp	x19, x20, [sp], #32
   159e4:	ret
   159e8:	stp	x19, x20, [sp, #-64]!
   159ec:	mov	x19, x0
   159f0:	mov	w20, w3
   159f4:	stp	x21, x22, [sp, #16]
   159f8:	mov	x21, x4
   159fc:	mov	x22, x2
   15a00:	stp	x23, x24, [sp, #32]
   15a04:	and	w24, w5, #0xff
   15a08:	mov	x23, x1
   15a0c:	str	x30, [sp, #48]
   15a10:	bl	15918 <__sancov_default_options@@Base+0x2e48>
   15a14:	mov	x0, x23
   15a18:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   15a1c:	stp	x0, x22, [x19]
   15a20:	mov	x1, x21
   15a24:	add	x0, x19, #0x1c
   15a28:	str	w20, [x19, #24]
   15a2c:	mov	x2, #0x10                  	// #16
   15a30:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   15a34:	strb	w24, [x19, #44]
   15a38:	ldp	x21, x22, [sp, #16]
   15a3c:	ldp	x23, x24, [sp, #32]
   15a40:	ldr	x30, [sp, #48]
   15a44:	ldp	x19, x20, [sp], #64
   15a48:	ret
   15a4c:	nop
   15a50:	stp	x19, x20, [sp, #-64]!
   15a54:	mov	x20, x0
   15a58:	mov	x0, #0x30                  	// #48
   15a5c:	stp	x21, x22, [sp, #16]
   15a60:	mov	x21, x5
   15a64:	mov	x22, x2
   15a68:	mov	x2, #0x0                   	// #0
   15a6c:	stp	x23, x24, [sp, #32]
   15a70:	and	w24, w3, #0xff
   15a74:	mov	x23, x1
   15a78:	mov	x1, #0x0                   	// #0
   15a7c:	stp	x25, x30, [sp, #48]
   15a80:	and	w25, w4, #0xff
   15a84:	bl	12f40 <__sancov_default_options@@Base+0x470>
   15a88:	mov	x19, x0
   15a8c:	cmp	x21, #0x0
   15a90:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   15a94:	add	x1, x1, #0xb00
   15a98:	add	x0, x0, #0x1a
   15a9c:	csel	x1, x1, x21, eq  // eq = none
   15aa0:	stp	xzr, x23, [x19]
   15aa4:	mov	x2, #0x10                  	// #16
   15aa8:	str	x22, [x19, #16]
   15aac:	strb	w24, [x19, #24]
   15ab0:	strb	w25, [x19, #25]
   15ab4:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   15ab8:	ldr	x0, [x20, #48]
   15abc:	cbnz	x0, 15afc <__sancov_default_options@@Base+0x302c>
   15ac0:	dup	v0.2d, x19
   15ac4:	str	xzr, [x19]
   15ac8:	mov	x0, #0x1                   	// #1
   15acc:	str	x0, [x20, #48]
   15ad0:	stur	q0, [x20, #56]
   15ad4:	cbz	w24, 15ae8 <__sancov_default_options@@Base+0x3018>
   15ad8:	ldr	x0, [x20, #16]
   15adc:	cmp	x0, x22
   15ae0:	b.cs	15ae8 <__sancov_default_options@@Base+0x3018>  // b.hs, b.nlast
   15ae4:	str	x22, [x20, #16]
   15ae8:	ldp	x21, x22, [sp, #16]
   15aec:	ldp	x23, x24, [sp, #32]
   15af0:	ldp	x25, x30, [sp, #48]
   15af4:	ldp	x19, x20, [sp], #64
   15af8:	ret
   15afc:	str	xzr, [x19]
   15b00:	add	x0, x0, #0x1
   15b04:	ldr	x2, [x20, #64]
   15b08:	str	x19, [x2]
   15b0c:	str	x0, [x20, #48]
   15b10:	str	x19, [x20, #64]
   15b14:	b	15ad4 <__sancov_default_options@@Base+0x3004>
   15b18:	ldr	x0, [x0, #56]
   15b1c:	cbz	x0, 15b4c <__sancov_default_options@@Base+0x307c>
   15b20:	ldr	x2, [x0, #8]
   15b24:	cmp	x2, x1
   15b28:	b.hi	15b38 <__sancov_default_options@@Base+0x3068>  // b.pmore
   15b2c:	ldr	x2, [x0, #16]
   15b30:	cmp	x2, x1
   15b34:	b.hi	15b44 <__sancov_default_options@@Base+0x3074>  // b.pmore
   15b38:	ldr	x0, [x0]
   15b3c:	cbnz	x0, 15b20 <__sancov_default_options@@Base+0x3050>
   15b40:	ret
   15b44:	mov	w0, #0x1                   	// #1
   15b48:	ret
   15b4c:	mov	w0, #0x0                   	// #0
   15b50:	ret
   15b54:	nop
   15b58:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15b5c:	ldr	x1, [x1, #4040]
   15b60:	ldr	x2, [x1, #128]
   15b64:	cbnz	x2, 15b6c <__sancov_default_options@@Base+0x309c>
   15b68:	ret
   15b6c:	adrp	x2, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15b70:	add	x2, x2, #0xa00
   15b74:	add	x2, x2, #0x8
   15b78:	ldxr	x3, [x2]
   15b7c:	add	x4, x3, x0
   15b80:	stlxr	w5, x4, [x2]
   15b84:	cbnz	w5, 15b78 <__sancov_default_options@@Base+0x30a8>
   15b88:	dmb	ish
   15b8c:	ldr	x1, [x1, #128]
   15b90:	add	x0, x3, x0
   15b94:	cmp	x1, x0, lsr #20
   15b98:	b.hi	15b68 <__sancov_default_options@@Base+0x3098>  // b.pmore
   15b9c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15ba0:	add	x0, x0, #0x8b0
   15ba4:	str	x30, [sp, #-16]!
   15ba8:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   15bac:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   15bb0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15bb4:	ldr	x1, [x1, #4040]
   15bb8:	ldr	x1, [x1, #128]
   15bbc:	cbnz	x1, 15bc4 <__sancov_default_options@@Base+0x30f4>
   15bc0:	ret
   15bc4:	adrp	x1, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15bc8:	add	x1, x1, #0xa00
   15bcc:	neg	x0, x0
   15bd0:	add	x1, x1, #0x8
   15bd4:	ldxr	x2, [x1]
   15bd8:	add	x2, x2, x0
   15bdc:	stlxr	w3, x2, [x1]
   15be0:	cbnz	w3, 15bd4 <__sancov_default_options@@Base+0x3104>
   15be4:	dmb	ish
   15be8:	ret
   15bec:	nop
   15bf0:	cbz	x1, 15d84 <__sancov_default_options@@Base+0x32b4>
   15bf4:	stp	x19, x20, [sp, #-80]!
   15bf8:	mov	x19, x0
   15bfc:	stp	x21, x22, [sp, #16]
   15c00:	mov	x21, x1
   15c04:	str	x30, [sp, #64]
   15c08:	ldrb	w0, [x1]
   15c0c:	cbz	w0, 15d04 <__sancov_default_options@@Base+0x3234>
   15c10:	cbz	x19, 15ce8 <__sancov_default_options@@Base+0x3218>
   15c14:	stp	x23, x24, [sp, #32]
   15c18:	mov	w23, #0x0                   	// #0
   15c1c:	stp	x25, x26, [sp, #48]
   15c20:	ldrb	w1, [x19]
   15c24:	cmp	w1, #0x5e
   15c28:	b.ne	15c38 <__sancov_default_options@@Base+0x3168>  // b.any
   15c2c:	ldrb	w1, [x19, #1]
   15c30:	add	x19, x19, #0x1
   15c34:	mov	w23, #0x1                   	// #1
   15c38:	mov	w2, #0x0                   	// #0
   15c3c:	mov	w25, #0x2a                  	// #42
   15c40:	mov	w24, #0x24                  	// #36
   15c44:	cbz	w1, 15ce0 <__sancov_default_options@@Base+0x3210>
   15c48:	cmp	w1, #0x2a
   15c4c:	b.eq	15d74 <__sancov_default_options@@Base+0x32a4>  // b.none
   15c50:	ldrb	w0, [x21]
   15c54:	cmp	w1, #0x24
   15c58:	b.eq	15d8c <__sancov_default_options@@Base+0x32bc>  // b.none
   15c5c:	cbz	w0, 15cfc <__sancov_default_options@@Base+0x322c>
   15c60:	mov	w1, #0x2a                  	// #42
   15c64:	mov	x0, x19
   15c68:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x2518>
   15c6c:	mov	x22, x0
   15c70:	mov	w1, #0x24                  	// #36
   15c74:	mov	x0, x19
   15c78:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x2518>
   15c7c:	mov	x26, x0
   15c80:	cbz	x22, 15d4c <__sancov_default_options@@Base+0x327c>
   15c84:	cmp	x0, #0x0
   15c88:	ccmp	x22, x0, #0x0, ne  // ne = any
   15c8c:	b.ls	15d18 <__sancov_default_options@@Base+0x3248>  // b.plast
   15c90:	strb	wzr, [x26]
   15c94:	mov	x1, x19
   15c98:	mov	x0, x21
   15c9c:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   15ca0:	mov	x20, x0
   15ca4:	mov	x0, x19
   15ca8:	mov	x19, x26
   15cac:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15cb0:	add	x0, x20, x0
   15cb4:	mov	w1, #0x24                  	// #36
   15cb8:	strb	w1, [x19]
   15cbc:	cbz	x20, 15cfc <__sancov_default_options@@Base+0x322c>
   15cc0:	cmp	x21, x20
   15cc4:	csel	w2, w23, wzr, ne  // ne = any
   15cc8:	cbnz	w2, 15cfc <__sancov_default_options@@Base+0x322c>
   15ccc:	cbz	x19, 15ce0 <__sancov_default_options@@Base+0x3210>
   15cd0:	ldrb	w1, [x19]
   15cd4:	mov	x21, x0
   15cd8:	mov	w23, #0x0                   	// #0
   15cdc:	cbnz	w1, 15c48 <__sancov_default_options@@Base+0x3178>
   15ce0:	ldp	x23, x24, [sp, #32]
   15ce4:	ldp	x25, x26, [sp, #48]
   15ce8:	mov	w0, #0x1                   	// #1
   15cec:	ldp	x21, x22, [sp, #16]
   15cf0:	ldr	x30, [sp, #64]
   15cf4:	ldp	x19, x20, [sp], #80
   15cf8:	ret
   15cfc:	ldp	x23, x24, [sp, #32]
   15d00:	ldp	x25, x26, [sp, #48]
   15d04:	mov	w0, #0x0                   	// #0
   15d08:	ldp	x21, x22, [sp, #16]
   15d0c:	ldr	x30, [sp, #64]
   15d10:	ldp	x19, x20, [sp], #80
   15d14:	ret
   15d18:	strb	wzr, [x22]
   15d1c:	mov	x1, x19
   15d20:	mov	x0, x21
   15d24:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   15d28:	mov	x20, x0
   15d2c:	mov	x0, x19
   15d30:	mov	x19, x22
   15d34:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15d38:	add	x0, x20, x0
   15d3c:	cmp	x22, x26
   15d40:	csel	w1, w24, w25, eq  // eq = none
   15d44:	strb	w1, [x19]
   15d48:	b	15cbc <__sancov_default_options@@Base+0x31ec>
   15d4c:	cbnz	x0, 15c90 <__sancov_default_options@@Base+0x31c0>
   15d50:	mov	x1, x19
   15d54:	mov	x0, x21
   15d58:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   15d5c:	mov	x20, x0
   15d60:	mov	x0, x19
   15d64:	mov	x19, #0x0                   	// #0
   15d68:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15d6c:	add	x0, x20, x0
   15d70:	b	15cbc <__sancov_default_options@@Base+0x31ec>
   15d74:	add	x19, x19, #0x1
   15d78:	mov	x0, x21
   15d7c:	mov	w2, #0x1                   	// #1
   15d80:	b	15cd0 <__sancov_default_options@@Base+0x3200>
   15d84:	mov	w0, #0x0                   	// #0
   15d88:	ret
   15d8c:	cmp	w0, #0x0
   15d90:	csinc	w0, w2, wzr, ne  // ne = any
   15d94:	ldp	x23, x24, [sp, #32]
   15d98:	ldp	x25, x26, [sp, #48]
   15d9c:	b	15d08 <__sancov_default_options@@Base+0x3238>
   15da0:	adrp	x0, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15da4:	add	x0, x0, #0xa70
   15da8:	ret
   15dac:	nop
   15db0:	stp	x19, x20, [sp, #-32]!
   15db4:	adrp	x19, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15db8:	add	x19, x19, #0xa70
   15dbc:	mov	x1, #0x1000                	// #4096
   15dc0:	mov	x0, x19
   15dc4:	str	x30, [sp, #24]
   15dc8:	bl	1ebe8 <__sanitizer_set_report_fd@@Base+0x5320>
   15dcc:	mov	x0, x19
   15dd0:	mov	w1, #0x2f                  	// #47
   15dd4:	bl	1be60 <__sanitizer_set_report_fd@@Base+0x2598>
   15dd8:	cbz	x0, 15e1c <__sancov_default_options@@Base+0x334c>
   15ddc:	add	x20, x0, #0x1
   15de0:	str	x21, [sp, #16]
   15de4:	mov	x0, x20
   15de8:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15dec:	cmp	x20, x19
   15df0:	mov	x21, x0
   15df4:	b.eq	15e0c <__sancov_default_options@@Base+0x333c>  // b.none
   15df8:	mov	x2, x0
   15dfc:	mov	x1, x20
   15e00:	mov	x0, x19
   15e04:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x1e78>
   15e08:	strb	wzr, [x21, x19]
   15e0c:	ldr	x21, [sp, #16]
   15e10:	ldr	x30, [sp, #24]
   15e14:	ldp	x19, x20, [sp], #32
   15e18:	ret
   15e1c:	mov	x0, x19
   15e20:	ldr	x30, [sp, #24]
   15e24:	ldp	x19, x20, [sp], #32
   15e28:	b	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15e2c:	nop
   15e30:	adrp	x1, 1c2000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   15e34:	add	x0, x1, #0xa70
   15e38:	ldrb	w1, [x1, #2672]
   15e3c:	cbz	w1, 15e44 <__sancov_default_options@@Base+0x3374>
   15e40:	ret
   15e44:	stp	x19, x20, [sp, #-32]!
   15e48:	mov	x1, #0x1000                	// #4096
   15e4c:	adrp	x19, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15e50:	add	x19, x19, #0xa70
   15e54:	str	x30, [sp, #24]
   15e58:	bl	1eb50 <__sanitizer_set_report_fd@@Base+0x5288>
   15e5c:	mov	x1, #0x1000                	// #4096
   15e60:	mov	x0, x19
   15e64:	bl	1ebe8 <__sanitizer_set_report_fd@@Base+0x5320>
   15e68:	mov	x0, x19
   15e6c:	mov	w1, #0x2f                  	// #47
   15e70:	bl	1be60 <__sanitizer_set_report_fd@@Base+0x2598>
   15e74:	cbz	x0, 15eb8 <__sancov_default_options@@Base+0x33e8>
   15e78:	add	x20, x0, #0x1
   15e7c:	str	x21, [sp, #16]
   15e80:	mov	x0, x20
   15e84:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15e88:	cmp	x20, x19
   15e8c:	mov	x21, x0
   15e90:	b.eq	15ea8 <__sancov_default_options@@Base+0x33d8>  // b.none
   15e94:	mov	x2, x0
   15e98:	mov	x1, x20
   15e9c:	mov	x0, x19
   15ea0:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x1e78>
   15ea4:	strb	wzr, [x21, x19]
   15ea8:	ldr	x21, [sp, #16]
   15eac:	ldr	x30, [sp, #24]
   15eb0:	ldp	x19, x20, [sp], #32
   15eb4:	ret
   15eb8:	mov	x0, x19
   15ebc:	ldr	x30, [sp, #24]
   15ec0:	ldp	x19, x20, [sp], #32
   15ec4:	b	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15ec8:	stp	x19, x20, [sp, #-64]!
   15ecc:	adrp	x20, 1c2000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   15ed0:	mov	x19, x1
   15ed4:	ldrb	w2, [x20, #2672]
   15ed8:	stp	x21, x22, [sp, #16]
   15edc:	mov	x21, x0
   15ee0:	str	x30, [sp, #48]
   15ee4:	cbz	w2, 15f30 <__sancov_default_options@@Base+0x3460>
   15ee8:	add	x20, x20, #0xa70
   15eec:	mov	x0, x20
   15ef0:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15ef4:	mov	x2, x0
   15ef8:	cbz	x19, 15f1c <__sancov_default_options@@Base+0x344c>
   15efc:	sub	x19, x19, #0x1
   15f00:	mov	x1, x20
   15f04:	cmp	x19, x0
   15f08:	mov	x0, x21
   15f0c:	csel	x19, x19, x2, ls  // ls = plast
   15f10:	mov	x2, x19
   15f14:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   15f18:	strb	wzr, [x21, x19]
   15f1c:	mov	x0, x19
   15f20:	ldp	x21, x22, [sp, #16]
   15f24:	ldr	x30, [sp, #48]
   15f28:	ldp	x19, x20, [sp], #64
   15f2c:	ret
   15f30:	mov	x1, #0x1000                	// #4096
   15f34:	add	x0, x20, #0xa70
   15f38:	adrp	x22, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   15f3c:	bl	1eb50 <__sanitizer_set_report_fd@@Base+0x5288>
   15f40:	add	x22, x22, #0xa70
   15f44:	mov	x1, #0x1000                	// #4096
   15f48:	mov	x0, x22
   15f4c:	bl	1ebe8 <__sanitizer_set_report_fd@@Base+0x5320>
   15f50:	mov	x0, x22
   15f54:	mov	w1, #0x2f                  	// #47
   15f58:	bl	1be60 <__sanitizer_set_report_fd@@Base+0x2598>
   15f5c:	cbz	x0, 15f98 <__sancov_default_options@@Base+0x34c8>
   15f60:	stp	x23, x24, [sp, #32]
   15f64:	add	x23, x0, #0x1
   15f68:	mov	x0, x23
   15f6c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15f70:	mov	x24, x0
   15f74:	cmp	x23, x22
   15f78:	b.eq	15fa4 <__sancov_default_options@@Base+0x34d4>  // b.none
   15f7c:	mov	x1, x23
   15f80:	mov	x2, x0
   15f84:	mov	x0, x22
   15f88:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x1e78>
   15f8c:	strb	wzr, [x24, x22]
   15f90:	ldp	x23, x24, [sp, #32]
   15f94:	b	15ee8 <__sancov_default_options@@Base+0x3418>
   15f98:	mov	x0, x22
   15f9c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   15fa0:	b	15ee8 <__sancov_default_options@@Base+0x3418>
   15fa4:	ldp	x23, x24, [sp, #32]
   15fa8:	b	15ee8 <__sancov_default_options@@Base+0x3418>
   15fac:	nop
   15fb0:	stp	x19, x20, [sp, #-32]!
   15fb4:	str	x30, [sp, #16]
   15fb8:	bl	1ddc0 <__sanitizer_set_report_fd@@Base+0x44f8>
   15fbc:	cbz	x0, 1600c <__sancov_default_options@@Base+0x353c>
   15fc0:	mov	x19, x0
   15fc4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   15fc8:	add	x0, x0, #0x8e8
   15fcc:	bl	22c78 <OnPrint@@Base+0x310>
   15fd0:	ldr	x1, [x19]
   15fd4:	cbz	x1, 15ff8 <__sancov_default_options@@Base+0x3528>
   15fd8:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   15fdc:	add	x19, x19, #0x8
   15fe0:	add	x20, x20, #0x68
   15fe4:	nop
   15fe8:	mov	x0, x20
   15fec:	bl	22c78 <OnPrint@@Base+0x310>
   15ff0:	ldr	x1, [x19], #8
   15ff4:	cbnz	x1, 15fe8 <__sancov_default_options@@Base+0x3518>
   15ff8:	ldr	x30, [sp, #16]
   15ffc:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16000:	ldp	x19, x20, [sp], #32
   16004:	add	x0, x0, #0x8f8
   16008:	b	22c78 <OnPrint@@Base+0x310>
   1600c:	ldr	x30, [sp, #16]
   16010:	ldp	x19, x20, [sp], #32
   16014:	ret
   16018:	stp	x19, x20, [sp, #-48]!
   1601c:	adrp	x20, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   16020:	add	x20, x20, #0xa00
   16024:	add	x19, x20, #0x10
   16028:	add	x20, x20, #0x60
   1602c:	stp	x21, x22, [sp, #16]
   16030:	mov	x22, x0
   16034:	mov	x21, x1
   16038:	str	x30, [sp, #32]
   1603c:	ldr	x2, [x19]
   16040:	mov	x1, x21
   16044:	mov	x0, x22
   16048:	add	x19, x19, #0x10
   1604c:	cbz	x2, 1605c <__sancov_default_options@@Base+0x358c>
   16050:	blr	x2
   16054:	cmp	x19, x20
   16058:	b.ne	1603c <__sancov_default_options@@Base+0x356c>  // b.any
   1605c:	ldp	x21, x22, [sp, #16]
   16060:	ldr	x30, [sp, #32]
   16064:	ldp	x19, x20, [sp], #48
   16068:	ret
   1606c:	nop
   16070:	stp	x19, x20, [sp, #-32]!
   16074:	adrp	x20, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   16078:	add	x20, x20, #0xa00
   1607c:	add	x20, x20, #0x10
   16080:	stp	x21, x30, [sp, #16]
   16084:	mov	x21, x0
   16088:	mov	x19, #0x0                   	// #0
   1608c:	add	x1, x20, x19
   16090:	mov	x0, x21
   16094:	add	x19, x19, #0x10
   16098:	ldr	x1, [x1, #8]
   1609c:	cbz	x1, 160ac <__sancov_default_options@@Base+0x35dc>
   160a0:	blr	x1
   160a4:	cmp	x19, #0x50
   160a8:	b.ne	1608c <__sancov_default_options@@Base+0x35bc>  // b.any
   160ac:	ldp	x21, x30, [sp, #16]
   160b0:	ldp	x19, x20, [sp], #32
   160b4:	ret

00000000000160b8 <__sanitizer_report_error_summary@@Base>:
   160b8:	mov	x1, x0
   160bc:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   160c0:	add	x0, x2, #0x550
   160c4:	b	22c78 <OnPrint@@Base+0x310>
   160c8:	adrp	x4, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   160cc:	ldr	x4, [x4, #4040]
   160d0:	ldrb	w2, [x4, #60]
   160d4:	cbnz	w2, 160dc <__sanitizer_report_error_summary@@Base+0x24>
   160d8:	ret
   160dc:	stp	x19, x20, [sp, #-96]!
   160e0:	mov	x20, x1
   160e4:	stp	x23, x24, [sp, #32]
   160e8:	adrp	x23, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   160ec:	add	x19, x23, #0xa00
   160f0:	stp	x21, x22, [sp, #16]
   160f4:	mov	x21, x0
   160f8:	ldr	x2, [x19, #96]
   160fc:	str	x30, [sp, #48]
   16100:	str	xzr, [sp, #64]
   16104:	stp	xzr, xzr, [sp, #72]
   16108:	cbz	x2, 161d8 <__sanitizer_report_error_summary@@Base+0x120>
   1610c:	sub	x0, x2, #0x1
   16110:	tst	x0, x2
   16114:	b.ne	16240 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   16118:	add	x22, x2, #0x3ff
   1611c:	neg	x2, x2
   16120:	and	x22, x22, x2
   16124:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16128:	mov	w2, #0x0                   	// #0
   1612c:	add	x1, x24, #0x700
   16130:	mov	x0, x22
   16134:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   16138:	ldr	x1, [sp, #64]
   1613c:	mov	x19, x0
   16140:	ldr	x2, [sp, #80]
   16144:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   16148:	ldp	x0, x1, [sp, #64]
   1614c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   16150:	stp	x19, x22, [sp, #64]
   16154:	ldr	x2, [sp, #80]
   16158:	cmp	x2, #0x3ff
   1615c:	b.hi	16180 <__sanitizer_report_error_summary@@Base+0xc8>  // b.pmore
   16160:	cmp	x22, #0x3ff
   16164:	b.ls	161e8 <__sanitizer_report_error_summary@@Base+0x130>  // b.plast
   16168:	mov	x3, #0x400                 	// #1024
   1616c:	add	x0, x19, x2
   16170:	mov	w1, #0x0                   	// #0
   16174:	sub	x2, x3, x2
   16178:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1617c:	ldr	x19, [sp, #64]
   16180:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   16184:	adrp	x2, 6d000 <_Unwind_Backtrace@GCC_3.3>
   16188:	cmp	x20, #0x0
   1618c:	ldr	q0, [x0, #1232]
   16190:	mov	x3, x21
   16194:	add	x0, sp, #0x40
   16198:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1619c:	add	x1, x1, #0x900
   161a0:	str	q0, [sp, #80]
   161a4:	strb	wzr, [x19]
   161a8:	ldr	x2, [x2, #968]
   161ac:	csel	x2, x2, x20, eq  // eq = none
   161b0:	bl	22d88 <OnPrint@@Base+0x420>
   161b4:	ldr	x0, [sp, #64]
   161b8:	bl	6670 <__sanitizer_report_error_summary@plt>
   161bc:	ldp	x0, x1, [sp, #64]
   161c0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   161c4:	ldp	x21, x22, [sp, #16]
   161c8:	ldp	x23, x24, [sp, #32]
   161cc:	ldr	x30, [sp, #48]
   161d0:	ldp	x19, x20, [sp], #96
   161d4:	ret
   161d8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   161dc:	mov	x2, x0
   161e0:	str	x0, [x19, #96]
   161e4:	b	1610c <__sanitizer_report_error_summary@@Base+0x54>
   161e8:	add	x23, x23, #0xa00
   161ec:	ldr	x0, [x23, #96]
   161f0:	cbz	x0, 16250 <__sanitizer_report_error_summary@@Base+0x198>
   161f4:	sub	x1, x0, #0x1
   161f8:	tst	x1, x0
   161fc:	b.ne	16240 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   16200:	add	x22, x0, #0x3ff
   16204:	neg	x0, x0
   16208:	and	x22, x22, x0
   1620c:	add	x1, x24, #0x700
   16210:	mov	w2, #0x0                   	// #0
   16214:	mov	x0, x22
   16218:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1621c:	mov	x19, x0
   16220:	ldr	x1, [sp, #64]
   16224:	ldr	x2, [sp, #80]
   16228:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1622c:	ldp	x0, x1, [sp, #64]
   16230:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   16234:	stp	x19, x22, [sp, #64]
   16238:	ldr	x2, [sp, #80]
   1623c:	b	16168 <__sanitizer_report_error_summary@@Base+0xb0>
   16240:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16244:	add	x0, x0, #0x6e8
   16248:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1624c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   16250:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   16254:	str	x0, [x23, #96]
   16258:	b	161f4 <__sanitizer_report_error_summary@@Base+0x13c>
   1625c:	nop

0000000000016260 <__sanitizer_acquire_crash_state@@Base>:
   16260:	adrp	x0, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   16264:	add	x0, x0, #0xa00
   16268:	add	x0, x0, #0x68
   1626c:	mov	w2, #0x1                   	// #1
   16270:	ldxrb	w1, [x0]
   16274:	stxrb	w3, w2, [x0]
   16278:	cbnz	w3, 16270 <__sanitizer_acquire_crash_state@@Base+0x10>
   1627c:	tst	w1, #0xff
   16280:	dmb	ish
   16284:	cset	w0, eq  // eq = none
   16288:	ret
   1628c:	nop

0000000000016290 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   16290:	cmp	x0, #0x0
   16294:	mov	x2, x0
   16298:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1629c:	mov	w0, #0x0                   	// #0
   162a0:	b.eq	162dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c>  // b.none
   162a4:	adrp	x3, 1c1000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   162a8:	add	x4, x3, #0xa00
   162ac:	add	x0, x4, #0x10
   162b0:	ldr	x4, [x4, #16]
   162b4:	cbz	x4, 16304 <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
   162b8:	ldr	x4, [x0, #16]
   162bc:	cbz	x4, 16310 <__sanitizer_install_malloc_and_free_hooks@@Base+0x80>
   162c0:	ldr	x4, [x0, #32]
   162c4:	cbz	x4, 1631c <__sanitizer_install_malloc_and_free_hooks@@Base+0x8c>
   162c8:	ldr	x4, [x0, #48]
   162cc:	cbz	x4, 16328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x98>
   162d0:	ldr	x4, [x0, #64]
   162d4:	mov	w0, #0x0                   	// #0
   162d8:	cbz	x4, 162e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x50>
   162dc:	ret
   162e0:	mov	w4, #0x4                   	// #4
   162e4:	mov	w0, #0x5                   	// #5
   162e8:	add	x3, x3, #0xa00
   162ec:	sbfiz	x4, x4, #4, #32
   162f0:	add	x3, x3, #0x10
   162f4:	add	x5, x3, x4
   162f8:	str	x2, [x3, x4]
   162fc:	str	x1, [x5, #8]
   16300:	ret
   16304:	mov	w4, #0x0                   	// #0
   16308:	mov	w0, #0x1                   	// #1
   1630c:	b	162e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   16310:	mov	w4, #0x1                   	// #1
   16314:	mov	w0, #0x2                   	// #2
   16318:	b	162e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   1631c:	mov	w4, #0x2                   	// #2
   16320:	mov	w0, #0x3                   	// #3
   16324:	b	162e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   16328:	mov	w4, #0x3                   	// #3
   1632c:	mov	w0, #0x4                   	// #4
   16330:	b	162e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   16334:	nop
   16338:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1633c:	ldr	x3, [x1, #2704]
   16340:	cbnz	x3, 1634c <__sanitizer_install_malloc_and_free_hooks@@Base+0xbc>
   16344:	str	x0, [x1, #2704]
   16348:	ret
   1634c:	str	x30, [sp, #-16]!
   16350:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16354:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16358:	add	x2, x2, #0x920
   1635c:	add	x0, x0, #0x950
   16360:	mov	x4, #0x0                   	// #0
   16364:	mov	w1, #0x16                  	// #22
   16368:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1636c:	nop
   16370:	mov	x0, #0x0                   	// #0
   16374:	ret
   16378:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1637c:	stp	x19, x20, [sp, #-128]!
   16380:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16384:	ldr	x0, [x0, #4040]
   16388:	stp	x21, x22, [sp, #16]
   1638c:	add	x1, x1, #0x9a8
   16390:	str	x1, [sp, #120]
   16394:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16398:	ldp	x21, x19, [x0, #136]
   1639c:	stp	x23, x24, [sp, #32]
   163a0:	mov	x22, #0x0                   	// #0
   163a4:	stp	x27, x28, [sp, #64]
   163a8:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
   163ac:	mov	w23, #0x0                   	// #0
   163b0:	stp	d8, d9, [sp, #96]
   163b4:	mov	x20, #0x0                   	// #0
   163b8:	cmp	x21, #0x0
   163bc:	cset	w24, ne  // ne = any
   163c0:	ldr	d9, [x1, #2648]
   163c4:	fmov	d8, xzr
   163c8:	movk	x27, #0xcccd
   163cc:	stp	x25, x26, [sp, #48]
   163d0:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   163d4:	ldrb	w26, [x0, #152]
   163d8:	str	x30, [sp, #80]
   163dc:	nop
   163e0:	mov	w0, #0x64                  	// #100
   163e4:	bl	214e8 <__sanitizer_set_report_fd@@Base+0x7c20>
   163e8:	bl	1fd68 <__sanitizer_set_report_fd@@Base+0x64a0>
   163ec:	lsr	x28, x0, #20
   163f0:	ldr	x1, [x25, #3680]
   163f4:	ldr	w0, [x1]
   163f8:	cbz	w0, 1643c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ac>
   163fc:	add	x0, x20, x20, lsl #1
   16400:	lsl	x0, x0, #2
   16404:	sub	x0, x0, x20
   16408:	umulh	x0, x0, x27
   1640c:	cmp	x28, x0, lsr #3
   16410:	b.hi	164c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x234>  // b.pmore
   16414:	bl	23d08 <OnPrint@@Base+0x13a0>
   16418:	mov	x5, x0
   1641c:	cbz	x0, 1643c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ac>
   16420:	add	x1, x22, x22, lsl #1
   16424:	ldr	x3, [x0, #8]
   16428:	lsl	x1, x1, #2
   1642c:	sub	x1, x1, x22
   16430:	umulh	x1, x1, x27
   16434:	cmp	x3, x1, lsr #3
   16438:	b.hi	16524 <__sanitizer_install_malloc_and_free_hooks@@Base+0x294>  // b.pmore
   1643c:	cmp	w24, #0x0
   16440:	ccmp	x21, x28, #0x2, ne  // ne = any
   16444:	b.cc	16558 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c8>  // b.lo, b.ul, b.last
   16448:	cbz	x19, 16488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   1644c:	cmp	x19, x28
   16450:	eor	w0, w23, #0x1
   16454:	cset	w1, cc  // cc = lo, ul, last
   16458:	ands	w1, w1, w0
   1645c:	b.ne	164e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x258>  // b.any
   16460:	cmp	w23, #0x0
   16464:	ccmp	x19, x28, #0x0, ne  // ne = any
   16468:	b.cc	16488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>  // b.lo, b.ul, b.last
   1646c:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   16470:	mov	w23, #0x0                   	// #0
   16474:	ldr	x1, [x0, #2704]
   16478:	cbz	x1, 16488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   1647c:	mov	w0, #0x0                   	// #0
   16480:	blr	x1
   16484:	nop
   16488:	cbz	w26, 163e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>
   1648c:	scvtf	d0, d8
   16490:	scvtf	d1, x28
   16494:	fmul	d0, d0, d9
   16498:	fcmpe	d1, d0
   1649c:	b.le	163e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>
   164a0:	mov	x1, x28
   164a4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   164a8:	add	x0, x0, #0xa38
   164ac:	bl	22c78 <OnPrint@@Base+0x310>
   164b0:	fmov	d8, x28
   164b4:	mov	x1, #0x14                  	// #20
   164b8:	mov	x0, #0x5a                  	// #90
   164bc:	bl	6d10 <__sanitizer_print_memory_profile@plt>
   164c0:	b	163e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>
   164c4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   164c8:	mov	x20, x28
   164cc:	mov	x2, x28
   164d0:	ldr	x1, [x0, #4008]
   164d4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   164d8:	add	x0, x0, #0x998
   164dc:	ldr	x1, [x1]
   164e0:	bl	22c78 <OnPrint@@Base+0x310>
   164e4:	b	16414 <__sanitizer_install_malloc_and_free_hooks@@Base+0x184>
   164e8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   164ec:	mov	w23, w1
   164f0:	mov	x3, x28
   164f4:	mov	x2, x19
   164f8:	ldr	x5, [x0, #4008]
   164fc:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16500:	add	x0, x0, #0xa08
   16504:	ldr	x1, [x5]
   16508:	bl	22d00 <OnPrint@@Base+0x398>
   1650c:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   16510:	ldr	x1, [x0, #2704]
   16514:	cbz	x1, 16488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   16518:	mov	w0, #0x1                   	// #1
   1651c:	blr	x1
   16520:	b	16488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   16524:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16528:	lsr	x3, x3, #20
   1652c:	ldr	x2, [x5]
   16530:	str	x5, [sp, #112]
   16534:	ldr	x1, [x0, #4008]
   16538:	ldr	x0, [sp, #120]
   1653c:	ldr	x1, [x1]
   16540:	bl	22c78 <OnPrint@@Base+0x310>
   16544:	ldr	x5, [sp, #112]
   16548:	cmp	w24, #0x0
   1654c:	ccmp	x21, x28, #0x2, ne  // ne = any
   16550:	ldr	x22, [x5, #8]
   16554:	b.cs	16448 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b8>  // b.hs, b.nlast
   16558:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1655c:	mov	x3, x28
   16560:	mov	x2, x21
   16564:	ldr	x1, [x0, #4008]
   16568:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1656c:	add	x0, x0, #0x9d8
   16570:	ldr	x1, [x1]
   16574:	bl	22d00 <OnPrint@@Base+0x398>
   16578:	bl	20bf0 <__sanitizer_set_report_fd@@Base+0x7328>
   1657c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   16580:	stp	x19, x20, [sp, #-96]!
   16584:	stp	x23, x24, [sp, #32]
   16588:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1658c:	ldr	x19, [x23, #4000]
   16590:	stp	x21, x22, [sp, #16]
   16594:	mov	x21, x0
   16598:	str	xzr, [sp, #64]
   1659c:	ldr	x1, [x19]
   165a0:	str	x30, [sp, #48]
   165a4:	stp	xzr, xzr, [sp, #72]
   165a8:	cbz	x1, 166c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x430>
   165ac:	sub	x0, x1, #0x1
   165b0:	tst	x0, x1
   165b4:	b.ne	1672c <__sanitizer_install_malloc_and_free_hooks@@Base+0x49c>  // b.any
   165b8:	neg	x19, x1
   165bc:	mov	x22, #0xffff                	// #65535
   165c0:	add	x1, x1, x22
   165c4:	mov	w2, #0x0                   	// #0
   165c8:	and	x19, x1, x19
   165cc:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   165d0:	mov	x0, x19
   165d4:	add	x1, x24, #0x700
   165d8:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   165dc:	mov	x20, x0
   165e0:	ldr	x1, [sp, #64]
   165e4:	ldr	x2, [sp, #80]
   165e8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   165ec:	ldp	x0, x1, [sp, #64]
   165f0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   165f4:	stp	x20, x19, [sp, #64]
   165f8:	ldr	x2, [sp, #80]
   165fc:	cmp	x2, x22
   16600:	b.ls	16678 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3e8>  // b.plast
   16604:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16608:	mov	x2, x21
   1660c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16610:	add	x1, x1, #0xdb8
   16614:	ldr	q0, [x0, #2656]
   16618:	add	x0, sp, #0x40
   1661c:	str	q0, [sp, #80]
   16620:	strb	wzr, [x20]
   16624:	bl	22d88 <OnPrint@@Base+0x420>
   16628:	ldr	x19, [sp, #64]
   1662c:	b	16640 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3b0>
   16630:	strb	wzr, [x0]
   16634:	mov	x0, x19
   16638:	add	x19, x1, #0x1
   1663c:	bl	1ff28 <__sanitizer_set_report_fd@@Base+0x6660>
   16640:	mov	w1, #0xa                   	// #10
   16644:	mov	x0, x19
   16648:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x2518>
   1664c:	mov	x1, x0
   16650:	cbnz	x0, 16630 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3a0>
   16654:	ldrb	w0, [x19]
   16658:	cbnz	w0, 1669c <__sanitizer_install_malloc_and_free_hooks@@Base+0x40c>
   1665c:	ldp	x0, x1, [sp, #64]
   16660:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   16664:	ldp	x21, x22, [sp, #16]
   16668:	ldp	x23, x24, [sp, #32]
   1666c:	ldr	x30, [sp, #48]
   16670:	ldp	x19, x20, [sp], #96
   16674:	ret
   16678:	cmp	x19, x22
   1667c:	b.ls	166d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x440>  // b.plast
   16680:	mov	x3, #0x10000               	// #65536
   16684:	add	x0, x20, x2
   16688:	mov	w1, #0x0                   	// #0
   1668c:	sub	x2, x3, x2
   16690:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   16694:	ldr	x20, [sp, #64]
   16698:	b	16604 <__sanitizer_install_malloc_and_free_hooks@@Base+0x374>
   1669c:	mov	x0, x19
   166a0:	bl	1ff28 <__sanitizer_set_report_fd@@Base+0x6660>
   166a4:	ldp	x0, x1, [sp, #64]
   166a8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   166ac:	ldp	x21, x22, [sp, #16]
   166b0:	ldp	x23, x24, [sp, #32]
   166b4:	ldr	x30, [sp, #48]
   166b8:	ldp	x19, x20, [sp], #96
   166bc:	ret
   166c0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   166c4:	mov	x1, x0
   166c8:	str	x0, [x19]
   166cc:	b	165ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x31c>
   166d0:	ldr	x23, [x23, #4000]
   166d4:	ldr	x0, [x23]
   166d8:	cbz	x0, 1673c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4ac>
   166dc:	sub	x1, x0, #0x1
   166e0:	tst	x1, x0
   166e4:	b.ne	1672c <__sanitizer_install_malloc_and_free_hooks@@Base+0x49c>  // b.any
   166e8:	mov	x1, #0xffff                	// #65535
   166ec:	add	x19, x0, x1
   166f0:	neg	x0, x0
   166f4:	add	x1, x24, #0x700
   166f8:	and	x19, x19, x0
   166fc:	mov	w2, #0x0                   	// #0
   16700:	mov	x0, x19
   16704:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   16708:	ldr	x1, [sp, #64]
   1670c:	mov	x20, x0
   16710:	ldr	x2, [sp, #80]
   16714:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   16718:	ldp	x0, x1, [sp, #64]
   1671c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   16720:	stp	x20, x19, [sp, #64]
   16724:	ldr	x2, [sp, #80]
   16728:	b	16680 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f0>
   1672c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16730:	add	x0, x0, #0x6e8
   16734:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   16738:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1673c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   16740:	str	x0, [x23]
   16744:	b	166dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x44c>
   16748:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1674c:	ldr	x0, [x0, #4040]
   16750:	ldp	x1, x2, [x0, #136]
   16754:	orr	x1, x1, x2
   16758:	cbnz	x1, 16764 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4d4>
   1675c:	ldrb	w0, [x0, #152]
   16760:	cbz	w0, 16780 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4f0>
   16764:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16768:	ldr	x0, [x0, #3880]
   1676c:	cbz	x0, 16780 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4f0>
   16770:	adrp	x0, 16000 <__sancov_default_options@@Base+0x3530>
   16774:	mov	x1, #0x0                   	// #0
   16778:	add	x0, x0, #0x378
   1677c:	b	1f058 <__sanitizer_set_report_fd@@Base+0x5790>
   16780:	ret
   16784:	nop
   16788:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1678c:	str	x0, [x1, #2712]
   16790:	ret
   16794:	nop

0000000000016798 <__sanitizer_sandbox_on_notify@@Base>:
   16798:	str	x30, [sp, #-16]!
   1679c:	bl	21888 <__sanitizer_set_report_fd@@Base+0x7fc0>
   167a0:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   167a4:	ldr	x0, [x0, #2712]
   167a8:	cbz	x0, 167b8 <__sanitizer_sandbox_on_notify@@Base+0x20>
   167ac:	ldr	x30, [sp], #16
   167b0:	mov	x16, x0
   167b4:	br	x16
   167b8:	ldr	x30, [sp], #16
   167bc:	ret
   167c0:	stp	x19, x20, [sp, #-64]!
   167c4:	mov	x20, x0
   167c8:	mov	x0, x1
   167cc:	stp	x21, x22, [sp, #16]
   167d0:	mov	x22, x2
   167d4:	mov	x21, x3
   167d8:	stp	x23, x30, [sp, #32]
   167dc:	bl	15860 <__sancov_default_options@@Base+0x2d90>
   167e0:	cbz	x0, 168b4 <__sanitizer_sandbox_on_notify@@Base+0x11c>
   167e4:	mov	x19, x0
   167e8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   167ec:	ldr	x0, [x0, #4040]
   167f0:	ldr	x23, [x0, #168]
   167f4:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   167f8:	mov	x4, x19
   167fc:	mov	x5, x0
   16800:	mov	x3, x23
   16804:	adrp	x6, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16808:	add	x6, x6, #0xad0
   1680c:	mov	x1, #0x1000                	// #4096
   16810:	mov	x0, x20
   16814:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16818:	add	x2, x2, #0xad8
   1681c:	bl	22970 <OnPrint@@Base+0x8>
   16820:	add	x2, sp, #0x3c
   16824:	mov	x0, x20
   16828:	mov	w1, #0x1                   	// #1
   1682c:	bl	207c8 <__sanitizer_set_report_fd@@Base+0x6f00>
   16830:	mov	w19, w0
   16834:	cmn	w0, #0x1
   16838:	b.eq	1689c <__sanitizer_sandbox_on_notify@@Base+0x104>  // b.none
   1683c:	mov	w0, w19
   16840:	mov	x4, #0x0                   	// #0
   16844:	mov	x3, #0x0                   	// #0
   16848:	mov	x2, #0x8                   	// #8
   1684c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16850:	add	x1, x1, #0xbd0
   16854:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   16858:	mov	x1, x22
   1685c:	lsl	x2, x21, #3
   16860:	mov	x4, #0x0                   	// #0
   16864:	mov	x3, #0x0                   	// #0
   16868:	mov	w0, w19
   1686c:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   16870:	mov	w0, w19
   16874:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   16878:	mov	x2, x21
   1687c:	mov	x1, x20
   16880:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16884:	add	x0, x0, #0xb28
   16888:	bl	22c78 <OnPrint@@Base+0x310>
   1688c:	ldp	x21, x22, [sp, #16]
   16890:	ldp	x23, x30, [sp, #32]
   16894:	ldp	x19, x20, [sp], #64
   16898:	ret
   1689c:	ldr	w2, [sp, #60]
   168a0:	mov	x1, x20
   168a4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   168a8:	add	x0, x0, #0xae8
   168ac:	bl	22d00 <OnPrint@@Base+0x398>
   168b0:	b	1683c <__sanitizer_sandbox_on_notify@@Base+0xa4>
   168b4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   168b8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   168bc:	add	x2, x2, #0xa70
   168c0:	add	x0, x0, #0xa80
   168c4:	mov	x4, #0x0                   	// #0
   168c8:	mov	x3, #0x0                   	// #0
   168cc:	mov	w1, #0x28                  	// #40
   168d0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   168d4:	nop
   168d8:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   168dc:	ldrb	w2, [x1, #2720]
   168e0:	cbz	w2, 168e8 <__sanitizer_sandbox_on_notify@@Base+0x150>
   168e4:	ret
   168e8:	stp	x19, x30, [sp, #-16]!
   168ec:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   168f0:	and	w0, w0, #0xff
   168f4:	ldr	x19, [x19, #3784]
   168f8:	strb	w0, [x1, #2720]
   168fc:	mov	x0, x19
   16900:	bl	21538 <__sanitizer_set_report_fd@@Base+0x7c70>
   16904:	mov	x0, x19
   16908:	ldp	x19, x30, [sp], #16
   1690c:	b	2c4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fa8>

0000000000016910 <__sanitizer_cov_trace_pc_guard@@Base>:
   16910:	ldr	w3, [x0]
   16914:	cbnz	w3, 1691c <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   16918:	ret
   1691c:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   16920:	add	x0, x0, #0xaa0
   16924:	add	x0, x0, #0x8
   16928:	str	x30, [sp, #-16]!
   1692c:	sub	w3, w3, #0x1
   16930:	ldr	x4, [x0, #24]
   16934:	ldr	x0, [x0, #8]
   16938:	cmp	x3, x4
   1693c:	b.cs	16958 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.hs, b.nlast
   16940:	ldr	x1, [x0, x3, lsl #3]
   16944:	cbnz	x1, 16950 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   16948:	sub	x30, x30, #0x1
   1694c:	str	x30, [x0, x3, lsl #3]
   16950:	ldr	x30, [sp], #16
   16954:	ret
   16958:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1695c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16960:	add	x2, x2, #0x560
   16964:	add	x0, x0, #0x578
   16968:	mov	w1, #0x1b6                 	// #438
   1696c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000016970 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   16970:	cmp	x0, x1
   16974:	b.eq	16ad0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x160>  // b.none
   16978:	stp	x19, x20, [sp, #-48]!
   1697c:	mov	x19, x0
   16980:	ldr	w0, [x0]
   16984:	str	x30, [sp, #40]
   16988:	cbz	w0, 16998 <__sanitizer_cov_trace_pc_guard_init@@Base+0x28>
   1698c:	ldr	x30, [sp, #40]
   16990:	ldp	x19, x20, [sp], #48
   16994:	ret
   16998:	stp	x21, x22, [sp, #16]
   1699c:	adrp	x22, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   169a0:	add	x0, x22, #0xaa0
   169a4:	mov	x20, x1
   169a8:	add	x21, x0, #0x8
   169ac:	ldrb	w1, [x0, #8]
   169b0:	cbz	w1, 16ad4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x164>
   169b4:	cmp	x19, x20
   169b8:	mov	x1, x19
   169bc:	b.eq	16b84 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>  // b.none
   169c0:	add	x0, x22, #0xaa0
   169c4:	ldr	x0, [x0, #32]
   169c8:	mov	w21, w0
   169cc:	b.cs	16a80 <__sanitizer_cov_trace_pc_guard_init@@Base+0x110>  // b.hs, b.nlast
   169d0:	sub	x3, x20, #0x1
   169d4:	sub	x3, x3, x19
   169d8:	cmp	x3, #0xf
   169dc:	lsr	x3, x3, #2
   169e0:	add	x4, x3, #0x1
   169e4:	b.ls	16ba8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x238>  // b.plast
   169e8:	adrp	x5, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   169ec:	dup	v1.4s, w0
   169f0:	movi	v3.4s, #0x4
   169f4:	lsr	x2, x4, #2
   169f8:	ldr	q0, [x5, #3008]
   169fc:	add	x2, x19, x2, lsl #4
   16a00:	movi	v2.4s, #0x1
   16a04:	add	v1.4s, v1.4s, v0.4s
   16a08:	mov	v0.16b, v1.16b
   16a0c:	add	v1.4s, v1.4s, v3.4s
   16a10:	add	v0.4s, v0.4s, v2.4s
   16a14:	str	q0, [x1], #16
   16a18:	cmp	x1, x2
   16a1c:	b.ne	16a08 <__sanitizer_cov_trace_pc_guard_init@@Base+0x98>  // b.any
   16a20:	and	x2, x4, #0xfffffffffffffffc
   16a24:	cmp	x4, x2
   16a28:	add	w1, w21, w2
   16a2c:	add	x19, x19, x2, lsl #2
   16a30:	b.eq	16a78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.none
   16a34:	mov	x2, x19
   16a38:	add	w4, w1, #0x1
   16a3c:	str	w4, [x2], #4
   16a40:	cmp	x20, x2
   16a44:	b.ls	16a78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   16a48:	add	w2, w1, #0x2
   16a4c:	str	w2, [x19, #4]
   16a50:	add	x2, x19, #0x8
   16a54:	cmp	x20, x2
   16a58:	b.ls	16a78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   16a5c:	add	w2, w1, #0x3
   16a60:	str	w2, [x19, #8]
   16a64:	add	x2, x19, #0xc
   16a68:	cmp	x20, x2
   16a6c:	b.ls	16a78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   16a70:	add	w1, w1, #0x4
   16a74:	str	w1, [x19, #12]
   16a78:	add	w19, w21, #0x1
   16a7c:	add	w21, w19, w3
   16a80:	cmp	x0, w21, uxtw
   16a84:	mov	w20, w21
   16a88:	b.cs	16ab8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x148>  // b.hs, b.nlast
   16a8c:	add	x1, x22, #0xaa0
   16a90:	add	x1, x1, #0x8
   16a94:	ldr	x2, [x1, #16]
   16a98:	cmp	x20, x2, lsr #3
   16a9c:	b.hi	16b14 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a4>  // b.pmore
   16aa0:	ldr	x21, [x1, #8]
   16aa4:	sub	x2, x20, x0
   16aa8:	mov	w1, #0x0                   	// #0
   16aac:	add	x0, x21, x0, lsl #3
   16ab0:	lsl	x2, x2, #3
   16ab4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   16ab8:	add	x0, x22, #0xaa0
   16abc:	ldp	x21, x22, [sp, #16]
   16ac0:	str	x20, [x0, #32]
   16ac4:	ldr	x30, [sp, #40]
   16ac8:	ldp	x19, x20, [sp], #48
   16acc:	ret
   16ad0:	ret
   16ad4:	mov	w1, #0x1                   	// #1
   16ad8:	strb	w1, [x0, #8]
   16adc:	bl	12af0 <__sancov_default_options@@Base+0x20>
   16ae0:	ldr	w0, [x19]
   16ae4:	str	xzr, [x21, #8]
   16ae8:	stp	xzr, xzr, [x21, #16]
   16aec:	cbz	w0, 169b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>
   16af0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16af4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16af8:	add	x2, x2, #0xb50
   16afc:	add	x0, x0, #0xa80
   16b00:	mov	x4, #0x0                   	// #0
   16b04:	mov	x3, #0x0                   	// #0
   16b08:	mov	w1, #0x77                  	// #119
   16b0c:	str	x23, [sp, #32]
   16b10:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   16b14:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16b18:	ldr	x19, [x19, #4000]
   16b1c:	ldr	x0, [x19]
   16b20:	str	x23, [sp, #32]
   16b24:	cbz	x0, 16bb0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x240>
   16b28:	sub	x19, x0, #0x1
   16b2c:	tst	x19, x0
   16b30:	b.ne	16bbc <__sanitizer_cov_trace_pc_guard_init@@Base+0x24c>  // b.any
   16b34:	add	x23, x22, #0xaa0
   16b38:	add	x19, x19, w21, uxtw #3
   16b3c:	neg	x0, x0
   16b40:	mov	w2, #0x0                   	// #0
   16b44:	and	x19, x19, x0
   16b48:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16b4c:	mov	x0, x19
   16b50:	add	x1, x1, #0x700
   16b54:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   16b58:	mov	x21, x0
   16b5c:	ldr	x1, [x23, #16]
   16b60:	ldr	x2, [x23, #32]
   16b64:	lsl	x2, x2, #3
   16b68:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   16b6c:	ldp	x0, x1, [x23, #16]
   16b70:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   16b74:	stp	x21, x19, [x23, #16]
   16b78:	ldr	x0, [x23, #32]
   16b7c:	ldr	x23, [sp, #32]
   16b80:	b	16aa4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x134>
   16b84:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16b88:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16b8c:	add	x2, x2, #0xb68
   16b90:	add	x0, x0, #0xa80
   16b94:	mov	x4, x19
   16b98:	mov	x3, x19
   16b9c:	mov	w1, #0x78                  	// #120
   16ba0:	str	x23, [sp, #32]
   16ba4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   16ba8:	mov	w1, w0
   16bac:	b	16a34 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc4>
   16bb0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   16bb4:	str	x0, [x19]
   16bb8:	b	16b28 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b8>
   16bbc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16bc0:	add	x0, x0, #0x6e8
   16bc4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   16bc8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   16bcc:	nop

0000000000016bd0 <__sanitizer_cov_reset@@Base>:
   16bd0:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   16bd4:	add	x0, x0, #0xaa0
   16bd8:	add	x0, x0, #0x8
   16bdc:	ldr	x2, [x0, #24]
   16be0:	ldr	x0, [x0, #8]
   16be4:	cbz	x2, 16bf4 <__sanitizer_cov_reset@@Base+0x24>
   16be8:	lsl	x2, x2, #3
   16bec:	mov	w1, #0x0                   	// #0
   16bf0:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   16bf4:	str	x30, [sp, #-16]!
   16bf8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16bfc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   16c00:	add	x2, x2, #0x560
   16c04:	add	x0, x0, #0x578
   16c08:	mov	x4, #0x0                   	// #0
   16c0c:	mov	x3, #0x0                   	// #0
   16c10:	mov	w1, #0x1b6                 	// #438
   16c14:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000016c18 <__sanitizer_cov_trace_cmp@@Base>:
   16c18:	ret
   16c1c:	nop

0000000000016c20 <__sanitizer_cov_trace_cmp1@@Base>:
   16c20:	ret
   16c24:	nop

0000000000016c28 <__sanitizer_cov_trace_cmp2@@Base>:
   16c28:	ret
   16c2c:	nop

0000000000016c30 <__sanitizer_cov_trace_cmp4@@Base>:
   16c30:	ret
   16c34:	nop

0000000000016c38 <__sanitizer_cov_trace_cmp8@@Base>:
   16c38:	ret
   16c3c:	nop

0000000000016c40 <__sanitizer_cov_trace_const_cmp1@@Base>:
   16c40:	ret
   16c44:	nop

0000000000016c48 <__sanitizer_cov_trace_const_cmp2@@Base>:
   16c48:	ret
   16c4c:	nop

0000000000016c50 <__sanitizer_cov_trace_const_cmp4@@Base>:
   16c50:	ret
   16c54:	nop

0000000000016c58 <__sanitizer_cov_trace_const_cmp8@@Base>:
   16c58:	ret
   16c5c:	nop

0000000000016c60 <__sanitizer_cov_trace_switch@@Base>:
   16c60:	ret
   16c64:	nop

0000000000016c68 <__sanitizer_cov_trace_div4@@Base>:
   16c68:	ret
   16c6c:	nop

0000000000016c70 <__sanitizer_cov_trace_div8@@Base>:
   16c70:	ret
   16c74:	nop

0000000000016c78 <__sanitizer_cov_trace_gep@@Base>:
   16c78:	ret
   16c7c:	nop

0000000000016c80 <__sanitizer_cov_trace_pc_indir@@Base>:
   16c80:	ret
   16c84:	nop

0000000000016c88 <__sanitizer_cov_8bit_counters_init@@Base>:
   16c88:	ret
   16c8c:	nop

0000000000016c90 <__sanitizer_cov_pcs_init@@Base>:
   16c90:	ret
   16c94:	nop

0000000000016c98 <__sanitizer_dump_coverage@@Base>:
   16c98:	cbnz	x1, 16ca0 <__sanitizer_dump_coverage@@Base+0x8>
   16c9c:	ret
   16ca0:	stp	x19, x20, [sp, #-128]!
   16ca4:	mov	x20, x1
   16ca8:	mov	x19, x0
   16cac:	mov	x2, #0x0                   	// #0
   16cb0:	mov	x1, #0x0                   	// #0
   16cb4:	mov	x0, #0x1000                	// #4096
   16cb8:	stp	x21, x22, [sp, #16]
   16cbc:	lsl	x22, x20, #3
   16cc0:	stp	x23, x24, [sp, #32]
   16cc4:	mov	w23, #0x0                   	// #0
   16cc8:	stp	x25, x26, [sp, #48]
   16ccc:	mov	x26, #0x0                   	// #0
   16cd0:	stp	x27, x28, [sp, #64]
   16cd4:	adrp	x28, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   16cd8:	mov	x27, #0x0                   	// #0
   16cdc:	str	x30, [sp, #80]
   16ce0:	bl	12f40 <__sancov_default_options@@Base+0x470>
   16ce4:	mov	x2, #0x0                   	// #0
   16ce8:	mov	x1, #0x0                   	// #0
   16cec:	mov	x25, x0
   16cf0:	mov	x0, #0x1000                	// #4096
   16cf4:	bl	12f40 <__sancov_default_options@@Base+0x470>
   16cf8:	mov	x24, x0
   16cfc:	mov	x2, #0x0                   	// #0
   16d00:	mov	x1, #0x0                   	// #0
   16d04:	mov	x0, x22
   16d08:	bl	12f40 <__sancov_default_options@@Base+0x470>
   16d0c:	mov	x1, x19
   16d10:	mov	x2, x22
   16d14:	mov	x21, x0
   16d18:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   16d1c:	mov	x0, x21
   16d20:	mov	x1, x20
   16d24:	mov	w2, #0x0                   	// #0
   16d28:	bl	f718 <__sancov_lowest_stack@@Base+0x1ee8>
   16d2c:	add	x0, x28, #0xb80
   16d30:	mov	x19, #0x0                   	// #0
   16d34:	str	x0, [sp, #104]
   16d38:	b	16d6c <__sanitizer_dump_coverage@@Base+0xd4>
   16d3c:	cbnz	w23, 16e20 <__sanitizer_dump_coverage@@Base+0x188>
   16d40:	mov	x3, x28
   16d44:	mov	x0, x22
   16d48:	mov	x26, x5
   16d4c:	mov	w23, w4
   16d50:	mov	x1, x24
   16d54:	mov	x27, x19
   16d58:	mov	x2, #0x1000                	// #4096
   16d5c:	bl	6740 <__sanitizer_get_module_and_offset_for_pc@plt>
   16d60:	add	x19, x19, #0x1
   16d64:	cmp	x20, x19
   16d68:	b.eq	16dbc <__sanitizer_dump_coverage@@Base+0x124>  // b.none
   16d6c:	ldr	x22, [x21, x19, lsl #3]
   16d70:	add	x28, x21, x19, lsl #3
   16d74:	mov	x3, x28
   16d78:	mov	x2, #0x0                   	// #0
   16d7c:	mov	x0, x22
   16d80:	mov	x1, #0x0                   	// #0
   16d84:	cbz	x22, 16d60 <__sanitizer_dump_coverage@@Base+0xc8>
   16d88:	bl	6740 <__sanitizer_get_module_and_offset_for_pc@plt>
   16d8c:	eor	w1, w23, #0x1
   16d90:	cbz	w0, 16e10 <__sanitizer_dump_coverage@@Base+0x178>
   16d94:	ldr	x5, [x21, x19, lsl #3]
   16d98:	sub	x5, x22, x5
   16d9c:	cmp	x5, x26
   16da0:	cset	w4, ne  // ne = any
   16da4:	orr	w4, w4, w1
   16da8:	cbnz	w4, 16d3c <__sanitizer_dump_coverage@@Base+0xa4>
   16dac:	add	x19, x19, #0x1
   16db0:	mov	w23, #0x1                   	// #1
   16db4:	cmp	x20, x19
   16db8:	b.ne	16d6c <__sanitizer_dump_coverage@@Base+0xd4>  // b.any
   16dbc:	cbz	w23, 16dd4 <__sanitizer_dump_coverage@@Base+0x13c>
   16dc0:	sub	x3, x20, x27
   16dc4:	add	x2, x21, x27, lsl #3
   16dc8:	mov	x1, x24
   16dcc:	mov	x0, x25
   16dd0:	bl	167c0 <__sanitizer_sandbox_on_notify@@Base+0x28>
   16dd4:	mov	x0, x25
   16dd8:	mov	x1, #0x0                   	// #0
   16ddc:	bl	13340 <__sancov_default_options@@Base+0x870>
   16de0:	mov	x0, x24
   16de4:	mov	x1, #0x0                   	// #0
   16de8:	bl	13340 <__sancov_default_options@@Base+0x870>
   16dec:	mov	x0, x21
   16df0:	mov	x1, #0x0                   	// #0
   16df4:	ldp	x21, x22, [sp, #16]
   16df8:	ldp	x23, x24, [sp, #32]
   16dfc:	ldp	x25, x26, [sp, #48]
   16e00:	ldp	x27, x28, [sp, #64]
   16e04:	ldr	x30, [sp, #80]
   16e08:	ldp	x19, x20, [sp], #128
   16e0c:	b	13340 <__sancov_default_options@@Base+0x870>
   16e10:	ldr	x0, [sp, #104]
   16e14:	mov	x1, x22
   16e18:	bl	22c78 <OnPrint@@Base+0x310>
   16e1c:	b	16d60 <__sanitizer_dump_coverage@@Base+0xc8>
   16e20:	sub	x3, x19, x27
   16e24:	add	x2, x21, x27, lsl #3
   16e28:	mov	x1, x24
   16e2c:	mov	x0, x25
   16e30:	str	x5, [sp, #112]
   16e34:	str	w4, [sp, #124]
   16e38:	bl	167c0 <__sanitizer_sandbox_on_notify@@Base+0x28>
   16e3c:	ldr	w4, [sp, #124]
   16e40:	ldr	x5, [sp, #112]
   16e44:	b	16d40 <__sanitizer_dump_coverage@@Base+0xa8>

0000000000016e48 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   16e48:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   16e4c:	add	x0, x0, #0xaa0
   16e50:	add	x1, x0, #0x8
   16e54:	ldrb	w0, [x0, #8]
   16e58:	cbz	w0, 16e6c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x24>
   16e5c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16e60:	ldr	x0, [x0, #4040]
   16e64:	ldrb	w0, [x0, #161]
   16e68:	cbnz	w0, 16e70 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x28>
   16e6c:	ret
   16e70:	ldr	x0, [x1, #8]
   16e74:	ldr	x1, [x1, #24]
   16e78:	b	6960 <__sanitizer_dump_coverage@plt>
   16e7c:	nop

0000000000016e80 <__sanitizer_cov_dump@@Base>:
   16e80:	b	6b10 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   16e84:	nop
   16e88:	mov	x0, #0x0                   	// #0
   16e8c:	ret
   16e90:	ret
   16e94:	nop
   16e98:	ldr	x1, [x1, #16]
   16e9c:	ldrb	w0, [x1, #2224]
   16ea0:	cbz	w0, 16eb0 <__sanitizer_cov_dump@@Base+0x30>
   16ea4:	add	x0, x1, #0x628
   16ea8:	strb	wzr, [x1, #2224]
   16eac:	ret
   16eb0:	mov	x0, #0x0                   	// #0
   16eb4:	ret
   16eb8:	stp	x19, x30, [sp, #-16]!
   16ebc:	mov	x2, #0x0                   	// #0
   16ec0:	mov	x19, x1
   16ec4:	mov	x0, #0x8b8                 	// #2232
   16ec8:	mov	x1, #0x0                   	// #0
   16ecc:	bl	12f40 <__sancov_default_options@@Base+0x470>
   16ed0:	mov	x3, x0
   16ed4:	str	x19, [x0]
   16ed8:	str	xzr, [x3, #8]!
   16edc:	str	xzr, [x3, #520]
   16ee0:	str	xzr, [x3, #1040]
   16ee4:	str	xzr, [x3, #1560]
   16ee8:	strb	wzr, [x0, #2224]
   16eec:	ldp	x19, x30, [sp], #16
   16ef0:	ret
   16ef4:	nop
   16ef8:	mov	x0, x1
   16efc:	mov	x1, #0x0                   	// #0
   16f00:	b	13340 <__sancov_default_options@@Base+0x870>
   16f04:	nop
   16f08:	ldr	x1, [x1, #16]
   16f0c:	ldr	x2, [x2]
   16f10:	ldr	x3, [x1, #528]
   16f14:	and	x0, x2, #0xfffffffffffff000
   16f18:	cmp	x3, x0
   16f1c:	b.eq	16f24 <__sanitizer_cov_dump@@Base+0xa4>  // b.none
   16f20:	ret
   16f24:	ldr	x7, [x1, #1048]
   16f28:	add	x6, x1, #0x8
   16f2c:	and	x4, x2, #0xfff
   16f30:	cbz	x7, 16f7c <__sanitizer_cov_dump@@Base+0xfc>
   16f34:	sub	x8, x7, #0x1
   16f38:	mov	x0, x8
   16f3c:	tbnz	x8, #63, 16f7c <__sanitizer_cov_dump@@Base+0xfc>
   16f40:	add	x5, x1, #0x218
   16f44:	b	16f54 <__sanitizer_cov_dump@@Base+0xd4>
   16f48:	sub	x0, x0, #0x1
   16f4c:	cmn	x0, #0x1
   16f50:	b.eq	16f7c <__sanitizer_cov_dump@@Base+0xfc>  // b.none
   16f54:	ldr	x3, [x5, x0, lsl #3]
   16f58:	cmp	x4, x3
   16f5c:	b.ne	16f48 <__sanitizer_cov_dump@@Base+0xc8>  // b.any
   16f60:	add	x1, x1, x7, lsl #3
   16f64:	add	x0, x0, #0x42
   16f68:	str	x8, [x6, #1040]
   16f6c:	ldr	x2, [x1, #528]
   16f70:	str	x2, [x6, x0, lsl #3]
   16f74:	str	x4, [x1, #528]
   16f78:	ret
   16f7c:	ldr	x7, [x1, #8]
   16f80:	lsr	x3, x4, #6
   16f84:	mov	x0, #0x1                   	// #1
   16f88:	lsl	x5, x0, x3
   16f8c:	tst	x7, x5
   16f90:	b.eq	16f20 <__sanitizer_cov_dump@@Base+0xa0>  // b.none
   16f94:	add	x3, x3, x0
   16f98:	lsl	x0, x0, x2
   16f9c:	ldr	x2, [x6, x3, lsl #3]
   16fa0:	bic	x0, x2, x0
   16fa4:	str	x0, [x6, x3, lsl #3]
   16fa8:	cbz	x0, 17024 <__sanitizer_cov_dump@@Base+0x1a4>
   16fac:	cmp	x2, x0
   16fb0:	b.eq	16f20 <__sanitizer_cov_dump@@Base+0xa0>  // b.none
   16fb4:	ldr	x5, [x6, #1560]
   16fb8:	cbz	x5, 16f20 <__sanitizer_cov_dump@@Base+0xa0>
   16fbc:	sub	x7, x5, #0x1
   16fc0:	mov	x0, x7
   16fc4:	tbnz	x7, #63, 16f20 <__sanitizer_cov_dump@@Base+0xa0>
   16fc8:	add	x1, x1, #0x420
   16fcc:	mov	w3, w4
   16fd0:	b	16fe0 <__sanitizer_cov_dump@@Base+0x160>
   16fd4:	sub	x0, x0, #0x1
   16fd8:	cmn	x0, #0x1
   16fdc:	b.eq	16f20 <__sanitizer_cov_dump@@Base+0xa0>  // b.none
   16fe0:	lsl	x2, x0, #3
   16fe4:	ldr	w2, [x1, x2]
   16fe8:	cmp	w3, w2
   16fec:	b.ne	16fd4 <__sanitizer_cov_dump@@Base+0x154>  // b.any
   16ff0:	add	x3, x6, x0, lsl #3
   16ff4:	add	x1, x5, #0x82
   16ff8:	add	x5, x6, x7, lsl #3
   16ffc:	mov	x0, x3
   17000:	lsl	x1, x1, #3
   17004:	add	x2, x6, x1
   17008:	ldr	w3, [x3, #1052]
   1700c:	ldr	x5, [x5, #1048]
   17010:	str	x5, [x0, #1048]
   17014:	str	w4, [x6, x1]
   17018:	str	w3, [x2, #4]
   1701c:	str	x7, [x6, #1560]
   17020:	ret
   17024:	bic	x5, x7, x5
   17028:	str	x5, [x1, #8]
   1702c:	b	16fac <__sanitizer_cov_dump@@Base+0x12c>
   17030:	ldr	x3, [x1]
   17034:	stp	x19, x30, [sp, #-16]!
   17038:	mov	x19, x2
   1703c:	adrp	x2, 18000 <__sanitizer_cov_dump@@Base+0x1180>
   17040:	add	x2, x2, #0x500
   17044:	ldr	x3, [x3]
   17048:	str	xzr, [x19]
   1704c:	mov	w0, #0x0                   	// #0
   17050:	cmp	x3, x2
   17054:	b.ne	17064 <__sanitizer_cov_dump@@Base+0x1e4>  // b.any
   17058:	str	w0, [x19, #8]
   1705c:	ldp	x19, x30, [sp], #16
   17060:	ret
   17064:	mov	x0, x1
   17068:	blr	x3
   1706c:	str	w0, [x19, #8]
   17070:	ldp	x19, x30, [sp], #16
   17074:	ret
   17078:	stp	x19, x20, [sp, #-32]!
   1707c:	mov	x20, x0
   17080:	ldr	x0, [x2]
   17084:	str	x30, [sp, #16]
   17088:	cbnz	x0, 17098 <__sanitizer_cov_dump@@Base+0x218>
   1708c:	ldr	x30, [sp, #16]
   17090:	ldp	x19, x20, [sp], #32
   17094:	ret
   17098:	add	x0, x20, #0x8
   1709c:	mov	x19, x2
   170a0:	mov	w2, #0x1                   	// #1
   170a4:	ldxrb	w1, [x0]
   170a8:	stxrb	w3, w2, [x0]
   170ac:	cbnz	w3, 170a4 <__sanitizer_cov_dump@@Base+0x224>
   170b0:	dmb	ish
   170b4:	tst	w1, #0xff
   170b8:	b.eq	170c0 <__sanitizer_cov_dump@@Base+0x240>  // b.none
   170bc:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   170c0:	ldr	x3, [x19]
   170c4:	cbz	x3, 170d8 <__sanitizer_cov_dump@@Base+0x258>
   170c8:	ldr	x0, [x20, #16]
   170cc:	and	x1, x3, #0xfffffffffffff000
   170d0:	cmp	x1, x0
   170d4:	b.eq	170f0 <__sanitizer_cov_dump@@Base+0x270>  // b.none
   170d8:	str	xzr, [x19]
   170dc:	dmb	ish
   170e0:	strb	wzr, [x20, #8]
   170e4:	ldr	x30, [sp, #16]
   170e8:	ldp	x19, x20, [sp], #32
   170ec:	ret
   170f0:	cmp	x3, #0xfff
   170f4:	b.ls	171b0 <__sanitizer_cov_dump@@Base+0x330>  // b.plast
   170f8:	ubfx	x0, x3, #6, #6
   170fc:	mov	x1, #0x1                   	// #1
   17100:	ldr	x6, [x20, #24]
   17104:	add	x4, x0, x1
   17108:	and	x2, x3, #0xfff
   1710c:	lsl	x0, x1, x0
   17110:	lsl	x5, x4, #3
   17114:	tst	x0, x6
   17118:	lsl	x3, x1, x3
   1711c:	b.ne	1714c <__sanitizer_cov_dump@@Base+0x2cc>  // b.any
   17120:	ldr	x1, [x20, #544]
   17124:	add	x5, x20, #0x220
   17128:	tst	x0, x1
   1712c:	b.ne	1717c <__sanitizer_cov_dump@@Base+0x2fc>  // b.any
   17130:	orr	x0, x0, x1
   17134:	str	x0, [x20, #544]
   17138:	str	x3, [x5, x4, lsl #3]
   1713c:	add	x2, x2, x2, lsl #6
   17140:	add	x2, x20, x2, lsl #3
   17144:	str	xzr, [x2, #1584]
   17148:	b	170d8 <__sanitizer_cov_dump@@Base+0x258>
   1714c:	add	x5, x20, x5
   17150:	ldr	x1, [x5, #24]
   17154:	tst	x3, x1
   17158:	b.eq	17120 <__sanitizer_cov_dump@@Base+0x2a0>  // b.none
   1715c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17160:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17164:	add	x2, x2, #0xcb0
   17168:	add	x0, x0, #0xc68
   1716c:	mov	x4, #0x0                   	// #0
   17170:	mov	x3, #0x0                   	// #0
   17174:	mov	w1, #0xc0                  	// #192
   17178:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1717c:	ldr	x0, [x5, x4, lsl #3]
   17180:	orr	x3, x0, x3
   17184:	str	x3, [x5, x4, lsl #3]
   17188:	cmp	x0, x3
   1718c:	b.ne	1713c <__sanitizer_cov_dump@@Base+0x2bc>  // b.any
   17190:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17194:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17198:	add	x2, x2, #0xce0
   1719c:	add	x0, x0, #0xc68
   171a0:	mov	x4, #0x0                   	// #0
   171a4:	mov	x3, #0x0                   	// #0
   171a8:	mov	w1, #0xc1                  	// #193
   171ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   171b0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   171b4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   171b8:	add	x2, x2, #0xc50
   171bc:	add	x0, x0, #0xc68
   171c0:	mov	x4, #0x1000                	// #4096
   171c4:	mov	w1, #0x172                 	// #370
   171c8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   171cc:	nop
   171d0:	stp	x19, x30, [sp, #-16]!
   171d4:	mov	x19, x0
   171d8:	mov	x0, #0xa50                 	// #2640
   171dc:	mov	w2, #0x0                   	// #0
   171e0:	movk	x0, #0x41, lsl #16
   171e4:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   171e8:	add	x1, x1, #0xd08
   171ec:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   171f0:	add	x4, x0, #0x410, lsl #12
   171f4:	strb	wzr, [x0, #8]
   171f8:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   171fc:	add	x3, x1, #0xc10
   17200:	add	x2, x0, #0x208, lsl #12
   17204:	str	x3, [x0]
   17208:	add	x1, x0, #0x630
   1720c:	ldrb	w3, [x19]
   17210:	add	x2, x2, #0x630
   17214:	strb	w3, [x4, #2632]
   17218:	stp	xzr, xzr, [x0, #16]
   1721c:	str	xzr, [x0, #544]
   17220:	str	xzr, [x1]
   17224:	add	x1, x1, #0x208
   17228:	cmp	x1, x2
   1722c:	b.ne	17220 <__sanitizer_cov_dump@@Base+0x3a0>  // b.any
   17230:	add	x1, x0, #0x10
   17234:	add	x1, x1, #0x410, lsl #12
   17238:	str	xzr, [x1, #2608]
   1723c:	ldp	x19, x30, [sp], #16
   17240:	ret
   17244:	nop
   17248:	add	x5, x0, #0x410, lsl #12
   1724c:	strb	wzr, [x0, #8]
   17250:	add	x3, x0, #0x208, lsl #12
   17254:	adrp	x4, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   17258:	ldrb	w1, [x1]
   1725c:	add	x4, x4, #0xc10
   17260:	str	x4, [x0]
   17264:	add	x2, x0, #0x630
   17268:	add	x3, x3, #0x630
   1726c:	strb	w1, [x5, #2632]
   17270:	stp	xzr, xzr, [x0, #16]
   17274:	str	xzr, [x0, #544]
   17278:	str	xzr, [x2]
   1727c:	add	x2, x2, #0x208
   17280:	cmp	x2, x3
   17284:	b.ne	17278 <__sanitizer_cov_dump@@Base+0x3f8>  // b.any
   17288:	add	x0, x0, #0x10
   1728c:	add	x0, x0, #0x410, lsl #12
   17290:	str	xzr, [x0, #2608]
   17294:	ret
   17298:	ldr	x3, [x2]
   1729c:	cbz	x3, 172b0 <__sanitizer_cov_dump@@Base+0x430>
   172a0:	ldr	x4, [x0, #16]
   172a4:	and	x3, x3, #0xfffffffffffff000
   172a8:	cmp	x3, x4
   172ac:	b.eq	17574 <__sanitizer_cov_dump@@Base+0x6f4>  // b.none
   172b0:	stp	x19, x20, [sp, #-32]!
   172b4:	ldr	x9, [x0, #24]
   172b8:	str	x30, [sp, #16]
   172bc:	cbz	x9, 17328 <__sanitizer_cov_dump@@Base+0x4a8>
   172c0:	mov	x4, x0
   172c4:	rbit	x3, x9
   172c8:	clz	x3, x3
   172cc:	mov	x5, #0x1                   	// #1
   172d0:	add	x8, x3, x5
   172d4:	lsl	x7, x5, x3
   172d8:	bic	x9, x9, x7
   172dc:	str	x9, [x4, #24]!
   172e0:	ldr	x6, [x4, x8, lsl #3]
   172e4:	cbz	x6, 176d0 <__sanitizer_cov_dump@@Base+0x850>
   172e8:	rbit	x10, x6
   172ec:	clz	x10, x10
   172f0:	lsl	x5, x5, x10
   172f4:	bic	x5, x6, x5
   172f8:	str	x5, [x4, x8, lsl #3]
   172fc:	cbz	x5, 17308 <__sanitizer_cov_dump@@Base+0x488>
   17300:	orr	x7, x7, x9
   17304:	str	x7, [x0, #24]
   17308:	add	x3, x10, x3, lsl #6
   1730c:	add	x4, x0, #0x10
   17310:	add	x5, x3, #0x41, lsl #12
   17314:	add	x5, x5, #0x146
   17318:	str	x2, [x4, x5, lsl #3]
   1731c:	ldr	x4, [x0, #16]
   17320:	add	x3, x3, x4
   17324:	b	17528 <__sanitizer_cov_dump@@Base+0x6a8>
   17328:	ldr	x15, [x0, #544]
   1732c:	cbz	x15, 17474 <__sanitizer_cov_dump@@Base+0x5f4>
   17330:	add	x11, x0, #0x10
   17334:	add	x10, x11, #0x410, lsl #12
   17338:	ldr	x4, [x10, #2608]
   1733c:	subs	x12, x4, #0x1
   17340:	b.mi	17418 <__sanitizer_cov_dump@@Base+0x598>  // b.first
   17344:	add	x4, x4, #0x21, lsl #12
   17348:	mov	x16, #0x10a2                	// #4258
   1734c:	add	x4, x4, #0xa3
   17350:	add	x14, x0, #0x220
   17354:	mov	x13, #0x1                   	// #1
   17358:	movk	x16, #0x2, lsl #16
   1735c:	add	x4, x0, x4, lsl #4
   17360:	ldrh	w6, [x4]
   17364:	and	x3, x6, #0xffff
   17368:	cmp	x3, #0x1, lsl #12
   1736c:	b.hi	1766c <__sanitizer_cov_dump@@Base+0x7ec>  // b.pmore
   17370:	lsr	x5, x3, #12
   17374:	ubfx	x3, x3, #6, #6
   17378:	lsl	x8, x13, x3
   1737c:	ldr	x7, [x14, x5, lsl #3]
   17380:	tst	x8, x7
   17384:	b.ne	17558 <__sanitizer_cov_dump@@Base+0x6d8>  // b.any
   17388:	ldrh	w6, [x4, #2]
   1738c:	and	x3, x6, #0xffff
   17390:	cmp	x3, #0x1, lsl #12
   17394:	b.hi	17694 <__sanitizer_cov_dump@@Base+0x814>  // b.pmore
   17398:	lsr	x5, x3, #12
   1739c:	ubfx	x3, x3, #6, #6
   173a0:	lsl	x8, x13, x3
   173a4:	ldr	x7, [x14, x5, lsl #3]
   173a8:	tst	x8, x7
   173ac:	b.eq	17408 <__sanitizer_cov_dump@@Base+0x588>  // b.none
   173b0:	add	x3, x3, x5, lsl #6
   173b4:	lsl	x6, x13, x6
   173b8:	add	x3, x3, #0x1
   173bc:	ldr	x3, [x14, x3, lsl #3]
   173c0:	tst	x6, x3
   173c4:	b.eq	17408 <__sanitizer_cov_dump@@Base+0x588>  // b.none
   173c8:	ldr	x3, [x10, #2608]
   173cc:	ldrh	w20, [x4]
   173d0:	add	x8, x3, x16
   173d4:	sub	x5, x3, #0x1
   173d8:	ldrh	w19, [x4, #2]
   173dc:	lsl	x8, x8, #4
   173e0:	ldr	w17, [x4, #12]
   173e4:	add	x3, x11, x8
   173e8:	ldp	w30, w18, [x4, #4]
   173ec:	ldp	x6, x7, [x3]
   173f0:	stp	x6, x7, [x4]
   173f4:	strh	w20, [x11, x8]
   173f8:	strh	w19, [x3, #2]
   173fc:	stp	w30, w18, [x3, #4]
   17400:	str	w17, [x3, #12]
   17404:	str	x5, [x10, #2608]
   17408:	sub	x12, x12, #0x1
   1740c:	sub	x4, x4, #0x10
   17410:	cmn	x12, #0x1
   17414:	b.ne	17360 <__sanitizer_cov_dump@@Base+0x4e0>  // b.any
   17418:	mov	x12, #0x1                   	// #1
   1741c:	add	x6, x0, #0x630
   17420:	mov	x14, x12
   17424:	ldr	x3, [x6, x9, lsl #3]
   17428:	add	x13, x9, #0x1
   1742c:	and	x3, x15, x3
   17430:	cbz	x3, 175b4 <__sanitizer_cov_dump@@Base+0x734>
   17434:	rbit	x4, x3
   17438:	clz	x4, x4
   1743c:	add	x7, x13, x4
   17440:	add	x10, x0, x4, lsl #3
   17444:	lsl	x5, x12, x4
   17448:	bic	x3, x3, x5
   1744c:	ldr	x8, [x6, x7, lsl #3]
   17450:	ldr	x5, [x10, #552]
   17454:	bic	x5, x8, x5
   17458:	str	x5, [x6, x7, lsl #3]
   1745c:	cbnz	x5, 17430 <__sanitizer_cov_dump@@Base+0x5b0>
   17460:	ldr	x5, [x6, x9, lsl #3]
   17464:	lsl	x4, x14, x4
   17468:	bic	x4, x5, x4
   1746c:	str	x4, [x6, x9, lsl #3]
   17470:	b	17430 <__sanitizer_cov_dump@@Base+0x5b0>
   17474:	ldr	x4, [x0, #16]
   17478:	mov	x5, x0
   1747c:	mvni	v0.4s, #0x0
   17480:	add	x3, x0, #0x20
   17484:	add	x4, x4, #0x1, lsl #12
   17488:	str	x4, [x0, #16]
   1748c:	add	x4, x0, #0x220
   17490:	mov	x6, #0xffffffffffffffff    	// #-1
   17494:	str	x6, [x5, #24]!
   17498:	str	q0, [x3], #16
   1749c:	cmp	x3, x4
   174a0:	b.ne	17498 <__sanitizer_cov_dump@@Base+0x618>  // b.any
   174a4:	add	x4, x0, #0x208, lsl #12
   174a8:	add	x3, x0, #0x630
   174ac:	add	x4, x4, #0x630
   174b0:	str	xzr, [x3]
   174b4:	add	x3, x3, #0x208
   174b8:	cmp	x4, x3
   174bc:	b.ne	174b0 <__sanitizer_cov_dump@@Base+0x630>  // b.any
   174c0:	add	x11, x0, #0x10
   174c4:	add	x3, x11, #0x410, lsl #12
   174c8:	str	xzr, [x3, #2608]
   174cc:	ldr	x4, [x0, #24]
   174d0:	cbz	x4, 17594 <__sanitizer_cov_dump@@Base+0x714>
   174d4:	rbit	x3, x4
   174d8:	mov	x6, #0x1                   	// #1
   174dc:	clz	x3, x3
   174e0:	add	x9, x3, x6
   174e4:	lsl	x8, x6, x3
   174e8:	bic	x4, x4, x8
   174ec:	str	x4, [x0, #24]
   174f0:	ldr	x7, [x5, x9, lsl #3]
   174f4:	cbz	x7, 176b0 <__sanitizer_cov_dump@@Base+0x830>
   174f8:	rbit	x10, x7
   174fc:	clz	x10, x10
   17500:	lsl	x6, x6, x10
   17504:	bic	x6, x7, x6
   17508:	str	x6, [x5, x9, lsl #3]
   1750c:	cbnz	x6, 17688 <__sanitizer_cov_dump@@Base+0x808>
   17510:	add	x3, x10, x3, lsl #6
   17514:	add	x4, x3, #0x41, lsl #12
   17518:	add	x4, x4, #0x146
   1751c:	str	x2, [x11, x4, lsl #3]
   17520:	ldr	x4, [x0, #16]
   17524:	add	x3, x3, x4
   17528:	str	x3, [x2]
   1752c:	ldr	x2, [x1, #528]
   17530:	ldr	x4, [x0, #16]
   17534:	cmp	x2, x4
   17538:	b.eq	1754c <__sanitizer_cov_dump@@Base+0x6cc>  // b.none
   1753c:	str	xzr, [x1, #8]
   17540:	str	x4, [x1, #528]
   17544:	str	xzr, [x1, #1048]
   17548:	str	xzr, [x1, #1568]
   1754c:	ldr	x30, [sp, #16]
   17550:	ldp	x19, x20, [sp], #32
   17554:	ret
   17558:	add	x3, x3, x5, lsl #6
   1755c:	lsl	x6, x13, x6
   17560:	add	x3, x3, #0x1
   17564:	ldr	x3, [x14, x3, lsl #3]
   17568:	tst	x6, x3
   1756c:	b.ne	173c8 <__sanitizer_cov_dump@@Base+0x548>  // b.any
   17570:	b	17388 <__sanitizer_cov_dump@@Base+0x508>
   17574:	ldr	x2, [x1, #528]
   17578:	cmp	x2, x4
   1757c:	b.eq	17590 <__sanitizer_cov_dump@@Base+0x710>  // b.none
   17580:	str	xzr, [x1, #8]
   17584:	str	x4, [x1, #528]
   17588:	str	xzr, [x1, #1048]
   1758c:	str	xzr, [x1, #1568]
   17590:	ret
   17594:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17598:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1759c:	add	x2, x2, #0xd20
   175a0:	add	x0, x0, #0xbf8
   175a4:	mov	x4, #0x0                   	// #0
   175a8:	mov	x3, #0x0                   	// #0
   175ac:	mov	w1, #0xbf                  	// #191
   175b0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   175b4:	add	x9, x9, #0x41
   175b8:	cmp	x9, #0x41, lsl #12
   175bc:	ldr	x15, [x0, #544]
   175c0:	b.ne	17424 <__sanitizer_cov_dump@@Base+0x5a4>  // b.any
   175c4:	add	x8, x0, #0x220
   175c8:	add	x6, x0, #0x18
   175cc:	mov	x7, #0x1                   	// #1
   175d0:	cbz	x15, 17610 <__sanitizer_cov_dump@@Base+0x790>
   175d4:	rbit	x3, x15
   175d8:	ldr	x5, [x0, #24]
   175dc:	clz	x3, x3
   175e0:	lsl	x4, x7, x3
   175e4:	add	x3, x3, #0x1
   175e8:	bic	x15, x15, x4
   175ec:	orr	x4, x4, x5
   175f0:	str	x4, [x0, #24]
   175f4:	cmp	x4, x5
   175f8:	lsl	x4, x3, #3
   175fc:	b.eq	176f0 <__sanitizer_cov_dump@@Base+0x870>  // b.none
   17600:	str	xzr, [x6, x3, lsl #3]
   17604:	ldr	x4, [x8, x3, lsl #3]
   17608:	str	x4, [x6, x3, lsl #3]
   1760c:	cbnz	x15, 175d4 <__sanitizer_cov_dump@@Base+0x754>
   17610:	ldr	x5, [x0, #24]
   17614:	str	xzr, [x0, #544]
   17618:	cbz	x5, 17594 <__sanitizer_cov_dump@@Base+0x714>
   1761c:	rbit	x3, x5
   17620:	mov	x7, x0
   17624:	clz	x3, x3
   17628:	mov	x4, #0x1                   	// #1
   1762c:	add	x6, x3, #0x1
   17630:	lsl	x8, x4, x3
   17634:	bic	x5, x5, x8
   17638:	lsl	x6, x6, #3
   1763c:	str	x5, [x7, #24]!
   17640:	ldr	x9, [x7, x6]
   17644:	cbz	x9, 17708 <__sanitizer_cov_dump@@Base+0x888>
   17648:	rbit	x10, x9
   1764c:	clz	x10, x10
   17650:	lsl	x4, x4, x10
   17654:	bic	x4, x9, x4
   17658:	str	x4, [x7, x6]
   1765c:	cbz	x4, 17510 <__sanitizer_cov_dump@@Base+0x690>
   17660:	orr	x5, x8, x5
   17664:	str	x5, [x0, #24]
   17668:	b	17510 <__sanitizer_cov_dump@@Base+0x690>
   1766c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17670:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17674:	add	x2, x2, #0xc38
   17678:	add	x0, x0, #0xbf8
   1767c:	mov	x4, #0x1000                	// #4096
   17680:	mov	w1, #0x143                 	// #323
   17684:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17688:	orr	x4, x8, x4
   1768c:	str	x4, [x0, #24]
   17690:	b	17510 <__sanitizer_cov_dump@@Base+0x690>
   17694:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17698:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1769c:	add	x2, x2, #0xc38
   176a0:	add	x0, x0, #0xbf8
   176a4:	mov	x4, #0x1000                	// #4096
   176a8:	mov	w1, #0x143                 	// #323
   176ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   176b0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   176b4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   176b8:	add	x2, x2, #0xbd0
   176bc:	add	x0, x0, #0xbf8
   176c0:	mov	x4, #0x0                   	// #0
   176c4:	mov	x3, #0x0                   	// #0
   176c8:	mov	w1, #0x30                  	// #48
   176cc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   176d0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   176d4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   176d8:	add	x2, x2, #0xbd0
   176dc:	add	x0, x0, #0xbf8
   176e0:	mov	x4, #0x0                   	// #0
   176e4:	mov	x3, #0x0                   	// #0
   176e8:	mov	w1, #0x30                  	// #48
   176ec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   176f0:	ldr	x3, [x6, x4]
   176f4:	ldr	x5, [x8, x4]
   176f8:	orr	x3, x3, x5
   176fc:	str	x3, [x6, x4]
   17700:	cbnz	x15, 175d4 <__sanitizer_cov_dump@@Base+0x754>
   17704:	b	17610 <__sanitizer_cov_dump@@Base+0x790>
   17708:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   1770c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17710:	add	x2, x2, #0xbd0
   17714:	add	x0, x0, #0xbf8
   17718:	mov	x4, #0x0                   	// #0
   1771c:	mov	x3, #0x0                   	// #0
   17720:	mov	w1, #0x30                  	// #48
   17724:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17728:	stp	x19, x20, [sp, #-96]!
   1772c:	mov	x20, x1
   17730:	add	x1, x0, #0x410, lsl #12
   17734:	stp	x21, x22, [sp, #16]
   17738:	mov	x19, x0
   1773c:	mov	x21, x2
   17740:	ldrb	w1, [x1, #2632]
   17744:	stp	x23, x24, [sp, #32]
   17748:	and	w24, w3, #0xff
   1774c:	stp	x25, x26, [sp, #48]
   17750:	and	w26, w4, #0xff
   17754:	mov	w25, #0x0                   	// #0
   17758:	ldr	x23, [x20, #16]
   1775c:	str	x30, [sp, #64]
   17760:	cbz	w1, 1777c <__sanitizer_cov_dump@@Base+0x8fc>
   17764:	ldr	x0, [x20]
   17768:	adrp	x1, 18000 <__sanitizer_cov_dump@@Base+0x1180>
   1776c:	add	x1, x1, #0x500
   17770:	ldr	x2, [x0]
   17774:	cmp	x2, x1
   17778:	b.ne	17914 <__sanitizer_cov_dump@@Base+0xa94>  // b.any
   1777c:	ldr	x1, [x23, #8]
   17780:	add	x22, x23, #0x8
   17784:	ldr	x2, [x21]
   17788:	ldr	x5, [x23, #528]
   1778c:	cbz	x1, 178b8 <__sanitizer_cov_dump@@Base+0xa38>
   17790:	cbz	x2, 177a0 <__sanitizer_cov_dump@@Base+0x920>
   17794:	ldr	x0, [x19, #16]
   17798:	cmp	x0, x5
   1779c:	b.eq	17938 <__sanitizer_cov_dump@@Base+0xab8>  // b.none
   177a0:	add	x0, x19, #0x8
   177a4:	mov	w2, #0x1                   	// #1
   177a8:	ldxrb	w1, [x0]
   177ac:	stxrb	w3, w2, [x0]
   177b0:	cbnz	w3, 177a8 <__sanitizer_cov_dump@@Base+0x928>
   177b4:	dmb	ish
   177b8:	tst	w1, #0xff
   177bc:	b.eq	177c8 <__sanitizer_cov_dump@@Base+0x948>  // b.none
   177c0:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   177c4:	nop
   177c8:	mov	x2, x21
   177cc:	mov	x1, x23
   177d0:	mov	x0, x19
   177d4:	bl	17298 <__sanitizer_cov_dump@@Base+0x418>
   177d8:	cbnz	w24, 179f4 <__sanitizer_cov_dump@@Base+0xb74>
   177dc:	ldr	x24, [x21]
   177e0:	cbnz	w26, 1781c <__sanitizer_cov_dump@@Base+0x99c>
   177e4:	mov	w3, w25
   177e8:	ldr	x1, [x20]
   177ec:	cbz	w25, 17abc <__sanitizer_cov_dump@@Base+0xc3c>
   177f0:	ldr	x2, [x1, #8]
   177f4:	adrp	x1, 18000 <__sanitizer_cov_dump@@Base+0x1180>
   177f8:	add	x1, x1, #0x508
   177fc:	mov	w4, #0x0                   	// #0
   17800:	cmp	x2, x1
   17804:	b.ne	17b88 <__sanitizer_cov_dump@@Base+0xd08>  // b.any
   17808:	mov	x2, x24
   1780c:	mov	x1, x22
   17810:	add	x0, x19, #0x10
   17814:	bl	18748 <__sanitizer_cov_dump@@Base+0x18c8>
   17818:	ldr	x24, [x21]
   1781c:	ldr	x0, [x19, #16]
   17820:	ldr	x1, [x22, #520]
   17824:	cmp	x0, x1
   17828:	b.eq	1783c <__sanitizer_cov_dump@@Base+0x9bc>  // b.none
   1782c:	str	xzr, [x23, #8]
   17830:	str	x0, [x22, #520]
   17834:	str	xzr, [x22, #1040]
   17838:	str	xzr, [x22, #1560]
   1783c:	cmp	x24, #0xfff
   17840:	b.ls	17b50 <__sanitizer_cov_dump@@Base+0xcd0>  // b.plast
   17844:	ldr	x3, [x19, #16]
   17848:	and	x4, x24, #0xfffffffffffff000
   1784c:	cmp	x3, x4
   17850:	b.ne	17b70 <__sanitizer_cov_dump@@Base+0xcf0>  // b.any
   17854:	cmp	x3, x0
   17858:	and	x4, x24, #0xfff
   1785c:	b.ne	17ba0 <__sanitizer_cov_dump@@Base+0xd20>  // b.any
   17860:	ldr	x1, [x23, #8]
   17864:	lsr	x2, x4, #6
   17868:	mov	x0, #0x1                   	// #1
   1786c:	add	x3, x2, x0
   17870:	lsl	x24, x0, x24
   17874:	lsl	x0, x0, x2
   17878:	tst	x1, x0
   1787c:	b.ne	17a6c <__sanitizer_cov_dump@@Base+0xbec>  // b.any
   17880:	orr	x0, x1, x0
   17884:	str	x0, [x23, #8]
   17888:	str	x24, [x22, x3, lsl #3]
   1788c:	ldr	x3, [x22, #1560]
   17890:	cmp	x3, #0x3f
   17894:	b.hi	17ae4 <__sanitizer_cov_dump@@Base+0xc64>  // b.pmore
   17898:	add	x0, x3, #0x83
   1789c:	add	x3, x3, #0x1
   178a0:	str	x3, [x22, #1560]
   178a4:	lsl	x0, x0, #3
   178a8:	add	x1, x22, x0
   178ac:	str	w4, [x22, x0]
   178b0:	str	w25, [x1, #4]
   178b4:	b	17a9c <__sanitizer_cov_dump@@Base+0xc1c>
   178b8:	cbz	x5, 17790 <__sanitizer_cov_dump@@Base+0x910>
   178bc:	and	x0, x2, #0xfffffffffffff000
   178c0:	cmp	x0, x5
   178c4:	b.ne	17790 <__sanitizer_cov_dump@@Base+0x910>  // b.any
   178c8:	ubfx	x1, x2, #6, #6
   178cc:	mov	x0, #0x1                   	// #1
   178d0:	add	x3, x1, x0
   178d4:	lsl	x4, x0, x2
   178d8:	lsl	x0, x0, x1
   178dc:	str	x0, [x23, #8]
   178e0:	and	x2, x2, #0xfff
   178e4:	str	x4, [x22, x3, lsl #3]
   178e8:	ldr	x3, [x22, #1560]
   178ec:	cmp	x3, #0x3f
   178f0:	b.hi	17ae4 <__sanitizer_cov_dump@@Base+0xc64>  // b.pmore
   178f4:	add	x0, x3, #0x83
   178f8:	add	x3, x3, #0x1
   178fc:	str	x3, [x22, #1560]
   17900:	lsl	x0, x0, #3
   17904:	add	x1, x22, x0
   17908:	str	w2, [x22, x0]
   1790c:	str	w25, [x1, #4]
   17910:	b	17aa4 <__sanitizer_cov_dump@@Base+0xc24>
   17914:	mov	x0, x20
   17918:	blr	x2
   1791c:	ldr	x1, [x23, #8]
   17920:	mov	w25, w0
   17924:	add	x22, x23, #0x8
   17928:	ldr	x2, [x21]
   1792c:	ldr	x5, [x23, #528]
   17930:	cbnz	x1, 17790 <__sanitizer_cov_dump@@Base+0x910>
   17934:	b	178b8 <__sanitizer_cov_dump@@Base+0xa38>
   17938:	and	x0, x2, #0xfffffffffffff000
   1793c:	cmp	x0, x5
   17940:	b.ne	177a0 <__sanitizer_cov_dump@@Base+0x920>  // b.any
   17944:	ldr	x9, [x23, #1568]
   17948:	ubfx	x6, x2, #6, #6
   1794c:	mov	x0, #0x1                   	// #1
   17950:	and	x8, x2, #0xfff
   17954:	add	x5, x6, x0
   17958:	lsl	x3, x0, x6
   1795c:	lsl	x2, x0, x2
   17960:	cbz	x9, 179b4 <__sanitizer_cov_dump@@Base+0xb34>
   17964:	add	x6, x6, #0x1
   17968:	add	x7, x19, #0x630
   1796c:	add	x11, x23, #0x420
   17970:	mov	x0, #0x0                   	// #0
   17974:	mov	w10, #0x208                 	// #520
   17978:	mov	w12, #0x41                  	// #65
   1797c:	lsl	x4, x0, #3
   17980:	ldr	w4, [x11, x4]
   17984:	umull	x5, w4, w10
   17988:	ldr	x5, [x7, x5]
   1798c:	tst	x3, x5
   17990:	b.eq	177a0 <__sanitizer_cov_dump@@Base+0x920>  // b.none
   17994:	umaddl	x4, w4, w12, x6
   17998:	mov	x5, x6
   1799c:	ldr	x4, [x7, x4, lsl #3]
   179a0:	tst	x2, x4
   179a4:	b.eq	177a0 <__sanitizer_cov_dump@@Base+0x920>  // b.none
   179a8:	add	x0, x0, #0x1
   179ac:	cmp	x9, x0
   179b0:	b.ne	1797c <__sanitizer_cov_dump@@Base+0xafc>  // b.any
   179b4:	tst	x1, x3
   179b8:	b.ne	17b1c <__sanitizer_cov_dump@@Base+0xc9c>  // b.any
   179bc:	orr	x1, x1, x3
   179c0:	str	x1, [x23, #8]
   179c4:	str	x2, [x22, x5, lsl #3]
   179c8:	ldr	x3, [x22, #1560]
   179cc:	cmp	x3, #0x3f
   179d0:	b.hi	17ae4 <__sanitizer_cov_dump@@Base+0xc64>  // b.pmore
   179d4:	add	x0, x3, #0x83
   179d8:	add	x3, x3, #0x1
   179dc:	str	x3, [x22, #1560]
   179e0:	lsl	x0, x0, #3
   179e4:	add	x1, x22, x0
   179e8:	str	w8, [x22, x0]
   179ec:	str	w25, [x1, #4]
   179f0:	b	17aa4 <__sanitizer_cov_dump@@Base+0xc24>
   179f4:	ldr	x0, [x19, #16]
   179f8:	ldr	x3, [x22, #520]
   179fc:	ldr	x24, [x21]
   17a00:	cmp	x0, x3
   17a04:	b.ne	17bc0 <__sanitizer_cov_dump@@Base+0xd40>  // b.any
   17a08:	cmp	x24, #0xfff
   17a0c:	b.ls	17b50 <__sanitizer_cov_dump@@Base+0xcd0>  // b.plast
   17a10:	and	x4, x24, #0xfffffffffffff000
   17a14:	mov	x3, x0
   17a18:	cmp	x0, x4
   17a1c:	b.ne	17b70 <__sanitizer_cov_dump@@Base+0xcf0>  // b.any
   17a20:	ldr	x2, [x23, #8]
   17a24:	ubfx	x1, x24, #6, #6
   17a28:	mov	x0, #0x1                   	// #1
   17a2c:	lsl	x3, x0, x1
   17a30:	tst	x3, x2
   17a34:	b.eq	177e0 <__sanitizer_cov_dump@@Base+0x960>  // b.none
   17a38:	add	x1, x1, x0
   17a3c:	lsl	x0, x0, x24
   17a40:	ldr	x1, [x22, x1, lsl #3]
   17a44:	tst	x0, x1
   17a48:	b.eq	177e0 <__sanitizer_cov_dump@@Base+0x960>  // b.none
   17a4c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17a50:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17a54:	add	x2, x2, #0xde8
   17a58:	add	x0, x0, #0xe10
   17a5c:	mov	x4, #0x0                   	// #0
   17a60:	mov	x3, #0x0                   	// #0
   17a64:	mov	w1, #0xa5                  	// #165
   17a68:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17a6c:	ldr	x0, [x22, x3, lsl #3]
   17a70:	orr	x24, x0, x24
   17a74:	str	x24, [x22, x3, lsl #3]
   17a78:	cmp	x0, x24
   17a7c:	b.ne	1788c <__sanitizer_cov_dump@@Base+0xa0c>  // b.any
   17a80:	ldr	x3, [x22, #1040]
   17a84:	cmp	x3, #0x3f
   17a88:	b.hi	17b00 <__sanitizer_cov_dump@@Base+0xc80>  // b.pmore
   17a8c:	add	x0, x3, #0x42
   17a90:	add	x3, x3, #0x1
   17a94:	str	x3, [x22, #1040]
   17a98:	str	x4, [x22, x0, lsl #3]
   17a9c:	dmb	ish
   17aa0:	strb	wzr, [x19, #8]
   17aa4:	ldp	x21, x22, [sp, #16]
   17aa8:	ldp	x23, x24, [sp, #32]
   17aac:	ldp	x25, x26, [sp, #48]
   17ab0:	ldr	x30, [sp, #64]
   17ab4:	ldp	x19, x20, [sp], #96
   17ab8:	ret
   17abc:	ldr	x2, [x1]
   17ac0:	adrp	x0, 18000 <__sanitizer_cov_dump@@Base+0x1180>
   17ac4:	add	x0, x0, #0x500
   17ac8:	cmp	x2, x0
   17acc:	b.eq	177f0 <__sanitizer_cov_dump@@Base+0x970>  // b.none
   17ad0:	mov	x0, x20
   17ad4:	blr	x2
   17ad8:	mov	w3, w0
   17adc:	ldr	x1, [x20]
   17ae0:	b	177f0 <__sanitizer_cov_dump@@Base+0x970>
   17ae4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17ae8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17aec:	add	x2, x2, #0xd30
   17af0:	add	x0, x0, #0xc68
   17af4:	mov	x4, #0x40                  	// #64
   17af8:	mov	w1, #0x43                  	// #67
   17afc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17b00:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17b04:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17b08:	add	x2, x2, #0xd90
   17b0c:	add	x0, x0, #0xc68
   17b10:	mov	x4, #0x40                  	// #64
   17b14:	mov	w1, #0x3f                  	// #63
   17b18:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17b1c:	ldr	x0, [x22, x5, lsl #3]
   17b20:	orr	x2, x0, x2
   17b24:	str	x2, [x22, x5, lsl #3]
   17b28:	cmp	x0, x2
   17b2c:	b.ne	179c8 <__sanitizer_cov_dump@@Base+0xb48>  // b.any
   17b30:	ldr	x3, [x22, #1040]
   17b34:	cmp	x3, #0x3f
   17b38:	b.hi	17b00 <__sanitizer_cov_dump@@Base+0xc80>  // b.pmore
   17b3c:	add	x0, x3, #0x42
   17b40:	add	x3, x3, #0x1
   17b44:	str	x3, [x22, #1040]
   17b48:	str	x8, [x22, x0, lsl #3]
   17b4c:	b	17aa4 <__sanitizer_cov_dump@@Base+0xc24>
   17b50:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17b54:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17b58:	mov	x3, x24
   17b5c:	add	x2, x2, #0xc50
   17b60:	add	x0, x0, #0xc68
   17b64:	mov	x4, #0x1000                	// #4096
   17b68:	mov	w1, #0x172                 	// #370
   17b6c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17b70:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17b74:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17b78:	add	x2, x2, #0xf00
   17b7c:	add	x0, x0, #0xc68
   17b80:	mov	w1, #0x173                 	// #371
   17b84:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17b88:	str	w3, [sp, #92]
   17b8c:	mov	x0, x20
   17b90:	blr	x2
   17b94:	mov	w4, w0
   17b98:	ldr	w3, [sp, #92]
   17b9c:	b	17808 <__sanitizer_cov_dump@@Base+0x988>
   17ba0:	mov	x4, x3
   17ba4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17ba8:	mov	x3, x0
   17bac:	add	x2, x2, #0xf30
   17bb0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17bb4:	mov	w1, #0x3c                  	// #60
   17bb8:	add	x0, x0, #0xc68
   17bbc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17bc0:	mov	x4, x0
   17bc4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17bc8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17bcc:	add	x2, x2, #0xf30
   17bd0:	add	x0, x0, #0xc68
   17bd4:	mov	w1, #0x6c                  	// #108
   17bd8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17bdc:	nop
   17be0:	stp	x19, x20, [sp, #-336]!
   17be4:	stp	x23, x24, [sp, #32]
   17be8:	ldr	x23, [x1, #16]
   17bec:	stp	x21, x22, [sp, #16]
   17bf0:	mov	x22, x2
   17bf4:	ldr	x4, [x0, #16]
   17bf8:	stp	x25, x26, [sp, #48]
   17bfc:	add	x2, x23, #0x8
   17c00:	ldr	x3, [x2, #520]
   17c04:	stp	x27, x28, [sp, #64]
   17c08:	ldr	x25, [x22]
   17c0c:	str	x30, [sp, #80]
   17c10:	cmp	x4, x3
   17c14:	b.ne	17e20 <__sanitizer_cov_dump@@Base+0xfa0>  // b.any
   17c18:	str	xzr, [x0, #1064]
   17c1c:	mov	x19, x0
   17c20:	add	x21, x0, #0x428
   17c24:	ldr	x1, [x23, #8]
   17c28:	cbz	x1, 17c84 <__sanitizer_cov_dump@@Base+0xe04>
   17c2c:	mov	x3, #0x0                   	// #0
   17c30:	mov	x6, #0x1                   	// #1
   17c34:	rbit	x0, x1
   17c38:	clz	x0, x0
   17c3c:	lsl	x5, x6, x0
   17c40:	orr	x4, x5, x3
   17c44:	str	x4, [x19, #1064]
   17c48:	bic	x1, x1, x5
   17c4c:	cmp	x4, x3
   17c50:	add	x0, x0, #0x1
   17c54:	b.eq	17c70 <__sanitizer_cov_dump@@Base+0xdf0>  // b.none
   17c58:	str	xzr, [x21, x0, lsl #3]
   17c5c:	ldr	x3, [x2, x0, lsl #3]
   17c60:	str	x3, [x21, x0, lsl #3]
   17c64:	cbz	x1, 17c84 <__sanitizer_cov_dump@@Base+0xe04>
   17c68:	ldr	x3, [x19, #1064]
   17c6c:	b	17c34 <__sanitizer_cov_dump@@Base+0xdb4>
   17c70:	ldr	x3, [x21, x0, lsl #3]
   17c74:	ldr	x4, [x2, x0, lsl #3]
   17c78:	orr	x3, x3, x4
   17c7c:	str	x3, [x21, x0, lsl #3]
   17c80:	cbnz	x1, 17c68 <__sanitizer_cov_dump@@Base+0xde8>
   17c84:	mov	x3, x25
   17c88:	cmp	x25, #0xfff
   17c8c:	b.ls	17e64 <__sanitizer_cov_dump@@Base+0xfe4>  // b.plast
   17c90:	ldr	x3, [x19, #16]
   17c94:	and	x4, x25, #0xfffffffffffff000
   17c98:	cmp	x3, x4
   17c9c:	b.ne	17e84 <__sanitizer_cov_dump@@Base+0x1004>  // b.any
   17ca0:	ubfx	x24, x25, #6, #6
   17ca4:	mov	x5, #0x1                   	// #1
   17ca8:	ldr	x20, [x19, #1064]
   17cac:	add	x0, x24, x5
   17cb0:	and	x6, x25, #0xfff
   17cb4:	lsl	x24, x5, x24
   17cb8:	add	x11, x21, x0, lsl #3
   17cbc:	ands	x20, x20, x24
   17cc0:	lsl	x5, x5, x25
   17cc4:	b.eq	17cf4 <__sanitizer_cov_dump@@Base+0xe74>  // b.none
   17cc8:	ldr	x0, [x21, x0, lsl #3]
   17ccc:	tst	x5, x0
   17cd0:	b.eq	17cf4 <__sanitizer_cov_dump@@Base+0xe74>  // b.none
   17cd4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17cd8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17cdc:	add	x2, x2, #0xe60
   17ce0:	add	x0, x0, #0xc68
   17ce4:	mov	x4, #0x0                   	// #0
   17ce8:	mov	x3, #0x0                   	// #0
   17cec:	mov	w1, #0x13e                 	// #318
   17cf0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17cf4:	add	x8, x6, x6, lsl #6
   17cf8:	str	x6, [sp, #176]
   17cfc:	add	x7, x19, #0x630
   17d00:	mov	x26, #0x1                   	// #1
   17d04:	add	x3, sp, #0xb8
   17d08:	add	x10, x7, x8, lsl #3
   17d0c:	mov	x9, x26
   17d10:	cbz	x20, 17d48 <__sanitizer_cov_dump@@Base+0xec8>
   17d14:	ldr	x20, [x11]
   17d18:	ands	x20, x5, x20
   17d1c:	b.eq	17d48 <__sanitizer_cov_dump@@Base+0xec8>  // b.none
   17d20:	mov	x0, #0x1                   	// #1
   17d24:	cmp	x0, x26
   17d28:	b.eq	17ebc <__sanitizer_cov_dump@@Base+0x103c>  // b.none
   17d2c:	add	x26, x26, #0x1
   17d30:	cmp	x26, #0x15
   17d34:	b.eq	18050 <__sanitizer_cov_dump@@Base+0x11d0>  // b.none
   17d38:	ldr	x20, [x19, #1064]
   17d3c:	str	x6, [sp, #176]
   17d40:	and	x20, x20, x24
   17d44:	cbnz	x20, 17d14 <__sanitizer_cov_dump@@Base+0xe94>
   17d48:	sub	x4, x26, #0x1
   17d4c:	mov	x28, #0x0                   	// #0
   17d50:	mov	x27, #0x0                   	// #0
   17d54:	mov	x12, #0x0                   	// #0
   17d58:	cbnz	x27, 17dfc <__sanitizer_cov_dump@@Base+0xf7c>
   17d5c:	cbnz	x20, 17d2c <__sanitizer_cov_dump@@Base+0xeac>
   17d60:	ldr	x27, [x10]
   17d64:	cbz	x27, 17d2c <__sanitizer_cov_dump@@Base+0xeac>
   17d68:	cbnz	x28, 17e38 <__sanitizer_cov_dump@@Base+0xfb8>
   17d6c:	mov	x1, x8
   17d70:	mov	x20, x28
   17d74:	rbit	x12, x27
   17d78:	clz	x12, x12
   17d7c:	add	x0, x1, x12
   17d80:	add	x0, x0, #0x1
   17d84:	ldr	x2, [x7, x0, lsl #3]
   17d88:	cbz	x2, 17e9c <__sanitizer_cov_dump@@Base+0x101c>
   17d8c:	add	x1, x12, x28
   17d90:	lsl	x0, x9, x12
   17d94:	mov	x28, x2
   17d98:	bic	x27, x27, x0
   17d9c:	rbit	x0, x28
   17da0:	clz	x0, x0
   17da4:	add	x1, x0, x1, lsl #6
   17da8:	lsl	x2, x9, x0
   17dac:	bic	x28, x28, x2
   17db0:	orr	x0, x28, x27
   17db4:	cbz	x0, 17e50 <__sanitizer_cov_dump@@Base+0xfd0>
   17db8:	mov	x0, x7
   17dbc:	mov	x2, x21
   17dc0:	stp	x7, x3, [sp, #104]
   17dc4:	stp	x4, x6, [sp, #120]
   17dc8:	stp	x10, x12, [sp, #136]
   17dcc:	stp	x11, x5, [sp, #152]
   17dd0:	str	x8, [sp, #168]
   17dd4:	bl	18a28 <__sanitizer_cov_dump@@Base+0x1ba8>
   17dd8:	mov	x9, #0x1                   	// #1
   17ddc:	ldp	x7, x3, [sp, #104]
   17de0:	ldp	x4, x6, [sp, #120]
   17de4:	ldp	x10, x12, [sp, #136]
   17de8:	ldp	x11, x5, [sp, #152]
   17dec:	ldr	x8, [sp, #168]
   17df0:	cbz	x0, 17d58 <__sanitizer_cov_dump@@Base+0xed8>
   17df4:	add	x0, x0, x9
   17df8:	b	17d24 <__sanitizer_cov_dump@@Base+0xea4>
   17dfc:	lsl	x0, x20, #6
   17e00:	cbz	x28, 17e44 <__sanitizer_cov_dump@@Base+0xfc4>
   17e04:	rbit	x1, x28
   17e08:	add	x0, x12, x0
   17e0c:	clz	x1, x1
   17e10:	lsl	x2, x9, x1
   17e14:	add	x1, x1, x0, lsl #6
   17e18:	bic	x28, x28, x2
   17e1c:	b	17db8 <__sanitizer_cov_dump@@Base+0xf38>
   17e20:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17e24:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17e28:	add	x2, x2, #0xf30
   17e2c:	add	x0, x0, #0xc68
   17e30:	mov	w1, #0x6c                  	// #108
   17e34:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17e38:	mov	x1, x12
   17e3c:	mov	x27, #0x0                   	// #0
   17e40:	b	17d9c <__sanitizer_cov_dump@@Base+0xf1c>
   17e44:	add	x1, x8, x0
   17e48:	mov	x28, x0
   17e4c:	b	17d74 <__sanitizer_cov_dump@@Base+0xef4>
   17e50:	add	x20, x20, #0x1
   17e54:	mov	x27, #0x0                   	// #0
   17e58:	mov	x28, #0x0                   	// #0
   17e5c:	b	17db8 <__sanitizer_cov_dump@@Base+0xf38>
   17e60:	mov	x3, x5
   17e64:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17e68:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17e6c:	add	x2, x2, #0xc50
   17e70:	add	x0, x0, #0xc68
   17e74:	mov	x4, #0x1000                	// #4096
   17e78:	mov	w1, #0x172                 	// #370
   17e7c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17e80:	mov	x3, x1
   17e84:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17e88:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17e8c:	add	x2, x2, #0xf00
   17e90:	add	x0, x0, #0xc68
   17e94:	mov	w1, #0x173                 	// #371
   17e98:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17e9c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17ea0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17ea4:	add	x2, x2, #0xbd8
   17ea8:	add	x0, x0, #0xbf8
   17eac:	mov	x4, #0x0                   	// #0
   17eb0:	mov	x3, #0x0                   	// #0
   17eb4:	mov	w1, #0x132                 	// #306
   17eb8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17ebc:	add	x7, sp, #0xb0
   17ec0:	mov	x0, x7
   17ec4:	add	x2, x7, x26, lsl #3
   17ec8:	b	17ee0 <__sanitizer_cov_dump@@Base+0x1060>
   17ecc:	ldr	x1, [x19, #16]
   17ed0:	add	x3, x3, x1
   17ed4:	str	x3, [x0], #8
   17ed8:	cmp	x2, x0
   17edc:	b.eq	17f08 <__sanitizer_cov_dump@@Base+0x1088>  // b.none
   17ee0:	ldr	x3, [x0]
   17ee4:	cmp	x3, #0xfff
   17ee8:	b.ls	17ecc <__sanitizer_cov_dump@@Base+0x104c>  // b.plast
   17eec:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17ef0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   17ef4:	add	x2, x2, #0xe80
   17ef8:	add	x0, x0, #0xc68
   17efc:	mov	x4, #0x1000                	// #4096
   17f00:	mov	w1, #0x16f                 	// #367
   17f04:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17f08:	ldr	x3, [sp, #176]
   17f0c:	cmp	x25, x3
   17f10:	b.ne	18088 <__sanitizer_cov_dump@@Base+0x1208>  // b.any
   17f14:	ldr	x3, [x22]
   17f18:	cmp	x3, x25
   17f1c:	b.ne	18060 <__sanitizer_cov_dump@@Base+0x11e0>  // b.any
   17f20:	add	x10, x19, #0x10
   17f24:	mov	x0, #0x14                  	// #20
   17f28:	cmp	x26, #0x14
   17f2c:	mov	x13, #0xa40                 	// #2624
   17f30:	mov	x11, #0x1146                	// #4422
   17f34:	add	x12, x10, #0x410, lsl #12
   17f38:	add	x9, x23, #0x630
   17f3c:	csel	x26, x26, x0, ls  // ls = plast
   17f40:	mov	x8, #0x1                   	// #1
   17f44:	mov	w0, #0x1                   	// #1
   17f48:	movk	x13, #0x21, lsl #16
   17f4c:	movk	x11, #0x4, lsl #16
   17f50:	str	w26, [x23, #1576]
   17f54:	strb	w0, [x23, #2224]
   17f58:	udiv	x0, x8, x26
   17f5c:	add	x2, x7, x8, lsl #3
   17f60:	ldur	x5, [x2, #-8]
   17f64:	msub	x0, x0, x26, x8
   17f68:	cmp	x5, #0xfff
   17f6c:	b.ls	17e60 <__sanitizer_cov_dump@@Base+0xfe0>  // b.plast
   17f70:	and	x4, x5, #0xfffffffffffff000
   17f74:	cmp	x1, x4
   17f78:	b.ne	17e80 <__sanitizer_cov_dump@@Base+0x1000>  // b.any
   17f7c:	ldr	x3, [x7, x0, lsl #3]
   17f80:	and	x5, x5, #0xfff
   17f84:	cmp	x3, #0xfff
   17f88:	b.ls	17e64 <__sanitizer_cov_dump@@Base+0xfe4>  // b.plast
   17f8c:	and	x4, x3, #0xfffffffffffff000
   17f90:	cmp	x1, x4
   17f94:	b.ne	17e80 <__sanitizer_cov_dump@@Base+0x1000>  // b.any
   17f98:	ldr	x4, [x12, #2608]
   17f9c:	and	x6, x3, #0xfff
   17fa0:	cbz	x4, 1807c <__sanitizer_cov_dump@@Base+0x11fc>
   17fa4:	add	x0, x19, x13
   17fa8:	mov	x2, #0x0                   	// #0
   17fac:	b	17fc0 <__sanitizer_cov_dump@@Base+0x1140>
   17fb0:	add	x2, x2, #0x1
   17fb4:	add	x0, x0, #0x10
   17fb8:	cmp	x4, x2
   17fbc:	b.eq	18040 <__sanitizer_cov_dump@@Base+0x11c0>  // b.none
   17fc0:	ldrh	w3, [x0]
   17fc4:	cmp	x5, x3
   17fc8:	b.ne	17fb0 <__sanitizer_cov_dump@@Base+0x1130>  // b.any
   17fcc:	ldrh	w3, [x0, #2]
   17fd0:	cmp	x6, x3
   17fd4:	b.ne	17fb0 <__sanitizer_cov_dump@@Base+0x1130>  // b.any
   17fd8:	add	x0, x19, x2, lsl #4
   17fdc:	add	x0, x0, #0x210, lsl #12
   17fe0:	ldrsw	x4, [x0, #2636]
   17fe4:	ldr	w2, [x0, #2628]
   17fe8:	ldr	w0, [x0, #2632]
   17fec:	add	x5, x5, x11
   17ff0:	add	x3, x6, x11
   17ff4:	cmp	x26, x8
   17ff8:	add	x8, x8, #0x1
   17ffc:	ldr	x5, [x10, x5, lsl #3]
   18000:	ldr	x3, [x10, x3, lsl #3]
   18004:	str	x4, [x9]
   18008:	ldr	x4, [x5, #16]
   1800c:	str	x4, [x9, #8]
   18010:	ldr	x3, [x3, #16]
   18014:	str	x3, [x9, #16]
   18018:	stp	w0, w2, [x9, #24]
   1801c:	add	x9, x9, #0x20
   18020:	b.ne	17f58 <__sanitizer_cov_dump@@Base+0x10d8>  // b.any
   18024:	ldp	x21, x22, [sp, #16]
   18028:	ldp	x23, x24, [sp, #32]
   1802c:	ldp	x25, x26, [sp, #48]
   18030:	ldp	x27, x28, [sp, #64]
   18034:	ldr	x30, [sp, #80]
   18038:	ldp	x19, x20, [sp], #336
   1803c:	ret
   18040:	mov	w0, #0xffffffff            	// #-1
   18044:	mov	x4, #0x0                   	// #0
   18048:	mov	w2, w0
   1804c:	b	17fec <__sanitizer_cov_dump@@Base+0x116c>
   18050:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18054:	add	x0, x0, #0xed8
   18058:	bl	22c78 <OnPrint@@Base+0x310>
   1805c:	b	18024 <__sanitizer_cov_dump@@Base+0x11a4>
   18060:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18064:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18068:	mov	x4, x25
   1806c:	add	x2, x2, #0xeb8
   18070:	add	x0, x0, #0xe10
   18074:	mov	w1, #0x7f                  	// #127
   18078:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1807c:	mov	w0, #0xffffffff            	// #-1
   18080:	mov	w2, w0
   18084:	b	17fec <__sanitizer_cov_dump@@Base+0x116c>
   18088:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1808c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18090:	mov	x4, x25
   18094:	add	x2, x2, #0xe98
   18098:	add	x0, x0, #0xc68
   1809c:	mov	w1, #0x143                 	// #323
   180a0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   180a4:	nop
   180a8:	stp	x19, x20, [sp, #-64]!
   180ac:	mov	x19, x0
   180b0:	stp	x21, x22, [sp, #16]
   180b4:	ldr	x21, [x1, #16]
   180b8:	ldr	x0, [x21, #8]
   180bc:	str	x30, [sp, #40]
   180c0:	cbz	x0, 18284 <__sanitizer_cov_dump@@Base+0x1404>
   180c4:	ldr	x0, [x2]
   180c8:	mov	x22, x1
   180cc:	mov	x20, x2
   180d0:	cbz	x0, 180e4 <__sanitizer_cov_dump@@Base+0x1264>
   180d4:	ldr	x2, [x19, #16]
   180d8:	ldr	x1, [x21, #528]
   180dc:	cmp	x1, x2
   180e0:	b.eq	182a4 <__sanitizer_cov_dump@@Base+0x1424>  // b.none
   180e4:	add	x0, x19, #0x8
   180e8:	mov	w2, #0x1                   	// #1
   180ec:	str	x23, [sp, #32]
   180f0:	ldxrb	w1, [x0]
   180f4:	stxrb	w3, w2, [x0]
   180f8:	cbnz	w3, 180f0 <__sanitizer_cov_dump@@Base+0x1270>
   180fc:	dmb	ish
   18100:	tst	w1, #0xff
   18104:	b.eq	1810c <__sanitizer_cov_dump@@Base+0x128c>  // b.none
   18108:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   1810c:	add	x23, x21, #0x8
   18110:	mov	x1, x21
   18114:	mov	x0, x19
   18118:	mov	x2, x20
   1811c:	bl	17298 <__sanitizer_cov_dump@@Base+0x418>
   18120:	ldr	x1, [x19, #16]
   18124:	ldr	x3, [x23, #520]
   18128:	ldr	x0, [x20]
   1812c:	cmp	x1, x3
   18130:	b.ne	1842c <__sanitizer_cov_dump@@Base+0x15ac>  // b.any
   18134:	cmp	x0, #0xfff
   18138:	b.ls	18448 <__sanitizer_cov_dump@@Base+0x15c8>  // b.plast
   1813c:	and	x4, x0, #0xfffffffffffff000
   18140:	cmp	x1, x4
   18144:	b.ne	18468 <__sanitizer_cov_dump@@Base+0x15e8>  // b.any
   18148:	ldr	x2, [x21, #8]
   1814c:	ubfx	x1, x0, #6, #6
   18150:	mov	x3, #0x1                   	// #1
   18154:	add	x8, x1, x3
   18158:	lsl	x5, x3, x1
   1815c:	and	x1, x0, #0xfff
   18160:	tst	x5, x2
   18164:	lsl	x3, x3, x0
   18168:	b.ne	18294 <__sanitizer_cov_dump@@Base+0x1414>  // b.any
   1816c:	add	x6, x19, #0x208, lsl #12
   18170:	add	x4, x1, x1, lsl #6
   18174:	add	x10, x19, #0x630
   18178:	str	xzr, [x6, #1584]
   1817c:	ldr	x1, [x10, x4, lsl #3]
   18180:	cbz	x1, 18330 <__sanitizer_cov_dump@@Base+0x14b0>
   18184:	add	x9, x19, #0x208, lsl #12
   18188:	mov	x2, #0x0                   	// #0
   1818c:	add	x9, x9, #0x630
   18190:	mov	x11, #0x1                   	// #1
   18194:	rbit	x0, x1
   18198:	clz	x0, x0
   1819c:	lsl	x0, x11, x0
   181a0:	orr	x7, x0, x2
   181a4:	cmp	x7, x2
   181a8:	rbit	x2, x1
   181ac:	str	x7, [x6, #1584]
   181b0:	clz	x2, x2
   181b4:	bic	x1, x1, x0
   181b8:	add	x0, x2, #0x1
   181bc:	add	x2, x2, x4
   181c0:	b.eq	18318 <__sanitizer_cov_dump@@Base+0x1498>  // b.none
   181c4:	add	x2, x2, #0x1
   181c8:	str	xzr, [x9, x0, lsl #3]
   181cc:	ldr	x2, [x10, x2, lsl #3]
   181d0:	str	x2, [x9, x0, lsl #3]
   181d4:	cbz	x1, 18330 <__sanitizer_cov_dump@@Base+0x14b0>
   181d8:	ldr	x2, [x6, #1584]
   181dc:	b	18194 <__sanitizer_cov_dump@@Base+0x1314>
   181e0:	ldr	x0, [x21, #8]
   181e4:	mov	x4, #0x1                   	// #1
   181e8:	ldr	x3, [x6, #2104]
   181ec:	ands	x0, x3, x0
   181f0:	b.eq	18278 <__sanitizer_cov_dump@@Base+0x13f8>  // b.none
   181f4:	rbit	x1, x0
   181f8:	clz	x1, x1
   181fc:	mov	x2, x1
   18200:	lsl	x1, x4, x1
   18204:	tst	x1, x3
   18208:	bic	x0, x0, x1
   1820c:	b.eq	18484 <__sanitizer_cov_dump@@Base+0x1604>  // b.none
   18210:	add	x1, x2, #0x1
   18214:	ldr	x2, [x23, x1, lsl #3]
   18218:	ldr	x1, [x7, x1, lsl #3]
   1821c:	tst	x2, x1
   18220:	b.eq	18484 <__sanitizer_cov_dump@@Base+0x1604>  // b.none
   18224:	ldr	x1, [x22]
   18228:	adrp	x0, 18000 <__sanitizer_cov_dump@@Base+0x1180>
   1822c:	add	x0, x0, #0x500
   18230:	mov	w3, #0x0                   	// #0
   18234:	ldr	x2, [x20]
   18238:	ldr	x4, [x1]
   1823c:	cmp	x4, x0
   18240:	b.ne	184c4 <__sanitizer_cov_dump@@Base+0x1644>  // b.any
   18244:	ldr	x1, [x1, #8]
   18248:	adrp	x0, 18000 <__sanitizer_cov_dump@@Base+0x1180>
   1824c:	add	x0, x0, #0x508
   18250:	mov	w4, #0x0                   	// #0
   18254:	cmp	x1, x0
   18258:	b.ne	184a4 <__sanitizer_cov_dump@@Base+0x1624>  // b.any
   1825c:	mov	x1, x23
   18260:	add	x0, x19, #0x10
   18264:	bl	18748 <__sanitizer_cov_dump@@Base+0x18c8>
   18268:	mov	x2, x20
   1826c:	mov	x1, x22
   18270:	mov	x0, x19
   18274:	bl	17be0 <__sanitizer_cov_dump@@Base+0xd60>
   18278:	dmb	ish
   1827c:	strb	wzr, [x19, #8]
   18280:	ldr	x23, [sp, #32]
   18284:	ldp	x21, x22, [sp, #16]
   18288:	ldr	x30, [sp, #40]
   1828c:	ldp	x19, x20, [sp], #64
   18290:	ret
   18294:	ldr	x0, [x23, x8, lsl #3]
   18298:	tst	x3, x0
   1829c:	b.eq	1816c <__sanitizer_cov_dump@@Base+0x12ec>  // b.none
   182a0:	b	18278 <__sanitizer_cov_dump@@Base+0x13f8>
   182a4:	and	x2, x0, #0xfffffffffffff000
   182a8:	cmp	x1, x2
   182ac:	b.ne	180e4 <__sanitizer_cov_dump@@Base+0x1264>  // b.any
   182b0:	ldr	x6, [x21, #1568]
   182b4:	cbz	x6, 18284 <__sanitizer_cov_dump@@Base+0x1404>
   182b8:	ubfx	x3, x0, #6, #6
   182bc:	mov	x1, #0x1                   	// #1
   182c0:	add	x5, x19, #0x630
   182c4:	add	x8, x21, #0x420
   182c8:	add	x10, x3, x1
   182cc:	lsl	x0, x1, x0
   182d0:	lsl	x3, x1, x3
   182d4:	mov	w7, #0x208                 	// #520
   182d8:	mov	x1, #0x0                   	// #0
   182dc:	mov	w9, #0x41                  	// #65
   182e0:	lsl	x2, x1, #3
   182e4:	ldr	w2, [x8, x2]
   182e8:	umull	x4, w2, w7
   182ec:	ldr	x4, [x5, x4]
   182f0:	tst	x3, x4
   182f4:	b.eq	180e4 <__sanitizer_cov_dump@@Base+0x1264>  // b.none
   182f8:	umaddl	x2, w2, w9, x10
   182fc:	ldr	x2, [x5, x2, lsl #3]
   18300:	tst	x0, x2
   18304:	b.eq	180e4 <__sanitizer_cov_dump@@Base+0x1264>  // b.none
   18308:	add	x1, x1, #0x1
   1830c:	cmp	x6, x1
   18310:	b.ne	182e0 <__sanitizer_cov_dump@@Base+0x1460>  // b.any
   18314:	b	18284 <__sanitizer_cov_dump@@Base+0x1404>
   18318:	add	x2, x2, #0x1
   1831c:	ldr	x7, [x9, x0, lsl #3]
   18320:	ldr	x2, [x10, x2, lsl #3]
   18324:	orr	x2, x7, x2
   18328:	str	x2, [x9, x0, lsl #3]
   1832c:	cbnz	x1, 181d8 <__sanitizer_cov_dump@@Base+0x1358>
   18330:	add	x7, x19, #0x208, lsl #12
   18334:	add	x9, x19, #0x208, lsl #12
   18338:	add	x7, x7, #0x838
   1833c:	add	x9, x9, #0x630
   18340:	str	x5, [x6, #2104]
   18344:	mov	w12, #0x40                  	// #64
   18348:	mov	x13, #0x208                 	// #520
   1834c:	mov	x5, #0x1                   	// #1
   18350:	str	x3, [x7, x8, lsl #3]
   18354:	ldr	x0, [x6, #1584]
   18358:	cbz	x0, 181e0 <__sanitizer_cov_dump@@Base+0x1360>
   1835c:	rbit	x1, x0
   18360:	clz	x1, x1
   18364:	add	x3, x1, #0x1
   18368:	lsl	x4, x5, x1
   1836c:	bic	x0, x0, x4
   18370:	str	x0, [x6, #1584]
   18374:	ldr	x2, [x9, x3, lsl #3]
   18378:	cbz	x2, 184e0 <__sanitizer_cov_dump@@Base+0x1660>
   1837c:	rbit	x11, x2
   18380:	clz	x11, x11
   18384:	lsl	x8, x5, x11
   18388:	bic	x2, x2, x8
   1838c:	str	x2, [x9, x3, lsl #3]
   18390:	cbz	x2, 1839c <__sanitizer_cov_dump@@Base+0x151c>
   18394:	orr	x0, x4, x0
   18398:	str	x0, [x6, #1584]
   1839c:	sxtw	x11, w11
   183a0:	ldr	x3, [x6, #2104]
   183a4:	smaddl	x1, w1, w12, x11
   183a8:	lsr	x0, x1, #6
   183ac:	lsl	x2, x5, x1
   183b0:	add	x4, x0, #0x1
   183b4:	lsl	x0, x5, x0
   183b8:	tst	x3, x0
   183bc:	b.ne	1848c <__sanitizer_cov_dump@@Base+0x160c>  // b.any
   183c0:	orr	x0, x3, x0
   183c4:	str	x0, [x6, #2104]
   183c8:	str	x2, [x7, x4, lsl #3]
   183cc:	mul	x0, x1, x13
   183d0:	add	x1, x1, x1, lsl #6
   183d4:	ldr	x2, [x10, x0]
   183d8:	ldr	x11, [x6, #1584]
   183dc:	cbz	x2, 18354 <__sanitizer_cov_dump@@Base+0x14d4>
   183e0:	rbit	x4, x2
   183e4:	clz	x4, x4
   183e8:	mov	x0, x4
   183ec:	add	x3, x0, #0x1
   183f0:	lsl	x4, x5, x4
   183f4:	orr	x8, x4, x11
   183f8:	str	x8, [x6, #1584]
   183fc:	cmp	x11, x8
   18400:	bic	x2, x2, x4
   18404:	lsl	x3, x3, #3
   18408:	b.eq	18410 <__sanitizer_cov_dump@@Base+0x1590>  // b.none
   1840c:	str	xzr, [x9, x3]
   18410:	add	x0, x0, x1
   18414:	add	x0, x0, #0x1
   18418:	ldr	x4, [x9, x3]
   1841c:	ldr	x0, [x10, x0, lsl #3]
   18420:	orr	x0, x4, x0
   18424:	str	x0, [x9, x3]
   18428:	b	183d8 <__sanitizer_cov_dump@@Base+0x1558>
   1842c:	mov	x4, x1
   18430:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18434:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18438:	add	x2, x2, #0xf30
   1843c:	add	x0, x0, #0xc68
   18440:	mov	w1, #0x6c                  	// #108
   18444:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18448:	mov	x3, x0
   1844c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18450:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18454:	add	x2, x2, #0xc50
   18458:	add	x0, x0, #0xc68
   1845c:	mov	x4, #0x1000                	// #4096
   18460:	mov	w1, #0x172                 	// #370
   18464:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18468:	mov	x3, x1
   1846c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18470:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18474:	add	x2, x2, #0xf00
   18478:	add	x0, x0, #0xc68
   1847c:	mov	w1, #0x173                 	// #371
   18480:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18484:	cbnz	x0, 181f4 <__sanitizer_cov_dump@@Base+0x1374>
   18488:	b	18278 <__sanitizer_cov_dump@@Base+0x13f8>
   1848c:	ldr	x0, [x7, x4, lsl #3]
   18490:	orr	x2, x0, x2
   18494:	str	x2, [x7, x4, lsl #3]
   18498:	cmp	x0, x2
   1849c:	b.eq	18354 <__sanitizer_cov_dump@@Base+0x14d4>  // b.none
   184a0:	b	183cc <__sanitizer_cov_dump@@Base+0x154c>
   184a4:	str	x2, [sp, #48]
   184a8:	mov	x0, x22
   184ac:	str	w3, [sp, #60]
   184b0:	blr	x1
   184b4:	mov	w4, w0
   184b8:	ldr	w3, [sp, #60]
   184bc:	ldr	x2, [sp, #48]
   184c0:	b	1825c <__sanitizer_cov_dump@@Base+0x13dc>
   184c4:	str	x2, [sp, #48]
   184c8:	mov	x0, x22
   184cc:	blr	x4
   184d0:	mov	w3, w0
   184d4:	ldr	x1, [x22]
   184d8:	ldr	x2, [sp, #48]
   184dc:	b	18244 <__sanitizer_cov_dump@@Base+0x13c4>
   184e0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   184e4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   184e8:	add	x2, x2, #0xbd0
   184ec:	add	x0, x0, #0xbf8
   184f0:	mov	x4, #0x0                   	// #0
   184f4:	mov	x3, #0x0                   	// #0
   184f8:	mov	w1, #0x30                  	// #48
   184fc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18500:	mov	w0, #0x0                   	// #0
   18504:	ret
   18508:	mov	w0, #0x0                   	// #0
   1850c:	ret
   18510:	stp	x19, x20, [sp, #-112]!
   18514:	add	x1, x1, x1, lsl #6
   18518:	mov	x19, #0x0                   	// #0
   1851c:	stp	x21, x22, [sp, #16]
   18520:	mov	x22, x0
   18524:	add	x21, x1, #0x1
   18528:	stp	x23, x24, [sp, #32]
   1852c:	sub	x23, x4, #0x1
   18530:	mov	x20, #0x0                   	// #0
   18534:	stp	x25, x26, [sp, #48]
   18538:	mov	x26, x3
   1853c:	add	x3, x3, #0x8
   18540:	stp	x27, x28, [sp, #64]
   18544:	add	x27, x0, x1, lsl #3
   18548:	mov	x25, #0x0                   	// #0
   1854c:	mov	x28, #0x0                   	// #0
   18550:	mov	x24, #0x1                   	// #1
   18554:	str	x30, [sp, #80]
   18558:	cbnz	x23, 1859c <__sanitizer_cov_dump@@Base+0x171c>
   1855c:	mov	x1, #0x1                   	// #1
   18560:	cbnz	x20, 18640 <__sanitizer_cov_dump@@Base+0x17c0>
   18564:	cbnz	x28, 186e4 <__sanitizer_cov_dump@@Base+0x1864>
   18568:	ldr	x20, [x27]
   1856c:	cbz	x20, 186e4 <__sanitizer_cov_dump@@Base+0x1864>
   18570:	cbz	x19, 1865c <__sanitizer_cov_dump@@Base+0x17dc>
   18574:	mov	x20, #0x0                   	// #0
   18578:	rbit	x0, x19
   1857c:	clz	x0, x0
   18580:	lsl	x0, x1, x0
   18584:	bic	x19, x19, x0
   18588:	orr	x0, x19, x20
   1858c:	cbnz	x0, 18560 <__sanitizer_cov_dump@@Base+0x16e0>
   18590:	add	x28, x28, #0x1
   18594:	mov	x19, #0x0                   	// #0
   18598:	b	18564 <__sanitizer_cov_dump@@Base+0x16e4>
   1859c:	cbnz	x20, 186a0 <__sanitizer_cov_dump@@Base+0x1820>
   185a0:	cbnz	x28, 186e4 <__sanitizer_cov_dump@@Base+0x1864>
   185a4:	ldr	x20, [x27]
   185a8:	cbz	x20, 186e4 <__sanitizer_cov_dump@@Base+0x1864>
   185ac:	cbz	x19, 186bc <__sanitizer_cov_dump@@Base+0x183c>
   185b0:	mov	x1, x25
   185b4:	mov	x20, #0x0                   	// #0
   185b8:	rbit	x0, x19
   185bc:	clz	x0, x0
   185c0:	lsl	x4, x24, x0
   185c4:	bic	x19, x19, x4
   185c8:	orr	x4, x19, x20
   185cc:	cbnz	x4, 185dc <__sanitizer_cov_dump@@Base+0x175c>
   185d0:	add	x28, x28, #0x1
   185d4:	mov	x20, #0x0                   	// #0
   185d8:	mov	x19, #0x0                   	// #0
   185dc:	sxtw	x0, w0
   185e0:	add	x1, x0, x1, lsl #6
   185e4:	str	x1, [x26, #8]
   185e8:	cmp	x1, #0x1, lsl #12
   185ec:	b.hi	18724 <__sanitizer_cov_dump@@Base+0x18a4>  // b.pmore
   185f0:	lsr	x0, x1, #12
   185f4:	ubfx	x4, x1, #6, #6
   185f8:	lsl	x6, x24, x4
   185fc:	ldr	x5, [x2, x0, lsl #3]
   18600:	tst	x6, x5
   18604:	b.eq	18680 <__sanitizer_cov_dump@@Base+0x1800>  // b.none
   18608:	add	x0, x4, x0, lsl #6
   1860c:	lsl	x4, x24, x1
   18610:	add	x0, x0, #0x1
   18614:	ldr	x5, [x2, x0, lsl #3]
   18618:	tst	x4, x5
   1861c:	b.eq	18680 <__sanitizer_cov_dump@@Base+0x1800>  // b.none
   18620:	mov	x0, #0x2                   	// #2
   18624:	ldp	x21, x22, [sp, #16]
   18628:	ldp	x23, x24, [sp, #32]
   1862c:	ldp	x25, x26, [sp, #48]
   18630:	ldp	x27, x28, [sp, #64]
   18634:	ldr	x30, [sp, #80]
   18638:	ldp	x19, x20, [sp], #112
   1863c:	ret
   18640:	cbz	x19, 1865c <__sanitizer_cov_dump@@Base+0x17dc>
   18644:	rbit	x0, x19
   18648:	clz	x0, x0
   1864c:	lsl	x0, x1, x0
   18650:	bic	x19, x19, x0
   18654:	cbz	x20, 18564 <__sanitizer_cov_dump@@Base+0x16e4>
   18658:	b	18640 <__sanitizer_cov_dump@@Base+0x17c0>
   1865c:	rbit	x2, x20
   18660:	add	x0, x21, x28, lsl #6
   18664:	clz	x2, x2
   18668:	add	x0, x0, x2
   1866c:	ldr	x19, [x22, x0, lsl #3]
   18670:	cbz	x19, 18704 <__sanitizer_cov_dump@@Base+0x1884>
   18674:	lsl	x2, x1, x2
   18678:	bic	x20, x20, x2
   1867c:	b	18578 <__sanitizer_cov_dump@@Base+0x16f8>
   18680:	mov	x4, x23
   18684:	mov	x0, x22
   18688:	stp	x2, x3, [sp, #96]
   1868c:	bl	18510 <__sanitizer_cov_dump@@Base+0x1690>
   18690:	ldp	x2, x3, [sp, #96]
   18694:	cbz	x0, 18558 <__sanitizer_cov_dump@@Base+0x16d8>
   18698:	add	x0, x0, #0x1
   1869c:	b	186e8 <__sanitizer_cov_dump@@Base+0x1868>
   186a0:	cbz	x19, 186bc <__sanitizer_cov_dump@@Base+0x183c>
   186a4:	rbit	x0, x19
   186a8:	add	x1, x25, x28, lsl #6
   186ac:	clz	x0, x0
   186b0:	lsl	x4, x24, x0
   186b4:	bic	x19, x19, x4
   186b8:	b	185dc <__sanitizer_cov_dump@@Base+0x175c>
   186bc:	rbit	x25, x20
   186c0:	clz	x25, x25
   186c4:	add	x1, x25, x28, lsl #6
   186c8:	mov	x0, x25
   186cc:	add	x4, x1, x21
   186d0:	ldr	x19, [x22, x4, lsl #3]
   186d4:	cbz	x19, 18704 <__sanitizer_cov_dump@@Base+0x1884>
   186d8:	lsl	x0, x24, x0
   186dc:	bic	x20, x20, x0
   186e0:	b	185b8 <__sanitizer_cov_dump@@Base+0x1738>
   186e4:	mov	x0, #0x0                   	// #0
   186e8:	ldp	x21, x22, [sp, #16]
   186ec:	ldp	x23, x24, [sp, #32]
   186f0:	ldp	x25, x26, [sp, #48]
   186f4:	ldp	x27, x28, [sp, #64]
   186f8:	ldr	x30, [sp, #80]
   186fc:	ldp	x19, x20, [sp], #112
   18700:	ret
   18704:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18708:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1870c:	add	x2, x2, #0xbd8
   18710:	add	x0, x0, #0xbf8
   18714:	mov	x4, #0x0                   	// #0
   18718:	mov	x3, #0x0                   	// #0
   1871c:	mov	w1, #0x132                 	// #306
   18720:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18724:	mov	x3, x1
   18728:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1872c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18730:	add	x2, x2, #0xc38
   18734:	add	x0, x0, #0xbf8
   18738:	mov	x4, #0x1000                	// #4096
   1873c:	mov	w1, #0x143                 	// #323
   18740:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18744:	nop
   18748:	stp	x19, x20, [sp, #-352]!
   1874c:	mov	x8, x0
   18750:	ldr	x0, [x0]
   18754:	ldr	x5, [x1, #520]
   18758:	str	x30, [sp, #16]
   1875c:	cmp	x0, x5
   18760:	b.eq	18774 <__sanitizer_cov_dump@@Base+0x18f4>  // b.none
   18764:	str	xzr, [x1]
   18768:	str	x0, [x1, #520]
   1876c:	str	xzr, [x1, #1040]
   18770:	str	xzr, [x1, #1560]
   18774:	cmp	x2, #0xfff
   18778:	b.ls	1896c <__sanitizer_cov_dump@@Base+0x1aec>  // b.plast
   1877c:	ldr	x5, [x8]
   18780:	and	x6, x2, #0xfffffffffffff000
   18784:	cmp	x5, x6
   18788:	b.ne	1898c <__sanitizer_cov_dump@@Base+0x1b0c>  // b.any
   1878c:	cmp	x5, x0
   18790:	b.ne	189ac <__sanitizer_cov_dump@@Base+0x1b2c>  // b.any
   18794:	add	x12, x8, #0x208, lsl #12
   18798:	str	xzr, [x12, #1568]
   1879c:	ldr	x5, [x1]
   187a0:	cbz	x5, 18808 <__sanitizer_cov_dump@@Base+0x1988>
   187a4:	add	x10, x8, #0x208, lsl #12
   187a8:	mov	x6, #0x0                   	// #0
   187ac:	add	x10, x10, #0x620
   187b0:	mov	x11, #0x1                   	// #1
   187b4:	rbit	x0, x5
   187b8:	clz	x0, x0
   187bc:	lsl	x9, x11, x0
   187c0:	orr	x7, x9, x6
   187c4:	str	x7, [x12, #1568]
   187c8:	bic	x5, x5, x9
   187cc:	cmp	x7, x6
   187d0:	add	x0, x0, #0x1
   187d4:	b.eq	187f0 <__sanitizer_cov_dump@@Base+0x1970>  // b.none
   187d8:	str	xzr, [x10, x0, lsl #3]
   187dc:	ldr	x6, [x1, x0, lsl #3]
   187e0:	str	x6, [x10, x0, lsl #3]
   187e4:	cbz	x5, 18804 <__sanitizer_cov_dump@@Base+0x1984>
   187e8:	ldr	x6, [x12, #1568]
   187ec:	b	187b4 <__sanitizer_cov_dump@@Base+0x1934>
   187f0:	ldr	x6, [x10, x0, lsl #3]
   187f4:	ldr	x7, [x1, x0, lsl #3]
   187f8:	orr	x6, x6, x7
   187fc:	str	x6, [x10, x0, lsl #3]
   18800:	cbnz	x5, 187e8 <__sanitizer_cov_dump@@Base+0x1968>
   18804:	ldr	x5, [x12, #1568]
   18808:	ubfx	x0, x2, #6, #6
   1880c:	mov	x6, #0x1                   	// #1
   18810:	add	x10, x8, #0x208, lsl #12
   18814:	add	x19, x0, x6
   18818:	lsl	x16, x6, x0
   1881c:	mov	x11, x6
   18820:	and	x14, x2, #0xfff
   18824:	add	x10, x10, #0x620
   18828:	add	x17, x8, #0x620
   1882c:	add	x30, sp, #0x20
   18830:	mov	x0, #0x0                   	// #0
   18834:	lsl	x13, x6, x2
   18838:	mov	w20, #0x40                  	// #64
   1883c:	cbz	x5, 188b0 <__sanitizer_cov_dump@@Base+0x1a30>
   18840:	rbit	x2, x5
   18844:	clz	x2, x2
   18848:	add	x9, x2, #0x1
   1884c:	lsl	x7, x11, x2
   18850:	bic	x5, x5, x7
   18854:	str	x5, [x12, #1568]
   18858:	ldr	x6, [x10, x9, lsl #3]
   1885c:	cbz	x6, 18a08 <__sanitizer_cov_dump@@Base+0x1b88>
   18860:	rbit	x18, x6
   18864:	clz	x18, x18
   18868:	lsl	x15, x11, x18
   1886c:	bic	x6, x6, x15
   18870:	str	x6, [x10, x9, lsl #3]
   18874:	cbnz	x6, 189d4 <__sanitizer_cov_dump@@Base+0x1b54>
   18878:	sxtw	x18, w18
   1887c:	smaddl	x2, w2, w20, x18
   18880:	add	x7, x2, x2, lsl #6
   18884:	add	x6, x19, x7
   18888:	ldr	x5, [x17, x7, lsl #3]
   1888c:	tst	x5, x16
   18890:	b.ne	189e0 <__sanitizer_cov_dump@@Base+0x1b60>  // b.any
   18894:	orr	x5, x5, x16
   18898:	str	x5, [x17, x7, lsl #3]
   1889c:	str	x13, [x17, x6, lsl #3]
   188a0:	cmp	x0, #0x27
   188a4:	b.ls	189f8 <__sanitizer_cov_dump@@Base+0x1b78>  // b.plast
   188a8:	ldr	x5, [x12, #1568]
   188ac:	cbnz	x5, 18840 <__sanitizer_cov_dump@@Base+0x19c0>
   188b0:	cbz	x0, 18960 <__sanitizer_cov_dump@@Base+0x1ae0>
   188b4:	add	x15, x8, #0x410, lsl #12
   188b8:	mov	x16, #0x10a3                	// #4259
   188bc:	and	w14, w14, #0xffff
   188c0:	add	x17, sp, #0x20
   188c4:	add	x11, x1, #0x418
   188c8:	mov	x5, #0x1                   	// #1
   188cc:	mov	x12, #0x1ffff               	// #131071
   188d0:	movk	x16, #0x2, lsl #16
   188d4:	ldr	x10, [x15, #2608]
   188d8:	b	188e8 <__sanitizer_cov_dump@@Base+0x1a68>
   188dc:	cmp	x0, x5
   188e0:	add	x5, x5, #0x1
   188e4:	b.eq	18960 <__sanitizer_cov_dump@@Base+0x1ae0>  // b.none
   188e8:	cmp	x10, x12
   188ec:	b.hi	188dc <__sanitizer_cov_dump@@Base+0x1a5c>  // b.pmore
   188f0:	add	x2, x17, x5, lsl #3
   188f4:	ldr	x9, [x1, #1560]
   188f8:	ldur	x7, [x2, #-8]
   188fc:	and	w13, w7, #0xffff
   18900:	cbz	x9, 189cc <__sanitizer_cov_dump@@Base+0x1b4c>
   18904:	mov	x2, #0x0                   	// #0
   18908:	b	18918 <__sanitizer_cov_dump@@Base+0x1a98>
   1890c:	add	x2, x2, #0x1
   18910:	cmp	x2, x9
   18914:	b.eq	189cc <__sanitizer_cov_dump@@Base+0x1b4c>  // b.none
   18918:	lsl	x6, x2, #3
   1891c:	ldr	w6, [x11, x6]
   18920:	cmp	w6, w7
   18924:	b.ne	1890c <__sanitizer_cov_dump@@Base+0x1a8c>  // b.any
   18928:	add	x2, x1, x2, lsl #3
   1892c:	ldr	w7, [x2, #1052]
   18930:	add	x6, x10, x16
   18934:	add	x10, x10, #0x1
   18938:	str	x10, [x15, #2608]
   1893c:	cmp	x0, x5
   18940:	lsl	x6, x6, #4
   18944:	add	x5, x5, #0x1
   18948:	add	x2, x8, x6
   1894c:	strh	w13, [x8, x6]
   18950:	strh	w14, [x2, #2]
   18954:	stp	w7, w3, [x2, #4]
   18958:	str	w4, [x2, #12]
   1895c:	b.ne	188e8 <__sanitizer_cov_dump@@Base+0x1a68>  // b.any
   18960:	ldr	x30, [sp, #16]
   18964:	ldp	x19, x20, [sp], #352
   18968:	ret
   1896c:	mov	x3, x2
   18970:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18974:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18978:	add	x0, x0, #0xc68
   1897c:	add	x2, x2, #0xc50
   18980:	mov	x4, #0x1000                	// #4096
   18984:	mov	w1, #0x172                 	// #370
   18988:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1898c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18990:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18994:	mov	x4, x6
   18998:	mov	x3, x5
   1899c:	add	x2, x2, #0xf00
   189a0:	add	x0, x0, #0xc68
   189a4:	mov	w1, #0x173                 	// #371
   189a8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   189ac:	mov	x3, x0
   189b0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   189b4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   189b8:	mov	x4, x5
   189bc:	add	x2, x2, #0xf30
   189c0:	add	x0, x0, #0xc68
   189c4:	mov	w1, #0x6c                  	// #108
   189c8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   189cc:	mov	w7, #0x0                   	// #0
   189d0:	b	18930 <__sanitizer_cov_dump@@Base+0x1ab0>
   189d4:	orr	x7, x7, x5
   189d8:	str	x7, [x12, #1568]
   189dc:	b	18878 <__sanitizer_cov_dump@@Base+0x19f8>
   189e0:	ldr	x7, [x17, x6, lsl #3]
   189e4:	cmp	x0, #0x27
   189e8:	orr	x5, x7, x13
   189ec:	str	x5, [x17, x6, lsl #3]
   189f0:	ccmp	x7, x5, #0x4, ls  // ls = plast
   189f4:	b.eq	188a8 <__sanitizer_cov_dump@@Base+0x1a28>  // b.none
   189f8:	str	x2, [x30, x0, lsl #3]
   189fc:	add	x0, x0, #0x1
   18a00:	ldr	x5, [x12, #1568]
   18a04:	b	188ac <__sanitizer_cov_dump@@Base+0x1a2c>
   18a08:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   18a0c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18a10:	add	x2, x2, #0xbd0
   18a14:	add	x0, x0, #0xbf8
   18a18:	mov	x4, #0x0                   	// #0
   18a1c:	mov	x3, #0x0                   	// #0
   18a20:	mov	w1, #0x30                  	// #48
   18a24:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18a28:	stp	x19, x20, [sp, #-112]!
   18a2c:	stp	x23, x24, [sp, #32]
   18a30:	mov	x24, x0
   18a34:	mov	x0, x4
   18a38:	str	x30, [sp, #80]
   18a3c:	cbnz	x4, 18a50 <__sanitizer_cov_dump@@Base+0x1bd0>
   18a40:	ldp	x23, x24, [sp, #32]
   18a44:	ldr	x30, [sp, #80]
   18a48:	ldp	x19, x20, [sp], #112
   18a4c:	ret
   18a50:	str	x1, [x3]
   18a54:	mov	x23, x3
   18a58:	cmp	x1, #0x1, lsl #12
   18a5c:	b.hi	18c5c <__sanitizer_cov_dump@@Base+0x1ddc>  // b.pmore
   18a60:	lsr	x3, x1, #12
   18a64:	ubfx	x5, x1, #6, #6
   18a68:	mov	x4, #0x1                   	// #1
   18a6c:	lsl	x7, x4, x5
   18a70:	ldr	x6, [x2, x3, lsl #3]
   18a74:	tst	x7, x6
   18a78:	b.eq	18a9c <__sanitizer_cov_dump@@Base+0x1c1c>  // b.none
   18a7c:	add	x3, x5, x3, lsl #6
   18a80:	lsl	x5, x4, x1
   18a84:	add	x3, x3, x4
   18a88:	ldr	x6, [x2, x3, lsl #3]
   18a8c:	tst	x5, x6
   18a90:	b.eq	18a9c <__sanitizer_cov_dump@@Base+0x1c1c>  // b.none
   18a94:	mov	x0, x4
   18a98:	b	18a40 <__sanitizer_cov_dump@@Base+0x1bc0>
   18a9c:	add	x1, x1, x1, lsl #6
   18aa0:	sub	x20, x0, #0x1
   18aa4:	add	x3, x23, #0x8
   18aa8:	stp	x27, x28, [sp, #64]
   18aac:	add	x19, x24, x1, lsl #3
   18ab0:	add	x28, x1, #0x1
   18ab4:	mov	x27, #0x0                   	// #0
   18ab8:	stp	x21, x22, [sp, #16]
   18abc:	mov	x21, #0x0                   	// #0
   18ac0:	mov	x22, #0x0                   	// #0
   18ac4:	stp	x25, x26, [sp, #48]
   18ac8:	mov	x25, #0x0                   	// #0
   18acc:	mov	x26, #0x1                   	// #1
   18ad0:	cbnz	x20, 18b14 <__sanitizer_cov_dump@@Base+0x1c94>
   18ad4:	mov	x1, #0x1                   	// #1
   18ad8:	cbnz	x22, 18b58 <__sanitizer_cov_dump@@Base+0x1cd8>
   18adc:	cbnz	x25, 18ca8 <__sanitizer_cov_dump@@Base+0x1e28>
   18ae0:	ldr	x22, [x19]
   18ae4:	cbz	x22, 18ca8 <__sanitizer_cov_dump@@Base+0x1e28>
   18ae8:	cbz	x21, 18be4 <__sanitizer_cov_dump@@Base+0x1d64>
   18aec:	mov	x22, #0x0                   	// #0
   18af0:	rbit	x0, x21
   18af4:	clz	x0, x0
   18af8:	lsl	x0, x1, x0
   18afc:	bic	x21, x21, x0
   18b00:	orr	x0, x22, x21
   18b04:	cbnz	x0, 18ad8 <__sanitizer_cov_dump@@Base+0x1c58>
   18b08:	add	x25, x25, #0x1
   18b0c:	mov	x21, #0x0                   	// #0
   18b10:	b	18adc <__sanitizer_cov_dump@@Base+0x1c5c>
   18b14:	cbnz	x22, 18b74 <__sanitizer_cov_dump@@Base+0x1cf4>
   18b18:	cbnz	x25, 18ca8 <__sanitizer_cov_dump@@Base+0x1e28>
   18b1c:	ldr	x22, [x19]
   18b20:	cbz	x22, 18ca8 <__sanitizer_cov_dump@@Base+0x1e28>
   18b24:	cbz	x21, 18c34 <__sanitizer_cov_dump@@Base+0x1db4>
   18b28:	mov	x1, x27
   18b2c:	mov	x22, #0x0                   	// #0
   18b30:	rbit	x0, x21
   18b34:	clz	x0, x0
   18b38:	lsl	x4, x26, x0
   18b3c:	bic	x21, x21, x4
   18b40:	orr	x4, x21, x22
   18b44:	cbnz	x4, 18b8c <__sanitizer_cov_dump@@Base+0x1d0c>
   18b48:	add	x25, x25, #0x1
   18b4c:	mov	x22, #0x0                   	// #0
   18b50:	mov	x21, #0x0                   	// #0
   18b54:	b	18b8c <__sanitizer_cov_dump@@Base+0x1d0c>
   18b58:	cbz	x21, 18be4 <__sanitizer_cov_dump@@Base+0x1d64>
   18b5c:	rbit	x0, x21
   18b60:	clz	x0, x0
   18b64:	lsl	x0, x1, x0
   18b68:	bic	x21, x21, x0
   18b6c:	cbz	x22, 18adc <__sanitizer_cov_dump@@Base+0x1c5c>
   18b70:	b	18b58 <__sanitizer_cov_dump@@Base+0x1cd8>
   18b74:	cbz	x21, 18c34 <__sanitizer_cov_dump@@Base+0x1db4>
   18b78:	rbit	x0, x21
   18b7c:	add	x1, x27, x25, lsl #6
   18b80:	clz	x0, x0
   18b84:	lsl	x4, x26, x0
   18b88:	bic	x21, x21, x4
   18b8c:	sxtw	x0, w0
   18b90:	add	x1, x0, x1, lsl #6
   18b94:	str	x1, [x23, #8]
   18b98:	cmp	x1, #0x1, lsl #12
   18b9c:	b.hi	18c68 <__sanitizer_cov_dump@@Base+0x1de8>  // b.pmore
   18ba0:	lsr	x0, x1, #12
   18ba4:	ubfx	x4, x1, #6, #6
   18ba8:	lsl	x6, x26, x4
   18bac:	ldr	x5, [x2, x0, lsl #3]
   18bb0:	tst	x6, x5
   18bb4:	b.eq	18c08 <__sanitizer_cov_dump@@Base+0x1d88>  // b.none
   18bb8:	add	x0, x4, x0, lsl #6
   18bbc:	lsl	x4, x26, x1
   18bc0:	add	x0, x0, #0x1
   18bc4:	ldr	x5, [x2, x0, lsl #3]
   18bc8:	tst	x4, x5
   18bcc:	b.eq	18c08 <__sanitizer_cov_dump@@Base+0x1d88>  // b.none
   18bd0:	mov	x0, #0x2                   	// #2
   18bd4:	ldp	x21, x22, [sp, #16]
   18bd8:	ldp	x25, x26, [sp, #48]
   18bdc:	ldp	x27, x28, [sp, #64]
   18be0:	b	18a40 <__sanitizer_cov_dump@@Base+0x1bc0>
   18be4:	rbit	x2, x22
   18be8:	add	x0, x28, x25, lsl #6
   18bec:	clz	x2, x2
   18bf0:	add	x0, x0, x2
   18bf4:	ldr	x21, [x24, x0, lsl #3]
   18bf8:	cbz	x21, 18c88 <__sanitizer_cov_dump@@Base+0x1e08>
   18bfc:	lsl	x2, x1, x2
   18c00:	bic	x22, x22, x2
   18c04:	b	18af0 <__sanitizer_cov_dump@@Base+0x1c70>
   18c08:	mov	x4, x20
   18c0c:	mov	x0, x24
   18c10:	stp	x2, x3, [sp, #96]
   18c14:	bl	18510 <__sanitizer_cov_dump@@Base+0x1690>
   18c18:	ldp	x2, x3, [sp, #96]
   18c1c:	cbz	x0, 18ad0 <__sanitizer_cov_dump@@Base+0x1c50>
   18c20:	add	x0, x0, #0x1
   18c24:	ldp	x21, x22, [sp, #16]
   18c28:	ldp	x25, x26, [sp, #48]
   18c2c:	ldp	x27, x28, [sp, #64]
   18c30:	b	18a40 <__sanitizer_cov_dump@@Base+0x1bc0>
   18c34:	rbit	x27, x22
   18c38:	clz	x27, x27
   18c3c:	add	x1, x27, x25, lsl #6
   18c40:	mov	x0, x27
   18c44:	add	x4, x1, x28
   18c48:	ldr	x21, [x24, x4, lsl #3]
   18c4c:	cbz	x21, 18c88 <__sanitizer_cov_dump@@Base+0x1e08>
   18c50:	lsl	x0, x26, x0
   18c54:	bic	x22, x22, x0
   18c58:	b	18b30 <__sanitizer_cov_dump@@Base+0x1cb0>
   18c5c:	stp	x21, x22, [sp, #16]
   18c60:	stp	x25, x26, [sp, #48]
   18c64:	stp	x27, x28, [sp, #64]
   18c68:	mov	x3, x1
   18c6c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18c70:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18c74:	add	x2, x2, #0xc38
   18c78:	add	x0, x0, #0xbf8
   18c7c:	mov	x4, #0x1000                	// #4096
   18c80:	mov	w1, #0x143                 	// #323
   18c84:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18c88:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18c8c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18c90:	add	x2, x2, #0xbd8
   18c94:	add	x0, x0, #0xbf8
   18c98:	mov	x4, #0x0                   	// #0
   18c9c:	mov	x3, #0x0                   	// #0
   18ca0:	mov	w1, #0x132                 	// #306
   18ca4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18ca8:	mov	x0, #0x0                   	// #0
   18cac:	ldp	x21, x22, [sp, #16]
   18cb0:	ldp	x25, x26, [sp, #48]
   18cb4:	ldp	x27, x28, [sp, #64]
   18cb8:	b	18a40 <__sanitizer_cov_dump@@Base+0x1bc0>
   18cbc:	nop
   18cc0:	mov	x2, x1
   18cc4:	mov	x4, #0x0                   	// #0
   18cc8:	mov	x1, x0
   18ccc:	mov	x3, #0x0                   	// #0
   18cd0:	mov	w0, #0x2                   	// #2
   18cd4:	b	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   18cd8:	stp	x19, x30, [sp, #-16]!
   18cdc:	mov	x19, x0
   18ce0:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   18ce4:	mov	x2, x0
   18ce8:	mov	x1, x19
   18cec:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
   18cf0:	ldp	x19, x30, [sp], #16
   18cf4:	add	x0, x0, #0x3d0
   18cf8:	b	20d58 <__sanitizer_set_report_fd@@Base+0x7490>
   18cfc:	nop
   18d00:	stp	x19, x20, [sp, #-32]!
   18d04:	mov	x19, x0
   18d08:	ldr	x0, [x0]
   18d0c:	str	x30, [sp, #24]
   18d10:	ldrb	w3, [x0]
   18d14:	and	x3, x3, #0xff
   18d18:	cmp	x3, #0x1
   18d1c:	b.ne	18e20 <__sanitizer_cov_dump@@Base+0x1fa0>  // b.any
   18d20:	ldr	w0, [x19, #8]
   18d24:	sub	w0, w0, #0x1
   18d28:	cmp	w0, #0x1
   18d2c:	b.ls	18dd8 <__sanitizer_cov_dump@@Base+0x1f58>  // b.plast
   18d30:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   18d34:	mov	x20, x0
   18d38:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18d3c:	ldr	x1, [x1, #3560]
   18d40:	ldr	x0, [x1]
   18d44:	cmp	x0, x20
   18d48:	b.eq	18de4 <__sanitizer_cov_dump@@Base+0x1f64>  // b.none
   18d4c:	ldr	w0, [x19, #8]
   18d50:	cmn	w0, #0x1
   18d54:	b.eq	18dfc <__sanitizer_cov_dump@@Base+0x1f7c>  // b.none
   18d58:	ldr	x1, [x19, #8208]
   18d5c:	cmp	x1, x20
   18d60:	b.eq	18dd8 <__sanitizer_cov_dump@@Base+0x1f58>  // b.none
   18d64:	str	x21, [sp, #16]
   18d68:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   18d6c:	bl	15da0 <__sancov_default_options@@Base+0x32d0>
   18d70:	cmp	x0, #0x0
   18d74:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18d78:	mov	x4, x0
   18d7c:	mov	x0, #0x100c                	// #4108
   18d80:	add	x21, x19, x0
   18d84:	ldr	x0, [x1, #4040]
   18d88:	cset	w1, ne  // ne = any
   18d8c:	add	x3, x19, #0xc
   18d90:	ldrb	w0, [x0, #48]
   18d94:	tst	w1, w0
   18d98:	b.ne	18e04 <__sanitizer_cov_dump@@Base+0x1f84>  // b.any
   18d9c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18da0:	mov	x4, x20
   18da4:	add	x2, x2, #0xf68
   18da8:	mov	x0, x21
   18dac:	mov	x1, #0x1000                	// #4096
   18db0:	bl	22970 <OnPrint@@Base+0x8>
   18db4:	mov	x0, x21
   18db8:	mov	x2, #0x0                   	// #0
   18dbc:	mov	w1, #0x1                   	// #1
   18dc0:	bl	207c8 <__sanitizer_set_report_fd@@Base+0x6f00>
   18dc4:	str	w0, [x19, #8]
   18dc8:	cmn	w0, #0x1
   18dcc:	b.eq	18e40 <__sanitizer_cov_dump@@Base+0x1fc0>  // b.none
   18dd0:	ldr	x21, [sp, #16]
   18dd4:	str	x20, [x19, #8208]
   18dd8:	ldr	x30, [sp, #24]
   18ddc:	ldp	x19, x20, [sp], #32
   18de0:	ret
   18de4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18de8:	ldr	x0, [x0, #3544]
   18dec:	ldr	x20, [x0]
   18df0:	ldr	w0, [x19, #8]
   18df4:	cmn	w0, #0x1
   18df8:	b.ne	18d58 <__sanitizer_cov_dump@@Base+0x1ed8>  // b.any
   18dfc:	str	x21, [sp, #16]
   18e00:	b	18d6c <__sanitizer_cov_dump@@Base+0x1eec>
   18e04:	mov	x5, x20
   18e08:	mov	x0, x21
   18e0c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18e10:	mov	x1, #0x1000                	// #4096
   18e14:	add	x2, x2, #0xf58
   18e18:	bl	22970 <OnPrint@@Base+0x8>
   18e1c:	b	18db4 <__sanitizer_cov_dump@@Base+0x1f34>
   18e20:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   18e24:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   18e28:	add	x2, x2, #0x8f8
   18e2c:	add	x0, x0, #0x930
   18e30:	mov	x4, #0x1                   	// #1
   18e34:	mov	w1, #0x2a                  	// #42
   18e38:	str	x21, [sp, #16]
   18e3c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18e40:	adrp	x19, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18e44:	add	x19, x19, #0xf70
   18e48:	mov	x0, x19
   18e4c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   18e50:	mov	x1, x19
   18e54:	mov	x2, x0
   18e58:	mov	x4, #0x0                   	// #0
   18e5c:	mov	x3, #0x0                   	// #0
   18e60:	mov	w0, #0x2                   	// #2
   18e64:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   18e68:	mov	x0, x21
   18e6c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   18e70:	mov	x1, x21
   18e74:	mov	x2, x0
   18e78:	mov	x4, #0x0                   	// #0
   18e7c:	mov	x3, #0x0                   	// #0
   18e80:	mov	w0, #0x2                   	// #2
   18e84:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   18e88:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   18e8c:	nop
   18e90:	cbz	x1, 18f84 <__sanitizer_cov_dump@@Base+0x2104>
   18e94:	sub	sp, sp, #0x30
   18e98:	stp	x19, x20, [sp, #16]
   18e9c:	mov	x19, x0
   18ea0:	mov	x20, x1
   18ea4:	mov	x0, x1
   18ea8:	stp	x21, x30, [sp, #32]
   18eac:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   18eb0:	cmp	x0, #0xf9c
   18eb4:	b.hi	18fa4 <__sanitizer_cov_dump@@Base+0x2124>  // b.pmore
   18eb8:	ldr	x21, [x19]
   18ebc:	mov	w1, #0x1                   	// #1
   18ec0:	ldxrb	w0, [x21]
   18ec4:	stxrb	w2, w1, [x21]
   18ec8:	cbnz	w2, 18ec0 <__sanitizer_cov_dump@@Base+0x2040>
   18ecc:	dmb	ish
   18ed0:	tst	w0, #0xff
   18ed4:	b.eq	18ee0 <__sanitizer_cov_dump@@Base+0x2060>  // b.none
   18ed8:	mov	x0, x21
   18edc:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   18ee0:	ldr	w0, [x19, #8]
   18ee4:	sub	w1, w0, #0x1
   18ee8:	cmp	w1, #0x1
   18eec:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   18ef0:	b.ne	18f30 <__sanitizer_cov_dump@@Base+0x20b0>  // b.any
   18ef4:	mov	w0, #0xffffffff            	// #-1
   18ef8:	str	w0, [x19, #8]
   18efc:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18f00:	mov	x0, x20
   18f04:	add	x1, x1, #0xfc0
   18f08:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   18f0c:	cbnz	w0, 18f50 <__sanitizer_cov_dump@@Base+0x20d0>
   18f10:	mov	w0, #0x1                   	// #1
   18f14:	str	w0, [x19, #8]
   18f18:	dmb	ish
   18f1c:	strb	wzr, [x21]
   18f20:	ldp	x19, x20, [sp, #16]
   18f24:	ldp	x21, x30, [sp, #32]
   18f28:	add	sp, sp, #0x30
   18f2c:	ret
   18f30:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   18f34:	mov	w0, #0xffffffff            	// #-1
   18f38:	str	w0, [x19, #8]
   18f3c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18f40:	mov	x0, x20
   18f44:	add	x1, x1, #0xfc0
   18f48:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   18f4c:	cbz	w0, 18f10 <__sanitizer_cov_dump@@Base+0x2090>
   18f50:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18f54:	mov	x0, x20
   18f58:	add	x1, x1, #0xfc8
   18f5c:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   18f60:	cbnz	w0, 18f88 <__sanitizer_cov_dump@@Base+0x2108>
   18f64:	mov	w0, #0x2                   	// #2
   18f68:	str	w0, [x19, #8]
   18f6c:	dmb	ish
   18f70:	strb	wzr, [x21]
   18f74:	ldp	x19, x20, [sp, #16]
   18f78:	ldp	x21, x30, [sp, #32]
   18f7c:	add	sp, sp, #0x30
   18f80:	ret
   18f84:	ret
   18f88:	mov	x3, x20
   18f8c:	add	x0, x19, #0xc
   18f90:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   18f94:	mov	x1, #0x1000                	// #4096
   18f98:	add	x2, x2, #0xdb8
   18f9c:	bl	22970 <OnPrint@@Base+0x8>
   18fa0:	b	18f18 <__sanitizer_cov_dump@@Base+0x2098>
   18fa4:	ldrb	w7, [x20, #6]
   18fa8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   18fac:	ldrb	w6, [x20, #5]
   18fb0:	add	x0, x0, #0xf90
   18fb4:	ldrb	w5, [x20, #4]
   18fb8:	ldrb	w4, [x20, #3]
   18fbc:	ldrb	w3, [x20, #2]
   18fc0:	ldrb	w2, [x20, #1]
   18fc4:	ldrb	w1, [x20]
   18fc8:	ldrb	w8, [x20, #7]
   18fcc:	str	w8, [sp]
   18fd0:	bl	22d00 <OnPrint@@Base+0x398>
   18fd4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   18fd8:	stp	x19, x20, [sp, #-128]!
   18fdc:	mov	w19, #0x1                   	// #1
   18fe0:	str	x30, [sp, #80]
   18fe4:	str	xzr, [x1]
   18fe8:	str	xzr, [x2]
   18fec:	str	xzr, [x3]
   18ff0:	cbz	x4, 190fc <__sanitizer_cov_dump@@Base+0x227c>
   18ff4:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18ff8:	stp	x21, x22, [sp, #16]
   18ffc:	mov	x21, x1
   19000:	ldr	x19, [x19, #4000]
   19004:	stp	x23, x24, [sp, #32]
   19008:	mov	x22, x4
   1900c:	stp	x25, x26, [sp, #48]
   19010:	mov	x23, x5
   19014:	mov	x26, x0
   19018:	ldr	x20, [x19]
   1901c:	stp	x27, x28, [sp, #64]
   19020:	mov	x25, x2
   19024:	mov	x28, x3
   19028:	mov	x0, #0x0                   	// #0
   1902c:	cbz	x20, 19138 <__sanitizer_cov_dump@@Base+0x22b8>
   19030:	cmp	x20, x22
   19034:	add	x24, sp, #0x78
   19038:	csel	x20, x20, x22, ls  // ls = plast
   1903c:	adrp	x27, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19040:	add	x1, x27, #0xfd0
   19044:	str	x1, [sp, #104]
   19048:	ldr	x1, [x25]
   1904c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19050:	ldr	x1, [sp, #104]
   19054:	mov	w2, #0x0                   	// #0
   19058:	mov	x0, x20
   1905c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   19060:	str	x0, [x21]
   19064:	str	x20, [x25]
   19068:	mov	x2, x23
   1906c:	mov	x0, x26
   19070:	mov	w1, #0x0                   	// #0
   19074:	bl	207c8 <__sanitizer_set_report_fd@@Base+0x6f00>
   19078:	mov	w27, w0
   1907c:	cmn	w0, #0x1
   19080:	b.eq	1914c <__sanitizer_cov_dump@@Base+0x22cc>  // b.none
   19084:	str	xzr, [x28]
   19088:	mov	x1, #0x0                   	// #0
   1908c:	cbnz	x20, 1909c <__sanitizer_cov_dump@@Base+0x221c>
   19090:	b	1910c <__sanitizer_cov_dump@@Base+0x228c>
   19094:	cmp	x1, x20
   19098:	b.cs	1910c <__sanitizer_cov_dump@@Base+0x228c>  // b.hs, b.nlast
   1909c:	ldr	x5, [x21]
   190a0:	sub	x2, x20, x1
   190a4:	mov	x4, x23
   190a8:	mov	x3, x24
   190ac:	mov	w0, w27
   190b0:	add	x1, x5, x1
   190b4:	bl	20818 <__sanitizer_set_report_fd@@Base+0x6f50>
   190b8:	ands	w19, w0, #0xff
   190bc:	b.eq	19128 <__sanitizer_cov_dump@@Base+0x22a8>  // b.none
   190c0:	ldr	x1, [x28]
   190c4:	ldr	x2, [sp, #120]
   190c8:	add	x1, x2, x1
   190cc:	str	x1, [x28]
   190d0:	cmp	x1, x22
   190d4:	cset	w19, eq  // eq = none
   190d8:	cmp	x2, #0x0
   190dc:	csinc	w19, w19, wzr, ne  // ne = any
   190e0:	cbz	w19, 19094 <__sanitizer_cov_dump@@Base+0x2214>
   190e4:	mov	w0, w27
   190e8:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   190ec:	ldp	x21, x22, [sp, #16]
   190f0:	ldp	x23, x24, [sp, #32]
   190f4:	ldp	x25, x26, [sp, #48]
   190f8:	ldp	x27, x28, [sp, #64]
   190fc:	mov	w0, w19
   19100:	ldr	x30, [sp, #80]
   19104:	ldp	x19, x20, [sp], #128
   19108:	ret
   1910c:	mov	w0, w27
   19110:	lsl	x20, x20, #1
   19114:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   19118:	cmp	x20, x22
   1911c:	csel	x20, x20, x22, ls  // ls = plast
   19120:	ldr	x0, [x21]
   19124:	b	19048 <__sanitizer_cov_dump@@Base+0x21c8>
   19128:	ldr	x0, [x21]
   1912c:	ldr	x1, [x25]
   19130:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19134:	b	190e4 <__sanitizer_cov_dump@@Base+0x2264>
   19138:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1913c:	mov	x20, x0
   19140:	ldr	x0, [x21]
   19144:	str	x20, [x19]
   19148:	b	19030 <__sanitizer_cov_dump@@Base+0x21b0>
   1914c:	ldr	x0, [x21]
   19150:	mov	w19, #0x0                   	// #0
   19154:	ldr	x1, [x25]
   19158:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1915c:	ldp	x21, x22, [sp, #16]
   19160:	ldp	x23, x24, [sp, #32]
   19164:	ldp	x25, x26, [sp, #48]
   19168:	ldp	x27, x28, [sp, #64]
   1916c:	b	190fc <__sanitizer_cov_dump@@Base+0x227c>
   19170:	stp	x19, x20, [sp, #-144]!
   19174:	stp	x27, x28, [sp, #64]
   19178:	str	x30, [sp, #80]
   1917c:	str	xzr, [x1, #16]
   19180:	cbz	x2, 192fc <__sanitizer_cov_dump@@Base+0x247c>
   19184:	stp	x25, x26, [sp, #48]
   19188:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1918c:	mov	x20, x1
   19190:	stp	x23, x24, [sp, #32]
   19194:	mov	x19, x0
   19198:	ldr	x24, [x25, #4000]
   1919c:	stp	x21, x22, [sp, #16]
   191a0:	mov	x21, x2
   191a4:	mov	x22, x3
   191a8:	ldr	x23, [x24]
   191ac:	cbz	x23, 192b0 <__sanitizer_cov_dump@@Base+0x2430>
   191b0:	mov	x0, x19
   191b4:	mov	x2, x22
   191b8:	mov	w1, #0x0                   	// #0
   191bc:	bl	207c8 <__sanitizer_set_report_fd@@Base+0x6f00>
   191c0:	mov	w27, w0
   191c4:	cmn	w0, #0x1
   191c8:	b.eq	192d8 <__sanitizer_cov_dump@@Base+0x2458>  // b.none
   191cc:	ldr	x0, [x25, #4000]
   191d0:	str	x0, [sp, #104]
   191d4:	ldr	x3, [x20, #16]
   191d8:	adrp	x26, 46000 <__asan_backtrace_release_view@@Base+0x48>
   191dc:	mov	x19, #0x0                   	// #0
   191e0:	add	x24, sp, #0x88
   191e4:	add	x26, x26, #0x700
   191e8:	cmp	x3, x19
   191ec:	b.ls	19240 <__sanitizer_cov_dump@@Base+0x23c0>  // b.plast
   191f0:	cmp	x21, x3
   191f4:	b.cc	19294 <__sanitizer_cov_dump@@Base+0x2414>  // b.lo, b.ul, b.last
   191f8:	ldr	x1, [x20]
   191fc:	sub	x2, x3, x19
   19200:	mov	x4, x22
   19204:	mov	x3, x24
   19208:	mov	w0, w27
   1920c:	add	x1, x1, x19
   19210:	bl	20818 <__sanitizer_set_report_fd@@Base+0x6f50>
   19214:	ands	w28, w0, #0xff
   19218:	b.eq	193f0 <__sanitizer_cov_dump@@Base+0x2570>  // b.none
   1921c:	ldr	x1, [sp, #136]
   19220:	add	x3, x1, x19
   19224:	cbz	x1, 19394 <__sanitizer_cov_dump@@Base+0x2514>
   19228:	cmp	x21, x3
   1922c:	b.ls	19398 <__sanitizer_cov_dump@@Base+0x2518>  // b.plast
   19230:	mov	x19, x3
   19234:	ldr	x3, [x20, #16]
   19238:	cmp	x3, x19
   1923c:	b.hi	191f0 <__sanitizer_cov_dump@@Base+0x2370>  // b.pmore
   19240:	lsl	x28, x19, #1
   19244:	cmp	x28, x23
   19248:	csel	x28, x28, x23, cs  // cs = hs, nlast
   1924c:	cmp	x28, x21
   19250:	csel	x28, x28, x21, ls  // ls = plast
   19254:	cmp	x28, x3
   19258:	b.ls	1927c <__sanitizer_cov_dump@@Base+0x23fc>  // b.plast
   1925c:	ldr	x0, [x20, #8]
   19260:	cmp	x28, x0
   19264:	b.hi	19334 <__sanitizer_cov_dump@@Base+0x24b4>  // b.pmore
   19268:	ldr	x4, [x20]
   1926c:	add	x0, x4, x3
   19270:	sub	x2, x28, x3
   19274:	mov	w1, #0x0                   	// #0
   19278:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1927c:	str	x28, [x20, #16]
   19280:	cmp	x28, x19
   19284:	b.ls	19314 <__sanitizer_cov_dump@@Base+0x2494>  // b.plast
   19288:	mov	x3, x28
   1928c:	cmp	x21, x3
   19290:	b.cs	191f8 <__sanitizer_cov_dump@@Base+0x2378>  // b.hs, b.nlast
   19294:	adrp	x2, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19298:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1929c:	mov	x4, x21
   192a0:	add	x2, x2, #0x68
   192a4:	add	x0, x0, #0x28
   192a8:	mov	w1, #0x99                  	// #153
   192ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   192b0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   192b4:	mov	x23, x0
   192b8:	mov	x2, x22
   192bc:	mov	w1, #0x0                   	// #0
   192c0:	str	x0, [x24]
   192c4:	mov	x0, x19
   192c8:	bl	207c8 <__sanitizer_set_report_fd@@Base+0x6f00>
   192cc:	mov	w27, w0
   192d0:	cmn	w0, #0x1
   192d4:	b.ne	191cc <__sanitizer_cov_dump@@Base+0x234c>  // b.any
   192d8:	mov	w28, #0x0                   	// #0
   192dc:	mov	w0, w28
   192e0:	ldp	x21, x22, [sp, #16]
   192e4:	ldp	x23, x24, [sp, #32]
   192e8:	ldp	x25, x26, [sp, #48]
   192ec:	ldp	x27, x28, [sp, #64]
   192f0:	ldr	x30, [sp, #80]
   192f4:	ldp	x19, x20, [sp], #144
   192f8:	ret
   192fc:	mov	w28, #0x1                   	// #1
   19300:	mov	w0, w28
   19304:	ldp	x27, x28, [sp, #64]
   19308:	ldr	x30, [sp, #80]
   1930c:	ldp	x19, x20, [sp], #144
   19310:	ret
   19314:	adrp	x2, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19318:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1931c:	mov	x4, x28
   19320:	mov	x3, x19
   19324:	add	x2, x2, #0x8
   19328:	add	x0, x0, #0x28
   1932c:	mov	w1, #0x98                  	// #152
   19330:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19334:	ldr	x0, [sp, #104]
   19338:	ldr	x0, [x0]
   1933c:	cbz	x0, 19408 <__sanitizer_cov_dump@@Base+0x2588>
   19340:	sub	x1, x0, #0x1
   19344:	tst	x1, x0
   19348:	b.ne	194a0 <__sanitizer_cov_dump@@Base+0x2620>  // b.any
   1934c:	add	x1, x28, x1
   19350:	neg	x0, x0
   19354:	and	x6, x1, x0
   19358:	mov	w2, #0x0                   	// #0
   1935c:	mov	x0, x6
   19360:	mov	x1, x26
   19364:	str	x6, [sp, #120]
   19368:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1936c:	str	x0, [sp, #112]
   19370:	ldr	x1, [x20]
   19374:	ldr	x2, [x20, #16]
   19378:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1937c:	ldp	x0, x1, [x20]
   19380:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19384:	ldp	x4, x6, [sp, #112]
   19388:	stp	x4, x6, [x20]
   1938c:	ldr	x3, [x20, #16]
   19390:	b	1926c <__sanitizer_cov_dump@@Base+0x23ec>
   19394:	mov	x3, x19
   19398:	mov	w0, w27
   1939c:	str	x3, [sp, #104]
   193a0:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   193a4:	ldr	x2, [x20, #16]
   193a8:	ldr	x3, [sp, #104]
   193ac:	cmp	x3, x2
   193b0:	b.ls	193dc <__sanitizer_cov_dump@@Base+0x255c>  // b.plast
   193b4:	ldr	x0, [x20, #8]
   193b8:	cmp	x3, x0
   193bc:	b.hi	19418 <__sanitizer_cov_dump@@Base+0x2598>  // b.pmore
   193c0:	ldr	x19, [x20]
   193c4:	add	x0, x19, x2
   193c8:	mov	w1, #0x0                   	// #0
   193cc:	sub	x2, x3, x2
   193d0:	str	x3, [sp, #104]
   193d4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   193d8:	ldr	x3, [sp, #104]
   193dc:	ldp	x21, x22, [sp, #16]
   193e0:	ldp	x23, x24, [sp, #32]
   193e4:	ldp	x25, x26, [sp, #48]
   193e8:	str	x3, [x20, #16]
   193ec:	b	19300 <__sanitizer_cov_dump@@Base+0x2480>
   193f0:	mov	w0, w27
   193f4:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   193f8:	ldp	x21, x22, [sp, #16]
   193fc:	ldp	x23, x24, [sp, #32]
   19400:	ldp	x25, x26, [sp, #48]
   19404:	b	19300 <__sanitizer_cov_dump@@Base+0x2480>
   19408:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1940c:	ldr	x1, [sp, #104]
   19410:	str	x0, [x1]
   19414:	b	19340 <__sanitizer_cov_dump@@Base+0x24c0>
   19418:	cbz	x3, 19480 <__sanitizer_cov_dump@@Base+0x2600>
   1941c:	ldr	x25, [x25, #4000]
   19420:	ldr	x0, [x25]
   19424:	cbz	x0, 194c8 <__sanitizer_cov_dump@@Base+0x2648>
   19428:	sub	x1, x0, #0x1
   1942c:	tst	x0, x1
   19430:	b.ne	194a0 <__sanitizer_cov_dump@@Base+0x2620>  // b.any
   19434:	add	x1, x3, x1
   19438:	neg	x0, x0
   1943c:	and	x21, x1, x0
   19440:	mov	w2, #0x0                   	// #0
   19444:	mov	x0, x21
   19448:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1944c:	add	x1, x1, #0x700
   19450:	str	x3, [sp, #104]
   19454:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   19458:	mov	x19, x0
   1945c:	ldr	x1, [x20]
   19460:	ldr	x2, [x20, #16]
   19464:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   19468:	ldp	x0, x1, [x20]
   1946c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19470:	stp	x19, x21, [x20]
   19474:	ldr	x2, [x20, #16]
   19478:	ldr	x3, [sp, #104]
   1947c:	b	193c4 <__sanitizer_cov_dump@@Base+0x2544>
   19480:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19484:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   19488:	add	x2, x2, #0xfe8
   1948c:	add	x0, x0, #0x578
   19490:	mov	x4, #0x0                   	// #0
   19494:	mov	x3, #0x0                   	// #0
   19498:	mov	w1, #0x1fc                 	// #508
   1949c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   194a0:	adrp	x19, 46000 <__asan_backtrace_release_view@@Base+0x48>
   194a4:	add	x19, x19, #0x6e8
   194a8:	mov	x0, x19
   194ac:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   194b0:	mov	x1, x19
   194b4:	mov	x2, x0
   194b8:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
   194bc:	add	x0, x0, #0x3d0
   194c0:	bl	20d58 <__sanitizer_set_report_fd@@Base+0x7490>
   194c4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   194c8:	str	x3, [sp, #104]
   194cc:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   194d0:	str	x0, [x25]
   194d4:	ldr	x3, [sp, #104]
   194d8:	b	19428 <__sanitizer_cov_dump@@Base+0x25a8>
   194dc:	nop
   194e0:	stp	x19, x20, [sp, #-80]!
   194e4:	stp	x23, x24, [sp, #32]
   194e8:	mov	x23, x0
   194ec:	str	x30, [sp, #72]
   194f0:	bl	1dbe8 <__sanitizer_set_report_fd@@Base+0x4320>
   194f4:	tst	w0, #0xff
   194f8:	b.eq	19510 <__sanitizer_cov_dump@@Base+0x2690>  // b.none
   194fc:	mov	x0, x23
   19500:	ldp	x23, x24, [sp, #32]
   19504:	ldr	x30, [sp, #72]
   19508:	ldp	x19, x20, [sp], #80
   1950c:	b	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   19510:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   19514:	add	x0, x0, #0x620
   19518:	stp	x21, x22, [sp, #16]
   1951c:	bl	1dcb8 <__sanitizer_set_report_fd@@Base+0x43f0>
   19520:	mov	x21, x0
   19524:	cbz	x0, 19660 <__sanitizer_cov_dump@@Base+0x27e0>
   19528:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1952c:	mov	x0, x23
   19530:	stp	x25, x26, [sp, #48]
   19534:	str	x27, [sp, #64]
   19538:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   1953c:	ldr	x20, [x19, #4000]
   19540:	mov	x24, x0
   19544:	ldr	x0, [x20]
   19548:	cbz	x0, 19678 <__sanitizer_cov_dump@@Base+0x27f8>
   1954c:	sub	x1, x0, #0x1
   19550:	tst	x1, x0
   19554:	b.ne	1973c <__sanitizer_cov_dump@@Base+0x28bc>  // b.any
   19558:	add	x25, x0, #0xfff
   1955c:	neg	x0, x0
   19560:	and	x25, x25, x0
   19564:	mov	w2, #0x0                   	// #0
   19568:	mov	x0, x25
   1956c:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
   19570:	add	x1, x20, #0x700
   19574:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   19578:	mov	x2, #0x0                   	// #0
   1957c:	mov	x1, #0x0                   	// #0
   19580:	mov	x22, x0
   19584:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   19588:	mov	x1, #0x0                   	// #0
   1958c:	mov	x0, #0x0                   	// #0
   19590:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19594:	cmp	x25, #0xfff
   19598:	b.ls	196e0 <__sanitizer_cov_dump@@Base+0x2860>  // b.plast
   1959c:	mov	x0, x22
   195a0:	mov	w26, #0x2f                  	// #47
   195a4:	mov	x2, #0x1000                	// #4096
   195a8:	mov	w1, #0x0                   	// #0
   195ac:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   195b0:	b	195c0 <__sanitizer_cov_dump@@Base+0x2740>
   195b4:	ldrb	w0, [x19]
   195b8:	cbz	w0, 19648 <__sanitizer_cov_dump@@Base+0x27c8>
   195bc:	add	x21, x19, #0x1
   195c0:	mov	x0, x21
   195c4:	mov	w1, #0x3a                  	// #58
   195c8:	bl	1be10 <__sanitizer_set_report_fd@@Base+0x2548>
   195cc:	sub	x20, x0, x21
   195d0:	add	x27, x24, x20
   195d4:	mov	x19, x0
   195d8:	add	x0, x27, #0x2
   195dc:	cmp	x0, #0x1, lsl #12
   195e0:	b.hi	195b4 <__sanitizer_cov_dump@@Base+0x2734>  // b.pmore
   195e4:	mov	x1, x21
   195e8:	mov	x2, x20
   195ec:	mov	x0, x22
   195f0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   195f4:	cmp	x20, #0xfff
   195f8:	b.hi	19684 <__sanitizer_cov_dump@@Base+0x2804>  // b.pmore
   195fc:	strb	w26, [x22, x20]
   19600:	add	x4, x20, #0x1
   19604:	b.eq	196a4 <__sanitizer_cov_dump@@Base+0x2824>  // b.none
   19608:	add	x0, x22, x4
   1960c:	mov	x2, x24
   19610:	mov	x1, x23
   19614:	add	x27, x27, #0x1
   19618:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1961c:	cmp	x27, #0xfff
   19620:	b.hi	196c0 <__sanitizer_cov_dump@@Base+0x2840>  // b.pmore
   19624:	strb	wzr, [x22, x27]
   19628:	mov	x0, x22
   1962c:	bl	1dbe8 <__sanitizer_set_report_fd@@Base+0x4320>
   19630:	tst	w0, #0xff
   19634:	b.eq	195b4 <__sanitizer_cov_dump@@Base+0x2734>  // b.none
   19638:	mov	x0, x22
   1963c:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   19640:	mov	x21, x0
   19644:	b	1964c <__sanitizer_cov_dump@@Base+0x27cc>
   19648:	mov	x21, #0x0                   	// #0
   1964c:	mov	x1, x25
   19650:	mov	x0, x22
   19654:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19658:	ldp	x25, x26, [sp, #48]
   1965c:	ldr	x27, [sp, #64]
   19660:	mov	x0, x21
   19664:	ldp	x21, x22, [sp, #16]
   19668:	ldp	x23, x24, [sp, #32]
   1966c:	ldr	x30, [sp, #72]
   19670:	ldp	x19, x20, [sp], #80
   19674:	ret
   19678:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1967c:	str	x0, [x20]
   19680:	b	1954c <__sanitizer_cov_dump@@Base+0x26cc>
   19684:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   19688:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1968c:	mov	x3, x20
   19690:	add	x2, x2, #0x560
   19694:	add	x0, x0, #0x578
   19698:	mov	x4, #0x1000                	// #4096
   1969c:	mov	w1, #0x1b6                 	// #438
   196a0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   196a4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   196a8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   196ac:	add	x2, x2, #0x560
   196b0:	add	x0, x0, #0x578
   196b4:	mov	x3, x4
   196b8:	mov	w1, #0x1b6                 	// #438
   196bc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   196c0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   196c4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   196c8:	add	x2, x2, #0x560
   196cc:	add	x0, x0, #0x578
   196d0:	mov	x4, #0x1000                	// #4096
   196d4:	mov	x3, #0xffffffffffffffff    	// #-1
   196d8:	mov	w1, #0x1b6                 	// #438
   196dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   196e0:	ldr	x19, [x19, #4000]
   196e4:	ldr	x0, [x19]
   196e8:	cbz	x0, 19764 <__sanitizer_cov_dump@@Base+0x28e4>
   196ec:	sub	x1, x0, #0x1
   196f0:	tst	x1, x0
   196f4:	b.ne	1973c <__sanitizer_cov_dump@@Base+0x28bc>  // b.any
   196f8:	add	x19, x0, #0xfff
   196fc:	neg	x0, x0
   19700:	and	x19, x19, x0
   19704:	add	x1, x20, #0x700
   19708:	mov	x0, x19
   1970c:	mov	w2, #0x0                   	// #0
   19710:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   19714:	mov	x20, x0
   19718:	mov	x2, #0x0                   	// #0
   1971c:	mov	x1, x22
   19720:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   19724:	mov	x1, x25
   19728:	mov	x0, x22
   1972c:	mov	x25, x19
   19730:	mov	x22, x20
   19734:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   19738:	b	1959c <__sanitizer_cov_dump@@Base+0x271c>
   1973c:	adrp	x19, 46000 <__asan_backtrace_release_view@@Base+0x48>
   19740:	add	x19, x19, #0x6e8
   19744:	mov	x0, x19
   19748:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   1974c:	mov	x1, x19
   19750:	mov	x2, x0
   19754:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
   19758:	add	x0, x0, #0x3d0
   1975c:	bl	20d58 <__sanitizer_set_report_fd@@Base+0x7490>
   19760:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   19764:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   19768:	str	x0, [x19]
   1976c:	b	196ec <__sanitizer_cov_dump@@Base+0x286c>

0000000000019770 <__sanitizer_set_report_path@@Base>:
   19770:	cbz	x0, 1986c <__sanitizer_set_report_path@@Base+0xfc>
   19774:	sub	sp, sp, #0x30
   19778:	stp	x19, x20, [sp, #16]
   1977c:	mov	x19, x0
   19780:	stp	x21, x30, [sp, #32]
   19784:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   19788:	cmp	x0, #0xf9c
   1978c:	b.hi	19890 <__sanitizer_set_report_path@@Base+0x120>  // b.pmore
   19790:	adrp	x20, 6d000 <_Unwind_Backtrace@GCC_3.3>
   19794:	mov	w1, #0x1                   	// #1
   19798:	ldr	x21, [x20, #976]
   1979c:	ldxrb	w0, [x21]
   197a0:	stxrb	w2, w1, [x21]
   197a4:	cbnz	w2, 1979c <__sanitizer_set_report_path@@Base+0x2c>
   197a8:	dmb	ish
   197ac:	tst	w0, #0xff
   197b0:	b.eq	197bc <__sanitizer_set_report_path@@Base+0x4c>  // b.none
   197b4:	mov	x0, x21
   197b8:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   197bc:	add	x0, x20, #0x3d0
   197c0:	ldr	w0, [x0, #8]
   197c4:	sub	w1, w0, #0x1
   197c8:	cmp	w1, #0x1
   197cc:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   197d0:	b.ne	19814 <__sanitizer_set_report_path@@Base+0xa4>  // b.any
   197d4:	add	x20, x20, #0x3d0
   197d8:	mov	w2, #0xffffffff            	// #-1
   197dc:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   197e0:	mov	x0, x19
   197e4:	add	x1, x1, #0xfc0
   197e8:	str	w2, [x20, #8]
   197ec:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   197f0:	cbnz	w0, 19838 <__sanitizer_set_report_path@@Base+0xc8>
   197f4:	mov	w0, #0x1                   	// #1
   197f8:	str	w0, [x20, #8]
   197fc:	dmb	ish
   19800:	strb	wzr, [x21]
   19804:	ldp	x19, x20, [sp, #16]
   19808:	ldp	x21, x30, [sp, #32]
   1980c:	add	sp, sp, #0x30
   19810:	ret
   19814:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   19818:	add	x20, x20, #0x3d0
   1981c:	mov	w2, #0xffffffff            	// #-1
   19820:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19824:	mov	x0, x19
   19828:	add	x1, x1, #0xfc0
   1982c:	str	w2, [x20, #8]
   19830:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   19834:	cbz	w0, 197f4 <__sanitizer_set_report_path@@Base+0x84>
   19838:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1983c:	mov	x0, x19
   19840:	add	x1, x1, #0xfc8
   19844:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   19848:	cbnz	w0, 19870 <__sanitizer_set_report_path@@Base+0x100>
   1984c:	mov	w0, #0x2                   	// #2
   19850:	str	w0, [x20, #8]
   19854:	dmb	ish
   19858:	strb	wzr, [x21]
   1985c:	ldp	x19, x20, [sp, #16]
   19860:	ldp	x21, x30, [sp, #32]
   19864:	add	sp, sp, #0x30
   19868:	ret
   1986c:	ret
   19870:	mov	x3, x19
   19874:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   19878:	adrp	x0, 6d000 <_Unwind_Backtrace@GCC_3.3>
   1987c:	add	x2, x2, #0xdb8
   19880:	mov	x1, #0x1000                	// #4096
   19884:	add	x0, x0, #0x3dc
   19888:	bl	22970 <OnPrint@@Base+0x8>
   1988c:	b	197fc <__sanitizer_set_report_path@@Base+0x8c>
   19890:	ldrb	w7, [x19, #6]
   19894:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19898:	ldrb	w6, [x19, #5]
   1989c:	add	x0, x0, #0xf90
   198a0:	ldrb	w5, [x19, #4]
   198a4:	ldrb	w4, [x19, #3]
   198a8:	ldrb	w3, [x19, #2]
   198ac:	ldrb	w2, [x19, #1]
   198b0:	ldrb	w1, [x19]
   198b4:	ldrb	w8, [x19, #7]
   198b8:	str	w8, [sp]
   198bc:	bl	22d00 <OnPrint@@Base+0x398>
   198c0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   198c4:	nop

00000000000198c8 <__sanitizer_set_report_fd@@Base>:
   198c8:	stp	x19, x30, [sp, #-16]!
   198cc:	adrp	x19, 6d000 <_Unwind_Backtrace@GCC_3.3>
   198d0:	add	x19, x19, #0x3d0
   198d4:	str	w0, [x19, #8]
   198d8:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   198dc:	str	x0, [x19, #8208]
   198e0:	ldp	x19, x30, [sp], #16
   198e4:	ret
   198e8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   198ec:	add	x7, x1, #0xb00
   198f0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   198f4:	mov	x17, #0x10000               	// #65536
   198f8:	mov	x16, #0x10100000000         	// #1103806595072
   198fc:	mov	w11, #0x100                 	// #256
   19900:	ldr	q1, [x1, #1232]
   19904:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   19908:	mov	w5, #0x1                   	// #1
   1990c:	mov	w8, #0x1                   	// #1
   19910:	ldr	q0, [x1, #1248]
   19914:	movk	x17, #0x1, lsl #32
   19918:	movk	x16, #0x1, lsl #48
   1991c:	mov	x15, #0x100000000           	// #4294967296
   19920:	mov	w14, #0x101                 	// #257
   19924:	mov	x13, #0x10000               	// #65536
   19928:	mov	w12, #0x1388                	// #5000
   1992c:	movk	w11, #0x101, lsl #16
   19930:	adrp	x6, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19934:	adrp	x4, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19938:	add	x6, x6, #0xfc8
   1993c:	add	x4, x4, #0x100
   19940:	adrp	x3, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   19944:	adrp	x2, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19948:	add	x3, x3, #0x758
   1994c:	add	x2, x2, #0x108
   19950:	mov	x10, #0x1                   	// #1
   19954:	strb	w5, [x0]
   19958:	str	xzr, [x0, #8]
   1995c:	movk	x10, #0x100, lsl #32
   19960:	strb	wzr, [x0, #16]
   19964:	mov	w9, #0x100                 	// #256
   19968:	stp	x7, x17, [x0, #24]
   1996c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19970:	add	x1, x1, #0xad0
   19974:	str	x6, [x0, #40]
   19978:	strh	wzr, [x0, #48]
   1997c:	stur	x16, [x0, #52]
   19980:	strb	w5, [x0, #60]
   19984:	str	wzr, [x0, #64]
   19988:	strb	w5, [x0, #68]
   1998c:	stur	q1, [x0, #72]
   19990:	str	x15, [x0, #88]
   19994:	strh	w14, [x0, #96]
   19998:	strb	wzr, [x0, #98]
   1999c:	stp	x13, x4, [x0, #104]
   199a0:	strh	wzr, [x0, #120]
   199a4:	strb	wzr, [x0, #122]
   199a8:	stp	xzr, xzr, [x0, #128]
   199ac:	str	xzr, [x0, #144]
   199b0:	strb	wzr, [x0, #152]
   199b4:	str	w12, [x0, #156]
   199b8:	strh	w8, [x0, #160]
   199bc:	str	x3, [x0, #168]
   199c0:	str	w11, [x0, #176]
   199c4:	strh	w8, [x0, #180]
   199c8:	str	wzr, [x0, #184]
   199cc:	str	x2, [x0, #192]
   199d0:	stur	q0, [x0, #200]
   199d4:	stp	x10, x1, [x0, #216]
   199d8:	strh	w9, [x0, #232]
   199dc:	strb	wzr, [x0, #234]
   199e0:	ret
   199e4:	nop
   199e8:	mov	x2, #0xf0                  	// #240
   199ec:	b	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   199f0:	stp	x19, x20, [sp, #-80]!
   199f4:	sub	x2, x2, #0x1
   199f8:	mov	x19, x1
   199fc:	stp	x21, x22, [sp, #16]
   19a00:	mov	x21, x0
   19a04:	add	x20, x1, x2
   19a08:	str	x30, [sp, #32]
   19a0c:	ldrb	w0, [x0]
   19a10:	cbz	w0, 19ae8 <__sanitizer_set_report_fd@@Base+0x220>
   19a14:	cmp	x1, x20
   19a18:	b.cs	19ab4 <__sanitizer_set_report_fd@@Base+0x1ec>  // b.hs, b.nlast
   19a1c:	mov	w22, #0x6667                	// #26215
   19a20:	movk	w22, #0x6666, lsl #16
   19a24:	nop
   19a28:	cmp	w0, #0x25
   19a2c:	b.ne	19ad8 <__sanitizer_set_report_fd@@Base+0x210>  // b.any
   19a30:	ldrb	w1, [x21, #1]
   19a34:	cmp	w1, #0x62
   19a38:	b.eq	19b04 <__sanitizer_set_report_fd@@Base+0x23c>  // b.none
   19a3c:	cmp	w1, #0x70
   19a40:	b.ne	19ad8 <__sanitizer_set_report_fd@@Base+0x210>  // b.any
   19a44:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   19a48:	add	x3, sp, #0x50
   19a4c:	nop
   19a50:	smull	x1, w0, w22
   19a54:	asr	x1, x1, #34
   19a58:	sub	w1, w1, w0, asr #31
   19a5c:	add	w2, w1, w1, lsl #2
   19a60:	sub	w2, w0, w2, lsl #1
   19a64:	mov	w0, w1
   19a68:	add	w1, w2, #0x30
   19a6c:	strb	w1, [x3, #-1]!
   19a70:	cbnz	w0, 19a50 <__sanitizer_set_report_fd@@Base+0x188>
   19a74:	add	x0, sp, #0x50
   19a78:	cmp	x0, x3
   19a7c:	ccmp	x19, x20, #0x2, hi  // hi = pmore
   19a80:	b.cs	19aa0 <__sanitizer_set_report_fd@@Base+0x1d8>  // b.hs, b.nlast
   19a84:	nop
   19a88:	ldrb	w0, [x3], #1
   19a8c:	strb	w0, [x19], #1
   19a90:	add	x0, sp, #0x50
   19a94:	cmp	x19, x20
   19a98:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
   19a9c:	b.hi	19a88 <__sanitizer_set_report_fd@@Base+0x1c0>  // b.pmore
   19aa0:	ldrb	w0, [x21, #2]
   19aa4:	add	x21, x21, #0x2
   19aa8:	cbz	w0, 19ae8 <__sanitizer_set_report_fd@@Base+0x220>
   19aac:	cmp	x19, x20
   19ab0:	b.cc	19a28 <__sanitizer_set_report_fd@@Base+0x160>  // b.lo, b.ul, b.last
   19ab4:	cmp	x19, x20
   19ab8:	cset	x3, cc  // cc = lo, ul, last
   19abc:	adrp	x2, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19ac0:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19ac4:	add	x2, x2, #0x160
   19ac8:	add	x0, x0, #0x120
   19acc:	mov	x4, #0x0                   	// #0
   19ad0:	mov	w1, #0x46                  	// #70
   19ad4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19ad8:	add	x21, x21, #0x1
   19adc:	strb	w0, [x19], #1
   19ae0:	ldrb	w0, [x21]
   19ae4:	cbnz	w0, 19aac <__sanitizer_set_report_fd@@Base+0x1e4>
   19ae8:	cmp	x19, x20
   19aec:	b.cs	19b58 <__sanitizer_set_report_fd@@Base+0x290>  // b.hs, b.nlast
   19af0:	strb	wzr, [x19]
   19af4:	ldp	x21, x22, [sp, #16]
   19af8:	ldr	x30, [sp, #32]
   19afc:	ldp	x19, x20, [sp], #80
   19b00:	ret
   19b04:	bl	15da0 <__sancov_default_options@@Base+0x32d0>
   19b08:	cbz	x0, 19b38 <__sanitizer_set_report_fd@@Base+0x270>
   19b0c:	ldrb	w1, [x0]
   19b10:	cmp	w1, #0x0
   19b14:	ccmp	x19, x20, #0x2, ne  // ne = any
   19b18:	b.cs	19aa0 <__sanitizer_set_report_fd@@Base+0x1d8>  // b.hs, b.nlast
   19b1c:	nop
   19b20:	strb	w1, [x19], #1
   19b24:	ldrb	w1, [x0, #1]!
   19b28:	cmp	w1, #0x0
   19b2c:	ccmp	x19, x20, #0x2, ne  // ne = any
   19b30:	b.cc	19b20 <__sanitizer_set_report_fd@@Base+0x258>  // b.lo, b.ul, b.last
   19b34:	b	19aa0 <__sanitizer_set_report_fd@@Base+0x1d8>
   19b38:	adrp	x2, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19b3c:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19b40:	add	x2, x2, #0x110
   19b44:	add	x0, x0, #0x120
   19b48:	mov	x4, #0x0                   	// #0
   19b4c:	mov	x3, #0x0                   	// #0
   19b50:	mov	w1, #0x2e                  	// #46
   19b54:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19b58:	mov	x3, #0x0                   	// #0
   19b5c:	b	19abc <__sanitizer_set_report_fd@@Base+0x1f4>
   19b60:	stp	x19, x20, [sp, #-32]!
   19b64:	mov	x1, #0x18                  	// #24
   19b68:	mov	x19, x0
   19b6c:	stp	x21, x30, [sp, #16]
   19b70:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19b74:	adrp	x20, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   19b78:	ldr	x21, [x21, #3456]
   19b7c:	add	x20, x20, #0xca0
   19b80:	mov	x0, x21
   19b84:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19b88:	mov	x2, x0
   19b8c:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19b90:	add	x3, x3, #0x180
   19b94:	mov	x0, x19
   19b98:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19b9c:	add	x1, x1, #0x1a8
   19ba0:	stp	x20, x19, [x2]
   19ba4:	strb	wzr, [x2, #16]
   19ba8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19bac:	mov	x0, x21
   19bb0:	mov	x1, #0x18                  	// #24
   19bb4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19bb8:	mov	x2, x0
   19bbc:	mov	w4, #0x1                   	// #1
   19bc0:	mov	x0, x19
   19bc4:	ldp	x21, x30, [sp, #16]
   19bc8:	stp	x20, x19, [x2]
   19bcc:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19bd0:	strb	w4, [x2, #16]
   19bd4:	add	x3, x3, #0x1b0
   19bd8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19bdc:	add	x1, x1, #0x1e8
   19be0:	ldp	x19, x20, [sp], #32
   19be4:	b	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19be8:	stp	x19, x20, [sp, #-64]!
   19bec:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19bf0:	mov	x19, x0
   19bf4:	ldr	x20, [x20, #3456]
   19bf8:	stp	x21, x22, [sp, #16]
   19bfc:	mov	x21, x1
   19c00:	mov	x0, x20
   19c04:	mov	x1, #0x10                  	// #16
   19c08:	stp	x23, x24, [sp, #32]
   19c0c:	adrp	x22, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   19c10:	add	x22, x22, #0xb80
   19c14:	stp	x25, x30, [sp, #48]
   19c18:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19c1c:	mov	x2, x0
   19c20:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19c24:	add	x3, x3, #0x200
   19c28:	mov	x0, x19
   19c2c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   19c30:	stp	x22, x21, [x2]
   19c34:	add	x1, x1, #0x1e0
   19c38:	adrp	x23, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   19c3c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19c40:	add	x23, x23, #0xb98
   19c44:	mov	x0, x20
   19c48:	mov	x1, #0x10                  	// #16
   19c4c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19c50:	mov	x2, x0
   19c54:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19c58:	add	x0, x21, #0x8
   19c5c:	add	x3, x3, #0x278
   19c60:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19c64:	stp	x23, x0, [x2]
   19c68:	add	x1, x1, #0x2d0
   19c6c:	mov	x0, x19
   19c70:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19c74:	adrp	x25, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   19c78:	mov	x0, x20
   19c7c:	mov	x1, #0x10                  	// #16
   19c80:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19c84:	mov	x2, x0
   19c88:	add	x4, x21, #0x10
   19c8c:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19c90:	add	x3, x3, #0x2f0
   19c94:	mov	x0, x19
   19c98:	stp	x22, x4, [x2]
   19c9c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19ca0:	add	x1, x1, #0x390
   19ca4:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19ca8:	add	x25, x25, #0xbb0
   19cac:	mov	x0, x20
   19cb0:	mov	x1, #0x10                  	// #16
   19cb4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19cb8:	mov	x2, x0
   19cbc:	add	x4, x21, #0x18
   19cc0:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19cc4:	add	x3, x3, #0x3a0
   19cc8:	mov	x0, x19
   19ccc:	stp	x23, x4, [x2]
   19cd0:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19cd4:	add	x1, x1, #0x3d8
   19cd8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19cdc:	adrp	x24, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   19ce0:	mov	x0, x20
   19ce4:	mov	x1, #0x10                  	// #16
   19ce8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19cec:	mov	x2, x0
   19cf0:	add	x4, x21, #0x20
   19cf4:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19cf8:	add	x3, x3, #0x3f0
   19cfc:	mov	x0, x19
   19d00:	stp	x22, x4, [x2]
   19d04:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d08:	add	x1, x1, #0x448
   19d0c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19d10:	add	x24, x24, #0xc70
   19d14:	mov	x0, x20
   19d18:	mov	x1, #0x10                  	// #16
   19d1c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19d20:	mov	x2, x0
   19d24:	add	x4, x21, #0x21
   19d28:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d2c:	add	x3, x3, #0x460
   19d30:	mov	x0, x19
   19d34:	stp	x22, x4, [x2]
   19d38:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d3c:	add	x1, x1, #0x4b0
   19d40:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19d44:	mov	x0, x20
   19d48:	mov	x1, #0x10                  	// #16
   19d4c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19d50:	mov	x2, x0
   19d54:	add	x4, x21, #0x22
   19d58:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d5c:	add	x3, x3, #0x4c8
   19d60:	mov	x0, x19
   19d64:	stp	x22, x4, [x2]
   19d68:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d6c:	add	x1, x1, #0x510
   19d70:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19d74:	mov	x0, x20
   19d78:	mov	x1, #0x10                  	// #16
   19d7c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19d80:	mov	x2, x0
   19d84:	add	x4, x21, #0x23
   19d88:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d8c:	add	x3, x3, #0x528
   19d90:	mov	x0, x19
   19d94:	stp	x22, x4, [x2]
   19d98:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19d9c:	add	x1, x1, #0x550
   19da0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19da4:	mov	x0, x20
   19da8:	mov	x1, #0x10                  	// #16
   19dac:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19db0:	mov	x2, x0
   19db4:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19db8:	add	x0, x21, #0x24
   19dbc:	add	x3, x3, #0x560
   19dc0:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19dc4:	stp	x25, x0, [x2]
   19dc8:	add	x1, x1, #0x5a8
   19dcc:	mov	x0, x19
   19dd0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19dd4:	mov	x0, x20
   19dd8:	mov	x1, #0x10                  	// #16
   19ddc:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19de0:	mov	x2, x0
   19de4:	add	x4, x21, #0x28
   19de8:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19dec:	add	x3, x3, #0x5c0
   19df0:	mov	x0, x19
   19df4:	stp	x23, x4, [x2]
   19df8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19dfc:	add	x1, x1, #0x628
   19e00:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19e04:	mov	x0, x20
   19e08:	mov	x1, #0x10                  	// #16
   19e0c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19e10:	mov	x2, x0
   19e14:	add	x4, x21, #0x30
   19e18:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19e1c:	add	x3, x3, #0x638
   19e20:	mov	x0, x19
   19e24:	stp	x22, x4, [x2]
   19e28:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19e2c:	add	x1, x1, #0x6b0
   19e30:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19e34:	mov	x0, x20
   19e38:	mov	x1, #0x10                  	// #16
   19e3c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19e40:	mov	x2, x0
   19e44:	add	x4, x21, #0x31
   19e48:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19e4c:	add	x3, x3, #0x6c0
   19e50:	mov	x0, x19
   19e54:	stp	x22, x4, [x2]
   19e58:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19e5c:	add	x1, x1, #0x710
   19e60:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19e64:	mov	x0, x20
   19e68:	mov	x1, #0x10                  	// #16
   19e6c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19e70:	mov	x2, x0
   19e74:	add	x4, x21, #0x34
   19e78:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19e7c:	add	x3, x3, #0x720
   19e80:	mov	x0, x19
   19e84:	stp	x25, x4, [x2]
   19e88:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19e8c:	add	x1, x1, #0x768
   19e90:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19e94:	mov	x0, x20
   19e98:	mov	x1, #0x10                  	// #16
   19e9c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19ea0:	mov	x2, x0
   19ea4:	add	x4, x21, #0x38
   19ea8:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19eac:	add	x3, x3, #0x778
   19eb0:	mov	x0, x19
   19eb4:	stp	x22, x4, [x2]
   19eb8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19ebc:	add	x1, x1, #0x7e8
   19ec0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19ec4:	mov	x0, x20
   19ec8:	mov	x1, #0x10                  	// #16
   19ecc:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19ed0:	mov	x2, x0
   19ed4:	add	x4, x21, #0x39
   19ed8:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19edc:	add	x3, x3, #0x7f8
   19ee0:	mov	x0, x19
   19ee4:	stp	x22, x4, [x2]
   19ee8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19eec:	add	x1, x1, #0x818
   19ef0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19ef4:	mov	x0, x20
   19ef8:	mov	x1, #0x10                  	// #16
   19efc:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19f00:	mov	x2, x0
   19f04:	add	x4, x21, #0x3a
   19f08:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f0c:	add	x3, x3, #0x828
   19f10:	mov	x0, x19
   19f14:	stp	x22, x4, [x2]
   19f18:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f1c:	add	x1, x1, #0x8c8
   19f20:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19f24:	mov	x0, x20
   19f28:	mov	x1, #0x10                  	// #16
   19f2c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19f30:	mov	x2, x0
   19f34:	add	x4, x21, #0x3b
   19f38:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f3c:	add	x3, x3, #0x8e0
   19f40:	mov	x0, x19
   19f44:	stp	x22, x4, [x2]
   19f48:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f4c:	add	x1, x1, #0x930
   19f50:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19f54:	mov	x0, x20
   19f58:	mov	x1, #0x10                  	// #16
   19f5c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19f60:	mov	x2, x0
   19f64:	add	x4, x21, #0x3c
   19f68:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f6c:	add	x3, x3, #0x950
   19f70:	mov	x0, x19
   19f74:	stp	x22, x4, [x2]
   19f78:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f7c:	add	x1, x1, #0x9a0
   19f80:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19f84:	mov	x0, x20
   19f88:	mov	x1, #0x10                  	// #16
   19f8c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19f90:	mov	x2, x0
   19f94:	add	x4, x21, #0x40
   19f98:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19f9c:	add	x3, x3, #0x9b0
   19fa0:	mov	x0, x19
   19fa4:	stp	x25, x4, [x2]
   19fa8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19fac:	add	x1, x1, #0xa18
   19fb0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19fb4:	mov	x0, x20
   19fb8:	mov	x1, #0x10                  	// #16
   19fbc:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19fc0:	mov	x2, x0
   19fc4:	add	x4, x21, #0x44
   19fc8:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19fcc:	add	x3, x3, #0xa30
   19fd0:	mov	x0, x19
   19fd4:	stp	x22, x4, [x2]
   19fd8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19fdc:	add	x1, x1, #0xa48
   19fe0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   19fe4:	mov	x0, x20
   19fe8:	mov	x1, #0x10                  	// #16
   19fec:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   19ff0:	mov	x2, x0
   19ff4:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   19ff8:	add	x0, x21, #0x48
   19ffc:	add	x3, x3, #0xa58
   1a000:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a004:	stp	x24, x0, [x2]
   1a008:	add	x1, x1, #0xb18
   1a00c:	mov	x0, x19
   1a010:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a014:	mov	x0, x20
   1a018:	mov	x1, #0x10                  	// #16
   1a01c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a020:	mov	x2, x0
   1a024:	add	x4, x21, #0x4c
   1a028:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a02c:	add	x3, x3, #0xb28
   1a030:	mov	x0, x19
   1a034:	stp	x24, x4, [x2]
   1a038:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a03c:	add	x1, x1, #0xbe8
   1a040:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a044:	mov	x0, x20
   1a048:	mov	x1, #0x10                  	// #16
   1a04c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a050:	mov	x2, x0
   1a054:	add	x4, x21, #0x50
   1a058:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a05c:	add	x3, x3, #0xbf8
   1a060:	mov	x0, x19
   1a064:	stp	x24, x4, [x2]
   1a068:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a06c:	add	x1, x1, #0xcb8
   1a070:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a074:	mov	x0, x20
   1a078:	mov	x1, #0x10                  	// #16
   1a07c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a080:	mov	x2, x0
   1a084:	add	x4, x21, #0x54
   1a088:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a08c:	add	x3, x3, #0xcc8
   1a090:	mov	x0, x19
   1a094:	stp	x24, x4, [x2]
   1a098:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a09c:	add	x1, x1, #0xd88
   1a0a0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a0a4:	mov	x0, x20
   1a0a8:	mov	x1, #0x10                  	// #16
   1a0ac:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a0b0:	mov	x2, x0
   1a0b4:	add	x4, x21, #0x58
   1a0b8:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a0bc:	add	x3, x3, #0xd98
   1a0c0:	mov	x0, x19
   1a0c4:	stp	x24, x4, [x2]
   1a0c8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a0cc:	add	x1, x1, #0xe58
   1a0d0:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a0d4:	mov	x0, x20
   1a0d8:	mov	x1, #0x10                  	// #16
   1a0dc:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a0e0:	mov	x2, x0
   1a0e4:	add	x4, x21, #0x5c
   1a0e8:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a0ec:	add	x3, x3, #0xe68
   1a0f0:	mov	x0, x19
   1a0f4:	stp	x24, x4, [x2]
   1a0f8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a0fc:	add	x1, x1, #0xf28
   1a100:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a104:	adrp	x24, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   1a108:	mov	x0, x20
   1a10c:	mov	x1, #0x10                  	// #16
   1a110:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a114:	mov	x2, x0
   1a118:	add	x4, x21, #0x60
   1a11c:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a120:	add	x3, x3, #0xf38
   1a124:	mov	x0, x19
   1a128:	stp	x22, x4, [x2]
   1a12c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a130:	add	x1, x1, #0xfa8
   1a134:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a138:	add	x24, x24, #0xc88
   1a13c:	mov	x0, x20
   1a140:	mov	x1, #0x10                  	// #16
   1a144:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a148:	mov	x2, x0
   1a14c:	add	x4, x21, #0x61
   1a150:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a154:	add	x3, x3, #0xfc0
   1a158:	mov	x0, x19
   1a15c:	stp	x22, x4, [x2]
   1a160:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1a164:	add	x1, x1, #0xff8
   1a168:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a16c:	mov	x0, x20
   1a170:	mov	x1, #0x10                  	// #16
   1a174:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a178:	mov	x2, x0
   1a17c:	add	x4, x21, #0x62
   1a180:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a184:	add	x3, x3, #0x8
   1a188:	mov	x0, x19
   1a18c:	stp	x22, x4, [x2]
   1a190:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a194:	add	x1, x1, #0x30
   1a198:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a19c:	mov	x0, x20
   1a1a0:	mov	x1, #0x10                  	// #16
   1a1a4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a1a8:	mov	x2, x0
   1a1ac:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a1b0:	add	x0, x21, #0x68
   1a1b4:	add	x3, x3, #0x48
   1a1b8:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a1bc:	stp	x24, x0, [x2]
   1a1c0:	add	x1, x1, #0xc0
   1a1c4:	mov	x0, x19
   1a1c8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a1cc:	mov	x0, x20
   1a1d0:	mov	x1, #0x10                  	// #16
   1a1d4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a1d8:	mov	x2, x0
   1a1dc:	add	x4, x21, #0x70
   1a1e0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a1e4:	add	x3, x3, #0xe0
   1a1e8:	mov	x0, x19
   1a1ec:	stp	x23, x4, [x2]
   1a1f0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a1f4:	add	x1, x1, #0x108
   1a1f8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a1fc:	mov	x0, x20
   1a200:	mov	x1, #0x10                  	// #16
   1a204:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a208:	mov	x2, x0
   1a20c:	add	x4, x21, #0x78
   1a210:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a214:	add	x3, x3, #0x110
   1a218:	mov	x0, x19
   1a21c:	stp	x22, x4, [x2]
   1a220:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a224:	add	x1, x1, #0x158
   1a228:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a22c:	mov	x0, x20
   1a230:	mov	x1, #0x10                  	// #16
   1a234:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a238:	mov	x2, x0
   1a23c:	add	x4, x21, #0x79
   1a240:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a244:	add	x3, x3, #0x170
   1a248:	mov	x0, x19
   1a24c:	stp	x22, x4, [x2]
   1a250:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a254:	add	x1, x1, #0x190
   1a258:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a25c:	mov	x0, x20
   1a260:	mov	x1, #0x10                  	// #16
   1a264:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a268:	mov	x2, x0
   1a26c:	add	x4, x21, #0x7a
   1a270:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a274:	add	x3, x3, #0x1a8
   1a278:	mov	x0, x19
   1a27c:	stp	x22, x4, [x2]
   1a280:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1a284:	add	x1, x1, #0x208
   1a288:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a28c:	mov	x0, x20
   1a290:	mov	x1, #0x10                  	// #16
   1a294:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a298:	mov	x2, x0
   1a29c:	add	x4, x21, #0x80
   1a2a0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a2a4:	add	x3, x3, #0x1c8
   1a2a8:	mov	x0, x19
   1a2ac:	stp	x24, x4, [x2]
   1a2b0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a2b4:	add	x1, x1, #0x240
   1a2b8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a2bc:	mov	x0, x20
   1a2c0:	mov	x1, #0x10                  	// #16
   1a2c4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a2c8:	mov	x2, x0
   1a2cc:	add	x4, x21, #0x88
   1a2d0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a2d4:	add	x3, x3, #0x250
   1a2d8:	mov	x0, x19
   1a2dc:	stp	x24, x4, [x2]
   1a2e0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a2e4:	add	x1, x1, #0x2f0
   1a2e8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a2ec:	mov	x0, x20
   1a2f0:	mov	x1, #0x10                  	// #16
   1a2f4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a2f8:	mov	x2, x0
   1a2fc:	add	x4, x21, #0x90
   1a300:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a304:	add	x3, x3, #0x308
   1a308:	mov	x0, x19
   1a30c:	stp	x24, x4, [x2]
   1a310:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a314:	add	x1, x1, #0x468
   1a318:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a31c:	mov	x0, x20
   1a320:	mov	x1, #0x10                  	// #16
   1a324:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a328:	mov	x2, x0
   1a32c:	add	x4, x21, #0x98
   1a330:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a334:	add	x3, x3, #0x480
   1a338:	mov	x0, x19
   1a33c:	stp	x22, x4, [x2]
   1a340:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a344:	add	x1, x1, #0x4a8
   1a348:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a34c:	mov	x0, x20
   1a350:	mov	x1, #0x10                  	// #16
   1a354:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a358:	mov	x2, x0
   1a35c:	add	x4, x21, #0x9c
   1a360:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a364:	add	x3, x3, #0x4b8
   1a368:	mov	x0, x19
   1a36c:	stp	x25, x4, [x2]
   1a370:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a374:	add	x1, x1, #0x588
   1a378:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a37c:	mov	x0, x20
   1a380:	mov	x1, #0x10                  	// #16
   1a384:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a388:	mov	x2, x0
   1a38c:	add	x4, x21, #0xa0
   1a390:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a394:	add	x3, x3, #0x5b0
   1a398:	mov	x0, x19
   1a39c:	stp	x22, x4, [x2]
   1a3a0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a3a4:	add	x1, x1, #0x610
   1a3a8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a3ac:	mov	x0, x20
   1a3b0:	mov	x1, #0x10                  	// #16
   1a3b4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a3b8:	mov	x2, x0
   1a3bc:	add	x4, x21, #0xa1
   1a3c0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a3c4:	add	x3, x3, #0x628
   1a3c8:	mov	x0, x19
   1a3cc:	stp	x22, x4, [x2]
   1a3d0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a3d4:	add	x1, x1, #0x6a8
   1a3d8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a3dc:	mov	x0, x20
   1a3e0:	mov	x1, #0x10                  	// #16
   1a3e4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a3e8:	mov	x2, x0
   1a3ec:	add	x4, x21, #0xa8
   1a3f0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a3f4:	add	x3, x3, #0x6b8
   1a3f8:	mov	x0, x19
   1a3fc:	stp	x23, x4, [x2]
   1a400:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a404:	add	x1, x1, #0x700
   1a408:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a40c:	mov	x0, x20
   1a410:	mov	x1, #0x10                  	// #16
   1a414:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a418:	mov	x2, x0
   1a41c:	add	x4, x21, #0xb0
   1a420:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a424:	add	x3, x3, #0x710
   1a428:	mov	x0, x19
   1a42c:	stp	x22, x4, [x2]
   1a430:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a434:	add	x1, x1, #0x778
   1a438:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a43c:	mov	x0, x20
   1a440:	mov	x1, #0x10                  	// #16
   1a444:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a448:	mov	x2, x0
   1a44c:	add	x4, x21, #0xb1
   1a450:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a454:	add	x3, x3, #0x790
   1a458:	mov	x0, x19
   1a45c:	stp	x22, x4, [x2]
   1a460:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a464:	add	x1, x1, #0x7b8
   1a468:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a46c:	mov	x0, x20
   1a470:	mov	x1, #0x10                  	// #16
   1a474:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a478:	mov	x2, x0
   1a47c:	add	x4, x21, #0xb2
   1a480:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a484:	add	x3, x3, #0x7d0
   1a488:	mov	x0, x19
   1a48c:	stp	x22, x4, [x2]
   1a490:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a494:	add	x1, x1, #0x8a0
   1a498:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a49c:	mov	x0, x20
   1a4a0:	mov	x1, #0x10                  	// #16
   1a4a4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a4a8:	mov	x2, x0
   1a4ac:	add	x4, x21, #0xb3
   1a4b0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a4b4:	add	x3, x3, #0x8b8
   1a4b8:	mov	x0, x19
   1a4bc:	stp	x22, x4, [x2]
   1a4c0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a4c4:	add	x1, x1, #0x900
   1a4c8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a4cc:	mov	x0, x20
   1a4d0:	mov	x1, #0x10                  	// #16
   1a4d4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a4d8:	mov	x2, x0
   1a4dc:	add	x4, x21, #0xb4
   1a4e0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a4e4:	add	x3, x3, #0x918
   1a4e8:	mov	x0, x19
   1a4ec:	stp	x22, x4, [x2]
   1a4f0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a4f4:	add	x1, x1, #0x950
   1a4f8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a4fc:	mov	x0, x20
   1a500:	mov	x1, #0x10                  	// #16
   1a504:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a508:	mov	x2, x0
   1a50c:	add	x4, x21, #0xb5
   1a510:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a514:	add	x3, x3, #0x968
   1a518:	mov	x0, x19
   1a51c:	stp	x22, x4, [x2]
   1a520:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a524:	add	x1, x1, #0x9b0
   1a528:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a52c:	mov	x0, x20
   1a530:	mov	x1, #0x10                  	// #16
   1a534:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a538:	mov	x2, x0
   1a53c:	add	x4, x21, #0xb8
   1a540:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a544:	add	x3, x3, #0x9c8
   1a548:	mov	x0, x19
   1a54c:	stp	x25, x4, [x2]
   1a550:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a554:	add	x1, x1, #0xa98
   1a558:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a55c:	mov	x0, x20
   1a560:	mov	x1, #0x10                  	// #16
   1a564:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a568:	mov	x2, x0
   1a56c:	add	x4, x21, #0xc0
   1a570:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a574:	add	x3, x3, #0xab0
   1a578:	mov	x0, x19
   1a57c:	stp	x23, x4, [x2]
   1a580:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a584:	add	x1, x1, #0xb40
   1a588:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a58c:	mov	x0, x20
   1a590:	mov	x1, #0x10                  	// #16
   1a594:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a598:	mov	x2, x0
   1a59c:	add	x4, x21, #0xc8
   1a5a0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a5a4:	add	x3, x3, #0xb58
   1a5a8:	mov	x0, x19
   1a5ac:	stp	x22, x4, [x2]
   1a5b0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a5b4:	add	x1, x1, #0xb90
   1a5b8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a5bc:	mov	x0, x20
   1a5c0:	mov	x1, #0x10                  	// #16
   1a5c4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a5c8:	mov	x2, x0
   1a5cc:	add	x4, x21, #0xc9
   1a5d0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a5d4:	add	x3, x3, #0xbb0
   1a5d8:	mov	x0, x19
   1a5dc:	stp	x22, x4, [x2]
   1a5e0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a5e4:	add	x1, x1, #0xbf0
   1a5e8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a5ec:	mov	x0, x20
   1a5f0:	mov	x1, #0x10                  	// #16
   1a5f4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a5f8:	mov	x2, x0
   1a5fc:	add	x4, x21, #0xca
   1a600:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a604:	add	x3, x3, #0xc08
   1a608:	mov	x0, x19
   1a60c:	stp	x22, x4, [x2]
   1a610:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a614:	add	x1, x1, #0xc60
   1a618:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a61c:	mov	x0, x20
   1a620:	mov	x1, #0x10                  	// #16
   1a624:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a628:	mov	x2, x0
   1a62c:	add	x4, x21, #0xcb
   1a630:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a634:	add	x3, x3, #0xc78
   1a638:	mov	x0, x19
   1a63c:	stp	x22, x4, [x2]
   1a640:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a644:	add	x1, x1, #0xcd0
   1a648:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a64c:	mov	x0, x20
   1a650:	mov	x1, #0x10                  	// #16
   1a654:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a658:	mov	x2, x0
   1a65c:	add	x4, x21, #0xcc
   1a660:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a664:	add	x3, x3, #0xce8
   1a668:	mov	x0, x19
   1a66c:	stp	x22, x4, [x2]
   1a670:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a674:	add	x1, x1, #0xd38
   1a678:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a67c:	mov	x0, x20
   1a680:	mov	x1, #0x10                  	// #16
   1a684:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a688:	mov	x2, x0
   1a68c:	add	x4, x21, #0xcd
   1a690:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a694:	add	x3, x3, #0xd50
   1a698:	mov	x0, x19
   1a69c:	stp	x22, x4, [x2]
   1a6a0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a6a4:	add	x1, x1, #0xd98
   1a6a8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a6ac:	mov	x0, x20
   1a6b0:	mov	x1, #0x10                  	// #16
   1a6b4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a6b8:	mov	x2, x0
   1a6bc:	add	x4, x21, #0xce
   1a6c0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a6c4:	add	x3, x3, #0xdb0
   1a6c8:	mov	x0, x19
   1a6cc:	stp	x22, x4, [x2]
   1a6d0:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a6d4:	add	x1, x1, #0xe08
   1a6d8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a6dc:	mov	x0, x20
   1a6e0:	mov	x1, #0x10                  	// #16
   1a6e4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a6e8:	mov	x2, x0
   1a6ec:	add	x4, x21, #0xcf
   1a6f0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a6f4:	add	x3, x3, #0xe20
   1a6f8:	mov	x0, x19
   1a6fc:	stp	x22, x4, [x2]
   1a700:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a704:	add	x1, x1, #0xe68
   1a708:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a70c:	mov	x0, x20
   1a710:	mov	x1, #0x10                  	// #16
   1a714:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a718:	mov	x2, x0
   1a71c:	add	x4, x21, #0xd0
   1a720:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a724:	add	x3, x3, #0xe80
   1a728:	mov	x0, x19
   1a72c:	stp	x22, x4, [x2]
   1a730:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a734:	add	x1, x1, #0xee0
   1a738:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a73c:	mov	x0, x20
   1a740:	mov	x1, #0x10                  	// #16
   1a744:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a748:	mov	x2, x0
   1a74c:	add	x4, x21, #0xd1
   1a750:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a754:	add	x3, x3, #0xef8
   1a758:	mov	x0, x19
   1a75c:	stp	x22, x4, [x2]
   1a760:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a764:	add	x1, x1, #0xf40
   1a768:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a76c:	mov	x0, x20
   1a770:	mov	x1, #0x10                  	// #16
   1a774:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a778:	mov	x2, x0
   1a77c:	add	x4, x21, #0xd2
   1a780:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a784:	add	x3, x3, #0xf58
   1a788:	mov	x0, x19
   1a78c:	stp	x22, x4, [x2]
   1a790:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a794:	add	x1, x1, #0xfb0
   1a798:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a79c:	mov	x0, x20
   1a7a0:	mov	x1, #0x10                  	// #16
   1a7a4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a7a8:	mov	x2, x0
   1a7ac:	add	x4, x21, #0xd3
   1a7b0:	adrp	x3, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   1a7b4:	add	x3, x3, #0xfc0
   1a7b8:	mov	x0, x19
   1a7bc:	stp	x22, x4, [x2]
   1a7c0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a7c4:	add	x1, x1, #0x0
   1a7c8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a7cc:	mov	x0, x20
   1a7d0:	mov	x1, #0x10                  	// #16
   1a7d4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a7d8:	mov	x2, x0
   1a7dc:	add	x4, x21, #0xd4
   1a7e0:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a7e4:	add	x3, x3, #0x18
   1a7e8:	mov	x0, x19
   1a7ec:	stp	x22, x4, [x2]
   1a7f0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a7f4:	add	x1, x1, #0x70
   1a7f8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a7fc:	mov	x0, x20
   1a800:	mov	x1, #0x10                  	// #16
   1a804:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a808:	mov	x2, x0
   1a80c:	add	x4, x21, #0xd5
   1a810:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a814:	add	x3, x3, #0x88
   1a818:	mov	x0, x19
   1a81c:	stp	x22, x4, [x2]
   1a820:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a824:	add	x1, x1, #0xd0
   1a828:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a82c:	mov	x0, x20
   1a830:	mov	x1, #0x10                  	// #16
   1a834:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a838:	mov	x2, x0
   1a83c:	add	x4, x21, #0xd6
   1a840:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a844:	add	x3, x3, #0xe0
   1a848:	mov	x0, x19
   1a84c:	stp	x22, x4, [x2]
   1a850:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a854:	add	x1, x1, #0x128
   1a858:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a85c:	mov	x0, x20
   1a860:	mov	x1, #0x10                  	// #16
   1a864:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a868:	mov	x2, x0
   1a86c:	add	x4, x21, #0xd7
   1a870:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a874:	add	x3, x3, #0x138
   1a878:	mov	x0, x19
   1a87c:	stp	x22, x4, [x2]
   1a880:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a884:	add	x1, x1, #0x188
   1a888:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a88c:	mov	x0, x20
   1a890:	mov	x1, #0x10                  	// #16
   1a894:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a898:	mov	x2, x0
   1a89c:	add	x1, x21, #0xd8
   1a8a0:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a8a4:	add	x3, x3, #0x1a0
   1a8a8:	stp	x25, x1, [x0]
   1a8ac:	mov	x0, x19
   1a8b0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a8b4:	add	x1, x1, #0x1e0
   1a8b8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a8bc:	mov	x0, x20
   1a8c0:	mov	x1, #0x10                  	// #16
   1a8c4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a8c8:	mov	x2, x0
   1a8cc:	add	x4, x21, #0xdc
   1a8d0:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a8d4:	add	x3, x3, #0x1f0
   1a8d8:	mov	x0, x19
   1a8dc:	stp	x22, x4, [x2]
   1a8e0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a8e4:	add	x1, x1, #0x248
   1a8e8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a8ec:	mov	x0, x20
   1a8f0:	mov	x1, #0x10                  	// #16
   1a8f4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a8f8:	mov	x2, x0
   1a8fc:	add	x4, x21, #0xdd
   1a900:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a904:	add	x3, x3, #0x258
   1a908:	mov	x0, x19
   1a90c:	stp	x22, x4, [x2]
   1a910:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a914:	add	x1, x1, #0x2c0
   1a918:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a91c:	mov	x0, x20
   1a920:	mov	x1, #0x10                  	// #16
   1a924:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a928:	mov	x2, x0
   1a92c:	add	x4, x21, #0xde
   1a930:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a934:	add	x3, x3, #0x2d8
   1a938:	mov	x0, x19
   1a93c:	stp	x22, x4, [x2]
   1a940:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a944:	add	x1, x1, #0x308
   1a948:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a94c:	mov	x0, x20
   1a950:	mov	x1, #0x10                  	// #16
   1a954:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a958:	mov	x2, x0
   1a95c:	add	x4, x21, #0xdf
   1a960:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a964:	add	x3, x3, #0x318
   1a968:	mov	x0, x19
   1a96c:	stp	x22, x4, [x2]
   1a970:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a974:	add	x1, x1, #0x338
   1a978:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a97c:	mov	x0, x20
   1a980:	mov	x1, #0x10                  	// #16
   1a984:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a988:	mov	x2, x0
   1a98c:	add	x1, x21, #0xe0
   1a990:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a994:	add	x3, x3, #0x348
   1a998:	stp	x23, x1, [x0]
   1a99c:	mov	x0, x19
   1a9a0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a9a4:	add	x1, x1, #0x360
   1a9a8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a9ac:	mov	x0, x20
   1a9b0:	mov	x1, #0x10                  	// #16
   1a9b4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a9b8:	mov	x2, x0
   1a9bc:	add	x4, x21, #0xe8
   1a9c0:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a9c4:	add	x3, x3, #0x370
   1a9c8:	mov	x0, x19
   1a9cc:	stp	x22, x4, [x2]
   1a9d0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a9d4:	add	x1, x1, #0x3b8
   1a9d8:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1a9dc:	mov	x0, x20
   1a9e0:	mov	x1, #0x10                  	// #16
   1a9e4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1a9e8:	mov	x2, x0
   1a9ec:	add	x4, x21, #0xe9
   1a9f0:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1a9f4:	add	x3, x3, #0x3d0
   1a9f8:	mov	x0, x19
   1a9fc:	stp	x22, x4, [x2]
   1aa00:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1aa04:	add	x1, x1, #0x430
   1aa08:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1aa0c:	add	x21, x21, #0xea
   1aa10:	mov	x0, x20
   1aa14:	mov	x1, #0x10                  	// #16
   1aa18:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1aa1c:	mov	x2, x0
   1aa20:	adrp	x3, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1aa24:	add	x3, x3, #0x440
   1aa28:	mov	x0, x19
   1aa2c:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1aa30:	stp	x22, x21, [x2]
   1aa34:	add	x1, x1, #0x498
   1aa38:	adrp	x21, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   1aa3c:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1aa40:	add	x21, x21, #0xca0
   1aa44:	mov	x0, x20
   1aa48:	mov	x1, #0x18                  	// #24
   1aa4c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1aa50:	mov	x2, x0
   1aa54:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1aa58:	add	x3, x3, #0x180
   1aa5c:	mov	x0, x19
   1aa60:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1aa64:	stp	x21, x19, [x2]
   1aa68:	add	x1, x1, #0x1a8
   1aa6c:	strb	wzr, [x2, #16]
   1aa70:	bl	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1aa74:	mov	x0, x20
   1aa78:	mov	x1, #0x18                  	// #24
   1aa7c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1aa80:	mov	x2, x0
   1aa84:	mov	w4, #0x1                   	// #1
   1aa88:	mov	x0, x19
   1aa8c:	ldp	x23, x24, [sp, #32]
   1aa90:	strb	w4, [x2, #16]
   1aa94:	ldp	x25, x30, [sp, #48]
   1aa98:	stp	x21, x19, [x2]
   1aa9c:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1aaa0:	ldp	x21, x22, [sp, #16]
   1aaa4:	add	x3, x3, #0x1b0
   1aaa8:	ldp	x19, x20, [sp], #64
   1aaac:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1aab0:	add	x1, x1, #0x1e8
   1aab4:	b	1b488 <__sanitizer_set_report_fd@@Base+0x1bc0>
   1aab8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1aabc:	ldrb	w4, [x0, #223]
   1aac0:	ldr	w3, [x0, #52]
   1aac4:	ldr	x2, [x1, #3680]
   1aac8:	ldrb	w1, [x0, #161]
   1aacc:	orr	w1, w1, w4
   1aad0:	str	w3, [x2]
   1aad4:	strb	w1, [x0, #161]
   1aad8:	ret
   1aadc:	nop
   1aae0:	stp	x19, x20, [sp, #-48]!
   1aae4:	mov	x20, x0
   1aae8:	mov	w2, #0xa                   	// #10
   1aaec:	mov	x0, x1
   1aaf0:	mov	x19, x1
   1aaf4:	add	x1, sp, #0x28
   1aaf8:	str	x30, [sp, #16]
   1aafc:	bl	1ce08 <__sanitizer_set_report_fd@@Base+0x3540>
   1ab00:	ldr	x2, [x20, #8]
   1ab04:	ldr	x1, [sp, #40]
   1ab08:	str	x0, [x2]
   1ab0c:	ldrb	w0, [x1]
   1ab10:	cmp	w0, #0x0
   1ab14:	cset	w20, eq  // eq = none
   1ab18:	cbnz	w0, 1ab2c <__sanitizer_set_report_fd@@Base+0x1264>
   1ab1c:	mov	w0, w20
   1ab20:	ldr	x30, [sp, #16]
   1ab24:	ldp	x19, x20, [sp], #48
   1ab28:	ret
   1ab2c:	mov	x1, x19
   1ab30:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1ab34:	add	x0, x0, #0x88
   1ab38:	bl	22c78 <OnPrint@@Base+0x310>
   1ab3c:	mov	w0, w20
   1ab40:	ldr	x30, [sp, #16]
   1ab44:	ldp	x19, x20, [sp], #48
   1ab48:	ret
   1ab4c:	nop
   1ab50:	stp	x19, x20, [sp, #-32]!
   1ab54:	mov	x19, x1
   1ab58:	mov	x20, x0
   1ab5c:	mov	x0, x1
   1ab60:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ab64:	add	x1, x1, #0x500
   1ab68:	str	x30, [sp, #16]
   1ab6c:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1ab70:	cbnz	w0, 1ab90 <__sanitizer_set_report_fd@@Base+0x12c8>
   1ab74:	mov	w1, #0x0                   	// #0
   1ab78:	ldr	x2, [x20, #8]
   1ab7c:	mov	w0, #0x1                   	// #1
   1ab80:	ldr	x30, [sp, #16]
   1ab84:	str	w1, [x2]
   1ab88:	ldp	x19, x20, [sp], #32
   1ab8c:	ret
   1ab90:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ab94:	mov	x0, x19
   1ab98:	add	x1, x1, #0x508
   1ab9c:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1aba0:	cbz	w0, 1ab74 <__sanitizer_set_report_fd@@Base+0x12ac>
   1aba4:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1aba8:	mov	x0, x19
   1abac:	add	x1, x1, #0x510
   1abb0:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1abb4:	cbz	w0, 1ab74 <__sanitizer_set_report_fd@@Base+0x12ac>
   1abb8:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1abbc:	mov	x0, x19
   1abc0:	add	x1, x1, #0x518
   1abc4:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1abc8:	cbz	w0, 1abe0 <__sanitizer_set_report_fd@@Base+0x1318>
   1abcc:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1abd0:	mov	x0, x19
   1abd4:	add	x1, x1, #0x520
   1abd8:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1abdc:	cbnz	w0, 1abe8 <__sanitizer_set_report_fd@@Base+0x1320>
   1abe0:	mov	w1, #0x1                   	// #1
   1abe4:	b	1ab78 <__sanitizer_set_report_fd@@Base+0x12b0>
   1abe8:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1abec:	mov	x0, x19
   1abf0:	add	x1, x1, #0x528
   1abf4:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1abf8:	cbz	w0, 1abe0 <__sanitizer_set_report_fd@@Base+0x1318>
   1abfc:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   1ac00:	mov	x0, x19
   1ac04:	add	x1, x1, #0x3f8
   1ac08:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1ac0c:	cbz	w0, 1ac44 <__sanitizer_set_report_fd@@Base+0x137c>
   1ac10:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1ac14:	mov	x0, x19
   1ac18:	add	x1, x1, #0xb8
   1ac1c:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1ac20:	cbz	w0, 1ac44 <__sanitizer_set_report_fd@@Base+0x137c>
   1ac24:	mov	x1, x19
   1ac28:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   1ac2c:	add	x0, x0, #0xc8
   1ac30:	bl	22c78 <OnPrint@@Base+0x310>
   1ac34:	mov	w0, #0x0                   	// #0
   1ac38:	ldr	x30, [sp, #16]
   1ac3c:	ldp	x19, x20, [sp], #32
   1ac40:	ret
   1ac44:	ldr	x1, [x20, #8]
   1ac48:	mov	w2, #0x2                   	// #2
   1ac4c:	mov	w0, #0x1                   	// #1
   1ac50:	ldr	x30, [sp, #16]
   1ac54:	str	w2, [x1]
   1ac58:	ldp	x19, x20, [sp], #32
   1ac5c:	ret
   1ac60:	stp	x19, x20, [sp, #-32]!
   1ac64:	mov	x19, x1
   1ac68:	mov	x20, x0
   1ac6c:	mov	x0, x1
   1ac70:	mov	w1, #0x25                  	// #37
   1ac74:	str	x30, [sp, #24]
   1ac78:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x2518>
   1ac7c:	cbz	x0, 1ace0 <__sanitizer_set_report_fd@@Base+0x1418>
   1ac80:	mov	w2, #0x0                   	// #0
   1ac84:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ac88:	mov	x0, #0x1000                	// #4096
   1ac8c:	add	x1, x1, #0x4b0
   1ac90:	str	x21, [sp, #16]
   1ac94:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1ac98:	mov	x21, x0
   1ac9c:	mov	x2, #0x1000                	// #4096
   1aca0:	mov	x0, x19
   1aca4:	mov	x1, x21
   1aca8:	bl	199f0 <__sanitizer_set_report_fd@@Base+0x128>
   1acac:	ldrb	w2, [x20, #16]
   1acb0:	mov	x1, x21
   1acb4:	ldr	x0, [x20, #8]
   1acb8:	bl	1b2c0 <__sanitizer_set_report_fd@@Base+0x19f8>
   1acbc:	mov	w19, w0
   1acc0:	mov	x1, #0x1000                	// #4096
   1acc4:	mov	x0, x21
   1acc8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1accc:	mov	w0, w19
   1acd0:	ldr	x21, [sp, #16]
   1acd4:	ldr	x30, [sp, #24]
   1acd8:	ldp	x19, x20, [sp], #32
   1acdc:	ret
   1ace0:	ldrb	w2, [x20, #16]
   1ace4:	mov	x1, x19
   1ace8:	ldr	x0, [x20, #8]
   1acec:	ldr	x30, [sp, #24]
   1acf0:	ldp	x19, x20, [sp], #32
   1acf4:	b	1b2c0 <__sanitizer_set_report_fd@@Base+0x19f8>
   1acf8:	stp	x19, x20, [sp, #-48]!
   1acfc:	stp	x21, x22, [sp, #16]
   1ad00:	adrp	x21, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1ad04:	add	x19, x21, #0xbc0
   1ad08:	str	x30, [sp, #32]
   1ad0c:	ldr	w1, [x19, #160]
   1ad10:	cbnz	w1, 1ad24 <__sanitizer_set_report_fd@@Base+0x145c>
   1ad14:	ldp	x21, x22, [sp, #16]
   1ad18:	ldr	x30, [sp, #32]
   1ad1c:	ldp	x19, x20, [sp], #48
   1ad20:	ret
   1ad24:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ad28:	add	x0, x0, #0x4f0
   1ad2c:	bl	22c78 <OnPrint@@Base+0x310>
   1ad30:	ldr	w0, [x19, #160]
   1ad34:	cmp	w0, #0x0
   1ad38:	b.le	1ad64 <__sanitizer_set_report_fd@@Base+0x149c>
   1ad3c:	adrp	x22, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ad40:	add	x22, x22, #0x520
   1ad44:	mov	x20, #0x0                   	// #0
   1ad48:	ldr	x1, [x19, x20, lsl #3]
   1ad4c:	mov	x0, x22
   1ad50:	add	x20, x20, #0x1
   1ad54:	bl	22c78 <OnPrint@@Base+0x310>
   1ad58:	ldr	w0, [x19, #160]
   1ad5c:	cmp	w0, w20
   1ad60:	b.gt	1ad48 <__sanitizer_set_report_fd@@Base+0x1480>
   1ad64:	add	x21, x21, #0xbc0
   1ad68:	ldr	x30, [sp, #32]
   1ad6c:	str	wzr, [x21, #160]
   1ad70:	ldp	x21, x22, [sp, #16]
   1ad74:	ldp	x19, x20, [sp], #48
   1ad78:	ret
   1ad7c:	nop
   1ad80:	stp	x19, x20, [sp, #-32]!
   1ad84:	stp	x21, x30, [sp, #16]
   1ad88:	mov	x21, x1
   1ad8c:	mov	x0, x21
   1ad90:	mov	x1, x2
   1ad94:	bl	1cd50 <__sanitizer_set_report_fd@@Base+0x3488>
   1ad98:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1ad9c:	mov	x19, x0
   1ada0:	add	x0, x1, #0xbc0
   1ada4:	add	x1, x19, #0x1
   1ada8:	add	x0, x0, #0xa8
   1adac:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1adb0:	mov	x20, x0
   1adb4:	mov	x1, x21
   1adb8:	mov	x2, x19
   1adbc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1adc0:	mov	x0, x20
   1adc4:	strb	wzr, [x20, x19]
   1adc8:	ldp	x21, x30, [sp, #16]
   1adcc:	ldp	x19, x20, [sp], #32
   1add0:	ret
   1add4:	nop
   1add8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1addc:	stp	x19, x20, [sp, #-48]!
   1ade0:	ldr	x1, [x1, #4008]
   1ade4:	stp	x21, x22, [sp, #16]
   1ade8:	mov	x21, x0
   1adec:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1adf0:	add	x0, x0, #0x528
   1adf4:	ldr	x1, [x1]
   1adf8:	str	x30, [sp, #32]
   1adfc:	bl	22c78 <OnPrint@@Base+0x310>
   1ae00:	ldr	w0, [x21, #8]
   1ae04:	cmp	w0, #0x0
   1ae08:	b.le	1ae4c <__sanitizer_set_report_fd@@Base+0x1584>
   1ae0c:	adrp	x22, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ae10:	add	x22, x22, #0x548
   1ae14:	mov	x19, #0x0                   	// #0
   1ae18:	mov	w20, #0x0                   	// #0
   1ae1c:	nop
   1ae20:	ldr	x1, [x21]
   1ae24:	mov	x0, x22
   1ae28:	add	w20, w20, #0x1
   1ae2c:	add	x2, x1, x19
   1ae30:	ldr	x1, [x1, x19]
   1ae34:	add	x19, x19, #0x18
   1ae38:	ldr	x2, [x2, #8]
   1ae3c:	bl	22c78 <OnPrint@@Base+0x310>
   1ae40:	ldr	w1, [x21, #8]
   1ae44:	cmp	w1, w20
   1ae48:	b.gt	1ae20 <__sanitizer_set_report_fd@@Base+0x1558>
   1ae4c:	ldp	x21, x22, [sp, #16]
   1ae50:	ldr	x30, [sp, #32]
   1ae54:	ldp	x19, x20, [sp], #48
   1ae58:	ret
   1ae5c:	nop
   1ae60:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ae64:	add	x0, x0, #0x558
   1ae68:	str	x30, [sp, #-16]!
   1ae6c:	bl	22c78 <OnPrint@@Base+0x310>
   1ae70:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1ae74:	nop
   1ae78:	and	w1, w1, #0xff
   1ae7c:	cmp	w1, #0x20
   1ae80:	cset	w0, eq  // eq = none
   1ae84:	cmp	w1, #0x2c
   1ae88:	csinc	w0, w0, wzr, ne  // ne = any
   1ae8c:	cbnz	w0, 1aea4 <__sanitizer_set_report_fd@@Base+0x15dc>
   1ae90:	cmp	w1, #0x3a
   1ae94:	cset	w0, eq  // eq = none
   1ae98:	cmp	w1, #0xa
   1ae9c:	csinc	w0, w0, wzr, ne  // ne = any
   1aea0:	cbz	w0, 1aea8 <__sanitizer_set_report_fd@@Base+0x15e0>
   1aea4:	ret
   1aea8:	and	w1, w1, #0xfffffffb
   1aeac:	cmp	w1, #0x9
   1aeb0:	cset	w0, eq  // eq = none
   1aeb4:	ret
   1aeb8:	ldp	x4, x2, [x0, #16]
   1aebc:	mov	w5, #0x2c                  	// #44
   1aec0:	ldrb	w1, [x4, x2]
   1aec4:	add	x2, x2, #0x1
   1aec8:	cmp	w1, #0x20
   1aecc:	ccmp	w1, w5, #0x4, ne  // ne = any
   1aed0:	b.eq	1aef4 <__sanitizer_set_report_fd@@Base+0x162c>  // b.none
   1aed4:	sub	w3, w1, #0x9
   1aed8:	cmp	w1, #0x3a
   1aedc:	and	w3, w3, #0xff
   1aee0:	b.eq	1aef4 <__sanitizer_set_report_fd@@Base+0x162c>  // b.none
   1aee4:	cmp	w3, #0x1
   1aee8:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   1aeec:	b.eq	1aef4 <__sanitizer_set_report_fd@@Base+0x162c>  // b.none
   1aef0:	ret
   1aef4:	str	x2, [x0, #24]
   1aef8:	b	1aec0 <__sanitizer_set_report_fd@@Base+0x15f8>
   1aefc:	nop
   1af00:	stp	x19, x20, [sp, #-64]!
   1af04:	mov	x19, x0
   1af08:	ldp	x4, x1, [x0, #16]
   1af0c:	stp	x21, x22, [sp, #16]
   1af10:	stp	x23, x24, [sp, #32]
   1af14:	str	x30, [sp, #48]
   1af18:	add	x21, x4, x1
   1af1c:	ldrb	w2, [x4, x1]
   1af20:	cmp	w2, #0x3d
   1af24:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   1af28:	b.eq	1af8c <__sanitizer_set_report_fd@@Base+0x16c4>  // b.none
   1af2c:	add	x0, x1, #0x1
   1af30:	mov	w5, #0x2c                  	// #44
   1af34:	b	1af70 <__sanitizer_set_report_fd@@Base+0x16a8>
   1af38:	cmp	w2, #0x3a
   1af3c:	b.eq	1af7c <__sanitizer_set_report_fd@@Base+0x16b4>  // b.none
   1af40:	sub	w3, w2, #0x9
   1af44:	and	w3, w3, #0xff
   1af48:	cmp	w3, #0x1
   1af4c:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   1af50:	b.eq	1af7c <__sanitizer_set_report_fd@@Base+0x16b4>  // b.none
   1af54:	str	x0, [x19, #24]
   1af58:	add	x3, x0, #0x1
   1af5c:	ldrb	w2, [x4, x0]
   1af60:	cmp	w2, #0x3d
   1af64:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   1af68:	b.eq	1af90 <__sanitizer_set_report_fd@@Base+0x16c8>  // b.none
   1af6c:	mov	x0, x3
   1af70:	cmp	w2, #0x20
   1af74:	ccmp	w2, w5, #0x4, ne  // ne = any
   1af78:	b.ne	1af38 <__sanitizer_set_report_fd@@Base+0x1670>  // b.any
   1af7c:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1af80:	mov	x0, x19
   1af84:	add	x1, x1, #0x568
   1af88:	bl	1ae60 <__sanitizer_set_report_fd@@Base+0x1598>
   1af8c:	mov	x0, x1
   1af90:	cmp	w2, #0x3d
   1af94:	b.ne	1af7c <__sanitizer_set_report_fd@@Base+0x16b4>  // b.any
   1af98:	sub	x1, x0, x1
   1af9c:	mov	x0, x21
   1afa0:	bl	1cd50 <__sanitizer_set_report_fd@@Base+0x3488>
   1afa4:	adrp	x23, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1afa8:	mov	x20, x0
   1afac:	add	x0, x23, #0xbc0
   1afb0:	add	x1, x20, #0x1
   1afb4:	add	x0, x0, #0xa8
   1afb8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1afbc:	mov	x22, x0
   1afc0:	mov	x1, x21
   1afc4:	mov	x2, x20
   1afc8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1afcc:	strb	wzr, [x22, x20]
   1afd0:	mov	w0, #0x22                  	// #34
   1afd4:	ldp	x4, x3, [x19, #16]
   1afd8:	add	x5, x3, #0x1
   1afdc:	str	x5, [x19, #24]
   1afe0:	add	x21, x4, x5
   1afe4:	ldrb	w2, [x4, x5]
   1afe8:	cmp	w2, #0x27
   1afec:	ccmp	w2, w0, #0x4, ne  // ne = any
   1aff0:	b.eq	1b070 <__sanitizer_set_report_fd@@Base+0x17a8>  // b.none
   1aff4:	cbz	w2, 1b1f0 <__sanitizer_set_report_fd@@Base+0x1928>
   1aff8:	mov	x1, x5
   1affc:	mov	w6, #0x2c                  	// #44
   1b000:	cmp	w2, #0x20
   1b004:	ccmp	w2, w6, #0x4, ne  // ne = any
   1b008:	b.eq	1b038 <__sanitizer_set_report_fd@@Base+0x1770>  // b.none
   1b00c:	cmp	w2, #0x3a
   1b010:	b.eq	1b038 <__sanitizer_set_report_fd@@Base+0x1770>  // b.none
   1b014:	sub	w0, w2, #0x9
   1b018:	and	w0, w0, #0xff
   1b01c:	cmp	w0, #0x1
   1b020:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   1b024:	b.ne	1b160 <__sanitizer_set_report_fd@@Base+0x1898>  // b.any
   1b028:	cmp	w0, #0x1
   1b02c:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   1b030:	b.ne	1b1e0 <__sanitizer_set_report_fd@@Base+0x1918>  // b.any
   1b034:	nop
   1b038:	sub	x1, x1, x5
   1b03c:	mov	x0, x21
   1b040:	bl	1cd50 <__sanitizer_set_report_fd@@Base+0x3488>
   1b044:	mov	x20, x0
   1b048:	add	x0, x23, #0xbc0
   1b04c:	add	x1, x20, #0x1
   1b050:	add	x0, x0, #0xa8
   1b054:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1b058:	mov	x24, x0
   1b05c:	mov	x1, x21
   1b060:	mov	x2, x20
   1b064:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1b068:	strb	wzr, [x24, x20]
   1b06c:	b	1b0e8 <__sanitizer_set_report_fd@@Base+0x1820>
   1b070:	add	x3, x3, #0x2
   1b074:	str	x3, [x19, #24]
   1b078:	add	x21, x4, x3
   1b07c:	ldrb	w1, [x4, x5]
   1b080:	ldrb	w0, [x4, x3]
   1b084:	cbnz	w0, 1b09c <__sanitizer_set_report_fd@@Base+0x17d4>
   1b088:	b	1b1ac <__sanitizer_set_report_fd@@Base+0x18e4>
   1b08c:	add	x3, x3, #0x1
   1b090:	str	x3, [x19, #24]
   1b094:	ldrb	w0, [x4, x3]
   1b098:	cbz	w0, 1b1ac <__sanitizer_set_report_fd@@Base+0x18e4>
   1b09c:	cmp	w0, w1
   1b0a0:	b.ne	1b08c <__sanitizer_set_report_fd@@Base+0x17c4>  // b.any
   1b0a4:	mvn	x1, x5
   1b0a8:	mov	x0, x21
   1b0ac:	add	x1, x1, x3
   1b0b0:	bl	1cd50 <__sanitizer_set_report_fd@@Base+0x3488>
   1b0b4:	add	x1, x23, #0xbc0
   1b0b8:	mov	x20, x0
   1b0bc:	add	x0, x1, #0xa8
   1b0c0:	add	x1, x20, #0x1
   1b0c4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1b0c8:	mov	x24, x0
   1b0cc:	mov	x1, x21
   1b0d0:	mov	x2, x20
   1b0d4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1b0d8:	strb	wzr, [x24, x20]
   1b0dc:	ldr	x0, [x19, #24]
   1b0e0:	add	x0, x0, #0x1
   1b0e4:	str	x0, [x19, #24]
   1b0e8:	ldr	w0, [x19, #8]
   1b0ec:	mov	x20, #0x0                   	// #0
   1b0f0:	mov	w21, #0x0                   	// #0
   1b0f4:	cmp	w0, #0x0
   1b0f8:	b.gt	1b114 <__sanitizer_set_report_fd@@Base+0x184c>
   1b0fc:	b	1b178 <__sanitizer_set_report_fd@@Base+0x18b0>
   1b100:	ldr	w1, [x19, #8]
   1b104:	add	w21, w21, #0x1
   1b108:	add	x20, x20, #0x18
   1b10c:	cmp	w1, w21
   1b110:	b.le	1b178 <__sanitizer_set_report_fd@@Base+0x18b0>
   1b114:	ldr	x1, [x19]
   1b118:	mov	x0, x22
   1b11c:	ldr	x1, [x1, x20]
   1b120:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1b124:	cbnz	w0, 1b100 <__sanitizer_set_report_fd@@Base+0x1838>
   1b128:	ldr	x0, [x19]
   1b12c:	mov	x1, x24
   1b130:	add	x20, x0, x20
   1b134:	ldr	x0, [x20, #16]
   1b138:	ldr	x2, [x0]
   1b13c:	ldr	x2, [x2]
   1b140:	blr	x2
   1b144:	tst	w0, #0xff
   1b148:	b.eq	1b1f8 <__sanitizer_set_report_fd@@Base+0x1930>  // b.none
   1b14c:	ldp	x21, x22, [sp, #16]
   1b150:	ldp	x23, x24, [sp, #32]
   1b154:	ldr	x30, [sp, #48]
   1b158:	ldp	x19, x20, [sp], #64
   1b15c:	ret
   1b160:	add	x0, x1, #0x1
   1b164:	str	x0, [x19, #24]
   1b168:	ldrb	w2, [x4, x0]
   1b16c:	cbz	w2, 1b1bc <__sanitizer_set_report_fd@@Base+0x18f4>
   1b170:	mov	x1, x0
   1b174:	b	1b000 <__sanitizer_set_report_fd@@Base+0x1738>
   1b178:	add	x23, x23, #0xbc0
   1b17c:	ldr	w0, [x23, #160]
   1b180:	sxtw	x3, w0
   1b184:	cmp	x3, #0x13
   1b188:	b.hi	1b1c4 <__sanitizer_set_report_fd@@Base+0x18fc>  // b.pmore
   1b18c:	add	w0, w0, #0x1
   1b190:	str	x22, [x23, x3, lsl #3]
   1b194:	str	w0, [x23, #160]
   1b198:	ldp	x21, x22, [sp, #16]
   1b19c:	ldp	x23, x24, [sp, #32]
   1b1a0:	ldr	x30, [sp, #48]
   1b1a4:	ldp	x19, x20, [sp], #64
   1b1a8:	ret
   1b1ac:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b1b0:	mov	x0, x19
   1b1b4:	add	x1, x1, #0x628
   1b1b8:	bl	1ae60 <__sanitizer_set_report_fd@@Base+0x1598>
   1b1bc:	sub	x1, x1, x3
   1b1c0:	b	1b03c <__sanitizer_set_report_fd@@Base+0x1774>
   1b1c4:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b1c8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b1cc:	add	x2, x2, #0x598
   1b1d0:	add	x0, x0, #0x5c8
   1b1d4:	mov	x4, #0x14                  	// #20
   1b1d8:	mov	w1, #0x1e                  	// #30
   1b1dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b1e0:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b1e4:	mov	x0, x19
   1b1e8:	add	x1, x1, #0x578
   1b1ec:	bl	1ae60 <__sanitizer_set_report_fd@@Base+0x1598>
   1b1f0:	mov	x1, #0x0                   	// #0
   1b1f4:	b	1b03c <__sanitizer_set_report_fd@@Base+0x1774>
   1b1f8:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b1fc:	mov	x0, x19
   1b200:	add	x1, x1, #0x610
   1b204:	bl	1ae60 <__sanitizer_set_report_fd@@Base+0x1598>
   1b208:	stp	x19, x20, [sp, #-32]!
   1b20c:	mov	x19, x0
   1b210:	mov	w20, #0x2c                  	// #44
   1b214:	str	x30, [sp, #16]
   1b218:	ldp	x0, x3, [x19, #16]
   1b21c:	nop
   1b220:	ldrb	w1, [x0, x3]
   1b224:	add	x3, x3, #0x1
   1b228:	cmp	w1, #0x20
   1b22c:	ccmp	w1, w20, #0x4, ne  // ne = any
   1b230:	b.eq	1b260 <__sanitizer_set_report_fd@@Base+0x1998>  // b.none
   1b234:	sub	w2, w1, #0x9
   1b238:	cmp	w1, #0x3a
   1b23c:	and	w2, w2, #0xff
   1b240:	b.eq	1b260 <__sanitizer_set_report_fd@@Base+0x1998>  // b.none
   1b244:	cmp	w2, #0x1
   1b248:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   1b24c:	b.eq	1b260 <__sanitizer_set_report_fd@@Base+0x1998>  // b.none
   1b250:	cbz	w1, 1b268 <__sanitizer_set_report_fd@@Base+0x19a0>
   1b254:	mov	x0, x19
   1b258:	bl	1af00 <__sanitizer_set_report_fd@@Base+0x1638>
   1b25c:	b	1b218 <__sanitizer_set_report_fd@@Base+0x1950>
   1b260:	str	x3, [x19, #24]
   1b264:	b	1b220 <__sanitizer_set_report_fd@@Base+0x1958>
   1b268:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b26c:	ldr	x0, [x0, #4040]
   1b270:	ldr	w1, [x0, #36]
   1b274:	cmp	w1, #0x0
   1b278:	b.gt	1b284 <__sanitizer_set_report_fd@@Base+0x19bc>
   1b27c:	mov	w1, #0x1                   	// #1
   1b280:	str	w1, [x0, #36]
   1b284:	ldr	x30, [sp, #16]
   1b288:	ldp	x19, x20, [sp], #32
   1b28c:	ret
   1b290:	cbz	x1, 1b2bc <__sanitizer_set_report_fd@@Base+0x19f4>
   1b294:	stp	x19, x20, [sp, #-32]!
   1b298:	mov	x19, x0
   1b29c:	stp	x21, x30, [sp, #16]
   1b2a0:	ldp	x21, x20, [x0, #16]
   1b2a4:	stp	x1, xzr, [x0, #16]
   1b2a8:	bl	1b208 <__sanitizer_set_report_fd@@Base+0x1940>
   1b2ac:	stp	x21, x20, [x19, #16]
   1b2b0:	ldp	x21, x30, [sp, #16]
   1b2b4:	ldp	x19, x20, [sp], #32
   1b2b8:	ret
   1b2bc:	ret
   1b2c0:	stp	x19, x20, [sp, #-80]!
   1b2c4:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b2c8:	mov	x19, x0
   1b2cc:	ldr	x20, [x20, #4000]
   1b2d0:	stp	x21, x22, [sp, #16]
   1b2d4:	mov	x21, x1
   1b2d8:	and	w22, w2, #0xff
   1b2dc:	ldr	x0, [x20]
   1b2e0:	str	x30, [sp, #32]
   1b2e4:	cbz	x0, 1b36c <__sanitizer_set_report_fd@@Base+0x1aa4>
   1b2e8:	cmp	x0, #0x8, lsl #12
   1b2ec:	add	x5, sp, #0x34
   1b2f0:	add	x3, sp, #0x48
   1b2f4:	add	x2, sp, #0x40
   1b2f8:	add	x1, sp, #0x38
   1b2fc:	mov	x4, #0x8000                	// #32768
   1b300:	csel	x4, x0, x4, cs  // cs = hs, nlast
   1b304:	mov	x0, x21
   1b308:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   1b30c:	ands	w20, w0, #0xff
   1b310:	b.ne	1b32c <__sanitizer_set_report_fd@@Base+0x1a64>  // b.any
   1b314:	cbz	w22, 1b378 <__sanitizer_set_report_fd@@Base+0x1ab0>
   1b318:	mov	w0, w22
   1b31c:	ldp	x21, x22, [sp, #16]
   1b320:	ldr	x30, [sp, #32]
   1b324:	ldp	x19, x20, [sp], #80
   1b328:	ret
   1b32c:	ldr	x0, [sp, #56]
   1b330:	cbz	x0, 1b34c <__sanitizer_set_report_fd@@Base+0x1a84>
   1b334:	ldp	x22, x21, [x19, #16]
   1b338:	stp	x0, xzr, [x19, #16]
   1b33c:	mov	x0, x19
   1b340:	bl	1b208 <__sanitizer_set_report_fd@@Base+0x1940>
   1b344:	stp	x22, x21, [x19, #16]
   1b348:	ldr	x0, [sp, #56]
   1b34c:	mov	w22, w20
   1b350:	ldr	x1, [sp, #64]
   1b354:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1b358:	mov	w0, w22
   1b35c:	ldp	x21, x22, [sp, #16]
   1b360:	ldr	x30, [sp, #32]
   1b364:	ldp	x19, x20, [sp], #80
   1b368:	ret
   1b36c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1b370:	str	x0, [x20]
   1b374:	b	1b2e8 <__sanitizer_set_report_fd@@Base+0x1a20>
   1b378:	ldr	w2, [sp, #52]
   1b37c:	mov	x1, x21
   1b380:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b384:	add	x0, x0, #0x640
   1b388:	bl	22c78 <OnPrint@@Base+0x310>
   1b38c:	mov	w0, w22
   1b390:	ldp	x21, x22, [sp, #16]
   1b394:	ldr	x30, [sp, #32]
   1b398:	ldp	x19, x20, [sp], #80
   1b39c:	ret
   1b3a0:	stp	x19, x20, [sp, #-48]!
   1b3a4:	stp	x21, x22, [sp, #16]
   1b3a8:	mov	x21, x0
   1b3ac:	ldr	w0, [x0, #8]
   1b3b0:	str	x30, [sp, #40]
   1b3b4:	mov	x22, x1
   1b3b8:	cmp	w0, #0x0
   1b3bc:	b.le	1b430 <__sanitizer_set_report_fd@@Base+0x1b68>
   1b3c0:	mov	x19, #0x0                   	// #0
   1b3c4:	mov	w20, #0x0                   	// #0
   1b3c8:	str	x23, [sp, #32]
   1b3cc:	mov	x23, x2
   1b3d0:	b	1b3e8 <__sanitizer_set_report_fd@@Base+0x1b20>
   1b3d4:	ldr	w0, [x21, #8]
   1b3d8:	add	w20, w20, #0x1
   1b3dc:	add	x19, x19, #0x18
   1b3e0:	cmp	w0, w20
   1b3e4:	b.le	1b42c <__sanitizer_set_report_fd@@Base+0x1b64>
   1b3e8:	ldr	x3, [x21]
   1b3ec:	mov	x0, x22
   1b3f0:	ldr	x1, [x3, x19]
   1b3f4:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1b3f8:	cbnz	w0, 1b3d4 <__sanitizer_set_report_fd@@Base+0x1b0c>
   1b3fc:	ldr	x0, [x21]
   1b400:	mov	x1, x23
   1b404:	ldp	x21, x22, [sp, #16]
   1b408:	add	x19, x0, x19
   1b40c:	ldr	x23, [sp, #32]
   1b410:	ldr	x0, [x19, #16]
   1b414:	ldr	x30, [sp, #40]
   1b418:	ldr	x2, [x0]
   1b41c:	ldp	x19, x20, [sp], #48
   1b420:	ldr	x2, [x2]
   1b424:	mov	x16, x2
   1b428:	br	x16
   1b42c:	ldr	x23, [sp, #32]
   1b430:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b434:	add	x1, x1, #0xbc0
   1b438:	ldr	w0, [x1, #160]
   1b43c:	sxtw	x3, w0
   1b440:	cmp	x3, #0x13
   1b444:	b.hi	1b468 <__sanitizer_set_report_fd@@Base+0x1ba0>  // b.pmore
   1b448:	add	w2, w0, #0x1
   1b44c:	str	x22, [x1, x3, lsl #3]
   1b450:	ldp	x21, x22, [sp, #16]
   1b454:	mov	w0, #0x1                   	// #1
   1b458:	ldr	x30, [sp, #40]
   1b45c:	str	w2, [x1, #160]
   1b460:	ldp	x19, x20, [sp], #48
   1b464:	ret
   1b468:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b46c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b470:	add	x2, x2, #0x598
   1b474:	add	x0, x0, #0x5c8
   1b478:	mov	x4, #0x14                  	// #20
   1b47c:	mov	w1, #0x1e                  	// #30
   1b480:	str	x23, [sp, #32]
   1b484:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b488:	ldr	w4, [x0, #8]
   1b48c:	sxtw	x5, w4
   1b490:	cmp	x5, #0xc7
   1b494:	b.hi	1b4bc <__sanitizer_set_report_fd@@Base+0x1bf4>  // b.pmore
   1b498:	mov	w5, #0x18                  	// #24
   1b49c:	add	w7, w4, #0x1
   1b4a0:	ldr	x6, [x0]
   1b4a4:	smull	x4, w4, w5
   1b4a8:	add	x5, x6, x4
   1b4ac:	str	x1, [x6, x4]
   1b4b0:	stp	x3, x2, [x5, #8]
   1b4b4:	str	w7, [x0, #8]
   1b4b8:	ret
   1b4bc:	str	x30, [sp, #-16]!
   1b4c0:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b4c4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1b4c8:	mov	x3, x5
   1b4cc:	add	x2, x2, #0x670
   1b4d0:	add	x0, x0, #0x5c8
   1b4d4:	mov	x4, #0xc8                  	// #200
   1b4d8:	mov	w1, #0x9e                  	// #158
   1b4dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b4e0:	stp	x19, x30, [sp, #-16]!
   1b4e4:	mov	x19, x0
   1b4e8:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1b4ec:	add	x0, x1, #0xbc0
   1b4f0:	mov	x1, #0x12c0                	// #4800
   1b4f4:	str	wzr, [x19, #8]
   1b4f8:	add	x0, x0, #0xa8
   1b4fc:	stp	xzr, xzr, [x19, #16]
   1b500:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   1b504:	str	x0, [x19]
   1b508:	ldp	x19, x30, [sp], #16
   1b50c:	ret
   1b510:	cbz	x2, 1b538 <__sanitizer_set_report_fd@@Base+0x1c70>
   1b514:	add	x3, x0, x2
   1b518:	b	1b528 <__sanitizer_set_report_fd@@Base+0x1c60>
   1b51c:	add	x0, x0, #0x1
   1b520:	cmp	x3, x0
   1b524:	b.eq	1b538 <__sanitizer_set_report_fd@@Base+0x1c70>  // b.none
   1b528:	ldrb	w2, [x0]
   1b52c:	cmp	w2, w1
   1b530:	b.ne	1b51c <__sanitizer_set_report_fd@@Base+0x1c54>  // b.any
   1b534:	ret
   1b538:	mov	x0, #0x0                   	// #0
   1b53c:	ret
   1b540:	mov	x3, x0
   1b544:	cbz	x2, 1b56c <__sanitizer_set_report_fd@@Base+0x1ca4>
   1b548:	add	x4, x0, x2
   1b54c:	mov	x0, #0x0                   	// #0
   1b550:	ldrb	w2, [x3]
   1b554:	cmp	w1, w2
   1b558:	csel	x0, x0, x3, ne  // ne = any
   1b55c:	add	x3, x3, #0x1
   1b560:	cmp	x4, x3
   1b564:	b.ne	1b550 <__sanitizer_set_report_fd@@Base+0x1c88>  // b.any
   1b568:	ret
   1b56c:	mov	x0, #0x0                   	// #0
   1b570:	ret
   1b574:	nop
   1b578:	cbz	x2, 1b5ac <__sanitizer_set_report_fd@@Base+0x1ce4>
   1b57c:	mov	x3, #0x0                   	// #0
   1b580:	b	1b58c <__sanitizer_set_report_fd@@Base+0x1cc4>
   1b584:	cmp	x2, x3
   1b588:	b.eq	1b5ac <__sanitizer_set_report_fd@@Base+0x1ce4>  // b.none
   1b58c:	ldrb	w5, [x0, x3]
   1b590:	ldrb	w4, [x1, x3]
   1b594:	add	x3, x3, #0x1
   1b598:	cmp	w5, w4
   1b59c:	b.eq	1b584 <__sanitizer_set_report_fd@@Base+0x1cbc>  // b.none
   1b5a0:	mov	w0, #0x1                   	// #1
   1b5a4:	cneg	w0, w0, cc  // cc = lo, ul, last
   1b5a8:	ret
   1b5ac:	mov	w0, #0x0                   	// #0
   1b5b0:	ret
   1b5b4:	nop
   1b5b8:	cbz	x2, 1b720 <__sanitizer_set_report_fd@@Base+0x1e58>
   1b5bc:	add	x3, x0, #0xf
   1b5c0:	sub	x4, x2, #0x1
   1b5c4:	sub	x3, x3, x1
   1b5c8:	cmp	x3, #0x1e
   1b5cc:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   1b5d0:	b.ls	1b724 <__sanitizer_set_report_fd@@Base+0x1e5c>  // b.plast
   1b5d4:	and	x4, x2, #0xfffffffffffffff0
   1b5d8:	mov	x3, #0x0                   	// #0
   1b5dc:	nop
   1b5e0:	ldr	q0, [x1, x3]
   1b5e4:	str	q0, [x0, x3]
   1b5e8:	add	x3, x3, #0x10
   1b5ec:	cmp	x3, x4
   1b5f0:	b.ne	1b5e0 <__sanitizer_set_report_fd@@Base+0x1d18>  // b.any
   1b5f4:	tst	x2, #0xf
   1b5f8:	and	x3, x2, #0xfffffffffffffff0
   1b5fc:	b.eq	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.none
   1b600:	ldrb	w5, [x1, x3]
   1b604:	add	x4, x3, #0x1
   1b608:	strb	w5, [x0, x3]
   1b60c:	cmp	x2, x4
   1b610:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b614:	ldrb	w6, [x1, x4]
   1b618:	add	x5, x3, #0x2
   1b61c:	strb	w6, [x0, x4]
   1b620:	cmp	x2, x5
   1b624:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b628:	ldrb	w6, [x1, x5]
   1b62c:	add	x4, x3, #0x3
   1b630:	strb	w6, [x0, x5]
   1b634:	cmp	x2, x4
   1b638:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b63c:	ldrb	w6, [x1, x4]
   1b640:	add	x5, x3, #0x4
   1b644:	strb	w6, [x0, x4]
   1b648:	cmp	x2, x5
   1b64c:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b650:	ldrb	w6, [x1, x5]
   1b654:	add	x4, x3, #0x5
   1b658:	strb	w6, [x0, x5]
   1b65c:	cmp	x2, x4
   1b660:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b664:	ldrb	w6, [x1, x4]
   1b668:	add	x5, x3, #0x6
   1b66c:	strb	w6, [x0, x4]
   1b670:	cmp	x2, x5
   1b674:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b678:	ldrb	w6, [x1, x5]
   1b67c:	add	x4, x3, #0x7
   1b680:	strb	w6, [x0, x5]
   1b684:	cmp	x2, x4
   1b688:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b68c:	ldrb	w6, [x1, x4]
   1b690:	add	x5, x3, #0x8
   1b694:	strb	w6, [x0, x4]
   1b698:	cmp	x2, x5
   1b69c:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b6a0:	ldrb	w6, [x1, x5]
   1b6a4:	add	x4, x3, #0x9
   1b6a8:	strb	w6, [x0, x5]
   1b6ac:	cmp	x2, x4
   1b6b0:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b6b4:	ldrb	w6, [x1, x4]
   1b6b8:	add	x5, x3, #0xa
   1b6bc:	strb	w6, [x0, x4]
   1b6c0:	cmp	x2, x5
   1b6c4:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b6c8:	ldrb	w6, [x1, x5]
   1b6cc:	add	x4, x3, #0xb
   1b6d0:	strb	w6, [x0, x5]
   1b6d4:	cmp	x2, x4
   1b6d8:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b6dc:	ldrb	w6, [x1, x4]
   1b6e0:	add	x5, x3, #0xc
   1b6e4:	strb	w6, [x0, x4]
   1b6e8:	cmp	x2, x5
   1b6ec:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b6f0:	ldrb	w6, [x1, x5]
   1b6f4:	add	x4, x3, #0xd
   1b6f8:	strb	w6, [x0, x5]
   1b6fc:	cmp	x2, x4
   1b700:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b704:	ldrb	w5, [x1, x4]
   1b708:	add	x3, x3, #0xe
   1b70c:	strb	w5, [x0, x4]
   1b710:	cmp	x2, x3
   1b714:	b.ls	1b720 <__sanitizer_set_report_fd@@Base+0x1e58>  // b.plast
   1b718:	ldrb	w1, [x1, x3]
   1b71c:	strb	w1, [x0, x3]
   1b720:	ret
   1b724:	mov	x3, #0x0                   	// #0
   1b728:	ldrb	w4, [x1, x3]
   1b72c:	strb	w4, [x0, x3]
   1b730:	add	x3, x3, #0x1
   1b734:	cmp	x2, x3
   1b738:	b.ne	1b728 <__sanitizer_set_report_fd@@Base+0x1e60>  // b.any
   1b73c:	ret
   1b740:	cmp	x0, x1
   1b744:	b.cs	1b8b4 <__sanitizer_set_report_fd@@Base+0x1fec>  // b.hs, b.nlast
   1b748:	cmp	x2, #0x0
   1b74c:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b750:	add	x3, x0, #0xf
   1b754:	sub	x4, x2, #0x1
   1b758:	sub	x3, x3, x1
   1b75c:	cmp	x3, #0x1e
   1b760:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   1b764:	b.ls	1ba60 <__sanitizer_set_report_fd@@Base+0x2198>  // b.plast
   1b768:	and	x4, x2, #0xfffffffffffffff0
   1b76c:	mov	x3, #0x0                   	// #0
   1b770:	ldr	q0, [x1, x3]
   1b774:	str	q0, [x0, x3]
   1b778:	add	x3, x3, #0x10
   1b77c:	cmp	x3, x4
   1b780:	b.ne	1b770 <__sanitizer_set_report_fd@@Base+0x1ea8>  // b.any
   1b784:	tst	x2, #0xf
   1b788:	and	x3, x2, #0xfffffffffffffff0
   1b78c:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b790:	ldrb	w5, [x1, x3]
   1b794:	add	x4, x3, #0x1
   1b798:	strb	w5, [x0, x3]
   1b79c:	cmp	x4, x2
   1b7a0:	b.ge	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.tcont
   1b7a4:	ldrb	w6, [x1, x4]
   1b7a8:	add	x5, x3, #0x2
   1b7ac:	strb	w6, [x0, x4]
   1b7b0:	cmp	x2, x5
   1b7b4:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b7b8:	ldrb	w6, [x1, x5]
   1b7bc:	add	x4, x3, #0x3
   1b7c0:	strb	w6, [x0, x5]
   1b7c4:	cmp	x2, x4
   1b7c8:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b7cc:	ldrb	w6, [x1, x4]
   1b7d0:	add	x5, x3, #0x4
   1b7d4:	strb	w6, [x0, x4]
   1b7d8:	cmp	x2, x5
   1b7dc:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b7e0:	ldrb	w6, [x1, x5]
   1b7e4:	add	x4, x3, #0x5
   1b7e8:	strb	w6, [x0, x5]
   1b7ec:	cmp	x2, x4
   1b7f0:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b7f4:	ldrb	w6, [x1, x4]
   1b7f8:	add	x5, x3, #0x6
   1b7fc:	strb	w6, [x0, x4]
   1b800:	cmp	x2, x5
   1b804:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b808:	ldrb	w6, [x1, x5]
   1b80c:	add	x4, x3, #0x7
   1b810:	strb	w6, [x0, x5]
   1b814:	cmp	x2, x4
   1b818:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b81c:	ldrb	w6, [x1, x4]
   1b820:	add	x5, x3, #0x8
   1b824:	strb	w6, [x0, x4]
   1b828:	cmp	x2, x5
   1b82c:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b830:	ldrb	w6, [x1, x5]
   1b834:	add	x4, x3, #0x9
   1b838:	strb	w6, [x0, x5]
   1b83c:	cmp	x2, x4
   1b840:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b844:	ldrb	w6, [x1, x4]
   1b848:	add	x5, x3, #0xa
   1b84c:	strb	w6, [x0, x4]
   1b850:	cmp	x2, x5
   1b854:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b858:	ldrb	w6, [x1, x5]
   1b85c:	add	x4, x3, #0xb
   1b860:	strb	w6, [x0, x5]
   1b864:	cmp	x2, x4
   1b868:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b86c:	ldrb	w6, [x1, x4]
   1b870:	add	x5, x3, #0xc
   1b874:	strb	w6, [x0, x4]
   1b878:	cmp	x2, x5
   1b87c:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b880:	ldrb	w6, [x1, x5]
   1b884:	add	x4, x3, #0xd
   1b888:	strb	w6, [x0, x5]
   1b88c:	cmp	x2, x4
   1b890:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b894:	ldrb	w5, [x1, x4]
   1b898:	add	x3, x3, #0xe
   1b89c:	strb	w5, [x0, x4]
   1b8a0:	cmp	x2, x3
   1b8a4:	b.le	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b8a8:	ldrb	w1, [x1, x3]
   1b8ac:	strb	w1, [x0, x3]
   1b8b0:	ret
   1b8b4:	cmp	x2, #0x0
   1b8b8:	ccmp	x0, x1, #0x0, gt
   1b8bc:	b.ls	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.plast
   1b8c0:	sub	x4, x2, #0x10
   1b8c4:	add	x3, x0, x2
   1b8c8:	add	x7, x1, x4
   1b8cc:	add	x4, x0, x4
   1b8d0:	cmp	x3, x7
   1b8d4:	add	x3, x1, x2
   1b8d8:	ccmp	x3, x4, #0x0, hi  // hi = pmore
   1b8dc:	sub	x5, x2, #0x1
   1b8e0:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1b8e4:	b.ls	1ba34 <__sanitizer_set_report_fd@@Base+0x216c>  // b.plast
   1b8e8:	neg	x6, x2, lsr #4
   1b8ec:	mov	x3, #0x0                   	// #0
   1b8f0:	lsl	x6, x6, #4
   1b8f4:	nop
   1b8f8:	ldr	q0, [x7, x3]
   1b8fc:	str	q0, [x4, x3]
   1b900:	sub	x3, x3, #0x10
   1b904:	cmp	x3, x6
   1b908:	b.ne	1b8f8 <__sanitizer_set_report_fd@@Base+0x2030>  // b.any
   1b90c:	and	x4, x2, #0xfffffffffffffff0
   1b910:	sub	x3, x5, x4
   1b914:	cmp	x2, x4
   1b918:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b91c:	ldrb	w4, [x1, x3]
   1b920:	sub	x2, x3, #0x1
   1b924:	strb	w4, [x0, x3]
   1b928:	cbz	x3, 1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1b92c:	ldrb	w4, [x1, x2]
   1b930:	cmp	x3, #0x1
   1b934:	strb	w4, [x0, x2]
   1b938:	sub	x2, x3, #0x2
   1b93c:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b940:	ldrb	w4, [x1, x2]
   1b944:	cmp	x3, #0x2
   1b948:	strb	w4, [x0, x2]
   1b94c:	sub	x2, x3, #0x3
   1b950:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b954:	ldrb	w4, [x1, x2]
   1b958:	cmp	x3, #0x3
   1b95c:	strb	w4, [x0, x2]
   1b960:	sub	x2, x3, #0x4
   1b964:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b968:	ldrb	w4, [x1, x2]
   1b96c:	cmp	x3, #0x4
   1b970:	strb	w4, [x0, x2]
   1b974:	sub	x2, x3, #0x5
   1b978:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b97c:	ldrb	w4, [x1, x2]
   1b980:	cmp	x3, #0x5
   1b984:	strb	w4, [x0, x2]
   1b988:	sub	x2, x3, #0x6
   1b98c:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b990:	ldrb	w4, [x1, x2]
   1b994:	cmp	x3, #0x6
   1b998:	strb	w4, [x0, x2]
   1b99c:	sub	x2, x3, #0x7
   1b9a0:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b9a4:	ldrb	w4, [x1, x2]
   1b9a8:	cmp	x3, #0x7
   1b9ac:	strb	w4, [x0, x2]
   1b9b0:	sub	x2, x3, #0x8
   1b9b4:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b9b8:	ldrb	w4, [x1, x2]
   1b9bc:	cmp	x3, #0x8
   1b9c0:	strb	w4, [x0, x2]
   1b9c4:	sub	x2, x3, #0x9
   1b9c8:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b9cc:	ldrb	w4, [x1, x2]
   1b9d0:	cmp	x3, #0x9
   1b9d4:	strb	w4, [x0, x2]
   1b9d8:	sub	x2, x3, #0xa
   1b9dc:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b9e0:	ldrb	w4, [x1, x2]
   1b9e4:	cmp	x3, #0xa
   1b9e8:	strb	w4, [x0, x2]
   1b9ec:	sub	x2, x3, #0xb
   1b9f0:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1b9f4:	ldrb	w4, [x1, x2]
   1b9f8:	cmp	x3, #0xb
   1b9fc:	strb	w4, [x0, x2]
   1ba00:	sub	x2, x3, #0xc
   1ba04:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1ba08:	ldrb	w4, [x1, x2]
   1ba0c:	cmp	x3, #0xc
   1ba10:	strb	w4, [x0, x2]
   1ba14:	sub	x2, x3, #0xd
   1ba18:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1ba1c:	ldrb	w4, [x1, x2]
   1ba20:	cmp	x3, #0xd
   1ba24:	strb	w4, [x0, x2]
   1ba28:	sub	x3, x3, #0xe
   1ba2c:	b.ne	1b8a8 <__sanitizer_set_report_fd@@Base+0x1fe0>  // b.any
   1ba30:	ret
   1ba34:	ldrb	w2, [x1, x5]
   1ba38:	strb	w2, [x0, x5]
   1ba3c:	sub	x5, x5, #0x1
   1ba40:	cmn	x5, #0x1
   1ba44:	b.eq	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.none
   1ba48:	ldrb	w2, [x1, x5]
   1ba4c:	strb	w2, [x0, x5]
   1ba50:	sub	x5, x5, #0x1
   1ba54:	cmn	x5, #0x1
   1ba58:	b.ne	1ba34 <__sanitizer_set_report_fd@@Base+0x216c>  // b.any
   1ba5c:	b	1b8b0 <__sanitizer_set_report_fd@@Base+0x1fe8>
   1ba60:	mov	x3, #0x0                   	// #0
   1ba64:	nop
   1ba68:	ldrb	w4, [x1, x3]
   1ba6c:	strb	w4, [x0, x3]
   1ba70:	add	x3, x3, #0x1
   1ba74:	cmp	x2, x3
   1ba78:	b.ne	1ba68 <__sanitizer_set_report_fd@@Base+0x21a0>  // b.any
   1ba7c:	ret
   1ba80:	orr	x3, x0, x2
   1ba84:	ands	x3, x3, #0xf
   1ba88:	b.eq	1bab0 <__sanitizer_set_report_fd@@Base+0x21e8>  // b.none
   1ba8c:	cbz	x2, 1baac <__sanitizer_set_report_fd@@Base+0x21e4>
   1ba90:	and	w3, w1, #0xff
   1ba94:	add	x2, x0, x2
   1ba98:	mov	x1, x0
   1ba9c:	nop
   1baa0:	strb	w3, [x1], #1
   1baa4:	cmp	x1, x2
   1baa8:	b.ne	1baa0 <__sanitizer_set_report_fd@@Base+0x21d8>  // b.any
   1baac:	ret
   1bab0:	sxtw	x4, w1
   1bab4:	sbfiz	x1, x1, #8, #32
   1bab8:	orr	x1, x4, x1
   1babc:	and	x2, x2, #0xfffffffffffffff8
   1bac0:	add	x4, x0, x2
   1bac4:	orr	x1, x1, x1, lsl #16
   1bac8:	cmp	x0, x4
   1bacc:	orr	x4, x1, x1, lsl #32
   1bad0:	b.cs	1baac <__sanitizer_set_report_fd@@Base+0x21e4>  // b.hs, b.nlast
   1bad4:	sub	x1, x2, #0x1
   1bad8:	dup	v0.2d, x4
   1badc:	lsr	x1, x1, #4
   1bae0:	add	x1, x1, #0x1
   1bae4:	nop
   1bae8:	lsl	x2, x3, #4
   1baec:	add	x3, x3, #0x1
   1baf0:	cmp	x1, x3
   1baf4:	str	q0, [x0, x2]
   1baf8:	b.hi	1bae8 <__sanitizer_set_report_fd@@Base+0x2220>  // b.pmore
   1bafc:	ret
   1bb00:	ldrb	w4, [x0]
   1bb04:	mov	x6, x0
   1bb08:	cbz	w4, 1bb4c <__sanitizer_set_report_fd@@Base+0x2284>
   1bb0c:	ldrb	w5, [x1]
   1bb10:	mov	x0, #0x0                   	// #0
   1bb14:	nop
   1bb18:	cmp	w4, w5
   1bb1c:	b.eq	1bb38 <__sanitizer_set_report_fd@@Base+0x2270>  // b.none
   1bb20:	mov	w2, w5
   1bb24:	mov	x3, x1
   1bb28:	cbz	w2, 1bb3c <__sanitizer_set_report_fd@@Base+0x2274>
   1bb2c:	ldrb	w2, [x3, #1]!
   1bb30:	cmp	w4, w2
   1bb34:	b.ne	1bb28 <__sanitizer_set_report_fd@@Base+0x2260>  // b.any
   1bb38:	ret
   1bb3c:	add	x0, x0, #0x1
   1bb40:	ldrb	w4, [x6, x0]
   1bb44:	cbnz	w4, 1bb18 <__sanitizer_set_report_fd@@Base+0x2250>
   1bb48:	ret
   1bb4c:	mov	x0, #0x0                   	// #0
   1bb50:	ret
   1bb54:	nop
   1bb58:	stp	x19, x20, [sp, #-32]!
   1bb5c:	mov	x20, x0
   1bb60:	str	x30, [sp, #24]
   1bb64:	ldrb	w0, [x0]
   1bb68:	cbz	w0, 1bd30 <__sanitizer_set_report_fd@@Base+0x2468>
   1bb6c:	mov	x19, #0x0                   	// #0
   1bb70:	str	x21, [sp, #16]
   1bb74:	nop
   1bb78:	mov	x21, x19
   1bb7c:	add	x19, x19, #0x1
   1bb80:	ldrb	w0, [x20, x19]
   1bb84:	cbnz	w0, 1bb78 <__sanitizer_set_report_fd@@Base+0x22b0>
   1bb88:	mov	x1, #0x0                   	// #0
   1bb8c:	add	x0, x21, #0x2
   1bb90:	mov	x2, #0x0                   	// #0
   1bb94:	bl	12f40 <__sancov_default_options@@Base+0x470>
   1bb98:	add	x1, x20, #0xf
   1bb9c:	sub	x1, x1, x0
   1bba0:	cmp	x1, #0x1e
   1bba4:	ccmp	x21, #0xe, #0x0, hi  // hi = pmore
   1bba8:	b.ls	1bd10 <__sanitizer_set_report_fd@@Base+0x2448>  // b.plast
   1bbac:	and	x2, x19, #0xfffffffffffffff0
   1bbb0:	mov	x1, #0x0                   	// #0
   1bbb4:	nop
   1bbb8:	ldr	q0, [x20, x1]
   1bbbc:	str	q0, [x0, x1]
   1bbc0:	add	x1, x1, #0x10
   1bbc4:	cmp	x1, x2
   1bbc8:	b.ne	1bbb8 <__sanitizer_set_report_fd@@Base+0x22f0>  // b.any
   1bbcc:	tst	x19, #0xf
   1bbd0:	and	x1, x19, #0xfffffffffffffff0
   1bbd4:	b.eq	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.none
   1bbd8:	ldrb	w3, [x20, x1]
   1bbdc:	add	x2, x1, #0x1
   1bbe0:	strb	w3, [x0, x1]
   1bbe4:	cmp	x19, x2
   1bbe8:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bbec:	ldrb	w4, [x20, x2]
   1bbf0:	add	x3, x1, #0x2
   1bbf4:	strb	w4, [x0, x2]
   1bbf8:	cmp	x19, x3
   1bbfc:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc00:	ldrb	w4, [x20, x3]
   1bc04:	add	x2, x1, #0x3
   1bc08:	strb	w4, [x0, x3]
   1bc0c:	cmp	x19, x2
   1bc10:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc14:	ldrb	w4, [x20, x2]
   1bc18:	add	x3, x1, #0x4
   1bc1c:	strb	w4, [x0, x2]
   1bc20:	cmp	x19, x3
   1bc24:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc28:	ldrb	w4, [x20, x3]
   1bc2c:	add	x2, x1, #0x5
   1bc30:	strb	w4, [x0, x3]
   1bc34:	cmp	x19, x2
   1bc38:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc3c:	ldrb	w4, [x20, x2]
   1bc40:	add	x3, x1, #0x6
   1bc44:	strb	w4, [x0, x2]
   1bc48:	cmp	x19, x3
   1bc4c:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc50:	ldrb	w4, [x20, x3]
   1bc54:	add	x2, x1, #0x7
   1bc58:	strb	w4, [x0, x3]
   1bc5c:	cmp	x19, x2
   1bc60:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc64:	ldrb	w4, [x20, x2]
   1bc68:	add	x3, x1, #0x8
   1bc6c:	strb	w4, [x0, x2]
   1bc70:	cmp	x19, x3
   1bc74:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc78:	ldrb	w4, [x20, x3]
   1bc7c:	add	x2, x1, #0x9
   1bc80:	strb	w4, [x0, x3]
   1bc84:	cmp	x19, x2
   1bc88:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bc8c:	ldrb	w4, [x20, x2]
   1bc90:	add	x3, x1, #0xa
   1bc94:	strb	w4, [x0, x2]
   1bc98:	cmp	x19, x3
   1bc9c:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bca0:	ldrb	w4, [x20, x3]
   1bca4:	add	x2, x1, #0xb
   1bca8:	strb	w4, [x0, x3]
   1bcac:	cmp	x19, x2
   1bcb0:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bcb4:	ldrb	w4, [x20, x2]
   1bcb8:	add	x3, x1, #0xc
   1bcbc:	strb	w4, [x0, x2]
   1bcc0:	cmp	x19, x3
   1bcc4:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bcc8:	ldrb	w4, [x20, x3]
   1bccc:	add	x2, x1, #0xd
   1bcd0:	strb	w4, [x0, x3]
   1bcd4:	cmp	x19, x2
   1bcd8:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bcdc:	ldrb	w3, [x20, x2]
   1bce0:	add	x1, x1, #0xe
   1bce4:	strb	w3, [x0, x2]
   1bce8:	cmp	x19, x1
   1bcec:	b.ls	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>  // b.plast
   1bcf0:	ldrb	w2, [x20, x1]
   1bcf4:	strb	w2, [x0, x1]
   1bcf8:	add	x19, x0, x19
   1bcfc:	ldr	x21, [sp, #16]
   1bd00:	strb	wzr, [x19]
   1bd04:	ldr	x30, [sp, #24]
   1bd08:	ldp	x19, x20, [sp], #32
   1bd0c:	ret
   1bd10:	mov	x1, #0x0                   	// #0
   1bd14:	nop
   1bd18:	ldrb	w3, [x20, x1]
   1bd1c:	cmp	x21, x1
   1bd20:	strb	w3, [x0, x1]
   1bd24:	add	x1, x1, #0x1
   1bd28:	b.ne	1bd18 <__sanitizer_set_report_fd@@Base+0x2450>  // b.any
   1bd2c:	b	1bcf8 <__sanitizer_set_report_fd@@Base+0x2430>
   1bd30:	mov	x2, #0x0                   	// #0
   1bd34:	mov	x1, #0x0                   	// #0
   1bd38:	mov	x0, #0x1                   	// #1
   1bd3c:	bl	12f40 <__sancov_default_options@@Base+0x470>
   1bd40:	mov	x19, x0
   1bd44:	strb	wzr, [x19]
   1bd48:	ldr	x30, [sp, #24]
   1bd4c:	ldp	x19, x20, [sp], #32
   1bd50:	ret
   1bd54:	nop
   1bd58:	ldrb	w3, [x0]
   1bd5c:	mov	x2, #0x1                   	// #1
   1bd60:	ldrb	w4, [x1]
   1bd64:	cmp	w4, w3
   1bd68:	b.ne	1bd88 <__sanitizer_set_report_fd@@Base+0x24c0>  // b.any
   1bd6c:	nop
   1bd70:	cbz	w3, 1bd98 <__sanitizer_set_report_fd@@Base+0x24d0>
   1bd74:	ldrb	w3, [x0, x2]
   1bd78:	ldrb	w4, [x1, x2]
   1bd7c:	add	x2, x2, #0x1
   1bd80:	cmp	w3, w4
   1bd84:	b.eq	1bd70 <__sanitizer_set_report_fd@@Base+0x24a8>  // b.none
   1bd88:	cmp	w3, w4
   1bd8c:	mov	w0, #0x1                   	// #1
   1bd90:	cneg	w0, w0, cc  // cc = lo, ul, last
   1bd94:	ret
   1bd98:	mov	w0, #0x0                   	// #0
   1bd9c:	ret
   1bda0:	cbz	x2, 1bdd8 <__sanitizer_set_report_fd@@Base+0x2510>
   1bda4:	mov	x3, #0x0                   	// #0
   1bda8:	b	1bdb8 <__sanitizer_set_report_fd@@Base+0x24f0>
   1bdac:	cbz	w4, 1bdd8 <__sanitizer_set_report_fd@@Base+0x2510>
   1bdb0:	cmp	x2, x3
   1bdb4:	b.eq	1bdd8 <__sanitizer_set_report_fd@@Base+0x2510>  // b.none
   1bdb8:	ldrb	w4, [x0, x3]
   1bdbc:	ldrb	w5, [x1, x3]
   1bdc0:	add	x3, x3, #0x1
   1bdc4:	cmp	w4, w5
   1bdc8:	b.eq	1bdac <__sanitizer_set_report_fd@@Base+0x24e4>  // b.none
   1bdcc:	mov	w0, #0x1                   	// #1
   1bdd0:	cneg	w0, w0, cc  // cc = lo, ul, last
   1bdd4:	ret
   1bdd8:	mov	w0, #0x0                   	// #0
   1bddc:	ret
   1bde0:	ldrb	w2, [x0]
   1bde4:	and	w3, w1, #0xff
   1bde8:	cmp	w2, w1, uxtb
   1bdec:	b.eq	1be00 <__sanitizer_set_report_fd@@Base+0x2538>  // b.none
   1bdf0:	cbz	w2, 1be04 <__sanitizer_set_report_fd@@Base+0x253c>
   1bdf4:	ldrb	w2, [x0, #1]!
   1bdf8:	cmp	w2, w3
   1bdfc:	b.ne	1bdf0 <__sanitizer_set_report_fd@@Base+0x2528>  // b.any
   1be00:	ret
   1be04:	mov	x0, #0x0                   	// #0
   1be08:	ret
   1be0c:	nop
   1be10:	ldrb	w4, [x0]
   1be14:	mov	x2, x0
   1be18:	and	w3, w1, #0xff
   1be1c:	cmp	w4, w1, uxtb
   1be20:	b.eq	1be38 <__sanitizer_set_report_fd@@Base+0x2570>  // b.none
   1be24:	mov	w1, w4
   1be28:	cbz	w1, 1be3c <__sanitizer_set_report_fd@@Base+0x2574>
   1be2c:	ldrb	w1, [x0, #1]!
   1be30:	cmp	w1, w3
   1be34:	b.ne	1be28 <__sanitizer_set_report_fd@@Base+0x2560>  // b.any
   1be38:	ret
   1be3c:	cbz	w4, 1be58 <__sanitizer_set_report_fd@@Base+0x2590>
   1be40:	add	x1, x2, #0x1
   1be44:	nop
   1be48:	mov	x0, x1
   1be4c:	ldrb	w2, [x1], #1
   1be50:	cbnz	w2, 1be48 <__sanitizer_set_report_fd@@Base+0x2580>
   1be54:	ret
   1be58:	mov	x0, x2
   1be5c:	ret
   1be60:	ldrb	w3, [x0]
   1be64:	mov	x2, x0
   1be68:	mov	x0, #0x0                   	// #0
   1be6c:	cbz	w3, 1be80 <__sanitizer_set_report_fd@@Base+0x25b8>
   1be70:	cmp	w1, w3
   1be74:	csel	x0, x0, x2, ne  // ne = any
   1be78:	ldrb	w3, [x2, #1]!
   1be7c:	cbnz	w3, 1be70 <__sanitizer_set_report_fd@@Base+0x25a8>
   1be80:	ret
   1be84:	nop
   1be88:	mov	x2, x0
   1be8c:	ldrb	w0, [x0]
   1be90:	cbz	w0, 1bea8 <__sanitizer_set_report_fd@@Base+0x25e0>
   1be94:	mov	x0, #0x0                   	// #0
   1be98:	add	x0, x0, #0x1
   1be9c:	ldrb	w1, [x2, x0]
   1bea0:	cbnz	w1, 1be98 <__sanitizer_set_report_fd@@Base+0x25d0>
   1bea4:	ret
   1bea8:	mov	x0, #0x0                   	// #0
   1beac:	ret
   1beb0:	ldrb	w3, [x1]
   1beb4:	mov	x4, #0x0                   	// #0
   1beb8:	cbz	w3, 1becc <__sanitizer_set_report_fd@@Base+0x2604>
   1bebc:	nop
   1bec0:	add	x4, x4, #0x1
   1bec4:	ldrb	w3, [x1, x4]
   1bec8:	cbnz	w3, 1bec0 <__sanitizer_set_report_fd@@Base+0x25f8>
   1becc:	cbz	x2, 1c1f0 <__sanitizer_set_report_fd@@Base+0x2928>
   1bed0:	mov	x3, #0x0                   	// #0
   1bed4:	b	1bee4 <__sanitizer_set_report_fd@@Base+0x261c>
   1bed8:	add	x3, x3, #0x1
   1bedc:	cmp	x2, x3
   1bee0:	b.eq	1c1f0 <__sanitizer_set_report_fd@@Base+0x2928>  // b.none
   1bee4:	ldrb	w5, [x0, x3]
   1bee8:	add	x7, x0, x3
   1beec:	cbnz	w5, 1bed8 <__sanitizer_set_report_fd@@Base+0x2610>
   1bef0:	sub	x5, x2, x3
   1bef4:	cmp	x5, x4
   1bef8:	b.ls	1c070 <__sanitizer_set_report_fd@@Base+0x27a8>  // b.plast
   1befc:	cmp	x1, x7
   1bf00:	add	x5, x4, #0x1
   1bf04:	b.ls	1c1f8 <__sanitizer_set_report_fd@@Base+0x2930>  // b.plast
   1bf08:	cmp	x5, #0x0
   1bf0c:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bf10:	add	x0, x1, #0xf
   1bf14:	sub	x0, x0, x7
   1bf18:	cmp	x0, #0x1e
   1bf1c:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   1bf20:	b.ls	1c578 <__sanitizer_set_report_fd@@Base+0x2cb0>  // b.plast
   1bf24:	and	x2, x5, #0xfffffffffffffff0
   1bf28:	mov	x0, #0x0                   	// #0
   1bf2c:	nop
   1bf30:	ldr	q0, [x1, x0]
   1bf34:	str	q0, [x7, x0]
   1bf38:	add	x0, x0, #0x10
   1bf3c:	cmp	x0, x2
   1bf40:	b.ne	1bf30 <__sanitizer_set_report_fd@@Base+0x2668>  // b.any
   1bf44:	tst	x5, #0xf
   1bf48:	and	x0, x5, #0xfffffffffffffff0
   1bf4c:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1bf50:	ldrb	w6, [x1, x0]
   1bf54:	add	x2, x0, #0x1
   1bf58:	strb	w6, [x7, x0]
   1bf5c:	cmp	x5, x2
   1bf60:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bf64:	ldrb	w8, [x1, x2]
   1bf68:	add	x6, x0, #0x2
   1bf6c:	strb	w8, [x7, x2]
   1bf70:	cmp	x5, x6
   1bf74:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bf78:	ldrb	w8, [x1, x6]
   1bf7c:	add	x2, x0, #0x3
   1bf80:	strb	w8, [x7, x6]
   1bf84:	cmp	x5, x2
   1bf88:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bf8c:	ldrb	w8, [x1, x2]
   1bf90:	add	x6, x0, #0x4
   1bf94:	strb	w8, [x7, x2]
   1bf98:	cmp	x5, x6
   1bf9c:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bfa0:	ldrb	w8, [x1, x6]
   1bfa4:	add	x2, x0, #0x5
   1bfa8:	strb	w8, [x7, x6]
   1bfac:	cmp	x5, x2
   1bfb0:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bfb4:	ldrb	w8, [x1, x2]
   1bfb8:	add	x6, x0, #0x6
   1bfbc:	strb	w8, [x7, x2]
   1bfc0:	cmp	x5, x6
   1bfc4:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bfc8:	ldrb	w8, [x1, x6]
   1bfcc:	add	x2, x0, #0x7
   1bfd0:	strb	w8, [x7, x6]
   1bfd4:	cmp	x5, x2
   1bfd8:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bfdc:	ldrb	w8, [x1, x2]
   1bfe0:	add	x6, x0, #0x8
   1bfe4:	strb	w8, [x7, x2]
   1bfe8:	cmp	x5, x6
   1bfec:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1bff0:	ldrb	w8, [x1, x6]
   1bff4:	add	x2, x0, #0x9
   1bff8:	strb	w8, [x7, x6]
   1bffc:	cmp	x5, x2
   1c000:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c004:	ldrb	w8, [x1, x2]
   1c008:	add	x6, x0, #0xa
   1c00c:	strb	w8, [x7, x2]
   1c010:	cmp	x5, x6
   1c014:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c018:	ldrb	w8, [x1, x6]
   1c01c:	add	x2, x0, #0xb
   1c020:	strb	w8, [x7, x6]
   1c024:	cmp	x5, x2
   1c028:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c02c:	ldrb	w8, [x1, x2]
   1c030:	add	x6, x0, #0xc
   1c034:	strb	w8, [x7, x2]
   1c038:	cmp	x5, x6
   1c03c:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c040:	ldrb	w8, [x1, x6]
   1c044:	add	x2, x0, #0xd
   1c048:	strb	w8, [x7, x6]
   1c04c:	cmp	x5, x2
   1c050:	b.le	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c054:	ldrb	w6, [x1, x2]
   1c058:	add	x0, x0, #0xe
   1c05c:	strb	w6, [x7, x2]
   1c060:	cmp	x5, x0
   1c064:	b.gt	1c370 <__sanitizer_set_report_fd@@Base+0x2aa8>
   1c068:	add	x0, x4, x3
   1c06c:	ret
   1c070:	cmp	x1, x7
   1c074:	sub	x8, x5, #0x1
   1c078:	b.ls	1c380 <__sanitizer_set_report_fd@@Base+0x2ab8>  // b.plast
   1c07c:	cmp	x8, #0x0
   1c080:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c084:	add	x6, x1, #0xf
   1c088:	sub	x5, x5, #0x2
   1c08c:	sub	x6, x6, x7
   1c090:	cmp	x6, #0x1e
   1c094:	ccmp	x5, #0xe, #0x0, hi  // hi = pmore
   1c098:	b.ls	1c55c <__sanitizer_set_report_fd@@Base+0x2c94>  // b.plast
   1c09c:	and	x6, x8, #0xfffffffffffffff0
   1c0a0:	mov	x5, #0x0                   	// #0
   1c0a4:	nop
   1c0a8:	ldr	q0, [x1, x5]
   1c0ac:	str	q0, [x7, x5]
   1c0b0:	add	x5, x5, #0x10
   1c0b4:	cmp	x5, x6
   1c0b8:	b.ne	1c0a8 <__sanitizer_set_report_fd@@Base+0x27e0>  // b.any
   1c0bc:	tst	x8, #0xf
   1c0c0:	and	x5, x8, #0xfffffffffffffff0
   1c0c4:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c0c8:	ldrb	w9, [x1, x5]
   1c0cc:	add	x6, x5, #0x1
   1c0d0:	strb	w9, [x7, x5]
   1c0d4:	cmp	x8, x6
   1c0d8:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c0dc:	ldrb	w10, [x1, x6]
   1c0e0:	add	x9, x5, #0x2
   1c0e4:	strb	w10, [x7, x6]
   1c0e8:	cmp	x8, x9
   1c0ec:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c0f0:	ldrb	w10, [x1, x9]
   1c0f4:	add	x6, x5, #0x3
   1c0f8:	strb	w10, [x7, x9]
   1c0fc:	cmp	x8, x6
   1c100:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c104:	ldrb	w10, [x1, x6]
   1c108:	add	x9, x5, #0x4
   1c10c:	strb	w10, [x7, x6]
   1c110:	cmp	x8, x9
   1c114:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c118:	ldrb	w10, [x1, x9]
   1c11c:	add	x6, x5, #0x5
   1c120:	strb	w10, [x7, x9]
   1c124:	cmp	x8, x6
   1c128:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c12c:	ldrb	w10, [x1, x6]
   1c130:	add	x9, x5, #0x6
   1c134:	strb	w10, [x7, x6]
   1c138:	cmp	x8, x9
   1c13c:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c140:	ldrb	w10, [x1, x9]
   1c144:	add	x6, x5, #0x7
   1c148:	strb	w10, [x7, x9]
   1c14c:	cmp	x8, x6
   1c150:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c154:	ldrb	w10, [x1, x6]
   1c158:	add	x9, x5, #0x8
   1c15c:	strb	w10, [x7, x6]
   1c160:	cmp	x8, x9
   1c164:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c168:	ldrb	w10, [x1, x9]
   1c16c:	add	x6, x5, #0x9
   1c170:	strb	w10, [x7, x9]
   1c174:	cmp	x8, x6
   1c178:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c17c:	ldrb	w10, [x1, x6]
   1c180:	add	x9, x5, #0xa
   1c184:	strb	w10, [x7, x6]
   1c188:	cmp	x8, x9
   1c18c:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c190:	ldrb	w10, [x1, x9]
   1c194:	add	x6, x5, #0xb
   1c198:	strb	w10, [x7, x9]
   1c19c:	cmp	x8, x6
   1c1a0:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c1a4:	ldrb	w10, [x1, x6]
   1c1a8:	add	x9, x5, #0xc
   1c1ac:	strb	w10, [x7, x6]
   1c1b0:	cmp	x8, x9
   1c1b4:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c1b8:	ldrb	w10, [x1, x9]
   1c1bc:	add	x6, x5, #0xd
   1c1c0:	strb	w10, [x7, x9]
   1c1c4:	cmp	x8, x6
   1c1c8:	b.le	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c1cc:	ldrb	w9, [x1, x6]
   1c1d0:	add	x5, x5, #0xe
   1c1d4:	strb	w9, [x7, x6]
   1c1d8:	cmp	x8, x5
   1c1dc:	b.gt	1c4f8 <__sanitizer_set_report_fd@@Base+0x2c30>
   1c1e0:	add	x0, x0, x2
   1c1e4:	sturb	wzr, [x0, #-1]
   1c1e8:	add	x0, x4, x3
   1c1ec:	b	1c06c <__sanitizer_set_report_fd@@Base+0x27a4>
   1c1f0:	add	x0, x2, x4
   1c1f4:	ret
   1c1f8:	cmp	x5, #0x0
   1c1fc:	ccmp	x1, x7, #0x2, gt
   1c200:	b.cs	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.hs, b.nlast
   1c204:	sub	x2, x4, #0xf
   1c208:	add	x0, x1, x5
   1c20c:	add	x8, x7, x2
   1c210:	add	x2, x1, x2
   1c214:	cmp	x8, x0
   1c218:	add	x0, x7, x5
   1c21c:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
   1c220:	mov	x0, x4
   1c224:	ccmp	x4, #0xe, #0x0, ls  // ls = plast
   1c228:	b.ls	1c504 <__sanitizer_set_report_fd@@Base+0x2c3c>  // b.plast
   1c22c:	neg	x6, x5, lsr #4
   1c230:	mov	x0, #0x0                   	// #0
   1c234:	lsl	x6, x6, #4
   1c238:	ldr	q0, [x2, x0]
   1c23c:	str	q0, [x8, x0]
   1c240:	sub	x0, x0, #0x10
   1c244:	cmp	x0, x6
   1c248:	b.ne	1c238 <__sanitizer_set_report_fd@@Base+0x2970>  // b.any
   1c24c:	and	x0, x5, #0xfffffffffffffff0
   1c250:	cmp	x5, x0
   1c254:	sub	x0, x4, x0
   1c258:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c25c:	ldrb	w5, [x1, x0]
   1c260:	sub	x2, x0, #0x1
   1c264:	strb	w5, [x7, x0]
   1c268:	cbz	x0, 1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c26c:	ldrb	w5, [x1, x2]
   1c270:	cmp	x0, #0x1
   1c274:	strb	w5, [x7, x2]
   1c278:	sub	x2, x0, #0x2
   1c27c:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c280:	ldrb	w5, [x1, x2]
   1c284:	cmp	x0, #0x2
   1c288:	strb	w5, [x7, x2]
   1c28c:	sub	x2, x0, #0x3
   1c290:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c294:	ldrb	w5, [x1, x2]
   1c298:	cmp	x0, #0x3
   1c29c:	strb	w5, [x7, x2]
   1c2a0:	sub	x2, x0, #0x4
   1c2a4:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c2a8:	ldrb	w5, [x1, x2]
   1c2ac:	cmp	x0, #0x4
   1c2b0:	strb	w5, [x7, x2]
   1c2b4:	sub	x2, x0, #0x5
   1c2b8:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c2bc:	ldrb	w5, [x1, x2]
   1c2c0:	cmp	x0, #0x5
   1c2c4:	strb	w5, [x7, x2]
   1c2c8:	sub	x2, x0, #0x6
   1c2cc:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c2d0:	ldrb	w5, [x1, x2]
   1c2d4:	cmp	x0, #0x6
   1c2d8:	strb	w5, [x7, x2]
   1c2dc:	sub	x2, x0, #0x7
   1c2e0:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c2e4:	ldrb	w5, [x1, x2]
   1c2e8:	cmp	x0, #0x7
   1c2ec:	strb	w5, [x7, x2]
   1c2f0:	sub	x2, x0, #0x8
   1c2f4:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c2f8:	ldrb	w5, [x1, x2]
   1c2fc:	cmp	x0, #0x8
   1c300:	strb	w5, [x7, x2]
   1c304:	sub	x2, x0, #0x9
   1c308:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c30c:	ldrb	w5, [x1, x2]
   1c310:	cmp	x0, #0x9
   1c314:	strb	w5, [x7, x2]
   1c318:	sub	x2, x0, #0xa
   1c31c:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c320:	ldrb	w5, [x1, x2]
   1c324:	cmp	x0, #0xa
   1c328:	strb	w5, [x7, x2]
   1c32c:	sub	x2, x0, #0xb
   1c330:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c334:	ldrb	w5, [x1, x2]
   1c338:	cmp	x0, #0xb
   1c33c:	strb	w5, [x7, x2]
   1c340:	sub	x2, x0, #0xc
   1c344:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c348:	ldrb	w5, [x1, x2]
   1c34c:	cmp	x0, #0xc
   1c350:	strb	w5, [x7, x2]
   1c354:	sub	x2, x0, #0xd
   1c358:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c35c:	ldrb	w5, [x1, x2]
   1c360:	cmp	x0, #0xd
   1c364:	strb	w5, [x7, x2]
   1c368:	sub	x0, x0, #0xe
   1c36c:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c370:	ldrb	w1, [x1, x0]
   1c374:	strb	w1, [x7, x0]
   1c378:	add	x0, x4, x3
   1c37c:	b	1c06c <__sanitizer_set_report_fd@@Base+0x27a4>
   1c380:	cmp	x8, #0x0
   1c384:	ccmp	x1, x7, #0x2, gt
   1c388:	b.cs	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.hs, b.nlast
   1c38c:	sub	x9, x5, #0x11
   1c390:	add	x6, x1, x8
   1c394:	add	x11, x7, x9
   1c398:	add	x9, x1, x9
   1c39c:	cmp	x6, x11
   1c3a0:	add	x6, x7, x8
   1c3a4:	sub	x5, x5, #0x2
   1c3a8:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   1c3ac:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1c3b0:	b.ls	1c530 <__sanitizer_set_report_fd@@Base+0x2c68>  // b.plast
   1c3b4:	neg	x10, x8, lsr #4
   1c3b8:	mov	x6, #0x0                   	// #0
   1c3bc:	lsl	x10, x10, #4
   1c3c0:	ldr	q0, [x9, x6]
   1c3c4:	str	q0, [x11, x6]
   1c3c8:	sub	x6, x6, #0x10
   1c3cc:	cmp	x6, x10
   1c3d0:	b.ne	1c3c0 <__sanitizer_set_report_fd@@Base+0x2af8>  // b.any
   1c3d4:	and	x6, x8, #0xfffffffffffffff0
   1c3d8:	sub	x5, x5, x6
   1c3dc:	cmp	x8, x6
   1c3e0:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c3e4:	ldrb	w8, [x1, x5]
   1c3e8:	sub	x6, x5, #0x1
   1c3ec:	strb	w8, [x7, x5]
   1c3f0:	cbz	x5, 1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c3f4:	ldrb	w8, [x1, x6]
   1c3f8:	cmp	x5, #0x1
   1c3fc:	strb	w8, [x7, x6]
   1c400:	sub	x6, x5, #0x2
   1c404:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c408:	ldrb	w8, [x1, x6]
   1c40c:	cmp	x5, #0x2
   1c410:	strb	w8, [x7, x6]
   1c414:	sub	x6, x5, #0x3
   1c418:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c41c:	ldrb	w8, [x1, x6]
   1c420:	cmp	x5, #0x3
   1c424:	strb	w8, [x7, x6]
   1c428:	sub	x6, x5, #0x4
   1c42c:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c430:	ldrb	w8, [x1, x6]
   1c434:	cmp	x5, #0x4
   1c438:	strb	w8, [x7, x6]
   1c43c:	sub	x6, x5, #0x5
   1c440:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c444:	ldrb	w8, [x1, x6]
   1c448:	cmp	x5, #0x5
   1c44c:	strb	w8, [x7, x6]
   1c450:	sub	x6, x5, #0x6
   1c454:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c458:	ldrb	w8, [x1, x6]
   1c45c:	cmp	x5, #0x6
   1c460:	strb	w8, [x7, x6]
   1c464:	sub	x6, x5, #0x7
   1c468:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c46c:	ldrb	w8, [x1, x6]
   1c470:	cmp	x5, #0x7
   1c474:	strb	w8, [x7, x6]
   1c478:	sub	x6, x5, #0x8
   1c47c:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c480:	ldrb	w8, [x1, x6]
   1c484:	cmp	x5, #0x8
   1c488:	strb	w8, [x7, x6]
   1c48c:	sub	x6, x5, #0x9
   1c490:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c494:	ldrb	w8, [x1, x6]
   1c498:	cmp	x5, #0x9
   1c49c:	strb	w8, [x7, x6]
   1c4a0:	sub	x6, x5, #0xa
   1c4a4:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c4a8:	ldrb	w8, [x1, x6]
   1c4ac:	cmp	x5, #0xa
   1c4b0:	strb	w8, [x7, x6]
   1c4b4:	sub	x6, x5, #0xb
   1c4b8:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c4bc:	ldrb	w8, [x1, x6]
   1c4c0:	cmp	x5, #0xb
   1c4c4:	strb	w8, [x7, x6]
   1c4c8:	sub	x6, x5, #0xc
   1c4cc:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c4d0:	ldrb	w8, [x1, x6]
   1c4d4:	cmp	x5, #0xc
   1c4d8:	strb	w8, [x7, x6]
   1c4dc:	sub	x6, x5, #0xd
   1c4e0:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c4e4:	ldrb	w8, [x1, x6]
   1c4e8:	cmp	x5, #0xd
   1c4ec:	strb	w8, [x7, x6]
   1c4f0:	sub	x5, x5, #0xe
   1c4f4:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c4f8:	ldrb	w1, [x1, x5]
   1c4fc:	strb	w1, [x7, x5]
   1c500:	b	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c504:	ldrb	w2, [x1, x0]
   1c508:	strb	w2, [x7, x0]
   1c50c:	sub	x0, x0, #0x1
   1c510:	cmn	x0, #0x1
   1c514:	b.eq	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
   1c518:	ldrb	w2, [x1, x0]
   1c51c:	strb	w2, [x7, x0]
   1c520:	sub	x0, x0, #0x1
   1c524:	cmn	x0, #0x1
   1c528:	b.ne	1c504 <__sanitizer_set_report_fd@@Base+0x2c3c>  // b.any
   1c52c:	b	1c068 <__sanitizer_set_report_fd@@Base+0x27a0>
   1c530:	ldrb	w6, [x1, x5]
   1c534:	strb	w6, [x7, x5]
   1c538:	sub	x5, x5, #0x1
   1c53c:	cmn	x5, #0x1
   1c540:	b.eq	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>  // b.none
   1c544:	ldrb	w6, [x1, x5]
   1c548:	strb	w6, [x7, x5]
   1c54c:	sub	x5, x5, #0x1
   1c550:	cmn	x5, #0x1
   1c554:	b.ne	1c530 <__sanitizer_set_report_fd@@Base+0x2c68>  // b.any
   1c558:	b	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c55c:	mov	x5, #0x0                   	// #0
   1c560:	ldrb	w6, [x1, x5]
   1c564:	strb	w6, [x7, x5]
   1c568:	add	x5, x5, #0x1
   1c56c:	cmp	x8, x5
   1c570:	b.ne	1c560 <__sanitizer_set_report_fd@@Base+0x2c98>  // b.any
   1c574:	b	1c1e0 <__sanitizer_set_report_fd@@Base+0x2918>
   1c578:	mov	x0, #0x0                   	// #0
   1c57c:	nop
   1c580:	ldrb	w2, [x1, x0]
   1c584:	strb	w2, [x7, x0]
   1c588:	add	x0, x0, #0x1
   1c58c:	cmp	x5, x0
   1c590:	b.ne	1c580 <__sanitizer_set_report_fd@@Base+0x2cb8>  // b.any
   1c594:	add	x0, x4, x3
   1c598:	b	1c06c <__sanitizer_set_report_fd@@Base+0x27a4>
   1c59c:	nop
   1c5a0:	ldrb	w3, [x0]
   1c5a4:	mov	x4, #0x0                   	// #0
   1c5a8:	cbz	w3, 1c608 <__sanitizer_set_report_fd@@Base+0x2d40>
   1c5ac:	nop
   1c5b0:	add	x4, x4, #0x1
   1c5b4:	add	x5, x0, x4
   1c5b8:	ldrb	w3, [x0, x4]
   1c5bc:	cbnz	w3, 1c5b0 <__sanitizer_set_report_fd@@Base+0x2ce8>
   1c5c0:	add	x6, x0, x4
   1c5c4:	mov	x3, #0x0                   	// #0
   1c5c8:	cbnz	x2, 1c5dc <__sanitizer_set_report_fd@@Base+0x2d14>
   1c5cc:	b	1c5f0 <__sanitizer_set_report_fd@@Base+0x2d28>
   1c5d0:	strb	w7, [x6]
   1c5d4:	add	x6, x6, #0x1
   1c5d8:	b.eq	1c5f8 <__sanitizer_set_report_fd@@Base+0x2d30>  // b.none
   1c5dc:	ldrb	w7, [x1, x3]
   1c5e0:	add	x3, x3, #0x1
   1c5e4:	mov	x5, x6
   1c5e8:	cmp	x2, x3
   1c5ec:	cbnz	w7, 1c5d0 <__sanitizer_set_report_fd@@Base+0x2d08>
   1c5f0:	strb	wzr, [x5]
   1c5f4:	ret
   1c5f8:	add	x4, x2, x4
   1c5fc:	add	x5, x0, x4
   1c600:	strb	wzr, [x5]
   1c604:	ret
   1c608:	mov	x5, x0
   1c60c:	b	1c5c0 <__sanitizer_set_report_fd@@Base+0x2cf8>
   1c610:	mov	x4, x0
   1c614:	ldrb	w0, [x1]
   1c618:	cbz	w0, 1cc70 <__sanitizer_set_report_fd@@Base+0x33a8>
   1c61c:	mov	x0, #0x0                   	// #0
   1c620:	add	x0, x0, #0x1
   1c624:	ldrb	w3, [x1, x0]
   1c628:	cbnz	w3, 1c620 <__sanitizer_set_report_fd@@Base+0x2d58>
   1c62c:	cmp	x2, x0
   1c630:	b.hi	1c7b8 <__sanitizer_set_report_fd@@Base+0x2ef0>  // b.pmore
   1c634:	cbnz	x2, 1c63c <__sanitizer_set_report_fd@@Base+0x2d74>
   1c638:	ret
   1c63c:	cmp	x1, x4
   1c640:	sub	x5, x2, #0x1
   1c644:	b.ls	1cad8 <__sanitizer_set_report_fd@@Base+0x3210>  // b.plast
   1c648:	cmp	x5, #0x0
   1c64c:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c650:	add	x3, x1, #0xf
   1c654:	sub	x2, x2, #0x2
   1c658:	sub	x3, x3, x4
   1c65c:	cmp	x3, #0x1e
   1c660:	ccmp	x2, #0xe, #0x0, hi  // hi = pmore
   1c664:	b.ls	1cc98 <__sanitizer_set_report_fd@@Base+0x33d0>  // b.plast
   1c668:	and	x3, x5, #0xfffffffffffffff0
   1c66c:	mov	x2, #0x0                   	// #0
   1c670:	ldr	q0, [x1, x2]
   1c674:	str	q0, [x4, x2]
   1c678:	add	x2, x2, #0x10
   1c67c:	cmp	x2, x3
   1c680:	b.ne	1c670 <__sanitizer_set_report_fd@@Base+0x2da8>  // b.any
   1c684:	tst	x5, #0xf
   1c688:	and	x2, x5, #0xfffffffffffffff0
   1c68c:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1c690:	ldrb	w6, [x1, x2]
   1c694:	add	x3, x2, #0x1
   1c698:	strb	w6, [x4, x2]
   1c69c:	cmp	x5, x3
   1c6a0:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c6a4:	ldrb	w7, [x1, x3]
   1c6a8:	add	x6, x2, #0x2
   1c6ac:	strb	w7, [x4, x3]
   1c6b0:	cmp	x5, x6
   1c6b4:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c6b8:	ldrb	w7, [x1, x6]
   1c6bc:	add	x3, x2, #0x3
   1c6c0:	strb	w7, [x4, x6]
   1c6c4:	cmp	x5, x3
   1c6c8:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c6cc:	ldrb	w7, [x1, x3]
   1c6d0:	add	x6, x2, #0x4
   1c6d4:	strb	w7, [x4, x3]
   1c6d8:	cmp	x5, x6
   1c6dc:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c6e0:	ldrb	w7, [x1, x6]
   1c6e4:	add	x3, x2, #0x5
   1c6e8:	strb	w7, [x4, x6]
   1c6ec:	cmp	x5, x3
   1c6f0:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c6f4:	ldrb	w7, [x1, x3]
   1c6f8:	add	x6, x2, #0x6
   1c6fc:	strb	w7, [x4, x3]
   1c700:	cmp	x5, x6
   1c704:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c708:	ldrb	w7, [x1, x6]
   1c70c:	add	x3, x2, #0x7
   1c710:	strb	w7, [x4, x6]
   1c714:	cmp	x5, x3
   1c718:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c71c:	ldrb	w7, [x1, x3]
   1c720:	add	x6, x2, #0x8
   1c724:	strb	w7, [x4, x3]
   1c728:	cmp	x5, x6
   1c72c:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c730:	ldrb	w7, [x1, x6]
   1c734:	add	x3, x2, #0x9
   1c738:	strb	w7, [x4, x6]
   1c73c:	cmp	x5, x3
   1c740:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c744:	ldrb	w6, [x1, x3]
   1c748:	add	x7, x2, #0xa
   1c74c:	strb	w6, [x4, x3]
   1c750:	cmp	x5, x7
   1c754:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c758:	ldrb	w3, [x1, x7]
   1c75c:	add	x6, x2, #0xb
   1c760:	strb	w3, [x4, x7]
   1c764:	cmp	x5, x6
   1c768:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c76c:	ldrb	w7, [x1, x6]
   1c770:	add	x3, x2, #0xc
   1c774:	strb	w7, [x4, x6]
   1c778:	cmp	x5, x3
   1c77c:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c780:	ldrb	w7, [x1, x3]
   1c784:	add	x6, x2, #0xd
   1c788:	strb	w7, [x4, x3]
   1c78c:	cmp	x5, x6
   1c790:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c794:	ldrb	w3, [x1, x6]
   1c798:	add	x2, x2, #0xe
   1c79c:	strb	w3, [x4, x6]
   1c7a0:	cmp	x5, x2
   1c7a4:	b.le	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1c7a8:	ldrb	w1, [x1, x2]
   1c7ac:	strb	w1, [x4, x2]
   1c7b0:	strb	wzr, [x4, x5]
   1c7b4:	ret
   1c7b8:	cmp	x1, x4
   1c7bc:	add	x6, x0, #0x1
   1c7c0:	b.ls	1c92c <__sanitizer_set_report_fd@@Base+0x3064>  // b.plast
   1c7c4:	cmp	x6, #0x0
   1c7c8:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c7cc:	add	x2, x1, #0xf
   1c7d0:	sub	x2, x2, x4
   1c7d4:	cmp	x2, #0x1e
   1c7d8:	ccmp	x0, #0xe, #0x0, hi  // hi = pmore
   1c7dc:	b.ls	1cc78 <__sanitizer_set_report_fd@@Base+0x33b0>  // b.plast
   1c7e0:	and	x3, x6, #0xfffffffffffffff0
   1c7e4:	mov	x2, #0x0                   	// #0
   1c7e8:	ldr	q0, [x1, x2]
   1c7ec:	str	q0, [x4, x2]
   1c7f0:	add	x2, x2, #0x10
   1c7f4:	cmp	x2, x3
   1c7f8:	b.ne	1c7e8 <__sanitizer_set_report_fd@@Base+0x2f20>  // b.any
   1c7fc:	tst	x6, #0xf
   1c800:	and	x2, x6, #0xfffffffffffffff0
   1c804:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1c808:	ldrb	w5, [x1, x2]
   1c80c:	add	x3, x2, #0x1
   1c810:	strb	w5, [x4, x2]
   1c814:	cmp	x6, x3
   1c818:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c81c:	ldrb	w7, [x1, x3]
   1c820:	add	x5, x2, #0x2
   1c824:	strb	w7, [x4, x3]
   1c828:	cmp	x6, x5
   1c82c:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c830:	ldrb	w7, [x1, x5]
   1c834:	add	x3, x2, #0x3
   1c838:	strb	w7, [x4, x5]
   1c83c:	cmp	x6, x3
   1c840:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c844:	ldrb	w7, [x1, x3]
   1c848:	add	x5, x2, #0x4
   1c84c:	strb	w7, [x4, x3]
   1c850:	cmp	x6, x5
   1c854:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c858:	ldrb	w7, [x1, x5]
   1c85c:	add	x3, x2, #0x5
   1c860:	strb	w7, [x4, x5]
   1c864:	cmp	x6, x3
   1c868:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c86c:	ldrb	w7, [x1, x3]
   1c870:	add	x5, x2, #0x6
   1c874:	strb	w7, [x4, x3]
   1c878:	cmp	x6, x5
   1c87c:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c880:	ldrb	w7, [x1, x5]
   1c884:	add	x3, x2, #0x7
   1c888:	strb	w7, [x4, x5]
   1c88c:	cmp	x6, x3
   1c890:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c894:	ldrb	w7, [x1, x3]
   1c898:	add	x5, x2, #0x8
   1c89c:	strb	w7, [x4, x3]
   1c8a0:	cmp	x6, x5
   1c8a4:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c8a8:	ldrb	w7, [x1, x5]
   1c8ac:	add	x3, x2, #0x9
   1c8b0:	strb	w7, [x4, x5]
   1c8b4:	cmp	x6, x3
   1c8b8:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c8bc:	ldrb	w7, [x1, x3]
   1c8c0:	add	x5, x2, #0xa
   1c8c4:	strb	w7, [x4, x3]
   1c8c8:	cmp	x6, x5
   1c8cc:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c8d0:	ldrb	w3, [x1, x5]
   1c8d4:	add	x7, x2, #0xb
   1c8d8:	strb	w3, [x4, x5]
   1c8dc:	cmp	x6, x7
   1c8e0:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c8e4:	ldrb	w5, [x1, x7]
   1c8e8:	add	x3, x2, #0xc
   1c8ec:	strb	w5, [x4, x7]
   1c8f0:	cmp	x6, x3
   1c8f4:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c8f8:	ldrb	w7, [x1, x3]
   1c8fc:	add	x5, x2, #0xd
   1c900:	strb	w7, [x4, x3]
   1c904:	cmp	x6, x5
   1c908:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c90c:	ldrb	w3, [x1, x5]
   1c910:	add	x2, x2, #0xe
   1c914:	strb	w3, [x4, x5]
   1c918:	cmp	x6, x2
   1c91c:	b.le	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c920:	ldrb	w1, [x1, x2]
   1c924:	strb	w1, [x4, x2]
   1c928:	ret
   1c92c:	cmp	x6, #0x0
   1c930:	ccmp	x1, x4, #0x2, gt
   1c934:	b.cs	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.hs, b.nlast
   1c938:	sub	x3, x0, #0xf
   1c93c:	add	x2, x1, x6
   1c940:	add	x7, x4, x3
   1c944:	add	x3, x1, x3
   1c948:	cmp	x2, x7
   1c94c:	add	x2, x4, x6
   1c950:	ccmp	x2, x3, #0x0, hi  // hi = pmore
   1c954:	mov	x2, x0
   1c958:	ccmp	x0, #0xe, #0x0, ls  // ls = plast
   1c95c:	b.ls	1caac <__sanitizer_set_report_fd@@Base+0x31e4>  // b.plast
   1c960:	neg	x5, x6, lsr #4
   1c964:	mov	x2, #0x0                   	// #0
   1c968:	lsl	x5, x5, #4
   1c96c:	nop
   1c970:	ldr	q0, [x3, x2]
   1c974:	str	q0, [x7, x2]
   1c978:	sub	x2, x2, #0x10
   1c97c:	cmp	x2, x5
   1c980:	b.ne	1c970 <__sanitizer_set_report_fd@@Base+0x30a8>  // b.any
   1c984:	and	x2, x6, #0xfffffffffffffff0
   1c988:	cmp	x6, x2
   1c98c:	sub	x2, x0, x2
   1c990:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1c994:	ldrb	w5, [x1, x2]
   1c998:	sub	x3, x2, #0x1
   1c99c:	strb	w5, [x4, x2]
   1c9a0:	cbz	x2, 1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1c9a4:	ldrb	w5, [x1, x3]
   1c9a8:	cmp	x2, #0x1
   1c9ac:	strb	w5, [x4, x3]
   1c9b0:	sub	x3, x2, #0x2
   1c9b4:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1c9b8:	ldrb	w5, [x1, x3]
   1c9bc:	cmp	x2, #0x2
   1c9c0:	strb	w5, [x4, x3]
   1c9c4:	sub	x3, x2, #0x3
   1c9c8:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1c9cc:	ldrb	w5, [x1, x3]
   1c9d0:	cmp	x2, #0x3
   1c9d4:	strb	w5, [x4, x3]
   1c9d8:	sub	x3, x2, #0x4
   1c9dc:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1c9e0:	ldrb	w5, [x1, x3]
   1c9e4:	cmp	x2, #0x4
   1c9e8:	strb	w5, [x4, x3]
   1c9ec:	sub	x3, x2, #0x5
   1c9f0:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1c9f4:	ldrb	w5, [x1, x3]
   1c9f8:	cmp	x2, #0x5
   1c9fc:	strb	w5, [x4, x3]
   1ca00:	sub	x3, x2, #0x6
   1ca04:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca08:	ldrb	w5, [x1, x3]
   1ca0c:	cmp	x2, #0x6
   1ca10:	strb	w5, [x4, x3]
   1ca14:	sub	x3, x2, #0x7
   1ca18:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca1c:	ldrb	w5, [x1, x3]
   1ca20:	cmp	x2, #0x7
   1ca24:	strb	w5, [x4, x3]
   1ca28:	sub	x3, x2, #0x8
   1ca2c:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca30:	ldrb	w5, [x1, x3]
   1ca34:	cmp	x2, #0x8
   1ca38:	strb	w5, [x4, x3]
   1ca3c:	sub	x3, x2, #0x9
   1ca40:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca44:	ldrb	w5, [x1, x3]
   1ca48:	cmp	x2, #0x9
   1ca4c:	strb	w5, [x4, x3]
   1ca50:	sub	x3, x2, #0xa
   1ca54:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca58:	ldrb	w5, [x1, x3]
   1ca5c:	cmp	x2, #0xa
   1ca60:	strb	w5, [x4, x3]
   1ca64:	sub	x3, x2, #0xb
   1ca68:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca6c:	ldrb	w5, [x1, x3]
   1ca70:	cmp	x2, #0xb
   1ca74:	strb	w5, [x4, x3]
   1ca78:	sub	x3, x2, #0xc
   1ca7c:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca80:	ldrb	w5, [x1, x3]
   1ca84:	cmp	x2, #0xc
   1ca88:	strb	w5, [x4, x3]
   1ca8c:	sub	x3, x2, #0xd
   1ca90:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1ca94:	ldrb	w5, [x1, x3]
   1ca98:	cmp	x2, #0xd
   1ca9c:	strb	w5, [x4, x3]
   1caa0:	sub	x2, x2, #0xe
   1caa4:	b.ne	1c920 <__sanitizer_set_report_fd@@Base+0x3058>  // b.any
   1caa8:	ret
   1caac:	ldrb	w3, [x1, x2]
   1cab0:	strb	w3, [x4, x2]
   1cab4:	sub	x2, x2, #0x1
   1cab8:	cmn	x2, #0x1
   1cabc:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>  // b.none
   1cac0:	ldrb	w3, [x1, x2]
   1cac4:	strb	w3, [x4, x2]
   1cac8:	sub	x2, x2, #0x1
   1cacc:	cmn	x2, #0x1
   1cad0:	b.ne	1caac <__sanitizer_set_report_fd@@Base+0x31e4>  // b.any
   1cad4:	b	1c638 <__sanitizer_set_report_fd@@Base+0x2d70>
   1cad8:	cmp	x5, #0x0
   1cadc:	ccmp	x1, x4, #0x2, gt
   1cae0:	b.cs	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.hs, b.nlast
   1cae4:	sub	x6, x2, #0x11
   1cae8:	add	x3, x1, x5
   1caec:	add	x8, x4, x6
   1caf0:	add	x6, x1, x6
   1caf4:	cmp	x3, x8
   1caf8:	add	x3, x4, x5
   1cafc:	sub	x2, x2, #0x2
   1cb00:	ccmp	x3, x6, #0x0, hi  // hi = pmore
   1cb04:	ccmp	x2, #0xe, #0x0, ls  // ls = plast
   1cb08:	b.ls	1cc58 <__sanitizer_set_report_fd@@Base+0x3390>  // b.plast
   1cb0c:	neg	x7, x5, lsr #4
   1cb10:	mov	x3, #0x0                   	// #0
   1cb14:	lsl	x7, x7, #4
   1cb18:	ldr	q0, [x6, x3]
   1cb1c:	str	q0, [x8, x3]
   1cb20:	sub	x3, x3, #0x10
   1cb24:	cmp	x3, x7
   1cb28:	b.ne	1cb18 <__sanitizer_set_report_fd@@Base+0x3250>  // b.any
   1cb2c:	and	x3, x5, #0xfffffffffffffff0
   1cb30:	sub	x2, x2, x3
   1cb34:	cmp	x5, x3
   1cb38:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cb3c:	ldrb	w6, [x1, x2]
   1cb40:	sub	x3, x2, #0x1
   1cb44:	strb	w6, [x4, x2]
   1cb48:	cbz	x2, 1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1cb4c:	ldrb	w6, [x1, x3]
   1cb50:	cmp	x2, #0x1
   1cb54:	strb	w6, [x4, x3]
   1cb58:	sub	x3, x2, #0x2
   1cb5c:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cb60:	ldrb	w6, [x1, x3]
   1cb64:	cmp	x2, #0x2
   1cb68:	strb	w6, [x4, x3]
   1cb6c:	sub	x3, x2, #0x3
   1cb70:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cb74:	ldrb	w6, [x1, x3]
   1cb78:	cmp	x2, #0x3
   1cb7c:	strb	w6, [x4, x3]
   1cb80:	sub	x3, x2, #0x4
   1cb84:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cb88:	ldrb	w6, [x1, x3]
   1cb8c:	cmp	x2, #0x4
   1cb90:	strb	w6, [x4, x3]
   1cb94:	sub	x3, x2, #0x5
   1cb98:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cb9c:	ldrb	w6, [x1, x3]
   1cba0:	cmp	x2, #0x5
   1cba4:	strb	w6, [x4, x3]
   1cba8:	sub	x3, x2, #0x6
   1cbac:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cbb0:	ldrb	w6, [x1, x3]
   1cbb4:	cmp	x2, #0x6
   1cbb8:	strb	w6, [x4, x3]
   1cbbc:	sub	x3, x2, #0x7
   1cbc0:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cbc4:	ldrb	w6, [x1, x3]
   1cbc8:	cmp	x2, #0x7
   1cbcc:	strb	w6, [x4, x3]
   1cbd0:	sub	x3, x2, #0x8
   1cbd4:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cbd8:	ldrb	w6, [x1, x3]
   1cbdc:	cmp	x2, #0x8
   1cbe0:	strb	w6, [x4, x3]
   1cbe4:	sub	x3, x2, #0x9
   1cbe8:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cbec:	ldrb	w6, [x1, x3]
   1cbf0:	cmp	x2, #0x9
   1cbf4:	strb	w6, [x4, x3]
   1cbf8:	sub	x3, x2, #0xa
   1cbfc:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cc00:	ldrb	w6, [x1, x3]
   1cc04:	cmp	x2, #0xa
   1cc08:	strb	w6, [x4, x3]
   1cc0c:	sub	x3, x2, #0xb
   1cc10:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cc14:	ldrb	w6, [x1, x3]
   1cc18:	cmp	x2, #0xb
   1cc1c:	strb	w6, [x4, x3]
   1cc20:	sub	x3, x2, #0xc
   1cc24:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cc28:	ldrb	w6, [x1, x3]
   1cc2c:	cmp	x2, #0xc
   1cc30:	strb	w6, [x4, x3]
   1cc34:	sub	x3, x2, #0xd
   1cc38:	b.eq	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.none
   1cc3c:	ldrb	w6, [x1, x3]
   1cc40:	cmp	x2, #0xd
   1cc44:	strb	w6, [x4, x3]
   1cc48:	sub	x2, x2, #0xe
   1cc4c:	b.ne	1c7a8 <__sanitizer_set_report_fd@@Base+0x2ee0>  // b.any
   1cc50:	strb	wzr, [x4, x5]
   1cc54:	b	1c7b4 <__sanitizer_set_report_fd@@Base+0x2eec>
   1cc58:	ldrb	w3, [x1, x2]
   1cc5c:	strb	w3, [x4, x2]
   1cc60:	sub	x2, x2, #0x1
   1cc64:	cmn	x2, #0x1
   1cc68:	b.ne	1cc58 <__sanitizer_set_report_fd@@Base+0x3390>  // b.any
   1cc6c:	b	1c7b0 <__sanitizer_set_report_fd@@Base+0x2ee8>
   1cc70:	mov	x0, #0x0                   	// #0
   1cc74:	b	1c62c <__sanitizer_set_report_fd@@Base+0x2d64>
   1cc78:	mov	x2, #0x0                   	// #0
   1cc7c:	nop
   1cc80:	ldrb	w3, [x1, x2]
   1cc84:	strb	w3, [x4, x2]
   1cc88:	add	x2, x2, #0x1
   1cc8c:	cmp	x6, x2
   1cc90:	b.ne	1cc80 <__sanitizer_set_report_fd@@Base+0x33b8>  // b.any
   1cc94:	ret
   1cc98:	mov	x2, #0x0                   	// #0
   1cc9c:	nop
   1cca0:	ldrb	w3, [x1, x2]
   1cca4:	strb	w3, [x4, x2]
   1cca8:	add	x2, x2, #0x1
   1ccac:	cmp	x5, x2
   1ccb0:	b.ne	1cca0 <__sanitizer_set_report_fd@@Base+0x33d8>  // b.any
   1ccb4:	strb	wzr, [x4, x5]
   1ccb8:	b	1c7b4 <__sanitizer_set_report_fd@@Base+0x2eec>
   1ccbc:	nop
   1ccc0:	cbz	x2, 1cd0c <__sanitizer_set_report_fd@@Base+0x3444>
   1ccc4:	mov	x3, #0x0                   	// #0
   1ccc8:	b	1ccdc <__sanitizer_set_report_fd@@Base+0x3414>
   1cccc:	strb	w5, [x0, x3]
   1ccd0:	add	x3, x3, #0x1
   1ccd4:	cmp	x2, x3
   1ccd8:	b.eq	1cd0c <__sanitizer_set_report_fd@@Base+0x3444>  // b.none
   1ccdc:	ldrb	w5, [x1, x3]
   1cce0:	add	x4, x0, x3
   1cce4:	cbnz	w5, 1cccc <__sanitizer_set_report_fd@@Base+0x3404>
   1cce8:	sub	x2, x2, x3
   1ccec:	orr	x3, x2, x4
   1ccf0:	ands	x3, x3, #0xf
   1ccf4:	b.eq	1cd10 <__sanitizer_set_report_fd@@Base+0x3448>  // b.none
   1ccf8:	cbz	x2, 1cd0c <__sanitizer_set_report_fd@@Base+0x3444>
   1ccfc:	add	x2, x4, x2
   1cd00:	strb	wzr, [x4], #1
   1cd04:	cmp	x4, x2
   1cd08:	b.ne	1cd00 <__sanitizer_set_report_fd@@Base+0x3438>  // b.any
   1cd0c:	ret
   1cd10:	and	x2, x2, #0xfffffffffffffff8
   1cd14:	add	x1, x4, x2
   1cd18:	cmp	x1, x4
   1cd1c:	b.ls	1cd0c <__sanitizer_set_report_fd@@Base+0x3444>  // b.plast
   1cd20:	movi	v0.4s, #0x0
   1cd24:	mvn	x2, x4
   1cd28:	add	x1, x1, x2
   1cd2c:	lsr	x1, x1, #4
   1cd30:	add	x1, x1, #0x1
   1cd34:	nop
   1cd38:	lsl	x2, x3, #4
   1cd3c:	add	x3, x3, #0x1
   1cd40:	cmp	x3, x1
   1cd44:	str	q0, [x4, x2]
   1cd48:	b.cc	1cd38 <__sanitizer_set_report_fd@@Base+0x3470>  // b.lo, b.ul, b.last
   1cd4c:	ret
   1cd50:	mov	x3, x0
   1cd54:	mov	x0, #0x0                   	// #0
   1cd58:	cbnz	x1, 1cd6c <__sanitizer_set_report_fd@@Base+0x34a4>
   1cd5c:	b	1cd74 <__sanitizer_set_report_fd@@Base+0x34ac>
   1cd60:	add	x0, x0, #0x1
   1cd64:	cmp	x1, x0
   1cd68:	b.eq	1cd74 <__sanitizer_set_report_fd@@Base+0x34ac>  // b.none
   1cd6c:	ldrb	w2, [x3, x0]
   1cd70:	cbnz	w2, 1cd60 <__sanitizer_set_report_fd@@Base+0x3498>
   1cd74:	ret
   1cd78:	mov	x8, x0
   1cd7c:	ldrb	w0, [x0]
   1cd80:	mov	x2, #0x0                   	// #0
   1cd84:	cbz	w0, 1cd94 <__sanitizer_set_report_fd@@Base+0x34cc>
   1cd88:	add	x2, x2, #0x1
   1cd8c:	ldrb	w3, [x8, x2]
   1cd90:	cbnz	w3, 1cd88 <__sanitizer_set_report_fd@@Base+0x34c0>
   1cd94:	ldrb	w0, [x1]
   1cd98:	cbz	w0, 1ce00 <__sanitizer_set_report_fd@@Base+0x3538>
   1cd9c:	mov	x3, #0x0                   	// #0
   1cda0:	mov	x4, x3
   1cda4:	add	x3, x3, #0x1
   1cda8:	ldrb	w5, [x1, x3]
   1cdac:	cbnz	w5, 1cda0 <__sanitizer_set_report_fd@@Base+0x34d8>
   1cdb0:	cmp	x3, x2
   1cdb4:	b.hi	1cdf8 <__sanitizer_set_report_fd@@Base+0x3530>  // b.pmore
   1cdb8:	sub	x3, x2, x3
   1cdbc:	mov	x9, #0x0                   	// #0
   1cdc0:	add	x0, x8, x9
   1cdc4:	mov	x2, #0x0                   	// #0
   1cdc8:	b	1cdd8 <__sanitizer_set_report_fd@@Base+0x3510>
   1cdcc:	cmp	x4, x2
   1cdd0:	b.eq	1cdfc <__sanitizer_set_report_fd@@Base+0x3534>  // b.none
   1cdd4:	mov	x2, x7
   1cdd8:	ldrb	w6, [x0, x2]
   1cddc:	add	x7, x2, #0x1
   1cde0:	ldrb	w5, [x1, x2]
   1cde4:	cmp	w6, w5
   1cde8:	b.eq	1cdcc <__sanitizer_set_report_fd@@Base+0x3504>  // b.none
   1cdec:	add	x9, x9, #0x1
   1cdf0:	cmp	x3, x9
   1cdf4:	b.cs	1cdc0 <__sanitizer_set_report_fd@@Base+0x34f8>  // b.hs, b.nlast
   1cdf8:	mov	x0, #0x0                   	// #0
   1cdfc:	ret
   1ce00:	mov	x0, x8
   1ce04:	ret
   1ce08:	cmp	w2, #0xa
   1ce0c:	b.ne	1cf00 <__sanitizer_set_report_fd@@Base+0x3638>  // b.any
   1ce10:	ldrb	w2, [x0]
   1ce14:	cmp	w2, #0x20
   1ce18:	b.eq	1cec0 <__sanitizer_set_report_fd@@Base+0x35f8>  // b.none
   1ce1c:	sub	w3, w2, #0x9
   1ce20:	and	w3, w3, #0xff
   1ce24:	cmp	w3, #0x4
   1ce28:	b.ls	1cec0 <__sanitizer_set_report_fd@@Base+0x35f8>  // b.plast
   1ce2c:	cmp	w2, #0x2b
   1ce30:	b.eq	1ceec <__sanitizer_set_report_fd@@Base+0x3624>  // b.none
   1ce34:	cmp	w2, #0x2d
   1ce38:	b.eq	1cec8 <__sanitizer_set_report_fd@@Base+0x3600>  // b.none
   1ce3c:	mov	w4, w2
   1ce40:	mov	x5, x0
   1ce44:	mov	w8, #0x1                   	// #1
   1ce48:	sub	w2, w2, #0x30
   1ce4c:	cmp	w2, #0x9
   1ce50:	b.hi	1cf24 <__sanitizer_set_report_fd@@Base+0x365c>  // b.pmore
   1ce54:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
   1ce58:	mov	x3, #0x0                   	// #0
   1ce5c:	movk	x7, #0x1999, lsl #48
   1ce60:	mov	x6, #0xffffffffffffffff    	// #-1
   1ce64:	nop
   1ce68:	sub	w0, w4, #0x30
   1ce6c:	add	x2, x3, x3, lsl #2
   1ce70:	cmp	x3, x7
   1ce74:	ldrb	w4, [x5, #1]!
   1ce78:	sxtw	x0, w0
   1ce7c:	lsl	x2, x2, #1
   1ce80:	csel	x2, x2, x6, ls  // ls = plast
   1ce84:	mvn	x3, x0
   1ce88:	cmp	x3, x2
   1ce8c:	add	x0, x0, x2
   1ce90:	sub	w2, w4, #0x30
   1ce94:	csel	x3, x0, x6, cs  // cs = hs, nlast
   1ce98:	cmp	w2, #0x9
   1ce9c:	b.ls	1ce68 <__sanitizer_set_report_fd@@Base+0x35a0>  // b.plast
   1cea0:	cbz	x1, 1cea8 <__sanitizer_set_report_fd@@Base+0x35e0>
   1cea4:	str	x5, [x1]
   1cea8:	cmp	w8, #0x1
   1ceac:	b.ne	1cedc <__sanitizer_set_report_fd@@Base+0x3614>  // b.any
   1ceb0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1ceb4:	cmp	x3, x0
   1ceb8:	csel	x0, x3, x0, ls  // ls = plast
   1cebc:	ret
   1cec0:	add	x0, x0, #0x1
   1cec4:	b	1ce10 <__sanitizer_set_report_fd@@Base+0x3548>
   1cec8:	ldrb	w2, [x0, #1]
   1cecc:	add	x5, x0, #0x1
   1ced0:	mov	w8, #0xffffffff            	// #-1
   1ced4:	mov	w4, w2
   1ced8:	b	1ce48 <__sanitizer_set_report_fd@@Base+0x3580>
   1cedc:	cmp	x3, #0x0
   1cee0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1cee4:	csneg	x0, x0, x3, lt  // lt = tstop
   1cee8:	ret
   1ceec:	ldrb	w2, [x0, #1]
   1cef0:	add	x5, x0, #0x1
   1cef4:	mov	w8, #0x1                   	// #1
   1cef8:	mov	w4, w2
   1cefc:	b	1ce48 <__sanitizer_set_report_fd@@Base+0x3580>
   1cf00:	str	x30, [sp, #-16]!
   1cf04:	sxtw	x3, w2
   1cf08:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1cf0c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1cf10:	add	x0, x0, #0x6a8
   1cf14:	add	x2, x2, #0x690
   1cf18:	mov	x4, #0xa                   	// #10
   1cf1c:	mov	w1, #0xe5                  	// #229
   1cf20:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1cf24:	mov	x5, x0
   1cf28:	mov	x3, #0x0                   	// #0
   1cf2c:	cbnz	x1, 1cea4 <__sanitizer_set_report_fd@@Base+0x35dc>
   1cf30:	mov	x0, #0x0                   	// #0
   1cf34:	ret
   1cf38:	mov	w2, #0xa                   	// #10
   1cf3c:	mov	x1, #0x0                   	// #0
   1cf40:	b	1ce08 <__sanitizer_set_report_fd@@Base+0x3540>
   1cf44:	nop
   1cf48:	mov	x4, #0x10000000000         	// #1099511627776
   1cf4c:	cmp	x1, x4
   1cf50:	b.hi	1d260 <__sanitizer_set_report_fd@@Base+0x3998>  // b.pmore
   1cf54:	add	x4, x0, x1
   1cf58:	add	x2, x0, #0x7
   1cf5c:	and	x2, x2, #0xfffffffffffffff8
   1cf60:	cmp	x0, x4
   1cf64:	and	x6, x4, #0xfffffffffffffff8
   1cf68:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
   1cf6c:	mov	x8, x2
   1cf70:	mov	x7, x6
   1cf74:	mov	x1, x0
   1cf78:	mov	x3, #0x0                   	// #0
   1cf7c:	b.cs	1cf94 <__sanitizer_set_report_fd@@Base+0x36cc>  // b.hs, b.nlast
   1cf80:	ldrb	w5, [x1], #1
   1cf84:	cmp	x2, x1
   1cf88:	orr	x3, x3, x5
   1cf8c:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   1cf90:	b.hi	1cf80 <__sanitizer_set_report_fd@@Base+0x36b8>  // b.pmore
   1cf94:	cmp	x2, x6
   1cf98:	b.cs	1d05c <__sanitizer_set_report_fd@@Base+0x3794>  // b.hs, b.nlast
   1cf9c:	sub	x1, x6, x2
   1cfa0:	add	x9, x2, #0x1
   1cfa4:	sub	x1, x1, #0x1
   1cfa8:	cmp	x6, x9
   1cfac:	mov	x10, #0x1                   	// #1
   1cfb0:	lsr	x5, x1, #3
   1cfb4:	csinc	x5, x10, x5, cc  // cc = lo, ul, last
   1cfb8:	cmp	x1, #0x27
   1cfbc:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   1cfc0:	b.cc	1d004 <__sanitizer_set_report_fd@@Base+0x373c>  // b.lo, b.ul, b.last
   1cfc4:	movi	v0.4s, #0x0
   1cfc8:	lsr	x1, x5, #1
   1cfcc:	add	x1, x2, x1, lsl #4
   1cfd0:	ldr	q1, [x2], #16
   1cfd4:	orr	v0.16b, v0.16b, v1.16b
   1cfd8:	cmp	x2, x1
   1cfdc:	b.ne	1cfd0 <__sanitizer_set_report_fd@@Base+0x3708>  // b.any
   1cfe0:	movi	v1.4s, #0x0
   1cfe4:	and	x1, x5, #0xfffffffffffffffe
   1cfe8:	cmp	x5, x1
   1cfec:	add	x8, x8, x1, lsl #3
   1cff0:	ext	v1.16b, v0.16b, v1.16b, #8
   1cff4:	orr	v0.16b, v0.16b, v1.16b
   1cff8:	mov	x1, v0.d[0]
   1cffc:	orr	x3, x3, x1
   1d000:	b.eq	1d05c <__sanitizer_set_report_fd@@Base+0x3794>  // b.none
   1d004:	mov	x1, x8
   1d008:	ldr	x2, [x1], #8
   1d00c:	orr	x3, x3, x2
   1d010:	cmp	x6, x1
   1d014:	b.ls	1d05c <__sanitizer_set_report_fd@@Base+0x3794>  // b.plast
   1d018:	ldr	x1, [x8, #8]
   1d01c:	add	x2, x8, #0x10
   1d020:	cmp	x6, x2
   1d024:	orr	x3, x3, x1
   1d028:	b.ls	1d05c <__sanitizer_set_report_fd@@Base+0x3794>  // b.plast
   1d02c:	ldr	x1, [x8, #16]
   1d030:	add	x2, x8, #0x18
   1d034:	cmp	x6, x2
   1d038:	orr	x3, x3, x1
   1d03c:	b.ls	1d05c <__sanitizer_set_report_fd@@Base+0x3794>  // b.plast
   1d040:	ldr	x1, [x8, #24]
   1d044:	add	x2, x8, #0x20
   1d048:	cmp	x6, x2
   1d04c:	orr	x3, x3, x1
   1d050:	b.ls	1d05c <__sanitizer_set_report_fd@@Base+0x3794>  // b.plast
   1d054:	ldr	x1, [x8, #32]
   1d058:	orr	x3, x3, x1
   1d05c:	cmp	x0, x6
   1d060:	b.hi	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.pmore
   1d064:	cmp	x4, x6
   1d068:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d06c:	add	x1, x6, #0x1
   1d070:	sub	x0, x4, #0x1
   1d074:	cmp	x4, x1
   1d078:	sub	x2, x4, x6
   1d07c:	sub	x0, x0, x6
   1d080:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
   1d084:	cmp	x0, #0xe
   1d088:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   1d08c:	b.cc	1d134 <__sanitizer_set_report_fd@@Base+0x386c>  // b.lo, b.ul, b.last
   1d090:	sub	x1, x2, #0x10
   1d094:	mov	x0, #0x0                   	// #0
   1d098:	movi	v5.4s, #0x0
   1d09c:	lsr	x1, x1, #4
   1d0a0:	add	x1, x1, #0x1
   1d0a4:	nop
   1d0a8:	ldr	q2, [x6], #16
   1d0ac:	add	x0, x0, #0x1
   1d0b0:	cmp	x1, x0
   1d0b4:	uxtl	v3.8h, v2.8b
   1d0b8:	uxtl2	v2.8h, v2.16b
   1d0bc:	uxtl	v0.4s, v3.4h
   1d0c0:	uxtl2	v3.4s, v3.8h
   1d0c4:	uxtl	v4.4s, v2.4h
   1d0c8:	uxtl2	v2.4s, v2.8h
   1d0cc:	uxtl	v1.2d, v0.2s
   1d0d0:	uxtl2	v0.2d, v0.4s
   1d0d4:	uxtl	v16.2d, v3.2s
   1d0d8:	uxtl2	v3.2d, v3.4s
   1d0dc:	uxtl	v7.2d, v4.2s
   1d0e0:	orr	v1.16b, v1.16b, v0.16b
   1d0e4:	uxtl2	v4.2d, v4.4s
   1d0e8:	uxtl	v6.2d, v2.2s
   1d0ec:	uxtl2	v2.2d, v2.4s
   1d0f0:	orr	v0.16b, v1.16b, v16.16b
   1d0f4:	orr	v0.16b, v0.16b, v3.16b
   1d0f8:	orr	v0.16b, v0.16b, v7.16b
   1d0fc:	orr	v0.16b, v0.16b, v4.16b
   1d100:	orr	v0.16b, v0.16b, v6.16b
   1d104:	orr	v0.16b, v0.16b, v2.16b
   1d108:	orr	v5.16b, v5.16b, v0.16b
   1d10c:	b.hi	1d0a8 <__sanitizer_set_report_fd@@Base+0x37e0>  // b.pmore
   1d110:	movi	v0.4s, #0x0
   1d114:	lsl	x1, x1, #4
   1d118:	add	x7, x7, x1
   1d11c:	cmp	x2, x1
   1d120:	ext	v0.16b, v5.16b, v0.16b, #8
   1d124:	orr	v5.16b, v5.16b, v0.16b
   1d128:	mov	x0, v5.d[0]
   1d12c:	orr	x3, x3, x0
   1d130:	b.eq	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.none
   1d134:	mov	x0, x7
   1d138:	ldrb	w1, [x0], #1
   1d13c:	orr	x3, x3, x1
   1d140:	cmp	x4, x0
   1d144:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d148:	ldrb	w0, [x7, #1]
   1d14c:	add	x1, x7, #0x2
   1d150:	cmp	x4, x1
   1d154:	orr	x3, x3, x0
   1d158:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d15c:	ldrb	w0, [x7, #2]
   1d160:	add	x1, x7, #0x3
   1d164:	cmp	x4, x1
   1d168:	orr	x3, x3, x0
   1d16c:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d170:	ldrb	w0, [x7, #3]
   1d174:	add	x1, x7, #0x4
   1d178:	cmp	x4, x1
   1d17c:	orr	x3, x3, x0
   1d180:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d184:	ldrb	w0, [x7, #4]
   1d188:	add	x1, x7, #0x5
   1d18c:	cmp	x4, x1
   1d190:	orr	x3, x3, x0
   1d194:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d198:	ldrb	w0, [x7, #5]
   1d19c:	add	x1, x7, #0x6
   1d1a0:	cmp	x4, x1
   1d1a4:	orr	x3, x3, x0
   1d1a8:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d1ac:	ldrb	w0, [x7, #6]
   1d1b0:	add	x1, x7, #0x7
   1d1b4:	cmp	x4, x1
   1d1b8:	orr	x3, x3, x0
   1d1bc:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d1c0:	ldrb	w0, [x7, #7]
   1d1c4:	add	x1, x7, #0x8
   1d1c8:	cmp	x4, x1
   1d1cc:	orr	x3, x3, x0
   1d1d0:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d1d4:	ldrb	w0, [x7, #8]
   1d1d8:	add	x1, x7, #0x9
   1d1dc:	cmp	x4, x1
   1d1e0:	orr	x3, x3, x0
   1d1e4:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d1e8:	ldrb	w0, [x7, #9]
   1d1ec:	add	x1, x7, #0xa
   1d1f0:	cmp	x4, x1
   1d1f4:	orr	x3, x3, x0
   1d1f8:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d1fc:	ldrb	w0, [x7, #10]
   1d200:	add	x1, x7, #0xb
   1d204:	cmp	x4, x1
   1d208:	orr	x3, x3, x0
   1d20c:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d210:	ldrb	w0, [x7, #11]
   1d214:	add	x1, x7, #0xc
   1d218:	cmp	x4, x1
   1d21c:	orr	x3, x3, x0
   1d220:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d224:	ldrb	w0, [x7, #12]
   1d228:	add	x1, x7, #0xd
   1d22c:	cmp	x4, x1
   1d230:	orr	x3, x3, x0
   1d234:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d238:	ldrb	w0, [x7, #13]
   1d23c:	add	x1, x7, #0xe
   1d240:	cmp	x4, x1
   1d244:	orr	x3, x3, x0
   1d248:	b.ls	1d254 <__sanitizer_set_report_fd@@Base+0x398c>  // b.plast
   1d24c:	ldrb	w0, [x7, #14]
   1d250:	orr	x3, x3, x0
   1d254:	cmp	x3, #0x0
   1d258:	cset	w0, eq  // eq = none
   1d25c:	ret
   1d260:	str	x30, [sp, #-16]!
   1d264:	mov	x3, x1
   1d268:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d26c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d270:	add	x2, x2, #0x6e8
   1d274:	add	x0, x0, #0x6a8
   1d278:	mov	w1, #0x104                 	// #260
   1d27c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d280:	mov	x1, #0x4810                	// #18448
   1d284:	add	x0, x0, x1
   1d288:	b	1dea8 <__sanitizer_set_report_fd@@Base+0x45e0>
   1d28c:	nop
   1d290:	stp	x19, x20, [sp, #-48]!
   1d294:	mov	x20, x0
   1d298:	stp	x21, x22, [sp, #16]
   1d29c:	mov	x21, x1
   1d2a0:	mov	x1, #0x4810                	// #18448
   1d2a4:	add	x22, x0, x1
   1d2a8:	str	x30, [sp, #32]
   1d2ac:	mov	x0, x22
   1d2b0:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   1d2b4:	ldr	x19, [x20, #18536]
   1d2b8:	cmp	x19, #0x3ff
   1d2bc:	b.hi	1d300 <__sanitizer_set_report_fd@@Base+0x3a38>  // b.pmore
   1d2c0:	add	x0, x19, #0x1
   1d2c4:	str	x0, [x20, #18536]
   1d2c8:	mov	x0, x21
   1d2cc:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   1d2d0:	mov	x3, x0
   1d2d4:	add	x1, x20, x19, lsl #5
   1d2d8:	mov	x0, x22
   1d2dc:	add	x2, x1, #0x4, lsl #12
   1d2e0:	ldp	x21, x22, [sp, #16]
   1d2e4:	ldr	x30, [sp, #32]
   1d2e8:	str	x3, [x1, #18544]
   1d2ec:	str	xzr, [x1, #18552]
   1d2f0:	str	xzr, [x1, #18560]
   1d2f4:	strb	wzr, [x2, #2184]
   1d2f8:	ldp	x19, x20, [sp], #48
   1d2fc:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   1d300:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d304:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d308:	add	x0, x0, #0x708
   1d30c:	mov	x2, #0x400                 	// #1024
   1d310:	ldr	x1, [x1, #4008]
   1d314:	ldr	x1, [x1]
   1d318:	bl	22d00 <OnPrint@@Base+0x398>
   1d31c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1d320:	stp	x19, x20, [sp, #-160]!
   1d324:	mov	x3, #0x4810                	// #18448
   1d328:	mov	x20, x0
   1d32c:	stp	x21, x22, [sp, #16]
   1d330:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d334:	add	x0, x0, x3
   1d338:	mov	x19, x1
   1d33c:	stp	x23, x24, [sp, #32]
   1d340:	stp	x25, x26, [sp, #48]
   1d344:	str	x30, [sp, #80]
   1d348:	str	x0, [sp, #112]
   1d34c:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   1d350:	ldr	x22, [x21, #4000]
   1d354:	ldr	x0, [x22]
   1d358:	cbz	x0, 1d604 <__sanitizer_set_report_fd@@Base+0x3d3c>
   1d35c:	sub	x1, x0, #0x1
   1d360:	tst	x1, x0
   1d364:	b.ne	1d6a4 <__sanitizer_set_report_fd@@Base+0x3ddc>  // b.any
   1d368:	add	x25, x0, #0xfff
   1d36c:	neg	x0, x0
   1d370:	and	x23, x25, x0
   1d374:	mov	w2, #0x0                   	// #0
   1d378:	mov	x0, x23
   1d37c:	adrp	x22, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1d380:	add	x1, x22, #0x700
   1d384:	str	x23, [sp, #120]
   1d388:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1d38c:	mov	x24, x0
   1d390:	mov	x2, #0x0                   	// #0
   1d394:	mov	x1, #0x0                   	// #0
   1d398:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1d39c:	mov	x1, #0x0                   	// #0
   1d3a0:	mov	x0, #0x0                   	// #0
   1d3a4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1d3a8:	cmp	x23, #0xfff
   1d3ac:	b.ls	1d610 <__sanitizer_set_report_fd@@Base+0x3d48>  // b.plast
   1d3b0:	mov	x0, x24
   1d3b4:	mov	x2, #0x1000                	// #4096
   1d3b8:	mov	w1, #0x0                   	// #0
   1d3bc:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1d3c0:	strb	wzr, [x24]
   1d3c4:	cbz	x19, 1d3e8 <__sanitizer_set_report_fd@@Base+0x3b20>
   1d3c8:	mov	x1, x24
   1d3cc:	mov	x0, x19
   1d3d0:	mov	x2, #0xfff                 	// #4095
   1d3d4:	bl	1db20 <__sanitizer_set_report_fd@@Base+0x4258>
   1d3d8:	cbz	x0, 1d3e8 <__sanitizer_set_report_fd@@Base+0x3b20>
   1d3dc:	ldrb	w0, [x24]
   1d3e0:	cbnz	w0, 1d66c <__sanitizer_set_report_fd@@Base+0x3da4>
   1d3e4:	nop
   1d3e8:	add	x0, sp, #0x80
   1d3ec:	strb	wzr, [sp, #152]
   1d3f0:	bl	1fb50 <__sanitizer_set_report_fd@@Base+0x6288>
   1d3f4:	ldr	x0, [x20, #18536]
   1d3f8:	cbz	x0, 1d50c <__sanitizer_set_report_fd@@Base+0x3c44>
   1d3fc:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d400:	mov	x0, #0x4870                	// #18544
   1d404:	adrp	x26, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d408:	add	x19, x20, x0
   1d40c:	ldr	x22, [x22, #3680]
   1d410:	add	x0, x26, #0x790
   1d414:	stp	x27, x28, [sp, #64]
   1d418:	stp	x0, xzr, [sp, #96]
   1d41c:	ldr	x21, [sp, #144]
   1d420:	ldr	x5, [sp, #128]
   1d424:	add	x21, x21, x21, lsl #3
   1d428:	add	x21, x5, x21, lsl #3
   1d42c:	cmp	x5, x21
   1d430:	b.eq	1d6f4 <__sanitizer_set_report_fd@@Base+0x3e2c>  // b.none
   1d434:	mov	x28, x5
   1d438:	mov	w27, #0x0                   	// #0
   1d43c:	mov	w23, #0x1                   	// #1
   1d440:	ldr	x26, [x28, #56]
   1d444:	cbz	x26, 1d4cc <__sanitizer_set_report_fd@@Base+0x3c04>
   1d448:	ldrb	w25, [x26, #24]
   1d44c:	cbz	w25, 1d5b0 <__sanitizer_set_report_fd@@Base+0x3ce8>
   1d450:	ldr	x0, [x19]
   1d454:	ldr	x1, [x28]
   1d458:	bl	15bf0 <__sancov_default_options@@Base+0x3120>
   1d45c:	tst	w0, #0xff
   1d460:	b.ne	1d478 <__sanitizer_set_report_fd@@Base+0x3bb0>  // b.any
   1d464:	ldr	x0, [x19, #16]
   1d468:	cbz	x0, 1d5b0 <__sanitizer_set_report_fd@@Base+0x3ce8>
   1d46c:	ldr	x1, [x28]
   1d470:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   1d474:	cbnz	w0, 1d5b0 <__sanitizer_set_report_fd@@Base+0x3ce8>
   1d478:	cbnz	w27, 1d808 <__sanitizer_set_report_fd@@Base+0x3f40>
   1d47c:	ldrb	w27, [x19, #24]
   1d480:	cbnz	w27, 1d5b0 <__sanitizer_set_report_fd@@Base+0x3ce8>
   1d484:	ldr	w0, [x22]
   1d488:	cbnz	w0, 1d5bc <__sanitizer_set_report_fd@@Base+0x3cf4>
   1d48c:	strb	w23, [x19, #24]
   1d490:	ldr	x0, [x28]
   1d494:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   1d498:	ldr	x3, [x20]
   1d49c:	str	x0, [x19, #8]
   1d4a0:	cmp	x3, #0x7f
   1d4a4:	b.hi	1d5e8 <__sanitizer_set_report_fd@@Base+0x3d20>  // b.pmore
   1d4a8:	add	x0, x20, x3, lsl #4
   1d4ac:	add	x3, x3, #0x1
   1d4b0:	ldr	x1, [x26, #8]
   1d4b4:	str	x1, [x0, #8]
   1d4b8:	ldr	x1, [x26, #16]
   1d4bc:	str	x1, [x0, #16]
   1d4c0:	dmb	ish
   1d4c4:	str	x3, [x20]
   1d4c8:	mov	w27, w25
   1d4cc:	add	x28, x28, #0x48
   1d4d0:	cmp	x21, x28
   1d4d4:	b.ne	1d440 <__sanitizer_set_report_fd@@Base+0x3b78>  // b.any
   1d4d8:	ldrb	w0, [x19, #24]
   1d4dc:	eor	w0, w0, #0x1
   1d4e0:	orr	w2, w27, w0
   1d4e4:	tst	w2, #0xff
   1d4e8:	b.eq	1d838 <__sanitizer_set_report_fd@@Base+0x3f70>  // b.none
   1d4ec:	ldr	x1, [sp, #104]
   1d4f0:	add	x19, x19, #0x20
   1d4f4:	ldr	x0, [x20, #18536]
   1d4f8:	add	x1, x1, #0x1
   1d4fc:	str	x1, [sp, #104]
   1d500:	cmp	x0, x1
   1d504:	b.hi	1d41c <__sanitizer_set_report_fd@@Base+0x3b54>  // b.pmore
   1d508:	ldp	x27, x28, [sp, #64]
   1d50c:	add	x1, x20, #0xc, lsl #12
   1d510:	ldr	x0, [sp, #144]
   1d514:	ldrb	w1, [x1, #2160]
   1d518:	ldr	x19, [sp, #128]
   1d51c:	add	x0, x0, x0, lsl #3
   1d520:	add	x22, x19, x0, lsl #3
   1d524:	cbz	w1, 1d568 <__sanitizer_set_report_fd@@Base+0x3ca0>
   1d528:	mov	x21, x19
   1d52c:	cmp	x19, x22
   1d530:	b.eq	1d584 <__sanitizer_set_report_fd@@Base+0x3cbc>  // b.none
   1d534:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d538:	adrp	x26, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d53c:	add	x26, x26, #0x8c0
   1d540:	ldr	x23, [x23, #3680]
   1d544:	ldrb	w0, [x21, #44]
   1d548:	cbnz	w0, 1d6fc <__sanitizer_set_report_fd@@Base+0x3e34>
   1d54c:	add	x21, x21, #0x48
   1d550:	cmp	x22, x21
   1d554:	b.ne	1d544 <__sanitizer_set_report_fd@@Base+0x3c7c>  // b.any
   1d558:	ldr	x0, [sp, #144]
   1d55c:	ldr	x19, [sp, #128]
   1d560:	add	x0, x0, x0, lsl #3
   1d564:	add	x22, x19, x0, lsl #3
   1d568:	cmp	x19, x22
   1d56c:	b.eq	1d584 <__sanitizer_set_report_fd@@Base+0x3cbc>  // b.none
   1d570:	mov	x0, x19
   1d574:	add	x19, x19, #0x48
   1d578:	bl	15918 <__sancov_default_options@@Base+0x2e48>
   1d57c:	cmp	x22, x19
   1d580:	b.ne	1d570 <__sanitizer_set_report_fd@@Base+0x3ca8>  // b.any
   1d584:	ldr	x1, [sp, #120]
   1d588:	mov	x0, x24
   1d58c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1d590:	ldr	x0, [sp, #112]
   1d594:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   1d598:	ldp	x21, x22, [sp, #16]
   1d59c:	ldp	x23, x24, [sp, #32]
   1d5a0:	ldp	x25, x26, [sp, #48]
   1d5a4:	ldr	x30, [sp, #80]
   1d5a8:	ldp	x19, x20, [sp], #160
   1d5ac:	ret
   1d5b0:	ldr	x26, [x26]
   1d5b4:	cbnz	x26, 1d448 <__sanitizer_set_report_fd@@Base+0x3b80>
   1d5b8:	b	1d4cc <__sanitizer_set_report_fd@@Base+0x3c04>
   1d5bc:	ldr	x1, [x19]
   1d5c0:	ldr	x2, [x28]
   1d5c4:	ldr	x0, [sp, #96]
   1d5c8:	bl	22d00 <OnPrint@@Base+0x398>
   1d5cc:	strb	w23, [x19, #24]
   1d5d0:	ldr	x0, [x28]
   1d5d4:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   1d5d8:	ldr	x3, [x20]
   1d5dc:	str	x0, [x19, #8]
   1d5e0:	cmp	x3, #0x7f
   1d5e4:	b.ls	1d4a8 <__sanitizer_set_report_fd@@Base+0x3be0>  // b.plast
   1d5e8:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d5ec:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d5f0:	add	x2, x2, #0x7d0
   1d5f4:	add	x0, x0, #0x820
   1d5f8:	mov	x4, #0x80                  	// #128
   1d5fc:	mov	w1, #0x52                  	// #82
   1d600:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d604:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1d608:	str	x0, [x22]
   1d60c:	b	1d35c <__sanitizer_set_report_fd@@Base+0x3a94>
   1d610:	ldr	x21, [x21, #4000]
   1d614:	ldr	x0, [x21]
   1d618:	cbz	x0, 1d6e8 <__sanitizer_set_report_fd@@Base+0x3e20>
   1d61c:	sub	x1, x0, #0x1
   1d620:	tst	x1, x0
   1d624:	b.ne	1d6a4 <__sanitizer_set_report_fd@@Base+0x3ddc>  // b.any
   1d628:	add	x21, x0, #0xfff
   1d62c:	neg	x0, x0
   1d630:	and	x21, x21, x0
   1d634:	add	x1, x22, #0x700
   1d638:	mov	x0, x21
   1d63c:	mov	w2, #0x0                   	// #0
   1d640:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1d644:	mov	x22, x0
   1d648:	mov	x1, x24
   1d64c:	mov	x2, #0x0                   	// #0
   1d650:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1d654:	ldr	x1, [sp, #120]
   1d658:	mov	x0, x24
   1d65c:	mov	x24, x22
   1d660:	str	x21, [sp, #120]
   1d664:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1d668:	b	1d3b0 <__sanitizer_set_report_fd@@Base+0x3ae8>
   1d66c:	ldr	x1, [x20, #18536]
   1d670:	cbz	x1, 1d3e8 <__sanitizer_set_report_fd@@Base+0x3b20>
   1d674:	mov	x2, #0x4870                	// #18544
   1d678:	add	x21, x20, x2
   1d67c:	mov	x22, #0x0                   	// #0
   1d680:	ldrb	w0, [x21, #24]
   1d684:	cbnz	w0, 1d690 <__sanitizer_set_report_fd@@Base+0x3dc8>
   1d688:	ldr	x0, [x21, #16]
   1d68c:	cbz	x0, 1d6b8 <__sanitizer_set_report_fd@@Base+0x3df0>
   1d690:	add	x22, x22, #0x1
   1d694:	add	x21, x21, #0x20
   1d698:	cmp	x22, x1
   1d69c:	b.cc	1d680 <__sanitizer_set_report_fd@@Base+0x3db8>  // b.lo, b.ul, b.last
   1d6a0:	b	1d3e8 <__sanitizer_set_report_fd@@Base+0x3b20>
   1d6a4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1d6a8:	add	x0, x0, #0x6e8
   1d6ac:	stp	x27, x28, [sp, #64]
   1d6b0:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1d6b4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1d6b8:	ldr	x0, [x21]
   1d6bc:	mov	x1, x19
   1d6c0:	bl	15bf0 <__sancov_default_options@@Base+0x3120>
   1d6c4:	tst	w0, #0xff
   1d6c8:	b.ne	1d6d4 <__sanitizer_set_report_fd@@Base+0x3e0c>  // b.any
   1d6cc:	ldr	x1, [x20, #18536]
   1d6d0:	b	1d690 <__sanitizer_set_report_fd@@Base+0x3dc8>
   1d6d4:	mov	x0, x24
   1d6d8:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   1d6dc:	str	x0, [x21, #16]
   1d6e0:	ldr	x1, [x20, #18536]
   1d6e4:	b	1d690 <__sanitizer_set_report_fd@@Base+0x3dc8>
   1d6e8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1d6ec:	str	x0, [x21]
   1d6f0:	b	1d61c <__sanitizer_set_report_fd@@Base+0x3d54>
   1d6f4:	mov	w27, #0x0                   	// #0
   1d6f8:	b	1d4d8 <__sanitizer_set_report_fd@@Base+0x3c10>
   1d6fc:	ldr	x19, [x21, #56]
   1d700:	cbz	x19, 1d54c <__sanitizer_set_report_fd@@Base+0x3c84>
   1d704:	ldrb	w1, [x19, #24]
   1d708:	cbz	w1, 1d7b4 <__sanitizer_set_report_fd@@Base+0x3eec>
   1d70c:	ldr	x4, [x19, #8]
   1d710:	ldr	x6, [x20, #2056]
   1d714:	dmb	ish
   1d718:	add	x5, x20, #0x810
   1d71c:	mov	x2, #0x0                   	// #0
   1d720:	mov	x1, x5
   1d724:	cbz	x6, 1d780 <__sanitizer_set_report_fd@@Base+0x3eb8>
   1d728:	ldr	x3, [x1]
   1d72c:	cmp	x4, x3
   1d730:	b.cc	1d7c0 <__sanitizer_set_report_fd@@Base+0x3ef8>  // b.lo, b.ul, b.last
   1d734:	ldr	x3, [x1, #8]
   1d738:	cmp	x4, x3
   1d73c:	b.cs	1d7c0 <__sanitizer_set_report_fd@@Base+0x3ef8>  // b.hs, b.nlast
   1d740:	ldr	x2, [x19, #16]
   1d744:	sub	x2, x2, #0x1
   1d748:	ldr	x0, [x20, #2056]
   1d74c:	dmb	ish
   1d750:	cbz	x0, 1d780 <__sanitizer_set_report_fd@@Base+0x3eb8>
   1d754:	mov	x1, #0x0                   	// #0
   1d758:	ldr	x3, [x5]
   1d75c:	cmp	x2, x3
   1d760:	b.cc	1d770 <__sanitizer_set_report_fd@@Base+0x3ea8>  // b.lo, b.ul, b.last
   1d764:	ldr	x3, [x5, #8]
   1d768:	cmp	x2, x3
   1d76c:	b.cc	1d7b4 <__sanitizer_set_report_fd@@Base+0x3eec>  // b.lo, b.ul, b.last
   1d770:	add	x1, x1, #0x1
   1d774:	add	x5, x5, #0x10
   1d778:	cmp	x1, x0
   1d77c:	b.ne	1d758 <__sanitizer_set_report_fd@@Base+0x3e90>  // b.any
   1d780:	ldr	w0, [x23]
   1d784:	cbnz	w0, 1d7d4 <__sanitizer_set_report_fd@@Base+0x3f0c>
   1d788:	ldr	x3, [x20, #2056]
   1d78c:	cmp	x3, #0x3ff
   1d790:	b.hi	1d7e8 <__sanitizer_set_report_fd@@Base+0x3f20>  // b.pmore
   1d794:	add	x1, x20, x3, lsl #4
   1d798:	add	x3, x3, #0x1
   1d79c:	ldr	x0, [x19, #8]
   1d7a0:	str	x0, [x1, #2064]
   1d7a4:	ldr	x0, [x19, #16]
   1d7a8:	str	x0, [x1, #2072]
   1d7ac:	dmb	ish
   1d7b0:	str	x3, [x20, #2056]
   1d7b4:	ldr	x19, [x19]
   1d7b8:	cbnz	x19, 1d704 <__sanitizer_set_report_fd@@Base+0x3e3c>
   1d7bc:	b	1d54c <__sanitizer_set_report_fd@@Base+0x3c84>
   1d7c0:	add	x2, x2, #0x1
   1d7c4:	add	x1, x1, #0x10
   1d7c8:	cmp	x2, x6
   1d7cc:	b.ne	1d728 <__sanitizer_set_report_fd@@Base+0x3e60>  // b.any
   1d7d0:	b	1d780 <__sanitizer_set_report_fd@@Base+0x3eb8>
   1d7d4:	ldp	x1, x2, [x19, #8]
   1d7d8:	mov	x0, x26
   1d7dc:	ldr	x3, [x21]
   1d7e0:	bl	22d00 <OnPrint@@Base+0x398>
   1d7e4:	b	1d788 <__sanitizer_set_report_fd@@Base+0x3ec0>
   1d7e8:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d7ec:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d7f0:	add	x2, x2, #0x8f8
   1d7f4:	add	x0, x0, #0x820
   1d7f8:	mov	x4, #0x400                 	// #1024
   1d7fc:	mov	w1, #0x6f                  	// #111
   1d800:	stp	x27, x28, [sp, #64]
   1d804:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d808:	ldr	x0, [sp, #104]
   1d80c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d810:	ldr	x4, [x28]
   1d814:	ldr	x1, [x1, #4008]
   1d818:	add	x20, x20, x0, lsl #5
   1d81c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d820:	add	x0, x0, #0x738
   1d824:	ldr	x1, [x1]
   1d828:	ldr	x2, [x20, #18544]
   1d82c:	ldr	x3, [x20, #18552]
   1d830:	bl	22d00 <OnPrint@@Base+0x398>
   1d834:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1d838:	ldr	x0, [sp, #104]
   1d83c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d840:	ldr	x1, [x1, #4008]
   1d844:	add	x20, x20, x0, lsl #5
   1d848:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d84c:	add	x0, x0, #0x868
   1d850:	ldr	x1, [x1]
   1d854:	ldr	x3, [x20, #18544]
   1d858:	ldr	x2, [x20, #18552]
   1d85c:	bl	22d00 <OnPrint@@Base+0x398>
   1d860:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1d864:	nop
   1d868:	mov	x1, #0x0                   	// #0
   1d86c:	b	1d320 <__sanitizer_set_report_fd@@Base+0x3a58>
   1d870:	stp	x19, x20, [sp, #-64]!
   1d874:	mov	x19, x1
   1d878:	mov	x20, x0
   1d87c:	mov	w2, #0x0                   	// #0
   1d880:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d884:	mov	x0, #0x3e80                	// #16000
   1d888:	add	x1, x1, #0x958
   1d88c:	str	x30, [sp, #16]
   1d890:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1d894:	str	x0, [x19]
   1d898:	add	x3, sp, #0x38
   1d89c:	add	x2, sp, #0x30
   1d8a0:	add	x1, sp, #0x28
   1d8a4:	mov	x0, x20
   1d8a8:	mov	x5, #0x0                   	// #0
   1d8ac:	mov	x4, #0x100000              	// #1048576
   1d8b0:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   1d8b4:	tst	w0, #0xff
   1d8b8:	b.eq	1d958 <__sanitizer_set_report_fd@@Base+0x4090>  // b.none
   1d8bc:	ldr	x4, [x19]
   1d8c0:	mov	x0, #0x1                   	// #1
   1d8c4:	ldr	x1, [sp, #40]
   1d8c8:	mov	w2, w0
   1d8cc:	str	x1, [x4]
   1d8d0:	ldr	x1, [sp, #40]
   1d8d4:	nop
   1d8d8:	ldrb	w3, [x1, x0]
   1d8dc:	add	x0, x0, #0x1
   1d8e0:	cbnz	w3, 1d8d8 <__sanitizer_set_report_fd@@Base+0x4010>
   1d8e4:	add	x5, x1, x0
   1d8e8:	ldrb	w1, [x1, x0]
   1d8ec:	sxtw	x3, w2
   1d8f0:	add	x6, x4, w2, sxtw #3
   1d8f4:	cbz	w1, 1d92c <__sanitizer_set_report_fd@@Base+0x4064>
   1d8f8:	str	x5, [x4, x3, lsl #3]
   1d8fc:	cmp	w2, #0x7cf
   1d900:	b.gt	1d93c <__sanitizer_set_report_fd@@Base+0x4074>
   1d904:	ldr	x1, [sp, #40]
   1d908:	add	w2, w2, #0x1
   1d90c:	ldrb	w3, [x1, x0]
   1d910:	add	x0, x0, #0x1
   1d914:	cbnz	w3, 1d8d8 <__sanitizer_set_report_fd@@Base+0x4010>
   1d918:	add	x5, x1, x0
   1d91c:	ldrb	w1, [x1, x0]
   1d920:	sxtw	x3, w2
   1d924:	add	x6, x4, w2, sxtw #3
   1d928:	cbnz	w1, 1d8f8 <__sanitizer_set_report_fd@@Base+0x4030>
   1d92c:	str	xzr, [x6]
   1d930:	ldr	x30, [sp, #16]
   1d934:	ldp	x19, x20, [sp], #64
   1d938:	ret
   1d93c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d940:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1d944:	add	x2, x2, #0x970
   1d948:	add	x0, x0, #0x990
   1d94c:	mov	x4, #0x7cf                 	// #1999
   1d950:	mov	w1, #0x23f                 	// #575
   1d954:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d958:	ldr	x0, [x19]
   1d95c:	ldr	x30, [sp, #16]
   1d960:	str	xzr, [x0]
   1d964:	ldp	x19, x20, [sp], #64
   1d968:	ret
   1d96c:	nop
   1d970:	mov	x2, x0
   1d974:	mov	w0, #0x0                   	// #0
   1d978:	cmn	x2, #0x1, lsl #12
   1d97c:	b.hi	1d984 <__sanitizer_set_report_fd@@Base+0x40bc>  // b.pmore
   1d980:	ret
   1d984:	mov	w0, #0x1                   	// #1
   1d988:	cbz	x1, 1d980 <__sanitizer_set_report_fd@@Base+0x40b8>
   1d98c:	neg	w2, w2
   1d990:	str	w2, [x1]
   1d994:	ret
   1d998:	mov	x8, #0xde                  	// #222
   1d99c:	sxtw	x2, w2
   1d9a0:	sxtw	x3, w3
   1d9a4:	sxtw	x4, w4
   1d9a8:	svc	#0x0
   1d9ac:	ret
   1d9b0:	mov	x8, #0xd7                  	// #215
   1d9b4:	svc	#0x0
   1d9b8:	ret
   1d9bc:	nop
   1d9c0:	mov	x8, #0xe2                  	// #226
   1d9c4:	sxtw	x2, w2
   1d9c8:	svc	#0x0
   1d9cc:	ret
   1d9d0:	mov	x8, #0x39                  	// #57
   1d9d4:	sxtw	x0, w0
   1d9d8:	svc	#0x0
   1d9dc:	ret
   1d9e0:	sxtw	x2, w1
   1d9e4:	mov	x8, #0x38                  	// #56
   1d9e8:	mov	x1, x0
   1d9ec:	mov	x0, #0xffffffffffffff9c    	// #-100
   1d9f0:	svc	#0x0
   1d9f4:	ret
   1d9f8:	mov	w4, w1
   1d9fc:	mov	w3, w2
   1da00:	mov	x1, x0
   1da04:	mov	x8, #0x38                  	// #56
   1da08:	sxtw	x2, w4
   1da0c:	mov	x0, #0xffffffffffffff9c    	// #-100
   1da10:	svc	#0x0
   1da14:	ret
   1da18:	sxtw	x3, w0
   1da1c:	mov	x0, x3
   1da20:	mov	x8, #0x3f                  	// #63
   1da24:	svc	#0x0
   1da28:	cmn	x0, #0x1, lsl #12
   1da2c:	b.hi	1da34 <__sanitizer_set_report_fd@@Base+0x416c>  // b.pmore
   1da30:	ret
   1da34:	cmn	w0, #0x4
   1da38:	b.eq	1da1c <__sanitizer_set_report_fd@@Base+0x4154>  // b.none
   1da3c:	ret
   1da40:	sxtw	x3, w0
   1da44:	mov	x0, x3
   1da48:	mov	x8, #0x40                  	// #64
   1da4c:	svc	#0x0
   1da50:	cmn	x0, #0x1, lsl #12
   1da54:	b.hi	1da5c <__sanitizer_set_report_fd@@Base+0x4194>  // b.pmore
   1da58:	ret
   1da5c:	cmn	w0, #0x4
   1da60:	b.eq	1da44 <__sanitizer_set_report_fd@@Base+0x417c>  // b.none
   1da64:	ret
   1da68:	sxtw	x2, w0
   1da6c:	mov	x0, x2
   1da70:	mov	x8, #0x2e                  	// #46
   1da74:	svc	#0x0
   1da78:	cmn	x0, #0x1, lsl #12
   1da7c:	b.hi	1da84 <__sanitizer_set_report_fd@@Base+0x41bc>  // b.pmore
   1da80:	ret
   1da84:	cmn	w0, #0x4
   1da88:	b.eq	1da6c <__sanitizer_set_report_fd@@Base+0x41a4>  // b.none
   1da8c:	ret
   1da90:	mov	x2, x1
   1da94:	mov	x8, #0x4f                  	// #79
   1da98:	mov	x1, x0
   1da9c:	mov	x3, #0x0                   	// #0
   1daa0:	mov	x0, #0xffffffffffffff9c    	// #-100
   1daa4:	svc	#0x0
   1daa8:	ret
   1daac:	nop
   1dab0:	mov	x2, x1
   1dab4:	mov	x8, #0x4f                  	// #79
   1dab8:	mov	x1, x0
   1dabc:	mov	x3, #0x100                 	// #256
   1dac0:	mov	x0, #0xffffffffffffff9c    	// #-100
   1dac4:	svc	#0x0
   1dac8:	ret
   1dacc:	nop
   1dad0:	mov	x8, #0x50                  	// #80
   1dad4:	sxtw	x0, w0
   1dad8:	svc	#0x0
   1dadc:	ret
   1dae0:	sub	sp, sp, #0x80
   1dae4:	mov	x8, #0x50                  	// #80
   1dae8:	mov	x1, sp
   1daec:	sxtw	x0, w0
   1daf0:	svc	#0x0
   1daf4:	ldr	x1, [sp, #48]
   1daf8:	cmp	x0, #0x0
   1dafc:	add	sp, sp, #0x80
   1db00:	csinv	x0, x1, xzr, eq  // eq = none
   1db04:	ret
   1db08:	mov	x8, #0x18                  	// #24
   1db0c:	mov	x2, #0x0                   	// #0
   1db10:	sxtw	x0, w0
   1db14:	sxtw	x1, w1
   1db18:	svc	#0x0
   1db1c:	ret
   1db20:	mov	x4, x1
   1db24:	mov	x3, x2
   1db28:	mov	x1, x0
   1db2c:	mov	x2, x4
   1db30:	mov	x8, #0x4e                  	// #78
   1db34:	mov	x0, #0xffffffffffffff9c    	// #-100
   1db38:	svc	#0x0
   1db3c:	ret
   1db40:	mov	x1, x0
   1db44:	mov	x8, #0x23                  	// #35
   1db48:	mov	x0, #0xffffffffffffff9c    	// #-100
   1db4c:	mov	x2, #0x0                   	// #0
   1db50:	svc	#0x0
   1db54:	ret
   1db58:	mov	x3, x1
   1db5c:	mov	x8, #0x26                  	// #38
   1db60:	mov	x1, x0
   1db64:	mov	x0, #0xffffffffffffff9c    	// #-100
   1db68:	mov	x2, x0
   1db6c:	svc	#0x0
   1db70:	ret
   1db74:	nop
   1db78:	mov	x8, #0x7c                  	// #124
   1db7c:	svc	#0x0
   1db80:	ret
   1db84:	nop
   1db88:	sxtw	x0, w0
   1db8c:	mov	x8, #0x5e                  	// #94
   1db90:	str	x30, [sp, #-16]!
   1db94:	svc	#0x0
   1db98:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1db9c:	nop
   1dba0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dba4:	sub	sp, sp, #0x10
   1dba8:	mov	x8, #0x65                  	// #101
   1dbac:	ldr	q0, [x0, #3568]
   1dbb0:	mov	x0, sp
   1dbb4:	mov	x1, x0
   1dbb8:	str	q0, [sp]
   1dbbc:	svc	#0x0
   1dbc0:	ldr	w1, [sp]
   1dbc4:	cmp	w0, #0x0
   1dbc8:	mov	w0, #0x0                   	// #0
   1dbcc:	add	sp, sp, #0x10
   1dbd0:	csel	w0, w1, w0, ne  // ne = any
   1dbd4:	ret
   1dbd8:	mov	x8, #0xdd                  	// #221
   1dbdc:	svc	#0x0
   1dbe0:	ret
   1dbe4:	nop
   1dbe8:	sub	sp, sp, #0x80
   1dbec:	mov	x1, x0
   1dbf0:	mov	x2, sp
   1dbf4:	mov	x8, #0x4f                  	// #79
   1dbf8:	mov	x0, #0xffffffffffffff9c    	// #-100
   1dbfc:	mov	x3, #0x0                   	// #0
   1dc00:	svc	#0x0
   1dc04:	cbnz	x0, 1dc20 <__sanitizer_set_report_fd@@Base+0x4358>
   1dc08:	ldr	w0, [sp, #16]
   1dc0c:	add	sp, sp, #0x80
   1dc10:	and	w0, w0, #0xf000
   1dc14:	cmp	w0, #0x8, lsl #12
   1dc18:	cset	w0, eq  // eq = none
   1dc1c:	ret
   1dc20:	mov	w0, #0x0                   	// #0
   1dc24:	add	sp, sp, #0x80
   1dc28:	ret
   1dc2c:	nop
   1dc30:	mov	x8, #0xb2                  	// #178
   1dc34:	svc	#0x0
   1dc38:	ret
   1dc3c:	nop
   1dc40:	mov	x8, #0x83                  	// #131
   1dc44:	sxtw	x0, w0
   1dc48:	sxtw	x2, w2
   1dc4c:	svc	#0x0
   1dc50:	ret
   1dc54:	nop
   1dc58:	stp	x19, x30, [sp, #-32]!
   1dc5c:	mov	x2, #0x10                  	// #16
   1dc60:	mov	w1, #0x0                   	// #0
   1dc64:	add	x19, sp, #0x10
   1dc68:	mov	x0, x19
   1dc6c:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1dc70:	mov	x0, x19
   1dc74:	mov	x8, #0xa9                  	// #169
   1dc78:	mov	x1, #0x0                   	// #0
   1dc7c:	svc	#0x0
   1dc80:	ldp	x3, x2, [sp, #16]
   1dc84:	mov	x0, #0xca00                	// #51712
   1dc88:	movk	x0, #0x3b9a, lsl #16
   1dc8c:	ldp	x19, x30, [sp], #32
   1dc90:	lsl	x1, x2, #5
   1dc94:	sub	x1, x1, x2
   1dc98:	add	x1, x2, x1, lsl #2
   1dc9c:	lsl	x1, x1, #3
   1dca0:	madd	x0, x3, x0, x1
   1dca4:	ret
   1dca8:	mov	x8, #0x71                  	// #113
   1dcac:	sxtw	x0, w0
   1dcb0:	svc	#0x0
   1dcb4:	ret
   1dcb8:	stp	x19, x20, [sp, #-64]!
   1dcbc:	stp	x21, x22, [sp, #16]
   1dcc0:	adrp	x21, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dcc4:	add	x19, x21, #0xc78
   1dcc8:	stp	x23, x30, [sp, #32]
   1dccc:	mov	x23, x0
   1dcd0:	ldrb	w0, [x21, #3192]
   1dcd4:	cbz	w0, 1dd70 <__sanitizer_set_report_fd@@Base+0x44a8>
   1dcd8:	ldr	x0, [x19, #8]
   1dcdc:	cbz	x0, 1dd5c <__sanitizer_set_report_fd@@Base+0x4494>
   1dce0:	add	x21, x21, #0xc78
   1dce4:	ldr	x0, [x21, #16]
   1dce8:	cbz	x0, 1dd5c <__sanitizer_set_report_fd@@Base+0x4494>
   1dcec:	mov	x0, x23
   1dcf0:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   1dcf4:	ldr	x20, [x21, #8]
   1dcf8:	mov	x22, x0
   1dcfc:	ldrb	w0, [x20]
   1dd00:	cbz	w0, 1dd5c <__sanitizer_set_report_fd@@Base+0x4494>
   1dd04:	mov	x2, x20
   1dd08:	b	1dd38 <__sanitizer_set_report_fd@@Base+0x4470>
   1dd0c:	mov	x1, x23
   1dd10:	mov	x0, x20
   1dd14:	bl	1b578 <__sanitizer_set_report_fd@@Base+0x1cb0>
   1dd18:	cbnz	w0, 1dd28 <__sanitizer_set_report_fd@@Base+0x4460>
   1dd1c:	ldrb	w0, [x20, x22]
   1dd20:	cmp	w0, #0x3d
   1dd24:	b.eq	1dda8 <__sanitizer_set_report_fd@@Base+0x44e0>  // b.none
   1dd28:	ldrb	w0, [x19, #1]
   1dd2c:	add	x20, x19, #0x1
   1dd30:	cbz	w0, 1dd5c <__sanitizer_set_report_fd@@Base+0x4494>
   1dd34:	ldr	x2, [x21, #8]
   1dd38:	sub	x2, x20, x2
   1dd3c:	ldr	x3, [x21, #16]
   1dd40:	mov	x0, x20
   1dd44:	mov	w1, #0x0                   	// #0
   1dd48:	sub	x2, x3, x2
   1dd4c:	bl	1b510 <__sanitizer_set_report_fd@@Base+0x1c48>
   1dd50:	mov	x19, x0
   1dd54:	mov	x2, x22
   1dd58:	cbnz	x0, 1dd0c <__sanitizer_set_report_fd@@Base+0x4444>
   1dd5c:	mov	x0, #0x0                   	// #0
   1dd60:	ldp	x21, x22, [sp, #16]
   1dd64:	ldp	x23, x30, [sp, #32]
   1dd68:	ldp	x19, x20, [sp], #64
   1dd6c:	ret
   1dd70:	mov	w1, #0x1                   	// #1
   1dd74:	add	x3, x19, #0x10
   1dd78:	strb	w1, [x21, #3192]
   1dd7c:	add	x2, sp, #0x38
   1dd80:	add	x1, x19, #0x8
   1dd84:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dd88:	mov	x5, #0x0                   	// #0
   1dd8c:	add	x0, x0, #0x9d0
   1dd90:	mov	x4, #0x4000000             	// #67108864
   1dd94:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   1dd98:	tst	w0, #0xff
   1dd9c:	b.ne	1dcd8 <__sanitizer_set_report_fd@@Base+0x4410>  // b.any
   1dda0:	str	xzr, [x19, #8]
   1dda4:	b	1dd5c <__sanitizer_set_report_fd@@Base+0x4494>
   1dda8:	add	x0, x22, #0x1
   1ddac:	add	x0, x20, x0
   1ddb0:	ldp	x21, x22, [sp, #16]
   1ddb4:	ldp	x23, x30, [sp, #32]
   1ddb8:	ldp	x19, x20, [sp], #64
   1ddbc:	ret
   1ddc0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ddc4:	ldr	x0, [x0, #4032]
   1ddc8:	cbz	x0, 1ddd8 <__sanitizer_set_report_fd@@Base+0x4510>
   1ddcc:	ldr	x0, [x0]
   1ddd0:	add	x0, x0, #0x8
   1ddd4:	ret
   1ddd8:	str	x30, [sp, #-32]!
   1dddc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dde0:	add	x0, x0, #0x9e8
   1dde4:	add	x1, sp, #0x10
   1dde8:	bl	1d870 <__sanitizer_set_report_fd@@Base+0x3fa8>
   1ddec:	add	x1, sp, #0x18
   1ddf0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ddf4:	add	x0, x0, #0x9d0
   1ddf8:	bl	1d870 <__sanitizer_set_report_fd@@Base+0x3fa8>
   1ddfc:	ldr	x0, [sp, #16]
   1de00:	ldr	x30, [sp], #32
   1de04:	ret
   1de08:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1de0c:	str	x30, [sp, #-32]!
   1de10:	ldr	x0, [x0, #4032]
   1de14:	cbz	x0, 1de7c <__sanitizer_set_report_fd@@Base+0x45b4>
   1de18:	ldr	x0, [x0]
   1de1c:	mov	x1, x0
   1de20:	ldr	x2, [x1], #8
   1de24:	add	x2, x0, w2, sxtw #3
   1de28:	add	x2, x2, #0x10
   1de2c:	stp	x1, x2, [sp, #16]
   1de30:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1de34:	mov	x8, #0xdd                  	// #221
   1de38:	add	x0, x0, #0xa00
   1de3c:	svc	#0x0
   1de40:	cmn	x0, #0x1, lsl #12
   1de44:	b.hi	1de68 <__sanitizer_set_report_fd@@Base+0x45a0>  // b.pmore
   1de48:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1de4c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1de50:	add	x2, x2, #0xa10
   1de54:	add	x0, x0, #0x990
   1de58:	mov	x4, #0x1                   	// #1
   1de5c:	mov	x3, #0x0                   	// #0
   1de60:	mov	w1, #0x286                 	// #646
   1de64:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1de68:	neg	w1, w0
   1de6c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1de70:	add	x0, x0, #0xa40
   1de74:	bl	22c78 <OnPrint@@Base+0x310>
   1de78:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1de7c:	add	x1, sp, #0x10
   1de80:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1de84:	add	x0, x0, #0x9e8
   1de88:	bl	1d870 <__sanitizer_set_report_fd@@Base+0x3fa8>
   1de8c:	add	x1, sp, #0x18
   1de90:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1de94:	add	x0, x0, #0x9d0
   1de98:	bl	1d870 <__sanitizer_set_report_fd@@Base+0x3fa8>
   1de9c:	ldp	x1, x2, [sp, #16]
   1dea0:	b	1de30 <__sanitizer_set_report_fd@@Base+0x4568>
   1dea4:	nop
   1dea8:	mov	x2, #0x58                  	// #88
   1deac:	mov	w1, #0x0                   	// #0
   1deb0:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1deb4:	nop
   1deb8:	ldr	x3, [x0, #80]
   1debc:	mov	x6, x0
   1dec0:	mov	w1, #0x1                   	// #1
   1dec4:	cbnz	x3, 1df2c <__sanitizer_set_report_fd@@Base+0x4664>
   1dec8:	ldxr	w0, [x6]
   1decc:	stxr	w2, w1, [x6]
   1ded0:	cbnz	w2, 1dec8 <__sanitizer_set_report_fd@@Base+0x4600>
   1ded4:	dmb	ish
   1ded8:	cbz	w0, 1df28 <__sanitizer_set_report_fd@@Base+0x4660>
   1dedc:	mov	w7, #0x2                   	// #2
   1dee0:	ldxr	w0, [x6]
   1dee4:	stxr	w1, w7, [x6]
   1dee8:	cbnz	w1, 1dee0 <__sanitizer_set_report_fd@@Base+0x4618>
   1deec:	dmb	ish
   1def0:	cbz	w0, 1df28 <__sanitizer_set_report_fd@@Base+0x4660>
   1def4:	mov	x0, x6
   1def8:	mov	x8, #0x62                  	// #98
   1defc:	mov	x1, #0x80                  	// #128
   1df00:	mov	x2, #0x2                   	// #2
   1df04:	mov	x3, #0x0                   	// #0
   1df08:	mov	x4, #0x0                   	// #0
   1df0c:	mov	x5, #0x0                   	// #0
   1df10:	svc	#0x0
   1df14:	ldxr	w0, [x6]
   1df18:	stxr	w1, w7, [x6]
   1df1c:	cbnz	w1, 1dee0 <__sanitizer_set_report_fd@@Base+0x4618>
   1df20:	dmb	ish
   1df24:	cbnz	w0, 1def4 <__sanitizer_set_report_fd@@Base+0x462c>
   1df28:	ret
   1df2c:	str	x30, [sp, #-16]!
   1df30:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1df34:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1df38:	add	x2, x2, #0xa60
   1df3c:	add	x0, x0, #0x990
   1df40:	mov	x4, #0x0                   	// #0
   1df44:	mov	w1, #0x298                 	// #664
   1df48:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1df4c:	nop
   1df50:	dmb	ish
   1df54:	mov	x1, x0
   1df58:	ldxr	w2, [x1]
   1df5c:	stxr	w3, wzr, [x1]
   1df60:	cbnz	w3, 1df58 <__sanitizer_set_report_fd@@Base+0x4690>
   1df64:	dmb	ish
   1df68:	cbz	w2, 1df98 <__sanitizer_set_report_fd@@Base+0x46d0>
   1df6c:	cmp	w2, #0x2
   1df70:	b.eq	1df78 <__sanitizer_set_report_fd@@Base+0x46b0>  // b.none
   1df74:	ret
   1df78:	mov	x8, #0x62                  	// #98
   1df7c:	mov	x1, #0x81                  	// #129
   1df80:	mov	x2, #0x1                   	// #1
   1df84:	mov	x3, #0x0                   	// #0
   1df88:	mov	x4, #0x0                   	// #0
   1df8c:	mov	x5, #0x0                   	// #0
   1df90:	svc	#0x0
   1df94:	ret
   1df98:	str	x30, [sp, #-16]!
   1df9c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dfa0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dfa4:	add	x2, x2, #0xa78
   1dfa8:	add	x0, x0, #0x990
   1dfac:	mov	x4, #0x0                   	// #0
   1dfb0:	mov	x3, #0x0                   	// #0
   1dfb4:	mov	w1, #0x2ab                 	// #683
   1dfb8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dfbc:	nop
   1dfc0:	ldr	w0, [x0]
   1dfc4:	cbz	w0, 1dfcc <__sanitizer_set_report_fd@@Base+0x4704>
   1dfc8:	ret
   1dfcc:	str	x30, [sp, #-16]!
   1dfd0:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dfd4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1dfd8:	add	x2, x2, #0xa98
   1dfdc:	add	x0, x0, #0x990
   1dfe0:	mov	x4, #0x0                   	// #0
   1dfe4:	mov	x3, #0x0                   	// #0
   1dfe8:	mov	w1, #0x2b9                 	// #697
   1dfec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dff0:	mov	x8, #0x75                  	// #117
   1dff4:	sxtw	x0, w0
   1dff8:	sxtw	x1, w1
   1dffc:	svc	#0x0
   1e000:	ret
   1e004:	nop
   1e008:	mov	x8, #0x104                 	// #260
   1e00c:	mov	x3, #0x0                   	// #0
   1e010:	sxtw	x0, w0
   1e014:	sxtw	x2, w2
   1e018:	svc	#0x0
   1e01c:	ret
   1e020:	mov	x8, #0xac                  	// #172
   1e024:	svc	#0x0
   1e028:	ret
   1e02c:	nop
   1e030:	mov	x8, #0xad                  	// #173
   1e034:	svc	#0x0
   1e038:	ret
   1e03c:	nop
   1e040:	mov	w2, w2
   1e044:	mov	x8, #0x3d                  	// #61
   1e048:	sxtw	x0, w0
   1e04c:	svc	#0x0
   1e050:	ret
   1e054:	nop
   1e058:	mov	x8, #0x3e                  	// #62
   1e05c:	sxtw	x0, w0
   1e060:	sxtw	x2, w2
   1e064:	svc	#0x0
   1e068:	ret
   1e06c:	nop
   1e070:	mov	x8, #0xa7                  	// #167
   1e074:	sxtw	x0, w0
   1e078:	svc	#0x0
   1e07c:	ret
   1e080:	mov	x8, #0x84                  	// #132
   1e084:	svc	#0x0
   1e088:	ret
   1e08c:	nop
   1e090:	mov	x8, #0xdc                  	// #220
   1e094:	mov	x0, #0x11                  	// #17
   1e098:	mov	x1, #0x0                   	// #0
   1e09c:	svc	#0x0
   1e0a0:	ret
   1e0a4:	nop
   1e0a8:	stp	x19, x20, [sp, #-112]!
   1e0ac:	sxtw	x20, w0
   1e0b0:	mov	x19, x1
   1e0b4:	stp	x23, x30, [sp, #32]
   1e0b8:	add	x23, sp, #0x30
   1e0bc:	mov	w1, #0x0                   	// #0
   1e0c0:	mov	x0, x23
   1e0c4:	stp	x21, x22, [sp, #16]
   1e0c8:	mov	x21, x2
   1e0cc:	add	x22, sp, #0x50
   1e0d0:	mov	x2, #0x20                  	// #32
   1e0d4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e0d8:	mov	w1, #0x0                   	// #0
   1e0dc:	mov	x0, x22
   1e0e0:	mov	x2, #0x20                  	// #32
   1e0e4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e0e8:	mov	x1, #0x0                   	// #0
   1e0ec:	cbz	x19, 1e120 <__sanitizer_set_report_fd@@Base+0x4858>
   1e0f0:	mov	x1, x19
   1e0f4:	mov	x2, #0x8                   	// #8
   1e0f8:	add	x0, x23, #0x18
   1e0fc:	ldr	x3, [x1], #8
   1e100:	str	x3, [sp, #48]
   1e104:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e108:	ldr	w0, [x19, #136]
   1e10c:	mov	x1, x23
   1e110:	ldr	x2, [x19, #144]
   1e114:	orr	w0, w0, #0x4000000
   1e118:	sxtw	x0, w0
   1e11c:	stp	x0, x2, [sp, #56]
   1e120:	cmp	x21, #0x0
   1e124:	mov	x0, x20
   1e128:	csel	x2, x22, xzr, ne  // ne = any
   1e12c:	mov	x8, #0x86                  	// #134
   1e130:	mov	x3, #0x8                   	// #8
   1e134:	svc	#0x0
   1e138:	cmp	x0, #0x0
   1e13c:	mov	x19, x0
   1e140:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   1e144:	b.ne	1e15c <__sanitizer_set_report_fd@@Base+0x4894>  // b.any
   1e148:	mov	w0, w19
   1e14c:	ldp	x21, x22, [sp, #16]
   1e150:	ldp	x23, x30, [sp, #32]
   1e154:	ldp	x19, x20, [sp], #112
   1e158:	ret
   1e15c:	mov	x0, x21
   1e160:	mov	x2, x3
   1e164:	ldr	x3, [sp, #80]
   1e168:	add	x1, x22, #0x18
   1e16c:	str	x3, [x0], #8
   1e170:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e174:	ldr	x0, [sp, #88]
   1e178:	str	w0, [x21, #136]
   1e17c:	ldr	x0, [sp, #96]
   1e180:	str	x0, [x21, #144]
   1e184:	mov	w0, w19
   1e188:	ldp	x21, x22, [sp, #16]
   1e18c:	ldp	x23, x30, [sp, #32]
   1e190:	ldp	x19, x20, [sp], #112
   1e194:	ret
   1e198:	mov	x8, #0x87                  	// #135
   1e19c:	mov	x3, #0x8                   	// #8
   1e1a0:	sxtw	x0, w0
   1e1a4:	svc	#0x0
   1e1a8:	ret
   1e1ac:	nop
   1e1b0:	mov	x2, #0x80                  	// #128
   1e1b4:	mov	w1, #0xff                  	// #255
   1e1b8:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e1bc:	nop
   1e1c0:	mov	x2, #0x80                  	// #128
   1e1c4:	mov	w1, #0x0                   	// #0
   1e1c8:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e1cc:	nop
   1e1d0:	sub	w1, w1, #0x1
   1e1d4:	sxtw	x3, w1
   1e1d8:	cmp	x3, #0x3ff
   1e1dc:	b.hi	1e200 <__sanitizer_set_report_fd@@Base+0x4938>  // b.pmore
   1e1e0:	lsr	x3, x3, #3
   1e1e4:	and	w1, w1, #0x7
   1e1e8:	mov	w2, #0x1                   	// #1
   1e1ec:	lsl	w1, w2, w1
   1e1f0:	ldrb	w2, [x0, x3]
   1e1f4:	bic	w1, w2, w1
   1e1f8:	strb	w1, [x0, x3]
   1e1fc:	ret
   1e200:	str	x30, [sp, #-16]!
   1e204:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e208:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e20c:	add	x2, x2, #0xad8
   1e210:	add	x0, x0, #0x990
   1e214:	mov	x4, #0x400                 	// #1024
   1e218:	mov	w1, #0x381                 	// #897
   1e21c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e220:	sub	w1, w1, #0x1
   1e224:	sxtw	x3, w1
   1e228:	cmp	x3, #0x3ff
   1e22c:	b.hi	1e248 <__sanitizer_set_report_fd@@Base+0x4980>  // b.pmore
   1e230:	lsr	x3, x3, #3
   1e234:	and	w1, w1, #0x7
   1e238:	ldrb	w0, [x0, x3]
   1e23c:	asr	w0, w0, w1
   1e240:	and	w0, w0, #0x1
   1e244:	ret
   1e248:	str	x30, [sp, #-16]!
   1e24c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e250:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e254:	add	x2, x2, #0xad8
   1e258:	add	x0, x0, #0x990
   1e25c:	mov	x4, #0x400                 	// #1024
   1e260:	mov	w1, #0x38b                 	// #907
   1e264:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e268:	stp	x19, x20, [sp, #-144]!
   1e26c:	mov	x19, x0
   1e270:	mov	w20, w1
   1e274:	stp	x23, x24, [sp, #32]
   1e278:	adrp	x24, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e27c:	mov	w1, #0xffffffff            	// #-1
   1e280:	stp	x21, x22, [sp, #16]
   1e284:	ldr	x21, [x24, #4000]
   1e288:	stp	x25, x30, [sp, #48]
   1e28c:	stp	xzr, xzr, [x0, #16]
   1e290:	ldr	x0, [x21]
   1e294:	stp	w20, w1, [x19]
   1e298:	str	xzr, [x19, #8]
   1e29c:	cbz	x0, 1e39c <__sanitizer_set_report_fd@@Base+0x4ad4>
   1e2a0:	sub	x1, x0, #0x1
   1e2a4:	tst	x1, x0
   1e2a8:	b.ne	1e40c <__sanitizer_set_report_fd@@Base+0x4b44>  // b.any
   1e2ac:	add	x21, x19, #0x8
   1e2b0:	add	x22, x0, #0xfff
   1e2b4:	neg	x0, x0
   1e2b8:	mov	w2, #0x0                   	// #0
   1e2bc:	and	x22, x22, x0
   1e2c0:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e2c4:	mov	x0, x22
   1e2c8:	add	x1, x25, #0x700
   1e2cc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1e2d0:	mov	x23, x0
   1e2d4:	ldr	x1, [x19, #8]
   1e2d8:	ldr	x2, [x21, #16]
   1e2dc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e2e0:	ldr	x0, [x19, #8]
   1e2e4:	ldr	x1, [x21, #8]
   1e2e8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1e2ec:	ldr	x2, [x21, #16]
   1e2f0:	str	x23, [x19, #8]
   1e2f4:	str	x22, [x21, #8]
   1e2f8:	cmp	x2, #0xfff
   1e2fc:	b.hi	1e31c <__sanitizer_set_report_fd@@Base+0x4a54>  // b.pmore
   1e300:	cmp	x22, #0xfff
   1e304:	b.ls	1e3ac <__sanitizer_set_report_fd@@Base+0x4ae4>  // b.plast
   1e308:	mov	x3, #0x1000                	// #4096
   1e30c:	add	x0, x23, x2
   1e310:	mov	w1, #0x0                   	// #0
   1e314:	sub	x2, x3, x2
   1e318:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e31c:	mov	x0, #0x1000                	// #4096
   1e320:	str	x0, [x21, #16]
   1e324:	add	x21, sp, #0x40
   1e328:	mov	w3, w20
   1e32c:	mov	x0, x21
   1e330:	mov	x1, #0x50                  	// #80
   1e334:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e338:	add	x2, x2, #0xb00
   1e33c:	bl	22970 <OnPrint@@Base+0x8>
   1e340:	mov	x1, x21
   1e344:	mov	x8, #0x38                  	// #56
   1e348:	mov	x0, #0xffffffffffffff9c    	// #-100
   1e34c:	mov	x2, #0x4000                	// #16384
   1e350:	svc	#0x0
   1e354:	str	w0, [x19, #4]
   1e358:	sxtw	x0, w0
   1e35c:	cmn	x0, #0x1, lsl #12
   1e360:	b.hi	1e378 <__sanitizer_set_report_fd@@Base+0x4ab0>  // b.pmore
   1e364:	ldp	x21, x22, [sp, #16]
   1e368:	ldp	x23, x24, [sp, #32]
   1e36c:	ldp	x25, x30, [sp, #48]
   1e370:	ldp	x19, x20, [sp], #144
   1e374:	ret
   1e378:	mov	w1, w20
   1e37c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e380:	add	x0, x0, #0xb10
   1e384:	bl	22d00 <OnPrint@@Base+0x398>
   1e388:	ldp	x21, x22, [sp, #16]
   1e38c:	ldp	x23, x24, [sp, #32]
   1e390:	ldp	x25, x30, [sp, #48]
   1e394:	ldp	x19, x20, [sp], #144
   1e398:	ret
   1e39c:	mov	x0, #0x6                   	// #6
   1e3a0:	bl	6bb0 <getauxval@plt>
   1e3a4:	str	x0, [x21]
   1e3a8:	b	1e2a0 <__sanitizer_set_report_fd@@Base+0x49d8>
   1e3ac:	ldr	x24, [x24, #4000]
   1e3b0:	ldr	x0, [x24]
   1e3b4:	cbz	x0, 1e41c <__sanitizer_set_report_fd@@Base+0x4b54>
   1e3b8:	sub	x1, x0, #0x1
   1e3bc:	tst	x1, x0
   1e3c0:	b.ne	1e40c <__sanitizer_set_report_fd@@Base+0x4b44>  // b.any
   1e3c4:	add	x22, x0, #0xfff
   1e3c8:	neg	x0, x0
   1e3cc:	and	x22, x22, x0
   1e3d0:	add	x1, x25, #0x700
   1e3d4:	mov	w2, #0x0                   	// #0
   1e3d8:	mov	x0, x22
   1e3dc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1e3e0:	mov	x23, x0
   1e3e4:	ldr	x1, [x19, #8]
   1e3e8:	ldr	x2, [x21, #16]
   1e3ec:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e3f0:	ldr	x0, [x19, #8]
   1e3f4:	ldr	x1, [x21, #8]
   1e3f8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1e3fc:	ldr	x2, [x21, #16]
   1e400:	str	x23, [x19, #8]
   1e404:	str	x22, [x21, #8]
   1e408:	b	1e308 <__sanitizer_set_report_fd@@Base+0x4a40>
   1e40c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e410:	add	x0, x0, #0x6e8
   1e414:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1e418:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1e41c:	mov	x0, #0x6                   	// #6
   1e420:	bl	6bb0 <getauxval@plt>
   1e424:	str	x0, [x24]
   1e428:	b	1e3b8 <__sanitizer_set_report_fd@@Base+0x4af0>
   1e42c:	nop
   1e430:	stp	x19, x20, [sp, #-144]!
   1e434:	mov	x20, x0
   1e438:	mov	w4, w1
   1e43c:	stp	x21, x22, [sp, #16]
   1e440:	add	x21, sp, #0x40
   1e444:	ldr	w3, [x20], #8
   1e448:	mov	x1, #0x50                  	// #80
   1e44c:	mov	x19, x0
   1e450:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e454:	mov	x0, x21
   1e458:	add	x2, x2, #0xb38
   1e45c:	str	x30, [sp, #32]
   1e460:	bl	22970 <OnPrint@@Base+0x8>
   1e464:	mov	x0, x21
   1e468:	mov	x1, x20
   1e46c:	mov	x3, #0x0                   	// #0
   1e470:	mov	x2, #0x4000000             	// #67108864
   1e474:	bl	19170 <__sanitizer_cov_dump@@Base+0x22f0>
   1e478:	tst	w0, #0xff
   1e47c:	b.eq	1e488 <__sanitizer_set_report_fd@@Base+0x4bc0>  // b.none
   1e480:	ldr	x3, [x19, #24]
   1e484:	cbnz	x3, 1e49c <__sanitizer_set_report_fd@@Base+0x4bd4>
   1e488:	mov	w0, #0x0                   	// #0
   1e48c:	ldp	x21, x22, [sp, #16]
   1e490:	ldr	x30, [sp, #32]
   1e494:	ldp	x19, x20, [sp], #144
   1e498:	ret
   1e49c:	ldr	x4, [x19, #16]
   1e4a0:	strb	wzr, [sp, #63]
   1e4a4:	cmp	x3, x4
   1e4a8:	b.hi	1e5c4 <__sanitizer_set_report_fd@@Base+0x4cfc>  // b.pmore
   1e4ac:	add	x1, x3, #0x1
   1e4b0:	b.eq	1e510 <__sanitizer_set_report_fd@@Base+0x4c48>  // b.none
   1e4b4:	ldr	x21, [x19, #8]
   1e4b8:	str	x1, [x20, #16]
   1e4bc:	add	x0, x21, x3
   1e4c0:	add	x1, sp, #0x3f
   1e4c4:	mov	x2, #0x1                   	// #1
   1e4c8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e4cc:	ldr	x0, [x19, #8]
   1e4d0:	adrp	x20, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e4d4:	add	x20, x20, #0xe00
   1e4d8:	mov	x1, x20
   1e4dc:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   1e4e0:	mov	x19, x0
   1e4e4:	cbz	x0, 1e488 <__sanitizer_set_report_fd@@Base+0x4bc0>
   1e4e8:	mov	x0, x20
   1e4ec:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   1e4f0:	add	x0, x19, x0
   1e4f4:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   1e4f8:	cmp	w0, #0x0
   1e4fc:	cset	w0, ne  // ne = any
   1e500:	ldp	x21, x22, [sp, #16]
   1e504:	ldr	x30, [sp, #32]
   1e508:	ldp	x19, x20, [sp], #144
   1e50c:	ret
   1e510:	cbz	x1, 1e5ec <__sanitizer_set_report_fd@@Base+0x4d24>
   1e514:	tst	x3, x1
   1e518:	b.eq	1e5bc <__sanitizer_set_report_fd@@Base+0x4cf4>  // b.none
   1e51c:	clz	x2, x1
   1e520:	mov	w0, #0x3f                  	// #63
   1e524:	sub	w0, w0, w2
   1e528:	mov	x2, #0x1                   	// #1
   1e52c:	add	w21, w0, #0x1
   1e530:	lsl	x21, x2, x21
   1e534:	cmp	x1, x21
   1e538:	b.cs	1e638 <__sanitizer_set_report_fd@@Base+0x4d70>  // b.hs, b.nlast
   1e53c:	lsl	x4, x2, x0
   1e540:	cmp	x1, x4
   1e544:	b.ls	1e658 <__sanitizer_set_report_fd@@Base+0x4d90>  // b.plast
   1e548:	cmp	x3, x21
   1e54c:	b.hi	1e60c <__sanitizer_set_report_fd@@Base+0x4d44>  // b.pmore
   1e550:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e554:	ldr	x22, [x22, #4000]
   1e558:	ldr	x0, [x22]
   1e55c:	cbz	x0, 1e5dc <__sanitizer_set_report_fd@@Base+0x4d14>
   1e560:	sub	x22, x0, #0x1
   1e564:	tst	x22, x0
   1e568:	b.ne	1e628 <__sanitizer_set_report_fd@@Base+0x4d60>  // b.any
   1e56c:	add	x21, x21, x22
   1e570:	neg	x0, x0
   1e574:	and	x22, x21, x0
   1e578:	mov	w2, #0x0                   	// #0
   1e57c:	mov	x0, x22
   1e580:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e584:	add	x1, x1, #0x700
   1e588:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1e58c:	ldr	x1, [x19, #8]
   1e590:	mov	x21, x0
   1e594:	ldr	x2, [x20, #16]
   1e598:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e59c:	ldr	x1, [x20, #8]
   1e5a0:	ldr	x0, [x19, #8]
   1e5a4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1e5a8:	ldr	x3, [x20, #16]
   1e5ac:	str	x21, [x19, #8]
   1e5b0:	str	x22, [x20, #8]
   1e5b4:	add	x1, x3, #0x1
   1e5b8:	b	1e4b8 <__sanitizer_set_report_fd@@Base+0x4bf0>
   1e5bc:	mov	x21, x1
   1e5c0:	b	1e550 <__sanitizer_set_report_fd@@Base+0x4c88>
   1e5c4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e5c8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e5cc:	add	x2, x2, #0x660
   1e5d0:	add	x0, x0, #0x578
   1e5d4:	mov	w1, #0x1be                 	// #446
   1e5d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e5dc:	mov	x0, #0x6                   	// #6
   1e5e0:	bl	6bb0 <getauxval@plt>
   1e5e4:	str	x0, [x22]
   1e5e8:	b	1e560 <__sanitizer_set_report_fd@@Base+0x4c98>
   1e5ec:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e5f0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e5f4:	add	x2, x2, #0xb50
   1e5f8:	add	x0, x0, #0x578
   1e5fc:	mov	x4, #0x0                   	// #0
   1e600:	mov	x3, #0x0                   	// #0
   1e604:	mov	w1, #0x177                 	// #375
   1e608:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e60c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e610:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e614:	mov	x4, x21
   1e618:	add	x2, x2, #0x6c8
   1e61c:	add	x0, x0, #0x578
   1e620:	mov	w1, #0x1fd                 	// #509
   1e624:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e628:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e62c:	add	x0, x0, #0x6e8
   1e630:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1e634:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1e638:	mov	x3, x1
   1e63c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e640:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e644:	mov	x4, x21
   1e648:	add	x2, x2, #0x680
   1e64c:	add	x0, x0, #0x578
   1e650:	mov	w1, #0x17b                 	// #379
   1e654:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e658:	mov	x3, x1
   1e65c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e660:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e664:	add	x2, x2, #0x6a8
   1e668:	add	x0, x0, #0x578
   1e66c:	mov	w1, #0x17c                 	// #380
   1e670:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e674:	nop
   1e678:	stp	x19, x20, [sp, #-144]!
   1e67c:	stp	x23, x24, [sp, #32]
   1e680:	stp	x25, x26, [sp, #48]
   1e684:	mov	x25, x0
   1e688:	ldrsw	x0, [x0, #4]
   1e68c:	str	x30, [sp, #80]
   1e690:	cmn	x0, #0x1, lsl #12
   1e694:	b.hi	1e854 <__sanitizer_set_report_fd@@Base+0x4f8c>  // b.pmore
   1e698:	mov	x8, #0x3e                  	// #62
   1e69c:	mov	x2, #0x0                   	// #0
   1e6a0:	stp	x21, x22, [sp, #16]
   1e6a4:	stp	x27, x28, [sp, #64]
   1e6a8:	mov	x28, x1
   1e6ac:	mov	x1, #0x0                   	// #0
   1e6b0:	svc	#0x0
   1e6b4:	add	x23, x25, #0x8
   1e6b8:	str	xzr, [x28, #16]
   1e6bc:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e6c0:	add	x0, sp, #0x88
   1e6c4:	ldr	x19, [x25, #16]
   1e6c8:	str	x0, [sp, #96]
   1e6cc:	ldr	x3, [x23, #16]
   1e6d0:	mov	w20, #0x1                   	// #1
   1e6d4:	ldr	x0, [x22, #4000]
   1e6d8:	mov	w24, #0x2                   	// #2
   1e6dc:	str	x0, [sp, #104]
   1e6e0:	cmp	x19, x3
   1e6e4:	b.ls	1e6fc <__sanitizer_set_report_fd@@Base+0x4e34>  // b.plast
   1e6e8:	ldr	x0, [x23]
   1e6ec:	sub	x2, x19, x3
   1e6f0:	mov	w1, #0x0                   	// #0
   1e6f4:	add	x0, x0, x3
   1e6f8:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e6fc:	str	x19, [x23, #16]
   1e700:	cmp	x19, #0xfff
   1e704:	b.ls	1e87c <__sanitizer_set_report_fd@@Base+0x4fb4>  // b.plast
   1e708:	ldrsw	x0, [x25, #4]
   1e70c:	and	x2, x19, #0xffffffff
   1e710:	mov	x8, #0x3d                  	// #61
   1e714:	ldr	x1, [x25, #8]
   1e718:	svc	#0x0
   1e71c:	mov	x26, x0
   1e720:	cbz	x0, 1ea34 <__sanitizer_set_report_fd@@Base+0x516c>
   1e724:	cmn	x0, #0x1, lsl #12
   1e728:	b.hi	1e820 <__sanitizer_set_report_fd@@Base+0x4f58>  // b.pmore
   1e72c:	ldr	x19, [x25, #8]
   1e730:	add	x27, x19, x0
   1e734:	cmp	x19, x27
   1e738:	b.cs	1e7c8 <__sanitizer_set_report_fd@@Base+0x4f00>  // b.hs, b.nlast
   1e73c:	adrp	x21, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e740:	add	x21, x21, #0x700
   1e744:	b	1e754 <__sanitizer_set_report_fd@@Base+0x4e8c>
   1e748:	cbnz	x2, 1e770 <__sanitizer_set_report_fd@@Base+0x4ea8>
   1e74c:	cmp	x27, x19
   1e750:	b.ls	1e7c8 <__sanitizer_set_report_fd@@Base+0x4f00>  // b.plast
   1e754:	mov	x0, x19
   1e758:	ldrh	w2, [x19, #16]
   1e75c:	add	x19, x19, x2
   1e760:	ldr	x2, [x0]
   1e764:	cmp	x2, #0x1
   1e768:	b.ne	1e748 <__sanitizer_set_report_fd@@Base+0x4e80>  // b.any
   1e76c:	mov	w24, w2
   1e770:	ldrb	w2, [x0, #19]
   1e774:	sub	w2, w2, #0x30
   1e778:	and	w2, w2, #0xff
   1e77c:	cmp	w2, #0x9
   1e780:	b.hi	1e74c <__sanitizer_set_report_fd@@Base+0x4e84>  // b.pmore
   1e784:	add	x0, x0, #0x13
   1e788:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   1e78c:	ldp	x4, x3, [x28, #8]
   1e790:	str	x0, [sp, #136]
   1e794:	lsr	x4, x4, #3
   1e798:	cmp	x3, x4
   1e79c:	b.hi	1ea1c <__sanitizer_set_report_fd@@Base+0x5154>  // b.pmore
   1e7a0:	add	x0, x3, #0x1
   1e7a4:	b.eq	1e8e0 <__sanitizer_set_report_fd@@Base+0x5018>  // b.none
   1e7a8:	ldr	x7, [x28]
   1e7ac:	str	x0, [x28, #16]
   1e7b0:	ldr	x1, [sp, #96]
   1e7b4:	add	x0, x7, x3, lsl #3
   1e7b8:	mov	x2, #0x8                   	// #8
   1e7bc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e7c0:	cmp	x27, x19
   1e7c4:	b.hi	1e754 <__sanitizer_set_report_fd@@Base+0x4e8c>  // b.pmore
   1e7c8:	ldr	x3, [x25, #24]
   1e7cc:	cbz	w20, 1e810 <__sanitizer_set_report_fd@@Base+0x4f48>
   1e7d0:	sub	x0, x3, #0x400
   1e7d4:	cmp	x0, x26
   1e7d8:	b.cc	1e89c <__sanitizer_set_report_fd@@Base+0x4fd4>  // b.lo, b.ul, b.last
   1e7dc:	ldr	x1, [x28, #16]
   1e7e0:	cbz	x1, 1e870 <__sanitizer_set_report_fd@@Base+0x4fa8>
   1e7e4:	ldr	x2, [x28]
   1e7e8:	mov	x0, x25
   1e7ec:	add	x1, x2, x1, lsl #3
   1e7f0:	ldur	w1, [x1, #-8]
   1e7f4:	bl	1e430 <__sanitizer_set_report_fd@@Base+0x4b68>
   1e7f8:	tst	w0, #0xff
   1e7fc:	b.eq	1e98c <__sanitizer_set_report_fd@@Base+0x50c4>  // b.none
   1e800:	mov	w20, #0x0                   	// #0
   1e804:	ldr	x3, [x23, #16]
   1e808:	ldr	x19, [x25, #16]
   1e80c:	b	1e6e0 <__sanitizer_set_report_fd@@Base+0x4e18>
   1e810:	mov	w24, #0x1                   	// #1
   1e814:	mov	w20, #0x0                   	// #0
   1e818:	ldr	x19, [x25, #16]
   1e81c:	b	1e6e0 <__sanitizer_set_report_fd@@Base+0x4e18>
   1e820:	ldr	w1, [x25]
   1e824:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e828:	add	x0, x0, #0xb80
   1e82c:	mov	w24, #0x0                   	// #0
   1e830:	bl	22d00 <OnPrint@@Base+0x398>
   1e834:	ldp	x21, x22, [sp, #16]
   1e838:	ldp	x27, x28, [sp, #64]
   1e83c:	mov	w0, w24
   1e840:	ldp	x23, x24, [sp, #32]
   1e844:	ldp	x25, x26, [sp, #48]
   1e848:	ldr	x30, [sp, #80]
   1e84c:	ldp	x19, x20, [sp], #144
   1e850:	ret
   1e854:	mov	w24, #0x0                   	// #0
   1e858:	mov	w0, w24
   1e85c:	ldp	x23, x24, [sp, #32]
   1e860:	ldp	x25, x26, [sp, #48]
   1e864:	ldr	x30, [sp, #80]
   1e868:	ldp	x19, x20, [sp], #144
   1e86c:	ret
   1e870:	mov	w20, #0x0                   	// #0
   1e874:	ldr	x19, [x25, #16]
   1e878:	b	1e6e0 <__sanitizer_set_report_fd@@Base+0x4e18>
   1e87c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e880:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1e884:	mov	x3, x19
   1e888:	add	x2, x2, #0xb60
   1e88c:	add	x0, x0, #0x990
   1e890:	mov	x4, #0x1000                	// #4096
   1e894:	mov	w1, #0x3b5                 	// #949
   1e898:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e89c:	cmp	x3, x3, lsl #1
   1e8a0:	lsl	x20, x3, #1
   1e8a4:	ldr	x19, [x25, #16]
   1e8a8:	b.cs	1e8cc <__sanitizer_set_report_fd@@Base+0x5004>  // b.hs, b.nlast
   1e8ac:	cmp	x20, x19
   1e8b0:	b.hi	1e9a0 <__sanitizer_set_report_fd@@Base+0x50d8>  // b.pmore
   1e8b4:	ldr	x19, [x23]
   1e8b8:	add	x0, x19, x3
   1e8bc:	sub	x2, x20, x3
   1e8c0:	mov	w1, #0x0                   	// #0
   1e8c4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1e8c8:	ldr	x19, [x25, #16]
   1e8cc:	mov	x3, x20
   1e8d0:	mov	w24, #0x1                   	// #1
   1e8d4:	str	x20, [x23, #16]
   1e8d8:	mov	w20, #0x0                   	// #0
   1e8dc:	b	1e6e0 <__sanitizer_set_report_fd@@Base+0x4e18>
   1e8e0:	tst	x3, x0
   1e8e4:	b.eq	1e920 <__sanitizer_set_report_fd@@Base+0x5058>  // b.none
   1e8e8:	clz	x2, x0
   1e8ec:	mov	w1, #0x3f                  	// #63
   1e8f0:	sub	w2, w1, w2
   1e8f4:	mov	x1, #0x1                   	// #1
   1e8f8:	add	w4, w2, #0x1
   1e8fc:	lsl	x4, x1, x4
   1e900:	cmp	x4, x0
   1e904:	b.ls	1ea00 <__sanitizer_set_report_fd@@Base+0x5138>  // b.plast
   1e908:	lsl	x1, x1, x2
   1e90c:	cmp	x1, x0
   1e910:	b.cs	1ea94 <__sanitizer_set_report_fd@@Base+0x51cc>  // b.hs, b.nlast
   1e914:	cmp	x3, x4
   1e918:	b.hi	1ea6c <__sanitizer_set_report_fd@@Base+0x51a4>  // b.pmore
   1e91c:	mov	x0, x4
   1e920:	ldr	x1, [sp, #104]
   1e924:	ldr	x2, [x1]
   1e928:	lsl	x1, x0, #3
   1e92c:	cbz	x2, 1ea40 <__sanitizer_set_report_fd@@Base+0x5178>
   1e930:	sub	x0, x2, #0x1
   1e934:	tst	x2, x0
   1e938:	b.ne	1ea5c <__sanitizer_set_report_fd@@Base+0x5194>  // b.any
   1e93c:	add	x0, x1, x0
   1e940:	neg	x2, x2
   1e944:	and	x4, x0, x2
   1e948:	mov	x1, x21
   1e94c:	mov	x0, x4
   1e950:	mov	w2, #0x0                   	// #0
   1e954:	str	x4, [sp, #120]
   1e958:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1e95c:	str	x0, [sp, #112]
   1e960:	ldr	x1, [x28]
   1e964:	ldr	x2, [x28, #16]
   1e968:	lsl	x2, x2, #3
   1e96c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e970:	ldp	x0, x1, [x28]
   1e974:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1e978:	ldr	x3, [x28, #16]
   1e97c:	ldp	x7, x4, [sp, #112]
   1e980:	add	x0, x3, #0x1
   1e984:	stp	x7, x4, [x28]
   1e988:	b	1e7ac <__sanitizer_set_report_fd@@Base+0x4ee4>
   1e98c:	mov	w24, #0x1                   	// #1
   1e990:	mov	w20, #0x0                   	// #0
   1e994:	ldr	x3, [x23, #16]
   1e998:	ldr	x19, [x25, #16]
   1e99c:	b	1e6e0 <__sanitizer_set_report_fd@@Base+0x4e18>
   1e9a0:	cbz	x20, 1eab4 <__sanitizer_set_report_fd@@Base+0x51ec>
   1e9a4:	ldr	x19, [x22, #4000]
   1e9a8:	ldr	x0, [x19]
   1e9ac:	cbz	x0, 1ea84 <__sanitizer_set_report_fd@@Base+0x51bc>
   1e9b0:	sub	x1, x0, #0x1
   1e9b4:	tst	x0, x1
   1e9b8:	b.ne	1ea5c <__sanitizer_set_report_fd@@Base+0x5194>  // b.any
   1e9bc:	add	x1, x20, x1
   1e9c0:	neg	x0, x0
   1e9c4:	and	x21, x1, x0
   1e9c8:	mov	w2, #0x0                   	// #0
   1e9cc:	mov	x0, x21
   1e9d0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1e9d4:	add	x1, x1, #0x700
   1e9d8:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1e9dc:	ldr	x1, [x23]
   1e9e0:	mov	x19, x0
   1e9e4:	ldr	x2, [x23, #16]
   1e9e8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1e9ec:	ldp	x0, x1, [x23]
   1e9f0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1e9f4:	stp	x19, x21, [x23]
   1e9f8:	ldr	x3, [x23, #16]
   1e9fc:	b	1e8b8 <__sanitizer_set_report_fd@@Base+0x4ff0>
   1ea00:	mov	x3, x0
   1ea04:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea08:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea0c:	add	x2, x2, #0x680
   1ea10:	add	x0, x0, #0x578
   1ea14:	mov	w1, #0x17b                 	// #379
   1ea18:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ea1c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea20:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea24:	add	x2, x2, #0x660
   1ea28:	add	x0, x0, #0x578
   1ea2c:	mov	w1, #0x1be                 	// #446
   1ea30:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ea34:	ldp	x21, x22, [sp, #16]
   1ea38:	ldp	x27, x28, [sp, #64]
   1ea3c:	b	1e83c <__sanitizer_set_report_fd@@Base+0x4f74>
   1ea40:	mov	x0, #0x6                   	// #6
   1ea44:	str	x1, [sp, #112]
   1ea48:	bl	6bb0 <getauxval@plt>
   1ea4c:	mov	x2, x0
   1ea50:	ldp	x0, x1, [sp, #104]
   1ea54:	str	x2, [x0]
   1ea58:	b	1e930 <__sanitizer_set_report_fd@@Base+0x5068>
   1ea5c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea60:	add	x0, x0, #0x6e8
   1ea64:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1ea68:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1ea6c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea70:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ea74:	add	x2, x2, #0x6c8
   1ea78:	add	x0, x0, #0x578
   1ea7c:	mov	w1, #0x1fd                 	// #509
   1ea80:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ea84:	mov	x0, #0x6                   	// #6
   1ea88:	bl	6bb0 <getauxval@plt>
   1ea8c:	str	x0, [x19]
   1ea90:	b	1e9b0 <__sanitizer_set_report_fd@@Base+0x50e8>
   1ea94:	mov	x4, x1
   1ea98:	mov	x3, x0
   1ea9c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1eaa0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1eaa4:	add	x2, x2, #0x6a8
   1eaa8:	add	x0, x0, #0x578
   1eaac:	mov	w1, #0x17c                 	// #380
   1eab0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1eab4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   1eab8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1eabc:	add	x2, x2, #0xfe8
   1eac0:	add	x0, x0, #0x578
   1eac4:	mov	x4, #0x0                   	// #0
   1eac8:	mov	x3, #0x0                   	// #0
   1eacc:	mov	w1, #0x1fc                 	// #508
   1ead0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ead4:	nop
   1ead8:	mov	x1, x0
   1eadc:	ldrsw	x0, [x0, #4]
   1eae0:	cmn	x0, #0x1, lsl #12
   1eae4:	b.hi	1eaf0 <__sanitizer_set_report_fd@@Base+0x5228>  // b.pmore
   1eae8:	mov	x8, #0x39                  	// #57
   1eaec:	svc	#0x0
   1eaf0:	ldp	x0, x1, [x1, #8]
   1eaf4:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1eaf8:	stp	x29, x30, [sp, #-16]!
   1eafc:	mov	x0, #0x1                   	// #1
   1eb00:	mov	x29, sp
   1eb04:	clz	x1, x29
   1eb08:	neg	w1, w1
   1eb0c:	ldp	x29, x30, [sp], #16
   1eb10:	lsl	x0, x0, x1
   1eb14:	sub	x0, x0, #0x1
   1eb18:	ret
   1eb1c:	nop
   1eb20:	stp	x29, x30, [sp, #-16]!
   1eb24:	mov	x0, #0x1                   	// #1
   1eb28:	mov	x29, sp
   1eb2c:	clz	x1, x29
   1eb30:	neg	w1, w1
   1eb34:	ldp	x29, x30, [sp], #16
   1eb38:	lsl	x0, x0, x1
   1eb3c:	sub	x0, x0, #0x1
   1eb40:	ret
   1eb44:	nop
   1eb48:	mov	x0, #0x6                   	// #6
   1eb4c:	b	6bb0 <getauxval@plt>
   1eb50:	stp	x19, x20, [sp, #-32]!
   1eb54:	mov	x2, x0
   1eb58:	mov	x20, x0
   1eb5c:	mov	x19, x1
   1eb60:	mov	x3, x1
   1eb64:	mov	x8, #0x4e                  	// #78
   1eb68:	mov	x0, #0xffffffffffffff9c    	// #-100
   1eb6c:	stp	x21, x30, [sp, #16]
   1eb70:	adrp	x21, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1eb74:	add	x1, x21, #0xa00
   1eb78:	svc	#0x0
   1eb7c:	cmn	x0, #0x1, lsl #12
   1eb80:	b.hi	1eb90 <__sanitizer_set_report_fd@@Base+0x52c8>  // b.pmore
   1eb84:	ldp	x21, x30, [sp, #16]
   1eb88:	ldp	x19, x20, [sp], #32
   1eb8c:	ret
   1eb90:	neg	w1, w0
   1eb94:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1eb98:	add	x0, x0, #0xbb8
   1eb9c:	bl	22d00 <OnPrint@@Base+0x398>
   1eba0:	add	x3, x21, #0xa00
   1eba4:	mov	x0, x20
   1eba8:	mov	x1, x19
   1ebac:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ebb0:	add	x2, x2, #0xdb8
   1ebb4:	bl	22970 <OnPrint@@Base+0x8>
   1ebb8:	cmp	x19, w0, sxtw
   1ebbc:	sxtw	x0, w0
   1ebc0:	b.hi	1eb84 <__sanitizer_set_report_fd@@Base+0x52bc>  // b.pmore
   1ebc4:	mov	x3, x0
   1ebc8:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ebcc:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ebd0:	mov	x4, x19
   1ebd4:	add	x2, x2, #0xc18
   1ebd8:	add	x0, x0, #0x990
   1ebdc:	mov	w1, #0x470                 	// #1136
   1ebe0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ebe4:	nop
   1ebe8:	stp	x19, x20, [sp, #-64]!
   1ebec:	mov	x5, #0x0                   	// #0
   1ebf0:	mov	x19, x0
   1ebf4:	mov	x20, x1
   1ebf8:	add	x3, sp, #0x38
   1ebfc:	add	x2, sp, #0x30
   1ec00:	add	x1, sp, #0x28
   1ec04:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ec08:	mov	x4, #0x100000              	// #1048576
   1ec0c:	add	x0, x0, #0x9e8
   1ec10:	str	x30, [sp, #24]
   1ec14:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   1ec18:	tst	w0, #0xff
   1ec1c:	b.eq	1ec4c <__sanitizer_set_report_fd@@Base+0x5384>  // b.none
   1ec20:	ldr	x1, [sp, #40]
   1ec24:	mov	x2, x20
   1ec28:	mov	x0, x19
   1ec2c:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   1ec30:	ldp	x0, x1, [sp, #40]
   1ec34:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1ec38:	mov	x0, x19
   1ec3c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   1ec40:	ldr	x30, [sp, #24]
   1ec44:	ldp	x19, x20, [sp], #64
   1ec48:	ret
   1ec4c:	mov	x2, x19
   1ec50:	mov	x3, x20
   1ec54:	mov	x8, #0x4e                  	// #78
   1ec58:	mov	x0, #0xffffffffffffff9c    	// #-100
   1ec5c:	str	x21, [sp, #16]
   1ec60:	adrp	x21, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ec64:	add	x1, x21, #0xa00
   1ec68:	svc	#0x0
   1ec6c:	cmn	x0, #0x1, lsl #12
   1ec70:	b.hi	1ec84 <__sanitizer_set_report_fd@@Base+0x53bc>  // b.pmore
   1ec74:	ldr	x21, [sp, #16]
   1ec78:	ldr	x30, [sp, #24]
   1ec7c:	ldp	x19, x20, [sp], #64
   1ec80:	ret
   1ec84:	neg	w1, w0
   1ec88:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ec8c:	add	x0, x0, #0xbb8
   1ec90:	bl	22d00 <OnPrint@@Base+0x398>
   1ec94:	add	x3, x21, #0xa00
   1ec98:	mov	x0, x19
   1ec9c:	mov	x1, x20
   1eca0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1eca4:	add	x2, x2, #0xdb8
   1eca8:	bl	22970 <OnPrint@@Base+0x8>
   1ecac:	cmp	x20, w0, sxtw
   1ecb0:	sxtw	x0, w0
   1ecb4:	b.hi	1ec74 <__sanitizer_set_report_fd@@Base+0x53ac>  // b.pmore
   1ecb8:	mov	x3, x0
   1ecbc:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ecc0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ecc4:	mov	x4, x20
   1ecc8:	add	x2, x2, #0xc18
   1eccc:	add	x0, x0, #0x990
   1ecd0:	mov	w1, #0x470                 	// #1136
   1ecd4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ecd8:	stp	x19, x20, [sp, #-32]!
   1ecdc:	mov	x20, x1
   1ece0:	mov	x19, x0
   1ece4:	str	x30, [sp, #16]
   1ece8:	ldrb	w1, [x0]
   1ecec:	cbz	w1, 1ed20 <__sanitizer_set_report_fd@@Base+0x5458>
   1ecf0:	ldrb	w2, [x19, #1]!
   1ecf4:	cbnz	w2, 1ecf0 <__sanitizer_set_report_fd@@Base+0x5428>
   1ecf8:	cmp	x0, x19
   1ecfc:	b.cc	1ed10 <__sanitizer_set_report_fd@@Base+0x5448>  // b.lo, b.ul, b.last
   1ed00:	b	1ed20 <__sanitizer_set_report_fd@@Base+0x5458>
   1ed04:	ldrb	w2, [x19, #-1]!
   1ed08:	cmp	x0, x19
   1ed0c:	b.eq	1ed68 <__sanitizer_set_report_fd@@Base+0x54a0>  // b.none
   1ed10:	ldrb	w2, [x19]
   1ed14:	cmp	w2, #0x2f
   1ed18:	b.ne	1ed04 <__sanitizer_set_report_fd@@Base+0x543c>  // b.any
   1ed1c:	add	x19, x19, #0x1
   1ed20:	mov	x0, x20
   1ed24:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   1ed28:	mov	x1, x20
   1ed2c:	mov	x20, x0
   1ed30:	mov	x2, x20
   1ed34:	mov	x0, x19
   1ed38:	bl	1bda0 <__sanitizer_set_report_fd@@Base+0x24d8>
   1ed3c:	mov	w1, #0x0                   	// #0
   1ed40:	cbnz	w0, 1ed58 <__sanitizer_set_report_fd@@Base+0x5490>
   1ed44:	ldrb	w0, [x19, x20]
   1ed48:	sub	w0, w0, #0x2d
   1ed4c:	and	w0, w0, #0xff
   1ed50:	cmp	w0, #0x1
   1ed54:	cset	w1, ls  // ls = plast
   1ed58:	mov	w0, w1
   1ed5c:	ldr	x30, [sp, #16]
   1ed60:	ldp	x19, x20, [sp], #32
   1ed64:	ret
   1ed68:	cmp	w2, #0x2f
   1ed6c:	b.ne	1ed20 <__sanitizer_set_report_fd@@Base+0x5458>  // b.any
   1ed70:	add	x19, x19, #0x1
   1ed74:	b	1ed20 <__sanitizer_set_report_fd@@Base+0x5458>
   1ed78:	stp	x19, x20, [sp, #-80]!
   1ed7c:	stp	x21, x22, [sp, #16]
   1ed80:	str	x30, [sp, #72]
   1ed84:	cbz	x0, 1eec4 <__sanitizer_set_report_fd@@Base+0x55fc>
   1ed88:	str	x27, [sp, #64]
   1ed8c:	mov	x21, x1
   1ed90:	ldr	x27, [x0]
   1ed94:	mov	x22, #0xffffffffffffffff    	// #-1
   1ed98:	ldrh	w0, [x27, #54]
   1ed9c:	ldrh	w20, [x27, #56]
   1eda0:	ldr	x19, [x27, #32]
   1eda4:	and	x2, x0, #0xffff
   1eda8:	mul	w20, w20, w0
   1edac:	add	x19, x27, x19
   1edb0:	mov	x0, x19
   1edb4:	add	x20, x19, w20, sxtw
   1edb8:	cmp	x19, x20
   1edbc:	b.eq	1ee70 <__sanitizer_set_report_fd@@Base+0x55a8>  // b.none
   1edc0:	stp	x23, x24, [sp, #32]
   1edc4:	stp	x25, x26, [sp, #48]
   1edc8:	ldr	w3, [x0]
   1edcc:	cmp	w3, #0x1
   1edd0:	b.ne	1ede0 <__sanitizer_set_report_fd@@Base+0x5518>  // b.any
   1edd4:	ldr	x1, [x0, #16]
   1edd8:	cmp	x22, x1
   1eddc:	csel	x22, x22, x1, ls  // ls = plast
   1ede0:	add	x0, x0, x2
   1ede4:	cmp	x20, x0
   1ede8:	b.ne	1edc8 <__sanitizer_set_report_fd@@Base+0x5500>  // b.any
   1edec:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1edf0:	sub	x22, x27, x22
   1edf4:	ldr	x23, [x23, #4000]
   1edf8:	b	1ee08 <__sanitizer_set_report_fd@@Base+0x5540>
   1edfc:	add	x19, x19, x2
   1ee00:	cmp	x20, x19
   1ee04:	b.eq	1ee68 <__sanitizer_set_report_fd@@Base+0x55a0>  // b.none
   1ee08:	ldr	w0, [x19]
   1ee0c:	cmp	w0, #0x1
   1ee10:	b.ne	1edfc <__sanitizer_set_report_fd@@Base+0x5534>  // b.any
   1ee14:	ldr	x0, [x23]
   1ee18:	ldr	x25, [x19, #16]
   1ee1c:	neg	x24, x0
   1ee20:	ldr	x1, [x19, #40]
   1ee24:	add	x25, x22, x25
   1ee28:	and	x24, x24, x25
   1ee2c:	add	x26, x25, x1
   1ee30:	cbz	x0, 1ee84 <__sanitizer_set_report_fd@@Base+0x55bc>
   1ee34:	sub	x2, x0, #0x1
   1ee38:	tst	x2, x0
   1ee3c:	b.ne	1eeb4 <__sanitizer_set_report_fd@@Base+0x55ec>  // b.any
   1ee40:	add	x2, x2, x26
   1ee44:	neg	x0, x0
   1ee48:	and	x1, x2, x0
   1ee4c:	mov	x0, x24
   1ee50:	sub	x1, x1, x24
   1ee54:	blr	x21
   1ee58:	ldrh	w2, [x27, #54]
   1ee5c:	add	x19, x19, x2
   1ee60:	cmp	x20, x19
   1ee64:	b.ne	1ee08 <__sanitizer_set_report_fd@@Base+0x5540>  // b.any
   1ee68:	ldp	x23, x24, [sp, #32]
   1ee6c:	ldp	x25, x26, [sp, #48]
   1ee70:	ldp	x21, x22, [sp, #16]
   1ee74:	ldr	x27, [sp, #64]
   1ee78:	ldr	x30, [sp, #72]
   1ee7c:	ldp	x19, x20, [sp], #80
   1ee80:	ret
   1ee84:	mov	x0, #0x6                   	// #6
   1ee88:	bl	6bb0 <getauxval@plt>
   1ee8c:	str	x0, [x23]
   1ee90:	neg	x24, x0
   1ee94:	and	x24, x24, x25
   1ee98:	cbnz	x0, 1ee34 <__sanitizer_set_report_fd@@Base+0x556c>
   1ee9c:	mov	x0, #0x6                   	// #6
   1eea0:	bl	6bb0 <getauxval@plt>
   1eea4:	str	x0, [x23]
   1eea8:	sub	x2, x0, #0x1
   1eeac:	tst	x2, x0
   1eeb0:	b.eq	1ee40 <__sanitizer_set_report_fd@@Base+0x5578>  // b.none
   1eeb4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1eeb8:	add	x0, x0, #0x6e8
   1eebc:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1eec0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1eec4:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1eec8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1eecc:	add	x2, x2, #0xc40
   1eed0:	add	x0, x0, #0x990
   1eed4:	mov	x4, #0x0                   	// #0
   1eed8:	mov	x3, #0x0                   	// #0
   1eedc:	mov	w1, #0x495                 	// #1173
   1eee0:	stp	x23, x24, [sp, #32]
   1eee4:	stp	x25, x26, [sp, #48]
   1eee8:	str	x27, [sp, #64]
   1eeec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1eef0:	cmp	x0, #0x0
   1eef4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1eef8:	b.eq	1ef4c <__sanitizer_set_report_fd@@Base+0x5684>  // b.none
   1eefc:	str	x30, [sp, #-16]!
   1ef00:	mov	x7, x1
   1ef04:	ands	x1, x1, #0xf
   1ef08:	b.ne	1ef54 <__sanitizer_set_report_fd@@Base+0x568c>  // b.any
   1ef0c:	sub	x1, x7, #0x10
   1ef10:	stp	x0, x3, [x7, #-16]
   1ef14:	mov	x0, x2
   1ef18:	mov	x2, x4
   1ef1c:	mov	x3, x5
   1ef20:	mov	x4, x6
   1ef24:	mov	x8, #0xdc                  	// #220
   1ef28:	svc	#0x0
   1ef2c:	cmp	x0, #0x0
   1ef30:	b.ne	1ef44 <__sanitizer_set_report_fd@@Base+0x567c>  // b.any
   1ef34:	ldp	x1, x0, [sp], #16
   1ef38:	blr	x1
   1ef3c:	mov	x8, #0x5d                  	// #93
   1ef40:	svc	#0x0
   1ef44:	ldr	x30, [sp], #16
   1ef48:	ret
   1ef4c:	mov	x0, #0xffffffffffffffea    	// #-22
   1ef50:	ret
   1ef54:	mov	x4, x1
   1ef58:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ef5c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ef60:	add	x2, x2, #0xc58
   1ef64:	add	x0, x0, #0x990
   1ef68:	mov	x3, #0x0                   	// #0
   1ef6c:	mov	w1, #0x54b                 	// #1355
   1ef70:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ef74:	nop
   1ef78:	cmp	w0, #0x7
   1ef7c:	b.eq	1f028 <__sanitizer_set_report_fd@@Base+0x5760>  // b.none
   1ef80:	b.gt	1efcc <__sanitizer_set_report_fd@@Base+0x5704>
   1ef84:	cmp	w0, #0x5
   1ef88:	b.eq	1f040 <__sanitizer_set_report_fd@@Base+0x5778>  // b.none
   1ef8c:	cmp	w0, #0x6
   1ef90:	b.ne	1efac <__sanitizer_set_report_fd@@Base+0x56e4>  // b.any
   1ef94:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ef98:	ldr	x0, [x1, #4040]
   1ef9c:	ldr	w0, [x0, #80]
   1efa0:	cmp	w0, #0x1
   1efa4:	b.eq	1eff0 <__sanitizer_set_report_fd@@Base+0x5728>  // b.none
   1efa8:	ret
   1efac:	cmp	w0, #0x4
   1efb0:	b.ne	1f008 <__sanitizer_set_report_fd@@Base+0x5740>  // b.any
   1efb4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1efb8:	ldr	x0, [x1, #4040]
   1efbc:	ldr	w0, [x0, #84]
   1efc0:	cmp	w0, #0x1
   1efc4:	b.ne	1efa8 <__sanitizer_set_report_fd@@Base+0x56e0>  // b.any
   1efc8:	b	1eff0 <__sanitizer_set_report_fd@@Base+0x5728>
   1efcc:	cmp	w0, #0x8
   1efd0:	b.eq	1f010 <__sanitizer_set_report_fd@@Base+0x5748>  // b.none
   1efd4:	cmp	w0, #0xb
   1efd8:	b.ne	1f008 <__sanitizer_set_report_fd@@Base+0x5740>  // b.any
   1efdc:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1efe0:	ldr	x0, [x1, #4040]
   1efe4:	ldr	w0, [x0, #72]
   1efe8:	cmp	w0, #0x1
   1efec:	b.ne	1efa8 <__sanitizer_set_report_fd@@Base+0x56e0>  // b.any
   1eff0:	ldr	x1, [x1, #4040]
   1eff4:	mov	w2, #0x2                   	// #2
   1eff8:	ldrb	w1, [x1, #96]
   1effc:	cmp	w1, #0x0
   1f000:	csel	w0, w0, w2, ne  // ne = any
   1f004:	ret
   1f008:	mov	w0, #0x0                   	// #0
   1f00c:	ret
   1f010:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f014:	ldr	x0, [x1, #4040]
   1f018:	ldr	w0, [x0, #92]
   1f01c:	cmp	w0, #0x1
   1f020:	b.ne	1efa8 <__sanitizer_set_report_fd@@Base+0x56e0>  // b.any
   1f024:	b	1eff0 <__sanitizer_set_report_fd@@Base+0x5728>
   1f028:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f02c:	ldr	x0, [x1, #4040]
   1f030:	ldr	w0, [x0, #76]
   1f034:	cmp	w0, #0x1
   1f038:	b.ne	1efa8 <__sanitizer_set_report_fd@@Base+0x56e0>  // b.any
   1f03c:	b	1eff0 <__sanitizer_set_report_fd@@Base+0x5728>
   1f040:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f044:	ldr	x0, [x1, #4040]
   1f048:	ldr	w0, [x0, #88]
   1f04c:	cmp	w0, #0x1
   1f050:	b.ne	1efa8 <__sanitizer_set_report_fd@@Base+0x56e0>  // b.any
   1f054:	b	1eff0 <__sanitizer_set_report_fd@@Base+0x5728>
   1f058:	stp	x19, x20, [sp, #-320]!
   1f05c:	mov	x2, #0x80                  	// #128
   1f060:	add	x20, sp, #0x40
   1f064:	stp	x21, x22, [sp, #16]
   1f068:	mov	x21, x0
   1f06c:	mov	x22, x1
   1f070:	mov	x0, x20
   1f074:	mov	w1, #0xff                  	// #255
   1f078:	str	x30, [sp, #32]
   1f07c:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1f080:	add	x19, sp, #0xc0
   1f084:	ldrb	w4, [sp, #68]
   1f088:	mov	x1, x20
   1f08c:	mov	x2, x19
   1f090:	mov	x8, #0x87                  	// #135
   1f094:	and	w4, w4, #0xfffffffe
   1f098:	mov	x0, #0x2                   	// #2
   1f09c:	mov	x3, #0x8                   	// #8
   1f0a0:	strb	w4, [sp, #68]
   1f0a4:	svc	#0x0
   1f0a8:	mov	x1, #0x0                   	// #0
   1f0ac:	mov	x3, x22
   1f0b0:	mov	x2, x21
   1f0b4:	add	x0, sp, #0x38
   1f0b8:	bl	6c10 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   1f0bc:	mov	x1, x19
   1f0c0:	mov	x8, #0x87                  	// #135
   1f0c4:	mov	x0, #0x2                   	// #2
   1f0c8:	mov	x2, #0x0                   	// #0
   1f0cc:	mov	x3, #0x8                   	// #8
   1f0d0:	svc	#0x0
   1f0d4:	ldp	x21, x22, [sp, #16]
   1f0d8:	ldr	x30, [sp, #32]
   1f0dc:	ldr	x0, [sp, #56]
   1f0e0:	ldp	x19, x20, [sp], #320
   1f0e4:	ret
   1f0e8:	mov	x1, #0x0                   	// #0
   1f0ec:	b	68d0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   1f0f0:	ldr	x0, [x0, #8]
   1f0f4:	add	x1, x0, #0x1d0
   1f0f8:	ldr	w0, [x0, #468]
   1f0fc:	cbz	w0, 1f130 <__sanitizer_set_report_fd@@Base+0x5868>
   1f100:	mov	w3, #0x5201                	// #20993
   1f104:	movk	w3, #0x4553, lsl #16
   1f108:	b	1f118 <__sanitizer_set_report_fd@@Base+0x5850>
   1f10c:	add	x1, x1, w0, uxtw
   1f110:	ldr	w0, [x1, #4]
   1f114:	cbz	w0, 1f130 <__sanitizer_set_report_fd@@Base+0x5868>
   1f118:	ldr	w2, [x1]
   1f11c:	cmp	w2, w3
   1f120:	b.ne	1f10c <__sanitizer_set_report_fd@@Base+0x5844>  // b.any
   1f124:	ldr	x0, [x1, #8]
   1f128:	ubfx	w0, w0, #6, #1
   1f12c:	add	w0, w0, #0x1
   1f130:	ret
   1f134:	nop
   1f138:	ret
   1f13c:	nop
   1f140:	ldr	x1, [x0, #8]
   1f144:	ldr	x2, [x1, #416]
   1f148:	ldp	x3, x1, [x1, #432]
   1f14c:	stp	x1, x3, [x0, #24]
   1f150:	str	x2, [x0, #40]
   1f154:	ret
   1f158:	ret
   1f15c:	nop
   1f160:	ret
   1f164:	nop
   1f168:	ret
   1f16c:	nop
   1f170:	tbnz	w1, #3, 1f178 <__sanitizer_set_report_fd@@Base+0x58b0>
   1f174:	ret
   1f178:	mov	x2, x0
   1f17c:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f180:	add	x0, x1, #0xc80
   1f184:	mov	x1, x2
   1f188:	str	x30, [sp, #-16]!
   1f18c:	bl	22d00 <OnPrint@@Base+0x398>
   1f190:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f194:	nop
   1f198:	str	x30, [sp, #-16]!
   1f19c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f1a0:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f1a4:	add	x2, x2, #0xd98
   1f1a8:	add	x0, x0, #0x990
   1f1ac:	mov	x4, #0x0                   	// #0
   1f1b0:	mov	x3, #0x0                   	// #0
   1f1b4:	mov	w1, #0x80a                 	// #2058
   1f1b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f1bc:	nop
   1f1c0:	sub	x5, x1, #0x1
   1f1c4:	mov	x3, x1
   1f1c8:	cmp	x5, #0xff
   1f1cc:	mov	x4, x0
   1f1d0:	and	w2, w2, #0xff
   1f1d4:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   1f1d8:	b.ne	1f1e4 <__sanitizer_set_report_fd@@Base+0x591c>  // b.any
   1f1dc:	mov	w0, #0x0                   	// #0
   1f1e0:	ret
   1f1e4:	adrp	x5, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f1e8:	add	x5, x5, #0xc78
   1f1ec:	ldrb	w6, [x5, #24]
   1f1f0:	tst	w6, #0xff
   1f1f4:	b.ne	1f21c <__sanitizer_set_report_fd@@Base+0x5954>  // b.any
   1f1f8:	eor	w2, w2, #0x1
   1f1fc:	mov	x8, #0x116                 	// #278
   1f200:	and	x2, x2, #0xff
   1f204:	svc	#0x0
   1f208:	cmn	x0, #0x1, lsl #12
   1f20c:	b.hi	1f270 <__sanitizer_set_report_fd@@Base+0x59a8>  // b.pmore
   1f210:	cmp	x1, x0
   1f214:	mov	w0, #0x1                   	// #1
   1f218:	b.eq	1f1e0 <__sanitizer_set_report_fd@@Base+0x5918>  // b.none
   1f21c:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f220:	mov	x8, #0x38                  	// #56
   1f224:	add	x1, x1, #0xdd8
   1f228:	mov	x0, #0xffffffffffffff9c    	// #-100
   1f22c:	mov	x2, #0x0                   	// #0
   1f230:	svc	#0x0
   1f234:	cmn	x0, #0x1, lsl #12
   1f238:	b.hi	1f1dc <__sanitizer_set_report_fd@@Base+0x5914>  // b.pmore
   1f23c:	sxtw	x5, w0
   1f240:	mov	x0, x5
   1f244:	mov	x1, x4
   1f248:	mov	x2, x3
   1f24c:	mov	x8, #0x3f                  	// #63
   1f250:	svc	#0x0
   1f254:	cmn	x0, #0x1, lsl #12
   1f258:	b.hi	1f284 <__sanitizer_set_report_fd@@Base+0x59bc>  // b.pmore
   1f25c:	mov	x0, x5
   1f260:	mov	x8, #0x39                  	// #57
   1f264:	svc	#0x0
   1f268:	mov	w0, #0x1                   	// #1
   1f26c:	ret
   1f270:	cmn	w0, #0x26
   1f274:	b.ne	1f21c <__sanitizer_set_report_fd@@Base+0x5954>  // b.any
   1f278:	mov	w0, #0x1                   	// #1
   1f27c:	strb	w0, [x5, #24]
   1f280:	b	1f21c <__sanitizer_set_report_fd@@Base+0x5954>
   1f284:	cmn	w0, #0x4
   1f288:	b.eq	1f240 <__sanitizer_set_report_fd@@Base+0x5978>  // b.none
   1f28c:	mov	w0, #0x0                   	// #0
   1f290:	b	1f1e0 <__sanitizer_set_report_fd@@Base+0x5918>
   1f294:	nop
   1f298:	stp	x19, x20, [sp, #-176]!
   1f29c:	stp	x23, x24, [sp, #32]
   1f2a0:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f2a4:	ldr	x19, [x23, #4000]
   1f2a8:	stp	x21, x22, [sp, #16]
   1f2ac:	mov	x21, x0
   1f2b0:	stp	x25, x30, [sp, #48]
   1f2b4:	mov	x22, x2
   1f2b8:	ldr	x1, [x19]
   1f2bc:	str	xzr, [sp, #64]
   1f2c0:	stp	xzr, xzr, [sp, #72]
   1f2c4:	cbz	x1, 1f4c4 <__sanitizer_set_report_fd@@Base+0x5bfc>
   1f2c8:	sub	x19, x1, #0x1
   1f2cc:	ands	x19, x19, x1
   1f2d0:	b.ne	1f5d8 <__sanitizer_set_report_fd@@Base+0x5d10>  // b.any
   1f2d4:	add	x25, x1, #0xfff
   1f2d8:	neg	x1, x1
   1f2dc:	and	x25, x25, x1
   1f2e0:	mov	w2, #0x0                   	// #0
   1f2e4:	mov	x0, x25
   1f2e8:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f2ec:	add	x1, x24, #0x700
   1f2f0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1f2f4:	ldr	x1, [sp, #64]
   1f2f8:	mov	x20, x0
   1f2fc:	ldr	x2, [sp, #80]
   1f300:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1f304:	ldp	x0, x1, [sp, #64]
   1f308:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1f30c:	stp	x20, x25, [sp, #64]
   1f310:	ldr	x2, [sp, #80]
   1f314:	cmp	x2, #0xfff
   1f318:	b.hi	1f33c <__sanitizer_set_report_fd@@Base+0x5a74>  // b.pmore
   1f31c:	cmp	x25, #0xfff
   1f320:	b.ls	1f580 <__sanitizer_set_report_fd@@Base+0x5cb8>  // b.plast
   1f324:	mov	x3, #0x1000                	// #4096
   1f328:	add	x0, x20, x2
   1f32c:	mov	w1, #0x0                   	// #0
   1f330:	sub	x2, x3, x2
   1f334:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1f338:	ldr	x20, [sp, #64]
   1f33c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   1f340:	ldr	q0, [x0, #48]
   1f344:	str	q0, [sp, #80]
   1f348:	strb	wzr, [x20]
   1f34c:	ldrb	w0, [x22, #8]
   1f350:	cbnz	w0, 1f468 <__sanitizer_set_report_fd@@Base+0x5ba0>
   1f354:	ldr	x2, [x21, #8]
   1f358:	cbz	x2, 1f36c <__sanitizer_set_report_fd@@Base+0x5aa4>
   1f35c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f360:	add	x0, sp, #0x40
   1f364:	add	x1, x1, #0xdb8
   1f368:	bl	22d88 <OnPrint@@Base+0x420>
   1f36c:	ldr	x1, [sp, #80]
   1f370:	ldr	x0, [sp, #64]
   1f374:	cbz	x1, 1f5e8 <__sanitizer_set_report_fd@@Base+0x5d20>
   1f378:	ldrb	w1, [x0]
   1f37c:	cbz	w1, 1f448 <__sanitizer_set_report_fd@@Base+0x5b80>
   1f380:	movi	v0.4s, #0x0
   1f384:	add	x25, sp, #0x60
   1f388:	mov	x2, #0x10                  	// #16
   1f38c:	mov	w1, #0x0                   	// #0
   1f390:	add	x0, x25, #0x1c
   1f394:	str	xzr, [sp, #96]
   1f398:	str	wzr, [sp, #120]
   1f39c:	stur	q0, [sp, #104]
   1f3a0:	strb	wzr, [sp, #140]
   1f3a4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   1f3a8:	movi	v0.4s, #0x0
   1f3ac:	mov	x0, x25
   1f3b0:	ldr	x2, [x21]
   1f3b4:	str	xzr, [sp, #144]
   1f3b8:	ldr	x1, [sp, #64]
   1f3bc:	stur	q0, [sp, #152]
   1f3c0:	bl	159b8 <__sancov_default_options@@Base+0x2ee8>
   1f3c4:	ldrh	w3, [x21, #24]
   1f3c8:	cbz	w3, 1f3f8 <__sanitizer_set_report_fd@@Base+0x5b30>
   1f3cc:	ldr	x0, [x21, #16]
   1f3d0:	mov	w20, #0x0                   	// #0
   1f3d4:	nop
   1f3d8:	ldr	w1, [x0, x19]
   1f3dc:	add	x2, x0, x19
   1f3e0:	cmp	w1, #0x1
   1f3e4:	b.eq	1f47c <__sanitizer_set_report_fd@@Base+0x5bb4>  // b.none
   1f3e8:	add	w20, w20, #0x1
   1f3ec:	add	x19, x19, #0x38
   1f3f0:	cmp	w3, w20
   1f3f4:	b.gt	1f3d8 <__sanitizer_set_report_fd@@Base+0x5b10>
   1f3f8:	ldr	x19, [x22]
   1f3fc:	mov	x0, #0xe38f                	// #58255
   1f400:	movk	x0, #0x8e38, lsl #16
   1f404:	movk	x0, #0x38e3, lsl #32
   1f408:	ldp	x4, x3, [x19, #8]
   1f40c:	movk	x0, #0xe38e, lsl #48
   1f410:	umulh	x4, x4, x0
   1f414:	lsr	x4, x4, #6
   1f418:	cmp	x3, x4
   1f41c:	b.hi	1f614 <__sanitizer_set_report_fd@@Base+0x5d4c>  // b.pmore
   1f420:	add	x0, x3, #0x1
   1f424:	b.eq	1f4d4 <__sanitizer_set_report_fd@@Base+0x5c0c>  // b.none
   1f428:	ldr	x21, [x19]
   1f42c:	add	x3, x3, x3, lsl #3
   1f430:	str	x0, [x19, #16]
   1f434:	mov	x1, x25
   1f438:	add	x0, x21, x3, lsl #3
   1f43c:	mov	x2, #0x48                  	// #72
   1f440:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1f444:	ldr	x0, [sp, #64]
   1f448:	ldr	x1, [sp, #72]
   1f44c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1f450:	mov	w0, #0x0                   	// #0
   1f454:	ldp	x21, x22, [sp, #16]
   1f458:	ldp	x23, x24, [sp, #32]
   1f45c:	ldp	x25, x30, [sp, #48]
   1f460:	ldp	x19, x20, [sp], #176
   1f464:	ret
   1f468:	ldr	x0, [sp, #64]
   1f46c:	strb	wzr, [x22, #8]
   1f470:	ldr	x1, [sp, #80]
   1f474:	bl	15ec8 <__sancov_default_options@@Base+0x33f8>
   1f478:	b	1f36c <__sanitizer_set_report_fd@@Base+0x5aa4>
   1f47c:	ldr	x1, [x21]
   1f480:	mov	x0, x25
   1f484:	ldr	x4, [x2, #16]
   1f488:	mov	x5, #0x0                   	// #0
   1f48c:	ldr	w3, [x2, #4]
   1f490:	add	w20, w20, #0x1
   1f494:	ldr	x2, [x2, #40]
   1f498:	add	x1, x1, x4
   1f49c:	ubfx	x4, x3, #1, #1
   1f4a0:	and	w3, w3, #0x1
   1f4a4:	add	x2, x1, x2
   1f4a8:	bl	15a50 <__sancov_default_options@@Base+0x2f80>
   1f4ac:	ldrh	w3, [x21, #24]
   1f4b0:	add	x19, x19, #0x38
   1f4b4:	cmp	w20, w3
   1f4b8:	b.ge	1f3f8 <__sanitizer_set_report_fd@@Base+0x5b30>  // b.tcont
   1f4bc:	ldr	x0, [x21, #16]
   1f4c0:	b	1f3d8 <__sanitizer_set_report_fd@@Base+0x5b10>
   1f4c4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1f4c8:	mov	x1, x0
   1f4cc:	str	x0, [x19]
   1f4d0:	b	1f2c8 <__sanitizer_set_report_fd@@Base+0x5a00>
   1f4d4:	tst	x0, x3
   1f4d8:	b.eq	1f514 <__sanitizer_set_report_fd@@Base+0x5c4c>  // b.none
   1f4dc:	clz	x2, x0
   1f4e0:	mov	w1, #0x3f                  	// #63
   1f4e4:	sub	w1, w1, w2
   1f4e8:	mov	x2, #0x1                   	// #1
   1f4ec:	add	w4, w1, #0x1
   1f4f0:	lsl	x4, x2, x4
   1f4f4:	cmp	x0, x4
   1f4f8:	b.cs	1f670 <__sanitizer_set_report_fd@@Base+0x5da8>  // b.hs, b.nlast
   1f4fc:	lsl	x1, x2, x1
   1f500:	cmp	x0, x1
   1f504:	b.ls	1f650 <__sanitizer_set_report_fd@@Base+0x5d88>  // b.plast
   1f508:	cmp	x3, x4
   1f50c:	b.hi	1f638 <__sanitizer_set_report_fd@@Base+0x5d70>  // b.pmore
   1f510:	mov	x0, x4
   1f514:	ldr	x23, [x23, #4000]
   1f518:	add	x0, x0, x0, lsl #3
   1f51c:	lsl	x20, x0, #3
   1f520:	ldr	x0, [x23]
   1f524:	cbz	x0, 1f62c <__sanitizer_set_report_fd@@Base+0x5d64>
   1f528:	sub	x1, x0, #0x1
   1f52c:	tst	x1, x0
   1f530:	b.ne	1f5d8 <__sanitizer_set_report_fd@@Base+0x5d10>  // b.any
   1f534:	add	x20, x20, x1
   1f538:	neg	x0, x0
   1f53c:	and	x20, x20, x0
   1f540:	add	x1, x24, #0x700
   1f544:	mov	w2, #0x0                   	// #0
   1f548:	mov	x0, x20
   1f54c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1f550:	mov	x21, x0
   1f554:	ldr	x2, [x19, #16]
   1f558:	ldr	x1, [x19]
   1f55c:	add	x2, x2, x2, lsl #3
   1f560:	lsl	x2, x2, #3
   1f564:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1f568:	ldp	x0, x1, [x19]
   1f56c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1f570:	stp	x21, x20, [x19]
   1f574:	ldr	x3, [x19, #16]
   1f578:	add	x0, x3, #0x1
   1f57c:	b	1f42c <__sanitizer_set_report_fd@@Base+0x5b64>
   1f580:	ldr	x20, [x23, #4000]
   1f584:	ldr	x0, [x20]
   1f588:	cbz	x0, 1f608 <__sanitizer_set_report_fd@@Base+0x5d40>
   1f58c:	sub	x1, x0, #0x1
   1f590:	tst	x1, x0
   1f594:	b.ne	1f5d8 <__sanitizer_set_report_fd@@Base+0x5d10>  // b.any
   1f598:	add	x25, x0, #0xfff
   1f59c:	neg	x0, x0
   1f5a0:	and	x25, x25, x0
   1f5a4:	add	x1, x24, #0x700
   1f5a8:	mov	w2, #0x0                   	// #0
   1f5ac:	mov	x0, x25
   1f5b0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1f5b4:	mov	x20, x0
   1f5b8:	ldr	x1, [sp, #64]
   1f5bc:	ldr	x2, [sp, #80]
   1f5c0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1f5c4:	ldp	x0, x1, [sp, #64]
   1f5c8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1f5cc:	stp	x20, x25, [sp, #64]
   1f5d0:	ldr	x2, [sp, #80]
   1f5d4:	b	1f324 <__sanitizer_set_report_fd@@Base+0x5a5c>
   1f5d8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f5dc:	add	x0, x0, #0x6e8
   1f5e0:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1f5e4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f5e8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f5ec:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f5f0:	add	x2, x2, #0x560
   1f5f4:	add	x0, x0, #0x578
   1f5f8:	mov	x4, #0x0                   	// #0
   1f5fc:	mov	x3, #0x0                   	// #0
   1f600:	mov	w1, #0x1b6                 	// #438
   1f604:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f608:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1f60c:	str	x0, [x20]
   1f610:	b	1f58c <__sanitizer_set_report_fd@@Base+0x5cc4>
   1f614:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f618:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f61c:	add	x2, x2, #0x660
   1f620:	add	x0, x0, #0x578
   1f624:	mov	w1, #0x1be                 	// #446
   1f628:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f62c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1f630:	str	x0, [x23]
   1f634:	b	1f528 <__sanitizer_set_report_fd@@Base+0x5c60>
   1f638:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f63c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f640:	add	x2, x2, #0x6c8
   1f644:	add	x0, x0, #0x578
   1f648:	mov	w1, #0x1fd                 	// #509
   1f64c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f650:	mov	x4, x1
   1f654:	mov	x3, x0
   1f658:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f65c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f660:	add	x2, x2, #0x6a8
   1f664:	add	x0, x0, #0x578
   1f668:	mov	w1, #0x17c                 	// #380
   1f66c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f670:	mov	x3, x0
   1f674:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f678:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f67c:	add	x2, x2, #0x680
   1f680:	add	x0, x0, #0x578
   1f684:	mov	w1, #0x17b                 	// #379
   1f688:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f68c:	nop
   1f690:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f694:	ldr	x3, [x3, #3496]
   1f698:	cbz	x3, 1f6a0 <__sanitizer_set_report_fd@@Base+0x5dd8>
   1f69c:	b	123c0 <_ZdaPvmSt11align_val_t@@Base+0x60>
   1f6a0:	b	6b00 <sigaction@plt>
   1f6a4:	nop
   1f6a8:	stp	x19, x20, [sp, #-192]!
   1f6ac:	str	x30, [sp, #48]
   1f6b0:	cbz	x1, 1f81c <__sanitizer_set_report_fd@@Base+0x5f54>
   1f6b4:	stp	x23, x24, [sp, #32]
   1f6b8:	mov	x24, x2
   1f6bc:	cbz	x2, 1f844 <__sanitizer_set_report_fd@@Base+0x5f7c>
   1f6c0:	mov	x20, x1
   1f6c4:	and	w0, w0, #0xff
   1f6c8:	cbz	w0, 1f764 <__sanitizer_set_report_fd@@Base+0x5e9c>
   1f6cc:	stp	x21, x22, [sp, #16]
   1f6d0:	add	x21, sp, #0x40
   1f6d4:	mov	x1, x21
   1f6d8:	mov	w0, #0x3                   	// #3
   1f6dc:	bl	6cb0 <getrlimit@plt>
   1f6e0:	sxtw	x19, w0
   1f6e4:	cbnz	w0, 1f868 <__sanitizer_set_report_fd@@Base+0x5fa0>
   1f6e8:	add	x22, sp, #0x50
   1f6ec:	mov	w1, #0x1                   	// #1
   1f6f0:	mov	x0, x22
   1f6f4:	add	x23, sp, #0x70
   1f6f8:	bl	22fe8 <OnPrint@@Base+0x680>
   1f6fc:	stp	xzr, xzr, [sp, #136]
   1f700:	str	xzr, [sp, #184]
   1f704:	b	1f718 <__sanitizer_set_report_fd@@Base+0x5e50>
   1f708:	ldr	x0, [sp, #120]
   1f70c:	cmp	x0, x21
   1f710:	b.hi	1f7c8 <__sanitizer_set_report_fd@@Base+0x5f00>  // b.pmore
   1f714:	mov	x19, x0
   1f718:	mov	x1, x23
   1f71c:	mov	x0, x22
   1f720:	bl	23890 <OnPrint@@Base+0xf28>
   1f724:	tst	w0, #0xff
   1f728:	b.ne	1f708 <__sanitizer_set_report_fd@@Base+0x5e40>  // b.any
   1f72c:	ldr	x0, [sp, #112]
   1f730:	cmp	x0, x21
   1f734:	b.hi	1f744 <__sanitizer_set_report_fd@@Base+0x5e7c>  // b.pmore
   1f738:	ldr	x3, [sp, #120]
   1f73c:	cmp	x3, x21
   1f740:	b.hi	1f7d8 <__sanitizer_set_report_fd@@Base+0x5f10>  // b.pmore
   1f744:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f748:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f74c:	add	x2, x2, #0xeb0
   1f750:	add	x0, x0, #0xe20
   1f754:	mov	x4, #0x0                   	// #0
   1f758:	mov	x3, #0x0                   	// #0
   1f75c:	mov	w1, #0x6a                  	// #106
   1f760:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f764:	add	x19, sp, #0x70
   1f768:	str	xzr, [sp, #64]
   1f76c:	mov	x0, x19
   1f770:	str	xzr, [sp, #80]
   1f774:	bl	6800 <pthread_attr_init@plt>
   1f778:	bl	6c50 <pthread_self@plt>
   1f77c:	mov	x1, x19
   1f780:	bl	67a0 <pthread_getattr_np@plt>
   1f784:	sxtw	x3, w0
   1f788:	cbnz	w0, 1f888 <__sanitizer_set_report_fd@@Base+0x5fc0>
   1f78c:	add	x2, sp, #0x40
   1f790:	add	x1, sp, #0x50
   1f794:	mov	x0, x19
   1f798:	bl	21c78 <__sanitizer_set_report_fd@@Base+0x83b0>
   1f79c:	mov	x0, x19
   1f7a0:	bl	68f0 <pthread_attr_destroy@plt>
   1f7a4:	ldr	x0, [sp, #64]
   1f7a8:	ldr	x1, [sp, #80]
   1f7ac:	ldr	x30, [sp, #48]
   1f7b0:	add	x0, x0, x1
   1f7b4:	str	x0, [x20]
   1f7b8:	str	x1, [x24]
   1f7bc:	ldp	x23, x24, [sp, #32]
   1f7c0:	ldp	x19, x20, [sp], #192
   1f7c4:	ret
   1f7c8:	ldr	x1, [sp, #112]
   1f7cc:	cmp	x1, x21
   1f7d0:	b.hi	1f744 <__sanitizer_set_report_fd@@Base+0x5e7c>  // b.pmore
   1f7d4:	mov	x3, x0
   1f7d8:	ldr	x1, [sp, #64]
   1f7dc:	mov	x2, #0x40000000            	// #1073741824
   1f7e0:	sub	x19, x3, x19
   1f7e4:	str	x3, [x20]
   1f7e8:	cmp	x1, x2
   1f7ec:	mov	x0, x22
   1f7f0:	csel	x1, x1, x2, ls  // ls = plast
   1f7f4:	cmp	x19, x1
   1f7f8:	csel	x19, x19, x1, ls  // ls = plast
   1f7fc:	sub	x3, x3, x19
   1f800:	str	x3, [x24]
   1f804:	bl	23150 <OnPrint@@Base+0x7e8>
   1f808:	ldp	x21, x22, [sp, #16]
   1f80c:	ldp	x23, x24, [sp, #32]
   1f810:	ldr	x30, [sp, #48]
   1f814:	ldp	x19, x20, [sp], #192
   1f818:	ret
   1f81c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f820:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f824:	add	x2, x2, #0xe08
   1f828:	add	x0, x0, #0xe20
   1f82c:	mov	x4, #0x0                   	// #0
   1f830:	mov	x3, #0x0                   	// #0
   1f834:	mov	w1, #0x5b                  	// #91
   1f838:	stp	x21, x22, [sp, #16]
   1f83c:	stp	x23, x24, [sp, #32]
   1f840:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f844:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f848:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f84c:	add	x2, x2, #0xe68
   1f850:	add	x0, x0, #0xe20
   1f854:	mov	x4, #0x0                   	// #0
   1f858:	mov	x3, #0x0                   	// #0
   1f85c:	mov	w1, #0x5c                  	// #92
   1f860:	stp	x21, x22, [sp, #16]
   1f864:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f868:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f86c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f870:	mov	x3, x19
   1f874:	add	x2, x2, #0xe80
   1f878:	add	x0, x0, #0xe20
   1f87c:	mov	x4, #0x0                   	// #0
   1f880:	mov	w1, #0x60                  	// #96
   1f884:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f888:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f88c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f890:	add	x2, x2, #0xef8
   1f894:	add	x0, x0, #0xe20
   1f898:	mov	x4, #0x0                   	// #0
   1f89c:	mov	w1, #0x88                  	// #136
   1f8a0:	stp	x21, x22, [sp, #16]
   1f8a4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f8a8:	stp	x19, x20, [sp, #-48]!
   1f8ac:	mov	x19, x0
   1f8b0:	mov	x20, x1
   1f8b4:	mov	x0, #0xffffffffffffffff    	// #-1
   1f8b8:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f8bc:	add	x1, x1, #0xf30
   1f8c0:	str	x30, [sp, #16]
   1f8c4:	bl	6830 <dlsym@plt>
   1f8c8:	str	x0, [sp, #32]
   1f8cc:	cbz	x0, 1f908 <__sanitizer_set_report_fd@@Base+0x6040>
   1f8d0:	add	x1, sp, #0x20
   1f8d4:	add	x0, sp, #0x28
   1f8d8:	mov	x2, #0x8                   	// #8
   1f8dc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1f8e0:	ldr	x3, [sp, #40]
   1f8e4:	mov	x1, x20
   1f8e8:	mov	x0, x19
   1f8ec:	mov	w2, #0x1                   	// #1
   1f8f0:	blr	x3
   1f8f4:	cmp	w0, #0x0
   1f8f8:	cset	w0, eq  // eq = none
   1f8fc:	ldr	x30, [sp, #16]
   1f900:	ldp	x19, x20, [sp], #48
   1f904:	ret
   1f908:	mov	w0, #0x0                   	// #0
   1f90c:	ldr	x30, [sp, #16]
   1f910:	ldp	x19, x20, [sp], #48
   1f914:	ret
   1f918:	str	x30, [sp, #-48]!
   1f91c:	adrp	x1, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f920:	mov	x0, #0xffffffffffffffff    	// #-1
   1f924:	add	x1, x1, #0xf38
   1f928:	bl	6830 <dlsym@plt>
   1f92c:	mov	x3, x0
   1f930:	mov	x2, #0x8                   	// #8
   1f934:	add	x1, sp, #0x20
   1f938:	add	x0, sp, #0x28
   1f93c:	stp	xzr, xzr, [sp, #16]
   1f940:	str	x3, [sp, #32]
   1f944:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1f948:	ldr	x2, [sp, #40]
   1f94c:	cbz	x2, 1f9c0 <__sanitizer_set_report_fd@@Base+0x60f8>
   1f950:	add	x1, sp, #0x18
   1f954:	add	x0, sp, #0x10
   1f958:	blr	x2
   1f95c:	ldr	x1, [sp, #24]
   1f960:	cmp	x1, #0xf
   1f964:	b.ls	1f998 <__sanitizer_set_report_fd@@Base+0x60d0>  // b.plast
   1f968:	sub	x0, x1, #0x1
   1f96c:	tst	x0, x1
   1f970:	b.ne	1f9e0 <__sanitizer_set_report_fd@@Base+0x6118>  // b.any
   1f974:	ldr	x0, [sp, #16]
   1f978:	adrp	x2, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f97c:	add	x0, x0, x1
   1f980:	neg	x1, x1
   1f984:	sub	x0, x0, #0x1
   1f988:	and	x0, x0, x1
   1f98c:	str	x0, [x2, #3224]
   1f990:	ldr	x30, [sp], #48
   1f994:	ret
   1f998:	ldr	x0, [sp, #16]
   1f99c:	mov	x1, #0x10                  	// #16
   1f9a0:	adrp	x2, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f9a4:	add	x0, x0, x1
   1f9a8:	neg	x1, x1
   1f9ac:	sub	x0, x0, #0x1
   1f9b0:	and	x0, x0, x1
   1f9b4:	str	x0, [x2, #3224]
   1f9b8:	ldr	x30, [sp], #48
   1f9bc:	ret
   1f9c0:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f9c4:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1f9c8:	add	x2, x2, #0xf50
   1f9cc:	add	x0, x0, #0xe20
   1f9d0:	mov	x4, #0x0                   	// #0
   1f9d4:	mov	x3, #0x0                   	// #0
   1f9d8:	mov	w1, #0xd4                  	// #212
   1f9dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f9e0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1f9e4:	add	x0, x0, #0x6e8
   1f9e8:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1f9ec:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f9f0:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1f9f4:	add	x1, x1, #0xc98
   1f9f8:	ldr	x0, [x1, #8]
   1f9fc:	cbnz	x0, 1fa0c <__sanitizer_set_report_fd@@Base+0x6144>
   1fa00:	mov	x2, #0x6f0                 	// #1776
   1fa04:	mov	x0, x2
   1fa08:	str	x2, [x1, #8]
   1fa0c:	ret
   1fa10:	mov	x0, #0x10                  	// #16
   1fa14:	ret
   1fa18:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1fa1c:	add	x1, x1, #0xc98
   1fa20:	mrs	x2, tpidr_el0
   1fa24:	ldr	x0, [x1, #8]
   1fa28:	cbnz	x0, 1fa38 <__sanitizer_set_report_fd@@Base+0x6170>
   1fa2c:	mov	x3, #0x6f0                 	// #1776
   1fa30:	mov	x0, x3
   1fa34:	str	x3, [x1, #8]
   1fa38:	sub	x0, x2, x0
   1fa3c:	ret
   1fa40:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1fa44:	ldr	x0, [x0, #3224]
   1fa48:	ret
   1fa4c:	nop
   1fa50:	adrp	x6, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1fa54:	add	x7, x6, #0xc98
   1fa58:	stp	x19, x20, [sp, #-64]!
   1fa5c:	mov	x20, x1
   1fa60:	mov	x19, x3
   1fa64:	ldr	x5, [x7, #8]
   1fa68:	stp	x21, x22, [sp, #16]
   1fa6c:	mov	x22, x2
   1fa70:	stp	x23, x30, [sp, #32]
   1fa74:	mov	x21, x4
   1fa78:	and	w23, w0, #0xff
   1fa7c:	mrs	x0, tpidr_el0
   1fa80:	cbnz	x5, 1fa90 <__sanitizer_set_report_fd@@Base+0x61c8>
   1fa84:	mov	x1, #0x6f0                 	// #1776
   1fa88:	mov	x5, x1
   1fa8c:	str	x1, [x7, #8]
   1fa90:	sub	x0, x0, x5
   1fa94:	str	x0, [x19]
   1fa98:	ldr	x0, [x6, #3224]
   1fa9c:	str	x0, [x21]
   1faa0:	add	x1, sp, #0x30
   1faa4:	mov	w0, w23
   1faa8:	add	x2, sp, #0x38
   1faac:	bl	1f6a8 <__sanitizer_set_report_fd@@Base+0x5de0>
   1fab0:	ldp	x0, x1, [sp, #48]
   1fab4:	str	x1, [x20]
   1fab8:	sub	x0, x0, x1
   1fabc:	str	x0, [x22]
   1fac0:	cbnz	w23, 1fb0c <__sanitizer_set_report_fd@@Base+0x6244>
   1fac4:	ldr	x3, [x19]
   1fac8:	ldr	x4, [x20]
   1facc:	cmp	x3, x4
   1fad0:	b.ls	1fb0c <__sanitizer_set_report_fd@@Base+0x6244>  // b.plast
   1fad4:	add	x1, x0, x4
   1fad8:	cmp	x3, x1
   1fadc:	b.cs	1fb0c <__sanitizer_set_report_fd@@Base+0x6244>  // b.hs, b.nlast
   1fae0:	ldr	x2, [x21]
   1fae4:	add	x3, x3, x2
   1fae8:	cmp	x4, x3
   1faec:	b.cs	1fb1c <__sanitizer_set_report_fd@@Base+0x6254>  // b.hs, b.nlast
   1faf0:	cmp	x1, x3
   1faf4:	b.cc	1fb34 <__sanitizer_set_report_fd@@Base+0x626c>  // b.lo, b.ul, b.last
   1faf8:	sub	x0, x0, x2
   1fafc:	str	x0, [x22]
   1fb00:	ldr	x1, [x20]
   1fb04:	add	x0, x1, x0
   1fb08:	str	x0, [x19]
   1fb0c:	ldp	x21, x22, [sp, #16]
   1fb10:	ldp	x23, x30, [sp, #32]
   1fb14:	ldp	x19, x20, [sp], #64
   1fb18:	ret
   1fb1c:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1fb20:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1fb24:	add	x2, x2, #0xf68
   1fb28:	add	x0, x0, #0xe20
   1fb2c:	mov	w1, #0x203                 	// #515
   1fb30:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1fb34:	mov	x4, x1
   1fb38:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1fb3c:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1fb40:	add	x2, x2, #0xf98
   1fb44:	add	x0, x0, #0xe20
   1fb48:	mov	w1, #0x204                 	// #516
   1fb4c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1fb50:	stp	x19, x20, [sp, #-48]!
   1fb54:	mov	x19, x0
   1fb58:	ldrb	w0, [x0, #24]
   1fb5c:	stp	x21, x30, [sp, #16]
   1fb60:	cbz	w0, 1fbd0 <__sanitizer_set_report_fd@@Base+0x6308>
   1fb64:	ldr	x20, [x19, #16]
   1fb68:	ldr	x0, [x19]
   1fb6c:	add	x20, x20, x20, lsl #3
   1fb70:	mov	x21, x0
   1fb74:	add	x20, x0, x20, lsl #3
   1fb78:	cmp	x0, x20
   1fb7c:	b.eq	1fb94 <__sanitizer_set_report_fd@@Base+0x62cc>  // b.none
   1fb80:	mov	x0, x21
   1fb84:	add	x21, x21, #0x48
   1fb88:	bl	15918 <__sancov_default_options@@Base+0x2e48>
   1fb8c:	cmp	x20, x21
   1fb90:	b.ne	1fb80 <__sanitizer_set_report_fd@@Base+0x62b8>  // b.any
   1fb94:	str	xzr, [x19, #16]
   1fb98:	mov	w2, #0x1                   	// #1
   1fb9c:	strb	w2, [x19, #24]
   1fba0:	add	x1, sp, #0x20
   1fba4:	adrp	x0, 1f000 <__sanitizer_set_report_fd@@Base+0x5738>
   1fba8:	add	x0, x0, #0x298
   1fbac:	str	x19, [sp, #32]
   1fbb0:	strb	w2, [sp, #40]
   1fbb4:	stur	wzr, [sp, #41]
   1fbb8:	sturh	wzr, [sp, #45]
   1fbbc:	strb	wzr, [sp, #47]
   1fbc0:	bl	6950 <dl_iterate_phdr@plt>
   1fbc4:	ldp	x21, x30, [sp, #16]
   1fbc8:	ldp	x19, x20, [sp], #48
   1fbcc:	ret
   1fbd0:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fbd4:	stp	xzr, xzr, [x19, #8]
   1fbd8:	ldr	x20, [x20, #4000]
   1fbdc:	ldr	x0, [x20]
   1fbe0:	str	xzr, [x19]
   1fbe4:	cbz	x0, 1fc40 <__sanitizer_set_report_fd@@Base+0x6378>
   1fbe8:	sub	x1, x0, #0x1
   1fbec:	tst	x1, x0
   1fbf0:	b.ne	1fc4c <__sanitizer_set_report_fd@@Base+0x6384>  // b.any
   1fbf4:	add	x20, x0, #0x11f, lsl #12
   1fbf8:	neg	x0, x0
   1fbfc:	add	x20, x20, #0xfff
   1fc00:	mov	w2, #0x0                   	// #0
   1fc04:	and	x20, x20, x0
   1fc08:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1fc0c:	mov	x0, x20
   1fc10:	add	x1, x1, #0x700
   1fc14:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1fc18:	mov	x21, x0
   1fc1c:	ldr	x2, [x19, #16]
   1fc20:	ldr	x1, [x19]
   1fc24:	add	x2, x2, x2, lsl #3
   1fc28:	lsl	x2, x2, #3
   1fc2c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1fc30:	ldp	x0, x1, [x19]
   1fc34:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1fc38:	stp	x21, x20, [x19]
   1fc3c:	b	1fb98 <__sanitizer_set_report_fd@@Base+0x62d0>
   1fc40:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1fc44:	str	x0, [x20]
   1fc48:	b	1fbe8 <__sanitizer_set_report_fd@@Base+0x6320>
   1fc4c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1fc50:	add	x0, x0, #0x6e8
   1fc54:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1fc58:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1fc5c:	nop
   1fc60:	stp	x19, x20, [sp, #-64]!
   1fc64:	mov	x19, x0
   1fc68:	ldrb	w0, [x0, #24]
   1fc6c:	stp	x21, x30, [sp, #16]
   1fc70:	cbz	w0, 1fcdc <__sanitizer_set_report_fd@@Base+0x6414>
   1fc74:	ldr	x20, [x19, #16]
   1fc78:	ldr	x0, [x19]
   1fc7c:	add	x20, x20, x20, lsl #3
   1fc80:	mov	x21, x0
   1fc84:	add	x20, x0, x20, lsl #3
   1fc88:	cmp	x0, x20
   1fc8c:	b.eq	1fca4 <__sanitizer_set_report_fd@@Base+0x63dc>  // b.none
   1fc90:	mov	x0, x21
   1fc94:	add	x21, x21, #0x48
   1fc98:	bl	15918 <__sancov_default_options@@Base+0x2e48>
   1fc9c:	cmp	x20, x21
   1fca0:	b.ne	1fc90 <__sanitizer_set_report_fd@@Base+0x63c8>  // b.any
   1fca4:	str	xzr, [x19, #16]
   1fca8:	mov	w1, #0x1                   	// #1
   1fcac:	strb	w1, [x19, #24]
   1fcb0:	add	x20, sp, #0x20
   1fcb4:	mov	x0, x20
   1fcb8:	bl	22fe8 <OnPrint@@Base+0x680>
   1fcbc:	mov	x1, x19
   1fcc0:	mov	x0, x20
   1fcc4:	bl	23270 <OnPrint@@Base+0x908>
   1fcc8:	mov	x0, x20
   1fccc:	bl	23150 <OnPrint@@Base+0x7e8>
   1fcd0:	ldp	x21, x30, [sp, #16]
   1fcd4:	ldp	x19, x20, [sp], #64
   1fcd8:	ret
   1fcdc:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fce0:	stp	xzr, xzr, [x19, #8]
   1fce4:	ldr	x20, [x20, #4000]
   1fce8:	ldr	x0, [x20]
   1fcec:	str	xzr, [x19]
   1fcf0:	cbz	x0, 1fd4c <__sanitizer_set_report_fd@@Base+0x6484>
   1fcf4:	sub	x1, x0, #0x1
   1fcf8:	tst	x1, x0
   1fcfc:	b.ne	1fd58 <__sanitizer_set_report_fd@@Base+0x6490>  // b.any
   1fd00:	add	x20, x0, #0x11f, lsl #12
   1fd04:	neg	x0, x0
   1fd08:	add	x20, x20, #0xfff
   1fd0c:	mov	w2, #0x0                   	// #0
   1fd10:	and	x20, x20, x0
   1fd14:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1fd18:	mov	x0, x20
   1fd1c:	add	x1, x1, #0x700
   1fd20:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   1fd24:	mov	x21, x0
   1fd28:	ldr	x2, [x19, #16]
   1fd2c:	ldr	x1, [x19]
   1fd30:	add	x2, x2, x2, lsl #3
   1fd34:	lsl	x2, x2, #3
   1fd38:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   1fd3c:	ldp	x0, x1, [x19]
   1fd40:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   1fd44:	stp	x21, x20, [x19]
   1fd48:	b	1fca8 <__sanitizer_set_report_fd@@Base+0x63e0>
   1fd4c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1fd50:	str	x0, [x20]
   1fd54:	b	1fcf4 <__sanitizer_set_report_fd@@Base+0x642c>
   1fd58:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1fd5c:	add	x0, x0, #0x6e8
   1fd60:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   1fd64:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1fd68:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fd6c:	stp	x19, x20, [sp, #-176]!
   1fd70:	ldr	x0, [x0, #4040]
   1fd74:	ldrb	w0, [x0, #160]
   1fd78:	str	x30, [sp, #16]
   1fd7c:	cbnz	w0, 1fda8 <__sanitizer_set_report_fd@@Base+0x64e0>
   1fd80:	add	x1, sp, #0x20
   1fd84:	bl	68e0 <getrusage@plt>
   1fd88:	mov	w1, w0
   1fd8c:	mov	x0, #0x0                   	// #0
   1fd90:	cbnz	w1, 1fd9c <__sanitizer_set_report_fd@@Base+0x64d4>
   1fd94:	ldr	x0, [sp, #64]
   1fd98:	lsl	x0, x0, #10
   1fd9c:	ldr	x30, [sp, #16]
   1fda0:	ldp	x19, x20, [sp], #176
   1fda4:	ret
   1fda8:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1fdac:	mov	x2, #0x0                   	// #0
   1fdb0:	add	x0, x0, #0xfd0
   1fdb4:	mov	w1, #0x0                   	// #0
   1fdb8:	bl	207c8 <__sanitizer_set_report_fd@@Base+0x6f00>
   1fdbc:	mov	w20, w0
   1fdc0:	cmn	w0, #0x1
   1fdc4:	b.eq	1fe94 <__sanitizer_set_report_fd@@Base+0x65cc>  // b.none
   1fdc8:	add	x19, sp, #0x20
   1fdcc:	mov	x2, #0x3f                  	// #63
   1fdd0:	mov	x1, x19
   1fdd4:	bl	1da18 <__sanitizer_set_report_fd@@Base+0x4150>
   1fdd8:	mov	x1, x0
   1fddc:	mov	w0, w20
   1fde0:	mov	x20, x1
   1fde4:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   1fde8:	cmp	x20, #0x0
   1fdec:	mov	x0, #0x0                   	// #0
   1fdf0:	b.le	1fd9c <__sanitizer_set_report_fd@@Base+0x64d4>
   1fdf4:	strb	wzr, [x19, x20]
   1fdf8:	mov	x1, x19
   1fdfc:	ldrb	w2, [sp, #32]
   1fe00:	sub	w0, w2, #0x30
   1fe04:	and	w0, w0, #0xff
   1fe08:	cmp	w0, #0x9
   1fe0c:	b.hi	1fe24 <__sanitizer_set_report_fd@@Base+0x655c>  // b.pmore
   1fe10:	ldrb	w2, [x1, #1]!
   1fe14:	sub	w0, w2, #0x30
   1fe18:	and	w0, w0, #0xff
   1fe1c:	cmp	w0, #0x9
   1fe20:	b.ls	1fe10 <__sanitizer_set_report_fd@@Base+0x6548>  // b.plast
   1fe24:	cbz	w2, 1fec8 <__sanitizer_set_report_fd@@Base+0x6600>
   1fe28:	ldrb	w2, [x1, #1]!
   1fe2c:	sub	w0, w2, #0x30
   1fe30:	cmp	w2, #0x0
   1fe34:	and	w0, w0, #0xff
   1fe38:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   1fe3c:	b.hi	1fe28 <__sanitizer_set_report_fd@@Base+0x6560>  // b.pmore
   1fe40:	cmp	w0, #0x9
   1fe44:	mov	x19, #0x0                   	// #0
   1fe48:	b.hi	1fe74 <__sanitizer_set_report_fd@@Base+0x65ac>  // b.pmore
   1fe4c:	nop
   1fe50:	and	x3, x2, #0xff
   1fe54:	ldrb	w2, [x1, #1]!
   1fe58:	add	x19, x19, x19, lsl #2
   1fe5c:	sub	w0, w2, #0x30
   1fe60:	add	x19, x3, x19, lsl #1
   1fe64:	and	w0, w0, #0xff
   1fe68:	sub	x19, x19, #0x30
   1fe6c:	cmp	w0, #0x9
   1fe70:	b.ls	1fe50 <__sanitizer_set_report_fd@@Base+0x6588>  // b.plast
   1fe74:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fe78:	ldr	x20, [x20, #4000]
   1fe7c:	ldr	x0, [x20]
   1fe80:	cbz	x0, 1feb8 <__sanitizer_set_report_fd@@Base+0x65f0>
   1fe84:	mul	x0, x19, x0
   1fe88:	ldr	x30, [sp, #16]
   1fe8c:	ldp	x19, x20, [sp], #176
   1fe90:	ret
   1fe94:	add	x1, sp, #0x20
   1fe98:	mov	w0, #0x0                   	// #0
   1fe9c:	bl	68e0 <getrusage@plt>
   1fea0:	mov	w1, w0
   1fea4:	mov	x0, #0x0                   	// #0
   1fea8:	cbnz	w1, 1fd9c <__sanitizer_set_report_fd@@Base+0x64d4>
   1feac:	ldr	x0, [sp, #64]
   1feb0:	lsl	x0, x0, #10
   1feb4:	b	1fd9c <__sanitizer_set_report_fd@@Base+0x64d4>
   1feb8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   1febc:	str	x0, [x20]
   1fec0:	mul	x0, x19, x0
   1fec4:	b	1fe88 <__sanitizer_set_report_fd@@Base+0x65c0>
   1fec8:	mov	x19, #0x0                   	// #0
   1fecc:	b	1fe74 <__sanitizer_set_report_fd@@Base+0x65ac>
   1fed0:	stp	x19, x30, [sp, #-144]!
   1fed4:	mov	x1, #0x80                  	// #128
   1fed8:	mov	w0, #0x0                   	// #0
   1fedc:	add	x19, sp, #0x10
   1fee0:	mov	x2, x19
   1fee4:	bl	66e0 <sched_getaffinity@plt>
   1fee8:	cbnz	w0, 1ff00 <__sanitizer_set_report_fd@@Base+0x6638>
   1feec:	mov	x1, x19
   1fef0:	mov	x0, #0x80                  	// #128
   1fef4:	bl	6aa0 <__sched_cpucount@plt>
   1fef8:	ldp	x19, x30, [sp], #144
   1fefc:	ret
   1ff00:	sxtw	x3, w0
   1ff04:	adrp	x2, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ff08:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   1ff0c:	add	x2, x2, #0xfe8
   1ff10:	add	x0, x0, #0xe20
   1ff14:	mov	x4, #0x0                   	// #0
   1ff18:	mov	w1, #0x2bb                 	// #699
   1ff1c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ff20:	ret
   1ff24:	nop
   1ff28:	mov	x2, x0
   1ff2c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   1ff30:	mov	w0, #0x6                   	// #6
   1ff34:	add	x1, x1, #0xdb8
   1ff38:	b	6af0 <syslog@plt>
   1ff3c:	nop
   1ff40:	ret
   1ff44:	nop
   1ff48:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ff4c:	ldr	x1, [x1, #4040]
   1ff50:	ldrb	w1, [x1, #49]
   1ff54:	cbnz	w1, 1ff5c <__sanitizer_set_report_fd@@Base+0x6694>
   1ff58:	ret
   1ff5c:	b	16580 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2f0>
   1ff60:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ff64:	str	x30, [sp, #-32]!
   1ff68:	ldr	x0, [x0, #3976]
   1ff6c:	cbz	x0, 1ff80 <__sanitizer_set_report_fd@@Base+0x66b8>
   1ff70:	ldr	x0, [x0]
   1ff74:	cbz	x0, 1ff80 <__sanitizer_set_report_fd@@Base+0x66b8>
   1ff78:	ldrb	w0, [x0]
   1ff7c:	cbnz	w0, 1ffa4 <__sanitizer_set_report_fd@@Base+0x66dc>
   1ff80:	add	x1, sp, #0x10
   1ff84:	mov	w0, #0x1                   	// #1
   1ff88:	bl	1dca8 <__sanitizer_set_report_fd@@Base+0x43e0>
   1ff8c:	ldp	x2, x1, [sp, #16]
   1ff90:	mov	x0, #0xca00                	// #51712
   1ff94:	movk	x0, #0x3b9a, lsl #16
   1ff98:	ldr	x30, [sp], #32
   1ff9c:	madd	x0, x2, x0, x1
   1ffa0:	ret
   1ffa4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ffa8:	add	x1, sp, #0x10
   1ffac:	ldr	x0, [x0, #3648]
   1ffb0:	cbz	x0, 1ffd4 <__sanitizer_set_report_fd@@Base+0x670c>
   1ffb4:	mov	w0, #0x1                   	// #1
   1ffb8:	bl	6920 <real_clock_gettime@plt>
   1ffbc:	ldp	x2, x1, [sp, #16]
   1ffc0:	mov	x0, #0xca00                	// #51712
   1ffc4:	movk	x0, #0x3b9a, lsl #16
   1ffc8:	ldr	x30, [sp], #32
   1ffcc:	madd	x0, x2, x0, x1
   1ffd0:	ret
   1ffd4:	mov	w0, #0x1                   	// #1
   1ffd8:	bl	6970 <clock_gettime@plt>
   1ffdc:	b	1ff8c <__sanitizer_set_report_fd@@Base+0x66c4>
   1ffe0:	cmp	w0, #0x2
   1ffe4:	b.eq	1fff8 <__sanitizer_set_report_fd@@Base+0x6730>  // b.none
   1ffe8:	cmp	w0, #0xa
   1ffec:	cset	x0, eq  // eq = none
   1fff0:	lsl	x0, x0, #4
   1fff4:	ret
   1fff8:	mov	x0, #0x4                   	// #4
   1fffc:	ret
   20000:	b	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20004:	nop
   20008:	stp	x19, x20, [sp, #-64]!
   2000c:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20010:	mov	x19, x0
   20014:	ldr	x20, [x20, #4000]
   20018:	stp	x21, x22, [sp, #16]
   2001c:	mov	x21, x1
   20020:	and	w22, w2, #0xff
   20024:	ldr	x0, [x20]
   20028:	str	x30, [sp, #32]
   2002c:	cbz	x0, 20094 <__sanitizer_set_report_fd@@Base+0x67cc>
   20030:	sub	x1, x0, #0x1
   20034:	tst	x0, x1
   20038:	b.ne	200a8 <__sanitizer_set_report_fd@@Base+0x67e0>  // b.any
   2003c:	add	x19, x19, x1
   20040:	neg	x0, x0
   20044:	and	x19, x19, x0
   20048:	mov	x5, #0x0                   	// #0
   2004c:	mov	w4, #0xffffffff            	// #-1
   20050:	mov	w3, #0x22                  	// #34
   20054:	mov	w2, #0x3                   	// #3
   20058:	mov	x1, x19
   2005c:	mov	x0, #0x0                   	// #0
   20060:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   20064:	add	x1, sp, #0x3c
   20068:	mov	x20, x0
   2006c:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20070:	tst	w0, #0xff
   20074:	b.ne	200b8 <__sanitizer_set_report_fd@@Base+0x67f0>  // b.any
   20078:	mov	x0, x19
   2007c:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   20080:	mov	x0, x20
   20084:	ldp	x21, x22, [sp, #16]
   20088:	ldr	x30, [sp, #32]
   2008c:	ldp	x19, x20, [sp], #64
   20090:	ret
   20094:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20098:	str	x0, [x20]
   2009c:	sub	x1, x0, #0x1
   200a0:	tst	x0, x1
   200a4:	b.eq	2003c <__sanitizer_set_report_fd@@Base+0x6774>  // b.none
   200a8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   200ac:	add	x0, x0, #0x6e8
   200b0:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   200b4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   200b8:	ldr	w3, [sp, #60]
   200bc:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   200c0:	mov	w4, w22
   200c4:	mov	x1, x21
   200c8:	mov	x0, x19
   200cc:	add	x2, x2, #0x70
   200d0:	bl	15760 <__sancov_default_options@@Base+0x2c90>
   200d4:	nop
   200d8:	cmp	x0, #0x0
   200dc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   200e0:	b.ne	200e8 <__sanitizer_set_report_fd@@Base+0x6820>  // b.any
   200e4:	ret
   200e8:	stp	x19, x20, [sp, #-32]!
   200ec:	mov	x19, x1
   200f0:	mov	x20, x0
   200f4:	str	x30, [sp, #16]
   200f8:	bl	1d9b0 <__sanitizer_set_report_fd@@Base+0x40e8>
   200fc:	mov	x1, #0x0                   	// #0
   20100:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20104:	tst	w0, #0xff
   20108:	b.ne	2011c <__sanitizer_set_report_fd@@Base+0x6854>  // b.any
   2010c:	mov	x0, x19
   20110:	ldr	x30, [sp, #16]
   20114:	ldp	x19, x20, [sp], #32
   20118:	b	15bb0 <__sancov_default_options@@Base+0x30e0>
   2011c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20120:	mov	x4, x20
   20124:	mov	x3, x19
   20128:	mov	x2, x19
   2012c:	ldr	x1, [x1, #4008]
   20130:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20134:	add	x0, x0, #0x80
   20138:	ldr	x1, [x1]
   2013c:	bl	22d00 <OnPrint@@Base+0x398>
   20140:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20144:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20148:	add	x2, x2, #0xc0
   2014c:	add	x0, x0, #0xe8
   20150:	mov	x4, #0x0                   	// #0
   20154:	mov	x3, #0x0                   	// #0
   20158:	mov	w1, #0x3c                  	// #60
   2015c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20160:	stp	x19, x20, [sp, #-48]!
   20164:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20168:	mov	x19, x0
   2016c:	ldr	x20, [x20, #4000]
   20170:	stp	x21, x30, [sp, #16]
   20174:	mov	x21, x1
   20178:	ldr	x0, [x20]
   2017c:	cbz	x0, 201e0 <__sanitizer_set_report_fd@@Base+0x6918>
   20180:	sub	x1, x0, #0x1
   20184:	tst	x0, x1
   20188:	b.ne	201f4 <__sanitizer_set_report_fd@@Base+0x692c>  // b.any
   2018c:	add	x19, x19, x1
   20190:	neg	x0, x0
   20194:	and	x19, x19, x0
   20198:	mov	x5, #0x0                   	// #0
   2019c:	mov	w4, #0xffffffff            	// #-1
   201a0:	mov	w3, #0x22                  	// #34
   201a4:	mov	w2, #0x3                   	// #3
   201a8:	mov	x1, x19
   201ac:	mov	x0, #0x0                   	// #0
   201b0:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   201b4:	add	x1, sp, #0x2c
   201b8:	mov	x20, x0
   201bc:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   201c0:	tst	w0, #0xff
   201c4:	b.ne	20204 <__sanitizer_set_report_fd@@Base+0x693c>  // b.any
   201c8:	mov	x0, x19
   201cc:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   201d0:	mov	x0, x20
   201d4:	ldp	x21, x30, [sp, #16]
   201d8:	ldp	x19, x20, [sp], #48
   201dc:	ret
   201e0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   201e4:	str	x0, [x20]
   201e8:	sub	x1, x0, #0x1
   201ec:	tst	x0, x1
   201f0:	b.eq	2018c <__sanitizer_set_report_fd@@Base+0x68c4>  // b.none
   201f4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   201f8:	add	x0, x0, #0x6e8
   201fc:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   20200:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20204:	ldr	w3, [sp, #44]
   20208:	mov	x0, #0x0                   	// #0
   2020c:	cmp	w3, #0xc
   20210:	b.eq	201d4 <__sanitizer_set_report_fd@@Base+0x690c>  // b.none
   20214:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20218:	mov	x1, x21
   2021c:	mov	x0, x19
   20220:	add	x2, x2, #0x70
   20224:	mov	w4, #0x0                   	// #0
   20228:	bl	15760 <__sancov_default_options@@Base+0x2c90>
   2022c:	nop
   20230:	stp	x19, x20, [sp, #-48]!
   20234:	mov	x19, x0
   20238:	sub	x0, x0, #0x1
   2023c:	stp	x21, x22, [sp, #16]
   20240:	tst	x0, x19
   20244:	stp	x23, x30, [sp, #32]
   20248:	b.ne	2033c <__sanitizer_set_report_fd@@Base+0x6a74>  // b.any
   2024c:	sub	x23, x1, #0x1
   20250:	mov	x21, x1
   20254:	tst	x1, x23
   20258:	b.ne	2035c <__sanitizer_set_report_fd@@Base+0x6a94>  // b.any
   2025c:	add	x22, x19, x21
   20260:	mov	x1, x2
   20264:	mov	x0, x22
   20268:	bl	20160 <__sanitizer_set_report_fd@@Base+0x6898>
   2026c:	mov	x20, x0
   20270:	cbz	x0, 2028c <__sanitizer_set_report_fd@@Base+0x69c4>
   20274:	add	x22, x22, x0
   20278:	tst	x0, x23
   2027c:	b.ne	202e0 <__sanitizer_set_report_fd@@Base+0x6a18>  // b.any
   20280:	add	x19, x20, x19
   20284:	cmp	x22, x19
   20288:	b.ne	202a0 <__sanitizer_set_report_fd@@Base+0x69d8>  // b.any
   2028c:	mov	x0, x20
   20290:	ldp	x21, x22, [sp, #16]
   20294:	ldp	x23, x30, [sp, #32]
   20298:	ldp	x19, x20, [sp], #48
   2029c:	ret
   202a0:	cbz	x19, 2028c <__sanitizer_set_report_fd@@Base+0x69c4>
   202a4:	sub	x22, x22, x19
   202a8:	mov	x0, x19
   202ac:	mov	x1, x22
   202b0:	bl	1d9b0 <__sanitizer_set_report_fd@@Base+0x40e8>
   202b4:	mov	x1, #0x0                   	// #0
   202b8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   202bc:	tst	w0, #0xff
   202c0:	b.ne	2037c <__sanitizer_set_report_fd@@Base+0x6ab4>  // b.any
   202c4:	mov	x0, x22
   202c8:	bl	15bb0 <__sancov_default_options@@Base+0x30e0>
   202cc:	mov	x0, x20
   202d0:	ldp	x21, x22, [sp, #16]
   202d4:	ldp	x23, x30, [sp, #32]
   202d8:	ldp	x19, x20, [sp], #48
   202dc:	ret
   202e0:	add	x23, x0, x23
   202e4:	neg	x21, x21
   202e8:	and	x21, x23, x21
   202ec:	subs	x23, x21, x0
   202f0:	b.ne	20308 <__sanitizer_set_report_fd@@Base+0x6a40>  // b.any
   202f4:	mov	x20, x21
   202f8:	add	x19, x20, x19
   202fc:	cmp	x22, x19
   20300:	b.eq	2028c <__sanitizer_set_report_fd@@Base+0x69c4>  // b.none
   20304:	b	202a0 <__sanitizer_set_report_fd@@Base+0x69d8>
   20308:	mov	x1, x23
   2030c:	bl	1d9b0 <__sanitizer_set_report_fd@@Base+0x40e8>
   20310:	mov	x1, #0x0                   	// #0
   20314:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20318:	tst	w0, #0xff
   2031c:	b.ne	203c0 <__sanitizer_set_report_fd@@Base+0x6af8>  // b.any
   20320:	mov	x20, x21
   20324:	mov	x0, x23
   20328:	add	x19, x20, x19
   2032c:	bl	15bb0 <__sancov_default_options@@Base+0x30e0>
   20330:	cmp	x22, x19
   20334:	b.eq	2028c <__sanitizer_set_report_fd@@Base+0x69c4>  // b.none
   20338:	b	202a0 <__sanitizer_set_report_fd@@Base+0x69d8>
   2033c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20340:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20344:	add	x2, x2, #0x128
   20348:	add	x0, x0, #0xe8
   2034c:	mov	x4, #0x0                   	// #0
   20350:	mov	x3, #0x0                   	// #0
   20354:	mov	w1, #0x55                  	// #85
   20358:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2035c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   20360:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20364:	add	x2, x2, #0xca0
   20368:	add	x0, x0, #0xe8
   2036c:	mov	x4, #0x0                   	// #0
   20370:	mov	x3, #0x0                   	// #0
   20374:	mov	w1, #0x56                  	// #86
   20378:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2037c:	mov	x4, x19
   20380:	mov	x3, x22
   20384:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20388:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2038c:	ldr	x1, [x1, #4008]
   20390:	mov	x2, x3
   20394:	add	x0, x0, #0x80
   20398:	ldr	x1, [x1]
   2039c:	bl	22d00 <OnPrint@@Base+0x398>
   203a0:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   203a4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   203a8:	add	x2, x2, #0xc0
   203ac:	add	x0, x0, #0xe8
   203b0:	mov	x4, #0x0                   	// #0
   203b4:	mov	x3, #0x0                   	// #0
   203b8:	mov	w1, #0x3c                  	// #60
   203bc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   203c0:	mov	x4, x20
   203c4:	mov	x3, x23
   203c8:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   203cc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   203d0:	b	2038c <__sanitizer_set_report_fd@@Base+0x6ac4>
   203d4:	nop
   203d8:	stp	x19, x20, [sp, #-48]!
   203dc:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   203e0:	mov	x19, x0
   203e4:	ldr	x20, [x20, #4000]
   203e8:	stp	x21, x30, [sp, #16]
   203ec:	mov	x21, x1
   203f0:	ldr	x2, [x20]
   203f4:	cbz	x2, 20454 <__sanitizer_set_report_fd@@Base+0x6b8c>
   203f8:	sub	x0, x2, #0x1
   203fc:	tst	x2, x0
   20400:	b.ne	2046c <__sanitizer_set_report_fd@@Base+0x6ba4>  // b.any
   20404:	add	x0, x19, x0
   20408:	neg	x1, x2
   2040c:	mov	x5, #0x0                   	// #0
   20410:	mov	w4, #0xffffffff            	// #-1
   20414:	mov	w3, #0x4022                	// #16418
   20418:	mov	w2, #0x3                   	// #3
   2041c:	and	x1, x0, x1
   20420:	mov	x0, #0x0                   	// #0
   20424:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   20428:	mov	x20, x0
   2042c:	add	x1, sp, #0x2c
   20430:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20434:	tst	w0, #0xff
   20438:	b.ne	2047c <__sanitizer_set_report_fd@@Base+0x6bb4>  // b.any
   2043c:	mov	x0, x19
   20440:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   20444:	mov	x0, x20
   20448:	ldp	x21, x30, [sp, #16]
   2044c:	ldp	x19, x20, [sp], #48
   20450:	ret
   20454:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20458:	mov	x2, x0
   2045c:	str	x0, [x20]
   20460:	sub	x0, x2, #0x1
   20464:	tst	x2, x0
   20468:	b.eq	20404 <__sanitizer_set_report_fd@@Base+0x6b3c>  // b.none
   2046c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20470:	add	x0, x0, #0x6e8
   20474:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   20478:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2047c:	ldr	w3, [sp, #44]
   20480:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20484:	mov	x1, x21
   20488:	mov	x0, x19
   2048c:	add	x2, x2, #0x148
   20490:	mov	w4, #0x0                   	// #0
   20494:	bl	15760 <__sancov_default_options@@Base+0x2c90>
   20498:	stp	x19, x20, [sp, #-96]!
   2049c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   204a0:	mov	x20, x1
   204a4:	ldr	x19, [x19, #4000]
   204a8:	stp	x21, x22, [sp, #16]
   204ac:	and	w22, w2, #0xff
   204b0:	mov	x21, x0
   204b4:	ldr	x2, [x19]
   204b8:	str	x30, [sp, #32]
   204bc:	cbz	x2, 20520 <__sanitizer_set_report_fd@@Base+0x6c58>
   204c0:	neg	x6, x2
   204c4:	sub	x3, x2, #0x1
   204c8:	and	x0, x6, x21
   204cc:	tst	x3, x2
   204d0:	b.ne	20540 <__sanitizer_set_report_fd@@Base+0x6c78>  // b.any
   204d4:	add	x1, x20, x3
   204d8:	mov	x5, #0x0                   	// #0
   204dc:	mov	w4, #0xffffffff            	// #-1
   204e0:	mov	w3, #0x32                  	// #50
   204e4:	mov	w2, #0x3                   	// #3
   204e8:	and	x1, x1, x6
   204ec:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   204f0:	mov	x19, x0
   204f4:	add	x1, sp, #0x34
   204f8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   204fc:	tst	w0, #0xff
   20500:	b.ne	20550 <__sanitizer_set_report_fd@@Base+0x6c88>  // b.any
   20504:	mov	x0, x20
   20508:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   2050c:	mov	x0, x19
   20510:	ldp	x21, x22, [sp, #16]
   20514:	ldr	x30, [sp, #32]
   20518:	ldp	x19, x20, [sp], #96
   2051c:	ret
   20520:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20524:	mov	x2, x0
   20528:	str	x0, [x19]
   2052c:	neg	x6, x2
   20530:	sub	x3, x2, #0x1
   20534:	and	x0, x6, x21
   20538:	tst	x3, x2
   2053c:	b.eq	204d4 <__sanitizer_set_report_fd@@Base+0x6c0c>  // b.none
   20540:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20544:	add	x0, x0, #0x6e8
   20548:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2054c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20550:	cbz	w22, 20568 <__sanitizer_set_report_fd@@Base+0x6ca0>
   20554:	ldr	w0, [sp, #52]
   20558:	cmp	w0, #0xc
   2055c:	b.ne	20568 <__sanitizer_set_report_fd@@Base+0x6ca0>  // b.any
   20560:	mov	x0, #0x0                   	// #0
   20564:	b	20510 <__sanitizer_set_report_fd@@Base+0x6c48>
   20568:	add	x19, sp, #0x38
   2056c:	mov	x3, x21
   20570:	mov	x1, #0x28                  	// #40
   20574:	mov	x0, x19
   20578:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2057c:	add	x2, x2, #0x160
   20580:	bl	22970 <OnPrint@@Base+0x8>
   20584:	ldr	w3, [sp, #52]
   20588:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2058c:	mov	x1, x19
   20590:	mov	x0, x20
   20594:	add	x2, x2, #0x70
   20598:	mov	w4, #0x0                   	// #0
   2059c:	bl	15760 <__sancov_default_options@@Base+0x2c90>
   205a0:	stp	x19, x20, [sp, #-80]!
   205a4:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   205a8:	mov	x19, x1
   205ac:	ldr	x20, [x20, #4000]
   205b0:	stp	x21, x30, [sp, #16]
   205b4:	mov	x21, x0
   205b8:	ldr	x2, [x20]
   205bc:	cbz	x2, 2061c <__sanitizer_set_report_fd@@Base+0x6d54>
   205c0:	neg	x6, x2
   205c4:	sub	x3, x2, #0x1
   205c8:	and	x0, x21, x6
   205cc:	tst	x3, x2
   205d0:	b.ne	2063c <__sanitizer_set_report_fd@@Base+0x6d74>  // b.any
   205d4:	add	x1, x19, x3
   205d8:	mov	x5, #0x0                   	// #0
   205dc:	mov	w4, #0xffffffff            	// #-1
   205e0:	mov	w3, #0x32                  	// #50
   205e4:	mov	w2, #0x3                   	// #3
   205e8:	and	x1, x1, x6
   205ec:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   205f0:	mov	x20, x0
   205f4:	add	x1, sp, #0x24
   205f8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   205fc:	tst	w0, #0xff
   20600:	b.ne	2064c <__sanitizer_set_report_fd@@Base+0x6d84>  // b.any
   20604:	mov	x0, x19
   20608:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   2060c:	mov	x0, x20
   20610:	ldp	x21, x30, [sp, #16]
   20614:	ldp	x19, x20, [sp], #80
   20618:	ret
   2061c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20620:	mov	x2, x0
   20624:	str	x0, [x20]
   20628:	neg	x6, x2
   2062c:	sub	x3, x2, #0x1
   20630:	and	x0, x21, x6
   20634:	tst	x3, x2
   20638:	b.eq	205d4 <__sanitizer_set_report_fd@@Base+0x6d0c>  // b.none
   2063c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20640:	add	x0, x0, #0x6e8
   20644:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   20648:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2064c:	add	x20, sp, #0x28
   20650:	mov	x3, x21
   20654:	mov	x1, #0x28                  	// #40
   20658:	mov	x0, x20
   2065c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20660:	add	x2, x2, #0x160
   20664:	bl	22970 <OnPrint@@Base+0x8>
   20668:	ldr	w3, [sp, #36]
   2066c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20670:	mov	x1, x20
   20674:	mov	x0, x19
   20678:	add	x2, x2, #0x70
   2067c:	mov	w4, #0x0                   	// #0
   20680:	bl	15760 <__sancov_default_options@@Base+0x2c90>
   20684:	nop
   20688:	stp	x19, x20, [sp, #-80]!
   2068c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20690:	mov	x20, x1
   20694:	ldr	x19, [x19, #4000]
   20698:	stp	x21, x30, [sp, #16]
   2069c:	mov	x21, x0
   206a0:	ldr	x2, [x19]
   206a4:	cbz	x2, 20704 <__sanitizer_set_report_fd@@Base+0x6e3c>
   206a8:	neg	x6, x2
   206ac:	sub	x3, x2, #0x1
   206b0:	and	x0, x21, x6
   206b4:	tst	x3, x2
   206b8:	b.ne	20724 <__sanitizer_set_report_fd@@Base+0x6e5c>  // b.any
   206bc:	add	x1, x20, x3
   206c0:	mov	x5, #0x0                   	// #0
   206c4:	mov	w4, #0xffffffff            	// #-1
   206c8:	mov	w3, #0x32                  	// #50
   206cc:	mov	w2, #0x3                   	// #3
   206d0:	and	x1, x1, x6
   206d4:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   206d8:	mov	x19, x0
   206dc:	add	x1, sp, #0x24
   206e0:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   206e4:	tst	w0, #0xff
   206e8:	b.ne	20734 <__sanitizer_set_report_fd@@Base+0x6e6c>  // b.any
   206ec:	mov	x0, x20
   206f0:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   206f4:	mov	x0, x19
   206f8:	ldp	x21, x30, [sp, #16]
   206fc:	ldp	x19, x20, [sp], #80
   20700:	ret
   20704:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20708:	mov	x2, x0
   2070c:	str	x0, [x19]
   20710:	neg	x6, x2
   20714:	sub	x3, x2, #0x1
   20718:	and	x0, x21, x6
   2071c:	tst	x3, x2
   20720:	b.eq	206bc <__sanitizer_set_report_fd@@Base+0x6df4>  // b.none
   20724:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20728:	add	x0, x0, #0x6e8
   2072c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   20730:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20734:	ldr	w0, [sp, #36]
   20738:	cmp	w0, #0xc
   2073c:	b.ne	20748 <__sanitizer_set_report_fd@@Base+0x6e80>  // b.any
   20740:	mov	x0, #0x0                   	// #0
   20744:	b	206f8 <__sanitizer_set_report_fd@@Base+0x6e30>
   20748:	add	x19, sp, #0x28
   2074c:	mov	x3, x21
   20750:	mov	x1, #0x28                  	// #40
   20754:	mov	x0, x19
   20758:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2075c:	add	x2, x2, #0x160
   20760:	bl	22970 <OnPrint@@Base+0x8>
   20764:	ldr	w3, [sp, #36]
   20768:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2076c:	mov	x1, x19
   20770:	mov	x0, x20
   20774:	add	x2, x2, #0x70
   20778:	mov	w4, #0x0                   	// #0
   2077c:	bl	15760 <__sancov_default_options@@Base+0x2c90>
   20780:	str	x30, [sp, #-16]!
   20784:	mov	w2, #0x0                   	// #0
   20788:	bl	1d9c0 <__sanitizer_set_report_fd@@Base+0x40f8>
   2078c:	cmp	w0, #0x0
   20790:	cset	w0, eq  // eq = none
   20794:	ldr	x30, [sp], #16
   20798:	ret
   2079c:	nop
   207a0:	str	x30, [sp, #-16]!
   207a4:	mov	w2, #0x1                   	// #1
   207a8:	bl	1d9c0 <__sanitizer_set_report_fd@@Base+0x40f8>
   207ac:	cmp	w0, #0x0
   207b0:	cset	w0, eq  // eq = none
   207b4:	ldr	x30, [sp], #16
   207b8:	ret
   207bc:	nop
   207c0:	ret
   207c4:	nop
   207c8:	stp	x19, x30, [sp, #-16]!
   207cc:	cmp	w1, #0x2
   207d0:	mov	x19, x2
   207d4:	b.hi	207e4 <__sanitizer_set_report_fd@@Base+0x6f1c>  // b.pmore
   207d8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   207dc:	add	x2, x2, #0x348
   207e0:	ldr	w3, [x2, w1, uxtw #2]
   207e4:	mov	w2, #0x1b0                 	// #432
   207e8:	mov	w1, w3
   207ec:	bl	1d9f8 <__sanitizer_set_report_fd@@Base+0x4130>
   207f0:	mov	x1, x19
   207f4:	mov	x19, x0
   207f8:	sxtw	x0, w0
   207fc:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20800:	tst	w0, #0xff
   20804:	csinv	w0, w19, wzr, eq  // eq = none
   20808:	ldp	x19, x30, [sp], #16
   2080c:	ret
   20810:	b	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   20814:	nop
   20818:	stp	x19, x20, [sp, #-32]!
   2081c:	mov	x20, x4
   20820:	mov	x19, x3
   20824:	str	x30, [sp, #16]
   20828:	bl	1da18 <__sanitizer_set_report_fd@@Base+0x4150>
   2082c:	mov	x1, x20
   20830:	mov	x20, x0
   20834:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20838:	tst	w0, #0xff
   2083c:	b.ne	20858 <__sanitizer_set_report_fd@@Base+0x6f90>  // b.any
   20840:	mov	w0, #0x1                   	// #1
   20844:	cbz	x19, 2084c <__sanitizer_set_report_fd@@Base+0x6f84>
   20848:	str	x20, [x19]
   2084c:	ldr	x30, [sp, #16]
   20850:	ldp	x19, x20, [sp], #32
   20854:	ret
   20858:	mov	w0, #0x0                   	// #0
   2085c:	ldr	x30, [sp, #16]
   20860:	ldp	x19, x20, [sp], #32
   20864:	ret
   20868:	stp	x19, x20, [sp, #-32]!
   2086c:	mov	x20, x4
   20870:	mov	x19, x3
   20874:	str	x30, [sp, #16]
   20878:	bl	1da40 <__sanitizer_set_report_fd@@Base+0x4178>
   2087c:	mov	x1, x20
   20880:	mov	x20, x0
   20884:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20888:	tst	w0, #0xff
   2088c:	b.ne	208a8 <__sanitizer_set_report_fd@@Base+0x6fe0>  // b.any
   20890:	mov	w0, #0x1                   	// #1
   20894:	cbz	x19, 2089c <__sanitizer_set_report_fd@@Base+0x6fd4>
   20898:	str	x20, [x19]
   2089c:	ldr	x30, [sp, #16]
   208a0:	ldp	x19, x20, [sp], #32
   208a4:	ret
   208a8:	mov	w0, #0x0                   	// #0
   208ac:	ldr	x30, [sp, #16]
   208b0:	ldp	x19, x20, [sp], #32
   208b4:	ret
   208b8:	stp	x19, x30, [sp, #-16]!
   208bc:	mov	x19, x2
   208c0:	bl	1db58 <__sanitizer_set_report_fd@@Base+0x4290>
   208c4:	mov	x1, x19
   208c8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   208cc:	and	w0, w0, #0xff
   208d0:	eor	w0, w0, #0x1
   208d4:	ldp	x19, x30, [sp], #16
   208d8:	ret
   208dc:	nop
   208e0:	stp	x19, x20, [sp, #-48]!
   208e4:	mov	w2, #0x1b0                 	// #432
   208e8:	stp	x21, x22, [sp, #16]
   208ec:	mov	x21, x1
   208f0:	mov	w1, #0x0                   	// #0
   208f4:	str	x30, [sp, #32]
   208f8:	bl	1d9f8 <__sanitizer_set_report_fd@@Base+0x4130>
   208fc:	mov	x1, #0x0                   	// #0
   20900:	mov	x20, x0
   20904:	sxtw	x0, w0
   20908:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   2090c:	tst	w0, #0xff
   20910:	b.ne	209a8 <__sanitizer_set_report_fd@@Base+0x70e0>  // b.any
   20914:	cmn	w20, #0x1
   20918:	b.eq	209a8 <__sanitizer_set_report_fd@@Base+0x70e0>  // b.none
   2091c:	mov	w0, w20
   20920:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x4218>
   20924:	mov	x19, x0
   20928:	cmn	x0, #0x1
   2092c:	b.eq	209c8 <__sanitizer_set_report_fd@@Base+0x7100>  // b.none
   20930:	cbz	x0, 209e8 <__sanitizer_set_report_fd@@Base+0x7120>
   20934:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20938:	ldr	x22, [x22, #4000]
   2093c:	ldr	x0, [x22]
   20940:	cbz	x0, 2099c <__sanitizer_set_report_fd@@Base+0x70d4>
   20944:	sub	x1, x0, #0x1
   20948:	tst	x0, x1
   2094c:	b.ne	20a08 <__sanitizer_set_report_fd@@Base+0x7140>  // b.any
   20950:	add	x19, x19, x1
   20954:	neg	x0, x0
   20958:	and	x1, x19, x0
   2095c:	mov	w4, w20
   20960:	str	x1, [x21]
   20964:	mov	x5, #0x0                   	// #0
   20968:	mov	w3, #0x2                   	// #2
   2096c:	mov	w2, #0x1                   	// #1
   20970:	mov	x0, #0x0                   	// #0
   20974:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   20978:	mov	x1, #0x0                   	// #0
   2097c:	mov	x19, x0
   20980:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20984:	tst	w0, #0xff
   20988:	csel	x0, x19, xzr, eq  // eq = none
   2098c:	ldp	x21, x22, [sp, #16]
   20990:	ldr	x30, [sp, #32]
   20994:	ldp	x19, x20, [sp], #48
   20998:	ret
   2099c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   209a0:	str	x0, [x22]
   209a4:	b	20944 <__sanitizer_set_report_fd@@Base+0x707c>
   209a8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   209ac:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   209b0:	add	x2, x2, #0x178
   209b4:	add	x0, x0, #0xe8
   209b8:	mov	x4, #0x0                   	// #0
   209bc:	mov	x3, #0x0                   	// #0
   209c0:	mov	w1, #0xc9                  	// #201
   209c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   209c8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   209cc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   209d0:	add	x2, x2, #0x198
   209d4:	add	x0, x0, #0xe8
   209d8:	mov	x4, x19
   209dc:	mov	x3, x19
   209e0:	mov	w1, #0xcb                  	// #203
   209e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   209e8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   209ec:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   209f0:	add	x2, x2, #0x1b8
   209f4:	add	x0, x0, #0xe8
   209f8:	mov	x4, #0x0                   	// #0
   209fc:	mov	x3, #0x0                   	// #0
   20a00:	mov	w1, #0xcc                  	// #204
   20a04:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20a08:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20a0c:	add	x0, x0, #0x6e8
   20a10:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   20a14:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20a18:	stp	x19, x20, [sp, #-64]!
   20a1c:	cmp	x0, #0x0
   20a20:	mov	x5, x3
   20a24:	mov	w4, w2
   20a28:	stp	x21, x22, [sp, #16]
   20a2c:	mov	x21, x3
   20a30:	mov	w3, #0x11                  	// #17
   20a34:	csinc	w3, w3, wzr, ne  // ne = any
   20a38:	mov	w20, w2
   20a3c:	mov	w2, #0x3                   	// #3
   20a40:	mov	x22, x1
   20a44:	str	x30, [sp, #32]
   20a48:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   20a4c:	mov	x19, x0
   20a50:	add	x1, sp, #0x3c
   20a54:	str	wzr, [sp, #60]
   20a58:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20a5c:	tst	w0, #0xff
   20a60:	b.ne	20a78 <__sanitizer_set_report_fd@@Base+0x71b0>  // b.any
   20a64:	mov	x0, x19
   20a68:	ldp	x21, x22, [sp, #16]
   20a6c:	ldr	x30, [sp, #32]
   20a70:	ldp	x19, x20, [sp], #64
   20a74:	ret
   20a78:	ldr	w5, [sp, #60]
   20a7c:	mov	x4, x19
   20a80:	mov	x3, x22
   20a84:	mov	x2, x21
   20a88:	mov	w1, w20
   20a8c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20a90:	add	x0, x0, #0x1d0
   20a94:	bl	22c78 <OnPrint@@Base+0x310>
   20a98:	mov	x0, #0x0                   	// #0
   20a9c:	b	20a68 <__sanitizer_set_report_fd@@Base+0x71a0>
   20aa0:	stp	x19, x20, [sp, #-160]!
   20aa4:	add	x20, sp, #0x30
   20aa8:	stp	x21, x22, [sp, #16]
   20aac:	mov	x21, x0
   20ab0:	mov	x22, x1
   20ab4:	mov	x0, x20
   20ab8:	mov	w1, #0x1                   	// #1
   20abc:	stp	x23, x30, [sp, #32]
   20ac0:	bl	22fe8 <OnPrint@@Base+0x680>
   20ac4:	stp	xzr, xzr, [sp, #104]
   20ac8:	add	x23, sp, #0x50
   20acc:	cmp	x21, x22
   20ad0:	str	xzr, [sp, #152]
   20ad4:	b.hi	20b3c <__sanitizer_set_report_fd@@Base+0x7274>  // b.pmore
   20ad8:	mov	x1, x23
   20adc:	mov	x0, x20
   20ae0:	bl	23890 <OnPrint@@Base+0xf28>
   20ae4:	tst	w0, #0xff
   20ae8:	b.eq	20bd0 <__sanitizer_set_report_fd@@Base+0x7308>  // b.none
   20aec:	ldp	x3, x2, [sp, #80]
   20af0:	cmp	x3, x2
   20af4:	b.eq	20ad8 <__sanitizer_set_report_fd@@Base+0x7210>  // b.none
   20af8:	cbz	x2, 20b8c <__sanitizer_set_report_fd@@Base+0x72c4>
   20afc:	sub	x2, x2, #0x1
   20b00:	cmp	x3, x2
   20b04:	b.hi	20bac <__sanitizer_set_report_fd@@Base+0x72e4>  // b.pmore
   20b08:	cmp	x22, x3
   20b0c:	cset	w19, cc  // cc = lo, ul, last
   20b10:	cmp	x21, x2
   20b14:	cset	w0, hi  // hi = pmore
   20b18:	orr	w19, w19, w0
   20b1c:	cbnz	w19, 20ad8 <__sanitizer_set_report_fd@@Base+0x7210>
   20b20:	mov	x0, x20
   20b24:	bl	23150 <OnPrint@@Base+0x7e8>
   20b28:	mov	w0, w19
   20b2c:	ldp	x21, x22, [sp, #16]
   20b30:	ldp	x23, x30, [sp, #32]
   20b34:	ldp	x19, x20, [sp], #160
   20b38:	ret
   20b3c:	mov	x1, x23
   20b40:	mov	x0, x20
   20b44:	bl	23890 <OnPrint@@Base+0xf28>
   20b48:	tst	w0, #0xff
   20b4c:	b.eq	20bd0 <__sanitizer_set_report_fd@@Base+0x7308>  // b.none
   20b50:	ldp	x3, x2, [sp, #80]
   20b54:	cmp	x3, x2
   20b58:	b.eq	20b3c <__sanitizer_set_report_fd@@Base+0x7274>  // b.none
   20b5c:	cbz	x2, 20b8c <__sanitizer_set_report_fd@@Base+0x72c4>
   20b60:	sub	x2, x2, #0x1
   20b64:	cmp	x3, x2
   20b68:	b.hi	20bac <__sanitizer_set_report_fd@@Base+0x72e4>  // b.pmore
   20b6c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20b70:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20b74:	add	x2, x2, #0x250
   20b78:	add	x0, x0, #0xe8
   20b7c:	mov	x4, #0x0                   	// #0
   20b80:	mov	x3, #0x0                   	// #0
   20b84:	mov	w1, #0xe2                  	// #226
   20b88:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20b8c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20b90:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20b94:	add	x2, x2, #0x210
   20b98:	add	x0, x0, #0xe8
   20b9c:	mov	x4, #0x0                   	// #0
   20ba0:	mov	x3, #0x0                   	// #0
   20ba4:	mov	w1, #0xef                  	// #239
   20ba8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20bac:	cmp	x2, x3
   20bb0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20bb4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20bb8:	cset	x3, cs  // cs = hs, nlast
   20bbc:	add	x2, x2, #0x230
   20bc0:	add	x0, x0, #0xe8
   20bc4:	mov	x4, #0x0                   	// #0
   20bc8:	mov	w1, #0xe1                  	// #225
   20bcc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20bd0:	mov	x0, x20
   20bd4:	mov	w19, #0x1                   	// #1
   20bd8:	bl	23150 <OnPrint@@Base+0x7e8>
   20bdc:	mov	w0, w19
   20be0:	ldp	x21, x22, [sp, #16]
   20be4:	ldp	x23, x30, [sp, #32]
   20be8:	ldp	x19, x20, [sp], #160
   20bec:	ret
   20bf0:	stp	x19, x20, [sp, #-160]!
   20bf4:	mov	w1, #0x1                   	// #1
   20bf8:	adrp	x20, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20bfc:	add	x19, sp, #0x30
   20c00:	stp	x21, x22, [sp, #16]
   20c04:	mov	x0, x19
   20c08:	str	x30, [sp, #32]
   20c0c:	bl	22fe8 <OnPrint@@Base+0x680>
   20c10:	mov	w2, #0x0                   	// #0
   20c14:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20c18:	mov	x0, #0xfff                 	// #4095
   20c1c:	add	x1, x1, #0x270
   20c20:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   20c24:	add	x21, sp, #0x50
   20c28:	mov	x1, #0xfff                 	// #4095
   20c2c:	mov	x22, x0
   20c30:	add	x20, x20, #0x2a0
   20c34:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20c38:	add	x0, x0, #0x280
   20c3c:	stp	x22, x1, [sp, #104]
   20c40:	str	xzr, [sp, #152]
   20c44:	bl	22d00 <OnPrint@@Base+0x398>
   20c48:	b	20c5c <__sanitizer_set_report_fd@@Base+0x7394>
   20c4c:	ldp	x1, x2, [sp, #80]
   20c50:	mov	x0, x20
   20c54:	ldr	x3, [sp, #104]
   20c58:	bl	22c78 <OnPrint@@Base+0x310>
   20c5c:	mov	x1, x21
   20c60:	mov	x0, x19
   20c64:	bl	23890 <OnPrint@@Base+0xf28>
   20c68:	tst	w0, #0xff
   20c6c:	b.ne	20c4c <__sanitizer_set_report_fd@@Base+0x7384>  // b.any
   20c70:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20c74:	add	x0, x0, #0x2b0
   20c78:	bl	22d00 <OnPrint@@Base+0x398>
   20c7c:	cbnz	x22, 20c98 <__sanitizer_set_report_fd@@Base+0x73d0>
   20c80:	mov	x0, x19
   20c84:	bl	23150 <OnPrint@@Base+0x7e8>
   20c88:	ldp	x21, x22, [sp, #16]
   20c8c:	ldr	x30, [sp, #32]
   20c90:	ldp	x19, x20, [sp], #160
   20c94:	ret
   20c98:	mov	x1, #0xfff                 	// #4095
   20c9c:	mov	x0, x22
   20ca0:	bl	1d9b0 <__sanitizer_set_report_fd@@Base+0x40e8>
   20ca4:	mov	x1, #0x0                   	// #0
   20ca8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20cac:	tst	w0, #0xff
   20cb0:	b.ne	20cd4 <__sanitizer_set_report_fd@@Base+0x740c>  // b.any
   20cb4:	mov	x0, #0xfff                 	// #4095
   20cb8:	bl	15bb0 <__sancov_default_options@@Base+0x30e0>
   20cbc:	mov	x0, x19
   20cc0:	bl	23150 <OnPrint@@Base+0x7e8>
   20cc4:	ldp	x21, x22, [sp, #16]
   20cc8:	ldr	x30, [sp, #32]
   20ccc:	ldp	x19, x20, [sp], #160
   20cd0:	ret
   20cd4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20cd8:	mov	x3, #0xfff                 	// #4095
   20cdc:	mov	x4, x22
   20ce0:	mov	x2, x3
   20ce4:	ldr	x1, [x1, #4008]
   20ce8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20cec:	add	x0, x0, #0x80
   20cf0:	ldr	x1, [x1]
   20cf4:	bl	22d00 <OnPrint@@Base+0x398>
   20cf8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20cfc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20d00:	add	x2, x2, #0xc0
   20d04:	add	x0, x0, #0xe8
   20d08:	mov	x4, #0x0                   	// #0
   20d0c:	mov	x3, #0x0                   	// #0
   20d10:	mov	w1, #0x3c                  	// #60
   20d14:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20d18:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20d1c:	add	x0, x0, #0x2d0
   20d20:	b	1dcb8 <__sanitizer_set_report_fd@@Base+0x43f0>
   20d24:	nop
   20d28:	and	w0, w0, #0xff
   20d2c:	cmp	w0, #0x2f
   20d30:	cset	w0, eq  // eq = none
   20d34:	ret
   20d38:	cbz	x0, 20d4c <__sanitizer_set_report_fd@@Base+0x7484>
   20d3c:	ldrb	w0, [x0]
   20d40:	cmp	w0, #0x2f
   20d44:	cset	w0, eq  // eq = none
   20d48:	ret
   20d4c:	mov	w0, #0x0                   	// #0
   20d50:	ret
   20d54:	nop
   20d58:	stp	x19, x20, [sp, #-48]!
   20d5c:	mov	x19, x0
   20d60:	mov	x20, x2
   20d64:	stp	x21, x22, [sp, #16]
   20d68:	mov	x22, x1
   20d6c:	mov	w1, #0x1                   	// #1
   20d70:	ldr	x21, [x0]
   20d74:	str	x30, [sp, #32]
   20d78:	ldxrb	w0, [x21]
   20d7c:	stxrb	w2, w1, [x21]
   20d80:	cbnz	w2, 20d78 <__sanitizer_set_report_fd@@Base+0x74b0>
   20d84:	dmb	ish
   20d88:	tst	w0, #0xff
   20d8c:	b.eq	20d98 <__sanitizer_set_report_fd@@Base+0x74d0>  // b.none
   20d90:	mov	x0, x21
   20d94:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   20d98:	mov	x0, x19
   20d9c:	bl	18d00 <__sanitizer_cov_dump@@Base+0x1e80>
   20da0:	ldr	w0, [x19, #8]
   20da4:	mov	x2, x20
   20da8:	mov	x1, x22
   20dac:	bl	1da40 <__sanitizer_set_report_fd@@Base+0x4178>
   20db0:	cmp	x0, x20
   20db4:	b.ne	20dd0 <__sanitizer_set_report_fd@@Base+0x7508>  // b.any
   20db8:	dmb	ish
   20dbc:	strb	wzr, [x21]
   20dc0:	ldp	x21, x22, [sp, #16]
   20dc4:	ldr	x30, [sp, #32]
   20dc8:	ldp	x19, x20, [sp], #48
   20dcc:	ret
   20dd0:	ldr	w20, [x19, #8]
   20dd4:	adrp	x19, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20dd8:	add	x19, x19, #0x2d8
   20ddc:	mov	x0, x19
   20de0:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   20de4:	mov	x1, x19
   20de8:	mov	x2, x0
   20dec:	mov	w0, w20
   20df0:	bl	1da40 <__sanitizer_set_report_fd@@Base+0x4178>
   20df4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20df8:	stp	x19, x20, [sp, #-192]!
   20dfc:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20e00:	add	x20, sp, #0x50
   20e04:	stp	x21, x22, [sp, #16]
   20e08:	mov	x22, x0
   20e0c:	mov	x0, x20
   20e10:	stp	x23, x24, [sp, #32]
   20e14:	mov	x24, x1
   20e18:	mov	x23, x2
   20e1c:	mov	w1, #0x0                   	// #0
   20e20:	stp	x25, x26, [sp, #48]
   20e24:	str	x30, [sp, #64]
   20e28:	bl	22fe8 <OnPrint@@Base+0x680>
   20e2c:	ldr	x21, [x19, #4000]
   20e30:	ldr	x3, [x21]
   20e34:	cbz	x3, 20f38 <__sanitizer_set_report_fd@@Base+0x7670>
   20e38:	sub	x0, x3, #0x1
   20e3c:	tst	x0, x3
   20e40:	b.ne	20fa4 <__sanitizer_set_report_fd@@Base+0x76dc>  // b.any
   20e44:	add	x25, x3, #0xfff
   20e48:	neg	x3, x3
   20e4c:	and	x25, x25, x3
   20e50:	mov	w2, #0x0                   	// #0
   20e54:	mov	x0, x25
   20e58:	adrp	x21, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20e5c:	add	x1, x21, #0x700
   20e60:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   20e64:	mov	x2, #0x0                   	// #0
   20e68:	mov	x26, x0
   20e6c:	mov	x1, #0x0                   	// #0
   20e70:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   20e74:	cmp	x25, #0xfff
   20e78:	b.ls	20f48 <__sanitizer_set_report_fd@@Base+0x7680>  // b.plast
   20e7c:	mov	x0, x26
   20e80:	mov	x2, #0x1000                	// #4096
   20e84:	mov	w1, #0x0                   	// #0
   20e88:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   20e8c:	strb	wzr, [x26]
   20e90:	mov	x0, #0x1000                	// #4096
   20e94:	add	x21, sp, #0x70
   20e98:	stp	x26, x0, [sp, #136]
   20e9c:	str	xzr, [sp, #184]
   20ea0:	b	20eac <__sanitizer_set_report_fd@@Base+0x75e4>
   20ea4:	ldr	x3, [sp, #152]
   20ea8:	tbnz	w3, #2, 20ee8 <__sanitizer_set_report_fd@@Base+0x7620>
   20eac:	mov	x1, x21
   20eb0:	mov	x0, x20
   20eb4:	bl	23890 <OnPrint@@Base+0xf28>
   20eb8:	ands	w19, w0, #0xff
   20ebc:	b.ne	20ea4 <__sanitizer_set_report_fd@@Base+0x75dc>  // b.any
   20ec0:	cbnz	x25, 20f10 <__sanitizer_set_report_fd@@Base+0x7648>
   20ec4:	mov	x0, x20
   20ec8:	bl	23150 <OnPrint@@Base+0x7e8>
   20ecc:	mov	w0, w19
   20ed0:	ldp	x21, x22, [sp, #16]
   20ed4:	ldp	x23, x24, [sp, #32]
   20ed8:	ldp	x25, x26, [sp, #48]
   20edc:	ldr	x30, [sp, #64]
   20ee0:	ldp	x19, x20, [sp], #192
   20ee4:	ret
   20ee8:	ldr	x1, [sp, #136]
   20eec:	mov	x0, x22
   20ef0:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   20ef4:	cbnz	w0, 20eac <__sanitizer_set_report_fd@@Base+0x75e4>
   20ef8:	ldr	x0, [sp, #112]
   20efc:	str	x0, [x24]
   20f00:	ldr	x0, [sp, #120]
   20f04:	str	x0, [x23]
   20f08:	cbz	x25, 20ec4 <__sanitizer_set_report_fd@@Base+0x75fc>
   20f0c:	nop
   20f10:	mov	x1, x25
   20f14:	mov	x0, x26
   20f18:	bl	1d9b0 <__sanitizer_set_report_fd@@Base+0x40e8>
   20f1c:	mov	x1, #0x0                   	// #0
   20f20:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20f24:	tst	w0, #0xff
   20f28:	b.ne	20fdc <__sanitizer_set_report_fd@@Base+0x7714>  // b.any
   20f2c:	mov	x0, x25
   20f30:	bl	15bb0 <__sancov_default_options@@Base+0x30e0>
   20f34:	b	20ec4 <__sanitizer_set_report_fd@@Base+0x75fc>
   20f38:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   20f3c:	mov	x3, x0
   20f40:	str	x0, [x21]
   20f44:	b	20e38 <__sanitizer_set_report_fd@@Base+0x7570>
   20f48:	ldr	x19, [x19, #4000]
   20f4c:	ldr	x0, [x19]
   20f50:	cbz	x0, 21020 <__sanitizer_set_report_fd@@Base+0x7758>
   20f54:	sub	x1, x0, #0x1
   20f58:	tst	x1, x0
   20f5c:	b.ne	20fa4 <__sanitizer_set_report_fd@@Base+0x76dc>  // b.any
   20f60:	add	x19, x0, #0xfff
   20f64:	neg	x0, x0
   20f68:	and	x19, x19, x0
   20f6c:	add	x1, x21, #0x700
   20f70:	mov	w2, #0x0                   	// #0
   20f74:	mov	x0, x19
   20f78:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   20f7c:	mov	x21, x0
   20f80:	mov	x1, x26
   20f84:	mov	x2, #0x0                   	// #0
   20f88:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   20f8c:	cmp	x26, #0x0
   20f90:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   20f94:	b.ne	20fb4 <__sanitizer_set_report_fd@@Base+0x76ec>  // b.any
   20f98:	mov	x25, x19
   20f9c:	mov	x26, x21
   20fa0:	b	20e7c <__sanitizer_set_report_fd@@Base+0x75b4>
   20fa4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   20fa8:	add	x0, x0, #0x6e8
   20fac:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   20fb0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20fb4:	mov	x1, x25
   20fb8:	mov	x0, x26
   20fbc:	bl	1d9b0 <__sanitizer_set_report_fd@@Base+0x40e8>
   20fc0:	mov	x1, #0x0                   	// #0
   20fc4:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   20fc8:	tst	w0, #0xff
   20fcc:	b.ne	20fdc <__sanitizer_set_report_fd@@Base+0x7714>  // b.any
   20fd0:	mov	x0, x25
   20fd4:	bl	15bb0 <__sancov_default_options@@Base+0x30e0>
   20fd8:	b	20f98 <__sanitizer_set_report_fd@@Base+0x76d0>
   20fdc:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20fe0:	mov	x4, x26
   20fe4:	mov	x3, x25
   20fe8:	mov	x2, x25
   20fec:	ldr	x1, [x1, #4008]
   20ff0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   20ff4:	add	x0, x0, #0x80
   20ff8:	ldr	x1, [x1]
   20ffc:	bl	22d00 <OnPrint@@Base+0x398>
   21000:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21004:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21008:	add	x2, x2, #0xc0
   2100c:	add	x0, x0, #0xe8
   21010:	mov	x4, #0x0                   	// #0
   21014:	mov	x3, #0x0                   	// #0
   21018:	mov	w1, #0x3c                  	// #60
   2101c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21020:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   21024:	str	x0, [x19]
   21028:	b	20f54 <__sanitizer_set_report_fd@@Base+0x768c>
   2102c:	nop
   21030:	ldr	x0, [x0]
   21034:	ldr	x0, [x0, #16]
   21038:	ret
   2103c:	nop
   21040:	ldr	x0, [x0]
   21044:	ldr	w0, [x0]
   21048:	cmp	w0, #0xb
   2104c:	cset	w0, eq  // eq = none
   21050:	ret
   21054:	nop
   21058:	ldr	x0, [x0]
   2105c:	ldr	w0, [x0]
   21060:	ret
   21064:	nop
   21068:	ldr	x0, [x0]
   2106c:	ldr	w0, [x0]
   21070:	cmp	w0, #0x7
   21074:	b.eq	210cc <__sanitizer_set_report_fd@@Base+0x7804>  // b.none
   21078:	b.le	21098 <__sanitizer_set_report_fd@@Base+0x77d0>
   2107c:	cmp	w0, #0x8
   21080:	b.eq	210b4 <__sanitizer_set_report_fd@@Base+0x77ec>  // b.none
   21084:	cmp	w0, #0xb
   21088:	b.ne	210d8 <__sanitizer_set_report_fd@@Base+0x7810>  // b.any
   2108c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21090:	add	x0, x0, #0x340
   21094:	ret
   21098:	cmp	w0, #0x4
   2109c:	b.eq	210c0 <__sanitizer_set_report_fd@@Base+0x77f8>  // b.none
   210a0:	cmp	w0, #0x6
   210a4:	b.ne	210d8 <__sanitizer_set_report_fd@@Base+0x7810>  // b.any
   210a8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   210ac:	add	x0, x0, #0x338
   210b0:	ret
   210b4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   210b8:	add	x0, x0, #0x330
   210bc:	ret
   210c0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   210c4:	add	x0, x0, #0x328
   210c8:	ret
   210cc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   210d0:	add	x0, x0, #0x320
   210d4:	ret
   210d8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   210dc:	add	x0, x0, #0x310
   210e0:	ret
   210e4:	nop
   210e8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   210ec:	stp	x19, x30, [sp, #-16]!
   210f0:	ldr	x0, [x0, #4008]
   210f4:	ldr	x19, [x0]
   210f8:	bl	6ac0 <__errno_location@plt>
   210fc:	mov	x2, x0
   21100:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21104:	mov	x1, x19
   21108:	add	x0, x0, #0x358
   2110c:	ldr	w2, [x2]
   21110:	bl	22d00 <OnPrint@@Base+0x398>
   21114:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21118:	stp	x19, x20, [sp, #-192]!
   2111c:	mov	x19, x1
   21120:	stp	x21, x30, [sp, #16]
   21124:	mov	w21, w0
   21128:	bl	1ef78 <__sanitizer_set_report_fd@@Base+0x56b0>
   2112c:	cbnz	w0, 2113c <__sanitizer_set_report_fd@@Base+0x7874>
   21130:	ldp	x21, x30, [sp, #16]
   21134:	ldp	x19, x20, [sp], #192
   21138:	ret
   2113c:	add	x20, sp, #0x28
   21140:	mov	x2, #0x98                  	// #152
   21144:	mov	w1, #0x0                   	// #0
   21148:	mov	x0, x20
   2114c:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   21150:	str	x19, [sp, #40]
   21154:	adrp	x4, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21158:	mov	w5, #0x4                   	// #4
   2115c:	mov	w3, #0x4                   	// #4
   21160:	movk	w5, #0x4000, lsl #16
   21164:	ldr	x4, [x4, #4040]
   21168:	movk	w3, #0x4800, lsl #16
   2116c:	mov	x1, x20
   21170:	mov	w0, w21
   21174:	mov	x2, #0x0                   	// #0
   21178:	ldrb	w4, [x4, #97]
   2117c:	cmp	w4, #0x0
   21180:	csel	w3, w3, w5, ne  // ne = any
   21184:	str	w3, [sp, #176]
   21188:	bl	1f690 <__sanitizer_set_report_fd@@Base+0x5dc8>
   2118c:	sxtw	x4, w0
   21190:	cbnz	w0, 211c0 <__sanitizer_set_report_fd@@Base+0x78f8>
   21194:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21198:	ldr	x0, [x0, #3680]
   2119c:	ldr	w0, [x0]
   211a0:	cbz	w0, 21130 <__sanitizer_set_report_fd@@Base+0x7868>
   211a4:	mov	w1, w21
   211a8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   211ac:	add	x0, x0, #0x408
   211b0:	bl	22d00 <OnPrint@@Base+0x398>
   211b4:	ldp	x21, x30, [sp, #16]
   211b8:	ldp	x19, x20, [sp], #192
   211bc:	ret
   211c0:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   211c4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   211c8:	add	x2, x2, #0x380
   211cc:	add	x0, x0, #0x3c0
   211d0:	mov	x3, #0x0                   	// #0
   211d4:	mov	w1, #0xd2                  	// #210
   211d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   211dc:	nop
   211e0:	b	6c60 <getuid@plt>
   211e4:	nop
   211e8:	b	6c50 <pthread_self@plt>
   211ec:	nop
   211f0:	stp	x19, x20, [sp, #-32]!
   211f4:	mov	x19, x0
   211f8:	mov	x20, x1
   211fc:	stp	x21, x30, [sp, #16]
   21200:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21204:	ldr	x21, [x21, #4000]
   21208:	ldr	x2, [x21]
   2120c:	cbz	x2, 21240 <__sanitizer_set_report_fd@@Base+0x7978>
   21210:	sub	x0, x2, #0x1
   21214:	tst	x2, x0
   21218:	b.ne	21258 <__sanitizer_set_report_fd@@Base+0x7990>  // b.any
   2121c:	neg	x2, x2
   21220:	add	x0, x19, x0
   21224:	and	x20, x20, x2
   21228:	and	x0, x0, x2
   2122c:	cmp	x20, x0
   21230:	b.hi	21268 <__sanitizer_set_report_fd@@Base+0x79a0>  // b.pmore
   21234:	ldp	x21, x30, [sp, #16]
   21238:	ldp	x19, x20, [sp], #32
   2123c:	ret
   21240:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   21244:	mov	x2, x0
   21248:	str	x0, [x21]
   2124c:	sub	x0, x2, #0x1
   21250:	tst	x2, x0
   21254:	b.eq	2121c <__sanitizer_set_report_fd@@Base+0x7954>  // b.none
   21258:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2125c:	add	x0, x0, #0x6e8
   21260:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   21264:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21268:	sub	x1, x20, x0
   2126c:	mov	w2, #0x4                   	// #4
   21270:	ldp	x21, x30, [sp, #16]
   21274:	ldp	x19, x20, [sp], #32
   21278:	b	6a70 <madvise@plt>
   2127c:	nop
   21280:	str	x30, [sp, #-16]!
   21284:	mov	w2, #0xf                   	// #15
   21288:	bl	6a70 <madvise@plt>
   2128c:	cmp	w0, #0x0
   21290:	cset	w0, eq  // eq = none
   21294:	ldr	x30, [sp], #16
   21298:	ret
   2129c:	nop
   212a0:	str	x30, [sp, #-16]!
   212a4:	mov	w2, #0x10                  	// #16
   212a8:	bl	6a70 <madvise@plt>
   212ac:	cmp	w0, #0x0
   212b0:	cset	w0, eq  // eq = none
   212b4:	ldr	x30, [sp], #16
   212b8:	ret
   212bc:	nop
   212c0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   212c4:	ldr	x0, [x0, #4040]
   212c8:	ldrb	w0, [x0, #178]
   212cc:	cbnz	w0, 212d4 <__sanitizer_set_report_fd@@Base+0x7a0c>
   212d0:	ret
   212d4:	str	x30, [sp, #-32]!
   212d8:	mov	w0, #0x4                   	// #4
   212dc:	str	xzr, [sp, #16]
   212e0:	add	x1, sp, #0x10
   212e4:	str	xzr, [sp, #24]
   212e8:	bl	6ba0 <setrlimit@plt>
   212ec:	cbnz	w0, 212f8 <__sanitizer_set_report_fd@@Base+0x7a30>
   212f0:	ldr	x30, [sp], #32
   212f4:	ret
   212f8:	bl	210e8 <__sanitizer_set_report_fd@@Base+0x7820>
   212fc:	nop
   21300:	str	x30, [sp, #-32]!
   21304:	mov	w0, #0x3                   	// #3
   21308:	add	x1, sp, #0x10
   2130c:	bl	6cb0 <getrlimit@plt>
   21310:	cbnz	w0, 21328 <__sanitizer_set_report_fd@@Base+0x7a60>
   21314:	ldr	x0, [sp, #16]
   21318:	ldr	x30, [sp], #32
   2131c:	cmn	x0, #0x1
   21320:	cset	w0, eq  // eq = none
   21324:	ret
   21328:	sxtw	x4, w0
   2132c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21330:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21334:	add	x2, x2, #0x430
   21338:	add	x0, x0, #0x3c0
   2133c:	mov	x3, #0x0                   	// #0
   21340:	mov	w1, #0x5a                  	// #90
   21344:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21348:	str	x30, [sp, #-32]!
   2134c:	mov	w0, #0x3                   	// #3
   21350:	add	x1, sp, #0x10
   21354:	bl	6cb0 <getrlimit@plt>
   21358:	cbnz	w0, 21368 <__sanitizer_set_report_fd@@Base+0x7aa0>
   2135c:	ldr	x0, [sp, #16]
   21360:	ldr	x30, [sp], #32
   21364:	ret
   21368:	sxtw	x4, w0
   2136c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21370:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21374:	add	x2, x2, #0x430
   21378:	add	x0, x0, #0x3c0
   2137c:	mov	x3, #0x0                   	// #0
   21380:	mov	w1, #0x5a                  	// #90
   21384:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21388:	str	x30, [sp, #-48]!
   2138c:	str	x0, [sp, #32]
   21390:	add	x1, sp, #0x20
   21394:	str	x0, [sp, #40]
   21398:	mov	w0, #0x3                   	// #3
   2139c:	bl	6ba0 <setrlimit@plt>
   213a0:	cbnz	w0, 21408 <__sanitizer_set_report_fd@@Base+0x7b40>
   213a4:	add	x1, sp, #0x10
   213a8:	mov	w0, #0x3                   	// #3
   213ac:	bl	6cb0 <getrlimit@plt>
   213b0:	sxtw	x4, w0
   213b4:	cbnz	w0, 213cc <__sanitizer_set_report_fd@@Base+0x7b04>
   213b8:	ldr	x0, [sp, #16]
   213bc:	cmn	x0, #0x1
   213c0:	b.eq	213e8 <__sanitizer_set_report_fd@@Base+0x7b20>  // b.none
   213c4:	ldr	x30, [sp], #48
   213c8:	ret
   213cc:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   213d0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   213d4:	add	x2, x2, #0x430
   213d8:	add	x0, x0, #0x3c0
   213dc:	mov	x3, #0x0                   	// #0
   213e0:	mov	w1, #0x5a                  	// #90
   213e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   213e8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   213ec:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   213f0:	add	x2, x2, #0x458
   213f4:	add	x0, x0, #0x3c0
   213f8:	mov	x4, #0x0                   	// #0
   213fc:	mov	x3, #0x0                   	// #0
   21400:	mov	w1, #0x7a                  	// #122
   21404:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21408:	bl	210e8 <__sanitizer_set_report_fd@@Base+0x7820>
   2140c:	nop
   21410:	str	x30, [sp, #-32]!
   21414:	mov	w0, #0x9                   	// #9
   21418:	add	x1, sp, #0x10
   2141c:	bl	6cb0 <getrlimit@plt>
   21420:	cbnz	w0, 21438 <__sanitizer_set_report_fd@@Base+0x7b70>
   21424:	ldr	x0, [sp, #16]
   21428:	ldr	x30, [sp], #32
   2142c:	cmn	x0, #0x1
   21430:	cset	w0, eq  // eq = none
   21434:	ret
   21438:	sxtw	x4, w0
   2143c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21440:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21444:	add	x2, x2, #0x430
   21448:	add	x0, x0, #0x3c0
   2144c:	mov	x3, #0x0                   	// #0
   21450:	mov	w1, #0x5a                  	// #90
   21454:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21458:	str	x30, [sp, #-48]!
   2145c:	mov	x2, #0xffffffffffffffff    	// #-1
   21460:	mov	w0, #0x9                   	// #9
   21464:	str	x2, [sp, #32]
   21468:	add	x1, sp, #0x20
   2146c:	str	x2, [sp, #40]
   21470:	bl	6ba0 <setrlimit@plt>
   21474:	cbnz	w0, 214dc <__sanitizer_set_report_fd@@Base+0x7c14>
   21478:	add	x1, sp, #0x10
   2147c:	mov	w0, #0x9                   	// #9
   21480:	bl	6cb0 <getrlimit@plt>
   21484:	sxtw	x4, w0
   21488:	cbnz	w0, 214a0 <__sanitizer_set_report_fd@@Base+0x7bd8>
   2148c:	ldr	x0, [sp, #16]
   21490:	cmn	x0, #0x1
   21494:	b.ne	214bc <__sanitizer_set_report_fd@@Base+0x7bf4>  // b.any
   21498:	ldr	x30, [sp], #48
   2149c:	ret
   214a0:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   214a4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   214a8:	add	x2, x2, #0x430
   214ac:	add	x0, x0, #0x3c0
   214b0:	mov	x3, #0x0                   	// #0
   214b4:	mov	w1, #0x5a                  	// #90
   214b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   214bc:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   214c0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   214c4:	add	x2, x2, #0x480
   214c8:	add	x0, x0, #0x3c0
   214cc:	mov	x4, #0x0                   	// #0
   214d0:	mov	x3, #0x0                   	// #0
   214d4:	mov	w1, #0x84                  	// #132
   214d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   214dc:	bl	210e8 <__sanitizer_set_report_fd@@Base+0x7820>
   214e0:	b	6820 <sleep@plt>
   214e4:	nop
   214e8:	mov	w1, #0x3e8                 	// #1000
   214ec:	mul	w0, w0, w1
   214f0:	b	6a80 <usleep@plt>
   214f4:	nop
   214f8:	stp	x19, x30, [sp, #-176]!
   214fc:	mov	w0, #0x6                   	// #6
   21500:	bl	1ef78 <__sanitizer_set_report_fd@@Base+0x56b0>
   21504:	cbnz	w0, 2150c <__sanitizer_set_report_fd@@Base+0x7c44>
   21508:	bl	6bf0 <abort@plt>
   2150c:	add	x19, sp, #0x18
   21510:	mov	x2, #0x98                  	// #152
   21514:	mov	w1, #0x0                   	// #0
   21518:	mov	x0, x19
   2151c:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   21520:	str	xzr, [sp, #24]
   21524:	mov	x1, x19
   21528:	mov	x2, #0x0                   	// #0
   2152c:	mov	w0, #0x6                   	// #6
   21530:	bl	1f690 <__sanitizer_set_report_fd@@Base+0x5dc8>
   21534:	bl	6bf0 <abort@plt>
   21538:	b	464a8 <__asan_backtrace_vector_release@@Base+0x58>
   2153c:	nop
   21540:	str	x30, [sp, #-16]!
   21544:	bl	6890 <isatty@plt>
   21548:	cmp	w0, #0x0
   2154c:	cset	w0, ne  // ne = any
   21550:	ldr	x30, [sp], #16
   21554:	ret
   21558:	str	x30, [sp, #-64]!
   2155c:	mov	x0, #0x0                   	// #0
   21560:	add	x1, sp, #0x10
   21564:	bl	6cc0 <sigaltstack@plt>
   21568:	cbnz	w0, 215d4 <__sanitizer_set_report_fd@@Base+0x7d0c>
   2156c:	ldr	w0, [sp, #24]
   21570:	tbnz	w0, #1, 2157c <__sanitizer_set_report_fd@@Base+0x7cb4>
   21574:	ldr	x30, [sp], #64
   21578:	ret
   2157c:	mov	w2, #0x0                   	// #0
   21580:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21584:	mov	x0, #0x10000               	// #65536
   21588:	add	x1, x1, #0x4d8
   2158c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   21590:	mov	x3, x0
   21594:	mov	x2, #0x10000               	// #65536
   21598:	add	x0, sp, #0x28
   2159c:	mov	x1, #0x0                   	// #0
   215a0:	str	x3, [sp, #40]
   215a4:	str	wzr, [sp, #48]
   215a8:	str	x2, [sp, #56]
   215ac:	bl	6cc0 <sigaltstack@plt>
   215b0:	sxtw	x4, w0
   215b4:	cbz	w0, 21574 <__sanitizer_set_report_fd@@Base+0x7cac>
   215b8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   215bc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   215c0:	add	x2, x2, #0x4f0
   215c4:	add	x0, x0, #0x3c0
   215c8:	mov	x3, #0x0                   	// #0
   215cc:	mov	w1, #0xbb                  	// #187
   215d0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   215d4:	sxtw	x4, w0
   215d8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   215dc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   215e0:	add	x2, x2, #0x4a8
   215e4:	add	x0, x0, #0x3c0
   215e8:	mov	x3, #0x0                   	// #0
   215ec:	mov	w1, #0xb0                  	// #176
   215f0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   215f4:	nop
   215f8:	mov	w3, #0x2                   	// #2
   215fc:	mov	x2, #0x10000               	// #65536
   21600:	str	x30, [sp, #-64]!
   21604:	add	x1, sp, #0x28
   21608:	add	x0, sp, #0x10
   2160c:	str	xzr, [sp, #16]
   21610:	str	w3, [sp, #24]
   21614:	str	x2, [sp, #32]
   21618:	bl	6cc0 <sigaltstack@plt>
   2161c:	cbnz	w0, 21634 <__sanitizer_set_report_fd@@Base+0x7d6c>
   21620:	ldr	x0, [sp, #40]
   21624:	ldr	x1, [sp, #56]
   21628:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2162c:	ldr	x30, [sp], #64
   21630:	ret
   21634:	sxtw	x4, w0
   21638:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2163c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21640:	add	x2, x2, #0x520
   21644:	add	x0, x0, #0x3c0
   21648:	mov	x3, #0x0                   	// #0
   2164c:	mov	w1, #0xc3                  	// #195
   21650:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21654:	nop
   21658:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2165c:	stp	x19, x30, [sp, #-16]!
   21660:	mov	x19, x0
   21664:	ldr	x1, [x1, #4040]
   21668:	ldrb	w0, [x1, #97]
   2166c:	cbnz	w0, 216bc <__sanitizer_set_report_fd@@Base+0x7df4>
   21670:	mov	x1, x19
   21674:	mov	w0, #0xb                   	// #11
   21678:	bl	21118 <__sanitizer_set_report_fd@@Base+0x7850>
   2167c:	mov	x1, x19
   21680:	mov	w0, #0x7                   	// #7
   21684:	bl	21118 <__sanitizer_set_report_fd@@Base+0x7850>
   21688:	mov	x1, x19
   2168c:	mov	w0, #0x6                   	// #6
   21690:	bl	21118 <__sanitizer_set_report_fd@@Base+0x7850>
   21694:	mov	x1, x19
   21698:	mov	w0, #0x8                   	// #8
   2169c:	bl	21118 <__sanitizer_set_report_fd@@Base+0x7850>
   216a0:	mov	x1, x19
   216a4:	mov	w0, #0x4                   	// #4
   216a8:	bl	21118 <__sanitizer_set_report_fd@@Base+0x7850>
   216ac:	mov	x1, x19
   216b0:	mov	w0, #0x5                   	// #5
   216b4:	ldp	x19, x30, [sp], #16
   216b8:	b	21118 <__sanitizer_set_report_fd@@Base+0x7850>
   216bc:	bl	21558 <__sanitizer_set_report_fd@@Base+0x7c90>
   216c0:	b	21670 <__sanitizer_set_report_fd@@Base+0x7da8>
   216c4:	nop
   216c8:	stp	x19, x20, [sp, #-32]!
   216cc:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   216d0:	mov	x19, x0
   216d4:	ldr	x20, [x20, #4000]
   216d8:	stp	x21, x30, [sp, #16]
   216dc:	ldr	x21, [x0, #16]
   216e0:	ldr	x0, [x20]
   216e4:	cbz	x0, 21750 <__sanitizer_set_report_fd@@Base+0x7e88>
   216e8:	ldr	x1, [x19, #32]
   216ec:	add	x21, x21, x0
   216f0:	mov	w0, #0x0                   	// #0
   216f4:	cmp	x21, x1
   216f8:	b.ls	21744 <__sanitizer_set_report_fd@@Base+0x7e7c>  // b.plast
   216fc:	mov	x2, #0xffff                	// #65535
   21700:	add	x1, x1, x2
   21704:	ldr	x2, [x19, #16]
   21708:	cmp	x2, x1
   2170c:	b.cs	21744 <__sanitizer_set_report_fd@@Base+0x7e7c>  // b.hs, b.nlast
   21710:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21714:	mov	w0, #0x1                   	// #1
   21718:	ldr	x2, [x19]
   2171c:	ldr	x1, [x1, #3424]
   21720:	ldr	w2, [x2, #8]
   21724:	ldr	w1, [x1]
   21728:	cmp	w2, w1
   2172c:	b.eq	21744 <__sanitizer_set_report_fd@@Base+0x7e7c>  // b.none
   21730:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21734:	ldr	x0, [x0, #3472]
   21738:	ldr	w0, [x0]
   2173c:	cmp	w0, w2
   21740:	cset	w0, eq  // eq = none
   21744:	ldp	x21, x30, [sp, #16]
   21748:	ldp	x19, x20, [sp], #32
   2174c:	ret
   21750:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   21754:	str	x0, [x20]
   21758:	b	216e8 <__sanitizer_set_report_fd@@Base+0x7e20>
   2175c:	nop
   21760:	stp	x19, x20, [sp, #-64]!
   21764:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21768:	mov	x19, x1
   2176c:	ldr	x20, [x20, #4000]
   21770:	stp	x21, x22, [sp, #16]
   21774:	mov	x21, x0
   21778:	ldr	x4, [x20]
   2177c:	str	x30, [sp, #32]
   21780:	cbz	x4, 21814 <__sanitizer_set_report_fd@@Base+0x7f4c>
   21784:	add	x4, x4, x4, lsl #2
   21788:	cmp	x19, x4, lsl #1
   2178c:	lsl	x4, x4, #1
   21790:	b.cs	21830 <__sanitizer_set_report_fd@@Base+0x7f68>  // b.hs, b.nlast
   21794:	add	x0, sp, #0x38
   21798:	mov	w22, #0x0                   	// #0
   2179c:	bl	6720 <pipe@plt>
   217a0:	mov	w20, w0
   217a4:	cbz	w0, 217bc <__sanitizer_set_report_fd@@Base+0x7ef4>
   217a8:	mov	w0, w22
   217ac:	ldp	x21, x22, [sp, #16]
   217b0:	ldr	x30, [sp, #32]
   217b4:	ldp	x19, x20, [sp], #64
   217b8:	ret
   217bc:	ldr	w0, [sp, #60]
   217c0:	mov	x2, x19
   217c4:	mov	x1, x21
   217c8:	bl	1da40 <__sanitizer_set_report_fd@@Base+0x4178>
   217cc:	mov	x21, x0
   217d0:	add	x1, sp, #0x34
   217d4:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   217d8:	tst	w0, #0xff
   217dc:	b.eq	2184c <__sanitizer_set_report_fd@@Base+0x7f84>  // b.none
   217e0:	ldrsw	x4, [sp, #52]
   217e4:	mov	w22, w20
   217e8:	cmp	x4, #0xe
   217ec:	b.ne	21868 <__sanitizer_set_report_fd@@Base+0x7fa0>  // b.any
   217f0:	ldr	w0, [sp, #56]
   217f4:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   217f8:	ldr	w0, [sp, #60]
   217fc:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21800:	mov	w0, w22
   21804:	ldp	x21, x22, [sp, #16]
   21808:	ldr	x30, [sp, #32]
   2180c:	ldp	x19, x20, [sp], #64
   21810:	ret
   21814:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   21818:	mov	x4, x0
   2181c:	str	x0, [x20]
   21820:	add	x4, x4, x4, lsl #2
   21824:	cmp	x19, x4, lsl #1
   21828:	lsl	x4, x4, #1
   2182c:	b.cc	21794 <__sanitizer_set_report_fd@@Base+0x7ecc>  // b.lo, b.ul, b.last
   21830:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21834:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21838:	mov	x3, x19
   2183c:	add	x2, x2, #0x550
   21840:	add	x0, x0, #0x3c0
   21844:	mov	w1, #0x118                 	// #280
   21848:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2184c:	ldr	w0, [sp, #56]
   21850:	cmp	x19, x21
   21854:	cset	w22, eq  // eq = none
   21858:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2185c:	ldr	w0, [sp, #60]
   21860:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21864:	b	21800 <__sanitizer_set_report_fd@@Base+0x7f38>
   21868:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2186c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21870:	add	x2, x2, #0x570
   21874:	add	x0, x0, #0x3c0
   21878:	mov	x3, #0xe                   	// #14
   2187c:	mov	w1, #0x121                 	// #289
   21880:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21884:	nop
   21888:	b	23188 <OnPrint@@Base+0x820>
   2188c:	nop
   21890:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21894:	stp	x19, x20, [sp, #-240]!
   21898:	ldr	x2, [x2, #4040]
   2189c:	ldrb	w2, [x2, #215]
   218a0:	str	x30, [sp, #16]
   218a4:	cbz	w2, 2197c <__sanitizer_set_report_fd@@Base+0x80b4>
   218a8:	mov	x20, x1
   218ac:	mov	x19, x0
   218b0:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   218b4:	cmp	x0, #0xbd
   218b8:	b.hi	21924 <__sanitizer_set_report_fd@@Base+0x805c>  // b.pmore
   218bc:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   218c0:	mov	x3, x0
   218c4:	mov	x4, x19
   218c8:	add	x19, sp, #0x28
   218cc:	mov	x1, #0xc8                  	// #200
   218d0:	mov	x0, x19
   218d4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   218d8:	add	x2, x2, #0x5c8
   218dc:	bl	22970 <OnPrint@@Base+0x8>
   218e0:	mov	w2, #0x1c0                 	// #448
   218e4:	mov	w1, #0x242                 	// #578
   218e8:	mov	x0, x19
   218ec:	bl	66d0 <shm_open@plt>
   218f0:	mov	x1, x20
   218f4:	mov	w20, w0
   218f8:	bl	1da68 <__sanitizer_set_report_fd@@Base+0x41a0>
   218fc:	sxtw	x4, w0
   21900:	cbnz	w0, 21944 <__sanitizer_set_report_fd@@Base+0x807c>
   21904:	mov	x0, x19
   21908:	bl	6a90 <shm_unlink@plt>
   2190c:	sxtw	x4, w0
   21910:	cbnz	w0, 21960 <__sanitizer_set_report_fd@@Base+0x8098>
   21914:	mov	w0, w20
   21918:	ldr	x30, [sp, #16]
   2191c:	ldp	x19, x20, [sp], #240
   21920:	ret
   21924:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21928:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2192c:	add	x2, x2, #0x590
   21930:	add	x0, x0, #0x3c0
   21934:	mov	x4, #0x0                   	// #0
   21938:	mov	x3, #0x0                   	// #0
   2193c:	mov	w1, #0x13c                 	// #316
   21940:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21944:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21948:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2194c:	add	x2, x2, #0x5d8
   21950:	add	x0, x0, #0x3c0
   21954:	mov	x3, #0x0                   	// #0
   21958:	mov	w1, #0x142                 	// #322
   2195c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21960:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21964:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21968:	add	x2, x2, #0x5d8
   2196c:	add	x0, x0, #0x3c0
   21970:	mov	x3, #0x0                   	// #0
   21974:	mov	w1, #0x144                 	// #324
   21978:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2197c:	mov	w20, #0xffffffff            	// #-1
   21980:	b	21914 <__sanitizer_set_report_fd@@Base+0x804c>
   21984:	nop
   21988:	stp	x19, x20, [sp, #-64]!
   2198c:	mov	x19, x1
   21990:	stp	x21, x22, [sp, #16]
   21994:	mov	x21, x0
   21998:	stp	x23, x30, [sp, #32]
   2199c:	cbz	x2, 21a28 <__sanitizer_set_report_fd@@Base+0x8160>
   219a0:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   219a4:	mov	x0, x2
   219a8:	bl	21890 <__sanitizer_set_report_fd@@Base+0x7fc8>
   219ac:	cmn	w0, #0x1
   219b0:	ldr	x20, [x20, #4000]
   219b4:	mov	w23, #0x4012                	// #16402
   219b8:	mov	w3, #0x4032                	// #16434
   219bc:	mov	w22, w0
   219c0:	csel	w23, w23, w3, ne  // ne = any
   219c4:	ldr	x2, [x20]
   219c8:	cbz	x2, 21a40 <__sanitizer_set_report_fd@@Base+0x8178>
   219cc:	neg	x6, x2
   219d0:	sub	x5, x2, #0x1
   219d4:	and	x0, x6, x21
   219d8:	tst	x5, x2
   219dc:	b.ne	21a60 <__sanitizer_set_report_fd@@Base+0x8198>  // b.any
   219e0:	mov	w4, w22
   219e4:	mov	w3, w23
   219e8:	add	x1, x19, x5
   219ec:	mov	w2, #0x3                   	// #3
   219f0:	mov	x5, #0x0                   	// #0
   219f4:	and	x1, x1, x6
   219f8:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   219fc:	add	x1, sp, #0x3c
   21a00:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   21a04:	tst	w0, #0xff
   21a08:	b.ne	21a70 <__sanitizer_set_report_fd@@Base+0x81a8>  // b.any
   21a0c:	mov	x0, x19
   21a10:	bl	15b58 <__sancov_default_options@@Base+0x3088>
   21a14:	mov	w0, #0x1                   	// #1
   21a18:	ldp	x21, x22, [sp, #16]
   21a1c:	ldp	x23, x30, [sp, #32]
   21a20:	ldp	x19, x20, [sp], #64
   21a24:	ret
   21a28:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21a2c:	mov	w23, #0x4032                	// #16434
   21a30:	mov	w22, #0xffffffff            	// #-1
   21a34:	ldr	x20, [x20, #4000]
   21a38:	ldr	x2, [x20]
   21a3c:	cbnz	x2, 219cc <__sanitizer_set_report_fd@@Base+0x8104>
   21a40:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   21a44:	mov	x2, x0
   21a48:	str	x0, [x20]
   21a4c:	neg	x6, x2
   21a50:	sub	x5, x2, #0x1
   21a54:	and	x0, x6, x21
   21a58:	tst	x5, x2
   21a5c:	b.eq	219e0 <__sanitizer_set_report_fd@@Base+0x8118>  // b.none
   21a60:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   21a64:	add	x0, x0, #0x6e8
   21a68:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   21a6c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21a70:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21a74:	ldr	w5, [sp, #60]
   21a78:	mov	x4, x21
   21a7c:	mov	x3, x19
   21a80:	ldr	x1, [x1, #4008]
   21a84:	mov	x2, x19
   21a88:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21a8c:	add	x0, x0, #0x5f0
   21a90:	ldr	x1, [x1]
   21a94:	bl	22d00 <OnPrint@@Base+0x398>
   21a98:	mov	w0, #0x0                   	// #0
   21a9c:	ldp	x21, x22, [sp, #16]
   21aa0:	ldp	x23, x30, [sp, #32]
   21aa4:	ldp	x19, x20, [sp], #64
   21aa8:	ret
   21aac:	nop
   21ab0:	stp	x19, x20, [sp, #-32]!
   21ab4:	mov	x19, x0
   21ab8:	mov	x20, x2
   21abc:	stp	x21, x30, [sp, #16]
   21ac0:	mov	x21, x1
   21ac4:	cbz	x3, 21af4 <__sanitizer_set_report_fd@@Base+0x822c>
   21ac8:	mov	x0, x3
   21acc:	mov	x5, #0x0                   	// #0
   21ad0:	mov	w4, #0xffffffff            	// #-1
   21ad4:	mov	w3, #0x4032                	// #16434
   21ad8:	mov	w2, #0x0                   	// #0
   21adc:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   21ae0:	stp	x0, x21, [x19]
   21ae4:	str	x20, [x19, #16]
   21ae8:	ldp	x21, x30, [sp, #16]
   21aec:	ldp	x19, x20, [sp], #32
   21af0:	ret
   21af4:	mov	x5, #0x0                   	// #0
   21af8:	mov	w4, #0xffffffff            	// #-1
   21afc:	mov	w3, #0x4022                	// #16418
   21b00:	mov	w2, #0x0                   	// #0
   21b04:	mov	x0, #0x0                   	// #0
   21b08:	bl	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   21b0c:	stp	x0, x21, [x19]
   21b10:	str	x20, [x19, #16]
   21b14:	ldp	x21, x30, [sp, #16]
   21b18:	ldp	x19, x20, [sp], #32
   21b1c:	ret
   21b20:	mov	x0, x1
   21b24:	mov	x1, x2
   21b28:	b	20688 <__sanitizer_set_report_fd@@Base+0x6dc0>
   21b2c:	nop
   21b30:	mov	x0, x1
   21b34:	mov	x1, x2
   21b38:	b	205a0 <__sanitizer_set_report_fd@@Base+0x6cd8>
   21b3c:	nop
   21b40:	ldr	x4, [x0, #8]
   21b44:	str	x30, [sp, #-16]!
   21b48:	mov	x5, x0
   21b4c:	cmp	x2, x4
   21b50:	b.hi	21bac <__sanitizer_set_report_fd@@Base+0x82e4>  // b.pmore
   21b54:	mov	x0, x1
   21b58:	ldr	x1, [x5]
   21b5c:	cmp	x1, x0
   21b60:	b.eq	21b88 <__sanitizer_set_report_fd@@Base+0x82c0>  // b.none
   21b64:	add	x1, x1, x4
   21b68:	add	x3, x2, x0
   21b6c:	cmp	x3, x1
   21b70:	b.ne	21bc8 <__sanitizer_set_report_fd@@Base+0x8300>  // b.any
   21b74:	ldr	x30, [sp], #16
   21b78:	sub	x4, x4, x2
   21b7c:	str	x4, [x5, #8]
   21b80:	mov	x1, x2
   21b84:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   21b88:	ldr	x30, [sp], #16
   21b8c:	cmp	x2, x4
   21b90:	add	x1, x2, x0
   21b94:	sub	x4, x4, x2
   21b98:	csel	x1, x1, xzr, ne  // ne = any
   21b9c:	str	x1, [x5]
   21ba0:	str	x4, [x5, #8]
   21ba4:	mov	x1, x2
   21ba8:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   21bac:	mov	x3, x2
   21bb0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21bb4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21bb8:	add	x0, x0, #0x3c0
   21bbc:	add	x2, x2, #0x640
   21bc0:	mov	w1, #0x175                 	// #373
   21bc4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21bc8:	mov	x4, x1
   21bcc:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21bd0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21bd4:	add	x2, x2, #0x658
   21bd8:	add	x0, x0, #0x3c0
   21bdc:	mov	w1, #0x17a                 	// #378
   21be0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21be4:	nop
   21be8:	stp	x19, x20, [sp, #-32]!
   21bec:	mov	x19, x0
   21bf0:	mov	x20, x1
   21bf4:	str	x30, [sp, #16]
   21bf8:	cbz	x2, 21c34 <__sanitizer_set_report_fd@@Base+0x836c>
   21bfc:	mov	x0, x2
   21c00:	bl	21890 <__sanitizer_set_report_fd@@Base+0x7fc8>
   21c04:	mov	w4, w0
   21c08:	mov	w0, #0x4032                	// #16434
   21c0c:	cmn	w4, #0x1
   21c10:	mov	x1, x20
   21c14:	mov	w3, #0x4012                	// #16402
   21c18:	csel	w3, w3, w0, ne  // ne = any
   21c1c:	mov	x0, x19
   21c20:	mov	x5, #0x0                   	// #0
   21c24:	ldr	x30, [sp, #16]
   21c28:	mov	w2, #0x0                   	// #0
   21c2c:	ldp	x19, x20, [sp], #32
   21c30:	b	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   21c34:	mov	x1, x20
   21c38:	mov	x0, x19
   21c3c:	ldr	x30, [sp, #16]
   21c40:	mov	w3, #0x4032                	// #16434
   21c44:	ldp	x19, x20, [sp], #32
   21c48:	mov	w4, #0xffffffff            	// #-1
   21c4c:	mov	x5, #0x0                   	// #0
   21c50:	mov	w2, #0x0                   	// #0
   21c54:	b	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   21c58:	mov	x1, x0
   21c5c:	mov	x5, #0x0                   	// #0
   21c60:	mov	w4, #0xffffffff            	// #-1
   21c64:	mov	w3, #0x4022                	// #16418
   21c68:	mov	w2, #0x0                   	// #0
   21c6c:	mov	x0, #0x0                   	// #0
   21c70:	b	1d998 <__sanitizer_set_report_fd@@Base+0x40d0>
   21c74:	nop
   21c78:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21c7c:	ldr	x3, [x3, #3536]
   21c80:	cbz	x3, 21c88 <__sanitizer_set_report_fd@@Base+0x83c0>
   21c84:	b	6810 <real_pthread_attr_getstack@plt>
   21c88:	b	6a40 <pthread_attr_getstack@plt>
   21c8c:	nop
   21c90:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21c94:	stp	x19, x20, [sp, #-48]!
   21c98:	mov	x20, x0
   21c9c:	ldr	x1, [x1, #3536]
   21ca0:	str	x30, [sp, #16]
   21ca4:	stp	xzr, xzr, [sp, #32]
   21ca8:	add	x2, sp, #0x28
   21cac:	cbz	x1, 21d28 <__sanitizer_set_report_fd@@Base+0x8460>
   21cb0:	add	x1, sp, #0x20
   21cb4:	bl	6810 <real_pthread_attr_getstack@plt>
   21cb8:	ldr	x1, [sp, #32]
   21cbc:	cbz	x1, 21ccc <__sanitizer_set_report_fd@@Base+0x8404>
   21cc0:	ldr	x0, [sp, #40]
   21cc4:	cmn	x1, x0
   21cc8:	b.ne	21cf0 <__sanitizer_set_report_fd@@Base+0x8428>  // b.any
   21ccc:	bl	1fa40 <__sanitizer_set_report_fd@@Base+0x6178>
   21cd0:	add	x19, x0, #0x20, lsl #12
   21cd4:	ldr	x1, [sp, #40]
   21cd8:	cmp	x1, #0x0
   21cdc:	ccmp	x19, x1, #0x0, ne  // ne = any
   21ce0:	b.hi	21d34 <__sanitizer_set_report_fd@@Base+0x846c>  // b.pmore
   21ce4:	ldr	x30, [sp, #16]
   21ce8:	ldp	x19, x20, [sp], #48
   21cec:	ret
   21cf0:	bl	1fa40 <__sanitizer_set_report_fd@@Base+0x6178>
   21cf4:	add	x2, x0, #0x20, lsl #12
   21cf8:	ldr	x1, [sp, #40]
   21cfc:	cmp	x2, x1
   21d00:	b.ls	21ce4 <__sanitizer_set_report_fd@@Base+0x841c>  // b.plast
   21d04:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21d08:	add	x0, x0, #0x6c8
   21d0c:	bl	22c78 <OnPrint@@Base+0x310>
   21d10:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21d14:	add	x0, x0, #0x708
   21d18:	bl	22c78 <OnPrint@@Base+0x310>
   21d1c:	ldr	x30, [sp, #16]
   21d20:	ldp	x19, x20, [sp], #48
   21d24:	ret
   21d28:	add	x1, sp, #0x20
   21d2c:	bl	6a40 <pthread_attr_getstack@plt>
   21d30:	b	21cb8 <__sanitizer_set_report_fd@@Base+0x83f0>
   21d34:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21d38:	ldr	x0, [x0, #3680]
   21d3c:	ldr	w0, [x0]
   21d40:	cbnz	w0, 21d5c <__sanitizer_set_report_fd@@Base+0x8494>
   21d44:	mov	x1, x19
   21d48:	mov	x0, x20
   21d4c:	bl	6a50 <pthread_attr_setstacksize@plt>
   21d50:	ldr	x30, [sp, #16]
   21d54:	ldp	x19, x20, [sp], #48
   21d58:	ret
   21d5c:	mov	x2, x19
   21d60:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21d64:	add	x0, x0, #0x698
   21d68:	bl	22c78 <OnPrint@@Base+0x310>
   21d6c:	b	21d44 <__sanitizer_set_report_fd@@Base+0x847c>
   21d70:	stp	x19, x20, [sp, #-80]!
   21d74:	mov	w20, w4
   21d78:	stp	x21, x22, [sp, #16]
   21d7c:	mov	w22, w2
   21d80:	mov	w21, w3
   21d84:	stp	x23, x24, [sp, #32]
   21d88:	mov	x23, x0
   21d8c:	mov	x24, x1
   21d90:	str	x30, [sp, #48]
   21d94:	bl	1e090 <__sanitizer_set_report_fd@@Base+0x47c8>
   21d98:	mov	w19, w0
   21d9c:	cmp	w0, #0x0
   21da0:	b.lt	21df0 <__sanitizer_set_report_fd@@Base+0x8528>  // b.tstop
   21da4:	b.eq	21e18 <__sanitizer_set_report_fd@@Base+0x8550>  // b.none
   21da8:	cmn	w22, #0x1
   21dac:	b.eq	21db8 <__sanitizer_set_report_fd@@Base+0x84f0>  // b.none
   21db0:	mov	w0, w22
   21db4:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21db8:	cmn	w21, #0x1
   21dbc:	b.eq	21dc8 <__sanitizer_set_report_fd@@Base+0x8500>  // b.none
   21dc0:	mov	w0, w21
   21dc4:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21dc8:	cmn	w20, #0x1
   21dcc:	b.eq	21dd8 <__sanitizer_set_report_fd@@Base+0x8510>  // b.none
   21dd0:	mov	w0, w20
   21dd4:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21dd8:	mov	w0, w19
   21ddc:	ldp	x21, x22, [sp, #16]
   21de0:	ldp	x23, x24, [sp, #32]
   21de4:	ldr	x30, [sp, #48]
   21de8:	ldp	x19, x20, [sp], #80
   21dec:	ret
   21df0:	add	x1, sp, #0x4c
   21df4:	sxtw	x0, w0
   21df8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   21dfc:	tst	w0, #0xff
   21e00:	b.eq	21da8 <__sanitizer_set_report_fd@@Base+0x84e0>  // b.none
   21e04:	ldr	w1, [sp, #76]
   21e08:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21e0c:	add	x0, x0, #0x738
   21e10:	bl	22d00 <OnPrint@@Base+0x398>
   21e14:	b	21da8 <__sanitizer_set_report_fd@@Base+0x84e0>
   21e18:	cmn	w22, #0x1
   21e1c:	b.eq	21e38 <__sanitizer_set_report_fd@@Base+0x8570>  // b.none
   21e20:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21e24:	mov	w1, #0x0                   	// #0
   21e28:	mov	w0, w22
   21e2c:	bl	1db08 <__sanitizer_set_report_fd@@Base+0x4240>
   21e30:	mov	w0, w22
   21e34:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21e38:	cmn	w21, #0x1
   21e3c:	b.eq	21e5c <__sanitizer_set_report_fd@@Base+0x8594>  // b.none
   21e40:	mov	w0, #0x1                   	// #1
   21e44:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21e48:	mov	w1, #0x1                   	// #1
   21e4c:	mov	w0, w21
   21e50:	bl	1db08 <__sanitizer_set_report_fd@@Base+0x4240>
   21e54:	mov	w0, w21
   21e58:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21e5c:	cmn	w20, #0x1
   21e60:	b.eq	21e80 <__sanitizer_set_report_fd@@Base+0x85b8>  // b.none
   21e64:	mov	w0, #0x2                   	// #2
   21e68:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21e6c:	mov	w1, #0x2                   	// #2
   21e70:	mov	w0, w20
   21e74:	bl	1db08 <__sanitizer_set_report_fd@@Base+0x4240>
   21e78:	mov	w0, w20
   21e7c:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21e80:	mov	w0, #0x4                   	// #4
   21e84:	bl	6c30 <sysconf@plt>
   21e88:	mov	x19, x0
   21e8c:	cmp	w0, #0x2
   21e90:	b.le	21ea8 <__sanitizer_set_report_fd@@Base+0x85e0>
   21e94:	mov	w0, w19
   21e98:	sub	w19, w19, #0x1
   21e9c:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   21ea0:	cmp	w19, #0x2
   21ea4:	b.ne	21e94 <__sanitizer_set_report_fd@@Base+0x85cc>  // b.any
   21ea8:	mov	x1, x24
   21eac:	mov	x0, x23
   21eb0:	bl	6710 <execv@plt>
   21eb4:	mov	w0, #0x1                   	// #1
   21eb8:	bl	1db88 <__sanitizer_set_report_fd@@Base+0x42c0>
   21ebc:	nop
   21ec0:	stp	x19, x30, [sp, #-32]!
   21ec4:	mov	w2, #0x1                   	// #1
   21ec8:	add	x1, sp, #0x18
   21ecc:	bl	1e008 <__sanitizer_set_report_fd@@Base+0x4740>
   21ed0:	add	x1, sp, #0x1c
   21ed4:	mov	x19, x0
   21ed8:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   21edc:	cmp	x19, #0x0
   21ee0:	cset	w19, eq  // eq = none
   21ee4:	tst	w0, #0xff
   21ee8:	b.ne	21ef8 <__sanitizer_set_report_fd@@Base+0x8630>  // b.any
   21eec:	mov	w0, w19
   21ef0:	ldp	x19, x30, [sp], #32
   21ef4:	ret
   21ef8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21efc:	mov	w19, #0x0                   	// #0
   21f00:	ldr	x0, [x0, #3680]
   21f04:	ldr	w0, [x0]
   21f08:	cbz	w0, 21eec <__sanitizer_set_report_fd@@Base+0x8624>
   21f0c:	ldr	w1, [sp, #28]
   21f10:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21f14:	add	x0, x0, #0x760
   21f18:	bl	22d00 <OnPrint@@Base+0x398>
   21f1c:	mov	w0, w19
   21f20:	ldp	x19, x30, [sp], #32
   21f24:	ret
   21f28:	stp	x19, x30, [sp, #-32]!
   21f2c:	mov	w2, #0x0                   	// #0
   21f30:	add	x1, sp, #0x18
   21f34:	bl	1e008 <__sanitizer_set_report_fd@@Base+0x4740>
   21f38:	add	x1, sp, #0x1c
   21f3c:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   21f40:	tst	w0, #0xff
   21f44:	b.ne	21f58 <__sanitizer_set_report_fd@@Base+0x8690>  // b.any
   21f48:	ldr	w19, [sp, #24]
   21f4c:	mov	w0, w19
   21f50:	ldp	x19, x30, [sp], #32
   21f54:	ret
   21f58:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21f5c:	mov	w19, #0xffffffff            	// #-1
   21f60:	ldr	x0, [x0, #3680]
   21f64:	ldr	w0, [x0]
   21f68:	cbz	w0, 21f4c <__sanitizer_set_report_fd@@Base+0x8684>
   21f6c:	ldr	w1, [sp, #28]
   21f70:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   21f74:	add	x0, x0, #0x760
   21f78:	bl	22d00 <OnPrint@@Base+0x398>
   21f7c:	b	21f4c <__sanitizer_set_report_fd@@Base+0x8684>
   21f80:	cmp	w0, #0x1
   21f84:	cset	w0, eq  // eq = none
   21f88:	ret
   21f8c:	nop
   21f90:	stp	x19, x20, [sp, #-320]!
   21f94:	and	w3, w3, #0xff
   21f98:	cmp	w3, #0xa
   21f9c:	cset	w8, ne  // ne = any
   21fa0:	stp	x21, x22, [sp, #16]
   21fa4:	cmp	w8, #0x0
   21fa8:	stp	x23, x24, [sp, #32]
   21fac:	ccmp	w3, #0x10, #0x4, ne  // ne = any
   21fb0:	stp	x25, x26, [sp, #48]
   21fb4:	str	x30, [sp, #64]
   21fb8:	b.ne	221ac <__sanitizer_set_report_fd@@Base+0x88e4>  // b.any
   21fbc:	and	w24, w6, #0xff
   21fc0:	cmp	w8, #0x0
   21fc4:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   21fc8:	b.ne	221cc <__sanitizer_set_report_fd@@Base+0x8904>  // b.any
   21fcc:	cmp	x2, #0x0
   21fd0:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   21fd4:	b.ne	221dc <__sanitizer_set_report_fd@@Base+0x8914>  // b.any
   21fd8:	and	w23, w4, #0xff
   21fdc:	cmp	w23, #0x1d
   21fe0:	b.hi	221ec <__sanitizer_set_report_fd@@Base+0x8924>  // b.pmore
   21fe4:	cmp	w23, #0x0
   21fe8:	mov	x19, x0
   21fec:	sub	w0, w23, #0x1
   21ff0:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   21ff4:	and	w0, w0, #0xff
   21ff8:	and	w25, w5, #0xff
   21ffc:	csel	w23, w0, w23, ne  // ne = any
   22000:	cmp	w24, #0x0
   22004:	mov	x20, x1
   22008:	and	w26, w7, #0xff
   2200c:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   22010:	mov	w21, #0x0                   	// #0
   22014:	b.ne	22064 <__sanitizer_set_report_fd@@Base+0x879c>  // b.any
   22018:	add	x22, sp, #0x50
   2201c:	and	x3, x3, #0xff
   22020:	mov	x10, x22
   22024:	mov	w0, #0x0                   	// #0
   22028:	udiv	x11, x2, x3
   2202c:	mov	w8, w0
   22030:	cmp	x3, x2
   22034:	add	w0, w0, #0x1
   22038:	msub	x12, x11, x3, x2
   2203c:	mov	x2, x11
   22040:	str	x12, [x10]
   22044:	b.hi	2208c <__sanitizer_set_report_fd@@Base+0x87c4>  // b.pmore
   22048:	add	x10, x10, #0x8
   2204c:	cmp	w0, #0x1e
   22050:	b.ne	22028 <__sanitizer_set_report_fd@@Base+0x8760>  // b.any
   22054:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22058:	add	x0, x0, #0x808
   2205c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   22060:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22064:	ldr	x9, [x19]
   22068:	mov	w21, #0x1                   	// #1
   2206c:	cmp	x1, x9
   22070:	b.ls	22018 <__sanitizer_set_report_fd@@Base+0x8750>  // b.plast
   22074:	mov	w0, #0x2d                  	// #45
   22078:	strb	w0, [x9]
   2207c:	ldr	x9, [x19]
   22080:	add	x9, x9, #0x1
   22084:	str	x9, [x19]
   22088:	b	22018 <__sanitizer_set_report_fd@@Base+0x8750>
   2208c:	cmp	w0, w23
   22090:	b.lt	22190 <__sanitizer_set_report_fd@@Base+0x88c8>  // b.tstop
   22094:	ldr	x9, [x19]
   22098:	add	x0, x22, w8, sxtw #3
   2209c:	mov	w3, #0x20                  	// #32
   220a0:	mov	w2, #0x30                  	// #48
   220a4:	nop
   220a8:	ldr	x1, [x0]
   220ac:	cbnz	x1, 221bc <__sanitizer_set_report_fd@@Base+0x88f4>
   220b0:	cmp	w8, #0x0
   220b4:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   220b8:	csel	w1, w3, w2, eq  // eq = none
   220bc:	cmp	x20, x9
   220c0:	b.ls	220d4 <__sanitizer_set_report_fd@@Base+0x880c>  // b.plast
   220c4:	strb	w1, [x9]
   220c8:	ldr	x9, [x19]
   220cc:	add	x9, x9, #0x1
   220d0:	str	x9, [x19]
   220d4:	sub	w8, w8, #0x1
   220d8:	add	w21, w21, #0x1
   220dc:	cmn	w8, #0x1
   220e0:	sub	x0, x0, #0x8
   220e4:	b.ne	220a8 <__sanitizer_set_report_fd@@Base+0x87e0>  // b.any
   220e8:	eor	w25, w25, #0x1
   220ec:	tst	w24, w25
   220f0:	b.eq	22174 <__sanitizer_set_report_fd@@Base+0x88ac>  // b.none
   220f4:	cmp	x20, x9
   220f8:	b.hi	221fc <__sanitizer_set_report_fd@@Base+0x8934>  // b.pmore
   220fc:	add	w21, w21, #0x1
   22100:	cmn	w8, #0x1
   22104:	b.eq	22174 <__sanitizer_set_report_fd@@Base+0x88ac>  // b.none
   22108:	cmp	w26, #0x0
   2210c:	sub	w3, w8, #0x1
   22110:	mov	w4, #0x41                  	// #65
   22114:	mov	w0, #0x61                  	// #97
   22118:	csel	w4, w4, w0, ne  // ne = any
   2211c:	sxtw	x3, w3
   22120:	sub	w4, w4, #0xa
   22124:	mov	x5, #0xfffffffffffffffe    	// #-2
   22128:	add	x0, x22, x3, lsl #3
   2212c:	ldrb	w1, [x0, #8]
   22130:	add	w0, w1, #0x30
   22134:	add	w2, w1, w4
   22138:	cmp	w1, #0x9
   2213c:	and	w0, w0, #0xff
   22140:	and	w2, w2, #0xff
   22144:	csel	w2, w2, w0, hi  // hi = pmore
   22148:	cmp	x20, x9
   2214c:	b.ls	22160 <__sanitizer_set_report_fd@@Base+0x8898>  // b.plast
   22150:	strb	w2, [x9]
   22154:	ldr	x9, [x19]
   22158:	add	x9, x9, #0x1
   2215c:	str	x9, [x19]
   22160:	sub	x3, x3, #0x1
   22164:	cmp	x3, x5
   22168:	b.ne	22128 <__sanitizer_set_report_fd@@Base+0x8860>  // b.any
   2216c:	add	w21, w21, #0x1
   22170:	add	w21, w21, w8
   22174:	mov	w0, w21
   22178:	ldp	x21, x22, [sp, #16]
   2217c:	ldp	x23, x24, [sp, #32]
   22180:	ldp	x25, x26, [sp, #48]
   22184:	ldr	x30, [sp, #64]
   22188:	ldp	x19, x20, [sp], #320
   2218c:	ret
   22190:	sub	w2, w23, w0
   22194:	mov	w1, #0x0                   	// #0
   22198:	add	x0, x22, w0, sxtw #3
   2219c:	sbfiz	x2, x2, #3, #32
   221a0:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   221a4:	sub	w8, w23, #0x1
   221a8:	b	22094 <__sanitizer_set_report_fd@@Base+0x87cc>
   221ac:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   221b0:	add	x0, x0, #0x790
   221b4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   221b8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   221bc:	eor	w25, w25, #0x1
   221c0:	tst	w24, w25
   221c4:	b.eq	22108 <__sanitizer_set_report_fd@@Base+0x8840>  // b.none
   221c8:	b	220f4 <__sanitizer_set_report_fd@@Base+0x882c>
   221cc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   221d0:	add	x0, x0, #0x7b0
   221d4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   221d8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   221dc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   221e0:	add	x0, x0, #0x7c8
   221e4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   221e8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   221ec:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   221f0:	add	x0, x0, #0x7e8
   221f4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   221f8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   221fc:	mov	w0, #0x2d                  	// #45
   22200:	strb	w0, [x9]
   22204:	ldr	x9, [x19]
   22208:	add	x9, x9, #0x1
   2220c:	str	x9, [x19]
   22210:	b	220fc <__sanitizer_set_report_fd@@Base+0x8834>
   22214:	nop
   22218:	stp	x19, x20, [sp, #-112]!
   2221c:	stp	x23, x24, [sp, #32]
   22220:	stp	x27, x28, [sp, #64]
   22224:	str	x30, [sp, #80]
   22228:	str	x0, [sp, #104]
   2222c:	cbz	x2, 22858 <__sanitizer_set_report_fd@@Base+0x8f90>
   22230:	cmp	w1, #0x0
   22234:	b.le	22870 <__sanitizer_set_report_fd@@Base+0x8fa8>
   22238:	ldrb	w4, [x2]
   2223c:	sxtw	x19, w1
   22240:	sub	x28, x19, #0x1
   22244:	mov	x20, x0
   22248:	add	x28, x0, x28
   2224c:	cbz	w4, 22934 <__sanitizer_set_report_fd@@Base+0x906c>
   22250:	stp	x21, x22, [sp, #16]
   22254:	adrp	x21, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22258:	add	x0, x21, #0x828
   2225c:	mov	w27, #0x1                   	// #1
   22260:	mov	w24, #0x0                   	// #0
   22264:	sub	w27, w27, w0
   22268:	stp	x25, x26, [sp, #48]
   2226c:	ldr	w26, [x3, #24]
   22270:	ldp	x25, x22, [x3]
   22274:	b	222ac <__sanitizer_set_report_fd@@Base+0x89e4>
   22278:	ldr	x0, [sp, #104]
   2227c:	cmp	x28, x0
   22280:	b.ls	22294 <__sanitizer_set_report_fd@@Base+0x89cc>  // b.plast
   22284:	strb	w4, [x0]
   22288:	ldr	x0, [sp, #104]
   2228c:	add	x0, x0, #0x1
   22290:	str	x0, [sp, #104]
   22294:	mov	x0, x23
   22298:	add	w24, w24, #0x1
   2229c:	mov	x23, x2
   222a0:	mov	x2, x0
   222a4:	ldrb	w4, [x23, #1]
   222a8:	cbz	w4, 22448 <__sanitizer_set_report_fd@@Base+0x8b80>
   222ac:	cmp	w4, #0x25
   222b0:	add	x23, x2, #0x1
   222b4:	b.ne	22278 <__sanitizer_set_report_fd@@Base+0x89b0>  // b.any
   222b8:	ldrb	w1, [x2, #1]
   222bc:	cmp	w1, #0x2d
   222c0:	mov	w3, w1
   222c4:	b.ne	222d0 <__sanitizer_set_report_fd@@Base+0x8a08>  // b.any
   222c8:	ldrb	w3, [x2, #2]
   222cc:	add	x23, x2, #0x2
   222d0:	sub	w0, w3, #0x30
   222d4:	mov	w4, #0x0                   	// #0
   222d8:	and	w0, w0, #0xff
   222dc:	cmp	w0, #0x9
   222e0:	cset	w6, ls  // ls = plast
   222e4:	cmp	w3, #0x30
   222e8:	cset	w5, eq  // eq = none
   222ec:	cmp	w0, #0x9
   222f0:	b.ls	2235c <__sanitizer_set_report_fd@@Base+0x8a94>  // b.plast
   222f4:	cmp	w3, #0x2e
   222f8:	mov	w8, #0x1                   	// #1
   222fc:	mov	w2, #0xffffffff            	// #-1
   22300:	b.eq	223a0 <__sanitizer_set_report_fd@@Base+0x8ad8>  // b.none
   22304:	cmp	w3, #0x7a
   22308:	cinc	x23, x23, eq  // eq = none
   2230c:	cset	w7, eq  // eq = none
   22310:	ldrb	w3, [x23]
   22314:	b.eq	22320 <__sanitizer_set_report_fd@@Base+0x8a58>  // b.none
   22318:	cmp	w3, #0x6c
   2231c:	b.eq	223bc <__sanitizer_set_report_fd@@Base+0x8af4>  // b.none
   22320:	cmp	w1, #0x2d
   22324:	orr	w6, w6, w7
   22328:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   2232c:	mov	w9, #0x0                   	// #0
   22330:	b.ne	223e8 <__sanitizer_set_report_fd@@Base+0x8b20>  // b.any
   22334:	cmp	w3, #0x73
   22338:	b.eq	225f0 <__sanitizer_set_report_fd@@Base+0x8d28>  // b.none
   2233c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22340:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22344:	add	x2, x2, #0x850
   22348:	add	x0, x0, #0x890
   2234c:	mov	x4, #0x0                   	// #0
   22350:	mov	x3, #0x0                   	// #0
   22354:	mov	w1, #0xa9                  	// #169
   22358:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2235c:	add	w4, w4, w4, lsl #2
   22360:	add	w4, w3, w4, lsl #1
   22364:	ldrb	w3, [x23, #1]!
   22368:	sub	w4, w4, #0x30
   2236c:	sub	w2, w3, #0x30
   22370:	and	w2, w2, #0xff
   22374:	cmp	w2, #0x9
   22378:	b.hi	222f4 <__sanitizer_set_report_fd@@Base+0x8a2c>  // b.pmore
   2237c:	add	w4, w4, w4, lsl #2
   22380:	add	w4, w3, w4, lsl #1
   22384:	ldrb	w3, [x23, #1]!
   22388:	sub	w4, w4, #0x30
   2238c:	sub	w2, w3, #0x30
   22390:	and	w2, w2, #0xff
   22394:	cmp	w2, #0x9
   22398:	b.ls	2235c <__sanitizer_set_report_fd@@Base+0x8a94>  // b.plast
   2239c:	b	222f4 <__sanitizer_set_report_fd@@Base+0x8a2c>
   223a0:	ldrb	w3, [x23, #1]
   223a4:	cmp	w3, #0x2a
   223a8:	b.eq	2275c <__sanitizer_set_report_fd@@Base+0x8e94>  // b.none
   223ac:	ldrb	w3, [x23]
   223b0:	mov	w7, #0x0                   	// #0
   223b4:	cmp	w3, #0x6c
   223b8:	b.ne	22320 <__sanitizer_set_report_fd@@Base+0x8a58>  // b.any
   223bc:	ldrb	w9, [x23, #1]
   223c0:	cmp	w9, #0x6c
   223c4:	b.ne	22320 <__sanitizer_set_report_fd@@Base+0x8a58>  // b.any
   223c8:	cmp	w1, #0x2d
   223cc:	mov	w7, #0x1                   	// #1
   223d0:	ldrb	w3, [x23, #2]
   223d4:	mov	w6, w7
   223d8:	add	x23, x23, #0x2
   223dc:	mov	w9, w7
   223e0:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   223e4:	b.eq	22334 <__sanitizer_set_report_fd@@Base+0x8a6c>  // b.none
   223e8:	cmp	w3, #0x64
   223ec:	b.eq	225c0 <__sanitizer_set_report_fd@@Base+0x8cf8>  // b.none
   223f0:	b.hi	22484 <__sanitizer_set_report_fd@@Base+0x8bbc>  // b.pmore
   223f4:	cmp	w3, #0x58
   223f8:	b.eq	22574 <__sanitizer_set_report_fd@@Base+0x8cac>  // b.none
   223fc:	cmp	w3, #0x63
   22400:	b.ne	2250c <__sanitizer_set_report_fd@@Base+0x8c44>  // b.any
   22404:	cbnz	w6, 22548 <__sanitizer_set_report_fd@@Base+0x8c80>
   22408:	tbnz	w26, #31, 2270c <__sanitizer_set_report_fd@@Base+0x8e44>
   2240c:	add	x0, x25, #0xb
   22410:	mov	x1, x25
   22414:	and	x25, x0, #0xfffffffffffffff8
   22418:	ldr	x0, [sp, #104]
   2241c:	cmp	x28, x0
   22420:	b.ls	22438 <__sanitizer_set_report_fd@@Base+0x8b70>  // b.plast
   22424:	ldr	w1, [x1]
   22428:	strb	w1, [x0]
   2242c:	ldr	x0, [sp, #104]
   22430:	add	x0, x0, #0x1
   22434:	str	x0, [sp, #104]
   22438:	add	w24, w24, #0x1
   2243c:	add	x2, x23, #0x1
   22440:	ldrb	w4, [x23, #1]
   22444:	cbnz	w4, 222ac <__sanitizer_set_report_fd@@Base+0x89e4>
   22448:	ldp	x21, x22, [sp, #16]
   2244c:	ldp	x25, x26, [sp, #48]
   22450:	ldr	x0, [sp, #104]
   22454:	cmp	x28, x0
   22458:	b.cc	2293c <__sanitizer_set_report_fd@@Base+0x9074>  // b.lo, b.ul, b.last
   2245c:	add	x19, x20, x19
   22460:	cmp	x0, x19
   22464:	b.cs	2246c <__sanitizer_set_report_fd@@Base+0x8ba4>  // b.hs, b.nlast
   22468:	strb	wzr, [x0]
   2246c:	mov	w0, w24
   22470:	ldp	x23, x24, [sp, #32]
   22474:	ldp	x27, x28, [sp, #64]
   22478:	ldr	x30, [sp, #80]
   2247c:	ldp	x19, x20, [sp], #112
   22480:	ret
   22484:	cmp	w3, #0x70
   22488:	b.ne	22540 <__sanitizer_set_report_fd@@Base+0x8c78>  // b.any
   2248c:	cbnz	w6, 22548 <__sanitizer_set_report_fd@@Base+0x8c80>
   22490:	tbnz	w26, #31, 2272c <__sanitizer_set_report_fd@@Base+0x8e64>
   22494:	add	x0, x25, #0xf
   22498:	mov	x2, x25
   2249c:	and	x25, x0, #0xfffffffffffffff8
   224a0:	ldr	x2, [x2]
   224a4:	add	x1, x21, #0x828
   224a8:	ldr	x0, [sp, #104]
   224ac:	mov	w3, #0x30                  	// #48
   224b0:	cmp	x28, x0
   224b4:	b.ls	2274c <__sanitizer_set_report_fd@@Base+0x8e84>  // b.plast
   224b8:	strb	w3, [x0]
   224bc:	add	w8, w27, w1
   224c0:	ldrb	w3, [x1, #1]!
   224c4:	ldr	x0, [sp, #104]
   224c8:	add	x0, x0, #0x1
   224cc:	str	x0, [sp, #104]
   224d0:	cbnz	w3, 224b0 <__sanitizer_set_report_fd@@Base+0x8be8>
   224d4:	mov	x1, x28
   224d8:	add	x0, sp, #0x68
   224dc:	mov	w7, #0x0                   	// #0
   224e0:	mov	w6, #0x0                   	// #0
   224e4:	mov	w5, #0x1                   	// #1
   224e8:	mov	w4, #0xc                   	// #12
   224ec:	mov	w3, #0x10                  	// #16
   224f0:	str	w8, [sp, #100]
   224f4:	bl	21f90 <__sanitizer_set_report_fd@@Base+0x86c8>
   224f8:	ldr	w8, [sp, #100]
   224fc:	add	x2, x23, #0x1
   22500:	add	w8, w0, w8
   22504:	add	w24, w24, w8
   22508:	b	222a4 <__sanitizer_set_report_fd@@Base+0x89dc>
   2250c:	cmp	w3, #0x25
   22510:	b.ne	22548 <__sanitizer_set_report_fd@@Base+0x8c80>  // b.any
   22514:	cbnz	w6, 22548 <__sanitizer_set_report_fd@@Base+0x8c80>
   22518:	ldr	x0, [sp, #104]
   2251c:	cmp	x28, x0
   22520:	b.ls	22438 <__sanitizer_set_report_fd@@Base+0x8b70>  // b.plast
   22524:	strb	w3, [x0]
   22528:	add	w24, w24, #0x1
   2252c:	add	x2, x23, #0x1
   22530:	ldr	x0, [sp, #104]
   22534:	add	x0, x0, #0x1
   22538:	str	x0, [sp, #104]
   2253c:	b	22440 <__sanitizer_set_report_fd@@Base+0x8b78>
   22540:	cmp	w3, #0x6f
   22544:	b.hi	22558 <__sanitizer_set_report_fd@@Base+0x8c90>  // b.pmore
   22548:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2254c:	add	x0, x0, #0x8d0
   22550:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   22554:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22558:	cmp	w3, #0x78
   2255c:	b.eq	22574 <__sanitizer_set_report_fd@@Base+0x8cac>  // b.none
   22560:	b.hi	22548 <__sanitizer_set_report_fd@@Base+0x8c80>  // b.pmore
   22564:	cmp	w3, #0x73
   22568:	b.eq	225f0 <__sanitizer_set_report_fd@@Base+0x8d28>  // b.none
   2256c:	cmp	w3, #0x75
   22570:	b.ne	22548 <__sanitizer_set_report_fd@@Base+0x8c80>  // b.any
   22574:	cbz	w9, 226d4 <__sanitizer_set_report_fd@@Base+0x8e0c>
   22578:	tbnz	w26, #31, 22818 <__sanitizer_set_report_fd@@Base+0x8f50>
   2257c:	add	x1, x25, #0xf
   22580:	mov	x0, x25
   22584:	and	x25, x1, #0xfffffffffffffff8
   22588:	ldr	x2, [x0]
   2258c:	cmp	w3, #0x58
   22590:	cset	w7, eq  // eq = none
   22594:	cmp	w3, #0x75
   22598:	mov	w0, #0x10                  	// #16
   2259c:	mov	w3, #0xa                   	// #10
   225a0:	csel	w3, w3, w0, eq  // eq = none
   225a4:	mov	w6, #0x0                   	// #0
   225a8:	mov	x1, x28
   225ac:	add	x0, sp, #0x68
   225b0:	bl	21f90 <__sanitizer_set_report_fd@@Base+0x86c8>
   225b4:	add	w24, w24, w0
   225b8:	add	x2, x23, #0x1
   225bc:	b	222a4 <__sanitizer_set_report_fd@@Base+0x89dc>
   225c0:	cbz	w9, 226f0 <__sanitizer_set_report_fd@@Base+0x8e28>
   225c4:	tbnz	w26, #31, 22838 <__sanitizer_set_report_fd@@Base+0x8f70>
   225c8:	add	x1, x25, #0xf
   225cc:	mov	x0, x25
   225d0:	and	x25, x1, #0xfffffffffffffff8
   225d4:	ldr	x6, [x0]
   225d8:	cmp	x6, #0x0
   225dc:	cneg	x2, x6, lt  // lt = tstop
   225e0:	mov	w7, #0x0                   	// #0
   225e4:	lsr	x6, x6, #63
   225e8:	mov	w3, #0xa                   	// #10
   225ec:	b	225a8 <__sanitizer_set_report_fd@@Base+0x8ce0>
   225f0:	cbnz	w7, 22548 <__sanitizer_set_report_fd@@Base+0x8c80>
   225f4:	cmp	w1, #0x2d
   225f8:	ccmp	w0, #0x9, #0x2, ne  // ne = any
   225fc:	b.ls	2279c <__sanitizer_set_report_fd@@Base+0x8ed4>  // b.plast
   22600:	cmp	w1, #0x2d
   22604:	cneg	w4, w4, eq  // eq = none
   22608:	tbnz	w26, #31, 227c4 <__sanitizer_set_report_fd@@Base+0x8efc>
   2260c:	add	x1, x25, #0xf
   22610:	mov	x0, x25
   22614:	and	x25, x1, #0xfffffffffffffff8
   22618:	ldr	x5, [x0]
   2261c:	cbz	x5, 227e8 <__sanitizer_set_report_fd@@Base+0x8f20>
   22620:	ldrb	w3, [x5]
   22624:	cbz	w3, 22920 <__sanitizer_set_report_fd@@Base+0x9058>
   22628:	cbz	w2, 2292c <__sanitizer_set_report_fd@@Base+0x9064>
   2262c:	mov	w6, #0x0                   	// #0
   22630:	ldr	x0, [sp, #104]
   22634:	b	22644 <__sanitizer_set_report_fd@@Base+0x8d7c>
   22638:	cmp	w1, w2
   2263c:	b.eq	227bc <__sanitizer_set_report_fd@@Base+0x8ef4>  // b.none
   22640:	mov	w6, w1
   22644:	cmp	x28, x0
   22648:	b.ls	2265c <__sanitizer_set_report_fd@@Base+0x8d94>  // b.plast
   2264c:	strb	w3, [x0]
   22650:	ldr	x0, [sp, #104]
   22654:	add	x0, x0, #0x1
   22658:	str	x0, [sp, #104]
   2265c:	ldrb	w3, [x5, #1]!
   22660:	add	w1, w6, #0x1
   22664:	cbnz	w3, 22638 <__sanitizer_set_report_fd@@Base+0x8d70>
   22668:	mvn	w6, w6
   2266c:	mov	w2, w1
   22670:	cmp	w4, w6
   22674:	b.ge	226c8 <__sanitizer_set_report_fd@@Base+0x8e00>  // b.tcont
   22678:	ldr	x0, [sp, #104]
   2267c:	mov	w1, w2
   22680:	mov	w5, #0x20                  	// #32
   22684:	nop
   22688:	cmp	x28, x0
   2268c:	b.ls	226a0 <__sanitizer_set_report_fd@@Base+0x8dd8>  // b.plast
   22690:	strb	w5, [x0]
   22694:	ldr	x0, [sp, #104]
   22698:	add	x0, x0, #0x1
   2269c:	str	x0, [sp, #104]
   226a0:	add	w1, w1, #0x1
   226a4:	neg	w3, w1
   226a8:	cmp	w4, w3
   226ac:	b.lt	22688 <__sanitizer_set_report_fd@@Base+0x8dc0>  // b.tstop
   226b0:	mvn	w0, w2
   226b4:	add	w2, w2, #0x1
   226b8:	cmp	w4, w0
   226bc:	sub	w4, w0, w4
   226c0:	csel	w4, w4, wzr, le
   226c4:	add	w2, w4, w2
   226c8:	add	w24, w24, w2
   226cc:	add	x2, x23, #0x1
   226d0:	b	222a4 <__sanitizer_set_report_fd@@Base+0x89dc>
   226d4:	cbnz	w7, 22578 <__sanitizer_set_report_fd@@Base+0x8cb0>
   226d8:	tbnz	w26, #31, 228b8 <__sanitizer_set_report_fd@@Base+0x8ff0>
   226dc:	mov	x0, x25
   226e0:	add	x1, x25, #0xb
   226e4:	and	x25, x1, #0xfffffffffffffff8
   226e8:	ldr	w2, [x0]
   226ec:	b	2258c <__sanitizer_set_report_fd@@Base+0x8cc4>
   226f0:	cbnz	w7, 225c4 <__sanitizer_set_report_fd@@Base+0x8cfc>
   226f4:	tbnz	w26, #31, 22894 <__sanitizer_set_report_fd@@Base+0x8fcc>
   226f8:	mov	x0, x25
   226fc:	add	x1, x25, #0xb
   22700:	and	x25, x1, #0xfffffffffffffff8
   22704:	ldrsw	x6, [x0]
   22708:	b	225d8 <__sanitizer_set_report_fd@@Base+0x8d10>
   2270c:	add	w0, w26, #0x8
   22710:	cmp	w0, #0x0
   22714:	b.le	22784 <__sanitizer_set_report_fd@@Base+0x8ebc>
   22718:	add	x2, x25, #0xb
   2271c:	mov	x1, x25
   22720:	mov	w26, w0
   22724:	and	x25, x2, #0xfffffffffffffff8
   22728:	b	22418 <__sanitizer_set_report_fd@@Base+0x8b50>
   2272c:	add	w0, w26, #0x8
   22730:	cmp	w0, #0x0
   22734:	b.le	22790 <__sanitizer_set_report_fd@@Base+0x8ec8>
   22738:	add	x1, x25, #0xf
   2273c:	mov	x2, x25
   22740:	mov	w26, w0
   22744:	and	x25, x1, #0xfffffffffffffff8
   22748:	b	224a0 <__sanitizer_set_report_fd@@Base+0x8bd8>
   2274c:	add	w8, w27, w1
   22750:	ldrb	w3, [x1, #1]!
   22754:	cbnz	w3, 224b0 <__sanitizer_set_report_fd@@Base+0x8be8>
   22758:	b	224d4 <__sanitizer_set_report_fd@@Base+0x8c0c>
   2275c:	add	x7, x23, #0x2
   22760:	tbnz	w26, #31, 227f8 <__sanitizer_set_report_fd@@Base+0x8f30>
   22764:	add	x3, x25, #0xb
   22768:	mov	x2, x25
   2276c:	and	x25, x3, #0xfffffffffffffff8
   22770:	ldr	w2, [x2]
   22774:	ldrb	w3, [x23, #2]
   22778:	mov	x23, x7
   2277c:	lsr	w8, w2, #31
   22780:	b	22304 <__sanitizer_set_report_fd@@Base+0x8a3c>
   22784:	add	x1, x22, w26, sxtw
   22788:	mov	w26, w0
   2278c:	b	22418 <__sanitizer_set_report_fd@@Base+0x8b50>
   22790:	add	x2, x22, w26, sxtw
   22794:	mov	w26, w0
   22798:	b	224a0 <__sanitizer_set_report_fd@@Base+0x8bd8>
   2279c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   227a0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   227a4:	add	x2, x2, #0x928
   227a8:	add	x0, x0, #0x890
   227ac:	mov	x4, #0x0                   	// #0
   227b0:	mov	x3, #0x0                   	// #0
   227b4:	mov	w1, #0xc6                  	// #198
   227b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   227bc:	neg	w6, w2
   227c0:	b	22670 <__sanitizer_set_report_fd@@Base+0x8da8>
   227c4:	add	w1, w26, #0x8
   227c8:	cmp	w1, #0x0
   227cc:	b.le	22888 <__sanitizer_set_report_fd@@Base+0x8fc0>
   227d0:	mov	x0, x25
   227d4:	add	x3, x25, #0xf
   227d8:	mov	w26, w1
   227dc:	and	x25, x3, #0xfffffffffffffff8
   227e0:	ldr	x5, [x0]
   227e4:	cbnz	x5, 22620 <__sanitizer_set_report_fd@@Base+0x8d58>
   227e8:	adrp	x5, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   227ec:	mov	w3, #0x3c                  	// #60
   227f0:	add	x5, x5, #0x830
   227f4:	b	22628 <__sanitizer_set_report_fd@@Base+0x8d60>
   227f8:	add	w3, w26, #0x8
   227fc:	cmp	w3, #0x0
   22800:	b.le	228dc <__sanitizer_set_report_fd@@Base+0x9014>
   22804:	add	x8, x25, #0xb
   22808:	mov	x2, x25
   2280c:	mov	w26, w3
   22810:	and	x25, x8, #0xfffffffffffffff8
   22814:	b	22770 <__sanitizer_set_report_fd@@Base+0x8ea8>
   22818:	add	w1, w26, #0x8
   2281c:	cmp	w1, #0x0
   22820:	b.le	228e8 <__sanitizer_set_report_fd@@Base+0x9020>
   22824:	add	x2, x25, #0xf
   22828:	mov	x0, x25
   2282c:	mov	w26, w1
   22830:	and	x25, x2, #0xfffffffffffffff8
   22834:	b	22588 <__sanitizer_set_report_fd@@Base+0x8cc0>
   22838:	add	w1, w26, #0x8
   2283c:	cmp	w1, #0x0
   22840:	b.le	228f4 <__sanitizer_set_report_fd@@Base+0x902c>
   22844:	add	x2, x25, #0xf
   22848:	mov	x0, x25
   2284c:	mov	w26, w1
   22850:	and	x25, x2, #0xfffffffffffffff8
   22854:	b	225d4 <__sanitizer_set_report_fd@@Base+0x8d0c>
   22858:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2285c:	add	x0, x0, #0x838
   22860:	stp	x21, x22, [sp, #16]
   22864:	stp	x25, x26, [sp, #48]
   22868:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2286c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22870:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22874:	add	x0, x0, #0x840
   22878:	stp	x21, x22, [sp, #16]
   2287c:	stp	x25, x26, [sp, #48]
   22880:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   22884:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22888:	add	x0, x22, w26, sxtw
   2288c:	mov	w26, w1
   22890:	b	22618 <__sanitizer_set_report_fd@@Base+0x8d50>
   22894:	add	w1, w26, #0x8
   22898:	cmp	w1, #0x0
   2289c:	b.le	22900 <__sanitizer_set_report_fd@@Base+0x9038>
   228a0:	mov	x0, x25
   228a4:	add	x2, x25, #0xb
   228a8:	mov	w26, w1
   228ac:	and	x25, x2, #0xfffffffffffffff8
   228b0:	ldrsw	x6, [x0]
   228b4:	b	225d8 <__sanitizer_set_report_fd@@Base+0x8d10>
   228b8:	add	w1, w26, #0x8
   228bc:	cmp	w1, #0x0
   228c0:	b.le	22910 <__sanitizer_set_report_fd@@Base+0x9048>
   228c4:	mov	x0, x25
   228c8:	add	x2, x25, #0xb
   228cc:	and	x25, x2, #0xfffffffffffffff8
   228d0:	mov	w26, w1
   228d4:	ldr	w2, [x0]
   228d8:	b	2258c <__sanitizer_set_report_fd@@Base+0x8cc4>
   228dc:	add	x2, x22, w26, sxtw
   228e0:	mov	w26, w3
   228e4:	b	22770 <__sanitizer_set_report_fd@@Base+0x8ea8>
   228e8:	add	x0, x22, w26, sxtw
   228ec:	mov	w26, w1
   228f0:	b	22588 <__sanitizer_set_report_fd@@Base+0x8cc0>
   228f4:	add	x0, x22, w26, sxtw
   228f8:	mov	w26, w1
   228fc:	b	225d4 <__sanitizer_set_report_fd@@Base+0x8d0c>
   22900:	add	x0, x22, w26, sxtw
   22904:	mov	w26, w1
   22908:	ldrsw	x6, [x0]
   2290c:	b	225d8 <__sanitizer_set_report_fd@@Base+0x8d10>
   22910:	add	x0, x22, w26, sxtw
   22914:	mov	w26, w1
   22918:	ldr	w2, [x0]
   2291c:	b	2258c <__sanitizer_set_report_fd@@Base+0x8cc4>
   22920:	mov	w6, #0x0                   	// #0
   22924:	mov	w2, #0x0                   	// #0
   22928:	b	22670 <__sanitizer_set_report_fd@@Base+0x8da8>
   2292c:	mov	w6, #0x0                   	// #0
   22930:	b	22670 <__sanitizer_set_report_fd@@Base+0x8da8>
   22934:	mov	w24, #0x0                   	// #0
   22938:	b	22454 <__sanitizer_set_report_fd@@Base+0x8b8c>
   2293c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22940:	add	x0, x0, #0x958
   22944:	stp	x21, x22, [sp, #16]
   22948:	stp	x25, x26, [sp, #48]
   2294c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   22950:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22954:	nop
   22958:	adrp	x1, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   2295c:	str	x0, [x1, #3272]
   22960:	ret
   22964:	nop

0000000000022968 <OnPrint@@Base>:
   22968:	ret
   2296c:	nop
   22970:	sub	sp, sp, #0x100
   22974:	mov	w9, #0xffffffd8            	// #-40
   22978:	add	x10, sp, #0xd0
   2297c:	add	x11, sp, #0x100
   22980:	mov	w8, #0xffffff80            	// #-128
   22984:	stp	x11, x11, [sp, #48]
   22988:	str	x10, [sp, #64]
   2298c:	stp	w9, w8, [sp, #72]
   22990:	ldp	x10, x11, [sp, #48]
   22994:	str	x30, [sp]
   22998:	ldp	x8, x9, [sp, #64]
   2299c:	stp	x10, x11, [sp, #16]
   229a0:	stp	x8, x9, [sp, #32]
   229a4:	str	q0, [sp, #80]
   229a8:	str	q1, [sp, #96]
   229ac:	str	q2, [sp, #112]
   229b0:	str	q3, [sp, #128]
   229b4:	str	q4, [sp, #144]
   229b8:	str	q5, [sp, #160]
   229bc:	str	q6, [sp, #176]
   229c0:	str	q7, [sp, #192]
   229c4:	stp	x3, x4, [sp, #216]
   229c8:	add	x3, sp, #0x10
   229cc:	stp	x5, x6, [sp, #232]
   229d0:	str	x7, [sp, #248]
   229d4:	bl	22218 <__sanitizer_set_report_fd@@Base+0x8950>
   229d8:	ldr	x30, [sp]
   229dc:	add	sp, sp, #0x100
   229e0:	ret
   229e4:	nop
   229e8:	stp	x19, x20, [sp, #-176]!
   229ec:	and	w0, w0, #0xff
   229f0:	mov	x19, x1
   229f4:	stp	x23, x24, [sp, #32]
   229f8:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   229fc:	adrp	x24, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22a00:	stp	x27, x28, [sp, #64]
   22a04:	mov	x27, x3
   22a08:	add	x24, x24, #0x9a0
   22a0c:	ldr	x23, [x23, #4040]
   22a10:	stp	x21, x22, [sp, #16]
   22a14:	mov	x21, x1
   22a18:	mov	x22, x2
   22a1c:	stp	x25, x26, [sp, #48]
   22a20:	add	x25, sp, #0x70
   22a24:	str	w0, [sp, #104]
   22a28:	mov	w26, #0x0                   	// #0
   22a2c:	ldp	x2, x3, [x3]
   22a30:	mov	w20, #0x190                 	// #400
   22a34:	ldp	x0, x1, [x27, #16]
   22a38:	str	x30, [sp, #80]
   22a3c:	stp	x2, x3, [sp, #144]
   22a40:	stp	x0, x1, [sp, #160]
   22a44:	ldr	w0, [sp, #104]
   22a48:	cbz	w0, 22aa8 <OnPrint@@Base+0x140>
   22a4c:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   22a50:	mov	x28, x0
   22a54:	bl	15da0 <__sancov_default_options@@Base+0x32d0>
   22a58:	cmp	x0, #0x0
   22a5c:	ldrb	w2, [x23, #48]
   22a60:	cset	w6, ne  // ne = any
   22a64:	mov	x3, x0
   22a68:	sxtw	x1, w20
   22a6c:	mov	x0, x19
   22a70:	tst	w6, w2
   22a74:	mov	w5, #0x0                   	// #0
   22a78:	b.ne	22bc4 <OnPrint@@Base+0x25c>  // b.any
   22a7c:	mov	w3, w28
   22a80:	mov	x2, x24
   22a84:	str	w5, [sp, #108]
   22a88:	bl	22970 <OnPrint@@Base+0x8>
   22a8c:	ldr	w5, [sp, #108]
   22a90:	add	w28, w5, w0
   22a94:	cmp	w20, w28
   22a98:	b.le	22b14 <OnPrint@@Base+0x1ac>
   22a9c:	add	x0, x19, w28, sxtw
   22aa0:	sub	w1, w20, w28
   22aa4:	b	22ab4 <OnPrint@@Base+0x14c>
   22aa8:	mov	w1, w20
   22aac:	mov	x0, x19
   22ab0:	mov	w28, #0x0                   	// #0
   22ab4:	ldp	x6, x7, [x27]
   22ab8:	mov	x3, x25
   22abc:	ldp	x8, x9, [x27, #16]
   22ac0:	mov	x2, x22
   22ac4:	stp	x6, x7, [x25]
   22ac8:	stp	x8, x9, [x25, #16]
   22acc:	bl	22218 <__sanitizer_set_report_fd@@Base+0x8950>
   22ad0:	add	w0, w28, w0
   22ad4:	cmp	w20, w0
   22ad8:	b.gt	22b60 <OnPrint@@Base+0x1f8>
   22adc:	cbnz	w26, 22b54 <OnPrint@@Base+0x1ec>
   22ae0:	ldp	x2, x3, [sp, #160]
   22ae4:	stp	x2, x3, [x27, #16]
   22ae8:	mov	w26, #0x1                   	// #1
   22aec:	ldp	x0, x1, [sp, #144]
   22af0:	stp	x0, x1, [x27]
   22af4:	mov	w2, #0x0                   	// #0
   22af8:	mov	w20, #0x4000                	// #16384
   22afc:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22b00:	mov	x0, #0x4000                	// #16384
   22b04:	add	x1, x1, #0x970
   22b08:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   22b0c:	mov	x19, x0
   22b10:	b	22a44 <OnPrint@@Base+0xdc>
   22b14:	cbz	w26, 22ae0 <OnPrint@@Base+0x178>
   22b18:	mov	w0, #0x3fff                	// #16383
   22b1c:	cmp	w28, w0
   22b20:	b.gt	22bec <OnPrint@@Base+0x284>
   22b24:	ldp	x6, x7, [x27]
   22b28:	mov	x2, x22
   22b2c:	ldp	x4, x5, [x27, #16]
   22b30:	add	x3, sp, #0x70
   22b34:	sub	w1, w20, w28
   22b38:	add	x0, x19, w28, sxtw
   22b3c:	stp	x6, x7, [sp, #112]
   22b40:	stp	x4, x5, [sp, #128]
   22b44:	bl	22218 <__sanitizer_set_report_fd@@Base+0x8950>
   22b48:	add	w0, w28, w0
   22b4c:	cmp	w20, w0
   22b50:	b.gt	22b60 <OnPrint@@Base+0x1f8>
   22b54:	mov	w1, #0x3fff                	// #16383
   22b58:	cmp	w0, w1
   22b5c:	b.gt	22bec <OnPrint@@Base+0x284>
   22b60:	mov	x0, x19
   22b64:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   22b68:	mov	x0, x19
   22b6c:	bl	15888 <__sancov_default_options@@Base+0x2db8>
   22b70:	mov	x0, x19
   22b74:	bl	6680 <OnPrint@plt>
   22b78:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   22b7c:	ldr	x1, [x0, #3272]
   22b80:	cbz	x1, 22b8c <OnPrint@@Base+0x224>
   22b84:	mov	x0, x19
   22b88:	blr	x1
   22b8c:	mov	x0, x19
   22b90:	bl	1ff48 <__sanitizer_set_report_fd@@Base+0x6680>
   22b94:	cmp	x19, x21
   22b98:	b.eq	22ba8 <OnPrint@@Base+0x240>  // b.none
   22b9c:	sxtw	x1, w20
   22ba0:	mov	x0, x19
   22ba4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   22ba8:	ldp	x21, x22, [sp, #16]
   22bac:	ldp	x23, x24, [sp, #32]
   22bb0:	ldp	x25, x26, [sp, #48]
   22bb4:	ldp	x27, x28, [sp, #64]
   22bb8:	ldr	x30, [sp, #80]
   22bbc:	ldp	x19, x20, [sp], #176
   22bc0:	ret
   22bc4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22bc8:	add	x2, x2, #0x978
   22bcc:	bl	22970 <OnPrint@@Base+0x8>
   22bd0:	mov	w5, w0
   22bd4:	cmp	w20, w0
   22bd8:	b.le	22bfc <OnPrint@@Base+0x294>
   22bdc:	sub	w1, w20, w0
   22be0:	add	x0, x19, w0, sxtw
   22be4:	sxtw	x1, w1
   22be8:	b	22a7c <OnPrint@@Base+0x114>
   22bec:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22bf0:	add	x0, x0, #0x980
   22bf4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   22bf8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22bfc:	cbz	w26, 22ae0 <OnPrint@@Base+0x178>
   22c00:	mov	w0, #0x3fff                	// #16383
   22c04:	cmp	w5, w0
   22c08:	b.gt	22bec <OnPrint@@Base+0x284>
   22c0c:	sub	w1, w20, w5
   22c10:	mov	w3, w28
   22c14:	add	x0, x19, w5, sxtw
   22c18:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22c1c:	sxtw	x1, w1
   22c20:	add	x2, x2, #0x9a0
   22c24:	str	w5, [sp, #104]
   22c28:	bl	22970 <OnPrint@@Base+0x8>
   22c2c:	ldr	w5, [sp, #104]
   22c30:	add	w28, w5, w0
   22c34:	cmp	w20, w28
   22c38:	b.le	22b18 <OnPrint@@Base+0x1b0>
   22c3c:	b	22b24 <OnPrint@@Base+0x1bc>
   22c40:	mov	x4, x2
   22c44:	sub	sp, sp, #0x1c0
   22c48:	mov	x2, x1
   22c4c:	add	x3, sp, #0x10
   22c50:	add	x1, sp, #0x30
   22c54:	ldp	x6, x7, [x4]
   22c58:	stp	x6, x7, [sp, #16]
   22c5c:	ldp	x4, x5, [x4, #16]
   22c60:	str	x30, [sp]
   22c64:	stp	x4, x5, [sp, #32]
   22c68:	bl	229e8 <OnPrint@@Base+0x80>
   22c6c:	ldr	x30, [sp]
   22c70:	add	sp, sp, #0x1c0
   22c74:	ret
   22c78:	sub	sp, sp, #0x110
   22c7c:	mov	w9, #0xffffffc8            	// #-56
   22c80:	add	x11, sp, #0xd0
   22c84:	add	x10, sp, #0x110
   22c88:	mov	w8, #0xffffff80            	// #-128
   22c8c:	stp	x10, x10, [sp, #48]
   22c90:	mov	x10, x0
   22c94:	mov	w0, #0x0                   	// #0
   22c98:	str	x11, [sp, #64]
   22c9c:	stp	w9, w8, [sp, #72]
   22ca0:	ldp	x12, x13, [sp, #48]
   22ca4:	str	x30, [sp]
   22ca8:	ldp	x8, x9, [sp, #64]
   22cac:	stp	x12, x13, [sp, #16]
   22cb0:	stp	x8, x9, [sp, #32]
   22cb4:	str	q0, [sp, #80]
   22cb8:	str	q1, [sp, #96]
   22cbc:	str	q2, [sp, #112]
   22cc0:	str	q3, [sp, #128]
   22cc4:	str	q4, [sp, #144]
   22cc8:	str	q5, [sp, #160]
   22ccc:	str	q6, [sp, #176]
   22cd0:	str	q7, [sp, #192]
   22cd4:	stp	x1, x2, [sp, #216]
   22cd8:	add	x2, sp, #0x10
   22cdc:	mov	x1, x10
   22ce0:	stp	x3, x4, [sp, #232]
   22ce4:	stp	x5, x6, [sp, #248]
   22ce8:	str	x7, [sp, #264]
   22cec:	bl	22c40 <OnPrint@@Base+0x2d8>
   22cf0:	ldr	x30, [sp]
   22cf4:	add	sp, sp, #0x110
   22cf8:	ret
   22cfc:	nop
   22d00:	sub	sp, sp, #0x110
   22d04:	mov	w9, #0xffffffc8            	// #-56
   22d08:	add	x11, sp, #0xd0
   22d0c:	add	x10, sp, #0x110
   22d10:	mov	w8, #0xffffff80            	// #-128
   22d14:	stp	x10, x10, [sp, #48]
   22d18:	mov	x10, x0
   22d1c:	mov	w0, #0x1                   	// #1
   22d20:	str	x11, [sp, #64]
   22d24:	stp	w9, w8, [sp, #72]
   22d28:	ldp	x12, x13, [sp, #48]
   22d2c:	str	x30, [sp]
   22d30:	ldp	x8, x9, [sp, #64]
   22d34:	stp	x12, x13, [sp, #16]
   22d38:	stp	x8, x9, [sp, #32]
   22d3c:	str	q0, [sp, #80]
   22d40:	str	q1, [sp, #96]
   22d44:	str	q2, [sp, #112]
   22d48:	str	q3, [sp, #128]
   22d4c:	str	q4, [sp, #144]
   22d50:	str	q5, [sp, #160]
   22d54:	str	q6, [sp, #176]
   22d58:	str	q7, [sp, #192]
   22d5c:	stp	x1, x2, [sp, #216]
   22d60:	add	x2, sp, #0x10
   22d64:	mov	x1, x10
   22d68:	stp	x3, x4, [sp, #232]
   22d6c:	stp	x5, x6, [sp, #248]
   22d70:	str	x7, [sp, #264]
   22d74:	bl	22c40 <OnPrint@@Base+0x2d8>
   22d78:	ldr	x30, [sp]
   22d7c:	add	sp, sp, #0x110
   22d80:	ret
   22d84:	nop
   22d88:	stp	x19, x30, [sp, #-256]!
   22d8c:	mov	x19, x0
   22d90:	str	q0, [sp, #80]
   22d94:	str	q1, [sp, #96]
   22d98:	ldr	x8, [x0, #16]
   22d9c:	str	q2, [sp, #112]
   22da0:	ldr	x0, [x0, #24]
   22da4:	str	q3, [sp, #128]
   22da8:	str	q4, [sp, #144]
   22dac:	cmp	x0, x8
   22db0:	str	q5, [sp, #160]
   22db4:	str	q6, [sp, #176]
   22db8:	str	q7, [sp, #192]
   22dbc:	stp	x2, x3, [sp, #208]
   22dc0:	stp	x4, x5, [sp, #224]
   22dc4:	stp	x6, x7, [sp, #240]
   22dc8:	b.cs	22e3c <OnPrint@@Base+0x4d4>  // b.hs, b.nlast
   22dcc:	mov	w4, #0xffffff80            	// #-128
   22dd0:	mov	w3, #0xffffffd0            	// #-48
   22dd4:	stp	w3, w4, [sp, #72]
   22dd8:	add	x5, sp, #0xd0
   22ddc:	ldr	x4, [x19]
   22de0:	add	x2, sp, #0x100
   22de4:	stp	x2, x2, [sp, #48]
   22de8:	mov	x2, x1
   22dec:	sub	w1, w8, w0
   22df0:	str	x5, [sp, #64]
   22df4:	add	x0, x4, x0
   22df8:	ldp	x6, x7, [sp, #48]
   22dfc:	add	x3, sp, #0x10
   22e00:	ldp	x4, x5, [sp, #64]
   22e04:	stp	x6, x7, [sp, #16]
   22e08:	stp	x4, x5, [sp, #32]
   22e0c:	bl	22218 <__sanitizer_set_report_fd@@Base+0x8950>
   22e10:	ldr	x1, [x19]
   22e14:	ldr	x0, [x19, #24]
   22e18:	add	x0, x1, x0
   22e1c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   22e20:	ldp	x4, x3, [x19, #16]
   22e24:	add	x3, x0, x3
   22e28:	str	x3, [x19, #24]
   22e2c:	cmp	x3, x4
   22e30:	b.cs	22e5c <OnPrint@@Base+0x4f4>  // b.hs, b.nlast
   22e34:	ldp	x19, x30, [sp], #256
   22e38:	ret
   22e3c:	mov	x3, x0
   22e40:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22e44:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22e48:	mov	x4, x8
   22e4c:	add	x2, x2, #0x9a8
   22e50:	add	x0, x0, #0x890
   22e54:	mov	w1, #0x15c                 	// #348
   22e58:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22e5c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22e60:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22e64:	add	x2, x2, #0x9a8
   22e68:	add	x0, x0, #0x890
   22e6c:	mov	w1, #0x162                 	// #354
   22e70:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22e74:	nop
   22e78:	and	w0, w0, #0xff
   22e7c:	sub	w0, w0, #0x30
   22e80:	and	w0, w0, #0xff
   22e84:	cmp	w0, #0xa
   22e88:	cset	w0, cc  // cc = lo, ul, last
   22e8c:	ret
   22e90:	ldr	x2, [x0]
   22e94:	mov	x3, x0
   22e98:	ldrb	w1, [x2]
   22e9c:	sub	w1, w1, #0x30
   22ea0:	and	w0, w1, #0xff
   22ea4:	cmp	w0, #0x9
   22ea8:	mov	x0, #0x0                   	// #0
   22eac:	b.ls	22eb4 <OnPrint@@Base+0x54c>  // b.plast
   22eb0:	ret
   22eb4:	add	x2, x2, #0x1
   22eb8:	str	x2, [x3]
   22ebc:	sxtw	x4, w1
   22ec0:	add	x0, x0, x0, lsl #2
   22ec4:	ldrb	w1, [x2]
   22ec8:	add	x0, x4, x0, lsl #1
   22ecc:	sub	w1, w1, #0x30
   22ed0:	and	w4, w1, #0xff
   22ed4:	cmp	w4, #0x9
   22ed8:	b.ls	22eb4 <OnPrint@@Base+0x54c>  // b.plast
   22edc:	ret
   22ee0:	and	w1, w0, #0xff
   22ee4:	sub	w0, w1, #0x30
   22ee8:	and	w0, w0, #0xff
   22eec:	cmp	w0, #0x9
   22ef0:	b.ls	22f1c <OnPrint@@Base+0x5b4>  // b.plast
   22ef4:	sub	w2, w1, #0x61
   22ef8:	mov	w0, #0x1                   	// #1
   22efc:	and	w2, w2, #0xff
   22f00:	cmp	w2, #0x5
   22f04:	b.ls	22f18 <OnPrint@@Base+0x5b0>  // b.plast
   22f08:	sub	w1, w1, #0x41
   22f0c:	and	w1, w1, #0xff
   22f10:	cmp	w1, #0x5
   22f14:	cset	w0, ls  // ls = plast
   22f18:	ret
   22f1c:	mov	w0, #0x1                   	// #1
   22f20:	ret
   22f24:	nop
   22f28:	mov	x4, x0
   22f2c:	mov	x0, #0x0                   	// #0
   22f30:	ldr	x3, [x4]
   22f34:	b	22f58 <OnPrint@@Base+0x5f0>
   22f38:	cmp	w6, #0x5
   22f3c:	b.ls	22f88 <OnPrint@@Base+0x620>  // b.plast
   22f40:	cmp	w5, #0x5
   22f44:	b.hi	22f90 <OnPrint@@Base+0x628>  // b.pmore
   22f48:	sxtw	x1, w1
   22f4c:	add	x3, x3, #0x1
   22f50:	add	x0, x1, x0, lsl #4
   22f54:	str	x3, [x4]
   22f58:	ldrb	w2, [x3]
   22f5c:	sub	w7, w2, #0x30
   22f60:	sub	w6, w2, #0x61
   22f64:	sub	w5, w2, #0x41
   22f68:	and	w8, w7, #0xff
   22f6c:	sub	w1, w2, #0x37
   22f70:	and	w6, w6, #0xff
   22f74:	and	w5, w5, #0xff
   22f78:	cmp	w8, #0x9
   22f7c:	b.hi	22f38 <OnPrint@@Base+0x5d0>  // b.pmore
   22f80:	mov	w1, w7
   22f84:	b	22f48 <OnPrint@@Base+0x5e0>
   22f88:	sub	w1, w2, #0x57
   22f8c:	b	22f48 <OnPrint@@Base+0x5e0>
   22f90:	ret
   22f94:	nop
   22f98:	mov	x2, x0
   22f9c:	mov	x0, x1
   22fa0:	ldr	x1, [x2, #72]
   22fa4:	cbnz	x1, 22fc4 <OnPrint@@Base+0x65c>
   22fa8:	ldr	x1, [x2]
   22fac:	mov	x5, #0x0                   	// #0
   22fb0:	ldr	x3, [x2, #40]
   22fb4:	ldr	x2, [x2, #8]
   22fb8:	ubfx	w4, w3, #1, #1
   22fbc:	ubfx	w3, w3, #2, #1
   22fc0:	b	15a50 <__sancov_default_options@@Base+0x2f80>
   22fc4:	str	x30, [sp, #-16]!
   22fc8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22fcc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   22fd0:	add	x2, x2, #0x9c8
   22fd4:	add	x0, x0, #0x9e0
   22fd8:	mov	x4, #0x0                   	// #0
   22fdc:	mov	x3, #0x0                   	// #0
   22fe0:	mov	w1, #0x43                  	// #67
   22fe4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22fe8:	stp	x19, x20, [sp, #-64]!
   22fec:	tst	w1, #0xff
   22ff0:	mov	x19, x0
   22ff4:	str	x30, [sp, #16]
   22ff8:	b.ne	23024 <OnPrint@@Base+0x6bc>  // b.any
   22ffc:	bl	23850 <OnPrint@@Base+0xee8>
   23000:	ldr	x0, [x19, #8]
   23004:	cbz	x0, 2309c <OnPrint@@Base+0x734>
   23008:	ldr	x0, [x19, #16]
   2300c:	cbz	x0, 23120 <OnPrint@@Base+0x7b8>
   23010:	ldr	x0, [x19]
   23014:	ldr	x30, [sp, #16]
   23018:	str	x0, [x19, #24]
   2301c:	ldp	x19, x20, [sp], #64
   23020:	ret
   23024:	add	x0, sp, #0x28
   23028:	bl	23850 <OnPrint@@Base+0xee8>
   2302c:	ldr	x0, [sp, #48]
   23030:	cbnz	x0, 230bc <OnPrint@@Base+0x754>
   23034:	mov	x0, x19
   23038:	bl	23850 <OnPrint@@Base+0xee8>
   2303c:	ldr	x0, [x19, #8]
   23040:	cbnz	x0, 23008 <OnPrint@@Base+0x6a0>
   23044:	adrp	x20, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23048:	add	x0, x20, #0xcd0
   2304c:	mov	w2, #0x1                   	// #1
   23050:	ldxrb	w1, [x0]
   23054:	stxrb	w3, w2, [x0]
   23058:	cbnz	w3, 23050 <OnPrint@@Base+0x6e8>
   2305c:	dmb	ish
   23060:	tst	w1, #0xff
   23064:	b.eq	2306c <OnPrint@@Base+0x704>  // b.none
   23068:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   2306c:	add	x0, x20, #0xcd0
   23070:	add	x2, x0, #0x8
   23074:	ldr	x1, [x0, #8]
   23078:	cbz	x1, 2308c <OnPrint@@Base+0x724>
   2307c:	ldp	x0, x1, [x0, #8]
   23080:	stp	x0, x1, [x19]
   23084:	ldr	x0, [x2, #16]
   23088:	str	x0, [x19, #16]
   2308c:	dmb	ish
   23090:	strb	wzr, [x20, #3280]
   23094:	ldr	x0, [x19, #8]
   23098:	cbnz	x0, 23008 <OnPrint@@Base+0x6a0>
   2309c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   230a0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   230a4:	add	x2, x2, #0xa28
   230a8:	add	x0, x0, #0x9e0
   230ac:	mov	x4, #0x0                   	// #0
   230b0:	mov	x3, #0x0                   	// #0
   230b4:	mov	w1, #0x51                  	// #81
   230b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   230bc:	adrp	x20, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   230c0:	add	x0, x20, #0xcd0
   230c4:	mov	w2, #0x1                   	// #1
   230c8:	ldxrb	w1, [x0]
   230cc:	stxrb	w3, w2, [x0]
   230d0:	cbnz	w3, 230c8 <OnPrint@@Base+0x760>
   230d4:	dmb	ish
   230d8:	tst	w1, #0xff
   230dc:	b.eq	230e4 <OnPrint@@Base+0x77c>  // b.none
   230e0:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   230e4:	add	x0, x20, #0xcd0
   230e8:	ldr	x1, [x0, #16]
   230ec:	cbnz	x1, 23140 <OnPrint@@Base+0x7d8>
   230f0:	add	x0, x20, #0xcd0
   230f4:	ldp	x2, x3, [sp, #40]
   230f8:	ldr	x1, [sp, #56]
   230fc:	stp	x2, x3, [x0, #8]
   23100:	str	x1, [x0, #24]
   23104:	dmb	ish
   23108:	strb	wzr, [x20, #3280]
   2310c:	mov	x0, x19
   23110:	bl	23850 <OnPrint@@Base+0xee8>
   23114:	ldr	x0, [x19, #8]
   23118:	cbnz	x0, 23008 <OnPrint@@Base+0x6a0>
   2311c:	b	23044 <OnPrint@@Base+0x6dc>
   23120:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23124:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23128:	add	x2, x2, #0xa58
   2312c:	add	x0, x0, #0x9e0
   23130:	mov	x4, #0x0                   	// #0
   23134:	mov	x3, #0x0                   	// #0
   23138:	mov	w1, #0x52                  	// #82
   2313c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23140:	ldr	x0, [x0, #8]
   23144:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23148:	b	230f0 <OnPrint@@Base+0x788>
   2314c:	nop
   23150:	adrp	x2, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23154:	mov	x1, x0
   23158:	ldr	x0, [x0]
   2315c:	ldr	x2, [x2, #3288]
   23160:	cmp	x0, x2
   23164:	b.eq	23170 <OnPrint@@Base+0x808>  // b.none
   23168:	ldr	x1, [x1, #8]
   2316c:	b	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23170:	ret
   23174:	nop
   23178:	ldr	x1, [x0]
   2317c:	str	x1, [x0, #24]
   23180:	ret
   23184:	nop
   23188:	stp	x19, x30, [sp, #-48]!
   2318c:	add	x0, sp, #0x18
   23190:	bl	23850 <OnPrint@@Base+0xee8>
   23194:	ldr	x0, [sp, #32]
   23198:	cbnz	x0, 231a4 <OnPrint@@Base+0x83c>
   2319c:	ldp	x19, x30, [sp], #48
   231a0:	ret
   231a4:	adrp	x19, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   231a8:	add	x0, x19, #0xcd0
   231ac:	mov	w2, #0x1                   	// #1
   231b0:	ldxrb	w1, [x0]
   231b4:	stxrb	w3, w2, [x0]
   231b8:	cbnz	w3, 231b0 <OnPrint@@Base+0x848>
   231bc:	dmb	ish
   231c0:	tst	w1, #0xff
   231c4:	b.eq	231cc <OnPrint@@Base+0x864>  // b.none
   231c8:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   231cc:	add	x0, x19, #0xcd0
   231d0:	ldr	x1, [x0, #16]
   231d4:	cbnz	x1, 231fc <OnPrint@@Base+0x894>
   231d8:	add	x0, x19, #0xcd0
   231dc:	ldp	x2, x3, [sp, #24]
   231e0:	ldr	x1, [sp, #40]
   231e4:	stp	x2, x3, [x0, #8]
   231e8:	str	x1, [x0, #24]
   231ec:	dmb	ish
   231f0:	strb	wzr, [x19, #3280]
   231f4:	ldp	x19, x30, [sp], #48
   231f8:	ret
   231fc:	ldr	x0, [x0, #8]
   23200:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23204:	b	231d8 <OnPrint@@Base+0x870>
   23208:	stp	x19, x20, [sp, #-32]!
   2320c:	mov	x19, x0
   23210:	adrp	x20, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23214:	add	x0, x20, #0xcd0
   23218:	mov	w2, #0x1                   	// #1
   2321c:	str	x30, [sp, #16]
   23220:	ldxrb	w1, [x0]
   23224:	stxrb	w3, w2, [x0]
   23228:	cbnz	w3, 23220 <OnPrint@@Base+0x8b8>
   2322c:	dmb	ish
   23230:	tst	w1, #0xff
   23234:	b.eq	2323c <OnPrint@@Base+0x8d4>  // b.none
   23238:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   2323c:	add	x0, x20, #0xcd0
   23240:	add	x2, x0, #0x8
   23244:	ldr	x1, [x0, #8]
   23248:	cbz	x1, 2325c <OnPrint@@Base+0x8f4>
   2324c:	ldp	x0, x1, [x0, #8]
   23250:	stp	x0, x1, [x19]
   23254:	ldr	x0, [x2, #16]
   23258:	str	x0, [x19, #16]
   2325c:	dmb	ish
   23260:	strb	wzr, [x20, #3280]
   23264:	ldr	x30, [sp, #16]
   23268:	ldp	x19, x20, [sp], #32
   2326c:	ret
   23270:	stp	x19, x20, [sp, #-272]!
   23274:	mov	x19, x1
   23278:	stp	x21, x22, [sp, #16]
   2327c:	mov	x21, x0
   23280:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23284:	stp	x23, x24, [sp, #32]
   23288:	ldr	x20, [x0, #4000]
   2328c:	stp	x25, x26, [sp, #48]
   23290:	stp	x27, x28, [sp, #64]
   23294:	ldr	x0, [x21]
   23298:	str	x30, [sp, #80]
   2329c:	str	x0, [x21, #24]
   232a0:	ldr	x0, [x20]
   232a4:	cbz	x0, 2343c <OnPrint@@Base+0xad4>
   232a8:	sub	x20, x0, #0x1
   232ac:	ands	x20, x20, x0
   232b0:	b.ne	235a0 <OnPrint@@Base+0xc38>  // b.any
   232b4:	add	x24, x0, #0xfff
   232b8:	neg	x0, x0
   232bc:	and	x24, x24, x0
   232c0:	mov	w2, #0x0                   	// #0
   232c4:	mov	x0, x24
   232c8:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   232cc:	add	x1, x1, #0x700
   232d0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   232d4:	mov	x2, #0x0                   	// #0
   232d8:	mov	x1, #0x0                   	// #0
   232dc:	mov	x23, x0
   232e0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   232e4:	mov	x1, #0x0                   	// #0
   232e8:	mov	x0, #0x0                   	// #0
   232ec:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   232f0:	cmp	x24, #0xfff
   232f4:	b.ls	23504 <OnPrint@@Base+0xb9c>  // b.plast
   232f8:	mov	x2, #0x1000                	// #4096
   232fc:	mov	w1, #0x0                   	// #0
   23300:	mov	x0, x23
   23304:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   23308:	strb	wzr, [x23]
   2330c:	mov	x0, #0x1000                	// #4096
   23310:	add	x22, sp, #0x70
   23314:	add	x25, sp, #0xc0
   23318:	mov	x1, x25
   2331c:	add	x27, x22, #0x1c
   23320:	stp	x23, x0, [sp, #216]
   23324:	mov	x0, x21
   23328:	str	xzr, [sp, #264]
   2332c:	bl	23890 <OnPrint@@Base+0xf28>
   23330:	tst	w0, #0xff
   23334:	b.eq	23414 <OnPrint@@Base+0xaac>  // b.none
   23338:	ldr	x28, [sp, #216]
   2333c:	ldrb	w0, [x28]
   23340:	cbz	w0, 233fc <OnPrint@@Base+0xa94>
   23344:	ldr	x3, [sp, #192]
   23348:	cmp	x20, #0x0
   2334c:	ldr	x0, [sp, #208]
   23350:	csel	x3, x3, xzr, ne  // ne = any
   23354:	mov	x2, #0x10                  	// #16
   23358:	mov	w1, #0x0                   	// #0
   2335c:	sub	x26, x3, x0
   23360:	mov	x0, x27
   23364:	str	xzr, [sp, #112]
   23368:	stp	xzr, xzr, [sp, #120]
   2336c:	str	wzr, [sp, #136]
   23370:	strb	wzr, [sp, #156]
   23374:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   23378:	mov	x0, x22
   2337c:	mov	x2, x26
   23380:	mov	x1, x28
   23384:	str	xzr, [sp, #160]
   23388:	stp	xzr, xzr, [sp, #168]
   2338c:	bl	159b8 <__sancov_default_options@@Base+0x2ee8>
   23390:	ldr	x0, [sp, #264]
   23394:	cbnz	x0, 23568 <OnPrint@@Base+0xc00>
   23398:	ldp	x1, x2, [sp, #192]
   2339c:	mov	x0, x22
   233a0:	ldr	x3, [sp, #232]
   233a4:	mov	x5, #0x0                   	// #0
   233a8:	ubfx	w4, w3, #1, #1
   233ac:	ubfx	w3, w3, #2, #1
   233b0:	bl	15a50 <__sancov_default_options@@Base+0x2f80>
   233b4:	ldp	x4, x3, [x19, #8]
   233b8:	mov	x0, #0xe38f                	// #58255
   233bc:	movk	x0, #0x8e38, lsl #16
   233c0:	movk	x0, #0x38e3, lsl #32
   233c4:	movk	x0, #0xe38e, lsl #48
   233c8:	umulh	x4, x4, x0
   233cc:	lsr	x4, x4, #6
   233d0:	cmp	x3, x4
   233d4:	b.hi	23588 <OnPrint@@Base+0xc20>  // b.pmore
   233d8:	add	x1, x3, #0x1
   233dc:	b.eq	23448 <OnPrint@@Base+0xae0>  // b.none
   233e0:	ldr	x5, [x19]
   233e4:	add	x3, x3, x3, lsl #3
   233e8:	str	x1, [x19, #16]
   233ec:	mov	x2, #0x48                  	// #72
   233f0:	add	x0, x5, x3, lsl #3
   233f4:	mov	x1, x22
   233f8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   233fc:	mov	x1, x25
   23400:	mov	x0, x21
   23404:	add	x20, x20, #0x1
   23408:	bl	23890 <OnPrint@@Base+0xf28>
   2340c:	tst	w0, #0xff
   23410:	b.ne	23338 <OnPrint@@Base+0x9d0>  // b.any
   23414:	mov	x1, x24
   23418:	mov	x0, x23
   2341c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23420:	ldp	x21, x22, [sp, #16]
   23424:	ldp	x23, x24, [sp, #32]
   23428:	ldp	x25, x26, [sp, #48]
   2342c:	ldp	x27, x28, [sp, #64]
   23430:	ldr	x30, [sp, #80]
   23434:	ldp	x19, x20, [sp], #272
   23438:	ret
   2343c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   23440:	str	x0, [x20]
   23444:	b	232a8 <OnPrint@@Base+0x940>
   23448:	tst	x3, x1
   2344c:	b.eq	23488 <OnPrint@@Base+0xb20>  // b.none
   23450:	clz	x2, x1
   23454:	mov	w0, #0x3f                  	// #63
   23458:	sub	w0, w0, w2
   2345c:	mov	x2, #0x1                   	// #1
   23460:	add	w4, w0, #0x1
   23464:	lsl	x4, x2, x4
   23468:	cmp	x4, x1
   2346c:	b.ls	235e8 <OnPrint@@Base+0xc80>  // b.plast
   23470:	lsl	x0, x2, x0
   23474:	cmp	x0, x1
   23478:	b.cs	23604 <OnPrint@@Base+0xc9c>  // b.hs, b.nlast
   2347c:	cmp	x3, x4
   23480:	b.hi	235d0 <OnPrint@@Base+0xc68>  // b.pmore
   23484:	mov	x1, x4
   23488:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2348c:	add	x1, x1, x1, lsl #3
   23490:	ldr	x2, [x0, #4000]
   23494:	lsl	x1, x1, #3
   23498:	ldr	x0, [x2]
   2349c:	cbz	x0, 235b0 <OnPrint@@Base+0xc48>
   234a0:	sub	x4, x0, #0x1
   234a4:	tst	x0, x4
   234a8:	b.ne	235a0 <OnPrint@@Base+0xc38>  // b.any
   234ac:	add	x1, x1, x4
   234b0:	neg	x0, x0
   234b4:	and	x4, x1, x0
   234b8:	mov	w2, #0x0                   	// #0
   234bc:	mov	x0, x4
   234c0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   234c4:	add	x1, x1, #0x700
   234c8:	str	x4, [sp, #104]
   234cc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   234d0:	str	x0, [sp, #96]
   234d4:	ldr	x2, [x19, #16]
   234d8:	ldr	x1, [x19]
   234dc:	add	x2, x2, x2, lsl #3
   234e0:	lsl	x2, x2, #3
   234e4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   234e8:	ldp	x0, x1, [x19]
   234ec:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   234f0:	ldr	x3, [x19, #16]
   234f4:	ldp	x5, x4, [sp, #96]
   234f8:	add	x1, x3, #0x1
   234fc:	stp	x5, x4, [x19]
   23500:	b	233e4 <OnPrint@@Base+0xa7c>
   23504:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23508:	ldr	x22, [x0, #4000]
   2350c:	ldr	x0, [x22]
   23510:	cbz	x0, 235c4 <OnPrint@@Base+0xc5c>
   23514:	sub	x1, x0, #0x1
   23518:	tst	x1, x0
   2351c:	b.ne	235a0 <OnPrint@@Base+0xc38>  // b.any
   23520:	add	x22, x0, #0xfff
   23524:	neg	x0, x0
   23528:	and	x22, x22, x0
   2352c:	mov	w2, #0x0                   	// #0
   23530:	mov	x0, x22
   23534:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   23538:	add	x1, x1, #0x700
   2353c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   23540:	mov	x2, #0x0                   	// #0
   23544:	mov	x25, x0
   23548:	mov	x1, x23
   2354c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   23550:	mov	x1, x24
   23554:	mov	x0, x23
   23558:	mov	x24, x22
   2355c:	mov	x23, x25
   23560:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23564:	b	232f8 <OnPrint@@Base+0x990>
   23568:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2356c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23570:	add	x2, x2, #0x9c8
   23574:	add	x0, x0, #0x9e0
   23578:	mov	x4, #0x0                   	// #0
   2357c:	mov	x3, #0x0                   	// #0
   23580:	mov	w1, #0x43                  	// #67
   23584:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23588:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2358c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   23590:	add	x2, x2, #0x660
   23594:	add	x0, x0, #0x578
   23598:	mov	w1, #0x1be                 	// #446
   2359c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   235a0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   235a4:	add	x0, x0, #0x6e8
   235a8:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   235ac:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   235b0:	stp	x1, x2, [sp, #96]
   235b4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   235b8:	ldp	x1, x2, [sp, #96]
   235bc:	str	x0, [x2]
   235c0:	b	234a0 <OnPrint@@Base+0xb38>
   235c4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   235c8:	str	x0, [x22]
   235cc:	b	23514 <OnPrint@@Base+0xbac>
   235d0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   235d4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   235d8:	add	x2, x2, #0x6c8
   235dc:	add	x0, x0, #0x578
   235e0:	mov	w1, #0x1fd                 	// #509
   235e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   235e8:	mov	x3, x1
   235ec:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   235f0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   235f4:	add	x2, x2, #0x680
   235f8:	add	x0, x0, #0x578
   235fc:	mov	w1, #0x17b                 	// #379
   23600:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23604:	mov	x4, x0
   23608:	mov	x3, x1
   2360c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   23610:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   23614:	add	x2, x2, #0x6a8
   23618:	add	x0, x0, #0x578
   2361c:	mov	w1, #0x17c                 	// #380
   23620:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23624:	nop
   23628:	stp	x19, x20, [sp, #-112]!
   2362c:	mov	x5, #0x0                   	// #0
   23630:	mov	x4, #0x4000000             	// #67108864
   23634:	add	x3, sp, #0x68
   23638:	stp	x21, x22, [sp, #16]
   2363c:	mov	x21, x0
   23640:	mov	x22, x1
   23644:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23648:	add	x1, sp, #0x58
   2364c:	add	x0, x0, #0xa80
   23650:	stp	x23, x24, [sp, #32]
   23654:	mov	x23, x2
   23658:	add	x2, sp, #0x60
   2365c:	str	x30, [sp, #64]
   23660:	stp	xzr, xzr, [sp, #88]
   23664:	str	xzr, [sp, #104]
   23668:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   2366c:	tst	w0, #0xff
   23670:	b.eq	23774 <OnPrint@@Base+0xe0c>  // b.none
   23674:	ldr	x20, [sp, #88]
   23678:	ldr	x6, [sp, #104]
   2367c:	add	x0, x20, x6
   23680:	cmp	x20, x0
   23684:	b.cs	23848 <OnPrint@@Base+0xee0>  // b.hs, b.nlast
   23688:	adrp	x24, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2368c:	mov	x0, x20
   23690:	add	x24, x24, #0xa98
   23694:	stp	x25, x26, [sp, #48]
   23698:	mov	w26, #0x0                   	// #0
   2369c:	mov	x25, #0x0                   	// #0
   236a0:	ldrb	w1, [x20]
   236a4:	sub	w3, w1, #0x30
   236a8:	and	w2, w3, #0xff
   236ac:	cmp	w2, #0x9
   236b0:	b.ls	236c8 <OnPrint@@Base+0xd60>  // b.plast
   236b4:	and	w2, w1, #0xffffffdf
   236b8:	sub	w2, w2, #0x41
   236bc:	and	w2, w2, #0xff
   236c0:	cmp	w2, #0x5
   236c4:	b.hi	23788 <OnPrint@@Base+0xe20>  // b.pmore
   236c8:	mov	x25, #0x0                   	// #0
   236cc:	b	236e4 <OnPrint@@Base+0xd7c>
   236d0:	sub	w3, w1, #0x37
   236d4:	ldrb	w1, [x20, #1]!
   236d8:	sxtw	x3, w3
   236dc:	add	x25, x3, x25, lsl #4
   236e0:	sub	w3, w1, #0x30
   236e4:	sub	w2, w1, #0x61
   236e8:	sub	w4, w1, #0x41
   236ec:	and	w5, w3, #0xff
   236f0:	and	w2, w2, #0xff
   236f4:	and	w4, w4, #0xff
   236f8:	cmp	w5, #0x9
   236fc:	b.ls	236d4 <OnPrint@@Base+0xd6c>  // b.plast
   23700:	sub	w3, w1, #0x57
   23704:	cmp	w2, #0x5
   23708:	b.ls	236d4 <OnPrint@@Base+0xd6c>  // b.plast
   2370c:	cmp	w4, #0x5
   23710:	b.ls	236d0 <OnPrint@@Base+0xd68>  // b.plast
   23714:	cmp	w1, #0x2f
   23718:	cset	w26, eq  // eq = none
   2371c:	cmp	w26, #0x0
   23720:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   23724:	b.ls	23740 <OnPrint@@Base+0xdd8>  // b.plast
   23728:	ldrb	w1, [x20, #1]!
   2372c:	cmp	w1, #0x2f
   23730:	cset	w26, eq  // eq = none
   23734:	cmp	w26, #0x0
   23738:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   2373c:	b.hi	23728 <OnPrint@@Base+0xdc0>  // b.pmore
   23740:	add	x19, x20, #0x1
   23744:	nop
   23748:	ldurb	w3, [x19, #-1]
   2374c:	mov	x20, x19
   23750:	add	x19, x19, #0x1
   23754:	cmp	w3, #0xa
   23758:	b.ne	23748 <OnPrint@@Base+0xde0>  // b.any
   2375c:	add	x1, x0, x6
   23760:	cmp	x20, x1
   23764:	b.cc	236a0 <OnPrint@@Base+0xd38>  // b.lo, b.ul, b.last
   23768:	ldp	x25, x26, [sp, #48]
   2376c:	ldr	x1, [sp, #96]
   23770:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23774:	ldp	x21, x22, [sp, #16]
   23778:	ldp	x23, x24, [sp, #32]
   2377c:	ldr	x30, [sp, #64]
   23780:	ldp	x19, x20, [sp], #112
   23784:	ret
   23788:	mov	x1, x24
   2378c:	mov	x0, x20
   23790:	mov	x2, #0x4                   	// #4
   23794:	bl	1bda0 <__sanitizer_set_report_fd@@Base+0x24d8>
   23798:	cbz	w0, 237b0 <OnPrint@@Base+0xe48>
   2379c:	add	x19, x20, #0x1
   237a0:	ldr	x0, [sp, #88]
   237a4:	ldr	x6, [sp, #104]
   237a8:	b	23748 <OnPrint@@Base+0xde0>
   237ac:	add	x20, x20, #0x1
   237b0:	ldrb	w0, [x20]
   237b4:	sub	w0, w0, #0x30
   237b8:	and	w0, w0, #0xff
   237bc:	cmp	w0, #0x9
   237c0:	b.hi	237ac <OnPrint@@Base+0xe44>  // b.pmore
   237c4:	mov	x19, x20
   237c8:	ldrb	w2, [x19], #1
   237cc:	sub	w0, w2, #0x30
   237d0:	and	w1, w0, #0xff
   237d4:	cmp	w1, #0x9
   237d8:	mov	x1, #0x0                   	// #0
   237dc:	b.ls	23804 <OnPrint@@Base+0xe9c>  // b.plast
   237e0:	mov	x0, x25
   237e4:	lsl	x1, x1, #10
   237e8:	mov	x4, x23
   237ec:	mov	x3, x22
   237f0:	mov	w2, w26
   237f4:	blr	x21
   237f8:	ldr	x0, [sp, #88]
   237fc:	ldr	x6, [sp, #104]
   23800:	b	23748 <OnPrint@@Base+0xde0>
   23804:	ldrb	w2, [x19], #1
   23808:	sxtw	x3, w0
   2380c:	add	x1, x1, x1, lsl #2
   23810:	sub	w0, w2, #0x30
   23814:	and	w2, w0, #0xff
   23818:	add	x1, x3, x1, lsl #1
   2381c:	cmp	w2, #0x9
   23820:	b.hi	237e0 <OnPrint@@Base+0xe78>  // b.pmore
   23824:	ldrb	w2, [x19], #1
   23828:	sxtw	x3, w0
   2382c:	add	x1, x1, x1, lsl #2
   23830:	sub	w0, w2, #0x30
   23834:	and	w2, w0, #0xff
   23838:	add	x1, x3, x1, lsl #1
   2383c:	cmp	w2, #0x9
   23840:	b.hi	237e0 <OnPrint@@Base+0xe78>  // b.pmore
   23844:	b	23804 <OnPrint@@Base+0xe9c>
   23848:	mov	x0, x20
   2384c:	b	2376c <OnPrint@@Base+0xe04>
   23850:	stp	x19, x30, [sp, #-16]!
   23854:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23858:	mov	x19, x0
   2385c:	add	x3, x19, #0x10
   23860:	add	x0, x1, #0xaa0
   23864:	add	x2, x19, #0x8
   23868:	mov	x1, x19
   2386c:	mov	x5, #0x0                   	// #0
   23870:	mov	x4, #0x4000000             	// #67108864
   23874:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   23878:	tst	w0, #0xff
   2387c:	b.ne	23888 <OnPrint@@Base+0xf20>  // b.any
   23880:	str	xzr, [x19]
   23884:	stp	xzr, xzr, [x19, #8]
   23888:	ldp	x19, x30, [sp], #16
   2388c:	ret
   23890:	stp	x19, x20, [sp, #-64]!
   23894:	mov	x19, x0
   23898:	mov	x20, x1
   2389c:	stp	x21, x22, [sp, #16]
   238a0:	ldr	x22, [x0]
   238a4:	ldp	x1, x0, [x0, #16]
   238a8:	str	x30, [sp, #56]
   238ac:	add	x22, x22, x1
   238b0:	cmp	x0, x22
   238b4:	b.cc	238d0 <OnPrint@@Base+0xf68>  // b.lo, b.ul, b.last
   238b8:	mov	w22, #0x0                   	// #0
   238bc:	mov	w0, w22
   238c0:	ldp	x21, x22, [sp, #16]
   238c4:	ldr	x30, [sp, #56]
   238c8:	ldp	x19, x20, [sp], #64
   238cc:	ret
   238d0:	sub	x2, x22, x0
   238d4:	mov	w1, #0xa                   	// #10
   238d8:	stp	x23, x24, [sp, #32]
   238dc:	add	x23, x19, #0x18
   238e0:	str	x25, [sp, #48]
   238e4:	bl	1b510 <__sanitizer_set_report_fd@@Base+0x1c48>
   238e8:	mov	x21, x0
   238ec:	mov	x0, x23
   238f0:	cmp	x21, #0x0
   238f4:	csel	x21, x21, x22, ne  // ne = any
   238f8:	bl	22f28 <OnPrint@@Base+0x5c0>
   238fc:	ldr	x1, [x19, #24]
   23900:	str	x0, [x20]
   23904:	add	x0, x1, #0x1
   23908:	str	x0, [x19, #24]
   2390c:	ldrb	w22, [x1]
   23910:	cmp	x22, #0x2d
   23914:	b.ne	23b7c <OnPrint@@Base+0x1214>  // b.any
   23918:	mov	x0, x23
   2391c:	bl	22f28 <OnPrint@@Base+0x5c0>
   23920:	ldr	x2, [x19, #24]
   23924:	str	x0, [x20, #8]
   23928:	add	x0, x2, #0x1
   2392c:	str	x0, [x19, #24]
   23930:	ldrb	w3, [x2]
   23934:	cmp	x3, #0x20
   23938:	b.ne	23b9c <OnPrint@@Base+0x1234>  // b.any
   2393c:	ldrb	w0, [x2, #1]
   23940:	cmp	w0, #0x72
   23944:	ccmp	w0, w22, #0x4, ne  // ne = any
   23948:	b.ne	23bb8 <OnPrint@@Base+0x1250>  // b.any
   2394c:	str	xzr, [x20, #40]
   23950:	add	x0, x2, #0x2
   23954:	str	x0, [x19, #24]
   23958:	ldrb	w0, [x2, #1]
   2395c:	cmp	w0, #0x72
   23960:	b.eq	23b34 <OnPrint@@Base+0x11cc>  // b.none
   23964:	mov	x9, #0xe                   	// #14
   23968:	mov	x8, #0xa                   	// #10
   2396c:	mov	x7, #0x6                   	// #6
   23970:	mov	x5, #0xc                   	// #12
   23974:	mov	x3, #0x8                   	// #8
   23978:	mov	x4, #0x4                   	// #4
   2397c:	mov	x6, #0x2                   	// #2
   23980:	ldrb	w0, [x2, #2]
   23984:	mov	w1, #0x2d                  	// #45
   23988:	cmp	w0, #0x77
   2398c:	ccmp	w0, w1, #0x4, ne  // ne = any
   23990:	b.ne	23bd8 <OnPrint@@Base+0x1270>  // b.any
   23994:	add	x0, x2, #0x3
   23998:	str	x0, [x19, #24]
   2399c:	ldrb	w0, [x2, #2]
   239a0:	cmp	w0, #0x77
   239a4:	b.ne	239b8 <OnPrint@@Base+0x1050>  // b.any
   239a8:	mov	x5, x9
   239ac:	mov	x3, x8
   239b0:	mov	x4, x7
   239b4:	str	x6, [x20, #40]
   239b8:	ldrb	w0, [x2, #3]
   239bc:	mov	w1, #0x78                  	// #120
   239c0:	cmp	w0, #0x2d
   239c4:	ccmp	w0, w1, #0x4, ne  // ne = any
   239c8:	b.ne	23bf8 <OnPrint@@Base+0x1290>  // b.any
   239cc:	add	x0, x2, #0x4
   239d0:	str	x0, [x19, #24]
   239d4:	ldrb	w0, [x2, #3]
   239d8:	cmp	w0, #0x78
   239dc:	b.eq	23b20 <OnPrint@@Base+0x11b8>  // b.none
   239e0:	ldrb	w0, [x2, #4]
   239e4:	cmp	w0, #0x73
   239e8:	cset	w22, eq  // eq = none
   239ec:	cmp	w0, #0x70
   239f0:	csinc	w22, w22, wzr, ne  // ne = any
   239f4:	cbz	w22, 23c18 <OnPrint@@Base+0x12b0>
   239f8:	add	x0, x2, #0x5
   239fc:	str	x0, [x19, #24]
   23a00:	ldrb	w0, [x2, #4]
   23a04:	cmp	w0, #0x73
   23a08:	b.eq	23b2c <OnPrint@@Base+0x11c4>  // b.none
   23a0c:	add	x0, x2, #0x6
   23a10:	str	x0, [x19, #24]
   23a14:	ldrb	w24, [x2, #5]
   23a18:	cmp	x24, #0x20
   23a1c:	b.ne	23c38 <OnPrint@@Base+0x12d0>  // b.any
   23a20:	mov	x0, x23
   23a24:	bl	22f28 <OnPrint@@Base+0x5c0>
   23a28:	str	x0, [x20, #16]
   23a2c:	ldr	x0, [x19, #24]
   23a30:	add	x1, x0, #0x1
   23a34:	str	x1, [x19, #24]
   23a38:	ldrb	w25, [x0]
   23a3c:	cmp	x25, #0x20
   23a40:	b.ne	23c58 <OnPrint@@Base+0x12f0>  // b.any
   23a44:	mov	x0, x23
   23a48:	bl	22f28 <OnPrint@@Base+0x5c0>
   23a4c:	ldr	x0, [x19, #24]
   23a50:	add	x1, x0, #0x1
   23a54:	str	x1, [x19, #24]
   23a58:	ldrb	w24, [x0]
   23a5c:	cmp	x24, #0x3a
   23a60:	b.ne	23b5c <OnPrint@@Base+0x11f4>  // b.any
   23a64:	mov	x0, x23
   23a68:	bl	22f28 <OnPrint@@Base+0x5c0>
   23a6c:	ldr	x0, [x19, #24]
   23a70:	add	x2, x0, #0x1
   23a74:	str	x2, [x19, #24]
   23a78:	ldrb	w3, [x0]
   23a7c:	cmp	x3, #0x20
   23a80:	b.eq	23a94 <OnPrint@@Base+0x112c>  // b.none
   23a84:	b	23c78 <OnPrint@@Base+0x1310>
   23a88:	ldr	x2, [x19, #24]
   23a8c:	add	x2, x2, #0x1
   23a90:	str	x2, [x19, #24]
   23a94:	ldrb	w0, [x2]
   23a98:	bl	22e78 <OnPrint@@Base+0x510>
   23a9c:	tst	w0, #0xff
   23aa0:	b.ne	23a88 <OnPrint@@Base+0x1120>  // b.any
   23aa4:	ldr	x1, [x19, #24]
   23aa8:	cmp	x1, x21
   23aac:	b.cc	23ac4 <OnPrint@@Base+0x115c>  // b.lo, b.ul, b.last
   23ab0:	b	23ad0 <OnPrint@@Base+0x1168>
   23ab4:	add	x1, x1, #0x1
   23ab8:	str	x1, [x19, #24]
   23abc:	cmp	x1, x21
   23ac0:	b.eq	23ad0 <OnPrint@@Base+0x1168>  // b.none
   23ac4:	ldrb	w0, [x1]
   23ac8:	cmp	w0, #0x20
   23acc:	b.eq	23ab4 <OnPrint@@Base+0x114c>  // b.none
   23ad0:	ldr	x0, [x20, #24]
   23ad4:	cbz	x0, 23afc <OnPrint@@Base+0x1194>
   23ad8:	ldr	x23, [x20, #32]
   23adc:	sub	x3, x21, x1
   23ae0:	sub	x23, x23, #0x1
   23ae4:	cmp	x23, x3
   23ae8:	csel	x23, x23, x3, ls  // ls = plast
   23aec:	mov	x2, x23
   23af0:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   23af4:	ldr	x0, [x20, #24]
   23af8:	strb	wzr, [x0, x23]
   23afc:	add	x21, x21, #0x1
   23b00:	mov	w0, w22
   23b04:	ldp	x23, x24, [sp, #32]
   23b08:	ldr	x25, [sp, #48]
   23b0c:	str	x21, [x19, #24]
   23b10:	ldp	x21, x22, [sp, #16]
   23b14:	ldr	x30, [sp, #56]
   23b18:	ldp	x19, x20, [sp], #64
   23b1c:	ret
   23b20:	mov	x3, x5
   23b24:	str	x4, [x20, #40]
   23b28:	b	239e0 <OnPrint@@Base+0x1078>
   23b2c:	str	x3, [x20, #40]
   23b30:	b	23a0c <OnPrint@@Base+0x10a4>
   23b34:	mov	x0, #0x1                   	// #1
   23b38:	mov	x9, #0xf                   	// #15
   23b3c:	mov	x8, #0xb                   	// #11
   23b40:	mov	x7, #0x7                   	// #7
   23b44:	mov	x5, #0xd                   	// #13
   23b48:	mov	x3, #0x9                   	// #9
   23b4c:	mov	x4, #0x5                   	// #5
   23b50:	mov	x6, #0x3                   	// #3
   23b54:	str	x0, [x20, #40]
   23b58:	b	23980 <OnPrint@@Base+0x1018>
   23b5c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23b60:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23b64:	mov	x3, x24
   23b68:	add	x2, x2, #0xbf8
   23b6c:	add	x0, x0, #0xad0
   23b70:	mov	x4, #0x3a                  	// #58
   23b74:	mov	w1, #0x38                  	// #56
   23b78:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23b7c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23b80:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23b84:	mov	x3, x22
   23b88:	add	x2, x2, #0xab0
   23b8c:	add	x0, x0, #0xad0
   23b90:	mov	x4, #0x2d                  	// #45
   23b94:	mov	w1, #0x28                  	// #40
   23b98:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23b9c:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23ba0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23ba4:	add	x2, x2, #0xb18
   23ba8:	add	x0, x0, #0xad0
   23bac:	mov	x4, #0x20                  	// #32
   23bb0:	mov	w1, #0x2a                  	// #42
   23bb4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23bb8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23bbc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23bc0:	add	x2, x2, #0xb38
   23bc4:	add	x0, x0, #0xad0
   23bc8:	mov	x4, #0x0                   	// #0
   23bcc:	mov	x3, #0x0                   	// #0
   23bd0:	mov	w1, #0x2b                  	// #43
   23bd4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23bd8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23bdc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23be0:	add	x2, x2, #0xb68
   23be4:	add	x0, x0, #0xad0
   23be8:	mov	x4, #0x0                   	// #0
   23bec:	mov	x3, #0x0                   	// #0
   23bf0:	mov	w1, #0x2e                  	// #46
   23bf4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23bf8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23bfc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c00:	add	x2, x2, #0xb98
   23c04:	add	x0, x0, #0xad0
   23c08:	mov	x4, #0x0                   	// #0
   23c0c:	mov	x3, #0x0                   	// #0
   23c10:	mov	w1, #0x30                  	// #48
   23c14:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23c18:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c1c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c20:	add	x2, x2, #0xbc8
   23c24:	add	x0, x0, #0xad0
   23c28:	mov	x4, #0x0                   	// #0
   23c2c:	mov	x3, #0x0                   	// #0
   23c30:	mov	w1, #0x32                  	// #50
   23c34:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23c38:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c3c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c40:	mov	x3, x24
   23c44:	add	x2, x2, #0xb18
   23c48:	add	x0, x0, #0xad0
   23c4c:	mov	x4, #0x20                  	// #32
   23c50:	mov	w1, #0x34                  	// #52
   23c54:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23c58:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c5c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c60:	mov	x4, x24
   23c64:	mov	x3, x25
   23c68:	add	x2, x2, #0xb18
   23c6c:	add	x0, x0, #0xad0
   23c70:	mov	w1, #0x36                  	// #54
   23c74:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23c78:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c7c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23c80:	mov	x4, x25
   23c84:	mov	w1, w24
   23c88:	add	x2, x2, #0xb18
   23c8c:	add	x0, x0, #0xad0
   23c90:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23c94:	nop
   23c98:	ldr	x0, [x0]
   23c9c:	ldr	w0, [x0, #8]
   23ca0:	ret
   23ca4:	nop
   23ca8:	ldr	x0, [x0]
   23cac:	ldr	w0, [x0, #12]
   23cb0:	and	w0, w0, #0xfffff
   23cb4:	ret
   23cb8:	ldr	x0, [x0]
   23cbc:	add	x0, x0, #0xc
   23cc0:	ldxr	w1, [x0]
   23cc4:	add	w2, w1, #0x1
   23cc8:	stlxr	w3, w2, [x0]
   23ccc:	cbnz	w3, 23cc0 <OnPrint@@Base+0x1358>
   23cd0:	mvn	x0, x1
   23cd4:	dmb	ish
   23cd8:	tst	x0, #0xfffff
   23cdc:	b.eq	23ce4 <OnPrint@@Base+0x137c>  // b.none
   23ce0:	ret
   23ce4:	str	x30, [sp, #-16]!
   23ce8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23cec:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23cf0:	mov	x4, #0x100000              	// #1048576
   23cf4:	add	x2, x2, #0xc18
   23cf8:	add	x0, x0, #0xc48
   23cfc:	mov	x3, x4
   23d00:	mov	w1, #0x61                  	// #97
   23d04:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23d08:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   23d0c:	add	x0, x0, #0xf0
   23d10:	ret
   23d14:	nop
   23d18:	mov	w2, w0
   23d1c:	cbz	w0, 23d94 <OnPrint@@Base+0x142c>
   23d20:	str	x30, [sp, #-16]!
   23d24:	and	x3, x2, #0x7fffffff
   23d28:	mov	w4, w0
   23d2c:	cmp	x3, w0, uxtw
   23d30:	b.ne	23dc8 <OnPrint@@Base+0x1460>  // b.any
   23d34:	lsr	w3, w0, #23
   23d38:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23d3c:	add	x0, x0, #0xcf0
   23d40:	mov	x5, #0xfffff               	// #1048575
   23d44:	lsl	x3, x3, #12
   23d48:	add	x6, x3, #0x1, lsl #12
   23d4c:	cmp	x3, x5
   23d50:	b.hi	23de0 <OnPrint@@Base+0x1478>  // b.pmore
   23d54:	ldr	x1, [x0, x3, lsl #3]
   23d58:	ands	x1, x1, #0xfffffffffffffffe
   23d5c:	b.ne	23d6c <OnPrint@@Base+0x1404>  // b.any
   23d60:	b	23dac <OnPrint@@Base+0x1444>
   23d64:	ldr	x1, [x1]
   23d68:	cbz	x1, 23dac <OnPrint@@Base+0x1444>
   23d6c:	ldr	w4, [x1, #8]
   23d70:	cmp	w2, w4
   23d74:	b.ne	23d64 <OnPrint@@Base+0x13fc>  // b.any
   23d78:	ldp	w2, w3, [x1, #16]
   23d7c:	add	x0, x1, #0x18
   23d80:	mov	x1, #0x0                   	// #0
   23d84:	bfxil	x1, x2, #0, #32
   23d88:	ldr	x30, [sp], #16
   23d8c:	bfi	x1, x3, #32, #32
   23d90:	ret
   23d94:	mov	x1, #0x0                   	// #0
   23d98:	mov	w3, #0x0                   	// #0
   23d9c:	bfxil	x1, x2, #0, #32
   23da0:	mov	x0, #0x0                   	// #0
   23da4:	bfi	x1, x3, #32, #32
   23da8:	ret
   23dac:	add	x3, x3, #0x1
   23db0:	cmp	x6, x3
   23db4:	b.ne	23d4c <OnPrint@@Base+0x13e4>  // b.any
   23db8:	mov	w3, #0x0                   	// #0
   23dbc:	mov	w2, #0x0                   	// #0
   23dc0:	mov	x0, #0x0                   	// #0
   23dc4:	b	23d80 <OnPrint@@Base+0x1418>
   23dc8:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23dcc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23dd0:	add	x2, x2, #0xc90
   23dd4:	add	x0, x0, #0xcc0
   23dd8:	mov	w1, #0x8c                  	// #140
   23ddc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23de0:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23de4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   23de8:	add	x2, x2, #0xd08
   23dec:	add	x0, x0, #0xcc0
   23df0:	mov	x4, #0x100000              	// #1048576
   23df4:	mov	w1, #0x91                  	// #145
   23df8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23dfc:	nop
   23e00:	stp	x19, x20, [sp, #-48]!
   23e04:	adrp	x19, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23e08:	add	x19, x19, #0xcf0
   23e0c:	stp	x23, x30, [sp, #32]
   23e10:	mov	x23, x19
   23e14:	stp	x21, x22, [sp, #16]
   23e18:	mov	w21, #0x0                   	// #0
   23e1c:	nop
   23e20:	sxtw	x22, w21
   23e24:	mov	w20, #0x0                   	// #0
   23e28:	ldr	x0, [x23, x22, lsl #3]
   23e2c:	orr	x2, x0, #0x1
   23e30:	tbnz	w0, #0, 23e54 <OnPrint@@Base+0x14ec>
   23e34:	ldxr	x1, [x19]
   23e38:	cmp	x1, x0
   23e3c:	b.ne	23e48 <OnPrint@@Base+0x14e0>  // b.any
   23e40:	stlxr	w3, x2, [x19]
   23e44:	cbnz	w3, 23e34 <OnPrint@@Base+0x14cc>
   23e48:	dmb	ish
   23e4c:	cmp	x0, x1
   23e50:	b.eq	23e70 <OnPrint@@Base+0x1508>  // b.none
   23e54:	cmp	w20, #0x9
   23e58:	b.gt	23e64 <OnPrint@@Base+0x14fc>
   23e5c:	add	w20, w20, #0x1
   23e60:	b	23e28 <OnPrint@@Base+0x14c0>
   23e64:	add	w20, w20, #0x1
   23e68:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   23e6c:	b	23e28 <OnPrint@@Base+0x14c0>
   23e70:	add	w21, w21, #0x1
   23e74:	add	x19, x19, #0x8
   23e78:	cmp	w21, #0x100, lsl #12
   23e7c:	b.ne	23e20 <OnPrint@@Base+0x14b8>  // b.any
   23e80:	ldp	x21, x22, [sp, #16]
   23e84:	ldp	x23, x30, [sp, #32]
   23e88:	ldp	x19, x20, [sp], #48
   23e8c:	ret
   23e90:	adrp	x3, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23e94:	add	x3, x3, #0xcf0
   23e98:	mov	w0, #0x0                   	// #0
   23e9c:	nop
   23ea0:	sxtw	x2, w0
   23ea4:	ldr	x1, [x3, x2, lsl #3]
   23ea8:	dmb	ish
   23eac:	and	x1, x1, #0xfffffffffffffffe
   23eb0:	str	x1, [x3, x2, lsl #3]
   23eb4:	add	w0, w0, #0x1
   23eb8:	cmp	w0, #0x100, lsl #12
   23ebc:	b.ne	23ea0 <OnPrint@@Base+0x1538>  // b.any
   23ec0:	ret
   23ec4:	nop
   23ec8:	ldr	w2, [x0]
   23ecc:	ldr	w0, [x1]
   23ed0:	cmp	w2, w0
   23ed4:	cset	w0, cc  // cc = lo, ul, last
   23ed8:	ret
   23edc:	nop
   23ee0:	stp	x19, x20, [sp, #-128]!
   23ee4:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23ee8:	mov	x19, x0
   23eec:	stp	x21, x22, [sp, #16]
   23ef0:	ldr	x21, [x20, #4000]
   23ef4:	stp	x23, x24, [sp, #32]
   23ef8:	stp	x25, x26, [sp, #48]
   23efc:	stp	x27, x28, [sp, #64]
   23f00:	str	x30, [sp, #80]
   23f04:	str	xzr, [x0]
   23f08:	stp	xzr, xzr, [x0, #8]
   23f0c:	ldr	x0, [x21]
   23f10:	cbz	x0, 24294 <OnPrint@@Base+0x192c>
   23f14:	sub	x1, x0, #0x1
   23f18:	tst	x1, x0
   23f1c:	b.ne	242c4 <OnPrint@@Base+0x195c>  // b.any
   23f20:	add	x21, x0, #0xf
   23f24:	neg	x0, x0
   23f28:	and	x21, x21, x0
   23f2c:	mov	w2, #0x0                   	// #0
   23f30:	mov	x0, x21
   23f34:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   23f38:	add	x1, x24, #0x700
   23f3c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   23f40:	ldr	x1, [x19]
   23f44:	mov	x23, x0
   23f48:	ldr	x2, [x19, #16]
   23f4c:	adrp	x22, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   23f50:	lsl	x2, x2, #4
   23f54:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   23f58:	ldp	x0, x1, [x19]
   23f5c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   23f60:	stp	x23, x21, [x19]
   23f64:	add	x0, x22, #0xcf0
   23f68:	add	x0, x0, #0x800, lsl #12
   23f6c:	ldr	x4, [x0, #1024]
   23f70:	add	x4, x4, #0x64
   23f74:	cmp	x4, x21, lsr #4
   23f78:	b.hi	24214 <OnPrint@@Base+0x18ac>  // b.pmore
   23f7c:	ldr	x20, [x20, #4000]
   23f80:	add	x22, x22, #0xcf0
   23f84:	add	x23, sp, #0x70
   23f88:	mov	w21, #0x0                   	// #0
   23f8c:	sxtw	x0, w21
   23f90:	ldr	x5, [x22, x0, lsl #3]
   23f94:	mov	x25, #0x1                   	// #1
   23f98:	ands	x27, x5, #0xfffffffffffffffe
   23f9c:	add	x26, x24, #0x700
   23fa0:	b.eq	23fe8 <OnPrint@@Base+0x1680>  // b.none
   23fa4:	ldp	x4, x3, [x19, #8]
   23fa8:	ldr	w0, [x27, #8]
   23fac:	str	w0, [sp, #112]
   23fb0:	str	x27, [sp, #120]
   23fb4:	lsr	x4, x4, #4
   23fb8:	cmp	x3, x4
   23fbc:	b.hi	2427c <OnPrint@@Base+0x1914>  // b.pmore
   23fc0:	add	x28, x3, #0x1
   23fc4:	b.eq	24174 <OnPrint@@Base+0x180c>  // b.none
   23fc8:	ldr	x4, [x19]
   23fcc:	str	x28, [x19, #16]
   23fd0:	add	x0, x4, x3, lsl #4
   23fd4:	mov	x1, x23
   23fd8:	mov	x2, #0x10                  	// #16
   23fdc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   23fe0:	ldr	x27, [x27]
   23fe4:	cbnz	x27, 23fa4 <OnPrint@@Base+0x163c>
   23fe8:	add	w21, w21, #0x1
   23fec:	cmp	w21, #0x100, lsl #12
   23ff0:	b.ne	23f8c <OnPrint@@Base+0x1624>  // b.any
   23ff4:	ldr	x2, [x19, #16]
   23ff8:	cmp	x2, #0x1
   23ffc:	b.ls	24158 <OnPrint@@Base+0x17f0>  // b.plast
   24000:	ldr	x0, [x19]
   24004:	mov	x1, #0x1                   	// #1
   24008:	lsl	x4, x1, #4
   2400c:	mov	x3, x1
   24010:	ldr	w8, [x0, x4]
   24014:	sub	x5, x3, #0x1
   24018:	mov	x4, x3
   2401c:	lsr	x3, x5, #1
   24020:	add	x4, x0, x4, lsl #4
   24024:	lsl	x5, x3, #4
   24028:	add	x9, x0, x5
   2402c:	ldr	w6, [x0, x5]
   24030:	cmp	w6, w8
   24034:	b.cs	24050 <OnPrint@@Base+0x16e8>  // b.hs, b.nlast
   24038:	ldp	x6, x7, [x9]
   2403c:	ldr	x10, [x4, #8]
   24040:	stp	x6, x7, [x4]
   24044:	str	w8, [x0, x5]
   24048:	str	x10, [x9, #8]
   2404c:	cbnz	x3, 24014 <OnPrint@@Base+0x16ac>
   24050:	add	x1, x1, #0x1
   24054:	cmp	x2, x1
   24058:	b.ne	24008 <OnPrint@@Base+0x16a0>  // b.any
   2405c:	sub	x8, x2, #0x1
   24060:	add	x2, x0, x2, lsl #4
   24064:	ldp	x6, x7, [x2, #-16]
   24068:	mov	x3, #0x0                   	// #0
   2406c:	ldr	w4, [x0]
   24070:	add	x5, x3, #0x1
   24074:	ldr	x1, [x0, #8]
   24078:	stp	x6, x7, [x0]
   2407c:	stur	w4, [x2, #-16]
   24080:	stur	x1, [x2, #-8]
   24084:	lsl	x1, x3, #1
   24088:	add	x7, x1, #0x1
   2408c:	add	x1, x1, #0x2
   24090:	cmp	x7, x8
   24094:	b.cs	240fc <OnPrint@@Base+0x1794>  // b.hs, b.nlast
   24098:	lsl	x6, x7, #4
   2409c:	lsl	x4, x3, #4
   240a0:	add	x9, x0, x6
   240a4:	add	x11, x0, x4
   240a8:	ldr	w10, [x0, x6]
   240ac:	ldr	w12, [x0, x4]
   240b0:	cmp	w12, w10
   240b4:	b.cs	240fc <OnPrint@@Base+0x1794>  // b.hs, b.nlast
   240b8:	cmp	x1, x8
   240bc:	b.cc	242e0 <OnPrint@@Base+0x1978>  // b.lo, b.ul, b.last
   240c0:	cmp	x7, x3
   240c4:	b.eq	2414c <OnPrint@@Base+0x17e4>  // b.none
   240c8:	ldp	x4, x5, [x9]
   240cc:	mov	x1, x7
   240d0:	ldr	x3, [x11, #8]
   240d4:	stp	x4, x5, [x11]
   240d8:	str	w12, [x0, x6]
   240dc:	str	x3, [x9, #8]
   240e0:	mov	x3, x1
   240e4:	add	x5, x3, #0x1
   240e8:	lsl	x1, x3, #1
   240ec:	add	x7, x1, #0x1
   240f0:	add	x1, x1, #0x2
   240f4:	cmp	x7, x8
   240f8:	b.cc	24098 <OnPrint@@Base+0x1730>  // b.lo, b.ul, b.last
   240fc:	cmp	x1, x8
   24100:	b.cs	2414c <OnPrint@@Base+0x17e4>  // b.hs, b.nlast
   24104:	lsl	x5, x5, #5
   24108:	lsl	x4, x3, #4
   2410c:	add	x6, x0, x5
   24110:	ldr	w7, [x0, x5]
   24114:	ldr	w5, [x0, x4]
   24118:	cmp	w7, w5
   2411c:	b.ls	2414c <OnPrint@@Base+0x17e4>  // b.plast
   24120:	cmp	x1, x3
   24124:	b.eq	2414c <OnPrint@@Base+0x17e4>  // b.none
   24128:	add	x3, x0, x4
   2412c:	ldr	w9, [x0, x4]
   24130:	ldp	x4, x5, [x6]
   24134:	cmp	x1, x8
   24138:	ldr	x7, [x3, #8]
   2413c:	stp	x4, x5, [x3]
   24140:	str	w9, [x6]
   24144:	str	x7, [x6, #8]
   24148:	b.cc	240e0 <OnPrint@@Base+0x1778>  // b.lo, b.ul, b.last
   2414c:	sub	x2, x2, #0x10
   24150:	subs	x8, x8, #0x1
   24154:	b.ne	24064 <OnPrint@@Base+0x16fc>  // b.any
   24158:	ldp	x21, x22, [sp, #16]
   2415c:	ldp	x23, x24, [sp, #32]
   24160:	ldp	x25, x26, [sp, #48]
   24164:	ldp	x27, x28, [sp, #64]
   24168:	ldr	x30, [sp, #80]
   2416c:	ldp	x19, x20, [sp], #128
   24170:	ret
   24174:	tst	x3, x28
   24178:	b.eq	241b0 <OnPrint@@Base+0x1848>  // b.none
   2417c:	clz	x0, x28
   24180:	mov	w1, #0x3f                  	// #63
   24184:	sub	w0, w1, w0
   24188:	add	w4, w0, #0x1
   2418c:	lsl	x4, x25, x4
   24190:	cmp	x4, x28
   24194:	b.ls	242fc <OnPrint@@Base+0x1994>  // b.plast
   24198:	lsl	x0, x25, x0
   2419c:	cmp	x0, x28
   241a0:	b.cs	24318 <OnPrint@@Base+0x19b0>  // b.hs, b.nlast
   241a4:	cmp	x3, x4
   241a8:	b.hi	242a0 <OnPrint@@Base+0x1938>  // b.pmore
   241ac:	mov	x28, x4
   241b0:	ldr	x0, [x20]
   241b4:	lsl	x28, x28, #4
   241b8:	cbz	x0, 242b8 <OnPrint@@Base+0x1950>
   241bc:	sub	x1, x0, #0x1
   241c0:	tst	x1, x0
   241c4:	b.ne	242c4 <OnPrint@@Base+0x195c>  // b.any
   241c8:	add	x28, x28, x1
   241cc:	neg	x0, x0
   241d0:	and	x28, x28, x0
   241d4:	mov	x1, x26
   241d8:	mov	x0, x28
   241dc:	mov	w2, #0x0                   	// #0
   241e0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   241e4:	str	x0, [sp, #104]
   241e8:	ldr	x1, [x19]
   241ec:	ldr	x2, [x19, #16]
   241f0:	lsl	x2, x2, #4
   241f4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   241f8:	ldp	x0, x1, [x19]
   241fc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24200:	ldr	x3, [x19, #16]
   24204:	ldr	x4, [sp, #104]
   24208:	stp	x4, x28, [x19]
   2420c:	add	x28, x3, #0x1
   24210:	b	23fcc <OnPrint@@Base+0x1664>
   24214:	ldr	x3, [x19, #16]
   24218:	cmp	x4, x3
   2421c:	b.cc	242a0 <OnPrint@@Base+0x1938>  // b.lo, b.ul, b.last
   24220:	ldr	x23, [x20, #4000]
   24224:	lsl	x21, x4, #4
   24228:	ldr	x0, [x23]
   2422c:	cbz	x0, 242d4 <OnPrint@@Base+0x196c>
   24230:	sub	x1, x0, #0x1
   24234:	tst	x1, x0
   24238:	b.ne	242c4 <OnPrint@@Base+0x195c>  // b.any
   2423c:	add	x21, x21, x1
   24240:	neg	x0, x0
   24244:	and	x21, x21, x0
   24248:	add	x1, x24, #0x700
   2424c:	mov	w2, #0x0                   	// #0
   24250:	mov	x0, x21
   24254:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   24258:	mov	x23, x0
   2425c:	ldr	x1, [x19]
   24260:	ldr	x2, [x19, #16]
   24264:	lsl	x2, x2, #4
   24268:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2426c:	ldp	x0, x1, [x19]
   24270:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24274:	stp	x23, x21, [x19]
   24278:	b	23f7c <OnPrint@@Base+0x1614>
   2427c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24280:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24284:	add	x2, x2, #0x660
   24288:	add	x0, x0, #0x578
   2428c:	mov	w1, #0x1be                 	// #446
   24290:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24294:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24298:	str	x0, [x21]
   2429c:	b	23f14 <OnPrint@@Base+0x15ac>
   242a0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   242a4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   242a8:	add	x2, x2, #0x6c8
   242ac:	add	x0, x0, #0x578
   242b0:	mov	w1, #0x1fd                 	// #509
   242b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   242b8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   242bc:	str	x0, [x20]
   242c0:	b	241bc <OnPrint@@Base+0x1854>
   242c4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   242c8:	add	x0, x0, #0x6e8
   242cc:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   242d0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   242d4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   242d8:	str	x0, [x23]
   242dc:	b	24230 <OnPrint@@Base+0x18c8>
   242e0:	lsl	x11, x5, #5
   242e4:	add	x6, x0, x5, lsl #5
   242e8:	ldr	w5, [x0, x11]
   242ec:	cmp	w10, w5
   242f0:	csel	x6, x6, x9, cc  // cc = lo, ul, last
   242f4:	csel	x1, x1, x7, cc  // cc = lo, ul, last
   242f8:	b	24120 <OnPrint@@Base+0x17b8>
   242fc:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24300:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24304:	mov	x3, x28
   24308:	add	x2, x2, #0x680
   2430c:	add	x0, x0, #0x578
   24310:	mov	w1, #0x17b                 	// #379
   24314:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24318:	mov	x4, x0
   2431c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24320:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24324:	mov	x3, x28
   24328:	add	x2, x2, #0x6a8
   2432c:	add	x0, x0, #0x578
   24330:	mov	w1, #0x17c                 	// #380
   24334:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24338:	ldr	x4, [x0, #16]
   2433c:	cbnz	x4, 2434c <OnPrint@@Base+0x19e4>
   24340:	mov	x0, #0x0                   	// #0
   24344:	mov	x1, #0x0                   	// #0
   24348:	ret
   2434c:	mov	x5, x4
   24350:	mov	x2, #0x0                   	// #0
   24354:	str	x30, [sp, #-16]!
   24358:	cmp	x5, x2
   2435c:	b.ls	24390 <OnPrint@@Base+0x1a28>  // b.plast
   24360:	add	x3, x5, x2
   24364:	ldr	x7, [x0]
   24368:	cmp	x4, x3, lsr #1
   2436c:	lsr	x3, x3, #1
   24370:	b.ls	243cc <OnPrint@@Base+0x1a64>  // b.plast
   24374:	lsl	x6, x3, #4
   24378:	ldr	w6, [x7, x6]
   2437c:	cmp	w1, w6
   24380:	b.ls	243c4 <OnPrint@@Base+0x1a5c>  // b.plast
   24384:	add	x2, x3, #0x1
   24388:	cmp	x5, x2
   2438c:	b.hi	24360 <OnPrint@@Base+0x19f8>  // b.pmore
   24390:	cmp	x4, x2
   24394:	b.cc	243b4 <OnPrint@@Base+0x1a4c>  // b.lo, b.ul, b.last
   24398:	ldr	x0, [x0]
   2439c:	b.eq	243f4 <OnPrint@@Base+0x1a8c>  // b.none
   243a0:	lsl	x2, x2, #4
   243a4:	add	x3, x0, x2
   243a8:	ldr	w0, [x0, x2]
   243ac:	cmp	w0, w1
   243b0:	b.eq	243e4 <OnPrint@@Base+0x1a7c>  // b.none
   243b4:	mov	x0, #0x0                   	// #0
   243b8:	mov	x1, #0x0                   	// #0
   243bc:	ldr	x30, [sp], #16
   243c0:	ret
   243c4:	mov	x5, x3
   243c8:	b	24358 <OnPrint@@Base+0x19f0>
   243cc:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   243d0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   243d4:	add	x2, x2, #0x560
   243d8:	add	x0, x0, #0x578
   243dc:	mov	w1, #0x1ba                 	// #442
   243e0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   243e4:	ldr	x1, [x3, #8]
   243e8:	add	x0, x1, #0x18
   243ec:	ldr	x1, [x1, #16]
   243f0:	b	243bc <OnPrint@@Base+0x1a54>
   243f4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   243f8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   243fc:	add	x2, x2, #0x560
   24400:	add	x0, x0, #0x578
   24404:	mov	x3, x4
   24408:	mov	w1, #0x1b6                 	// #438
   2440c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24410:	str	x30, [sp, #-16]!
   24414:	mov	x2, x1
   24418:	mov	x3, #0x0                   	// #0
   2441c:	mov	x1, x0
   24420:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   24424:	add	x0, x0, #0xcf0
   24428:	bl	24460 <OnPrint@@Base+0x1af8>
   2442c:	cbz	x0, 2443c <OnPrint@@Base+0x1ad4>
   24430:	ldr	w0, [x0, #8]
   24434:	ldr	x30, [sp], #16
   24438:	ret
   2443c:	mov	w0, #0x0                   	// #0
   24440:	ldr	x30, [sp], #16
   24444:	ret
   24448:	mov	x2, x1
   2444c:	mov	x3, #0x0                   	// #0
   24450:	mov	x1, x0
   24454:	adrp	x0, 1c3000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   24458:	add	x0, x0, #0xcf0
   2445c:	b	24460 <OnPrint@@Base+0x1af8>
   24460:	stp	x19, x20, [sp, #-160]!
   24464:	stp	x21, x22, [sp, #16]
   24468:	mov	x22, x2
   2446c:	mov	x21, x1
   24470:	stp	x23, x24, [sp, #32]
   24474:	mov	x24, x0
   24478:	mov	x23, x3
   2447c:	stp	x25, x26, [sp, #48]
   24480:	lsr	x25, x2, #32
   24484:	stp	x27, x28, [sp, #64]
   24488:	mov	w28, w25
   2448c:	mov	w27, w2
   24490:	str	x30, [sp, #80]
   24494:	cbz	x3, 2449c <OnPrint@@Base+0x1b34>
   24498:	strb	wzr, [x3]
   2449c:	cmp	x21, #0x0
   244a0:	mov	x0, #0x0                   	// #0
   244a4:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   244a8:	b.ne	244c8 <OnPrint@@Base+0x1b60>  // b.any
   244ac:	ldp	x21, x22, [sp, #16]
   244b0:	ldp	x23, x24, [sp, #32]
   244b4:	ldp	x25, x26, [sp, #48]
   244b8:	ldp	x27, x28, [sp, #64]
   244bc:	ldr	x30, [sp, #80]
   244c0:	ldp	x19, x20, [sp], #160
   244c4:	ret
   244c8:	mov	w4, #0xb28c                	// #45708
   244cc:	mov	w20, #0xe995                	// #59797
   244d0:	movk	w4, #0x9747, lsl #16
   244d4:	mov	w26, w22
   244d8:	eor	w5, w4, w22, lsl #3
   244dc:	mov	x1, #0x0                   	// #0
   244e0:	movk	w20, #0x5bd1, lsl #16
   244e4:	nop
   244e8:	ldr	x4, [x21, x1, lsl #3]
   244ec:	mul	w5, w5, w20
   244f0:	add	x1, x1, #0x1
   244f4:	cmp	x26, x1
   244f8:	mul	w4, w20, w4
   244fc:	eor	w4, w4, w4, lsr #24
   24500:	mul	w4, w4, w20
   24504:	eor	w5, w4, w5
   24508:	b.hi	244e8 <OnPrint@@Base+0x1b80>  // b.pmore
   2450c:	eor	w4, w5, w5, lsr #13
   24510:	mul	w20, w4, w20
   24514:	eor	w20, w20, w20, lsr #15
   24518:	and	x5, x20, #0xfffff
   2451c:	ubfiz	x2, x20, #3, #20
   24520:	add	x2, x24, x2
   24524:	ldr	x9, [x24, x5, lsl #3]
   24528:	ands	x9, x9, #0xfffffffffffffffe
   2452c:	b.eq	24598 <OnPrint@@Base+0x1c30>  // b.none
   24530:	and	w10, w20, #0xfff00000
   24534:	mov	x4, x9
   24538:	ldr	w1, [x4, #12]
   2453c:	and	w1, w1, #0xfff00000
   24540:	cmp	w1, w10
   24544:	b.ne	24590 <OnPrint@@Base+0x1c28>  // b.any
   24548:	bfxil	x6, x27, #0, #32
   2454c:	ldr	x0, [x4, #16]
   24550:	bfi	x6, x28, #32, #32
   24554:	cmp	x0, x6
   24558:	b.ne	24590 <OnPrint@@Base+0x1c28>  // b.any
   2455c:	ldr	w0, [x4, #16]
   24560:	cbz	x0, 245fc <OnPrint@@Base+0x1c94>
   24564:	add	x3, x4, #0x18
   24568:	mov	x1, #0x0                   	// #0
   2456c:	b	2457c <OnPrint@@Base+0x1c14>
   24570:	add	x1, x1, #0x1
   24574:	cmp	x0, x1
   24578:	b.eq	245fc <OnPrint@@Base+0x1c94>  // b.none
   2457c:	ldr	x8, [x3, x1, lsl #3]
   24580:	ldr	x7, [x21, x1, lsl #3]
   24584:	cmp	x8, x7
   24588:	b.eq	24570 <OnPrint@@Base+0x1c08>  // b.none
   2458c:	nop
   24590:	ldr	x4, [x4]
   24594:	cbnz	x4, 24538 <OnPrint@@Base+0x1bd0>
   24598:	mov	w1, #0x0                   	// #0
   2459c:	ldr	x0, [x2]
   245a0:	tbnz	w0, #0, 245c8 <OnPrint@@Base+0x1c60>
   245a4:	orr	x3, x0, #0x1
   245a8:	ldxr	x6, [x2]
   245ac:	cmp	x6, x0
   245b0:	b.ne	245bc <OnPrint@@Base+0x1c54>  // b.any
   245b4:	stlxr	w4, x3, [x2]
   245b8:	cbnz	w4, 245a8 <OnPrint@@Base+0x1c40>
   245bc:	dmb	ish
   245c0:	cmp	x0, x6
   245c4:	b.eq	24604 <OnPrint@@Base+0x1c9c>  // b.none
   245c8:	cmp	w1, #0x9
   245cc:	b.gt	245d8 <OnPrint@@Base+0x1c70>
   245d0:	add	w1, w1, #0x1
   245d4:	b	2459c <OnPrint@@Base+0x1c34>
   245d8:	stp	x5, x2, [sp, #104]
   245dc:	str	x9, [sp, #120]
   245e0:	str	w1, [sp, #128]
   245e4:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   245e8:	ldr	w1, [sp, #128]
   245ec:	ldp	x5, x2, [sp, #104]
   245f0:	add	w1, w1, #0x1
   245f4:	ldr	x9, [sp, #120]
   245f8:	b	2459c <OnPrint@@Base+0x1c34>
   245fc:	mov	x0, x4
   24600:	b	244ac <OnPrint@@Base+0x1b44>
   24604:	cmp	x9, x6
   24608:	b.eq	24678 <OnPrint@@Base+0x1d10>  // b.none
   2460c:	cbz	x6, 24678 <OnPrint@@Base+0x1d10>
   24610:	and	w8, w20, #0xfff00000
   24614:	mov	x4, x6
   24618:	ldr	w0, [x4, #12]
   2461c:	and	w0, w0, #0xfff00000
   24620:	cmp	w0, w8
   24624:	b.ne	24670 <OnPrint@@Base+0x1d08>  // b.any
   24628:	bfxil	x19, x27, #0, #32
   2462c:	ldr	x0, [x4, #16]
   24630:	bfi	x19, x28, #32, #32
   24634:	cmp	x0, x19
   24638:	b.ne	24670 <OnPrint@@Base+0x1d08>  // b.any
   2463c:	ldr	w3, [x4, #16]
   24640:	cbz	x3, 24770 <OnPrint@@Base+0x1e08>
   24644:	add	x7, x4, #0x18
   24648:	mov	x1, #0x0                   	// #0
   2464c:	b	2465c <OnPrint@@Base+0x1cf4>
   24650:	add	x1, x1, #0x1
   24654:	cmp	x3, x1
   24658:	b.eq	24770 <OnPrint@@Base+0x1e08>  // b.none
   2465c:	ldr	x2, [x7, x1, lsl #3]
   24660:	ldr	x0, [x21, x1, lsl #3]
   24664:	cmp	x2, x0
   24668:	b.eq	24650 <OnPrint@@Base+0x1ce8>  // b.none
   2466c:	nop
   24670:	ldr	x4, [x4]
   24674:	cbnz	x4, 24618 <OnPrint@@Base+0x1cb0>
   24678:	lsr	x7, x5, #12
   2467c:	add	x0, x7, #0x200, lsl #12
   24680:	add	x0, x24, x0, lsl #2
   24684:	ldxr	w3, [x0]
   24688:	add	w1, w3, #0x1
   2468c:	stlxr	w2, w1, [x0]
   24690:	cbnz	w2, 24684 <OnPrint@@Base+0x1d1c>
   24694:	add	x28, x24, #0x800, lsl #12
   24698:	mov	w0, #0x7fffff              	// #8388607
   2469c:	add	w3, w3, #0x1
   246a0:	dmb	ish
   246a4:	cmp	w3, w0
   246a8:	ldr	x0, [x28, #1024]
   246ac:	add	x0, x0, #0x1
   246b0:	str	x0, [x28, #1024]
   246b4:	b.hi	24888 <OnPrint@@Base+0x1f20>  // b.pmore
   246b8:	orr	w7, w3, w7, lsl #23
   246bc:	cbz	w7, 248a4 <OnPrint@@Base+0x1f3c>
   246c0:	adrp	x9, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   246c4:	sub	w27, w22, #0x1
   246c8:	add	x27, x27, #0x4
   246cc:	ldr	x1, [x9, #3528]
   246d0:	lsl	x27, x27, #3
   246d4:	add	x2, x1, #0x8
   246d8:	ldr	x19, [x1, #8]
   246dc:	dmb	ish
   246e0:	ldr	x3, [x1, #16]
   246e4:	dmb	ish
   246e8:	cbz	x19, 24780 <OnPrint@@Base+0x1e18>
   246ec:	add	x0, x27, x19
   246f0:	cmp	x0, x3
   246f4:	b.hi	24780 <OnPrint@@Base+0x1e18>  // b.pmore
   246f8:	ldxr	x3, [x2]
   246fc:	cmp	x3, x19
   24700:	b.ne	2470c <OnPrint@@Base+0x1da4>  // b.any
   24704:	stlxr	w4, x0, [x2]
   24708:	cbnz	w4, 246f8 <OnPrint@@Base+0x1d90>
   2470c:	dmb	ish
   24710:	cmp	x3, x19
   24714:	b.ne	246d8 <OnPrint@@Base+0x1d70>  // b.any
   24718:	ldr	x0, [x28, #1032]
   2471c:	and	w20, w20, #0xfff00000
   24720:	lsl	x2, x26, #3
   24724:	mov	x1, x21
   24728:	add	x27, x0, x27
   2472c:	str	x27, [x28, #1032]
   24730:	str	w7, [x19, #8]
   24734:	add	x0, x19, #0x18
   24738:	str	w20, [x19, #12]
   2473c:	stp	w22, w25, [x19, #16]
   24740:	stp	x5, x6, [sp, #104]
   24744:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   24748:	ldr	x6, [sp, #112]
   2474c:	str	x6, [x19]
   24750:	dmb	ish
   24754:	ldr	x5, [sp, #104]
   24758:	str	x19, [x24, x5, lsl #3]
   2475c:	cbz	x23, 24768 <OnPrint@@Base+0x1e00>
   24760:	mov	w0, #0x1                   	// #1
   24764:	strb	w0, [x23]
   24768:	mov	x0, x19
   2476c:	b	244ac <OnPrint@@Base+0x1b44>
   24770:	dmb	ish
   24774:	str	x6, [x24, x5, lsl #3]
   24778:	mov	x0, x4
   2477c:	b	244ac <OnPrint@@Base+0x1b44>
   24780:	ldr	x0, [x9, #3528]
   24784:	mov	w2, #0x1                   	// #1
   24788:	ldxrb	w1, [x0]
   2478c:	stxrb	w3, w2, [x0]
   24790:	cbnz	w3, 24788 <OnPrint@@Base+0x1e20>
   24794:	dmb	ish
   24798:	tst	w1, #0xff
   2479c:	b.eq	247c0 <OnPrint@@Base+0x1e58>  // b.none
   247a0:	str	x5, [sp, #104]
   247a4:	str	w7, [sp, #112]
   247a8:	str	x6, [sp, #120]
   247ac:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   247b0:	ldr	w7, [sp, #112]
   247b4:	adrp	x9, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   247b8:	ldr	x5, [sp, #104]
   247bc:	ldr	x6, [sp, #120]
   247c0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   247c4:	ldr	x3, [x9, #3528]
   247c8:	add	x0, x0, #0xd48
   247cc:	str	x0, [sp, #152]
   247d0:	add	x4, x3, #0x8
   247d4:	nop
   247d8:	ldr	x19, [x3, #8]
   247dc:	dmb	ish
   247e0:	ldr	x1, [x3, #16]
   247e4:	dmb	ish
   247e8:	cbz	x19, 24824 <OnPrint@@Base+0x1ebc>
   247ec:	add	x0, x27, x19
   247f0:	cmp	x0, x1
   247f4:	b.hi	24824 <OnPrint@@Base+0x1ebc>  // b.pmore
   247f8:	ldxr	x1, [x4]
   247fc:	cmp	x1, x19
   24800:	b.ne	2480c <OnPrint@@Base+0x1ea4>  // b.any
   24804:	stlxr	w2, x0, [x4]
   24808:	cbnz	w2, 247f8 <OnPrint@@Base+0x1e90>
   2480c:	dmb	ish
   24810:	cmp	x1, x19
   24814:	b.ne	247d8 <OnPrint@@Base+0x1e70>  // b.any
   24818:	dmb	ish
   2481c:	strb	wzr, [x3]
   24820:	b	24718 <OnPrint@@Base+0x1db0>
   24824:	ldr	x10, [x9, #3528]
   24828:	cmp	x27, #0x10, lsl #12
   2482c:	ldr	x1, [sp, #152]
   24830:	mov	x19, #0x10000               	// #65536
   24834:	str	xzr, [x10, #8]
   24838:	csel	x19, x27, x19, cs  // cs = hs, nlast
   2483c:	mov	x0, x19
   24840:	mov	w2, #0x0                   	// #0
   24844:	stp	x10, x5, [sp, #104]
   24848:	str	w7, [sp, #120]
   2484c:	stp	x6, x3, [sp, #128]
   24850:	str	x4, [sp, #144]
   24854:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   24858:	dmb	ish
   2485c:	add	x19, x19, x0
   24860:	ldr	x10, [sp, #104]
   24864:	str	x19, [x10, #16]
   24868:	dmb	ish
   2486c:	str	x0, [x10, #8]
   24870:	adrp	x9, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24874:	ldr	w7, [sp, #120]
   24878:	ldr	x5, [sp, #112]
   2487c:	ldp	x6, x3, [sp, #128]
   24880:	ldr	x4, [sp, #144]
   24884:	b	247d8 <OnPrint@@Base+0x1e70>
   24888:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2488c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24890:	add	x2, x2, #0xd20
   24894:	add	x0, x0, #0xcc0
   24898:	mov	x4, #0x800000              	// #8388608
   2489c:	mov	w1, #0x77                  	// #119
   248a0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   248a4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   248a8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   248ac:	add	x2, x2, #0xd38
   248b0:	add	x0, x0, #0xcc0
   248b4:	mov	x4, #0x0                   	// #0
   248b8:	mov	x3, #0x0                   	// #0
   248bc:	mov	w1, #0x79                  	// #121
   248c0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   248c4:	nop
   248c8:	add	x0, x0, #0x4
   248cc:	ret
   248d0:	str	x30, [sp, #-16]!
   248d4:	mov	x0, x30
   248d8:	ldr	x30, [sp], #16
   248dc:	ret
   248e0:	stp	x19, x20, [sp, #-32]!
   248e4:	cmp	x3, #0x0
   248e8:	stp	x21, x30, [sp, #16]
   248ec:	mov	x21, x3
   248f0:	cinc	w3, w2, ne  // ne = any
   248f4:	str	w3, [x0, #8]
   248f8:	cmp	w3, #0x100
   248fc:	b.hi	24930 <OnPrint@@Base+0x1fc8>  // b.pmore
   24900:	mov	x19, x0
   24904:	mov	x20, x2
   24908:	add	x0, x0, #0x10
   2490c:	lsl	x2, x2, #3
   24910:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   24914:	cbz	x21, 24920 <OnPrint@@Base+0x1fb8>
   24918:	add	x20, x20, #0x2
   2491c:	str	x21, [x19, x20, lsl #3]
   24920:	ldp	x21, x30, [sp, #16]
   24924:	str	xzr, [x19, #2064]
   24928:	ldp	x19, x20, [sp], #32
   2492c:	ret
   24930:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24934:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24938:	mov	w3, w3
   2493c:	add	x2, x2, #0xd58
   24940:	add	x0, x0, #0xd78
   24944:	mov	x4, #0x100                 	// #256
   24948:	mov	w1, #0x22                  	// #34
   2494c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24950:	stp	x19, x20, [sp, #-64]!
   24954:	mov	x19, x0
   24958:	mov	w20, w5
   2495c:	stp	x23, x24, [sp, #32]
   24960:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24964:	mov	x24, x1
   24968:	ldr	x23, [x23, #4000]
   2496c:	stp	x21, x22, [sp, #16]
   24970:	mov	x22, x2
   24974:	stp	x25, x30, [sp, #48]
   24978:	mov	x21, x3
   2497c:	mov	x25, x4
   24980:	ldr	x0, [x23]
   24984:	cbz	x0, 24a30 <OnPrint@@Base+0x20c8>
   24988:	cmp	w20, #0x1
   2498c:	mov	w3, w20
   24990:	b.ls	24a44 <OnPrint@@Base+0x20dc>  // b.plast
   24994:	mov	w1, #0x1                   	// #1
   24998:	str	w1, [x19, #8]
   2499c:	str	x24, [x19, #16]
   249a0:	cmp	x21, #0xfff
   249a4:	b.ls	24a1c <OnPrint@@Base+0x20b4>  // b.plast
   249a8:	cmp	x22, x25
   249ac:	b.ls	24a1c <OnPrint@@Base+0x20b4>  // b.plast
   249b0:	sub	x21, x21, #0x10
   249b4:	cmp	x22, x21
   249b8:	b.cs	24a1c <OnPrint@@Base+0x20b4>  // b.hs, b.nlast
   249bc:	tst	x22, #0x7
   249c0:	b.ne	24a1c <OnPrint@@Base+0x20b4>  // b.any
   249c4:	mov	x2, x22
   249c8:	ldr	x3, [x2, #8]
   249cc:	cmp	x0, x3
   249d0:	b.hi	24a1c <OnPrint@@Base+0x20b4>  // b.pmore
   249d4:	cmp	x24, x3
   249d8:	b.eq	249ec <OnPrint@@Base+0x2084>  // b.none
   249dc:	add	x4, x19, w1, uxtw #3
   249e0:	add	w1, w1, #0x1
   249e4:	str	w1, [x19, #8]
   249e8:	str	x3, [x4, #16]
   249ec:	ldr	x2, [x2]
   249f0:	cmp	x2, x22
   249f4:	b.ls	24a1c <OnPrint@@Base+0x20b4>  // b.plast
   249f8:	cmp	x2, x21
   249fc:	b.cs	24a1c <OnPrint@@Base+0x20b4>  // b.hs, b.nlast
   24a00:	tst	x2, #0x7
   24a04:	b.ne	24a1c <OnPrint@@Base+0x20b4>  // b.any
   24a08:	ldr	w1, [x19, #8]
   24a0c:	cmp	w1, w20
   24a10:	b.cs	24a1c <OnPrint@@Base+0x20b4>  // b.hs, b.nlast
   24a14:	mov	x22, x2
   24a18:	b	249c8 <OnPrint@@Base+0x2060>
   24a1c:	ldp	x21, x22, [sp, #16]
   24a20:	ldp	x23, x24, [sp, #32]
   24a24:	ldp	x25, x30, [sp, #48]
   24a28:	ldp	x19, x20, [sp], #64
   24a2c:	ret
   24a30:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24a34:	str	x0, [x23]
   24a38:	cmp	w20, #0x1
   24a3c:	mov	w3, w20
   24a40:	b.hi	24994 <OnPrint@@Base+0x202c>  // b.pmore
   24a44:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24a48:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24a4c:	add	x2, x2, #0xdc0
   24a50:	add	x0, x0, #0xd78
   24a54:	mov	x4, #0x2                   	// #2
   24a58:	mov	w1, #0x47                  	// #71
   24a5c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24a60:	ldr	w2, [x0, #8]
   24a64:	cmp	x1, w2, uxtw
   24a68:	b.cs	24af4 <OnPrint@@Base+0x218c>  // b.hs, b.nlast
   24a6c:	sub	w6, w2, w1
   24a70:	str	w6, [x0, #8]
   24a74:	cbz	w6, 24af0 <OnPrint@@Base+0x2188>
   24a78:	sub	x3, x6, #0x1
   24a7c:	cmp	x3, #0x9
   24a80:	ccmp	x1, #0x1, #0x0, hi  // hi = pmore
   24a84:	b.ls	24ad4 <OnPrint@@Base+0x216c>  // b.plast
   24a88:	add	x4, x1, #0x2
   24a8c:	lsr	x3, x6, #1
   24a90:	add	x5, x0, #0x10
   24a94:	mov	x2, #0x0                   	// #0
   24a98:	add	x4, x0, x4, lsl #3
   24a9c:	lsl	x3, x3, #4
   24aa0:	ldr	q0, [x4, x2]
   24aa4:	str	q0, [x5, x2]
   24aa8:	add	x2, x2, #0x10
   24aac:	cmp	x2, x3
   24ab0:	b.ne	24aa0 <OnPrint@@Base+0x2138>  // b.any
   24ab4:	and	x2, x6, #0xfffffffffffffffe
   24ab8:	tbz	w6, #0, 24af0 <OnPrint@@Base+0x2188>
   24abc:	add	x1, x2, x1
   24ac0:	add	x2, x2, #0x2
   24ac4:	add	x1, x1, #0x2
   24ac8:	ldr	x1, [x0, x1, lsl #3]
   24acc:	str	x1, [x0, x2, lsl #3]
   24ad0:	ret
   24ad4:	add	x0, x0, #0x10
   24ad8:	add	x2, x0, w6, uxtw #3
   24adc:	nop
   24ae0:	ldr	x3, [x0, x1, lsl #3]
   24ae4:	str	x3, [x0], #8
   24ae8:	cmp	x0, x2
   24aec:	b.ne	24ae0 <OnPrint@@Base+0x2178>  // b.any
   24af0:	ret
   24af4:	str	x30, [sp, #-16]!
   24af8:	mov	w4, w2
   24afc:	mov	x3, x1
   24b00:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24b04:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24b08:	add	x2, x2, #0xdd8
   24b0c:	add	x0, x0, #0xd78
   24b10:	mov	w1, #0x78                  	// #120
   24b14:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24b18:	ldr	w9, [x0, #8]
   24b1c:	cmp	x9, #0x1
   24b20:	b.ls	24b78 <OnPrint@@Base+0x2210>  // b.plast
   24b24:	ldr	x10, [x0]
   24b28:	mov	x3, #0x1                   	// #1
   24b2c:	mov	x0, #0x0                   	// #0
   24b30:	ldr	x2, [x10]
   24b34:	nop
   24b38:	sub	x7, x1, x2
   24b3c:	ldr	x6, [x10, x3, lsl #3]
   24b40:	sub	x5, x2, x1
   24b44:	cmp	x6, x1
   24b48:	sub	x8, x1, x6
   24b4c:	sub	x4, x6, x1
   24b50:	csel	x4, x4, x8, cs  // cs = hs, nlast
   24b54:	cmp	x2, x1
   24b58:	csel	x5, x5, x7, cs  // cs = hs, nlast
   24b5c:	cmp	x5, x4
   24b60:	csel	x0, x3, x0, hi  // hi = pmore
   24b64:	add	x3, x3, #0x1
   24b68:	csel	x2, x6, x2, hi  // hi = pmore
   24b6c:	cmp	x9, x3
   24b70:	b.ne	24b38 <OnPrint@@Base+0x21d0>  // b.any
   24b74:	ret
   24b78:	mov	x0, #0x0                   	// #0
   24b7c:	ret
   24b80:	stp	x19, x20, [sp, #-176]!
   24b84:	stp	x21, x22, [sp, #16]
   24b88:	mov	x21, x0
   24b8c:	ldr	x0, [x0]
   24b90:	str	x30, [sp, #80]
   24b94:	cbz	x0, 24bf4 <OnPrint@@Base+0x228c>
   24b98:	ldr	w0, [x21, #8]
   24b9c:	cbz	w0, 24bf4 <OnPrint@@Base+0x228c>
   24ba0:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24ba4:	stp	x23, x24, [sp, #32]
   24ba8:	ldr	x22, [x20, #4000]
   24bac:	stp	x25, x26, [sp, #48]
   24bb0:	stp	x27, x28, [sp, #64]
   24bb4:	ldr	x0, [x22]
   24bb8:	cbz	x0, 24c10 <OnPrint@@Base+0x22a8>
   24bbc:	str	xzr, [sp, #112]
   24bc0:	cmp	xzr, x0, lsl #1
   24bc4:	stp	xzr, xzr, [sp, #120]
   24bc8:	lsl	x19, x0, #1
   24bcc:	b.ne	24c3c <OnPrint@@Base+0x22d4>  // b.any
   24bd0:	stp	xzr, xzr, [sp, #128]
   24bd4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24bd8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24bdc:	add	x2, x2, #0x560
   24be0:	add	x0, x0, #0x578
   24be4:	mov	x4, #0x0                   	// #0
   24be8:	mov	x3, #0x0                   	// #0
   24bec:	mov	w1, #0x1b6                 	// #438
   24bf0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24bf4:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24bf8:	add	x0, x0, #0xdf0
   24bfc:	bl	22c78 <OnPrint@@Base+0x310>
   24c00:	ldp	x21, x22, [sp, #16]
   24c04:	ldr	x30, [sp, #80]
   24c08:	ldp	x19, x20, [sp], #176
   24c0c:	ret
   24c10:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24c14:	str	x0, [x22]
   24c18:	str	xzr, [sp, #112]
   24c1c:	mov	x19, x0
   24c20:	stp	xzr, xzr, [sp, #120]
   24c24:	cmp	xzr, x0, lsl #1
   24c28:	lsl	x1, x0, #1
   24c2c:	b.eq	24bd0 <OnPrint@@Base+0x2268>  // b.none
   24c30:	cbnz	x0, 24fd4 <OnPrint@@Base+0x266c>
   24c34:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24c38:	str	x0, [x22]
   24c3c:	sub	x1, x0, #0x1
   24c40:	tst	x1, x0
   24c44:	b.ne	24fa8 <OnPrint@@Base+0x2640>  // b.any
   24c48:	add	x1, x19, x1
   24c4c:	neg	x0, x0
   24c50:	and	x23, x1, x0
   24c54:	mov	w2, #0x0                   	// #0
   24c58:	mov	x0, x23
   24c5c:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24c60:	add	x1, x24, #0x700
   24c64:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   24c68:	ldr	x1, [sp, #112]
   24c6c:	mov	x22, x0
   24c70:	ldr	x2, [sp, #128]
   24c74:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   24c78:	ldp	x0, x1, [sp, #112]
   24c7c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24c80:	stp	x22, x23, [sp, #112]
   24c84:	ldr	x2, [sp, #128]
   24c88:	cmp	x19, x2
   24c8c:	b.ls	24fcc <OnPrint@@Base+0x2664>  // b.plast
   24c90:	cmp	x19, x23
   24c94:	b.hi	24e8c <OnPrint@@Base+0x2524>  // b.pmore
   24c98:	add	x0, x22, x2
   24c9c:	mov	w1, #0x0                   	// #0
   24ca0:	sub	x2, x19, x2
   24ca4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   24ca8:	stp	x19, xzr, [sp, #128]
   24cac:	ldr	x22, [sp, #112]
   24cb0:	cbz	x19, 24bd4 <OnPrint@@Base+0x226c>
   24cb4:	ldr	x23, [x20, #4000]
   24cb8:	strb	wzr, [x22]
   24cbc:	ldr	x19, [x23]
   24cc0:	cbz	x19, 24e40 <OnPrint@@Base+0x24d8>
   24cc4:	str	xzr, [sp, #144]
   24cc8:	stp	xzr, xzr, [sp, #152]
   24ccc:	sub	x23, x19, #0x1
   24cd0:	ands	x23, x23, x19
   24cd4:	b.ne	24fa8 <OnPrint@@Base+0x2640>  // b.any
   24cd8:	lsl	x0, x19, #1
   24cdc:	neg	x25, x19
   24ce0:	sub	x0, x0, #0x1
   24ce4:	add	x1, x24, #0x700
   24ce8:	and	x25, x0, x25
   24cec:	mov	w2, #0x0                   	// #0
   24cf0:	mov	x0, x25
   24cf4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   24cf8:	ldr	x1, [sp, #144]
   24cfc:	mov	x22, x0
   24d00:	ldr	x2, [sp, #160]
   24d04:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   24d08:	ldp	x0, x1, [sp, #144]
   24d0c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24d10:	stp	x22, x25, [sp, #144]
   24d14:	ldr	x2, [sp, #160]
   24d18:	cmp	x19, x2
   24d1c:	b.ls	24fdc <OnPrint@@Base+0x2674>  // b.plast
   24d20:	cmp	x19, x25
   24d24:	b.hi	24f04 <OnPrint@@Base+0x259c>  // b.pmore
   24d28:	add	x0, x22, x2
   24d2c:	mov	w1, #0x0                   	// #0
   24d30:	sub	x2, x19, x2
   24d34:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   24d38:	ldr	x22, [sp, #144]
   24d3c:	stp	x19, xzr, [sp, #160]
   24d40:	adrp	x26, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24d44:	strb	wzr, [x22]
   24d48:	ldr	x1, [x26, #4040]
   24d4c:	str	xzr, [sp, #96]
   24d50:	ldr	w0, [x21, #8]
   24d54:	ldr	w27, [x1, #184]
   24d58:	cbz	w0, 24f74 <OnPrint@@Base+0x260c>
   24d5c:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   24d60:	add	x28, sp, #0x70
   24d64:	add	x24, x24, #0xb00
   24d68:	ldr	x0, [x21]
   24d6c:	ldr	x1, [sp, #96]
   24d70:	ldr	x19, [x0, x1, lsl #3]
   24d74:	cbz	x19, 24f74 <OnPrint@@Base+0x260c>
   24d78:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   24d7c:	sub	x1, x19, #0x4
   24d80:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   24d84:	str	x0, [sp, #104]
   24d88:	cbz	x0, 24ee4 <OnPrint@@Base+0x257c>
   24d8c:	mov	x25, x0
   24d90:	adrp	x22, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   24d94:	ldr	x0, [sp, #128]
   24d98:	add	x22, x22, #0x550
   24d9c:	mov	x19, x23
   24da0:	ldr	x2, [sp, #112]
   24da4:	cbz	x0, 24bd4 <OnPrint@@Base+0x226c>
   24da8:	ldr	x1, [x26, #4040]
   24dac:	strb	wzr, [x2]
   24db0:	mov	x6, x24
   24db4:	mov	w2, w19
   24db8:	add	x3, x25, #0x8
   24dbc:	mov	x0, x28
   24dc0:	ldrb	w4, [x1, #181]
   24dc4:	add	x20, x19, #0x1
   24dc8:	ldr	x5, [x1, #24]
   24dcc:	str	xzr, [sp, #136]
   24dd0:	ldr	x1, [x1, #192]
   24dd4:	bl	26b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>
   24dd8:	ldr	x1, [sp, #112]
   24ddc:	mov	x0, x22
   24de0:	bl	22c78 <OnPrint@@Base+0x310>
   24de4:	add	w1, w27, w23
   24de8:	sub	w0, w1, w19
   24dec:	sub	w19, w1, w20
   24df0:	cmp	w0, #0x0
   24df4:	b.le	24e10 <OnPrint@@Base+0x24a8>
   24df8:	ldr	x0, [sp, #168]
   24dfc:	cbnz	x0, 24e2c <OnPrint@@Base+0x24c4>
   24e00:	ldr	x1, [x25, #40]
   24e04:	cbz	x1, 24e10 <OnPrint@@Base+0x24a8>
   24e08:	add	x0, sp, #0x90
   24e0c:	bl	22d88 <OnPrint@@Base+0x420>
   24e10:	ldr	x25, [x25]
   24e14:	cbz	x25, 24e60 <OnPrint@@Base+0x24f8>
   24e18:	ldr	x0, [sp, #128]
   24e1c:	mov	x19, x20
   24e20:	ldr	x2, [sp, #112]
   24e24:	cbnz	x0, 24da8 <OnPrint@@Base+0x2440>
   24e28:	b	24bd4 <OnPrint@@Base+0x226c>
   24e2c:	add	x0, sp, #0x90
   24e30:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24e34:	add	x1, x1, #0xe70
   24e38:	bl	22d88 <OnPrint@@Base+0x420>
   24e3c:	b	24e00 <OnPrint@@Base+0x2498>
   24e40:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24e44:	str	x0, [x23]
   24e48:	str	xzr, [sp, #144]
   24e4c:	mov	x19, x0
   24e50:	stp	xzr, xzr, [sp, #152]
   24e54:	cbnz	x0, 24ccc <OnPrint@@Base+0x2364>
   24e58:	stp	xzr, xzr, [sp, #160]
   24e5c:	b	24bd4 <OnPrint@@Base+0x226c>
   24e60:	ldr	x0, [sp, #104]
   24e64:	bl	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   24e68:	ldr	x1, [sp, #96]
   24e6c:	ldr	w0, [x21, #8]
   24e70:	add	x1, x1, #0x1
   24e74:	str	x1, [sp, #96]
   24e78:	cmp	x0, x1
   24e7c:	b.ls	24f74 <OnPrint@@Base+0x260c>  // b.plast
   24e80:	mov	x23, x20
   24e84:	mov	w27, w19
   24e88:	b	24d68 <OnPrint@@Base+0x2400>
   24e8c:	ldr	x22, [x20, #4000]
   24e90:	ldr	x0, [x22]
   24e94:	cbz	x0, 24f5c <OnPrint@@Base+0x25f4>
   24e98:	sub	x1, x0, #0x1
   24e9c:	tst	x1, x0
   24ea0:	b.ne	24fa8 <OnPrint@@Base+0x2640>  // b.any
   24ea4:	add	x1, x19, x1
   24ea8:	neg	x0, x0
   24eac:	and	x23, x1, x0
   24eb0:	mov	w2, #0x0                   	// #0
   24eb4:	add	x1, x24, #0x700
   24eb8:	mov	x0, x23
   24ebc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   24ec0:	mov	x22, x0
   24ec4:	ldr	x1, [sp, #112]
   24ec8:	ldr	x2, [sp, #128]
   24ecc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   24ed0:	ldp	x0, x1, [sp, #112]
   24ed4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24ed8:	stp	x22, x23, [sp, #112]
   24edc:	ldr	x2, [sp, #128]
   24ee0:	b	24c98 <OnPrint@@Base+0x2330>
   24ee4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24ee8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24eec:	add	x2, x2, #0xe08
   24ef0:	add	x0, x0, #0xe20
   24ef4:	mov	x4, #0x0                   	// #0
   24ef8:	mov	x3, #0x0                   	// #0
   24efc:	mov	w1, #0x22                  	// #34
   24f00:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24f04:	ldr	x20, [x20, #4000]
   24f08:	ldr	x0, [x20]
   24f0c:	cbz	x0, 24f68 <OnPrint@@Base+0x2600>
   24f10:	sub	x1, x0, #0x1
   24f14:	tst	x1, x0
   24f18:	b.ne	24fa8 <OnPrint@@Base+0x2640>  // b.any
   24f1c:	add	x1, x19, x1
   24f20:	neg	x0, x0
   24f24:	and	x20, x1, x0
   24f28:	mov	w2, #0x0                   	// #0
   24f2c:	add	x1, x24, #0x700
   24f30:	mov	x0, x20
   24f34:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   24f38:	mov	x22, x0
   24f3c:	ldr	x1, [sp, #144]
   24f40:	ldr	x2, [sp, #160]
   24f44:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   24f48:	ldp	x0, x1, [sp, #144]
   24f4c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24f50:	stp	x22, x20, [sp, #144]
   24f54:	ldr	x2, [sp, #160]
   24f58:	b	24d28 <OnPrint@@Base+0x23c0>
   24f5c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24f60:	str	x0, [x22]
   24f64:	b	24e98 <OnPrint@@Base+0x2530>
   24f68:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   24f6c:	str	x0, [x20]
   24f70:	b	24f10 <OnPrint@@Base+0x25a8>
   24f74:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   24f78:	add	x0, x0, #0x1a0
   24f7c:	bl	22c78 <OnPrint@@Base+0x310>
   24f80:	ldr	x0, [sp, #168]
   24f84:	cbnz	x0, 24fb8 <OnPrint@@Base+0x2650>
   24f88:	ldp	x0, x1, [sp, #144]
   24f8c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24f90:	ldp	x0, x1, [sp, #112]
   24f94:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   24f98:	ldp	x23, x24, [sp, #32]
   24f9c:	ldp	x25, x26, [sp, #48]
   24fa0:	ldp	x27, x28, [sp, #64]
   24fa4:	b	24c00 <OnPrint@@Base+0x2298>
   24fa8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   24fac:	add	x0, x0, #0x6e8
   24fb0:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   24fb4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   24fb8:	ldr	x1, [sp, #144]
   24fbc:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   24fc0:	add	x0, x0, #0xe78
   24fc4:	bl	22c78 <OnPrint@@Base+0x310>
   24fc8:	b	24f88 <OnPrint@@Base+0x2620>
   24fcc:	stp	x19, xzr, [sp, #128]
   24fd0:	b	24cb4 <OnPrint@@Base+0x234c>
   24fd4:	mov	x19, x1
   24fd8:	b	24c3c <OnPrint@@Base+0x22d4>
   24fdc:	stp	x19, xzr, [sp, #160]
   24fe0:	b	24d40 <OnPrint@@Base+0x23d8>
   24fe4:	nop
   24fe8:	mov	w8, w1
   24fec:	and	w7, w7, #0xff
   24ff0:	mov	x1, x2
   24ff4:	mov	x9, x0
   24ff8:	mov	x2, x3
   24ffc:	mov	x3, x5
   25000:	cbnz	w8, 25010 <OnPrint@@Base+0x26a8>
   25004:	str	wzr, [x0, #8]
   25008:	str	xzr, [x0, #2064]
   2500c:	ret
   25010:	str	x2, [x0, #2064]
   25014:	cmp	w8, #0x1
   25018:	b.eq	2503c <OnPrint@@Base+0x26d4>  // b.none
   2501c:	cbnz	w7, 25030 <OnPrint@@Base+0x26c8>
   25020:	cbz	x4, 25048 <OnPrint@@Base+0x26e0>
   25024:	mov	w3, w8
   25028:	mov	x2, x4
   2502c:	b	2dfe0 <__sanitizer_set_death_callback@@Base+0x18f8>
   25030:	mov	w5, w8
   25034:	mov	x4, x6
   25038:	b	24950 <OnPrint@@Base+0x1fe8>
   2503c:	str	w8, [x9, #8]
   25040:	str	x1, [x9, #16]
   25044:	ret
   25048:	mov	w2, w8
   2504c:	b	2df40 <__sanitizer_set_death_callback@@Base+0x1858>

0000000000025050 <__sanitizer_symbolize_pc@@Base>:
   25050:	cbnz	x3, 25058 <__sanitizer_symbolize_pc@@Base+0x8>
   25054:	ret
   25058:	stp	x19, x20, [sp, #-112]!
   2505c:	mov	x19, x2
   25060:	mov	x20, x3
   25064:	stp	x21, x22, [sp, #16]
   25068:	mov	x21, x0
   2506c:	stp	x23, x24, [sp, #32]
   25070:	mov	x23, x1
   25074:	str	x30, [sp, #72]
   25078:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   2507c:	sub	x1, x21, #0x4
   25080:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   25084:	mov	x21, x0
   25088:	cbz	x0, 252c4 <__sanitizer_symbolize_pc@@Base+0x274>
   2508c:	stp	x25, x26, [sp, #48]
   25090:	adrp	x26, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25094:	ldr	x24, [x26, #4000]
   25098:	ldr	x22, [x24]
   2509c:	str	x27, [sp, #64]
   250a0:	cbz	x22, 251fc <__sanitizer_symbolize_pc@@Base+0x1ac>
   250a4:	str	xzr, [sp, #80]
   250a8:	stp	xzr, xzr, [sp, #88]
   250ac:	sub	x0, x22, #0x1
   250b0:	tst	x0, x22
   250b4:	b.ne	252b4 <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   250b8:	lsl	x0, x22, #1
   250bc:	neg	x25, x22
   250c0:	sub	x0, x0, #0x1
   250c4:	mov	w2, #0x0                   	// #0
   250c8:	and	x25, x0, x25
   250cc:	adrp	x27, 46000 <__asan_backtrace_release_view@@Base+0x48>
   250d0:	mov	x0, x25
   250d4:	add	x1, x27, #0x700
   250d8:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   250dc:	mov	x24, x0
   250e0:	ldr	x1, [sp, #80]
   250e4:	ldr	x2, [sp, #96]
   250e8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   250ec:	ldp	x0, x1, [sp, #80]
   250f0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   250f4:	stp	x24, x25, [sp, #80]
   250f8:	ldr	x2, [sp, #96]
   250fc:	cmp	x22, x2
   25100:	b.ls	25304 <__sanitizer_symbolize_pc@@Base+0x2b4>  // b.plast
   25104:	cmp	x22, x25
   25108:	b.hi	25250 <__sanitizer_symbolize_pc@@Base+0x200>  // b.pmore
   2510c:	add	x0, x24, x2
   25110:	mov	w1, #0x0                   	// #0
   25114:	sub	x2, x22, x2
   25118:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   2511c:	ldr	x24, [sp, #80]
   25120:	stp	x22, xzr, [sp, #96]
   25124:	sub	x20, x20, #0x1
   25128:	strb	wzr, [x24]
   2512c:	add	x20, x19, x20
   25130:	cmp	x19, x20
   25134:	b.cs	251cc <__sanitizer_symbolize_pc@@Base+0x17c>  // b.hs, b.nlast
   25138:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2513c:	adrp	x26, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25140:	add	x27, sp, #0x50
   25144:	add	x26, x26, #0xb00
   25148:	ldr	x25, [x25, #4040]
   2514c:	mov	w22, #0x0                   	// #0
   25150:	ldr	x0, [sp, #96]
   25154:	ldr	x1, [sp, #80]
   25158:	cbz	x0, 25218 <__sanitizer_symbolize_pc@@Base+0x1c8>
   2515c:	strb	wzr, [x1]
   25160:	mov	x0, x27
   25164:	mov	x6, x26
   25168:	add	x3, x21, #0x8
   2516c:	ldrb	w4, [x25, #181]
   25170:	mov	w2, w22
   25174:	ldr	x5, [x25, #24]
   25178:	mov	x1, x23
   2517c:	str	xzr, [sp, #104]
   25180:	bl	26b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>
   25184:	ldr	x0, [sp, #104]
   25188:	cbz	x0, 25238 <__sanitizer_symbolize_pc@@Base+0x1e8>
   2518c:	ldr	x1, [sp, #80]
   25190:	sub	x24, x20, x19
   25194:	sub	x24, x24, #0x1
   25198:	mov	x0, x19
   2519c:	mov	x2, x24
   251a0:	add	w22, w22, #0x1
   251a4:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   251a8:	ldr	x2, [sp, #104]
   251ac:	cmp	x2, x24
   251b0:	csel	x2, x2, x24, ls  // ls = plast
   251b4:	add	x19, x19, x2
   251b8:	strb	wzr, [x19], #1
   251bc:	ldr	x21, [x21]
   251c0:	cmp	x21, #0x0
   251c4:	ccmp	x20, x19, #0x0, ne  // ne = any
   251c8:	b.hi	25150 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   251cc:	cmp	x19, x20
   251d0:	b.hi	252e4 <__sanitizer_symbolize_pc@@Base+0x294>  // b.pmore
   251d4:	ldp	x0, x1, [sp, #80]
   251d8:	strb	wzr, [x19]
   251dc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   251e0:	ldp	x25, x26, [sp, #48]
   251e4:	ldr	x27, [sp, #64]
   251e8:	ldp	x21, x22, [sp, #16]
   251ec:	ldp	x23, x24, [sp, #32]
   251f0:	ldr	x30, [sp, #72]
   251f4:	ldp	x19, x20, [sp], #112
   251f8:	ret
   251fc:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   25200:	str	x0, [x24]
   25204:	str	xzr, [sp, #80]
   25208:	mov	x22, x0
   2520c:	stp	xzr, xzr, [sp, #88]
   25210:	cbnz	x0, 250ac <__sanitizer_symbolize_pc@@Base+0x5c>
   25214:	stp	xzr, xzr, [sp, #96]
   25218:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2521c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25220:	add	x2, x2, #0x560
   25224:	add	x0, x0, #0x578
   25228:	mov	x4, #0x0                   	// #0
   2522c:	mov	x3, #0x0                   	// #0
   25230:	mov	w1, #0x1b6                 	// #438
   25234:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25238:	ldr	x21, [x21]
   2523c:	add	w22, w22, #0x1
   25240:	cmp	x21, #0x0
   25244:	ccmp	x20, x19, #0x0, ne  // ne = any
   25248:	b.hi	25150 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   2524c:	b	251cc <__sanitizer_symbolize_pc@@Base+0x17c>
   25250:	ldr	x26, [x26, #4000]
   25254:	ldr	x0, [x26]
   25258:	cbz	x0, 252a8 <__sanitizer_symbolize_pc@@Base+0x258>
   2525c:	sub	x1, x0, #0x1
   25260:	tst	x0, x1
   25264:	b.ne	252b4 <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   25268:	add	x1, x22, x1
   2526c:	neg	x0, x0
   25270:	and	x25, x1, x0
   25274:	mov	w2, #0x0                   	// #0
   25278:	add	x1, x27, #0x700
   2527c:	mov	x0, x25
   25280:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   25284:	mov	x24, x0
   25288:	ldr	x1, [sp, #80]
   2528c:	ldr	x2, [sp, #96]
   25290:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   25294:	ldp	x0, x1, [sp, #80]
   25298:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2529c:	stp	x24, x25, [sp, #80]
   252a0:	ldr	x2, [sp, #96]
   252a4:	b	2510c <__sanitizer_symbolize_pc@@Base+0xbc>
   252a8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   252ac:	str	x0, [x26]
   252b0:	b	2525c <__sanitizer_symbolize_pc@@Base+0x20c>
   252b4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   252b8:	add	x0, x0, #0x6e8
   252bc:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   252c0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   252c4:	mov	x0, x19
   252c8:	add	x19, x19, x20
   252cc:	mov	x2, x20
   252d0:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   252d4:	add	x1, x1, #0xe90
   252d8:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   252dc:	sturb	wzr, [x19, #-1]
   252e0:	b	251e8 <__sanitizer_symbolize_pc@@Base+0x198>
   252e4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   252e8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   252ec:	add	x2, x2, #0xea8
   252f0:	add	x0, x0, #0xe20
   252f4:	mov	x4, #0x0                   	// #0
   252f8:	mov	x3, #0x0                   	// #0
   252fc:	mov	w1, #0x84                  	// #132
   25300:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25304:	stp	x22, xzr, [sp, #96]
   25308:	b	25124 <__sanitizer_symbolize_pc@@Base+0xd4>
   2530c:	nop

0000000000025310 <__sanitizer_symbolize_global@@Base>:
   25310:	cbnz	x3, 25318 <__sanitizer_symbolize_global@@Base+0x8>
   25314:	ret
   25318:	stp	x19, x20, [sp, #-176]!
   2531c:	mov	x20, x0
   25320:	mov	x19, x3
   25324:	stp	x21, x22, [sp, #16]
   25328:	mov	x22, x1
   2532c:	mov	x21, x2
   25330:	stp	x23, x24, [sp, #32]
   25334:	add	x23, sp, #0x70
   25338:	mov	x0, x23
   2533c:	str	x30, [sp, #72]
   25340:	strb	wzr, [x2]
   25344:	bl	28e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3970>
   25348:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   2534c:	mov	x2, x23
   25350:	mov	x1, x20
   25354:	bl	2abc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56b8>
   25358:	tst	w0, #0xff
   2535c:	b.eq	25440 <__sanitizer_symbolize_global@@Base+0x130>  // b.none
   25360:	stp	x25, x26, [sp, #48]
   25364:	adrp	x26, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25368:	ldr	x24, [x26, #4000]
   2536c:	ldr	x20, [x24]
   25370:	str	x27, [sp, #64]
   25374:	cbz	x20, 25454 <__sanitizer_symbolize_global@@Base+0x144>
   25378:	str	xzr, [sp, #80]
   2537c:	stp	xzr, xzr, [sp, #88]
   25380:	sub	x0, x20, #0x1
   25384:	tst	x0, x20
   25388:	b.ne	254f4 <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   2538c:	lsl	x0, x20, #1
   25390:	neg	x25, x20
   25394:	sub	x0, x0, #0x1
   25398:	mov	w2, #0x0                   	// #0
   2539c:	and	x25, x0, x25
   253a0:	adrp	x27, 46000 <__asan_backtrace_release_view@@Base+0x48>
   253a4:	mov	x0, x25
   253a8:	add	x1, x27, #0x700
   253ac:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   253b0:	mov	x24, x0
   253b4:	ldr	x1, [sp, #80]
   253b8:	ldr	x2, [sp, #96]
   253bc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   253c0:	ldp	x0, x1, [sp, #80]
   253c4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   253c8:	stp	x24, x25, [sp, #80]
   253cc:	ldr	x2, [sp, #96]
   253d0:	cmp	x20, x2
   253d4:	b.ls	25504 <__sanitizer_symbolize_global@@Base+0x1f4>  // b.plast
   253d8:	cmp	x20, x25
   253dc:	b.hi	25490 <__sanitizer_symbolize_global@@Base+0x180>  // b.pmore
   253e0:	add	x0, x24, x2
   253e4:	mov	w1, #0x0                   	// #0
   253e8:	sub	x2, x20, x2
   253ec:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   253f0:	ldr	x24, [sp, #80]
   253f4:	stp	x20, xzr, [sp, #96]
   253f8:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   253fc:	strb	wzr, [x24]
   25400:	mov	x2, x23
   25404:	ldr	x3, [x3, #4040]
   25408:	mov	x1, x22
   2540c:	add	x0, sp, #0x50
   25410:	ldr	x3, [x3, #24]
   25414:	bl	26800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12f0>
   25418:	ldr	x1, [sp, #80]
   2541c:	mov	x2, x19
   25420:	mov	x0, x21
   25424:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   25428:	ldp	x0, x1, [sp, #80]
   2542c:	add	x2, x21, x19
   25430:	sturb	wzr, [x2, #-1]
   25434:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25438:	ldp	x25, x26, [sp, #48]
   2543c:	ldr	x27, [sp, #64]
   25440:	ldp	x21, x22, [sp, #16]
   25444:	ldp	x23, x24, [sp, #32]
   25448:	ldr	x30, [sp, #72]
   2544c:	ldp	x19, x20, [sp], #176
   25450:	ret
   25454:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   25458:	str	x0, [x24]
   2545c:	str	xzr, [sp, #80]
   25460:	mov	x20, x0
   25464:	stp	xzr, xzr, [sp, #88]
   25468:	cbnz	x0, 25380 <__sanitizer_symbolize_global@@Base+0x70>
   2546c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25470:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25474:	add	x2, x2, #0x560
   25478:	add	x0, x0, #0x578
   2547c:	mov	x4, #0x0                   	// #0
   25480:	mov	x3, #0x0                   	// #0
   25484:	mov	w1, #0x1b6                 	// #438
   25488:	stp	xzr, xzr, [sp, #96]
   2548c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25490:	ldr	x26, [x26, #4000]
   25494:	ldr	x0, [x26]
   25498:	cbz	x0, 254e8 <__sanitizer_symbolize_global@@Base+0x1d8>
   2549c:	sub	x1, x0, #0x1
   254a0:	tst	x0, x1
   254a4:	b.ne	254f4 <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   254a8:	add	x1, x20, x1
   254ac:	neg	x0, x0
   254b0:	and	x25, x1, x0
   254b4:	mov	w2, #0x0                   	// #0
   254b8:	add	x1, x27, #0x700
   254bc:	mov	x0, x25
   254c0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   254c4:	mov	x24, x0
   254c8:	ldr	x1, [sp, #80]
   254cc:	ldr	x2, [sp, #96]
   254d0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   254d4:	ldp	x0, x1, [sp, #80]
   254d8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   254dc:	stp	x24, x25, [sp, #80]
   254e0:	ldr	x2, [sp, #96]
   254e4:	b	253e0 <__sanitizer_symbolize_global@@Base+0xd0>
   254e8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   254ec:	str	x0, [x26]
   254f0:	b	2549c <__sanitizer_symbolize_global@@Base+0x18c>
   254f4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   254f8:	add	x0, x0, #0x6e8
   254fc:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   25500:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   25504:	stp	x20, xzr, [sp, #96]
   25508:	b	253f8 <__sanitizer_symbolize_global@@Base+0xe8>
   2550c:	nop

0000000000025510 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   25510:	stp	x19, x20, [sp, #-64]!
   25514:	mov	x19, x1
   25518:	mov	x20, x2
   2551c:	stp	x21, x22, [sp, #16]
   25520:	mov	x21, x0
   25524:	mov	x22, x3
   25528:	str	x30, [sp, #32]
   2552c:	str	xzr, [sp, #56]
   25530:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   25534:	mov	x1, x21
   25538:	mov	x3, x22
   2553c:	add	x2, sp, #0x38
   25540:	mov	w21, #0x0                   	// #0
   25544:	bl	2a148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
   25548:	tst	w0, #0xff
   2554c:	b.eq	25560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50>  // b.none
   25550:	cmp	x19, #0x0
   25554:	mov	w21, #0x1                   	// #1
   25558:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   2555c:	b.ne	25574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64>  // b.any
   25560:	mov	w0, w21
   25564:	ldp	x21, x22, [sp, #16]
   25568:	ldr	x30, [sp, #32]
   2556c:	ldp	x19, x20, [sp], #64
   25570:	ret
   25574:	ldr	x1, [sp, #56]
   25578:	mov	x0, x19
   2557c:	add	x19, x19, x20
   25580:	mov	x2, x20
   25584:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   25588:	sturb	wzr, [x19, #-1]
   2558c:	mov	w0, w21
   25590:	ldp	x21, x22, [sp, #16]
   25594:	ldr	x30, [sp, #32]
   25598:	ldp	x19, x20, [sp], #64
   2559c:	ret
   255a0:	stp	x19, x20, [sp, #-96]!
   255a4:	stp	x23, x24, [sp, #32]
   255a8:	adrp	x24, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   255ac:	mov	x23, x0
   255b0:	ldr	x19, [x24, #4000]
   255b4:	stp	x21, x22, [sp, #16]
   255b8:	mov	x22, x1
   255bc:	stp	x25, x30, [sp, #48]
   255c0:	mov	x21, x2
   255c4:	ldr	x3, [x19]
   255c8:	str	xzr, [sp, #64]
   255cc:	stp	xzr, xzr, [sp, #72]
   255d0:	cbz	x3, 256c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b8>
   255d4:	sub	x0, x3, #0x1
   255d8:	tst	x0, x3
   255dc:	b.ne	25730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220>  // b.any
   255e0:	add	x20, x3, #0x3ff
   255e4:	neg	x3, x3
   255e8:	and	x20, x20, x3
   255ec:	mov	w2, #0x0                   	// #0
   255f0:	mov	x0, x20
   255f4:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
   255f8:	add	x1, x25, #0x700
   255fc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   25600:	ldr	x1, [sp, #64]
   25604:	mov	x19, x0
   25608:	ldr	x2, [sp, #80]
   2560c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   25610:	ldp	x0, x1, [sp, #64]
   25614:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25618:	stp	x19, x20, [sp, #64]
   2561c:	ldr	x2, [sp, #80]
   25620:	cmp	x2, #0x3ff
   25624:	b.hi	25648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>  // b.pmore
   25628:	cmp	x20, #0x3ff
   2562c:	b.ls	256d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>  // b.plast
   25630:	mov	x3, #0x400                 	// #1024
   25634:	add	x0, x19, x2
   25638:	mov	w1, #0x0                   	// #0
   2563c:	sub	x2, x3, x2
   25640:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   25644:	ldr	x19, [sp, #64]
   25648:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   2564c:	add	x20, sp, #0x40
   25650:	mov	x2, x23
   25654:	ldr	q0, [x0, #1232]
   25658:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2565c:	mov	x0, x20
   25660:	add	x1, x1, #0x68
   25664:	str	q0, [sp, #80]
   25668:	strb	wzr, [x19]
   2566c:	bl	22d88 <OnPrint@@Base+0x420>
   25670:	adrp	x4, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25674:	mov	x3, x22
   25678:	mov	w2, #0x0                   	// #0
   2567c:	mov	x0, x20
   25680:	ldr	x4, [x4, #4040]
   25684:	adrp	x6, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25688:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2568c:	add	x6, x6, #0xb00
   25690:	add	x1, x1, #0xec8
   25694:	ldr	x5, [x4, #24]
   25698:	ldrb	w4, [x4, #181]
   2569c:	bl	26b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>
   256a0:	ldr	x0, [sp, #64]
   256a4:	mov	x1, x21
   256a8:	bl	160c8 <__sanitizer_report_error_summary@@Base+0x10>
   256ac:	ldp	x0, x1, [sp, #64]
   256b0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   256b4:	ldp	x21, x22, [sp, #16]
   256b8:	ldp	x23, x24, [sp, #32]
   256bc:	ldp	x25, x30, [sp, #48]
   256c0:	ldp	x19, x20, [sp], #96
   256c4:	ret
   256c8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   256cc:	mov	x3, x0
   256d0:	str	x0, [x19]
   256d4:	b	255d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4>
   256d8:	ldr	x24, [x24, #4000]
   256dc:	ldr	x0, [x24]
   256e0:	cbz	x0, 25740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x230>
   256e4:	sub	x1, x0, #0x1
   256e8:	tst	x1, x0
   256ec:	b.ne	25730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220>  // b.any
   256f0:	add	x20, x0, #0x3ff
   256f4:	neg	x0, x0
   256f8:	and	x20, x20, x0
   256fc:	add	x1, x25, #0x700
   25700:	mov	w2, #0x0                   	// #0
   25704:	mov	x0, x20
   25708:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2570c:	mov	x19, x0
   25710:	ldr	x1, [sp, #64]
   25714:	ldr	x2, [sp, #80]
   25718:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2571c:	ldp	x0, x1, [sp, #64]
   25720:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25724:	stp	x19, x20, [sp, #64]
   25728:	ldr	x2, [sp, #80]
   2572c:	b	25630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x120>
   25730:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25734:	add	x0, x0, #0x6e8
   25738:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2573c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   25740:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   25744:	str	x0, [x24]
   25748:	b	256e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d4>
   2574c:	nop
   25750:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25754:	ldr	x3, [x3, #4040]
   25758:	ldrb	w3, [x3, #60]
   2575c:	cbnz	w3, 25764 <__sanitizer_get_module_and_offset_for_pc@@Base+0x254>
   25760:	ret
   25764:	b	255a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   25768:	stp	x19, x20, [sp, #-32]!
   2576c:	mov	x19, x0
   25770:	mov	w1, #0x1                   	// #1
   25774:	ldr	x20, [x0]
   25778:	str	x30, [sp, #16]
   2577c:	ldxrb	w0, [x20]
   25780:	stxrb	w2, w1, [x20]
   25784:	cbnz	w2, 2577c <__sanitizer_get_module_and_offset_for_pc@@Base+0x26c>
   25788:	dmb	ish
   2578c:	tst	w0, #0xff
   25790:	b.eq	2579c <__sanitizer_get_module_and_offset_for_pc@@Base+0x28c>  // b.none
   25794:	mov	x0, x20
   25798:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   2579c:	mov	x0, x19
   257a0:	bl	18d00 <__sanitizer_cov_dump@@Base+0x1e80>
   257a4:	ldr	w0, [x19, #8]
   257a8:	bl	21540 <__sanitizer_set_report_fd@@Base+0x7c78>
   257ac:	dmb	ish
   257b0:	strb	wzr, [x20]
   257b4:	ldr	x30, [sp, #16]
   257b8:	ldp	x19, x20, [sp], #32
   257bc:	ret
   257c0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   257c4:	stp	x19, x20, [sp, #-32]!
   257c8:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   257cc:	ldr	x0, [x0, #4040]
   257d0:	add	x1, x1, #0xed0
   257d4:	ldr	x19, [x0, #112]
   257d8:	str	x30, [sp, #16]
   257dc:	mov	x0, x19
   257e0:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   257e4:	mov	w1, #0x1                   	// #1
   257e8:	cbnz	w0, 257fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ec>
   257ec:	mov	w0, w1
   257f0:	ldr	x30, [sp, #16]
   257f4:	ldp	x19, x20, [sp], #32
   257f8:	ret
   257fc:	mov	x0, x19
   25800:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   25804:	add	x1, x1, #0x100
   25808:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2580c:	mov	w1, #0x0                   	// #0
   25810:	cbnz	w0, 257ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dc>
   25814:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25818:	mov	w1, #0x1                   	// #1
   2581c:	ldr	x0, [x19, #3816]
   25820:	ldr	x20, [x0]
   25824:	ldxrb	w0, [x20]
   25828:	stxrb	w2, w1, [x20]
   2582c:	cbnz	w2, 25824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x314>
   25830:	dmb	ish
   25834:	tst	w0, #0xff
   25838:	b.eq	25844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x334>  // b.none
   2583c:	mov	x0, x20
   25840:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   25844:	ldr	x19, [x19, #3816]
   25848:	mov	x0, x19
   2584c:	bl	18d00 <__sanitizer_cov_dump@@Base+0x1e80>
   25850:	ldr	w0, [x19, #8]
   25854:	bl	21540 <__sanitizer_set_report_fd@@Base+0x7c78>
   25858:	dmb	ish
   2585c:	and	w1, w0, #0xff
   25860:	strb	wzr, [x20]
   25864:	mov	w0, w1
   25868:	ldr	x30, [sp, #16]
   2586c:	ldp	x19, x20, [sp], #32
   25870:	ret
   25874:	nop
   25878:	stp	x19, x20, [sp, #-48]!
   2587c:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25880:	ldr	x19, [x19, #4040]
   25884:	stp	x21, x22, [sp, #16]
   25888:	mov	x21, x2
   2588c:	ldrb	w2, [x19, #60]
   25890:	str	x30, [sp, #32]
   25894:	cbz	w2, 25900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f0>
   25898:	ldr	w2, [x1, #8]
   2589c:	cbz	w2, 258ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dc>
   258a0:	mov	x20, x0
   258a4:	ldr	x0, [x1]
   258a8:	ldr	x22, [x0]
   258ac:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   258b0:	sub	x22, x22, #0x4
   258b4:	mov	x1, x22
   258b8:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   258bc:	ldrb	w1, [x19, #60]
   258c0:	mov	x19, x0
   258c4:	cbz	w1, 258d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c8>
   258c8:	mov	x2, x21
   258cc:	mov	x0, x20
   258d0:	add	x1, x19, #0x8
   258d4:	bl	255a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   258d8:	mov	x0, x19
   258dc:	ldp	x21, x22, [sp, #16]
   258e0:	ldr	x30, [sp, #32]
   258e4:	ldp	x19, x20, [sp], #48
   258e8:	b	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   258ec:	ldp	x21, x22, [sp, #16]
   258f0:	mov	x1, #0x0                   	// #0
   258f4:	ldr	x30, [sp, #32]
   258f8:	ldp	x19, x20, [sp], #48
   258fc:	b	160c8 <__sanitizer_report_error_summary@@Base+0x10>
   25900:	ldp	x21, x22, [sp, #16]
   25904:	ldr	x30, [sp, #32]
   25908:	ldp	x19, x20, [sp], #48
   2590c:	ret
   25910:	and	w0, w0, #0x6
   25914:	cmp	w0, #0x6
   25918:	b.eq	25920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x410>  // b.none
   2591c:	ret
   25920:	stp	x29, x30, [sp, #-96]!
   25924:	mov	x29, sp
   25928:	stp	x19, x20, [sp, #16]
   2592c:	mov	x20, x30
   25930:	stp	x21, x22, [sp, #32]
   25934:	adrp	x22, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   25938:	add	x19, x22, #0x100
   2593c:	stp	x23, x24, [sp, #48]
   25940:	stp	x25, x26, [sp, #64]
   25944:	bl	211e8 <__sanitizer_set_report_fd@@Base+0x7920>
   25948:	mov	x21, x0
   2594c:	ldxr	x1, [x19]
   25950:	cbnz	x1, 2595c <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c>
   25954:	stlxr	w0, x21, [x19]
   25958:	cbnz	w0, 2594c <__sanitizer_get_module_and_offset_for_pc@@Base+0x43c>
   2595c:	dmb	ish
   25960:	cbz	x1, 2597c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46c>
   25964:	cmp	x21, x1
   25968:	b.eq	25c14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x704>  // b.none
   2596c:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   25970:	ldxr	x1, [x19]
   25974:	cbz	x1, 25954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x444>
   25978:	b	2595c <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c>
   2597c:	add	x0, x19, #0x8
   25980:	mov	w2, #0x1                   	// #1
   25984:	ldxrb	w1, [x0]
   25988:	stxrb	w3, w2, [x0]
   2598c:	cbnz	w3, 25984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x474>
   25990:	dmb	ish
   25994:	tst	w1, #0xff
   25998:	b.eq	259a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x490>  // b.none
   2599c:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   259a0:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   259a4:	bl	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
   259a8:	and	w24, w0, #0xff
   259ac:	ldr	x19, [x23, #4000]
   259b0:	ldr	x0, [x19]
   259b4:	cbz	x0, 25b7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c>
   259b8:	sub	x1, x0, #0x1
   259bc:	tst	x1, x0
   259c0:	b.ne	25bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>  // b.any
   259c4:	add	x21, x0, #0x817
   259c8:	neg	x0, x0
   259cc:	and	x21, x21, x0
   259d0:	mov	w2, #0x0                   	// #0
   259d4:	mov	x0, x21
   259d8:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
   259dc:	add	x1, x25, #0x700
   259e0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   259e4:	mov	x2, #0x0                   	// #0
   259e8:	mov	x1, #0x0                   	// #0
   259ec:	mov	x19, x0
   259f0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   259f4:	mov	x1, #0x0                   	// #0
   259f8:	mov	x0, #0x0                   	// #0
   259fc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25a00:	cmp	x21, #0x817
   25a04:	b.ls	25b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x68c>  // b.plast
   25a08:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25a0c:	mov	w1, #0x0                   	// #0
   25a10:	mov	x0, x19
   25a14:	mov	x2, #0x818                 	// #2072
   25a18:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   25a1c:	str	xzr, [x19, #2064]
   25a20:	ldr	x1, [x23, #4040]
   25a24:	add	x0, x19, #0x10
   25a28:	mov	x26, x29
   25a2c:	ldrb	w25, [x1, #33]
   25a30:	str	x0, [x19]
   25a34:	str	xzr, [x19, #8]
   25a38:	stp	xzr, xzr, [x29, #80]
   25a3c:	cbnz	w25, 25b68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x658>
   25a40:	ldp	x5, x6, [x29, #80]
   25a44:	mov	w7, w25
   25a48:	mov	x3, x26
   25a4c:	mov	x2, x20
   25a50:	mov	x0, x19
   25a54:	mov	x4, #0x0                   	// #0
   25a58:	mov	w1, #0x100                 	// #256
   25a5c:	bl	24fe8 <OnPrint@@Base+0x2680>
   25a60:	cbnz	w24, 25b30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>
   25a64:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25a68:	add	x20, x1, #0xb00
   25a6c:	mov	x1, x20
   25a70:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25a74:	add	x0, x24, #0xdb8
   25a78:	bl	22c78 <OnPrint@@Base+0x310>
   25a7c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25a80:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25a84:	add	x0, x0, #0xee8
   25a88:	ldr	x1, [x1, #4008]
   25a8c:	ldr	x1, [x1]
   25a90:	bl	22d00 <OnPrint@@Base+0x398>
   25a94:	mov	x1, x20
   25a98:	add	x0, x24, #0xdb8
   25a9c:	bl	22c78 <OnPrint@@Base+0x310>
   25aa0:	mov	x0, x19
   25aa4:	bl	24b80 <OnPrint@@Base+0x2218>
   25aa8:	ldr	x23, [x23, #4040]
   25aac:	ldrb	w0, [x23, #60]
   25ab0:	cbz	w0, 25afc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec>
   25ab4:	ldr	w0, [x19, #8]
   25ab8:	cbz	w0, 25b88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x678>
   25abc:	ldr	x0, [x19]
   25ac0:	ldr	x20, [x0]
   25ac4:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   25ac8:	sub	x20, x20, #0x4
   25acc:	mov	x1, x20
   25ad0:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   25ad4:	ldrb	w1, [x23, #60]
   25ad8:	mov	x20, x0
   25adc:	cbz	w1, 25af4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e4>
   25ae0:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25ae4:	add	x1, x20, #0x8
   25ae8:	add	x0, x0, #0xed8
   25aec:	mov	x2, #0x0                   	// #0
   25af0:	bl	255a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   25af4:	mov	x0, x20
   25af8:	bl	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   25afc:	mov	x1, x21
   25b00:	mov	x0, x19
   25b04:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25b08:	dmb	ish
   25b0c:	add	x0, x22, #0x100
   25b10:	strb	wzr, [x0, #8]
   25b14:	str	xzr, [x22, #256]
   25b18:	ldp	x19, x20, [sp, #16]
   25b1c:	ldp	x21, x22, [sp, #32]
   25b20:	ldp	x23, x24, [sp, #48]
   25b24:	ldp	x25, x26, [sp, #64]
   25b28:	ldp	x29, x30, [sp], #96
   25b2c:	ret
   25b30:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   25b34:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25b38:	add	x1, x1, #0xf0
   25b3c:	add	x0, x24, #0xdb8
   25b40:	bl	22c78 <OnPrint@@Base+0x310>
   25b44:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25b48:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25b4c:	add	x0, x0, #0xee8
   25b50:	ldr	x1, [x1, #4008]
   25b54:	ldr	x1, [x1]
   25b58:	bl	22d00 <OnPrint@@Base+0x398>
   25b5c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25b60:	add	x1, x1, #0xda8
   25b64:	b	25a98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x588>
   25b68:	add	x2, x29, #0x58
   25b6c:	add	x1, x29, #0x50
   25b70:	mov	w0, #0x0                   	// #0
   25b74:	bl	1f6a8 <__sanitizer_set_report_fd@@Base+0x5de0>
   25b78:	b	25a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x530>
   25b7c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   25b80:	str	x0, [x19]
   25b84:	b	259b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   25b88:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25b8c:	mov	x1, #0x0                   	// #0
   25b90:	add	x0, x0, #0xed8
   25b94:	bl	160c8 <__sanitizer_report_error_summary@@Base+0x10>
   25b98:	b	25afc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec>
   25b9c:	ldr	x23, [x23, #4000]
   25ba0:	ldr	x0, [x23]
   25ba4:	cbz	x0, 25c08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f8>
   25ba8:	sub	x1, x0, #0x1
   25bac:	tst	x1, x0
   25bb0:	b.ne	25bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>  // b.any
   25bb4:	add	x23, x0, #0x817
   25bb8:	neg	x0, x0
   25bbc:	and	x23, x23, x0
   25bc0:	add	x1, x25, #0x700
   25bc4:	mov	x0, x23
   25bc8:	mov	w2, #0x0                   	// #0
   25bcc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   25bd0:	mov	x25, x0
   25bd4:	mov	x2, #0x0                   	// #0
   25bd8:	mov	x1, x19
   25bdc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   25be0:	mov	x1, x21
   25be4:	mov	x0, x19
   25be8:	mov	x21, x23
   25bec:	mov	x19, x25
   25bf0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25bf4:	b	25a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8>
   25bf8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25bfc:	add	x0, x0, #0x6e8
   25c00:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   25c04:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   25c08:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   25c0c:	str	x0, [x23]
   25c10:	b	25ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>
   25c14:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25c18:	ldr	x0, [x0, #4008]
   25c1c:	ldr	x19, [x0]
   25c20:	mov	x0, x19
   25c24:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   25c28:	mov	x1, x0
   25c2c:	mov	x0, x19
   25c30:	bl	18cc0 <__sanitizer_cov_dump@@Base+0x1e40>
   25c34:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25c38:	mov	x1, #0x2b                  	// #43
   25c3c:	add	x0, x0, #0x100
   25c40:	bl	18cc0 <__sanitizer_cov_dump@@Base+0x1e40>
   25c44:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25c48:	ldr	x0, [x0, #4040]
   25c4c:	ldr	w0, [x0, #216]
   25c50:	bl	1db88 <__sanitizer_set_report_fd@@Base+0x42c0>
   25c54:	nop
   25c58:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25c5c:	stp	x19, x30, [sp, #-16]!
   25c60:	ldr	x0, [x0, #4008]
   25c64:	ldr	x19, [x0]
   25c68:	mov	x0, x19
   25c6c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   25c70:	mov	x1, x0
   25c74:	mov	x0, x19
   25c78:	bl	18cc0 <__sanitizer_cov_dump@@Base+0x1e40>
   25c7c:	ldp	x19, x30, [sp], #16
   25c80:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25c84:	add	x0, x0, #0x100
   25c88:	mov	x1, #0xe                   	// #14
   25c8c:	add	x0, x0, #0x30
   25c90:	b	18cc0 <__sanitizer_cov_dump@@Base+0x1e40>
   25c94:	nop
   25c98:	stp	x19, x20, [sp, #-272]!
   25c9c:	mov	x19, x0
   25ca0:	stp	x21, x22, [sp, #16]
   25ca4:	mov	w21, w1
   25ca8:	mov	x22, x2
   25cac:	stp	x23, x24, [sp, #32]
   25cb0:	mov	x23, x3
   25cb4:	stp	x25, x26, [sp, #48]
   25cb8:	stp	x27, x28, [sp, #64]
   25cbc:	str	x30, [sp, #80]
   25cc0:	bl	216c8 <__sanitizer_set_report_fd@@Base+0x7e00>
   25cc4:	tst	w0, #0xff
   25cc8:	b.eq	25e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x944>  // b.none
   25ccc:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25cd0:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25cd4:	add	x1, x1, #0xed0
   25cd8:	ldr	x0, [x20, #4040]
   25cdc:	ldr	x24, [x0, #112]
   25ce0:	mov	x0, x24
   25ce4:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   25ce8:	cbnz	w0, 26304 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdf4>
   25cec:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25cf0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   25cf4:	add	x0, x24, #0xdb8
   25cf8:	add	x1, x1, #0xf0
   25cfc:	bl	22c78 <OnPrint@@Base+0x310>
   25d00:	adrp	x26, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25d04:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25d08:	add	x2, x26, #0x100
   25d0c:	ldp	x3, x4, [x19, #16]
   25d10:	mov	w7, w21
   25d14:	ldr	x0, [x0, #4008]
   25d18:	add	x2, x2, #0x40
   25d1c:	ldp	x6, x5, [x19, #32]
   25d20:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25d24:	ldr	x1, [x0]
   25d28:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25d2c:	add	x0, x0, #0xf40
   25d30:	bl	22d00 <OnPrint@@Base+0x398>
   25d34:	add	x0, x24, #0xdb8
   25d38:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25d3c:	add	x1, x1, #0xda8
   25d40:	bl	22c78 <OnPrint@@Base+0x310>
   25d44:	ldr	x21, [x25, #4000]
   25d48:	ldr	x0, [x21]
   25d4c:	cbz	x0, 2637c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>
   25d50:	sub	x1, x0, #0x1
   25d54:	tst	x1, x0
   25d58:	b.ne	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   25d5c:	add	x24, x0, #0x817
   25d60:	neg	x0, x0
   25d64:	and	x24, x24, x0
   25d68:	mov	w2, #0x0                   	// #0
   25d6c:	mov	x0, x24
   25d70:	adrp	x28, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25d74:	add	x1, x28, #0x700
   25d78:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   25d7c:	mov	x2, #0x0                   	// #0
   25d80:	mov	x1, #0x0                   	// #0
   25d84:	mov	x21, x0
   25d88:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   25d8c:	mov	x1, #0x0                   	// #0
   25d90:	mov	x0, #0x0                   	// #0
   25d94:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25d98:	cmp	x24, #0x817
   25d9c:	b.ls	26560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1050>  // b.plast
   25da0:	mov	x2, #0x818                 	// #2072
   25da4:	mov	w1, #0x0                   	// #0
   25da8:	mov	x0, x21
   25dac:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   25db0:	mov	x1, x23
   25db4:	mov	x2, x21
   25db8:	add	x0, x21, #0x10
   25dbc:	str	x0, [x21]
   25dc0:	str	xzr, [x21, #8]
   25dc4:	mov	x0, x19
   25dc8:	str	xzr, [x21, #2064]
   25dcc:	blr	x22
   25dd0:	mov	x0, x21
   25dd4:	bl	24b80 <OnPrint@@Base+0x2218>
   25dd8:	ldr	x20, [x20, #4040]
   25ddc:	ldrb	w0, [x20, #60]
   25de0:	cbz	w0, 25e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x91c>
   25de4:	ldr	w0, [x21, #8]
   25de8:	cbz	w0, 263a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe90>
   25dec:	ldr	x0, [x21]
   25df0:	ldr	x19, [x0]
   25df4:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   25df8:	sub	x19, x19, #0x4
   25dfc:	mov	x1, x19
   25e00:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   25e04:	ldrb	w1, [x20, #60]
   25e08:	mov	x19, x0
   25e0c:	cbz	w1, 25e24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x914>
   25e10:	add	x0, x26, #0x100
   25e14:	add	x1, x19, #0x8
   25e18:	add	x0, x0, #0x40
   25e1c:	mov	x2, #0x0                   	// #0
   25e20:	bl	255a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   25e24:	mov	x0, x19
   25e28:	bl	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   25e2c:	mov	x1, x24
   25e30:	mov	x0, x21
   25e34:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   25e38:	ldp	x21, x22, [sp, #16]
   25e3c:	ldp	x23, x24, [sp, #32]
   25e40:	ldp	x25, x26, [sp, #48]
   25e44:	ldp	x27, x28, [sp, #64]
   25e48:	ldr	x30, [sp, #80]
   25e4c:	ldp	x19, x20, [sp], #272
   25e50:	ret
   25e54:	bl	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
   25e58:	tst	w0, #0xff
   25e5c:	b.ne	261b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xca0>  // b.any
   25e60:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25e64:	add	x20, x0, #0xb00
   25e68:	mov	x1, x20
   25e6c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25e70:	mov	x25, x0
   25e74:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25e78:	add	x0, x24, #0xdb8
   25e7c:	str	x25, [sp, #120]
   25e80:	bl	22c78 <OnPrint@@Base+0x310>
   25e84:	mov	x0, x19
   25e88:	bl	21068 <__sanitizer_set_report_fd@@Base+0x77a0>
   25e8c:	ldr	x1, [x25, #4008]
   25e90:	mov	w7, w21
   25e94:	ldp	x3, x4, [x19, #16]
   25e98:	mov	x2, x0
   25e9c:	ldp	x6, x5, [x19, #32]
   25ea0:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25ea4:	ldr	x1, [x1]
   25ea8:	str	x0, [sp, #128]
   25eac:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   25eb0:	add	x0, x0, #0xa8
   25eb4:	bl	22d00 <OnPrint@@Base+0x398>
   25eb8:	mov	x1, x20
   25ebc:	add	x0, x24, #0xdb8
   25ec0:	bl	22c78 <OnPrint@@Base+0x310>
   25ec4:	ldr	x20, [x25, #4000]
   25ec8:	ldr	x21, [x19, #24]
   25ecc:	ldr	x0, [x20]
   25ed0:	cbz	x0, 26224 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd14>
   25ed4:	cmp	x0, x21
   25ed8:	b.hi	26234 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd24>  // b.pmore
   25edc:	ldrb	w0, [x19, #48]
   25ee0:	cbz	w0, 25f38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa28>
   25ee4:	ldr	w0, [x19, #52]
   25ee8:	cmp	w0, #0x2
   25eec:	b.eq	26394 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe84>  // b.none
   25ef0:	cmp	w0, #0x1
   25ef4:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25ef8:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25efc:	add	x1, x1, #0xf20
   25f00:	add	x0, x0, #0xf28
   25f04:	csel	x1, x1, x0, eq  // eq = none
   25f08:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25f0c:	add	x0, x0, #0xfa0
   25f10:	bl	22d00 <OnPrint@@Base+0x398>
   25f14:	ldr	x20, [x25, #4000]
   25f18:	ldr	x21, [x19, #16]
   25f1c:	ldr	x0, [x20]
   25f20:	cbz	x0, 26408 <__sanitizer_get_module_and_offset_for_pc@@Base+0xef8>
   25f24:	cmp	x21, x0
   25f28:	b.cs	25f38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa28>  // b.hs, b.nlast
   25f2c:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25f30:	add	x0, x0, #0xfd0
   25f34:	bl	22d00 <OnPrint@@Base+0x398>
   25f38:	add	x27, sp, #0xa0
   25f3c:	adrp	x21, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   25f40:	add	x26, sp, #0xc0
   25f44:	add	x21, x21, #0xff8
   25f48:	mov	x0, x27
   25f4c:	mov	w1, #0x1                   	// #1
   25f50:	ldr	x20, [x19, #24]
   25f54:	bl	22fe8 <OnPrint@@Base+0x680>
   25f58:	stp	xzr, xzr, [sp, #216]
   25f5c:	str	xzr, [sp, #264]
   25f60:	mov	x1, x26
   25f64:	mov	x0, x27
   25f68:	bl	23890 <OnPrint@@Base+0xf28>
   25f6c:	tst	w0, #0xff
   25f70:	b.eq	25fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa0>  // b.none
   25f74:	ldr	x0, [sp, #192]
   25f78:	cmp	x20, x0
   25f7c:	b.cc	25f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>  // b.lo, b.ul, b.last
   25f80:	ldr	x0, [sp, #200]
   25f84:	cmp	x20, x0
   25f88:	b.cs	25f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>  // b.hs, b.nlast
   25f8c:	ldr	x0, [sp, #232]
   25f90:	tbnz	w0, #2, 25f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>
   25f94:	mov	x0, x21
   25f98:	bl	22d00 <OnPrint@@Base+0x398>
   25f9c:	mov	x1, x26
   25fa0:	mov	x0, x27
   25fa4:	bl	23890 <OnPrint@@Base+0xf28>
   25fa8:	tst	w0, #0xff
   25fac:	b.ne	25f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>  // b.any
   25fb0:	mov	x0, x27
   25fb4:	bl	23150 <OnPrint@@Base+0x7e8>
   25fb8:	ldr	x20, [x25, #4000]
   25fbc:	ldr	x0, [x20]
   25fc0:	cbz	x0, 263ec <__sanitizer_get_module_and_offset_for_pc@@Base+0xedc>
   25fc4:	sub	x1, x0, #0x1
   25fc8:	tst	x1, x0
   25fcc:	b.ne	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   25fd0:	add	x27, x0, #0x817
   25fd4:	neg	x0, x0
   25fd8:	and	x27, x27, x0
   25fdc:	mov	w2, #0x0                   	// #0
   25fe0:	mov	x0, x27
   25fe4:	adrp	x28, 46000 <__asan_backtrace_release_view@@Base+0x48>
   25fe8:	add	x1, x28, #0x700
   25fec:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   25ff0:	mov	x2, #0x0                   	// #0
   25ff4:	mov	x1, #0x0                   	// #0
   25ff8:	mov	x21, x0
   25ffc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   26000:	mov	x1, #0x0                   	// #0
   26004:	mov	x0, #0x0                   	// #0
   26008:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2600c:	cmp	x27, #0x817
   26010:	b.ls	26500 <__sanitizer_get_module_and_offset_for_pc@@Base+0xff0>  // b.plast
   26014:	mov	x2, #0x818                 	// #2072
   26018:	mov	w1, #0x0                   	// #0
   2601c:	mov	x0, x21
   26020:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   26024:	mov	x1, x23
   26028:	mov	x2, x21
   2602c:	add	x0, x21, #0x10
   26030:	str	x0, [x21]
   26034:	str	xzr, [x21, #8]
   26038:	mov	x0, x19
   2603c:	str	xzr, [x21, #2064]
   26040:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26044:	blr	x22
   26048:	mov	x0, x21
   2604c:	bl	24b80 <OnPrint@@Base+0x2218>
   26050:	ldr	x0, [x20, #4040]
   26054:	ldrb	w0, [x0, #232]
   26058:	cbz	w0, 26268 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>
   2605c:	ldr	x23, [x25, #4000]
   26060:	ldr	x22, [x19, #24]
   26064:	ldr	x0, [x23]
   26068:	cbz	x0, 263b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xea4>
   2606c:	cmp	x22, x0
   26070:	b.cc	26268 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>  // b.lo, b.ul, b.last
   26074:	str	xzr, [sp, #192]
   26078:	stp	xzr, xzr, [sp, #200]
   2607c:	sub	x1, x0, #0x1
   26080:	tst	x1, x0
   26084:	b.ne	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   26088:	add	x3, x0, #0x3ff
   2608c:	neg	x0, x0
   26090:	and	x3, x3, x0
   26094:	add	x1, x28, #0x700
   26098:	mov	x0, x3
   2609c:	mov	w2, #0x0                   	// #0
   260a0:	str	x3, [sp, #104]
   260a4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   260a8:	mov	x23, x0
   260ac:	ldr	x1, [sp, #192]
   260b0:	ldr	x2, [sp, #208]
   260b4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   260b8:	ldp	x0, x1, [sp, #192]
   260bc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   260c0:	ldr	x3, [sp, #104]
   260c4:	stp	x23, x3, [sp, #192]
   260c8:	ldr	x2, [sp, #208]
   260cc:	cmp	x2, #0x3ff
   260d0:	b.ls	264dc <__sanitizer_get_module_and_offset_for_pc@@Base+0xfcc>  // b.plast
   260d4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   260d8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   260dc:	add	x1, x1, #0x38
   260e0:	ldr	q0, [x0, #1232]
   260e4:	mov	x0, x26
   260e8:	str	q0, [sp, #208]
   260ec:	strb	wzr, [x23]
   260f0:	bl	22d88 <OnPrint@@Base+0x420>
   260f4:	mov	x0, x22
   260f8:	mov	x1, #0x10                  	// #16
   260fc:	bl	21760 <__sanitizer_set_report_fd@@Base+0x7e98>
   26100:	tst	w0, #0xff
   26104:	b.eq	265bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10ac>  // b.none
   26108:	ldr	x0, [x20, #4040]
   2610c:	str	x0, [sp, #112]
   26110:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26114:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   26118:	add	x23, x0, #0xb00
   2611c:	add	x0, x1, #0xf30
   26120:	str	x0, [sp, #136]
   26124:	add	x0, x22, #0x10
   26128:	str	x0, [sp, #104]
   2612c:	b	26168 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc58>
   26130:	ldr	x3, [sp, #136]
   26134:	adrp	x6, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26138:	asr	w4, w25, #4
   2613c:	add	x6, x6, #0xda8
   26140:	and	w5, w25, #0xf
   26144:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26148:	mov	x2, x23
   2614c:	add	x1, x0, #0x60
   26150:	mov	x0, x26
   26154:	bl	22d88 <OnPrint@@Base+0x420>
   26158:	add	x22, x22, #0x1
   2615c:	ldr	x0, [sp, #104]
   26160:	cmp	x22, x0
   26164:	b.eq	26244 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd34>  // b.none
   26168:	ldr	x0, [sp, #112]
   2616c:	ldrb	w25, [x22]
   26170:	ldr	x28, [x0, #112]
   26174:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   26178:	add	x1, x0, #0xed0
   2617c:	mov	x0, x28
   26180:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   26184:	cbz	w0, 26130 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc20>
   26188:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   2618c:	mov	x0, x28
   26190:	add	x1, x1, #0x100
   26194:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   26198:	cbz	w0, 26414 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf04>
   2619c:	asr	w4, w25, #4
   261a0:	and	w5, w25, #0xf
   261a4:	mov	x3, x23
   261a8:	mov	x6, x23
   261ac:	b	26144 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc34>
   261b0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   261b4:	add	x1, x1, #0xf0
   261b8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   261bc:	mov	x20, x0
   261c0:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   261c4:	add	x0, x24, #0xdb8
   261c8:	str	x20, [sp, #120]
   261cc:	bl	22c78 <OnPrint@@Base+0x310>
   261d0:	mov	x0, x19
   261d4:	bl	21068 <__sanitizer_set_report_fd@@Base+0x77a0>
   261d8:	ldr	x1, [x20, #4008]
   261dc:	mov	w7, w21
   261e0:	ldp	x3, x4, [x19, #16]
   261e4:	mov	x2, x0
   261e8:	ldp	x6, x5, [x19, #32]
   261ec:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   261f0:	ldr	x1, [x1]
   261f4:	str	x0, [sp, #128]
   261f8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   261fc:	add	x0, x0, #0xa8
   26200:	bl	22d00 <OnPrint@@Base+0x398>
   26204:	add	x0, x24, #0xdb8
   26208:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2620c:	add	x1, x1, #0xda8
   26210:	bl	22c78 <OnPrint@@Base+0x310>
   26214:	ldr	x20, [x25, #4000]
   26218:	ldr	x21, [x19, #24]
   2621c:	ldr	x0, [x20]
   26220:	cbnz	x0, 25ed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9c4>
   26224:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   26228:	str	x0, [x20]
   2622c:	cmp	x0, x21
   26230:	b.ls	25edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x9cc>  // b.plast
   26234:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   26238:	add	x0, x0, #0xf78
   2623c:	bl	22d00 <OnPrint@@Base+0x398>
   26240:	b	25edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x9cc>
   26244:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26248:	mov	x0, x26
   2624c:	add	x1, x1, #0x1a0
   26250:	bl	22d88 <OnPrint@@Base+0x420>
   26254:	ldr	x1, [sp, #192]
   26258:	add	x0, x24, #0xdb8
   2625c:	bl	22d00 <OnPrint@@Base+0x398>
   26260:	ldp	x0, x1, [sp, #192]
   26264:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   26268:	ldr	x0, [x20, #4040]
   2626c:	ldrb	w0, [x0, #233]
   26270:	cbnz	w0, 26388 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe78>
   26274:	ldr	x0, [sp, #120]
   26278:	ldr	x1, [x0, #4008]
   2627c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26280:	add	x0, x0, #0x80
   26284:	ldr	x1, [x1]
   26288:	bl	22c78 <OnPrint@@Base+0x310>
   2628c:	ldr	x20, [x20, #4040]
   26290:	ldrb	w0, [x20, #60]
   26294:	cbz	w0, 262dc <__sanitizer_get_module_and_offset_for_pc@@Base+0xdcc>
   26298:	ldr	w0, [x21, #8]
   2629c:	cbz	w0, 263dc <__sanitizer_get_module_and_offset_for_pc@@Base+0xecc>
   262a0:	ldr	x0, [x21]
   262a4:	ldr	x19, [x0]
   262a8:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   262ac:	sub	x19, x19, #0x4
   262b0:	mov	x1, x19
   262b4:	bl	2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   262b8:	ldrb	w1, [x20, #60]
   262bc:	mov	x19, x0
   262c0:	cbz	w1, 262d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc4>
   262c4:	add	x1, x0, #0x8
   262c8:	mov	x2, #0x0                   	// #0
   262cc:	ldr	x0, [sp, #128]
   262d0:	bl	255a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   262d4:	mov	x0, x19
   262d8:	bl	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   262dc:	mov	x1, x27
   262e0:	mov	x0, x21
   262e4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   262e8:	ldp	x21, x22, [sp, #16]
   262ec:	ldp	x23, x24, [sp, #32]
   262f0:	ldp	x25, x26, [sp, #48]
   262f4:	ldp	x27, x28, [sp, #64]
   262f8:	ldr	x30, [sp, #80]
   262fc:	ldp	x19, x20, [sp], #272
   26300:	ret
   26304:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   26308:	mov	x0, x24
   2630c:	add	x1, x1, #0x100
   26310:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   26314:	cbz	w0, 2647c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf6c>
   26318:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2631c:	add	x25, x1, #0xb00
   26320:	mov	x1, x25
   26324:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26328:	add	x0, x24, #0xdb8
   2632c:	bl	22c78 <OnPrint@@Base+0x310>
   26330:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26334:	adrp	x26, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26338:	ldp	x3, x4, [x19, #16]
   2633c:	add	x2, x26, #0x100
   26340:	ldr	x0, [x0, #4008]
   26344:	mov	w7, w21
   26348:	ldp	x6, x5, [x19, #32]
   2634c:	add	x2, x2, #0x40
   26350:	ldr	x1, [x0]
   26354:	adrp	x0, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   26358:	add	x0, x0, #0xf40
   2635c:	bl	22d00 <OnPrint@@Base+0x398>
   26360:	mov	x1, x25
   26364:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26368:	add	x0, x24, #0xdb8
   2636c:	bl	22c78 <OnPrint@@Base+0x310>
   26370:	ldr	x21, [x25, #4000]
   26374:	ldr	x0, [x21]
   26378:	cbnz	x0, 25d50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x840>
   2637c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   26380:	str	x0, [x21]
   26384:	b	25d50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x840>
   26388:	ldr	x0, [x19, #8]
   2638c:	bl	1f138 <__sanitizer_set_report_fd@@Base+0x5870>
   26390:	b	26274 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd64>
   26394:	adrp	x1, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   26398:	add	x1, x1, #0xf18
   2639c:	b	25f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f8>
   263a0:	add	x0, x26, #0x100
   263a4:	mov	x1, #0x0                   	// #0
   263a8:	add	x0, x0, #0x40
   263ac:	bl	160c8 <__sanitizer_report_error_summary@@Base+0x10>
   263b0:	b	25e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x91c>
   263b4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   263b8:	str	x0, [x23]
   263bc:	cmp	x22, x0
   263c0:	b.cc	26268 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>  // b.lo, b.ul, b.last
   263c4:	str	xzr, [sp, #192]
   263c8:	stp	xzr, xzr, [sp, #200]
   263cc:	cbnz	x0, 2607c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb6c>
   263d0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   263d4:	str	x0, [x23]
   263d8:	b	2607c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb6c>
   263dc:	ldr	x0, [sp, #128]
   263e0:	mov	x1, #0x0                   	// #0
   263e4:	bl	160c8 <__sanitizer_report_error_summary@@Base+0x10>
   263e8:	b	262dc <__sanitizer_get_module_and_offset_for_pc@@Base+0xdcc>
   263ec:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   263f0:	str	x0, [x20]
   263f4:	b	25fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xab4>
   263f8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   263fc:	add	x0, x0, #0x6e8
   26400:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   26404:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26408:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2640c:	str	x0, [x20]
   26410:	b	25f24 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa14>
   26414:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26418:	mov	w3, #0x1                   	// #1
   2641c:	ldr	x0, [x1, #3816]
   26420:	ldr	x2, [x0]
   26424:	ldxrb	w0, [x2]
   26428:	stxrb	w4, w3, [x2]
   2642c:	cbnz	w4, 26424 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf14>
   26430:	dmb	ish
   26434:	tst	w0, #0xff
   26438:	b.eq	2644c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf3c>  // b.none
   2643c:	mov	x0, x2
   26440:	stp	x2, x1, [sp, #144]
   26444:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   26448:	ldp	x2, x1, [sp, #144]
   2644c:	ldr	x0, [x1, #3816]
   26450:	stp	x0, x2, [sp, #144]
   26454:	bl	18d00 <__sanitizer_cov_dump@@Base+0x1e80>
   26458:	ldr	x0, [sp, #144]
   2645c:	ldr	w0, [x0, #8]
   26460:	bl	21540 <__sanitizer_set_report_fd@@Base+0x7c78>
   26464:	dmb	ish
   26468:	and	w0, w0, #0xff
   2646c:	ldr	x2, [sp, #152]
   26470:	strb	wzr, [x2]
   26474:	cbnz	w0, 26130 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc20>
   26478:	b	2619c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc8c>
   2647c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26480:	mov	w2, #0x1                   	// #1
   26484:	ldr	x0, [x1, #3816]
   26488:	ldr	x25, [x0]
   2648c:	ldxrb	w0, [x25]
   26490:	stxrb	w3, w2, [x25]
   26494:	cbnz	w3, 2648c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf7c>
   26498:	dmb	ish
   2649c:	tst	w0, #0xff
   264a0:	b.eq	264b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfa4>  // b.none
   264a4:	mov	x0, x25
   264a8:	str	x1, [sp, #104]
   264ac:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   264b0:	ldr	x1, [sp, #104]
   264b4:	ldr	x24, [x1, #3816]
   264b8:	mov	x0, x24
   264bc:	bl	18d00 <__sanitizer_cov_dump@@Base+0x1e80>
   264c0:	ldr	w0, [x24, #8]
   264c4:	bl	21540 <__sanitizer_set_report_fd@@Base+0x7c78>
   264c8:	dmb	ish
   264cc:	and	w0, w0, #0xff
   264d0:	strb	wzr, [x25]
   264d4:	cbnz	w0, 25cec <__sanitizer_get_module_and_offset_for_pc@@Base+0x7dc>
   264d8:	b	26318 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe08>
   264dc:	cmp	x3, #0x3ff
   264e0:	b.ls	265e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10d8>  // b.plast
   264e4:	mov	x3, #0x400                 	// #1024
   264e8:	add	x0, x23, x2
   264ec:	mov	w1, #0x0                   	// #0
   264f0:	sub	x2, x3, x2
   264f4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   264f8:	ldr	x23, [sp, #192]
   264fc:	b	260d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbc4>
   26500:	ldr	x20, [x25, #4000]
   26504:	ldr	x0, [x20]
   26508:	cbz	x0, 265d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c0>
   2650c:	sub	x1, x0, #0x1
   26510:	tst	x1, x0
   26514:	b.ne	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   26518:	add	x20, x0, #0x817
   2651c:	neg	x0, x0
   26520:	and	x20, x20, x0
   26524:	add	x1, x28, #0x700
   26528:	mov	x0, x20
   2652c:	mov	w2, #0x0                   	// #0
   26530:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   26534:	str	x0, [sp, #104]
   26538:	mov	x1, x21
   2653c:	mov	x2, #0x0                   	// #0
   26540:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   26544:	ldr	x3, [sp, #104]
   26548:	mov	x1, x27
   2654c:	mov	x0, x21
   26550:	mov	x27, x20
   26554:	mov	x21, x3
   26558:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2655c:	b	26014 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb04>
   26560:	ldr	x25, [x25, #4000]
   26564:	ldr	x0, [x25]
   26568:	cbz	x0, 265dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10cc>
   2656c:	sub	x1, x0, #0x1
   26570:	tst	x1, x0
   26574:	b.ne	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   26578:	add	x25, x0, #0x817
   2657c:	neg	x0, x0
   26580:	and	x25, x25, x0
   26584:	add	x1, x28, #0x700
   26588:	mov	x0, x25
   2658c:	mov	w2, #0x0                   	// #0
   26590:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   26594:	mov	x27, x0
   26598:	mov	x2, #0x0                   	// #0
   2659c:	mov	x1, x21
   265a0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   265a4:	mov	x1, x24
   265a8:	mov	x0, x21
   265ac:	mov	x24, x25
   265b0:	mov	x21, x27
   265b4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   265b8:	b	25da0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x890>
   265bc:	mov	x0, x26
   265c0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   265c4:	add	x1, x1, #0x70
   265c8:	bl	22d88 <OnPrint@@Base+0x420>
   265cc:	b	26254 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd44>
   265d0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   265d4:	str	x0, [x20]
   265d8:	b	2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>
   265dc:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   265e0:	str	x0, [x25]
   265e4:	b	2656c <__sanitizer_get_module_and_offset_for_pc@@Base+0x105c>
   265e8:	ldr	x25, [x25, #4000]
   265ec:	ldr	x0, [x25]
   265f0:	cbz	x0, 26640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1130>
   265f4:	sub	x1, x0, #0x1
   265f8:	tst	x1, x0
   265fc:	b.ne	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   26600:	add	x25, x0, #0x3ff
   26604:	neg	x0, x0
   26608:	and	x25, x25, x0
   2660c:	add	x1, x28, #0x700
   26610:	mov	w2, #0x0                   	// #0
   26614:	mov	x0, x25
   26618:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2661c:	mov	x23, x0
   26620:	ldr	x1, [sp, #192]
   26624:	ldr	x2, [sp, #208]
   26628:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2662c:	ldp	x0, x1, [sp, #192]
   26630:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   26634:	stp	x23, x25, [sp, #192]
   26638:	ldr	x2, [sp, #208]
   2663c:	b	264e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfd4>
   26640:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   26644:	str	x0, [x25]
   26648:	b	265f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10e4>
   2664c:	nop
   26650:	stp	x19, x20, [sp, #-32]!
   26654:	adrp	x19, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26658:	add	x19, x19, #0x100
   2665c:	str	x30, [sp, #16]
   26660:	bl	211e8 <__sanitizer_set_report_fd@@Base+0x7920>
   26664:	mov	x20, x0
   26668:	ldxr	x1, [x19]
   2666c:	cbnz	x1, 26678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1168>
   26670:	stlxr	w0, x20, [x19]
   26674:	cbnz	w0, 26668 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1158>
   26678:	dmb	ish
   2667c:	cbz	x1, 26698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1188>
   26680:	cmp	x20, x1
   26684:	b.eq	266d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11c0>  // b.none
   26688:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   2668c:	ldxr	x1, [x19]
   26690:	cbz	x1, 26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1160>
   26694:	b	26678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1168>
   26698:	add	x0, x19, #0x8
   2669c:	mov	w2, #0x1                   	// #1
   266a0:	ldxrb	w1, [x0]
   266a4:	stxrb	w3, w2, [x0]
   266a8:	cbnz	w3, 266a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1190>
   266ac:	dmb	ish
   266b0:	tst	w1, #0xff
   266b4:	b.eq	266c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11b4>  // b.none
   266b8:	ldr	x30, [sp, #16]
   266bc:	ldp	x19, x20, [sp], #32
   266c0:	b	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   266c4:	ldr	x30, [sp, #16]
   266c8:	ldp	x19, x20, [sp], #32
   266cc:	ret
   266d0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   266d4:	ldr	x0, [x0, #4008]
   266d8:	ldr	x19, [x0]
   266dc:	mov	x0, x19
   266e0:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   266e4:	mov	x1, x0
   266e8:	mov	x0, x19
   266ec:	bl	18cc0 <__sanitizer_cov_dump@@Base+0x1e40>
   266f0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   266f4:	mov	x1, #0x2b                  	// #43
   266f8:	add	x0, x0, #0x100
   266fc:	bl	18cc0 <__sanitizer_cov_dump@@Base+0x1e40>
   26700:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26704:	ldr	x0, [x0, #4040]
   26708:	ldr	w0, [x0, #216]
   2670c:	bl	1db88 <__sanitizer_set_report_fd@@Base+0x42c0>
   26710:	stp	x19, x20, [sp, #-128]!
   26714:	mov	w20, w2
   26718:	stp	x21, x22, [sp, #16]
   2671c:	mov	x22, x4
   26720:	mov	x21, x3
   26724:	stp	x23, x24, [sp, #32]
   26728:	mov	x23, x1
   2672c:	mov	x24, x0
   26730:	str	x30, [sp, #48]
   26734:	bl	25c58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x748>
   26738:	add	x19, sp, #0x48
   2673c:	add	x0, sp, #0x40
   26740:	bl	26650 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1140>
   26744:	stp	x24, x23, [sp, #72]
   26748:	mov	x0, x19
   2674c:	bl	21030 <__sanitizer_set_report_fd@@Base+0x7768>
   26750:	mov	x1, x0
   26754:	mov	x0, x19
   26758:	str	x1, [sp, #88]
   2675c:	bl	21040 <__sanitizer_set_report_fd@@Base+0x7778>
   26760:	mov	w1, w0
   26764:	mov	x0, x19
   26768:	strb	w1, [sp, #120]
   2676c:	bl	1f0f0 <__sanitizer_set_report_fd@@Base+0x5828>
   26770:	mov	w1, w0
   26774:	mov	x0, x19
   26778:	str	w1, [sp, #124]
   2677c:	bl	1f140 <__sanitizer_set_report_fd@@Base+0x5878>
   26780:	mov	x3, x22
   26784:	mov	x2, x21
   26788:	mov	w1, w20
   2678c:	mov	x0, x19
   26790:	bl	25c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x788>
   26794:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26798:	add	x0, x0, #0xe8
   2679c:	bl	22d00 <OnPrint@@Base+0x398>
   267a0:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   267a4:	nop
   267a8:	dmb	ish
   267ac:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   267b0:	add	x1, x0, #0x100
   267b4:	strb	wzr, [x1, #8]
   267b8:	str	xzr, [x0, #256]
   267bc:	ret
   267c0:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   267c4:	add	x0, x0, #0x100
   267c8:	ldrb	w3, [x0, #8]
   267cc:	and	x3, x3, #0xff
   267d0:	cmp	x3, #0x1
   267d4:	b.ne	267dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x12cc>  // b.any
   267d8:	ret
   267dc:	str	x30, [sp, #-16]!
   267e0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   267e4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0xbb0>
   267e8:	add	x2, x2, #0x8f8
   267ec:	add	x0, x0, #0x930
   267f0:	mov	x4, #0x1                   	// #1
   267f4:	mov	w1, #0x2a                  	// #42
   267f8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   267fc:	nop
   26800:	stp	x19, x20, [sp, #-80]!
   26804:	stp	x21, x22, [sp, #16]
   26808:	mov	x22, x2
   2680c:	str	x30, [sp, #64]
   26810:	ldrb	w2, [x1]
   26814:	cbz	w2, 268b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a0>
   26818:	mov	x19, x1
   2681c:	mov	x21, x0
   26820:	stp	x23, x24, [sp, #32]
   26824:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26828:	mov	x24, x3
   2682c:	add	x23, x23, #0xdb8
   26830:	stp	x25, x26, [sp, #48]
   26834:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26838:	adrp	x26, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2683c:	add	x25, x25, #0x160
   26840:	b	2685c <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   26844:	add	x19, x19, #0x2
   26848:	add	x1, x26, #0x158
   2684c:	mov	x0, x21
   26850:	bl	22d88 <OnPrint@@Base+0x420>
   26854:	ldrb	w2, [x20, #1]
   26858:	cbz	w2, 268a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1398>
   2685c:	cmp	w2, #0x25
   26860:	add	x20, x19, #0x1
   26864:	b.ne	268ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x13dc>  // b.any
   26868:	ldrb	w2, [x19, #1]
   2686c:	cmp	w2, #0x6c
   26870:	b.eq	2690c <__sanitizer_get_module_and_offset_for_pc@@Base+0x13fc>  // b.none
   26874:	b.hi	268c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13b0>  // b.pmore
   26878:	cmp	w2, #0x25
   2687c:	b.eq	26844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1334>  // b.none
   26880:	cmp	w2, #0x67
   26884:	b.ne	26924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1414>  // b.any
   26888:	ldr	x2, [x22, #40]
   2688c:	mov	x1, x23
   26890:	mov	x0, x21
   26894:	add	x19, x19, #0x2
   26898:	bl	22d88 <OnPrint@@Base+0x420>
   2689c:	ldrb	w2, [x20, #1]
   268a0:	cbnz	w2, 2685c <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   268a4:	nop
   268a8:	ldp	x23, x24, [sp, #32]
   268ac:	ldp	x25, x26, [sp, #48]
   268b0:	ldp	x21, x22, [sp, #16]
   268b4:	ldr	x30, [sp, #64]
   268b8:	ldp	x19, x20, [sp], #80
   268bc:	ret
   268c0:	cmp	w2, #0x73
   268c4:	b.ne	26924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1414>  // b.any
   268c8:	ldr	x0, [x22, #24]
   268cc:	mov	x1, x24
   268d0:	add	x19, x19, #0x2
   268d4:	bl	157e0 <__sancov_default_options@@Base+0x2d10>
   268d8:	mov	x2, x0
   268dc:	mov	x1, x23
   268e0:	mov	x0, x21
   268e4:	bl	22d88 <OnPrint@@Base+0x420>
   268e8:	b	26854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   268ec:	mov	x0, x21
   268f0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   268f4:	add	x1, x1, #0x150
   268f8:	bl	22d88 <OnPrint@@Base+0x420>
   268fc:	mov	x0, x20
   26900:	mov	x20, x19
   26904:	mov	x19, x0
   26908:	b	26854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   2690c:	ldr	x2, [x22, #32]
   26910:	add	x19, x19, #0x2
   26914:	mov	x1, x25
   26918:	mov	x0, x21
   2691c:	bl	22d88 <OnPrint@@Base+0x420>
   26920:	b	26854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   26924:	mov	w1, w2
   26928:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2692c:	add	x0, x0, #0x168
   26930:	bl	22d00 <OnPrint@@Base+0x398>
   26934:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26938:	stp	x19, x20, [sp, #-48]!
   2693c:	cmp	w2, #0x0
   26940:	and	w4, w4, #0xff
   26944:	stp	x21, x22, [sp, #16]
   26948:	mov	x20, x0
   2694c:	mov	w19, w2
   26950:	str	x30, [sp, #32]
   26954:	mov	x0, x1
   26958:	mov	w21, w3
   2695c:	ccmp	w4, #0x0, #0x4, gt
   26960:	mov	x1, x5
   26964:	b.ne	269d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>  // b.any
   26968:	bl	157e0 <__sancov_default_options@@Base+0x2d10>
   2696c:	mov	x2, x0
   26970:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26974:	mov	x0, x20
   26978:	add	x1, x1, #0xdb8
   2697c:	bl	22d88 <OnPrint@@Base+0x420>
   26980:	cmp	w19, #0x0
   26984:	b.gt	26998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>
   26988:	ldp	x21, x22, [sp, #16]
   2698c:	ldr	x30, [sp, #32]
   26990:	ldp	x19, x20, [sp], #48
   26994:	ret
   26998:	adrp	x22, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2699c:	add	x22, x22, #0x1b8
   269a0:	mov	w2, w19
   269a4:	mov	x1, x22
   269a8:	mov	x0, x20
   269ac:	bl	22d88 <OnPrint@@Base+0x420>
   269b0:	cmp	w21, #0x0
   269b4:	b.le	26988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1478>
   269b8:	mov	w2, w21
   269bc:	mov	x1, x22
   269c0:	mov	x0, x20
   269c4:	ldp	x21, x22, [sp, #16]
   269c8:	ldr	x30, [sp, #32]
   269cc:	ldp	x19, x20, [sp], #48
   269d0:	b	22d88 <OnPrint@@Base+0x420>
   269d4:	bl	157e0 <__sancov_default_options@@Base+0x2d10>
   269d8:	mov	x2, x0
   269dc:	mov	w3, w19
   269e0:	mov	x0, x20
   269e4:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   269e8:	add	x1, x1, #0x1a8
   269ec:	bl	22d88 <OnPrint@@Base+0x420>
   269f0:	cmp	w21, #0x0
   269f4:	b.gt	26a14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1504>
   269f8:	mov	x0, x20
   269fc:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26a00:	ldp	x21, x22, [sp, #16]
   26a04:	add	x1, x1, #0x6a0
   26a08:	ldr	x30, [sp, #32]
   26a0c:	ldp	x19, x20, [sp], #48
   26a10:	b	22d88 <OnPrint@@Base+0x420>
   26a14:	mov	w2, w21
   26a18:	mov	x0, x20
   26a1c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26a20:	add	x1, x1, #0x1b0
   26a24:	bl	22d88 <OnPrint@@Base+0x420>
   26a28:	mov	x0, x20
   26a2c:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26a30:	ldp	x21, x22, [sp, #16]
   26a34:	add	x1, x1, #0x6a0
   26a38:	ldr	x30, [sp, #32]
   26a3c:	ldp	x19, x20, [sp], #48
   26a40:	b	22d88 <OnPrint@@Base+0x420>
   26a44:	nop
   26a48:	stp	x19, x20, [sp, #-32]!
   26a4c:	mov	x20, x0
   26a50:	mov	w19, w3
   26a54:	mov	x0, x1
   26a58:	mov	x1, x4
   26a5c:	stp	x21, x30, [sp, #16]
   26a60:	mov	x21, x2
   26a64:	bl	157e0 <__sancov_default_options@@Base+0x2d10>
   26a68:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26a6c:	mov	x2, x0
   26a70:	add	x1, x1, #0x200
   26a74:	mov	x0, x20
   26a78:	bl	22d88 <OnPrint@@Base+0x420>
   26a7c:	cbnz	w19, 26a9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x158c>
   26a80:	mov	x2, x21
   26a84:	mov	x0, x20
   26a88:	ldp	x21, x30, [sp, #16]
   26a8c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26a90:	ldp	x19, x20, [sp], #32
   26a94:	add	x1, x1, #0x238
   26a98:	b	22d88 <OnPrint@@Base+0x420>
   26a9c:	cmp	w19, #0x5
   26aa0:	b.eq	26b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x165c>  // b.none
   26aa4:	b.hi	26aec <__sanitizer_get_module_and_offset_for_pc@@Base+0x15dc>  // b.pmore
   26aa8:	cmp	w19, #0x3
   26aac:	b.eq	26b60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1650>  // b.none
   26ab0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26ab4:	cmp	w19, #0x4
   26ab8:	add	x2, x1, #0x1e8
   26abc:	b.ne	26b18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1608>  // b.any
   26ac0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26ac4:	mov	x0, x20
   26ac8:	add	x1, x1, #0x230
   26acc:	bl	22d88 <OnPrint@@Base+0x420>
   26ad0:	mov	x2, x21
   26ad4:	mov	x0, x20
   26ad8:	ldp	x21, x30, [sp, #16]
   26adc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26ae0:	ldp	x19, x20, [sp], #32
   26ae4:	add	x1, x1, #0x238
   26ae8:	b	22d88 <OnPrint@@Base+0x420>
   26aec:	cmp	w19, #0x7
   26af0:	b.eq	26b54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1644>  // b.none
   26af4:	cmp	w19, #0x8
   26af8:	b.ne	26b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1624>  // b.any
   26afc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b00:	mov	x0, x20
   26b04:	add	x2, x1, #0x1f0
   26b08:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b0c:	add	x1, x1, #0x230
   26b10:	bl	22d88 <OnPrint@@Base+0x420>
   26b14:	b	26ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15c0>
   26b18:	cmp	w19, #0x1
   26b1c:	b.eq	26b48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1638>  // b.none
   26b20:	cmp	w19, #0x2
   26b24:	b.ne	26b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1668>  // b.any
   26b28:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b2c:	add	x2, x1, #0x1c8
   26b30:	b	26ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   26b34:	cmp	w19, #0x6
   26b38:	b.ne	26b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1668>  // b.any
   26b3c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b40:	add	x2, x1, #0x1f8
   26b44:	b	26ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   26b48:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b4c:	add	x2, x1, #0x1d0
   26b50:	b	26ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   26b54:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b58:	add	x2, x1, #0x1c0
   26b5c:	b	26ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   26b60:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b64:	add	x2, x1, #0x1e0
   26b68:	b	26ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   26b6c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b70:	add	x2, x1, #0x1d8
   26b74:	b	26ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   26b78:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26b7c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26b80:	add	x2, x2, #0x208
   26b84:	add	x0, x0, #0x578
   26b88:	mov	x4, #0x0                   	// #0
   26b8c:	mov	x3, #0x0                   	// #0
   26b90:	mov	w1, #0x2a9                 	// #681
   26b94:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26b98:	stp	x19, x20, [sp, #-112]!
   26b9c:	mov	x19, x1
   26ba0:	mov	x20, x0
   26ba4:	mov	x0, x1
   26ba8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   26bac:	add	x1, x1, #0x108
   26bb0:	stp	x21, x22, [sp, #16]
   26bb4:	mov	x21, x3
   26bb8:	mov	x22, x6
   26bbc:	stp	x23, x24, [sp, #32]
   26bc0:	mov	x23, x5
   26bc4:	stp	x25, x26, [sp, #48]
   26bc8:	mov	w26, w2
   26bcc:	stp	x27, x28, [sp, #64]
   26bd0:	and	w27, w4, #0xff
   26bd4:	str	x30, [sp, #80]
   26bd8:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   26bdc:	cbz	w0, 26f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19f8>
   26be0:	ldrb	w2, [x19]
   26be4:	cbz	w2, 26cb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   26be8:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26bec:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26bf0:	add	x25, x25, #0x160
   26bf4:	add	x24, x24, #0x248
   26bf8:	b	26c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1778>
   26bfc:	ldrb	w2, [x19, #1]
   26c00:	cmp	w2, #0x6c
   26c04:	b.eq	26ef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19e0>  // b.none
   26c08:	b.hi	26d30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>  // b.pmore
   26c0c:	cmp	w2, #0x4d
   26c10:	b.eq	26eb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19a8>  // b.none
   26c14:	b.ls	26cfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x17ec>  // b.plast
   26c18:	cmp	w2, #0x63
   26c1c:	b.eq	26ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1990>  // b.none
   26c20:	cmp	w2, #0x66
   26c24:	b.ne	26cd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c4>  // b.any
   26c28:	ldr	x3, [x21, #32]
   26c2c:	cbz	x3, 26c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1758>
   26c30:	cbz	x22, 26c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1758>
   26c34:	mov	x0, x22
   26c38:	str	x3, [sp, #96]
   26c3c:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   26c40:	mov	x2, x0
   26c44:	ldr	x3, [sp, #96]
   26c48:	mov	x1, x22
   26c4c:	stp	x2, x3, [sp, #96]
   26c50:	mov	x0, x3
   26c54:	bl	1bda0 <__sanitizer_set_report_fd@@Base+0x24d8>
   26c58:	cmp	w0, #0x0
   26c5c:	ldp	x2, x3, [sp, #96]
   26c60:	add	x2, x3, x2
   26c64:	csel	x3, x2, x3, eq  // eq = none
   26c68:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26c6c:	mov	x2, x3
   26c70:	add	x19, x19, #0x2
   26c74:	mov	x0, x20
   26c78:	add	x1, x1, #0xdb8
   26c7c:	bl	22d88 <OnPrint@@Base+0x420>
   26c80:	ldrb	w2, [x28, #1]
   26c84:	cbz	w2, 26cb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   26c88:	cmp	w2, #0x25
   26c8c:	add	x28, x19, #0x1
   26c90:	b.eq	26bfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x16ec>  // b.none
   26c94:	mov	x0, x20
   26c98:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26c9c:	add	x1, x1, #0x150
   26ca0:	bl	22d88 <OnPrint@@Base+0x420>
   26ca4:	mov	x0, x28
   26ca8:	mov	x28, x19
   26cac:	mov	x19, x0
   26cb0:	ldrb	w2, [x28, #1]
   26cb4:	cbnz	w2, 26c88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1778>
   26cb8:	ldp	x21, x22, [sp, #16]
   26cbc:	ldp	x23, x24, [sp, #32]
   26cc0:	ldp	x25, x26, [sp, #48]
   26cc4:	ldp	x27, x28, [sp, #64]
   26cc8:	ldr	x30, [sp, #80]
   26ccc:	ldp	x19, x20, [sp], #112
   26cd0:	ret
   26cd4:	cmp	w2, #0x53
   26cd8:	b.ne	26f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   26cdc:	ldp	w2, w3, [x21, #56]
   26ce0:	add	x19, x19, #0x2
   26ce4:	ldr	x1, [x21, #48]
   26ce8:	mov	x5, x23
   26cec:	mov	w4, w27
   26cf0:	mov	x0, x20
   26cf4:	bl	26938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>
   26cf8:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26cfc:	cmp	w2, #0x46
   26d00:	b.eq	26e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18f8>  // b.none
   26d04:	cmp	w2, #0x4c
   26d08:	b.ne	26d64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1854>  // b.any
   26d0c:	ldr	x1, [x21, #48]
   26d10:	add	x19, x19, #0x2
   26d14:	cbz	x1, 26f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a08>
   26d18:	ldp	w2, w3, [x21, #56]
   26d1c:	mov	x5, x23
   26d20:	mov	w4, w27
   26d24:	mov	x0, x20
   26d28:	bl	26938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>
   26d2c:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26d30:	cmp	w2, #0x70
   26d34:	b.eq	26e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1978>  // b.none
   26d38:	b.ls	26db4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18a4>  // b.plast
   26d3c:	cmp	w2, #0x71
   26d40:	b.ne	26d84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1874>  // b.any
   26d44:	ldr	x2, [x21, #40]
   26d48:	add	x19, x19, #0x2
   26d4c:	mov	x1, x24
   26d50:	mov	x0, x20
   26d54:	cmn	x2, #0x1
   26d58:	csel	x2, x2, xzr, ne  // ne = any
   26d5c:	bl	22d88 <OnPrint@@Base+0x420>
   26d60:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26d64:	cmp	w2, #0x25
   26d68:	b.ne	26f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   26d6c:	add	x19, x19, #0x2
   26d70:	mov	x0, x20
   26d74:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26d78:	add	x1, x1, #0x158
   26d7c:	bl	22d88 <OnPrint@@Base+0x420>
   26d80:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26d84:	cmp	w2, #0x73
   26d88:	b.ne	26f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   26d8c:	ldr	x0, [x21, #48]
   26d90:	mov	x1, x23
   26d94:	bl	157e0 <__sancov_default_options@@Base+0x2d10>
   26d98:	add	x19, x19, #0x2
   26d9c:	mov	x2, x0
   26da0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   26da4:	mov	x0, x20
   26da8:	add	x1, x1, #0xdb8
   26dac:	bl	22d88 <OnPrint@@Base+0x420>
   26db0:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26db4:	cmp	w2, #0x6e
   26db8:	b.eq	26dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x18dc>  // b.none
   26dbc:	cmp	w2, #0x6f
   26dc0:	b.ne	26ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>  // b.any
   26dc4:	ldr	x2, [x21, #16]
   26dc8:	add	x19, x19, #0x2
   26dcc:	mov	x1, x24
   26dd0:	mov	x0, x20
   26dd4:	bl	22d88 <OnPrint@@Base+0x420>
   26dd8:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26ddc:	cmp	w2, #0x6d
   26de0:	b.ne	26f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   26de4:	ldr	x0, [x21, #8]
   26de8:	b	26d90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1880>
   26dec:	add	x19, x19, #0x2
   26df0:	mov	w2, w26
   26df4:	mov	x0, x20
   26df8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26dfc:	add	x1, x1, #0x240
   26e00:	bl	22d88 <OnPrint@@Base+0x420>
   26e04:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26e08:	ldr	x3, [x21, #32]
   26e0c:	add	x19, x19, #0x2
   26e10:	cbz	x3, 26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26e14:	cbz	x22, 26e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x193c>
   26e18:	mov	x0, x22
   26e1c:	str	x3, [sp, #96]
   26e20:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   26e24:	mov	x2, x0
   26e28:	ldr	x3, [sp, #96]
   26e2c:	mov	x1, x22
   26e30:	stp	x2, x3, [sp, #96]
   26e34:	mov	x0, x3
   26e38:	bl	1bda0 <__sanitizer_set_report_fd@@Base+0x24d8>
   26e3c:	cmp	w0, #0x0
   26e40:	ldp	x2, x3, [sp, #96]
   26e44:	add	x2, x3, x2
   26e48:	csel	x3, x2, x3, eq  // eq = none
   26e4c:	mov	x0, x20
   26e50:	mov	x2, x3
   26e54:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26e58:	add	x1, x1, #0x250
   26e5c:	bl	22d88 <OnPrint@@Base+0x420>
   26e60:	ldr	x0, [x21, #48]
   26e64:	cbnz	x0, 26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26e68:	ldr	x2, [x21, #40]
   26e6c:	cmn	x2, #0x1
   26e70:	b.eq	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>  // b.none
   26e74:	mov	x0, x20
   26e78:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26e7c:	add	x1, x1, #0x258
   26e80:	bl	22d88 <OnPrint@@Base+0x420>
   26e84:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26e88:	ldr	x2, [x21]
   26e8c:	add	x19, x19, #0x2
   26e90:	mov	x1, x24
   26e94:	mov	x0, x20
   26e98:	bl	22d88 <OnPrint@@Base+0x420>
   26e9c:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26ea0:	ldr	w2, [x21, #60]
   26ea4:	add	x19, x19, #0x2
   26ea8:	mov	x1, x25
   26eac:	mov	x0, x20
   26eb0:	bl	22d88 <OnPrint@@Base+0x420>
   26eb4:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26eb8:	ldr	x2, [x21]
   26ebc:	add	x19, x19, #0x2
   26ec0:	tbnz	x2, #60, 26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26ec4:	ldr	x0, [x21, #8]
   26ec8:	cbz	x0, 26f38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   26ecc:	bl	15860 <__sancov_default_options@@Base+0x2d90>
   26ed0:	mov	x1, x0
   26ed4:	ldr	w3, [x21, #24]
   26ed8:	mov	x0, x20
   26edc:	ldr	x2, [x21, #16]
   26ee0:	adrp	x4, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26ee4:	add	x4, x4, #0xb00
   26ee8:	bl	26a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
   26eec:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26ef0:	ldr	w2, [x21, #56]
   26ef4:	add	x19, x19, #0x2
   26ef8:	mov	x1, x25
   26efc:	mov	x0, x20
   26f00:	bl	22d88 <OnPrint@@Base+0x420>
   26f04:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26f08:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26f0c:	mov	w2, #0x20                  	// #32
   26f10:	add	x19, x19, #0x280
   26f14:	b	26be8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d8>
   26f18:	ldr	x1, [x21, #8]
   26f1c:	cbz	x1, 26f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a3c>
   26f20:	ldr	w3, [x21, #24]
   26f24:	mov	x4, x23
   26f28:	ldr	x2, [x21, #16]
   26f2c:	mov	x0, x20
   26f30:	bl	26a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
   26f34:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26f38:	mov	x0, x20
   26f3c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26f40:	add	x1, x1, #0x278
   26f44:	bl	22d88 <OnPrint@@Base+0x420>
   26f48:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26f4c:	mov	x0, x20
   26f50:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26f54:	add	x1, x1, #0x260
   26f58:	bl	22d88 <OnPrint@@Base+0x420>
   26f5c:	b	26c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   26f60:	mov	w1, w2
   26f64:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26f68:	add	x0, x0, #0x168
   26f6c:	bl	22d00 <OnPrint@@Base+0x398>
   26f70:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26f74:	nop
   26f78:	ldr	x0, [x0, #24]
   26f7c:	ret
   26f80:	mov	x0, #0x22                  	// #34
   26f84:	ret
   26f88:	ldr	x4, [x0, #24]
   26f8c:	cmp	x1, x4
   26f90:	b.cs	26fa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a90>  // b.hs, b.nlast
   26f94:	ldr	x0, [x0, #8]
   26f98:	ldr	x0, [x0, x1, lsl #3]
   26f9c:	ret
   26fa0:	str	x30, [sp, #-16]!
   26fa4:	mov	x3, x1
   26fa8:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26fac:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   26fb0:	add	x2, x2, #0x298
   26fb4:	add	x0, x0, #0x2c0
   26fb8:	mov	w1, #0x202                 	// #514
   26fbc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26fc0:	stp	x19, x20, [sp, #-352]!
   26fc4:	mov	x19, x2
   26fc8:	adrp	x4, 26000 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf0>
   26fcc:	ldr	x2, [x0]
   26fd0:	stp	x21, x22, [sp, #16]
   26fd4:	add	x4, x4, #0xf88
   26fd8:	stp	x23, x30, [sp, #32]
   26fdc:	mov	x20, x3
   26fe0:	ldr	x2, [x2, #24]
   26fe4:	cmp	x2, x4
   26fe8:	b.ne	2708c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>  // b.any
   26fec:	ldr	x4, [x0, #24]
   26ff0:	mov	x3, x1
   26ff4:	cmp	x1, x4
   26ff8:	b.cs	270b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ba0>  // b.hs, b.nlast
   26ffc:	ldr	x0, [x0, #8]
   27000:	ldr	x21, [x0, x1, lsl #3]
   27004:	add	x3, sp, #0x40
   27008:	mov	x2, #0x1                   	// #1
   2700c:	mov	w1, w21
   27010:	add	x22, sp, #0x50
   27014:	mov	x23, #0x110                 	// #272
   27018:	mov	w0, #0x4204                	// #16900
   2701c:	stp	x22, x23, [sp, #64]
   27020:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   27024:	add	x1, sp, #0x3c
   27028:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   2702c:	tst	w0, #0xff
   27030:	b.eq	27060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b50>  // b.none
   27034:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27038:	ldr	w2, [sp, #60]
   2703c:	ldr	x0, [x0, #3680]
   27040:	ldr	w0, [x0]
   27044:	cbnz	w0, 27098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   27048:	cmp	w2, #0x3
   2704c:	csetm	w0, eq  // eq = none
   27050:	ldp	x21, x22, [sp, #16]
   27054:	ldp	x23, x30, [sp, #32]
   27058:	ldp	x19, x20, [sp], #352
   2705c:	ret
   27060:	ldr	x0, [sp, #328]
   27064:	str	x0, [x20]
   27068:	mov	x2, x23
   2706c:	mov	x1, x22
   27070:	mov	x0, x19
   27074:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27078:	mov	w0, #0x1                   	// #1
   2707c:	ldp	x21, x22, [sp, #16]
   27080:	ldp	x23, x30, [sp, #32]
   27084:	ldp	x19, x20, [sp], #352
   27088:	ret
   2708c:	blr	x2
   27090:	mov	x21, x0
   27094:	b	27004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af4>
   27098:	mov	w1, w21
   2709c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   270a0:	add	x0, x0, #0x318
   270a4:	bl	22d00 <OnPrint@@Base+0x398>
   270a8:	ldr	w2, [sp, #60]
   270ac:	b	27048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b38>
   270b0:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   270b4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   270b8:	add	x2, x2, #0x298
   270bc:	add	x0, x0, #0x2c0
   270c0:	mov	w1, #0x202                 	// #514
   270c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   270c8:	stp	x19, x20, [sp, #-32]!
   270cc:	adrp	x20, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   270d0:	ldr	x19, [x20, #272]
   270d4:	str	x30, [sp, #24]
   270d8:	cbz	x19, 270f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   270dc:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   270e0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   270e4:	ldr	x1, [x1, #3560]
   270e8:	ldr	x1, [x1]
   270ec:	cmp	x0, x1
   270f0:	b.eq	27100 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bf0>  // b.none
   270f4:	ldr	x30, [sp, #24]
   270f8:	ldp	x19, x20, [sp], #32
   270fc:	ret
   27100:	ldr	x0, [x19, #32]
   27104:	cbz	x0, 2713c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c2c>
   27108:	str	x21, [sp, #16]
   2710c:	mov	x21, #0x0                   	// #0
   27110:	ldr	x1, [x19, #16]
   27114:	mov	x3, #0x0                   	// #0
   27118:	mov	x2, #0x0                   	// #0
   2711c:	mov	w0, #0x8                   	// #8
   27120:	ldr	x1, [x1, x21, lsl #3]
   27124:	add	x21, x21, #0x1
   27128:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   2712c:	ldr	x0, [x19, #32]
   27130:	cmp	x0, x21
   27134:	b.hi	27110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c00>  // b.pmore
   27138:	ldr	x21, [sp, #16]
   2713c:	str	xzr, [x20, #272]
   27140:	b	270f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   27144:	nop
   27148:	stp	x19, x20, [sp, #-96]!
   2714c:	mov	x19, x1
   27150:	mov	x20, x0
   27154:	ldr	x1, [x0, #32]
   27158:	stp	x21, x22, [sp, #16]
   2715c:	str	x30, [sp, #64]
   27160:	cbz	x1, 271a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c90>
   27164:	mov	x2, #0x0                   	// #0
   27168:	ldr	x4, [x0, #16]
   2716c:	b	2717c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c6c>
   27170:	add	x2, x2, #0x1
   27174:	cmp	x2, x1
   27178:	b.eq	271a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c90>  // b.none
   2717c:	ldr	x3, [x4, x2, lsl #3]
   27180:	cmp	x19, x3
   27184:	b.ne	27170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c60>  // b.any
   27188:	mov	w21, #0x0                   	// #0
   2718c:	mov	w0, w21
   27190:	ldp	x21, x22, [sp, #16]
   27194:	ldr	x30, [sp, #64]
   27198:	ldp	x19, x20, [sp], #96
   2719c:	ret
   271a0:	mov	x3, #0x0                   	// #0
   271a4:	mov	x2, #0x0                   	// #0
   271a8:	mov	w1, w19
   271ac:	mov	w0, #0x10                  	// #16
   271b0:	stp	x23, x24, [sp, #32]
   271b4:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   271b8:	add	x1, sp, #0x50
   271bc:	mov	w23, w19
   271c0:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   271c4:	ands	w21, w0, #0xff
   271c8:	b.ne	272c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>  // b.any
   271cc:	stp	x25, x26, [sp, #48]
   271d0:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   271d4:	ldr	x0, [x25, #3680]
   271d8:	ldr	w0, [x0]
   271dc:	sxtw	x0, w0
   271e0:	cmp	x0, #0x1
   271e4:	b.hi	272f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1de0>  // b.pmore
   271e8:	add	x24, sp, #0x54
   271ec:	add	x22, sp, #0x58
   271f0:	mov	w2, #0x40000000            	// #1073741824
   271f4:	mov	x1, x24
   271f8:	mov	w0, w23
   271fc:	bl	1e008 <__sanitizer_set_report_fd@@Base+0x4740>
   27200:	mov	x1, x22
   27204:	mov	x26, x0
   27208:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   2720c:	tst	w0, #0xff
   27210:	b.eq	27220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d10>  // b.none
   27214:	ldr	w0, [sp, #88]
   27218:	cmp	w0, #0x4
   2721c:	b.eq	271f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce0>  // b.none
   27220:	mov	x0, x26
   27224:	mov	x1, x22
   27228:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   2722c:	tst	w0, #0xff
   27230:	b.ne	273ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1edc>  // b.any
   27234:	ldr	w3, [sp, #84]
   27238:	and	w0, w3, #0xff
   2723c:	cmp	w0, #0x7f
   27240:	b.ne	27268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d58>  // b.any
   27244:	ubfx	x3, x3, #8, #8
   27248:	cmp	w3, #0x13
   2724c:	b.eq	27268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d58>  // b.none
   27250:	and	x3, x3, #0xff
   27254:	mov	w1, w23
   27258:	mov	x2, #0x0                   	// #0
   2725c:	mov	w0, #0x7                   	// #7
   27260:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   27264:	b	271f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce0>
   27268:	ldr	x4, [x20, #24]
   2726c:	str	x19, [sp, #88]
   27270:	ldr	x3, [x20, #32]
   27274:	add	x21, x20, #0x10
   27278:	lsr	x4, x4, #3
   2727c:	cmp	x3, x4
   27280:	b.hi	273d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec4>  // b.pmore
   27284:	add	x19, x3, #0x1
   27288:	b.eq	27304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df4>  // b.none
   2728c:	ldr	x23, [x20, #16]
   27290:	str	x19, [x21, #16]
   27294:	mov	x1, x22
   27298:	add	x0, x23, x3, lsl #3
   2729c:	mov	x2, #0x8                   	// #8
   272a0:	mov	w21, #0x1                   	// #1
   272a4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   272a8:	mov	w0, w21
   272ac:	ldp	x21, x22, [sp, #16]
   272b0:	ldp	x23, x24, [sp, #32]
   272b4:	ldp	x25, x26, [sp, #48]
   272b8:	ldr	x30, [sp, #64]
   272bc:	ldp	x19, x20, [sp], #96
   272c0:	ret
   272c4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   272c8:	mov	w21, #0x0                   	// #0
   272cc:	ldr	x0, [x0, #3680]
   272d0:	ldr	w0, [x0]
   272d4:	cbnz	w0, 273b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea8>
   272d8:	mov	w0, w21
   272dc:	ldp	x21, x22, [sp, #16]
   272e0:	ldp	x23, x24, [sp, #32]
   272e4:	ldr	x30, [sp, #64]
   272e8:	ldp	x19, x20, [sp], #96
   272ec:	ret
   272f0:	mov	x1, x19
   272f4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   272f8:	add	x0, x0, #0x380
   272fc:	bl	22d00 <OnPrint@@Base+0x398>
   27300:	b	271e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd8>
   27304:	tst	x3, x19
   27308:	b.eq	27344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e34>  // b.none
   2730c:	clz	x2, x19
   27310:	mov	w1, #0x3f                  	// #63
   27314:	sub	w2, w1, w2
   27318:	mov	x1, #0x1                   	// #1
   2731c:	add	w4, w2, #0x1
   27320:	lsl	x4, x1, x4
   27324:	cmp	x4, x19
   27328:	b.ls	27484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f74>  // b.plast
   2732c:	lsl	x1, x1, x2
   27330:	cmp	x1, x19
   27334:	b.cs	27464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f54>  // b.hs, b.nlast
   27338:	cmp	x3, x4
   2733c:	b.hi	2743c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f2c>  // b.pmore
   27340:	mov	x19, x4
   27344:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27348:	lsl	x19, x19, #3
   2734c:	ldr	x23, [x23, #4000]
   27350:	ldr	x0, [x23]
   27354:	cbz	x0, 27418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f08>
   27358:	sub	x1, x0, #0x1
   2735c:	tst	x0, x1
   27360:	b.ne	27454 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f44>  // b.any
   27364:	add	x19, x19, x1
   27368:	neg	x0, x0
   2736c:	and	x19, x19, x0
   27370:	mov	w2, #0x0                   	// #0
   27374:	mov	x0, x19
   27378:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2737c:	add	x1, x1, #0x700
   27380:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   27384:	ldr	x1, [x20, #16]
   27388:	mov	x23, x0
   2738c:	ldr	x2, [x21, #16]
   27390:	lsl	x2, x2, #3
   27394:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27398:	ldr	x1, [x21, #8]
   2739c:	ldr	x0, [x20, #16]
   273a0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   273a4:	ldr	x3, [x21, #16]
   273a8:	str	x23, [x20, #16]
   273ac:	str	x19, [x21, #8]
   273b0:	add	x19, x3, #0x1
   273b4:	b	27290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d80>
   273b8:	ldr	w2, [sp, #80]
   273bc:	mov	x1, x19
   273c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   273c4:	add	x0, x0, #0x350
   273c8:	bl	22d00 <OnPrint@@Base+0x398>
   273cc:	ldp	x23, x24, [sp, #32]
   273d0:	b	2718c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c7c>
   273d4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   273d8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   273dc:	add	x2, x2, #0x660
   273e0:	add	x0, x0, #0x578
   273e4:	mov	w1, #0x1be                 	// #446
   273e8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   273ec:	ldr	x25, [x25, #3680]
   273f0:	ldr	w0, [x25]
   273f4:	cbnz	w0, 27424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f14>
   273f8:	mov	w1, w19
   273fc:	mov	x3, #0x0                   	// #0
   27400:	mov	x2, #0x0                   	// #0
   27404:	mov	w0, #0x11                  	// #17
   27408:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   2740c:	ldp	x23, x24, [sp, #32]
   27410:	ldp	x25, x26, [sp, #48]
   27414:	b	2718c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c7c>
   27418:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2741c:	str	x0, [x23]
   27420:	b	27358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e48>
   27424:	ldr	w2, [sp, #88]
   27428:	mov	x1, x19
   2742c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27430:	add	x0, x0, #0x3a0
   27434:	bl	22d00 <OnPrint@@Base+0x398>
   27438:	b	273f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ee8>
   2743c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27440:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27444:	add	x2, x2, #0x6c8
   27448:	add	x0, x0, #0x578
   2744c:	mov	w1, #0x1fd                 	// #509
   27450:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27454:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27458:	add	x0, x0, #0x6e8
   2745c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   27460:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   27464:	mov	x4, x1
   27468:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2746c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27470:	mov	x3, x19
   27474:	add	x2, x2, #0x6a8
   27478:	add	x0, x0, #0x578
   2747c:	mov	w1, #0x17c                 	// #380
   27480:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27484:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27488:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2748c:	mov	x3, x19
   27490:	add	x2, x2, #0x680
   27494:	add	x0, x0, #0x578
   27498:	mov	w1, #0x17b                 	// #379
   2749c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   274a0:	stp	x19, x20, [sp, #-80]!
   274a4:	mov	x20, x0
   274a8:	ldr	x0, [x0, #32]
   274ac:	str	x30, [sp, #56]
   274b0:	cbz	x0, 27574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2064>
   274b4:	mov	x19, #0x0                   	// #0
   274b8:	stp	x21, x22, [sp, #16]
   274bc:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   274c0:	stp	x23, x24, [sp, #32]
   274c4:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   274c8:	add	x23, sp, #0x4c
   274cc:	add	x24, x24, #0x3d8
   274d0:	str	x25, [sp, #48]
   274d4:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   274d8:	add	x25, x25, #0x3f8
   274dc:	b	27510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2000>
   274e0:	ldr	x2, [x22, #3680]
   274e4:	mov	w1, w21
   274e8:	mov	x0, x24
   274ec:	ldr	w2, [x2]
   274f0:	sxtw	x2, w2
   274f4:	cmp	x2, #0x1
   274f8:	b.ls	27500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>  // b.plast
   274fc:	bl	22d00 <OnPrint@@Base+0x398>
   27500:	ldr	x0, [x20, #32]
   27504:	add	x19, x19, #0x1
   27508:	cmp	x0, x19
   2750c:	b.ls	27568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2058>  // b.plast
   27510:	ldr	x1, [x20, #16]
   27514:	mov	x3, #0x0                   	// #0
   27518:	mov	x2, #0x0                   	// #0
   2751c:	mov	w0, #0x11                  	// #17
   27520:	ldr	x21, [x1, x19, lsl #3]
   27524:	mov	w1, w21
   27528:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   2752c:	mov	x1, x23
   27530:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   27534:	tst	w0, #0xff
   27538:	b.eq	274e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd0>  // b.none
   2753c:	ldr	x0, [x22, #3680]
   27540:	ldr	w0, [x0]
   27544:	cbz	w0, 27500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>
   27548:	ldr	w2, [sp, #76]
   2754c:	mov	x0, x25
   27550:	mov	w1, w21
   27554:	add	x19, x19, #0x1
   27558:	bl	22d00 <OnPrint@@Base+0x398>
   2755c:	ldr	x0, [x20, #32]
   27560:	cmp	x0, x19
   27564:	b.hi	27510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2000>  // b.pmore
   27568:	ldp	x21, x22, [sp, #16]
   2756c:	ldp	x23, x24, [sp, #32]
   27570:	ldr	x25, [sp, #48]
   27574:	ldr	x30, [sp, #56]
   27578:	ldp	x19, x20, [sp], #80
   2757c:	ret
   27580:	stp	x19, x20, [sp, #-32]!
   27584:	mov	x20, x0
   27588:	ldr	x0, [x0, #32]
   2758c:	str	x30, [sp, #16]
   27590:	cbz	x0, 275c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20b0>
   27594:	mov	x19, #0x0                   	// #0
   27598:	ldr	x1, [x20, #16]
   2759c:	mov	x3, #0x0                   	// #0
   275a0:	mov	x2, #0x0                   	// #0
   275a4:	mov	w0, #0x8                   	// #8
   275a8:	ldr	x1, [x1, x19, lsl #3]
   275ac:	add	x19, x19, #0x1
   275b0:	bl	1dff0 <__sanitizer_set_report_fd@@Base+0x4728>
   275b4:	ldr	x0, [x20, #32]
   275b8:	cmp	x0, x19
   275bc:	b.hi	27598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2088>  // b.pmore
   275c0:	ldr	x30, [sp, #16]
   275c4:	ldp	x19, x20, [sp], #32
   275c8:	ret
   275cc:	nop
   275d0:	stp	x19, x20, [sp, #-96]!
   275d4:	mov	w20, w0
   275d8:	add	x19, sp, #0x28
   275dc:	stp	x21, x30, [sp, #16]
   275e0:	mov	x0, x19
   275e4:	stp	x1, x2, [sp, #40]
   275e8:	bl	21030 <__sanitizer_set_report_fd@@Base+0x7768>
   275ec:	mov	x1, x0
   275f0:	mov	x0, x19
   275f4:	str	x1, [sp, #56]
   275f8:	adrp	x21, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   275fc:	bl	21040 <__sanitizer_set_report_fd@@Base+0x7778>
   27600:	mov	w1, w0
   27604:	mov	x0, x19
   27608:	strb	w1, [sp, #88]
   2760c:	bl	1f0f0 <__sanitizer_set_report_fd@@Base+0x5828>
   27610:	mov	w1, w0
   27614:	mov	x0, x19
   27618:	str	w1, [sp, #92]
   2761c:	bl	1f140 <__sanitizer_set_report_fd@@Base+0x5878>
   27620:	ldp	x2, x3, [sp, #56]
   27624:	mov	w1, w20
   27628:	ldr	x4, [sp, #72]
   2762c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27630:	add	x0, x0, #0x428
   27634:	bl	22c78 <OnPrint@@Base+0x310>
   27638:	ldr	x19, [x21, #272]
   2763c:	cbz	x19, 27674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2164>
   27640:	mov	x0, x19
   27644:	cmp	w20, #0x6
   27648:	b.eq	27684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2174>  // b.none
   2764c:	bl	274a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f90>
   27650:	adrp	x0, 27000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af0>
   27654:	add	x0, x0, #0xc8
   27658:	bl	2c530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7020>
   2765c:	tst	w0, #0xff
   27660:	b.eq	2768c <__sanitizer_get_module_and_offset_for_pc@@Base+0x217c>  // b.none
   27664:	ldr	x0, [x19]
   27668:	mov	x1, #0x1                   	// #1
   2766c:	str	xzr, [x21, #272]
   27670:	str	x1, [x0, #104]
   27674:	cmp	w20, #0x6
   27678:	cset	w0, ne  // ne = any
   2767c:	add	w0, w0, #0x1
   27680:	bl	1db88 <__sanitizer_set_report_fd@@Base+0x42c0>
   27684:	bl	27580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2070>
   27688:	b	27650 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2140>
   2768c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27690:	add	x0, x0, #0x460
   27694:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   27698:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2769c:	nop
   276a0:	stp	x19, x20, [sp, #-128]!
   276a4:	stp	x21, x22, [sp, #16]
   276a8:	mov	x21, x0
   276ac:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   276b0:	stp	x23, x24, [sp, #32]
   276b4:	add	x23, sp, #0x60
   276b8:	ldr	w1, [x21, #40]
   276bc:	mov	x0, x23
   276c0:	stp	x25, x30, [sp, #48]
   276c4:	bl	1e268 <__sanitizer_set_report_fd@@Base+0x49a0>
   276c8:	str	xzr, [sp, #64]
   276cc:	ldr	x19, [x22, #4000]
   276d0:	stp	xzr, xzr, [sp, #72]
   276d4:	ldr	x0, [x19]
   276d8:	cbz	x0, 27870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2360>
   276dc:	sub	x1, x0, #0x1
   276e0:	tst	x1, x0
   276e4:	b.ne	2787c <__sanitizer_get_module_and_offset_for_pc@@Base+0x236c>  // b.any
   276e8:	add	x19, x0, #0x7
   276ec:	neg	x0, x0
   276f0:	and	x19, x19, x0
   276f4:	mov	w2, #0x0                   	// #0
   276f8:	mov	x0, x19
   276fc:	adrp	x24, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27700:	add	x1, x24, #0x700
   27704:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   27708:	ldr	x1, [sp, #64]
   2770c:	mov	x20, x0
   27710:	ldr	x2, [sp, #80]
   27714:	lsl	x2, x2, #3
   27718:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2771c:	ldp	x0, x1, [sp, #64]
   27720:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27724:	stp	x20, x19, [sp, #64]
   27728:	cmp	x19, #0x3ff
   2772c:	b.ls	2780c <__sanitizer_get_module_and_offset_for_pc@@Base+0x22fc>  // b.plast
   27730:	add	x25, sp, #0x40
   27734:	mov	w24, #0x0                   	// #0
   27738:	mov	x1, x25
   2773c:	mov	x0, x23
   27740:	bl	1e678 <__sanitizer_set_report_fd@@Base+0x4db0>
   27744:	cbz	w0, 277d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22c0>
   27748:	cmp	w0, #0x1
   2774c:	b.ne	2776c <__sanitizer_get_module_and_offset_for_pc@@Base+0x225c>  // b.any
   27750:	ldr	x19, [sp, #64]
   27754:	ldr	x22, [sp, #80]
   27758:	add	x22, x19, x22, lsl #3
   2775c:	cmp	x22, x19
   27760:	b.eq	278b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23a4>  // b.none
   27764:	mov	w20, w0
   27768:	b	27788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2278>
   2776c:	ldr	x19, [sp, #64]
   27770:	ldr	x22, [sp, #80]
   27774:	add	x22, x19, x22, lsl #3
   27778:	cmp	x22, x19
   2777c:	b.eq	277c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22b0>  // b.none
   27780:	mov	w20, #0x0                   	// #0
   27784:	nop
   27788:	ldr	x1, [x19], #8
   2778c:	mov	x0, x21
   27790:	bl	27148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c38>
   27794:	ands	w0, w0, #0xff
   27798:	csel	w20, w20, w0, eq  // eq = none
   2779c:	cmp	x22, x19
   277a0:	b.ne	27788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2278>  // b.any
   277a4:	eor	w20, w20, #0x1
   277a8:	and	w20, w20, #0xff
   277ac:	add	w24, w24, #0x1
   277b0:	cmp	w20, #0x0
   277b4:	ccmp	w24, #0x1d, #0x0, eq  // eq = none
   277b8:	b.le	27738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   277bc:	ldr	x19, [sp, #64]
   277c0:	ldr	x0, [x21, #32]
   277c4:	cmp	x0, #0x0
   277c8:	cset	w20, ne  // ne = any
   277cc:	b	277e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22d0>
   277d0:	mov	x0, x21
   277d4:	bl	274a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f90>
   277d8:	ldr	x19, [sp, #64]
   277dc:	mov	w20, #0x0                   	// #0
   277e0:	ldr	x1, [sp, #72]
   277e4:	mov	x0, x19
   277e8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   277ec:	mov	x0, x23
   277f0:	bl	1ead8 <__sanitizer_set_report_fd@@Base+0x5210>
   277f4:	mov	w0, w20
   277f8:	ldp	x21, x22, [sp, #16]
   277fc:	ldp	x23, x24, [sp, #32]
   27800:	ldp	x25, x30, [sp, #48]
   27804:	ldp	x19, x20, [sp], #128
   27808:	ret
   2780c:	ldr	x3, [sp, #80]
   27810:	cmp	x3, #0x80
   27814:	b.hi	27898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2388>  // b.pmore
   27818:	ldr	x22, [x22, #4000]
   2781c:	ldr	x0, [x22]
   27820:	cbz	x0, 2788c <__sanitizer_get_module_and_offset_for_pc@@Base+0x237c>
   27824:	sub	x1, x0, #0x1
   27828:	tst	x1, x0
   2782c:	b.ne	2787c <__sanitizer_get_module_and_offset_for_pc@@Base+0x236c>  // b.any
   27830:	add	x19, x0, #0x3ff
   27834:	neg	x0, x0
   27838:	and	x19, x19, x0
   2783c:	add	x1, x24, #0x700
   27840:	mov	w2, #0x0                   	// #0
   27844:	mov	x0, x19
   27848:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2784c:	mov	x20, x0
   27850:	ldr	x1, [sp, #64]
   27854:	ldr	x2, [sp, #80]
   27858:	lsl	x2, x2, #3
   2785c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27860:	ldp	x0, x1, [sp, #64]
   27864:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27868:	stp	x20, x19, [sp, #64]
   2786c:	b	27730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2220>
   27870:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27874:	str	x0, [x19]
   27878:	b	276dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21cc>
   2787c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27880:	add	x0, x0, #0x6e8
   27884:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   27888:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2788c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27890:	str	x0, [x22]
   27894:	b	27824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2314>
   27898:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2789c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   278a0:	add	x2, x2, #0x6c8
   278a4:	add	x0, x0, #0x578
   278a8:	mov	x4, #0x80                  	// #128
   278ac:	mov	w1, #0x1fd                 	// #509
   278b0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   278b4:	mov	w20, #0x0                   	// #0
   278b8:	b	277ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x229c>
   278bc:	nop
   278c0:	stp	x19, x20, [sp, #-336]!
   278c4:	mov	x1, #0x9                   	// #9
   278c8:	mov	x4, #0x0                   	// #0
   278cc:	mov	x3, #0x0                   	// #0
   278d0:	mov	x2, #0x0                   	// #0
   278d4:	stp	x21, x22, [sp, #16]
   278d8:	mov	x21, x0
   278dc:	mov	w0, #0x1                   	// #1
   278e0:	stp	x23, x24, [sp, #32]
   278e4:	stp	x25, x26, [sp, #48]
   278e8:	stp	x27, x28, [sp, #64]
   278ec:	str	x30, [sp, #80]
   278f0:	bl	1e070 <__sanitizer_set_report_fd@@Base+0x47a8>
   278f4:	bl	1e030 <__sanitizer_set_report_fd@@Base+0x4768>
   278f8:	ldr	x1, [x21, #112]
   278fc:	cmp	x0, x1
   27900:	b.ne	27cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x27ac>  // b.any
   27904:	add	x19, x21, #0x10
   27908:	adrp	x27, 27000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af0>
   2790c:	mov	x0, x19
   27910:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   27914:	mov	x0, x19
   27918:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2791c:	add	x0, x27, #0xc8
   27920:	bl	2c4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fa8>
   27924:	tst	w0, #0xff
   27928:	b.eq	27c08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26f8>  // b.none
   2792c:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27930:	bl	1e030 <__sanitizer_set_report_fd@@Base+0x4768>
   27934:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   27938:	add	x1, x1, #0xcb8
   2793c:	ldr	x20, [x22, #4000]
   27940:	stp	x21, x1, [sp, #128]
   27944:	mov	x19, x0
   27948:	str	xzr, [sp, #144]
   2794c:	ldr	x1, [x20]
   27950:	stp	xzr, xzr, [sp, #152]
   27954:	cbz	x1, 27b30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2620>
   27958:	sub	x0, x1, #0x1
   2795c:	tst	x0, x1
   27960:	b.ne	27bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   27964:	add	x20, x1, #0x7
   27968:	neg	x1, x1
   2796c:	and	x20, x20, x1
   27970:	mov	w2, #0x0                   	// #0
   27974:	mov	x0, x20
   27978:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2797c:	add	x1, x23, #0x700
   27980:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   27984:	ldr	x1, [sp, #144]
   27988:	mov	x24, x0
   2798c:	ldr	x2, [sp, #160]
   27990:	lsl	x2, x2, #3
   27994:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27998:	ldp	x0, x1, [sp, #144]
   2799c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   279a0:	stp	x24, x20, [sp, #144]
   279a4:	lsr	x1, x20, #3
   279a8:	cmp	x1, #0x3ff
   279ac:	b.ls	27b5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x264c>  // b.plast
   279b0:	ldr	x20, [x22, #4000]
   279b4:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   279b8:	add	x28, sp, #0x80
   279bc:	str	w19, [sp, #168]
   279c0:	str	x28, [x0, #272]
   279c4:	ldr	x0, [x20]
   279c8:	cbz	x0, 27bdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x26cc>
   279cc:	sub	x19, x0, #0x1
   279d0:	ands	x19, x19, x0
   279d4:	b.ne	27bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   279d8:	neg	x20, x0
   279dc:	mov	x24, #0x1fff                	// #8191
   279e0:	add	x0, x0, x24
   279e4:	add	x1, x23, #0x700
   279e8:	and	x20, x0, x20
   279ec:	mov	w2, #0x0                   	// #0
   279f0:	mov	x0, x20
   279f4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   279f8:	mov	x2, #0x0                   	// #0
   279fc:	mov	x1, #0x0                   	// #0
   27a00:	mov	x26, x0
   27a04:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27a08:	mov	x1, #0x0                   	// #0
   27a0c:	mov	x0, #0x0                   	// #0
   27a10:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27a14:	cmp	x20, x24
   27a18:	b.ls	27c18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2708>  // b.plast
   27a1c:	add	x23, sp, #0x68
   27a20:	mov	x2, #0x2000                	// #8192
   27a24:	mov	w1, #0x0                   	// #0
   27a28:	mov	x0, x26
   27a2c:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   27a30:	mov	w25, #0x4                   	// #4
   27a34:	mov	x0, x23
   27a38:	mov	x2, #0x18                  	// #24
   27a3c:	mov	w1, #0x0                   	// #0
   27a40:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   27a44:	mov	x2, #0x2000                	// #8192
   27a48:	mov	x0, x23
   27a4c:	adrp	x24, 27000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af0>
   27a50:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27a54:	add	x22, sp, #0xb8
   27a58:	add	x24, x24, #0x5d0
   27a5c:	add	x23, x23, #0x5b0
   27a60:	mov	x1, #0x0                   	// #0
   27a64:	movk	w25, #0x800, lsl #16
   27a68:	str	x26, [sp, #104]
   27a6c:	str	x2, [sp, #120]
   27a70:	bl	1e080 <__sanitizer_set_report_fd@@Base+0x47b8>
   27a74:	nop
   27a78:	mov	x2, #0x98                  	// #152
   27a7c:	mov	w1, #0x0                   	// #0
   27a80:	mov	x0, x22
   27a84:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   27a88:	ldr	w0, [x23, x19, lsl #2]
   27a8c:	mov	x1, x22
   27a90:	add	x19, x19, #0x1
   27a94:	mov	x2, #0x0                   	// #0
   27a98:	str	x24, [sp, #184]
   27a9c:	str	w25, [sp, #320]
   27aa0:	bl	1e0a8 <__sanitizer_set_report_fd@@Base+0x47e0>
   27aa4:	cmp	x19, #0x7
   27aa8:	b.ne	27a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2568>  // b.any
   27aac:	mov	x0, x28
   27ab0:	bl	276a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>
   27ab4:	tst	w0, #0xff
   27ab8:	b.ne	27b40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2630>  // b.any
   27abc:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27ac0:	mov	w19, #0x3                   	// #3
   27ac4:	ldr	x0, [x0, #3680]
   27ac8:	ldr	w0, [x0]
   27acc:	cbnz	w0, 27be8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26d8>
   27ad0:	add	x0, x27, #0xc8
   27ad4:	bl	2c530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7020>
   27ad8:	tst	w0, #0xff
   27adc:	b.eq	27c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2780>  // b.none
   27ae0:	mov	x0, #0x1                   	// #1
   27ae4:	str	x0, [x21, #104]
   27ae8:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27aec:	mov	x1, x20
   27af0:	str	xzr, [x0, #272]
   27af4:	mov	x0, x26
   27af8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27afc:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   27b00:	add	x2, x1, #0xcb8
   27b04:	ldp	x0, x1, [sp, #144]
   27b08:	str	x2, [sp, #136]
   27b0c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27b10:	mov	w0, w19
   27b14:	ldp	x21, x22, [sp, #16]
   27b18:	ldp	x23, x24, [sp, #32]
   27b1c:	ldp	x25, x26, [sp, #48]
   27b20:	ldp	x27, x28, [sp, #64]
   27b24:	ldr	x30, [sp, #80]
   27b28:	ldp	x19, x20, [sp], #336
   27b2c:	ret
   27b30:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27b34:	mov	x1, x0
   27b38:	str	x0, [x20]
   27b3c:	b	27958 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2448>
   27b40:	ldp	x2, x1, [x21]
   27b44:	add	x0, x28, #0x8
   27b48:	mov	w19, #0x0                   	// #0
   27b4c:	blr	x2
   27b50:	mov	x0, x28
   27b54:	bl	274a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f90>
   27b58:	b	27ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c0>
   27b5c:	ldr	x3, [sp, #160]
   27b60:	cmp	x3, #0x400
   27b64:	b.hi	27ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>  // b.pmore
   27b68:	ldr	x20, [x22, #4000]
   27b6c:	ldr	x0, [x20]
   27b70:	cbz	x0, 27c78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2768>
   27b74:	sub	x1, x0, #0x1
   27b78:	tst	x1, x0
   27b7c:	b.ne	27bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   27b80:	mov	x2, #0x1fff                	// #8191
   27b84:	add	x20, x0, x2
   27b88:	neg	x0, x0
   27b8c:	add	x1, x23, #0x700
   27b90:	and	x20, x20, x0
   27b94:	mov	w2, #0x0                   	// #0
   27b98:	mov	x0, x20
   27b9c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   27ba0:	ldr	x1, [sp, #144]
   27ba4:	mov	x24, x0
   27ba8:	ldr	x2, [sp, #160]
   27bac:	add	x28, sp, #0x80
   27bb0:	lsl	x2, x2, #3
   27bb4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27bb8:	ldp	x0, x1, [sp, #144]
   27bbc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27bc0:	stp	x24, x20, [sp, #144]
   27bc4:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27bc8:	ldr	x20, [x22, #4000]
   27bcc:	str	x28, [x0, #272]
   27bd0:	str	w19, [sp, #168]
   27bd4:	ldr	x0, [x20]
   27bd8:	cbnz	x0, 279cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x24bc>
   27bdc:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27be0:	str	x0, [x20]
   27be4:	b	279cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x24bc>
   27be8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27bec:	add	x0, x0, #0x4b8
   27bf0:	bl	22d00 <OnPrint@@Base+0x398>
   27bf4:	b	27ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c0>
   27bf8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27bfc:	add	x0, x0, #0x6e8
   27c00:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   27c04:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   27c08:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27c0c:	add	x0, x0, #0x490
   27c10:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   27c14:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   27c18:	ldr	x22, [x22, #4000]
   27c1c:	ldr	x0, [x22]
   27c20:	cbz	x0, 27c84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2774>
   27c24:	sub	x1, x0, #0x1
   27c28:	tst	x1, x0
   27c2c:	b.ne	27bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   27c30:	mov	x1, #0x1fff                	// #8191
   27c34:	add	x22, x0, x1
   27c38:	neg	x0, x0
   27c3c:	add	x1, x23, #0x700
   27c40:	and	x22, x22, x0
   27c44:	mov	w2, #0x0                   	// #0
   27c48:	mov	x0, x22
   27c4c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   27c50:	mov	x2, #0x0                   	// #0
   27c54:	mov	x23, x0
   27c58:	mov	x1, x26
   27c5c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   27c60:	mov	x1, x20
   27c64:	mov	x0, x26
   27c68:	mov	x20, x22
   27c6c:	mov	x26, x23
   27c70:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27c74:	b	27a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x250c>
   27c78:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27c7c:	str	x0, [x20]
   27c80:	b	27b74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2664>
   27c84:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27c88:	str	x0, [x22]
   27c8c:	b	27c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2714>
   27c90:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27c94:	add	x0, x0, #0x460
   27c98:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   27c9c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   27ca0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27ca4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   27ca8:	add	x2, x2, #0x6c8
   27cac:	add	x0, x0, #0x578
   27cb0:	mov	x4, #0x400                 	// #1024
   27cb4:	mov	w1, #0x1fd                 	// #509
   27cb8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27cbc:	mov	w0, #0x4                   	// #4
   27cc0:	bl	1db88 <__sanitizer_set_report_fd@@Base+0x42c0>
   27cc4:	nop
   27cc8:	stp	x19, x20, [sp, #-208]!
   27ccc:	mov	x4, #0x0                   	// #0
   27cd0:	mov	x20, x0
   27cd4:	mov	x19, x1
   27cd8:	mov	x3, #0x0                   	// #0
   27cdc:	mov	x2, #0x0                   	// #0
   27ce0:	mov	x1, #0x0                   	// #0
   27ce4:	mov	w0, #0x3                   	// #3
   27ce8:	stp	x21, x22, [sp, #16]
   27cec:	stp	x23, x24, [sp, #32]
   27cf0:	stp	x25, x26, [sp, #48]
   27cf4:	str	x30, [sp, #64]
   27cf8:	bl	1e070 <__sanitizer_set_report_fd@@Base+0x47a8>
   27cfc:	mov	x22, x0
   27d00:	cbz	w0, 27e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2954>
   27d04:	add	x24, sp, #0x58
   27d08:	add	x0, x24, #0x10
   27d0c:	bl	1dea8 <__sanitizer_set_report_fd@@Base+0x45e0>
   27d10:	stp	x20, x19, [sp, #88]
   27d14:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27d18:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   27d1c:	str	xzr, [sp, #192]
   27d20:	ldr	x20, [x20, #4000]
   27d24:	str	x0, [sp, #200]
   27d28:	ldr	x19, [x20]
   27d2c:	cbz	x19, 27e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2944>
   27d30:	mov	w2, #0x0                   	// #0
   27d34:	add	x25, x19, #0x200, lsl #12
   27d38:	mov	x0, x25
   27d3c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27d40:	add	x1, x1, #0x4d8
   27d44:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   27d48:	mov	x1, x19
   27d4c:	mov	x23, x0
   27d50:	bl	20780 <__sanitizer_set_report_fd@@Base+0x6eb8>
   27d54:	tst	w0, #0xff
   27d58:	b.eq	27f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a70>  // b.none
   27d5c:	add	x0, x24, #0x10
   27d60:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   27d64:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27d68:	adrp	x20, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27d6c:	add	x1, x1, #0x110
   27d70:	add	x20, x20, #0x5b0
   27d74:	mov	x19, #0x0                   	// #0
   27d78:	add	x0, x1, #0x10
   27d7c:	mov	x21, x1
   27d80:	mov	x26, x0
   27d84:	bl	1e1b0 <__sanitizer_set_report_fd@@Base+0x48e8>
   27d88:	ldr	w1, [x20, x19, lsl #2]
   27d8c:	mov	x0, x26
   27d90:	add	x19, x19, #0x1
   27d94:	bl	1e1d0 <__sanitizer_set_report_fd@@Base+0x4908>
   27d98:	cmp	x19, #0x7
   27d9c:	b.ne	27d88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2878>  // b.any
   27da0:	add	x21, x21, #0x90
   27da4:	mov	x1, x26
   27da8:	mov	x2, x21
   27dac:	mov	w0, #0x0                   	// #0
   27db0:	bl	1e198 <__sanitizer_set_report_fd@@Base+0x48d0>
   27db4:	sxtw	x3, w0
   27db8:	cbnz	w0, 27fa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a90>
   27dbc:	mov	x3, x24
   27dc0:	mov	w2, #0x700                 	// #1792
   27dc4:	mov	x6, #0x0                   	// #0
   27dc8:	mov	x5, #0x0                   	// #0
   27dcc:	mov	x4, #0x0                   	// #0
   27dd0:	add	x1, x23, x25
   27dd4:	movk	w2, #0x80, lsl #16
   27dd8:	adrp	x0, 27000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af0>
   27ddc:	add	x0, x0, #0x8c0
   27de0:	bl	1eef0 <__sanitizer_set_report_fd@@Base+0x5628>
   27de4:	mov	x2, #0x0                   	// #0
   27de8:	mov	x20, x0
   27dec:	mov	x1, x21
   27df0:	add	x19, sp, #0x54
   27df4:	mov	w0, #0x2                   	// #2
   27df8:	bl	1e198 <__sanitizer_set_report_fd@@Base+0x48d0>
   27dfc:	mov	x0, x20
   27e00:	mov	x1, x19
   27e04:	str	wzr, [sp, #84]
   27e08:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   27e0c:	tst	w0, #0xff
   27e10:	b.eq	27eb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29a0>  // b.none
   27e14:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27e18:	ldr	x0, [x0, #3680]
   27e1c:	ldr	w0, [x0]
   27e20:	cbnz	w0, 27f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4c>
   27e24:	add	x0, x24, #0x10
   27e28:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   27e2c:	mov	x1, x25
   27e30:	mov	x0, x23
   27e34:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   27e38:	cbz	w22, 27e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2970>
   27e3c:	ldp	x21, x22, [sp, #16]
   27e40:	ldp	x23, x24, [sp, #32]
   27e44:	ldp	x25, x26, [sp, #48]
   27e48:	ldr	x30, [sp, #64]
   27e4c:	ldp	x19, x20, [sp], #208
   27e50:	ret
   27e54:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   27e58:	mov	x19, x0
   27e5c:	str	x0, [x20]
   27e60:	b	27d30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2820>
   27e64:	mov	x4, #0x0                   	// #0
   27e68:	mov	x3, #0x0                   	// #0
   27e6c:	mov	x2, #0x0                   	// #0
   27e70:	mov	x1, #0x1                   	// #1
   27e74:	mov	w0, #0x4                   	// #4
   27e78:	bl	1e070 <__sanitizer_set_report_fd@@Base+0x47a8>
   27e7c:	b	27d04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27f4>
   27e80:	mov	x4, #0x0                   	// #0
   27e84:	mov	x3, #0x0                   	// #0
   27e88:	mov	x2, #0x0                   	// #0
   27e8c:	mov	x1, #0x0                   	// #0
   27e90:	mov	w0, #0x4                   	// #4
   27e94:	bl	1e070 <__sanitizer_set_report_fd@@Base+0x47a8>
   27e98:	ldp	x21, x22, [sp, #16]
   27e9c:	ldp	x23, x24, [sp, #32]
   27ea0:	ldp	x25, x26, [sp, #48]
   27ea4:	ldr	x30, [sp, #64]
   27ea8:	ldp	x19, x20, [sp], #208
   27eac:	ret
   27eb0:	adrp	x26, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27eb4:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27eb8:	ldr	x0, [x26, #3560]
   27ebc:	str	x20, [x0]
   27ec0:	bl	1e020 <__sanitizer_set_report_fd@@Base+0x4758>
   27ec4:	ldr	x5, [x21, #3544]
   27ec8:	mov	x6, x0
   27ecc:	mov	x1, x20
   27ed0:	mov	x4, #0x0                   	// #0
   27ed4:	mov	x3, #0x0                   	// #0
   27ed8:	mov	x2, #0x0                   	// #0
   27edc:	mov	w0, #0x6d61                	// #28001
   27ee0:	str	x6, [x5]
   27ee4:	movk	w0, #0x5961, lsl #16
   27ee8:	bl	1e070 <__sanitizer_set_report_fd@@Base+0x47a8>
   27eec:	add	x0, x24, #0x10
   27ef0:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   27ef4:	ldr	x0, [sp, #192]
   27ef8:	cbnz	x0, 27f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x29fc>
   27efc:	nop
   27f00:	bl	6ad0 <sched_yield@plt>
   27f04:	ldr	x0, [sp, #192]
   27f08:	cbz	x0, 27f00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29f0>
   27f0c:	mov	w2, #0x40000000            	// #1073741824
   27f10:	mov	x1, #0x0                   	// #0
   27f14:	mov	w0, w20
   27f18:	bl	1e008 <__sanitizer_set_report_fd@@Base+0x4740>
   27f1c:	mov	x1, x19
   27f20:	bl	1d970 <__sanitizer_set_report_fd@@Base+0x40a8>
   27f24:	tst	w0, #0xff
   27f28:	b.eq	27f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a38>  // b.none
   27f2c:	ldr	w1, [sp, #84]
   27f30:	cmp	w1, #0x4
   27f34:	b.eq	27f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x29fc>  // b.none
   27f38:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27f3c:	ldr	x0, [x0, #3680]
   27f40:	ldr	w0, [x0]
   27f44:	cbnz	w0, 27f70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a60>
   27f48:	ldr	x26, [x26, #3560]
   27f4c:	ldr	x21, [x21, #3544]
   27f50:	str	xzr, [x26]
   27f54:	str	xzr, [x21]
   27f58:	b	27e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x291c>
   27f5c:	ldr	w1, [sp, #84]
   27f60:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27f64:	add	x0, x0, #0x540
   27f68:	bl	22d00 <OnPrint@@Base+0x398>
   27f6c:	b	27e24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2914>
   27f70:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27f74:	add	x0, x0, #0x570
   27f78:	bl	22d00 <OnPrint@@Base+0x398>
   27f7c:	b	27f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a38>
   27f80:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27f84:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27f88:	add	x2, x2, #0x4f0
   27f8c:	add	x0, x0, #0x2c0
   27f90:	mov	x4, #0x0                   	// #0
   27f94:	mov	x3, #0x0                   	// #0
   27f98:	mov	w1, #0x152                 	// #338
   27f9c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27fa0:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27fa4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   27fa8:	add	x2, x2, #0x530
   27fac:	add	x0, x0, #0x2c0
   27fb0:	mov	x4, #0x0                   	// #0
   27fb4:	mov	w1, #0x1ac                 	// #428
   27fb8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27fbc:	nop
   27fc0:	ldr	x3, [x0, #24]
   27fc4:	cbz	x3, 27ff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae4>
   27fc8:	ldr	x4, [x0, #8]
   27fcc:	mov	x0, #0x0                   	// #0
   27fd0:	b	27fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2acc>
   27fd4:	cmp	x0, x3
   27fd8:	b.eq	27ff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae4>  // b.none
   27fdc:	ldr	x2, [x4, x0, lsl #3]
   27fe0:	add	x0, x0, #0x1
   27fe4:	cmp	x2, x1
   27fe8:	b.ne	27fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ac4>  // b.any
   27fec:	mov	w0, #0x1                   	// #1
   27ff0:	ret
   27ff4:	mov	w0, #0x0                   	// #0
   27ff8:	ret
   27ffc:	nop
   28000:	stp	x19, x20, [sp, #-64]!
   28004:	stp	x21, x22, [sp, #16]
   28008:	add	x21, x0, #0x8
   2800c:	ldr	x4, [x0, #16]
   28010:	str	x1, [sp, #56]
   28014:	ldr	x3, [x21, #16]
   28018:	str	x30, [sp, #32]
   2801c:	lsr	x4, x4, #3
   28020:	cmp	x3, x4
   28024:	b.hi	28110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c00>  // b.pmore
   28028:	mov	x19, x0
   2802c:	add	x20, x3, #0x1
   28030:	b.eq	2805c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b4c>  // b.none
   28034:	ldr	x22, [x0, #8]
   28038:	str	x20, [x21, #16]
   2803c:	add	x0, x22, x3, lsl #3
   28040:	add	x1, sp, #0x38
   28044:	mov	x2, #0x8                   	// #8
   28048:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2804c:	ldp	x21, x22, [sp, #16]
   28050:	ldr	x30, [sp, #32]
   28054:	ldp	x19, x20, [sp], #64
   28058:	ret
   2805c:	tst	x3, x20
   28060:	b.eq	2809c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b8c>  // b.none
   28064:	clz	x4, x20
   28068:	mov	w0, #0x3f                  	// #63
   2806c:	sub	w0, w0, w4
   28070:	mov	x2, #0x1                   	// #1
   28074:	add	w4, w0, #0x1
   28078:	lsl	x4, x2, x4
   2807c:	cmp	x4, x20
   28080:	b.ls	2815c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c4c>  // b.plast
   28084:	lsl	x0, x2, x0
   28088:	cmp	x20, x0
   2808c:	b.ls	28178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>  // b.plast
   28090:	cmp	x3, x4
   28094:	b.hi	28134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c24>  // b.pmore
   28098:	mov	x20, x4
   2809c:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   280a0:	lsl	x20, x20, #3
   280a4:	ldr	x22, [x22, #4000]
   280a8:	ldr	x0, [x22]
   280ac:	cbz	x0, 28128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c18>
   280b0:	sub	x1, x0, #0x1
   280b4:	tst	x0, x1
   280b8:	b.ne	2814c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c3c>  // b.any
   280bc:	add	x20, x20, x1
   280c0:	neg	x0, x0
   280c4:	and	x20, x20, x0
   280c8:	mov	w2, #0x0                   	// #0
   280cc:	mov	x0, x20
   280d0:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   280d4:	add	x1, x1, #0x700
   280d8:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   280dc:	ldr	x1, [x19, #8]
   280e0:	mov	x22, x0
   280e4:	ldr	x2, [x21, #16]
   280e8:	lsl	x2, x2, #3
   280ec:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   280f0:	ldr	x0, [x19, #8]
   280f4:	ldr	x1, [x21, #8]
   280f8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   280fc:	ldr	x3, [x21, #16]
   28100:	str	x22, [x19, #8]
   28104:	str	x20, [x21, #8]
   28108:	add	x20, x3, #0x1
   2810c:	b	28038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b28>
   28110:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28114:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28118:	add	x2, x2, #0x660
   2811c:	add	x0, x0, #0x578
   28120:	mov	w1, #0x1be                 	// #446
   28124:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28128:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2812c:	str	x0, [x22]
   28130:	b	280b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba0>
   28134:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28138:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2813c:	add	x2, x2, #0x6c8
   28140:	add	x0, x0, #0x578
   28144:	mov	w1, #0x1fd                 	// #509
   28148:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2814c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28150:	add	x0, x0, #0x6e8
   28154:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   28158:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2815c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28160:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28164:	mov	x3, x20
   28168:	add	x2, x2, #0x680
   2816c:	add	x0, x0, #0x578
   28170:	mov	w1, #0x17b                 	// #379
   28174:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28178:	mov	x4, x0
   2817c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28180:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28184:	mov	x3, x20
   28188:	add	x2, x2, #0x6a8
   2818c:	add	x0, x0, #0x578
   28190:	mov	w1, #0x17c                 	// #380
   28194:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28198:	stp	x19, x20, [sp, #-48]!
   2819c:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   281a0:	mov	x19, x0
   281a4:	ldr	x20, [x20, #4000]
   281a8:	stp	x21, x22, [sp, #16]
   281ac:	str	x30, [sp, #32]
   281b0:	str	x1, [x0]
   281b4:	stp	xzr, xzr, [x0, #24]
   281b8:	ldr	x0, [x20]
   281bc:	str	w2, [x19, #8]
   281c0:	str	xzr, [x19, #16]
   281c4:	cbz	x0, 28240 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d30>
   281c8:	sub	x1, x0, #0x1
   281cc:	tst	x1, x0
   281d0:	b.ne	2824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d3c>  // b.any
   281d4:	add	x20, x0, #0x1f
   281d8:	neg	x0, x0
   281dc:	and	x20, x20, x0
   281e0:	mov	w2, #0x0                   	// #0
   281e4:	mov	x0, x20
   281e8:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   281ec:	add	x1, x1, #0x700
   281f0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   281f4:	ldr	x1, [x19, #16]
   281f8:	mov	x22, x0
   281fc:	ldr	x2, [x19, #32]
   28200:	lsl	x2, x2, #5
   28204:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28208:	ldp	x0, x1, [x19, #16]
   2820c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   28210:	stp	x22, x20, [x19, #16]
   28214:	ldrsw	x2, [x19, #8]
   28218:	mov	w0, #0x1                   	// #1
   2821c:	strb	w0, [x19, #72]
   28220:	cmp	x2, #0x20
   28224:	b.hi	2825c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>  // b.pmore
   28228:	add	x0, x19, #0x28
   2822c:	mov	w1, #0x0                   	// #0
   28230:	ldp	x21, x22, [sp, #16]
   28234:	ldr	x30, [sp, #32]
   28238:	ldp	x19, x20, [sp], #48
   2823c:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28240:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   28244:	str	x0, [x20]
   28248:	b	281c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cb8>
   2824c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28250:	add	x0, x0, #0x6e8
   28254:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   28258:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2825c:	mov	x3, x2
   28260:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28264:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28268:	add	x0, x0, #0x608
   2826c:	add	x2, x2, #0x5d0
   28270:	mov	x4, #0x20                  	// #32
   28274:	mov	w1, #0x1c                  	// #28
   28278:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2827c:	nop
   28280:	stp	x19, x20, [sp, #-64]!
   28284:	mov	x20, x0
   28288:	str	x30, [sp, #48]
   2828c:	strb	wzr, [x0, #72]
   28290:	ldr	w0, [x0, #8]
   28294:	cmp	w0, #0x0
   28298:	b.le	2835c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e4c>
   2829c:	mov	x19, #0x0                   	// #0
   282a0:	stp	x21, x22, [sp, #16]
   282a4:	mov	x22, x1
   282a8:	mov	x21, x2
   282ac:	stp	x23, x24, [sp, #32]
   282b0:	mov	x23, x3
   282b4:	b	282c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2db4>
   282b8:	ldr	w0, [x20, #8]
   282bc:	cmp	w0, w19
   282c0:	b.le	28354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>
   282c4:	ldr	x1, [x20]
   282c8:	mov	w24, w19
   282cc:	mov	x0, x21
   282d0:	ldr	x1, [x1, x19, lsl #3]
   282d4:	add	x19, x19, #0x1
   282d8:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   282dc:	cbnz	w0, 282b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2da8>
   282e0:	add	x24, x20, w24, sxtw
   282e4:	ldrb	w0, [x24, #40]
   282e8:	cbz	w0, 28354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>
   282ec:	ldr	x0, [x20, #32]
   282f0:	cbz	x0, 28354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>
   282f4:	mov	x19, #0x0                   	// #0
   282f8:	b	28308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2df8>
   282fc:	ldr	x0, [x20, #32]
   28300:	cmp	x19, x0
   28304:	b.cs	28354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>  // b.hs, b.nlast
   28308:	ldr	x0, [x20, #16]
   2830c:	lsl	x4, x19, #5
   28310:	mov	x1, x21
   28314:	add	x19, x19, #0x1
   28318:	add	x24, x0, x4
   2831c:	ldr	x0, [x0, x4]
   28320:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   28324:	cbnz	w0, 282fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dec>
   28328:	ldr	x0, [x24, #8]
   2832c:	mov	x1, x22
   28330:	bl	15bf0 <__sancov_default_options@@Base+0x3120>
   28334:	ands	w0, w0, #0xff
   28338:	b.eq	282fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dec>  // b.none
   2833c:	ldp	x21, x22, [sp, #16]
   28340:	str	x24, [x23]
   28344:	ldp	x23, x24, [sp, #32]
   28348:	ldr	x30, [sp, #48]
   2834c:	ldp	x19, x20, [sp], #64
   28350:	ret
   28354:	ldp	x21, x22, [sp, #16]
   28358:	ldp	x23, x24, [sp, #32]
   2835c:	mov	w0, #0x0                   	// #0
   28360:	ldr	x30, [sp, #48]
   28364:	ldp	x19, x20, [sp], #64
   28368:	ret
   2836c:	nop
   28370:	stp	x19, x20, [sp, #-112]!
   28374:	mov	x20, x0
   28378:	ldrb	w0, [x0, #72]
   2837c:	str	x30, [sp, #72]
   28380:	cbz	w0, 2864c <__sanitizer_get_module_and_offset_for_pc@@Base+0x313c>
   28384:	mov	x19, x1
   28388:	cbz	x1, 2853c <__sanitizer_get_module_and_offset_for_pc@@Base+0x302c>
   2838c:	stp	x21, x22, [sp, #16]
   28390:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28394:	add	x21, sp, #0x50
   28398:	ldr	x22, [x22, #4000]
   2839c:	stp	x23, x24, [sp, #32]
   283a0:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
   283a4:	add	x23, x23, #0x700
   283a8:	stp	x25, x26, [sp, #48]
   283ac:	str	x27, [sp, #64]
   283b0:	ldrb	w0, [x19]
   283b4:	cmp	w0, #0x20
   283b8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   283bc:	b.ne	283d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ec0>  // b.any
   283c0:	ldrb	w0, [x19, #1]!
   283c4:	cmp	w0, #0x20
   283c8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   283cc:	b.eq	283c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eb0>  // b.none
   283d0:	mov	x0, x19
   283d4:	mov	w1, #0xa                   	// #10
   283d8:	bl	1bde0 <__sanitizer_set_report_fd@@Base+0x2518>
   283dc:	mov	x26, x0
   283e0:	cbz	x0, 28564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3054>
   283e4:	cmp	x19, x26
   283e8:	b.eq	283f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ee8>  // b.none
   283ec:	ldrb	w6, [x19]
   283f0:	cmp	w6, #0x23
   283f4:	b.ne	28408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ef8>  // b.any
   283f8:	ldrb	w0, [x26]
   283fc:	cbz	w0, 2852c <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>
   28400:	add	x19, x26, #0x1
   28404:	b	283b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   28408:	mov	x24, x26
   2840c:	nop
   28410:	ldurb	w1, [x24, #-1]
   28414:	cmp	w1, #0x20
   28418:	and	w1, w1, #0xfffffffb
   2841c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   28420:	b.ne	28430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.any
   28424:	sub	x24, x24, #0x1
   28428:	cmp	x19, x24
   2842c:	b.ne	28410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f00>  // b.any
   28430:	ldr	w7, [x20, #8]
   28434:	cmp	w7, #0x0
   28438:	b.le	28644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3134>
   2843c:	ldr	x8, [x20]
   28440:	mov	x5, #0x0                   	// #0
   28444:	nop
   28448:	ldr	x2, [x8, x5, lsl #3]
   2844c:	mov	w0, w5
   28450:	mov	w25, w5
   28454:	ldrb	w1, [x2]
   28458:	cmp	w1, w6
   2845c:	b.ne	28558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3048>  // b.any
   28460:	mov	x3, x19
   28464:	nop
   28468:	ldrb	w4, [x3, #1]!
   2846c:	ldrb	w1, [x2, #1]!
   28470:	cmp	w4, w1
   28474:	b.eq	28468 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f58>  // b.none
   28478:	cbz	w1, 28548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3038>
   2847c:	add	x5, x5, #0x1
   28480:	add	w25, w0, #0x1
   28484:	cmp	w7, w5
   28488:	b.gt	28448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f38>
   2848c:	cmp	w7, w25
   28490:	b.eq	286dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x31cc>  // b.none
   28494:	mov	x27, x20
   28498:	mov	x2, #0x20                  	// #32
   2849c:	mov	w1, #0x0                   	// #0
   284a0:	mov	x0, x21
   284a4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   284a8:	sxtw	x25, w25
   284ac:	ldr	x3, [x27], #16
   284b0:	sub	x24, x24, x19
   284b4:	mov	x2, #0x0                   	// #0
   284b8:	mov	x1, #0x0                   	// #0
   284bc:	add	x0, x24, #0x1
   284c0:	ldr	x3, [x3, x25, lsl #3]
   284c4:	str	x3, [sp, #80]
   284c8:	bl	12f40 <__sancov_default_options@@Base+0x470>
   284cc:	str	x0, [sp, #88]
   284d0:	mov	x1, x19
   284d4:	mov	x2, x24
   284d8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   284dc:	ldr	x0, [sp, #88]
   284e0:	strb	wzr, [x0, x24]
   284e4:	ldr	x4, [x20, #24]
   284e8:	ldr	x0, [x27, #16]
   284ec:	lsr	x4, x4, #5
   284f0:	cmp	x0, x4
   284f4:	b.hi	2861c <__sanitizer_get_module_and_offset_for_pc@@Base+0x310c>  // b.pmore
   284f8:	add	x3, x0, #0x1
   284fc:	b.eq	28574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3064>  // b.none
   28500:	ldr	x24, [x20, #16]
   28504:	add	x25, x20, x25
   28508:	str	x3, [x27, #16]
   2850c:	add	x0, x24, x0, lsl #5
   28510:	mov	x1, x21
   28514:	mov	x2, #0x20                  	// #32
   28518:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2851c:	mov	w0, #0x1                   	// #1
   28520:	strb	w0, [x25, #40]
   28524:	ldrb	w0, [x26]
   28528:	cbnz	w0, 28400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ef0>
   2852c:	ldp	x21, x22, [sp, #16]
   28530:	ldp	x23, x24, [sp, #32]
   28534:	ldp	x25, x26, [sp, #48]
   28538:	ldr	x27, [sp, #64]
   2853c:	ldr	x30, [sp, #72]
   28540:	ldp	x19, x20, [sp], #112
   28544:	ret
   28548:	cmp	w4, #0x3a
   2854c:	b.ne	2847c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f6c>  // b.any
   28550:	add	x19, x3, #0x1
   28554:	b	2848c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f7c>
   28558:	mov	w4, w6
   2855c:	mov	x3, x19
   28560:	b	28478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f68>
   28564:	mov	x0, x19
   28568:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2856c:	add	x26, x19, x0
   28570:	b	283e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ed4>
   28574:	tst	x0, x3
   28578:	b.eq	285b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a4>  // b.none
   2857c:	clz	x2, x3
   28580:	mov	w1, #0x3f                  	// #63
   28584:	sub	w2, w1, w2
   28588:	mov	x1, #0x1                   	// #1
   2858c:	add	w4, w2, #0x1
   28590:	lsl	x4, x1, x4
   28594:	cmp	x3, x4
   28598:	b.cs	286a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3198>  // b.hs, b.nlast
   2859c:	lsl	x1, x1, x2
   285a0:	cmp	x3, x1
   285a4:	b.ls	286c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31b0>  // b.plast
   285a8:	cmp	x0, x4
   285ac:	b.hi	2867c <__sanitizer_get_module_and_offset_for_pc@@Base+0x316c>  // b.pmore
   285b0:	mov	x3, x4
   285b4:	ldr	x0, [x22]
   285b8:	lsl	x19, x3, #5
   285bc:	cbz	x0, 28638 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3128>
   285c0:	sub	x1, x0, #0x1
   285c4:	tst	x1, x0
   285c8:	b.ne	28698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>  // b.any
   285cc:	add	x19, x19, x1
   285d0:	neg	x0, x0
   285d4:	and	x19, x19, x0
   285d8:	mov	x1, x23
   285dc:	mov	w2, #0x0                   	// #0
   285e0:	mov	x0, x19
   285e4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   285e8:	mov	x24, x0
   285ec:	ldr	x1, [x20, #16]
   285f0:	ldr	x2, [x27, #16]
   285f4:	lsl	x2, x2, #5
   285f8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   285fc:	ldr	x1, [x27, #8]
   28600:	ldr	x0, [x20, #16]
   28604:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   28608:	ldr	x0, [x27, #16]
   2860c:	str	x24, [x20, #16]
   28610:	str	x19, [x27, #8]
   28614:	add	x3, x0, #0x1
   28618:	b	28504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ff4>
   2861c:	mov	x3, x0
   28620:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28624:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28628:	add	x2, x2, #0x660
   2862c:	add	x0, x0, #0x578
   28630:	mov	w1, #0x1be                 	// #446
   28634:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28638:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2863c:	str	x0, [x22]
   28640:	b	285c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b0>
   28644:	mov	w25, #0x0                   	// #0
   28648:	b	2848c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f7c>
   2864c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28650:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28654:	add	x2, x2, #0x650
   28658:	add	x0, x0, #0x608
   2865c:	mov	x4, #0x0                   	// #0
   28660:	mov	x3, #0x0                   	// #0
   28664:	mov	w1, #0x6a                  	// #106
   28668:	stp	x21, x22, [sp, #16]
   2866c:	stp	x23, x24, [sp, #32]
   28670:	stp	x25, x26, [sp, #48]
   28674:	str	x27, [sp, #64]
   28678:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2867c:	mov	x3, x0
   28680:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28684:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28688:	add	x2, x2, #0x6c8
   2868c:	add	x0, x0, #0x578
   28690:	mov	w1, #0x1fd                 	// #509
   28694:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28698:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2869c:	add	x0, x0, #0x6e8
   286a0:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   286a4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   286a8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   286ac:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   286b0:	add	x2, x2, #0x680
   286b4:	add	x0, x0, #0x578
   286b8:	mov	w1, #0x17b                 	// #379
   286bc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   286c0:	mov	x4, x1
   286c4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   286c8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   286cc:	add	x2, x2, #0x6a8
   286d0:	add	x0, x0, #0x578
   286d4:	mov	w1, #0x17c                 	// #380
   286d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   286dc:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   286e0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   286e4:	add	x0, x0, #0x668
   286e8:	ldr	x1, [x1, #4008]
   286ec:	ldr	x1, [x1]
   286f0:	bl	22c78 <OnPrint@@Base+0x310>
   286f4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   286f8:	stp	x19, x20, [sp, #-112]!
   286fc:	mov	x19, x1
   28700:	str	x30, [sp, #64]
   28704:	ldrb	w1, [x1]
   28708:	cbnz	w1, 28718 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3208>
   2870c:	ldr	x30, [sp, #64]
   28710:	ldp	x19, x20, [sp], #112
   28714:	ret
   28718:	stp	x21, x22, [sp, #16]
   2871c:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28720:	mov	x21, x0
   28724:	ldr	x20, [x22, #4000]
   28728:	stp	x23, x24, [sp, #32]
   2872c:	ldr	x2, [x20]
   28730:	cbz	x2, 28828 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3318>
   28734:	sub	x0, x2, #0x1
   28738:	tst	x0, x2
   2873c:	b.ne	28940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3430>  // b.any
   28740:	add	x24, x2, #0xfff
   28744:	neg	x2, x2
   28748:	and	x24, x24, x2
   2874c:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28750:	mov	w2, #0x0                   	// #0
   28754:	add	x1, x23, #0x700
   28758:	mov	x0, x24
   2875c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   28760:	mov	x2, #0x0                   	// #0
   28764:	mov	x1, #0x0                   	// #0
   28768:	mov	x20, x0
   2876c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28770:	mov	x1, #0x0                   	// #0
   28774:	mov	x0, #0x0                   	// #0
   28778:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2877c:	cmp	x24, #0xfff
   28780:	b.ls	288dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x33cc>  // b.plast
   28784:	mov	x2, #0x1000                	// #4096
   28788:	mov	w1, #0x0                   	// #0
   2878c:	mov	x0, x20
   28790:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28794:	strb	wzr, [x20]
   28798:	mov	x0, x19
   2879c:	bl	1dbe8 <__sanitizer_set_report_fd@@Base+0x4320>
   287a0:	tst	w0, #0xff
   287a4:	b.eq	28838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3328>  // b.none
   287a8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   287ac:	ldr	x0, [x0, #3680]
   287b0:	ldr	w0, [x0]
   287b4:	cbnz	w0, 28808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f8>
   287b8:	add	x3, sp, #0x68
   287bc:	add	x2, sp, #0x60
   287c0:	add	x1, sp, #0x58
   287c4:	mov	x0, x19
   287c8:	mov	x5, #0x0                   	// #0
   287cc:	mov	x4, #0x4000000             	// #67108864
   287d0:	bl	18fd8 <__sanitizer_cov_dump@@Base+0x2158>
   287d4:	tst	w0, #0xff
   287d8:	b.eq	28a18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3508>  // b.none
   287dc:	ldr	x1, [sp, #88]
   287e0:	mov	x0, x21
   287e4:	bl	28370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e60>
   287e8:	mov	x1, x24
   287ec:	mov	x0, x20
   287f0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   287f4:	ldp	x21, x22, [sp, #16]
   287f8:	ldp	x23, x24, [sp, #32]
   287fc:	ldr	x30, [sp, #64]
   28800:	ldp	x19, x20, [sp], #112
   28804:	ret
   28808:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2880c:	mov	x2, x19
   28810:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28814:	add	x0, x0, #0x690
   28818:	ldr	x1, [x1, #4008]
   2881c:	ldr	x1, [x1]
   28820:	bl	22c78 <OnPrint@@Base+0x310>
   28824:	b	287b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a8>
   28828:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2882c:	mov	x2, x0
   28830:	str	x0, [x20]
   28834:	b	28734 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3224>
   28838:	mov	x0, x19
   2883c:	bl	20d38 <__sanitizer_set_report_fd@@Base+0x7470>
   28840:	tst	w0, #0xff
   28844:	b.ne	287a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3298>  // b.any
   28848:	stp	x25, x26, [sp, #48]
   2884c:	ldr	x25, [x22, #4000]
   28850:	ldr	x0, [x25]
   28854:	cbz	x0, 28960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>
   28858:	sub	x1, x0, #0x1
   2885c:	tst	x1, x0
   28860:	b.ne	28944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3434>  // b.any
   28864:	add	x26, x0, #0xfff
   28868:	neg	x0, x0
   2886c:	and	x26, x26, x0
   28870:	add	x1, x23, #0x700
   28874:	mov	w2, #0x0                   	// #0
   28878:	mov	x0, x26
   2887c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   28880:	mov	x25, x0
   28884:	mov	x2, #0x0                   	// #0
   28888:	mov	x1, #0x0                   	// #0
   2888c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28890:	mov	x1, #0x0                   	// #0
   28894:	mov	x0, #0x0                   	// #0
   28898:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2889c:	cmp	x26, #0xfff
   288a0:	b.ls	289b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a0>  // b.plast
   288a4:	mov	w1, #0x0                   	// #0
   288a8:	mov	x0, x25
   288ac:	mov	x2, #0x1000                	// #4096
   288b0:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   288b4:	strb	wzr, [x25]
   288b8:	mov	x0, x25
   288bc:	mov	x1, #0x1000                	// #4096
   288c0:	bl	15ec8 <__sancov_default_options@@Base+0x33f8>
   288c4:	cbnz	x0, 2896c <__sanitizer_get_module_and_offset_for_pc@@Base+0x345c>
   288c8:	mov	x1, x26
   288cc:	mov	x0, x25
   288d0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   288d4:	ldp	x25, x26, [sp, #48]
   288d8:	b	287a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3298>
   288dc:	stp	x25, x26, [sp, #48]
   288e0:	ldr	x25, [x22, #4000]
   288e4:	ldr	x0, [x25]
   288e8:	cbz	x0, 28954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3444>
   288ec:	sub	x1, x0, #0x1
   288f0:	tst	x1, x0
   288f4:	b.ne	28944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3434>  // b.any
   288f8:	add	x25, x0, #0xfff
   288fc:	neg	x0, x0
   28900:	and	x25, x25, x0
   28904:	add	x1, x23, #0x700
   28908:	mov	x0, x25
   2890c:	mov	w2, #0x0                   	// #0
   28910:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   28914:	mov	x26, x0
   28918:	mov	x2, #0x0                   	// #0
   2891c:	mov	x1, x20
   28920:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28924:	mov	x1, x24
   28928:	mov	x0, x20
   2892c:	mov	x24, x25
   28930:	mov	x20, x26
   28934:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   28938:	ldp	x25, x26, [sp, #48]
   2893c:	b	28784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3274>
   28940:	stp	x25, x26, [sp, #48]
   28944:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28948:	add	x0, x0, #0x6e8
   2894c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   28950:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   28954:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   28958:	str	x0, [x25]
   2895c:	b	288ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x33dc>
   28960:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   28964:	str	x0, [x25]
   28968:	b	28858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3348>
   2896c:	mov	x0, x25
   28970:	bl	15860 <__sancov_default_options@@Base+0x2d90>
   28974:	sub	x2, x0, x25
   28978:	mov	x22, #0xfff                 	// #4095
   2897c:	cmp	x2, x22
   28980:	mov	x1, x25
   28984:	csel	x2, x2, x22, ls  // ls = plast
   28988:	mov	x0, x20
   2898c:	bl	1c5a0 <__sanitizer_set_report_fd@@Base+0x2cd8>
   28990:	mov	x0, x20
   28994:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   28998:	mov	x1, x19
   2899c:	sub	x2, x22, x0
   289a0:	mov	x19, x20
   289a4:	mov	x0, x20
   289a8:	bl	1c5a0 <__sanitizer_set_report_fd@@Base+0x2cd8>
   289ac:	b	288c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33b8>
   289b0:	ldr	x22, [x22, #4000]
   289b4:	ldr	x0, [x22]
   289b8:	cbz	x0, 28a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x34fc>
   289bc:	sub	x1, x0, #0x1
   289c0:	tst	x1, x0
   289c4:	b.ne	28944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3434>  // b.any
   289c8:	add	x22, x0, #0xfff
   289cc:	neg	x0, x0
   289d0:	and	x22, x22, x0
   289d4:	add	x1, x23, #0x700
   289d8:	mov	x0, x22
   289dc:	mov	w2, #0x0                   	// #0
   289e0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   289e4:	mov	x23, x0
   289e8:	mov	x2, #0x0                   	// #0
   289ec:	mov	x1, x25
   289f0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   289f4:	mov	x1, x26
   289f8:	mov	x0, x25
   289fc:	mov	x26, x22
   28a00:	mov	x25, x23
   28a04:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   28a08:	b	288a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3394>
   28a0c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   28a10:	str	x0, [x22]
   28a14:	b	289bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x34ac>
   28a18:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28a1c:	mov	x2, x19
   28a20:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28a24:	add	x0, x0, #0x6b8
   28a28:	ldr	x1, [x1, #4008]
   28a2c:	stp	x25, x26, [sp, #48]
   28a30:	ldr	x1, [x1]
   28a34:	bl	22c78 <OnPrint@@Base+0x310>
   28a38:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   28a3c:	nop
   28a40:	ldr	x0, [x0, #32]
   28a44:	ret
   28a48:	stp	x19, x20, [sp, #-48]!
   28a4c:	mov	x20, x0
   28a50:	ldr	w0, [x0, #8]
   28a54:	str	x30, [sp, #32]
   28a58:	cmp	w0, #0x0
   28a5c:	b.le	28ab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a4>
   28a60:	mov	x19, #0x0                   	// #0
   28a64:	stp	x21, x22, [sp, #16]
   28a68:	mov	x21, x1
   28a6c:	b	28a7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x356c>
   28a70:	ldr	w0, [x20, #8]
   28a74:	cmp	w0, w19
   28a78:	b.le	28ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   28a7c:	ldr	x2, [x20]
   28a80:	mov	w22, w19
   28a84:	mov	x0, x21
   28a88:	ldr	x1, [x2, x19, lsl #3]
   28a8c:	add	x19, x19, #0x1
   28a90:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   28a94:	cbnz	w0, 28a70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3560>
   28a98:	add	x20, x20, w22, sxtw
   28a9c:	ldp	x21, x22, [sp, #16]
   28aa0:	ldrb	w0, [x20, #40]
   28aa4:	ldr	x30, [sp, #32]
   28aa8:	ldp	x19, x20, [sp], #48
   28aac:	ret
   28ab0:	ldp	x21, x22, [sp, #16]
   28ab4:	mov	w0, #0x0                   	// #0
   28ab8:	ldr	x30, [sp, #32]
   28abc:	ldp	x19, x20, [sp], #48
   28ac0:	ret
   28ac4:	nop
   28ac8:	ldr	x4, [x0, #32]
   28acc:	cmp	x1, x4
   28ad0:	b.cs	28ae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35d0>  // b.hs, b.nlast
   28ad4:	ldr	x0, [x0, #16]
   28ad8:	add	x0, x0, x1, lsl #5
   28adc:	ret
   28ae0:	str	x30, [sp, #-16]!
   28ae4:	mov	x3, x1
   28ae8:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28aec:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28af0:	add	x2, x2, #0x6e8
   28af4:	add	x0, x0, #0x608
   28af8:	mov	w1, #0x9e                  	// #158
   28afc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28b00:	stp	x19, x20, [sp, #-96]!
   28b04:	stp	x21, x22, [sp, #16]
   28b08:	mov	x21, x1
   28b0c:	ldr	x1, [x0, #32]
   28b10:	str	x30, [sp, #64]
   28b14:	cbz	x1, 28ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>
   28b18:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   28b1c:	mov	x20, x0
   28b20:	mov	x19, #0x0                   	// #0
   28b24:	stp	x23, x24, [sp, #32]
   28b28:	adrp	x23, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28b2c:	ldr	x22, [x22, #4000]
   28b30:	add	x23, x23, #0x700
   28b34:	stp	x25, x26, [sp, #48]
   28b38:	add	x26, sp, #0x58
   28b3c:	b	28b4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x363c>
   28b40:	add	x19, x19, #0x1
   28b44:	cmp	x19, x1
   28b48:	b.cs	28ba0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3690>  // b.hs, b.nlast
   28b4c:	ldr	x2, [x20, #16]
   28b50:	add	x2, x2, x19, lsl #5
   28b54:	ldr	w0, [x2, #16]
   28b58:	cbz	w0, 28b40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   28b5c:	ldp	x4, x3, [x21, #8]
   28b60:	str	x2, [sp, #88]
   28b64:	lsr	x4, x4, #3
   28b68:	cmp	x3, x4
   28b6c:	b.hi	28c64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3754>  // b.pmore
   28b70:	add	x24, x3, #0x1
   28b74:	b.eq	28bb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36a8>  // b.none
   28b78:	ldr	x25, [x21]
   28b7c:	str	x24, [x21, #16]
   28b80:	mov	x1, x26
   28b84:	add	x0, x25, x3, lsl #3
   28b88:	mov	x2, #0x8                   	// #8
   28b8c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28b90:	ldr	x1, [x20, #32]
   28b94:	add	x19, x19, #0x1
   28b98:	cmp	x19, x1
   28b9c:	b.cc	28b4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x363c>  // b.lo, b.ul, b.last
   28ba0:	ldp	x23, x24, [sp, #32]
   28ba4:	ldp	x25, x26, [sp, #48]
   28ba8:	ldp	x21, x22, [sp, #16]
   28bac:	ldr	x30, [sp, #64]
   28bb0:	ldp	x19, x20, [sp], #96
   28bb4:	ret
   28bb8:	tst	x3, x24
   28bbc:	b.eq	28bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>  // b.none
   28bc0:	clz	x2, x24
   28bc4:	mov	w0, #0x3f                  	// #63
   28bc8:	sub	w0, w0, w2
   28bcc:	mov	x2, #0x1                   	// #1
   28bd0:	add	w4, w0, #0x1
   28bd4:	lsl	x4, x2, x4
   28bd8:	cmp	x4, x24
   28bdc:	b.ls	28c8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x377c>  // b.plast
   28be0:	lsl	x0, x2, x0
   28be4:	cmp	x0, x24
   28be8:	b.cs	28cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37b0>  // b.hs, b.nlast
   28bec:	cmp	x3, x4
   28bf0:	b.hi	28ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3798>  // b.pmore
   28bf4:	mov	x24, x4
   28bf8:	ldr	x0, [x22]
   28bfc:	lsl	x24, x24, #3
   28c00:	cbz	x0, 28c58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3748>
   28c04:	sub	x1, x0, #0x1
   28c08:	tst	x1, x0
   28c0c:	b.ne	28c7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>  // b.any
   28c10:	add	x24, x24, x1
   28c14:	neg	x0, x0
   28c18:	and	x24, x24, x0
   28c1c:	mov	x1, x23
   28c20:	mov	x0, x24
   28c24:	mov	w2, #0x0                   	// #0
   28c28:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   28c2c:	mov	x25, x0
   28c30:	ldr	x1, [x21]
   28c34:	ldr	x2, [x21, #16]
   28c38:	lsl	x2, x2, #3
   28c3c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28c40:	ldp	x0, x1, [x21]
   28c44:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   28c48:	stp	x25, x24, [x21]
   28c4c:	ldr	x3, [x21, #16]
   28c50:	add	x24, x3, #0x1
   28c54:	b	28b7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x366c>
   28c58:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   28c5c:	str	x0, [x22]
   28c60:	b	28c04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f4>
   28c64:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28c68:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28c6c:	add	x2, x2, #0x660
   28c70:	add	x0, x0, #0x578
   28c74:	mov	w1, #0x1be                 	// #446
   28c78:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28c7c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28c80:	add	x0, x0, #0x6e8
   28c84:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   28c88:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   28c8c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28c90:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28c94:	mov	x3, x24
   28c98:	add	x2, x2, #0x680
   28c9c:	add	x0, x0, #0x578
   28ca0:	mov	w1, #0x17b                 	// #379
   28ca4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28ca8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28cac:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28cb0:	add	x2, x2, #0x6c8
   28cb4:	add	x0, x0, #0x578
   28cb8:	mov	w1, #0x1fd                 	// #509
   28cbc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28cc0:	mov	x4, x0
   28cc4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28cc8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   28ccc:	mov	x3, x24
   28cd0:	add	x2, x2, #0x6a8
   28cd4:	add	x0, x0, #0x578
   28cd8:	mov	w1, #0x17c                 	// #380
   28cdc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28ce0:	stp	x19, x30, [sp, #-16]!
   28ce4:	mov	x19, x0
   28ce8:	mov	x2, #0x40                  	// #64
   28cec:	mov	w1, #0x0                   	// #0
   28cf0:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28cf4:	mov	x0, #0xffffffffffffffff    	// #-1
   28cf8:	str	x0, [x19, #40]
   28cfc:	ldp	x19, x30, [sp], #16
   28d00:	ret
   28d04:	nop
   28d08:	stp	x19, x30, [sp, #-16]!
   28d0c:	mov	x19, x0
   28d10:	mov	x1, #0x0                   	// #0
   28d14:	ldr	x0, [x0, #8]
   28d18:	bl	13340 <__sancov_default_options@@Base+0x870>
   28d1c:	ldr	x0, [x19, #32]
   28d20:	mov	x1, #0x0                   	// #0
   28d24:	bl	13340 <__sancov_default_options@@Base+0x870>
   28d28:	ldr	x0, [x19, #48]
   28d2c:	mov	x1, #0x0                   	// #0
   28d30:	bl	13340 <__sancov_default_options@@Base+0x870>
   28d34:	mov	x0, x19
   28d38:	mov	x2, #0x40                  	// #64
   28d3c:	mov	w1, #0x0                   	// #0
   28d40:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28d44:	mov	x0, #0xffffffffffffffff    	// #-1
   28d48:	str	x0, [x19, #40]
   28d4c:	ldp	x19, x30, [sp], #16
   28d50:	ret
   28d54:	nop
   28d58:	stp	x19, x20, [sp, #-32]!
   28d5c:	mov	x19, x0
   28d60:	mov	w20, w3
   28d64:	mov	x0, x1
   28d68:	stp	x21, x30, [sp, #16]
   28d6c:	mov	x21, x2
   28d70:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   28d74:	stp	x0, x21, [x19, #8]
   28d78:	str	w20, [x19, #24]
   28d7c:	ldp	x21, x30, [sp, #16]
   28d80:	ldp	x19, x20, [sp], #32
   28d84:	ret
   28d88:	stp	x19, x30, [sp, #-16]!
   28d8c:	mov	x19, x0
   28d90:	mov	x2, #0x40                  	// #64
   28d94:	mov	w1, #0x0                   	// #0
   28d98:	str	xzr, [x19], #8
   28d9c:	mov	x0, x19
   28da0:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28da4:	mov	x0, #0xffffffffffffffff    	// #-1
   28da8:	str	x0, [x19, #40]
   28dac:	ldp	x19, x30, [sp], #16
   28db0:	ret
   28db4:	nop
   28db8:	stp	x19, x20, [sp, #-32]!
   28dbc:	mov	x2, #0x0                   	// #0
   28dc0:	mov	x1, #0x0                   	// #0
   28dc4:	stp	x21, x30, [sp, #16]
   28dc8:	mov	x21, x0
   28dcc:	mov	x0, #0x48                  	// #72
   28dd0:	bl	12f40 <__sancov_default_options@@Base+0x470>
   28dd4:	mov	x20, x0
   28dd8:	mov	x19, x0
   28ddc:	mov	x2, #0x40                  	// #64
   28de0:	mov	w1, #0x0                   	// #0
   28de4:	str	xzr, [x20], #8
   28de8:	mov	x0, x20
   28dec:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28df0:	mov	x0, #0xffffffffffffffff    	// #-1
   28df4:	str	x0, [x20, #40]
   28df8:	str	x21, [x19, #8]
   28dfc:	mov	x0, x19
   28e00:	ldp	x21, x30, [sp, #16]
   28e04:	ldp	x19, x20, [sp], #32
   28e08:	ret
   28e0c:	nop
   28e10:	stp	x19, x20, [sp, #-32]!
   28e14:	mov	x19, x0
   28e18:	add	x20, x0, #0x8
   28e1c:	ldr	x0, [x0, #16]
   28e20:	mov	x1, #0x0                   	// #0
   28e24:	str	x30, [sp, #16]
   28e28:	bl	13340 <__sancov_default_options@@Base+0x870>
   28e2c:	ldr	x0, [x19, #40]
   28e30:	mov	x1, #0x0                   	// #0
   28e34:	bl	13340 <__sancov_default_options@@Base+0x870>
   28e38:	ldr	x0, [x19, #56]
   28e3c:	mov	x1, #0x0                   	// #0
   28e40:	bl	13340 <__sancov_default_options@@Base+0x870>
   28e44:	mov	w1, #0x0                   	// #0
   28e48:	mov	x0, x20
   28e4c:	mov	x2, #0x40                  	// #64
   28e50:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28e54:	ldr	x0, [x19]
   28e58:	mov	x1, #0xffffffffffffffff    	// #-1
   28e5c:	str	x1, [x19, #48]
   28e60:	cbz	x0, 28e68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3958>
   28e64:	bl	28e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   28e68:	mov	x0, x19
   28e6c:	mov	x1, #0x0                   	// #0
   28e70:	ldr	x30, [sp, #16]
   28e74:	ldp	x19, x20, [sp], #32
   28e78:	b	13340 <__sancov_default_options@@Base+0x870>
   28e7c:	nop
   28e80:	mov	x2, #0x40                  	// #64
   28e84:	mov	w1, #0x0                   	// #0
   28e88:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28e8c:	nop
   28e90:	stp	x19, x30, [sp, #-16]!
   28e94:	mov	x19, x0
   28e98:	mov	x1, #0x0                   	// #0
   28e9c:	ldr	x0, [x0]
   28ea0:	bl	13340 <__sancov_default_options@@Base+0x870>
   28ea4:	ldr	x0, [x19, #24]
   28ea8:	mov	x1, #0x0                   	// #0
   28eac:	bl	13340 <__sancov_default_options@@Base+0x870>
   28eb0:	ldr	x0, [x19, #40]
   28eb4:	mov	x1, #0x0                   	// #0
   28eb8:	bl	13340 <__sancov_default_options@@Base+0x870>
   28ebc:	mov	x0, x19
   28ec0:	mov	x2, #0x40                  	// #64
   28ec4:	ldp	x19, x30, [sp], #16
   28ec8:	mov	w1, #0x0                   	// #0
   28ecc:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   28ed0:	strb	wzr, [x0, #104]
   28ed4:	ret
   28ed8:	ldr	x3, [x0, #224]
   28edc:	cbz	x3, 28f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39f4>
   28ee0:	str	x30, [sp, #-16]!
   28ee4:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28ee8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   28eec:	add	x2, x2, #0x710
   28ef0:	add	x0, x0, #0x740
   28ef4:	mov	x4, #0x0                   	// #0
   28ef8:	mov	x3, #0x0                   	// #0
   28efc:	mov	w1, #0x4e                  	// #78
   28f00:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   28f04:	ldr	x3, [x0, #232]
   28f08:	cbnz	x3, 28ee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39d0>
   28f0c:	stp	x1, x2, [x0, #224]
   28f10:	ret
   28f14:	nop
   28f18:	stp	x19, x20, [sp, #-48]!
   28f1c:	mov	x20, x0
   28f20:	ldr	x0, [x0, #32]
   28f24:	stp	x21, x22, [sp, #16]
   28f28:	mov	x21, x1
   28f2c:	str	x30, [sp, #32]
   28f30:	bl	1dfc0 <__sanitizer_set_report_fd@@Base+0x46f8>
   28f34:	ldr	x0, [x20, #24]
   28f38:	cbz	x0, 28f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a38>
   28f3c:	mov	x1, x21
   28f40:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   28f44:	cbz	w0, 28fe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ad8>
   28f48:	ldr	x0, [x20, #16]
   28f4c:	mov	x19, #0x0                   	// #0
   28f50:	cbnz	x0, 28f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a58>
   28f54:	b	28fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a98>
   28f58:	ldr	x0, [x20, #16]
   28f5c:	add	x19, x19, #0x1
   28f60:	cmp	x19, x0
   28f64:	b.cs	28fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a98>  // b.hs, b.nlast
   28f68:	ldr	x0, [x20]
   28f6c:	mov	x1, x21
   28f70:	lsl	x22, x19, #3
   28f74:	ldr	x0, [x0, x19, lsl #3]
   28f78:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   28f7c:	cbnz	w0, 28f58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a48>
   28f80:	ldr	x4, [x20, #16]
   28f84:	ldr	x0, [x20]
   28f88:	cmp	x4, x19
   28f8c:	b.ls	290dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bcc>  // b.plast
   28f90:	ldr	x0, [x0, x22]
   28f94:	str	x0, [x20, #24]
   28f98:	ldp	x21, x22, [sp, #16]
   28f9c:	ldr	x30, [sp, #32]
   28fa0:	ldp	x19, x20, [sp], #48
   28fa4:	ret
   28fa8:	mov	x0, x21
   28fac:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   28fb0:	ldp	x4, x3, [x20, #8]
   28fb4:	mov	x19, x20
   28fb8:	str	x0, [x19, #24]!
   28fbc:	lsr	x4, x4, #3
   28fc0:	cmp	x3, x4
   28fc4:	b.hi	290c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bb4>  // b.pmore
   28fc8:	add	x21, x3, #0x1
   28fcc:	b.eq	28ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3aec>  // b.none
   28fd0:	ldr	x22, [x20]
   28fd4:	str	x21, [x20, #16]
   28fd8:	mov	x1, x19
   28fdc:	add	x0, x22, x3, lsl #3
   28fe0:	mov	x2, #0x8                   	// #8
   28fe4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   28fe8:	ldp	x21, x22, [sp, #16]
   28fec:	ldr	x0, [x20, #24]
   28ff0:	ldr	x30, [sp, #32]
   28ff4:	ldp	x19, x20, [sp], #48
   28ff8:	ret
   28ffc:	tst	x3, x21
   29000:	b.eq	2903c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b2c>  // b.none
   29004:	clz	x2, x21
   29008:	mov	w1, #0x3f                  	// #63
   2900c:	sub	w1, w1, w2
   29010:	mov	x2, #0x1                   	// #1
   29014:	add	w4, w1, #0x1
   29018:	lsl	x4, x2, x4
   2901c:	cmp	x4, x21
   29020:	b.ls	290a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b98>  // b.plast
   29024:	lsl	x1, x2, x1
   29028:	cmp	x1, x21
   2902c:	b.cs	2912c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c1c>  // b.hs, b.nlast
   29030:	cmp	x3, x4
   29034:	b.hi	29104 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bf4>  // b.pmore
   29038:	mov	x21, x4
   2903c:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   29040:	lsl	x21, x21, #3
   29044:	ldr	x22, [x22, #4000]
   29048:	ldr	x0, [x22]
   2904c:	cbz	x0, 290f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>
   29050:	sub	x1, x0, #0x1
   29054:	tst	x0, x1
   29058:	b.ne	2911c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c0c>  // b.any
   2905c:	add	x21, x21, x1
   29060:	neg	x0, x0
   29064:	and	x21, x21, x0
   29068:	mov	w2, #0x0                   	// #0
   2906c:	mov	x0, x21
   29070:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   29074:	add	x1, x1, #0x700
   29078:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2907c:	ldr	x1, [x20]
   29080:	mov	x22, x0
   29084:	ldr	x2, [x20, #16]
   29088:	lsl	x2, x2, #3
   2908c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29090:	ldp	x0, x1, [x20]
   29094:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   29098:	stp	x22, x21, [x20]
   2909c:	ldr	x3, [x20, #16]
   290a0:	add	x21, x3, #0x1
   290a4:	b	28fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac4>
   290a8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   290ac:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   290b0:	mov	x3, x21
   290b4:	add	x2, x2, #0x680
   290b8:	add	x0, x0, #0x578
   290bc:	mov	w1, #0x17b                 	// #379
   290c0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   290c4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   290c8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   290cc:	add	x2, x2, #0x660
   290d0:	add	x0, x0, #0x578
   290d4:	mov	w1, #0x1be                 	// #446
   290d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   290dc:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   290e0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   290e4:	mov	x3, x19
   290e8:	add	x2, x2, #0x560
   290ec:	add	x0, x0, #0x578
   290f0:	mov	w1, #0x1b6                 	// #438
   290f4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   290f8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   290fc:	str	x0, [x22]
   29100:	b	29050 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b40>
   29104:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   29108:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2910c:	add	x2, x2, #0x6c8
   29110:	add	x0, x0, #0x578
   29114:	mov	w1, #0x1fd                 	// #509
   29118:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2911c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   29120:	add	x0, x0, #0x6e8
   29124:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   29128:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2912c:	mov	x4, x1
   29130:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   29134:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   29138:	mov	x3, x21
   2913c:	add	x2, x2, #0x6a8
   29140:	add	x0, x0, #0x578
   29144:	mov	w1, #0x17c                 	// #380
   29148:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2914c:	nop
   29150:	stp	x19, x20, [sp, #-64]!
   29154:	mov	x19, x0
   29158:	stp	x23, x24, [sp, #32]
   2915c:	adrp	x23, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   29160:	ldr	x20, [x23, #4000]
   29164:	stp	x21, x22, [sp, #16]
   29168:	mov	x21, x1
   2916c:	stp	x25, x30, [sp, #48]
   29170:	str	xzr, [x0]
   29174:	stp	xzr, xzr, [x0, #8]
   29178:	ldr	x0, [x20]
   2917c:	cbz	x0, 29284 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d74>
   29180:	sub	x1, x0, #0x1
   29184:	tst	x1, x0
   29188:	b.ne	29290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d80>  // b.any
   2918c:	add	x20, x0, #0x7
   29190:	neg	x0, x0
   29194:	and	x20, x20, x0
   29198:	mov	w2, #0x0                   	// #0
   2919c:	mov	x0, x20
   291a0:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
   291a4:	add	x1, x25, #0x700
   291a8:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   291ac:	ldr	x1, [x19]
   291b0:	mov	x22, x0
   291b4:	ldr	x2, [x19, #16]
   291b8:	add	x24, x19, #0x70
   291bc:	lsl	x2, x2, #3
   291c0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   291c4:	ldp	x0, x1, [x19]
   291c8:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   291cc:	stp	x22, x20, [x19]
   291d0:	lsr	x0, x20, #3
   291d4:	stp	xzr, x24, [x19, #24]
   291d8:	cmp	x0, #0x3e7
   291dc:	b.ls	2921c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d0c>  // b.plast
   291e0:	strb	wzr, [x19, #64]
   291e4:	mov	x0, x24
   291e8:	strb	wzr, [x19, #96]
   291ec:	strb	wzr, [x19, #104]
   291f0:	bl	1dea8 <__sanitizer_set_report_fd@@Base+0x45e0>
   291f4:	stp	xzr, xzr, [x19, #224]
   291f8:	ldp	x0, x1, [x21]
   291fc:	stp	x0, x1, [x19, #200]
   29200:	ldr	x0, [x21, #16]
   29204:	ldp	x21, x22, [sp, #16]
   29208:	ldp	x23, x24, [sp, #32]
   2920c:	ldp	x25, x30, [sp, #48]
   29210:	str	x0, [x19, #216]
   29214:	ldp	x19, x20, [sp], #64
   29218:	ret
   2921c:	ldr	x3, [x19, #16]
   29220:	cmp	x3, #0x3e8
   29224:	b.hi	292ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d9c>  // b.pmore
   29228:	ldr	x23, [x23, #4000]
   2922c:	ldr	x0, [x23]
   29230:	cbz	x0, 292a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d90>
   29234:	sub	x1, x0, #0x1
   29238:	tst	x1, x0
   2923c:	b.ne	29290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d80>  // b.any
   29240:	mov	x1, #0x1f3f                	// #7999
   29244:	add	x20, x0, x1
   29248:	neg	x0, x0
   2924c:	add	x1, x25, #0x700
   29250:	and	x20, x20, x0
   29254:	mov	w2, #0x0                   	// #0
   29258:	mov	x0, x20
   2925c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   29260:	ldr	x1, [x19]
   29264:	mov	x22, x0
   29268:	ldr	x2, [x19, #16]
   2926c:	lsl	x2, x2, #3
   29270:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29274:	ldp	x0, x1, [x19]
   29278:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2927c:	stp	x22, x20, [x19]
   29280:	b	291e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cd0>
   29284:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   29288:	str	x0, [x20]
   2928c:	b	29180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c70>
   29290:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   29294:	add	x0, x0, #0x6e8
   29298:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2929c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   292a0:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   292a4:	str	x0, [x23]
   292a8:	b	29234 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d24>
   292ac:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   292b0:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   292b4:	add	x2, x2, #0x6c8
   292b8:	add	x0, x0, #0x578
   292bc:	mov	x4, #0x3e8                 	// #1000
   292c0:	mov	w1, #0x1fd                 	// #509
   292c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   292c8:	str	x1, [x0]
   292cc:	ldr	x0, [x1, #224]
   292d0:	cbz	x0, 292dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dcc>
   292d4:	mov	x16, x0
   292d8:	br	x16
   292dc:	ret
   292e0:	ldr	x0, [x0]
   292e4:	ldr	x0, [x0, #232]
   292e8:	cbz	x0, 292f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3de4>
   292ec:	mov	x16, x0
   292f0:	br	x16
   292f4:	ret
   292f8:	ret
   292fc:	nop
   29300:	stp	x19, x20, [sp, #-80]!
   29304:	dup	v0.2d, x2
   29308:	mov	x20, x0
   2930c:	ldr	x0, [x0, #16]
   29310:	adrp	x19, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   29314:	add	x19, x19, #0x2f8
   29318:	stp	x21, x22, [sp, #16]
   2931c:	add	x22, sp, #0x30
   29320:	mov	x3, x19
   29324:	mov	x21, x1
   29328:	mov	x4, x22
   2932c:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   29330:	add	x2, x2, #0x780
   29334:	str	x30, [sp, #32]
   29338:	str	q0, [sp, #48]
   2933c:	str	xzr, [sp, #64]
   29340:	bl	6700 <__asan_backtrace_pcinfo@plt>
   29344:	ldr	x0, [sp, #64]
   29348:	cbz	x0, 29360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e50>
   2934c:	mov	w0, #0x1                   	// #1
   29350:	ldp	x21, x22, [sp, #16]
   29354:	ldr	x30, [sp, #32]
   29358:	ldp	x19, x20, [sp], #80
   2935c:	ret
   29360:	ldr	x0, [x20, #16]
   29364:	mov	x4, x22
   29368:	mov	x3, x19
   2936c:	mov	x1, x21
   29370:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   29374:	add	x2, x2, #0x5f0
   29378:	bl	6850 <__asan_backtrace_syminfo@plt>
   2937c:	ldr	x0, [sp, #64]
   29380:	ldp	x21, x22, [sp, #16]
   29384:	cmp	x0, #0x0
   29388:	cset	w0, ne  // ne = any
   2938c:	ldr	x30, [sp, #32]
   29390:	ldp	x19, x20, [sp], #80
   29394:	ret
   29398:	ldr	x0, [x0, #16]
   2939c:	str	x30, [sp, #-16]!
   293a0:	mov	x4, x2
   293a4:	adrp	x3, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   293a8:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   293ac:	add	x3, x3, #0x2f8
   293b0:	add	x2, x2, #0x488
   293b4:	bl	6850 <__asan_backtrace_syminfo@plt>
   293b8:	mov	w0, #0x1                   	// #1
   293bc:	ldr	x30, [sp], #16
   293c0:	ret
   293c4:	nop
   293c8:	stp	x19, x20, [sp, #-48]!
   293cc:	mov	x19, x2
   293d0:	mov	x20, x1
   293d4:	add	x2, x1, #0x1
   293d8:	stp	x21, x22, [sp, #16]
   293dc:	mov	x21, x0
   293e0:	ldp	x3, x1, [x19, #8]
   293e4:	str	x30, [sp, #32]
   293e8:	add	x0, x2, x3
   293ec:	cmp	x1, x0
   293f0:	b.cc	29430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f20>  // b.lo, b.ul, b.last
   293f4:	ldr	x22, [x19]
   293f8:	mov	x1, x21
   293fc:	add	x0, x22, x3
   29400:	mov	x2, x20
   29404:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29408:	ldp	x0, x1, [x19]
   2940c:	add	x0, x0, x20
   29410:	strb	wzr, [x0, x1]
   29414:	ldr	x1, [x19, #8]
   29418:	ldp	x21, x22, [sp, #16]
   2941c:	add	x20, x1, x20
   29420:	ldr	x30, [sp, #32]
   29424:	str	x20, [x19, #8]
   29428:	ldp	x19, x20, [sp], #48
   2942c:	ret
   29430:	cmp	x0, x1, lsl #1
   29434:	lsl	x1, x1, #1
   29438:	b.hi	2947c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f6c>  // b.pmore
   2943c:	mov	x0, x1
   29440:	str	x1, [x19, #16]
   29444:	mov	x1, #0x0                   	// #0
   29448:	mov	x2, #0x0                   	// #0
   2944c:	bl	12f40 <__sancov_default_options@@Base+0x470>
   29450:	mov	x22, x0
   29454:	ldr	x1, [x19]
   29458:	cbz	x1, 29470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f60>
   2945c:	ldr	x2, [x19, #8]
   29460:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29464:	ldr	x0, [x19]
   29468:	mov	x1, #0x0                   	// #0
   2946c:	bl	13340 <__sancov_default_options@@Base+0x870>
   29470:	str	x22, [x19]
   29474:	ldr	x3, [x19, #8]
   29478:	b	293f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ee8>
   2947c:	str	x0, [x19, #16]
   29480:	b	29444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f34>
   29484:	nop
   29488:	cmp	x2, #0x0
   2948c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   29490:	b.ne	29498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f88>  // b.any
   29494:	ret
   29498:	stp	x19, x20, [sp, #-80]!
   2949c:	mov	x19, x2
   294a0:	mov	x20, x3
   294a4:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   294a8:	add	x3, sp, #0x30
   294ac:	add	x2, x2, #0x3c8
   294b0:	mov	w1, #0x3                   	// #3
   294b4:	stp	x21, x22, [sp, #16]
   294b8:	mov	x21, x0
   294bc:	mov	x22, x4
   294c0:	mov	x0, x19
   294c4:	stp	x23, x30, [sp, #32]
   294c8:	str	xzr, [sp, #48]
   294cc:	stp	xzr, xzr, [sp, #56]
   294d0:	bl	6d00 <__asan_cplus_demangle_v3_callback@plt>
   294d4:	cbnz	w0, 2950c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ffc>
   294d8:	ldr	x0, [sp, #48]
   294dc:	cbz	x0, 294e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>
   294e0:	mov	x1, #0x0                   	// #0
   294e4:	bl	13340 <__sancov_default_options@@Base+0x870>
   294e8:	mov	x0, x19
   294ec:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   294f0:	mov	x23, x0
   294f4:	stp	x23, x20, [x21, #40]
   294f8:	str	x22, [x21, #56]
   294fc:	ldp	x21, x22, [sp, #16]
   29500:	ldp	x23, x30, [sp, #32]
   29504:	ldp	x19, x20, [sp], #80
   29508:	ret
   2950c:	ldp	x23, x0, [sp, #48]
   29510:	ldr	x1, [sp, #64]
   29514:	add	x0, x0, #0x40
   29518:	cmp	x0, x1
   2951c:	b.ls	2953c <__sanitizer_get_module_and_offset_for_pc@@Base+0x402c>  // b.plast
   29520:	cbz	x23, 294e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>
   29524:	stp	x23, x20, [x21, #40]
   29528:	str	x22, [x21, #56]
   2952c:	ldp	x21, x22, [sp, #16]
   29530:	ldp	x23, x30, [sp, #32]
   29534:	ldp	x19, x20, [sp], #80
   29538:	ret
   2953c:	mov	x0, x23
   29540:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   29544:	mov	x23, x0
   29548:	mov	x1, #0x0                   	// #0
   2954c:	ldr	x0, [sp, #48]
   29550:	bl	13340 <__sancov_default_options@@Base+0x870>
   29554:	cbnz	x23, 29524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4014>
   29558:	b	294e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>
   2955c:	nop
   29560:	stp	x19, x30, [sp, #-48]!
   29564:	mov	x0, x1
   29568:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   2956c:	add	x3, sp, #0x10
   29570:	add	x2, x2, #0x3c8
   29574:	mov	w1, #0x3                   	// #3
   29578:	str	xzr, [sp, #16]
   2957c:	stp	xzr, xzr, [sp, #24]
   29580:	bl	6d00 <__asan_cplus_demangle_v3_callback@plt>
   29584:	cbz	w0, 295a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4098>
   29588:	ldp	x19, x0, [sp, #16]
   2958c:	ldr	x1, [sp, #32]
   29590:	add	x0, x0, #0x40
   29594:	cmp	x0, x1
   29598:	b.ls	295cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40bc>  // b.plast
   2959c:	mov	x0, x19
   295a0:	ldp	x19, x30, [sp], #48
   295a4:	ret
   295a8:	ldr	x19, [sp, #16]
   295ac:	cbz	x19, 2959c <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>
   295b0:	mov	x0, x19
   295b4:	mov	x1, #0x0                   	// #0
   295b8:	mov	x19, #0x0                   	// #0
   295bc:	bl	13340 <__sancov_default_options@@Base+0x870>
   295c0:	mov	x0, x19
   295c4:	ldp	x19, x30, [sp], #48
   295c8:	ret
   295cc:	mov	x0, x19
   295d0:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   295d4:	mov	x19, x0
   295d8:	mov	x1, #0x0                   	// #0
   295dc:	ldr	x0, [sp, #16]
   295e0:	bl	13340 <__sancov_default_options@@Base+0x870>
   295e4:	mov	x0, x19
   295e8:	ldp	x19, x30, [sp], #48
   295ec:	ret
   295f0:	cbz	x2, 29698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   295f4:	stp	x19, x20, [sp, #-80]!
   295f8:	mov	x19, x0
   295fc:	stp	x21, x22, [sp, #16]
   29600:	ldr	x22, [x0, #8]
   29604:	str	x30, [sp, #32]
   29608:	cbz	x22, 296f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41e4>
   2960c:	ldr	x0, [x0, #16]
   29610:	mov	x21, x1
   29614:	mov	x20, x2
   29618:	cbnz	x0, 29714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4204>
   2961c:	ldr	x0, [x19]
   29620:	ldr	x4, [x0, #8]
   29624:	cmp	x21, x4
   29628:	b.ne	29744 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4234>  // b.any
   2962c:	ldr	x4, [x22, #8]
   29630:	cmp	x21, x4
   29634:	b.ne	29760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>  // b.any
   29638:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   2963c:	add	x3, sp, #0x30
   29640:	add	x2, x2, #0x3c8
   29644:	mov	x0, x20
   29648:	mov	w1, #0x3                   	// #3
   2964c:	str	xzr, [sp, #48]
   29650:	stp	xzr, xzr, [sp, #56]
   29654:	bl	6d00 <__asan_cplus_demangle_v3_callback@plt>
   29658:	cbnz	w0, 2969c <__sanitizer_get_module_and_offset_for_pc@@Base+0x418c>
   2965c:	ldr	x0, [sp, #48]
   29660:	cbz	x0, 2966c <__sanitizer_get_module_and_offset_for_pc@@Base+0x415c>
   29664:	mov	x1, #0x0                   	// #0
   29668:	bl	13340 <__sancov_default_options@@Base+0x870>
   2966c:	mov	x0, x20
   29670:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   29674:	mov	x21, x0
   29678:	ldr	x0, [x19, #16]
   2967c:	ldr	x30, [sp, #32]
   29680:	str	x21, [x22, #40]
   29684:	add	x0, x0, #0x1
   29688:	ldp	x21, x22, [sp, #16]
   2968c:	str	x0, [x19, #16]
   29690:	ldp	x19, x20, [sp], #80
   29694:	ret
   29698:	ret
   2969c:	ldp	x21, x0, [sp, #48]
   296a0:	ldr	x1, [sp, #64]
   296a4:	add	x0, x0, #0x40
   296a8:	cmp	x0, x1
   296ac:	b.ls	296d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c4>  // b.plast
   296b0:	cbz	x21, 2966c <__sanitizer_get_module_and_offset_for_pc@@Base+0x415c>
   296b4:	ldr	x0, [x19, #16]
   296b8:	ldr	x30, [sp, #32]
   296bc:	str	x21, [x22, #40]
   296c0:	add	x0, x0, #0x1
   296c4:	ldp	x21, x22, [sp, #16]
   296c8:	str	x0, [x19, #16]
   296cc:	ldp	x19, x20, [sp], #80
   296d0:	ret
   296d4:	mov	x0, x21
   296d8:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   296dc:	mov	x21, x0
   296e0:	mov	x1, #0x0                   	// #0
   296e4:	ldr	x0, [sp, #48]
   296e8:	bl	13340 <__sancov_default_options@@Base+0x870>
   296ec:	cbnz	x21, 296b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41a4>
   296f0:	b	2966c <__sanitizer_get_module_and_offset_for_pc@@Base+0x415c>
   296f4:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   296f8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   296fc:	add	x2, x2, #0x788
   29700:	add	x0, x0, #0x798
   29704:	mov	x4, #0x0                   	// #0
   29708:	mov	x3, #0x0                   	// #0
   2970c:	mov	w1, #0x5c                  	// #92
   29710:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   29714:	mov	x0, x1
   29718:	bl	28db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   2971c:	ldr	x3, [x19]
   29720:	mov	x22, x0
   29724:	add	x0, x0, #0x8
   29728:	ldp	x1, x2, [x3, #16]
   2972c:	ldr	w3, [x3, #32]
   29730:	bl	28d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   29734:	ldr	x0, [x19, #8]
   29738:	str	x22, [x0]
   2973c:	str	x22, [x19, #8]
   29740:	b	2961c <__sanitizer_get_module_and_offset_for_pc@@Base+0x410c>
   29744:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29748:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2974c:	mov	x3, x21
   29750:	add	x2, x2, #0x7e8
   29754:	add	x0, x0, #0x798
   29758:	mov	w1, #0x65                  	// #101
   2975c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   29760:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29764:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29768:	mov	x3, x21
   2976c:	add	x2, x2, #0x810
   29770:	add	x0, x0, #0x798
   29774:	mov	w1, #0x66                  	// #102
   29778:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2977c:	nop
   29780:	cbz	x4, 29854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4344>
   29784:	stp	x19, x20, [sp, #-96]!
   29788:	mov	x19, x0
   2978c:	stp	x21, x22, [sp, #16]
   29790:	ldr	x21, [x0, #8]
   29794:	stp	x23, x24, [sp, #32]
   29798:	str	x30, [sp, #48]
   2979c:	cbz	x21, 29898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4388>
   297a0:	ldr	x0, [x0, #16]
   297a4:	mov	x22, x1
   297a8:	mov	x23, x2
   297ac:	mov	w24, w3
   297b0:	mov	x20, x4
   297b4:	cbnz	x0, 298b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43a8>
   297b8:	ldr	x0, [x19]
   297bc:	ldr	x4, [x0, #8]
   297c0:	cmp	x22, x4
   297c4:	b.ne	298e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43d8>  // b.any
   297c8:	ldr	x4, [x21, #8]
   297cc:	cmp	x22, x4
   297d0:	b.ne	29904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f4>  // b.any
   297d4:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   297d8:	add	x3, sp, #0x40
   297dc:	add	x2, x2, #0x3c8
   297e0:	mov	x0, x20
   297e4:	mov	w1, #0x3                   	// #3
   297e8:	str	xzr, [sp, #64]
   297ec:	stp	xzr, xzr, [sp, #72]
   297f0:	bl	6d00 <__asan_cplus_demangle_v3_callback@plt>
   297f4:	cbnz	w0, 2985c <__sanitizer_get_module_and_offset_for_pc@@Base+0x434c>
   297f8:	ldr	x0, [sp, #64]
   297fc:	cbz	x0, 29808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   29800:	mov	x1, #0x0                   	// #0
   29804:	bl	13340 <__sancov_default_options@@Base+0x870>
   29808:	mov	x0, x20
   2980c:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   29810:	mov	x22, x0
   29814:	str	x22, [x21, #40]
   29818:	add	x21, x21, #0x8
   2981c:	cbz	x23, 2982c <__sanitizer_get_module_and_offset_for_pc@@Base+0x431c>
   29820:	mov	x0, x23
   29824:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   29828:	str	x0, [x21, #48]
   2982c:	ldr	x0, [x19, #16]
   29830:	ldr	x30, [sp, #48]
   29834:	str	w24, [x21, #56]
   29838:	add	x0, x0, #0x1
   2983c:	ldp	x21, x22, [sp, #16]
   29840:	ldp	x23, x24, [sp, #32]
   29844:	str	x0, [x19, #16]
   29848:	mov	w0, #0x0                   	// #0
   2984c:	ldp	x19, x20, [sp], #96
   29850:	ret
   29854:	mov	w0, #0x0                   	// #0
   29858:	ret
   2985c:	ldp	x22, x0, [sp, #64]
   29860:	ldr	x1, [sp, #80]
   29864:	add	x0, x0, #0x40
   29868:	cmp	x0, x1
   2986c:	b.ls	29878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4368>  // b.plast
   29870:	cbnz	x22, 29814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4304>
   29874:	b	29808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   29878:	mov	x0, x22
   2987c:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   29880:	mov	x22, x0
   29884:	mov	x1, #0x0                   	// #0
   29888:	ldr	x0, [sp, #64]
   2988c:	bl	13340 <__sancov_default_options@@Base+0x870>
   29890:	cbnz	x22, 29814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4304>
   29894:	b	29808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   29898:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2989c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   298a0:	add	x2, x2, #0x788
   298a4:	add	x0, x0, #0x798
   298a8:	mov	x4, #0x0                   	// #0
   298ac:	mov	x3, #0x0                   	// #0
   298b0:	mov	w1, #0x5c                  	// #92
   298b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   298b8:	mov	x0, x1
   298bc:	bl	28db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   298c0:	ldr	x3, [x19]
   298c4:	mov	x21, x0
   298c8:	add	x0, x0, #0x8
   298cc:	ldp	x1, x2, [x3, #16]
   298d0:	ldr	w3, [x3, #32]
   298d4:	bl	28d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   298d8:	ldr	x0, [x19, #8]
   298dc:	str	x21, [x0]
   298e0:	str	x21, [x19, #8]
   298e4:	b	297b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a8>
   298e8:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   298ec:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   298f0:	mov	x3, x22
   298f4:	add	x2, x2, #0x7e8
   298f8:	add	x0, x0, #0x798
   298fc:	mov	w1, #0x65                  	// #101
   29900:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   29904:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29908:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2990c:	mov	x3, x22
   29910:	add	x2, x2, #0x810
   29914:	add	x0, x0, #0x798
   29918:	mov	w1, #0x66                  	// #102
   2991c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   29920:	stp	x19, x20, [sp, #-32]!
   29924:	adrp	x2, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   29928:	mov	x20, x0
   2992c:	add	x2, x2, #0x2f8
   29930:	adrp	x0, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   29934:	mov	x3, #0x0                   	// #0
   29938:	add	x0, x0, #0xa00
   2993c:	mov	w1, #0x0                   	// #0
   29940:	str	x30, [sp, #16]
   29944:	bl	69c0 <__asan_backtrace_create_state@plt>
   29948:	cbz	x0, 29978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4468>
   2994c:	mov	x19, x0
   29950:	mov	x1, #0x18                  	// #24
   29954:	mov	x0, x20
   29958:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2995c:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   29960:	add	x1, x1, #0xce8
   29964:	stp	x1, xzr, [x0]
   29968:	str	x19, [x0, #16]
   2996c:	ldr	x30, [sp, #16]
   29970:	ldp	x19, x20, [sp], #32
   29974:	ret
   29978:	mov	x0, #0x0                   	// #0
   2997c:	ldr	x30, [sp, #16]
   29980:	ldp	x19, x20, [sp], #32
   29984:	ret
   29988:	ret
   2998c:	nop
   29990:	stp	x19, x20, [sp, #-96]!
   29994:	mov	x19, #0x0                   	// #0
   29998:	stp	x21, x22, [sp, #16]
   2999c:	mov	x22, x0
   299a0:	mov	x21, x1
   299a4:	stp	x23, x24, [sp, #32]
   299a8:	adrp	x24, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   299ac:	mov	x23, x2
   299b0:	add	x24, x24, #0x3f8
   299b4:	stp	x25, x26, [sp, #48]
   299b8:	sub	x26, x2, #0x1
   299bc:	add	x25, sp, #0x58
   299c0:	str	x30, [sp, #64]
   299c4:	b	299e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d8>
   299c8:	cmp	x19, #0x1
   299cc:	b.ls	299dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x44cc>  // b.plast
   299d0:	ldurb	w0, [x1, #-1]
   299d4:	cmp	w0, #0xa
   299d8:	b.eq	29a68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4558>  // b.none
   299dc:	add	x0, x19, #0x1
   299e0:	cmp	x23, x0
   299e4:	b.eq	29ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45a0>  // b.none
   299e8:	ldr	w0, [x22, #16]
   299ec:	mov	x3, x25
   299f0:	sub	x2, x26, x19
   299f4:	add	x1, x21, x19
   299f8:	mov	x4, #0x0                   	// #0
   299fc:	str	xzr, [sp, #88]
   29a00:	bl	20818 <__sanitizer_set_report_fd@@Base+0x6f50>
   29a04:	ands	w20, w0, #0xff
   29a08:	b.eq	29a80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>  // b.none
   29a0c:	ldr	x3, [sp, #88]
   29a10:	add	x19, x19, x3
   29a14:	add	x1, x21, x19
   29a18:	cbz	x3, 29a80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>
   29a1c:	ldr	x0, [x22]
   29a20:	ldr	x3, [x0]
   29a24:	cmp	x3, x24
   29a28:	b.eq	299c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44b8>  // b.none
   29a2c:	mov	x2, x19
   29a30:	mov	x1, x21
   29a34:	mov	x0, x22
   29a38:	blr	x3
   29a3c:	tst	w0, #0xff
   29a40:	b.eq	299dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x44cc>  // b.none
   29a44:	add	x21, x21, x19
   29a48:	strb	wzr, [x21]
   29a4c:	mov	w0, w20
   29a50:	ldp	x21, x22, [sp, #16]
   29a54:	ldp	x23, x24, [sp, #32]
   29a58:	ldp	x25, x26, [sp, #48]
   29a5c:	ldr	x30, [sp, #64]
   29a60:	ldp	x19, x20, [sp], #96
   29a64:	ret
   29a68:	ldurb	w0, [x1, #-2]
   29a6c:	cmp	w0, #0xa
   29a70:	b.ne	299dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x44cc>  // b.any
   29a74:	mov	x21, x1
   29a78:	strb	wzr, [x21]
   29a7c:	b	29a4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x453c>
   29a80:	ldr	w1, [x22, #16]
   29a84:	mov	w20, #0x0                   	// #0
   29a88:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29a8c:	add	x0, x0, #0x8e8
   29a90:	bl	22d00 <OnPrint@@Base+0x398>
   29a94:	mov	w0, w20
   29a98:	ldp	x21, x22, [sp, #16]
   29a9c:	ldp	x23, x24, [sp, #32]
   29aa0:	ldp	x25, x26, [sp, #48]
   29aa4:	ldr	x30, [sp, #64]
   29aa8:	ldp	x19, x20, [sp], #96
   29aac:	ret
   29ab0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29ab4:	add	x0, x0, #0x918
   29ab8:	bl	22d00 <OnPrint@@Base+0x398>
   29abc:	strb	wzr, [x21]
   29ac0:	b	29a4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x453c>
   29ac4:	nop
   29ac8:	cbz	x2, 29ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c0>
   29acc:	b	29990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4480>
   29ad0:	mov	w0, #0x1                   	// #1
   29ad4:	ret
   29ad8:	stp	x19, x20, [sp, #-32]!
   29adc:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   29ae0:	mov	w2, #0x1                   	// #1
   29ae4:	ldr	x0, [x19, #3832]
   29ae8:	str	x30, [sp, #16]
   29aec:	ldxrb	w1, [x0]
   29af0:	stxrb	w3, w2, [x0]
   29af4:	cbnz	w3, 29aec <__sanitizer_get_module_and_offset_for_pc@@Base+0x45dc>
   29af8:	dmb	ish
   29afc:	tst	w1, #0xff
   29b00:	b.eq	29b08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f8>  // b.none
   29b04:	bl	f5d8 <__sancov_lowest_stack@@Base+0x1da8>
   29b08:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   29b0c:	ldr	x20, [x20, #3744]
   29b10:	ldr	x0, [x20]
   29b14:	cbz	x0, 29b30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4620>
   29b18:	dmb	ish
   29b1c:	ldr	x19, [x19, #3832]
   29b20:	strb	wzr, [x19]
   29b24:	ldr	x30, [sp, #16]
   29b28:	ldp	x19, x20, [sp], #32
   29b2c:	ret
   29b30:	bl	2b9d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64c0>
   29b34:	str	x0, [x20]
   29b38:	cbnz	x0, 29b18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4608>
   29b3c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29b40:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29b44:	add	x2, x2, #0x940
   29b48:	add	x0, x0, #0x958
   29b4c:	mov	x4, #0x0                   	// #0
   29b50:	mov	x3, #0x0                   	// #0
   29b54:	mov	w1, #0x17                  	// #23
   29b58:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   29b5c:	nop
   29b60:	stp	x19, x20, [sp, #-32]!
   29b64:	mov	x20, x0
   29b68:	stp	x21, x30, [sp, #16]
   29b6c:	mov	x21, x2
   29b70:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   29b74:	mov	x2, #0x0                   	// #0
   29b78:	mov	x19, x0
   29b7c:	mov	x1, #0x0                   	// #0
   29b80:	add	x0, x0, #0x1
   29b84:	bl	12f40 <__sancov_default_options@@Base+0x470>
   29b88:	str	x0, [x21]
   29b8c:	mov	x2, x19
   29b90:	mov	x1, x20
   29b94:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29b98:	ldr	x1, [x21]
   29b9c:	add	x0, x20, x19
   29ba0:	strb	wzr, [x1, x19]
   29ba4:	ldrb	w1, [x20, x19]
   29ba8:	ldp	x21, x30, [sp, #16]
   29bac:	cmp	w1, #0x0
   29bb0:	cinc	x0, x0, ne  // ne = any
   29bb4:	ldp	x19, x20, [sp], #32
   29bb8:	ret
   29bbc:	nop
   29bc0:	stp	x19, x20, [sp, #-48]!
   29bc4:	stp	x21, x22, [sp, #16]
   29bc8:	mov	x21, x0
   29bcc:	stp	x23, x30, [sp, #32]
   29bd0:	mov	x23, x2
   29bd4:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   29bd8:	mov	x2, #0x0                   	// #0
   29bdc:	mov	x19, x0
   29be0:	mov	x1, #0x0                   	// #0
   29be4:	add	x0, x0, #0x1
   29be8:	bl	12f40 <__sancov_default_options@@Base+0x470>
   29bec:	mov	x20, x0
   29bf0:	mov	x2, x19
   29bf4:	mov	x1, x21
   29bf8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29bfc:	add	x22, x21, x19
   29c00:	strb	wzr, [x20, x19]
   29c04:	ldrb	w0, [x21, x19]
   29c08:	cmp	w0, #0x0
   29c0c:	cinc	x22, x22, ne  // ne = any
   29c10:	cbz	x20, 29c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4710>
   29c14:	mov	x0, x20
   29c18:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   29c1c:	str	w0, [x23]
   29c20:	mov	x0, x20
   29c24:	mov	x1, #0x0                   	// #0
   29c28:	bl	13340 <__sancov_default_options@@Base+0x870>
   29c2c:	mov	x0, x22
   29c30:	ldp	x21, x22, [sp, #16]
   29c34:	ldp	x23, x30, [sp, #32]
   29c38:	ldp	x19, x20, [sp], #48
   29c3c:	ret
   29c40:	stp	x19, x20, [sp, #-48]!
   29c44:	stp	x21, x22, [sp, #16]
   29c48:	mov	x21, x0
   29c4c:	stp	x23, x30, [sp, #32]
   29c50:	mov	x23, x2
   29c54:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   29c58:	mov	x2, #0x0                   	// #0
   29c5c:	mov	x19, x0
   29c60:	mov	x1, #0x0                   	// #0
   29c64:	add	x0, x0, #0x1
   29c68:	bl	12f40 <__sancov_default_options@@Base+0x470>
   29c6c:	mov	x20, x0
   29c70:	mov	x2, x19
   29c74:	mov	x1, x21
   29c78:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29c7c:	add	x22, x21, x19
   29c80:	strb	wzr, [x20, x19]
   29c84:	ldrb	w0, [x21, x19]
   29c88:	cmp	w0, #0x0
   29c8c:	cinc	x22, x22, ne  // ne = any
   29c90:	cbz	x20, 29ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4790>
   29c94:	mov	x0, x20
   29c98:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   29c9c:	str	x0, [x23]
   29ca0:	mov	x0, x20
   29ca4:	mov	x1, #0x0                   	// #0
   29ca8:	bl	13340 <__sancov_default_options@@Base+0x870>
   29cac:	mov	x0, x22
   29cb0:	ldp	x21, x22, [sp, #16]
   29cb4:	ldp	x23, x30, [sp, #32]
   29cb8:	ldp	x19, x20, [sp], #48
   29cbc:	ret
   29cc0:	stp	x19, x20, [sp, #-48]!
   29cc4:	mov	x20, x0
   29cc8:	stp	x21, x22, [sp, #16]
   29ccc:	mov	x21, x2
   29cd0:	stp	x23, x30, [sp, #32]
   29cd4:	mov	x23, x1
   29cd8:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   29cdc:	cbz	x0, 29d4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x483c>
   29ce0:	mov	x19, x0
   29ce4:	sub	x22, x0, x20
   29ce8:	mov	x2, #0x0                   	// #0
   29cec:	mov	x1, #0x0                   	// #0
   29cf0:	add	x0, x22, #0x1
   29cf4:	bl	12f40 <__sancov_default_options@@Base+0x470>
   29cf8:	str	x0, [x21]
   29cfc:	mov	x1, x20
   29d00:	mov	x2, x22
   29d04:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   29d08:	ldr	x0, [x21]
   29d0c:	strb	wzr, [x0, x22]
   29d10:	ldrb	w0, [x19]
   29d14:	cbnz	w0, 29d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x481c>
   29d18:	mov	x0, x19
   29d1c:	ldp	x21, x22, [sp, #16]
   29d20:	ldp	x23, x30, [sp, #32]
   29d24:	ldp	x19, x20, [sp], #48
   29d28:	ret
   29d2c:	mov	x0, x23
   29d30:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   29d34:	add	x19, x19, x0
   29d38:	mov	x0, x19
   29d3c:	ldp	x21, x22, [sp, #16]
   29d40:	ldp	x23, x30, [sp, #32]
   29d44:	ldp	x19, x20, [sp], #48
   29d48:	ret
   29d4c:	mov	x0, x20
   29d50:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   29d54:	mov	x22, x0
   29d58:	add	x19, x20, x0
   29d5c:	b	29ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d8>
   29d60:	stp	x19, x20, [sp, #-64]!
   29d64:	stp	x21, x22, [sp, #16]
   29d68:	mov	x21, x0
   29d6c:	stp	x23, x30, [sp, #32]
   29d70:	add	x23, x0, #0x70
   29d74:	mov	x0, x23
   29d78:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   29d7c:	ldr	x19, [x21, #208]
   29d80:	cbz	x19, 29dbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x48ac>
   29d84:	adrp	x22, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   29d88:	add	x20, sp, #0x38
   29d8c:	add	x22, x22, #0x988
   29d90:	mov	x1, x21
   29d94:	mov	x0, x20
   29d98:	bl	292c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   29d9c:	ldr	x1, [x19]
   29da0:	mov	x0, x20
   29da4:	ldr	x1, [x1, #16]
   29da8:	cmp	x1, x22
   29dac:	b.ne	29dd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c4>  // b.any
   29db0:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   29db4:	ldr	x19, [x19, #8]
   29db8:	cbnz	x19, 29d90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4880>
   29dbc:	mov	x0, x23
   29dc0:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   29dc4:	ldp	x21, x22, [sp, #16]
   29dc8:	ldp	x23, x30, [sp, #32]
   29dcc:	ldp	x19, x20, [sp], #64
   29dd0:	ret
   29dd4:	mov	x0, x19
   29dd8:	blr	x1
   29ddc:	mov	x0, x20
   29de0:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   29de4:	ldr	x19, [x19, #8]
   29de8:	cbnz	x19, 29d90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4880>
   29dec:	mov	x0, x23
   29df0:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   29df4:	ldp	x21, x22, [sp, #16]
   29df8:	ldp	x23, x30, [sp, #32]
   29dfc:	ldp	x19, x20, [sp], #64
   29e00:	ret
   29e04:	nop
   29e08:	stp	x19, x20, [sp, #-80]!
   29e0c:	stp	x21, x22, [sp, #16]
   29e10:	mov	x21, x0
   29e14:	stp	x25, x30, [sp, #48]
   29e18:	add	x25, x0, #0x70
   29e1c:	mov	x0, x25
   29e20:	stp	x23, x24, [sp, #32]
   29e24:	mov	x24, x1
   29e28:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   29e2c:	ldr	x19, [x21, #208]
   29e30:	cbz	x19, 29eac <__sanitizer_get_module_and_offset_for_pc@@Base+0x499c>
   29e34:	adrp	x22, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   29e38:	add	x20, sp, #0x48
   29e3c:	add	x22, x22, #0x3f0
   29e40:	b	29e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4944>
   29e44:	mov	x0, x20
   29e48:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   29e4c:	ldr	x19, [x19, #8]
   29e50:	cbz	x19, 29eac <__sanitizer_get_module_and_offset_for_pc@@Base+0x499c>
   29e54:	mov	x1, x21
   29e58:	mov	x0, x20
   29e5c:	bl	292c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   29e60:	ldr	x2, [x19]
   29e64:	ldr	x2, [x2, #24]
   29e68:	cmp	x2, x22
   29e6c:	b.eq	29e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4934>  // b.none
   29e70:	mov	x1, x24
   29e74:	mov	x0, x19
   29e78:	blr	x2
   29e7c:	mov	x23, x0
   29e80:	cbz	x0, 29e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4934>
   29e84:	mov	x0, x20
   29e88:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   29e8c:	mov	x0, x25
   29e90:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   29e94:	mov	x0, x23
   29e98:	ldp	x21, x22, [sp, #16]
   29e9c:	ldp	x23, x24, [sp, #32]
   29ea0:	ldp	x25, x30, [sp, #48]
   29ea4:	ldp	x19, x20, [sp], #80
   29ea8:	ret
   29eac:	mov	x1, x24
   29eb0:	mov	x0, x21
   29eb4:	bl	2b930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6420>
   29eb8:	mov	x23, x0
   29ebc:	mov	x0, x25
   29ec0:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   29ec4:	mov	x0, x23
   29ec8:	ldp	x21, x22, [sp, #16]
   29ecc:	ldp	x23, x24, [sp, #32]
   29ed0:	ldp	x25, x30, [sp, #48]
   29ed4:	ldp	x19, x20, [sp], #80
   29ed8:	ret
   29edc:	nop
   29ee0:	stp	x19, x30, [sp, #-16]!
   29ee4:	mov	x19, x0
   29ee8:	add	x0, x0, #0x28
   29eec:	bl	1fb50 <__sanitizer_set_report_fd@@Base+0x6288>
   29ef0:	add	x0, x19, #0x48
   29ef4:	bl	1fc60 <__sanitizer_set_report_fd@@Base+0x6398>
   29ef8:	ldr	x0, [x19, #56]
   29efc:	cbz	x0, 29f10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a00>
   29f00:	mov	w0, #0x1                   	// #1
   29f04:	strb	w0, [x19, #104]
   29f08:	ldp	x19, x30, [sp], #16
   29f0c:	ret
   29f10:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   29f14:	add	x0, x0, #0x9a8
   29f18:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   29f1c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   29f20:	stp	x19, x20, [sp, #-48]!
   29f24:	mov	x19, x0
   29f28:	mov	x20, x1
   29f2c:	ldrb	w0, [x0, #104]
   29f30:	stp	x21, x22, [sp, #16]
   29f34:	stp	x23, x30, [sp, #32]
   29f38:	cbz	w0, 29fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   29f3c:	ldr	x0, [x19, #56]
   29f40:	mov	w23, #0x0                   	// #0
   29f44:	cbz	x0, 2a05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b4c>
   29f48:	mov	x21, #0x0                   	// #0
   29f4c:	mov	x22, #0x0                   	// #0
   29f50:	b	29f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a58>
   29f54:	ldr	x0, [x19, #56]
   29f58:	add	x22, x22, #0x1
   29f5c:	add	x21, x21, #0x48
   29f60:	cmp	x0, x22
   29f64:	b.ls	29fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.plast
   29f68:	ldr	x0, [x19, #40]
   29f6c:	mov	x1, x20
   29f70:	add	x0, x0, x21
   29f74:	bl	15b18 <__sancov_default_options@@Base+0x3048>
   29f78:	tst	w0, #0xff
   29f7c:	b.eq	29f54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a44>  // b.none
   29f80:	ldr	x4, [x19, #56]
   29f84:	cmp	x4, x22
   29f88:	b.ls	2a040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b30>  // b.plast
   29f8c:	ldr	x0, [x19, #40]
   29f90:	adds	x0, x0, x21
   29f94:	b.eq	29fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.none
   29f98:	ldp	x21, x22, [sp, #16]
   29f9c:	ldp	x23, x30, [sp, #32]
   29fa0:	ldp	x19, x20, [sp], #48
   29fa4:	ret
   29fa8:	cbz	w23, 2a05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b4c>
   29fac:	ldr	x0, [x19, #88]
   29fb0:	cbnz	x0, 29ff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ae0>
   29fb4:	mov	x0, #0x0                   	// #0
   29fb8:	ldp	x21, x22, [sp, #16]
   29fbc:	ldp	x23, x30, [sp, #32]
   29fc0:	ldp	x19, x20, [sp], #48
   29fc4:	ret
   29fc8:	add	x0, x19, #0x28
   29fcc:	bl	1fb50 <__sanitizer_set_report_fd@@Base+0x6288>
   29fd0:	add	x0, x19, #0x48
   29fd4:	bl	1fc60 <__sanitizer_set_report_fd@@Base+0x6398>
   29fd8:	ldr	x0, [x19, #56]
   29fdc:	cbz	x0, 2a0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bc0>
   29fe0:	mov	w0, #0x1                   	// #1
   29fe4:	mov	w23, #0x1                   	// #1
   29fe8:	strb	w0, [x19, #104]
   29fec:	b	29f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a38>
   29ff0:	mov	x21, #0x0                   	// #0
   29ff4:	mov	x22, #0x0                   	// #0
   29ff8:	b	2a010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b00>
   29ffc:	ldr	x0, [x19, #88]
   2a000:	add	x22, x22, #0x1
   2a004:	add	x21, x21, #0x48
   2a008:	cmp	x0, x22
   2a00c:	b.ls	29fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa4>  // b.plast
   2a010:	ldr	x0, [x19, #72]
   2a014:	mov	x1, x20
   2a018:	add	x0, x0, x21
   2a01c:	bl	15b18 <__sancov_default_options@@Base+0x3048>
   2a020:	tst	w0, #0xff
   2a024:	b.eq	29ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aec>  // b.none
   2a028:	ldr	x4, [x19, #88]
   2a02c:	cmp	x22, x4
   2a030:	b.cs	2a040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b30>  // b.hs, b.nlast
   2a034:	ldr	x0, [x19, #72]
   2a038:	add	x0, x0, x21
   2a03c:	b	29f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a88>
   2a040:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a044:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2a048:	mov	x3, x22
   2a04c:	add	x2, x2, #0x9c0
   2a050:	add	x0, x0, #0x578
   2a054:	mov	w1, #0x2f9                 	// #761
   2a058:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a05c:	add	x0, x19, #0x28
   2a060:	bl	1fb50 <__sanitizer_set_report_fd@@Base+0x6288>
   2a064:	add	x0, x19, #0x48
   2a068:	bl	1fc60 <__sanitizer_set_report_fd@@Base+0x6398>
   2a06c:	ldr	x0, [x19, #56]
   2a070:	cbz	x0, 2a0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bc0>
   2a074:	mov	w0, #0x1                   	// #1
   2a078:	mov	x21, #0x0                   	// #0
   2a07c:	mov	x22, #0x0                   	// #0
   2a080:	strb	w0, [x19, #104]
   2a084:	b	2a09c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b8c>
   2a088:	ldr	x0, [x19, #56]
   2a08c:	add	x22, x22, #0x1
   2a090:	add	x21, x21, #0x48
   2a094:	cmp	x0, x22
   2a098:	b.ls	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a9c>  // b.plast
   2a09c:	ldr	x0, [x19, #40]
   2a0a0:	mov	x1, x20
   2a0a4:	add	x0, x0, x21
   2a0a8:	bl	15b18 <__sancov_default_options@@Base+0x3048>
   2a0ac:	tst	w0, #0xff
   2a0b0:	b.eq	2a088 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b78>  // b.none
   2a0b4:	ldr	x4, [x19, #56]
   2a0b8:	cmp	x22, x4
   2a0bc:	b.cs	2a040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b30>  // b.hs, b.nlast
   2a0c0:	ldr	x0, [x19, #40]
   2a0c4:	adds	x0, x0, x21
   2a0c8:	b.ne	29f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a88>  // b.any
   2a0cc:	b	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a9c>
   2a0d0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a0d4:	add	x0, x0, #0x9a8
   2a0d8:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2a0dc:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2a0e0:	stp	x19, x20, [sp, #-48]!
   2a0e4:	mov	x20, x4
   2a0e8:	mov	x19, x1
   2a0ec:	stp	x21, x22, [sp, #16]
   2a0f0:	mov	x22, x2
   2a0f4:	mov	x21, x3
   2a0f8:	str	x30, [sp, #32]
   2a0fc:	bl	29f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   2a100:	cbz	x0, 2a134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>
   2a104:	mov	x5, x0
   2a108:	mov	w0, #0x1                   	// #1
   2a10c:	ldr	x30, [sp, #32]
   2a110:	ldp	x2, x1, [x5]
   2a114:	str	x2, [x22]
   2a118:	sub	x1, x19, x1
   2a11c:	str	x1, [x21]
   2a120:	ldr	w1, [x5, #24]
   2a124:	str	w1, [x20]
   2a128:	ldp	x21, x22, [sp, #16]
   2a12c:	ldp	x19, x20, [sp], #48
   2a130:	ret
   2a134:	mov	w0, #0x0                   	// #0
   2a138:	ldp	x21, x22, [sp, #16]
   2a13c:	ldr	x30, [sp, #32]
   2a140:	ldp	x19, x20, [sp], #48
   2a144:	ret
   2a148:	stp	x19, x20, [sp, #-64]!
   2a14c:	mov	x20, x0
   2a150:	mov	x19, x1
   2a154:	stp	x21, x22, [sp, #16]
   2a158:	add	x22, x0, #0x70
   2a15c:	mov	x0, x22
   2a160:	mov	x21, x2
   2a164:	stp	x23, x24, [sp, #32]
   2a168:	mov	x23, x3
   2a16c:	str	x30, [sp, #48]
   2a170:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2a174:	mov	x1, x19
   2a178:	mov	x0, x20
   2a17c:	bl	29f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   2a180:	cbz	x0, 2a1c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cb4>
   2a184:	ldp	x1, x2, [x0]
   2a188:	mov	w24, #0x1                   	// #1
   2a18c:	sub	x19, x19, x2
   2a190:	str	x19, [x23]
   2a194:	cbz	x21, 2a1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c94>
   2a198:	mov	x0, x20
   2a19c:	bl	28f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a08>
   2a1a0:	str	x0, [x21]
   2a1a4:	mov	x0, x22
   2a1a8:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2a1ac:	mov	w0, w24
   2a1b0:	ldp	x21, x22, [sp, #16]
   2a1b4:	ldp	x23, x24, [sp, #32]
   2a1b8:	ldr	x30, [sp, #48]
   2a1bc:	ldp	x19, x20, [sp], #64
   2a1c0:	ret
   2a1c4:	mov	x0, x22
   2a1c8:	mov	w24, #0x0                   	// #0
   2a1cc:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2a1d0:	mov	w0, w24
   2a1d4:	ldp	x21, x22, [sp, #16]
   2a1d8:	ldp	x23, x24, [sp, #32]
   2a1dc:	ldr	x30, [sp, #48]
   2a1e0:	ldp	x19, x20, [sp], #64
   2a1e4:	ret
   2a1e8:	stp	x19, x20, [sp, #-32]!
   2a1ec:	mov	x20, x0
   2a1f0:	adrp	x3, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2a1f4:	add	x3, x3, #0xd40
   2a1f8:	str	x30, [sp, #16]
   2a1fc:	stp	x3, xzr, [x20]
   2a200:	mov	x0, x2
   2a204:	mov	x19, x1
   2a208:	mov	x1, #0x4028                	// #16424
   2a20c:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2a210:	add	x2, x0, #0x4, lsl #12
   2a214:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2a218:	mov	x3, #0xffffffffffffffff    	// #-1
   2a21c:	add	x1, x1, #0xd70
   2a220:	stp	x1, x19, [x0]
   2a224:	str	x3, [x0, #16]
   2a228:	str	xzr, [x0, #16408]
   2a22c:	strh	wzr, [x2, #32]
   2a230:	strb	wzr, [x2, #34]
   2a234:	cbz	x19, 2a25c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d4c>
   2a238:	ldrb	w1, [x19]
   2a23c:	cbz	w1, 2a27c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d6c>
   2a240:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2a244:	add	x1, x1, #0xd18
   2a248:	ldr	x30, [sp, #16]
   2a24c:	str	x1, [x0]
   2a250:	str	x0, [x20, #16]
   2a254:	ldp	x19, x20, [sp], #32
   2a258:	ret
   2a25c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a260:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a264:	add	x2, x2, #0x9e0
   2a268:	add	x0, x0, #0x958
   2a26c:	mov	x4, #0x0                   	// #0
   2a270:	mov	x3, #0x0                   	// #0
   2a274:	mov	w1, #0x18f                 	// #399
   2a278:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a27c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a280:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a284:	add	x2, x2, #0x9f8
   2a288:	add	x0, x0, #0x958
   2a28c:	mov	x4, #0x0                   	// #0
   2a290:	mov	x3, #0x0                   	// #0
   2a294:	mov	w1, #0x190                 	// #400
   2a298:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a29c:	nop
   2a2a0:	stp	x19, x20, [sp, #-112]!
   2a2a4:	mov	x20, x0
   2a2a8:	stp	x21, x22, [sp, #16]
   2a2ac:	mov	x22, x1
   2a2b0:	stp	x23, x24, [sp, #32]
   2a2b4:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a2b8:	add	x24, x24, #0x1a0
   2a2bc:	stp	x25, x26, [sp, #48]
   2a2c0:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a2c4:	add	x25, x25, #0xb00
   2a2c8:	stp	x27, x28, [sp, #64]
   2a2cc:	mov	w27, #0x1                   	// #1
   2a2d0:	str	x30, [sp, #80]
   2a2d4:	str	x1, [sp, #104]
   2a2d8:	mov	x1, x24
   2a2dc:	mov	x0, x20
   2a2e0:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2a2e4:	mov	x19, x0
   2a2e8:	mov	x2, #0x0                   	// #0
   2a2ec:	mov	x1, #0x0                   	// #0
   2a2f0:	add	x0, x0, #0x1
   2a2f4:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2a2f8:	mov	x28, x0
   2a2fc:	mov	x2, x19
   2a300:	mov	x1, x20
   2a304:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2a308:	add	x26, x20, x19
   2a30c:	strb	wzr, [x28, x19]
   2a310:	ldrb	w0, [x20, x19]
   2a314:	cmp	w0, #0x0
   2a318:	cinc	x26, x26, ne  // ne = any
   2a31c:	cbz	x28, 2a4d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fc0>
   2a320:	ldrb	w0, [x28]
   2a324:	cbz	w0, 2a510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5000>
   2a328:	mov	x23, x22
   2a32c:	add	x21, x22, #0x8
   2a330:	cbz	w27, 2a48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f7c>
   2a334:	str	x28, [x21, #32]
   2a338:	mov	x1, x24
   2a33c:	mov	x0, x26
   2a340:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2a344:	mov	x19, x0
   2a348:	mov	x2, #0x0                   	// #0
   2a34c:	mov	x1, #0x0                   	// #0
   2a350:	add	x0, x0, #0x1
   2a354:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2a358:	mov	x27, x0
   2a35c:	mov	x2, x19
   2a360:	mov	x1, x26
   2a364:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2a368:	add	x20, x26, x19
   2a36c:	strb	wzr, [x27, x19]
   2a370:	ldrb	w0, [x26, x19]
   2a374:	cmp	w0, #0x0
   2a378:	cinc	x20, x20, ne  // ne = any
   2a37c:	cbz	x27, 2a4f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fe0>
   2a380:	mov	x0, x27
   2a384:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2a388:	cbz	x0, 2a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f24>
   2a38c:	sub	x19, x0, #0x1
   2a390:	mov	w28, #0x2                   	// #2
   2a394:	add	x19, x27, x19
   2a398:	ldrb	w0, [x19]
   2a39c:	cmp	x19, x27
   2a3a0:	b.hi	2a3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ea4>  // b.pmore
   2a3a4:	b	2a3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb4>
   2a3a8:	ldrb	w0, [x19, #-1]!
   2a3ac:	cmp	x19, x27
   2a3b0:	b.eq	2a3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb4>  // b.none
   2a3b4:	ldrb	w0, [x19]
   2a3b8:	sub	w1, w0, #0x30
   2a3bc:	cmp	w1, #0x9
   2a3c0:	b.ls	2a3a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e98>  // b.plast
   2a3c4:	cmp	w0, #0x3a
   2a3c8:	b.ne	2a3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>  // b.any
   2a3cc:	ldrb	w0, [x19, #1]
   2a3d0:	sub	w0, w0, #0x30
   2a3d4:	cmp	w0, #0x9
   2a3d8:	b.hi	2a3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>  // b.pmore
   2a3dc:	ldr	w1, [x21, #56]
   2a3e0:	add	x0, x19, #0x1
   2a3e4:	str	w1, [x21, #60]
   2a3e8:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2a3ec:	str	w0, [x21, #56]
   2a3f0:	strb	wzr, [x19], #-1
   2a3f4:	cmp	w28, #0x1
   2a3f8:	b.ne	2a484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f74>  // b.any
   2a3fc:	mov	x1, x25
   2a400:	mov	x0, x27
   2a404:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2a408:	mov	x19, x0
   2a40c:	mov	x2, #0x0                   	// #0
   2a410:	mov	x1, #0x0                   	// #0
   2a414:	add	x0, x0, #0x1
   2a418:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2a41c:	str	x0, [x23, #56]
   2a420:	mov	x2, x19
   2a424:	mov	x1, x27
   2a428:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2a42c:	ldr	x0, [x23, #56]
   2a430:	strb	wzr, [x0, x19]
   2a434:	mov	x0, x27
   2a438:	mov	x1, #0x0                   	// #0
   2a43c:	bl	13340 <__sancov_default_options@@Base+0x870>
   2a440:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a444:	ldr	x0, [x21, #32]
   2a448:	add	x1, x19, #0xa58
   2a44c:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2a450:	cbz	w0, 2a4bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fac>
   2a454:	ldr	x0, [x21, #48]
   2a458:	add	x1, x19, #0xa58
   2a45c:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2a460:	cbz	w0, 2a46c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f5c>
   2a464:	mov	w27, #0x0                   	// #0
   2a468:	b	2a2d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc8>
   2a46c:	ldr	x0, [x21, #48]
   2a470:	mov	x1, #0x0                   	// #0
   2a474:	mov	w27, #0x0                   	// #0
   2a478:	bl	13340 <__sancov_default_options@@Base+0x870>
   2a47c:	str	xzr, [x21, #48]
   2a480:	b	2a2d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc8>
   2a484:	mov	w28, #0x1                   	// #1
   2a488:	b	2a398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e88>
   2a48c:	ldr	x0, [x22, #8]
   2a490:	bl	28db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   2a494:	add	x21, x0, #0x8
   2a498:	ldp	x1, x2, [x22, #16]
   2a49c:	mov	x23, x0
   2a4a0:	ldr	w3, [x22, #32]
   2a4a4:	mov	x0, x21
   2a4a8:	bl	28d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   2a4ac:	ldr	x0, [sp, #104]
   2a4b0:	str	x23, [sp, #104]
   2a4b4:	str	x23, [x0]
   2a4b8:	b	2a334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e24>
   2a4bc:	ldr	x0, [x21, #32]
   2a4c0:	mov	x1, #0x0                   	// #0
   2a4c4:	bl	13340 <__sancov_default_options@@Base+0x870>
   2a4c8:	str	xzr, [x21, #32]
   2a4cc:	b	2a454 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f44>
   2a4d0:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a4d4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a4d8:	add	x2, x2, #0xa18
   2a4dc:	add	x0, x0, #0x958
   2a4e0:	mov	x4, #0x0                   	// #0
   2a4e4:	mov	x3, #0x0                   	// #0
   2a4e8:	mov	w1, #0x12c                 	// #300
   2a4ec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a4f0:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a4f4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a4f8:	add	x2, x2, #0xa38
   2a4fc:	add	x0, x0, #0x958
   2a500:	mov	x4, #0x0                   	// #0
   2a504:	mov	x3, #0x0                   	// #0
   2a508:	mov	w1, #0x10d                 	// #269
   2a50c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a510:	mov	x0, x28
   2a514:	mov	x1, #0x0                   	// #0
   2a518:	ldp	x21, x22, [sp, #16]
   2a51c:	ldp	x23, x24, [sp, #32]
   2a520:	ldp	x25, x26, [sp, #48]
   2a524:	ldp	x27, x28, [sp, #64]
   2a528:	ldr	x30, [sp, #80]
   2a52c:	ldp	x19, x20, [sp], #112
   2a530:	b	13340 <__sancov_default_options@@Base+0x870>
   2a534:	nop
   2a538:	stp	x19, x20, [sp, #-64]!
   2a53c:	stp	x21, x22, [sp, #16]
   2a540:	mov	x22, x1
   2a544:	mov	x21, x0
   2a548:	stp	x23, x24, [sp, #32]
   2a54c:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a550:	add	x1, x23, #0x1a0
   2a554:	str	x30, [sp, #48]
   2a558:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2a55c:	mov	x2, #0x0                   	// #0
   2a560:	mov	x19, x0
   2a564:	mov	x1, #0x0                   	// #0
   2a568:	add	x0, x0, #0x1
   2a56c:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2a570:	str	x0, [x22, #40]
   2a574:	mov	x2, x19
   2a578:	mov	x1, x21
   2a57c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2a580:	add	x20, x21, x19
   2a584:	ldr	x0, [x22, #40]
   2a588:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   2a58c:	add	x1, x1, #0xf20
   2a590:	strb	wzr, [x0, x19]
   2a594:	ldrb	w0, [x21, x19]
   2a598:	cmp	w0, #0x0
   2a59c:	cinc	x20, x20, ne  // ne = any
   2a5a0:	mov	x0, x20
   2a5a4:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2a5a8:	mov	x19, x0
   2a5ac:	mov	x2, #0x0                   	// #0
   2a5b0:	mov	x1, #0x0                   	// #0
   2a5b4:	add	x0, x0, #0x1
   2a5b8:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2a5bc:	mov	x21, x0
   2a5c0:	mov	x1, x20
   2a5c4:	mov	x2, x19
   2a5c8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2a5cc:	add	x24, x20, x19
   2a5d0:	strb	wzr, [x21, x19]
   2a5d4:	ldrb	w0, [x20, x19]
   2a5d8:	cmp	w0, #0x0
   2a5dc:	cinc	x24, x24, ne  // ne = any
   2a5e0:	cbz	x21, 2a5f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50e0>
   2a5e4:	mov	x0, x21
   2a5e8:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2a5ec:	str	x0, [x22, #48]
   2a5f0:	mov	x0, x21
   2a5f4:	mov	x1, #0x0                   	// #0
   2a5f8:	bl	13340 <__sancov_default_options@@Base+0x870>
   2a5fc:	add	x1, x23, #0x1a0
   2a600:	mov	x0, x24
   2a604:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2a608:	mov	x20, x0
   2a60c:	mov	x2, #0x0                   	// #0
   2a610:	mov	x1, #0x0                   	// #0
   2a614:	add	x0, x0, #0x1
   2a618:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2a61c:	mov	x19, x0
   2a620:	mov	x1, x24
   2a624:	mov	x2, x20
   2a628:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2a62c:	strb	wzr, [x19, x20]
   2a630:	cbz	x19, 2a640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5130>
   2a634:	mov	x0, x19
   2a638:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2a63c:	str	x0, [x22, #56]
   2a640:	mov	x0, x19
   2a644:	mov	x1, #0x0                   	// #0
   2a648:	ldp	x21, x22, [sp, #16]
   2a64c:	ldp	x23, x24, [sp, #32]
   2a650:	ldr	x30, [sp, #48]
   2a654:	ldp	x19, x20, [sp], #64
   2a658:	b	13340 <__sancov_default_options@@Base+0x870>
   2a65c:	nop
   2a660:	add	x4, x0, #0x4, lsl #12
   2a664:	str	x30, [sp, #-16]!
   2a668:	adrp	x3, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2a66c:	mov	x5, #0xffffffffffffffff    	// #-1
   2a670:	add	x3, x3, #0xd70
   2a674:	stp	x3, x1, [x0]
   2a678:	str	x5, [x0, #16]
   2a67c:	str	xzr, [x0, #16408]
   2a680:	strh	wzr, [x4, #32]
   2a684:	strb	w2, [x4, #34]
   2a688:	cbz	x1, 2a69c <__sanitizer_get_module_and_offset_for_pc@@Base+0x518c>
   2a68c:	ldrb	w0, [x1]
   2a690:	cbz	w0, 2a6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x51ac>
   2a694:	ldr	x30, [sp], #16
   2a698:	ret
   2a69c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a6a0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a6a4:	add	x2, x2, #0x9e0
   2a6a8:	add	x0, x0, #0x958
   2a6ac:	mov	x4, #0x0                   	// #0
   2a6b0:	mov	x3, #0x0                   	// #0
   2a6b4:	mov	w1, #0x18f                 	// #399
   2a6b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a6bc:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a6c0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a6c4:	add	x2, x2, #0x9f8
   2a6c8:	add	x0, x0, #0x958
   2a6cc:	mov	x4, #0x0                   	// #0
   2a6d0:	mov	x3, #0x0                   	// #0
   2a6d4:	mov	w1, #0x190                 	// #400
   2a6d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2a6dc:	nop
   2a6e0:	stp	x19, x20, [sp, #-80]!
   2a6e4:	mov	x19, x0
   2a6e8:	stp	x25, x30, [sp, #48]
   2a6ec:	add	x25, x0, #0x4, lsl #12
   2a6f0:	ldrb	w0, [x25, #32]
   2a6f4:	cbnz	w0, 2a818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5308>
   2a6f8:	stp	x21, x22, [sp, #16]
   2a6fc:	mov	x21, x1
   2a700:	ldr	x22, [x19, #8]
   2a704:	bl	15da0 <__sancov_default_options@@Base+0x32d0>
   2a708:	mov	x20, x0
   2a70c:	cbz	x0, 2a74c <__sanitizer_get_module_and_offset_for_pc@@Base+0x523c>
   2a710:	mov	x0, x22
   2a714:	bl	15860 <__sancov_default_options@@Base+0x2d90>
   2a718:	mov	x1, x0
   2a71c:	cbz	x0, 2a74c <__sanitizer_get_module_and_offset_for_pc@@Base+0x523c>
   2a720:	mov	x0, x20
   2a724:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2a728:	cbnz	w0, 2a74c <__sanitizer_get_module_and_offset_for_pc@@Base+0x523c>
   2a72c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a730:	add	x0, x0, #0xa60
   2a734:	bl	22d00 <OnPrint@@Base+0x398>
   2a738:	mov	x20, #0x0                   	// #0
   2a73c:	mov	w0, #0x1                   	// #1
   2a740:	strb	w0, [x25, #32]
   2a744:	ldp	x21, x22, [sp, #16]
   2a748:	b	2a81c <__sanitizer_get_module_and_offset_for_pc@@Base+0x530c>
   2a74c:	ldr	x0, [x19, #16408]
   2a750:	cmp	x0, #0x4
   2a754:	b.hi	2a80c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52fc>  // b.pmore
   2a758:	adrp	x22, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   2a75c:	add	x22, x22, #0xac8
   2a760:	stp	x23, x24, [sp, #32]
   2a764:	adrp	x23, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a768:	add	x24, sp, #0x48
   2a76c:	add	x23, x23, #0xa98
   2a770:	ldp	w2, w0, [x19, #16]
   2a774:	cmn	w2, #0x1
   2a778:	b.eq	2a7e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52d0>  // b.none
   2a77c:	cmn	w0, #0x1
   2a780:	b.eq	2a82c <__sanitizer_get_module_and_offset_for_pc@@Base+0x531c>  // b.none
   2a784:	mov	x0, x21
   2a788:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2a78c:	mov	x20, x0
   2a790:	cbz	x0, 2a838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5328>
   2a794:	mov	x2, x0
   2a798:	ldr	w0, [x19, #20]
   2a79c:	mov	x3, x24
   2a7a0:	mov	x1, x21
   2a7a4:	mov	x4, #0x0                   	// #0
   2a7a8:	str	xzr, [sp, #72]
   2a7ac:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   2a7b0:	tst	w0, #0xff
   2a7b4:	b.eq	2a7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52b4>  // b.none
   2a7b8:	ldr	x0, [sp, #72]
   2a7bc:	cmp	x20, x0
   2a7c0:	b.eq	2a838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5328>  // b.none
   2a7c4:	ldr	w1, [x19, #20]
   2a7c8:	mov	x0, x23
   2a7cc:	bl	22d00 <OnPrint@@Base+0x398>
   2a7d0:	ldr	w2, [x19, #16]
   2a7d4:	cmn	w2, #0x1
   2a7d8:	b.ne	2a82c <__sanitizer_get_module_and_offset_for_pc@@Base+0x531c>  // b.any
   2a7dc:	ldr	w0, [x19, #20]
   2a7e0:	cmn	w0, #0x1
   2a7e4:	b.eq	2a7ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>  // b.none
   2a7e8:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   2a7ec:	mov	x0, x19
   2a7f0:	bl	2b648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2a7f4:	ldr	x0, [x19, #16408]
   2a7f8:	add	x0, x0, #0x1
   2a7fc:	str	x0, [x19, #16408]
   2a800:	cmp	x0, #0x4
   2a804:	b.ls	2a770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>  // b.plast
   2a808:	ldp	x23, x24, [sp, #32]
   2a80c:	ldrb	w0, [x25, #32]
   2a810:	cbz	w0, 2a88c <__sanitizer_get_module_and_offset_for_pc@@Base+0x537c>
   2a814:	ldp	x21, x22, [sp, #16]
   2a818:	mov	x20, #0x0                   	// #0
   2a81c:	mov	x0, x20
   2a820:	ldp	x25, x30, [sp, #48]
   2a824:	ldp	x19, x20, [sp], #80
   2a828:	ret
   2a82c:	mov	w0, w2
   2a830:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   2a834:	b	2a7dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x52cc>
   2a838:	mov	x20, x19
   2a83c:	mov	x2, #0x4000                	// #16384
   2a840:	ldr	x0, [x20], #24
   2a844:	mov	x1, x20
   2a848:	ldr	x3, [x0, #16]
   2a84c:	mov	x0, x19
   2a850:	cmp	x3, x22
   2a854:	b.ne	2a87c <__sanitizer_get_module_and_offset_for_pc@@Base+0x536c>  // b.any
   2a858:	bl	29990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4480>
   2a85c:	and	w0, w0, #0xff
   2a860:	cbz	w0, 2a7d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c0>
   2a864:	mov	x0, x20
   2a868:	ldp	x21, x22, [sp, #16]
   2a86c:	ldp	x23, x24, [sp, #32]
   2a870:	ldp	x25, x30, [sp, #48]
   2a874:	ldp	x19, x20, [sp], #80
   2a878:	ret
   2a87c:	blr	x3
   2a880:	and	w0, w0, #0xff
   2a884:	cbz	w0, 2a7d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c0>
   2a888:	b	2a864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   2a88c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a890:	add	x0, x0, #0xac8
   2a894:	bl	22d00 <OnPrint@@Base+0x398>
   2a898:	mov	x20, #0x0                   	// #0
   2a89c:	mov	w0, #0x1                   	// #1
   2a8a0:	strb	w0, [x25, #32]
   2a8a4:	mov	x0, x20
   2a8a8:	ldp	x21, x22, [sp, #16]
   2a8ac:	ldp	x25, x30, [sp, #48]
   2a8b0:	ldp	x19, x20, [sp], #80
   2a8b4:	ret
   2a8b8:	stp	x19, x20, [sp, #-32]!
   2a8bc:	mov	w7, w4
   2a8c0:	mov	x4, x2
   2a8c4:	str	x30, [sp, #16]
   2a8c8:	cbz	x2, 2aa08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54f8>
   2a8cc:	and	w1, w1, #0xff
   2a8d0:	mov	x5, x3
   2a8d4:	cmp	w1, #0x0
   2a8d8:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a8dc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a8e0:	add	x3, x3, #0xb00
   2a8e4:	add	x1, x1, #0xb08
   2a8e8:	mov	x19, x0
   2a8ec:	add	x20, x0, #0x18
   2a8f0:	csel	x3, x1, x3, ne  // ne = any
   2a8f4:	cbz	w7, 2a95c <__sanitizer_get_module_and_offset_for_pc@@Base+0x544c>
   2a8f8:	cmp	w7, #0x5
   2a8fc:	b.eq	2aa24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5514>  // b.none
   2a900:	b.hi	2a9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x549c>  // b.pmore
   2a904:	cmp	w7, #0x3
   2a908:	b.eq	2a9fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x54ec>  // b.none
   2a90c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a910:	cmp	w7, #0x4
   2a914:	add	x1, x1, #0x1e8
   2a918:	b.ne	2a998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5488>  // b.any
   2a91c:	nop
   2a920:	mov	x6, x5
   2a924:	mov	x0, x20
   2a928:	mov	x5, x1
   2a92c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a930:	mov	x1, #0x4000                	// #16384
   2a934:	add	x2, x2, #0xb60
   2a938:	bl	22970 <OnPrint@@Base+0x8>
   2a93c:	mov	w1, #0x3fff                	// #16383
   2a940:	cmp	w0, w1
   2a944:	b.gt	2a97c <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   2a948:	mov	x1, x20
   2a94c:	ldr	x0, [x19, #16]
   2a950:	ldr	x30, [sp, #16]
   2a954:	ldp	x19, x20, [sp], #32
   2a958:	b	2a6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   2a95c:	mov	x1, #0x4000                	// #16384
   2a960:	mov	x0, x20
   2a964:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a968:	add	x2, x2, #0xb28
   2a96c:	bl	22970 <OnPrint@@Base+0x8>
   2a970:	mov	w1, #0x3fff                	// #16383
   2a974:	cmp	w0, w1
   2a978:	b.le	2a948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5438>
   2a97c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a980:	add	x0, x0, #0xb38
   2a984:	bl	22d00 <OnPrint@@Base+0x398>
   2a988:	mov	x0, #0x0                   	// #0
   2a98c:	ldr	x30, [sp, #16]
   2a990:	ldp	x19, x20, [sp], #32
   2a994:	ret
   2a998:	cmp	w7, #0x1
   2a99c:	b.ne	2a9c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54b8>  // b.any
   2a9a0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a9a4:	add	x1, x1, #0x1d0
   2a9a8:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2a9ac:	cmp	w7, #0x7
   2a9b0:	b.eq	2a9f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54e0>  // b.none
   2a9b4:	cmp	w7, #0x8
   2a9b8:	b.ne	2a9dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x54cc>  // b.any
   2a9bc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a9c0:	add	x1, x1, #0x1f0
   2a9c4:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2a9c8:	cmp	w7, #0x2
   2a9cc:	b.ne	2aa30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5520>  // b.any
   2a9d0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a9d4:	add	x1, x1, #0x1c8
   2a9d8:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2a9dc:	cmp	w7, #0x6
   2a9e0:	b.ne	2aa30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5520>  // b.any
   2a9e4:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a9e8:	add	x1, x1, #0x1f8
   2a9ec:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2a9f0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2a9f4:	add	x1, x1, #0x1c0
   2a9f8:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2a9fc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aa00:	add	x1, x1, #0x1e0
   2aa04:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2aa08:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aa0c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aa10:	add	x2, x2, #0xb10
   2aa14:	add	x0, x0, #0x958
   2aa18:	mov	x3, #0x0                   	// #0
   2aa1c:	mov	w1, #0x173                 	// #371
   2aa20:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2aa24:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aa28:	add	x1, x1, #0x1d8
   2aa2c:	b	2a920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2aa30:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aa34:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2aa38:	add	x2, x2, #0x208
   2aa3c:	add	x0, x0, #0x578
   2aa40:	mov	x4, #0x0                   	// #0
   2aa44:	mov	x3, #0x0                   	// #0
   2aa48:	mov	w1, #0x2a9                 	// #681
   2aa4c:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2aa50:	stp	x19, x20, [sp, #-64]!
   2aa54:	mov	x19, x2
   2aa58:	ldr	w4, [x2, #16]
   2aa5c:	ldr	x2, [x2]
   2aa60:	stp	x21, x22, [sp, #16]
   2aa64:	mov	x21, x1
   2aa68:	ldr	x3, [x19, #8]
   2aa6c:	mov	w1, #0x1                   	// #1
   2aa70:	str	x30, [sp, #56]
   2aa74:	bl	2a8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53a8>
   2aa78:	cbnz	x0, 2aa90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5580>
   2aa7c:	mov	w0, #0x0                   	// #0
   2aa80:	ldp	x21, x22, [sp, #16]
   2aa84:	ldr	x30, [sp, #56]
   2aa88:	ldp	x19, x20, [sp], #64
   2aa8c:	ret
   2aa90:	mov	x20, x0
   2aa94:	stp	x23, x24, [sp, #32]
   2aa98:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aa9c:	add	x1, x24, #0x1a0
   2aaa0:	str	x25, [sp, #48]
   2aaa4:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2aaa8:	mov	x22, x0
   2aaac:	mov	x2, #0x0                   	// #0
   2aab0:	mov	x1, #0x0                   	// #0
   2aab4:	add	x0, x0, #0x1
   2aab8:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2aabc:	str	x0, [x19, #40]
   2aac0:	mov	x2, x22
   2aac4:	mov	x1, x20
   2aac8:	add	x23, x20, x22
   2aacc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2aad0:	ldr	x0, [x19, #40]
   2aad4:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   2aad8:	add	x1, x1, #0xf20
   2aadc:	strb	wzr, [x0, x22]
   2aae0:	ldrb	w0, [x20, x22]
   2aae4:	cmp	w0, #0x0
   2aae8:	cinc	x23, x23, ne  // ne = any
   2aaec:	mov	x0, x23
   2aaf0:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2aaf4:	mov	x20, x0
   2aaf8:	mov	x2, #0x0                   	// #0
   2aafc:	mov	x1, #0x0                   	// #0
   2ab00:	add	x0, x0, #0x1
   2ab04:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2ab08:	mov	x22, x0
   2ab0c:	mov	x1, x23
   2ab10:	mov	x2, x20
   2ab14:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2ab18:	add	x25, x23, x20
   2ab1c:	strb	wzr, [x22, x20]
   2ab20:	ldrb	w0, [x23, x20]
   2ab24:	cmp	w0, #0x0
   2ab28:	cinc	x25, x25, ne  // ne = any
   2ab2c:	cbz	x22, 2ab3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x562c>
   2ab30:	mov	x0, x22
   2ab34:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2ab38:	str	x0, [x19, #48]
   2ab3c:	mov	x0, x22
   2ab40:	mov	x1, #0x0                   	// #0
   2ab44:	bl	13340 <__sancov_default_options@@Base+0x870>
   2ab48:	add	x1, x24, #0x1a0
   2ab4c:	mov	x0, x25
   2ab50:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2ab54:	mov	x22, x0
   2ab58:	mov	x2, #0x0                   	// #0
   2ab5c:	mov	x1, #0x0                   	// #0
   2ab60:	add	x0, x0, #0x1
   2ab64:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2ab68:	mov	x20, x0
   2ab6c:	mov	x1, x25
   2ab70:	mov	x2, x22
   2ab74:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2ab78:	strb	wzr, [x20, x22]
   2ab7c:	cbz	x20, 2ab8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x567c>
   2ab80:	mov	x0, x20
   2ab84:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2ab88:	str	x0, [x19, #56]
   2ab8c:	mov	x0, x20
   2ab90:	mov	x1, #0x0                   	// #0
   2ab94:	bl	13340 <__sancov_default_options@@Base+0x870>
   2ab98:	ldr	x2, [x19, #48]
   2ab9c:	mov	w0, #0x1                   	// #1
   2aba0:	ldr	x1, [x19, #8]
   2aba4:	add	x21, x21, x2
   2aba8:	ldp	x23, x24, [sp, #32]
   2abac:	sub	x21, x21, x1
   2abb0:	ldr	x25, [sp, #48]
   2abb4:	str	x21, [x19, #48]
   2abb8:	ldp	x21, x22, [sp, #16]
   2abbc:	ldr	x30, [sp, #56]
   2abc0:	ldp	x19, x20, [sp], #64
   2abc4:	ret
   2abc8:	stp	x19, x20, [sp, #-96]!
   2abcc:	mov	x19, x2
   2abd0:	stp	x23, x24, [sp, #32]
   2abd4:	add	x24, x0, #0x70
   2abd8:	stp	x21, x22, [sp, #16]
   2abdc:	mov	x22, x1
   2abe0:	stp	x25, x26, [sp, #48]
   2abe4:	mov	x25, x0
   2abe8:	mov	x0, x24
   2abec:	str	x30, [sp, #72]
   2abf0:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2abf4:	mov	x1, x22
   2abf8:	mov	x0, x25
   2abfc:	bl	29f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   2ac00:	cbz	x0, 2ae04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58f4>
   2ac04:	mov	x1, x0
   2ac08:	mov	x0, x19
   2ac0c:	add	x23, sp, #0x58
   2ac10:	ldp	x20, x21, [x1]
   2ac14:	ldr	w26, [x1, #24]
   2ac18:	bl	28e90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3980>
   2ac1c:	mov	x0, x20
   2ac20:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   2ac24:	ldr	x20, [x25, #208]
   2ac28:	sub	x21, x22, x21
   2ac2c:	stp	x0, x21, [x19]
   2ac30:	str	w26, [x19, #16]
   2ac34:	adrp	x26, 2a000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4af0>
   2ac38:	add	x26, x26, #0xa50
   2ac3c:	cbz	x20, 2adfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x58ec>
   2ac40:	str	x27, [sp, #64]
   2ac44:	b	2ac58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5748>
   2ac48:	mov	x0, x23
   2ac4c:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2ac50:	ldr	x20, [x20, #8]
   2ac54:	cbz	x20, 2adf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>
   2ac58:	mov	x1, x25
   2ac5c:	mov	x0, x23
   2ac60:	bl	292c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   2ac64:	ldr	x2, [x20]
   2ac68:	mov	x0, x20
   2ac6c:	mov	w1, #0x1                   	// #1
   2ac70:	ldr	x3, [x2, #8]
   2ac74:	cmp	x3, x26
   2ac78:	b.ne	2add4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58c4>  // b.any
   2ac7c:	ldp	x2, x3, [x19]
   2ac80:	ldr	w4, [x19, #16]
   2ac84:	bl	2a8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53a8>
   2ac88:	mov	x21, x0
   2ac8c:	cbz	x0, 2ac48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5738>
   2ac90:	adrp	x25, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2ac94:	add	x1, x25, #0x1a0
   2ac98:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2ac9c:	mov	x20, x0
   2aca0:	mov	x2, #0x0                   	// #0
   2aca4:	mov	x1, #0x0                   	// #0
   2aca8:	add	x0, x0, #0x1
   2acac:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2acb0:	str	x0, [x19, #40]
   2acb4:	mov	x2, x20
   2acb8:	mov	x1, x21
   2acbc:	add	x26, x21, x20
   2acc0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2acc4:	ldr	x0, [x19, #40]
   2acc8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   2accc:	add	x1, x1, #0xf20
   2acd0:	strb	wzr, [x0, x20]
   2acd4:	ldrb	w0, [x21, x20]
   2acd8:	cmp	w0, #0x0
   2acdc:	cinc	x26, x26, ne  // ne = any
   2ace0:	mov	x0, x26
   2ace4:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2ace8:	mov	x20, x0
   2acec:	mov	x2, #0x0                   	// #0
   2acf0:	mov	x1, #0x0                   	// #0
   2acf4:	add	x0, x0, #0x1
   2acf8:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2acfc:	mov	x21, x0
   2ad00:	mov	x1, x26
   2ad04:	mov	x2, x20
   2ad08:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2ad0c:	add	x27, x26, x20
   2ad10:	strb	wzr, [x21, x20]
   2ad14:	ldrb	w0, [x26, x20]
   2ad18:	cmp	w0, #0x0
   2ad1c:	cinc	x27, x27, ne  // ne = any
   2ad20:	cbz	x21, 2ad30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5820>
   2ad24:	mov	x0, x21
   2ad28:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2ad2c:	str	x0, [x19, #48]
   2ad30:	mov	x0, x21
   2ad34:	mov	x1, #0x0                   	// #0
   2ad38:	bl	13340 <__sancov_default_options@@Base+0x870>
   2ad3c:	add	x1, x25, #0x1a0
   2ad40:	mov	x0, x27
   2ad44:	bl	1bb00 <__sanitizer_set_report_fd@@Base+0x2238>
   2ad48:	mov	x21, x0
   2ad4c:	mov	x2, #0x0                   	// #0
   2ad50:	mov	x1, #0x0                   	// #0
   2ad54:	add	x0, x0, #0x1
   2ad58:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2ad5c:	mov	x20, x0
   2ad60:	mov	x1, x27
   2ad64:	mov	x2, x21
   2ad68:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2ad6c:	strb	wzr, [x20, x21]
   2ad70:	cbz	x20, 2ad80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5870>
   2ad74:	mov	x0, x20
   2ad78:	bl	1cf38 <__sanitizer_set_report_fd@@Base+0x3670>
   2ad7c:	str	x0, [x19, #56]
   2ad80:	mov	x0, x20
   2ad84:	mov	x1, #0x0                   	// #0
   2ad88:	bl	13340 <__sancov_default_options@@Base+0x870>
   2ad8c:	ldr	x1, [x19, #48]
   2ad90:	ldr	x0, [x19, #8]
   2ad94:	add	x22, x22, x1
   2ad98:	sub	x22, x22, x0
   2ad9c:	str	x22, [x19, #48]
   2ada0:	mov	x0, x23
   2ada4:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2ada8:	ldr	x27, [sp, #64]
   2adac:	mov	w19, #0x1                   	// #1
   2adb0:	mov	x0, x24
   2adb4:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2adb8:	mov	w0, w19
   2adbc:	ldp	x21, x22, [sp, #16]
   2adc0:	ldp	x23, x24, [sp, #32]
   2adc4:	ldp	x25, x26, [sp, #48]
   2adc8:	ldr	x30, [sp, #72]
   2adcc:	ldp	x19, x20, [sp], #96
   2add0:	ret
   2add4:	mov	x2, x19
   2add8:	mov	x1, x22
   2addc:	blr	x3
   2ade0:	tst	w0, #0xff
   2ade4:	b.ne	2ada0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5890>  // b.any
   2ade8:	mov	x0, x23
   2adec:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2adf0:	ldr	x20, [x20, #8]
   2adf4:	cbnz	x20, 2ac58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5748>
   2adf8:	ldr	x27, [sp, #64]
   2adfc:	mov	w19, #0x1                   	// #1
   2ae00:	b	2adb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a0>
   2ae04:	mov	w19, #0x0                   	// #0
   2ae08:	b	2adb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a0>
   2ae0c:	nop
   2ae10:	stp	x19, x20, [sp, #-128]!
   2ae14:	mov	x20, x0
   2ae18:	stp	x27, x28, [sp, #64]
   2ae1c:	add	x28, x0, #0x70
   2ae20:	mov	x0, x28
   2ae24:	stp	x21, x22, [sp, #16]
   2ae28:	mov	x22, x1
   2ae2c:	stp	x23, x24, [sp, #32]
   2ae30:	str	x30, [sp, #80]
   2ae34:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2ae38:	mov	x0, x22
   2ae3c:	bl	28db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   2ae40:	mov	x1, x22
   2ae44:	mov	x23, x0
   2ae48:	mov	x0, x20
   2ae4c:	bl	29f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   2ae50:	cbz	x0, 2af84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a74>
   2ae54:	mov	x2, x0
   2ae58:	add	x21, x23, #0x8
   2ae5c:	mov	x0, x21
   2ae60:	ldr	w3, [x2, #24]
   2ae64:	ldp	x1, x2, [x2]
   2ae68:	sub	x2, x22, x2
   2ae6c:	bl	28d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   2ae70:	ldr	x19, [x20, #208]
   2ae74:	cbz	x19, 2af84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a74>
   2ae78:	adrp	x27, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2ae7c:	add	x24, sp, #0x78
   2ae80:	add	x0, x27, #0xb60
   2ae84:	stp	x25, x26, [sp, #48]
   2ae88:	adrp	x25, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   2ae8c:	adrp	x26, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2ae90:	add	x25, x25, #0x98
   2ae94:	add	x26, x26, #0xb00
   2ae98:	str	x0, [sp, #104]
   2ae9c:	b	2aee4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>
   2aea0:	mov	x1, #0x4000                	// #16384
   2aea4:	mov	x3, x26
   2aea8:	mov	x0, x27
   2aeac:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2aeb0:	add	x2, x2, #0xb28
   2aeb4:	bl	22970 <OnPrint@@Base+0x8>
   2aeb8:	mov	w1, #0x3fff                	// #16383
   2aebc:	cmp	w0, w1
   2aec0:	b.gt	2af60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a50>
   2aec4:	ldr	x0, [x19, #16]
   2aec8:	mov	x1, x27
   2aecc:	bl	2a6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   2aed0:	cbnz	x0, 2aff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ae4>
   2aed4:	mov	x0, x24
   2aed8:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2aedc:	ldr	x19, [x19, #8]
   2aee0:	cbz	x19, 2af80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a70>
   2aee4:	mov	x0, x24
   2aee8:	mov	x1, x20
   2aeec:	bl	292c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   2aef0:	ldr	x0, [x19]
   2aef4:	ldr	x3, [x0]
   2aef8:	cmp	x3, x25
   2aefc:	b.ne	2b00c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5afc>  // b.any
   2af00:	ldp	x4, x5, [x21, #8]
   2af04:	ldr	w1, [x21, #24]
   2af08:	cbz	x4, 2b04c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b3c>
   2af0c:	add	x27, x19, #0x18
   2af10:	cbz	w1, 2aea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5990>
   2af14:	cmp	w1, #0x5
   2af18:	b.eq	2b068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b58>  // b.none
   2af1c:	b.hi	2afa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a98>  // b.pmore
   2af20:	cmp	w1, #0x3
   2af24:	b.eq	2b040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b30>  // b.none
   2af28:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2af2c:	cmp	w1, #0x4
   2af30:	add	x0, x0, #0x1e8
   2af34:	b.ne	2afc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ab4>  // b.any
   2af38:	ldr	x2, [sp, #104]
   2af3c:	mov	x6, x5
   2af40:	mov	x1, #0x4000                	// #16384
   2af44:	mov	x5, x0
   2af48:	mov	x3, x26
   2af4c:	mov	x0, x27
   2af50:	bl	22970 <OnPrint@@Base+0x8>
   2af54:	mov	w1, #0x3fff                	// #16383
   2af58:	cmp	w0, w1
   2af5c:	b.le	2aec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b4>
   2af60:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2af64:	add	x0, x0, #0xb38
   2af68:	bl	22d00 <OnPrint@@Base+0x398>
   2af6c:	mov	x0, x24
   2af70:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2af74:	ldr	x19, [x19, #8]
   2af78:	cbnz	x19, 2aee4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>
   2af7c:	nop
   2af80:	ldp	x25, x26, [sp, #48]
   2af84:	mov	x0, x28
   2af88:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2af8c:	mov	x0, x23
   2af90:	ldp	x21, x22, [sp, #16]
   2af94:	ldp	x23, x24, [sp, #32]
   2af98:	ldp	x27, x28, [sp, #64]
   2af9c:	ldr	x30, [sp, #80]
   2afa0:	ldp	x19, x20, [sp], #128
   2afa4:	ret
   2afa8:	cmp	w1, #0x7
   2afac:	b.eq	2b034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b24>  // b.none
   2afb0:	cmp	w1, #0x8
   2afb4:	b.ne	2afe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad0>  // b.any
   2afb8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2afbc:	add	x0, x0, #0x1f0
   2afc0:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2afc4:	cmp	w1, #0x1
   2afc8:	b.eq	2b028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b18>  // b.none
   2afcc:	cmp	w1, #0x2
   2afd0:	b.ne	2b074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b64>  // b.any
   2afd4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2afd8:	add	x0, x0, #0x1c8
   2afdc:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2afe0:	cmp	w1, #0x6
   2afe4:	b.ne	2b074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b64>  // b.any
   2afe8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2afec:	add	x0, x0, #0x1f8
   2aff0:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2aff4:	mov	x1, x23
   2aff8:	bl	2a2a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   2affc:	mov	x0, x24
   2b000:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2b004:	ldp	x25, x26, [sp, #48]
   2b008:	b	2af84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a74>
   2b00c:	mov	x2, x23
   2b010:	mov	x1, x22
   2b014:	mov	x0, x19
   2b018:	blr	x3
   2b01c:	tst	w0, #0xff
   2b020:	b.eq	2aed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c4>  // b.none
   2b024:	b	2affc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5aec>
   2b028:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b02c:	add	x0, x0, #0x1d0
   2b030:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2b034:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b038:	add	x0, x0, #0x1c0
   2b03c:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2b040:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b044:	add	x0, x0, #0x1e0
   2b048:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2b04c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b050:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b054:	add	x2, x2, #0xb10
   2b058:	add	x0, x0, #0x958
   2b05c:	mov	x3, #0x0                   	// #0
   2b060:	mov	w1, #0x173                 	// #371
   2b064:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b068:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b06c:	add	x0, x0, #0x1d8
   2b070:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2b074:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b078:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2b07c:	add	x2, x2, #0x208
   2b080:	add	x0, x0, #0x578
   2b084:	mov	x4, #0x0                   	// #0
   2b088:	mov	x3, #0x0                   	// #0
   2b08c:	mov	w1, #0x2a9                 	// #681
   2b090:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b094:	nop
   2b098:	stp	x19, x20, [sp, #-32]!
   2b09c:	mov	x19, x2
   2b0a0:	mov	x20, x0
   2b0a4:	ldp	x4, x5, [x2, #16]
   2b0a8:	stp	x21, x30, [sp, #16]
   2b0ac:	ldr	w2, [x2, #32]
   2b0b0:	cbz	x4, 2b1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cdc>
   2b0b4:	add	x21, x0, #0x18
   2b0b8:	cbz	w2, 2b140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c30>
   2b0bc:	cmp	w2, #0x5
   2b0c0:	b.eq	2b208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cf8>  // b.none
   2b0c4:	b.hi	2b190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c80>  // b.pmore
   2b0c8:	cmp	w2, #0x3
   2b0cc:	b.eq	2b1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cd0>  // b.none
   2b0d0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b0d4:	cmp	w2, #0x4
   2b0d8:	add	x1, x1, #0x1e8
   2b0dc:	b.ne	2b17c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c6c>  // b.any
   2b0e0:	mov	x6, x5
   2b0e4:	mov	x0, x21
   2b0e8:	mov	x5, x1
   2b0ec:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b0f0:	mov	x1, #0x4000                	// #16384
   2b0f4:	add	x3, x3, #0xb00
   2b0f8:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b0fc:	add	x2, x2, #0xb60
   2b100:	bl	22970 <OnPrint@@Base+0x8>
   2b104:	mov	w1, #0x3fff                	// #16383
   2b108:	cmp	w0, w1
   2b10c:	b.gt	2b168 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c58>
   2b110:	ldr	x0, [x20, #16]
   2b114:	mov	x1, x21
   2b118:	bl	2a6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   2b11c:	mov	w1, #0x0                   	// #0
   2b120:	cbz	x0, 2b130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c20>
   2b124:	mov	x1, x19
   2b128:	bl	2a2a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   2b12c:	mov	w1, #0x1                   	// #1
   2b130:	mov	w0, w1
   2b134:	ldp	x21, x30, [sp, #16]
   2b138:	ldp	x19, x20, [sp], #32
   2b13c:	ret
   2b140:	mov	x1, #0x4000                	// #16384
   2b144:	mov	x0, x21
   2b148:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b14c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b150:	add	x3, x3, #0xb00
   2b154:	add	x2, x2, #0xb28
   2b158:	bl	22970 <OnPrint@@Base+0x8>
   2b15c:	mov	w1, #0x3fff                	// #16383
   2b160:	cmp	w0, w1
   2b164:	b.le	2b110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c00>
   2b168:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b16c:	add	x0, x0, #0xb38
   2b170:	bl	22d00 <OnPrint@@Base+0x398>
   2b174:	mov	w1, #0x0                   	// #0
   2b178:	b	2b130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c20>
   2b17c:	cmp	w2, #0x1
   2b180:	b.ne	2b1ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c9c>  // b.any
   2b184:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b188:	add	x1, x1, #0x1d0
   2b18c:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b190:	cmp	w2, #0x7
   2b194:	b.eq	2b1d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cc4>  // b.none
   2b198:	cmp	w2, #0x8
   2b19c:	b.ne	2b1c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cb0>  // b.any
   2b1a0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1a4:	add	x1, x1, #0x1f0
   2b1a8:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b1ac:	cmp	w2, #0x2
   2b1b0:	b.ne	2b214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d04>  // b.any
   2b1b4:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1b8:	add	x1, x1, #0x1c8
   2b1bc:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b1c0:	cmp	w2, #0x6
   2b1c4:	b.ne	2b214 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d04>  // b.any
   2b1c8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1cc:	add	x1, x1, #0x1f8
   2b1d0:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b1d4:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1d8:	add	x1, x1, #0x1c0
   2b1dc:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b1e0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1e4:	add	x1, x1, #0x1e0
   2b1e8:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b1ec:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1f0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b1f4:	add	x2, x2, #0xb10
   2b1f8:	add	x0, x0, #0x958
   2b1fc:	mov	x3, #0x0                   	// #0
   2b200:	mov	w1, #0x173                 	// #371
   2b204:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b208:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b20c:	add	x1, x1, #0x1d8
   2b210:	b	2b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2b214:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b218:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2b21c:	add	x2, x2, #0x208
   2b220:	add	x0, x0, #0x578
   2b224:	mov	x4, #0x0                   	// #0
   2b228:	mov	x3, #0x0                   	// #0
   2b22c:	mov	w1, #0x2a9                 	// #681
   2b230:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b234:	nop
   2b238:	stp	x19, x20, [sp, #-48]!
   2b23c:	mov	x19, x0
   2b240:	ldr	w0, [x0, #16]
   2b244:	str	x30, [sp, #24]
   2b248:	cmn	w0, #0x1
   2b24c:	b.eq	2b314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e04>  // b.none
   2b250:	ldr	w0, [x19, #20]
   2b254:	cmn	w0, #0x1
   2b258:	b.eq	2b314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e04>  // b.none
   2b25c:	mov	x20, x1
   2b260:	mov	x0, x1
   2b264:	str	x21, [sp, #16]
   2b268:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2b26c:	mov	x21, x0
   2b270:	cbnz	x0, 2b2bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dac>
   2b274:	mov	x20, x19
   2b278:	adrp	x0, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3af0>
   2b27c:	add	x0, x0, #0xac8
   2b280:	ldr	x1, [x20], #24
   2b284:	ldr	x3, [x1, #16]
   2b288:	cmp	x3, x0
   2b28c:	b.ne	2b328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e18>  // b.any
   2b290:	mov	x0, x19
   2b294:	mov	x1, x20
   2b298:	mov	x2, #0x4000                	// #16384
   2b29c:	bl	29990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4480>
   2b2a0:	and	w0, w0, #0xff
   2b2a4:	ldr	x21, [sp, #16]
   2b2a8:	cbz	w0, 2b314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e04>
   2b2ac:	mov	x0, x20
   2b2b0:	ldr	x30, [sp, #24]
   2b2b4:	ldp	x19, x20, [sp], #48
   2b2b8:	ret
   2b2bc:	mov	x2, x0
   2b2c0:	ldr	w0, [x19, #20]
   2b2c4:	mov	x1, x20
   2b2c8:	add	x3, sp, #0x28
   2b2cc:	mov	x4, #0x0                   	// #0
   2b2d0:	str	xzr, [sp, #40]
   2b2d4:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   2b2d8:	tst	w0, #0xff
   2b2dc:	b.eq	2b2ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ddc>  // b.none
   2b2e0:	ldr	x0, [sp, #40]
   2b2e4:	cmp	x21, x0
   2b2e8:	b.eq	2b274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d64>  // b.none
   2b2ec:	ldr	w1, [x19, #20]
   2b2f0:	mov	x20, #0x0                   	// #0
   2b2f4:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b2f8:	add	x0, x0, #0xa98
   2b2fc:	bl	22d00 <OnPrint@@Base+0x398>
   2b300:	mov	x0, x20
   2b304:	ldr	x21, [sp, #16]
   2b308:	ldr	x30, [sp, #24]
   2b30c:	ldp	x19, x20, [sp], #48
   2b310:	ret
   2b314:	mov	x20, #0x0                   	// #0
   2b318:	mov	x0, x20
   2b31c:	ldr	x30, [sp, #24]
   2b320:	ldp	x19, x20, [sp], #48
   2b324:	ret
   2b328:	mov	x0, x19
   2b32c:	mov	x1, x20
   2b330:	mov	x2, #0x4000                	// #16384
   2b334:	blr	x3
   2b338:	and	w0, w0, #0xff
   2b33c:	b	2b2a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d94>
   2b340:	stp	x19, x30, [sp, #-16]!
   2b344:	mov	x19, x0
   2b348:	ldr	w0, [x0, #16]
   2b34c:	cmn	w0, #0x1
   2b350:	b.eq	2b358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e48>  // b.none
   2b354:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   2b358:	ldr	w0, [x19, #20]
   2b35c:	cmn	w0, #0x1
   2b360:	b.eq	2b368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e58>  // b.none
   2b364:	bl	20810 <__sanitizer_set_report_fd@@Base+0x6f48>
   2b368:	mov	x0, x19
   2b36c:	ldp	x19, x30, [sp], #16
   2b370:	b	2b648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2b374:	nop
   2b378:	cbnz	x2, 2b384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e74>
   2b37c:	mov	w0, #0x1                   	// #1
   2b380:	ret
   2b384:	stp	x19, x20, [sp, #-48]!
   2b388:	mov	x20, x0
   2b38c:	mov	x19, x2
   2b390:	ldr	w0, [x0, #20]
   2b394:	add	x3, sp, #0x28
   2b398:	mov	x4, #0x0                   	// #0
   2b39c:	str	x30, [sp, #16]
   2b3a0:	str	xzr, [sp, #40]
   2b3a4:	bl	20868 <__sanitizer_set_report_fd@@Base+0x6fa0>
   2b3a8:	tst	w0, #0xff
   2b3ac:	b.eq	2b3cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ebc>  // b.none
   2b3b0:	ldr	x0, [sp, #40]
   2b3b4:	cmp	x0, x19
   2b3b8:	b.ne	2b3cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ebc>  // b.any
   2b3bc:	mov	w0, #0x1                   	// #1
   2b3c0:	ldr	x30, [sp, #16]
   2b3c4:	ldp	x19, x20, [sp], #48
   2b3c8:	ret
   2b3cc:	ldr	w1, [x20, #20]
   2b3d0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b3d4:	add	x0, x0, #0xa98
   2b3d8:	bl	22d00 <OnPrint@@Base+0x398>
   2b3dc:	mov	w0, #0x0                   	// #0
   2b3e0:	ldr	x30, [sp, #16]
   2b3e4:	ldp	x19, x20, [sp], #48
   2b3e8:	ret
   2b3ec:	nop
   2b3f0:	mov	x0, #0x0                   	// #0
   2b3f4:	ret
   2b3f8:	cmp	x2, #0x1
   2b3fc:	mov	w0, #0x0                   	// #0
   2b400:	b.ls	2b414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f04>  // b.plast
   2b404:	add	x1, x1, x2
   2b408:	ldurb	w2, [x1, #-1]
   2b40c:	cmp	w2, #0xa
   2b410:	b.eq	2b418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f08>  // b.none
   2b414:	ret
   2b418:	ldurb	w0, [x1, #-2]
   2b41c:	cmp	w0, #0xa
   2b420:	cset	w0, eq  // eq = none
   2b424:	ret
   2b428:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b42c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b430:	adrp	x4, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b434:	add	x4, x4, #0x860
   2b438:	ldr	x5, [x3, #4040]
   2b43c:	add	x3, x0, #0x848
   2b440:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b444:	add	x0, x0, #0x838
   2b448:	ldrb	w5, [x5, #180]
   2b44c:	stp	x4, xzr, [x2, #16]
   2b450:	cmp	w5, #0x0
   2b454:	csel	x0, x0, x3, ne  // ne = any
   2b458:	stp	x1, x0, [x2]
   2b45c:	ret
   2b460:	str	x30, [sp, #-16]!
   2b464:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b468:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b46c:	add	x2, x2, #0x878
   2b470:	add	x0, x0, #0x898
   2b474:	mov	x4, #0x0                   	// #0
   2b478:	mov	x3, #0x0                   	// #0
   2b47c:	mov	w1, #0x4e                  	// #78
   2b480:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b484:	nop
   2b488:	str	x30, [sp, #-16]!
   2b48c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b490:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b494:	add	x2, x2, #0x878
   2b498:	add	x0, x0, #0x898
   2b49c:	mov	x4, #0x0                   	// #0
   2b4a0:	mov	x3, #0x0                   	// #0
   2b4a4:	mov	w1, #0x57                  	// #87
   2b4a8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b4ac:	nop
   2b4b0:	cmp	x2, #0x8
   2b4b4:	b.hi	2b4c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fb0>  // b.pmore
   2b4b8:	mov	w0, #0x0                   	// #0
   2b4bc:	ret
   2b4c0:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b4c4:	str	x30, [sp, #-16]!
   2b4c8:	sub	x2, x2, #0x8
   2b4cc:	add	x0, x1, x2
   2b4d0:	add	x1, x3, #0xfb0
   2b4d4:	mov	x2, #0x8                   	// #8
   2b4d8:	bl	1b578 <__sanitizer_set_report_fd@@Base+0x1cb0>
   2b4dc:	cmp	w0, #0x0
   2b4e0:	cset	w0, eq  // eq = none
   2b4e4:	ldr	x30, [sp], #16
   2b4e8:	ret
   2b4ec:	nop
   2b4f0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b4f4:	stp	x19, x30, [sp, #-16]!
   2b4f8:	mov	x19, x0
   2b4fc:	ldr	x1, [x1, #3664]
   2b500:	cbz	x1, 2b520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6010>
   2b504:	mov	x3, #0x0                   	// #0
   2b508:	mov	x2, #0x0                   	// #0
   2b50c:	mov	x1, #0x0                   	// #0
   2b510:	bl	6930 <__cxa_demangle@plt>
   2b514:	cbz	x0, 2b520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6010>
   2b518:	ldp	x19, x30, [sp], #16
   2b51c:	ret
   2b520:	mov	x0, x19
   2b524:	ldp	x19, x30, [sp], #16
   2b528:	ret
   2b52c:	nop
   2b530:	cbz	x0, 2b59c <__sanitizer_get_module_and_offset_for_pc@@Base+0x608c>
   2b534:	stp	x19, x20, [sp, #-32]!
   2b538:	mov	x19, x0
   2b53c:	str	x30, [sp, #16]
   2b540:	ldrb	w1, [x0]
   2b544:	cmp	w1, #0x5f
   2b548:	b.ne	2b58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x607c>  // b.any
   2b54c:	ldrb	w1, [x0, #1]
   2b550:	cmp	w1, #0x54
   2b554:	b.ne	2b58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x607c>  // b.any
   2b558:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2b55c:	ldr	x20, [x1, #576]
   2b560:	cbz	x20, 2b58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x607c>
   2b564:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2b568:	mov	x1, x0
   2b56c:	mov	x16, x20
   2b570:	mov	x0, x19
   2b574:	ldr	x30, [sp, #16]
   2b578:	mov	w4, #0x0                   	// #0
   2b57c:	ldp	x19, x20, [sp], #32
   2b580:	mov	x3, #0x0                   	// #0
   2b584:	mov	x2, #0x0                   	// #0
   2b588:	br	x16
   2b58c:	mov	x0, #0x0                   	// #0
   2b590:	ldr	x30, [sp, #16]
   2b594:	ldp	x19, x20, [sp], #32
   2b598:	ret
   2b59c:	mov	x0, #0x0                   	// #0
   2b5a0:	ret
   2b5a4:	nop
   2b5a8:	cbz	x0, 2b63c <__sanitizer_get_module_and_offset_for_pc@@Base+0x612c>
   2b5ac:	stp	x19, x20, [sp, #-32]!
   2b5b0:	mov	x19, x0
   2b5b4:	str	x30, [sp, #16]
   2b5b8:	ldrb	w1, [x0]
   2b5bc:	cmp	w1, #0x5f
   2b5c0:	b.ne	2b608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>  // b.any
   2b5c4:	ldrb	w1, [x0, #1]
   2b5c8:	cmp	w1, #0x54
   2b5cc:	b.ne	2b608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>  // b.any
   2b5d0:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2b5d4:	ldr	x20, [x1, #576]
   2b5d8:	cbz	x20, 2b608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>
   2b5dc:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2b5e0:	mov	x1, x0
   2b5e4:	mov	w4, #0x0                   	// #0
   2b5e8:	mov	x0, x19
   2b5ec:	mov	x3, #0x0                   	// #0
   2b5f0:	mov	x2, #0x0                   	// #0
   2b5f4:	blr	x20
   2b5f8:	cbz	x0, 2b608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>
   2b5fc:	ldr	x30, [sp, #16]
   2b600:	ldp	x19, x20, [sp], #32
   2b604:	ret
   2b608:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b60c:	ldr	x0, [x0, #3664]
   2b610:	cbz	x0, 2b62c <__sanitizer_get_module_and_offset_for_pc@@Base+0x611c>
   2b614:	mov	x0, x19
   2b618:	mov	x3, #0x0                   	// #0
   2b61c:	mov	x2, #0x0                   	// #0
   2b620:	mov	x1, #0x0                   	// #0
   2b624:	bl	6930 <__cxa_demangle@plt>
   2b628:	cbnz	x0, 2b5fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x60ec>
   2b62c:	mov	x0, x19
   2b630:	ldr	x30, [sp, #16]
   2b634:	ldp	x19, x20, [sp], #32
   2b638:	ret
   2b63c:	mov	x0, #0x0                   	// #0
   2b640:	ret
   2b644:	nop
   2b648:	stp	x19, x20, [sp, #-128]!
   2b64c:	mov	x19, x0
   2b650:	ldr	x0, [x0, #8]
   2b654:	str	x30, [sp, #56]
   2b658:	bl	1dbe8 <__sanitizer_set_report_fd@@Base+0x4320>
   2b65c:	ands	w20, w0, #0xff
   2b660:	b.ne	2b680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6170>  // b.any
   2b664:	add	x19, x19, #0x4, lsl #12
   2b668:	ldrb	w0, [x19, #33]
   2b66c:	cbz	w0, 2b724 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6214>
   2b670:	mov	w0, w20
   2b674:	ldr	x30, [sp, #56]
   2b678:	ldp	x19, x20, [sp], #128
   2b67c:	ret
   2b680:	mov	x2, #0x8                   	// #8
   2b684:	mov	w1, #0x0                   	// #0
   2b688:	add	x0, sp, #0x40
   2b68c:	stp	x21, x22, [sp, #16]
   2b690:	mov	x22, #0x0                   	// #0
   2b694:	stp	x23, x24, [sp, #32]
   2b698:	add	x23, sp, #0x50
   2b69c:	mov	x24, x23
   2b6a0:	str	x25, [sp, #48]
   2b6a4:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   2b6a8:	mov	x20, x23
   2b6ac:	add	x0, sp, #0x48
   2b6b0:	mov	w21, #0x0                   	// #0
   2b6b4:	mov	x2, #0x8                   	// #8
   2b6b8:	mov	w1, #0x0                   	// #0
   2b6bc:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   2b6c0:	mov	x0, x20
   2b6c4:	bl	6720 <pipe@plt>
   2b6c8:	cmn	w0, #0x1
   2b6cc:	b.eq	2b748 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6238>  // b.none
   2b6d0:	ldr	w0, [x20]
   2b6d4:	cmp	w0, #0x2
   2b6d8:	b.le	2b6f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   2b6dc:	ldr	w0, [x20, #4]
   2b6e0:	cmp	w0, #0x2
   2b6e4:	b.le	2b6f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   2b6e8:	cbnz	x22, 2b7bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x62ac>
   2b6ec:	mov	x22, x20
   2b6f0:	add	w21, w21, #0x1
   2b6f4:	add	x20, x20, #0x8
   2b6f8:	cmp	w21, #0x5
   2b6fc:	b.ne	2b6c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b0>  // b.any
   2b700:	cbnz	x22, 2b79c <__sanitizer_get_module_and_offset_for_pc@@Base+0x628c>
   2b704:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b708:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b70c:	add	x2, x2, #0xc58
   2b710:	add	x0, x0, #0xbc8
   2b714:	mov	x4, #0x0                   	// #0
   2b718:	mov	x3, #0x0                   	// #0
   2b71c:	mov	w1, #0x87                  	// #135
   2b720:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b724:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b728:	add	x0, x0, #0xc28
   2b72c:	bl	22d00 <OnPrint@@Base+0x398>
   2b730:	mov	w0, #0x1                   	// #1
   2b734:	strb	w0, [x19, #33]
   2b738:	mov	w0, w20
   2b73c:	ldr	x30, [sp, #56]
   2b740:	ldp	x19, x20, [sp], #128
   2b744:	ret
   2b748:	cbz	w21, 2b770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6260>
   2b74c:	mov	w19, #0x0                   	// #0
   2b750:	ldr	w0, [x24]
   2b754:	add	w19, w19, #0x1
   2b758:	add	x24, x24, #0x8
   2b75c:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2b760:	ldur	w0, [x24, #-4]
   2b764:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2b768:	cmp	w19, w21
   2b76c:	b.ne	2b750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6240>  // b.any
   2b770:	bl	6ac0 <__errno_location@plt>
   2b774:	mov	x1, x0
   2b778:	mov	w20, #0x0                   	// #0
   2b77c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b780:	add	x0, x0, #0xc80
   2b784:	ldr	w1, [x1]
   2b788:	bl	22d00 <OnPrint@@Base+0x398>
   2b78c:	ldp	x21, x22, [sp, #16]
   2b790:	ldp	x23, x24, [sp, #32]
   2b794:	ldr	x25, [sp, #48]
   2b798:	b	2b670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6160>
   2b79c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b7a0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b7a4:	add	x2, x2, #0xc68
   2b7a8:	add	x0, x0, #0xbc8
   2b7ac:	mov	x4, #0x0                   	// #0
   2b7b0:	mov	x3, #0x0                   	// #0
   2b7b4:	mov	w1, #0x88                  	// #136
   2b7b8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b7bc:	cbz	w21, 2b7ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x62dc>
   2b7c0:	mov	w25, #0x0                   	// #0
   2b7c4:	cmp	x24, x22
   2b7c8:	b.eq	2b7dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x62cc>  // b.none
   2b7cc:	ldr	w0, [x24]
   2b7d0:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2b7d4:	ldr	w0, [x24, #4]
   2b7d8:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2b7dc:	add	w25, w25, #0x1
   2b7e0:	add	x24, x24, #0x8
   2b7e4:	cmp	w25, w21
   2b7e8:	b.ne	2b7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62b4>  // b.any
   2b7ec:	add	x0, x19, #0x4, lsl #12
   2b7f0:	ldr	w2, [x20]
   2b7f4:	ldr	d0, [x20]
   2b7f8:	ldr	d1, [x22]
   2b7fc:	ldrb	w20, [x0, #34]
   2b800:	ldr	w3, [x22, #4]
   2b804:	stp	d1, d0, [sp, #64]
   2b808:	cbnz	w20, 2b90c <__sanitizer_get_module_and_offset_for_pc@@Base+0x63fc>
   2b80c:	ldp	x4, x0, [x19]
   2b810:	adrp	x1, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   2b814:	add	x1, x1, #0xfb8
   2b818:	ldr	x4, [x4, #8]
   2b81c:	cmp	x4, x1
   2b820:	b.ne	2b894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6384>  // b.any
   2b824:	ldr	x4, [x19, #16424]
   2b828:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b82c:	add	x1, x1, #0xb78
   2b830:	stp	x0, x1, [sp, #80]
   2b834:	stp	x4, xzr, [sp, #96]
   2b838:	mov	x1, x23
   2b83c:	mov	w4, #0xffffffff            	// #-1
   2b840:	bl	21d70 <__sanitizer_set_report_fd@@Base+0x84a8>
   2b844:	mov	w21, w0
   2b848:	cmp	w0, #0x0
   2b84c:	b.lt	2b8cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x63bc>  // b.tstop
   2b850:	ldr	w1, [sp, #64]
   2b854:	ldr	w0, [sp, #76]
   2b858:	stp	w1, w0, [x19, #16]
   2b85c:	b.eq	2b8ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x63dc>  // b.none
   2b860:	mov	w0, #0xa                   	// #10
   2b864:	bl	214e8 <__sanitizer_set_report_fd@@Base+0x7c20>
   2b868:	mov	w0, w21
   2b86c:	bl	21ec0 <__sanitizer_set_report_fd@@Base+0x85f8>
   2b870:	ands	w20, w0, #0xff
   2b874:	b.eq	2b8b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63a0>  // b.none
   2b878:	mov	w0, w20
   2b87c:	ldp	x21, x22, [sp, #16]
   2b880:	ldp	x23, x24, [sp, #32]
   2b884:	ldr	x25, [sp, #48]
   2b888:	ldr	x30, [sp, #56]
   2b88c:	ldp	x19, x20, [sp], #128
   2b890:	ret
   2b894:	mov	x1, x0
   2b898:	mov	x2, x23
   2b89c:	mov	x0, x19
   2b8a0:	blr	x4
   2b8a4:	ldp	w3, w2, [sp, #68]
   2b8a8:	ldr	x0, [x19, #8]
   2b8ac:	b	2b838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6328>
   2b8b0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b8b4:	add	x0, x0, #0xce0
   2b8b8:	bl	22d00 <OnPrint@@Base+0x398>
   2b8bc:	ldp	x21, x22, [sp, #16]
   2b8c0:	ldp	x23, x24, [sp, #32]
   2b8c4:	ldr	x25, [sp, #48]
   2b8c8:	b	2b670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6160>
   2b8cc:	ldr	w0, [sp, #64]
   2b8d0:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2b8d4:	ldr	w0, [sp, #76]
   2b8d8:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x4108>
   2b8dc:	ldp	x21, x22, [sp, #16]
   2b8e0:	ldp	x23, x24, [sp, #32]
   2b8e4:	ldr	x25, [sp, #48]
   2b8e8:	b	2b670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6160>
   2b8ec:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b8f0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b8f4:	add	x2, x2, #0xcd0
   2b8f8:	add	x0, x0, #0xbc8
   2b8fc:	mov	x4, #0x0                   	// #0
   2b900:	mov	x3, #0x0                   	// #0
   2b904:	mov	w1, #0xef                  	// #239
   2b908:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b90c:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b910:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2b914:	add	x2, x2, #0x878
   2b918:	add	x0, x0, #0xbc8
   2b91c:	mov	x4, #0x0                   	// #0
   2b920:	mov	x3, #0x0                   	// #0
   2b924:	mov	w1, #0xde                  	// #222
   2b928:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2b92c:	nop
   2b930:	cbz	x1, 2b9c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64b8>
   2b934:	stp	x19, x20, [sp, #-32]!
   2b938:	mov	x19, x1
   2b93c:	str	x30, [sp, #16]
   2b940:	ldrb	w0, [x1]
   2b944:	cmp	w0, #0x5f
   2b948:	b.ne	2b994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>  // b.any
   2b94c:	ldrb	w0, [x1, #1]
   2b950:	cmp	w0, #0x54
   2b954:	b.ne	2b994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>  // b.any
   2b958:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2b95c:	ldr	x20, [x0, #576]
   2b960:	cbz	x20, 2b994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>
   2b964:	mov	x0, x1
   2b968:	bl	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   2b96c:	mov	w4, #0x0                   	// #0
   2b970:	mov	x1, x0
   2b974:	mov	x3, #0x0                   	// #0
   2b978:	mov	x0, x19
   2b97c:	mov	x2, #0x0                   	// #0
   2b980:	blr	x20
   2b984:	cbz	x0, 2b994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>
   2b988:	ldr	x30, [sp, #16]
   2b98c:	ldp	x19, x20, [sp], #32
   2b990:	ret
   2b994:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b998:	ldr	x0, [x0, #3664]
   2b99c:	cbz	x0, 2b9b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64a8>
   2b9a0:	mov	x0, x19
   2b9a4:	mov	x3, #0x0                   	// #0
   2b9a8:	mov	x2, #0x0                   	// #0
   2b9ac:	mov	x1, #0x0                   	// #0
   2b9b0:	bl	6930 <__cxa_demangle@plt>
   2b9b4:	cbnz	x0, 2b988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6478>
   2b9b8:	mov	x0, x19
   2b9bc:	ldr	x30, [sp, #16]
   2b9c0:	ldp	x19, x20, [sp], #32
   2b9c4:	ret
   2b9c8:	mov	x0, #0x0                   	// #0
   2b9cc:	ret
   2b9d0:	stp	x19, x20, [sp, #-128]!
   2b9d4:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b9d8:	ldr	x0, [x20, #4040]
   2b9dc:	stp	x21, x22, [sp, #16]
   2b9e0:	ldrb	w0, [x0]
   2b9e4:	str	x30, [sp, #56]
   2b9e8:	cbnz	w0, 2ba74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6564>
   2b9ec:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b9f0:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2b9f4:	ldr	x0, [x0, #3680]
   2b9f8:	ldr	w0, [x0]
   2b9fc:	sxtw	x0, w0
   2ba00:	cmp	x0, #0x1
   2ba04:	b.hi	2ba58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6548>  // b.pmore
   2ba08:	mov	x19, #0x0                   	// #0
   2ba0c:	mov	x2, #0x0                   	// #0
   2ba10:	dup	v0.2d, x19
   2ba14:	mov	x1, #0xf0                  	// #240
   2ba18:	ldr	x0, [x22, #3808]
   2ba1c:	str	x2, [sp, #96]
   2ba20:	stur	q0, [sp, #104]
   2ba24:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2ba28:	ldp	x4, x5, [sp, #96]
   2ba2c:	mov	x19, x0
   2ba30:	ldr	x2, [sp, #112]
   2ba34:	add	x1, sp, #0x40
   2ba38:	stp	x4, x5, [sp, #64]
   2ba3c:	str	x2, [sp, #80]
   2ba40:	bl	29150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   2ba44:	mov	x0, x19
   2ba48:	ldp	x21, x22, [sp, #16]
   2ba4c:	ldr	x30, [sp, #56]
   2ba50:	ldp	x19, x20, [sp], #128
   2ba54:	ret
   2ba58:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2ba5c:	add	x0, x0, #0xd20
   2ba60:	bl	22d00 <OnPrint@@Base+0x398>
   2ba64:	mov	x19, #0x0                   	// #0
   2ba68:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ba6c:	mov	x2, #0x0                   	// #0
   2ba70:	b	2ba10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   2ba74:	bl	12ed8 <__sancov_default_options@@Base+0x408>
   2ba78:	tst	w0, #0xff
   2ba7c:	b.eq	2bad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c0>  // b.none
   2ba80:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ba84:	ldr	x0, [x0, #3680]
   2ba88:	ldr	w0, [x0]
   2ba8c:	sxtw	x0, w0
   2ba90:	cmp	x0, #0x1
   2ba94:	b.hi	2bb34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6624>  // b.pmore
   2ba98:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ba9c:	ldr	x0, [x22, #3808]
   2baa0:	bl	29920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4410>
   2baa4:	mov	x19, x0
   2baa8:	cbz	x0, 2bb54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6644>
   2baac:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bab0:	ldr	x0, [x0, #3680]
   2bab4:	ldr	w0, [x0]
   2bab8:	sxtw	x0, w0
   2babc:	cmp	x0, #0x1
   2bac0:	b.hi	2bb44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6634>  // b.pmore
   2bac4:	mov	x2, #0x1                   	// #1
   2bac8:	str	xzr, [x19, #8]
   2bacc:	b	2ba10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   2bad0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bad4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bad8:	ldr	x1, [x1, #3568]
   2badc:	ldr	x0, [x0, #3672]
   2bae0:	cmp	x1, #0x0
   2bae4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2bae8:	b.eq	2ba98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6588>  // b.none
   2baec:	adrp	x22, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2baf0:	mov	x1, #0x4010                	// #16400
   2baf4:	ldr	x0, [x22, #3808]
   2baf8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2bafc:	mov	x19, x0
   2bb00:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bb04:	adrp	x0, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2bb08:	add	x0, x0, #0xdf0
   2bb0c:	ldr	x1, [x1, #3680]
   2bb10:	stp	x0, xzr, [x19]
   2bb14:	ldr	w0, [x1]
   2bb18:	sxtw	x0, w0
   2bb1c:	cmp	x0, #0x1
   2bb20:	b.ls	2bac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>  // b.plast
   2bb24:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bb28:	add	x0, x0, #0xd70
   2bb2c:	bl	22d00 <OnPrint@@Base+0x398>
   2bb30:	b	2bac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>
   2bb34:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bb38:	add	x0, x0, #0xd40
   2bb3c:	bl	22d00 <OnPrint@@Base+0x398>
   2bb40:	b	2ba98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6588>
   2bb44:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bb48:	add	x0, x0, #0xd90
   2bb4c:	bl	22d00 <OnPrint@@Base+0x398>
   2bb50:	b	2bac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>
   2bb54:	ldr	x0, [x20, #4040]
   2bb58:	stp	x23, x24, [sp, #32]
   2bb5c:	ldr	x23, [x0, #8]
   2bb60:	cbz	x23, 2bbf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66e0>
   2bb64:	mov	x0, x23
   2bb68:	bl	15860 <__sancov_default_options@@Base+0x2d90>
   2bb6c:	ldrb	w1, [x23]
   2bb70:	mov	x21, x0
   2bb74:	cbz	w1, 2bd70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6860>
   2bb78:	adrp	x19, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bb7c:	add	x19, x19, #0xde0
   2bb80:	mov	x1, x19
   2bb84:	mov	x0, x21
   2bb88:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2bb8c:	cbnz	w0, 2bbfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66ec>
   2bb90:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bb94:	ldr	x0, [x0, #3680]
   2bb98:	ldr	w0, [x0]
   2bb9c:	sxtw	x0, w0
   2bba0:	cmp	x0, #0x1
   2bba4:	b.hi	2bbdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66cc>  // b.pmore
   2bba8:	ldr	x20, [x22, #3808]
   2bbac:	mov	x1, #0x4018                	// #16408
   2bbb0:	mov	x0, x20
   2bbb4:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2bbb8:	mov	x2, x20
   2bbbc:	mov	x1, x23
   2bbc0:	mov	x19, x0
   2bbc4:	bl	2a1e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cd8>
   2bbc8:	cbz	x19, 2bd68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>
   2bbcc:	mov	x2, #0x1                   	// #1
   2bbd0:	ldp	x23, x24, [sp, #32]
   2bbd4:	str	xzr, [x19, #8]
   2bbd8:	b	2ba10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   2bbdc:	mov	x1, x23
   2bbe0:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bbe4:	add	x0, x0, #0xdf0
   2bbe8:	bl	22d00 <OnPrint@@Base+0x398>
   2bbec:	b	2bba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6698>
   2bbf0:	adrp	x21, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bbf4:	add	x21, x21, #0xb00
   2bbf8:	b	2bb78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6668>
   2bbfc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bc00:	mov	x0, x21
   2bc04:	add	x1, x1, #0xe28
   2bc08:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2bc0c:	cbz	w0, 2bf7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a6c>
   2bc10:	adrp	x24, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bc14:	add	x24, x24, #0xe68
   2bc18:	mov	x0, x21
   2bc1c:	mov	x1, x24
   2bc20:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2bc24:	cbnz	w0, 2bda0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6890>
   2bc28:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bc2c:	ldr	x0, [x0, #3680]
   2bc30:	ldr	w0, [x0]
   2bc34:	str	x25, [sp, #48]
   2bc38:	sxtw	x0, w0
   2bc3c:	cmp	x0, #0x1
   2bc40:	b.ls	2bc54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6744>  // b.plast
   2bc44:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bc48:	mov	x1, x23
   2bc4c:	add	x0, x0, #0xe78
   2bc50:	bl	22d00 <OnPrint@@Base+0x398>
   2bc54:	ldr	x20, [x22, #3808]
   2bc58:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bc5c:	mov	x1, #0x38                  	// #56
   2bc60:	mov	x0, x20
   2bc64:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2bc68:	ldr	x24, [x21, #4000]
   2bc6c:	mov	x19, x0
   2bc70:	stp	xzr, xzr, [x0, #40]
   2bc74:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2bc78:	add	x1, x1, #0xdc0
   2bc7c:	ldr	x0, [x24]
   2bc80:	stp	x1, xzr, [x19]
   2bc84:	stp	x23, x20, [x19, #16]
   2bc88:	str	xzr, [x19, #32]
   2bc8c:	cbz	x0, 2bf08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69f8>
   2bc90:	sub	x1, x0, #0x1
   2bc94:	tst	x1, x0
   2bc98:	b.ne	2bf14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a04>  // b.any
   2bc9c:	add	x23, x19, #0x20
   2bca0:	add	x20, x0, #0x7
   2bca4:	neg	x0, x0
   2bca8:	mov	w2, #0x0                   	// #0
   2bcac:	and	x20, x20, x0
   2bcb0:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2bcb4:	mov	x0, x20
   2bcb8:	add	x1, x25, #0x700
   2bcbc:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2bcc0:	mov	x24, x0
   2bcc4:	ldr	x2, [x23, #16]
   2bcc8:	ldr	x1, [x19, #32]
   2bccc:	lsl	x2, x2, #3
   2bcd0:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2bcd4:	ldr	x1, [x23, #8]
   2bcd8:	ldr	x0, [x19, #32]
   2bcdc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2bce0:	str	x24, [x19, #32]
   2bce4:	str	x20, [x23, #8]
   2bce8:	cmp	x20, #0x7f
   2bcec:	b.ls	2bcf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67e8>  // b.plast
   2bcf0:	ldr	x25, [sp, #48]
   2bcf4:	b	2bbcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66bc>
   2bcf8:	ldr	x3, [x23, #16]
   2bcfc:	cmp	x3, #0x10
   2bd00:	b.hi	2bf3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a2c>  // b.pmore
   2bd04:	ldr	x21, [x21, #4000]
   2bd08:	ldr	x0, [x21]
   2bd0c:	cbz	x0, 2bf24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a14>
   2bd10:	sub	x1, x0, #0x1
   2bd14:	tst	x1, x0
   2bd18:	b.ne	2bf14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a04>  // b.any
   2bd1c:	add	x20, x0, #0x7f
   2bd20:	neg	x0, x0
   2bd24:	and	x20, x20, x0
   2bd28:	add	x1, x25, #0x700
   2bd2c:	mov	w2, #0x0                   	// #0
   2bd30:	mov	x0, x20
   2bd34:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2bd38:	mov	x21, x0
   2bd3c:	ldr	x2, [x23, #16]
   2bd40:	ldr	x1, [x19, #32]
   2bd44:	lsl	x2, x2, #3
   2bd48:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2bd4c:	ldr	x1, [x23, #8]
   2bd50:	ldr	x0, [x19, #32]
   2bd54:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2bd58:	ldr	x25, [sp, #48]
   2bd5c:	str	x21, [x19, #32]
   2bd60:	str	x20, [x23, #8]
   2bd64:	b	2bbcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66bc>
   2bd68:	ldp	x23, x24, [sp, #32]
   2bd6c:	b	2ba08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64f8>
   2bd70:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bd74:	ldr	x0, [x0, #3680]
   2bd78:	ldr	w0, [x0]
   2bd7c:	sxtw	x0, w0
   2bd80:	cmp	x0, #0x1
   2bd84:	b.ls	2bd68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>  // b.plast
   2bd88:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bd8c:	add	x0, x0, #0xdb0
   2bd90:	bl	22d00 <OnPrint@@Base+0x398>
   2bd94:	mov	x2, #0x0                   	// #0
   2bd98:	ldp	x23, x24, [sp, #32]
   2bd9c:	b	2ba10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   2bda0:	cbnz	x23, 2bf64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a54>
   2bda4:	mov	x0, x19
   2bda8:	bl	194e0 <__sanitizer_cov_dump@@Base+0x2660>
   2bdac:	mov	x21, x0
   2bdb0:	cbz	x0, 2be00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68f0>
   2bdb4:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bdb8:	ldr	x0, [x0, #3680]
   2bdbc:	ldr	w0, [x0]
   2bdc0:	sxtw	x0, w0
   2bdc4:	cmp	x0, #0x1
   2bdc8:	b.ls	2bddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x68cc>  // b.plast
   2bdcc:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bdd0:	mov	x1, x21
   2bdd4:	add	x0, x0, #0xf40
   2bdd8:	bl	22d00 <OnPrint@@Base+0x398>
   2bddc:	ldr	x20, [x22, #3808]
   2bde0:	mov	x1, #0x4018                	// #16408
   2bde4:	mov	x0, x20
   2bde8:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2bdec:	mov	x2, x20
   2bdf0:	mov	x1, x21
   2bdf4:	mov	x19, x0
   2bdf8:	bl	2a1e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cd8>
   2bdfc:	b	2bbc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66b8>
   2be00:	ldr	x20, [x20, #4040]
   2be04:	ldrb	w0, [x20, #16]
   2be08:	cbz	w0, 2bd68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>
   2be0c:	mov	x0, x24
   2be10:	bl	194e0 <__sanitizer_cov_dump@@Base+0x2660>
   2be14:	mov	x20, x0
   2be18:	cbz	x0, 2bd68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>
   2be1c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2be20:	ldr	x0, [x0, #3680]
   2be24:	ldr	w0, [x0]
   2be28:	str	x25, [sp, #48]
   2be2c:	sxtw	x0, w0
   2be30:	cmp	x0, #0x1
   2be34:	b.ls	2be48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6938>  // b.plast
   2be38:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2be3c:	mov	x1, x20
   2be40:	add	x0, x0, #0xf68
   2be44:	bl	22d00 <OnPrint@@Base+0x398>
   2be48:	ldr	x23, [x22, #3808]
   2be4c:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2be50:	mov	x1, #0x38                  	// #56
   2be54:	mov	x0, x23
   2be58:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2be5c:	ldr	x24, [x21, #4000]
   2be60:	mov	x19, x0
   2be64:	stp	xzr, xzr, [x0, #40]
   2be68:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2be6c:	add	x1, x1, #0xdc0
   2be70:	ldr	x0, [x24]
   2be74:	stp	x1, xzr, [x19]
   2be78:	stp	x20, x23, [x19, #16]
   2be7c:	str	xzr, [x19, #32]
   2be80:	cbz	x0, 2bf30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a20>
   2be84:	sub	x1, x0, #0x1
   2be88:	tst	x1, x0
   2be8c:	b.ne	2bf14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a04>  // b.any
   2be90:	add	x23, x19, #0x20
   2be94:	add	x20, x0, #0x7
   2be98:	neg	x0, x0
   2be9c:	mov	w2, #0x0                   	// #0
   2bea0:	and	x20, x20, x0
   2bea4:	adrp	x25, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2bea8:	mov	x0, x20
   2beac:	add	x1, x25, #0x700
   2beb0:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2beb4:	mov	x24, x0
   2beb8:	ldr	x2, [x23, #16]
   2bebc:	ldr	x1, [x19, #32]
   2bec0:	lsl	x2, x2, #3
   2bec4:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2bec8:	ldr	x1, [x23, #8]
   2becc:	ldr	x0, [x19, #32]
   2bed0:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2bed4:	str	x24, [x19, #32]
   2bed8:	str	x20, [x23, #8]
   2bedc:	cmp	x20, #0x7f
   2bee0:	b.hi	2bcf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67e0>  // b.pmore
   2bee4:	ldr	x3, [x23, #16]
   2bee8:	cmp	x3, #0x10
   2beec:	b.hi	2bf3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a2c>  // b.pmore
   2bef0:	ldr	x20, [x21, #4000]
   2bef4:	ldr	x0, [x20]
   2bef8:	cbz	x0, 2bf58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a48>
   2befc:	ldr	x21, [x21, #4000]
   2bf00:	ldr	x0, [x21]
   2bf04:	b	2bd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6800>
   2bf08:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2bf0c:	str	x0, [x24]
   2bf10:	b	2bc90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6780>
   2bf14:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2bf18:	add	x0, x0, #0x6e8
   2bf1c:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2bf20:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2bf24:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2bf28:	str	x0, [x21]
   2bf2c:	b	2bd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6800>
   2bf30:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2bf34:	str	x0, [x24]
   2bf38:	b	2be84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6974>
   2bf3c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2bf40:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2bf44:	add	x2, x2, #0x6c8
   2bf48:	add	x0, x0, #0x578
   2bf4c:	mov	x4, #0x10                  	// #16
   2bf50:	mov	w1, #0x1fd                 	// #509
   2bf54:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2bf58:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2bf5c:	str	x0, [x20]
   2bf60:	b	2befc <__sanitizer_get_module_and_offset_for_pc@@Base+0x69ec>
   2bf64:	mov	x1, x23
   2bf68:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bf6c:	add	x0, x0, #0xea8
   2bf70:	str	x25, [sp, #48]
   2bf74:	bl	22d00 <OnPrint@@Base+0x398>
   2bf78:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2bf7c:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bf80:	add	x0, x0, #0xe30
   2bf84:	str	x25, [sp, #48]
   2bf88:	bl	22d00 <OnPrint@@Base+0x398>
   2bf8c:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2bf90:	str	x30, [sp, #-16]!
   2bf94:	bl	29ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   2bf98:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bf9c:	mov	x0, #0x0                   	// #0
   2bfa0:	add	x1, x1, #0xf88
   2bfa4:	bl	6830 <dlsym@plt>
   2bfa8:	ldr	x30, [sp], #16
   2bfac:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2bfb0:	str	x0, [x1, #576]
   2bfb4:	b	68a0 <dlerror@plt>
   2bfb8:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2bfbc:	add	x3, x3, #0xb78
   2bfc0:	stp	x1, x3, [x2]
   2bfc4:	ldr	x0, [x0, #16424]
   2bfc8:	stp	x0, xzr, [x2, #16]
   2bfcc:	ret
   2bfd0:	mov	w0, #0x0                   	// #0
   2bfd4:	ret
   2bfd8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2bfdc:	ldr	x0, [x0, #3728]
   2bfe0:	cbz	x0, 2bfe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ad8>
   2bfe4:	b	69b0 <__sanitizer_symbolize_flush@plt>
   2bfe8:	ret
   2bfec:	nop
   2bff0:	stp	x19, x20, [sp, #-48]!
   2bff4:	mov	x19, x2
   2bff8:	mov	w3, #0x4000                	// #16384
   2bffc:	stp	x21, x22, [sp, #16]
   2c000:	add	x22, x0, #0x10
   2c004:	mov	x21, x1
   2c008:	ldp	x0, x1, [x19]
   2c00c:	mov	x2, x22
   2c010:	str	x30, [sp, #32]
   2c014:	bl	6880 <__sanitizer_symbolize_data@plt>
   2c018:	mov	w20, w0
   2c01c:	tst	w0, #0xff
   2c020:	b.ne	2c038 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b28>  // b.any
   2c024:	mov	w0, w20
   2c028:	ldp	x21, x22, [sp, #16]
   2c02c:	ldr	x30, [sp, #32]
   2c030:	ldp	x19, x20, [sp], #48
   2c034:	ret
   2c038:	mov	x0, x22
   2c03c:	mov	x1, x19
   2c040:	bl	2a538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5028>
   2c044:	ldr	x1, [x19, #48]
   2c048:	ldr	x0, [x19, #8]
   2c04c:	add	x1, x21, x1
   2c050:	ldp	x21, x22, [sp, #16]
   2c054:	sub	x1, x1, x0
   2c058:	str	x1, [x19, #48]
   2c05c:	mov	w0, w20
   2c060:	ldr	x30, [sp, #32]
   2c064:	ldp	x19, x20, [sp], #48
   2c068:	ret
   2c06c:	nop
   2c070:	stp	x19, x20, [sp, #-32]!
   2c074:	mov	x19, x2
   2c078:	mov	w3, #0x4000                	// #16384
   2c07c:	stp	x21, x30, [sp, #16]
   2c080:	add	x21, x0, #0x10
   2c084:	mov	x2, x21
   2c088:	ldp	x0, x1, [x19, #16]
   2c08c:	bl	6940 <__sanitizer_symbolize_code@plt>
   2c090:	mov	w20, w0
   2c094:	tst	w0, #0xff
   2c098:	b.ne	2c0ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b9c>  // b.any
   2c09c:	mov	w0, w20
   2c0a0:	ldp	x21, x30, [sp, #16]
   2c0a4:	ldp	x19, x20, [sp], #32
   2c0a8:	ret
   2c0ac:	mov	x1, x19
   2c0b0:	mov	x0, x21
   2c0b4:	bl	2a2a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   2c0b8:	mov	w0, w20
   2c0bc:	ldp	x21, x30, [sp, #16]
   2c0c0:	ldp	x19, x20, [sp], #32
   2c0c4:	ret
   2c0c8:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2c0cc:	stp	x19, x20, [sp, #-32]!
   2c0d0:	mov	x20, x1
   2c0d4:	ldr	x0, [x0, #3512]
   2c0d8:	str	x30, [sp, #24]
   2c0dc:	cbz	x0, 2c148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c38>
   2c0e0:	str	x21, [sp, #16]
   2c0e4:	mov	x21, #0x400                 	// #1024
   2c0e8:	mov	x2, #0x0                   	// #0
   2c0ec:	mov	x1, #0x0                   	// #0
   2c0f0:	mov	x0, x21
   2c0f4:	bl	12f40 <__sancov_default_options@@Base+0x470>
   2c0f8:	mov	x19, x0
   2c0fc:	mov	w2, w21
   2c100:	mov	x0, x20
   2c104:	mov	x1, x19
   2c108:	bl	67b0 <__sanitizer_symbolize_demangle@plt>
   2c10c:	cmp	x21, w0, sxtw
   2c110:	sxtw	x0, w0
   2c114:	b.cc	2c12c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c1c>  // b.lo, b.ul, b.last
   2c118:	mov	x0, x19
   2c11c:	ldr	x21, [sp, #16]
   2c120:	ldr	x30, [sp, #24]
   2c124:	ldp	x19, x20, [sp], #32
   2c128:	ret
   2c12c:	add	x21, x0, #0x1
   2c130:	mov	x1, #0x0                   	// #0
   2c134:	mov	x0, x19
   2c138:	bl	13340 <__sancov_default_options@@Base+0x870>
   2c13c:	cmp	x21, #0x20, lsl #12
   2c140:	b.ls	2c0e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6bd8>  // b.plast
   2c144:	ldr	x21, [sp, #16]
   2c148:	mov	x19, x20
   2c14c:	mov	x0, x19
   2c150:	ldr	x30, [sp, #24]
   2c154:	ldp	x19, x20, [sp], #32
   2c158:	ret
   2c15c:	nop
   2c160:	stp	x19, x20, [sp, #-144]!
   2c164:	mov	x19, x0
   2c168:	mov	x20, #0x0                   	// #0
   2c16c:	ldr	x0, [x0, #48]
   2c170:	stp	x21, x22, [sp, #16]
   2c174:	mov	x22, x2
   2c178:	stp	x23, x24, [sp, #32]
   2c17c:	stp	x25, x30, [sp, #48]
   2c180:	str	xzr, [sp, #72]
   2c184:	ldp	x21, x23, [x2, #16]
   2c188:	cbnz	x0, 2c1a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c90>
   2c18c:	b	2c24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d3c>
   2c190:	ldr	x0, [x19, #48]
   2c194:	add	x20, x20, #0x1
   2c198:	cmp	x0, x20
   2c19c:	b.ls	2c244 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d34>  // b.plast
   2c1a0:	ldr	x1, [x19, #32]
   2c1a4:	mov	x0, x21
   2c1a8:	lsl	x24, x20, #3
   2c1ac:	ldr	x1, [x1, x20, lsl #3]
   2c1b0:	ldr	x1, [x1, #16424]
   2c1b4:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2c1b8:	cbnz	w0, 2c190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c80>
   2c1bc:	ldr	x4, [x19, #48]
   2c1c0:	ldr	x0, [x19, #32]
   2c1c4:	cmp	x4, x20
   2c1c8:	b.ls	2c2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dd0>  // b.plast
   2c1cc:	ldr	x1, [x0, x24]
   2c1d0:	str	x1, [sp, #72]
   2c1d4:	cbz	x1, 2c24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d3c>
   2c1d8:	ldr	x1, [x1, #16424]
   2c1dc:	mov	x0, x21
   2c1e0:	bl	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   2c1e4:	sxtw	x4, w0
   2c1e8:	cbnz	w0, 2c2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6db4>
   2c1ec:	add	x19, sp, #0x50
   2c1f0:	mov	x3, x23
   2c1f4:	mov	x4, #0xffffffffffffffff    	// #-1
   2c1f8:	mov	x1, #0x40                  	// #64
   2c1fc:	mov	x0, x19
   2c200:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c204:	add	x2, x2, #0xc18
   2c208:	bl	22970 <OnPrint@@Base+0x8>
   2c20c:	ldr	x0, [sp, #72]
   2c210:	mov	x1, x19
   2c214:	bl	2a6e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   2c218:	mov	w1, #0x0                   	// #0
   2c21c:	cbz	x0, 2c22c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d1c>
   2c220:	mov	x1, x22
   2c224:	bl	2a2a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   2c228:	mov	w1, #0x1                   	// #1
   2c22c:	mov	w0, w1
   2c230:	ldp	x21, x22, [sp, #16]
   2c234:	ldp	x23, x24, [sp, #32]
   2c238:	ldp	x25, x30, [sp, #48]
   2c23c:	ldp	x19, x20, [sp], #144
   2c240:	ret
   2c244:	ldr	x1, [sp, #72]
   2c248:	cbnz	x1, 2c1d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cc8>
   2c24c:	ldr	x0, [x19, #24]
   2c250:	mov	x1, #0x4030                	// #16432
   2c254:	add	x24, x19, #0x20
   2c258:	bl	12d88 <__sancov_default_options@@Base+0x2b8>
   2c25c:	mov	x20, x0
   2c260:	ldr	x1, [x19, #16]
   2c264:	mov	w2, #0x0                   	// #0
   2c268:	bl	2a660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5150>
   2c26c:	adrp	x0, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2c270:	add	x0, x0, #0xd98
   2c274:	str	x0, [x20]
   2c278:	mov	x0, x21
   2c27c:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x2290>
   2c280:	str	x20, [sp, #72]
   2c284:	ldr	x4, [x19, #40]
   2c288:	ldr	x3, [x24, #16]
   2c28c:	str	x0, [x20, #16424]
   2c290:	lsr	x4, x4, #3
   2c294:	cmp	x3, x4
   2c298:	b.hi	2c3b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ea0>  // b.pmore
   2c29c:	add	x20, x3, #0x1
   2c2a0:	b.eq	2c2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dec>  // b.none
   2c2a4:	ldr	x25, [x19, #32]
   2c2a8:	str	x20, [x24, #16]
   2c2ac:	add	x1, sp, #0x48
   2c2b0:	add	x0, x25, x3, lsl #3
   2c2b4:	mov	x2, #0x8                   	// #8
   2c2b8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2c2bc:	ldr	x1, [sp, #72]
   2c2c0:	b	2c1d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cc8>
   2c2c4:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c2c8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c2cc:	add	x2, x2, #0xb80
   2c2d0:	add	x0, x0, #0xbc8
   2c2d4:	mov	x3, #0x0                   	// #0
   2c2d8:	mov	w1, #0x15c                 	// #348
   2c2dc:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c2e0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c2e4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c2e8:	mov	x3, x20
   2c2ec:	add	x2, x2, #0x560
   2c2f0:	add	x0, x0, #0x578
   2c2f4:	mov	w1, #0x1b6                 	// #438
   2c2f8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c2fc:	tst	x3, x20
   2c300:	b.eq	2c33c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e2c>  // b.none
   2c304:	clz	x2, x20
   2c308:	mov	w0, #0x3f                  	// #63
   2c30c:	sub	w0, w0, w2
   2c310:	mov	x2, #0x1                   	// #1
   2c314:	add	w4, w0, #0x1
   2c318:	lsl	x4, x2, x4
   2c31c:	cmp	x4, x20
   2c320:	b.ls	2c3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6eec>  // b.plast
   2c324:	lsl	x0, x2, x0
   2c328:	cmp	x0, x20
   2c32c:	b.cs	2c418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f08>  // b.hs, b.nlast
   2c330:	cmp	x3, x4
   2c334:	b.hi	2c3d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ec4>  // b.pmore
   2c338:	mov	x20, x4
   2c33c:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2c340:	lsl	x20, x20, #3
   2c344:	ldr	x25, [x25, #4000]
   2c348:	ldr	x0, [x25]
   2c34c:	cbz	x0, 2c3c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6eb8>
   2c350:	sub	x1, x0, #0x1
   2c354:	tst	x0, x1
   2c358:	b.ne	2c3ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6edc>  // b.any
   2c35c:	add	x20, x20, x1
   2c360:	neg	x0, x0
   2c364:	and	x20, x20, x0
   2c368:	mov	w2, #0x0                   	// #0
   2c36c:	mov	x0, x20
   2c370:	adrp	x1, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c374:	add	x1, x1, #0x700
   2c378:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2c37c:	ldr	x2, [x24, #16]
   2c380:	mov	x25, x0
   2c384:	ldr	x1, [x19, #32]
   2c388:	lsl	x2, x2, #3
   2c38c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2c390:	ldr	x1, [x24, #8]
   2c394:	ldr	x0, [x19, #32]
   2c398:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2c39c:	ldr	x3, [x24, #16]
   2c3a0:	str	x25, [x19, #32]
   2c3a4:	str	x20, [x24, #8]
   2c3a8:	add	x20, x3, #0x1
   2c3ac:	b	2c2a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d98>
   2c3b0:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c3b4:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c3b8:	add	x2, x2, #0x660
   2c3bc:	add	x0, x0, #0x578
   2c3c0:	mov	w1, #0x1be                 	// #446
   2c3c4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c3c8:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2c3cc:	str	x0, [x25]
   2c3d0:	b	2c350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e40>
   2c3d4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c3d8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c3dc:	add	x2, x2, #0x6c8
   2c3e0:	add	x0, x0, #0x578
   2c3e4:	mov	w1, #0x1fd                 	// #509
   2c3e8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c3ec:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c3f0:	add	x0, x0, #0x6e8
   2c3f4:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2c3f8:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2c3fc:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c400:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c404:	mov	x3, x20
   2c408:	add	x2, x2, #0x680
   2c40c:	add	x0, x0, #0x578
   2c410:	mov	w1, #0x17b                 	// #379
   2c414:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c418:	mov	x4, x0
   2c41c:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c420:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2c424:	mov	x3, x20
   2c428:	add	x2, x2, #0x6a8
   2c42c:	add	x0, x0, #0x578
   2c430:	mov	w1, #0x17c                 	// #380
   2c434:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c438:	stp	x19, x20, [sp, #-32]!
   2c43c:	mov	x20, x1
   2c440:	str	x30, [sp, #16]
   2c444:	bl	29ac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45b8>
   2c448:	mov	w19, w0
   2c44c:	tst	w0, #0xff
   2c450:	b.eq	2c45c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f4c>  // b.none
   2c454:	ldrb	w0, [x20]
   2c458:	cbnz	w0, 2c46c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f5c>
   2c45c:	mov	w0, w19
   2c460:	ldr	x30, [sp, #16]
   2c464:	ldp	x19, x20, [sp], #32
   2c468:	ret
   2c46c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c470:	add	x0, x20, #0x1
   2c474:	add	x1, x1, #0xfb0
   2c478:	bl	1cd78 <__sanitizer_set_report_fd@@Base+0x34b0>
   2c47c:	cbz	x0, 2c494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f84>
   2c480:	strb	wzr, [x0]
   2c484:	mov	w0, w19
   2c488:	ldr	x30, [sp, #16]
   2c48c:	ldp	x19, x20, [sp], #32
   2c490:	ret
   2c494:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c498:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c49c:	add	x2, x2, #0xf98
   2c4a0:	add	x0, x0, #0xbc8
   2c4a4:	mov	x4, #0x0                   	// #0
   2c4a8:	mov	x3, #0x0                   	// #0
   2c4ac:	mov	w1, #0x11e                 	// #286
   2c4b0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c4b4:	nop
   2c4b8:	adrp	x2, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c4bc:	add	x1, x2, #0x250
   2c4c0:	ldr	x3, [x2, #592]
   2c4c4:	cbz	x3, 2c4f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe4>
   2c4c8:	ldr	x3, [x1, #8]
   2c4cc:	cbz	x3, 2c50c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ffc>
   2c4d0:	ldr	x3, [x1, #16]
   2c4d4:	cbz	x3, 2c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7004>
   2c4d8:	ldr	x3, [x1, #24]
   2c4dc:	cbz	x3, 2c51c <__sanitizer_get_module_and_offset_for_pc@@Base+0x700c>
   2c4e0:	ldr	x3, [x1, #32]
   2c4e4:	mov	w1, #0x0                   	// #0
   2c4e8:	cbz	x3, 2c524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7014>
   2c4ec:	mov	w0, w1
   2c4f0:	ret
   2c4f4:	mov	w3, #0x0                   	// #0
   2c4f8:	add	x2, x2, #0x250
   2c4fc:	mov	w1, #0x1                   	// #1
   2c500:	str	x0, [x2, w3, sxtw #3]
   2c504:	mov	w0, w1
   2c508:	ret
   2c50c:	mov	w3, #0x1                   	// #1
   2c510:	b	2c4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   2c514:	mov	w3, #0x2                   	// #2
   2c518:	b	2c4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   2c51c:	mov	w3, #0x3                   	// #3
   2c520:	b	2c4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   2c524:	mov	w3, #0x4                   	// #4
   2c528:	b	2c4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   2c52c:	nop
   2c530:	adrp	x2, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c534:	mov	x1, x0
   2c538:	ldr	x3, [x2, #592]
   2c53c:	cmp	x0, x3
   2c540:	b.eq	2c580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7070>  // b.none
   2c544:	add	x0, x2, #0x250
   2c548:	ldr	x3, [x0, #8]
   2c54c:	cmp	x1, x3
   2c550:	b.eq	2c5b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70a8>  // b.none
   2c554:	ldr	x3, [x0, #16]
   2c558:	cmp	x1, x3
   2c55c:	b.eq	2c5c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70b4>  // b.none
   2c560:	ldr	x3, [x0, #24]
   2c564:	cmp	x1, x3
   2c568:	b.eq	2c5d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70c0>  // b.none
   2c56c:	ldr	x3, [x0, #32]
   2c570:	mov	w0, #0x0                   	// #0
   2c574:	cmp	x3, x1
   2c578:	b.eq	2c5dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x70cc>  // b.none
   2c57c:	ret
   2c580:	mov	w1, #0x1                   	// #1
   2c584:	mov	w0, #0x0                   	// #0
   2c588:	stp	x19, x30, [sp, #-16]!
   2c58c:	add	x19, x2, #0x250
   2c590:	mov	w2, #0x4                   	// #4
   2c594:	sub	w2, w2, w0
   2c598:	add	x1, x19, w1, sxtw #3
   2c59c:	add	x0, x19, w0, sxtw #3
   2c5a0:	sbfiz	x2, x2, #3, #32
   2c5a4:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x1e78>
   2c5a8:	mov	w0, #0x1                   	// #1
   2c5ac:	str	xzr, [x19, #32]
   2c5b0:	ldp	x19, x30, [sp], #16
   2c5b4:	ret
   2c5b8:	mov	w1, #0x2                   	// #2
   2c5bc:	mov	w0, #0x1                   	// #1
   2c5c0:	b	2c588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   2c5c4:	mov	w1, #0x3                   	// #3
   2c5c8:	mov	w0, #0x2                   	// #2
   2c5cc:	b	2c588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   2c5d0:	mov	w1, #0x4                   	// #4
   2c5d4:	mov	w0, #0x3                   	// #3
   2c5d8:	b	2c588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   2c5dc:	mov	w1, #0x5                   	// #5
   2c5e0:	mov	w0, #0x4                   	// #4
   2c5e4:	b	2c588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   2c5e8:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c5ec:	str	x0, [x1, #632]
   2c5f0:	ret
   2c5f4:	nop
   2c5f8:	stp	x19, x20, [sp, #-32]!
   2c5fc:	adrp	x20, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c600:	add	x0, x20, #0x250
   2c604:	ldr	x0, [x0, #40]
   2c608:	str	x30, [sp, #16]
   2c60c:	cbz	x0, 2c614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   2c610:	blr	x0
   2c614:	add	x20, x20, #0x250
   2c618:	mov	x19, #0x4                   	// #4
   2c61c:	ldr	x0, [x20, x19, lsl #3]
   2c620:	cbz	x0, 2c628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7118>
   2c624:	blr	x0
   2c628:	sub	x19, x19, #0x1
   2c62c:	cmn	x19, #0x1
   2c630:	b.ne	2c61c <__sanitizer_get_module_and_offset_for_pc@@Base+0x710c>  // b.any
   2c634:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2c638:	ldr	x0, [x0, #4040]
   2c63c:	ldrb	w1, [x0, #220]
   2c640:	cbz	w1, 2c648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7138>
   2c644:	bl	214f8 <__sanitizer_set_report_fd@@Base+0x7c30>
   2c648:	ldr	w0, [x0, #216]
   2c64c:	bl	1db88 <__sanitizer_set_report_fd@@Base+0x42c0>
   2c650:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c654:	str	x0, [x1, #640]
   2c658:	ret
   2c65c:	nop
   2c660:	stp	x19, x20, [sp, #-48]!
   2c664:	adrp	x6, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c668:	add	x6, x6, #0x250
   2c66c:	add	x5, x6, #0x38
   2c670:	mov	x19, x0
   2c674:	mov	w20, w1
   2c678:	stp	x21, x22, [sp, #16]
   2c67c:	mov	x21, x2
   2c680:	mov	x22, x3
   2c684:	stp	x23, x30, [sp, #32]
   2c688:	mov	x23, x4
   2c68c:	ldxr	w7, [x5]
   2c690:	add	w8, w7, #0x1
   2c694:	stlxr	w9, w8, [x5]
   2c698:	cbnz	w9, 2c68c <__sanitizer_get_module_and_offset_for_pc@@Base+0x717c>
   2c69c:	dmb	ish
   2c6a0:	cmp	w7, #0xa
   2c6a4:	b.hi	2c6d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x71c8>  // b.pmore
   2c6a8:	ldr	x5, [x6, #48]
   2c6ac:	cbz	x5, 2c6b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x71a4>
   2c6b0:	blr	x5
   2c6b4:	mov	x5, x23
   2c6b8:	mov	x4, x22
   2c6bc:	mov	x3, x21
   2c6c0:	mov	w2, w20
   2c6c4:	mov	x1, x19
   2c6c8:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c6cc:	add	x0, x0, #0xfc0
   2c6d0:	bl	22d00 <OnPrint@@Base+0x398>
   2c6d4:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2c6d8:	mov	w0, #0x2                   	// #2
   2c6dc:	bl	214e0 <__sanitizer_set_report_fd@@Base+0x7c18>
   2c6e0:	brk	#0x3e8
   2c6e4:	nop

000000000002c6e8 <__sanitizer_set_death_callback@@Base>:
   2c6e8:	adrp	x1, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2c6ec:	str	x0, [x1, #632]
   2c6f0:	ret
   2c6f4:	nop
   2c6f8:	stp	x19, x20, [sp, #-32]!
   2c6fc:	mov	x19, x0
   2c700:	ldr	x0, [x0, #160]
   2c704:	str	x30, [sp, #16]
   2c708:	cbnz	x0, 2c73c <__sanitizer_set_death_callback@@Base+0x54>
   2c70c:	dup	v0.2d, x1
   2c710:	str	xzr, [x1, #128]
   2c714:	mov	x1, #0x1                   	// #1
   2c718:	mov	x2, x1
   2c71c:	str	x1, [x19, #160]
   2c720:	ldr	w1, [x19, #12]
   2c724:	stur	q0, [x19, #168]
   2c728:	cmp	x2, x1
   2c72c:	b.hi	2c760 <__sanitizer_set_death_callback@@Base+0x78>  // b.pmore
   2c730:	ldr	x30, [sp, #16]
   2c734:	ldp	x19, x20, [sp], #32
   2c738:	ret
   2c73c:	str	xzr, [x1, #128]
   2c740:	add	x2, x0, #0x1
   2c744:	ldr	x4, [x19, #176]
   2c748:	str	x1, [x4, #128]
   2c74c:	str	x2, [x19, #160]
   2c750:	str	x1, [x19, #176]
   2c754:	ldr	w1, [x19, #12]
   2c758:	cmp	x2, x1
   2c75c:	b.ls	2c730 <__sanitizer_set_death_callback@@Base+0x48>  // b.plast
   2c760:	ldr	x20, [x19, #168]
   2c764:	add	x2, x19, #0xa0
   2c768:	ldr	x1, [x20, #128]
   2c76c:	str	x1, [x2, #8]
   2c770:	cbz	x1, 2c814 <__sanitizer_set_death_callback@@Base+0x12c>
   2c774:	ldr	w3, [x20, #112]
   2c778:	str	x0, [x19, #160]
   2c77c:	cmp	x3, #0x4
   2c780:	b.ne	2c828 <__sanitizer_set_death_callback@@Base+0x140>  // b.any
   2c784:	strb	wzr, [x20, #48]
   2c788:	str	wzr, [x20, #112]
   2c78c:	dmb	ish
   2c790:	str	wzr, [x20, #136]
   2c794:	ldr	x1, [x20]
   2c798:	adrp	x0, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2c79c:	add	x0, x0, #0xac0
   2c7a0:	ldr	x1, [x1, #40]
   2c7a4:	cmp	x1, x0
   2c7a8:	b.ne	2c81c <__sanitizer_set_death_callback@@Base+0x134>  // b.any
   2c7ac:	ldr	w0, [x20, #24]
   2c7b0:	add	w0, w0, #0x1
   2c7b4:	str	w0, [x20, #24]
   2c7b8:	ldr	w1, [x19, #16]
   2c7bc:	cmp	w1, #0x0
   2c7c0:	ccmp	w0, w1, #0x0, ne  // ne = any
   2c7c4:	b.cs	2c730 <__sanitizer_set_death_callback@@Base+0x48>  // b.hs, b.nlast
   2c7c8:	ldr	x0, [x19, #184]
   2c7cc:	cbnz	x0, 2c7f0 <__sanitizer_set_death_callback@@Base+0x108>
   2c7d0:	dup	v0.2d, x20
   2c7d4:	str	xzr, [x20, #128]
   2c7d8:	mov	x0, #0x1                   	// #1
   2c7dc:	str	x0, [x19, #184]
   2c7e0:	ldr	x30, [sp, #16]
   2c7e4:	str	q0, [x19, #192]
   2c7e8:	ldp	x19, x20, [sp], #32
   2c7ec:	ret
   2c7f0:	str	xzr, [x20, #128]
   2c7f4:	add	x0, x0, #0x1
   2c7f8:	ldr	x30, [sp, #16]
   2c7fc:	ldr	x2, [x19, #200]
   2c800:	str	x20, [x2, #128]
   2c804:	str	x0, [x19, #184]
   2c808:	str	x20, [x19, #200]
   2c80c:	ldp	x19, x20, [sp], #32
   2c810:	ret
   2c814:	str	xzr, [x2, #16]
   2c818:	b	2c774 <__sanitizer_set_death_callback@@Base+0x8c>
   2c81c:	mov	x0, x20
   2c820:	blr	x1
   2c824:	b	2c7ac <__sanitizer_set_death_callback@@Base+0xc4>
   2c828:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2c82c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c830:	add	x2, x2, #0xff0
   2c834:	add	x0, x0, #0x20
   2c838:	mov	x4, #0x4                   	// #4
   2c83c:	mov	w1, #0x143                 	// #323
   2c840:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c844:	nop
   2c848:	adrp	x2, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2c84c:	add	x2, x2, #0xe20
   2c850:	str	x2, [x0]
   2c854:	str	w1, [x0, #8]
   2c858:	str	xzr, [x0, #16]
   2c85c:	str	wzr, [x0, #24]
   2c860:	stp	xzr, xzr, [x0, #32]
   2c864:	strb	wzr, [x0, #48]
   2c868:	str	wzr, [x0, #112]
   2c86c:	strh	wzr, [x0, #116]
   2c870:	str	wzr, [x0, #120]
   2c874:	str	xzr, [x0, #128]
   2c878:	dmb	ish
   2c87c:	str	wzr, [x0, #136]
   2c880:	ret
   2c884:	nop
   2c888:	str	x30, [sp, #-16]!
   2c88c:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   2c890:	add	x1, x1, #0xe20
   2c894:	str	x1, [x0]
   2c898:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c89c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x1bb0>
   2c8a0:	add	x0, x3, #0x20
   2c8a4:	add	x2, x2, #0xd20
   2c8a8:	mov	x4, #0x0                   	// #0
   2c8ac:	mov	x3, #0x0                   	// #0
   2c8b0:	mov	w1, #0x1b                  	// #27
   2c8b4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c8b8:	strb	wzr, [x0, #48]
   2c8bc:	cbz	x1, 2c8e0 <__sanitizer_set_death_callback@@Base+0x1f8>
   2c8c0:	stp	x19, x30, [sp, #-16]!
   2c8c4:	mov	x19, x0
   2c8c8:	mov	x2, #0x40                  	// #64
   2c8cc:	add	x0, x0, #0x30
   2c8d0:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   2c8d4:	strb	wzr, [x19, #111]
   2c8d8:	ldp	x19, x30, [sp], #16
   2c8dc:	ret
   2c8e0:	ret
   2c8e4:	nop
   2c8e8:	ldr	w2, [x0, #112]
   2c8ec:	sub	w2, w2, #0x2
   2c8f0:	cmp	w2, #0x1
   2c8f4:	b.hi	2c928 <__sanitizer_set_death_callback@@Base+0x240>  // b.pmore
   2c8f8:	ldr	x3, [x0]
   2c8fc:	adrp	x2, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2c900:	add	x1, x2, #0xaa8
   2c904:	mov	w4, #0x4                   	// #4
   2c908:	str	xzr, [x0, #40]
   2c90c:	ldr	x2, [x3]
   2c910:	str	w4, [x0, #112]
   2c914:	cmp	x2, x1
   2c918:	b.ne	2c920 <__sanitizer_set_death_callback@@Base+0x238>  // b.any
   2c91c:	ret
   2c920:	mov	x16, x2
   2c924:	br	x16
   2c928:	str	x30, [sp, #-16]!
   2c92c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c930:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c934:	add	x2, x2, #0x68
   2c938:	add	x0, x0, #0x20
   2c93c:	mov	x4, #0x0                   	// #0
   2c940:	mov	x3, #0x0                   	// #0
   2c944:	mov	w1, #0x27                  	// #39
   2c948:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c94c:	nop
   2c950:	dmb	ish
   2c954:	mov	w1, #0x1                   	// #1
   2c958:	str	w1, [x0, #136]
   2c95c:	ret
   2c960:	ldr	w0, [x0, #136]
   2c964:	dmb	ish
   2c968:	cmp	w0, #0x0
   2c96c:	cset	w0, ne  // ne = any
   2c970:	ret
   2c974:	nop
   2c978:	ldrb	w3, [x0, #116]
   2c97c:	str	x30, [sp, #-16]!
   2c980:	cbnz	w3, 2c9c8 <__sanitizer_set_death_callback@@Base+0x2e0>
   2c984:	ldr	w4, [x0, #112]
   2c988:	cmp	x4, #0x3
   2c98c:	b.ne	2c9e8 <__sanitizer_set_death_callback@@Base+0x300>  // b.any
   2c990:	ldr	x4, [x0]
   2c994:	adrp	x3, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2c998:	add	x2, x3, #0xab0
   2c99c:	mov	w5, #0x4                   	// #4
   2c9a0:	str	xzr, [x0, #40]
   2c9a4:	ldr	x3, [x4, #8]
   2c9a8:	str	w5, [x0, #112]
   2c9ac:	cmp	x3, x2
   2c9b0:	b.ne	2c9bc <__sanitizer_set_death_callback@@Base+0x2d4>  // b.any
   2c9b4:	ldr	x30, [sp], #16
   2c9b8:	ret
   2c9bc:	ldr	x30, [sp], #16
   2c9c0:	mov	x16, x3
   2c9c4:	br	x16
   2c9c8:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c9cc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c9d0:	add	x2, x2, #0xb8
   2c9d4:	add	x0, x0, #0x20
   2c9d8:	mov	x4, #0x1                   	// #1
   2c9dc:	mov	x3, #0x0                   	// #0
   2c9e0:	mov	w1, #0x38                  	// #56
   2c9e4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2c9e8:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c9ec:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2c9f0:	add	x2, x2, #0xd8
   2c9f4:	add	x0, x0, #0x20
   2c9f8:	mov	x3, #0x3                   	// #3
   2c9fc:	mov	w1, #0x39                  	// #57
   2ca00:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2ca04:	nop
   2ca08:	ldrb	w1, [x0, #116]
   2ca0c:	cbz	w1, 2ca38 <__sanitizer_set_death_callback@@Base+0x350>
   2ca10:	ldr	w1, [x0, #112]
   2ca14:	cmp	w1, #0x1
   2ca18:	b.eq	2ca38 <__sanitizer_set_death_callback@@Base+0x350>  // b.none
   2ca1c:	ldr	x2, [x0]
   2ca20:	adrp	x1, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2ca24:	add	x1, x1, #0x930
   2ca28:	ldr	x2, [x2, #16]
   2ca2c:	cmp	x2, x1
   2ca30:	b.ne	2ca58 <__sanitizer_set_death_callback@@Base+0x370>  // b.any
   2ca34:	ret
   2ca38:	ldr	x2, [x0]
   2ca3c:	mov	w1, #0x3                   	// #3
   2ca40:	str	w1, [x0, #112]
   2ca44:	adrp	x1, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2ca48:	add	x1, x1, #0x930
   2ca4c:	ldr	x2, [x2, #16]
   2ca50:	cmp	x2, x1
   2ca54:	b.eq	2ca34 <__sanitizer_set_death_callback@@Base+0x34c>  // b.none
   2ca58:	mov	x16, x2
   2ca5c:	br	x16
   2ca60:	ldr	x6, [x0]
   2ca64:	strb	w2, [x0, #117]
   2ca68:	mov	w7, #0x2                   	// #2
   2ca6c:	adrp	x5, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2ca70:	add	x5, x5, #0x938
   2ca74:	ldr	x2, [x6, #24]
   2ca78:	str	x1, [x0, #32]
   2ca7c:	str	w7, [x0, #112]
   2ca80:	cmp	x2, x5
   2ca84:	b.ne	2ca8c <__sanitizer_set_death_callback@@Base+0x3a4>  // b.any
   2ca88:	ret
   2ca8c:	mov	x1, x3
   2ca90:	mov	x16, x2
   2ca94:	br	x16
   2ca98:	ldr	w6, [x0, #8]
   2ca9c:	mov	w7, #0x1                   	// #1
   2caa0:	str	x2, [x0, #16]
   2caa4:	str	x1, [x0, #40]
   2caa8:	str	w7, [x0, #112]
   2caac:	strb	w3, [x0, #116]
   2cab0:	cbz	w6, 2cab8 <__sanitizer_set_death_callback@@Base+0x3d0>
   2cab4:	str	w4, [x0, #120]
   2cab8:	ldr	x1, [x0]
   2cabc:	adrp	x2, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2cac0:	add	x2, x2, #0xab8
   2cac4:	ldr	x3, [x1, #32]
   2cac8:	cmp	x3, x2
   2cacc:	b.ne	2cad4 <__sanitizer_set_death_callback@@Base+0x3ec>  // b.any
   2cad0:	ret
   2cad4:	mov	x1, x5
   2cad8:	mov	x16, x3
   2cadc:	br	x16
   2cae0:	strb	wzr, [x0, #48]
   2cae4:	str	wzr, [x0, #112]
   2cae8:	dmb	ish
   2caec:	str	wzr, [x0, #136]
   2caf0:	ldr	x2, [x0]
   2caf4:	adrp	x1, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2caf8:	add	x1, x1, #0xac0
   2cafc:	ldr	x2, [x2, #40]
   2cb00:	cmp	x2, x1
   2cb04:	b.ne	2cb0c <__sanitizer_set_death_callback@@Base+0x424>  // b.any
   2cb08:	ret
   2cb0c:	mov	x16, x2
   2cb10:	br	x16
   2cb14:	nop
   2cb18:	stp	x19, x30, [sp, #-16]!
   2cb1c:	mov	x19, x0
   2cb20:	add	x0, x0, #0x18
   2cb24:	str	x1, [x19]
   2cb28:	stp	w2, w3, [x19, #8]
   2cb2c:	str	w4, [x19, #16]
   2cb30:	bl	1dea8 <__sanitizer_set_report_fd@@Base+0x45e0>
   2cb34:	str	wzr, [x19, #112]
   2cb38:	movi	v0.4s, #0x0
   2cb3c:	ldr	w0, [x19, #8]
   2cb40:	mov	w2, #0x0                   	// #0
   2cb44:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cb48:	add	x1, x1, #0x100
   2cb4c:	lsl	x0, x0, #3
   2cb50:	stur	q0, [x19, #120]
   2cb54:	stur	q0, [x19, #136]
   2cb58:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2cb5c:	movi	v0.4s, #0x0
   2cb60:	stp	x0, xzr, [x19, #152]
   2cb64:	str	xzr, [x19, #184]
   2cb68:	stur	q0, [x19, #168]
   2cb6c:	str	q0, [x19, #192]
   2cb70:	ldp	x19, x30, [sp], #16
   2cb74:	ret
   2cb78:	stp	x19, x20, [sp, #-48]!
   2cb7c:	mov	x19, x0
   2cb80:	mov	x20, x3
   2cb84:	stp	x23, x30, [sp, #32]
   2cb88:	add	x23, x0, #0x18
   2cb8c:	mov	x0, x23
   2cb90:	stp	x21, x22, [sp, #16]
   2cb94:	mov	x22, x1
   2cb98:	mov	x21, x2
   2cb9c:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2cba0:	cbz	x22, 2cbac <__sanitizer_set_death_callback@@Base+0x4c4>
   2cba4:	ldr	w0, [x19, #112]
   2cba8:	str	x0, [x22]
   2cbac:	cbz	x21, 2cbb8 <__sanitizer_set_death_callback@@Base+0x4d0>
   2cbb0:	ldr	x0, [x19, #144]
   2cbb4:	str	x0, [x21]
   2cbb8:	cbz	x20, 2cbc4 <__sanitizer_set_death_callback@@Base+0x4dc>
   2cbbc:	ldr	x0, [x19, #128]
   2cbc0:	str	x0, [x20]
   2cbc4:	mov	x0, x23
   2cbc8:	ldp	x21, x22, [sp, #16]
   2cbcc:	ldp	x23, x30, [sp, #32]
   2cbd0:	ldp	x19, x20, [sp], #48
   2cbd4:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2cbd8:	stp	x19, x20, [sp, #-32]!
   2cbdc:	mov	x19, x0
   2cbe0:	add	x20, x0, #0x18
   2cbe4:	mov	x0, x20
   2cbe8:	str	x30, [sp, #16]
   2cbec:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2cbf0:	ldr	x19, [x19, #136]
   2cbf4:	mov	x0, x20
   2cbf8:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2cbfc:	mov	x0, x19
   2cc00:	ldr	x30, [sp, #16]
   2cc04:	ldp	x19, x20, [sp], #32
   2cc08:	ret
   2cc0c:	nop
   2cc10:	stp	x19, x20, [sp, #-64]!
   2cc14:	mov	x19, x0
   2cc18:	stp	x25, x30, [sp, #48]
   2cc1c:	add	x25, x0, #0x18
   2cc20:	mov	x0, x25
   2cc24:	stp	x21, x22, [sp, #16]
   2cc28:	mov	x21, x1
   2cc2c:	mov	w22, w3
   2cc30:	stp	x23, x24, [sp, #32]
   2cc34:	mov	x23, x4
   2cc38:	and	w24, w2, #0xff
   2cc3c:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2cc40:	ldr	x1, [x19, #184]
   2cc44:	cbz	x1, 2cd10 <__sanitizer_set_death_callback@@Base+0x628>
   2cc48:	ldr	x0, [x19, #192]
   2cc4c:	ldr	x2, [x0, #128]
   2cc50:	str	x2, [x19, #192]
   2cc54:	cbz	x2, 2cd64 <__sanitizer_set_death_callback@@Base+0x67c>
   2cc58:	ldr	w20, [x0, #8]
   2cc5c:	sub	x1, x1, #0x1
   2cc60:	str	x1, [x19, #184]
   2cc64:	mov	w3, w20
   2cc68:	mov	x1, #0xffffffff            	// #4294967295
   2cc6c:	cmp	x3, x1
   2cc70:	b.eq	2cd94 <__sanitizer_set_death_callback@@Base+0x6ac>  // b.none
   2cc74:	ldr	w4, [x19, #8]
   2cc78:	cmp	x3, x4
   2cc7c:	b.cs	2cdb0 <__sanitizer_set_death_callback@@Base+0x6c8>  // b.hs, b.nlast
   2cc80:	ldr	w3, [x0, #112]
   2cc84:	cbnz	x3, 2cdc8 <__sanitizer_set_death_callback@@Base+0x6e0>
   2cc88:	ldp	x2, x1, [x19, #128]
   2cc8c:	add	x3, x2, #0x1
   2cc90:	str	x3, [x19, #128]
   2cc94:	cmp	x3, x1
   2cc98:	b.ls	2ccac <__sanitizer_set_death_callback@@Base+0x5c4>  // b.plast
   2cc9c:	add	x4, x1, #0x1
   2cca0:	str	x4, [x19, #136]
   2cca4:	cmp	x2, x1
   2cca8:	b.ne	2cde4 <__sanitizer_set_death_callback@@Base+0x6fc>  // b.any
   2ccac:	ldr	x1, [x19, #120]
   2ccb0:	mov	w3, #0x1                   	// #1
   2ccb4:	ldr	w2, [x0, #8]
   2ccb8:	add	x4, x1, #0x1
   2ccbc:	str	x4, [x19, #120]
   2ccc0:	str	x1, [x0, #16]
   2ccc4:	str	x21, [x0, #40]
   2ccc8:	str	w3, [x0, #112]
   2cccc:	strb	w24, [x0, #116]
   2ccd0:	cbz	w2, 2ccd8 <__sanitizer_set_death_callback@@Base+0x5f0>
   2ccd4:	str	w22, [x0, #120]
   2ccd8:	ldr	x2, [x0]
   2ccdc:	adrp	x1, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2cce0:	add	x1, x1, #0xab8
   2cce4:	ldr	x2, [x2, #32]
   2cce8:	cmp	x2, x1
   2ccec:	b.ne	2cd6c <__sanitizer_set_death_callback@@Base+0x684>  // b.any
   2ccf0:	mov	x0, x25
   2ccf4:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2ccf8:	mov	w0, w20
   2ccfc:	ldp	x21, x22, [sp, #16]
   2cd00:	ldp	x23, x24, [sp, #32]
   2cd04:	ldp	x25, x30, [sp, #48]
   2cd08:	ldp	x19, x20, [sp], #64
   2cd0c:	ret
   2cd10:	ldr	w2, [x19, #8]
   2cd14:	ldr	w20, [x19, #112]
   2cd18:	cmp	w20, w2
   2cd1c:	b.cs	2cdfc <__sanitizer_set_death_callback@@Base+0x714>  // b.hs, b.nlast
   2cd20:	ldr	x1, [x19]
   2cd24:	add	w0, w20, #0x1
   2cd28:	str	w0, [x19, #112]
   2cd2c:	mov	w0, w20
   2cd30:	blr	x1
   2cd34:	ldr	x1, [x19, #152]
   2cd38:	mov	w3, w20
   2cd3c:	str	x0, [x1, x3, lsl #3]
   2cd40:	cbnz	x0, 2cc68 <__sanitizer_set_death_callback@@Base+0x580>
   2cd44:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cd48:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cd4c:	add	x2, x2, #0x140
   2cd50:	add	x0, x0, #0x20
   2cd54:	mov	x4, #0x0                   	// #0
   2cd58:	mov	x3, #0x0                   	// #0
   2cd5c:	mov	w1, #0x9c                  	// #156
   2cd60:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2cd64:	str	xzr, [x19, #200]
   2cd68:	b	2cc58 <__sanitizer_set_death_callback@@Base+0x570>
   2cd6c:	mov	x1, x23
   2cd70:	blr	x2
   2cd74:	mov	x0, x25
   2cd78:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2cd7c:	mov	w0, w20
   2cd80:	ldp	x21, x22, [sp, #16]
   2cd84:	ldp	x23, x24, [sp, #32]
   2cd88:	ldp	x25, x30, [sp, #48]
   2cd8c:	ldp	x19, x20, [sp], #64
   2cd90:	ret
   2cd94:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cd98:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cd9c:	add	x2, x2, #0x158
   2cda0:	add	x0, x0, #0x20
   2cda4:	mov	x4, x3
   2cda8:	mov	w1, #0x9d                  	// #157
   2cdac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2cdb0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cdb4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cdb8:	add	x2, x2, #0x178
   2cdbc:	add	x0, x0, #0x20
   2cdc0:	mov	w1, #0x9e                  	// #158
   2cdc4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2cdc8:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cdcc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cdd0:	add	x2, x2, #0x198
   2cdd4:	add	x0, x0, #0x20
   2cdd8:	mov	x4, #0x0                   	// #0
   2cddc:	mov	w1, #0x9f                  	// #159
   2cde0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2cde4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cde8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2cdec:	add	x2, x2, #0x1c8
   2cdf0:	add	x0, x0, #0x20
   2cdf4:	mov	w1, #0xa3                  	// #163
   2cdf8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2cdfc:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ce00:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ce04:	add	x0, x0, #0x110
   2ce08:	ldr	x1, [x1, #4008]
   2ce0c:	ldr	x1, [x1]
   2ce10:	bl	22d00 <OnPrint@@Base+0x398>
   2ce14:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2ce18:	stp	x19, x20, [sp, #-48]!
   2ce1c:	mov	x20, x0
   2ce20:	add	x0, x0, #0x18
   2ce24:	stp	x21, x22, [sp, #16]
   2ce28:	mov	x22, x1
   2ce2c:	mov	x21, x2
   2ce30:	str	x30, [sp, #32]
   2ce34:	bl	1dfc0 <__sanitizer_set_report_fd@@Base+0x46f8>
   2ce38:	ldr	w3, [x20, #112]
   2ce3c:	cbz	w3, 2ce84 <__sanitizer_set_death_callback@@Base+0x79c>
   2ce40:	ldr	x4, [x20, #152]
   2ce44:	mov	w19, #0x0                   	// #0
   2ce48:	ldr	x0, [x4, w19, uxtw #3]
   2ce4c:	mov	x1, x21
   2ce50:	cbz	x0, 2ce78 <__sanitizer_set_death_callback@@Base+0x790>
   2ce54:	blr	x22
   2ce58:	add	w19, w19, #0x1
   2ce5c:	ldr	w3, [x20, #112]
   2ce60:	cmp	w3, w19
   2ce64:	b.ls	2ce84 <__sanitizer_set_death_callback@@Base+0x79c>  // b.plast
   2ce68:	ldr	x4, [x20, #152]
   2ce6c:	mov	x1, x21
   2ce70:	ldr	x0, [x4, w19, uxtw #3]
   2ce74:	cbnz	x0, 2ce54 <__sanitizer_set_death_callback@@Base+0x76c>
   2ce78:	add	w19, w19, #0x1
   2ce7c:	cmp	w19, w3
   2ce80:	b.cc	2ce48 <__sanitizer_set_death_callback@@Base+0x760>  // b.lo, b.ul, b.last
   2ce84:	ldp	x21, x22, [sp, #16]
   2ce88:	ldr	x30, [sp, #32]
   2ce8c:	ldp	x19, x20, [sp], #48
   2ce90:	ret
   2ce94:	nop
   2ce98:	stp	x19, x20, [sp, #-64]!
   2ce9c:	mov	w19, #0x0                   	// #0
   2cea0:	stp	x21, x22, [sp, #16]
   2cea4:	mov	x21, x0
   2cea8:	mov	x22, x2
   2ceac:	stp	x23, x24, [sp, #32]
   2ceb0:	add	x24, x0, #0x18
   2ceb4:	mov	x23, x1
   2ceb8:	mov	x0, x24
   2cebc:	str	x30, [sp, #48]
   2cec0:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2cec4:	ldr	w3, [x21, #112]
   2cec8:	cbz	w3, 2cf00 <__sanitizer_set_death_callback@@Base+0x818>
   2cecc:	nop
   2ced0:	ldr	x0, [x21, #152]
   2ced4:	mov	x1, x22
   2ced8:	ldr	x20, [x0, w19, uxtw #3]
   2cedc:	mov	x0, x20
   2cee0:	cbz	x20, 2cef4 <__sanitizer_set_death_callback@@Base+0x80c>
   2cee4:	blr	x23
   2cee8:	tst	w0, #0xff
   2ceec:	b.ne	2cf24 <__sanitizer_set_death_callback@@Base+0x83c>  // b.any
   2cef0:	ldr	w3, [x21, #112]
   2cef4:	add	w19, w19, #0x1
   2cef8:	cmp	w19, w3
   2cefc:	b.cc	2ced0 <__sanitizer_set_death_callback@@Base+0x7e8>  // b.lo, b.ul, b.last
   2cf00:	mov	x0, x24
   2cf04:	mov	w19, #0xffffffff            	// #-1
   2cf08:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2cf0c:	mov	w0, w19
   2cf10:	ldp	x21, x22, [sp, #16]
   2cf14:	ldp	x23, x24, [sp, #32]
   2cf18:	ldr	x30, [sp, #48]
   2cf1c:	ldp	x19, x20, [sp], #64
   2cf20:	ret
   2cf24:	ldr	w19, [x20, #8]
   2cf28:	mov	x0, x24
   2cf2c:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2cf30:	mov	w0, w19
   2cf34:	ldp	x21, x22, [sp, #16]
   2cf38:	ldp	x23, x24, [sp, #32]
   2cf3c:	ldr	x30, [sp, #48]
   2cf40:	ldp	x19, x20, [sp], #64
   2cf44:	ret
   2cf48:	stp	x19, x20, [sp, #-48]!
   2cf4c:	mov	w19, #0x0                   	// #0
   2cf50:	stp	x21, x22, [sp, #16]
   2cf54:	mov	x21, x0
   2cf58:	mov	x22, x2
   2cf5c:	add	x0, x0, #0x18
   2cf60:	stp	x23, x30, [sp, #32]
   2cf64:	mov	x23, x1
   2cf68:	bl	1dfc0 <__sanitizer_set_report_fd@@Base+0x46f8>
   2cf6c:	ldr	w3, [x21, #112]
   2cf70:	cbz	w3, 2cfa8 <__sanitizer_set_death_callback@@Base+0x8c0>
   2cf74:	nop
   2cf78:	ldr	x0, [x21, #152]
   2cf7c:	mov	x1, x22
   2cf80:	ldr	x20, [x0, w19, uxtw #3]
   2cf84:	add	w19, w19, #0x1
   2cf88:	mov	x0, x20
   2cf8c:	cbz	x20, 2cfa0 <__sanitizer_set_death_callback@@Base+0x8b8>
   2cf90:	blr	x23
   2cf94:	tst	w0, #0xff
   2cf98:	b.ne	2cfac <__sanitizer_set_death_callback@@Base+0x8c4>  // b.any
   2cf9c:	ldr	w3, [x21, #112]
   2cfa0:	cmp	w19, w3
   2cfa4:	b.cc	2cf78 <__sanitizer_set_death_callback@@Base+0x890>  // b.lo, b.ul, b.last
   2cfa8:	mov	x20, #0x0                   	// #0
   2cfac:	mov	x0, x20
   2cfb0:	ldp	x21, x22, [sp, #16]
   2cfb4:	ldp	x23, x30, [sp, #32]
   2cfb8:	ldp	x19, x20, [sp], #48
   2cfbc:	ret
   2cfc0:	stp	x19, x20, [sp, #-32]!
   2cfc4:	mov	x19, x0
   2cfc8:	mov	x20, x1
   2cfcc:	add	x0, x0, #0x18
   2cfd0:	str	x30, [sp, #16]
   2cfd4:	bl	1dfc0 <__sanitizer_set_report_fd@@Base+0x46f8>
   2cfd8:	ldr	w1, [x19, #112]
   2cfdc:	cbz	w1, 2d024 <__sanitizer_set_death_callback@@Base+0x93c>
   2cfe0:	mov	x2, #0x0                   	// #0
   2cfe4:	ldr	x4, [x19, #152]
   2cfe8:	b	2cff4 <__sanitizer_set_death_callback@@Base+0x90c>
   2cfec:	cmp	w1, w2
   2cff0:	b.ls	2d024 <__sanitizer_set_death_callback@@Base+0x93c>  // b.plast
   2cff4:	ldr	x0, [x4, x2, lsl #3]
   2cff8:	add	x2, x2, #0x1
   2cffc:	cbz	x0, 2cfec <__sanitizer_set_death_callback@@Base+0x904>
   2d000:	ldr	x3, [x0, #32]
   2d004:	cmp	x20, x3
   2d008:	b.ne	2cfec <__sanitizer_set_death_callback@@Base+0x904>  // b.any
   2d00c:	ldr	w3, [x0, #112]
   2d010:	tst	w3, #0xfffffffb
   2d014:	b.eq	2cfec <__sanitizer_set_death_callback@@Base+0x904>  // b.none
   2d018:	ldr	x30, [sp, #16]
   2d01c:	ldp	x19, x20, [sp], #32
   2d020:	ret
   2d024:	mov	x0, #0x0                   	// #0
   2d028:	ldr	x30, [sp, #16]
   2d02c:	ldp	x19, x20, [sp], #32
   2d030:	ret
   2d034:	nop
   2d038:	stp	x19, x20, [sp, #-48]!
   2d03c:	mov	x19, x0
   2d040:	mov	w20, w1
   2d044:	stp	x21, x22, [sp, #16]
   2d048:	add	x22, x0, #0x18
   2d04c:	mov	x21, x2
   2d050:	mov	x0, x22
   2d054:	str	x30, [sp, #32]
   2d058:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d05c:	ldr	w4, [x19, #112]
   2d060:	mov	w3, w20
   2d064:	cmp	x4, w20, uxtw
   2d068:	b.ls	2d0b4 <__sanitizer_set_death_callback@@Base+0x9cc>  // b.plast
   2d06c:	ldr	x0, [x19, #152]
   2d070:	ldr	x19, [x0, x3, lsl #3]
   2d074:	cbz	x19, 2d0cc <__sanitizer_set_death_callback@@Base+0x9e4>
   2d078:	ldr	w4, [x19, #112]
   2d07c:	cmp	x4, #0x2
   2d080:	b.ne	2d0ec <__sanitizer_set_death_callback@@Base+0xa04>  // b.any
   2d084:	strb	wzr, [x19, #48]
   2d088:	cbz	x21, 2d0a0 <__sanitizer_set_death_callback@@Base+0x9b8>
   2d08c:	mov	x1, x21
   2d090:	add	x0, x19, #0x30
   2d094:	mov	x2, #0x40                  	// #64
   2d098:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   2d09c:	strb	wzr, [x19, #111]
   2d0a0:	mov	x0, x22
   2d0a4:	ldp	x21, x22, [sp, #16]
   2d0a8:	ldr	x30, [sp, #32]
   2d0ac:	ldp	x19, x20, [sp], #48
   2d0b0:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d0b4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d0b8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d0bc:	add	x2, x2, #0x1f8
   2d0c0:	add	x0, x0, #0x20
   2d0c4:	mov	w1, #0xd7                  	// #215
   2d0c8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d0cc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d0d0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d0d4:	add	x2, x2, #0x140
   2d0d8:	add	x0, x0, #0x20
   2d0dc:	mov	x4, #0x0                   	// #0
   2d0e0:	mov	x3, #0x0                   	// #0
   2d0e4:	mov	w1, #0xd9                  	// #217
   2d0e8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d0ec:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d0f0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d0f4:	add	x2, x2, #0x218
   2d0f8:	add	x0, x0, #0x20
   2d0fc:	mov	x3, #0x2                   	// #2
   2d100:	mov	w1, #0xda                  	// #218
   2d104:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d108:	stp	x19, x20, [sp, #-48]!
   2d10c:	mov	x19, x0
   2d110:	mov	x20, x1
   2d114:	stp	x21, x22, [sp, #16]
   2d118:	add	x22, x0, #0x18
   2d11c:	mov	x21, x2
   2d120:	mov	x0, x22
   2d124:	str	x30, [sp, #32]
   2d128:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d12c:	ldr	w4, [x19, #112]
   2d130:	cbz	w4, 2d184 <__sanitizer_set_death_callback@@Base+0xa9c>
   2d134:	mov	x0, #0x0                   	// #0
   2d138:	ldr	x5, [x19, #152]
   2d13c:	b	2d148 <__sanitizer_set_death_callback@@Base+0xa60>
   2d140:	cmp	w4, w0
   2d144:	b.ls	2d184 <__sanitizer_set_death_callback@@Base+0xa9c>  // b.plast
   2d148:	ldr	x19, [x5, x0, lsl #3]
   2d14c:	add	x0, x0, #0x1
   2d150:	cbz	x19, 2d140 <__sanitizer_set_death_callback@@Base+0xa58>
   2d154:	ldr	x3, [x19, #40]
   2d158:	cmp	x3, x20
   2d15c:	b.ne	2d140 <__sanitizer_set_death_callback@@Base+0xa58>  // b.any
   2d160:	ldr	w1, [x19, #112]
   2d164:	cbz	w1, 2d140 <__sanitizer_set_death_callback@@Base+0xa58>
   2d168:	strb	wzr, [x19, #48]
   2d16c:	cbz	x21, 2d184 <__sanitizer_set_death_callback@@Base+0xa9c>
   2d170:	mov	x1, x21
   2d174:	add	x0, x19, #0x30
   2d178:	mov	x2, #0x40                  	// #64
   2d17c:	bl	1ccc0 <__sanitizer_set_report_fd@@Base+0x33f8>
   2d180:	strb	wzr, [x19, #111]
   2d184:	mov	x0, x22
   2d188:	ldp	x21, x22, [sp, #16]
   2d18c:	ldr	x30, [sp, #32]
   2d190:	ldp	x19, x20, [sp], #48
   2d194:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d198:	stp	x19, x20, [sp, #-48]!
   2d19c:	mov	x19, x0
   2d1a0:	mov	w20, w1
   2d1a4:	stp	x21, x22, [sp, #16]
   2d1a8:	add	x21, x0, #0x18
   2d1ac:	mov	x22, x2
   2d1b0:	mov	x0, x21
   2d1b4:	str	x30, [sp, #32]
   2d1b8:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d1bc:	ldr	w4, [x19, #112]
   2d1c0:	mov	w3, w20
   2d1c4:	cmp	x4, w20, uxtw
   2d1c8:	b.ls	2d29c <__sanitizer_set_death_callback@@Base+0xbb4>  // b.plast
   2d1cc:	ldr	x0, [x19, #152]
   2d1d0:	ldr	x20, [x0, x3, lsl #3]
   2d1d4:	cbz	x20, 2d2b4 <__sanitizer_set_death_callback@@Base+0xbcc>
   2d1d8:	ldr	w1, [x20, #112]
   2d1dc:	cbz	w1, 2d21c <__sanitizer_set_death_callback@@Base+0xb34>
   2d1e0:	ldr	x2, [x20]
   2d1e4:	adrp	x0, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2d1e8:	add	x0, x0, #0xac8
   2d1ec:	ldr	x2, [x2, #48]
   2d1f0:	cmp	x2, x0
   2d1f4:	b.ne	2d248 <__sanitizer_set_death_callback@@Base+0xb60>  // b.any
   2d1f8:	cmp	w1, #0x3
   2d1fc:	b.eq	2d260 <__sanitizer_set_death_callback@@Base+0xb78>  // b.none
   2d200:	mov	w0, #0x1                   	// #1
   2d204:	strb	w0, [x20, #116]
   2d208:	mov	x0, x21
   2d20c:	ldp	x21, x22, [sp, #16]
   2d210:	ldr	x30, [sp, #32]
   2d214:	ldp	x19, x20, [sp], #48
   2d218:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d21c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2d220:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d224:	add	x0, x0, #0x260
   2d228:	ldr	x1, [x1, #4008]
   2d22c:	ldr	x1, [x1]
   2d230:	bl	22d00 <OnPrint@@Base+0x398>
   2d234:	mov	x0, x21
   2d238:	ldp	x21, x22, [sp, #16]
   2d23c:	ldr	x30, [sp, #32]
   2d240:	ldp	x19, x20, [sp], #48
   2d244:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d248:	mov	x1, x22
   2d24c:	mov	x0, x20
   2d250:	blr	x2
   2d254:	ldr	w1, [x20, #112]
   2d258:	cmp	w1, #0x3
   2d25c:	b.ne	2d200 <__sanitizer_set_death_callback@@Base+0xb18>  // b.any
   2d260:	ldr	x1, [x20]
   2d264:	mov	w2, #0x4                   	// #4
   2d268:	adrp	x0, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2d26c:	add	x0, x0, #0xaa8
   2d270:	ldr	x1, [x1]
   2d274:	str	xzr, [x20, #40]
   2d278:	str	w2, [x20, #112]
   2d27c:	cmp	x1, x0
   2d280:	b.ne	2d2d4 <__sanitizer_set_death_callback@@Base+0xbec>  // b.any
   2d284:	ldr	w0, [x20, #8]
   2d288:	cbz	w0, 2d208 <__sanitizer_set_death_callback@@Base+0xb20>
   2d28c:	mov	x1, x20
   2d290:	mov	x0, x19
   2d294:	bl	2c6f8 <__sanitizer_set_death_callback@@Base+0x10>
   2d298:	b	2d208 <__sanitizer_set_death_callback@@Base+0xb20>
   2d29c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d2a0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d2a4:	add	x2, x2, #0x1f8
   2d2a8:	add	x0, x0, #0x20
   2d2ac:	mov	w1, #0xed                  	// #237
   2d2b0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d2b4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d2b8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d2bc:	add	x2, x2, #0x140
   2d2c0:	add	x0, x0, #0x20
   2d2c4:	mov	x4, #0x0                   	// #0
   2d2c8:	mov	x3, #0x0                   	// #0
   2d2cc:	mov	w1, #0xef                  	// #239
   2d2d0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d2d4:	mov	x0, x20
   2d2d8:	blr	x1
   2d2dc:	b	2d284 <__sanitizer_set_death_callback@@Base+0xb9c>
   2d2e0:	stp	x19, x20, [sp, #-64]!
   2d2e4:	mov	x20, x0
   2d2e8:	stp	x21, x22, [sp, #16]
   2d2ec:	add	x22, x0, #0x18
   2d2f0:	ubfiz	x21, x1, #3, #32
   2d2f4:	mov	x0, x22
   2d2f8:	stp	x23, x24, [sp, #32]
   2d2fc:	mov	w23, w1
   2d300:	mov	x24, x2
   2d304:	str	x30, [sp, #48]
   2d308:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d30c:	ldr	w4, [x20, #112]
   2d310:	cmp	x23, x4
   2d314:	b.cs	2d358 <__sanitizer_set_death_callback@@Base+0xc70>  // b.hs, b.nlast
   2d318:	ldr	x0, [x20, #152]
   2d31c:	ldr	x19, [x0, x21]
   2d320:	cbz	x19, 2d3d8 <__sanitizer_set_death_callback@@Base+0xcf0>
   2d324:	ldr	w0, [x19, #112]
   2d328:	cbz	w0, 2d444 <__sanitizer_set_death_callback@@Base+0xd5c>
   2d32c:	ldr	w0, [x19, #136]
   2d330:	dmb	ish
   2d334:	cbnz	w0, 2d374 <__sanitizer_set_death_callback@@Base+0xc8c>
   2d338:	mov	x0, x22
   2d33c:	bl	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d340:	bl	1db78 <__sanitizer_set_report_fd@@Base+0x42b0>
   2d344:	mov	x0, x22
   2d348:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d34c:	ldr	w4, [x20, #112]
   2d350:	cmp	x23, x4
   2d354:	b.cc	2d318 <__sanitizer_set_death_callback@@Base+0xc30>  // b.lo, b.ul, b.last
   2d358:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d35c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d360:	mov	x3, x23
   2d364:	add	x2, x2, #0x1f8
   2d368:	add	x0, x0, #0x20
   2d36c:	mov	w1, #0x102                 	// #258
   2d370:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d374:	ldrb	w0, [x19, #116]
   2d378:	cbnz	w0, 2d408 <__sanitizer_set_death_callback@@Base+0xd20>
   2d37c:	ldr	w4, [x19, #112]
   2d380:	cmp	x4, #0x3
   2d384:	b.ne	2d428 <__sanitizer_set_death_callback@@Base+0xd40>  // b.any
   2d388:	ldr	x1, [x19]
   2d38c:	mov	w2, #0x4                   	// #4
   2d390:	str	w2, [x19, #112]
   2d394:	adrp	x0, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2d398:	str	xzr, [x19, #40]
   2d39c:	add	x0, x0, #0xab0
   2d3a0:	ldr	x2, [x1, #8]
   2d3a4:	cmp	x2, x0
   2d3a8:	b.ne	2d3f8 <__sanitizer_set_death_callback@@Base+0xd10>  // b.any
   2d3ac:	ldr	w0, [x19, #8]
   2d3b0:	cbz	w0, 2d3c0 <__sanitizer_set_death_callback@@Base+0xcd8>
   2d3b4:	mov	x1, x19
   2d3b8:	mov	x0, x20
   2d3bc:	bl	2c6f8 <__sanitizer_set_death_callback@@Base+0x10>
   2d3c0:	mov	x0, x22
   2d3c4:	ldp	x21, x22, [sp, #16]
   2d3c8:	ldp	x23, x24, [sp, #32]
   2d3cc:	ldr	x30, [sp, #48]
   2d3d0:	ldp	x19, x20, [sp], #64
   2d3d4:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d3d8:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d3dc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d3e0:	add	x2, x2, #0x140
   2d3e4:	add	x0, x0, #0x20
   2d3e8:	mov	x4, #0x0                   	// #0
   2d3ec:	mov	x3, #0x0                   	// #0
   2d3f0:	mov	w1, #0x104                 	// #260
   2d3f4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d3f8:	mov	x1, x24
   2d3fc:	mov	x0, x19
   2d400:	blr	x2
   2d404:	b	2d3ac <__sanitizer_set_death_callback@@Base+0xcc4>
   2d408:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d40c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d410:	add	x2, x2, #0xb8
   2d414:	add	x0, x0, #0x20
   2d418:	mov	x4, #0x1                   	// #1
   2d41c:	mov	x3, #0x0                   	// #0
   2d420:	mov	w1, #0x38                  	// #56
   2d424:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d428:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d42c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d430:	add	x2, x2, #0xd8
   2d434:	add	x0, x0, #0x20
   2d438:	mov	x3, #0x3                   	// #3
   2d43c:	mov	w1, #0x39                  	// #57
   2d440:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d444:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2d448:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d44c:	add	x0, x0, #0x288
   2d450:	ldr	x1, [x1, #4008]
   2d454:	ldr	x1, [x1]
   2d458:	bl	22d00 <OnPrint@@Base+0x398>
   2d45c:	b	2d3c0 <__sanitizer_set_death_callback@@Base+0xcd8>
   2d460:	stp	x19, x20, [sp, #-48]!
   2d464:	mov	x19, x0
   2d468:	mov	w20, w1
   2d46c:	stp	x21, x22, [sp, #16]
   2d470:	add	x22, x0, #0x18
   2d474:	mov	x0, x22
   2d478:	str	x30, [sp, #32]
   2d47c:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d480:	ldr	x0, [x19, #128]
   2d484:	cbz	x0, 2d5a4 <__sanitizer_set_death_callback@@Base+0xebc>
   2d488:	ldr	w4, [x19, #112]
   2d48c:	sub	x0, x0, #0x1
   2d490:	str	x0, [x19, #128]
   2d494:	mov	w3, w20
   2d498:	cmp	x4, w20, uxtw
   2d49c:	b.ls	2d5c4 <__sanitizer_set_death_callback@@Base+0xedc>  // b.plast
   2d4a0:	ldr	x0, [x19, #152]
   2d4a4:	ldr	x20, [x0, x3, lsl #3]
   2d4a8:	cbz	x20, 2d5dc <__sanitizer_set_death_callback@@Base+0xef4>
   2d4ac:	ldr	w0, [x20, #112]
   2d4b0:	cmp	w0, #0x2
   2d4b4:	b.eq	2d510 <__sanitizer_set_death_callback@@Base+0xe28>  // b.none
   2d4b8:	cmp	w0, #0x1
   2d4bc:	mov	w21, w0
   2d4c0:	b.ne	2d61c <__sanitizer_set_death_callback@@Base+0xf34>  // b.any
   2d4c4:	ldr	x1, [x20]
   2d4c8:	mov	w0, #0x3                   	// #3
   2d4cc:	adrp	x2, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2d4d0:	add	x2, x2, #0x930
   2d4d4:	ldr	x1, [x1, #16]
   2d4d8:	str	w0, [x20, #112]
   2d4dc:	cmp	x1, x2
   2d4e0:	b.eq	2d540 <__sanitizer_set_death_callback@@Base+0xe58>  // b.none
   2d4e4:	mov	x0, x20
   2d4e8:	blr	x1
   2d4ec:	cbnz	w21, 2d68c <__sanitizer_set_death_callback@@Base+0xfa4>
   2d4f0:	dmb	ish
   2d4f4:	mov	w0, #0x1                   	// #1
   2d4f8:	str	w0, [x20, #136]
   2d4fc:	mov	x0, x22
   2d500:	ldp	x21, x22, [sp, #16]
   2d504:	ldr	x30, [sp, #32]
   2d508:	ldp	x19, x20, [sp], #48
   2d50c:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d510:	ldr	x1, [x19, #144]
   2d514:	cbz	x1, 2d648 <__sanitizer_set_death_callback@@Base+0xf60>
   2d518:	ldrb	w21, [x20, #116]
   2d51c:	sub	x1, x1, #0x1
   2d520:	str	x1, [x19, #144]
   2d524:	cbz	w21, 2d668 <__sanitizer_set_death_callback@@Base+0xf80>
   2d528:	ldr	x1, [x20]
   2d52c:	adrp	x2, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2d530:	add	x2, x2, #0x930
   2d534:	ldr	x1, [x1, #16]
   2d538:	cmp	x1, x2
   2d53c:	b.ne	2d4e4 <__sanitizer_set_death_callback@@Base+0xdfc>  // b.any
   2d540:	sub	w0, w0, #0x2
   2d544:	cmp	w0, #0x1
   2d548:	b.hi	2d5fc <__sanitizer_set_death_callback@@Base+0xf14>  // b.pmore
   2d54c:	ldr	x1, [x20]
   2d550:	mov	w2, #0x4                   	// #4
   2d554:	adrp	x0, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2d558:	add	x0, x0, #0xaa8
   2d55c:	ldr	x1, [x1]
   2d560:	str	xzr, [x20, #40]
   2d564:	str	w2, [x20, #112]
   2d568:	cmp	x1, x0
   2d56c:	b.ne	2d63c <__sanitizer_set_death_callback@@Base+0xf54>  // b.any
   2d570:	ldr	w0, [x20, #8]
   2d574:	cbz	w0, 2d4f0 <__sanitizer_set_death_callback@@Base+0xe08>
   2d578:	mov	x0, x19
   2d57c:	mov	x1, x20
   2d580:	bl	2c6f8 <__sanitizer_set_death_callback@@Base+0x10>
   2d584:	dmb	ish
   2d588:	mov	w0, #0x1                   	// #1
   2d58c:	str	w0, [x20, #136]
   2d590:	mov	x0, x22
   2d594:	ldp	x21, x22, [sp, #16]
   2d598:	ldr	x30, [sp, #32]
   2d59c:	ldp	x19, x20, [sp], #48
   2d5a0:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d5a4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d5a8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d5ac:	add	x2, x2, #0x2b0
   2d5b0:	add	x0, x0, #0x20
   2d5b4:	mov	x4, #0x0                   	// #0
   2d5b8:	mov	x3, #0x0                   	// #0
   2d5bc:	mov	w1, #0x11a                 	// #282
   2d5c0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d5c4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d5c8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d5cc:	add	x2, x2, #0x1f8
   2d5d0:	add	x0, x0, #0x20
   2d5d4:	mov	w1, #0x11c                 	// #284
   2d5d8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d5dc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d5e0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d5e4:	add	x2, x2, #0x140
   2d5e8:	add	x0, x0, #0x20
   2d5ec:	mov	x4, #0x0                   	// #0
   2d5f0:	mov	x3, #0x0                   	// #0
   2d5f4:	mov	w1, #0x11e                 	// #286
   2d5f8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d5fc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d600:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d604:	add	x2, x2, #0x68
   2d608:	add	x0, x0, #0x20
   2d60c:	mov	x4, #0x0                   	// #0
   2d610:	mov	x3, #0x0                   	// #0
   2d614:	mov	w1, #0x27                  	// #39
   2d618:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d61c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d620:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d624:	mov	x3, x21
   2d628:	add	x2, x2, #0x2f0
   2d62c:	add	x0, x0, #0x20
   2d630:	mov	x4, #0x1                   	// #1
   2d634:	mov	w1, #0x125                 	// #293
   2d638:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d63c:	mov	x0, x20
   2d640:	blr	x1
   2d644:	b	2d570 <__sanitizer_set_death_callback@@Base+0xe88>
   2d648:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d64c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d650:	add	x2, x2, #0x2d0
   2d654:	add	x0, x0, #0x20
   2d658:	mov	x4, #0x0                   	// #0
   2d65c:	mov	x3, #0x0                   	// #0
   2d660:	mov	w1, #0x121                 	// #289
   2d664:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d668:	ldr	x1, [x20]
   2d66c:	mov	w0, #0x3                   	// #3
   2d670:	ldr	x1, [x1, #16]
   2d674:	str	w0, [x20, #112]
   2d678:	adrp	x0, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2d67c:	add	x0, x0, #0x930
   2d680:	cmp	x1, x0
   2d684:	b.eq	2d4f0 <__sanitizer_set_death_callback@@Base+0xe08>  // b.none
   2d688:	b	2d4e4 <__sanitizer_set_death_callback@@Base+0xdfc>
   2d68c:	ldr	w0, [x20, #112]
   2d690:	b	2d540 <__sanitizer_set_death_callback@@Base+0xe58>
   2d694:	nop
   2d698:	stp	x19, x20, [sp, #-64]!
   2d69c:	mov	x19, x0
   2d6a0:	mov	w20, w1
   2d6a4:	stp	x23, x24, [sp, #32]
   2d6a8:	add	x24, x0, #0x18
   2d6ac:	and	w23, w3, #0xff
   2d6b0:	mov	x0, x24
   2d6b4:	stp	x21, x22, [sp, #16]
   2d6b8:	mov	x22, x4
   2d6bc:	mov	x21, x2
   2d6c0:	str	x30, [sp, #48]
   2d6c4:	bl	1deb8 <__sanitizer_set_report_fd@@Base+0x45f0>
   2d6c8:	ldr	x0, [x19, #144]
   2d6cc:	mov	w3, w20
   2d6d0:	ldr	w4, [x19, #112]
   2d6d4:	add	x0, x0, #0x1
   2d6d8:	str	x0, [x19, #144]
   2d6dc:	cmp	x4, w20, uxtw
   2d6e0:	b.ls	2d75c <__sanitizer_set_death_callback@@Base+0x1074>  // b.plast
   2d6e4:	ldr	x0, [x19, #152]
   2d6e8:	ldr	x0, [x0, x3, lsl #3]
   2d6ec:	cbz	x0, 2d774 <__sanitizer_set_death_callback@@Base+0x108c>
   2d6f0:	ldr	w4, [x0, #112]
   2d6f4:	cmp	x4, #0x1
   2d6f8:	b.ne	2d794 <__sanitizer_set_death_callback@@Base+0x10ac>  // b.any
   2d6fc:	ldr	x2, [x0]
   2d700:	mov	w3, #0x2                   	// #2
   2d704:	adrp	x1, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2d708:	add	x1, x1, #0x938
   2d70c:	ldr	x2, [x2, #24]
   2d710:	str	x21, [x0, #32]
   2d714:	str	w3, [x0, #112]
   2d718:	strb	w23, [x0, #117]
   2d71c:	cmp	x2, x1
   2d720:	b.ne	2d73c <__sanitizer_set_death_callback@@Base+0x1054>  // b.any
   2d724:	mov	x0, x24
   2d728:	ldp	x21, x22, [sp, #16]
   2d72c:	ldp	x23, x24, [sp, #32]
   2d730:	ldr	x30, [sp, #48]
   2d734:	ldp	x19, x20, [sp], #64
   2d738:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d73c:	mov	x1, x22
   2d740:	blr	x2
   2d744:	mov	x0, x24
   2d748:	ldp	x21, x22, [sp, #16]
   2d74c:	ldp	x23, x24, [sp, #32]
   2d750:	ldr	x30, [sp, #48]
   2d754:	ldp	x19, x20, [sp], #64
   2d758:	b	1df50 <__sanitizer_set_report_fd@@Base+0x4688>
   2d75c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d760:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d764:	add	x2, x2, #0x1f8
   2d768:	add	x0, x0, #0x20
   2d76c:	mov	w1, #0x134                 	// #308
   2d770:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d774:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d778:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d77c:	add	x2, x2, #0x140
   2d780:	add	x0, x0, #0x20
   2d784:	mov	x4, #0x0                   	// #0
   2d788:	mov	x3, #0x0                   	// #0
   2d78c:	mov	w1, #0x136                 	// #310
   2d790:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d794:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d798:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d79c:	add	x2, x2, #0x320
   2d7a0:	add	x0, x0, #0x20
   2d7a4:	mov	x3, #0x1                   	// #1
   2d7a8:	mov	w1, #0x137                 	// #311
   2d7ac:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d7b0:	stp	x19, x20, [sp, #-32]!
   2d7b4:	mov	x19, x0
   2d7b8:	ldr	w0, [x1, #8]
   2d7bc:	str	x30, [sp, #16]
   2d7c0:	cbz	w0, 2d874 <__sanitizer_set_death_callback@@Base+0x118c>
   2d7c4:	ldr	x0, [x19, #160]
   2d7c8:	cbz	x0, 2d880 <__sanitizer_set_death_callback@@Base+0x1198>
   2d7cc:	str	xzr, [x1, #128]
   2d7d0:	add	x2, x0, #0x1
   2d7d4:	ldr	x4, [x19, #176]
   2d7d8:	str	x1, [x4, #128]
   2d7dc:	str	x2, [x19, #160]
   2d7e0:	str	x1, [x19, #176]
   2d7e4:	ldr	w1, [x19, #12]
   2d7e8:	cmp	x2, x1
   2d7ec:	b.ls	2d874 <__sanitizer_set_death_callback@@Base+0x118c>  // b.plast
   2d7f0:	ldr	x20, [x19, #168]
   2d7f4:	add	x2, x19, #0xa0
   2d7f8:	ldr	x1, [x20, #128]
   2d7fc:	str	x1, [x2, #8]
   2d800:	cbz	x1, 2d8c0 <__sanitizer_set_death_callback@@Base+0x11d8>
   2d804:	ldr	w3, [x20, #112]
   2d808:	str	x0, [x19, #160]
   2d80c:	cmp	x3, #0x4
   2d810:	b.ne	2d8d4 <__sanitizer_set_death_callback@@Base+0x11ec>  // b.any
   2d814:	strb	wzr, [x20, #48]
   2d818:	str	wzr, [x20, #112]
   2d81c:	dmb	ish
   2d820:	str	wzr, [x20, #136]
   2d824:	ldr	x1, [x20]
   2d828:	adrp	x0, 12000 <_ZdlPvRKSt9nothrow_t@@Base>
   2d82c:	add	x0, x0, #0xac0
   2d830:	ldr	x1, [x1, #40]
   2d834:	cmp	x1, x0
   2d838:	b.ne	2d8c8 <__sanitizer_set_death_callback@@Base+0x11e0>  // b.any
   2d83c:	ldr	w0, [x20, #24]
   2d840:	add	w0, w0, #0x1
   2d844:	str	w0, [x20, #24]
   2d848:	ldr	w1, [x19, #16]
   2d84c:	cmp	w1, #0x0
   2d850:	ccmp	w0, w1, #0x0, ne  // ne = any
   2d854:	b.cs	2d874 <__sanitizer_set_death_callback@@Base+0x118c>  // b.hs, b.nlast
   2d858:	ldr	x0, [x19, #184]
   2d85c:	cbnz	x0, 2d89c <__sanitizer_set_death_callback@@Base+0x11b4>
   2d860:	dup	v0.2d, x20
   2d864:	str	xzr, [x20, #128]
   2d868:	mov	x0, #0x1                   	// #1
   2d86c:	str	x0, [x19, #184]
   2d870:	str	q0, [x19, #192]
   2d874:	ldr	x30, [sp, #16]
   2d878:	ldp	x19, x20, [sp], #32
   2d87c:	ret
   2d880:	dup	v0.2d, x1
   2d884:	str	xzr, [x1, #128]
   2d888:	mov	x1, #0x1                   	// #1
   2d88c:	mov	x2, x1
   2d890:	str	x1, [x19, #160]
   2d894:	stur	q0, [x19, #168]
   2d898:	b	2d7e4 <__sanitizer_set_death_callback@@Base+0x10fc>
   2d89c:	str	xzr, [x20, #128]
   2d8a0:	add	x0, x0, #0x1
   2d8a4:	ldr	x30, [sp, #16]
   2d8a8:	ldr	x2, [x19, #200]
   2d8ac:	str	x20, [x2, #128]
   2d8b0:	str	x0, [x19, #184]
   2d8b4:	str	x20, [x19, #200]
   2d8b8:	ldp	x19, x20, [sp], #32
   2d8bc:	ret
   2d8c0:	str	xzr, [x2, #16]
   2d8c4:	b	2d804 <__sanitizer_set_death_callback@@Base+0x111c>
   2d8c8:	mov	x0, x20
   2d8cc:	blr	x1
   2d8d0:	b	2d83c <__sanitizer_set_death_callback@@Base+0x1154>
   2d8d4:	adrp	x2, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2d8d8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d8dc:	add	x2, x2, #0xff0
   2d8e0:	add	x0, x0, #0x20
   2d8e4:	mov	x4, #0x4                   	// #4
   2d8e8:	mov	w1, #0x143                 	// #323
   2d8ec:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2d8f0:	ldr	x2, [x0, #184]
   2d8f4:	mov	x1, x0
   2d8f8:	mov	x0, #0x0                   	// #0
   2d8fc:	cbz	x2, 2d918 <__sanitizer_set_death_callback@@Base+0x1230>
   2d900:	ldr	x0, [x1, #192]
   2d904:	ldr	x3, [x0, #128]
   2d908:	str	x3, [x1, #192]
   2d90c:	cbz	x3, 2d91c <__sanitizer_set_death_callback@@Base+0x1234>
   2d910:	sub	x2, x2, #0x1
   2d914:	str	x2, [x1, #184]
   2d918:	ret
   2d91c:	sub	x2, x2, #0x1
   2d920:	str	x2, [x1, #184]
   2d924:	str	xzr, [x1, #200]
   2d928:	b	2d918 <__sanitizer_set_death_callback@@Base+0x1230>
   2d92c:	nop
   2d930:	ret
   2d934:	nop
   2d938:	ret
   2d93c:	nop
   2d940:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2d944:	ldr	x0, [x0, #4040]
   2d948:	ldrb	w0, [x0, #121]
   2d94c:	cbz	w0, 2da24 <__sanitizer_set_death_callback@@Base+0x133c>
   2d950:	stp	x19, x20, [sp, #-48]!
   2d954:	mrs	x19, tpidr_el0
   2d958:	adrp	x20, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2d95c:	ldr	x20, [x20, #3408]
   2d960:	stp	x21, x22, [sp, #16]
   2d964:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2d968:	add	x1, x19, x20
   2d96c:	ldr	x0, [x21, #3680]
   2d970:	ldr	x22, [x19, x20]
   2d974:	ldr	w0, [x0]
   2d978:	str	x30, [sp, #32]
   2d97c:	sxtw	x0, w0
   2d980:	cmp	x0, #0x1
   2d984:	b.hi	2d9fc <__sanitizer_set_death_callback@@Base+0x1314>  // b.pmore
   2d988:	mov	x0, #0xffffffffffffffff    	// #-1
   2d98c:	str	x0, [x19, x20]
   2d990:	add	x19, x19, x20
   2d994:	cbz	x22, 2d9ec <__sanitizer_set_death_callback@@Base+0x1304>
   2d998:	ldr	x21, [x21, #3680]
   2d99c:	ldr	x19, [x19, #8]
   2d9a0:	ldr	w0, [x21]
   2d9a4:	sxtw	x0, w0
   2d9a8:	cmp	x0, #0x1
   2d9ac:	b.ls	2d9c4 <__sanitizer_set_death_callback@@Base+0x12dc>  // b.plast
   2d9b0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2d9b4:	mov	x2, x22
   2d9b8:	add	x0, x0, #0x378
   2d9bc:	mov	x1, x19
   2d9c0:	bl	22d00 <OnPrint@@Base+0x398>
   2d9c4:	mov	x0, x19
   2d9c8:	lsl	x1, x22, #4
   2d9cc:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2d9d0:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2d9d4:	add	x0, x0, #0x290
   2d9d8:	ldxr	x1, [x0]
   2d9dc:	sub	x1, x1, #0x1
   2d9e0:	stlxr	w2, x1, [x0]
   2d9e4:	cbnz	w2, 2d9d8 <__sanitizer_set_death_callback@@Base+0x12f0>
   2d9e8:	dmb	ish
   2d9ec:	ldp	x21, x22, [sp, #16]
   2d9f0:	ldr	x30, [sp, #32]
   2d9f4:	ldp	x19, x20, [sp], #48
   2d9f8:	ret
   2d9fc:	mov	x2, x22
   2da00:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2da04:	add	x0, x0, #0x350
   2da08:	bl	22d00 <OnPrint@@Base+0x398>
   2da0c:	ldr	x22, [x19, x20]
   2da10:	mov	x0, #0xffffffffffffffff    	// #-1
   2da14:	str	x0, [x19, x20]
   2da18:	add	x19, x19, x20
   2da1c:	cbnz	x22, 2d998 <__sanitizer_set_death_callback@@Base+0x12b0>
   2da20:	b	2d9ec <__sanitizer_set_death_callback@@Base+0x1304>
   2da24:	ret
   2da28:	adrp	x5, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2da2c:	stp	x19, x20, [sp, #-144]!
   2da30:	mov	x20, x0
   2da34:	ldr	x5, [x5, #4040]
   2da38:	ldrb	w0, [x5, #121]
   2da3c:	str	x30, [sp, #80]
   2da40:	cbz	w0, 2dc2c <__sanitizer_set_death_callback@@Base+0x1544>
   2da44:	adrp	x19, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2da48:	ldr	x19, [x19, #3408]
   2da4c:	stp	x23, x24, [sp, #32]
   2da50:	mrs	x24, tpidr_el0
   2da54:	stp	x27, x28, [sp, #64]
   2da58:	mov	x28, x1
   2da5c:	add	x1, x24, x19
   2da60:	ldr	x5, [x24, x19]
   2da64:	cmn	x5, #0x1
   2da68:	b.eq	2dcac <__sanitizer_set_death_callback@@Base+0x15c4>  // b.none
   2da6c:	stp	x21, x22, [sp, #16]
   2da70:	mov	x23, x3
   2da74:	mov	x22, x2
   2da78:	ldr	x21, [x20]
   2da7c:	stp	x25, x26, [sp, #48]
   2da80:	add	x3, x21, #0x1
   2da84:	cmp	x5, x3
   2da88:	b.cc	2db64 <__sanitizer_set_death_callback@@Base+0x147c>  // b.lo, b.ul, b.last
   2da8c:	ldr	x26, [x1, #8]
   2da90:	lsl	x21, x21, #4
   2da94:	ldr	x26, [x26, x21]
   2da98:	cbnz	x26, 2dc1c <__sanitizer_set_death_callback@@Base+0x1534>
   2da9c:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2daa0:	ldr	x3, [x20, #8]
   2daa4:	ldr	x0, [x25, #3680]
   2daa8:	sub	x5, x28, x3
   2daac:	str	x5, [sp, #136]
   2dab0:	ldr	w0, [x0]
   2dab4:	sxtw	x0, w0
   2dab8:	cmp	x0, #0x1
   2dabc:	b.ls	2dae8 <__sanitizer_set_death_callback@@Base+0x1400>  // b.plast
   2dac0:	adrp	x0, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2dac4:	mov	x4, x28
   2dac8:	ldr	x2, [x20]
   2dacc:	mov	x1, x20
   2dad0:	ldr	x7, [x0, #656]
   2dad4:	add	x6, sp, #0x88
   2dad8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dadc:	add	x0, x0, #0x440
   2dae0:	bl	22d00 <OnPrint@@Base+0x398>
   2dae4:	ldr	x5, [sp, #136]
   2dae8:	add	x1, x24, x19
   2daec:	ldr	x0, [x1, #24]
   2daf0:	cmp	x0, x5
   2daf4:	b.eq	2dc78 <__sanitizer_set_death_callback@@Base+0x1590>  // b.none
   2daf8:	cmp	x23, x5
   2dafc:	ccmp	x22, x5, #0x2, hi  // hi = pmore
   2db00:	b.ls	2dcd4 <__sanitizer_set_death_callback@@Base+0x15ec>  // b.plast
   2db04:	and	x0, x5, #0xfff
   2db08:	cmp	x0, #0x10
   2db0c:	ldr	x0, [x25, #3680]
   2db10:	b.eq	2dc44 <__sanitizer_set_death_callback@@Base+0x155c>  // b.none
   2db14:	ldr	w0, [x0]
   2db18:	sxtw	x0, w0
   2db1c:	cmp	x0, #0x1
   2db20:	b.ls	2db34 <__sanitizer_set_death_callback@@Base+0x144c>  // b.plast
   2db24:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2db28:	add	x0, x0, #0x520
   2db2c:	bl	22d00 <OnPrint@@Base+0x398>
   2db30:	ldr	x5, [sp, #136]
   2db34:	add	x19, x24, x19
   2db38:	ldp	x23, x24, [sp, #32]
   2db3c:	ldr	x1, [x19, #8]
   2db40:	ldp	x27, x28, [sp, #64]
   2db44:	add	x0, x1, x21
   2db48:	str	x5, [x1, x21]
   2db4c:	ldp	x21, x22, [sp, #16]
   2db50:	str	x26, [x0, #8]
   2db54:	ldp	x25, x26, [sp, #48]
   2db58:	ldr	x30, [sp, #80]
   2db5c:	ldp	x19, x20, [sp], #144
   2db60:	ret
   2db64:	tst	x3, x21
   2db68:	b.eq	2dc3c <__sanitizer_set_death_callback@@Base+0x1554>  // b.none
   2db6c:	clz	x1, x3
   2db70:	mov	w4, #0x3f                  	// #63
   2db74:	sub	w4, w4, w1
   2db78:	mov	x1, #0x1                   	// #1
   2db7c:	add	w27, w4, #0x1
   2db80:	lsl	x27, x1, x27
   2db84:	cmp	x3, x27
   2db88:	b.cs	2ddb8 <__sanitizer_set_death_callback@@Base+0x16d0>  // b.hs, b.nlast
   2db8c:	lsl	x4, x1, x4
   2db90:	cmp	x3, x4
   2db94:	b.ls	2ddd4 <__sanitizer_set_death_callback@@Base+0x16ec>  // b.plast
   2db98:	cmp	x27, #0x100
   2db9c:	mov	x4, #0x100                 	// #256
   2dba0:	csel	x27, x27, x4, cs  // cs = hs, nlast
   2dba4:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dba8:	mov	w2, #0x0                   	// #0
   2dbac:	add	x1, x1, #0x3a0
   2dbb0:	lsl	x0, x27, #4
   2dbb4:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2dbb8:	adrp	x4, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2dbbc:	mov	x26, x0
   2dbc0:	add	x0, x4, #0x290
   2dbc4:	ldxr	x2, [x0]
   2dbc8:	add	x1, x2, #0x1
   2dbcc:	stlxr	w3, x1, [x0]
   2dbd0:	cbnz	w3, 2dbc4 <__sanitizer_set_death_callback@@Base+0x14dc>
   2dbd4:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2dbd8:	dmb	ish
   2dbdc:	ldr	x0, [x25, #3680]
   2dbe0:	ldr	w0, [x0]
   2dbe4:	sxtw	x0, w0
   2dbe8:	cmp	x0, #0x1
   2dbec:	b.hi	2dcb8 <__sanitizer_set_death_callback@@Base+0x15d0>  // b.pmore
   2dbf0:	mov	x0, #0xfffff               	// #1048575
   2dbf4:	cmp	x2, x0
   2dbf8:	b.hi	2dd98 <__sanitizer_set_death_callback@@Base+0x16b0>  // b.pmore
   2dbfc:	ldr	x3, [x24, x19]
   2dc00:	add	x5, x24, x19
   2dc04:	cbnz	x3, 2dd00 <__sanitizer_set_death_callback@@Base+0x1618>
   2dc08:	lsl	x21, x21, #4
   2dc0c:	str	x26, [x5, #8]
   2dc10:	str	x27, [x24, x19]
   2dc14:	ldr	x26, [x26, x21]
   2dc18:	cbz	x26, 2da9c <__sanitizer_set_death_callback@@Base+0x13b4>
   2dc1c:	ldp	x21, x22, [sp, #16]
   2dc20:	ldp	x23, x24, [sp, #32]
   2dc24:	ldp	x25, x26, [sp, #48]
   2dc28:	ldp	x27, x28, [sp, #64]
   2dc2c:	mov	x0, #0x0                   	// #0
   2dc30:	ldr	x30, [sp, #80]
   2dc34:	ldp	x19, x20, [sp], #144
   2dc38:	ret
   2dc3c:	mov	x27, x3
   2dc40:	b	2db98 <__sanitizer_set_death_callback@@Base+0x14b0>
   2dc44:	ldr	w0, [x0]
   2dc48:	ldp	x26, x5, [x5, #-16]
   2dc4c:	str	x5, [sp, #136]
   2dc50:	sxtw	x0, w0
   2dc54:	cmp	x0, #0x1
   2dc58:	b.ls	2db34 <__sanitizer_set_death_callback@@Base+0x144c>  // b.plast
   2dc5c:	mov	x1, x5
   2dc60:	mov	x2, x26
   2dc64:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dc68:	add	x0, x0, #0x4e8
   2dc6c:	bl	22d00 <OnPrint@@Base+0x398>
   2dc70:	ldr	x5, [sp, #136]
   2dc74:	b	2db34 <__sanitizer_set_death_callback@@Base+0x144c>
   2dc78:	ldr	x0, [x25, #3680]
   2dc7c:	ldr	x26, [x1, #16]
   2dc80:	ldr	w0, [x0]
   2dc84:	sxtw	x0, w0
   2dc88:	cmp	x0, #0x1
   2dc8c:	b.ls	2db34 <__sanitizer_set_death_callback@@Base+0x144c>  // b.plast
   2dc90:	mov	x1, x5
   2dc94:	mov	x2, x26
   2dc98:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dc9c:	add	x0, x0, #0x490
   2dca0:	bl	22d00 <OnPrint@@Base+0x398>
   2dca4:	ldr	x5, [sp, #136]
   2dca8:	b	2db34 <__sanitizer_set_death_callback@@Base+0x144c>
   2dcac:	ldp	x23, x24, [sp, #32]
   2dcb0:	ldp	x27, x28, [sp, #64]
   2dcb4:	b	2dc2c <__sanitizer_set_death_callback@@Base+0x1544>
   2dcb8:	add	x1, x24, x19
   2dcbc:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dcc0:	add	x0, x0, #0x3b0
   2dcc4:	str	x2, [sp, #96]
   2dcc8:	bl	22d00 <OnPrint@@Base+0x398>
   2dccc:	ldr	x2, [sp, #96]
   2dcd0:	b	2dbf0 <__sanitizer_set_death_callback@@Base+0x1508>
   2dcd4:	ldr	x0, [x25, #3680]
   2dcd8:	ldr	w0, [x0]
   2dcdc:	sxtw	x0, w0
   2dce0:	cmp	x0, #0x1
   2dce4:	b.ls	2db34 <__sanitizer_set_death_callback@@Base+0x144c>  // b.plast
   2dce8:	mov	x1, x5
   2dcec:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dcf0:	add	x0, x0, #0x4c8
   2dcf4:	bl	22d00 <OnPrint@@Base+0x398>
   2dcf8:	ldr	x5, [sp, #136]
   2dcfc:	b	2db34 <__sanitizer_set_death_callback@@Base+0x144c>
   2dd00:	ldr	x6, [x5, #8]
   2dd04:	lsl	x7, x3, #4
   2dd08:	mov	x2, x7
   2dd0c:	mov	x0, x26
   2dd10:	mov	x1, x6
   2dd14:	stp	x6, x7, [sp, #96]
   2dd18:	stp	x5, x3, [sp, #112]
   2dd1c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2dd20:	ldr	x0, [x25, #3680]
   2dd24:	str	x27, [x24, x19]
   2dd28:	ldr	x5, [sp, #112]
   2dd2c:	ldr	w0, [x0]
   2dd30:	ldp	x6, x7, [sp, #96]
   2dd34:	str	x26, [x5, #8]
   2dd38:	sxtw	x0, w0
   2dd3c:	cmp	x0, #0x1
   2dd40:	b.hi	2dd78 <__sanitizer_set_death_callback@@Base+0x1690>  // b.pmore
   2dd44:	mov	x1, x7
   2dd48:	mov	x0, x6
   2dd4c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2dd50:	adrp	x4, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2dd54:	add	x4, x4, #0x290
   2dd58:	ldxr	x0, [x4]
   2dd5c:	sub	x0, x0, #0x1
   2dd60:	stlxr	w1, x0, [x4]
   2dd64:	cbnz	w1, 2dd58 <__sanitizer_set_death_callback@@Base+0x1670>
   2dd68:	add	x0, x24, x19
   2dd6c:	dmb	ish
   2dd70:	ldr	x26, [x0, #8]
   2dd74:	b	2da90 <__sanitizer_set_death_callback@@Base+0x13a8>
   2dd78:	ldr	x3, [sp, #120]
   2dd7c:	mov	x1, x6
   2dd80:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dd84:	add	x0, x0, #0x378
   2dd88:	mov	x2, x3
   2dd8c:	bl	22d00 <OnPrint@@Base+0x398>
   2dd90:	ldp	x6, x7, [sp, #96]
   2dd94:	b	2dd44 <__sanitizer_set_death_callback@@Base+0x165c>
   2dd98:	mov	x3, x2
   2dd9c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dda0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dda4:	add	x0, x0, #0x3f8
   2dda8:	add	x2, x2, #0x3d8
   2ddac:	mov	x4, #0x100000              	// #1048576
   2ddb0:	mov	w1, #0x3c                  	// #60
   2ddb4:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2ddb8:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2ddbc:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2ddc0:	mov	x4, x27
   2ddc4:	add	x2, x2, #0x680
   2ddc8:	add	x0, x0, #0x578
   2ddcc:	mov	w1, #0x17b                 	// #379
   2ddd0:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2ddd4:	adrp	x2, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2ddd8:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2dddc:	add	x2, x2, #0x6a8
   2dde0:	add	x0, x0, #0x578
   2dde4:	mov	w1, #0x17c                 	// #380
   2dde8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2ddec:	nop
   2ddf0:	adrp	x3, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ddf4:	stp	x19, x20, [sp, #-32]!
   2ddf8:	mov	x19, x0
   2ddfc:	ldr	x3, [x3, #4040]
   2de00:	ldrb	w0, [x3, #121]
   2de04:	str	x30, [sp, #16]
   2de08:	cbz	w0, 2de3c <__sanitizer_set_death_callback@@Base+0x1754>
   2de0c:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2de10:	mov	x20, x1
   2de14:	ldr	x0, [x0, #3680]
   2de18:	ldr	w0, [x0]
   2de1c:	sxtw	x0, w0
   2de20:	cmp	x0, #0x1
   2de24:	b.hi	2de48 <__sanitizer_set_death_callback@@Base+0x1760>  // b.pmore
   2de28:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2de2c:	ldr	x0, [x0, #3408]
   2de30:	mrs	x1, tpidr_el0
   2de34:	add	x0, x1, x0
   2de38:	stp	x20, x19, [x0, #16]
   2de3c:	ldr	x30, [sp, #16]
   2de40:	ldp	x19, x20, [sp], #32
   2de44:	ret
   2de48:	mov	x2, x1
   2de4c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2de50:	mov	x1, x19
   2de54:	add	x0, x0, #0x550
   2de58:	bl	22d00 <OnPrint@@Base+0x398>
   2de5c:	b	2de28 <__sanitizer_set_death_callback@@Base+0x1740>
   2de60:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2de64:	ldr	x0, [x0, #3408]
   2de68:	mrs	x1, tpidr_el0
   2de6c:	add	x0, x1, x0
   2de70:	ret
   2de74:	nop
   2de78:	ldr	x0, [x0]
   2de7c:	cmn	x0, #0x1
   2de80:	cset	w0, eq  // eq = none
   2de84:	ret
   2de88:	stp	x19, x20, [sp, #-32]!
   2de8c:	mov	x19, x1
   2de90:	ldr	w4, [x1, #8]
   2de94:	ldr	x1, [x1]
   2de98:	stp	x21, x30, [sp, #16]
   2de9c:	ldr	w3, [x1, #8]
   2dea0:	cmp	x3, x4
   2dea4:	b.cs	2df1c <__sanitizer_set_death_callback@@Base+0x1834>  // b.hs, b.nlast
   2dea8:	adrp	x21, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2deac:	bl	6a60 <_Unwind_GetIP@plt>
   2deb0:	mov	x20, x0
   2deb4:	ldr	x21, [x21, #4000]
   2deb8:	ldr	x0, [x21]
   2debc:	cbz	x0, 2defc <__sanitizer_set_death_callback@@Base+0x1814>
   2dec0:	cmp	x20, x0
   2dec4:	b.cc	2df0c <__sanitizer_set_death_callback@@Base+0x1824>  // b.lo, b.ul, b.last
   2dec8:	ldr	x1, [x19]
   2decc:	ldr	w3, [x19, #8]
   2ded0:	ldr	w0, [x1, #8]
   2ded4:	add	w2, w0, #0x1
   2ded8:	str	w2, [x1, #8]
   2dedc:	add	x0, x1, w0, uxtw #3
   2dee0:	cmp	w2, w3
   2dee4:	str	x20, [x0, #16]
   2dee8:	b.eq	2df0c <__sanitizer_set_death_callback@@Base+0x1824>  // b.none
   2deec:	mov	w0, #0x0                   	// #0
   2def0:	ldp	x21, x30, [sp, #16]
   2def4:	ldp	x19, x20, [sp], #32
   2def8:	ret
   2defc:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2df00:	str	x0, [x21]
   2df04:	cmp	x20, x0
   2df08:	b.cs	2dec8 <__sanitizer_set_death_callback@@Base+0x17e0>  // b.hs, b.nlast
   2df0c:	mov	w0, #0x4                   	// #4
   2df10:	ldp	x21, x30, [sp, #16]
   2df14:	ldp	x19, x20, [sp], #32
   2df18:	ret
   2df1c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2df20:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2df24:	add	x2, x2, #0x570
   2df28:	add	x0, x0, #0x5a0
   2df2c:	mov	w1, #0x6d                  	// #109
   2df30:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2df34:	nop
   2df38:	b	6a60 <_Unwind_GetIP@plt>
   2df3c:	nop
   2df40:	stp	x19, x20, [sp, #-48]!
   2df44:	cmp	w2, #0x1
   2df48:	str	x30, [sp, #16]
   2df4c:	b.ls	2dfbc <__sanitizer_set_death_callback@@Base+0x18d4>  // b.plast
   2df50:	mov	x19, x0
   2df54:	add	w2, w2, #0x1
   2df58:	cmp	w2, #0x100
   2df5c:	mov	x20, x1
   2df60:	mov	w1, #0x100                 	// #256
   2df64:	csel	w2, w2, w1, ls  // ls = plast
   2df68:	str	wzr, [x19, #8]
   2df6c:	add	x1, sp, #0x20
   2df70:	adrp	x0, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2df74:	add	x0, x0, #0xe88
   2df78:	str	x19, [sp, #32]
   2df7c:	str	w2, [sp, #40]
   2df80:	bl	6650 <_Unwind_Backtrace@plt>
   2df84:	mov	x1, x20
   2df88:	mov	x0, x19
   2df8c:	bl	24b18 <OnPrint@@Base+0x21b0>
   2df90:	mov	x1, x0
   2df94:	cbnz	x0, 2dfa4 <__sanitizer_set_death_callback@@Base+0x18bc>
   2df98:	ldr	w0, [x19, #8]
   2df9c:	cmp	w0, #0x1
   2dfa0:	cset	x1, hi  // hi = pmore
   2dfa4:	mov	x0, x19
   2dfa8:	bl	24a60 <OnPrint@@Base+0x20f8>
   2dfac:	ldr	x30, [sp, #16]
   2dfb0:	str	x20, [x19, #16]
   2dfb4:	ldp	x19, x20, [sp], #48
   2dfb8:	ret
   2dfbc:	mov	w3, w2
   2dfc0:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2dfc4:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2dfc8:	add	x0, x0, #0x5a0
   2dfcc:	add	x2, x2, #0xdc0
   2dfd0:	mov	x4, #0x2                   	// #2
   2dfd4:	mov	w1, #0x7a                  	// #122
   2dfd8:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2dfdc:	nop
   2dfe0:	stp	x19, x20, [sp, #-112]!
   2dfe4:	cmp	w3, #0x1
   2dfe8:	stp	x21, x22, [sp, #16]
   2dfec:	stp	x23, x24, [sp, #32]
   2dff0:	mov	w24, w3
   2dff4:	str	x30, [sp, #80]
   2dff8:	b.ls	2e254 <__sanitizer_set_death_callback@@Base+0x1b6c>  // b.plast
   2dffc:	adrp	x19, 9c4000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2e000:	mov	x21, x0
   2e004:	mov	x20, x1
   2e008:	add	x1, x19, #0x298
   2e00c:	ldr	x0, [x19, #664]
   2e010:	cbz	x0, 2e29c <__sanitizer_set_death_callback@@Base+0x1bb4>
   2e014:	ldr	x0, [x1, #8]
   2e018:	stp	x25, x26, [sp, #48]
   2e01c:	mov	x23, x2
   2e020:	stp	x27, x28, [sp, #64]
   2e024:	blr	x0
   2e028:	mov	x22, x0
   2e02c:	cbz	x0, 2e27c <__sanitizer_set_death_callback@@Base+0x1b94>
   2e030:	adrp	x25, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2e034:	ldr	x20, [x25, #4000]
   2e038:	ldr	x3, [x20]
   2e03c:	cbz	x3, 2e1e4 <__sanitizer_set_death_callback@@Base+0x1afc>
   2e040:	sub	x0, x3, #0x1
   2e044:	tst	x0, x3
   2e048:	b.ne	2e31c <__sanitizer_set_death_callback@@Base+0x1c34>  // b.any
   2e04c:	neg	x20, x3
   2e050:	mov	x27, #0x17ff                	// #6143
   2e054:	add	x3, x3, x27
   2e058:	mov	w2, #0x0                   	// #0
   2e05c:	and	x20, x3, x20
   2e060:	adrp	x28, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2e064:	mov	x0, x20
   2e068:	add	x1, x28, #0x700
   2e06c:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2e070:	mov	x26, x0
   2e074:	mov	x2, #0x0                   	// #0
   2e078:	mov	x1, #0x0                   	// #0
   2e07c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2e080:	mov	x1, #0x0                   	// #0
   2e084:	mov	x0, #0x0                   	// #0
   2e088:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2e08c:	cmp	x20, x27
   2e090:	b.ls	2e1f4 <__sanitizer_set_death_callback@@Base+0x1b0c>  // b.plast
   2e094:	mov	x2, #0x1800                	// #6144
   2e098:	mov	w1, #0x0                   	// #0
   2e09c:	mov	x0, x26
   2e0a0:	bl	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   2e0a4:	ldr	x6, [x19, #664]
   2e0a8:	add	x19, x19, #0x298
   2e0ac:	mov	x1, x23
   2e0b0:	mov	x5, x24
   2e0b4:	mov	x3, x26
   2e0b8:	mov	x2, x22
   2e0bc:	mov	x4, #0x0                   	// #0
   2e0c0:	mov	x0, #0x0                   	// #0
   2e0c4:	blr	x6
   2e0c8:	ldr	x1, [x19, #16]
   2e0cc:	mov	x19, x0
   2e0d0:	mov	x0, x22
   2e0d4:	blr	x1
   2e0d8:	tbnz	x19, #63, 2e1bc <__sanitizer_set_death_callback@@Base+0x1ad4>
   2e0dc:	cmp	x19, #0x100
   2e0e0:	b.gt	2e338 <__sanitizer_set_death_callback@@Base+0x1c50>
   2e0e4:	str	wzr, [x21, #8]
   2e0e8:	cmp	x19, #0x0
   2e0ec:	cbz	x19, 2e1bc <__sanitizer_set_death_callback@@Base+0x1ad4>
   2e0f0:	add	x0, x19, x19, lsl #1
   2e0f4:	add	x1, x19, #0x2
   2e0f8:	mov	x2, #0x8                   	// #8
   2e0fc:	mov	x3, #0x18                  	// #24
   2e100:	lsl	x0, x0, #3
   2e104:	lsl	x1, x1, #3
   2e108:	sub	x0, x0, #0x10
   2e10c:	csel	x1, x1, x3, gt
   2e110:	csel	x0, x0, x2, gt
   2e114:	add	x2, x21, #0x10
   2e118:	add	x0, x26, x0
   2e11c:	add	x1, x21, x1
   2e120:	cmp	x2, x0
   2e124:	ccmp	x26, x1, #0x2, cc  // cc = lo, ul, last
   2e128:	ccmp	x19, #0x7, #0x4, cs  // cs = hs, nlast
   2e12c:	b.le	2e2f8 <__sanitizer_set_death_callback@@Base+0x1c10>
   2e130:	cmp	x19, #0x0
   2e134:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e138:	csinc	x0, x19, xzr, gt
   2e13c:	mov	x2, x26
   2e140:	sub	x0, x0, #0x1
   2e144:	mov	x1, x21
   2e148:	ldr	q0, [x3, #1584]
   2e14c:	lsr	x3, x0, #1
   2e150:	add	x3, x21, x3, lsl #4
   2e154:	nop
   2e158:	ld3	{v1.2d-v3.2d}, [x2], #48
   2e15c:	add	v1.2d, v0.2d, v1.2d
   2e160:	str	q1, [x1, #16]!
   2e164:	cmp	x1, x3
   2e168:	b.ne	2e158 <__sanitizer_set_death_callback@@Base+0x1a70>  // b.any
   2e16c:	and	x0, x0, #0xfffffffffffffffe
   2e170:	add	x3, x0, #0x1
   2e174:	mov	w2, w0
   2e178:	add	x1, x0, x0, lsl #1
   2e17c:	add	x2, x2, #0x2
   2e180:	cmp	x19, x3
   2e184:	add	w0, w0, #0x1
   2e188:	lsl	x1, x1, #3
   2e18c:	ldr	x3, [x26, x1]
   2e190:	add	x3, x3, #0x2
   2e194:	str	x3, [x21, x2, lsl #3]
   2e198:	b.le	2e1b0 <__sanitizer_set_death_callback@@Base+0x1ac8>
   2e19c:	add	x1, x26, x1
   2e1a0:	add	x0, x21, w0, uxtw #3
   2e1a4:	ldr	x1, [x1, #24]
   2e1a8:	add	x1, x1, #0x2
   2e1ac:	str	x1, [x0, #16]
   2e1b0:	cmp	x19, #0x0
   2e1b4:	csinc	w19, w19, wzr, gt
   2e1b8:	str	w19, [x21, #8]
   2e1bc:	mov	x0, x26
   2e1c0:	mov	x1, x20
   2e1c4:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2e1c8:	ldp	x25, x26, [sp, #48]
   2e1cc:	ldp	x27, x28, [sp, #64]
   2e1d0:	ldp	x21, x22, [sp, #16]
   2e1d4:	ldp	x23, x24, [sp, #32]
   2e1d8:	ldr	x30, [sp, #80]
   2e1dc:	ldp	x19, x20, [sp], #112
   2e1e0:	ret
   2e1e4:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2e1e8:	mov	x3, x0
   2e1ec:	str	x0, [x20]
   2e1f0:	b	2e040 <__sanitizer_set_death_callback@@Base+0x1958>
   2e1f4:	ldr	x25, [x25, #4000]
   2e1f8:	ldr	x0, [x25]
   2e1fc:	cbz	x0, 2e32c <__sanitizer_set_death_callback@@Base+0x1c44>
   2e200:	sub	x1, x0, #0x1
   2e204:	tst	x1, x0
   2e208:	b.ne	2e31c <__sanitizer_set_death_callback@@Base+0x1c34>  // b.any
   2e20c:	mov	x1, #0x17ff                	// #6143
   2e210:	add	x25, x0, x1
   2e214:	neg	x0, x0
   2e218:	add	x1, x28, #0x700
   2e21c:	and	x25, x25, x0
   2e220:	mov	w2, #0x0                   	// #0
   2e224:	mov	x0, x25
   2e228:	bl	20008 <__sanitizer_set_report_fd@@Base+0x6740>
   2e22c:	mov	x2, #0x0                   	// #0
   2e230:	mov	x27, x0
   2e234:	mov	x1, x26
   2e238:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   2e23c:	mov	x1, x20
   2e240:	mov	x0, x26
   2e244:	mov	x20, x25
   2e248:	mov	x26, x27
   2e24c:	bl	200d8 <__sanitizer_set_report_fd@@Base+0x6810>
   2e250:	b	2e094 <__sanitizer_set_death_callback@@Base+0x19ac>
   2e254:	adrp	x2, 4c000 <__asan_backtrace_vector_release@@Base+0x5bb0>
   2e258:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e25c:	mov	x3, x24
   2e260:	add	x2, x2, #0xdc0
   2e264:	add	x0, x0, #0x5a0
   2e268:	mov	x4, #0x2                   	// #2
   2e26c:	mov	w1, #0x94                  	// #148
   2e270:	stp	x25, x26, [sp, #48]
   2e274:	stp	x27, x28, [sp, #64]
   2e278:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2e27c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e280:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e284:	add	x2, x2, #0x5f0
   2e288:	add	x0, x0, #0x5a0
   2e28c:	mov	x4, #0x0                   	// #0
   2e290:	mov	x3, #0x0                   	// #0
   2e294:	mov	w1, #0x9b                  	// #155
   2e298:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2e29c:	add	w3, w3, #0x1
   2e2a0:	mov	w1, #0x100                 	// #256
   2e2a4:	cmp	w3, #0x100
   2e2a8:	str	wzr, [x21, #8]
   2e2ac:	csel	w3, w3, w1, ls  // ls = plast
   2e2b0:	adrp	x0, 2d000 <__sanitizer_set_death_callback@@Base+0x918>
   2e2b4:	add	x1, sp, #0x60
   2e2b8:	add	x0, x0, #0xe88
   2e2bc:	str	x21, [sp, #96]
   2e2c0:	str	w3, [sp, #104]
   2e2c4:	bl	6650 <_Unwind_Backtrace@plt>
   2e2c8:	mov	x1, x20
   2e2cc:	mov	x0, x21
   2e2d0:	bl	24b18 <OnPrint@@Base+0x21b0>
   2e2d4:	mov	x1, x0
   2e2d8:	cbnz	x0, 2e2e8 <__sanitizer_set_death_callback@@Base+0x1c00>
   2e2dc:	ldr	w0, [x21, #8]
   2e2e0:	cmp	w0, #0x1
   2e2e4:	cset	x1, hi  // hi = pmore
   2e2e8:	mov	x0, x21
   2e2ec:	bl	24a60 <OnPrint@@Base+0x20f8>
   2e2f0:	str	x20, [x21, #16]
   2e2f4:	b	2e1d0 <__sanitizer_set_death_callback@@Base+0x1ae8>
   2e2f8:	mov	x3, x26
   2e2fc:	mov	x0, #0x0                   	// #0
   2e300:	ldr	x1, [x3], #24
   2e304:	add	x1, x1, #0x2
   2e308:	str	x1, [x2, x0, lsl #3]
   2e30c:	add	x0, x0, #0x1
   2e310:	cmp	x19, x0
   2e314:	b.gt	2e300 <__sanitizer_set_death_callback@@Base+0x1c18>
   2e318:	b	2e1b0 <__sanitizer_set_death_callback@@Base+0x1ac8>
   2e31c:	adrp	x0, 46000 <__asan_backtrace_release_view@@Base+0x48>
   2e320:	add	x0, x0, #0x6e8
   2e324:	bl	18cd8 <__sanitizer_cov_dump@@Base+0x1e58>
   2e328:	bl	2c5f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2e32c:	bl	1eb48 <__sanitizer_set_report_fd@@Base+0x5280>
   2e330:	str	x0, [x25]
   2e334:	b	2e200 <__sanitizer_set_death_callback@@Base+0x1b18>
   2e338:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e33c:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e340:	mov	x3, x19
   2e344:	add	x2, x2, #0x600
   2e348:	add	x0, x0, #0x5a0
   2e34c:	mov	x4, #0x100                 	// #256
   2e350:	mov	w1, #0xa3                  	// #163
   2e354:	bl	2c660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2e358:	stp	x19, x20, [sp, #-48]!
   2e35c:	mov	x19, x1
   2e360:	mov	x20, x0
   2e364:	mov	x1, x0
   2e368:	mov	x0, #0xffffffffffffffff    	// #-1
   2e36c:	stp	x21, x22, [sp, #16]
   2e370:	mov	x22, x2
   2e374:	mov	x21, x3
   2e378:	str	x30, [sp, #32]
   2e37c:	bl	6830 <dlsym@plt>
   2e380:	str	x0, [x19]
   2e384:	cbz	x0, 2e3a0 <__sanitizer_set_death_callback@@Base+0x1cb8>
   2e388:	cmp	x22, x21
   2e38c:	cset	w0, eq  // eq = none
   2e390:	ldp	x21, x22, [sp, #16]
   2e394:	ldr	x30, [sp, #32]
   2e398:	ldp	x19, x20, [sp], #48
   2e39c:	ret
   2e3a0:	mov	x1, x20
   2e3a4:	bl	6830 <dlsym@plt>
   2e3a8:	str	x0, [x19]
   2e3ac:	cmp	x22, x21
   2e3b0:	cset	w0, eq  // eq = none
   2e3b4:	ldp	x21, x22, [sp, #16]
   2e3b8:	ldr	x30, [sp, #32]
   2e3bc:	ldp	x19, x20, [sp], #48
   2e3c0:	ret
   2e3c4:	nop
   2e3c8:	mov	x2, x1
   2e3cc:	mov	x1, x0
   2e3d0:	mov	x0, #0xffffffffffffffff    	// #-1
   2e3d4:	b	6790 <dlvsym@plt>
   2e3d8:	ldr	x2, [x0]
   2e3dc:	mov	w3, #0xffffffff            	// #-1
   2e3e0:	ldr	x1, [x1]
   2e3e4:	cmp	x2, x1
   2e3e8:	cset	w0, hi  // hi = pmore
   2e3ec:	csel	w0, w0, w3, cs  // cs = hs, nlast
   2e3f0:	ret
   2e3f4:	nop
   2e3f8:	mov	x2, x0
   2e3fc:	ldr	x0, [x1]
   2e400:	ldr	x3, [x2]
   2e404:	cmp	x3, x0
   2e408:	b.cc	2e44c <__sanitizer_set_death_callback@@Base+0x1d64>  // b.lo, b.ul, b.last
   2e40c:	mov	w0, #0x1                   	// #1
   2e410:	b.hi	2e448 <__sanitizer_set_death_callback@@Base+0x1d60>  // b.pmore
   2e414:	ldr	x3, [x1, #8]
   2e418:	ldr	x4, [x2, #8]
   2e41c:	cmp	x4, x3
   2e420:	b.cc	2e448 <__sanitizer_set_death_callback@@Base+0x1d60>  // b.lo, b.ul, b.last
   2e424:	mov	w0, #0xffffffff            	// #-1
   2e428:	b.hi	2e448 <__sanitizer_set_death_callback@@Base+0x1d60>  // b.pmore
   2e42c:	ldr	x1, [x1, #16]
   2e430:	ldr	x2, [x2, #16]
   2e434:	ldr	x1, [x1, #56]
   2e438:	ldr	x2, [x2, #56]
   2e43c:	cmp	x2, x1
   2e440:	cset	w3, gt
   2e444:	csel	w0, w3, w0, ge  // ge = tcont
   2e448:	ret
   2e44c:	mov	w0, #0xffffffff            	// #-1
   2e450:	ret
   2e454:	nop
   2e458:	mov	x2, x0
   2e45c:	ldr	x0, [x1]
   2e460:	ldr	x3, [x2]
   2e464:	cmp	x3, x0
   2e468:	b.cc	2e490 <__sanitizer_set_death_callback@@Base+0x1da8>  // b.lo, b.ul, b.last
   2e46c:	mov	w0, #0x1                   	// #1
   2e470:	b.hi	2e48c <__sanitizer_set_death_callback@@Base+0x1da4>  // b.pmore
   2e474:	ldr	w1, [x1, #20]
   2e478:	mov	w3, #0xffffffff            	// #-1
   2e47c:	ldr	w2, [x2, #20]
   2e480:	cmp	w2, w1
   2e484:	cset	w0, gt
   2e488:	csel	w0, w0, w3, ge  // ge = tcont
   2e48c:	ret
   2e490:	mov	w0, #0xffffffff            	// #-1
   2e494:	ret
   2e498:	cbz	x2, 2e5f0 <__sanitizer_set_death_callback@@Base+0x1f08>
   2e49c:	stp	x29, x30, [sp, #-64]!
   2e4a0:	mov	x10, x2
   2e4a4:	mov	x29, sp
   2e4a8:	stp	x19, x20, [sp, #16]
   2e4ac:	mov	x20, x6
   2e4b0:	mov	x19, x0
   2e4b4:	stp	x21, x22, [sp, #32]
   2e4b8:	mov	x21, x3
   2e4bc:	mov	x22, x4
   2e4c0:	stp	x23, x24, [sp, #48]
   2e4c4:	mov	x23, x5
   2e4c8:	mov	x0, #0x0                   	// #0
   2e4cc:	add	x7, x10, x0
   2e4d0:	cmp	x10, x0
   2e4d4:	and	x8, x7, #0xfffffffffffffffe
   2e4d8:	b.ls	2e5d8 <__sanitizer_set_death_callback@@Base+0x1ef0>  // b.plast
   2e4dc:	lsr	x7, x7, #1
   2e4e0:	add	x8, x8, x7
   2e4e4:	lsl	x9, x8, #3
   2e4e8:	ldr	x3, [x1, x8, lsl #3]
   2e4ec:	add	x8, x1, x9
   2e4f0:	cmp	x3, x19
   2e4f4:	b.hi	2e5c4 <__sanitizer_set_death_callback@@Base+0x1edc>  // b.pmore
   2e4f8:	ldr	x3, [x8, #8]
   2e4fc:	add	x0, x7, #0x1
   2e500:	cmp	x19, x3
   2e504:	b.cs	2e4cc <__sanitizer_set_death_callback@@Base+0x1de4>  // b.hs, b.nlast
   2e508:	asr	x9, x9, #3
   2e50c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2e510:	movk	x0, #0xaaab
   2e514:	mov	x3, x0
   2e518:	mul	x9, x9, x0
   2e51c:	add	x9, x9, #0x1
   2e520:	cmp	x2, x9
   2e524:	b.hi	2e554 <__sanitizer_set_death_callback@@Base+0x1e6c>  // b.pmore
   2e528:	b	2e560 <__sanitizer_set_death_callback@@Base+0x1e78>
   2e52c:	ldr	x0, [x8, #32]
   2e530:	cmp	x19, x0
   2e534:	b.cs	2e560 <__sanitizer_set_death_callback@@Base+0x1e78>  // b.hs, b.nlast
   2e538:	add	x8, x8, #0x18
   2e53c:	sub	x7, x8, x1
   2e540:	asr	x7, x7, #3
   2e544:	mul	x7, x7, x3
   2e548:	add	x7, x7, #0x1
   2e54c:	cmp	x7, x2
   2e550:	b.cs	2e560 <__sanitizer_set_death_callback@@Base+0x1e78>  // b.hs, b.nlast
   2e554:	ldr	x0, [x8, #24]
   2e558:	cmp	x19, x0
   2e55c:	b.cs	2e52c <__sanitizer_set_death_callback@@Base+0x1e44>  // b.hs, b.nlast
   2e560:	ldr	x24, [x8, #16]
   2e564:	mov	x6, x20
   2e568:	mov	x5, x23
   2e56c:	mov	x4, x22
   2e570:	mov	x3, x21
   2e574:	mov	x0, x19
   2e578:	ldp	x1, x2, [x24, #24]
   2e57c:	bl	2e498 <__sanitizer_set_death_callback@@Base+0x1db0>
   2e580:	cbnz	w0, 2e5b0 <__sanitizer_set_death_callback@@Base+0x1ec8>
   2e584:	ldr	w3, [x20]
   2e588:	mov	x1, x19
   2e58c:	ldr	x2, [x23]
   2e590:	mov	x0, x22
   2e594:	ldr	x4, [x24]
   2e598:	blr	x21
   2e59c:	cbnz	w0, 2e5b0 <__sanitizer_set_death_callback@@Base+0x1ec8>
   2e5a0:	ldr	x1, [x24, #8]
   2e5a4:	str	x1, [x23]
   2e5a8:	ldr	w1, [x24, #16]
   2e5ac:	str	w1, [x20]
   2e5b0:	ldp	x19, x20, [sp, #16]
   2e5b4:	ldp	x21, x22, [sp, #32]
   2e5b8:	ldp	x23, x24, [sp, #48]
   2e5bc:	ldp	x29, x30, [sp], #64
   2e5c0:	ret
   2e5c4:	mov	x10, x7
   2e5c8:	add	x7, x10, x0
   2e5cc:	cmp	x10, x0
   2e5d0:	and	x8, x7, #0xfffffffffffffffe
   2e5d4:	b.hi	2e4dc <__sanitizer_set_death_callback@@Base+0x1df4>  // b.pmore
   2e5d8:	mov	w0, #0x0                   	// #0
   2e5dc:	ldp	x19, x20, [sp, #16]
   2e5e0:	ldp	x21, x22, [sp, #32]
   2e5e4:	ldp	x23, x24, [sp, #48]
   2e5e8:	ldp	x29, x30, [sp], #64
   2e5ec:	ret
   2e5f0:	mov	w0, #0x0                   	// #0
   2e5f4:	ret
   2e5f8:	stp	x29, x30, [sp, #-96]!
   2e5fc:	mov	x29, sp
   2e600:	stp	x21, x22, [sp, #32]
   2e604:	mov	x21, x0
   2e608:	mov	x22, x1
   2e60c:	ldr	x0, [x0]
   2e610:	stp	x19, x20, [sp, #16]
   2e614:	mov	x19, x2
   2e618:	str	x23, [sp, #48]
   2e61c:	sub	x2, x2, #0x1
   2e620:	mov	x20, x3
   2e624:	cmp	x2, x0
   2e628:	mov	x23, x4
   2e62c:	b.cs	2e64c <__sanitizer_set_death_callback@@Base+0x1f64>  // b.hs, b.nlast
   2e630:	lsl	x2, x19, #5
   2e634:	ldr	x1, [x1]
   2e638:	sub	x2, x2, #0x20
   2e63c:	add	x0, x1, x2
   2e640:	ldr	x1, [x1, x2]
   2e644:	cmp	x19, x1
   2e648:	b.eq	2e694 <__sanitizer_set_death_callback@@Base+0x1fac>  // b.none
   2e64c:	add	x0, sp, #0x40
   2e650:	mov	x2, #0x20                  	// #32
   2e654:	mov	w1, #0x0                   	// #0
   2e658:	bl	6860 <__asan_internal_memset@plt>
   2e65c:	ldr	x7, [x21]
   2e660:	mov	x6, #0x0                   	// #0
   2e664:	ldr	x8, [x22]
   2e668:	str	x19, [sp, #64]
   2e66c:	add	x1, x7, x6
   2e670:	cmp	x7, x6
   2e674:	b.ls	2e6b8 <__sanitizer_set_death_callback@@Base+0x1fd0>  // b.plast
   2e678:	lsr	x1, x1, #1
   2e67c:	lsl	x5, x1, #5
   2e680:	add	x0, x8, x5
   2e684:	ldr	x5, [x8, x5]
   2e688:	cmp	x19, x5
   2e68c:	b.cc	2e6e4 <__sanitizer_set_death_callback@@Base+0x1ffc>  // b.lo, b.ul, b.last
   2e690:	b.hi	2e6a8 <__sanitizer_set_death_callback@@Base+0x1fc0>  // b.pmore
   2e694:	ldp	x19, x20, [sp, #16]
   2e698:	ldp	x21, x22, [sp, #32]
   2e69c:	ldr	x23, [sp, #48]
   2e6a0:	ldp	x29, x30, [sp], #96
   2e6a4:	ret
   2e6a8:	add	x6, x1, #0x1
   2e6ac:	add	x1, x7, x6
   2e6b0:	cmp	x7, x6
   2e6b4:	b.hi	2e678 <__sanitizer_set_death_callback@@Base+0x1f90>  // b.pmore
   2e6b8:	mov	x0, x23
   2e6bc:	mov	w2, #0x0                   	// #0
   2e6c0:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e6c4:	add	x1, x1, #0x640
   2e6c8:	blr	x20
   2e6cc:	mov	x0, #0x0                   	// #0
   2e6d0:	ldp	x19, x20, [sp, #16]
   2e6d4:	ldp	x21, x22, [sp, #32]
   2e6d8:	ldr	x23, [sp, #48]
   2e6dc:	ldp	x29, x30, [sp], #96
   2e6e0:	ret
   2e6e4:	mov	x7, x1
   2e6e8:	b	2e66c <__sanitizer_set_death_callback@@Base+0x1f84>
   2e6ec:	nop
   2e6f0:	ldr	x3, [x0]
   2e6f4:	ldr	x2, [x1]
   2e6f8:	cmp	x3, x2
   2e6fc:	b.cc	2e734 <__sanitizer_set_death_callback@@Base+0x204c>  // b.lo, b.ul, b.last
   2e700:	b.hi	2e72c <__sanitizer_set_death_callback@@Base+0x2044>  // b.pmore
   2e704:	ldr	x3, [x0, #8]
   2e708:	ldr	x2, [x1, #8]
   2e70c:	cmp	x3, x2
   2e710:	b.cc	2e72c <__sanitizer_set_death_callback@@Base+0x2044>  // b.lo, b.ul, b.last
   2e714:	b.hi	2e734 <__sanitizer_set_death_callback@@Base+0x204c>  // b.pmore
   2e718:	ldr	x0, [x0, #16]
   2e71c:	ldr	x1, [x1, #16]
   2e720:	ldr	x0, [x0]
   2e724:	ldr	x1, [x1]
   2e728:	b	6b30 <__asan_internal_strcmp@plt>
   2e72c:	mov	w0, #0x1                   	// #1
   2e730:	ret
   2e734:	mov	w0, #0xffffffff            	// #-1
   2e738:	ret
   2e73c:	nop
   2e740:	stp	x29, x30, [sp, #-288]!
   2e744:	mov	w1, #0x0                   	// #0
   2e748:	mov	x29, sp
   2e74c:	stp	x19, x20, [sp, #16]
   2e750:	mov	x19, x0
   2e754:	stp	x23, x24, [sp, #48]
   2e758:	adrp	x24, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e75c:	adrp	x23, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e760:	add	x24, x24, #0x680
   2e764:	add	x23, x23, #0x670
   2e768:	str	x25, [sp, #64]
   2e76c:	add	x25, sp, #0x58
   2e770:	stp	x21, x22, [sp, #32]
   2e774:	mov	w21, #0x0                   	// #0
   2e778:	mov	x22, #0x0                   	// #0
   2e77c:	nop
   2e780:	ldp	x6, x20, [x19, #16]
   2e784:	cbnz	x20, 2e7ac <__sanitizer_set_death_callback@@Base+0x20c4>
   2e788:	ldr	w0, [x19, #56]
   2e78c:	cbz	w0, 2e830 <__sanitizer_set_death_callback@@Base+0x2148>
   2e790:	mov	x0, x20
   2e794:	ldp	x19, x20, [sp, #16]
   2e798:	ldp	x21, x22, [sp, #32]
   2e79c:	ldp	x23, x24, [sp, #48]
   2e7a0:	ldr	x25, [sp, #64]
   2e7a4:	ldp	x29, x30, [sp], #288
   2e7a8:	ret
   2e7ac:	sub	x20, x20, #0x1
   2e7b0:	add	x5, x6, #0x1
   2e7b4:	stp	x5, x20, [x19, #16]
   2e7b8:	cmp	w21, #0x3f
   2e7bc:	ldrb	w20, [x6]
   2e7c0:	b.hi	2e7f8 <__sanitizer_set_death_callback@@Base+0x2110>  // b.pmore
   2e7c4:	and	x0, x20, #0x7f
   2e7c8:	lsl	x0, x0, x21
   2e7cc:	orr	x22, x22, x0
   2e7d0:	add	w21, w21, #0x7
   2e7d4:	tbnz	w20, #7, 2e780 <__sanitizer_set_death_callback@@Base+0x2098>
   2e7d8:	mov	x20, x22
   2e7dc:	mov	x0, x20
   2e7e0:	ldp	x19, x20, [sp, #16]
   2e7e4:	ldp	x21, x22, [sp, #32]
   2e7e8:	ldp	x23, x24, [sp, #48]
   2e7ec:	ldr	x25, [sp, #64]
   2e7f0:	ldp	x29, x30, [sp], #288
   2e7f4:	ret
   2e7f8:	cbnz	w1, 2e7d0 <__sanitizer_set_death_callback@@Base+0x20e8>
   2e7fc:	ldp	x4, x6, [x19]
   2e800:	mov	x3, x24
   2e804:	mov	x2, x23
   2e808:	mov	x1, #0xc8                  	// #200
   2e80c:	mov	x0, x25
   2e810:	sub	w5, w5, w6
   2e814:	bl	6a20 <snprintf@plt>
   2e818:	ldp	x3, x0, [x19, #40]
   2e81c:	mov	x1, x25
   2e820:	mov	w2, #0x0                   	// #0
   2e824:	blr	x3
   2e828:	mov	w1, #0x1                   	// #1
   2e82c:	b	2e7d0 <__sanitizer_set_death_callback@@Base+0x20e8>
   2e830:	ldp	x4, x5, [x19]
   2e834:	add	x21, sp, #0x58
   2e838:	mov	x0, x21
   2e83c:	mov	x1, #0xc8                  	// #200
   2e840:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e844:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e848:	add	x3, x3, #0x660
   2e84c:	add	x2, x2, #0x670
   2e850:	sub	w5, w6, w5
   2e854:	bl	6a20 <snprintf@plt>
   2e858:	ldp	x3, x0, [x19, #40]
   2e85c:	mov	x1, x21
   2e860:	mov	w2, #0x0                   	// #0
   2e864:	blr	x3
   2e868:	mov	w0, #0x1                   	// #1
   2e86c:	str	w0, [x19, #56]
   2e870:	mov	x0, x20
   2e874:	ldp	x19, x20, [sp, #16]
   2e878:	ldp	x21, x22, [sp, #32]
   2e87c:	ldp	x23, x24, [sp, #48]
   2e880:	ldr	x25, [sp, #64]
   2e884:	ldp	x29, x30, [sp], #288
   2e888:	ret
   2e88c:	nop
   2e890:	stp	x29, x30, [sp, #-288]!
   2e894:	mov	w1, #0x0                   	// #0
   2e898:	mov	x29, sp
   2e89c:	stp	x19, x20, [sp, #16]
   2e8a0:	mov	x19, x0
   2e8a4:	mov	w20, #0x0                   	// #0
   2e8a8:	stp	x23, x24, [sp, #48]
   2e8ac:	adrp	x24, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e8b0:	adrp	x23, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e8b4:	add	x24, x24, #0x6a0
   2e8b8:	add	x23, x23, #0x670
   2e8bc:	str	x25, [sp, #64]
   2e8c0:	add	x25, sp, #0x58
   2e8c4:	stp	x21, x22, [sp, #32]
   2e8c8:	mov	x22, #0x0                   	// #0
   2e8cc:	nop
   2e8d0:	ldp	x6, x0, [x19, #16]
   2e8d4:	cbnz	x0, 2e900 <__sanitizer_set_death_callback@@Base+0x2218>
   2e8d8:	ldr	w0, [x19, #56]
   2e8dc:	mov	x22, #0x0                   	// #0
   2e8e0:	cbz	w0, 2e99c <__sanitizer_set_death_callback@@Base+0x22b4>
   2e8e4:	mov	x0, x22
   2e8e8:	ldp	x19, x20, [sp, #16]
   2e8ec:	ldp	x21, x22, [sp, #32]
   2e8f0:	ldp	x23, x24, [sp, #48]
   2e8f4:	ldr	x25, [sp, #64]
   2e8f8:	ldp	x29, x30, [sp], #288
   2e8fc:	ret
   2e900:	sub	x0, x0, #0x1
   2e904:	add	x5, x6, #0x1
   2e908:	stp	x5, x0, [x19, #16]
   2e90c:	cmp	w20, #0x3f
   2e910:	ldrb	w21, [x6]
   2e914:	b.hi	2e964 <__sanitizer_set_death_callback@@Base+0x227c>  // b.pmore
   2e918:	and	x0, x21, #0x7f
   2e91c:	lsl	x0, x0, x20
   2e920:	orr	x22, x22, x0
   2e924:	add	w20, w20, #0x7
   2e928:	tbnz	w21, #7, 2e8d0 <__sanitizer_set_death_callback@@Base+0x21e8>
   2e92c:	and	w21, w21, #0x40
   2e930:	cmp	w20, #0x3f
   2e934:	mov	x0, #0xffffffffffffffff    	// #-1
   2e938:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
   2e93c:	lsl	x20, x0, x20
   2e940:	orr	x20, x22, x20
   2e944:	csel	x22, x20, x22, ne  // ne = any
   2e948:	mov	x0, x22
   2e94c:	ldp	x19, x20, [sp, #16]
   2e950:	ldp	x21, x22, [sp, #32]
   2e954:	ldp	x23, x24, [sp, #48]
   2e958:	ldr	x25, [sp, #64]
   2e95c:	ldp	x29, x30, [sp], #288
   2e960:	ret
   2e964:	cbnz	w1, 2e924 <__sanitizer_set_death_callback@@Base+0x223c>
   2e968:	ldp	x4, x6, [x19]
   2e96c:	mov	x3, x24
   2e970:	mov	x2, x23
   2e974:	mov	x1, #0xc8                  	// #200
   2e978:	mov	x0, x25
   2e97c:	sub	w5, w5, w6
   2e980:	bl	6a20 <snprintf@plt>
   2e984:	ldp	x3, x0, [x19, #40]
   2e988:	mov	x1, x25
   2e98c:	mov	w2, #0x0                   	// #0
   2e990:	blr	x3
   2e994:	mov	w1, #0x1                   	// #1
   2e998:	b	2e924 <__sanitizer_set_death_callback@@Base+0x223c>
   2e99c:	ldp	x4, x5, [x19]
   2e9a0:	add	x20, sp, #0x58
   2e9a4:	mov	x0, x20
   2e9a8:	mov	x1, #0xc8                  	// #200
   2e9ac:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e9b0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2e9b4:	add	x3, x3, #0x660
   2e9b8:	add	x2, x2, #0x670
   2e9bc:	sub	w5, w6, w5
   2e9c0:	bl	6a20 <snprintf@plt>
   2e9c4:	ldp	x3, x0, [x19, #40]
   2e9c8:	mov	x1, x20
   2e9cc:	mov	w2, #0x0                   	// #0
   2e9d0:	blr	x3
   2e9d4:	mov	w0, #0x1                   	// #1
   2e9d8:	str	w0, [x19, #56]
   2e9dc:	mov	x0, x22
   2e9e0:	ldp	x19, x20, [sp, #16]
   2e9e4:	ldp	x21, x22, [sp, #32]
   2e9e8:	ldp	x23, x24, [sp, #48]
   2e9ec:	ldr	x25, [sp, #64]
   2e9f0:	ldp	x29, x30, [sp], #288
   2e9f4:	ret
   2e9f8:	stp	x29, x30, [sp, #-256]!
   2e9fc:	mov	x29, sp
   2ea00:	stp	x19, x20, [sp, #16]
   2ea04:	mov	x19, x0
   2ea08:	ldr	x0, [x0, #24]
   2ea0c:	ldr	x5, [x19, #16]
   2ea10:	cmp	x0, #0x1
   2ea14:	b.hi	2ea34 <__sanitizer_set_death_callback@@Base+0x234c>  // b.pmore
   2ea18:	ldr	w0, [x19, #56]
   2ea1c:	mov	w20, #0x0                   	// #0
   2ea20:	cbz	w0, 2ea80 <__sanitizer_set_death_callback@@Base+0x2398>
   2ea24:	mov	w0, w20
   2ea28:	ldp	x19, x20, [sp, #16]
   2ea2c:	ldp	x29, x30, [sp], #256
   2ea30:	ret
   2ea34:	ldr	w1, [x19, #32]
   2ea38:	sub	x0, x0, #0x2
   2ea3c:	add	x2, x5, #0x2
   2ea40:	stp	x2, x0, [x19, #16]
   2ea44:	cbz	w1, 2ea64 <__sanitizer_set_death_callback@@Base+0x237c>
   2ea48:	ldrb	w0, [x5]
   2ea4c:	ldrb	w20, [x5, #1]
   2ea50:	bfi	w20, w0, #8, #24
   2ea54:	mov	w0, w20
   2ea58:	ldp	x19, x20, [sp, #16]
   2ea5c:	ldp	x29, x30, [sp], #256
   2ea60:	ret
   2ea64:	ldrb	w0, [x5, #1]
   2ea68:	ldrb	w20, [x5]
   2ea6c:	bfi	w20, w0, #8, #24
   2ea70:	mov	w0, w20
   2ea74:	ldp	x19, x20, [sp, #16]
   2ea78:	ldp	x29, x30, [sp], #256
   2ea7c:	ret
   2ea80:	ldp	x4, x1, [x19]
   2ea84:	str	x21, [sp, #32]
   2ea88:	add	x21, sp, #0x38
   2ea8c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ea90:	mov	x0, x21
   2ea94:	add	x3, x3, #0x660
   2ea98:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ea9c:	add	x2, x2, #0x670
   2eaa0:	sub	w5, w5, w1
   2eaa4:	mov	x1, #0xc8                  	// #200
   2eaa8:	bl	6a20 <snprintf@plt>
   2eaac:	ldp	x3, x0, [x19, #40]
   2eab0:	mov	x1, x21
   2eab4:	mov	w2, #0x0                   	// #0
   2eab8:	blr	x3
   2eabc:	mov	w0, #0x1                   	// #1
   2eac0:	ldr	x21, [sp, #32]
   2eac4:	str	w0, [x19, #56]
   2eac8:	mov	w0, w20
   2eacc:	ldp	x19, x20, [sp, #16]
   2ead0:	ldp	x29, x30, [sp], #256
   2ead4:	ret
   2ead8:	stp	x29, x30, [sp, #-256]!
   2eadc:	mov	x29, sp
   2eae0:	stp	x19, x20, [sp, #16]
   2eae4:	mov	x19, x0
   2eae8:	ldr	x0, [x0, #24]
   2eaec:	ldr	x5, [x19, #16]
   2eaf0:	cmp	x0, #0x3
   2eaf4:	b.hi	2eb14 <__sanitizer_set_death_callback@@Base+0x242c>  // b.pmore
   2eaf8:	ldr	w0, [x19, #56]
   2eafc:	mov	w20, #0x0                   	// #0
   2eb00:	cbz	w0, 2eb54 <__sanitizer_set_death_callback@@Base+0x246c>
   2eb04:	mov	w0, w20
   2eb08:	ldp	x19, x20, [sp, #16]
   2eb0c:	ldp	x29, x30, [sp], #256
   2eb10:	ret
   2eb14:	ldr	w1, [x19, #32]
   2eb18:	sub	x0, x0, #0x4
   2eb1c:	add	x2, x5, #0x4
   2eb20:	stp	x2, x0, [x19, #16]
   2eb24:	cbz	w1, 2eb40 <__sanitizer_set_death_callback@@Base+0x2458>
   2eb28:	ldr	w20, [x5]
   2eb2c:	rev	w20, w20
   2eb30:	mov	w0, w20
   2eb34:	ldp	x19, x20, [sp, #16]
   2eb38:	ldp	x29, x30, [sp], #256
   2eb3c:	ret
   2eb40:	ldr	w20, [x5]
   2eb44:	mov	w0, w20
   2eb48:	ldp	x19, x20, [sp, #16]
   2eb4c:	ldp	x29, x30, [sp], #256
   2eb50:	ret
   2eb54:	ldp	x4, x1, [x19]
   2eb58:	str	x21, [sp, #32]
   2eb5c:	add	x21, sp, #0x38
   2eb60:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2eb64:	mov	x0, x21
   2eb68:	add	x3, x3, #0x660
   2eb6c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2eb70:	add	x2, x2, #0x670
   2eb74:	sub	w5, w5, w1
   2eb78:	mov	x1, #0xc8                  	// #200
   2eb7c:	bl	6a20 <snprintf@plt>
   2eb80:	ldp	x3, x0, [x19, #40]
   2eb84:	mov	x1, x21
   2eb88:	mov	w2, #0x0                   	// #0
   2eb8c:	blr	x3
   2eb90:	mov	w0, #0x1                   	// #1
   2eb94:	ldr	x21, [sp, #32]
   2eb98:	str	w0, [x19, #56]
   2eb9c:	mov	w0, w20
   2eba0:	ldp	x19, x20, [sp, #16]
   2eba4:	ldp	x29, x30, [sp], #256
   2eba8:	ret
   2ebac:	nop
   2ebb0:	stp	x29, x30, [sp, #-256]!
   2ebb4:	mov	x29, sp
   2ebb8:	stp	x19, x20, [sp, #16]
   2ebbc:	mov	x19, x0
   2ebc0:	ldr	x0, [x0, #24]
   2ebc4:	ldr	x5, [x19, #16]
   2ebc8:	cmp	x0, #0x7
   2ebcc:	b.hi	2ebec <__sanitizer_set_death_callback@@Base+0x2504>  // b.pmore
   2ebd0:	ldr	w0, [x19, #56]
   2ebd4:	mov	x20, #0x0                   	// #0
   2ebd8:	cbz	w0, 2ec2c <__sanitizer_set_death_callback@@Base+0x2544>
   2ebdc:	mov	x0, x20
   2ebe0:	ldp	x19, x20, [sp, #16]
   2ebe4:	ldp	x29, x30, [sp], #256
   2ebe8:	ret
   2ebec:	ldr	w1, [x19, #32]
   2ebf0:	sub	x0, x0, #0x8
   2ebf4:	add	x2, x5, #0x8
   2ebf8:	stp	x2, x0, [x19, #16]
   2ebfc:	cbz	w1, 2ec18 <__sanitizer_set_death_callback@@Base+0x2530>
   2ec00:	ldr	x20, [x5]
   2ec04:	rev	x20, x20
   2ec08:	mov	x0, x20
   2ec0c:	ldp	x19, x20, [sp, #16]
   2ec10:	ldp	x29, x30, [sp], #256
   2ec14:	ret
   2ec18:	ldr	x20, [x5]
   2ec1c:	mov	x0, x20
   2ec20:	ldp	x19, x20, [sp, #16]
   2ec24:	ldp	x29, x30, [sp], #256
   2ec28:	ret
   2ec2c:	ldp	x4, x1, [x19]
   2ec30:	str	x21, [sp, #32]
   2ec34:	add	x21, sp, #0x38
   2ec38:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ec3c:	mov	x0, x21
   2ec40:	add	x3, x3, #0x660
   2ec44:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ec48:	add	x2, x2, #0x670
   2ec4c:	sub	w5, w5, w1
   2ec50:	mov	x1, #0xc8                  	// #200
   2ec54:	bl	6a20 <snprintf@plt>
   2ec58:	ldp	x3, x0, [x19, #40]
   2ec5c:	mov	x1, x21
   2ec60:	mov	w2, #0x0                   	// #0
   2ec64:	blr	x3
   2ec68:	mov	w0, #0x1                   	// #1
   2ec6c:	ldr	x21, [sp, #32]
   2ec70:	str	w0, [x19, #56]
   2ec74:	mov	x0, x20
   2ec78:	ldp	x19, x20, [sp, #16]
   2ec7c:	ldp	x29, x30, [sp], #256
   2ec80:	ret
   2ec84:	nop
   2ec88:	stp	x29, x30, [sp, #-256]!
   2ec8c:	cmp	w1, #0x4
   2ec90:	mov	x29, sp
   2ec94:	stp	x21, x22, [sp, #32]
   2ec98:	b.eq	2ed8c <__sanitizer_set_death_callback@@Base+0x26a4>  // b.none
   2ec9c:	stp	x19, x20, [sp, #16]
   2eca0:	mov	w19, w1
   2eca4:	mov	x20, x0
   2eca8:	b.gt	2ece8 <__sanitizer_set_death_callback@@Base+0x2600>
   2ecac:	cmp	w1, #0x1
   2ecb0:	b.eq	2eda4 <__sanitizer_set_death_callback@@Base+0x26bc>  // b.none
   2ecb4:	cmp	w1, #0x2
   2ecb8:	b.ne	2ed38 <__sanitizer_set_death_callback@@Base+0x2650>  // b.any
   2ecbc:	ldp	x5, x0, [x0, #16]
   2ecc0:	cmp	x0, #0x1
   2ecc4:	b.hi	2ed0c <__sanitizer_set_death_callback@@Base+0x2624>  // b.pmore
   2ecc8:	ldr	w0, [x20, #56]
   2eccc:	mov	x21, #0x0                   	// #0
   2ecd0:	cbz	w0, 2ee34 <__sanitizer_set_death_callback@@Base+0x274c>
   2ecd4:	ldp	x19, x20, [sp, #16]
   2ecd8:	mov	x0, x21
   2ecdc:	ldp	x21, x22, [sp, #32]
   2ece0:	ldp	x29, x30, [sp], #256
   2ece4:	ret
   2ece8:	cmp	w1, #0x8
   2ecec:	b.ne	2ed38 <__sanitizer_set_death_callback@@Base+0x2650>  // b.any
   2ecf0:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   2ecf4:	mov	x21, x0
   2ecf8:	mov	x0, x21
   2ecfc:	ldp	x19, x20, [sp, #16]
   2ed00:	ldp	x21, x22, [sp, #32]
   2ed04:	ldp	x29, x30, [sp], #256
   2ed08:	ret
   2ed0c:	ldr	w1, [x20, #32]
   2ed10:	sub	x0, x0, #0x2
   2ed14:	add	x2, x5, #0x2
   2ed18:	stp	x2, x0, [x20, #16]
   2ed1c:	cbz	w1, 2ee1c <__sanitizer_set_death_callback@@Base+0x2734>
   2ed20:	ldrb	w21, [x5]
   2ed24:	ldrb	w0, [x5, #1]
   2ed28:	ldp	x19, x20, [sp, #16]
   2ed2c:	orr	w21, w0, w21, lsl #8
   2ed30:	and	x21, x21, #0xffff
   2ed34:	b	2ecd8 <__sanitizer_set_death_callback@@Base+0x25f0>
   2ed38:	ldp	x4, x1, [x20]
   2ed3c:	add	x19, sp, #0x38
   2ed40:	ldr	x5, [x20, #16]
   2ed44:	mov	x0, x19
   2ed48:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ed4c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ed50:	add	x3, x3, #0x6c8
   2ed54:	add	x2, x2, #0x670
   2ed58:	sub	w5, w5, w1
   2ed5c:	mov	x1, #0xc8                  	// #200
   2ed60:	bl	6a20 <snprintf@plt>
   2ed64:	mov	x21, #0x0                   	// #0
   2ed68:	ldp	x3, x0, [x20, #40]
   2ed6c:	mov	x1, x19
   2ed70:	mov	w2, #0x0                   	// #0
   2ed74:	blr	x3
   2ed78:	mov	x0, x21
   2ed7c:	ldp	x19, x20, [sp, #16]
   2ed80:	ldp	x21, x22, [sp, #32]
   2ed84:	ldp	x29, x30, [sp], #256
   2ed88:	ret
   2ed8c:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2ed90:	mov	w21, w0
   2ed94:	mov	x0, x21
   2ed98:	ldp	x21, x22, [sp, #32]
   2ed9c:	ldp	x29, x30, [sp], #256
   2eda0:	ret
   2eda4:	ldp	x5, x21, [x0, #16]
   2eda8:	cbnz	x21, 2edf8 <__sanitizer_set_death_callback@@Base+0x2710>
   2edac:	ldr	w0, [x0, #56]
   2edb0:	cbnz	w0, 2ecd4 <__sanitizer_set_death_callback@@Base+0x25ec>
   2edb4:	ldp	x4, x1, [x20]
   2edb8:	add	x22, sp, #0x38
   2edbc:	mov	x0, x22
   2edc0:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2edc4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2edc8:	add	x3, x3, #0x660
   2edcc:	add	x2, x2, #0x670
   2edd0:	sub	w5, w5, w1
   2edd4:	mov	x1, #0xc8                  	// #200
   2edd8:	bl	6a20 <snprintf@plt>
   2eddc:	ldp	x3, x0, [x20, #40]
   2ede0:	mov	x1, x22
   2ede4:	mov	w2, #0x0                   	// #0
   2ede8:	blr	x3
   2edec:	str	w19, [x20, #56]
   2edf0:	ldp	x19, x20, [sp, #16]
   2edf4:	b	2ecd8 <__sanitizer_set_death_callback@@Base+0x25f0>
   2edf8:	add	x0, x5, #0x1
   2edfc:	sub	x21, x21, #0x1
   2ee00:	stp	x0, x21, [x20, #16]
   2ee04:	ldrb	w21, [x5]
   2ee08:	ldp	x19, x20, [sp, #16]
   2ee0c:	mov	x0, x21
   2ee10:	ldp	x21, x22, [sp, #32]
   2ee14:	ldp	x29, x30, [sp], #256
   2ee18:	ret
   2ee1c:	ldrb	w21, [x5, #1]
   2ee20:	ldrb	w0, [x5]
   2ee24:	ldp	x19, x20, [sp, #16]
   2ee28:	orr	w21, w0, w21, lsl #8
   2ee2c:	and	x21, x21, #0xffff
   2ee30:	b	2ecd8 <__sanitizer_set_death_callback@@Base+0x25f0>
   2ee34:	ldp	x4, x1, [x20]
   2ee38:	add	x19, sp, #0x38
   2ee3c:	mov	x0, x19
   2ee40:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ee44:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ee48:	add	x3, x3, #0x660
   2ee4c:	add	x2, x2, #0x670
   2ee50:	sub	w5, w5, w1
   2ee54:	mov	x1, #0xc8                  	// #200
   2ee58:	bl	6a20 <snprintf@plt>
   2ee5c:	ldp	x3, x0, [x20, #40]
   2ee60:	mov	x1, x19
   2ee64:	mov	w2, #0x0                   	// #0
   2ee68:	blr	x3
   2ee6c:	mov	w0, #0x1                   	// #1
   2ee70:	str	w0, [x20, #56]
   2ee74:	ldp	x19, x20, [sp, #16]
   2ee78:	b	2ecd8 <__sanitizer_set_death_callback@@Base+0x25f0>
   2ee7c:	nop
   2ee80:	stp	x29, x30, [sp, #-304]!
   2ee84:	mov	x29, sp
   2ee88:	stp	x21, x22, [sp, #32]
   2ee8c:	mov	w22, w2
   2ee90:	ldr	x21, [sp, #304]
   2ee94:	stp	x19, x20, [sp, #16]
   2ee98:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2ee9c:	mov	w19, w0
   2eea0:	add	x20, x20, #0x980
   2eea4:	stp	x23, x24, [sp, #48]
   2eea8:	mov	x24, x5
   2eeac:	mov	x23, x7
   2eeb0:	stp	x25, x26, [sp, #64]
   2eeb4:	mov	w26, w3
   2eeb8:	mov	w25, w4
   2eebc:	stp	x27, x28, [sp, #80]
   2eec0:	mov	x28, x1
   2eec4:	mov	x27, x6
   2eec8:	mov	x0, x21
   2eecc:	mov	x2, #0x10                  	// #16
   2eed0:	mov	w1, #0x0                   	// #0
   2eed4:	bl	6860 <__asan_internal_memset@plt>
   2eed8:	cmp	w19, #0x20
   2eedc:	b.hi	2ef00 <__sanitizer_set_death_callback@@Base+0x2818>  // b.pmore
   2eee0:	cbz	w19, 2f1c4 <__sanitizer_set_death_callback@@Base+0x2adc>
   2eee4:	sub	w19, w19, #0x1
   2eee8:	cmp	w19, #0x1f
   2eeec:	b.hi	2f1c4 <__sanitizer_set_death_callback@@Base+0x2adc>  // b.pmore
   2eef0:	ldrh	w0, [x20, w19, uxtw #1]
   2eef4:	adr	x1, 2ef00 <__sanitizer_set_death_callback@@Base+0x2818>
   2eef8:	add	x0, x1, w0, sxth #2
   2eefc:	br	x0
   2ef00:	mov	w0, #0x1f20                	// #7968
   2ef04:	cmp	w19, w0
   2ef08:	b.eq	2f370 <__sanitizer_set_death_callback@@Base+0x2c88>  // b.none
   2ef0c:	b.ls	2ef70 <__sanitizer_set_death_callback@@Base+0x2888>  // b.plast
   2ef10:	mov	w0, #0x1f21                	// #7969
   2ef14:	cmp	w19, w0
   2ef18:	b.ne	2f1c4 <__sanitizer_set_death_callback@@Base+0x2adc>  // b.any
   2ef1c:	mov	x0, x28
   2ef20:	cbz	w22, 2f364 <__sanitizer_set_death_callback@@Base+0x2c7c>
   2ef24:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   2ef28:	cbz	x23, 2f410 <__sanitizer_set_death_callback@@Base+0x2d28>
   2ef2c:	ldr	x1, [x23, #112]
   2ef30:	cmp	x1, x0
   2ef34:	b.ls	2f51c <__sanitizer_set_death_callback@@Base+0x2e34>  // b.plast
   2ef38:	ldr	x1, [x23, #104]
   2ef3c:	mov	w2, #0x4                   	// #4
   2ef40:	mov	w19, #0x1                   	// #1
   2ef44:	str	w2, [x21]
   2ef48:	add	x0, x1, x0
   2ef4c:	str	x0, [x21, #8]
   2ef50:	mov	w0, w19
   2ef54:	ldp	x19, x20, [sp, #16]
   2ef58:	ldp	x21, x22, [sp, #32]
   2ef5c:	ldp	x23, x24, [sp, #48]
   2ef60:	ldp	x25, x26, [sp, #64]
   2ef64:	ldp	x27, x28, [sp, #80]
   2ef68:	ldp	x29, x30, [sp], #304
   2ef6c:	ret
   2ef70:	mov	w0, #0xffffe0ff            	// #-7937
   2ef74:	add	w19, w19, w0
   2ef78:	cmp	w19, #0x1
   2ef7c:	mov	w0, #0x8                   	// #8
   2ef80:	b.hi	2f1c4 <__sanitizer_set_death_callback@@Base+0x2adc>  // b.pmore
   2ef84:	str	w0, [x21]
   2ef88:	mov	x0, x28
   2ef8c:	mov	w19, #0x1                   	// #1
   2ef90:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   2ef94:	str	x0, [x21, #8]
   2ef98:	mov	w0, w19
   2ef9c:	ldp	x19, x20, [sp, #16]
   2efa0:	ldp	x21, x22, [sp, #32]
   2efa4:	ldp	x23, x24, [sp, #48]
   2efa8:	ldp	x25, x26, [sp, #64]
   2efac:	ldp	x27, x28, [sp, #80]
   2efb0:	ldp	x29, x30, [sp], #304
   2efb4:	ret
   2efb8:	ldp	x5, x20, [x28, #16]
   2efbc:	mov	w0, #0x2                   	// #2
   2efc0:	str	w0, [x21]
   2efc4:	cbnz	x20, 2f00c <__sanitizer_set_death_callback@@Base+0x2924>
   2efc8:	ldr	w0, [x28, #56]
   2efcc:	cbz	w0, 2f31c <__sanitizer_set_death_callback@@Base+0x2c34>
   2efd0:	mov	w19, #0x1                   	// #1
   2efd4:	nop
   2efd8:	str	x20, [x21, #8]
   2efdc:	mov	w0, w19
   2efe0:	ldp	x19, x20, [sp, #16]
   2efe4:	ldp	x21, x22, [sp, #32]
   2efe8:	ldp	x23, x24, [sp, #48]
   2efec:	ldp	x25, x26, [sp, #64]
   2eff0:	ldp	x27, x28, [sp, #80]
   2eff4:	ldp	x29, x30, [sp], #304
   2eff8:	ret
   2effc:	ldp	x5, x20, [x28, #16]
   2f000:	mov	w0, #0x5                   	// #5
   2f004:	str	w0, [x21]
   2f008:	cbz	x20, 2efc8 <__sanitizer_set_death_callback@@Base+0x28e0>
   2f00c:	sub	x20, x20, #0x1
   2f010:	add	x0, x5, #0x1
   2f014:	stp	x0, x20, [x28, #16]
   2f018:	mov	w19, #0x1                   	// #1
   2f01c:	ldrb	w20, [x5]
   2f020:	b	2efd8 <__sanitizer_set_death_callback@@Base+0x28f0>
   2f024:	mov	w0, #0x3                   	// #3
   2f028:	str	w0, [x21]
   2f02c:	mov	w19, #0x1                   	// #1
   2f030:	mov	x0, x28
   2f034:	bl	2e890 <__sanitizer_set_death_callback@@Base+0x21a8>
   2f038:	str	x0, [x21, #8]
   2f03c:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f040:	mov	w0, #0x9                   	// #9
   2f044:	str	w0, [x21]
   2f048:	mov	x0, x28
   2f04c:	mov	w19, #0x1                   	// #1
   2f050:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   2f054:	str	x0, [x21, #8]
   2f058:	mov	w0, w19
   2f05c:	ldp	x19, x20, [sp, #16]
   2f060:	ldp	x21, x22, [sp, #32]
   2f064:	ldp	x23, x24, [sp, #48]
   2f068:	ldp	x25, x26, [sp, #64]
   2f06c:	ldp	x27, x28, [sp, #80]
   2f070:	ldp	x29, x30, [sp], #304
   2f074:	ret
   2f078:	ldp	x6, x0, [x28, #16]
   2f07c:	mov	w1, #0xa                   	// #10
   2f080:	str	w1, [x21]
   2f084:	cbnz	x0, 2f3a0 <__sanitizer_set_death_callback@@Base+0x2cb8>
   2f088:	ldr	w1, [x28, #56]
   2f08c:	cbz	w1, 2f48c <__sanitizer_set_death_callback@@Base+0x2da4>
   2f090:	mov	w19, #0x1                   	// #1
   2f094:	stp	x6, x0, [x28, #16]
   2f098:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f09c:	mov	w0, #0xa                   	// #10
   2f0a0:	str	w0, [x21]
   2f0a4:	mov	x0, x28
   2f0a8:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   2f0ac:	ldr	x1, [x28, #24]
   2f0b0:	cmp	x0, x1
   2f0b4:	b.ls	2f3e0 <__sanitizer_set_death_callback@@Base+0x2cf8>  // b.plast
   2f0b8:	ldr	w19, [x28, #56]
   2f0bc:	cbz	w19, 2f2d4 <__sanitizer_set_death_callback@@Base+0x2bec>
   2f0c0:	mov	w19, #0x0                   	// #0
   2f0c4:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f0c8:	ldp	x20, x1, [x28, #16]
   2f0cc:	mov	w0, #0x4                   	// #4
   2f0d0:	str	w0, [x21]
   2f0d4:	mov	x0, x20
   2f0d8:	bl	6b50 <__asan_internal_strnlen@plt>
   2f0dc:	ldr	x1, [x28, #24]
   2f0e0:	add	x0, x0, #0x1
   2f0e4:	cmp	x0, x1
   2f0e8:	b.ls	2f41c <__sanitizer_set_death_callback@@Base+0x2d34>  // b.plast
   2f0ec:	ldr	w19, [x28, #56]
   2f0f0:	cbz	w19, 2f43c <__sanitizer_set_death_callback@@Base+0x2d54>
   2f0f4:	mov	x20, #0x0                   	// #0
   2f0f8:	mov	w19, #0x0                   	// #0
   2f0fc:	str	x20, [x21, #8]
   2f100:	b	2efdc <__sanitizer_set_death_callback@@Base+0x28f4>
   2f104:	mov	w0, #0x2                   	// #2
   2f108:	str	w0, [x21]
   2f10c:	mov	w19, #0x1                   	// #1
   2f110:	mov	x0, x28
   2f114:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2f118:	mov	w0, w0
   2f11c:	str	x0, [x21, #8]
   2f120:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f124:	mov	w0, #0x2                   	// #2
   2f128:	str	w0, [x21]
   2f12c:	mov	w19, #0x1                   	// #1
   2f130:	mov	x0, x28
   2f134:	bl	2e9f8 <__sanitizer_set_death_callback@@Base+0x2310>
   2f138:	and	x0, x0, #0xffff
   2f13c:	str	x0, [x21, #8]
   2f140:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f144:	mov	w0, #0x2                   	// #2
   2f148:	b	2f044 <__sanitizer_set_death_callback@@Base+0x295c>
   2f14c:	mov	w0, #0xa                   	// #10
   2f150:	str	w0, [x21]
   2f154:	mov	x0, x28
   2f158:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2f15c:	mov	w2, w0
   2f160:	ldr	x1, [x28, #24]
   2f164:	cmp	x1, w0, uxtw
   2f168:	b.cc	2f0b8 <__sanitizer_set_death_callback@@Base+0x29d0>  // b.lo, b.ul, b.last
   2f16c:	ldr	x0, [x28, #16]
   2f170:	sub	x1, x1, x2
   2f174:	mov	w19, #0x1                   	// #1
   2f178:	add	x2, x0, x2
   2f17c:	stp	x2, x1, [x28, #16]
   2f180:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f184:	mov	w0, #0xa                   	// #10
   2f188:	str	w0, [x21]
   2f18c:	mov	x0, x28
   2f190:	bl	2e9f8 <__sanitizer_set_death_callback@@Base+0x2310>
   2f194:	and	x2, x0, #0xffff
   2f198:	ldr	x1, [x28, #24]
   2f19c:	cmp	x1, w0, uxth
   2f1a0:	b.cc	2f0b8 <__sanitizer_set_death_callback@@Base+0x29d0>  // b.lo, b.ul, b.last
   2f1a4:	b	2f16c <__sanitizer_set_death_callback@@Base+0x2a84>
   2f1a8:	mov	w19, #0x1                   	// #1
   2f1ac:	str	w19, [x21]
   2f1b0:	mov	w1, w25
   2f1b4:	mov	x0, x28
   2f1b8:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   2f1bc:	str	x0, [x21, #8]
   2f1c0:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f1c4:	ldp	x4, x1, [x28]
   2f1c8:	add	x20, sp, #0x68
   2f1cc:	ldr	x5, [x28, #16]
   2f1d0:	mov	x0, x20
   2f1d4:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f1d8:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f1dc:	add	x3, x3, #0x730
   2f1e0:	add	x2, x2, #0x670
   2f1e4:	sub	w5, w5, w1
   2f1e8:	mov	x1, #0xc8                  	// #200
   2f1ec:	bl	6a20 <snprintf@plt>
   2f1f0:	mov	w19, #0x0                   	// #0
   2f1f4:	ldp	x3, x0, [x28, #40]
   2f1f8:	mov	x1, x20
   2f1fc:	mov	w2, #0x0                   	// #0
   2f200:	blr	x3
   2f204:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f208:	mov	x0, #0x1                   	// #1
   2f20c:	mov	w1, #0x2                   	// #2
   2f210:	mov	w19, w0
   2f214:	str	w1, [x21]
   2f218:	str	x0, [x21, #8]
   2f21c:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f220:	mov	w0, #0xb                   	// #11
   2f224:	b	2f0a0 <__sanitizer_set_death_callback@@Base+0x29b8>
   2f228:	mov	w0, #0x8                   	// #8
   2f22c:	str	w0, [x21]
   2f230:	mov	x0, x28
   2f234:	cbz	w22, 2f394 <__sanitizer_set_death_callback@@Base+0x2cac>
   2f238:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   2f23c:	mov	w19, #0x1                   	// #1
   2f240:	str	x0, [x21, #8]
   2f244:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f248:	mov	x0, x28
   2f24c:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   2f250:	mov	w19, w0
   2f254:	b	2eec8 <__sanitizer_set_death_callback@@Base+0x27e0>
   2f258:	mov	w0, #0x5                   	// #5
   2f25c:	b	2ef84 <__sanitizer_set_death_callback@@Base+0x289c>
   2f260:	mov	w0, #0x6                   	// #6
   2f264:	str	w0, [x21]
   2f268:	cmp	w26, #0x2
   2f26c:	b.ne	2f230 <__sanitizer_set_death_callback@@Base+0x2b48>  // b.any
   2f270:	mov	w1, w25
   2f274:	mov	x0, x28
   2f278:	mov	w19, #0x1                   	// #1
   2f27c:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   2f280:	str	x0, [x21, #8]
   2f284:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f288:	mov	w0, #0x2                   	// #2
   2f28c:	b	2ef84 <__sanitizer_set_death_callback@@Base+0x289c>
   2f290:	mov	w0, #0x5                   	// #5
   2f294:	b	2f044 <__sanitizer_set_death_callback@@Base+0x295c>
   2f298:	mov	w0, #0x5                   	// #5
   2f29c:	b	2f108 <__sanitizer_set_death_callback@@Base+0x2a20>
   2f2a0:	mov	w0, #0x5                   	// #5
   2f2a4:	b	2f128 <__sanitizer_set_death_callback@@Base+0x2a40>
   2f2a8:	mov	x0, x28
   2f2ac:	cbz	w22, 2f3f8 <__sanitizer_set_death_callback@@Base+0x2d10>
   2f2b0:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   2f2b4:	cmp	x0, x27
   2f2b8:	b.cs	2f4d8 <__sanitizer_set_death_callback@@Base+0x2df0>  // b.hs, b.nlast
   2f2bc:	add	x24, x24, x0
   2f2c0:	mov	w19, #0x1                   	// #1
   2f2c4:	mov	w0, #0x4                   	// #4
   2f2c8:	str	w0, [x21]
   2f2cc:	str	x24, [x21, #8]
   2f2d0:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f2d4:	ldp	x4, x1, [x28]
   2f2d8:	add	x20, sp, #0x68
   2f2dc:	ldr	x5, [x28, #16]
   2f2e0:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f2e4:	mov	x0, x20
   2f2e8:	add	x3, x3, #0x660
   2f2ec:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f2f0:	sub	w5, w5, w1
   2f2f4:	add	x2, x2, #0x670
   2f2f8:	mov	x1, #0xc8                  	// #200
   2f2fc:	bl	6a20 <snprintf@plt>
   2f300:	ldp	x3, x0, [x28, #40]
   2f304:	mov	x1, x20
   2f308:	mov	w2, #0x0                   	// #0
   2f30c:	blr	x3
   2f310:	mov	w0, #0x1                   	// #1
   2f314:	str	w0, [x28, #56]
   2f318:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f31c:	ldp	x4, x1, [x28]
   2f320:	add	x19, sp, #0x68
   2f324:	mov	x0, x19
   2f328:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f32c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f330:	add	x3, x3, #0x660
   2f334:	add	x2, x2, #0x670
   2f338:	sub	w5, w5, w1
   2f33c:	mov	x1, #0xc8                  	// #200
   2f340:	bl	6a20 <snprintf@plt>
   2f344:	ldp	x3, x0, [x28, #40]
   2f348:	mov	x1, x19
   2f34c:	mov	w2, #0x0                   	// #0
   2f350:	mov	w19, #0x1                   	// #1
   2f354:	blr	x3
   2f358:	mov	w0, #0x1                   	// #1
   2f35c:	str	w0, [x28, #56]
   2f360:	b	2efd8 <__sanitizer_set_death_callback@@Base+0x28f0>
   2f364:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2f368:	mov	w0, w0
   2f36c:	b	2ef28 <__sanitizer_set_death_callback@@Base+0x2840>
   2f370:	mov	x0, x28
   2f374:	cbz	w22, 2f404 <__sanitizer_set_death_callback@@Base+0x2d1c>
   2f378:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   2f37c:	str	x0, [x21, #8]
   2f380:	cbz	x23, 2f410 <__sanitizer_set_death_callback@@Base+0x2d28>
   2f384:	mov	w0, #0x7                   	// #7
   2f388:	mov	w19, #0x1                   	// #1
   2f38c:	str	w0, [x21]
   2f390:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f394:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2f398:	mov	w0, w0
   2f39c:	b	2f23c <__sanitizer_set_death_callback@@Base+0x2b54>
   2f3a0:	sub	x0, x0, #0x1
   2f3a4:	add	x5, x6, #0x1
   2f3a8:	stp	x5, x0, [x28, #16]
   2f3ac:	ldrb	w6, [x6]
   2f3b0:	cmp	x6, x0
   2f3b4:	b.ls	2f53c <__sanitizer_set_death_callback@@Base+0x2e54>  // b.plast
   2f3b8:	ldr	w19, [x28, #56]
   2f3bc:	cbnz	w19, 2f0c0 <__sanitizer_set_death_callback@@Base+0x29d8>
   2f3c0:	ldp	x4, x1, [x28]
   2f3c4:	add	x20, sp, #0x68
   2f3c8:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f3cc:	mov	x0, x20
   2f3d0:	add	x3, x3, #0x660
   2f3d4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f3d8:	sub	w5, w5, w1
   2f3dc:	b	2f2f4 <__sanitizer_set_death_callback@@Base+0x2c0c>
   2f3e0:	ldr	x2, [x28, #16]
   2f3e4:	sub	x1, x1, x0
   2f3e8:	mov	w19, #0x1                   	// #1
   2f3ec:	add	x0, x2, x0
   2f3f0:	stp	x0, x1, [x28, #16]
   2f3f4:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f3f8:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2f3fc:	mov	w0, w0
   2f400:	b	2f2b4 <__sanitizer_set_death_callback@@Base+0x2bcc>
   2f404:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   2f408:	mov	w0, w0
   2f40c:	b	2f37c <__sanitizer_set_death_callback@@Base+0x2c94>
   2f410:	mov	w19, #0x1                   	// #1
   2f414:	str	wzr, [x21]
   2f418:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f41c:	ldr	x2, [x28, #16]
   2f420:	sub	x1, x1, x0
   2f424:	cmp	x20, #0x0
   2f428:	add	x0, x2, x0
   2f42c:	stp	x0, x1, [x28, #16]
   2f430:	cset	w19, ne  // ne = any
   2f434:	str	x20, [x21, #8]
   2f438:	b	2efdc <__sanitizer_set_death_callback@@Base+0x28f4>
   2f43c:	ldp	x4, x1, [x28]
   2f440:	add	x20, sp, #0x68
   2f444:	ldr	x5, [x28, #16]
   2f448:	mov	x0, x20
   2f44c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f450:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f454:	add	x3, x3, #0x660
   2f458:	add	x2, x2, #0x670
   2f45c:	sub	w5, w5, w1
   2f460:	mov	x1, #0xc8                  	// #200
   2f464:	bl	6a20 <snprintf@plt>
   2f468:	ldp	x3, x0, [x28, #40]
   2f46c:	mov	x1, x20
   2f470:	mov	w2, #0x0                   	// #0
   2f474:	mov	x20, #0x0                   	// #0
   2f478:	blr	x3
   2f47c:	mov	w0, #0x1                   	// #1
   2f480:	str	w0, [x28, #56]
   2f484:	str	x20, [x21, #8]
   2f488:	b	2efdc <__sanitizer_set_death_callback@@Base+0x28f4>
   2f48c:	ldp	x4, x5, [x28]
   2f490:	add	x19, sp, #0x68
   2f494:	mov	x1, #0xc8                  	// #200
   2f498:	mov	x0, x19
   2f49c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f4a0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f4a4:	add	x3, x3, #0x660
   2f4a8:	add	x2, x2, #0x670
   2f4ac:	sub	w5, w6, w5
   2f4b0:	bl	6a20 <snprintf@plt>
   2f4b4:	ldp	x3, x0, [x28, #40]
   2f4b8:	mov	x1, x19
   2f4bc:	mov	w2, #0x0                   	// #0
   2f4c0:	blr	x3
   2f4c4:	mov	w0, #0x1                   	// #1
   2f4c8:	str	w0, [x28, #56]
   2f4cc:	ldr	x6, [x28, #16]
   2f4d0:	ldr	x0, [x28, #24]
   2f4d4:	b	2f090 <__sanitizer_set_death_callback@@Base+0x29a8>
   2f4d8:	ldp	x4, x1, [x28]
   2f4dc:	add	x19, sp, #0x68
   2f4e0:	ldr	x5, [x28, #16]
   2f4e4:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f4e8:	mov	x0, x19
   2f4ec:	add	x3, x3, #0x6e8
   2f4f0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f4f4:	sub	w5, w5, w1
   2f4f8:	add	x2, x2, #0x670
   2f4fc:	mov	x1, #0xc8                  	// #200
   2f500:	bl	6a20 <snprintf@plt>
   2f504:	ldp	x3, x0, [x28, #40]
   2f508:	mov	x1, x19
   2f50c:	mov	w2, #0x0                   	// #0
   2f510:	mov	w19, #0x0                   	// #0
   2f514:	blr	x3
   2f518:	b	2ef50 <__sanitizer_set_death_callback@@Base+0x2868>
   2f51c:	add	x19, sp, #0x68
   2f520:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f524:	mov	x0, x19
   2f528:	add	x3, x3, #0x708
   2f52c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f530:	ldp	x4, x1, [x28]
   2f534:	ldr	x5, [x28, #16]
   2f538:	b	2f4f4 <__sanitizer_set_death_callback@@Base+0x2e0c>
   2f53c:	sub	x0, x0, x6
   2f540:	add	x6, x5, x6
   2f544:	b	2f090 <__sanitizer_set_death_callback@@Base+0x29a8>
   2f548:	sub	sp, sp, #0x190
   2f54c:	stp	x29, x30, [sp, #16]
   2f550:	add	x29, sp, #0x10
   2f554:	stp	x27, x28, [sp, #96]
   2f558:	mov	x27, x0
   2f55c:	ldr	x0, [x1, #16]
   2f560:	stp	x21, x22, [sp, #48]
   2f564:	stp	x25, x26, [sp, #80]
   2f568:	cmp	x0, x2
   2f56c:	mov	x25, x4
   2f570:	str	x3, [sp, #112]
   2f574:	b.hi	2f718 <__sanitizer_set_death_callback@@Base+0x3030>  // b.pmore
   2f578:	stp	x19, x20, [sp, #32]
   2f57c:	mov	x19, x1
   2f580:	sub	x4, x2, x0
   2f584:	ldr	x1, [x1, #8]
   2f588:	cmp	x4, x1
   2f58c:	b.cs	2f714 <__sanitizer_set_death_callback@@Base+0x302c>  // b.hs, b.nlast
   2f590:	ldr	x3, [x19]
   2f594:	add	x0, x0, x1
   2f598:	sub	x1, x0, x2
   2f59c:	ldr	w5, [x27, #120]
   2f5a0:	add	x2, x3, x4
   2f5a4:	stp	x2, x1, [sp, #152]
   2f5a8:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f5ac:	ldr	x6, [x27, #56]
   2f5b0:	add	x3, x3, #0x778
   2f5b4:	ldr	x1, [sp, #112]
   2f5b8:	add	x21, sp, #0x88
   2f5bc:	mov	x0, x21
   2f5c0:	stp	x3, x6, [sp, #136]
   2f5c4:	str	w5, [sp, #168]
   2f5c8:	str	x1, [sp, #176]
   2f5cc:	str	x25, [sp, #184]
   2f5d0:	str	wzr, [sp, #192]
   2f5d4:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   2f5d8:	mov	x2, x0
   2f5dc:	cbz	x0, 2f764 <__sanitizer_set_death_callback@@Base+0x307c>
   2f5e0:	ldr	x3, [sp, #112]
   2f5e4:	mov	x4, x25
   2f5e8:	add	x1, x19, #0x60
   2f5ec:	add	x0, x19, #0x58
   2f5f0:	bl	2e5f8 <__sanitizer_set_death_callback@@Base+0x1f10>
   2f5f4:	mov	x26, x0
   2f5f8:	cbz	x0, 2f7d4 <__sanitizer_set_death_callback@@Base+0x30ec>
   2f5fc:	ldr	x0, [x0, #16]
   2f600:	cbz	x0, 2f7d4 <__sanitizer_set_death_callback@@Base+0x30ec>
   2f604:	add	x20, sp, #0xc8
   2f608:	mov	x28, #0x0                   	// #0
   2f60c:	add	x0, x20, #0x8
   2f610:	mov	x22, #0x0                   	// #0
   2f614:	stp	x23, x24, [sp, #64]
   2f618:	mov	w23, #0x2007                	// #8199
   2f61c:	str	x0, [sp, #120]
   2f620:	b	2f640 <__sanitizer_set_death_callback@@Base+0x2f58>
   2f624:	cmp	w2, #0x3
   2f628:	b.ne	2f630 <__sanitizer_set_death_callback@@Base+0x2f48>  // b.any
   2f62c:	cbz	x22, 2f750 <__sanitizer_set_death_callback@@Base+0x3068>
   2f630:	ldr	x0, [x26, #16]
   2f634:	add	x28, x28, #0x1
   2f638:	cmp	x0, x28
   2f63c:	b.ls	2f6f0 <__sanitizer_set_death_callback@@Base+0x3008>  // b.plast
   2f640:	ldr	x8, [x26, #24]
   2f644:	lsl	x24, x28, #3
   2f648:	ldp	x5, x6, [x27, #104]
   2f64c:	add	x8, x8, x24
   2f650:	ldp	w3, w2, [x19, #40]
   2f654:	mov	x1, x21
   2f658:	ldr	w4, [x19, #48]
   2f65c:	ldr	w0, [x8, #4]
   2f660:	ldr	x7, [x27, #8]
   2f664:	str	x20, [sp]
   2f668:	bl	2ee80 <__sanitizer_set_death_callback@@Base+0x2798>
   2f66c:	cbz	w0, 2f7c4 <__sanitizer_set_death_callback@@Base+0x30dc>
   2f670:	ldr	x0, [x26, #24]
   2f674:	add	x1, x0, x24
   2f678:	ldr	w2, [x0, x24]
   2f67c:	cmp	w2, #0x47
   2f680:	b.eq	2f6b4 <__sanitizer_set_death_callback@@Base+0x2fcc>  // b.none
   2f684:	b.ls	2f624 <__sanitizer_set_death_callback@@Base+0x2f3c>  // b.plast
   2f688:	cmp	w2, #0x6e
   2f68c:	b.eq	2f698 <__sanitizer_set_death_callback@@Base+0x2fb0>  // b.none
   2f690:	cmp	w2, w23
   2f694:	b.ne	2f630 <__sanitizer_set_death_callback@@Base+0x2f48>  // b.any
   2f698:	ldr	w0, [sp, #200]
   2f69c:	cmp	w0, #0x4
   2f6a0:	b.ne	2f630 <__sanitizer_set_death_callback@@Base+0x2f48>  // b.any
   2f6a4:	ldp	x19, x20, [sp, #32]
   2f6a8:	ldp	x23, x24, [sp, #64]
   2f6ac:	ldr	x22, [sp, #208]
   2f6b0:	b	2f734 <__sanitizer_set_death_callback@@Base+0x304c>
   2f6b4:	ldr	w0, [x1, #4]
   2f6b8:	cmp	w0, #0x20
   2f6bc:	b.eq	2f630 <__sanitizer_set_death_callback@@Base+0x2f48>  // b.none
   2f6c0:	ldp	x4, x3, [sp, #112]
   2f6c4:	mov	x5, x25
   2f6c8:	mov	x2, x20
   2f6cc:	mov	x1, x19
   2f6d0:	mov	x0, x27
   2f6d4:	add	x28, x28, #0x1
   2f6d8:	bl	2f7e0 <__sanitizer_set_death_callback@@Base+0x30f8>
   2f6dc:	cmp	x0, #0x0
   2f6e0:	csel	x22, x22, x0, eq  // eq = none
   2f6e4:	ldr	x0, [x26, #16]
   2f6e8:	cmp	x0, x28
   2f6ec:	b.hi	2f640 <__sanitizer_set_death_callback@@Base+0x2f58>  // b.pmore
   2f6f0:	ldp	x19, x20, [sp, #32]
   2f6f4:	ldp	x23, x24, [sp, #64]
   2f6f8:	mov	x0, x22
   2f6fc:	ldp	x29, x30, [sp, #16]
   2f700:	ldp	x21, x22, [sp, #48]
   2f704:	ldp	x25, x26, [sp, #80]
   2f708:	ldp	x27, x28, [sp, #96]
   2f70c:	add	sp, sp, #0x190
   2f710:	ret
   2f714:	ldp	x19, x20, [sp, #32]
   2f718:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f71c:	ldr	x3, [sp, #112]
   2f720:	mov	x0, x25
   2f724:	add	x1, x1, #0x748
   2f728:	mov	w2, #0x0                   	// #0
   2f72c:	mov	x22, #0x0                   	// #0
   2f730:	blr	x3
   2f734:	mov	x0, x22
   2f738:	ldp	x29, x30, [sp, #16]
   2f73c:	ldp	x21, x22, [sp, #48]
   2f740:	ldp	x25, x26, [sp, #80]
   2f744:	ldp	x27, x28, [sp, #96]
   2f748:	add	sp, sp, #0x190
   2f74c:	ret
   2f750:	ldr	w0, [sp, #200]
   2f754:	ldr	x22, [sp, #208]
   2f758:	cmp	w0, #0x4
   2f75c:	csel	x22, x22, xzr, eq  // eq = none
   2f760:	b	2f630 <__sanitizer_set_death_callback@@Base+0x2f48>
   2f764:	ldp	x4, x1, [sp, #136]
   2f768:	add	x19, sp, #0xc8
   2f76c:	ldr	x5, [sp, #152]
   2f770:	mov	x0, x19
   2f774:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f778:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2f77c:	add	x3, x3, #0x788
   2f780:	add	x2, x2, #0x670
   2f784:	sub	w5, w5, w1
   2f788:	mov	x1, #0xc8                  	// #200
   2f78c:	bl	6a20 <snprintf@plt>
   2f790:	mov	x22, #0x0                   	// #0
   2f794:	ldp	x3, x0, [sp, #176]
   2f798:	mov	x1, x19
   2f79c:	mov	w2, #0x0                   	// #0
   2f7a0:	blr	x3
   2f7a4:	mov	x0, x22
   2f7a8:	ldp	x29, x30, [sp, #16]
   2f7ac:	ldp	x19, x20, [sp, #32]
   2f7b0:	ldp	x21, x22, [sp, #48]
   2f7b4:	ldp	x25, x26, [sp, #80]
   2f7b8:	ldp	x27, x28, [sp, #96]
   2f7bc:	add	sp, sp, #0x190
   2f7c0:	ret
   2f7c4:	mov	x22, #0x0                   	// #0
   2f7c8:	ldp	x19, x20, [sp, #32]
   2f7cc:	ldp	x23, x24, [sp, #64]
   2f7d0:	b	2f6f8 <__sanitizer_set_death_callback@@Base+0x3010>
   2f7d4:	mov	x22, #0x0                   	// #0
   2f7d8:	ldp	x19, x20, [sp, #32]
   2f7dc:	b	2f734 <__sanitizer_set_death_callback@@Base+0x304c>
   2f7e0:	ldr	w2, [x2]
   2f7e4:	mov	x6, x3
   2f7e8:	mov	x7, x0
   2f7ec:	mov	x3, x4
   2f7f0:	cmp	w2, #0x6
   2f7f4:	mov	x4, x5
   2f7f8:	b.eq	2f860 <__sanitizer_set_death_callback@@Base+0x3178>  // b.none
   2f7fc:	cmp	w2, #0x2
   2f800:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   2f804:	b.eq	2f8b8 <__sanitizer_set_death_callback@@Base+0x31d0>  // b.none
   2f808:	cmp	w2, #0x7
   2f80c:	b.ne	2f858 <__sanitizer_set_death_callback@@Base+0x3170>  // b.any
   2f810:	ldr	x0, [x0, #8]
   2f814:	mov	x5, #0x0                   	// #0
   2f818:	ldr	x2, [x6]
   2f81c:	ldp	x9, x7, [x0, #40]
   2f820:	add	x6, x7, x5
   2f824:	cmp	x7, x5
   2f828:	b.ls	2f858 <__sanitizer_set_death_callback@@Base+0x3170>  // b.plast
   2f82c:	lsr	x6, x6, #1
   2f830:	ldr	x1, [x9, x6, lsl #3]
   2f834:	ldr	x8, [x1, #24]
   2f838:	cmp	x2, x8
   2f83c:	b.cc	2f8b0 <__sanitizer_set_death_callback@@Base+0x31c8>  // b.lo, b.ul, b.last
   2f840:	ldr	x10, [x1, #32]
   2f844:	add	x5, x6, #0x1
   2f848:	cmp	x2, x10
   2f84c:	b.cs	2f820 <__sanitizer_set_death_callback@@Base+0x3138>  // b.hs, b.nlast
   2f850:	sub	x2, x2, x8
   2f854:	b	2f548 <__sanitizer_set_death_callback@@Base+0x2e60>
   2f858:	mov	x0, #0x0                   	// #0
   2f85c:	ret
   2f860:	ldp	x9, x5, [x7, #40]
   2f864:	mov	x0, #0x0                   	// #0
   2f868:	ldr	x2, [x6]
   2f86c:	add	x6, x5, x0
   2f870:	cmp	x5, x0
   2f874:	b.ls	2f858 <__sanitizer_set_death_callback@@Base+0x3170>  // b.plast
   2f878:	lsr	x6, x6, #1
   2f87c:	ldr	x1, [x9, x6, lsl #3]
   2f880:	ldr	x8, [x1, #24]
   2f884:	cmp	x2, x8
   2f888:	b.cc	2f8a8 <__sanitizer_set_death_callback@@Base+0x31c0>  // b.lo, b.ul, b.last
   2f88c:	ldr	x10, [x1, #32]
   2f890:	add	x0, x6, #0x1
   2f894:	cmp	x2, x10
   2f898:	b.cs	2f86c <__sanitizer_set_death_callback@@Base+0x3184>  // b.hs, b.nlast
   2f89c:	sub	x2, x2, x8
   2f8a0:	mov	x0, x7
   2f8a4:	b	2f548 <__sanitizer_set_death_callback@@Base+0x2e60>
   2f8a8:	mov	x5, x6
   2f8ac:	b	2f86c <__sanitizer_set_death_callback@@Base+0x3184>
   2f8b0:	mov	x7, x6
   2f8b4:	b	2f820 <__sanitizer_set_death_callback@@Base+0x3138>
   2f8b8:	ldr	x2, [x6]
   2f8bc:	b	2f548 <__sanitizer_set_death_callback@@Base+0x2e60>
   2f8c0:	sub	sp, sp, #0x130
   2f8c4:	stp	x29, x30, [sp, #48]
   2f8c8:	add	x29, sp, #0x30
   2f8cc:	stp	x23, x24, [sp, #96]
   2f8d0:	ldr	x24, [sp, #328]
   2f8d4:	stp	x27, x28, [sp, #128]
   2f8d8:	add	x27, sp, #0xf0
   2f8dc:	ldr	x28, [sp, #304]
   2f8e0:	stp	x19, x20, [sp, #64]
   2f8e4:	mov	x19, x2
   2f8e8:	mov	x20, x3
   2f8ec:	stp	x21, x22, [sp, #80]
   2f8f0:	mov	x22, x4
   2f8f4:	stp	x25, x26, [sp, #112]
   2f8f8:	mov	x26, x24
   2f8fc:	stp	x1, x6, [sp, #200]
   2f900:	stp	x0, x5, [sp, #216]
   2f904:	str	w7, [sp, #236]
   2f908:	mov	x25, x26
   2f90c:	add	x0, x26, #0x60
   2f910:	str	x0, [sp, #184]
   2f914:	ldr	x0, [x19, #24]
   2f918:	cbz	x0, 2fc5c <__sanitizer_set_death_callback@@Base+0x3574>
   2f91c:	mov	x0, x19
   2f920:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   2f924:	mov	x2, x0
   2f928:	cbz	x0, 2fc5c <__sanitizer_set_death_callback@@Base+0x3574>
   2f92c:	ldp	x3, x4, [sp, #312]
   2f930:	add	x0, x25, #0x58
   2f934:	ldr	x1, [sp, #184]
   2f938:	bl	2e5f8 <__sanitizer_set_death_callback@@Base+0x1f10>
   2f93c:	mov	x23, x0
   2f940:	cbz	x0, 2fb58 <__sanitizer_set_death_callback@@Base+0x3470>
   2f944:	ldr	x0, [sp, #344]
   2f948:	cbz	x0, 2f958 <__sanitizer_set_death_callback@@Base+0x3270>
   2f94c:	mov	x1, x0
   2f950:	ldr	w0, [x23, #8]
   2f954:	str	w0, [x1]
   2f958:	ldr	x0, [x23, #16]
   2f95c:	cbz	x0, 2fb08 <__sanitizer_set_death_callback@@Base+0x3420>
   2f960:	mov	x26, #0x0                   	// #0
   2f964:	mov	x21, #0x0                   	// #0
   2f968:	str	wzr, [sp, #152]
   2f96c:	str	wzr, [sp, #160]
   2f970:	stp	xzr, xzr, [sp, #168]
   2f974:	str	wzr, [sp, #192]
   2f978:	str	wzr, [sp, #232]
   2f97c:	ldr	x2, [x23, #24]
   2f980:	b	2f9b8 <__sanitizer_set_death_callback@@Base+0x32d0>
   2f984:	cmp	w0, #0x10
   2f988:	b.eq	2fba8 <__sanitizer_set_death_callback@@Base+0x34c0>  // b.none
   2f98c:	cmp	w0, #0x11
   2f990:	b.ne	2fb7c <__sanitizer_set_death_callback@@Base+0x3494>  // b.any
   2f994:	ldr	w0, [sp, #240]
   2f998:	cmp	w0, #0x1
   2f99c:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2f9a0:	ldr	x21, [sp, #248]
   2f9a4:	str	w0, [sp, #192]
   2f9a8:	ldr	x0, [x23, #16]
   2f9ac:	add	x26, x26, #0x1
   2f9b0:	cmp	x0, x26
   2f9b4:	b.ls	2fa40 <__sanitizer_set_death_callback@@Base+0x3358>  // b.plast
   2f9b8:	lsl	x24, x26, #3
   2f9bc:	ldr	w4, [x25, #48]
   2f9c0:	add	x0, x2, x24
   2f9c4:	mov	x7, x28
   2f9c8:	ldp	w3, w2, [x25, #40]
   2f9cc:	mov	x6, x22
   2f9d0:	ldr	w0, [x0, #4]
   2f9d4:	mov	x5, x20
   2f9d8:	str	x27, [sp]
   2f9dc:	mov	x1, x19
   2f9e0:	bl	2ee80 <__sanitizer_set_death_callback@@Base+0x2798>
   2f9e4:	cbz	w0, 2fb5c <__sanitizer_set_death_callback@@Base+0x3474>
   2f9e8:	ldr	x2, [x23, #24]
   2f9ec:	ldr	w0, [x2, x24]
   2f9f0:	cmp	w0, #0x12
   2f9f4:	b.eq	2fbf4 <__sanitizer_set_death_callback@@Base+0x350c>  // b.none
   2f9f8:	b.ls	2f984 <__sanitizer_set_death_callback@@Base+0x329c>  // b.plast
   2f9fc:	cmp	w0, #0x1b
   2fa00:	b.eq	2fbd0 <__sanitizer_set_death_callback@@Base+0x34e8>  // b.none
   2fa04:	cmp	w0, #0x55
   2fa08:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fa0c:	ldr	w0, [sp, #240]
   2fa10:	cmp	w0, #0x2
   2fa14:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   2fa18:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fa1c:	mov	w0, #0x1                   	// #1
   2fa20:	str	w0, [sp, #152]
   2fa24:	ldr	x0, [sp, #248]
   2fa28:	str	x0, [sp, #176]
   2fa2c:	ldr	x0, [x23, #16]
   2fa30:	add	x26, x26, #0x1
   2fa34:	cmp	x0, x26
   2fa38:	b.hi	2f9b8 <__sanitizer_set_death_callback@@Base+0x32d0>  // b.pmore
   2fa3c:	nop
   2fa40:	ldr	w1, [x23, #8]
   2fa44:	cmp	w1, #0x2e
   2fa48:	ccmp	w1, #0x11, #0x4, ne  // ne = any
   2fa4c:	b.ne	2fb08 <__sanitizer_set_death_callback@@Base+0x3420>  // b.any
   2fa50:	ldr	w0, [sp, #152]
   2fa54:	cbnz	w0, 2fc64 <__sanitizer_set_death_callback@@Base+0x357c>
   2fa58:	ldr	w2, [sp, #160]
   2fa5c:	ldr	w0, [sp, #192]
   2fa60:	tst	w0, w2
   2fa64:	b.eq	2fb08 <__sanitizer_set_death_callback@@Base+0x3420>  // b.none
   2fa68:	ldr	x0, [sp, #336]
   2fa6c:	ldr	x3, [sp, #168]
   2fa70:	ldr	w2, [sp, #232]
   2fa74:	ldr	x0, [x0, #24]
   2fa78:	cmp	w2, #0x0
   2fa7c:	ldr	x4, [sp, #200]
   2fa80:	add	x2, x3, x21
   2fa84:	csel	x2, x2, x3, ne  // ne = any
   2fa88:	add	x21, x21, x4
   2fa8c:	add	x24, x2, x4
   2fa90:	cbz	x0, 2fac4 <__sanitizer_set_death_callback@@Base+0x33dc>
   2fa94:	ldr	x2, [sp, #336]
   2fa98:	add	x0, x0, x0, lsl #1
   2fa9c:	lsl	x0, x0, #3
   2faa0:	ldr	x2, [x2]
   2faa4:	sub	x0, x0, #0x18
   2faa8:	add	x0, x2, x0
   2faac:	ldr	x2, [x0, #8]
   2fab0:	cmp	x21, x2
   2fab4:	b.eq	2fc20 <__sanitizer_set_death_callback@@Base+0x3538>  // b.none
   2fab8:	add	x3, x2, #0x1
   2fabc:	cmp	x21, x3
   2fac0:	b.eq	2fc20 <__sanitizer_set_death_callback@@Base+0x3538>  // b.none
   2fac4:	ldp	x2, x3, [sp, #312]
   2fac8:	mov	x1, #0x18                  	// #24
   2facc:	ldr	x0, [sp, #216]
   2fad0:	ldr	x4, [sp, #336]
   2fad4:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2fad8:	cbz	x0, 2fb58 <__sanitizer_set_death_callback@@Base+0x3470>
   2fadc:	ldr	x1, [sp, #336]
   2fae0:	ldr	x2, [x1, #24]
   2fae4:	ldr	w1, [x23, #8]
   2fae8:	stp	x21, x24, [x0]
   2faec:	add	x2, x2, #0x1
   2faf0:	str	x25, [x0, #16]
   2faf4:	ldr	x0, [sp, #336]
   2faf8:	str	x2, [x0, #24]
   2fafc:	cmp	w1, #0x11
   2fb00:	b.eq	2fc5c <__sanitizer_set_death_callback@@Base+0x3574>  // b.none
   2fb04:	nop
   2fb08:	ldr	w0, [x23, #12]
   2fb0c:	cbz	w0, 2f914 <__sanitizer_set_death_callback@@Base+0x322c>
   2fb10:	ldr	x0, [sp, #312]
   2fb14:	stp	x28, x0, [sp]
   2fb18:	ldr	w7, [sp, #236]
   2fb1c:	ldp	x1, x6, [sp, #200]
   2fb20:	str	x25, [sp, #24]
   2fb24:	ldr	x0, [sp, #320]
   2fb28:	str	x0, [sp, #16]
   2fb2c:	ldr	x0, [sp, #336]
   2fb30:	str	x0, [sp, #32]
   2fb34:	ldr	x0, [sp, #216]
   2fb38:	str	xzr, [sp, #40]
   2fb3c:	ldr	x5, [sp, #224]
   2fb40:	mov	x26, x25
   2fb44:	mov	x4, x22
   2fb48:	mov	x3, x20
   2fb4c:	mov	x2, x19
   2fb50:	bl	2f8c0 <__sanitizer_set_death_callback@@Base+0x31d8>
   2fb54:	cbnz	w0, 2f908 <__sanitizer_set_death_callback@@Base+0x3220>
   2fb58:	mov	w0, #0x0                   	// #0
   2fb5c:	ldp	x29, x30, [sp, #48]
   2fb60:	ldp	x19, x20, [sp, #64]
   2fb64:	ldp	x21, x22, [sp, #80]
   2fb68:	ldp	x23, x24, [sp, #96]
   2fb6c:	ldp	x25, x26, [sp, #112]
   2fb70:	ldp	x27, x28, [sp, #128]
   2fb74:	add	sp, sp, #0x130
   2fb78:	ret
   2fb7c:	cmp	w0, #0x3
   2fb80:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fb84:	ldr	w0, [x23, #8]
   2fb88:	cmp	w0, #0x11
   2fb8c:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fb90:	ldr	w0, [sp, #240]
   2fb94:	cmp	w0, #0x4
   2fb98:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fb9c:	ldr	x0, [sp, #248]
   2fba0:	str	x0, [x25, #64]
   2fba4:	b	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2fba8:	ldr	w0, [x23, #8]
   2fbac:	cmp	w0, #0x11
   2fbb0:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fbb4:	ldr	w0, [sp, #240]
   2fbb8:	cmp	w0, #0x2
   2fbbc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   2fbc0:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fbc4:	ldr	x0, [sp, #248]
   2fbc8:	str	x0, [x25, #56]
   2fbcc:	b	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2fbd0:	ldr	w0, [x23, #8]
   2fbd4:	cmp	w0, #0x11
   2fbd8:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fbdc:	ldr	w0, [sp, #240]
   2fbe0:	cmp	w0, #0x4
   2fbe4:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fbe8:	ldr	x0, [sp, #248]
   2fbec:	str	x0, [x25, #72]
   2fbf0:	b	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2fbf4:	ldr	w0, [sp, #240]
   2fbf8:	cmp	w0, #0x1
   2fbfc:	b.eq	2fc10 <__sanitizer_set_death_callback@@Base+0x3528>  // b.none
   2fc00:	cmp	w0, #0x2
   2fc04:	b.ne	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>  // b.any
   2fc08:	mov	w0, #0x1                   	// #1
   2fc0c:	str	w0, [sp, #232]
   2fc10:	str	w0, [sp, #160]
   2fc14:	ldr	x0, [sp, #248]
   2fc18:	str	x0, [sp, #168]
   2fc1c:	b	2f9a8 <__sanitizer_set_death_callback@@Base+0x32c0>
   2fc20:	ldr	x3, [x0, #16]
   2fc24:	cmp	x25, x3
   2fc28:	b.ne	2fac4 <__sanitizer_set_death_callback@@Base+0x33dc>  // b.any
   2fc2c:	cmp	x24, x2
   2fc30:	b.ls	2fafc <__sanitizer_set_death_callback@@Base+0x3414>  // b.plast
   2fc34:	str	x24, [x0, #8]
   2fc38:	b	2fafc <__sanitizer_set_death_callback@@Base+0x3414>
   2fc3c:	ldr	w0, [sp, #296]
   2fc40:	ldp	x23, x19, [sp, #152]
   2fc44:	ldp	x20, x22, [sp, #168]
   2fc48:	ldr	x28, [sp, #192]
   2fc4c:	cbnz	w0, 2fb58 <__sanitizer_set_death_callback@@Base+0x3470>
   2fc50:	ldr	w0, [x23, #8]
   2fc54:	cmp	w0, #0x11
   2fc58:	b.ne	2fb08 <__sanitizer_set_death_callback@@Base+0x3420>  // b.any
   2fc5c:	mov	w0, #0x1                   	// #1
   2fc60:	b	2fb5c <__sanitizer_set_death_callback@@Base+0x3474>
   2fc64:	ldr	x0, [sp, #176]
   2fc68:	ldr	x1, [sp, #208]
   2fc6c:	cmp	x0, x1
   2fc70:	b.cs	2fe08 <__sanitizer_set_death_callback@@Base+0x3720>  // b.hs, b.nlast
   2fc74:	mov	x2, x0
   2fc78:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2fc7c:	sub	x24, x1, x2
   2fc80:	add	x0, x0, #0x7d8
   2fc84:	ldr	x1, [sp, #224]
   2fc88:	stp	x0, x1, [sp, #240]
   2fc8c:	add	x0, x1, x2
   2fc90:	str	x0, [sp, #256]
   2fc94:	ldr	w0, [sp, #236]
   2fc98:	str	w0, [sp, #272]
   2fc9c:	ldr	x0, [sp, #312]
   2fca0:	str	x0, [sp, #280]
   2fca4:	ldr	x0, [sp, #320]
   2fca8:	stp	x23, x19, [sp, #152]
   2fcac:	stp	x20, x22, [sp, #168]
   2fcb0:	mov	x26, x0
   2fcb4:	str	x24, [sp, #264]
   2fcb8:	ldr	x19, [sp, #200]
   2fcbc:	str	x28, [sp, #192]
   2fcc0:	ldr	x23, [sp, #216]
   2fcc4:	str	x0, [sp, #288]
   2fcc8:	ldr	x24, [sp, #312]
   2fccc:	str	wzr, [sp, #296]
   2fcd0:	ldr	x20, [sp, #336]
   2fcd4:	nop
   2fcd8:	mov	x0, x27
   2fcdc:	ldr	w1, [x25, #48]
   2fce0:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   2fce4:	mov	x22, x0
   2fce8:	ldr	w1, [x25, #48]
   2fcec:	mov	x0, x27
   2fcf0:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   2fcf4:	orr	x1, x22, x0
   2fcf8:	cbz	x1, 2fc3c <__sanitizer_set_death_callback@@Base+0x3554>
   2fcfc:	ldr	w1, [x25, #48]
   2fd00:	cmp	w1, #0x4
   2fd04:	b.eq	2fdf8 <__sanitizer_set_death_callback@@Base+0x3710>  // b.none
   2fd08:	b.gt	2fd40 <__sanitizer_set_death_callback@@Base+0x3658>
   2fd0c:	cmp	w1, #0x1
   2fd10:	b.eq	2fdec <__sanitizer_set_death_callback@@Base+0x3704>  // b.none
   2fd14:	cmp	w1, #0x2
   2fd18:	b.ne	2fd58 <__sanitizer_set_death_callback@@Base+0x3670>  // b.any
   2fd1c:	mov	x1, #0xffff                	// #65535
   2fd20:	cmp	x22, x1
   2fd24:	cset	w1, eq  // eq = none
   2fd28:	cbz	w1, 2fd58 <__sanitizer_set_death_callback@@Base+0x3670>
   2fd2c:	mov	x21, x0
   2fd30:	ldr	w0, [sp, #296]
   2fd34:	cbz	w0, 2fcd8 <__sanitizer_set_death_callback@@Base+0x35f0>
   2fd38:	mov	w0, #0x0                   	// #0
   2fd3c:	b	2fb5c <__sanitizer_set_death_callback@@Base+0x3474>
   2fd40:	cmp	w1, #0x8
   2fd44:	b.ne	2fd58 <__sanitizer_set_death_callback@@Base+0x3670>  // b.any
   2fd48:	cmn	x22, #0x1
   2fd4c:	cset	w1, eq  // eq = none
   2fd50:	cbnz	w1, 2fd2c <__sanitizer_set_death_callback@@Base+0x3644>
   2fd54:	nop
   2fd58:	ldr	x1, [x20, #24]
   2fd5c:	add	x2, x22, x21
   2fd60:	add	x0, x0, x21
   2fd64:	add	x28, x2, x19
   2fd68:	add	x22, x0, x19
   2fd6c:	cbz	x1, 2fd9c <__sanitizer_set_death_callback@@Base+0x36b4>
   2fd70:	add	x0, x1, x1, lsl #1
   2fd74:	ldr	x1, [x20]
   2fd78:	lsl	x0, x0, #3
   2fd7c:	sub	x0, x0, #0x18
   2fd80:	add	x0, x1, x0
   2fd84:	ldr	x1, [x0, #8]
   2fd88:	cmp	x28, x1
   2fd8c:	b.eq	2fdd0 <__sanitizer_set_death_callback@@Base+0x36e8>  // b.none
   2fd90:	add	x2, x1, #0x1
   2fd94:	cmp	x28, x2
   2fd98:	b.eq	2fdd0 <__sanitizer_set_death_callback@@Base+0x36e8>  // b.none
   2fd9c:	mov	x4, x20
   2fda0:	mov	x3, x26
   2fda4:	mov	x2, x24
   2fda8:	mov	x0, x23
   2fdac:	mov	x1, #0x18                  	// #24
   2fdb0:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2fdb4:	cbz	x0, 2fb58 <__sanitizer_set_death_callback@@Base+0x3470>
   2fdb8:	ldr	x1, [x20, #24]
   2fdbc:	stp	x28, x22, [x0]
   2fdc0:	str	x25, [x0, #16]
   2fdc4:	add	x0, x1, #0x1
   2fdc8:	str	x0, [x20, #24]
   2fdcc:	b	2fd30 <__sanitizer_set_death_callback@@Base+0x3648>
   2fdd0:	ldr	x2, [x0, #16]
   2fdd4:	cmp	x25, x2
   2fdd8:	b.ne	2fd9c <__sanitizer_set_death_callback@@Base+0x36b4>  // b.any
   2fddc:	cmp	x22, x1
   2fde0:	b.ls	2fd30 <__sanitizer_set_death_callback@@Base+0x3648>  // b.plast
   2fde4:	str	x22, [x0, #8]
   2fde8:	b	2fd30 <__sanitizer_set_death_callback@@Base+0x3648>
   2fdec:	cmp	x22, #0xff
   2fdf0:	cset	w1, eq  // eq = none
   2fdf4:	b	2fd28 <__sanitizer_set_death_callback@@Base+0x3640>
   2fdf8:	mov	x1, #0xffffffff            	// #4294967295
   2fdfc:	cmp	x22, x1
   2fe00:	cset	w1, eq  // eq = none
   2fe04:	b	2fd28 <__sanitizer_set_death_callback@@Base+0x3640>
   2fe08:	ldp	x3, x0, [sp, #312]
   2fe0c:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   2fe10:	mov	w2, #0x0                   	// #0
   2fe14:	add	x1, x1, #0x7b8
   2fe18:	blr	x3
   2fe1c:	mov	w0, #0x0                   	// #0
   2fe20:	b	2fb5c <__sanitizer_set_death_callback@@Base+0x3474>
   2fe24:	nop
   2fe28:	sub	sp, sp, #0x1d0
   2fe2c:	stp	x29, x30, [sp, #16]
   2fe30:	add	x29, sp, #0x10
   2fe34:	stp	x23, x24, [sp, #64]
   2fe38:	mov	x24, x4
   2fe3c:	ldr	x4, [x4, #24]
   2fe40:	str	x6, [sp, #128]
   2fe44:	str	x0, [sp, #152]
   2fe48:	str	x3, [sp, #184]
   2fe4c:	str	x5, [sp, #216]
   2fe50:	cbz	x4, 30110 <__sanitizer_set_death_callback@@Base+0x3a28>
   2fe54:	mov	x23, x1
   2fe58:	stp	x21, x22, [sp, #48]
   2fe5c:	mov	x22, x2
   2fe60:	stp	x25, x26, [sp, #80]
   2fe64:	add	x26, sp, #0xf8
   2fe68:	add	x1, x26, #0x8
   2fe6c:	stp	x27, x28, [sp, #96]
   2fe70:	mov	x28, x7
   2fe74:	mov	x27, x23
   2fe78:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   2fe7c:	add	x0, x0, #0xb00
   2fe80:	stp	x19, x20, [sp, #32]
   2fe84:	stp	x1, x0, [sp, #224]
   2fe88:	mov	x0, x24
   2fe8c:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   2fe90:	mov	x2, x0
   2fe94:	cbz	x0, 30100 <__sanitizer_set_death_callback@@Base+0x3a18>
   2fe98:	ldr	x3, [sp, #128]
   2fe9c:	mov	x4, x28
   2fea0:	add	x1, x22, #0x60
   2fea4:	add	x0, x22, #0x58
   2fea8:	bl	2e5f8 <__sanitizer_set_death_callback@@Base+0x1f10>
   2feac:	mov	x25, x0
   2feb0:	cbz	x0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   2feb4:	ldr	w0, [x0, #8]
   2feb8:	cmp	w0, #0x2e
   2febc:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   2fec0:	b.eq	302dc <__sanitizer_set_death_callback@@Base+0x3bf4>  // b.none
   2fec4:	cmp	w0, #0x1d
   2fec8:	b.eq	30358 <__sanitizer_set_death_callback@@Base+0x3c70>  // b.none
   2fecc:	ldr	x0, [sp, #464]
   2fed0:	mov	w19, #0x0                   	// #0
   2fed4:	str	xzr, [sp, #120]
   2fed8:	str	x0, [sp, #208]
   2fedc:	ldr	x0, [x25, #16]
   2fee0:	str	x0, [sp, #136]
   2fee4:	cbz	x0, 3054c <__sanitizer_set_death_callback@@Base+0x3e64>
   2fee8:	mov	x21, x22
   2feec:	mov	x23, #0x0                   	// #0
   2fef0:	mov	w20, #0x2007                	// #8199
   2fef4:	str	xzr, [sp, #136]
   2fef8:	str	wzr, [sp, #144]
   2fefc:	str	wzr, [sp, #160]
   2ff00:	str	wzr, [sp, #172]
   2ff04:	str	xzr, [sp, #176]
   2ff08:	str	xzr, [sp, #192]
   2ff0c:	stp	wzr, wzr, [sp, #200]
   2ff10:	ldr	x0, [x25, #24]
   2ff14:	lsl	x22, x23, #3
   2ff18:	ldp	x5, x6, [x27, #104]
   2ff1c:	add	x0, x0, x22
   2ff20:	ldp	w3, w2, [x21, #40]
   2ff24:	mov	x1, x24
   2ff28:	ldr	w4, [x21, #48]
   2ff2c:	ldr	w0, [x0, #4]
   2ff30:	ldr	x7, [x27, #8]
   2ff34:	str	x26, [sp]
   2ff38:	bl	2ee80 <__sanitizer_set_death_callback@@Base+0x2798>
   2ff3c:	cbz	w0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   2ff40:	ldr	w0, [x25, #8]
   2ff44:	cmp	w0, #0x11
   2ff48:	b.eq	30118 <__sanitizer_set_death_callback@@Base+0x3a30>  // b.none
   2ff4c:	cbz	w19, 2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   2ff50:	ldr	x0, [x25, #24]
   2ff54:	add	x1, x0, x22
   2ff58:	ldr	w0, [x0, x22]
   2ff5c:	cmp	w0, #0x55
   2ff60:	b.eq	30278 <__sanitizer_set_death_callback@@Base+0x3b90>  // b.none
   2ff64:	b.hi	301f4 <__sanitizer_set_death_callback@@Base+0x3b0c>  // b.pmore
   2ff68:	cmp	w0, #0x12
   2ff6c:	b.eq	302b4 <__sanitizer_set_death_callback@@Base+0x3bcc>  // b.none
   2ff70:	b.ls	301cc <__sanitizer_set_death_callback@@Base+0x3ae4>  // b.plast
   2ff74:	cmp	w0, #0x31
   2ff78:	b.eq	2ff84 <__sanitizer_set_death_callback@@Base+0x389c>  // b.none
   2ff7c:	cmp	w0, #0x47
   2ff80:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   2ff84:	ldr	w0, [sp, #144]
   2ff88:	cbz	w0, 3031c <__sanitizer_set_death_callback@@Base+0x3c34>
   2ff8c:	nop
   2ff90:	ldr	x0, [x25, #16]
   2ff94:	add	x23, x23, #0x1
   2ff98:	cmp	x0, x23
   2ff9c:	b.hi	2ff10 <__sanitizer_set_death_callback@@Base+0x3828>  // b.pmore
   2ffa0:	mov	x22, x21
   2ffa4:	cbz	w19, 30164 <__sanitizer_set_death_callback@@Base+0x3a7c>
   2ffa8:	ldr	x0, [sp, #120]
   2ffac:	ldr	x0, [x0]
   2ffb0:	cbz	x0, 30150 <__sanitizer_set_death_callback@@Base+0x3a68>
   2ffb4:	ldr	w0, [sp, #160]
   2ffb8:	cbnz	w0, 30394 <__sanitizer_set_death_callback@@Base+0x3cac>
   2ffbc:	ldr	w1, [sp, #172]
   2ffc0:	ldr	w0, [sp, #200]
   2ffc4:	tst	w0, w1
   2ffc8:	b.eq	30150 <__sanitizer_set_death_callback@@Base+0x3a68>  // b.none
   2ffcc:	ldr	x4, [sp, #208]
   2ffd0:	ldr	x2, [sp, #136]
   2ffd4:	ldr	x3, [sp, #192]
   2ffd8:	ldr	w1, [sp, #204]
   2ffdc:	ldr	x0, [x4, #24]
   2ffe0:	cmp	w1, #0x0
   2ffe4:	ldr	x19, [x27, #16]
   2ffe8:	add	x1, x2, x3
   2ffec:	csel	x1, x1, x2, ne  // ne = any
   2fff0:	add	x20, x1, x19
   2fff4:	add	x19, x19, x3
   2fff8:	cbz	x0, 30028 <__sanitizer_set_death_callback@@Base+0x3940>
   2fffc:	add	x0, x0, x0, lsl #1
   30000:	ldr	x1, [x4]
   30004:	lsl	x0, x0, #3
   30008:	sub	x0, x0, #0x18
   3000c:	add	x0, x1, x0
   30010:	ldr	x1, [x0, #8]
   30014:	cmp	x19, x1
   30018:	b.eq	3052c <__sanitizer_set_death_callback@@Base+0x3e44>  // b.none
   3001c:	add	x2, x1, #0x1
   30020:	cmp	x19, x2
   30024:	b.eq	3052c <__sanitizer_set_death_callback@@Base+0x3e44>  // b.none
   30028:	ldr	x2, [sp, #128]
   3002c:	mov	x3, x28
   30030:	ldr	x0, [sp, #152]
   30034:	mov	x1, #0x18                  	// #24
   30038:	ldr	x21, [sp, #208]
   3003c:	mov	x4, x21
   30040:	bl	6840 <__asan_backtrace_vector_grow@plt>
   30044:	cbz	x0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   30048:	ldr	x1, [x21, #24]
   3004c:	stp	x19, x20, [x0]
   30050:	ldr	x3, [sp, #120]
   30054:	str	x3, [x0, #16]
   30058:	add	x0, x1, #0x1
   3005c:	str	x0, [x21, #24]
   30060:	ldr	w0, [x25, #12]
   30064:	cbz	w0, 300f8 <__sanitizer_set_death_callback@@Base+0x3a10>
   30068:	add	x19, sp, #0x108
   3006c:	mov	x2, #0x20                  	// #32
   30070:	mov	w1, #0x0                   	// #0
   30074:	mov	x0, x19
   30078:	bl	6860 <__asan_internal_memset@plt>
   3007c:	ldr	x0, [sp, #464]
   30080:	stp	x0, x19, [sp]
   30084:	mov	x7, x28
   30088:	ldr	x6, [sp, #128]
   3008c:	mov	x4, x24
   30090:	ldr	x0, [sp, #152]
   30094:	mov	x2, x22
   30098:	ldr	x3, [sp, #184]
   3009c:	mov	x1, x27
   300a0:	ldr	x5, [sp, #216]
   300a4:	bl	2fe28 <__sanitizer_set_death_callback@@Base+0x3740>
   300a8:	cbz	w0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   300ac:	ldr	x0, [sp, #288]
   300b0:	cbz	x0, 300f8 <__sanitizer_set_death_callback@@Base+0x3a10>
   300b4:	ldr	x2, [sp, #128]
   300b8:	mov	x1, x19
   300bc:	ldr	x0, [sp, #152]
   300c0:	mov	x3, x28
   300c4:	bl	6910 <__asan_backtrace_vector_release@plt>
   300c8:	cbz	w0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   300cc:	ldr	x1, [sp, #288]
   300d0:	adrp	x3, 2e000 <__sanitizer_set_death_callback@@Base+0x1918>
   300d4:	ldr	x19, [sp, #264]
   300d8:	add	x3, x3, #0x6f0
   300dc:	mov	x2, #0x18                  	// #24
   300e0:	mov	x0, x19
   300e4:	bl	66b0 <__asan_backtrace_qsort@plt>
   300e8:	ldr	x1, [sp, #120]
   300ec:	ldr	x0, [sp, #288]
   300f0:	stp	x19, x0, [x1, #24]
   300f4:	nop
   300f8:	ldr	x0, [x24, #24]
   300fc:	cbnz	x0, 2fe88 <__sanitizer_set_death_callback@@Base+0x37a0>
   30100:	ldp	x19, x20, [sp, #32]
   30104:	ldp	x21, x22, [sp, #48]
   30108:	ldp	x25, x26, [sp, #80]
   3010c:	ldp	x27, x28, [sp, #96]
   30110:	mov	w0, #0x1                   	// #1
   30114:	b	301bc <__sanitizer_set_death_callback@@Base+0x3ad4>
   30118:	ldr	x0, [x25, #24]
   3011c:	ldr	w0, [x0, x22]
   30120:	cmp	w0, #0x11
   30124:	b.ne	2ff4c <__sanitizer_set_death_callback@@Base+0x3864>  // b.any
   30128:	ldr	w0, [sp, #248]
   3012c:	cmp	w0, #0x1
   30130:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30134:	ldr	x0, [sp, #256]
   30138:	str	x0, [sp, #184]
   3013c:	cbz	w19, 2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   30140:	str	x0, [sp, #192]
   30144:	mov	w0, #0x1                   	// #1
   30148:	str	w0, [sp, #200]
   3014c:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   30150:	ldp	x1, x3, [sp, #120]
   30154:	mov	x4, x28
   30158:	ldr	x0, [sp, #152]
   3015c:	mov	x2, #0x28                  	// #40
   30160:	bl	6bc0 <__asan_backtrace_free@plt>
   30164:	ldr	w0, [x25, #12]
   30168:	cbz	w0, 300f8 <__sanitizer_set_death_callback@@Base+0x3a10>
   3016c:	ldr	x0, [sp, #464]
   30170:	str	x0, [sp]
   30174:	ldr	x0, [sp, #472]
   30178:	str	x0, [sp, #8]
   3017c:	ldr	x6, [sp, #128]
   30180:	mov	x7, x28
   30184:	ldr	x0, [sp, #152]
   30188:	mov	x4, x24
   3018c:	ldr	x3, [sp, #184]
   30190:	mov	x2, x22
   30194:	ldr	x5, [sp, #216]
   30198:	mov	x1, x27
   3019c:	bl	2fe28 <__sanitizer_set_death_callback@@Base+0x3740>
   301a0:	cbnz	w0, 300f8 <__sanitizer_set_death_callback@@Base+0x3a10>
   301a4:	nop
   301a8:	ldp	x19, x20, [sp, #32]
   301ac:	mov	w0, #0x0                   	// #0
   301b0:	ldp	x21, x22, [sp, #48]
   301b4:	ldp	x25, x26, [sp, #80]
   301b8:	ldp	x27, x28, [sp, #96]
   301bc:	ldp	x29, x30, [sp, #16]
   301c0:	ldp	x23, x24, [sp, #64]
   301c4:	add	sp, sp, #0x1d0
   301c8:	ret
   301cc:	cmp	w0, #0x3
   301d0:	b.ne	3025c <__sanitizer_set_death_callback@@Base+0x3b74>  // b.any
   301d4:	ldr	x0, [sp, #120]
   301d8:	ldr	x0, [x0]
   301dc:	cbnz	x0, 2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   301e0:	ldr	w0, [sp, #248]
   301e4:	cmp	w0, #0x4
   301e8:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   301ec:	ldr	x0, [sp, #256]
   301f0:	b	3034c <__sanitizer_set_death_callback@@Base+0x3c64>
   301f4:	cmp	w0, #0x59
   301f8:	b.eq	30298 <__sanitizer_set_death_callback@@Base+0x3bb0>  // b.none
   301fc:	b.ls	30230 <__sanitizer_set_death_callback@@Base+0x3b48>  // b.plast
   30200:	cmp	w0, #0x6e
   30204:	b.eq	30210 <__sanitizer_set_death_callback@@Base+0x3b28>  // b.none
   30208:	cmp	w0, w20
   3020c:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30210:	ldr	w0, [sp, #248]
   30214:	cmp	w0, #0x4
   30218:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   3021c:	ldr	x1, [sp, #120]
   30220:	str	w19, [sp, #144]
   30224:	ldr	x0, [sp, #256]
   30228:	str	x0, [x1]
   3022c:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   30230:	cmp	w0, #0x58
   30234:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30238:	ldr	w0, [sp, #248]
   3023c:	cmp	w0, #0x2
   30240:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30244:	ldr	x0, [sp, #256]
   30248:	cbnz	x0, 30364 <__sanitizer_set_death_callback@@Base+0x3c7c>
   3024c:	ldr	x0, [sp, #120]
   30250:	ldr	x1, [sp, #232]
   30254:	str	x1, [x0, #8]
   30258:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   3025c:	cmp	w0, #0x11
   30260:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30264:	ldr	w0, [sp, #248]
   30268:	cmp	w0, #0x1
   3026c:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30270:	ldr	x0, [sp, #256]
   30274:	b	30140 <__sanitizer_set_death_callback@@Base+0x3a58>
   30278:	ldr	w0, [sp, #248]
   3027c:	cmp	w0, #0x2
   30280:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   30284:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   30288:	ldr	x0, [sp, #256]
   3028c:	str	w19, [sp, #160]
   30290:	str	x0, [sp, #176]
   30294:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   30298:	ldr	w0, [sp, #248]
   3029c:	cmp	w0, #0x2
   302a0:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   302a4:	ldr	x1, [sp, #120]
   302a8:	ldr	x0, [sp, #256]
   302ac:	str	w0, [x1, #16]
   302b0:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   302b4:	ldr	w0, [sp, #248]
   302b8:	cmp	w0, #0x1
   302bc:	b.eq	302cc <__sanitizer_set_death_callback@@Base+0x3be4>  // b.none
   302c0:	cmp	w0, #0x2
   302c4:	b.ne	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>  // b.any
   302c8:	str	w19, [sp, #204]
   302cc:	ldr	x0, [sp, #256]
   302d0:	str	x0, [sp, #136]
   302d4:	str	w19, [sp, #172]
   302d8:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   302dc:	cmp	w0, #0x1d
   302e0:	ldp	x0, x1, [sp, #464]
   302e4:	csel	x0, x0, x1, ne  // ne = any
   302e8:	str	x0, [sp, #208]
   302ec:	ldr	x2, [sp, #128]
   302f0:	mov	x3, x28
   302f4:	ldr	x0, [sp, #152]
   302f8:	mov	x1, #0x28                  	// #40
   302fc:	bl	68c0 <__asan_backtrace_alloc@plt>
   30300:	str	x0, [sp, #120]
   30304:	cbz	x0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   30308:	mov	x2, #0x28                  	// #40
   3030c:	mov	w1, #0x0                   	// #0
   30310:	mov	w19, #0x1                   	// #1
   30314:	bl	6860 <__asan_internal_memset@plt>
   30318:	b	2fedc <__sanitizer_set_death_callback@@Base+0x37f4>
   3031c:	ldr	w0, [x1, #4]
   30320:	cmp	w0, #0x20
   30324:	b.eq	30584 <__sanitizer_set_death_callback@@Base+0x3e9c>  // b.none
   30328:	ldr	x4, [sp, #128]
   3032c:	mov	x5, x28
   30330:	ldr	x3, [sp, #224]
   30334:	mov	x2, x26
   30338:	mov	x1, x21
   3033c:	mov	x0, x27
   30340:	bl	2f7e0 <__sanitizer_set_death_callback@@Base+0x30f8>
   30344:	str	wzr, [sp, #144]
   30348:	cbz	x0, 2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   3034c:	ldr	x1, [sp, #120]
   30350:	str	x0, [x1]
   30354:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   30358:	ldr	x0, [sp, #472]
   3035c:	str	x0, [sp, #208]
   30360:	b	302ec <__sanitizer_set_death_callback@@Base+0x3c04>
   30364:	ldr	x1, [sp, #216]
   30368:	sub	x2, x0, #0x1
   3036c:	ldr	x1, [x1, #48]
   30370:	cmp	x2, x1
   30374:	b.cs	305a8 <__sanitizer_set_death_callback@@Base+0x3ec0>  // b.hs, b.nlast
   30378:	ldr	x1, [sp, #216]
   3037c:	ldr	x1, [x1, #56]
   30380:	add	x0, x1, x0, lsl #3
   30384:	ldr	x1, [sp, #120]
   30388:	ldur	x0, [x0, #-8]
   3038c:	str	x0, [x1, #8]
   30390:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   30394:	ldr	x0, [x27, #96]
   30398:	ldr	x1, [sp, #176]
   3039c:	cmp	x0, x1
   303a0:	b.ls	30568 <__sanitizer_set_death_callback@@Base+0x3e80>  // b.plast
   303a4:	ldr	x3, [x27, #88]
   303a8:	mov	x5, x1
   303ac:	sub	x1, x0, x1
   303b0:	str	x26, [sp, #160]
   303b4:	add	x0, x3, x5
   303b8:	stp	x0, x1, [sp, #280]
   303bc:	ldr	w4, [x27, #120]
   303c0:	ldr	x0, [sp, #128]
   303c4:	add	x19, sp, #0x108
   303c8:	ldr	x20, [sp, #184]
   303cc:	stp	x25, x24, [sp, #136]
   303d0:	mov	x25, x0
   303d4:	ldr	x26, [sp, #208]
   303d8:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   303dc:	mov	x21, #0xffff                	// #65535
   303e0:	add	x2, x2, #0x7d8
   303e4:	stp	x2, x3, [sp, #264]
   303e8:	str	w4, [sp, #296]
   303ec:	str	x0, [sp, #304]
   303f0:	str	x28, [sp, #312]
   303f4:	str	wzr, [sp, #320]
   303f8:	ldr	w1, [x22, #48]
   303fc:	mov	x0, x19
   30400:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   30404:	mov	x23, x0
   30408:	ldr	w1, [x22, #48]
   3040c:	mov	x0, x19
   30410:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   30414:	orr	x1, x23, x0
   30418:	cbz	x1, 3058c <__sanitizer_set_death_callback@@Base+0x3ea4>
   3041c:	ldr	w1, [x22, #48]
   30420:	cmp	w1, #0x4
   30424:	b.eq	3051c <__sanitizer_set_death_callback@@Base+0x3e34>  // b.none
   30428:	b.gt	30458 <__sanitizer_set_death_callback@@Base+0x3d70>
   3042c:	cmp	w1, #0x1
   30430:	b.eq	30510 <__sanitizer_set_death_callback@@Base+0x3e28>  // b.none
   30434:	cmp	w1, #0x2
   30438:	b.ne	30470 <__sanitizer_set_death_callback@@Base+0x3d88>  // b.any
   3043c:	cmp	x23, x21
   30440:	cset	w1, eq  // eq = none
   30444:	cbz	w1, 30470 <__sanitizer_set_death_callback@@Base+0x3d88>
   30448:	mov	x20, x0
   3044c:	ldr	w0, [sp, #320]
   30450:	cbz	w0, 303f8 <__sanitizer_set_death_callback@@Base+0x3d10>
   30454:	b	301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   30458:	cmp	w1, #0x8
   3045c:	b.ne	30470 <__sanitizer_set_death_callback@@Base+0x3d88>  // b.any
   30460:	cmn	x23, #0x1
   30464:	cset	w1, eq  // eq = none
   30468:	cbnz	w1, 30448 <__sanitizer_set_death_callback@@Base+0x3d60>
   3046c:	nop
   30470:	ldr	x1, [x26, #24]
   30474:	add	x2, x23, x20
   30478:	ldr	x6, [x27, #16]
   3047c:	add	x0, x0, x20
   30480:	add	x24, x2, x6
   30484:	add	x23, x0, x6
   30488:	cbz	x1, 304b8 <__sanitizer_set_death_callback@@Base+0x3dd0>
   3048c:	add	x0, x1, x1, lsl #1
   30490:	ldr	x1, [x26]
   30494:	lsl	x0, x0, #3
   30498:	sub	x0, x0, #0x18
   3049c:	add	x0, x1, x0
   304a0:	ldr	x1, [x0, #8]
   304a4:	cmp	x24, x1
   304a8:	b.eq	304f0 <__sanitizer_set_death_callback@@Base+0x3e08>  // b.none
   304ac:	add	x2, x1, #0x1
   304b0:	cmp	x24, x2
   304b4:	b.eq	304f0 <__sanitizer_set_death_callback@@Base+0x3e08>  // b.none
   304b8:	ldr	x0, [sp, #152]
   304bc:	mov	x4, x26
   304c0:	mov	x3, x28
   304c4:	mov	x2, x25
   304c8:	mov	x1, #0x18                  	// #24
   304cc:	bl	6840 <__asan_backtrace_vector_grow@plt>
   304d0:	cbz	x0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   304d4:	ldr	x1, [x26, #24]
   304d8:	stp	x24, x23, [x0]
   304dc:	ldr	x2, [sp, #120]
   304e0:	str	x2, [x0, #16]
   304e4:	add	x0, x1, #0x1
   304e8:	str	x0, [x26, #24]
   304ec:	b	3044c <__sanitizer_set_death_callback@@Base+0x3d64>
   304f0:	ldr	x2, [x0, #16]
   304f4:	ldr	x3, [sp, #120]
   304f8:	cmp	x3, x2
   304fc:	b.ne	304b8 <__sanitizer_set_death_callback@@Base+0x3dd0>  // b.any
   30500:	cmp	x23, x1
   30504:	b.ls	3044c <__sanitizer_set_death_callback@@Base+0x3d64>  // b.plast
   30508:	str	x23, [x0, #8]
   3050c:	b	3044c <__sanitizer_set_death_callback@@Base+0x3d64>
   30510:	cmp	x23, #0xff
   30514:	cset	w1, eq  // eq = none
   30518:	b	30444 <__sanitizer_set_death_callback@@Base+0x3d5c>
   3051c:	mov	x1, #0xffffffff            	// #4294967295
   30520:	cmp	x23, x1
   30524:	cset	w1, eq  // eq = none
   30528:	b	30444 <__sanitizer_set_death_callback@@Base+0x3d5c>
   3052c:	ldr	x2, [x0, #16]
   30530:	ldr	x3, [sp, #120]
   30534:	cmp	x3, x2
   30538:	b.ne	30028 <__sanitizer_set_death_callback@@Base+0x3940>  // b.any
   3053c:	cmp	x20, x1
   30540:	b.ls	30060 <__sanitizer_set_death_callback@@Base+0x3978>  // b.plast
   30544:	str	x20, [x0, #8]
   30548:	b	30060 <__sanitizer_set_death_callback@@Base+0x3978>
   3054c:	str	wzr, [sp, #160]
   30550:	str	wzr, [sp, #172]
   30554:	str	xzr, [sp, #176]
   30558:	str	xzr, [sp, #192]
   3055c:	stp	wzr, wzr, [sp, #200]
   30560:	cbz	w19, 30164 <__sanitizer_set_death_callback@@Base+0x3a7c>
   30564:	b	2ffa8 <__sanitizer_set_death_callback@@Base+0x38c0>
   30568:	ldr	x3, [sp, #128]
   3056c:	mov	x0, x28
   30570:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30574:	mov	w2, #0x0                   	// #0
   30578:	add	x1, x1, #0x820
   3057c:	blr	x3
   30580:	b	301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   30584:	str	wzr, [sp, #144]
   30588:	b	2ff90 <__sanitizer_set_death_callback@@Base+0x38a8>
   3058c:	ldr	w0, [sp, #320]
   30590:	ldp	x25, x24, [sp, #136]
   30594:	ldr	x26, [sp, #160]
   30598:	cbnz	w0, 301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   3059c:	ldr	w0, [x25, #12]
   305a0:	cbnz	w0, 3006c <__sanitizer_set_death_callback@@Base+0x3984>
   305a4:	b	300f8 <__sanitizer_set_death_callback@@Base+0x3a10>
   305a8:	ldp	x4, x1, [x24]
   305ac:	add	x19, sp, #0x108
   305b0:	ldr	x5, [x24, #16]
   305b4:	mov	x0, x19
   305b8:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   305bc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   305c0:	add	x3, x3, #0x7e8
   305c4:	add	x2, x2, #0x670
   305c8:	sub	w5, w5, w1
   305cc:	mov	x1, #0xc8                  	// #200
   305d0:	bl	6a20 <snprintf@plt>
   305d4:	ldp	x3, x0, [x24, #40]
   305d8:	mov	x1, x19
   305dc:	mov	w2, #0x0                   	// #0
   305e0:	blr	x3
   305e4:	b	301a8 <__sanitizer_set_death_callback@@Base+0x3ac0>
   305e8:	sub	sp, sp, #0x2a0
   305ec:	stp	x29, x30, [sp, #16]
   305f0:	add	x29, sp, #0x10
   305f4:	stp	x27, x28, [sp, #96]
   305f8:	mov	x28, x1
   305fc:	mov	w1, #0x1                   	// #1
   30600:	stp	x21, x22, [sp, #48]
   30604:	mov	x21, x6
   30608:	ldr	x6, [x28, #32]
   3060c:	str	w1, [x21]
   30610:	str	x3, [sp, #112]
   30614:	cbz	x6, 308bc <__sanitizer_set_death_callback@@Base+0x41d4>
   30618:	mov	x22, x4
   3061c:	stp	x19, x20, [sp, #32]
   30620:	mov	x20, x5
   30624:	ldr	x4, [x28, #24]
   30628:	mov	x19, x0
   3062c:	mov	x5, x6
   30630:	stp	x25, x26, [sp, #80]
   30634:	mov	x26, x2
   30638:	mov	x3, #0x0                   	// #0
   3063c:	stp	x23, x24, [sp, #64]
   30640:	add	x0, x5, x3
   30644:	cmp	x5, x3
   30648:	and	x1, x0, #0xfffffffffffffffe
   3064c:	b.ls	308b0 <__sanitizer_set_death_callback@@Base+0x41c8>  // b.plast
   30650:	lsr	x0, x0, #1
   30654:	add	x1, x1, x0
   30658:	lsl	x2, x1, #3
   3065c:	ldr	x1, [x4, x1, lsl #3]
   30660:	add	x27, x4, x2
   30664:	cmp	x1, x26
   30668:	b.hi	3089c <__sanitizer_set_death_callback@@Base+0x41b4>  // b.pmore
   3066c:	ldr	x1, [x27, #8]
   30670:	add	x3, x0, #0x1
   30674:	cmp	x1, x26
   30678:	b.ls	30640 <__sanitizer_set_death_callback@@Base+0x3f58>  // b.plast
   3067c:	asr	x2, x2, #3
   30680:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   30684:	movk	x0, #0xaaab
   30688:	mov	x1, x0
   3068c:	mul	x2, x2, x0
   30690:	add	x2, x2, #0x1
   30694:	cmp	x6, x2
   30698:	b.hi	306c8 <__sanitizer_set_death_callback@@Base+0x3fe0>  // b.pmore
   3069c:	b	306d4 <__sanitizer_set_death_callback@@Base+0x3fec>
   306a0:	ldr	x0, [x27, #32]
   306a4:	cmp	x0, x26
   306a8:	b.ls	306d4 <__sanitizer_set_death_callback@@Base+0x3fec>  // b.plast
   306ac:	add	x27, x27, #0x18
   306b0:	sub	x0, x27, x4
   306b4:	asr	x0, x0, #3
   306b8:	mul	x0, x0, x1
   306bc:	add	x0, x0, #0x1
   306c0:	cmp	x6, x0
   306c4:	b.ls	306d4 <__sanitizer_set_death_callback@@Base+0x3fec>  // b.plast
   306c8:	ldr	x0, [x27, #24]
   306cc:	cmp	x0, x26
   306d0:	b.ls	306a0 <__sanitizer_set_death_callback@@Base+0x3fb8>  // b.plast
   306d4:	ldr	x23, [x27, #16]
   306d8:	cmp	x4, x27
   306dc:	ldr	w1, [x19, #8]
   306e0:	ldr	x24, [x23, #104]
   306e4:	b.cc	3070c <__sanitizer_set_death_callback@@Base+0x4024>  // b.lo, b.ul, b.last
   306e8:	b	30740 <__sanitizer_set_death_callback@@Base+0x4058>
   306ec:	cmn	x24, #0x1
   306f0:	b.ne	30740 <__sanitizer_set_death_callback@@Base+0x4058>  // b.any
   306f4:	ldur	x23, [x27, #-8]
   306f8:	sub	x27, x27, #0x18
   306fc:	ldr	x0, [x28, #24]
   30700:	ldr	x24, [x23, #104]
   30704:	cmp	x0, x27
   30708:	b.cs	30740 <__sanitizer_set_death_callback@@Base+0x4058>  // b.hs, b.nlast
   3070c:	ldur	x0, [x27, #-24]
   30710:	cmp	x0, x26
   30714:	b.hi	30740 <__sanitizer_set_death_callback@@Base+0x4058>  // b.pmore
   30718:	ldur	x0, [x27, #-16]
   3071c:	cmp	x0, x26
   30720:	b.ls	30740 <__sanitizer_set_death_callback@@Base+0x4058>  // b.plast
   30724:	cbz	w1, 306ec <__sanitizer_set_death_callback@@Base+0x4004>
   30728:	add	x0, x23, #0x68
   3072c:	ldar	x24, [x0]
   30730:	ldr	w1, [x19, #8]
   30734:	cmn	x24, #0x1
   30738:	b.eq	306f4 <__sanitizer_set_death_callback@@Base+0x400c>  // b.none
   3073c:	nop
   30740:	cbnz	w1, 30938 <__sanitizer_set_death_callback@@Base+0x4250>
   30744:	cbz	x24, 30944 <__sanitizer_set_death_callback@@Base+0x425c>
   30748:	cmn	x24, #0x1
   3074c:	b.eq	30a44 <__sanitizer_set_death_callback@@Base+0x435c>  // b.none
   30750:	ldr	x7, [x27, #16]
   30754:	mov	x2, #0x0                   	// #0
   30758:	ldr	x3, [x7, #112]
   3075c:	add	x0, x2, x3
   30760:	cmp	x2, x3
   30764:	and	x1, x0, #0xfffffffffffffffe
   30768:	b.cs	308ec <__sanitizer_set_death_callback@@Base+0x4204>  // b.hs, b.nlast
   3076c:	lsr	x0, x0, #1
   30770:	add	x1, x1, x0
   30774:	add	x4, x24, x1, lsl #3
   30778:	ldr	x1, [x24, x1, lsl #3]
   3077c:	cmp	x1, x26
   30780:	b.hi	308d8 <__sanitizer_set_death_callback@@Base+0x41f0>  // b.pmore
   30784:	ldr	x1, [x4, #24]
   30788:	add	x2, x0, #0x1
   3078c:	cmp	x1, x26
   30790:	b.ls	3075c <__sanitizer_set_death_callback@@Base+0x4074>  // b.plast
   30794:	ldr	x6, [x7, #128]
   30798:	ldr	w10, [x4, #16]
   3079c:	ldr	x8, [x4, #8]
   307a0:	cbz	x6, 30920 <__sanitizer_set_death_callback@@Base+0x4238>
   307a4:	ldr	x4, [x7, #120]
   307a8:	mov	x5, x6
   307ac:	mov	x3, #0x0                   	// #0
   307b0:	add	x0, x5, x3
   307b4:	cmp	x5, x3
   307b8:	and	x1, x0, #0xfffffffffffffffe
   307bc:	b.ls	30920 <__sanitizer_set_death_callback@@Base+0x4238>  // b.plast
   307c0:	lsr	x0, x0, #1
   307c4:	add	x1, x1, x0
   307c8:	lsl	x2, x1, #3
   307cc:	ldr	x7, [x4, x1, lsl #3]
   307d0:	add	x1, x4, x2
   307d4:	cmp	x7, x26
   307d8:	b.hi	3090c <__sanitizer_set_death_callback@@Base+0x4224>  // b.pmore
   307dc:	ldr	x7, [x1, #8]
   307e0:	add	x3, x0, #0x1
   307e4:	cmp	x7, x26
   307e8:	b.ls	307b0 <__sanitizer_set_death_callback@@Base+0x40c8>  // b.plast
   307ec:	asr	x0, x2, #3
   307f0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   307f4:	movk	x2, #0xaaab
   307f8:	mov	x3, x2
   307fc:	mul	x0, x0, x2
   30800:	add	x0, x0, #0x1
   30804:	cmp	x6, x0
   30808:	b.hi	30838 <__sanitizer_set_death_callback@@Base+0x4150>  // b.pmore
   3080c:	b	30844 <__sanitizer_set_death_callback@@Base+0x415c>
   30810:	ldr	x0, [x1, #32]
   30814:	cmp	x0, x26
   30818:	b.ls	30844 <__sanitizer_set_death_callback@@Base+0x415c>  // b.plast
   3081c:	add	x1, x1, #0x18
   30820:	sub	x0, x1, x4
   30824:	asr	x0, x0, #3
   30828:	mul	x0, x0, x3
   3082c:	add	x0, x0, #0x1
   30830:	cmp	x6, x0
   30834:	b.ls	30844 <__sanitizer_set_death_callback@@Base+0x415c>  // b.plast
   30838:	ldr	x0, [x1, #24]
   3083c:	cmp	x0, x26
   30840:	b.ls	30810 <__sanitizer_set_death_callback@@Base+0x4128>  // b.plast
   30844:	ldr	x19, [x1, #16]
   30848:	add	x6, sp, #0x198
   3084c:	ldr	x21, [sp, #112]
   30850:	add	x5, sp, #0x1d8
   30854:	ldp	x1, x2, [x19, #24]
   30858:	mov	x4, x20
   3085c:	mov	x0, x26
   30860:	mov	x3, x21
   30864:	str	w10, [sp, #408]
   30868:	str	x8, [sp, #472]
   3086c:	bl	2e498 <__sanitizer_set_death_callback@@Base+0x1db0>
   30870:	cbnz	w0, 30bc0 <__sanitizer_set_death_callback@@Base+0x44d8>
   30874:	ldr	w3, [sp, #408]
   30878:	mov	x1, x26
   3087c:	ldr	x4, [x19]
   30880:	mov	x0, x20
   30884:	ldr	x2, [sp, #472]
   30888:	blr	x21
   3088c:	ldp	x19, x20, [sp, #32]
   30890:	ldp	x23, x24, [sp, #64]
   30894:	ldp	x25, x26, [sp, #80]
   30898:	b	308c4 <__sanitizer_set_death_callback@@Base+0x41dc>
   3089c:	mov	x5, x0
   308a0:	add	x0, x5, x3
   308a4:	cmp	x5, x3
   308a8:	and	x1, x0, #0xfffffffffffffffe
   308ac:	b.hi	30650 <__sanitizer_set_death_callback@@Base+0x3f68>  // b.pmore
   308b0:	ldp	x19, x20, [sp, #32]
   308b4:	ldp	x23, x24, [sp, #64]
   308b8:	ldp	x25, x26, [sp, #80]
   308bc:	mov	w0, #0x0                   	// #0
   308c0:	str	wzr, [x21]
   308c4:	ldp	x29, x30, [sp, #16]
   308c8:	ldp	x21, x22, [sp, #48]
   308cc:	ldp	x27, x28, [sp, #96]
   308d0:	add	sp, sp, #0x2a0
   308d4:	ret
   308d8:	mov	x3, x0
   308dc:	add	x0, x2, x3
   308e0:	cmp	x2, x3
   308e4:	and	x1, x0, #0xfffffffffffffffe
   308e8:	b.cc	3076c <__sanitizer_set_death_callback@@Base+0x4084>  // b.lo, b.ul, b.last
   308ec:	ldr	x24, [x7, #80]
   308f0:	cbz	x24, 30a80 <__sanitizer_set_death_callback@@Base+0x4398>
   308f4:	mov	x2, x24
   308f8:	mov	x1, x26
   308fc:	mov	x0, x20
   30900:	mov	x4, #0x0                   	// #0
   30904:	mov	w3, #0x0                   	// #0
   30908:	b	30a58 <__sanitizer_set_death_callback@@Base+0x4370>
   3090c:	mov	x5, x0
   30910:	add	x0, x5, x3
   30914:	cmp	x5, x3
   30918:	and	x1, x0, #0xfffffffffffffffe
   3091c:	b.hi	307c0 <__sanitizer_set_death_callback@@Base+0x40d8>  // b.pmore
   30920:	mov	w3, w10
   30924:	mov	x2, x8
   30928:	mov	x1, x26
   3092c:	mov	x0, x20
   30930:	mov	x4, #0x0                   	// #0
   30934:	b	30a58 <__sanitizer_set_death_callback@@Base+0x4370>
   30938:	add	x0, x23, #0x68
   3093c:	ldar	x24, [x0]
   30940:	cbnz	x24, 30748 <__sanitizer_set_death_callback@@Base+0x4060>
   30944:	add	x3, sp, #0x118
   30948:	add	x0, sp, #0xf8
   3094c:	ldr	x24, [x27, #16]
   30950:	mov	x25, x3
   30954:	mov	x2, #0x18                  	// #24
   30958:	mov	w1, #0x0                   	// #0
   3095c:	stp	x0, x24, [sp, #120]
   30960:	str	x3, [sp, #144]
   30964:	bl	6860 <__asan_internal_memset@plt>
   30968:	mov	w1, #0x0                   	// #0
   3096c:	mov	x0, x25
   30970:	mov	x2, #0x40                  	// #64
   30974:	str	xzr, [sp, #272]
   30978:	bl	6860 <__asan_internal_memset@plt>
   3097c:	ldr	x0, [x24, #56]
   30980:	ldr	x1, [x28, #80]
   30984:	cmp	x0, x1
   30988:	b.cc	30b14 <__sanitizer_set_death_callback@@Base+0x442c>  // b.lo, b.ul, b.last
   3098c:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30990:	mov	x0, x20
   30994:	add	x1, x1, #0x848
   30998:	mov	w2, #0x0                   	// #0
   3099c:	blr	x22
   309a0:	ldp	x5, x4, [sp, #256]
   309a4:	mov	x2, x22
   309a8:	ldr	x1, [sp, #120]
   309ac:	mov	x3, x20
   309b0:	mov	x0, x19
   309b4:	add	x4, x4, x5
   309b8:	stp	xzr, x4, [sp, #256]
   309bc:	bl	6910 <__asan_backtrace_vector_release@plt>
   309c0:	ldr	x2, [sp, #312]
   309c4:	cbnz	x2, 30bf8 <__sanitizer_set_death_callback@@Base+0x4510>
   309c8:	ldp	x2, x1, [sp, #328]
   309cc:	mov	x4, x20
   309d0:	mov	x3, x22
   309d4:	mov	x0, x19
   309d8:	str	xzr, [sp, #120]
   309dc:	mov	x25, #0x0                   	// #0
   309e0:	mov	x24, #0xffffffffffffffff    	// #-1
   309e4:	lsl	x2, x2, #3
   309e8:	bl	6bc0 <__asan_backtrace_free@plt>
   309ec:	mov	x5, #0x0                   	// #0
   309f0:	mov	w1, #0x0                   	// #0
   309f4:	ldr	w0, [x19, #8]
   309f8:	cbnz	w0, 30bd0 <__sanitizer_set_death_callback@@Base+0x44e8>
   309fc:	ldr	x0, [sp, #120]
   30a00:	stp	x24, x0, [x23, #104]
   30a04:	stp	x25, x5, [x23, #120]
   30a08:	cmn	x24, #0x1
   30a0c:	b.ne	30750 <__sanitizer_set_death_callback@@Base+0x4068>  // b.any
   30a10:	cbz	w1, 30a44 <__sanitizer_set_death_callback@@Base+0x435c>
   30a14:	ldr	x3, [sp, #112]
   30a18:	mov	x5, x20
   30a1c:	mov	x2, x26
   30a20:	mov	x0, x19
   30a24:	mov	x6, x21
   30a28:	mov	x4, x22
   30a2c:	mov	x1, x28
   30a30:	bl	305e8 <__sanitizer_set_death_callback@@Base+0x3f00>
   30a34:	ldp	x19, x20, [sp, #32]
   30a38:	ldp	x23, x24, [sp, #64]
   30a3c:	ldp	x25, x26, [sp, #80]
   30a40:	b	308c4 <__sanitizer_set_death_callback@@Base+0x41dc>
   30a44:	mov	x1, x26
   30a48:	mov	x0, x20
   30a4c:	mov	x4, #0x0                   	// #0
   30a50:	mov	w3, #0x0                   	// #0
   30a54:	mov	x2, #0x0                   	// #0
   30a58:	ldr	x5, [sp, #112]
   30a5c:	blr	x5
   30a60:	ldp	x29, x30, [sp, #16]
   30a64:	ldp	x19, x20, [sp, #32]
   30a68:	ldp	x21, x22, [sp, #48]
   30a6c:	ldp	x23, x24, [sp, #64]
   30a70:	ldp	x25, x26, [sp, #80]
   30a74:	ldp	x27, x28, [sp, #96]
   30a78:	add	sp, sp, #0x2a0
   30a7c:	ret
   30a80:	ldr	x24, [x7, #64]
   30a84:	cbz	x24, 30b0c <__sanitizer_set_death_callback@@Base+0x4424>
   30a88:	ldrb	w0, [x24]
   30a8c:	cmp	w0, #0x2f
   30a90:	b.eq	30b0c <__sanitizer_set_death_callback@@Base+0x4424>  // b.none
   30a94:	ldr	x0, [x7, #72]
   30a98:	cbz	x0, 30b0c <__sanitizer_set_death_callback@@Base+0x4424>
   30a9c:	mov	x0, x24
   30aa0:	bl	67e0 <__asan_internal_strlen@plt>
   30aa4:	ldr	x1, [x27, #16]
   30aa8:	mov	x25, x0
   30aac:	ldr	x23, [x1, #72]
   30ab0:	mov	x0, x23
   30ab4:	bl	67e0 <__asan_internal_strlen@plt>
   30ab8:	mov	x2, x22
   30abc:	mov	x22, x0
   30ac0:	add	x1, x25, x22
   30ac4:	mov	x0, x19
   30ac8:	mov	x3, x20
   30acc:	add	x1, x1, #0x2
   30ad0:	bl	68c0 <__asan_backtrace_alloc@plt>
   30ad4:	mov	x19, x0
   30ad8:	cbz	x0, 308b0 <__sanitizer_set_death_callback@@Base+0x41c8>
   30adc:	mov	x1, x23
   30ae0:	mov	x2, x22
   30ae4:	bl	67d0 <__asan_internal_memcpy@plt>
   30ae8:	mov	w3, #0x2f                  	// #47
   30aec:	strb	w3, [x19, x22]
   30af0:	add	x0, x22, #0x1
   30af4:	mov	x1, x24
   30af8:	add	x2, x25, #0x1
   30afc:	add	x0, x19, x0
   30b00:	bl	67d0 <__asan_internal_memcpy@plt>
   30b04:	mov	x24, x19
   30b08:	ldr	x7, [x27, #16]
   30b0c:	str	x24, [x7, #80]
   30b10:	b	308f4 <__sanitizer_set_death_callback@@Base+0x420c>
   30b14:	ldr	x4, [x28, #72]
   30b18:	sub	x2, x1, x0
   30b1c:	ldr	w5, [x28, #120]
   30b20:	add	x6, sp, #0x158
   30b24:	add	x1, x4, x0
   30b28:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30b2c:	add	x3, x3, #0x868
   30b30:	mov	x0, x6
   30b34:	str	x6, [sp, #136]
   30b38:	stp	x3, x4, [sp, #344]
   30b3c:	stp	x1, x2, [sp, #360]
   30b40:	str	w5, [sp, #376]
   30b44:	stp	x22, x20, [sp, #384]
   30b48:	str	wzr, [sp, #400]
   30b4c:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   30b50:	mov	x1, #0xffffffff            	// #4294967295
   30b54:	mov	w2, w0
   30b58:	cmp	x1, w0, uxtw
   30b5c:	b.eq	30fe0 <__sanitizer_set_death_callback@@Base+0x48f8>  // b.none
   30b60:	ldr	x0, [sp, #136]
   30b64:	str	x2, [sp, #368]
   30b68:	bl	2e9f8 <__sanitizer_set_death_callback@@Base+0x2310>
   30b6c:	and	w0, w0, #0xffff
   30b70:	str	w0, [sp, #280]
   30b74:	sub	w0, w0, #0x2
   30b78:	cmp	w0, #0x2
   30b7c:	b.ls	30c14 <__sanitizer_set_death_callback@@Base+0x452c>  // b.plast
   30b80:	ldp	x4, x1, [sp, #344]
   30b84:	add	x24, sp, #0x1d8
   30b88:	ldr	x5, [sp, #360]
   30b8c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30b90:	mov	x0, x24
   30b94:	add	x3, x3, #0x878
   30b98:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30b9c:	sub	w5, w5, w1
   30ba0:	add	x2, x2, #0x670
   30ba4:	mov	x1, #0xc8                  	// #200
   30ba8:	bl	6a20 <snprintf@plt>
   30bac:	ldp	x3, x0, [sp, #384]
   30bb0:	mov	x1, x24
   30bb4:	mov	w2, #0x0                   	// #0
   30bb8:	blr	x3
   30bbc:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   30bc0:	ldp	x19, x20, [sp, #32]
   30bc4:	ldp	x23, x24, [sp, #64]
   30bc8:	ldp	x25, x26, [sp, #80]
   30bcc:	b	308c4 <__sanitizer_set_death_callback@@Base+0x41dc>
   30bd0:	add	x0, x23, #0x70
   30bd4:	ldr	x2, [sp, #120]
   30bd8:	stlr	x2, [x0]
   30bdc:	add	x0, x23, #0x78
   30be0:	stlr	x25, [x0]
   30be4:	add	x0, x23, #0x80
   30be8:	stlr	x5, [x0]
   30bec:	add	x11, x23, #0x68
   30bf0:	stlr	x24, [x11]
   30bf4:	b	30a08 <__sanitizer_set_death_callback@@Base+0x4320>
   30bf8:	ldr	x1, [sp, #320]
   30bfc:	lsl	x2, x2, #3
   30c00:	mov	x4, x20
   30c04:	mov	x3, x22
   30c08:	mov	x0, x19
   30c0c:	bl	6bc0 <__asan_backtrace_free@plt>
   30c10:	b	309c8 <__sanitizer_set_death_callback@@Base+0x42e0>
   30c14:	ldr	x0, [sp, #136]
   30c18:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   30c1c:	mov	w0, w0
   30c20:	add	x1, sp, #0x200
   30c24:	add	x4, sp, #0x280
   30c28:	ldp	x2, x3, [x1, #-152]
   30c2c:	add	x1, sp, #0x280
   30c30:	stp	x2, x3, [x1, #-216]
   30c34:	add	x1, sp, #0x200
   30c38:	str	x0, [sp, #432]
   30c3c:	ldp	x2, x3, [x1, #-168]
   30c40:	add	x1, sp, #0x280
   30c44:	stp	x2, x3, [x1, #-232]
   30c48:	add	x2, sp, #0x200
   30c4c:	ldr	x1, [sp, #368]
   30c50:	ldp	x2, x3, [x2, #-136]
   30c54:	stp	x2, x3, [x4, #-200]
   30c58:	cmp	x0, x1
   30c5c:	ldp	x2, x3, [x4, #-248]
   30c60:	stp	x2, x3, [x4, #-184]
   30c64:	b.ls	30cb8 <__sanitizer_set_death_callback@@Base+0x45d0>  // b.plast
   30c68:	ldr	w0, [sp, #400]
   30c6c:	cbnz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   30c70:	ldp	x4, x1, [sp, #344]
   30c74:	add	x24, sp, #0x1d8
   30c78:	ldr	x5, [sp, #360]
   30c7c:	mov	x0, x24
   30c80:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30c84:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30c88:	add	x3, x3, #0x660
   30c8c:	add	x2, x2, #0x670
   30c90:	sub	w5, w5, w1
   30c94:	mov	x1, #0xc8                  	// #200
   30c98:	bl	6a20 <snprintf@plt>
   30c9c:	ldp	x3, x0, [sp, #384]
   30ca0:	mov	x1, x24
   30ca4:	mov	w2, #0x0                   	// #0
   30ca8:	blr	x3
   30cac:	mov	w0, #0x1                   	// #1
   30cb0:	str	w0, [sp, #400]
   30cb4:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   30cb8:	ldr	x5, [sp, #360]
   30cbc:	sub	x1, x1, x0
   30cc0:	str	x1, [sp, #368]
   30cc4:	add	x1, x5, x0
   30cc8:	str	x1, [sp, #360]
   30ccc:	cbnz	x0, 30f40 <__sanitizer_set_death_callback@@Base+0x4858>
   30cd0:	ldr	w0, [sp, #464]
   30cd4:	cbz	w0, 3112c <__sanitizer_set_death_callback@@Base+0x4a44>
   30cd8:	ldr	w2, [sp, #280]
   30cdc:	str	wzr, [sp, #284]
   30ce0:	cmp	w2, #0x3
   30ce4:	ldr	x1, [sp, #424]
   30ce8:	b.gt	3111c <__sanitizer_set_death_callback@@Base+0x4a34>
   30cec:	mov	w2, #0x1                   	// #1
   30cf0:	str	w2, [sp, #288]
   30cf4:	cbz	w0, 30d50 <__sanitizer_set_death_callback@@Base+0x4668>
   30cf8:	str	wzr, [sp, #292]
   30cfc:	cbz	w0, 310cc <__sanitizer_set_death_callback@@Base+0x49e4>
   30d00:	str	wzr, [sp, #296]
   30d04:	cbz	w0, 3107c <__sanitizer_set_death_callback@@Base+0x4994>
   30d08:	str	wzr, [sp, #300]
   30d0c:	str	x1, [sp, #304]
   30d10:	cbnz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   30d14:	ldp	x4, x5, [sp, #408]
   30d18:	add	x24, sp, #0x1d8
   30d1c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30d20:	mov	x0, x24
   30d24:	add	x3, x3, #0x660
   30d28:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30d2c:	sub	w5, w1, w5
   30d30:	add	x2, x2, #0x670
   30d34:	mov	x1, #0xc8                  	// #200
   30d38:	bl	6a20 <snprintf@plt>
   30d3c:	ldp	x3, x0, [sp, #448]
   30d40:	mov	x1, x24
   30d44:	mov	w2, #0x0                   	// #0
   30d48:	blr	x3
   30d4c:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   30d50:	ldp	x4, x5, [sp, #408]
   30d54:	add	x24, sp, #0x1d8
   30d58:	mov	x0, x24
   30d5c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30d60:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30d64:	add	x3, x3, #0x660
   30d68:	add	x2, x2, #0x670
   30d6c:	sub	w5, w1, w5
   30d70:	mov	x1, #0xc8                  	// #200
   30d74:	bl	6a20 <snprintf@plt>
   30d78:	ldp	x3, x0, [sp, #448]
   30d7c:	mov	w2, #0x0                   	// #0
   30d80:	mov	x1, x24
   30d84:	blr	x3
   30d88:	ldp	x5, x0, [sp, #424]
   30d8c:	mov	w2, #0x1                   	// #1
   30d90:	str	w2, [sp, #464]
   30d94:	cbz	x0, 31c00 <__sanitizer_set_death_callback@@Base+0x5518>
   30d98:	sub	x0, x0, #0x1
   30d9c:	add	x1, x5, #0x1
   30da0:	stp	x1, x0, [sp, #424]
   30da4:	ldrb	w24, [x5]
   30da8:	eor	w24, w24, #0xffffff80
   30dac:	sub	w24, w24, #0x80
   30db0:	sxtb	w24, w24
   30db4:	str	w24, [sp, #292]
   30db8:	cbz	x0, 31074 <__sanitizer_set_death_callback@@Base+0x498c>
   30dbc:	add	x2, x1, #0x1
   30dc0:	sub	x0, x0, #0x1
   30dc4:	stp	x2, x0, [sp, #424]
   30dc8:	ldrb	w1, [x1]
   30dcc:	str	w1, [sp, #296]
   30dd0:	cbz	x0, 31180 <__sanitizer_set_death_callback@@Base+0x4a98>
   30dd4:	sub	x25, x0, #0x1
   30dd8:	add	x1, x2, #0x1
   30ddc:	stp	x1, x25, [sp, #424]
   30de0:	ldrb	w2, [x2]
   30de4:	sub	w0, w2, #0x1
   30de8:	str	w2, [sp, #300]
   30dec:	cmp	x0, x25
   30df0:	str	x1, [sp, #304]
   30df4:	b.hi	31178 <__sanitizer_set_death_callback@@Base+0x4a90>  // b.pmore
   30df8:	add	x24, x1, x0
   30dfc:	sub	x0, x25, x0
   30e00:	str	xzr, [sp, #312]
   30e04:	add	x25, x1, x25
   30e08:	stp	x24, x0, [sp, #424]
   30e0c:	cmp	x24, x25
   30e10:	mov	x3, #0x0                   	// #0
   30e14:	b.cc	30e3c <__sanitizer_set_death_callback@@Base+0x4754>  // b.lo, b.ul, b.last
   30e18:	b	31c20 <__sanitizer_set_death_callback@@Base+0x5538>
   30e1c:	bl	6b50 <__asan_internal_strnlen@plt>
   30e20:	add	x0, x0, #0x1
   30e24:	ldr	x3, [sp, #312]
   30e28:	add	x24, x24, x0
   30e2c:	cmp	x25, x24
   30e30:	add	x3, x3, #0x1
   30e34:	str	x3, [sp, #312]
   30e38:	b.ls	30e4c <__sanitizer_set_death_callback@@Base+0x4764>  // b.plast
   30e3c:	ldrb	w2, [x24]
   30e40:	sub	x1, x25, x24
   30e44:	mov	x0, x24
   30e48:	cbnz	w2, 30e1c <__sanitizer_set_death_callback@@Base+0x4734>
   30e4c:	str	xzr, [sp, #320]
   30e50:	cbnz	x3, 31058 <__sanitizer_set_death_callback@@Base+0x4970>
   30e54:	mov	x0, #0x0                   	// #0
   30e58:	ldr	x6, [sp, #424]
   30e5c:	mov	x25, #0x0                   	// #0
   30e60:	ldrb	w1, [x6]
   30e64:	cbz	w1, 31028 <__sanitizer_set_death_callback@@Base+0x4940>
   30e68:	add	x3, sp, #0x1d8
   30e6c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30e70:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30e74:	add	x2, x2, #0x660
   30e78:	add	x1, x1, #0x670
   30e7c:	stp	x19, x22, [sp, #152]
   30e80:	mov	x19, x6
   30e84:	mov	x22, x1
   30e88:	stp	x20, x21, [sp, #168]
   30e8c:	mov	x20, x25
   30e90:	mov	x21, x2
   30e94:	mov	x25, x3
   30e98:	b	30ec8 <__sanitizer_set_death_callback@@Base+0x47e0>
   30e9c:	ldr	w0, [sp, #464]
   30ea0:	mov	x19, #0x0                   	// #0
   30ea4:	cbz	w0, 30f04 <__sanitizer_set_death_callback@@Base+0x481c>
   30ea8:	ldr	x0, [sp, #320]
   30eac:	str	x19, [x24]
   30eb0:	ldr	x1, [x0, x20]
   30eb4:	add	x20, x20, #0x8
   30eb8:	cbz	x1, 30fd4 <__sanitizer_set_death_callback@@Base+0x48ec>
   30ebc:	ldr	x19, [sp, #424]
   30ec0:	ldrb	w1, [x19]
   30ec4:	cbz	w1, 3101c <__sanitizer_set_death_callback@@Base+0x4934>
   30ec8:	ldr	w1, [sp, #464]
   30ecc:	add	x24, x0, x20
   30ed0:	mov	x0, x19
   30ed4:	cbnz	w1, 30fd4 <__sanitizer_set_death_callback@@Base+0x48ec>
   30ed8:	ldr	x1, [sp, #432]
   30edc:	bl	6b50 <__asan_internal_strnlen@plt>
   30ee0:	add	x0, x0, #0x1
   30ee4:	ldr	x1, [sp, #432]
   30ee8:	cmp	x0, x1
   30eec:	b.hi	30e9c <__sanitizer_set_death_callback@@Base+0x47b4>  // b.pmore
   30ef0:	ldr	x2, [sp, #424]
   30ef4:	sub	x1, x1, x0
   30ef8:	add	x0, x2, x0
   30efc:	stp	x0, x1, [sp, #424]
   30f00:	b	30ea8 <__sanitizer_set_death_callback@@Base+0x47c0>
   30f04:	ldp	x4, x5, [sp, #408]
   30f08:	mov	x3, x21
   30f0c:	ldr	x8, [sp, #424]
   30f10:	mov	x2, x22
   30f14:	mov	x1, #0xc8                  	// #200
   30f18:	mov	x0, x25
   30f1c:	sub	w5, w8, w5
   30f20:	bl	6a20 <snprintf@plt>
   30f24:	ldp	x3, x0, [sp, #448]
   30f28:	mov	x1, x25
   30f2c:	mov	w2, #0x0                   	// #0
   30f30:	blr	x3
   30f34:	mov	w0, #0x1                   	// #1
   30f38:	str	w0, [sp, #464]
   30f3c:	b	30ea8 <__sanitizer_set_death_callback@@Base+0x47c0>
   30f40:	sub	x0, x0, #0x1
   30f44:	add	x1, x5, #0x1
   30f48:	stp	x1, x0, [sp, #424]
   30f4c:	ldrb	w2, [x5]
   30f50:	str	w2, [sp, #284]
   30f54:	ldr	w2, [sp, #280]
   30f58:	cmp	w2, #0x3
   30f5c:	b.gt	31b50 <__sanitizer_set_death_callback@@Base+0x5468>
   30f60:	mov	w2, #0x1                   	// #1
   30f64:	str	w2, [sp, #288]
   30f68:	cbz	x0, 31ba8 <__sanitizer_set_death_callback@@Base+0x54c0>
   30f6c:	add	x5, x1, #0x1
   30f70:	sub	x0, x0, #0x1
   30f74:	stp	x5, x0, [sp, #424]
   30f78:	cbnz	x0, 30d98 <__sanitizer_set_death_callback@@Base+0x46b0>
   30f7c:	ldr	w24, [sp, #464]
   30f80:	mov	w0, w24
   30f84:	cbnz	w24, 31c84 <__sanitizer_set_death_callback@@Base+0x559c>
   30f88:	ldp	x4, x1, [sp, #408]
   30f8c:	add	x25, sp, #0x1d8
   30f90:	mov	x0, x25
   30f94:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30f98:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   30f9c:	add	x3, x3, #0x660
   30fa0:	add	x2, x2, #0x670
   30fa4:	sub	w5, w5, w1
   30fa8:	mov	x1, #0xc8                  	// #200
   30fac:	bl	6a20 <snprintf@plt>
   30fb0:	ldp	x3, x0, [sp, #448]
   30fb4:	mov	x1, x25
   30fb8:	mov	w2, #0x0                   	// #0
   30fbc:	blr	x3
   30fc0:	mov	w0, #0x1                   	// #1
   30fc4:	str	w0, [sp, #464]
   30fc8:	ldr	x1, [sp, #424]
   30fcc:	ldr	x0, [sp, #432]
   30fd0:	b	30db4 <__sanitizer_set_death_callback@@Base+0x46cc>
   30fd4:	ldp	x19, x22, [sp, #152]
   30fd8:	ldp	x20, x21, [sp, #168]
   30fdc:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   30fe0:	ldr	x24, [sp, #136]
   30fe4:	mov	x0, x24
   30fe8:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   30fec:	mov	x1, x0
   30ff0:	mov	x0, x24
   30ff4:	str	x1, [sp, #368]
   30ff8:	bl	2e9f8 <__sanitizer_set_death_callback@@Base+0x2310>
   30ffc:	and	w0, w0, #0xffff
   31000:	str	w0, [sp, #280]
   31004:	sub	w0, w0, #0x2
   31008:	cmp	w0, #0x2
   3100c:	b.hi	30b80 <__sanitizer_set_death_callback@@Base+0x4498>  // b.pmore
   31010:	ldr	x0, [sp, #136]
   31014:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   31018:	b	30c20 <__sanitizer_set_death_callback@@Base+0x4538>
   3101c:	mov	x6, x19
   31020:	ldp	x19, x22, [sp, #152]
   31024:	ldp	x20, x21, [sp, #168]
   31028:	ldr	x24, [sp, #432]
   3102c:	cbnz	x24, 3118c <__sanitizer_set_death_callback@@Base+0x4aa4>
   31030:	ldr	w0, [sp, #464]
   31034:	cbnz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31038:	ldp	x4, x5, [sp, #408]
   3103c:	add	x24, sp, #0x1d8
   31040:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31044:	mov	x0, x24
   31048:	add	x3, x3, #0x660
   3104c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31050:	sub	w5, w6, w5
   31054:	b	30d30 <__sanitizer_set_death_callback@@Base+0x4648>
   31058:	lsl	x1, x3, #3
   3105c:	mov	x0, x19
   31060:	ldp	x2, x3, [sp, #384]
   31064:	bl	68c0 <__asan_backtrace_alloc@plt>
   31068:	str	x0, [sp, #320]
   3106c:	cbnz	x0, 30e58 <__sanitizer_set_death_callback@@Base+0x4770>
   31070:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31074:	ldr	w0, [sp, #464]
   31078:	b	30cfc <__sanitizer_set_death_callback@@Base+0x4614>
   3107c:	ldp	x4, x5, [sp, #408]
   31080:	add	x24, sp, #0x1d8
   31084:	mov	x0, x24
   31088:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3108c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31090:	add	x3, x3, #0x660
   31094:	add	x2, x2, #0x670
   31098:	sub	w5, w1, w5
   3109c:	mov	x1, #0xc8                  	// #200
   310a0:	bl	6a20 <snprintf@plt>
   310a4:	ldp	x3, x0, [sp, #448]
   310a8:	mov	x1, x24
   310ac:	mov	w2, #0x0                   	// #0
   310b0:	blr	x3
   310b4:	mov	w3, #0x1                   	// #1
   310b8:	mov	x0, #0xffffffff            	// #4294967295
   310bc:	mov	w2, #0x0                   	// #0
   310c0:	str	w3, [sp, #464]
   310c4:	ldp	x1, x25, [sp, #424]
   310c8:	b	30de8 <__sanitizer_set_death_callback@@Base+0x4700>
   310cc:	ldp	x4, x5, [sp, #408]
   310d0:	add	x24, sp, #0x1d8
   310d4:	mov	x0, x24
   310d8:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   310dc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   310e0:	add	x3, x3, #0x660
   310e4:	add	x2, x2, #0x670
   310e8:	sub	w5, w1, w5
   310ec:	mov	x1, #0xc8                  	// #200
   310f0:	bl	6a20 <snprintf@plt>
   310f4:	ldp	x3, x0, [sp, #448]
   310f8:	mov	x1, x24
   310fc:	mov	w2, #0x0                   	// #0
   31100:	blr	x3
   31104:	mov	w3, #0x1                   	// #1
   31108:	mov	w1, #0x0                   	// #0
   3110c:	str	w3, [sp, #464]
   31110:	ldp	x2, x0, [sp, #424]
   31114:	b	30dcc <__sanitizer_set_death_callback@@Base+0x46e4>
   31118:	ldr	w0, [sp, #464]
   3111c:	cbz	w0, 31bb4 <__sanitizer_set_death_callback@@Base+0x54cc>
   31120:	str	wzr, [sp, #288]
   31124:	cbnz	w0, 30cf8 <__sanitizer_set_death_callback@@Base+0x4610>
   31128:	b	30d50 <__sanitizer_set_death_callback@@Base+0x4668>
   3112c:	ldp	x4, x1, [sp, #408]
   31130:	add	x24, sp, #0x1d8
   31134:	mov	x0, x24
   31138:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3113c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31140:	add	x3, x3, #0x660
   31144:	add	x2, x2, #0x670
   31148:	sub	w5, w5, w1
   3114c:	mov	x1, #0xc8                  	// #200
   31150:	bl	6a20 <snprintf@plt>
   31154:	ldp	x3, x0, [sp, #448]
   31158:	mov	x1, x24
   3115c:	mov	w2, #0x0                   	// #0
   31160:	blr	x3
   31164:	mov	w3, #0x1                   	// #1
   31168:	mov	w2, #0x0                   	// #0
   3116c:	str	w3, [sp, #464]
   31170:	ldp	x1, x0, [sp, #424]
   31174:	b	30f50 <__sanitizer_set_death_callback@@Base+0x4868>
   31178:	ldr	w0, [sp, #464]
   3117c:	b	30d10 <__sanitizer_set_death_callback@@Base+0x4628>
   31180:	ldr	w0, [sp, #464]
   31184:	mov	x1, x2
   31188:	b	30d04 <__sanitizer_set_death_callback@@Base+0x461c>
   3118c:	add	x25, x6, #0x1
   31190:	sub	x0, x24, #0x1
   31194:	str	xzr, [sp, #328]
   31198:	add	x24, x6, x24
   3119c:	stp	x25, x0, [sp, #424]
   311a0:	cmp	x25, x24
   311a4:	mov	x1, #0x0                   	// #0
   311a8:	b.cs	3123c <__sanitizer_set_death_callback@@Base+0x4b54>  // b.hs, b.nlast
   311ac:	ldrb	w0, [x25]
   311b0:	cbz	w0, 3123c <__sanitizer_set_death_callback@@Base+0x4b54>
   311b4:	sub	x1, x24, x25
   311b8:	mov	x0, x25
   311bc:	bl	6b50 <__asan_internal_strnlen@plt>
   311c0:	add	x1, x0, #0x1
   311c4:	add	x2, x25, x1
   311c8:	ldrsb	w1, [x25, x1]
   311cc:	tbz	w1, #31, 31b78 <__sanitizer_set_death_callback@@Base+0x5490>
   311d0:	add	x25, x25, x0
   311d4:	mov	x0, #0x1                   	// #1
   311d8:	add	x0, x0, #0x1
   311dc:	ldrsb	w1, [x25, x0]
   311e0:	tbnz	w1, #31, 311d8 <__sanitizer_set_death_callback@@Base+0x4af0>
   311e4:	ldrsb	w1, [x2, x0]
   311e8:	add	x0, x2, x0
   311ec:	tbz	w1, #31, 31b48 <__sanitizer_set_death_callback@@Base+0x5460>
   311f0:	sub	x2, x0, #0x1
   311f4:	mov	x25, #0x1                   	// #1
   311f8:	add	x25, x25, #0x1
   311fc:	ldrsb	w1, [x2, x25]
   31200:	tbnz	w1, #31, 311f8 <__sanitizer_set_death_callback@@Base+0x4b10>
   31204:	ldrsb	w1, [x0, x25]
   31208:	add	x0, x0, x25
   3120c:	tbz	w1, #31, 31b40 <__sanitizer_set_death_callback@@Base+0x5458>
   31210:	sub	x2, x0, #0x1
   31214:	mov	x25, #0x1                   	// #1
   31218:	add	x25, x25, #0x1
   3121c:	ldrsb	w1, [x2, x25]
   31220:	tbnz	w1, #31, 31218 <__sanitizer_set_death_callback@@Base+0x4b30>
   31224:	ldr	x1, [sp, #328]
   31228:	add	x25, x0, x25
   3122c:	cmp	x24, x25
   31230:	add	x1, x1, #0x1
   31234:	str	x1, [sp, #328]
   31238:	b.hi	311ac <__sanitizer_set_death_callback@@Base+0x4ac4>  // b.pmore
   3123c:	ldp	x2, x3, [sp, #384]
   31240:	lsl	x1, x1, #3
   31244:	mov	x0, x19
   31248:	bl	68c0 <__asan_backtrace_alloc@plt>
   3124c:	str	x0, [sp, #336]
   31250:	cbz	x0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31254:	ldr	x25, [sp, #424]
   31258:	add	x24, sp, #0x198
   3125c:	mov	x1, #0x0                   	// #0
   31260:	ldrb	w0, [x25]
   31264:	cbz	w0, 313b0 <__sanitizer_set_death_callback@@Base+0x4cc8>
   31268:	stp	x22, x20, [sp, #168]
   3126c:	mov	x20, x25
   31270:	mov	x25, x1
   31274:	stp	x27, x23, [sp, #152]
   31278:	str	x21, [sp, #184]
   3127c:	nop
   31280:	ldr	w0, [sp, #464]
   31284:	cbnz	w0, 31c10 <__sanitizer_set_death_callback@@Base+0x5528>
   31288:	ldr	x1, [sp, #432]
   3128c:	mov	x0, x20
   31290:	bl	6b50 <__asan_internal_strnlen@plt>
   31294:	add	x1, x0, #0x1
   31298:	ldr	x2, [sp, #432]
   3129c:	cmp	x1, x2
   312a0:	b.ls	312dc <__sanitizer_set_death_callback@@Base+0x4bf4>  // b.plast
   312a4:	ldr	w0, [sp, #464]
   312a8:	ldp	x27, x23, [sp, #152]
   312ac:	ldp	x22, x20, [sp, #168]
   312b0:	ldr	x21, [sp, #184]
   312b4:	cbnz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   312b8:	ldp	x4, x1, [sp, #408]
   312bc:	add	x24, sp, #0x1d8
   312c0:	ldr	x5, [sp, #424]
   312c4:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   312c8:	mov	x0, x24
   312cc:	add	x3, x3, #0x660
   312d0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   312d4:	sub	w5, w5, w1
   312d8:	b	30d30 <__sanitizer_set_death_callback@@Base+0x4648>
   312dc:	ldr	x3, [sp, #424]
   312e0:	sub	x2, x2, x1
   312e4:	mov	x0, x24
   312e8:	add	x1, x3, x1
   312ec:	stp	x1, x2, [sp, #424]
   312f0:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   312f4:	ldrb	w1, [x20]
   312f8:	cmp	w1, #0x2f
   312fc:	b.eq	319cc <__sanitizer_set_death_callback@@Base+0x52e4>  // b.none
   31300:	cbz	x0, 319c0 <__sanitizer_set_death_callback@@Base+0x52d8>
   31304:	ldr	x1, [sp, #312]
   31308:	sub	x2, x0, #0x1
   3130c:	cmp	x2, x1
   31310:	b.cs	31c2c <__sanitizer_set_death_callback@@Base+0x5544>  // b.hs, b.nlast
   31314:	ldr	x1, [sp, #320]
   31318:	add	x0, x1, x0, lsl #3
   3131c:	ldur	x23, [x0, #-8]
   31320:	mov	x0, x23
   31324:	bl	67e0 <__asan_internal_strlen@plt>
   31328:	mov	x27, x0
   3132c:	mov	x0, x20
   31330:	bl	67e0 <__asan_internal_strlen@plt>
   31334:	ldp	x2, x3, [sp, #384]
   31338:	mov	x22, x0
   3133c:	add	x1, x27, x22
   31340:	mov	x0, x19
   31344:	add	x1, x1, #0x2
   31348:	bl	68c0 <__asan_backtrace_alloc@plt>
   3134c:	mov	x21, x0
   31350:	cbz	x0, 31c10 <__sanitizer_set_death_callback@@Base+0x5528>
   31354:	mov	x1, x23
   31358:	mov	x2, x27
   3135c:	bl	67d0 <__asan_internal_memcpy@plt>
   31360:	mov	w3, #0x2f                  	// #47
   31364:	strb	w3, [x21, x27]
   31368:	add	x0, x27, #0x1
   3136c:	add	x2, x22, #0x1
   31370:	add	x0, x21, x0
   31374:	mov	x1, x20
   31378:	bl	67d0 <__asan_internal_memcpy@plt>
   3137c:	ldr	x0, [sp, #336]
   31380:	str	x21, [x0, x25]
   31384:	mov	x0, x24
   31388:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   3138c:	mov	x0, x24
   31390:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   31394:	ldr	x20, [sp, #424]
   31398:	add	x25, x25, #0x8
   3139c:	ldrb	w0, [x20]
   313a0:	cbnz	w0, 31280 <__sanitizer_set_death_callback@@Base+0x4b98>
   313a4:	ldp	x27, x23, [sp, #152]
   313a8:	ldp	x22, x20, [sp, #168]
   313ac:	ldr	x21, [sp, #184]
   313b0:	ldr	w0, [sp, #464]
   313b4:	cbnz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   313b8:	ldr	x0, [sp, #328]
   313bc:	cbz	x0, 31b30 <__sanitizer_set_death_callback@@Base+0x5448>
   313c0:	ldr	x0, [sp, #336]
   313c4:	ldr	x0, [x0]
   313c8:	str	x0, [sp, #152]
   313cc:	ldr	x1, [sp, #368]
   313d0:	cbz	x1, 31488 <__sanitizer_set_death_callback@@Base+0x4da0>
   313d4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   313d8:	add	x0, x0, #0x670
   313dc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   313e0:	add	x2, x2, #0x660
   313e4:	stp	x2, x0, [sp, #208]
   313e8:	add	x2, sp, #0x1d8
   313ec:	mov	x25, #0x0                   	// #0
   313f0:	ldr	x0, [sp, #152]
   313f4:	stp	x27, x23, [sp, #160]
   313f8:	mov	w24, #0x0                   	// #0
   313fc:	ldr	x27, [sp, #120]
   31400:	stp	x26, x22, [sp, #176]
   31404:	mov	x26, x0
   31408:	ldr	x23, [sp, #136]
   3140c:	str	x2, [sp, #224]
   31410:	mov	w2, #0x1                   	// #1
   31414:	mov	w22, w2
   31418:	stp	x20, x21, [sp, #192]
   3141c:	nop
   31420:	sub	x4, x1, #0x1
   31424:	ldr	x2, [sp, #360]
   31428:	ldr	w3, [sp, #300]
   3142c:	add	x5, x2, #0x1
   31430:	stp	x5, x4, [sp, #360]
   31434:	ldrb	w0, [x2]
   31438:	cmp	w0, w3
   3143c:	b.cs	31658 <__sanitizer_set_death_callback@@Base+0x4f70>  // b.hs, b.nlast
   31440:	cbz	w0, 316f4 <__sanitizer_set_death_callback@@Base+0x500c>
   31444:	cmp	w0, #0x5
   31448:	b.eq	31600 <__sanitizer_set_death_callback@@Base+0x4f18>  // b.none
   3144c:	b.hi	315e0 <__sanitizer_set_death_callback@@Base+0x4ef8>  // b.pmore
   31450:	cmp	w0, #0x3
   31454:	b.eq	31794 <__sanitizer_set_death_callback@@Base+0x50ac>  // b.none
   31458:	cmp	w0, #0x4
   3145c:	b.ne	315a0 <__sanitizer_set_death_callback@@Base+0x4eb8>  // b.any
   31460:	mov	x0, x23
   31464:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   31468:	cbnz	x0, 31a94 <__sanitizer_set_death_callback@@Base+0x53ac>
   3146c:	ldr	x1, [sp, #368]
   31470:	adrp	x26, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   31474:	add	x26, x26, #0xb00
   31478:	cbnz	x1, 31420 <__sanitizer_set_death_callback@@Base+0x4d38>
   3147c:	ldp	x27, x23, [sp, #160]
   31480:	ldp	x26, x22, [sp, #176]
   31484:	ldp	x20, x21, [sp, #192]
   31488:	ldr	w0, [sp, #400]
   3148c:	cbnz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31490:	ldr	x0, [sp, #272]
   31494:	cbz	x0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31498:	ldr	x24, [sp, #120]
   3149c:	mov	x3, x20
   314a0:	mov	x2, x22
   314a4:	mov	x0, x19
   314a8:	mov	x4, x24
   314ac:	mov	x1, #0x18                  	// #24
   314b0:	bl	6840 <__asan_backtrace_vector_grow@plt>
   314b4:	cbz	x0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   314b8:	mov	x1, #0xffffffffffffffff    	// #-1
   314bc:	stp	x1, xzr, [x0]
   314c0:	mov	x3, x20
   314c4:	str	xzr, [x0, #16]
   314c8:	mov	x2, x22
   314cc:	mov	x1, x24
   314d0:	mov	x0, x19
   314d4:	bl	6910 <__asan_backtrace_vector_release@plt>
   314d8:	cbz	w0, 309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   314dc:	ldr	x0, [sp, #248]
   314e0:	adrp	x3, 2e000 <__sanitizer_set_death_callback@@Base+0x1918>
   314e4:	ldr	x1, [sp, #272]
   314e8:	add	x3, x3, #0x458
   314ec:	mov	x2, #0x18                  	// #24
   314f0:	str	x0, [sp, #128]
   314f4:	bl	66b0 <__asan_backtrace_qsort@plt>
   314f8:	ldr	w0, [x19, #8]
   314fc:	ldr	x1, [sp, #272]
   31500:	str	x1, [sp, #120]
   31504:	cbz	w0, 31a84 <__sanitizer_set_death_callback@@Base+0x539c>
   31508:	add	x0, sp, #0x198
   3150c:	mov	x2, #0x20                  	// #32
   31510:	mov	x24, x0
   31514:	mov	w1, #0x0                   	// #0
   31518:	str	xzr, [sp, #160]
   3151c:	ldr	x25, [x27, #16]
   31520:	bl	6860 <__asan_internal_memset@plt>
   31524:	add	x4, sp, #0x1d8
   31528:	str	x21, [sp, #152]
   3152c:	mov	x21, x24
   31530:	ldr	w2, [x28, #120]
   31534:	ldr	x24, [sp, #144]
   31538:	str	x23, [sp, #136]
   3153c:	mov	x23, x4
   31540:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31544:	ldp	x3, x0, [x25]
   31548:	add	x1, x1, #0x778
   3154c:	ldr	x5, [x28, #56]
   31550:	stp	x1, x5, [sp, #472]
   31554:	stp	x3, x0, [sp, #488]
   31558:	str	w2, [sp, #504]
   3155c:	str	x22, [sp, #512]
   31560:	str	x20, [sp, #520]
   31564:	str	wzr, [sp, #528]
   31568:	cbz	x0, 319d8 <__sanitizer_set_death_callback@@Base+0x52f0>
   3156c:	stp	x21, x21, [sp]
   31570:	mov	x7, x20
   31574:	mov	x6, x22
   31578:	mov	x5, x24
   3157c:	mov	x4, x23
   31580:	mov	x2, x25
   31584:	mov	x1, x28
   31588:	mov	x0, x19
   3158c:	mov	x3, #0x0                   	// #0
   31590:	bl	2fe28 <__sanitizer_set_death_callback@@Base+0x3740>
   31594:	cbz	w0, 31a70 <__sanitizer_set_death_callback@@Base+0x5388>
   31598:	ldr	x0, [sp, #496]
   3159c:	b	31568 <__sanitizer_set_death_callback@@Base+0x4e80>
   315a0:	cmp	w0, #0x1
   315a4:	b.eq	317a8 <__sanitizer_set_death_callback@@Base+0x50c0>  // b.none
   315a8:	cmp	w0, #0x2
   315ac:	b.ne	3190c <__sanitizer_set_death_callback@@Base+0x5224>  // b.any
   315b0:	mov	x0, x23
   315b4:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   315b8:	ldr	w2, [sp, #284]
   315bc:	add	x24, x0, w24, uxtw
   315c0:	ldr	w3, [sp, #288]
   315c4:	ldr	x1, [sp, #368]
   315c8:	mul	x0, x2, x24
   315cc:	udiv	x2, x24, x3
   315d0:	udiv	x0, x0, x3
   315d4:	msub	w24, w2, w3, w24
   315d8:	add	x25, x25, x0
   315dc:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   315e0:	cmp	w0, #0x9
   315e4:	b.eq	31938 <__sanitizer_set_death_callback@@Base+0x5250>  // b.none
   315e8:	b.ls	31610 <__sanitizer_set_death_callback@@Base+0x4f28>  // b.plast
   315ec:	cmp	w0, #0xb
   315f0:	mov	x1, x4
   315f4:	b.ls	31478 <__sanitizer_set_death_callback@@Base+0x4d90>  // b.plast
   315f8:	cmp	w0, #0xc
   315fc:	b.ne	3190c <__sanitizer_set_death_callback@@Base+0x5224>  // b.any
   31600:	mov	x0, x23
   31604:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   31608:	ldr	x1, [sp, #368]
   3160c:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31610:	cmp	w0, #0x7
   31614:	mov	x1, x4
   31618:	b.ls	31478 <__sanitizer_set_death_callback@@Base+0x4d90>  // b.plast
   3161c:	cmp	w0, #0x8
   31620:	b.ne	3190c <__sanitizer_set_death_callback@@Base+0x5224>  // b.any
   31624:	ldr	w4, [sp, #296]
   31628:	mov	w0, #0xff                  	// #255
   3162c:	sub	w0, w0, w3
   31630:	ldr	w2, [sp, #284]
   31634:	ldr	w3, [sp, #288]
   31638:	udiv	w0, w0, w4
   3163c:	add	w24, w0, w24
   31640:	mul	w0, w24, w2
   31644:	udiv	w2, w24, w3
   31648:	udiv	w0, w0, w3
   3164c:	msub	w24, w2, w3, w24
   31650:	add	x25, x25, x0
   31654:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31658:	add	x1, sp, #0x124
   3165c:	sub	w0, w0, w3
   31660:	ldp	w6, w5, [x1]
   31664:	ldp	w2, w3, [x1, #-8]
   31668:	udiv	w1, w0, w5
   3166c:	add	w24, w1, w24
   31670:	msub	w0, w1, w5, w0
   31674:	add	w0, w0, w6
   31678:	mul	w1, w24, w2
   3167c:	add	w22, w22, w0
   31680:	udiv	w2, w24, w3
   31684:	ldr	x0, [sp, #272]
   31688:	udiv	w1, w1, w3
   3168c:	msub	w24, w2, w3, w24
   31690:	ldp	x2, x3, [sp, #384]
   31694:	add	x25, x25, x1
   31698:	cbz	x0, 316bc <__sanitizer_set_death_callback@@Base+0x4fd4>
   3169c:	add	x0, x0, x0, lsl #1
   316a0:	ldr	x1, [sp, #248]
   316a4:	lsl	x0, x0, #3
   316a8:	sub	x0, x0, #0x18
   316ac:	add	x5, x1, x0
   316b0:	ldr	x0, [x1, x0]
   316b4:	cmp	x25, x0
   316b8:	b.eq	317d8 <__sanitizer_set_death_callback@@Base+0x50f0>  // b.none
   316bc:	mov	x4, x27
   316c0:	mov	x0, x19
   316c4:	mov	x1, #0x18                  	// #24
   316c8:	bl	6840 <__asan_backtrace_vector_grow@plt>
   316cc:	cbz	x0, 317a0 <__sanitizer_set_death_callback@@Base+0x50b8>
   316d0:	ldr	x1, [x28, #16]
   316d4:	ldr	x2, [sp, #272]
   316d8:	add	x1, x1, x25
   316dc:	stp	x1, x26, [x0]
   316e0:	add	x1, x2, #0x1
   316e4:	stp	w22, w2, [x0, #16]
   316e8:	str	x1, [sp, #272]
   316ec:	ldr	x1, [sp, #368]
   316f0:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   316f4:	mov	x0, x23
   316f8:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   316fc:	ldp	x5, x1, [sp, #360]
   31700:	mov	x21, x0
   31704:	cbnz	x1, 3172c <__sanitizer_set_death_callback@@Base+0x5044>
   31708:	ldr	w0, [sp, #400]
   3170c:	cbz	w0, 317f8 <__sanitizer_set_death_callback@@Base+0x5110>
   31710:	sub	x0, x21, #0x1
   31714:	cmp	x0, x1
   31718:	b.ls	31b00 <__sanitizer_set_death_callback@@Base+0x5418>  // b.plast
   3171c:	ldp	x27, x23, [sp, #160]
   31720:	ldp	x26, x22, [sp, #176]
   31724:	ldp	x20, x21, [sp, #192]
   31728:	b	30c68 <__sanitizer_set_death_callback@@Base+0x4580>
   3172c:	sub	x1, x1, #0x1
   31730:	add	x20, x5, #0x1
   31734:	stp	x20, x1, [sp, #360]
   31738:	ldrb	w2, [x5]
   3173c:	cmp	w2, #0x3
   31740:	b.eq	31834 <__sanitizer_set_death_callback@@Base+0x514c>  // b.none
   31744:	b.hi	31764 <__sanitizer_set_death_callback@@Base+0x507c>  // b.pmore
   31748:	cmp	w2, #0x1
   3174c:	b.ne	31770 <__sanitizer_set_death_callback@@Base+0x5088>  // b.any
   31750:	mov	w22, w2
   31754:	mov	w24, #0x0                   	// #0
   31758:	mov	x25, #0x0                   	// #0
   3175c:	ldr	x26, [sp, #152]
   31760:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31764:	cmp	w2, #0x4
   31768:	b.eq	31600 <__sanitizer_set_death_callback@@Base+0x4f18>  // b.none
   3176c:	b	31710 <__sanitizer_set_death_callback@@Base+0x5028>
   31770:	cmp	w2, #0x2
   31774:	b.ne	31710 <__sanitizer_set_death_callback@@Base+0x5028>  // b.any
   31778:	ldr	x0, [sp, #128]
   3177c:	ldr	w1, [x0, #48]
   31780:	mov	x0, x23
   31784:	bl	2ec88 <__sanitizer_set_death_callback@@Base+0x25a0>
   31788:	mov	x25, x0
   3178c:	ldr	x1, [sp, #368]
   31790:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31794:	mov	x0, x23
   31798:	bl	2e890 <__sanitizer_set_death_callback@@Base+0x21a8>
   3179c:	add	w22, w22, w0
   317a0:	ldr	x1, [sp, #368]
   317a4:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   317a8:	ldr	x0, [sp, #272]
   317ac:	ldp	x2, x3, [sp, #384]
   317b0:	cbz	x0, 316bc <__sanitizer_set_death_callback@@Base+0x4fd4>
   317b4:	add	x0, x0, x0, lsl #1
   317b8:	ldr	x1, [sp, #248]
   317bc:	lsl	x0, x0, #3
   317c0:	sub	x0, x0, #0x18
   317c4:	add	x5, x1, x0
   317c8:	ldr	x0, [x1, x0]
   317cc:	cmp	x0, x25
   317d0:	b.ne	316bc <__sanitizer_set_death_callback@@Base+0x4fd4>  // b.any
   317d4:	nop
   317d8:	ldr	x0, [x5, #8]
   317dc:	cmp	x0, x26
   317e0:	b.ne	316bc <__sanitizer_set_death_callback@@Base+0x4fd4>  // b.any
   317e4:	ldr	w0, [x5, #16]
   317e8:	mov	x1, x4
   317ec:	cmp	w22, w0
   317f0:	b.ne	316bc <__sanitizer_set_death_callback@@Base+0x4fd4>  // b.any
   317f4:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   317f8:	ldp	x3, x2, [sp, #208]
   317fc:	mov	x1, #0xc8                  	// #200
   31800:	ldp	x4, x7, [sp, #344]
   31804:	ldr	x20, [sp, #224]
   31808:	mov	x0, x20
   3180c:	sub	w5, w5, w7
   31810:	bl	6a20 <snprintf@plt>
   31814:	ldp	x3, x0, [sp, #384]
   31818:	mov	x1, x20
   3181c:	mov	w2, #0x0                   	// #0
   31820:	blr	x3
   31824:	mov	w0, #0x1                   	// #1
   31828:	str	w0, [sp, #400]
   3182c:	ldr	x1, [sp, #368]
   31830:	b	31710 <__sanitizer_set_death_callback@@Base+0x5028>
   31834:	mov	x0, x20
   31838:	str	x5, [sp, #136]
   3183c:	bl	6b50 <__asan_internal_strnlen@plt>
   31840:	add	x1, x0, #0x1
   31844:	ldr	x2, [sp, #368]
   31848:	cmp	x1, x2
   3184c:	b.hi	3171c <__sanitizer_set_death_callback@@Base+0x5034>  // b.pmore
   31850:	ldr	x3, [sp, #360]
   31854:	sub	x2, x2, x1
   31858:	mov	x0, x23
   3185c:	add	x1, x3, x1
   31860:	stp	x1, x2, [sp, #360]
   31864:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   31868:	mov	x26, x0
   3186c:	mov	x0, x23
   31870:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   31874:	mov	x0, x23
   31878:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   3187c:	ldr	x5, [sp, #136]
   31880:	ldrb	w0, [x5, #1]
   31884:	cmp	w0, #0x2f
   31888:	b.eq	31af4 <__sanitizer_set_death_callback@@Base+0x540c>  // b.none
   3188c:	cbnz	w26, 31b14 <__sanitizer_set_death_callback@@Base+0x542c>
   31890:	ldr	x0, [sp, #128]
   31894:	ldr	x5, [x0, #72]
   31898:	mov	x0, x5
   3189c:	str	x5, [sp, #232]
   318a0:	bl	67e0 <__asan_internal_strlen@plt>
   318a4:	mov	x21, x0
   318a8:	mov	x0, x20
   318ac:	bl	67e0 <__asan_internal_strlen@plt>
   318b0:	mov	x1, x0
   318b4:	ldp	x2, x3, [sp, #384]
   318b8:	str	x1, [sp, #136]
   318bc:	add	x1, x21, x1
   318c0:	mov	x0, x19
   318c4:	add	x1, x1, #0x2
   318c8:	bl	68c0 <__asan_backtrace_alloc@plt>
   318cc:	mov	x26, x0
   318d0:	cbz	x0, 31c90 <__sanitizer_set_death_callback@@Base+0x55a8>
   318d4:	ldr	x5, [sp, #232]
   318d8:	mov	x2, x21
   318dc:	mov	x1, x5
   318e0:	bl	67d0 <__asan_internal_memcpy@plt>
   318e4:	ldr	x1, [sp, #136]
   318e8:	mov	w0, #0x2f                  	// #47
   318ec:	strb	w0, [x26, x21]
   318f0:	add	x0, x21, #0x1
   318f4:	add	x2, x1, #0x1
   318f8:	add	x0, x26, x0
   318fc:	mov	x1, x20
   31900:	bl	67d0 <__asan_internal_memcpy@plt>
   31904:	ldr	x1, [sp, #368]
   31908:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   3190c:	ldr	x1, [sp, #304]
   31910:	sub	w0, w0, #0x1
   31914:	ldrb	w21, [x1, w0, uxtw]
   31918:	cbz	w21, 31b70 <__sanitizer_set_death_callback@@Base+0x5488>
   3191c:	nop
   31920:	mov	x0, x23
   31924:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   31928:	subs	w21, w21, #0x1
   3192c:	b.ne	31920 <__sanitizer_set_death_callback@@Base+0x5238>  // b.any
   31930:	ldr	x1, [sp, #368]
   31934:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31938:	cmp	x4, #0x1
   3193c:	b.hi	31994 <__sanitizer_set_death_callback@@Base+0x52ac>  // b.pmore
   31940:	ldr	w0, [sp, #400]
   31944:	mov	x1, x4
   31948:	cbz	w0, 31954 <__sanitizer_set_death_callback@@Base+0x526c>
   3194c:	mov	w24, #0x0                   	// #0
   31950:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31954:	ldp	x3, x2, [sp, #208]
   31958:	mov	x1, #0xc8                  	// #200
   3195c:	ldp	x4, x6, [sp, #344]
   31960:	mov	w24, #0x0                   	// #0
   31964:	ldr	x20, [sp, #224]
   31968:	mov	x0, x20
   3196c:	sub	w5, w5, w6
   31970:	bl	6a20 <snprintf@plt>
   31974:	ldp	x3, x0, [sp, #384]
   31978:	mov	x1, x20
   3197c:	mov	w2, #0x0                   	// #0
   31980:	blr	x3
   31984:	mov	w0, #0x1                   	// #1
   31988:	str	w0, [sp, #400]
   3198c:	ldr	x1, [sp, #368]
   31990:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31994:	ldr	w0, [sp, #376]
   31998:	sub	x1, x1, #0x3
   3199c:	add	x3, x2, #0x3
   319a0:	stp	x3, x1, [sp, #360]
   319a4:	cbz	w0, 31ab8 <__sanitizer_set_death_callback@@Base+0x53d0>
   319a8:	ldrb	w0, [x2, #1]
   319ac:	mov	w24, #0x0                   	// #0
   319b0:	ldrb	w2, [x2, #2]
   319b4:	orr	w0, w2, w0, lsl #8
   319b8:	add	x25, x25, w0, uxth
   319bc:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   319c0:	ldr	x0, [sp, #128]
   319c4:	ldr	x23, [x0, #72]
   319c8:	cbnz	x23, 31320 <__sanitizer_set_death_callback@@Base+0x4c38>
   319cc:	ldr	x0, [sp, #336]
   319d0:	str	x20, [x0, x25]
   319d4:	b	31384 <__sanitizer_set_death_callback@@Base+0x4c9c>
   319d8:	ldr	x5, [x21, #24]
   319dc:	mov	x24, x21
   319e0:	ldr	x23, [sp, #136]
   319e4:	ldr	x21, [sp, #152]
   319e8:	cbz	x5, 31a78 <__sanitizer_set_death_callback@@Base+0x5390>
   319ec:	ldr	x0, [sp, #160]
   319f0:	cbz	x0, 31b80 <__sanitizer_set_death_callback@@Base+0x5498>
   319f4:	mov	x1, x0
   319f8:	mov	x24, x0
   319fc:	mov	x3, x20
   31a00:	mov	x2, x22
   31a04:	mov	x0, x19
   31a08:	str	x5, [sp, #136]
   31a0c:	bl	6c80 <__asan_backtrace_vector_finish@plt>
   31a10:	mov	x25, x0
   31a14:	cbz	x0, 31a78 <__sanitizer_set_death_callback@@Base+0x5390>
   31a18:	ldr	x5, [sp, #136]
   31a1c:	str	xzr, [x24, #24]
   31a20:	mov	x1, x5
   31a24:	mov	x0, x25
   31a28:	adrp	x3, 2e000 <__sanitizer_set_death_callback@@Base+0x1918>
   31a2c:	mov	x2, #0x18                  	// #24
   31a30:	add	x3, x3, #0x6f0
   31a34:	str	x5, [sp, #136]
   31a38:	bl	66b0 <__asan_backtrace_qsort@plt>
   31a3c:	ldr	x5, [sp, #136]
   31a40:	ldr	x2, [sp, #312]
   31a44:	cbnz	x2, 31ad0 <__sanitizer_set_death_callback@@Base+0x53e8>
   31a48:	ldp	x2, x1, [sp, #328]
   31a4c:	mov	x4, x20
   31a50:	mov	x3, x22
   31a54:	mov	x0, x19
   31a58:	str	x5, [sp, #136]
   31a5c:	lsl	x2, x2, #3
   31a60:	bl	6bc0 <__asan_backtrace_free@plt>
   31a64:	mov	w1, #0x1                   	// #1
   31a68:	ldp	x24, x5, [sp, #128]
   31a6c:	b	309f4 <__sanitizer_set_death_callback@@Base+0x430c>
   31a70:	ldr	x23, [sp, #136]
   31a74:	ldr	x21, [sp, #152]
   31a78:	mov	x25, #0x0                   	// #0
   31a7c:	mov	x5, #0x0                   	// #0
   31a80:	b	31a40 <__sanitizer_set_death_callback@@Base+0x5358>
   31a84:	add	x24, x28, #0x80
   31a88:	str	x24, [sp, #160]
   31a8c:	ldr	x25, [x27, #16]
   31a90:	b	31524 <__sanitizer_set_death_callback@@Base+0x4e3c>
   31a94:	ldr	x1, [sp, #328]
   31a98:	sub	x2, x0, #0x1
   31a9c:	cmp	x2, x1
   31aa0:	b.cs	31c58 <__sanitizer_set_death_callback@@Base+0x5570>  // b.hs, b.nlast
   31aa4:	ldr	x2, [sp, #336]
   31aa8:	ldr	x1, [sp, #368]
   31aac:	add	x0, x2, x0, lsl #3
   31ab0:	ldur	x26, [x0, #-8]
   31ab4:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31ab8:	ldrb	w0, [x2, #2]
   31abc:	mov	w24, #0x0                   	// #0
   31ac0:	ldrb	w2, [x2, #1]
   31ac4:	orr	w0, w2, w0, lsl #8
   31ac8:	add	x25, x25, w0, uxth
   31acc:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31ad0:	ldr	x1, [sp, #320]
   31ad4:	lsl	x2, x2, #3
   31ad8:	mov	x4, x20
   31adc:	mov	x3, x22
   31ae0:	mov	x0, x19
   31ae4:	str	x5, [sp, #136]
   31ae8:	bl	6bc0 <__asan_backtrace_free@plt>
   31aec:	ldr	x5, [sp, #136]
   31af0:	b	31a48 <__sanitizer_set_death_callback@@Base+0x5360>
   31af4:	mov	x26, x20
   31af8:	ldr	x1, [sp, #368]
   31afc:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31b00:	ldr	x2, [sp, #360]
   31b04:	sub	x1, x1, x0
   31b08:	add	x0, x2, x0
   31b0c:	stp	x0, x1, [sp, #360]
   31b10:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31b14:	ldr	x0, [sp, #312]
   31b18:	sub	w26, w26, #0x1
   31b1c:	cmp	x26, x0
   31b20:	b.cs	31ca0 <__sanitizer_set_death_callback@@Base+0x55b8>  // b.hs, b.nlast
   31b24:	ldr	x0, [sp, #320]
   31b28:	ldr	x5, [x0, x26, lsl #3]
   31b2c:	b	31898 <__sanitizer_set_death_callback@@Base+0x51b0>
   31b30:	adrp	x0, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   31b34:	add	x0, x0, #0xb00
   31b38:	str	x0, [sp, #152]
   31b3c:	b	313cc <__sanitizer_set_death_callback@@Base+0x4ce4>
   31b40:	mov	x25, #0x1                   	// #1
   31b44:	b	31224 <__sanitizer_set_death_callback@@Base+0x4b3c>
   31b48:	mov	x25, #0x1                   	// #1
   31b4c:	b	31204 <__sanitizer_set_death_callback@@Base+0x4b1c>
   31b50:	cbz	x0, 31118 <__sanitizer_set_death_callback@@Base+0x4a30>
   31b54:	sub	x0, x0, #0x1
   31b58:	add	x2, x1, #0x1
   31b5c:	stp	x2, x0, [sp, #424]
   31b60:	ldrb	w3, [x1]
   31b64:	mov	x1, x2
   31b68:	str	w3, [sp, #288]
   31b6c:	b	30f68 <__sanitizer_set_death_callback@@Base+0x4880>
   31b70:	mov	x1, x4
   31b74:	b	31478 <__sanitizer_set_death_callback@@Base+0x4d90>
   31b78:	mov	x0, #0x1                   	// #1
   31b7c:	b	311e4 <__sanitizer_set_death_callback@@Base+0x4afc>
   31b80:	mov	x3, x20
   31b84:	mov	x2, x22
   31b88:	add	x1, sp, #0x198
   31b8c:	mov	x0, x19
   31b90:	str	x5, [sp, #136]
   31b94:	bl	6910 <__asan_backtrace_vector_release@plt>
   31b98:	cbz	w0, 31a78 <__sanitizer_set_death_callback@@Base+0x5390>
   31b9c:	ldr	x25, [x24]
   31ba0:	ldr	x5, [sp, #136]
   31ba4:	b	31a20 <__sanitizer_set_death_callback@@Base+0x5338>
   31ba8:	ldr	w0, [sp, #464]
   31bac:	cbnz	w0, 30cf8 <__sanitizer_set_death_callback@@Base+0x4610>
   31bb0:	b	30d50 <__sanitizer_set_death_callback@@Base+0x4668>
   31bb4:	ldp	x4, x5, [sp, #408]
   31bb8:	add	x24, sp, #0x1d8
   31bbc:	mov	x0, x24
   31bc0:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31bc4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31bc8:	add	x3, x3, #0x660
   31bcc:	add	x2, x2, #0x670
   31bd0:	sub	w5, w1, w5
   31bd4:	mov	x1, #0xc8                  	// #200
   31bd8:	bl	6a20 <snprintf@plt>
   31bdc:	ldp	x3, x0, [sp, #448]
   31be0:	mov	x1, x24
   31be4:	mov	w2, #0x0                   	// #0
   31be8:	blr	x3
   31bec:	mov	w1, #0x1                   	// #1
   31bf0:	mov	w3, #0x0                   	// #0
   31bf4:	str	w1, [sp, #464]
   31bf8:	ldp	x2, x0, [sp, #424]
   31bfc:	b	31b64 <__sanitizer_set_death_callback@@Base+0x547c>
   31c00:	mov	x1, x5
   31c04:	mov	w0, w2
   31c08:	str	wzr, [sp, #292]
   31c0c:	b	30cfc <__sanitizer_set_death_callback@@Base+0x4614>
   31c10:	ldp	x27, x23, [sp, #152]
   31c14:	ldp	x22, x20, [sp, #168]
   31c18:	ldr	x21, [sp, #184]
   31c1c:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31c20:	mov	x0, #0x0                   	// #0
   31c24:	str	xzr, [sp, #320]
   31c28:	b	30e58 <__sanitizer_set_death_callback@@Base+0x4770>
   31c2c:	add	x24, sp, #0x1d8
   31c30:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31c34:	mov	x0, x24
   31c38:	add	x3, x3, #0x898
   31c3c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31c40:	ldp	x27, x23, [sp, #152]
   31c44:	ldp	x22, x20, [sp, #168]
   31c48:	ldr	x21, [sp, #184]
   31c4c:	ldp	x4, x1, [sp, #344]
   31c50:	ldr	x5, [sp, #360]
   31c54:	b	30b9c <__sanitizer_set_death_callback@@Base+0x44b4>
   31c58:	add	x24, sp, #0x1d8
   31c5c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31c60:	mov	x0, x24
   31c64:	add	x3, x3, #0x900
   31c68:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31c6c:	ldp	x27, x23, [sp, #160]
   31c70:	ldp	x26, x22, [sp, #176]
   31c74:	ldp	x20, x21, [sp, #192]
   31c78:	ldp	x4, x1, [sp, #344]
   31c7c:	ldr	x5, [sp, #360]
   31c80:	b	30b9c <__sanitizer_set_death_callback@@Base+0x44b4>
   31c84:	mov	x1, x5
   31c88:	str	wzr, [sp, #292]
   31c8c:	b	30cfc <__sanitizer_set_death_callback@@Base+0x4614>
   31c90:	ldp	x27, x23, [sp, #160]
   31c94:	ldp	x26, x22, [sp, #176]
   31c98:	ldp	x20, x21, [sp, #192]
   31c9c:	b	309a0 <__sanitizer_set_death_callback@@Base+0x42b8>
   31ca0:	add	x24, sp, #0x1d8
   31ca4:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31ca8:	mov	x0, x24
   31cac:	add	x3, x3, #0x8d0
   31cb0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31cb4:	ldp	x27, x23, [sp, #160]
   31cb8:	ldp	x26, x22, [sp, #176]
   31cbc:	ldp	x20, x21, [sp, #192]
   31cc0:	ldp	x4, x1, [sp, #344]
   31cc4:	ldr	x5, [sp, #360]
   31cc8:	b	30b9c <__sanitizer_set_death_callback@@Base+0x44b4>
   31ccc:	nop
   31cd0:	stp	x29, x30, [sp, #-96]!
   31cd4:	mov	x29, sp
   31cd8:	stp	x23, x24, [sp, #48]
   31cdc:	mov	x24, x0
   31ce0:	ldr	w0, [x0, #8]
   31ce4:	stp	x19, x20, [sp, #16]
   31ce8:	mov	x23, x3
   31cec:	mov	x20, x2
   31cf0:	stp	x21, x22, [sp, #32]
   31cf4:	mov	x22, x1
   31cf8:	mov	x21, x4
   31cfc:	cbnz	w0, 31d60 <__sanitizer_set_death_callback@@Base+0x5678>
   31d00:	ldr	x19, [x24, #32]
   31d04:	cbz	x19, 31da8 <__sanitizer_set_death_callback@@Base+0x56c0>
   31d08:	str	x25, [sp, #64]
   31d0c:	add	x25, sp, #0x5c
   31d10:	b	31d24 <__sanitizer_set_death_callback@@Base+0x563c>
   31d14:	ldr	w0, [sp, #92]
   31d18:	cbnz	w0, 31dd4 <__sanitizer_set_death_callback@@Base+0x56ec>
   31d1c:	ldr	x19, [x19]
   31d20:	cbz	x19, 31da4 <__sanitizer_set_death_callback@@Base+0x56bc>
   31d24:	mov	x6, x25
   31d28:	mov	x5, x21
   31d2c:	mov	x4, x23
   31d30:	mov	x3, x20
   31d34:	mov	x2, x22
   31d38:	mov	x1, x19
   31d3c:	mov	x0, x24
   31d40:	bl	305e8 <__sanitizer_set_death_callback@@Base+0x3f00>
   31d44:	cbz	w0, 31d14 <__sanitizer_set_death_callback@@Base+0x562c>
   31d48:	ldp	x19, x20, [sp, #16]
   31d4c:	ldp	x21, x22, [sp, #32]
   31d50:	ldp	x23, x24, [sp, #48]
   31d54:	ldr	x25, [sp, #64]
   31d58:	ldp	x29, x30, [sp], #96
   31d5c:	ret
   31d60:	add	x19, x24, #0x20
   31d64:	str	x25, [sp, #64]
   31d68:	add	x25, sp, #0x5c
   31d6c:	b	31d80 <__sanitizer_set_death_callback@@Base+0x5698>
   31d70:	bl	305e8 <__sanitizer_set_death_callback@@Base+0x3f00>
   31d74:	cbnz	w0, 31d48 <__sanitizer_set_death_callback@@Base+0x5660>
   31d78:	ldr	w0, [sp, #92]
   31d7c:	cbnz	w0, 31dd4 <__sanitizer_set_death_callback@@Base+0x56ec>
   31d80:	ldar	x19, [x19]
   31d84:	mov	x6, x25
   31d88:	mov	x5, x21
   31d8c:	mov	x4, x23
   31d90:	mov	x3, x20
   31d94:	mov	x2, x22
   31d98:	mov	x1, x19
   31d9c:	mov	x0, x24
   31da0:	cbnz	x19, 31d70 <__sanitizer_set_death_callback@@Base+0x5688>
   31da4:	ldr	x25, [sp, #64]
   31da8:	mov	x1, x22
   31dac:	mov	x0, x21
   31db0:	mov	x4, #0x0                   	// #0
   31db4:	mov	w3, #0x0                   	// #0
   31db8:	mov	x2, #0x0                   	// #0
   31dbc:	blr	x20
   31dc0:	ldp	x19, x20, [sp, #16]
   31dc4:	ldp	x21, x22, [sp, #32]
   31dc8:	ldp	x23, x24, [sp, #48]
   31dcc:	ldp	x29, x30, [sp], #96
   31dd0:	ret
   31dd4:	mov	w0, #0x0                   	// #0
   31dd8:	ldp	x19, x20, [sp, #16]
   31ddc:	ldp	x21, x22, [sp, #32]
   31de0:	ldp	x23, x24, [sp, #48]
   31de4:	ldr	x25, [sp, #64]
   31de8:	ldp	x29, x30, [sp], #96
   31dec:	ret

0000000000031df0 <__asan_backtrace_dwarf_add@@Base>:
   31df0:	sub	sp, sp, #0x380
   31df4:	add	x8, sp, #0x178
   31df8:	stp	x29, x30, [sp, #48]
   31dfc:	add	x29, sp, #0x30
   31e00:	stp	x4, x5, [sp, #312]
   31e04:	add	x4, sp, #0x160
   31e08:	stp	x19, x20, [sp, #64]
   31e0c:	mov	x19, x2
   31e10:	add	x20, sp, #0x198
   31e14:	stp	x21, x22, [sp, #80]
   31e18:	mov	x22, x3
   31e1c:	mov	x21, x4
   31e20:	stp	x23, x24, [sp, #96]
   31e24:	stp	x25, x26, [sp, #112]
   31e28:	mov	x25, x0
   31e2c:	mov	x0, x8
   31e30:	stp	x27, x28, [sp, #128]
   31e34:	str	x7, [sp, #184]
   31e38:	stp	x8, x1, [sp, #232]
   31e3c:	mov	w1, #0x0                   	// #0
   31e40:	str	x4, [sp, #256]
   31e44:	str	x6, [sp, #272]
   31e48:	stp	x2, x3, [sp, #296]
   31e4c:	mov	x2, #0x18                  	// #24
   31e50:	str	x20, [sp, #336]
   31e54:	ldr	x28, [sp, #944]
   31e58:	ldr	x23, [sp, #952]
   31e5c:	bl	6860 <__asan_internal_memset@plt>
   31e60:	mov	x2, #0x18                  	// #24
   31e64:	mov	w1, #0x0                   	// #0
   31e68:	mov	x0, x20
   31e6c:	bl	6860 <__asan_internal_memset@plt>
   31e70:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31e74:	add	x3, x3, #0x778
   31e78:	stp	xzr, x3, [sp, #432]
   31e7c:	mov	x0, x21
   31e80:	ldr	w3, [sp, #928]
   31e84:	mov	x2, #0x18                  	// #24
   31e88:	mov	w1, #0x0                   	// #0
   31e8c:	str	xzr, [sp, #400]
   31e90:	stp	x19, x19, [sp, #448]
   31e94:	str	x22, [sp, #464]
   31e98:	str	w3, [sp, #472]
   31e9c:	stp	x28, x23, [sp, #480]
   31ea0:	str	wzr, [sp, #496]
   31ea4:	bl	6860 <__asan_internal_memset@plt>
   31ea8:	ldr	x0, [sp, #464]
   31eac:	str	x0, [sp, #176]
   31eb0:	cbz	x0, 32d10 <__asan_backtrace_dwarf_add@@Base+0xf20>
   31eb4:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   31eb8:	add	x0, x0, #0x680
   31ebc:	str	xzr, [sp, #176]
   31ec0:	str	xzr, [sp, #192]
   31ec4:	str	x0, [sp, #248]
   31ec8:	ldr	w0, [sp, #496]
   31ecc:	cbnz	w0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   31ed0:	ldr	x1, [sp, #456]
   31ed4:	add	x19, sp, #0x1b8
   31ed8:	mov	x0, x19
   31edc:	str	x1, [sp, #216]
   31ee0:	str	wzr, [sp, #344]
   31ee4:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   31ee8:	mov	w2, w0
   31eec:	str	x2, [sp, #152]
   31ef0:	mov	x1, #0xffffffff            	// #4294967295
   31ef4:	cmp	x1, w0, uxtw
   31ef8:	b.eq	32418 <__asan_backtrace_dwarf_add@@Base+0x628>  // b.none
   31efc:	add	x2, sp, #0x2d0
   31f00:	add	x3, sp, #0x2d0
   31f04:	ldp	x0, x1, [x19, #16]
   31f08:	stp	x0, x1, [x2, #-200]
   31f0c:	add	x0, sp, #0x1f8
   31f10:	str	x0, [sp, #160]
   31f14:	ldp	x0, x1, [x19]
   31f18:	stp	x0, x1, [x2, #-216]
   31f1c:	ldp	x0, x1, [x19, #32]
   31f20:	stp	x0, x1, [x3, #-184]
   31f24:	ldp	x0, x1, [x19, #48]
   31f28:	stp	x0, x1, [x3, #-168]
   31f2c:	ldr	x2, [sp, #152]
   31f30:	str	x2, [sp, #528]
   31f34:	ldr	x1, [sp, #464]
   31f38:	cmp	x1, x2
   31f3c:	b.cs	32020 <__asan_backtrace_dwarf_add@@Base+0x230>  // b.hs, b.nlast
   31f40:	ldr	w0, [sp, #496]
   31f44:	cbz	w0, 32388 <__asan_backtrace_dwarf_add@@Base+0x598>
   31f48:	ldr	x0, [sp, #176]
   31f4c:	cbz	x0, 31ff4 <__asan_backtrace_dwarf_add@@Base+0x204>
   31f50:	ldr	x20, [sp, #352]
   31f54:	add	x21, x20, x0, lsl #3
   31f58:	ldr	x19, [x20]
   31f5c:	ldr	x2, [x19, #88]
   31f60:	cbz	x2, 31f9c <__asan_backtrace_dwarf_add@@Base+0x1ac>
   31f64:	mov	x22, #0x0                   	// #0
   31f68:	ldr	x1, [x19, #96]
   31f6c:	mov	x4, x23
   31f70:	mov	x3, x28
   31f74:	mov	x0, x25
   31f78:	add	x1, x1, x22, lsl #5
   31f7c:	add	x22, x22, #0x1
   31f80:	ldp	x2, x1, [x1, #16]
   31f84:	lsl	x2, x2, #3
   31f88:	bl	6bc0 <__asan_backtrace_free@plt>
   31f8c:	ldr	x2, [x19, #88]
   31f90:	cmp	x22, x2
   31f94:	b.cc	31f68 <__asan_backtrace_dwarf_add@@Base+0x178>  // b.lo, b.ul, b.last
   31f98:	lsl	x2, x2, #5
   31f9c:	ldr	x1, [x19, #96]
   31fa0:	mov	x4, x23
   31fa4:	mov	x3, x28
   31fa8:	mov	x0, x25
   31fac:	bl	6bc0 <__asan_backtrace_free@plt>
   31fb0:	ldr	x1, [x20], #8
   31fb4:	stp	xzr, xzr, [x19, #88]
   31fb8:	mov	x4, x23
   31fbc:	mov	x3, x28
   31fc0:	mov	x0, x25
   31fc4:	mov	x2, #0x88                  	// #136
   31fc8:	bl	6bc0 <__asan_backtrace_free@plt>
   31fcc:	cmp	x20, x21
   31fd0:	b.ne	31f58 <__asan_backtrace_dwarf_add@@Base+0x168>  // b.any
   31fd4:	ldp	x5, x4, [sp, #360]
   31fd8:	mov	x3, x23
   31fdc:	ldr	x1, [sp, #256]
   31fe0:	mov	x2, x28
   31fe4:	mov	x0, x25
   31fe8:	add	x4, x4, x5
   31fec:	stp	xzr, x4, [sp, #360]
   31ff0:	bl	6910 <__asan_backtrace_vector_release@plt>
   31ff4:	ldr	x0, [sp, #400]
   31ff8:	cbnz	x0, 32430 <__asan_backtrace_dwarf_add@@Base+0x640>
   31ffc:	mov	w0, #0x0                   	// #0
   32000:	ldp	x29, x30, [sp, #48]
   32004:	ldp	x19, x20, [sp, #64]
   32008:	ldp	x21, x22, [sp, #80]
   3200c:	ldp	x23, x24, [sp, #96]
   32010:	ldp	x25, x26, [sp, #112]
   32014:	ldp	x27, x28, [sp, #128]
   32018:	add	sp, sp, #0x380
   3201c:	ret
   32020:	ldr	x0, [sp, #456]
   32024:	sub	x1, x1, x2
   32028:	str	x1, [sp, #464]
   3202c:	cmp	x2, #0x1
   32030:	add	x1, x0, x2
   32034:	str	x1, [sp, #456]
   32038:	b.hi	32088 <__asan_backtrace_dwarf_add@@Base+0x298>  // b.pmore
   3203c:	ldr	w1, [sp, #560]
   32040:	ldp	x4, x5, [sp, #504]
   32044:	cbz	w1, 323d0 <__asan_backtrace_dwarf_add@@Base+0x5e0>
   32048:	add	x19, sp, #0x2b8
   3204c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32050:	ldr	x0, [sp, #520]
   32054:	add	x2, x20, #0x670
   32058:	mov	x1, #0xc8                  	// #200
   3205c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32060:	sub	w5, w0, w5
   32064:	add	x3, x3, #0x930
   32068:	mov	x0, x19
   3206c:	bl	6a20 <snprintf@plt>
   32070:	ldr	x3, [sp, #544]
   32074:	mov	x1, x19
   32078:	ldr	x0, [sp, #552]
   3207c:	mov	w2, #0x0                   	// #0
   32080:	blr	x3
   32084:	b	31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   32088:	add	x2, x0, #0x2
   3208c:	str	x2, [sp, #520]
   32090:	ldr	x2, [sp, #152]
   32094:	ldr	w1, [sp, #536]
   32098:	sub	x2, x2, #0x2
   3209c:	str	x2, [sp, #528]
   320a0:	cbz	w1, 32374 <__asan_backtrace_dwarf_add@@Base+0x584>
   320a4:	ldrb	w1, [x0]
   320a8:	ldrb	w0, [x0, #1]
   320ac:	bfi	w0, w1, #8, #24
   320b0:	str	w0, [sp, #172]
   320b4:	ldr	w0, [sp, #172]
   320b8:	sub	w0, w0, #0x2
   320bc:	cmp	w0, #0x2
   320c0:	b.hi	32d34 <__asan_backtrace_dwarf_add@@Base+0xf44>  // b.pmore
   320c4:	ldr	x4, [sp, #256]
   320c8:	mov	x3, x23
   320cc:	mov	x2, x28
   320d0:	mov	x0, x25
   320d4:	mov	x1, #0x8                   	// #8
   320d8:	bl	6840 <__asan_backtrace_vector_grow@plt>
   320dc:	mov	x19, x0
   320e0:	cbz	x0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   320e4:	mov	x3, x23
   320e8:	mov	x2, x28
   320ec:	mov	x0, x25
   320f0:	mov	x1, #0x88                  	// #136
   320f4:	bl	68c0 <__asan_backtrace_alloc@plt>
   320f8:	mov	x22, x0
   320fc:	cbz	x0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   32100:	ldr	x0, [sp, #176]
   32104:	str	x22, [x19]
   32108:	mov	x2, #0x10                  	// #16
   3210c:	mov	w1, #0x0                   	// #0
   32110:	add	x0, x0, #0x1
   32114:	str	x0, [sp, #176]
   32118:	add	x0, x22, #0x58
   3211c:	bl	6860 <__asan_internal_memset@plt>
   32120:	ldr	w0, [sp, #344]
   32124:	cbz	w0, 32340 <__asan_backtrace_dwarf_add@@Base+0x550>
   32128:	ldr	x0, [sp, #160]
   3212c:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   32130:	stp	xzr, xzr, [x22, #88]
   32134:	ldr	x1, [sp, #184]
   32138:	cmp	x1, x0
   3213c:	b.ls	3235c <__asan_backtrace_dwarf_add@@Base+0x56c>  // b.plast
   32140:	ldr	x3, [sp, #272]
   32144:	mov	x4, x1
   32148:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3214c:	add	x1, x1, #0x970
   32150:	add	x2, x3, x0
   32154:	sub	x0, x4, x0
   32158:	add	x4, sp, #0x238
   3215c:	str	x28, [sp, #608]
   32160:	str	x23, [sp, #616]
   32164:	add	x20, sp, #0x2b8
   32168:	str	wzr, [sp, #624]
   3216c:	add	x26, sp, #0x278
   32170:	stp	x2, x0, [x4, #16]
   32174:	add	x2, sp, #0x2d0
   32178:	ldr	w0, [sp, #928]
   3217c:	str	w0, [sp, #600]
   32180:	add	x0, sp, #0x2d0
   32184:	stp	x1, x3, [x4]
   32188:	add	x19, sp, #0x238
   3218c:	mov	x21, #0x0                   	// #0
   32190:	ldp	x0, x1, [x0, #-152]
   32194:	stp	x0, x1, [x2, #-88]
   32198:	ldp	x0, x1, [x2, #-136]
   3219c:	stp	x0, x1, [x2, #-72]
   321a0:	ldp	x0, x1, [x2, #-120]
   321a4:	stp	x0, x1, [x2, #-56]
   321a8:	ldr	x24, [sp, #248]
   321ac:	str	x22, [sp, #208]
   321b0:	ldp	x0, x1, [x2, #-104]
   321b4:	stp	x0, x1, [x2, #-40]
   321b8:	str	x19, [sp, #224]
   321bc:	str	x26, [sp, #280]
   321c0:	adrp	x6, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   321c4:	add	x22, x6, #0x670
   321c8:	str	x26, [sp, #200]
   321cc:	mov	x26, x21
   321d0:	mov	x21, x22
   321d4:	mov	w2, #0x0                   	// #0
   321d8:	mov	w27, #0x0                   	// #0
   321dc:	mov	x19, #0x0                   	// #0
   321e0:	ldr	x0, [sp, #656]
   321e4:	ldr	x1, [sp, #648]
   321e8:	cbnz	x0, 32238 <__asan_backtrace_dwarf_add@@Base+0x448>
   321ec:	ldr	w0, [sp, #688]
   321f0:	cbnz	w0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   321f4:	ldr	x4, [sp, #632]
   321f8:	add	x19, sp, #0x2b8
   321fc:	ldr	x5, [sp, #640]
   32200:	mov	x0, x19
   32204:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32208:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3220c:	sub	w5, w1, w5
   32210:	add	x3, x3, #0x660
   32214:	add	x2, x2, #0x670
   32218:	mov	x1, #0xc8                  	// #200
   3221c:	bl	6a20 <snprintf@plt>
   32220:	ldr	x3, [sp, #672]
   32224:	mov	x1, x19
   32228:	ldr	x0, [sp, #680]
   3222c:	mov	w2, #0x0                   	// #0
   32230:	blr	x3
   32234:	b	31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   32238:	sub	x0, x0, #0x1
   3223c:	add	x5, x1, #0x1
   32240:	str	x5, [sp, #648]
   32244:	cmp	w27, #0x3f
   32248:	str	x0, [sp, #656]
   3224c:	ldrb	w22, [x1]
   32250:	b.hi	32300 <__asan_backtrace_dwarf_add@@Base+0x510>  // b.pmore
   32254:	and	x0, x22, #0x7f
   32258:	lsl	x0, x0, x27
   3225c:	orr	x19, x19, x0
   32260:	add	w27, w27, #0x7
   32264:	tbnz	w22, #7, 321e0 <__asan_backtrace_dwarf_add@@Base+0x3f0>
   32268:	mov	x21, x26
   3226c:	ldr	w27, [sp, #688]
   32270:	ldr	x26, [sp, #200]
   32274:	cbz	x19, 3262c <__asan_backtrace_dwarf_add@@Base+0x83c>
   32278:	cbnz	w27, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   3227c:	mov	x0, x26
   32280:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   32284:	ldr	x0, [sp, #656]
   32288:	add	x21, x21, #0x1
   3228c:	ldr	x6, [sp, #648]
   32290:	cbnz	x0, 32534 <__asan_backtrace_dwarf_add@@Base+0x744>
   32294:	ldr	w1, [sp, #688]
   32298:	cbz	w1, 32454 <__asan_backtrace_dwarf_add@@Base+0x664>
   3229c:	mov	x27, x26
   322a0:	mov	x26, x23
   322a4:	mov	x23, x21
   322a8:	adrp	x22, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   322ac:	add	x22, x22, #0x670
   322b0:	mov	x2, x22
   322b4:	mov	x7, #0x0                   	// #0
   322b8:	mov	x22, x7
   322bc:	mov	x7, x27
   322c0:	mov	x27, x26
   322c4:	mov	x26, x25
   322c8:	mov	x25, x23
   322cc:	mov	x23, x2
   322d0:	mov	w1, #0x0                   	// #0
   322d4:	mov	w19, #0x0                   	// #0
   322d8:	cbnz	x0, 324f8 <__asan_backtrace_dwarf_add@@Base+0x708>
   322dc:	ldr	w0, [sp, #688]
   322e0:	mov	x21, x25
   322e4:	mov	x23, x27
   322e8:	mov	x25, x26
   322ec:	mov	x26, x7
   322f0:	cbz	w0, 324b0 <__asan_backtrace_dwarf_add@@Base+0x6c0>
   322f4:	mov	x0, x26
   322f8:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   322fc:	b	321c0 <__asan_backtrace_dwarf_add@@Base+0x3d0>
   32300:	cbnz	w2, 32260 <__asan_backtrace_dwarf_add@@Base+0x470>
   32304:	ldr	x4, [sp, #632]
   32308:	mov	x3, x24
   3230c:	ldr	x6, [sp, #640]
   32310:	mov	x2, x21
   32314:	mov	x1, #0xc8                  	// #200
   32318:	mov	x0, x20
   3231c:	sub	w5, w5, w6
   32320:	bl	6a20 <snprintf@plt>
   32324:	ldr	x4, [sp, #672]
   32328:	mov	w2, #0x0                   	// #0
   3232c:	ldr	x0, [sp, #680]
   32330:	mov	x1, x20
   32334:	blr	x4
   32338:	mov	w2, #0x1                   	// #1
   3233c:	b	32260 <__asan_backtrace_dwarf_add@@Base+0x470>
   32340:	ldr	x0, [sp, #160]
   32344:	bl	2ead8 <__sanitizer_set_death_callback@@Base+0x23f0>
   32348:	stp	xzr, xzr, [x22, #88]
   3234c:	mov	w0, w0
   32350:	ldr	x1, [sp, #184]
   32354:	cmp	x1, x0
   32358:	b.hi	32140 <__asan_backtrace_dwarf_add@@Base+0x350>  // b.pmore
   3235c:	mov	x0, x23
   32360:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32364:	mov	w2, #0x0                   	// #0
   32368:	add	x1, x1, #0x950
   3236c:	blr	x28
   32370:	b	31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   32374:	ldrb	w1, [x0, #1]
   32378:	ldrb	w0, [x0]
   3237c:	bfi	w0, w1, #8, #24
   32380:	str	w0, [sp, #172]
   32384:	b	320b4 <__asan_backtrace_dwarf_add@@Base+0x2c4>
   32388:	ldp	x4, x1, [sp, #440]
   3238c:	add	x19, sp, #0x2b8
   32390:	ldr	x5, [sp, #456]
   32394:	mov	x0, x19
   32398:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3239c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   323a0:	add	x3, x3, #0x660
   323a4:	add	x2, x2, #0x670
   323a8:	sub	w5, w5, w1
   323ac:	mov	x1, #0xc8                  	// #200
   323b0:	bl	6a20 <snprintf@plt>
   323b4:	ldp	x3, x0, [sp, #480]
   323b8:	mov	x1, x19
   323bc:	mov	w2, #0x0                   	// #0
   323c0:	blr	x3
   323c4:	mov	w0, #0x1                   	// #1
   323c8:	str	w0, [sp, #496]
   323cc:	b	31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   323d0:	add	x19, sp, #0x2b8
   323d4:	sub	w5, w0, w5
   323d8:	mov	x1, #0xc8                  	// #200
   323dc:	mov	x0, x19
   323e0:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   323e4:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   323e8:	add	x3, x3, #0x660
   323ec:	add	x2, x20, #0x670
   323f0:	bl	6a20 <snprintf@plt>
   323f4:	ldr	x3, [sp, #544]
   323f8:	mov	x1, x19
   323fc:	ldr	x0, [sp, #552]
   32400:	mov	w2, #0x0                   	// #0
   32404:	blr	x3
   32408:	mov	w0, #0x1                   	// #1
   3240c:	str	w0, [sp, #560]
   32410:	ldp	x4, x5, [sp, #504]
   32414:	b	32050 <__asan_backtrace_dwarf_add@@Base+0x260>
   32418:	mov	x0, x19
   3241c:	bl	2ebb0 <__sanitizer_set_death_callback@@Base+0x24c8>
   32420:	mov	w1, #0x1                   	// #1
   32424:	str	x0, [sp, #152]
   32428:	str	w1, [sp, #344]
   3242c:	b	31efc <__asan_backtrace_dwarf_add@@Base+0x10c>
   32430:	ldp	x5, x4, [sp, #384]
   32434:	mov	x3, x23
   32438:	ldr	x1, [sp, #232]
   3243c:	mov	x2, x28
   32440:	mov	x0, x25
   32444:	add	x4, x4, x5
   32448:	stp	xzr, x4, [sp, #384]
   3244c:	bl	6910 <__asan_backtrace_vector_release@plt>
   32450:	b	31ffc <__asan_backtrace_dwarf_add@@Base+0x20c>
   32454:	ldr	x4, [sp, #632]
   32458:	mov	x1, #0xc8                  	// #200
   3245c:	ldr	x5, [sp, #640]
   32460:	mov	x0, x20
   32464:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32468:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3246c:	sub	w5, w6, w5
   32470:	add	x3, x3, #0x660
   32474:	add	x2, x2, #0x670
   32478:	bl	6a20 <snprintf@plt>
   3247c:	ldr	x3, [sp, #672]
   32480:	mov	x1, x20
   32484:	ldr	x0, [sp, #680]
   32488:	mov	w2, #0x0                   	// #0
   3248c:	mov	x27, x26
   32490:	mov	x26, x23
   32494:	mov	x23, x21
   32498:	blr	x3
   3249c:	mov	w0, #0x1                   	// #1
   324a0:	str	w0, [sp, #688]
   324a4:	ldr	x6, [sp, #648]
   324a8:	ldr	x0, [sp, #656]
   324ac:	b	322a8 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   324b0:	ldr	x4, [sp, #632]
   324b4:	mov	x1, #0xc8                  	// #200
   324b8:	ldr	x5, [sp, #640]
   324bc:	mov	x0, x20
   324c0:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   324c4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   324c8:	add	x3, x3, #0x660
   324cc:	add	x2, x2, #0x670
   324d0:	sub	w5, w6, w5
   324d4:	bl	6a20 <snprintf@plt>
   324d8:	ldr	x3, [sp, #672]
   324dc:	mov	x1, x20
   324e0:	ldr	x0, [sp, #680]
   324e4:	mov	w2, #0x0                   	// #0
   324e8:	blr	x3
   324ec:	mov	w0, #0x1                   	// #1
   324f0:	str	w0, [sp, #688]
   324f4:	b	322f4 <__asan_backtrace_dwarf_add@@Base+0x504>
   324f8:	sub	x0, x0, #0x1
   324fc:	add	x5, x6, #0x1
   32500:	str	x5, [sp, #648]
   32504:	cmp	w19, #0x3f
   32508:	str	x0, [sp, #656]
   3250c:	ldrb	w21, [x6]
   32510:	b.hi	32554 <__asan_backtrace_dwarf_add@@Base+0x764>  // b.pmore
   32514:	and	x0, x21, #0x7f
   32518:	lsl	x0, x0, x19
   3251c:	orr	x22, x22, x0
   32520:	add	w19, w19, #0x7
   32524:	tbz	w21, #7, 325a0 <__asan_backtrace_dwarf_add@@Base+0x7b0>
   32528:	ldr	x6, [sp, #648]
   3252c:	ldr	x0, [sp, #656]
   32530:	b	322d8 <__asan_backtrace_dwarf_add@@Base+0x4e8>
   32534:	add	x6, x6, #0x1
   32538:	sub	x0, x0, #0x1
   3253c:	mov	x27, x26
   32540:	mov	x26, x23
   32544:	mov	x23, x21
   32548:	str	x6, [sp, #648]
   3254c:	str	x0, [sp, #656]
   32550:	b	322a8 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   32554:	cbnz	w1, 32520 <__asan_backtrace_dwarf_add@@Base+0x730>
   32558:	ldr	x4, [sp, #632]
   3255c:	mov	x3, x24
   32560:	ldr	x6, [sp, #640]
   32564:	mov	x2, x23
   32568:	mov	x1, #0xc8                  	// #200
   3256c:	mov	x0, x20
   32570:	sub	w5, w5, w6
   32574:	str	x7, [sp, #200]
   32578:	bl	6a20 <snprintf@plt>
   3257c:	add	w19, w19, #0x7
   32580:	ldr	x4, [sp, #672]
   32584:	mov	x1, x20
   32588:	ldr	x0, [sp, #680]
   3258c:	mov	w2, #0x0                   	// #0
   32590:	blr	x4
   32594:	mov	w1, #0x1                   	// #1
   32598:	ldr	x7, [sp, #200]
   3259c:	tbnz	w21, #7, 32528 <__asan_backtrace_dwarf_add@@Base+0x738>
   325a0:	mov	x23, x25
   325a4:	mov	x25, x26
   325a8:	mov	x26, x27
   325ac:	mov	x27, x7
   325b0:	cbz	x22, 32db8 <__asan_backtrace_dwarf_add@@Base+0xfc8>
   325b4:	ldr	x6, [sp, #648]
   325b8:	adrp	x22, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   325bc:	ldr	x0, [sp, #656]
   325c0:	add	x22, x22, #0x670
   325c4:	mov	w1, #0x0                   	// #0
   325c8:	mov	w19, #0x0                   	// #0
   325cc:	nop
   325d0:	cbnz	x0, 32d44 <__asan_backtrace_dwarf_add@@Base+0xf54>
   325d4:	ldr	w1, [sp, #688]
   325d8:	cbnz	w1, 322a8 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   325dc:	ldr	x4, [sp, #632]
   325e0:	mov	x1, #0xc8                  	// #200
   325e4:	ldr	x5, [sp, #640]
   325e8:	mov	x0, x20
   325ec:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   325f0:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   325f4:	sub	w5, w6, w5
   325f8:	add	x3, x3, #0x660
   325fc:	add	x2, x2, #0x670
   32600:	bl	6a20 <snprintf@plt>
   32604:	ldr	x3, [sp, #672]
   32608:	mov	x1, x20
   3260c:	ldr	x0, [sp, #680]
   32610:	mov	w2, #0x0                   	// #0
   32614:	blr	x3
   32618:	mov	w0, #0x1                   	// #1
   3261c:	str	w0, [sp, #688]
   32620:	ldr	x6, [sp, #648]
   32624:	ldr	x0, [sp, #656]
   32628:	b	322a8 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   3262c:	str	x19, [sp, #328]
   32630:	ldr	x22, [sp, #208]
   32634:	ldr	x19, [sp, #224]
   32638:	cbnz	w27, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   3263c:	cbz	x21, 3291c <__asan_backtrace_dwarf_add@@Base+0xb2c>
   32640:	lsl	x20, x21, #5
   32644:	mov	x3, x23
   32648:	mov	x1, x20
   3264c:	mov	x2, x28
   32650:	mov	x0, x25
   32654:	bl	68c0 <__asan_backtrace_alloc@plt>
   32658:	str	x0, [x22, #96]
   3265c:	cbz	x0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   32660:	str	x21, [x22, #88]
   32664:	mov	x2, x20
   32668:	mov	w1, #0x0                   	// #0
   3266c:	bl	6860 <__asan_internal_memset@plt>
   32670:	ldr	w0, [sp, #624]
   32674:	cbnz	w0, 32d08 <__asan_backtrace_dwarf_add@@Base+0xf18>
   32678:	str	x22, [sp, #264]
   3267c:	add	x21, sp, #0x2b8
   32680:	str	x28, [sp, #944]
   32684:	mov	x26, #0x0                   	// #0
   32688:	ldr	x28, [sp, #248]
   3268c:	str	x25, [sp, #288]
   32690:	ldr	x22, [sp, #280]
   32694:	str	w27, [sp, #348]
   32698:	str	x23, [sp, #952]
   3269c:	nop
   326a0:	mov	x0, x19
   326a4:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   326a8:	mov	x25, x0
   326ac:	cbz	x0, 328f4 <__asan_backtrace_dwarf_add@@Base+0xb04>
   326b0:	mov	x0, x19
   326b4:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   326b8:	ldr	x1, [sp, #592]
   326bc:	mov	x27, x0
   326c0:	ldr	x0, [sp, #584]
   326c4:	cbnz	x1, 328dc <__asan_backtrace_dwarf_add@@Base+0xaec>
   326c8:	ldr	w24, [sp, #624]
   326cc:	cbz	w24, 32c3c <__asan_backtrace_dwarf_add@@Base+0xe4c>
   326d0:	mov	w24, #0x0                   	// #0
   326d4:	ldp	x0, x1, [x19, #16]
   326d8:	stp	x0, x1, [x22, #16]
   326dc:	mov	x20, #0x0                   	// #0
   326e0:	ldp	x2, x3, [x19]
   326e4:	stp	x2, x3, [x22]
   326e8:	ldp	x2, x3, [x19, #32]
   326ec:	stp	x2, x3, [x22, #32]
   326f0:	ldp	x2, x3, [x19, #48]
   326f4:	stp	x2, x3, [x22, #48]
   326f8:	ldr	x1, [sp, #656]
   326fc:	stp	x19, x22, [sp, #200]
   32700:	mov	x19, x20
   32704:	mov	x22, x28
   32708:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3270c:	add	x20, x20, #0x670
   32710:	mov	w7, w24
   32714:	mov	x24, x19
   32718:	mov	x19, x20
   3271c:	mov	w2, #0x0                   	// #0
   32720:	mov	x28, #0x0                   	// #0
   32724:	mov	w23, #0x0                   	// #0
   32728:	cbnz	x1, 328a0 <__asan_backtrace_dwarf_add@@Base+0xab0>
   3272c:	ldr	w1, [sp, #688]
   32730:	mov	x20, x24
   32734:	mov	x28, x22
   32738:	mov	w24, w7
   3273c:	ldp	x19, x22, [sp, #200]
   32740:	cbz	w1, 327f0 <__asan_backtrace_dwarf_add@@Base+0xa00>
   32744:	cbnz	x20, 32838 <__asan_backtrace_dwarf_add@@Base+0xa48>
   32748:	mov	x23, #0x0                   	// #0
   3274c:	mov	x0, x19
   32750:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   32754:	mov	x0, x19
   32758:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   3275c:	ldr	x0, [sp, #264]
   32760:	ldr	w3, [sp, #624]
   32764:	ldr	x1, [x0, #96]
   32768:	add	x0, x1, x26
   3276c:	str	x25, [x1, x26]
   32770:	add	x26, x26, #0x20
   32774:	stp	w27, w24, [x0, #8]
   32778:	stp	x20, x23, [x0, #16]
   3277c:	cbz	w3, 326a0 <__asan_backtrace_dwarf_add@@Base+0x8b0>
   32780:	ldr	x22, [sp, #264]
   32784:	ldr	x25, [sp, #288]
   32788:	ldr	x28, [sp, #944]
   3278c:	ldr	x23, [sp, #952]
   32790:	ldr	x2, [x22, #88]
   32794:	cbz	x2, 327d8 <__asan_backtrace_dwarf_add@@Base+0x9e8>
   32798:	ldr	x19, [sp, #328]
   3279c:	b	327a4 <__asan_backtrace_dwarf_add@@Base+0x9b4>
   327a0:	ldr	x1, [x22, #96]
   327a4:	add	x1, x1, x19, lsl #5
   327a8:	mov	x4, x23
   327ac:	mov	x3, x28
   327b0:	mov	x0, x25
   327b4:	add	x19, x19, #0x1
   327b8:	ldp	x2, x1, [x1, #16]
   327bc:	lsl	x2, x2, #3
   327c0:	bl	6bc0 <__asan_backtrace_free@plt>
   327c4:	ldr	x2, [x22, #88]
   327c8:	cmp	x19, x2
   327cc:	b.cc	327a0 <__asan_backtrace_dwarf_add@@Base+0x9b0>  // b.lo, b.ul, b.last
   327d0:	ldr	x1, [x22, #96]
   327d4:	lsl	x2, x2, #5
   327d8:	mov	x4, x23
   327dc:	mov	x3, x28
   327e0:	mov	x0, x25
   327e4:	bl	6bc0 <__asan_backtrace_free@plt>
   327e8:	stp	xzr, xzr, [x22, #88]
   327ec:	b	31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   327f0:	ldr	x4, [sp, #632]
   327f4:	mov	x1, #0xc8                  	// #200
   327f8:	ldr	x5, [sp, #640]
   327fc:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32800:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32804:	add	x3, x3, #0x660
   32808:	sub	w5, w0, w5
   3280c:	add	x2, x2, #0x670
   32810:	mov	x0, x21
   32814:	bl	6a20 <snprintf@plt>
   32818:	ldr	x3, [sp, #672]
   3281c:	mov	x1, x21
   32820:	ldr	x0, [sp, #680]
   32824:	mov	w2, #0x0                   	// #0
   32828:	blr	x3
   3282c:	mov	w0, #0x1                   	// #1
   32830:	str	w0, [sp, #688]
   32834:	cbz	x20, 32748 <__asan_backtrace_dwarf_add@@Base+0x958>
   32838:	ldr	x0, [sp, #288]
   3283c:	lsl	x1, x20, #3
   32840:	ldr	x2, [sp, #944]
   32844:	ldr	x3, [sp, #952]
   32848:	bl	68c0 <__asan_backtrace_alloc@plt>
   3284c:	cbz	x0, 32d1c <__asan_backtrace_dwarf_add@@Base+0xf2c>
   32850:	mov	x23, x19
   32854:	mov	x20, #0x0                   	// #0
   32858:	str	x21, [sp, #200]
   3285c:	mov	x21, x0
   32860:	b	32878 <__asan_backtrace_dwarf_add@@Base+0xa88>
   32864:	fmov	d0, x19
   32868:	mov	v0.d[1], x0
   3286c:	xtn	v0.2s, v0.2d
   32870:	str	d0, [x21, x20, lsl #3]
   32874:	add	x20, x20, #0x1
   32878:	mov	x0, x23
   3287c:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   32880:	mov	x19, x0
   32884:	mov	x0, x23
   32888:	bl	2e740 <__sanitizer_set_death_callback@@Base+0x2058>
   3288c:	cbnz	x19, 32864 <__asan_backtrace_dwarf_add@@Base+0xa74>
   32890:	mov	x19, x23
   32894:	mov	x23, x21
   32898:	ldr	x21, [sp, #200]
   3289c:	b	3275c <__asan_backtrace_dwarf_add@@Base+0x96c>
   328a0:	sub	x1, x1, #0x1
   328a4:	add	x5, x0, #0x1
   328a8:	str	x5, [sp, #648]
   328ac:	cmp	w23, #0x3f
   328b0:	str	x1, [sp, #656]
   328b4:	ldrb	w20, [x0]
   328b8:	b.hi	32b68 <__asan_backtrace_dwarf_add@@Base+0xd78>  // b.pmore
   328bc:	and	x0, x20, #0x7f
   328c0:	lsl	x0, x0, x23
   328c4:	orr	x28, x28, x0
   328c8:	add	w23, w23, #0x7
   328cc:	tbz	w20, #7, 32bb4 <__asan_backtrace_dwarf_add@@Base+0xdc4>
   328d0:	ldr	x0, [sp, #648]
   328d4:	ldr	x1, [sp, #656]
   328d8:	b	32728 <__asan_backtrace_dwarf_add@@Base+0x938>
   328dc:	sub	x1, x1, #0x1
   328e0:	str	x1, [sp, #592]
   328e4:	add	x1, x0, #0x1
   328e8:	str	x1, [sp, #584]
   328ec:	ldrb	w24, [x0]
   328f0:	b	326d4 <__asan_backtrace_dwarf_add@@Base+0x8e4>
   328f4:	ldr	x22, [sp, #264]
   328f8:	adrp	x3, 2e000 <__sanitizer_set_death_callback@@Base+0x1918>
   328fc:	ldr	w27, [sp, #348]
   32900:	add	x3, x3, #0x3d8
   32904:	mov	x2, #0x20                  	// #32
   32908:	ldp	x1, x0, [x22, #88]
   3290c:	ldr	x25, [sp, #288]
   32910:	ldr	x28, [sp, #944]
   32914:	ldr	x23, [sp, #952]
   32918:	bl	66b0 <__asan_backtrace_qsort@plt>
   3291c:	ldr	x1, [sp, #528]
   32920:	ldr	x5, [sp, #520]
   32924:	cbnz	x1, 32b48 <__asan_backtrace_dwarf_add@@Base+0xd58>
   32928:	ldr	w0, [sp, #560]
   3292c:	add	x19, sp, #0x2b8
   32930:	cbz	w0, 32c84 <__asan_backtrace_dwarf_add@@Base+0xe94>
   32934:	ldr	w8, [sp, #344]
   32938:	ldr	x4, [sp, #232]
   3293c:	cmp	w8, #0x0
   32940:	ldr	x0, [sp, #936]
   32944:	stp	x4, x19, [sp, #32]
   32948:	mov	x4, #0x4                   	// #4
   3294c:	stp	x0, x28, [sp]
   32950:	mov	x0, #0xc                   	// #12
   32954:	csel	x0, x0, x4, ne  // ne = any
   32958:	stp	x23, x22, [sp, #16]
   3295c:	ldr	w7, [sp, #928]
   32960:	ldr	x4, [sp, #152]
   32964:	stp	x5, x1, [x22]
   32968:	ldr	x1, [sp, #192]
   3296c:	add	x0, x0, x4
   32970:	ldr	x2, [sp, #216]
   32974:	add	x0, x1, x0
   32978:	stp	x1, x0, [x22, #24]
   3297c:	sub	x3, x5, x2
   32980:	str	x3, [x22, #16]
   32984:	str	x0, [sp, #192]
   32988:	ldr	w0, [sp, #172]
   3298c:	ldr	x2, [sp, #160]
   32990:	str	w0, [x22, #40]
   32994:	ldr	x1, [sp, #240]
   32998:	stp	w8, w27, [x22, #44]
   3299c:	ldr	x5, [sp, #896]
   329a0:	str	xzr, [x22, #56]
   329a4:	ldr	x6, [sp, #904]
   329a8:	stp	xzr, xzr, [x22, #64]
   329ac:	mov	x0, x25
   329b0:	ldr	x3, [sp, #912]
   329b4:	str	xzr, [x22, #80]
   329b8:	ldr	x4, [sp, #920]
   329bc:	stp	xzr, xzr, [x22, #104]
   329c0:	stp	xzr, xzr, [x22, #120]
   329c4:	bl	2f8c0 <__sanitizer_set_death_callback@@Base+0x31d8>
   329c8:	cbz	w0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   329cc:	ldr	w0, [sp, #560]
   329d0:	cbnz	w0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   329d4:	ldr	x0, [sp, #464]
   329d8:	cbnz	x0, 31ec8 <__asan_backtrace_dwarf_add@@Base+0xd8>
   329dc:	ldr	w0, [sp, #496]
   329e0:	cbnz	w0, 31f48 <__asan_backtrace_dwarf_add@@Base+0x158>
   329e4:	ldr	x1, [sp, #232]
   329e8:	add	x4, sp, #0x200
   329ec:	ldp	x2, x3, [sp, #352]
   329f0:	ldr	x0, [sp, #368]
   329f4:	str	x0, [sp, #424]
   329f8:	ldr	x0, [sp, #176]
   329fc:	stp	x2, x3, [x4, #-104]
   32a00:	mov	x3, x23
   32a04:	mov	x2, x28
   32a08:	str	x0, [sp, #432]
   32a0c:	mov	x0, x25
   32a10:	bl	6910 <__asan_backtrace_vector_release@plt>
   32a14:	cbz	w0, 31ffc <__asan_backtrace_dwarf_add@@Base+0x20c>
   32a18:	ldr	x1, [sp, #336]
   32a1c:	mov	x3, x23
   32a20:	mov	x2, x28
   32a24:	mov	x0, x25
   32a28:	bl	6910 <__asan_backtrace_vector_release@plt>
   32a2c:	cbz	w0, 31ffc <__asan_backtrace_dwarf_add@@Base+0x20c>
   32a30:	ldp	x20, x24, [sp, #400]
   32a34:	mov	x2, #0x18                  	// #24
   32a38:	ldr	x21, [sp, #376]
   32a3c:	adrp	x3, 2e000 <__sanitizer_set_death_callback@@Base+0x1918>
   32a40:	add	x3, x3, #0x3f8
   32a44:	mov	x0, x21
   32a48:	mov	x1, x20
   32a4c:	ldr	x22, [sp, #432]
   32a50:	bl	66b0 <__asan_backtrace_qsort@plt>
   32a54:	mov	x3, x23
   32a58:	mov	x2, x28
   32a5c:	mov	x0, x25
   32a60:	mov	x1, #0xa0                  	// #160
   32a64:	bl	68c0 <__asan_backtrace_alloc@plt>
   32a68:	mov	x19, x0
   32a6c:	cbz	x0, 31ffc <__asan_backtrace_dwarf_add@@Base+0x20c>
   32a70:	ldr	x3, [sp, #936]
   32a74:	stp	xzr, x3, [x19]
   32a78:	add	x0, x0, #0x80
   32a7c:	ldr	x3, [sp, #240]
   32a80:	str	x3, [x19, #16]
   32a84:	ldr	x3, [sp, #296]
   32a88:	str	x3, [x19, #56]
   32a8c:	ldr	x3, [sp, #304]
   32a90:	str	x3, [x19, #64]
   32a94:	ldr	x3, [sp, #312]
   32a98:	str	x3, [x19, #72]
   32a9c:	ldr	x3, [sp, #320]
   32aa0:	str	x3, [x19, #80]
   32aa4:	ldr	x3, [sp, #896]
   32aa8:	str	x3, [x19, #88]
   32aac:	ldr	x3, [sp, #904]
   32ab0:	str	x3, [x19, #96]
   32ab4:	ldr	x3, [sp, #912]
   32ab8:	str	x3, [x19, #104]
   32abc:	ldr	x3, [sp, #920]
   32ac0:	str	x3, [x19, #112]
   32ac4:	ldr	w3, [sp, #928]
   32ac8:	mov	x2, #0x20                  	// #32
   32acc:	stp	x21, x20, [x19, #24]
   32ad0:	mov	w1, #0x0                   	// #0
   32ad4:	stp	x24, x22, [x19, #40]
   32ad8:	str	w3, [x19, #120]
   32adc:	bl	6860 <__asan_internal_memset@plt>
   32ae0:	ldr	x0, [sp, #968]
   32ae4:	cbz	x0, 32aec <__asan_backtrace_dwarf_add@@Base+0xcfc>
   32ae8:	str	x19, [x0]
   32aec:	ldr	w0, [x25, #8]
   32af0:	add	x2, x25, #0x20
   32af4:	cbnz	w0, 32cf0 <__asan_backtrace_dwarf_add@@Base+0xf00>
   32af8:	ldr	x0, [x25, #32]
   32afc:	cbz	x0, 32b10 <__asan_backtrace_dwarf_add@@Base+0xd20>
   32b00:	mov	x1, x0
   32b04:	ldr	x0, [x0]
   32b08:	cbnz	x0, 32b00 <__asan_backtrace_dwarf_add@@Base+0xd10>
   32b0c:	mov	x2, x1
   32b10:	str	x19, [x2]
   32b14:	ldr	x2, [sp, #960]
   32b18:	adrp	x1, 31000 <__sanitizer_set_death_callback@@Base+0x4918>
   32b1c:	add	x1, x1, #0xcd0
   32b20:	mov	w0, #0x1                   	// #1
   32b24:	ldp	x29, x30, [sp, #48]
   32b28:	str	x1, [x2]
   32b2c:	ldp	x19, x20, [sp, #64]
   32b30:	ldp	x21, x22, [sp, #80]
   32b34:	ldp	x23, x24, [sp, #96]
   32b38:	ldp	x25, x26, [sp, #112]
   32b3c:	ldp	x27, x28, [sp, #128]
   32b40:	add	sp, sp, #0x380
   32b44:	ret
   32b48:	add	x0, x5, #0x1
   32b4c:	sub	x1, x1, #0x1
   32b50:	str	x0, [sp, #520]
   32b54:	add	x19, sp, #0x2b8
   32b58:	str	x1, [sp, #528]
   32b5c:	ldrb	w27, [x5]
   32b60:	mov	x5, x0
   32b64:	b	32934 <__asan_backtrace_dwarf_add@@Base+0xb44>
   32b68:	cbnz	w2, 328c8 <__asan_backtrace_dwarf_add@@Base+0xad8>
   32b6c:	ldr	x4, [sp, #632]
   32b70:	mov	x3, x22
   32b74:	ldr	x6, [sp, #640]
   32b78:	mov	x2, x19
   32b7c:	mov	x1, #0xc8                  	// #200
   32b80:	mov	x0, x21
   32b84:	sub	w5, w5, w6
   32b88:	str	w7, [sp, #224]
   32b8c:	bl	6a20 <snprintf@plt>
   32b90:	add	w23, w23, #0x7
   32b94:	ldr	x4, [sp, #672]
   32b98:	mov	w2, #0x0                   	// #0
   32b9c:	ldr	x0, [sp, #680]
   32ba0:	mov	x1, x21
   32ba4:	blr	x4
   32ba8:	ldr	w7, [sp, #224]
   32bac:	mov	w2, #0x1                   	// #1
   32bb0:	tbnz	w20, #7, 328d0 <__asan_backtrace_dwarf_add@@Base+0xae0>
   32bb4:	mov	x19, x24
   32bb8:	mov	w24, w7
   32bbc:	cbz	x28, 32e3c <__asan_backtrace_dwarf_add@@Base+0x104c>
   32bc0:	ldr	x0, [sp, #648]
   32bc4:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32bc8:	ldr	x1, [sp, #656]
   32bcc:	add	x19, x19, #0x1
   32bd0:	add	x20, x2, #0x670
   32bd4:	mov	w23, #0x0                   	// #0
   32bd8:	mov	w2, #0x0                   	// #0
   32bdc:	nop
   32be0:	cbnz	x1, 32dc8 <__asan_backtrace_dwarf_add@@Base+0xfd8>
   32be4:	ldr	w2, [sp, #688]
   32be8:	cbnz	w2, 32708 <__asan_backtrace_dwarf_add@@Base+0x918>
   32bec:	ldr	x4, [sp, #632]
   32bf0:	mov	x1, #0xc8                  	// #200
   32bf4:	ldr	x5, [sp, #640]
   32bf8:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32bfc:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32c00:	add	x3, x3, #0x660
   32c04:	sub	w5, w0, w5
   32c08:	add	x2, x2, #0x670
   32c0c:	mov	x0, x21
   32c10:	bl	6a20 <snprintf@plt>
   32c14:	ldr	x3, [sp, #672]
   32c18:	mov	x1, x21
   32c1c:	ldr	x0, [sp, #680]
   32c20:	mov	w2, #0x0                   	// #0
   32c24:	blr	x3
   32c28:	mov	w0, #0x1                   	// #1
   32c2c:	str	w0, [sp, #688]
   32c30:	ldr	x0, [sp, #648]
   32c34:	ldr	x1, [sp, #656]
   32c38:	b	32708 <__asan_backtrace_dwarf_add@@Base+0x918>
   32c3c:	ldr	x4, [sp, #568]
   32c40:	mov	x1, #0xc8                  	// #200
   32c44:	ldr	x5, [sp, #576]
   32c48:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32c4c:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32c50:	add	x3, x3, #0x660
   32c54:	sub	w5, w0, w5
   32c58:	add	x2, x2, #0x670
   32c5c:	mov	x0, x21
   32c60:	bl	6a20 <snprintf@plt>
   32c64:	ldr	x3, [sp, #608]
   32c68:	mov	x1, x21
   32c6c:	ldr	x0, [sp, #616]
   32c70:	mov	w2, #0x0                   	// #0
   32c74:	blr	x3
   32c78:	mov	w0, #0x1                   	// #1
   32c7c:	str	w0, [sp, #624]
   32c80:	b	326d4 <__asan_backtrace_dwarf_add@@Base+0x8e4>
   32c84:	ldp	x4, x0, [sp, #504]
   32c88:	mov	x1, #0xc8                  	// #200
   32c8c:	adrp	x3, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32c90:	adrp	x2, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32c94:	add	x3, x3, #0x660
   32c98:	add	x2, x2, #0x670
   32c9c:	mov	w27, #0x0                   	// #0
   32ca0:	sub	w5, w5, w0
   32ca4:	mov	x0, x19
   32ca8:	bl	6a20 <snprintf@plt>
   32cac:	ldr	x3, [sp, #544]
   32cb0:	mov	x1, x19
   32cb4:	ldr	x0, [sp, #552]
   32cb8:	mov	w2, #0x0                   	// #0
   32cbc:	blr	x3
   32cc0:	mov	w0, #0x1                   	// #1
   32cc4:	str	w0, [sp, #560]
   32cc8:	ldr	x5, [sp, #520]
   32ccc:	ldr	x1, [sp, #528]
   32cd0:	b	32934 <__asan_backtrace_dwarf_add@@Base+0xb44>
   32cd4:	ldxr	x0, [x1]
   32cd8:	cbnz	x0, 32ce4 <__asan_backtrace_dwarf_add@@Base+0xef4>
   32cdc:	stlxr	w3, x19, [x1]
   32ce0:	cbnz	w3, 32cd4 <__asan_backtrace_dwarf_add@@Base+0xee4>
   32ce4:	dmb	ish
   32ce8:	cmp	x0, #0x0
   32cec:	b.eq	32b14 <__asan_backtrace_dwarf_add@@Base+0xd24>  // b.none
   32cf0:	mov	x1, x2
   32cf4:	b	32cfc <__asan_backtrace_dwarf_add@@Base+0xf0c>
   32cf8:	mov	x1, x0
   32cfc:	ldar	x0, [x1]
   32d00:	cbnz	x0, 32cf8 <__asan_backtrace_dwarf_add@@Base+0xf08>
   32d04:	b	32cd4 <__asan_backtrace_dwarf_add@@Base+0xee4>
   32d08:	ldr	x1, [x22, #96]
   32d0c:	b	32790 <__asan_backtrace_dwarf_add@@Base+0x9a0>
   32d10:	ldr	w0, [sp, #496]
   32d14:	cbz	w0, 329e4 <__asan_backtrace_dwarf_add@@Base+0xbf4>
   32d18:	b	31ff4 <__asan_backtrace_dwarf_add@@Base+0x204>
   32d1c:	ldr	x22, [sp, #264]
   32d20:	ldr	x25, [sp, #288]
   32d24:	ldr	x1, [x22, #96]
   32d28:	ldr	x28, [sp, #944]
   32d2c:	ldr	x23, [sp, #952]
   32d30:	b	32790 <__asan_backtrace_dwarf_add@@Base+0x9a0>
   32d34:	add	x19, sp, #0x2b8
   32d38:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32d3c:	ldp	x4, x5, [sp, #504]
   32d40:	b	32050 <__asan_backtrace_dwarf_add@@Base+0x260>
   32d44:	sub	x0, x0, #0x1
   32d48:	add	x5, x6, #0x1
   32d4c:	str	x5, [sp, #648]
   32d50:	cmp	w19, #0x3f
   32d54:	str	x0, [sp, #656]
   32d58:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
   32d5c:	ldrb	w21, [x6]
   32d60:	b.eq	32d74 <__asan_backtrace_dwarf_add@@Base+0xf84>  // b.none
   32d64:	mov	x6, x5
   32d68:	add	w19, w19, #0x7
   32d6c:	tbnz	w21, #7, 325d0 <__asan_backtrace_dwarf_add@@Base+0x7e0>
   32d70:	b	322a8 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   32d74:	ldr	x4, [sp, #632]
   32d78:	mov	x3, x24
   32d7c:	ldr	x6, [sp, #640]
   32d80:	mov	x2, x22
   32d84:	mov	x1, #0xc8                  	// #200
   32d88:	mov	x0, x20
   32d8c:	sub	w5, w5, w6
   32d90:	bl	6a20 <snprintf@plt>
   32d94:	ldr	x4, [sp, #672]
   32d98:	mov	x1, x20
   32d9c:	ldr	x0, [sp, #680]
   32da0:	mov	w2, #0x0                   	// #0
   32da4:	blr	x4
   32da8:	mov	w1, #0x1                   	// #1
   32dac:	ldr	x6, [sp, #648]
   32db0:	ldr	x0, [sp, #656]
   32db4:	b	32d68 <__asan_backtrace_dwarf_add@@Base+0xf78>
   32db8:	mov	x21, x23
   32dbc:	mov	x23, x26
   32dc0:	mov	x26, x27
   32dc4:	b	322f4 <__asan_backtrace_dwarf_add@@Base+0x504>
   32dc8:	sub	x1, x1, #0x1
   32dcc:	add	x5, x0, #0x1
   32dd0:	str	x5, [sp, #648]
   32dd4:	cmp	w23, #0x3f
   32dd8:	str	x1, [sp, #656]
   32ddc:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
   32de0:	ldrb	w28, [x0]
   32de4:	b.eq	32df8 <__asan_backtrace_dwarf_add@@Base+0x1008>  // b.none
   32de8:	mov	x0, x5
   32dec:	add	w23, w23, #0x7
   32df0:	tbnz	w28, #7, 32be0 <__asan_backtrace_dwarf_add@@Base+0xdf0>
   32df4:	b	32708 <__asan_backtrace_dwarf_add@@Base+0x918>
   32df8:	ldr	x4, [sp, #632]
   32dfc:	mov	x3, x22
   32e00:	ldr	x6, [sp, #640]
   32e04:	mov	x2, x20
   32e08:	mov	x1, #0xc8                  	// #200
   32e0c:	mov	x0, x21
   32e10:	sub	w5, w5, w6
   32e14:	bl	6a20 <snprintf@plt>
   32e18:	ldr	x4, [sp, #672]
   32e1c:	mov	x1, x21
   32e20:	ldr	x0, [sp, #680]
   32e24:	mov	w2, #0x0                   	// #0
   32e28:	blr	x4
   32e2c:	mov	w2, #0x1                   	// #1
   32e30:	ldr	x0, [sp, #648]
   32e34:	ldr	x1, [sp, #656]
   32e38:	b	32dec <__asan_backtrace_dwarf_add@@Base+0xffc>
   32e3c:	mov	x20, x19
   32e40:	mov	x28, x22
   32e44:	ldp	x19, x22, [sp, #200]
   32e48:	b	32744 <__asan_backtrace_dwarf_add@@Base+0x954>
   32e4c:	nop

0000000000032e50 <__asan_backtrace_pcinfo@@Base>:
   32e50:	stp	x29, x30, [sp, #-176]!
   32e54:	mov	x29, sp
   32e58:	stp	x19, x20, [sp, #16]
   32e5c:	mov	x19, x0
   32e60:	ldr	w0, [x0, #8]
   32e64:	stp	x21, x22, [sp, #32]
   32e68:	mov	x22, x3
   32e6c:	stp	x23, x24, [sp, #48]
   32e70:	mov	x23, x1
   32e74:	mov	x24, x2
   32e78:	stp	x27, x28, [sp, #80]
   32e7c:	mov	x28, x4
   32e80:	cbnz	w0, 32f08 <__asan_backtrace_pcinfo@@Base+0xb8>
   32e84:	ldr	w0, [x19, #56]
   32e88:	cbnz	w0, 32ed8 <__asan_backtrace_pcinfo@@Base+0x88>
   32e8c:	ldr	x0, [x19, #24]
   32e90:	str	x0, [sp, #104]
   32e94:	cbz	x0, 32f2c <__asan_backtrace_pcinfo@@Base+0xdc>
   32e98:	ldr	w1, [x19, #56]
   32e9c:	mov	w0, #0x0                   	// #0
   32ea0:	cbnz	w1, 32ec0 <__asan_backtrace_pcinfo@@Base+0x70>
   32ea4:	ldr	x5, [x19, #24]
   32ea8:	mov	x4, x28
   32eac:	mov	x3, x22
   32eb0:	mov	x2, x24
   32eb4:	mov	x1, x23
   32eb8:	mov	x0, x19
   32ebc:	blr	x5
   32ec0:	ldp	x19, x20, [sp, #16]
   32ec4:	ldp	x21, x22, [sp, #32]
   32ec8:	ldp	x23, x24, [sp, #48]
   32ecc:	ldp	x27, x28, [sp, #80]
   32ed0:	ldp	x29, x30, [sp], #176
   32ed4:	ret
   32ed8:	mov	x0, x28
   32edc:	mov	w2, #0xffffffff            	// #-1
   32ee0:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32ee4:	add	x1, x1, #0x9d8
   32ee8:	blr	x22
   32eec:	mov	w0, #0x0                   	// #0
   32ef0:	ldp	x19, x20, [sp, #16]
   32ef4:	ldp	x21, x22, [sp, #32]
   32ef8:	ldp	x23, x24, [sp, #48]
   32efc:	ldp	x27, x28, [sp, #80]
   32f00:	ldp	x29, x30, [sp], #176
   32f04:	ret
   32f08:	add	x0, x19, #0x38
   32f0c:	ldar	w0, [x0]
   32f10:	cbnz	w0, 32ed8 <__asan_backtrace_pcinfo@@Base+0x88>
   32f14:	ldr	w0, [x19, #8]
   32f18:	cbz	w0, 32e8c <__asan_backtrace_pcinfo@@Base+0x3c>
   32f1c:	add	x0, x19, #0x18
   32f20:	ldar	x0, [x0]
   32f24:	str	x0, [sp, #104]
   32f28:	cbnz	x0, 32e98 <__asan_backtrace_pcinfo@@Base+0x48>
   32f2c:	add	x27, sp, #0x64
   32f30:	stp	x25, x26, [sp, #64]
   32f34:	adrp	x26, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32f38:	adrp	x25, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   32f3c:	add	x26, x26, #0x9c0
   32f40:	add	x25, x25, #0xa00
   32f44:	mov	w20, #0x0                   	// #0
   32f48:	cmp	w20, #0x3
   32f4c:	b.eq	33030 <__asan_backtrace_pcinfo@@Base+0x1e0>  // b.none
   32f50:	cmp	w20, #0x4
   32f54:	b.eq	3300c <__asan_backtrace_pcinfo@@Base+0x1bc>  // b.none
   32f58:	cmp	w20, #0x1
   32f5c:	b.eq	32fc8 <__asan_backtrace_pcinfo@@Base+0x178>  // b.none
   32f60:	cmp	w20, #0x2
   32f64:	b.ne	32fc0 <__asan_backtrace_pcinfo@@Base+0x170>  // b.any
   32f68:	adrp	x21, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   32f6c:	add	x21, x21, #0xa00
   32f70:	mov	x3, x27
   32f74:	mov	x2, x28
   32f78:	mov	x1, x22
   32f7c:	mov	x0, x21
   32f80:	bl	6d40 <__asan_backtrace_open@plt>
   32f84:	tbnz	w0, #31, 33000 <__asan_backtrace_pcinfo@@Base+0x1b0>
   32f88:	mov	w2, w0
   32f8c:	mov	x1, x21
   32f90:	add	x5, sp, #0x68
   32f94:	mov	x4, x28
   32f98:	mov	x3, x22
   32f9c:	mov	x0, x19
   32fa0:	bl	6c00 <__asan_backtrace_initialize@plt>
   32fa4:	cbz	w0, 32fe8 <__asan_backtrace_pcinfo@@Base+0x198>
   32fa8:	ldr	w1, [x19, #8]
   32fac:	ldr	x0, [sp, #104]
   32fb0:	cbnz	w1, 33038 <__asan_backtrace_pcinfo@@Base+0x1e8>
   32fb4:	ldp	x25, x26, [sp, #64]
   32fb8:	str	x0, [x19, #24]
   32fbc:	b	32e98 <__asan_backtrace_pcinfo@@Base+0x48>
   32fc0:	ldr	x21, [x19]
   32fc4:	cbnz	x21, 32f70 <__asan_backtrace_pcinfo@@Base+0x120>
   32fc8:	add	w20, w20, #0x1
   32fcc:	cmp	w20, #0x5
   32fd0:	b.ne	32f48 <__asan_backtrace_pcinfo@@Base+0xf8>  // b.any
   32fd4:	ldr	x1, [x19]
   32fd8:	mov	x0, x28
   32fdc:	cbz	x1, 33048 <__asan_backtrace_pcinfo@@Base+0x1f8>
   32fe0:	mov	w2, #0x2                   	// #2
   32fe4:	blr	x22
   32fe8:	ldr	w0, [x19, #8]
   32fec:	cbnz	w0, 3305c <__asan_backtrace_pcinfo@@Base+0x20c>
   32ff0:	mov	w1, #0x1                   	// #1
   32ff4:	ldp	x25, x26, [sp, #64]
   32ff8:	str	w1, [x19, #56]
   32ffc:	b	32ec0 <__asan_backtrace_pcinfo@@Base+0x70>
   33000:	ldr	w0, [sp, #100]
   33004:	cbnz	w0, 32fc8 <__asan_backtrace_pcinfo@@Base+0x178>
   33008:	b	32fe8 <__asan_backtrace_pcinfo@@Base+0x198>
   3300c:	bl	6990 <getpid@plt>
   33010:	sxtw	x3, w0
   33014:	add	x1, sp, #0x70
   33018:	mov	x2, x25
   3301c:	mov	x21, x1
   33020:	mov	x0, x1
   33024:	mov	x1, #0x40                  	// #64
   33028:	bl	6a20 <snprintf@plt>
   3302c:	b	32f70 <__asan_backtrace_pcinfo@@Base+0x120>
   33030:	mov	x21, x26
   33034:	b	32f70 <__asan_backtrace_pcinfo@@Base+0x120>
   33038:	add	x1, x19, #0x18
   3303c:	stlr	x0, [x1]
   33040:	ldp	x25, x26, [sp, #64]
   33044:	b	32e98 <__asan_backtrace_pcinfo@@Base+0x48>
   33048:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3304c:	mov	w2, #0x0                   	// #0
   33050:	add	x1, x1, #0xa18
   33054:	blr	x22
   33058:	b	32fe8 <__asan_backtrace_pcinfo@@Base+0x198>
   3305c:	mov	w0, #0x1                   	// #1
   33060:	add	x19, x19, #0x38
   33064:	stlr	w0, [x19]
   33068:	ldp	x25, x26, [sp, #64]
   3306c:	mov	w0, #0x0                   	// #0
   33070:	b	32ec0 <__asan_backtrace_pcinfo@@Base+0x70>
   33074:	nop

0000000000033078 <__asan_backtrace_syminfo@@Base>:
   33078:	stp	x29, x30, [sp, #-176]!
   3307c:	mov	x29, sp
   33080:	stp	x19, x20, [sp, #16]
   33084:	mov	x19, x0
   33088:	ldr	w0, [x0, #8]
   3308c:	stp	x21, x22, [sp, #32]
   33090:	mov	x22, x3
   33094:	stp	x23, x24, [sp, #48]
   33098:	mov	x23, x1
   3309c:	mov	x24, x2
   330a0:	stp	x27, x28, [sp, #80]
   330a4:	mov	x28, x4
   330a8:	cbnz	w0, 33134 <__asan_backtrace_syminfo@@Base+0xbc>
   330ac:	ldr	w0, [x19, #56]
   330b0:	cbnz	w0, 33104 <__asan_backtrace_syminfo@@Base+0x8c>
   330b4:	ldr	x0, [x19, #24]
   330b8:	str	x0, [sp, #104]
   330bc:	cbz	x0, 33158 <__asan_backtrace_syminfo@@Base+0xe0>
   330c0:	ldr	w1, [x19, #56]
   330c4:	mov	w0, #0x0                   	// #0
   330c8:	cbnz	w1, 330ec <__asan_backtrace_syminfo@@Base+0x74>
   330cc:	ldr	x5, [x19, #40]
   330d0:	mov	x0, x19
   330d4:	mov	x4, x28
   330d8:	mov	x3, x22
   330dc:	mov	x2, x24
   330e0:	mov	x1, x23
   330e4:	blr	x5
   330e8:	mov	w0, #0x1                   	// #1
   330ec:	ldp	x19, x20, [sp, #16]
   330f0:	ldp	x21, x22, [sp, #32]
   330f4:	ldp	x23, x24, [sp, #48]
   330f8:	ldp	x27, x28, [sp, #80]
   330fc:	ldp	x29, x30, [sp], #176
   33100:	ret
   33104:	mov	x0, x28
   33108:	mov	w2, #0xffffffff            	// #-1
   3310c:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33110:	add	x1, x1, #0x9d8
   33114:	blr	x22
   33118:	mov	w0, #0x0                   	// #0
   3311c:	ldp	x19, x20, [sp, #16]
   33120:	ldp	x21, x22, [sp, #32]
   33124:	ldp	x23, x24, [sp, #48]
   33128:	ldp	x27, x28, [sp, #80]
   3312c:	ldp	x29, x30, [sp], #176
   33130:	ret
   33134:	add	x0, x19, #0x38
   33138:	ldar	w0, [x0]
   3313c:	cbnz	w0, 33104 <__asan_backtrace_syminfo@@Base+0x8c>
   33140:	ldr	w0, [x19, #8]
   33144:	cbz	w0, 330b4 <__asan_backtrace_syminfo@@Base+0x3c>
   33148:	add	x0, x19, #0x18
   3314c:	ldar	x0, [x0]
   33150:	str	x0, [sp, #104]
   33154:	cbnz	x0, 330c0 <__asan_backtrace_syminfo@@Base+0x48>
   33158:	add	x27, sp, #0x64
   3315c:	stp	x25, x26, [sp, #64]
   33160:	adrp	x26, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33164:	adrp	x25, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33168:	add	x26, x26, #0x9c0
   3316c:	add	x25, x25, #0xa00
   33170:	mov	w20, #0x0                   	// #0
   33174:	cmp	w20, #0x3
   33178:	b.eq	3325c <__asan_backtrace_syminfo@@Base+0x1e4>  // b.none
   3317c:	cmp	w20, #0x4
   33180:	b.eq	33238 <__asan_backtrace_syminfo@@Base+0x1c0>  // b.none
   33184:	cmp	w20, #0x1
   33188:	b.eq	331f4 <__asan_backtrace_syminfo@@Base+0x17c>  // b.none
   3318c:	cmp	w20, #0x2
   33190:	b.ne	331ec <__asan_backtrace_syminfo@@Base+0x174>  // b.any
   33194:	adrp	x21, 4b000 <__asan_backtrace_vector_release@@Base+0x4bb0>
   33198:	add	x21, x21, #0xa00
   3319c:	mov	x3, x27
   331a0:	mov	x2, x28
   331a4:	mov	x1, x22
   331a8:	mov	x0, x21
   331ac:	bl	6d40 <__asan_backtrace_open@plt>
   331b0:	tbnz	w0, #31, 3322c <__asan_backtrace_syminfo@@Base+0x1b4>
   331b4:	mov	w2, w0
   331b8:	mov	x1, x21
   331bc:	add	x5, sp, #0x68
   331c0:	mov	x4, x28
   331c4:	mov	x3, x22
   331c8:	mov	x0, x19
   331cc:	bl	6c00 <__asan_backtrace_initialize@plt>
   331d0:	cbz	w0, 33214 <__asan_backtrace_syminfo@@Base+0x19c>
   331d4:	ldr	w1, [x19, #8]
   331d8:	ldr	x0, [sp, #104]
   331dc:	cbnz	w1, 33264 <__asan_backtrace_syminfo@@Base+0x1ec>
   331e0:	ldp	x25, x26, [sp, #64]
   331e4:	str	x0, [x19, #24]
   331e8:	b	330c0 <__asan_backtrace_syminfo@@Base+0x48>
   331ec:	ldr	x21, [x19]
   331f0:	cbnz	x21, 3319c <__asan_backtrace_syminfo@@Base+0x124>
   331f4:	add	w20, w20, #0x1
   331f8:	cmp	w20, #0x5
   331fc:	b.ne	33174 <__asan_backtrace_syminfo@@Base+0xfc>  // b.any
   33200:	ldr	x1, [x19]
   33204:	mov	x0, x28
   33208:	cbz	x1, 33274 <__asan_backtrace_syminfo@@Base+0x1fc>
   3320c:	mov	w2, #0x2                   	// #2
   33210:	blr	x22
   33214:	ldr	w0, [x19, #8]
   33218:	cbnz	w0, 33288 <__asan_backtrace_syminfo@@Base+0x210>
   3321c:	mov	w1, #0x1                   	// #1
   33220:	ldp	x25, x26, [sp, #64]
   33224:	str	w1, [x19, #56]
   33228:	b	330ec <__asan_backtrace_syminfo@@Base+0x74>
   3322c:	ldr	w0, [sp, #100]
   33230:	cbnz	w0, 331f4 <__asan_backtrace_syminfo@@Base+0x17c>
   33234:	b	33214 <__asan_backtrace_syminfo@@Base+0x19c>
   33238:	bl	6990 <getpid@plt>
   3323c:	sxtw	x3, w0
   33240:	add	x1, sp, #0x70
   33244:	mov	x2, x25
   33248:	mov	x21, x1
   3324c:	mov	x0, x1
   33250:	mov	x1, #0x40                  	// #64
   33254:	bl	6a20 <snprintf@plt>
   33258:	b	3319c <__asan_backtrace_syminfo@@Base+0x124>
   3325c:	mov	x21, x26
   33260:	b	3319c <__asan_backtrace_syminfo@@Base+0x124>
   33264:	add	x1, x19, #0x18
   33268:	stlr	x0, [x1]
   3326c:	ldp	x25, x26, [sp, #64]
   33270:	b	330c0 <__asan_backtrace_syminfo@@Base+0x48>
   33274:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33278:	mov	w2, #0x0                   	// #0
   3327c:	add	x1, x1, #0xa18
   33280:	blr	x22
   33284:	b	33214 <__asan_backtrace_syminfo@@Base+0x19c>
   33288:	mov	w0, #0x1                   	// #1
   3328c:	add	x19, x19, #0x38
   33290:	stlr	w0, [x19]
   33294:	ldp	x25, x26, [sp, #64]
   33298:	mov	w0, #0x0                   	// #0
   3329c:	b	330ec <__asan_backtrace_syminfo@@Base+0x74>

00000000000332a0 <__asan_backtrace_open@@Base>:
   332a0:	stp	x29, x30, [sp, #-64]!
   332a4:	mov	x29, sp
   332a8:	stp	x19, x20, [sp, #16]
   332ac:	stp	x21, x22, [sp, #32]
   332b0:	mov	x22, x2
   332b4:	mov	x21, x0
   332b8:	str	x23, [sp, #48]
   332bc:	mov	x23, x1
   332c0:	cbz	x3, 33304 <__asan_backtrace_open@@Base+0x64>
   332c4:	str	wzr, [x3]
   332c8:	mov	x20, x3
   332cc:	mov	w1, #0x80000               	// #524288
   332d0:	bl	67f0 <open@plt>
   332d4:	mov	w19, w0
   332d8:	tbnz	w0, #31, 33330 <__asan_backtrace_open@@Base+0x90>
   332dc:	mov	w0, w19
   332e0:	mov	w2, #0x1                   	// #1
   332e4:	mov	w1, #0x2                   	// #2
   332e8:	bl	6cd0 <fcntl@plt>
   332ec:	mov	w0, w19
   332f0:	ldp	x19, x20, [sp, #16]
   332f4:	ldp	x21, x22, [sp, #32]
   332f8:	ldr	x23, [sp, #48]
   332fc:	ldp	x29, x30, [sp], #64
   33300:	ret
   33304:	mov	w1, #0x80000               	// #524288
   33308:	bl	67f0 <open@plt>
   3330c:	mov	w19, w0
   33310:	tbz	w0, #31, 332dc <__asan_backtrace_open@@Base+0x3c>
   33314:	bl	6ac0 <__errno_location@plt>
   33318:	ldr	w2, [x0]
   3331c:	mov	x1, x21
   33320:	mov	x0, x22
   33324:	mov	w19, #0xffffffff            	// #-1
   33328:	blr	x23
   3332c:	b	332ec <__asan_backtrace_open@@Base+0x4c>
   33330:	bl	6ac0 <__errno_location@plt>
   33334:	ldr	w1, [x0]
   33338:	cmp	w1, #0x2
   3333c:	b.ne	33318 <__asan_backtrace_open@@Base+0x78>  // b.any
   33340:	mov	w0, #0x1                   	// #1
   33344:	mov	w19, #0xffffffff            	// #-1
   33348:	str	w0, [x20]
   3334c:	b	332ec <__asan_backtrace_open@@Base+0x4c>

0000000000033350 <__asan_backtrace_close@@Base>:
   33350:	stp	x29, x30, [sp, #-32]!
   33354:	mov	x29, sp
   33358:	stp	x19, x20, [sp, #16]
   3335c:	mov	x19, x1
   33360:	mov	x20, x2
   33364:	bl	6b60 <close@plt>
   33368:	tbnz	w0, #31, 3337c <__asan_backtrace_close@@Base+0x2c>
   3336c:	mov	w0, #0x1                   	// #1
   33370:	ldp	x19, x20, [sp, #16]
   33374:	ldp	x29, x30, [sp], #32
   33378:	ret
   3337c:	bl	6ac0 <__errno_location@plt>
   33380:	mov	x2, x0
   33384:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33388:	mov	x0, x20
   3338c:	add	x1, x1, #0xa48
   33390:	ldr	w2, [x2]
   33394:	blr	x19
   33398:	mov	w0, #0x0                   	// #0
   3339c:	ldp	x19, x20, [sp, #16]
   333a0:	ldp	x29, x30, [sp], #32
   333a4:	ret

00000000000333a8 <__asan_backtrace_qsort@@Base>:
   333a8:	cmp	x1, #0x1
   333ac:	b.ls	33bdc <__asan_backtrace_qsort@@Base+0x834>  // b.plast
   333b0:	stp	x29, x30, [sp, #-224]!
   333b4:	mov	x29, sp
   333b8:	stp	x27, x28, [sp, #80]
   333bc:	and	x27, x2, #0xfffffffffffffff0
   333c0:	stp	x25, x26, [sp, #64]
   333c4:	mov	x26, x0
   333c8:	add	x0, x27, #0x1
   333cc:	str	x0, [sp, #112]
   333d0:	add	x0, x27, #0x2
   333d4:	str	x0, [sp, #120]
   333d8:	add	x0, x27, #0x3
   333dc:	str	x0, [sp, #128]
   333e0:	add	x0, x27, #0x4
   333e4:	str	x0, [sp, #136]
   333e8:	add	x0, x27, #0x5
   333ec:	str	x0, [sp, #144]
   333f0:	add	x0, x27, #0x6
   333f4:	str	x0, [sp, #152]
   333f8:	add	x0, x27, #0x7
   333fc:	str	x0, [sp, #160]
   33400:	add	x0, x27, #0x8
   33404:	str	x0, [sp, #168]
   33408:	add	x0, x27, #0x9
   3340c:	str	x0, [sp, #176]
   33410:	add	x0, x27, #0xa
   33414:	str	x0, [sp, #184]
   33418:	add	x0, x27, #0xb
   3341c:	str	x0, [sp, #192]
   33420:	add	x0, x27, #0xc
   33424:	str	x0, [sp, #200]
   33428:	add	x0, x27, #0xd
   3342c:	mov	x28, x26
   33430:	mov	x26, x2
   33434:	stp	x19, x20, [sp, #16]
   33438:	mov	x19, x1
   3343c:	mov	x20, x27
   33440:	stp	x21, x22, [sp, #32]
   33444:	mov	x21, x3
   33448:	str	x0, [sp, #208]
   3344c:	add	x0, x27, #0xe
   33450:	stp	x23, x24, [sp, #48]
   33454:	str	x0, [sp, #216]
   33458:	sub	x0, x2, #0x1
   3345c:	str	x0, [sp, #104]
   33460:	lsr	x0, x19, #1
   33464:	mul	x0, x0, x26
   33468:	add	x1, x28, x0
   3346c:	cbz	x26, 33658 <__asan_backtrace_qsort@@Base+0x2b0>
   33470:	add	x0, x0, #0x10
   33474:	add	x3, x28, #0x10
   33478:	cmp	x0, #0x0
   3347c:	ldr	x0, [sp, #104]
   33480:	ccmp	x1, x3, #0x2, gt
   33484:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
   33488:	mov	x0, #0x0                   	// #0
   3348c:	b.ls	338e4 <__asan_backtrace_qsort@@Base+0x53c>  // b.plast
   33490:	ldr	q1, [x1, x0]
   33494:	ldr	q0, [x28, x0]
   33498:	str	q1, [x28, x0]
   3349c:	str	q0, [x1, x0]
   334a0:	add	x0, x0, #0x10
   334a4:	cmp	x0, x20
   334a8:	b.ne	33490 <__asan_backtrace_qsort@@Base+0xe8>  // b.any
   334ac:	cmp	x26, x27
   334b0:	add	x3, x28, x27
   334b4:	add	x0, x1, x27
   334b8:	b.eq	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.none
   334bc:	ldrb	w6, [x1, x27]
   334c0:	ldrb	w5, [x28, x27]
   334c4:	strb	w6, [x28, x27]
   334c8:	ldr	x2, [sp, #112]
   334cc:	strb	w5, [x1, x27]
   334d0:	cmp	x26, x2
   334d4:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   334d8:	ldr	x1, [sp, #120]
   334dc:	ldrb	w5, [x0, #1]
   334e0:	cmp	x26, x1
   334e4:	ldrb	w1, [x3, #1]
   334e8:	strb	w5, [x3, #1]
   334ec:	strb	w1, [x0, #1]
   334f0:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   334f4:	ldr	x1, [sp, #128]
   334f8:	ldrb	w5, [x0, #2]
   334fc:	cmp	x26, x1
   33500:	ldrb	w1, [x3, #2]
   33504:	strb	w5, [x3, #2]
   33508:	strb	w1, [x0, #2]
   3350c:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   33510:	ldr	x1, [sp, #136]
   33514:	ldrb	w5, [x0, #3]
   33518:	cmp	x26, x1
   3351c:	ldrb	w1, [x3, #3]
   33520:	strb	w5, [x3, #3]
   33524:	strb	w1, [x0, #3]
   33528:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   3352c:	ldr	x1, [sp, #144]
   33530:	ldrb	w5, [x0, #4]
   33534:	cmp	x26, x1
   33538:	ldrb	w1, [x3, #4]
   3353c:	strb	w5, [x3, #4]
   33540:	strb	w1, [x0, #4]
   33544:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   33548:	ldr	x1, [sp, #152]
   3354c:	ldrb	w5, [x0, #5]
   33550:	cmp	x26, x1
   33554:	ldrb	w1, [x3, #5]
   33558:	strb	w5, [x3, #5]
   3355c:	strb	w1, [x0, #5]
   33560:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   33564:	ldr	x1, [sp, #160]
   33568:	ldrb	w5, [x0, #6]
   3356c:	cmp	x26, x1
   33570:	ldrb	w1, [x3, #6]
   33574:	strb	w5, [x3, #6]
   33578:	strb	w1, [x0, #6]
   3357c:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   33580:	ldr	x1, [sp, #168]
   33584:	ldrb	w5, [x0, #7]
   33588:	cmp	x26, x1
   3358c:	ldrb	w1, [x3, #7]
   33590:	strb	w5, [x3, #7]
   33594:	strb	w1, [x0, #7]
   33598:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   3359c:	ldr	x1, [sp, #176]
   335a0:	ldrb	w5, [x0, #8]
   335a4:	cmp	x26, x1
   335a8:	ldrb	w1, [x3, #8]
   335ac:	strb	w5, [x3, #8]
   335b0:	strb	w1, [x0, #8]
   335b4:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   335b8:	ldr	x1, [sp, #184]
   335bc:	ldrb	w5, [x0, #9]
   335c0:	cmp	x26, x1
   335c4:	ldrb	w1, [x3, #9]
   335c8:	strb	w5, [x3, #9]
   335cc:	strb	w1, [x0, #9]
   335d0:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   335d4:	ldr	x1, [sp, #192]
   335d8:	ldrb	w5, [x0, #10]
   335dc:	cmp	x26, x1
   335e0:	ldrb	w1, [x3, #10]
   335e4:	strb	w5, [x3, #10]
   335e8:	strb	w1, [x0, #10]
   335ec:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   335f0:	ldr	x1, [sp, #200]
   335f4:	ldrb	w5, [x0, #11]
   335f8:	cmp	x26, x1
   335fc:	ldrb	w1, [x3, #11]
   33600:	strb	w5, [x3, #11]
   33604:	strb	w1, [x0, #11]
   33608:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   3360c:	ldr	x1, [sp, #208]
   33610:	ldrb	w5, [x0, #12]
   33614:	cmp	x26, x1
   33618:	ldrb	w1, [x3, #12]
   3361c:	strb	w5, [x3, #12]
   33620:	strb	w1, [x0, #12]
   33624:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   33628:	ldr	x1, [sp, #216]
   3362c:	ldrb	w5, [x0, #13]
   33630:	cmp	x26, x1
   33634:	ldrb	w1, [x3, #13]
   33638:	strb	w5, [x3, #13]
   3363c:	strb	w1, [x0, #13]
   33640:	b.ls	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   33644:	ldrb	w5, [x0, #14]
   33648:	ldrb	w1, [x3, #14]
   3364c:	strb	w5, [x3, #14]
   33650:	strb	w1, [x0, #14]
   33654:	nop
   33658:	mov	x23, x26
   3365c:	mov	x24, #0x0                   	// #0
   33660:	mov	x25, #0x1                   	// #1
   33664:	b	33678 <__asan_backtrace_qsort@@Base+0x2d0>
   33668:	add	x25, x25, #0x1
   3366c:	add	x23, x23, x26
   33670:	cmp	x25, x19
   33674:	b.cs	338b4 <__asan_backtrace_qsort@@Base+0x50c>  // b.hs, b.nlast
   33678:	add	x22, x28, x23
   3367c:	mov	x0, x28
   33680:	mov	x1, x22
   33684:	blr	x21
   33688:	add	x7, x24, #0x1
   3368c:	cmp	w0, #0x0
   33690:	mov	x3, x7
   33694:	b.le	33668 <__asan_backtrace_qsort@@Base+0x2c0>
   33698:	add	x7, x24, #0x2
   3369c:	cmp	x3, x25
   336a0:	mov	x24, x25
   336a4:	b.eq	33668 <__asan_backtrace_qsort@@Base+0x2c0>  // b.none
   336a8:	mul	x0, x26, x3
   336ac:	add	x1, x28, x0
   336b0:	cbz	x26, 338a0 <__asan_backtrace_qsort@@Base+0x4f8>
   336b4:	add	x2, x23, #0x10
   336b8:	add	x4, x0, #0x10
   336bc:	cmp	x0, x2
   336c0:	ldr	x0, [sp, #104]
   336c4:	ccmp	x4, x23, #0x4, lt  // lt = tstop
   336c8:	ccmp	x0, #0xe, #0x0, le
   336cc:	mov	x0, #0x0                   	// #0
   336d0:	b.ls	33920 <__asan_backtrace_qsort@@Base+0x578>  // b.plast
   336d4:	nop
   336d8:	ldr	q1, [x22, x0]
   336dc:	ldr	q0, [x1, x0]
   336e0:	str	q1, [x1, x0]
   336e4:	str	q0, [x22, x0]
   336e8:	add	x0, x0, #0x10
   336ec:	cmp	x0, x20
   336f0:	b.ne	336d8 <__asan_backtrace_qsort@@Base+0x330>  // b.any
   336f4:	cmp	x26, x27
   336f8:	add	x2, x1, x27
   336fc:	add	x0, x22, x27
   33700:	b.eq	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.none
   33704:	ldr	x4, [sp, #112]
   33708:	ldrb	w5, [x22, x27]
   3370c:	cmp	x26, x4
   33710:	ldrb	w4, [x1, x27]
   33714:	strb	w5, [x1, x27]
   33718:	strb	w4, [x22, x27]
   3371c:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33720:	ldr	x1, [sp, #120]
   33724:	ldrb	w4, [x0, #1]
   33728:	cmp	x26, x1
   3372c:	ldrb	w1, [x2, #1]
   33730:	strb	w4, [x2, #1]
   33734:	strb	w1, [x0, #1]
   33738:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   3373c:	ldr	x1, [sp, #128]
   33740:	ldrb	w4, [x0, #2]
   33744:	cmp	x26, x1
   33748:	ldrb	w1, [x2, #2]
   3374c:	strb	w4, [x2, #2]
   33750:	strb	w1, [x0, #2]
   33754:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33758:	ldr	x1, [sp, #136]
   3375c:	ldrb	w4, [x0, #3]
   33760:	cmp	x26, x1
   33764:	ldrb	w1, [x2, #3]
   33768:	strb	w4, [x2, #3]
   3376c:	strb	w1, [x0, #3]
   33770:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33774:	ldr	x1, [sp, #144]
   33778:	ldrb	w4, [x0, #4]
   3377c:	cmp	x26, x1
   33780:	ldrb	w1, [x2, #4]
   33784:	strb	w4, [x2, #4]
   33788:	strb	w1, [x0, #4]
   3378c:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33790:	ldr	x1, [sp, #152]
   33794:	ldrb	w4, [x0, #5]
   33798:	cmp	x26, x1
   3379c:	ldrb	w1, [x2, #5]
   337a0:	strb	w4, [x2, #5]
   337a4:	strb	w1, [x0, #5]
   337a8:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   337ac:	ldr	x1, [sp, #160]
   337b0:	ldrb	w4, [x0, #6]
   337b4:	cmp	x26, x1
   337b8:	ldrb	w1, [x2, #6]
   337bc:	strb	w4, [x2, #6]
   337c0:	strb	w1, [x0, #6]
   337c4:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   337c8:	ldr	x1, [sp, #168]
   337cc:	ldrb	w4, [x0, #7]
   337d0:	cmp	x26, x1
   337d4:	ldrb	w1, [x2, #7]
   337d8:	strb	w4, [x2, #7]
   337dc:	strb	w1, [x0, #7]
   337e0:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   337e4:	ldr	x1, [sp, #176]
   337e8:	ldrb	w4, [x0, #8]
   337ec:	cmp	x26, x1
   337f0:	ldrb	w1, [x2, #8]
   337f4:	strb	w4, [x2, #8]
   337f8:	strb	w1, [x0, #8]
   337fc:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33800:	ldr	x1, [sp, #184]
   33804:	ldrb	w4, [x0, #9]
   33808:	cmp	x26, x1
   3380c:	ldrb	w1, [x2, #9]
   33810:	strb	w4, [x2, #9]
   33814:	strb	w1, [x0, #9]
   33818:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   3381c:	ldr	x1, [sp, #192]
   33820:	ldrb	w4, [x0, #10]
   33824:	cmp	x26, x1
   33828:	ldrb	w1, [x2, #10]
   3382c:	strb	w4, [x2, #10]
   33830:	strb	w1, [x0, #10]
   33834:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33838:	ldr	x1, [sp, #200]
   3383c:	ldrb	w4, [x0, #11]
   33840:	cmp	x26, x1
   33844:	ldrb	w1, [x2, #11]
   33848:	strb	w4, [x2, #11]
   3384c:	strb	w1, [x0, #11]
   33850:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33854:	ldr	x1, [sp, #208]
   33858:	ldrb	w4, [x0, #12]
   3385c:	cmp	x26, x1
   33860:	ldrb	w1, [x2, #12]
   33864:	strb	w4, [x2, #12]
   33868:	strb	w1, [x0, #12]
   3386c:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   33870:	ldr	x1, [sp, #216]
   33874:	ldrb	w4, [x0, #13]
   33878:	cmp	x26, x1
   3387c:	ldrb	w1, [x2, #13]
   33880:	strb	w4, [x2, #13]
   33884:	strb	w1, [x0, #13]
   33888:	b.ls	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   3388c:	ldrb	w4, [x0, #14]
   33890:	ldrb	w1, [x2, #14]
   33894:	strb	w4, [x2, #14]
   33898:	strb	w1, [x0, #14]
   3389c:	nop
   338a0:	add	x25, x25, #0x1
   338a4:	mov	x24, x3
   338a8:	add	x23, x23, x26
   338ac:	cmp	x25, x19
   338b0:	b.cc	33678 <__asan_backtrace_qsort@@Base+0x2d0>  // b.lo, b.ul, b.last
   338b4:	cbnz	x24, 3395c <__asan_backtrace_qsort@@Base+0x5b4>
   338b8:	madd	x25, x7, x26, x28
   338bc:	sub	x19, x19, #0x1
   338c0:	mov	x1, x24
   338c4:	mov	x0, x28
   338c8:	mov	x3, x21
   338cc:	mov	x2, x26
   338d0:	bl	333a8 <__asan_backtrace_qsort@@Base>
   338d4:	cmp	x19, #0x1
   338d8:	b.ls	33bc0 <__asan_backtrace_qsort@@Base+0x818>  // b.plast
   338dc:	mov	x28, x25
   338e0:	b	33460 <__asan_backtrace_qsort@@Base+0xb8>
   338e4:	ldrb	w3, [x1, x0]
   338e8:	ldrb	w2, [x28, x0]
   338ec:	strb	w3, [x28, x0]
   338f0:	strb	w2, [x1, x0]
   338f4:	add	x0, x0, #0x1
   338f8:	cmp	x26, x0
   338fc:	b.eq	33658 <__asan_backtrace_qsort@@Base+0x2b0>  // b.none
   33900:	ldrb	w3, [x1, x0]
   33904:	ldrb	w2, [x28, x0]
   33908:	strb	w3, [x28, x0]
   3390c:	strb	w2, [x1, x0]
   33910:	add	x0, x0, #0x1
   33914:	cmp	x26, x0
   33918:	b.ne	338e4 <__asan_backtrace_qsort@@Base+0x53c>  // b.any
   3391c:	b	33658 <__asan_backtrace_qsort@@Base+0x2b0>
   33920:	ldrb	w4, [x22, x0]
   33924:	ldrb	w2, [x1, x0]
   33928:	strb	w4, [x1, x0]
   3392c:	strb	w2, [x22, x0]
   33930:	add	x0, x0, #0x1
   33934:	cmp	x26, x0
   33938:	b.eq	338a0 <__asan_backtrace_qsort@@Base+0x4f8>  // b.none
   3393c:	ldrb	w4, [x22, x0]
   33940:	ldrb	w2, [x1, x0]
   33944:	strb	w4, [x1, x0]
   33948:	strb	w2, [x22, x0]
   3394c:	add	x0, x0, #0x1
   33950:	cmp	x26, x0
   33954:	b.ne	33920 <__asan_backtrace_qsort@@Base+0x578>  // b.any
   33958:	b	338a0 <__asan_backtrace_qsort@@Base+0x4f8>
   3395c:	mul	x0, x24, x26
   33960:	add	x1, x28, x0
   33964:	cbz	x26, 33b50 <__asan_backtrace_qsort@@Base+0x7a8>
   33968:	add	x0, x0, #0x10
   3396c:	add	x3, x28, #0x10
   33970:	cmp	x0, #0x0
   33974:	ldr	x0, [sp, #104]
   33978:	ccmp	x1, x3, #0x2, gt
   3397c:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
   33980:	mov	x0, #0x0                   	// #0
   33984:	b.ls	33b84 <__asan_backtrace_qsort@@Base+0x7dc>  // b.plast
   33988:	ldr	q1, [x1, x0]
   3398c:	ldr	q0, [x28, x0]
   33990:	str	q1, [x28, x0]
   33994:	str	q0, [x1, x0]
   33998:	add	x0, x0, #0x10
   3399c:	cmp	x0, x20
   339a0:	b.ne	33988 <__asan_backtrace_qsort@@Base+0x5e0>  // b.any
   339a4:	cmp	x26, x27
   339a8:	add	x3, x28, x27
   339ac:	add	x0, x1, x27
   339b0:	b.eq	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.none
   339b4:	ldrb	w8, [x1, x27]
   339b8:	ldrb	w6, [x28, x27]
   339bc:	strb	w8, [x28, x27]
   339c0:	ldr	x2, [sp, #112]
   339c4:	strb	w6, [x1, x27]
   339c8:	cmp	x26, x2
   339cc:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   339d0:	ldr	x1, [sp, #120]
   339d4:	ldrb	w6, [x0, #1]
   339d8:	cmp	x26, x1
   339dc:	ldrb	w1, [x3, #1]
   339e0:	strb	w6, [x3, #1]
   339e4:	strb	w1, [x0, #1]
   339e8:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   339ec:	ldr	x1, [sp, #128]
   339f0:	ldrb	w6, [x0, #2]
   339f4:	cmp	x26, x1
   339f8:	ldrb	w1, [x3, #2]
   339fc:	strb	w6, [x3, #2]
   33a00:	strb	w1, [x0, #2]
   33a04:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33a08:	ldr	x1, [sp, #136]
   33a0c:	ldrb	w6, [x0, #3]
   33a10:	cmp	x26, x1
   33a14:	ldrb	w1, [x3, #3]
   33a18:	strb	w6, [x3, #3]
   33a1c:	strb	w1, [x0, #3]
   33a20:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33a24:	ldr	x1, [sp, #144]
   33a28:	ldrb	w6, [x0, #4]
   33a2c:	cmp	x26, x1
   33a30:	ldrb	w1, [x3, #4]
   33a34:	strb	w6, [x3, #4]
   33a38:	strb	w1, [x0, #4]
   33a3c:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33a40:	ldr	x1, [sp, #152]
   33a44:	ldrb	w6, [x0, #5]
   33a48:	cmp	x26, x1
   33a4c:	ldrb	w1, [x3, #5]
   33a50:	strb	w6, [x3, #5]
   33a54:	strb	w1, [x0, #5]
   33a58:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33a5c:	ldr	x1, [sp, #160]
   33a60:	ldrb	w6, [x0, #6]
   33a64:	cmp	x26, x1
   33a68:	ldrb	w1, [x3, #6]
   33a6c:	strb	w6, [x3, #6]
   33a70:	strb	w1, [x0, #6]
   33a74:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33a78:	ldr	x1, [sp, #168]
   33a7c:	ldrb	w6, [x0, #7]
   33a80:	cmp	x26, x1
   33a84:	ldrb	w1, [x3, #7]
   33a88:	strb	w6, [x3, #7]
   33a8c:	strb	w1, [x0, #7]
   33a90:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33a94:	ldr	x1, [sp, #176]
   33a98:	ldrb	w6, [x0, #8]
   33a9c:	cmp	x26, x1
   33aa0:	ldrb	w1, [x3, #8]
   33aa4:	strb	w6, [x3, #8]
   33aa8:	strb	w1, [x0, #8]
   33aac:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33ab0:	ldr	x1, [sp, #184]
   33ab4:	ldrb	w6, [x0, #9]
   33ab8:	cmp	x26, x1
   33abc:	ldrb	w1, [x3, #9]
   33ac0:	strb	w6, [x3, #9]
   33ac4:	strb	w1, [x0, #9]
   33ac8:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33acc:	ldr	x1, [sp, #192]
   33ad0:	ldrb	w6, [x0, #10]
   33ad4:	cmp	x26, x1
   33ad8:	ldrb	w1, [x3, #10]
   33adc:	strb	w6, [x3, #10]
   33ae0:	strb	w1, [x0, #10]
   33ae4:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33ae8:	ldr	x1, [sp, #200]
   33aec:	ldrb	w6, [x0, #11]
   33af0:	cmp	x26, x1
   33af4:	ldrb	w1, [x3, #11]
   33af8:	strb	w6, [x3, #11]
   33afc:	strb	w1, [x0, #11]
   33b00:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33b04:	ldr	x1, [sp, #208]
   33b08:	ldrb	w6, [x0, #12]
   33b0c:	cmp	x26, x1
   33b10:	ldrb	w1, [x3, #12]
   33b14:	strb	w6, [x3, #12]
   33b18:	strb	w1, [x0, #12]
   33b1c:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33b20:	ldr	x1, [sp, #216]
   33b24:	ldrb	w6, [x0, #13]
   33b28:	cmp	x26, x1
   33b2c:	ldrb	w1, [x3, #13]
   33b30:	strb	w6, [x3, #13]
   33b34:	strb	w1, [x0, #13]
   33b38:	b.ls	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   33b3c:	ldrb	w6, [x0, #14]
   33b40:	ldrb	w1, [x3, #14]
   33b44:	strb	w6, [x3, #14]
   33b48:	strb	w1, [x0, #14]
   33b4c:	nop
   33b50:	sub	x1, x19, #0x1
   33b54:	madd	x25, x7, x26, x28
   33b58:	cmp	x19, x24, lsl #1
   33b5c:	sub	x1, x1, x24
   33b60:	b.hi	33be0 <__asan_backtrace_qsort@@Base+0x838>  // b.pmore
   33b64:	mov	x0, x25
   33b68:	mov	x3, x21
   33b6c:	mov	x2, x26
   33b70:	bl	333a8 <__asan_backtrace_qsort@@Base>
   33b74:	cmp	x24, #0x1
   33b78:	b.ls	33bc0 <__asan_backtrace_qsort@@Base+0x818>  // b.plast
   33b7c:	mov	x19, x24
   33b80:	b	33460 <__asan_backtrace_qsort@@Base+0xb8>
   33b84:	ldrb	w3, [x1, x0]
   33b88:	ldrb	w2, [x28, x0]
   33b8c:	strb	w3, [x28, x0]
   33b90:	strb	w2, [x1, x0]
   33b94:	add	x0, x0, #0x1
   33b98:	cmp	x0, x26
   33b9c:	b.eq	33b50 <__asan_backtrace_qsort@@Base+0x7a8>  // b.none
   33ba0:	ldrb	w3, [x1, x0]
   33ba4:	ldrb	w2, [x28, x0]
   33ba8:	strb	w3, [x28, x0]
   33bac:	strb	w2, [x1, x0]
   33bb0:	add	x0, x0, #0x1
   33bb4:	cmp	x0, x26
   33bb8:	b.ne	33b84 <__asan_backtrace_qsort@@Base+0x7dc>  // b.any
   33bbc:	b	33b50 <__asan_backtrace_qsort@@Base+0x7a8>
   33bc0:	ldp	x19, x20, [sp, #16]
   33bc4:	ldp	x21, x22, [sp, #32]
   33bc8:	ldp	x23, x24, [sp, #48]
   33bcc:	ldp	x25, x26, [sp, #64]
   33bd0:	ldp	x27, x28, [sp, #80]
   33bd4:	ldp	x29, x30, [sp], #224
   33bd8:	ret
   33bdc:	ret
   33be0:	mov	x19, x1
   33be4:	b	338c0 <__asan_backtrace_qsort@@Base+0x518>

0000000000033be8 <__asan_backtrace_create_state@@Base>:
   33be8:	stp	x29, x30, [sp, #-144]!
   33bec:	mov	x29, sp
   33bf0:	stp	x19, x20, [sp, #16]
   33bf4:	add	x19, sp, #0x48
   33bf8:	mov	w20, w1
   33bfc:	mov	w1, #0x0                   	// #0
   33c00:	stp	x21, x22, [sp, #32]
   33c04:	mov	x21, x2
   33c08:	mov	x22, x3
   33c0c:	mov	x2, #0x48                  	// #72
   33c10:	str	x23, [sp, #48]
   33c14:	mov	x23, x0
   33c18:	mov	x0, x19
   33c1c:	bl	6860 <__asan_internal_memset@plt>
   33c20:	mov	x3, x22
   33c24:	mov	x2, x21
   33c28:	mov	x0, x19
   33c2c:	mov	x1, #0x48                  	// #72
   33c30:	str	x23, [sp, #72]
   33c34:	str	w20, [sp, #80]
   33c38:	bl	68c0 <__asan_backtrace_alloc@plt>
   33c3c:	cbz	x0, 33c68 <__asan_backtrace_create_state@@Base+0x80>
   33c40:	ldp	x2, x3, [sp, #72]
   33c44:	stp	x2, x3, [x0]
   33c48:	ldp	x2, x3, [sp, #88]
   33c4c:	stp	x2, x3, [x0, #16]
   33c50:	ldp	x2, x3, [sp, #104]
   33c54:	stp	x2, x3, [x0, #32]
   33c58:	ldp	x2, x3, [sp, #120]
   33c5c:	stp	x2, x3, [x0, #48]
   33c60:	ldr	x1, [sp, #136]
   33c64:	str	x1, [x0, #64]
   33c68:	ldp	x19, x20, [sp, #16]
   33c6c:	ldp	x21, x22, [sp, #32]
   33c70:	ldr	x23, [sp, #48]
   33c74:	ldp	x29, x30, [sp], #144
   33c78:	ret
   33c7c:	nop
   33c80:	sub	w5, w1, #0x1
   33c84:	mov	x4, x0
   33c88:	cmp	w5, #0x4f
   33c8c:	b.ls	33c98 <__asan_backtrace_create_state@@Base+0xb0>  // b.plast
   33c90:	mov	x0, #0x0                   	// #0
   33c94:	ret
   33c98:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33c9c:	add	x0, x0, #0xa50
   33ca0:	ldrb	w0, [x0, w5, uxtw]
   33ca4:	adr	x5, 33cb0 <__asan_backtrace_create_state@@Base+0xc8>
   33ca8:	add	x0, x5, w0, sxtb #2
   33cac:	br	x0
   33cb0:	cbz	x3, 33c90 <__asan_backtrace_create_state@@Base+0xa8>
   33cb4:	ldp	w0, w5, [x4, #40]
   33cb8:	cmp	w0, w5
   33cbc:	b.ge	33c90 <__asan_backtrace_create_state@@Base+0xa8>  // b.tcont
   33cc0:	mov	w5, #0x18                  	// #24
   33cc4:	add	w7, w0, #0x1
   33cc8:	ldr	x6, [x4, #32]
   33ccc:	smull	x5, w0, w5
   33cd0:	add	x0, x6, x5
   33cd4:	str	wzr, [x0, #4]
   33cd8:	str	w7, [x4, #40]
   33cdc:	str	w1, [x6, x5]
   33ce0:	stp	x2, x3, [x0, #8]
   33ce4:	ret
   33ce8:	cbnz	x2, 33cb4 <__asan_backtrace_create_state@@Base+0xcc>
   33cec:	mov	x0, #0x0                   	// #0
   33cf0:	b	33c94 <__asan_backtrace_create_state@@Base+0xac>
   33cf4:	cmp	x2, #0x0
   33cf8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   33cfc:	b.ne	33cb4 <__asan_backtrace_create_state@@Base+0xcc>  // b.any
   33d00:	mov	x0, #0x0                   	// #0
   33d04:	b	33c94 <__asan_backtrace_create_state@@Base+0xac>
   33d08:	cbz	x1, 33de8 <__asan_backtrace_create_state@@Base+0x200>
   33d0c:	stp	x29, x30, [sp, #-32]!
   33d10:	mov	x29, sp
   33d14:	stp	x19, x20, [sp, #16]
   33d18:	mov	x20, x0
   33d1c:	mov	x19, x1
   33d20:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   33d24:	add	x0, x0, #0xaa0
   33d28:	ldr	w1, [x19]
   33d2c:	sub	w1, w1, #0x1
   33d30:	cmp	w1, #0x4f
   33d34:	b.ls	33d44 <__asan_backtrace_create_state@@Base+0x15c>  // b.plast
   33d38:	ldp	x19, x20, [sp, #16]
   33d3c:	ldp	x29, x30, [sp], #32
   33d40:	ret
   33d44:	ldrb	w1, [x0, w1, uxtw]
   33d48:	adr	x2, 33d54 <__asan_backtrace_create_state@@Base+0x16c>
   33d4c:	add	x1, x2, w1, sxtb #2
   33d50:	br	x1
   33d54:	ldr	x0, [x19, #8]
   33d58:	ldr	w0, [x0]
   33d5c:	cmp	w0, #0x5
   33d60:	b.ne	33d70 <__asan_backtrace_create_state@@Base+0x188>  // b.any
   33d64:	ldr	w0, [x20, #348]
   33d68:	add	w0, w0, #0x1
   33d6c:	str	w0, [x20, #348]
   33d70:	ldr	w0, [x20, #308]
   33d74:	cmp	w0, #0x800
   33d78:	b.gt	33d38 <__asan_backtrace_create_state@@Base+0x150>
   33d7c:	ldr	x1, [x19, #8]
   33d80:	add	w0, w0, #0x1
   33d84:	str	w0, [x20, #308]
   33d88:	mov	x0, x20
   33d8c:	bl	33d08 <__asan_backtrace_create_state@@Base+0x120>
   33d90:	ldr	x1, [x19, #16]
   33d94:	mov	x0, x20
   33d98:	bl	33d08 <__asan_backtrace_create_state@@Base+0x120>
   33d9c:	ldr	w0, [x20, #308]
   33da0:	sub	w0, w0, #0x1
   33da4:	str	w0, [x20, #308]
   33da8:	ldp	x19, x20, [sp, #16]
   33dac:	ldp	x29, x30, [sp], #32
   33db0:	ret
   33db4:	ldr	x19, [x19, #8]
   33db8:	cbnz	x19, 33d28 <__asan_backtrace_create_state@@Base+0x140>
   33dbc:	b	33d38 <__asan_backtrace_create_state@@Base+0x150>
   33dc0:	ldr	x19, [x19, #16]
   33dc4:	cbnz	x19, 33d28 <__asan_backtrace_create_state@@Base+0x140>
   33dc8:	b	33d38 <__asan_backtrace_create_state@@Base+0x150>
   33dcc:	ldr	w0, [x20, #364]
   33dd0:	add	w0, w0, #0x1
   33dd4:	str	w0, [x20, #364]
   33dd8:	ldr	w0, [x20, #308]
   33ddc:	cmp	w0, #0x800
   33de0:	b.gt	33d38 <__asan_backtrace_create_state@@Base+0x150>
   33de4:	b	33d7c <__asan_backtrace_create_state@@Base+0x194>
   33de8:	ret
   33dec:	nop
   33df0:	cbz	x2, 33eb8 <__asan_backtrace_create_state@@Base+0x2d0>
   33df4:	stp	x29, x30, [sp, #-64]!
   33df8:	mov	x29, sp
   33dfc:	stp	x19, x20, [sp, #16]
   33e00:	mov	x20, x1
   33e04:	mov	x19, x0
   33e08:	stp	x21, x22, [sp, #32]
   33e0c:	add	x22, x1, x2
   33e10:	ldr	x1, [x0, #256]
   33e14:	str	x23, [sp, #48]
   33e18:	mov	x23, #0x1                   	// #1
   33e1c:	b	33e74 <__asan_backtrace_create_state@@Base+0x28c>
   33e20:	ldp	x3, x2, [x19, #272]
   33e24:	strb	wzr, [x19, #255]
   33e28:	add	x20, x20, #0x1
   33e2c:	blr	x3
   33e30:	strb	w21, [x19]
   33e34:	ldr	x0, [x19, #320]
   33e38:	str	x23, [x19, #256]
   33e3c:	strb	w21, [x19, #264]
   33e40:	cmp	x22, x20
   33e44:	add	x0, x0, #0x1
   33e48:	str	x0, [x19, #320]
   33e4c:	mov	x0, #0x1                   	// #1
   33e50:	b.eq	33ea4 <__asan_backtrace_create_state@@Base+0x2bc>  // b.none
   33e54:	ldrb	w21, [x20]
   33e58:	add	x1, x0, #0x1
   33e5c:	str	x1, [x19, #256]
   33e60:	add	x20, x20, #0x1
   33e64:	strb	w21, [x19, x0]
   33e68:	cmp	x20, x22
   33e6c:	strb	w21, [x19, #264]
   33e70:	b.eq	33ea4 <__asan_backtrace_create_state@@Base+0x2bc>  // b.none
   33e74:	ldrb	w21, [x20]
   33e78:	mov	x0, x19
   33e7c:	cmp	x1, #0xff
   33e80:	b.eq	33e20 <__asan_backtrace_create_state@@Base+0x238>  // b.none
   33e84:	mov	x0, x1
   33e88:	add	x20, x20, #0x1
   33e8c:	add	x1, x0, #0x1
   33e90:	str	x1, [x19, #256]
   33e94:	cmp	x20, x22
   33e98:	strb	w21, [x19, x0]
   33e9c:	strb	w21, [x19, #264]
   33ea0:	b.ne	33e74 <__asan_backtrace_create_state@@Base+0x28c>  // b.any
   33ea4:	ldp	x19, x20, [sp, #16]
   33ea8:	ldp	x21, x22, [sp, #32]
   33eac:	ldr	x23, [sp, #48]
   33eb0:	ldp	x29, x30, [sp], #64
   33eb4:	ret
   33eb8:	ret
   33ebc:	nop
   33ec0:	cbnz	x0, 33edc <__asan_backtrace_create_state@@Base+0x2f4>
   33ec4:	b	33ee8 <__asan_backtrace_create_state@@Base+0x300>
   33ec8:	cmp	w1, #0x0
   33ecc:	b.le	33ef0 <__asan_backtrace_create_state@@Base+0x308>
   33ed0:	ldr	x0, [x0, #16]
   33ed4:	sub	w1, w1, #0x1
   33ed8:	cbz	x0, 33eec <__asan_backtrace_create_state@@Base+0x304>
   33edc:	ldr	w2, [x0]
   33ee0:	cmp	w2, #0x2f
   33ee4:	b.eq	33ec8 <__asan_backtrace_create_state@@Base+0x2e0>  // b.none
   33ee8:	mov	x0, #0x0                   	// #0
   33eec:	ret
   33ef0:	b.ne	33ee8 <__asan_backtrace_create_state@@Base+0x300>  // b.any
   33ef4:	ldr	x0, [x0, #8]
   33ef8:	ret
   33efc:	nop
   33f00:	stp	x29, x30, [sp, #-48]!
   33f04:	mov	x29, sp
   33f08:	stp	x19, x20, [sp, #16]
   33f0c:	mov	x19, x2
   33f10:	add	x2, x1, #0x1
   33f14:	stp	x21, x22, [sp, #32]
   33f18:	mov	x21, x1
   33f1c:	mov	x22, x0
   33f20:	ldp	x1, x20, [x19, #8]
   33f24:	add	x1, x2, x1
   33f28:	ldr	w2, [x19, #24]
   33f2c:	cmp	x1, x20
   33f30:	b.hi	33f74 <__asan_backtrace_create_state@@Base+0x38c>  // b.pmore
   33f34:	cbnz	w2, 33f64 <__asan_backtrace_create_state@@Base+0x37c>
   33f38:	ldp	x3, x0, [x19]
   33f3c:	mov	x1, x22
   33f40:	mov	x2, x21
   33f44:	add	x0, x3, x0
   33f48:	bl	67d0 <__asan_internal_memcpy@plt>
   33f4c:	ldp	x0, x1, [x19]
   33f50:	add	x0, x0, x21
   33f54:	strb	wzr, [x0, x1]
   33f58:	ldr	x1, [x19, #8]
   33f5c:	add	x1, x1, x21
   33f60:	str	x1, [x19, #8]
   33f64:	ldp	x19, x20, [sp, #16]
   33f68:	ldp	x21, x22, [sp, #32]
   33f6c:	ldp	x29, x30, [sp], #48
   33f70:	ret
   33f74:	cbnz	w2, 33f64 <__asan_backtrace_create_state@@Base+0x37c>
   33f78:	cbz	x20, 33fb0 <__asan_backtrace_create_state@@Base+0x3c8>
   33f7c:	nop
   33f80:	lsl	x20, x20, #1
   33f84:	cmp	x1, x20
   33f88:	b.hi	33f80 <__asan_backtrace_create_state@@Base+0x398>  // b.pmore
   33f8c:	ldr	x0, [x19]
   33f90:	mov	x1, x20
   33f94:	bl	6c40 <realloc@plt>
   33f98:	cbz	x0, 33fc0 <__asan_backtrace_create_state@@Base+0x3d8>
   33f9c:	ldr	w2, [x19, #24]
   33fa0:	str	x0, [x19]
   33fa4:	str	x20, [x19, #16]
   33fa8:	cbz	w2, 33f38 <__asan_backtrace_create_state@@Base+0x350>
   33fac:	b	33f64 <__asan_backtrace_create_state@@Base+0x37c>
   33fb0:	cmp	x1, #0x2
   33fb4:	mov	x20, #0x2                   	// #2
   33fb8:	b.hi	33f80 <__asan_backtrace_create_state@@Base+0x398>  // b.pmore
   33fbc:	b	33f8c <__asan_backtrace_create_state@@Base+0x3a4>
   33fc0:	ldr	x0, [x19]
   33fc4:	bl	66f0 <free@plt>
   33fc8:	str	xzr, [x19]
   33fcc:	mov	w0, #0x1                   	// #1
   33fd0:	stp	xzr, xzr, [x19, #8]
   33fd4:	str	w0, [x19, #24]
   33fd8:	b	33f64 <__asan_backtrace_create_state@@Base+0x37c>
   33fdc:	nop
   33fe0:	cbz	x1, 340fc <__asan_backtrace_create_state@@Base+0x514>
   33fe4:	stp	x29, x30, [sp, #-48]!
   33fe8:	mov	x29, sp
   33fec:	stp	x21, x22, [sp, #32]
   33ff0:	mov	x21, #0x8001                	// #32769
   33ff4:	movk	x21, #0x410, lsl #16
   33ff8:	movk	x21, #0xc600, lsl #32
   33ffc:	stp	x19, x20, [sp, #16]
   34000:	mov	x20, x0
   34004:	mov	x19, x1
   34008:	mov	x22, #0x1                   	// #1
   3400c:	movk	x21, #0x19, lsl #48
   34010:	ldr	w2, [x19]
   34014:	cmp	w2, #0x8
   34018:	b.eq	34030 <__asan_backtrace_create_state@@Base+0x448>  // b.none
   3401c:	b.hi	3409c <__asan_backtrace_create_state@@Base+0x4b4>  // b.pmore
   34020:	cmp	w2, #0x6
   34024:	b.eq	34038 <__asan_backtrace_create_state@@Base+0x450>  // b.none
   34028:	cmp	w2, #0x7
   3402c:	b.ne	3404c <__asan_backtrace_create_state@@Base+0x464>  // b.any
   34030:	ldr	x19, [x19, #16]
   34034:	cbnz	x19, 34010 <__asan_backtrace_create_state@@Base+0x428>
   34038:	mov	x0, #0x0                   	// #0
   3403c:	ldp	x19, x20, [sp, #16]
   34040:	ldp	x21, x22, [sp, #32]
   34044:	ldp	x29, x30, [sp], #48
   34048:	ret
   3404c:	cbz	w2, 34038 <__asan_backtrace_create_state@@Base+0x450>
   34050:	cmp	w2, #0x5
   34054:	b.ne	340b8 <__asan_backtrace_create_state@@Base+0x4d0>  // b.any
   34058:	ldr	x0, [x20, #288]
   3405c:	cbz	x0, 340f0 <__asan_backtrace_create_state@@Base+0x508>
   34060:	ldr	x0, [x0, #8]
   34064:	ldr	x2, [x19, #8]
   34068:	ldr	x0, [x0, #16]
   3406c:	mov	w1, w2
   34070:	tbnz	w2, #31, 340d0 <__asan_backtrace_create_state@@Base+0x4e8>
   34074:	cbnz	x0, 3408c <__asan_backtrace_create_state@@Base+0x4a4>
   34078:	b	34038 <__asan_backtrace_create_state@@Base+0x450>
   3407c:	cbz	w1, 340cc <__asan_backtrace_create_state@@Base+0x4e4>
   34080:	ldr	x0, [x0, #16]
   34084:	sub	w1, w1, #0x1
   34088:	cbz	x0, 34038 <__asan_backtrace_create_state@@Base+0x450>
   3408c:	ldr	w2, [x0]
   34090:	cmp	w2, #0x2f
   34094:	b.eq	3407c <__asan_backtrace_create_state@@Base+0x494>  // b.none
   34098:	b	34038 <__asan_backtrace_create_state@@Base+0x450>
   3409c:	sub	w2, w2, #0x18
   340a0:	cmp	w2, #0x34
   340a4:	b.hi	340b8 <__asan_backtrace_create_state@@Base+0x4d0>  // b.pmore
   340a8:	lsl	x2, x22, x2
   340ac:	tst	x2, x21
   340b0:	b.ne	34038 <__asan_backtrace_create_state@@Base+0x450>  // b.any
   340b4:	tbnz	w2, #27, 34030 <__asan_backtrace_create_state@@Base+0x448>
   340b8:	ldr	x1, [x19, #8]
   340bc:	mov	x0, x20
   340c0:	bl	33fe0 <__asan_backtrace_create_state@@Base+0x3f8>
   340c4:	cbz	x0, 34030 <__asan_backtrace_create_state@@Base+0x448>
   340c8:	b	3403c <__asan_backtrace_create_state@@Base+0x454>
   340cc:	ldr	x0, [x0, #8]
   340d0:	cbz	x0, 34038 <__asan_backtrace_create_state@@Base+0x450>
   340d4:	ldr	w1, [x0]
   340d8:	cmp	w1, #0x2f
   340dc:	b.ne	34038 <__asan_backtrace_create_state@@Base+0x450>  // b.any
   340e0:	ldp	x19, x20, [sp, #16]
   340e4:	ldp	x21, x22, [sp, #32]
   340e8:	ldp	x29, x30, [sp], #48
   340ec:	ret
   340f0:	mov	w1, #0x1                   	// #1
   340f4:	str	w1, [x20, #304]
   340f8:	b	3403c <__asan_backtrace_create_state@@Base+0x454>
   340fc:	mov	x0, #0x0                   	// #0
   34100:	ret
   34104:	nop
   34108:	stp	x29, x30, [sp, #-96]!
   3410c:	mov	w2, w1
   34110:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   34114:	mov	x29, sp
   34118:	add	x1, x3, #0x160
   3411c:	stp	x19, x20, [sp, #16]
   34120:	add	x20, sp, #0x40
   34124:	mov	x19, x0
   34128:	mov	x0, x20
   3412c:	bl	6900 <sprintf@plt>
   34130:	mov	x0, x20
   34134:	bl	67e0 <__asan_internal_strlen@plt>
   34138:	cbz	x0, 341e0 <__asan_backtrace_create_state@@Base+0x5f8>
   3413c:	stp	x21, x22, [sp, #32]
   34140:	add	x21, x20, x0
   34144:	ldr	x1, [x19, #256]
   34148:	str	x23, [sp, #48]
   3414c:	mov	x23, #0x1                   	// #1
   34150:	b	341a8 <__asan_backtrace_create_state@@Base+0x5c0>
   34154:	ldp	x3, x2, [x19, #272]
   34158:	strb	wzr, [x19, #255]
   3415c:	add	x20, x20, #0x1
   34160:	blr	x3
   34164:	strb	w22, [x19]
   34168:	ldr	x0, [x19, #320]
   3416c:	str	x23, [x19, #256]
   34170:	strb	w22, [x19, #264]
   34174:	cmp	x21, x20
   34178:	add	x0, x0, #0x1
   3417c:	str	x0, [x19, #320]
   34180:	mov	x0, #0x1                   	// #1
   34184:	b.eq	341d8 <__asan_backtrace_create_state@@Base+0x5f0>  // b.none
   34188:	ldrb	w22, [x20]
   3418c:	add	x1, x0, #0x1
   34190:	str	x1, [x19, #256]
   34194:	add	x20, x20, #0x1
   34198:	strb	w22, [x19, x0]
   3419c:	cmp	x21, x20
   341a0:	strb	w22, [x19, #264]
   341a4:	b.eq	341d8 <__asan_backtrace_create_state@@Base+0x5f0>  // b.none
   341a8:	ldrb	w22, [x20]
   341ac:	mov	x0, x19
   341b0:	cmp	x1, #0xff
   341b4:	b.eq	34154 <__asan_backtrace_create_state@@Base+0x56c>  // b.none
   341b8:	mov	x0, x1
   341bc:	add	x20, x20, #0x1
   341c0:	add	x1, x0, #0x1
   341c4:	str	x1, [x19, #256]
   341c8:	cmp	x21, x20
   341cc:	strb	w22, [x19, x0]
   341d0:	strb	w22, [x19, #264]
   341d4:	b.ne	341a8 <__asan_backtrace_create_state@@Base+0x5c0>  // b.any
   341d8:	ldp	x21, x22, [sp, #32]
   341dc:	ldr	x23, [sp, #48]
   341e0:	ldp	x19, x20, [sp, #16]
   341e4:	ldp	x29, x30, [sp], #96
   341e8:	ret
   341ec:	nop
   341f0:	ldr	x1, [x0, #24]
   341f4:	mov	x5, x0
   341f8:	ldrb	w2, [x1]
   341fc:	cmp	w2, #0x5f
   34200:	b.eq	3428c <__asan_backtrace_create_state@@Base+0x6a4>  // b.none
   34204:	cmp	w2, #0x6e
   34208:	b.eq	34294 <__asan_backtrace_create_state@@Base+0x6ac>  // b.none
   3420c:	sub	w0, w2, #0x30
   34210:	and	w0, w0, #0xff
   34214:	cmp	w0, #0x9
   34218:	b.hi	34294 <__asan_backtrace_create_state@@Base+0x6ac>  // b.pmore
   3421c:	mov	w8, #0xcccd                	// #52429
   34220:	mov	w3, w2
   34224:	mov	w9, #0x7fffffff            	// #2147483647
   34228:	mov	w2, #0x0                   	// #0
   3422c:	movk	w8, #0xcccc, lsl #16
   34230:	b	34244 <__asan_backtrace_create_state@@Base+0x65c>
   34234:	umull	x4, w4, w8
   34238:	lsr	x4, x4, #35
   3423c:	cmp	w4, w2
   34240:	b.lt	34294 <__asan_backtrace_create_state@@Base+0x6ac>  // b.tstop
   34244:	add	x1, x1, #0x1
   34248:	str	x1, [x5, #24]
   3424c:	add	w2, w2, w2, lsl #2
   34250:	ldrb	w7, [x1]
   34254:	add	w0, w3, w2, lsl #1
   34258:	sub	w2, w0, #0x30
   3425c:	sub	w6, w7, #0x30
   34260:	mov	w3, w7
   34264:	sub	w4, w9, w6
   34268:	and	w6, w6, #0xff
   3426c:	cmp	w6, #0x9
   34270:	b.ls	34234 <__asan_backtrace_create_state@@Base+0x64c>  // b.plast
   34274:	sub	w0, w0, #0x2f
   34278:	cmp	w7, #0x5f
   3427c:	b.ne	34294 <__asan_backtrace_create_state@@Base+0x6ac>  // b.any
   34280:	add	x1, x1, #0x1
   34284:	str	x1, [x5, #24]
   34288:	ret
   3428c:	mov	w0, #0x0                   	// #0
   34290:	b	34280 <__asan_backtrace_create_state@@Base+0x698>
   34294:	mov	w0, #0xffffffff            	// #-1
   34298:	ret
   3429c:	nop
   342a0:	mov	x4, x0
   342a4:	ldr	x0, [x0, #24]
   342a8:	ldrb	w1, [x0]
   342ac:	cmp	w1, #0x5f
   342b0:	b.ne	34350 <__asan_backtrace_create_state@@Base+0x768>  // b.any
   342b4:	add	x1, x0, #0x1
   342b8:	str	x1, [x4, #24]
   342bc:	mov	w12, #0x0                   	// #0
   342c0:	ldrb	w2, [x0, #1]
   342c4:	cmp	w2, #0x5f
   342c8:	b.eq	34388 <__asan_backtrace_create_state@@Base+0x7a0>  // b.none
   342cc:	cmp	w2, #0x6e
   342d0:	b.eq	34360 <__asan_backtrace_create_state@@Base+0x778>  // b.none
   342d4:	sub	w0, w2, #0x30
   342d8:	and	w0, w0, #0xff
   342dc:	cmp	w0, #0x9
   342e0:	b.hi	34350 <__asan_backtrace_create_state@@Base+0x768>  // b.pmore
   342e4:	mov	w0, #0x0                   	// #0
   342e8:	mov	w9, #0xcccd                	// #52429
   342ec:	mov	w5, w2
   342f0:	mov	w10, #0x7fffffff            	// #2147483647
   342f4:	mov	w2, #0x0                   	// #0
   342f8:	movk	w9, #0xcccc, lsl #16
   342fc:	b	34310 <__asan_backtrace_create_state@@Base+0x728>
   34300:	umull	x3, w3, w9
   34304:	lsr	x3, x3, #35
   34308:	cmp	w3, w2
   3430c:	b.lt	34358 <__asan_backtrace_create_state@@Base+0x770>  // b.tstop
   34310:	mov	x11, x1
   34314:	add	x1, x1, #0x1
   34318:	str	x1, [x4, #24]
   3431c:	add	w2, w2, w2, lsl #2
   34320:	ldrb	w7, [x1]
   34324:	add	w8, w5, w2, lsl #1
   34328:	sub	w2, w8, #0x30
   3432c:	sub	w6, w7, #0x30
   34330:	mov	w5, w7
   34334:	sub	w3, w10, w6
   34338:	and	w6, w6, #0xff
   3433c:	cmp	w6, #0x9
   34340:	b.ls	34300 <__asan_backtrace_create_state@@Base+0x718>  // b.plast
   34344:	cbz	w0, 343a4 <__asan_backtrace_create_state@@Base+0x7bc>
   34348:	cmp	w8, #0x30
   3434c:	b.ne	34358 <__asan_backtrace_create_state@@Base+0x770>  // b.any
   34350:	mov	w0, #0x1                   	// #1
   34354:	ret
   34358:	mov	w0, #0x0                   	// #0
   3435c:	ret
   34360:	add	x3, x1, #0x1
   34364:	str	x3, [x4, #24]
   34368:	ldrb	w2, [x1, #1]
   3436c:	sub	w0, w2, #0x30
   34370:	and	w0, w0, #0xff
   34374:	cmp	w0, #0x9
   34378:	b.hi	34350 <__asan_backtrace_create_state@@Base+0x768>  // b.pmore
   3437c:	mov	x1, x3
   34380:	mov	w0, #0x1                   	// #1
   34384:	b	342e8 <__asan_backtrace_create_state@@Base+0x700>
   34388:	add	x1, x0, #0x2
   3438c:	str	x1, [x4, #24]
   34390:	mov	w12, #0x1                   	// #1
   34394:	ldrb	w2, [x0, #2]
   34398:	cmp	w2, #0x6e
   3439c:	b.ne	342d4 <__asan_backtrace_create_state@@Base+0x6ec>  // b.any
   343a0:	b	34360 <__asan_backtrace_create_state@@Base+0x778>
   343a4:	cmp	w12, #0x0
   343a8:	ccmp	w2, #0x9, #0x4, ne  // ne = any
   343ac:	b.le	34350 <__asan_backtrace_create_state@@Base+0x768>
   343b0:	cmp	w7, #0x5f
   343b4:	b.ne	34354 <__asan_backtrace_create_state@@Base+0x76c>  // b.any
   343b8:	add	x11, x11, #0x2
   343bc:	mov	w0, #0x1                   	// #1
   343c0:	str	x11, [x4, #24]
   343c4:	ret
   343c8:	mov	x1, x0
   343cc:	ldr	x0, [x0, #24]
   343d0:	ldrb	w2, [x0]
   343d4:	cmp	w2, #0x54
   343d8:	b.ne	344a8 <__asan_backtrace_create_state@@Base+0x8c0>  // b.any
   343dc:	add	x2, x0, #0x1
   343e0:	str	x2, [x1, #24]
   343e4:	ldrb	w5, [x0, #1]
   343e8:	cmp	w5, #0x5f
   343ec:	b.eq	344b0 <__asan_backtrace_create_state@@Base+0x8c8>  // b.none
   343f0:	sub	w0, w5, #0x30
   343f4:	and	w0, w0, #0xff
   343f8:	cmp	w0, #0x9
   343fc:	b.hi	344a8 <__asan_backtrace_create_state@@Base+0x8c0>  // b.pmore
   34400:	mov	w9, #0xcccd                	// #52429
   34404:	mov	w0, #0x0                   	// #0
   34408:	mov	w10, #0x7fffffff            	// #2147483647
   3440c:	movk	w9, #0xcccc, lsl #16
   34410:	b	34424 <__asan_backtrace_create_state@@Base+0x83c>
   34414:	umull	x3, w3, w9
   34418:	lsr	x3, x3, #35
   3441c:	cmp	w3, w0
   34420:	b.lt	344a8 <__asan_backtrace_create_state@@Base+0x8c0>  // b.tstop
   34424:	mov	x8, x2
   34428:	add	x2, x2, #0x1
   3442c:	str	x2, [x1, #24]
   34430:	add	w0, w0, w0, lsl #2
   34434:	ldrb	w7, [x2]
   34438:	add	w6, w5, w0, lsl #1
   3443c:	sub	w0, w6, #0x30
   34440:	sub	w4, w7, #0x30
   34444:	mov	w5, w7
   34448:	sub	w3, w10, w4
   3444c:	and	w4, w4, #0xff
   34450:	cmp	w4, #0x9
   34454:	b.ls	34414 <__asan_backtrace_create_state@@Base+0x82c>  // b.plast
   34458:	sub	w0, w6, #0x2f
   3445c:	cmp	w7, #0x5f
   34460:	b.ne	344a8 <__asan_backtrace_create_state@@Base+0x8c0>  // b.any
   34464:	add	x8, x8, #0x2
   34468:	str	x8, [x1, #24]
   3446c:	ldp	w2, w3, [x1, #40]
   34470:	cmp	w2, w3
   34474:	b.ge	344a8 <__asan_backtrace_create_state@@Base+0x8c0>  // b.tcont
   34478:	mov	w4, #0x18                  	// #24
   3447c:	add	w5, w2, #0x1
   34480:	ldr	x3, [x1, #32]
   34484:	smull	x2, w2, w4
   34488:	sxtw	x6, w0
   3448c:	mov	w4, #0x5                   	// #5
   34490:	add	x0, x3, x2
   34494:	str	wzr, [x0, #4]
   34498:	str	w5, [x1, #40]
   3449c:	str	w4, [x3, x2]
   344a0:	str	x6, [x0, #8]
   344a4:	ret
   344a8:	mov	x0, #0x0                   	// #0
   344ac:	ret
   344b0:	add	x2, x0, #0x2
   344b4:	mov	w0, #0x0                   	// #0
   344b8:	str	x2, [x1, #24]
   344bc:	b	3446c <__asan_backtrace_create_state@@Base+0x884>
   344c0:	mov	x2, x0
   344c4:	cbnz	w1, 344e0 <__asan_backtrace_create_state@@Base+0x8f8>
   344c8:	ldr	x0, [x0, #24]
   344cc:	ldrb	w1, [x0]
   344d0:	cbz	w1, 34608 <__asan_backtrace_create_state@@Base+0xa20>
   344d4:	add	x1, x0, #0x1
   344d8:	str	x1, [x2, #24]
   344dc:	ldrb	w1, [x0]
   344e0:	cmp	w1, #0x68
   344e4:	b.eq	34624 <__asan_backtrace_create_state@@Base+0xa3c>  // b.none
   344e8:	cmp	w1, #0x76
   344ec:	b.ne	34608 <__asan_backtrace_create_state@@Base+0xa20>  // b.any
   344f0:	ldr	x6, [x2, #24]
   344f4:	ldrb	w5, [x6]
   344f8:	cmp	w5, #0x6e
   344fc:	b.eq	34610 <__asan_backtrace_create_state@@Base+0xa28>  // b.none
   34500:	sub	w0, w5, #0x30
   34504:	and	w0, w0, #0xff
   34508:	cmp	w0, #0x9
   3450c:	b.hi	34568 <__asan_backtrace_create_state@@Base+0x980>  // b.pmore
   34510:	mov	w7, #0xcccd                	// #52429
   34514:	add	x3, x6, #0x1
   34518:	mov	w1, #0x0                   	// #0
   3451c:	mov	w8, #0x7fffffff            	// #2147483647
   34520:	movk	w7, #0xcccc, lsl #16
   34524:	b	34538 <__asan_backtrace_create_state@@Base+0x950>
   34528:	umull	x0, w0, w7
   3452c:	lsr	x0, x0, #35
   34530:	cmp	w0, w1
   34534:	b.lt	34608 <__asan_backtrace_create_state@@Base+0xa20>  // b.tstop
   34538:	add	w1, w1, w1, lsl #2
   3453c:	str	x3, [x2, #24]
   34540:	mov	x6, x3
   34544:	add	x3, x3, #0x1
   34548:	add	w1, w5, w1, lsl #1
   3454c:	ldurb	w5, [x3, #-1]
   34550:	sub	w1, w1, #0x30
   34554:	sub	w4, w5, #0x30
   34558:	sub	w0, w8, w4
   3455c:	and	w4, w4, #0xff
   34560:	cmp	w4, #0x9
   34564:	b.ls	34528 <__asan_backtrace_create_state@@Base+0x940>  // b.plast
   34568:	cmp	w5, #0x5f
   3456c:	b.ne	34608 <__asan_backtrace_create_state@@Base+0xa20>  // b.any
   34570:	add	x4, x6, #0x1
   34574:	str	x4, [x2, #24]
   34578:	ldrb	w0, [x6, #1]
   3457c:	cmp	w0, #0x6e
   34580:	b.ne	34590 <__asan_backtrace_create_state@@Base+0x9a8>  // b.any
   34584:	add	x4, x6, #0x2
   34588:	str	x4, [x2, #24]
   3458c:	ldrb	w0, [x6, #2]
   34590:	sub	w1, w0, #0x30
   34594:	and	w1, w1, #0xff
   34598:	cmp	w1, #0x9
   3459c:	b.hi	345f0 <__asan_backtrace_create_state@@Base+0xa08>  // b.pmore
   345a0:	mov	w7, #0xcccd                	// #52429
   345a4:	mov	w1, #0x0                   	// #0
   345a8:	mov	w6, #0x7fffffff            	// #2147483647
   345ac:	movk	w7, #0xcccc, lsl #16
   345b0:	b	345c4 <__asan_backtrace_create_state@@Base+0x9dc>
   345b4:	umull	x3, w3, w7
   345b8:	lsr	x3, x3, #35
   345bc:	cmp	w3, w1
   345c0:	b.lt	34608 <__asan_backtrace_create_state@@Base+0xa20>  // b.tstop
   345c4:	add	x4, x4, #0x1
   345c8:	add	w1, w1, w1, lsl #2
   345cc:	str	x4, [x2, #24]
   345d0:	add	w1, w0, w1, lsl #1
   345d4:	ldrb	w0, [x4]
   345d8:	sub	w1, w1, #0x30
   345dc:	sub	w5, w0, #0x30
   345e0:	sub	w3, w6, w5
   345e4:	and	w5, w5, #0xff
   345e8:	cmp	w5, #0x9
   345ec:	b.ls	345b4 <__asan_backtrace_create_state@@Base+0x9cc>  // b.plast
   345f0:	cmp	w0, #0x5f
   345f4:	b.ne	34608 <__asan_backtrace_create_state@@Base+0xa20>  // b.any
   345f8:	add	x4, x4, #0x1
   345fc:	mov	w0, #0x1                   	// #1
   34600:	str	x4, [x2, #24]
   34604:	ret
   34608:	mov	w0, #0x0                   	// #0
   3460c:	ret
   34610:	add	x0, x6, #0x1
   34614:	str	x0, [x2, #24]
   34618:	ldrb	w5, [x6, #1]
   3461c:	mov	x6, x0
   34620:	b	34500 <__asan_backtrace_create_state@@Base+0x918>
   34624:	ldr	x4, [x2, #24]
   34628:	ldrb	w0, [x4]
   3462c:	cmp	w0, #0x6e
   34630:	b.ne	34644 <__asan_backtrace_create_state@@Base+0xa5c>  // b.any
   34634:	add	x1, x4, #0x1
   34638:	str	x1, [x2, #24]
   3463c:	ldrb	w0, [x4, #1]
   34640:	mov	x4, x1
   34644:	sub	w1, w0, #0x30
   34648:	and	w1, w1, #0xff
   3464c:	cmp	w1, #0x9
   34650:	b.hi	345f0 <__asan_backtrace_create_state@@Base+0xa08>  // b.pmore
   34654:	mov	w7, #0xcccd                	// #52429
   34658:	add	x5, x4, #0x1
   3465c:	mov	w1, #0x0                   	// #0
   34660:	mov	w8, #0x7fffffff            	// #2147483647
   34664:	movk	w7, #0xcccc, lsl #16
   34668:	b	3467c <__asan_backtrace_create_state@@Base+0xa94>
   3466c:	umull	x3, w3, w7
   34670:	lsr	x3, x3, #35
   34674:	cmp	w3, w1
   34678:	b.lt	34608 <__asan_backtrace_create_state@@Base+0xa20>  // b.tstop
   3467c:	add	w1, w1, w1, lsl #2
   34680:	str	x5, [x2, #24]
   34684:	mov	x4, x5
   34688:	add	x5, x5, #0x1
   3468c:	add	w1, w0, w1, lsl #1
   34690:	ldurb	w0, [x5, #-1]
   34694:	sub	w1, w1, #0x30
   34698:	sub	w6, w0, #0x30
   3469c:	sub	w3, w8, w6
   346a0:	and	w6, w6, #0xff
   346a4:	cmp	w6, #0x9
   346a8:	b.ls	3466c <__asan_backtrace_create_state@@Base+0xa84>  // b.plast
   346ac:	b	345f0 <__asan_backtrace_create_state@@Base+0xa08>
   346b0:	stp	x29, x30, [sp, #-272]!
   346b4:	mov	x29, sp
   346b8:	stp	x19, x20, [sp, #16]
   346bc:	mov	x19, x0
   346c0:	cbz	x2, 34754 <__asan_backtrace_create_state@@Base+0xb6c>
   346c4:	stp	x21, x22, [sp, #32]
   346c8:	ldr	w21, [x0, #304]
   346cc:	cbnz	w21, 34718 <__asan_backtrace_create_state@@Base+0xb30>
   346d0:	ldr	w20, [x2]
   346d4:	stp	x23, x24, [sp, #48]
   346d8:	mov	x24, x2
   346dc:	cmp	w20, #0x50
   346e0:	b.ls	346f8 <__asan_backtrace_create_state@@Base+0xb10>  // b.plast
   346e4:	mov	w0, #0x1                   	// #1
   346e8:	ldp	x21, x22, [sp, #32]
   346ec:	ldp	x23, x24, [sp, #48]
   346f0:	str	w0, [x19, #304]
   346f4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   346f8:	adrp	x0, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   346fc:	mov	w22, w1
   34700:	add	x0, x0, #0xaf0
   34704:	stp	x25, x26, [sp, #64]
   34708:	ldrh	w0, [x0, w20, uxtw #1]
   3470c:	adr	x1, 34718 <__asan_backtrace_create_state@@Base+0xb30>
   34710:	add	x0, x1, w0, sxth #2
   34714:	br	x0
   34718:	ldp	x21, x22, [sp, #32]
   3471c:	ldp	x19, x20, [sp, #16]
   34720:	ldp	x29, x30, [sp], #272
   34724:	ret
   34728:	ldr	x0, [x2, #16]
   3472c:	ldr	w1, [x0]
   34730:	cmp	w1, #0x3b
   34734:	b.ne	34748 <__asan_backtrace_create_state@@Base+0xb60>  // b.any
   34738:	ldr	x0, [x0, #16]
   3473c:	ldr	w0, [x0]
   34740:	cmp	w0, #0x3c
   34744:	b.eq	3a2c4 <__asan_backtrace_create_state@@Base+0x66dc>  // b.none
   34748:	ldp	x21, x22, [sp, #32]
   3474c:	ldp	x23, x24, [sp, #48]
   34750:	ldp	x25, x26, [sp, #64]
   34754:	mov	w0, #0x1                   	// #1
   34758:	str	w0, [x19, #304]
   3475c:	ldp	x19, x20, [sp, #16]
   34760:	ldp	x29, x30, [sp], #272
   34764:	ret
   34768:	ldp	x1, x2, [x19, #288]
   3476c:	add	x0, sp, #0x90
   34770:	stp	x2, x24, [sp, #144]
   34774:	str	wzr, [sp, #160]
   34778:	str	x1, [sp, #168]
   3477c:	ldr	x3, [x24, #8]
   34780:	str	x0, [x19, #296]
   34784:	mov	x25, x3
   34788:	cbnz	x25, 371d4 <__asan_backtrace_create_state@@Base+0x35ec>
   3478c:	mov	w0, #0x1                   	// #1
   34790:	str	w0, [x19, #304]
   34794:	mov	x2, x24
   34798:	mov	w1, w22
   3479c:	mov	x0, x19
   347a0:	bl	3b568 <__asan_backtrace_create_state@@Base+0x7980>
   347a4:	ldr	x0, [sp, #144]
   347a8:	str	x0, [x19, #296]
   347ac:	cbz	w21, 37248 <__asan_backtrace_create_state@@Base+0x3660>
   347b0:	ldp	x21, x22, [sp, #32]
   347b4:	ldp	x25, x26, [sp, #64]
   347b8:	str	x23, [x19, #288]
   347bc:	ldp	x23, x24, [sp, #48]
   347c0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   347c4:	ldr	x2, [x19, #296]
   347c8:	ldr	x25, [x24, #8]
   347cc:	mov	x0, x2
   347d0:	cbz	x2, 34804 <__asan_backtrace_create_state@@Base+0xc1c>
   347d4:	nop
   347d8:	ldr	w1, [x0, #16]
   347dc:	cbnz	w1, 347fc <__asan_backtrace_create_state@@Base+0xc14>
   347e0:	ldr	x1, [x0, #8]
   347e4:	ldr	w1, [x1]
   347e8:	sub	w3, w1, #0x19
   347ec:	cmp	w3, #0x2
   347f0:	b.hi	398ec <__asan_backtrace_create_state@@Base+0x5d04>  // b.pmore
   347f4:	cmp	w20, w1
   347f8:	b.eq	398f8 <__asan_backtrace_create_state@@Base+0x5d10>  // b.none
   347fc:	ldr	x0, [x0]
   34800:	cbnz	x0, 347d8 <__asan_backtrace_create_state@@Base+0xbf0>
   34804:	ldr	x4, [x19, #288]
   34808:	b	34858 <__asan_backtrace_create_state@@Base+0xc70>
   3480c:	ldp	x25, x26, [sp, #64]
   34810:	b	346e4 <__asan_backtrace_create_state@@Base+0xafc>
   34814:	ldr	w0, [x19, #312]
   34818:	ldr	x3, [x2, #8]
   3481c:	mov	x25, x3
   34820:	ldr	w1, [x3]
   34824:	cbnz	w0, 38c00 <__asan_backtrace_create_state@@Base+0x5018>
   34828:	cmp	w1, #0x5
   3482c:	b.eq	3a084 <__asan_backtrace_create_state@@Base+0x649c>  // b.none
   34830:	ldr	x4, [x19, #288]
   34834:	mov	x0, x3
   34838:	mov	w21, #0x0                   	// #0
   3483c:	cmp	w1, #0x23
   34840:	ldr	x2, [x19, #296]
   34844:	b.eq	38ad8 <__asan_backtrace_create_state@@Base+0x4ef0>  // b.none
   34848:	cmp	w20, w1
   3484c:	b.eq	38ad8 <__asan_backtrace_create_state@@Base+0x4ef0>  // b.none
   34850:	cmp	w1, #0x24
   34854:	b.eq	371b8 <__asan_backtrace_create_state@@Base+0x35d0>  // b.none
   34858:	add	x0, sp, #0x90
   3485c:	stp	x2, x24, [sp, #144]
   34860:	str	wzr, [sp, #160]
   34864:	str	x4, [sp, #168]
   34868:	str	x0, [x19, #296]
   3486c:	b	34788 <__asan_backtrace_create_state@@Base+0xba0>
   34870:	ldr	x20, [x2, #8]
   34874:	cbz	x20, 384dc <__asan_backtrace_create_state@@Base+0x48f4>
   34878:	ldr	w0, [x20, #4]
   3487c:	cmp	w0, #0x1
   34880:	b.gt	384dc <__asan_backtrace_create_state@@Base+0x48f4>
   34884:	ldr	w1, [x19, #308]
   34888:	cmp	w1, #0x400
   3488c:	b.gt	384dc <__asan_backtrace_create_state@@Base+0x48f4>
   34890:	ldr	x3, [x19, #328]
   34894:	add	w0, w0, #0x1
   34898:	str	w0, [x20, #4]
   3489c:	add	w1, w1, #0x1
   348a0:	add	x0, sp, #0x90
   348a4:	str	w1, [x19, #308]
   348a8:	str	x0, [x19, #328]
   348ac:	mov	w1, w22
   348b0:	mov	x0, x19
   348b4:	mov	x2, x20
   348b8:	stp	x20, x3, [sp, #144]
   348bc:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   348c0:	ldr	w1, [x20, #4]
   348c4:	ldr	x0, [sp, #152]
   348c8:	str	x0, [x19, #328]
   348cc:	ldr	w0, [x19, #308]
   348d0:	sub	w1, w1, #0x1
   348d4:	str	w1, [x20, #4]
   348d8:	sub	w0, w0, #0x1
   348dc:	str	w0, [x19, #308]
   348e0:	tbz	w22, #2, 396a0 <__asan_backtrace_create_state@@Base+0x5ab8>
   348e4:	ldr	x1, [x19, #256]
   348e8:	add	x0, x1, #0x1
   348ec:	cmp	x1, #0xff
   348f0:	b.ne	34918 <__asan_backtrace_create_state@@Base+0xd30>  // b.any
   348f4:	ldp	x3, x2, [x19, #272]
   348f8:	strb	wzr, [x19, #255]
   348fc:	mov	x0, x19
   34900:	blr	x3
   34904:	ldr	x2, [x19, #320]
   34908:	mov	x0, #0x1                   	// #1
   3490c:	mov	x1, #0x0                   	// #0
   34910:	add	x2, x2, x0
   34914:	str	x2, [x19, #320]
   34918:	str	x0, [x19, #256]
   3491c:	mov	w0, #0x2e                  	// #46
   34920:	strb	w0, [x19, x1]
   34924:	strb	w0, [x19, #264]
   34928:	ldr	x23, [x24, #16]
   3492c:	ldr	w0, [x23]
   34930:	cmp	w0, #0x47
   34934:	b.eq	39bc8 <__asan_backtrace_create_state@@Base+0x5fe0>  // b.none
   34938:	ldr	w0, [x23, #4]
   3493c:	cmp	w0, #0x1
   34940:	b.gt	38568 <__asan_backtrace_create_state@@Base+0x4980>
   34944:	ldr	w1, [x19, #308]
   34948:	cmp	w1, #0x400
   3494c:	b.gt	38568 <__asan_backtrace_create_state@@Base+0x4980>
   34950:	ldr	x3, [x19, #328]
   34954:	add	w0, w0, #0x1
   34958:	str	w0, [x23, #4]
   3495c:	add	w1, w1, #0x1
   34960:	add	x0, sp, #0x90
   34964:	str	w1, [x19, #308]
   34968:	str	x0, [x19, #328]
   3496c:	mov	w1, w22
   34970:	mov	x2, x23
   34974:	mov	x0, x19
   34978:	stp	x23, x3, [sp, #144]
   3497c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34980:	ldr	w1, [x23, #4]
   34984:	ldr	x0, [sp, #152]
   34988:	sub	w1, w1, #0x1
   3498c:	ldp	x21, x22, [sp, #32]
   34990:	ldp	x25, x26, [sp, #64]
   34994:	str	x0, [x19, #328]
   34998:	ldr	w0, [x19, #308]
   3499c:	str	w1, [x23, #4]
   349a0:	sub	w0, w0, #0x1
   349a4:	ldp	x23, x24, [sp, #48]
   349a8:	str	w0, [x19, #308]
   349ac:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   349b0:	ldr	x20, [x24, #16]
   349b4:	add	x0, sp, #0x90
   349b8:	ldp	x1, x2, [x19, #288]
   349bc:	stp	x2, x24, [sp, #144]
   349c0:	str	wzr, [sp, #160]
   349c4:	str	x1, [sp, #168]
   349c8:	str	x0, [x19, #296]
   349cc:	cbz	x20, 385c8 <__asan_backtrace_create_state@@Base+0x49e0>
   349d0:	ldr	w0, [x20, #4]
   349d4:	cmp	w0, #0x1
   349d8:	b.gt	385c8 <__asan_backtrace_create_state@@Base+0x49e0>
   349dc:	ldr	w1, [x19, #308]
   349e0:	cmp	w1, #0x400
   349e4:	b.gt	385c8 <__asan_backtrace_create_state@@Base+0x49e0>
   349e8:	ldr	x3, [x19, #328]
   349ec:	add	w0, w0, #0x1
   349f0:	str	w0, [x20, #4]
   349f4:	add	w1, w1, #0x1
   349f8:	add	x0, sp, #0x80
   349fc:	str	w1, [x19, #308]
   34a00:	str	x0, [x19, #328]
   34a04:	mov	x2, x20
   34a08:	mov	w1, w22
   34a0c:	mov	x0, x19
   34a10:	stp	x20, x3, [sp, #128]
   34a14:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34a18:	ldr	w1, [x20, #4]
   34a1c:	ldr	x0, [sp, #136]
   34a20:	str	x0, [x19, #328]
   34a24:	ldr	w2, [sp, #160]
   34a28:	sub	w1, w1, #0x1
   34a2c:	ldr	w0, [x19, #308]
   34a30:	str	w1, [x20, #4]
   34a34:	sub	w0, w0, #0x1
   34a38:	str	w0, [x19, #308]
   34a3c:	cbz	w2, 385d0 <__asan_backtrace_create_state@@Base+0x49e8>
   34a40:	ldr	x0, [sp, #144]
   34a44:	ldp	x21, x22, [sp, #32]
   34a48:	ldp	x23, x24, [sp, #48]
   34a4c:	ldp	x25, x26, [sp, #64]
   34a50:	str	x0, [x19, #296]
   34a54:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   34a58:	ldr	x20, [x2, #8]
   34a5c:	cbz	x20, 34ac8 <__asan_backtrace_create_state@@Base+0xee0>
   34a60:	ldr	w0, [x20, #4]
   34a64:	cmp	w0, #0x1
   34a68:	b.gt	39144 <__asan_backtrace_create_state@@Base+0x555c>
   34a6c:	ldr	w1, [x19, #308]
   34a70:	cmp	w1, #0x400
   34a74:	b.gt	39144 <__asan_backtrace_create_state@@Base+0x555c>
   34a78:	ldr	x3, [x19, #328]
   34a7c:	add	w0, w0, #0x1
   34a80:	str	w0, [x20, #4]
   34a84:	add	w1, w1, #0x1
   34a88:	add	x0, sp, #0x90
   34a8c:	str	w1, [x19, #308]
   34a90:	str	x0, [x19, #328]
   34a94:	mov	w1, w22
   34a98:	mov	x0, x19
   34a9c:	mov	x2, x20
   34aa0:	stp	x20, x3, [sp, #144]
   34aa4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34aa8:	ldr	w1, [x20, #4]
   34aac:	ldr	x0, [sp, #152]
   34ab0:	str	x0, [x19, #328]
   34ab4:	ldr	w0, [x19, #308]
   34ab8:	sub	w1, w1, #0x1
   34abc:	str	w1, [x20, #4]
   34ac0:	sub	w0, w0, #0x1
   34ac4:	str	w0, [x19, #308]
   34ac8:	ldr	x0, [x24, #16]
   34acc:	cbz	x0, 39828 <__asan_backtrace_create_state@@Base+0x5c40>
   34ad0:	ldr	x1, [x19, #256]
   34ad4:	cmp	x1, #0xfd
   34ad8:	b.ls	34afc <__asan_backtrace_create_state@@Base+0xf14>  // b.plast
   34adc:	strb	wzr, [x19, x1]
   34ae0:	mov	x0, x19
   34ae4:	ldp	x3, x2, [x19, #272]
   34ae8:	blr	x3
   34aec:	str	xzr, [x19, #256]
   34af0:	ldr	x0, [x19, #320]
   34af4:	add	x0, x0, #0x1
   34af8:	str	x0, [x19, #320]
   34afc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   34b00:	add	x20, x20, #0xed8
   34b04:	mov	x0, x20
   34b08:	bl	67e0 <__asan_internal_strlen@plt>
   34b0c:	cbz	x0, 38918 <__asan_backtrace_create_state@@Base+0x4d30>
   34b10:	add	x25, x20, x0
   34b14:	mov	x26, #0x1                   	// #1
   34b18:	ldr	x23, [x19, #256]
   34b1c:	b	34b7c <__asan_backtrace_create_state@@Base+0xf94>
   34b20:	ldp	x3, x2, [x19, #272]
   34b24:	strb	wzr, [x19, #255]
   34b28:	mov	x0, x19
   34b2c:	mov	x1, x23
   34b30:	add	x20, x20, #0x1
   34b34:	blr	x3
   34b38:	strb	w21, [x19]
   34b3c:	ldr	x0, [x19, #320]
   34b40:	str	x26, [x19, #256]
   34b44:	strb	w21, [x19, #264]
   34b48:	cmp	x20, x25
   34b4c:	add	x0, x0, #0x1
   34b50:	str	x0, [x19, #320]
   34b54:	b.eq	39aac <__asan_backtrace_create_state@@Base+0x5ec4>  // b.none
   34b58:	ldrb	w21, [x20]
   34b5c:	mov	x0, #0x1                   	// #1
   34b60:	add	x23, x0, #0x1
   34b64:	str	x23, [x19, #256]
   34b68:	strb	w21, [x19, x0]
   34b6c:	add	x20, x20, #0x1
   34b70:	strb	w21, [x19, #264]
   34b74:	cmp	x25, x20
   34b78:	b.eq	3891c <__asan_backtrace_create_state@@Base+0x4d34>  // b.none
   34b7c:	ldrb	w21, [x20]
   34b80:	cmp	x23, #0xff
   34b84:	b.eq	34b20 <__asan_backtrace_create_state@@Base+0xf38>  // b.none
   34b88:	mov	x0, x23
   34b8c:	b	34b60 <__asan_backtrace_create_state@@Base+0xf78>
   34b90:	ldr	x23, [x2, #8]
   34b94:	mov	w21, #0x0                   	// #0
   34b98:	ldr	w0, [x23]
   34b9c:	cmp	w0, #0x27
   34ba0:	b.eq	39424 <__asan_backtrace_create_state@@Base+0x583c>  // b.none
   34ba4:	ldr	x0, [x19, #256]
   34ba8:	cmp	x0, #0xff
   34bac:	b.eq	39538 <__asan_backtrace_create_state@@Base+0x5950>  // b.none
   34bb0:	add	x1, x0, #0x1
   34bb4:	str	x1, [x19, #256]
   34bb8:	mov	w2, #0x28                  	// #40
   34bbc:	strb	w2, [x19, x0]
   34bc0:	strb	w2, [x19, #264]
   34bc4:	ldr	w0, [x23, #4]
   34bc8:	cmp	w0, #0x1
   34bcc:	b.gt	38e54 <__asan_backtrace_create_state@@Base+0x526c>
   34bd0:	ldr	w2, [x19, #308]
   34bd4:	cmp	w2, #0x400
   34bd8:	b.gt	38e54 <__asan_backtrace_create_state@@Base+0x526c>
   34bdc:	ldr	x3, [x19, #328]
   34be0:	add	w0, w0, #0x1
   34be4:	str	w0, [x23, #4]
   34be8:	add	w2, w2, #0x1
   34bec:	add	x0, sp, #0x90
   34bf0:	str	w2, [x19, #308]
   34bf4:	str	x0, [x19, #328]
   34bf8:	mov	w1, w22
   34bfc:	mov	x2, x23
   34c00:	mov	x0, x19
   34c04:	stp	x23, x3, [sp, #144]
   34c08:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34c0c:	ldr	w2, [x23, #4]
   34c10:	ldr	x0, [sp, #152]
   34c14:	str	x0, [x19, #328]
   34c18:	ldr	w0, [x19, #308]
   34c1c:	sub	w2, w2, #0x1
   34c20:	ldr	x1, [x19, #256]
   34c24:	str	w2, [x23, #4]
   34c28:	sub	w0, w0, #0x1
   34c2c:	str	w0, [x19, #308]
   34c30:	cmp	x1, #0xff
   34c34:	b.ne	3915c <__asan_backtrace_create_state@@Base+0x5574>  // b.any
   34c38:	ldp	x3, x2, [x19, #272]
   34c3c:	strb	wzr, [x19, #255]
   34c40:	mov	x0, x19
   34c44:	blr	x3
   34c48:	ldr	x1, [x19, #320]
   34c4c:	mov	w0, #0x29                  	// #41
   34c50:	strb	w0, [x19]
   34c54:	strb	w0, [x19, #264]
   34c58:	mov	x0, #0x1                   	// #1
   34c5c:	add	x1, x1, x0
   34c60:	str	x0, [x19, #256]
   34c64:	str	x1, [x19, #320]
   34c68:	ldr	w1, [x24]
   34c6c:	cmp	w1, #0x3e
   34c70:	b.eq	39598 <__asan_backtrace_create_state@@Base+0x59b0>  // b.none
   34c74:	cmp	w21, #0x8
   34c78:	b.eq	391b0 <__asan_backtrace_create_state@@Base+0x55c8>  // b.none
   34c7c:	ldr	x20, [x24, #16]
   34c80:	cbz	x20, 38814 <__asan_backtrace_create_state@@Base+0x4c2c>
   34c84:	ldr	w0, [x20, #4]
   34c88:	cmp	w0, #0x1
   34c8c:	b.gt	38814 <__asan_backtrace_create_state@@Base+0x4c2c>
   34c90:	ldr	w1, [x19, #308]
   34c94:	cmp	w1, #0x400
   34c98:	b.gt	38814 <__asan_backtrace_create_state@@Base+0x4c2c>
   34c9c:	ldr	x3, [x19, #328]
   34ca0:	add	w0, w0, #0x1
   34ca4:	str	w0, [x20, #4]
   34ca8:	add	w1, w1, #0x1
   34cac:	add	x0, sp, #0x90
   34cb0:	str	w1, [x19, #308]
   34cb4:	str	x0, [x19, #328]
   34cb8:	mov	w1, w22
   34cbc:	mov	x0, x19
   34cc0:	mov	x2, x20
   34cc4:	stp	x20, x3, [sp, #144]
   34cc8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34ccc:	ldr	w1, [x20, #4]
   34cd0:	ldr	x0, [sp, #152]
   34cd4:	str	x0, [x19, #328]
   34cd8:	ldr	w0, [x19, #308]
   34cdc:	sub	w1, w1, #0x1
   34ce0:	str	w1, [x20, #4]
   34ce4:	sub	w0, w0, #0x1
   34ce8:	str	w0, [x19, #308]
   34cec:	cmp	w21, #0x8
   34cf0:	b.eq	39650 <__asan_backtrace_create_state@@Base+0x5a68>  // b.none
   34cf4:	ldp	x21, x22, [sp, #32]
   34cf8:	ldp	x23, x24, [sp, #48]
   34cfc:	ldp	x25, x26, [sp, #64]
   34d00:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   34d04:	ldr	x20, [x2, #16]
   34d08:	cbz	x20, 385e4 <__asan_backtrace_create_state@@Base+0x49fc>
   34d0c:	ldr	w0, [x20, #4]
   34d10:	cmp	w0, #0x1
   34d14:	b.gt	385e4 <__asan_backtrace_create_state@@Base+0x49fc>
   34d18:	ldr	w1, [x19, #308]
   34d1c:	cmp	w1, #0x400
   34d20:	b.gt	385e4 <__asan_backtrace_create_state@@Base+0x49fc>
   34d24:	ldr	x3, [x19, #328]
   34d28:	add	w0, w0, #0x1
   34d2c:	str	w0, [x20, #4]
   34d30:	add	w1, w1, #0x1
   34d34:	add	x0, sp, #0x90
   34d38:	str	w1, [x19, #308]
   34d3c:	str	x0, [x19, #328]
   34d40:	mov	w1, w22
   34d44:	mov	x0, x19
   34d48:	mov	x2, x20
   34d4c:	stp	x20, x3, [sp, #144]
   34d50:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34d54:	ldr	w1, [x20, #4]
   34d58:	ldr	x0, [sp, #152]
   34d5c:	sub	w1, w1, #0x1
   34d60:	ldp	x21, x22, [sp, #32]
   34d64:	ldp	x23, x24, [sp, #48]
   34d68:	ldp	x25, x26, [sp, #64]
   34d6c:	str	x0, [x19, #328]
   34d70:	ldr	w0, [x19, #308]
   34d74:	str	w1, [x20, #4]
   34d78:	sub	w0, w0, #0x1
   34d7c:	str	w0, [x19, #308]
   34d80:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   34d84:	ldr	x1, [x19, #256]
   34d88:	add	x0, x1, #0x1
   34d8c:	cmp	x1, #0xff
   34d90:	b.ne	34db8 <__asan_backtrace_create_state@@Base+0x11d0>  // b.any
   34d94:	ldp	x3, x2, [x19, #272]
   34d98:	strb	wzr, [x19, #255]
   34d9c:	mov	x0, x19
   34da0:	blr	x3
   34da4:	ldr	x2, [x19, #320]
   34da8:	mov	x0, #0x1                   	// #1
   34dac:	mov	x1, #0x0                   	// #0
   34db0:	add	x2, x2, x0
   34db4:	str	x2, [x19, #320]
   34db8:	str	x0, [x19, #256]
   34dbc:	mov	w0, #0x7e                  	// #126
   34dc0:	strb	w0, [x19, x1]
   34dc4:	strb	w0, [x19, #264]
   34dc8:	ldr	x20, [x24, #16]
   34dcc:	cbz	x20, 385fc <__asan_backtrace_create_state@@Base+0x4a14>
   34dd0:	ldr	w0, [x20, #4]
   34dd4:	cmp	w0, #0x1
   34dd8:	b.gt	385fc <__asan_backtrace_create_state@@Base+0x4a14>
   34ddc:	ldr	w1, [x19, #308]
   34de0:	cmp	w1, #0x400
   34de4:	b.gt	385fc <__asan_backtrace_create_state@@Base+0x4a14>
   34de8:	ldr	x3, [x19, #328]
   34dec:	add	w0, w0, #0x1
   34df0:	str	w0, [x20, #4]
   34df4:	add	w1, w1, #0x1
   34df8:	add	x0, sp, #0x90
   34dfc:	str	w1, [x19, #308]
   34e00:	str	x0, [x19, #328]
   34e04:	mov	w1, w22
   34e08:	mov	x0, x19
   34e0c:	mov	x2, x20
   34e10:	stp	x20, x3, [sp, #144]
   34e14:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   34e18:	ldr	w1, [x20, #4]
   34e1c:	ldr	x0, [sp, #152]
   34e20:	sub	w1, w1, #0x1
   34e24:	ldp	x21, x22, [sp, #32]
   34e28:	ldp	x23, x24, [sp, #48]
   34e2c:	ldp	x25, x26, [sp, #64]
   34e30:	str	x0, [x19, #328]
   34e34:	ldr	w0, [x19, #308]
   34e38:	str	w1, [x20, #4]
   34e3c:	sub	w0, w0, #0x1
   34e40:	str	w0, [x19, #308]
   34e44:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   34e48:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   34e4c:	add	x20, x20, #0xd20
   34e50:	mov	x0, x20
   34e54:	bl	67e0 <__asan_internal_strlen@plt>
   34e58:	cbz	x0, 38280 <__asan_backtrace_create_state@@Base+0x4698>
   34e5c:	add	x23, x20, x0
   34e60:	mov	x25, #0x1                   	// #1
   34e64:	ldr	x1, [x19, #256]
   34e68:	b	34ec4 <__asan_backtrace_create_state@@Base+0x12dc>
   34e6c:	ldp	x3, x2, [x19, #272]
   34e70:	strb	wzr, [x19, #255]
   34e74:	mov	x0, x19
   34e78:	add	x20, x20, #0x1
   34e7c:	blr	x3
   34e80:	strb	w21, [x19]
   34e84:	ldr	x0, [x19, #320]
   34e88:	str	x25, [x19, #256]
   34e8c:	strb	w21, [x19, #264]
   34e90:	cmp	x20, x23
   34e94:	add	x0, x0, #0x1
   34e98:	str	x0, [x19, #320]
   34e9c:	b.eq	38280 <__asan_backtrace_create_state@@Base+0x4698>  // b.none
   34ea0:	ldrb	w21, [x20]
   34ea4:	mov	x0, #0x1                   	// #1
   34ea8:	add	x1, x0, #0x1
   34eac:	str	x1, [x19, #256]
   34eb0:	strb	w21, [x19, x0]
   34eb4:	add	x20, x20, #0x1
   34eb8:	strb	w21, [x19, #264]
   34ebc:	cmp	x23, x20
   34ec0:	b.eq	38280 <__asan_backtrace_create_state@@Base+0x4698>  // b.none
   34ec4:	ldrb	w21, [x20]
   34ec8:	cmp	x1, #0xff
   34ecc:	b.eq	34e6c <__asan_backtrace_create_state@@Base+0x1284>  // b.none
   34ed0:	mov	x0, x1
   34ed4:	b	34ea8 <__asan_backtrace_create_state@@Base+0x12c0>
   34ed8:	ldr	x23, [x2, #8]
   34edc:	cbnz	x23, 38d24 <__asan_backtrace_create_state@@Base+0x513c>
   34ee0:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   34ee4:	add	x20, x20, #0xf80
   34ee8:	mov	x0, x20
   34eec:	bl	67e0 <__asan_internal_strlen@plt>
   34ef0:	cbz	x0, 3a97c <__asan_backtrace_create_state@@Base+0x6d94>
   34ef4:	add	x22, x20, x0
   34ef8:	mov	x23, #0x1                   	// #1
   34efc:	ldr	x1, [x19, #256]
   34f00:	b	34f5c <__asan_backtrace_create_state@@Base+0x1374>
   34f04:	ldp	x3, x2, [x19, #272]
   34f08:	strb	wzr, [x19, #255]
   34f0c:	mov	x0, x19
   34f10:	add	x20, x20, #0x1
   34f14:	blr	x3
   34f18:	strb	w21, [x19]
   34f1c:	ldr	x0, [x19, #320]
   34f20:	str	x23, [x19, #256]
   34f24:	strb	w21, [x19, #264]
   34f28:	cmp	x22, x20
   34f2c:	add	x0, x0, #0x1
   34f30:	str	x0, [x19, #320]
   34f34:	b.eq	3a3f4 <__asan_backtrace_create_state@@Base+0x680c>  // b.none
   34f38:	ldrb	w21, [x20]
   34f3c:	mov	x0, #0x1                   	// #1
   34f40:	add	x1, x0, #0x1
   34f44:	str	x1, [x19, #256]
   34f48:	strb	w21, [x19, x0]
   34f4c:	add	x20, x20, #0x1
   34f50:	strb	w21, [x19, #264]
   34f54:	cmp	x22, x20
   34f58:	b.eq	39858 <__asan_backtrace_create_state@@Base+0x5c70>  // b.none
   34f5c:	ldrb	w21, [x20]
   34f60:	cmp	x1, #0xff
   34f64:	b.eq	34f04 <__asan_backtrace_create_state@@Base+0x131c>  // b.none
   34f68:	mov	x0, x1
   34f6c:	b	34f40 <__asan_backtrace_create_state@@Base+0x1358>
   34f70:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   34f74:	add	x20, x20, #0xe70
   34f78:	mov	x0, x20
   34f7c:	bl	67e0 <__asan_internal_strlen@plt>
   34f80:	cbz	x0, 3781c <__asan_backtrace_create_state@@Base+0x3c34>
   34f84:	add	x23, x20, x0
   34f88:	mov	x25, #0x1                   	// #1
   34f8c:	ldr	x1, [x19, #256]
   34f90:	b	34fec <__asan_backtrace_create_state@@Base+0x1404>
   34f94:	ldp	x3, x2, [x19, #272]
   34f98:	strb	wzr, [x19, #255]
   34f9c:	mov	x0, x19
   34fa0:	add	x20, x20, #0x1
   34fa4:	blr	x3
   34fa8:	strb	w21, [x19]
   34fac:	ldr	x0, [x19, #320]
   34fb0:	str	x25, [x19, #256]
   34fb4:	strb	w21, [x19, #264]
   34fb8:	cmp	x20, x23
   34fbc:	add	x0, x0, #0x1
   34fc0:	str	x0, [x19, #320]
   34fc4:	b.eq	3781c <__asan_backtrace_create_state@@Base+0x3c34>  // b.none
   34fc8:	ldrb	w21, [x20]
   34fcc:	mov	x0, #0x1                   	// #1
   34fd0:	add	x1, x0, #0x1
   34fd4:	str	x1, [x19, #256]
   34fd8:	strb	w21, [x19, x0]
   34fdc:	add	x20, x20, #0x1
   34fe0:	strb	w21, [x19, #264]
   34fe4:	cmp	x23, x20
   34fe8:	b.eq	3781c <__asan_backtrace_create_state@@Base+0x3c34>  // b.none
   34fec:	ldrb	w21, [x20]
   34ff0:	cmp	x1, #0xff
   34ff4:	b.eq	34f94 <__asan_backtrace_create_state@@Base+0x13ac>  // b.none
   34ff8:	mov	x0, x1
   34ffc:	b	34fd0 <__asan_backtrace_create_state@@Base+0x13e8>
   35000:	ldrsw	x22, [x2, #16]
   35004:	ldr	x20, [x2, #8]
   35008:	cbz	x22, 3a648 <__asan_backtrace_create_state@@Base+0x6a60>
   3500c:	add	x22, x20, x22
   35010:	mov	x23, #0x1                   	// #1
   35014:	ldr	x1, [x19, #256]
   35018:	b	35074 <__asan_backtrace_create_state@@Base+0x148c>
   3501c:	ldp	x3, x2, [x19, #272]
   35020:	strb	wzr, [x19, #255]
   35024:	mov	x0, x19
   35028:	add	x20, x20, #0x1
   3502c:	blr	x3
   35030:	strb	w21, [x19]
   35034:	ldr	x0, [x19, #320]
   35038:	str	x23, [x19, #256]
   3503c:	strb	w21, [x19, #264]
   35040:	cmp	x22, x20
   35044:	add	x0, x0, #0x1
   35048:	str	x0, [x19, #320]
   3504c:	b.eq	39838 <__asan_backtrace_create_state@@Base+0x5c50>  // b.none
   35050:	ldrb	w21, [x20]
   35054:	mov	x0, #0x1                   	// #1
   35058:	add	x1, x0, #0x1
   3505c:	str	x1, [x19, #256]
   35060:	strb	w21, [x19, x0]
   35064:	add	x20, x20, #0x1
   35068:	strb	w21, [x19, #264]
   3506c:	cmp	x22, x20
   35070:	b.eq	38ac8 <__asan_backtrace_create_state@@Base+0x4ee0>  // b.none
   35074:	ldrb	w21, [x20]
   35078:	cmp	x1, #0xff
   3507c:	b.eq	3501c <__asan_backtrace_create_state@@Base+0x1434>  // b.none
   35080:	mov	x0, x1
   35084:	b	35058 <__asan_backtrace_create_state@@Base+0x1470>
   35088:	ldp	x1, x23, [x19, #288]
   3508c:	add	x21, sp, #0x90
   35090:	stp	x23, x2, [sp, #144]
   35094:	mov	w20, #0x1                   	// #1
   35098:	mov	x5, x21
   3509c:	str	wzr, [sp, #160]
   350a0:	mov	w6, w20
   350a4:	str	x1, [sp, #168]
   350a8:	str	x21, [x19, #296]
   350ac:	mov	x0, x23
   350b0:	cbnz	x23, 350fc <__asan_backtrace_create_state@@Base+0x1514>
   350b4:	b	35110 <__asan_backtrace_create_state@@Base+0x1528>
   350b8:	ldr	w1, [x0, #16]
   350bc:	cbnz	w1, 350f4 <__asan_backtrace_create_state@@Base+0x150c>
   350c0:	cmp	w20, #0x3
   350c4:	b.hi	39f14 <__asan_backtrace_create_state@@Base+0x632c>  // b.pmore
   350c8:	ubfiz	x1, x20, #5, #32
   350cc:	add	w20, w20, #0x1
   350d0:	add	x4, x21, x1
   350d4:	ldp	x2, x3, [x0]
   350d8:	stp	x2, x3, [x4]
   350dc:	ldp	x2, x3, [x0, #16]
   350e0:	stp	x2, x3, [x4, #16]
   350e4:	str	x5, [x21, x1]
   350e8:	mov	x5, x4
   350ec:	str	x4, [x19, #296]
   350f0:	str	w6, [x0, #16]
   350f4:	ldr	x0, [x0]
   350f8:	cbz	x0, 35110 <__asan_backtrace_create_state@@Base+0x1528>
   350fc:	ldr	x1, [x0, #8]
   35100:	ldr	w1, [x1]
   35104:	sub	w1, w1, #0x19
   35108:	cmp	w1, #0x2
   3510c:	b.ls	350b8 <__asan_backtrace_create_state@@Base+0x14d0>  // b.plast
   35110:	ldr	x25, [x24, #16]
   35114:	cbz	x25, 38a80 <__asan_backtrace_create_state@@Base+0x4e98>
   35118:	ldr	w0, [x25, #4]
   3511c:	cmp	w0, #0x1
   35120:	b.gt	38a80 <__asan_backtrace_create_state@@Base+0x4e98>
   35124:	ldr	w1, [x19, #308]
   35128:	cmp	w1, #0x400
   3512c:	b.gt	38a80 <__asan_backtrace_create_state@@Base+0x4e98>
   35130:	ldr	x3, [x19, #328]
   35134:	add	w0, w0, #0x1
   35138:	str	w0, [x25, #4]
   3513c:	add	w1, w1, #0x1
   35140:	add	x0, sp, #0x80
   35144:	str	w1, [x19, #308]
   35148:	str	x0, [x19, #328]
   3514c:	mov	w1, w22
   35150:	mov	x0, x19
   35154:	mov	x2, x25
   35158:	stp	x25, x3, [sp, #128]
   3515c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   35160:	ldr	w1, [x25, #4]
   35164:	ldr	x0, [sp, #136]
   35168:	str	x0, [x19, #328]
   3516c:	ldr	w0, [x19, #308]
   35170:	sub	w1, w1, #0x1
   35174:	str	w1, [x25, #4]
   35178:	sub	w0, w0, #0x1
   3517c:	str	w0, [x19, #308]
   35180:	ldr	w0, [sp, #160]
   35184:	str	x23, [x19, #296]
   35188:	cbnz	w0, 398c4 <__asan_backtrace_create_state@@Base+0x5cdc>
   3518c:	ubfiz	x0, x20, #5, #32
   35190:	cmp	w20, #0x1
   35194:	add	x21, x21, x0
   35198:	b.eq	351bc <__asan_backtrace_create_state@@Base+0x15d4>  // b.none
   3519c:	ldur	x2, [x21, #-24]
   351a0:	sub	w20, w20, #0x1
   351a4:	mov	w1, w22
   351a8:	mov	x0, x19
   351ac:	sub	x21, x21, #0x20
   351b0:	bl	3b568 <__asan_backtrace_create_state@@Base+0x7980>
   351b4:	cmp	w20, #0x1
   351b8:	b.ne	3519c <__asan_backtrace_create_state@@Base+0x15b4>  // b.any
   351bc:	ldr	x3, [x19, #296]
   351c0:	add	x2, x24, #0x8
   351c4:	mov	w1, w22
   351c8:	mov	x0, x19
   351cc:	bl	3c758 <__asan_backtrace_create_state@@Base+0x8b70>
   351d0:	ldp	x21, x22, [sp, #32]
   351d4:	ldp	x23, x24, [sp, #48]
   351d8:	ldp	x25, x26, [sp, #64]
   351dc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   351e0:	ldrsh	w0, [x2, #18]
   351e4:	cbnz	w0, 395b4 <__asan_backtrace_create_state@@Base+0x59cc>
   351e8:	ldr	x20, [x24, #8]
   351ec:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   351f0:	ldr	x0, [x0, #3736]
   351f4:	ldr	x1, [x20, #8]
   351f8:	add	x0, x0, #0x100
   351fc:	cmp	x1, x0
   35200:	b.ne	38f88 <__asan_backtrace_create_state@@Base+0x53a0>  // b.any
   35204:	ldrsh	w0, [x24, #16]
   35208:	cbz	w0, 38c0c <__asan_backtrace_create_state@@Base+0x5024>
   3520c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35210:	add	x20, x20, #0xec8
   35214:	mov	x0, x20
   35218:	bl	67e0 <__asan_internal_strlen@plt>
   3521c:	cbz	x0, 3a9ac <__asan_backtrace_create_state@@Base+0x6dc4>
   35220:	add	x22, x20, x0
   35224:	mov	x23, #0x1                   	// #1
   35228:	ldr	x1, [x19, #256]
   3522c:	b	35288 <__asan_backtrace_create_state@@Base+0x16a0>
   35230:	ldp	x3, x2, [x19, #272]
   35234:	strb	wzr, [x19, #255]
   35238:	mov	x0, x19
   3523c:	add	x20, x20, #0x1
   35240:	blr	x3
   35244:	strb	w21, [x19]
   35248:	ldr	x0, [x19, #320]
   3524c:	str	x23, [x19, #256]
   35250:	strb	w21, [x19, #264]
   35254:	cmp	x20, x22
   35258:	add	x0, x0, #0x1
   3525c:	str	x0, [x19, #320]
   35260:	b.eq	3a484 <__asan_backtrace_create_state@@Base+0x689c>  // b.none
   35264:	ldrb	w21, [x20]
   35268:	mov	x0, #0x1                   	// #1
   3526c:	add	x1, x0, #0x1
   35270:	str	x1, [x19, #256]
   35274:	strb	w21, [x19, x0]
   35278:	add	x20, x20, #0x1
   3527c:	strb	w21, [x19, #264]
   35280:	cmp	x22, x20
   35284:	b.eq	39868 <__asan_backtrace_create_state@@Base+0x5c80>  // b.none
   35288:	ldrb	w21, [x20]
   3528c:	cmp	x1, #0xff
   35290:	b.eq	35230 <__asan_backtrace_create_state@@Base+0x1648>  // b.none
   35294:	mov	x0, x1
   35298:	b	3526c <__asan_backtrace_create_state@@Base+0x1684>
   3529c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   352a0:	add	x20, x20, #0xda8
   352a4:	mov	x0, x20
   352a8:	bl	67e0 <__asan_internal_strlen@plt>
   352ac:	cbz	x0, 38300 <__asan_backtrace_create_state@@Base+0x4718>
   352b0:	add	x23, x20, x0
   352b4:	mov	x25, #0x1                   	// #1
   352b8:	ldr	x1, [x19, #256]
   352bc:	b	35318 <__asan_backtrace_create_state@@Base+0x1730>
   352c0:	ldp	x3, x2, [x19, #272]
   352c4:	strb	wzr, [x19, #255]
   352c8:	mov	x0, x19
   352cc:	add	x20, x20, #0x1
   352d0:	blr	x3
   352d4:	strb	w21, [x19]
   352d8:	ldr	x0, [x19, #320]
   352dc:	str	x25, [x19, #256]
   352e0:	strb	w21, [x19, #264]
   352e4:	cmp	x23, x20
   352e8:	add	x0, x0, #0x1
   352ec:	str	x0, [x19, #320]
   352f0:	b.eq	38300 <__asan_backtrace_create_state@@Base+0x4718>  // b.none
   352f4:	ldrb	w21, [x20]
   352f8:	mov	x0, #0x1                   	// #1
   352fc:	add	x1, x0, #0x1
   35300:	str	x1, [x19, #256]
   35304:	strb	w21, [x19, x0]
   35308:	add	x20, x20, #0x1
   3530c:	strb	w21, [x19, #264]
   35310:	cmp	x23, x20
   35314:	b.eq	38300 <__asan_backtrace_create_state@@Base+0x4718>  // b.none
   35318:	ldrb	w21, [x20]
   3531c:	cmp	x1, #0xff
   35320:	b.eq	352c0 <__asan_backtrace_create_state@@Base+0x16d8>  // b.none
   35324:	mov	x0, x1
   35328:	b	352fc <__asan_backtrace_create_state@@Base+0x1714>
   3532c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35330:	add	x20, x20, #0xdc0
   35334:	mov	x0, x20
   35338:	bl	67e0 <__asan_internal_strlen@plt>
   3533c:	cbz	x0, 38430 <__asan_backtrace_create_state@@Base+0x4848>
   35340:	add	x23, x20, x0
   35344:	mov	x25, #0x1                   	// #1
   35348:	ldr	x1, [x19, #256]
   3534c:	b	353a8 <__asan_backtrace_create_state@@Base+0x17c0>
   35350:	ldp	x3, x2, [x19, #272]
   35354:	strb	wzr, [x19, #255]
   35358:	mov	x0, x19
   3535c:	add	x20, x20, #0x1
   35360:	blr	x3
   35364:	strb	w21, [x19]
   35368:	ldr	x0, [x19, #320]
   3536c:	str	x25, [x19, #256]
   35370:	strb	w21, [x19, #264]
   35374:	cmp	x23, x20
   35378:	add	x0, x0, #0x1
   3537c:	str	x0, [x19, #320]
   35380:	b.eq	38430 <__asan_backtrace_create_state@@Base+0x4848>  // b.none
   35384:	ldrb	w21, [x20]
   35388:	mov	x0, #0x1                   	// #1
   3538c:	add	x1, x0, #0x1
   35390:	str	x1, [x19, #256]
   35394:	strb	w21, [x19, x0]
   35398:	add	x20, x20, #0x1
   3539c:	strb	w21, [x19, #264]
   353a0:	cmp	x23, x20
   353a4:	b.eq	38430 <__asan_backtrace_create_state@@Base+0x4848>  // b.none
   353a8:	ldrb	w21, [x20]
   353ac:	cmp	x1, #0xff
   353b0:	b.eq	35350 <__asan_backtrace_create_state@@Base+0x1768>  // b.none
   353b4:	mov	x0, x1
   353b8:	b	3538c <__asan_backtrace_create_state@@Base+0x17a4>
   353bc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   353c0:	add	x20, x20, #0xdd8
   353c4:	mov	x0, x20
   353c8:	bl	67e0 <__asan_internal_strlen@plt>
   353cc:	cbz	x0, 37f04 <__asan_backtrace_create_state@@Base+0x431c>
   353d0:	add	x23, x20, x0
   353d4:	mov	x25, #0x1                   	// #1
   353d8:	ldr	x1, [x19, #256]
   353dc:	b	35438 <__asan_backtrace_create_state@@Base+0x1850>
   353e0:	ldp	x3, x2, [x19, #272]
   353e4:	strb	wzr, [x19, #255]
   353e8:	mov	x0, x19
   353ec:	add	x20, x20, #0x1
   353f0:	blr	x3
   353f4:	strb	w21, [x19]
   353f8:	ldr	x0, [x19, #320]
   353fc:	str	x25, [x19, #256]
   35400:	strb	w21, [x19, #264]
   35404:	cmp	x23, x20
   35408:	add	x0, x0, #0x1
   3540c:	str	x0, [x19, #320]
   35410:	b.eq	37f04 <__asan_backtrace_create_state@@Base+0x431c>  // b.none
   35414:	ldrb	w21, [x20]
   35418:	mov	x0, #0x1                   	// #1
   3541c:	add	x1, x0, #0x1
   35420:	str	x1, [x19, #256]
   35424:	strb	w21, [x19, x0]
   35428:	add	x20, x20, #0x1
   3542c:	strb	w21, [x19, #264]
   35430:	cmp	x23, x20
   35434:	b.eq	37f04 <__asan_backtrace_create_state@@Base+0x431c>  // b.none
   35438:	ldrb	w21, [x20]
   3543c:	cmp	x1, #0xff
   35440:	b.eq	353e0 <__asan_backtrace_create_state@@Base+0x17f8>  // b.none
   35444:	mov	x0, x1
   35448:	b	3541c <__asan_backtrace_create_state@@Base+0x1834>
   3544c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35450:	add	x20, x20, #0xdf8
   35454:	mov	x0, x20
   35458:	bl	67e0 <__asan_internal_strlen@plt>
   3545c:	cbz	x0, 37cc0 <__asan_backtrace_create_state@@Base+0x40d8>
   35460:	add	x23, x20, x0
   35464:	mov	x25, #0x1                   	// #1
   35468:	ldr	x1, [x19, #256]
   3546c:	b	354c8 <__asan_backtrace_create_state@@Base+0x18e0>
   35470:	ldp	x3, x2, [x19, #272]
   35474:	strb	wzr, [x19, #255]
   35478:	mov	x0, x19
   3547c:	add	x20, x20, #0x1
   35480:	blr	x3
   35484:	strb	w21, [x19]
   35488:	ldr	x0, [x19, #320]
   3548c:	str	x25, [x19, #256]
   35490:	strb	w21, [x19, #264]
   35494:	cmp	x20, x23
   35498:	add	x0, x0, #0x1
   3549c:	str	x0, [x19, #320]
   354a0:	b.eq	37cc0 <__asan_backtrace_create_state@@Base+0x40d8>  // b.none
   354a4:	ldrb	w21, [x20]
   354a8:	mov	x0, #0x1                   	// #1
   354ac:	add	x1, x0, #0x1
   354b0:	str	x1, [x19, #256]
   354b4:	strb	w21, [x19, x0]
   354b8:	add	x20, x20, #0x1
   354bc:	strb	w21, [x19, #264]
   354c0:	cmp	x23, x20
   354c4:	b.eq	37cc0 <__asan_backtrace_create_state@@Base+0x40d8>  // b.none
   354c8:	ldrb	w21, [x20]
   354cc:	cmp	x1, #0xff
   354d0:	b.eq	35470 <__asan_backtrace_create_state@@Base+0x1888>  // b.none
   354d4:	mov	x0, x1
   354d8:	b	354ac <__asan_backtrace_create_state@@Base+0x18c4>
   354dc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   354e0:	add	x20, x20, #0xe08
   354e4:	mov	x0, x20
   354e8:	bl	67e0 <__asan_internal_strlen@plt>
   354ec:	cbz	x0, 37b1c <__asan_backtrace_create_state@@Base+0x3f34>
   354f0:	add	x23, x20, x0
   354f4:	mov	x25, #0x1                   	// #1
   354f8:	ldr	x1, [x19, #256]
   354fc:	b	35558 <__asan_backtrace_create_state@@Base+0x1970>
   35500:	ldp	x3, x2, [x19, #272]
   35504:	strb	wzr, [x19, #255]
   35508:	mov	x0, x19
   3550c:	add	x20, x20, #0x1
   35510:	blr	x3
   35514:	strb	w21, [x19]
   35518:	ldr	x0, [x19, #320]
   3551c:	str	x25, [x19, #256]
   35520:	strb	w21, [x19, #264]
   35524:	cmp	x23, x20
   35528:	add	x0, x0, #0x1
   3552c:	str	x0, [x19, #320]
   35530:	b.eq	37b1c <__asan_backtrace_create_state@@Base+0x3f34>  // b.none
   35534:	ldrb	w21, [x20]
   35538:	mov	x0, #0x1                   	// #1
   3553c:	add	x1, x0, #0x1
   35540:	str	x1, [x19, #256]
   35544:	strb	w21, [x19, x0]
   35548:	add	x20, x20, #0x1
   3554c:	strb	w21, [x19, #264]
   35550:	cmp	x23, x20
   35554:	b.eq	37b1c <__asan_backtrace_create_state@@Base+0x3f34>  // b.none
   35558:	ldrb	w21, [x20]
   3555c:	cmp	x1, #0xff
   35560:	b.eq	35500 <__asan_backtrace_create_state@@Base+0x1918>  // b.none
   35564:	mov	x0, x1
   35568:	b	3553c <__asan_backtrace_create_state@@Base+0x1954>
   3556c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35570:	add	x20, x20, #0xe20
   35574:	mov	x0, x20
   35578:	bl	67e0 <__asan_internal_strlen@plt>
   3557c:	cbz	x0, 37c40 <__asan_backtrace_create_state@@Base+0x4058>
   35580:	add	x23, x20, x0
   35584:	mov	x25, #0x1                   	// #1
   35588:	ldr	x1, [x19, #256]
   3558c:	b	355e8 <__asan_backtrace_create_state@@Base+0x1a00>
   35590:	ldp	x3, x2, [x19, #272]
   35594:	strb	wzr, [x19, #255]
   35598:	mov	x0, x19
   3559c:	add	x20, x20, #0x1
   355a0:	blr	x3
   355a4:	strb	w21, [x19]
   355a8:	ldr	x0, [x19, #320]
   355ac:	str	x25, [x19, #256]
   355b0:	strb	w21, [x19, #264]
   355b4:	cmp	x23, x20
   355b8:	add	x0, x0, #0x1
   355bc:	str	x0, [x19, #320]
   355c0:	b.eq	37c40 <__asan_backtrace_create_state@@Base+0x4058>  // b.none
   355c4:	ldrb	w21, [x20]
   355c8:	mov	x0, #0x1                   	// #1
   355cc:	add	x1, x0, #0x1
   355d0:	str	x1, [x19, #256]
   355d4:	strb	w21, [x19, x0]
   355d8:	add	x20, x20, #0x1
   355dc:	strb	w21, [x19, #264]
   355e0:	cmp	x23, x20
   355e4:	b.eq	37c40 <__asan_backtrace_create_state@@Base+0x4058>  // b.none
   355e8:	ldrb	w21, [x20]
   355ec:	cmp	x1, #0xff
   355f0:	b.eq	35590 <__asan_backtrace_create_state@@Base+0x19a8>  // b.none
   355f4:	mov	x0, x1
   355f8:	b	355cc <__asan_backtrace_create_state@@Base+0x19e4>
   355fc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35600:	add	x20, x20, #0xe38
   35604:	mov	x0, x20
   35608:	bl	67e0 <__asan_internal_strlen@plt>
   3560c:	cbz	x0, 3791c <__asan_backtrace_create_state@@Base+0x3d34>
   35610:	add	x23, x20, x0
   35614:	mov	x25, #0x1                   	// #1
   35618:	ldr	x1, [x19, #256]
   3561c:	b	35678 <__asan_backtrace_create_state@@Base+0x1a90>
   35620:	ldp	x3, x2, [x19, #272]
   35624:	strb	wzr, [x19, #255]
   35628:	mov	x0, x19
   3562c:	add	x20, x20, #0x1
   35630:	blr	x3
   35634:	strb	w21, [x19]
   35638:	ldr	x0, [x19, #320]
   3563c:	str	x25, [x19, #256]
   35640:	strb	w21, [x19, #264]
   35644:	cmp	x23, x20
   35648:	add	x0, x0, #0x1
   3564c:	str	x0, [x19, #320]
   35650:	b.eq	3791c <__asan_backtrace_create_state@@Base+0x3d34>  // b.none
   35654:	ldrb	w21, [x20]
   35658:	mov	x0, #0x1                   	// #1
   3565c:	add	x1, x0, #0x1
   35660:	str	x1, [x19, #256]
   35664:	strb	w21, [x19, x0]
   35668:	add	x20, x20, #0x1
   3566c:	strb	w21, [x19, #264]
   35670:	cmp	x23, x20
   35674:	b.eq	3791c <__asan_backtrace_create_state@@Base+0x3d34>  // b.none
   35678:	ldrb	w21, [x20]
   3567c:	cmp	x1, #0xff
   35680:	b.eq	35620 <__asan_backtrace_create_state@@Base+0x1a38>  // b.none
   35684:	mov	x0, x1
   35688:	b	3565c <__asan_backtrace_create_state@@Base+0x1a74>
   3568c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35690:	add	x20, x20, #0xe58
   35694:	mov	x0, x20
   35698:	bl	67e0 <__asan_internal_strlen@plt>
   3569c:	cbz	x0, 3799c <__asan_backtrace_create_state@@Base+0x3db4>
   356a0:	add	x23, x20, x0
   356a4:	mov	x25, #0x1                   	// #1
   356a8:	ldr	x1, [x19, #256]
   356ac:	b	35708 <__asan_backtrace_create_state@@Base+0x1b20>
   356b0:	ldp	x3, x2, [x19, #272]
   356b4:	strb	wzr, [x19, #255]
   356b8:	mov	x0, x19
   356bc:	add	x20, x20, #0x1
   356c0:	blr	x3
   356c4:	strb	w21, [x19]
   356c8:	ldr	x0, [x19, #320]
   356cc:	str	x25, [x19, #256]
   356d0:	strb	w21, [x19, #264]
   356d4:	cmp	x23, x20
   356d8:	add	x0, x0, #0x1
   356dc:	str	x0, [x19, #320]
   356e0:	b.eq	3799c <__asan_backtrace_create_state@@Base+0x3db4>  // b.none
   356e4:	ldrb	w21, [x20]
   356e8:	mov	x0, #0x1                   	// #1
   356ec:	add	x1, x0, #0x1
   356f0:	str	x1, [x19, #256]
   356f4:	strb	w21, [x19, x0]
   356f8:	add	x20, x20, #0x1
   356fc:	strb	w21, [x19, #264]
   35700:	cmp	x23, x20
   35704:	b.eq	3799c <__asan_backtrace_create_state@@Base+0x3db4>  // b.none
   35708:	ldrb	w21, [x20]
   3570c:	cmp	x1, #0xff
   35710:	b.eq	356b0 <__asan_backtrace_create_state@@Base+0x1ac8>  // b.none
   35714:	mov	x0, x1
   35718:	b	356ec <__asan_backtrace_create_state@@Base+0x1b04>
   3571c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35720:	add	x20, x20, #0xea0
   35724:	mov	x0, x20
   35728:	bl	67e0 <__asan_internal_strlen@plt>
   3572c:	cbz	x0, 3789c <__asan_backtrace_create_state@@Base+0x3cb4>
   35730:	add	x23, x20, x0
   35734:	mov	x25, #0x1                   	// #1
   35738:	ldr	x1, [x19, #256]
   3573c:	b	35798 <__asan_backtrace_create_state@@Base+0x1bb0>
   35740:	ldp	x3, x2, [x19, #272]
   35744:	strb	wzr, [x19, #255]
   35748:	mov	x0, x19
   3574c:	add	x20, x20, #0x1
   35750:	blr	x3
   35754:	strb	w21, [x19]
   35758:	ldr	x0, [x19, #320]
   3575c:	str	x25, [x19, #256]
   35760:	strb	w21, [x19, #264]
   35764:	cmp	x20, x23
   35768:	add	x0, x0, #0x1
   3576c:	str	x0, [x19, #320]
   35770:	b.eq	3789c <__asan_backtrace_create_state@@Base+0x3cb4>  // b.none
   35774:	ldrb	w21, [x20]
   35778:	mov	x0, #0x1                   	// #1
   3577c:	add	x1, x0, #0x1
   35780:	str	x1, [x19, #256]
   35784:	strb	w21, [x19, x0]
   35788:	add	x20, x20, #0x1
   3578c:	strb	w21, [x19, #264]
   35790:	cmp	x23, x20
   35794:	b.eq	3789c <__asan_backtrace_create_state@@Base+0x3cb4>  // b.none
   35798:	ldrb	w21, [x20]
   3579c:	cmp	x1, #0xff
   357a0:	b.eq	35740 <__asan_backtrace_create_state@@Base+0x1b58>  // b.none
   357a4:	mov	x0, x1
   357a8:	b	3577c <__asan_backtrace_create_state@@Base+0x1b94>
   357ac:	ldr	x1, [x2, #8]
   357b0:	mov	x0, x19
   357b4:	mov	w23, #0x0                   	// #0
   357b8:	bl	33fe0 <__asan_backtrace_create_state@@Base+0x3f8>
   357bc:	cbz	x0, 3a7cc <__asan_backtrace_create_state@@Base+0x6be4>
   357c0:	stp	x27, x28, [sp, #80]
   357c4:	nop
   357c8:	ldr	w1, [x0]
   357cc:	cmp	w1, #0x2f
   357d0:	b.ne	38aac <__asan_backtrace_create_state@@Base+0x4ec4>  // b.any
   357d4:	ldr	x1, [x0, #8]
   357d8:	cbz	x1, 38aac <__asan_backtrace_create_state@@Base+0x4ec4>
   357dc:	ldr	x0, [x0, #16]
   357e0:	add	w23, w23, #0x1
   357e4:	cbnz	x0, 357c8 <__asan_backtrace_create_state@@Base+0x1be0>
   357e8:	ldr	x28, [x24, #8]
   357ec:	sub	w0, w23, #0x1
   357f0:	str	w0, [sp, #100]
   357f4:	cmp	w0, #0x0
   357f8:	b.le	37120 <__asan_backtrace_create_state@@Base+0x3538>
   357fc:	adrp	x24, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35800:	add	x24, x24, #0xed8
   35804:	add	x0, sp, #0x90
   35808:	mov	x25, #0x1                   	// #1
   3580c:	str	x0, [sp, #104]
   35810:	str	w21, [x19, #316]
   35814:	cbz	x28, 371ac <__asan_backtrace_create_state@@Base+0x35c4>
   35818:	ldr	w0, [x28, #4]
   3581c:	cmp	w0, #0x1
   35820:	b.gt	371ac <__asan_backtrace_create_state@@Base+0x35c4>
   35824:	ldr	w1, [x19, #308]
   35828:	cmp	w1, #0x400
   3582c:	b.gt	371ac <__asan_backtrace_create_state@@Base+0x35c4>
   35830:	add	w0, w0, #0x1
   35834:	add	w1, w1, #0x1
   35838:	ldr	x3, [x19, #328]
   3583c:	str	w0, [x28, #4]
   35840:	ldr	x0, [sp, #104]
   35844:	str	w1, [x19, #308]
   35848:	str	x0, [x19, #328]
   3584c:	mov	w1, w22
   35850:	mov	x0, x19
   35854:	mov	x2, x28
   35858:	stp	x28, x3, [sp, #144]
   3585c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   35860:	ldr	w1, [x28, #4]
   35864:	ldr	x0, [sp, #152]
   35868:	str	x0, [x19, #328]
   3586c:	ldr	w0, [x19, #308]
   35870:	sub	w1, w1, #0x1
   35874:	str	w1, [x28, #4]
   35878:	sub	w0, w0, #0x1
   3587c:	str	w0, [x19, #308]
   35880:	mov	x0, x24
   35884:	bl	67e0 <__asan_internal_strlen@plt>
   35888:	cbz	x0, 37108 <__asan_backtrace_create_state@@Base+0x3520>
   3588c:	add	x27, x24, x0
   35890:	mov	x20, x24
   35894:	ldr	x1, [x19, #256]
   35898:	b	358f4 <__asan_backtrace_create_state@@Base+0x1d0c>
   3589c:	ldp	x6, x2, [x19, #272]
   358a0:	strb	wzr, [x19, #255]
   358a4:	mov	x0, x19
   358a8:	add	x20, x20, #0x1
   358ac:	blr	x6
   358b0:	strb	w26, [x19]
   358b4:	ldr	x0, [x19, #320]
   358b8:	str	x25, [x19, #256]
   358bc:	strb	w26, [x19, #264]
   358c0:	cmp	x20, x27
   358c4:	add	x0, x0, #0x1
   358c8:	str	x0, [x19, #320]
   358cc:	b.eq	37108 <__asan_backtrace_create_state@@Base+0x3520>  // b.none
   358d0:	ldrb	w26, [x20]
   358d4:	mov	x0, #0x1                   	// #1
   358d8:	add	x1, x0, #0x1
   358dc:	str	x1, [x19, #256]
   358e0:	strb	w26, [x19, x0]
   358e4:	add	x20, x20, #0x1
   358e8:	strb	w26, [x19, #264]
   358ec:	cmp	x27, x20
   358f0:	b.eq	37108 <__asan_backtrace_create_state@@Base+0x3520>  // b.none
   358f4:	ldrb	w26, [x20]
   358f8:	cmp	x1, #0xff
   358fc:	b.eq	3589c <__asan_backtrace_create_state@@Base+0x1cb4>  // b.none
   35900:	mov	x0, x1
   35904:	b	358d8 <__asan_backtrace_create_state@@Base+0x1cf0>
   35908:	ldr	x20, [x2, #8]
   3590c:	cbz	x20, 386bc <__asan_backtrace_create_state@@Base+0x4ad4>
   35910:	ldr	w0, [x20, #4]
   35914:	cmp	w0, #0x1
   35918:	b.gt	386bc <__asan_backtrace_create_state@@Base+0x4ad4>
   3591c:	ldr	w1, [x19, #308]
   35920:	cmp	w1, #0x400
   35924:	b.gt	386bc <__asan_backtrace_create_state@@Base+0x4ad4>
   35928:	ldr	x3, [x19, #328]
   3592c:	add	w0, w0, #0x1
   35930:	str	w0, [x20, #4]
   35934:	add	w1, w1, #0x1
   35938:	add	x0, sp, #0x90
   3593c:	str	w1, [x19, #308]
   35940:	str	x0, [x19, #328]
   35944:	mov	w1, w22
   35948:	mov	x0, x19
   3594c:	mov	x2, x20
   35950:	stp	x20, x3, [sp, #144]
   35954:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   35958:	ldr	w1, [x20, #4]
   3595c:	ldr	x0, [sp, #152]
   35960:	str	x0, [x19, #328]
   35964:	ldr	w0, [x19, #308]
   35968:	sub	w1, w1, #0x1
   3596c:	str	w1, [x20, #4]
   35970:	sub	w0, w0, #0x1
   35974:	str	w0, [x19, #308]
   35978:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3597c:	add	x20, x20, #0xcc8
   35980:	mov	x0, x20
   35984:	bl	67e0 <__asan_internal_strlen@plt>
   35988:	cbz	x0, 37758 <__asan_backtrace_create_state@@Base+0x3b70>
   3598c:	add	x23, x20, x0
   35990:	mov	x25, #0x1                   	// #1
   35994:	ldr	x1, [x19, #256]
   35998:	b	359f4 <__asan_backtrace_create_state@@Base+0x1e0c>
   3599c:	ldp	x3, x2, [x19, #272]
   359a0:	strb	wzr, [x19, #255]
   359a4:	mov	x0, x19
   359a8:	add	x20, x20, #0x1
   359ac:	blr	x3
   359b0:	strb	w21, [x19]
   359b4:	ldr	x0, [x19, #320]
   359b8:	str	x25, [x19, #256]
   359bc:	strb	w21, [x19, #264]
   359c0:	cmp	x23, x20
   359c4:	add	x0, x0, #0x1
   359c8:	str	x0, [x19, #320]
   359cc:	b.eq	37758 <__asan_backtrace_create_state@@Base+0x3b70>  // b.none
   359d0:	ldrb	w21, [x20]
   359d4:	mov	x0, #0x1                   	// #1
   359d8:	add	x1, x0, #0x1
   359dc:	str	x1, [x19, #256]
   359e0:	strb	w21, [x19, x0]
   359e4:	add	x20, x20, #0x1
   359e8:	strb	w21, [x19, #264]
   359ec:	cmp	x23, x20
   359f0:	b.eq	37758 <__asan_backtrace_create_state@@Base+0x3b70>  // b.none
   359f4:	ldrb	w21, [x20]
   359f8:	cmp	x1, #0xff
   359fc:	b.eq	3599c <__asan_backtrace_create_state@@Base+0x1db4>  // b.none
   35a00:	mov	x0, x1
   35a04:	b	359d8 <__asan_backtrace_create_state@@Base+0x1df0>
   35a08:	ldr	x20, [x2, #8]
   35a0c:	cbz	x20, 386c8 <__asan_backtrace_create_state@@Base+0x4ae0>
   35a10:	ldr	w0, [x20, #4]
   35a14:	cmp	w0, #0x1
   35a18:	b.gt	386c8 <__asan_backtrace_create_state@@Base+0x4ae0>
   35a1c:	ldr	w1, [x19, #308]
   35a20:	cmp	w1, #0x400
   35a24:	b.gt	386c8 <__asan_backtrace_create_state@@Base+0x4ae0>
   35a28:	ldr	x3, [x19, #328]
   35a2c:	add	w0, w0, #0x1
   35a30:	str	w0, [x20, #4]
   35a34:	add	w1, w1, #0x1
   35a38:	add	x0, sp, #0x90
   35a3c:	str	w1, [x19, #308]
   35a40:	str	x0, [x19, #328]
   35a44:	mov	w1, w22
   35a48:	mov	x0, x19
   35a4c:	mov	x2, x20
   35a50:	stp	x20, x3, [sp, #144]
   35a54:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   35a58:	ldr	w1, [x20, #4]
   35a5c:	ldr	x0, [sp, #152]
   35a60:	str	x0, [x19, #328]
   35a64:	ldr	w0, [x19, #308]
   35a68:	sub	w1, w1, #0x1
   35a6c:	str	w1, [x20, #4]
   35a70:	sub	w0, w0, #0x1
   35a74:	str	w0, [x19, #308]
   35a78:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35a7c:	add	x20, x20, #0xff8
   35a80:	mov	x0, x20
   35a84:	bl	67e0 <__asan_internal_strlen@plt>
   35a88:	cbz	x0, 37d40 <__asan_backtrace_create_state@@Base+0x4158>
   35a8c:	add	x23, x20, x0
   35a90:	mov	x25, #0x1                   	// #1
   35a94:	ldr	x1, [x19, #256]
   35a98:	b	35af4 <__asan_backtrace_create_state@@Base+0x1f0c>
   35a9c:	ldp	x3, x2, [x19, #272]
   35aa0:	strb	wzr, [x19, #255]
   35aa4:	mov	x0, x19
   35aa8:	add	x20, x20, #0x1
   35aac:	blr	x3
   35ab0:	strb	w21, [x19]
   35ab4:	ldr	x0, [x19, #320]
   35ab8:	str	x25, [x19, #256]
   35abc:	strb	w21, [x19, #264]
   35ac0:	cmp	x20, x23
   35ac4:	add	x0, x0, #0x1
   35ac8:	str	x0, [x19, #320]
   35acc:	b.eq	37d40 <__asan_backtrace_create_state@@Base+0x4158>  // b.none
   35ad0:	ldrb	w21, [x20]
   35ad4:	mov	x0, #0x1                   	// #1
   35ad8:	add	x1, x0, #0x1
   35adc:	str	x1, [x19, #256]
   35ae0:	strb	w21, [x19, x0]
   35ae4:	add	x20, x20, #0x1
   35ae8:	strb	w21, [x19, #264]
   35aec:	cmp	x23, x20
   35af0:	b.eq	37d40 <__asan_backtrace_create_state@@Base+0x4158>  // b.none
   35af4:	ldrb	w21, [x20]
   35af8:	cmp	x1, #0xff
   35afc:	b.eq	35a9c <__asan_backtrace_create_state@@Base+0x1eb4>  // b.none
   35b00:	mov	x0, x1
   35b04:	b	35ad8 <__asan_backtrace_create_state@@Base+0x1ef0>
   35b08:	ldr	x20, [x2, #8]
   35b0c:	cbz	x20, 38614 <__asan_backtrace_create_state@@Base+0x4a2c>
   35b10:	ldr	w0, [x20, #4]
   35b14:	cmp	w0, #0x1
   35b18:	b.gt	38614 <__asan_backtrace_create_state@@Base+0x4a2c>
   35b1c:	ldr	w1, [x19, #308]
   35b20:	cmp	w1, #0x400
   35b24:	b.gt	38614 <__asan_backtrace_create_state@@Base+0x4a2c>
   35b28:	ldr	x3, [x19, #328]
   35b2c:	add	w0, w0, #0x1
   35b30:	str	w0, [x20, #4]
   35b34:	add	w1, w1, #0x1
   35b38:	add	x0, sp, #0x90
   35b3c:	str	w1, [x19, #308]
   35b40:	str	x0, [x19, #328]
   35b44:	mov	w1, w22
   35b48:	mov	x0, x19
   35b4c:	mov	x2, x20
   35b50:	stp	x20, x3, [sp, #144]
   35b54:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   35b58:	ldr	w1, [x20, #4]
   35b5c:	ldr	x0, [sp, #152]
   35b60:	sub	w1, w1, #0x1
   35b64:	ldp	x21, x22, [sp, #32]
   35b68:	ldp	x23, x24, [sp, #48]
   35b6c:	ldp	x25, x26, [sp, #64]
   35b70:	str	x0, [x19, #328]
   35b74:	ldr	w0, [x19, #308]
   35b78:	str	w1, [x20, #4]
   35b7c:	sub	w0, w0, #0x1
   35b80:	str	w0, [x19, #308]
   35b84:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   35b88:	and	w21, w22, #0xffffff9f
   35b8c:	ldr	x3, [x19, #296]
   35b90:	tbnz	w22, #5, 39778 <__asan_backtrace_create_state@@Base+0x5b90>
   35b94:	ldr	x20, [x2, #8]
   35b98:	cbz	x20, 35ba0 <__asan_backtrace_create_state@@Base+0x1fb8>
   35b9c:	tbz	w22, #6, 39f38 <__asan_backtrace_create_state@@Base+0x6350>
   35ba0:	add	x2, x24, #0x10
   35ba4:	mov	w1, w21
   35ba8:	mov	x0, x19
   35bac:	bl	3caa8 <__asan_backtrace_create_state@@Base+0x8ec0>
   35bb0:	ldp	x21, x22, [sp, #32]
   35bb4:	ldp	x23, x24, [sp, #48]
   35bb8:	ldp	x25, x26, [sp, #64]
   35bbc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   35bc0:	ldr	x0, [x2, #8]
   35bc4:	tbnz	w22, #2, 38c9c <__asan_backtrace_create_state@@Base+0x50b4>
   35bc8:	ldrsw	x22, [x0, #8]
   35bcc:	ldr	x20, [x0]
   35bd0:	cbz	x22, 3a96c <__asan_backtrace_create_state@@Base+0x6d84>
   35bd4:	add	x22, x20, x22
   35bd8:	mov	x23, #0x1                   	// #1
   35bdc:	ldr	x1, [x19, #256]
   35be0:	b	35c3c <__asan_backtrace_create_state@@Base+0x2054>
   35be4:	ldp	x3, x2, [x19, #272]
   35be8:	strb	wzr, [x19, #255]
   35bec:	mov	x0, x19
   35bf0:	add	x20, x20, #0x1
   35bf4:	blr	x3
   35bf8:	strb	w21, [x19]
   35bfc:	ldr	x0, [x19, #320]
   35c00:	str	x23, [x19, #256]
   35c04:	strb	w21, [x19, #264]
   35c08:	cmp	x22, x20
   35c0c:	add	x0, x0, #0x1
   35c10:	str	x0, [x19, #320]
   35c14:	b.eq	3a494 <__asan_backtrace_create_state@@Base+0x68ac>  // b.none
   35c18:	ldrb	w21, [x20]
   35c1c:	mov	x0, #0x1                   	// #1
   35c20:	add	x1, x0, #0x1
   35c24:	str	x1, [x19, #256]
   35c28:	strb	w21, [x19, x0]
   35c2c:	add	x20, x20, #0x1
   35c30:	strb	w21, [x19, #264]
   35c34:	cmp	x22, x20
   35c38:	b.eq	39878 <__asan_backtrace_create_state@@Base+0x5c90>  // b.none
   35c3c:	ldrb	w21, [x20]
   35c40:	cmp	x1, #0xff
   35c44:	b.eq	35be4 <__asan_backtrace_create_state@@Base+0x1ffc>  // b.none
   35c48:	mov	x0, x1
   35c4c:	b	35c20 <__asan_backtrace_create_state@@Base+0x2038>
   35c50:	ldrsw	x21, [x2, #16]
   35c54:	ldr	x20, [x2, #8]
   35c58:	tbnz	w22, #2, 38b10 <__asan_backtrace_create_state@@Base+0x4f28>
   35c5c:	cbz	x21, 3a9cc <__asan_backtrace_create_state@@Base+0x6de4>
   35c60:	add	x22, x20, x21
   35c64:	mov	x23, #0x1                   	// #1
   35c68:	ldr	x1, [x19, #256]
   35c6c:	b	35cc8 <__asan_backtrace_create_state@@Base+0x20e0>
   35c70:	ldp	x3, x2, [x19, #272]
   35c74:	strb	wzr, [x19, #255]
   35c78:	mov	x0, x19
   35c7c:	add	x20, x20, #0x1
   35c80:	blr	x3
   35c84:	strb	w21, [x19]
   35c88:	ldr	x0, [x19, #320]
   35c8c:	str	x23, [x19, #256]
   35c90:	strb	w21, [x19, #264]
   35c94:	cmp	x22, x20
   35c98:	add	x0, x0, #0x1
   35c9c:	str	x0, [x19, #320]
   35ca0:	b.eq	3a3a0 <__asan_backtrace_create_state@@Base+0x67b8>  // b.none
   35ca4:	ldrb	w21, [x20]
   35ca8:	mov	x0, #0x1                   	// #1
   35cac:	add	x1, x0, #0x1
   35cb0:	str	x1, [x19, #256]
   35cb4:	strb	w21, [x19, x0]
   35cb8:	add	x20, x20, #0x1
   35cbc:	strb	w21, [x19, #264]
   35cc0:	cmp	x22, x20
   35cc4:	b.eq	398a8 <__asan_backtrace_create_state@@Base+0x5cc0>  // b.none
   35cc8:	ldrb	w21, [x20]
   35ccc:	cmp	x1, #0xff
   35cd0:	b.eq	35c70 <__asan_backtrace_create_state@@Base+0x2088>  // b.none
   35cd4:	mov	x0, x1
   35cd8:	b	35cac <__asan_backtrace_create_state@@Base+0x20c4>
   35cdc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35ce0:	add	x20, x20, #0xef0
   35ce4:	mov	x0, x20
   35ce8:	bl	67e0 <__asan_internal_strlen@plt>
   35cec:	cbz	x0, 38380 <__asan_backtrace_create_state@@Base+0x4798>
   35cf0:	add	x23, x20, x0
   35cf4:	mov	x25, #0x1                   	// #1
   35cf8:	ldr	x1, [x19, #256]
   35cfc:	b	35d58 <__asan_backtrace_create_state@@Base+0x2170>
   35d00:	ldp	x3, x2, [x19, #272]
   35d04:	strb	wzr, [x19, #255]
   35d08:	mov	x0, x19
   35d0c:	add	x20, x20, #0x1
   35d10:	blr	x3
   35d14:	strb	w21, [x19]
   35d18:	ldr	x0, [x19, #320]
   35d1c:	str	x25, [x19, #256]
   35d20:	strb	w21, [x19, #264]
   35d24:	cmp	x23, x20
   35d28:	add	x0, x0, #0x1
   35d2c:	str	x0, [x19, #320]
   35d30:	b.eq	38380 <__asan_backtrace_create_state@@Base+0x4798>  // b.none
   35d34:	ldrb	w21, [x20]
   35d38:	mov	x0, #0x1                   	// #1
   35d3c:	add	x1, x0, #0x1
   35d40:	str	x1, [x19, #256]
   35d44:	strb	w21, [x19, x0]
   35d48:	add	x20, x20, #0x1
   35d4c:	strb	w21, [x19, #264]
   35d50:	cmp	x23, x20
   35d54:	b.eq	38380 <__asan_backtrace_create_state@@Base+0x4798>  // b.none
   35d58:	ldrb	w21, [x20]
   35d5c:	cmp	x1, #0xff
   35d60:	b.eq	35d00 <__asan_backtrace_create_state@@Base+0x2118>  // b.none
   35d64:	mov	x0, x1
   35d68:	b	35d3c <__asan_backtrace_create_state@@Base+0x2154>
   35d6c:	ldr	x0, [x2, #16]
   35d70:	ldr	w0, [x0]
   35d74:	cmp	w0, #0x39
   35d78:	b.ne	34748 <__asan_backtrace_create_state@@Base+0xb60>  // b.any
   35d7c:	ldr	x2, [x2, #8]
   35d80:	ldr	x0, [x2, #8]
   35d84:	ldr	x0, [x0]
   35d88:	ldrb	w1, [x0, #1]
   35d8c:	cmp	w1, #0x63
   35d90:	b.eq	3a14c <__asan_backtrace_create_state@@Base+0x6564>  // b.none
   35d94:	add	x3, x24, #0x10
   35d98:	mov	w1, w22
   35d9c:	mov	x0, x19
   35da0:	bl	3b188 <__asan_backtrace_create_state@@Base+0x75a0>
   35da4:	cbnz	w0, 3a638 <__asan_backtrace_create_state@@Base+0x6a50>
   35da8:	ldr	x0, [x24, #8]
   35dac:	ldr	w1, [x0]
   35db0:	cmp	w1, #0x32
   35db4:	b.eq	3a80c <__asan_backtrace_create_state@@Base+0x6c24>  // b.none
   35db8:	ldr	x0, [x0, #8]
   35dbc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35dc0:	add	x1, x20, #0xf20
   35dc4:	ldr	x0, [x0]
   35dc8:	bl	6b30 <__asan_internal_strcmp@plt>
   35dcc:	cbnz	w0, 3a8e0 <__asan_backtrace_create_state@@Base+0x6cf8>
   35dd0:	ldr	x0, [x24, #16]
   35dd4:	ldr	x1, [x0, #8]
   35dd8:	ldr	w2, [x1]
   35ddc:	cmp	w2, #0x3
   35de0:	b.eq	3a9dc <__asan_backtrace_create_state@@Base+0x6df4>  // b.none
   35de4:	ldr	x2, [x0, #8]
   35de8:	mov	w1, w22
   35dec:	mov	x0, x19
   35df0:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   35df4:	ldr	x0, [x24, #8]
   35df8:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35dfc:	add	x1, x1, #0xf28
   35e00:	ldr	x0, [x0, #8]
   35e04:	ldr	x0, [x0]
   35e08:	bl	6b30 <__asan_internal_strcmp@plt>
   35e0c:	cbnz	w0, 3a8b0 <__asan_backtrace_create_state@@Base+0x6cc8>
   35e10:	ldr	x1, [x19, #256]
   35e14:	cmp	x1, #0xff
   35e18:	b.ne	35e40 <__asan_backtrace_create_state@@Base+0x2258>  // b.any
   35e1c:	ldp	x3, x2, [x19, #272]
   35e20:	strb	wzr, [x19, #255]
   35e24:	mov	x0, x19
   35e28:	blr	x3
   35e2c:	str	xzr, [x19, #256]
   35e30:	ldr	x0, [x19, #320]
   35e34:	mov	x1, #0x0                   	// #0
   35e38:	add	x0, x0, #0x1
   35e3c:	str	x0, [x19, #320]
   35e40:	add	x0, x1, #0x1
   35e44:	str	x0, [x19, #256]
   35e48:	mov	w2, #0x5b                  	// #91
   35e4c:	strb	w2, [x19, x1]
   35e50:	strb	w2, [x19, #264]
   35e54:	ldr	x1, [x24, #16]
   35e58:	ldr	x20, [x1, #16]
   35e5c:	cbz	x20, 3a610 <__asan_backtrace_create_state@@Base+0x6a28>
   35e60:	ldr	w2, [x20, #4]
   35e64:	cmp	w2, #0x1
   35e68:	b.gt	3a610 <__asan_backtrace_create_state@@Base+0x6a28>
   35e6c:	ldr	w1, [x19, #308]
   35e70:	cmp	w1, #0x400
   35e74:	b.gt	3a610 <__asan_backtrace_create_state@@Base+0x6a28>
   35e78:	ldr	x3, [x19, #328]
   35e7c:	add	w2, w2, #0x1
   35e80:	str	w2, [x20, #4]
   35e84:	add	w1, w1, #0x1
   35e88:	add	x0, sp, #0x90
   35e8c:	str	w1, [x19, #308]
   35e90:	str	x0, [x19, #328]
   35e94:	mov	x2, x20
   35e98:	mov	w1, w22
   35e9c:	mov	x0, x19
   35ea0:	stp	x20, x3, [sp, #144]
   35ea4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   35ea8:	ldr	w2, [x20, #4]
   35eac:	ldr	x0, [sp, #152]
   35eb0:	str	x0, [x19, #328]
   35eb4:	ldr	w1, [x19, #308]
   35eb8:	sub	w2, w2, #0x1
   35ebc:	ldr	x0, [x19, #256]
   35ec0:	str	w2, [x20, #4]
   35ec4:	sub	w1, w1, #0x1
   35ec8:	str	w1, [x19, #308]
   35ecc:	cmp	x0, #0xff
   35ed0:	b.ne	35ef8 <__asan_backtrace_create_state@@Base+0x2310>  // b.any
   35ed4:	ldp	x3, x2, [x19, #272]
   35ed8:	strb	wzr, [x19, #255]
   35edc:	mov	x1, x0
   35ee0:	mov	x0, x19
   35ee4:	blr	x3
   35ee8:	str	xzr, [x19, #256]
   35eec:	ldr	x0, [x19, #320]
   35ef0:	add	x0, x0, #0x1
   35ef4:	str	x0, [x19, #320]
   35ef8:	ldr	x1, [x19, #256]
   35efc:	mov	w0, #0x5d                  	// #93
   35f00:	add	x2, x1, #0x1
   35f04:	str	x2, [x19, #256]
   35f08:	strb	w0, [x19, x1]
   35f0c:	strb	w0, [x19, #264]
   35f10:	ldr	x0, [x24, #8]
   35f14:	ldr	w1, [x0]
   35f18:	cmp	w1, #0x32
   35f1c:	b.eq	3a878 <__asan_backtrace_create_state@@Base+0x6c90>  // b.none
   35f20:	ldp	x21, x22, [sp, #32]
   35f24:	ldp	x23, x24, [sp, #48]
   35f28:	ldp	x25, x26, [sp, #64]
   35f2c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   35f30:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   35f34:	add	x20, x20, #0xf60
   35f38:	mov	x0, x20
   35f3c:	bl	67e0 <__asan_internal_strlen@plt>
   35f40:	cbz	x0, 37e04 <__asan_backtrace_create_state@@Base+0x421c>
   35f44:	add	x23, x20, x0
   35f48:	mov	x25, #0x1                   	// #1
   35f4c:	ldr	x1, [x19, #256]
   35f50:	b	35fac <__asan_backtrace_create_state@@Base+0x23c4>
   35f54:	ldp	x3, x2, [x19, #272]
   35f58:	strb	wzr, [x19, #255]
   35f5c:	mov	x0, x19
   35f60:	add	x20, x20, #0x1
   35f64:	blr	x3
   35f68:	strb	w21, [x19]
   35f6c:	ldr	x0, [x19, #320]
   35f70:	str	x25, [x19, #256]
   35f74:	strb	w21, [x19, #264]
   35f78:	cmp	x20, x23
   35f7c:	add	x0, x0, #0x1
   35f80:	str	x0, [x19, #320]
   35f84:	b.eq	37e04 <__asan_backtrace_create_state@@Base+0x421c>  // b.none
   35f88:	ldrb	w21, [x20]
   35f8c:	mov	x0, #0x1                   	// #1
   35f90:	add	x1, x0, #0x1
   35f94:	str	x1, [x19, #256]
   35f98:	strb	w21, [x19, x0]
   35f9c:	add	x20, x20, #0x1
   35fa0:	strb	w21, [x19, #264]
   35fa4:	cmp	x23, x20
   35fa8:	b.eq	37e04 <__asan_backtrace_create_state@@Base+0x421c>  // b.none
   35fac:	ldrb	w21, [x20]
   35fb0:	cmp	x1, #0xff
   35fb4:	b.eq	35f54 <__asan_backtrace_create_state@@Base+0x236c>  // b.none
   35fb8:	mov	x0, x1
   35fbc:	b	35f90 <__asan_backtrace_create_state@@Base+0x23a8>
   35fc0:	ldr	x2, [x2, #8]
   35fc4:	mov	w1, w22
   35fc8:	mov	x0, x19
   35fcc:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   35fd0:	ldp	x21, x22, [sp, #32]
   35fd4:	ldp	x23, x24, [sp, #48]
   35fd8:	ldp	x25, x26, [sp, #64]
   35fdc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   35fe0:	ldp	x23, x20, [x2, #8]
   35fe4:	mov	x21, #0x0                   	// #0
   35fe8:	ldr	w0, [x23]
   35fec:	cmp	w0, #0x32
   35ff0:	b.eq	39ac4 <__asan_backtrace_create_state@@Base+0x5edc>  // b.none
   35ff4:	cmp	w0, #0x34
   35ff8:	b.eq	39038 <__asan_backtrace_create_state@@Base+0x5450>  // b.none
   35ffc:	mov	x2, x23
   36000:	mov	w1, w22
   36004:	mov	x0, x19
   36008:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3600c:	cbz	x21, 38a60 <__asan_backtrace_create_state@@Base+0x4e78>
   36010:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36014:	mov	x0, x21
   36018:	add	x1, x1, #0xf10
   3601c:	bl	6b30 <__asan_internal_strcmp@plt>
   36020:	cbz	w0, 3a404 <__asan_backtrace_create_state@@Base+0x681c>
   36024:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   36028:	mov	x0, x21
   3602c:	add	x1, x1, #0x4c0
   36030:	bl	6b30 <__asan_internal_strcmp@plt>
   36034:	cbnz	w0, 38a60 <__asan_backtrace_create_state@@Base+0x4e78>
   36038:	ldr	x1, [x19, #256]
   3603c:	cmp	x1, #0xff
   36040:	b.ne	36064 <__asan_backtrace_create_state@@Base+0x247c>  // b.any
   36044:	ldp	x3, x2, [x19, #272]
   36048:	strb	wzr, [x19, #255]
   3604c:	mov	x0, x19
   36050:	blr	x3
   36054:	ldr	x0, [x19, #320]
   36058:	mov	x1, #0x0                   	// #0
   3605c:	add	x0, x0, #0x1
   36060:	str	x0, [x19, #320]
   36064:	add	x0, x1, #0x1
   36068:	str	x0, [x19, #256]
   3606c:	mov	w2, #0x28                  	// #40
   36070:	strb	w2, [x19, x1]
   36074:	strb	w2, [x19, #264]
   36078:	cbz	x20, 39f2c <__asan_backtrace_create_state@@Base+0x6344>
   3607c:	ldr	w2, [x20, #4]
   36080:	cmp	w2, #0x1
   36084:	b.gt	39f2c <__asan_backtrace_create_state@@Base+0x6344>
   36088:	ldr	w1, [x19, #308]
   3608c:	cmp	w1, #0x400
   36090:	b.gt	39f2c <__asan_backtrace_create_state@@Base+0x6344>
   36094:	ldr	x3, [x19, #328]
   36098:	add	w2, w2, #0x1
   3609c:	str	w2, [x20, #4]
   360a0:	add	w1, w1, #0x1
   360a4:	add	x0, sp, #0x90
   360a8:	str	w1, [x19, #308]
   360ac:	str	x0, [x19, #328]
   360b0:	mov	x2, x20
   360b4:	mov	w1, w22
   360b8:	mov	x0, x19
   360bc:	stp	x20, x3, [sp, #144]
   360c0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   360c4:	ldr	w2, [x20, #4]
   360c8:	ldr	x0, [sp, #152]
   360cc:	str	x0, [x19, #328]
   360d0:	ldr	w1, [x19, #308]
   360d4:	sub	w2, w2, #0x1
   360d8:	ldr	x0, [x19, #256]
   360dc:	str	w2, [x20, #4]
   360e0:	sub	w1, w1, #0x1
   360e4:	str	w1, [x19, #308]
   360e8:	cmp	x0, #0xff
   360ec:	b.ne	36114 <__asan_backtrace_create_state@@Base+0x252c>  // b.any
   360f0:	ldp	x3, x2, [x19, #272]
   360f4:	strb	wzr, [x19, #255]
   360f8:	mov	x1, x0
   360fc:	mov	x0, x19
   36100:	blr	x3
   36104:	ldr	x1, [x19, #320]
   36108:	mov	x0, #0x0                   	// #0
   3610c:	add	x1, x1, #0x1
   36110:	str	x1, [x19, #320]
   36114:	add	x1, x0, #0x1
   36118:	str	x1, [x19, #256]
   3611c:	mov	w1, #0x29                  	// #41
   36120:	strb	w1, [x19, x0]
   36124:	strb	w1, [x19, #264]
   36128:	ldp	x21, x22, [sp, #32]
   3612c:	ldp	x23, x24, [sp, #48]
   36130:	ldp	x25, x26, [sp, #64]
   36134:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   36138:	ldr	x1, [x19, #256]
   3613c:	ldrb	w20, [x2, #8]
   36140:	add	x0, x1, #0x1
   36144:	cmp	x1, #0xff
   36148:	b.ne	36170 <__asan_backtrace_create_state@@Base+0x2588>  // b.any
   3614c:	ldp	x3, x2, [x19, #272]
   36150:	strb	wzr, [x19, #255]
   36154:	mov	x0, x19
   36158:	blr	x3
   3615c:	ldr	x2, [x19, #320]
   36160:	mov	x0, #0x1                   	// #1
   36164:	mov	x1, #0x0                   	// #0
   36168:	add	x2, x2, x0
   3616c:	str	x2, [x19, #320]
   36170:	str	x0, [x19, #256]
   36174:	strb	w20, [x19, x1]
   36178:	strb	w20, [x19, #264]
   3617c:	ldp	x21, x22, [sp, #32]
   36180:	ldp	x23, x24, [sp, #48]
   36184:	ldp	x25, x26, [sp, #64]
   36188:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3618c:	ldr	w2, [x2, #8]
   36190:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   36194:	add	x1, x1, #0x160
   36198:	add	x20, sp, #0x90
   3619c:	mov	x0, x20
   361a0:	bl	6900 <sprintf@plt>
   361a4:	mov	x0, x20
   361a8:	bl	67e0 <__asan_internal_strlen@plt>
   361ac:	cbz	x0, 3a71c <__asan_backtrace_create_state@@Base+0x6b34>
   361b0:	add	x22, x20, x0
   361b4:	mov	x23, #0x1                   	// #1
   361b8:	ldr	x1, [x19, #256]
   361bc:	b	36218 <__asan_backtrace_create_state@@Base+0x2630>
   361c0:	ldp	x3, x2, [x19, #272]
   361c4:	strb	wzr, [x19, #255]
   361c8:	mov	x0, x19
   361cc:	add	x20, x20, #0x1
   361d0:	blr	x3
   361d4:	strb	w21, [x19]
   361d8:	ldr	x0, [x19, #320]
   361dc:	str	x23, [x19, #256]
   361e0:	strb	w21, [x19, #264]
   361e4:	cmp	x20, x22
   361e8:	add	x0, x0, #0x1
   361ec:	str	x0, [x19, #320]
   361f0:	b.eq	39818 <__asan_backtrace_create_state@@Base+0x5c30>  // b.none
   361f4:	ldrb	w21, [x20]
   361f8:	mov	x0, #0x1                   	// #1
   361fc:	add	x1, x0, #0x1
   36200:	str	x1, [x19, #256]
   36204:	strb	w21, [x19, x0]
   36208:	add	x20, x20, #0x1
   3620c:	strb	w21, [x19, #264]
   36210:	cmp	x22, x20
   36214:	b.eq	38a9c <__asan_backtrace_create_state@@Base+0x4eb4>  // b.none
   36218:	ldrb	w21, [x20]
   3621c:	cmp	x1, #0xff
   36220:	b.eq	361c0 <__asan_backtrace_create_state@@Base+0x25d8>  // b.none
   36224:	mov	x0, x1
   36228:	b	361fc <__asan_backtrace_create_state@@Base+0x2614>
   3622c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36230:	add	x20, x20, #0xf70
   36234:	mov	x0, x20
   36238:	bl	67e0 <__asan_internal_strlen@plt>
   3623c:	cbz	x0, 38004 <__asan_backtrace_create_state@@Base+0x441c>
   36240:	add	x23, x20, x0
   36244:	mov	x25, #0x1                   	// #1
   36248:	ldr	x1, [x19, #256]
   3624c:	b	362a8 <__asan_backtrace_create_state@@Base+0x26c0>
   36250:	ldp	x3, x2, [x19, #272]
   36254:	strb	wzr, [x19, #255]
   36258:	mov	x0, x19
   3625c:	add	x20, x20, #0x1
   36260:	blr	x3
   36264:	strb	w21, [x19]
   36268:	ldr	x0, [x19, #320]
   3626c:	str	x25, [x19, #256]
   36270:	strb	w21, [x19, #264]
   36274:	cmp	x20, x23
   36278:	add	x0, x0, #0x1
   3627c:	str	x0, [x19, #320]
   36280:	b.eq	38004 <__asan_backtrace_create_state@@Base+0x441c>  // b.none
   36284:	ldrb	w21, [x20]
   36288:	mov	x0, #0x1                   	// #1
   3628c:	add	x1, x0, #0x1
   36290:	str	x1, [x19, #256]
   36294:	strb	w21, [x19, x0]
   36298:	add	x20, x20, #0x1
   3629c:	strb	w21, [x19, #264]
   362a0:	cmp	x23, x20
   362a4:	b.eq	38004 <__asan_backtrace_create_state@@Base+0x441c>  // b.none
   362a8:	ldrb	w21, [x20]
   362ac:	cmp	x1, #0xff
   362b0:	b.eq	36250 <__asan_backtrace_create_state@@Base+0x2668>  // b.none
   362b4:	mov	x0, x1
   362b8:	b	3628c <__asan_backtrace_create_state@@Base+0x26a4>
   362bc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   362c0:	add	x20, x20, #0xf90
   362c4:	mov	x0, x20
   362c8:	bl	67e0 <__asan_internal_strlen@plt>
   362cc:	cbz	x0, 375d8 <__asan_backtrace_create_state@@Base+0x39f0>
   362d0:	add	x23, x20, x0
   362d4:	mov	x25, #0x1                   	// #1
   362d8:	ldr	x1, [x19, #256]
   362dc:	b	36338 <__asan_backtrace_create_state@@Base+0x2750>
   362e0:	ldp	x3, x2, [x19, #272]
   362e4:	strb	wzr, [x19, #255]
   362e8:	mov	x0, x19
   362ec:	add	x20, x20, #0x1
   362f0:	blr	x3
   362f4:	strb	w21, [x19]
   362f8:	ldr	x0, [x19, #320]
   362fc:	str	x25, [x19, #256]
   36300:	strb	w21, [x19, #264]
   36304:	cmp	x20, x23
   36308:	add	x0, x0, #0x1
   3630c:	str	x0, [x19, #320]
   36310:	b.eq	375d8 <__asan_backtrace_create_state@@Base+0x39f0>  // b.none
   36314:	ldrb	w21, [x20]
   36318:	mov	x0, #0x1                   	// #1
   3631c:	add	x1, x0, #0x1
   36320:	str	x1, [x19, #256]
   36324:	strb	w21, [x19, x0]
   36328:	add	x20, x20, #0x1
   3632c:	strb	w21, [x19, #264]
   36330:	cmp	x23, x20
   36334:	b.eq	375d8 <__asan_backtrace_create_state@@Base+0x39f0>  // b.none
   36338:	ldrb	w21, [x20]
   3633c:	cmp	x1, #0xff
   36340:	b.eq	362e0 <__asan_backtrace_create_state@@Base+0x26f8>  // b.none
   36344:	mov	x0, x1
   36348:	b	3631c <__asan_backtrace_create_state@@Base+0x2734>
   3634c:	ldr	x20, [x2, #8]
   36350:	cbz	x20, 3871c <__asan_backtrace_create_state@@Base+0x4b34>
   36354:	ldr	w0, [x20, #4]
   36358:	cmp	w0, #0x1
   3635c:	b.gt	3871c <__asan_backtrace_create_state@@Base+0x4b34>
   36360:	ldr	w1, [x19, #308]
   36364:	cmp	w1, #0x400
   36368:	b.gt	3871c <__asan_backtrace_create_state@@Base+0x4b34>
   3636c:	ldr	x3, [x19, #328]
   36370:	add	w0, w0, #0x1
   36374:	str	w0, [x20, #4]
   36378:	add	w1, w1, #0x1
   3637c:	add	x0, sp, #0x90
   36380:	str	w1, [x19, #308]
   36384:	str	x0, [x19, #328]
   36388:	mov	w1, w22
   3638c:	mov	x0, x19
   36390:	mov	x2, x20
   36394:	stp	x20, x3, [sp, #144]
   36398:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3639c:	ldr	w1, [x20, #4]
   363a0:	ldr	x0, [sp, #152]
   363a4:	str	x0, [x19, #328]
   363a8:	ldr	w0, [x19, #308]
   363ac:	sub	w1, w1, #0x1
   363b0:	str	w1, [x20, #4]
   363b4:	sub	w0, w0, #0x1
   363b8:	str	w0, [x19, #308]
   363bc:	ldr	x20, [x24, #16]
   363c0:	cbz	x20, 38704 <__asan_backtrace_create_state@@Base+0x4b1c>
   363c4:	ldr	w0, [x20, #4]
   363c8:	cmp	w0, #0x1
   363cc:	b.gt	38704 <__asan_backtrace_create_state@@Base+0x4b1c>
   363d0:	ldr	w1, [x19, #308]
   363d4:	cmp	w1, #0x400
   363d8:	b.gt	38704 <__asan_backtrace_create_state@@Base+0x4b1c>
   363dc:	ldr	x3, [x19, #328]
   363e0:	add	w0, w0, #0x1
   363e4:	str	w0, [x20, #4]
   363e8:	add	w1, w1, #0x1
   363ec:	add	x0, sp, #0x90
   363f0:	str	w1, [x19, #308]
   363f4:	str	x0, [x19, #328]
   363f8:	mov	w1, w22
   363fc:	mov	x0, x19
   36400:	mov	x2, x20
   36404:	stp	x20, x3, [sp, #144]
   36408:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3640c:	ldr	w1, [x20, #4]
   36410:	ldr	x0, [sp, #152]
   36414:	sub	w1, w1, #0x1
   36418:	ldp	x21, x22, [sp, #32]
   3641c:	ldp	x23, x24, [sp, #48]
   36420:	ldp	x25, x26, [sp, #64]
   36424:	str	x0, [x19, #328]
   36428:	ldr	w0, [x19, #308]
   3642c:	str	w1, [x20, #4]
   36430:	sub	w0, w0, #0x1
   36434:	str	w0, [x19, #308]
   36438:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3643c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36440:	add	x20, x20, #0xd30
   36444:	mov	x0, x20
   36448:	bl	67e0 <__asan_internal_strlen@plt>
   3644c:	cbz	x0, 373d8 <__asan_backtrace_create_state@@Base+0x37f0>
   36450:	add	x23, x20, x0
   36454:	mov	x25, #0x1                   	// #1
   36458:	ldr	x1, [x19, #256]
   3645c:	b	364b8 <__asan_backtrace_create_state@@Base+0x28d0>
   36460:	ldp	x3, x2, [x19, #272]
   36464:	strb	wzr, [x19, #255]
   36468:	mov	x0, x19
   3646c:	add	x20, x20, #0x1
   36470:	blr	x3
   36474:	strb	w21, [x19]
   36478:	ldr	x0, [x19, #320]
   3647c:	str	x25, [x19, #256]
   36480:	strb	w21, [x19, #264]
   36484:	cmp	x20, x23
   36488:	add	x0, x0, #0x1
   3648c:	str	x0, [x19, #320]
   36490:	b.eq	373d8 <__asan_backtrace_create_state@@Base+0x37f0>  // b.none
   36494:	ldrb	w21, [x20]
   36498:	mov	x0, #0x1                   	// #1
   3649c:	add	x1, x0, #0x1
   364a0:	str	x1, [x19, #256]
   364a4:	strb	w21, [x19, x0]
   364a8:	add	x20, x20, #0x1
   364ac:	strb	w21, [x19, #264]
   364b0:	cmp	x23, x20
   364b4:	b.eq	373d8 <__asan_backtrace_create_state@@Base+0x37f0>  // b.none
   364b8:	ldrb	w21, [x20]
   364bc:	cmp	x1, #0xff
   364c0:	b.eq	36460 <__asan_backtrace_create_state@@Base+0x2878>  // b.none
   364c4:	mov	x0, x1
   364c8:	b	3649c <__asan_backtrace_create_state@@Base+0x28b4>
   364cc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   364d0:	add	x20, x20, #0xd40
   364d4:	mov	x0, x20
   364d8:	bl	67e0 <__asan_internal_strlen@plt>
   364dc:	cbz	x0, 37458 <__asan_backtrace_create_state@@Base+0x3870>
   364e0:	add	x23, x20, x0
   364e4:	mov	x25, #0x1                   	// #1
   364e8:	ldr	x1, [x19, #256]
   364ec:	b	36548 <__asan_backtrace_create_state@@Base+0x2960>
   364f0:	ldp	x3, x2, [x19, #272]
   364f4:	strb	wzr, [x19, #255]
   364f8:	mov	x0, x19
   364fc:	add	x20, x20, #0x1
   36500:	blr	x3
   36504:	strb	w21, [x19]
   36508:	ldr	x0, [x19, #320]
   3650c:	str	x25, [x19, #256]
   36510:	strb	w21, [x19, #264]
   36514:	cmp	x20, x23
   36518:	add	x0, x0, #0x1
   3651c:	str	x0, [x19, #320]
   36520:	b.eq	37458 <__asan_backtrace_create_state@@Base+0x3870>  // b.none
   36524:	ldrb	w21, [x20]
   36528:	mov	x0, #0x1                   	// #1
   3652c:	add	x1, x0, #0x1
   36530:	str	x1, [x19, #256]
   36534:	strb	w21, [x19, x0]
   36538:	add	x20, x20, #0x1
   3653c:	strb	w21, [x19, #264]
   36540:	cmp	x23, x20
   36544:	b.eq	37458 <__asan_backtrace_create_state@@Base+0x3870>  // b.none
   36548:	ldrb	w21, [x20]
   3654c:	cmp	x1, #0xff
   36550:	b.eq	364f0 <__asan_backtrace_create_state@@Base+0x2908>  // b.none
   36554:	mov	x0, x1
   36558:	b	3652c <__asan_backtrace_create_state@@Base+0x2944>
   3655c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36560:	add	x20, x20, #0xd68
   36564:	mov	x0, x20
   36568:	bl	67e0 <__asan_internal_strlen@plt>
   3656c:	cbz	x0, 37358 <__asan_backtrace_create_state@@Base+0x3770>
   36570:	add	x23, x20, x0
   36574:	mov	x25, #0x1                   	// #1
   36578:	ldr	x1, [x19, #256]
   3657c:	b	365d8 <__asan_backtrace_create_state@@Base+0x29f0>
   36580:	ldp	x3, x2, [x19, #272]
   36584:	strb	wzr, [x19, #255]
   36588:	mov	x0, x19
   3658c:	add	x20, x20, #0x1
   36590:	blr	x3
   36594:	strb	w21, [x19]
   36598:	ldr	x0, [x19, #320]
   3659c:	str	x25, [x19, #256]
   365a0:	strb	w21, [x19, #264]
   365a4:	cmp	x23, x20
   365a8:	add	x0, x0, #0x1
   365ac:	str	x0, [x19, #320]
   365b0:	b.eq	37358 <__asan_backtrace_create_state@@Base+0x3770>  // b.none
   365b4:	ldrb	w21, [x20]
   365b8:	mov	x0, #0x1                   	// #1
   365bc:	add	x1, x0, #0x1
   365c0:	str	x1, [x19, #256]
   365c4:	strb	w21, [x19, x0]
   365c8:	add	x20, x20, #0x1
   365cc:	strb	w21, [x19, #264]
   365d0:	cmp	x23, x20
   365d4:	b.eq	37358 <__asan_backtrace_create_state@@Base+0x3770>  // b.none
   365d8:	ldrb	w21, [x20]
   365dc:	cmp	x1, #0xff
   365e0:	b.eq	36580 <__asan_backtrace_create_state@@Base+0x2998>  // b.none
   365e4:	mov	x0, x1
   365e8:	b	365bc <__asan_backtrace_create_state@@Base+0x29d4>
   365ec:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   365f0:	add	x20, x20, #0xd78
   365f4:	mov	x0, x20
   365f8:	bl	67e0 <__asan_internal_strlen@plt>
   365fc:	cbz	x0, 372d8 <__asan_backtrace_create_state@@Base+0x36f0>
   36600:	add	x23, x20, x0
   36604:	mov	x25, #0x1                   	// #1
   36608:	ldr	x1, [x19, #256]
   3660c:	b	36668 <__asan_backtrace_create_state@@Base+0x2a80>
   36610:	ldp	x3, x2, [x19, #272]
   36614:	strb	wzr, [x19, #255]
   36618:	mov	x0, x19
   3661c:	add	x20, x20, #0x1
   36620:	blr	x3
   36624:	strb	w21, [x19]
   36628:	ldr	x0, [x19, #320]
   3662c:	str	x25, [x19, #256]
   36630:	strb	w21, [x19, #264]
   36634:	cmp	x23, x20
   36638:	add	x0, x0, #0x1
   3663c:	str	x0, [x19, #320]
   36640:	b.eq	372d8 <__asan_backtrace_create_state@@Base+0x36f0>  // b.none
   36644:	ldrb	w21, [x20]
   36648:	mov	x0, #0x1                   	// #1
   3664c:	add	x1, x0, #0x1
   36650:	str	x1, [x19, #256]
   36654:	strb	w21, [x19, x0]
   36658:	add	x20, x20, #0x1
   3665c:	strb	w21, [x19, #264]
   36660:	cmp	x23, x20
   36664:	b.eq	372d8 <__asan_backtrace_create_state@@Base+0x36f0>  // b.none
   36668:	ldrb	w21, [x20]
   3666c:	cmp	x1, #0xff
   36670:	b.eq	36610 <__asan_backtrace_create_state@@Base+0x2a28>  // b.none
   36674:	mov	x0, x1
   36678:	b	3664c <__asan_backtrace_create_state@@Base+0x2a64>
   3667c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36680:	add	x20, x20, #0xd90
   36684:	mov	x0, x20
   36688:	bl	67e0 <__asan_internal_strlen@plt>
   3668c:	cbz	x0, 37258 <__asan_backtrace_create_state@@Base+0x3670>
   36690:	add	x23, x20, x0
   36694:	mov	x25, #0x1                   	// #1
   36698:	ldr	x1, [x19, #256]
   3669c:	b	366f8 <__asan_backtrace_create_state@@Base+0x2b10>
   366a0:	ldp	x3, x2, [x19, #272]
   366a4:	strb	wzr, [x19, #255]
   366a8:	mov	x0, x19
   366ac:	add	x20, x20, #0x1
   366b0:	blr	x3
   366b4:	strb	w21, [x19]
   366b8:	ldr	x0, [x19, #320]
   366bc:	str	x25, [x19, #256]
   366c0:	strb	w21, [x19, #264]
   366c4:	cmp	x23, x20
   366c8:	add	x0, x0, #0x1
   366cc:	str	x0, [x19, #320]
   366d0:	b.eq	37258 <__asan_backtrace_create_state@@Base+0x3670>  // b.none
   366d4:	ldrb	w21, [x20]
   366d8:	mov	x0, #0x1                   	// #1
   366dc:	add	x1, x0, #0x1
   366e0:	str	x1, [x19, #256]
   366e4:	strb	w21, [x19, x0]
   366e8:	add	x20, x20, #0x1
   366ec:	strb	w21, [x19, #264]
   366f0:	cmp	x23, x20
   366f4:	b.eq	37258 <__asan_backtrace_create_state@@Base+0x3670>  // b.none
   366f8:	ldrb	w21, [x20]
   366fc:	cmp	x1, #0xff
   36700:	b.eq	366a0 <__asan_backtrace_create_state@@Base+0x2ab8>  // b.none
   36704:	mov	x0, x1
   36708:	b	366dc <__asan_backtrace_create_state@@Base+0x2af4>
   3670c:	ldr	x25, [x2, #8]
   36710:	ldr	x23, [x19, #296]
   36714:	str	xzr, [x19, #296]
   36718:	cbz	x25, 39efc <__asan_backtrace_create_state@@Base+0x6314>
   3671c:	ldr	w4, [x25]
   36720:	ldr	x3, [x19, #288]
   36724:	stp	xzr, x25, [sp, #144]
   36728:	sub	w1, w4, #0x1c
   3672c:	str	wzr, [sp, #160]
   36730:	cmp	w1, #0x34
   36734:	str	x3, [sp, #168]
   36738:	b.hi	36754 <__asan_backtrace_create_state@@Base+0x2b6c>  // b.pmore
   3673c:	mov	x0, #0x1                   	// #1
   36740:	mov	x2, #0x1f                  	// #31
   36744:	movk	x2, #0x1a, lsl #48
   36748:	lsl	x1, x0, x1
   3674c:	tst	x1, x2
   36750:	b.ne	38f38 <__asan_backtrace_create_state@@Base+0x5350>  // b.any
   36754:	add	x21, sp, #0x90
   36758:	mov	w20, #0x1                   	// #1
   3675c:	mov	x1, x21
   36760:	str	x1, [x19, #296]
   36764:	cmp	w4, #0x2
   36768:	b.eq	39d8c <__asan_backtrace_create_state@@Base+0x61a4>  // b.none
   3676c:	cmp	w4, #0x4
   36770:	b.ne	36780 <__asan_backtrace_create_state@@Base+0x2b98>  // b.any
   36774:	add	x0, sp, #0x70
   36778:	stp	x3, x25, [sp, #112]
   3677c:	str	x0, [x19, #288]
   36780:	ldr	x24, [x24, #16]
   36784:	cbz	x24, 391c8 <__asan_backtrace_create_state@@Base+0x55e0>
   36788:	ldr	w0, [x24, #4]
   3678c:	cmp	w0, #0x1
   36790:	b.gt	391c8 <__asan_backtrace_create_state@@Base+0x55e0>
   36794:	ldr	w1, [x19, #308]
   36798:	cmp	w1, #0x400
   3679c:	b.gt	391c8 <__asan_backtrace_create_state@@Base+0x55e0>
   367a0:	ldr	x3, [x19, #328]
   367a4:	add	w0, w0, #0x1
   367a8:	str	w0, [x24, #4]
   367ac:	add	w1, w1, #0x1
   367b0:	add	x0, sp, #0x80
   367b4:	str	w1, [x19, #308]
   367b8:	str	x0, [x19, #328]
   367bc:	mov	w1, w22
   367c0:	mov	x0, x19
   367c4:	mov	x2, x24
   367c8:	stp	x24, x3, [sp, #128]
   367cc:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   367d0:	ldr	w1, [x24, #4]
   367d4:	ldr	x0, [sp, #136]
   367d8:	str	x0, [x19, #328]
   367dc:	ldr	w0, [x19, #308]
   367e0:	sub	w1, w1, #0x1
   367e4:	str	w1, [x24, #4]
   367e8:	sub	w0, w0, #0x1
   367ec:	str	w0, [x19, #308]
   367f0:	ldr	w0, [x25]
   367f4:	cmp	w0, #0x4
   367f8:	b.ne	36804 <__asan_backtrace_create_state@@Base+0x2c1c>  // b.any
   367fc:	ldr	x0, [sp, #112]
   36800:	str	x0, [x19, #288]
   36804:	sub	w20, w20, #0x1
   36808:	mov	w24, #0x20                  	// #32
   3680c:	ubfiz	x0, x20, #5, #32
   36810:	add	x21, x21, x0
   36814:	b	3681c <__asan_backtrace_create_state@@Base+0x2c34>
   36818:	sub	w20, w20, #0x1
   3681c:	ldr	w0, [x21, #16]
   36820:	cbnz	w0, 36878 <__asan_backtrace_create_state@@Base+0x2c90>
   36824:	ldr	x0, [x19, #256]
   36828:	add	x1, x0, #0x1
   3682c:	cmp	x0, #0xff
   36830:	b.ne	3685c <__asan_backtrace_create_state@@Base+0x2c74>  // b.any
   36834:	ldp	x3, x2, [x19, #272]
   36838:	strb	wzr, [x19, #255]
   3683c:	mov	x1, x0
   36840:	mov	x0, x19
   36844:	blr	x3
   36848:	ldr	x2, [x19, #320]
   3684c:	mov	x1, #0x1                   	// #1
   36850:	mov	x0, #0x0                   	// #0
   36854:	add	x2, x2, x1
   36858:	str	x2, [x19, #320]
   3685c:	str	x1, [x19, #256]
   36860:	mov	w1, w22
   36864:	ldr	x2, [x21, #8]
   36868:	strb	w24, [x19, x0]
   3686c:	strb	w24, [x19, #264]
   36870:	mov	x0, x19
   36874:	bl	3b568 <__asan_backtrace_create_state@@Base+0x7980>
   36878:	sub	x21, x21, #0x20
   3687c:	cbnz	w20, 36818 <__asan_backtrace_create_state@@Base+0x2c30>
   36880:	ldp	x21, x22, [sp, #32]
   36884:	ldp	x25, x26, [sp, #64]
   36888:	str	x23, [x19, #296]
   3688c:	ldp	x23, x24, [sp, #48]
   36890:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   36894:	ldr	x20, [x2, #8]
   36898:	ldr	x23, [x19, #296]
   3689c:	str	xzr, [x19, #296]
   368a0:	ldr	x21, [x19, #368]
   368a4:	str	x2, [x19, #368]
   368a8:	tbz	w22, #2, 387f8 <__asan_backtrace_create_state@@Base+0x4c10>
   368ac:	ldr	w0, [x20]
   368b0:	cbnz	w0, 368c0 <__asan_backtrace_create_state@@Base+0x2cd8>
   368b4:	ldr	w0, [x20, #16]
   368b8:	cmp	w0, #0x6
   368bc:	b.eq	3a8e8 <__asan_backtrace_create_state@@Base+0x6d00>  // b.none
   368c0:	ldr	w0, [x20, #4]
   368c4:	cmp	w0, #0x1
   368c8:	b.gt	387fc <__asan_backtrace_create_state@@Base+0x4c14>
   368cc:	ldr	w1, [x19, #308]
   368d0:	cmp	w1, #0x400
   368d4:	b.gt	387fc <__asan_backtrace_create_state@@Base+0x4c14>
   368d8:	ldr	x3, [x19, #328]
   368dc:	add	w0, w0, #0x1
   368e0:	str	w0, [x20, #4]
   368e4:	add	w1, w1, #0x1
   368e8:	add	x0, sp, #0x90
   368ec:	str	w1, [x19, #308]
   368f0:	str	x0, [x19, #328]
   368f4:	mov	w1, w22
   368f8:	mov	x0, x19
   368fc:	mov	x2, x20
   36900:	stp	x20, x3, [sp, #144]
   36904:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   36908:	ldr	w1, [x20, #4]
   3690c:	ldr	x0, [sp, #152]
   36910:	str	x0, [x19, #328]
   36914:	ldr	w0, [x19, #308]
   36918:	sub	w1, w1, #0x1
   3691c:	str	w1, [x20, #4]
   36920:	sub	w0, w0, #0x1
   36924:	str	w0, [x19, #308]
   36928:	ldrb	w0, [x19, #264]
   3692c:	ldr	x1, [x19, #256]
   36930:	cmp	w0, #0x3c
   36934:	b.eq	39754 <__asan_backtrace_create_state@@Base+0x5b6c>  // b.none
   36938:	cmp	x1, #0xff
   3693c:	b.eq	370e0 <__asan_backtrace_create_state@@Base+0x34f8>  // b.none
   36940:	add	x0, x1, #0x1
   36944:	str	x0, [x19, #256]
   36948:	mov	w2, #0x3c                  	// #60
   3694c:	strb	w2, [x19, x1]
   36950:	strb	w2, [x19, #264]
   36954:	ldr	x20, [x24, #16]
   36958:	cbz	x20, 38808 <__asan_backtrace_create_state@@Base+0x4c20>
   3695c:	ldr	w1, [x20, #4]
   36960:	cmp	w1, #0x1
   36964:	b.gt	38808 <__asan_backtrace_create_state@@Base+0x4c20>
   36968:	ldr	w2, [x19, #308]
   3696c:	cmp	w2, #0x400
   36970:	b.gt	38808 <__asan_backtrace_create_state@@Base+0x4c20>
   36974:	ldr	x3, [x19, #328]
   36978:	add	w1, w1, #0x1
   3697c:	str	w1, [x20, #4]
   36980:	add	w2, w2, #0x1
   36984:	add	x0, sp, #0x90
   36988:	str	w2, [x19, #308]
   3698c:	str	x0, [x19, #328]
   36990:	mov	w1, w22
   36994:	mov	x0, x19
   36998:	mov	x2, x20
   3699c:	stp	x20, x3, [sp, #144]
   369a0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   369a4:	ldr	w1, [x20, #4]
   369a8:	ldr	x0, [sp, #152]
   369ac:	str	x0, [x19, #328]
   369b0:	ldr	w0, [x19, #308]
   369b4:	sub	w1, w1, #0x1
   369b8:	str	w1, [x20, #4]
   369bc:	sub	w0, w0, #0x1
   369c0:	str	w0, [x19, #308]
   369c4:	ldrb	w0, [x19, #264]
   369c8:	ldr	x1, [x19, #256]
   369cc:	cmp	w0, #0x3e
   369d0:	b.ne	3a8a8 <__asan_backtrace_create_state@@Base+0x6cc0>  // b.any
   369d4:	cmp	x1, #0xff
   369d8:	b.eq	3a6ac <__asan_backtrace_create_state@@Base+0x6ac4>  // b.none
   369dc:	add	x0, x1, #0x1
   369e0:	str	x0, [x19, #256]
   369e4:	mov	w2, #0x20                  	// #32
   369e8:	strb	w2, [x19, x1]
   369ec:	strb	w2, [x19, #264]
   369f0:	cmp	x0, #0xff
   369f4:	b.eq	370b4 <__asan_backtrace_create_state@@Base+0x34cc>  // b.none
   369f8:	add	x1, x0, #0x1
   369fc:	str	x1, [x19, #256]
   36a00:	mov	w1, #0x3e                  	// #62
   36a04:	strb	w1, [x19, x0]
   36a08:	strb	w1, [x19, #264]
   36a0c:	ldp	x25, x26, [sp, #64]
   36a10:	str	x23, [x19, #296]
   36a14:	str	x21, [x19, #368]
   36a18:	ldp	x21, x22, [sp, #32]
   36a1c:	ldp	x23, x24, [sp, #48]
   36a20:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   36a24:	ldr	w0, [x19, #312]
   36a28:	cbz	w0, 38e60 <__asan_backtrace_create_state@@Base+0x5278>
   36a2c:	ldr	x0, [x19, #256]
   36a30:	cmp	x0, #0xff
   36a34:	b.eq	3a00c <__asan_backtrace_create_state@@Base+0x6424>  // b.none
   36a38:	add	x3, x0, #0x1
   36a3c:	str	x3, [x19, #256]
   36a40:	mov	w1, #0x61                  	// #97
   36a44:	strb	w1, [x19, x0]
   36a48:	strb	w1, [x19, #264]
   36a4c:	cmp	x3, #0xff
   36a50:	b.ne	39978 <__asan_backtrace_create_state@@Base+0x5d90>  // b.any
   36a54:	ldp	x4, x2, [x19, #272]
   36a58:	strb	wzr, [x19, #255]
   36a5c:	mov	x1, x3
   36a60:	mov	x0, x19
   36a64:	blr	x4
   36a68:	ldr	x1, [x19, #320]
   36a6c:	mov	w2, #0x7475                	// #29813
   36a70:	mov	x0, #0x2                   	// #2
   36a74:	strh	w2, [x19]
   36a78:	add	x1, x1, #0x1
   36a7c:	str	x1, [x19, #320]
   36a80:	add	x1, x0, #0x1
   36a84:	mov	w2, #0x6f                  	// #111
   36a88:	strb	w2, [x19, x0]
   36a8c:	add	x0, x1, #0x1
   36a90:	str	x0, [x19, #256]
   36a94:	mov	w0, #0x3a                  	// #58
   36a98:	strb	w0, [x19, x1]
   36a9c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   36aa0:	strb	w0, [x19, #264]
   36aa4:	add	x1, x1, #0x160
   36aa8:	add	x20, sp, #0x90
   36aac:	ldr	x2, [x24, #8]
   36ab0:	mov	x0, x20
   36ab4:	add	w2, w2, #0x1
   36ab8:	bl	6900 <sprintf@plt>
   36abc:	mov	x0, x20
   36ac0:	bl	67e0 <__asan_internal_strlen@plt>
   36ac4:	cbz	x0, 3a9bc <__asan_backtrace_create_state@@Base+0x6dd4>
   36ac8:	add	x22, x20, x0
   36acc:	mov	x23, #0x1                   	// #1
   36ad0:	ldr	x1, [x19, #256]
   36ad4:	b	36b30 <__asan_backtrace_create_state@@Base+0x2f48>
   36ad8:	ldp	x3, x2, [x19, #272]
   36adc:	strb	wzr, [x19, #255]
   36ae0:	mov	x0, x19
   36ae4:	add	x20, x20, #0x1
   36ae8:	blr	x3
   36aec:	strb	w21, [x19]
   36af0:	ldr	x0, [x19, #320]
   36af4:	str	x23, [x19, #256]
   36af8:	strb	w21, [x19, #264]
   36afc:	cmp	x20, x22
   36b00:	add	x0, x0, #0x1
   36b04:	str	x0, [x19, #320]
   36b08:	b.eq	3a3c0 <__asan_backtrace_create_state@@Base+0x67d8>  // b.none
   36b0c:	ldrb	w21, [x20]
   36b10:	mov	x0, #0x1                   	// #1
   36b14:	add	x1, x0, #0x1
   36b18:	str	x1, [x19, #256]
   36b1c:	strb	w21, [x19, x0]
   36b20:	add	x20, x20, #0x1
   36b24:	strb	w21, [x19, #264]
   36b28:	cmp	x22, x20
   36b2c:	b.eq	39898 <__asan_backtrace_create_state@@Base+0x5cb0>  // b.none
   36b30:	ldrb	w21, [x20]
   36b34:	cmp	x1, #0xff
   36b38:	b.eq	36ad8 <__asan_backtrace_create_state@@Base+0x2ef0>  // b.none
   36b3c:	mov	x0, x1
   36b40:	b	36b14 <__asan_backtrace_create_state@@Base+0x2f2c>
   36b44:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36b48:	add	x20, x20, #0xfb0
   36b4c:	mov	x0, x20
   36b50:	bl	67e0 <__asan_internal_strlen@plt>
   36b54:	cbz	x0, 37f84 <__asan_backtrace_create_state@@Base+0x439c>
   36b58:	add	x23, x20, x0
   36b5c:	mov	x25, #0x1                   	// #1
   36b60:	ldr	x1, [x19, #256]
   36b64:	b	36bc0 <__asan_backtrace_create_state@@Base+0x2fd8>
   36b68:	ldp	x3, x2, [x19, #272]
   36b6c:	strb	wzr, [x19, #255]
   36b70:	mov	x0, x19
   36b74:	add	x20, x20, #0x1
   36b78:	blr	x3
   36b7c:	strb	w21, [x19]
   36b80:	ldr	x0, [x19, #320]
   36b84:	str	x25, [x19, #256]
   36b88:	strb	w21, [x19, #264]
   36b8c:	cmp	x20, x23
   36b90:	add	x0, x0, #0x1
   36b94:	str	x0, [x19, #320]
   36b98:	b.eq	37f84 <__asan_backtrace_create_state@@Base+0x439c>  // b.none
   36b9c:	ldrb	w21, [x20]
   36ba0:	mov	x0, #0x1                   	// #1
   36ba4:	add	x1, x0, #0x1
   36ba8:	str	x1, [x19, #256]
   36bac:	strb	w21, [x19, x0]
   36bb0:	add	x20, x20, #0x1
   36bb4:	strb	w21, [x19, #264]
   36bb8:	cmp	x23, x20
   36bbc:	b.eq	37f84 <__asan_backtrace_create_state@@Base+0x439c>  // b.none
   36bc0:	ldrb	w21, [x20]
   36bc4:	cmp	x1, #0xff
   36bc8:	b.eq	36b68 <__asan_backtrace_create_state@@Base+0x2f80>  // b.none
   36bcc:	mov	x0, x1
   36bd0:	b	36ba4 <__asan_backtrace_create_state@@Base+0x2fbc>
   36bd4:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36bd8:	add	x20, x20, #0xfd0
   36bdc:	mov	x0, x20
   36be0:	bl	67e0 <__asan_internal_strlen@plt>
   36be4:	cbz	x0, 380c8 <__asan_backtrace_create_state@@Base+0x44e0>
   36be8:	add	x23, x20, x0
   36bec:	mov	x25, #0x1                   	// #1
   36bf0:	ldr	x1, [x19, #256]
   36bf4:	b	36c50 <__asan_backtrace_create_state@@Base+0x3068>
   36bf8:	ldp	x3, x2, [x19, #272]
   36bfc:	strb	wzr, [x19, #255]
   36c00:	mov	x0, x19
   36c04:	add	x20, x20, #0x1
   36c08:	blr	x3
   36c0c:	strb	w21, [x19]
   36c10:	ldr	x0, [x19, #320]
   36c14:	str	x25, [x19, #256]
   36c18:	strb	w21, [x19, #264]
   36c1c:	cmp	x23, x20
   36c20:	add	x0, x0, #0x1
   36c24:	str	x0, [x19, #320]
   36c28:	b.eq	380c8 <__asan_backtrace_create_state@@Base+0x44e0>  // b.none
   36c2c:	ldrb	w21, [x20]
   36c30:	mov	x0, #0x1                   	// #1
   36c34:	add	x1, x0, #0x1
   36c38:	str	x1, [x19, #256]
   36c3c:	strb	w21, [x19, x0]
   36c40:	add	x20, x20, #0x1
   36c44:	strb	w21, [x19, #264]
   36c48:	cmp	x23, x20
   36c4c:	b.eq	380c8 <__asan_backtrace_create_state@@Base+0x44e0>  // b.none
   36c50:	ldrb	w21, [x20]
   36c54:	cmp	x1, #0xff
   36c58:	b.eq	36bf8 <__asan_backtrace_create_state@@Base+0x3010>  // b.none
   36c5c:	mov	x0, x1
   36c60:	b	36c34 <__asan_backtrace_create_state@@Base+0x304c>
   36c64:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36c68:	add	x20, x20, #0xfe8
   36c6c:	mov	x0, x20
   36c70:	bl	67e0 <__asan_internal_strlen@plt>
   36c74:	cbz	x0, 37b9c <__asan_backtrace_create_state@@Base+0x3fb4>
   36c78:	add	x22, x20, x0
   36c7c:	mov	x23, #0x1                   	// #1
   36c80:	ldr	x1, [x19, #256]
   36c84:	b	36ce0 <__asan_backtrace_create_state@@Base+0x30f8>
   36c88:	ldp	x3, x2, [x19, #272]
   36c8c:	strb	wzr, [x19, #255]
   36c90:	mov	x0, x19
   36c94:	add	x20, x20, #0x1
   36c98:	blr	x3
   36c9c:	strb	w21, [x19]
   36ca0:	ldr	x0, [x19, #320]
   36ca4:	str	x23, [x19, #256]
   36ca8:	strb	w21, [x19, #264]
   36cac:	cmp	x20, x22
   36cb0:	add	x0, x0, #0x1
   36cb4:	str	x0, [x19, #320]
   36cb8:	b.eq	37b9c <__asan_backtrace_create_state@@Base+0x3fb4>  // b.none
   36cbc:	ldrb	w21, [x20]
   36cc0:	mov	x0, #0x1                   	// #1
   36cc4:	add	x1, x0, #0x1
   36cc8:	str	x1, [x19, #256]
   36ccc:	strb	w21, [x19, x0]
   36cd0:	add	x20, x20, #0x1
   36cd4:	strb	w21, [x19, #264]
   36cd8:	cmp	x22, x20
   36cdc:	b.eq	37b9c <__asan_backtrace_create_state@@Base+0x3fb4>  // b.none
   36ce0:	ldrb	w21, [x20]
   36ce4:	cmp	x1, #0xff
   36ce8:	b.eq	36c88 <__asan_backtrace_create_state@@Base+0x30a0>  // b.none
   36cec:	mov	x0, x1
   36cf0:	b	36cc4 <__asan_backtrace_create_state@@Base+0x30dc>
   36cf4:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36cf8:	add	x20, x20, #0xe88
   36cfc:	mov	x0, x20
   36d00:	bl	67e0 <__asan_internal_strlen@plt>
   36d04:	cbz	x0, 376d8 <__asan_backtrace_create_state@@Base+0x3af0>
   36d08:	add	x23, x20, x0
   36d0c:	mov	x25, #0x1                   	// #1
   36d10:	ldr	x1, [x19, #256]
   36d14:	b	36d70 <__asan_backtrace_create_state@@Base+0x3188>
   36d18:	ldp	x3, x2, [x19, #272]
   36d1c:	strb	wzr, [x19, #255]
   36d20:	mov	x0, x19
   36d24:	add	x20, x20, #0x1
   36d28:	blr	x3
   36d2c:	strb	w21, [x19]
   36d30:	ldr	x0, [x19, #320]
   36d34:	str	x25, [x19, #256]
   36d38:	strb	w21, [x19, #264]
   36d3c:	cmp	x20, x23
   36d40:	add	x0, x0, #0x1
   36d44:	str	x0, [x19, #320]
   36d48:	b.eq	376d8 <__asan_backtrace_create_state@@Base+0x3af0>  // b.none
   36d4c:	ldrb	w21, [x20]
   36d50:	mov	x0, #0x1                   	// #1
   36d54:	add	x1, x0, #0x1
   36d58:	str	x1, [x19, #256]
   36d5c:	strb	w21, [x19, x0]
   36d60:	add	x20, x20, #0x1
   36d64:	strb	w21, [x19, #264]
   36d68:	cmp	x20, x23
   36d6c:	b.eq	376d8 <__asan_backtrace_create_state@@Base+0x3af0>  // b.none
   36d70:	ldrb	w21, [x20]
   36d74:	cmp	x1, #0xff
   36d78:	b.eq	36d18 <__asan_backtrace_create_state@@Base+0x3130>  // b.none
   36d7c:	mov	x0, x1
   36d80:	b	36d54 <__asan_backtrace_create_state@@Base+0x316c>
   36d84:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36d88:	add	x20, x20, #0xd00
   36d8c:	mov	x0, x20
   36d90:	bl	67e0 <__asan_internal_strlen@plt>
   36d94:	cbz	x0, 37658 <__asan_backtrace_create_state@@Base+0x3a70>
   36d98:	add	x23, x20, x0
   36d9c:	mov	x25, #0x1                   	// #1
   36da0:	ldr	x1, [x19, #256]
   36da4:	b	36e00 <__asan_backtrace_create_state@@Base+0x3218>
   36da8:	ldp	x3, x2, [x19, #272]
   36dac:	strb	wzr, [x19, #255]
   36db0:	mov	x0, x19
   36db4:	add	x20, x20, #0x1
   36db8:	blr	x3
   36dbc:	strb	w21, [x19]
   36dc0:	ldr	x0, [x19, #320]
   36dc4:	str	x25, [x19, #256]
   36dc8:	strb	w21, [x19, #264]
   36dcc:	cmp	x20, x23
   36dd0:	add	x0, x0, #0x1
   36dd4:	str	x0, [x19, #320]
   36dd8:	b.eq	37658 <__asan_backtrace_create_state@@Base+0x3a70>  // b.none
   36ddc:	ldrb	w21, [x20]
   36de0:	mov	x0, #0x1                   	// #1
   36de4:	add	x1, x0, #0x1
   36de8:	str	x1, [x19, #256]
   36dec:	strb	w21, [x19, x0]
   36df0:	add	x20, x20, #0x1
   36df4:	strb	w21, [x19, #264]
   36df8:	cmp	x23, x20
   36dfc:	b.eq	37658 <__asan_backtrace_create_state@@Base+0x3a70>  // b.none
   36e00:	ldrb	w21, [x20]
   36e04:	cmp	x1, #0xff
   36e08:	b.eq	36da8 <__asan_backtrace_create_state@@Base+0x31c0>  // b.none
   36e0c:	mov	x0, x1
   36e10:	b	36de4 <__asan_backtrace_create_state@@Base+0x31fc>
   36e14:	ldp	x21, x20, [x2, #8]
   36e18:	cbz	x21, 36e84 <__asan_backtrace_create_state@@Base+0x329c>
   36e1c:	ldr	w0, [x21, #4]
   36e20:	cmp	w0, #0x1
   36e24:	b.gt	39150 <__asan_backtrace_create_state@@Base+0x5568>
   36e28:	ldr	w1, [x19, #308]
   36e2c:	cmp	w1, #0x400
   36e30:	b.gt	39150 <__asan_backtrace_create_state@@Base+0x5568>
   36e34:	ldr	x3, [x19, #328]
   36e38:	add	w0, w0, #0x1
   36e3c:	str	w0, [x21, #4]
   36e40:	add	w1, w1, #0x1
   36e44:	add	x0, sp, #0x90
   36e48:	str	w1, [x19, #308]
   36e4c:	str	x0, [x19, #328]
   36e50:	mov	w1, w22
   36e54:	mov	x0, x19
   36e58:	mov	x2, x21
   36e5c:	stp	x21, x3, [sp, #144]
   36e60:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   36e64:	ldr	w1, [x21, #4]
   36e68:	ldr	x0, [sp, #152]
   36e6c:	str	x0, [x19, #328]
   36e70:	ldr	w0, [x19, #308]
   36e74:	sub	w1, w1, #0x1
   36e78:	str	w1, [x21, #4]
   36e7c:	sub	w0, w0, #0x1
   36e80:	str	w0, [x19, #308]
   36e84:	ldr	x1, [x19, #256]
   36e88:	add	x0, x1, #0x1
   36e8c:	cmp	x1, #0xff
   36e90:	b.ne	36eb8 <__asan_backtrace_create_state@@Base+0x32d0>  // b.any
   36e94:	ldp	x3, x2, [x19, #272]
   36e98:	strb	wzr, [x19, #255]
   36e9c:	mov	x0, x19
   36ea0:	blr	x3
   36ea4:	ldr	x2, [x19, #320]
   36ea8:	mov	x0, #0x1                   	// #1
   36eac:	mov	x1, #0x0                   	// #0
   36eb0:	add	x2, x2, x0
   36eb4:	str	x2, [x19, #320]
   36eb8:	str	x0, [x19, #256]
   36ebc:	mov	w2, #0x7b                  	// #123
   36ec0:	strb	w2, [x19, x1]
   36ec4:	strb	w2, [x19, #264]
   36ec8:	cbz	x20, 38580 <__asan_backtrace_create_state@@Base+0x4998>
   36ecc:	ldr	w1, [x20, #4]
   36ed0:	cmp	w1, #0x1
   36ed4:	b.gt	38580 <__asan_backtrace_create_state@@Base+0x4998>
   36ed8:	ldr	w2, [x19, #308]
   36edc:	cmp	w2, #0x400
   36ee0:	b.gt	38580 <__asan_backtrace_create_state@@Base+0x4998>
   36ee4:	ldr	x3, [x19, #328]
   36ee8:	add	w1, w1, #0x1
   36eec:	str	w1, [x20, #4]
   36ef0:	add	w2, w2, #0x1
   36ef4:	add	x0, sp, #0x90
   36ef8:	str	w2, [x19, #308]
   36efc:	str	x0, [x19, #328]
   36f00:	mov	w1, w22
   36f04:	mov	x2, x20
   36f08:	mov	x0, x19
   36f0c:	stp	x20, x3, [sp, #144]
   36f10:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   36f14:	ldr	w2, [x20, #4]
   36f18:	ldr	x0, [sp, #152]
   36f1c:	str	x0, [x19, #328]
   36f20:	ldr	w1, [x19, #308]
   36f24:	sub	w2, w2, #0x1
   36f28:	ldr	x0, [x19, #256]
   36f2c:	str	w2, [x20, #4]
   36f30:	sub	w1, w1, #0x1
   36f34:	str	w1, [x19, #308]
   36f38:	add	x1, x0, #0x1
   36f3c:	cmp	x0, #0xff
   36f40:	b.ne	36f6c <__asan_backtrace_create_state@@Base+0x3384>  // b.any
   36f44:	ldp	x3, x2, [x19, #272]
   36f48:	strb	wzr, [x19, #255]
   36f4c:	mov	x1, x0
   36f50:	mov	x0, x19
   36f54:	blr	x3
   36f58:	ldr	x2, [x19, #320]
   36f5c:	mov	x1, #0x1                   	// #1
   36f60:	mov	x0, #0x0                   	// #0
   36f64:	add	x2, x2, x1
   36f68:	str	x2, [x19, #320]
   36f6c:	str	x1, [x19, #256]
   36f70:	mov	w1, #0x7d                  	// #125
   36f74:	strb	w1, [x19, x0]
   36f78:	strb	w1, [x19, #264]
   36f7c:	ldp	x21, x22, [sp, #32]
   36f80:	ldp	x23, x24, [sp, #48]
   36f84:	ldp	x25, x26, [sp, #64]
   36f88:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   36f8c:	ldr	x22, [x2, #8]
   36f90:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   36f94:	add	x20, x20, #0xee0
   36f98:	mov	x0, x20
   36f9c:	ldr	w23, [x22, #16]
   36fa0:	bl	67e0 <__asan_internal_strlen@plt>
   36fa4:	cbz	x0, 38820 <__asan_backtrace_create_state@@Base+0x4c38>
   36fa8:	add	x24, x20, x0
   36fac:	mov	x25, #0x1                   	// #1
   36fb0:	ldr	x1, [x19, #256]
   36fb4:	b	37010 <__asan_backtrace_create_state@@Base+0x3428>
   36fb8:	ldp	x3, x2, [x19, #272]
   36fbc:	strb	wzr, [x19, #255]
   36fc0:	mov	x0, x19
   36fc4:	add	x20, x20, #0x1
   36fc8:	blr	x3
   36fcc:	strb	w21, [x19]
   36fd0:	ldr	x0, [x19, #320]
   36fd4:	str	x25, [x19, #256]
   36fd8:	strb	w21, [x19, #264]
   36fdc:	cmp	x20, x24
   36fe0:	add	x0, x0, #0x1
   36fe4:	str	x0, [x19, #320]
   36fe8:	b.eq	39730 <__asan_backtrace_create_state@@Base+0x5b48>  // b.none
   36fec:	ldrb	w21, [x20]
   36ff0:	mov	x0, #0x1                   	// #1
   36ff4:	add	x1, x0, #0x1
   36ff8:	str	x1, [x19, #256]
   36ffc:	strb	w21, [x19, x0]
   37000:	add	x20, x20, #0x1
   37004:	strb	w21, [x19, #264]
   37008:	cmp	x24, x20
   3700c:	b.eq	38820 <__asan_backtrace_create_state@@Base+0x4c38>  // b.none
   37010:	ldrb	w21, [x20]
   37014:	cmp	x1, #0xff
   37018:	b.eq	36fb8 <__asan_backtrace_create_state@@Base+0x33d0>  // b.none
   3701c:	mov	x0, x1
   37020:	b	36ff4 <__asan_backtrace_create_state@@Base+0x340c>
   37024:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   37028:	add	x20, x20, #0xef0
   3702c:	mov	x0, x20
   37030:	bl	67e0 <__asan_internal_strlen@plt>
   37034:	cbz	x0, 37e84 <__asan_backtrace_create_state@@Base+0x429c>
   37038:	add	x23, x20, x0
   3703c:	mov	x25, #0x1                   	// #1
   37040:	ldr	x1, [x19, #256]
   37044:	b	370a0 <__asan_backtrace_create_state@@Base+0x34b8>
   37048:	ldp	x3, x2, [x19, #272]
   3704c:	strb	wzr, [x19, #255]
   37050:	mov	x0, x19
   37054:	add	x20, x20, #0x1
   37058:	blr	x3
   3705c:	strb	w21, [x19]
   37060:	ldr	x0, [x19, #320]
   37064:	str	x25, [x19, #256]
   37068:	strb	w21, [x19, #264]
   3706c:	cmp	x20, x23
   37070:	add	x0, x0, #0x1
   37074:	str	x0, [x19, #320]
   37078:	b.eq	37e84 <__asan_backtrace_create_state@@Base+0x429c>  // b.none
   3707c:	ldrb	w21, [x20]
   37080:	mov	x0, #0x1                   	// #1
   37084:	add	x1, x0, #0x1
   37088:	str	x1, [x19, #256]
   3708c:	strb	w21, [x19, x0]
   37090:	add	x20, x20, #0x1
   37094:	strb	w21, [x19, #264]
   37098:	cmp	x23, x20
   3709c:	b.eq	37e84 <__asan_backtrace_create_state@@Base+0x429c>  // b.none
   370a0:	ldrb	w21, [x20]
   370a4:	cmp	x1, #0xff
   370a8:	b.eq	37048 <__asan_backtrace_create_state@@Base+0x3460>  // b.none
   370ac:	mov	x0, x1
   370b0:	b	37084 <__asan_backtrace_create_state@@Base+0x349c>
   370b4:	ldp	x3, x2, [x19, #272]
   370b8:	strb	wzr, [x19, #255]
   370bc:	mov	x1, x0
   370c0:	mov	x0, x19
   370c4:	blr	x3
   370c8:	ldr	x2, [x19, #320]
   370cc:	mov	x1, #0x1                   	// #1
   370d0:	mov	x0, #0x0                   	// #0
   370d4:	add	x2, x2, x1
   370d8:	str	x2, [x19, #320]
   370dc:	b	369fc <__asan_backtrace_create_state@@Base+0x2e14>
   370e0:	ldp	x3, x2, [x19, #272]
   370e4:	strb	wzr, [x19, #255]
   370e8:	mov	x0, x19
   370ec:	blr	x3
   370f0:	ldr	x2, [x19, #320]
   370f4:	mov	x0, #0x1                   	// #1
   370f8:	mov	x1, #0x0                   	// #0
   370fc:	add	x2, x2, x0
   37100:	str	x2, [x19, #320]
   37104:	b	36944 <__asan_backtrace_create_state@@Base+0x2d5c>
   37108:	ldr	w0, [sp, #100]
   3710c:	add	w21, w21, #0x1
   37110:	cmp	w21, w0
   37114:	b.lt	35810 <__asan_backtrace_create_state@@Base+0x1c28>  // b.tstop
   37118:	cmp	w23, w21
   3711c:	b.le	3a38c <__asan_backtrace_create_state@@Base+0x67a4>
   37120:	add	x20, sp, #0x90
   37124:	mov	w24, #0x1                   	// #1
   37128:	b	37190 <__asan_backtrace_create_state@@Base+0x35a8>
   3712c:	ldr	w1, [x19, #308]
   37130:	cmp	w1, #0x400
   37134:	b.gt	371a4 <__asan_backtrace_create_state@@Base+0x35bc>
   37138:	ldr	x3, [x19, #328]
   3713c:	add	w0, w0, #0x1
   37140:	str	w0, [x28, #4]
   37144:	add	w1, w1, #0x1
   37148:	str	w1, [x19, #308]
   3714c:	mov	x0, x19
   37150:	str	x20, [x19, #328]
   37154:	mov	w1, w22
   37158:	mov	x2, x28
   3715c:	stp	x28, x3, [sp, #144]
   37160:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37164:	ldr	w1, [x28, #4]
   37168:	ldr	x0, [sp, #152]
   3716c:	str	x0, [x19, #328]
   37170:	ldr	w0, [x19, #308]
   37174:	sub	w1, w1, #0x1
   37178:	str	w1, [x28, #4]
   3717c:	sub	w0, w0, #0x1
   37180:	str	w0, [x19, #308]
   37184:	add	w21, w21, #0x1
   37188:	cmp	w23, w21
   3718c:	b.le	384b0 <__asan_backtrace_create_state@@Base+0x48c8>
   37190:	str	w21, [x19, #316]
   37194:	cbz	x28, 371a4 <__asan_backtrace_create_state@@Base+0x35bc>
   37198:	ldr	w0, [x28, #4]
   3719c:	cmp	w0, #0x1
   371a0:	b.le	3712c <__asan_backtrace_create_state@@Base+0x3544>
   371a4:	str	w24, [x19, #304]
   371a8:	b	37184 <__asan_backtrace_create_state@@Base+0x359c>
   371ac:	mov	w0, #0x1                   	// #1
   371b0:	str	w0, [x19, #304]
   371b4:	b	35880 <__asan_backtrace_create_state@@Base+0x1c98>
   371b8:	ldr	x25, [x0, #8]
   371bc:	add	x0, sp, #0x90
   371c0:	stp	x2, x24, [sp, #144]
   371c4:	str	wzr, [sp, #160]
   371c8:	str	x4, [sp, #168]
   371cc:	str	x0, [x19, #296]
   371d0:	cbz	x25, 34784 <__asan_backtrace_create_state@@Base+0xb9c>
   371d4:	ldr	w0, [x25, #4]
   371d8:	cmp	w0, #0x1
   371dc:	b.gt	3478c <__asan_backtrace_create_state@@Base+0xba4>
   371e0:	ldr	w1, [x19, #308]
   371e4:	cmp	w1, #0x400
   371e8:	b.gt	3478c <__asan_backtrace_create_state@@Base+0xba4>
   371ec:	ldr	x3, [x19, #328]
   371f0:	add	w0, w0, #0x1
   371f4:	str	w0, [x25, #4]
   371f8:	add	w1, w1, #0x1
   371fc:	add	x0, sp, #0x80
   37200:	str	w1, [x19, #308]
   37204:	str	x0, [x19, #328]
   37208:	mov	x2, x25
   3720c:	mov	w1, w22
   37210:	mov	x0, x19
   37214:	stp	x25, x3, [sp, #128]
   37218:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3721c:	ldr	w1, [x25, #4]
   37220:	ldr	x0, [sp, #136]
   37224:	str	x0, [x19, #328]
   37228:	ldr	w2, [sp, #160]
   3722c:	sub	w1, w1, #0x1
   37230:	ldr	w0, [x19, #308]
   37234:	str	w1, [x25, #4]
   37238:	sub	w0, w0, #0x1
   3723c:	str	w0, [x19, #308]
   37240:	cbnz	w2, 347a4 <__asan_backtrace_create_state@@Base+0xbbc>
   37244:	b	34794 <__asan_backtrace_create_state@@Base+0xbac>
   37248:	ldp	x21, x22, [sp, #32]
   3724c:	ldp	x23, x24, [sp, #48]
   37250:	ldp	x25, x26, [sp, #64]
   37254:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37258:	ldr	x20, [x24, #8]
   3725c:	cbz	x20, 384e8 <__asan_backtrace_create_state@@Base+0x4900>
   37260:	ldr	w0, [x20, #4]
   37264:	cmp	w0, #0x1
   37268:	b.gt	384e8 <__asan_backtrace_create_state@@Base+0x4900>
   3726c:	ldr	w1, [x19, #308]
   37270:	cmp	w1, #0x400
   37274:	b.gt	384e8 <__asan_backtrace_create_state@@Base+0x4900>
   37278:	ldr	x3, [x19, #328]
   3727c:	add	w0, w0, #0x1
   37280:	str	w0, [x20, #4]
   37284:	add	w1, w1, #0x1
   37288:	add	x0, sp, #0x90
   3728c:	str	w1, [x19, #308]
   37290:	str	x0, [x19, #328]
   37294:	mov	w1, w22
   37298:	mov	x0, x19
   3729c:	mov	x2, x20
   372a0:	stp	x20, x3, [sp, #144]
   372a4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   372a8:	ldr	w1, [x20, #4]
   372ac:	ldr	x0, [sp, #152]
   372b0:	sub	w1, w1, #0x1
   372b4:	ldp	x21, x22, [sp, #32]
   372b8:	ldp	x23, x24, [sp, #48]
   372bc:	ldp	x25, x26, [sp, #64]
   372c0:	str	x0, [x19, #328]
   372c4:	ldr	w0, [x19, #308]
   372c8:	str	w1, [x20, #4]
   372cc:	sub	w0, w0, #0x1
   372d0:	str	w0, [x19, #308]
   372d4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   372d8:	ldr	x20, [x24, #8]
   372dc:	cbz	x20, 38500 <__asan_backtrace_create_state@@Base+0x4918>
   372e0:	ldr	w0, [x20, #4]
   372e4:	cmp	w0, #0x1
   372e8:	b.gt	38500 <__asan_backtrace_create_state@@Base+0x4918>
   372ec:	ldr	w1, [x19, #308]
   372f0:	cmp	w1, #0x400
   372f4:	b.gt	38500 <__asan_backtrace_create_state@@Base+0x4918>
   372f8:	ldr	x3, [x19, #328]
   372fc:	add	w0, w0, #0x1
   37300:	str	w0, [x20, #4]
   37304:	add	w1, w1, #0x1
   37308:	add	x0, sp, #0x90
   3730c:	str	w1, [x19, #308]
   37310:	str	x0, [x19, #328]
   37314:	mov	w1, w22
   37318:	mov	x0, x19
   3731c:	mov	x2, x20
   37320:	stp	x20, x3, [sp, #144]
   37324:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37328:	ldr	w1, [x20, #4]
   3732c:	ldr	x0, [sp, #152]
   37330:	sub	w1, w1, #0x1
   37334:	ldp	x21, x22, [sp, #32]
   37338:	ldp	x23, x24, [sp, #48]
   3733c:	ldp	x25, x26, [sp, #64]
   37340:	str	x0, [x19, #328]
   37344:	ldr	w0, [x19, #308]
   37348:	str	w1, [x20, #4]
   3734c:	sub	w0, w0, #0x1
   37350:	str	w0, [x19, #308]
   37354:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37358:	ldr	x20, [x24, #8]
   3735c:	cbz	x20, 38530 <__asan_backtrace_create_state@@Base+0x4948>
   37360:	ldr	w0, [x20, #4]
   37364:	cmp	w0, #0x1
   37368:	b.gt	38530 <__asan_backtrace_create_state@@Base+0x4948>
   3736c:	ldr	w1, [x19, #308]
   37370:	cmp	w1, #0x400
   37374:	b.gt	38530 <__asan_backtrace_create_state@@Base+0x4948>
   37378:	ldr	x3, [x19, #328]
   3737c:	add	w0, w0, #0x1
   37380:	str	w0, [x20, #4]
   37384:	add	w1, w1, #0x1
   37388:	add	x0, sp, #0x90
   3738c:	str	w1, [x19, #308]
   37390:	str	x0, [x19, #328]
   37394:	mov	w1, w22
   37398:	mov	x0, x19
   3739c:	mov	x2, x20
   373a0:	stp	x20, x3, [sp, #144]
   373a4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   373a8:	ldr	w1, [x20, #4]
   373ac:	ldr	x0, [sp, #152]
   373b0:	sub	w1, w1, #0x1
   373b4:	ldp	x21, x22, [sp, #32]
   373b8:	ldp	x23, x24, [sp, #48]
   373bc:	ldp	x25, x26, [sp, #64]
   373c0:	str	x0, [x19, #328]
   373c4:	ldr	w0, [x19, #308]
   373c8:	str	w1, [x20, #4]
   373cc:	sub	w0, w0, #0x1
   373d0:	str	w0, [x19, #308]
   373d4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   373d8:	ldr	x20, [x24, #8]
   373dc:	cbz	x20, 38518 <__asan_backtrace_create_state@@Base+0x4930>
   373e0:	ldr	w0, [x20, #4]
   373e4:	cmp	w0, #0x1
   373e8:	b.gt	38518 <__asan_backtrace_create_state@@Base+0x4930>
   373ec:	ldr	w1, [x19, #308]
   373f0:	cmp	w1, #0x400
   373f4:	b.gt	38518 <__asan_backtrace_create_state@@Base+0x4930>
   373f8:	ldr	x3, [x19, #328]
   373fc:	add	w0, w0, #0x1
   37400:	str	w0, [x20, #4]
   37404:	add	w1, w1, #0x1
   37408:	add	x0, sp, #0x90
   3740c:	str	w1, [x19, #308]
   37410:	str	x0, [x19, #328]
   37414:	mov	w1, w22
   37418:	mov	x0, x19
   3741c:	mov	x2, x20
   37420:	stp	x20, x3, [sp, #144]
   37424:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37428:	ldr	w1, [x20, #4]
   3742c:	ldr	x0, [sp, #152]
   37430:	sub	w1, w1, #0x1
   37434:	ldp	x21, x22, [sp, #32]
   37438:	ldp	x23, x24, [sp, #48]
   3743c:	ldp	x25, x26, [sp, #64]
   37440:	str	x0, [x19, #328]
   37444:	ldr	w0, [x19, #308]
   37448:	str	w1, [x20, #4]
   3744c:	sub	w0, w0, #0x1
   37450:	str	w0, [x19, #308]
   37454:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37458:	ldr	x20, [x24, #8]
   3745c:	cbz	x20, 384d0 <__asan_backtrace_create_state@@Base+0x48e8>
   37460:	ldr	w0, [x20, #4]
   37464:	cmp	w0, #0x1
   37468:	b.gt	384d0 <__asan_backtrace_create_state@@Base+0x48e8>
   3746c:	ldr	w1, [x19, #308]
   37470:	cmp	w1, #0x400
   37474:	b.gt	384d0 <__asan_backtrace_create_state@@Base+0x48e8>
   37478:	ldr	x3, [x19, #328]
   3747c:	add	w0, w0, #0x1
   37480:	str	w0, [x20, #4]
   37484:	add	w1, w1, #0x1
   37488:	add	x0, sp, #0x90
   3748c:	str	w1, [x19, #308]
   37490:	str	x0, [x19, #328]
   37494:	mov	w1, w22
   37498:	mov	x0, x19
   3749c:	mov	x2, x20
   374a0:	stp	x20, x3, [sp, #144]
   374a4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   374a8:	ldr	w1, [x20, #4]
   374ac:	ldr	x0, [sp, #152]
   374b0:	str	x0, [x19, #328]
   374b4:	ldr	w0, [x19, #308]
   374b8:	sub	w1, w1, #0x1
   374bc:	str	w1, [x20, #4]
   374c0:	sub	w0, w0, #0x1
   374c4:	str	w0, [x19, #308]
   374c8:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   374cc:	add	x20, x20, #0xd60
   374d0:	mov	x0, x20
   374d4:	bl	67e0 <__asan_internal_strlen@plt>
   374d8:	cbz	x0, 37558 <__asan_backtrace_create_state@@Base+0x3970>
   374dc:	add	x23, x20, x0
   374e0:	mov	x25, #0x1                   	// #1
   374e4:	ldr	x1, [x19, #256]
   374e8:	b	37544 <__asan_backtrace_create_state@@Base+0x395c>
   374ec:	ldp	x3, x2, [x19, #272]
   374f0:	strb	wzr, [x19, #255]
   374f4:	mov	x0, x19
   374f8:	add	x20, x20, #0x1
   374fc:	blr	x3
   37500:	strb	w21, [x19]
   37504:	ldr	x0, [x19, #320]
   37508:	str	x25, [x19, #256]
   3750c:	strb	w21, [x19, #264]
   37510:	cmp	x20, x23
   37514:	add	x0, x0, #0x1
   37518:	str	x0, [x19, #320]
   3751c:	b.eq	37558 <__asan_backtrace_create_state@@Base+0x3970>  // b.none
   37520:	ldrb	w21, [x20]
   37524:	mov	x0, #0x1                   	// #1
   37528:	add	x1, x0, #0x1
   3752c:	str	x1, [x19, #256]
   37530:	strb	w21, [x19, x0]
   37534:	add	x20, x20, #0x1
   37538:	strb	w21, [x19, #264]
   3753c:	cmp	x23, x20
   37540:	b.eq	37558 <__asan_backtrace_create_state@@Base+0x3970>  // b.none
   37544:	ldrb	w21, [x20]
   37548:	cmp	x1, #0xff
   3754c:	b.eq	374ec <__asan_backtrace_create_state@@Base+0x3904>  // b.none
   37550:	mov	x0, x1
   37554:	b	37528 <__asan_backtrace_create_state@@Base+0x3940>
   37558:	ldr	x20, [x24, #16]
   3755c:	cbz	x20, 38548 <__asan_backtrace_create_state@@Base+0x4960>
   37560:	ldr	w0, [x20, #4]
   37564:	cmp	w0, #0x1
   37568:	b.gt	38548 <__asan_backtrace_create_state@@Base+0x4960>
   3756c:	ldr	w1, [x19, #308]
   37570:	cmp	w1, #0x400
   37574:	b.gt	38548 <__asan_backtrace_create_state@@Base+0x4960>
   37578:	ldr	x3, [x19, #328]
   3757c:	add	w0, w0, #0x1
   37580:	str	w0, [x20, #4]
   37584:	add	w1, w1, #0x1
   37588:	add	x0, sp, #0x90
   3758c:	str	w1, [x19, #308]
   37590:	str	x0, [x19, #328]
   37594:	mov	w1, w22
   37598:	mov	x0, x19
   3759c:	mov	x2, x20
   375a0:	stp	x20, x3, [sp, #144]
   375a4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   375a8:	ldr	w1, [x20, #4]
   375ac:	ldr	x0, [sp, #152]
   375b0:	sub	w1, w1, #0x1
   375b4:	ldp	x21, x22, [sp, #32]
   375b8:	ldp	x23, x24, [sp, #48]
   375bc:	ldp	x25, x26, [sp, #64]
   375c0:	str	x0, [x19, #328]
   375c4:	ldr	w0, [x19, #308]
   375c8:	str	w1, [x20, #4]
   375cc:	sub	w0, w0, #0x1
   375d0:	str	w0, [x19, #308]
   375d4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   375d8:	ldr	x20, [x24, #8]
   375dc:	cbz	x20, 3858c <__asan_backtrace_create_state@@Base+0x49a4>
   375e0:	ldr	w0, [x20, #4]
   375e4:	cmp	w0, #0x1
   375e8:	b.gt	3858c <__asan_backtrace_create_state@@Base+0x49a4>
   375ec:	ldr	w1, [x19, #308]
   375f0:	cmp	w1, #0x400
   375f4:	b.gt	3858c <__asan_backtrace_create_state@@Base+0x49a4>
   375f8:	ldr	x3, [x19, #328]
   375fc:	add	w0, w0, #0x1
   37600:	str	w0, [x20, #4]
   37604:	add	w1, w1, #0x1
   37608:	add	x0, sp, #0x90
   3760c:	str	w1, [x19, #308]
   37610:	str	x0, [x19, #328]
   37614:	mov	w1, w22
   37618:	mov	x0, x19
   3761c:	mov	x2, x20
   37620:	stp	x20, x3, [sp, #144]
   37624:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37628:	ldr	w1, [x20, #4]
   3762c:	ldr	x0, [sp, #152]
   37630:	sub	w1, w1, #0x1
   37634:	ldp	x21, x22, [sp, #32]
   37638:	ldp	x23, x24, [sp, #48]
   3763c:	ldp	x25, x26, [sp, #64]
   37640:	str	x0, [x19, #328]
   37644:	ldr	w0, [x19, #308]
   37648:	str	w1, [x20, #4]
   3764c:	sub	w0, w0, #0x1
   37650:	str	w0, [x19, #308]
   37654:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37658:	ldr	x20, [x24, #8]
   3765c:	cbz	x20, 385a4 <__asan_backtrace_create_state@@Base+0x49bc>
   37660:	ldr	w0, [x20, #4]
   37664:	cmp	w0, #0x1
   37668:	b.gt	385a4 <__asan_backtrace_create_state@@Base+0x49bc>
   3766c:	ldr	w1, [x19, #308]
   37670:	cmp	w1, #0x400
   37674:	b.gt	385a4 <__asan_backtrace_create_state@@Base+0x49bc>
   37678:	ldr	x3, [x19, #328]
   3767c:	add	w0, w0, #0x1
   37680:	str	w0, [x20, #4]
   37684:	add	w1, w1, #0x1
   37688:	add	x0, sp, #0x90
   3768c:	str	w1, [x19, #308]
   37690:	str	x0, [x19, #328]
   37694:	mov	w1, w22
   37698:	mov	x0, x19
   3769c:	mov	x2, x20
   376a0:	stp	x20, x3, [sp, #144]
   376a4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   376a8:	ldr	w1, [x20, #4]
   376ac:	ldr	x0, [sp, #152]
   376b0:	sub	w1, w1, #0x1
   376b4:	ldp	x21, x22, [sp, #32]
   376b8:	ldp	x23, x24, [sp, #48]
   376bc:	ldp	x25, x26, [sp, #64]
   376c0:	str	x0, [x19, #328]
   376c4:	ldr	w0, [x19, #308]
   376c8:	str	w1, [x20, #4]
   376cc:	sub	w0, w0, #0x1
   376d0:	str	w0, [x19, #308]
   376d4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   376d8:	ldr	x20, [x24, #8]
   376dc:	cbz	x20, 3862c <__asan_backtrace_create_state@@Base+0x4a44>
   376e0:	ldr	w0, [x20, #4]
   376e4:	cmp	w0, #0x1
   376e8:	b.gt	3862c <__asan_backtrace_create_state@@Base+0x4a44>
   376ec:	ldr	w1, [x19, #308]
   376f0:	cmp	w1, #0x400
   376f4:	b.gt	3862c <__asan_backtrace_create_state@@Base+0x4a44>
   376f8:	ldr	x3, [x19, #328]
   376fc:	add	w0, w0, #0x1
   37700:	str	w0, [x20, #4]
   37704:	add	w1, w1, #0x1
   37708:	add	x0, sp, #0x90
   3770c:	str	w1, [x19, #308]
   37710:	str	x0, [x19, #328]
   37714:	mov	w1, w22
   37718:	mov	x0, x19
   3771c:	mov	x2, x20
   37720:	stp	x20, x3, [sp, #144]
   37724:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37728:	ldr	w1, [x20, #4]
   3772c:	ldr	x0, [sp, #152]
   37730:	sub	w1, w1, #0x1
   37734:	ldp	x21, x22, [sp, #32]
   37738:	ldp	x23, x24, [sp, #48]
   3773c:	ldp	x25, x26, [sp, #64]
   37740:	str	x0, [x19, #328]
   37744:	ldr	w0, [x19, #308]
   37748:	str	w1, [x20, #4]
   3774c:	sub	w0, w0, #0x1
   37750:	str	w0, [x19, #308]
   37754:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37758:	ldr	x20, [x24, #16]
   3775c:	cbz	x20, 384c4 <__asan_backtrace_create_state@@Base+0x48dc>
   37760:	ldr	w0, [x20, #4]
   37764:	cmp	w0, #0x1
   37768:	b.gt	384c4 <__asan_backtrace_create_state@@Base+0x48dc>
   3776c:	ldr	w1, [x19, #308]
   37770:	cmp	w1, #0x400
   37774:	b.gt	384c4 <__asan_backtrace_create_state@@Base+0x48dc>
   37778:	ldr	x3, [x19, #328]
   3777c:	add	w0, w0, #0x1
   37780:	str	w0, [x20, #4]
   37784:	add	w1, w1, #0x1
   37788:	add	x0, sp, #0x90
   3778c:	str	w1, [x19, #308]
   37790:	str	x0, [x19, #328]
   37794:	mov	w1, w22
   37798:	mov	x0, x19
   3779c:	mov	x2, x20
   377a0:	stp	x20, x3, [sp, #144]
   377a4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   377a8:	ldr	w1, [x20, #4]
   377ac:	ldr	x0, [sp, #152]
   377b0:	str	x0, [x19, #328]
   377b4:	ldr	w0, [x19, #308]
   377b8:	sub	w1, w1, #0x1
   377bc:	str	w1, [x20, #4]
   377c0:	sub	w0, w0, #0x1
   377c4:	str	w0, [x19, #308]
   377c8:	ldr	x1, [x19, #256]
   377cc:	add	x0, x1, #0x1
   377d0:	cmp	x1, #0xff
   377d4:	b.ne	377fc <__asan_backtrace_create_state@@Base+0x3c14>  // b.any
   377d8:	ldp	x3, x2, [x19, #272]
   377dc:	strb	wzr, [x19, #255]
   377e0:	mov	x0, x19
   377e4:	blr	x3
   377e8:	ldr	x2, [x19, #320]
   377ec:	mov	x0, #0x1                   	// #1
   377f0:	mov	x1, #0x0                   	// #0
   377f4:	add	x2, x2, x0
   377f8:	str	x2, [x19, #320]
   377fc:	str	x0, [x19, #256]
   37800:	mov	w0, #0x5d                  	// #93
   37804:	strb	w0, [x19, x1]
   37808:	strb	w0, [x19, #264]
   3780c:	ldp	x21, x22, [sp, #32]
   37810:	ldp	x23, x24, [sp, #48]
   37814:	ldp	x25, x26, [sp, #64]
   37818:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3781c:	ldr	x20, [x24, #8]
   37820:	cbz	x20, 38644 <__asan_backtrace_create_state@@Base+0x4a5c>
   37824:	ldr	w0, [x20, #4]
   37828:	cmp	w0, #0x1
   3782c:	b.gt	38644 <__asan_backtrace_create_state@@Base+0x4a5c>
   37830:	ldr	w1, [x19, #308]
   37834:	cmp	w1, #0x400
   37838:	b.gt	38644 <__asan_backtrace_create_state@@Base+0x4a5c>
   3783c:	ldr	x3, [x19, #328]
   37840:	add	w0, w0, #0x1
   37844:	str	w0, [x20, #4]
   37848:	add	w1, w1, #0x1
   3784c:	add	x0, sp, #0x90
   37850:	str	w1, [x19, #308]
   37854:	str	x0, [x19, #328]
   37858:	mov	w1, w22
   3785c:	mov	x0, x19
   37860:	mov	x2, x20
   37864:	stp	x20, x3, [sp, #144]
   37868:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3786c:	ldr	w1, [x20, #4]
   37870:	ldr	x0, [sp, #152]
   37874:	sub	w1, w1, #0x1
   37878:	ldp	x21, x22, [sp, #32]
   3787c:	ldp	x23, x24, [sp, #48]
   37880:	ldp	x25, x26, [sp, #64]
   37884:	str	x0, [x19, #328]
   37888:	ldr	w0, [x19, #308]
   3788c:	str	w1, [x20, #4]
   37890:	sub	w0, w0, #0x1
   37894:	str	w0, [x19, #308]
   37898:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3789c:	ldr	x20, [x24, #8]
   378a0:	cbz	x20, 38674 <__asan_backtrace_create_state@@Base+0x4a8c>
   378a4:	ldr	w0, [x20, #4]
   378a8:	cmp	w0, #0x1
   378ac:	b.gt	38674 <__asan_backtrace_create_state@@Base+0x4a8c>
   378b0:	ldr	w1, [x19, #308]
   378b4:	cmp	w1, #0x400
   378b8:	b.gt	38674 <__asan_backtrace_create_state@@Base+0x4a8c>
   378bc:	ldr	x3, [x19, #328]
   378c0:	add	w0, w0, #0x1
   378c4:	str	w0, [x20, #4]
   378c8:	add	w1, w1, #0x1
   378cc:	add	x0, sp, #0x90
   378d0:	str	w1, [x19, #308]
   378d4:	str	x0, [x19, #328]
   378d8:	mov	w1, w22
   378dc:	mov	x0, x19
   378e0:	mov	x2, x20
   378e4:	stp	x20, x3, [sp, #144]
   378e8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   378ec:	ldr	w1, [x20, #4]
   378f0:	ldr	x0, [sp, #152]
   378f4:	sub	w1, w1, #0x1
   378f8:	ldp	x21, x22, [sp, #32]
   378fc:	ldp	x23, x24, [sp, #48]
   37900:	ldp	x25, x26, [sp, #64]
   37904:	str	x0, [x19, #328]
   37908:	ldr	w0, [x19, #308]
   3790c:	str	w1, [x20, #4]
   37910:	sub	w0, w0, #0x1
   37914:	str	w0, [x19, #308]
   37918:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3791c:	ldr	x20, [x24, #8]
   37920:	cbz	x20, 3865c <__asan_backtrace_create_state@@Base+0x4a74>
   37924:	ldr	w0, [x20, #4]
   37928:	cmp	w0, #0x1
   3792c:	b.gt	3865c <__asan_backtrace_create_state@@Base+0x4a74>
   37930:	ldr	w1, [x19, #308]
   37934:	cmp	w1, #0x400
   37938:	b.gt	3865c <__asan_backtrace_create_state@@Base+0x4a74>
   3793c:	ldr	x3, [x19, #328]
   37940:	add	w0, w0, #0x1
   37944:	str	w0, [x20, #4]
   37948:	add	w1, w1, #0x1
   3794c:	add	x0, sp, #0x90
   37950:	str	w1, [x19, #308]
   37954:	str	x0, [x19, #328]
   37958:	mov	w1, w22
   3795c:	mov	x0, x19
   37960:	mov	x2, x20
   37964:	stp	x20, x3, [sp, #144]
   37968:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3796c:	ldr	w1, [x20, #4]
   37970:	ldr	x0, [sp, #152]
   37974:	sub	w1, w1, #0x1
   37978:	ldp	x21, x22, [sp, #32]
   3797c:	ldp	x23, x24, [sp, #48]
   37980:	ldp	x25, x26, [sp, #64]
   37984:	str	x0, [x19, #328]
   37988:	ldr	w0, [x19, #308]
   3798c:	str	w1, [x20, #4]
   37990:	sub	w0, w0, #0x1
   37994:	str	w0, [x19, #308]
   37998:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3799c:	ldr	x20, [x24, #16]
   379a0:	cbz	x20, 385bc <__asan_backtrace_create_state@@Base+0x49d4>
   379a4:	ldr	w0, [x20, #4]
   379a8:	cmp	w0, #0x1
   379ac:	b.gt	385bc <__asan_backtrace_create_state@@Base+0x49d4>
   379b0:	ldr	w1, [x19, #308]
   379b4:	cmp	w1, #0x400
   379b8:	b.gt	385bc <__asan_backtrace_create_state@@Base+0x49d4>
   379bc:	ldr	x3, [x19, #328]
   379c0:	add	w0, w0, #0x1
   379c4:	str	w0, [x20, #4]
   379c8:	add	w1, w1, #0x1
   379cc:	add	x0, sp, #0x90
   379d0:	str	w1, [x19, #308]
   379d4:	str	x0, [x19, #328]
   379d8:	mov	w1, w22
   379dc:	mov	x0, x19
   379e0:	mov	x2, x20
   379e4:	stp	x20, x3, [sp, #144]
   379e8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   379ec:	ldr	w1, [x20, #4]
   379f0:	ldr	x0, [sp, #152]
   379f4:	str	x0, [x19, #328]
   379f8:	ldr	w0, [x19, #308]
   379fc:	sub	w1, w1, #0x1
   37a00:	str	w1, [x20, #4]
   37a04:	sub	w0, w0, #0x1
   37a08:	str	w0, [x19, #308]
   37a0c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   37a10:	add	x20, x20, #0xd70
   37a14:	mov	x0, x20
   37a18:	bl	67e0 <__asan_internal_strlen@plt>
   37a1c:	cbz	x0, 37a9c <__asan_backtrace_create_state@@Base+0x3eb4>
   37a20:	add	x23, x20, x0
   37a24:	mov	x25, #0x1                   	// #1
   37a28:	ldr	x1, [x19, #256]
   37a2c:	b	37a88 <__asan_backtrace_create_state@@Base+0x3ea0>
   37a30:	ldp	x3, x2, [x19, #272]
   37a34:	strb	wzr, [x19, #255]
   37a38:	mov	x0, x19
   37a3c:	add	x20, x20, #0x1
   37a40:	blr	x3
   37a44:	strb	w21, [x19]
   37a48:	ldr	x0, [x19, #320]
   37a4c:	str	x25, [x19, #256]
   37a50:	strb	w21, [x19, #264]
   37a54:	cmp	x23, x20
   37a58:	add	x0, x0, #0x1
   37a5c:	str	x0, [x19, #320]
   37a60:	b.eq	37a9c <__asan_backtrace_create_state@@Base+0x3eb4>  // b.none
   37a64:	ldrb	w21, [x20]
   37a68:	mov	x0, #0x1                   	// #1
   37a6c:	add	x1, x0, #0x1
   37a70:	str	x1, [x19, #256]
   37a74:	strb	w21, [x19, x0]
   37a78:	add	x20, x20, #0x1
   37a7c:	strb	w21, [x19, #264]
   37a80:	cmp	x23, x20
   37a84:	b.eq	37a9c <__asan_backtrace_create_state@@Base+0x3eb4>  // b.none
   37a88:	ldrb	w21, [x20]
   37a8c:	cmp	x1, #0xff
   37a90:	b.eq	37a30 <__asan_backtrace_create_state@@Base+0x3e48>  // b.none
   37a94:	mov	x0, x1
   37a98:	b	37a6c <__asan_backtrace_create_state@@Base+0x3e84>
   37a9c:	ldr	x20, [x24, #8]
   37aa0:	cbz	x20, 3868c <__asan_backtrace_create_state@@Base+0x4aa4>
   37aa4:	ldr	w0, [x20, #4]
   37aa8:	cmp	w0, #0x1
   37aac:	b.gt	3868c <__asan_backtrace_create_state@@Base+0x4aa4>
   37ab0:	ldr	w1, [x19, #308]
   37ab4:	cmp	w1, #0x400
   37ab8:	b.gt	3868c <__asan_backtrace_create_state@@Base+0x4aa4>
   37abc:	ldr	x3, [x19, #328]
   37ac0:	add	w0, w0, #0x1
   37ac4:	str	w0, [x20, #4]
   37ac8:	add	w1, w1, #0x1
   37acc:	add	x0, sp, #0x90
   37ad0:	str	w1, [x19, #308]
   37ad4:	str	x0, [x19, #328]
   37ad8:	mov	w1, w22
   37adc:	mov	x0, x19
   37ae0:	mov	x2, x20
   37ae4:	stp	x20, x3, [sp, #144]
   37ae8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37aec:	ldr	w1, [x20, #4]
   37af0:	ldr	x0, [sp, #152]
   37af4:	sub	w1, w1, #0x1
   37af8:	ldp	x21, x22, [sp, #32]
   37afc:	ldp	x23, x24, [sp, #48]
   37b00:	ldp	x25, x26, [sp, #64]
   37b04:	str	x0, [x19, #328]
   37b08:	ldr	w0, [x19, #308]
   37b0c:	str	w1, [x20, #4]
   37b10:	sub	w0, w0, #0x1
   37b14:	str	w0, [x19, #308]
   37b18:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37b1c:	ldr	x20, [x24, #8]
   37b20:	cbz	x20, 387b0 <__asan_backtrace_create_state@@Base+0x4bc8>
   37b24:	ldr	w0, [x20, #4]
   37b28:	cmp	w0, #0x1
   37b2c:	b.gt	387b0 <__asan_backtrace_create_state@@Base+0x4bc8>
   37b30:	ldr	w1, [x19, #308]
   37b34:	cmp	w1, #0x400
   37b38:	b.gt	387b0 <__asan_backtrace_create_state@@Base+0x4bc8>
   37b3c:	ldr	x3, [x19, #328]
   37b40:	add	w0, w0, #0x1
   37b44:	str	w0, [x20, #4]
   37b48:	add	w1, w1, #0x1
   37b4c:	add	x0, sp, #0x90
   37b50:	str	w1, [x19, #308]
   37b54:	str	x0, [x19, #328]
   37b58:	mov	w1, w22
   37b5c:	mov	x0, x19
   37b60:	mov	x2, x20
   37b64:	stp	x20, x3, [sp, #144]
   37b68:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37b6c:	ldr	w1, [x20, #4]
   37b70:	ldr	x0, [sp, #152]
   37b74:	sub	w1, w1, #0x1
   37b78:	ldp	x21, x22, [sp, #32]
   37b7c:	ldp	x23, x24, [sp, #48]
   37b80:	ldp	x25, x26, [sp, #64]
   37b84:	str	x0, [x19, #328]
   37b88:	ldr	w0, [x19, #308]
   37b8c:	str	w1, [x20, #4]
   37b90:	sub	w0, w0, #0x1
   37b94:	str	w0, [x19, #308]
   37b98:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37b9c:	ldr	x2, [x24, #8]
   37ba0:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   37ba4:	add	x1, x1, #0x160
   37ba8:	add	x20, sp, #0x90
   37bac:	add	w2, w2, #0x1
   37bb0:	mov	x0, x20
   37bb4:	bl	6900 <sprintf@plt>
   37bb8:	mov	x0, x20
   37bbc:	bl	67e0 <__asan_internal_strlen@plt>
   37bc0:	cbz	x0, 389a8 <__asan_backtrace_create_state@@Base+0x4dc0>
   37bc4:	add	x22, x20, x0
   37bc8:	mov	x23, #0x1                   	// #1
   37bcc:	ldr	x1, [x19, #256]
   37bd0:	b	37c2c <__asan_backtrace_create_state@@Base+0x4044>
   37bd4:	ldp	x3, x2, [x19, #272]
   37bd8:	strb	wzr, [x19, #255]
   37bdc:	mov	x0, x19
   37be0:	add	x20, x20, #0x1
   37be4:	blr	x3
   37be8:	strb	w21, [x19]
   37bec:	ldr	x0, [x19, #320]
   37bf0:	str	x23, [x19, #256]
   37bf4:	strb	w21, [x19, #264]
   37bf8:	cmp	x20, x22
   37bfc:	add	x0, x0, #0x1
   37c00:	str	x0, [x19, #320]
   37c04:	b.eq	38a48 <__asan_backtrace_create_state@@Base+0x4e60>  // b.none
   37c08:	ldrb	w21, [x20]
   37c0c:	mov	x0, #0x1                   	// #1
   37c10:	add	x1, x0, #0x1
   37c14:	str	x1, [x19, #256]
   37c18:	strb	w21, [x19, x0]
   37c1c:	add	x20, x20, #0x1
   37c20:	strb	w21, [x19, #264]
   37c24:	cmp	x22, x20
   37c28:	b.eq	389ac <__asan_backtrace_create_state@@Base+0x4dc4>  // b.none
   37c2c:	ldrb	w21, [x20]
   37c30:	cmp	x1, #0xff
   37c34:	b.eq	37bd4 <__asan_backtrace_create_state@@Base+0x3fec>  // b.none
   37c38:	mov	x0, x1
   37c3c:	b	37c10 <__asan_backtrace_create_state@@Base+0x4028>
   37c40:	ldr	x20, [x24, #8]
   37c44:	cbz	x20, 386a4 <__asan_backtrace_create_state@@Base+0x4abc>
   37c48:	ldr	w0, [x20, #4]
   37c4c:	cmp	w0, #0x1
   37c50:	b.gt	386a4 <__asan_backtrace_create_state@@Base+0x4abc>
   37c54:	ldr	w1, [x19, #308]
   37c58:	cmp	w1, #0x400
   37c5c:	b.gt	386a4 <__asan_backtrace_create_state@@Base+0x4abc>
   37c60:	ldr	x3, [x19, #328]
   37c64:	add	w0, w0, #0x1
   37c68:	str	w0, [x20, #4]
   37c6c:	add	w1, w1, #0x1
   37c70:	add	x0, sp, #0x90
   37c74:	str	w1, [x19, #308]
   37c78:	str	x0, [x19, #328]
   37c7c:	mov	w1, w22
   37c80:	mov	x0, x19
   37c84:	mov	x2, x20
   37c88:	stp	x20, x3, [sp, #144]
   37c8c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37c90:	ldr	w1, [x20, #4]
   37c94:	ldr	x0, [sp, #152]
   37c98:	sub	w1, w1, #0x1
   37c9c:	ldp	x21, x22, [sp, #32]
   37ca0:	ldp	x23, x24, [sp, #48]
   37ca4:	ldp	x25, x26, [sp, #64]
   37ca8:	str	x0, [x19, #328]
   37cac:	ldr	w0, [x19, #308]
   37cb0:	str	w1, [x20, #4]
   37cb4:	sub	w0, w0, #0x1
   37cb8:	str	w0, [x19, #308]
   37cbc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37cc0:	ldr	x20, [x24, #8]
   37cc4:	cbz	x20, 386d4 <__asan_backtrace_create_state@@Base+0x4aec>
   37cc8:	ldr	w0, [x20, #4]
   37ccc:	cmp	w0, #0x1
   37cd0:	b.gt	386d4 <__asan_backtrace_create_state@@Base+0x4aec>
   37cd4:	ldr	w1, [x19, #308]
   37cd8:	cmp	w1, #0x400
   37cdc:	b.gt	386d4 <__asan_backtrace_create_state@@Base+0x4aec>
   37ce0:	ldr	x3, [x19, #328]
   37ce4:	add	w0, w0, #0x1
   37ce8:	str	w0, [x20, #4]
   37cec:	add	w1, w1, #0x1
   37cf0:	add	x0, sp, #0x90
   37cf4:	str	w1, [x19, #308]
   37cf8:	str	x0, [x19, #328]
   37cfc:	mov	w1, w22
   37d00:	mov	x0, x19
   37d04:	mov	x2, x20
   37d08:	stp	x20, x3, [sp, #144]
   37d0c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37d10:	ldr	w1, [x20, #4]
   37d14:	ldr	x0, [sp, #152]
   37d18:	sub	w1, w1, #0x1
   37d1c:	ldp	x21, x22, [sp, #32]
   37d20:	ldp	x23, x24, [sp, #48]
   37d24:	ldp	x25, x26, [sp, #64]
   37d28:	str	x0, [x19, #328]
   37d2c:	ldr	w0, [x19, #308]
   37d30:	str	w1, [x20, #4]
   37d34:	sub	w0, w0, #0x1
   37d38:	str	w0, [x19, #308]
   37d3c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37d40:	ldr	x20, [x24, #16]
   37d44:	cbz	x20, 38780 <__asan_backtrace_create_state@@Base+0x4b98>
   37d48:	ldr	w0, [x20, #4]
   37d4c:	cmp	w0, #0x1
   37d50:	b.gt	38780 <__asan_backtrace_create_state@@Base+0x4b98>
   37d54:	ldr	w1, [x19, #308]
   37d58:	cmp	w1, #0x400
   37d5c:	b.gt	38780 <__asan_backtrace_create_state@@Base+0x4b98>
   37d60:	ldr	x3, [x19, #328]
   37d64:	add	w0, w0, #0x1
   37d68:	str	w0, [x20, #4]
   37d6c:	add	w1, w1, #0x1
   37d70:	add	x0, sp, #0x90
   37d74:	str	w1, [x19, #308]
   37d78:	str	x0, [x19, #328]
   37d7c:	mov	w1, w22
   37d80:	mov	x0, x19
   37d84:	mov	x2, x20
   37d88:	stp	x20, x3, [sp, #144]
   37d8c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37d90:	ldr	w1, [x20, #4]
   37d94:	ldr	x0, [sp, #152]
   37d98:	str	x0, [x19, #328]
   37d9c:	ldr	w0, [x19, #308]
   37da0:	sub	w1, w1, #0x1
   37da4:	str	w1, [x20, #4]
   37da8:	sub	w0, w0, #0x1
   37dac:	str	w0, [x19, #308]
   37db0:	ldr	x1, [x19, #256]
   37db4:	add	x0, x1, #0x1
   37db8:	cmp	x1, #0xff
   37dbc:	b.ne	37de4 <__asan_backtrace_create_state@@Base+0x41fc>  // b.any
   37dc0:	ldp	x3, x2, [x19, #272]
   37dc4:	strb	wzr, [x19, #255]
   37dc8:	mov	x0, x19
   37dcc:	blr	x3
   37dd0:	ldr	x2, [x19, #320]
   37dd4:	mov	x0, #0x1                   	// #1
   37dd8:	mov	x1, #0x0                   	// #0
   37ddc:	add	x2, x2, x0
   37de0:	str	x2, [x19, #320]
   37de4:	str	x0, [x19, #256]
   37de8:	mov	w0, #0x5d                  	// #93
   37dec:	strb	w0, [x19, x1]
   37df0:	strb	w0, [x19, #264]
   37df4:	ldp	x21, x22, [sp, #32]
   37df8:	ldp	x23, x24, [sp, #48]
   37dfc:	ldp	x25, x26, [sp, #64]
   37e00:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37e04:	ldr	x20, [x24, #8]
   37e08:	cbz	x20, 3878c <__asan_backtrace_create_state@@Base+0x4ba4>
   37e0c:	ldr	w0, [x20, #4]
   37e10:	cmp	w0, #0x1
   37e14:	b.gt	3878c <__asan_backtrace_create_state@@Base+0x4ba4>
   37e18:	ldr	w1, [x19, #308]
   37e1c:	cmp	w1, #0x400
   37e20:	b.gt	3878c <__asan_backtrace_create_state@@Base+0x4ba4>
   37e24:	ldr	x3, [x19, #328]
   37e28:	add	w0, w0, #0x1
   37e2c:	str	w0, [x20, #4]
   37e30:	add	w1, w1, #0x1
   37e34:	add	x0, sp, #0x90
   37e38:	str	w1, [x19, #308]
   37e3c:	str	x0, [x19, #328]
   37e40:	mov	w1, w22
   37e44:	mov	x0, x19
   37e48:	mov	x2, x20
   37e4c:	stp	x20, x3, [sp, #144]
   37e50:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37e54:	ldr	w1, [x20, #4]
   37e58:	ldr	x0, [sp, #152]
   37e5c:	sub	w1, w1, #0x1
   37e60:	ldp	x21, x22, [sp, #32]
   37e64:	ldp	x23, x24, [sp, #48]
   37e68:	ldp	x25, x26, [sp, #64]
   37e6c:	str	x0, [x19, #328]
   37e70:	ldr	w0, [x19, #308]
   37e74:	str	w1, [x20, #4]
   37e78:	sub	w0, w0, #0x1
   37e7c:	str	w0, [x19, #308]
   37e80:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37e84:	ldr	x20, [x24, #16]
   37e88:	cbz	x20, 38768 <__asan_backtrace_create_state@@Base+0x4b80>
   37e8c:	ldr	w0, [x20, #4]
   37e90:	cmp	w0, #0x1
   37e94:	b.gt	38768 <__asan_backtrace_create_state@@Base+0x4b80>
   37e98:	ldr	w1, [x19, #308]
   37e9c:	cmp	w1, #0x400
   37ea0:	b.gt	38768 <__asan_backtrace_create_state@@Base+0x4b80>
   37ea4:	ldr	x3, [x19, #328]
   37ea8:	add	w0, w0, #0x1
   37eac:	str	w0, [x20, #4]
   37eb0:	add	w1, w1, #0x1
   37eb4:	add	x0, sp, #0x90
   37eb8:	str	w1, [x19, #308]
   37ebc:	str	x0, [x19, #328]
   37ec0:	mov	w1, w22
   37ec4:	mov	x0, x19
   37ec8:	mov	x2, x20
   37ecc:	stp	x20, x3, [sp, #144]
   37ed0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37ed4:	ldr	w1, [x20, #4]
   37ed8:	ldr	x0, [sp, #152]
   37edc:	sub	w1, w1, #0x1
   37ee0:	ldp	x21, x22, [sp, #32]
   37ee4:	ldp	x23, x24, [sp, #48]
   37ee8:	ldp	x25, x26, [sp, #64]
   37eec:	str	x0, [x19, #328]
   37ef0:	ldr	w0, [x19, #308]
   37ef4:	str	w1, [x20, #4]
   37ef8:	sub	w0, w0, #0x1
   37efc:	str	w0, [x19, #308]
   37f00:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37f04:	ldr	x20, [x24, #8]
   37f08:	cbz	x20, 387c8 <__asan_backtrace_create_state@@Base+0x4be0>
   37f0c:	ldr	w0, [x20, #4]
   37f10:	cmp	w0, #0x1
   37f14:	b.gt	387c8 <__asan_backtrace_create_state@@Base+0x4be0>
   37f18:	ldr	w1, [x19, #308]
   37f1c:	cmp	w1, #0x400
   37f20:	b.gt	387c8 <__asan_backtrace_create_state@@Base+0x4be0>
   37f24:	ldr	x3, [x19, #328]
   37f28:	add	w0, w0, #0x1
   37f2c:	str	w0, [x20, #4]
   37f30:	add	w1, w1, #0x1
   37f34:	add	x0, sp, #0x90
   37f38:	str	w1, [x19, #308]
   37f3c:	str	x0, [x19, #328]
   37f40:	mov	w1, w22
   37f44:	mov	x0, x19
   37f48:	mov	x2, x20
   37f4c:	stp	x20, x3, [sp, #144]
   37f50:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37f54:	ldr	w1, [x20, #4]
   37f58:	ldr	x0, [sp, #152]
   37f5c:	sub	w1, w1, #0x1
   37f60:	ldp	x21, x22, [sp, #32]
   37f64:	ldp	x23, x24, [sp, #48]
   37f68:	ldp	x25, x26, [sp, #64]
   37f6c:	str	x0, [x19, #328]
   37f70:	ldr	w0, [x19, #308]
   37f74:	str	w1, [x20, #4]
   37f78:	sub	w0, w0, #0x1
   37f7c:	str	w0, [x19, #308]
   37f80:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   37f84:	ldr	x20, [x24, #8]
   37f88:	cbz	x20, 386ec <__asan_backtrace_create_state@@Base+0x4b04>
   37f8c:	ldr	w0, [x20, #4]
   37f90:	cmp	w0, #0x1
   37f94:	b.gt	386ec <__asan_backtrace_create_state@@Base+0x4b04>
   37f98:	ldr	w1, [x19, #308]
   37f9c:	cmp	w1, #0x400
   37fa0:	b.gt	386ec <__asan_backtrace_create_state@@Base+0x4b04>
   37fa4:	ldr	x3, [x19, #328]
   37fa8:	add	w0, w0, #0x1
   37fac:	str	w0, [x20, #4]
   37fb0:	add	w1, w1, #0x1
   37fb4:	add	x0, sp, #0x90
   37fb8:	str	w1, [x19, #308]
   37fbc:	str	x0, [x19, #328]
   37fc0:	mov	w1, w22
   37fc4:	mov	x0, x19
   37fc8:	mov	x2, x20
   37fcc:	stp	x20, x3, [sp, #144]
   37fd0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   37fd4:	ldr	w1, [x20, #4]
   37fd8:	ldr	x0, [sp, #152]
   37fdc:	sub	w1, w1, #0x1
   37fe0:	ldp	x21, x22, [sp, #32]
   37fe4:	ldp	x23, x24, [sp, #48]
   37fe8:	ldp	x25, x26, [sp, #64]
   37fec:	str	x0, [x19, #328]
   37ff0:	ldr	w0, [x19, #308]
   37ff4:	str	w1, [x20, #4]
   37ff8:	sub	w0, w0, #0x1
   37ffc:	str	w0, [x19, #308]
   38000:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38004:	ldr	x20, [x24, #8]
   38008:	cbz	x20, 387a4 <__asan_backtrace_create_state@@Base+0x4bbc>
   3800c:	ldr	w0, [x20, #4]
   38010:	cmp	w0, #0x1
   38014:	b.gt	387a4 <__asan_backtrace_create_state@@Base+0x4bbc>
   38018:	ldr	w1, [x19, #308]
   3801c:	cmp	w1, #0x400
   38020:	b.gt	387a4 <__asan_backtrace_create_state@@Base+0x4bbc>
   38024:	ldr	x3, [x19, #328]
   38028:	add	w0, w0, #0x1
   3802c:	str	w0, [x20, #4]
   38030:	add	w1, w1, #0x1
   38034:	add	x0, sp, #0x90
   38038:	str	w1, [x19, #308]
   3803c:	str	x0, [x19, #328]
   38040:	mov	w1, w22
   38044:	mov	x0, x19
   38048:	mov	x2, x20
   3804c:	stp	x20, x3, [sp, #144]
   38050:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   38054:	ldr	w1, [x20, #4]
   38058:	ldr	x0, [sp, #152]
   3805c:	str	x0, [x19, #328]
   38060:	ldr	w0, [x19, #308]
   38064:	sub	w1, w1, #0x1
   38068:	str	w1, [x20, #4]
   3806c:	sub	w0, w0, #0x1
   38070:	str	w0, [x19, #308]
   38074:	ldr	x1, [x19, #256]
   38078:	add	x0, x1, #0x1
   3807c:	cmp	x1, #0xff
   38080:	b.ne	380a8 <__asan_backtrace_create_state@@Base+0x44c0>  // b.any
   38084:	ldp	x3, x2, [x19, #272]
   38088:	strb	wzr, [x19, #255]
   3808c:	mov	x0, x19
   38090:	blr	x3
   38094:	ldr	x2, [x19, #320]
   38098:	mov	x0, #0x1                   	// #1
   3809c:	mov	x1, #0x0                   	// #0
   380a0:	add	x2, x2, x0
   380a4:	str	x2, [x19, #320]
   380a8:	str	x0, [x19, #256]
   380ac:	mov	w0, #0x29                  	// #41
   380b0:	strb	w0, [x19, x1]
   380b4:	strb	w0, [x19, #264]
   380b8:	ldp	x21, x22, [sp, #32]
   380bc:	ldp	x23, x24, [sp, #48]
   380c0:	ldp	x25, x26, [sp, #64]
   380c4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   380c8:	ldr	w0, [x19, #312]
   380cc:	ldr	x20, [x24, #8]
   380d0:	add	w1, w0, #0x1
   380d4:	str	w1, [x19, #312]
   380d8:	cbz	x20, 38740 <__asan_backtrace_create_state@@Base+0x4b58>
   380dc:	ldr	w1, [x20, #4]
   380e0:	cmp	w1, #0x1
   380e4:	b.gt	38740 <__asan_backtrace_create_state@@Base+0x4b58>
   380e8:	ldr	w2, [x19, #308]
   380ec:	cmp	w2, #0x400
   380f0:	b.gt	38740 <__asan_backtrace_create_state@@Base+0x4b58>
   380f4:	ldr	x3, [x19, #328]
   380f8:	add	w1, w1, #0x1
   380fc:	str	w1, [x20, #4]
   38100:	add	w2, w2, #0x1
   38104:	add	x21, sp, #0x90
   38108:	str	w2, [x19, #308]
   3810c:	str	x21, [x19, #328]
   38110:	mov	x0, x19
   38114:	mov	w1, w22
   38118:	mov	x2, x20
   3811c:	stp	x20, x3, [sp, #144]
   38120:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   38124:	ldr	w2, [x20, #4]
   38128:	ldr	x0, [sp, #152]
   3812c:	str	x0, [x19, #328]
   38130:	ldr	w0, [x19, #312]
   38134:	sub	w2, w2, #0x1
   38138:	ldr	w1, [x19, #308]
   3813c:	sub	w0, w0, #0x1
   38140:	str	w2, [x20, #4]
   38144:	sub	w1, w1, #0x1
   38148:	str	w1, [x19, #308]
   3814c:	str	w0, [x19, #312]
   38150:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   38154:	add	x20, x20, #0xfe0
   38158:	mov	x0, x20
   3815c:	bl	67e0 <__asan_internal_strlen@plt>
   38160:	cbz	x0, 381e0 <__asan_backtrace_create_state@@Base+0x45f8>
   38164:	add	x23, x20, x0
   38168:	mov	x25, #0x1                   	// #1
   3816c:	ldr	x1, [x19, #256]
   38170:	b	381cc <__asan_backtrace_create_state@@Base+0x45e4>
   38174:	ldp	x3, x2, [x19, #272]
   38178:	strb	wzr, [x19, #255]
   3817c:	mov	x0, x19
   38180:	add	x20, x20, #0x1
   38184:	blr	x3
   38188:	strb	w22, [x19]
   3818c:	ldr	x0, [x19, #320]
   38190:	str	x25, [x19, #256]
   38194:	strb	w22, [x19, #264]
   38198:	cmp	x20, x23
   3819c:	add	x0, x0, #0x1
   381a0:	str	x0, [x19, #320]
   381a4:	b.eq	381e0 <__asan_backtrace_create_state@@Base+0x45f8>  // b.none
   381a8:	ldrb	w22, [x20]
   381ac:	mov	x0, #0x1                   	// #1
   381b0:	add	x1, x0, #0x1
   381b4:	str	x1, [x19, #256]
   381b8:	strb	w22, [x19, x0]
   381bc:	add	x20, x20, #0x1
   381c0:	strb	w22, [x19, #264]
   381c4:	cmp	x23, x20
   381c8:	b.eq	381e0 <__asan_backtrace_create_state@@Base+0x45f8>  // b.none
   381cc:	ldrb	w22, [x20]
   381d0:	cmp	x1, #0xff
   381d4:	b.eq	38174 <__asan_backtrace_create_state@@Base+0x458c>  // b.none
   381d8:	mov	x0, x1
   381dc:	b	381b0 <__asan_backtrace_create_state@@Base+0x45c8>
   381e0:	ldr	w2, [x24, #16]
   381e4:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   381e8:	add	x1, x1, #0x160
   381ec:	mov	x0, x21
   381f0:	add	w2, w2, #0x1
   381f4:	bl	6900 <sprintf@plt>
   381f8:	mov	x0, x21
   381fc:	bl	67e0 <__asan_internal_strlen@plt>
   38200:	cbz	x0, 389f8 <__asan_backtrace_create_state@@Base+0x4e10>
   38204:	add	x22, x21, x0
   38208:	mov	x23, #0x1                   	// #1
   3820c:	ldr	x1, [x19, #256]
   38210:	b	3826c <__asan_backtrace_create_state@@Base+0x4684>
   38214:	ldp	x3, x2, [x19, #272]
   38218:	strb	wzr, [x19, #255]
   3821c:	mov	x0, x19
   38220:	add	x21, x21, #0x1
   38224:	blr	x3
   38228:	strb	w20, [x19]
   3822c:	ldr	x0, [x19, #320]
   38230:	str	x23, [x19, #256]
   38234:	strb	w20, [x19, #264]
   38238:	cmp	x21, x22
   3823c:	add	x0, x0, #0x1
   38240:	str	x0, [x19, #320]
   38244:	b.eq	38a54 <__asan_backtrace_create_state@@Base+0x4e6c>  // b.none
   38248:	ldrb	w20, [x21]
   3824c:	mov	x0, #0x1                   	// #1
   38250:	add	x1, x0, #0x1
   38254:	str	x1, [x19, #256]
   38258:	strb	w20, [x19, x0]
   3825c:	add	x21, x21, #0x1
   38260:	strb	w20, [x19, #264]
   38264:	cmp	x21, x22
   38268:	b.eq	389fc <__asan_backtrace_create_state@@Base+0x4e14>  // b.none
   3826c:	ldrb	w20, [x21]
   38270:	cmp	x1, #0xff
   38274:	b.eq	38214 <__asan_backtrace_create_state@@Base+0x462c>  // b.none
   38278:	mov	x0, x1
   3827c:	b	38250 <__asan_backtrace_create_state@@Base+0x4668>
   38280:	ldr	x20, [x24, #8]
   38284:	cbz	x20, 38750 <__asan_backtrace_create_state@@Base+0x4b68>
   38288:	ldr	w0, [x20, #4]
   3828c:	cmp	w0, #0x1
   38290:	b.gt	38750 <__asan_backtrace_create_state@@Base+0x4b68>
   38294:	ldr	w1, [x19, #308]
   38298:	cmp	w1, #0x400
   3829c:	b.gt	38750 <__asan_backtrace_create_state@@Base+0x4b68>
   382a0:	ldr	x3, [x19, #328]
   382a4:	add	w0, w0, #0x1
   382a8:	str	w0, [x20, #4]
   382ac:	add	w1, w1, #0x1
   382b0:	add	x0, sp, #0x90
   382b4:	str	w1, [x19, #308]
   382b8:	str	x0, [x19, #328]
   382bc:	mov	w1, w22
   382c0:	mov	x0, x19
   382c4:	mov	x2, x20
   382c8:	stp	x20, x3, [sp, #144]
   382cc:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   382d0:	ldr	w1, [x20, #4]
   382d4:	ldr	x0, [sp, #152]
   382d8:	sub	w1, w1, #0x1
   382dc:	ldp	x21, x22, [sp, #32]
   382e0:	ldp	x23, x24, [sp, #48]
   382e4:	ldp	x25, x26, [sp, #64]
   382e8:	str	x0, [x19, #328]
   382ec:	ldr	w0, [x19, #308]
   382f0:	str	w1, [x20, #4]
   382f4:	sub	w0, w0, #0x1
   382f8:	str	w0, [x19, #308]
   382fc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38300:	ldr	x20, [x24, #8]
   38304:	cbz	x20, 38728 <__asan_backtrace_create_state@@Base+0x4b40>
   38308:	ldr	w0, [x20, #4]
   3830c:	cmp	w0, #0x1
   38310:	b.gt	38728 <__asan_backtrace_create_state@@Base+0x4b40>
   38314:	ldr	w1, [x19, #308]
   38318:	cmp	w1, #0x400
   3831c:	b.gt	38728 <__asan_backtrace_create_state@@Base+0x4b40>
   38320:	ldr	x3, [x19, #328]
   38324:	add	w0, w0, #0x1
   38328:	str	w0, [x20, #4]
   3832c:	add	w1, w1, #0x1
   38330:	add	x0, sp, #0x90
   38334:	str	w1, [x19, #308]
   38338:	str	x0, [x19, #328]
   3833c:	mov	w1, w22
   38340:	mov	x0, x19
   38344:	mov	x2, x20
   38348:	stp	x20, x3, [sp, #144]
   3834c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   38350:	ldr	w1, [x20, #4]
   38354:	ldr	x0, [sp, #152]
   38358:	sub	w1, w1, #0x1
   3835c:	ldp	x21, x22, [sp, #32]
   38360:	ldp	x23, x24, [sp, #48]
   38364:	ldp	x25, x26, [sp, #64]
   38368:	str	x0, [x19, #328]
   3836c:	ldr	w0, [x19, #308]
   38370:	str	w1, [x20, #4]
   38374:	sub	w0, w0, #0x1
   38378:	str	w0, [x19, #308]
   3837c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38380:	ldr	x0, [x19, #368]
   38384:	cbz	x0, 38398 <__asan_backtrace_create_state@@Base+0x47b0>
   38388:	ldr	x2, [x19, #288]
   3838c:	add	x1, sp, #0x80
   38390:	stp	x2, x0, [sp, #128]
   38394:	str	x1, [x19, #288]
   38398:	ldr	x20, [x24, #8]
   3839c:	ldr	w1, [x20]
   383a0:	cmp	w1, #0x4
   383a4:	b.eq	39230 <__asan_backtrace_create_state@@Base+0x5648>  // b.none
   383a8:	ldr	w1, [x20, #4]
   383ac:	cmp	w1, #0x1
   383b0:	b.gt	38b04 <__asan_backtrace_create_state@@Base+0x4f1c>
   383b4:	ldr	w2, [x19, #308]
   383b8:	cmp	w2, #0x400
   383bc:	b.gt	38b04 <__asan_backtrace_create_state@@Base+0x4f1c>
   383c0:	ldr	x3, [x19, #328]
   383c4:	add	w1, w1, #0x1
   383c8:	str	w1, [x20, #4]
   383cc:	add	w2, w2, #0x1
   383d0:	add	x0, sp, #0x90
   383d4:	str	w2, [x19, #308]
   383d8:	str	x0, [x19, #328]
   383dc:	mov	w1, w22
   383e0:	mov	x2, x20
   383e4:	mov	x0, x19
   383e8:	stp	x20, x3, [sp, #144]
   383ec:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   383f0:	ldr	w2, [x20, #4]
   383f4:	ldr	x0, [sp, #152]
   383f8:	str	x0, [x19, #328]
   383fc:	ldr	w1, [x19, #308]
   38400:	sub	w2, w2, #0x1
   38404:	ldr	x0, [x19, #368]
   38408:	str	w2, [x20, #4]
   3840c:	sub	w1, w1, #0x1
   38410:	str	w1, [x19, #308]
   38414:	cbz	x0, 39ab4 <__asan_backtrace_create_state@@Base+0x5ecc>
   38418:	ldr	x0, [sp, #128]
   3841c:	ldp	x21, x22, [sp, #32]
   38420:	ldp	x23, x24, [sp, #48]
   38424:	ldp	x25, x26, [sp, #64]
   38428:	str	x0, [x19, #288]
   3842c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38430:	ldr	x20, [x24, #8]
   38434:	cbz	x20, 387e0 <__asan_backtrace_create_state@@Base+0x4bf8>
   38438:	ldr	w0, [x20, #4]
   3843c:	cmp	w0, #0x1
   38440:	b.gt	387e0 <__asan_backtrace_create_state@@Base+0x4bf8>
   38444:	ldr	w1, [x19, #308]
   38448:	cmp	w1, #0x400
   3844c:	b.gt	387e0 <__asan_backtrace_create_state@@Base+0x4bf8>
   38450:	ldr	x3, [x19, #328]
   38454:	add	w0, w0, #0x1
   38458:	str	w0, [x20, #4]
   3845c:	add	w1, w1, #0x1
   38460:	add	x0, sp, #0x90
   38464:	str	w1, [x19, #308]
   38468:	str	x0, [x19, #328]
   3846c:	mov	w1, w22
   38470:	mov	x0, x19
   38474:	mov	x2, x20
   38478:	stp	x20, x3, [sp, #144]
   3847c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   38480:	ldr	w1, [x20, #4]
   38484:	ldr	x0, [sp, #152]
   38488:	sub	w1, w1, #0x1
   3848c:	ldp	x21, x22, [sp, #32]
   38490:	ldp	x23, x24, [sp, #48]
   38494:	ldp	x25, x26, [sp, #64]
   38498:	str	x0, [x19, #328]
   3849c:	ldr	w0, [x19, #308]
   384a0:	str	w1, [x20, #4]
   384a4:	sub	w0, w0, #0x1
   384a8:	str	w0, [x19, #308]
   384ac:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   384b0:	ldp	x21, x22, [sp, #32]
   384b4:	ldp	x23, x24, [sp, #48]
   384b8:	ldp	x25, x26, [sp, #64]
   384bc:	ldp	x27, x28, [sp, #80]
   384c0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   384c4:	mov	w0, #0x1                   	// #1
   384c8:	str	w0, [x19, #304]
   384cc:	b	377c8 <__asan_backtrace_create_state@@Base+0x3be0>
   384d0:	mov	w0, #0x1                   	// #1
   384d4:	str	w0, [x19, #304]
   384d8:	b	374c8 <__asan_backtrace_create_state@@Base+0x38e0>
   384dc:	mov	w0, #0x1                   	// #1
   384e0:	str	w0, [x19, #304]
   384e4:	b	348e0 <__asan_backtrace_create_state@@Base+0xcf8>
   384e8:	mov	w0, #0x1                   	// #1
   384ec:	ldp	x21, x22, [sp, #32]
   384f0:	ldp	x23, x24, [sp, #48]
   384f4:	ldp	x25, x26, [sp, #64]
   384f8:	str	w0, [x19, #304]
   384fc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38500:	mov	w0, #0x1                   	// #1
   38504:	ldp	x21, x22, [sp, #32]
   38508:	ldp	x23, x24, [sp, #48]
   3850c:	ldp	x25, x26, [sp, #64]
   38510:	str	w0, [x19, #304]
   38514:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38518:	mov	w0, #0x1                   	// #1
   3851c:	ldp	x21, x22, [sp, #32]
   38520:	ldp	x23, x24, [sp, #48]
   38524:	ldp	x25, x26, [sp, #64]
   38528:	str	w0, [x19, #304]
   3852c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38530:	mov	w0, #0x1                   	// #1
   38534:	ldp	x21, x22, [sp, #32]
   38538:	ldp	x23, x24, [sp, #48]
   3853c:	ldp	x25, x26, [sp, #64]
   38540:	str	w0, [x19, #304]
   38544:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38548:	mov	w0, #0x1                   	// #1
   3854c:	ldp	x21, x22, [sp, #32]
   38550:	ldp	x23, x24, [sp, #48]
   38554:	ldp	x25, x26, [sp, #64]
   38558:	str	w0, [x19, #304]
   3855c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38560:	ldr	x23, [x23, #8]
   38564:	cbnz	x23, 34938 <__asan_backtrace_create_state@@Base+0xd50>
   38568:	mov	w0, #0x1                   	// #1
   3856c:	ldp	x21, x22, [sp, #32]
   38570:	ldp	x23, x24, [sp, #48]
   38574:	ldp	x25, x26, [sp, #64]
   38578:	str	w0, [x19, #304]
   3857c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38580:	mov	w1, #0x1                   	// #1
   38584:	str	w1, [x19, #304]
   38588:	b	36f38 <__asan_backtrace_create_state@@Base+0x3350>
   3858c:	mov	w0, #0x1                   	// #1
   38590:	ldp	x21, x22, [sp, #32]
   38594:	ldp	x23, x24, [sp, #48]
   38598:	ldp	x25, x26, [sp, #64]
   3859c:	str	w0, [x19, #304]
   385a0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   385a4:	mov	w0, #0x1                   	// #1
   385a8:	ldp	x21, x22, [sp, #32]
   385ac:	ldp	x23, x24, [sp, #48]
   385b0:	ldp	x25, x26, [sp, #64]
   385b4:	str	w0, [x19, #304]
   385b8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   385bc:	mov	w0, #0x1                   	// #1
   385c0:	str	w0, [x19, #304]
   385c4:	b	37a0c <__asan_backtrace_create_state@@Base+0x3e24>
   385c8:	mov	w0, #0x1                   	// #1
   385cc:	str	w0, [x19, #304]
   385d0:	mov	x2, x24
   385d4:	mov	w1, w22
   385d8:	mov	x0, x19
   385dc:	bl	3b568 <__asan_backtrace_create_state@@Base+0x7980>
   385e0:	b	34a40 <__asan_backtrace_create_state@@Base+0xe58>
   385e4:	mov	w0, #0x1                   	// #1
   385e8:	ldp	x21, x22, [sp, #32]
   385ec:	ldp	x23, x24, [sp, #48]
   385f0:	ldp	x25, x26, [sp, #64]
   385f4:	str	w0, [x19, #304]
   385f8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   385fc:	mov	w0, #0x1                   	// #1
   38600:	ldp	x21, x22, [sp, #32]
   38604:	ldp	x23, x24, [sp, #48]
   38608:	ldp	x25, x26, [sp, #64]
   3860c:	str	w0, [x19, #304]
   38610:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38614:	mov	w0, #0x1                   	// #1
   38618:	ldp	x21, x22, [sp, #32]
   3861c:	ldp	x23, x24, [sp, #48]
   38620:	ldp	x25, x26, [sp, #64]
   38624:	str	w0, [x19, #304]
   38628:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3862c:	mov	w0, #0x1                   	// #1
   38630:	ldp	x21, x22, [sp, #32]
   38634:	ldp	x23, x24, [sp, #48]
   38638:	ldp	x25, x26, [sp, #64]
   3863c:	str	w0, [x19, #304]
   38640:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38644:	mov	w0, #0x1                   	// #1
   38648:	ldp	x21, x22, [sp, #32]
   3864c:	ldp	x23, x24, [sp, #48]
   38650:	ldp	x25, x26, [sp, #64]
   38654:	str	w0, [x19, #304]
   38658:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3865c:	mov	w0, #0x1                   	// #1
   38660:	ldp	x21, x22, [sp, #32]
   38664:	ldp	x23, x24, [sp, #48]
   38668:	ldp	x25, x26, [sp, #64]
   3866c:	str	w0, [x19, #304]
   38670:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38674:	mov	w0, #0x1                   	// #1
   38678:	ldp	x21, x22, [sp, #32]
   3867c:	ldp	x23, x24, [sp, #48]
   38680:	ldp	x25, x26, [sp, #64]
   38684:	str	w0, [x19, #304]
   38688:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3868c:	mov	w0, #0x1                   	// #1
   38690:	ldp	x21, x22, [sp, #32]
   38694:	ldp	x23, x24, [sp, #48]
   38698:	ldp	x25, x26, [sp, #64]
   3869c:	str	w0, [x19, #304]
   386a0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   386a4:	mov	w0, #0x1                   	// #1
   386a8:	ldp	x21, x22, [sp, #32]
   386ac:	ldp	x23, x24, [sp, #48]
   386b0:	ldp	x25, x26, [sp, #64]
   386b4:	str	w0, [x19, #304]
   386b8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   386bc:	mov	w0, #0x1                   	// #1
   386c0:	str	w0, [x19, #304]
   386c4:	b	35978 <__asan_backtrace_create_state@@Base+0x1d90>
   386c8:	mov	w0, #0x1                   	// #1
   386cc:	str	w0, [x19, #304]
   386d0:	b	35a78 <__asan_backtrace_create_state@@Base+0x1e90>
   386d4:	mov	w0, #0x1                   	// #1
   386d8:	ldp	x21, x22, [sp, #32]
   386dc:	ldp	x23, x24, [sp, #48]
   386e0:	ldp	x25, x26, [sp, #64]
   386e4:	str	w0, [x19, #304]
   386e8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   386ec:	mov	w0, #0x1                   	// #1
   386f0:	ldp	x21, x22, [sp, #32]
   386f4:	ldp	x23, x24, [sp, #48]
   386f8:	ldp	x25, x26, [sp, #64]
   386fc:	str	w0, [x19, #304]
   38700:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38704:	mov	w0, #0x1                   	// #1
   38708:	ldp	x21, x22, [sp, #32]
   3870c:	ldp	x23, x24, [sp, #48]
   38710:	ldp	x25, x26, [sp, #64]
   38714:	str	w0, [x19, #304]
   38718:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3871c:	mov	w0, #0x1                   	// #1
   38720:	str	w0, [x19, #304]
   38724:	b	363bc <__asan_backtrace_create_state@@Base+0x27d4>
   38728:	mov	w0, #0x1                   	// #1
   3872c:	ldp	x21, x22, [sp, #32]
   38730:	ldp	x23, x24, [sp, #48]
   38734:	ldp	x25, x26, [sp, #64]
   38738:	str	w0, [x19, #304]
   3873c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38740:	mov	w1, #0x1                   	// #1
   38744:	add	x21, sp, #0x90
   38748:	str	w1, [x19, #304]
   3874c:	b	3814c <__asan_backtrace_create_state@@Base+0x4564>
   38750:	mov	w0, #0x1                   	// #1
   38754:	ldp	x21, x22, [sp, #32]
   38758:	ldp	x23, x24, [sp, #48]
   3875c:	ldp	x25, x26, [sp, #64]
   38760:	str	w0, [x19, #304]
   38764:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38768:	mov	w0, #0x1                   	// #1
   3876c:	ldp	x21, x22, [sp, #32]
   38770:	ldp	x23, x24, [sp, #48]
   38774:	ldp	x25, x26, [sp, #64]
   38778:	str	w0, [x19, #304]
   3877c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38780:	mov	w0, #0x1                   	// #1
   38784:	str	w0, [x19, #304]
   38788:	b	37db0 <__asan_backtrace_create_state@@Base+0x41c8>
   3878c:	mov	w0, #0x1                   	// #1
   38790:	ldp	x21, x22, [sp, #32]
   38794:	ldp	x23, x24, [sp, #48]
   38798:	ldp	x25, x26, [sp, #64]
   3879c:	str	w0, [x19, #304]
   387a0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   387a4:	mov	w0, #0x1                   	// #1
   387a8:	str	w0, [x19, #304]
   387ac:	b	38074 <__asan_backtrace_create_state@@Base+0x448c>
   387b0:	mov	w0, #0x1                   	// #1
   387b4:	ldp	x21, x22, [sp, #32]
   387b8:	ldp	x23, x24, [sp, #48]
   387bc:	ldp	x25, x26, [sp, #64]
   387c0:	str	w0, [x19, #304]
   387c4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   387c8:	mov	w0, #0x1                   	// #1
   387cc:	ldp	x21, x22, [sp, #32]
   387d0:	ldp	x23, x24, [sp, #48]
   387d4:	ldp	x25, x26, [sp, #64]
   387d8:	str	w0, [x19, #304]
   387dc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   387e0:	mov	w0, #0x1                   	// #1
   387e4:	ldp	x21, x22, [sp, #32]
   387e8:	ldp	x23, x24, [sp, #48]
   387ec:	ldp	x25, x26, [sp, #64]
   387f0:	str	w0, [x19, #304]
   387f4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   387f8:	cbnz	x20, 368c0 <__asan_backtrace_create_state@@Base+0x2cd8>
   387fc:	mov	w0, #0x1                   	// #1
   38800:	str	w0, [x19, #304]
   38804:	b	36928 <__asan_backtrace_create_state@@Base+0x2d40>
   38808:	mov	w1, #0x1                   	// #1
   3880c:	str	w1, [x19, #304]
   38810:	b	369f0 <__asan_backtrace_create_state@@Base+0x2e08>
   38814:	mov	w0, #0x1                   	// #1
   38818:	str	w0, [x19, #304]
   3881c:	b	34cec <__asan_backtrace_create_state@@Base+0x1104>
   38820:	ldr	x20, [x22, #8]
   38824:	ldrb	w0, [x20]
   38828:	sub	w0, w0, #0x61
   3882c:	and	w0, w0, #0xff
   38830:	cmp	w0, #0x19
   38834:	b.hi	3887c <__asan_backtrace_create_state@@Base+0x4c94>  // b.pmore
   38838:	ldr	x1, [x19, #256]
   3883c:	cmp	x1, #0xff
   38840:	b.ne	3974c <__asan_backtrace_create_state@@Base+0x5b64>  // b.any
   38844:	ldp	x3, x2, [x19, #272]
   38848:	strb	wzr, [x19, #255]
   3884c:	mov	x0, x19
   38850:	blr	x3
   38854:	ldr	x2, [x19, #320]
   38858:	mov	x0, #0x1                   	// #1
   3885c:	mov	x1, #0x0                   	// #0
   38860:	add	x2, x2, x0
   38864:	ldr	x20, [x22, #8]
   38868:	str	x2, [x19, #320]
   3886c:	str	x0, [x19, #256]
   38870:	mov	w0, #0x20                  	// #32
   38874:	strb	w0, [x19, x1]
   38878:	strb	w0, [x19, #264]
   3887c:	sxtw	x22, w23
   38880:	sub	w0, w23, #0x1
   38884:	add	x1, x20, x22
   38888:	sxtw	x0, w0
   3888c:	ldurb	w1, [x1, #-1]
   38890:	cmp	w1, #0x20
   38894:	csel	x22, x22, x0, ne  // ne = any
   38898:	cbz	x22, 3a658 <__asan_backtrace_create_state@@Base+0x6a70>
   3889c:	add	x22, x20, x22
   388a0:	mov	x23, #0x1                   	// #1
   388a4:	ldr	x1, [x19, #256]
   388a8:	b	38904 <__asan_backtrace_create_state@@Base+0x4d1c>
   388ac:	ldp	x3, x2, [x19, #272]
   388b0:	strb	wzr, [x19, #255]
   388b4:	mov	x0, x19
   388b8:	add	x20, x20, #0x1
   388bc:	blr	x3
   388c0:	strb	w21, [x19]
   388c4:	ldr	x0, [x19, #320]
   388c8:	str	x23, [x19, #256]
   388cc:	strb	w21, [x19, #264]
   388d0:	cmp	x20, x22
   388d4:	add	x0, x0, #0x1
   388d8:	str	x0, [x19, #320]
   388dc:	b.eq	39808 <__asan_backtrace_create_state@@Base+0x5c20>  // b.none
   388e0:	ldrb	w21, [x20]
   388e4:	mov	x0, #0x1                   	// #1
   388e8:	add	x1, x0, #0x1
   388ec:	str	x1, [x19, #256]
   388f0:	strb	w21, [x19, x0]
   388f4:	add	x20, x20, #0x1
   388f8:	strb	w21, [x19, #264]
   388fc:	cmp	x22, x20
   38900:	b.eq	38a8c <__asan_backtrace_create_state@@Base+0x4ea4>  // b.none
   38904:	ldrb	w21, [x20]
   38908:	cmp	x1, #0xff
   3890c:	b.eq	388ac <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   38910:	mov	x0, x1
   38914:	b	388e8 <__asan_backtrace_create_state@@Base+0x4d00>
   38918:	ldr	x23, [x19, #256]
   3891c:	ldr	x20, [x24, #16]
   38920:	cbz	x20, 38ae4 <__asan_backtrace_create_state@@Base+0x4efc>
   38924:	ldr	w0, [x20, #4]
   38928:	cmp	w0, #0x1
   3892c:	b.gt	38ae4 <__asan_backtrace_create_state@@Base+0x4efc>
   38930:	ldr	w1, [x19, #308]
   38934:	cmp	w1, #0x400
   38938:	b.gt	38ae4 <__asan_backtrace_create_state@@Base+0x4efc>
   3893c:	ldp	x21, x3, [x19, #320]
   38940:	add	w0, w0, #0x1
   38944:	str	w0, [x20, #4]
   38948:	add	w1, w1, #0x1
   3894c:	add	x0, sp, #0x90
   38950:	str	w1, [x19, #308]
   38954:	str	x0, [x19, #328]
   38958:	mov	w1, w22
   3895c:	mov	x0, x19
   38960:	mov	x2, x20
   38964:	stp	x20, x3, [sp, #144]
   38968:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3896c:	ldr	w1, [x20, #4]
   38970:	ldr	x0, [sp, #152]
   38974:	sub	w1, w1, #0x1
   38978:	str	x0, [x19, #328]
   3897c:	ldr	w0, [x19, #308]
   38980:	str	w1, [x20, #4]
   38984:	ldr	x1, [x19, #320]
   38988:	sub	w0, w0, #0x1
   3898c:	str	w0, [x19, #308]
   38990:	cmp	x1, x21
   38994:	b.eq	3a370 <__asan_backtrace_create_state@@Base+0x6788>  // b.none
   38998:	ldp	x21, x22, [sp, #32]
   3899c:	ldp	x23, x24, [sp, #48]
   389a0:	ldp	x25, x26, [sp, #64]
   389a4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   389a8:	ldr	x1, [x19, #256]
   389ac:	cmp	x1, #0xff
   389b0:	b.ne	38a4c <__asan_backtrace_create_state@@Base+0x4e64>  // b.any
   389b4:	ldp	x3, x2, [x19, #272]
   389b8:	strb	wzr, [x19, #255]
   389bc:	mov	x0, x19
   389c0:	blr	x3
   389c4:	ldr	x2, [x19, #320]
   389c8:	mov	x0, #0x1                   	// #1
   389cc:	mov	x1, #0x0                   	// #0
   389d0:	add	x2, x2, x0
   389d4:	str	x2, [x19, #320]
   389d8:	str	x0, [x19, #256]
   389dc:	mov	w0, #0x7d                  	// #125
   389e0:	strb	w0, [x19, x1]
   389e4:	strb	w0, [x19, #264]
   389e8:	ldp	x21, x22, [sp, #32]
   389ec:	ldp	x23, x24, [sp, #48]
   389f0:	ldp	x25, x26, [sp, #64]
   389f4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   389f8:	ldr	x1, [x19, #256]
   389fc:	cmp	x1, #0xff
   38a00:	b.ne	38a58 <__asan_backtrace_create_state@@Base+0x4e70>  // b.any
   38a04:	ldp	x3, x2, [x19, #272]
   38a08:	strb	wzr, [x19, #255]
   38a0c:	mov	x0, x19
   38a10:	blr	x3
   38a14:	ldr	x2, [x19, #320]
   38a18:	mov	x0, #0x1                   	// #1
   38a1c:	mov	x1, #0x0                   	// #0
   38a20:	add	x2, x2, x0
   38a24:	str	x2, [x19, #320]
   38a28:	str	x0, [x19, #256]
   38a2c:	mov	w0, #0x7d                  	// #125
   38a30:	strb	w0, [x19, x1]
   38a34:	strb	w0, [x19, #264]
   38a38:	ldp	x21, x22, [sp, #32]
   38a3c:	ldp	x23, x24, [sp, #48]
   38a40:	ldp	x25, x26, [sp, #64]
   38a44:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38a48:	mov	x1, #0x1                   	// #1
   38a4c:	add	x0, x1, #0x1
   38a50:	b	389d8 <__asan_backtrace_create_state@@Base+0x4df0>
   38a54:	mov	x1, #0x1                   	// #1
   38a58:	add	x0, x1, #0x1
   38a5c:	b	38a28 <__asan_backtrace_create_state@@Base+0x4e40>
   38a60:	mov	w1, w22
   38a64:	mov	x2, x20
   38a68:	mov	x0, x19
   38a6c:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   38a70:	ldp	x21, x22, [sp, #32]
   38a74:	ldp	x23, x24, [sp, #48]
   38a78:	ldp	x25, x26, [sp, #64]
   38a7c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38a80:	mov	w0, #0x1                   	// #1
   38a84:	str	w0, [x19, #304]
   38a88:	b	35180 <__asan_backtrace_create_state@@Base+0x1598>
   38a8c:	ldp	x21, x22, [sp, #32]
   38a90:	ldp	x23, x24, [sp, #48]
   38a94:	ldp	x25, x26, [sp, #64]
   38a98:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38a9c:	ldp	x21, x22, [sp, #32]
   38aa0:	ldp	x23, x24, [sp, #48]
   38aa4:	ldp	x25, x26, [sp, #64]
   38aa8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38aac:	ldr	x28, [x24, #8]
   38ab0:	cbnz	w23, 357ec <__asan_backtrace_create_state@@Base+0x1c04>
   38ab4:	ldp	x21, x22, [sp, #32]
   38ab8:	ldp	x23, x24, [sp, #48]
   38abc:	ldp	x25, x26, [sp, #64]
   38ac0:	ldp	x27, x28, [sp, #80]
   38ac4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38ac8:	ldp	x21, x22, [sp, #32]
   38acc:	ldp	x23, x24, [sp, #48]
   38ad0:	ldp	x25, x26, [sp, #64]
   38ad4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38ad8:	mov	x24, x0
   38adc:	ldr	x25, [x0, #8]
   38ae0:	b	34858 <__asan_backtrace_create_state@@Base+0xc70>
   38ae4:	mov	w0, #0x1                   	// #1
   38ae8:	str	w0, [x19, #304]
   38aec:	sub	x23, x23, #0x2
   38af0:	ldp	x21, x22, [sp, #32]
   38af4:	ldp	x25, x26, [sp, #64]
   38af8:	str	x23, [x19, #256]
   38afc:	ldp	x23, x24, [sp, #48]
   38b00:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38b04:	mov	w1, #0x1                   	// #1
   38b08:	str	w1, [x19, #304]
   38b0c:	b	38414 <__asan_backtrace_create_state@@Base+0x482c>
   38b10:	add	x21, x20, x21
   38b14:	cmp	x21, x20
   38b18:	b.ls	3a98c <__asan_backtrace_create_state@@Base+0x6da4>  // b.plast
   38b1c:	mov	w23, #0x5f                  	// #95
   38b20:	ldr	x1, [x19, #256]
   38b24:	b	38b48 <__asan_backtrace_create_state@@Base+0x4f60>
   38b28:	mov	x0, x1
   38b2c:	add	x1, x1, #0x1
   38b30:	str	x1, [x19, #256]
   38b34:	strb	w22, [x19, x0]
   38b38:	strb	w22, [x19, #264]
   38b3c:	add	x20, x20, #0x1
   38b40:	cmp	x21, x20
   38b44:	b.ls	38f78 <__asan_backtrace_create_state@@Base+0x5390>  // b.plast
   38b48:	sub	x0, x21, x20
   38b4c:	ldrb	w22, [x20]
   38b50:	cmp	x0, #0x3
   38b54:	b.le	38b60 <__asan_backtrace_create_state@@Base+0x4f78>
   38b58:	cmp	w22, #0x5f
   38b5c:	b.eq	38b90 <__asan_backtrace_create_state@@Base+0x4fa8>  // b.none
   38b60:	cmp	x1, #0xff
   38b64:	b.ne	38b28 <__asan_backtrace_create_state@@Base+0x4f40>  // b.any
   38b68:	ldp	x3, x2, [x19, #272]
   38b6c:	strb	wzr, [x19, #255]
   38b70:	mov	x0, x19
   38b74:	blr	x3
   38b78:	ldr	x2, [x19, #320]
   38b7c:	mov	x1, #0x1                   	// #1
   38b80:	mov	x0, #0x0                   	// #0
   38b84:	add	x2, x2, x1
   38b88:	str	x2, [x19, #320]
   38b8c:	b	38b30 <__asan_backtrace_create_state@@Base+0x4f48>
   38b90:	ldrb	w0, [x20, #1]
   38b94:	cmp	w0, #0x5f
   38b98:	b.ne	38b60 <__asan_backtrace_create_state@@Base+0x4f78>  // b.any
   38b9c:	ldrb	w0, [x20, #2]
   38ba0:	cmp	w0, #0x55
   38ba4:	b.ne	38b60 <__asan_backtrace_create_state@@Base+0x4f78>  // b.any
   38ba8:	add	x24, x20, #0x3
   38bac:	cmp	x21, x24
   38bb0:	b.ls	38b60 <__asan_backtrace_create_state@@Base+0x4f78>  // b.plast
   38bb4:	mov	x2, #0x0                   	// #0
   38bb8:	b	38bd4 <__asan_backtrace_create_state@@Base+0x4fec>
   38bbc:	mov	w0, w3
   38bc0:	sxtw	x0, w0
   38bc4:	add	x24, x24, #0x1
   38bc8:	add	x2, x0, x2, lsl #4
   38bcc:	cmp	x21, x24
   38bd0:	b.eq	38b60 <__asan_backtrace_create_state@@Base+0x4f78>  // b.none
   38bd4:	ldrb	w0, [x24]
   38bd8:	sub	w3, w0, #0x30
   38bdc:	and	w4, w3, #0xff
   38be0:	cmp	w4, #0x9
   38be4:	b.ls	38bbc <__asan_backtrace_create_state@@Base+0x4fd4>  // b.plast
   38be8:	sub	w3, w0, #0x41
   38bec:	and	w3, w3, #0xff
   38bf0:	cmp	w3, #0x5
   38bf4:	b.hi	3a4fc <__asan_backtrace_create_state@@Base+0x6914>  // b.pmore
   38bf8:	sub	w0, w0, #0x37
   38bfc:	b	38bc0 <__asan_backtrace_create_state@@Base+0x4fd8>
   38c00:	mov	x0, x3
   38c04:	ldr	x4, [x19, #288]
   38c08:	b	3483c <__asan_backtrace_create_state@@Base+0xc54>
   38c0c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   38c10:	add	x20, x20, #0xed0
   38c14:	mov	x0, x20
   38c18:	bl	67e0 <__asan_internal_strlen@plt>
   38c1c:	cbz	x0, 3a99c <__asan_backtrace_create_state@@Base+0x6db4>
   38c20:	add	x22, x20, x0
   38c24:	mov	x23, #0x1                   	// #1
   38c28:	ldr	x1, [x19, #256]
   38c2c:	b	38c88 <__asan_backtrace_create_state@@Base+0x50a0>
   38c30:	ldp	x3, x2, [x19, #272]
   38c34:	strb	wzr, [x19, #255]
   38c38:	mov	x0, x19
   38c3c:	add	x20, x20, #0x1
   38c40:	blr	x3
   38c44:	strb	w21, [x19]
   38c48:	ldr	x0, [x19, #320]
   38c4c:	str	x23, [x19, #256]
   38c50:	strb	w21, [x19, #264]
   38c54:	cmp	x20, x22
   38c58:	add	x0, x0, #0x1
   38c5c:	str	x0, [x19, #320]
   38c60:	b.eq	3a3e4 <__asan_backtrace_create_state@@Base+0x67fc>  // b.none
   38c64:	ldrb	w21, [x20]
   38c68:	mov	x0, #0x1                   	// #1
   38c6c:	add	x1, x0, #0x1
   38c70:	str	x1, [x19, #256]
   38c74:	strb	w21, [x19, x0]
   38c78:	add	x20, x20, #0x1
   38c7c:	strb	w21, [x19, #264]
   38c80:	cmp	x22, x20
   38c84:	b.eq	39848 <__asan_backtrace_create_state@@Base+0x5c60>  // b.none
   38c88:	ldrb	w21, [x20]
   38c8c:	cmp	x1, #0xff
   38c90:	b.eq	38c30 <__asan_backtrace_create_state@@Base+0x5048>  // b.none
   38c94:	mov	x0, x1
   38c98:	b	38c6c <__asan_backtrace_create_state@@Base+0x5084>
   38c9c:	ldrsw	x22, [x0, #24]
   38ca0:	ldr	x20, [x0, #16]
   38ca4:	cbz	x22, 3a95c <__asan_backtrace_create_state@@Base+0x6d74>
   38ca8:	add	x22, x20, x22
   38cac:	mov	x23, #0x1                   	// #1
   38cb0:	ldr	x1, [x19, #256]
   38cb4:	b	38d10 <__asan_backtrace_create_state@@Base+0x5128>
   38cb8:	ldp	x3, x2, [x19, #272]
   38cbc:	strb	wzr, [x19, #255]
   38cc0:	mov	x0, x19
   38cc4:	add	x20, x20, #0x1
   38cc8:	blr	x3
   38ccc:	strb	w21, [x19]
   38cd0:	ldr	x0, [x19, #320]
   38cd4:	str	x23, [x19, #256]
   38cd8:	strb	w21, [x19, #264]
   38cdc:	cmp	x20, x22
   38ce0:	add	x0, x0, #0x1
   38ce4:	str	x0, [x19, #320]
   38ce8:	b.eq	3a3b0 <__asan_backtrace_create_state@@Base+0x67c8>  // b.none
   38cec:	ldrb	w21, [x20]
   38cf0:	mov	x0, #0x1                   	// #1
   38cf4:	add	x1, x0, #0x1
   38cf8:	str	x1, [x19, #256]
   38cfc:	strb	w21, [x19, x0]
   38d00:	add	x20, x20, #0x1
   38d04:	strb	w21, [x19, #264]
   38d08:	cmp	x20, x22
   38d0c:	b.eq	39888 <__asan_backtrace_create_state@@Base+0x5ca0>  // b.none
   38d10:	ldrb	w21, [x20]
   38d14:	cmp	x1, #0xff
   38d18:	b.eq	38cb8 <__asan_backtrace_create_state@@Base+0x50d0>  // b.none
   38d1c:	mov	x0, x1
   38d20:	b	38cf4 <__asan_backtrace_create_state@@Base+0x510c>
   38d24:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   38d28:	add	x20, x20, #0xf88
   38d2c:	mov	x0, x20
   38d30:	bl	67e0 <__asan_internal_strlen@plt>
   38d34:	cbz	x0, 38db4 <__asan_backtrace_create_state@@Base+0x51cc>
   38d38:	add	x22, x20, x0
   38d3c:	mov	x24, #0x1                   	// #1
   38d40:	ldr	x1, [x19, #256]
   38d44:	b	38da0 <__asan_backtrace_create_state@@Base+0x51b8>
   38d48:	ldp	x3, x2, [x19, #272]
   38d4c:	strb	wzr, [x19, #255]
   38d50:	mov	x0, x19
   38d54:	add	x20, x20, #0x1
   38d58:	blr	x3
   38d5c:	strb	w21, [x19]
   38d60:	ldr	x0, [x19, #320]
   38d64:	str	x24, [x19, #256]
   38d68:	strb	w21, [x19, #264]
   38d6c:	cmp	x22, x20
   38d70:	add	x0, x0, #0x1
   38d74:	str	x0, [x19, #320]
   38d78:	b.eq	38db4 <__asan_backtrace_create_state@@Base+0x51cc>  // b.none
   38d7c:	ldrb	w21, [x20]
   38d80:	mov	x0, #0x1                   	// #1
   38d84:	add	x1, x0, #0x1
   38d88:	str	x1, [x19, #256]
   38d8c:	strb	w21, [x19, x0]
   38d90:	add	x20, x20, #0x1
   38d94:	strb	w21, [x19, #264]
   38d98:	cmp	x20, x22
   38d9c:	b.eq	38db4 <__asan_backtrace_create_state@@Base+0x51cc>  // b.none
   38da0:	ldrb	w21, [x20]
   38da4:	cmp	x1, #0xff
   38da8:	b.eq	38d48 <__asan_backtrace_create_state@@Base+0x5160>  // b.none
   38dac:	mov	x0, x1
   38db0:	b	38d84 <__asan_backtrace_create_state@@Base+0x519c>
   38db4:	mov	w2, w23
   38db8:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   38dbc:	add	x1, x1, #0x160
   38dc0:	add	x20, sp, #0x90
   38dc4:	mov	x0, x20
   38dc8:	bl	6900 <sprintf@plt>
   38dcc:	mov	x0, x20
   38dd0:	bl	67e0 <__asan_internal_strlen@plt>
   38dd4:	cbz	x0, 391d4 <__asan_backtrace_create_state@@Base+0x55ec>
   38dd8:	add	x22, x20, x0
   38ddc:	mov	x23, #0x1                   	// #1
   38de0:	ldr	x1, [x19, #256]
   38de4:	b	38e40 <__asan_backtrace_create_state@@Base+0x5258>
   38de8:	ldp	x3, x2, [x19, #272]
   38dec:	strb	wzr, [x19, #255]
   38df0:	mov	x0, x19
   38df4:	add	x20, x20, #0x1
   38df8:	blr	x3
   38dfc:	strb	w21, [x19]
   38e00:	ldr	x0, [x19, #320]
   38e04:	str	x23, [x19, #256]
   38e08:	strb	w21, [x19, #264]
   38e0c:	cmp	x20, x22
   38e10:	add	x0, x0, #0x1
   38e14:	str	x0, [x19, #320]
   38e18:	b.eq	39644 <__asan_backtrace_create_state@@Base+0x5a5c>  // b.none
   38e1c:	ldrb	w21, [x20]
   38e20:	mov	x0, #0x1                   	// #1
   38e24:	add	x1, x0, #0x1
   38e28:	str	x1, [x19, #256]
   38e2c:	strb	w21, [x19, x0]
   38e30:	add	x20, x20, #0x1
   38e34:	strb	w21, [x19, #264]
   38e38:	cmp	x20, x22
   38e3c:	b.eq	391d8 <__asan_backtrace_create_state@@Base+0x55f0>  // b.none
   38e40:	ldrb	w21, [x20]
   38e44:	cmp	x1, #0xff
   38e48:	b.eq	38de8 <__asan_backtrace_create_state@@Base+0x5200>  // b.none
   38e4c:	mov	x0, x1
   38e50:	b	38e24 <__asan_backtrace_create_state@@Base+0x523c>
   38e54:	mov	w0, #0x1                   	// #1
   38e58:	str	w0, [x19, #304]
   38e5c:	b	34c30 <__asan_backtrace_create_state@@Base+0x1048>
   38e60:	ldr	x21, [x19, #288]
   38e64:	cbz	x21, 34748 <__asan_backtrace_create_state@@Base+0xb60>
   38e68:	ldr	x2, [x21, #8]
   38e6c:	ldr	x1, [x24, #8]
   38e70:	ldr	x20, [x2, #16]
   38e74:	mov	w0, w1
   38e78:	tbnz	w1, #31, 38ea4 <__asan_backtrace_create_state@@Base+0x52bc>
   38e7c:	cbnz	x20, 38e90 <__asan_backtrace_create_state@@Base+0x52a8>
   38e80:	b	34748 <__asan_backtrace_create_state@@Base+0xb60>
   38e84:	ldr	x20, [x20, #16]
   38e88:	sub	w0, w0, #0x1
   38e8c:	cbz	x20, 34748 <__asan_backtrace_create_state@@Base+0xb60>
   38e90:	ldr	w1, [x20]
   38e94:	cmp	w1, #0x2f
   38e98:	b.ne	34748 <__asan_backtrace_create_state@@Base+0xb60>  // b.any
   38e9c:	cbnz	w0, 38e84 <__asan_backtrace_create_state@@Base+0x529c>
   38ea0:	ldr	x20, [x20, #8]
   38ea4:	cbz	x20, 34748 <__asan_backtrace_create_state@@Base+0xb60>
   38ea8:	ldr	w0, [x20]
   38eac:	cmp	w0, #0x2f
   38eb0:	b.eq	3a61c <__asan_backtrace_create_state@@Base+0x6a34>  // b.none
   38eb4:	ldr	x0, [x21]
   38eb8:	str	x0, [x19, #288]
   38ebc:	ldr	w0, [x20, #4]
   38ec0:	cmp	w0, #0x1
   38ec4:	b.gt	398b8 <__asan_backtrace_create_state@@Base+0x5cd0>
   38ec8:	ldr	w1, [x19, #308]
   38ecc:	cmp	w1, #0x400
   38ed0:	b.gt	398b8 <__asan_backtrace_create_state@@Base+0x5cd0>
   38ed4:	ldr	x3, [x19, #328]
   38ed8:	add	w0, w0, #0x1
   38edc:	str	w0, [x20, #4]
   38ee0:	add	w1, w1, #0x1
   38ee4:	add	x0, sp, #0x90
   38ee8:	str	w1, [x19, #308]
   38eec:	str	x0, [x19, #328]
   38ef0:	mov	w1, w22
   38ef4:	mov	x0, x19
   38ef8:	mov	x2, x20
   38efc:	stp	x20, x3, [sp, #144]
   38f00:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   38f04:	ldr	w1, [x20, #4]
   38f08:	ldr	x0, [sp, #152]
   38f0c:	str	x0, [x19, #328]
   38f10:	ldr	w0, [x19, #308]
   38f14:	sub	w1, w1, #0x1
   38f18:	str	w1, [x20, #4]
   38f1c:	sub	w0, w0, #0x1
   38f20:	str	w0, [x19, #308]
   38f24:	ldp	x23, x24, [sp, #48]
   38f28:	ldp	x25, x26, [sp, #64]
   38f2c:	str	x21, [x19, #288]
   38f30:	ldp	x21, x22, [sp, #32]
   38f34:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38f38:	ldr	x25, [x25, #8]
   38f3c:	cbz	x25, 3ac7c <__asan_backtrace_create_state@@Base+0x7094>
   38f40:	ldr	w4, [x25]
   38f44:	add	x21, sp, #0x90
   38f48:	stp	x21, x25, [sp, #176]
   38f4c:	sub	w1, w4, #0x1c
   38f50:	str	wzr, [sp, #192]
   38f54:	cmp	w1, #0x34
   38f58:	str	x3, [sp, #200]
   38f5c:	b.hi	38f6c <__asan_backtrace_create_state@@Base+0x5384>  // b.pmore
   38f60:	lsl	x1, x0, x1
   38f64:	tst	x1, x2
   38f68:	b.ne	399c0 <__asan_backtrace_create_state@@Base+0x5dd8>  // b.any
   38f6c:	add	x1, x21, #0x20
   38f70:	mov	w20, #0x2                   	// #2
   38f74:	b	36760 <__asan_backtrace_create_state@@Base+0x2b78>
   38f78:	ldp	x21, x22, [sp, #32]
   38f7c:	ldp	x23, x24, [sp, #48]
   38f80:	ldp	x25, x26, [sp, #64]
   38f84:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   38f88:	ldr	w0, [x20, #4]
   38f8c:	cmp	w0, #0x1
   38f90:	b.gt	39138 <__asan_backtrace_create_state@@Base+0x5550>
   38f94:	ldr	w1, [x19, #308]
   38f98:	cmp	w1, #0x400
   38f9c:	b.gt	39138 <__asan_backtrace_create_state@@Base+0x5550>
   38fa0:	ldr	x3, [x19, #328]
   38fa4:	add	w0, w0, #0x1
   38fa8:	str	w0, [x20, #4]
   38fac:	add	w1, w1, #0x1
   38fb0:	add	x0, sp, #0x90
   38fb4:	str	w1, [x19, #308]
   38fb8:	str	x0, [x19, #328]
   38fbc:	mov	w1, w22
   38fc0:	mov	x0, x19
   38fc4:	mov	x2, x20
   38fc8:	stp	x20, x3, [sp, #144]
   38fcc:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   38fd0:	ldr	w1, [x20, #4]
   38fd4:	ldr	x0, [sp, #152]
   38fd8:	str	x0, [x19, #328]
   38fdc:	ldr	w0, [x19, #308]
   38fe0:	sub	w1, w1, #0x1
   38fe4:	str	w1, [x20, #4]
   38fe8:	sub	w0, w0, #0x1
   38fec:	str	w0, [x19, #308]
   38ff0:	ldr	x1, [x19, #256]
   38ff4:	add	x0, x1, #0x1
   38ff8:	cmp	x1, #0xff
   38ffc:	b.ne	39024 <__asan_backtrace_create_state@@Base+0x543c>  // b.any
   39000:	ldp	x3, x2, [x19, #272]
   39004:	strb	wzr, [x19, #255]
   39008:	mov	x0, x19
   3900c:	blr	x3
   39010:	ldr	x2, [x19, #320]
   39014:	mov	x0, #0x1                   	// #1
   39018:	mov	x1, #0x0                   	// #0
   3901c:	add	x2, x2, x0
   39020:	str	x2, [x19, #320]
   39024:	str	x0, [x19, #256]
   39028:	mov	w0, #0x20                  	// #32
   3902c:	strb	w0, [x19, x1]
   39030:	strb	w0, [x19, #264]
   39034:	b	35204 <__asan_backtrace_create_state@@Base+0x161c>
   39038:	ldr	x1, [x19, #256]
   3903c:	add	x0, x1, #0x1
   39040:	cmp	x1, #0xff
   39044:	b.ne	3906c <__asan_backtrace_create_state@@Base+0x5484>  // b.any
   39048:	ldp	x3, x2, [x19, #272]
   3904c:	strb	wzr, [x19, #255]
   39050:	mov	x0, x19
   39054:	blr	x3
   39058:	ldr	x2, [x19, #320]
   3905c:	mov	x0, #0x1                   	// #1
   39060:	mov	x1, #0x0                   	// #0
   39064:	add	x2, x2, x0
   39068:	str	x2, [x19, #320]
   3906c:	str	x0, [x19, #256]
   39070:	mov	w2, #0x28                  	// #40
   39074:	strb	w2, [x19, x1]
   39078:	strb	w2, [x19, #264]
   3907c:	ldr	x23, [x23, #8]
   39080:	cbz	x23, 39224 <__asan_backtrace_create_state@@Base+0x563c>
   39084:	ldr	w1, [x23, #4]
   39088:	cmp	w1, #0x1
   3908c:	b.gt	39224 <__asan_backtrace_create_state@@Base+0x563c>
   39090:	ldr	w2, [x19, #308]
   39094:	cmp	w2, #0x400
   39098:	b.gt	39224 <__asan_backtrace_create_state@@Base+0x563c>
   3909c:	ldr	x3, [x19, #328]
   390a0:	add	w1, w1, #0x1
   390a4:	str	w1, [x23, #4]
   390a8:	add	w2, w2, #0x1
   390ac:	add	x0, sp, #0x90
   390b0:	str	w2, [x19, #308]
   390b4:	str	x0, [x19, #328]
   390b8:	mov	w1, w22
   390bc:	mov	x2, x23
   390c0:	mov	x0, x19
   390c4:	stp	x23, x3, [sp, #144]
   390c8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   390cc:	ldr	w2, [x23, #4]
   390d0:	ldr	x0, [sp, #152]
   390d4:	str	x0, [x19, #328]
   390d8:	ldr	w1, [x19, #308]
   390dc:	sub	w2, w2, #0x1
   390e0:	ldr	x0, [x19, #256]
   390e4:	str	w2, [x23, #4]
   390e8:	sub	w1, w1, #0x1
   390ec:	str	w1, [x19, #308]
   390f0:	add	x1, x0, #0x1
   390f4:	cmp	x0, #0xff
   390f8:	b.ne	39124 <__asan_backtrace_create_state@@Base+0x553c>  // b.any
   390fc:	ldp	x3, x2, [x19, #272]
   39100:	strb	wzr, [x19, #255]
   39104:	mov	x1, x0
   39108:	mov	x0, x19
   3910c:	blr	x3
   39110:	ldr	x2, [x19, #320]
   39114:	mov	x1, #0x1                   	// #1
   39118:	mov	x0, #0x0                   	// #0
   3911c:	add	x2, x2, x1
   39120:	str	x2, [x19, #320]
   39124:	str	x1, [x19, #256]
   39128:	mov	w1, #0x29                  	// #41
   3912c:	strb	w1, [x19, x0]
   39130:	strb	w1, [x19, #264]
   39134:	b	3600c <__asan_backtrace_create_state@@Base+0x2424>
   39138:	mov	w0, #0x1                   	// #1
   3913c:	str	w0, [x19, #304]
   39140:	b	38ff0 <__asan_backtrace_create_state@@Base+0x5408>
   39144:	mov	w0, #0x1                   	// #1
   39148:	str	w0, [x19, #304]
   3914c:	b	34ac8 <__asan_backtrace_create_state@@Base+0xee0>
   39150:	mov	w0, #0x1                   	// #1
   39154:	str	w0, [x19, #304]
   39158:	b	36e84 <__asan_backtrace_create_state@@Base+0x329c>
   3915c:	add	x0, x1, #0x1
   39160:	str	x0, [x19, #256]
   39164:	mov	w2, #0x29                  	// #41
   39168:	strb	w2, [x19, x1]
   3916c:	strb	w2, [x19, #264]
   39170:	ldr	w1, [x24]
   39174:	cmp	w1, #0x3e
   39178:	b.eq	3a5e0 <__asan_backtrace_create_state@@Base+0x69f8>  // b.none
   3917c:	cmp	w21, #0x8
   39180:	b.ne	34c7c <__asan_backtrace_create_state@@Base+0x1094>  // b.any
   39184:	cmp	x0, #0xff
   39188:	b.ne	391b0 <__asan_backtrace_create_state@@Base+0x55c8>  // b.any
   3918c:	ldp	x3, x2, [x19, #272]
   39190:	strb	wzr, [x19, #255]
   39194:	mov	x1, x0
   39198:	mov	x0, x19
   3919c:	blr	x3
   391a0:	ldr	x1, [x19, #320]
   391a4:	mov	x0, #0x0                   	// #0
   391a8:	add	x1, x1, #0x1
   391ac:	str	x1, [x19, #320]
   391b0:	add	x1, x0, #0x1
   391b4:	str	x1, [x19, #256]
   391b8:	mov	w1, #0x5b                  	// #91
   391bc:	strb	w1, [x19, x0]
   391c0:	strb	w1, [x19, #264]
   391c4:	b	34c7c <__asan_backtrace_create_state@@Base+0x1094>
   391c8:	mov	w0, #0x1                   	// #1
   391cc:	str	w0, [x19, #304]
   391d0:	b	367f0 <__asan_backtrace_create_state@@Base+0x2c08>
   391d4:	ldr	x1, [x19, #256]
   391d8:	cmp	x1, #0xff
   391dc:	b.ne	39648 <__asan_backtrace_create_state@@Base+0x5a60>  // b.any
   391e0:	ldp	x3, x2, [x19, #272]
   391e4:	strb	wzr, [x19, #255]
   391e8:	mov	x0, x19
   391ec:	blr	x3
   391f0:	ldr	x2, [x19, #320]
   391f4:	mov	x0, #0x1                   	// #1
   391f8:	mov	x1, #0x0                   	// #0
   391fc:	add	x2, x2, x0
   39200:	str	x2, [x19, #320]
   39204:	str	x0, [x19, #256]
   39208:	mov	w0, #0x7d                  	// #125
   3920c:	strb	w0, [x19, x1]
   39210:	strb	w0, [x19, #264]
   39214:	ldp	x21, x22, [sp, #32]
   39218:	ldp	x23, x24, [sp, #48]
   3921c:	ldp	x25, x26, [sp, #64]
   39220:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39224:	mov	w1, #0x1                   	// #1
   39228:	str	w1, [x19, #304]
   3922c:	b	390f0 <__asan_backtrace_create_state@@Base+0x5508>
   39230:	ldr	x20, [x20, #8]
   39234:	cbz	x20, 398e0 <__asan_backtrace_create_state@@Base+0x5cf8>
   39238:	ldr	w1, [x20, #4]
   3923c:	cmp	w1, #0x1
   39240:	b.gt	398e0 <__asan_backtrace_create_state@@Base+0x5cf8>
   39244:	ldr	w2, [x19, #308]
   39248:	cmp	w2, #0x400
   3924c:	b.gt	398e0 <__asan_backtrace_create_state@@Base+0x5cf8>
   39250:	ldr	x3, [x19, #328]
   39254:	add	w1, w1, #0x1
   39258:	str	w1, [x20, #4]
   3925c:	add	w2, w2, #0x1
   39260:	add	x0, sp, #0x90
   39264:	str	w2, [x19, #308]
   39268:	str	x0, [x19, #328]
   3926c:	mov	w1, w22
   39270:	mov	x2, x20
   39274:	mov	x0, x19
   39278:	stp	x20, x3, [sp, #144]
   3927c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   39280:	ldr	w2, [x20, #4]
   39284:	ldr	x0, [sp, #152]
   39288:	str	x0, [x19, #328]
   3928c:	ldr	w1, [x19, #308]
   39290:	sub	w2, w2, #0x1
   39294:	ldr	x0, [x19, #368]
   39298:	str	w2, [x20, #4]
   3929c:	sub	w1, w1, #0x1
   392a0:	str	w1, [x19, #308]
   392a4:	cbz	x0, 392b0 <__asan_backtrace_create_state@@Base+0x56c8>
   392a8:	ldr	x0, [sp, #128]
   392ac:	str	x0, [x19, #288]
   392b0:	ldr	x1, [x19, #256]
   392b4:	ldrb	w0, [x19, #264]
   392b8:	mov	x3, x1
   392bc:	cmp	w0, #0x3c
   392c0:	b.eq	3a6d8 <__asan_backtrace_create_state@@Base+0x6af0>  // b.none
   392c4:	add	x0, x3, #0x1
   392c8:	cmp	x3, #0xff
   392cc:	b.ne	392f8 <__asan_backtrace_create_state@@Base+0x5710>  // b.any
   392d0:	ldp	x4, x2, [x19, #272]
   392d4:	strb	wzr, [x19, #255]
   392d8:	mov	x1, x3
   392dc:	mov	x0, x19
   392e0:	blr	x4
   392e4:	ldr	x1, [x19, #320]
   392e8:	mov	x0, #0x1                   	// #1
   392ec:	mov	x3, #0x0                   	// #0
   392f0:	add	x1, x1, x0
   392f4:	str	x1, [x19, #320]
   392f8:	str	x0, [x19, #256]
   392fc:	mov	w1, #0x3c                  	// #60
   39300:	strb	w1, [x19, x3]
   39304:	strb	w1, [x19, #264]
   39308:	ldr	x1, [x24, #8]
   3930c:	ldr	x20, [x1, #16]
   39310:	cbz	x20, 398d4 <__asan_backtrace_create_state@@Base+0x5cec>
   39314:	ldr	w1, [x20, #4]
   39318:	cmp	w1, #0x1
   3931c:	b.gt	398d4 <__asan_backtrace_create_state@@Base+0x5cec>
   39320:	ldr	w2, [x19, #308]
   39324:	cmp	w2, #0x400
   39328:	b.gt	398d4 <__asan_backtrace_create_state@@Base+0x5cec>
   3932c:	ldr	x3, [x19, #328]
   39330:	add	w1, w1, #0x1
   39334:	str	w1, [x20, #4]
   39338:	add	w2, w2, #0x1
   3933c:	add	x0, sp, #0x90
   39340:	str	w2, [x19, #308]
   39344:	str	x0, [x19, #328]
   39348:	mov	w1, w22
   3934c:	mov	x2, x20
   39350:	mov	x0, x19
   39354:	stp	x20, x3, [sp, #144]
   39358:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3935c:	ldr	w1, [x19, #308]
   39360:	ldr	x0, [sp, #152]
   39364:	str	x0, [x19, #328]
   39368:	ldr	w0, [x20, #4]
   3936c:	sub	w1, w1, #0x1
   39370:	sub	w0, w0, #0x1
   39374:	str	w0, [x20, #4]
   39378:	ldr	x0, [x19, #256]
   3937c:	str	w1, [x19, #308]
   39380:	ldrb	w2, [x19, #264]
   39384:	mov	x1, x0
   39388:	cmp	w2, #0x3e
   3938c:	b.ne	393d0 <__asan_backtrace_create_state@@Base+0x57e8>  // b.any
   39390:	cmp	x0, #0xff
   39394:	b.ne	393bc <__asan_backtrace_create_state@@Base+0x57d4>  // b.any
   39398:	ldp	x3, x2, [x19, #272]
   3939c:	strb	wzr, [x19, #255]
   393a0:	mov	x0, x19
   393a4:	blr	x3
   393a8:	str	xzr, [x19, #256]
   393ac:	ldr	x0, [x19, #320]
   393b0:	mov	x1, #0x0                   	// #0
   393b4:	add	x0, x0, #0x1
   393b8:	str	x0, [x19, #320]
   393bc:	add	x0, x1, #0x1
   393c0:	str	x0, [x19, #256]
   393c4:	mov	w2, #0x20                  	// #32
   393c8:	strb	w2, [x19, x1]
   393cc:	strb	w2, [x19, #264]
   393d0:	add	x1, x0, #0x1
   393d4:	cmp	x0, #0xff
   393d8:	b.ne	39404 <__asan_backtrace_create_state@@Base+0x581c>  // b.any
   393dc:	ldp	x3, x2, [x19, #272]
   393e0:	strb	wzr, [x19, #255]
   393e4:	mov	x1, x0
   393e8:	mov	x0, x19
   393ec:	blr	x3
   393f0:	ldr	x2, [x19, #320]
   393f4:	mov	x1, #0x1                   	// #1
   393f8:	mov	x0, #0x0                   	// #0
   393fc:	add	x2, x2, x1
   39400:	str	x2, [x19, #320]
   39404:	str	x1, [x19, #256]
   39408:	mov	w1, #0x3e                  	// #62
   3940c:	strb	w1, [x19, x0]
   39410:	strb	w1, [x19, #264]
   39414:	ldp	x21, x22, [sp, #32]
   39418:	ldp	x23, x24, [sp, #48]
   3941c:	ldp	x25, x26, [sp, #64]
   39420:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39424:	ldr	x0, [x23, #8]
   39428:	ldr	w21, [x0, #28]
   3942c:	cmp	w21, #0x6
   39430:	b.hi	394cc <__asan_backtrace_create_state@@Base+0x58e4>  // b.pmore
   39434:	cbz	w21, 34ba4 <__asan_backtrace_create_state@@Base+0xfbc>
   39438:	ldr	x0, [x2, #16]
   3943c:	ldr	w0, [x0]
   39440:	cbnz	w0, 34ba4 <__asan_backtrace_create_state@@Base+0xfbc>
   39444:	cmp	w20, #0x3e
   39448:	b.eq	3ad50 <__asan_backtrace_create_state@@Base+0x7168>  // b.none
   3944c:	ldr	x2, [x24, #16]
   39450:	mov	w1, w22
   39454:	mov	x0, x19
   39458:	bl	3ae38 <__asan_backtrace_create_state@@Base+0x7250>
   3945c:	cmp	w21, #0x4
   39460:	b.eq	3ad20 <__asan_backtrace_create_state@@Base+0x7138>  // b.none
   39464:	b.hi	3aac0 <__asan_backtrace_create_state@@Base+0x6ed8>  // b.pmore
   39468:	cmp	w21, #0x2
   3946c:	b.eq	3acc4 <__asan_backtrace_create_state@@Base+0x70dc>  // b.none
   39470:	cmp	w21, #0x3
   39474:	b.ne	3adf4 <__asan_backtrace_create_state@@Base+0x720c>  // b.any
   39478:	ldr	x1, [x19, #256]
   3947c:	cmp	x1, #0xff
   39480:	b.ne	394a8 <__asan_backtrace_create_state@@Base+0x58c0>  // b.any
   39484:	ldp	x3, x2, [x19, #272]
   39488:	strb	wzr, [x19, #255]
   3948c:	mov	x0, x19
   39490:	blr	x3
   39494:	str	xzr, [x19, #256]
   39498:	ldr	x0, [x19, #320]
   3949c:	mov	x1, #0x0                   	// #0
   394a0:	add	x0, x0, #0x1
   394a4:	str	x0, [x19, #320]
   394a8:	add	x0, x1, #0x1
   394ac:	str	x0, [x19, #256]
   394b0:	mov	w0, #0x6c                  	// #108
   394b4:	strb	w0, [x19, x1]
   394b8:	strb	w0, [x19, #264]
   394bc:	ldp	x21, x22, [sp, #32]
   394c0:	ldp	x23, x24, [sp, #48]
   394c4:	ldp	x25, x26, [sp, #64]
   394c8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   394cc:	cmp	w21, #0x7
   394d0:	b.ne	34ba4 <__asan_backtrace_create_state@@Base+0xfbc>  // b.any
   394d4:	ldr	x0, [x2, #16]
   394d8:	ldr	w1, [x0]
   394dc:	cbnz	w1, 34ba4 <__asan_backtrace_create_state@@Base+0xfbc>
   394e0:	ldr	w1, [x0, #16]
   394e4:	cmp	w20, #0x3d
   394e8:	ccmp	w1, #0x1, #0x0, eq  // eq = none
   394ec:	b.ne	34ba4 <__asan_backtrace_create_state@@Base+0xfbc>  // b.any
   394f0:	ldr	x0, [x0, #8]
   394f4:	ldrb	w0, [x0]
   394f8:	cmp	w0, #0x30
   394fc:	b.eq	3ae04 <__asan_backtrace_create_state@@Base+0x721c>  // b.none
   39500:	cmp	w0, #0x31
   39504:	b.ne	34ba4 <__asan_backtrace_create_state@@Base+0xfbc>  // b.any
   39508:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
   3950c:	add	x20, x20, #0x528
   39510:	mov	x0, x20
   39514:	bl	67e0 <__asan_internal_strlen@plt>
   39518:	mov	x1, x20
   3951c:	mov	x2, x0
   39520:	mov	x0, x19
   39524:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   39528:	ldp	x21, x22, [sp, #32]
   3952c:	ldp	x23, x24, [sp, #48]
   39530:	ldp	x25, x26, [sp, #64]
   39534:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39538:	ldp	x3, x2, [x19, #272]
   3953c:	strb	wzr, [x19, #255]
   39540:	mov	x1, x0
   39544:	mov	x0, x19
   39548:	blr	x3
   3954c:	ldr	x0, [x19, #320]
   39550:	mov	x2, #0x1                   	// #1
   39554:	ldr	x23, [x24, #8]
   39558:	mov	w1, #0x28                  	// #40
   3955c:	add	x0, x0, x2
   39560:	strb	w1, [x19]
   39564:	str	x2, [x19, #256]
   39568:	strb	w1, [x19, #264]
   3956c:	str	x0, [x19, #320]
   39570:	cbnz	x23, 3a3d0 <__asan_backtrace_create_state@@Base+0x67e8>
   39574:	mov	w0, #0x29                  	// #41
   39578:	strb	w0, [x19, #1]
   3957c:	strb	w0, [x19, #264]
   39580:	mov	x0, #0x2                   	// #2
   39584:	str	w2, [x19, #304]
   39588:	ldr	w1, [x24]
   3958c:	str	x0, [x19, #256]
   39590:	cmp	w1, #0x3e
   39594:	b.ne	3917c <__asan_backtrace_create_state@@Base+0x5594>  // b.any
   39598:	ldr	x2, [x19, #256]
   3959c:	mov	w1, #0x2d                  	// #45
   395a0:	add	x0, x2, #0x1
   395a4:	str	x0, [x19, #256]
   395a8:	strb	w1, [x19, x2]
   395ac:	strb	w1, [x19, #264]
   395b0:	b	3917c <__asan_backtrace_create_state@@Base+0x5594>
   395b4:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   395b8:	add	x20, x20, #0xec0
   395bc:	mov	x0, x20
   395c0:	bl	67e0 <__asan_internal_strlen@plt>
   395c4:	cbz	x0, 351e8 <__asan_backtrace_create_state@@Base+0x1600>
   395c8:	add	x23, x20, x0
   395cc:	mov	x25, #0x1                   	// #1
   395d0:	ldr	x1, [x19, #256]
   395d4:	b	39630 <__asan_backtrace_create_state@@Base+0x5a48>
   395d8:	ldp	x3, x2, [x19, #272]
   395dc:	strb	wzr, [x19, #255]
   395e0:	mov	x0, x19
   395e4:	add	x20, x20, #0x1
   395e8:	blr	x3
   395ec:	strb	w21, [x19]
   395f0:	ldr	x0, [x19, #320]
   395f4:	str	x25, [x19, #256]
   395f8:	strb	w21, [x19, #264]
   395fc:	cmp	x20, x23
   39600:	add	x0, x0, #0x1
   39604:	str	x0, [x19, #320]
   39608:	b.eq	351e8 <__asan_backtrace_create_state@@Base+0x1600>  // b.none
   3960c:	ldrb	w21, [x20]
   39610:	mov	x0, #0x1                   	// #1
   39614:	add	x1, x0, #0x1
   39618:	str	x1, [x19, #256]
   3961c:	strb	w21, [x19, x0]
   39620:	add	x20, x20, #0x1
   39624:	strb	w21, [x19, #264]
   39628:	cmp	x23, x20
   3962c:	b.eq	351e8 <__asan_backtrace_create_state@@Base+0x1600>  // b.none
   39630:	ldrb	w21, [x20]
   39634:	cmp	x1, #0xff
   39638:	b.eq	395d8 <__asan_backtrace_create_state@@Base+0x59f0>  // b.none
   3963c:	mov	x0, x1
   39640:	b	39614 <__asan_backtrace_create_state@@Base+0x5a2c>
   39644:	mov	x1, #0x1                   	// #1
   39648:	add	x0, x1, #0x1
   3964c:	b	39204 <__asan_backtrace_create_state@@Base+0x561c>
   39650:	ldr	x1, [x19, #256]
   39654:	cmp	x1, #0xff
   39658:	b.ne	3967c <__asan_backtrace_create_state@@Base+0x5a94>  // b.any
   3965c:	ldp	x3, x2, [x19, #272]
   39660:	strb	wzr, [x19, #255]
   39664:	mov	x0, x19
   39668:	blr	x3
   3966c:	ldr	x0, [x19, #320]
   39670:	mov	x1, #0x0                   	// #0
   39674:	add	x0, x0, #0x1
   39678:	str	x0, [x19, #320]
   3967c:	add	x0, x1, #0x1
   39680:	str	x0, [x19, #256]
   39684:	mov	w0, #0x5d                  	// #93
   39688:	strb	w0, [x19, x1]
   3968c:	strb	w0, [x19, #264]
   39690:	ldp	x21, x22, [sp, #32]
   39694:	ldp	x23, x24, [sp, #48]
   39698:	ldp	x25, x26, [sp, #64]
   3969c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   396a0:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   396a4:	add	x20, x20, #0xcd0
   396a8:	mov	x0, x20
   396ac:	bl	67e0 <__asan_internal_strlen@plt>
   396b0:	cbz	x0, 34928 <__asan_backtrace_create_state@@Base+0xd40>
   396b4:	add	x23, x20, x0
   396b8:	mov	x25, #0x1                   	// #1
   396bc:	ldr	x1, [x19, #256]
   396c0:	b	3971c <__asan_backtrace_create_state@@Base+0x5b34>
   396c4:	ldp	x3, x2, [x19, #272]
   396c8:	strb	wzr, [x19, #255]
   396cc:	mov	x0, x19
   396d0:	add	x20, x20, #0x1
   396d4:	blr	x3
   396d8:	strb	w21, [x19]
   396dc:	ldr	x0, [x19, #320]
   396e0:	str	x25, [x19, #256]
   396e4:	strb	w21, [x19, #264]
   396e8:	cmp	x20, x23
   396ec:	add	x0, x0, #0x1
   396f0:	str	x0, [x19, #320]
   396f4:	b.eq	34928 <__asan_backtrace_create_state@@Base+0xd40>  // b.none
   396f8:	ldrb	w21, [x20]
   396fc:	mov	x0, #0x1                   	// #1
   39700:	add	x1, x0, #0x1
   39704:	str	x1, [x19, #256]
   39708:	strb	w21, [x19, x0]
   3970c:	add	x20, x20, #0x1
   39710:	strb	w21, [x19, #264]
   39714:	cmp	x20, x23
   39718:	b.eq	34928 <__asan_backtrace_create_state@@Base+0xd40>  // b.none
   3971c:	ldrb	w21, [x20]
   39720:	cmp	x1, #0xff
   39724:	b.eq	396c4 <__asan_backtrace_create_state@@Base+0x5adc>  // b.none
   39728:	mov	x0, x1
   3972c:	b	39700 <__asan_backtrace_create_state@@Base+0x5b18>
   39730:	ldr	x20, [x22, #8]
   39734:	ldrb	w0, [x20]
   39738:	sub	w0, w0, #0x61
   3973c:	and	w0, w0, #0xff
   39740:	cmp	w0, #0x19
   39744:	b.hi	3887c <__asan_backtrace_create_state@@Base+0x4c94>  // b.pmore
   39748:	mov	x1, #0x1                   	// #1
   3974c:	add	x0, x1, #0x1
   39750:	b	3886c <__asan_backtrace_create_state@@Base+0x4c84>
   39754:	cmp	x1, #0xff
   39758:	b.eq	3a668 <__asan_backtrace_create_state@@Base+0x6a80>  // b.none
   3975c:	add	x2, x1, #0x1
   39760:	str	x2, [x19, #256]
   39764:	mov	w0, #0x20                  	// #32
   39768:	strb	w0, [x19, x1]
   3976c:	mov	x1, x2
   39770:	strb	w0, [x19, #264]
   39774:	b	36938 <__asan_backtrace_create_state@@Base+0x2d50>
   39778:	add	x2, x2, #0x10
   3977c:	mov	w1, w21
   39780:	mov	x0, x19
   39784:	bl	3caa8 <__asan_backtrace_create_state@@Base+0x8ec0>
   39788:	ldr	x20, [x24, #8]
   3978c:	cbz	x20, 3a7bc <__asan_backtrace_create_state@@Base+0x6bd4>
   39790:	ldr	w0, [x20, #4]
   39794:	cmp	w0, #0x1
   39798:	b.gt	39ff4 <__asan_backtrace_create_state@@Base+0x640c>
   3979c:	ldr	w1, [x19, #308]
   397a0:	cmp	w1, #0x400
   397a4:	b.gt	39ff4 <__asan_backtrace_create_state@@Base+0x640c>
   397a8:	ldr	x3, [x19, #328]
   397ac:	add	w0, w0, #0x1
   397b0:	str	w0, [x20, #4]
   397b4:	add	w1, w1, #0x1
   397b8:	add	x0, sp, #0x90
   397bc:	str	w1, [x19, #308]
   397c0:	str	x0, [x19, #328]
   397c4:	mov	w1, w21
   397c8:	mov	x0, x19
   397cc:	mov	x2, x20
   397d0:	stp	x20, x3, [sp, #144]
   397d4:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   397d8:	ldr	w1, [x20, #4]
   397dc:	ldr	x0, [sp, #152]
   397e0:	sub	w1, w1, #0x1
   397e4:	ldp	x21, x22, [sp, #32]
   397e8:	ldp	x23, x24, [sp, #48]
   397ec:	ldp	x25, x26, [sp, #64]
   397f0:	str	x0, [x19, #328]
   397f4:	ldr	w0, [x19, #308]
   397f8:	str	w1, [x20, #4]
   397fc:	sub	w0, w0, #0x1
   39800:	str	w0, [x19, #308]
   39804:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39808:	ldp	x21, x22, [sp, #32]
   3980c:	ldp	x23, x24, [sp, #48]
   39810:	ldp	x25, x26, [sp, #64]
   39814:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39818:	ldp	x21, x22, [sp, #32]
   3981c:	ldp	x23, x24, [sp, #48]
   39820:	ldp	x25, x26, [sp, #64]
   39824:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39828:	ldp	x21, x22, [sp, #32]
   3982c:	ldp	x23, x24, [sp, #48]
   39830:	ldp	x25, x26, [sp, #64]
   39834:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39838:	ldp	x21, x22, [sp, #32]
   3983c:	ldp	x23, x24, [sp, #48]
   39840:	ldp	x25, x26, [sp, #64]
   39844:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39848:	ldp	x21, x22, [sp, #32]
   3984c:	ldp	x23, x24, [sp, #48]
   39850:	ldp	x25, x26, [sp, #64]
   39854:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39858:	ldp	x21, x22, [sp, #32]
   3985c:	ldp	x23, x24, [sp, #48]
   39860:	ldp	x25, x26, [sp, #64]
   39864:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39868:	ldp	x21, x22, [sp, #32]
   3986c:	ldp	x23, x24, [sp, #48]
   39870:	ldp	x25, x26, [sp, #64]
   39874:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39878:	ldp	x21, x22, [sp, #32]
   3987c:	ldp	x23, x24, [sp, #48]
   39880:	ldp	x25, x26, [sp, #64]
   39884:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39888:	ldp	x21, x22, [sp, #32]
   3988c:	ldp	x23, x24, [sp, #48]
   39890:	ldp	x25, x26, [sp, #64]
   39894:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39898:	ldp	x21, x22, [sp, #32]
   3989c:	ldp	x23, x24, [sp, #48]
   398a0:	ldp	x25, x26, [sp, #64]
   398a4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   398a8:	ldp	x21, x22, [sp, #32]
   398ac:	ldp	x23, x24, [sp, #48]
   398b0:	ldp	x25, x26, [sp, #64]
   398b4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   398b8:	mov	w0, #0x1                   	// #1
   398bc:	str	w0, [x19, #304]
   398c0:	b	38f24 <__asan_backtrace_create_state@@Base+0x533c>
   398c4:	ldp	x21, x22, [sp, #32]
   398c8:	ldp	x23, x24, [sp, #48]
   398cc:	ldp	x25, x26, [sp, #64]
   398d0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   398d4:	mov	w1, #0x1                   	// #1
   398d8:	str	w1, [x19, #304]
   398dc:	b	393d0 <__asan_backtrace_create_state@@Base+0x57e8>
   398e0:	mov	w1, #0x1                   	// #1
   398e4:	str	w1, [x19, #304]
   398e8:	b	392a4 <__asan_backtrace_create_state@@Base+0x56bc>
   398ec:	mov	w21, #0x0                   	// #0
   398f0:	ldr	x4, [x19, #288]
   398f4:	b	34858 <__asan_backtrace_create_state@@Base+0xc70>
   398f8:	cbz	x25, 39fdc <__asan_backtrace_create_state@@Base+0x63f4>
   398fc:	ldr	w1, [x25, #4]
   39900:	cmp	w1, #0x1
   39904:	b.gt	39fdc <__asan_backtrace_create_state@@Base+0x63f4>
   39908:	ldr	w0, [x19, #308]
   3990c:	cmp	w0, #0x400
   39910:	b.gt	39fdc <__asan_backtrace_create_state@@Base+0x63f4>
   39914:	ldr	x3, [x19, #328]
   39918:	add	w1, w1, #0x1
   3991c:	add	w0, w0, #0x1
   39920:	add	x2, sp, #0x90
   39924:	str	w1, [x25, #4]
   39928:	mov	w1, w22
   3992c:	str	w0, [x19, #308]
   39930:	mov	x0, x2
   39934:	str	x0, [x19, #328]
   39938:	mov	x2, x25
   3993c:	mov	x0, x19
   39940:	stp	x25, x3, [sp, #144]
   39944:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   39948:	ldr	w1, [x25, #4]
   3994c:	ldr	x0, [sp, #152]
   39950:	sub	w1, w1, #0x1
   39954:	ldp	x21, x22, [sp, #32]
   39958:	ldp	x23, x24, [sp, #48]
   3995c:	str	x0, [x19, #328]
   39960:	ldr	w0, [x19, #308]
   39964:	str	w1, [x25, #4]
   39968:	sub	w0, w0, #0x1
   3996c:	ldp	x25, x26, [sp, #64]
   39970:	str	w0, [x19, #308]
   39974:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39978:	add	x1, x0, #0x2
   3997c:	str	x1, [x19, #256]
   39980:	mov	w2, #0x75                  	// #117
   39984:	strb	w2, [x19, x3]
   39988:	strb	w2, [x19, #264]
   3998c:	cmp	x1, #0xff
   39990:	b.ne	39a60 <__asan_backtrace_create_state@@Base+0x5e78>  // b.any
   39994:	ldp	x3, x2, [x19, #272]
   39998:	strb	wzr, [x19, #255]
   3999c:	mov	x0, x19
   399a0:	blr	x3
   399a4:	ldr	x1, [x19, #320]
   399a8:	mov	w2, #0x74                  	// #116
   399ac:	mov	x0, #0x1                   	// #1
   399b0:	strb	w2, [x19]
   399b4:	add	x1, x1, x0
   399b8:	str	x1, [x19, #320]
   399bc:	b	36a80 <__asan_backtrace_create_state@@Base+0x2e98>
   399c0:	ldr	x25, [x25, #8]
   399c4:	cbz	x25, 3acb8 <__asan_backtrace_create_state@@Base+0x70d0>
   399c8:	ldr	w4, [x25]
   399cc:	add	x1, x21, #0x20
   399d0:	stp	x1, x25, [sp, #208]
   399d4:	sub	w1, w4, #0x1c
   399d8:	str	wzr, [sp, #224]
   399dc:	cmp	w1, #0x34
   399e0:	str	x3, [sp, #232]
   399e4:	b.hi	3aab8 <__asan_backtrace_create_state@@Base+0x6ed0>  // b.pmore
   399e8:	lsl	x0, x0, x1
   399ec:	add	x1, x21, #0x40
   399f0:	tst	x0, x2
   399f4:	b.eq	36760 <__asan_backtrace_create_state@@Base+0x2b78>  // b.none
   399f8:	ldr	x25, [x25, #8]
   399fc:	cbz	x25, 39ef4 <__asan_backtrace_create_state@@Base+0x630c>
   39a00:	ldr	w4, [x25]
   39a04:	stp	x1, x25, [sp, #240]
   39a08:	sub	w0, w4, #0x1c
   39a0c:	str	wzr, [sp, #256]
   39a10:	cmp	w0, #0x34
   39a14:	str	x3, [sp, #264]
   39a18:	b.hi	3ac10 <__asan_backtrace_create_state@@Base+0x7028>  // b.pmore
   39a1c:	mov	x1, #0x1f                  	// #31
   39a20:	mov	x2, #0x1                   	// #1
   39a24:	movk	x1, #0x1a, lsl #48
   39a28:	lsl	x0, x2, x0
   39a2c:	mov	w20, #0x4                   	// #4
   39a30:	tst	x0, x1
   39a34:	add	x1, x21, #0x60
   39a38:	b.eq	36760 <__asan_backtrace_create_state@@Base+0x2b78>  // b.none
   39a3c:	ldr	x0, [x25, #8]
   39a40:	mov	x21, x1
   39a44:	cbz	x0, 39ef8 <__asan_backtrace_create_state@@Base+0x6310>
   39a48:	ldp	x21, x22, [sp, #32]
   39a4c:	ldp	x23, x24, [sp, #48]
   39a50:	ldp	x25, x26, [sp, #64]
   39a54:	str	x1, [x19, #296]
   39a58:	str	w2, [x19, #304]
   39a5c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39a60:	add	x0, x0, #0x3
   39a64:	str	x0, [x19, #256]
   39a68:	mov	w2, #0x74                  	// #116
   39a6c:	strb	w2, [x19, x1]
   39a70:	strb	w2, [x19, #264]
   39a74:	cmp	x0, #0xff
   39a78:	b.ne	3a040 <__asan_backtrace_create_state@@Base+0x6458>  // b.any
   39a7c:	ldp	x3, x2, [x19, #272]
   39a80:	strb	wzr, [x19, #255]
   39a84:	mov	x1, x0
   39a88:	mov	x0, x19
   39a8c:	blr	x3
   39a90:	ldr	x0, [x19, #320]
   39a94:	mov	w2, #0x6f                  	// #111
   39a98:	mov	x1, #0x1                   	// #1
   39a9c:	strb	w2, [x19]
   39aa0:	add	x0, x0, x1
   39aa4:	str	x0, [x19, #320]
   39aa8:	b	36a8c <__asan_backtrace_create_state@@Base+0x2ea4>
   39aac:	mov	x23, #0x1                   	// #1
   39ab0:	b	3891c <__asan_backtrace_create_state@@Base+0x4d34>
   39ab4:	ldp	x21, x22, [sp, #32]
   39ab8:	ldp	x23, x24, [sp, #48]
   39abc:	ldp	x25, x26, [sp, #64]
   39ac0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39ac4:	ldr	x0, [x23, #8]
   39ac8:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   39acc:	add	x1, x1, #0xf00
   39ad0:	ldr	x21, [x0]
   39ad4:	mov	x0, x21
   39ad8:	bl	6b30 <__asan_internal_strcmp@plt>
   39adc:	cbz	w0, 3a780 <__asan_backtrace_create_state@@Base+0x6b98>
   39ae0:	ldr	w0, [x20]
   39ae4:	cmp	w0, #0x39
   39ae8:	b.eq	39b98 <__asan_backtrace_create_state@@Base+0x5fb0>  // b.none
   39aec:	cbz	x21, 39b1c <__asan_backtrace_create_state@@Base+0x5f34>
   39af0:	mov	x0, x21
   39af4:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   39af8:	add	x1, x1, #0xf08
   39afc:	bl	6b30 <__asan_internal_strcmp@plt>
   39b00:	mov	w3, w0
   39b04:	cbz	w0, 3ac2c <__asan_backtrace_create_state@@Base+0x7044>
   39b08:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   39b0c:	mov	x0, x21
   39b10:	add	x1, x1, #0x8
   39b14:	bl	6b30 <__asan_internal_strcmp@plt>
   39b18:	cbz	w0, 39b24 <__asan_backtrace_create_state@@Base+0x5f3c>
   39b1c:	ldr	w0, [x23]
   39b20:	b	35ff4 <__asan_backtrace_create_state@@Base+0x240c>
   39b24:	mov	w3, #0x0                   	// #0
   39b28:	b	39b38 <__asan_backtrace_create_state@@Base+0x5f50>
   39b2c:	add	w3, w3, #0x1
   39b30:	ldr	x20, [x20, #16]
   39b34:	cbz	x20, 3a764 <__asan_backtrace_create_state@@Base+0x6b7c>
   39b38:	ldr	w0, [x20]
   39b3c:	cmp	w0, #0x2f
   39b40:	b.ne	3a764 <__asan_backtrace_create_state@@Base+0x6b7c>  // b.any
   39b44:	ldr	x0, [x20, #8]
   39b48:	cbz	x0, 3a764 <__asan_backtrace_create_state@@Base+0x6b7c>
   39b4c:	ldr	w1, [x0]
   39b50:	cmp	w1, #0x4b
   39b54:	b.ne	39b2c <__asan_backtrace_create_state@@Base+0x5f44>  // b.any
   39b58:	ldr	x1, [x0, #8]
   39b5c:	mov	x0, x19
   39b60:	bl	33fe0 <__asan_backtrace_create_state@@Base+0x3f8>
   39b64:	mov	w1, #0x0                   	// #0
   39b68:	cbnz	x0, 39b84 <__asan_backtrace_create_state@@Base+0x5f9c>
   39b6c:	b	39b90 <__asan_backtrace_create_state@@Base+0x5fa8>
   39b70:	ldr	x2, [x0, #8]
   39b74:	cbz	x2, 39b90 <__asan_backtrace_create_state@@Base+0x5fa8>
   39b78:	ldr	x0, [x0, #16]
   39b7c:	add	w1, w1, #0x1
   39b80:	cbz	x0, 39b90 <__asan_backtrace_create_state@@Base+0x5fa8>
   39b84:	ldr	w2, [x0]
   39b88:	cmp	w2, #0x2f
   39b8c:	b.eq	39b70 <__asan_backtrace_create_state@@Base+0x5f88>  // b.none
   39b90:	add	w3, w3, w1
   39b94:	b	39b30 <__asan_backtrace_create_state@@Base+0x5f48>
   39b98:	ldr	x2, [x20, #8]
   39b9c:	mov	w1, w22
   39ba0:	mov	x0, x19
   39ba4:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   39ba8:	mov	x2, x23
   39bac:	mov	w1, w22
   39bb0:	mov	x0, x19
   39bb4:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   39bb8:	ldp	x21, x22, [sp, #32]
   39bbc:	ldp	x23, x24, [sp, #48]
   39bc0:	ldp	x25, x26, [sp, #64]
   39bc4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39bc8:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   39bcc:	add	x20, x20, #0xcd8
   39bd0:	mov	x0, x20
   39bd4:	bl	67e0 <__asan_internal_strlen@plt>
   39bd8:	cbz	x0, 39c58 <__asan_backtrace_create_state@@Base+0x6070>
   39bdc:	add	x24, x20, x0
   39be0:	mov	x25, #0x1                   	// #1
   39be4:	ldr	x1, [x19, #256]
   39be8:	b	39c44 <__asan_backtrace_create_state@@Base+0x605c>
   39bec:	ldp	x3, x2, [x19, #272]
   39bf0:	strb	wzr, [x19, #255]
   39bf4:	mov	x0, x19
   39bf8:	add	x20, x20, #0x1
   39bfc:	blr	x3
   39c00:	strb	w21, [x19]
   39c04:	ldr	x0, [x19, #320]
   39c08:	str	x25, [x19, #256]
   39c0c:	strb	w21, [x19, #264]
   39c10:	cmp	x20, x24
   39c14:	add	x0, x0, #0x1
   39c18:	str	x0, [x19, #320]
   39c1c:	b.eq	39c58 <__asan_backtrace_create_state@@Base+0x6070>  // b.none
   39c20:	ldrb	w21, [x20]
   39c24:	mov	x0, #0x1                   	// #1
   39c28:	add	x1, x0, #0x1
   39c2c:	str	x1, [x19, #256]
   39c30:	strb	w21, [x19, x0]
   39c34:	add	x20, x20, #0x1
   39c38:	strb	w21, [x19, #264]
   39c3c:	cmp	x24, x20
   39c40:	b.eq	39c58 <__asan_backtrace_create_state@@Base+0x6070>  // b.none
   39c44:	ldrb	w21, [x20]
   39c48:	cmp	x1, #0xff
   39c4c:	b.eq	39bec <__asan_backtrace_create_state@@Base+0x6004>  // b.none
   39c50:	mov	x0, x1
   39c54:	b	39c28 <__asan_backtrace_create_state@@Base+0x6040>
   39c58:	ldr	w2, [x23, #16]
   39c5c:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   39c60:	add	x1, x1, #0x160
   39c64:	add	x20, sp, #0x90
   39c68:	add	w2, w2, #0x1
   39c6c:	mov	x0, x20
   39c70:	bl	6900 <sprintf@plt>
   39c74:	mov	x0, x20
   39c78:	bl	67e0 <__asan_internal_strlen@plt>
   39c7c:	cbz	x0, 39cfc <__asan_backtrace_create_state@@Base+0x6114>
   39c80:	add	x24, x20, x0
   39c84:	mov	x25, #0x1                   	// #1
   39c88:	ldr	x1, [x19, #256]
   39c8c:	b	39ce8 <__asan_backtrace_create_state@@Base+0x6100>
   39c90:	ldp	x3, x2, [x19, #272]
   39c94:	strb	wzr, [x19, #255]
   39c98:	mov	x0, x19
   39c9c:	add	x20, x20, #0x1
   39ca0:	blr	x3
   39ca4:	strb	w21, [x19]
   39ca8:	ldr	x0, [x19, #320]
   39cac:	str	x25, [x19, #256]
   39cb0:	strb	w21, [x19, #264]
   39cb4:	cmp	x20, x24
   39cb8:	add	x0, x0, #0x1
   39cbc:	str	x0, [x19, #320]
   39cc0:	b.eq	39cfc <__asan_backtrace_create_state@@Base+0x6114>  // b.none
   39cc4:	ldrb	w21, [x20]
   39cc8:	mov	x0, #0x1                   	// #1
   39ccc:	add	x1, x0, #0x1
   39cd0:	str	x1, [x19, #256]
   39cd4:	strb	w21, [x19, x0]
   39cd8:	add	x20, x20, #0x1
   39cdc:	strb	w21, [x19, #264]
   39ce0:	cmp	x20, x24
   39ce4:	b.eq	39cfc <__asan_backtrace_create_state@@Base+0x6114>  // b.none
   39ce8:	ldrb	w21, [x20]
   39cec:	cmp	x1, #0xff
   39cf0:	b.eq	39c90 <__asan_backtrace_create_state@@Base+0x60a8>  // b.none
   39cf4:	mov	x0, x1
   39cf8:	b	39ccc <__asan_backtrace_create_state@@Base+0x60e4>
   39cfc:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   39d00:	add	x20, x20, #0xce8
   39d04:	mov	x0, x20
   39d08:	bl	67e0 <__asan_internal_strlen@plt>
   39d0c:	cbz	x0, 38560 <__asan_backtrace_create_state@@Base+0x4978>
   39d10:	add	x24, x20, x0
   39d14:	mov	x25, #0x1                   	// #1
   39d18:	ldr	x1, [x19, #256]
   39d1c:	b	39d78 <__asan_backtrace_create_state@@Base+0x6190>
   39d20:	ldp	x3, x2, [x19, #272]
   39d24:	strb	wzr, [x19, #255]
   39d28:	mov	x0, x19
   39d2c:	add	x20, x20, #0x1
   39d30:	blr	x3
   39d34:	strb	w21, [x19]
   39d38:	ldr	x0, [x19, #320]
   39d3c:	str	x25, [x19, #256]
   39d40:	strb	w21, [x19, #264]
   39d44:	cmp	x20, x24
   39d48:	add	x0, x0, #0x1
   39d4c:	str	x0, [x19, #320]
   39d50:	b.eq	38560 <__asan_backtrace_create_state@@Base+0x4978>  // b.none
   39d54:	ldrb	w21, [x20]
   39d58:	mov	x0, #0x1                   	// #1
   39d5c:	add	x1, x0, #0x1
   39d60:	str	x1, [x19, #256]
   39d64:	strb	w21, [x19, x0]
   39d68:	add	x20, x20, #0x1
   39d6c:	strb	w21, [x19, #264]
   39d70:	cmp	x24, x20
   39d74:	b.eq	38560 <__asan_backtrace_create_state@@Base+0x4978>  // b.none
   39d78:	ldrb	w21, [x20]
   39d7c:	cmp	x1, #0xff
   39d80:	b.eq	39d20 <__asan_backtrace_create_state@@Base+0x6138>  // b.none
   39d84:	mov	x0, x1
   39d88:	b	39d5c <__asan_backtrace_create_state@@Base+0x6174>
   39d8c:	ldr	x25, [x25, #16]
   39d90:	ldr	w4, [x25]
   39d94:	cmp	w4, #0x47
   39d98:	b.eq	3a934 <__asan_backtrace_create_state@@Base+0x6d4c>  // b.none
   39d9c:	sub	w2, w4, #0x1c
   39da0:	cmp	w2, #0x34
   39da4:	b.hi	3676c <__asan_backtrace_create_state@@Base+0x2b84>  // b.pmore
   39da8:	mov	x0, #0x1                   	// #1
   39dac:	mov	x1, #0x1f                  	// #31
   39db0:	movk	x1, #0x1a, lsl #48
   39db4:	lsl	x2, x0, x2
   39db8:	tst	x2, x1
   39dbc:	b.eq	3676c <__asan_backtrace_create_state@@Base+0x2b84>  // b.none
   39dc0:	cmp	w20, #0x4
   39dc4:	b.eq	39efc <__asan_backtrace_create_state@@Base+0x6314>  // b.none
   39dc8:	sub	w2, w20, #0x1
   39dcc:	ubfiz	x8, x20, #5, #32
   39dd0:	add	x7, x21, x8
   39dd4:	add	x9, sp, #0x98
   39dd8:	add	x12, x21, x2, lsl #5
   39ddc:	lsl	x2, x2, #5
   39de0:	add	x11, sp, #0xa0
   39de4:	add	x10, sp, #0xa8
   39de8:	add	w6, w20, #0x1
   39dec:	ldp	x4, x5, [x12]
   39df0:	stp	x4, x5, [x7]
   39df4:	ldp	x4, x5, [x12, #16]
   39df8:	stp	x4, x5, [x7, #16]
   39dfc:	str	x12, [x21, x8]
   39e00:	str	x25, [x9, x2]
   39e04:	ldr	x25, [x25, #8]
   39e08:	str	wzr, [x11, x2]
   39e0c:	str	x3, [x10, x2]
   39e10:	ldr	w4, [x25]
   39e14:	str	x7, [x19, #296]
   39e18:	sub	w2, w4, #0x1c
   39e1c:	cmp	w2, #0x34
   39e20:	b.hi	39e30 <__asan_backtrace_create_state@@Base+0x6248>  // b.pmore
   39e24:	lsl	x2, x0, x2
   39e28:	tst	x2, x1
   39e2c:	b.ne	39e38 <__asan_backtrace_create_state@@Base+0x6250>  // b.any
   39e30:	mov	w20, w6
   39e34:	b	3676c <__asan_backtrace_create_state@@Base+0x2b84>
   39e38:	cmp	w6, #0x4
   39e3c:	b.eq	39efc <__asan_backtrace_create_state@@Base+0x6314>  // b.none
   39e40:	ubfiz	x6, x6, #5, #32
   39e44:	add	w20, w20, #0x2
   39e48:	add	x2, x21, x6
   39e4c:	ldp	x4, x5, [x7]
   39e50:	stp	x4, x5, [x2]
   39e54:	ldp	x4, x5, [x7, #16]
   39e58:	stp	x4, x5, [x2, #16]
   39e5c:	str	x7, [x21, x6]
   39e60:	str	x25, [x9, x8]
   39e64:	ldr	x25, [x25, #8]
   39e68:	str	wzr, [x11, x8]
   39e6c:	str	x3, [x10, x8]
   39e70:	ldr	w4, [x25]
   39e74:	str	x2, [x19, #296]
   39e78:	sub	w2, w4, #0x1c
   39e7c:	cmp	w2, #0x34
   39e80:	b.hi	3676c <__asan_backtrace_create_state@@Base+0x2b84>  // b.pmore
   39e84:	lsl	x0, x0, x2
   39e88:	tst	x0, x1
   39e8c:	b.eq	3676c <__asan_backtrace_create_state@@Base+0x2b84>  // b.none
   39e90:	cmp	w20, #0x4
   39e94:	b.eq	39efc <__asan_backtrace_create_state@@Base+0x6314>  // b.none
   39e98:	ldp	x0, x1, [sp, #208]
   39e9c:	str	x25, [sp, #216]
   39ea0:	ldr	x25, [x25, #8]
   39ea4:	stp	x0, x1, [sp, #240]
   39ea8:	add	x1, x21, #0x40
   39eac:	ldp	x6, x7, [sp, #224]
   39eb0:	add	x0, x21, #0x60
   39eb4:	ldr	w4, [x25]
   39eb8:	str	wzr, [sp, #224]
   39ebc:	stp	x3, x1, [sp, #232]
   39ec0:	sub	w2, w4, #0x1c
   39ec4:	cmp	w2, #0x34
   39ec8:	stp	x6, x7, [sp, #256]
   39ecc:	str	x0, [x19, #296]
   39ed0:	b.hi	39eec <__asan_backtrace_create_state@@Base+0x6304>  // b.pmore
   39ed4:	mov	x0, #0x1                   	// #1
   39ed8:	mov	x1, #0x1f                  	// #31
   39edc:	movk	x1, #0x1a, lsl #48
   39ee0:	lsl	x0, x0, x2
   39ee4:	tst	x0, x1
   39ee8:	b.ne	39efc <__asan_backtrace_create_state@@Base+0x6314>  // b.any
   39eec:	mov	w20, #0x4                   	// #4
   39ef0:	b	3676c <__asan_backtrace_create_state@@Base+0x2b84>
   39ef4:	add	x21, x21, #0x40
   39ef8:	str	x21, [x19, #296]
   39efc:	mov	w0, #0x1                   	// #1
   39f00:	ldp	x21, x22, [sp, #32]
   39f04:	ldp	x23, x24, [sp, #48]
   39f08:	ldp	x25, x26, [sp, #64]
   39f0c:	str	w0, [x19, #304]
   39f10:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39f14:	mov	w0, #0x1                   	// #1
   39f18:	ldp	x21, x22, [sp, #32]
   39f1c:	ldp	x23, x24, [sp, #48]
   39f20:	ldp	x25, x26, [sp, #64]
   39f24:	str	w0, [x19, #304]
   39f28:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39f2c:	mov	w1, #0x1                   	// #1
   39f30:	str	w1, [x19, #304]
   39f34:	b	360e8 <__asan_backtrace_create_state@@Base+0x2500>
   39f38:	ldr	x1, [x19, #288]
   39f3c:	add	x0, sp, #0x90
   39f40:	stp	x3, x24, [sp, #144]
   39f44:	str	wzr, [sp, #160]
   39f48:	str	x1, [sp, #168]
   39f4c:	ldr	w1, [x20, #4]
   39f50:	str	x0, [x19, #296]
   39f54:	cmp	w1, #0x1
   39f58:	b.gt	3a4a4 <__asan_backtrace_create_state@@Base+0x68bc>
   39f5c:	ldr	w0, [x19, #308]
   39f60:	cmp	w0, #0x400
   39f64:	b.gt	3a4a4 <__asan_backtrace_create_state@@Base+0x68bc>
   39f68:	add	w1, w1, #0x1
   39f6c:	add	w0, w0, #0x1
   39f70:	ldr	x3, [x19, #328]
   39f74:	str	w1, [x20, #4]
   39f78:	add	x1, sp, #0x80
   39f7c:	str	w0, [x19, #308]
   39f80:	mov	x0, x1
   39f84:	str	x0, [x19, #328]
   39f88:	mov	x2, x20
   39f8c:	mov	w1, w21
   39f90:	mov	x0, x19
   39f94:	stp	x20, x3, [sp, #128]
   39f98:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   39f9c:	ldr	w1, [x20, #4]
   39fa0:	ldr	x0, [sp, #136]
   39fa4:	sub	w1, w1, #0x1
   39fa8:	ldr	w2, [sp, #160]
   39fac:	str	x0, [x19, #328]
   39fb0:	ldr	w0, [x19, #308]
   39fb4:	str	w1, [x20, #4]
   39fb8:	ldr	x1, [sp, #144]
   39fbc:	sub	w0, w0, #0x1
   39fc0:	str	x1, [x19, #296]
   39fc4:	str	w0, [x19, #308]
   39fc8:	cbz	w2, 3a4b0 <__asan_backtrace_create_state@@Base+0x68c8>
   39fcc:	ldp	x21, x22, [sp, #32]
   39fd0:	ldp	x23, x24, [sp, #48]
   39fd4:	ldp	x25, x26, [sp, #64]
   39fd8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39fdc:	mov	w0, #0x1                   	// #1
   39fe0:	ldp	x21, x22, [sp, #32]
   39fe4:	ldp	x23, x24, [sp, #48]
   39fe8:	ldp	x25, x26, [sp, #64]
   39fec:	str	w0, [x19, #304]
   39ff0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   39ff4:	mov	w0, #0x1                   	// #1
   39ff8:	ldp	x21, x22, [sp, #32]
   39ffc:	ldp	x23, x24, [sp, #48]
   3a000:	ldp	x25, x26, [sp, #64]
   3a004:	str	w0, [x19, #304]
   3a008:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a00c:	ldp	x3, x2, [x19, #272]
   3a010:	strb	wzr, [x19, #255]
   3a014:	mov	x1, x0
   3a018:	mov	x0, x19
   3a01c:	blr	x3
   3a020:	ldr	x1, [x19, #320]
   3a024:	mov	w3, #0x7561                	// #30049
   3a028:	mov	w2, #0x74                  	// #116
   3a02c:	mov	x0, #0x3                   	// #3
   3a030:	add	x1, x1, #0x1
   3a034:	strh	w3, [x19]
   3a038:	strb	w2, [x19, #2]
   3a03c:	str	x1, [x19, #320]
   3a040:	add	x1, x0, #0x1
   3a044:	str	x1, [x19, #256]
   3a048:	mov	w2, #0x6f                  	// #111
   3a04c:	strb	w2, [x19, x0]
   3a050:	strb	w2, [x19, #264]
   3a054:	cmp	x1, #0xff
   3a058:	b.ne	36a8c <__asan_backtrace_create_state@@Base+0x2ea4>  // b.any
   3a05c:	ldp	x3, x2, [x19, #272]
   3a060:	strb	wzr, [x19, #255]
   3a064:	mov	x0, x19
   3a068:	blr	x3
   3a06c:	ldr	x2, [x19, #320]
   3a070:	mov	x0, #0x1                   	// #1
   3a074:	mov	x1, #0x0                   	// #0
   3a078:	add	x2, x2, x0
   3a07c:	str	x2, [x19, #320]
   3a080:	b	36a90 <__asan_backtrace_create_state@@Base+0x2ea8>
   3a084:	ldr	w4, [x19, #344]
   3a088:	ldr	x5, [x19, #336]
   3a08c:	cmp	w4, #0x0
   3a090:	b.le	3aaf8 <__asan_backtrace_create_state@@Base+0x6f10>
   3a094:	sub	w2, w4, #0x1
   3a098:	add	x0, x5, #0x10
   3a09c:	mov	x1, x5
   3a0a0:	add	x2, x0, w2, uxtw #4
   3a0a4:	b	3a0b4 <__asan_backtrace_create_state@@Base+0x64cc>
   3a0a8:	add	x1, x1, #0x10
   3a0ac:	cmp	x2, x1
   3a0b0:	b.eq	3aaf8 <__asan_backtrace_create_state@@Base+0x6f10>  // b.none
   3a0b4:	ldr	x0, [x1]
   3a0b8:	cmp	x3, x0
   3a0bc:	b.ne	3a0a8 <__asan_backtrace_create_state@@Base+0x64c0>  // b.any
   3a0c0:	ldr	x4, [x19, #328]
   3a0c4:	mov	x0, x4
   3a0c8:	cbnz	x4, 3a0e4 <__asan_backtrace_create_state@@Base+0x64fc>
   3a0cc:	b	3a944 <__asan_backtrace_create_state@@Base+0x6d5c>
   3a0d0:	cmp	x2, x24
   3a0d4:	ccmp	x4, x0, #0x4, eq  // eq = none
   3a0d8:	b.ne	3a0f0 <__asan_backtrace_create_state@@Base+0x6508>  // b.any
   3a0dc:	ldr	x0, [x0, #8]
   3a0e0:	cbz	x0, 3a944 <__asan_backtrace_create_state@@Base+0x6d5c>
   3a0e4:	ldr	x2, [x0]
   3a0e8:	cmp	x2, x3
   3a0ec:	b.ne	3a0d0 <__asan_backtrace_create_state@@Base+0x64e8>  // b.any
   3a0f0:	ldr	x4, [x19, #288]
   3a0f4:	cbz	x4, 34748 <__asan_backtrace_create_state@@Base+0xb60>
   3a0f8:	mov	w21, #0x0                   	// #0
   3a0fc:	ldr	x2, [x3, #8]
   3a100:	ldr	x0, [x4, #8]
   3a104:	mov	w1, w2
   3a108:	ldr	x0, [x0, #16]
   3a10c:	tbnz	w2, #31, 3a730 <__asan_backtrace_create_state@@Base+0x6b48>
   3a110:	cbnz	x0, 3a128 <__asan_backtrace_create_state@@Base+0x6540>
   3a114:	b	3a134 <__asan_backtrace_create_state@@Base+0x654c>
   3a118:	cbz	w1, 3a72c <__asan_backtrace_create_state@@Base+0x6b44>
   3a11c:	ldr	x0, [x0, #16]
   3a120:	sub	w1, w1, #0x1
   3a124:	cbz	x0, 3a134 <__asan_backtrace_create_state@@Base+0x654c>
   3a128:	ldr	w2, [x0]
   3a12c:	cmp	w2, #0x2f
   3a130:	b.eq	3a118 <__asan_backtrace_create_state@@Base+0x6530>  // b.none
   3a134:	cbz	w21, 34748 <__asan_backtrace_create_state@@Base+0xb60>
   3a138:	ldp	x21, x22, [sp, #32]
   3a13c:	ldp	x25, x26, [sp, #64]
   3a140:	str	x23, [x19, #288]
   3a144:	ldp	x23, x24, [sp, #48]
   3a148:	b	34754 <__asan_backtrace_create_state@@Base+0xb6c>
   3a14c:	ldrb	w0, [x0]
   3a150:	sub	w1, w0, #0x72
   3a154:	sub	w0, w0, #0x63
   3a158:	and	w1, w1, #0xff
   3a15c:	and	w0, w0, #0xff
   3a160:	cmp	w1, #0x1
   3a164:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   3a168:	b.hi	35d94 <__asan_backtrace_create_state@@Base+0x21ac>  // b.pmore
   3a16c:	mov	w1, w22
   3a170:	mov	x0, x19
   3a174:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3a178:	ldr	x1, [x19, #256]
   3a17c:	cmp	x1, #0xff
   3a180:	b.ne	3a1a8 <__asan_backtrace_create_state@@Base+0x65c0>  // b.any
   3a184:	ldp	x3, x2, [x19, #272]
   3a188:	strb	wzr, [x19, #255]
   3a18c:	mov	x0, x19
   3a190:	blr	x3
   3a194:	str	xzr, [x19, #256]
   3a198:	ldr	x0, [x19, #320]
   3a19c:	mov	x1, #0x0                   	// #0
   3a1a0:	add	x0, x0, #0x1
   3a1a4:	str	x0, [x19, #320]
   3a1a8:	add	x0, x1, #0x1
   3a1ac:	str	x0, [x19, #256]
   3a1b0:	mov	w0, #0x3c                  	// #60
   3a1b4:	strb	w0, [x19, x1]
   3a1b8:	strb	w0, [x19, #264]
   3a1bc:	ldr	x0, [x24, #16]
   3a1c0:	ldr	x20, [x0, #8]
   3a1c4:	cbz	x20, 3a7b0 <__asan_backtrace_create_state@@Base+0x6bc8>
   3a1c8:	ldr	w1, [x20, #4]
   3a1cc:	cmp	w1, #0x1
   3a1d0:	b.gt	3a7b0 <__asan_backtrace_create_state@@Base+0x6bc8>
   3a1d4:	ldr	w0, [x19, #308]
   3a1d8:	cmp	w0, #0x400
   3a1dc:	b.gt	3a7b0 <__asan_backtrace_create_state@@Base+0x6bc8>
   3a1e0:	add	w1, w1, #0x1
   3a1e4:	add	w0, w0, #0x1
   3a1e8:	ldr	x3, [x19, #328]
   3a1ec:	str	w1, [x20, #4]
   3a1f0:	add	x1, sp, #0x90
   3a1f4:	str	w0, [x19, #308]
   3a1f8:	mov	x0, x1
   3a1fc:	str	x0, [x19, #328]
   3a200:	mov	w1, w22
   3a204:	mov	x0, x19
   3a208:	mov	x2, x20
   3a20c:	stp	x20, x3, [sp, #144]
   3a210:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3a214:	ldr	w1, [x20, #4]
   3a218:	ldr	x0, [sp, #152]
   3a21c:	str	x0, [x19, #328]
   3a220:	ldr	w0, [x19, #308]
   3a224:	sub	w1, w1, #0x1
   3a228:	str	w1, [x20, #4]
   3a22c:	sub	w0, w0, #0x1
   3a230:	str	w0, [x19, #308]
   3a234:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3a238:	add	x20, x20, #0xf18
   3a23c:	mov	x0, x20
   3a240:	bl	67e0 <__asan_internal_strlen@plt>
   3a244:	cbz	x0, 3a514 <__asan_backtrace_create_state@@Base+0x692c>
   3a248:	add	x23, x20, x0
   3a24c:	mov	x25, #0x1                   	// #1
   3a250:	ldr	x1, [x19, #256]
   3a254:	b	3a2b0 <__asan_backtrace_create_state@@Base+0x66c8>
   3a258:	ldp	x3, x2, [x19, #272]
   3a25c:	strb	wzr, [x19, #255]
   3a260:	mov	x0, x19
   3a264:	add	x20, x20, #0x1
   3a268:	blr	x3
   3a26c:	strb	w21, [x19]
   3a270:	ldr	x0, [x19, #320]
   3a274:	str	x25, [x19, #256]
   3a278:	strb	w21, [x19, #264]
   3a27c:	cmp	x20, x23
   3a280:	add	x0, x0, #0x1
   3a284:	str	x0, [x19, #320]
   3a288:	b.eq	3a514 <__asan_backtrace_create_state@@Base+0x692c>  // b.none
   3a28c:	ldrb	w21, [x20]
   3a290:	mov	x0, #0x1                   	// #1
   3a294:	add	x1, x0, #0x1
   3a298:	str	x1, [x19, #256]
   3a29c:	strb	w21, [x19, x0]
   3a2a0:	add	x20, x20, #0x1
   3a2a4:	strb	w21, [x19, #264]
   3a2a8:	cmp	x20, x23
   3a2ac:	b.eq	3a514 <__asan_backtrace_create_state@@Base+0x692c>  // b.none
   3a2b0:	ldrb	w21, [x20]
   3a2b4:	cmp	x1, #0xff
   3a2b8:	b.eq	3a258 <__asan_backtrace_create_state@@Base+0x6670>  // b.none
   3a2bc:	mov	x0, x1
   3a2c0:	b	3a294 <__asan_backtrace_create_state@@Base+0x66ac>
   3a2c4:	add	x3, x2, #0x10
   3a2c8:	mov	w1, w22
   3a2cc:	ldr	x2, [x2, #8]
   3a2d0:	mov	x0, x19
   3a2d4:	bl	3b188 <__asan_backtrace_create_state@@Base+0x75a0>
   3a2d8:	cbnz	w0, 3a898 <__asan_backtrace_create_state@@Base+0x6cb0>
   3a2dc:	ldp	x20, x3, [x24, #8]
   3a2e0:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3a2e4:	add	x1, x1, #0xf30
   3a2e8:	ldr	x0, [x20, #8]
   3a2ec:	ldp	x23, x2, [x3, #8]
   3a2f0:	ldr	x0, [x0]
   3a2f4:	ldp	x24, x21, [x2, #8]
   3a2f8:	bl	6b30 <__asan_internal_strcmp@plt>
   3a2fc:	cbnz	w0, 3aa08 <__asan_backtrace_create_state@@Base+0x6e20>
   3a300:	mov	x2, x23
   3a304:	mov	w1, w22
   3a308:	mov	x0, x19
   3a30c:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3a310:	mov	x2, x20
   3a314:	mov	w1, w22
   3a318:	mov	x0, x19
   3a31c:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3a320:	mov	x2, x24
   3a324:	mov	w1, w22
   3a328:	mov	x0, x19
   3a32c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3a330:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3a334:	add	x20, x20, #0xf38
   3a338:	mov	x0, x20
   3a33c:	bl	67e0 <__asan_internal_strlen@plt>
   3a340:	mov	x1, x20
   3a344:	mov	x2, x0
   3a348:	mov	x0, x19
   3a34c:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3a350:	mov	x2, x21
   3a354:	mov	w1, w22
   3a358:	mov	x0, x19
   3a35c:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3a360:	ldp	x21, x22, [sp, #32]
   3a364:	ldp	x23, x24, [sp, #48]
   3a368:	ldp	x25, x26, [sp, #64]
   3a36c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a370:	ldr	x0, [x19, #256]
   3a374:	cmp	x0, x23
   3a378:	b.eq	38aec <__asan_backtrace_create_state@@Base+0x4f04>  // b.none
   3a37c:	ldp	x21, x22, [sp, #32]
   3a380:	ldp	x23, x24, [sp, #48]
   3a384:	ldp	x25, x26, [sp, #64]
   3a388:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a38c:	ldp	x21, x22, [sp, #32]
   3a390:	ldp	x23, x24, [sp, #48]
   3a394:	ldp	x25, x26, [sp, #64]
   3a398:	ldp	x27, x28, [sp, #80]
   3a39c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a3a0:	ldp	x21, x22, [sp, #32]
   3a3a4:	ldp	x23, x24, [sp, #48]
   3a3a8:	ldp	x25, x26, [sp, #64]
   3a3ac:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a3b0:	ldp	x21, x22, [sp, #32]
   3a3b4:	ldp	x23, x24, [sp, #48]
   3a3b8:	ldp	x25, x26, [sp, #64]
   3a3bc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a3c0:	ldp	x21, x22, [sp, #32]
   3a3c4:	ldp	x23, x24, [sp, #48]
   3a3c8:	ldp	x25, x26, [sp, #64]
   3a3cc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a3d0:	ldr	w0, [x23, #4]
   3a3d4:	mov	x1, x2
   3a3d8:	cmp	w0, #0x1
   3a3dc:	b.le	34bd0 <__asan_backtrace_create_state@@Base+0xfe8>
   3a3e0:	b	39574 <__asan_backtrace_create_state@@Base+0x598c>
   3a3e4:	ldp	x21, x22, [sp, #32]
   3a3e8:	ldp	x23, x24, [sp, #48]
   3a3ec:	ldp	x25, x26, [sp, #64]
   3a3f0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a3f4:	ldp	x21, x22, [sp, #32]
   3a3f8:	ldp	x23, x24, [sp, #48]
   3a3fc:	ldp	x25, x26, [sp, #64]
   3a400:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a404:	cbz	x20, 3a694 <__asan_backtrace_create_state@@Base+0x6aac>
   3a408:	ldr	w1, [x20, #4]
   3a40c:	cmp	w1, #0x1
   3a410:	b.gt	3a694 <__asan_backtrace_create_state@@Base+0x6aac>
   3a414:	ldr	w0, [x19, #308]
   3a418:	cmp	w0, #0x400
   3a41c:	b.gt	3a694 <__asan_backtrace_create_state@@Base+0x6aac>
   3a420:	ldr	x3, [x19, #328]
   3a424:	add	w1, w1, #0x1
   3a428:	add	w0, w0, #0x1
   3a42c:	add	x2, sp, #0x90
   3a430:	str	w1, [x20, #4]
   3a434:	mov	w1, w22
   3a438:	str	w0, [x19, #308]
   3a43c:	mov	x0, x2
   3a440:	str	x0, [x19, #328]
   3a444:	mov	x2, x20
   3a448:	mov	x0, x19
   3a44c:	stp	x20, x3, [sp, #144]
   3a450:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3a454:	ldr	w1, [x20, #4]
   3a458:	ldr	x0, [sp, #152]
   3a45c:	sub	w1, w1, #0x1
   3a460:	ldp	x21, x22, [sp, #32]
   3a464:	ldp	x23, x24, [sp, #48]
   3a468:	ldp	x25, x26, [sp, #64]
   3a46c:	str	x0, [x19, #328]
   3a470:	ldr	w0, [x19, #308]
   3a474:	str	w1, [x20, #4]
   3a478:	sub	w0, w0, #0x1
   3a47c:	str	w0, [x19, #308]
   3a480:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a484:	ldp	x21, x22, [sp, #32]
   3a488:	ldp	x23, x24, [sp, #48]
   3a48c:	ldp	x25, x26, [sp, #64]
   3a490:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a494:	ldp	x21, x22, [sp, #32]
   3a498:	ldp	x23, x24, [sp, #48]
   3a49c:	ldp	x25, x26, [sp, #64]
   3a4a0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a4a4:	mov	w0, #0x1                   	// #1
   3a4a8:	str	x3, [x19, #296]
   3a4ac:	str	w0, [x19, #304]
   3a4b0:	ldr	x1, [x19, #256]
   3a4b4:	cmp	x1, #0xff
   3a4b8:	b.ne	3a4e0 <__asan_backtrace_create_state@@Base+0x68f8>  // b.any
   3a4bc:	ldp	x3, x2, [x19, #272]
   3a4c0:	strb	wzr, [x19, #255]
   3a4c4:	mov	x0, x19
   3a4c8:	blr	x3
   3a4cc:	str	xzr, [x19, #256]
   3a4d0:	ldr	x0, [x19, #320]
   3a4d4:	mov	x1, #0x0                   	// #0
   3a4d8:	add	x0, x0, #0x1
   3a4dc:	str	x0, [x19, #320]
   3a4e0:	add	x0, x1, #0x1
   3a4e4:	str	x0, [x19, #256]
   3a4e8:	mov	w0, #0x20                  	// #32
   3a4ec:	strb	w0, [x19, x1]
   3a4f0:	strb	w0, [x19, #264]
   3a4f4:	ldr	x3, [x19, #296]
   3a4f8:	b	35ba0 <__asan_backtrace_create_state@@Base+0x1fb8>
   3a4fc:	sub	w3, w0, #0x61
   3a500:	and	w3, w3, #0xff
   3a504:	cmp	w3, #0x5
   3a508:	b.hi	3abb4 <__asan_backtrace_create_state@@Base+0x6fcc>  // b.pmore
   3a50c:	sub	w0, w0, #0x57
   3a510:	b	38bc0 <__asan_backtrace_create_state@@Base+0x4fd8>
   3a514:	ldr	x0, [x24, #16]
   3a518:	ldr	x20, [x0, #16]
   3a51c:	cbz	x20, 3a758 <__asan_backtrace_create_state@@Base+0x6b70>
   3a520:	ldr	w1, [x20, #4]
   3a524:	cmp	w1, #0x1
   3a528:	b.gt	3a758 <__asan_backtrace_create_state@@Base+0x6b70>
   3a52c:	ldr	w0, [x19, #308]
   3a530:	cmp	w0, #0x400
   3a534:	b.gt	3a758 <__asan_backtrace_create_state@@Base+0x6b70>
   3a538:	ldr	x3, [x19, #328]
   3a53c:	add	w1, w1, #0x1
   3a540:	add	w0, w0, #0x1
   3a544:	add	x2, sp, #0x90
   3a548:	str	w1, [x20, #4]
   3a54c:	mov	w1, w22
   3a550:	str	w0, [x19, #308]
   3a554:	mov	x0, x2
   3a558:	str	x0, [x19, #328]
   3a55c:	mov	x2, x20
   3a560:	mov	x0, x19
   3a564:	stp	x20, x3, [sp, #144]
   3a568:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3a56c:	ldr	w1, [x20, #4]
   3a570:	ldr	x0, [sp, #152]
   3a574:	str	x0, [x19, #328]
   3a578:	ldr	w0, [x19, #308]
   3a57c:	sub	w1, w1, #0x1
   3a580:	str	w1, [x20, #4]
   3a584:	sub	w0, w0, #0x1
   3a588:	str	w0, [x19, #308]
   3a58c:	ldr	x1, [x19, #256]
   3a590:	cmp	x1, #0xff
   3a594:	b.ne	3a5bc <__asan_backtrace_create_state@@Base+0x69d4>  // b.any
   3a598:	ldp	x3, x2, [x19, #272]
   3a59c:	strb	wzr, [x19, #255]
   3a5a0:	mov	x0, x19
   3a5a4:	blr	x3
   3a5a8:	str	xzr, [x19, #256]
   3a5ac:	ldr	x0, [x19, #320]
   3a5b0:	mov	x1, #0x0                   	// #0
   3a5b4:	add	x0, x0, #0x1
   3a5b8:	str	x0, [x19, #320]
   3a5bc:	add	x0, x1, #0x1
   3a5c0:	str	x0, [x19, #256]
   3a5c4:	mov	w0, #0x29                  	// #41
   3a5c8:	strb	w0, [x19, x1]
   3a5cc:	strb	w0, [x19, #264]
   3a5d0:	ldp	x21, x22, [sp, #32]
   3a5d4:	ldp	x23, x24, [sp, #48]
   3a5d8:	ldp	x25, x26, [sp, #64]
   3a5dc:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a5e0:	cmp	x0, #0xff
   3a5e4:	b.ne	39598 <__asan_backtrace_create_state@@Base+0x59b0>  // b.any
   3a5e8:	ldp	x3, x2, [x19, #272]
   3a5ec:	strb	wzr, [x19, #255]
   3a5f0:	mov	x1, x0
   3a5f4:	mov	x0, x19
   3a5f8:	blr	x3
   3a5fc:	str	xzr, [x19, #256]
   3a600:	ldr	x0, [x19, #320]
   3a604:	add	x0, x0, #0x1
   3a608:	str	x0, [x19, #320]
   3a60c:	b	39598 <__asan_backtrace_create_state@@Base+0x59b0>
   3a610:	mov	w1, #0x1                   	// #1
   3a614:	str	w1, [x19, #304]
   3a618:	b	35ecc <__asan_backtrace_create_state@@Base+0x22e4>
   3a61c:	ldr	w1, [x19, #316]
   3a620:	tbnz	w1, #31, 38eb4 <__asan_backtrace_create_state@@Base+0x52cc>
   3a624:	mov	x0, x20
   3a628:	bl	33ec0 <__asan_backtrace_create_state@@Base+0x2d8>
   3a62c:	mov	x20, x0
   3a630:	cbnz	x0, 38eb4 <__asan_backtrace_create_state@@Base+0x52cc>
   3a634:	b	34748 <__asan_backtrace_create_state@@Base+0xb60>
   3a638:	ldp	x21, x22, [sp, #32]
   3a63c:	ldp	x23, x24, [sp, #48]
   3a640:	ldp	x25, x26, [sp, #64]
   3a644:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a648:	ldp	x21, x22, [sp, #32]
   3a64c:	ldp	x23, x24, [sp, #48]
   3a650:	ldp	x25, x26, [sp, #64]
   3a654:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a658:	ldp	x21, x22, [sp, #32]
   3a65c:	ldp	x23, x24, [sp, #48]
   3a660:	ldp	x25, x26, [sp, #64]
   3a664:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a668:	ldp	x3, x2, [x19, #272]
   3a66c:	strb	wzr, [x19, #255]
   3a670:	mov	x0, x19
   3a674:	blr	x3
   3a678:	ldr	x0, [x19, #320]
   3a67c:	mov	w2, #0x20                  	// #32
   3a680:	mov	x1, #0x1                   	// #1
   3a684:	strb	w2, [x19]
   3a688:	add	x0, x0, x1
   3a68c:	str	x0, [x19, #320]
   3a690:	b	36940 <__asan_backtrace_create_state@@Base+0x2d58>
   3a694:	mov	w0, #0x1                   	// #1
   3a698:	ldp	x21, x22, [sp, #32]
   3a69c:	ldp	x23, x24, [sp, #48]
   3a6a0:	ldp	x25, x26, [sp, #64]
   3a6a4:	str	w0, [x19, #304]
   3a6a8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a6ac:	ldp	x3, x2, [x19, #272]
   3a6b0:	strb	wzr, [x19, #255]
   3a6b4:	mov	x0, x19
   3a6b8:	blr	x3
   3a6bc:	ldr	x1, [x19, #320]
   3a6c0:	mov	w2, #0x20                  	// #32
   3a6c4:	mov	x0, #0x1                   	// #1
   3a6c8:	strb	w2, [x19]
   3a6cc:	add	x1, x1, x0
   3a6d0:	str	x1, [x19, #320]
   3a6d4:	b	369f8 <__asan_backtrace_create_state@@Base+0x2e10>
   3a6d8:	cmp	x1, #0xff
   3a6dc:	b.ne	3a704 <__asan_backtrace_create_state@@Base+0x6b1c>  // b.any
   3a6e0:	ldp	x3, x2, [x19, #272]
   3a6e4:	strb	wzr, [x19, #255]
   3a6e8:	mov	x0, x19
   3a6ec:	blr	x3
   3a6f0:	str	xzr, [x19, #256]
   3a6f4:	ldr	x0, [x19, #320]
   3a6f8:	mov	x1, #0x0                   	// #0
   3a6fc:	add	x0, x0, #0x1
   3a700:	str	x0, [x19, #320]
   3a704:	add	x3, x1, #0x1
   3a708:	str	x3, [x19, #256]
   3a70c:	mov	w0, #0x20                  	// #32
   3a710:	strb	w0, [x19, x1]
   3a714:	strb	w0, [x19, #264]
   3a718:	b	392c4 <__asan_backtrace_create_state@@Base+0x56dc>
   3a71c:	ldp	x21, x22, [sp, #32]
   3a720:	ldp	x23, x24, [sp, #48]
   3a724:	ldp	x25, x26, [sp, #64]
   3a728:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a72c:	ldr	x0, [x0, #8]
   3a730:	cbz	x0, 3a134 <__asan_backtrace_create_state@@Base+0x654c>
   3a734:	ldr	w1, [x0]
   3a738:	cmp	w1, #0x2f
   3a73c:	b.ne	3483c <__asan_backtrace_create_state@@Base+0xc54>  // b.any
   3a740:	ldr	w1, [x19, #316]
   3a744:	tbnz	w1, #31, 3ad98 <__asan_backtrace_create_state@@Base+0x71b0>
   3a748:	bl	33ec0 <__asan_backtrace_create_state@@Base+0x2d8>
   3a74c:	cbz	x0, 3a134 <__asan_backtrace_create_state@@Base+0x654c>
   3a750:	ldr	w1, [x0]
   3a754:	b	3483c <__asan_backtrace_create_state@@Base+0xc54>
   3a758:	mov	w0, #0x1                   	// #1
   3a75c:	str	w0, [x19, #304]
   3a760:	b	3a58c <__asan_backtrace_create_state@@Base+0x69a4>
   3a764:	mov	w1, w3
   3a768:	mov	x0, x19
   3a76c:	bl	34108 <__asan_backtrace_create_state@@Base+0x520>
   3a770:	ldp	x21, x22, [sp, #32]
   3a774:	ldp	x23, x24, [sp, #48]
   3a778:	ldp	x25, x26, [sp, #64]
   3a77c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a780:	ldr	w0, [x20]
   3a784:	cmp	w0, #0x3
   3a788:	b.ne	39ae4 <__asan_backtrace_create_state@@Base+0x5efc>  // b.any
   3a78c:	ldr	x0, [x20, #8]
   3a790:	ldr	w1, [x0]
   3a794:	cmp	w1, #0x1
   3a798:	b.ne	39aec <__asan_backtrace_create_state@@Base+0x5f04>  // b.any
   3a79c:	ldr	x1, [x20, #16]
   3a7a0:	ldr	w1, [x1]
   3a7a4:	cmp	w1, #0x29
   3a7a8:	csel	x20, x20, x0, ne  // ne = any
   3a7ac:	b	39aec <__asan_backtrace_create_state@@Base+0x5f04>
   3a7b0:	mov	w0, #0x1                   	// #1
   3a7b4:	str	w0, [x19, #304]
   3a7b8:	b	3a234 <__asan_backtrace_create_state@@Base+0x664c>
   3a7bc:	ldp	x21, x22, [sp, #32]
   3a7c0:	ldp	x23, x24, [sp, #48]
   3a7c4:	ldp	x25, x26, [sp, #64]
   3a7c8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a7cc:	ldr	x2, [x24, #8]
   3a7d0:	mov	w1, w22
   3a7d4:	mov	x0, x19
   3a7d8:	adrp	x20, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   3a7dc:	add	x20, x20, #0x9a8
   3a7e0:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3a7e4:	mov	x0, x20
   3a7e8:	bl	67e0 <__asan_internal_strlen@plt>
   3a7ec:	mov	x1, x20
   3a7f0:	mov	x2, x0
   3a7f4:	mov	x0, x19
   3a7f8:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3a7fc:	ldp	x21, x22, [sp, #32]
   3a800:	ldp	x23, x24, [sp, #48]
   3a804:	ldp	x25, x26, [sp, #64]
   3a808:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a80c:	ldr	x1, [x0, #8]
   3a810:	ldr	w2, [x1, #16]
   3a814:	cmp	w2, #0x1
   3a818:	b.ne	35db8 <__asan_backtrace_create_state@@Base+0x21d0>  // b.any
   3a81c:	ldr	x1, [x1, #8]
   3a820:	ldrb	w1, [x1]
   3a824:	cmp	w1, #0x3e
   3a828:	b.ne	35db8 <__asan_backtrace_create_state@@Base+0x21d0>  // b.any
   3a82c:	ldr	x1, [x19, #256]
   3a830:	cmp	x1, #0xff
   3a834:	b.ne	3a85c <__asan_backtrace_create_state@@Base+0x6c74>  // b.any
   3a838:	ldp	x3, x2, [x19, #272]
   3a83c:	strb	wzr, [x19, #255]
   3a840:	mov	x0, x19
   3a844:	blr	x3
   3a848:	str	xzr, [x19, #256]
   3a84c:	ldr	x0, [x19, #320]
   3a850:	mov	x1, #0x0                   	// #0
   3a854:	add	x0, x0, #0x1
   3a858:	str	x0, [x19, #320]
   3a85c:	add	x0, x1, #0x1
   3a860:	str	x0, [x19, #256]
   3a864:	mov	w0, #0x28                  	// #40
   3a868:	strb	w0, [x19, x1]
   3a86c:	strb	w0, [x19, #264]
   3a870:	ldr	x0, [x24, #8]
   3a874:	b	35db8 <__asan_backtrace_create_state@@Base+0x21d0>
   3a878:	ldr	x0, [x0, #8]
   3a87c:	ldr	w1, [x0, #16]
   3a880:	cmp	w1, #0x1
   3a884:	b.eq	3ab94 <__asan_backtrace_create_state@@Base+0x6fac>  // b.none
   3a888:	ldp	x21, x22, [sp, #32]
   3a88c:	ldp	x23, x24, [sp, #48]
   3a890:	ldp	x25, x26, [sp, #64]
   3a894:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a898:	ldp	x21, x22, [sp, #32]
   3a89c:	ldp	x23, x24, [sp, #48]
   3a8a0:	ldp	x25, x26, [sp, #64]
   3a8a4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a8a8:	mov	x0, x1
   3a8ac:	b	369f0 <__asan_backtrace_create_state@@Base+0x2e08>
   3a8b0:	ldr	x0, [x24, #8]
   3a8b4:	add	x1, x20, #0xf20
   3a8b8:	ldr	x0, [x0, #8]
   3a8bc:	ldr	x0, [x0]
   3a8c0:	bl	6b30 <__asan_internal_strcmp@plt>
   3a8c4:	cbnz	w0, 3ab80 <__asan_backtrace_create_state@@Base+0x6f98>
   3a8c8:	ldr	x2, [x24, #16]
   3a8cc:	mov	w1, w22
   3a8d0:	mov	x0, x19
   3a8d4:	ldr	x2, [x2, #16]
   3a8d8:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3a8dc:	b	35f10 <__asan_backtrace_create_state@@Base+0x2328>
   3a8e0:	ldr	x0, [x24, #16]
   3a8e4:	b	35de4 <__asan_backtrace_create_state@@Base+0x21fc>
   3a8e8:	ldr	x0, [x20, #8]
   3a8ec:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3a8f0:	mov	x2, #0x6                   	// #6
   3a8f4:	add	x1, x1, #0xcf0
   3a8f8:	bl	6b70 <__asan_internal_strncmp@plt>
   3a8fc:	cbnz	w0, 368c0 <__asan_backtrace_create_state@@Base+0x2cd8>
   3a900:	ldr	x2, [x24, #16]
   3a904:	mov	w1, w22
   3a908:	mov	x0, x19
   3a90c:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3a910:	add	x20, x20, #0xcf8
   3a914:	bl	3ae38 <__asan_backtrace_create_state@@Base+0x7250>
   3a918:	mov	x0, x20
   3a91c:	bl	67e0 <__asan_internal_strlen@plt>
   3a920:	mov	x1, x20
   3a924:	mov	x2, x0
   3a928:	mov	x0, x19
   3a92c:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3a930:	b	36a0c <__asan_backtrace_create_state@@Base+0x2e24>
   3a934:	ldr	x25, [x25, #8]
   3a938:	cbz	x25, 39efc <__asan_backtrace_create_state@@Base+0x6314>
   3a93c:	ldr	w4, [x25]
   3a940:	b	39d9c <__asan_backtrace_create_state@@Base+0x61b4>
   3a944:	ldr	x4, [x1, #8]
   3a948:	ldr	x23, [x19, #288]
   3a94c:	str	x4, [x19, #288]
   3a950:	cbz	x4, 3a138 <__asan_backtrace_create_state@@Base+0x6550>
   3a954:	mov	w21, #0x1                   	// #1
   3a958:	b	3a0fc <__asan_backtrace_create_state@@Base+0x6514>
   3a95c:	ldp	x21, x22, [sp, #32]
   3a960:	ldp	x23, x24, [sp, #48]
   3a964:	ldp	x25, x26, [sp, #64]
   3a968:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a96c:	ldp	x21, x22, [sp, #32]
   3a970:	ldp	x23, x24, [sp, #48]
   3a974:	ldp	x25, x26, [sp, #64]
   3a978:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a97c:	ldp	x21, x22, [sp, #32]
   3a980:	ldp	x23, x24, [sp, #48]
   3a984:	ldp	x25, x26, [sp, #64]
   3a988:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a98c:	ldp	x21, x22, [sp, #32]
   3a990:	ldp	x23, x24, [sp, #48]
   3a994:	ldp	x25, x26, [sp, #64]
   3a998:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a99c:	ldp	x21, x22, [sp, #32]
   3a9a0:	ldp	x23, x24, [sp, #48]
   3a9a4:	ldp	x25, x26, [sp, #64]
   3a9a8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a9ac:	ldp	x21, x22, [sp, #32]
   3a9b0:	ldp	x23, x24, [sp, #48]
   3a9b4:	ldp	x25, x26, [sp, #64]
   3a9b8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a9bc:	ldp	x21, x22, [sp, #32]
   3a9c0:	ldp	x23, x24, [sp, #48]
   3a9c4:	ldp	x25, x26, [sp, #64]
   3a9c8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a9cc:	ldp	x21, x22, [sp, #32]
   3a9d0:	ldp	x23, x24, [sp, #48]
   3a9d4:	ldp	x25, x26, [sp, #64]
   3a9d8:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3a9dc:	ldr	x0, [x1, #16]
   3a9e0:	ldr	w0, [x0]
   3a9e4:	cmp	w0, #0x29
   3a9e8:	b.eq	3a9f4 <__asan_backtrace_create_state@@Base+0x6e0c>  // b.none
   3a9ec:	mov	w0, #0x1                   	// #1
   3a9f0:	str	w0, [x19, #304]
   3a9f4:	ldr	x2, [x1, #8]
   3a9f8:	mov	x0, x19
   3a9fc:	mov	w1, w22
   3aa00:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3aa04:	b	35df4 <__asan_backtrace_create_state@@Base+0x220c>
   3aa08:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3aa0c:	add	x20, x20, #0xf40
   3aa10:	mov	x0, x20
   3aa14:	bl	67e0 <__asan_internal_strlen@plt>
   3aa18:	mov	x1, x20
   3aa1c:	mov	x2, x0
   3aa20:	mov	x0, x19
   3aa24:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3aa28:	ldr	x0, [x23, #8]
   3aa2c:	cbz	x0, 3aa84 <__asan_backtrace_create_state@@Base+0x6e9c>
   3aa30:	mov	w1, w22
   3aa34:	mov	x2, x23
   3aa38:	mov	x0, x19
   3aa3c:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3aa40:	ldr	x1, [x19, #256]
   3aa44:	cmp	x1, #0xff
   3aa48:	b.ne	3aa70 <__asan_backtrace_create_state@@Base+0x6e88>  // b.any
   3aa4c:	ldp	x3, x2, [x19, #272]
   3aa50:	strb	wzr, [x19, #255]
   3aa54:	mov	x0, x19
   3aa58:	blr	x3
   3aa5c:	str	xzr, [x19, #256]
   3aa60:	ldr	x0, [x19, #320]
   3aa64:	mov	x1, #0x0                   	// #0
   3aa68:	add	x0, x0, #0x1
   3aa6c:	str	x0, [x19, #320]
   3aa70:	add	x0, x1, #0x1
   3aa74:	str	x0, [x19, #256]
   3aa78:	mov	w0, #0x20                  	// #32
   3aa7c:	strb	w0, [x19, x1]
   3aa80:	strb	w0, [x19, #264]
   3aa84:	mov	x2, x24
   3aa88:	mov	w1, w22
   3aa8c:	mov	x0, x19
   3aa90:	bl	3ae38 <__asan_backtrace_create_state@@Base+0x7250>
   3aa94:	cbz	x21, 3ac1c <__asan_backtrace_create_state@@Base+0x7034>
   3aa98:	mov	x2, x21
   3aa9c:	mov	w1, w22
   3aaa0:	mov	x0, x19
   3aaa4:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3aaa8:	ldp	x21, x22, [sp, #32]
   3aaac:	ldp	x23, x24, [sp, #48]
   3aab0:	ldp	x25, x26, [sp, #64]
   3aab4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3aab8:	add	x1, x21, #0x40
   3aabc:	b	36760 <__asan_backtrace_create_state@@Base+0x2b78>
   3aac0:	cmp	w21, #0x5
   3aac4:	b.eq	3ac88 <__asan_backtrace_create_state@@Base+0x70a0>  // b.none
   3aac8:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3aacc:	add	x20, x20, #0xf58
   3aad0:	mov	x0, x20
   3aad4:	bl	67e0 <__asan_internal_strlen@plt>
   3aad8:	mov	x1, x20
   3aadc:	mov	x2, x0
   3aae0:	mov	x0, x19
   3aae4:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3aae8:	ldp	x21, x22, [sp, #32]
   3aaec:	ldp	x23, x24, [sp, #48]
   3aaf0:	ldp	x25, x26, [sp, #64]
   3aaf4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3aaf8:	ldr	w0, [x19, #348]
   3aafc:	cmp	w4, w0
   3ab00:	b.ge	3ab68 <__asan_backtrace_create_state@@Base+0x6f80>  // b.tcont
   3ab04:	sbfiz	x0, x4, #4, #32
   3ab08:	add	w1, w4, #0x1
   3ab0c:	ldr	x2, [x19, #288]
   3ab10:	str	w1, [x19, #344]
   3ab14:	str	x3, [x5, x0]
   3ab18:	add	x0, x5, w4, sxtw #4
   3ab1c:	add	x0, x0, #0x8
   3ab20:	cbz	x2, 3ad18 <__asan_backtrace_create_state@@Base+0x7130>
   3ab24:	ldr	w1, [x19, #360]
   3ab28:	ldr	w6, [x19, #364]
   3ab2c:	sbfiz	x5, x1, #4, #32
   3ab30:	b	3ab60 <__asan_backtrace_create_state@@Base+0x6f78>
   3ab34:	ldr	x4, [x19, #352]
   3ab38:	add	w1, w1, #0x1
   3ab3c:	ldr	x7, [x2, #8]
   3ab40:	add	x4, x4, x5
   3ab44:	str	w1, [x19, #360]
   3ab48:	add	x5, x5, #0x10
   3ab4c:	str	x7, [x4, #8]
   3ab50:	str	x4, [x0]
   3ab54:	mov	x0, x4
   3ab58:	ldr	x2, [x2]
   3ab5c:	cbz	x2, 3ad18 <__asan_backtrace_create_state@@Base+0x7130>
   3ab60:	cmp	w6, w1
   3ab64:	b.gt	3ab34 <__asan_backtrace_create_state@@Base+0x6f4c>
   3ab68:	mov	w0, #0x1                   	// #1
   3ab6c:	ldp	x21, x22, [sp, #32]
   3ab70:	ldp	x23, x24, [sp, #48]
   3ab74:	ldp	x25, x26, [sp, #64]
   3ab78:	str	w0, [x19, #304]
   3ab7c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ab80:	ldr	x2, [x24, #8]
   3ab84:	mov	w1, w22
   3ab88:	mov	x0, x19
   3ab8c:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3ab90:	b	3a8c8 <__asan_backtrace_create_state@@Base+0x6ce0>
   3ab94:	ldr	x0, [x0, #8]
   3ab98:	ldrb	w0, [x0]
   3ab9c:	cmp	w0, #0x3e
   3aba0:	b.eq	3ada0 <__asan_backtrace_create_state@@Base+0x71b8>  // b.none
   3aba4:	ldp	x21, x22, [sp, #32]
   3aba8:	ldp	x23, x24, [sp, #48]
   3abac:	ldp	x25, x26, [sp, #64]
   3abb0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3abb4:	cmp	x21, x24
   3abb8:	b.ls	38b60 <__asan_backtrace_create_state@@Base+0x4f78>  // b.plast
   3abbc:	cmp	x2, #0xff
   3abc0:	ccmp	w0, w23, #0x0, ls  // ls = plast
   3abc4:	b.ne	38b60 <__asan_backtrace_create_state@@Base+0x4f78>  // b.any
   3abc8:	and	w22, w2, #0xff
   3abcc:	cmp	x1, #0xff
   3abd0:	b.ne	3abf4 <__asan_backtrace_create_state@@Base+0x700c>  // b.any
   3abd4:	ldp	x3, x2, [x19, #272]
   3abd8:	strb	wzr, [x19, #255]
   3abdc:	mov	x0, x19
   3abe0:	blr	x3
   3abe4:	str	xzr, [x19, #256]
   3abe8:	ldr	x0, [x19, #320]
   3abec:	add	x0, x0, #0x1
   3abf0:	str	x0, [x19, #320]
   3abf4:	ldr	x0, [x19, #256]
   3abf8:	mov	x20, x24
   3abfc:	add	x1, x0, #0x1
   3ac00:	str	x1, [x19, #256]
   3ac04:	strb	w22, [x19, x0]
   3ac08:	strb	w22, [x19, #264]
   3ac0c:	b	38b3c <__asan_backtrace_create_state@@Base+0x4f54>
   3ac10:	add	x1, x21, #0x60
   3ac14:	mov	w20, #0x4                   	// #4
   3ac18:	b	36760 <__asan_backtrace_create_state@@Base+0x2b78>
   3ac1c:	ldp	x21, x22, [sp, #32]
   3ac20:	ldp	x23, x24, [sp, #48]
   3ac24:	ldp	x25, x26, [sp, #64]
   3ac28:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ac2c:	mov	x1, x20
   3ac30:	mov	x0, x19
   3ac34:	bl	33fe0 <__asan_backtrace_create_state@@Base+0x3f8>
   3ac38:	cbnz	x0, 3ac54 <__asan_backtrace_create_state@@Base+0x706c>
   3ac3c:	b	3ac60 <__asan_backtrace_create_state@@Base+0x7078>
   3ac40:	ldr	x1, [x0, #8]
   3ac44:	cbz	x1, 3ac60 <__asan_backtrace_create_state@@Base+0x7078>
   3ac48:	ldr	x0, [x0, #16]
   3ac4c:	add	w3, w3, #0x1
   3ac50:	cbz	x0, 3ac60 <__asan_backtrace_create_state@@Base+0x7078>
   3ac54:	ldr	w1, [x0]
   3ac58:	cmp	w1, #0x2f
   3ac5c:	b.eq	3ac40 <__asan_backtrace_create_state@@Base+0x7058>  // b.none
   3ac60:	mov	w1, w3
   3ac64:	mov	x0, x19
   3ac68:	bl	34108 <__asan_backtrace_create_state@@Base+0x520>
   3ac6c:	ldp	x21, x22, [sp, #32]
   3ac70:	ldp	x23, x24, [sp, #48]
   3ac74:	ldp	x25, x26, [sp, #64]
   3ac78:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ac7c:	add	x21, sp, #0x90
   3ac80:	str	x21, [x19, #296]
   3ac84:	b	39efc <__asan_backtrace_create_state@@Base+0x6314>
   3ac88:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3ac8c:	add	x20, x20, #0xf50
   3ac90:	mov	x0, x20
   3ac94:	bl	67e0 <__asan_internal_strlen@plt>
   3ac98:	mov	x1, x20
   3ac9c:	mov	x2, x0
   3aca0:	mov	x0, x19
   3aca4:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3aca8:	ldp	x21, x22, [sp, #32]
   3acac:	ldp	x23, x24, [sp, #48]
   3acb0:	ldp	x25, x26, [sp, #64]
   3acb4:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3acb8:	add	x21, x21, #0x20
   3acbc:	str	x21, [x19, #296]
   3acc0:	b	39efc <__asan_backtrace_create_state@@Base+0x6314>
   3acc4:	ldr	x1, [x19, #256]
   3acc8:	cmp	x1, #0xff
   3accc:	b.ne	3acf4 <__asan_backtrace_create_state@@Base+0x710c>  // b.any
   3acd0:	ldp	x3, x2, [x19, #272]
   3acd4:	strb	wzr, [x19, #255]
   3acd8:	mov	x0, x19
   3acdc:	blr	x3
   3ace0:	str	xzr, [x19, #256]
   3ace4:	ldr	x0, [x19, #320]
   3ace8:	mov	x1, #0x0                   	// #0
   3acec:	add	x0, x0, #0x1
   3acf0:	str	x0, [x19, #320]
   3acf4:	add	x0, x1, #0x1
   3acf8:	str	x0, [x19, #256]
   3acfc:	mov	w0, #0x75                  	// #117
   3ad00:	strb	w0, [x19, x1]
   3ad04:	strb	w0, [x19, #264]
   3ad08:	ldp	x21, x22, [sp, #32]
   3ad0c:	ldp	x23, x24, [sp, #48]
   3ad10:	ldp	x25, x26, [sp, #64]
   3ad14:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ad18:	str	xzr, [x0]
   3ad1c:	b	3a0f0 <__asan_backtrace_create_state@@Base+0x6508>
   3ad20:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3ad24:	add	x20, x20, #0xf48
   3ad28:	mov	x0, x20
   3ad2c:	bl	67e0 <__asan_internal_strlen@plt>
   3ad30:	mov	x1, x20
   3ad34:	mov	x2, x0
   3ad38:	mov	x0, x19
   3ad3c:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3ad40:	ldp	x21, x22, [sp, #32]
   3ad44:	ldp	x23, x24, [sp, #48]
   3ad48:	ldp	x25, x26, [sp, #64]
   3ad4c:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ad50:	ldr	x1, [x19, #256]
   3ad54:	cmp	x1, #0xff
   3ad58:	b.ne	3ad80 <__asan_backtrace_create_state@@Base+0x7198>  // b.any
   3ad5c:	ldp	x3, x2, [x19, #272]
   3ad60:	strb	wzr, [x19, #255]
   3ad64:	mov	x0, x19
   3ad68:	blr	x3
   3ad6c:	str	xzr, [x19, #256]
   3ad70:	ldr	x0, [x19, #320]
   3ad74:	mov	x1, #0x0                   	// #0
   3ad78:	add	x0, x0, #0x1
   3ad7c:	str	x0, [x19, #320]
   3ad80:	add	x0, x1, #0x1
   3ad84:	str	x0, [x19, #256]
   3ad88:	mov	w0, #0x2d                  	// #45
   3ad8c:	strb	w0, [x19, x1]
   3ad90:	strb	w0, [x19, #264]
   3ad94:	b	3944c <__asan_backtrace_create_state@@Base+0x5864>
   3ad98:	ldr	x2, [x19, #296]
   3ad9c:	b	34858 <__asan_backtrace_create_state@@Base+0xc70>
   3ada0:	ldr	x1, [x19, #256]
   3ada4:	cmp	x1, #0xff
   3ada8:	b.ne	3add0 <__asan_backtrace_create_state@@Base+0x71e8>  // b.any
   3adac:	ldp	x3, x2, [x19, #272]
   3adb0:	strb	wzr, [x19, #255]
   3adb4:	mov	x0, x19
   3adb8:	blr	x3
   3adbc:	str	xzr, [x19, #256]
   3adc0:	ldr	x0, [x19, #320]
   3adc4:	mov	x1, #0x0                   	// #0
   3adc8:	add	x0, x0, #0x1
   3adcc:	str	x0, [x19, #320]
   3add0:	add	x0, x1, #0x1
   3add4:	str	x0, [x19, #256]
   3add8:	mov	w0, #0x29                  	// #41
   3addc:	strb	w0, [x19, x1]
   3ade0:	strb	w0, [x19, #264]
   3ade4:	ldp	x21, x22, [sp, #32]
   3ade8:	ldp	x23, x24, [sp, #48]
   3adec:	ldp	x25, x26, [sp, #64]
   3adf0:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3adf4:	ldp	x21, x22, [sp, #32]
   3adf8:	ldp	x23, x24, [sp, #48]
   3adfc:	ldp	x25, x26, [sp, #64]
   3ae00:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ae04:	adrp	x20, 46000 <__asan_backtrace_release_view@@Base+0x48>
   3ae08:	add	x20, x20, #0x510
   3ae0c:	mov	x0, x20
   3ae10:	bl	67e0 <__asan_internal_strlen@plt>
   3ae14:	mov	x1, x20
   3ae18:	mov	x2, x0
   3ae1c:	mov	x0, x19
   3ae20:	bl	33df0 <__asan_backtrace_create_state@@Base+0x208>
   3ae24:	ldp	x21, x22, [sp, #32]
   3ae28:	ldp	x23, x24, [sp, #48]
   3ae2c:	ldp	x25, x26, [sp, #64]
   3ae30:	b	3471c <__asan_backtrace_create_state@@Base+0xb34>
   3ae34:	nop
   3ae38:	stp	x29, x30, [sp, #-48]!
   3ae3c:	mov	x29, sp
   3ae40:	stp	x19, x20, [sp, #16]
   3ae44:	mov	x20, x0
   3ae48:	cbz	x2, 3aeb8 <__asan_backtrace_create_state@@Base+0x72d0>
   3ae4c:	ldr	w3, [x2, #4]
   3ae50:	mov	x19, x2
   3ae54:	cmp	w3, #0x1
   3ae58:	b.gt	3aeb8 <__asan_backtrace_create_state@@Base+0x72d0>
   3ae5c:	ldr	w4, [x0, #308]
   3ae60:	cmp	w4, #0x400
   3ae64:	b.gt	3aeb8 <__asan_backtrace_create_state@@Base+0x72d0>
   3ae68:	add	w3, w3, #0x1
   3ae6c:	add	w4, w4, #0x1
   3ae70:	str	w3, [x2, #4]
   3ae74:	add	x3, sp, #0x20
   3ae78:	str	w4, [x0, #308]
   3ae7c:	ldr	x4, [x0, #328]
   3ae80:	str	x3, [x0, #328]
   3ae84:	stp	x2, x4, [sp, #32]
   3ae88:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3ae8c:	ldr	w1, [x19, #4]
   3ae90:	ldr	x0, [sp, #40]
   3ae94:	str	x0, [x20, #328]
   3ae98:	ldr	w0, [x20, #308]
   3ae9c:	sub	w1, w1, #0x1
   3aea0:	str	w1, [x19, #4]
   3aea4:	sub	w0, w0, #0x1
   3aea8:	str	w0, [x20, #308]
   3aeac:	ldp	x19, x20, [sp, #16]
   3aeb0:	ldp	x29, x30, [sp], #48
   3aeb4:	ret
   3aeb8:	mov	w0, #0x1                   	// #1
   3aebc:	str	w0, [x20, #304]
   3aec0:	ldp	x19, x20, [sp, #16]
   3aec4:	ldp	x29, x30, [sp], #48
   3aec8:	ret
   3aecc:	nop
   3aed0:	stp	x29, x30, [sp, #-80]!
   3aed4:	mov	x29, sp
   3aed8:	ldr	w3, [x2]
   3aedc:	stp	x19, x20, [sp, #16]
   3aee0:	mov	x20, x2
   3aee4:	mov	x19, x0
   3aee8:	cmp	w3, #0x32
   3aeec:	b.eq	3af1c <__asan_backtrace_create_state@@Base+0x7334>  // b.none
   3aef0:	ldr	w3, [x2, #4]
   3aef4:	cmp	w3, #0x1
   3aef8:	b.gt	3af08 <__asan_backtrace_create_state@@Base+0x7320>
   3aefc:	ldr	w4, [x0, #308]
   3af00:	cmp	w4, #0x400
   3af04:	b.le	3afdc <__asan_backtrace_create_state@@Base+0x73f4>
   3af08:	mov	w0, #0x1                   	// #1
   3af0c:	str	w0, [x19, #304]
   3af10:	ldp	x19, x20, [sp, #16]
   3af14:	ldp	x29, x30, [sp], #80
   3af18:	ret
   3af1c:	ldr	x0, [x2, #8]
   3af20:	stp	x21, x22, [sp, #32]
   3af24:	ldrsw	x22, [x0, #16]
   3af28:	ldr	x20, [x0, #8]
   3af2c:	cbz	x22, 3b02c <__asan_backtrace_create_state@@Base+0x7444>
   3af30:	add	x22, x20, x22
   3af34:	ldr	x1, [x19, #256]
   3af38:	str	x23, [sp, #48]
   3af3c:	mov	x23, #0x1                   	// #1
   3af40:	b	3af98 <__asan_backtrace_create_state@@Base+0x73b0>
   3af44:	ldp	x3, x2, [x19, #272]
   3af48:	strb	wzr, [x19, #255]
   3af4c:	add	x20, x20, #0x1
   3af50:	blr	x3
   3af54:	strb	w21, [x19]
   3af58:	ldr	x0, [x19, #320]
   3af5c:	str	x23, [x19, #256]
   3af60:	strb	w21, [x19, #264]
   3af64:	cmp	x22, x20
   3af68:	add	x0, x0, #0x1
   3af6c:	str	x0, [x19, #320]
   3af70:	mov	x0, #0x1                   	// #1
   3af74:	b.eq	3afc8 <__asan_backtrace_create_state@@Base+0x73e0>  // b.none
   3af78:	ldrb	w21, [x20]
   3af7c:	add	x1, x0, #0x1
   3af80:	str	x1, [x19, #256]
   3af84:	add	x20, x20, #0x1
   3af88:	strb	w21, [x19, x0]
   3af8c:	cmp	x20, x22
   3af90:	strb	w21, [x19, #264]
   3af94:	b.eq	3afc8 <__asan_backtrace_create_state@@Base+0x73e0>  // b.none
   3af98:	ldrb	w21, [x20]
   3af9c:	mov	x0, x19
   3afa0:	cmp	x1, #0xff
   3afa4:	b.eq	3af44 <__asan_backtrace_create_state@@Base+0x735c>  // b.none
   3afa8:	mov	x0, x1
   3afac:	add	x20, x20, #0x1
   3afb0:	add	x1, x0, #0x1
   3afb4:	str	x1, [x19, #256]
   3afb8:	cmp	x20, x22
   3afbc:	strb	w21, [x19, x0]
   3afc0:	strb	w21, [x19, #264]
   3afc4:	b.ne	3af98 <__asan_backtrace_create_state@@Base+0x73b0>  // b.any
   3afc8:	ldp	x19, x20, [sp, #16]
   3afcc:	ldp	x21, x22, [sp, #32]
   3afd0:	ldr	x23, [sp, #48]
   3afd4:	ldp	x29, x30, [sp], #80
   3afd8:	ret
   3afdc:	add	w3, w3, #0x1
   3afe0:	add	w4, w4, #0x1
   3afe4:	str	w3, [x2, #4]
   3afe8:	add	x3, sp, #0x40
   3afec:	str	w4, [x0, #308]
   3aff0:	ldr	x4, [x0, #328]
   3aff4:	str	x3, [x0, #328]
   3aff8:	stp	x2, x4, [sp, #64]
   3affc:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3b000:	ldr	w1, [x20, #4]
   3b004:	ldr	x0, [sp, #72]
   3b008:	str	x0, [x19, #328]
   3b00c:	ldr	w0, [x19, #308]
   3b010:	sub	w1, w1, #0x1
   3b014:	str	w1, [x20, #4]
   3b018:	sub	w0, w0, #0x1
   3b01c:	str	w0, [x19, #308]
   3b020:	ldp	x19, x20, [sp, #16]
   3b024:	ldp	x29, x30, [sp], #80
   3b028:	ret
   3b02c:	ldp	x21, x22, [sp, #32]
   3b030:	b	3af10 <__asan_backtrace_create_state@@Base+0x7328>
   3b034:	nop
   3b038:	stp	x29, x30, [sp, #-64]!
   3b03c:	mov	x29, sp
   3b040:	stp	x19, x20, [sp, #16]
   3b044:	mov	x20, x2
   3b048:	ldr	w2, [x2]
   3b04c:	stp	x21, x22, [sp, #32]
   3b050:	mov	w22, #0x1                   	// #1
   3b054:	cmp	w2, #0x31
   3b058:	ccmp	w2, w22, #0x0, ne  // ne = any
   3b05c:	mov	w21, w1
   3b060:	mov	x19, x0
   3b064:	ccmp	w2, #0x6, #0x4, hi  // hi = pmore
   3b068:	b.ne	3b114 <__asan_backtrace_create_state@@Base+0x752c>  // b.any
   3b06c:	ldr	w0, [x20, #4]
   3b070:	cmp	w0, #0x1
   3b074:	b.gt	3b108 <__asan_backtrace_create_state@@Base+0x7520>
   3b078:	ldr	w1, [x19, #308]
   3b07c:	cmp	w1, #0x400
   3b080:	b.gt	3b108 <__asan_backtrace_create_state@@Base+0x7520>
   3b084:	ldr	x3, [x19, #328]
   3b088:	add	w0, w0, #0x1
   3b08c:	str	w0, [x20, #4]
   3b090:	add	w1, w1, #0x1
   3b094:	add	x0, sp, #0x30
   3b098:	str	w1, [x19, #308]
   3b09c:	str	x0, [x19, #328]
   3b0a0:	mov	w1, w21
   3b0a4:	mov	x0, x19
   3b0a8:	mov	x2, x20
   3b0ac:	stp	x20, x3, [sp, #48]
   3b0b0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3b0b4:	ldr	w1, [x20, #4]
   3b0b8:	ldr	x0, [sp, #56]
   3b0bc:	str	x0, [x19, #328]
   3b0c0:	ldr	w0, [x19, #308]
   3b0c4:	sub	w1, w1, #0x1
   3b0c8:	str	w1, [x20, #4]
   3b0cc:	sub	w0, w0, #0x1
   3b0d0:	str	w0, [x19, #308]
   3b0d4:	cbnz	w22, 3b0f8 <__asan_backtrace_create_state@@Base+0x7510>
   3b0d8:	ldr	x1, [x19, #256]
   3b0dc:	add	x0, x1, #0x1
   3b0e0:	cmp	x1, #0xff
   3b0e4:	b.eq	3b13c <__asan_backtrace_create_state@@Base+0x7554>  // b.none
   3b0e8:	str	x0, [x19, #256]
   3b0ec:	mov	w0, #0x29                  	// #41
   3b0f0:	strb	w0, [x19, x1]
   3b0f4:	strb	w0, [x19, #264]
   3b0f8:	ldp	x19, x20, [sp, #16]
   3b0fc:	ldp	x21, x22, [sp, #32]
   3b100:	ldp	x29, x30, [sp], #64
   3b104:	ret
   3b108:	mov	w0, #0x1                   	// #1
   3b10c:	str	w0, [x19, #304]
   3b110:	b	3b0d4 <__asan_backtrace_create_state@@Base+0x74ec>
   3b114:	ldr	x1, [x0, #256]
   3b118:	cmp	x1, #0xff
   3b11c:	b.eq	3b164 <__asan_backtrace_create_state@@Base+0x757c>  // b.none
   3b120:	add	x0, x1, #0x1
   3b124:	str	x0, [x19, #256]
   3b128:	mov	w0, #0x28                  	// #40
   3b12c:	strb	w0, [x19, x1]
   3b130:	mov	w22, #0x0                   	// #0
   3b134:	strb	w0, [x19, #264]
   3b138:	b	3b06c <__asan_backtrace_create_state@@Base+0x7484>
   3b13c:	ldp	x3, x2, [x19, #272]
   3b140:	strb	wzr, [x19, #255]
   3b144:	mov	x0, x19
   3b148:	blr	x3
   3b14c:	ldr	x2, [x19, #320]
   3b150:	mov	x0, #0x1                   	// #1
   3b154:	mov	x1, #0x0                   	// #0
   3b158:	add	x2, x2, x0
   3b15c:	str	x2, [x19, #320]
   3b160:	b	3b0e8 <__asan_backtrace_create_state@@Base+0x7500>
   3b164:	ldp	x3, x2, [x0, #272]
   3b168:	strb	wzr, [x0, #255]
   3b16c:	blr	x3
   3b170:	ldr	x2, [x19, #320]
   3b174:	mov	x0, #0x1                   	// #1
   3b178:	mov	x1, #0x0                   	// #0
   3b17c:	add	x2, x2, x0
   3b180:	str	x2, [x19, #320]
   3b184:	b	3b124 <__asan_backtrace_create_state@@Base+0x753c>
   3b188:	stp	x29, x30, [sp, #-96]!
   3b18c:	mov	x29, sp
   3b190:	stp	x19, x20, [sp, #16]
   3b194:	mov	x19, x0
   3b198:	ldr	x0, [x2, #8]
   3b19c:	stp	x21, x22, [sp, #32]
   3b1a0:	mov	w22, w1
   3b1a4:	ldr	x0, [x0]
   3b1a8:	ldrb	w1, [x0]
   3b1ac:	cmp	w1, #0x66
   3b1b0:	b.ne	3b2d4 <__asan_backtrace_create_state@@Base+0x76ec>  // b.any
   3b1b4:	ldr	x1, [x3]
   3b1b8:	stp	x23, x24, [sp, #48]
   3b1bc:	stp	x25, x26, [sp, #64]
   3b1c0:	mov	x25, #0x0                   	// #0
   3b1c4:	ldp	x23, x26, [x1, #8]
   3b1c8:	ldr	w1, [x26]
   3b1cc:	cmp	w1, #0x3c
   3b1d0:	b.eq	3b448 <__asan_backtrace_create_state@@Base+0x7860>  // b.none
   3b1d4:	ldr	w21, [x19, #316]
   3b1d8:	mov	w1, #0xffffffff            	// #-1
   3b1dc:	str	w1, [x19, #316]
   3b1e0:	ldrb	w0, [x0, #1]
   3b1e4:	cmp	w0, #0x6c
   3b1e8:	b.eq	3b468 <__asan_backtrace_create_state@@Base+0x7880>  // b.none
   3b1ec:	b.hi	3b370 <__asan_backtrace_create_state@@Base+0x7788>  // b.pmore
   3b1f0:	cmp	w0, #0x4c
   3b1f4:	b.eq	3b200 <__asan_backtrace_create_state@@Base+0x7618>  // b.none
   3b1f8:	cmp	w0, #0x52
   3b1fc:	b.ne	3b350 <__asan_backtrace_create_state@@Base+0x7768>  // b.any
   3b200:	ldr	x1, [x19, #256]
   3b204:	add	x0, x1, #0x1
   3b208:	cmp	x1, #0xff
   3b20c:	b.eq	3b540 <__asan_backtrace_create_state@@Base+0x7958>  // b.none
   3b210:	str	x0, [x19, #256]
   3b214:	mov	w0, #0x28                  	// #40
   3b218:	strb	w0, [x19, x1]
   3b21c:	mov	x2, x26
   3b220:	strb	w0, [x19, #264]
   3b224:	mov	w1, w22
   3b228:	mov	x0, x19
   3b22c:	adrp	x20, 4a000 <__asan_backtrace_vector_release@@Base+0x3bb0>
   3b230:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3b234:	add	x20, x20, #0x9a8
   3b238:	mov	x2, x23
   3b23c:	mov	w1, w22
   3b240:	mov	x0, x19
   3b244:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3b248:	mov	x0, x20
   3b24c:	bl	67e0 <__asan_internal_strlen@plt>
   3b250:	cbz	x0, 3b500 <__asan_backtrace_create_state@@Base+0x7918>
   3b254:	mov	x26, #0x1                   	// #1
   3b258:	ldr	x1, [x19, #256]
   3b25c:	str	x27, [sp, #80]
   3b260:	add	x27, x20, x0
   3b264:	b	3b2bc <__asan_backtrace_create_state@@Base+0x76d4>
   3b268:	ldp	x3, x2, [x19, #272]
   3b26c:	strb	wzr, [x19, #255]
   3b270:	add	x20, x20, #0x1
   3b274:	blr	x3
   3b278:	strb	w24, [x19]
   3b27c:	ldr	x0, [x19, #320]
   3b280:	str	x26, [x19, #256]
   3b284:	strb	w24, [x19, #264]
   3b288:	cmp	x20, x27
   3b28c:	add	x0, x0, #0x1
   3b290:	str	x0, [x19, #320]
   3b294:	mov	x0, #0x1                   	// #1
   3b298:	b.eq	3b4fc <__asan_backtrace_create_state@@Base+0x7914>  // b.none
   3b29c:	ldrb	w24, [x20]
   3b2a0:	add	x1, x0, #0x1
   3b2a4:	str	x1, [x19, #256]
   3b2a8:	strb	w24, [x19, x0]
   3b2ac:	add	x20, x20, #0x1
   3b2b0:	strb	w24, [x19, #264]
   3b2b4:	cmp	x20, x27
   3b2b8:	b.eq	3b4fc <__asan_backtrace_create_state@@Base+0x7914>  // b.none
   3b2bc:	ldrb	w24, [x20]
   3b2c0:	mov	x0, x19
   3b2c4:	cmp	x1, #0xff
   3b2c8:	b.eq	3b268 <__asan_backtrace_create_state@@Base+0x7680>  // b.none
   3b2cc:	mov	x0, x1
   3b2d0:	b	3b2a0 <__asan_backtrace_create_state@@Base+0x76b8>
   3b2d4:	mov	w0, #0x0                   	// #0
   3b2d8:	ldp	x19, x20, [sp, #16]
   3b2dc:	ldp	x21, x22, [sp, #32]
   3b2e0:	ldp	x29, x30, [sp], #96
   3b2e4:	ret
   3b2e8:	ldr	x27, [sp, #80]
   3b2ec:	mov	x2, x23
   3b2f0:	mov	w1, w22
   3b2f4:	mov	x0, x19
   3b2f8:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3b2fc:	mov	x2, x26
   3b300:	mov	w1, w22
   3b304:	mov	x0, x19
   3b308:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3b30c:	ldr	x1, [x19, #256]
   3b310:	add	x0, x1, #0x1
   3b314:	cmp	x1, #0xff
   3b318:	b.ne	3b340 <__asan_backtrace_create_state@@Base+0x7758>  // b.any
   3b31c:	ldp	x3, x2, [x19, #272]
   3b320:	strb	wzr, [x19, #255]
   3b324:	mov	x0, x19
   3b328:	blr	x3
   3b32c:	ldr	x2, [x19, #320]
   3b330:	mov	x0, #0x1                   	// #1
   3b334:	mov	x1, #0x0                   	// #0
   3b338:	add	x2, x2, x0
   3b33c:	str	x2, [x19, #320]
   3b340:	str	x0, [x19, #256]
   3b344:	mov	w0, #0x29                  	// #41
   3b348:	strb	w0, [x19, x1]
   3b34c:	strb	w0, [x19, #264]
   3b350:	ldp	x23, x24, [sp, #48]
   3b354:	mov	w0, #0x1                   	// #1
   3b358:	ldp	x25, x26, [sp, #64]
   3b35c:	str	w21, [x19, #316]
   3b360:	ldp	x19, x20, [sp, #16]
   3b364:	ldp	x21, x22, [sp, #32]
   3b368:	ldp	x29, x30, [sp], #96
   3b36c:	ret
   3b370:	cmp	w0, #0x72
   3b374:	b.ne	3b350 <__asan_backtrace_create_state@@Base+0x7768>  // b.any
   3b378:	ldr	x1, [x19, #256]
   3b37c:	add	x0, x1, #0x1
   3b380:	cmp	x1, #0xff
   3b384:	b.eq	3b518 <__asan_backtrace_create_state@@Base+0x7930>  // b.none
   3b388:	str	x0, [x19, #256]
   3b38c:	mov	w0, #0x28                  	// #40
   3b390:	strb	w0, [x19, x1]
   3b394:	mov	x2, x26
   3b398:	strb	w0, [x19, #264]
   3b39c:	mov	w1, w22
   3b3a0:	mov	x0, x19
   3b3a4:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b3a8:	bl	3b038 <__asan_backtrace_create_state@@Base+0x7450>
   3b3ac:	add	x20, x20, #0x18
   3b3b0:	mov	x2, x23
   3b3b4:	mov	w1, w22
   3b3b8:	mov	x0, x19
   3b3bc:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3b3c0:	mov	x0, x20
   3b3c4:	bl	67e0 <__asan_internal_strlen@plt>
   3b3c8:	cbz	x0, 3b350 <__asan_backtrace_create_state@@Base+0x7768>
   3b3cc:	add	x23, x20, x0
   3b3d0:	mov	x24, #0x1                   	// #1
   3b3d4:	ldr	x1, [x19, #256]
   3b3d8:	b	3b430 <__asan_backtrace_create_state@@Base+0x7848>
   3b3dc:	ldp	x3, x2, [x19, #272]
   3b3e0:	strb	wzr, [x19, #255]
   3b3e4:	add	x20, x20, #0x1
   3b3e8:	blr	x3
   3b3ec:	strb	w22, [x19]
   3b3f0:	ldr	x0, [x19, #320]
   3b3f4:	str	x24, [x19, #256]
   3b3f8:	strb	w22, [x19, #264]
   3b3fc:	cmp	x23, x20
   3b400:	add	x0, x0, #0x1
   3b404:	str	x0, [x19, #320]
   3b408:	mov	x0, #0x1                   	// #1
   3b40c:	b.eq	3b350 <__asan_backtrace_create_state@@Base+0x7768>  // b.none
   3b410:	ldrb	w22, [x20]
   3b414:	add	x1, x0, #0x1
   3b418:	str	x1, [x19, #256]
   3b41c:	strb	w22, [x19, x0]
   3b420:	add	x20, x20, #0x1
   3b424:	strb	w22, [x19, #264]
   3b428:	cmp	x23, x20
   3b42c:	b.eq	3b350 <__asan_backtrace_create_state@@Base+0x7768>  // b.none
   3b430:	ldrb	w22, [x20]
   3b434:	mov	x0, x19
   3b438:	cmp	x1, #0xff
   3b43c:	b.eq	3b3dc <__asan_backtrace_create_state@@Base+0x77f4>  // b.none
   3b440:	mov	x0, x1
   3b444:	b	3b414 <__asan_backtrace_create_state@@Base+0x782c>
   3b448:	ldr	w21, [x19, #316]
   3b44c:	mov	w1, #0xffffffff            	// #-1
   3b450:	ldr	x25, [x26, #16]
   3b454:	ldr	x26, [x26, #8]
   3b458:	str	w1, [x19, #316]
   3b45c:	ldrb	w0, [x0, #1]
   3b460:	cmp	w0, #0x6c
   3b464:	b.ne	3b1ec <__asan_backtrace_create_state@@Base+0x7604>  // b.any
   3b468:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b46c:	add	x20, x20, #0x10
   3b470:	mov	x0, x20
   3b474:	bl	67e0 <__asan_internal_strlen@plt>
   3b478:	cbz	x0, 3b2ec <__asan_backtrace_create_state@@Base+0x7704>
   3b47c:	mov	x25, #0x1                   	// #1
   3b480:	ldr	x1, [x19, #256]
   3b484:	str	x27, [sp, #80]
   3b488:	add	x27, x20, x0
   3b48c:	b	3b4e4 <__asan_backtrace_create_state@@Base+0x78fc>
   3b490:	ldp	x3, x2, [x19, #272]
   3b494:	strb	wzr, [x19, #255]
   3b498:	add	x20, x20, #0x1
   3b49c:	blr	x3
   3b4a0:	strb	w24, [x19]
   3b4a4:	ldr	x0, [x19, #320]
   3b4a8:	str	x25, [x19, #256]
   3b4ac:	strb	w24, [x19, #264]
   3b4b0:	cmp	x20, x27
   3b4b4:	add	x0, x0, #0x1
   3b4b8:	str	x0, [x19, #320]
   3b4bc:	mov	x0, #0x1                   	// #1
   3b4c0:	b.eq	3b2e8 <__asan_backtrace_create_state@@Base+0x7700>  // b.none
   3b4c4:	ldrb	w24, [x20]
   3b4c8:	add	x1, x0, #0x1
   3b4cc:	str	x1, [x19, #256]
   3b4d0:	strb	w24, [x19, x0]
   3b4d4:	add	x20, x20, #0x1
   3b4d8:	strb	w24, [x19, #264]
   3b4dc:	cmp	x27, x20
   3b4e0:	b.eq	3b2e8 <__asan_backtrace_create_state@@Base+0x7700>  // b.none
   3b4e4:	ldrb	w24, [x20]
   3b4e8:	mov	x0, x19
   3b4ec:	cmp	x1, #0xff
   3b4f0:	b.eq	3b490 <__asan_backtrace_create_state@@Base+0x78a8>  // b.none
   3b4f4:	mov	x0, x1
   3b4f8:	b	3b4c8 <__asan_backtrace_create_state@@Base+0x78e0>
   3b4fc:	ldr	x27, [sp, #80]
   3b500:	mov	x2, x23
   3b504:	mov	w1, w22
   3b508:	mov	x0, x19
   3b50c:	bl	3aed0 <__asan_backtrace_create_state@@Base+0x72e8>
   3b510:	mov	x2, x25
   3b514:	b	3b300 <__asan_backtrace_create_state@@Base+0x7718>
   3b518:	ldp	x3, x2, [x19, #272]
   3b51c:	strb	wzr, [x19, #255]
   3b520:	mov	x0, x19
   3b524:	blr	x3
   3b528:	ldr	x2, [x19, #320]
   3b52c:	mov	x0, #0x1                   	// #1
   3b530:	mov	x1, #0x0                   	// #0
   3b534:	add	x2, x2, x0
   3b538:	str	x2, [x19, #320]
   3b53c:	b	3b388 <__asan_backtrace_create_state@@Base+0x77a0>
   3b540:	ldp	x3, x2, [x19, #272]
   3b544:	strb	wzr, [x19, #255]
   3b548:	mov	x0, x19
   3b54c:	blr	x3
   3b550:	ldr	x2, [x19, #320]
   3b554:	mov	x0, #0x1                   	// #1
   3b558:	mov	x1, #0x0                   	// #0
   3b55c:	add	x2, x2, x0
   3b560:	str	x2, [x19, #320]
   3b564:	b	3b210 <__asan_backtrace_create_state@@Base+0x7628>
   3b568:	stp	x29, x30, [sp, #-96]!
   3b56c:	mov	x29, sp
   3b570:	stp	x19, x20, [sp, #16]
   3b574:	mov	x19, x0
   3b578:	ldr	w0, [x2]
   3b57c:	stp	x21, x22, [sp, #32]
   3b580:	mov	x20, x2
   3b584:	sub	w0, w0, #0x3
   3b588:	mov	w21, w1
   3b58c:	cmp	w0, #0x4d
   3b590:	b.ls	3b600 <__asan_backtrace_create_state@@Base+0x7a18>  // b.plast
   3b594:	ldr	w0, [x20, #4]
   3b598:	cmp	w0, #0x1
   3b59c:	b.gt	3c0f0 <__asan_backtrace_create_state@@Base+0x8508>
   3b5a0:	ldr	w1, [x19, #308]
   3b5a4:	cmp	w1, #0x400
   3b5a8:	b.gt	3c0f0 <__asan_backtrace_create_state@@Base+0x8508>
   3b5ac:	ldr	x3, [x19, #328]
   3b5b0:	add	w0, w0, #0x1
   3b5b4:	str	w0, [x20, #4]
   3b5b8:	add	w1, w1, #0x1
   3b5bc:	add	x0, sp, #0x50
   3b5c0:	str	w1, [x19, #308]
   3b5c4:	str	x0, [x19, #328]
   3b5c8:	mov	w1, w21
   3b5cc:	mov	x0, x19
   3b5d0:	mov	x2, x20
   3b5d4:	stp	x20, x3, [sp, #80]
   3b5d8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3b5dc:	ldr	w1, [x20, #4]
   3b5e0:	ldr	x0, [sp, #88]
   3b5e4:	str	x0, [x19, #328]
   3b5e8:	ldr	w0, [x19, #308]
   3b5ec:	sub	w1, w1, #0x1
   3b5f0:	str	w1, [x20, #4]
   3b5f4:	sub	w0, w0, #0x1
   3b5f8:	str	w0, [x19, #308]
   3b5fc:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3b600:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3b604:	add	x1, x1, #0xb94
   3b608:	stp	x23, x24, [sp, #48]
   3b60c:	ldrh	w0, [x1, w0, uxtw #1]
   3b610:	adr	x1, 3b61c <__asan_backtrace_create_state@@Base+0x7a34>
   3b614:	add	x0, x1, w0, sxth #2
   3b618:	br	x0
   3b61c:	ldp	x23, x24, [sp, #48]
   3b620:	b	3b594 <__asan_backtrace_create_state@@Base+0x79ac>
   3b624:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b628:	add	x20, x20, #0x20
   3b62c:	mov	x0, x20
   3b630:	bl	67e0 <__asan_internal_strlen@plt>
   3b634:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3b638:	add	x22, x20, x0
   3b63c:	mov	x23, #0x1                   	// #1
   3b640:	ldr	x1, [x19, #256]
   3b644:	b	3b6a0 <__asan_backtrace_create_state@@Base+0x7ab8>
   3b648:	ldp	x3, x2, [x19, #272]
   3b64c:	strb	wzr, [x19, #255]
   3b650:	mov	x0, x19
   3b654:	add	x20, x20, #0x1
   3b658:	blr	x3
   3b65c:	strb	w21, [x19]
   3b660:	ldr	x0, [x19, #320]
   3b664:	str	x23, [x19, #256]
   3b668:	strb	w21, [x19, #264]
   3b66c:	cmp	x20, x22
   3b670:	add	x0, x0, #0x1
   3b674:	str	x0, [x19, #320]
   3b678:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b67c:	ldrb	w21, [x20]
   3b680:	mov	x0, #0x1                   	// #1
   3b684:	add	x1, x0, #0x1
   3b688:	str	x1, [x19, #256]
   3b68c:	strb	w21, [x19, x0]
   3b690:	add	x20, x20, #0x1
   3b694:	strb	w21, [x19, #264]
   3b698:	cmp	x20, x22
   3b69c:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b6a0:	ldrb	w21, [x20]
   3b6a4:	cmp	x1, #0xff
   3b6a8:	b.eq	3b648 <__asan_backtrace_create_state@@Base+0x7a60>  // b.none
   3b6ac:	mov	x0, x1
   3b6b0:	b	3b684 <__asan_backtrace_create_state@@Base+0x7a9c>
   3b6b4:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b6b8:	add	x20, x20, #0x30
   3b6bc:	mov	x0, x20
   3b6c0:	bl	67e0 <__asan_internal_strlen@plt>
   3b6c4:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3b6c8:	add	x22, x20, x0
   3b6cc:	mov	x23, #0x1                   	// #1
   3b6d0:	ldr	x1, [x19, #256]
   3b6d4:	b	3b730 <__asan_backtrace_create_state@@Base+0x7b48>
   3b6d8:	ldp	x3, x2, [x19, #272]
   3b6dc:	strb	wzr, [x19, #255]
   3b6e0:	mov	x0, x19
   3b6e4:	add	x20, x20, #0x1
   3b6e8:	blr	x3
   3b6ec:	strb	w21, [x19]
   3b6f0:	ldr	x0, [x19, #320]
   3b6f4:	str	x23, [x19, #256]
   3b6f8:	strb	w21, [x19, #264]
   3b6fc:	cmp	x20, x22
   3b700:	add	x0, x0, #0x1
   3b704:	str	x0, [x19, #320]
   3b708:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b70c:	ldrb	w21, [x20]
   3b710:	mov	x0, #0x1                   	// #1
   3b714:	add	x1, x0, #0x1
   3b718:	str	x1, [x19, #256]
   3b71c:	strb	w21, [x19, x0]
   3b720:	add	x20, x20, #0x1
   3b724:	strb	w21, [x19, #264]
   3b728:	cmp	x22, x20
   3b72c:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b730:	ldrb	w21, [x20]
   3b734:	cmp	x1, #0xff
   3b738:	b.eq	3b6d8 <__asan_backtrace_create_state@@Base+0x7af0>  // b.none
   3b73c:	mov	x0, x1
   3b740:	b	3b714 <__asan_backtrace_create_state@@Base+0x7b2c>
   3b744:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b748:	add	x20, x20, #0x40
   3b74c:	mov	x0, x20
   3b750:	bl	67e0 <__asan_internal_strlen@plt>
   3b754:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3b758:	add	x22, x20, x0
   3b75c:	mov	x23, #0x1                   	// #1
   3b760:	ldr	x1, [x19, #256]
   3b764:	b	3b7c0 <__asan_backtrace_create_state@@Base+0x7bd8>
   3b768:	ldp	x3, x2, [x19, #272]
   3b76c:	strb	wzr, [x19, #255]
   3b770:	mov	x0, x19
   3b774:	add	x20, x20, #0x1
   3b778:	blr	x3
   3b77c:	strb	w21, [x19]
   3b780:	ldr	x0, [x19, #320]
   3b784:	str	x23, [x19, #256]
   3b788:	strb	w21, [x19, #264]
   3b78c:	cmp	x20, x22
   3b790:	add	x0, x0, #0x1
   3b794:	str	x0, [x19, #320]
   3b798:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b79c:	ldrb	w21, [x20]
   3b7a0:	mov	x0, #0x1                   	// #1
   3b7a4:	add	x1, x0, #0x1
   3b7a8:	str	x1, [x19, #256]
   3b7ac:	strb	w21, [x19, x0]
   3b7b0:	add	x20, x20, #0x1
   3b7b4:	strb	w21, [x19, #264]
   3b7b8:	cmp	x22, x20
   3b7bc:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b7c0:	ldrb	w21, [x20]
   3b7c4:	cmp	x1, #0xff
   3b7c8:	b.eq	3b768 <__asan_backtrace_create_state@@Base+0x7b80>  // b.none
   3b7cc:	mov	x0, x1
   3b7d0:	b	3b7a4 <__asan_backtrace_create_state@@Base+0x7bbc>
   3b7d4:	tbz	w21, #2, 3bff8 <__asan_backtrace_create_state@@Base+0x8410>
   3b7d8:	ldp	x23, x24, [sp, #48]
   3b7dc:	ldp	x19, x20, [sp, #16]
   3b7e0:	ldp	x21, x22, [sp, #32]
   3b7e4:	ldp	x29, x30, [sp], #96
   3b7e8:	ret
   3b7ec:	ldr	x1, [x19, #256]
   3b7f0:	add	x0, x1, #0x1
   3b7f4:	cmp	x1, #0xff
   3b7f8:	b.ne	3b820 <__asan_backtrace_create_state@@Base+0x7c38>  // b.any
   3b7fc:	ldp	x3, x2, [x19, #272]
   3b800:	strb	wzr, [x19, #255]
   3b804:	mov	x0, x19
   3b808:	blr	x3
   3b80c:	ldr	x2, [x19, #320]
   3b810:	mov	x0, #0x1                   	// #1
   3b814:	mov	x1, #0x0                   	// #0
   3b818:	add	x2, x2, x0
   3b81c:	str	x2, [x19, #320]
   3b820:	str	x0, [x19, #256]
   3b824:	mov	w0, #0x20                  	// #32
   3b828:	strb	w0, [x19, x1]
   3b82c:	strb	w0, [x19, #264]
   3b830:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b834:	add	x20, x20, #0x78
   3b838:	mov	x0, x20
   3b83c:	bl	67e0 <__asan_internal_strlen@plt>
   3b840:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3b844:	add	x22, x20, x0
   3b848:	mov	x23, #0x1                   	// #1
   3b84c:	ldr	x1, [x19, #256]
   3b850:	b	3b8ac <__asan_backtrace_create_state@@Base+0x7cc4>
   3b854:	ldp	x3, x2, [x19, #272]
   3b858:	strb	wzr, [x19, #255]
   3b85c:	mov	x0, x19
   3b860:	add	x20, x20, #0x1
   3b864:	blr	x3
   3b868:	strb	w21, [x19]
   3b86c:	ldr	x0, [x19, #320]
   3b870:	str	x23, [x19, #256]
   3b874:	strb	w21, [x19, #264]
   3b878:	cmp	x20, x22
   3b87c:	add	x0, x0, #0x1
   3b880:	str	x0, [x19, #320]
   3b884:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b888:	ldrb	w21, [x20]
   3b88c:	mov	x0, #0x1                   	// #1
   3b890:	add	x1, x0, #0x1
   3b894:	str	x1, [x19, #256]
   3b898:	strb	w21, [x19, x0]
   3b89c:	add	x20, x20, #0x1
   3b8a0:	strb	w21, [x19, #264]
   3b8a4:	cmp	x22, x20
   3b8a8:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b8ac:	ldrb	w21, [x20]
   3b8b0:	cmp	x1, #0xff
   3b8b4:	b.eq	3b854 <__asan_backtrace_create_state@@Base+0x7c6c>  // b.none
   3b8b8:	mov	x0, x1
   3b8bc:	b	3b890 <__asan_backtrace_create_state@@Base+0x7ca8>
   3b8c0:	ldrb	w0, [x19, #264]
   3b8c4:	cmp	w0, #0x28
   3b8c8:	b.eq	3b910 <__asan_backtrace_create_state@@Base+0x7d28>  // b.none
   3b8cc:	ldr	x1, [x19, #256]
   3b8d0:	add	x0, x1, #0x1
   3b8d4:	cmp	x1, #0xff
   3b8d8:	b.ne	3b900 <__asan_backtrace_create_state@@Base+0x7d18>  // b.any
   3b8dc:	ldp	x3, x2, [x19, #272]
   3b8e0:	strb	wzr, [x19, #255]
   3b8e4:	mov	x0, x19
   3b8e8:	blr	x3
   3b8ec:	ldr	x2, [x19, #320]
   3b8f0:	mov	x0, #0x1                   	// #1
   3b8f4:	mov	x1, #0x0                   	// #0
   3b8f8:	add	x2, x2, x0
   3b8fc:	str	x2, [x19, #320]
   3b900:	str	x0, [x19, #256]
   3b904:	mov	w0, #0x20                  	// #32
   3b908:	strb	w0, [x19, x1]
   3b90c:	strb	w0, [x19, #264]
   3b910:	ldr	x20, [x20, #8]
   3b914:	cbz	x20, 3c160 <__asan_backtrace_create_state@@Base+0x8578>
   3b918:	ldr	w0, [x20, #4]
   3b91c:	cmp	w0, #0x1
   3b920:	b.gt	3c160 <__asan_backtrace_create_state@@Base+0x8578>
   3b924:	ldr	w1, [x19, #308]
   3b928:	cmp	w1, #0x400
   3b92c:	b.gt	3c160 <__asan_backtrace_create_state@@Base+0x8578>
   3b930:	ldr	x3, [x19, #328]
   3b934:	add	w0, w0, #0x1
   3b938:	str	w0, [x20, #4]
   3b93c:	add	w1, w1, #0x1
   3b940:	add	x0, sp, #0x50
   3b944:	str	w1, [x19, #308]
   3b948:	str	x0, [x19, #328]
   3b94c:	mov	w1, w21
   3b950:	mov	x0, x19
   3b954:	mov	x2, x20
   3b958:	stp	x20, x3, [sp, #80]
   3b95c:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3b960:	ldr	w1, [x20, #4]
   3b964:	ldr	x0, [sp, #88]
   3b968:	str	x0, [x19, #328]
   3b96c:	ldr	w0, [x19, #308]
   3b970:	sub	w1, w1, #0x1
   3b974:	str	w1, [x20, #4]
   3b978:	sub	w0, w0, #0x1
   3b97c:	str	w0, [x19, #308]
   3b980:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3b984:	add	x20, x20, #0xa0
   3b988:	mov	x0, x20
   3b98c:	bl	67e0 <__asan_internal_strlen@plt>
   3b990:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3b994:	add	x22, x20, x0
   3b998:	mov	x23, #0x1                   	// #1
   3b99c:	ldr	x1, [x19, #256]
   3b9a0:	b	3b9fc <__asan_backtrace_create_state@@Base+0x7e14>
   3b9a4:	ldp	x3, x2, [x19, #272]
   3b9a8:	strb	wzr, [x19, #255]
   3b9ac:	mov	x0, x19
   3b9b0:	add	x20, x20, #0x1
   3b9b4:	blr	x3
   3b9b8:	strb	w21, [x19]
   3b9bc:	ldr	x0, [x19, #320]
   3b9c0:	str	x23, [x19, #256]
   3b9c4:	strb	w21, [x19, #264]
   3b9c8:	cmp	x20, x22
   3b9cc:	add	x0, x0, #0x1
   3b9d0:	str	x0, [x19, #320]
   3b9d4:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b9d8:	ldrb	w21, [x20]
   3b9dc:	mov	x0, #0x1                   	// #1
   3b9e0:	add	x1, x0, #0x1
   3b9e4:	str	x1, [x19, #256]
   3b9e8:	strb	w21, [x19, x0]
   3b9ec:	add	x20, x20, #0x1
   3b9f0:	strb	w21, [x19, #264]
   3b9f4:	cmp	x22, x20
   3b9f8:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3b9fc:	ldrb	w21, [x20]
   3ba00:	cmp	x1, #0xff
   3ba04:	b.eq	3b9a4 <__asan_backtrace_create_state@@Base+0x7dbc>  // b.none
   3ba08:	mov	x0, x1
   3ba0c:	b	3b9e0 <__asan_backtrace_create_state@@Base+0x7df8>
   3ba10:	ldr	x1, [x19, #256]
   3ba14:	add	x0, x1, #0x1
   3ba18:	cmp	x1, #0xff
   3ba1c:	b.eq	3c12c <__asan_backtrace_create_state@@Base+0x8544>  // b.none
   3ba20:	str	x0, [x19, #256]
   3ba24:	mov	w0, #0x20                  	// #32
   3ba28:	strb	w0, [x19, x1]
   3ba2c:	strb	w0, [x19, #264]
   3ba30:	ldr	x20, [x20, #16]
   3ba34:	cbz	x20, 3ba50 <__asan_backtrace_create_state@@Base+0x7e68>
   3ba38:	ldr	w0, [x20, #4]
   3ba3c:	cmp	w0, #0x1
   3ba40:	b.gt	3ba50 <__asan_backtrace_create_state@@Base+0x7e68>
   3ba44:	ldr	w1, [x19, #308]
   3ba48:	cmp	w1, #0x400
   3ba4c:	b.le	3c08c <__asan_backtrace_create_state@@Base+0x84a4>
   3ba50:	mov	w0, #0x1                   	// #1
   3ba54:	ldp	x23, x24, [sp, #48]
   3ba58:	str	w0, [x19, #304]
   3ba5c:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3ba60:	adrp	x22, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3ba64:	add	x22, x22, #0xa8
   3ba68:	mov	x0, x22
   3ba6c:	bl	67e0 <__asan_internal_strlen@plt>
   3ba70:	cbz	x0, 3bf14 <__asan_backtrace_create_state@@Base+0x832c>
   3ba74:	add	x24, x22, x0
   3ba78:	ldr	x1, [x19, #256]
   3ba7c:	str	x25, [sp, #64]
   3ba80:	mov	x25, #0x1                   	// #1
   3ba84:	b	3bae0 <__asan_backtrace_create_state@@Base+0x7ef8>
   3ba88:	ldp	x3, x2, [x19, #272]
   3ba8c:	strb	wzr, [x19, #255]
   3ba90:	mov	x0, x19
   3ba94:	add	x22, x22, #0x1
   3ba98:	blr	x3
   3ba9c:	strb	w23, [x19]
   3baa0:	ldr	x0, [x19, #320]
   3baa4:	str	x25, [x19, #256]
   3baa8:	strb	w23, [x19, #264]
   3baac:	cmp	x22, x24
   3bab0:	add	x0, x0, #0x1
   3bab4:	str	x0, [x19, #320]
   3bab8:	b.eq	3bf10 <__asan_backtrace_create_state@@Base+0x8328>  // b.none
   3babc:	ldrb	w23, [x22]
   3bac0:	mov	x0, #0x1                   	// #1
   3bac4:	add	x1, x0, #0x1
   3bac8:	str	x1, [x19, #256]
   3bacc:	strb	w23, [x19, x0]
   3bad0:	add	x22, x22, #0x1
   3bad4:	strb	w23, [x19, #264]
   3bad8:	cmp	x24, x22
   3badc:	b.eq	3bf10 <__asan_backtrace_create_state@@Base+0x8328>  // b.none
   3bae0:	ldrb	w23, [x22]
   3bae4:	cmp	x1, #0xff
   3bae8:	b.eq	3ba88 <__asan_backtrace_create_state@@Base+0x7ea0>  // b.none
   3baec:	mov	x0, x1
   3baf0:	b	3bac4 <__asan_backtrace_create_state@@Base+0x7edc>
   3baf4:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3baf8:	add	x20, x20, #0x48
   3bafc:	mov	x0, x20
   3bb00:	bl	67e0 <__asan_internal_strlen@plt>
   3bb04:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3bb08:	add	x22, x20, x0
   3bb0c:	mov	x23, #0x1                   	// #1
   3bb10:	ldr	x1, [x19, #256]
   3bb14:	b	3bb70 <__asan_backtrace_create_state@@Base+0x7f88>
   3bb18:	ldp	x3, x2, [x19, #272]
   3bb1c:	strb	wzr, [x19, #255]
   3bb20:	mov	x0, x19
   3bb24:	add	x20, x20, #0x1
   3bb28:	blr	x3
   3bb2c:	strb	w21, [x19]
   3bb30:	ldr	x0, [x19, #320]
   3bb34:	str	x23, [x19, #256]
   3bb38:	strb	w21, [x19, #264]
   3bb3c:	cmp	x20, x22
   3bb40:	add	x0, x0, #0x1
   3bb44:	str	x0, [x19, #320]
   3bb48:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3bb4c:	ldrb	w21, [x20]
   3bb50:	mov	x0, #0x1                   	// #1
   3bb54:	add	x1, x0, #0x1
   3bb58:	str	x1, [x19, #256]
   3bb5c:	strb	w21, [x19, x0]
   3bb60:	add	x20, x20, #0x1
   3bb64:	strb	w21, [x19, #264]
   3bb68:	cmp	x22, x20
   3bb6c:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3bb70:	ldrb	w21, [x20]
   3bb74:	cmp	x1, #0xff
   3bb78:	b.eq	3bb18 <__asan_backtrace_create_state@@Base+0x7f30>  // b.none
   3bb7c:	mov	x0, x1
   3bb80:	b	3bb54 <__asan_backtrace_create_state@@Base+0x7f6c>
   3bb84:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3bb88:	add	x20, x20, #0x90
   3bb8c:	mov	x0, x20
   3bb90:	bl	67e0 <__asan_internal_strlen@plt>
   3bb94:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3bb98:	add	x22, x20, x0
   3bb9c:	mov	x23, #0x1                   	// #1
   3bba0:	ldr	x1, [x19, #256]
   3bba4:	b	3bc00 <__asan_backtrace_create_state@@Base+0x8018>
   3bba8:	ldp	x3, x2, [x19, #272]
   3bbac:	strb	wzr, [x19, #255]
   3bbb0:	mov	x0, x19
   3bbb4:	add	x20, x20, #0x1
   3bbb8:	blr	x3
   3bbbc:	strb	w21, [x19]
   3bbc0:	ldr	x0, [x19, #320]
   3bbc4:	str	x23, [x19, #256]
   3bbc8:	strb	w21, [x19, #264]
   3bbcc:	cmp	x20, x22
   3bbd0:	add	x0, x0, #0x1
   3bbd4:	str	x0, [x19, #320]
   3bbd8:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3bbdc:	ldrb	w21, [x20]
   3bbe0:	mov	x0, #0x1                   	// #1
   3bbe4:	add	x1, x0, #0x1
   3bbe8:	str	x1, [x19, #256]
   3bbec:	strb	w21, [x19, x0]
   3bbf0:	add	x20, x20, #0x1
   3bbf4:	strb	w21, [x19, #264]
   3bbf8:	cmp	x22, x20
   3bbfc:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3bc00:	ldrb	w21, [x20]
   3bc04:	cmp	x1, #0xff
   3bc08:	b.eq	3bba8 <__asan_backtrace_create_state@@Base+0x7fc0>  // b.none
   3bc0c:	mov	x0, x1
   3bc10:	b	3bbe4 <__asan_backtrace_create_state@@Base+0x7ffc>
   3bc14:	adrp	x22, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3bc18:	add	x22, x22, #0x70
   3bc1c:	mov	x0, x22
   3bc20:	bl	67e0 <__asan_internal_strlen@plt>
   3bc24:	cbz	x0, 3be34 <__asan_backtrace_create_state@@Base+0x824c>
   3bc28:	add	x24, x22, x0
   3bc2c:	ldr	x1, [x19, #256]
   3bc30:	str	x25, [sp, #64]
   3bc34:	mov	x25, #0x1                   	// #1
   3bc38:	b	3bc94 <__asan_backtrace_create_state@@Base+0x80ac>
   3bc3c:	ldp	x3, x2, [x19, #272]
   3bc40:	strb	wzr, [x19, #255]
   3bc44:	mov	x0, x19
   3bc48:	add	x22, x22, #0x1
   3bc4c:	blr	x3
   3bc50:	strb	w23, [x19]
   3bc54:	ldr	x0, [x19, #320]
   3bc58:	str	x25, [x19, #256]
   3bc5c:	strb	w23, [x19, #264]
   3bc60:	cmp	x22, x24
   3bc64:	add	x0, x0, #0x1
   3bc68:	str	x0, [x19, #320]
   3bc6c:	b.eq	3c16c <__asan_backtrace_create_state@@Base+0x8584>  // b.none
   3bc70:	ldrb	w23, [x22]
   3bc74:	mov	x0, #0x1                   	// #1
   3bc78:	add	x1, x0, #0x1
   3bc7c:	str	x1, [x19, #256]
   3bc80:	strb	w23, [x19, x0]
   3bc84:	add	x22, x22, #0x1
   3bc88:	strb	w23, [x19, #264]
   3bc8c:	cmp	x24, x22
   3bc90:	b.eq	3be30 <__asan_backtrace_create_state@@Base+0x8248>  // b.none
   3bc94:	ldrb	w23, [x22]
   3bc98:	cmp	x1, #0xff
   3bc9c:	b.eq	3bc3c <__asan_backtrace_create_state@@Base+0x8054>  // b.none
   3bca0:	mov	x0, x1
   3bca4:	b	3bc78 <__asan_backtrace_create_state@@Base+0x8090>
   3bca8:	ldr	x20, [x2, #8]
   3bcac:	cbnz	x20, 3ba38 <__asan_backtrace_create_state@@Base+0x7e50>
   3bcb0:	b	3ba50 <__asan_backtrace_create_state@@Base+0x7e68>
   3bcb4:	ldr	x0, [x19, #256]
   3bcb8:	cmp	x0, #0xff
   3bcbc:	b.eq	3c0fc <__asan_backtrace_create_state@@Base+0x8514>  // b.none
   3bcc0:	add	x1, x0, #0x1
   3bcc4:	str	x1, [x19, #256]
   3bcc8:	mov	w2, #0x20                  	// #32
   3bccc:	strb	w2, [x19, x0]
   3bcd0:	strb	w2, [x19, #264]
   3bcd4:	b	3be00 <__asan_backtrace_create_state@@Base+0x8218>
   3bcd8:	adrp	x22, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3bcdc:	add	x22, x22, #0x60
   3bce0:	mov	x0, x22
   3bce4:	bl	67e0 <__asan_internal_strlen@plt>
   3bce8:	cbz	x0, 3be34 <__asan_backtrace_create_state@@Base+0x824c>
   3bcec:	add	x24, x22, x0
   3bcf0:	ldr	x1, [x19, #256]
   3bcf4:	str	x25, [sp, #64]
   3bcf8:	mov	x25, #0x1                   	// #1
   3bcfc:	b	3bd58 <__asan_backtrace_create_state@@Base+0x8170>
   3bd00:	ldp	x3, x2, [x19, #272]
   3bd04:	strb	wzr, [x19, #255]
   3bd08:	mov	x0, x19
   3bd0c:	add	x22, x22, #0x1
   3bd10:	blr	x3
   3bd14:	strb	w23, [x19]
   3bd18:	ldr	x0, [x19, #320]
   3bd1c:	str	x25, [x19, #256]
   3bd20:	strb	w23, [x19, #264]
   3bd24:	cmp	x24, x22
   3bd28:	add	x0, x0, #0x1
   3bd2c:	str	x0, [x19, #320]
   3bd30:	b.eq	3c16c <__asan_backtrace_create_state@@Base+0x8584>  // b.none
   3bd34:	ldrb	w23, [x22]
   3bd38:	mov	x0, #0x1                   	// #1
   3bd3c:	add	x1, x0, #0x1
   3bd40:	str	x1, [x19, #256]
   3bd44:	strb	w23, [x19, x0]
   3bd48:	add	x22, x22, #0x1
   3bd4c:	strb	w23, [x19, #264]
   3bd50:	cmp	x24, x22
   3bd54:	b.eq	3be30 <__asan_backtrace_create_state@@Base+0x8248>  // b.none
   3bd58:	ldrb	w23, [x22]
   3bd5c:	cmp	x1, #0xff
   3bd60:	b.eq	3bd00 <__asan_backtrace_create_state@@Base+0x8118>  // b.none
   3bd64:	mov	x0, x1
   3bd68:	b	3bd3c <__asan_backtrace_create_state@@Base+0x8154>
   3bd6c:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3bd70:	add	x20, x20, #0x80
   3bd74:	mov	x0, x20
   3bd78:	bl	67e0 <__asan_internal_strlen@plt>
   3bd7c:	cbz	x0, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3bd80:	add	x22, x20, x0
   3bd84:	mov	x23, #0x1                   	// #1
   3bd88:	ldr	x1, [x19, #256]
   3bd8c:	b	3bde8 <__asan_backtrace_create_state@@Base+0x8200>
   3bd90:	ldp	x3, x2, [x19, #272]
   3bd94:	strb	wzr, [x19, #255]
   3bd98:	mov	x0, x19
   3bd9c:	add	x20, x20, #0x1
   3bda0:	blr	x3
   3bda4:	strb	w21, [x19]
   3bda8:	ldr	x0, [x19, #320]
   3bdac:	str	x23, [x19, #256]
   3bdb0:	strb	w21, [x19, #264]
   3bdb4:	cmp	x22, x20
   3bdb8:	add	x0, x0, #0x1
   3bdbc:	str	x0, [x19, #320]
   3bdc0:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3bdc4:	ldrb	w21, [x20]
   3bdc8:	mov	x0, #0x1                   	// #1
   3bdcc:	add	x1, x0, #0x1
   3bdd0:	str	x1, [x19, #256]
   3bdd4:	strb	w21, [x19, x0]
   3bdd8:	add	x20, x20, #0x1
   3bddc:	strb	w21, [x19, #264]
   3bde0:	cmp	x22, x20
   3bde4:	b.eq	3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3bde8:	ldrb	w21, [x20]
   3bdec:	cmp	x1, #0xff
   3bdf0:	b.eq	3bd90 <__asan_backtrace_create_state@@Base+0x81a8>  // b.none
   3bdf4:	mov	x0, x1
   3bdf8:	b	3bdcc <__asan_backtrace_create_state@@Base+0x81e4>
   3bdfc:	ldr	x1, [x19, #256]
   3be00:	cmp	x1, #0xff
   3be04:	b.eq	3bfd0 <__asan_backtrace_create_state@@Base+0x83e8>  // b.none
   3be08:	add	x0, x1, #0x1
   3be0c:	str	x0, [x19, #256]
   3be10:	mov	w0, #0x26                  	// #38
   3be14:	strb	w0, [x19, x1]
   3be18:	strb	w0, [x19, #264]
   3be1c:	ldp	x19, x20, [sp, #16]
   3be20:	ldp	x21, x22, [sp, #32]
   3be24:	ldp	x23, x24, [sp, #48]
   3be28:	ldp	x29, x30, [sp], #96
   3be2c:	ret
   3be30:	ldr	x25, [sp, #64]
   3be34:	ldr	x22, [x20, #16]
   3be38:	cbz	x22, 3b7d8 <__asan_backtrace_create_state@@Base+0x7bf0>
   3be3c:	ldr	x1, [x19, #256]
   3be40:	cmp	x1, #0xff
   3be44:	b.eq	3c044 <__asan_backtrace_create_state@@Base+0x845c>  // b.none
   3be48:	add	x0, x1, #0x1
   3be4c:	str	x0, [x19, #256]
   3be50:	mov	w2, #0x28                  	// #40
   3be54:	strb	w2, [x19, x1]
   3be58:	strb	w2, [x19, #264]
   3be5c:	ldr	w1, [x22, #4]
   3be60:	cmp	w1, #0x1
   3be64:	b.gt	3c0e4 <__asan_backtrace_create_state@@Base+0x84fc>
   3be68:	ldr	w2, [x19, #308]
   3be6c:	cmp	w2, #0x400
   3be70:	b.gt	3c0e4 <__asan_backtrace_create_state@@Base+0x84fc>
   3be74:	ldr	x3, [x19, #328]
   3be78:	add	w1, w1, #0x1
   3be7c:	str	w1, [x22, #4]
   3be80:	add	w2, w2, #0x1
   3be84:	add	x0, sp, #0x50
   3be88:	str	w2, [x19, #308]
   3be8c:	str	x0, [x19, #328]
   3be90:	mov	w1, w21
   3be94:	mov	x2, x22
   3be98:	mov	x0, x19
   3be9c:	stp	x22, x3, [sp, #80]
   3bea0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3bea4:	ldr	w2, [x22, #4]
   3bea8:	ldr	x0, [sp, #88]
   3beac:	str	x0, [x19, #328]
   3beb0:	ldr	w1, [x19, #308]
   3beb4:	sub	w2, w2, #0x1
   3beb8:	ldr	x0, [x19, #256]
   3bebc:	str	w2, [x22, #4]
   3bec0:	sub	w1, w1, #0x1
   3bec4:	str	w1, [x19, #308]
   3bec8:	cmp	x0, #0xff
   3becc:	b.ne	3c084 <__asan_backtrace_create_state@@Base+0x849c>  // b.any
   3bed0:	ldp	x3, x2, [x19, #272]
   3bed4:	strb	wzr, [x19, #255]
   3bed8:	mov	x1, x0
   3bedc:	mov	x0, x19
   3bee0:	blr	x3
   3bee4:	ldr	x2, [x19, #320]
   3bee8:	mov	x1, #0x1                   	// #1
   3beec:	mov	x0, #0x0                   	// #0
   3bef0:	add	x2, x2, x1
   3bef4:	str	x2, [x19, #320]
   3bef8:	str	x1, [x19, #256]
   3befc:	mov	w1, #0x29                  	// #41
   3bf00:	strb	w1, [x19, x0]
   3bf04:	strb	w1, [x19, #264]
   3bf08:	ldp	x23, x24, [sp, #48]
   3bf0c:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3bf10:	ldr	x25, [sp, #64]
   3bf14:	ldr	x20, [x20, #8]
   3bf18:	cbz	x20, 3c154 <__asan_backtrace_create_state@@Base+0x856c>
   3bf1c:	ldr	w0, [x20, #4]
   3bf20:	cmp	w0, #0x1
   3bf24:	b.gt	3c154 <__asan_backtrace_create_state@@Base+0x856c>
   3bf28:	ldr	w1, [x19, #308]
   3bf2c:	cmp	w1, #0x400
   3bf30:	b.gt	3c154 <__asan_backtrace_create_state@@Base+0x856c>
   3bf34:	ldr	x3, [x19, #328]
   3bf38:	add	w0, w0, #0x1
   3bf3c:	str	w0, [x20, #4]
   3bf40:	add	w1, w1, #0x1
   3bf44:	add	x0, sp, #0x50
   3bf48:	str	w1, [x19, #308]
   3bf4c:	str	x0, [x19, #328]
   3bf50:	mov	w1, w21
   3bf54:	mov	x0, x19
   3bf58:	mov	x2, x20
   3bf5c:	stp	x20, x3, [sp, #80]
   3bf60:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3bf64:	ldr	w1, [x20, #4]
   3bf68:	ldr	x0, [sp, #88]
   3bf6c:	str	x0, [x19, #328]
   3bf70:	ldr	w0, [x19, #308]
   3bf74:	sub	w1, w1, #0x1
   3bf78:	str	w1, [x20, #4]
   3bf7c:	sub	w0, w0, #0x1
   3bf80:	str	w0, [x19, #308]
   3bf84:	ldr	x1, [x19, #256]
   3bf88:	add	x0, x1, #0x1
   3bf8c:	cmp	x1, #0xff
   3bf90:	b.ne	3bfb8 <__asan_backtrace_create_state@@Base+0x83d0>  // b.any
   3bf94:	ldp	x3, x2, [x19, #272]
   3bf98:	strb	wzr, [x19, #255]
   3bf9c:	mov	x0, x19
   3bfa0:	blr	x3
   3bfa4:	ldr	x2, [x19, #320]
   3bfa8:	mov	x0, #0x1                   	// #1
   3bfac:	mov	x1, #0x0                   	// #0
   3bfb0:	add	x2, x2, x0
   3bfb4:	str	x2, [x19, #320]
   3bfb8:	str	x0, [x19, #256]
   3bfbc:	mov	w0, #0x29                  	// #41
   3bfc0:	strb	w0, [x19, x1]
   3bfc4:	strb	w0, [x19, #264]
   3bfc8:	ldp	x23, x24, [sp, #48]
   3bfcc:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3bfd0:	ldp	x3, x2, [x19, #272]
   3bfd4:	strb	wzr, [x19, #255]
   3bfd8:	mov	x0, x19
   3bfdc:	blr	x3
   3bfe0:	ldr	x2, [x19, #320]
   3bfe4:	mov	x0, #0x1                   	// #1
   3bfe8:	mov	x1, #0x0                   	// #0
   3bfec:	add	x2, x2, x0
   3bff0:	str	x2, [x19, #320]
   3bff4:	b	3be0c <__asan_backtrace_create_state@@Base+0x8224>
   3bff8:	ldr	x1, [x19, #256]
   3bffc:	add	x0, x1, #0x1
   3c000:	cmp	x1, #0xff
   3c004:	b.ne	3c02c <__asan_backtrace_create_state@@Base+0x8444>  // b.any
   3c008:	ldp	x3, x2, [x19, #272]
   3c00c:	strb	wzr, [x19, #255]
   3c010:	mov	x0, x19
   3c014:	blr	x3
   3c018:	ldr	x2, [x19, #320]
   3c01c:	mov	x0, #0x1                   	// #1
   3c020:	mov	x1, #0x0                   	// #0
   3c024:	add	x2, x2, x0
   3c028:	str	x2, [x19, #320]
   3c02c:	str	x0, [x19, #256]
   3c030:	mov	w0, #0x2a                  	// #42
   3c034:	strb	w0, [x19, x1]
   3c038:	strb	w0, [x19, #264]
   3c03c:	ldp	x23, x24, [sp, #48]
   3c040:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3c044:	ldp	x3, x2, [x19, #272]
   3c048:	strb	wzr, [x19, #255]
   3c04c:	mov	x0, x19
   3c050:	blr	x3
   3c054:	ldr	x0, [x19, #320]
   3c058:	mov	x2, #0x1                   	// #1
   3c05c:	ldr	x22, [x20, #16]
   3c060:	mov	w1, #0x28                  	// #40
   3c064:	add	x0, x0, x2
   3c068:	strb	w1, [x19]
   3c06c:	str	x2, [x19, #256]
   3c070:	strb	w1, [x19, #264]
   3c074:	str	x0, [x19, #320]
   3c078:	cbnz	x22, 3c180 <__asan_backtrace_create_state@@Base+0x8598>
   3c07c:	mov	x0, x2
   3c080:	str	w2, [x19, #304]
   3c084:	add	x1, x0, #0x1
   3c088:	b	3bef8 <__asan_backtrace_create_state@@Base+0x8310>
   3c08c:	ldr	x3, [x19, #328]
   3c090:	add	w0, w0, #0x1
   3c094:	str	w0, [x20, #4]
   3c098:	add	w1, w1, #0x1
   3c09c:	add	x0, sp, #0x50
   3c0a0:	str	w1, [x19, #308]
   3c0a4:	str	x0, [x19, #328]
   3c0a8:	mov	w1, w21
   3c0ac:	mov	x0, x19
   3c0b0:	mov	x2, x20
   3c0b4:	stp	x20, x3, [sp, #80]
   3c0b8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3c0bc:	ldr	w1, [x20, #4]
   3c0c0:	ldr	x0, [sp, #88]
   3c0c4:	sub	w1, w1, #0x1
   3c0c8:	ldp	x23, x24, [sp, #48]
   3c0cc:	str	x0, [x19, #328]
   3c0d0:	ldr	w0, [x19, #308]
   3c0d4:	str	w1, [x20, #4]
   3c0d8:	sub	w0, w0, #0x1
   3c0dc:	str	w0, [x19, #308]
   3c0e0:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3c0e4:	mov	w1, #0x1                   	// #1
   3c0e8:	str	w1, [x19, #304]
   3c0ec:	b	3bec8 <__asan_backtrace_create_state@@Base+0x82e0>
   3c0f0:	mov	w0, #0x1                   	// #1
   3c0f4:	str	w0, [x19, #304]
   3c0f8:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3c0fc:	ldp	x3, x2, [x19, #272]
   3c100:	strb	wzr, [x19, #255]
   3c104:	mov	x1, x0
   3c108:	mov	x0, x19
   3c10c:	blr	x3
   3c110:	ldr	x0, [x19, #320]
   3c114:	mov	w2, #0x20                  	// #32
   3c118:	mov	x1, #0x1                   	// #1
   3c11c:	strb	w2, [x19]
   3c120:	add	x0, x0, x1
   3c124:	str	x0, [x19, #320]
   3c128:	b	3be08 <__asan_backtrace_create_state@@Base+0x8220>
   3c12c:	ldp	x3, x2, [x19, #272]
   3c130:	strb	wzr, [x19, #255]
   3c134:	mov	x0, x19
   3c138:	blr	x3
   3c13c:	ldr	x2, [x19, #320]
   3c140:	mov	x0, #0x1                   	// #1
   3c144:	mov	x1, #0x0                   	// #0
   3c148:	add	x2, x2, x0
   3c14c:	str	x2, [x19, #320]
   3c150:	b	3ba20 <__asan_backtrace_create_state@@Base+0x7e38>
   3c154:	mov	w0, #0x1                   	// #1
   3c158:	str	w0, [x19, #304]
   3c15c:	b	3bf84 <__asan_backtrace_create_state@@Base+0x839c>
   3c160:	mov	w0, #0x1                   	// #1
   3c164:	str	w0, [x19, #304]
   3c168:	b	3b980 <__asan_backtrace_create_state@@Base+0x7d98>
   3c16c:	ldr	x22, [x20, #16]
   3c170:	mov	x1, #0x1                   	// #1
   3c174:	cbz	x22, 3c19c <__asan_backtrace_create_state@@Base+0x85b4>
   3c178:	ldr	x25, [sp, #64]
   3c17c:	b	3be48 <__asan_backtrace_create_state@@Base+0x8260>
   3c180:	ldr	w1, [x22, #4]
   3c184:	mov	x0, x2
   3c188:	cmp	w1, #0x1
   3c18c:	b.le	3be68 <__asan_backtrace_create_state@@Base+0x8280>
   3c190:	add	x1, x0, #0x1
   3c194:	str	w2, [x19, #304]
   3c198:	b	3bef8 <__asan_backtrace_create_state@@Base+0x8310>
   3c19c:	ldp	x23, x24, [sp, #48]
   3c1a0:	ldr	x25, [sp, #64]
   3c1a4:	b	3b7dc <__asan_backtrace_create_state@@Base+0x7bf4>
   3c1a8:	cbz	x2, 3c750 <__asan_backtrace_create_state@@Base+0x8b68>
   3c1ac:	stp	x29, x30, [sp, #-112]!
   3c1b0:	mov	x29, sp
   3c1b4:	stp	x19, x20, [sp, #16]
   3c1b8:	mov	x20, x0
   3c1bc:	mov	x19, x2
   3c1c0:	stp	x21, x22, [sp, #32]
   3c1c4:	mov	w21, w1
   3c1c8:	mov	w22, #0x1                   	// #1
   3c1cc:	stp	x25, x26, [sp, #64]
   3c1d0:	cbnz	w3, 3c2c4 <__asan_backtrace_create_state@@Base+0x86dc>
   3c1d4:	mov	x22, #0x1f                  	// #31
   3c1d8:	stp	x23, x24, [sp, #48]
   3c1dc:	movk	x22, #0x1a, lsl #48
   3c1e0:	mov	w24, #0x1                   	// #1
   3c1e4:	mov	x23, #0x1                   	// #1
   3c1e8:	b	3c250 <__asan_backtrace_create_state@@Base+0x8668>
   3c1ec:	ldr	w2, [x19, #16]
   3c1f0:	cbnz	w2, 3c248 <__asan_backtrace_create_state@@Base+0x8660>
   3c1f4:	ldr	x4, [x19, #8]
   3c1f8:	mov	x2, x4
   3c1fc:	ldr	w5, [x4]
   3c200:	sub	w3, w5, #0x1c
   3c204:	cmp	w3, #0x34
   3c208:	b.hi	3c218 <__asan_backtrace_create_state@@Base+0x8630>  // b.pmore
   3c20c:	lsl	x3, x23, x3
   3c210:	tst	x3, x22
   3c214:	b.ne	3c248 <__asan_backtrace_create_state@@Base+0x8660>  // b.any
   3c218:	ldr	x3, [x19, #24]
   3c21c:	cmp	w5, #0x29
   3c220:	ldr	x25, [x20, #288]
   3c224:	str	w24, [x19, #16]
   3c228:	str	x3, [x20, #288]
   3c22c:	b.eq	3c2e8 <__asan_backtrace_create_state@@Base+0x8700>  // b.none
   3c230:	cmp	w5, #0x2a
   3c234:	b.eq	3c318 <__asan_backtrace_create_state@@Base+0x8730>  // b.none
   3c238:	cmp	w5, #0x2
   3c23c:	b.eq	3c34c <__asan_backtrace_create_state@@Base+0x8764>  // b.none
   3c240:	bl	3b568 <__asan_backtrace_create_state@@Base+0x7980>
   3c244:	str	x25, [x20, #288]
   3c248:	ldr	x19, [x19]
   3c24c:	cbz	x19, 3c260 <__asan_backtrace_create_state@@Base+0x8678>
   3c250:	ldr	w2, [x20, #304]
   3c254:	mov	w1, w21
   3c258:	mov	x0, x20
   3c25c:	cbz	w2, 3c1ec <__asan_backtrace_create_state@@Base+0x8604>
   3c260:	ldp	x23, x24, [sp, #48]
   3c264:	ldp	x19, x20, [sp, #16]
   3c268:	ldp	x21, x22, [sp, #32]
   3c26c:	ldp	x25, x26, [sp, #64]
   3c270:	ldp	x29, x30, [sp], #112
   3c274:	ret
   3c278:	ldr	w2, [x19, #16]
   3c27c:	cbnz	w2, 3c2bc <__asan_backtrace_create_state@@Base+0x86d4>
   3c280:	ldr	x4, [x19, #8]
   3c284:	ldr	x5, [x19, #24]
   3c288:	mov	x2, x4
   3c28c:	ldr	w3, [x4]
   3c290:	ldr	x25, [x20, #288]
   3c294:	str	w22, [x19, #16]
   3c298:	str	x5, [x20, #288]
   3c29c:	cmp	w3, #0x29
   3c2a0:	b.eq	3c2ec <__asan_backtrace_create_state@@Base+0x8704>  // b.none
   3c2a4:	cmp	w3, #0x2a
   3c2a8:	b.eq	3c31c <__asan_backtrace_create_state@@Base+0x8734>  // b.none
   3c2ac:	cmp	w3, #0x2
   3c2b0:	b.eq	3c348 <__asan_backtrace_create_state@@Base+0x8760>  // b.none
   3c2b4:	bl	3b568 <__asan_backtrace_create_state@@Base+0x7980>
   3c2b8:	str	x25, [x20, #288]
   3c2bc:	ldr	x19, [x19]
   3c2c0:	cbz	x19, 3c264 <__asan_backtrace_create_state@@Base+0x867c>
   3c2c4:	ldr	w2, [x20, #304]
   3c2c8:	mov	w1, w21
   3c2cc:	mov	x0, x20
   3c2d0:	cbz	w2, 3c278 <__asan_backtrace_create_state@@Base+0x8690>
   3c2d4:	ldp	x19, x20, [sp, #16]
   3c2d8:	ldp	x21, x22, [sp, #32]
   3c2dc:	ldp	x25, x26, [sp, #64]
   3c2e0:	ldp	x29, x30, [sp], #112
   3c2e4:	ret
   3c2e8:	ldp	x23, x24, [sp, #48]
   3c2ec:	mov	w1, w21
   3c2f0:	ldr	x3, [x19]
   3c2f4:	mov	x0, x20
   3c2f8:	add	x2, x4, #0x10
   3c2fc:	bl	3caa8 <__asan_backtrace_create_state@@Base+0x8ec0>
   3c300:	str	x25, [x20, #288]
   3c304:	ldp	x19, x20, [sp, #16]
   3c308:	ldp	x21, x22, [sp, #32]
   3c30c:	ldp	x25, x26, [sp, #64]
   3c310:	ldp	x29, x30, [sp], #112
   3c314:	ret
   3c318:	ldp	x23, x24, [sp, #48]
   3c31c:	mov	w1, w21
   3c320:	ldr	x3, [x19]
   3c324:	mov	x0, x20
   3c328:	add	x2, x4, #0x8
   3c32c:	bl	3c758 <__asan_backtrace_create_state@@Base+0x8b70>
   3c330:	str	x25, [x20, #288]
   3c334:	ldp	x19, x20, [sp, #16]
   3c338:	ldp	x21, x22, [sp, #32]
   3c33c:	ldp	x25, x26, [sp, #64]
   3c340:	ldp	x29, x30, [sp], #112
   3c344:	ret
   3c348:	stp	x23, x24, [sp, #48]
   3c34c:	ldr	x22, [x4, #8]
   3c350:	ldr	x23, [x20, #296]
   3c354:	str	xzr, [x20, #296]
   3c358:	cbz	x22, 3c374 <__asan_backtrace_create_state@@Base+0x878c>
   3c35c:	ldr	w0, [x22, #4]
   3c360:	cmp	w0, #0x1
   3c364:	b.gt	3c374 <__asan_backtrace_create_state@@Base+0x878c>
   3c368:	ldr	w1, [x20, #308]
   3c36c:	cmp	w1, #0x400
   3c370:	b.le	3c49c <__asan_backtrace_create_state@@Base+0x88b4>
   3c374:	mov	w0, #0x1                   	// #1
   3c378:	str	w0, [x20, #304]
   3c37c:	str	x23, [x20, #296]
   3c380:	tbz	w21, #2, 3c4f0 <__asan_backtrace_create_state@@Base+0x8908>
   3c384:	ldr	x1, [x20, #256]
   3c388:	add	x0, x1, #0x1
   3c38c:	cmp	x1, #0xff
   3c390:	b.ne	3c3b8 <__asan_backtrace_create_state@@Base+0x87d0>  // b.any
   3c394:	ldp	x3, x2, [x20, #272]
   3c398:	strb	wzr, [x20, #255]
   3c39c:	mov	x0, x20
   3c3a0:	blr	x3
   3c3a4:	ldr	x2, [x20, #320]
   3c3a8:	mov	x0, #0x1                   	// #1
   3c3ac:	mov	x1, #0x0                   	// #0
   3c3b0:	add	x2, x2, x0
   3c3b4:	str	x2, [x20, #320]
   3c3b8:	str	x0, [x20, #256]
   3c3bc:	mov	w0, #0x2e                  	// #46
   3c3c0:	strb	w0, [x20, x1]
   3c3c4:	strb	w0, [x20, #264]
   3c3c8:	ldr	x0, [x19, #8]
   3c3cc:	ldr	x22, [x0, #16]
   3c3d0:	ldr	w0, [x22]
   3c3d4:	cmp	w0, #0x47
   3c3d8:	b.eq	3c580 <__asan_backtrace_create_state@@Base+0x8998>  // b.none
   3c3dc:	mov	x1, #0x1f                  	// #31
   3c3e0:	mov	x2, #0x1                   	// #1
   3c3e4:	movk	x1, #0x1a, lsl #48
   3c3e8:	sub	w0, w0, #0x1c
   3c3ec:	cmp	w0, #0x34
   3c3f0:	b.hi	3c400 <__asan_backtrace_create_state@@Base+0x8818>  // b.pmore
   3c3f4:	lsl	x0, x2, x0
   3c3f8:	tst	x0, x1
   3c3fc:	b.ne	3c43c <__asan_backtrace_create_state@@Base+0x8854>  // b.any
   3c400:	ldr	w0, [x22, #4]
   3c404:	cmp	w0, #0x1
   3c408:	b.gt	3c418 <__asan_backtrace_create_state@@Base+0x8830>
   3c40c:	ldr	w1, [x20, #308]
   3c410:	cmp	w1, #0x400
   3c414:	b.le	3c448 <__asan_backtrace_create_state@@Base+0x8860>
   3c418:	mov	w0, #0x1                   	// #1
   3c41c:	str	w0, [x20, #304]
   3c420:	ldp	x23, x24, [sp, #48]
   3c424:	str	x25, [x20, #288]
   3c428:	ldp	x19, x20, [sp, #16]
   3c42c:	ldp	x21, x22, [sp, #32]
   3c430:	ldp	x25, x26, [sp, #64]
   3c434:	ldp	x29, x30, [sp], #112
   3c438:	ret
   3c43c:	ldr	x22, [x22, #8]
   3c440:	ldr	w0, [x22]
   3c444:	b	3c3e8 <__asan_backtrace_create_state@@Base+0x8800>
   3c448:	ldr	x3, [x20, #328]
   3c44c:	add	w0, w0, #0x1
   3c450:	str	w0, [x22, #4]
   3c454:	add	w1, w1, #0x1
   3c458:	add	x0, sp, #0x50
   3c45c:	str	w1, [x20, #308]
   3c460:	str	x0, [x20, #328]
   3c464:	mov	w1, w21
   3c468:	mov	x0, x20
   3c46c:	mov	x2, x22
   3c470:	stp	x22, x3, [sp, #80]
   3c474:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3c478:	ldr	w1, [x22, #4]
   3c47c:	ldr	x0, [sp, #88]
   3c480:	str	x0, [x20, #328]
   3c484:	ldr	w0, [x20, #308]
   3c488:	sub	w1, w1, #0x1
   3c48c:	str	w1, [x22, #4]
   3c490:	sub	w0, w0, #0x1
   3c494:	str	w0, [x20, #308]
   3c498:	b	3c420 <__asan_backtrace_create_state@@Base+0x8838>
   3c49c:	ldr	x3, [x20, #328]
   3c4a0:	add	w0, w0, #0x1
   3c4a4:	str	w0, [x22, #4]
   3c4a8:	add	w1, w1, #0x1
   3c4ac:	add	x0, sp, #0x50
   3c4b0:	str	w1, [x20, #308]
   3c4b4:	str	x0, [x20, #328]
   3c4b8:	mov	w1, w21
   3c4bc:	mov	x0, x20
   3c4c0:	mov	x2, x22
   3c4c4:	stp	x22, x3, [sp, #80]
   3c4c8:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3c4cc:	ldr	w1, [x22, #4]
   3c4d0:	ldr	x0, [sp, #88]
   3c4d4:	str	x0, [x20, #328]
   3c4d8:	ldr	w0, [x20, #308]
   3c4dc:	sub	w1, w1, #0x1
   3c4e0:	str	w1, [x22, #4]
   3c4e4:	sub	w0, w0, #0x1
   3c4e8:	str	w0, [x20, #308]
   3c4ec:	b	3c37c <__asan_backtrace_create_state@@Base+0x8794>
   3c4f0:	adrp	x22, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3c4f4:	add	x22, x22, #0xcd0
   3c4f8:	mov	x0, x22
   3c4fc:	bl	67e0 <__asan_internal_strlen@plt>
   3c500:	cbz	x0, 3c3c8 <__asan_backtrace_create_state@@Base+0x87e0>
   3c504:	add	x24, x22, x0
   3c508:	mov	x26, #0x1                   	// #1
   3c50c:	ldr	x1, [x20, #256]
   3c510:	b	3c568 <__asan_backtrace_create_state@@Base+0x8980>
   3c514:	ldp	x3, x2, [x20, #272]
   3c518:	strb	wzr, [x20, #255]
   3c51c:	add	x22, x22, #0x1
   3c520:	blr	x3
   3c524:	strb	w23, [x20]
   3c528:	ldr	x0, [x20, #320]
   3c52c:	str	x26, [x20, #256]
   3c530:	strb	w23, [x20, #264]
   3c534:	cmp	x24, x22
   3c538:	add	x0, x0, #0x1
   3c53c:	str	x0, [x20, #320]
   3c540:	mov	x0, #0x1                   	// #1
   3c544:	b.eq	3c3c8 <__asan_backtrace_create_state@@Base+0x87e0>  // b.none
   3c548:	ldrb	w23, [x22]
   3c54c:	add	x1, x0, #0x1
   3c550:	str	x1, [x20, #256]
   3c554:	strb	w23, [x20, x0]
   3c558:	add	x22, x22, #0x1
   3c55c:	strb	w23, [x20, #264]
   3c560:	cmp	x24, x22
   3c564:	b.eq	3c3c8 <__asan_backtrace_create_state@@Base+0x87e0>  // b.none
   3c568:	ldrb	w23, [x22]
   3c56c:	mov	x0, x20
   3c570:	cmp	x1, #0xff
   3c574:	b.eq	3c514 <__asan_backtrace_create_state@@Base+0x892c>  // b.none
   3c578:	mov	x0, x1
   3c57c:	b	3c54c <__asan_backtrace_create_state@@Base+0x8964>
   3c580:	adrp	x19, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3c584:	add	x19, x19, #0xcd8
   3c588:	mov	x0, x19
   3c58c:	bl	67e0 <__asan_internal_strlen@plt>
   3c590:	cbz	x0, 3c610 <__asan_backtrace_create_state@@Base+0x8a28>
   3c594:	add	x24, x19, x0
   3c598:	mov	x26, #0x1                   	// #1
   3c59c:	ldr	x1, [x20, #256]
   3c5a0:	b	3c5f8 <__asan_backtrace_create_state@@Base+0x8a10>
   3c5a4:	ldp	x3, x2, [x20, #272]
   3c5a8:	strb	wzr, [x20, #255]
   3c5ac:	add	x19, x19, #0x1
   3c5b0:	blr	x3
   3c5b4:	strb	w23, [x20]
   3c5b8:	ldr	x0, [x20, #320]
   3c5bc:	str	x26, [x20, #256]
   3c5c0:	strb	w23, [x20, #264]
   3c5c4:	cmp	x19, x24
   3c5c8:	add	x0, x0, #0x1
   3c5cc:	str	x0, [x20, #320]
   3c5d0:	mov	x0, #0x1                   	// #1
   3c5d4:	b.eq	3c610 <__asan_backtrace_create_state@@Base+0x8a28>  // b.none
   3c5d8:	ldrb	w23, [x19]
   3c5dc:	add	x1, x0, #0x1
   3c5e0:	str	x1, [x20, #256]
   3c5e4:	strb	w23, [x20, x0]
   3c5e8:	add	x19, x19, #0x1
   3c5ec:	strb	w23, [x20, #264]
   3c5f0:	cmp	x24, x19
   3c5f4:	b.eq	3c610 <__asan_backtrace_create_state@@Base+0x8a28>  // b.none
   3c5f8:	ldrb	w23, [x19]
   3c5fc:	mov	x0, x20
   3c600:	cmp	x1, #0xff
   3c604:	b.eq	3c5a4 <__asan_backtrace_create_state@@Base+0x89bc>  // b.none
   3c608:	mov	x0, x1
   3c60c:	b	3c5dc <__asan_backtrace_create_state@@Base+0x89f4>
   3c610:	ldr	w2, [x22, #16]
   3c614:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   3c618:	add	x1, x1, #0x160
   3c61c:	add	x19, sp, #0x50
   3c620:	add	w2, w2, #0x1
   3c624:	mov	x0, x19
   3c628:	bl	6900 <sprintf@plt>
   3c62c:	mov	x0, x19
   3c630:	bl	67e0 <__asan_internal_strlen@plt>
   3c634:	cbz	x0, 3c6b4 <__asan_backtrace_create_state@@Base+0x8acc>
   3c638:	add	x24, x19, x0
   3c63c:	mov	x26, #0x1                   	// #1
   3c640:	ldr	x1, [x20, #256]
   3c644:	b	3c69c <__asan_backtrace_create_state@@Base+0x8ab4>
   3c648:	ldp	x3, x2, [x20, #272]
   3c64c:	strb	wzr, [x20, #255]
   3c650:	add	x19, x19, #0x1
   3c654:	blr	x3
   3c658:	strb	w23, [x20]
   3c65c:	ldr	x0, [x20, #320]
   3c660:	str	x26, [x20, #256]
   3c664:	strb	w23, [x20, #264]
   3c668:	cmp	x24, x19
   3c66c:	add	x0, x0, #0x1
   3c670:	str	x0, [x20, #320]
   3c674:	mov	x0, #0x1                   	// #1
   3c678:	b.eq	3c6b4 <__asan_backtrace_create_state@@Base+0x8acc>  // b.none
   3c67c:	ldrb	w23, [x19]
   3c680:	add	x1, x0, #0x1
   3c684:	str	x1, [x20, #256]
   3c688:	strb	w23, [x20, x0]
   3c68c:	add	x19, x19, #0x1
   3c690:	strb	w23, [x20, #264]
   3c694:	cmp	x24, x19
   3c698:	b.eq	3c6b4 <__asan_backtrace_create_state@@Base+0x8acc>  // b.none
   3c69c:	ldrb	w23, [x19]
   3c6a0:	mov	x0, x20
   3c6a4:	cmp	x1, #0xff
   3c6a8:	b.eq	3c648 <__asan_backtrace_create_state@@Base+0x8a60>  // b.none
   3c6ac:	mov	x0, x1
   3c6b0:	b	3c680 <__asan_backtrace_create_state@@Base+0x8a98>
   3c6b4:	adrp	x19, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3c6b8:	add	x19, x19, #0xce8
   3c6bc:	mov	x0, x19
   3c6c0:	bl	67e0 <__asan_internal_strlen@plt>
   3c6c4:	cbz	x0, 3c744 <__asan_backtrace_create_state@@Base+0x8b5c>
   3c6c8:	add	x24, x19, x0
   3c6cc:	mov	x26, #0x1                   	// #1
   3c6d0:	ldr	x1, [x20, #256]
   3c6d4:	b	3c72c <__asan_backtrace_create_state@@Base+0x8b44>
   3c6d8:	ldp	x3, x2, [x20, #272]
   3c6dc:	strb	wzr, [x20, #255]
   3c6e0:	add	x19, x19, #0x1
   3c6e4:	blr	x3
   3c6e8:	strb	w23, [x20]
   3c6ec:	ldr	x0, [x20, #320]
   3c6f0:	str	x26, [x20, #256]
   3c6f4:	strb	w23, [x20, #264]
   3c6f8:	cmp	x19, x24
   3c6fc:	add	x0, x0, #0x1
   3c700:	str	x0, [x20, #320]
   3c704:	mov	x0, #0x1                   	// #1
   3c708:	b.eq	3c744 <__asan_backtrace_create_state@@Base+0x8b5c>  // b.none
   3c70c:	ldrb	w23, [x19]
   3c710:	add	x1, x0, #0x1
   3c714:	str	x1, [x20, #256]
   3c718:	strb	w23, [x20, x0]
   3c71c:	add	x19, x19, #0x1
   3c720:	strb	w23, [x20, #264]
   3c724:	cmp	x24, x19
   3c728:	b.eq	3c744 <__asan_backtrace_create_state@@Base+0x8b5c>  // b.none
   3c72c:	ldrb	w23, [x19]
   3c730:	mov	x0, x20
   3c734:	cmp	x1, #0xff
   3c738:	b.eq	3c6d8 <__asan_backtrace_create_state@@Base+0x8af0>  // b.none
   3c73c:	mov	x0, x1
   3c740:	b	3c710 <__asan_backtrace_create_state@@Base+0x8b28>
   3c744:	ldr	x22, [x22, #8]
   3c748:	ldr	w0, [x22]
   3c74c:	b	3c3dc <__asan_backtrace_create_state@@Base+0x87f4>
   3c750:	ret
   3c754:	nop
   3c758:	stp	x29, x30, [sp, #-96]!
   3c75c:	mov	x29, sp
   3c760:	stp	x19, x20, [sp, #16]
   3c764:	mov	x19, x0
   3c768:	stp	x21, x22, [sp, #32]
   3c76c:	mov	w22, w1
   3c770:	mov	x21, x2
   3c774:	cbz	x3, 3c8f0 <__asan_backtrace_create_state@@Base+0x8d08>
   3c778:	mov	x0, x3
   3c77c:	stp	x23, x24, [sp, #48]
   3c780:	mov	x23, x3
   3c784:	nop
   3c788:	ldr	w4, [x0, #16]
   3c78c:	cbz	w4, 3c820 <__asan_backtrace_create_state@@Base+0x8c38>
   3c790:	ldr	x0, [x0]
   3c794:	cbnz	x0, 3c788 <__asan_backtrace_create_state@@Base+0x8ba0>
   3c798:	mov	x2, x23
   3c79c:	mov	x0, x19
   3c7a0:	mov	w1, w22
   3c7a4:	mov	w3, #0x0                   	// #0
   3c7a8:	bl	3c1a8 <__asan_backtrace_create_state@@Base+0x85c0>
   3c7ac:	ldr	x0, [x19, #256]
   3c7b0:	ldp	x23, x24, [sp, #48]
   3c7b4:	cmp	x0, #0xff
   3c7b8:	b.ne	3c8fc <__asan_backtrace_create_state@@Base+0x8d14>  // b.any
   3c7bc:	ldp	x3, x2, [x19, #272]
   3c7c0:	strb	wzr, [x19, #255]
   3c7c4:	mov	x1, x0
   3c7c8:	mov	x0, x19
   3c7cc:	blr	x3
   3c7d0:	mov	w1, #0x5b20                	// #23328
   3c7d4:	mov	w0, #0x5b                  	// #91
   3c7d8:	strh	w1, [x19]
   3c7dc:	strb	w0, [x19, #264]
   3c7e0:	mov	x0, #0x2                   	// #2
   3c7e4:	ldr	x1, [x19, #320]
   3c7e8:	ldr	x20, [x21]
   3c7ec:	add	x1, x1, #0x1
   3c7f0:	str	x0, [x19, #256]
   3c7f4:	str	x1, [x19, #320]
   3c7f8:	cbnz	x20, 3c934 <__asan_backtrace_create_state@@Base+0x8d4c>
   3c7fc:	add	x1, x0, #0x1
   3c800:	str	x1, [x19, #256]
   3c804:	mov	w1, #0x5d                  	// #93
   3c808:	strb	w1, [x19, x0]
   3c80c:	strb	w1, [x19, #264]
   3c810:	ldp	x19, x20, [sp, #16]
   3c814:	ldp	x21, x22, [sp, #32]
   3c818:	ldp	x29, x30, [sp], #96
   3c81c:	ret
   3c820:	ldr	x0, [x0, #8]
   3c824:	ldr	w0, [x0]
   3c828:	cmp	w0, #0x2a
   3c82c:	b.ne	3c9a4 <__asan_backtrace_create_state@@Base+0x8dbc>  // b.any
   3c830:	mov	x2, x23
   3c834:	mov	w1, w22
   3c838:	mov	x0, x19
   3c83c:	mov	w3, #0x0                   	// #0
   3c840:	bl	3c1a8 <__asan_backtrace_create_state@@Base+0x85c0>
   3c844:	ldr	x1, [x19, #256]
   3c848:	ldp	x23, x24, [sp, #48]
   3c84c:	cmp	x1, #0xff
   3c850:	b.ne	3c918 <__asan_backtrace_create_state@@Base+0x8d30>  // b.any
   3c854:	ldp	x3, x2, [x19, #272]
   3c858:	strb	wzr, [x19, #255]
   3c85c:	mov	x0, x19
   3c860:	blr	x3
   3c864:	mov	w1, #0x5b                  	// #91
   3c868:	strb	w1, [x19]
   3c86c:	strb	w1, [x19, #264]
   3c870:	mov	x0, #0x1                   	// #1
   3c874:	ldr	x1, [x19, #320]
   3c878:	ldr	x20, [x21]
   3c87c:	add	x1, x1, x0
   3c880:	str	x0, [x19, #256]
   3c884:	str	x1, [x19, #320]
   3c888:	cbz	x20, 3c7fc <__asan_backtrace_create_state@@Base+0x8c14>
   3c88c:	ldr	w1, [x20, #4]
   3c890:	cmp	w1, #0x1
   3c894:	b.le	3c940 <__asan_backtrace_create_state@@Base+0x8d58>
   3c898:	mov	w1, #0x1                   	// #1
   3c89c:	str	w1, [x19, #304]
   3c8a0:	cmp	x0, #0xff
   3c8a4:	b.ne	3c7fc <__asan_backtrace_create_state@@Base+0x8c14>  // b.any
   3c8a8:	ldp	x3, x2, [x19, #272]
   3c8ac:	strb	wzr, [x19, #255]
   3c8b0:	mov	x1, x0
   3c8b4:	mov	x0, x19
   3c8b8:	blr	x3
   3c8bc:	ldr	x2, [x19, #320]
   3c8c0:	mov	x0, #0x0                   	// #0
   3c8c4:	mov	x1, #0x1                   	// #1
   3c8c8:	str	x1, [x19, #256]
   3c8cc:	add	x2, x2, x1
   3c8d0:	str	x2, [x19, #320]
   3c8d4:	mov	w1, #0x5d                  	// #93
   3c8d8:	strb	w1, [x19, x0]
   3c8dc:	strb	w1, [x19, #264]
   3c8e0:	ldp	x19, x20, [sp, #16]
   3c8e4:	ldp	x21, x22, [sp, #32]
   3c8e8:	ldp	x29, x30, [sp], #96
   3c8ec:	ret
   3c8f0:	ldr	x0, [x0, #256]
   3c8f4:	cmp	x0, #0xff
   3c8f8:	b.eq	3c7bc <__asan_backtrace_create_state@@Base+0x8bd4>  // b.none
   3c8fc:	add	x1, x0, #0x1
   3c900:	str	x1, [x19, #256]
   3c904:	mov	w2, #0x20                  	// #32
   3c908:	strb	w2, [x19, x0]
   3c90c:	strb	w2, [x19, #264]
   3c910:	cmp	x1, #0xff
   3c914:	b.eq	3c854 <__asan_backtrace_create_state@@Base+0x8c6c>  // b.none
   3c918:	add	x0, x1, #0x1
   3c91c:	str	x0, [x19, #256]
   3c920:	mov	w2, #0x5b                  	// #91
   3c924:	strb	w2, [x19, x1]
   3c928:	strb	w2, [x19, #264]
   3c92c:	ldr	x20, [x21]
   3c930:	cbz	x20, 3c8a0 <__asan_backtrace_create_state@@Base+0x8cb8>
   3c934:	ldr	w1, [x20, #4]
   3c938:	cmp	w1, #0x1
   3c93c:	b.gt	3c898 <__asan_backtrace_create_state@@Base+0x8cb0>
   3c940:	ldr	w2, [x19, #308]
   3c944:	cmp	w2, #0x400
   3c948:	b.gt	3c898 <__asan_backtrace_create_state@@Base+0x8cb0>
   3c94c:	ldr	x3, [x19, #328]
   3c950:	add	w1, w1, #0x1
   3c954:	str	w1, [x20, #4]
   3c958:	add	w2, w2, #0x1
   3c95c:	add	x0, sp, #0x50
   3c960:	str	w2, [x19, #308]
   3c964:	str	x0, [x19, #328]
   3c968:	mov	w1, w22
   3c96c:	mov	x2, x20
   3c970:	mov	x0, x19
   3c974:	stp	x20, x3, [sp, #80]
   3c978:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3c97c:	ldr	w2, [x20, #4]
   3c980:	ldr	x0, [sp, #88]
   3c984:	str	x0, [x19, #328]
   3c988:	ldr	w1, [x19, #308]
   3c98c:	sub	w2, w2, #0x1
   3c990:	ldr	x0, [x19, #256]
   3c994:	str	w2, [x20, #4]
   3c998:	sub	w1, w1, #0x1
   3c99c:	str	w1, [x19, #308]
   3c9a0:	b	3c8a0 <__asan_backtrace_create_state@@Base+0x8cb8>
   3c9a4:	adrp	x20, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3c9a8:	add	x20, x20, #0xf78
   3c9ac:	mov	x0, x20
   3c9b0:	bl	67e0 <__asan_internal_strlen@plt>
   3c9b4:	cbz	x0, 3ca3c <__asan_backtrace_create_state@@Base+0x8e54>
   3c9b8:	stp	x25, x26, [sp, #64]
   3c9bc:	add	x25, x20, x0
   3c9c0:	mov	x26, #0x1                   	// #1
   3c9c4:	ldr	x1, [x19, #256]
   3c9c8:	b	3ca20 <__asan_backtrace_create_state@@Base+0x8e38>
   3c9cc:	ldp	x3, x2, [x19, #272]
   3c9d0:	strb	wzr, [x19, #255]
   3c9d4:	add	x20, x20, #0x1
   3c9d8:	blr	x3
   3c9dc:	strb	w24, [x19]
   3c9e0:	ldr	x0, [x19, #320]
   3c9e4:	str	x26, [x19, #256]
   3c9e8:	strb	w24, [x19, #264]
   3c9ec:	cmp	x20, x25
   3c9f0:	add	x0, x0, #0x1
   3c9f4:	str	x0, [x19, #320]
   3c9f8:	mov	x0, #0x1                   	// #1
   3c9fc:	b.eq	3ca38 <__asan_backtrace_create_state@@Base+0x8e50>  // b.none
   3ca00:	ldrb	w24, [x20]
   3ca04:	add	x1, x0, #0x1
   3ca08:	str	x1, [x19, #256]
   3ca0c:	strb	w24, [x19, x0]
   3ca10:	add	x20, x20, #0x1
   3ca14:	strb	w24, [x19, #264]
   3ca18:	cmp	x20, x25
   3ca1c:	b.eq	3ca38 <__asan_backtrace_create_state@@Base+0x8e50>  // b.none
   3ca20:	ldrb	w24, [x20]
   3ca24:	mov	x0, x19
   3ca28:	cmp	x1, #0xff
   3ca2c:	b.eq	3c9cc <__asan_backtrace_create_state@@Base+0x8de4>  // b.none
   3ca30:	mov	x0, x1
   3ca34:	b	3ca04 <__asan_backtrace_create_state@@Base+0x8e1c>
   3ca38:	ldp	x25, x26, [sp, #64]
   3ca3c:	mov	w1, w22
   3ca40:	mov	x2, x23
   3ca44:	mov	x0, x19
   3ca48:	mov	w3, #0x0                   	// #0
   3ca4c:	bl	3c1a8 <__asan_backtrace_create_state@@Base+0x85c0>
   3ca50:	ldr	x1, [x19, #256]
   3ca54:	cmp	x1, #0xff
   3ca58:	b.eq	3ca78 <__asan_backtrace_create_state@@Base+0x8e90>  // b.none
   3ca5c:	add	x0, x1, #0x1
   3ca60:	str	x0, [x19, #256]
   3ca64:	mov	w2, #0x29                  	// #41
   3ca68:	strb	w2, [x19, x1]
   3ca6c:	strb	w2, [x19, #264]
   3ca70:	ldp	x23, x24, [sp, #48]
   3ca74:	b	3c8f4 <__asan_backtrace_create_state@@Base+0x8d0c>
   3ca78:	ldp	x3, x2, [x19, #272]
   3ca7c:	strb	wzr, [x19, #255]
   3ca80:	mov	x0, x19
   3ca84:	blr	x3
   3ca88:	ldr	x1, [x19, #320]
   3ca8c:	mov	w2, #0x29                  	// #41
   3ca90:	strb	w2, [x19]
   3ca94:	mov	x0, #0x1                   	// #1
   3ca98:	add	x1, x1, x0
   3ca9c:	ldp	x23, x24, [sp, #48]
   3caa0:	str	x1, [x19, #320]
   3caa4:	b	3c8fc <__asan_backtrace_create_state@@Base+0x8d14>
   3caa8:	stp	x29, x30, [sp, #-80]!
   3caac:	mov	x29, sp
   3cab0:	stp	x19, x20, [sp, #16]
   3cab4:	mov	x19, x0
   3cab8:	mov	x20, x3
   3cabc:	stp	x21, x22, [sp, #32]
   3cac0:	mov	w22, w1
   3cac4:	mov	x21, x2
   3cac8:	stp	x23, x24, [sp, #48]
   3cacc:	cbz	x3, 3cb10 <__asan_backtrace_create_state@@Base+0x8f28>
   3cad0:	mov	x2, #0xe000000             	// #234881024
   3cad4:	mov	x4, #0x1                   	// #1
   3cad8:	movk	x2, #0x862, lsl #32
   3cadc:	ldr	w0, [x3, #16]
   3cae0:	cbnz	w0, 3cb10 <__asan_backtrace_create_state@@Base+0x8f28>
   3cae4:	ldr	x0, [x3, #8]
   3cae8:	ldr	w0, [x0]
   3caec:	cmp	w0, #0x2b
   3caf0:	b.hi	3cb08 <__asan_backtrace_create_state@@Base+0x8f20>  // b.pmore
   3caf4:	lsl	x0, x4, x0
   3caf8:	tst	x0, x2
   3cafc:	b.ne	3cbe8 <__asan_backtrace_create_state@@Base+0x9000>  // b.any
   3cb00:	tst	x0, #0x1c00000000
   3cb04:	b.ne	3ccb4 <__asan_backtrace_create_state@@Base+0x90cc>  // b.any
   3cb08:	ldr	x3, [x3]
   3cb0c:	cbnz	x3, 3cadc <__asan_backtrace_create_state@@Base+0x8ef4>
   3cb10:	ldr	x23, [x19, #296]
   3cb14:	str	xzr, [x19, #296]
   3cb18:	mov	w1, w22
   3cb1c:	mov	x2, x20
   3cb20:	mov	x0, x19
   3cb24:	mov	w3, #0x0                   	// #0
   3cb28:	bl	3c1a8 <__asan_backtrace_create_state@@Base+0x85c0>
   3cb2c:	ldr	x1, [x19, #256]
   3cb30:	cmp	x1, #0xff
   3cb34:	b.eq	3cc78 <__asan_backtrace_create_state@@Base+0x9090>  // b.none
   3cb38:	add	x0, x1, #0x1
   3cb3c:	str	x0, [x19, #256]
   3cb40:	mov	w2, #0x28                  	// #40
   3cb44:	strb	w2, [x19, x1]
   3cb48:	strb	w2, [x19, #264]
   3cb4c:	ldr	x21, [x21]
   3cb50:	cbz	x21, 3cb74 <__asan_backtrace_create_state@@Base+0x8f8c>
   3cb54:	ldr	w1, [x21, #4]
   3cb58:	cmp	w1, #0x1
   3cb5c:	b.gt	3cb6c <__asan_backtrace_create_state@@Base+0x8f84>
   3cb60:	ldr	w2, [x19, #308]
   3cb64:	cmp	w2, #0x400
   3cb68:	b.le	3ccf8 <__asan_backtrace_create_state@@Base+0x9110>
   3cb6c:	mov	w1, #0x1                   	// #1
   3cb70:	str	w1, [x19, #304]
   3cb74:	cmp	x0, #0xff
   3cb78:	b.eq	3cbbc <__asan_backtrace_create_state@@Base+0x8fd4>  // b.none
   3cb7c:	add	x1, x0, #0x1
   3cb80:	str	x1, [x19, #256]
   3cb84:	mov	w3, #0x29                  	// #41
   3cb88:	strb	w3, [x19, x0]
   3cb8c:	mov	x2, x20
   3cb90:	strb	w3, [x19, #264]
   3cb94:	mov	w1, w22
   3cb98:	mov	x0, x19
   3cb9c:	mov	w3, #0x1                   	// #1
   3cba0:	bl	3c1a8 <__asan_backtrace_create_state@@Base+0x85c0>
   3cba4:	ldp	x21, x22, [sp, #32]
   3cba8:	str	x23, [x19, #296]
   3cbac:	ldp	x19, x20, [sp, #16]
   3cbb0:	ldp	x23, x24, [sp, #48]
   3cbb4:	ldp	x29, x30, [sp], #80
   3cbb8:	ret
   3cbbc:	ldp	x3, x2, [x19, #272]
   3cbc0:	strb	wzr, [x19, #255]
   3cbc4:	mov	x1, x0
   3cbc8:	mov	x0, x19
   3cbcc:	blr	x3
   3cbd0:	ldr	x2, [x19, #320]
   3cbd4:	mov	x1, #0x1                   	// #1
   3cbd8:	mov	x0, #0x0                   	// #0
   3cbdc:	add	x2, x2, x1
   3cbe0:	str	x2, [x19, #320]
   3cbe4:	b	3cb80 <__asan_backtrace_create_state@@Base+0x8f98>
   3cbe8:	ldrb	w0, [x19, #264]
   3cbec:	ldr	x1, [x19, #256]
   3cbf0:	cmp	w0, #0x20
   3cbf4:	b.eq	3cc18 <__asan_backtrace_create_state@@Base+0x9030>  // b.none
   3cbf8:	cmp	x1, #0xff
   3cbfc:	b.eq	3cd50 <__asan_backtrace_create_state@@Base+0x9168>  // b.none
   3cc00:	add	x2, x1, #0x1
   3cc04:	str	x2, [x19, #256]
   3cc08:	mov	w0, #0x20                  	// #32
   3cc0c:	strb	w0, [x19, x1]
   3cc10:	mov	x1, x2
   3cc14:	strb	w0, [x19, #264]
   3cc18:	cmp	x1, #0xff
   3cc1c:	b.eq	3ccd0 <__asan_backtrace_create_state@@Base+0x90e8>  // b.none
   3cc20:	add	x0, x1, #0x1
   3cc24:	str	x0, [x19, #256]
   3cc28:	mov	w24, #0x28                  	// #40
   3cc2c:	strb	w24, [x19, x1]
   3cc30:	mov	x0, x19
   3cc34:	strb	w24, [x19, #264]
   3cc38:	mov	x2, x20
   3cc3c:	ldr	x23, [x19, #296]
   3cc40:	str	xzr, [x19, #296]
   3cc44:	mov	w1, w22
   3cc48:	mov	w3, #0x0                   	// #0
   3cc4c:	bl	3c1a8 <__asan_backtrace_create_state@@Base+0x85c0>
   3cc50:	ldr	x0, [x19, #256]
   3cc54:	cmp	x0, #0xff
   3cc58:	b.eq	3cd7c <__asan_backtrace_create_state@@Base+0x9194>  // b.none
   3cc5c:	add	x1, x0, #0x1
   3cc60:	str	x1, [x19, #256]
   3cc64:	mov	w2, #0x29                  	// #41
   3cc68:	strb	w2, [x19, x0]
   3cc6c:	strb	w2, [x19, #264]
   3cc70:	cmp	x1, #0xff
   3cc74:	b.ne	3cb38 <__asan_backtrace_create_state@@Base+0x8f50>  // b.any
   3cc78:	ldp	x3, x2, [x19, #272]
   3cc7c:	strb	wzr, [x19, #255]
   3cc80:	mov	x0, x19
   3cc84:	blr	x3
   3cc88:	mov	w1, #0x28                  	// #40
   3cc8c:	strb	w1, [x19]
   3cc90:	strb	w1, [x19, #264]
   3cc94:	mov	x0, #0x1                   	// #1
   3cc98:	ldr	x1, [x19, #320]
   3cc9c:	ldr	x21, [x21]
   3cca0:	add	x1, x1, x0
   3cca4:	str	x0, [x19, #256]
   3cca8:	str	x1, [x19, #320]
   3ccac:	cbnz	x21, 3cb54 <__asan_backtrace_create_state@@Base+0x8f6c>
   3ccb0:	b	3cb7c <__asan_backtrace_create_state@@Base+0x8f94>
   3ccb4:	ldrb	w0, [x19, #264]
   3ccb8:	ldr	x1, [x19, #256]
   3ccbc:	and	w2, w0, #0xfffffffd
   3ccc0:	cmp	w2, #0x28
   3ccc4:	b.ne	3cbf0 <__asan_backtrace_create_state@@Base+0x9008>  // b.any
   3ccc8:	cmp	x1, #0xff
   3cccc:	b.ne	3cc20 <__asan_backtrace_create_state@@Base+0x9038>  // b.any
   3ccd0:	ldp	x3, x2, [x19, #272]
   3ccd4:	strb	wzr, [x19, #255]
   3ccd8:	mov	x0, x19
   3ccdc:	blr	x3
   3cce0:	ldr	x2, [x19, #320]
   3cce4:	mov	x0, #0x1                   	// #1
   3cce8:	mov	x1, #0x0                   	// #0
   3ccec:	add	x2, x2, x0
   3ccf0:	str	x2, [x19, #320]
   3ccf4:	b	3cc24 <__asan_backtrace_create_state@@Base+0x903c>
   3ccf8:	ldr	x3, [x19, #328]
   3ccfc:	add	w1, w1, #0x1
   3cd00:	str	w1, [x21, #4]
   3cd04:	add	w2, w2, #0x1
   3cd08:	add	x0, sp, #0x40
   3cd0c:	str	w2, [x19, #308]
   3cd10:	str	x0, [x19, #328]
   3cd14:	mov	w1, w22
   3cd18:	mov	x2, x21
   3cd1c:	mov	x0, x19
   3cd20:	stp	x21, x3, [sp, #64]
   3cd24:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   3cd28:	ldr	w2, [x21, #4]
   3cd2c:	ldr	x0, [sp, #72]
   3cd30:	str	x0, [x19, #328]
   3cd34:	ldr	w1, [x19, #308]
   3cd38:	sub	w2, w2, #0x1
   3cd3c:	ldr	x0, [x19, #256]
   3cd40:	str	w2, [x21, #4]
   3cd44:	sub	w1, w1, #0x1
   3cd48:	str	w1, [x19, #308]
   3cd4c:	b	3cb74 <__asan_backtrace_create_state@@Base+0x8f8c>
   3cd50:	ldp	x3, x2, [x19, #272]
   3cd54:	strb	wzr, [x19, #255]
   3cd58:	mov	x0, x19
   3cd5c:	blr	x3
   3cd60:	ldr	x0, [x19, #320]
   3cd64:	mov	w2, #0x20                  	// #32
   3cd68:	mov	x1, #0x1                   	// #1
   3cd6c:	strb	w2, [x19]
   3cd70:	add	x0, x0, x1
   3cd74:	str	x0, [x19, #320]
   3cd78:	b	3cc20 <__asan_backtrace_create_state@@Base+0x9038>
   3cd7c:	ldp	x3, x2, [x19, #272]
   3cd80:	strb	wzr, [x19, #255]
   3cd84:	mov	x1, x0
   3cd88:	mov	x0, x19
   3cd8c:	blr	x3
   3cd90:	strb	w24, [x19, #264]
   3cd94:	mov	w0, #0x2829                	// #10281
   3cd98:	strh	w0, [x19]
   3cd9c:	ldr	x1, [x19, #320]
   3cda0:	mov	x2, #0x2                   	// #2
   3cda4:	ldr	x21, [x21]
   3cda8:	add	x1, x1, #0x1
   3cdac:	str	x2, [x19, #256]
   3cdb0:	mov	x0, x2
   3cdb4:	str	x1, [x19, #320]
   3cdb8:	cbnz	x21, 3cb54 <__asan_backtrace_create_state@@Base+0x8f6c>
   3cdbc:	b	3cb7c <__asan_backtrace_create_state@@Base+0x8f94>

000000000003cdc0 <__asan_cplus_demangle_fill_name@@Base>:
   3cdc0:	cmp	x1, #0x0
   3cdc4:	mov	x3, x0
   3cdc8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   3cdcc:	ccmp	x0, #0x0, #0x4, gt
   3cdd0:	mov	w0, #0x0                   	// #0
   3cdd4:	b.ne	3cddc <__asan_cplus_demangle_fill_name@@Base+0x1c>  // b.any
   3cdd8:	ret
   3cddc:	mov	w0, #0x1                   	// #1
   3cde0:	stp	xzr, x1, [x3]
   3cde4:	str	w2, [x3, #16]
   3cde8:	ret
   3cdec:	nop
   3cdf0:	stp	x29, x30, [sp, #-48]!
   3cdf4:	mov	w6, #0x0                   	// #0
   3cdf8:	mov	x29, sp
   3cdfc:	ldr	x1, [x0, #24]
   3ce00:	stp	x19, x20, [sp, #16]
   3ce04:	stp	x21, x22, [sp, #32]
   3ce08:	mov	x22, x0
   3ce0c:	ldrb	w19, [x1]
   3ce10:	cmp	w19, #0x6e
   3ce14:	b.ne	3ce2c <__asan_cplus_demangle_fill_name@@Base+0x6c>  // b.any
   3ce18:	add	x0, x1, #0x1
   3ce1c:	str	x0, [x22, #24]
   3ce20:	mov	w6, #0x1                   	// #1
   3ce24:	ldrb	w19, [x1, #1]
   3ce28:	mov	x1, x0
   3ce2c:	sub	w2, w19, #0x30
   3ce30:	mov	w4, #0xcccd                	// #52429
   3ce34:	and	w2, w2, #0xff
   3ce38:	add	x21, x1, #0x1
   3ce3c:	cmp	w2, #0x9
   3ce40:	mov	w1, w19
   3ce44:	mov	w5, #0x7fffffff            	// #2147483647
   3ce48:	mov	w19, #0x0                   	// #0
   3ce4c:	movk	w4, #0xcccc, lsl #16
   3ce50:	b.ls	3ce6c <__asan_cplus_demangle_fill_name@@Base+0xac>  // b.plast
   3ce54:	b	3cf50 <__asan_cplus_demangle_fill_name@@Base+0x190>
   3ce58:	umull	x2, w2, w4
   3ce5c:	add	x21, x21, #0x1
   3ce60:	lsr	x2, x2, #35
   3ce64:	cmp	w2, w19
   3ce68:	b.lt	3cf50 <__asan_cplus_demangle_fill_name@@Base+0x190>  // b.tstop
   3ce6c:	str	x21, [x22, #24]
   3ce70:	add	w19, w19, w19, lsl #2
   3ce74:	ldrb	w0, [x21]
   3ce78:	add	w19, w1, w19, lsl #1
   3ce7c:	sub	w19, w19, #0x30
   3ce80:	sub	w3, w0, #0x30
   3ce84:	mov	w1, w0
   3ce88:	sub	w2, w5, w3
   3ce8c:	and	w3, w3, #0xff
   3ce90:	cmp	w3, #0x9
   3ce94:	b.ls	3ce58 <__asan_cplus_demangle_fill_name@@Base+0x98>  // b.plast
   3ce98:	cmp	w19, #0x0
   3ce9c:	ccmp	w6, #0x0, #0x0, gt
   3cea0:	b.ne	3cf50 <__asan_cplus_demangle_fill_name@@Base+0x190>  // b.any
   3cea4:	ldr	x0, [x22, #8]
   3cea8:	sxtw	x1, w19
   3ceac:	sub	x0, x0, x21
   3ceb0:	cmp	x0, w19, sxtw
   3ceb4:	b.lt	3cfe0 <__asan_cplus_demangle_fill_name@@Base+0x220>  // b.tstop
   3ceb8:	ldr	w2, [x22, #16]
   3cebc:	add	x0, x21, x1
   3cec0:	str	x0, [x22, #24]
   3cec4:	tbz	w2, #2, 3cee0 <__asan_cplus_demangle_fill_name@@Base+0x120>
   3cec8:	ldrb	w1, [x21, x1]
   3cecc:	cmp	w1, #0x24
   3ced0:	b.ne	3cee0 <__asan_cplus_demangle_fill_name@@Base+0x120>  // b.any
   3ced4:	add	x0, x0, #0x1
   3ced8:	str	x0, [x22, #24]
   3cedc:	nop
   3cee0:	cmp	w19, #0x9
   3cee4:	b.le	3cf00 <__asan_cplus_demangle_fill_name@@Base+0x140>
   3cee8:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3ceec:	mov	x0, x21
   3cef0:	add	x1, x1, #0xb8
   3cef4:	mov	x2, #0x8                   	// #8
   3cef8:	bl	6c20 <__asan_internal_memcmp@plt>
   3cefc:	cbz	w0, 3cf68 <__asan_cplus_demangle_fill_name@@Base+0x1a8>
   3cf00:	ldp	w20, w0, [x22, #40]
   3cf04:	cmp	w20, w0
   3cf08:	b.ge	3cfec <__asan_cplus_demangle_fill_name@@Base+0x22c>  // b.tcont
   3cf0c:	ldr	x1, [x22, #32]
   3cf10:	mov	w2, #0x18                  	// #24
   3cf14:	add	w0, w20, #0x1
   3cf18:	smaddl	x20, w20, w2, x1
   3cf1c:	str	wzr, [x20, #4]
   3cf20:	str	w0, [x22, #40]
   3cf24:	mov	w2, w19
   3cf28:	mov	x1, x21
   3cf2c:	mov	x0, x20
   3cf30:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   3cf34:	cbz	w0, 3cfe0 <__asan_cplus_demangle_fill_name@@Base+0x220>
   3cf38:	str	x20, [x22, #64]
   3cf3c:	mov	x0, x20
   3cf40:	ldp	x19, x20, [sp, #16]
   3cf44:	ldp	x21, x22, [sp, #32]
   3cf48:	ldp	x29, x30, [sp], #48
   3cf4c:	ret
   3cf50:	mov	x20, #0x0                   	// #0
   3cf54:	mov	x0, x20
   3cf58:	ldp	x19, x20, [sp, #16]
   3cf5c:	ldp	x21, x22, [sp, #32]
   3cf60:	ldp	x29, x30, [sp], #48
   3cf64:	ret
   3cf68:	ldrb	w1, [x21, #8]
   3cf6c:	mov	w3, #0x5f                  	// #95
   3cf70:	mov	w2, #0x24                  	// #36
   3cf74:	cmp	w1, #0x2e
   3cf78:	ccmp	w1, w3, #0x4, ne  // ne = any
   3cf7c:	ldp	w20, w0, [x22, #40]
   3cf80:	ccmp	w1, w2, #0x4, ne  // ne = any
   3cf84:	b.ne	3cf04 <__asan_cplus_demangle_fill_name@@Base+0x144>  // b.any
   3cf88:	ldrb	w1, [x21, #9]
   3cf8c:	cmp	w1, #0x4e
   3cf90:	b.ne	3cf04 <__asan_cplus_demangle_fill_name@@Base+0x144>  // b.any
   3cf94:	ldr	w1, [x22, #72]
   3cf98:	cmp	w20, w0
   3cf9c:	add	w0, w1, #0x16
   3cfa0:	sub	w19, w0, w19
   3cfa4:	str	w19, [x22, #72]
   3cfa8:	b.ge	3cff4 <__asan_cplus_demangle_fill_name@@Base+0x234>  // b.tcont
   3cfac:	ldr	x1, [x22, #32]
   3cfb0:	mov	w2, #0x18                  	// #24
   3cfb4:	add	w0, w20, #0x1
   3cfb8:	smaddl	x20, w20, w2, x1
   3cfbc:	str	wzr, [x20, #4]
   3cfc0:	str	w0, [x22, #40]
   3cfc4:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3cfc8:	mov	x0, x20
   3cfcc:	add	x1, x1, #0xc8
   3cfd0:	mov	w2, #0x15                  	// #21
   3cfd4:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   3cfd8:	cbnz	w0, 3cf38 <__asan_cplus_demangle_fill_name@@Base+0x178>
   3cfdc:	nop
   3cfe0:	mov	x20, #0x0                   	// #0
   3cfe4:	str	x20, [x22, #64]
   3cfe8:	b	3cf3c <__asan_cplus_demangle_fill_name@@Base+0x17c>
   3cfec:	mov	x20, #0x0                   	// #0
   3cff0:	b	3cf24 <__asan_cplus_demangle_fill_name@@Base+0x164>
   3cff4:	mov	x20, #0x0                   	// #0
   3cff8:	b	3cfc4 <__asan_cplus_demangle_fill_name@@Base+0x204>
   3cffc:	nop
   3d000:	stp	x29, x30, [sp, #-48]!
   3d004:	mov	x29, sp
   3d008:	stp	x19, x20, [sp, #16]
   3d00c:	mov	x19, x0
   3d010:	ldr	x0, [x0, #24]
   3d014:	ldrb	w2, [x0]
   3d018:	cmp	w2, #0x53
   3d01c:	b.ne	3d0a0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.any
   3d020:	add	x3, x0, #0x1
   3d024:	str	x3, [x19, #24]
   3d028:	ldrb	w2, [x0, #1]
   3d02c:	cbnz	w2, 3d0b4 <__asan_cplus_demangle_fill_name@@Base+0x2f4>
   3d030:	ldr	w0, [x19, #16]
   3d034:	and	w1, w1, #0x1
   3d038:	ands	w4, w0, #0x8
   3d03c:	ubfx	x4, x0, #3, #1
   3d040:	csel	w1, w1, wzr, eq  // eq = none
   3d044:	cbz	w1, 3d05c <__asan_cplus_demangle_fill_name@@Base+0x29c>
   3d048:	ldrb	w0, [x3]
   3d04c:	sub	w0, w0, #0x43
   3d050:	and	w0, w0, #0xff
   3d054:	cmp	w0, #0x1
   3d058:	csinc	w4, w4, wzr, hi  // hi = pmore
   3d05c:	cmp	w2, #0x74
   3d060:	b.eq	3d2b0 <__asan_cplus_demangle_fill_name@@Base+0x4f0>  // b.none
   3d064:	cmp	w2, #0x61
   3d068:	b.eq	3d2c0 <__asan_cplus_demangle_fill_name@@Base+0x500>  // b.none
   3d06c:	cmp	w2, #0x62
   3d070:	b.eq	3d2d0 <__asan_cplus_demangle_fill_name@@Base+0x510>  // b.none
   3d074:	cmp	w2, #0x73
   3d078:	b.eq	3d2e8 <__asan_cplus_demangle_fill_name@@Base+0x528>  // b.none
   3d07c:	cmp	w2, #0x69
   3d080:	b.eq	3d2f8 <__asan_cplus_demangle_fill_name@@Base+0x538>  // b.none
   3d084:	cmp	w2, #0x6f
   3d088:	b.eq	3d194 <__asan_cplus_demangle_fill_name@@Base+0x3d4>  // b.none
   3d08c:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d090:	add	x1, x1, #0xe58
   3d094:	add	x1, x1, #0x150
   3d098:	cmp	w2, #0x64
   3d09c:	b.eq	3d1a0 <__asan_cplus_demangle_fill_name@@Base+0x3e0>  // b.none
   3d0a0:	mov	x20, #0x0                   	// #0
   3d0a4:	mov	x0, x20
   3d0a8:	ldp	x19, x20, [sp, #16]
   3d0ac:	ldp	x29, x30, [sp], #48
   3d0b0:	ret
   3d0b4:	add	x3, x0, #0x2
   3d0b8:	str	x3, [x19, #24]
   3d0bc:	ldrb	w2, [x0, #1]
   3d0c0:	sub	w5, w2, #0x30
   3d0c4:	cmp	w2, #0x5f
   3d0c8:	and	w0, w5, #0xff
   3d0cc:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   3d0d0:	b.hi	3d104 <__asan_cplus_demangle_fill_name@@Base+0x344>  // b.pmore
   3d0d4:	cmp	w2, #0x5f
   3d0d8:	mov	w1, #0x0                   	// #0
   3d0dc:	b.ne	3d118 <__asan_cplus_demangle_fill_name@@Base+0x358>  // b.any
   3d0e0:	ldr	w0, [x19, #56]
   3d0e4:	cmp	w0, w1
   3d0e8:	b.ls	3d0a0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.plast
   3d0ec:	ldr	x0, [x19, #48]
   3d0f0:	ldr	x20, [x0, w1, uxtw #3]
   3d0f4:	mov	x0, x20
   3d0f8:	ldp	x19, x20, [sp, #16]
   3d0fc:	ldp	x29, x30, [sp], #48
   3d100:	ret
   3d104:	sub	w0, w2, #0x41
   3d108:	and	w0, w0, #0xff
   3d10c:	cmp	w0, #0x19
   3d110:	b.hi	3d030 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.pmore
   3d114:	nop
   3d118:	mov	w3, #0x0                   	// #0
   3d11c:	nop
   3d120:	add	w1, w3, w3, lsl #3
   3d124:	sub	w6, w2, #0x41
   3d128:	mov	w4, w1
   3d12c:	and	w5, w5, #0xff
   3d130:	add	w1, w2, w1, lsl #2
   3d134:	and	w6, w6, #0xff
   3d138:	sub	w1, w1, #0x37
   3d13c:	add	w2, w2, w4, lsl #2
   3d140:	cmp	w5, #0x9
   3d144:	b.hi	3d188 <__asan_cplus_demangle_fill_name@@Base+0x3c8>  // b.pmore
   3d148:	sub	w1, w2, #0x30
   3d14c:	cmp	w3, w1
   3d150:	b.hi	3d0a0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.pmore
   3d154:	ldr	x4, [x19, #24]
   3d158:	mov	w3, w1
   3d15c:	add	x0, x4, #0x1
   3d160:	ldrb	w2, [x4]
   3d164:	cbz	w2, 3d178 <__asan_cplus_demangle_fill_name@@Base+0x3b8>
   3d168:	str	x0, [x19, #24]
   3d16c:	ldrb	w2, [x4]
   3d170:	cmp	w2, #0x5f
   3d174:	b.eq	3d180 <__asan_cplus_demangle_fill_name@@Base+0x3c0>  // b.none
   3d178:	sub	w5, w2, #0x30
   3d17c:	b	3d120 <__asan_cplus_demangle_fill_name@@Base+0x360>
   3d180:	add	w1, w1, #0x1
   3d184:	b	3d0e0 <__asan_cplus_demangle_fill_name@@Base+0x320>
   3d188:	cmp	w6, #0x19
   3d18c:	b.ls	3d14c <__asan_cplus_demangle_fill_name@@Base+0x38c>  // b.plast
   3d190:	b	3d0a0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   3d194:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d198:	add	x1, x1, #0xe58
   3d19c:	add	x1, x1, #0x118
   3d1a0:	ldr	x6, [x1, #40]
   3d1a4:	ldp	w0, w5, [x19, #40]
   3d1a8:	cbz	x6, 3d1e4 <__asan_cplus_demangle_fill_name@@Base+0x424>
   3d1ac:	ldr	w10, [x1, #48]
   3d1b0:	cmp	w5, w0
   3d1b4:	b.le	3d310 <__asan_cplus_demangle_fill_name@@Base+0x550>
   3d1b8:	mov	w9, #0x18                  	// #24
   3d1bc:	ldr	x8, [x19, #32]
   3d1c0:	smull	x7, w0, w9
   3d1c4:	add	w0, w0, #0x1
   3d1c8:	add	x2, x8, x7
   3d1cc:	str	wzr, [x2, #4]
   3d1d0:	str	w0, [x19, #40]
   3d1d4:	str	w9, [x8, x7]
   3d1d8:	str	x6, [x2, #8]
   3d1dc:	str	w10, [x2, #16]
   3d1e0:	str	x2, [x19, #64]
   3d1e4:	cbz	w4, 3d2a4 <__asan_cplus_demangle_fill_name@@Base+0x4e4>
   3d1e8:	ldr	w2, [x1, #32]
   3d1ec:	ldr	x6, [x1, #24]
   3d1f0:	cmp	w5, w0
   3d1f4:	ldr	w1, [x19, #72]
   3d1f8:	add	w1, w1, w2
   3d1fc:	str	w1, [x19, #72]
   3d200:	b.le	3d2e0 <__asan_cplus_demangle_fill_name@@Base+0x520>
   3d204:	mov	w4, #0x18                  	// #24
   3d208:	add	w5, w0, #0x1
   3d20c:	ldr	x1, [x19, #32]
   3d210:	smull	x0, w0, w4
   3d214:	add	x20, x1, x0
   3d218:	str	wzr, [x20, #4]
   3d21c:	str	w5, [x19, #40]
   3d220:	str	w4, [x1, x0]
   3d224:	str	x6, [x20, #8]
   3d228:	str	w2, [x20, #16]
   3d22c:	ldrb	w0, [x3]
   3d230:	cmp	w0, #0x42
   3d234:	b.ne	3d0a4 <__asan_cplus_demangle_fill_name@@Base+0x2e4>  // b.any
   3d238:	str	x21, [sp, #32]
   3d23c:	ldr	x21, [x19, #64]
   3d240:	add	x3, x3, #0x1
   3d244:	str	x3, [x19, #24]
   3d248:	mov	x0, x19
   3d24c:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3d250:	mov	x3, x0
   3d254:	mov	x2, x20
   3d258:	mov	x0, x19
   3d25c:	mov	w1, #0x4c                  	// #76
   3d260:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d264:	ldr	x3, [x19, #24]
   3d268:	mov	x20, x0
   3d26c:	ldrb	w0, [x3]
   3d270:	cmp	w0, #0x42
   3d274:	b.eq	3d240 <__asan_cplus_demangle_fill_name@@Base+0x480>  // b.none
   3d278:	str	x21, [x19, #64]
   3d27c:	cbz	x20, 3d308 <__asan_cplus_demangle_fill_name@@Base+0x548>
   3d280:	ldp	w0, w1, [x19, #56]
   3d284:	cmp	w0, w1
   3d288:	b.ge	3d308 <__asan_cplus_demangle_fill_name@@Base+0x548>  // b.tcont
   3d28c:	ldr	x2, [x19, #48]
   3d290:	add	w1, w0, #0x1
   3d294:	ldr	x21, [sp, #32]
   3d298:	str	x20, [x2, w0, sxtw #3]
   3d29c:	str	w1, [x19, #56]
   3d2a0:	b	3d0a4 <__asan_cplus_demangle_fill_name@@Base+0x2e4>
   3d2a4:	ldr	w2, [x1, #16]
   3d2a8:	ldr	x6, [x1, #8]
   3d2ac:	b	3d1f0 <__asan_cplus_demangle_fill_name@@Base+0x430>
   3d2b0:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d2b4:	add	x1, x1, #0xe58
   3d2b8:	ldp	w0, w5, [x19, #40]
   3d2bc:	b	3d1e4 <__asan_cplus_demangle_fill_name@@Base+0x424>
   3d2c0:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d2c4:	add	x1, x1, #0xe58
   3d2c8:	add	x1, x1, #0x38
   3d2cc:	b	3d1a0 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   3d2d0:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d2d4:	add	x1, x1, #0xe58
   3d2d8:	add	x1, x1, #0x70
   3d2dc:	b	3d1a0 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   3d2e0:	mov	x20, #0x0                   	// #0
   3d2e4:	b	3d22c <__asan_cplus_demangle_fill_name@@Base+0x46c>
   3d2e8:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d2ec:	add	x1, x1, #0xe58
   3d2f0:	add	x1, x1, #0xa8
   3d2f4:	b	3d1a0 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   3d2f8:	adrp	x1, 6b000 <__asan_backtrace_vector_release@@Base+0x24bb0>
   3d2fc:	add	x1, x1, #0xe58
   3d300:	add	x1, x1, #0xe0
   3d304:	b	3d1a0 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   3d308:	ldr	x21, [sp, #32]
   3d30c:	b	3d0a0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   3d310:	mov	x2, #0x0                   	// #0
   3d314:	str	x2, [x19, #64]
   3d318:	b	3d1e4 <__asan_cplus_demangle_fill_name@@Base+0x424>
   3d31c:	nop

000000000003d320 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   3d320:	cmp	w1, #0x0
   3d324:	mov	x3, x0
   3d328:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
   3d32c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   3d330:	mov	w0, #0x0                   	// #0
   3d334:	b.eq	3d34c <__asan_cplus_demangle_fill_extended_operator@@Base+0x2c>  // b.none
   3d338:	mov	x4, #0x33                  	// #51
   3d33c:	mov	w0, #0x1                   	// #1
   3d340:	str	x4, [x3]
   3d344:	str	w1, [x3, #8]
   3d348:	str	x2, [x3, #16]
   3d34c:	ret

000000000003d350 <__asan_cplus_demangle_fill_ctor@@Base>:
   3d350:	cmp	x0, #0x0
   3d354:	mov	x3, x0
   3d358:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3d35c:	mov	w0, #0x0                   	// #0
   3d360:	b.eq	3d388 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.none
   3d364:	sub	w4, w1, #0x1
   3d368:	mov	w0, #0x0                   	// #0
   3d36c:	cmp	w4, #0x4
   3d370:	b.hi	3d388 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.pmore
   3d374:	mov	x4, #0x7                   	// #7
   3d378:	mov	w0, #0x1                   	// #1
   3d37c:	str	x4, [x3]
   3d380:	str	w1, [x3, #8]
   3d384:	str	x2, [x3, #16]
   3d388:	ret
   3d38c:	nop

000000000003d390 <__asan_cplus_demangle_fill_dtor@@Base>:
   3d390:	cmp	x0, #0x0
   3d394:	mov	x3, x0
   3d398:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3d39c:	mov	w0, #0x0                   	// #0
   3d3a0:	b.eq	3d3c8 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.none
   3d3a4:	sub	w4, w1, #0x1
   3d3a8:	mov	w0, #0x0                   	// #0
   3d3ac:	cmp	w4, #0x4
   3d3b0:	b.hi	3d3c8 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.pmore
   3d3b4:	mov	x4, #0x8                   	// #8
   3d3b8:	mov	w0, #0x1                   	// #1
   3d3bc:	str	x4, [x3]
   3d3c0:	str	w1, [x3, #8]
   3d3c4:	str	x2, [x3, #16]
   3d3c8:	ret
   3d3cc:	nop

000000000003d3d0 <__asan_cplus_demangle_type@@Base>:
   3d3d0:	stp	x29, x30, [sp, #-80]!
   3d3d4:	mov	w2, #0x56                  	// #86
   3d3d8:	mov	w1, #0x4b                  	// #75
   3d3dc:	mov	x29, sp
   3d3e0:	ldr	x3, [x0, #24]
   3d3e4:	stp	x19, x20, [sp, #16]
   3d3e8:	mov	x19, x0
   3d3ec:	ldrb	w0, [x3]
   3d3f0:	cmp	w0, #0x72
   3d3f4:	ccmp	w0, w2, #0x4, ne  // ne = any
   3d3f8:	ccmp	w0, w1, #0x4, ne  // ne = any
   3d3fc:	b.eq	3d448 <__asan_cplus_demangle_type@@Base+0x78>  // b.none
   3d400:	cmp	w0, #0x44
   3d404:	b.eq	3d4cc <__asan_cplus_demangle_type@@Base+0xfc>  // b.none
   3d408:	sub	w2, w0, #0x30
   3d40c:	cmp	w2, #0x4a
   3d410:	b.hi	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.pmore
   3d414:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3d418:	add	x1, x1, #0xc30
   3d41c:	ldrh	w1, [x1, w2, uxtw #1]
   3d420:	adr	x2, 3d42c <__asan_cplus_demangle_type@@Base+0x5c>
   3d424:	add	x1, x2, w1, sxth #2
   3d428:	br	x1
   3d42c:	mov	x0, #0x0                   	// #0
   3d430:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   3d434:	mov	x20, #0x0                   	// #0
   3d438:	mov	x0, x20
   3d43c:	ldp	x19, x20, [sp, #16]
   3d440:	ldp	x29, x30, [sp], #80
   3d444:	ret
   3d448:	add	x1, sp, #0x48
   3d44c:	mov	x0, x19
   3d450:	mov	w2, #0x0                   	// #0
   3d454:	stp	x21, x22, [sp, #32]
   3d458:	bl	3fae8 <__asan_cplus_demangle_type@@Base+0x2718>
   3d45c:	mov	x21, x0
   3d460:	cbz	x0, 3d5a4 <__asan_cplus_demangle_type@@Base+0x1d4>
   3d464:	ldr	x0, [x19, #24]
   3d468:	ldrb	w0, [x0]
   3d46c:	cmp	w0, #0x46
   3d470:	mov	x0, x19
   3d474:	b.eq	3d598 <__asan_cplus_demangle_type@@Base+0x1c8>  // b.none
   3d478:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d47c:	str	x0, [x21]
   3d480:	cbz	x0, 3d5a4 <__asan_cplus_demangle_type@@Base+0x1d4>
   3d484:	ldr	w1, [x0]
   3d488:	ldr	x20, [sp, #72]
   3d48c:	sub	w1, w1, #0x1f
   3d490:	cmp	w1, #0x1
   3d494:	b.ls	3d57c <__asan_cplus_demangle_type@@Base+0x1ac>  // b.plast
   3d498:	cbz	x20, 3d5a4 <__asan_cplus_demangle_type@@Base+0x1d4>
   3d49c:	ldp	w0, w1, [x19, #56]
   3d4a0:	cmp	w0, w1
   3d4a4:	b.ge	3d5a4 <__asan_cplus_demangle_type@@Base+0x1d4>  // b.tcont
   3d4a8:	ldr	x2, [x19, #48]
   3d4ac:	add	w1, w0, #0x1
   3d4b0:	ldp	x21, x22, [sp, #32]
   3d4b4:	str	x20, [x2, w0, sxtw #3]
   3d4b8:	mov	x0, x20
   3d4bc:	str	w1, [x19, #56]
   3d4c0:	ldp	x19, x20, [sp, #16]
   3d4c4:	ldp	x29, x30, [sp], #80
   3d4c8:	ret
   3d4cc:	ldrb	w0, [x3, #1]
   3d4d0:	and	w1, w0, #0xffffffdf
   3d4d4:	sub	w0, w0, #0x77
   3d4d8:	cmp	w1, #0x4f
   3d4dc:	and	w0, w0, #0xff
   3d4e0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   3d4e4:	b.ls	3d448 <__asan_cplus_demangle_type@@Base+0x78>  // b.plast
   3d4e8:	add	x0, x3, #0x1
   3d4ec:	str	x0, [x19, #24]
   3d4f0:	ldrb	w0, [x3, #1]
   3d4f4:	cbz	w0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3d4f8:	add	x0, x3, #0x2
   3d4fc:	str	x0, [x19, #24]
   3d500:	ldrb	w0, [x3, #1]
   3d504:	cmp	w0, #0x68
   3d508:	b.eq	3e000 <__asan_cplus_demangle_type@@Base+0xc30>  // b.none
   3d50c:	b.hi	3da1c <__asan_cplus_demangle_type@@Base+0x64c>  // b.pmore
   3d510:	cmp	w0, #0x63
   3d514:	b.eq	3df6c <__asan_cplus_demangle_type@@Base+0xb9c>  // b.none
   3d518:	b.ls	3d9c8 <__asan_cplus_demangle_type@@Base+0x5f8>  // b.plast
   3d51c:	cmp	w0, #0x65
   3d520:	b.eq	3de94 <__asan_cplus_demangle_type@@Base+0xac4>  // b.none
   3d524:	cmp	w0, #0x66
   3d528:	b.ne	3d988 <__asan_cplus_demangle_type@@Base+0x5b8>  // b.any
   3d52c:	ldp	w0, w1, [x19, #40]
   3d530:	cmp	w0, w1
   3d534:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3d538:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3d53c:	mov	w2, #0x18                  	// #24
   3d540:	ldr	x4, [x19, #32]
   3d544:	smull	x2, w0, w2
   3d548:	ldr	x1, [x1, #3736]
   3d54c:	add	w0, w0, #0x1
   3d550:	ldr	w3, [x19, #72]
   3d554:	add	x20, x4, x2
   3d558:	add	x1, x1, #0x340
   3d55c:	mov	w5, #0x27                  	// #39
   3d560:	str	wzr, [x20, #4]
   3d564:	str	w0, [x19, #40]
   3d568:	add	w0, w3, #0x9
   3d56c:	str	w5, [x4, x2]
   3d570:	str	x1, [x20, #8]
   3d574:	str	w0, [x19, #72]
   3d578:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3d57c:	ldr	x1, [x0, #8]
   3d580:	str	x20, [x0, #8]
   3d584:	ldr	x0, [x21]
   3d588:	str	x0, [sp, #72]
   3d58c:	str	x1, [x21]
   3d590:	ldr	x20, [sp, #72]
   3d594:	b	3d498 <__asan_cplus_demangle_type@@Base+0xc8>
   3d598:	bl	3ea10 <__asan_cplus_demangle_type@@Base+0x1640>
   3d59c:	str	x0, [x21]
   3d5a0:	b	3d480 <__asan_cplus_demangle_type@@Base+0xb0>
   3d5a4:	ldp	x21, x22, [sp, #32]
   3d5a8:	b	3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3d5ac:	adrp	x2, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3d5b0:	sub	w1, w0, #0x61
   3d5b4:	ldp	w0, w4, [x19, #40]
   3d5b8:	sbfiz	x1, x1, #5, #32
   3d5bc:	ldr	x2, [x2, #3736]
   3d5c0:	cmp	w0, w4
   3d5c4:	add	x1, x1, x2
   3d5c8:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3d5cc:	mov	w2, #0x18                  	// #24
   3d5d0:	add	w6, w0, #0x1
   3d5d4:	ldr	x4, [x19, #32]
   3d5d8:	smull	x0, w0, w2
   3d5dc:	ldr	w7, [x1, #8]
   3d5e0:	mov	w5, #0x27                  	// #39
   3d5e4:	add	x20, x4, x0
   3d5e8:	ldr	w2, [x19, #72]
   3d5ec:	add	x3, x3, #0x1
   3d5f0:	add	w2, w2, w7
   3d5f4:	str	wzr, [x20, #4]
   3d5f8:	str	w6, [x19, #40]
   3d5fc:	str	w5, [x4, x0]
   3d600:	str	x1, [x20, #8]
   3d604:	str	x3, [x19, #24]
   3d608:	str	w2, [x19, #72]
   3d60c:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3d610:	add	x3, x3, #0x1
   3d614:	str	x3, [x19, #24]
   3d618:	mov	x0, x19
   3d61c:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3d620:	str	x0, [sp, #72]
   3d624:	ldr	x1, [x19, #24]
   3d628:	mov	x20, x0
   3d62c:	ldrb	w0, [x1]
   3d630:	cmp	w0, #0x49
   3d634:	b.eq	3ddf4 <__asan_cplus_demangle_type@@Base+0xa24>  // b.none
   3d638:	mov	x0, x19
   3d63c:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d640:	ldr	x3, [sp, #72]
   3d644:	mov	x2, x0
   3d648:	mov	w1, #0x21                  	// #33
   3d64c:	mov	x0, x19
   3d650:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d654:	mov	x20, x0
   3d658:	str	x0, [sp, #72]
   3d65c:	nop
   3d660:	cbz	x20, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3d664:	ldp	w0, w1, [x19, #56]
   3d668:	cmp	w0, w1
   3d66c:	b.ge	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.tcont
   3d670:	ldr	x2, [x19, #48]
   3d674:	add	w1, w0, #0x1
   3d678:	str	x20, [x2, w0, sxtw #3]
   3d67c:	str	w1, [x19, #56]
   3d680:	ldr	x20, [sp, #72]
   3d684:	mov	x0, x20
   3d688:	ldp	x19, x20, [sp, #16]
   3d68c:	ldp	x29, x30, [sp], #80
   3d690:	ret
   3d694:	mov	x0, x19
   3d698:	stp	x21, x22, [sp, #32]
   3d69c:	bl	343c8 <__asan_backtrace_create_state@@Base+0x7e0>
   3d6a0:	ldr	x21, [x19, #24]
   3d6a4:	str	x0, [sp, #72]
   3d6a8:	mov	x20, x0
   3d6ac:	ldrb	w0, [x21]
   3d6b0:	cmp	w0, #0x49
   3d6b4:	b.eq	3dd54 <__asan_cplus_demangle_type@@Base+0x984>  // b.none
   3d6b8:	ldp	x21, x22, [sp, #32]
   3d6bc:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d6c0:	ldrb	w0, [x3, #1]
   3d6c4:	sub	w1, w0, #0x30
   3d6c8:	cmp	w0, #0x5f
   3d6cc:	and	w1, w1, #0xff
   3d6d0:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   3d6d4:	b.ls	3d6e8 <__asan_cplus_demangle_type@@Base+0x318>  // b.plast
   3d6d8:	sub	w0, w0, #0x41
   3d6dc:	and	w0, w0, #0xff
   3d6e0:	cmp	w0, #0x19
   3d6e4:	b.hi	3ddd0 <__asan_cplus_demangle_type@@Base+0xa00>  // b.pmore
   3d6e8:	mov	w1, #0x0                   	// #0
   3d6ec:	mov	x0, x19
   3d6f0:	bl	3d000 <__asan_cplus_demangle_fill_name@@Base+0x240>
   3d6f4:	str	x0, [sp, #72]
   3d6f8:	ldr	x1, [x19, #24]
   3d6fc:	mov	x20, x0
   3d700:	ldrb	w0, [x1]
   3d704:	cmp	w0, #0x49
   3d708:	b.ne	3d438 <__asan_cplus_demangle_type@@Base+0x68>  // b.any
   3d70c:	add	x1, x1, #0x1
   3d710:	str	x1, [x19, #24]
   3d714:	mov	x0, x19
   3d718:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3d71c:	mov	x3, x0
   3d720:	mov	x2, x20
   3d724:	mov	x0, x19
   3d728:	mov	w1, #0x4                   	// #4
   3d72c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d730:	mov	x20, x0
   3d734:	str	x0, [sp, #72]
   3d738:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d73c:	add	x3, x3, #0x1
   3d740:	str	x3, [x19, #24]
   3d744:	mov	x0, x19
   3d748:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d74c:	mov	x2, x0
   3d750:	mov	x3, #0x0                   	// #0
   3d754:	mov	x0, x19
   3d758:	mov	w1, #0x23                  	// #35
   3d75c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d760:	mov	x20, x0
   3d764:	str	x0, [sp, #72]
   3d768:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d76c:	add	x3, x3, #0x1
   3d770:	str	x3, [x19, #24]
   3d774:	mov	x0, x19
   3d778:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d77c:	mov	x2, x0
   3d780:	mov	x3, #0x0                   	// #0
   3d784:	mov	x0, x19
   3d788:	mov	w1, #0x22                  	// #34
   3d78c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d790:	mov	x20, x0
   3d794:	str	x0, [sp, #72]
   3d798:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d79c:	add	x3, x3, #0x1
   3d7a0:	str	x3, [x19, #24]
   3d7a4:	mov	x0, x19
   3d7a8:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d7ac:	mov	x2, x0
   3d7b0:	mov	x3, #0x0                   	// #0
   3d7b4:	mov	x0, x19
   3d7b8:	mov	w1, #0x24                  	// #36
   3d7bc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d7c0:	mov	x20, x0
   3d7c4:	str	x0, [sp, #72]
   3d7c8:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d7cc:	add	x3, x3, #0x1
   3d7d0:	str	x3, [x19, #24]
   3d7d4:	mov	x0, x19
   3d7d8:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d7dc:	mov	x2, x0
   3d7e0:	mov	x3, #0x0                   	// #0
   3d7e4:	mov	x0, x19
   3d7e8:	mov	w1, #0x26                  	// #38
   3d7ec:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d7f0:	mov	x20, x0
   3d7f4:	str	x0, [sp, #72]
   3d7f8:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d7fc:	mov	x0, x19
   3d800:	bl	3ea10 <__asan_cplus_demangle_type@@Base+0x1640>
   3d804:	mov	x20, x0
   3d808:	str	x0, [sp, #72]
   3d80c:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d810:	add	x3, x3, #0x1
   3d814:	str	x3, [x19, #24]
   3d818:	mov	x0, x19
   3d81c:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3d820:	mov	x2, x0
   3d824:	mov	x3, #0x0                   	// #0
   3d828:	mov	x0, x19
   3d82c:	mov	w1, #0x28                  	// #40
   3d830:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d834:	mov	x20, x0
   3d838:	str	x0, [sp, #72]
   3d83c:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d840:	add	x3, x3, #0x1
   3d844:	str	x3, [x19, #24]
   3d848:	mov	x0, x19
   3d84c:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3d850:	mov	x2, x0
   3d854:	mov	x3, #0x0                   	// #0
   3d858:	mov	x0, x19
   3d85c:	mov	w1, #0x25                  	// #37
   3d860:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d864:	mov	x20, x0
   3d868:	str	x0, [sp, #72]
   3d86c:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d870:	mov	x0, x19
   3d874:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   3d878:	mov	x20, x0
   3d87c:	str	x0, [sp, #72]
   3d880:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d884:	add	x1, x3, #0x1
   3d888:	str	x1, [x19, #24]
   3d88c:	ldrb	w0, [x3, #1]
   3d890:	cmp	w0, #0x5f
   3d894:	b.eq	3ddc8 <__asan_cplus_demangle_type@@Base+0x9f8>  // b.none
   3d898:	sub	w0, w0, #0x30
   3d89c:	and	w0, w0, #0xff
   3d8a0:	cmp	w0, #0x9
   3d8a4:	b.hi	3de20 <__asan_cplus_demangle_type@@Base+0xa50>  // b.pmore
   3d8a8:	add	x3, x3, #0x2
   3d8ac:	nop
   3d8b0:	mov	x2, x3
   3d8b4:	str	x3, [x19, #24]
   3d8b8:	add	x3, x3, #0x1
   3d8bc:	ldrb	w0, [x2]
   3d8c0:	sub	w0, w0, #0x30
   3d8c4:	and	w0, w0, #0xff
   3d8c8:	cmp	w0, #0x9
   3d8cc:	b.ls	3d8b0 <__asan_cplus_demangle_type@@Base+0x4e0>  // b.plast
   3d8d0:	ldp	w20, w0, [x19, #40]
   3d8d4:	sub	x2, x2, x1
   3d8d8:	cmp	w20, w0
   3d8dc:	b.ge	3d42c <__asan_cplus_demangle_type@@Base+0x5c>  // b.tcont
   3d8e0:	ldr	x0, [x19, #32]
   3d8e4:	mov	w4, #0x18                  	// #24
   3d8e8:	add	w3, w20, #0x1
   3d8ec:	smaddl	x20, w20, w4, x0
   3d8f0:	mov	x0, x20
   3d8f4:	str	wzr, [x20, #4]
   3d8f8:	str	w3, [x19, #40]
   3d8fc:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   3d900:	cbz	w0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3d904:	ldr	x1, [x19, #24]
   3d908:	ldrb	w0, [x1]
   3d90c:	cmp	w0, #0x5f
   3d910:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3d914:	add	x1, x1, #0x1
   3d918:	str	x1, [x19, #24]
   3d91c:	mov	x0, x19
   3d920:	bl	6750 <__asan_cplus_demangle_type@plt>
   3d924:	mov	x3, x0
   3d928:	mov	x2, x20
   3d92c:	mov	x0, x19
   3d930:	mov	w1, #0x2a                  	// #42
   3d934:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d938:	mov	x20, x0
   3d93c:	str	x0, [sp, #72]
   3d940:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d944:	add	x3, x3, #0x1
   3d948:	str	x3, [x19, #24]
   3d94c:	mov	x0, x19
   3d950:	bl	6750 <__asan_cplus_demangle_type@plt>
   3d954:	mov	x20, x0
   3d958:	cbz	x0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3d95c:	mov	x0, x19
   3d960:	bl	6750 <__asan_cplus_demangle_type@plt>
   3d964:	mov	x3, x0
   3d968:	cbz	x0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3d96c:	mov	x2, x20
   3d970:	mov	x0, x19
   3d974:	mov	w1, #0x2b                  	// #43
   3d978:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3d97c:	mov	x20, x0
   3d980:	str	x0, [sp, #72]
   3d984:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3d988:	cmp	w0, #0x64
   3d98c:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3d990:	ldp	w0, w1, [x19, #40]
   3d994:	cmp	w0, w1
   3d998:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3d99c:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3d9a0:	mov	w2, #0x18                  	// #24
   3d9a4:	ldr	x4, [x19, #32]
   3d9a8:	smull	x2, w0, w2
   3d9ac:	ldr	x1, [x1, #3736]
   3d9b0:	add	w0, w0, #0x1
   3d9b4:	ldr	w3, [x19, #72]
   3d9b8:	add	x20, x4, x2
   3d9bc:	add	x1, x1, #0x360
   3d9c0:	mov	w5, #0x27                  	// #39
   3d9c4:	b	3d560 <__asan_cplus_demangle_type@@Base+0x190>
   3d9c8:	cmp	w0, #0x54
   3d9cc:	b.eq	3db48 <__asan_cplus_demangle_type@@Base+0x778>  // b.none
   3d9d0:	cmp	w0, #0x61
   3d9d4:	b.ne	3dbdc <__asan_cplus_demangle_type@@Base+0x80c>  // b.any
   3d9d8:	ldp	w20, w0, [x19, #40]
   3d9dc:	cmp	w20, w0
   3d9e0:	b.ge	3e18c <__asan_cplus_demangle_type@@Base+0xdbc>  // b.tcont
   3d9e4:	ldr	x1, [x19, #32]
   3d9e8:	mov	w2, #0x18                  	// #24
   3d9ec:	add	w0, w20, #0x1
   3d9f0:	smaddl	x20, w20, w2, x1
   3d9f4:	str	wzr, [x20, #4]
   3d9f8:	str	w0, [x19, #40]
   3d9fc:	mov	x0, x20
   3da00:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x2bb0>
   3da04:	mov	w2, #0x4                   	// #4
   3da08:	add	x1, x1, #0x100
   3da0c:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   3da10:	cmp	w0, #0x0
   3da14:	csel	x20, x20, xzr, ne  // ne = any
   3da18:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3da1c:	cmp	w0, #0x73
   3da20:	b.eq	3df34 <__asan_cplus_demangle_type@@Base+0xb64>  // b.none
   3da24:	b.ls	3dba4 <__asan_cplus_demangle_type@@Base+0x7d4>  // b.plast
   3da28:	cmp	w0, #0x75
   3da2c:	b.eq	3dee4 <__asan_cplus_demangle_type@@Base+0xb14>  // b.none
   3da30:	cmp	w0, #0x76
   3da34:	b.ne	3db40 <__asan_cplus_demangle_type@@Base+0x770>  // b.any
   3da38:	ldrb	w0, [x3, #2]
   3da3c:	cmp	w0, #0x5f
   3da40:	b.eq	3e098 <__asan_cplus_demangle_type@@Base+0xcc8>  // b.none
   3da44:	ldp	w0, w1, [x19, #40]
   3da48:	cmp	w0, w1
   3da4c:	b.ge	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.tcont
   3da50:	mov	w2, #0x18                  	// #24
   3da54:	add	w4, w0, #0x1
   3da58:	ldr	x1, [x19, #32]
   3da5c:	smull	x0, w0, w2
   3da60:	mov	w2, #0x42                  	// #66
   3da64:	add	x20, x1, x0
   3da68:	str	wzr, [x20, #4]
   3da6c:	str	w4, [x19, #40]
   3da70:	str	w2, [x1, x0]
   3da74:	ldrb	w0, [x3, #2]
   3da78:	cmp	w0, #0x6e
   3da7c:	b.eq	3e168 <__asan_cplus_demangle_type@@Base+0xd98>  // b.none
   3da80:	sub	w1, w0, #0x30
   3da84:	and	w1, w1, #0xff
   3da88:	cmp	w1, #0x9
   3da8c:	b.hi	3e1a4 <__asan_cplus_demangle_type@@Base+0xdd4>  // b.pmore
   3da90:	mov	w2, #0x0                   	// #0
   3da94:	mov	w6, #0xcccd                	// #52429
   3da98:	mov	w5, w0
   3da9c:	mov	w7, #0x7fffffff            	// #2147483647
   3daa0:	mov	w0, #0x0                   	// #0
   3daa4:	movk	w6, #0xcccc, lsl #16
   3daa8:	ldr	x3, [x19, #24]
   3daac:	b	3dac8 <__asan_cplus_demangle_type@@Base+0x6f8>
   3dab0:	sub	w1, w7, w1
   3dab4:	mov	w5, w4
   3dab8:	umull	x1, w1, w6
   3dabc:	lsr	x1, x1, #35
   3dac0:	cmp	w1, w0
   3dac4:	b.lt	3e160 <__asan_cplus_demangle_type@@Base+0xd90>  // b.tstop
   3dac8:	add	x3, x3, #0x1
   3dacc:	str	x3, [x19, #24]
   3dad0:	add	w0, w0, w0, lsl #2
   3dad4:	ldrb	w4, [x3]
   3dad8:	add	w0, w5, w0, lsl #1
   3dadc:	sub	w0, w0, #0x30
   3dae0:	sub	w1, w4, #0x30
   3dae4:	and	w5, w1, #0xff
   3dae8:	cmp	w5, #0x9
   3daec:	b.ls	3dab0 <__asan_cplus_demangle_type@@Base+0x6e0>  // b.plast
   3daf0:	cbz	w2, 3daf8 <__asan_cplus_demangle_type@@Base+0x728>
   3daf4:	neg	w0, w0
   3daf8:	sxtw	x0, w0
   3dafc:	str	x0, [x20, #8]
   3db00:	ldr	x0, [x19, #24]
   3db04:	ldrb	w1, [x0]
   3db08:	cmp	w1, #0x5f
   3db0c:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3db10:	add	x0, x0, #0x1
   3db14:	str	x0, [x19, #24]
   3db18:	mov	x0, x19
   3db1c:	bl	6750 <__asan_cplus_demangle_type@plt>
   3db20:	mov	x3, x0
   3db24:	mov	x2, x20
   3db28:	mov	x0, x19
   3db2c:	mov	w1, #0x2d                  	// #45
   3db30:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3db34:	mov	x20, x0
   3db38:	str	x0, [sp, #72]
   3db3c:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3db40:	cmp	w0, #0x74
   3db44:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3db48:	ldr	w20, [x19, #76]
   3db4c:	mov	w0, #0x1                   	// #1
   3db50:	str	w0, [x19, #76]
   3db54:	mov	x0, x19
   3db58:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3db5c:	str	w20, [x19, #76]
   3db60:	mov	x2, x0
   3db64:	mov	x3, #0x0                   	// #0
   3db68:	mov	x0, x19
   3db6c:	mov	w1, #0x43                  	// #67
   3db70:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3db74:	str	x0, [sp, #72]
   3db78:	mov	x20, x0
   3db7c:	cbz	x0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3db80:	ldr	x0, [x19, #24]
   3db84:	ldrb	w1, [x0]
   3db88:	cbz	w1, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3db8c:	add	x1, x0, #0x1
   3db90:	str	x1, [x19, #24]
   3db94:	ldrb	w0, [x0]
   3db98:	cmp	w0, #0x45
   3db9c:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3dba0:	b	3d664 <__asan_cplus_demangle_type@@Base+0x294>
   3dba4:	cmp	w0, #0x6e
   3dba8:	b.eq	3dfb0 <__asan_cplus_demangle_type@@Base+0xbe0>  // b.none
   3dbac:	cmp	w0, #0x70
   3dbb0:	b.ne	3dcfc <__asan_cplus_demangle_type@@Base+0x92c>  // b.any
   3dbb4:	mov	x0, x19
   3dbb8:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3dbbc:	mov	x3, #0x0                   	// #0
   3dbc0:	mov	x2, x0
   3dbc4:	mov	w1, #0x4b                  	// #75
   3dbc8:	mov	x0, x19
   3dbcc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3dbd0:	mov	x20, x0
   3dbd4:	str	x0, [sp, #72]
   3dbd8:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3dbdc:	cmp	w0, #0x46
   3dbe0:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3dbe4:	ldp	w0, w1, [x19, #40]
   3dbe8:	cmp	w0, w1
   3dbec:	b.ge	3e1c4 <__asan_cplus_demangle_type@@Base+0xdf4>  // b.tcont
   3dbf0:	mov	w2, #0x18                  	// #24
   3dbf4:	add	w4, w0, #0x1
   3dbf8:	ldr	x1, [x19, #32]
   3dbfc:	smull	x0, w0, w2
   3dc00:	mov	w2, #0x2c                  	// #44
   3dc04:	add	x20, x1, x0
   3dc08:	str	wzr, [x20, #4]
   3dc0c:	str	w4, [x19, #40]
   3dc10:	str	x20, [sp, #72]
   3dc14:	str	w2, [x1, x0]
   3dc18:	ldrb	w0, [x3, #2]
   3dc1c:	sub	w0, w0, #0x30
   3dc20:	and	w0, w0, #0xff
   3dc24:	cmp	w0, #0x9
   3dc28:	cset	w1, ls  // ls = plast
   3dc2c:	strh	w1, [x20, #16]
   3dc30:	b.ls	3e0c4 <__asan_cplus_demangle_type@@Base+0xcf4>  // b.plast
   3dc34:	mov	x0, x19
   3dc38:	bl	3d3d0 <__asan_cplus_demangle_type@@Base>
   3dc3c:	str	x0, [x20, #8]
   3dc40:	ldr	x20, [sp, #72]
   3dc44:	ldr	x0, [x20, #8]
   3dc48:	cbz	x0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3dc4c:	ldr	x2, [x19, #24]
   3dc50:	ldrb	w1, [x2]
   3dc54:	cmp	w1, #0x6e
   3dc58:	b.ne	3dc6c <__asan_cplus_demangle_type@@Base+0x89c>  // b.any
   3dc5c:	add	x0, x2, #0x1
   3dc60:	str	x0, [x19, #24]
   3dc64:	ldrb	w1, [x2, #1]
   3dc68:	mov	x2, x0
   3dc6c:	sub	w0, w1, #0x30
   3dc70:	mov	w5, #0xcccd                	// #52429
   3dc74:	and	w0, w0, #0xff
   3dc78:	mov	w4, w1
   3dc7c:	cmp	w0, #0x9
   3dc80:	mov	w1, #0x0                   	// #0
   3dc84:	mov	w6, #0x7fffffff            	// #2147483647
   3dc88:	movk	w5, #0xcccc, lsl #16
   3dc8c:	b.ls	3dcac <__asan_cplus_demangle_type@@Base+0x8dc>  // b.plast
   3dc90:	b	3dcd4 <__asan_cplus_demangle_type@@Base+0x904>
   3dc94:	sub	w0, w6, w0
   3dc98:	mov	w4, w3
   3dc9c:	umull	x0, w0, w5
   3dca0:	lsr	x0, x0, #35
   3dca4:	cmp	w0, w1
   3dca8:	b.lt	3dcd4 <__asan_cplus_demangle_type@@Base+0x904>  // b.tstop
   3dcac:	add	x2, x2, #0x1
   3dcb0:	str	x2, [x19, #24]
   3dcb4:	add	w1, w1, w1, lsl #2
   3dcb8:	ldrb	w3, [x2]
   3dcbc:	add	w1, w4, w1, lsl #1
   3dcc0:	sub	w1, w1, #0x30
   3dcc4:	sub	w0, w3, #0x30
   3dcc8:	and	w4, w0, #0xff
   3dccc:	cmp	w4, #0x9
   3dcd0:	b.ls	3dc94 <__asan_cplus_demangle_type@@Base+0x8c4>  // b.plast
   3dcd4:	ldr	x1, [x19, #24]
   3dcd8:	ldrb	w0, [x1]
   3dcdc:	cbz	w0, 3dcec <__asan_cplus_demangle_type@@Base+0x91c>
   3dce0:	add	x0, x1, #0x1
   3dce4:	str	x0, [x19, #24]
   3dce8:	ldrb	w0, [x1]
   3dcec:	cmp	w0, #0x73
   3dcf0:	cset	w0, eq  // eq = none
   3dcf4:	strh	w0, [x20, #18]
   3dcf8:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3dcfc:	cmp	w0, #0x69
   3dd00:	b.ne	3d434 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   3dd04:	ldp	w0, w1, [x19, #40]
   3dd08:	cmp	w0, w1
   3dd0c:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3dd10:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3dd14:	mov	w2, #0x18                  	// #24
   3dd18:	ldr	x4, [x19, #32]
   3dd1c:	smull	x2, w0, w2
   3dd20:	ldr	x1, [x1, #3736]
   3dd24:	add	w0, w0, #0x1
   3dd28:	ldr	w3, [x19, #72]
   3dd2c:	add	x20, x4, x2
   3dd30:	add	x1, x1, #0x400
   3dd34:	mov	w5, #0x27                  	// #39
   3dd38:	str	wzr, [x20, #4]
   3dd3c:	str	w0, [x19, #40]
   3dd40:	add	w0, w3, #0x8
   3dd44:	str	w5, [x4, x2]
   3dd48:	str	x1, [x20, #8]
   3dd4c:	str	w0, [x19, #72]
   3dd50:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3dd54:	ldr	w0, [x19, #80]
   3dd58:	cbnz	w0, 3de44 <__asan_cplus_demangle_type@@Base+0xa74>
   3dd5c:	cbz	x20, 3d5a4 <__asan_cplus_demangle_type@@Base+0x1d4>
   3dd60:	ldp	w0, w1, [x19, #56]
   3dd64:	cmp	w0, w1
   3dd68:	b.ge	3d5a4 <__asan_cplus_demangle_type@@Base+0x1d4>  // b.tcont
   3dd6c:	ldr	x2, [x19, #48]
   3dd70:	add	w1, w0, #0x1
   3dd74:	mov	x3, #0x0                   	// #0
   3dd78:	str	x20, [x2, w0, sxtw #3]
   3dd7c:	str	w1, [x19, #56]
   3dd80:	ldrb	w0, [x21]
   3dd84:	sub	w0, w0, #0x49
   3dd88:	and	w0, w0, #0xff
   3dd8c:	cmp	w0, #0x1
   3dd90:	b.hi	3dda8 <__asan_cplus_demangle_type@@Base+0x9d8>  // b.pmore
   3dd94:	add	x21, x21, #0x1
   3dd98:	str	x21, [x19, #24]
   3dd9c:	mov	x0, x19
   3dda0:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3dda4:	mov	x3, x0
   3dda8:	mov	x2, x20
   3ddac:	mov	x0, x19
   3ddb0:	mov	w1, #0x4                   	// #4
   3ddb4:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3ddb8:	mov	x20, x0
   3ddbc:	str	x0, [sp, #72]
   3ddc0:	ldp	x21, x22, [sp, #32]
   3ddc4:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3ddc8:	mov	x20, #0x0                   	// #0
   3ddcc:	b	3d914 <__asan_cplus_demangle_type@@Base+0x544>
   3ddd0:	mov	x0, x19
   3ddd4:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   3ddd8:	str	x0, [sp, #72]
   3dddc:	mov	x20, x0
   3dde0:	cbz	x0, 3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3dde4:	ldr	w0, [x0]
   3dde8:	cmp	w0, #0x18
   3ddec:	b.ne	3d664 <__asan_cplus_demangle_type@@Base+0x294>  // b.any
   3ddf0:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3ddf4:	add	x1, x1, #0x1
   3ddf8:	str	x1, [x19, #24]
   3ddfc:	mov	x0, x19
   3de00:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3de04:	mov	x3, x0
   3de08:	mov	x2, x20
   3de0c:	mov	x0, x19
   3de10:	mov	w1, #0x4                   	// #4
   3de14:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3de18:	str	x0, [sp, #72]
   3de1c:	b	3d638 <__asan_cplus_demangle_type@@Base+0x268>
   3de20:	ldr	w20, [x19, #76]
   3de24:	mov	w0, #0x1                   	// #1
   3de28:	str	w0, [x19, #76]
   3de2c:	mov	x0, x19
   3de30:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3de34:	str	w20, [x19, #76]
   3de38:	mov	x20, x0
   3de3c:	cbnz	x0, 3d904 <__asan_cplus_demangle_type@@Base+0x534>
   3de40:	b	3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3de44:	ldr	w22, [x19, #56]
   3de48:	add	x0, x21, #0x1
   3de4c:	ldr	w20, [x19, #72]
   3de50:	str	x23, [sp, #48]
   3de54:	str	x0, [x19, #24]
   3de58:	mov	x0, x19
   3de5c:	ldr	w23, [x19, #40]
   3de60:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3de64:	ldr	x1, [x19, #24]
   3de68:	ldrb	w1, [x1]
   3de6c:	cmp	w1, #0x49
   3de70:	b.eq	3e050 <__asan_cplus_demangle_type@@Base+0xc80>  // b.none
   3de74:	str	x21, [x19, #24]
   3de78:	str	w23, [x19, #40]
   3de7c:	str	w22, [x19, #56]
   3de80:	str	w20, [x19, #72]
   3de84:	ldp	x21, x22, [sp, #32]
   3de88:	ldr	x23, [sp, #48]
   3de8c:	ldr	x20, [sp, #72]
   3de90:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3de94:	ldp	w0, w1, [x19, #40]
   3de98:	cmp	w0, w1
   3de9c:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3dea0:	mov	w2, #0x18                  	// #24
   3dea4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3dea8:	ldr	x4, [x19, #32]
   3deac:	smull	x2, w0, w2
   3deb0:	ldr	w3, [x19, #72]
   3deb4:	add	w0, w0, #0x1
   3deb8:	add	x20, x4, x2
   3debc:	mov	w5, #0x27                  	// #39
   3dec0:	ldr	x1, [x1, #3736]
   3dec4:	str	wzr, [x20, #4]
   3dec8:	str	w0, [x19, #40]
   3decc:	add	x1, x1, #0x380
   3ded0:	str	w5, [x4, x2]
   3ded4:	add	w0, w3, #0xa
   3ded8:	str	x1, [x20, #8]
   3dedc:	str	w0, [x19, #72]
   3dee0:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3dee4:	ldp	w0, w1, [x19, #40]
   3dee8:	cmp	w0, w1
   3deec:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3def0:	mov	w2, #0x18                  	// #24
   3def4:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3def8:	ldr	x4, [x19, #32]
   3defc:	smull	x2, w0, w2
   3df00:	ldr	w3, [x19, #72]
   3df04:	add	w0, w0, #0x1
   3df08:	add	x20, x4, x2
   3df0c:	mov	w5, #0x27                  	// #39
   3df10:	ldr	x1, [x1, #3736]
   3df14:	str	wzr, [x20, #4]
   3df18:	str	w0, [x19, #40]
   3df1c:	add	x1, x1, #0x3c0
   3df20:	str	w5, [x4, x2]
   3df24:	add	w0, w3, #0x7
   3df28:	str	x1, [x20, #8]
   3df2c:	str	w0, [x19, #72]
   3df30:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3df34:	ldp	w0, w1, [x19, #40]
   3df38:	cmp	w0, w1
   3df3c:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3df40:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3df44:	mov	w2, #0x18                  	// #24
   3df48:	ldr	x4, [x19, #32]
   3df4c:	smull	x2, w0, w2
   3df50:	ldr	x1, [x1, #3736]
   3df54:	add	w0, w0, #0x1
   3df58:	ldr	w3, [x19, #72]
   3df5c:	add	x20, x4, x2
   3df60:	add	x1, x1, #0x3e0
   3df64:	mov	w5, #0x27                  	// #39
   3df68:	b	3dd38 <__asan_cplus_demangle_type@@Base+0x968>
   3df6c:	ldp	w20, w0, [x19, #40]
   3df70:	cmp	w20, w0
   3df74:	b.ge	3e194 <__asan_cplus_demangle_type@@Base+0xdc4>  // b.tcont
   3df78:	ldr	x1, [x19, #32]
   3df7c:	mov	w2, #0x18                  	// #24
   3df80:	add	w0, w20, #0x1
   3df84:	smaddl	x20, w20, w2, x1
   3df88:	str	wzr, [x20, #4]
   3df8c:	str	w0, [x19, #40]
   3df90:	mov	x0, x20
   3df94:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3df98:	mov	w2, #0xe                   	// #14
   3df9c:	add	x1, x1, #0xe0
   3dfa0:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   3dfa4:	cmp	w0, #0x0
   3dfa8:	csel	x20, x20, xzr, ne  // ne = any
   3dfac:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3dfb0:	ldp	w0, w1, [x19, #40]
   3dfb4:	cmp	w0, w1
   3dfb8:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3dfbc:	mov	w2, #0x18                  	// #24
   3dfc0:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3dfc4:	ldr	x4, [x19, #32]
   3dfc8:	smull	x2, w0, w2
   3dfcc:	ldr	w3, [x19, #72]
   3dfd0:	add	w0, w0, #0x1
   3dfd4:	add	x20, x4, x2
   3dfd8:	mov	w5, #0x27                  	// #39
   3dfdc:	ldr	x1, [x1, #3736]
   3dfe0:	str	wzr, [x20, #4]
   3dfe4:	str	w0, [x19, #40]
   3dfe8:	add	x1, x1, #0x420
   3dfec:	str	w5, [x4, x2]
   3dff0:	add	w0, w3, #0x11
   3dff4:	str	x1, [x20, #8]
   3dff8:	str	w0, [x19, #72]
   3dffc:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3e000:	ldp	w0, w1, [x19, #40]
   3e004:	cmp	w0, w1
   3e008:	b.ge	3e1ac <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3e00c:	mov	w2, #0x18                  	// #24
   3e010:	adrp	x1, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3e014:	ldr	x4, [x19, #32]
   3e018:	smull	x2, w0, w2
   3e01c:	ldr	w3, [x19, #72]
   3e020:	add	w0, w0, #0x1
   3e024:	add	x20, x4, x2
   3e028:	mov	w5, #0x27                  	// #39
   3e02c:	ldr	x1, [x1, #3736]
   3e030:	str	wzr, [x20, #4]
   3e034:	str	w0, [x19, #40]
   3e038:	add	x1, x1, #0x3a0
   3e03c:	str	w5, [x4, x2]
   3e040:	add	w0, w3, #0x4
   3e044:	str	x1, [x20, #8]
   3e048:	str	w0, [x19, #72]
   3e04c:	b	3d438 <__asan_cplus_demangle_type@@Base+0x68>
   3e050:	ldr	x2, [sp, #72]
   3e054:	cbz	x2, 3e154 <__asan_cplus_demangle_type@@Base+0xd84>
   3e058:	ldp	w4, w1, [x19, #56]
   3e05c:	cmp	w4, w1
   3e060:	b.ge	3e154 <__asan_cplus_demangle_type@@Base+0xd84>  // b.tcont
   3e064:	ldr	x6, [x19, #48]
   3e068:	add	w5, w4, #0x1
   3e06c:	mov	x3, x0
   3e070:	mov	w1, #0x4                   	// #4
   3e074:	mov	x0, x19
   3e078:	str	x2, [x6, w4, sxtw #3]
   3e07c:	str	w5, [x19, #56]
   3e080:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3e084:	mov	x20, x0
   3e088:	str	x0, [sp, #72]
   3e08c:	ldp	x21, x22, [sp, #32]
   3e090:	ldr	x23, [sp, #48]
   3e094:	b	3d660 <__asan_cplus_demangle_type@@Base+0x290>
   3e098:	add	x3, x3, #0x3
   3e09c:	ldr	w20, [x19, #76]
   3e0a0:	mov	w1, #0x1                   	// #1
   3e0a4:	str	x3, [x19, #24]
   3e0a8:	str	w1, [x19, #76]
   3e0ac:	mov	x0, x19
   3e0b0:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3e0b4:	str	w20, [x19, #76]
   3e0b8:	mov	x20, x0
   3e0bc:	cbnz	x0, 3db00 <__asan_cplus_demangle_type@@Base+0x730>
   3e0c0:	b	3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3e0c4:	ldr	x0, [x19, #24]
   3e0c8:	ldrb	w1, [x0]
   3e0cc:	cmp	w1, #0x6e
   3e0d0:	b.ne	3e0e0 <__asan_cplus_demangle_type@@Base+0xd10>  // b.any
   3e0d4:	add	x1, x0, #0x1
   3e0d8:	str	x1, [x19, #24]
   3e0dc:	ldrb	w1, [x0, #1]
   3e0e0:	sub	w0, w1, #0x30
   3e0e4:	and	w0, w0, #0xff
   3e0e8:	cmp	w0, #0x9
   3e0ec:	b.hi	3dc34 <__asan_cplus_demangle_type@@Base+0x864>  // b.pmore
   3e0f0:	ldr	x2, [x19, #24]
   3e0f4:	mov	w5, #0xcccd                	// #52429
   3e0f8:	mov	w3, w1
   3e0fc:	mov	w6, #0x7fffffff            	// #2147483647
   3e100:	add	x2, x2, #0x1
   3e104:	mov	w1, #0x0                   	// #0
   3e108:	movk	w5, #0xcccc, lsl #16
   3e10c:	b	3e12c <__asan_cplus_demangle_type@@Base+0xd5c>
   3e110:	sub	w0, w6, w0
   3e114:	mov	w3, w4
   3e118:	add	x2, x2, #0x1
   3e11c:	umull	x0, w0, w5
   3e120:	lsr	x0, x0, #35
   3e124:	cmp	w0, w1
   3e128:	b.lt	3dc34 <__asan_cplus_demangle_type@@Base+0x864>  // b.tstop
   3e12c:	str	x2, [x19, #24]
   3e130:	add	w1, w1, w1, lsl #2
   3e134:	ldrb	w4, [x2]
   3e138:	add	w1, w3, w1, lsl #1
   3e13c:	sub	w1, w1, #0x30
   3e140:	sub	w0, w4, #0x30
   3e144:	and	w3, w0, #0xff
   3e148:	cmp	w3, #0x9
   3e14c:	b.ls	3e110 <__asan_cplus_demangle_type@@Base+0xd40>  // b.plast
   3e150:	b	3dc34 <__asan_cplus_demangle_type@@Base+0x864>
   3e154:	ldp	x21, x22, [sp, #32]
   3e158:	ldr	x23, [sp, #48]
   3e15c:	b	3d434 <__asan_cplus_demangle_type@@Base+0x64>
   3e160:	mov	w0, #0xffffffff            	// #-1
   3e164:	b	3daf8 <__asan_cplus_demangle_type@@Base+0x728>
   3e168:	add	x0, x3, #0x3
   3e16c:	str	x0, [x19, #24]
   3e170:	ldrb	w0, [x3, #3]
   3e174:	sub	w1, w0, #0x30
   3e178:	and	w1, w1, #0xff
   3e17c:	cmp	w1, #0x9
   3e180:	b.hi	3e19c <__asan_cplus_demangle_type@@Base+0xdcc>  // b.pmore
   3e184:	mov	w2, #0x1                   	// #1
   3e188:	b	3da94 <__asan_cplus_demangle_type@@Base+0x6c4>
   3e18c:	mov	x20, #0x0                   	// #0
   3e190:	b	3d9fc <__asan_cplus_demangle_type@@Base+0x62c>
   3e194:	mov	x20, #0x0                   	// #0
   3e198:	b	3df90 <__asan_cplus_demangle_type@@Base+0xbc0>
   3e19c:	mov	w0, #0x0                   	// #0
   3e1a0:	b	3daf4 <__asan_cplus_demangle_type@@Base+0x724>
   3e1a4:	mov	w0, #0x0                   	// #0
   3e1a8:	b	3daf8 <__asan_cplus_demangle_type@@Base+0x728>
   3e1ac:	mov	x0, #0x0                   	// #0
   3e1b0:	str	xzr, [sp, #72]
   3e1b4:	stp	x21, x22, [sp, #32]
   3e1b8:	str	x23, [sp, #48]
   3e1bc:	ldr	x0, [x0, #8]
   3e1c0:	brk	#0x3e8
   3e1c4:	mov	x0, #0x0                   	// #0
   3e1c8:	stp	x21, x22, [sp, #32]
   3e1cc:	str	x23, [sp, #48]
   3e1d0:	str	wzr, [x0]
   3e1d4:	brk	#0x3e8
   3e1d8:	stp	x29, x30, [sp, #-80]!
   3e1dc:	mov	x29, sp
   3e1e0:	stp	x19, x20, [sp, #16]
   3e1e4:	mov	x19, x0
   3e1e8:	mov	w0, #0x2e                  	// #46
   3e1ec:	str	xzr, [sp, #72]
   3e1f0:	ldr	x4, [x19, #24]
   3e1f4:	ldrb	w1, [x4]
   3e1f8:	cmp	w1, #0x45
   3e1fc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3e200:	ccmp	w1, w0, #0x4, ne  // ne = any
   3e204:	b.eq	3e2d8 <__asan_cplus_demangle_type@@Base+0xf08>  // b.none
   3e208:	mov	w20, #0x4f                  	// #79
   3e20c:	stp	x21, x22, [sp, #32]
   3e210:	add	x22, sp, #0x48
   3e214:	mov	w21, #0x18                  	// #24
   3e218:	str	x23, [sp, #48]
   3e21c:	mov	w23, w0
   3e220:	b	3e25c <__asan_cplus_demangle_type@@Base+0xe8c>
   3e224:	ldp	x4, x3, [x19, #24]
   3e228:	smull	x1, w1, w21
   3e22c:	add	x2, x3, x1
   3e230:	str	wzr, [x2, #4]
   3e234:	str	w5, [x19, #40]
   3e238:	str	w23, [x3, x1]
   3e23c:	stp	x0, xzr, [x2, #8]
   3e240:	str	x2, [x22]
   3e244:	add	x22, x2, #0x10
   3e248:	ldrb	w1, [x4]
   3e24c:	cmp	w1, #0x45
   3e250:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3e254:	ccmp	w1, w23, #0x4, ne  // ne = any
   3e258:	b.eq	3e2ac <__asan_cplus_demangle_type@@Base+0xedc>  // b.none
   3e25c:	cmp	w1, #0x52
   3e260:	mov	x0, x19
   3e264:	ccmp	w1, w20, #0x4, ne  // ne = any
   3e268:	b.ne	3e278 <__asan_cplus_demangle_type@@Base+0xea8>  // b.any
   3e26c:	ldrb	w1, [x4, #1]
   3e270:	cmp	w1, #0x45
   3e274:	b.eq	3e2ac <__asan_cplus_demangle_type@@Base+0xedc>  // b.none
   3e278:	bl	6750 <__asan_cplus_demangle_type@plt>
   3e27c:	cbz	x0, 3e2d0 <__asan_cplus_demangle_type@@Base+0xf00>
   3e280:	ldp	w1, w2, [x19, #40]
   3e284:	add	w5, w1, #0x1
   3e288:	cmp	w1, w2
   3e28c:	b.lt	3e224 <__asan_cplus_demangle_type@@Base+0xe54>  // b.tstop
   3e290:	ldr	x23, [sp, #48]
   3e294:	str	xzr, [x22]
   3e298:	ldp	x21, x22, [sp, #32]
   3e29c:	mov	x0, #0x0                   	// #0
   3e2a0:	ldp	x19, x20, [sp, #16]
   3e2a4:	ldp	x29, x30, [sp], #80
   3e2a8:	ret
   3e2ac:	ldr	x0, [sp, #72]
   3e2b0:	cbz	x0, 3e2d0 <__asan_cplus_demangle_type@@Base+0xf00>
   3e2b4:	ldr	x1, [x0, #16]
   3e2b8:	cbz	x1, 3e2e8 <__asan_cplus_demangle_type@@Base+0xf18>
   3e2bc:	ldp	x19, x20, [sp, #16]
   3e2c0:	ldp	x21, x22, [sp, #32]
   3e2c4:	ldr	x23, [sp, #48]
   3e2c8:	ldp	x29, x30, [sp], #80
   3e2cc:	ret
   3e2d0:	ldp	x21, x22, [sp, #32]
   3e2d4:	ldr	x23, [sp, #48]
   3e2d8:	mov	x0, #0x0                   	// #0
   3e2dc:	ldp	x19, x20, [sp, #16]
   3e2e0:	ldp	x29, x30, [sp], #80
   3e2e4:	ret
   3e2e8:	ldr	x1, [x0, #8]
   3e2ec:	ldr	w2, [x1]
   3e2f0:	cmp	w2, #0x27
   3e2f4:	b.ne	3e2bc <__asan_cplus_demangle_type@@Base+0xeec>  // b.any
   3e2f8:	ldr	x1, [x1, #8]
   3e2fc:	ldr	w2, [x1, #28]
   3e300:	cmp	w2, #0x9
   3e304:	b.ne	3e2bc <__asan_cplus_demangle_type@@Base+0xeec>  // b.any
   3e308:	ldr	w2, [x1, #8]
   3e30c:	ldr	w1, [x19, #72]
   3e310:	ldp	x21, x22, [sp, #32]
   3e314:	sub	w1, w1, w2
   3e318:	ldr	x23, [sp, #48]
   3e31c:	str	w1, [x19, #72]
   3e320:	str	xzr, [x0, #8]
   3e324:	b	3e2a0 <__asan_cplus_demangle_type@@Base+0xed0>
   3e328:	stp	x29, x30, [sp, #-48]!
   3e32c:	mov	x29, sp
   3e330:	ldr	x1, [x0, #24]
   3e334:	stp	x19, x20, [sp, #16]
   3e338:	mov	x19, x0
   3e33c:	ldrb	w10, [x1]
   3e340:	cbz	w10, 3e40c <__asan_cplus_demangle_type@@Base+0x103c>
   3e344:	add	x2, x1, #0x1
   3e348:	str	x2, [x0, #24]
   3e34c:	ldrb	w10, [x1, #1]
   3e350:	ldrb	w8, [x1]
   3e354:	cbnz	w10, 3e414 <__asan_cplus_demangle_type@@Base+0x1044>
   3e358:	adrp	x5, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3e35c:	mov	w4, #0x43                  	// #67
   3e360:	mov	w2, #0x0                   	// #0
   3e364:	mov	w7, #0x18                  	// #24
   3e368:	ldr	x5, [x5, #3760]
   3e36c:	nop
   3e370:	sub	w1, w4, w2
   3e374:	add	w1, w1, w1, lsr #31
   3e378:	add	w1, w2, w1, asr #1
   3e37c:	smull	x3, w1, w7
   3e380:	add	x9, x3, x5
   3e384:	ldr	x3, [x3, x5]
   3e388:	ldrb	w6, [x3]
   3e38c:	cmp	w6, w8
   3e390:	b.eq	3e3b8 <__asan_cplus_demangle_type@@Base+0xfe8>  // b.none
   3e394:	b.ls	3e404 <__asan_cplus_demangle_type@@Base+0x1034>  // b.plast
   3e398:	mov	w4, w1
   3e39c:	cmp	w2, w4
   3e3a0:	b.ne	3e370 <__asan_cplus_demangle_type@@Base+0xfa0>  // b.any
   3e3a4:	mov	x20, #0x0                   	// #0
   3e3a8:	mov	x0, x20
   3e3ac:	ldp	x19, x20, [sp, #16]
   3e3b0:	ldp	x29, x30, [sp], #48
   3e3b4:	ret
   3e3b8:	ldrb	w3, [x3, #1]
   3e3bc:	cmp	w3, w10
   3e3c0:	b.ne	3e394 <__asan_cplus_demangle_type@@Base+0xfc4>  // b.any
   3e3c4:	ldp	w0, w1, [x19, #40]
   3e3c8:	cmp	w0, w1
   3e3cc:	b.ge	3e3a4 <__asan_cplus_demangle_type@@Base+0xfd4>  // b.tcont
   3e3d0:	ldr	x1, [x19, #32]
   3e3d4:	smull	x7, w0, w7
   3e3d8:	add	w0, w0, #0x1
   3e3dc:	mov	w2, #0x32                  	// #50
   3e3e0:	add	x20, x1, x7
   3e3e4:	str	wzr, [x20, #4]
   3e3e8:	str	w0, [x19, #40]
   3e3ec:	mov	x0, x20
   3e3f0:	str	w2, [x1, x7]
   3e3f4:	str	x9, [x20, #8]
   3e3f8:	ldp	x19, x20, [sp, #16]
   3e3fc:	ldp	x29, x30, [sp], #48
   3e400:	ret
   3e404:	add	w2, w1, #0x1
   3e408:	b	3e39c <__asan_cplus_demangle_type@@Base+0xfcc>
   3e40c:	mov	w8, #0x0                   	// #0
   3e410:	b	3e358 <__asan_cplus_demangle_type@@Base+0xf88>
   3e414:	str	x21, [sp, #32]
   3e418:	add	x2, x1, #0x2
   3e41c:	str	x2, [x0, #24]
   3e420:	cmp	w8, #0x76
   3e424:	ldrb	w10, [x1, #1]
   3e428:	b.ne	3e444 <__asan_cplus_demangle_type@@Base+0x1074>  // b.any
   3e42c:	sub	w21, w10, #0x30
   3e430:	and	w1, w21, #0xff
   3e434:	cmp	w1, #0x9
   3e438:	b.ls	3e4a0 <__asan_cplus_demangle_type@@Base+0x10d0>  // b.plast
   3e43c:	ldr	x21, [sp, #32]
   3e440:	b	3e358 <__asan_cplus_demangle_type@@Base+0xf88>
   3e444:	cmp	w10, #0x76
   3e448:	mov	w1, #0x63                  	// #99
   3e44c:	ccmp	w8, w1, #0x0, eq  // eq = none
   3e450:	b.ne	3e43c <__asan_cplus_demangle_type@@Base+0x106c>  // b.any
   3e454:	ldp	w1, w21, [x0, #76]
   3e458:	cmp	w1, #0x0
   3e45c:	cset	w1, eq  // eq = none
   3e460:	str	w1, [x0, #80]
   3e464:	bl	6750 <__asan_cplus_demangle_type@plt>
   3e468:	mov	x2, x0
   3e46c:	ldr	w1, [x19, #80]
   3e470:	mov	x3, #0x0                   	// #0
   3e474:	cbz	w1, 3e4e4 <__asan_cplus_demangle_type@@Base+0x1114>
   3e478:	mov	x0, x19
   3e47c:	mov	w1, #0x35                  	// #53
   3e480:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3e484:	mov	x20, x0
   3e488:	str	w21, [x19, #80]
   3e48c:	mov	x0, x20
   3e490:	ldp	x19, x20, [sp, #16]
   3e494:	ldr	x21, [sp, #32]
   3e498:	ldp	x29, x30, [sp], #48
   3e49c:	ret
   3e4a0:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3e4a4:	mov	x2, x0
   3e4a8:	ldp	w20, w0, [x19, #40]
   3e4ac:	cmp	w20, w0
   3e4b0:	b.ge	3e4f8 <__asan_cplus_demangle_type@@Base+0x1128>  // b.tcont
   3e4b4:	ldr	x1, [x19, #32]
   3e4b8:	mov	w3, #0x18                  	// #24
   3e4bc:	add	w0, w20, #0x1
   3e4c0:	smaddl	x20, w20, w3, x1
   3e4c4:	str	wzr, [x20, #4]
   3e4c8:	str	w0, [x19, #40]
   3e4cc:	mov	w1, w21
   3e4d0:	mov	x0, x20
   3e4d4:	bl	6b20 <__asan_cplus_demangle_fill_extended_operator@plt>
   3e4d8:	ldr	x21, [sp, #32]
   3e4dc:	cbnz	w0, 3e3a8 <__asan_cplus_demangle_type@@Base+0xfd8>
   3e4e0:	b	3e3a4 <__asan_cplus_demangle_type@@Base+0xfd4>
   3e4e4:	mov	x0, x19
   3e4e8:	mov	w1, #0x34                  	// #52
   3e4ec:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3e4f0:	mov	x20, x0
   3e4f4:	b	3e488 <__asan_cplus_demangle_type@@Base+0x10b8>
   3e4f8:	mov	x20, #0x0                   	// #0
   3e4fc:	b	3e4cc <__asan_cplus_demangle_type@@Base+0x10fc>
   3e500:	stp	x29, x30, [sp, #-64]!
   3e504:	mov	x29, sp
   3e508:	ldr	x3, [x0, #24]
   3e50c:	stp	x19, x20, [sp, #16]
   3e510:	mov	x19, x0
   3e514:	str	x23, [sp, #48]
   3e518:	ldrb	w4, [x3]
   3e51c:	sub	w1, w4, #0x30
   3e520:	and	w1, w1, #0xff
   3e524:	cmp	w1, #0x9
   3e528:	b.ls	3e638 <__asan_cplus_demangle_type@@Base+0x1268>  // b.plast
   3e52c:	sub	w1, w4, #0x61
   3e530:	and	w1, w1, #0xff
   3e534:	cmp	w1, #0x19
   3e538:	b.hi	3e584 <__asan_cplus_demangle_type@@Base+0x11b4>  // b.pmore
   3e53c:	cmp	w4, #0x6f
   3e540:	b.eq	3e728 <__asan_cplus_demangle_type@@Base+0x1358>  // b.none
   3e544:	mov	x0, x19
   3e548:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3e54c:	mov	x23, x0
   3e550:	cbz	x0, 3e560 <__asan_cplus_demangle_type@@Base+0x1190>
   3e554:	ldr	w0, [x0]
   3e558:	cmp	w0, #0x32
   3e55c:	b.eq	3e7dc <__asan_cplus_demangle_type@@Base+0x140c>  // b.none
   3e560:	ldr	x3, [x19, #24]
   3e564:	ldrb	w1, [x3]
   3e568:	cmp	w1, #0x42
   3e56c:	b.eq	3e650 <__asan_cplus_demangle_type@@Base+0x1280>  // b.none
   3e570:	mov	x0, x23
   3e574:	ldp	x19, x20, [sp, #16]
   3e578:	ldr	x23, [sp, #48]
   3e57c:	ldp	x29, x30, [sp], #64
   3e580:	ret
   3e584:	sub	w1, w4, #0x43
   3e588:	and	w1, w1, #0xff
   3e58c:	cmp	w1, #0x1
   3e590:	b.ls	3e740 <__asan_cplus_demangle_type@@Base+0x1370>  // b.plast
   3e594:	cmp	w4, #0x4c
   3e598:	b.eq	3e6f0 <__asan_cplus_demangle_type@@Base+0x1320>  // b.none
   3e59c:	cmp	w4, #0x55
   3e5a0:	b.ne	3e710 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   3e5a4:	ldrb	w1, [x3, #1]
   3e5a8:	cmp	w1, #0x6c
   3e5ac:	b.eq	3e8bc <__asan_cplus_demangle_type@@Base+0x14ec>  // b.none
   3e5b0:	cmp	w1, #0x74
   3e5b4:	b.ne	3e710 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   3e5b8:	add	x2, x3, #0x1
   3e5bc:	str	x2, [x0, #24]
   3e5c0:	ldrb	w1, [x3, #1]
   3e5c4:	cmp	w1, #0x74
   3e5c8:	b.ne	3e8b0 <__asan_cplus_demangle_type@@Base+0x14e0>  // b.any
   3e5cc:	add	x3, x3, #0x2
   3e5d0:	str	x3, [x0, #24]
   3e5d4:	bl	341f0 <__asan_backtrace_create_state@@Base+0x608>
   3e5d8:	tbnz	w0, #31, 3e9d8 <__asan_cplus_demangle_type@@Base+0x1608>
   3e5dc:	ldp	w1, w2, [x19, #40]
   3e5e0:	cmp	w1, w2
   3e5e4:	b.ge	3e9d8 <__asan_cplus_demangle_type@@Base+0x1608>  // b.tcont
   3e5e8:	ldp	x3, x4, [x19, #24]
   3e5ec:	mov	w2, #0x18                  	// #24
   3e5f0:	add	w7, w1, #0x1
   3e5f4:	mov	w5, #0x48                  	// #72
   3e5f8:	smull	x1, w1, w2
   3e5fc:	sxtw	x0, w0
   3e600:	ldp	w2, w6, [x19, #56]
   3e604:	add	x23, x4, x1
   3e608:	cmp	w2, w6
   3e60c:	str	wzr, [x23, #4]
   3e610:	str	w7, [x19, #40]
   3e614:	str	w5, [x4, x1]
   3e618:	str	x0, [x23, #8]
   3e61c:	b.ge	3e9cc <__asan_cplus_demangle_type@@Base+0x15fc>  // b.tcont
   3e620:	ldr	x1, [x19, #48]
   3e624:	add	w0, w2, #0x1
   3e628:	str	x23, [x1, w2, sxtw #3]
   3e62c:	str	w0, [x19, #56]
   3e630:	ldrb	w1, [x3]
   3e634:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e638:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3e63c:	mov	x23, x0
   3e640:	ldr	x3, [x19, #24]
   3e644:	ldrb	w1, [x3]
   3e648:	cmp	w1, #0x42
   3e64c:	b.ne	3e570 <__asan_cplus_demangle_type@@Base+0x11a0>  // b.any
   3e650:	mov	w20, #0x4c                  	// #76
   3e654:	stp	x21, x22, [sp, #32]
   3e658:	mov	w21, #0x18                  	// #24
   3e65c:	ldr	x22, [x19, #64]
   3e660:	b	3e6a4 <__asan_cplus_demangle_type@@Base+0x12d4>
   3e664:	ldp	w1, w2, [x19, #40]
   3e668:	add	w4, w1, #0x1
   3e66c:	cmp	w1, w2
   3e670:	b.ge	3e6c0 <__asan_cplus_demangle_type@@Base+0x12f0>  // b.tcont
   3e674:	ldr	x3, [x19, #32]
   3e678:	smull	x1, w1, w21
   3e67c:	add	x2, x3, x1
   3e680:	str	wzr, [x2, #4]
   3e684:	str	w4, [x19, #40]
   3e688:	str	w20, [x3, x1]
   3e68c:	ldr	x3, [x19, #24]
   3e690:	stp	x23, x0, [x2, #8]
   3e694:	mov	x23, x2
   3e698:	ldrb	w1, [x3]
   3e69c:	cmp	w1, #0x42
   3e6a0:	b.ne	3e6d4 <__asan_cplus_demangle_type@@Base+0x1304>  // b.any
   3e6a4:	add	x3, x3, #0x1
   3e6a8:	str	x3, [x19, #24]
   3e6ac:	mov	x0, x19
   3e6b0:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3e6b4:	cmp	x23, #0x0
   3e6b8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   3e6bc:	b.ne	3e664 <__asan_cplus_demangle_type@@Base+0x1294>  // b.any
   3e6c0:	ldr	x3, [x19, #24]
   3e6c4:	mov	x23, #0x0                   	// #0
   3e6c8:	ldrb	w1, [x3]
   3e6cc:	cmp	w1, #0x42
   3e6d0:	b.eq	3e6a4 <__asan_cplus_demangle_type@@Base+0x12d4>  // b.none
   3e6d4:	str	x22, [x19, #64]
   3e6d8:	mov	x0, x23
   3e6dc:	ldp	x19, x20, [sp, #16]
   3e6e0:	ldp	x21, x22, [sp, #32]
   3e6e4:	ldr	x23, [sp, #48]
   3e6e8:	ldp	x29, x30, [sp], #64
   3e6ec:	ret
   3e6f0:	add	x3, x3, #0x1
   3e6f4:	str	x3, [x0, #24]
   3e6f8:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3e6fc:	mov	x23, x0
   3e700:	cbz	x0, 3e710 <__asan_cplus_demangle_type@@Base+0x1340>
   3e704:	mov	x0, x19
   3e708:	bl	342a0 <__asan_backtrace_create_state@@Base+0x6b8>
   3e70c:	cbnz	w0, 3e560 <__asan_cplus_demangle_type@@Base+0x1190>
   3e710:	mov	x23, #0x0                   	// #0
   3e714:	mov	x0, x23
   3e718:	ldp	x19, x20, [sp, #16]
   3e71c:	ldr	x23, [sp, #48]
   3e720:	ldp	x29, x30, [sp], #64
   3e724:	ret
   3e728:	ldrb	w0, [x3, #1]
   3e72c:	cmp	w0, #0x6e
   3e730:	b.ne	3e544 <__asan_cplus_demangle_type@@Base+0x1174>  // b.any
   3e734:	add	x3, x3, #0x2
   3e738:	str	x3, [x19, #24]
   3e73c:	b	3e544 <__asan_cplus_demangle_type@@Base+0x1174>
   3e740:	ldr	x2, [x0, #64]
   3e744:	cbz	x2, 3e83c <__asan_cplus_demangle_type@@Base+0x146c>
   3e748:	ldr	w0, [x2]
   3e74c:	cbnz	w0, 3e834 <__asan_cplus_demangle_type@@Base+0x1464>
   3e750:	ldr	w1, [x2, #16]
   3e754:	ldr	w0, [x19, #72]
   3e758:	add	w0, w0, w1
   3e75c:	str	w0, [x19, #72]
   3e760:	ldrb	w1, [x3]
   3e764:	cmp	w1, #0x43
   3e768:	b.eq	3e844 <__asan_cplus_demangle_type@@Base+0x1474>  // b.none
   3e76c:	cmp	w1, #0x44
   3e770:	b.ne	3e8b4 <__asan_cplus_demangle_type@@Base+0x14e4>  // b.any
   3e774:	ldrb	w0, [x3, #1]
   3e778:	cmp	w0, #0x32
   3e77c:	b.eq	3e9e4 <__asan_cplus_demangle_type@@Base+0x1614>  // b.none
   3e780:	b.hi	3e96c <__asan_cplus_demangle_type@@Base+0x159c>  // b.pmore
   3e784:	cmp	w0, #0x30
   3e788:	b.eq	3e984 <__asan_cplus_demangle_type@@Base+0x15b4>  // b.none
   3e78c:	cmp	w0, #0x31
   3e790:	mov	w1, #0x2                   	// #2
   3e794:	b.ne	3e710 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   3e798:	ldp	w23, w0, [x19, #40]
   3e79c:	add	x3, x3, #0x2
   3e7a0:	str	x3, [x19, #24]
   3e7a4:	cmp	w23, w0
   3e7a8:	b.ge	3e9ec <__asan_cplus_demangle_type@@Base+0x161c>  // b.tcont
   3e7ac:	ldr	x3, [x19, #32]
   3e7b0:	mov	w4, #0x18                  	// #24
   3e7b4:	add	w0, w23, #0x1
   3e7b8:	smaddl	x23, w23, w4, x3
   3e7bc:	str	wzr, [x23, #4]
   3e7c0:	str	w0, [x19, #40]
   3e7c4:	mov	x0, x23
   3e7c8:	bl	6d20 <__asan_cplus_demangle_fill_dtor@plt>
   3e7cc:	ldr	x3, [x19, #24]
   3e7d0:	cbz	w0, 3e8a4 <__asan_cplus_demangle_type@@Base+0x14d4>
   3e7d4:	ldrb	w1, [x3]
   3e7d8:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e7dc:	ldr	x3, [x23, #8]
   3e7e0:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3e7e4:	ldr	w2, [x19, #72]
   3e7e8:	add	x1, x1, #0xf0
   3e7ec:	ldr	x0, [x3]
   3e7f0:	add	w2, w2, #0x7
   3e7f4:	ldr	w3, [x3, #16]
   3e7f8:	add	w2, w2, w3
   3e7fc:	str	w2, [x19, #72]
   3e800:	bl	6b30 <__asan_internal_strcmp@plt>
   3e804:	cbnz	w0, 3e560 <__asan_cplus_demangle_type@@Base+0x1190>
   3e808:	mov	x0, x19
   3e80c:	bl	3cdf0 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3e810:	mov	x2, x23
   3e814:	mov	x3, x0
   3e818:	mov	w1, #0x37                  	// #55
   3e81c:	mov	x0, x19
   3e820:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3e824:	mov	x23, x0
   3e828:	ldr	x3, [x19, #24]
   3e82c:	ldrb	w1, [x3]
   3e830:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e834:	cmp	w0, #0x18
   3e838:	b.eq	3e750 <__asan_cplus_demangle_type@@Base+0x1380>  // b.none
   3e83c:	cmp	w4, #0x43
   3e840:	b.ne	3e774 <__asan_cplus_demangle_type@@Base+0x13a4>  // b.any
   3e844:	ldrb	w0, [x3, #1]
   3e848:	cmp	w0, #0x49
   3e84c:	b.eq	3e994 <__asan_cplus_demangle_type@@Base+0x15c4>  // b.none
   3e850:	sub	w1, w0, #0x31
   3e854:	and	w1, w1, #0xff
   3e858:	cmp	w1, #0x4
   3e85c:	b.hi	3e710 <__asan_cplus_demangle_type@@Base+0x1340>  // b.pmore
   3e860:	sub	w20, w0, #0x30
   3e864:	add	x3, x3, #0x2
   3e868:	str	x3, [x19, #24]
   3e86c:	ldp	w23, w0, [x19, #40]
   3e870:	cmp	w23, w0
   3e874:	b.ge	3e9f4 <__asan_cplus_demangle_type@@Base+0x1624>  // b.tcont
   3e878:	ldr	x1, [x19, #32]
   3e87c:	mov	w3, #0x18                  	// #24
   3e880:	add	w0, w23, #0x1
   3e884:	smaddl	x23, w23, w3, x1
   3e888:	str	wzr, [x23, #4]
   3e88c:	str	w0, [x19, #40]
   3e890:	mov	w1, w20
   3e894:	mov	x0, x23
   3e898:	bl	6b90 <__asan_cplus_demangle_fill_ctor@plt>
   3e89c:	ldr	x3, [x19, #24]
   3e8a0:	cbnz	w0, 3e7d4 <__asan_cplus_demangle_type@@Base+0x1404>
   3e8a4:	mov	x23, #0x0                   	// #0
   3e8a8:	ldrb	w1, [x3]
   3e8ac:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e8b0:	mov	x3, x2
   3e8b4:	mov	x23, #0x0                   	// #0
   3e8b8:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e8bc:	add	x2, x3, #0x1
   3e8c0:	str	x2, [x0, #24]
   3e8c4:	ldrb	w1, [x3, #1]
   3e8c8:	cmp	w1, #0x6c
   3e8cc:	b.ne	3e8b0 <__asan_cplus_demangle_type@@Base+0x14e0>  // b.any
   3e8d0:	add	x3, x3, #0x2
   3e8d4:	str	x3, [x0, #24]
   3e8d8:	mov	x23, #0x0                   	// #0
   3e8dc:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0xe08>
   3e8e0:	mov	x10, x0
   3e8e4:	ldr	x3, [x19, #24]
   3e8e8:	ldrb	w1, [x3]
   3e8ec:	cbz	x0, 3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e8f0:	cmp	w1, #0x45
   3e8f4:	b.ne	3e568 <__asan_cplus_demangle_type@@Base+0x1198>  // b.any
   3e8f8:	add	x3, x3, #0x1
   3e8fc:	str	x3, [x19, #24]
   3e900:	mov	x0, x19
   3e904:	bl	341f0 <__asan_backtrace_create_state@@Base+0x608>
   3e908:	tbnz	w0, #31, 3e560 <__asan_cplus_demangle_type@@Base+0x1190>
   3e90c:	ldp	w1, w2, [x19, #40]
   3e910:	ldr	x3, [x19, #24]
   3e914:	cmp	w1, w2
   3e918:	b.ge	3e9cc <__asan_cplus_demangle_type@@Base+0x15fc>  // b.tcont
   3e91c:	mov	w2, #0x18                  	// #24
   3e920:	add	w6, w1, #0x1
   3e924:	ldr	x4, [x19, #32]
   3e928:	smull	x1, w1, w2
   3e92c:	ldp	w2, w7, [x19, #56]
   3e930:	add	x23, x4, x1
   3e934:	mov	w5, #0x46                  	// #70
   3e938:	cmp	w2, w7
   3e93c:	str	wzr, [x23, #4]
   3e940:	str	w6, [x19, #40]
   3e944:	str	w5, [x4, x1]
   3e948:	str	x10, [x23, #8]
   3e94c:	str	w0, [x23, #16]
   3e950:	b.ge	3e9cc <__asan_cplus_demangle_type@@Base+0x15fc>  // b.tcont
   3e954:	ldr	x1, [x19, #48]
   3e958:	add	w0, w2, #0x1
   3e95c:	str	x23, [x1, w2, sxtw #3]
   3e960:	str	w0, [x19, #56]
   3e964:	ldrb	w1, [x3]
   3e968:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e96c:	cmp	w0, #0x34
   3e970:	b.eq	3e98c <__asan_cplus_demangle_type@@Base+0x15bc>  // b.none
   3e974:	cmp	w0, #0x35
   3e978:	b.ne	3e710 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   3e97c:	mov	w1, #0x5                   	// #5
   3e980:	b	3e798 <__asan_cplus_demangle_type@@Base+0x13c8>
   3e984:	mov	w1, #0x1                   	// #1
   3e988:	b	3e798 <__asan_cplus_demangle_type@@Base+0x13c8>
   3e98c:	mov	w1, #0x4                   	// #4
   3e990:	b	3e798 <__asan_cplus_demangle_type@@Base+0x13c8>
   3e994:	add	x2, x3, #0x1
   3e998:	str	x2, [x19, #24]
   3e99c:	ldrb	w0, [x3, #2]
   3e9a0:	sub	w1, w0, #0x31
   3e9a4:	and	w1, w1, #0xff
   3e9a8:	cmp	w1, #0x4
   3e9ac:	b.hi	3e9fc <__asan_cplus_demangle_type@@Base+0x162c>  // b.pmore
   3e9b0:	add	x3, x3, #0x3
   3e9b4:	str	x3, [x19, #24]
   3e9b8:	sub	w20, w0, #0x30
   3e9bc:	mov	x0, x19
   3e9c0:	bl	6750 <__asan_cplus_demangle_type@plt>
   3e9c4:	ldr	x2, [x19, #64]
   3e9c8:	b	3e86c <__asan_cplus_demangle_type@@Base+0x149c>
   3e9cc:	ldrb	w1, [x3]
   3e9d0:	mov	x23, #0x0                   	// #0
   3e9d4:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3e9d8:	mov	x23, #0x0                   	// #0
   3e9dc:	ldr	x3, [x19, #24]
   3e9e0:	b	3e8a8 <__asan_cplus_demangle_type@@Base+0x14d8>
   3e9e4:	mov	w1, #0x3                   	// #3
   3e9e8:	b	3e798 <__asan_cplus_demangle_type@@Base+0x13c8>
   3e9ec:	mov	x23, #0x0                   	// #0
   3e9f0:	b	3e7c4 <__asan_cplus_demangle_type@@Base+0x13f4>
   3e9f4:	mov	x23, #0x0                   	// #0
   3e9f8:	b	3e890 <__asan_cplus_demangle_type@@Base+0x14c0>
   3e9fc:	ldrb	w1, [x3, #1]
   3ea00:	mov	x23, #0x0                   	// #0
   3ea04:	mov	x3, x2
   3ea08:	b	3e568 <__asan_cplus_demangle_type@@Base+0x1198>
   3ea0c:	nop
   3ea10:	stp	x29, x30, [sp, #-32]!
   3ea14:	mov	x29, sp
   3ea18:	stp	x19, x20, [sp, #16]
   3ea1c:	mov	x19, x0
   3ea20:	ldr	w0, [x0, #16]
   3ea24:	tbnz	w0, #18, 3ea60 <__asan_cplus_demangle_type@@Base+0x1690>
   3ea28:	ldr	w2, [x19, #84]
   3ea2c:	cmp	w2, #0x800
   3ea30:	b.hi	3ea70 <__asan_cplus_demangle_type@@Base+0x16a0>  // b.pmore
   3ea34:	ldr	x1, [x19, #24]
   3ea38:	add	w0, w2, #0x1
   3ea3c:	str	w0, [x19, #84]
   3ea40:	mov	x0, #0x0                   	// #0
   3ea44:	ldrb	w3, [x1]
   3ea48:	cmp	w3, #0x46
   3ea4c:	b.eq	3ea80 <__asan_cplus_demangle_type@@Base+0x16b0>  // b.none
   3ea50:	str	w2, [x19, #84]
   3ea54:	ldp	x19, x20, [sp, #16]
   3ea58:	ldp	x29, x30, [sp], #32
   3ea5c:	ret
   3ea60:	ldr	x1, [x19, #24]
   3ea64:	ldrb	w0, [x1]
   3ea68:	cmp	w0, #0x46
   3ea6c:	b.eq	3ea80 <__asan_cplus_demangle_type@@Base+0x16b0>  // b.none
   3ea70:	mov	x0, #0x0                   	// #0
   3ea74:	ldp	x19, x20, [sp, #16]
   3ea78:	ldp	x29, x30, [sp], #32
   3ea7c:	ret
   3ea80:	add	x0, x1, #0x1
   3ea84:	str	x0, [x19, #24]
   3ea88:	ldrb	w2, [x1, #1]
   3ea8c:	cmp	w2, #0x59
   3ea90:	b.ne	3eaa0 <__asan_cplus_demangle_type@@Base+0x16d0>  // b.any
   3ea94:	add	x0, x1, #0x2
   3ea98:	str	x0, [x19, #24]
   3ea9c:	ldrb	w2, [x1, #2]
   3eaa0:	cmp	w2, #0x4a
   3eaa4:	b.ne	3eab0 <__asan_cplus_demangle_type@@Base+0x16e0>  // b.any
   3eaa8:	add	x0, x0, #0x1
   3eaac:	str	x0, [x19, #24]
   3eab0:	mov	x0, x19
   3eab4:	bl	6750 <__asan_cplus_demangle_type@plt>
   3eab8:	mov	x20, x0
   3eabc:	cbz	x0, 3eb68 <__asan_cplus_demangle_type@@Base+0x1798>
   3eac0:	mov	x0, x19
   3eac4:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0xe08>
   3eac8:	mov	x3, x0
   3eacc:	cbz	x0, 3eb68 <__asan_cplus_demangle_type@@Base+0x1798>
   3ead0:	mov	x2, x20
   3ead4:	mov	x0, x19
   3ead8:	mov	w1, #0x29                  	// #41
   3eadc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3eae0:	ldr	x2, [x19, #24]
   3eae4:	mov	w3, #0x4f                  	// #79
   3eae8:	ldrb	w1, [x2]
   3eaec:	cmp	w1, #0x52
   3eaf0:	ccmp	w1, w3, #0x4, ne  // ne = any
   3eaf4:	b.ne	3eb38 <__asan_cplus_demangle_type@@Base+0x1768>  // b.any
   3eaf8:	ldr	w4, [x19, #72]
   3eafc:	cmp	w1, #0x52
   3eb00:	mov	w1, #0x20                  	// #32
   3eb04:	add	w3, w4, #0x3
   3eb08:	b.ne	3eb14 <__asan_cplus_demangle_type@@Base+0x1744>  // b.any
   3eb0c:	add	w3, w4, #0x2
   3eb10:	mov	w1, #0x1f                  	// #31
   3eb14:	add	x2, x2, #0x1
   3eb18:	str	x2, [x19, #24]
   3eb1c:	str	w3, [x19, #72]
   3eb20:	mov	x2, x0
   3eb24:	mov	x3, #0x0                   	// #0
   3eb28:	mov	x0, x19
   3eb2c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3eb30:	ldr	x2, [x19, #24]
   3eb34:	ldrb	w1, [x2]
   3eb38:	cmp	w1, #0x45
   3eb3c:	b.eq	3eb5c <__asan_cplus_demangle_type@@Base+0x178c>  // b.none
   3eb40:	mov	x0, #0x0                   	// #0
   3eb44:	ldr	w1, [x19, #16]
   3eb48:	tbnz	w1, #18, 3ea74 <__asan_cplus_demangle_type@@Base+0x16a4>
   3eb4c:	ldr	w2, [x19, #84]
   3eb50:	sub	w2, w2, #0x1
   3eb54:	str	w2, [x19, #84]
   3eb58:	b	3ea54 <__asan_cplus_demangle_type@@Base+0x1684>
   3eb5c:	add	x2, x2, #0x1
   3eb60:	str	x2, [x19, #24]
   3eb64:	b	3eb44 <__asan_cplus_demangle_type@@Base+0x1774>
   3eb68:	mov	x0, #0x0                   	// #0
   3eb6c:	b	3eae0 <__asan_cplus_demangle_type@@Base+0x1710>
   3eb70:	stp	x29, x30, [sp, #-112]!
   3eb74:	mov	x29, sp
   3eb78:	ldr	x2, [x0, #24]
   3eb7c:	stp	x19, x20, [sp, #16]
   3eb80:	mov	x19, x0
   3eb84:	str	xzr, [sp, #104]
   3eb88:	ldrb	w3, [x2]
   3eb8c:	cmp	w3, w1, uxtb
   3eb90:	b.eq	3f22c <__asan_cplus_demangle_type@@Base+0x1e5c>  // b.none
   3eb94:	stp	x21, x22, [sp, #32]
   3eb98:	add	x21, sp, #0x68
   3eb9c:	mov	w22, #0x1                   	// #1
   3eba0:	stp	x23, x24, [sp, #48]
   3eba4:	adrp	x24, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3eba8:	and	w23, w1, #0xff
   3ebac:	add	x24, x24, #0x8
   3ebb0:	stp	x25, x26, [sp, #64]
   3ebb4:	adrp	x25, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3ebb8:	add	x25, x25, #0xf20
   3ebbc:	stp	x27, x28, [sp, #80]
   3ebc0:	ldr	w26, [x19, #76]
   3ebc4:	str	w22, [x19, #76]
   3ebc8:	ldrb	w0, [x2]
   3ebcc:	cmp	w0, #0x4c
   3ebd0:	b.eq	3ed5c <__asan_cplus_demangle_type@@Base+0x198c>  // b.none
   3ebd4:	cmp	w0, #0x54
   3ebd8:	b.eq	3edf8 <__asan_cplus_demangle_type@@Base+0x1a28>  // b.none
   3ebdc:	cmp	w0, #0x73
   3ebe0:	b.eq	3ecf4 <__asan_cplus_demangle_type@@Base+0x1924>  // b.none
   3ebe4:	cmp	w0, #0x66
   3ebe8:	b.ne	3ec4c <__asan_cplus_demangle_type@@Base+0x187c>  // b.any
   3ebec:	ldrb	w0, [x2, #1]
   3ebf0:	cmp	w0, #0x70
   3ebf4:	b.eq	3ee08 <__asan_cplus_demangle_type@@Base+0x1a38>  // b.none
   3ebf8:	mov	x0, x19
   3ebfc:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3ec00:	mov	x20, x0
   3ec04:	cbz	x0, 3ec28 <__asan_cplus_demangle_type@@Base+0x1858>
   3ec08:	ldr	w0, [x0]
   3ec0c:	cmp	w0, #0x32
   3ec10:	b.eq	3ef20 <__asan_cplus_demangle_type@@Base+0x1b50>  // b.none
   3ec14:	cmp	w0, #0x33
   3ec18:	b.eq	3efb4 <__asan_cplus_demangle_type@@Base+0x1be4>  // b.none
   3ec1c:	cmp	w0, #0x34
   3ec20:	b.eq	3f124 <__asan_cplus_demangle_type@@Base+0x1d54>  // b.none
   3ec24:	mov	x20, #0x0                   	// #0
   3ec28:	str	w26, [x19, #76]
   3ec2c:	mov	x0, x20
   3ec30:	ldp	x19, x20, [sp, #16]
   3ec34:	ldp	x21, x22, [sp, #32]
   3ec38:	ldp	x23, x24, [sp, #48]
   3ec3c:	ldp	x25, x26, [sp, #64]
   3ec40:	ldp	x27, x28, [sp, #80]
   3ec44:	ldp	x29, x30, [sp], #112
   3ec48:	ret
   3ec4c:	sub	w1, w0, #0x30
   3ec50:	and	w1, w1, #0xff
   3ec54:	cmp	w1, #0x9
   3ec58:	b.hi	3ed78 <__asan_cplus_demangle_type@@Base+0x19a8>  // b.pmore
   3ec5c:	mov	x0, x19
   3ec60:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   3ec64:	mov	x20, x0
   3ec68:	cbz	x0, 3ec28 <__asan_cplus_demangle_type@@Base+0x1858>
   3ec6c:	ldr	x0, [x19, #24]
   3ec70:	ldrb	w1, [x0]
   3ec74:	cmp	w1, #0x49
   3ec78:	b.eq	3ee70 <__asan_cplus_demangle_type@@Base+0x1aa0>  // b.none
   3ec7c:	ldp	w1, w0, [x19, #40]
   3ec80:	str	w26, [x19, #76]
   3ec84:	cmp	w1, w0
   3ec88:	b.ge	3ed34 <__asan_cplus_demangle_type@@Base+0x1964>  // b.tcont
   3ec8c:	ldp	x2, x3, [x19, #24]
   3ec90:	mov	w0, #0x18                  	// #24
   3ec94:	add	w5, w1, #0x1
   3ec98:	mov	w4, #0x2e                  	// #46
   3ec9c:	smull	x1, w1, w0
   3eca0:	add	x0, x3, x1
   3eca4:	str	wzr, [x0, #4]
   3eca8:	str	w5, [x19, #40]
   3ecac:	str	w4, [x3, x1]
   3ecb0:	stp	x20, xzr, [x0, #8]
   3ecb4:	str	x0, [x21]
   3ecb8:	add	x21, x0, #0x10
   3ecbc:	ldrb	w0, [x2]
   3ecc0:	cmp	w0, w23
   3ecc4:	b.ne	3ebc0 <__asan_cplus_demangle_type@@Base+0x17f0>  // b.any
   3ecc8:	ldr	x20, [sp, #104]
   3eccc:	add	x2, x2, #0x1
   3ecd0:	str	x2, [x19, #24]
   3ecd4:	mov	x0, x20
   3ecd8:	ldp	x19, x20, [sp, #16]
   3ecdc:	ldp	x21, x22, [sp, #32]
   3ece0:	ldp	x23, x24, [sp, #48]
   3ece4:	ldp	x25, x26, [sp, #64]
   3ece8:	ldp	x27, x28, [sp, #80]
   3ecec:	ldp	x29, x30, [sp], #112
   3ecf0:	ret
   3ecf4:	ldrb	w0, [x2, #1]
   3ecf8:	cmp	w0, #0x72
   3ecfc:	b.eq	3eeac <__asan_cplus_demangle_type@@Base+0x1adc>  // b.none
   3ed00:	cmp	w0, #0x70
   3ed04:	b.ne	3ebf8 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   3ed08:	add	x2, x2, #0x2
   3ed0c:	str	x2, [x19, #24]
   3ed10:	mov	x0, x19
   3ed14:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3ed18:	mov	x2, x0
   3ed1c:	mov	x3, #0x0                   	// #0
   3ed20:	mov	x0, x19
   3ed24:	mov	w1, #0x4b                  	// #75
   3ed28:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3ed2c:	mov	x20, x0
   3ed30:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3ed34:	str	xzr, [x21]
   3ed38:	mov	x20, #0x0                   	// #0
   3ed3c:	mov	x0, x20
   3ed40:	ldp	x19, x20, [sp, #16]
   3ed44:	ldp	x21, x22, [sp, #32]
   3ed48:	ldp	x23, x24, [sp, #48]
   3ed4c:	ldp	x25, x26, [sp, #64]
   3ed50:	ldp	x27, x28, [sp, #80]
   3ed54:	ldp	x29, x30, [sp], #112
   3ed58:	ret
   3ed5c:	mov	x0, x19
   3ed60:	bl	41488 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   3ed64:	mov	x20, x0
   3ed68:	str	w26, [x19, #76]
   3ed6c:	cbz	x20, 3ec2c <__asan_cplus_demangle_type@@Base+0x185c>
   3ed70:	ldp	w1, w0, [x19, #40]
   3ed74:	b	3ec84 <__asan_cplus_demangle_type@@Base+0x18b4>
   3ed78:	cmp	w0, #0x6f
   3ed7c:	b.ne	3ed98 <__asan_cplus_demangle_type@@Base+0x19c8>  // b.any
   3ed80:	ldrb	w0, [x2, #1]
   3ed84:	cmp	w0, #0x6e
   3ed88:	b.ne	3ebf8 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   3ed8c:	add	x2, x2, #0x2
   3ed90:	str	x2, [x19, #24]
   3ed94:	b	3ec5c <__asan_cplus_demangle_type@@Base+0x188c>
   3ed98:	cmp	w0, #0x69
   3ed9c:	mov	w1, #0x74                  	// #116
   3eda0:	ccmp	w0, w1, #0x4, ne  // ne = any
   3eda4:	b.ne	3ebf8 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   3eda8:	ldrb	w1, [x2, #1]
   3edac:	cmp	w1, #0x6c
   3edb0:	b.ne	3ebf8 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   3edb4:	add	x1, x2, #0x2
   3edb8:	str	x1, [x19, #24]
   3edbc:	cmp	w0, #0x74
   3edc0:	mov	x20, #0x0                   	// #0
   3edc4:	b.eq	3f150 <__asan_cplus_demangle_type@@Base+0x1d80>  // b.none
   3edc8:	ldrb	w0, [x1, #1]
   3edcc:	cbz	w0, 3ec24 <__asan_cplus_demangle_type@@Base+0x1854>
   3edd0:	mov	w1, #0x45                  	// #69
   3edd4:	mov	x0, x19
   3edd8:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3eddc:	mov	x3, x0
   3ede0:	mov	x2, x20
   3ede4:	mov	x0, x19
   3ede8:	mov	w1, #0x31                  	// #49
   3edec:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3edf0:	mov	x20, x0
   3edf4:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3edf8:	mov	x0, x19
   3edfc:	bl	343c8 <__asan_backtrace_create_state@@Base+0x7e0>
   3ee00:	mov	x20, x0
   3ee04:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3ee08:	add	x0, x2, #0x2
   3ee0c:	str	x0, [x19, #24]
   3ee10:	ldrb	w0, [x2, #2]
   3ee14:	cmp	w0, #0x54
   3ee18:	b.eq	3ee9c <__asan_cplus_demangle_type@@Base+0x1acc>  // b.none
   3ee1c:	mov	x0, x19
   3ee20:	bl	341f0 <__asan_backtrace_create_state@@Base+0x608>
   3ee24:	mvn	x1, x0
   3ee28:	tst	x1, #0x7fffffff
   3ee2c:	b.eq	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.none
   3ee30:	add	w3, w0, #0x1
   3ee34:	ldp	w2, w0, [x19, #40]
   3ee38:	cmp	w2, w0
   3ee3c:	b.ge	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.tcont
   3ee40:	mov	w5, #0x18                  	// #24
   3ee44:	add	w1, w2, #0x1
   3ee48:	ldr	x4, [x19, #32]
   3ee4c:	smull	x2, w2, w5
   3ee50:	mov	w5, #0x6                   	// #6
   3ee54:	sxtw	x3, w3
   3ee58:	add	x20, x4, x2
   3ee5c:	str	wzr, [x20, #4]
   3ee60:	str	w1, [x19, #40]
   3ee64:	str	w5, [x4, x2]
   3ee68:	str	x3, [x20, #8]
   3ee6c:	b	3ec80 <__asan_cplus_demangle_type@@Base+0x18b0>
   3ee70:	add	x0, x0, #0x1
   3ee74:	str	x0, [x19, #24]
   3ee78:	mov	x0, x19
   3ee7c:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3ee80:	mov	x3, x0
   3ee84:	mov	x2, x20
   3ee88:	mov	x0, x19
   3ee8c:	mov	w1, #0x4                   	// #4
   3ee90:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3ee94:	mov	x20, x0
   3ee98:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3ee9c:	add	x2, x2, #0x3
   3eea0:	mov	w3, #0x0                   	// #0
   3eea4:	str	x2, [x19, #24]
   3eea8:	b	3ee34 <__asan_cplus_demangle_type@@Base+0x1a64>
   3eeac:	add	x2, x2, #0x2
   3eeb0:	str	x2, [x19, #24]
   3eeb4:	mov	x0, x19
   3eeb8:	bl	6750 <__asan_cplus_demangle_type@plt>
   3eebc:	mov	x20, x0
   3eec0:	mov	x0, x19
   3eec4:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   3eec8:	ldr	x1, [x19, #24]
   3eecc:	mov	x27, x0
   3eed0:	mov	x3, x27
   3eed4:	ldrb	w0, [x1]
   3eed8:	cmp	w0, #0x49
   3eedc:	b.ne	3ef08 <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   3eee0:	add	x1, x1, #0x1
   3eee4:	str	x1, [x19, #24]
   3eee8:	mov	x0, x19
   3eeec:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3eef0:	mov	x3, x0
   3eef4:	mov	x2, x27
   3eef8:	mov	x0, x19
   3eefc:	mov	w1, #0x4                   	// #4
   3ef00:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3ef04:	mov	x3, x0
   3ef08:	mov	x2, x20
   3ef0c:	mov	x0, x19
   3ef10:	mov	w1, #0x1                   	// #1
   3ef14:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3ef18:	mov	x20, x0
   3ef1c:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3ef20:	ldr	x3, [x20, #8]
   3ef24:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3ef28:	ldr	w0, [x19, #72]
   3ef2c:	add	x1, x1, #0x4c0
   3ef30:	ldr	w2, [x3, #16]
   3ef34:	ldr	x28, [x3]
   3ef38:	sub	w2, w2, #0x2
   3ef3c:	add	w0, w0, w2
   3ef40:	str	w0, [x19, #72]
   3ef44:	mov	x0, x28
   3ef48:	bl	6b30 <__asan_internal_strcmp@plt>
   3ef4c:	cbz	w0, 3f24c <__asan_cplus_demangle_type@@Base+0x1e7c>
   3ef50:	ldr	w1, [x20]
   3ef54:	cmp	w1, #0x33
   3ef58:	b.eq	3efb8 <__asan_cplus_demangle_type@@Base+0x1be8>  // b.none
   3ef5c:	cmp	w1, #0x34
   3ef60:	b.eq	3f16c <__asan_cplus_demangle_type@@Base+0x1d9c>  // b.none
   3ef64:	cmp	w1, #0x32
   3ef68:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3ef6c:	ldr	x0, [x20, #8]
   3ef70:	ldr	w0, [x0, #20]
   3ef74:	cmp	w0, #0x2
   3ef78:	b.eq	3efc8 <__asan_cplus_demangle_type@@Base+0x1bf8>  // b.none
   3ef7c:	b.gt	3f048 <__asan_cplus_demangle_type@@Base+0x1c78>
   3ef80:	cbz	w0, 3f200 <__asan_cplus_demangle_type@@Base+0x1e30>
   3ef84:	cmp	w0, #0x1
   3ef88:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3ef8c:	cbnz	x28, 3f1d0 <__asan_cplus_demangle_type@@Base+0x1e00>
   3ef90:	mov	x0, x19
   3ef94:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3ef98:	mov	x3, x0
   3ef9c:	mov	x2, x20
   3efa0:	mov	x0, x19
   3efa4:	mov	w1, #0x37                  	// #55
   3efa8:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3efac:	mov	x20, x0
   3efb0:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3efb4:	mov	x28, #0x0                   	// #0
   3efb8:	ldr	w0, [x20, #8]
   3efbc:	mov	w1, #0x33                  	// #51
   3efc0:	cmp	w0, #0x2
   3efc4:	b.ne	3ef7c <__asan_cplus_demangle_type@@Base+0x1bac>  // b.any
   3efc8:	cbz	x28, 3ec24 <__asan_cplus_demangle_type@@Base+0x1854>
   3efcc:	ldr	x0, [x20, #8]
   3efd0:	ldr	x0, [x0]
   3efd4:	ldrb	w1, [x0, #1]
   3efd8:	cmp	w1, #0x63
   3efdc:	b.eq	3f2fc <__asan_cplus_demangle_type@@Base+0x1f2c>  // b.none
   3efe0:	ldrb	w0, [x28]
   3efe4:	cmp	w0, #0x66
   3efe8:	b.eq	3f35c <__asan_cplus_demangle_type@@Base+0x1f8c>  // b.none
   3efec:	mov	x0, x19
   3eff0:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3eff4:	mov	x27, x0
   3eff8:	mov	x1, x25
   3effc:	mov	x0, x28
   3f000:	bl	6b30 <__asan_internal_strcmp@plt>
   3f004:	cbnz	w0, 3f25c <__asan_cplus_demangle_type@@Base+0x1e8c>
   3f008:	mov	x0, x19
   3f00c:	mov	w1, #0x45                  	// #69
   3f010:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f014:	mov	x28, x0
   3f018:	mov	x3, x28
   3f01c:	mov	x2, x27
   3f020:	mov	w1, #0x39                  	// #57
   3f024:	mov	x0, x19
   3f028:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f02c:	mov	x3, x0
   3f030:	mov	x2, x20
   3f034:	mov	x0, x19
   3f038:	mov	w1, #0x38                  	// #56
   3f03c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f040:	mov	x20, x0
   3f044:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3f048:	cmp	w0, #0x3
   3f04c:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3f050:	cbz	x28, 3ec24 <__asan_cplus_demangle_type@@Base+0x1854>
   3f054:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3f058:	mov	x0, x28
   3f05c:	add	x1, x1, #0xf30
   3f060:	bl	6b30 <__asan_internal_strcmp@plt>
   3f064:	cbz	w0, 3f32c <__asan_cplus_demangle_type@@Base+0x1f5c>
   3f068:	ldrb	w0, [x28]
   3f06c:	cmp	w0, #0x66
   3f070:	b.eq	3f36c <__asan_cplus_demangle_type@@Base+0x1f9c>  // b.none
   3f074:	cmp	w0, #0x6e
   3f078:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3f07c:	ldrb	w0, [x28, #1]
   3f080:	mov	w1, #0x61                  	// #97
   3f084:	cmp	w0, #0x77
   3f088:	ccmp	w0, w1, #0x4, ne  // ne = any
   3f08c:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3f090:	mov	w1, #0x5f                  	// #95
   3f094:	mov	x0, x19
   3f098:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f09c:	mov	x27, x0
   3f0a0:	mov	x0, x19
   3f0a4:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f0a8:	ldr	x1, [x19, #24]
   3f0ac:	mov	x28, x0
   3f0b0:	ldrb	w0, [x1]
   3f0b4:	cmp	w0, #0x45
   3f0b8:	b.eq	3f3a0 <__asan_cplus_demangle_type@@Base+0x1fd0>  // b.none
   3f0bc:	cmp	w0, #0x70
   3f0c0:	b.eq	3f378 <__asan_cplus_demangle_type@@Base+0x1fa8>  // b.none
   3f0c4:	cmp	w0, #0x69
   3f0c8:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3f0cc:	ldrb	w0, [x1, #1]
   3f0d0:	cmp	w0, #0x6c
   3f0d4:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3f0d8:	mov	x0, x19
   3f0dc:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f0e0:	mov	x3, x0
   3f0e4:	mov	x2, x28
   3f0e8:	mov	w1, #0x3c                  	// #60
   3f0ec:	mov	x0, x19
   3f0f0:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f0f4:	mov	x2, x27
   3f0f8:	mov	x3, x0
   3f0fc:	mov	w1, #0x3b                  	// #59
   3f100:	mov	x0, x19
   3f104:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f108:	mov	x3, x0
   3f10c:	mov	x2, x20
   3f110:	mov	x0, x19
   3f114:	mov	w1, #0x3a                  	// #58
   3f118:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f11c:	mov	x20, x0
   3f120:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3f124:	ldr	x0, [x19, #24]
   3f128:	ldrb	w1, [x0]
   3f12c:	cmp	w1, #0x5f
   3f130:	b.ne	3ef90 <__asan_cplus_demangle_type@@Base+0x1bc0>  // b.any
   3f134:	add	x0, x0, #0x1
   3f138:	str	x0, [x19, #24]
   3f13c:	mov	w1, #0x45                  	// #69
   3f140:	mov	x0, x19
   3f144:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f148:	mov	x3, x0
   3f14c:	b	3ef9c <__asan_cplus_demangle_type@@Base+0x1bcc>
   3f150:	mov	x0, x19
   3f154:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f158:	ldr	x1, [x19, #24]
   3f15c:	mov	x20, x0
   3f160:	ldrb	w0, [x1, #1]
   3f164:	cbnz	w0, 3edd0 <__asan_cplus_demangle_type@@Base+0x1a00>
   3f168:	b	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>
   3f16c:	cbz	x28, 3f124 <__asan_cplus_demangle_type@@Base+0x1d54>
   3f170:	ldrb	w0, [x28]
   3f174:	mov	w2, #0x6d                  	// #109
   3f178:	cmp	w0, #0x70
   3f17c:	ccmp	w0, w2, #0x4, ne  // ne = any
   3f180:	b.eq	3f1e8 <__asan_cplus_demangle_type@@Base+0x1e18>  // b.none
   3f184:	ldr	x0, [x19, #24]
   3f188:	ldrb	w1, [x0]
   3f18c:	cmp	w1, #0x5f
   3f190:	b.eq	3f134 <__asan_cplus_demangle_type@@Base+0x1d64>  // b.none
   3f194:	mov	w27, #0x0                   	// #0
   3f198:	mov	x0, x28
   3f19c:	mov	x1, x24
   3f1a0:	bl	6b30 <__asan_internal_strcmp@plt>
   3f1a4:	cbz	w0, 3f21c <__asan_cplus_demangle_type@@Base+0x1e4c>
   3f1a8:	mov	x0, x19
   3f1ac:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f1b0:	mov	x3, x0
   3f1b4:	cbz	w27, 3ef9c <__asan_cplus_demangle_type@@Base+0x1bcc>
   3f1b8:	mov	x2, x3
   3f1bc:	mov	x0, x19
   3f1c0:	mov	w1, #0x39                  	// #57
   3f1c4:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f1c8:	mov	x3, x0
   3f1cc:	b	3ef9c <__asan_cplus_demangle_type@@Base+0x1bcc>
   3f1d0:	ldrb	w0, [x28]
   3f1d4:	mov	w2, #0x6d                  	// #109
   3f1d8:	cmp	w0, #0x70
   3f1dc:	ccmp	w0, w2, #0x4, ne  // ne = any
   3f1e0:	b.ne	3f194 <__asan_cplus_demangle_type@@Base+0x1dc4>  // b.any
   3f1e4:	nop
   3f1e8:	ldrb	w2, [x28, #1]
   3f1ec:	cmp	w2, w0
   3f1f0:	b.eq	3f2dc <__asan_cplus_demangle_type@@Base+0x1f0c>  // b.none
   3f1f4:	cmp	w1, #0x34
   3f1f8:	b.ne	3f194 <__asan_cplus_demangle_type@@Base+0x1dc4>  // b.any
   3f1fc:	b	3f184 <__asan_cplus_demangle_type@@Base+0x1db4>
   3f200:	mov	x2, x20
   3f204:	mov	x0, x19
   3f208:	mov	x3, #0x0                   	// #0
   3f20c:	mov	w1, #0x36                  	// #54
   3f210:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f214:	mov	x20, x0
   3f218:	b	3ed68 <__asan_cplus_demangle_type@@Base+0x1998>
   3f21c:	mov	x0, x19
   3f220:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f224:	mov	x3, x0
   3f228:	b	3f1b4 <__asan_cplus_demangle_type@@Base+0x1de4>
   3f22c:	add	x2, x2, #0x1
   3f230:	str	x2, [x0, #24]
   3f234:	ldp	x19, x20, [sp, #16]
   3f238:	mov	x3, #0x0                   	// #0
   3f23c:	ldp	x29, x30, [sp], #112
   3f240:	mov	w1, #0x2e                  	// #46
   3f244:	mov	x2, #0x0                   	// #0
   3f248:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f24c:	mov	x0, x19
   3f250:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f254:	mov	x3, x0
   3f258:	b	3ef9c <__asan_cplus_demangle_type@@Base+0x1bcc>
   3f25c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3f260:	mov	x0, x28
   3f264:	add	x1, x1, #0xf8
   3f268:	bl	6b30 <__asan_internal_strcmp@plt>
   3f26c:	cbz	w0, 3f294 <__asan_cplus_demangle_type@@Base+0x1ec4>
   3f270:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3f274:	mov	x0, x28
   3f278:	add	x1, x1, #0x100
   3f27c:	bl	6b30 <__asan_internal_strcmp@plt>
   3f280:	cbz	w0, 3f294 <__asan_cplus_demangle_type@@Base+0x1ec4>
   3f284:	mov	x0, x19
   3f288:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f28c:	mov	x28, x0
   3f290:	b	3f018 <__asan_cplus_demangle_type@@Base+0x1c48>
   3f294:	mov	x0, x19
   3f298:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   3f29c:	ldr	x1, [x19, #24]
   3f2a0:	mov	x28, x0
   3f2a4:	ldrb	w0, [x1]
   3f2a8:	cmp	w0, #0x49
   3f2ac:	b.ne	3f018 <__asan_cplus_demangle_type@@Base+0x1c48>  // b.any
   3f2b0:	add	x1, x1, #0x1
   3f2b4:	str	x1, [x19, #24]
   3f2b8:	mov	x0, x19
   3f2bc:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f2c0:	mov	x3, x0
   3f2c4:	mov	x2, x28
   3f2c8:	mov	x0, x19
   3f2cc:	mov	w1, #0x4                   	// #4
   3f2d0:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f2d4:	mov	x28, x0
   3f2d8:	b	3f018 <__asan_cplus_demangle_type@@Base+0x1c48>
   3f2dc:	ldr	x0, [x19, #24]
   3f2e0:	mov	w27, #0x1                   	// #1
   3f2e4:	ldrb	w2, [x0]
   3f2e8:	cmp	w2, #0x5f
   3f2ec:	b.ne	3f198 <__asan_cplus_demangle_type@@Base+0x1dc8>  // b.any
   3f2f0:	add	x0, x0, #0x1
   3f2f4:	str	x0, [x19, #24]
   3f2f8:	b	3f1f4 <__asan_cplus_demangle_type@@Base+0x1e24>
   3f2fc:	ldrb	w0, [x0]
   3f300:	sub	w1, w0, #0x63
   3f304:	sub	w0, w0, #0x72
   3f308:	and	w1, w1, #0xff
   3f30c:	and	w0, w0, #0xff
   3f310:	cmp	w1, #0x1
   3f314:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   3f318:	b.hi	3efe0 <__asan_cplus_demangle_type@@Base+0x1c10>  // b.pmore
   3f31c:	mov	x0, x19
   3f320:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f324:	mov	x27, x0
   3f328:	b	3eff8 <__asan_cplus_demangle_type@@Base+0x1c28>
   3f32c:	mov	x0, x19
   3f330:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f334:	mov	x27, x0
   3f338:	mov	x0, x19
   3f33c:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f340:	mov	x28, x0
   3f344:	mov	x0, x19
   3f348:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f34c:	mov	x3, x0
   3f350:	cbnz	x0, 3f0e4 <__asan_cplus_demangle_type@@Base+0x1d14>
   3f354:	mov	x20, #0x0                   	// #0
   3f358:	b	3ec28 <__asan_cplus_demangle_type@@Base+0x1858>
   3f35c:	mov	x0, x19
   3f360:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3f364:	mov	x27, x0
   3f368:	b	3eff8 <__asan_cplus_demangle_type@@Base+0x1c28>
   3f36c:	mov	x0, x19
   3f370:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3f374:	b	3f334 <__asan_cplus_demangle_type@@Base+0x1f64>
   3f378:	ldrb	w0, [x1, #1]
   3f37c:	cmp	w0, #0x69
   3f380:	b.ne	3ec24 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3f384:	add	x1, x1, #0x2
   3f388:	str	x1, [x19, #24]
   3f38c:	mov	x0, x19
   3f390:	mov	w1, #0x45                  	// #69
   3f394:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f398:	mov	x3, x0
   3f39c:	b	3f0e4 <__asan_cplus_demangle_type@@Base+0x1d14>
   3f3a0:	add	x1, x1, #0x1
   3f3a4:	mov	x3, #0x0                   	// #0
   3f3a8:	str	x1, [x19, #24]
   3f3ac:	b	3f0e4 <__asan_cplus_demangle_type@@Base+0x1d14>
   3f3b0:	ldr	x2, [x0, #24]
   3f3b4:	ldrb	w1, [x2]
   3f3b8:	cmp	w1, #0x4c
   3f3bc:	b.eq	3f5c8 <__asan_cplus_demangle_type@@Base+0x21f8>  // b.none
   3f3c0:	cmp	w1, #0x54
   3f3c4:	b.eq	3f64c <__asan_cplus_demangle_type@@Base+0x227c>  // b.none
   3f3c8:	stp	x29, x30, [sp, #-48]!
   3f3cc:	cmp	w1, #0x73
   3f3d0:	mov	x29, sp
   3f3d4:	stp	x19, x20, [sp, #16]
   3f3d8:	mov	x19, x0
   3f3dc:	b.eq	3f47c <__asan_cplus_demangle_type@@Base+0x20ac>  // b.none
   3f3e0:	cmp	w1, #0x66
   3f3e4:	b.eq	3f428 <__asan_cplus_demangle_type@@Base+0x2058>  // b.none
   3f3e8:	sub	w3, w1, #0x30
   3f3ec:	and	w3, w3, #0xff
   3f3f0:	cmp	w3, #0x9
   3f3f4:	b.hi	3f5cc <__asan_cplus_demangle_type@@Base+0x21fc>  // b.pmore
   3f3f8:	mov	x0, x19
   3f3fc:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   3f400:	mov	x20, x0
   3f404:	cbz	x0, 3f5b4 <__asan_cplus_demangle_type@@Base+0x21e4>
   3f408:	ldr	x0, [x19, #24]
   3f40c:	ldrb	w1, [x0]
   3f410:	cmp	w1, #0x49
   3f414:	b.eq	3f650 <__asan_cplus_demangle_type@@Base+0x2280>  // b.none
   3f418:	mov	x0, x20
   3f41c:	ldp	x19, x20, [sp, #16]
   3f420:	ldp	x29, x30, [sp], #48
   3f424:	ret
   3f428:	ldrb	w1, [x2, #1]
   3f42c:	cmp	w1, #0x70
   3f430:	b.eq	3f4b8 <__asan_cplus_demangle_type@@Base+0x20e8>  // b.none
   3f434:	mov	x0, x19
   3f438:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3f43c:	mov	x20, x0
   3f440:	cbz	x0, 3f5b4 <__asan_cplus_demangle_type@@Base+0x21e4>
   3f444:	ldr	w0, [x0]
   3f448:	stp	x21, x22, [sp, #32]
   3f44c:	cmp	w0, #0x32
   3f450:	b.eq	3f708 <__asan_cplus_demangle_type@@Base+0x2338>  // b.none
   3f454:	cmp	w0, #0x33
   3f458:	b.eq	3f7f0 <__asan_cplus_demangle_type@@Base+0x2420>  // b.none
   3f45c:	cmp	w0, #0x34
   3f460:	b.eq	3f878 <__asan_cplus_demangle_type@@Base+0x24a8>  // b.none
   3f464:	mov	x20, #0x0                   	// #0
   3f468:	mov	x0, x20
   3f46c:	ldp	x19, x20, [sp, #16]
   3f470:	ldp	x21, x22, [sp, #32]
   3f474:	ldp	x29, x30, [sp], #48
   3f478:	ret
   3f47c:	ldrb	w1, [x2, #1]
   3f480:	cmp	w1, #0x72
   3f484:	b.eq	3f67c <__asan_cplus_demangle_type@@Base+0x22ac>  // b.none
   3f488:	cmp	w1, #0x70
   3f48c:	b.ne	3f434 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   3f490:	add	x2, x2, #0x2
   3f494:	str	x2, [x0, #24]
   3f498:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f49c:	mov	x2, x0
   3f4a0:	mov	x0, x19
   3f4a4:	mov	x3, #0x0                   	// #0
   3f4a8:	ldp	x19, x20, [sp, #16]
   3f4ac:	mov	w1, #0x4b                  	// #75
   3f4b0:	ldp	x29, x30, [sp], #48
   3f4b4:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f4b8:	add	x1, x2, #0x2
   3f4bc:	str	x1, [x0, #24]
   3f4c0:	ldrb	w1, [x2, #2]
   3f4c4:	cmp	w1, #0x54
   3f4c8:	b.eq	3f800 <__asan_cplus_demangle_type@@Base+0x2430>  // b.none
   3f4cc:	bl	341f0 <__asan_backtrace_create_state@@Base+0x608>
   3f4d0:	mvn	x1, x0
   3f4d4:	add	w0, w0, #0x1
   3f4d8:	tst	x1, #0x7fffffff
   3f4dc:	b.eq	3f5b4 <__asan_cplus_demangle_type@@Base+0x21e4>  // b.none
   3f4e0:	ldp	w1, w2, [x19, #40]
   3f4e4:	cmp	w1, w2
   3f4e8:	b.ge	3f5b4 <__asan_cplus_demangle_type@@Base+0x21e4>  // b.tcont
   3f4ec:	mov	w3, #0x18                  	// #24
   3f4f0:	add	w4, w1, #0x1
   3f4f4:	ldr	x2, [x19, #32]
   3f4f8:	smull	x1, w1, w3
   3f4fc:	mov	w3, #0x6                   	// #6
   3f500:	sxtw	x0, w0
   3f504:	add	x20, x2, x1
   3f508:	str	wzr, [x20, #4]
   3f50c:	str	w4, [x19, #40]
   3f510:	str	w3, [x2, x1]
   3f514:	str	x0, [x20, #8]
   3f518:	b	3f418 <__asan_cplus_demangle_type@@Base+0x2048>
   3f51c:	cmp	w0, #0x3
   3f520:	b.ne	3f464 <__asan_cplus_demangle_type@@Base+0x2094>  // b.any
   3f524:	cbz	x21, 3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>
   3f528:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3f52c:	mov	x0, x21
   3f530:	add	x1, x1, #0xf30
   3f534:	bl	6b30 <__asan_internal_strcmp@plt>
   3f538:	cbz	w0, 3fa58 <__asan_cplus_demangle_type@@Base+0x2688>
   3f53c:	ldrb	w0, [x21]
   3f540:	cmp	w0, #0x66
   3f544:	b.eq	3fa94 <__asan_cplus_demangle_type@@Base+0x26c4>  // b.none
   3f548:	cmp	w0, #0x6e
   3f54c:	b.ne	3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   3f550:	ldrb	w0, [x21, #1]
   3f554:	mov	w1, #0x61                  	// #97
   3f558:	cmp	w0, #0x77
   3f55c:	ccmp	w0, w1, #0x4, ne  // ne = any
   3f560:	b.ne	3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   3f564:	mov	w1, #0x5f                  	// #95
   3f568:	mov	x0, x19
   3f56c:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f570:	mov	x21, x0
   3f574:	mov	x0, x19
   3f578:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f57c:	ldr	x1, [x19, #24]
   3f580:	mov	x22, x0
   3f584:	ldrb	w0, [x1]
   3f588:	cmp	w0, #0x45
   3f58c:	b.eq	3fad8 <__asan_cplus_demangle_type@@Base+0x2708>  // b.none
   3f590:	cmp	w0, #0x70
   3f594:	b.eq	3fab0 <__asan_cplus_demangle_type@@Base+0x26e0>  // b.none
   3f598:	cmp	w0, #0x69
   3f59c:	b.ne	3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   3f5a0:	ldrb	w0, [x1, #1]
   3f5a4:	cmp	w0, #0x6c
   3f5a8:	b.eq	3f7a0 <__asan_cplus_demangle_type@@Base+0x23d0>  // b.none
   3f5ac:	nop
   3f5b0:	ldp	x21, x22, [sp, #32]
   3f5b4:	mov	x20, #0x0                   	// #0
   3f5b8:	mov	x0, x20
   3f5bc:	ldp	x19, x20, [sp, #16]
   3f5c0:	ldp	x29, x30, [sp], #48
   3f5c4:	ret
   3f5c8:	b	41488 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   3f5cc:	cmp	w1, #0x6f
   3f5d0:	b.ne	3f5ec <__asan_cplus_demangle_type@@Base+0x221c>  // b.any
   3f5d4:	ldrb	w0, [x2, #1]
   3f5d8:	cmp	w0, #0x6e
   3f5dc:	b.ne	3f434 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   3f5e0:	add	x2, x2, #0x2
   3f5e4:	str	x2, [x19, #24]
   3f5e8:	b	3f3f8 <__asan_cplus_demangle_type@@Base+0x2028>
   3f5ec:	cmp	w1, #0x69
   3f5f0:	mov	w3, #0x74                  	// #116
   3f5f4:	ccmp	w1, w3, #0x4, ne  // ne = any
   3f5f8:	b.ne	3f434 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   3f5fc:	ldrb	w3, [x2, #1]
   3f600:	cmp	w3, #0x6c
   3f604:	b.ne	3f434 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   3f608:	add	x3, x2, #0x2
   3f60c:	str	x3, [x0, #24]
   3f610:	cmp	w1, #0x74
   3f614:	mov	x20, #0x0                   	// #0
   3f618:	b.eq	3f6f8 <__asan_cplus_demangle_type@@Base+0x2328>  // b.none
   3f61c:	ldrb	w0, [x3, #1]
   3f620:	cbz	w0, 3f5b4 <__asan_cplus_demangle_type@@Base+0x21e4>
   3f624:	mov	x0, x19
   3f628:	mov	w1, #0x45                  	// #69
   3f62c:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f630:	mov	x3, x0
   3f634:	mov	x2, x20
   3f638:	mov	x0, x19
   3f63c:	ldp	x19, x20, [sp, #16]
   3f640:	mov	w1, #0x31                  	// #49
   3f644:	ldp	x29, x30, [sp], #48
   3f648:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f64c:	b	343c8 <__asan_backtrace_create_state@@Base+0x7e0>
   3f650:	add	x0, x0, #0x1
   3f654:	str	x0, [x19, #24]
   3f658:	mov	x0, x19
   3f65c:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f660:	mov	x3, x0
   3f664:	mov	x2, x20
   3f668:	mov	x0, x19
   3f66c:	ldp	x19, x20, [sp, #16]
   3f670:	mov	w1, #0x4                   	// #4
   3f674:	ldp	x29, x30, [sp], #48
   3f678:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f67c:	add	x2, x2, #0x2
   3f680:	stp	x21, x22, [sp, #32]
   3f684:	str	x2, [x0, #24]
   3f688:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f68c:	mov	x20, x0
   3f690:	mov	x0, x19
   3f694:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   3f698:	ldr	x1, [x19, #24]
   3f69c:	mov	x21, x0
   3f6a0:	mov	x3, x21
   3f6a4:	ldrb	w0, [x1]
   3f6a8:	cmp	w0, #0x49
   3f6ac:	b.eq	3f6cc <__asan_cplus_demangle_type@@Base+0x22fc>  // b.none
   3f6b0:	mov	x2, x20
   3f6b4:	mov	x0, x19
   3f6b8:	ldp	x19, x20, [sp, #16]
   3f6bc:	mov	w1, #0x1                   	// #1
   3f6c0:	ldp	x21, x22, [sp, #32]
   3f6c4:	ldp	x29, x30, [sp], #48
   3f6c8:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f6cc:	add	x1, x1, #0x1
   3f6d0:	str	x1, [x19, #24]
   3f6d4:	mov	x0, x19
   3f6d8:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f6dc:	mov	x3, x0
   3f6e0:	mov	x2, x21
   3f6e4:	mov	x0, x19
   3f6e8:	mov	w1, #0x4                   	// #4
   3f6ec:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f6f0:	mov	x3, x0
   3f6f4:	b	3f6b0 <__asan_cplus_demangle_type@@Base+0x22e0>
   3f6f8:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f6fc:	mov	x20, x0
   3f700:	ldr	x3, [x19, #24]
   3f704:	b	3f61c <__asan_cplus_demangle_type@@Base+0x224c>
   3f708:	ldr	x3, [x20, #8]
   3f70c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3f710:	ldr	w0, [x19, #72]
   3f714:	add	x1, x1, #0x4c0
   3f718:	ldr	w2, [x3, #16]
   3f71c:	ldr	x21, [x3]
   3f720:	sub	w2, w2, #0x2
   3f724:	add	w0, w0, w2
   3f728:	str	w0, [x19, #72]
   3f72c:	mov	x0, x21
   3f730:	bl	6b30 <__asan_internal_strcmp@plt>
   3f734:	cbz	w0, 3f988 <__asan_cplus_demangle_type@@Base+0x25b8>
   3f738:	ldr	w1, [x20]
   3f73c:	cmp	w1, #0x33
   3f740:	b.eq	3f7f4 <__asan_cplus_demangle_type@@Base+0x2424>  // b.none
   3f744:	cmp	w1, #0x34
   3f748:	b.eq	3f810 <__asan_cplus_demangle_type@@Base+0x2440>  // b.none
   3f74c:	cmp	w1, #0x32
   3f750:	b.ne	3f464 <__asan_cplus_demangle_type@@Base+0x2094>  // b.any
   3f754:	ldr	x0, [x20, #8]
   3f758:	ldr	w0, [x0, #20]
   3f75c:	cmp	w0, #0x2
   3f760:	b.eq	3f8d0 <__asan_cplus_demangle_type@@Base+0x2500>  // b.none
   3f764:	b.gt	3f51c <__asan_cplus_demangle_type@@Base+0x214c>
   3f768:	cbz	w0, 3f958 <__asan_cplus_demangle_type@@Base+0x2588>
   3f76c:	cmp	w0, #0x1
   3f770:	b.ne	3f464 <__asan_cplus_demangle_type@@Base+0x2094>  // b.any
   3f774:	cbnz	x21, 3f8a4 <__asan_cplus_demangle_type@@Base+0x24d4>
   3f778:	mov	x0, x19
   3f77c:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f780:	mov	x3, x0
   3f784:	mov	x2, x20
   3f788:	mov	x0, x19
   3f78c:	ldp	x19, x20, [sp, #16]
   3f790:	mov	w1, #0x37                  	// #55
   3f794:	ldp	x21, x22, [sp, #32]
   3f798:	ldp	x29, x30, [sp], #48
   3f79c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f7a0:	mov	x0, x19
   3f7a4:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f7a8:	mov	x3, x0
   3f7ac:	mov	x2, x22
   3f7b0:	mov	x0, x19
   3f7b4:	mov	w1, #0x3c                  	// #60
   3f7b8:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f7bc:	mov	x2, x21
   3f7c0:	mov	x3, x0
   3f7c4:	mov	w1, #0x3b                  	// #59
   3f7c8:	mov	x0, x19
   3f7cc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f7d0:	mov	x3, x0
   3f7d4:	mov	x2, x20
   3f7d8:	mov	x0, x19
   3f7dc:	ldp	x19, x20, [sp, #16]
   3f7e0:	mov	w1, #0x3a                  	// #58
   3f7e4:	ldp	x21, x22, [sp, #32]
   3f7e8:	ldp	x29, x30, [sp], #48
   3f7ec:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f7f0:	mov	x21, #0x0                   	// #0
   3f7f4:	ldr	w0, [x20, #8]
   3f7f8:	mov	w1, #0x33                  	// #51
   3f7fc:	b	3f75c <__asan_cplus_demangle_type@@Base+0x238c>
   3f800:	add	x2, x2, #0x3
   3f804:	mov	w0, #0x0                   	// #0
   3f808:	str	x2, [x19, #24]
   3f80c:	b	3f4e0 <__asan_cplus_demangle_type@@Base+0x2110>
   3f810:	cbz	x21, 3f878 <__asan_cplus_demangle_type@@Base+0x24a8>
   3f814:	ldrb	w0, [x21]
   3f818:	mov	w2, #0x6d                  	// #109
   3f81c:	cmp	w0, #0x70
   3f820:	ccmp	w0, w2, #0x4, ne  // ne = any
   3f824:	b.eq	3f8b8 <__asan_cplus_demangle_type@@Base+0x24e8>  // b.none
   3f828:	ldr	x0, [x19, #24]
   3f82c:	ldrb	w1, [x0]
   3f830:	cmp	w1, #0x5f
   3f834:	b.eq	3f888 <__asan_cplus_demangle_type@@Base+0x24b8>  // b.none
   3f838:	mov	w22, #0x0                   	// #0
   3f83c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3f840:	mov	x0, x21
   3f844:	add	x1, x1, #0x8
   3f848:	bl	6b30 <__asan_internal_strcmp@plt>
   3f84c:	cbz	w0, 3f978 <__asan_cplus_demangle_type@@Base+0x25a8>
   3f850:	mov	x0, x19
   3f854:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f858:	mov	x3, x0
   3f85c:	cbz	w22, 3f784 <__asan_cplus_demangle_type@@Base+0x23b4>
   3f860:	mov	x2, x3
   3f864:	mov	x0, x19
   3f868:	mov	w1, #0x39                  	// #57
   3f86c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f870:	mov	x3, x0
   3f874:	b	3f784 <__asan_cplus_demangle_type@@Base+0x23b4>
   3f878:	ldr	x0, [x19, #24]
   3f87c:	ldrb	w1, [x0]
   3f880:	cmp	w1, #0x5f
   3f884:	b.ne	3f778 <__asan_cplus_demangle_type@@Base+0x23a8>  // b.any
   3f888:	add	x0, x0, #0x1
   3f88c:	str	x0, [x19, #24]
   3f890:	mov	w1, #0x45                  	// #69
   3f894:	mov	x0, x19
   3f898:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f89c:	mov	x3, x0
   3f8a0:	b	3f784 <__asan_cplus_demangle_type@@Base+0x23b4>
   3f8a4:	ldrb	w0, [x21]
   3f8a8:	mov	w2, #0x6d                  	// #109
   3f8ac:	cmp	w0, #0x70
   3f8b0:	ccmp	w0, w2, #0x4, ne  // ne = any
   3f8b4:	b.ne	3f838 <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   3f8b8:	ldrb	w2, [x21, #1]
   3f8bc:	cmp	w2, w0
   3f8c0:	b.eq	3fa08 <__asan_cplus_demangle_type@@Base+0x2638>  // b.none
   3f8c4:	cmp	w1, #0x34
   3f8c8:	b.ne	3f838 <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   3f8cc:	b	3f828 <__asan_cplus_demangle_type@@Base+0x2458>
   3f8d0:	cbz	x21, 3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>
   3f8d4:	ldr	x0, [x20, #8]
   3f8d8:	ldr	x0, [x0]
   3f8dc:	ldrb	w1, [x0, #1]
   3f8e0:	cmp	w1, #0x63
   3f8e4:	b.eq	3fa28 <__asan_cplus_demangle_type@@Base+0x2658>  // b.none
   3f8e8:	ldrb	w0, [x21]
   3f8ec:	cmp	w0, #0x66
   3f8f0:	b.eq	3fa84 <__asan_cplus_demangle_type@@Base+0x26b4>  // b.none
   3f8f4:	mov	x0, x19
   3f8f8:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3f8fc:	mov	x22, x0
   3f900:	adrp	x1, 4e000 <__asan_backtrace_vector_release@@Base+0x7bb0>
   3f904:	mov	x0, x21
   3f908:	add	x1, x1, #0xf20
   3f90c:	bl	6b30 <__asan_internal_strcmp@plt>
   3f910:	cbnz	w0, 3f998 <__asan_cplus_demangle_type@@Base+0x25c8>
   3f914:	mov	x0, x19
   3f918:	mov	w1, #0x45                  	// #69
   3f91c:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3f920:	mov	x21, x0
   3f924:	mov	x3, x21
   3f928:	mov	x2, x22
   3f92c:	mov	x0, x19
   3f930:	mov	w1, #0x39                  	// #57
   3f934:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f938:	mov	x3, x0
   3f93c:	mov	x2, x20
   3f940:	mov	x0, x19
   3f944:	ldp	x19, x20, [sp, #16]
   3f948:	mov	w1, #0x38                  	// #56
   3f94c:	ldp	x21, x22, [sp, #32]
   3f950:	ldp	x29, x30, [sp], #48
   3f954:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f958:	mov	x2, x20
   3f95c:	mov	x0, x19
   3f960:	ldp	x19, x20, [sp, #16]
   3f964:	mov	x3, #0x0                   	// #0
   3f968:	ldp	x21, x22, [sp, #32]
   3f96c:	mov	w1, #0x36                  	// #54
   3f970:	ldp	x29, x30, [sp], #48
   3f974:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3f978:	mov	x0, x19
   3f97c:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f980:	mov	x3, x0
   3f984:	b	3f85c <__asan_cplus_demangle_type@@Base+0x248c>
   3f988:	mov	x0, x19
   3f98c:	bl	6750 <__asan_cplus_demangle_type@plt>
   3f990:	mov	x3, x0
   3f994:	b	3f784 <__asan_cplus_demangle_type@@Base+0x23b4>
   3f998:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3f99c:	mov	x0, x21
   3f9a0:	add	x1, x1, #0xf8
   3f9a4:	bl	6b30 <__asan_internal_strcmp@plt>
   3f9a8:	cbz	w0, 3f9c0 <__asan_cplus_demangle_type@@Base+0x25f0>
   3f9ac:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   3f9b0:	mov	x0, x21
   3f9b4:	add	x1, x1, #0x100
   3f9b8:	bl	6b30 <__asan_internal_strcmp@plt>
   3f9bc:	cbnz	w0, 3faa0 <__asan_cplus_demangle_type@@Base+0x26d0>
   3f9c0:	mov	x0, x19
   3f9c4:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   3f9c8:	ldr	x1, [x19, #24]
   3f9cc:	mov	x21, x0
   3f9d0:	ldrb	w0, [x1]
   3f9d4:	cmp	w0, #0x49
   3f9d8:	b.ne	3f924 <__asan_cplus_demangle_type@@Base+0x2554>  // b.any
   3f9dc:	add	x1, x1, #0x1
   3f9e0:	str	x1, [x19, #24]
   3f9e4:	mov	x0, x19
   3f9e8:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3f9ec:	mov	x3, x0
   3f9f0:	mov	x2, x21
   3f9f4:	mov	x0, x19
   3f9f8:	mov	w1, #0x4                   	// #4
   3f9fc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3fa00:	mov	x21, x0
   3fa04:	b	3f924 <__asan_cplus_demangle_type@@Base+0x2554>
   3fa08:	ldr	x0, [x19, #24]
   3fa0c:	mov	w22, #0x1                   	// #1
   3fa10:	ldrb	w2, [x0]
   3fa14:	cmp	w2, #0x5f
   3fa18:	b.ne	3f83c <__asan_cplus_demangle_type@@Base+0x246c>  // b.any
   3fa1c:	add	x0, x0, #0x1
   3fa20:	str	x0, [x19, #24]
   3fa24:	b	3f8c4 <__asan_cplus_demangle_type@@Base+0x24f4>
   3fa28:	ldrb	w0, [x0]
   3fa2c:	sub	w1, w0, #0x63
   3fa30:	sub	w0, w0, #0x72
   3fa34:	and	w1, w1, #0xff
   3fa38:	and	w0, w0, #0xff
   3fa3c:	cmp	w1, #0x1
   3fa40:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   3fa44:	b.hi	3f8e8 <__asan_cplus_demangle_type@@Base+0x2518>  // b.pmore
   3fa48:	mov	x0, x19
   3fa4c:	bl	6750 <__asan_cplus_demangle_type@plt>
   3fa50:	mov	x22, x0
   3fa54:	b	3f900 <__asan_cplus_demangle_type@@Base+0x2530>
   3fa58:	mov	x0, x19
   3fa5c:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3fa60:	mov	x21, x0
   3fa64:	mov	x0, x19
   3fa68:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3fa6c:	mov	x22, x0
   3fa70:	mov	x0, x19
   3fa74:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3fa78:	mov	x3, x0
   3fa7c:	cbnz	x0, 3f7ac <__asan_cplus_demangle_type@@Base+0x23dc>
   3fa80:	b	3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>
   3fa84:	mov	x0, x19
   3fa88:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3fa8c:	mov	x22, x0
   3fa90:	b	3f900 <__asan_cplus_demangle_type@@Base+0x2530>
   3fa94:	mov	x0, x19
   3fa98:	bl	3e328 <__asan_cplus_demangle_type@@Base+0xf58>
   3fa9c:	b	3fa60 <__asan_cplus_demangle_type@@Base+0x2690>
   3faa0:	mov	x0, x19
   3faa4:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3faa8:	mov	x21, x0
   3faac:	b	3f924 <__asan_cplus_demangle_type@@Base+0x2554>
   3fab0:	ldrb	w0, [x1, #1]
   3fab4:	cmp	w0, #0x69
   3fab8:	b.ne	3f5b0 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   3fabc:	add	x1, x1, #0x2
   3fac0:	str	x1, [x19, #24]
   3fac4:	mov	x0, x19
   3fac8:	mov	w1, #0x45                  	// #69
   3facc:	bl	3eb70 <__asan_cplus_demangle_type@@Base+0x17a0>
   3fad0:	mov	x3, x0
   3fad4:	b	3f7ac <__asan_cplus_demangle_type@@Base+0x23dc>
   3fad8:	add	x1, x1, #0x1
   3fadc:	mov	x3, #0x0                   	// #0
   3fae0:	str	x1, [x19, #24]
   3fae4:	b	3f7ac <__asan_cplus_demangle_type@@Base+0x23dc>
   3fae8:	stp	x29, x30, [sp, #-80]!
   3faec:	mov	x29, sp
   3faf0:	ldr	x3, [x0, #24]
   3faf4:	stp	x19, x20, [sp, #16]
   3faf8:	mov	x19, x0
   3fafc:	stp	x21, x22, [sp, #32]
   3fb00:	mov	x20, x1
   3fb04:	mov	w22, #0x56                  	// #86
   3fb08:	stp	x23, x24, [sp, #48]
   3fb0c:	mov	x23, x1
   3fb10:	mov	w24, w2
   3fb14:	stp	x25, x26, [sp, #64]
   3fb18:	mov	w21, #0x4b                  	// #75
   3fb1c:	ldrb	w4, [x3]
   3fb20:	mov	w0, w4
   3fb24:	nop
   3fb28:	cmp	w0, #0x72
   3fb2c:	ccmp	w0, w22, #0x4, ne  // ne = any
   3fb30:	ccmp	w0, w21, #0x4, ne  // ne = any
   3fb34:	b.eq	3fbe0 <__asan_cplus_demangle_type@@Base+0x2810>  // b.none
   3fb38:	cmp	w0, #0x44
   3fb3c:	b.eq	3fbc4 <__asan_cplus_demangle_type@@Base+0x27f4>  // b.none
   3fb40:	cmp	w4, #0x46
   3fb44:	eor	w24, w24, #0x1
   3fb48:	cset	w0, eq  // eq = none
   3fb4c:	tst	w24, w0
   3fb50:	b.eq	3fba8 <__asan_cplus_demangle_type@@Base+0x27d8>  // b.none
   3fb54:	cmp	x20, x23
   3fb58:	b.eq	3fba8 <__asan_cplus_demangle_type@@Base+0x27d8>  // b.none
   3fb5c:	mov	w3, #0x1d                  	// #29
   3fb60:	mov	w2, #0x1e                  	// #30
   3fb64:	mov	w1, #0x1c                  	// #28
   3fb68:	b	3fb80 <__asan_cplus_demangle_type@@Base+0x27b0>
   3fb6c:	cmp	w0, #0x19
   3fb70:	b.eq	3fdd4 <__asan_cplus_demangle_type@@Base+0x2a04>  // b.none
   3fb74:	add	x23, x23, #0x8
   3fb78:	cmp	x20, x23
   3fb7c:	b.eq	3fba8 <__asan_cplus_demangle_type@@Base+0x27d8>  // b.none
   3fb80:	ldr	x23, [x23]
   3fb84:	ldr	w0, [x23]
   3fb88:	cmp	w0, #0x1a
   3fb8c:	b.eq	3fdcc <__asan_cplus_demangle_type@@Base+0x29fc>  // b.none
   3fb90:	cmp	w0, #0x1b
   3fb94:	b.ne	3fb6c <__asan_cplus_demangle_type@@Base+0x279c>  // b.any
   3fb98:	str	w2, [x23]
   3fb9c:	add	x23, x23, #0x8
   3fba0:	cmp	x20, x23
   3fba4:	b.ne	3fb80 <__asan_cplus_demangle_type@@Base+0x27b0>  // b.any
   3fba8:	mov	x0, x20
   3fbac:	ldp	x19, x20, [sp, #16]
   3fbb0:	ldp	x21, x22, [sp, #32]
   3fbb4:	ldp	x23, x24, [sp, #48]
   3fbb8:	ldp	x25, x26, [sp, #64]
   3fbbc:	ldp	x29, x30, [sp], #80
   3fbc0:	ret
   3fbc4:	ldrb	w0, [x3, #1]
   3fbc8:	and	w1, w0, #0xffffffdf
   3fbcc:	sub	w0, w0, #0x77
   3fbd0:	cmp	w1, #0x4f
   3fbd4:	and	w0, w0, #0xff
   3fbd8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   3fbdc:	b.hi	3fb40 <__asan_cplus_demangle_type@@Base+0x2770>  // b.pmore
   3fbe0:	add	x5, x3, #0x1
   3fbe4:	str	x5, [x19, #24]
   3fbe8:	cmp	w4, #0x72
   3fbec:	b.eq	3fcac <__asan_cplus_demangle_type@@Base+0x28dc>  // b.none
   3fbf0:	cmp	w4, #0x56
   3fbf4:	b.eq	3fd10 <__asan_cplus_demangle_type@@Base+0x2940>  // b.none
   3fbf8:	cmp	w4, #0x4b
   3fbfc:	b.eq	3fd38 <__asan_cplus_demangle_type@@Base+0x2968>  // b.none
   3fc00:	ldrb	w0, [x3, #1]
   3fc04:	cbz	w0, 3fc8c <__asan_cplus_demangle_type@@Base+0x28bc>
   3fc08:	add	x5, x3, #0x2
   3fc0c:	str	x5, [x19, #24]
   3fc10:	ldrb	w25, [x3, #1]
   3fc14:	cmp	w25, #0x78
   3fc18:	b.eq	3fd6c <__asan_cplus_demangle_type@@Base+0x299c>  // b.none
   3fc1c:	and	w0, w25, #0xffffffdf
   3fc20:	cmp	w0, #0x4f
   3fc24:	and	w7, w0, #0xff
   3fc28:	b.ne	3fd84 <__asan_cplus_demangle_type@@Base+0x29b4>  // b.any
   3fc2c:	ldr	w0, [x19, #72]
   3fc30:	cmp	w25, #0x4f
   3fc34:	add	w0, w0, #0x9
   3fc38:	str	w0, [x19, #72]
   3fc3c:	b.ne	3fdc4 <__asan_cplus_demangle_type@@Base+0x29f4>  // b.any
   3fc40:	ldr	w26, [x19, #76]
   3fc44:	mov	w0, #0x1                   	// #1
   3fc48:	str	w0, [x19, #76]
   3fc4c:	mov	x0, x19
   3fc50:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3fc54:	str	w26, [x19, #76]
   3fc58:	cbz	x0, 3fc8c <__asan_cplus_demangle_type@@Base+0x28bc>
   3fc5c:	ldr	x5, [x19, #24]
   3fc60:	ldrb	w1, [x5]
   3fc64:	cmp	w1, #0x45
   3fc68:	b.ne	3fc8c <__asan_cplus_demangle_type@@Base+0x28bc>  // b.any
   3fc6c:	ldp	w3, w1, [x19, #40]
   3fc70:	add	x5, x5, #0x1
   3fc74:	str	x5, [x19, #24]
   3fc78:	mov	w7, w25
   3fc7c:	cmp	w3, w1
   3fc80:	b.lt	3fcd4 <__asan_cplus_demangle_type@@Base+0x2904>  // b.tstop
   3fc84:	nop
   3fc88:	str	xzr, [x20]
   3fc8c:	mov	x20, #0x0                   	// #0
   3fc90:	mov	x0, x20
   3fc94:	ldp	x19, x20, [sp, #16]
   3fc98:	ldp	x21, x22, [sp, #32]
   3fc9c:	ldp	x23, x24, [sp, #48]
   3fca0:	ldp	x25, x26, [sp, #64]
   3fca4:	ldp	x29, x30, [sp], #80
   3fca8:	ret
   3fcac:	ldr	w0, [x19, #72]
   3fcb0:	add	w3, w0, #0x9
   3fcb4:	mov	x0, #0x0                   	// #0
   3fcb8:	cbnz	w24, 3fd2c <__asan_cplus_demangle_type@@Base+0x295c>
   3fcbc:	mov	w7, #0x19                  	// #25
   3fcc0:	str	w3, [x19, #72]
   3fcc4:	nop
   3fcc8:	ldp	w3, w1, [x19, #40]
   3fccc:	cmp	w3, w1
   3fcd0:	b.ge	3fc88 <__asan_cplus_demangle_type@@Base+0x28b8>  // b.tcont
   3fcd4:	mov	w4, #0x18                  	// #24
   3fcd8:	add	w8, w3, #0x1
   3fcdc:	ldr	x6, [x19, #32]
   3fce0:	smull	x3, w3, w4
   3fce4:	add	x4, x6, x3
   3fce8:	str	wzr, [x4, #4]
   3fcec:	str	w8, [x19, #40]
   3fcf0:	str	w7, [x6, x3]
   3fcf4:	stp	xzr, x0, [x4, #8]
   3fcf8:	ldr	x3, [x19, #24]
   3fcfc:	str	x4, [x20]
   3fd00:	add	x20, x4, #0x8
   3fd04:	ldrb	w4, [x5]
   3fd08:	ldrb	w0, [x3]
   3fd0c:	b	3fb28 <__asan_cplus_demangle_type@@Base+0x2758>
   3fd10:	ldr	w1, [x19, #72]
   3fd14:	mov	x0, #0x0                   	// #0
   3fd18:	add	w1, w1, #0x9
   3fd1c:	cbnz	w24, 3fd54 <__asan_cplus_demangle_type@@Base+0x2984>
   3fd20:	mov	w7, #0x1a                  	// #26
   3fd24:	str	w1, [x19, #72]
   3fd28:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fd2c:	mov	w7, #0x1c                  	// #28
   3fd30:	str	w3, [x19, #72]
   3fd34:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fd38:	ldr	w0, [x19, #72]
   3fd3c:	add	w1, w0, #0x6
   3fd40:	mov	x0, #0x0                   	// #0
   3fd44:	cbnz	w24, 3fd60 <__asan_cplus_demangle_type@@Base+0x2990>
   3fd48:	mov	w7, #0x1b                  	// #27
   3fd4c:	str	w1, [x19, #72]
   3fd50:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fd54:	mov	w7, #0x1d                  	// #29
   3fd58:	str	w1, [x19, #72]
   3fd5c:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fd60:	mov	w7, #0x1e                  	// #30
   3fd64:	str	w1, [x19, #72]
   3fd68:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fd6c:	ldr	w1, [x19, #72]
   3fd70:	mov	x0, #0x0                   	// #0
   3fd74:	mov	w7, #0x4d                  	// #77
   3fd78:	add	w1, w1, #0x11
   3fd7c:	str	w1, [x19, #72]
   3fd80:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fd84:	cmp	w25, #0x77
   3fd88:	b.ne	3fc8c <__asan_cplus_demangle_type@@Base+0x28bc>  // b.any
   3fd8c:	ldr	w1, [x19, #72]
   3fd90:	mov	x0, x19
   3fd94:	add	w1, w1, #0x6
   3fd98:	str	w1, [x19, #72]
   3fd9c:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0xe08>
   3fda0:	cbz	x0, 3fc8c <__asan_cplus_demangle_type@@Base+0x28bc>
   3fda4:	ldr	x5, [x19, #24]
   3fda8:	ldrb	w1, [x5]
   3fdac:	cmp	w1, #0x45
   3fdb0:	b.ne	3fc8c <__asan_cplus_demangle_type@@Base+0x28bc>  // b.any
   3fdb4:	add	x5, x5, #0x1
   3fdb8:	mov	w7, #0x50                  	// #80
   3fdbc:	str	x5, [x19, #24]
   3fdc0:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fdc4:	mov	x0, #0x0                   	// #0
   3fdc8:	b	3fcc8 <__asan_cplus_demangle_type@@Base+0x28f8>
   3fdcc:	str	w3, [x23]
   3fdd0:	b	3fb74 <__asan_cplus_demangle_type@@Base+0x27a4>
   3fdd4:	str	w1, [x23]
   3fdd8:	b	3fb74 <__asan_cplus_demangle_type@@Base+0x27a4>
   3fddc:	nop
   3fde0:	stp	x29, x30, [sp, #-96]!
   3fde4:	mov	x29, sp
   3fde8:	ldr	x3, [x0, #24]
   3fdec:	stp	x19, x20, [sp, #16]
   3fdf0:	mov	x19, x0
   3fdf4:	stp	x23, x24, [sp, #48]
   3fdf8:	ldrb	w1, [x3]
   3fdfc:	ldr	x23, [x0, #64]
   3fe00:	cmp	w1, #0x45
   3fe04:	b.eq	3ff54 <__asan_cplus_demangle_type@@Base+0x2b84>  // b.none
   3fe08:	add	x24, sp, #0x58
   3fe0c:	mov	w20, #0x2f                  	// #47
   3fe10:	stp	x21, x22, [sp, #32]
   3fe14:	mov	w22, #0x1                   	// #1
   3fe18:	mov	w21, #0x18                  	// #24
   3fe1c:	str	x25, [sp, #64]
   3fe20:	str	xzr, [sp, #88]
   3fe24:	nop
   3fe28:	cmp	w1, #0x4c
   3fe2c:	b.eq	3ff0c <__asan_cplus_demangle_type@@Base+0x2b3c>  // b.none
   3fe30:	b.hi	3fec0 <__asan_cplus_demangle_type@@Base+0x2af0>  // b.pmore
   3fe34:	sub	w1, w1, #0x49
   3fe38:	and	w1, w1, #0xff
   3fe3c:	cmp	w1, #0x1
   3fe40:	b.hi	3ff00 <__asan_cplus_demangle_type@@Base+0x2b30>  // b.pmore
   3fe44:	add	x3, x3, #0x1
   3fe48:	str	x3, [x19, #24]
   3fe4c:	mov	x0, x19
   3fe50:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   3fe54:	cbz	x0, 3ff38 <__asan_cplus_demangle_type@@Base+0x2b68>
   3fe58:	ldp	w1, w2, [x19, #40]
   3fe5c:	cmp	w1, w2
   3fe60:	b.ge	3ff18 <__asan_cplus_demangle_type@@Base+0x2b48>  // b.tcont
   3fe64:	ldp	x3, x5, [x19, #24]
   3fe68:	smull	x4, w1, w21
   3fe6c:	add	w1, w1, #0x1
   3fe70:	add	x2, x5, x4
   3fe74:	str	wzr, [x2, #4]
   3fe78:	str	w1, [x19, #40]
   3fe7c:	str	w20, [x5, x4]
   3fe80:	stp	x0, xzr, [x2, #8]
   3fe84:	str	x2, [x24]
   3fe88:	add	x24, x2, #0x10
   3fe8c:	ldrb	w1, [x3]
   3fe90:	cmp	w1, #0x45
   3fe94:	b.ne	3fe28 <__asan_cplus_demangle_type@@Base+0x2a58>  // b.any
   3fe98:	add	x3, x3, #0x1
   3fe9c:	str	x3, [x19, #24]
   3fea0:	str	x23, [x19, #64]
   3fea4:	ldp	x19, x20, [sp, #16]
   3fea8:	ldp	x21, x22, [sp, #32]
   3feac:	ldp	x23, x24, [sp, #48]
   3feb0:	ldr	x25, [sp, #64]
   3feb4:	ldr	x0, [sp, #88]
   3feb8:	ldp	x29, x30, [sp], #96
   3febc:	ret
   3fec0:	cmp	w1, #0x58
   3fec4:	b.ne	3ff00 <__asan_cplus_demangle_type@@Base+0x2b30>  // b.any
   3fec8:	add	x3, x3, #0x1
   3fecc:	ldr	w25, [x19, #76]
   3fed0:	str	x3, [x19, #24]
   3fed4:	mov	x0, x19
   3fed8:	str	w22, [x19, #76]
   3fedc:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3fee0:	str	w25, [x19, #76]
   3fee4:	ldr	x1, [x19, #24]
   3fee8:	ldrb	w2, [x1]
   3feec:	cmp	w2, #0x45
   3fef0:	b.ne	3ff38 <__asan_cplus_demangle_type@@Base+0x2b68>  // b.any
   3fef4:	add	x1, x1, #0x1
   3fef8:	str	x1, [x19, #24]
   3fefc:	b	3fe54 <__asan_cplus_demangle_type@@Base+0x2a84>
   3ff00:	mov	x0, x19
   3ff04:	bl	6750 <__asan_cplus_demangle_type@plt>
   3ff08:	b	3fe54 <__asan_cplus_demangle_type@@Base+0x2a84>
   3ff0c:	mov	x0, x19
   3ff10:	bl	41488 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   3ff14:	b	3fe54 <__asan_cplus_demangle_type@@Base+0x2a84>
   3ff18:	str	xzr, [x24]
   3ff1c:	mov	x0, #0x0                   	// #0
   3ff20:	ldp	x19, x20, [sp, #16]
   3ff24:	ldp	x21, x22, [sp, #32]
   3ff28:	ldp	x23, x24, [sp, #48]
   3ff2c:	ldr	x25, [sp, #64]
   3ff30:	ldp	x29, x30, [sp], #96
   3ff34:	ret
   3ff38:	mov	x0, #0x0                   	// #0
   3ff3c:	ldp	x19, x20, [sp, #16]
   3ff40:	ldp	x21, x22, [sp, #32]
   3ff44:	ldp	x23, x24, [sp, #48]
   3ff48:	ldr	x25, [sp, #64]
   3ff4c:	ldp	x29, x30, [sp], #96
   3ff50:	ret
   3ff54:	add	x3, x3, #0x1
   3ff58:	mov	x2, #0x0                   	// #0
   3ff5c:	ldp	x23, x24, [sp, #48]
   3ff60:	str	x3, [x0, #24]
   3ff64:	ldp	x19, x20, [sp, #16]
   3ff68:	mov	w1, #0x2f                  	// #47
   3ff6c:	ldp	x29, x30, [sp], #96
   3ff70:	mov	x3, #0x0                   	// #0
   3ff74:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   3ff78:	stp	x29, x30, [sp, #-80]!
   3ff7c:	mov	x29, sp
   3ff80:	ldr	w3, [x0, #72]
   3ff84:	ldr	x2, [x0, #24]
   3ff88:	stp	x19, x20, [sp, #16]
   3ff8c:	add	w1, w3, #0x14
   3ff90:	str	w1, [x0, #72]
   3ff94:	mov	x19, x0
   3ff98:	ldrb	w1, [x2]
   3ff9c:	cmp	w1, #0x54
   3ffa0:	b.eq	401cc <__asan_cplus_demangle_type@@Base+0x2dfc>  // b.none
   3ffa4:	cmp	w1, #0x47
   3ffa8:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3ffac:	add	x1, x2, #0x1
   3ffb0:	str	x1, [x0, #24]
   3ffb4:	ldrb	w1, [x2, #1]
   3ffb8:	cbz	w1, 400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   3ffbc:	add	x1, x2, #0x2
   3ffc0:	str	x1, [x0, #24]
   3ffc4:	ldrb	w3, [x2, #1]
   3ffc8:	cmp	w3, #0x54
   3ffcc:	b.eq	40380 <__asan_cplus_demangle_type@@Base+0x2fb0>  // b.none
   3ffd0:	b.ls	400e4 <__asan_cplus_demangle_type@@Base+0x2d14>  // b.plast
   3ffd4:	cmp	w3, #0x56
   3ffd8:	b.eq	40360 <__asan_cplus_demangle_type@@Base+0x2f90>  // b.none
   3ffdc:	cmp	w3, #0x72
   3ffe0:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3ffe4:	ldrb	w5, [x2, #2]
   3ffe8:	mov	w9, #0x0                   	// #0
   3ffec:	cmp	w5, #0x6e
   3fff0:	b.eq	40530 <__asan_cplus_demangle_type@@Base+0x3160>  // b.none
   3fff4:	sub	w0, w5, #0x30
   3fff8:	and	w0, w0, #0xff
   3fffc:	cmp	w0, #0x9
   40000:	b.hi	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.pmore
   40004:	mov	w8, #0xcccd                	// #52429
   40008:	add	x1, x1, #0x1
   4000c:	mov	w0, #0x0                   	// #0
   40010:	mov	w7, #0x7fffffff            	// #2147483647
   40014:	movk	w8, #0xcccc, lsl #16
   40018:	b	40030 <__asan_cplus_demangle_type@@Base+0x2c60>
   4001c:	umull	x2, w2, w8
   40020:	add	x1, x1, #0x1
   40024:	lsr	x2, x2, #35
   40028:	cmp	w2, w0
   4002c:	b.lt	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.tstop
   40030:	str	x1, [x19, #24]
   40034:	add	w0, w0, w0, lsl #2
   40038:	ldrb	w4, [x1]
   4003c:	add	w6, w5, w0, lsl #1
   40040:	sub	w0, w6, #0x30
   40044:	sub	w3, w4, #0x30
   40048:	mov	w5, w4
   4004c:	sub	w2, w7, w3
   40050:	and	w3, w3, #0xff
   40054:	cmp	w3, #0x9
   40058:	b.ls	4001c <__asan_cplus_demangle_type@@Base+0x2c4c>  // b.plast
   4005c:	stp	x21, x22, [sp, #32]
   40060:	cmp	w9, #0x0
   40064:	ccmp	w0, #0x1, #0x4, eq  // eq = none
   40068:	stp	x23, x24, [sp, #48]
   4006c:	stp	x25, x26, [sp, #64]
   40070:	b.le	400c8 <__asan_cplus_demangle_type@@Base+0x2cf8>
   40074:	cbz	w4, 400c8 <__asan_cplus_demangle_type@@Base+0x2cf8>
   40078:	add	x8, x1, #0x1
   4007c:	str	x8, [x19, #24]
   40080:	ldrb	w0, [x1]
   40084:	cmp	w0, #0x5f
   40088:	b.ne	400c8 <__asan_cplus_demangle_type@@Base+0x2cf8>  // b.any
   4008c:	sub	w21, w6, #0x31
   40090:	mov	x26, #0x0                   	// #0
   40094:	mov	w23, #0x18                  	// #24
   40098:	mov	w24, #0x41                  	// #65
   4009c:	ldrb	w1, [x8]
   400a0:	cbz	w1, 400c8 <__asan_cplus_demangle_type@@Base+0x2cf8>
   400a4:	cmp	w1, #0x24
   400a8:	b.ne	40638 <__asan_cplus_demangle_type@@Base+0x3268>  // b.any
   400ac:	ldrb	w1, [x8, #1]
   400b0:	cmp	w1, #0x53
   400b4:	b.eq	406bc <__asan_cplus_demangle_type@@Base+0x32ec>  // b.none
   400b8:	cmp	w1, #0x5f
   400bc:	b.eq	405a8 <__asan_cplus_demangle_type@@Base+0x31d8>  // b.none
   400c0:	cmp	w1, #0x24
   400c4:	b.eq	405ac <__asan_cplus_demangle_type@@Base+0x31dc>  // b.none
   400c8:	ldp	x21, x22, [sp, #32]
   400cc:	ldp	x23, x24, [sp, #48]
   400d0:	ldp	x25, x26, [sp, #64]
   400d4:	mov	x0, #0x0                   	// #0
   400d8:	ldp	x19, x20, [sp, #16]
   400dc:	ldp	x29, x30, [sp], #80
   400e0:	ret
   400e4:	cmp	w3, #0x41
   400e8:	b.eq	403c4 <__asan_cplus_demangle_type@@Base+0x2ff4>  // b.none
   400ec:	cmp	w3, #0x52
   400f0:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   400f4:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   400f8:	mov	x2, x0
   400fc:	ldp	w1, w0, [x19, #40]
   40100:	cmp	w1, w0
   40104:	b.ge	4056c <__asan_cplus_demangle_type@@Base+0x319c>  // b.tcont
   40108:	ldp	x6, x0, [x19, #24]
   4010c:	mov	w3, #0x18                  	// #24
   40110:	add	w5, w1, #0x1
   40114:	mov	w4, #0x42                  	// #66
   40118:	smull	x1, w1, w3
   4011c:	add	x3, x0, x1
   40120:	str	wzr, [x3, #4]
   40124:	str	w5, [x19, #40]
   40128:	str	w4, [x0, x1]
   4012c:	ldrb	w1, [x6]
   40130:	cmp	w1, #0x6e
   40134:	b.eq	40544 <__asan_cplus_demangle_type@@Base+0x3174>  // b.none
   40138:	sub	w0, w1, #0x30
   4013c:	and	w0, w0, #0xff
   40140:	cmp	w0, #0x9
   40144:	b.hi	40808 <__asan_cplus_demangle_type@@Base+0x3438>  // b.pmore
   40148:	mov	w0, #0x0                   	// #0
   4014c:	mov	w9, #0xcccd                	// #52429
   40150:	mov	w7, w1
   40154:	add	x6, x6, #0x1
   40158:	mov	w1, #0x0                   	// #0
   4015c:	mov	w8, #0x7fffffff            	// #2147483647
   40160:	movk	w9, #0xcccc, lsl #16
   40164:	b	40178 <__asan_cplus_demangle_type@@Base+0x2da8>
   40168:	umull	x4, w4, w9
   4016c:	lsr	x4, x4, #35
   40170:	cmp	w4, w1
   40174:	b.lt	406b4 <__asan_cplus_demangle_type@@Base+0x32e4>  // b.tstop
   40178:	str	x6, [x19, #24]
   4017c:	add	w1, w1, w1, lsl #2
   40180:	add	x6, x6, #0x1
   40184:	ldurb	w4, [x6, #-1]
   40188:	add	w1, w7, w1, lsl #1
   4018c:	sub	w1, w1, #0x30
   40190:	sub	w5, w4, #0x30
   40194:	mov	w7, w4
   40198:	sub	w4, w8, w5
   4019c:	and	w5, w5, #0xff
   401a0:	cmp	w5, #0x9
   401a4:	b.ls	40168 <__asan_cplus_demangle_type@@Base+0x2d98>  // b.plast
   401a8:	cbz	w0, 401b0 <__asan_cplus_demangle_type@@Base+0x2de0>
   401ac:	neg	w1, w1
   401b0:	sxtw	x1, w1
   401b4:	str	x1, [x3, #8]
   401b8:	mov	x0, x19
   401bc:	mov	w1, #0x16                  	// #22
   401c0:	ldp	x19, x20, [sp, #16]
   401c4:	ldp	x29, x30, [sp], #80
   401c8:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   401cc:	add	x1, x2, #0x1
   401d0:	str	x1, [x0, #24]
   401d4:	ldrb	w1, [x2, #1]
   401d8:	cbz	w1, 400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   401dc:	add	x1, x2, #0x2
   401e0:	str	x1, [x0, #24]
   401e4:	ldrb	w1, [x2, #1]
   401e8:	cmp	w1, #0x53
   401ec:	b.eq	40750 <__asan_cplus_demangle_type@@Base+0x3380>  // b.none
   401f0:	b.ls	40240 <__asan_cplus_demangle_type@@Base+0x2e70>  // b.plast
   401f4:	cmp	w1, #0x63
   401f8:	b.eq	4070c <__asan_cplus_demangle_type@@Base+0x333c>  // b.none
   401fc:	b.ls	402ac <__asan_cplus_demangle_type@@Base+0x2edc>  // b.plast
   40200:	cmp	w1, #0x68
   40204:	b.eq	40408 <__asan_cplus_demangle_type@@Base+0x3038>  // b.none
   40208:	cmp	w1, #0x76
   4020c:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   40210:	bl	344c0 <__asan_backtrace_create_state@@Base+0x8d8>
   40214:	cbz	w0, 400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   40218:	mov	x0, x19
   4021c:	mov	w1, #0x0                   	// #0
   40220:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   40224:	mov	x2, x0
   40228:	mov	x0, x19
   4022c:	mov	x3, #0x0                   	// #0
   40230:	ldp	x19, x20, [sp, #16]
   40234:	mov	w1, #0x10                  	// #16
   40238:	ldp	x29, x30, [sp], #80
   4023c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40240:	cmp	w1, #0x48
   40244:	b.eq	40770 <__asan_cplus_demangle_type@@Base+0x33a0>  // b.none
   40248:	b.ls	4027c <__asan_cplus_demangle_type@@Base+0x2eac>  // b.plast
   4024c:	cmp	w1, #0x49
   40250:	b.eq	403e8 <__asan_cplus_demangle_type@@Base+0x3018>  // b.none
   40254:	cmp	w1, #0x4a
   40258:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   4025c:	bl	6750 <__asan_cplus_demangle_type@plt>
   40260:	mov	x2, x0
   40264:	mov	x0, x19
   40268:	mov	x3, #0x0                   	// #0
   4026c:	ldp	x19, x20, [sp, #16]
   40270:	mov	w1, #0x12                  	// #18
   40274:	ldp	x29, x30, [sp], #80
   40278:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   4027c:	cmp	w1, #0x43
   40280:	b.eq	40460 <__asan_cplus_demangle_type@@Base+0x3090>  // b.none
   40284:	cmp	w1, #0x46
   40288:	b.ne	402dc <__asan_cplus_demangle_type@@Base+0x2f0c>  // b.any
   4028c:	bl	6750 <__asan_cplus_demangle_type@plt>
   40290:	mov	x2, x0
   40294:	mov	x0, x19
   40298:	mov	x3, #0x0                   	// #0
   4029c:	ldp	x19, x20, [sp, #16]
   402a0:	mov	w1, #0xe                   	// #14
   402a4:	ldp	x29, x30, [sp], #80
   402a8:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   402ac:	cmp	w1, #0x56
   402b0:	b.eq	40438 <__asan_cplus_demangle_type@@Base+0x3068>  // b.none
   402b4:	cmp	w1, #0x57
   402b8:	b.ne	40330 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   402bc:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   402c0:	mov	x2, x0
   402c4:	mov	x0, x19
   402c8:	mov	x3, #0x0                   	// #0
   402cc:	ldp	x19, x20, [sp, #16]
   402d0:	mov	w1, #0x15                  	// #21
   402d4:	ldp	x29, x30, [sp], #80
   402d8:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   402dc:	cmp	w1, #0x41
   402e0:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   402e4:	ldrb	w0, [x2, #2]
   402e8:	cmp	w0, #0x4c
   402ec:	b.eq	40598 <__asan_cplus_demangle_type@@Base+0x31c8>  // b.none
   402f0:	b.hi	406c4 <__asan_cplus_demangle_type@@Base+0x32f4>  // b.pmore
   402f4:	sub	w0, w0, #0x49
   402f8:	and	w0, w0, #0xff
   402fc:	cmp	w0, #0x1
   40300:	b.hi	407f8 <__asan_cplus_demangle_type@@Base+0x3428>  // b.pmore
   40304:	add	x2, x2, #0x3
   40308:	str	x2, [x19, #24]
   4030c:	mov	x0, x19
   40310:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   40314:	mov	x2, x0
   40318:	mov	x0, x19
   4031c:	mov	x3, #0x0                   	// #0
   40320:	ldp	x19, x20, [sp, #16]
   40324:	mov	w1, #0x30                  	// #48
   40328:	ldp	x29, x30, [sp], #80
   4032c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40330:	cmp	w1, #0x54
   40334:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   40338:	add	w3, w3, #0xa
   4033c:	str	w3, [x0, #72]
   40340:	bl	6750 <__asan_cplus_demangle_type@plt>
   40344:	mov	x2, x0
   40348:	mov	x0, x19
   4034c:	mov	x3, #0x0                   	// #0
   40350:	ldp	x19, x20, [sp, #16]
   40354:	mov	w1, #0xa                   	// #10
   40358:	ldp	x29, x30, [sp], #80
   4035c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40360:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   40364:	mov	x2, x0
   40368:	mov	x0, x19
   4036c:	mov	x3, #0x0                   	// #0
   40370:	ldp	x19, x20, [sp, #16]
   40374:	mov	w1, #0x13                  	// #19
   40378:	ldp	x29, x30, [sp], #80
   4037c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40380:	ldrb	w1, [x2, #2]
   40384:	cbz	w1, 4039c <__asan_cplus_demangle_type@@Base+0x2fcc>
   40388:	add	x1, x2, #0x3
   4038c:	str	x1, [x0, #24]
   40390:	ldrb	w1, [x2, #2]
   40394:	cmp	w1, #0x6e
   40398:	b.eq	40574 <__asan_cplus_demangle_type@@Base+0x31a4>  // b.none
   4039c:	mov	x0, x19
   403a0:	mov	w1, #0x0                   	// #0
   403a4:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   403a8:	mov	x2, x0
   403ac:	mov	x0, x19
   403b0:	mov	x3, #0x0                   	// #0
   403b4:	ldp	x19, x20, [sp, #16]
   403b8:	mov	w1, #0x49                  	// #73
   403bc:	ldp	x29, x30, [sp], #80
   403c0:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   403c4:	mov	w1, #0x0                   	// #0
   403c8:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   403cc:	mov	x2, x0
   403d0:	mov	x0, x19
   403d4:	ldp	x19, x20, [sp, #16]
   403d8:	mov	x3, #0x0                   	// #0
   403dc:	ldp	x29, x30, [sp], #80
   403e0:	mov	w1, #0x17                  	// #23
   403e4:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   403e8:	bl	6750 <__asan_cplus_demangle_type@plt>
   403ec:	mov	x2, x0
   403f0:	mov	x0, x19
   403f4:	mov	x3, #0x0                   	// #0
   403f8:	ldp	x19, x20, [sp, #16]
   403fc:	mov	w1, #0xc                   	// #12
   40400:	ldp	x29, x30, [sp], #80
   40404:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40408:	bl	344c0 <__asan_backtrace_create_state@@Base+0x8d8>
   4040c:	cbz	w0, 400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   40410:	mov	x0, x19
   40414:	mov	w1, #0x0                   	// #0
   40418:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   4041c:	mov	x2, x0
   40420:	mov	x0, x19
   40424:	mov	x3, #0x0                   	// #0
   40428:	ldp	x19, x20, [sp, #16]
   4042c:	mov	w1, #0xf                   	// #15
   40430:	ldp	x29, x30, [sp], #80
   40434:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40438:	add	w3, w3, #0xf
   4043c:	str	w3, [x0, #72]
   40440:	bl	6750 <__asan_cplus_demangle_type@plt>
   40444:	mov	x2, x0
   40448:	mov	x0, x19
   4044c:	mov	x3, #0x0                   	// #0
   40450:	ldp	x19, x20, [sp, #16]
   40454:	mov	w1, #0x9                   	// #9
   40458:	ldp	x29, x30, [sp], #80
   4045c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40460:	bl	6750 <__asan_cplus_demangle_type@plt>
   40464:	mov	x20, x0
   40468:	ldr	x8, [x19, #24]
   4046c:	ldrb	w6, [x8]
   40470:	cmp	w6, #0x6e
   40474:	b.eq	407d0 <__asan_cplus_demangle_type@@Base+0x3400>  // b.none
   40478:	sub	w0, w6, #0x30
   4047c:	and	w0, w0, #0xff
   40480:	cmp	w0, #0x9
   40484:	b.hi	404f0 <__asan_cplus_demangle_type@@Base+0x3120>  // b.pmore
   40488:	mov	w0, #0x0                   	// #0
   4048c:	mov	w10, #0xcccd                	// #52429
   40490:	add	x4, x8, #0x1
   40494:	mov	w1, #0x0                   	// #0
   40498:	mov	w9, #0x7fffffff            	// #2147483647
   4049c:	movk	w10, #0xcccc, lsl #16
   404a0:	b	404b4 <__asan_cplus_demangle_type@@Base+0x30e4>
   404a4:	umull	x2, w2, w10
   404a8:	lsr	x2, x2, #35
   404ac:	cmp	w2, w1
   404b0:	b.lt	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.tstop
   404b4:	add	w1, w1, w1, lsl #2
   404b8:	str	x4, [x19, #24]
   404bc:	mov	x8, x4
   404c0:	add	x4, x4, #0x1
   404c4:	add	w7, w6, w1, lsl #1
   404c8:	ldurb	w6, [x4, #-1]
   404cc:	sub	w1, w7, #0x30
   404d0:	sub	w5, w6, #0x30
   404d4:	sub	w2, w9, w5
   404d8:	and	w5, w5, #0xff
   404dc:	cmp	w5, #0x9
   404e0:	b.ls	404a4 <__asan_cplus_demangle_type@@Base+0x30d4>  // b.plast
   404e4:	cbz	w0, 404f0 <__asan_cplus_demangle_type@@Base+0x3120>
   404e8:	cmp	w7, #0x30
   404ec:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   404f0:	cmp	w6, #0x5f
   404f4:	b.ne	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   404f8:	add	x8, x8, #0x1
   404fc:	str	x8, [x19, #24]
   40500:	mov	x0, x19
   40504:	bl	6750 <__asan_cplus_demangle_type@plt>
   40508:	mov	x2, x0
   4050c:	ldr	w1, [x19, #72]
   40510:	mov	x3, x20
   40514:	mov	x0, x19
   40518:	add	w1, w1, #0x5
   4051c:	str	w1, [x19, #72]
   40520:	ldp	x19, x20, [sp, #16]
   40524:	mov	w1, #0xb                   	// #11
   40528:	ldp	x29, x30, [sp], #80
   4052c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40530:	add	x1, x2, #0x3
   40534:	str	x1, [x0, #24]
   40538:	mov	w9, #0x1                   	// #1
   4053c:	ldrb	w5, [x2, #3]
   40540:	b	3fff4 <__asan_cplus_demangle_type@@Base+0x2c24>
   40544:	add	x4, x6, #0x1
   40548:	str	x4, [x19, #24]
   4054c:	ldrb	w1, [x6, #1]
   40550:	sub	w0, w1, #0x30
   40554:	and	w0, w0, #0xff
   40558:	cmp	w0, #0x9
   4055c:	b.hi	40818 <__asan_cplus_demangle_type@@Base+0x3448>  // b.pmore
   40560:	mov	x6, x4
   40564:	mov	w0, #0x1                   	// #1
   40568:	b	4014c <__asan_cplus_demangle_type@@Base+0x2d7c>
   4056c:	mov	x3, #0x0                   	// #0
   40570:	b	401b8 <__asan_cplus_demangle_type@@Base+0x2de8>
   40574:	mov	w1, #0x0                   	// #0
   40578:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   4057c:	mov	x2, x0
   40580:	mov	x0, x19
   40584:	ldp	x19, x20, [sp, #16]
   40588:	mov	x3, #0x0                   	// #0
   4058c:	ldp	x29, x30, [sp], #80
   40590:	mov	w1, #0x4a                  	// #74
   40594:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40598:	mov	x0, x19
   4059c:	bl	41488 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   405a0:	mov	x2, x0
   405a4:	b	40318 <__asan_cplus_demangle_type@@Base+0x2f48>
   405a8:	mov	w1, #0x2e                  	// #46
   405ac:	ldp	w2, w0, [x19, #40]
   405b0:	ldr	x8, [x19, #24]
   405b4:	cmp	w2, w0
   405b8:	add	x8, x8, #0x2
   405bc:	b.ge	40790 <__asan_cplus_demangle_type@@Base+0x33c0>  // b.tcont
   405c0:	ldr	x4, [x19, #32]
   405c4:	smull	x3, w2, w23
   405c8:	add	w2, w2, #0x1
   405cc:	sub	w21, w21, #0x2
   405d0:	add	x22, x4, x3
   405d4:	str	wzr, [x22, #4]
   405d8:	str	w2, [x19, #40]
   405dc:	str	w24, [x4, x3]
   405e0:	str	w1, [x22, #8]
   405e4:	str	x8, [x19, #24]
   405e8:	cbz	x26, 406ac <__asan_cplus_demangle_type@@Base+0x32dc>
   405ec:	mov	x2, x26
   405f0:	mov	x3, x22
   405f4:	mov	x0, x19
   405f8:	mov	w1, #0x40                  	// #64
   405fc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40600:	mov	x26, x0
   40604:	cbz	x0, 400c8 <__asan_cplus_demangle_type@@Base+0x2cf8>
   40608:	cmp	w21, #0x0
   4060c:	b.gt	4009c <__asan_cplus_demangle_type@@Base+0x2ccc>
   40610:	mov	x2, x26
   40614:	mov	x0, x19
   40618:	ldp	x19, x20, [sp, #16]
   4061c:	mov	x3, #0x0                   	// #0
   40620:	ldp	x21, x22, [sp, #32]
   40624:	mov	w1, #0x3f                  	// #63
   40628:	ldp	x23, x24, [sp, #48]
   4062c:	ldp	x25, x26, [sp, #64]
   40630:	ldp	x29, x30, [sp], #80
   40634:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40638:	mov	x20, #0x1                   	// #1
   4063c:	b	40644 <__asan_cplus_demangle_type@@Base+0x3274>
   40640:	mov	x20, x3
   40644:	cmp	w21, w20
   40648:	mov	w25, w20
   4064c:	b.le	40664 <__asan_cplus_demangle_type@@Base+0x3294>
   40650:	ldrb	w1, [x8, x20]
   40654:	add	x3, x20, #0x1
   40658:	cmp	w1, #0x24
   4065c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   40660:	b.ne	40640 <__asan_cplus_demangle_type@@Base+0x3270>  // b.any
   40664:	ldp	w22, w0, [x19, #40]
   40668:	cmp	w22, w0
   4066c:	b.ge	407a4 <__asan_cplus_demangle_type@@Base+0x33d4>  // b.tcont
   40670:	ldr	x0, [x19, #32]
   40674:	add	w3, w22, #0x1
   40678:	mov	x1, x8
   4067c:	mov	w2, w25
   40680:	smaddl	x22, w22, w23, x0
   40684:	mov	x0, x22
   40688:	str	wzr, [x22, #4]
   4068c:	str	w3, [x19, #40]
   40690:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   40694:	cbz	w0, 407b4 <__asan_cplus_demangle_type@@Base+0x33e4>
   40698:	ldr	x8, [x19, #24]
   4069c:	sub	w21, w21, w25
   406a0:	add	x8, x8, x20
   406a4:	str	x8, [x19, #24]
   406a8:	b	405e8 <__asan_cplus_demangle_type@@Base+0x3218>
   406ac:	mov	x26, x22
   406b0:	b	40608 <__asan_cplus_demangle_type@@Base+0x3238>
   406b4:	mov	x1, #0xffffffffffffffff    	// #-1
   406b8:	b	401b4 <__asan_cplus_demangle_type@@Base+0x2de4>
   406bc:	mov	w1, #0x2f                  	// #47
   406c0:	b	405ac <__asan_cplus_demangle_type@@Base+0x31dc>
   406c4:	cmp	w0, #0x58
   406c8:	b.ne	407f8 <__asan_cplus_demangle_type@@Base+0x3428>  // b.any
   406cc:	add	x2, x2, #0x3
   406d0:	ldr	w20, [x19, #76]
   406d4:	mov	w1, #0x1                   	// #1
   406d8:	str	x2, [x19, #24]
   406dc:	str	w1, [x19, #76]
   406e0:	mov	x0, x19
   406e4:	bl	3f3b0 <__asan_cplus_demangle_type@@Base+0x1fe0>
   406e8:	str	w20, [x19, #76]
   406ec:	ldr	x1, [x19, #24]
   406f0:	mov	x2, x0
   406f4:	ldrb	w0, [x1]
   406f8:	cmp	w0, #0x45
   406fc:	b.ne	40810 <__asan_cplus_demangle_type@@Base+0x3440>  // b.any
   40700:	add	x1, x1, #0x1
   40704:	str	x1, [x19, #24]
   40708:	b	40318 <__asan_cplus_demangle_type@@Base+0x2f48>
   4070c:	mov	w1, #0x0                   	// #0
   40710:	bl	344c0 <__asan_backtrace_create_state@@Base+0x8d8>
   40714:	cbz	w0, 400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   40718:	mov	x0, x19
   4071c:	mov	w1, #0x0                   	// #0
   40720:	bl	344c0 <__asan_backtrace_create_state@@Base+0x8d8>
   40724:	cbz	w0, 400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   40728:	mov	x0, x19
   4072c:	mov	w1, #0x0                   	// #0
   40730:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   40734:	mov	x2, x0
   40738:	mov	x0, x19
   4073c:	mov	x3, #0x0                   	// #0
   40740:	ldp	x19, x20, [sp, #16]
   40744:	mov	w1, #0x11                  	// #17
   40748:	ldp	x29, x30, [sp], #80
   4074c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40750:	bl	6750 <__asan_cplus_demangle_type@plt>
   40754:	mov	x2, x0
   40758:	mov	x0, x19
   4075c:	mov	x3, #0x0                   	// #0
   40760:	ldp	x19, x20, [sp, #16]
   40764:	mov	w1, #0xd                   	// #13
   40768:	ldp	x29, x30, [sp], #80
   4076c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40770:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   40774:	mov	x2, x0
   40778:	mov	x0, x19
   4077c:	mov	x3, #0x0                   	// #0
   40780:	ldp	x19, x20, [sp, #16]
   40784:	mov	w1, #0x14                  	// #20
   40788:	ldp	x29, x30, [sp], #80
   4078c:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40790:	ldp	x21, x22, [sp, #32]
   40794:	ldp	x23, x24, [sp, #48]
   40798:	ldp	x25, x26, [sp, #64]
   4079c:	str	x8, [x19, #24]
   407a0:	b	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   407a4:	mov	w2, w25
   407a8:	mov	x1, x8
   407ac:	mov	x0, #0x0                   	// #0
   407b0:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   407b4:	ldr	x0, [x19, #24]
   407b8:	ldp	x21, x22, [sp, #32]
   407bc:	add	x20, x0, x20
   407c0:	ldp	x23, x24, [sp, #48]
   407c4:	ldp	x25, x26, [sp, #64]
   407c8:	str	x20, [x19, #24]
   407cc:	b	400d4 <__asan_cplus_demangle_type@@Base+0x2d04>
   407d0:	add	x1, x8, #0x1
   407d4:	str	x1, [x19, #24]
   407d8:	ldrb	w6, [x8, #1]
   407dc:	mov	x8, x1
   407e0:	sub	w0, w6, #0x30
   407e4:	and	w0, w0, #0xff
   407e8:	cmp	w0, #0x9
   407ec:	b.hi	404f0 <__asan_cplus_demangle_type@@Base+0x3120>  // b.pmore
   407f0:	mov	w0, #0x1                   	// #1
   407f4:	b	4048c <__asan_cplus_demangle_type@@Base+0x30bc>
   407f8:	mov	x0, x19
   407fc:	bl	6750 <__asan_cplus_demangle_type@plt>
   40800:	mov	x2, x0
   40804:	b	40318 <__asan_cplus_demangle_type@@Base+0x2f48>
   40808:	mov	x1, #0x0                   	// #0
   4080c:	b	401b4 <__asan_cplus_demangle_type@@Base+0x2de4>
   40810:	mov	x2, #0x0                   	// #0
   40814:	b	40318 <__asan_cplus_demangle_type@@Base+0x2f48>
   40818:	mov	w1, #0x0                   	// #0
   4081c:	neg	w1, w1
   40820:	b	401b0 <__asan_cplus_demangle_type@@Base+0x2de0>
   40824:	nop
   40828:	ldr	x2, [x0, #24]
   4082c:	mov	w3, #0x54                  	// #84
   40830:	ldrb	w2, [x2]
   40834:	cmp	w2, #0x47
   40838:	ccmp	w2, w3, #0x4, ne  // ne = any
   4083c:	b.ne	40844 <__asan_cplus_demangle_type@@Base+0x3474>  // b.any
   40840:	b	3ff78 <__asan_cplus_demangle_type@@Base+0x2ba8>
   40844:	stp	x29, x30, [sp, #-48]!
   40848:	mov	x29, sp
   4084c:	stp	x19, x20, [sp, #16]
   40850:	mov	x19, x0
   40854:	mov	w20, w1
   40858:	stp	x21, x22, [sp, #32]
   4085c:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   40860:	mov	x21, x0
   40864:	cbz	x0, 40920 <__asan_cplus_demangle_type@@Base+0x3550>
   40868:	cbz	w20, 408b8 <__asan_cplus_demangle_type@@Base+0x34e8>
   4086c:	ldr	w0, [x19, #16]
   40870:	tbnz	w0, #0, 408b8 <__asan_cplus_demangle_type@@Base+0x34e8>
   40874:	mov	x0, #0x1f                  	// #31
   40878:	mov	x2, #0x1                   	// #1
   4087c:	movk	x0, #0x1a, lsl #48
   40880:	ldr	w3, [x21]
   40884:	sub	w1, w3, #0x1c
   40888:	cmp	w1, #0x34
   4088c:	b.hi	4089c <__asan_cplus_demangle_type@@Base+0x34cc>  // b.pmore
   40890:	lsl	x1, x2, x1
   40894:	tst	x1, x0
   40898:	b.ne	409d0 <__asan_cplus_demangle_type@@Base+0x3600>  // b.any
   4089c:	cmp	w3, #0x2
   408a0:	b.eq	409d8 <__asan_cplus_demangle_type@@Base+0x3608>  // b.none
   408a4:	mov	x0, x21
   408a8:	ldp	x19, x20, [sp, #16]
   408ac:	ldp	x21, x22, [sp, #32]
   408b0:	ldp	x29, x30, [sp], #48
   408b4:	ret
   408b8:	ldr	x5, [x19, #24]
   408bc:	ldrb	w1, [x5]
   408c0:	cmp	w1, #0x45
   408c4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   408c8:	b.eq	408a4 <__asan_cplus_demangle_type@@Base+0x34d4>  // b.none
   408cc:	mov	x0, #0x1f                  	// #31
   408d0:	mov	x22, x21
   408d4:	mov	x2, #0x1                   	// #1
   408d8:	movk	x0, #0x1a, lsl #48
   408dc:	ldr	w4, [x22]
   408e0:	cmp	w4, #0x4
   408e4:	b.eq	40a20 <__asan_cplus_demangle_type@@Base+0x3650>  // b.none
   408e8:	sub	w3, w4, #0x1c
   408ec:	b.hi	409b0 <__asan_cplus_demangle_type@@Base+0x35e0>  // b.pmore
   408f0:	cmp	w4, #0x2
   408f4:	b.ne	40940 <__asan_cplus_demangle_type@@Base+0x3570>  // b.any
   408f8:	ldr	x22, [x22, #16]
   408fc:	cbnz	x22, 408dc <__asan_cplus_demangle_type@@Base+0x350c>
   40900:	cmp	w1, #0x4a
   40904:	b.ne	4094c <__asan_cplus_demangle_type@@Base+0x357c>  // b.any
   40908:	add	x5, x5, #0x1
   4090c:	str	x5, [x19, #24]
   40910:	mov	x0, x19
   40914:	bl	6750 <__asan_cplus_demangle_type@plt>
   40918:	mov	x22, x0
   4091c:	cbnz	x0, 4094c <__asan_cplus_demangle_type@@Base+0x357c>
   40920:	mov	x21, #0x0                   	// #0
   40924:	mov	x0, x21
   40928:	ldp	x19, x20, [sp, #16]
   4092c:	ldp	x21, x22, [sp, #32]
   40930:	ldp	x29, x30, [sp], #48
   40934:	ret
   40938:	cmp	w0, #0x35
   4093c:	b.ne	40a50 <__asan_cplus_demangle_type@@Base+0x3680>  // b.any
   40940:	cmp	w1, #0x4a
   40944:	mov	x22, #0x0                   	// #0
   40948:	b.eq	40908 <__asan_cplus_demangle_type@@Base+0x3538>  // b.none
   4094c:	mov	x0, x19
   40950:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0xe08>
   40954:	mov	x3, x0
   40958:	cbz	x0, 40920 <__asan_cplus_demangle_type@@Base+0x3550>
   4095c:	mov	x2, x22
   40960:	mov	x0, x19
   40964:	mov	w1, #0x29                  	// #41
   40968:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   4096c:	mov	x3, x0
   40970:	cbz	x0, 40920 <__asan_cplus_demangle_type@@Base+0x3550>
   40974:	cbnz	w20, 40994 <__asan_cplus_demangle_type@@Base+0x35c4>
   40978:	ldr	w0, [x21]
   4097c:	cmp	w0, #0x2
   40980:	b.ne	40994 <__asan_cplus_demangle_type@@Base+0x35c4>  // b.any
   40984:	ldr	w0, [x3]
   40988:	cmp	w0, #0x29
   4098c:	b.ne	40994 <__asan_cplus_demangle_type@@Base+0x35c4>  // b.any
   40990:	str	xzr, [x3, #8]
   40994:	mov	x2, x21
   40998:	mov	x0, x19
   4099c:	ldp	x19, x20, [sp, #16]
   409a0:	mov	w1, #0x3                   	// #3
   409a4:	ldp	x21, x22, [sp, #32]
   409a8:	ldp	x29, x30, [sp], #48
   409ac:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   409b0:	cmp	w3, #0x34
   409b4:	b.hi	40940 <__asan_cplus_demangle_type@@Base+0x3570>  // b.pmore
   409b8:	lsl	x3, x2, x3
   409bc:	tst	x3, x0
   409c0:	b.eq	40940 <__asan_cplus_demangle_type@@Base+0x3570>  // b.none
   409c4:	ldr	x22, [x22, #8]
   409c8:	cbnz	x22, 408dc <__asan_cplus_demangle_type@@Base+0x350c>
   409cc:	b	40900 <__asan_cplus_demangle_type@@Base+0x3530>
   409d0:	ldr	x21, [x21, #8]
   409d4:	b	40880 <__asan_cplus_demangle_type@@Base+0x34b0>
   409d8:	ldr	x3, [x21, #16]
   409dc:	mov	x0, #0x1f                  	// #31
   409e0:	mov	x2, #0x1                   	// #1
   409e4:	movk	x0, #0x1a, lsl #48
   409e8:	ldr	w1, [x3]
   409ec:	sub	w1, w1, #0x1c
   409f0:	cmp	w1, #0x34
   409f4:	b.hi	408a4 <__asan_cplus_demangle_type@@Base+0x34d4>  // b.pmore
   409f8:	lsl	x1, x2, x1
   409fc:	tst	x1, x0
   40a00:	b.eq	408a4 <__asan_cplus_demangle_type@@Base+0x34d4>  // b.none
   40a04:	ldr	x3, [x3, #8]
   40a08:	str	x3, [x21, #16]
   40a0c:	ldr	w1, [x3]
   40a10:	sub	w1, w1, #0x1c
   40a14:	cmp	w1, #0x34
   40a18:	b.ls	409f8 <__asan_cplus_demangle_type@@Base+0x3628>  // b.plast
   40a1c:	b	408a4 <__asan_cplus_demangle_type@@Base+0x34d4>
   40a20:	ldr	x2, [x22, #8]
   40a24:	cbz	x2, 40a50 <__asan_cplus_demangle_type@@Base+0x3680>
   40a28:	ldr	w0, [x2]
   40a2c:	sub	w3, w0, #0x1
   40a30:	cmp	w0, #0x8
   40a34:	b.hi	40938 <__asan_cplus_demangle_type@@Base+0x3568>  // b.pmore
   40a38:	cmp	w0, #0x6
   40a3c:	b.hi	40940 <__asan_cplus_demangle_type@@Base+0x3570>  // b.pmore
   40a40:	cmp	w3, #0x1
   40a44:	b.hi	40a50 <__asan_cplus_demangle_type@@Base+0x3680>  // b.pmore
   40a48:	ldr	x2, [x2, #16]
   40a4c:	cbnz	x2, 40a28 <__asan_cplus_demangle_type@@Base+0x3658>
   40a50:	cmp	w1, #0x4a
   40a54:	b.ne	40910 <__asan_cplus_demangle_type@@Base+0x3540>  // b.any
   40a58:	b	40908 <__asan_cplus_demangle_type@@Base+0x3538>
   40a5c:	nop
   40a60:	stp	x29, x30, [sp, #-96]!
   40a64:	mov	x29, sp
   40a68:	ldr	x2, [x0, #24]
   40a6c:	stp	x19, x20, [sp, #16]
   40a70:	ldrb	w1, [x2]
   40a74:	cmp	w1, #0x55
   40a78:	b.eq	40c70 <__asan_cplus_demangle_type@@Base+0x38a0>  // b.none
   40a7c:	mov	x19, x0
   40a80:	b.hi	40acc <__asan_cplus_demangle_type@@Base+0x36fc>  // b.pmore
   40a84:	cmp	w1, #0x4e
   40a88:	b.eq	40ce0 <__asan_cplus_demangle_type@@Base+0x3910>  // b.none
   40a8c:	cmp	w1, #0x53
   40a90:	b.ne	40c88 <__asan_cplus_demangle_type@@Base+0x38b8>  // b.any
   40a94:	ldrb	w1, [x2, #1]
   40a98:	cmp	w1, #0x74
   40a9c:	b.eq	40b68 <__asan_cplus_demangle_type@@Base+0x3798>  // b.none
   40aa0:	mov	w1, #0x0                   	// #0
   40aa4:	bl	3d000 <__asan_cplus_demangle_fill_name@@Base+0x240>
   40aa8:	ldr	x1, [x19, #24]
   40aac:	mov	x20, x0
   40ab0:	ldrb	w0, [x1]
   40ab4:	cmp	w0, #0x49
   40ab8:	b.eq	40c28 <__asan_cplus_demangle_type@@Base+0x3858>  // b.none
   40abc:	mov	x0, x20
   40ac0:	ldp	x19, x20, [sp, #16]
   40ac4:	ldp	x29, x30, [sp], #96
   40ac8:	ret
   40acc:	cmp	w1, #0x5a
   40ad0:	b.ne	40c88 <__asan_cplus_demangle_type@@Base+0x38b8>  // b.any
   40ad4:	add	x2, x2, #0x1
   40ad8:	str	x2, [x0, #24]
   40adc:	mov	w1, #0x0                   	// #0
   40ae0:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   40ae4:	mov	x20, x0
   40ae8:	cbz	x0, 40c68 <__asan_cplus_demangle_type@@Base+0x3898>
   40aec:	ldr	x0, [x19, #24]
   40af0:	ldrb	w1, [x0]
   40af4:	cmp	w1, #0x45
   40af8:	b.ne	40c68 <__asan_cplus_demangle_type@@Base+0x3898>  // b.any
   40afc:	stp	x21, x22, [sp, #32]
   40b00:	add	x1, x0, #0x1
   40b04:	str	x1, [x19, #24]
   40b08:	ldrb	w1, [x0, #1]
   40b0c:	cmp	w1, #0x73
   40b10:	b.eq	40fdc <__asan_cplus_demangle_type@@Base+0x3c0c>  // b.none
   40b14:	cmp	w1, #0x64
   40b18:	b.eq	40ebc <__asan_cplus_demangle_type@@Base+0x3aec>  // b.none
   40b1c:	mov	x0, x19
   40b20:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   40b24:	mov	x21, x0
   40b28:	cbz	x0, 40b3c <__asan_cplus_demangle_type@@Base+0x376c>
   40b2c:	ldr	w0, [x0]
   40b30:	sub	w0, w0, #0x46
   40b34:	tst	w0, #0xfffffffd
   40b38:	b.ne	40c54 <__asan_cplus_demangle_type@@Base+0x3884>  // b.any
   40b3c:	ldr	w0, [x20]
   40b40:	cmp	w0, #0x3
   40b44:	b.eq	40fa4 <__asan_cplus_demangle_type@@Base+0x3bd4>  // b.none
   40b48:	mov	x3, x21
   40b4c:	mov	x2, x20
   40b50:	mov	x0, x19
   40b54:	mov	w1, #0x2                   	// #2
   40b58:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40b5c:	mov	x20, x0
   40b60:	ldp	x21, x22, [sp, #32]
   40b64:	b	40abc <__asan_cplus_demangle_type@@Base+0x36ec>
   40b68:	ldp	w20, w0, [x0, #40]
   40b6c:	add	x2, x2, #0x2
   40b70:	str	x2, [x19, #24]
   40b74:	cmp	w20, w0
   40b78:	b.ge	41034 <__asan_cplus_demangle_type@@Base+0x3c64>  // b.tcont
   40b7c:	ldr	x1, [x19, #32]
   40b80:	mov	w2, #0x18                  	// #24
   40b84:	add	w0, w20, #0x1
   40b88:	smaddl	x20, w20, w2, x1
   40b8c:	str	wzr, [x20, #4]
   40b90:	str	w0, [x19, #40]
   40b94:	mov	w2, #0x3                   	// #3
   40b98:	mov	x0, x20
   40b9c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   40ba0:	add	x1, x1, #0x118
   40ba4:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   40ba8:	cmp	w0, #0x0
   40bac:	csel	x20, x20, xzr, ne  // ne = any
   40bb0:	mov	x0, x19
   40bb4:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   40bb8:	mov	x3, x0
   40bbc:	mov	x2, x20
   40bc0:	mov	w1, #0x1                   	// #1
   40bc4:	mov	x0, x19
   40bc8:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40bcc:	mov	x20, x0
   40bd0:	ldr	w0, [x19, #72]
   40bd4:	ldr	x1, [x19, #24]
   40bd8:	add	w0, w0, #0x3
   40bdc:	str	w0, [x19, #72]
   40be0:	ldrb	w0, [x1]
   40be4:	cmp	w0, #0x49
   40be8:	b.ne	40abc <__asan_cplus_demangle_type@@Base+0x36ec>  // b.any
   40bec:	cbz	x20, 40c68 <__asan_cplus_demangle_type@@Base+0x3898>
   40bf0:	ldp	w0, w2, [x19, #56]
   40bf4:	cmp	w0, w2
   40bf8:	b.ge	40c68 <__asan_cplus_demangle_type@@Base+0x3898>  // b.tcont
   40bfc:	ldr	x4, [x19, #48]
   40c00:	add	w2, w0, #0x1
   40c04:	mov	x3, #0x0                   	// #0
   40c08:	str	x20, [x4, w0, sxtw #3]
   40c0c:	str	w2, [x19, #56]
   40c10:	ldrb	w0, [x1]
   40c14:	sub	w0, w0, #0x49
   40c18:	and	w0, w0, #0xff
   40c1c:	cmp	w0, #0x1
   40c20:	b.hi	40c3c <__asan_cplus_demangle_type@@Base+0x386c>  // b.pmore
   40c24:	nop
   40c28:	add	x1, x1, #0x1
   40c2c:	str	x1, [x19, #24]
   40c30:	mov	x0, x19
   40c34:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   40c38:	mov	x3, x0
   40c3c:	mov	x2, x20
   40c40:	mov	x0, x19
   40c44:	mov	w1, #0x4                   	// #4
   40c48:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40c4c:	mov	x20, x0
   40c50:	b	40abc <__asan_cplus_demangle_type@@Base+0x36ec>
   40c54:	mov	x0, x19
   40c58:	bl	342a0 <__asan_backtrace_create_state@@Base+0x6b8>
   40c5c:	cbnz	w0, 40b3c <__asan_cplus_demangle_type@@Base+0x376c>
   40c60:	ldp	x21, x22, [sp, #32]
   40c64:	nop
   40c68:	mov	x20, #0x0                   	// #0
   40c6c:	b	40abc <__asan_cplus_demangle_type@@Base+0x36ec>
   40c70:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   40c74:	mov	x20, x0
   40c78:	mov	x0, x20
   40c7c:	ldp	x19, x20, [sp, #16]
   40c80:	ldp	x29, x30, [sp], #96
   40c84:	ret
   40c88:	mov	x0, x19
   40c8c:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   40c90:	ldr	x1, [x19, #24]
   40c94:	mov	x20, x0
   40c98:	ldrb	w0, [x1]
   40c9c:	cmp	w0, #0x49
   40ca0:	b.ne	40abc <__asan_cplus_demangle_type@@Base+0x36ec>  // b.any
   40ca4:	cbz	x20, 40c68 <__asan_cplus_demangle_type@@Base+0x3898>
   40ca8:	ldp	w2, w0, [x19, #56]
   40cac:	cmp	w2, w0
   40cb0:	b.ge	40c68 <__asan_cplus_demangle_type@@Base+0x3898>  // b.tcont
   40cb4:	ldr	x4, [x19, #48]
   40cb8:	add	w0, w2, #0x1
   40cbc:	mov	x3, #0x0                   	// #0
   40cc0:	str	x20, [x4, w2, sxtw #3]
   40cc4:	str	w0, [x19, #56]
   40cc8:	ldrb	w2, [x1]
   40ccc:	sub	w2, w2, #0x49
   40cd0:	and	w2, w2, #0xff
   40cd4:	cmp	w2, #0x1
   40cd8:	b.ls	40c28 <__asan_cplus_demangle_type@@Base+0x3858>  // b.plast
   40cdc:	b	40c3c <__asan_cplus_demangle_type@@Base+0x386c>
   40ce0:	stp	x21, x22, [sp, #32]
   40ce4:	add	x2, x2, #0x1
   40ce8:	add	x1, sp, #0x58
   40cec:	str	x2, [x0, #24]
   40cf0:	mov	w2, #0x1                   	// #1
   40cf4:	bl	3fae8 <__asan_cplus_demangle_type@@Base+0x2718>
   40cf8:	mov	x22, x0
   40cfc:	cbz	x0, 40f98 <__asan_cplus_demangle_type@@Base+0x3bc8>
   40d00:	ldr	x3, [x19, #24]
   40d04:	stp	x23, x24, [sp, #48]
   40d08:	mov	w0, #0x4f                  	// #79
   40d0c:	mov	x23, #0x0                   	// #0
   40d10:	ldrb	w20, [x3]
   40d14:	cmp	w20, #0x52
   40d18:	ccmp	w20, w0, #0x4, ne  // ne = any
   40d1c:	b.eq	40e74 <__asan_cplus_demangle_type@@Base+0x3aa4>  // b.none
   40d20:	cbz	w20, 40ddc <__asan_cplus_demangle_type@@Base+0x3a0c>
   40d24:	mov	x21, #0x0                   	// #0
   40d28:	mov	w24, #0x4c                  	// #76
   40d2c:	stp	x25, x26, [sp, #64]
   40d30:	mov	w25, #0x55                  	// #85
   40d34:	cmp	w20, #0x44
   40d38:	b.eq	40df0 <__asan_cplus_demangle_type@@Base+0x3a20>  // b.none
   40d3c:	sub	w1, w20, #0x30
   40d40:	sub	w0, w20, #0x61
   40d44:	and	w1, w1, #0xff
   40d48:	and	w0, w0, #0xff
   40d4c:	cmp	w1, #0x9
   40d50:	mov	x26, x21
   40d54:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
   40d58:	b.ls	40d6c <__asan_cplus_demangle_type@@Base+0x399c>  // b.plast
   40d5c:	cmp	w20, #0x43
   40d60:	ccmp	w20, w25, #0x4, ne  // ne = any
   40d64:	ccmp	w20, w24, #0x4, ne  // ne = any
   40d68:	b.ne	40e3c <__asan_cplus_demangle_type@@Base+0x3a6c>  // b.any
   40d6c:	mov	x0, x19
   40d70:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   40d74:	mov	x21, x0
   40d78:	cbz	x26, 40d94 <__asan_cplus_demangle_type@@Base+0x39c4>
   40d7c:	mov	w1, #0x1                   	// #1
   40d80:	mov	x3, x21
   40d84:	mov	x2, x26
   40d88:	mov	x0, x19
   40d8c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40d90:	mov	x21, x0
   40d94:	cmp	w20, #0x53
   40d98:	ldr	x3, [x19, #24]
   40d9c:	b.eq	40dcc <__asan_cplus_demangle_type@@Base+0x39fc>  // b.none
   40da0:	ldrb	w20, [x3]
   40da4:	cmp	w20, #0x45
   40da8:	b.eq	40e24 <__asan_cplus_demangle_type@@Base+0x3a54>  // b.none
   40dac:	cbz	x21, 40dd8 <__asan_cplus_demangle_type@@Base+0x3a08>
   40db0:	ldp	w0, w1, [x19, #56]
   40db4:	cmp	w0, w1
   40db8:	b.ge	40dd8 <__asan_cplus_demangle_type@@Base+0x3a08>  // b.tcont
   40dbc:	ldr	x2, [x19, #48]
   40dc0:	add	w1, w0, #0x1
   40dc4:	str	x21, [x2, w0, sxtw #3]
   40dc8:	str	w1, [x19, #56]
   40dcc:	ldrb	w20, [x3]
   40dd0:	cbnz	w20, 40d34 <__asan_cplus_demangle_type@@Base+0x3964>
   40dd4:	nop
   40dd8:	ldp	x25, x26, [sp, #64]
   40ddc:	mov	x20, #0x0                   	// #0
   40de0:	ldp	x23, x24, [sp, #48]
   40de4:	str	xzr, [x22]
   40de8:	ldp	x21, x22, [sp, #32]
   40dec:	b	40abc <__asan_cplus_demangle_type@@Base+0x36ec>
   40df0:	ldrb	w0, [x3, #1]
   40df4:	and	w0, w0, #0xffffffdf
   40df8:	and	w0, w0, #0xff
   40dfc:	cmp	w0, #0x54
   40e00:	mov	x0, x19
   40e04:	b.ne	40e2c <__asan_cplus_demangle_type@@Base+0x3a5c>  // b.any
   40e08:	mov	x26, x21
   40e0c:	bl	6750 <__asan_cplus_demangle_type@plt>
   40e10:	mov	x21, x0
   40e14:	mov	w1, #0x1                   	// #1
   40e18:	cbnz	x26, 40d80 <__asan_cplus_demangle_type@@Base+0x39b0>
   40e1c:	ldr	x3, [x19, #24]
   40e20:	b	40da0 <__asan_cplus_demangle_type@@Base+0x39d0>
   40e24:	mov	x26, x21
   40e28:	b	40d5c <__asan_cplus_demangle_type@@Base+0x398c>
   40e2c:	mov	x26, x21
   40e30:	bl	3e500 <__asan_cplus_demangle_type@@Base+0x1130>
   40e34:	mov	x21, x0
   40e38:	b	40e14 <__asan_cplus_demangle_type@@Base+0x3a44>
   40e3c:	cmp	w20, #0x53
   40e40:	b.eq	40f30 <__asan_cplus_demangle_type@@Base+0x3b60>  // b.none
   40e44:	cmp	w20, #0x49
   40e48:	b.eq	40fbc <__asan_cplus_demangle_type@@Base+0x3bec>  // b.none
   40e4c:	cmp	w20, #0x54
   40e50:	b.eq	4103c <__asan_cplus_demangle_type@@Base+0x3c6c>  // b.none
   40e54:	cmp	w20, #0x45
   40e58:	b.eq	40f4c <__asan_cplus_demangle_type@@Base+0x3b7c>  // b.none
   40e5c:	cmp	w20, #0x4d
   40e60:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   40e64:	b.eq	40dd8 <__asan_cplus_demangle_type@@Base+0x3a08>  // b.none
   40e68:	add	x3, x3, #0x1
   40e6c:	str	x3, [x19, #24]
   40e70:	b	40dcc <__asan_cplus_demangle_type@@Base+0x39fc>
   40e74:	ldr	w2, [x19, #72]
   40e78:	cmp	w20, #0x52
   40e7c:	mov	w1, #0x20                  	// #32
   40e80:	add	w0, w2, #0x3
   40e84:	b.ne	40e90 <__asan_cplus_demangle_type@@Base+0x3ac0>  // b.any
   40e88:	add	w0, w2, #0x2
   40e8c:	mov	w1, #0x1f                  	// #31
   40e90:	add	x3, x3, #0x1
   40e94:	str	x3, [x19, #24]
   40e98:	str	w0, [x19, #72]
   40e9c:	mov	x3, #0x0                   	// #0
   40ea0:	mov	x0, x19
   40ea4:	mov	x2, #0x0                   	// #0
   40ea8:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   40eac:	mov	x23, x0
   40eb0:	ldr	x3, [x19, #24]
   40eb4:	ldrb	w20, [x3]
   40eb8:	b	40d20 <__asan_cplus_demangle_type@@Base+0x3950>
   40ebc:	add	x0, x0, #0x2
   40ec0:	str	x0, [x19, #24]
   40ec4:	mov	x0, x19
   40ec8:	bl	341f0 <__asan_backtrace_create_state@@Base+0x608>
   40ecc:	mov	w22, w0
   40ed0:	tbnz	w0, #31, 40c60 <__asan_cplus_demangle_type@@Base+0x3890>
   40ed4:	mov	x0, x19
   40ed8:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   40edc:	mov	x13, x0
   40ee0:	cbz	x0, 40ef4 <__asan_cplus_demangle_type@@Base+0x3b24>
   40ee4:	ldr	w0, [x0]
   40ee8:	sub	w0, w0, #0x46
   40eec:	tst	w0, #0xfffffffd
   40ef0:	b.ne	4104c <__asan_cplus_demangle_type@@Base+0x3c7c>  // b.any
   40ef4:	ldp	w1, w0, [x19, #40]
   40ef8:	cmp	w1, w0
   40efc:	b.ge	4102c <__asan_cplus_demangle_type@@Base+0x3c5c>  // b.tcont
   40f00:	mov	w2, #0x18                  	// #24
   40f04:	add	w3, w1, #0x1
   40f08:	ldr	x0, [x19, #32]
   40f0c:	smull	x1, w1, w2
   40f10:	mov	w2, #0x47                  	// #71
   40f14:	add	x21, x0, x1
   40f18:	str	wzr, [x21, #4]
   40f1c:	str	w3, [x19, #40]
   40f20:	str	w2, [x0, x1]
   40f24:	str	x13, [x21, #8]
   40f28:	str	w22, [x21, #16]
   40f2c:	b	40b3c <__asan_cplus_demangle_type@@Base+0x376c>
   40f30:	mov	x0, x19
   40f34:	mov	w1, #0x1                   	// #1
   40f38:	bl	3d000 <__asan_cplus_demangle_fill_name@@Base+0x240>
   40f3c:	mov	x21, x0
   40f40:	cbnz	x26, 40d7c <__asan_cplus_demangle_type@@Base+0x39ac>
   40f44:	ldr	x3, [x19, #24]
   40f48:	b	40dcc <__asan_cplus_demangle_type@@Base+0x39fc>
   40f4c:	str	x21, [x22]
   40f50:	cbz	x21, 40f90 <__asan_cplus_demangle_type@@Base+0x3bc0>
   40f54:	cbz	x23, 40f64 <__asan_cplus_demangle_type@@Base+0x3b94>
   40f58:	ldr	x0, [sp, #88]
   40f5c:	str	x0, [x23, #8]
   40f60:	str	x23, [sp, #88]
   40f64:	ldr	x0, [x19, #24]
   40f68:	ldrb	w1, [x0]
   40f6c:	cmp	w1, #0x45
   40f70:	b.ne	40f90 <__asan_cplus_demangle_type@@Base+0x3bc0>  // b.any
   40f74:	add	x0, x0, #0x1
   40f78:	ldp	x21, x22, [sp, #32]
   40f7c:	ldp	x23, x24, [sp, #48]
   40f80:	ldp	x25, x26, [sp, #64]
   40f84:	str	x0, [x19, #24]
   40f88:	ldr	x20, [sp, #88]
   40f8c:	b	40abc <__asan_cplus_demangle_type@@Base+0x36ec>
   40f90:	ldp	x23, x24, [sp, #48]
   40f94:	ldp	x25, x26, [sp, #64]
   40f98:	mov	x20, #0x0                   	// #0
   40f9c:	ldp	x21, x22, [sp, #32]
   40fa0:	b	40abc <__asan_cplus_demangle_type@@Base+0x36ec>
   40fa4:	ldr	x0, [x20, #16]
   40fa8:	ldr	w1, [x0]
   40fac:	cmp	w1, #0x29
   40fb0:	b.ne	40b48 <__asan_cplus_demangle_type@@Base+0x3778>  // b.any
   40fb4:	str	xzr, [x0, #8]
   40fb8:	b	40b48 <__asan_cplus_demangle_type@@Base+0x3778>
   40fbc:	cbz	x21, 40dd8 <__asan_cplus_demangle_type@@Base+0x3a08>
   40fc0:	add	x3, x3, #0x1
   40fc4:	str	x3, [x19, #24]
   40fc8:	mov	x0, x19
   40fcc:	bl	3fde0 <__asan_cplus_demangle_type@@Base+0x2a10>
   40fd0:	mov	x21, x0
   40fd4:	mov	w1, #0x4                   	// #4
   40fd8:	b	40d80 <__asan_cplus_demangle_type@@Base+0x39b0>
   40fdc:	add	x0, x0, #0x2
   40fe0:	str	x0, [x19, #24]
   40fe4:	mov	x0, x19
   40fe8:	bl	342a0 <__asan_backtrace_create_state@@Base+0x6b8>
   40fec:	cbz	w0, 40c60 <__asan_cplus_demangle_type@@Base+0x3890>
   40ff0:	ldp	w21, w0, [x19, #40]
   40ff4:	cmp	w21, w0
   40ff8:	b.ge	41060 <__asan_cplus_demangle_type@@Base+0x3c90>  // b.tcont
   40ffc:	ldr	x1, [x19, #32]
   41000:	mov	w2, #0x18                  	// #24
   41004:	add	w0, w21, #0x1
   41008:	smaddl	x21, w21, w2, x1
   4100c:	str	wzr, [x21, #4]
   41010:	str	w0, [x19, #40]
   41014:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   41018:	mov	x0, x21
   4101c:	add	x1, x1, #0x108
   41020:	mov	w2, #0xe                   	// #14
   41024:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   41028:	cbnz	w0, 40b3c <__asan_cplus_demangle_type@@Base+0x376c>
   4102c:	mov	x21, #0x0                   	// #0
   41030:	b	40b3c <__asan_cplus_demangle_type@@Base+0x376c>
   41034:	mov	x20, #0x0                   	// #0
   41038:	b	40b94 <__asan_cplus_demangle_type@@Base+0x37c4>
   4103c:	mov	x0, x19
   41040:	bl	343c8 <__asan_backtrace_create_state@@Base+0x7e0>
   41044:	mov	x21, x0
   41048:	b	40e14 <__asan_cplus_demangle_type@@Base+0x3a44>
   4104c:	mov	x0, x19
   41050:	bl	342a0 <__asan_backtrace_create_state@@Base+0x6b8>
   41054:	cbnz	w0, 40ef4 <__asan_cplus_demangle_type@@Base+0x3b24>
   41058:	ldp	x21, x22, [sp, #32]
   4105c:	b	40c68 <__asan_cplus_demangle_type@@Base+0x3898>
   41060:	mov	x21, #0x0                   	// #0
   41064:	b	41014 <__asan_cplus_demangle_type@@Base+0x3c44>
   41068:	stp	x29, x30, [sp, #-48]!
   4106c:	mov	x29, sp
   41070:	stp	x19, x20, [sp, #16]
   41074:	mov	x20, x0
   41078:	stp	x21, x22, [sp, #32]
   4107c:	mov	w22, w1
   41080:	bl	40a60 <__asan_cplus_demangle_type@@Base+0x3690>
   41084:	cbz	x0, 4119c <__asan_cplus_demangle_type@@Base+0x3dcc>
   41088:	mov	x19, x0
   4108c:	cbz	w22, 41120 <__asan_cplus_demangle_type@@Base+0x3d50>
   41090:	ldr	w0, [x20, #16]
   41094:	tbnz	w0, #0, 41120 <__asan_cplus_demangle_type@@Base+0x3d50>
   41098:	mov	x1, #0x1f                  	// #31
   4109c:	mov	x2, #0x1                   	// #1
   410a0:	movk	x1, #0x1a, lsl #48
   410a4:	ldr	w3, [x19]
   410a8:	sub	w0, w3, #0x1c
   410ac:	cmp	w0, #0x34
   410b0:	b.hi	410c0 <__asan_cplus_demangle_type@@Base+0x3cf0>  // b.pmore
   410b4:	lsl	x0, x2, x0
   410b8:	tst	x0, x1
   410bc:	b.ne	41234 <__asan_cplus_demangle_type@@Base+0x3e64>  // b.any
   410c0:	cmp	w3, #0x2
   410c4:	b.ne	4110c <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.any
   410c8:	ldr	x3, [x19, #16]
   410cc:	mov	x1, #0x1f                  	// #31
   410d0:	mov	x2, #0x1                   	// #1
   410d4:	movk	x1, #0x1a, lsl #48
   410d8:	ldr	w0, [x3]
   410dc:	sub	w0, w0, #0x1c
   410e0:	cmp	w0, #0x34
   410e4:	b.hi	4110c <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.pmore
   410e8:	lsl	x0, x2, x0
   410ec:	tst	x0, x1
   410f0:	b.eq	4110c <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.none
   410f4:	ldr	x3, [x3, #8]
   410f8:	str	x3, [x19, #16]
   410fc:	ldr	w0, [x3]
   41100:	sub	w0, w0, #0x1c
   41104:	cmp	w0, #0x34
   41108:	b.ls	410e8 <__asan_cplus_demangle_type@@Base+0x3d18>  // b.plast
   4110c:	mov	x0, x19
   41110:	ldp	x19, x20, [sp, #16]
   41114:	ldp	x21, x22, [sp, #32]
   41118:	ldp	x29, x30, [sp], #48
   4111c:	ret
   41120:	ldr	x1, [x20, #24]
   41124:	ldrb	w4, [x1]
   41128:	cmp	w4, #0x45
   4112c:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   41130:	b.eq	4110c <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.none
   41134:	mov	x2, #0x1f                  	// #31
   41138:	mov	x21, x19
   4113c:	mov	x5, #0x1                   	// #1
   41140:	movk	x2, #0x1a, lsl #48
   41144:	ldr	w0, [x21]
   41148:	cmp	w0, #0x4
   4114c:	b.eq	4123c <__asan_cplus_demangle_type@@Base+0x3e6c>  // b.none
   41150:	sub	w3, w0, #0x1c
   41154:	b.hi	41214 <__asan_cplus_demangle_type@@Base+0x3e44>  // b.pmore
   41158:	cmp	w0, #0x2
   4115c:	b.ne	411b4 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.any
   41160:	ldr	x21, [x21, #16]
   41164:	cbnz	x21, 41144 <__asan_cplus_demangle_type@@Base+0x3d74>
   41168:	cmp	w4, #0x4a
   4116c:	b.ne	411c0 <__asan_cplus_demangle_type@@Base+0x3df0>  // b.any
   41170:	add	x1, x1, #0x1
   41174:	str	x1, [x20, #24]
   41178:	b	4118c <__asan_cplus_demangle_type@@Base+0x3dbc>
   4117c:	cmp	w0, #0x35
   41180:	b.eq	411b4 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.none
   41184:	cmp	w4, #0x4a
   41188:	b.eq	41170 <__asan_cplus_demangle_type@@Base+0x3da0>  // b.none
   4118c:	mov	x0, x20
   41190:	bl	6750 <__asan_cplus_demangle_type@plt>
   41194:	mov	x21, x0
   41198:	cbnz	x0, 411c0 <__asan_cplus_demangle_type@@Base+0x3df0>
   4119c:	mov	x19, #0x0                   	// #0
   411a0:	mov	x0, x19
   411a4:	ldp	x19, x20, [sp, #16]
   411a8:	ldp	x21, x22, [sp, #32]
   411ac:	ldp	x29, x30, [sp], #48
   411b0:	ret
   411b4:	cmp	w4, #0x4a
   411b8:	mov	x21, #0x0                   	// #0
   411bc:	b.eq	41170 <__asan_cplus_demangle_type@@Base+0x3da0>  // b.none
   411c0:	mov	x0, x20
   411c4:	bl	3e1d8 <__asan_cplus_demangle_type@@Base+0xe08>
   411c8:	mov	x3, x0
   411cc:	cbz	x0, 4119c <__asan_cplus_demangle_type@@Base+0x3dcc>
   411d0:	mov	x2, x21
   411d4:	mov	x0, x20
   411d8:	mov	w1, #0x29                  	// #41
   411dc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   411e0:	mov	x3, x0
   411e4:	cbz	x0, 4119c <__asan_cplus_demangle_type@@Base+0x3dcc>
   411e8:	cbnz	w22, 411f8 <__asan_cplus_demangle_type@@Base+0x3e28>
   411ec:	ldr	w0, [x19]
   411f0:	cmp	w0, #0x2
   411f4:	b.eq	41270 <__asan_cplus_demangle_type@@Base+0x3ea0>  // b.none
   411f8:	mov	x2, x19
   411fc:	mov	x0, x20
   41200:	ldp	x19, x20, [sp, #16]
   41204:	mov	w1, #0x3                   	// #3
   41208:	ldp	x21, x22, [sp, #32]
   4120c:	ldp	x29, x30, [sp], #48
   41210:	b	33c80 <__asan_backtrace_create_state@@Base+0x98>
   41214:	cmp	w3, #0x34
   41218:	b.hi	411b4 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.pmore
   4121c:	lsl	x3, x5, x3
   41220:	tst	x3, x2
   41224:	b.eq	411b4 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.none
   41228:	ldr	x21, [x21, #8]
   4122c:	cbnz	x21, 41144 <__asan_cplus_demangle_type@@Base+0x3d74>
   41230:	b	41168 <__asan_cplus_demangle_type@@Base+0x3d98>
   41234:	ldr	x19, [x19, #8]
   41238:	b	410a4 <__asan_cplus_demangle_type@@Base+0x3cd4>
   4123c:	ldr	x2, [x21, #8]
   41240:	cbz	x2, 41184 <__asan_cplus_demangle_type@@Base+0x3db4>
   41244:	ldr	w0, [x2]
   41248:	sub	w3, w0, #0x1
   4124c:	cmp	w0, #0x8
   41250:	b.hi	4117c <__asan_cplus_demangle_type@@Base+0x3dac>  // b.pmore
   41254:	cmp	w0, #0x6
   41258:	b.hi	411b4 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.pmore
   4125c:	cmp	w3, #0x1
   41260:	b.hi	41184 <__asan_cplus_demangle_type@@Base+0x3db4>  // b.pmore
   41264:	ldr	x2, [x2, #16]
   41268:	cbnz	x2, 41244 <__asan_cplus_demangle_type@@Base+0x3e74>
   4126c:	b	41184 <__asan_cplus_demangle_type@@Base+0x3db4>
   41270:	ldr	w0, [x3]
   41274:	cmp	w0, #0x29
   41278:	b.ne	411f8 <__asan_cplus_demangle_type@@Base+0x3e28>  // b.any
   4127c:	str	xzr, [x3, #8]
   41280:	b	411f8 <__asan_cplus_demangle_type@@Base+0x3e28>
   41284:	nop

0000000000041288 <__asan_cplus_demangle_mangled_name@@Base>:
   41288:	stp	x29, x30, [sp, #-48]!
   4128c:	mov	x29, sp
   41290:	stp	x19, x20, [sp, #16]
   41294:	mov	x19, x0
   41298:	mov	w20, w1
   4129c:	ldr	x0, [x0, #24]
   412a0:	stp	x21, x22, [sp, #32]
   412a4:	ldrb	w1, [x0]
   412a8:	cmp	w1, #0x5f
   412ac:	b.eq	41440 <__asan_cplus_demangle_mangled_name@@Base+0x1b8>  // b.none
   412b0:	cbnz	w20, 41428 <__asan_cplus_demangle_mangled_name@@Base+0x1a0>
   412b4:	cmp	w1, #0x5a
   412b8:	b.ne	41428 <__asan_cplus_demangle_mangled_name@@Base+0x1a0>  // b.any
   412bc:	add	x1, x0, #0x1
   412c0:	str	x1, [x19, #24]
   412c4:	mov	w1, #0x54                  	// #84
   412c8:	ldrb	w0, [x0, #1]
   412cc:	cmp	w0, #0x47
   412d0:	ccmp	w0, w1, #0x4, ne  // ne = any
   412d4:	b.ne	41454 <__asan_cplus_demangle_mangled_name@@Base+0x1cc>  // b.any
   412d8:	mov	x0, x19
   412dc:	bl	3ff78 <__asan_cplus_demangle_type@@Base+0x2ba8>
   412e0:	mov	x22, x0
   412e4:	cbz	w20, 4142c <__asan_cplus_demangle_mangled_name@@Base+0x1a4>
   412e8:	ldr	w0, [x19, #16]
   412ec:	tbz	w0, #0, 4142c <__asan_cplus_demangle_mangled_name@@Base+0x1a4>
   412f0:	ldr	x1, [x19, #24]
   412f4:	mov	w21, #0x18                  	// #24
   412f8:	ldrb	w0, [x1]
   412fc:	cmp	w0, #0x2e
   41300:	b.ne	4142c <__asan_cplus_demangle_mangled_name@@Base+0x1a4>  // b.any
   41304:	ldrb	w2, [x1, #1]
   41308:	sub	w0, w2, #0x61
   4130c:	cmp	w2, #0x5f
   41310:	and	w0, w0, #0xff
   41314:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   41318:	b.ls	413f8 <__asan_cplus_demangle_mangled_name@@Base+0x170>  // b.plast
   4131c:	nop
   41320:	sub	w2, w2, #0x30
   41324:	and	w2, w2, #0xff
   41328:	cmp	w2, #0x9
   4132c:	b.hi	4142c <__asan_cplus_demangle_mangled_name@@Base+0x1a4>  // b.pmore
   41330:	mov	x2, x1
   41334:	nop
   41338:	ldrb	w3, [x2, #1]
   4133c:	sub	w3, w3, #0x30
   41340:	and	w3, w3, #0xff
   41344:	cmp	w3, #0x9
   41348:	b.hi	41384 <__asan_cplus_demangle_mangled_name@@Base+0xfc>  // b.pmore
   4134c:	ldrb	w0, [x2, #2]
   41350:	add	x2, x2, #0x2
   41354:	sub	w3, w0, #0x30
   41358:	and	w3, w3, #0xff
   4135c:	cmp	w3, #0x9
   41360:	b.hi	4137c <__asan_cplus_demangle_mangled_name@@Base+0xf4>  // b.pmore
   41364:	nop
   41368:	ldrb	w0, [x2, #1]!
   4136c:	sub	w3, w0, #0x30
   41370:	and	w3, w3, #0xff
   41374:	cmp	w3, #0x9
   41378:	b.ls	41368 <__asan_cplus_demangle_mangled_name@@Base+0xe0>  // b.plast
   4137c:	cmp	w0, #0x2e
   41380:	b.eq	41338 <__asan_cplus_demangle_mangled_name@@Base+0xb0>  // b.none
   41384:	ldp	w20, w0, [x19, #40]
   41388:	str	x2, [x19, #24]
   4138c:	sub	x2, x2, x1
   41390:	cmp	w20, w0
   41394:	b.ge	41468 <__asan_cplus_demangle_mangled_name@@Base+0x1e0>  // b.tcont
   41398:	ldr	x3, [x19, #32]
   4139c:	add	w0, w20, #0x1
   413a0:	smaddl	x20, w20, w21, x3
   413a4:	str	wzr, [x20, #4]
   413a8:	str	w0, [x19, #40]
   413ac:	mov	x0, x20
   413b0:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   413b4:	cbz	w0, 41478 <__asan_cplus_demangle_mangled_name@@Base+0x1f0>
   413b8:	mov	x3, x20
   413bc:	mov	x2, x22
   413c0:	mov	w1, #0x4e                  	// #78
   413c4:	mov	x0, x19
   413c8:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   413cc:	mov	x22, x0
   413d0:	ldr	x1, [x19, #24]
   413d4:	ldrb	w0, [x1]
   413d8:	cmp	w0, #0x2e
   413dc:	b.ne	4142c <__asan_cplus_demangle_mangled_name@@Base+0x1a4>  // b.any
   413e0:	ldrb	w2, [x1, #1]
   413e4:	sub	w0, w2, #0x61
   413e8:	cmp	w2, #0x5f
   413ec:	and	w0, w0, #0xff
   413f0:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   413f4:	b.hi	41320 <__asan_cplus_demangle_mangled_name@@Base+0x98>  // b.pmore
   413f8:	ldrb	w3, [x1, #2]
   413fc:	add	x2, x1, #0x2
   41400:	b	41408 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   41404:	ldrb	w3, [x2, #1]!
   41408:	sub	w0, w3, #0x61
   4140c:	cmp	w3, #0x5f
   41410:	and	w0, w0, #0xff
   41414:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   41418:	b.ls	41404 <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.plast
   4141c:	cmp	w3, #0x2e
   41420:	b.eq	41338 <__asan_cplus_demangle_mangled_name@@Base+0xb0>  // b.none
   41424:	b	41384 <__asan_cplus_demangle_mangled_name@@Base+0xfc>
   41428:	mov	x22, #0x0                   	// #0
   4142c:	mov	x0, x22
   41430:	ldp	x19, x20, [sp, #16]
   41434:	ldp	x21, x22, [sp, #32]
   41438:	ldp	x29, x30, [sp], #48
   4143c:	ret
   41440:	add	x2, x0, #0x1
   41444:	str	x2, [x19, #24]
   41448:	ldrb	w1, [x0, #1]
   4144c:	mov	x0, x2
   41450:	b	412b4 <__asan_cplus_demangle_mangled_name@@Base+0x2c>
   41454:	mov	w1, w20
   41458:	mov	x0, x19
   4145c:	bl	41068 <__asan_cplus_demangle_type@@Base+0x3c98>
   41460:	mov	x22, x0
   41464:	b	412e4 <__asan_cplus_demangle_mangled_name@@Base+0x5c>
   41468:	mov	x20, #0x0                   	// #0
   4146c:	mov	x0, x20
   41470:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   41474:	cbnz	w0, 413b8 <__asan_cplus_demangle_mangled_name@@Base+0x130>
   41478:	mov	x2, x22
   4147c:	mov	x3, #0x0                   	// #0
   41480:	b	413c0 <__asan_cplus_demangle_mangled_name@@Base+0x138>
   41484:	nop
   41488:	ldr	x1, [x0, #24]
   4148c:	ldrb	w2, [x1]
   41490:	cmp	w2, #0x4c
   41494:	b.ne	41570 <__asan_cplus_demangle_mangled_name@@Base+0x2e8>  // b.any
   41498:	stp	x29, x30, [sp, #-48]!
   4149c:	add	x2, x1, #0x1
   414a0:	mov	x29, sp
   414a4:	stp	x19, x20, [sp, #16]
   414a8:	mov	x19, x0
   414ac:	str	x2, [x0, #24]
   414b0:	mov	w2, #0x5a                  	// #90
   414b4:	ldrb	w1, [x1, #1]
   414b8:	cmp	w1, #0x5f
   414bc:	ccmp	w1, w2, #0x4, ne  // ne = any
   414c0:	b.ne	414f0 <__asan_cplus_demangle_mangled_name@@Base+0x268>  // b.any
   414c4:	mov	w1, #0x0                   	// #0
   414c8:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   414cc:	ldr	x1, [x19, #24]
   414d0:	ldrb	w2, [x1]
   414d4:	cmp	w2, #0x45
   414d8:	b.ne	41560 <__asan_cplus_demangle_mangled_name@@Base+0x2d8>  // b.any
   414dc:	add	x1, x1, #0x1
   414e0:	str	x1, [x19, #24]
   414e4:	ldp	x19, x20, [sp, #16]
   414e8:	ldp	x29, x30, [sp], #48
   414ec:	ret
   414f0:	bl	6750 <__asan_cplus_demangle_type@plt>
   414f4:	mov	x20, x0
   414f8:	cbz	x0, 41560 <__asan_cplus_demangle_mangled_name@@Base+0x2d8>
   414fc:	ldr	w0, [x0]
   41500:	stp	x21, x22, [sp, #32]
   41504:	cmp	w0, #0x27
   41508:	b.eq	415c8 <__asan_cplus_demangle_mangled_name@@Base+0x340>  // b.none
   4150c:	ldr	x1, [x19, #24]
   41510:	mov	w22, #0x3d                  	// #61
   41514:	ldrb	w4, [x1]
   41518:	cmp	w4, #0x6e
   4151c:	b.ne	41534 <__asan_cplus_demangle_mangled_name@@Base+0x2ac>  // b.any
   41520:	add	x0, x1, #0x1
   41524:	str	x0, [x19, #24]
   41528:	mov	w22, #0x3e                  	// #62
   4152c:	ldrb	w4, [x1, #1]
   41530:	mov	x1, x0
   41534:	cmp	w4, #0x45
   41538:	b.eq	415f0 <__asan_cplus_demangle_mangled_name@@Base+0x368>  // b.none
   4153c:	add	x3, x1, #0x1
   41540:	b	41554 <__asan_cplus_demangle_mangled_name@@Base+0x2cc>
   41544:	str	x3, [x19, #24]
   41548:	ldrb	w4, [x3], #1
   4154c:	cmp	w4, #0x45
   41550:	b.eq	41578 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>  // b.none
   41554:	mov	x2, x3
   41558:	cbnz	w4, 41544 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   4155c:	ldp	x21, x22, [sp, #32]
   41560:	mov	x0, #0x0                   	// #0
   41564:	ldp	x19, x20, [sp, #16]
   41568:	ldp	x29, x30, [sp], #48
   4156c:	ret
   41570:	mov	x0, #0x0                   	// #0
   41574:	ret
   41578:	sub	w2, w2, w1
   4157c:	ldp	w21, w0, [x19, #40]
   41580:	cmp	w21, w0
   41584:	b.ge	415e8 <__asan_cplus_demangle_mangled_name@@Base+0x360>  // b.tcont
   41588:	ldr	x3, [x19, #32]
   4158c:	mov	w4, #0x18                  	// #24
   41590:	add	w0, w21, #0x1
   41594:	smaddl	x21, w21, w4, x3
   41598:	str	wzr, [x21, #4]
   4159c:	str	w0, [x19, #40]
   415a0:	mov	x0, x21
   415a4:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   415a8:	cmp	w0, #0x0
   415ac:	mov	w1, w22
   415b0:	csel	x3, x21, xzr, ne  // ne = any
   415b4:	mov	x2, x20
   415b8:	mov	x0, x19
   415bc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   415c0:	ldp	x21, x22, [sp, #32]
   415c4:	b	414cc <__asan_cplus_demangle_mangled_name@@Base+0x244>
   415c8:	ldr	x0, [x20, #8]
   415cc:	ldr	w1, [x0, #28]
   415d0:	cbz	w1, 4150c <__asan_cplus_demangle_mangled_name@@Base+0x284>
   415d4:	ldr	w1, [x0, #8]
   415d8:	ldr	w0, [x19, #72]
   415dc:	sub	w0, w0, w1
   415e0:	str	w0, [x19, #72]
   415e4:	b	4150c <__asan_cplus_demangle_mangled_name@@Base+0x284>
   415e8:	mov	x21, #0x0                   	// #0
   415ec:	b	415a0 <__asan_cplus_demangle_mangled_name@@Base+0x318>
   415f0:	mov	w2, #0x0                   	// #0
   415f4:	b	4157c <__asan_cplus_demangle_mangled_name@@Base+0x2f4>

00000000000415f8 <__asan_cplus_demangle_print_callback@@Base>:
   415f8:	stp	x29, x30, [sp, #-448]!
   415fc:	mov	w4, w0
   41600:	mov	x29, sp
   41604:	stp	x19, x20, [sp, #16]
   41608:	add	x20, x29, #0x40
   4160c:	mov	x19, x1
   41610:	str	x21, [sp, #32]
   41614:	mov	x0, x20
   41618:	stp	x2, x3, [x29, #336]
   4161c:	add	x2, x29, #0x200
   41620:	str	xzr, [x29, #320]
   41624:	stp	xzr, xzr, [x2, #-120]
   41628:	strb	wzr, [x29, #328]
   4162c:	stp	xzr, xzr, [x29, #352]
   41630:	stp	xzr, xzr, [x29, #368]
   41634:	str	xzr, [x29, #384]
   41638:	stp	xzr, xzr, [x29, #408]
   4163c:	str	xzr, [x29, #424]
   41640:	bl	33d08 <__asan_backtrace_create_state@@Base+0x120>
   41644:	ldr	w1, [x29, #372]
   41648:	cmp	w1, #0x7ff
   4164c:	b.gt	41658 <__asan_cplus_demangle_print_callback@@Base+0x60>
   41650:	mov	w1, #0x0                   	// #0
   41654:	str	wzr, [x29, #372]
   41658:	ldr	w3, [x29, #412]
   4165c:	mov	w0, #0x1                   	// #1
   41660:	ldr	w5, [x29, #428]
   41664:	mov	x21, sp
   41668:	cmp	w3, #0x0
   4166c:	str	xzr, [x29, #432]
   41670:	csel	w2, w3, w0, gt
   41674:	mul	w3, w3, w5
   41678:	sub	sp, sp, w2, sxtw #4
   4167c:	str	w3, [x29, #428]
   41680:	mov	x2, sp
   41684:	cmp	w3, #0x0
   41688:	str	x2, [x29, #400]
   4168c:	csel	w3, w3, w0, gt
   41690:	sub	sp, sp, w3, sxtw #4
   41694:	mov	x0, sp
   41698:	str	x0, [x29, #416]
   4169c:	cbz	x19, 41708 <__asan_cplus_demangle_print_callback@@Base+0x110>
   416a0:	ldr	w0, [x19, #4]
   416a4:	cmp	w0, #0x1
   416a8:	b.gt	41708 <__asan_cplus_demangle_print_callback@@Base+0x110>
   416ac:	cmp	w1, #0x400
   416b0:	b.gt	41708 <__asan_cplus_demangle_print_callback@@Base+0x110>
   416b4:	ldr	x5, [x29, #392]
   416b8:	add	w3, w1, #0x1
   416bc:	mov	w1, w4
   416c0:	add	x4, x29, #0x30
   416c4:	add	w0, w0, #0x1
   416c8:	str	w0, [x19, #4]
   416cc:	mov	x2, x19
   416d0:	mov	x0, x20
   416d4:	stp	x19, x5, [x29, #48]
   416d8:	str	w3, [x29, #372]
   416dc:	str	x4, [x29, #392]
   416e0:	bl	346b0 <__asan_backtrace_create_state@@Base+0xac8>
   416e4:	ldr	w0, [x19, #4]
   416e8:	ldr	w1, [x29, #372]
   416ec:	ldr	x2, [x29, #56]
   416f0:	sub	w0, w0, #0x1
   416f4:	sub	w1, w1, #0x1
   416f8:	str	w0, [x19, #4]
   416fc:	str	w1, [x29, #372]
   41700:	str	x2, [x29, #392]
   41704:	b	41710 <__asan_cplus_demangle_print_callback@@Base+0x118>
   41708:	mov	w0, #0x1                   	// #1
   4170c:	str	w0, [x29, #368]
   41710:	ldr	x1, [x29, #320]
   41714:	mov	sp, x21
   41718:	ldp	x3, x2, [x29, #336]
   4171c:	mov	x0, x20
   41720:	strb	wzr, [x20, x1]
   41724:	blr	x3
   41728:	ldr	w0, [x29, #368]
   4172c:	mov	sp, x29
   41730:	cmp	w0, #0x0
   41734:	cset	w0, eq  // eq = none
   41738:	ldp	x19, x20, [sp, #16]
   4173c:	ldr	x21, [sp, #32]
   41740:	ldp	x29, x30, [sp], #448
   41744:	ret

0000000000041748 <__asan_cplus_demangle_print@@Base>:
   41748:	stp	x29, x30, [sp, #-96]!
   4174c:	mov	x29, sp
   41750:	stp	x19, x20, [sp, #16]
   41754:	mov	w19, w0
   41758:	str	x21, [sp, #32]
   4175c:	mov	x21, x3
   41760:	str	xzr, [sp, #64]
   41764:	stp	xzr, xzr, [sp, #72]
   41768:	str	wzr, [sp, #88]
   4176c:	cbnz	w2, 417b0 <__asan_cplus_demangle_print@@Base+0x68>
   41770:	adrp	x2, 33000 <__asan_backtrace_pcinfo@@Base+0x1b0>
   41774:	mov	w0, w19
   41778:	add	x3, sp, #0x40
   4177c:	add	x2, x2, #0xf00
   41780:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   41784:	cbz	w0, 417ec <__asan_cplus_demangle_print@@Base+0xa4>
   41788:	ldr	w2, [sp, #88]
   4178c:	ldr	x1, [sp, #80]
   41790:	cmp	w2, #0x0
   41794:	ldr	x0, [sp, #64]
   41798:	csinc	x1, x1, xzr, eq  // eq = none
   4179c:	str	x1, [x21]
   417a0:	ldp	x19, x20, [sp, #16]
   417a4:	ldr	x21, [sp, #32]
   417a8:	ldp	x29, x30, [sp], #96
   417ac:	ret
   417b0:	sxtw	x0, w2
   417b4:	mov	x20, #0x2                   	// #2
   417b8:	cmp	x0, #0x2
   417bc:	b.ls	417cc <__asan_cplus_demangle_print@@Base+0x84>  // b.plast
   417c0:	lsl	x20, x20, #1
   417c4:	cmp	x0, x20
   417c8:	b.hi	417c0 <__asan_cplus_demangle_print@@Base+0x78>  // b.pmore
   417cc:	mov	x0, x20
   417d0:	str	x1, [sp, #56]
   417d4:	bl	6a30 <malloc@plt>
   417d8:	ldr	x1, [sp, #56]
   417dc:	cbz	x0, 41800 <__asan_cplus_demangle_print@@Base+0xb8>
   417e0:	str	x0, [sp, #64]
   417e4:	str	x20, [sp, #80]
   417e8:	b	41770 <__asan_cplus_demangle_print@@Base+0x28>
   417ec:	ldr	x0, [sp, #64]
   417f0:	bl	66f0 <free@plt>
   417f4:	str	xzr, [x21]
   417f8:	mov	x0, #0x0                   	// #0
   417fc:	b	417a0 <__asan_cplus_demangle_print@@Base+0x58>
   41800:	mov	w0, #0x1                   	// #1
   41804:	str	w0, [sp, #88]
   41808:	b	41770 <__asan_cplus_demangle_print@@Base+0x28>
   4180c:	nop

0000000000041810 <__asan_cplus_demangle_init_info@@Base>:
   41810:	lsl	w4, w2, #1
   41814:	add	x5, x0, x2
   41818:	stp	x0, x5, [x3]
   4181c:	str	w1, [x3, #16]
   41820:	str	x0, [x3, #24]
   41824:	stp	wzr, w4, [x3, #40]
   41828:	stp	wzr, w2, [x3, #56]
   4182c:	stp	xzr, xzr, [x3, #64]
   41830:	str	xzr, [x3, #80]
   41834:	ret

0000000000041838 <__asan_cplus_demangle_v3@@Base>:
   41838:	stp	x29, x30, [sp, #-192]!
   4183c:	mov	x29, sp
   41840:	stp	x19, x20, [sp, #16]
   41844:	mov	x19, x0
   41848:	mov	w20, w1
   4184c:	stp	x21, x22, [sp, #32]
   41850:	stp	x23, x24, [sp, #48]
   41854:	ldrb	w0, [x0]
   41858:	str	xzr, [x29, #64]
   4185c:	stp	xzr, xzr, [x29, #72]
   41860:	cmp	w0, #0x5f
   41864:	str	wzr, [x29, #88]
   41868:	b.ne	41878 <__asan_cplus_demangle_v3@@Base+0x40>  // b.any
   4186c:	ldrb	w0, [x19, #1]
   41870:	cmp	w0, #0x5a
   41874:	b.eq	41a70 <__asan_cplus_demangle_v3@@Base+0x238>  // b.none
   41878:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   4187c:	mov	x0, x19
   41880:	add	x1, x1, #0xb8
   41884:	mov	x2, #0x8                   	// #8
   41888:	bl	6b70 <__asan_internal_strncmp@plt>
   4188c:	cbnz	w0, 418c0 <__asan_cplus_demangle_v3@@Base+0x88>
   41890:	ldrb	w0, [x19, #8]
   41894:	mov	w2, #0x5f                  	// #95
   41898:	mov	w1, #0x24                  	// #36
   4189c:	cmp	w0, #0x2e
   418a0:	ccmp	w0, w2, #0x4, ne  // ne = any
   418a4:	ccmp	w0, w1, #0x4, ne  // ne = any
   418a8:	b.ne	418c0 <__asan_cplus_demangle_v3@@Base+0x88>  // b.any
   418ac:	ldrb	w0, [x19, #9]
   418b0:	mov	w1, #0x49                  	// #73
   418b4:	cmp	w0, #0x44
   418b8:	ccmp	w0, w1, #0x4, ne  // ne = any
   418bc:	b.eq	41a78 <__asan_cplus_demangle_v3@@Base+0x240>  // b.none
   418c0:	mov	w22, #0x0                   	// #0
   418c4:	tbz	w20, #4, 41a50 <__asan_cplus_demangle_v3@@Base+0x218>
   418c8:	mov	x0, x19
   418cc:	add	x21, x29, #0x68
   418d0:	bl	67e0 <__asan_internal_strlen@plt>
   418d4:	mov	x2, x0
   418d8:	mov	x3, x21
   418dc:	mov	x0, x19
   418e0:	mov	w1, w20
   418e4:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   418e8:	ldr	w0, [x29, #148]
   418ec:	tbnz	w20, #18, 418f8 <__asan_cplus_demangle_v3@@Base+0xc0>
   418f0:	cmp	w0, #0x800
   418f4:	b.hi	41a50 <__asan_cplus_demangle_v3@@Base+0x218>  // b.pmore
   418f8:	mov	w2, #0x18                  	// #24
   418fc:	ldrsw	x1, [x29, #164]
   41900:	mov	x19, sp
   41904:	cmp	w22, #0x1
   41908:	smull	x0, w0, w2
   4190c:	lsl	x1, x1, #3
   41910:	add	x0, x0, #0xf
   41914:	add	x1, x1, #0xf
   41918:	and	x0, x0, #0xfffffffffffffff0
   4191c:	and	x1, x1, #0xfffffffffffffff0
   41920:	sub	sp, sp, x0
   41924:	mov	x0, sp
   41928:	sub	sp, sp, x1
   4192c:	mov	x1, sp
   41930:	str	x0, [x29, #136]
   41934:	str	x1, [x29, #152]
   41938:	b.eq	41a38 <__asan_cplus_demangle_v3@@Base+0x200>  // b.none
   4193c:	sub	w0, w22, #0x2
   41940:	cmp	w0, #0x1
   41944:	b.hi	41a60 <__asan_cplus_demangle_v3@@Base+0x228>  // b.pmore
   41948:	ldr	x0, [x29, #128]
   4194c:	cmp	w22, #0x2
   41950:	cset	w2, ne  // ne = any
   41954:	add	x24, x0, #0xb
   41958:	str	x24, [x29, #128]
   4195c:	add	w22, w2, #0x44
   41960:	ldrb	w1, [x0, #11]
   41964:	cmp	w1, #0x5f
   41968:	b.ne	41978 <__asan_cplus_demangle_v3@@Base+0x140>  // b.any
   4196c:	ldrb	w1, [x0, #12]
   41970:	cmp	w1, #0x5a
   41974:	b.eq	41a94 <__asan_cplus_demangle_v3@@Base+0x25c>  // b.none
   41978:	mov	x0, x24
   4197c:	bl	67e0 <__asan_internal_strlen@plt>
   41980:	ldp	w23, w1, [x29, #144]
   41984:	mov	x2, x0
   41988:	cmp	w23, w1
   4198c:	b.ge	41ab0 <__asan_cplus_demangle_v3@@Base+0x278>  // b.tcont
   41990:	ldr	x0, [x29, #136]
   41994:	mov	w3, #0x18                  	// #24
   41998:	add	w1, w23, #0x1
   4199c:	smaddl	x23, w23, w3, x0
   419a0:	str	wzr, [x23, #4]
   419a4:	str	w1, [x29, #144]
   419a8:	mov	x0, x23
   419ac:	mov	x1, x24
   419b0:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   419b4:	cmp	w0, #0x0
   419b8:	csel	x23, x23, xzr, ne  // ne = any
   419bc:	mov	w1, w22
   419c0:	mov	x2, x23
   419c4:	mov	x0, x21
   419c8:	mov	x3, #0x0                   	// #0
   419cc:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   419d0:	mov	x21, x0
   419d4:	ldr	x0, [x29, #128]
   419d8:	bl	67e0 <__asan_internal_strlen@plt>
   419dc:	ldr	x1, [x29, #128]
   419e0:	add	x1, x1, x0
   419e4:	str	x1, [x29, #128]
   419e8:	tbz	w20, #0, 419f8 <__asan_cplus_demangle_v3@@Base+0x1c0>
   419ec:	ldr	x0, [x29, #128]
   419f0:	ldrb	w0, [x0]
   419f4:	cbnz	w0, 41a4c <__asan_cplus_demangle_v3@@Base+0x214>
   419f8:	cbz	x21, 41a4c <__asan_cplus_demangle_v3@@Base+0x214>
   419fc:	mov	x1, x21
   41a00:	mov	w0, w20
   41a04:	add	x3, x29, #0x40
   41a08:	adrp	x2, 33000 <__asan_backtrace_pcinfo@@Base+0x1b0>
   41a0c:	add	x2, x2, #0xf00
   41a10:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   41a14:	mov	sp, x19
   41a18:	cbz	w0, 41a50 <__asan_cplus_demangle_v3@@Base+0x218>
   41a1c:	ldr	x0, [x29, #64]
   41a20:	mov	sp, x29
   41a24:	ldp	x19, x20, [sp, #16]
   41a28:	ldp	x21, x22, [sp, #32]
   41a2c:	ldp	x23, x24, [sp, #48]
   41a30:	ldp	x29, x30, [sp], #192
   41a34:	ret
   41a38:	mov	x0, x21
   41a3c:	mov	w1, w22
   41a40:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   41a44:	mov	x21, x0
   41a48:	b	419e8 <__asan_cplus_demangle_v3@@Base+0x1b0>
   41a4c:	mov	sp, x19
   41a50:	ldr	x0, [x29, #64]
   41a54:	bl	66f0 <free@plt>
   41a58:	mov	x0, #0x0                   	// #0
   41a5c:	b	41a20 <__asan_cplus_demangle_v3@@Base+0x1e8>
   41a60:	mov	x0, x21
   41a64:	bl	6750 <__asan_cplus_demangle_type@plt>
   41a68:	mov	x21, x0
   41a6c:	b	419e8 <__asan_cplus_demangle_v3@@Base+0x1b0>
   41a70:	mov	w22, #0x1                   	// #1
   41a74:	b	418c8 <__asan_cplus_demangle_v3@@Base+0x90>
   41a78:	ldrb	w1, [x19, #10]
   41a7c:	cmp	w1, w2
   41a80:	b.ne	418c0 <__asan_cplus_demangle_v3@@Base+0x88>  // b.any
   41a84:	cmp	w0, #0x49
   41a88:	cset	w22, ne  // ne = any
   41a8c:	add	w22, w22, #0x2
   41a90:	b	418c8 <__asan_cplus_demangle_v3@@Base+0x90>
   41a94:	add	x2, x0, #0xd
   41a98:	mov	w1, #0x0                   	// #0
   41a9c:	mov	x0, x21
   41aa0:	str	x2, [x29, #128]
   41aa4:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   41aa8:	mov	x23, x0
   41aac:	b	419bc <__asan_cplus_demangle_v3@@Base+0x184>
   41ab0:	mov	x23, #0x0                   	// #0
   41ab4:	b	419a8 <__asan_cplus_demangle_v3@@Base+0x170>

0000000000041ab8 <__asan_cplus_demangle_v3_callback@@Base>:
   41ab8:	stp	x29, x30, [sp, #-176]!
   41abc:	mov	x29, sp
   41ac0:	stp	x19, x20, [sp, #16]
   41ac4:	mov	x19, x0
   41ac8:	mov	w20, w1
   41acc:	stp	x21, x22, [sp, #32]
   41ad0:	mov	x21, x2
   41ad4:	mov	x22, x3
   41ad8:	stp	x23, x24, [sp, #48]
   41adc:	stp	x25, x26, [sp, #64]
   41ae0:	ldrb	w0, [x0]
   41ae4:	cmp	w0, #0x5f
   41ae8:	b.ne	41af8 <__asan_cplus_demangle_v3_callback@@Base+0x40>  // b.any
   41aec:	ldrb	w0, [x19, #1]
   41af0:	cmp	w0, #0x5a
   41af4:	b.eq	41d00 <__asan_cplus_demangle_v3_callback@@Base+0x248>  // b.none
   41af8:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   41afc:	mov	x0, x19
   41b00:	add	x1, x1, #0xb8
   41b04:	mov	x2, #0x8                   	// #8
   41b08:	bl	6b70 <__asan_internal_strncmp@plt>
   41b0c:	cbnz	w0, 41b40 <__asan_cplus_demangle_v3_callback@@Base+0x88>
   41b10:	ldrb	w0, [x19, #8]
   41b14:	mov	w2, #0x5f                  	// #95
   41b18:	mov	w1, #0x24                  	// #36
   41b1c:	cmp	w0, #0x2e
   41b20:	ccmp	w0, w2, #0x4, ne  // ne = any
   41b24:	ccmp	w0, w1, #0x4, ne  // ne = any
   41b28:	b.ne	41b40 <__asan_cplus_demangle_v3_callback@@Base+0x88>  // b.any
   41b2c:	ldrb	w0, [x19, #9]
   41b30:	mov	w1, #0x49                  	// #73
   41b34:	cmp	w0, #0x44
   41b38:	ccmp	w0, w1, #0x4, ne  // ne = any
   41b3c:	b.eq	41d08 <__asan_cplus_demangle_v3_callback@@Base+0x250>  // b.none
   41b40:	mov	w24, #0x0                   	// #0
   41b44:	tbz	w20, #4, 41ce0 <__asan_cplus_demangle_v3_callback@@Base+0x228>
   41b48:	mov	x0, x19
   41b4c:	add	x23, x29, #0x58
   41b50:	bl	67e0 <__asan_internal_strlen@plt>
   41b54:	mov	x2, x0
   41b58:	mov	x3, x23
   41b5c:	mov	x0, x19
   41b60:	mov	w1, w20
   41b64:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   41b68:	ldr	w0, [x29, #132]
   41b6c:	tbnz	w20, #18, 41b78 <__asan_cplus_demangle_v3_callback@@Base+0xc0>
   41b70:	cmp	w0, #0x800
   41b74:	b.hi	41ce0 <__asan_cplus_demangle_v3_callback@@Base+0x228>  // b.pmore
   41b78:	mov	w2, #0x18                  	// #24
   41b7c:	ldrsw	x1, [x29, #148]
   41b80:	mov	x19, sp
   41b84:	cmp	w24, #0x1
   41b88:	smull	x0, w0, w2
   41b8c:	lsl	x1, x1, #3
   41b90:	add	x0, x0, #0xf
   41b94:	add	x1, x1, #0xf
   41b98:	and	x0, x0, #0xfffffffffffffff0
   41b9c:	and	x1, x1, #0xfffffffffffffff0
   41ba0:	sub	sp, sp, x0
   41ba4:	mov	x0, sp
   41ba8:	sub	sp, sp, x1
   41bac:	mov	x1, sp
   41bb0:	str	x0, [x29, #120]
   41bb4:	str	x1, [x29, #136]
   41bb8:	b.eq	41c9c <__asan_cplus_demangle_v3_callback@@Base+0x1e4>  // b.none
   41bbc:	sub	w0, w24, #0x2
   41bc0:	cmp	w0, #0x1
   41bc4:	b.hi	41cd0 <__asan_cplus_demangle_v3_callback@@Base+0x218>  // b.pmore
   41bc8:	ldr	x0, [x29, #112]
   41bcc:	cmp	w24, #0x2
   41bd0:	cset	w2, ne  // ne = any
   41bd4:	add	x26, x0, #0xb
   41bd8:	str	x26, [x29, #112]
   41bdc:	add	w24, w2, #0x44
   41be0:	ldrb	w1, [x0, #11]
   41be4:	cmp	w1, #0x5f
   41be8:	b.ne	41bf8 <__asan_cplus_demangle_v3_callback@@Base+0x140>  // b.any
   41bec:	ldrb	w1, [x0, #12]
   41bf0:	cmp	w1, #0x5a
   41bf4:	b.eq	41d24 <__asan_cplus_demangle_v3_callback@@Base+0x26c>  // b.none
   41bf8:	mov	x0, x26
   41bfc:	bl	67e0 <__asan_internal_strlen@plt>
   41c00:	ldp	w25, w1, [x29, #128]
   41c04:	mov	x2, x0
   41c08:	cmp	w25, w1
   41c0c:	b.ge	41d40 <__asan_cplus_demangle_v3_callback@@Base+0x288>  // b.tcont
   41c10:	ldr	x0, [x29, #120]
   41c14:	mov	w3, #0x18                  	// #24
   41c18:	add	w1, w25, #0x1
   41c1c:	smaddl	x25, w25, w3, x0
   41c20:	str	wzr, [x25, #4]
   41c24:	str	w1, [x29, #128]
   41c28:	mov	x0, x25
   41c2c:	mov	x1, x26
   41c30:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   41c34:	cmp	w0, #0x0
   41c38:	csel	x25, x25, xzr, ne  // ne = any
   41c3c:	mov	w1, w24
   41c40:	mov	x2, x25
   41c44:	mov	x0, x23
   41c48:	mov	x3, #0x0                   	// #0
   41c4c:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   41c50:	mov	x23, x0
   41c54:	ldr	x0, [x29, #112]
   41c58:	bl	67e0 <__asan_internal_strlen@plt>
   41c5c:	ldr	x1, [x29, #112]
   41c60:	add	x1, x1, x0
   41c64:	str	x1, [x29, #112]
   41c68:	tbz	w20, #0, 41cb0 <__asan_cplus_demangle_v3_callback@@Base+0x1f8>
   41c6c:	ldr	x1, [x29, #112]
   41c70:	mov	w0, #0x0                   	// #0
   41c74:	ldrb	w1, [x1]
   41c78:	cbz	w1, 41cb0 <__asan_cplus_demangle_v3_callback@@Base+0x1f8>
   41c7c:	mov	sp, x19
   41c80:	mov	sp, x29
   41c84:	ldp	x19, x20, [sp, #16]
   41c88:	ldp	x21, x22, [sp, #32]
   41c8c:	ldp	x23, x24, [sp, #48]
   41c90:	ldp	x25, x26, [sp, #64]
   41c94:	ldp	x29, x30, [sp], #176
   41c98:	ret
   41c9c:	mov	x0, x23
   41ca0:	mov	w1, w24
   41ca4:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   41ca8:	mov	x23, x0
   41cac:	tbnz	w20, #0, 41c6c <__asan_cplus_demangle_v3_callback@@Base+0x1b4>
   41cb0:	mov	w0, #0x0                   	// #0
   41cb4:	cbz	x23, 41c7c <__asan_cplus_demangle_v3_callback@@Base+0x1c4>
   41cb8:	mov	x3, x22
   41cbc:	mov	x2, x21
   41cc0:	mov	x1, x23
   41cc4:	mov	w0, w20
   41cc8:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   41ccc:	b	41c7c <__asan_cplus_demangle_v3_callback@@Base+0x1c4>
   41cd0:	mov	x0, x23
   41cd4:	bl	6750 <__asan_cplus_demangle_type@plt>
   41cd8:	mov	x23, x0
   41cdc:	b	41c68 <__asan_cplus_demangle_v3_callback@@Base+0x1b0>
   41ce0:	mov	sp, x29
   41ce4:	mov	w0, #0x0                   	// #0
   41ce8:	ldp	x19, x20, [sp, #16]
   41cec:	ldp	x21, x22, [sp, #32]
   41cf0:	ldp	x23, x24, [sp, #48]
   41cf4:	ldp	x25, x26, [sp, #64]
   41cf8:	ldp	x29, x30, [sp], #176
   41cfc:	ret
   41d00:	mov	w24, #0x1                   	// #1
   41d04:	b	41b48 <__asan_cplus_demangle_v3_callback@@Base+0x90>
   41d08:	ldrb	w1, [x19, #10]
   41d0c:	cmp	w1, w2
   41d10:	b.ne	41b40 <__asan_cplus_demangle_v3_callback@@Base+0x88>  // b.any
   41d14:	cmp	w0, #0x49
   41d18:	cset	w24, ne  // ne = any
   41d1c:	add	w24, w24, #0x2
   41d20:	b	41b48 <__asan_cplus_demangle_v3_callback@@Base+0x90>
   41d24:	add	x2, x0, #0xd
   41d28:	mov	w1, #0x0                   	// #0
   41d2c:	mov	x0, x23
   41d30:	str	x2, [x29, #112]
   41d34:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   41d38:	mov	x25, x0
   41d3c:	b	41c3c <__asan_cplus_demangle_v3_callback@@Base+0x184>
   41d40:	mov	x25, #0x0                   	// #0
   41d44:	b	41c28 <__asan_cplus_demangle_v3_callback@@Base+0x170>

0000000000041d48 <__asan_java_demangle_v3@@Base>:
   41d48:	stp	x29, x30, [sp, #-192]!
   41d4c:	mov	x29, sp
   41d50:	stp	x19, x20, [sp, #16]
   41d54:	mov	x19, x0
   41d58:	stp	x21, x22, [sp, #32]
   41d5c:	str	x23, [sp, #48]
   41d60:	str	xzr, [x29, #64]
   41d64:	ldrb	w0, [x0]
   41d68:	stp	xzr, xzr, [x29, #72]
   41d6c:	cmp	w0, #0x5f
   41d70:	str	wzr, [x29, #88]
   41d74:	b.ne	41d84 <__asan_java_demangle_v3@@Base+0x3c>  // b.any
   41d78:	ldrb	w0, [x19, #1]
   41d7c:	cmp	w0, #0x5a
   41d80:	b.eq	41df0 <__asan_java_demangle_v3@@Base+0xa8>  // b.none
   41d84:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   41d88:	mov	x0, x19
   41d8c:	add	x1, x1, #0xb8
   41d90:	mov	x2, #0x8                   	// #8
   41d94:	bl	6b70 <__asan_internal_strncmp@plt>
   41d98:	cbnz	w0, 41dcc <__asan_java_demangle_v3@@Base+0x84>
   41d9c:	ldrb	w0, [x19, #8]
   41da0:	mov	w2, #0x5f                  	// #95
   41da4:	mov	w1, #0x24                  	// #36
   41da8:	cmp	w0, #0x2e
   41dac:	ccmp	w0, w2, #0x4, ne  // ne = any
   41db0:	ccmp	w0, w1, #0x4, ne  // ne = any
   41db4:	b.ne	41dcc <__asan_java_demangle_v3@@Base+0x84>  // b.any
   41db8:	ldrb	w0, [x19, #9]
   41dbc:	mov	w1, #0x49                  	// #73
   41dc0:	cmp	w0, #0x44
   41dc4:	ccmp	w0, w1, #0x4, ne  // ne = any
   41dc8:	b.eq	41ec4 <__asan_java_demangle_v3@@Base+0x17c>  // b.none
   41dcc:	ldr	x0, [x29, #64]
   41dd0:	bl	66f0 <free@plt>
   41dd4:	mov	sp, x29
   41dd8:	mov	x0, #0x0                   	// #0
   41ddc:	ldp	x19, x20, [sp, #16]
   41de0:	ldp	x21, x22, [sp, #32]
   41de4:	ldr	x23, [sp, #48]
   41de8:	ldp	x29, x30, [sp], #192
   41dec:	ret
   41df0:	mov	w23, #0xffffffff            	// #-1
   41df4:	mov	w21, #0x1                   	// #1
   41df8:	mov	x0, x19
   41dfc:	add	x20, x29, #0x68
   41e00:	bl	67e0 <__asan_internal_strlen@plt>
   41e04:	mov	x2, x0
   41e08:	mov	x3, x20
   41e0c:	mov	x0, x19
   41e10:	mov	w1, #0x25                  	// #37
   41e14:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   41e18:	ldr	w0, [x29, #148]
   41e1c:	cmp	w0, #0x800
   41e20:	b.hi	41dcc <__asan_java_demangle_v3@@Base+0x84>  // b.pmore
   41e24:	mov	w2, #0x18                  	// #24
   41e28:	ldrsw	x1, [x29, #164]
   41e2c:	mov	x22, sp
   41e30:	cmp	w23, #0x1
   41e34:	smull	x0, w0, w2
   41e38:	lsl	x1, x1, #3
   41e3c:	add	x0, x0, #0xf
   41e40:	add	x1, x1, #0xf
   41e44:	and	x0, x0, #0xfffffffffffffff0
   41e48:	and	x1, x1, #0xfffffffffffffff0
   41e4c:	sub	sp, sp, x0
   41e50:	mov	x0, sp
   41e54:	sub	sp, sp, x1
   41e58:	mov	x1, sp
   41e5c:	str	x0, [x29, #136]
   41e60:	str	x1, [x29, #152]
   41e64:	b.ls	41ef0 <__asan_java_demangle_v3@@Base+0x1a8>  // b.plast
   41e68:	mov	x0, x20
   41e6c:	mov	w1, #0x1                   	// #1
   41e70:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   41e74:	mov	x19, x0
   41e78:	ldr	x0, [x29, #128]
   41e7c:	ldrb	w0, [x0]
   41e80:	cbnz	w0, 41ee8 <__asan_java_demangle_v3@@Base+0x1a0>
   41e84:	cbz	x19, 41ee8 <__asan_java_demangle_v3@@Base+0x1a0>
   41e88:	mov	x1, x19
   41e8c:	add	x3, x29, #0x40
   41e90:	adrp	x2, 33000 <__asan_backtrace_pcinfo@@Base+0x1b0>
   41e94:	mov	w0, #0x25                  	// #37
   41e98:	add	x2, x2, #0xf00
   41e9c:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   41ea0:	mov	sp, x22
   41ea4:	cbz	w0, 41dcc <__asan_java_demangle_v3@@Base+0x84>
   41ea8:	ldr	x0, [x29, #64]
   41eac:	mov	sp, x29
   41eb0:	ldp	x19, x20, [sp, #16]
   41eb4:	ldp	x21, x22, [sp, #32]
   41eb8:	ldr	x23, [sp, #48]
   41ebc:	ldp	x29, x30, [sp], #192
   41ec0:	ret
   41ec4:	ldrb	w1, [x19, #10]
   41ec8:	cmp	w1, w2
   41ecc:	b.ne	41dcc <__asan_java_demangle_v3@@Base+0x84>  // b.any
   41ed0:	cmp	w0, #0x49
   41ed4:	mov	w21, #0x2                   	// #2
   41ed8:	mov	w0, #0x3                   	// #3
   41edc:	cset	w23, ne  // ne = any
   41ee0:	csel	w21, w21, w0, eq  // eq = none
   41ee4:	b	41df8 <__asan_java_demangle_v3@@Base+0xb0>
   41ee8:	mov	sp, x22
   41eec:	b	41dcc <__asan_java_demangle_v3@@Base+0x84>
   41ef0:	ldr	x0, [x29, #128]
   41ef4:	cmp	w21, #0x2
   41ef8:	cset	w21, ne  // ne = any
   41efc:	add	x23, x0, #0xb
   41f00:	str	x23, [x29, #128]
   41f04:	add	w21, w21, #0x44
   41f08:	ldrb	w1, [x0, #11]
   41f0c:	cmp	w1, #0x5f
   41f10:	b.ne	41f20 <__asan_java_demangle_v3@@Base+0x1d8>  // b.any
   41f14:	ldrb	w1, [x0, #12]
   41f18:	cmp	w1, #0x5a
   41f1c:	b.eq	41f94 <__asan_java_demangle_v3@@Base+0x24c>  // b.none
   41f20:	mov	x0, x23
   41f24:	bl	67e0 <__asan_internal_strlen@plt>
   41f28:	ldp	w19, w1, [x29, #144]
   41f2c:	mov	x2, x0
   41f30:	cmp	w19, w1
   41f34:	b.ge	41fc0 <__asan_java_demangle_v3@@Base+0x278>  // b.tcont
   41f38:	ldr	x0, [x29, #136]
   41f3c:	mov	w3, #0x18                  	// #24
   41f40:	add	w1, w19, #0x1
   41f44:	smaddl	x19, w19, w3, x0
   41f48:	str	wzr, [x19, #4]
   41f4c:	str	w1, [x29, #144]
   41f50:	mov	x0, x19
   41f54:	mov	x1, x23
   41f58:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   41f5c:	cmp	w0, #0x0
   41f60:	csel	x19, x19, xzr, ne  // ne = any
   41f64:	mov	x2, x19
   41f68:	mov	w1, w21
   41f6c:	mov	x3, #0x0                   	// #0
   41f70:	mov	x0, x20
   41f74:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   41f78:	mov	x19, x0
   41f7c:	ldr	x0, [x29, #128]
   41f80:	bl	67e0 <__asan_internal_strlen@plt>
   41f84:	ldr	x1, [x29, #128]
   41f88:	add	x0, x1, x0
   41f8c:	str	x0, [x29, #128]
   41f90:	b	41e7c <__asan_java_demangle_v3@@Base+0x134>
   41f94:	add	x1, x0, #0xd
   41f98:	str	x1, [x29, #128]
   41f9c:	mov	w1, #0x54                  	// #84
   41fa0:	ldrb	w0, [x0, #13]
   41fa4:	cmp	w0, #0x47
   41fa8:	ccmp	w0, w1, #0x4, ne  // ne = any
   41fac:	b.ne	41fc8 <__asan_java_demangle_v3@@Base+0x280>  // b.any
   41fb0:	mov	x0, x20
   41fb4:	bl	3ff78 <__asan_cplus_demangle_type@@Base+0x2ba8>
   41fb8:	mov	x19, x0
   41fbc:	b	41f64 <__asan_java_demangle_v3@@Base+0x21c>
   41fc0:	mov	x19, #0x0                   	// #0
   41fc4:	b	41f50 <__asan_java_demangle_v3@@Base+0x208>
   41fc8:	mov	x0, x20
   41fcc:	mov	w1, #0x0                   	// #0
   41fd0:	bl	41068 <__asan_cplus_demangle_type@@Base+0x3c98>
   41fd4:	mov	x19, x0
   41fd8:	b	41f64 <__asan_java_demangle_v3@@Base+0x21c>
   41fdc:	nop

0000000000041fe0 <__asan_java_demangle_v3_callback@@Base>:
   41fe0:	stp	x29, x30, [sp, #-176]!
   41fe4:	mov	x29, sp
   41fe8:	stp	x19, x20, [sp, #16]
   41fec:	mov	x19, x0
   41ff0:	mov	x20, x1
   41ff4:	stp	x21, x22, [sp, #32]
   41ff8:	mov	x21, x2
   41ffc:	stp	x23, x24, [sp, #48]
   42000:	str	x25, [sp, #64]
   42004:	ldrb	w0, [x0]
   42008:	cmp	w0, #0x5f
   4200c:	b.ne	4201c <__asan_java_demangle_v3_callback@@Base+0x3c>  // b.any
   42010:	ldrb	w0, [x19, #1]
   42014:	cmp	w0, #0x5a
   42018:	b.eq	42084 <__asan_java_demangle_v3_callback@@Base+0xa4>  // b.none
   4201c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   42020:	mov	x0, x19
   42024:	add	x1, x1, #0xb8
   42028:	mov	x2, #0x8                   	// #8
   4202c:	bl	6b70 <__asan_internal_strncmp@plt>
   42030:	cbnz	w0, 42064 <__asan_java_demangle_v3_callback@@Base+0x84>
   42034:	ldrb	w0, [x19, #8]
   42038:	mov	w2, #0x5f                  	// #95
   4203c:	mov	w1, #0x24                  	// #36
   42040:	cmp	w0, #0x2e
   42044:	ccmp	w0, w2, #0x4, ne  // ne = any
   42048:	ccmp	w0, w1, #0x4, ne  // ne = any
   4204c:	b.ne	42064 <__asan_java_demangle_v3_callback@@Base+0x84>  // b.any
   42050:	ldrb	w0, [x19, #9]
   42054:	mov	w1, #0x49                  	// #73
   42058:	cmp	w0, #0x44
   4205c:	ccmp	w0, w1, #0x4, ne  // ne = any
   42060:	b.eq	42160 <__asan_java_demangle_v3_callback@@Base+0x180>  // b.none
   42064:	mov	sp, x29
   42068:	mov	w0, #0x0                   	// #0
   4206c:	ldp	x19, x20, [sp, #16]
   42070:	ldp	x21, x22, [sp, #32]
   42074:	ldp	x23, x24, [sp, #48]
   42078:	ldr	x25, [sp, #64]
   4207c:	ldp	x29, x30, [sp], #176
   42080:	ret
   42084:	mov	w25, #0xffffffff            	// #-1
   42088:	mov	w23, #0x1                   	// #1
   4208c:	mov	x0, x19
   42090:	add	x22, x29, #0x58
   42094:	bl	67e0 <__asan_internal_strlen@plt>
   42098:	mov	x2, x0
   4209c:	mov	x3, x22
   420a0:	mov	x0, x19
   420a4:	mov	w1, #0x25                  	// #37
   420a8:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   420ac:	ldr	w0, [x29, #132]
   420b0:	cmp	w0, #0x800
   420b4:	b.hi	42064 <__asan_java_demangle_v3_callback@@Base+0x84>  // b.pmore
   420b8:	mov	w1, #0x18                  	// #24
   420bc:	ldrsw	x3, [x29, #148]
   420c0:	mov	x24, sp
   420c4:	cmp	w25, #0x1
   420c8:	smull	x0, w0, w1
   420cc:	lsl	x3, x3, #3
   420d0:	add	x0, x0, #0xf
   420d4:	add	x3, x3, #0xf
   420d8:	and	x0, x0, #0xfffffffffffffff0
   420dc:	and	x3, x3, #0xfffffffffffffff0
   420e0:	sub	sp, sp, x0
   420e4:	mov	x0, sp
   420e8:	sub	sp, sp, x3
   420ec:	mov	x1, sp
   420f0:	str	x0, [x29, #120]
   420f4:	str	x1, [x29, #136]
   420f8:	b.ls	42184 <__asan_java_demangle_v3_callback@@Base+0x1a4>  // b.plast
   420fc:	mov	x0, x22
   42100:	mov	w1, #0x1                   	// #1
   42104:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   42108:	mov	x19, x0
   4210c:	ldr	x0, [x29, #112]
   42110:	ldrb	w1, [x0]
   42114:	mov	w0, #0x0                   	// #0
   42118:	cmp	w1, #0x0
   4211c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   42120:	b.ne	42144 <__asan_java_demangle_v3_callback@@Base+0x164>  // b.any
   42124:	mov	sp, x24
   42128:	mov	sp, x29
   4212c:	ldp	x19, x20, [sp, #16]
   42130:	ldp	x21, x22, [sp, #32]
   42134:	ldp	x23, x24, [sp, #48]
   42138:	ldr	x25, [sp, #64]
   4213c:	ldp	x29, x30, [sp], #176
   42140:	ret
   42144:	mov	x3, x21
   42148:	mov	x2, x20
   4214c:	mov	x1, x19
   42150:	mov	w0, #0x25                  	// #37
   42154:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   42158:	mov	sp, x24
   4215c:	b	42128 <__asan_java_demangle_v3_callback@@Base+0x148>
   42160:	ldrb	w1, [x19, #10]
   42164:	cmp	w1, w2
   42168:	b.ne	42064 <__asan_java_demangle_v3_callback@@Base+0x84>  // b.any
   4216c:	cmp	w0, #0x49
   42170:	mov	w23, #0x2                   	// #2
   42174:	mov	w0, #0x3                   	// #3
   42178:	cset	w25, ne  // ne = any
   4217c:	csel	w23, w23, w0, eq  // eq = none
   42180:	b	4208c <__asan_java_demangle_v3_callback@@Base+0xac>
   42184:	ldr	x0, [x29, #112]
   42188:	cmp	w23, #0x2
   4218c:	cset	w23, ne  // ne = any
   42190:	add	x25, x0, #0xb
   42194:	str	x25, [x29, #112]
   42198:	add	w23, w23, #0x44
   4219c:	ldrb	w1, [x0, #11]
   421a0:	cmp	w1, #0x5f
   421a4:	b.ne	421b4 <__asan_java_demangle_v3_callback@@Base+0x1d4>  // b.any
   421a8:	ldrb	w1, [x0, #12]
   421ac:	cmp	w1, #0x5a
   421b0:	b.eq	42228 <__asan_java_demangle_v3_callback@@Base+0x248>  // b.none
   421b4:	mov	x0, x25
   421b8:	bl	67e0 <__asan_internal_strlen@plt>
   421bc:	ldp	w19, w1, [x29, #128]
   421c0:	mov	x2, x0
   421c4:	cmp	w19, w1
   421c8:	b.ge	42244 <__asan_java_demangle_v3_callback@@Base+0x264>  // b.tcont
   421cc:	ldr	x0, [x29, #120]
   421d0:	mov	w3, #0x18                  	// #24
   421d4:	add	w1, w19, #0x1
   421d8:	smaddl	x19, w19, w3, x0
   421dc:	str	wzr, [x19, #4]
   421e0:	str	w1, [x29, #128]
   421e4:	mov	x0, x19
   421e8:	mov	x1, x25
   421ec:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   421f0:	cmp	w0, #0x0
   421f4:	csel	x19, x19, xzr, ne  // ne = any
   421f8:	mov	x2, x19
   421fc:	mov	w1, w23
   42200:	mov	x3, #0x0                   	// #0
   42204:	mov	x0, x22
   42208:	bl	33c80 <__asan_backtrace_create_state@@Base+0x98>
   4220c:	mov	x19, x0
   42210:	ldr	x0, [x29, #112]
   42214:	bl	67e0 <__asan_internal_strlen@plt>
   42218:	ldr	x1, [x29, #112]
   4221c:	add	x0, x1, x0
   42220:	str	x0, [x29, #112]
   42224:	b	42110 <__asan_java_demangle_v3_callback@@Base+0x130>
   42228:	add	x2, x0, #0xd
   4222c:	mov	w1, #0x0                   	// #0
   42230:	mov	x0, x22
   42234:	str	x2, [x29, #112]
   42238:	bl	40828 <__asan_cplus_demangle_type@@Base+0x3458>
   4223c:	mov	x19, x0
   42240:	b	421f8 <__asan_java_demangle_v3_callback@@Base+0x218>
   42244:	mov	x19, #0x0                   	// #0
   42248:	b	421e4 <__asan_java_demangle_v3_callback@@Base+0x204>
   4224c:	nop

0000000000042250 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   42250:	stp	x29, x30, [sp, #-128]!
   42254:	mov	x29, sp
   42258:	stp	x19, x20, [sp, #16]
   4225c:	mov	x20, x0
   42260:	add	x19, x29, #0x28
   42264:	bl	67e0 <__asan_internal_strlen@plt>
   42268:	mov	x2, x0
   4226c:	mov	x3, x19
   42270:	mov	x0, x20
   42274:	mov	w1, #0x4000                	// #16384
   42278:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   4227c:	ldr	w4, [x29, #84]
   42280:	mov	w3, #0x18                  	// #24
   42284:	ldrsw	x2, [x29, #100]
   42288:	mov	x20, sp
   4228c:	mov	x0, x19
   42290:	mov	w1, #0x1                   	// #1
   42294:	smull	x4, w4, w3
   42298:	lsl	x2, x2, #3
   4229c:	add	x2, x2, #0xf
   422a0:	add	x4, x4, #0xf
   422a4:	and	x2, x2, #0xfffffffffffffff0
   422a8:	and	x4, x4, #0xfffffffffffffff0
   422ac:	sub	sp, sp, x4
   422b0:	mov	x3, sp
   422b4:	sub	sp, sp, x2
   422b8:	mov	x2, sp
   422bc:	str	x3, [x29, #72]
   422c0:	str	x2, [x29, #88]
   422c4:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   422c8:	cbz	x0, 42334 <__asan_is_gnu_v3_mangled_ctor@@Base+0xe4>
   422cc:	ldr	w1, [x0]
   422d0:	cmp	w1, #0x7
   422d4:	b.eq	42314 <__asan_is_gnu_v3_mangled_ctor@@Base+0xc4>  // b.none
   422d8:	b.hi	422ec <__asan_is_gnu_v3_mangled_ctor@@Base+0x9c>  // b.pmore
   422dc:	sub	w2, w1, #0x3
   422e0:	cmp	w1, #0x2
   422e4:	b.hi	42304 <__asan_is_gnu_v3_mangled_ctor@@Base+0xb4>  // b.pmore
   422e8:	cbnz	w1, 4232c <__asan_is_gnu_v3_mangled_ctor@@Base+0xdc>
   422ec:	mov	sp, x20
   422f0:	mov	w0, #0x0                   	// #0
   422f4:	mov	sp, x29
   422f8:	ldp	x19, x20, [sp, #16]
   422fc:	ldp	x29, x30, [sp], #128
   42300:	ret
   42304:	cmp	w2, #0x1
   42308:	b.hi	422ec <__asan_is_gnu_v3_mangled_ctor@@Base+0x9c>  // b.pmore
   4230c:	ldr	x0, [x0, #8]
   42310:	b	422c8 <__asan_is_gnu_v3_mangled_ctor@@Base+0x78>
   42314:	ldr	w0, [x0, #8]
   42318:	mov	sp, x20
   4231c:	mov	sp, x29
   42320:	ldp	x19, x20, [sp, #16]
   42324:	ldp	x29, x30, [sp], #128
   42328:	ret
   4232c:	ldr	x0, [x0, #16]
   42330:	b	422c8 <__asan_is_gnu_v3_mangled_ctor@@Base+0x78>
   42334:	mov	w0, #0x0                   	// #0
   42338:	mov	sp, x20
   4233c:	b	422f4 <__asan_is_gnu_v3_mangled_ctor@@Base+0xa4>

0000000000042340 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   42340:	stp	x29, x30, [sp, #-128]!
   42344:	mov	x29, sp
   42348:	stp	x19, x20, [sp, #16]
   4234c:	mov	x20, x0
   42350:	add	x19, x29, #0x28
   42354:	bl	67e0 <__asan_internal_strlen@plt>
   42358:	mov	x2, x0
   4235c:	mov	x3, x19
   42360:	mov	x0, x20
   42364:	mov	w1, #0x4000                	// #16384
   42368:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   4236c:	ldr	w4, [x29, #84]
   42370:	mov	w3, #0x18                  	// #24
   42374:	ldrsw	x2, [x29, #100]
   42378:	mov	x20, sp
   4237c:	mov	x0, x19
   42380:	mov	w1, #0x1                   	// #1
   42384:	smull	x4, w4, w3
   42388:	lsl	x2, x2, #3
   4238c:	add	x2, x2, #0xf
   42390:	add	x4, x4, #0xf
   42394:	and	x2, x2, #0xfffffffffffffff0
   42398:	and	x4, x4, #0xfffffffffffffff0
   4239c:	sub	sp, sp, x4
   423a0:	mov	x3, sp
   423a4:	sub	sp, sp, x2
   423a8:	mov	x2, sp
   423ac:	str	x3, [x29, #72]
   423b0:	str	x2, [x29, #88]
   423b4:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   423b8:	cbz	x0, 4242c <__asan_is_gnu_v3_mangled_dtor@@Base+0xec>
   423bc:	ldr	w1, [x0]
   423c0:	cmp	w1, #0x7
   423c4:	b.eq	423dc <__asan_is_gnu_v3_mangled_dtor@@Base+0x9c>  // b.none
   423c8:	b.hi	42404 <__asan_is_gnu_v3_mangled_dtor@@Base+0xc4>  // b.pmore
   423cc:	sub	w2, w1, #0x3
   423d0:	cmp	w1, #0x2
   423d4:	b.hi	423f4 <__asan_is_gnu_v3_mangled_dtor@@Base+0xb4>  // b.pmore
   423d8:	cbnz	w1, 42424 <__asan_is_gnu_v3_mangled_dtor@@Base+0xe4>
   423dc:	mov	sp, x20
   423e0:	mov	w0, #0x0                   	// #0
   423e4:	mov	sp, x29
   423e8:	ldp	x19, x20, [sp, #16]
   423ec:	ldp	x29, x30, [sp], #128
   423f0:	ret
   423f4:	cmp	w2, #0x1
   423f8:	b.hi	423dc <__asan_is_gnu_v3_mangled_dtor@@Base+0x9c>  // b.pmore
   423fc:	ldr	x0, [x0, #8]
   42400:	b	423b8 <__asan_is_gnu_v3_mangled_dtor@@Base+0x78>
   42404:	cmp	w1, #0x8
   42408:	b.ne	423dc <__asan_is_gnu_v3_mangled_dtor@@Base+0x9c>  // b.any
   4240c:	ldr	w0, [x0, #8]
   42410:	mov	sp, x20
   42414:	mov	sp, x29
   42418:	ldp	x19, x20, [sp, #16]
   4241c:	ldp	x29, x30, [sp], #128
   42420:	ret
   42424:	ldr	x0, [x0, #16]
   42428:	b	423b8 <__asan_is_gnu_v3_mangled_dtor@@Base+0x78>
   4242c:	mov	w0, #0x0                   	// #0
   42430:	mov	sp, x20
   42434:	b	423e4 <__asan_is_gnu_v3_mangled_dtor@@Base+0xa4>

0000000000042438 <__asan_internal_memcpy@@Base>:
   42438:	b	1b5b8 <__sanitizer_set_report_fd@@Base+0x1cf0>
   4243c:	nop

0000000000042440 <__asan_internal_memset@@Base>:
   42440:	b	1ba80 <__sanitizer_set_report_fd@@Base+0x21b8>
   42444:	nop

0000000000042448 <__asan_internal_memcmp@@Base>:
   42448:	b	1b578 <__sanitizer_set_report_fd@@Base+0x1cb0>
   4244c:	nop

0000000000042450 <__asan_internal_strcmp@@Base>:
   42450:	b	1bd58 <__sanitizer_set_report_fd@@Base+0x2490>
   42454:	nop

0000000000042458 <__asan_internal_strncmp@@Base>:
   42458:	b	1bda0 <__sanitizer_set_report_fd@@Base+0x24d8>
   4245c:	nop

0000000000042460 <__asan_internal_strlen@@Base>:
   42460:	b	1be88 <__sanitizer_set_report_fd@@Base+0x25c0>
   42464:	nop

0000000000042468 <__asan_internal_strnlen@@Base>:
   42468:	b	1cd50 <__sanitizer_set_report_fd@@Base+0x3488>
   4246c:	nop
   42470:	stp	x29, x30, [sp, #-16]!
   42474:	mov	x0, x4
   42478:	mov	w2, #0xffffffff            	// #-1
   4247c:	mov	x29, sp
   42480:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   42484:	add	x1, x1, #0x7a0
   42488:	blr	x3
   4248c:	mov	w0, #0x0                   	// #0
   42490:	ldp	x29, x30, [sp], #16
   42494:	ret
   42498:	mov	x0, x4
   4249c:	mov	x16, x3
   424a0:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   424a4:	mov	w2, #0xffffffff            	// #-1
   424a8:	add	x1, x1, #0x7c0
   424ac:	br	x16
   424b0:	ldr	x2, [x0, #8]
   424b4:	mov	w3, #0xffffffff            	// #-1
   424b8:	ldr	x1, [x1, #8]
   424bc:	cmp	x2, x1
   424c0:	cset	w0, hi  // hi = pmore
   424c4:	csel	w0, w0, w3, cs  // cs = hs, nlast
   424c8:	ret
   424cc:	nop
   424d0:	stp	x29, x30, [sp, #-48]!
   424d4:	mov	x12, x2
   424d8:	mov	x17, #0x15af                	// #5551
   424dc:	mov	x29, sp
   424e0:	cmp	x2, x17
   424e4:	ldrb	w18, [x0]
   424e8:	ldrb	w2, [x0, #1]
   424ec:	mov	x11, x1
   424f0:	ldrb	w1, [x0, #2]
   424f4:	ldrb	w0, [x0, #3]
   424f8:	orr	w18, w2, w18, lsl #8
   424fc:	orr	w18, w1, w18, lsl #8
   42500:	orr	w18, w0, w18, lsl #8
   42504:	b.ls	42780 <__asan_internal_strnlen@@Base+0x318>  // b.plast
   42508:	mov	x16, #0x15b0                	// #5552
   4250c:	mov	w14, #0x8071                	// #32881
   42510:	add	x10, x11, x16
   42514:	mov	w9, #0x0                   	// #0
   42518:	mov	w5, #0x1                   	// #1
   4251c:	mov	x15, #0xffffffffffffea50    	// #-5552
   42520:	movk	w14, #0x8007, lsl #16
   42524:	mov	w13, #0xfff1                	// #65521
   42528:	stp	x19, x20, [sp, #16]
   4252c:	stp	x21, x22, [sp, #32]
   42530:	add	x2, x10, x15
   42534:	nop
   42538:	ldrb	w3, [x2]
   4253c:	add	x2, x2, #0x10
   42540:	ldurb	w4, [x2, #-15]
   42544:	mov	x11, x10
   42548:	ldurb	w0, [x2, #-14]
   4254c:	add	w3, w3, w5
   42550:	ldurb	w1, [x2, #-13]
   42554:	add	w4, w4, w3
   42558:	add	w0, w0, w4
   4255c:	ldurb	w8, [x2, #-12]
   42560:	ldurb	w22, [x2, #-11]
   42564:	add	w1, w1, w0
   42568:	ldurb	w7, [x2, #-10]
   4256c:	add	w8, w8, w1
   42570:	ldurb	w21, [x2, #-9]
   42574:	add	w22, w22, w8
   42578:	ldurb	w6, [x2, #-8]
   4257c:	add	w7, w7, w22
   42580:	ldurb	w19, [x2, #-7]
   42584:	add	w21, w21, w7
   42588:	ldurb	w5, [x2, #-6]
   4258c:	add	w6, w6, w21
   42590:	ldurb	w30, [x2, #-5]
   42594:	add	w19, w19, w6
   42598:	ldurb	w20, [x2, #-3]
   4259c:	add	w3, w3, w4
   425a0:	add	w1, w0, w1
   425a4:	ldurb	w4, [x2, #-4]
   425a8:	add	w5, w5, w19
   425ac:	add	w1, w1, w3
   425b0:	ldurb	w3, [x2, #-2]
   425b4:	add	w30, w30, w5
   425b8:	add	w8, w8, w22
   425bc:	add	w0, w7, w21
   425c0:	add	w4, w4, w30
   425c4:	add	w1, w1, w8
   425c8:	add	w1, w1, w0
   425cc:	add	w7, w20, w4
   425d0:	add	w0, w6, w19
   425d4:	ldurb	w6, [x2, #-1]
   425d8:	add	w5, w5, w30
   425dc:	add	w3, w3, w7
   425e0:	add	w0, w1, w0
   425e4:	add	w4, w4, w7
   425e8:	add	w0, w0, w5
   425ec:	add	w5, w6, w3
   425f0:	add	w0, w0, w4
   425f4:	add	w3, w3, w5
   425f8:	add	w0, w0, w3
   425fc:	cmp	x10, x2
   42600:	add	w9, w9, w0
   42604:	b.ne	42538 <__asan_internal_strnlen@@Base+0xd0>  // b.any
   42608:	umull	x1, w5, w14
   4260c:	add	x12, x12, x15
   42610:	umull	x0, w9, w14
   42614:	cmp	x12, x17
   42618:	add	x10, x10, x16
   4261c:	lsr	x1, x1, #47
   42620:	lsr	x0, x0, #47
   42624:	msub	w5, w1, w13, w5
   42628:	msub	w9, w0, w13, w9
   4262c:	b.hi	42530 <__asan_internal_strnlen@@Base+0xc8>  // b.pmore
   42630:	ldp	x19, x20, [sp, #16]
   42634:	ldp	x21, x22, [sp, #32]
   42638:	cmp	x12, #0xf
   4263c:	b.ls	42720 <__asan_internal_strnlen@@Base+0x2b8>  // b.plast
   42640:	sub	x7, x12, #0x10
   42644:	and	x7, x7, #0xfffffffffffffff0
   42648:	add	x7, x7, #0x10
   4264c:	add	x7, x11, x7
   42650:	ldrb	w1, [x11]
   42654:	add	x11, x11, #0x10
   42658:	ldurb	w8, [x11, #-15]
   4265c:	ldurb	w0, [x11, #-14]
   42660:	add	w1, w1, w5
   42664:	ldurb	w2, [x11, #-13]
   42668:	add	w8, w8, w1
   4266c:	ldurb	w6, [x11, #-12]
   42670:	add	w0, w0, w8
   42674:	ldurb	w15, [x11, #-11]
   42678:	add	w2, w2, w0
   4267c:	ldurb	w5, [x11, #-10]
   42680:	add	w6, w6, w2
   42684:	ldurb	w14, [x11, #-9]
   42688:	add	w15, w15, w6
   4268c:	ldurb	w3, [x11, #-8]
   42690:	add	w5, w5, w15
   42694:	ldurb	w13, [x11, #-7]
   42698:	add	w14, w14, w5
   4269c:	ldurb	w4, [x11, #-6]
   426a0:	add	w3, w3, w14
   426a4:	ldurb	w10, [x11, #-5]
   426a8:	add	w1, w1, w8
   426ac:	add	w13, w13, w3
   426b0:	ldurb	w8, [x11, #-3]
   426b4:	add	w0, w0, w2
   426b8:	ldurb	w2, [x11, #-4]
   426bc:	add	w4, w4, w13
   426c0:	add	w0, w0, w1
   426c4:	ldurb	w1, [x11, #-2]
   426c8:	add	w6, w6, w15
   426cc:	add	w10, w10, w4
   426d0:	add	w0, w0, w6
   426d4:	add	w5, w5, w14
   426d8:	add	w2, w2, w10
   426dc:	add	w0, w0, w5
   426e0:	add	w6, w8, w2
   426e4:	ldurb	w5, [x11, #-1]
   426e8:	add	w3, w3, w13
   426ec:	add	w1, w1, w6
   426f0:	add	w0, w0, w3
   426f4:	add	w4, w4, w10
   426f8:	add	w2, w2, w6
   426fc:	add	w0, w0, w4
   42700:	add	w5, w5, w1
   42704:	add	w0, w0, w2
   42708:	add	w1, w1, w5
   4270c:	add	w0, w0, w1
   42710:	cmp	x11, x7
   42714:	add	w9, w9, w0
   42718:	b.ne	42650 <__asan_internal_strnlen@@Base+0x1e8>  // b.any
   4271c:	and	x12, x12, #0xf
   42720:	cbz	x12, 42748 <__asan_internal_strnlen@@Base+0x2e0>
   42724:	mov	w2, #0x1                   	// #1
   42728:	sub	w2, w2, w11
   4272c:	ldrb	w0, [x11]
   42730:	add	w1, w2, w11
   42734:	cmp	x1, x12
   42738:	add	x11, x11, #0x1
   4273c:	add	w5, w5, w0
   42740:	add	w9, w9, w5
   42744:	b.cc	4272c <__asan_internal_strnlen@@Base+0x2c4>  // b.lo, b.ul, b.last
   42748:	mov	w0, #0x8071                	// #32881
   4274c:	mov	w2, #0xfff1                	// #65521
   42750:	movk	w0, #0x8007, lsl #16
   42754:	ldp	x29, x30, [sp], #48
   42758:	umull	x1, w9, w0
   4275c:	umull	x3, w5, w0
   42760:	lsr	x0, x1, #47
   42764:	lsr	x3, x3, #47
   42768:	msub	w9, w0, w2, w9
   4276c:	msub	w3, w3, w2, w5
   42770:	add	w3, w3, w9, lsl #16
   42774:	cmp	w3, w18
   42778:	cset	w0, eq  // eq = none
   4277c:	ret
   42780:	mov	w9, #0x0                   	// #0
   42784:	mov	w5, #0x1                   	// #1
   42788:	b	42638 <__asan_internal_strnlen@@Base+0x1d0>
   4278c:	nop
   42790:	stp	x29, x30, [sp, #-176]!
   42794:	mov	x29, sp
   42798:	stp	x19, x20, [sp, #16]
   4279c:	add	x19, sp, #0x50
   427a0:	mov	x20, x0
   427a4:	mov	x0, x19
   427a8:	stp	x21, x22, [sp, #32]
   427ac:	mov	x21, x1
   427b0:	mov	x22, x3
   427b4:	mov	w1, #0x0                   	// #0
   427b8:	stp	x23, x24, [sp, #48]
   427bc:	add	x23, x2, #0x1, lsl #12
   427c0:	mov	x2, #0x20                  	// #32
   427c4:	bl	6860 <__asan_internal_memset@plt>
   427c8:	add	x7, sp, #0x90
   427cc:	add	x2, sp, #0x70
   427d0:	mov	x5, #0x0                   	// #0
   427d4:	mov	w1, #0x1                   	// #1
   427d8:	ldrb	w4, [x20, x5]
   427dc:	and	w6, w5, #0xffff
   427e0:	cmp	w4, #0xf
   427e4:	b.hi	42900 <__asan_internal_strnlen@@Base+0x498>  // b.pmore
   427e8:	sbfiz	x4, x4, #1, #32
   427ec:	ldrh	w0, [x19, x4]
   427f0:	cbnz	w0, 42918 <__asan_internal_strnlen@@Base+0x4b0>
   427f4:	strh	w6, [x2, x4]
   427f8:	add	x5, x5, #0x1
   427fc:	strh	w6, [x7, x4]
   42800:	cmp	x5, x21
   42804:	strh	w1, [x19, x4]
   42808:	b.ne	427d8 <__asan_internal_strnlen@@Base+0x370>  // b.any
   4280c:	mov	w1, #0x0                   	// #0
   42810:	mov	x0, x22
   42814:	mov	x2, #0x800                 	// #2048
   42818:	bl	6860 <__asan_internal_memset@plt>
   4281c:	add	x11, sp, #0x70
   42820:	mov	x4, #0x0                   	// #0
   42824:	mov	w1, #0x0                   	// #0
   42828:	mov	w9, #0x1                   	// #1
   4282c:	lsl	x2, x4, #1
   42830:	add	x0, x19, x2
   42834:	ldrh	w0, [x0, #2]
   42838:	cbnz	w0, 42948 <__asan_internal_strnlen@@Base+0x4e0>
   4283c:	add	x4, x4, #0x1
   42840:	cmp	x4, #0x8
   42844:	b.ne	4282c <__asan_internal_strnlen@@Base+0x3c4>  // b.any
   42848:	mov	x7, x19
   4284c:	add	x10, sp, #0x40
   42850:	mov	x2, #0x9                   	// #9
   42854:	mov	w8, #0x1                   	// #1
   42858:	b	4286c <__asan_internal_strnlen@@Base+0x404>
   4285c:	add	x2, x2, #0x1
   42860:	add	x7, x7, #0x2
   42864:	cmp	x2, #0x10
   42868:	b.eq	42a08 <__asan_internal_strnlen@@Base+0x5a0>  // b.none
   4286c:	ldrh	w6, [x7, #18]
   42870:	cbz	w6, 4285c <__asan_internal_strnlen@@Base+0x3f4>
   42874:	add	x0, x10, x2, lsl #1
   42878:	sub	w9, w2, #0x1
   4287c:	mov	w5, #0x0                   	// #0
   42880:	mov	x3, #0x0                   	// #0
   42884:	sturh	w1, [x0, #-18]
   42888:	b	4289c <__asan_internal_strnlen@@Base+0x434>
   4288c:	add	w3, w5, #0x1
   42890:	mov	x5, x3
   42894:	cmp	x2, w3, uxtw
   42898:	b.ls	428f8 <__asan_internal_strnlen@@Base+0x490>  // b.plast
   4289c:	lsr	w0, w6, w5
   428a0:	tbz	w0, #0, 4288c <__asan_internal_strnlen@@Base+0x424>
   428a4:	sub	w0, w9, w5
   428a8:	subs	x3, x2, x3
   428ac:	lsl	w0, w8, w0
   428b0:	b.eq	428e0 <__asan_internal_strnlen@@Base+0x478>  // b.none
   428b4:	tst	w1, w0
   428b8:	b.eq	429ac <__asan_internal_strnlen@@Base+0x544>  // b.none
   428bc:	mov	w4, #0x0                   	// #0
   428c0:	b	428cc <__asan_internal_strnlen@@Base+0x464>
   428c4:	tst	w1, w0
   428c8:	b.eq	429ac <__asan_internal_strnlen@@Base+0x544>  // b.none
   428cc:	add	w4, w4, #0x1
   428d0:	bic	w1, w1, w0
   428d4:	lsr	w0, w0, #1
   428d8:	cmp	x3, w4, uxtw
   428dc:	b.hi	428c4 <__asan_internal_strnlen@@Base+0x45c>  // b.pmore
   428e0:	lsl	w0, w8, w5
   428e4:	bic	w6, w6, w0
   428e8:	add	w3, w5, #0x1
   428ec:	mov	x5, x3
   428f0:	cmp	x2, w3, uxtw
   428f4:	b.hi	4289c <__asan_internal_strnlen@@Base+0x434>  // b.pmore
   428f8:	cbz	w6, 4285c <__asan_internal_strnlen@@Base+0x3f4>
   428fc:	nop
   42900:	mov	w0, #0x0                   	// #0
   42904:	ldp	x19, x20, [sp, #16]
   42908:	ldp	x21, x22, [sp, #32]
   4290c:	ldp	x23, x24, [sp, #48]
   42910:	ldp	x29, x30, [sp], #176
   42914:	ret
   42918:	ldrh	w0, [x7, x4]
   4291c:	strh	w6, [x23, x0, lsl #1]
   42920:	ldrb	w4, [x20, x5]
   42924:	add	x5, x5, #0x1
   42928:	cmp	x21, x5
   4292c:	lsl	x4, x4, #1
   42930:	ldrh	w0, [x19, x4]
   42934:	strh	w6, [x7, x4]
   42938:	add	w0, w0, #0x1
   4293c:	strh	w0, [x19, x4]
   42940:	b.ne	427d8 <__asan_internal_strnlen@@Base+0x370>  // b.any
   42944:	b	4280c <__asan_internal_strnlen@@Base+0x3a4>
   42948:	add	w3, w4, #0x1
   4294c:	lsl	w3, w9, w3
   42950:	cmp	w3, w0
   42954:	b.cc	42900 <__asan_internal_strnlen@@Base+0x498>  // b.lo, b.ul, b.last
   42958:	add	x2, x2, x11
   4295c:	and	x5, x0, #0xffff
   42960:	ldrh	w7, [x2, #2]
   42964:	tst	w7, #0xfe00
   42968:	b.ne	42900 <__asan_internal_strnlen@@Base+0x498>  // b.any
   4296c:	sxtw	x3, w3
   42970:	ubfiz	w12, w4, #9, #7
   42974:	lsl	w8, w9, w4
   42978:	mov	x10, #0x0                   	// #0
   4297c:	cmp	w1, #0xff
   42980:	orr	w6, w12, w7
   42984:	mov	w0, w1
   42988:	b.ls	429a0 <__asan_internal_strnlen@@Base+0x538>  // b.plast
   4298c:	b	429bc <__asan_internal_strnlen@@Base+0x554>
   42990:	strh	w6, [x22, x0, lsl #1]
   42994:	add	x0, x0, x3
   42998:	cmp	x0, #0xff
   4299c:	b.hi	429bc <__asan_internal_strnlen@@Base+0x554>  // b.pmore
   429a0:	ldrh	w2, [x22, x0, lsl #1]
   429a4:	cbz	w2, 42990 <__asan_internal_strnlen@@Base+0x528>
   429a8:	b	42900 <__asan_internal_strnlen@@Base+0x498>
   429ac:	add	w1, w1, w0
   429b0:	lsl	w0, w8, w5
   429b4:	bic	w6, w6, w0
   429b8:	b	428e8 <__asan_internal_strnlen@@Base+0x480>
   429bc:	add	x10, x10, #0x1
   429c0:	cmp	x10, x5
   429c4:	b.cs	429d0 <__asan_internal_strnlen@@Base+0x568>  // b.hs, b.nlast
   429c8:	ubfiz	x7, x7, #1, #16
   429cc:	ldrh	w7, [x23, x7]
   429d0:	mov	w0, w8
   429d4:	tst	w8, w1
   429d8:	b.eq	42a3c <__asan_internal_strnlen@@Base+0x5d4>  // b.none
   429dc:	nop
   429e0:	lsr	w0, w0, #1
   429e4:	tst	w0, w1
   429e8:	b.ne	429e0 <__asan_internal_strnlen@@Base+0x578>  // b.any
   429ec:	cbnz	w0, 42a3c <__asan_internal_strnlen@@Base+0x5d4>
   429f0:	mov	w1, #0x0                   	// #0
   429f4:	cmp	x10, x5
   429f8:	b.eq	4283c <__asan_internal_strnlen@@Base+0x3d4>  // b.none
   429fc:	tst	w7, #0xfe00
   42a00:	b.eq	4297c <__asan_internal_strnlen@@Base+0x514>  // b.none
   42a04:	b	42900 <__asan_internal_strnlen@@Base+0x498>
   42a08:	add	x18, sp, #0x70
   42a0c:	add	x17, sp, #0x40
   42a10:	mov	x5, #0x7                   	// #7
   42a14:	mov	x10, #0x0                   	// #0
   42a18:	mov	w8, #0x1                   	// #1
   42a1c:	lsl	x0, x5, #1
   42a20:	add	x1, x19, x0
   42a24:	ldrh	w7, [x1, #16]
   42a28:	cbnz	w7, 42a4c <__asan_internal_strnlen@@Base+0x5e4>
   42a2c:	subs	x5, x5, #0x1
   42a30:	b.ne	42a1c <__asan_internal_strnlen@@Base+0x5b4>  // b.any
   42a34:	mov	w0, #0x1                   	// #1
   42a38:	b	42904 <__asan_internal_strnlen@@Base+0x49c>
   42a3c:	sub	w2, w0, #0x1
   42a40:	and	w1, w2, w1
   42a44:	add	w1, w0, w1
   42a48:	b	429f4 <__asan_internal_strnlen@@Base+0x58c>
   42a4c:	add	x1, x0, x18
   42a50:	add	x0, x0, x17
   42a54:	ubfiz	w12, w5, #9, #7
   42a58:	lsl	w4, w8, w5
   42a5c:	add	w11, w12, #0x1, lsl #12
   42a60:	add	w9, w5, #0x7
   42a64:	ldrh	w14, [x1, #16]
   42a68:	sxtw	x21, w4
   42a6c:	ldurh	w6, [x0, #-2]
   42a70:	and	x7, x7, #0xffff
   42a74:	and	w11, w11, #0xffff
   42a78:	mov	w4, w4
   42a7c:	mov	w20, w5
   42a80:	lsl	w9, w8, w9
   42a84:	mov	x16, #0x0                   	// #0
   42a88:	mov	x13, #0x0                   	// #0
   42a8c:	mov	x24, #0x100                 	// #256
   42a90:	mov	x15, #0x0                   	// #0
   42a94:	mov	w2, w16
   42a98:	cmp	x24, w6, uxtb
   42a9c:	and	x1, x6, #0xff
   42aa0:	b.eq	42ad4 <__asan_internal_strnlen@@Base+0x66c>  // b.none
   42aa4:	lsl	x2, x1, #1
   42aa8:	ldrh	w0, [x22, x2]
   42aac:	cbnz	w0, 42b50 <__asan_internal_strnlen@@Base+0x6e8>
   42ab0:	tst	x10, #0xfffffffffffffe00
   42ab4:	b.ne	42900 <__asan_internal_strnlen@@Base+0x498>  // b.any
   42ab8:	add	w0, w11, w10
   42abc:	mov	x13, x10
   42ac0:	mov	x24, x1
   42ac4:	add	x10, x10, x21
   42ac8:	mov	x16, x5
   42acc:	strh	w0, [x22, x2]
   42ad0:	mov	w2, w20
   42ad4:	lsr	w0, w6, #8
   42ad8:	add	x1, x22, x13, lsl #1
   42adc:	lsl	w2, w8, w2
   42ae0:	add	x1, x1, #0x200
   42ae4:	cmp	x2, x0
   42ae8:	orr	w30, w12, w14
   42aec:	b.hi	42b04 <__asan_internal_strnlen@@Base+0x69c>  // b.pmore
   42af0:	b	42b10 <__asan_internal_strnlen@@Base+0x6a8>
   42af4:	strh	w30, [x1, x0, lsl #1]
   42af8:	add	x0, x0, x4
   42afc:	cmp	x2, x0
   42b00:	b.ls	42b10 <__asan_internal_strnlen@@Base+0x6a8>  // b.plast
   42b04:	ldrh	w3, [x1, x0, lsl #1]
   42b08:	cbz	w3, 42af4 <__asan_internal_strnlen@@Base+0x68c>
   42b0c:	b	42900 <__asan_internal_strnlen@@Base+0x498>
   42b10:	add	x15, x15, #0x1
   42b14:	cmp	x7, x15
   42b18:	b.ls	42b24 <__asan_internal_strnlen@@Base+0x6bc>  // b.plast
   42b1c:	ubfiz	x14, x14, #1, #16
   42b20:	ldrh	w14, [x23, x14]
   42b24:	mov	w0, w9
   42b28:	tst	w9, w6
   42b2c:	b.eq	42b70 <__asan_internal_strnlen@@Base+0x708>  // b.none
   42b30:	lsr	w0, w0, #1
   42b34:	tst	w0, w6
   42b38:	b.ne	42b30 <__asan_internal_strnlen@@Base+0x6c8>  // b.any
   42b3c:	cbnz	w0, 42b70 <__asan_internal_strnlen@@Base+0x708>
   42b40:	mov	w6, #0x0                   	// #0
   42b44:	cmp	x7, x15
   42b48:	b.ne	42a94 <__asan_internal_strnlen@@Base+0x62c>  // b.any
   42b4c:	b	42a2c <__asan_internal_strnlen@@Base+0x5c4>
   42b50:	tbz	w0, #12, 42900 <__asan_internal_strnlen@@Base+0x498>
   42b54:	ubfx	x16, x0, #9, #3
   42b58:	and	x13, x0, #0x1ff
   42b5c:	cmp	x16, x5
   42b60:	mov	x2, x16
   42b64:	b.cc	42900 <__asan_internal_strnlen@@Base+0x498>  // b.lo, b.ul, b.last
   42b68:	mov	x24, x1
   42b6c:	b	42ad4 <__asan_internal_strnlen@@Base+0x66c>
   42b70:	sub	w1, w0, #0x1
   42b74:	and	w6, w1, w6
   42b78:	add	w6, w0, w6
   42b7c:	b	42b44 <__asan_internal_strnlen@@Base+0x6dc>
   42b80:	mov	x10, x0
   42b84:	mov	x11, x2
   42b88:	mov	x0, x4
   42b8c:	ldr	w2, [x10, #8]
   42b90:	cbnz	w2, 42c18 <__asan_internal_strnlen@@Base+0x7b0>
   42b94:	ldr	x2, [x10, #48]
   42b98:	cbz	x2, 42bfc <__asan_internal_strnlen@@Base+0x794>
   42b9c:	nop
   42ba0:	ldp	x9, x8, [x2, #8]
   42ba4:	mov	x7, #0x0                   	// #0
   42ba8:	add	x3, x8, x7
   42bac:	cmp	x8, x7
   42bb0:	and	x5, x3, #0xfffffffffffffffe
   42bb4:	b.ls	42bf4 <__asan_internal_strnlen@@Base+0x78c>  // b.plast
   42bb8:	lsr	x3, x3, #1
   42bbc:	add	x5, x5, x3
   42bc0:	add	x5, x9, x5, lsl #3
   42bc4:	ldr	x6, [x5, #8]
   42bc8:	cmp	x6, x1
   42bcc:	b.hi	42c10 <__asan_internal_strnlen@@Base+0x7a8>  // b.pmore
   42bd0:	ldr	x4, [x5, #16]
   42bd4:	add	x7, x3, #0x1
   42bd8:	add	x3, x6, x4
   42bdc:	cmp	x3, x1
   42be0:	b.ls	42ba8 <__asan_internal_strnlen@@Base+0x740>  // b.plast
   42be4:	ldr	x2, [x5]
   42be8:	mov	x3, x6
   42bec:	mov	x16, x11
   42bf0:	br	x16
   42bf4:	ldr	x2, [x2]
   42bf8:	cbnz	x2, 42ba0 <__asan_internal_strnlen@@Base+0x738>
   42bfc:	mov	x16, x11
   42c00:	mov	x4, #0x0                   	// #0
   42c04:	mov	x3, #0x0                   	// #0
   42c08:	mov	x2, #0x0                   	// #0
   42c0c:	br	x16
   42c10:	mov	x8, x3
   42c14:	b	42ba8 <__asan_internal_strnlen@@Base+0x740>
   42c18:	add	x10, x10, #0x30
   42c1c:	nop
   42c20:	ldar	x10, [x10]
   42c24:	cbz	x10, 42bfc <__asan_internal_strnlen@@Base+0x794>
   42c28:	ldp	x9, x8, [x10, #8]
   42c2c:	mov	x7, #0x0                   	// #0
   42c30:	add	x3, x8, x7
   42c34:	cmp	x8, x7
   42c38:	and	x5, x3, #0xfffffffffffffffe
   42c3c:	b.ls	42c20 <__asan_internal_strnlen@@Base+0x7b8>  // b.plast
   42c40:	lsr	x3, x3, #1
   42c44:	add	x5, x5, x3
   42c48:	add	x5, x9, x5, lsl #3
   42c4c:	ldr	x6, [x5, #8]
   42c50:	cmp	x6, x1
   42c54:	b.hi	42c7c <__asan_internal_strnlen@@Base+0x814>  // b.pmore
   42c58:	ldr	x4, [x5, #16]
   42c5c:	add	x7, x3, #0x1
   42c60:	add	x3, x6, x4
   42c64:	cmp	x3, x1
   42c68:	b.ls	42c30 <__asan_internal_strnlen@@Base+0x7c8>  // b.plast
   42c6c:	ldr	x2, [x5]
   42c70:	mov	x3, x6
   42c74:	mov	x16, x11
   42c78:	br	x16
   42c7c:	mov	x8, x3
   42c80:	b	42c30 <__asan_internal_strnlen@@Base+0x7c8>
   42c84:	nop
   42c88:	stp	x29, x30, [sp, #-144]!
   42c8c:	mov	x29, sp
   42c90:	stp	x27, x28, [sp, #80]
   42c94:	add	x28, x2, x4
   42c98:	mov	x27, x5
   42c9c:	stp	x19, x20, [sp, #16]
   42ca0:	mov	x20, x6
   42ca4:	stp	x21, x22, [sp, #32]
   42ca8:	mov	x22, x2
   42cac:	mov	x21, x7
   42cb0:	stp	x23, x24, [sp, #48]
   42cb4:	mov	x23, x0
   42cb8:	mov	x0, x5
   42cbc:	stp	x25, x26, [sp, #64]
   42cc0:	mov	x25, x4
   42cc4:	stp	x3, x1, [sp, #112]
   42cc8:	bl	67e0 <__asan_internal_strlen@plt>
   42ccc:	mov	x24, x0
   42cd0:	add	x0, x28, x0
   42cd4:	mov	x3, x21
   42cd8:	add	x26, x0, #0x1
   42cdc:	mov	x2, x20
   42ce0:	mov	x1, x26
   42ce4:	str	x0, [sp, #104]
   42ce8:	mov	x0, x23
   42cec:	bl	68c0 <__asan_backtrace_alloc@plt>
   42cf0:	cbz	x0, 42d80 <__asan_internal_strnlen@@Base+0x918>
   42cf4:	ldr	x8, [sp, #120]
   42cf8:	mov	x19, x0
   42cfc:	mov	x2, x22
   42d00:	mov	x1, x8
   42d04:	bl	67d0 <__asan_internal_memcpy@plt>
   42d08:	ldr	x1, [sp, #112]
   42d0c:	mov	x2, x25
   42d10:	add	x0, x19, x22
   42d14:	bl	67d0 <__asan_internal_memcpy@plt>
   42d18:	mov	x2, x24
   42d1c:	mov	x1, x27
   42d20:	add	x0, x19, x28
   42d24:	bl	67d0 <__asan_internal_memcpy@plt>
   42d28:	ldr	x0, [sp, #104]
   42d2c:	add	x3, sp, #0x8c
   42d30:	mov	x2, x21
   42d34:	mov	x1, x20
   42d38:	strb	wzr, [x19, x0]
   42d3c:	mov	x0, x19
   42d40:	bl	6d40 <__asan_backtrace_open@plt>
   42d44:	mov	w22, w0
   42d48:	mov	x4, x21
   42d4c:	mov	x3, x20
   42d50:	mov	x2, x26
   42d54:	mov	x1, x19
   42d58:	mov	x0, x23
   42d5c:	bl	6bc0 <__asan_backtrace_free@plt>
   42d60:	mov	w0, w22
   42d64:	ldp	x19, x20, [sp, #16]
   42d68:	ldp	x21, x22, [sp, #32]
   42d6c:	ldp	x23, x24, [sp, #48]
   42d70:	ldp	x25, x26, [sp, #64]
   42d74:	ldp	x27, x28, [sp, #80]
   42d78:	ldp	x29, x30, [sp], #144
   42d7c:	ret
   42d80:	mov	w22, #0xffffffff            	// #-1
   42d84:	b	42d60 <__asan_internal_strnlen@@Base+0x8f8>
   42d88:	stp	x29, x30, [sp, #-256]!
   42d8c:	mov	x29, sp
   42d90:	stp	x19, x20, [sp, #16]
   42d94:	mov	x20, x0
   42d98:	mov	x19, x1
   42d9c:	stp	x21, x22, [sp, #32]
   42da0:	mov	x21, x3
   42da4:	mov	x22, x4
   42da8:	stp	x27, x28, [sp, #80]
   42dac:	add	x27, sp, #0x80
   42db0:	stp	x23, x24, [sp, #48]
   42db4:	mov	x24, #0x0                   	// #0
   42db8:	stp	x25, x26, [sp, #64]
   42dbc:	mov	x25, #0x0                   	// #0
   42dc0:	str	x2, [sp, #104]
   42dc4:	mov	x2, x27
   42dc8:	mov	x1, x19
   42dcc:	mov	w0, #0x0                   	// #0
   42dd0:	bl	6bd0 <__lxstat@plt>
   42dd4:	tbnz	w0, #31, 42e60 <__asan_internal_strnlen@@Base+0x9f8>
   42dd8:	ldr	w0, [sp, #144]
   42ddc:	and	w0, w0, #0xf000
   42de0:	cmp	w0, #0xa, lsl #12
   42de4:	b.ne	42e60 <__asan_internal_strnlen@@Base+0x9f8>  // b.any
   42de8:	mov	x28, #0x80                  	// #128
   42dec:	b	42e14 <__asan_internal_strnlen@@Base+0x9ac>
   42df0:	cmp	x1, x0
   42df4:	b.hi	42ed4 <__asan_internal_strnlen@@Base+0xa6c>  // b.pmore
   42df8:	mov	x2, x28
   42dfc:	mov	x1, x26
   42e00:	mov	x4, x22
   42e04:	mov	x3, x21
   42e08:	mov	x0, x20
   42e0c:	lsl	x28, x28, #1
   42e10:	bl	6bc0 <__asan_backtrace_free@plt>
   42e14:	mov	x2, x21
   42e18:	mov	x3, x22
   42e1c:	mov	x1, x28
   42e20:	mov	x0, x20
   42e24:	bl	68c0 <__asan_backtrace_alloc@plt>
   42e28:	mov	x26, x0
   42e2c:	mov	x2, x28
   42e30:	mov	x0, x19
   42e34:	cbz	x26, 42e60 <__asan_internal_strnlen@@Base+0x9f8>
   42e38:	mov	x1, x26
   42e3c:	bl	66c0 <readlink@plt>
   42e40:	sub	x1, x28, #0x1
   42e44:	tbz	x0, #63, 42df0 <__asan_internal_strnlen@@Base+0x988>
   42e48:	mov	x2, x28
   42e4c:	mov	x1, x26
   42e50:	mov	x4, x22
   42e54:	mov	x3, x21
   42e58:	mov	x0, x20
   42e5c:	bl	6bc0 <__asan_backtrace_free@plt>
   42e60:	mov	x0, x19
   42e64:	mov	w1, #0x2f                  	// #47
   42e68:	bl	6ab0 <strrchr@plt>
   42e6c:	cbz	x0, 43070 <__asan_internal_strnlen@@Base+0xc08>
   42e70:	add	x0, x0, #0x1
   42e74:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   42e78:	sub	x27, x0, x19
   42e7c:	ldr	x5, [sp, #104]
   42e80:	add	x3, x3, #0xb00
   42e84:	mov	x7, x22
   42e88:	mov	x6, x21
   42e8c:	mov	x2, x27
   42e90:	mov	x1, x19
   42e94:	mov	x0, x20
   42e98:	mov	x4, #0x0                   	// #0
   42e9c:	bl	42c88 <__asan_internal_strnlen@@Base+0x820>
   42ea0:	mov	w23, w0
   42ea4:	tbnz	w0, #31, 42fb4 <__asan_internal_strnlen@@Base+0xb4c>
   42ea8:	cmp	x24, #0x0
   42eac:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   42eb0:	b.ne	43038 <__asan_internal_strnlen@@Base+0xbd0>  // b.any
   42eb4:	mov	w0, w23
   42eb8:	ldp	x19, x20, [sp, #16]
   42ebc:	ldp	x21, x22, [sp, #32]
   42ec0:	ldp	x23, x24, [sp, #48]
   42ec4:	ldp	x25, x26, [sp, #64]
   42ec8:	ldp	x27, x28, [sp, #80]
   42ecc:	ldp	x29, x30, [sp], #256
   42ed0:	ret
   42ed4:	strb	wzr, [x26, x0]
   42ed8:	ldrb	w0, [x26]
   42edc:	cmp	w0, #0x2f
   42ee0:	b.eq	42f88 <__asan_internal_strnlen@@Base+0xb20>  // b.none
   42ee4:	mov	x0, x19
   42ee8:	mov	w1, #0x2f                  	// #47
   42eec:	bl	6ab0 <strrchr@plt>
   42ef0:	cbz	x0, 42f88 <__asan_internal_strnlen@@Base+0xb20>
   42ef4:	add	x23, x0, #0x1
   42ef8:	mov	x0, x26
   42efc:	sub	x23, x23, x19
   42f00:	bl	67e0 <__asan_internal_strlen@plt>
   42f04:	add	x1, x23, #0x1
   42f08:	mov	x3, x22
   42f0c:	add	x0, x1, x0
   42f10:	mov	x2, x21
   42f14:	mov	x1, x0
   42f18:	str	x0, [sp, #112]
   42f1c:	mov	x0, x20
   42f20:	bl	68c0 <__asan_backtrace_alloc@plt>
   42f24:	str	x0, [sp, #120]
   42f28:	cbz	x0, 43080 <__asan_internal_strnlen@@Base+0xc18>
   42f2c:	mov	x2, x23
   42f30:	mov	x1, x19
   42f34:	bl	67d0 <__asan_internal_memcpy@plt>
   42f38:	ldr	x3, [sp, #120]
   42f3c:	mov	x0, x26
   42f40:	add	x23, x3, x23
   42f44:	bl	67e0 <__asan_internal_strlen@plt>
   42f48:	mov	x2, x0
   42f4c:	mov	x1, x26
   42f50:	mov	x0, x23
   42f54:	bl	67d0 <__asan_internal_memcpy@plt>
   42f58:	mov	x0, x26
   42f5c:	bl	67e0 <__asan_internal_strlen@plt>
   42f60:	mov	x7, x0
   42f64:	mov	x2, x28
   42f68:	mov	x1, x26
   42f6c:	ldp	x28, x3, [sp, #112]
   42f70:	strb	wzr, [x23, x7]
   42f74:	mov	x4, x22
   42f78:	mov	x0, x20
   42f7c:	mov	x26, x3
   42f80:	mov	x3, x21
   42f84:	bl	6bc0 <__asan_backtrace_free@plt>
   42f88:	cbz	x24, 42fa4 <__asan_internal_strnlen@@Base+0xb3c>
   42f8c:	mov	x2, x25
   42f90:	mov	x1, x24
   42f94:	mov	x4, x22
   42f98:	mov	x3, x21
   42f9c:	mov	x0, x20
   42fa0:	bl	6bc0 <__asan_backtrace_free@plt>
   42fa4:	mov	x24, x26
   42fa8:	mov	x25, x28
   42fac:	mov	x19, x26
   42fb0:	b	42dc4 <__asan_internal_strnlen@@Base+0x95c>
   42fb4:	adrp	x23, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   42fb8:	add	x23, x23, #0x7e8
   42fbc:	mov	x0, x23
   42fc0:	bl	67e0 <__asan_internal_strlen@plt>
   42fc4:	ldr	x5, [sp, #104]
   42fc8:	mov	x4, x0
   42fcc:	mov	x3, x23
   42fd0:	mov	x7, x22
   42fd4:	mov	x6, x21
   42fd8:	mov	x2, x27
   42fdc:	mov	x1, x19
   42fe0:	mov	x0, x20
   42fe4:	bl	42c88 <__asan_internal_strnlen@@Base+0x820>
   42fe8:	mov	w23, w0
   42fec:	tbz	w0, #31, 42ea8 <__asan_internal_strnlen@@Base+0xa40>
   42ff0:	adrp	x23, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   42ff4:	add	x23, x23, #0x7f0
   42ff8:	mov	x0, x23
   42ffc:	bl	67e0 <__asan_internal_strlen@plt>
   43000:	ldr	x5, [sp, #104]
   43004:	mov	x2, x0
   43008:	mov	x1, x23
   4300c:	mov	x7, x22
   43010:	mov	x6, x21
   43014:	mov	x4, x27
   43018:	mov	x3, x19
   4301c:	mov	x0, x20
   43020:	bl	42c88 <__asan_internal_strnlen@@Base+0x820>
   43024:	cmp	w0, #0x0
   43028:	csinv	w23, w0, wzr, ge  // ge = tcont
   4302c:	cmp	x24, #0x0
   43030:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   43034:	b.eq	42eb4 <__asan_internal_strnlen@@Base+0xa4c>  // b.none
   43038:	mov	x4, x22
   4303c:	mov	x3, x21
   43040:	mov	x2, x25
   43044:	mov	x1, x24
   43048:	mov	x0, x20
   4304c:	bl	6bc0 <__asan_backtrace_free@plt>
   43050:	mov	w0, w23
   43054:	ldp	x19, x20, [sp, #16]
   43058:	ldp	x21, x22, [sp, #32]
   4305c:	ldp	x23, x24, [sp, #48]
   43060:	ldp	x25, x26, [sp, #64]
   43064:	ldp	x27, x28, [sp, #80]
   43068:	ldp	x29, x30, [sp], #256
   4306c:	ret
   43070:	adrp	x3, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   43074:	mov	x27, #0x0                   	// #0
   43078:	add	x19, x3, #0xb00
   4307c:	b	42e7c <__asan_internal_strnlen@@Base+0xa14>
   43080:	mov	w23, #0xffffffff            	// #-1
   43084:	b	42ea8 <__asan_internal_strnlen@@Base+0xa40>
   43088:	stp	x29, x30, [sp, #-320]!
   4308c:	cmp	x1, #0x4
   43090:	mov	x29, sp
   43094:	stp	x19, x20, [sp, #16]
   43098:	mov	x19, x0
   4309c:	stp	x25, x26, [sp, #64]
   430a0:	add	x26, x0, x1
   430a4:	add	x0, x3, x4
   430a8:	stp	x0, x3, [sp, #104]
   430ac:	b.le	43e0c <__asan_internal_strnlen@@Base+0x19a4>
   430b0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   430b4:	mov	x4, x26
   430b8:	add	x0, x0, #0xa10
   430bc:	stp	x23, x24, [sp, #48]
   430c0:	mov	x23, x2
   430c4:	mov	x24, x3
   430c8:	str	x0, [sp, #120]
   430cc:	add	x0, x0, #0x200
   430d0:	str	x0, [sp, #128]
   430d4:	ldrb	w0, [x19]
   430d8:	and	w1, w0, #0xf
   430dc:	cmp	w1, #0x8
   430e0:	b.ne	43588 <__asan_internal_strnlen@@Base+0x1120>  // b.any
   430e4:	cmp	w0, #0x7f
   430e8:	b.hi	43588 <__asan_internal_strnlen@@Base+0x1120>  // b.pmore
   430ec:	ldrb	w1, [x19, #1]
   430f0:	ldrh	w0, [x19]
   430f4:	rev16	w0, w0
   430f8:	tbnz	w1, #5, 43588 <__asan_internal_strnlen@@Base+0x1120>
   430fc:	mov	x1, #0x4211                	// #16913
   43100:	and	x0, x0, #0xffff
   43104:	movk	x1, #0x2108, lsl #16
   43108:	movk	x1, #0x1084, lsl #32
   4310c:	movk	x1, #0x842, lsl #48
   43110:	umulh	x2, x0, x1
   43114:	sub	x1, x0, x2
   43118:	add	x1, x2, x1, lsr #1
   4311c:	lsr	x1, x1, #4
   43120:	lsl	x2, x1, #5
   43124:	sub	x1, x2, x1
   43128:	cmp	x0, x1
   4312c:	b.ne	43588 <__asan_internal_strnlen@@Base+0x1120>  // b.any
   43130:	stp	x21, x22, [sp, #32]
   43134:	add	x19, x19, #0x2
   43138:	ands	x22, x19, #0x3
   4313c:	stp	x27, x28, [sp, #80]
   43140:	b.eq	43ac4 <__asan_internal_strnlen@@Base+0x165c>  // b.none
   43144:	mov	x22, #0x0                   	// #0
   43148:	mov	w0, #0x0                   	// #0
   4314c:	nop
   43150:	ldrb	w1, [x19], #1
   43154:	lsl	x1, x1, x0
   43158:	tst	x19, #0x3
   4315c:	orr	x22, x22, x1
   43160:	add	w0, w0, #0x8
   43164:	b.ne	43150 <__asan_internal_strnlen@@Base+0xce8>  // b.any
   43168:	mov	x27, x4
   4316c:	add	x1, sp, #0x100
   43170:	str	x1, [sp, #96]
   43174:	cmp	w0, #0xe
   43178:	b.hi	4319c <__asan_internal_strnlen@@Base+0xd34>  // b.pmore
   4317c:	sub	x1, x27, x19
   43180:	cmp	x1, #0x3
   43184:	b.le	43580 <__asan_internal_strnlen@@Base+0x1118>
   43188:	ldr	w1, [x19], #4
   4318c:	lsl	x1, x1, x0
   43190:	add	w0, w0, #0x20
   43194:	prfm	pldl1strm, [x19]
   43198:	orr	x22, x22, x1
   4319c:	ubfx	w1, w22, #1, #2
   431a0:	sub	w20, w0, #0x3
   431a4:	cmp	w1, #0x3
   431a8:	b.eq	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.none
   431ac:	cbz	w1, 436a4 <__asan_internal_strnlen@@Base+0x123c>
   431b0:	cmp	w1, #0x1
   431b4:	lsr	x21, x22, #3
   431b8:	b.eq	437bc <__asan_internal_strnlen@@Base+0x1354>  // b.none
   431bc:	cmp	w20, #0xe
   431c0:	b.hi	431e4 <__asan_internal_strnlen@@Base+0xd7c>  // b.pmore
   431c4:	sub	x1, x27, x19
   431c8:	cmp	x1, #0x3
   431cc:	b.le	43664 <__asan_internal_strnlen@@Base+0x11fc>
   431d0:	ldr	w1, [x19], #4
   431d4:	lsl	x1, x1, x20
   431d8:	add	w20, w0, #0x1d
   431dc:	prfm	pldl1strm, [x19]
   431e0:	orr	x21, x21, x1
   431e4:	and	w26, w21, #0x1f
   431e8:	ubfx	w0, w21, #5, #5
   431ec:	add	w1, w26, #0x101
   431f0:	add	w0, w0, #0x1
   431f4:	sub	w3, w20, #0xe
   431f8:	str	w3, [sp, #136]
   431fc:	str	w1, [sp, #144]
   43200:	cmp	w1, #0x11e
   43204:	str	w0, [sp, #152]
   43208:	ubfx	w25, w21, #10, #4
   4320c:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
   43210:	add	w25, w25, #0x4
   43214:	lsr	x28, x21, #14
   43218:	b.hi	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   4321c:	add	x26, sp, #0xc8
   43220:	mov	x2, #0x13                  	// #19
   43224:	mov	x0, x26
   43228:	mov	w1, #0x0                   	// #0
   4322c:	bl	6860 <__asan_internal_memset@plt>
   43230:	ldr	w3, [sp, #136]
   43234:	cmp	w3, #0xe
   43238:	b.hi	4325c <__asan_internal_strnlen@@Base+0xdf4>  // b.pmore
   4323c:	sub	x0, x27, x19
   43240:	cmp	x0, #0x3
   43244:	b.le	43664 <__asan_internal_strnlen@@Base+0x11fc>
   43248:	ldr	w0, [x19], #4
   4324c:	lsl	x0, x0, x3
   43250:	add	w3, w20, #0x12
   43254:	prfm	pldl1strm, [x19]
   43258:	orr	x28, x28, x0
   4325c:	and	w2, w28, #0x7
   43260:	ubfx	w1, w28, #3, #3
   43264:	ubfx	w0, w28, #6, #3
   43268:	strb	w2, [sp, #216]
   4326c:	ubfx	w2, w28, #9, #3
   43270:	strb	w2, [sp, #200]
   43274:	strb	w1, [sp, #217]
   43278:	sub	w20, w3, #0xc
   4327c:	strb	w0, [sp, #218]
   43280:	cmp	w25, #0x4
   43284:	lsr	x21, x28, #12
   43288:	b.eq	43438 <__asan_internal_strnlen@@Base+0xfd0>  // b.none
   4328c:	and	w21, w21, #0x7
   43290:	strb	w21, [sp, #208]
   43294:	cmp	w25, #0x5
   43298:	lsr	x21, x28, #15
   4329c:	sub	w20, w3, #0xf
   432a0:	b.eq	43438 <__asan_internal_strnlen@@Base+0xfd0>  // b.none
   432a4:	cmp	w20, #0xe
   432a8:	b.hi	432cc <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   432ac:	sub	x0, x27, x19
   432b0:	cmp	x0, #0x3
   432b4:	b.le	43664 <__asan_internal_strnlen@@Base+0x11fc>
   432b8:	ldr	w0, [x19], #4
   432bc:	lsl	x0, x0, x20
   432c0:	add	w20, w3, #0x11
   432c4:	prfm	pldl1strm, [x19]
   432c8:	orr	x21, x21, x0
   432cc:	and	w0, w21, #0x7
   432d0:	strb	w0, [sp, #207]
   432d4:	cmp	w25, #0x6
   432d8:	lsr	x0, x21, #3
   432dc:	b.eq	43af4 <__asan_internal_strnlen@@Base+0x168c>  // b.none
   432e0:	and	w0, w0, #0x7
   432e4:	strb	w0, [sp, #209]
   432e8:	cmp	w25, #0x7
   432ec:	lsr	x0, x21, #6
   432f0:	b.eq	43b50 <__asan_internal_strnlen@@Base+0x16e8>  // b.none
   432f4:	and	w0, w0, #0x7
   432f8:	strb	w0, [sp, #206]
   432fc:	cmp	w25, #0x8
   43300:	lsr	x0, x21, #9
   43304:	b.eq	43ad8 <__asan_internal_strnlen@@Base+0x1670>  // b.none
   43308:	and	w0, w0, #0x7
   4330c:	strb	w0, [sp, #210]
   43310:	cmp	w25, #0x9
   43314:	lsr	x0, x21, #12
   43318:	b.eq	43acc <__asan_internal_strnlen@@Base+0x1664>  // b.none
   4331c:	and	w0, w0, #0x7
   43320:	strb	w0, [sp, #205]
   43324:	lsr	x21, x21, #15
   43328:	cmp	w25, #0xa
   4332c:	sub	w0, w20, #0xf
   43330:	b.eq	43e1c <__asan_internal_strnlen@@Base+0x19b4>  // b.none
   43334:	cmp	w0, #0xe
   43338:	b.hi	4335c <__asan_internal_strnlen@@Base+0xef4>  // b.pmore
   4333c:	sub	x1, x27, x19
   43340:	cmp	x1, #0x3
   43344:	b.le	43664 <__asan_internal_strnlen@@Base+0x11fc>
   43348:	ldr	w1, [x19], #4
   4334c:	lsl	x1, x1, x0
   43350:	add	w0, w20, #0x11
   43354:	prfm	pldl1strm, [x19]
   43358:	orr	x21, x21, x1
   4335c:	and	w1, w21, #0x7
   43360:	strb	w1, [sp, #211]
   43364:	cmp	w25, #0xb
   43368:	lsr	x1, x21, #3
   4336c:	b.eq	43e24 <__asan_internal_strnlen@@Base+0x19bc>  // b.none
   43370:	and	w1, w1, #0x7
   43374:	strb	w1, [sp, #204]
   43378:	cmp	w25, #0xc
   4337c:	lsr	x1, x21, #6
   43380:	b.eq	43e4c <__asan_internal_strnlen@@Base+0x19e4>  // b.none
   43384:	and	w1, w1, #0x7
   43388:	strb	w1, [sp, #212]
   4338c:	cmp	w25, #0xd
   43390:	lsr	x1, x21, #9
   43394:	b.eq	43e58 <__asan_internal_strnlen@@Base+0x19f0>  // b.none
   43398:	and	w1, w1, #0x7
   4339c:	strb	w1, [sp, #203]
   433a0:	cmp	w25, #0xe
   433a4:	lsr	x1, x21, #12
   433a8:	b.eq	43e64 <__asan_internal_strnlen@@Base+0x19fc>  // b.none
   433ac:	and	w1, w1, #0x7
   433b0:	strb	w1, [sp, #213]
   433b4:	lsr	x21, x21, #15
   433b8:	cmp	w25, #0xf
   433bc:	sub	w20, w0, #0xf
   433c0:	b.eq	43438 <__asan_internal_strnlen@@Base+0xfd0>  // b.none
   433c4:	cmp	w20, #0xe
   433c8:	b.hi	433ec <__asan_internal_strnlen@@Base+0xf84>  // b.pmore
   433cc:	sub	x1, x27, x19
   433d0:	cmp	x1, #0x3
   433d4:	b.le	43664 <__asan_internal_strnlen@@Base+0x11fc>
   433d8:	ldr	w1, [x19], #4
   433dc:	lsl	x1, x1, x20
   433e0:	add	w20, w0, #0x11
   433e4:	prfm	pldl1strm, [x19]
   433e8:	orr	x21, x21, x1
   433ec:	and	w0, w21, #0x7
   433f0:	strb	w0, [sp, #202]
   433f4:	cmp	w25, #0x10
   433f8:	lsr	x0, x21, #3
   433fc:	b.eq	43af4 <__asan_internal_strnlen@@Base+0x168c>  // b.none
   43400:	and	w0, w0, #0x7
   43404:	strb	w0, [sp, #214]
   43408:	cmp	w25, #0x11
   4340c:	lsr	x0, x21, #6
   43410:	b.eq	43b50 <__asan_internal_strnlen@@Base+0x16e8>  // b.none
   43414:	and	w0, w0, #0x7
   43418:	strb	w0, [sp, #201]
   4341c:	cmp	w25, #0x12
   43420:	lsr	x0, x21, #9
   43424:	b.eq	43ad8 <__asan_internal_strnlen@@Base+0x1670>  // b.none
   43428:	lsr	x21, x21, #12
   4342c:	sub	w20, w20, #0xc
   43430:	and	w0, w0, #0x7
   43434:	strb	w0, [sp, #215]
   43438:	add	x25, sp, #0xe0
   4343c:	mov	w1, #0x0                   	// #0
   43440:	mov	x0, x25
   43444:	mov	x2, #0x20                  	// #32
   43448:	bl	6860 <__asan_internal_memset@plt>
   4344c:	add	x28, x23, #0x1, lsl #12
   43450:	mov	x1, #0x1                   	// #1
   43454:	add	x5, sp, #0x120
   43458:	mov	w8, w1
   4345c:	nop
   43460:	add	x0, x26, x1
   43464:	sub	w2, w1, #0x1
   43468:	and	w2, w2, #0xffff
   4346c:	ldurb	w0, [x0, #-1]
   43470:	cmp	w0, #0xf
   43474:	b.hi	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   43478:	sbfiz	x0, x0, #1, #32
   4347c:	ldrh	w3, [x25, x0]
   43480:	add	w4, w3, #0x1
   43484:	cbnz	w3, 43684 <__asan_internal_strnlen@@Base+0x121c>
   43488:	ldr	x3, [sp, #96]
   4348c:	strh	w2, [x5, x0]
   43490:	strh	w8, [x25, x0]
   43494:	add	x1, x1, #0x1
   43498:	cmp	x1, #0x14
   4349c:	strh	w2, [x3, x0]
   434a0:	b.ne	43460 <__asan_internal_strnlen@@Base+0xff8>  // b.any
   434a4:	mov	w1, #0x0                   	// #0
   434a8:	mov	x0, x23
   434ac:	mov	x2, #0x800                 	// #2048
   434b0:	bl	6860 <__asan_internal_memset@plt>
   434b4:	mov	x5, #0x0                   	// #0
   434b8:	mov	w1, #0x0                   	// #0
   434bc:	mov	w9, #0x1                   	// #1
   434c0:	lsl	x2, x5, #1
   434c4:	add	x0, x25, x2
   434c8:	ldrh	w0, [x0, #2]
   434cc:	cbnz	w0, 43754 <__asan_internal_strnlen@@Base+0x12ec>
   434d0:	add	x5, x5, #0x1
   434d4:	cmp	x5, #0x8
   434d8:	b.ne	434c0 <__asan_internal_strnlen@@Base+0x1058>  // b.any
   434dc:	mov	x8, x25
   434e0:	add	x11, sp, #0xb8
   434e4:	mov	x6, #0x9                   	// #9
   434e8:	mov	w9, #0x1                   	// #1
   434ec:	b	43500 <__asan_internal_strnlen@@Base+0x1098>
   434f0:	add	x6, x6, #0x1
   434f4:	add	x8, x8, #0x2
   434f8:	cmp	x6, #0x10
   434fc:	b.eq	43b5c <__asan_internal_strnlen@@Base+0x16f4>  // b.none
   43500:	ldrh	w5, [x8, #18]
   43504:	cbz	w5, 434f0 <__asan_internal_strnlen@@Base+0x1088>
   43508:	add	x0, x11, x6, lsl #1
   4350c:	sub	w7, w6, #0x1
   43510:	mov	x4, #0x0                   	// #0
   43514:	mov	w3, #0x0                   	// #0
   43518:	sturh	w1, [x0, #-18]
   4351c:	b	43530 <__asan_internal_strnlen@@Base+0x10c8>
   43520:	add	w4, w3, #0x1
   43524:	mov	x3, x4
   43528:	cmp	x6, w4, uxtw
   4352c:	b.ls	43aec <__asan_internal_strnlen@@Base+0x1684>  // b.plast
   43530:	lsr	w0, w5, w3
   43534:	tbz	w0, #0, 43520 <__asan_internal_strnlen@@Base+0x10b8>
   43538:	sub	w0, w7, w3
   4353c:	subs	x4, x6, x4
   43540:	lsl	w0, w9, w0
   43544:	b.eq	43574 <__asan_internal_strnlen@@Base+0x110c>  // b.none
   43548:	tst	w0, w1
   4354c:	b.eq	43ae4 <__asan_internal_strnlen@@Base+0x167c>  // b.none
   43550:	mov	w2, #0x0                   	// #0
   43554:	b	43560 <__asan_internal_strnlen@@Base+0x10f8>
   43558:	tst	w1, w0
   4355c:	b.eq	43ae4 <__asan_internal_strnlen@@Base+0x167c>  // b.none
   43560:	add	w2, w2, #0x1
   43564:	bic	w1, w1, w0
   43568:	lsr	w0, w0, #1
   4356c:	cmp	x4, w2, uxtw
   43570:	b.hi	43558 <__asan_internal_strnlen@@Base+0x10f0>  // b.pmore
   43574:	lsl	w0, w9, w3
   43578:	bic	w5, w5, w0
   4357c:	b	43520 <__asan_internal_strnlen@@Base+0x10b8>
   43580:	ldp	x21, x22, [sp, #32]
   43584:	ldp	x27, x28, [sp, #80]
   43588:	mov	w0, #0x0                   	// #0
   4358c:	ldp	x23, x24, [sp, #48]
   43590:	ldp	x19, x20, [sp, #16]
   43594:	ldp	x25, x26, [sp, #64]
   43598:	ldp	x29, x30, [sp], #320
   4359c:	ret
   435a0:	ldr	x1, [sp, #96]
   435a4:	ubfiz	w14, w6, #9, #7
   435a8:	lsl	w5, w4, w6
   435ac:	add	w11, w14, #0x1, lsl #12
   435b0:	add	x1, x0, x1
   435b4:	add	x0, x0, x30
   435b8:	add	w10, w6, #0x7
   435bc:	sxtw	x26, w5
   435c0:	and	x9, x9, #0xffff
   435c4:	and	w11, w11, #0xffff
   435c8:	ldrh	w12, [x1, #16]
   435cc:	mov	w5, w5
   435d0:	ldurh	w7, [x0, #-2]
   435d4:	lsl	w10, w4, w10
   435d8:	mov	x17, #0x0                   	// #0
   435dc:	mov	x15, #0x0                   	// #0
   435e0:	mov	x16, #0x0                   	// #0
   435e4:	mov	x13, #0x100                 	// #256
   435e8:	str	w6, [sp, #136]
   435ec:	mov	w2, w17
   435f0:	cmp	x13, w7, uxtb
   435f4:	and	x1, x7, #0xff
   435f8:	b.eq	4362c <__asan_internal_strnlen@@Base+0x11c4>  // b.none
   435fc:	lsl	x2, x1, #1
   43600:	ldrh	w0, [x23, x2]
   43604:	cbnz	w0, 43eb0 <__asan_internal_strnlen@@Base+0x1a48>
   43608:	tst	x18, #0xfffffffffffffe00
   4360c:	b.ne	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.any
   43610:	add	w0, w11, w18
   43614:	strh	w0, [x23, x2]
   43618:	ldr	w2, [sp, #136]
   4361c:	mov	x15, x18
   43620:	mov	x13, x1
   43624:	add	x18, x18, x26
   43628:	mov	x17, x6
   4362c:	lsr	w0, w7, #8
   43630:	add	x1, x23, x15, lsl #1
   43634:	lsl	w2, w4, w2
   43638:	add	x1, x1, #0x200
   4363c:	cmp	x2, x0
   43640:	orr	w8, w14, w12
   43644:	b.hi	4365c <__asan_internal_strnlen@@Base+0x11f4>  // b.pmore
   43648:	b	43e70 <__asan_internal_strnlen@@Base+0x1a08>
   4364c:	strh	w8, [x1, x0, lsl #1]
   43650:	add	x0, x0, x5
   43654:	cmp	x2, x0
   43658:	b.ls	43e70 <__asan_internal_strnlen@@Base+0x1a08>  // b.plast
   4365c:	ldrh	w3, [x1, x0, lsl #1]
   43660:	cbz	w3, 4364c <__asan_internal_strnlen@@Base+0x11e4>
   43664:	mov	w0, #0x0                   	// #0
   43668:	ldp	x19, x20, [sp, #16]
   4366c:	ldp	x21, x22, [sp, #32]
   43670:	ldp	x23, x24, [sp, #48]
   43674:	ldp	x25, x26, [sp, #64]
   43678:	ldp	x27, x28, [sp, #80]
   4367c:	ldp	x29, x30, [sp], #320
   43680:	ret
   43684:	ldrh	w3, [x5, x0]
   43688:	add	x1, x1, #0x1
   4368c:	strh	w4, [x25, x0]
   43690:	cmp	x1, #0x14
   43694:	strh	w2, [x5, x0]
   43698:	strh	w2, [x28, x3, lsl #1]
   4369c:	b.ne	43460 <__asan_internal_strnlen@@Base+0xff8>  // b.any
   436a0:	b	434a4 <__asan_internal_strnlen@@Base+0x103c>
   436a4:	sub	w0, w0, #0xc
   436a8:	lsr	w0, w0, #3
   436ac:	mvn	x5, x0
   436b0:	add	x3, x19, x5
   436b4:	sub	x1, x27, x3
   436b8:	cmp	x1, #0x3
   436bc:	b.le	43580 <__asan_internal_strnlen@@Base+0x1118>
   436c0:	ldrb	w6, [x3, #3]
   436c4:	sub	x0, x19, x0
   436c8:	ldrb	w2, [x3, #2]
   436cc:	add	x1, x0, #0x3
   436d0:	ldrb	w3, [x3, #1]
   436d4:	ldrb	w0, [x19, x5]
   436d8:	bfi	w2, w6, #8, #24
   436dc:	mvn	w2, w2
   436e0:	bfi	w0, w3, #8, #24
   436e4:	cmp	w0, w2, uxth
   436e8:	b.ne	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.any
   436ec:	sub	x2, x27, x1
   436f0:	cmp	w0, w2
   436f4:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   436f8:	ldr	x2, [sp, #104]
   436fc:	sub	x2, x2, x24
   43700:	cmp	w0, w2
   43704:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   43708:	and	x20, x0, #0xffff
   4370c:	mov	x0, x24
   43710:	add	x19, x1, x20
   43714:	mov	x2, x20
   43718:	bl	67d0 <__asan_internal_memcpy@plt>
   4371c:	add	x24, x24, x20
   43720:	ands	x21, x19, #0x3
   43724:	mov	w0, #0x0                   	// #0
   43728:	b.eq	43748 <__asan_internal_strnlen@@Base+0x12e0>  // b.none
   4372c:	mov	x21, #0x0                   	// #0
   43730:	ldrb	w1, [x19], #1
   43734:	lsl	x1, x1, x0
   43738:	tst	x19, #0x3
   4373c:	orr	x21, x21, x1
   43740:	add	w0, w0, #0x8
   43744:	b.ne	43730 <__asan_internal_strnlen@@Base+0x12c8>  // b.any
   43748:	tbnz	w22, #0, 43e30 <__asan_internal_strnlen@@Base+0x19c8>
   4374c:	mov	x22, x21
   43750:	b	43174 <__asan_internal_strnlen@@Base+0xd0c>
   43754:	add	w3, w5, #0x1
   43758:	lsl	w3, w9, w3
   4375c:	cmp	w0, w3
   43760:	b.hi	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   43764:	ldr	x4, [sp, #96]
   43768:	add	x2, x2, x4
   4376c:	and	x4, x0, #0xffff
   43770:	ldrh	w7, [x2, #2]
   43774:	tst	w7, #0xfe00
   43778:	b.ne	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.any
   4377c:	sxtw	x3, w3
   43780:	ubfiz	w11, w5, #9, #7
   43784:	lsl	w8, w9, w5
   43788:	mov	x10, #0x0                   	// #0
   4378c:	cmp	w1, #0xff
   43790:	orr	w6, w11, w7
   43794:	mov	w0, w1
   43798:	b.ls	437b0 <__asan_internal_strnlen@@Base+0x1348>  // b.plast
   4379c:	b	43b00 <__asan_internal_strnlen@@Base+0x1698>
   437a0:	strh	w6, [x23, x0, lsl #1]
   437a4:	add	x0, x0, x3
   437a8:	cmp	x0, #0xff
   437ac:	b.hi	43b00 <__asan_internal_strnlen@@Base+0x1698>  // b.pmore
   437b0:	ldrh	w2, [x23, x0, lsl #1]
   437b4:	cbz	w2, 437a0 <__asan_internal_strnlen@@Base+0x1338>
   437b8:	b	43664 <__asan_internal_strnlen@@Base+0x11fc>
   437bc:	ldp	x0, x28, [sp, #120]
   437c0:	str	x0, [sp, #144]
   437c4:	stp	x22, x23, [sp, #160]
   437c8:	mov	x22, x27
   437cc:	mov	x23, x28
   437d0:	mov	x27, x19
   437d4:	mov	w26, #0x1                   	// #1
   437d8:	cmp	w20, #0xe
   437dc:	b.hi	43800 <__asan_internal_strnlen@@Base+0x1398>  // b.pmore
   437e0:	sub	x0, x22, x27
   437e4:	cmp	x0, #0x3
   437e8:	b.le	43580 <__asan_internal_strnlen@@Base+0x1118>
   437ec:	ldr	w0, [x27], #4
   437f0:	lsl	x0, x0, x20
   437f4:	add	w20, w20, #0x20
   437f8:	prfm	pldl1strm, [x27]
   437fc:	orr	x21, x21, x0
   43800:	and	x0, x21, #0xff
   43804:	ldrh	w1, [x23, x0, lsl #1]
   43808:	and	w25, w1, #0x1ff
   4380c:	ubfx	x0, x1, #9, #3
   43810:	tbnz	w1, #12, 4384c <__asan_internal_strnlen@@Base+0x13e4>
   43814:	add	w1, w0, #0x1
   43818:	sub	w20, w20, #0x1
   4381c:	sub	w20, w20, w0
   43820:	cmp	w25, #0xff
   43824:	lsr	x21, x21, x1
   43828:	b.hi	43884 <__asan_internal_strnlen@@Base+0x141c>  // b.pmore
   4382c:	ldr	x0, [sp, #104]
   43830:	cmp	x24, x0
   43834:	b.eq	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.none
   43838:	strb	w25, [x24], #1
   4383c:	cmp	w20, #0xe
   43840:	prfm	pstl1keep, [x24]
   43844:	b.ls	437e0 <__asan_internal_strnlen@@Base+0x1378>  // b.plast
   43848:	b	43800 <__asan_internal_strnlen@@Base+0x1398>
   4384c:	add	w25, w25, #0x100
   43850:	lsl	w0, w26, w0
   43854:	sub	w0, w0, #0x1
   43858:	sub	w20, w20, #0x8
   4385c:	and	x0, x0, x21, lsr #8
   43860:	add	x25, x0, w25, sxtw
   43864:	ldrh	w0, [x23, x25, lsl #1]
   43868:	and	w25, w0, #0x1ff
   4386c:	ubfx	x0, x0, #9, #3
   43870:	cmp	w25, #0xff
   43874:	add	w1, w0, #0x8
   43878:	sub	w20, w20, w0
   4387c:	lsr	x21, x21, x1
   43880:	b.ls	4382c <__asan_internal_strnlen@@Base+0x13c4>  // b.plast
   43884:	cmp	w25, #0x100
   43888:	b.eq	43ed0 <__asan_internal_strnlen@@Base+0x1a68>  // b.none
   4388c:	cmp	w25, #0x108
   43890:	b.hi	43920 <__asan_internal_strnlen@@Base+0x14b8>  // b.pmore
   43894:	sub	w25, w25, #0xfe
   43898:	cmp	w20, #0xe
   4389c:	b.hi	438c0 <__asan_internal_strnlen@@Base+0x1458>  // b.pmore
   438a0:	sub	x0, x22, x27
   438a4:	cmp	x0, #0x3
   438a8:	b.le	43580 <__asan_internal_strnlen@@Base+0x1118>
   438ac:	ldr	w0, [x27], #4
   438b0:	lsl	x0, x0, x20
   438b4:	add	w20, w20, #0x20
   438b8:	prfm	pldl1strm, [x27]
   438bc:	orr	x21, x21, x0
   438c0:	ldr	x1, [sp, #144]
   438c4:	and	x0, x21, #0xff
   438c8:	ldrh	w2, [x1, x0, lsl #1]
   438cc:	and	w0, w2, #0x1ff
   438d0:	ubfx	x1, x2, #9, #3
   438d4:	tbnz	w2, #12, 43994 <__asan_internal_strnlen@@Base+0x152c>
   438d8:	add	w2, w1, #0x1
   438dc:	sub	w20, w20, #0x1
   438e0:	sub	w20, w20, w1
   438e4:	lsr	x21, x21, x2
   438e8:	cbnz	w0, 439cc <__asan_internal_strnlen@@Base+0x1564>
   438ec:	ldr	x0, [sp, #112]
   438f0:	cmp	x24, x0
   438f4:	b.eq	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.none
   438f8:	ldr	x0, [sp, #104]
   438fc:	sub	x0, x0, x24
   43900:	cmp	w25, w0
   43904:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   43908:	ldurb	w1, [x24, #-1]
   4390c:	mov	w2, w25
   43910:	mov	x0, x24
   43914:	add	x24, x24, x2
   43918:	bl	6860 <__asan_internal_memset@plt>
   4391c:	b	437d8 <__asan_internal_strnlen@@Base+0x1370>
   43920:	cmp	w25, #0x11d
   43924:	b.eq	43b48 <__asan_internal_strnlen@@Base+0x16e0>  // b.none
   43928:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   4392c:	cmp	w20, #0xe
   43930:	b.hi	43954 <__asan_internal_strnlen@@Base+0x14ec>  // b.pmore
   43934:	sub	x0, x22, x27
   43938:	cmp	x0, #0x3
   4393c:	b.le	43580 <__asan_internal_strnlen@@Base+0x1118>
   43940:	ldr	w0, [x27], #4
   43944:	lsl	x0, x0, x20
   43948:	add	w20, w20, #0x20
   4394c:	prfm	pldl1strm, [x27]
   43950:	orr	x21, x21, x0
   43954:	sub	w25, w25, #0x109
   43958:	and	w1, w25, #0x3
   4395c:	lsr	w0, w25, #2
   43960:	add	w2, w0, #0x1
   43964:	lsl	w25, w26, w0
   43968:	mov	w0, #0xffffffff            	// #-1
   4396c:	sub	w25, w25, #0x1
   43970:	lsl	w5, w0, w2
   43974:	bic	w5, w21, w5
   43978:	lsl	w0, w1, w2
   4397c:	add	w25, w5, w25, lsl #3
   43980:	add	w0, w0, #0xb
   43984:	sub	w20, w20, w2
   43988:	add	w25, w25, w0
   4398c:	lsr	x21, x21, x2
   43990:	b	43898 <__asan_internal_strnlen@@Base+0x1430>
   43994:	add	w0, w0, #0x100
   43998:	lsl	w1, w26, w1
   4399c:	sub	w1, w1, #0x1
   439a0:	sub	w20, w20, #0x8
   439a4:	and	x1, x1, x21, lsr #8
   439a8:	add	x0, x1, w0, sxtw
   439ac:	ldr	x1, [sp, #144]
   439b0:	ldrh	w1, [x1, x0, lsl #1]
   439b4:	and	w0, w1, #0x1ff
   439b8:	ubfx	x1, x1, #9, #3
   439bc:	add	w2, w1, #0x8
   439c0:	sub	w20, w20, w1
   439c4:	lsr	x21, x21, x2
   439c8:	cbz	w0, 438ec <__asan_internal_strnlen@@Base+0x1484>
   439cc:	cmp	w0, #0x1d
   439d0:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   439d4:	add	w19, w0, #0x1
   439d8:	cmp	w0, #0x3
   439dc:	b.ls	43a44 <__asan_internal_strnlen@@Base+0x15dc>  // b.plast
   439e0:	cmp	w20, #0xe
   439e4:	b.hi	43a08 <__asan_internal_strnlen@@Base+0x15a0>  // b.pmore
   439e8:	sub	x1, x22, x27
   439ec:	cmp	x1, #0x3
   439f0:	b.le	43580 <__asan_internal_strnlen@@Base+0x1118>
   439f4:	ldr	w1, [x27], #4
   439f8:	lsl	x1, x1, x20
   439fc:	add	w20, w20, #0x20
   43a00:	prfm	pldl1strm, [x27]
   43a04:	orr	x21, x21, x1
   43a08:	sub	w0, w0, #0x4
   43a0c:	and	w1, w0, #0x1
   43a10:	lsr	w0, w0, #1
   43a14:	add	w2, w0, #0x1
   43a18:	lsl	w19, w26, w0
   43a1c:	mov	w0, #0xffffffff            	// #-1
   43a20:	sub	w19, w19, #0x1
   43a24:	lsl	w5, w0, w2
   43a28:	bic	w5, w21, w5
   43a2c:	lsl	w0, w1, w2
   43a30:	add	w19, w5, w19, lsl #2
   43a34:	add	w0, w0, #0x5
   43a38:	sub	w20, w20, w2
   43a3c:	add	w19, w19, w0
   43a40:	lsr	x21, x21, x2
   43a44:	ldr	x0, [sp, #112]
   43a48:	sub	x0, x24, x0
   43a4c:	cmp	w19, w0
   43a50:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   43a54:	ldr	x0, [sp, #104]
   43a58:	sub	x0, x0, x24
   43a5c:	cmp	w25, w0
   43a60:	b.hi	43580 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   43a64:	mov	w28, w19
   43a68:	cmp	w19, w25
   43a6c:	neg	x0, x28
   43a70:	str	x0, [sp, #152]
   43a74:	b.cc	43a90 <__asan_internal_strnlen@@Base+0x1628>  // b.lo, b.ul, b.last
   43a78:	mov	w2, w25
   43a7c:	add	x1, x24, x0
   43a80:	mov	x0, x24
   43a84:	add	x24, x24, x2
   43a88:	bl	67d0 <__asan_internal_memcpy@plt>
   43a8c:	b	437d8 <__asan_internal_strnlen@@Base+0x1370>
   43a90:	cmp	w19, w25
   43a94:	ldr	x0, [sp, #152]
   43a98:	csel	w2, w19, w25, ls  // ls = plast
   43a9c:	csel	w28, w19, w25, ls  // ls = plast
   43aa0:	str	x2, [sp, #136]
   43aa4:	add	x1, x24, x0
   43aa8:	mov	x0, x24
   43aac:	bl	67d0 <__asan_internal_memcpy@plt>
   43ab0:	ldr	x2, [sp, #136]
   43ab4:	subs	w25, w25, w28
   43ab8:	add	x24, x24, x2
   43abc:	b.ne	43a90 <__asan_internal_strnlen@@Base+0x1628>  // b.any
   43ac0:	b	437d8 <__asan_internal_strnlen@@Base+0x1370>
   43ac4:	mov	w0, #0x0                   	// #0
   43ac8:	b	43168 <__asan_internal_strnlen@@Base+0xd00>
   43acc:	sub	w20, w20, #0xc
   43ad0:	mov	x21, x0
   43ad4:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43ad8:	sub	w20, w20, #0x9
   43adc:	mov	x21, x0
   43ae0:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43ae4:	add	w1, w1, w0
   43ae8:	b	43574 <__asan_internal_strnlen@@Base+0x110c>
   43aec:	cbz	w5, 434f0 <__asan_internal_strnlen@@Base+0x1088>
   43af0:	b	43664 <__asan_internal_strnlen@@Base+0x11fc>
   43af4:	sub	w20, w20, #0x3
   43af8:	mov	x21, x0
   43afc:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43b00:	add	x10, x10, #0x1
   43b04:	cmp	x10, x4
   43b08:	b.cs	43b14 <__asan_internal_strnlen@@Base+0x16ac>  // b.hs, b.nlast
   43b0c:	ubfiz	x7, x7, #1, #16
   43b10:	ldrh	w7, [x28, x7]
   43b14:	mov	w0, w8
   43b18:	tst	w1, w8
   43b1c:	b.eq	43dec <__asan_internal_strnlen@@Base+0x1984>  // b.none
   43b20:	lsr	w0, w0, #1
   43b24:	tst	w1, w0
   43b28:	b.ne	43b20 <__asan_internal_strnlen@@Base+0x16b8>  // b.any
   43b2c:	cbnz	w0, 43dec <__asan_internal_strnlen@@Base+0x1984>
   43b30:	mov	w1, #0x0                   	// #0
   43b34:	cmp	x10, x4
   43b38:	b.eq	434d0 <__asan_internal_strnlen@@Base+0x1068>  // b.none
   43b3c:	tst	w7, #0xfe00
   43b40:	b.eq	4378c <__asan_internal_strnlen@@Base+0x1324>  // b.none
   43b44:	b	43664 <__asan_internal_strnlen@@Base+0x11fc>
   43b48:	mov	w25, #0x102                 	// #258
   43b4c:	b	43898 <__asan_internal_strnlen@@Base+0x1430>
   43b50:	sub	w20, w20, #0x6
   43b54:	mov	x21, x0
   43b58:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43b5c:	add	x30, sp, #0xb8
   43b60:	mov	x18, #0x0                   	// #0
   43b64:	mov	x6, #0x7                   	// #7
   43b68:	mov	w4, #0x1                   	// #1
   43b6c:	lsl	x0, x6, #1
   43b70:	add	x1, x25, x0
   43b74:	ldrh	w9, [x1, #16]
   43b78:	cbnz	w9, 435a0 <__asan_internal_strnlen@@Base+0x1138>
   43b7c:	subs	x6, x6, #0x1
   43b80:	b.ne	43b6c <__asan_internal_strnlen@@Base+0x1704>  // b.any
   43b84:	ldr	w5, [sp, #144]
   43b88:	mov	x0, #0x1278                	// #4728
   43b8c:	ldr	w4, [sp, #152]
   43b90:	add	x26, x23, x0
   43b94:	mov	x25, x26
   43b98:	add	x3, x5, x4
   43b9c:	add	x3, x26, x3
   43ba0:	cmp	x26, x3
   43ba4:	b.cs	43d98 <__asan_internal_strnlen@@Base+0x1930>  // b.hs, b.nlast
   43ba8:	stp	x22, x5, [sp, #136]
   43bac:	mov	x22, x23
   43bb0:	mov	x23, x21
   43bb4:	mov	x21, x26
   43bb8:	mov	x26, x19
   43bbc:	mov	x19, x27
   43bc0:	mov	x27, x3
   43bc4:	str	x4, [sp, #152]
   43bc8:	b	43bdc <__asan_internal_strnlen@@Base+0x1774>
   43bcc:	sub	w20, w20, #0x1
   43bd0:	strb	w0, [x25], #1
   43bd4:	cmp	x27, x25
   43bd8:	b.ls	43d7c <__asan_internal_strnlen@@Base+0x1914>  // b.plast
   43bdc:	cmp	w20, #0xe
   43be0:	b.hi	43c04 <__asan_internal_strnlen@@Base+0x179c>  // b.pmore
   43be4:	sub	x0, x19, x26
   43be8:	cmp	x0, #0x3
   43bec:	b.le	43664 <__asan_internal_strnlen@@Base+0x11fc>
   43bf0:	ldr	w0, [x26], #4
   43bf4:	lsl	x0, x0, x20
   43bf8:	add	w20, w20, #0x20
   43bfc:	prfm	pldl1strm, [x26]
   43c00:	orr	x23, x23, x0
   43c04:	and	x0, x23, #0xff
   43c08:	ldrh	w0, [x22, x0, lsl #1]
   43c0c:	tbnz	w0, #12, 43664 <__asan_internal_strnlen@@Base+0x11fc>
   43c10:	ubfx	x1, x0, #9, #3
   43c14:	tst	w0, #0x1f0
   43c18:	add	w2, w1, #0x1
   43c1c:	sub	w20, w20, w1
   43c20:	and	w0, w0, #0x1ff
   43c24:	lsr	x23, x23, x2
   43c28:	b.eq	43bcc <__asan_internal_strnlen@@Base+0x1764>  // b.none
   43c2c:	cmp	w0, #0x10
   43c30:	b.eq	43c74 <__asan_internal_strnlen@@Base+0x180c>  // b.none
   43c34:	cmp	w0, #0x11
   43c38:	b.eq	43cc8 <__asan_internal_strnlen@@Base+0x1860>  // b.none
   43c3c:	cmp	w0, #0x12
   43c40:	b.ne	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.any
   43c44:	and	w2, w23, #0x7f
   43c48:	sub	x0, x27, x25
   43c4c:	add	w2, w2, #0xb
   43c50:	sub	w20, w20, #0x8
   43c54:	lsr	x23, x23, #7
   43c58:	cmp	w2, w0
   43c5c:	b.hi	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   43c60:	mov	x0, x25
   43c64:	mov	w1, #0x0                   	// #0
   43c68:	add	x25, x25, x2
   43c6c:	bl	6860 <__asan_internal_memset@plt>
   43c70:	b	43bd4 <__asan_internal_strnlen@@Base+0x176c>
   43c74:	cmp	x25, x21
   43c78:	b.eq	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.none
   43c7c:	and	w0, w23, #0x3
   43c80:	sub	x1, x27, x25
   43c84:	add	w0, w0, #0x3
   43c88:	sub	w20, w20, #0x3
   43c8c:	lsr	x23, x23, #2
   43c90:	cmp	w0, w1
   43c94:	b.hi	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   43c98:	ldurb	w1, [x25, #-1]
   43c9c:	cmp	w0, #0x5
   43ca0:	b.eq	43d38 <__asan_internal_strnlen@@Base+0x18d0>  // b.none
   43ca4:	cmp	w0, #0x6
   43ca8:	b.eq	43d34 <__asan_internal_strnlen@@Base+0x18cc>  // b.none
   43cac:	cmp	w0, #0x4
   43cb0:	b.eq	43d3c <__asan_internal_strnlen@@Base+0x18d4>  // b.none
   43cb4:	add	x25, x25, #0x3
   43cb8:	sturb	w1, [x25, #-3]
   43cbc:	sturb	w1, [x25, #-2]
   43cc0:	sturb	w1, [x25, #-1]
   43cc4:	b	43bd4 <__asan_internal_strnlen@@Base+0x176c>
   43cc8:	and	w0, w23, #0x7
   43ccc:	sub	x1, x27, x25
   43cd0:	add	w0, w0, #0x3
   43cd4:	sub	w20, w20, #0x4
   43cd8:	lsr	x23, x23, #3
   43cdc:	cmp	w0, w1
   43ce0:	b.hi	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   43ce4:	cmp	w0, #0x7
   43ce8:	b.eq	43d60 <__asan_internal_strnlen@@Base+0x18f8>  // b.none
   43cec:	b.hi	43d44 <__asan_internal_strnlen@@Base+0x18dc>  // b.pmore
   43cf0:	cmp	w0, #0x5
   43cf4:	b.eq	43d08 <__asan_internal_strnlen@@Base+0x18a0>  // b.none
   43cf8:	cmp	w0, #0x6
   43cfc:	b.ne	43d24 <__asan_internal_strnlen@@Base+0x18bc>  // b.any
   43d00:	strb	wzr, [x25], #1
   43d04:	nop
   43d08:	strb	wzr, [x25], #1
   43d0c:	mov	x0, x25
   43d10:	strb	wzr, [x0], #1
   43d14:	mov	x25, x0
   43d18:	strh	wzr, [x25], #3
   43d1c:	strb	wzr, [x0, #2]
   43d20:	b	43bd4 <__asan_internal_strnlen@@Base+0x176c>
   43d24:	cmp	w0, #0x4
   43d28:	b.eq	43d0c <__asan_internal_strnlen@@Base+0x18a4>  // b.none
   43d2c:	mov	x0, x25
   43d30:	b	43d14 <__asan_internal_strnlen@@Base+0x18ac>
   43d34:	strb	w1, [x25], #1
   43d38:	strb	w1, [x25], #1
   43d3c:	strb	w1, [x25], #1
   43d40:	b	43cb4 <__asan_internal_strnlen@@Base+0x184c>
   43d44:	cmp	w0, #0x9
   43d48:	b.eq	43d58 <__asan_internal_strnlen@@Base+0x18f0>  // b.none
   43d4c:	cmp	w0, #0xa
   43d50:	b.ne	43d6c <__asan_internal_strnlen@@Base+0x1904>  // b.any
   43d54:	strb	wzr, [x25], #1
   43d58:	strb	wzr, [x25], #1
   43d5c:	strb	wzr, [x25], #1
   43d60:	strb	wzr, [x25], #1
   43d64:	strb	wzr, [x25], #1
   43d68:	b	43d08 <__asan_internal_strnlen@@Base+0x18a0>
   43d6c:	cmp	w0, #0x8
   43d70:	b.ne	43d2c <__asan_internal_strnlen@@Base+0x18c4>  // b.any
   43d74:	strb	wzr, [x25], #1
   43d78:	b	43d60 <__asan_internal_strnlen@@Base+0x18f8>
   43d7c:	mov	x27, x19
   43d80:	mov	x19, x26
   43d84:	mov	x26, x21
   43d88:	mov	x21, x23
   43d8c:	mov	x23, x22
   43d90:	ldp	x22, x5, [sp, #136]
   43d94:	ldr	x4, [sp, #152]
   43d98:	str	x4, [sp, #152]
   43d9c:	ldrb	w0, [x28, #888]
   43da0:	cbz	w0, 43664 <__asan_internal_strnlen@@Base+0x11fc>
   43da4:	mov	x3, x23
   43da8:	mov	x2, x23
   43dac:	mov	x1, x5
   43db0:	mov	x0, x26
   43db4:	str	x5, [sp, #136]
   43db8:	bl	42790 <__asan_internal_strnlen@@Base+0x328>
   43dbc:	cbz	w0, 43664 <__asan_internal_strnlen@@Base+0x11fc>
   43dc0:	ldr	x5, [sp, #136]
   43dc4:	add	x3, x23, #0x800
   43dc8:	ldr	x4, [sp, #152]
   43dcc:	mov	x2, x23
   43dd0:	add	x0, x26, x5
   43dd4:	str	x3, [sp, #144]
   43dd8:	mov	x1, x4
   43ddc:	bl	42790 <__asan_internal_strnlen@@Base+0x328>
   43de0:	cbz	w0, 43664 <__asan_internal_strnlen@@Base+0x11fc>
   43de4:	mov	x28, x23
   43de8:	b	437c4 <__asan_internal_strnlen@@Base+0x135c>
   43dec:	sub	w2, w0, #0x1
   43df0:	and	w1, w2, w1
   43df4:	add	w1, w0, w1
   43df8:	b	43b34 <__asan_internal_strnlen@@Base+0x16cc>
   43dfc:	str	x24, [sp, #112]
   43e00:	ldp	x21, x22, [sp, #32]
   43e04:	ldp	x23, x24, [sp, #48]
   43e08:	ldp	x27, x28, [sp, #80]
   43e0c:	ldp	x1, x0, [sp, #104]
   43e10:	cmp	x0, x1
   43e14:	cset	w0, eq  // eq = none
   43e18:	b	43590 <__asan_internal_strnlen@@Base+0x1128>
   43e1c:	mov	w20, w0
   43e20:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43e24:	sub	w20, w0, #0x3
   43e28:	mov	x21, x1
   43e2c:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43e30:	sub	x0, x27, x19
   43e34:	mov	x4, x27
   43e38:	cmp	x0, #0x4
   43e3c:	b.le	43dfc <__asan_internal_strnlen@@Base+0x1994>
   43e40:	ldp	x21, x22, [sp, #32]
   43e44:	ldp	x27, x28, [sp, #80]
   43e48:	b	430d4 <__asan_internal_strnlen@@Base+0xc6c>
   43e4c:	sub	w20, w0, #0x6
   43e50:	mov	x21, x1
   43e54:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43e58:	sub	w20, w0, #0x9
   43e5c:	mov	x21, x1
   43e60:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43e64:	sub	w20, w0, #0xc
   43e68:	mov	x21, x1
   43e6c:	b	43438 <__asan_internal_strnlen@@Base+0xfd0>
   43e70:	add	x16, x16, #0x1
   43e74:	cmp	x9, x16
   43e78:	b.ls	43e84 <__asan_internal_strnlen@@Base+0x1a1c>  // b.plast
   43e7c:	ubfiz	x12, x12, #1, #16
   43e80:	ldrh	w12, [x28, x12]
   43e84:	mov	w0, w10
   43e88:	tst	w10, w7
   43e8c:	b.eq	43ee4 <__asan_internal_strnlen@@Base+0x1a7c>  // b.none
   43e90:	lsr	w0, w0, #1
   43e94:	tst	w0, w7
   43e98:	b.ne	43e90 <__asan_internal_strnlen@@Base+0x1a28>  // b.any
   43e9c:	cbnz	w0, 43ee4 <__asan_internal_strnlen@@Base+0x1a7c>
   43ea0:	mov	w7, #0x0                   	// #0
   43ea4:	cmp	x9, x16
   43ea8:	b.ne	435ec <__asan_internal_strnlen@@Base+0x1184>  // b.any
   43eac:	b	43b7c <__asan_internal_strnlen@@Base+0x1714>
   43eb0:	tbz	w0, #12, 43664 <__asan_internal_strnlen@@Base+0x11fc>
   43eb4:	ubfx	x17, x0, #9, #3
   43eb8:	and	x15, x0, #0x1ff
   43ebc:	cmp	x17, x6
   43ec0:	mov	x2, x17
   43ec4:	b.cc	43664 <__asan_internal_strnlen@@Base+0x11fc>  // b.lo, b.ul, b.last
   43ec8:	mov	x13, x1
   43ecc:	b	4362c <__asan_internal_strnlen@@Base+0x11c4>
   43ed0:	mov	x19, x27
   43ed4:	mov	w0, w20
   43ed8:	mov	x27, x22
   43edc:	ldp	x22, x23, [sp, #160]
   43ee0:	b	43748 <__asan_internal_strnlen@@Base+0x12e0>
   43ee4:	sub	w1, w0, #0x1
   43ee8:	and	w7, w1, w7
   43eec:	add	w7, w0, w7
   43ef0:	b	43ea4 <__asan_internal_strnlen@@Base+0x1a3c>
   43ef4:	nop
   43ef8:	stp	x29, x30, [sp, #-80]!
   43efc:	mov	x29, sp
   43f00:	stp	x19, x20, [sp, #16]
   43f04:	mov	x20, x2
   43f08:	mov	x2, x4
   43f0c:	stp	x21, x22, [sp, #32]
   43f10:	mov	x21, x6
   43f14:	mov	x22, x1
   43f18:	stp	x23, x24, [sp, #48]
   43f1c:	mov	x24, x7
   43f20:	ldr	x23, [x6]
   43f24:	str	x25, [sp, #64]
   43f28:	mov	x25, x3
   43f2c:	mov	x3, x5
   43f30:	ldrb	w6, [x1, #5]
   43f34:	ldrb	w8, [x1, #4]
   43f38:	ldrb	w10, [x1, #6]
   43f3c:	ldrb	w1, [x1, #7]
   43f40:	orr	x8, x6, x8, lsl #8
   43f44:	ldrb	w9, [x22, #8]
   43f48:	ldrb	w6, [x22, #9]
   43f4c:	orr	x8, x10, x8, lsl #8
   43f50:	ldrb	w19, [x22, #10]
   43f54:	orr	x8, x1, x8, lsl #8
   43f58:	ldrb	w1, [x22, #11]
   43f5c:	orr	x8, x9, x8, lsl #8
   43f60:	orr	x8, x6, x8, lsl #8
   43f64:	orr	x19, x19, x8, lsl #8
   43f68:	orr	x19, x1, x19, lsl #8
   43f6c:	cbz	x23, 43fbc <__asan_internal_strnlen@@Base+0x1b54>
   43f70:	ldr	x1, [x7]
   43f74:	cmp	x19, x1
   43f78:	b.hi	43fbc <__asan_internal_strnlen@@Base+0x1b54>  // b.pmore
   43f7c:	add	x22, x22, #0xc
   43f80:	mov	x2, x25
   43f84:	mov	x0, x22
   43f88:	mov	x4, x19
   43f8c:	mov	x3, x23
   43f90:	sub	x1, x20, #0xc
   43f94:	mov	w25, #0x1                   	// #1
   43f98:	bl	43088 <__asan_internal_strnlen@@Base+0xc20>
   43f9c:	cbnz	w0, 43fd4 <__asan_internal_strnlen@@Base+0x1b6c>
   43fa0:	mov	w0, w25
   43fa4:	ldp	x19, x20, [sp, #16]
   43fa8:	ldp	x21, x22, [sp, #32]
   43fac:	ldp	x23, x24, [sp, #48]
   43fb0:	ldr	x25, [sp, #64]
   43fb4:	ldp	x29, x30, [sp], #80
   43fb8:	ret
   43fbc:	mov	x1, x19
   43fc0:	bl	68c0 <__asan_backtrace_alloc@plt>
   43fc4:	mov	x23, x0
   43fc8:	cbnz	x0, 43f7c <__asan_internal_strnlen@@Base+0x1b14>
   43fcc:	mov	w25, #0x0                   	// #0
   43fd0:	b	43fa0 <__asan_internal_strnlen@@Base+0x1b38>
   43fd4:	sub	x0, x20, #0x10
   43fd8:	mov	x2, x19
   43fdc:	add	x0, x22, x0
   43fe0:	mov	x1, x23
   43fe4:	bl	424d0 <__asan_internal_strnlen@@Base+0x68>
   43fe8:	cbz	w0, 43fa0 <__asan_internal_strnlen@@Base+0x1b38>
   43fec:	str	x23, [x21]
   43ff0:	mov	w0, w25
   43ff4:	str	x19, [x24]
   43ff8:	ldp	x19, x20, [sp, #16]
   43ffc:	ldp	x21, x22, [sp, #32]
   44000:	ldp	x23, x24, [sp, #48]
   44004:	ldr	x25, [sp, #64]
   44008:	ldp	x29, x30, [sp], #80
   4400c:	ret
   44010:	sub	sp, sp, #0x4c0
   44014:	stp	x29, x30, [sp, #80]
   44018:	add	x29, sp, #0x50
   4401c:	stp	x21, x22, [sp, #112]
   44020:	mov	x21, x0
   44024:	ldr	w0, [sp, #1240]
   44028:	stp	x19, x20, [sp, #96]
   4402c:	mov	w22, w2
   44030:	mov	x19, x4
   44034:	stp	x23, x24, [sp, #128]
   44038:	mov	x20, x5
   4403c:	stp	x25, x26, [sp, #144]
   44040:	mov	x26, x7
   44044:	stp	x3, x6, [sp, #192]
   44048:	str	x1, [sp, #208]
   4404c:	cbnz	w0, 4405c <__asan_internal_strnlen@@Base+0x1bf4>
   44050:	ldr	x0, [sp, #1216]
   44054:	str	wzr, [x7]
   44058:	str	wzr, [x0]
   4405c:	add	x23, sp, #0x1b8
   44060:	mov	x5, x20
   44064:	mov	x6, x23
   44068:	mov	x4, x19
   4406c:	mov	w1, w22
   44070:	mov	x0, x21
   44074:	mov	x3, #0x40                  	// #64
   44078:	mov	x2, #0x0                   	// #0
   4407c:	bl	6ae0 <__asan_backtrace_get_view@plt>
   44080:	cbnz	w0, 440e8 <__asan_internal_strnlen@@Base+0x1c80>
   44084:	mov	w23, #0x0                   	// #0
   44088:	mov	x24, #0x0                   	// #0
   4408c:	nop
   44090:	cbnz	w23, 44140 <__asan_internal_strnlen@@Base+0x1cd8>
   44094:	cbz	x24, 440ac <__asan_internal_strnlen@@Base+0x1c44>
   44098:	add	x1, x24, #0x18
   4409c:	mov	x0, x21
   440a0:	mov	x3, x20
   440a4:	mov	x2, x19
   440a8:	bl	6760 <__asan_backtrace_release_view@plt>
   440ac:	cmn	w22, #0x1
   440b0:	mov	w24, #0x0                   	// #0
   440b4:	b.eq	440c8 <__asan_internal_strnlen@@Base+0x1c60>  // b.none
   440b8:	mov	x2, x20
   440bc:	mov	x1, x19
   440c0:	mov	w0, w22
   440c4:	bl	6c90 <__asan_backtrace_close@plt>
   440c8:	mov	w0, w24
   440cc:	ldp	x29, x30, [sp, #80]
   440d0:	ldp	x19, x20, [sp, #96]
   440d4:	ldp	x21, x22, [sp, #112]
   440d8:	ldp	x23, x24, [sp, #128]
   440dc:	ldp	x25, x26, [sp, #144]
   440e0:	add	sp, sp, #0x4c0
   440e4:	ret
   440e8:	ldr	x1, [sp, #440]
   440ec:	mov	x2, #0x40                  	// #64
   440f0:	add	x0, sp, #0x2c0
   440f4:	bl	67d0 <__asan_internal_memcpy@plt>
   440f8:	mov	x1, x23
   440fc:	mov	x0, x21
   44100:	mov	x3, x20
   44104:	mov	x2, x19
   44108:	bl	6760 <__asan_backtrace_release_view@plt>
   4410c:	ldr	w1, [sp, #704]
   44110:	mov	w0, #0x457f                	// #17791
   44114:	movk	w0, #0x464c, lsl #16
   44118:	cmp	w1, w0
   4411c:	b.eq	44158 <__asan_internal_strnlen@@Base+0x1cf0>  // b.none
   44120:	mov	x0, x20
   44124:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44128:	mov	w2, #0x0                   	// #0
   4412c:	add	x1, x1, #0x800
   44130:	mov	w23, #0x0                   	// #0
   44134:	mov	x24, #0x0                   	// #0
   44138:	blr	x19
   4413c:	b	44090 <__asan_internal_strnlen@@Base+0x1c28>
   44140:	mov	x3, x20
   44144:	mov	x2, x19
   44148:	add	x1, sp, #0x300
   4414c:	mov	x0, x21
   44150:	bl	6760 <__asan_backtrace_release_view@plt>
   44154:	b	44094 <__asan_internal_strnlen@@Base+0x1c2c>
   44158:	ldrb	w0, [sp, #710]
   4415c:	cmp	w0, #0x1
   44160:	b.ne	44190 <__asan_internal_strnlen@@Base+0x1d28>  // b.any
   44164:	ldrb	w0, [sp, #708]
   44168:	cmp	w0, #0x2
   4416c:	b.eq	441b0 <__asan_internal_strnlen@@Base+0x1d48>  // b.none
   44170:	mov	x0, x20
   44174:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44178:	mov	w2, #0x0                   	// #0
   4417c:	add	x1, x1, #0x850
   44180:	mov	w23, #0x0                   	// #0
   44184:	mov	x24, #0x0                   	// #0
   44188:	blr	x19
   4418c:	b	44090 <__asan_internal_strnlen@@Base+0x1c28>
   44190:	mov	x0, x20
   44194:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44198:	mov	w2, #0x0                   	// #0
   4419c:	add	x1, x1, #0x820
   441a0:	mov	w23, #0x0                   	// #0
   441a4:	mov	x24, #0x0                   	// #0
   441a8:	blr	x19
   441ac:	b	44090 <__asan_internal_strnlen@@Base+0x1c28>
   441b0:	ldrb	w0, [sp, #709]
   441b4:	sub	w0, w0, #0x1
   441b8:	and	w0, w0, #0xff
   441bc:	cmp	w0, #0x1
   441c0:	b.hi	442b8 <__asan_internal_strnlen@@Base+0x1e50>  // b.pmore
   441c4:	ldr	w0, [sp, #1232]
   441c8:	cbz	w0, 441d8 <__asan_internal_strnlen@@Base+0x1d70>
   441cc:	ldrh	w0, [sp, #720]
   441d0:	cmp	w0, #0x3
   441d4:	b.eq	4589c <__asan_internal_strnlen@@Base+0x3434>  // b.none
   441d8:	ldrh	w0, [sp, #764]
   441dc:	ldrh	w24, [sp, #766]
   441e0:	ldr	x25, [sp, #744]
   441e4:	cmp	w0, #0x0
   441e8:	stp	x27, x28, [sp, #160]
   441ec:	mov	w27, #0xffff                	// #65535
   441f0:	ccmp	w24, w27, #0x4, ne  // ne = any
   441f4:	str	w0, [sp, #256]
   441f8:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   441fc:	b.ne	442f0 <__asan_internal_strnlen@@Base+0x1e88>  // b.any
   44200:	ldr	w23, [sp, #256]
   44204:	add	x0, sp, #0x1d0
   44208:	mov	x6, x0
   4420c:	add	x2, x25, #0x40
   44210:	sub	w3, w23, #0x1
   44214:	mov	x5, x20
   44218:	mov	x4, x19
   4421c:	mov	w1, w22
   44220:	lsl	x3, x3, #6
   44224:	str	x0, [sp, #240]
   44228:	mov	x0, x21
   4422c:	bl	6ae0 <__asan_backtrace_get_view@plt>
   44230:	cbz	w0, 442e4 <__asan_internal_strnlen@@Base+0x1e7c>
   44234:	ldr	x27, [sp, #464]
   44238:	sub	w3, w24, #0x1
   4423c:	add	x0, sp, #0x1e8
   44240:	mov	x5, x20
   44244:	mov	x6, x0
   44248:	mov	x4, x19
   4424c:	add	x3, x27, x3, lsl #6
   44250:	mov	w1, w22
   44254:	str	x0, [sp, #248]
   44258:	mov	x0, x21
   4425c:	str	x27, [sp, #344]
   44260:	ldp	x2, x3, [x3, #24]
   44264:	str	x3, [sp, #328]
   44268:	bl	6ae0 <__asan_backtrace_get_view@plt>
   4426c:	cbnz	w0, 44360 <__asan_internal_strnlen@@Base+0x1ef8>
   44270:	ldr	x1, [sp, #240]
   44274:	mov	x3, x20
   44278:	mov	x2, x19
   4427c:	mov	x0, x21
   44280:	mov	w23, #0x0                   	// #0
   44284:	mov	x24, #0x0                   	// #0
   44288:	bl	6760 <__asan_backtrace_release_view@plt>
   4428c:	str	wzr, [sp, #224]
   44290:	ldr	w0, [sp, #224]
   44294:	cbz	w0, 442d8 <__asan_internal_strnlen@@Base+0x1e70>
   44298:	mov	x3, x20
   4429c:	mov	x2, x19
   442a0:	add	x1, sp, #0x230
   442a4:	mov	x0, x21
   442a8:	bl	6760 <__asan_backtrace_release_view@plt>
   442ac:	ldp	x27, x28, [sp, #160]
   442b0:	cbz	w23, 44094 <__asan_internal_strnlen@@Base+0x1c2c>
   442b4:	b	44140 <__asan_internal_strnlen@@Base+0x1cd8>
   442b8:	mov	x0, x20
   442bc:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   442c0:	mov	w2, #0x0                   	// #0
   442c4:	add	x1, x1, #0x878
   442c8:	mov	w23, #0x0                   	// #0
   442cc:	mov	x24, #0x0                   	// #0
   442d0:	blr	x19
   442d4:	b	44090 <__asan_internal_strnlen@@Base+0x1c28>
   442d8:	ldp	x27, x28, [sp, #160]
   442dc:	cbz	w23, 44094 <__asan_internal_strnlen@@Base+0x1c2c>
   442e0:	b	44140 <__asan_internal_strnlen@@Base+0x1cd8>
   442e4:	mov	w23, #0x0                   	// #0
   442e8:	ldp	x27, x28, [sp, #160]
   442ec:	b	44088 <__asan_internal_strnlen@@Base+0x1c20>
   442f0:	add	x0, sp, #0x380
   442f4:	mov	x5, x20
   442f8:	mov	x6, x0
   442fc:	mov	x4, x19
   44300:	mov	x2, x25
   44304:	mov	w1, w22
   44308:	mov	x3, #0x8                   	// #8
   4430c:	str	x0, [sp, #264]
   44310:	mov	x0, x21
   44314:	bl	6ae0 <__asan_backtrace_get_view@plt>
   44318:	mov	w23, w0
   4431c:	cbz	w0, 44864 <__asan_internal_strnlen@@Base+0x23fc>
   44320:	ldr	w1, [sp, #256]
   44324:	ldr	x0, [sp, #896]
   44328:	cbz	w1, 447e8 <__asan_internal_strnlen@@Base+0x2380>
   4432c:	ldr	w24, [x0, #40]
   44330:	mov	w1, #0xffff                	// #65535
   44334:	ldr	w0, [sp, #256]
   44338:	cmp	w24, w0
   4433c:	sub	w0, w24, #0x100
   44340:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
   44344:	csel	w24, w0, w24, hi  // hi = pmore
   44348:	ldr	x1, [sp, #264]
   4434c:	mov	x3, x20
   44350:	mov	x2, x19
   44354:	mov	x0, x21
   44358:	bl	6760 <__asan_backtrace_release_view@plt>
   4435c:	b	44200 <__asan_internal_strnlen@@Base+0x1d98>
   44360:	add	x0, sp, #0x380
   44364:	mov	x2, #0x140                 	// #320
   44368:	mov	w1, #0x0                   	// #0
   4436c:	str	x0, [sp, #264]
   44370:	ldr	x28, [sp, #488]
   44374:	bl	6860 <__asan_internal_memset@plt>
   44378:	ldr	w0, [sp, #1240]
   4437c:	cmp	w23, #0x1
   44380:	eor	w0, w0, #0x1
   44384:	and	w0, w0, #0x1
   44388:	str	w0, [sp, #388]
   4438c:	b.ls	45858 <__asan_internal_strnlen@@Base+0x33f0>  // b.plast
   44390:	ldr	x1, [sp, #1248]
   44394:	mov	x24, #0x0                   	// #0
   44398:	mov	w2, #0x0                   	// #0
   4439c:	str	x21, [sp, #288]
   443a0:	cmp	x1, #0x0
   443a4:	add	x1, sp, #0x290
   443a8:	csinc	w0, w0, wzr, eq  // eq = none
   443ac:	str	w0, [sp, #232]
   443b0:	add	x0, sp, #0x2a8
   443b4:	stp	x26, x1, [sp, #392]
   443b8:	add	x1, sp, #0x388
   443bc:	str	x0, [sp, #408]
   443c0:	adrp	x0, 6c000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   443c4:	add	x0, x0, #0xa80
   443c8:	str	x1, [sp, #280]
   443cc:	ldr	x26, [sp, #328]
   443d0:	mov	w1, #0x1                   	// #1
   443d4:	mov	x21, x0
   443d8:	str	w22, [sp, #300]
   443dc:	mov	w22, w1
   443e0:	str	x24, [sp, #336]
   443e4:	mov	w24, w2
   443e8:	mov	w25, #0x0                   	// #0
   443ec:	str	wzr, [sp, #216]
   443f0:	str	wzr, [sp, #224]
   443f4:	str	wzr, [sp, #272]
   443f8:	stp	x19, x20, [sp, #304]
   443fc:	str	xzr, [sp, #320]
   44400:	str	xzr, [sp, #352]
   44404:	str	wzr, [sp, #360]
   44408:	str	wzr, [sp, #364]
   4440c:	stp	xzr, xzr, [sp, #368]
   44410:	str	wzr, [sp, #384]
   44414:	nop
   44418:	ldr	w0, [x27, #4]
   4441c:	cmp	w0, #0x2
   44420:	b.eq	44654 <__asan_internal_strnlen@@Base+0x21ec>  // b.none
   44424:	cmp	w0, #0xb
   44428:	csel	w24, w24, w22, ne  // ne = any
   4442c:	ldr	w19, [x27]
   44430:	cmp	x19, x26
   44434:	b.cs	447b4 <__asan_internal_strnlen@@Base+0x234c>  // b.hs, b.nlast
   44438:	add	x19, x28, x19
   4443c:	mov	x23, #0x0                   	// #0
   44440:	ldr	x1, [x21, x23, lsl #3]
   44444:	mov	w20, w23
   44448:	mov	x0, x19
   4444c:	add	x23, x23, #0x1
   44450:	bl	6b30 <__asan_internal_strcmp@plt>
   44454:	cbz	w0, 44624 <__asan_internal_strnlen@@Base+0x21bc>
   44458:	cmp	x23, #0xa
   4445c:	b.ne	44440 <__asan_internal_strnlen@@Base+0x1fd8>  // b.any
   44460:	ldr	w0, [sp, #232]
   44464:	cbz	w0, 44498 <__asan_internal_strnlen@@Base+0x2030>
   44468:	ldr	w0, [sp, #224]
   4446c:	cbz	w0, 44738 <__asan_internal_strnlen@@Base+0x22d0>
   44470:	ldr	w1, [sp, #216]
   44474:	ldr	w0, [sp, #1240]
   44478:	orr	w0, w0, w1
   4447c:	cbnz	w0, 44498 <__asan_internal_strnlen@@Base+0x2030>
   44480:	mov	x0, x19
   44484:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44488:	add	x1, x1, #0x8e0
   4448c:	bl	6b30 <__asan_internal_strcmp@plt>
   44490:	str	wzr, [sp, #216]
   44494:	cbz	w0, 445a8 <__asan_internal_strnlen@@Base+0x2140>
   44498:	cbz	w25, 446c8 <__asan_internal_strnlen@@Base+0x2260>
   4449c:	ldrh	w0, [sp, #722]
   444a0:	cmp	w0, #0x15
   444a4:	b.eq	4465c <__asan_internal_strnlen@@Base+0x21f4>  // b.none
   444a8:	ldr	w0, [sp, #256]
   444ac:	add	w22, w22, #0x1
   444b0:	add	x27, x27, #0x40
   444b4:	cmp	w0, w22
   444b8:	b.ne	44418 <__asan_internal_strnlen@@Base+0x1fb0>  // b.any
   444bc:	ldr	w0, [sp, #272]
   444c0:	ldr	w1, [sp, #388]
   444c4:	cmp	w0, #0x0
   444c8:	str	w25, [sp, #232]
   444cc:	csel	w0, w0, w24, ne  // ne = any
   444d0:	ldr	w22, [sp, #300]
   444d4:	cmp	w0, #0x0
   444d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   444dc:	ldr	x21, [sp, #288]
   444e0:	ldp	x19, x20, [sp, #304]
   444e4:	ldr	x24, [sp, #336]
   444e8:	ldr	x26, [sp, #392]
   444ec:	b.eq	44df8 <__asan_internal_strnlen@@Base+0x2990>  // b.none
   444f0:	ldr	x1, [sp, #344]
   444f4:	sub	w0, w0, #0x1
   444f8:	add	x25, x1, x0, lsl #6
   444fc:	ldr	w0, [sp, #256]
   44500:	ldr	w27, [x25, #40]
   44504:	cmp	w0, w27
   44508:	b.hi	44870 <__asan_internal_strnlen@@Base+0x2408>  // b.pmore
   4450c:	mov	w23, #0x0                   	// #0
   44510:	mov	w28, #0x0                   	// #0
   44514:	mov	x0, x20
   44518:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   4451c:	mov	w2, #0x0                   	// #0
   44520:	add	x1, x1, #0x910
   44524:	blr	x19
   44528:	ldr	x1, [sp, #240]
   4452c:	mov	x3, x20
   44530:	mov	x2, x19
   44534:	mov	x0, x21
   44538:	bl	6760 <__asan_backtrace_release_view@plt>
   4453c:	ldr	x1, [sp, #248]
   44540:	mov	x3, x20
   44544:	mov	x2, x19
   44548:	mov	x0, x21
   4454c:	bl	6760 <__asan_backtrace_release_view@plt>
   44550:	cbz	w28, 44568 <__asan_internal_strnlen@@Base+0x2100>
   44554:	mov	x3, x20
   44558:	mov	x2, x19
   4455c:	add	x1, sp, #0x200
   44560:	mov	x0, x21
   44564:	bl	6760 <__asan_backtrace_release_view@plt>
   44568:	cbnz	w23, 44608 <__asan_internal_strnlen@@Base+0x21a0>
   4456c:	ldr	w0, [sp, #216]
   44570:	cbz	w0, 44588 <__asan_internal_strnlen@@Base+0x2120>
   44574:	mov	x3, x20
   44578:	mov	x2, x19
   4457c:	add	x1, sp, #0x248
   44580:	mov	x0, x21
   44584:	bl	6760 <__asan_backtrace_release_view@plt>
   44588:	ldr	w0, [sp, #232]
   4458c:	cbz	w0, 44290 <__asan_internal_strnlen@@Base+0x1e28>
   44590:	mov	x3, x20
   44594:	mov	x2, x19
   44598:	add	x1, sp, #0x260
   4459c:	mov	x0, x21
   445a0:	bl	6760 <__asan_backtrace_release_view@plt>
   445a4:	b	44290 <__asan_internal_strnlen@@Base+0x1e28>
   445a8:	ldp	x2, x3, [x27, #24]
   445ac:	add	x6, sp, #0x248
   445b0:	ldp	x4, x5, [sp, #304]
   445b4:	ldr	w1, [sp, #300]
   445b8:	ldr	x0, [sp, #288]
   445bc:	bl	6ae0 <__asan_backtrace_get_view@plt>
   445c0:	mov	w20, w0
   445c4:	cbz	w0, 45334 <__asan_internal_strnlen@@Base+0x2ecc>
   445c8:	ldr	x1, [x27, #32]
   445cc:	mov	w0, #0x1                   	// #1
   445d0:	ldr	x20, [sp, #584]
   445d4:	str	w0, [sp, #216]
   445d8:	mov	x0, x20
   445dc:	bl	6b50 <__asan_internal_strnlen@plt>
   445e0:	add	x0, x0, #0x3
   445e4:	ldr	x1, [x27, #32]
   445e8:	and	x0, x0, #0xfffffffffffffffc
   445ec:	add	x2, x0, #0x4
   445f0:	cmp	x2, x1
   445f4:	b.hi	44498 <__asan_internal_strnlen@@Base+0x2030>  // b.pmore
   445f8:	ldr	w0, [x20, x0]
   445fc:	str	w0, [sp, #360]
   44600:	str	x20, [sp, #376]
   44604:	b	44498 <__asan_internal_strnlen@@Base+0x2030>
   44608:	mov	w23, #0x0                   	// #0
   4460c:	mov	x3, x20
   44610:	mov	x2, x19
   44614:	add	x1, sp, #0x218
   44618:	mov	x0, x21
   4461c:	bl	6760 <__asan_backtrace_release_view@plt>
   44620:	b	4456c <__asan_internal_strnlen@@Base+0x2104>
   44624:	ldr	x2, [sp, #264]
   44628:	sbfiz	x20, x20, #5, #32
   4462c:	ldr	x0, [x27, #24]
   44630:	add	x1, sp, #0x398
   44634:	str	x0, [x2, x20]
   44638:	ldr	x2, [sp, #280]
   4463c:	ldr	x0, [x27, #32]
   44640:	str	x0, [x2, x20]
   44644:	ldr	x0, [x27, #8]
   44648:	ubfx	w0, w0, #11, #1
   4464c:	str	w0, [x1, x20]
   44650:	b	44460 <__asan_internal_strnlen@@Base+0x1ff8>
   44654:	str	w22, [sp, #272]
   44658:	b	4442c <__asan_internal_strnlen@@Base+0x1fc4>
   4465c:	ldr	w0, [sp, #752]
   44660:	tbnz	w0, #1, 444a8 <__asan_internal_strnlen@@Base+0x2040>
   44664:	ldr	w0, [x27, #4]
   44668:	cmp	w0, #0x1
   4466c:	b.ne	444a8 <__asan_internal_strnlen@@Base+0x2040>  // b.any
   44670:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44674:	mov	x0, x19
   44678:	add	x1, x1, #0x908
   4467c:	bl	6b30 <__asan_internal_strcmp@plt>
   44680:	cbnz	w0, 444a8 <__asan_internal_strnlen@@Base+0x2040>
   44684:	ldp	x2, x3, [x27, #24]
   44688:	ldp	x4, x5, [sp, #304]
   4468c:	ldr	w1, [sp, #300]
   44690:	ldr	x0, [sp, #288]
   44694:	ldr	x6, [sp, #408]
   44698:	bl	6ae0 <__asan_backtrace_get_view@plt>
   4469c:	mov	w20, w0
   446a0:	cbz	w0, 45334 <__asan_internal_strnlen@@Base+0x2ecc>
   446a4:	ldr	x0, [x27, #16]
   446a8:	str	x0, [sp, #656]
   446ac:	ldr	x0, [sp, #400]
   446b0:	str	x0, [sp, #336]
   446b4:	ldr	x0, [x27, #32]
   446b8:	str	x0, [sp, #672]
   446bc:	ldr	x0, [sp, #680]
   446c0:	str	x0, [sp, #664]
   446c4:	b	444a8 <__asan_internal_strnlen@@Base+0x2040>
   446c8:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   446cc:	mov	x0, x19
   446d0:	add	x1, x1, #0x8f0
   446d4:	bl	6b30 <__asan_internal_strcmp@plt>
   446d8:	cbnz	w0, 4449c <__asan_internal_strnlen@@Base+0x2034>
   446dc:	ldp	x2, x3, [x27, #24]
   446e0:	add	x6, sp, #0x260
   446e4:	ldp	x4, x5, [sp, #304]
   446e8:	ldr	w1, [sp, #300]
   446ec:	ldr	x0, [sp, #288]
   446f0:	bl	6ae0 <__asan_backtrace_get_view@plt>
   446f4:	mov	w20, w0
   446f8:	cbz	w0, 45334 <__asan_internal_strnlen@@Base+0x2ecc>
   446fc:	ldr	x1, [x27, #32]
   44700:	mov	w25, #0x1                   	// #1
   44704:	ldr	x20, [sp, #608]
   44708:	str	x20, [sp, #320]
   4470c:	mov	x0, x20
   44710:	bl	6b50 <__asan_internal_strnlen@plt>
   44714:	ldr	x1, [x27, #32]
   44718:	cmp	x1, x0
   4471c:	b.ls	4449c <__asan_internal_strnlen@@Base+0x2034>  // b.plast
   44720:	add	x0, x0, #0x1
   44724:	sub	w1, w1, w0
   44728:	add	x0, x20, x0
   4472c:	str	x0, [sp, #352]
   44730:	str	w1, [sp, #364]
   44734:	b	4449c <__asan_internal_strnlen@@Base+0x2034>
   44738:	mov	x0, x19
   4473c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44740:	add	x1, x1, #0x8c0
   44744:	bl	6b30 <__asan_internal_strcmp@plt>
   44748:	mov	w20, w0
   4474c:	cbnz	w0, 44470 <__asan_internal_strnlen@@Base+0x2008>
   44750:	ldp	x2, x3, [x27, #24]
   44754:	add	x6, sp, #0x230
   44758:	ldp	x4, x5, [sp, #304]
   4475c:	ldr	w1, [sp, #300]
   44760:	ldr	x0, [sp, #288]
   44764:	bl	6ae0 <__asan_backtrace_get_view@plt>
   44768:	cbz	w0, 456ac <__asan_internal_strnlen@@Base+0x3244>
   4476c:	ldr	x3, [sp, #560]
   44770:	ldr	w0, [x3, #8]
   44774:	cmp	w0, #0x3
   44778:	b.eq	447fc <__asan_internal_strnlen@@Base+0x2394>  // b.none
   4477c:	ldr	w0, [sp, #1256]
   44780:	cbz	w0, 447a8 <__asan_internal_strnlen@@Base+0x2340>
   44784:	ldr	w0, [sp, #384]
   44788:	ldr	w1, [sp, #1256]
   4478c:	cmp	w0, w1
   44790:	b.ne	4571c <__asan_internal_strnlen@@Base+0x32b4>  // b.any
   44794:	mov	w2, w0
   44798:	ldr	x0, [sp, #368]
   4479c:	ldr	x1, [sp, #1248]
   447a0:	bl	6c20 <__asan_internal_memcmp@plt>
   447a4:	cbnz	w0, 4571c <__asan_internal_strnlen@@Base+0x32b4>
   447a8:	mov	w0, #0x1                   	// #1
   447ac:	str	w0, [sp, #224]
   447b0:	b	44470 <__asan_internal_strnlen@@Base+0x2008>
   447b4:	ldp	x19, x20, [sp, #304]
   447b8:	str	w25, [sp, #232]
   447bc:	ldr	w22, [sp, #300]
   447c0:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   447c4:	mov	w2, #0x0                   	// #0
   447c8:	add	x1, x1, #0x8a0
   447cc:	mov	w23, #0x0                   	// #0
   447d0:	mov	w28, #0x0                   	// #0
   447d4:	ldr	x21, [sp, #288]
   447d8:	mov	x0, x20
   447dc:	ldr	x24, [sp, #336]
   447e0:	blr	x19
   447e4:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   447e8:	ldr	w1, [x0, #32]
   447ec:	cmp	w24, w27
   447f0:	str	w1, [sp, #256]
   447f4:	b.ne	44348 <__asan_internal_strnlen@@Base+0x1ee0>  // b.any
   447f8:	b	4432c <__asan_internal_strnlen@@Base+0x1ec4>
   447fc:	ldr	w0, [x3]
   44800:	cmp	w0, #0x4
   44804:	b.ne	4477c <__asan_internal_strnlen@@Base+0x2314>  // b.any
   44808:	add	x4, x3, #0xc
   4480c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44810:	mov	x0, x4
   44814:	add	x1, x1, #0x8d8
   44818:	mov	x2, #0x4                   	// #4
   4481c:	str	x4, [sp, #224]
   44820:	str	x3, [sp, #328]
   44824:	bl	6b70 <__asan_internal_strncmp@plt>
   44828:	cbnz	w0, 4477c <__asan_internal_strnlen@@Base+0x2314>
   4482c:	ldr	x3, [sp, #328]
   44830:	ldp	w0, w2, [x3]
   44834:	ldr	x3, [x27, #32]
   44838:	add	w0, w0, #0x3
   4483c:	and	w0, w0, #0xfffffffc
   44840:	add	w1, w2, #0xc
   44844:	add	w1, w1, w0
   44848:	cmp	x3, x1
   4484c:	b.hi	4477c <__asan_internal_strnlen@@Base+0x2314>  // b.pmore
   44850:	ldr	x4, [sp, #224]
   44854:	str	w2, [sp, #384]
   44858:	add	x0, x4, w0, uxtw
   4485c:	str	x0, [sp, #368]
   44860:	b	4477c <__asan_internal_strnlen@@Base+0x2314>
   44864:	mov	x24, #0x0                   	// #0
   44868:	ldp	x27, x28, [sp, #160]
   4486c:	b	44090 <__asan_internal_strnlen@@Base+0x1c28>
   44870:	ldp	x2, x3, [x25, #24]
   44874:	add	x0, sp, #0x200
   44878:	mov	x6, x0
   4487c:	mov	x5, x20
   44880:	mov	x4, x19
   44884:	mov	w1, w22
   44888:	mov	w23, #0x0                   	// #0
   4488c:	str	x0, [sp, #256]
   44890:	mov	x0, x21
   44894:	bl	6ae0 <__asan_backtrace_get_view@plt>
   44898:	mov	w28, w0
   4489c:	cbz	w0, 44528 <__asan_internal_strnlen@@Base+0x20c0>
   448a0:	ldr	x0, [sp, #344]
   448a4:	sub	w7, w27, #0x1
   448a8:	add	x6, sp, #0x218
   448ac:	mov	x5, x20
   448b0:	mov	x4, x19
   448b4:	mov	w1, w22
   448b8:	add	x7, x0, x7, lsl #6
   448bc:	mov	x0, x21
   448c0:	str	x7, [sp, #272]
   448c4:	ldp	x2, x3, [x7, #24]
   448c8:	bl	6ae0 <__asan_backtrace_get_view@plt>
   448cc:	mov	w23, w0
   448d0:	cbz	w0, 456a4 <__asan_internal_strnlen@@Base+0x323c>
   448d4:	mov	x3, x20
   448d8:	mov	x2, x19
   448dc:	mov	x0, x21
   448e0:	mov	x1, #0x18                  	// #24
   448e4:	bl	68c0 <__asan_backtrace_alloc@plt>
   448e8:	mov	x23, x0
   448ec:	cbz	x0, 45a74 <__asan_internal_strnlen@@Base+0x360c>
   448f0:	ldr	x0, [x25, #32]
   448f4:	mov	x27, #0x18                  	// #24
   448f8:	ldr	x7, [sp, #272]
   448fc:	cmp	x0, #0x17
   44900:	udiv	x27, x0, x27
   44904:	ldr	x28, [sp, #512]
   44908:	ldr	x6, [x7, #32]
   4490c:	ldr	x4, [sp, #536]
   44910:	b.ls	45af4 <__asan_internal_strnlen@@Base+0x368c>  // b.plast
   44914:	cmp	x0, #0x17f
   44918:	b.ls	45ae4 <__asan_internal_strnlen@@Base+0x367c>  // b.plast
   4491c:	lsr	x1, x27, #4
   44920:	mov	x2, #0x180                 	// #384
   44924:	movi	v4.4s, #0x0
   44928:	mov	x0, x28
   4492c:	movi	v17.16b, #0xf
   44930:	str	d8, [sp, #176]
   44934:	mvni	v6.4s, #0x0
   44938:	madd	x1, x1, x2, x28
   4493c:	movi	v5.4s, #0x1
   44940:	adrp	x2, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44944:	ldr	q16, [x2, #2560]
   44948:	ldr	b3, [x0, #28]
   4494c:	ldr	b0, [x0, #4]
   44950:	ldr	b2, [x0, #52]
   44954:	ldr	b1, [x0, #76]
   44958:	mov	v0.b[1], v3.b[0]
   4495c:	ldr	b7, [x0, #100]
   44960:	ldr	b23, [x0, #124]
   44964:	ldr	b24, [x0, #148]
   44968:	ldr	b21, [x0, #172]
   4496c:	mov	v0.b[2], v2.b[0]
   44970:	ldr	b31, [x0, #196]
   44974:	ldr	b28, [x0, #220]
   44978:	ldr	b25, [x0, #244]
   4497c:	ldr	b22, [x0, #268]
   44980:	mov	v0.b[3], v1.b[0]
   44984:	ldr	b20, [x0, #292]
   44988:	ldr	h3, [x0, #30]
   4498c:	ldr	h2, [x0, #6]
   44990:	ldr	b18, [x0, #316]
   44994:	mov	v0.b[4], v7.b[0]
   44998:	ldr	h1, [x0, #54]
   4499c:	mov	v2.h[1], v3.h[0]
   449a0:	ldr	b7, [x0, #340]
   449a4:	ldr	h8, [x0, #78]
   449a8:	ldr	b3, [x0, #364]
   449ac:	mov	v0.b[5], v23.b[0]
   449b0:	ldr	h23, [x0, #222]
   449b4:	mov	v2.h[2], v1.h[0]
   449b8:	ldr	h1, [x0, #198]
   449bc:	ldr	h19, [x0, #102]
   449c0:	ldr	h29, [x0, #270]
   449c4:	mov	v0.b[6], v24.b[0]
   449c8:	ldr	h30, [x0, #126]
   449cc:	mov	v1.h[1], v23.h[0]
   449d0:	ldr	h26, [x0, #294]
   449d4:	mov	v2.h[3], v8.h[0]
   449d8:	ldr	h8, [x0, #246]
   449dc:	ldr	h27, [x0, #150]
   449e0:	add	x0, x0, #0x180
   449e4:	mov	v0.b[7], v21.b[0]
   449e8:	ldur	h23, [x0, #-66]
   449ec:	mov	v1.h[2], v8.h[0]
   449f0:	ldur	h24, [x0, #-210]
   449f4:	mov	v2.h[4], v19.h[0]
   449f8:	ldur	h21, [x0, #-42]
   449fc:	ldur	h19, [x0, #-18]
   44a00:	cmp	x1, x0
   44a04:	mov	v0.b[8], v31.b[0]
   44a08:	mov	v1.h[3], v29.h[0]
   44a0c:	mov	v2.h[5], v30.h[0]
   44a10:	mov	v0.b[9], v28.b[0]
   44a14:	mov	v1.h[4], v26.h[0]
   44a18:	mov	v2.h[6], v27.h[0]
   44a1c:	mov	v0.b[10], v25.b[0]
   44a20:	mov	v1.h[5], v23.h[0]
   44a24:	mov	v2.h[7], v24.h[0]
   44a28:	mov	v0.b[11], v22.b[0]
   44a2c:	mov	v1.h[6], v21.h[0]
   44a30:	cmeq	v2.8h, v2.8h, #0
   44a34:	mov	v0.b[12], v20.b[0]
   44a38:	mov	v1.h[7], v19.h[0]
   44a3c:	mov	v0.b[13], v18.b[0]
   44a40:	cmeq	v1.8h, v1.8h, #0
   44a44:	mov	v0.b[14], v7.b[0]
   44a48:	mov	v0.b[15], v3.b[0]
   44a4c:	and	v0.16b, v0.16b, v17.16b
   44a50:	uxtl	v3.8h, v0.8b
   44a54:	uxtl2	v0.8h, v0.16b
   44a58:	uaddw	v18.4s, v6.4s, v3.4h
   44a5c:	uaddw2	v3.4s, v6.4s, v3.8h
   44a60:	uaddw	v7.4s, v6.4s, v0.4h
   44a64:	uaddw2	v0.4s, v6.4s, v0.8h
   44a68:	cmhs	v18.4s, v5.4s, v18.4s
   44a6c:	cmhs	v3.4s, v5.4s, v3.4s
   44a70:	cmhs	v7.4s, v5.4s, v7.4s
   44a74:	cmhs	v0.4s, v5.4s, v0.4s
   44a78:	xtn	v19.4h, v18.4s
   44a7c:	xtn2	v19.8h, v3.4s
   44a80:	xtn	v3.4h, v7.4s
   44a84:	xtn2	v3.8h, v0.4s
   44a88:	bic	v2.16b, v19.16b, v2.16b
   44a8c:	bic	v0.16b, v3.16b, v1.16b
   44a90:	sxtl	v7.4s, v2.4h
   44a94:	sxtl2	v1.4s, v2.8h
   44a98:	sxtl	v3.4s, v0.4h
   44a9c:	sxtl2	v0.4s, v0.8h
   44aa0:	sxtl	v2.2d, v7.2s
   44aa4:	and	v2.16b, v16.16b, v2.16b
   44aa8:	ssubw2	v2.2d, v2.2d, v7.4s
   44aac:	ssubw	v2.2d, v2.2d, v1.2s
   44ab0:	ssubw2	v1.2d, v2.2d, v1.4s
   44ab4:	ssubw	v1.2d, v1.2d, v3.2s
   44ab8:	ssubw2	v1.2d, v1.2d, v3.4s
   44abc:	ssubw	v1.2d, v1.2d, v0.2s
   44ac0:	ssubw2	v0.2d, v1.2d, v0.4s
   44ac4:	add	v4.2d, v4.2d, v0.2d
   44ac8:	b.ne	44948 <__asan_internal_strnlen@@Base+0x24e0>  // b.any
   44acc:	addp	d4, v4.2d
   44ad0:	and	x1, x27, #0xfffffffffffffff0
   44ad4:	mov	x0, #0x18                  	// #24
   44ad8:	cmp	x1, x27
   44adc:	ldr	d8, [sp, #176]
   44ae0:	madd	x0, x1, x0, x28
   44ae4:	mov	x25, v4.d[0]
   44ae8:	b.eq	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.none
   44aec:	ldrb	w2, [x0, #4]
   44af0:	and	w2, w2, #0xf
   44af4:	sub	w2, w2, #0x1
   44af8:	cmp	w2, #0x1
   44afc:	b.ls	4595c <__asan_internal_strnlen@@Base+0x34f4>  // b.plast
   44b00:	add	x2, x1, #0x1
   44b04:	cmp	x27, x2
   44b08:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44b0c:	ldrb	w2, [x0, #28]
   44b10:	and	w2, w2, #0xf
   44b14:	sub	w2, w2, #0x1
   44b18:	cmp	w2, #0x1
   44b1c:	b.ls	4594c <__asan_internal_strnlen@@Base+0x34e4>  // b.plast
   44b20:	add	x2, x1, #0x2
   44b24:	cmp	x27, x2
   44b28:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44b2c:	ldrb	w2, [x0, #52]
   44b30:	and	w2, w2, #0xf
   44b34:	sub	w2, w2, #0x1
   44b38:	cmp	w2, #0x1
   44b3c:	b.ls	4593c <__asan_internal_strnlen@@Base+0x34d4>  // b.plast
   44b40:	add	x2, x1, #0x3
   44b44:	cmp	x27, x2
   44b48:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44b4c:	ldrb	w2, [x0, #76]
   44b50:	and	w2, w2, #0xf
   44b54:	sub	w2, w2, #0x1
   44b58:	cmp	w2, #0x1
   44b5c:	b.ls	4592c <__asan_internal_strnlen@@Base+0x34c4>  // b.plast
   44b60:	add	x2, x1, #0x4
   44b64:	cmp	x27, x2
   44b68:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44b6c:	ldrb	w2, [x0, #100]
   44b70:	and	w2, w2, #0xf
   44b74:	sub	w2, w2, #0x1
   44b78:	cmp	w2, #0x1
   44b7c:	b.ls	45ad4 <__asan_internal_strnlen@@Base+0x366c>  // b.plast
   44b80:	add	x2, x1, #0x5
   44b84:	cmp	x27, x2
   44b88:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44b8c:	ldrb	w2, [x0, #124]
   44b90:	and	w2, w2, #0xf
   44b94:	sub	w2, w2, #0x1
   44b98:	cmp	w2, #0x1
   44b9c:	b.ls	45ac4 <__asan_internal_strnlen@@Base+0x365c>  // b.plast
   44ba0:	add	x2, x1, #0x6
   44ba4:	cmp	x27, x2
   44ba8:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44bac:	ldrb	w2, [x0, #148]
   44bb0:	and	w2, w2, #0xf
   44bb4:	sub	w2, w2, #0x1
   44bb8:	cmp	w2, #0x1
   44bbc:	b.ls	45ab4 <__asan_internal_strnlen@@Base+0x364c>  // b.plast
   44bc0:	add	x2, x1, #0x7
   44bc4:	cmp	x27, x2
   44bc8:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44bcc:	ldrb	w2, [x0, #172]
   44bd0:	and	w2, w2, #0xf
   44bd4:	sub	w2, w2, #0x1
   44bd8:	cmp	w2, #0x1
   44bdc:	b.ls	45aa4 <__asan_internal_strnlen@@Base+0x363c>  // b.plast
   44be0:	add	x2, x1, #0x8
   44be4:	cmp	x27, x2
   44be8:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44bec:	ldrb	w2, [x0, #196]
   44bf0:	and	w2, w2, #0xf
   44bf4:	sub	w2, w2, #0x1
   44bf8:	cmp	w2, #0x1
   44bfc:	b.ls	45b68 <__asan_internal_strnlen@@Base+0x3700>  // b.plast
   44c00:	add	x2, x1, #0x9
   44c04:	cmp	x27, x2
   44c08:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44c0c:	ldrb	w2, [x0, #220]
   44c10:	and	w2, w2, #0xf
   44c14:	sub	w2, w2, #0x1
   44c18:	cmp	w2, #0x1
   44c1c:	b.ls	45b58 <__asan_internal_strnlen@@Base+0x36f0>  // b.plast
   44c20:	add	x2, x1, #0xa
   44c24:	cmp	x27, x2
   44c28:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44c2c:	ldrb	w2, [x0, #244]
   44c30:	and	w2, w2, #0xf
   44c34:	sub	w2, w2, #0x1
   44c38:	cmp	w2, #0x1
   44c3c:	b.ls	45b48 <__asan_internal_strnlen@@Base+0x36e0>  // b.plast
   44c40:	add	x2, x1, #0xb
   44c44:	cmp	x27, x2
   44c48:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44c4c:	ldrb	w2, [x0, #268]
   44c50:	and	w2, w2, #0xf
   44c54:	sub	w2, w2, #0x1
   44c58:	cmp	w2, #0x1
   44c5c:	b.ls	45b38 <__asan_internal_strnlen@@Base+0x36d0>  // b.plast
   44c60:	add	x2, x1, #0xc
   44c64:	cmp	x27, x2
   44c68:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44c6c:	ldrb	w2, [x0, #292]
   44c70:	and	w2, w2, #0xf
   44c74:	sub	w2, w2, #0x1
   44c78:	cmp	w2, #0x1
   44c7c:	b.ls	45b28 <__asan_internal_strnlen@@Base+0x36c0>  // b.plast
   44c80:	add	x2, x1, #0xd
   44c84:	cmp	x27, x2
   44c88:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44c8c:	ldrb	w2, [x0, #316]
   44c90:	and	w2, w2, #0xf
   44c94:	sub	w2, w2, #0x1
   44c98:	cmp	w2, #0x1
   44c9c:	b.ls	45b18 <__asan_internal_strnlen@@Base+0x36b0>  // b.plast
   44ca0:	add	x1, x1, #0xe
   44ca4:	cmp	x27, x1
   44ca8:	b.ls	44cc4 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   44cac:	ldrb	w1, [x0, #340]
   44cb0:	add	x0, x0, #0x150
   44cb4:	and	w1, w1, #0xf
   44cb8:	sub	w1, w1, #0x1
   44cbc:	cmp	w1, #0x1
   44cc0:	b.ls	45a64 <__asan_internal_strnlen@@Base+0x35fc>  // b.plast
   44cc4:	mov	x7, #0x18                  	// #24
   44cc8:	mov	x3, x20
   44ccc:	mov	x2, x19
   44cd0:	mov	x0, x21
   44cd4:	mul	x8, x25, x7
   44cd8:	str	x6, [sp, #288]
   44cdc:	stp	x8, x4, [sp, #272]
   44ce0:	mov	x1, x8
   44ce4:	bl	68c0 <__asan_backtrace_alloc@plt>
   44ce8:	mov	x5, x0
   44cec:	mov	x7, #0x18                  	// #24
   44cf0:	ldp	x8, x4, [sp, #272]
   44cf4:	ldr	x6, [sp, #288]
   44cf8:	cbz	x0, 457b4 <__asan_internal_strnlen@@Base+0x334c>
   44cfc:	cbz	x24, 457d8 <__asan_internal_strnlen@@Base+0x3370>
   44d00:	mov	x1, #0x0                   	// #0
   44d04:	mov	w3, #0x0                   	// #0
   44d08:	ldrb	w0, [x28, #4]
   44d0c:	add	x1, x1, #0x1
   44d10:	and	w0, w0, #0xf
   44d14:	sub	w0, w0, #0x1
   44d18:	cmp	w0, #0x1
   44d1c:	b.hi	44d88 <__asan_internal_strnlen@@Base+0x2920>  // b.pmore
   44d20:	ldrh	w2, [x28, #6]
   44d24:	umull	x0, w3, w7
   44d28:	add	x9, x5, x0
   44d2c:	cbz	w2, 44d88 <__asan_internal_strnlen@@Base+0x2920>
   44d30:	ldr	w2, [x28]
   44d34:	add	w3, w3, #0x1
   44d38:	add	x10, x4, x2
   44d3c:	cmp	x6, x2
   44d40:	b.ls	45780 <__asan_internal_strnlen@@Base+0x3318>  // b.plast
   44d44:	str	x10, [x5, x0]
   44d48:	ldr	x2, [x24]
   44d4c:	ldr	x0, [x28, #8]
   44d50:	cmp	x2, x0
   44d54:	b.hi	44d74 <__asan_internal_strnlen@@Base+0x290c>  // b.pmore
   44d58:	ldr	x11, [x24, #16]
   44d5c:	sub	x10, x0, x2
   44d60:	add	x2, x2, x11
   44d64:	cmp	x2, x0
   44d68:	b.ls	44d74 <__asan_internal_strnlen@@Base+0x290c>  // b.plast
   44d6c:	ldr	x0, [x24, #8]
   44d70:	ldr	x0, [x0, x10]
   44d74:	ldr	x2, [sp, #192]
   44d78:	add	x0, x2, x0
   44d7c:	str	x0, [x9, #8]
   44d80:	ldr	x0, [x28, #16]
   44d84:	str	x0, [x9, #16]
   44d88:	add	x28, x28, #0x18
   44d8c:	cmp	x27, x1
   44d90:	b.hi	44d08 <__asan_internal_strnlen@@Base+0x28a0>  // b.pmore
   44d94:	mov	x0, x5
   44d98:	mov	x1, x25
   44d9c:	mov	x2, #0x18                  	// #24
   44da0:	adrp	x3, 42000 <__asan_java_demangle_v3_callback@@Base+0x20>
   44da4:	add	x3, x3, #0x4b0
   44da8:	str	x5, [sp, #272]
   44dac:	bl	66b0 <__asan_backtrace_qsort@plt>
   44db0:	str	x25, [x23, #16]
   44db4:	ldr	x1, [sp, #256]
   44db8:	mov	x0, x21
   44dbc:	ldr	x5, [sp, #272]
   44dc0:	stp	xzr, x5, [x23]
   44dc4:	mov	x3, x20
   44dc8:	mov	x2, x19
   44dcc:	bl	6760 <__asan_backtrace_release_view@plt>
   44dd0:	mov	w0, #0x1                   	// #1
   44dd4:	str	w0, [x26]
   44dd8:	add	x1, x21, #0x30
   44ddc:	ldr	w0, [x21, #8]
   44de0:	cbnz	w0, 45744 <__asan_internal_strnlen@@Base+0x32dc>
   44de4:	ldr	x0, [x21, #48]
   44de8:	cbz	x0, 45848 <__asan_internal_strnlen@@Base+0x33e0>
   44dec:	mov	x1, x0
   44df0:	ldr	x0, [x0]
   44df4:	b	44de8 <__asan_internal_strnlen@@Base+0x2980>
   44df8:	str	wzr, [sp, #256]
   44dfc:	ldr	x1, [sp, #240]
   44e00:	mov	x3, x20
   44e04:	mov	x2, x19
   44e08:	mov	x0, x21
   44e0c:	bl	6760 <__asan_backtrace_release_view@plt>
   44e10:	ldr	x1, [sp, #248]
   44e14:	mov	x0, x21
   44e18:	mov	x3, x20
   44e1c:	mov	x2, x19
   44e20:	bl	6760 <__asan_backtrace_release_view@plt>
   44e24:	ldr	x0, [sp, #368]
   44e28:	cbz	x0, 44f3c <__asan_internal_strnlen@@Base+0x2ad4>
   44e2c:	adrp	x4, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44e30:	add	x4, x4, #0x968
   44e34:	mov	x0, x4
   44e38:	str	x4, [sp, #248]
   44e3c:	bl	67e0 <__asan_internal_strlen@plt>
   44e40:	ldr	w27, [sp, #384]
   44e44:	mov	x23, x0
   44e48:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44e4c:	add	x0, x0, #0x988
   44e50:	bl	67e0 <__asan_internal_strlen@plt>
   44e54:	add	x1, x27, #0x1
   44e58:	add	x25, x23, x0
   44e5c:	mov	x3, x20
   44e60:	mov	x2, x19
   44e64:	add	x25, x25, x1, lsl #1
   44e68:	str	x0, [sp, #240]
   44e6c:	mov	x1, x25
   44e70:	mov	x0, x21
   44e74:	bl	68c0 <__asan_backtrace_alloc@plt>
   44e78:	mov	x28, x0
   44e7c:	cbz	x0, 44f3c <__asan_internal_strnlen@@Base+0x2ad4>
   44e80:	ldr	x4, [sp, #248]
   44e84:	mov	x2, x23
   44e88:	add	x23, x0, x23
   44e8c:	mov	x1, x4
   44e90:	bl	67d0 <__asan_internal_memcpy@plt>
   44e94:	cbz	x27, 44eec <__asan_internal_strnlen@@Base+0x2a84>
   44e98:	mov	x2, #0x0                   	// #0
   44e9c:	mov	w6, #0x2f                  	// #47
   44ea0:	ldr	x0, [sp, #368]
   44ea4:	ldrb	w0, [x0, x2]
   44ea8:	and	w1, w0, #0xf
   44eac:	lsr	w0, w0, #4
   44eb0:	add	w3, w1, #0x30
   44eb4:	cmp	w0, #0x9
   44eb8:	add	w4, w0, #0x30
   44ebc:	add	w0, w0, #0x57
   44ec0:	csel	w0, w0, w4, hi  // hi = pmore
   44ec4:	cmp	w1, #0x9
   44ec8:	add	w1, w1, #0x57
   44ecc:	strb	w0, [x23]
   44ed0:	csel	w0, w1, w3, hi  // hi = pmore
   44ed4:	strb	w0, [x23, #1]
   44ed8:	cbz	x2, 45020 <__asan_internal_strnlen@@Base+0x2bb8>
   44edc:	add	x2, x2, #0x1
   44ee0:	add	x23, x23, #0x2
   44ee4:	cmp	x27, x2
   44ee8:	b.ne	44ea0 <__asan_internal_strnlen@@Base+0x2a38>  // b.any
   44eec:	ldr	x27, [sp, #240]
   44ef0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   44ef4:	add	x1, x0, #0x988
   44ef8:	mov	x0, x23
   44efc:	mov	x2, x27
   44f00:	bl	67d0 <__asan_internal_memcpy@plt>
   44f04:	strb	wzr, [x23, x27]
   44f08:	add	x3, sp, #0x300
   44f0c:	mov	x2, x20
   44f10:	mov	x1, x19
   44f14:	mov	x0, x28
   44f18:	bl	6d40 <__asan_backtrace_open@plt>
   44f1c:	mov	x2, x25
   44f20:	mov	w23, w0
   44f24:	mov	x1, x28
   44f28:	mov	x4, x20
   44f2c:	mov	x3, x19
   44f30:	mov	x0, x21
   44f34:	bl	6bc0 <__asan_backtrace_free@plt>
   44f38:	tbz	w23, #31, 456cc <__asan_internal_strnlen@@Base+0x3264>
   44f3c:	ldr	w0, [sp, #224]
   44f40:	cbnz	w0, 45008 <__asan_internal_strnlen@@Base+0x2ba0>
   44f44:	cbz	x24, 44f5c <__asan_internal_strnlen@@Base+0x2af4>
   44f48:	add	x1, x24, #0x18
   44f4c:	mov	x3, x20
   44f50:	mov	x2, x19
   44f54:	mov	x0, x21
   44f58:	bl	6760 <__asan_backtrace_release_view@plt>
   44f5c:	ldr	x0, [sp, #376]
   44f60:	cbz	x0, 450e8 <__asan_internal_strnlen@@Base+0x2c80>
   44f64:	ldr	x1, [sp, #208]
   44f68:	mov	x2, x0
   44f6c:	mov	x4, x20
   44f70:	mov	x3, x19
   44f74:	mov	x0, x21
   44f78:	bl	42d88 <__asan_internal_strnlen@@Base+0x920>
   44f7c:	mov	w23, w0
   44f80:	tbnz	w0, #31, 450e8 <__asan_internal_strnlen@@Base+0x2c80>
   44f84:	ldr	w0, [sp, #360]
   44f88:	cbnz	w0, 4503c <__asan_internal_strnlen@@Base+0x2bd4>
   44f8c:	mov	x3, x20
   44f90:	mov	x2, x19
   44f94:	add	x1, sp, #0x248
   44f98:	mov	x0, x21
   44f9c:	bl	6760 <__asan_backtrace_release_view@plt>
   44fa0:	ldr	w0, [sp, #232]
   44fa4:	cbnz	w0, 45704 <__asan_internal_strnlen@@Base+0x329c>
   44fa8:	ldp	x3, x6, [sp, #192]
   44fac:	mov	w0, #0x1                   	// #1
   44fb0:	ldr	x1, [sp, #1216]
   44fb4:	stp	x1, xzr, [sp]
   44fb8:	mov	w2, w23
   44fbc:	str	wzr, [sp, #16]
   44fc0:	mov	x7, x26
   44fc4:	str	w0, [sp, #24]
   44fc8:	mov	x5, x20
   44fcc:	str	xzr, [sp, #32]
   44fd0:	mov	x4, x19
   44fd4:	str	wzr, [sp, #40]
   44fd8:	mov	x0, x21
   44fdc:	adrp	x1, 4d000 <__asan_backtrace_vector_release@@Base+0x6bb0>
   44fe0:	add	x1, x1, #0xb00
   44fe4:	bl	44010 <__asan_internal_strnlen@@Base+0x1ba8>
   44fe8:	mov	w24, w0
   44fec:	mov	x2, x20
   44ff0:	mov	x1, x19
   44ff4:	tbnz	w0, #31, 456f4 <__asan_internal_strnlen@@Base+0x328c>
   44ff8:	mov	w0, w22
   44ffc:	bl	6c90 <__asan_backtrace_close@plt>
   45000:	ldp	x27, x28, [sp, #160]
   45004:	b	440c8 <__asan_internal_strnlen@@Base+0x1c60>
   45008:	mov	x3, x20
   4500c:	mov	x2, x19
   45010:	add	x1, sp, #0x230
   45014:	mov	x0, x21
   45018:	bl	6760 <__asan_backtrace_release_view@plt>
   4501c:	b	44f44 <__asan_internal_strnlen@@Base+0x2adc>
   45020:	strb	w6, [x23, #2]
   45024:	add	x0, x23, #0x3
   45028:	cmp	x27, #0x1
   4502c:	mov	x23, x0
   45030:	b.eq	44eec <__asan_internal_strnlen@@Base+0x2a84>  // b.none
   45034:	mov	x2, #0x1                   	// #1
   45038:	b	44ea0 <__asan_internal_strnlen@@Base+0x2a38>
   4503c:	add	x2, sp, #0x300
   45040:	mov	w1, w23
   45044:	mov	w0, #0x0                   	// #0
   45048:	bl	6660 <__fxstat@plt>
   4504c:	tbnz	w0, #31, 458a4 <__asan_internal_strnlen@@Base+0x343c>
   45050:	ldr	x3, [sp, #816]
   45054:	add	x25, sp, #0x278
   45058:	mov	x6, x25
   4505c:	mov	x5, x20
   45060:	mov	x4, x19
   45064:	mov	w1, w23
   45068:	mov	x0, x21
   4506c:	mov	x2, #0x0                   	// #0
   45070:	bl	6ae0 <__asan_backtrace_get_view@plt>
   45074:	cbz	w0, 450d8 <__asan_internal_strnlen@@Base+0x2c70>
   45078:	ldr	x2, [sp, #632]
   4507c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   45080:	ldr	x3, [sp, #816]
   45084:	add	x0, x0, #0xa10
   45088:	add	x0, x0, #0x4e0
   4508c:	mov	w24, #0xffffffff            	// #-1
   45090:	add	x3, x2, x3
   45094:	b	450ac <__asan_internal_strnlen@@Base+0x2c44>
   45098:	ldrb	w1, [x2], #1
   4509c:	eor	w1, w1, w24
   450a0:	and	x1, x1, #0xff
   450a4:	ldr	w1, [x0, x1, lsl #2]
   450a8:	eor	w24, w1, w24, lsr #8
   450ac:	cmp	x3, x2
   450b0:	b.hi	45098 <__asan_internal_strnlen@@Base+0x2c30>  // b.pmore
   450b4:	mov	x0, x21
   450b8:	mov	x1, x25
   450bc:	mov	x3, x20
   450c0:	mov	x2, x19
   450c4:	bl	6760 <__asan_backtrace_release_view@plt>
   450c8:	mvn	w24, w24
   450cc:	ldr	w0, [sp, #360]
   450d0:	cmp	w24, w0
   450d4:	b.eq	44f8c <__asan_internal_strnlen@@Base+0x2b24>  // b.none
   450d8:	mov	w0, w23
   450dc:	mov	x2, x20
   450e0:	mov	x1, x19
   450e4:	bl	6c90 <__asan_backtrace_close@plt>
   450e8:	ldr	w0, [sp, #216]
   450ec:	cbnz	w0, 45668 <__asan_internal_strnlen@@Base+0x3200>
   450f0:	ldr	x0, [sp, #320]
   450f4:	str	xzr, [sp, #424]
   450f8:	cbz	x0, 45610 <__asan_internal_strnlen@@Base+0x31a8>
   450fc:	ldr	x24, [sp, #208]
   45100:	mov	x2, x0
   45104:	mov	x4, x20
   45108:	mov	x3, x19
   4510c:	mov	x0, x21
   45110:	mov	x1, x24
   45114:	bl	42d88 <__asan_internal_strnlen@@Base+0x920>
   45118:	mov	w23, w0
   4511c:	tbnz	w0, #31, 45610 <__asan_internal_strnlen@@Base+0x31a8>
   45120:	mov	w8, #0x1                   	// #1
   45124:	str	w8, [sp, #24]
   45128:	ldp	x3, x6, [sp, #192]
   4512c:	add	x0, sp, #0x1a8
   45130:	ldr	x8, [sp, #352]
   45134:	str	x8, [sp, #32]
   45138:	ldr	w8, [sp, #364]
   4513c:	mov	x7, x26
   45140:	ldr	x1, [sp, #1216]
   45144:	mov	x5, x20
   45148:	mov	x4, x19
   4514c:	stp	x1, x0, [sp]
   45150:	mov	w2, w23
   45154:	str	wzr, [sp, #16]
   45158:	mov	x1, x24
   4515c:	str	w8, [sp, #40]
   45160:	mov	x0, x21
   45164:	bl	44010 <__asan_internal_strnlen@@Base+0x1ba8>
   45168:	mov	w24, w0
   4516c:	mov	x3, x20
   45170:	mov	x2, x19
   45174:	add	x1, sp, #0x260
   45178:	mov	x0, x21
   4517c:	bl	6760 <__asan_backtrace_release_view@plt>
   45180:	tbnz	w24, #31, 456ec <__asan_internal_strnlen@@Base+0x3284>
   45184:	ldr	x3, [sp, #904]
   45188:	cbz	x3, 4531c <__asan_internal_strnlen@@Base+0x2eb4>
   4518c:	ldr	x24, [sp, #896]
   45190:	ldr	x1, [sp, #936]
   45194:	adds	x3, x24, x3
   45198:	csel	x3, x3, xzr, pl  // pl = nfrst
   4519c:	cbz	x1, 451bc <__asan_internal_strnlen@@Base+0x2d54>
   451a0:	ldr	x0, [sp, #928]
   451a4:	cbz	x24, 4532c <__asan_internal_strnlen@@Base+0x2ec4>
   451a8:	cmp	x24, x0
   451ac:	b.gt	4532c <__asan_internal_strnlen@@Base+0x2ec4>
   451b0:	add	x0, x0, x1
   451b4:	cmp	x3, x0
   451b8:	csel	x3, x3, x0, ge  // ge = tcont
   451bc:	ldr	x1, [sp, #968]
   451c0:	cbz	x1, 451e0 <__asan_internal_strnlen@@Base+0x2d78>
   451c4:	ldr	x0, [sp, #960]
   451c8:	cbz	x24, 45314 <__asan_internal_strnlen@@Base+0x2eac>
   451cc:	cmp	x24, x0
   451d0:	b.gt	45314 <__asan_internal_strnlen@@Base+0x2eac>
   451d4:	add	x0, x0, x1
   451d8:	cmp	x3, x0
   451dc:	csel	x3, x3, x0, ge  // ge = tcont
   451e0:	ldr	x1, [sp, #1000]
   451e4:	cbz	x1, 45200 <__asan_internal_strnlen@@Base+0x2d98>
   451e8:	ldr	x0, [sp, #992]
   451ec:	cbnz	x24, 45630 <__asan_internal_strnlen@@Base+0x31c8>
   451f0:	mov	x24, x0
   451f4:	add	x0, x0, x1
   451f8:	cmp	x3, x0
   451fc:	csel	x3, x3, x0, ge  // ge = tcont
   45200:	ldr	x1, [sp, #1032]
   45204:	cbz	x1, 45220 <__asan_internal_strnlen@@Base+0x2db8>
   45208:	ldr	x0, [sp, #1024]
   4520c:	cbnz	x24, 4563c <__asan_internal_strnlen@@Base+0x31d4>
   45210:	mov	x24, x0
   45214:	add	x0, x0, x1
   45218:	cmp	x3, x0
   4521c:	csel	x3, x3, x0, ge  // ge = tcont
   45220:	ldr	x1, [sp, #1064]
   45224:	cbz	x1, 45240 <__asan_internal_strnlen@@Base+0x2dd8>
   45228:	ldr	x0, [sp, #1056]
   4522c:	cbnz	x24, 45648 <__asan_internal_strnlen@@Base+0x31e0>
   45230:	mov	x24, x0
   45234:	add	x0, x0, x1
   45238:	cmp	x3, x0
   4523c:	csel	x3, x3, x0, ge  // ge = tcont
   45240:	ldr	x1, [sp, #1096]
   45244:	cbz	x1, 45260 <__asan_internal_strnlen@@Base+0x2df8>
   45248:	ldr	x0, [sp, #1088]
   4524c:	cbnz	x24, 45654 <__asan_internal_strnlen@@Base+0x31ec>
   45250:	mov	x24, x0
   45254:	add	x0, x0, x1
   45258:	cmp	x3, x0
   4525c:	csel	x3, x3, x0, ge  // ge = tcont
   45260:	ldr	x1, [sp, #1128]
   45264:	cbz	x1, 45280 <__asan_internal_strnlen@@Base+0x2e18>
   45268:	ldr	x0, [sp, #1120]
   4526c:	cbnz	x24, 45680 <__asan_internal_strnlen@@Base+0x3218>
   45270:	mov	x24, x0
   45274:	add	x0, x0, x1
   45278:	cmp	x3, x0
   4527c:	csel	x3, x3, x0, ge  // ge = tcont
   45280:	ldr	x1, [sp, #1160]
   45284:	cbz	x1, 452a0 <__asan_internal_strnlen@@Base+0x2e38>
   45288:	ldr	x0, [sp, #1152]
   4528c:	cbnz	x24, 4568c <__asan_internal_strnlen@@Base+0x3224>
   45290:	mov	x24, x0
   45294:	add	x0, x0, x1
   45298:	cmp	x3, x0
   4529c:	csel	x3, x3, x0, ge  // ge = tcont
   452a0:	ldr	x1, [sp, #1192]
   452a4:	cbz	x1, 452c4 <__asan_internal_strnlen@@Base+0x2e5c>
   452a8:	ldr	x0, [sp, #1184]
   452ac:	cbz	x24, 45660 <__asan_internal_strnlen@@Base+0x31f8>
   452b0:	cmp	x0, x24
   452b4:	csel	x24, x24, x0, ge  // ge = tcont
   452b8:	add	x0, x0, x1
   452bc:	cmp	x3, x0
   452c0:	csel	x3, x3, x0, ge  // ge = tcont
   452c4:	cmp	x24, #0x0
   452c8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   452cc:	b.ne	45354 <__asan_internal_strnlen@@Base+0x2eec>  // b.any
   452d0:	mov	x2, x20
   452d4:	mov	x1, x19
   452d8:	mov	w0, w22
   452dc:	bl	6c90 <__asan_backtrace_close@plt>
   452e0:	mov	w23, w0
   452e4:	cbnz	w0, 45698 <__asan_internal_strnlen@@Base+0x3230>
   452e8:	ldr	w0, [sp, #256]
   452ec:	cbz	w0, 44864 <__asan_internal_strnlen@@Base+0x23fc>
   452f0:	mov	x24, #0x0                   	// #0
   452f4:	str	wzr, [sp, #216]
   452f8:	str	wzr, [sp, #224]
   452fc:	str	wzr, [sp, #232]
   45300:	b	4460c <__asan_internal_strnlen@@Base+0x21a4>
   45304:	ldr	x1, [sp, #968]
   45308:	cbz	x1, 459dc <__asan_internal_strnlen@@Base+0x3574>
   4530c:	ldr	x0, [sp, #960]
   45310:	mov	x3, #0x0                   	// #0
   45314:	mov	x24, x0
   45318:	b	451d4 <__asan_internal_strnlen@@Base+0x2d6c>
   4531c:	ldr	x1, [sp, #936]
   45320:	cbz	x1, 45304 <__asan_internal_strnlen@@Base+0x2e9c>
   45324:	ldr	x0, [sp, #928]
   45328:	mov	x3, #0x0                   	// #0
   4532c:	mov	x24, x0
   45330:	b	451b0 <__asan_internal_strnlen@@Base+0x2d48>
   45334:	mov	w28, w20
   45338:	ldr	w22, [sp, #300]
   4533c:	mov	w23, #0x0                   	// #0
   45340:	str	w25, [sp, #232]
   45344:	ldr	x21, [sp, #288]
   45348:	ldp	x19, x20, [sp, #304]
   4534c:	ldr	x24, [sp, #336]
   45350:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   45354:	add	x0, sp, #0x300
   45358:	sub	x3, x3, x24
   4535c:	mov	x6, x0
   45360:	mov	x5, x20
   45364:	mov	x4, x19
   45368:	mov	x2, x24
   4536c:	mov	w1, w22
   45370:	str	x0, [sp, #208]
   45374:	mov	x0, x21
   45378:	bl	6ae0 <__asan_backtrace_get_view@plt>
   4537c:	mov	w23, w0
   45380:	cbz	w0, 452e8 <__asan_internal_strnlen@@Base+0x2e80>
   45384:	mov	x2, x20
   45388:	mov	x1, x19
   4538c:	mov	w0, w22
   45390:	bl	6c90 <__asan_backtrace_close@plt>
   45394:	cbz	w0, 45980 <__asan_internal_strnlen@@Base+0x3518>
   45398:	ldr	x1, [sp, #904]
   4539c:	ldr	x0, [sp, #768]
   453a0:	cbz	x1, 45974 <__asan_internal_strnlen@@Base+0x350c>
   453a4:	ldr	x1, [sp, #896]
   453a8:	mov	w22, #0x1                   	// #1
   453ac:	sub	x1, x1, x24
   453b0:	add	x1, x0, x1
   453b4:	str	x1, [sp, #912]
   453b8:	ldr	x1, [sp, #936]
   453bc:	cbz	x1, 4596c <__asan_internal_strnlen@@Base+0x3504>
   453c0:	ldr	x1, [sp, #928]
   453c4:	add	w22, w22, #0x1
   453c8:	sub	x1, x1, x24
   453cc:	add	x1, x0, x1
   453d0:	str	x1, [sp, #944]
   453d4:	ldr	x1, [sp, #968]
   453d8:	cbz	x1, 45a5c <__asan_internal_strnlen@@Base+0x35f4>
   453dc:	ldr	x1, [sp, #960]
   453e0:	add	w22, w22, #0x1
   453e4:	sub	x1, x1, x24
   453e8:	add	x1, x0, x1
   453ec:	str	x1, [sp, #976]
   453f0:	ldr	x1, [sp, #1000]
   453f4:	cbz	x1, 45a54 <__asan_internal_strnlen@@Base+0x35ec>
   453f8:	ldr	x1, [sp, #992]
   453fc:	add	w22, w22, #0x1
   45400:	sub	x1, x1, x24
   45404:	add	x1, x0, x1
   45408:	str	x1, [sp, #1008]
   4540c:	ldr	x1, [sp, #1032]
   45410:	cbz	x1, 45a4c <__asan_internal_strnlen@@Base+0x35e4>
   45414:	ldr	x1, [sp, #1024]
   45418:	add	w22, w22, #0x1
   4541c:	sub	x1, x1, x24
   45420:	add	x1, x0, x1
   45424:	str	x1, [sp, #1040]
   45428:	ldr	x1, [sp, #1064]
   4542c:	cbnz	x1, 45a38 <__asan_internal_strnlen@@Base+0x35d0>
   45430:	str	xzr, [sp, #1072]
   45434:	ldr	x1, [sp, #1096]
   45438:	cbnz	x1, 45a24 <__asan_internal_strnlen@@Base+0x35bc>
   4543c:	str	xzr, [sp, #1104]
   45440:	ldr	x1, [sp, #1128]
   45444:	cbnz	x1, 45a10 <__asan_internal_strnlen@@Base+0x35a8>
   45448:	str	xzr, [sp, #1136]
   4544c:	ldr	x1, [sp, #1160]
   45450:	cbnz	x1, 459fc <__asan_internal_strnlen@@Base+0x3594>
   45454:	str	xzr, [sp, #1168]
   45458:	ldr	x1, [sp, #1192]
   4545c:	cbnz	x1, 459e8 <__asan_internal_strnlen@@Base+0x3580>
   45460:	str	xzr, [sp, #1200]
   45464:	ldr	x24, [sp, #264]
   45468:	adrp	x25, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   4546c:	add	x28, sp, #0x278
   45470:	add	x25, x25, #0x998
   45474:	mov	x27, x24
   45478:	add	x0, sp, #0x1b0
   4547c:	mov	w23, #0x5                   	// #5
   45480:	mov	x26, #0x0                   	// #0
   45484:	str	x0, [sp, #216]
   45488:	ldr	x0, [x27, #8]
   4548c:	cbnz	x0, 45508 <__asan_internal_strnlen@@Base+0x30a0>
   45490:	ldr	x3, [x27, #168]
   45494:	cbz	x3, 45508 <__asan_internal_strnlen@@Base+0x30a0>
   45498:	cbz	x26, 459b8 <__asan_internal_strnlen@@Base+0x3550>
   4549c:	str	xzr, [sp, #432]
   454a0:	mov	x1, x25
   454a4:	str	xzr, [sp, #632]
   454a8:	cmp	x3, #0xb
   454ac:	mov	x2, #0x4                   	// #4
   454b0:	b.ls	454f4 <__asan_internal_strnlen@@Base+0x308c>  // b.plast
   454b4:	ldr	x4, [x27, #176]
   454b8:	stp	x4, x3, [sp, #224]
   454bc:	mov	x0, x4
   454c0:	bl	6c20 <__asan_internal_memcmp@plt>
   454c4:	cbnz	w0, 454f4 <__asan_internal_strnlen@@Base+0x308c>
   454c8:	ldp	x6, x4, [sp, #216]
   454cc:	mov	x7, x28
   454d0:	ldr	x3, [sp, #232]
   454d4:	mov	x5, x20
   454d8:	mov	x0, x21
   454dc:	mov	x2, x3
   454e0:	mov	x3, x26
   454e4:	mov	x1, x4
   454e8:	mov	x4, x19
   454ec:	bl	43ef8 <__asan_internal_strnlen@@Base+0x1a90>
   454f0:	cbz	w0, 459ac <__asan_internal_strnlen@@Base+0x3544>
   454f4:	ldr	x0, [sp, #432]
   454f8:	str	x0, [x27, #16]
   454fc:	ldr	x0, [sp, #632]
   45500:	str	x0, [x27, #8]
   45504:	str	wzr, [x27, #24]
   45508:	add	x27, x27, #0x20
   4550c:	subs	w23, w23, #0x1
   45510:	b.ne	45488 <__asan_internal_strnlen@@Base+0x3020>  // b.any
   45514:	mov	w25, #0x5                   	// #5
   45518:	ldr	x27, [x24, #8]
   4551c:	cbz	x27, 45558 <__asan_internal_strnlen@@Base+0x30f0>
   45520:	ldr	w0, [x24, #24]
   45524:	cbz	w0, 45558 <__asan_internal_strnlen@@Base+0x30f0>
   45528:	cbz	x26, 45988 <__asan_internal_strnlen@@Base+0x3520>
   4552c:	cmp	x27, #0x17
   45530:	b.ls	45544 <__asan_internal_strnlen@@Base+0x30dc>  // b.plast
   45534:	ldr	x28, [x24, #16]
   45538:	ldr	w4, [x28]
   4553c:	cmp	w4, #0x1
   45540:	b.eq	458c4 <__asan_internal_strnlen@@Base+0x345c>  // b.none
   45544:	mov	x0, #0x0                   	// #0
   45548:	mov	x23, #0x0                   	// #0
   4554c:	sub	w22, w22, #0x1
   45550:	stp	x0, x23, [x24, #8]
   45554:	str	wzr, [x24, #24]
   45558:	add	x24, x24, #0x20
   4555c:	subs	w25, w25, #0x1
   45560:	b.ne	45518 <__asan_internal_strnlen@@Base+0x30b0>  // b.any
   45564:	cbz	x26, 45580 <__asan_internal_strnlen@@Base+0x3118>
   45568:	mov	x1, x26
   4556c:	mov	x4, x20
   45570:	mov	x3, x19
   45574:	mov	x0, x21
   45578:	mov	x2, #0x13b4                	// #5044
   4557c:	bl	6bc0 <__asan_backtrace_free@plt>
   45580:	cbz	w22, 45a88 <__asan_internal_strnlen@@Base+0x3620>
   45584:	mov	w23, #0x1                   	// #1
   45588:	ldrb	w0, [sp, #709]
   4558c:	add	x6, sp, #0x388
   45590:	ldr	x1, [sp, #192]
   45594:	cmp	w0, #0x2
   45598:	cset	w0, eq  // eq = none
   4559c:	ldp	x3, x2, [x6]
   455a0:	ldp	x5, x4, [x6, #32]
   455a4:	str	w0, [sp, #32]
   455a8:	ldr	x0, [sp, #200]
   455ac:	str	x0, [sp, #64]
   455b0:	ldr	x0, [sp, #424]
   455b4:	str	x0, [sp, #40]
   455b8:	ldr	x0, [sp, #1000]
   455bc:	str	x0, [sp, #8]
   455c0:	ldr	x0, [sp, #1008]
   455c4:	str	x0, [sp]
   455c8:	ldr	x7, [sp, #968]
   455cc:	stp	x19, x20, [sp, #48]
   455d0:	ldr	x6, [sp, #976]
   455d4:	ldr	x0, [sp, #1032]
   455d8:	str	x0, [sp, #24]
   455dc:	ldr	x0, [sp, #1040]
   455e0:	str	x0, [sp, #16]
   455e4:	ldr	x0, [sp, #1224]
   455e8:	str	x0, [sp, #72]
   455ec:	mov	x0, x21
   455f0:	bl	6770 <__asan_backtrace_dwarf_add@plt>
   455f4:	cbz	w0, 45a80 <__asan_internal_strnlen@@Base+0x3618>
   455f8:	ldr	x1, [sp, #1216]
   455fc:	mov	w0, #0x1                   	// #1
   45600:	mov	w24, w0
   45604:	ldp	x27, x28, [sp, #160]
   45608:	str	w0, [x1]
   4560c:	b	440c8 <__asan_internal_strnlen@@Base+0x1c60>
   45610:	ldr	w0, [sp, #232]
   45614:	cbz	w0, 45184 <__asan_internal_strnlen@@Base+0x2d1c>
   45618:	mov	x3, x20
   4561c:	mov	x2, x19
   45620:	add	x1, sp, #0x260
   45624:	mov	x0, x21
   45628:	bl	6760 <__asan_backtrace_release_view@plt>
   4562c:	b	45184 <__asan_internal_strnlen@@Base+0x2d1c>
   45630:	cmp	x24, x0
   45634:	csel	x24, x24, x0, le
   45638:	b	451f4 <__asan_internal_strnlen@@Base+0x2d8c>
   4563c:	cmp	x24, x0
   45640:	csel	x24, x24, x0, le
   45644:	b	45214 <__asan_internal_strnlen@@Base+0x2dac>
   45648:	cmp	x24, x0
   4564c:	csel	x24, x24, x0, le
   45650:	b	45234 <__asan_internal_strnlen@@Base+0x2dcc>
   45654:	cmp	x24, x0
   45658:	csel	x24, x24, x0, le
   4565c:	b	45254 <__asan_internal_strnlen@@Base+0x2dec>
   45660:	mov	x24, x0
   45664:	b	452b8 <__asan_internal_strnlen@@Base+0x2e50>
   45668:	mov	x3, x20
   4566c:	mov	x2, x19
   45670:	add	x1, sp, #0x248
   45674:	mov	x0, x21
   45678:	bl	6760 <__asan_backtrace_release_view@plt>
   4567c:	b	450f0 <__asan_internal_strnlen@@Base+0x2c88>
   45680:	cmp	x24, x0
   45684:	csel	x24, x24, x0, le
   45688:	b	45274 <__asan_internal_strnlen@@Base+0x2e0c>
   4568c:	cmp	x24, x0
   45690:	csel	x24, x24, x0, le
   45694:	b	45294 <__asan_internal_strnlen@@Base+0x2e2c>
   45698:	mov	w24, #0x1                   	// #1
   4569c:	ldp	x27, x28, [sp, #160]
   456a0:	b	440c8 <__asan_internal_strnlen@@Base+0x1c60>
   456a4:	mov	w28, #0x1                   	// #1
   456a8:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   456ac:	ldr	w28, [sp, #224]
   456b0:	mov	w23, w0
   456b4:	ldr	w22, [sp, #300]
   456b8:	str	w25, [sp, #232]
   456bc:	ldr	x21, [sp, #288]
   456c0:	ldp	x19, x20, [sp, #304]
   456c4:	ldr	x24, [sp, #336]
   456c8:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   456cc:	mov	x0, x21
   456d0:	mov	x3, x20
   456d4:	mov	x2, x19
   456d8:	add	x1, sp, #0x230
   456dc:	bl	6760 <__asan_backtrace_release_view@plt>
   456e0:	ldr	w0, [sp, #216]
   456e4:	cbz	w0, 44fa0 <__asan_internal_strnlen@@Base+0x2b38>
   456e8:	b	44f8c <__asan_internal_strnlen@@Base+0x2b24>
   456ec:	mov	x2, x20
   456f0:	mov	x1, x19
   456f4:	mov	w0, w23
   456f8:	bl	6c90 <__asan_backtrace_close@plt>
   456fc:	ldp	x27, x28, [sp, #160]
   45700:	b	440c8 <__asan_internal_strnlen@@Base+0x1c60>
   45704:	mov	x3, x20
   45708:	mov	x2, x19
   4570c:	add	x1, sp, #0x260
   45710:	mov	x0, x21
   45714:	bl	6760 <__asan_backtrace_release_view@plt>
   45718:	b	44fa8 <__asan_internal_strnlen@@Base+0x2b40>
   4571c:	mov	w28, w20
   45720:	mov	w0, #0x1                   	// #1
   45724:	ldr	w22, [sp, #300]
   45728:	mov	w23, #0x0                   	// #0
   4572c:	str	w0, [sp, #224]
   45730:	str	w25, [sp, #232]
   45734:	ldr	x21, [sp, #288]
   45738:	ldp	x19, x20, [sp, #304]
   4573c:	ldr	x24, [sp, #336]
   45740:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   45744:	mov	x0, x1
   45748:	b	45750 <__asan_internal_strnlen@@Base+0x32e8>
   4574c:	mov	x0, x2
   45750:	ldar	x2, [x0]
   45754:	cbnz	x2, 4574c <__asan_internal_strnlen@@Base+0x32e4>
   45758:	ldxr	x2, [x0]
   4575c:	cbnz	x2, 45768 <__asan_internal_strnlen@@Base+0x3300>
   45760:	stlxr	w3, x23, [x0]
   45764:	cbnz	w3, 45758 <__asan_internal_strnlen@@Base+0x32f0>
   45768:	dmb	ish
   4576c:	cmp	x2, #0x0
   45770:	b.ne	45744 <__asan_internal_strnlen@@Base+0x32dc>  // b.any
   45774:	mov	w0, #0x1                   	// #1
   45778:	str	w0, [sp, #256]
   4577c:	b	44dfc <__asan_internal_strnlen@@Base+0x2994>
   45780:	stp	x8, x5, [sp, #192]
   45784:	mov	x0, x20
   45788:	mov	w2, #0x0                   	// #0
   4578c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   45790:	add	x1, x1, #0x940
   45794:	blr	x19
   45798:	ldp	x8, x5, [sp, #192]
   4579c:	mov	x4, x20
   457a0:	mov	x3, x19
   457a4:	mov	x0, x21
   457a8:	mov	x2, x8
   457ac:	mov	x1, x5
   457b0:	bl	6bc0 <__asan_backtrace_free@plt>
   457b4:	mov	x1, x23
   457b8:	mov	x4, x20
   457bc:	mov	x3, x19
   457c0:	mov	x0, x21
   457c4:	mov	x2, #0x18                  	// #24
   457c8:	mov	w23, #0x1                   	// #1
   457cc:	bl	6bc0 <__asan_backtrace_free@plt>
   457d0:	mov	w28, w23
   457d4:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   457d8:	mov	x2, #0x0                   	// #0
   457dc:	mov	w1, #0x0                   	// #0
   457e0:	ldrb	w0, [x28, #4]
   457e4:	add	x2, x2, #0x1
   457e8:	and	w0, w0, #0xf
   457ec:	sub	w0, w0, #0x1
   457f0:	cmp	w0, #0x1
   457f4:	b.hi	45838 <__asan_internal_strnlen@@Base+0x33d0>  // b.pmore
   457f8:	ldrh	w0, [x28, #6]
   457fc:	umull	x9, w1, w7
   45800:	add	x3, x5, x9
   45804:	cbz	w0, 45838 <__asan_internal_strnlen@@Base+0x33d0>
   45808:	ldr	w0, [x28]
   4580c:	add	w1, w1, #0x1
   45810:	add	x10, x4, x0
   45814:	cmp	x6, x0
   45818:	b.ls	45780 <__asan_internal_strnlen@@Base+0x3318>  // b.plast
   4581c:	ldr	x0, [x28, #8]
   45820:	str	x10, [x5, x9]
   45824:	ldr	x9, [sp, #192]
   45828:	add	x0, x0, x9
   4582c:	str	x0, [x3, #8]
   45830:	ldr	x0, [x28, #16]
   45834:	str	x0, [x3, #16]
   45838:	add	x28, x28, #0x18
   4583c:	cmp	x27, x2
   45840:	b.hi	457e0 <__asan_internal_strnlen@@Base+0x3378>  // b.pmore
   45844:	b	44d94 <__asan_internal_strnlen@@Base+0x292c>
   45848:	mov	w0, #0x1                   	// #1
   4584c:	str	x23, [x1]
   45850:	str	w0, [sp, #256]
   45854:	b	44dfc <__asan_internal_strnlen@@Base+0x2994>
   45858:	ldr	x1, [sp, #240]
   4585c:	mov	x3, x20
   45860:	mov	x2, x19
   45864:	mov	x0, x21
   45868:	str	xzr, [sp, #352]
   4586c:	bl	6760 <__asan_backtrace_release_view@plt>
   45870:	str	wzr, [sp, #216]
   45874:	ldr	x1, [sp, #248]
   45878:	mov	x3, x20
   4587c:	mov	x2, x19
   45880:	mov	x0, x21
   45884:	bl	6760 <__asan_backtrace_release_view@plt>
   45888:	str	wzr, [sp, #232]
   4588c:	str	wzr, [sp, #256]
   45890:	str	xzr, [sp, #320]
   45894:	str	wzr, [sp, #364]
   45898:	b	450e8 <__asan_internal_strnlen@@Base+0x2c80>
   4589c:	mov	w24, #0xffffffff            	// #-1
   458a0:	b	440c8 <__asan_internal_strnlen@@Base+0x1c60>
   458a4:	bl	6ac0 <__errno_location@plt>
   458a8:	mov	x2, x0
   458ac:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   458b0:	mov	x0, x20
   458b4:	add	x1, x1, #0x990
   458b8:	ldr	w2, [x2]
   458bc:	blr	x19
   458c0:	b	450d8 <__asan_internal_strnlen@@Base+0x2c70>
   458c4:	ldr	x1, [x28, #8]
   458c8:	mov	x3, x20
   458cc:	mov	x2, x19
   458d0:	mov	x0, x21
   458d4:	str	w4, [sp, #216]
   458d8:	bl	68c0 <__asan_backtrace_alloc@plt>
   458dc:	mov	x23, x0
   458e0:	cbz	x0, 459ac <__asan_internal_strnlen@@Base+0x3544>
   458e4:	ldr	x4, [x28, #8]
   458e8:	add	x5, x28, #0x18
   458ec:	mov	x0, x5
   458f0:	mov	x3, x23
   458f4:	mov	x2, x26
   458f8:	sub	x1, x27, #0x18
   458fc:	stp	x4, x5, [sp, #216]
   45900:	bl	43088 <__asan_internal_strnlen@@Base+0xc20>
   45904:	cbz	w0, 45544 <__asan_internal_strnlen@@Base+0x30dc>
   45908:	ldp	x4, x5, [sp, #216]
   4590c:	sub	x0, x27, #0x1c
   45910:	mov	x1, x23
   45914:	mov	x2, x4
   45918:	add	x0, x5, x0
   4591c:	bl	424d0 <__asan_internal_strnlen@@Base+0x68>
   45920:	cbz	w0, 45544 <__asan_internal_strnlen@@Base+0x30dc>
   45924:	ldr	x0, [x28, #8]
   45928:	b	4554c <__asan_internal_strnlen@@Base+0x30e4>
   4592c:	ldrh	w2, [x0, #78]
   45930:	cbz	w2, 44b60 <__asan_internal_strnlen@@Base+0x26f8>
   45934:	add	x25, x25, #0x1
   45938:	b	44b60 <__asan_internal_strnlen@@Base+0x26f8>
   4593c:	ldrh	w2, [x0, #54]
   45940:	cbz	w2, 44b40 <__asan_internal_strnlen@@Base+0x26d8>
   45944:	add	x25, x25, #0x1
   45948:	b	44b40 <__asan_internal_strnlen@@Base+0x26d8>
   4594c:	ldrh	w2, [x0, #30]
   45950:	cbz	w2, 44b20 <__asan_internal_strnlen@@Base+0x26b8>
   45954:	add	x25, x25, #0x1
   45958:	b	44b20 <__asan_internal_strnlen@@Base+0x26b8>
   4595c:	ldrh	w2, [x0, #6]
   45960:	cbz	w2, 44b00 <__asan_internal_strnlen@@Base+0x2698>
   45964:	add	x25, x25, #0x1
   45968:	b	44b00 <__asan_internal_strnlen@@Base+0x2698>
   4596c:	str	xzr, [sp, #944]
   45970:	b	453d4 <__asan_internal_strnlen@@Base+0x2f6c>
   45974:	mov	w22, #0x0                   	// #0
   45978:	str	xzr, [sp, #912]
   4597c:	b	453b8 <__asan_internal_strnlen@@Base+0x2f50>
   45980:	mov	w23, #0x1                   	// #1
   45984:	b	452e8 <__asan_internal_strnlen@@Base+0x2e80>
   45988:	mov	x3, x20
   4598c:	mov	x2, x19
   45990:	mov	x0, x21
   45994:	mov	x1, #0x13b4                	// #5044
   45998:	bl	68c0 <__asan_backtrace_alloc@plt>
   4599c:	mov	x26, x0
   459a0:	cbz	x0, 459ac <__asan_internal_strnlen@@Base+0x3544>
   459a4:	ldr	x27, [x24, #8]
   459a8:	b	4552c <__asan_internal_strnlen@@Base+0x30c4>
   459ac:	mov	w23, #0x1                   	// #1
   459b0:	mov	w22, #0xffffffff            	// #-1
   459b4:	b	452e8 <__asan_internal_strnlen@@Base+0x2e80>
   459b8:	mov	x3, x20
   459bc:	mov	x2, x19
   459c0:	mov	x0, x21
   459c4:	mov	x1, #0x13b4                	// #5044
   459c8:	bl	68c0 <__asan_backtrace_alloc@plt>
   459cc:	mov	x26, x0
   459d0:	cbz	x0, 459ac <__asan_internal_strnlen@@Base+0x3544>
   459d4:	ldr	x3, [x27, #168]
   459d8:	b	4549c <__asan_internal_strnlen@@Base+0x3034>
   459dc:	mov	x3, #0x0                   	// #0
   459e0:	mov	x24, #0x0                   	// #0
   459e4:	b	451e0 <__asan_internal_strnlen@@Base+0x2d78>
   459e8:	ldr	x1, [sp, #1184]
   459ec:	sub	x24, x1, x24
   459f0:	add	x0, x0, x24
   459f4:	str	x0, [sp, #1200]
   459f8:	b	45464 <__asan_internal_strnlen@@Base+0x2ffc>
   459fc:	ldr	x1, [sp, #1152]
   45a00:	sub	x1, x1, x24
   45a04:	add	x1, x0, x1
   45a08:	str	x1, [sp, #1168]
   45a0c:	b	45458 <__asan_internal_strnlen@@Base+0x2ff0>
   45a10:	ldr	x1, [sp, #1120]
   45a14:	sub	x1, x1, x24
   45a18:	add	x1, x0, x1
   45a1c:	str	x1, [sp, #1136]
   45a20:	b	4544c <__asan_internal_strnlen@@Base+0x2fe4>
   45a24:	ldr	x1, [sp, #1088]
   45a28:	sub	x1, x1, x24
   45a2c:	add	x1, x0, x1
   45a30:	str	x1, [sp, #1104]
   45a34:	b	45440 <__asan_internal_strnlen@@Base+0x2fd8>
   45a38:	ldr	x1, [sp, #1056]
   45a3c:	sub	x1, x1, x24
   45a40:	add	x1, x0, x1
   45a44:	str	x1, [sp, #1072]
   45a48:	b	45434 <__asan_internal_strnlen@@Base+0x2fcc>
   45a4c:	str	xzr, [sp, #1040]
   45a50:	b	45428 <__asan_internal_strnlen@@Base+0x2fc0>
   45a54:	str	xzr, [sp, #1008]
   45a58:	b	4540c <__asan_internal_strnlen@@Base+0x2fa4>
   45a5c:	str	xzr, [sp, #976]
   45a60:	b	453f0 <__asan_internal_strnlen@@Base+0x2f88>
   45a64:	ldrh	w0, [x0, #6]
   45a68:	cbz	w0, 44cc4 <__asan_internal_strnlen@@Base+0x285c>
   45a6c:	add	x25, x25, #0x1
   45a70:	b	44cc4 <__asan_internal_strnlen@@Base+0x285c>
   45a74:	mov	w23, #0x1                   	// #1
   45a78:	mov	w28, w23
   45a7c:	b	44528 <__asan_internal_strnlen@@Base+0x20c0>
   45a80:	mov	w22, #0xffffffff            	// #-1
   45a84:	b	452e8 <__asan_internal_strnlen@@Base+0x2e80>
   45a88:	ldr	x1, [sp, #208]
   45a8c:	mov	x3, x20
   45a90:	mov	x2, x19
   45a94:	mov	x0, x21
   45a98:	mov	w23, #0x0                   	// #0
   45a9c:	bl	6760 <__asan_backtrace_release_view@plt>
   45aa0:	b	45588 <__asan_internal_strnlen@@Base+0x3120>
   45aa4:	ldrh	w2, [x0, #174]
   45aa8:	cbz	w2, 44be0 <__asan_internal_strnlen@@Base+0x2778>
   45aac:	add	x25, x25, #0x1
   45ab0:	b	44be0 <__asan_internal_strnlen@@Base+0x2778>
   45ab4:	ldrh	w2, [x0, #150]
   45ab8:	cbz	w2, 44bc0 <__asan_internal_strnlen@@Base+0x2758>
   45abc:	add	x25, x25, #0x1
   45ac0:	b	44bc0 <__asan_internal_strnlen@@Base+0x2758>
   45ac4:	ldrh	w2, [x0, #126]
   45ac8:	cbz	w2, 44ba0 <__asan_internal_strnlen@@Base+0x2738>
   45acc:	add	x25, x25, #0x1
   45ad0:	b	44ba0 <__asan_internal_strnlen@@Base+0x2738>
   45ad4:	ldrh	w2, [x0, #102]
   45ad8:	cbz	w2, 44b80 <__asan_internal_strnlen@@Base+0x2718>
   45adc:	add	x25, x25, #0x1
   45ae0:	b	44b80 <__asan_internal_strnlen@@Base+0x2718>
   45ae4:	mov	x0, x28
   45ae8:	mov	x1, #0x0                   	// #0
   45aec:	mov	x25, #0x0                   	// #0
   45af0:	b	44aec <__asan_internal_strnlen@@Base+0x2684>
   45af4:	mov	x3, x20
   45af8:	mov	x2, x19
   45afc:	mov	x0, x21
   45b00:	mov	x1, #0x0                   	// #0
   45b04:	bl	68c0 <__asan_backtrace_alloc@plt>
   45b08:	mov	x5, x0
   45b0c:	cbz	x0, 457b4 <__asan_internal_strnlen@@Base+0x334c>
   45b10:	mov	x25, #0x0                   	// #0
   45b14:	b	44d94 <__asan_internal_strnlen@@Base+0x292c>
   45b18:	ldrh	w2, [x0, #318]
   45b1c:	cbz	w2, 44ca0 <__asan_internal_strnlen@@Base+0x2838>
   45b20:	add	x25, x25, #0x1
   45b24:	b	44ca0 <__asan_internal_strnlen@@Base+0x2838>
   45b28:	ldrh	w2, [x0, #294]
   45b2c:	cbz	w2, 44c80 <__asan_internal_strnlen@@Base+0x2818>
   45b30:	add	x25, x25, #0x1
   45b34:	b	44c80 <__asan_internal_strnlen@@Base+0x2818>
   45b38:	ldrh	w2, [x0, #270]
   45b3c:	cbz	w2, 44c60 <__asan_internal_strnlen@@Base+0x27f8>
   45b40:	add	x25, x25, #0x1
   45b44:	b	44c60 <__asan_internal_strnlen@@Base+0x27f8>
   45b48:	ldrh	w2, [x0, #246]
   45b4c:	cbz	w2, 44c40 <__asan_internal_strnlen@@Base+0x27d8>
   45b50:	add	x25, x25, #0x1
   45b54:	b	44c40 <__asan_internal_strnlen@@Base+0x27d8>
   45b58:	ldrh	w2, [x0, #222]
   45b5c:	cbz	w2, 44c20 <__asan_internal_strnlen@@Base+0x27b8>
   45b60:	add	x25, x25, #0x1
   45b64:	b	44c20 <__asan_internal_strnlen@@Base+0x27b8>
   45b68:	ldrh	w2, [x0, #198]
   45b6c:	cbz	w2, 44c00 <__asan_internal_strnlen@@Base+0x2798>
   45b70:	add	x25, x25, #0x1
   45b74:	b	44c00 <__asan_internal_strnlen@@Base+0x2798>
   45b78:	sub	sp, sp, #0x70
   45b7c:	stp	x29, x30, [sp, #48]
   45b80:	add	x29, sp, #0x30
   45b84:	ldr	w6, [x2, #56]
   45b88:	str	x21, [sp, #80]
   45b8c:	ldr	x21, [x0, #8]
   45b90:	stp	x19, x20, [sp, #64]
   45b94:	cmn	w6, #0x1
   45b98:	mov	x20, x0
   45b9c:	mov	x19, x2
   45ba0:	cbz	x21, 45bac <__asan_internal_strnlen@@Base+0x3744>
   45ba4:	ldrb	w0, [x21]
   45ba8:	cbnz	w0, 45c38 <__asan_internal_strnlen@@Base+0x37d0>
   45bac:	b.eq	45c20 <__asan_internal_strnlen@@Base+0x37b8>  // b.none
   45bb0:	ldr	x21, [x19, #48]
   45bb4:	mov	w0, #0xffffffff            	// #-1
   45bb8:	str	w0, [x19, #56]
   45bbc:	add	x1, sp, #0x64
   45bc0:	mov	w2, w6
   45bc4:	ldr	x0, [x19]
   45bc8:	add	x6, sp, #0x68
   45bcc:	ldr	x3, [x20]
   45bd0:	str	x1, [sp]
   45bd4:	mov	x1, x21
   45bd8:	ldr	x4, [x19, #8]
   45bdc:	str	xzr, [sp, #8]
   45be0:	ldr	x5, [x19, #16]
   45be4:	str	wzr, [sp, #16]
   45be8:	ldr	x7, [x19, #32]
   45bec:	str	wzr, [sp, #24]
   45bf0:	str	xzr, [sp, #32]
   45bf4:	str	wzr, [sp, #40]
   45bf8:	bl	44010 <__asan_internal_strnlen@@Base+0x1ba8>
   45bfc:	cbz	w0, 45c20 <__asan_internal_strnlen@@Base+0x37b8>
   45c00:	ldr	w0, [sp, #100]
   45c04:	cbz	w0, 45c20 <__asan_internal_strnlen@@Base+0x37b8>
   45c08:	ldr	x1, [x19, #40]
   45c0c:	mov	w2, #0x1                   	// #1
   45c10:	ldr	x0, [x19, #24]
   45c14:	str	w2, [x1]
   45c18:	ldr	x1, [sp, #104]
   45c1c:	str	x1, [x0]
   45c20:	mov	w0, #0x0                   	// #0
   45c24:	ldp	x29, x30, [sp, #48]
   45c28:	ldp	x19, x20, [sp, #64]
   45c2c:	ldr	x21, [sp, #80]
   45c30:	add	sp, sp, #0x70
   45c34:	ret
   45c38:	ldp	x1, x2, [x2, #8]
   45c3c:	b.ne	45c58 <__asan_internal_strnlen@@Base+0x37f0>  // b.any
   45c40:	add	x3, sp, #0x60
   45c44:	mov	x0, x21
   45c48:	bl	6d40 <__asan_backtrace_open@plt>
   45c4c:	mov	w6, w0
   45c50:	tbz	w0, #31, 45bbc <__asan_internal_strnlen@@Base+0x3754>
   45c54:	b	45c20 <__asan_internal_strnlen@@Base+0x37b8>
   45c58:	mov	w0, w6
   45c5c:	bl	6c90 <__asan_backtrace_close@plt>
   45c60:	ldp	x1, x2, [x19, #8]
   45c64:	mov	w0, #0xffffffff            	// #-1
   45c68:	ldr	x21, [x20, #8]
   45c6c:	str	w0, [x19, #56]
   45c70:	add	x3, sp, #0x60
   45c74:	mov	x0, x21
   45c78:	bl	6d40 <__asan_backtrace_open@plt>
   45c7c:	mov	w6, w0
   45c80:	tbz	w0, #31, 45bbc <__asan_internal_strnlen@@Base+0x3754>
   45c84:	b	45c20 <__asan_internal_strnlen@@Base+0x37b8>

0000000000045c88 <__asan_backtrace_uncompress_zdebug@@Base>:
   45c88:	stp	x29, x30, [sp, #-80]!
   45c8c:	mov	x29, sp
   45c90:	stp	x19, x20, [sp, #16]
   45c94:	mov	x20, x3
   45c98:	mov	x3, x4
   45c9c:	stp	x21, x22, [sp, #32]
   45ca0:	mov	x21, x4
   45ca4:	mov	x22, x0
   45ca8:	stp	x23, x24, [sp, #48]
   45cac:	mov	x23, x2
   45cb0:	mov	x24, x5
   45cb4:	mov	x2, x20
   45cb8:	stp	x25, x26, [sp, #64]
   45cbc:	mov	x26, x1
   45cc0:	mov	x25, x6
   45cc4:	mov	x1, #0x13b4                	// #5044
   45cc8:	bl	68c0 <__asan_backtrace_alloc@plt>
   45ccc:	cbz	x0, 45d60 <__asan_backtrace_uncompress_zdebug@@Base+0xd8>
   45cd0:	str	xzr, [x24]
   45cd4:	mov	x19, x0
   45cd8:	str	xzr, [x25]
   45cdc:	cmp	x23, #0xb
   45ce0:	b.hi	45d1c <__asan_backtrace_uncompress_zdebug@@Base+0x94>  // b.pmore
   45ce4:	mov	w23, #0x1                   	// #1
   45ce8:	mov	x4, x21
   45cec:	mov	x3, x20
   45cf0:	mov	x1, x19
   45cf4:	mov	x0, x22
   45cf8:	mov	x2, #0x13b4                	// #5044
   45cfc:	bl	6bc0 <__asan_backtrace_free@plt>
   45d00:	mov	w0, w23
   45d04:	ldp	x19, x20, [sp, #16]
   45d08:	ldp	x21, x22, [sp, #32]
   45d0c:	ldp	x23, x24, [sp, #48]
   45d10:	ldp	x25, x26, [sp, #64]
   45d14:	ldp	x29, x30, [sp], #80
   45d18:	ret
   45d1c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x8bb0>
   45d20:	mov	x0, x26
   45d24:	add	x1, x1, #0x998
   45d28:	mov	x2, #0x4                   	// #4
   45d2c:	bl	6c20 <__asan_internal_memcmp@plt>
   45d30:	cbnz	w0, 45ce4 <__asan_backtrace_uncompress_zdebug@@Base+0x5c>
   45d34:	mov	x2, x23
   45d38:	mov	x7, x25
   45d3c:	mov	x6, x24
   45d40:	mov	x1, x26
   45d44:	mov	x5, x21
   45d48:	mov	x4, x20
   45d4c:	mov	x3, x19
   45d50:	mov	x0, x22
   45d54:	bl	43ef8 <__asan_internal_strnlen@@Base+0x1a90>
   45d58:	mov	w23, w0
   45d5c:	b	45ce8 <__asan_backtrace_uncompress_zdebug@@Base+0x60>
   45d60:	mov	w23, #0x0                   	// #0
   45d64:	b	45d00 <__asan_backtrace_uncompress_zdebug@@Base+0x78>

0000000000045d68 <__asan_backtrace_initialize@@Base>:
   45d68:	sub	sp, sp, #0xe0
   45d6c:	mov	w6, #0x1                   	// #1
   45d70:	stp	x29, x30, [sp, #48]
   45d74:	add	x29, sp, #0x30
   45d78:	stp	x23, x24, [sp, #96]
   45d7c:	adrp	x24, 42000 <__asan_java_demangle_v3_callback@@Base+0x20>
   45d80:	add	x8, x24, #0x470
   45d84:	str	w6, [sp, #16]
   45d88:	mov	x23, x5
   45d8c:	str	wzr, [sp, #24]
   45d90:	mov	x5, x4
   45d94:	str	xzr, [sp, #32]
   45d98:	str	wzr, [sp, #40]
   45d9c:	stp	x27, x28, [sp, #128]
   45da0:	add	x28, sp, #0x94
   45da4:	add	x27, sp, #0x98
   45da8:	stp	x28, xzr, [sp]
   45dac:	mov	x6, x27
   45db0:	stp	x25, x26, [sp, #112]
   45db4:	add	x26, sp, #0x90
   45db8:	mov	x25, x1
   45dbc:	mov	x7, x26
   45dc0:	stp	x19, x20, [sp, #64]
   45dc4:	mov	x19, x0
   45dc8:	mov	w20, w2
   45dcc:	stp	x21, x22, [sp, #80]
   45dd0:	mov	x22, x3
   45dd4:	mov	x21, x4
   45dd8:	mov	x4, x3
   45ddc:	mov	x3, #0x0                   	// #0
   45de0:	str	x8, [sp, #152]
   45de4:	bl	44010 <__asan_internal_strnlen@@Base+0x1ba8>
   45de8:	cbz	w0, 45e54 <__asan_backtrace_initialize@@Base+0xec>
   45dec:	cmp	w0, #0x0
   45df0:	add	x1, sp, #0xa0
   45df4:	csinv	w20, w20, wzr, lt  // lt = tstop
   45df8:	adrp	x0, 45000 <__asan_internal_strnlen@@Base+0x2b98>
   45dfc:	add	x0, x0, #0xb78
   45e00:	stp	x19, x22, [sp, #160]
   45e04:	stp	x21, x27, [sp, #176]
   45e08:	stp	x26, x28, [sp, #192]
   45e0c:	str	x25, [sp, #208]
   45e10:	str	w20, [sp, #216]
   45e14:	bl	6950 <dl_iterate_phdr@plt>
   45e18:	ldr	w0, [x19, #8]
   45e1c:	cbnz	w0, 45e74 <__asan_backtrace_initialize@@Base+0x10c>
   45e20:	ldr	w0, [sp, #144]
   45e24:	cbnz	w0, 45ea4 <__asan_backtrace_initialize@@Base+0x13c>
   45e28:	ldr	x0, [x19, #40]
   45e2c:	cbz	x0, 45ed4 <__asan_backtrace_initialize@@Base+0x16c>
   45e30:	ldr	x0, [x19, #24]
   45e34:	str	x0, [x23]
   45e38:	cmp	x0, #0x0
   45e3c:	add	x24, x24, #0x470
   45e40:	ccmp	x0, x24, #0x4, ne  // ne = any
   45e44:	mov	w0, #0x1                   	// #1
   45e48:	b.ne	45e54 <__asan_backtrace_initialize@@Base+0xec>  // b.any
   45e4c:	ldr	x1, [sp, #152]
   45e50:	str	x1, [x23]
   45e54:	ldp	x29, x30, [sp, #48]
   45e58:	ldp	x19, x20, [sp, #64]
   45e5c:	ldp	x21, x22, [sp, #80]
   45e60:	ldp	x23, x24, [sp, #96]
   45e64:	ldp	x25, x26, [sp, #112]
   45e68:	ldp	x27, x28, [sp, #128]
   45e6c:	add	sp, sp, #0xe0
   45e70:	ret
   45e74:	ldr	w1, [sp, #144]
   45e78:	add	x0, x19, #0x28
   45e7c:	cbz	w1, 45eb4 <__asan_backtrace_initialize@@Base+0x14c>
   45e80:	adrp	x1, 42000 <__asan_java_demangle_v3_callback@@Base+0x20>
   45e84:	add	x1, x1, #0xb80
   45e88:	stlr	x1, [x0]
   45e8c:	ldr	w0, [x19, #8]
   45e90:	cbz	w0, 45e30 <__asan_backtrace_initialize@@Base+0xc8>
   45e94:	add	x19, x19, #0x18
   45e98:	ldar	x0, [x19]
   45e9c:	str	x0, [x23]
   45ea0:	b	45e38 <__asan_backtrace_initialize@@Base+0xd0>
   45ea4:	adrp	x0, 42000 <__asan_java_demangle_v3_callback@@Base+0x20>
   45ea8:	add	x0, x0, #0xb80
   45eac:	str	x0, [x19, #40]
   45eb0:	b	45e30 <__asan_backtrace_initialize@@Base+0xc8>
   45eb4:	adrp	x1, 42000 <__asan_java_demangle_v3_callback@@Base+0x20>
   45eb8:	add	x1, x1, #0x498
   45ebc:	ldxr	x2, [x0]
   45ec0:	cbnz	x2, 45ecc <__asan_backtrace_initialize@@Base+0x164>
   45ec4:	stlxr	w3, x1, [x0]
   45ec8:	cbnz	w3, 45ebc <__asan_backtrace_initialize@@Base+0x154>
   45ecc:	dmb	ish
   45ed0:	b	45e8c <__asan_backtrace_initialize@@Base+0x124>
   45ed4:	adrp	x0, 42000 <__asan_java_demangle_v3_callback@@Base+0x20>
   45ed8:	add	x0, x0, #0x498
   45edc:	str	x0, [x19, #40]
   45ee0:	b	45e30 <__asan_backtrace_initialize@@Base+0xc8>
   45ee4:	nop

0000000000045ee8 <__asan_backtrace_get_view@@Base>:
   45ee8:	stp	x29, x30, [sp, #-64]!
   45eec:	mov	x29, sp
   45ef0:	stp	x19, x20, [sp, #16]
   45ef4:	mov	x19, x3
   45ef8:	mov	x20, x4
   45efc:	stp	x21, x22, [sp, #32]
   45f00:	mov	x22, x2
   45f04:	mov	x21, x5
   45f08:	stp	x23, x24, [sp, #48]
   45f0c:	mov	w24, w1
   45f10:	mov	x23, x6
   45f14:	bl	6c70 <getpagesize@plt>
   45f18:	sxtw	x7, w0
   45f1c:	sub	x8, x19, #0x1
   45f20:	neg	x1, x7
   45f24:	mov	w4, w24
   45f28:	mov	w3, #0x2                   	// #2
   45f2c:	udiv	x19, x22, x7
   45f30:	mov	w2, #0x1                   	// #1
   45f34:	mov	x0, #0x0                   	// #0
   45f38:	msub	w19, w19, w7, w22
   45f3c:	add	x7, x7, x19
   45f40:	sub	x5, x22, x19
   45f44:	add	x7, x8, x7
   45f48:	and	x22, x1, x7
   45f4c:	mov	x1, x22
   45f50:	bl	69d0 <mmap@plt>
   45f54:	cmn	x0, #0x1
   45f58:	b.eq	45f84 <__asan_backtrace_get_view@@Base+0x9c>  // b.none
   45f5c:	mov	x2, x0
   45f60:	add	x19, x0, x19
   45f64:	stp	x19, x2, [x23]
   45f68:	mov	w0, #0x1                   	// #1
   45f6c:	str	x22, [x23, #16]
   45f70:	ldp	x19, x20, [sp, #16]
   45f74:	ldp	x21, x22, [sp, #32]
   45f78:	ldp	x23, x24, [sp, #48]
   45f7c:	ldp	x29, x30, [sp], #64
   45f80:	ret
   45f84:	bl	6ac0 <__errno_location@plt>
   45f88:	mov	x2, x0
   45f8c:	adrp	x1, 50000 <__asan_backtrace_vector_release@@Base+0x9bb0>
   45f90:	mov	x0, x21
   45f94:	add	x1, x1, #0x2f0
   45f98:	ldr	w2, [x2]
   45f9c:	blr	x20
   45fa0:	mov	w0, #0x0                   	// #0
   45fa4:	ldp	x19, x20, [sp, #16]
   45fa8:	ldp	x21, x22, [sp, #32]
   45fac:	ldp	x23, x24, [sp, #48]
   45fb0:	ldp	x29, x30, [sp], #64
   45fb4:	ret

0000000000045fb8 <__asan_backtrace_release_view@@Base>:
   45fb8:	stp	x29, x30, [sp, #-32]!
   45fbc:	mov	x29, sp
   45fc0:	ldp	x0, x1, [x1, #8]
   45fc4:	stp	x19, x20, [sp, #16]
   45fc8:	mov	x19, x2
   45fcc:	mov	x20, x3
   45fd0:	bl	69f0 <munmap@plt>
   45fd4:	tbnz	w0, #31, 45fe4 <__asan_backtrace_release_view@@Base+0x2c>
   45fd8:	ldp	x19, x20, [sp, #16]
   45fdc:	ldp	x29, x30, [sp], #32
   45fe0:	ret
   45fe4:	bl	6ac0 <__errno_location@plt>
   45fe8:	mov	x2, x0
   45fec:	mov	x16, x19
   45ff0:	mov	x0, x20
   45ff4:	ldp	x19, x20, [sp, #16]
   45ff8:	adrp	x1, 50000 <__asan_backtrace_vector_release@@Base+0x9bb0>
   45ffc:	ldp	x29, x30, [sp], #32
   46000:	add	x1, x1, #0x2f8
   46004:	ldr	w2, [x2]
   46008:	br	x16
   4600c:	nop

0000000000046010 <__asan_backtrace_free@@Base>:
   46010:	stp	x29, x30, [sp, #-48]!
   46014:	mov	x29, sp
   46018:	stp	x19, x20, [sp, #16]
   4601c:	mov	x19, x0
   46020:	mov	x20, x1
   46024:	str	x21, [sp, #32]
   46028:	mov	x0, #0xffff                	// #65535
   4602c:	mov	x21, x2
   46030:	cmp	x2, x0
   46034:	b.ls	46050 <__asan_backtrace_free@@Base+0x40>  // b.plast
   46038:	bl	6c70 <getpagesize@plt>
   4603c:	sxtw	x0, w0
   46040:	orr	x1, x20, x21
   46044:	sub	x0, x0, #0x1
   46048:	tst	x0, x1
   4604c:	b.eq	46124 <__asan_backtrace_free@@Base+0x114>  // b.none
   46050:	ldr	w7, [x19, #8]
   46054:	cbnz	w7, 460e8 <__asan_backtrace_free@@Base+0xd8>
   46058:	cmp	x21, #0xf
   4605c:	b.ls	460d8 <__asan_backtrace_free@@Base+0xc8>  // b.plast
   46060:	ldr	x3, [x19, #64]
   46064:	add	x0, x19, #0x40
   46068:	mov	x9, x3
   4606c:	cbz	x3, 46138 <__asan_backtrace_free@@Base+0x128>
   46070:	mov	x4, x3
   46074:	mov	x6, #0x0                   	// #0
   46078:	b	46094 <__asan_backtrace_free@@Base+0x84>
   4607c:	ldr	x4, [x0]
   46080:	ldr	x5, [x3, #8]
   46084:	ldr	x1, [x4, #8]
   46088:	cmp	x5, x1
   4608c:	csel	x4, x4, x3, cs  // cs = hs, nlast
   46090:	csel	x0, x0, x8, cs  // cs = hs, nlast
   46094:	mov	x8, x3
   46098:	add	x6, x6, #0x1
   4609c:	ldr	x3, [x3]
   460a0:	cbnz	x3, 4607c <__asan_backtrace_free@@Base+0x6c>
   460a4:	cmp	x6, #0xf
   460a8:	b.ls	460c4 <__asan_backtrace_free@@Base+0xb4>  // b.plast
   460ac:	ldr	x1, [x4, #8]
   460b0:	cmp	x21, x1
   460b4:	b.ls	460cc <__asan_backtrace_free@@Base+0xbc>  // b.plast
   460b8:	ldr	x1, [x4]
   460bc:	str	x1, [x0]
   460c0:	ldr	x9, [x19, #64]
   460c4:	stp	x9, x21, [x20]
   460c8:	str	x20, [x19, #64]
   460cc:	cbz	w7, 460d8 <__asan_backtrace_free@@Base+0xc8>
   460d0:	add	x19, x19, #0x3c
   460d4:	stlr	wzr, [x19]
   460d8:	ldp	x19, x20, [sp, #16]
   460dc:	ldr	x21, [sp, #32]
   460e0:	ldp	x29, x30, [sp], #48
   460e4:	ret
   460e8:	add	x0, x19, #0x3c
   460ec:	mov	w3, #0x1                   	// #1
   460f0:	ldxr	w1, [x0]
   460f4:	stxr	w2, w3, [x0]
   460f8:	cbnz	w2, 460f0 <__asan_backtrace_free@@Base+0xe0>
   460fc:	dmb	ish
   46100:	cbnz	w1, 460d8 <__asan_backtrace_free@@Base+0xc8>
   46104:	ldr	w7, [x19, #8]
   46108:	cmp	x21, #0xf
   4610c:	b.ls	460cc <__asan_backtrace_free@@Base+0xbc>  // b.plast
   46110:	ldr	x9, [x19, #64]
   46114:	add	x0, x19, #0x40
   46118:	mov	x3, x9
   4611c:	cbnz	x9, 46070 <__asan_backtrace_free@@Base+0x60>
   46120:	b	460c4 <__asan_backtrace_free@@Base+0xb4>
   46124:	mov	x1, x21
   46128:	mov	x0, x20
   4612c:	bl	69f0 <munmap@plt>
   46130:	cbnz	w0, 46050 <__asan_backtrace_free@@Base+0x40>
   46134:	b	460d8 <__asan_backtrace_free@@Base+0xc8>
   46138:	stp	xzr, x21, [x20]
   4613c:	str	x20, [x19, #64]
   46140:	b	460d8 <__asan_backtrace_free@@Base+0xc8>
   46144:	nop

0000000000046148 <__asan_backtrace_alloc@@Base>:
   46148:	stp	x29, x30, [sp, #-64]!
   4614c:	mov	x29, sp
   46150:	ldr	w8, [x0, #8]
   46154:	stp	x19, x20, [sp, #16]
   46158:	mov	x20, x1
   4615c:	stp	x21, x22, [sp, #32]
   46160:	mov	x21, x0
   46164:	stp	x23, x24, [sp, #48]
   46168:	mov	x24, x2
   4616c:	mov	x23, x3
   46170:	cbnz	w8, 46250 <__asan_backtrace_alloc@@Base+0x108>
   46174:	ldr	x4, [x0, #64]
   46178:	add	x7, x0, #0x40
   4617c:	cbz	x4, 46290 <__asan_backtrace_alloc@@Base+0x148>
   46180:	mov	x6, x7
   46184:	b	46190 <__asan_backtrace_alloc@@Base+0x48>
   46188:	mov	x6, x19
   4618c:	cbz	x4, 46280 <__asan_backtrace_alloc@@Base+0x138>
   46190:	ldr	x5, [x4, #8]
   46194:	mov	x19, x4
   46198:	ldr	x4, [x4]
   4619c:	cmp	x5, x20
   461a0:	b.cc	46188 <__asan_backtrace_alloc@@Base+0x40>  // b.lo, b.ul, b.last
   461a4:	add	x20, x20, #0x7
   461a8:	str	x4, [x6]
   461ac:	and	x20, x20, #0xfffffffffffffff8
   461b0:	cmp	x5, x20
   461b4:	b.ls	46234 <__asan_backtrace_alloc@@Base+0xec>  // b.plast
   461b8:	sub	x5, x5, x20
   461bc:	cmp	x5, #0xf
   461c0:	b.ls	46234 <__asan_backtrace_alloc@@Base+0xec>  // b.plast
   461c4:	ldr	x9, [x21, #64]
   461c8:	mov	x4, #0x0                   	// #0
   461cc:	mov	x0, x9
   461d0:	mov	x1, x9
   461d4:	cbnz	x9, 461f4 <__asan_backtrace_alloc@@Base+0xac>
   461d8:	b	46224 <__asan_backtrace_alloc@@Base+0xdc>
   461dc:	ldr	x1, [x7]
   461e0:	ldr	x3, [x0, #8]
   461e4:	ldr	x2, [x1, #8]
   461e8:	cmp	x3, x2
   461ec:	csel	x1, x1, x0, cs  // cs = hs, nlast
   461f0:	csel	x7, x7, x6, cs  // cs = hs, nlast
   461f4:	mov	x6, x0
   461f8:	add	x4, x4, #0x1
   461fc:	ldr	x0, [x0]
   46200:	cbnz	x0, 461dc <__asan_backtrace_alloc@@Base+0x94>
   46204:	cmp	x4, #0xf
   46208:	b.ls	46224 <__asan_backtrace_alloc@@Base+0xdc>  // b.plast
   4620c:	ldr	x0, [x1, #8]
   46210:	cmp	x5, x0
   46214:	b.ls	46234 <__asan_backtrace_alloc@@Base+0xec>  // b.plast
   46218:	ldr	x0, [x1]
   4621c:	str	x0, [x7]
   46220:	ldr	x9, [x21, #64]
   46224:	add	x0, x19, x20
   46228:	str	x9, [x19, x20]
   4622c:	str	x5, [x0, #8]
   46230:	str	x0, [x21, #64]
   46234:	cbnz	w8, 46324 <__asan_backtrace_alloc@@Base+0x1dc>
   46238:	mov	x0, x19
   4623c:	ldp	x19, x20, [sp, #16]
   46240:	ldp	x21, x22, [sp, #32]
   46244:	ldp	x23, x24, [sp, #48]
   46248:	ldp	x29, x30, [sp], #64
   4624c:	ret
   46250:	add	x0, x0, #0x3c
   46254:	mov	w2, #0x1                   	// #1
   46258:	ldxr	w1, [x0]
   4625c:	stxr	w3, w2, [x0]
   46260:	cbnz	w3, 46258 <__asan_backtrace_alloc@@Base+0x110>
   46264:	dmb	ish
   46268:	cbnz	w1, 46290 <__asan_backtrace_alloc@@Base+0x148>
   4626c:	ldr	x4, [x21, #64]
   46270:	add	x7, x21, #0x40
   46274:	ldr	w8, [x21, #8]
   46278:	cbnz	x4, 46180 <__asan_backtrace_alloc@@Base+0x38>
   4627c:	nop
   46280:	cbz	w8, 46290 <__asan_backtrace_alloc@@Base+0x148>
   46284:	add	x0, x21, #0x3c
   46288:	stlr	wzr, [x0]
   4628c:	nop
   46290:	bl	6c70 <getpagesize@plt>
   46294:	sub	x22, x20, #0x1
   46298:	sxtw	x0, w0
   4629c:	mov	x5, #0x0                   	// #0
   462a0:	add	x22, x22, x0
   462a4:	neg	x0, x0
   462a8:	and	x22, x22, x0
   462ac:	mov	w4, #0xffffffff            	// #-1
   462b0:	mov	x1, x22
   462b4:	mov	w3, #0x22                  	// #34
   462b8:	mov	w2, #0x3                   	// #3
   462bc:	mov	x0, #0x0                   	// #0
   462c0:	bl	69d0 <mmap@plt>
   462c4:	mov	x19, x0
   462c8:	cmn	x0, #0x1
   462cc:	b.eq	462fc <__asan_backtrace_alloc@@Base+0x1b4>  // b.none
   462d0:	add	x1, x20, #0x7
   462d4:	and	x1, x1, #0xfffffffffffffff8
   462d8:	cmp	x22, x1
   462dc:	b.ls	46238 <__asan_backtrace_alloc@@Base+0xf0>  // b.plast
   462e0:	sub	x2, x22, x1
   462e4:	mov	x4, x23
   462e8:	add	x1, x0, x1
   462ec:	mov	x3, x24
   462f0:	mov	x0, x21
   462f4:	bl	6bc0 <__asan_backtrace_free@plt>
   462f8:	b	46238 <__asan_backtrace_alloc@@Base+0xf0>
   462fc:	mov	x19, #0x0                   	// #0
   46300:	cbz	x24, 46238 <__asan_backtrace_alloc@@Base+0xf0>
   46304:	bl	6ac0 <__errno_location@plt>
   46308:	mov	x2, x0
   4630c:	adrp	x1, 50000 <__asan_backtrace_vector_release@@Base+0x9bb0>
   46310:	mov	x0, x23
   46314:	add	x1, x1, #0x2f0
   46318:	ldr	w2, [x2]
   4631c:	blr	x24
   46320:	b	46238 <__asan_backtrace_alloc@@Base+0xf0>
   46324:	add	x21, x21, #0x3c
   46328:	stlr	wzr, [x21]
   4632c:	b	46238 <__asan_backtrace_alloc@@Base+0xf0>

0000000000046330 <__asan_backtrace_vector_grow@@Base>:
   46330:	stp	x29, x30, [sp, #-80]!
   46334:	mov	x29, sp
   46338:	ldp	x6, x5, [x4, #8]
   4633c:	stp	x19, x20, [sp, #16]
   46340:	mov	x19, x4
   46344:	stp	x21, x22, [sp, #32]
   46348:	mov	x21, x1
   4634c:	add	x20, x1, x6
   46350:	cmp	x5, x1
   46354:	b.cc	4637c <__asan_backtrace_vector_grow@@Base+0x4c>  // b.lo, b.ul, b.last
   46358:	ldr	x22, [x4]
   4635c:	add	x22, x22, x6
   46360:	sub	x5, x5, x21
   46364:	stp	x20, x5, [x19, #8]
   46368:	mov	x0, x22
   4636c:	ldp	x19, x20, [sp, #16]
   46370:	ldp	x21, x22, [sp, #32]
   46374:	ldp	x29, x30, [sp], #80
   46378:	ret
   4637c:	stp	x23, x24, [sp, #48]
   46380:	mov	x23, x0
   46384:	mov	x24, x2
   46388:	str	x25, [sp, #64]
   4638c:	mov	x25, x3
   46390:	cbnz	x6, 463fc <__asan_backtrace_vector_grow@@Base+0xcc>
   46394:	lsl	x20, x20, #4
   46398:	mov	x3, x25
   4639c:	mov	x2, x24
   463a0:	mov	x1, x20
   463a4:	mov	x0, x23
   463a8:	bl	68c0 <__asan_backtrace_alloc@plt>
   463ac:	mov	x22, x0
   463b0:	cbz	x0, 46430 <__asan_backtrace_vector_grow@@Base+0x100>
   463b4:	ldp	x1, x6, [x19]
   463b8:	cbz	x1, 463e4 <__asan_backtrace_vector_grow@@Base+0xb4>
   463bc:	mov	x2, x6
   463c0:	bl	67d0 <__asan_internal_memcpy@plt>
   463c4:	ldp	x1, x5, [x19]
   463c8:	mov	x4, x25
   463cc:	ldr	x2, [x19, #16]
   463d0:	mov	x3, x24
   463d4:	mov	x0, x23
   463d8:	add	x2, x5, x2
   463dc:	bl	6bc0 <__asan_backtrace_free@plt>
   463e0:	ldr	x6, [x19, #8]
   463e4:	sub	x5, x20, x6
   463e8:	add	x20, x21, x6
   463ec:	ldp	x23, x24, [sp, #48]
   463f0:	ldr	x25, [sp, #64]
   463f4:	str	x22, [x19]
   463f8:	b	4635c <__asan_backtrace_vector_grow@@Base+0x2c>
   463fc:	bl	6c70 <getpagesize@plt>
   46400:	cmp	x20, w0, sxtw
   46404:	lsl	x6, x20, #1
   46408:	sxtw	x5, w0
   4640c:	b.cs	4641c <__asan_backtrace_vector_grow@@Base+0xec>  // b.hs, b.nlast
   46410:	cmp	x5, x6
   46414:	csel	x20, x5, x6, ls  // ls = plast
   46418:	b	46398 <__asan_backtrace_vector_grow@@Base+0x68>
   4641c:	sub	x20, x6, #0x1
   46420:	neg	x0, x5
   46424:	add	x20, x20, x5
   46428:	and	x20, x20, x0
   4642c:	b	46398 <__asan_backtrace_vector_grow@@Base+0x68>
   46430:	ldp	x23, x24, [sp, #48]
   46434:	ldr	x25, [sp, #64]
   46438:	b	46368 <__asan_backtrace_vector_grow@@Base+0x38>
   4643c:	nop

0000000000046440 <__asan_backtrace_vector_finish@@Base>:
   46440:	ldp	x0, x2, [x1]
   46444:	add	x2, x0, x2
   46448:	stp	x2, xzr, [x1]
   4644c:	ret

0000000000046450 <__asan_backtrace_vector_release@@Base>:
   46450:	stp	x29, x30, [sp, #-32]!
   46454:	mov	x4, x3
   46458:	mov	x3, x2
   4645c:	mov	x29, sp
   46460:	ldp	x2, x6, [x1, #8]
   46464:	str	x19, [sp, #16]
   46468:	mov	x19, x1
   4646c:	ldr	x5, [x19]
   46470:	add	x1, x2, #0x7
   46474:	and	x1, x1, #0xfffffffffffffff8
   46478:	add	x2, x2, x6
   4647c:	sub	x2, x2, x1
   46480:	add	x1, x5, x1
   46484:	bl	6bc0 <__asan_backtrace_free@plt>
   46488:	str	xzr, [x19, #16]
   4648c:	ldr	x0, [x19, #8]
   46490:	cbnz	x0, 46498 <__asan_backtrace_vector_release@@Base+0x48>
   46494:	str	xzr, [x19]
   46498:	mov	w0, #0x1                   	// #1
   4649c:	ldr	x19, [sp, #16]
   464a0:	ldp	x29, x30, [sp], #32
   464a4:	ret
   464a8:	adrp	x2, 6d000 <_Unwind_Backtrace@GCC_3.3>
   464ac:	mov	x1, #0x0                   	// #0
   464b0:	ldr	x2, [x2, #928]
   464b4:	b	6a10 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000000464b8 <.fini>:
   464b8:	stp	x29, x30, [sp, #-16]!
   464bc:	mov	x29, sp
   464c0:	ldp	x29, x30, [sp], #16
   464c4:	ret
