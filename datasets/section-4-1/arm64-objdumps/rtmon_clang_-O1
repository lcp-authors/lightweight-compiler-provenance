
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404ba0 <.init>:
  404ba0:	stp	x29, x30, [sp, #-16]!
  404ba4:	mov	x29, sp
  404ba8:	bl	405190 <_start@@Base+0x50>
  404bac:	ldp	x29, x30, [sp], #16
  404bb0:	ret

Disassembly of section .plt:

0000000000404bc0 <memcpy@plt-0x20>:
  404bc0:	stp	x16, x30, [sp, #-16]!
  404bc4:	adrp	x16, 41d000 <_IO_stdin_used@@Base+0x102a0>
  404bc8:	ldr	x17, [x16, #4088]
  404bcc:	add	x16, x16, #0xff8
  404bd0:	br	x17
  404bd4:	nop
  404bd8:	nop
  404bdc:	nop

0000000000404be0 <memcpy@plt>:
  404be0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404be4:	ldr	x17, [x16]
  404be8:	add	x16, x16, #0x0
  404bec:	br	x17

0000000000404bf0 <recvmsg@plt>:
  404bf0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #8]
  404bf8:	add	x16, x16, #0x8
  404bfc:	br	x17

0000000000404c00 <strtoul@plt>:
  404c00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #16]
  404c08:	add	x16, x16, #0x10
  404c0c:	br	x17

0000000000404c10 <strlen@plt>:
  404c10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #24]
  404c18:	add	x16, x16, #0x18
  404c1c:	br	x17

0000000000404c20 <exit@plt>:
  404c20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #32]
  404c28:	add	x16, x16, #0x20
  404c2c:	br	x17

0000000000404c30 <perror@plt>:
  404c30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #40]
  404c38:	add	x16, x16, #0x28
  404c3c:	br	x17

0000000000404c40 <__cmsg_nxthdr@plt>:
  404c40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #48]
  404c48:	add	x16, x16, #0x30
  404c4c:	br	x17

0000000000404c50 <strtoll@plt>:
  404c50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #56]
  404c58:	add	x16, x16, #0x38
  404c5c:	br	x17

0000000000404c60 <strtod@plt>:
  404c60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #64]
  404c68:	add	x16, x16, #0x40
  404c6c:	br	x17

0000000000404c70 <geteuid@plt>:
  404c70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #72]
  404c78:	add	x16, x16, #0x48
  404c7c:	br	x17

0000000000404c80 <sethostent@plt>:
  404c80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #80]
  404c88:	add	x16, x16, #0x50
  404c8c:	br	x17

0000000000404c90 <bind@plt>:
  404c90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #88]
  404c98:	add	x16, x16, #0x58
  404c9c:	br	x17

0000000000404ca0 <ftell@plt>:
  404ca0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #96]
  404ca8:	add	x16, x16, #0x60
  404cac:	br	x17

0000000000404cb0 <sprintf@plt>:
  404cb0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #104]
  404cb8:	add	x16, x16, #0x68
  404cbc:	br	x17

0000000000404cc0 <getuid@plt>:
  404cc0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #112]
  404cc8:	add	x16, x16, #0x70
  404ccc:	br	x17

0000000000404cd0 <putc@plt>:
  404cd0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #120]
  404cd8:	add	x16, x16, #0x78
  404cdc:	br	x17

0000000000404ce0 <strftime@plt>:
  404ce0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #128]
  404ce8:	add	x16, x16, #0x80
  404cec:	br	x17

0000000000404cf0 <fputc@plt>:
  404cf0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #136]
  404cf8:	add	x16, x16, #0x88
  404cfc:	br	x17

0000000000404d00 <snprintf@plt>:
  404d00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #144]
  404d08:	add	x16, x16, #0x90
  404d0c:	br	x17

0000000000404d10 <fileno@plt>:
  404d10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #152]
  404d18:	add	x16, x16, #0x98
  404d1c:	br	x17

0000000000404d20 <localtime@plt>:
  404d20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #160]
  404d28:	add	x16, x16, #0xa0
  404d2c:	br	x17

0000000000404d30 <fclose@plt>:
  404d30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #168]
  404d38:	add	x16, x16, #0xa8
  404d3c:	br	x17

0000000000404d40 <atoi@plt>:
  404d40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #176]
  404d48:	add	x16, x16, #0xb0
  404d4c:	br	x17

0000000000404d50 <time@plt>:
  404d50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #184]
  404d58:	add	x16, x16, #0xb8
  404d5c:	br	x17

0000000000404d60 <malloc@plt>:
  404d60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #192]
  404d68:	add	x16, x16, #0xc0
  404d6c:	br	x17

0000000000404d70 <setsockopt@plt>:
  404d70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #200]
  404d78:	add	x16, x16, #0xc8
  404d7c:	br	x17

0000000000404d80 <__isoc99_fscanf@plt>:
  404d80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #208]
  404d88:	add	x16, x16, #0xd0
  404d8c:	br	x17

0000000000404d90 <__libc_start_main@plt>:
  404d90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #216]
  404d98:	add	x16, x16, #0xd8
  404d9c:	br	x17

0000000000404da0 <strcat@plt>:
  404da0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #224]
  404da8:	add	x16, x16, #0xe0
  404dac:	br	x17

0000000000404db0 <if_indextoname@plt>:
  404db0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #232]
  404db8:	add	x16, x16, #0xe8
  404dbc:	br	x17

0000000000404dc0 <memset@plt>:
  404dc0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #240]
  404dc8:	add	x16, x16, #0xf0
  404dcc:	br	x17

0000000000404dd0 <gettimeofday@plt>:
  404dd0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #248]
  404dd8:	add	x16, x16, #0xf8
  404ddc:	br	x17

0000000000404de0 <sendmsg@plt>:
  404de0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #256]
  404de8:	add	x16, x16, #0x100
  404dec:	br	x17

0000000000404df0 <cap_get_flag@plt>:
  404df0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #264]
  404df8:	add	x16, x16, #0x108
  404dfc:	br	x17

0000000000404e00 <bcmp@plt>:
  404e00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #272]
  404e08:	add	x16, x16, #0x110
  404e0c:	br	x17

0000000000404e10 <strcasecmp@plt>:
  404e10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #280]
  404e18:	add	x16, x16, #0x118
  404e1c:	br	x17

0000000000404e20 <realloc@plt>:
  404e20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #288]
  404e28:	add	x16, x16, #0x120
  404e2c:	br	x17

0000000000404e30 <cap_set_proc@plt>:
  404e30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #296]
  404e38:	add	x16, x16, #0x128
  404e3c:	br	x17

0000000000404e40 <strdup@plt>:
  404e40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #304]
  404e48:	add	x16, x16, #0x130
  404e4c:	br	x17

0000000000404e50 <strerror@plt>:
  404e50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #312]
  404e58:	add	x16, x16, #0x138
  404e5c:	br	x17

0000000000404e60 <close@plt>:
  404e60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #320]
  404e68:	add	x16, x16, #0x140
  404e6c:	br	x17

0000000000404e70 <strrchr@plt>:
  404e70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #328]
  404e78:	add	x16, x16, #0x148
  404e7c:	br	x17

0000000000404e80 <recv@plt>:
  404e80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #336]
  404e88:	add	x16, x16, #0x150
  404e8c:	br	x17

0000000000404e90 <__gmon_start__@plt>:
  404e90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #344]
  404e98:	add	x16, x16, #0x158
  404e9c:	br	x17

0000000000404ea0 <abort@plt>:
  404ea0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #352]
  404ea8:	add	x16, x16, #0x160
  404eac:	br	x17

0000000000404eb0 <feof@plt>:
  404eb0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #360]
  404eb8:	add	x16, x16, #0x168
  404ebc:	br	x17

0000000000404ec0 <strcmp@plt>:
  404ec0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #368]
  404ec8:	add	x16, x16, #0x170
  404ecc:	br	x17

0000000000404ed0 <__ctype_b_loc@plt>:
  404ed0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #376]
  404ed8:	add	x16, x16, #0x178
  404edc:	br	x17

0000000000404ee0 <strtol@plt>:
  404ee0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #384]
  404ee8:	add	x16, x16, #0x180
  404eec:	br	x17

0000000000404ef0 <cap_get_proc@plt>:
  404ef0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #392]
  404ef8:	add	x16, x16, #0x188
  404efc:	br	x17

0000000000404f00 <fread@plt>:
  404f00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #400]
  404f08:	add	x16, x16, #0x190
  404f0c:	br	x17

0000000000404f10 <getline@plt>:
  404f10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #408]
  404f18:	add	x16, x16, #0x198
  404f1c:	br	x17

0000000000404f20 <gethostbyaddr@plt>:
  404f20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #416]
  404f28:	add	x16, x16, #0x1a0
  404f2c:	br	x17

0000000000404f30 <free@plt>:
  404f30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #424]
  404f38:	add	x16, x16, #0x1a8
  404f3c:	br	x17

0000000000404f40 <inet_pton@plt>:
  404f40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #432]
  404f48:	add	x16, x16, #0x1b0
  404f4c:	br	x17

0000000000404f50 <send@plt>:
  404f50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #440]
  404f58:	add	x16, x16, #0x1b8
  404f5c:	br	x17

0000000000404f60 <strspn@plt>:
  404f60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #448]
  404f68:	add	x16, x16, #0x1c0
  404f6c:	br	x17

0000000000404f70 <strchr@plt>:
  404f70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #456]
  404f78:	add	x16, x16, #0x1c8
  404f7c:	br	x17

0000000000404f80 <strtoull@plt>:
  404f80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #464]
  404f88:	add	x16, x16, #0x1d0
  404f8c:	br	x17

0000000000404f90 <fwrite@plt>:
  404f90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #472]
  404f98:	add	x16, x16, #0x1d8
  404f9c:	br	x17

0000000000404fa0 <socket@plt>:
  404fa0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #480]
  404fa8:	add	x16, x16, #0x1e0
  404fac:	br	x17

0000000000404fb0 <fflush@plt>:
  404fb0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #488]
  404fb8:	add	x16, x16, #0x1e8
  404fbc:	br	x17

0000000000404fc0 <strcpy@plt>:
  404fc0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #496]
  404fc8:	add	x16, x16, #0x1f0
  404fcc:	br	x17

0000000000404fd0 <fopen64@plt>:
  404fd0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #504]
  404fd8:	add	x16, x16, #0x1f8
  404fdc:	br	x17

0000000000404fe0 <cap_clear@plt>:
  404fe0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #512]
  404fe8:	add	x16, x16, #0x200
  404fec:	br	x17

0000000000404ff0 <isatty@plt>:
  404ff0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #520]
  404ff8:	add	x16, x16, #0x208
  404ffc:	br	x17

0000000000405000 <sysconf@plt>:
  405000:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #528]
  405008:	add	x16, x16, #0x210
  40500c:	br	x17

0000000000405010 <asctime@plt>:
  405010:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #536]
  405018:	add	x16, x16, #0x218
  40501c:	br	x17

0000000000405020 <cap_free@plt>:
  405020:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #544]
  405028:	add	x16, x16, #0x220
  40502c:	br	x17

0000000000405030 <if_nametoindex@plt>:
  405030:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #552]
  405038:	add	x16, x16, #0x228
  40503c:	br	x17

0000000000405040 <strchrnul@plt>:
  405040:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #560]
  405048:	add	x16, x16, #0x230
  40504c:	br	x17

0000000000405050 <strstr@plt>:
  405050:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #568]
  405058:	add	x16, x16, #0x238
  40505c:	br	x17

0000000000405060 <__isoc99_sscanf@plt>:
  405060:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #576]
  405068:	add	x16, x16, #0x240
  40506c:	br	x17

0000000000405070 <strncpy@plt>:
  405070:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #584]
  405078:	add	x16, x16, #0x248
  40507c:	br	x17

0000000000405080 <strcspn@plt>:
  405080:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #592]
  405088:	add	x16, x16, #0x250
  40508c:	br	x17

0000000000405090 <vfprintf@plt>:
  405090:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #600]
  405098:	add	x16, x16, #0x258
  40509c:	br	x17

00000000004050a0 <printf@plt>:
  4050a0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #608]
  4050a8:	add	x16, x16, #0x260
  4050ac:	br	x17

00000000004050b0 <__assert_fail@plt>:
  4050b0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #616]
  4050b8:	add	x16, x16, #0x268
  4050bc:	br	x17

00000000004050c0 <__errno_location@plt>:
  4050c0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #624]
  4050c8:	add	x16, x16, #0x270
  4050cc:	br	x17

00000000004050d0 <getenv@plt>:
  4050d0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #632]
  4050d8:	add	x16, x16, #0x278
  4050dc:	br	x17

00000000004050e0 <putchar@plt>:
  4050e0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #640]
  4050e8:	add	x16, x16, #0x280
  4050ec:	br	x17

00000000004050f0 <getsockname@plt>:
  4050f0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #648]
  4050f8:	add	x16, x16, #0x288
  4050fc:	br	x17

0000000000405100 <fprintf@plt>:
  405100:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #656]
  405108:	add	x16, x16, #0x290
  40510c:	br	x17

0000000000405110 <fgets@plt>:
  405110:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #664]
  405118:	add	x16, x16, #0x298
  40511c:	br	x17

0000000000405120 <inet_ntop@plt>:
  405120:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #672]
  405128:	add	x16, x16, #0x2a0
  40512c:	br	x17

0000000000405130 <ferror@plt>:
  405130:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #680]
  405138:	add	x16, x16, #0x2a8
  40513c:	br	x17

Disassembly of section .text:

0000000000405140 <_start@@Base>:
  405140:	mov	x29, #0x0                   	// #0
  405144:	mov	x30, #0x0                   	// #0
  405148:	mov	x5, x0
  40514c:	ldr	x1, [sp]
  405150:	add	x2, sp, #0x8
  405154:	mov	x6, sp
  405158:	movz	x0, #0x0, lsl #48
  40515c:	movk	x0, #0x0, lsl #32
  405160:	movk	x0, #0x40, lsl #16
  405164:	movk	x0, #0x524c
  405168:	movz	x3, #0x0, lsl #48
  40516c:	movk	x3, #0x0, lsl #32
  405170:	movk	x3, #0x40, lsl #16
  405174:	movk	x3, #0xccc8
  405178:	movz	x4, #0x0, lsl #48
  40517c:	movk	x4, #0x0, lsl #32
  405180:	movk	x4, #0x40, lsl #16
  405184:	movk	x4, #0xcd48
  405188:	bl	404d90 <__libc_start_main@plt>
  40518c:	bl	404ea0 <abort@plt>
  405190:	adrp	x0, 41d000 <_IO_stdin_used@@Base+0x102a0>
  405194:	ldr	x0, [x0, #4040]
  405198:	cbz	x0, 4051a0 <_start@@Base+0x60>
  40519c:	b	404e90 <__gmon_start__@plt>
  4051a0:	ret
  4051a4:	nop
  4051a8:	adrp	x0, 41e000 <memcpy@GLIBC_2.17>
  4051ac:	add	x0, x0, #0x2d0
  4051b0:	adrp	x1, 41e000 <memcpy@GLIBC_2.17>
  4051b4:	add	x1, x1, #0x2d0
  4051b8:	cmp	x1, x0
  4051bc:	b.eq	4051d4 <_start@@Base+0x94>  // b.none
  4051c0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4051c4:	ldr	x1, [x1, #3432]
  4051c8:	cbz	x1, 4051d4 <_start@@Base+0x94>
  4051cc:	mov	x16, x1
  4051d0:	br	x16
  4051d4:	ret
  4051d8:	adrp	x0, 41e000 <memcpy@GLIBC_2.17>
  4051dc:	add	x0, x0, #0x2d0
  4051e0:	adrp	x1, 41e000 <memcpy@GLIBC_2.17>
  4051e4:	add	x1, x1, #0x2d0
  4051e8:	sub	x1, x1, x0
  4051ec:	lsr	x2, x1, #63
  4051f0:	add	x1, x2, x1, asr #3
  4051f4:	cmp	xzr, x1, asr #1
  4051f8:	asr	x1, x1, #1
  4051fc:	b.eq	405214 <_start@@Base+0xd4>  // b.none
  405200:	adrp	x2, 40c000 <rtnl_listen@@Base+0x210>
  405204:	ldr	x2, [x2, #3440]
  405208:	cbz	x2, 405214 <_start@@Base+0xd4>
  40520c:	mov	x16, x2
  405210:	br	x16
  405214:	ret
  405218:	stp	x29, x30, [sp, #-32]!
  40521c:	mov	x29, sp
  405220:	str	x19, [sp, #16]
  405224:	adrp	x19, 41e000 <memcpy@GLIBC_2.17>
  405228:	ldrb	w0, [x19, #728]
  40522c:	cbnz	w0, 40523c <_start@@Base+0xfc>
  405230:	bl	4051a8 <_start@@Base+0x68>
  405234:	mov	w0, #0x1                   	// #1
  405238:	strb	w0, [x19, #728]
  40523c:	ldr	x19, [sp, #16]
  405240:	ldp	x29, x30, [sp], #32
  405244:	ret
  405248:	b	4051d8 <_start@@Base+0x98>

000000000040524c <main@@Base>:
  40524c:	sub	sp, sp, #0xb0
  405250:	cmp	w0, #0x2
  405254:	stp	x29, x30, [sp, #80]
  405258:	stp	x28, x27, [sp, #96]
  40525c:	stp	x26, x25, [sp, #112]
  405260:	stp	x24, x23, [sp, #128]
  405264:	stp	x22, x21, [sp, #144]
  405268:	stp	x20, x19, [sp, #160]
  40526c:	add	x29, sp, #0x50
  405270:	b.lt	405444 <main@@Base+0x1f8>  // b.tstop
  405274:	adrp	x22, 40c000 <rtnl_listen@@Base+0x210>
  405278:	adrp	x23, 40c000 <rtnl_listen@@Base+0x210>
  40527c:	adrp	x26, 40c000 <rtnl_listen@@Base+0x210>
  405280:	mov	w21, w0
  405284:	mov	x25, x1
  405288:	mov	x19, xzr
  40528c:	mov	w24, wzr
  405290:	mov	w20, #0xffffffff            	// #-1
  405294:	add	x22, x22, #0xd78
  405298:	add	x23, x23, #0xdc0
  40529c:	add	x26, x26, #0xd80
  4052a0:	str	wzr, [sp, #12]
  4052a4:	str	xzr, [sp, #16]
  4052a8:	b	4052c4 <main@@Base+0x78>
  4052ac:	mov	w24, #0x2                   	// #2
  4052b0:	mov	x27, x25
  4052b4:	cmp	w21, #0x2
  4052b8:	sub	w21, w21, #0x1
  4052bc:	add	x25, x27, #0x8
  4052c0:	b.le	405458 <main@@Base+0x20c>
  4052c4:	mov	x27, x25
  4052c8:	ldr	x0, [x27, #8]!
  4052cc:	mov	x1, x22
  4052d0:	bl	406b9c <matches@@Base>
  4052d4:	tbz	w0, #0, 405398 <main@@Base+0x14c>
  4052d8:	ldr	x28, [x27]
  4052dc:	mov	x1, x23
  4052e0:	mov	x0, x28
  4052e4:	bl	404ec0 <strcmp@plt>
  4052e8:	cbz	w0, 4052ac <main@@Base+0x60>
  4052ec:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4052f0:	mov	x0, x28
  4052f4:	add	x1, x1, #0xdc3
  4052f8:	bl	404ec0 <strcmp@plt>
  4052fc:	cbz	w0, 4053f0 <main@@Base+0x1a4>
  405300:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  405304:	mov	x0, x28
  405308:	add	x1, x1, #0xdc6
  40530c:	bl	404ec0 <strcmp@plt>
  405310:	cbz	w0, 4053f8 <main@@Base+0x1ac>
  405314:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  405318:	mov	x0, x28
  40531c:	add	x1, x1, #0xdc9
  405320:	bl	406b9c <matches@@Base>
  405324:	tbz	w0, #0, 4055b8 <main@@Base+0x36c>
  405328:	ldr	x0, [x27]
  40532c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  405330:	add	x1, x1, #0xdf0
  405334:	bl	406b9c <matches@@Base>
  405338:	tbz	w0, #0, 405400 <main@@Base+0x1b4>
  40533c:	ldr	x0, [x27]
  405340:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405344:	add	x1, x1, #0x991
  405348:	bl	406b9c <matches@@Base>
  40534c:	tbz	w0, #0, 405414 <main@@Base+0x1c8>
  405350:	ldr	x0, [x27]
  405354:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  405358:	add	x1, x1, #0xdf5
  40535c:	bl	406b9c <matches@@Base>
  405360:	tbz	w0, #0, 405424 <main@@Base+0x1d8>
  405364:	ldr	x0, [x27]
  405368:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  40536c:	add	x1, x1, #0xdfd
  405370:	bl	406b9c <matches@@Base>
  405374:	tbz	w0, #0, 405434 <main@@Base+0x1e8>
  405378:	ldr	x20, [x27]
  40537c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  405380:	add	x1, x1, #0xe03
  405384:	mov	x0, x20
  405388:	bl	404ec0 <strcmp@plt>
  40538c:	cbnz	w0, 4055d4 <main@@Base+0x388>
  405390:	mov	w20, #0xffffffff            	// #-1
  405394:	b	4052b0 <main@@Base+0x64>
  405398:	cmp	w21, #0x2
  40539c:	b.le	405608 <main@@Base+0x3bc>
  4053a0:	ldr	x25, [x25, #16]
  4053a4:	mov	x1, x26
  4053a8:	sub	w21, w21, #0x1
  4053ac:	mov	x0, x25
  4053b0:	bl	404ec0 <strcmp@plt>
  4053b4:	cbz	w0, 4053e8 <main@@Base+0x19c>
  4053b8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4053bc:	mov	x0, x25
  4053c0:	add	x1, x1, #0xd85
  4053c4:	bl	404ec0 <strcmp@plt>
  4053c8:	cbz	w0, 4053e0 <main@@Base+0x194>
  4053cc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4053d0:	mov	x0, x25
  4053d4:	add	x1, x1, #0x991
  4053d8:	bl	404ec0 <strcmp@plt>
  4053dc:	cbnz	w0, 40558c <main@@Base+0x340>
  4053e0:	mov	w24, #0xa                   	// #10
  4053e4:	b	4052b4 <main@@Base+0x68>
  4053e8:	mov	w24, #0x2                   	// #2
  4053ec:	b	4052b4 <main@@Base+0x68>
  4053f0:	mov	w24, #0xa                   	// #10
  4053f4:	b	4052b0 <main@@Base+0x64>
  4053f8:	mov	w24, #0x11                  	// #17
  4053fc:	b	4052b0 <main@@Base+0x64>
  405400:	cmp	w21, #0x2
  405404:	b.le	405608 <main@@Base+0x3bc>
  405408:	ldr	x19, [x25, #16]
  40540c:	sub	w21, w21, #0x1
  405410:	b	4052b4 <main@@Base+0x68>
  405414:	mov	w8, #0x1                   	// #1
  405418:	mov	w20, wzr
  40541c:	str	w8, [sp, #20]
  405420:	b	4052b0 <main@@Base+0x64>
  405424:	mov	w8, #0x1                   	// #1
  405428:	mov	w20, wzr
  40542c:	str	w8, [sp, #16]
  405430:	b	4052b0 <main@@Base+0x64>
  405434:	mov	w8, #0x1                   	// #1
  405438:	mov	w20, wzr
  40543c:	str	w8, [sp, #12]
  405440:	b	4052b0 <main@@Base+0x64>
  405444:	mov	w24, wzr
  405448:	str	xzr, [sp, #16]
  40544c:	str	wzr, [sp, #12]
  405450:	mov	x19, xzr
  405454:	mov	w20, #0xffffffff            	// #-1
  405458:	cbz	x19, 40560c <main@@Base+0x3c0>
  40545c:	ldr	w8, [sp, #20]
  405460:	cbz	w8, 405470 <main@@Base+0x224>
  405464:	mov	w0, #0x1                   	// #1
  405468:	bl	4056c0 <main@@Base+0x474>
  40546c:	orr	w20, w0, w20
  405470:	ldr	w8, [sp, #16]
  405474:	cbz	w8, 4054b0 <main@@Base+0x264>
  405478:	tst	w24, #0xfffffffd
  40547c:	b.eq	40548c <main@@Base+0x240>  // b.none
  405480:	cmp	w24, #0xa
  405484:	b.ne	4054a0 <main@@Base+0x254>  // b.any
  405488:	b	4054a4 <main@@Base+0x258>
  40548c:	mov	w0, #0x5                   	// #5
  405490:	bl	4056c0 <main@@Base+0x474>
  405494:	orr	w20, w0, w20
  405498:	cmp	w24, #0xa
  40549c:	b.eq	4054a4 <main@@Base+0x258>  // b.none
  4054a0:	cbnz	w24, 4054b0 <main@@Base+0x264>
  4054a4:	mov	w0, #0x9                   	// #9
  4054a8:	bl	4056c0 <main@@Base+0x474>
  4054ac:	orr	w20, w0, w20
  4054b0:	ldr	w8, [sp, #12]
  4054b4:	cbz	w8, 4054f0 <main@@Base+0x2a4>
  4054b8:	tst	w24, #0xfffffffd
  4054bc:	b.eq	4054cc <main@@Base+0x280>  // b.none
  4054c0:	cmp	w24, #0xa
  4054c4:	b.ne	4054e0 <main@@Base+0x294>  // b.any
  4054c8:	b	4054e4 <main@@Base+0x298>
  4054cc:	mov	w0, #0x7                   	// #7
  4054d0:	bl	4056c0 <main@@Base+0x474>
  4054d4:	orr	w20, w0, w20
  4054d8:	cmp	w24, #0xa
  4054dc:	b.eq	4054e4 <main@@Base+0x298>  // b.none
  4054e0:	cbnz	w24, 4054f0 <main@@Base+0x2a4>
  4054e4:	mov	w0, #0xb                   	// #11
  4054e8:	bl	4056c0 <main@@Base+0x474>
  4054ec:	orr	w20, w0, w20
  4054f0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4054f4:	add	x1, x1, #0xe69
  4054f8:	mov	x0, x19
  4054fc:	bl	404fd0 <fopen64@plt>
  405500:	cbz	x0, 405630 <main@@Base+0x3e4>
  405504:	mov	x19, x0
  405508:	add	x0, sp, #0x18
  40550c:	mov	w1, w20
  405510:	bl	40acb0 <rtnl_open@@Base>
  405514:	tbnz	w0, #31, 405644 <main@@Base+0x3f8>
  405518:	add	x0, sp, #0x18
  40551c:	mov	w1, wzr
  405520:	bl	40b154 <rtnl_linkdump_req@@Base>
  405524:	tbnz	w0, #31, 40564c <main@@Base+0x400>
  405528:	mov	x0, x19
  40552c:	bl	4056d8 <main@@Base+0x48c>
  405530:	adrp	x1, 405000 <sysconf@plt>
  405534:	add	x1, x1, #0x730
  405538:	add	x0, sp, #0x18
  40553c:	mov	x2, x19
  405540:	mov	w3, wzr
  405544:	bl	40b628 <rtnl_dump_filter_nc@@Base>
  405548:	tbz	w0, #31, 405660 <main@@Base+0x414>
  40554c:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  405550:	ldr	x3, [x8, #720]
  405554:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  405558:	add	x0, x0, #0xe91
  40555c:	mov	w1, #0x10                  	// #16
  405560:	mov	w2, #0x1                   	// #1
  405564:	bl	404f90 <fwrite@plt>
  405568:	ldp	x20, x19, [sp, #160]
  40556c:	ldp	x22, x21, [sp, #144]
  405570:	ldp	x24, x23, [sp, #128]
  405574:	ldp	x26, x25, [sp, #112]
  405578:	ldp	x28, x27, [sp, #96]
  40557c:	ldp	x29, x30, [sp, #80]
  405580:	mov	w0, #0x1                   	// #1
  405584:	add	sp, sp, #0xb0
  405588:	ret
  40558c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  405590:	add	x1, x1, #0xd8b
  405594:	mov	x0, x25
  405598:	bl	404ec0 <strcmp@plt>
  40559c:	cbz	w0, 405608 <main@@Base+0x3bc>
  4055a0:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  4055a4:	ldr	x0, [x8, #720]
  4055a8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4055ac:	add	x1, x1, #0xd90
  4055b0:	mov	x2, x25
  4055b4:	b	4055fc <main@@Base+0x3b0>
  4055b8:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  4055bc:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4055c0:	add	x0, x0, #0xdd2
  4055c4:	add	x1, x1, #0xf68
  4055c8:	bl	4050a0 <printf@plt>
  4055cc:	mov	w0, wzr
  4055d0:	bl	404c20 <exit@plt>
  4055d4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4055d8:	add	x1, x1, #0xd8b
  4055dc:	mov	x0, x20
  4055e0:	bl	406b9c <matches@@Base>
  4055e4:	tbz	w0, #0, 405608 <main@@Base+0x3bc>
  4055e8:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  4055ec:	ldr	x0, [x8, #720]
  4055f0:	ldr	x2, [x27]
  4055f4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4055f8:	add	x1, x1, #0xe07
  4055fc:	bl	405100 <fprintf@plt>
  405600:	mov	w0, #0xffffffff            	// #-1
  405604:	bl	404c20 <exit@plt>
  405608:	bl	405694 <main@@Base+0x448>
  40560c:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  405610:	ldr	x3, [x8, #720]
  405614:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  405618:	add	x0, x0, #0xe34
  40561c:	mov	w1, #0x34                  	// #52
  405620:	mov	w2, #0x1                   	// #1
  405624:	bl	404f90 <fwrite@plt>
  405628:	mov	w0, #0xffffffff            	// #-1
  40562c:	bl	404c20 <exit@plt>
  405630:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  405634:	add	x0, x0, #0xe6b
  405638:	bl	404c30 <perror@plt>
  40563c:	mov	w0, #0xffffffff            	// #-1
  405640:	bl	404c20 <exit@plt>
  405644:	mov	w0, #0x1                   	// #1
  405648:	bl	404c20 <exit@plt>
  40564c:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  405650:	add	x0, x0, #0xe78
  405654:	bl	404c30 <perror@plt>
  405658:	mov	w0, #0x1                   	// #1
  40565c:	bl	404c20 <exit@plt>
  405660:	adrp	x1, 405000 <sysconf@plt>
  405664:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  405668:	mov	w9, #0x1                   	// #1
  40566c:	add	x1, x1, #0x754
  405670:	add	x0, sp, #0x18
  405674:	mov	x2, x19
  405678:	strb	w9, [x8, #732]
  40567c:	bl	40bdf0 <rtnl_listen@@Base>
  405680:	tbz	w0, #31, 40568c <main@@Base+0x440>
  405684:	mov	w0, #0x2                   	// #2
  405688:	bl	404c20 <exit@plt>
  40568c:	mov	w0, wzr
  405690:	bl	404c20 <exit@plt>
  405694:	stp	x29, x30, [sp, #-16]!
  405698:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  40569c:	ldr	x3, [x8, #720]
  4056a0:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  4056a4:	add	x0, x0, #0xea2
  4056a8:	mov	w1, #0xc5                  	// #197
  4056ac:	mov	w2, #0x1                   	// #1
  4056b0:	mov	x29, sp
  4056b4:	bl	404f90 <fwrite@plt>
  4056b8:	mov	w0, #0xffffffff            	// #-1
  4056bc:	bl	404c20 <exit@plt>
  4056c0:	sub	w8, w0, #0x1
  4056c4:	mov	w9, #0x1                   	// #1
  4056c8:	lsl	w8, w9, w8
  4056cc:	cmp	w0, #0x0
  4056d0:	csel	w0, wzr, w8, eq  // eq = none
  4056d4:	ret
  4056d8:	sub	sp, sp, #0xb0
  4056dc:	mov	x8, #0x18                  	// #24
  4056e0:	str	x19, [sp, #160]
  4056e4:	mov	x19, x0
  4056e8:	movk	x8, #0xf, lsl #32
  4056ec:	mov	x0, sp
  4056f0:	mov	x1, xzr
  4056f4:	stp	x29, x30, [sp, #144]
  4056f8:	add	x29, sp, #0x90
  4056fc:	stp	x8, xzr, [sp, #16]
  405700:	bl	404dd0 <gettimeofday@plt>
  405704:	ldp	x8, x9, [sp]
  405708:	add	x0, sp, #0x10
  40570c:	mov	w1, #0x1                   	// #1
  405710:	mov	w2, #0x18                  	// #24
  405714:	mov	x3, x19
  405718:	stp	w8, w9, [sp, #32]
  40571c:	bl	404f90 <fwrite@plt>
  405720:	ldr	x19, [sp, #160]
  405724:	ldp	x29, x30, [sp, #144]
  405728:	add	sp, sp, #0xb0
  40572c:	ret
  405730:	stp	x29, x30, [sp, #-16]!
  405734:	mov	x2, x1
  405738:	mov	x1, x0
  40573c:	mov	x0, xzr
  405740:	mov	x29, sp
  405744:	bl	405754 <main@@Base+0x508>
  405748:	mov	w0, wzr
  40574c:	ldp	x29, x30, [sp], #16
  405750:	ret
  405754:	stp	x29, x30, [sp, #-32]!
  405758:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  40575c:	ldrb	w8, [x8, #732]
  405760:	stp	x20, x19, [sp, #16]
  405764:	mov	x19, x2
  405768:	mov	x20, x1
  40576c:	cmp	w8, #0x1
  405770:	mov	x29, sp
  405774:	b.ne	405780 <main@@Base+0x534>  // b.any
  405778:	mov	x0, x19
  40577c:	bl	4056d8 <main@@Base+0x48c>
  405780:	ldr	w8, [x20]
  405784:	mov	w1, #0x1                   	// #1
  405788:	mov	x0, x20
  40578c:	mov	x3, x19
  405790:	add	w8, w8, #0x3
  405794:	and	w2, w8, #0xfffffffc
  405798:	bl	404f90 <fwrite@plt>
  40579c:	mov	x0, x19
  4057a0:	bl	404fb0 <fflush@plt>
  4057a4:	ldp	x20, x19, [sp, #16]
  4057a8:	mov	w0, wzr
  4057ac:	ldp	x29, x30, [sp], #32
  4057b0:	ret

00000000004057b4 <read_prop@@Base>:
  4057b4:	sub	sp, sp, #0x110
  4057b8:	stp	x20, x19, [sp, #256]
  4057bc:	mov	x19, x2
  4057c0:	mov	x20, x1
  4057c4:	adrp	x2, 40c000 <rtnl_listen@@Base+0x210>
  4057c8:	mov	x3, x0
  4057cc:	add	x2, x2, #0xfcd
  4057d0:	add	x0, sp, #0x60
  4057d4:	mov	w1, #0x80                  	// #128
  4057d8:	mov	x4, x20
  4057dc:	stp	x29, x30, [sp, #224]
  4057e0:	stp	x28, x21, [sp, #240]
  4057e4:	add	x29, sp, #0xe0
  4057e8:	bl	404d00 <snprintf@plt>
  4057ec:	cmp	w0, #0x1
  4057f0:	b.lt	40589c <read_prop@@Base+0xe8>  // b.tstop
  4057f4:	cmp	w0, #0x80
  4057f8:	b.cs	40589c <read_prop@@Base+0xe8>  // b.hs, b.nlast
  4057fc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405800:	add	x1, x1, #0x603
  405804:	add	x0, sp, #0x60
  405808:	bl	404fd0 <fopen64@plt>
  40580c:	cbz	x0, 4058c0 <read_prop@@Base+0x10c>
  405810:	mov	x21, x0
  405814:	add	x0, sp, #0x10
  405818:	mov	w1, #0x50                  	// #80
  40581c:	mov	x2, x21
  405820:	bl	405110 <fgets@plt>
  405824:	cbz	x0, 4058f4 <read_prop@@Base+0x140>
  405828:	add	x0, sp, #0x10
  40582c:	mov	w1, #0xa                   	// #10
  405830:	add	x20, sp, #0x10
  405834:	bl	404f70 <strchr@plt>
  405838:	cbz	x0, 405840 <read_prop@@Base+0x8c>
  40583c:	strb	wzr, [x0]
  405840:	mov	x0, x21
  405844:	bl	404d30 <fclose@plt>
  405848:	add	x0, sp, #0x10
  40584c:	add	x1, sp, #0x8
  405850:	mov	w2, wzr
  405854:	bl	404ee0 <strtol@plt>
  405858:	ldr	x8, [sp, #8]
  40585c:	cmp	x20, x8
  405860:	b.eq	405920 <read_prop@@Base+0x16c>  // b.none
  405864:	ldrb	w8, [x8]
  405868:	cbnz	w8, 405920 <read_prop@@Base+0x16c>
  40586c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  405870:	add	x8, x0, x8
  405874:	mov	x20, x0
  405878:	cmp	x8, #0x1
  40587c:	b.hi	405890 <read_prop@@Base+0xdc>  // b.pmore
  405880:	bl	4050c0 <__errno_location@plt>
  405884:	ldr	w8, [x0]
  405888:	cmp	w8, #0x22
  40588c:	b.eq	405940 <read_prop@@Base+0x18c>  // b.none
  405890:	mov	w0, wzr
  405894:	str	x20, [x19]
  405898:	b	40598c <read_prop@@Base+0x1d8>
  40589c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4058a0:	ldr	x8, [x8, #3992]
  4058a4:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  4058a8:	add	x0, x0, #0xfe2
  4058ac:	mov	w1, #0x26                  	// #38
  4058b0:	ldr	x3, [x8]
  4058b4:	mov	w2, #0x1                   	// #1
  4058b8:	bl	404f90 <fwrite@plt>
  4058bc:	b	405988 <read_prop@@Base+0x1d4>
  4058c0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4058c4:	ldr	x8, [x8, #3992]
  4058c8:	ldr	x19, [x8]
  4058cc:	bl	4050c0 <__errno_location@plt>
  4058d0:	ldr	w0, [x0]
  4058d4:	bl	404e50 <strerror@plt>
  4058d8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4058dc:	mov	x3, x0
  4058e0:	add	x1, x1, #0x9
  4058e4:	add	x2, sp, #0x60
  4058e8:	mov	x0, x19
  4058ec:	bl	405100 <fprintf@plt>
  4058f0:	b	405988 <read_prop@@Base+0x1d4>
  4058f4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4058f8:	ldr	x8, [x8, #3992]
  4058fc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405900:	add	x1, x1, #0x17
  405904:	add	x3, sp, #0x60
  405908:	ldr	x0, [x8]
  40590c:	mov	x2, x20
  405910:	bl	405100 <fprintf@plt>
  405914:	mov	x0, x21
  405918:	bl	404d30 <fclose@plt>
  40591c:	b	40596c <read_prop@@Base+0x1b8>
  405920:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  405924:	ldr	x8, [x8, #3992]
  405928:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40592c:	add	x1, x1, #0x46
  405930:	add	x2, sp, #0x10
  405934:	ldr	x0, [x8]
  405938:	add	x3, sp, #0x60
  40593c:	b	405968 <read_prop@@Base+0x1b4>
  405940:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  405944:	ldr	x8, [x8, #3992]
  405948:	mov	w0, #0x22                  	// #34
  40594c:	ldr	x19, [x8]
  405950:	bl	404e50 <strerror@plt>
  405954:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405958:	mov	x3, x0
  40595c:	add	x1, x1, #0x6d
  405960:	add	x2, sp, #0x60
  405964:	mov	x0, x19
  405968:	bl	405100 <fprintf@plt>
  40596c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  405970:	ldr	x8, [x8, #3992]
  405974:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405978:	add	x1, x1, #0x7b
  40597c:	add	x2, sp, #0x60
  405980:	ldr	x0, [x8]
  405984:	bl	405100 <fprintf@plt>
  405988:	mov	w0, #0xffffffff            	// #-1
  40598c:	ldp	x20, x19, [sp, #256]
  405990:	ldp	x28, x21, [sp, #240]
  405994:	ldp	x29, x30, [sp, #224]
  405998:	add	sp, sp, #0x110
  40599c:	ret

00000000004059a0 <get_hex@@Base>:
  4059a0:	sub	w8, w0, #0x41
  4059a4:	and	w8, w8, #0xff
  4059a8:	cmp	w8, #0x6
  4059ac:	and	w8, w0, #0xff
  4059b0:	b.cs	4059c0 <get_hex@@Base+0x20>  // b.hs, b.nlast
  4059b4:	mov	w9, #0xffffffc9            	// #-55
  4059b8:	add	w0, w9, w8
  4059bc:	ret
  4059c0:	sub	w9, w0, #0x61
  4059c4:	and	w9, w9, #0xff
  4059c8:	cmp	w9, #0x6
  4059cc:	b.cs	4059dc <get_hex@@Base+0x3c>  // b.hs, b.nlast
  4059d0:	mov	w9, #0xffffffa9            	// #-87
  4059d4:	add	w0, w9, w8
  4059d8:	ret
  4059dc:	sub	w9, w0, #0x30
  4059e0:	and	w9, w9, #0xff
  4059e4:	sub	w8, w8, #0x30
  4059e8:	cmp	w9, #0xa
  4059ec:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
  4059f0:	ret

00000000004059f4 <get_integer@@Base>:
  4059f4:	stp	x29, x30, [sp, #-48]!
  4059f8:	str	x21, [sp, #16]
  4059fc:	stp	x20, x19, [sp, #32]
  405a00:	mov	x29, sp
  405a04:	cbz	x1, 405a44 <get_integer@@Base+0x50>
  405a08:	ldrb	w8, [x1]
  405a0c:	mov	x21, x1
  405a10:	cbz	w8, 405a44 <get_integer@@Base+0x50>
  405a14:	mov	x19, x0
  405a18:	add	x1, x29, #0x18
  405a1c:	mov	x0, x21
  405a20:	bl	404ee0 <strtol@plt>
  405a24:	ldr	x8, [x29, #24]
  405a28:	mov	x20, x0
  405a2c:	mov	w0, #0xffffffff            	// #-1
  405a30:	cbz	x8, 405a48 <get_integer@@Base+0x54>
  405a34:	cmp	x8, x21
  405a38:	b.eq	405a48 <get_integer@@Base+0x54>  // b.none
  405a3c:	ldrb	w8, [x8]
  405a40:	cbz	w8, 405a58 <get_integer@@Base+0x64>
  405a44:	mov	w0, #0xffffffff            	// #-1
  405a48:	ldp	x20, x19, [sp, #32]
  405a4c:	ldr	x21, [sp, #16]
  405a50:	ldp	x29, x30, [sp], #48
  405a54:	ret
  405a58:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  405a5c:	add	x8, x20, x8
  405a60:	cmp	x8, #0x1
  405a64:	b.hi	405a78 <get_integer@@Base+0x84>  // b.pmore
  405a68:	bl	4050c0 <__errno_location@plt>
  405a6c:	ldr	w8, [x0]
  405a70:	cmp	w8, #0x22
  405a74:	b.eq	405a44 <get_integer@@Base+0x50>  // b.none
  405a78:	cmp	x20, w20, sxtw
  405a7c:	b.ne	405a44 <get_integer@@Base+0x50>  // b.any
  405a80:	mov	w0, wzr
  405a84:	str	w20, [x19]
  405a88:	b	405a48 <get_integer@@Base+0x54>

0000000000405a8c <mask2bits@@Base>:
  405a8c:	stp	x29, x30, [sp, #-16]!
  405a90:	mov	x29, sp
  405a94:	bl	405acc <mask2bits@@Base+0x40>
  405a98:	neg	w8, w0
  405a9c:	bics	wzr, w8, w0
  405aa0:	b.eq	405ab0 <mask2bits@@Base+0x24>  // b.none
  405aa4:	mov	w0, #0xffffffff            	// #-1
  405aa8:	ldp	x29, x30, [sp], #16
  405aac:	ret
  405ab0:	cbz	w0, 405ac4 <mask2bits@@Base+0x38>
  405ab4:	rbit	w8, w0
  405ab8:	clz	w8, w8
  405abc:	mov	w9, #0x20                  	// #32
  405ac0:	sub	w0, w9, w8
  405ac4:	ldp	x29, x30, [sp], #16
  405ac8:	ret
  405acc:	rev	w0, w0
  405ad0:	ret

0000000000405ad4 <get_unsigned@@Base>:
  405ad4:	sub	sp, sp, #0x30
  405ad8:	stp	x29, x30, [sp, #16]
  405adc:	stp	x20, x19, [sp, #32]
  405ae0:	add	x29, sp, #0x10
  405ae4:	cbz	x1, 405b3c <get_unsigned@@Base+0x68>
  405ae8:	ldrb	w8, [x1]
  405aec:	mov	x20, x1
  405af0:	cbz	w8, 405b3c <get_unsigned@@Base+0x68>
  405af4:	mov	x19, x0
  405af8:	add	x1, sp, #0x8
  405afc:	mov	x0, x20
  405b00:	bl	404c00 <strtoul@plt>
  405b04:	ldr	x9, [sp, #8]
  405b08:	mov	x8, x0
  405b0c:	mov	w0, #0xffffffff            	// #-1
  405b10:	cbz	x9, 405b40 <get_unsigned@@Base+0x6c>
  405b14:	cmp	x9, x20
  405b18:	b.eq	405b40 <get_unsigned@@Base+0x6c>  // b.none
  405b1c:	ldrb	w9, [x9]
  405b20:	mov	w0, #0xffffffff            	// #-1
  405b24:	cbnz	w9, 405b40 <get_unsigned@@Base+0x6c>
  405b28:	lsr	x9, x8, #32
  405b2c:	cbnz	x9, 405b40 <get_unsigned@@Base+0x6c>
  405b30:	mov	w0, wzr
  405b34:	str	w8, [x19]
  405b38:	b	405b40 <get_unsigned@@Base+0x6c>
  405b3c:	mov	w0, #0xffffffff            	// #-1
  405b40:	ldp	x20, x19, [sp, #32]
  405b44:	ldp	x29, x30, [sp, #16]
  405b48:	add	sp, sp, #0x30
  405b4c:	ret

0000000000405b50 <get_time_rtt@@Base>:
  405b50:	str	d8, [sp, #-64]!
  405b54:	stp	x22, x21, [sp, #32]
  405b58:	mov	x21, x1
  405b5c:	stp	x20, x19, [sp, #48]
  405b60:	mov	x19, x0
  405b64:	mov	w1, #0x2e                  	// #46
  405b68:	mov	x0, x21
  405b6c:	stp	x29, x30, [sp, #16]
  405b70:	mov	x29, sp
  405b74:	mov	x20, x2
  405b78:	bl	404f70 <strchr@plt>
  405b7c:	add	x1, x29, #0x8
  405b80:	cbz	x0, 405bd0 <get_time_rtt@@Base+0x80>
  405b84:	mov	x0, x21
  405b88:	bl	404c60 <strtod@plt>
  405b8c:	fcmp	d0, #0.0
  405b90:	b.mi	405ca8 <get_time_rtt@@Base+0x158>  // b.first
  405b94:	ldr	x8, [x29, #8]
  405b98:	mov	w0, #0xffffffff            	// #-1
  405b9c:	cbz	x8, 405cdc <get_time_rtt@@Base+0x18c>
  405ba0:	cmp	x8, x21
  405ba4:	b.eq	405cdc <get_time_rtt@@Base+0x18c>  // b.none
  405ba8:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  405bac:	mov	v8.16b, v0.16b
  405bb0:	fmov	d0, x8
  405bb4:	fcmp	d8, d0
  405bb8:	b.ne	405c10 <get_time_rtt@@Base+0xc0>  // b.any
  405bbc:	bl	4050c0 <__errno_location@plt>
  405bc0:	ldr	w8, [x0]
  405bc4:	cmp	w8, #0x22
  405bc8:	b.ne	405c10 <get_time_rtt@@Base+0xc0>  // b.any
  405bcc:	b	405ca8 <get_time_rtt@@Base+0x158>
  405bd0:	mov	x0, x21
  405bd4:	mov	w2, wzr
  405bd8:	bl	404c00 <strtoul@plt>
  405bdc:	ldr	x8, [x29, #8]
  405be0:	mov	x22, x0
  405be4:	mov	w0, #0xffffffff            	// #-1
  405be8:	cbz	x8, 405cdc <get_time_rtt@@Base+0x18c>
  405bec:	cmp	x8, x21
  405bf0:	b.eq	405cdc <get_time_rtt@@Base+0x18c>  // b.none
  405bf4:	cmn	x22, #0x1
  405bf8:	b.ne	405c0c <get_time_rtt@@Base+0xbc>  // b.any
  405bfc:	bl	4050c0 <__errno_location@plt>
  405c00:	ldr	w8, [x0]
  405c04:	cmp	w8, #0x22
  405c08:	b.eq	405ca8 <get_time_rtt@@Base+0x158>  // b.none
  405c0c:	ucvtf	d8, x22
  405c10:	ldr	x22, [x29, #8]
  405c14:	cmp	x22, x21
  405c18:	b.eq	405ca8 <get_time_rtt@@Base+0x158>  // b.none
  405c1c:	mov	w8, #0x1                   	// #1
  405c20:	str	w8, [x20]
  405c24:	ldrb	w8, [x22]
  405c28:	cbz	w8, 405cc0 <get_time_rtt@@Base+0x170>
  405c2c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405c30:	add	x1, x1, #0x79
  405c34:	mov	x0, x22
  405c38:	str	wzr, [x20]
  405c3c:	bl	404e10 <strcasecmp@plt>
  405c40:	cbz	w0, 405cb0 <get_time_rtt@@Base+0x160>
  405c44:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405c48:	add	x1, x1, #0x90
  405c4c:	mov	x0, x22
  405c50:	bl	404e10 <strcasecmp@plt>
  405c54:	cbz	w0, 405cb0 <get_time_rtt@@Base+0x160>
  405c58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405c5c:	add	x1, x1, #0x95
  405c60:	mov	x0, x22
  405c64:	bl	404e10 <strcasecmp@plt>
  405c68:	cbz	w0, 405cb0 <get_time_rtt@@Base+0x160>
  405c6c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405c70:	add	x1, x1, #0x415
  405c74:	mov	x0, x22
  405c78:	bl	404e10 <strcasecmp@plt>
  405c7c:	cbz	w0, 405cc0 <get_time_rtt@@Base+0x170>
  405c80:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405c84:	add	x1, x1, #0x8f
  405c88:	mov	x0, x22
  405c8c:	bl	404e10 <strcasecmp@plt>
  405c90:	cbz	w0, 405cc0 <get_time_rtt@@Base+0x170>
  405c94:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  405c98:	add	x1, x1, #0x94
  405c9c:	mov	x0, x22
  405ca0:	bl	404e10 <strcasecmp@plt>
  405ca4:	cbz	w0, 405cc0 <get_time_rtt@@Base+0x170>
  405ca8:	mov	w0, #0xffffffff            	// #-1
  405cac:	b	405cdc <get_time_rtt@@Base+0x18c>
  405cb0:	mov	x8, #0x400000000000        	// #70368744177664
  405cb4:	movk	x8, #0x408f, lsl #48
  405cb8:	fmov	d0, x8
  405cbc:	fmul	d8, d8, d0
  405cc0:	fcvtzu	w8, d8
  405cc4:	ucvtf	d0, w8
  405cc8:	fcmp	d8, d0
  405ccc:	cset	w9, gt
  405cd0:	add	w8, w9, w8
  405cd4:	mov	w0, wzr
  405cd8:	str	w8, [x19]
  405cdc:	ldp	x20, x19, [sp, #48]
  405ce0:	ldp	x22, x21, [sp, #32]
  405ce4:	ldp	x29, x30, [sp, #16]
  405ce8:	ldr	d8, [sp], #64
  405cec:	ret

0000000000405cf0 <get_u64@@Base>:
  405cf0:	stp	x29, x30, [sp, #-48]!
  405cf4:	str	x21, [sp, #16]
  405cf8:	stp	x20, x19, [sp, #32]
  405cfc:	mov	x29, sp
  405d00:	cbz	x1, 405d40 <get_u64@@Base+0x50>
  405d04:	ldrb	w8, [x1]
  405d08:	mov	x21, x1
  405d0c:	cbz	w8, 405d40 <get_u64@@Base+0x50>
  405d10:	mov	x19, x0
  405d14:	add	x1, x29, #0x18
  405d18:	mov	x0, x21
  405d1c:	bl	404f80 <strtoull@plt>
  405d20:	ldr	x8, [x29, #24]
  405d24:	mov	x20, x0
  405d28:	mov	w0, #0xffffffff            	// #-1
  405d2c:	cbz	x8, 405d44 <get_u64@@Base+0x54>
  405d30:	cmp	x8, x21
  405d34:	b.eq	405d44 <get_u64@@Base+0x54>  // b.none
  405d38:	ldrb	w8, [x8]
  405d3c:	cbz	w8, 405d54 <get_u64@@Base+0x64>
  405d40:	mov	w0, #0xffffffff            	// #-1
  405d44:	ldp	x20, x19, [sp, #32]
  405d48:	ldr	x21, [sp, #16]
  405d4c:	ldp	x29, x30, [sp], #48
  405d50:	ret
  405d54:	cmn	x20, #0x1
  405d58:	b.ne	405d6c <get_u64@@Base+0x7c>  // b.any
  405d5c:	bl	4050c0 <__errno_location@plt>
  405d60:	ldr	w8, [x0]
  405d64:	cmp	w8, #0x22
  405d68:	b.eq	405d40 <get_u64@@Base+0x50>  // b.none
  405d6c:	mov	w0, wzr
  405d70:	str	x20, [x19]
  405d74:	b	405d44 <get_u64@@Base+0x54>

0000000000405d78 <get_u32@@Base>:
  405d78:	sub	sp, sp, #0x30
  405d7c:	stp	x29, x30, [sp, #16]
  405d80:	stp	x20, x19, [sp, #32]
  405d84:	add	x29, sp, #0x10
  405d88:	cbz	x1, 405de0 <get_u32@@Base+0x68>
  405d8c:	ldrb	w8, [x1]
  405d90:	mov	x20, x1
  405d94:	cbz	w8, 405de0 <get_u32@@Base+0x68>
  405d98:	mov	x19, x0
  405d9c:	add	x1, sp, #0x8
  405da0:	mov	x0, x20
  405da4:	bl	404c00 <strtoul@plt>
  405da8:	ldr	x9, [sp, #8]
  405dac:	mov	x8, x0
  405db0:	mov	w0, #0xffffffff            	// #-1
  405db4:	cbz	x9, 405de4 <get_u32@@Base+0x6c>
  405db8:	cmp	x9, x20
  405dbc:	b.eq	405de4 <get_u32@@Base+0x6c>  // b.none
  405dc0:	ldrb	w9, [x9]
  405dc4:	mov	w0, #0xffffffff            	// #-1
  405dc8:	cbnz	w9, 405de4 <get_u32@@Base+0x6c>
  405dcc:	lsr	x9, x8, #32
  405dd0:	cbnz	x9, 405de4 <get_u32@@Base+0x6c>
  405dd4:	mov	w0, wzr
  405dd8:	str	w8, [x19]
  405ddc:	b	405de4 <get_u32@@Base+0x6c>
  405de0:	mov	w0, #0xffffffff            	// #-1
  405de4:	ldp	x20, x19, [sp, #32]
  405de8:	ldp	x29, x30, [sp, #16]
  405dec:	add	sp, sp, #0x30
  405df0:	ret

0000000000405df4 <get_u16@@Base>:
  405df4:	sub	sp, sp, #0x30
  405df8:	stp	x29, x30, [sp, #16]
  405dfc:	stp	x20, x19, [sp, #32]
  405e00:	add	x29, sp, #0x10
  405e04:	cbz	x1, 405e5c <get_u16@@Base+0x68>
  405e08:	ldrb	w8, [x1]
  405e0c:	mov	x20, x1
  405e10:	cbz	w8, 405e5c <get_u16@@Base+0x68>
  405e14:	mov	x19, x0
  405e18:	add	x1, sp, #0x8
  405e1c:	mov	x0, x20
  405e20:	bl	404c00 <strtoul@plt>
  405e24:	ldr	x9, [sp, #8]
  405e28:	mov	x8, x0
  405e2c:	mov	w0, #0xffffffff            	// #-1
  405e30:	cbz	x9, 405e60 <get_u16@@Base+0x6c>
  405e34:	cmp	x9, x20
  405e38:	b.eq	405e60 <get_u16@@Base+0x6c>  // b.none
  405e3c:	ldrb	w9, [x9]
  405e40:	mov	w0, #0xffffffff            	// #-1
  405e44:	cbnz	w9, 405e60 <get_u16@@Base+0x6c>
  405e48:	lsr	x9, x8, #16
  405e4c:	cbnz	x9, 405e60 <get_u16@@Base+0x6c>
  405e50:	mov	w0, wzr
  405e54:	strh	w8, [x19]
  405e58:	b	405e60 <get_u16@@Base+0x6c>
  405e5c:	mov	w0, #0xffffffff            	// #-1
  405e60:	ldp	x20, x19, [sp, #32]
  405e64:	ldp	x29, x30, [sp, #16]
  405e68:	add	sp, sp, #0x30
  405e6c:	ret

0000000000405e70 <get_u8@@Base>:
  405e70:	sub	sp, sp, #0x30
  405e74:	stp	x29, x30, [sp, #16]
  405e78:	stp	x20, x19, [sp, #32]
  405e7c:	add	x29, sp, #0x10
  405e80:	cbz	x1, 405ed8 <get_u8@@Base+0x68>
  405e84:	ldrb	w8, [x1]
  405e88:	mov	x20, x1
  405e8c:	cbz	w8, 405ed8 <get_u8@@Base+0x68>
  405e90:	mov	x19, x0
  405e94:	add	x1, sp, #0x8
  405e98:	mov	x0, x20
  405e9c:	bl	404c00 <strtoul@plt>
  405ea0:	ldr	x9, [sp, #8]
  405ea4:	mov	x8, x0
  405ea8:	mov	w0, #0xffffffff            	// #-1
  405eac:	cbz	x9, 405edc <get_u8@@Base+0x6c>
  405eb0:	cmp	x9, x20
  405eb4:	b.eq	405edc <get_u8@@Base+0x6c>  // b.none
  405eb8:	ldrb	w9, [x9]
  405ebc:	mov	w0, #0xffffffff            	// #-1
  405ec0:	cbnz	w9, 405edc <get_u8@@Base+0x6c>
  405ec4:	cmp	x8, #0xff
  405ec8:	b.hi	405edc <get_u8@@Base+0x6c>  // b.pmore
  405ecc:	mov	w0, wzr
  405ed0:	strb	w8, [x19]
  405ed4:	b	405edc <get_u8@@Base+0x6c>
  405ed8:	mov	w0, #0xffffffff            	// #-1
  405edc:	ldp	x20, x19, [sp, #32]
  405ee0:	ldp	x29, x30, [sp, #16]
  405ee4:	add	sp, sp, #0x30
  405ee8:	ret

0000000000405eec <get_s64@@Base>:
  405eec:	sub	sp, sp, #0x40
  405ef0:	stp	x29, x30, [sp, #16]
  405ef4:	stp	x22, x21, [sp, #32]
  405ef8:	stp	x20, x19, [sp, #48]
  405efc:	add	x29, sp, #0x10
  405f00:	mov	w22, w2
  405f04:	mov	x21, x1
  405f08:	mov	x19, x0
  405f0c:	bl	4050c0 <__errno_location@plt>
  405f10:	str	wzr, [x0]
  405f14:	cbz	x21, 405f54 <get_s64@@Base+0x68>
  405f18:	ldrb	w8, [x21]
  405f1c:	cbz	w8, 405f54 <get_s64@@Base+0x68>
  405f20:	mov	x20, x0
  405f24:	add	x1, sp, #0x8
  405f28:	mov	x0, x21
  405f2c:	mov	w2, w22
  405f30:	bl	404c50 <strtoll@plt>
  405f34:	ldr	x9, [sp, #8]
  405f38:	mov	x8, x0
  405f3c:	mov	w0, #0xffffffff            	// #-1
  405f40:	cbz	x9, 405f58 <get_s64@@Base+0x6c>
  405f44:	cmp	x9, x21
  405f48:	b.eq	405f58 <get_s64@@Base+0x6c>  // b.none
  405f4c:	ldrb	w9, [x9]
  405f50:	cbz	w9, 405f6c <get_s64@@Base+0x80>
  405f54:	mov	w0, #0xffffffff            	// #-1
  405f58:	ldp	x20, x19, [sp, #48]
  405f5c:	ldp	x22, x21, [sp, #32]
  405f60:	ldp	x29, x30, [sp, #16]
  405f64:	add	sp, sp, #0x40
  405f68:	ret
  405f6c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  405f70:	add	x9, x8, x9
  405f74:	cmp	x9, #0x1
  405f78:	b.hi	405f88 <get_s64@@Base+0x9c>  // b.pmore
  405f7c:	ldr	w9, [x20]
  405f80:	cmp	w9, #0x22
  405f84:	b.eq	405f54 <get_s64@@Base+0x68>  // b.none
  405f88:	mov	w0, wzr
  405f8c:	str	x8, [x19]
  405f90:	b	405f58 <get_s64@@Base+0x6c>

0000000000405f94 <get_s32@@Base>:
  405f94:	sub	sp, sp, #0x40
  405f98:	stp	x29, x30, [sp, #16]
  405f9c:	stp	x22, x21, [sp, #32]
  405fa0:	stp	x20, x19, [sp, #48]
  405fa4:	add	x29, sp, #0x10
  405fa8:	mov	w22, w2
  405fac:	mov	x21, x1
  405fb0:	mov	x19, x0
  405fb4:	bl	4050c0 <__errno_location@plt>
  405fb8:	str	wzr, [x0]
  405fbc:	cbz	x21, 405ffc <get_s32@@Base+0x68>
  405fc0:	ldrb	w8, [x21]
  405fc4:	cbz	w8, 405ffc <get_s32@@Base+0x68>
  405fc8:	mov	x20, x0
  405fcc:	add	x1, sp, #0x8
  405fd0:	mov	x0, x21
  405fd4:	mov	w2, w22
  405fd8:	bl	404ee0 <strtol@plt>
  405fdc:	ldr	x9, [sp, #8]
  405fe0:	mov	x8, x0
  405fe4:	mov	w0, #0xffffffff            	// #-1
  405fe8:	cbz	x9, 406000 <get_s32@@Base+0x6c>
  405fec:	cmp	x9, x21
  405ff0:	b.eq	406000 <get_s32@@Base+0x6c>  // b.none
  405ff4:	ldrb	w9, [x9]
  405ff8:	cbz	w9, 406014 <get_s32@@Base+0x80>
  405ffc:	mov	w0, #0xffffffff            	// #-1
  406000:	ldp	x20, x19, [sp, #48]
  406004:	ldp	x22, x21, [sp, #32]
  406008:	ldp	x29, x30, [sp, #16]
  40600c:	add	sp, sp, #0x40
  406010:	ret
  406014:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  406018:	add	x9, x8, x9
  40601c:	cmp	x9, #0x1
  406020:	b.hi	406030 <get_s32@@Base+0x9c>  // b.pmore
  406024:	ldr	w9, [x20]
  406028:	cmp	w9, #0x22
  40602c:	b.eq	405ffc <get_s32@@Base+0x68>  // b.none
  406030:	cmp	x8, w8, sxtw
  406034:	b.ne	405ffc <get_s32@@Base+0x68>  // b.any
  406038:	mov	w0, wzr
  40603c:	str	w8, [x19]
  406040:	b	406000 <get_s32@@Base+0x6c>

0000000000406044 <get_be64@@Base>:
  406044:	sub	sp, sp, #0x40
  406048:	stp	x20, x19, [sp, #48]
  40604c:	mov	x19, x0
  406050:	add	x0, sp, #0x8
  406054:	stp	x29, x30, [sp, #16]
  406058:	stp	x22, x21, [sp, #32]
  40605c:	add	x29, sp, #0x10
  406060:	bl	405cf0 <get_u64@@Base>
  406064:	mov	w20, w0
  406068:	cbnz	w0, 4060a0 <get_be64@@Base+0x5c>
  40606c:	mov	w0, #0x1                   	// #1
  406070:	bl	405acc <mask2bits@@Base+0x40>
  406074:	ldr	x21, [sp, #8]
  406078:	cmp	w0, #0x1
  40607c:	b.eq	40609c <get_be64@@Base+0x58>  // b.none
  406080:	mov	w0, w21
  406084:	bl	405acc <mask2bits@@Base+0x40>
  406088:	mov	w22, w0
  40608c:	lsr	x0, x21, #32
  406090:	bl	405acc <mask2bits@@Base+0x40>
  406094:	mov	w21, w0
  406098:	bfi	x21, x22, #32, #32
  40609c:	str	x21, [x19]
  4060a0:	mov	w0, w20
  4060a4:	ldp	x20, x19, [sp, #48]
  4060a8:	ldp	x22, x21, [sp, #32]
  4060ac:	ldp	x29, x30, [sp, #16]
  4060b0:	add	sp, sp, #0x40
  4060b4:	ret

00000000004060b8 <get_be32@@Base>:
  4060b8:	sub	sp, sp, #0x30
  4060bc:	stp	x29, x30, [sp, #16]
  4060c0:	add	x29, sp, #0x10
  4060c4:	stp	x20, x19, [sp, #32]
  4060c8:	mov	x19, x0
  4060cc:	sub	x0, x29, #0x4
  4060d0:	bl	405d78 <get_u32@@Base>
  4060d4:	mov	w20, w0
  4060d8:	cbnz	w0, 4060e8 <get_be32@@Base+0x30>
  4060dc:	ldur	w0, [x29, #-4]
  4060e0:	bl	405acc <mask2bits@@Base+0x40>
  4060e4:	str	w0, [x19]
  4060e8:	mov	w0, w20
  4060ec:	ldp	x20, x19, [sp, #32]
  4060f0:	ldp	x29, x30, [sp, #16]
  4060f4:	add	sp, sp, #0x30
  4060f8:	ret

00000000004060fc <get_be16@@Base>:
  4060fc:	sub	sp, sp, #0x30
  406100:	stp	x29, x30, [sp, #16]
  406104:	add	x29, sp, #0x10
  406108:	stp	x20, x19, [sp, #32]
  40610c:	mov	x19, x0
  406110:	sub	x0, x29, #0x4
  406114:	bl	405df4 <get_u16@@Base>
  406118:	mov	w20, w0
  40611c:	cbnz	w0, 40612c <get_be16@@Base+0x30>
  406120:	ldurh	w0, [x29, #-4]
  406124:	bl	406140 <get_be16@@Base+0x44>
  406128:	strh	w0, [x19]
  40612c:	mov	w0, w20
  406130:	ldp	x20, x19, [sp, #32]
  406134:	ldp	x29, x30, [sp, #16]
  406138:	add	sp, sp, #0x30
  40613c:	ret
  406140:	rev	w8, w0
  406144:	lsr	w0, w8, #16
  406148:	ret

000000000040614c <get_addr64@@Base>:
  40614c:	sub	sp, sp, #0x50
  406150:	stp	x29, x30, [sp, #16]
  406154:	add	x29, sp, #0x10
  406158:	stp	x22, x21, [sp, #48]
  40615c:	stp	x20, x19, [sp, #64]
  406160:	mov	x20, x1
  406164:	mov	x19, x0
  406168:	mov	x21, xzr
  40616c:	add	x22, x29, #0x18
  406170:	str	x23, [sp, #32]
  406174:	add	x1, sp, #0x8
  406178:	mov	w2, #0x10                  	// #16
  40617c:	mov	x0, x20
  406180:	bl	404c00 <strtoul@plt>
  406184:	lsr	x9, x0, #16
  406188:	mov	w8, #0x1                   	// #1
  40618c:	cbnz	x9, 4061cc <get_addr64@@Base+0x80>
  406190:	ldr	x23, [sp, #8]
  406194:	cmp	x23, x20
  406198:	b.eq	4061cc <get_addr64@@Base+0x80>  // b.none
  40619c:	bl	406140 <get_be16@@Base+0x44>
  4061a0:	strh	w0, [x22, x21]
  4061a4:	ldrb	w8, [x23]
  4061a8:	cbz	w8, 4061e0 <get_addr64@@Base+0x94>
  4061ac:	cmp	x21, #0x6
  4061b0:	cset	w9, ne  // ne = any
  4061b4:	cmp	w8, #0x3a
  4061b8:	cset	w8, eq  // eq = none
  4061bc:	and	w10, w9, w8
  4061c0:	tst	w9, w8
  4061c4:	csinc	x20, x20, x23, eq  // eq = none
  4061c8:	eor	w8, w10, #0x1
  4061cc:	cbnz	w8, 4061e8 <get_addr64@@Base+0x9c>
  4061d0:	add	x21, x21, #0x2
  4061d4:	cmp	x21, #0x8
  4061d8:	b.ne	406174 <get_addr64@@Base+0x28>  // b.any
  4061dc:	b	4061f0 <get_addr64@@Base+0xa4>
  4061e0:	mov	w8, #0x2                   	// #2
  4061e4:	cbz	w8, 4061d0 <get_addr64@@Base+0x84>
  4061e8:	cmp	w8, #0x2
  4061ec:	b.ne	406200 <get_addr64@@Base+0xb4>  // b.any
  4061f0:	ldr	x8, [x29, #24]
  4061f4:	mov	w0, #0x1                   	// #1
  4061f8:	str	x8, [x19]
  4061fc:	b	406204 <get_addr64@@Base+0xb8>
  406200:	mov	w0, #0xffffffff            	// #-1
  406204:	ldp	x20, x19, [sp, #64]
  406208:	ldp	x22, x21, [sp, #48]
  40620c:	ldr	x23, [sp, #32]
  406210:	ldp	x29, x30, [sp, #16]
  406214:	add	sp, sp, #0x50
  406218:	ret

000000000040621c <get_addr_1@@Base>:
  40621c:	stp	x29, x30, [sp, #-32]!
  406220:	str	x19, [sp, #16]
  406224:	mov	x29, sp
  406228:	mov	x19, x0
  40622c:	bl	40624c <get_addr_1@@Base+0x30>
  406230:	cbnz	w0, 406240 <get_addr_1@@Base+0x24>
  406234:	mov	x0, x19
  406238:	bl	406460 <get_addr_1@@Base+0x244>
  40623c:	mov	w0, wzr
  406240:	ldr	x19, [sp, #16]
  406244:	ldp	x29, x30, [sp], #32
  406248:	ret
  40624c:	stp	x29, x30, [sp, #-48]!
  406250:	stp	x20, x19, [sp, #32]
  406254:	mov	x20, x1
  406258:	movi	v0.2d, #0x0
  40625c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406260:	str	x21, [sp, #16]
  406264:	mov	x19, x0
  406268:	str	xzr, [x0, #256]
  40626c:	stp	q0, q0, [x0, #224]
  406270:	stp	q0, q0, [x0, #192]
  406274:	stp	q0, q0, [x0, #160]
  406278:	stp	q0, q0, [x0, #128]
  40627c:	stp	q0, q0, [x0, #96]
  406280:	stp	q0, q0, [x0, #64]
  406284:	stp	q0, q0, [x0, #32]
  406288:	stp	q0, q0, [x0]
  40628c:	add	x1, x1, #0x3f5
  406290:	mov	x0, x20
  406294:	mov	x29, sp
  406298:	mov	w21, w2
  40629c:	bl	404ec0 <strcmp@plt>
  4062a0:	cbz	w0, 406328 <get_addr_1@@Base+0x10c>
  4062a4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  4062a8:	add	x1, x1, #0xe03
  4062ac:	mov	x0, x20
  4062b0:	bl	404ec0 <strcmp@plt>
  4062b4:	cbz	w0, 406308 <get_addr_1@@Base+0xec>
  4062b8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4062bc:	add	x1, x1, #0x3fd
  4062c0:	mov	x0, x20
  4062c4:	bl	404ec0 <strcmp@plt>
  4062c8:	cbz	w0, 406308 <get_addr_1@@Base+0xec>
  4062cc:	cmp	w21, #0x11
  4062d0:	b.ne	406378 <get_addr_1@@Base+0x15c>  // b.any
  4062d4:	add	x0, x19, #0x8
  4062d8:	mov	w1, #0x100                 	// #256
  4062dc:	mov	x2, x20
  4062e0:	bl	408ed8 <ll_addr_a2n@@Base>
  4062e4:	tbnz	w0, #31, 406334 <get_addr_1@@Base+0x118>
  4062e8:	mov	w8, w0
  4062ec:	mov	w9, #0x11                  	// #17
  4062f0:	strh	w8, [x19, #2]
  4062f4:	lsl	w8, w8, #3
  4062f8:	mov	w0, wzr
  4062fc:	strh	w9, [x19, #6]
  406300:	strh	w8, [x19, #4]
  406304:	b	406368 <get_addr_1@@Base+0x14c>
  406308:	orr	w8, w21, #0x10
  40630c:	cmp	w8, #0x1c
  406310:	b.eq	406334 <get_addr_1@@Base+0x118>  // b.none
  406314:	mov	w0, wzr
  406318:	strh	w21, [x19, #6]
  40631c:	mov	w8, #0xfffe0000            	// #-131072
  406320:	stur	w8, [x19, #2]
  406324:	b	406368 <get_addr_1@@Base+0x14c>
  406328:	orr	w8, w21, #0x10
  40632c:	cmp	w8, #0x1c
  406330:	b.ne	40633c <get_addr_1@@Base+0x120>  // b.any
  406334:	mov	w0, #0xffffffff            	// #-1
  406338:	b	406368 <get_addr_1@@Base+0x14c>
  40633c:	and	w0, w21, #0xffff
  406340:	strh	w21, [x19, #6]
  406344:	bl	4070d8 <format_host_r@@Base+0xb4>
  406348:	ldrh	w9, [x19]
  40634c:	mov	w8, w0
  406350:	strh	w8, [x19, #2]
  406354:	mov	w8, #0xfffe                	// #65534
  406358:	strh	w8, [x19, #4]
  40635c:	orr	w8, w9, #0x1
  406360:	mov	w0, wzr
  406364:	strh	w8, [x19]
  406368:	ldp	x20, x19, [sp, #32]
  40636c:	ldr	x21, [sp, #16]
  406370:	ldp	x29, x30, [sp], #48
  406374:	ret
  406378:	mov	w1, #0x3a                  	// #58
  40637c:	mov	x0, x20
  406380:	bl	404f70 <strchr@plt>
  406384:	cbz	x0, 4063c0 <get_addr_1@@Base+0x1a4>
  406388:	mov	w8, #0xa                   	// #10
  40638c:	cmp	w21, #0xa
  406390:	strh	w8, [x19, #6]
  406394:	b.eq	40639c <get_addr_1@@Base+0x180>  // b.none
  406398:	cbnz	w21, 406334 <get_addr_1@@Base+0x118>
  40639c:	add	x2, x19, #0x8
  4063a0:	mov	w0, #0xa                   	// #10
  4063a4:	mov	x1, x20
  4063a8:	bl	404f40 <inet_pton@plt>
  4063ac:	cmp	w0, #0x1
  4063b0:	b.lt	406334 <get_addr_1@@Base+0x118>  // b.tstop
  4063b4:	mov	w0, wzr
  4063b8:	mov	w8, #0xffff0010            	// #-65520
  4063bc:	b	406320 <get_addr_1@@Base+0x104>
  4063c0:	cmp	w21, #0x1c
  4063c4:	b.ne	406428 <get_addr_1@@Base+0x20c>  // b.any
  4063c8:	add	x21, x19, #0x8
  4063cc:	mov	w8, #0x1c                  	// #28
  4063d0:	mov	w0, #0x1c                  	// #28
  4063d4:	mov	w3, #0x100                 	// #256
  4063d8:	mov	x1, x20
  4063dc:	mov	x2, x21
  4063e0:	strh	w8, [x19, #6]
  4063e4:	bl	409f40 <mpls_pton@@Base>
  4063e8:	cmp	w0, #0x1
  4063ec:	b.lt	406334 <get_addr_1@@Base+0x118>  // b.tstop
  4063f0:	mov	w8, #0x4                   	// #4
  4063f4:	mov	x20, xzr
  4063f8:	movk	w8, #0x14, lsl #16
  4063fc:	stur	w8, [x19, #2]
  406400:	cmp	x20, #0x40
  406404:	b.eq	406458 <get_addr_1@@Base+0x23c>  // b.none
  406408:	ldr	w0, [x21, x20, lsl #2]
  40640c:	bl	405acc <mask2bits@@Base+0x40>
  406410:	add	x20, x20, #0x1
  406414:	tbz	w0, #8, 406400 <get_addr_1@@Base+0x1e4>
  406418:	lsl	w8, w20, #2
  40641c:	mov	w0, wzr
  406420:	strh	w8, [x19, #2]
  406424:	b	406368 <get_addr_1@@Base+0x14c>
  406428:	mov	w8, #0x2                   	// #2
  40642c:	tst	w21, #0xfffffffd
  406430:	strh	w8, [x19, #6]
  406434:	b.ne	406334 <get_addr_1@@Base+0x118>  // b.any
  406438:	add	x0, x19, #0x8
  40643c:	mov	x1, x20
  406440:	bl	408348 <sprint_time64@@Base+0xdc>
  406444:	cmp	w0, #0x1
  406448:	b.lt	406334 <get_addr_1@@Base+0x118>  // b.tstop
  40644c:	mov	w0, wzr
  406450:	mov	w8, #0xffff0004            	// #-65532
  406454:	b	406320 <get_addr_1@@Base+0x104>
  406458:	mov	w0, wzr
  40645c:	b	406368 <get_addr_1@@Base+0x14c>
  406460:	stp	x29, x30, [sp, #-32]!
  406464:	ldrh	w8, [x0, #6]
  406468:	str	x19, [sp, #16]
  40646c:	mov	x19, x0
  406470:	mov	x29, sp
  406474:	cmp	w8, #0xa
  406478:	b.eq	4064ac <get_addr_1@@Base+0x290>  // b.none
  40647c:	cmp	w8, #0x2
  406480:	b.ne	4064f0 <get_addr_1@@Base+0x2d4>  // b.any
  406484:	ldr	w0, [x19, #8]
  406488:	cbz	w0, 4064e4 <get_addr_1@@Base+0x2c8>
  40648c:	bl	405acc <mask2bits@@Base+0x40>
  406490:	ldrh	w8, [x19]
  406494:	lsr	w9, w0, #28
  406498:	cmp	w9, #0xe
  40649c:	b.ne	4064dc <get_addr_1@@Base+0x2c0>  // b.any
  4064a0:	mov	w9, #0xa                   	// #10
  4064a4:	orr	w8, w8, w9
  4064a8:	b	4064ec <get_addr_1@@Base+0x2d0>
  4064ac:	ldr	w8, [x19, #8]
  4064b0:	cbnz	w8, 4064cc <get_addr_1@@Base+0x2b0>
  4064b4:	ldr	w8, [x19, #12]
  4064b8:	cbnz	w8, 4064cc <get_addr_1@@Base+0x2b0>
  4064bc:	ldr	w8, [x19, #16]
  4064c0:	cbnz	w8, 4064cc <get_addr_1@@Base+0x2b0>
  4064c4:	ldr	w8, [x19, #20]
  4064c8:	cbz	w8, 4064e4 <get_addr_1@@Base+0x2c8>
  4064cc:	ldrb	w9, [x19, #8]
  4064d0:	ldrh	w8, [x19]
  4064d4:	cmp	w9, #0xff
  4064d8:	b.eq	4064a0 <get_addr_1@@Base+0x284>  // b.none
  4064dc:	orr	w8, w8, #0x2
  4064e0:	b	4064ec <get_addr_1@@Base+0x2d0>
  4064e4:	ldrh	w8, [x19]
  4064e8:	orr	w8, w8, #0x6
  4064ec:	strh	w8, [x19]
  4064f0:	ldr	x19, [sp, #16]
  4064f4:	ldp	x29, x30, [sp], #32
  4064f8:	ret

00000000004064fc <af_bit_len@@Base>:
  4064fc:	sub	w8, w0, #0x2
  406500:	cmp	w8, #0x1a
  406504:	b.hi	40652c <af_bit_len@@Base+0x30>  // b.pmore
  406508:	adrp	x9, 40c000 <rtnl_listen@@Base+0x210>
  40650c:	add	x9, x9, #0xf6f
  406510:	adr	x10, 406524 <af_bit_len@@Base+0x28>
  406514:	ldrb	w11, [x9, x8]
  406518:	add	x10, x10, x11, lsl #2
  40651c:	mov	w0, #0x80                  	// #128
  406520:	br	x10
  406524:	mov	w0, #0x20                  	// #32
  406528:	ret
  40652c:	mov	w0, wzr
  406530:	ret
  406534:	mov	w0, #0x50                  	// #80
  406538:	ret
  40653c:	mov	w0, #0x10                  	// #16
  406540:	ret
  406544:	mov	w0, #0x14                  	// #20
  406548:	ret

000000000040654c <get_prefix_1@@Base>:
  40654c:	sub	sp, sp, #0x40
  406550:	stp	x22, x21, [sp, #32]
  406554:	mov	x22, x1
  406558:	stp	x20, x19, [sp, #48]
  40655c:	mov	x19, x0
  406560:	mov	w1, #0x2f                  	// #47
  406564:	mov	x0, x22
  406568:	stp	x29, x30, [sp, #16]
  40656c:	add	x29, sp, #0x10
  406570:	mov	w20, w2
  406574:	bl	404f70 <strchr@plt>
  406578:	mov	x21, x0
  40657c:	cbz	x0, 406584 <get_prefix_1@@Base+0x38>
  406580:	strb	wzr, [x21]
  406584:	mov	x0, x19
  406588:	mov	x1, x22
  40658c:	mov	w2, w20
  406590:	bl	40621c <get_addr_1@@Base>
  406594:	cbz	x21, 4065a0 <get_prefix_1@@Base+0x54>
  406598:	mov	w8, #0x2f                  	// #47
  40659c:	strb	w8, [x21]
  4065a0:	cbnz	w0, 40661c <get_prefix_1@@Base+0xd0>
  4065a4:	ldrh	w0, [x19, #6]
  4065a8:	bl	4064fc <af_bit_len@@Base>
  4065ac:	mov	w20, w0
  4065b0:	cbz	x21, 4065dc <get_prefix_1@@Base+0x90>
  4065b4:	ldrsh	w8, [x19, #4]
  4065b8:	cmn	w8, #0x2
  4065bc:	b.eq	4065d0 <get_prefix_1@@Base+0x84>  // b.none
  4065c0:	add	x1, x21, #0x1
  4065c4:	sub	x0, x29, #0x4
  4065c8:	bl	406630 <get_prefix_1@@Base+0xe4>
  4065cc:	cbz	w0, 406604 <get_prefix_1@@Base+0xb8>
  4065d0:	mov	w8, wzr
  4065d4:	tbz	w8, #0, 406618 <get_prefix_1@@Base+0xcc>
  4065d8:	b	4065ec <get_prefix_1@@Base+0xa0>
  4065dc:	ldrsh	w9, [x19, #4]
  4065e0:	mov	w8, wzr
  4065e4:	cmn	w9, #0x2
  4065e8:	csel	w20, wzr, w20, eq  // eq = none
  4065ec:	ldrh	w9, [x19]
  4065f0:	mov	w0, wzr
  4065f4:	strh	w20, [x19, #4]
  4065f8:	orr	w8, w9, w8
  4065fc:	strh	w8, [x19]
  406600:	b	40661c <get_prefix_1@@Base+0xd0>
  406604:	ldur	w9, [x29, #-4]
  406608:	cmp	w9, w20
  40660c:	cset	w8, ls  // ls = plast
  406610:	csel	w20, w20, w9, hi  // hi = pmore
  406614:	tbnz	w8, #0, 4065ec <get_prefix_1@@Base+0xa0>
  406618:	mov	w0, #0xffffffff            	// #-1
  40661c:	ldp	x20, x19, [sp, #48]
  406620:	ldp	x22, x21, [sp, #32]
  406624:	ldp	x29, x30, [sp, #16]
  406628:	add	sp, sp, #0x40
  40662c:	ret
  406630:	sub	sp, sp, #0x140
  406634:	mov	w2, wzr
  406638:	stp	x29, x30, [sp, #272]
  40663c:	str	x28, [sp, #288]
  406640:	stp	x20, x19, [sp, #304]
  406644:	add	x29, sp, #0x110
  406648:	mov	x20, x1
  40664c:	mov	x19, x0
  406650:	bl	405ad4 <get_unsigned@@Base>
  406654:	cbz	w0, 406698 <get_prefix_1@@Base+0x14c>
  406658:	add	x0, sp, #0x8
  40665c:	mov	w2, #0x2                   	// #2
  406660:	mov	x1, x20
  406664:	bl	40621c <get_addr_1@@Base>
  406668:	cbnz	w0, 406694 <get_prefix_1@@Base+0x148>
  40666c:	ldrh	w8, [sp, #14]
  406670:	cmp	w8, #0x2
  406674:	b.ne	406694 <get_prefix_1@@Base+0x148>  // b.any
  406678:	ldr	w0, [sp, #16]
  40667c:	bl	405a8c <mask2bits@@Base>
  406680:	tbnz	w0, #31, 406694 <get_prefix_1@@Base+0x148>
  406684:	mov	w8, w0
  406688:	mov	w0, wzr
  40668c:	str	w8, [x19]
  406690:	b	406698 <get_prefix_1@@Base+0x14c>
  406694:	mov	w0, #0xffffffff            	// #-1
  406698:	ldp	x20, x19, [sp, #304]
  40669c:	ldr	x28, [sp, #288]
  4066a0:	ldp	x29, x30, [sp, #272]
  4066a4:	add	sp, sp, #0x140
  4066a8:	ret

00000000004066ac <get_addr@@Base>:
  4066ac:	stp	x29, x30, [sp, #-48]!
  4066b0:	str	x21, [sp, #16]
  4066b4:	stp	x20, x19, [sp, #32]
  4066b8:	mov	x29, sp
  4066bc:	mov	w20, w2
  4066c0:	mov	x19, x1
  4066c4:	bl	40621c <get_addr_1@@Base>
  4066c8:	cbnz	w0, 4066dc <get_addr@@Base+0x30>
  4066cc:	ldp	x20, x19, [sp, #32]
  4066d0:	ldr	x21, [sp, #16]
  4066d4:	ldp	x29, x30, [sp], #48
  4066d8:	ret
  4066dc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4066e0:	ldr	x8, [x8, #3992]
  4066e4:	mov	w0, w20
  4066e8:	ldr	x21, [x8]
  4066ec:	bl	406710 <get_addr@@Base+0x64>
  4066f0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4066f4:	mov	x2, x0
  4066f8:	add	x1, x1, #0x9a
  4066fc:	mov	x0, x21
  406700:	mov	x3, x19
  406704:	bl	405100 <fprintf@plt>
  406708:	mov	w0, #0x1                   	// #1
  40670c:	bl	404c20 <exit@plt>
  406710:	cbz	w0, 406728 <get_addr@@Base+0x7c>
  406714:	stp	x29, x30, [sp, #-16]!
  406718:	mov	x29, sp
  40671c:	bl	406fb0 <family_name@@Base>
  406720:	ldp	x29, x30, [sp], #16
  406724:	ret
  406728:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40672c:	add	x0, x0, #0x401
  406730:	ret

0000000000406734 <get_addr_rta@@Base>:
  406734:	stp	x29, x30, [sp, #-16]!
  406738:	ldrh	w8, [x1], #4
  40673c:	mov	x29, sp
  406740:	sub	w8, w8, #0x6
  406744:	ror	w9, w8, #1
  406748:	cmp	w9, #0x7
  40674c:	mov	w8, #0xffffffff            	// #-1
  406750:	b.hi	406818 <get_addr_rta@@Base+0xe4>  // b.pmore
  406754:	adrp	x10, 40c000 <rtnl_listen@@Base+0x210>
  406758:	add	x10, x10, #0xf8a
  40675c:	adr	x11, 40676c <get_addr_rta@@Base+0x38>
  406760:	ldrb	w12, [x10, x9]
  406764:	add	x11, x11, x12, lsl #2
  406768:	br	x11
  40676c:	mov	w8, #0xc                   	// #12
  406770:	mov	w9, #0x2                   	// #2
  406774:	strh	w8, [x0, #6]
  406778:	strh	w9, [x0, #2]
  40677c:	ldrh	w8, [x1]
  406780:	strh	w8, [x0, #8]
  406784:	cbnz	w2, 4067f0 <get_addr_rta@@Base+0xbc>
  406788:	b	4067fc <get_addr_rta@@Base+0xc8>
  40678c:	mov	w8, #0x2                   	// #2
  406790:	mov	w9, #0x4                   	// #4
  406794:	strh	w8, [x0, #6]
  406798:	strh	w9, [x0, #2]
  40679c:	ldr	w8, [x1]
  4067a0:	str	w8, [x0, #8]
  4067a4:	cbnz	w2, 4067f0 <get_addr_rta@@Base+0xbc>
  4067a8:	b	4067fc <get_addr_rta@@Base+0xc8>
  4067ac:	mov	w8, #0x4                   	// #4
  4067b0:	mov	w9, #0xa                   	// #10
  4067b4:	strh	w8, [x0, #6]
  4067b8:	strh	w9, [x0, #2]
  4067bc:	ldrh	w8, [x1, #8]
  4067c0:	ldr	x9, [x1]
  4067c4:	strh	w8, [x0, #16]
  4067c8:	str	x9, [x0, #8]
  4067cc:	cbnz	w2, 4067f0 <get_addr_rta@@Base+0xbc>
  4067d0:	b	4067fc <get_addr_rta@@Base+0xc8>
  4067d4:	mov	w8, #0xa                   	// #10
  4067d8:	mov	w9, #0x10                  	// #16
  4067dc:	strh	w8, [x0, #6]
  4067e0:	strh	w9, [x0, #2]
  4067e4:	ldr	q0, [x1]
  4067e8:	stur	q0, [x0, #8]
  4067ec:	cbz	w2, 4067fc <get_addr_rta@@Base+0xc8>
  4067f0:	ldrh	w8, [x0, #6]
  4067f4:	cmp	w8, w2
  4067f8:	b.ne	406814 <get_addr_rta@@Base+0xe0>  // b.any
  4067fc:	mov	w8, #0xffff                	// #65535
  406800:	strh	w8, [x0, #4]
  406804:	strh	wzr, [x0]
  406808:	bl	406460 <get_addr_1@@Base+0x244>
  40680c:	mov	w8, wzr
  406810:	b	406818 <get_addr_rta@@Base+0xe4>
  406814:	mov	w8, #0xfffffffe            	// #-2
  406818:	mov	w0, w8
  40681c:	ldp	x29, x30, [sp], #16
  406820:	ret

0000000000406824 <get_prefix@@Base>:
  406824:	stp	x29, x30, [sp, #-48]!
  406828:	stp	x20, x19, [sp, #32]
  40682c:	mov	x19, x1
  406830:	cmp	w2, #0x11
  406834:	str	x21, [sp, #16]
  406838:	mov	x29, sp
  40683c:	b.eq	406860 <get_prefix@@Base+0x3c>  // b.none
  406840:	mov	x1, x19
  406844:	mov	w20, w2
  406848:	bl	40654c <get_prefix_1@@Base>
  40684c:	cbnz	w0, 406884 <get_prefix@@Base+0x60>
  406850:	ldp	x20, x19, [sp, #32]
  406854:	ldr	x21, [sp, #16]
  406858:	ldp	x29, x30, [sp], #48
  40685c:	ret
  406860:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406864:	ldr	x8, [x8, #3992]
  406868:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40686c:	add	x1, x1, #0xcb
  406870:	mov	x2, x19
  406874:	ldr	x0, [x8]
  406878:	bl	405100 <fprintf@plt>
  40687c:	mov	w0, #0x1                   	// #1
  406880:	bl	404c20 <exit@plt>
  406884:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406888:	ldr	x8, [x8, #3992]
  40688c:	mov	w0, w20
  406890:	ldr	x21, [x8]
  406894:	bl	406710 <get_addr@@Base+0x64>
  406898:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40689c:	mov	x2, x0
  4068a0:	add	x1, x1, #0x113
  4068a4:	mov	x0, x21
  4068a8:	mov	x3, x19
  4068ac:	bl	405100 <fprintf@plt>
  4068b0:	mov	w0, #0x1                   	// #1
  4068b4:	bl	404c20 <exit@plt>

00000000004068b8 <get_addr32@@Base>:
  4068b8:	sub	sp, sp, #0x130
  4068bc:	stp	x28, x19, [sp, #288]
  4068c0:	mov	x19, x0
  4068c4:	add	x0, sp, #0x8
  4068c8:	mov	w2, #0x2                   	// #2
  4068cc:	mov	x1, x19
  4068d0:	stp	x29, x30, [sp, #272]
  4068d4:	add	x29, sp, #0x110
  4068d8:	bl	40621c <get_addr_1@@Base>
  4068dc:	cbnz	w0, 4068f4 <get_addr32@@Base+0x3c>
  4068e0:	ldr	w0, [sp, #16]
  4068e4:	ldp	x28, x19, [sp, #288]
  4068e8:	ldp	x29, x30, [sp, #272]
  4068ec:	add	sp, sp, #0x130
  4068f0:	ret
  4068f4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4068f8:	ldr	x8, [x8, #3992]
  4068fc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406900:	add	x1, x1, #0x143
  406904:	mov	x2, x19
  406908:	ldr	x0, [x8]
  40690c:	bl	405100 <fprintf@plt>
  406910:	mov	w0, #0x1                   	// #1
  406914:	bl	404c20 <exit@plt>

0000000000406918 <incomplete_command@@Base>:
  406918:	stp	x29, x30, [sp, #-16]!
  40691c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406920:	ldr	x8, [x8, #3992]
  406924:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406928:	add	x0, x0, #0x176
  40692c:	mov	w1, #0x30                  	// #48
  406930:	ldr	x3, [x8]
  406934:	mov	w2, #0x1                   	// #1
  406938:	mov	x29, sp
  40693c:	bl	404f90 <fwrite@plt>
  406940:	mov	w0, #0xffffffff            	// #-1
  406944:	bl	404c20 <exit@plt>

0000000000406948 <missarg@@Base>:
  406948:	stp	x29, x30, [sp, #-16]!
  40694c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406950:	ldr	x8, [x8, #3992]
  406954:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406958:	mov	x2, x0
  40695c:	add	x1, x1, #0x1a7
  406960:	ldr	x8, [x8]
  406964:	mov	x29, sp
  406968:	mov	x0, x8
  40696c:	bl	405100 <fprintf@plt>
  406970:	mov	w0, #0xffffffff            	// #-1
  406974:	bl	404c20 <exit@plt>

0000000000406978 <invarg@@Base>:
  406978:	stp	x29, x30, [sp, #-16]!
  40697c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406980:	ldr	x8, [x8, #3992]
  406984:	mov	x2, x1
  406988:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40698c:	mov	x3, x0
  406990:	ldr	x8, [x8]
  406994:	add	x1, x1, #0x1c9
  406998:	mov	x29, sp
  40699c:	mov	x0, x8
  4069a0:	bl	405100 <fprintf@plt>
  4069a4:	mov	w0, #0xffffffff            	// #-1
  4069a8:	bl	404c20 <exit@plt>

00000000004069ac <duparg@@Base>:
  4069ac:	stp	x29, x30, [sp, #-16]!
  4069b0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4069b4:	ldr	x8, [x8, #3992]
  4069b8:	mov	x3, x1
  4069bc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4069c0:	mov	x2, x0
  4069c4:	ldr	x8, [x8]
  4069c8:	add	x1, x1, #0x1ec
  4069cc:	mov	x29, sp
  4069d0:	mov	x0, x8
  4069d4:	bl	405100 <fprintf@plt>
  4069d8:	mov	w0, #0xffffffff            	// #-1
  4069dc:	bl	404c20 <exit@plt>

00000000004069e0 <duparg2@@Base>:
  4069e0:	stp	x29, x30, [sp, #-16]!
  4069e4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4069e8:	ldr	x8, [x8, #3992]
  4069ec:	mov	x3, x1
  4069f0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4069f4:	mov	x2, x0
  4069f8:	ldr	x8, [x8]
  4069fc:	add	x1, x1, #0x21e
  406a00:	mov	x29, sp
  406a04:	mov	x0, x8
  406a08:	bl	405100 <fprintf@plt>
  406a0c:	mov	w0, #0xffffffff            	// #-1
  406a10:	bl	404c20 <exit@plt>

0000000000406a14 <nodev@@Base>:
  406a14:	stp	x29, x30, [sp, #-16]!
  406a18:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406a1c:	ldr	x8, [x8, #3992]
  406a20:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406a24:	mov	x2, x0
  406a28:	add	x1, x1, #0x256
  406a2c:	ldr	x8, [x8]
  406a30:	mov	x29, sp
  406a34:	mov	x0, x8
  406a38:	bl	405100 <fprintf@plt>
  406a3c:	mov	w0, #0xffffffff            	// #-1
  406a40:	ldp	x29, x30, [sp], #16
  406a44:	ret

0000000000406a48 <check_ifname@@Base>:
  406a48:	stp	x29, x30, [sp, #-32]!
  406a4c:	str	x19, [sp, #16]
  406a50:	mov	x29, sp
  406a54:	mov	x19, x0
  406a58:	bl	404c10 <strlen@plt>
  406a5c:	cmp	x0, #0xf
  406a60:	b.ls	406a6c <check_ifname@@Base+0x24>  // b.plast
  406a64:	mov	w0, #0xffffffff            	// #-1
  406a68:	b	406a74 <check_ifname@@Base+0x2c>
  406a6c:	mov	x0, x19
  406a70:	bl	406a80 <check_ifname@@Base+0x38>
  406a74:	ldr	x19, [sp, #16]
  406a78:	ldp	x29, x30, [sp], #32
  406a7c:	ret
  406a80:	stp	x29, x30, [sp, #-32]!
  406a84:	stp	x20, x19, [sp, #16]
  406a88:	ldrb	w8, [x0]
  406a8c:	mov	x29, sp
  406a90:	cbz	w8, 406abc <check_ifname@@Base+0x74>
  406a94:	mov	x19, x0
  406a98:	ldrb	w20, [x19]
  406a9c:	cbz	w20, 406acc <check_ifname@@Base+0x84>
  406aa0:	cmp	w20, #0x2f
  406aa4:	b.eq	406abc <check_ifname@@Base+0x74>  // b.none
  406aa8:	bl	404ed0 <__ctype_b_loc@plt>
  406aac:	ldr	x8, [x0]
  406ab0:	add	x19, x19, #0x1
  406ab4:	ldrh	w8, [x8, x20, lsl #1]
  406ab8:	tbz	w8, #13, 406a98 <check_ifname@@Base+0x50>
  406abc:	mov	w0, #0xffffffff            	// #-1
  406ac0:	ldp	x20, x19, [sp, #16]
  406ac4:	ldp	x29, x30, [sp], #32
  406ac8:	ret
  406acc:	mov	w0, wzr
  406ad0:	b	406ac0 <check_ifname@@Base+0x78>

0000000000406ad4 <check_altifname@@Base>:
  406ad4:	stp	x29, x30, [sp, #-16]!
  406ad8:	mov	x29, sp
  406adc:	bl	406a80 <check_ifname@@Base+0x38>
  406ae0:	ldp	x29, x30, [sp], #16
  406ae4:	ret

0000000000406ae8 <get_ifname@@Base>:
  406ae8:	stp	x29, x30, [sp, #-48]!
  406aec:	stp	x20, x19, [sp, #32]
  406af0:	mov	x20, x0
  406af4:	mov	x0, x1
  406af8:	str	x21, [sp, #16]
  406afc:	mov	x29, sp
  406b00:	mov	x19, x1
  406b04:	bl	406a48 <check_ifname@@Base>
  406b08:	mov	w21, w0
  406b0c:	cbnz	w0, 406b20 <get_ifname@@Base+0x38>
  406b10:	mov	w2, #0x10                  	// #16
  406b14:	mov	x0, x20
  406b18:	mov	x1, x19
  406b1c:	bl	405070 <strncpy@plt>
  406b20:	mov	w0, w21
  406b24:	ldp	x20, x19, [sp, #32]
  406b28:	ldr	x21, [sp, #16]
  406b2c:	ldp	x29, x30, [sp], #48
  406b30:	ret

0000000000406b34 <get_ifname_rta@@Base>:
  406b34:	stp	x29, x30, [sp, #-32]!
  406b38:	str	x19, [sp, #16]
  406b3c:	mov	x29, sp
  406b40:	cbz	x1, 406b68 <get_ifname_rta@@Base+0x34>
  406b44:	mov	x0, x1
  406b48:	bl	406b94 <get_ifname_rta@@Base+0x60>
  406b4c:	mov	x19, x0
  406b50:	bl	406a48 <check_ifname@@Base>
  406b54:	cmp	w0, #0x0
  406b58:	csel	x0, x19, xzr, eq  // eq = none
  406b5c:	ldr	x19, [sp, #16]
  406b60:	ldp	x29, x30, [sp], #32
  406b64:	ret
  406b68:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  406b6c:	ldr	x8, [x8, #3992]
  406b70:	mov	w19, w0
  406b74:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406b78:	add	x1, x1, #0x26f
  406b7c:	ldr	x0, [x8]
  406b80:	mov	w2, w19
  406b84:	bl	405100 <fprintf@plt>
  406b88:	mov	w0, w19
  406b8c:	bl	4085f8 <ll_idx_n2a@@Base>
  406b90:	b	406b4c <get_ifname_rta@@Base+0x18>
  406b94:	add	x0, x0, #0x4
  406b98:	ret

0000000000406b9c <matches@@Base>:
  406b9c:	ldrb	w8, [x0]
  406ba0:	cbz	w8, 406bd8 <matches@@Base+0x3c>
  406ba4:	ldrb	w9, [x1]
  406ba8:	cbz	w9, 406bc8 <matches@@Base+0x2c>
  406bac:	add	x8, x1, #0x1
  406bb0:	ldrb	w10, [x0]
  406bb4:	cmp	w10, w9, uxtb
  406bb8:	b.ne	406bc8 <matches@@Base+0x2c>  // b.any
  406bbc:	ldrb	w9, [x8], #1
  406bc0:	add	x0, x0, #0x1
  406bc4:	cbnz	w9, 406bb0 <matches@@Base+0x14>
  406bc8:	ldrb	w8, [x0]
  406bcc:	cmp	w8, #0x0
  406bd0:	cset	w0, ne  // ne = any
  406bd4:	ret
  406bd8:	mov	w0, #0x1                   	// #1
  406bdc:	ret

0000000000406be0 <inet_addr_match@@Base>:
  406be0:	stp	x29, x30, [sp, #-48]!
  406be4:	stp	x22, x21, [sp, #16]
  406be8:	stp	x20, x19, [sp, #32]
  406bec:	mov	w21, w2
  406bf0:	mov	x19, x1
  406bf4:	asr	w22, w2, #5
  406bf8:	mov	x20, x0
  406bfc:	mov	x29, sp
  406c00:	cbz	w22, 406c24 <inet_addr_match@@Base+0x44>
  406c04:	lsl	w8, w22, #2
  406c08:	add	x1, x19, #0x8
  406c0c:	add	x0, x20, #0x8
  406c10:	sxtw	x2, w8
  406c14:	bl	404e00 <bcmp@plt>
  406c18:	cbz	w0, 406c24 <inet_addr_match@@Base+0x44>
  406c1c:	mov	w0, #0xffffffff            	// #-1
  406c20:	b	406c68 <inet_addr_match@@Base+0x88>
  406c24:	and	w8, w21, #0x1f
  406c28:	cbz	w8, 406c64 <inet_addr_match@@Base+0x84>
  406c2c:	sbfiz	x9, x22, #2, #32
  406c30:	add	x10, x20, x9
  406c34:	add	x9, x19, x9
  406c38:	ldr	w19, [x10, #8]
  406c3c:	ldr	w20, [x9, #8]
  406c40:	neg	w8, w8
  406c44:	mov	w9, #0xffffffff            	// #-1
  406c48:	lsl	w0, w9, w8
  406c4c:	bl	405acc <mask2bits@@Base+0x40>
  406c50:	eor	w8, w20, w19
  406c54:	tst	w8, w0
  406c58:	b.eq	406c64 <inet_addr_match@@Base+0x84>  // b.none
  406c5c:	mov	w0, #0x1                   	// #1
  406c60:	b	406c68 <inet_addr_match@@Base+0x88>
  406c64:	mov	w0, wzr
  406c68:	ldp	x20, x19, [sp, #32]
  406c6c:	ldp	x22, x21, [sp, #16]
  406c70:	ldp	x29, x30, [sp], #48
  406c74:	ret

0000000000406c78 <inet_addr_match_rta@@Base>:
  406c78:	sub	sp, sp, #0x130
  406c7c:	stp	x29, x30, [sp, #272]
  406c80:	stp	x28, x19, [sp, #288]
  406c84:	add	x29, sp, #0x110
  406c88:	cbz	x1, 406cb8 <inet_addr_match_rta@@Base+0x40>
  406c8c:	ldrh	w2, [x0, #6]
  406c90:	mov	x19, x0
  406c94:	cbz	w2, 406cb8 <inet_addr_match_rta@@Base+0x40>
  406c98:	ldrsh	w8, [x19, #4]
  406c9c:	cmp	w8, #0x1
  406ca0:	b.lt	406cb8 <inet_addr_match_rta@@Base+0x40>  // b.tstop
  406ca4:	add	x0, sp, #0x8
  406ca8:	bl	406734 <get_addr_rta@@Base>
  406cac:	cbz	w0, 406ccc <inet_addr_match_rta@@Base+0x54>
  406cb0:	mov	w0, #0xffffffff            	// #-1
  406cb4:	b	406cbc <inet_addr_match_rta@@Base+0x44>
  406cb8:	mov	w0, wzr
  406cbc:	ldp	x28, x19, [sp, #288]
  406cc0:	ldp	x29, x30, [sp, #272]
  406cc4:	add	sp, sp, #0x130
  406cc8:	ret
  406ccc:	ldrsh	w2, [x19, #4]
  406cd0:	add	x0, sp, #0x8
  406cd4:	mov	x1, x19
  406cd8:	bl	406be0 <inet_addr_match@@Base>
  406cdc:	b	406cbc <inet_addr_match_rta@@Base+0x44>

0000000000406ce0 <__get_hz@@Base>:
  406ce0:	stp	x29, x30, [sp, #-48]!
  406ce4:	str	x28, [sp, #16]
  406ce8:	stp	x20, x19, [sp, #32]
  406cec:	mov	x29, sp
  406cf0:	sub	sp, sp, #0x400
  406cf4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406cf8:	add	x0, x0, #0x29b
  406cfc:	bl	4050d0 <getenv@plt>
  406d00:	cbz	x0, 406d10 <__get_hz@@Base+0x30>
  406d04:	bl	404d40 <atoi@plt>
  406d08:	mov	w20, w0
  406d0c:	b	406dac <__get_hz@@Base+0xcc>
  406d10:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406d14:	add	x0, x0, #0x29e
  406d18:	bl	4050d0 <getenv@plt>
  406d1c:	cbz	x0, 406d30 <__get_hz@@Base+0x50>
  406d20:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406d24:	mov	x3, x0
  406d28:	add	x2, x2, #0x78
  406d2c:	b	406d4c <__get_hz@@Base+0x6c>
  406d30:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406d34:	add	x0, x0, #0x2ae
  406d38:	bl	4050d0 <getenv@plt>
  406d3c:	cbz	x0, 406dcc <__get_hz@@Base+0xec>
  406d40:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406d44:	mov	x3, x0
  406d48:	add	x2, x2, #0x2b8
  406d4c:	mov	x0, sp
  406d50:	mov	w1, #0x3ff                 	// #1023
  406d54:	bl	404d00 <snprintf@plt>
  406d58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406d5c:	add	x1, x1, #0x603
  406d60:	mov	x0, sp
  406d64:	bl	404fd0 <fopen64@plt>
  406d68:	cbz	x0, 406da8 <__get_hz@@Base+0xc8>
  406d6c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406d70:	add	x1, x1, #0x2d7
  406d74:	add	x2, x29, #0x1c
  406d78:	add	x3, x29, #0x18
  406d7c:	mov	x19, x0
  406d80:	bl	404d80 <__isoc99_fscanf@plt>
  406d84:	ldp	w9, w8, [x29, #24]
  406d88:	mov	w10, #0x4240                	// #16960
  406d8c:	movk	w10, #0xf, lsl #16
  406d90:	cmp	w8, w10
  406d94:	ccmp	w0, #0x2, #0x0, eq  // eq = none
  406d98:	mov	x0, x19
  406d9c:	csel	w20, w9, wzr, eq  // eq = none
  406da0:	bl	404d30 <fclose@plt>
  406da4:	b	406dac <__get_hz@@Base+0xcc>
  406da8:	mov	w20, wzr
  406dac:	cmp	w20, #0x0
  406db0:	mov	w8, #0x64                  	// #100
  406db4:	csel	w0, w8, w20, eq  // eq = none
  406db8:	add	sp, sp, #0x400
  406dbc:	ldp	x20, x19, [sp, #32]
  406dc0:	ldr	x28, [sp, #16]
  406dc4:	ldp	x29, x30, [sp], #48
  406dc8:	ret
  406dcc:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406dd0:	add	x8, x8, #0x2c6
  406dd4:	ldr	q0, [x8]
  406dd8:	strb	wzr, [sp, #16]
  406ddc:	str	q0, [sp]
  406de0:	b	406d58 <__get_hz@@Base+0x78>

0000000000406de4 <__get_user_hz@@Base>:
  406de4:	stp	x29, x30, [sp, #-16]!
  406de8:	mov	w0, #0x2                   	// #2
  406dec:	mov	x29, sp
  406df0:	bl	405000 <sysconf@plt>
  406df4:	ldp	x29, x30, [sp], #16
  406df8:	ret

0000000000406dfc <rt_addr_n2a_r@@Base>:
  406dfc:	stp	x29, x30, [sp, #-16]!
  406e00:	sub	w9, w0, #0x2
  406e04:	cmp	w9, #0x1a
  406e08:	mov	x29, sp
  406e0c:	b.hi	406eb4 <rt_addr_n2a_r@@Base+0xb8>  // b.pmore
  406e10:	adrp	x10, 40c000 <rtnl_listen@@Base+0x210>
  406e14:	add	x10, x10, #0xf92
  406e18:	adr	x11, 406e2c <rt_addr_n2a_r@@Base+0x30>
  406e1c:	ldrb	w12, [x10, x9]
  406e20:	add	x11, x11, x12, lsl #2
  406e24:	mov	x8, x2
  406e28:	br	x11
  406e2c:	mov	x1, x8
  406e30:	mov	x2, x3
  406e34:	mov	w3, w4
  406e38:	bl	405120 <inet_ntop@plt>
  406e3c:	ldp	x29, x30, [sp], #16
  406e40:	ret
  406e44:	ldrh	w9, [x8]
  406e48:	cmp	w9, #0x2
  406e4c:	b.eq	406e94 <rt_addr_n2a_r@@Base+0x98>  // b.none
  406e50:	cmp	w9, #0xa
  406e54:	b.ne	406ec4 <rt_addr_n2a_r@@Base+0xc8>  // b.any
  406e58:	mov	w0, #0xa                   	// #10
  406e5c:	mov	w9, #0x8                   	// #8
  406e60:	b	406e9c <rt_addr_n2a_r@@Base+0xa0>
  406e64:	mov	w2, #0xffff                	// #65535
  406e68:	mov	x0, x8
  406e6c:	bl	408db8 <ll_addr_n2a@@Base>
  406e70:	ldp	x29, x30, [sp], #16
  406e74:	ret
  406e78:	sxtw	x9, w4
  406e7c:	mov	x1, x8
  406e80:	mov	x2, x3
  406e84:	mov	x3, x9
  406e88:	bl	409dfc <mpls_ntop@@Base>
  406e8c:	ldp	x29, x30, [sp], #16
  406e90:	ret
  406e94:	mov	w0, #0x2                   	// #2
  406e98:	mov	w9, #0x4                   	// #4
  406e9c:	add	x1, x8, x9
  406ea0:	mov	x2, x3
  406ea4:	mov	w3, w4
  406ea8:	bl	405120 <inet_ntop@plt>
  406eac:	mov	w8, wzr
  406eb0:	cbz	w8, 406ebc <rt_addr_n2a_r@@Base+0xc0>
  406eb4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406eb8:	add	x0, x0, #0x2ea
  406ebc:	ldp	x29, x30, [sp], #16
  406ec0:	ret
  406ec4:	mov	w8, #0x1                   	// #1
  406ec8:	cbnz	w8, 406eb4 <rt_addr_n2a_r@@Base+0xb8>
  406ecc:	b	406ebc <rt_addr_n2a_r@@Base+0xc0>

0000000000406ed0 <rt_addr_n2a@@Base>:
  406ed0:	stp	x29, x30, [sp, #-16]!
  406ed4:	adrp	x3, 41e000 <memcpy@GLIBC_2.17>
  406ed8:	add	x3, x3, #0x2e0
  406edc:	mov	w4, #0x100                 	// #256
  406ee0:	mov	x29, sp
  406ee4:	bl	406dfc <rt_addr_n2a_r@@Base>
  406ee8:	ldp	x29, x30, [sp], #16
  406eec:	ret

0000000000406ef0 <read_family@@Base>:
  406ef0:	stp	x29, x30, [sp, #-32]!
  406ef4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  406ef8:	add	x1, x1, #0xd80
  406efc:	str	x19, [sp, #16]
  406f00:	mov	x29, sp
  406f04:	mov	x19, x0
  406f08:	bl	404ec0 <strcmp@plt>
  406f0c:	cbz	w0, 406f80 <read_family@@Base+0x90>
  406f10:	adrp	x1, 40c000 <rtnl_listen@@Base+0x210>
  406f14:	add	x1, x1, #0xd85
  406f18:	mov	x0, x19
  406f1c:	bl	404ec0 <strcmp@plt>
  406f20:	cbz	w0, 406f88 <read_family@@Base+0x98>
  406f24:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406f28:	add	x1, x1, #0x991
  406f2c:	mov	x0, x19
  406f30:	bl	404ec0 <strcmp@plt>
  406f34:	cbz	w0, 406f90 <read_family@@Base+0xa0>
  406f38:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406f3c:	add	x1, x1, #0x2ee
  406f40:	mov	x0, x19
  406f44:	bl	404ec0 <strcmp@plt>
  406f48:	cbz	w0, 406f98 <read_family@@Base+0xa8>
  406f4c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406f50:	add	x1, x1, #0x2f2
  406f54:	mov	x0, x19
  406f58:	bl	404ec0 <strcmp@plt>
  406f5c:	cbz	w0, 406fa0 <read_family@@Base+0xb0>
  406f60:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406f64:	add	x1, x1, #0x2f7
  406f68:	mov	x0, x19
  406f6c:	bl	404ec0 <strcmp@plt>
  406f70:	cmp	w0, #0x0
  406f74:	mov	w8, #0x7                   	// #7
  406f78:	csel	w0, w8, wzr, eq  // eq = none
  406f7c:	b	406fa4 <read_family@@Base+0xb4>
  406f80:	mov	w0, #0x2                   	// #2
  406f84:	b	406fa4 <read_family@@Base+0xb4>
  406f88:	mov	w0, #0xa                   	// #10
  406f8c:	b	406fa4 <read_family@@Base+0xb4>
  406f90:	mov	w0, #0x11                  	// #17
  406f94:	b	406fa4 <read_family@@Base+0xb4>
  406f98:	mov	w0, #0x4                   	// #4
  406f9c:	b	406fa4 <read_family@@Base+0xb4>
  406fa0:	mov	w0, #0x1c                  	// #28
  406fa4:	ldr	x19, [sp, #16]
  406fa8:	ldp	x29, x30, [sp], #32
  406fac:	ret

0000000000406fb0 <family_name@@Base>:
  406fb0:	sub	w8, w0, #0x2
  406fb4:	cmp	w8, #0x1a
  406fb8:	b.hi	406fe8 <family_name@@Base+0x38>  // b.pmore
  406fbc:	adrp	x9, 40c000 <rtnl_listen@@Base+0x210>
  406fc0:	add	x9, x9, #0xfad
  406fc4:	adr	x10, 406fdc <family_name@@Base+0x2c>
  406fc8:	ldrb	w11, [x9, x8]
  406fcc:	add	x10, x10, x11, lsl #2
  406fd0:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  406fd4:	add	x0, x0, #0xd80
  406fd8:	br	x10
  406fdc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406fe0:	add	x0, x0, #0x2ee
  406fe4:	ret
  406fe8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406fec:	add	x0, x0, #0x2ea
  406ff0:	ret
  406ff4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  406ff8:	add	x0, x0, #0x2f7
  406ffc:	ret
  407000:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  407004:	add	x0, x0, #0xd85
  407008:	ret
  40700c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407010:	add	x0, x0, #0x991
  407014:	ret
  407018:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40701c:	add	x0, x0, #0x2f2
  407020:	ret

0000000000407024 <format_host_r@@Base>:
  407024:	stp	x29, x30, [sp, #-64]!
  407028:	str	x23, [sp, #16]
  40702c:	stp	x22, x21, [sp, #32]
  407030:	stp	x20, x19, [sp, #48]
  407034:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407038:	ldr	x8, [x8, #4064]
  40703c:	mov	w19, w4
  407040:	mov	x20, x3
  407044:	mov	x21, x2
  407048:	ldr	w8, [x8]
  40704c:	mov	w23, w1
  407050:	mov	w22, w0
  407054:	mov	x29, sp
  407058:	cbz	w8, 4070ac <format_host_r@@Base+0x88>
  40705c:	cmp	w23, #0x0
  407060:	b.le	407070 <format_host_r@@Base+0x4c>
  407064:	cmp	w23, #0x1
  407068:	b.ge	407084 <format_host_r@@Base+0x60>  // b.tcont
  40706c:	b	4070a4 <format_host_r@@Base+0x80>
  407070:	mov	w0, w22
  407074:	bl	4070d8 <format_host_r@@Base+0xb4>
  407078:	mov	w23, w0
  40707c:	cmp	w23, #0x1
  407080:	b.lt	4070a4 <format_host_r@@Base+0x80>  // b.tstop
  407084:	mov	x0, x21
  407088:	mov	w1, w23
  40708c:	mov	w2, w22
  407090:	bl	4070fc <format_host_r@@Base+0xd8>
  407094:	cbz	x0, 4070a4 <format_host_r@@Base+0x80>
  407098:	mov	w8, wzr
  40709c:	cbnz	w8, 4070ac <format_host_r@@Base+0x88>
  4070a0:	b	4070c4 <format_host_r@@Base+0xa0>
  4070a4:	mov	w8, #0x1                   	// #1
  4070a8:	cbz	w8, 4070c4 <format_host_r@@Base+0xa0>
  4070ac:	mov	w0, w22
  4070b0:	mov	w1, w23
  4070b4:	mov	x2, x21
  4070b8:	mov	x3, x20
  4070bc:	mov	w4, w19
  4070c0:	bl	406dfc <rt_addr_n2a_r@@Base>
  4070c4:	ldp	x20, x19, [sp, #48]
  4070c8:	ldp	x22, x21, [sp, #32]
  4070cc:	ldr	x23, [sp, #16]
  4070d0:	ldp	x29, x30, [sp], #64
  4070d4:	ret
  4070d8:	stp	x29, x30, [sp, #-16]!
  4070dc:	mov	x29, sp
  4070e0:	bl	4064fc <af_bit_len@@Base>
  4070e4:	add	w8, w0, #0x7
  4070e8:	cmp	w0, #0x0
  4070ec:	csel	w8, w8, w0, lt  // lt = tstop
  4070f0:	asr	w0, w8, #3
  4070f4:	ldp	x29, x30, [sp], #16
  4070f8:	ret
  4070fc:	stp	x29, x30, [sp, #-80]!
  407100:	stp	x22, x21, [sp, #48]
  407104:	stp	x20, x19, [sp, #64]
  407108:	mov	w21, w1
  40710c:	cmp	w2, #0xa
  407110:	mov	x19, x0
  407114:	str	x25, [sp, #16]
  407118:	stp	x24, x23, [sp, #32]
  40711c:	mov	x29, sp
  407120:	b.ne	407134 <format_host_r@@Base+0x110>  // b.any
  407124:	ldr	w8, [x19]
  407128:	cbz	w8, 407250 <format_host_r@@Base+0x22c>
  40712c:	mov	w20, #0xa                   	// #10
  407130:	b	407138 <format_host_r@@Base+0x114>
  407134:	mov	w20, w2
  407138:	sxtw	x21, w21
  40713c:	add	x8, x19, x21
  407140:	ldur	w8, [x8, #-4]
  407144:	mov	w9, #0xff01                	// #65281
  407148:	movk	w9, #0xff00, lsl #16
  40714c:	adrp	x23, 41e000 <memcpy@GLIBC_2.17>
  407150:	mul	x9, x8, x9
  407154:	lsr	x9, x9, #40
  407158:	add	w9, w9, w9, lsl #8
  40715c:	sub	w24, w8, w9
  407160:	add	x23, x23, #0x4e8
  407164:	ldr	x22, [x23, w24, uxtw #3]
  407168:	cbnz	x22, 407204 <format_host_r@@Base+0x1e0>
  40716c:	mov	w0, #0x118                 	// #280
  407170:	bl	404d60 <malloc@plt>
  407174:	cbz	x0, 407238 <format_host_r@@Base+0x214>
  407178:	mov	x22, x0
  40717c:	strh	w20, [x0, #22]
  407180:	strh	w21, [x0, #18]
  407184:	mov	x25, x0
  407188:	add	x0, x0, #0x18
  40718c:	mov	x1, x19
  407190:	mov	x2, x21
  407194:	str	xzr, [x25, #8]!
  407198:	bl	404be0 <memcpy@plt>
  40719c:	adrp	x9, 41e000 <memcpy@GLIBC_2.17>
  4071a0:	lsl	x8, x24, #3
  4071a4:	ldr	w11, [x9, #1248]
  4071a8:	ldr	x10, [x23, x8]
  4071ac:	str	x22, [x23, x8]
  4071b0:	add	w8, w11, #0x1
  4071b4:	str	x10, [x22]
  4071b8:	str	w8, [x9, #1248]
  4071bc:	cbnz	w11, 4071c8 <format_host_r@@Base+0x1a4>
  4071c0:	mov	w0, #0x1                   	// #1
  4071c4:	bl	404c80 <sethostent@plt>
  4071c8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4071cc:	ldr	x8, [x8, #4016]
  4071d0:	ldr	x0, [x8]
  4071d4:	bl	404fb0 <fflush@plt>
  4071d8:	mov	x0, x19
  4071dc:	mov	w1, w21
  4071e0:	mov	w2, w20
  4071e4:	bl	404f20 <gethostbyaddr@plt>
  4071e8:	cbz	x0, 407234 <format_host_r@@Base+0x210>
  4071ec:	ldr	x0, [x0]
  4071f0:	bl	404e40 <strdup@plt>
  4071f4:	str	x0, [x25]
  4071f8:	b	407234 <format_host_r@@Base+0x210>
  4071fc:	ldr	x22, [x22]
  407200:	cbz	x22, 40716c <format_host_r@@Base+0x148>
  407204:	ldrh	w8, [x22, #22]
  407208:	cmp	w20, w8
  40720c:	b.ne	4071fc <format_host_r@@Base+0x1d8>  // b.any
  407210:	ldrh	w8, [x22, #18]
  407214:	cmp	w21, w8
  407218:	b.ne	4071fc <format_host_r@@Base+0x1d8>  // b.any
  40721c:	add	x0, x22, #0x18
  407220:	mov	x1, x19
  407224:	mov	x2, x21
  407228:	bl	404e00 <bcmp@plt>
  40722c:	cbnz	w0, 4071fc <format_host_r@@Base+0x1d8>
  407230:	add	x25, x22, #0x8
  407234:	ldr	x0, [x25]
  407238:	ldp	x20, x19, [sp, #64]
  40723c:	ldp	x22, x21, [sp, #48]
  407240:	ldp	x24, x23, [sp, #32]
  407244:	ldr	x25, [sp, #16]
  407248:	ldp	x29, x30, [sp], #80
  40724c:	ret
  407250:	ldr	w8, [x19, #4]
  407254:	mov	w20, #0xa                   	// #10
  407258:	cbnz	w8, 407138 <format_host_r@@Base+0x114>
  40725c:	ldr	w22, [x19, #8]
  407260:	mov	w0, #0xffff                	// #65535
  407264:	bl	405acc <mask2bits@@Base+0x40>
  407268:	add	x8, x19, #0xc
  40726c:	cmp	w22, w0
  407270:	mov	w9, #0x4                   	// #4
  407274:	mov	w10, #0x2                   	// #2
  407278:	csel	w21, w9, w21, eq  // eq = none
  40727c:	csel	w20, w10, w20, eq  // eq = none
  407280:	csel	x19, x8, x19, eq  // eq = none
  407284:	b	407138 <format_host_r@@Base+0x114>

0000000000407288 <format_host@@Base>:
  407288:	stp	x29, x30, [sp, #-16]!
  40728c:	adrp	x3, 41e000 <memcpy@GLIBC_2.17>
  407290:	add	x3, x3, #0x3e0
  407294:	mov	w4, #0x100                 	// #256
  407298:	mov	x29, sp
  40729c:	bl	407024 <format_host_r@@Base>
  4072a0:	ldp	x29, x30, [sp], #16
  4072a4:	ret

00000000004072a8 <hexstring_n2a@@Base>:
  4072a8:	stp	x29, x30, [sp, #-80]!
  4072ac:	stp	x20, x19, [sp, #64]
  4072b0:	mov	x19, x2
  4072b4:	cmp	w3, #0x3
  4072b8:	str	x25, [sp, #16]
  4072bc:	stp	x24, x23, [sp, #32]
  4072c0:	stp	x22, x21, [sp, #48]
  4072c4:	mov	x29, sp
  4072c8:	b.lt	40731c <hexstring_n2a@@Base+0x74>  // b.tstop
  4072cc:	cmp	w1, #0x1
  4072d0:	b.lt	40731c <hexstring_n2a@@Base+0x74>  // b.tstop
  4072d4:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4072d8:	mov	w20, w3
  4072dc:	mov	x21, x0
  4072e0:	mov	x24, xzr
  4072e4:	sxtw	x25, w1
  4072e8:	add	x22, x22, #0x440
  4072ec:	mov	x23, x19
  4072f0:	ldrb	w2, [x21, x24]
  4072f4:	mov	x0, x23
  4072f8:	mov	x1, x22
  4072fc:	bl	404cb0 <sprintf@plt>
  407300:	cmp	w20, #0x5
  407304:	b.lt	40731c <hexstring_n2a@@Base+0x74>  // b.tstop
  407308:	add	x24, x24, #0x1
  40730c:	add	x23, x23, #0x2
  407310:	cmp	x24, x25
  407314:	sub	w20, w20, #0x2
  407318:	b.lt	4072f0 <hexstring_n2a@@Base+0x48>  // b.tstop
  40731c:	mov	x0, x19
  407320:	ldp	x20, x19, [sp, #64]
  407324:	ldp	x22, x21, [sp, #48]
  407328:	ldp	x24, x23, [sp, #32]
  40732c:	ldr	x25, [sp, #16]
  407330:	ldp	x29, x30, [sp], #80
  407334:	ret

0000000000407338 <hexstring_a2n@@Base>:
  407338:	sub	sp, sp, #0x50
  40733c:	stp	x29, x30, [sp, #16]
  407340:	stp	x24, x23, [sp, #32]
  407344:	stp	x22, x21, [sp, #48]
  407348:	stp	x20, x19, [sp, #64]
  40734c:	add	x29, sp, #0x10
  407350:	mov	x20, x3
  407354:	mov	w21, w2
  407358:	mov	x19, x1
  40735c:	mov	x22, x0
  407360:	bl	404c10 <strlen@plt>
  407364:	tbnz	w0, #0, 4073f4 <hexstring_a2n@@Base+0xbc>
  407368:	mov	w24, wzr
  40736c:	b	407384 <hexstring_a2n@@Base+0x4c>
  407370:	strb	w0, [x19, w24, uxtw]
  407374:	add	w24, w24, #0x1
  407378:	add	x22, x22, #0x2
  40737c:	mov	w8, #0x1                   	// #1
  407380:	tbz	w8, #0, 4073f4 <hexstring_a2n@@Base+0xbc>
  407384:	cmp	w24, w21
  407388:	b.cs	4073fc <hexstring_a2n@@Base+0xc4>  // b.hs, b.nlast
  40738c:	mov	x0, x22
  407390:	bl	404c10 <strlen@plt>
  407394:	cmp	x0, #0x2
  407398:	b.cc	4073fc <hexstring_a2n@@Base+0xc4>  // b.lo, b.ul, b.last
  40739c:	add	x0, sp, #0x4
  4073a0:	mov	w2, #0x2                   	// #2
  4073a4:	mov	x1, x22
  4073a8:	bl	405070 <strncpy@plt>
  4073ac:	strb	wzr, [sp, #6]
  4073b0:	bl	4050c0 <__errno_location@plt>
  4073b4:	mov	x23, x0
  4073b8:	str	wzr, [x0]
  4073bc:	add	x0, sp, #0x4
  4073c0:	add	x1, sp, #0x8
  4073c4:	mov	w2, #0x10                  	// #16
  4073c8:	bl	404c00 <strtoul@plt>
  4073cc:	ldr	w9, [x23]
  4073d0:	mov	w8, wzr
  4073d4:	cbnz	w9, 407380 <hexstring_a2n@@Base+0x48>
  4073d8:	cmp	w0, #0xff
  4073dc:	b.hi	407380 <hexstring_a2n@@Base+0x48>  // b.pmore
  4073e0:	ldr	x8, [sp, #8]
  4073e4:	ldrb	w8, [x8]
  4073e8:	cbz	w8, 407370 <hexstring_a2n@@Base+0x38>
  4073ec:	mov	w8, wzr
  4073f0:	b	407380 <hexstring_a2n@@Base+0x48>
  4073f4:	mov	x19, xzr
  4073f8:	b	407404 <hexstring_a2n@@Base+0xcc>
  4073fc:	cbz	x20, 407404 <hexstring_a2n@@Base+0xcc>
  407400:	str	w24, [x20]
  407404:	mov	x0, x19
  407408:	ldp	x20, x19, [sp, #64]
  40740c:	ldp	x22, x21, [sp, #48]
  407410:	ldp	x24, x23, [sp, #32]
  407414:	ldp	x29, x30, [sp, #16]
  407418:	add	sp, sp, #0x50
  40741c:	ret

0000000000407420 <hex2mem@@Base>:
  407420:	stp	x29, x30, [sp, #-48]!
  407424:	cmp	w2, #0x1
  407428:	stp	x22, x21, [sp, #16]
  40742c:	stp	x20, x19, [sp, #32]
  407430:	mov	x29, sp
  407434:	b.lt	407478 <hex2mem@@Base+0x58>  // b.tstop
  407438:	mov	x19, x1
  40743c:	mov	w20, w2
  407440:	add	x21, x0, #0x1
  407444:	ldurb	w0, [x21, #-1]
  407448:	bl	4059a0 <get_hex@@Base>
  40744c:	tbnz	w0, #31, 407480 <hex2mem@@Base+0x60>
  407450:	lsl	w22, w0, #4
  407454:	strb	w22, [x19]
  407458:	ldrb	w0, [x21]
  40745c:	bl	4059a0 <get_hex@@Base>
  407460:	tbnz	w0, #31, 407480 <hex2mem@@Base+0x60>
  407464:	orr	w8, w22, w0
  407468:	subs	x20, x20, #0x1
  40746c:	strb	w8, [x19], #1
  407470:	add	x21, x21, #0x2
  407474:	b.ne	407444 <hex2mem@@Base+0x24>  // b.any
  407478:	mov	w0, wzr
  40747c:	b	407484 <hex2mem@@Base+0x64>
  407480:	mov	w0, #0xffffffff            	// #-1
  407484:	ldp	x20, x19, [sp, #32]
  407488:	ldp	x22, x21, [sp, #16]
  40748c:	ldp	x29, x30, [sp], #48
  407490:	ret

0000000000407494 <addr64_n2a@@Base>:
  407494:	sub	sp, sp, #0x60
  407498:	stp	x26, x25, [sp, #32]
  40749c:	stp	x22, x21, [sp, #64]
  4074a0:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4074a4:	adrp	x26, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4074a8:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4074ac:	stp	x24, x23, [sp, #48]
  4074b0:	stp	x20, x19, [sp, #80]
  4074b4:	mov	x19, x2
  4074b8:	mov	x20, x1
  4074bc:	mov	x24, xzr
  4074c0:	mov	x23, xzr
  4074c4:	add	x21, x21, #0x2fe
  4074c8:	add	x25, sp, #0x8
  4074cc:	add	x26, x26, #0x9c7
  4074d0:	add	x22, x22, #0x300
  4074d4:	stp	x29, x30, [sp, #16]
  4074d8:	add	x29, sp, #0x10
  4074dc:	str	x0, [sp, #8]
  4074e0:	ldrh	w0, [x25, x24]
  4074e4:	bl	406140 <get_be16@@Base+0x44>
  4074e8:	cmp	x24, #0x6
  4074ec:	add	x8, x20, x23
  4074f0:	csel	x21, x26, x21, eq  // eq = none
  4074f4:	sub	x1, x19, x23
  4074f8:	and	w3, w0, #0xffff
  4074fc:	mov	x0, x8
  407500:	mov	x2, x22
  407504:	mov	x4, x21
  407508:	bl	404d00 <snprintf@plt>
  40750c:	tbnz	w0, #31, 407524 <addr64_n2a@@Base+0x90>
  407510:	add	x24, x24, #0x2
  407514:	cmp	x24, #0x8
  407518:	add	x23, x23, w0, sxtw
  40751c:	b.ne	4074e0 <addr64_n2a@@Base+0x4c>  // b.any
  407520:	mov	w0, w23
  407524:	ldp	x20, x19, [sp, #80]
  407528:	ldp	x22, x21, [sp, #64]
  40752c:	ldp	x24, x23, [sp, #48]
  407530:	ldp	x26, x25, [sp, #32]
  407534:	ldp	x29, x30, [sp, #16]
  407538:	add	sp, sp, #0x60
  40753c:	ret

0000000000407540 <print_escape_buf@@Base>:
  407540:	stp	x29, x30, [sp, #-64]!
  407544:	stp	x24, x23, [sp, #16]
  407548:	stp	x22, x21, [sp, #32]
  40754c:	stp	x20, x19, [sp, #48]
  407550:	mov	x29, sp
  407554:	cbz	x1, 4075c4 <print_escape_buf@@Base+0x84>
  407558:	mov	x19, x2
  40755c:	mov	x20, x1
  407560:	mov	x21, x0
  407564:	bl	404ed0 <__ctype_b_loc@plt>
  407568:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40756c:	mov	x22, x0
  407570:	add	x23, x23, #0x305
  407574:	b	407590 <print_escape_buf@@Base+0x50>
  407578:	mov	x0, x23
  40757c:	mov	w1, w24
  407580:	bl	4050a0 <printf@plt>
  407584:	subs	x20, x20, #0x1
  407588:	add	x21, x21, #0x1
  40758c:	b.eq	4075c4 <print_escape_buf@@Base+0x84>  // b.none
  407590:	ldrb	w24, [x21]
  407594:	cmp	x24, #0x5c
  407598:	b.eq	407578 <print_escape_buf@@Base+0x38>  // b.none
  40759c:	ldr	x8, [x22]
  4075a0:	ldrh	w8, [x8, x24, lsl #1]
  4075a4:	tbz	w8, #14, 407578 <print_escape_buf@@Base+0x38>
  4075a8:	mov	x0, x19
  4075ac:	mov	w1, w24
  4075b0:	bl	404f70 <strchr@plt>
  4075b4:	cbnz	x0, 407578 <print_escape_buf@@Base+0x38>
  4075b8:	mov	w0, w24
  4075bc:	bl	4050e0 <putchar@plt>
  4075c0:	b	407584 <print_escape_buf@@Base+0x44>
  4075c4:	ldp	x20, x19, [sp, #48]
  4075c8:	ldp	x22, x21, [sp, #32]
  4075cc:	ldp	x24, x23, [sp, #16]
  4075d0:	ldp	x29, x30, [sp], #64
  4075d4:	ret

00000000004075d8 <print_timestamp@@Base>:
  4075d8:	sub	sp, sp, #0x60
  4075dc:	stp	x29, x30, [sp, #64]
  4075e0:	add	x29, sp, #0x40
  4075e4:	stp	x20, x19, [sp, #80]
  4075e8:	mov	x19, x0
  4075ec:	sub	x0, x29, #0x10
  4075f0:	mov	x1, xzr
  4075f4:	bl	404dd0 <gettimeofday@plt>
  4075f8:	sub	x0, x29, #0x10
  4075fc:	bl	404d20 <localtime@plt>
  407600:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407604:	ldr	x8, [x8, #4032]
  407608:	mov	x3, x0
  40760c:	ldr	w8, [x8]
  407610:	cbz	w8, 407640 <print_timestamp@@Base+0x68>
  407614:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407618:	add	x2, x2, #0x30b
  40761c:	add	x0, sp, #0x8
  407620:	mov	w1, #0x28                  	// #40
  407624:	bl	404ce0 <strftime@plt>
  407628:	ldur	x3, [x29, #-8]
  40762c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407630:	add	x1, x1, #0x31d
  407634:	add	x2, sp, #0x8
  407638:	mov	x0, x19
  40763c:	b	40766c <print_timestamp@@Base+0x94>
  407640:	mov	x0, x3
  407644:	bl	405010 <asctime@plt>
  407648:	mov	x20, x0
  40764c:	bl	404c10 <strlen@plt>
  407650:	add	x8, x0, x20
  407654:	sturb	wzr, [x8, #-1]
  407658:	ldur	x3, [x29, #-8]
  40765c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407660:	add	x1, x1, #0x329
  407664:	mov	x0, x19
  407668:	mov	x2, x20
  40766c:	bl	405100 <fprintf@plt>
  407670:	ldp	x20, x19, [sp, #80]
  407674:	ldp	x29, x30, [sp, #64]
  407678:	mov	w0, wzr
  40767c:	add	sp, sp, #0x60
  407680:	ret

0000000000407684 <print_name_and_link@@Base>:
  407684:	sub	sp, sp, #0x70
  407688:	stp	x29, x30, [sp, #64]
  40768c:	stp	x22, x21, [sp, #80]
  407690:	stp	x20, x19, [sp, #96]
  407694:	ldr	x8, [x2, #40]
  407698:	mov	x20, x1
  40769c:	mov	x19, x0
  4076a0:	add	x29, sp, #0x40
  4076a4:	cbz	x8, 4076d8 <print_name_and_link@@Base+0x54>
  4076a8:	mov	x0, x8
  4076ac:	mov	x22, x2
  4076b0:	bl	4077b0 <print_name_and_link@@Base+0x12c>
  4076b4:	cbz	w0, 4076e0 <print_name_and_link@@Base+0x5c>
  4076b8:	ldr	x8, [x22, #296]
  4076bc:	mov	w21, w0
  4076c0:	cbz	x8, 4076fc <print_name_and_link@@Base+0x78>
  4076c4:	bl	40914c <is_json_context@@Base>
  4076c8:	tbz	w0, #0, 407734 <print_name_and_link@@Base+0xb0>
  4076cc:	mov	w0, w21
  4076d0:	bl	4077b8 <print_name_and_link@@Base+0x134>
  4076d4:	b	4076ec <print_name_and_link@@Base+0x68>
  4076d8:	mov	w21, wzr
  4076dc:	b	407768 <print_name_and_link@@Base+0xe4>
  4076e0:	bl	40914c <is_json_context@@Base>
  4076e4:	tbz	w0, #0, 40779c <print_name_and_link@@Base+0x118>
  4076e8:	bl	407810 <print_name_and_link@@Base+0x18c>
  4076ec:	mov	x22, xzr
  4076f0:	mov	w21, wzr
  4076f4:	cbnz	x22, 407748 <print_name_and_link@@Base+0xc4>
  4076f8:	b	407768 <print_name_and_link@@Base+0xe4>
  4076fc:	mov	w0, w21
  407700:	bl	408634 <ll_index_to_name@@Base>
  407704:	mov	x22, x0
  407708:	bl	40914c <is_json_context@@Base>
  40770c:	tbz	w0, #0, 40771c <print_name_and_link@@Base+0x98>
  407710:	mov	x0, x22
  407714:	bl	4077e4 <print_name_and_link@@Base+0x160>
  407718:	mov	x22, xzr
  40771c:	mov	w0, w21
  407720:	bl	408808 <ll_index_to_flags@@Base>
  407724:	mvn	w8, w0
  407728:	and	w21, w8, #0x1
  40772c:	cbnz	x22, 407748 <print_name_and_link@@Base+0xc4>
  407730:	b	407768 <print_name_and_link@@Base+0xe4>
  407734:	mov	w0, w21
  407738:	bl	4085f8 <ll_idx_n2a@@Base>
  40773c:	mov	x22, x0
  407740:	mov	w21, wzr
  407744:	cbz	x22, 407768 <print_name_and_link@@Base+0xe4>
  407748:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40774c:	add	x2, x2, #0x351
  407750:	mov	x0, sp
  407754:	mov	w1, #0x40                  	// #64
  407758:	mov	x3, x20
  40775c:	mov	x4, x22
  407760:	bl	404d00 <snprintf@plt>
  407764:	mov	x20, sp
  407768:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40776c:	add	x2, x2, #0x357
  407770:	mov	w0, #0x4                   	// #4
  407774:	mov	w1, wzr
  407778:	mov	x3, x19
  40777c:	mov	x4, x20
  407780:	bl	4097c8 <print_color_string@@Base>
  407784:	mov	w0, w21
  407788:	ldp	x20, x19, [sp, #96]
  40778c:	ldp	x22, x21, [sp, #80]
  407790:	ldp	x29, x30, [sp, #64]
  407794:	add	sp, sp, #0x70
  407798:	ret
  40779c:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4077a0:	mov	w21, wzr
  4077a4:	add	x22, x22, #0x34c
  4077a8:	cbnz	x22, 407748 <print_name_and_link@@Base+0xc4>
  4077ac:	b	407768 <print_name_and_link@@Base+0xe4>
  4077b0:	ldr	w0, [x0, #4]
  4077b4:	ret
  4077b8:	stp	x29, x30, [sp, #-16]!
  4077bc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4077c0:	mov	w4, w0
  4077c4:	add	x2, x2, #0x341
  4077c8:	mov	w0, #0x2                   	// #2
  4077cc:	mov	w1, #0x6                   	// #6
  4077d0:	mov	x3, xzr
  4077d4:	mov	x29, sp
  4077d8:	bl	409280 <print_color_int@@Base>
  4077dc:	ldp	x29, x30, [sp], #16
  4077e0:	ret
  4077e4:	stp	x29, x30, [sp, #-16]!
  4077e8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4077ec:	mov	x4, x0
  4077f0:	add	x2, x2, #0x991
  4077f4:	mov	w0, #0x2                   	// #2
  4077f8:	mov	w1, #0x6                   	// #6
  4077fc:	mov	x3, xzr
  407800:	mov	x29, sp
  407804:	bl	4097c8 <print_color_string@@Base>
  407808:	ldp	x29, x30, [sp], #16
  40780c:	ret
  407810:	stp	x29, x30, [sp, #-16]!
  407814:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407818:	add	x2, x2, #0x991
  40781c:	mov	w0, #0x2                   	// #2
  407820:	mov	w1, #0x6                   	// #6
  407824:	mov	x3, xzr
  407828:	mov	x4, xzr
  40782c:	mov	x29, sp
  407830:	bl	409a24 <print_color_null@@Base>
  407834:	ldp	x29, x30, [sp], #16
  407838:	ret

000000000040783c <getcmdline@@Base>:
  40783c:	sub	sp, sp, #0x70
  407840:	stp	x29, x30, [sp, #16]
  407844:	stp	x28, x27, [sp, #32]
  407848:	stp	x26, x25, [sp, #48]
  40784c:	stp	x24, x23, [sp, #64]
  407850:	stp	x22, x21, [sp, #80]
  407854:	stp	x20, x19, [sp, #96]
  407858:	add	x29, sp, #0x10
  40785c:	mov	x19, x2
  407860:	mov	x20, x1
  407864:	mov	x21, x0
  407868:	bl	404f10 <getline@plt>
  40786c:	mov	x22, x0
  407870:	tbnz	x0, #63, 4079b0 <getcmdline@@Base+0x174>
  407874:	adrp	x25, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407878:	ldr	x25, [x25, #4000]
  40787c:	mov	w1, #0x23                  	// #35
  407880:	ldr	w8, [x25]
  407884:	add	w8, w8, #0x1
  407888:	str	w8, [x25]
  40788c:	ldr	x0, [x21]
  407890:	bl	404f70 <strchr@plt>
  407894:	cbz	x0, 40789c <getcmdline@@Base+0x60>
  407898:	strb	wzr, [x0]
  40789c:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4078a0:	add	x23, x23, #0x35e
  4078a4:	ldr	x0, [x21]
  4078a8:	mov	x1, x23
  4078ac:	bl	405050 <strstr@plt>
  4078b0:	cbz	x0, 4079b0 <getcmdline@@Base+0x174>
  4078b4:	mov	x28, x0
  4078b8:	add	x0, sp, #0x8
  4078bc:	mov	x1, sp
  4078c0:	mov	x2, x19
  4078c4:	stp	xzr, xzr, [sp]
  4078c8:	bl	404f10 <getline@plt>
  4078cc:	mov	x27, x0
  4078d0:	tbnz	x0, #63, 407954 <getcmdline@@Base+0x118>
  4078d4:	ldr	w8, [x25]
  4078d8:	mov	w1, #0x23                  	// #35
  4078dc:	add	w8, w8, #0x1
  4078e0:	str	w8, [x25]
  4078e4:	strb	wzr, [x28]
  4078e8:	ldr	x0, [sp, #8]
  4078ec:	bl	404f70 <strchr@plt>
  4078f0:	cbz	x0, 4078f8 <getcmdline@@Base+0xbc>
  4078f4:	strb	wzr, [x0]
  4078f8:	ldr	x28, [x21]
  4078fc:	mov	x0, x28
  407900:	bl	404c10 <strlen@plt>
  407904:	ldr	x8, [sp, #8]
  407908:	mov	x24, x0
  40790c:	mov	x0, x8
  407910:	bl	404c10 <strlen@plt>
  407914:	add	x8, x24, x0
  407918:	add	x1, x8, #0x1
  40791c:	mov	x0, x28
  407920:	str	x1, [x20]
  407924:	bl	404e20 <realloc@plt>
  407928:	str	x0, [x21]
  40792c:	cbz	x0, 407980 <getcmdline@@Base+0x144>
  407930:	ldr	x1, [sp, #8]
  407934:	add	x8, x22, x27
  407938:	sub	x22, x8, #0x2
  40793c:	bl	404da0 <strcat@plt>
  407940:	ldr	x0, [sp, #8]
  407944:	bl	404f30 <free@plt>
  407948:	mov	w8, #0x1                   	// #1
  40794c:	tbnz	w8, #0, 4078a4 <getcmdline@@Base+0x68>
  407950:	b	4079b4 <getcmdline@@Base+0x178>
  407954:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407958:	ldr	x8, [x8, #3992]
  40795c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407960:	mov	w1, #0x1a                  	// #26
  407964:	mov	w2, #0x1                   	// #1
  407968:	ldr	x3, [x8]
  40796c:	add	x0, x0, #0x361
  407970:	bl	404f90 <fwrite@plt>
  407974:	mov	w8, wzr
  407978:	mov	x26, x27
  40797c:	b	40794c <getcmdline@@Base+0x110>
  407980:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407984:	ldr	x8, [x8, #3992]
  407988:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40798c:	mov	w1, #0xe                   	// #14
  407990:	mov	w2, #0x1                   	// #1
  407994:	ldr	x3, [x8]
  407998:	add	x0, x0, #0x37c
  40799c:	bl	404f90 <fwrite@plt>
  4079a0:	mov	w8, wzr
  4079a4:	str	xzr, [x20]
  4079a8:	mov	x26, #0xffffffffffffffff    	// #-1
  4079ac:	b	40794c <getcmdline@@Base+0x110>
  4079b0:	mov	x26, x22
  4079b4:	mov	x0, x26
  4079b8:	ldp	x20, x19, [sp, #96]
  4079bc:	ldp	x22, x21, [sp, #80]
  4079c0:	ldp	x24, x23, [sp, #64]
  4079c4:	ldp	x26, x25, [sp, #48]
  4079c8:	ldp	x28, x27, [sp, #32]
  4079cc:	ldp	x29, x30, [sp, #16]
  4079d0:	add	sp, sp, #0x70
  4079d4:	ret

00000000004079d8 <makeargs@@Base>:
  4079d8:	stp	x29, x30, [sp, #-64]!
  4079dc:	stp	x24, x23, [sp, #16]
  4079e0:	stp	x22, x21, [sp, #32]
  4079e4:	stp	x20, x19, [sp, #48]
  4079e8:	ldrb	w8, [x0]
  4079ec:	mov	x19, x1
  4079f0:	mov	x29, sp
  4079f4:	cbz	w8, 407a8c <makeargs@@Base+0xb4>
  4079f8:	adrp	x21, 40c000 <rtnl_listen@@Base+0x210>
  4079fc:	mov	x22, x0
  407a00:	mov	w20, wzr
  407a04:	sub	w23, w2, #0x1
  407a08:	add	x21, x21, #0xfc8
  407a0c:	b	407a44 <makeargs@@Base+0x6c>
  407a10:	mov	x0, x22
  407a14:	mov	x1, x21
  407a18:	add	w24, w20, #0x1
  407a1c:	str	x22, [x19, w20, sxtw #3]
  407a20:	bl	405080 <strcspn@plt>
  407a24:	add	x0, x22, x0
  407a28:	ldrb	w8, [x0]
  407a2c:	mov	w20, w24
  407a30:	cbz	w8, 407a90 <makeargs@@Base+0xb8>
  407a34:	mov	x22, x0
  407a38:	ldrb	w8, [x22, #1]!
  407a3c:	strb	wzr, [x0]
  407a40:	cbz	w8, 407a90 <makeargs@@Base+0xb8>
  407a44:	mov	x0, x22
  407a48:	mov	x1, x21
  407a4c:	bl	404f60 <strspn@plt>
  407a50:	add	x22, x22, x0
  407a54:	ldrb	w1, [x22]
  407a58:	cbz	w1, 407a90 <makeargs@@Base+0xb8>
  407a5c:	cmp	w20, w23
  407a60:	b.ge	407aac <makeargs@@Base+0xd4>  // b.tcont
  407a64:	cmp	w1, #0x27
  407a68:	b.eq	407a74 <makeargs@@Base+0x9c>  // b.none
  407a6c:	cmp	w1, #0x22
  407a70:	b.ne	407a10 <makeargs@@Base+0x38>  // b.any
  407a74:	add	x0, x22, #0x1
  407a78:	str	x0, [x19, w20, sxtw #3]
  407a7c:	bl	404f70 <strchr@plt>
  407a80:	cbz	x0, 407ac4 <makeargs@@Base+0xec>
  407a84:	add	w20, w20, #0x1
  407a88:	b	407a34 <makeargs@@Base+0x5c>
  407a8c:	mov	w20, wzr
  407a90:	str	xzr, [x19, w20, sxtw #3]
  407a94:	mov	w0, w20
  407a98:	ldp	x20, x19, [sp, #48]
  407a9c:	ldp	x22, x21, [sp, #32]
  407aa0:	ldp	x24, x23, [sp, #16]
  407aa4:	ldp	x29, x30, [sp], #64
  407aa8:	ret
  407aac:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407ab0:	ldr	x8, [x8, #3992]
  407ab4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407ab8:	add	x0, x0, #0x38b
  407abc:	mov	w1, #0x1e                  	// #30
  407ac0:	b	407ad8 <makeargs@@Base+0x100>
  407ac4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  407ac8:	ldr	x8, [x8, #3992]
  407acc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407ad0:	add	x0, x0, #0x3aa
  407ad4:	mov	w1, #0x1b                  	// #27
  407ad8:	ldr	x3, [x8]
  407adc:	mov	w2, #0x1                   	// #1
  407ae0:	bl	404f90 <fwrite@plt>
  407ae4:	mov	w0, #0x1                   	// #1
  407ae8:	bl	404c20 <exit@plt>

0000000000407aec <print_nlmsg_timestamp@@Base>:
  407aec:	stp	x29, x30, [sp, #-48]!
  407af0:	str	x21, [sp, #16]
  407af4:	stp	x20, x19, [sp, #32]
  407af8:	ldp	w8, w19, [x1, #16]
  407afc:	mov	x29, sp
  407b00:	mov	x20, x0
  407b04:	add	x0, x29, #0x18
  407b08:	str	x8, [x29, #24]
  407b0c:	bl	404d20 <localtime@plt>
  407b10:	bl	405010 <asctime@plt>
  407b14:	mov	x21, x0
  407b18:	bl	404c10 <strlen@plt>
  407b1c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407b20:	add	x8, x0, x21
  407b24:	add	x1, x1, #0x3c6
  407b28:	mov	x0, x20
  407b2c:	mov	x2, x21
  407b30:	mov	x3, x19
  407b34:	sturb	wzr, [x8, #-1]
  407b38:	bl	405100 <fprintf@plt>
  407b3c:	ldp	x20, x19, [sp, #32]
  407b40:	ldr	x21, [sp, #16]
  407b44:	ldp	x29, x30, [sp], #48
  407b48:	ret

0000000000407b4c <int_to_str@@Base>:
  407b4c:	stp	x29, x30, [sp, #-32]!
  407b50:	str	x19, [sp, #16]
  407b54:	mov	x19, x1
  407b58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407b5c:	mov	w2, w0
  407b60:	add	x1, x1, #0x3dc
  407b64:	mov	x0, x19
  407b68:	mov	x29, sp
  407b6c:	bl	404cb0 <sprintf@plt>
  407b70:	mov	x0, x19
  407b74:	ldr	x19, [sp, #16]
  407b78:	ldp	x29, x30, [sp], #32
  407b7c:	ret

0000000000407b80 <get_guid@@Base>:
  407b80:	stp	x29, x30, [sp, #-48]!
  407b84:	stp	x20, x19, [sp, #32]
  407b88:	mov	x20, x0
  407b8c:	mov	x0, x1
  407b90:	str	x21, [sp, #16]
  407b94:	mov	x29, sp
  407b98:	mov	x19, x1
  407b9c:	bl	404c10 <strlen@plt>
  407ba0:	cmp	x0, #0x17
  407ba4:	b.ne	407c24 <get_guid@@Base+0xa4>  // b.any
  407ba8:	mov	w8, #0x2                   	// #2
  407bac:	ldrb	w9, [x19, x8]
  407bb0:	cmp	w9, #0x3a
  407bb4:	b.ne	407c24 <get_guid@@Base+0xa4>  // b.any
  407bb8:	add	x8, x8, #0x3
  407bbc:	cmp	x8, #0x17
  407bc0:	b.ne	407bac <get_guid@@Base+0x2c>  // b.any
  407bc4:	mov	w21, #0x38                  	// #56
  407bc8:	str	xzr, [x20]
  407bcc:	add	x1, x29, #0x18
  407bd0:	mov	w2, #0x10                  	// #16
  407bd4:	mov	x0, x19
  407bd8:	bl	404c00 <strtoul@plt>
  407bdc:	mov	x8, x0
  407be0:	cmp	x0, #0xff
  407be4:	mov	w0, #0xffffffff            	// #-1
  407be8:	b.hi	407c28 <get_guid@@Base+0xa8>  // b.pmore
  407bec:	ldr	x9, [x29, #24]
  407bf0:	add	x10, x19, #0x2
  407bf4:	cmp	x10, x9
  407bf8:	b.ne	407c28 <get_guid@@Base+0xa8>  // b.any
  407bfc:	ldr	x9, [x20]
  407c00:	lsl	x8, x8, x21
  407c04:	sub	x21, x21, #0x8
  407c08:	cmn	x21, #0x8
  407c0c:	orr	x8, x9, x8
  407c10:	add	x19, x19, #0x3
  407c14:	str	x8, [x20]
  407c18:	b.ne	407bcc <get_guid@@Base+0x4c>  // b.any
  407c1c:	mov	w0, wzr
  407c20:	b	407c28 <get_guid@@Base+0xa8>
  407c24:	mov	w0, #0xffffffff            	// #-1
  407c28:	ldp	x20, x19, [sp, #32]
  407c2c:	ldr	x21, [sp, #16]
  407c30:	ldp	x29, x30, [sp], #48
  407c34:	ret

0000000000407c38 <get_real_family@@Base>:
  407c38:	cmp	w0, #0x5
  407c3c:	mov	w0, w1
  407c40:	b.ne	407c58 <get_real_family@@Base+0x20>  // b.any
  407c44:	cmp	w0, #0x80
  407c48:	b.eq	407c5c <get_real_family@@Base+0x24>  // b.none
  407c4c:	cmp	w0, #0x81
  407c50:	b.ne	407c58 <get_real_family@@Base+0x20>  // b.any
  407c54:	mov	w0, #0xa                   	// #10
  407c58:	ret
  407c5c:	mov	w0, #0x2                   	// #2
  407c60:	ret

0000000000407c64 <get_rtnl_link_stats_rta@@Base>:
  407c64:	stp	x29, x30, [sp, #-64]!
  407c68:	stp	x28, x23, [sp, #16]
  407c6c:	stp	x22, x21, [sp, #32]
  407c70:	stp	x20, x19, [sp, #48]
  407c74:	mov	x29, sp
  407c78:	sub	sp, sp, #0x9b0
  407c7c:	ldr	x22, [x1, #184]
  407c80:	mov	x19, x0
  407c84:	cbz	x22, 407c94 <get_rtnl_link_stats_rta@@Base+0x30>
  407c88:	mov	w20, #0xc0                  	// #192
  407c8c:	mov	x21, x19
  407c90:	b	407ca4 <get_rtnl_link_stats_rta@@Base+0x40>
  407c94:	ldr	x22, [x1, #56]
  407c98:	cbz	x22, 407d0c <get_rtnl_link_stats_rta@@Base+0xa8>
  407c9c:	sub	x21, x29, #0x60
  407ca0:	mov	w20, #0x60                  	// #96
  407ca4:	ldrh	w8, [x22]
  407ca8:	sub	x23, x8, #0x4
  407cac:	subs	w9, w20, w23
  407cb0:	mov	w8, w20
  407cb4:	b.le	407ccc <get_rtnl_link_stats_rta@@Base+0x68>
  407cb8:	add	x0, x21, x23
  407cbc:	sxtw	x2, w9
  407cc0:	mov	w1, wzr
  407cc4:	bl	404dc0 <memset@plt>
  407cc8:	mov	w8, w23
  407ccc:	add	x1, x22, #0x4
  407cd0:	sxtw	x2, w8
  407cd4:	mov	x0, x21
  407cd8:	bl	404be0 <memcpy@plt>
  407cdc:	cmp	x21, x19
  407ce0:	b.eq	407cf0 <get_rtnl_link_stats_rta@@Base+0x8c>  // b.none
  407ce4:	mov	x0, x19
  407ce8:	mov	x1, x21
  407cec:	bl	407da8 <get_rtnl_link_stats_rta@@Base+0x144>
  407cf0:	mov	w0, w20
  407cf4:	add	sp, sp, #0x9b0
  407cf8:	ldp	x20, x19, [sp, #48]
  407cfc:	ldp	x22, x21, [sp, #32]
  407d00:	ldp	x28, x23, [sp, #16]
  407d04:	ldp	x29, x30, [sp], #64
  407d08:	ret
  407d0c:	ldr	x2, [x1, #96]
  407d10:	cbz	x2, 407d40 <get_rtnl_link_stats_rta@@Base+0xdc>
  407d14:	ldrh	w8, [x2], #4
  407d18:	add	x0, sp, #0x8
  407d1c:	mov	w1, #0x128                 	// #296
  407d20:	sub	w3, w8, #0x4
  407d24:	bl	40c7d8 <parse_rtattr@@Base>
  407d28:	ldr	x1, [sp, #32]
  407d2c:	cbz	x1, 407d38 <get_rtnl_link_stats_rta@@Base+0xd4>
  407d30:	mov	x0, x19
  407d34:	bl	407d48 <get_rtnl_link_stats_rta@@Base+0xe4>
  407d38:	mov	w20, #0xc0                  	// #192
  407d3c:	b	407cf0 <get_rtnl_link_stats_rta@@Base+0x8c>
  407d40:	mov	w20, #0xffffffff            	// #-1
  407d44:	b	407cf0 <get_rtnl_link_stats_rta@@Base+0x8c>
  407d48:	movi	v0.2d, #0x0
  407d4c:	stp	q0, q0, [x0, #160]
  407d50:	stp	q0, q0, [x0, #128]
  407d54:	stp	q0, q0, [x0, #96]
  407d58:	stp	q0, q0, [x0, #64]
  407d5c:	stp	q0, q0, [x0, #32]
  407d60:	stp	q0, q0, [x0]
  407d64:	ldur	x8, [x1, #12]
  407d68:	str	x8, [x0]
  407d6c:	ldur	x8, [x1, #20]
  407d70:	str	x8, [x0, #16]
  407d74:	ldur	x8, [x1, #44]
  407d78:	str	x8, [x0, #8]
  407d7c:	ldur	x8, [x1, #52]
  407d80:	str	x8, [x0, #24]
  407d84:	ldur	x8, [x1, #108]
  407d88:	str	x8, [x0, #32]
  407d8c:	ldur	x8, [x1, #116]
  407d90:	str	x8, [x0, #40]
  407d94:	ldur	x8, [x1, #188]
  407d98:	str	x8, [x0, #64]
  407d9c:	ldur	x8, [x1, #252]
  407da0:	str	x8, [x0, #104]
  407da4:	ret
  407da8:	add	x8, x1, #0x60
  407dac:	ldr	w9, [x1], #4
  407db0:	cmp	x1, x8
  407db4:	str	x9, [x0], #8
  407db8:	b.cc	407dac <get_rtnl_link_stats_rta@@Base+0x148>  // b.lo, b.ul, b.last
  407dbc:	ret

0000000000407dc0 <strlcpy@@Base>:
  407dc0:	stp	x29, x30, [sp, #-48]!
  407dc4:	stp	x20, x19, [sp, #32]
  407dc8:	mov	x19, x0
  407dcc:	mov	x0, x1
  407dd0:	stp	x22, x21, [sp, #16]
  407dd4:	mov	x29, sp
  407dd8:	mov	x22, x2
  407ddc:	mov	x21, x1
  407de0:	bl	404c10 <strlen@plt>
  407de4:	mov	x20, x0
  407de8:	cbz	x22, 407e0c <strlcpy@@Base+0x4c>
  407dec:	sub	x8, x22, #0x1
  407df0:	cmp	x20, x8
  407df4:	csel	x22, x20, x8, cc  // cc = lo, ul, last
  407df8:	mov	x0, x19
  407dfc:	mov	x1, x21
  407e00:	mov	x2, x22
  407e04:	bl	404be0 <memcpy@plt>
  407e08:	strb	wzr, [x19, x22]
  407e0c:	mov	x0, x20
  407e10:	ldp	x20, x19, [sp, #32]
  407e14:	ldp	x22, x21, [sp, #16]
  407e18:	ldp	x29, x30, [sp], #48
  407e1c:	ret

0000000000407e20 <strlcat@@Base>:
  407e20:	stp	x29, x30, [sp, #-48]!
  407e24:	stp	x22, x21, [sp, #16]
  407e28:	stp	x20, x19, [sp, #32]
  407e2c:	mov	x29, sp
  407e30:	mov	x21, x2
  407e34:	mov	x20, x1
  407e38:	mov	x22, x0
  407e3c:	bl	404c10 <strlen@plt>
  407e40:	mov	x19, x0
  407e44:	cmp	x0, x21
  407e48:	b.cs	407e60 <strlcat@@Base+0x40>  // b.hs, b.nlast
  407e4c:	add	x0, x22, x19
  407e50:	sub	x2, x21, x19
  407e54:	mov	x1, x20
  407e58:	bl	407dc0 <strlcpy@@Base>
  407e5c:	b	407e68 <strlcat@@Base+0x48>
  407e60:	mov	x0, x20
  407e64:	bl	404c10 <strlen@plt>
  407e68:	add	x0, x0, x19
  407e6c:	ldp	x20, x19, [sp, #32]
  407e70:	ldp	x22, x21, [sp, #16]
  407e74:	ldp	x29, x30, [sp], #48
  407e78:	ret

0000000000407e7c <drop_cap@@Base>:
  407e7c:	stp	x29, x30, [sp, #-32]!
  407e80:	str	x19, [sp, #16]
  407e84:	mov	x29, sp
  407e88:	bl	404cc0 <getuid@plt>
  407e8c:	cbz	w0, 407ee0 <drop_cap@@Base+0x64>
  407e90:	bl	404c70 <geteuid@plt>
  407e94:	cbz	w0, 407ee0 <drop_cap@@Base+0x64>
  407e98:	bl	404ef0 <cap_get_proc@plt>
  407e9c:	cbz	x0, 407eec <drop_cap@@Base+0x70>
  407ea0:	add	x3, x29, #0x1c
  407ea4:	mov	w1, #0xc                   	// #12
  407ea8:	mov	w2, #0x2                   	// #2
  407eac:	mov	x19, x0
  407eb0:	bl	404df0 <cap_get_flag@plt>
  407eb4:	cbnz	w0, 407eec <drop_cap@@Base+0x70>
  407eb8:	ldr	w8, [x29, #28]
  407ebc:	cbnz	w8, 407ed8 <drop_cap@@Base+0x5c>
  407ec0:	mov	x0, x19
  407ec4:	bl	404fe0 <cap_clear@plt>
  407ec8:	cbnz	w0, 407eec <drop_cap@@Base+0x70>
  407ecc:	mov	x0, x19
  407ed0:	bl	404e30 <cap_set_proc@plt>
  407ed4:	cbnz	w0, 407eec <drop_cap@@Base+0x70>
  407ed8:	mov	x0, x19
  407edc:	bl	405020 <cap_free@plt>
  407ee0:	ldr	x19, [sp, #16]
  407ee4:	ldp	x29, x30, [sp], #32
  407ee8:	ret
  407eec:	mov	w0, #0x1                   	// #1
  407ef0:	bl	404c20 <exit@plt>

0000000000407ef4 <get_time@@Base>:
  407ef4:	sub	sp, sp, #0x40
  407ef8:	str	x21, [sp, #40]
  407efc:	mov	x21, x1
  407f00:	stp	x20, x19, [sp, #48]
  407f04:	mov	x19, x0
  407f08:	add	x1, sp, #0x8
  407f0c:	mov	x0, x21
  407f10:	str	d8, [sp, #16]
  407f14:	stp	x29, x30, [sp, #24]
  407f18:	add	x29, sp, #0x10
  407f1c:	bl	404c60 <strtod@plt>
  407f20:	ldr	x20, [sp, #8]
  407f24:	cmp	x20, x21
  407f28:	b.eq	407fec <get_time@@Base+0xf8>  // b.none
  407f2c:	ldrb	w8, [x20]
  407f30:	mov	v8.16b, v0.16b
  407f34:	cbz	w8, 408004 <get_time@@Base+0x110>
  407f38:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407f3c:	add	x1, x1, #0x79
  407f40:	mov	x0, x20
  407f44:	bl	404e10 <strcasecmp@plt>
  407f48:	cbz	w0, 407ff4 <get_time@@Base+0x100>
  407f4c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407f50:	add	x1, x1, #0x90
  407f54:	mov	x0, x20
  407f58:	bl	404e10 <strcasecmp@plt>
  407f5c:	cbz	w0, 407ff4 <get_time@@Base+0x100>
  407f60:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407f64:	add	x1, x1, #0x95
  407f68:	mov	x0, x20
  407f6c:	bl	404e10 <strcasecmp@plt>
  407f70:	cbz	w0, 407ff4 <get_time@@Base+0x100>
  407f74:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407f78:	add	x1, x1, #0x415
  407f7c:	mov	x0, x20
  407f80:	bl	404e10 <strcasecmp@plt>
  407f84:	cbz	w0, 408028 <get_time@@Base+0x134>
  407f88:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407f8c:	add	x1, x1, #0x8f
  407f90:	mov	x0, x20
  407f94:	bl	404e10 <strcasecmp@plt>
  407f98:	cbz	w0, 408028 <get_time@@Base+0x134>
  407f9c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407fa0:	add	x1, x1, #0x94
  407fa4:	mov	x0, x20
  407fa8:	bl	404e10 <strcasecmp@plt>
  407fac:	cbz	w0, 408028 <get_time@@Base+0x134>
  407fb0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407fb4:	add	x1, x1, #0x42e
  407fb8:	mov	x0, x20
  407fbc:	bl	404e10 <strcasecmp@plt>
  407fc0:	cbz	w0, 408004 <get_time@@Base+0x110>
  407fc4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407fc8:	add	x1, x1, #0x3df
  407fcc:	mov	x0, x20
  407fd0:	bl	404e10 <strcasecmp@plt>
  407fd4:	cbz	w0, 408004 <get_time@@Base+0x110>
  407fd8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  407fdc:	add	x1, x1, #0x3e4
  407fe0:	mov	x0, x20
  407fe4:	bl	404e10 <strcasecmp@plt>
  407fe8:	cbz	w0, 408004 <get_time@@Base+0x110>
  407fec:	mov	w0, #0xffffffff            	// #-1
  407ff0:	b	408010 <get_time@@Base+0x11c>
  407ff4:	mov	x8, #0x848000000000        	// #145685290680320
  407ff8:	movk	x8, #0x412e, lsl #48
  407ffc:	fmov	d0, x8
  408000:	fmul	d8, d8, d0
  408004:	fcvtzu	w8, d8
  408008:	mov	w0, wzr
  40800c:	str	w8, [x19]
  408010:	ldp	x20, x19, [sp, #48]
  408014:	ldr	x21, [sp, #40]
  408018:	ldp	x29, x30, [sp, #24]
  40801c:	ldr	d8, [sp, #16]
  408020:	add	sp, sp, #0x40
  408024:	ret
  408028:	mov	x8, #0x400000000000        	// #70368744177664
  40802c:	movk	x8, #0x408f, lsl #48
  408030:	b	407ffc <get_time@@Base+0x108>

0000000000408034 <sprint_time@@Base>:
  408034:	stp	x29, x30, [sp, #-32]!
  408038:	str	x19, [sp, #16]
  40803c:	mov	x19, x1
  408040:	mov	w1, w0
  408044:	mov	x0, x19
  408048:	mov	x29, sp
  40804c:	bl	408060 <sprint_time@@Base+0x2c>
  408050:	mov	x0, x19
  408054:	ldr	x19, [sp, #16]
  408058:	ldp	x29, x30, [sp], #32
  40805c:	ret
  408060:	stp	x29, x30, [sp, #-16]!
  408064:	mov	w8, #0x4240                	// #16960
  408068:	movk	w8, #0xf, lsl #16
  40806c:	cmp	w1, w8
  408070:	ucvtf	d0, w1
  408074:	mov	x29, sp
  408078:	b.cc	408098 <sprint_time@@Base+0x64>  // b.lo, b.ul, b.last
  40807c:	mov	x8, #0x848000000000        	// #145685290680320
  408080:	movk	x8, #0x412e, lsl #48
  408084:	fmov	d1, x8
  408088:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40808c:	fdiv	d0, d0, d1
  408090:	add	x2, x2, #0x40b
  408094:	b	4080bc <sprint_time@@Base+0x88>
  408098:	mov	w3, w1
  40809c:	cmp	w1, #0x3e8
  4080a0:	b.cc	4080cc <sprint_time@@Base+0x98>  // b.lo, b.ul, b.last
  4080a4:	mov	x8, #0x400000000000        	// #70368744177664
  4080a8:	movk	x8, #0x408f, lsl #48
  4080ac:	fmov	d1, x8
  4080b0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4080b4:	fdiv	d0, d0, d1
  4080b8:	add	x2, x2, #0x411
  4080bc:	mov	w1, #0x3f                  	// #63
  4080c0:	bl	404d00 <snprintf@plt>
  4080c4:	ldp	x29, x30, [sp], #16
  4080c8:	ret
  4080cc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4080d0:	add	x2, x2, #0x418
  4080d4:	mov	w1, #0x3f                  	// #63
  4080d8:	bl	404d00 <snprintf@plt>
  4080dc:	ldp	x29, x30, [sp], #16
  4080e0:	ret

00000000004080e4 <get_time64@@Base>:
  4080e4:	sub	sp, sp, #0x40
  4080e8:	str	x21, [sp, #40]
  4080ec:	mov	x21, x1
  4080f0:	stp	x20, x19, [sp, #48]
  4080f4:	mov	x19, x0
  4080f8:	add	x1, sp, #0x8
  4080fc:	mov	x0, x21
  408100:	str	d8, [sp, #16]
  408104:	stp	x29, x30, [sp, #24]
  408108:	add	x29, sp, #0x10
  40810c:	bl	404c60 <strtod@plt>
  408110:	ldr	x20, [sp, #8]
  408114:	cmp	x20, x21
  408118:	b.eq	408218 <get_time64@@Base+0x134>  // b.none
  40811c:	ldrb	w8, [x20]
  408120:	mov	v8.16b, v0.16b
  408124:	cbz	w8, 408230 <get_time64@@Base+0x14c>
  408128:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40812c:	add	x1, x1, #0x79
  408130:	mov	x0, x20
  408134:	bl	404e10 <strcasecmp@plt>
  408138:	cbz	w0, 408220 <get_time64@@Base+0x13c>
  40813c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408140:	add	x1, x1, #0x90
  408144:	mov	x0, x20
  408148:	bl	404e10 <strcasecmp@plt>
  40814c:	cbz	w0, 408220 <get_time64@@Base+0x13c>
  408150:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408154:	add	x1, x1, #0x95
  408158:	mov	x0, x20
  40815c:	bl	404e10 <strcasecmp@plt>
  408160:	cbz	w0, 408220 <get_time64@@Base+0x13c>
  408164:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408168:	add	x1, x1, #0x415
  40816c:	mov	x0, x20
  408170:	bl	404e10 <strcasecmp@plt>
  408174:	cbz	w0, 408254 <get_time64@@Base+0x170>
  408178:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40817c:	add	x1, x1, #0x8f
  408180:	mov	x0, x20
  408184:	bl	404e10 <strcasecmp@plt>
  408188:	cbz	w0, 408254 <get_time64@@Base+0x170>
  40818c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408190:	add	x1, x1, #0x94
  408194:	mov	x0, x20
  408198:	bl	404e10 <strcasecmp@plt>
  40819c:	cbz	w0, 408254 <get_time64@@Base+0x170>
  4081a0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4081a4:	add	x1, x1, #0x42e
  4081a8:	mov	x0, x20
  4081ac:	bl	404e10 <strcasecmp@plt>
  4081b0:	cbz	w0, 408260 <get_time64@@Base+0x17c>
  4081b4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4081b8:	add	x1, x1, #0x3df
  4081bc:	mov	x0, x20
  4081c0:	bl	404e10 <strcasecmp@plt>
  4081c4:	cbz	w0, 408260 <get_time64@@Base+0x17c>
  4081c8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4081cc:	add	x1, x1, #0x3e4
  4081d0:	mov	x0, x20
  4081d4:	bl	404e10 <strcasecmp@plt>
  4081d8:	cbz	w0, 408260 <get_time64@@Base+0x17c>
  4081dc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4081e0:	add	x1, x1, #0x435
  4081e4:	mov	x0, x20
  4081e8:	bl	404e10 <strcasecmp@plt>
  4081ec:	cbz	w0, 408230 <get_time64@@Base+0x14c>
  4081f0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4081f4:	add	x1, x1, #0x3ea
  4081f8:	mov	x0, x20
  4081fc:	bl	404e10 <strcasecmp@plt>
  408200:	cbz	w0, 408230 <get_time64@@Base+0x14c>
  408204:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408208:	add	x1, x1, #0x3ef
  40820c:	mov	x0, x20
  408210:	bl	404e10 <strcasecmp@plt>
  408214:	cbz	w0, 408230 <get_time64@@Base+0x14c>
  408218:	mov	w0, #0xffffffff            	// #-1
  40821c:	b	40823c <get_time64@@Base+0x158>
  408220:	mov	x8, #0xcd6500000000        	// #225833675390976
  408224:	movk	x8, #0x41cd, lsl #48
  408228:	fmov	d0, x8
  40822c:	fmul	d8, d8, d0
  408230:	fcvtzs	x8, d8
  408234:	mov	w0, wzr
  408238:	str	x8, [x19]
  40823c:	ldp	x20, x19, [sp, #48]
  408240:	ldr	x21, [sp, #40]
  408244:	ldp	x29, x30, [sp, #24]
  408248:	ldr	d8, [sp, #16]
  40824c:	add	sp, sp, #0x40
  408250:	ret
  408254:	mov	x8, #0x848000000000        	// #145685290680320
  408258:	movk	x8, #0x412e, lsl #48
  40825c:	b	408228 <get_time64@@Base+0x144>
  408260:	mov	x8, #0x400000000000        	// #70368744177664
  408264:	movk	x8, #0x408f, lsl #48
  408268:	b	408228 <get_time64@@Base+0x144>

000000000040826c <sprint_time64@@Base>:
  40826c:	stp	x29, x30, [sp, #-32]!
  408270:	str	x19, [sp, #16]
  408274:	mov	x19, x1
  408278:	mov	x1, x0
  40827c:	mov	x0, x19
  408280:	mov	x29, sp
  408284:	bl	408298 <sprint_time64@@Base+0x2c>
  408288:	mov	x0, x19
  40828c:	ldr	x19, [sp, #16]
  408290:	ldp	x29, x30, [sp], #32
  408294:	ret
  408298:	stp	x29, x30, [sp, #-16]!
  40829c:	mov	w8, #0xca00                	// #51712
  4082a0:	movk	w8, #0x3b9a, lsl #16
  4082a4:	cmp	x1, x8
  4082a8:	scvtf	d0, x1
  4082ac:	mov	x29, sp
  4082b0:	b.lt	4082d0 <sprint_time64@@Base+0x64>  // b.tstop
  4082b4:	mov	x8, #0xcd6500000000        	// #225833675390976
  4082b8:	movk	x8, #0x41cd, lsl #48
  4082bc:	fmov	d1, x8
  4082c0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4082c4:	fdiv	d0, d0, d1
  4082c8:	add	x2, x2, #0x41d
  4082cc:	b	408320 <sprint_time64@@Base+0xb4>
  4082d0:	mov	w8, #0x4240                	// #16960
  4082d4:	movk	w8, #0xf, lsl #16
  4082d8:	mov	x3, x1
  4082dc:	cmp	x1, x8
  4082e0:	b.lt	408300 <sprint_time64@@Base+0x94>  // b.tstop
  4082e4:	mov	x8, #0x848000000000        	// #145685290680320
  4082e8:	movk	x8, #0x412e, lsl #48
  4082ec:	fmov	d1, x8
  4082f0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4082f4:	fdiv	d0, d0, d1
  4082f8:	add	x2, x2, #0x423
  4082fc:	b	408320 <sprint_time64@@Base+0xb4>
  408300:	cmp	x3, #0x3e8
  408304:	b.lt	408330 <sprint_time64@@Base+0xc4>  // b.tstop
  408308:	mov	x8, #0x400000000000        	// #70368744177664
  40830c:	movk	x8, #0x408f, lsl #48
  408310:	fmov	d1, x8
  408314:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408318:	fdiv	d0, d0, d1
  40831c:	add	x2, x2, #0x42a
  408320:	mov	w1, #0x3f                  	// #63
  408324:	bl	404d00 <snprintf@plt>
  408328:	ldp	x29, x30, [sp], #16
  40832c:	ret
  408330:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408334:	add	x2, x2, #0x431
  408338:	mov	w1, #0x3f                  	// #63
  40833c:	bl	404d00 <snprintf@plt>
  408340:	ldp	x29, x30, [sp], #16
  408344:	ret
  408348:	stp	x29, x30, [sp, #-48]!
  40834c:	str	x21, [sp, #16]
  408350:	stp	x20, x19, [sp, #32]
  408354:	mov	x19, x1
  408358:	mov	x20, x0
  40835c:	mov	x21, xzr
  408360:	mov	x29, sp
  408364:	add	x1, x29, #0x18
  408368:	mov	x0, x19
  40836c:	mov	w2, wzr
  408370:	bl	404c00 <strtoul@plt>
  408374:	cmp	x0, #0xff
  408378:	mov	w8, #0x1                   	// #1
  40837c:	b.hi	4083b8 <sprint_time64@@Base+0x14c>  // b.pmore
  408380:	ldr	x9, [x29, #24]
  408384:	cmp	x9, x19
  408388:	b.eq	4083b8 <sprint_time64@@Base+0x14c>  // b.none
  40838c:	strb	w0, [x20, x21]
  408390:	ldrb	w8, [x9]
  408394:	cbz	w8, 4083cc <sprint_time64@@Base+0x160>
  408398:	cmp	x21, #0x3
  40839c:	cset	w10, ne  // ne = any
  4083a0:	cmp	w8, #0x2e
  4083a4:	cset	w8, eq  // eq = none
  4083a8:	and	w11, w10, w8
  4083ac:	tst	w10, w8
  4083b0:	csinc	x19, x19, x9, eq  // eq = none
  4083b4:	eor	w8, w11, #0x1
  4083b8:	cbnz	w8, 4083d4 <sprint_time64@@Base+0x168>
  4083bc:	add	x21, x21, #0x1
  4083c0:	cmp	x21, #0x4
  4083c4:	b.ne	408364 <sprint_time64@@Base+0xf8>  // b.any
  4083c8:	b	4083dc <sprint_time64@@Base+0x170>
  4083cc:	mov	w8, #0x2                   	// #2
  4083d0:	cbz	w8, 4083bc <sprint_time64@@Base+0x150>
  4083d4:	cmp	w8, #0x2
  4083d8:	b.ne	4083e4 <sprint_time64@@Base+0x178>  // b.any
  4083dc:	mov	w0, #0x1                   	// #1
  4083e0:	b	4083e8 <sprint_time64@@Base+0x17c>
  4083e4:	mov	w0, #0xffffffff            	// #-1
  4083e8:	ldp	x20, x19, [sp, #32]
  4083ec:	ldr	x21, [sp, #16]
  4083f0:	ldp	x29, x30, [sp], #48
  4083f4:	ret

00000000004083f8 <namehash@@Base>:
  4083f8:	ldrb	w8, [x0]
  4083fc:	cbz	w8, 40841c <namehash@@Base+0x24>
  408400:	add	x9, x0, #0x1
  408404:	mov	w0, #0x1505                	// #5381
  408408:	add	w10, w0, w0, lsl #5
  40840c:	add	w0, w10, w8, uxtb
  408410:	ldrb	w8, [x9], #1
  408414:	cbnz	w8, 408408 <namehash@@Base+0x10>
  408418:	ret
  40841c:	mov	w0, #0x1505                	// #5381
  408420:	ret

0000000000408424 <ll_remember_index@@Base>:
  408424:	sub	sp, sp, #0x1f0
  408428:	stp	x29, x30, [sp, #432]
  40842c:	stp	x22, x21, [sp, #464]
  408430:	stp	x20, x19, [sp, #480]
  408434:	ldrh	w19, [x0, #4]
  408438:	str	x28, [sp, #448]
  40843c:	add	x29, sp, #0x1b0
  408440:	and	w8, w19, #0xfffe
  408444:	cmp	w8, #0x10
  408448:	b.ne	4084c8 <ll_remember_index@@Base+0xa4>  // b.any
  40844c:	ldr	w8, [x0]
  408450:	mov	x22, x0
  408454:	subs	w21, w8, #0x20
  408458:	b.cs	408464 <ll_remember_index@@Base+0x40>  // b.hs, b.nlast
  40845c:	mov	w0, #0xffffffff            	// #-1
  408460:	b	4084cc <ll_remember_index@@Base+0xa8>
  408464:	ldr	w0, [x22, #20]
  408468:	bl	4084e4 <ll_remember_index@@Base+0xc0>
  40846c:	cmp	w19, #0x11
  408470:	mov	x19, x0
  408474:	b.ne	408488 <ll_remember_index@@Base+0x64>  // b.any
  408478:	cbz	x19, 4084c8 <ll_remember_index@@Base+0xa4>
  40847c:	mov	x0, x19
  408480:	bl	408520 <ll_remember_index@@Base+0xfc>
  408484:	b	4084c8 <ll_remember_index@@Base+0xa4>
  408488:	add	x2, x22, #0x20
  40848c:	mov	x0, sp
  408490:	mov	w1, #0x35                  	// #53
  408494:	mov	w4, #0x8000                	// #32768
  408498:	mov	w3, w21
  40849c:	add	x20, x22, #0x10
  4084a0:	bl	40c7f4 <parse_rtattr_flags@@Base>
  4084a4:	cbz	x19, 4084bc <ll_remember_index@@Base+0x98>
  4084a8:	mov	x2, sp
  4084ac:	mov	x0, x19
  4084b0:	mov	x1, x20
  4084b4:	bl	40854c <ll_remember_index@@Base+0x128>
  4084b8:	b	4084c8 <ll_remember_index@@Base+0xa4>
  4084bc:	mov	x1, sp
  4084c0:	mov	x0, x20
  4084c4:	bl	4085a8 <ll_remember_index@@Base+0x184>
  4084c8:	mov	w0, wzr
  4084cc:	ldp	x20, x19, [sp, #480]
  4084d0:	ldp	x22, x21, [sp, #464]
  4084d4:	ldr	x28, [sp, #448]
  4084d8:	ldp	x29, x30, [sp, #432]
  4084dc:	add	sp, sp, #0x1f0
  4084e0:	ret
  4084e4:	adrp	x9, 41e000 <memcpy@GLIBC_2.17>
  4084e8:	and	w8, w0, #0x3ff
  4084ec:	add	x9, x9, #0xd18
  4084f0:	ldr	x9, [x9, w8, uxtw #3]
  4084f4:	cbz	x9, 408510 <ll_remember_index@@Base+0xec>
  4084f8:	ldr	w10, [x9, #36]
  4084fc:	cmp	w10, w0
  408500:	csel	x8, x9, x8, eq  // eq = none
  408504:	b.eq	408518 <ll_remember_index@@Base+0xf4>  // b.none
  408508:	ldr	x9, [x9]
  40850c:	cbnz	x9, 4084f8 <ll_remember_index@@Base+0xd4>
  408510:	mov	x0, xzr
  408514:	ret
  408518:	mov	x0, x8
  40851c:	ret
  408520:	stp	x29, x30, [sp, #-32]!
  408524:	str	x19, [sp, #16]
  408528:	mov	x29, sp
  40852c:	mov	x19, x0
  408530:	bl	408a0c <ll_init_map@@Base+0x94>
  408534:	mov	w1, #0x1                   	// #1
  408538:	mov	x0, x19
  40853c:	bl	408a48 <ll_init_map@@Base+0xd0>
  408540:	ldr	x19, [sp, #16]
  408544:	ldp	x29, x30, [sp], #32
  408548:	ret
  40854c:	stp	x29, x30, [sp, #-48]!
  408550:	stp	x20, x19, [sp, #32]
  408554:	ldr	x8, [x2, #24]
  408558:	str	x21, [sp, #16]
  40855c:	mov	x19, x2
  408560:	mov	x20, x1
  408564:	mov	x21, x0
  408568:	mov	x29, sp
  40856c:	cbz	x8, 408588 <ll_remember_index@@Base+0x164>
  408570:	mov	x0, x8
  408574:	bl	408b1c <ll_init_map@@Base+0x1a4>
  408578:	mov	x2, x0
  40857c:	mov	x0, x21
  408580:	mov	x1, x20
  408584:	bl	408ab8 <ll_init_map@@Base+0x140>
  408588:	mov	x0, x21
  40858c:	mov	x1, x20
  408590:	mov	x2, x19
  408594:	bl	408b24 <ll_init_map@@Base+0x1ac>
  408598:	ldp	x20, x19, [sp, #32]
  40859c:	ldr	x21, [sp, #16]
  4085a0:	ldp	x29, x30, [sp], #48
  4085a4:	ret
  4085a8:	stp	x29, x30, [sp, #-32]!
  4085ac:	stp	x20, x19, [sp, #16]
  4085b0:	ldr	x8, [x1, #24]
  4085b4:	mov	x29, sp
  4085b8:	cbz	x8, 4085ec <ll_remember_index@@Base+0x1c8>
  4085bc:	mov	x20, x0
  4085c0:	mov	x0, x8
  4085c4:	mov	x19, x1
  4085c8:	bl	408b1c <ll_init_map@@Base+0x1a4>
  4085cc:	mov	x1, x0
  4085d0:	mov	x0, x20
  4085d4:	mov	x2, xzr
  4085d8:	bl	408cc0 <ll_init_map@@Base+0x348>
  4085dc:	cbz	x0, 4085ec <ll_remember_index@@Base+0x1c8>
  4085e0:	mov	x1, x20
  4085e4:	mov	x2, x19
  4085e8:	bl	408c20 <ll_init_map@@Base+0x2a8>
  4085ec:	ldp	x20, x19, [sp, #16]
  4085f0:	ldp	x29, x30, [sp], #32
  4085f4:	ret

00000000004085f8 <ll_idx_n2a@@Base>:
  4085f8:	stp	x29, x30, [sp, #-32]!
  4085fc:	str	x19, [sp, #16]
  408600:	adrp	x19, 41e000 <memcpy@GLIBC_2.17>
  408604:	add	x19, x19, #0xcf0
  408608:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40860c:	mov	w3, w0
  408610:	add	x2, x2, #0x438
  408614:	mov	w1, #0x10                  	// #16
  408618:	mov	x0, x19
  40861c:	mov	x29, sp
  408620:	bl	404d00 <snprintf@plt>
  408624:	mov	x0, x19
  408628:	ldr	x19, [sp, #16]
  40862c:	ldp	x29, x30, [sp], #32
  408630:	ret

0000000000408634 <ll_index_to_name@@Base>:
  408634:	stp	x29, x30, [sp, #-32]!
  408638:	stp	x20, x19, [sp, #16]
  40863c:	mov	x29, sp
  408640:	cbz	w0, 408658 <ll_index_to_name@@Base+0x24>
  408644:	mov	w19, w0
  408648:	bl	4084e4 <ll_remember_index@@Base+0xc0>
  40864c:	cbz	x0, 408664 <ll_index_to_name@@Base+0x30>
  408650:	add	x20, x0, #0x40
  408654:	b	4086b8 <ll_index_to_name@@Base+0x84>
  408658:	adrp	x20, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40865c:	add	x20, x20, #0x43d
  408660:	b	4086b8 <ll_index_to_name@@Base+0x84>
  408664:	mov	w1, w19
  408668:	bl	4086c8 <ll_index_to_name@@Base+0x94>
  40866c:	cmp	w0, w19
  408670:	b.ne	408680 <ll_index_to_name@@Base+0x4c>  // b.any
  408674:	mov	w0, w19
  408678:	bl	4084e4 <ll_remember_index@@Base+0xc0>
  40867c:	cbnz	x0, 408650 <ll_index_to_name@@Base+0x1c>
  408680:	adrp	x20, 41e000 <memcpy@GLIBC_2.17>
  408684:	add	x20, x20, #0xd00
  408688:	mov	w0, w19
  40868c:	mov	x1, x20
  408690:	bl	404db0 <if_indextoname@plt>
  408694:	cbnz	x0, 4086b8 <ll_index_to_name@@Base+0x84>
  408698:	adrp	x20, 41e000 <memcpy@GLIBC_2.17>
  40869c:	add	x20, x20, #0xd00
  4086a0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4086a4:	add	x2, x2, #0x438
  4086a8:	mov	w1, #0x10                  	// #16
  4086ac:	mov	x0, x20
  4086b0:	mov	w3, w19
  4086b4:	bl	404d00 <snprintf@plt>
  4086b8:	mov	x0, x20
  4086bc:	ldp	x20, x19, [sp, #16]
  4086c0:	ldp	x29, x30, [sp], #32
  4086c4:	ret
  4086c8:	stp	x29, x30, [sp, #-48]!
  4086cc:	str	x28, [sp, #16]
  4086d0:	stp	x20, x19, [sp, #32]
  4086d4:	mov	x29, sp
  4086d8:	sub	sp, sp, #0x460
  4086dc:	mov	w20, w1
  4086e0:	mov	x19, x0
  4086e4:	add	x0, sp, #0x40
  4086e8:	mov	w2, #0x420                 	// #1056
  4086ec:	mov	w1, wzr
  4086f0:	bl	404dc0 <memset@plt>
  4086f4:	mov	x8, #0x20                  	// #32
  4086f8:	movk	x8, #0x12, lsl #32
  4086fc:	movk	x8, #0x1, lsl #48
  408700:	movi	v0.2d, #0x0
  408704:	mov	x0, sp
  408708:	mov	w1, wzr
  40870c:	str	w20, [sp, #84]
  408710:	str	xzr, [sp, #48]
  408714:	str	x8, [sp, #64]
  408718:	stp	q0, q0, [sp, #16]
  40871c:	str	q0, [sp]
  408720:	bl	40acb0 <rtnl_open@@Base>
  408724:	tbnz	w0, #31, 4087b0 <ll_index_to_name@@Base+0x17c>
  408728:	add	x0, sp, #0x40
  40872c:	mov	w1, #0x420                 	// #1056
  408730:	mov	w2, #0x1d                  	// #29
  408734:	mov	w3, #0x9                   	// #9
  408738:	bl	40c388 <addattr32@@Base>
  40873c:	cbz	x19, 408778 <ll_index_to_name@@Base+0x144>
  408740:	mov	x0, x19
  408744:	bl	406a48 <check_ifname@@Base>
  408748:	cmp	w0, #0x0
  40874c:	mov	w8, #0x35                  	// #53
  408750:	mov	w9, #0x3                   	// #3
  408754:	mov	x0, x19
  408758:	csel	w20, w9, w8, eq  // eq = none
  40875c:	bl	404c10 <strlen@plt>
  408760:	add	w4, w0, #0x1
  408764:	add	x0, sp, #0x40
  408768:	mov	w1, #0x420                 	// #1056
  40876c:	mov	w2, w20
  408770:	mov	x3, x19
  408774:	bl	40c2a8 <addattr_l@@Base>
  408778:	mov	x0, sp
  40877c:	add	x1, sp, #0x40
  408780:	add	x2, x29, #0x18
  408784:	bl	40bd74 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408788:	tbnz	w0, #31, 4087b8 <ll_index_to_name@@Base+0x184>
  40878c:	ldr	x0, [x29, #24]
  408790:	bl	408424 <ll_remember_index@@Base>
  408794:	mov	w19, w0
  408798:	cbnz	w0, 4087a4 <ll_index_to_name@@Base+0x170>
  40879c:	ldr	x8, [x29, #24]
  4087a0:	ldr	w19, [x8, #20]
  4087a4:	ldr	x0, [x29, #24]
  4087a8:	bl	404f30 <free@plt>
  4087ac:	b	4087bc <ll_index_to_name@@Base+0x188>
  4087b0:	mov	w19, wzr
  4087b4:	b	4087c4 <ll_index_to_name@@Base+0x190>
  4087b8:	mov	w19, wzr
  4087bc:	mov	x0, sp
  4087c0:	bl	40aae0 <rtnl_close@@Base>
  4087c4:	mov	w0, w19
  4087c8:	add	sp, sp, #0x460
  4087cc:	ldp	x20, x19, [sp, #32]
  4087d0:	ldr	x28, [sp, #16]
  4087d4:	ldp	x29, x30, [sp], #48
  4087d8:	ret

00000000004087dc <ll_index_to_type@@Base>:
  4087dc:	stp	x29, x30, [sp, #-16]!
  4087e0:	mov	x29, sp
  4087e4:	cbz	w0, 4087fc <ll_index_to_type@@Base+0x20>
  4087e8:	bl	4084e4 <ll_remember_index@@Base+0xc0>
  4087ec:	cbz	x0, 4087fc <ll_index_to_type@@Base+0x20>
  4087f0:	ldrh	w0, [x0, #40]
  4087f4:	ldp	x29, x30, [sp], #16
  4087f8:	ret
  4087fc:	mov	w0, #0xffffffff            	// #-1
  408800:	ldp	x29, x30, [sp], #16
  408804:	ret

0000000000408808 <ll_index_to_flags@@Base>:
  408808:	stp	x29, x30, [sp, #-16]!
  40880c:	mov	x29, sp
  408810:	cbz	w0, 408820 <ll_index_to_flags@@Base+0x18>
  408814:	bl	4084e4 <ll_remember_index@@Base+0xc0>
  408818:	cbz	x0, 408828 <ll_index_to_flags@@Base+0x20>
  40881c:	ldr	w0, [x0, #32]
  408820:	ldp	x29, x30, [sp], #16
  408824:	ret
  408828:	mov	w0, #0xffffffff            	// #-1
  40882c:	ldp	x29, x30, [sp], #16
  408830:	ret

0000000000408834 <ll_name_to_index@@Base>:
  408834:	stp	x29, x30, [sp, #-32]!
  408838:	str	x19, [sp, #16]
  40883c:	mov	x29, sp
  408840:	cbz	x0, 40886c <ll_name_to_index@@Base+0x38>
  408844:	mov	x19, x0
  408848:	bl	408890 <ll_name_to_index@@Base+0x5c>
  40884c:	cbz	x0, 408858 <ll_name_to_index@@Base+0x24>
  408850:	ldr	w0, [x0, #36]
  408854:	b	40886c <ll_name_to_index@@Base+0x38>
  408858:	mov	x0, x19
  40885c:	mov	w1, wzr
  408860:	bl	4086c8 <ll_index_to_name@@Base+0x94>
  408864:	cbz	w0, 408878 <ll_name_to_index@@Base+0x44>
  408868:	cbz	w0, 408884 <ll_name_to_index@@Base+0x50>
  40886c:	ldr	x19, [sp, #16]
  408870:	ldp	x29, x30, [sp], #32
  408874:	ret
  408878:	mov	x0, x19
  40887c:	bl	405030 <if_nametoindex@plt>
  408880:	cbnz	w0, 40886c <ll_name_to_index@@Base+0x38>
  408884:	mov	x0, x19
  408888:	bl	4088f8 <ll_name_to_index@@Base+0xc4>
  40888c:	b	40886c <ll_name_to_index@@Base+0x38>
  408890:	stp	x29, x30, [sp, #-48]!
  408894:	str	x21, [sp, #16]
  408898:	stp	x20, x19, [sp, #32]
  40889c:	mov	x29, sp
  4088a0:	mov	x19, x0
  4088a4:	bl	4083f8 <namehash@@Base>
  4088a8:	adrp	x9, 420000 <stderr@@GLIBC_2.17+0x1d30>
  4088ac:	and	w8, w0, #0x3ff
  4088b0:	add	x9, x9, #0xd18
  4088b4:	ldr	x21, [x9, w8, uxtw #3]
  4088b8:	cbz	x21, 4088e0 <ll_name_to_index@@Base+0xac>
  4088bc:	add	x0, x21, #0x30
  4088c0:	mov	x1, x19
  4088c4:	bl	404ec0 <strcmp@plt>
  4088c8:	sub	x8, x21, #0x10
  4088cc:	cmp	w0, #0x0
  4088d0:	csel	x20, x8, x20, eq  // eq = none
  4088d4:	cbz	w0, 4088e4 <ll_name_to_index@@Base+0xb0>
  4088d8:	ldr	x21, [x21]
  4088dc:	cbnz	x21, 4088bc <ll_name_to_index@@Base+0x88>
  4088e0:	mov	x20, xzr
  4088e4:	mov	x0, x20
  4088e8:	ldp	x20, x19, [sp, #32]
  4088ec:	ldr	x21, [sp, #16]
  4088f0:	ldp	x29, x30, [sp], #48
  4088f4:	ret
  4088f8:	sub	sp, sp, #0x20
  4088fc:	stp	x29, x30, [sp, #16]
  408900:	add	x29, sp, #0x10
  408904:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408908:	add	x1, x1, #0x438
  40890c:	sub	x2, x29, #0x4
  408910:	bl	405060 <__isoc99_sscanf@plt>
  408914:	ldur	w8, [x29, #-4]
  408918:	ldp	x29, x30, [sp, #16]
  40891c:	cmp	w0, #0x1
  408920:	csel	w0, w8, wzr, eq  // eq = none
  408924:	add	sp, sp, #0x20
  408928:	ret

000000000040892c <ll_drop_by_index@@Base>:
  40892c:	stp	x29, x30, [sp, #-32]!
  408930:	str	x19, [sp, #16]
  408934:	mov	x29, sp
  408938:	bl	4084e4 <ll_remember_index@@Base+0xc0>
  40893c:	cbz	x0, 408958 <ll_drop_by_index@@Base+0x2c>
  408940:	mov	x19, x0
  408944:	bl	408964 <ll_drop_by_index@@Base+0x38>
  408948:	add	x0, x19, #0x10
  40894c:	bl	408964 <ll_drop_by_index@@Base+0x38>
  408950:	mov	x0, x19
  408954:	bl	404f30 <free@plt>
  408958:	ldr	x19, [sp, #16]
  40895c:	ldp	x29, x30, [sp], #32
  408960:	ret
  408964:	ldp	x8, x9, [x0]
  408968:	str	x8, [x9]
  40896c:	cbz	x8, 408974 <ll_drop_by_index@@Base+0x48>
  408970:	str	x9, [x8, #8]
  408974:	ret

0000000000408978 <ll_init_map@@Base>:
  408978:	stp	x29, x30, [sp, #-32]!
  40897c:	stp	x20, x19, [sp, #16]
  408980:	adrp	x20, 41e000 <memcpy@GLIBC_2.17>
  408984:	ldrb	w8, [x20, #3344]
  408988:	mov	x29, sp
  40898c:	tbnz	w8, #0, 4089c4 <ll_init_map@@Base+0x4c>
  408990:	mov	w1, wzr
  408994:	mov	x19, x0
  408998:	bl	40b154 <rtnl_linkdump_req@@Base>
  40899c:	tbnz	w0, #31, 4089d0 <ll_init_map@@Base+0x58>
  4089a0:	adrp	x1, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4089a4:	ldr	x1, [x1, #4008]
  4089a8:	mov	x0, x19
  4089ac:	mov	x2, xzr
  4089b0:	mov	w3, wzr
  4089b4:	bl	40b628 <rtnl_dump_filter_nc@@Base>
  4089b8:	tbnz	w0, #31, 4089e4 <ll_init_map@@Base+0x6c>
  4089bc:	mov	w8, #0x1                   	// #1
  4089c0:	strb	w8, [x20, #3344]
  4089c4:	ldp	x20, x19, [sp, #16]
  4089c8:	ldp	x29, x30, [sp], #32
  4089cc:	ret
  4089d0:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  4089d4:	add	x0, x0, #0xe78
  4089d8:	bl	404c30 <perror@plt>
  4089dc:	mov	w0, #0x1                   	// #1
  4089e0:	bl	404c20 <exit@plt>
  4089e4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4089e8:	ldr	x8, [x8, #3992]
  4089ec:	adrp	x0, 40c000 <rtnl_listen@@Base+0x210>
  4089f0:	add	x0, x0, #0xe91
  4089f4:	mov	w1, #0x10                  	// #16
  4089f8:	ldr	x3, [x8]
  4089fc:	mov	w2, #0x1                   	// #1
  408a00:	bl	404f90 <fwrite@plt>
  408a04:	mov	w0, #0x1                   	// #1
  408a08:	bl	404c20 <exit@plt>
  408a0c:	stp	x29, x30, [sp, #-32]!
  408a10:	stp	x20, x19, [sp, #16]
  408a14:	ldr	x20, [x0, #48]
  408a18:	mov	x29, sp
  408a1c:	mov	x19, x0
  408a20:	sub	x0, x20, #0x30
  408a24:	cmp	x0, x19
  408a28:	b.eq	408a3c <ll_init_map@@Base+0xc4>  // b.none
  408a2c:	ldr	x20, [x20]
  408a30:	mov	w1, wzr
  408a34:	bl	408a48 <ll_init_map@@Base+0xd0>
  408a38:	b	408a20 <ll_init_map@@Base+0xa8>
  408a3c:	ldp	x20, x19, [sp, #16]
  408a40:	ldp	x29, x30, [sp], #32
  408a44:	ret
  408a48:	stp	x29, x30, [sp, #-32]!
  408a4c:	stp	x20, x19, [sp, #16]
  408a50:	mov	x19, x0
  408a54:	add	x0, x0, #0x10
  408a58:	mov	x29, sp
  408a5c:	mov	w20, w1
  408a60:	bl	408964 <ll_drop_by_index@@Base+0x38>
  408a64:	tbz	w20, #0, 408a74 <ll_init_map@@Base+0xfc>
  408a68:	mov	x0, x19
  408a6c:	bl	408964 <ll_drop_by_index@@Base+0x38>
  408a70:	b	408a7c <ll_init_map@@Base+0x104>
  408a74:	add	x0, x19, #0x30
  408a78:	bl	408a90 <ll_init_map@@Base+0x118>
  408a7c:	mov	x0, x19
  408a80:	bl	404f30 <free@plt>
  408a84:	ldp	x20, x19, [sp, #16]
  408a88:	ldp	x29, x30, [sp], #32
  408a8c:	ret
  408a90:	stp	x29, x30, [sp, #-16]!
  408a94:	ldp	x1, x8, [x0]
  408a98:	mov	x29, sp
  408a9c:	mov	x0, x8
  408aa0:	bl	408aac <ll_init_map@@Base+0x134>
  408aa4:	ldp	x29, x30, [sp], #16
  408aa8:	ret
  408aac:	str	x0, [x1, #8]
  408ab0:	str	x1, [x0]
  408ab4:	ret
  408ab8:	stp	x29, x30, [sp, #-32]!
  408abc:	stp	x20, x19, [sp, #16]
  408ac0:	ldr	w8, [x1, #8]
  408ac4:	mov	x20, x0
  408ac8:	mov	x1, x2
  408acc:	mov	x29, sp
  408ad0:	str	w8, [x0, #32]
  408ad4:	add	x0, x0, #0x40
  408ad8:	mov	x19, x2
  408adc:	bl	404ec0 <strcmp@plt>
  408ae0:	cbz	w0, 408b10 <ll_init_map@@Base+0x198>
  408ae4:	add	x20, x20, #0x10
  408ae8:	mov	x0, x20
  408aec:	bl	408964 <ll_drop_by_index@@Base+0x38>
  408af0:	mov	x0, x19
  408af4:	bl	4083f8 <namehash@@Base>
  408af8:	adrp	x9, 420000 <stderr@@GLIBC_2.17+0x1d30>
  408afc:	and	w8, w0, #0x3ff
  408b00:	add	x9, x9, #0xd18
  408b04:	add	x1, x9, w8, uxtw #3
  408b08:	mov	x0, x20
  408b0c:	bl	408c04 <ll_init_map@@Base+0x28c>
  408b10:	ldp	x20, x19, [sp, #16]
  408b14:	ldp	x29, x30, [sp], #32
  408b18:	ret
  408b1c:	add	x0, x0, #0x4
  408b20:	ret
  408b24:	stp	x29, x30, [sp, #-80]!
  408b28:	stp	x24, x23, [sp, #32]
  408b2c:	stp	x22, x21, [sp, #48]
  408b30:	stp	x20, x19, [sp, #64]
  408b34:	ldr	x8, [x2, #416]
  408b38:	mov	x21, x0
  408b3c:	str	x25, [sp, #16]
  408b40:	mov	x29, sp
  408b44:	cbz	x8, 408be4 <ll_init_map@@Base+0x26c>
  408b48:	ldrh	w9, [x8]
  408b4c:	mov	x19, x2
  408b50:	mov	x20, x1
  408b54:	cmp	w9, #0x8
  408b58:	b.cc	408bc8 <ll_init_map@@Base+0x250>  // b.lo, b.ul, b.last
  408b5c:	ldr	x10, [x21, #48]
  408b60:	add	x22, x8, #0x4
  408b64:	sub	w23, w9, #0x4
  408b68:	sub	x24, x10, #0x30
  408b6c:	b	408b90 <ll_init_map@@Base+0x218>
  408b70:	ldr	x8, [x24, #48]
  408b74:	sub	x24, x8, #0x30
  408b78:	add	w8, w25, #0x3
  408b7c:	and	x8, x8, #0x1fffc
  408b80:	sub	w23, w23, w8
  408b84:	cmp	w23, #0x3
  408b88:	add	x22, x22, x8
  408b8c:	b.le	408bc8 <ll_init_map@@Base+0x250>
  408b90:	ldrh	w25, [x22]
  408b94:	cmp	w25, #0x4
  408b98:	b.cc	408bc8 <ll_init_map@@Base+0x250>  // b.lo, b.ul, b.last
  408b9c:	cmp	w23, w25
  408ba0:	b.lt	408bc8 <ll_init_map@@Base+0x250>  // b.tstop
  408ba4:	ldrh	w8, [x22, #2]
  408ba8:	cmp	w8, #0x35
  408bac:	b.ne	408b78 <ll_init_map@@Base+0x200>  // b.any
  408bb0:	cbz	x24, 408bc8 <ll_init_map@@Base+0x250>
  408bb4:	mov	x0, x22
  408bb8:	bl	408b1c <ll_init_map@@Base+0x1a4>
  408bbc:	add	x1, x24, #0x40
  408bc0:	bl	404ec0 <strcmp@plt>
  408bc4:	cbz	w0, 408b70 <ll_init_map@@Base+0x1f8>
  408bc8:	mov	x0, x21
  408bcc:	bl	408a0c <ll_init_map@@Base+0x94>
  408bd0:	mov	x0, x21
  408bd4:	mov	x1, x20
  408bd8:	mov	x2, x19
  408bdc:	bl	408c20 <ll_init_map@@Base+0x2a8>
  408be0:	b	408bec <ll_init_map@@Base+0x274>
  408be4:	mov	x0, x21
  408be8:	bl	408a0c <ll_init_map@@Base+0x94>
  408bec:	ldp	x20, x19, [sp, #64]
  408bf0:	ldp	x22, x21, [sp, #48]
  408bf4:	ldp	x24, x23, [sp, #32]
  408bf8:	ldr	x25, [sp, #16]
  408bfc:	ldp	x29, x30, [sp], #80
  408c00:	ret
  408c04:	ldr	x8, [x1]
  408c08:	str	x8, [x0]
  408c0c:	cbz	x8, 408c14 <ll_init_map@@Base+0x29c>
  408c10:	str	x0, [x8, #8]
  408c14:	str	x0, [x1]
  408c18:	str	x1, [x0, #8]
  408c1c:	ret
  408c20:	stp	x29, x30, [sp, #-48]!
  408c24:	stp	x22, x21, [sp, #16]
  408c28:	stp	x20, x19, [sp, #32]
  408c2c:	ldr	x8, [x2, #416]
  408c30:	mov	x29, sp
  408c34:	cbz	x8, 408cb0 <ll_init_map@@Base+0x338>
  408c38:	ldrh	w9, [x8]
  408c3c:	cmp	w9, #0x8
  408c40:	b.cc	408cb0 <ll_init_map@@Base+0x338>  // b.lo, b.ul, b.last
  408c44:	mov	x19, x1
  408c48:	mov	x20, x0
  408c4c:	add	x21, x8, #0x4
  408c50:	sub	w22, w9, #0x4
  408c54:	b	408c74 <ll_init_map@@Base+0x2fc>
  408c58:	ldrh	w8, [x21]
  408c5c:	add	w8, w8, #0x3
  408c60:	and	x8, x8, #0x1fffc
  408c64:	sub	w22, w22, w8
  408c68:	cmp	w22, #0x3
  408c6c:	add	x21, x21, x8
  408c70:	b.le	408cb0 <ll_init_map@@Base+0x338>
  408c74:	ldrh	w8, [x21]
  408c78:	cmp	w8, #0x4
  408c7c:	b.cc	408cb0 <ll_init_map@@Base+0x338>  // b.lo, b.ul, b.last
  408c80:	cmp	w22, w8
  408c84:	b.lt	408cb0 <ll_init_map@@Base+0x338>  // b.tstop
  408c88:	ldrh	w8, [x21, #2]
  408c8c:	cmp	w8, #0x35
  408c90:	b.ne	408c58 <ll_init_map@@Base+0x2e0>  // b.any
  408c94:	mov	x0, x21
  408c98:	bl	408b1c <ll_init_map@@Base+0x1a4>
  408c9c:	mov	x1, x0
  408ca0:	mov	x0, x19
  408ca4:	mov	x2, x20
  408ca8:	bl	408cc0 <ll_init_map@@Base+0x348>
  408cac:	b	408c58 <ll_init_map@@Base+0x2e0>
  408cb0:	ldp	x20, x19, [sp, #32]
  408cb4:	ldp	x22, x21, [sp, #16]
  408cb8:	ldp	x29, x30, [sp], #48
  408cbc:	ret
  408cc0:	stp	x29, x30, [sp, #-48]!
  408cc4:	stp	x22, x21, [sp, #16]
  408cc8:	mov	x22, x0
  408ccc:	mov	x0, x1
  408cd0:	stp	x20, x19, [sp, #32]
  408cd4:	mov	x29, sp
  408cd8:	mov	x21, x2
  408cdc:	mov	x20, x1
  408ce0:	bl	404c10 <strlen@plt>
  408ce4:	add	x0, x0, #0x41
  408ce8:	bl	404d60 <malloc@plt>
  408cec:	mov	x19, x0
  408cf0:	cbz	x0, 408d70 <ll_init_map@@Base+0x3f8>
  408cf4:	ldr	w8, [x22, #4]
  408cf8:	add	x0, x19, #0x40
  408cfc:	mov	x1, x20
  408d00:	str	w8, [x19, #36]
  408d04:	bl	404fc0 <strcpy@plt>
  408d08:	ldrh	w8, [x22, #2]
  408d0c:	strh	w8, [x19, #40]
  408d10:	ldr	w8, [x22, #8]
  408d14:	str	w8, [x19, #32]
  408d18:	cbz	x21, 408d2c <ll_init_map@@Base+0x3b4>
  408d1c:	add	x0, x19, #0x30
  408d20:	add	x1, x21, #0x30
  408d24:	bl	408d84 <ll_init_map@@Base+0x40c>
  408d28:	b	408d50 <ll_init_map@@Base+0x3d8>
  408d2c:	ldr	w8, [x22, #4]
  408d30:	adrp	x9, 41e000 <memcpy@GLIBC_2.17>
  408d34:	add	x9, x9, #0xd18
  408d38:	mov	x0, x19
  408d3c:	and	x8, x8, #0x3ff
  408d40:	add	x1, x9, x8, lsl #3
  408d44:	bl	408c04 <ll_init_map@@Base+0x28c>
  408d48:	add	x0, x19, #0x30
  408d4c:	bl	408da0 <ll_init_map@@Base+0x428>
  408d50:	mov	x0, x20
  408d54:	bl	4083f8 <namehash@@Base>
  408d58:	adrp	x9, 420000 <stderr@@GLIBC_2.17+0x1d30>
  408d5c:	and	w8, w0, #0x3ff
  408d60:	add	x9, x9, #0xd18
  408d64:	add	x0, x19, #0x10
  408d68:	add	x1, x9, w8, uxtw #3
  408d6c:	bl	408c04 <ll_init_map@@Base+0x28c>
  408d70:	mov	x0, x19
  408d74:	ldp	x20, x19, [sp, #32]
  408d78:	ldp	x22, x21, [sp, #16]
  408d7c:	ldp	x29, x30, [sp], #48
  408d80:	ret
  408d84:	stp	x29, x30, [sp, #-16]!
  408d88:	mov	x2, x1
  408d8c:	ldr	x1, [x1, #8]
  408d90:	mov	x29, sp
  408d94:	bl	408da8 <ll_init_map@@Base+0x430>
  408d98:	ldp	x29, x30, [sp], #16
  408d9c:	ret
  408da0:	stp	x0, x0, [x0]
  408da4:	ret
  408da8:	str	x0, [x2, #8]
  408dac:	stp	x2, x1, [x0]
  408db0:	str	x0, [x1]
  408db4:	ret

0000000000408db8 <ll_addr_n2a@@Base>:
  408db8:	stp	x29, x30, [sp, #-80]!
  408dbc:	stp	x22, x21, [sp, #48]
  408dc0:	stp	x20, x19, [sp, #64]
  408dc4:	mov	w20, w4
  408dc8:	mov	x19, x3
  408dcc:	mov	w22, w1
  408dd0:	cmp	w1, #0x10
  408dd4:	mov	x21, x0
  408dd8:	stp	x26, x25, [sp, #16]
  408ddc:	stp	x24, x23, [sp, #32]
  408de0:	mov	x29, sp
  408de4:	b.eq	408e20 <ll_addr_n2a@@Base+0x68>  // b.none
  408de8:	cmp	w22, #0x4
  408dec:	b.ne	408e64 <ll_addr_n2a@@Base+0xac>  // b.any
  408df0:	sub	w8, w2, #0x300
  408df4:	cmp	w8, #0xa
  408df8:	b.hi	408e18 <ll_addr_n2a@@Base+0x60>  // b.pmore
  408dfc:	mov	w9, #0x1                   	// #1
  408e00:	lsl	w8, w9, w8
  408e04:	mov	w9, #0x501                 	// #1281
  408e08:	tst	w8, w9
  408e0c:	b.eq	408e18 <ll_addr_n2a@@Base+0x60>  // b.none
  408e10:	mov	w0, #0x2                   	// #2
  408e14:	b	408e34 <ll_addr_n2a@@Base+0x7c>
  408e18:	cmp	w22, #0x10
  408e1c:	b.ne	408e64 <ll_addr_n2a@@Base+0xac>  // b.any
  408e20:	cmp	w2, #0x337
  408e24:	b.eq	408e30 <ll_addr_n2a@@Base+0x78>  // b.none
  408e28:	cmp	w2, #0x301
  408e2c:	b.ne	408e64 <ll_addr_n2a@@Base+0xac>  // b.any
  408e30:	mov	w0, #0xa                   	// #10
  408e34:	mov	x1, x21
  408e38:	mov	x2, x19
  408e3c:	mov	w3, w20
  408e40:	bl	405120 <inet_ntop@plt>
  408e44:	mov	x19, x0
  408e48:	mov	x0, x19
  408e4c:	ldp	x20, x19, [sp, #64]
  408e50:	ldp	x22, x21, [sp, #48]
  408e54:	ldp	x24, x23, [sp, #32]
  408e58:	ldp	x26, x25, [sp, #16]
  408e5c:	ldp	x29, x30, [sp], #80
  408e60:	ret
  408e64:	ldrb	w3, [x21]
  408e68:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408e6c:	sxtw	x1, w20
  408e70:	add	x2, x2, #0x440
  408e74:	mov	x0, x19
  408e78:	bl	404d00 <snprintf@plt>
  408e7c:	cmp	w22, #0x2
  408e80:	b.lt	408e48 <ll_addr_n2a@@Base+0x90>  // b.tstop
  408e84:	cmp	w20, #0x3
  408e88:	b.lt	408e48 <ll_addr_n2a@@Base+0x90>  // b.tstop
  408e8c:	sxtw	x23, w22
  408e90:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408e94:	sub	w24, w20, #0x2
  408e98:	mov	w25, #0x2                   	// #2
  408e9c:	mov	w26, #0x1                   	// #1
  408ea0:	add	x22, x22, #0x43f
  408ea4:	ldrb	w3, [x21, x26]
  408ea8:	add	x0, x19, x25
  408eac:	sxtw	x1, w24
  408eb0:	mov	x2, x22
  408eb4:	bl	404d00 <snprintf@plt>
  408eb8:	add	x26, x26, #0x1
  408ebc:	cmp	x26, x23
  408ec0:	b.ge	408e48 <ll_addr_n2a@@Base+0x90>  // b.tcont
  408ec4:	add	x25, x25, #0x3
  408ec8:	cmp	w25, w20
  408ecc:	sub	w24, w24, #0x3
  408ed0:	b.lt	408ea4 <ll_addr_n2a@@Base+0xec>  // b.tstop
  408ed4:	b	408e48 <ll_addr_n2a@@Base+0x90>

0000000000408ed8 <ll_addr_a2n@@Base>:
  408ed8:	sub	sp, sp, #0x170
  408edc:	stp	x22, x21, [sp, #336]
  408ee0:	stp	x20, x19, [sp, #352]
  408ee4:	mov	w21, w1
  408ee8:	mov	x20, x0
  408eec:	mov	w1, #0x2e                  	// #46
  408ef0:	mov	x0, x2
  408ef4:	stp	x29, x30, [sp, #272]
  408ef8:	str	x28, [sp, #288]
  408efc:	stp	x26, x25, [sp, #304]
  408f00:	stp	x24, x23, [sp, #320]
  408f04:	add	x29, sp, #0x110
  408f08:	mov	x19, x2
  408f0c:	bl	404f70 <strchr@plt>
  408f10:	cbz	x0, 408f38 <ll_addr_a2n@@Base+0x60>
  408f14:	add	x0, sp, #0x8
  408f18:	mov	w2, #0x2                   	// #2
  408f1c:	mov	x1, x19
  408f20:	bl	40621c <get_addr_1@@Base>
  408f24:	cbnz	w0, 409024 <ll_addr_a2n@@Base+0x14c>
  408f28:	cmp	w21, #0x4
  408f2c:	b.ge	408fec <ll_addr_a2n@@Base+0x114>  // b.tcont
  408f30:	mov	w0, #0xffffffff            	// #-1
  408f34:	b	409004 <ll_addr_a2n@@Base+0x12c>
  408f38:	cmp	w21, #0x1
  408f3c:	b.lt	408ffc <ll_addr_a2n@@Base+0x124>  // b.tstop
  408f40:	adrp	x26, 41d000 <_IO_stdin_used@@Base+0x102a0>
  408f44:	ldr	x26, [x26, #3992]
  408f48:	mov	w24, w21
  408f4c:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408f50:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  408f54:	mov	x25, xzr
  408f58:	add	x21, x21, #0x45e
  408f5c:	add	x22, x22, #0x445
  408f60:	mov	w1, #0x3a                  	// #58
  408f64:	mov	x0, x19
  408f68:	bl	404f70 <strchr@plt>
  408f6c:	mov	x23, x0
  408f70:	cbz	x0, 408f78 <ll_addr_a2n@@Base+0xa0>
  408f74:	strb	wzr, [x23], #1
  408f78:	add	x2, sp, #0x8
  408f7c:	mov	x0, x19
  408f80:	mov	x1, x21
  408f84:	bl	405060 <__isoc99_sscanf@plt>
  408f88:	cmp	w0, #0x1
  408f8c:	b.ne	408fc4 <ll_addr_a2n@@Base+0xec>  // b.any
  408f90:	ldr	w8, [sp, #8]
  408f94:	cmp	w8, #0x100
  408f98:	b.cs	408fc4 <ll_addr_a2n@@Base+0xec>  // b.hs, b.nlast
  408f9c:	cmp	x23, #0x0
  408fa0:	strb	w8, [x20, x25]
  408fa4:	cset	w8, eq  // eq = none
  408fa8:	csel	x19, x19, x23, eq  // eq = none
  408fac:	lsl	w8, w8, #1
  408fb0:	cbnz	w8, 408fdc <ll_addr_a2n@@Base+0x104>
  408fb4:	add	x25, x25, #0x1
  408fb8:	cmp	x24, x25
  408fbc:	b.ne	408f60 <ll_addr_a2n@@Base+0x88>  // b.any
  408fc0:	b	409000 <ll_addr_a2n@@Base+0x128>
  408fc4:	ldr	x0, [x26]
  408fc8:	mov	x1, x22
  408fcc:	mov	x2, x19
  408fd0:	bl	405100 <fprintf@plt>
  408fd4:	mov	w8, #0x1                   	// #1
  408fd8:	cbz	w8, 408fb4 <ll_addr_a2n@@Base+0xdc>
  408fdc:	cmp	w8, #0x2
  408fe0:	b.ne	408f30 <ll_addr_a2n@@Base+0x58>  // b.any
  408fe4:	mov	w24, w25
  408fe8:	b	409000 <ll_addr_a2n@@Base+0x128>
  408fec:	ldr	w8, [sp, #16]
  408ff0:	mov	w0, #0x4                   	// #4
  408ff4:	str	w8, [x20]
  408ff8:	b	409004 <ll_addr_a2n@@Base+0x12c>
  408ffc:	mov	w24, wzr
  409000:	add	w0, w24, #0x1
  409004:	ldp	x20, x19, [sp, #352]
  409008:	ldp	x22, x21, [sp, #336]
  40900c:	ldp	x24, x23, [sp, #320]
  409010:	ldp	x26, x25, [sp, #304]
  409014:	ldr	x28, [sp, #288]
  409018:	ldp	x29, x30, [sp, #272]
  40901c:	add	sp, sp, #0x170
  409020:	ret
  409024:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409028:	ldr	x8, [x8, #3992]
  40902c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409030:	add	x1, x1, #0x445
  409034:	mov	x2, x19
  409038:	ldr	x0, [x8]
  40903c:	bl	405100 <fprintf@plt>
  409040:	b	408f30 <ll_addr_a2n@@Base+0x58>

0000000000409044 <new_json_obj@@Base>:
  409044:	stp	x29, x30, [sp, #-16]!
  409048:	mov	w1, #0x1                   	// #1
  40904c:	mov	x29, sp
  409050:	bl	40905c <new_json_obj@@Base+0x18>
  409054:	ldp	x29, x30, [sp], #16
  409058:	ret
  40905c:	stp	x29, x30, [sp, #-32]!
  409060:	stp	x20, x19, [sp, #16]
  409064:	mov	x29, sp
  409068:	cbz	w0, 4090b0 <new_json_obj@@Base+0x6c>
  40906c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409070:	ldr	x8, [x8, #4016]
  409074:	mov	w19, w1
  409078:	ldr	x0, [x8]
  40907c:	bl	40a0b0 <jsonw_new@@Base>
  409080:	adrp	x20, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409084:	str	x0, [x20, #3352]
  409088:	cbz	x0, 4090bc <new_json_obj@@Base+0x78>
  40908c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409090:	ldr	x8, [x8, #4056]
  409094:	ldr	w8, [x8]
  409098:	cbz	w8, 4090a4 <new_json_obj@@Base+0x60>
  40909c:	mov	w1, #0x1                   	// #1
  4090a0:	bl	40a14c <jsonw_pretty@@Base>
  4090a4:	tbz	w19, #0, 4090b0 <new_json_obj@@Base+0x6c>
  4090a8:	ldr	x0, [x20, #3352]
  4090ac:	bl	40a548 <jsonw_start_array@@Base>
  4090b0:	ldp	x20, x19, [sp, #16]
  4090b4:	ldp	x29, x30, [sp], #32
  4090b8:	ret
  4090bc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4090c0:	add	x0, x0, #0x480
  4090c4:	bl	404c30 <perror@plt>
  4090c8:	mov	w0, #0x1                   	// #1
  4090cc:	bl	404c20 <exit@plt>

00000000004090d0 <delete_json_obj@@Base>:
  4090d0:	stp	x29, x30, [sp, #-16]!
  4090d4:	mov	w0, #0x1                   	// #1
  4090d8:	mov	x29, sp
  4090dc:	bl	4090e8 <delete_json_obj@@Base+0x18>
  4090e0:	ldp	x29, x30, [sp], #16
  4090e4:	ret
  4090e8:	stp	x29, x30, [sp, #-16]!
  4090ec:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4090f0:	ldr	x8, [x8, #3352]
  4090f4:	mov	x29, sp
  4090f8:	cbz	x8, 409114 <delete_json_obj@@Base+0x44>
  4090fc:	tbz	w0, #0, 409108 <delete_json_obj@@Base+0x38>
  409100:	mov	x0, x8
  409104:	bl	40a580 <jsonw_end_array@@Base>
  409108:	adrp	x0, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40910c:	add	x0, x0, #0xd18
  409110:	bl	40a0e4 <jsonw_destroy@@Base>
  409114:	ldp	x29, x30, [sp], #16
  409118:	ret

000000000040911c <new_json_obj_plain@@Base>:
  40911c:	stp	x29, x30, [sp, #-16]!
  409120:	mov	w1, wzr
  409124:	mov	x29, sp
  409128:	bl	40905c <new_json_obj@@Base+0x18>
  40912c:	ldp	x29, x30, [sp], #16
  409130:	ret

0000000000409134 <delete_json_obj_plain@@Base>:
  409134:	stp	x29, x30, [sp, #-16]!
  409138:	mov	w0, wzr
  40913c:	mov	x29, sp
  409140:	bl	4090e8 <delete_json_obj@@Base+0x18>
  409144:	ldp	x29, x30, [sp], #16
  409148:	ret

000000000040914c <is_json_context@@Base>:
  40914c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409150:	ldr	x8, [x8, #3352]
  409154:	cmp	x8, #0x0
  409158:	cset	w0, ne  // ne = any
  40915c:	ret

0000000000409160 <get_json_writer@@Base>:
  409160:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409164:	ldr	x0, [x8, #3352]
  409168:	ret

000000000040916c <open_json_object@@Base>:
  40916c:	stp	x29, x30, [sp, #-32]!
  409170:	str	x19, [sp, #16]
  409174:	adrp	x19, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409178:	ldr	x8, [x19, #3352]
  40917c:	mov	x29, sp
  409180:	cbz	x8, 40919c <open_json_object@@Base+0x30>
  409184:	mov	x1, x0
  409188:	cbz	x0, 409194 <open_json_object@@Base+0x28>
  40918c:	mov	x0, x8
  409190:	bl	40a158 <jsonw_name@@Base>
  409194:	ldr	x0, [x19, #3352]
  409198:	bl	40a464 <jsonw_start_object@@Base>
  40919c:	ldr	x19, [sp, #16]
  4091a0:	ldp	x29, x30, [sp], #32
  4091a4:	ret

00000000004091a8 <close_json_object@@Base>:
  4091a8:	stp	x29, x30, [sp, #-16]!
  4091ac:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4091b0:	ldr	x0, [x8, #3352]
  4091b4:	mov	x29, sp
  4091b8:	cbz	x0, 4091c0 <close_json_object@@Base+0x18>
  4091bc:	bl	40a4bc <jsonw_end_object@@Base>
  4091c0:	ldp	x29, x30, [sp], #16
  4091c4:	ret

00000000004091c8 <open_json_array@@Base>:
  4091c8:	stp	x29, x30, [sp, #-32]!
  4091cc:	str	x19, [sp, #16]
  4091d0:	tst	w0, #0x6
  4091d4:	adrp	x19, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4091d8:	mov	x29, sp
  4091dc:	b.eq	409200 <open_json_array@@Base+0x38>  // b.none
  4091e0:	ldr	x8, [x19, #3352]
  4091e4:	cbz	x8, 409200 <open_json_array@@Base+0x38>
  4091e8:	cbz	x1, 4091f4 <open_json_array@@Base+0x2c>
  4091ec:	mov	x0, x8
  4091f0:	bl	40a158 <jsonw_name@@Base>
  4091f4:	ldr	x0, [x19, #3352]
  4091f8:	bl	40a548 <jsonw_start_array@@Base>
  4091fc:	b	409220 <open_json_array@@Base+0x58>
  409200:	mov	w8, #0x5                   	// #5
  409204:	tst	w0, w8
  409208:	b.eq	409220 <open_json_array@@Base+0x58>  // b.none
  40920c:	ldr	x8, [x19, #3352]
  409210:	cbnz	x8, 409220 <open_json_array@@Base+0x58>
  409214:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409218:	add	x0, x0, #0x78
  40921c:	bl	4050a0 <printf@plt>
  409220:	ldr	x19, [sp, #16]
  409224:	ldp	x29, x30, [sp], #32
  409228:	ret

000000000040922c <close_json_array@@Base>:
  40922c:	stp	x29, x30, [sp, #-16]!
  409230:	tst	w0, #0x6
  409234:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409238:	mov	x29, sp
  40923c:	b.eq	409258 <close_json_array@@Base+0x2c>  // b.none
  409240:	ldr	x8, [x9, #3352]
  409244:	cbz	x8, 409258 <close_json_array@@Base+0x2c>
  409248:	mov	x0, x8
  40924c:	bl	40a580 <jsonw_end_array@@Base>
  409250:	ldp	x29, x30, [sp], #16
  409254:	ret
  409258:	mov	w8, #0x5                   	// #5
  40925c:	tst	w0, w8
  409260:	b.eq	409278 <close_json_array@@Base+0x4c>  // b.none
  409264:	ldr	x8, [x9, #3352]
  409268:	cbnz	x8, 409278 <close_json_array@@Base+0x4c>
  40926c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409270:	add	x0, x0, #0x78
  409274:	bl	4050a0 <printf@plt>
  409278:	ldp	x29, x30, [sp], #16
  40927c:	ret

0000000000409280 <print_color_int@@Base>:
  409280:	stp	x29, x30, [sp, #-16]!
  409284:	mov	w8, w0
  409288:	tst	w0, #0x6
  40928c:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409290:	mov	x29, sp
  409294:	b.eq	4092b8 <print_color_int@@Base+0x38>  // b.none
  409298:	ldr	x0, [x9, #3352]
  40929c:	cbz	x0, 4092b8 <print_color_int@@Base+0x38>
  4092a0:	cbz	x2, 4092ec <print_color_int@@Base+0x6c>
  4092a4:	mov	x1, x2
  4092a8:	mov	w2, w4
  4092ac:	bl	40a96c <jsonw_int_field@@Base>
  4092b0:	ldp	x29, x30, [sp], #16
  4092b4:	ret
  4092b8:	mov	w10, #0x5                   	// #5
  4092bc:	tst	w8, w10
  4092c0:	b.eq	4092e4 <print_color_int@@Base+0x64>  // b.none
  4092c4:	ldr	x8, [x9, #3352]
  4092c8:	cbnz	x8, 4092e4 <print_color_int@@Base+0x64>
  4092cc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4092d0:	ldr	x8, [x8, #4016]
  4092d4:	mov	x2, x3
  4092d8:	mov	w3, w4
  4092dc:	ldr	x0, [x8]
  4092e0:	bl	409c30 <color_fprintf@@Base>
  4092e4:	ldp	x29, x30, [sp], #16
  4092e8:	ret
  4092ec:	mov	w1, w4
  4092f0:	bl	40a744 <jsonw_int@@Base>
  4092f4:	ldp	x29, x30, [sp], #16
  4092f8:	ret

00000000004092fc <print_color_s64@@Base>:
  4092fc:	stp	x29, x30, [sp, #-16]!
  409300:	mov	w8, w0
  409304:	tst	w0, #0x6
  409308:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40930c:	mov	x29, sp
  409310:	b.eq	409334 <print_color_s64@@Base+0x38>  // b.none
  409314:	ldr	x0, [x9, #3352]
  409318:	cbz	x0, 409334 <print_color_s64@@Base+0x38>
  40931c:	cbz	x2, 409368 <print_color_s64@@Base+0x6c>
  409320:	mov	x1, x2
  409324:	mov	x2, x4
  409328:	bl	40a99c <jsonw_s64_field@@Base>
  40932c:	ldp	x29, x30, [sp], #16
  409330:	ret
  409334:	mov	w10, #0x5                   	// #5
  409338:	tst	w8, w10
  40933c:	b.eq	409360 <print_color_s64@@Base+0x64>  // b.none
  409340:	ldr	x8, [x9, #3352]
  409344:	cbnz	x8, 409360 <print_color_s64@@Base+0x64>
  409348:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40934c:	ldr	x8, [x8, #4016]
  409350:	mov	x2, x3
  409354:	mov	x3, x4
  409358:	ldr	x0, [x8]
  40935c:	bl	409c30 <color_fprintf@@Base>
  409360:	ldp	x29, x30, [sp], #16
  409364:	ret
  409368:	mov	x1, x4
  40936c:	bl	40a764 <jsonw_s64@@Base>
  409370:	ldp	x29, x30, [sp], #16
  409374:	ret

0000000000409378 <print_color_hhu@@Base>:
  409378:	stp	x29, x30, [sp, #-16]!
  40937c:	mov	w8, w0
  409380:	tst	w0, #0x6
  409384:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409388:	mov	x29, sp
  40938c:	b.eq	4093b0 <print_color_hhu@@Base+0x38>  // b.none
  409390:	ldr	x0, [x9, #3352]
  409394:	cbz	x0, 4093b0 <print_color_hhu@@Base+0x38>
  409398:	cbz	x2, 4093e8 <print_color_hhu@@Base+0x70>
  40939c:	mov	x1, x2
  4093a0:	mov	w2, w4
  4093a4:	bl	40a8ac <jsonw_hhu_field@@Base>
  4093a8:	ldp	x29, x30, [sp], #16
  4093ac:	ret
  4093b0:	mov	w10, #0x5                   	// #5
  4093b4:	tst	w8, w10
  4093b8:	b.eq	4093e0 <print_color_hhu@@Base+0x68>  // b.none
  4093bc:	ldr	x8, [x9, #3352]
  4093c0:	cbnz	x8, 4093e0 <print_color_hhu@@Base+0x68>
  4093c4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4093c8:	ldr	x8, [x8, #4016]
  4093cc:	mov	x2, x3
  4093d0:	ldr	x0, [x8]
  4093d4:	and	w8, w4, #0xff
  4093d8:	mov	w3, w8
  4093dc:	bl	409c30 <color_fprintf@@Base>
  4093e0:	ldp	x29, x30, [sp], #16
  4093e4:	ret
  4093e8:	mov	w1, w4
  4093ec:	bl	40a664 <jsonw_hhu@@Base>
  4093f0:	ldp	x29, x30, [sp], #16
  4093f4:	ret

00000000004093f8 <print_color_hu@@Base>:
  4093f8:	stp	x29, x30, [sp, #-16]!
  4093fc:	mov	w8, w0
  409400:	tst	w0, #0x6
  409404:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409408:	mov	x29, sp
  40940c:	b.eq	409430 <print_color_hu@@Base+0x38>  // b.none
  409410:	ldr	x0, [x9, #3352]
  409414:	cbz	x0, 409430 <print_color_hu@@Base+0x38>
  409418:	cbz	x2, 409468 <print_color_hu@@Base+0x70>
  40941c:	mov	x1, x2
  409420:	mov	w2, w4
  409424:	bl	40a8dc <jsonw_hu_field@@Base>
  409428:	ldp	x29, x30, [sp], #16
  40942c:	ret
  409430:	mov	w10, #0x5                   	// #5
  409434:	tst	w8, w10
  409438:	b.eq	409460 <print_color_hu@@Base+0x68>  // b.none
  40943c:	ldr	x8, [x9, #3352]
  409440:	cbnz	x8, 409460 <print_color_hu@@Base+0x68>
  409444:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409448:	ldr	x8, [x8, #4016]
  40944c:	mov	x2, x3
  409450:	ldr	x0, [x8]
  409454:	and	w8, w4, #0xffff
  409458:	mov	w3, w8
  40945c:	bl	409c30 <color_fprintf@@Base>
  409460:	ldp	x29, x30, [sp], #16
  409464:	ret
  409468:	mov	w1, w4
  40946c:	bl	40a684 <jsonw_hu@@Base>
  409470:	ldp	x29, x30, [sp], #16
  409474:	ret

0000000000409478 <print_color_uint@@Base>:
  409478:	stp	x29, x30, [sp, #-16]!
  40947c:	mov	w8, w0
  409480:	tst	w0, #0x6
  409484:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409488:	mov	x29, sp
  40948c:	b.eq	4094b0 <print_color_uint@@Base+0x38>  // b.none
  409490:	ldr	x0, [x9, #3352]
  409494:	cbz	x0, 4094b0 <print_color_uint@@Base+0x38>
  409498:	cbz	x2, 4094e4 <print_color_uint@@Base+0x6c>
  40949c:	mov	x1, x2
  4094a0:	mov	w2, w4
  4094a4:	bl	40a81c <jsonw_uint_field@@Base>
  4094a8:	ldp	x29, x30, [sp], #16
  4094ac:	ret
  4094b0:	mov	w10, #0x5                   	// #5
  4094b4:	tst	w8, w10
  4094b8:	b.eq	4094dc <print_color_uint@@Base+0x64>  // b.none
  4094bc:	ldr	x8, [x9, #3352]
  4094c0:	cbnz	x8, 4094dc <print_color_uint@@Base+0x64>
  4094c4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4094c8:	ldr	x8, [x8, #4016]
  4094cc:	mov	x2, x3
  4094d0:	mov	w3, w4
  4094d4:	ldr	x0, [x8]
  4094d8:	bl	409c30 <color_fprintf@@Base>
  4094dc:	ldp	x29, x30, [sp], #16
  4094e0:	ret
  4094e4:	mov	w1, w4
  4094e8:	bl	40a6a4 <jsonw_uint@@Base>
  4094ec:	ldp	x29, x30, [sp], #16
  4094f0:	ret

00000000004094f4 <print_color_u64@@Base>:
  4094f4:	stp	x29, x30, [sp, #-16]!
  4094f8:	mov	w8, w0
  4094fc:	tst	w0, #0x6
  409500:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409504:	mov	x29, sp
  409508:	b.eq	40952c <print_color_u64@@Base+0x38>  // b.none
  40950c:	ldr	x0, [x9, #3352]
  409510:	cbz	x0, 40952c <print_color_u64@@Base+0x38>
  409514:	cbz	x2, 409560 <print_color_u64@@Base+0x6c>
  409518:	mov	x1, x2
  40951c:	mov	x2, x4
  409520:	bl	40a84c <jsonw_u64_field@@Base>
  409524:	ldp	x29, x30, [sp], #16
  409528:	ret
  40952c:	mov	w10, #0x5                   	// #5
  409530:	tst	w8, w10
  409534:	b.eq	409558 <print_color_u64@@Base+0x64>  // b.none
  409538:	ldr	x8, [x9, #3352]
  40953c:	cbnz	x8, 409558 <print_color_u64@@Base+0x64>
  409540:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409544:	ldr	x8, [x8, #4016]
  409548:	mov	x2, x3
  40954c:	mov	x3, x4
  409550:	ldr	x0, [x8]
  409554:	bl	409c30 <color_fprintf@@Base>
  409558:	ldp	x29, x30, [sp], #16
  40955c:	ret
  409560:	mov	x1, x4
  409564:	bl	40a6c4 <jsonw_u64@@Base>
  409568:	ldp	x29, x30, [sp], #16
  40956c:	ret

0000000000409570 <print_color_luint@@Base>:
  409570:	stp	x29, x30, [sp, #-16]!
  409574:	mov	w8, w0
  409578:	tst	w0, #0x6
  40957c:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409580:	mov	x29, sp
  409584:	b.eq	4095a8 <print_color_luint@@Base+0x38>  // b.none
  409588:	ldr	x0, [x9, #3352]
  40958c:	cbz	x0, 4095a8 <print_color_luint@@Base+0x38>
  409590:	cbz	x2, 4095dc <print_color_luint@@Base+0x6c>
  409594:	mov	x1, x2
  409598:	mov	x2, x4
  40959c:	bl	40a90c <jsonw_luint_field@@Base>
  4095a0:	ldp	x29, x30, [sp], #16
  4095a4:	ret
  4095a8:	mov	w10, #0x5                   	// #5
  4095ac:	tst	w8, w10
  4095b0:	b.eq	4095d4 <print_color_luint@@Base+0x64>  // b.none
  4095b4:	ldr	x8, [x9, #3352]
  4095b8:	cbnz	x8, 4095d4 <print_color_luint@@Base+0x64>
  4095bc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4095c0:	ldr	x8, [x8, #4016]
  4095c4:	mov	x2, x3
  4095c8:	mov	x3, x4
  4095cc:	ldr	x0, [x8]
  4095d0:	bl	409c30 <color_fprintf@@Base>
  4095d4:	ldp	x29, x30, [sp], #16
  4095d8:	ret
  4095dc:	mov	x1, x4
  4095e0:	bl	40a704 <jsonw_luint@@Base>
  4095e4:	ldp	x29, x30, [sp], #16
  4095e8:	ret

00000000004095ec <print_color_lluint@@Base>:
  4095ec:	stp	x29, x30, [sp, #-16]!
  4095f0:	mov	w8, w0
  4095f4:	tst	w0, #0x6
  4095f8:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4095fc:	mov	x29, sp
  409600:	b.eq	409624 <print_color_lluint@@Base+0x38>  // b.none
  409604:	ldr	x0, [x9, #3352]
  409608:	cbz	x0, 409624 <print_color_lluint@@Base+0x38>
  40960c:	cbz	x2, 409658 <print_color_lluint@@Base+0x6c>
  409610:	mov	x1, x2
  409614:	mov	x2, x4
  409618:	bl	40a93c <jsonw_lluint_field@@Base>
  40961c:	ldp	x29, x30, [sp], #16
  409620:	ret
  409624:	mov	w10, #0x5                   	// #5
  409628:	tst	w8, w10
  40962c:	b.eq	409650 <print_color_lluint@@Base+0x64>  // b.none
  409630:	ldr	x8, [x9, #3352]
  409634:	cbnz	x8, 409650 <print_color_lluint@@Base+0x64>
  409638:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40963c:	ldr	x8, [x8, #4016]
  409640:	mov	x2, x3
  409644:	mov	x3, x4
  409648:	ldr	x0, [x8]
  40964c:	bl	409c30 <color_fprintf@@Base>
  409650:	ldp	x29, x30, [sp], #16
  409654:	ret
  409658:	mov	x1, x4
  40965c:	bl	40a724 <jsonw_lluint@@Base>
  409660:	ldp	x29, x30, [sp], #16
  409664:	ret

0000000000409668 <print_color_float@@Base>:
  409668:	stp	x29, x30, [sp, #-16]!
  40966c:	mov	w8, w0
  409670:	tst	w0, #0x6
  409674:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409678:	mov	x29, sp
  40967c:	b.eq	40969c <print_color_float@@Base+0x34>  // b.none
  409680:	ldr	x0, [x9, #3352]
  409684:	cbz	x0, 40969c <print_color_float@@Base+0x34>
  409688:	cbz	x2, 4096cc <print_color_float@@Base+0x64>
  40968c:	mov	x1, x2
  409690:	bl	40a7e4 <jsonw_float_field@@Base>
  409694:	ldp	x29, x30, [sp], #16
  409698:	ret
  40969c:	mov	w10, #0x5                   	// #5
  4096a0:	tst	w8, w10
  4096a4:	b.eq	4096c4 <print_color_float@@Base+0x5c>  // b.none
  4096a8:	ldr	x8, [x9, #3352]
  4096ac:	cbnz	x8, 4096c4 <print_color_float@@Base+0x5c>
  4096b0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4096b4:	ldr	x8, [x8, #4016]
  4096b8:	mov	x2, x3
  4096bc:	ldr	x0, [x8]
  4096c0:	bl	409c30 <color_fprintf@@Base>
  4096c4:	ldp	x29, x30, [sp], #16
  4096c8:	ret
  4096cc:	bl	40a648 <jsonw_float@@Base>
  4096d0:	ldp	x29, x30, [sp], #16
  4096d4:	ret

00000000004096d8 <print_uint_name_value@@Base>:
  4096d8:	sub	sp, sp, #0x60
  4096dc:	stp	x20, x19, [sp, #80]
  4096e0:	mov	x20, x0
  4096e4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4096e8:	mov	w19, w1
  4096ec:	add	x2, x2, #0x461
  4096f0:	mov	x0, sp
  4096f4:	mov	w1, #0x40                  	// #64
  4096f8:	mov	x3, x20
  4096fc:	stp	x29, x30, [sp, #64]
  409700:	add	x29, sp, #0x40
  409704:	bl	404d00 <snprintf@plt>
  409708:	mov	x1, sp
  40970c:	mov	x0, x20
  409710:	mov	w2, w19
  409714:	bl	409728 <print_uint_name_value@@Base+0x50>
  409718:	ldp	x20, x19, [sp, #80]
  40971c:	ldp	x29, x30, [sp, #64]
  409720:	add	sp, sp, #0x60
  409724:	ret
  409728:	stp	x29, x30, [sp, #-16]!
  40972c:	mov	w4, w2
  409730:	mov	x3, x1
  409734:	mov	x2, x0
  409738:	mov	w0, #0x4                   	// #4
  40973c:	mov	w1, #0x6                   	// #6
  409740:	mov	x29, sp
  409744:	bl	409478 <print_color_uint@@Base>
  409748:	ldp	x29, x30, [sp], #16
  40974c:	ret

0000000000409750 <print_string_name_value@@Base>:
  409750:	sub	sp, sp, #0x60
  409754:	stp	x20, x19, [sp, #80]
  409758:	mov	x20, x0
  40975c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409760:	mov	x19, x1
  409764:	add	x2, x2, #0x468
  409768:	mov	x0, sp
  40976c:	mov	w1, #0x40                  	// #64
  409770:	mov	x3, x20
  409774:	stp	x29, x30, [sp, #64]
  409778:	add	x29, sp, #0x40
  40977c:	bl	404d00 <snprintf@plt>
  409780:	mov	x2, sp
  409784:	mov	w0, #0x4                   	// #4
  409788:	mov	x1, x20
  40978c:	mov	x3, x19
  409790:	bl	4097a4 <print_string_name_value@@Base+0x54>
  409794:	ldp	x20, x19, [sp, #80]
  409798:	ldp	x29, x30, [sp, #64]
  40979c:	add	sp, sp, #0x60
  4097a0:	ret
  4097a4:	stp	x29, x30, [sp, #-16]!
  4097a8:	mov	x4, x3
  4097ac:	mov	x3, x2
  4097b0:	mov	x2, x1
  4097b4:	mov	w1, #0x6                   	// #6
  4097b8:	mov	x29, sp
  4097bc:	bl	4097c8 <print_color_string@@Base>
  4097c0:	ldp	x29, x30, [sp], #16
  4097c4:	ret

00000000004097c8 <print_color_string@@Base>:
  4097c8:	stp	x29, x30, [sp, #-16]!
  4097cc:	mov	w8, w0
  4097d0:	tst	w0, #0x6
  4097d4:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4097d8:	mov	x29, sp
  4097dc:	b.eq	409800 <print_color_string@@Base+0x38>  // b.none
  4097e0:	ldr	x0, [x9, #3352]
  4097e4:	cbz	x0, 409800 <print_color_string@@Base+0x38>
  4097e8:	cbz	x2, 409834 <print_color_string@@Base+0x6c>
  4097ec:	cbnz	x4, 409834 <print_color_string@@Base+0x6c>
  4097f0:	mov	x1, x2
  4097f4:	bl	40a158 <jsonw_name@@Base>
  4097f8:	ldp	x29, x30, [sp], #16
  4097fc:	ret
  409800:	mov	w10, #0x5                   	// #5
  409804:	tst	w8, w10
  409808:	b.eq	40982c <print_color_string@@Base+0x64>  // b.none
  40980c:	ldr	x8, [x9, #3352]
  409810:	cbnz	x8, 40982c <print_color_string@@Base+0x64>
  409814:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409818:	ldr	x8, [x8, #4016]
  40981c:	mov	x2, x3
  409820:	mov	x3, x4
  409824:	ldr	x0, [x8]
  409828:	bl	409c30 <color_fprintf@@Base>
  40982c:	ldp	x29, x30, [sp], #16
  409830:	ret
  409834:	cbnz	x2, 40984c <print_color_string@@Base+0x84>
  409838:	cbz	x4, 40984c <print_color_string@@Base+0x84>
  40983c:	mov	x1, x4
  409840:	bl	40a5c8 <jsonw_string@@Base>
  409844:	ldp	x29, x30, [sp], #16
  409848:	ret
  40984c:	mov	x1, x2
  409850:	mov	x2, x4
  409854:	bl	40a784 <jsonw_string_field@@Base>
  409858:	ldp	x29, x30, [sp], #16
  40985c:	ret

0000000000409860 <print_color_bool@@Base>:
  409860:	stp	x29, x30, [sp, #-16]!
  409864:	mov	w8, w0
  409868:	tst	w0, #0x6
  40986c:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409870:	mov	x29, sp
  409874:	b.eq	40989c <print_color_bool@@Base+0x3c>  // b.none
  409878:	ldr	x0, [x9, #3352]
  40987c:	cbz	x0, 40989c <print_color_bool@@Base+0x3c>
  409880:	cbz	x2, 4098e8 <print_color_bool@@Base+0x88>
  409884:	and	w8, w4, #0x1
  409888:	mov	x1, x2
  40988c:	mov	w2, w8
  409890:	bl	40a7b4 <jsonw_bool_field@@Base>
  409894:	ldp	x29, x30, [sp], #16
  409898:	ret
  40989c:	mov	w10, #0x5                   	// #5
  4098a0:	tst	w8, w10
  4098a4:	b.eq	4098e0 <print_color_bool@@Base+0x80>  // b.none
  4098a8:	ldr	x8, [x9, #3352]
  4098ac:	cbnz	x8, 4098e0 <print_color_bool@@Base+0x80>
  4098b0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4098b4:	ldr	x8, [x8, #4016]
  4098b8:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4098bc:	add	x9, x9, #0x46f
  4098c0:	tst	w4, #0x1
  4098c4:	ldr	x0, [x8]
  4098c8:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4098cc:	add	x8, x8, #0x474
  4098d0:	csel	x8, x9, x8, ne  // ne = any
  4098d4:	mov	x2, x3
  4098d8:	mov	x3, x8
  4098dc:	bl	409c30 <color_fprintf@@Base>
  4098e0:	ldp	x29, x30, [sp], #16
  4098e4:	ret
  4098e8:	and	w1, w4, #0x1
  4098ec:	bl	40a5f8 <jsonw_bool@@Base>
  4098f0:	ldp	x29, x30, [sp], #16
  4098f4:	ret

00000000004098f8 <print_color_0xhex@@Base>:
  4098f8:	sub	sp, sp, #0x60
  4098fc:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409900:	ldr	x8, [x8, #3352]
  409904:	tst	w0, #0x6
  409908:	stp	x29, x30, [sp, #64]
  40990c:	str	x19, [sp, #80]
  409910:	add	x29, sp, #0x40
  409914:	b.eq	409950 <print_color_0xhex@@Base+0x58>  // b.none
  409918:	cbz	x8, 409950 <print_color_0xhex@@Base+0x58>
  40991c:	mov	x19, x2
  409920:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409924:	add	x2, x2, #0x47a
  409928:	mov	x0, sp
  40992c:	mov	w1, #0x40                  	// #64
  409930:	mov	x3, x4
  409934:	bl	404d00 <snprintf@plt>
  409938:	mov	x3, sp
  40993c:	mov	w0, #0x2                   	// #2
  409940:	mov	x1, x19
  409944:	mov	x2, xzr
  409948:	bl	4097a4 <print_string_name_value@@Base+0x54>
  40994c:	b	409978 <print_color_0xhex@@Base+0x80>
  409950:	mov	w9, #0x5                   	// #5
  409954:	tst	w0, w9
  409958:	b.eq	409978 <print_color_0xhex@@Base+0x80>  // b.none
  40995c:	cbnz	x8, 409978 <print_color_0xhex@@Base+0x80>
  409960:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409964:	ldr	x8, [x8, #4016]
  409968:	mov	x2, x3
  40996c:	mov	x3, x4
  409970:	ldr	x0, [x8]
  409974:	bl	409c30 <color_fprintf@@Base>
  409978:	ldr	x19, [sp, #80]
  40997c:	ldp	x29, x30, [sp, #64]
  409980:	add	sp, sp, #0x60
  409984:	ret

0000000000409988 <print_color_hex@@Base>:
  409988:	sub	sp, sp, #0x60
  40998c:	stp	x20, x19, [sp, #80]
  409990:	adrp	x20, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409994:	ldr	x8, [x20, #3352]
  409998:	tst	w0, #0x6
  40999c:	stp	x29, x30, [sp, #64]
  4099a0:	add	x29, sp, #0x40
  4099a4:	b.eq	4099e0 <print_color_hex@@Base+0x58>  // b.none
  4099a8:	cbz	x8, 4099e0 <print_color_hex@@Base+0x58>
  4099ac:	mov	x19, x2
  4099b0:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  4099b4:	add	x2, x2, #0x45e
  4099b8:	mov	x0, sp
  4099bc:	mov	w1, #0x40                  	// #64
  4099c0:	mov	w3, w4
  4099c4:	bl	404d00 <snprintf@plt>
  4099c8:	ldr	x0, [x20, #3352]
  4099cc:	cbz	x19, 409a0c <print_color_hex@@Base+0x84>
  4099d0:	mov	x2, sp
  4099d4:	mov	x1, x19
  4099d8:	bl	40a784 <jsonw_string_field@@Base>
  4099dc:	b	409a14 <print_color_hex@@Base+0x8c>
  4099e0:	mov	w9, #0x5                   	// #5
  4099e4:	tst	w0, w9
  4099e8:	b.eq	409a14 <print_color_hex@@Base+0x8c>  // b.none
  4099ec:	cbnz	x8, 409a14 <print_color_hex@@Base+0x8c>
  4099f0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  4099f4:	ldr	x8, [x8, #4016]
  4099f8:	mov	x2, x3
  4099fc:	mov	w3, w4
  409a00:	ldr	x0, [x8]
  409a04:	bl	409c30 <color_fprintf@@Base>
  409a08:	b	409a14 <print_color_hex@@Base+0x8c>
  409a0c:	mov	x1, sp
  409a10:	bl	40a5c8 <jsonw_string@@Base>
  409a14:	ldp	x20, x19, [sp, #80]
  409a18:	ldp	x29, x30, [sp, #64]
  409a1c:	add	sp, sp, #0x60
  409a20:	ret

0000000000409a24 <print_color_null@@Base>:
  409a24:	stp	x29, x30, [sp, #-16]!
  409a28:	mov	w8, w0
  409a2c:	tst	w0, #0x6
  409a30:	adrp	x9, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409a34:	mov	x29, sp
  409a38:	b.eq	409a58 <print_color_null@@Base+0x34>  // b.none
  409a3c:	ldr	x0, [x9, #3352]
  409a40:	cbz	x0, 409a58 <print_color_null@@Base+0x34>
  409a44:	cbz	x2, 409a8c <print_color_null@@Base+0x68>
  409a48:	mov	x1, x2
  409a4c:	bl	40a9cc <jsonw_null_field@@Base>
  409a50:	ldp	x29, x30, [sp], #16
  409a54:	ret
  409a58:	mov	w10, #0x5                   	// #5
  409a5c:	tst	w8, w10
  409a60:	b.eq	409a84 <print_color_null@@Base+0x60>  // b.none
  409a64:	ldr	x8, [x9, #3352]
  409a68:	cbnz	x8, 409a84 <print_color_null@@Base+0x60>
  409a6c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409a70:	ldr	x8, [x8, #4016]
  409a74:	mov	x2, x3
  409a78:	mov	x3, x4
  409a7c:	ldr	x0, [x8]
  409a80:	bl	409c30 <color_fprintf@@Base>
  409a84:	ldp	x29, x30, [sp], #16
  409a88:	ret
  409a8c:	bl	40a62c <jsonw_null@@Base>
  409a90:	ldp	x29, x30, [sp], #16
  409a94:	ret

0000000000409a98 <print_nl@@Base>:
  409a98:	stp	x29, x30, [sp, #-16]!
  409a9c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409aa0:	ldr	x8, [x8, #3352]
  409aa4:	mov	x29, sp
  409aa8:	cbz	x8, 409ab4 <print_nl@@Base+0x1c>
  409aac:	ldp	x29, x30, [sp], #16
  409ab0:	ret
  409ab4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409ab8:	ldr	x8, [x8, #4048]
  409abc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409ac0:	add	x0, x0, #0x78
  409ac4:	ldr	x1, [x8]
  409ac8:	bl	4050a0 <printf@plt>
  409acc:	ldp	x29, x30, [sp], #16
  409ad0:	ret

0000000000409ad4 <check_enable_color@@Base>:
  409ad4:	stp	x29, x30, [sp, #-16]!
  409ad8:	mov	w8, w0
  409adc:	mov	w0, wzr
  409ae0:	mov	x29, sp
  409ae4:	cbz	w8, 409b14 <check_enable_color@@Base+0x40>
  409ae8:	cbnz	w1, 409b14 <check_enable_color@@Base+0x40>
  409aec:	cmp	w8, #0x2
  409af0:	b.eq	409b0c <check_enable_color@@Base+0x38>  // b.none
  409af4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409af8:	ldr	x8, [x8, #4016]
  409afc:	ldr	x0, [x8]
  409b00:	bl	404d10 <fileno@plt>
  409b04:	bl	404ff0 <isatty@plt>
  409b08:	cbz	w0, 409b14 <check_enable_color@@Base+0x40>
  409b0c:	bl	409b1c <check_enable_color@@Base+0x48>
  409b10:	mov	w0, #0x1                   	// #1
  409b14:	ldp	x29, x30, [sp], #16
  409b18:	ret
  409b1c:	stp	x29, x30, [sp, #-16]!
  409b20:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409b24:	mov	w9, #0x1                   	// #1
  409b28:	mov	x29, sp
  409b2c:	strb	w9, [x8, #3360]
  409b30:	bl	409d98 <oper_state_color@@Base+0x20>
  409b34:	ldp	x29, x30, [sp], #16
  409b38:	ret

0000000000409b3c <matches_color@@Base>:
  409b3c:	stp	x29, x30, [sp, #-48]!
  409b40:	str	x21, [sp, #16]
  409b44:	stp	x20, x19, [sp, #32]
  409b48:	mov	x29, sp
  409b4c:	cbz	x1, 409bb0 <matches_color@@Base+0x74>
  409b50:	mov	x19, x1
  409b54:	mov	x20, x0
  409b58:	bl	404c10 <strlen@plt>
  409b5c:	add	x9, x0, #0x10
  409b60:	mov	x8, sp
  409b64:	and	x9, x9, #0xfffffffffffffff0
  409b68:	sub	x21, x8, x9
  409b6c:	add	x2, x0, #0x1
  409b70:	mov	sp, x21
  409b74:	mov	x0, x21
  409b78:	mov	x1, x20
  409b7c:	bl	404be0 <memcpy@plt>
  409b80:	mov	w1, #0x3d                  	// #61
  409b84:	mov	x0, x21
  409b88:	bl	405040 <strchrnul@plt>
  409b8c:	ldrb	w8, [x0]
  409b90:	mov	x20, x0
  409b94:	cbz	w8, 409b9c <matches_color@@Base+0x60>
  409b98:	strb	wzr, [x20], #1
  409b9c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409ba0:	add	x1, x1, #0x48c
  409ba4:	mov	x0, x21
  409ba8:	bl	406b9c <matches@@Base>
  409bac:	tbz	w0, #0, 409bb8 <matches_color@@Base+0x7c>
  409bb0:	mov	w0, wzr
  409bb4:	b	409c10 <matches_color@@Base+0xd4>
  409bb8:	ldrb	w8, [x20]
  409bbc:	cbz	w8, 409c04 <matches_color@@Base+0xc8>
  409bc0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409bc4:	add	x1, x1, #0x493
  409bc8:	mov	x0, x20
  409bcc:	bl	404ec0 <strcmp@plt>
  409bd0:	cbz	w0, 409c04 <matches_color@@Base+0xc8>
  409bd4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409bd8:	add	x1, x1, #0x49a
  409bdc:	mov	x0, x20
  409be0:	bl	404ec0 <strcmp@plt>
  409be4:	cbz	w0, 409c24 <matches_color@@Base+0xe8>
  409be8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409bec:	add	x1, x1, #0x49f
  409bf0:	mov	x0, x20
  409bf4:	bl	404ec0 <strcmp@plt>
  409bf8:	cbnz	w0, 409bb0 <matches_color@@Base+0x74>
  409bfc:	str	wzr, [x19]
  409c00:	b	409c0c <matches_color@@Base+0xd0>
  409c04:	mov	w8, #0x2                   	// #2
  409c08:	str	w8, [x19]
  409c0c:	mov	w0, #0x1                   	// #1
  409c10:	mov	sp, x29
  409c14:	ldp	x20, x19, [sp, #32]
  409c18:	ldr	x21, [sp, #16]
  409c1c:	ldp	x29, x30, [sp], #48
  409c20:	ret
  409c24:	mov	w0, #0x1                   	// #1
  409c28:	str	w0, [x19]
  409c2c:	b	409c10 <matches_color@@Base+0xd4>

0000000000409c30 <color_fprintf@@Base>:
  409c30:	sub	sp, sp, #0x130
  409c34:	stp	x29, x30, [sp, #240]
  409c38:	add	x29, sp, #0xf0
  409c3c:	mov	x8, #0xffffffffffffffd8    	// #-40
  409c40:	mov	x9, sp
  409c44:	sub	x10, x29, #0x68
  409c48:	stp	x20, x19, [sp, #288]
  409c4c:	mov	x20, x2
  409c50:	mov	x19, x0
  409c54:	movk	x8, #0xff80, lsl #32
  409c58:	add	x11, x29, #0x40
  409c5c:	cmp	w1, #0x6
  409c60:	add	x9, x9, #0x80
  409c64:	add	x10, x10, #0x28
  409c68:	str	x28, [sp, #256]
  409c6c:	stp	x22, x21, [sp, #272]
  409c70:	stp	x3, x4, [x29, #-104]
  409c74:	stp	x5, x6, [x29, #-88]
  409c78:	stur	x7, [x29, #-72]
  409c7c:	stp	q1, q2, [sp, #16]
  409c80:	stp	q3, q4, [sp, #48]
  409c84:	str	q0, [sp]
  409c88:	stp	q5, q6, [sp, #80]
  409c8c:	str	q7, [sp, #112]
  409c90:	stp	x9, x8, [x29, #-16]
  409c94:	stp	x11, x10, [x29, #-32]
  409c98:	b.eq	409d28 <color_fprintf@@Base+0xf8>  // b.none
  409c9c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409ca0:	ldrb	w8, [x8, #3360]
  409ca4:	cbz	w8, 409d28 <color_fprintf@@Base+0xf8>
  409ca8:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409cac:	ldrb	w8, [x8, #3364]
  409cb0:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409cb4:	adrp	x10, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409cb8:	add	x9, x9, #0x534
  409cbc:	add	x10, x10, #0x518
  409cc0:	cmp	w8, #0x0
  409cc4:	csel	x8, x10, x9, ne  // ne = any
  409cc8:	ldr	w8, [x8, w1, uxtw #2]
  409ccc:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  409cd0:	add	x9, x9, #0xd10
  409cd4:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409cd8:	ldr	x2, [x9, x8, lsl #3]
  409cdc:	add	x21, x21, #0x78
  409ce0:	mov	x0, x19
  409ce4:	mov	x1, x21
  409ce8:	bl	405100 <fprintf@plt>
  409cec:	ldp	q0, q1, [x29, #-32]
  409cf0:	mov	w22, w0
  409cf4:	sub	x2, x29, #0x40
  409cf8:	mov	x0, x19
  409cfc:	mov	x1, x20
  409d00:	stp	q0, q1, [x29, #-64]
  409d04:	bl	405090 <vfprintf@plt>
  409d08:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409d0c:	add	w20, w0, w22
  409d10:	add	x2, x2, #0x511
  409d14:	mov	x0, x19
  409d18:	mov	x1, x21
  409d1c:	bl	405100 <fprintf@plt>
  409d20:	add	w0, w20, w0
  409d24:	b	409d40 <color_fprintf@@Base+0x110>
  409d28:	ldp	q0, q1, [x29, #-32]
  409d2c:	sub	x2, x29, #0x40
  409d30:	mov	x0, x19
  409d34:	mov	x1, x20
  409d38:	stp	q0, q1, [x29, #-64]
  409d3c:	bl	405090 <vfprintf@plt>
  409d40:	ldp	x20, x19, [sp, #288]
  409d44:	ldp	x22, x21, [sp, #272]
  409d48:	ldr	x28, [sp, #256]
  409d4c:	ldp	x29, x30, [sp, #240]
  409d50:	add	sp, sp, #0x130
  409d54:	ret

0000000000409d58 <ifa_family_color@@Base>:
  409d58:	and	w8, w0, #0xff
  409d5c:	mov	w9, #0x6                   	// #6
  409d60:	mov	w10, #0x3                   	// #3
  409d64:	cmp	w8, #0xa
  409d68:	csel	w9, w10, w9, eq  // eq = none
  409d6c:	cmp	w8, #0x2
  409d70:	csel	w0, w8, w9, eq  // eq = none
  409d74:	ret

0000000000409d78 <oper_state_color@@Base>:
  409d78:	and	w8, w0, #0xff
  409d7c:	mov	w9, #0x5                   	// #5
  409d80:	cmp	w8, #0x2
  409d84:	cinc	w9, w9, ne  // ne = any
  409d88:	cmp	w8, #0x6
  409d8c:	mov	w8, #0x4                   	// #4
  409d90:	csel	w0, w8, w9, eq  // eq = none
  409d94:	ret
  409d98:	stp	x29, x30, [sp, #-16]!
  409d9c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409da0:	add	x0, x0, #0x4a5
  409da4:	mov	x29, sp
  409da8:	bl	4050d0 <getenv@plt>
  409dac:	cbz	x0, 409dd4 <oper_state_color@@Base+0x5c>
  409db0:	mov	w1, #0x3b                  	// #59
  409db4:	bl	404e70 <strrchr@plt>
  409db8:	cbz	x0, 409dd4 <oper_state_color@@Base+0x5c>
  409dbc:	ldrb	w8, [x0, #1]
  409dc0:	sub	w9, w8, #0x30
  409dc4:	cmp	w9, #0x7
  409dc8:	b.cs	409df0 <oper_state_color@@Base+0x78>  // b.hs, b.nlast
  409dcc:	ldrb	w8, [x0, #2]
  409dd0:	cbz	w8, 409ddc <oper_state_color@@Base+0x64>
  409dd4:	ldp	x29, x30, [sp], #16
  409dd8:	ret
  409ddc:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409de0:	mov	w9, #0x1                   	// #1
  409de4:	strb	w9, [x8, #3364]
  409de8:	ldp	x29, x30, [sp], #16
  409dec:	ret
  409df0:	cmp	w8, #0x38
  409df4:	b.eq	409dcc <oper_state_color@@Base+0x54>  // b.none
  409df8:	b	409dd4 <oper_state_color@@Base+0x5c>

0000000000409dfc <mpls_ntop@@Base>:
  409dfc:	stp	x29, x30, [sp, #-48]!
  409e00:	stp	x22, x21, [sp, #16]
  409e04:	stp	x20, x19, [sp, #32]
  409e08:	mov	x29, sp
  409e0c:	mov	x19, x3
  409e10:	mov	x20, x2
  409e14:	mov	x21, x1
  409e18:	mov	w22, w0
  409e1c:	bl	4050c0 <__errno_location@plt>
  409e20:	cmp	w22, #0x1c
  409e24:	mov	x8, x0
  409e28:	b.ne	409e44 <mpls_ntop@@Base+0x48>  // b.any
  409e2c:	mov	x0, x21
  409e30:	mov	x1, x20
  409e34:	mov	x2, x19
  409e38:	str	wzr, [x8]
  409e3c:	bl	409e60 <mpls_ntop@@Base+0x64>
  409e40:	b	409e50 <mpls_ntop@@Base+0x54>
  409e44:	mov	x0, xzr
  409e48:	mov	w9, #0x61                  	// #97
  409e4c:	str	w9, [x8]
  409e50:	ldp	x20, x19, [sp, #32]
  409e54:	ldp	x22, x21, [sp, #16]
  409e58:	ldp	x29, x30, [sp], #48
  409e5c:	ret
  409e60:	stp	x29, x30, [sp, #-80]!
  409e64:	stp	x22, x21, [sp, #48]
  409e68:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x2a0>
  409e6c:	str	x25, [sp, #16]
  409e70:	stp	x24, x23, [sp, #32]
  409e74:	stp	x20, x19, [sp, #64]
  409e78:	mov	x23, x2
  409e7c:	mov	x19, x1
  409e80:	mov	x20, x0
  409e84:	add	x21, x21, #0x465
  409e88:	mov	w25, #0x2f                  	// #47
  409e8c:	mov	x22, x1
  409e90:	mov	x29, sp
  409e94:	b	409ea4 <mpls_ntop@@Base+0xa8>
  409e98:	mov	w8, #0x3                   	// #3
  409e9c:	add	x20, x20, #0x4
  409ea0:	cbnz	w8, 409f04 <mpls_ntop@@Base+0x108>
  409ea4:	ldr	w0, [x20]
  409ea8:	bl	409f38 <mpls_ntop@@Base+0x13c>
  409eac:	mov	w24, w0
  409eb0:	lsr	w3, w0, #12
  409eb4:	mov	x0, x22
  409eb8:	mov	x1, x23
  409ebc:	mov	x2, x21
  409ec0:	bl	404d00 <snprintf@plt>
  409ec4:	sxtw	x8, w0
  409ec8:	cmp	x23, x8
  409ecc:	b.ls	409e98 <mpls_ntop@@Base+0x9c>  // b.plast
  409ed0:	tbnz	w24, #8, 409ef0 <mpls_ntop@@Base+0xf4>
  409ed4:	subs	x9, x23, x8
  409ed8:	add	x22, x22, x8
  409edc:	b.eq	409ef8 <mpls_ntop@@Base+0xfc>  // b.none
  409ee0:	mov	w8, wzr
  409ee4:	strb	w25, [x22], #1
  409ee8:	sub	x23, x9, #0x1
  409eec:	b	409e9c <mpls_ntop@@Base+0xa0>
  409ef0:	mov	w8, #0x1                   	// #1
  409ef4:	b	409e9c <mpls_ntop@@Base+0xa0>
  409ef8:	mov	x23, xzr
  409efc:	mov	w8, wzr
  409f00:	b	409e9c <mpls_ntop@@Base+0xa0>
  409f04:	cmp	w8, #0x3
  409f08:	b.ne	409f1c <mpls_ntop@@Base+0x120>  // b.any
  409f0c:	bl	4050c0 <__errno_location@plt>
  409f10:	mov	x19, xzr
  409f14:	mov	w8, #0xfffffff9            	// #-7
  409f18:	str	w8, [x0]
  409f1c:	mov	x0, x19
  409f20:	ldp	x20, x19, [sp, #64]
  409f24:	ldp	x22, x21, [sp, #48]
  409f28:	ldp	x24, x23, [sp, #32]
  409f2c:	ldr	x25, [sp, #16]
  409f30:	ldp	x29, x30, [sp], #80
  409f34:	ret
  409f38:	rev	w0, w0
  409f3c:	ret

0000000000409f40 <mpls_pton@@Base>:
  409f40:	stp	x29, x30, [sp, #-48]!
  409f44:	stp	x22, x21, [sp, #16]
  409f48:	stp	x20, x19, [sp, #32]
  409f4c:	mov	x29, sp
  409f50:	mov	x21, x3
  409f54:	mov	x19, x2
  409f58:	mov	x20, x1
  409f5c:	mov	w22, w0
  409f60:	bl	4050c0 <__errno_location@plt>
  409f64:	cmp	w22, #0x1c
  409f68:	b.ne	409f84 <mpls_pton@@Base+0x44>  // b.any
  409f6c:	lsr	x2, x21, #2
  409f70:	str	wzr, [x0]
  409f74:	mov	x0, x20
  409f78:	mov	x1, x19
  409f7c:	bl	409fa0 <mpls_pton@@Base+0x60>
  409f80:	b	409f90 <mpls_pton@@Base+0x50>
  409f84:	mov	w8, #0x61                  	// #97
  409f88:	str	w8, [x0]
  409f8c:	mov	w0, #0xffffffff            	// #-1
  409f90:	ldp	x20, x19, [sp, #32]
  409f94:	ldp	x22, x21, [sp, #16]
  409f98:	ldp	x29, x30, [sp], #48
  409f9c:	ret
  409fa0:	sub	sp, sp, #0x50
  409fa4:	stp	x29, x30, [sp, #16]
  409fa8:	stp	x24, x23, [sp, #32]
  409fac:	stp	x22, x21, [sp, #48]
  409fb0:	stp	x20, x19, [sp, #64]
  409fb4:	add	x29, sp, #0x10
  409fb8:	cbz	w2, 40a068 <mpls_pton@@Base+0x128>
  409fbc:	mov	w19, w2
  409fc0:	mov	x20, x1
  409fc4:	mov	x21, x0
  409fc8:	b	409fdc <mpls_pton@@Base+0x9c>
  409fcc:	mov	w22, w8
  409fd0:	tbz	w8, #0, 40a08c <mpls_pton@@Base+0x14c>
  409fd4:	subs	w19, w19, #0x1
  409fd8:	b.eq	40a068 <mpls_pton@@Base+0x128>  // b.none
  409fdc:	add	x1, sp, #0x8
  409fe0:	mov	x0, x21
  409fe4:	mov	w2, wzr
  409fe8:	bl	404c00 <strtoul@plt>
  409fec:	lsr	x9, x0, #20
  409ff0:	mov	w8, wzr
  409ff4:	cbnz	x9, 409fcc <mpls_pton@@Base+0x8c>
  409ff8:	ldr	x24, [sp, #8]
  409ffc:	cmp	x24, x21
  40a000:	b.eq	409fcc <mpls_pton@@Base+0x8c>  // b.none
  40a004:	lsl	w0, w0, #12
  40a008:	bl	40a0a8 <mpls_pton@@Base+0x168>
  40a00c:	str	w0, [x20]
  40a010:	ldrb	w8, [x24]
  40a014:	cmp	w8, #0x2f
  40a018:	b.eq	40a044 <mpls_pton@@Base+0x104>  // b.none
  40a01c:	cbnz	w8, 40a058 <mpls_pton@@Base+0x118>
  40a020:	mov	w23, w0
  40a024:	mov	w0, #0x100                 	// #256
  40a028:	bl	40a0a8 <mpls_pton@@Base+0x168>
  40a02c:	orr	w9, w0, w23
  40a030:	mov	w22, #0x1                   	// #1
  40a034:	mov	w8, wzr
  40a038:	str	w9, [x20]
  40a03c:	tbnz	wzr, #0, 409fd4 <mpls_pton@@Base+0x94>
  40a040:	b	40a08c <mpls_pton@@Base+0x14c>
  40a044:	add	x21, x24, #0x1
  40a048:	add	x20, x20, #0x4
  40a04c:	mov	w8, #0x1                   	// #1
  40a050:	tbnz	w8, #0, 409fd4 <mpls_pton@@Base+0x94>
  40a054:	b	40a08c <mpls_pton@@Base+0x14c>
  40a058:	mov	w22, wzr
  40a05c:	mov	w8, wzr
  40a060:	tbnz	wzr, #0, 409fd4 <mpls_pton@@Base+0x94>
  40a064:	b	40a08c <mpls_pton@@Base+0x14c>
  40a068:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40a06c:	ldr	x8, [x8, #3992]
  40a070:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a074:	add	x0, x0, #0x550
  40a078:	mov	w1, #0x18                  	// #24
  40a07c:	ldr	x3, [x8]
  40a080:	mov	w2, #0x1                   	// #1
  40a084:	bl	404f90 <fwrite@plt>
  40a088:	mov	w22, wzr
  40a08c:	mov	w0, w22
  40a090:	ldp	x20, x19, [sp, #64]
  40a094:	ldp	x22, x21, [sp, #48]
  40a098:	ldp	x24, x23, [sp, #32]
  40a09c:	ldp	x29, x30, [sp, #16]
  40a0a0:	add	sp, sp, #0x50
  40a0a4:	ret
  40a0a8:	rev	w0, w0
  40a0ac:	ret

000000000040a0b0 <jsonw_new@@Base>:
  40a0b0:	stp	x29, x30, [sp, #-32]!
  40a0b4:	str	x19, [sp, #16]
  40a0b8:	mov	x19, x0
  40a0bc:	mov	w0, #0x10                  	// #16
  40a0c0:	mov	x29, sp
  40a0c4:	bl	404d60 <malloc@plt>
  40a0c8:	cbz	x0, 40a0d8 <jsonw_new@@Base+0x28>
  40a0cc:	str	x19, [x0]
  40a0d0:	str	wzr, [x0, #8]
  40a0d4:	strh	wzr, [x0, #12]
  40a0d8:	ldr	x19, [sp, #16]
  40a0dc:	ldp	x29, x30, [sp], #32
  40a0e0:	ret

000000000040a0e4 <jsonw_destroy@@Base>:
  40a0e4:	stp	x29, x30, [sp, #-32]!
  40a0e8:	stp	x20, x19, [sp, #16]
  40a0ec:	ldr	x20, [x0]
  40a0f0:	mov	x29, sp
  40a0f4:	ldr	w8, [x20, #8]
  40a0f8:	cbnz	w8, 40a12c <jsonw_destroy@@Base+0x48>
  40a0fc:	ldr	x1, [x20]
  40a100:	mov	x19, x0
  40a104:	mov	w0, #0xa                   	// #10
  40a108:	bl	404cf0 <fputc@plt>
  40a10c:	ldr	x0, [x20]
  40a110:	bl	404fb0 <fflush@plt>
  40a114:	mov	x0, x20
  40a118:	bl	404f30 <free@plt>
  40a11c:	str	xzr, [x19]
  40a120:	ldp	x20, x19, [sp, #16]
  40a124:	ldp	x29, x30, [sp], #32
  40a128:	ret
  40a12c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a130:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a134:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a138:	add	x0, x0, #0x591
  40a13c:	add	x1, x1, #0x5a2
  40a140:	add	x3, x3, #0x5b0
  40a144:	mov	w2, #0x6e                  	// #110
  40a148:	bl	4050b0 <__assert_fail@plt>

000000000040a14c <jsonw_pretty@@Base>:
  40a14c:	and	w8, w1, #0x1
  40a150:	strb	w8, [x0, #12]
  40a154:	ret

000000000040a158 <jsonw_name@@Base>:
  40a158:	stp	x29, x30, [sp, #-32]!
  40a15c:	stp	x20, x19, [sp, #16]
  40a160:	mov	x29, sp
  40a164:	mov	x20, x1
  40a168:	mov	x19, x0
  40a16c:	bl	40a1b4 <jsonw_name@@Base+0x5c>
  40a170:	mov	x0, x19
  40a174:	bl	40a1e8 <jsonw_name@@Base+0x90>
  40a178:	mov	x0, x19
  40a17c:	mov	x1, x20
  40a180:	strb	wzr, [x19, #13]
  40a184:	bl	40a220 <jsonw_name@@Base+0xc8>
  40a188:	ldr	x1, [x19]
  40a18c:	mov	w0, #0x3a                  	// #58
  40a190:	bl	404cd0 <putc@plt>
  40a194:	ldrb	w8, [x19, #12]
  40a198:	cbz	w8, 40a1a8 <jsonw_name@@Base+0x50>
  40a19c:	ldr	x1, [x19]
  40a1a0:	mov	w0, #0x20                  	// #32
  40a1a4:	bl	404cd0 <putc@plt>
  40a1a8:	ldp	x20, x19, [sp, #16]
  40a1ac:	ldp	x29, x30, [sp], #32
  40a1b0:	ret
  40a1b4:	stp	x29, x30, [sp, #-32]!
  40a1b8:	str	x19, [sp, #16]
  40a1bc:	mov	x19, x0
  40a1c0:	ldrb	w0, [x0, #13]
  40a1c4:	mov	x29, sp
  40a1c8:	cbz	w0, 40a1d4 <jsonw_name@@Base+0x7c>
  40a1cc:	ldr	x1, [x19]
  40a1d0:	bl	404cd0 <putc@plt>
  40a1d4:	mov	w8, #0x2c                  	// #44
  40a1d8:	strb	w8, [x19, #13]
  40a1dc:	ldr	x19, [sp, #16]
  40a1e0:	ldp	x29, x30, [sp], #32
  40a1e4:	ret
  40a1e8:	stp	x29, x30, [sp, #-32]!
  40a1ec:	ldrb	w8, [x0, #12]
  40a1f0:	str	x19, [sp, #16]
  40a1f4:	mov	x29, sp
  40a1f8:	cbz	w8, 40a214 <jsonw_name@@Base+0xbc>
  40a1fc:	ldr	x1, [x0]
  40a200:	mov	x19, x0
  40a204:	mov	w0, #0xa                   	// #10
  40a208:	bl	404cd0 <putc@plt>
  40a20c:	mov	x0, x19
  40a210:	bl	40a9f4 <jsonw_null_field@@Base+0x28>
  40a214:	ldr	x19, [sp, #16]
  40a218:	ldp	x29, x30, [sp], #32
  40a21c:	ret
  40a220:	stp	x29, x30, [sp, #-96]!
  40a224:	stp	x28, x27, [sp, #16]
  40a228:	stp	x26, x25, [sp, #32]
  40a22c:	stp	x24, x23, [sp, #48]
  40a230:	stp	x22, x21, [sp, #64]
  40a234:	stp	x20, x19, [sp, #80]
  40a238:	ldr	x8, [x0]
  40a23c:	mov	x19, x0
  40a240:	mov	x20, x1
  40a244:	mov	w0, #0x22                  	// #34
  40a248:	mov	x1, x8
  40a24c:	mov	x29, sp
  40a250:	bl	404cd0 <putc@plt>
  40a254:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a258:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a25c:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a260:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a264:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a268:	adrp	x26, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a26c:	adrp	x27, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a270:	adrp	x28, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a274:	add	x21, x21, #0x569
  40a278:	add	x22, x22, #0x608
  40a27c:	add	x23, x23, #0x5fc
  40a280:	add	x24, x24, #0x5ff
  40a284:	add	x25, x25, #0x605
  40a288:	add	x26, x26, #0x602
  40a28c:	add	x27, x27, #0x60e
  40a290:	add	x28, x28, #0x611
  40a294:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a298:	ldr	x1, [x19]
  40a29c:	bl	404cd0 <putc@plt>
  40a2a0:	add	x20, x20, #0x1
  40a2a4:	ldrb	w0, [x20]
  40a2a8:	cmp	w0, #0x27
  40a2ac:	b.hi	40a2dc <jsonw_name@@Base+0x184>  // b.pmore
  40a2b0:	adr	x8, 40a298 <jsonw_name@@Base+0x140>
  40a2b4:	ldrb	w9, [x21, x0]
  40a2b8:	add	x8, x8, x9, lsl #2
  40a2bc:	br	x8
  40a2c0:	ldr	x3, [x19]
  40a2c4:	mov	w1, #0x2                   	// #2
  40a2c8:	mov	w2, #0x1                   	// #1
  40a2cc:	mov	x0, x22
  40a2d0:	bl	404f90 <fwrite@plt>
  40a2d4:	add	x20, x20, #0x1
  40a2d8:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a2dc:	cmp	w0, #0x5c
  40a2e0:	b.ne	40a298 <jsonw_name@@Base+0x140>  // b.any
  40a2e4:	ldr	x3, [x19]
  40a2e8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a2ec:	mov	w1, #0x2                   	// #2
  40a2f0:	mov	w2, #0x1                   	// #1
  40a2f4:	add	x0, x0, #0x60b
  40a2f8:	bl	404f90 <fwrite@plt>
  40a2fc:	add	x20, x20, #0x1
  40a300:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a304:	ldr	x3, [x19]
  40a308:	mov	w1, #0x2                   	// #2
  40a30c:	mov	w2, #0x1                   	// #1
  40a310:	mov	x0, x23
  40a314:	bl	404f90 <fwrite@plt>
  40a318:	add	x20, x20, #0x1
  40a31c:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a320:	ldr	x3, [x19]
  40a324:	mov	w1, #0x2                   	// #2
  40a328:	mov	w2, #0x1                   	// #1
  40a32c:	mov	x0, x24
  40a330:	bl	404f90 <fwrite@plt>
  40a334:	add	x20, x20, #0x1
  40a338:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a33c:	ldr	x3, [x19]
  40a340:	mov	w1, #0x2                   	// #2
  40a344:	mov	w2, #0x1                   	// #1
  40a348:	mov	x0, x25
  40a34c:	bl	404f90 <fwrite@plt>
  40a350:	add	x20, x20, #0x1
  40a354:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a358:	ldr	x3, [x19]
  40a35c:	mov	w1, #0x2                   	// #2
  40a360:	mov	w2, #0x1                   	// #1
  40a364:	mov	x0, x26
  40a368:	bl	404f90 <fwrite@plt>
  40a36c:	add	x20, x20, #0x1
  40a370:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a374:	ldr	x3, [x19]
  40a378:	mov	w1, #0x2                   	// #2
  40a37c:	mov	w2, #0x1                   	// #1
  40a380:	mov	x0, x27
  40a384:	bl	404f90 <fwrite@plt>
  40a388:	add	x20, x20, #0x1
  40a38c:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a390:	ldr	x3, [x19]
  40a394:	mov	w1, #0x2                   	// #2
  40a398:	mov	w2, #0x1                   	// #1
  40a39c:	mov	x0, x28
  40a3a0:	bl	404f90 <fwrite@plt>
  40a3a4:	add	x20, x20, #0x1
  40a3a8:	b	40a2a4 <jsonw_name@@Base+0x14c>
  40a3ac:	ldr	x1, [x19]
  40a3b0:	mov	w0, #0x22                  	// #34
  40a3b4:	bl	404cd0 <putc@plt>
  40a3b8:	ldp	x20, x19, [sp, #80]
  40a3bc:	ldp	x22, x21, [sp, #64]
  40a3c0:	ldp	x24, x23, [sp, #48]
  40a3c4:	ldp	x26, x25, [sp, #32]
  40a3c8:	ldp	x28, x27, [sp, #16]
  40a3cc:	ldp	x29, x30, [sp], #96
  40a3d0:	ret

000000000040a3d4 <jsonw_printf@@Base>:
  40a3d4:	sub	sp, sp, #0x120
  40a3d8:	stp	x29, x30, [sp, #240]
  40a3dc:	add	x29, sp, #0xf0
  40a3e0:	mov	x8, #0xffffffffffffffd0    	// #-48
  40a3e4:	mov	x9, sp
  40a3e8:	sub	x10, x29, #0x70
  40a3ec:	movk	x8, #0xff80, lsl #32
  40a3f0:	add	x11, x29, #0x30
  40a3f4:	add	x9, x9, #0x80
  40a3f8:	add	x10, x10, #0x30
  40a3fc:	str	x28, [sp, #256]
  40a400:	stp	x20, x19, [sp, #272]
  40a404:	mov	x19, x1
  40a408:	mov	x20, x0
  40a40c:	stp	x2, x3, [x29, #-112]
  40a410:	stp	x4, x5, [x29, #-96]
  40a414:	stp	x6, x7, [x29, #-80]
  40a418:	stp	q1, q2, [sp, #16]
  40a41c:	stp	q3, q4, [sp, #48]
  40a420:	str	q0, [sp]
  40a424:	stp	q5, q6, [sp, #80]
  40a428:	str	q7, [sp, #112]
  40a42c:	stp	x9, x8, [x29, #-16]
  40a430:	stp	x11, x10, [x29, #-32]
  40a434:	bl	40a1b4 <jsonw_name@@Base+0x5c>
  40a438:	ldp	q0, q1, [x29, #-32]
  40a43c:	ldr	x0, [x20]
  40a440:	sub	x2, x29, #0x40
  40a444:	mov	x1, x19
  40a448:	stp	q0, q1, [x29, #-64]
  40a44c:	bl	405090 <vfprintf@plt>
  40a450:	ldp	x20, x19, [sp, #272]
  40a454:	ldr	x28, [sp, #256]
  40a458:	ldp	x29, x30, [sp, #240]
  40a45c:	add	sp, sp, #0x120
  40a460:	ret

000000000040a464 <jsonw_start_object@@Base>:
  40a464:	stp	x29, x30, [sp, #-16]!
  40a468:	mov	w1, #0x7b                  	// #123
  40a46c:	mov	x29, sp
  40a470:	bl	40a47c <jsonw_start_object@@Base+0x18>
  40a474:	ldp	x29, x30, [sp], #16
  40a478:	ret
  40a47c:	stp	x29, x30, [sp, #-32]!
  40a480:	stp	x20, x19, [sp, #16]
  40a484:	mov	x29, sp
  40a488:	mov	w19, w1
  40a48c:	mov	x20, x0
  40a490:	bl	40a1b4 <jsonw_name@@Base+0x5c>
  40a494:	ldr	x1, [x20]
  40a498:	mov	w0, w19
  40a49c:	bl	404cd0 <putc@plt>
  40a4a0:	ldr	w8, [x20, #8]
  40a4a4:	strb	wzr, [x20, #13]
  40a4a8:	add	w8, w8, #0x1
  40a4ac:	str	w8, [x20, #8]
  40a4b0:	ldp	x20, x19, [sp, #16]
  40a4b4:	ldp	x29, x30, [sp], #32
  40a4b8:	ret

000000000040a4bc <jsonw_end_object@@Base>:
  40a4bc:	stp	x29, x30, [sp, #-16]!
  40a4c0:	mov	w1, #0x7d                  	// #125
  40a4c4:	mov	x29, sp
  40a4c8:	bl	40a4d4 <jsonw_end_object@@Base+0x18>
  40a4cc:	ldp	x29, x30, [sp], #16
  40a4d0:	ret
  40a4d4:	stp	x29, x30, [sp, #-32]!
  40a4d8:	stp	x20, x19, [sp, #16]
  40a4dc:	ldr	w8, [x0, #8]
  40a4e0:	mov	x29, sp
  40a4e4:	cbz	w8, 40a528 <jsonw_end_object@@Base+0x6c>
  40a4e8:	ldrb	w9, [x0, #13]
  40a4ec:	mov	x19, x0
  40a4f0:	mov	w20, w1
  40a4f4:	sub	w8, w8, #0x1
  40a4f8:	str	w8, [x0, #8]
  40a4fc:	cbz	w9, 40a508 <jsonw_end_object@@Base+0x4c>
  40a500:	mov	x0, x19
  40a504:	bl	40a1e8 <jsonw_name@@Base+0x90>
  40a508:	ldr	x1, [x19]
  40a50c:	mov	w0, w20
  40a510:	bl	404cd0 <putc@plt>
  40a514:	mov	w8, #0x2c                  	// #44
  40a518:	strb	w8, [x19, #13]
  40a51c:	ldp	x20, x19, [sp, #16]
  40a520:	ldp	x29, x30, [sp], #32
  40a524:	ret
  40a528:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a52c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a530:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a534:	add	x0, x0, #0x614
  40a538:	add	x1, x1, #0x5a2
  40a53c:	add	x3, x3, #0x624
  40a540:	mov	w2, #0x85                  	// #133
  40a544:	bl	4050b0 <__assert_fail@plt>

000000000040a548 <jsonw_start_array@@Base>:
  40a548:	stp	x29, x30, [sp, #-32]!
  40a54c:	mov	w1, #0x5b                  	// #91
  40a550:	str	x19, [sp, #16]
  40a554:	mov	x29, sp
  40a558:	mov	x19, x0
  40a55c:	bl	40a47c <jsonw_start_object@@Base+0x18>
  40a560:	ldrb	w8, [x19, #12]
  40a564:	cbz	w8, 40a574 <jsonw_start_array@@Base+0x2c>
  40a568:	ldr	x1, [x19]
  40a56c:	mov	w0, #0x20                  	// #32
  40a570:	bl	404cd0 <putc@plt>
  40a574:	ldr	x19, [sp, #16]
  40a578:	ldp	x29, x30, [sp], #32
  40a57c:	ret

000000000040a580 <jsonw_end_array@@Base>:
  40a580:	stp	x29, x30, [sp, #-32]!
  40a584:	ldrb	w8, [x0, #12]
  40a588:	str	x19, [sp, #16]
  40a58c:	mov	x19, x0
  40a590:	mov	x29, sp
  40a594:	cbz	w8, 40a5ac <jsonw_end_array@@Base+0x2c>
  40a598:	ldrb	w8, [x19, #13]
  40a59c:	cbz	w8, 40a5ac <jsonw_end_array@@Base+0x2c>
  40a5a0:	ldr	x1, [x19]
  40a5a4:	mov	w0, #0x20                  	// #32
  40a5a8:	bl	404cd0 <putc@plt>
  40a5ac:	mov	w1, #0x5d                  	// #93
  40a5b0:	mov	x0, x19
  40a5b4:	strb	wzr, [x19, #13]
  40a5b8:	bl	40a4d4 <jsonw_end_object@@Base+0x18>
  40a5bc:	ldr	x19, [sp, #16]
  40a5c0:	ldp	x29, x30, [sp], #32
  40a5c4:	ret

000000000040a5c8 <jsonw_string@@Base>:
  40a5c8:	stp	x29, x30, [sp, #-32]!
  40a5cc:	stp	x20, x19, [sp, #16]
  40a5d0:	mov	x29, sp
  40a5d4:	mov	x19, x1
  40a5d8:	mov	x20, x0
  40a5dc:	bl	40a1b4 <jsonw_name@@Base+0x5c>
  40a5e0:	mov	x0, x20
  40a5e4:	mov	x1, x19
  40a5e8:	bl	40a220 <jsonw_name@@Base+0xc8>
  40a5ec:	ldp	x20, x19, [sp, #16]
  40a5f0:	ldp	x29, x30, [sp], #32
  40a5f4:	ret

000000000040a5f8 <jsonw_bool@@Base>:
  40a5f8:	stp	x29, x30, [sp, #-16]!
  40a5fc:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a600:	adrp	x9, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a604:	add	x8, x8, #0x474
  40a608:	add	x9, x9, #0x46f
  40a60c:	tst	w1, #0x1
  40a610:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a614:	csel	x2, x9, x8, ne  // ne = any
  40a618:	add	x1, x1, #0x78
  40a61c:	mov	x29, sp
  40a620:	bl	40a3d4 <jsonw_printf@@Base>
  40a624:	ldp	x29, x30, [sp], #16
  40a628:	ret

000000000040a62c <jsonw_null@@Base>:
  40a62c:	stp	x29, x30, [sp, #-16]!
  40a630:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a634:	add	x1, x1, #0x5d5
  40a638:	mov	x29, sp
  40a63c:	bl	40a3d4 <jsonw_printf@@Base>
  40a640:	ldp	x29, x30, [sp], #16
  40a644:	ret

000000000040a648 <jsonw_float@@Base>:
  40a648:	stp	x29, x30, [sp, #-16]!
  40a64c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a650:	add	x1, x1, #0x5da
  40a654:	mov	x29, sp
  40a658:	bl	40a3d4 <jsonw_printf@@Base>
  40a65c:	ldp	x29, x30, [sp], #16
  40a660:	ret

000000000040a664 <jsonw_hhu@@Base>:
  40a664:	stp	x29, x30, [sp, #-16]!
  40a668:	and	w2, w1, #0xff
  40a66c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a670:	add	x1, x1, #0x5dd
  40a674:	mov	x29, sp
  40a678:	bl	40a3d4 <jsonw_printf@@Base>
  40a67c:	ldp	x29, x30, [sp], #16
  40a680:	ret

000000000040a684 <jsonw_hu@@Base>:
  40a684:	stp	x29, x30, [sp, #-16]!
  40a688:	and	w2, w1, #0xffff
  40a68c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a690:	add	x1, x1, #0x5e2
  40a694:	mov	x29, sp
  40a698:	bl	40a3d4 <jsonw_printf@@Base>
  40a69c:	ldp	x29, x30, [sp], #16
  40a6a0:	ret

000000000040a6a4 <jsonw_uint@@Base>:
  40a6a4:	stp	x29, x30, [sp, #-16]!
  40a6a8:	mov	w2, w1
  40a6ac:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a6b0:	add	x1, x1, #0x465
  40a6b4:	mov	x29, sp
  40a6b8:	bl	40a3d4 <jsonw_printf@@Base>
  40a6bc:	ldp	x29, x30, [sp], #16
  40a6c0:	ret

000000000040a6c4 <jsonw_u64@@Base>:
  40a6c4:	stp	x29, x30, [sp, #-16]!
  40a6c8:	mov	x2, x1
  40a6cc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a6d0:	add	x1, x1, #0x5e6
  40a6d4:	mov	x29, sp
  40a6d8:	bl	40a3d4 <jsonw_printf@@Base>
  40a6dc:	ldp	x29, x30, [sp], #16
  40a6e0:	ret

000000000040a6e4 <jsonw_xint@@Base>:
  40a6e4:	stp	x29, x30, [sp, #-16]!
  40a6e8:	mov	x2, x1
  40a6ec:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a6f0:	add	x1, x1, #0x5ea
  40a6f4:	mov	x29, sp
  40a6f8:	bl	40a3d4 <jsonw_printf@@Base>
  40a6fc:	ldp	x29, x30, [sp], #16
  40a700:	ret

000000000040a704 <jsonw_luint@@Base>:
  40a704:	stp	x29, x30, [sp, #-16]!
  40a708:	mov	x2, x1
  40a70c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a710:	add	x1, x1, #0x5e6
  40a714:	mov	x29, sp
  40a718:	bl	40a3d4 <jsonw_printf@@Base>
  40a71c:	ldp	x29, x30, [sp], #16
  40a720:	ret

000000000040a724 <jsonw_lluint@@Base>:
  40a724:	stp	x29, x30, [sp, #-16]!
  40a728:	mov	x2, x1
  40a72c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a730:	add	x1, x1, #0x5ee
  40a734:	mov	x29, sp
  40a738:	bl	40a3d4 <jsonw_printf@@Base>
  40a73c:	ldp	x29, x30, [sp], #16
  40a740:	ret

000000000040a744 <jsonw_int@@Base>:
  40a744:	stp	x29, x30, [sp, #-16]!
  40a748:	mov	w2, w1
  40a74c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a750:	add	x1, x1, #0x3dc
  40a754:	mov	x29, sp
  40a758:	bl	40a3d4 <jsonw_printf@@Base>
  40a75c:	ldp	x29, x30, [sp], #16
  40a760:	ret

000000000040a764 <jsonw_s64@@Base>:
  40a764:	stp	x29, x30, [sp, #-16]!
  40a768:	mov	x2, x1
  40a76c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40a770:	add	x1, x1, #0x5f3
  40a774:	mov	x29, sp
  40a778:	bl	40a3d4 <jsonw_printf@@Base>
  40a77c:	ldp	x29, x30, [sp], #16
  40a780:	ret

000000000040a784 <jsonw_string_field@@Base>:
  40a784:	stp	x29, x30, [sp, #-32]!
  40a788:	stp	x20, x19, [sp, #16]
  40a78c:	mov	x29, sp
  40a790:	mov	x19, x2
  40a794:	mov	x20, x0
  40a798:	bl	40a158 <jsonw_name@@Base>
  40a79c:	mov	x0, x20
  40a7a0:	mov	x1, x19
  40a7a4:	bl	40a5c8 <jsonw_string@@Base>
  40a7a8:	ldp	x20, x19, [sp, #16]
  40a7ac:	ldp	x29, x30, [sp], #32
  40a7b0:	ret

000000000040a7b4 <jsonw_bool_field@@Base>:
  40a7b4:	stp	x29, x30, [sp, #-32]!
  40a7b8:	stp	x20, x19, [sp, #16]
  40a7bc:	mov	x29, sp
  40a7c0:	mov	w19, w2
  40a7c4:	mov	x20, x0
  40a7c8:	bl	40a158 <jsonw_name@@Base>
  40a7cc:	and	w1, w19, #0x1
  40a7d0:	mov	x0, x20
  40a7d4:	bl	40a5f8 <jsonw_bool@@Base>
  40a7d8:	ldp	x20, x19, [sp, #16]
  40a7dc:	ldp	x29, x30, [sp], #32
  40a7e0:	ret

000000000040a7e4 <jsonw_float_field@@Base>:
  40a7e4:	str	d8, [sp, #-32]!
  40a7e8:	stp	x29, x30, [sp, #8]
  40a7ec:	str	x19, [sp, #24]
  40a7f0:	mov	x29, sp
  40a7f4:	mov	v8.16b, v0.16b
  40a7f8:	mov	x19, x0
  40a7fc:	bl	40a158 <jsonw_name@@Base>
  40a800:	mov	x0, x19
  40a804:	mov	v0.16b, v8.16b
  40a808:	bl	40a648 <jsonw_float@@Base>
  40a80c:	ldr	x19, [sp, #24]
  40a810:	ldp	x29, x30, [sp, #8]
  40a814:	ldr	d8, [sp], #32
  40a818:	ret

000000000040a81c <jsonw_uint_field@@Base>:
  40a81c:	stp	x29, x30, [sp, #-32]!
  40a820:	stp	x20, x19, [sp, #16]
  40a824:	mov	x29, sp
  40a828:	mov	w19, w2
  40a82c:	mov	x20, x0
  40a830:	bl	40a158 <jsonw_name@@Base>
  40a834:	mov	x0, x20
  40a838:	mov	w1, w19
  40a83c:	bl	40a6a4 <jsonw_uint@@Base>
  40a840:	ldp	x20, x19, [sp, #16]
  40a844:	ldp	x29, x30, [sp], #32
  40a848:	ret

000000000040a84c <jsonw_u64_field@@Base>:
  40a84c:	stp	x29, x30, [sp, #-32]!
  40a850:	stp	x20, x19, [sp, #16]
  40a854:	mov	x29, sp
  40a858:	mov	x19, x2
  40a85c:	mov	x20, x0
  40a860:	bl	40a158 <jsonw_name@@Base>
  40a864:	mov	x0, x20
  40a868:	mov	x1, x19
  40a86c:	bl	40a6c4 <jsonw_u64@@Base>
  40a870:	ldp	x20, x19, [sp, #16]
  40a874:	ldp	x29, x30, [sp], #32
  40a878:	ret

000000000040a87c <jsonw_xint_field@@Base>:
  40a87c:	stp	x29, x30, [sp, #-32]!
  40a880:	stp	x20, x19, [sp, #16]
  40a884:	mov	x29, sp
  40a888:	mov	x19, x2
  40a88c:	mov	x20, x0
  40a890:	bl	40a158 <jsonw_name@@Base>
  40a894:	mov	x0, x20
  40a898:	mov	x1, x19
  40a89c:	bl	40a6e4 <jsonw_xint@@Base>
  40a8a0:	ldp	x20, x19, [sp, #16]
  40a8a4:	ldp	x29, x30, [sp], #32
  40a8a8:	ret

000000000040a8ac <jsonw_hhu_field@@Base>:
  40a8ac:	stp	x29, x30, [sp, #-32]!
  40a8b0:	stp	x20, x19, [sp, #16]
  40a8b4:	mov	x29, sp
  40a8b8:	mov	w19, w2
  40a8bc:	mov	x20, x0
  40a8c0:	bl	40a158 <jsonw_name@@Base>
  40a8c4:	mov	x0, x20
  40a8c8:	mov	w1, w19
  40a8cc:	bl	40a664 <jsonw_hhu@@Base>
  40a8d0:	ldp	x20, x19, [sp, #16]
  40a8d4:	ldp	x29, x30, [sp], #32
  40a8d8:	ret

000000000040a8dc <jsonw_hu_field@@Base>:
  40a8dc:	stp	x29, x30, [sp, #-32]!
  40a8e0:	stp	x20, x19, [sp, #16]
  40a8e4:	mov	x29, sp
  40a8e8:	mov	w19, w2
  40a8ec:	mov	x20, x0
  40a8f0:	bl	40a158 <jsonw_name@@Base>
  40a8f4:	mov	x0, x20
  40a8f8:	mov	w1, w19
  40a8fc:	bl	40a684 <jsonw_hu@@Base>
  40a900:	ldp	x20, x19, [sp, #16]
  40a904:	ldp	x29, x30, [sp], #32
  40a908:	ret

000000000040a90c <jsonw_luint_field@@Base>:
  40a90c:	stp	x29, x30, [sp, #-32]!
  40a910:	stp	x20, x19, [sp, #16]
  40a914:	mov	x29, sp
  40a918:	mov	x19, x2
  40a91c:	mov	x20, x0
  40a920:	bl	40a158 <jsonw_name@@Base>
  40a924:	mov	x0, x20
  40a928:	mov	x1, x19
  40a92c:	bl	40a704 <jsonw_luint@@Base>
  40a930:	ldp	x20, x19, [sp, #16]
  40a934:	ldp	x29, x30, [sp], #32
  40a938:	ret

000000000040a93c <jsonw_lluint_field@@Base>:
  40a93c:	stp	x29, x30, [sp, #-32]!
  40a940:	stp	x20, x19, [sp, #16]
  40a944:	mov	x29, sp
  40a948:	mov	x19, x2
  40a94c:	mov	x20, x0
  40a950:	bl	40a158 <jsonw_name@@Base>
  40a954:	mov	x0, x20
  40a958:	mov	x1, x19
  40a95c:	bl	40a724 <jsonw_lluint@@Base>
  40a960:	ldp	x20, x19, [sp, #16]
  40a964:	ldp	x29, x30, [sp], #32
  40a968:	ret

000000000040a96c <jsonw_int_field@@Base>:
  40a96c:	stp	x29, x30, [sp, #-32]!
  40a970:	stp	x20, x19, [sp, #16]
  40a974:	mov	x29, sp
  40a978:	mov	w19, w2
  40a97c:	mov	x20, x0
  40a980:	bl	40a158 <jsonw_name@@Base>
  40a984:	mov	x0, x20
  40a988:	mov	w1, w19
  40a98c:	bl	40a744 <jsonw_int@@Base>
  40a990:	ldp	x20, x19, [sp, #16]
  40a994:	ldp	x29, x30, [sp], #32
  40a998:	ret

000000000040a99c <jsonw_s64_field@@Base>:
  40a99c:	stp	x29, x30, [sp, #-32]!
  40a9a0:	stp	x20, x19, [sp, #16]
  40a9a4:	mov	x29, sp
  40a9a8:	mov	x19, x2
  40a9ac:	mov	x20, x0
  40a9b0:	bl	40a158 <jsonw_name@@Base>
  40a9b4:	mov	x0, x20
  40a9b8:	mov	x1, x19
  40a9bc:	bl	40a764 <jsonw_s64@@Base>
  40a9c0:	ldp	x20, x19, [sp, #16]
  40a9c4:	ldp	x29, x30, [sp], #32
  40a9c8:	ret

000000000040a9cc <jsonw_null_field@@Base>:
  40a9cc:	stp	x29, x30, [sp, #-32]!
  40a9d0:	str	x19, [sp, #16]
  40a9d4:	mov	x29, sp
  40a9d8:	mov	x19, x0
  40a9dc:	bl	40a158 <jsonw_name@@Base>
  40a9e0:	mov	x0, x19
  40a9e4:	bl	40a62c <jsonw_null@@Base>
  40a9e8:	ldr	x19, [sp, #16]
  40a9ec:	ldp	x29, x30, [sp], #32
  40a9f0:	ret
  40a9f4:	stp	x29, x30, [sp, #-48]!
  40a9f8:	stp	x20, x19, [sp, #32]
  40a9fc:	ldr	w8, [x0, #8]
  40aa00:	str	x21, [sp, #16]
  40aa04:	mov	x29, sp
  40aa08:	cbz	w8, 40aa40 <jsonw_null_field@@Base+0x74>
  40aa0c:	adrp	x20, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40aa10:	mov	x19, x0
  40aa14:	mov	w21, wzr
  40aa18:	add	x20, x20, #0x5f7
  40aa1c:	ldr	x3, [x19]
  40aa20:	mov	w1, #0x4                   	// #4
  40aa24:	mov	w2, #0x1                   	// #1
  40aa28:	mov	x0, x20
  40aa2c:	bl	404f90 <fwrite@plt>
  40aa30:	ldr	w8, [x19, #8]
  40aa34:	add	w21, w21, #0x1
  40aa38:	cmp	w21, w8
  40aa3c:	b.cc	40aa1c <jsonw_null_field@@Base+0x50>  // b.lo, b.ul, b.last
  40aa40:	ldp	x20, x19, [sp, #32]
  40aa44:	ldr	x21, [sp, #16]
  40aa48:	ldp	x29, x30, [sp], #48
  40aa4c:	ret

000000000040aa50 <nl_dump_ext_ack@@Base>:
  40aa50:	mov	w0, wzr
  40aa54:	ret

000000000040aa58 <nl_dump_ext_ack_done@@Base>:
  40aa58:	mov	w0, wzr
  40aa5c:	ret

000000000040aa60 <rtnl_set_strict_dump@@Base>:
  40aa60:	stp	x29, x30, [sp, #-32]!
  40aa64:	mov	x29, sp
  40aa68:	mov	w8, #0x1                   	// #1
  40aa6c:	str	w8, [x29, #28]
  40aa70:	str	x19, [sp, #16]
  40aa74:	mov	x19, x0
  40aa78:	ldr	w0, [x0]
  40aa7c:	add	x3, x29, #0x1c
  40aa80:	mov	w1, #0x10e                 	// #270
  40aa84:	mov	w2, #0xc                   	// #12
  40aa88:	mov	w4, #0x4                   	// #4
  40aa8c:	bl	404d70 <setsockopt@plt>
  40aa90:	tbnz	w0, #31, 40aaa0 <rtnl_set_strict_dump@@Base+0x40>
  40aa94:	ldr	w8, [x19, #48]
  40aa98:	orr	w8, w8, #0x4
  40aa9c:	str	w8, [x19, #48]
  40aaa0:	ldr	x19, [sp, #16]
  40aaa4:	ldp	x29, x30, [sp], #32
  40aaa8:	ret

000000000040aaac <rtnl_add_nl_group@@Base>:
  40aaac:	sub	sp, sp, #0x20
  40aab0:	stp	x29, x30, [sp, #16]
  40aab4:	add	x29, sp, #0x10
  40aab8:	stur	w1, [x29, #-4]
  40aabc:	ldr	w0, [x0]
  40aac0:	sub	x3, x29, #0x4
  40aac4:	mov	w1, #0x10e                 	// #270
  40aac8:	mov	w2, #0x1                   	// #1
  40aacc:	mov	w4, #0x4                   	// #4
  40aad0:	bl	404d70 <setsockopt@plt>
  40aad4:	ldp	x29, x30, [sp, #16]
  40aad8:	add	sp, sp, #0x20
  40aadc:	ret

000000000040aae0 <rtnl_close@@Base>:
  40aae0:	stp	x29, x30, [sp, #-32]!
  40aae4:	str	x19, [sp, #16]
  40aae8:	mov	x19, x0
  40aaec:	ldr	w0, [x0]
  40aaf0:	mov	x29, sp
  40aaf4:	tbnz	w0, #31, 40ab04 <rtnl_close@@Base+0x24>
  40aaf8:	bl	404e60 <close@plt>
  40aafc:	mov	w8, #0xffffffff            	// #-1
  40ab00:	str	w8, [x19]
  40ab04:	ldr	x19, [sp, #16]
  40ab08:	ldp	x29, x30, [sp], #32
  40ab0c:	ret

000000000040ab10 <rtnl_open_byproto@@Base>:
  40ab10:	sub	sp, sp, #0x40
  40ab14:	stp	x29, x30, [sp, #16]
  40ab18:	stp	x20, x19, [sp, #48]
  40ab1c:	add	x29, sp, #0x10
  40ab20:	mov	w20, w1
  40ab24:	mov	w8, #0x8000                	// #32768
  40ab28:	mov	w9, #0x1                   	// #1
  40ab2c:	movi	v0.2d, #0x0
  40ab30:	mov	w1, #0x3                   	// #3
  40ab34:	str	x21, [sp, #32]
  40ab38:	mov	x19, x0
  40ab3c:	str	w8, [x29, #24]
  40ab40:	stur	w9, [x29, #-4]
  40ab44:	stp	q0, q0, [x0, #16]
  40ab48:	str	xzr, [x0, #48]
  40ab4c:	str	q0, [x0]
  40ab50:	str	w2, [x0, #36]
  40ab54:	mov	w0, #0x10                  	// #16
  40ab58:	movk	w1, #0x8, lsl #16
  40ab5c:	bl	404fa0 <socket@plt>
  40ab60:	str	w0, [x19]
  40ab64:	tbnz	w0, #31, 40ac2c <rtnl_open_byproto@@Base+0x11c>
  40ab68:	add	x3, x29, #0x18
  40ab6c:	mov	w1, #0x1                   	// #1
  40ab70:	mov	w2, #0x7                   	// #7
  40ab74:	mov	w4, #0x4                   	// #4
  40ab78:	bl	404d70 <setsockopt@plt>
  40ab7c:	tbnz	w0, #31, 40ac38 <rtnl_open_byproto@@Base+0x128>
  40ab80:	adrp	x3, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40ab84:	ldr	w0, [x19]
  40ab88:	ldr	x3, [x3, #4024]
  40ab8c:	mov	w1, #0x1                   	// #1
  40ab90:	mov	w2, #0x8                   	// #8
  40ab94:	mov	w4, #0x4                   	// #4
  40ab98:	bl	404d70 <setsockopt@plt>
  40ab9c:	tbnz	w0, #31, 40ac44 <rtnl_open_byproto@@Base+0x134>
  40aba0:	ldr	w0, [x19]
  40aba4:	sub	x3, x29, #0x4
  40aba8:	mov	w1, #0x10e                 	// #270
  40abac:	mov	w2, #0xb                   	// #11
  40abb0:	mov	w4, #0x4                   	// #4
  40abb4:	bl	404d70 <setsockopt@plt>
  40abb8:	mov	x21, x19
  40abbc:	str	xzr, [x21, #4]!
  40abc0:	mov	w8, #0x10                  	// #16
  40abc4:	strh	w8, [x21]
  40abc8:	ldr	w0, [x19]
  40abcc:	mov	w2, #0xc                   	// #12
  40abd0:	mov	x1, x21
  40abd4:	str	w20, [x19, #12]
  40abd8:	mov	w20, #0xc                   	// #12
  40abdc:	bl	404c90 <bind@plt>
  40abe0:	tbnz	w0, #31, 40ac50 <rtnl_open_byproto@@Base+0x140>
  40abe4:	str	w20, [x29, #28]
  40abe8:	ldr	w0, [x19]
  40abec:	add	x2, x29, #0x1c
  40abf0:	mov	x1, x21
  40abf4:	bl	4050f0 <getsockname@plt>
  40abf8:	tbnz	w0, #31, 40ac5c <rtnl_open_byproto@@Base+0x14c>
  40abfc:	ldr	w2, [x29, #28]
  40ac00:	cmp	w2, #0xc
  40ac04:	b.ne	40ac6c <rtnl_open_byproto@@Base+0x15c>  // b.any
  40ac08:	ldrh	w2, [x21]
  40ac0c:	cmp	w2, #0x10
  40ac10:	b.ne	40ac80 <rtnl_open_byproto@@Base+0x170>  // b.any
  40ac14:	mov	x0, xzr
  40ac18:	bl	404d50 <time@plt>
  40ac1c:	mov	x8, x0
  40ac20:	mov	w0, wzr
  40ac24:	str	w8, [x19, #28]
  40ac28:	b	40ac9c <rtnl_open_byproto@@Base+0x18c>
  40ac2c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac30:	add	x0, x0, #0x649
  40ac34:	b	40ac64 <rtnl_open_byproto@@Base+0x154>
  40ac38:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac3c:	add	x0, x0, #0x664
  40ac40:	b	40ac64 <rtnl_open_byproto@@Base+0x154>
  40ac44:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac48:	add	x0, x0, #0x66e
  40ac4c:	b	40ac64 <rtnl_open_byproto@@Base+0x154>
  40ac50:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac54:	add	x0, x0, #0x678
  40ac58:	b	40ac64 <rtnl_open_byproto@@Base+0x154>
  40ac5c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac60:	add	x0, x0, #0x693
  40ac64:	bl	404c30 <perror@plt>
  40ac68:	b	40ac98 <rtnl_open_byproto@@Base+0x188>
  40ac6c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40ac70:	ldr	x8, [x8, #3992]
  40ac74:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac78:	add	x1, x1, #0x6a6
  40ac7c:	b	40ac90 <rtnl_open_byproto@@Base+0x180>
  40ac80:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40ac84:	ldr	x8, [x8, #3992]
  40ac88:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ac8c:	add	x1, x1, #0x6bf
  40ac90:	ldr	x0, [x8]
  40ac94:	bl	405100 <fprintf@plt>
  40ac98:	mov	w0, #0xffffffff            	// #-1
  40ac9c:	ldp	x20, x19, [sp, #48]
  40aca0:	ldr	x21, [sp, #32]
  40aca4:	ldp	x29, x30, [sp, #16]
  40aca8:	add	sp, sp, #0x40
  40acac:	ret

000000000040acb0 <rtnl_open@@Base>:
  40acb0:	stp	x29, x30, [sp, #-16]!
  40acb4:	mov	w2, wzr
  40acb8:	mov	x29, sp
  40acbc:	bl	40ab10 <rtnl_open_byproto@@Base>
  40acc0:	ldp	x29, x30, [sp], #16
  40acc4:	ret

000000000040acc8 <rtnl_nexthopdump_req@@Base>:
  40acc8:	sub	sp, sp, #0xc0
  40accc:	mov	x8, #0x18                  	// #24
  40acd0:	movk	x8, #0x6a, lsl #32
  40acd4:	movi	v0.2d, #0x0
  40acd8:	movk	x8, #0x301, lsl #48
  40acdc:	stp	x29, x30, [sp, #160]
  40ace0:	str	xzr, [sp, #144]
  40ace4:	stp	q0, q0, [sp, #112]
  40ace8:	stp	q0, q0, [sp, #80]
  40acec:	stp	q0, q0, [sp, #48]
  40acf0:	stp	q0, q0, [sp, #16]
  40acf4:	str	q0, [sp]
  40acf8:	str	x8, [sp]
  40acfc:	ldr	w8, [x0, #28]
  40ad00:	str	x19, [sp, #176]
  40ad04:	mov	x19, x0
  40ad08:	add	x29, sp, #0xa0
  40ad0c:	add	w8, w8, #0x1
  40ad10:	stp	w8, w8, [x0, #28]
  40ad14:	str	w8, [sp, #8]
  40ad18:	strb	w1, [sp, #16]
  40ad1c:	cbz	x2, 40ad30 <rtnl_nexthopdump_req@@Base+0x68>
  40ad20:	mov	x0, sp
  40ad24:	mov	w1, #0x98                  	// #152
  40ad28:	blr	x2
  40ad2c:	cbnz	w0, 40ad44 <rtnl_nexthopdump_req@@Base+0x7c>
  40ad30:	ldr	w0, [x19]
  40ad34:	mov	x1, sp
  40ad38:	mov	w2, #0x98                  	// #152
  40ad3c:	mov	w3, wzr
  40ad40:	bl	404f50 <send@plt>
  40ad44:	ldr	x19, [sp, #176]
  40ad48:	ldp	x29, x30, [sp, #160]
  40ad4c:	add	sp, sp, #0xc0
  40ad50:	ret

000000000040ad54 <rtnl_addrdump_req@@Base>:
  40ad54:	sub	sp, sp, #0xc0
  40ad58:	mov	x8, #0x18                  	// #24
  40ad5c:	movk	x8, #0x16, lsl #32
  40ad60:	movi	v0.2d, #0x0
  40ad64:	movk	x8, #0x301, lsl #48
  40ad68:	stp	x29, x30, [sp, #160]
  40ad6c:	str	xzr, [sp, #144]
  40ad70:	stp	q0, q0, [sp, #112]
  40ad74:	stp	q0, q0, [sp, #80]
  40ad78:	stp	q0, q0, [sp, #48]
  40ad7c:	stp	q0, q0, [sp, #16]
  40ad80:	str	q0, [sp]
  40ad84:	str	x8, [sp]
  40ad88:	ldr	w8, [x0, #28]
  40ad8c:	str	x19, [sp, #176]
  40ad90:	mov	x19, x0
  40ad94:	add	x29, sp, #0xa0
  40ad98:	add	w8, w8, #0x1
  40ad9c:	stp	w8, w8, [x0, #28]
  40ada0:	str	w8, [sp, #8]
  40ada4:	strb	w1, [sp, #16]
  40ada8:	cbz	x2, 40adbc <rtnl_addrdump_req@@Base+0x68>
  40adac:	mov	x0, sp
  40adb0:	mov	w1, #0x98                  	// #152
  40adb4:	blr	x2
  40adb8:	cbnz	w0, 40add0 <rtnl_addrdump_req@@Base+0x7c>
  40adbc:	ldr	w0, [x19]
  40adc0:	mov	x1, sp
  40adc4:	mov	w2, #0x98                  	// #152
  40adc8:	mov	w3, wzr
  40adcc:	bl	404f50 <send@plt>
  40add0:	ldr	x19, [sp, #176]
  40add4:	ldp	x29, x30, [sp, #160]
  40add8:	add	sp, sp, #0xc0
  40addc:	ret

000000000040ade0 <rtnl_addrlbldump_req@@Base>:
  40ade0:	sub	sp, sp, #0x30
  40ade4:	mov	x8, #0x1c                  	// #28
  40ade8:	movk	x8, #0x4a, lsl #32
  40adec:	movk	x8, #0x301, lsl #48
  40adf0:	stp	x29, x30, [sp, #32]
  40adf4:	str	x8, [sp]
  40adf8:	ldr	w8, [x0, #28]
  40adfc:	mov	w2, #0x1c                  	// #28
  40ae00:	mov	w3, wzr
  40ae04:	add	x29, sp, #0x20
  40ae08:	add	w8, w8, #0x1
  40ae0c:	stp	w8, w8, [x0, #28]
  40ae10:	stp	w8, wzr, [sp, #8]
  40ae14:	strb	w1, [sp, #16]
  40ae18:	stur	xzr, [sp, #17]
  40ae1c:	str	wzr, [sp, #24]
  40ae20:	ldr	w0, [x0]
  40ae24:	mov	x1, sp
  40ae28:	bl	404f50 <send@plt>
  40ae2c:	ldp	x29, x30, [sp, #32]
  40ae30:	add	sp, sp, #0x30
  40ae34:	ret

000000000040ae38 <rtnl_routedump_req@@Base>:
  40ae38:	sub	sp, sp, #0xc0
  40ae3c:	mov	x8, #0x1c                  	// #28
  40ae40:	movk	x8, #0x1a, lsl #32
  40ae44:	movi	v0.2d, #0x0
  40ae48:	movk	x8, #0x301, lsl #48
  40ae4c:	stp	x29, x30, [sp, #160]
  40ae50:	stur	q0, [sp, #140]
  40ae54:	stp	q0, q0, [sp, #112]
  40ae58:	stp	q0, q0, [sp, #80]
  40ae5c:	stp	q0, q0, [sp, #48]
  40ae60:	stp	q0, q0, [sp, #16]
  40ae64:	str	q0, [sp]
  40ae68:	str	x8, [sp]
  40ae6c:	ldr	w8, [x0, #28]
  40ae70:	str	x19, [sp, #176]
  40ae74:	mov	x19, x0
  40ae78:	add	x29, sp, #0xa0
  40ae7c:	add	w8, w8, #0x1
  40ae80:	stp	w8, w8, [x0, #28]
  40ae84:	str	w8, [sp, #8]
  40ae88:	strb	w1, [sp, #16]
  40ae8c:	cbz	x2, 40aea0 <rtnl_routedump_req@@Base+0x68>
  40ae90:	mov	x0, sp
  40ae94:	mov	w1, #0x9c                  	// #156
  40ae98:	blr	x2
  40ae9c:	cbnz	w0, 40aeb4 <rtnl_routedump_req@@Base+0x7c>
  40aea0:	ldr	w0, [x19]
  40aea4:	mov	x1, sp
  40aea8:	mov	w2, #0x9c                  	// #156
  40aeac:	mov	w3, wzr
  40aeb0:	bl	404f50 <send@plt>
  40aeb4:	ldr	x19, [sp, #176]
  40aeb8:	ldp	x29, x30, [sp, #160]
  40aebc:	add	sp, sp, #0xc0
  40aec0:	ret

000000000040aec4 <rtnl_ruledump_req@@Base>:
  40aec4:	sub	sp, sp, #0x30
  40aec8:	mov	x8, #0x1c                  	// #28
  40aecc:	movk	x8, #0x22, lsl #32
  40aed0:	movk	x8, #0x301, lsl #48
  40aed4:	stp	x29, x30, [sp, #32]
  40aed8:	str	x8, [sp]
  40aedc:	ldr	w8, [x0, #28]
  40aee0:	mov	w2, #0x1c                  	// #28
  40aee4:	mov	w3, wzr
  40aee8:	add	x29, sp, #0x20
  40aeec:	add	w8, w8, #0x1
  40aef0:	stp	w8, w8, [x0, #28]
  40aef4:	stp	w8, wzr, [sp, #8]
  40aef8:	strb	w1, [sp, #16]
  40aefc:	stur	xzr, [sp, #17]
  40af00:	str	wzr, [sp, #24]
  40af04:	ldr	w0, [x0]
  40af08:	mov	x1, sp
  40af0c:	bl	404f50 <send@plt>
  40af10:	ldp	x29, x30, [sp, #32]
  40af14:	add	sp, sp, #0x30
  40af18:	ret

000000000040af1c <rtnl_neighdump_req@@Base>:
  40af1c:	sub	sp, sp, #0x140
  40af20:	mov	x8, sp
  40af24:	movi	v0.2d, #0x0
  40af28:	add	x8, x8, #0x10c
  40af2c:	str	q0, [x8]
  40af30:	mov	x8, #0x1c                  	// #28
  40af34:	movk	x8, #0x1e, lsl #32
  40af38:	movk	x8, #0x301, lsl #48
  40af3c:	stp	x29, x30, [sp, #288]
  40af40:	stp	x28, x19, [sp, #304]
  40af44:	stp	q0, q0, [sp, #224]
  40af48:	stp	q0, q0, [sp, #192]
  40af4c:	stp	q0, q0, [sp, #160]
  40af50:	stp	q0, q0, [sp, #128]
  40af54:	stp	q0, q0, [sp, #96]
  40af58:	stp	q0, q0, [sp, #64]
  40af5c:	stp	q0, q0, [sp, #32]
  40af60:	stp	q0, q0, [sp]
  40af64:	str	q0, [sp, #256]
  40af68:	str	x8, [sp]
  40af6c:	ldr	w8, [x0, #28]
  40af70:	mov	x19, x0
  40af74:	add	x29, sp, #0x120
  40af78:	add	w8, w8, #0x1
  40af7c:	stp	w8, w8, [x0, #28]
  40af80:	str	w8, [sp, #8]
  40af84:	strb	w1, [sp, #16]
  40af88:	cbz	x2, 40af9c <rtnl_neighdump_req@@Base+0x80>
  40af8c:	mov	x0, sp
  40af90:	mov	w1, #0x11c                 	// #284
  40af94:	blr	x2
  40af98:	cbnz	w0, 40afb0 <rtnl_neighdump_req@@Base+0x94>
  40af9c:	ldr	w0, [x19]
  40afa0:	mov	x1, sp
  40afa4:	mov	w2, #0x11c                 	// #284
  40afa8:	mov	w3, wzr
  40afac:	bl	404f50 <send@plt>
  40afb0:	ldp	x28, x19, [sp, #304]
  40afb4:	ldp	x29, x30, [sp, #288]
  40afb8:	add	sp, sp, #0x140
  40afbc:	ret

000000000040afc0 <rtnl_neightbldump_req@@Base>:
  40afc0:	sub	sp, sp, #0x30
  40afc4:	mov	x8, #0x14                  	// #20
  40afc8:	movk	x8, #0x42, lsl #32
  40afcc:	movk	x8, #0x301, lsl #48
  40afd0:	stp	x29, x30, [sp, #32]
  40afd4:	str	x8, [sp, #8]
  40afd8:	ldr	w8, [x0, #28]
  40afdc:	mov	w2, #0x14                  	// #20
  40afe0:	mov	w3, wzr
  40afe4:	add	x29, sp, #0x20
  40afe8:	add	w8, w8, #0x1
  40afec:	stp	w8, w8, [x0, #28]
  40aff0:	stp	w8, wzr, [sp, #16]
  40aff4:	strb	w1, [sp, #24]
  40aff8:	strb	wzr, [sp, #25]
  40affc:	strh	wzr, [sp, #26]
  40b000:	ldr	w0, [x0]
  40b004:	add	x1, sp, #0x8
  40b008:	bl	404f50 <send@plt>
  40b00c:	ldp	x29, x30, [sp, #32]
  40b010:	add	sp, sp, #0x30
  40b014:	ret

000000000040b018 <rtnl_mdbdump_req@@Base>:
  40b018:	sub	sp, sp, #0x30
  40b01c:	mov	x8, #0x18                  	// #24
  40b020:	movk	x8, #0x56, lsl #32
  40b024:	movk	x8, #0x301, lsl #48
  40b028:	stp	x29, x30, [sp, #32]
  40b02c:	str	x8, [sp, #8]
  40b030:	ldr	w8, [x0, #28]
  40b034:	mov	w2, #0x18                  	// #24
  40b038:	mov	w3, wzr
  40b03c:	add	x29, sp, #0x20
  40b040:	add	w8, w8, #0x1
  40b044:	stp	w8, w8, [x0, #28]
  40b048:	stp	w8, wzr, [sp, #16]
  40b04c:	strb	w1, [sp, #24]
  40b050:	str	wzr, [sp, #28]
  40b054:	ldr	w0, [x0]
  40b058:	add	x1, sp, #0x8
  40b05c:	bl	404f50 <send@plt>
  40b060:	ldp	x29, x30, [sp, #32]
  40b064:	add	sp, sp, #0x30
  40b068:	ret

000000000040b06c <rtnl_netconfdump_req@@Base>:
  40b06c:	sub	sp, sp, #0x30
  40b070:	mov	x8, #0x14                  	// #20
  40b074:	movk	x8, #0x52, lsl #32
  40b078:	movk	x8, #0x301, lsl #48
  40b07c:	stp	x29, x30, [sp, #32]
  40b080:	str	x8, [sp, #8]
  40b084:	ldr	w8, [x0, #28]
  40b088:	mov	w2, #0x14                  	// #20
  40b08c:	mov	w3, wzr
  40b090:	add	x29, sp, #0x20
  40b094:	add	w8, w8, #0x1
  40b098:	stp	w8, w8, [x0, #28]
  40b09c:	stp	w8, wzr, [sp, #16]
  40b0a0:	strb	w1, [sp, #24]
  40b0a4:	ldr	w0, [x0]
  40b0a8:	add	x1, sp, #0x8
  40b0ac:	bl	404f50 <send@plt>
  40b0b0:	ldp	x29, x30, [sp, #32]
  40b0b4:	add	sp, sp, #0x30
  40b0b8:	ret

000000000040b0bc <rtnl_nsiddump_req_filter_fn@@Base>:
  40b0bc:	stp	x29, x30, [sp, #-48]!
  40b0c0:	stp	x28, x21, [sp, #16]
  40b0c4:	stp	x20, x19, [sp, #32]
  40b0c8:	mov	x29, sp
  40b0cc:	sub	sp, sp, #0x420
  40b0d0:	mov	x20, x2
  40b0d4:	mov	w21, w1
  40b0d8:	mov	x19, x0
  40b0dc:	add	x0, sp, #0x8
  40b0e0:	mov	w2, #0x414                 	// #1044
  40b0e4:	mov	w1, wzr
  40b0e8:	bl	404dc0 <memset@plt>
  40b0ec:	mov	x8, #0x14                  	// #20
  40b0f0:	movk	x8, #0x5a, lsl #32
  40b0f4:	movk	x8, #0x301, lsl #48
  40b0f8:	str	x8, [sp, #8]
  40b0fc:	ldr	w8, [x19, #28]
  40b100:	add	w8, w8, #0x1
  40b104:	stp	w8, w8, [x19, #28]
  40b108:	str	w8, [sp, #16]
  40b10c:	strb	w21, [sp, #24]
  40b110:	cbz	x20, 40b13c <rtnl_nsiddump_req_filter_fn@@Base+0x80>
  40b114:	add	x0, sp, #0x8
  40b118:	mov	w1, #0x414                 	// #1044
  40b11c:	blr	x20
  40b120:	cbnz	w0, 40b140 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40b124:	ldr	w0, [x19]
  40b128:	ldr	w2, [sp, #8]
  40b12c:	add	x1, sp, #0x8
  40b130:	mov	w3, wzr
  40b134:	bl	404f50 <send@plt>
  40b138:	b	40b140 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40b13c:	mov	w0, #0xffffffea            	// #-22
  40b140:	add	sp, sp, #0x420
  40b144:	ldp	x20, x19, [sp, #32]
  40b148:	ldp	x28, x21, [sp, #16]
  40b14c:	ldp	x29, x30, [sp], #48
  40b150:	ret

000000000040b154 <rtnl_linkdump_req@@Base>:
  40b154:	stp	x29, x30, [sp, #-16]!
  40b158:	mov	x29, sp
  40b15c:	cbz	w1, 40b16c <rtnl_linkdump_req@@Base+0x18>
  40b160:	bl	40b1f4 <rtnl_linkdump_req_filter@@Base+0x78>
  40b164:	ldp	x29, x30, [sp], #16
  40b168:	ret
  40b16c:	mov	w2, #0x1                   	// #1
  40b170:	bl	40b17c <rtnl_linkdump_req_filter@@Base>
  40b174:	ldp	x29, x30, [sp], #16
  40b178:	ret

000000000040b17c <rtnl_linkdump_req_filter@@Base>:
  40b17c:	sub	sp, sp, #0x40
  40b180:	cmp	w1, #0x7
  40b184:	stp	x29, x30, [sp, #48]
  40b188:	add	x29, sp, #0x30
  40b18c:	b.eq	40b194 <rtnl_linkdump_req_filter@@Base+0x18>  // b.none
  40b190:	cbnz	w1, 40b1e4 <rtnl_linkdump_req_filter@@Base+0x68>
  40b194:	mov	x8, #0x28                  	// #40
  40b198:	movk	x8, #0x12, lsl #32
  40b19c:	movk	x8, #0x301, lsl #48
  40b1a0:	str	x8, [sp, #8]
  40b1a4:	ldr	w8, [x0, #28]
  40b1a8:	mov	w9, #0x8                   	// #8
  40b1ac:	movk	w9, #0x1d, lsl #16
  40b1b0:	mov	w3, wzr
  40b1b4:	add	w8, w8, #0x1
  40b1b8:	stp	w8, w8, [x0, #28]
  40b1bc:	stp	w8, wzr, [sp, #16]
  40b1c0:	strb	w1, [sp, #24]
  40b1c4:	stur	xzr, [sp, #25]
  40b1c8:	str	xzr, [sp, #32]
  40b1cc:	stp	w9, w2, [sp, #40]
  40b1d0:	ldr	w0, [x0]
  40b1d4:	add	x1, sp, #0x8
  40b1d8:	mov	w2, #0x28                  	// #40
  40b1dc:	bl	404f50 <send@plt>
  40b1e0:	b	40b1e8 <rtnl_linkdump_req_filter@@Base+0x6c>
  40b1e4:	bl	40b1f4 <rtnl_linkdump_req_filter@@Base+0x78>
  40b1e8:	ldp	x29, x30, [sp, #48]
  40b1ec:	add	sp, sp, #0x40
  40b1f0:	ret
  40b1f4:	sub	sp, sp, #0x30
  40b1f8:	mov	x8, #0x20                  	// #32
  40b1fc:	movk	x8, #0x12, lsl #32
  40b200:	movk	x8, #0x301, lsl #48
  40b204:	stp	x29, x30, [sp, #32]
  40b208:	str	x8, [sp]
  40b20c:	ldr	w8, [x0, #28]
  40b210:	mov	w2, #0x20                  	// #32
  40b214:	mov	w3, wzr
  40b218:	add	x29, sp, #0x20
  40b21c:	add	w8, w8, #0x1
  40b220:	stp	w8, w8, [x0, #28]
  40b224:	stp	w8, wzr, [sp, #8]
  40b228:	strb	w1, [sp, #16]
  40b22c:	stur	xzr, [sp, #17]
  40b230:	str	xzr, [sp, #24]
  40b234:	ldr	w0, [x0]
  40b238:	mov	x1, sp
  40b23c:	bl	404f50 <send@plt>
  40b240:	ldp	x29, x30, [sp, #32]
  40b244:	add	sp, sp, #0x30
  40b248:	ret

000000000040b24c <rtnl_linkdump_req_filter_fn@@Base>:
  40b24c:	stp	x29, x30, [sp, #-48]!
  40b250:	stp	x28, x21, [sp, #16]
  40b254:	stp	x20, x19, [sp, #32]
  40b258:	mov	x29, sp
  40b25c:	sub	sp, sp, #0x420
  40b260:	mov	x20, x2
  40b264:	mov	w21, w1
  40b268:	cmp	w1, #0x11
  40b26c:	mov	x19, x0
  40b270:	b.eq	40b278 <rtnl_linkdump_req_filter_fn@@Base+0x2c>  // b.none
  40b274:	cbnz	w21, 40b2d8 <rtnl_linkdump_req_filter_fn@@Base+0x8c>
  40b278:	mov	x0, sp
  40b27c:	mov	w2, #0x420                 	// #1056
  40b280:	mov	w1, wzr
  40b284:	bl	404dc0 <memset@plt>
  40b288:	mov	x8, #0x20                  	// #32
  40b28c:	movk	x8, #0x12, lsl #32
  40b290:	movk	x8, #0x301, lsl #48
  40b294:	str	x8, [sp]
  40b298:	ldr	w8, [x19, #28]
  40b29c:	add	w8, w8, #0x1
  40b2a0:	stp	w8, w8, [x19, #28]
  40b2a4:	str	w8, [sp, #8]
  40b2a8:	strb	w21, [sp, #16]
  40b2ac:	cbz	x20, 40b2e8 <rtnl_linkdump_req_filter_fn@@Base+0x9c>
  40b2b0:	mov	x0, sp
  40b2b4:	mov	w1, #0x420                 	// #1056
  40b2b8:	blr	x20
  40b2bc:	cbnz	w0, 40b2ec <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40b2c0:	ldr	w0, [x19]
  40b2c4:	ldr	w2, [sp]
  40b2c8:	mov	x1, sp
  40b2cc:	mov	w3, wzr
  40b2d0:	bl	404f50 <send@plt>
  40b2d4:	b	40b2ec <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40b2d8:	mov	x0, x19
  40b2dc:	mov	w1, w21
  40b2e0:	bl	40b1f4 <rtnl_linkdump_req_filter@@Base+0x78>
  40b2e4:	b	40b2ec <rtnl_linkdump_req_filter_fn@@Base+0xa0>
  40b2e8:	mov	w0, #0xffffffea            	// #-22
  40b2ec:	add	sp, sp, #0x420
  40b2f0:	ldp	x20, x19, [sp, #32]
  40b2f4:	ldp	x28, x21, [sp, #16]
  40b2f8:	ldp	x29, x30, [sp], #48
  40b2fc:	ret

000000000040b300 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40b300:	sub	sp, sp, #0xc0
  40b304:	mov	x9, #0x20                  	// #32
  40b308:	movk	x9, #0x1e, lsl #32
  40b30c:	movi	v0.2d, #0x0
  40b310:	movk	x9, #0x301, lsl #48
  40b314:	stp	x29, x30, [sp, #160]
  40b318:	stp	q0, q0, [sp, #128]
  40b31c:	stp	q0, q0, [sp, #96]
  40b320:	stp	q0, q0, [sp, #64]
  40b324:	stp	q0, q0, [sp, #32]
  40b328:	stp	q0, q0, [sp]
  40b32c:	str	x9, [sp]
  40b330:	ldr	w9, [x0, #28]
  40b334:	str	x19, [sp, #176]
  40b338:	mov	x8, x1
  40b33c:	mov	x19, x0
  40b340:	add	w9, w9, #0x1
  40b344:	stp	w9, w9, [x0, #28]
  40b348:	str	w9, [sp, #8]
  40b34c:	mov	w9, #0x7                   	// #7
  40b350:	mov	x0, sp
  40b354:	mov	w1, #0xa0                  	// #160
  40b358:	add	x29, sp, #0xa0
  40b35c:	strb	w9, [sp, #16]
  40b360:	blr	x8
  40b364:	cbnz	w0, 40b37c <rtnl_fdb_linkdump_req_filter_fn@@Base+0x7c>
  40b368:	ldr	w0, [x19]
  40b36c:	mov	x1, sp
  40b370:	mov	w2, #0xa0                  	// #160
  40b374:	mov	w3, wzr
  40b378:	bl	404f50 <send@plt>
  40b37c:	ldr	x19, [sp, #176]
  40b380:	ldp	x29, x30, [sp, #160]
  40b384:	add	sp, sp, #0xc0
  40b388:	ret

000000000040b38c <rtnl_statsdump_req_filter@@Base>:
  40b38c:	sub	sp, sp, #0x30
  40b390:	mov	x8, #0x1c                  	// #28
  40b394:	movk	x8, #0x5e, lsl #32
  40b398:	movk	x8, #0x301, lsl #48
  40b39c:	stp	x29, x30, [sp, #32]
  40b3a0:	stp	xzr, xzr, [sp, #8]
  40b3a4:	str	wzr, [sp, #24]
  40b3a8:	str	x8, [sp]
  40b3ac:	ldr	w8, [x0, #28]
  40b3b0:	mov	w3, wzr
  40b3b4:	add	x29, sp, #0x20
  40b3b8:	add	w8, w8, #0x1
  40b3bc:	stp	w8, w8, [x0, #28]
  40b3c0:	stp	w8, wzr, [sp, #8]
  40b3c4:	strb	w1, [sp, #16]
  40b3c8:	str	w2, [sp, #24]
  40b3cc:	ldr	w0, [x0]
  40b3d0:	mov	x1, sp
  40b3d4:	mov	w2, #0x1c                  	// #28
  40b3d8:	bl	404f50 <send@plt>
  40b3dc:	ldp	x29, x30, [sp, #32]
  40b3e0:	add	sp, sp, #0x30
  40b3e4:	ret

000000000040b3e8 <rtnl_send@@Base>:
  40b3e8:	stp	x29, x30, [sp, #-16]!
  40b3ec:	ldr	w0, [x0]
  40b3f0:	mov	w3, wzr
  40b3f4:	sxtw	x2, w2
  40b3f8:	mov	x29, sp
  40b3fc:	bl	404f50 <send@plt>
  40b400:	ldp	x29, x30, [sp], #16
  40b404:	ret

000000000040b408 <rtnl_send_check@@Base>:
  40b408:	stp	x29, x30, [sp, #-32]!
  40b40c:	stp	x28, x19, [sp, #16]
  40b410:	mov	x29, sp
  40b414:	sub	sp, sp, #0x400
  40b418:	mov	x19, x0
  40b41c:	ldr	w0, [x0]
  40b420:	mov	w3, wzr
  40b424:	sxtw	x2, w2
  40b428:	bl	404f50 <send@plt>
  40b42c:	mov	x8, x0
  40b430:	tbnz	w8, #31, 40b4cc <rtnl_send_check@@Base+0xc4>
  40b434:	ldr	w0, [x19]
  40b438:	mov	x1, sp
  40b43c:	mov	w2, #0x400                 	// #1024
  40b440:	mov	w3, #0x42                  	// #66
  40b444:	bl	404e80 <recv@plt>
  40b448:	tbnz	w0, #31, 40b49c <rtnl_send_check@@Base+0x94>
  40b44c:	cmp	w0, #0x10
  40b450:	b.lt	40b494 <rtnl_send_check@@Base+0x8c>  // b.tstop
  40b454:	mov	x9, sp
  40b458:	ldr	w10, [x9]
  40b45c:	mov	w8, wzr
  40b460:	cmp	w10, #0x10
  40b464:	b.cc	40b4cc <rtnl_send_check@@Base+0xc4>  // b.lo, b.ul, b.last
  40b468:	cmp	w10, w0
  40b46c:	b.hi	40b4cc <rtnl_send_check@@Base+0xc4>  // b.pmore
  40b470:	ldrh	w8, [x9, #4]
  40b474:	cmp	w8, #0x2
  40b478:	b.eq	40b4b0 <rtnl_send_check@@Base+0xa8>  // b.none
  40b47c:	add	w8, w10, #0x3
  40b480:	and	w8, w8, #0xfffffffc
  40b484:	sub	w0, w0, w8
  40b488:	cmp	w0, #0xf
  40b48c:	add	x9, x9, x8
  40b490:	b.gt	40b458 <rtnl_send_check@@Base+0x50>
  40b494:	mov	w8, wzr
  40b498:	b	40b4cc <rtnl_send_check@@Base+0xc4>
  40b49c:	bl	4050c0 <__errno_location@plt>
  40b4a0:	ldr	w8, [x0]
  40b4a4:	cmp	w8, #0xb
  40b4a8:	csetm	w8, ne  // ne = any
  40b4ac:	b	40b4cc <rtnl_send_check@@Base+0xc4>
  40b4b0:	cmp	w10, #0x23
  40b4b4:	b.ls	40b4e0 <rtnl_send_check@@Base+0xd8>  // b.plast
  40b4b8:	ldr	w8, [x9, #16]
  40b4bc:	neg	w19, w8
  40b4c0:	bl	4050c0 <__errno_location@plt>
  40b4c4:	str	w19, [x0]
  40b4c8:	mov	w8, #0xffffffff            	// #-1
  40b4cc:	mov	w0, w8
  40b4d0:	add	sp, sp, #0x400
  40b4d4:	ldp	x28, x19, [sp, #16]
  40b4d8:	ldp	x29, x30, [sp], #32
  40b4dc:	ret
  40b4e0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40b4e4:	ldr	x8, [x8, #3992]
  40b4e8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b4ec:	add	x0, x0, #0x6d8
  40b4f0:	mov	w1, #0x10                  	// #16
  40b4f4:	ldr	x3, [x8]
  40b4f8:	mov	w2, #0x1                   	// #1
  40b4fc:	bl	404f90 <fwrite@plt>
  40b500:	b	40b4c8 <rtnl_send_check@@Base+0xc0>

000000000040b504 <rtnl_dump_request@@Base>:
  40b504:	sub	sp, sp, #0x90
  40b508:	stp	x29, x30, [sp, #128]
  40b50c:	add	x29, sp, #0x80
  40b510:	add	w8, w3, #0x10
  40b514:	mov	w9, #0x301                 	// #769
  40b518:	sturh	w1, [x29, #-12]
  40b51c:	adrp	x10, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b520:	stur	w8, [x29, #-16]
  40b524:	sturh	w9, [x29, #-10]
  40b528:	add	x10, x10, #0x9e0
  40b52c:	ldr	w8, [x0, #28]
  40b530:	ldr	x13, [x10]
  40b534:	ldr	w10, [x10, #8]
  40b538:	sub	x11, x29, #0x10
  40b53c:	mov	w12, #0x10                  	// #16
  40b540:	sxtw	x9, w3
  40b544:	add	w8, w8, #0x1
  40b548:	stp	w8, w8, [x0, #28]
  40b54c:	stur	x13, [x29, #-32]
  40b550:	sub	x13, x29, #0x20
  40b554:	stur	w10, [x29, #-24]
  40b558:	mov	w10, #0xc                   	// #12
  40b55c:	stp	x11, x12, [sp, #64]
  40b560:	add	x11, sp, #0x40
  40b564:	stp	x2, x9, [sp, #80]
  40b568:	mov	w9, #0x2                   	// #2
  40b56c:	stp	w8, wzr, [x29, #-8]
  40b570:	str	x13, [sp, #8]
  40b574:	str	w10, [sp, #16]
  40b578:	stp	x11, x9, [sp, #24]
  40b57c:	stp	xzr, xzr, [sp, #40]
  40b580:	str	wzr, [sp, #56]
  40b584:	ldr	w0, [x0]
  40b588:	add	x1, sp, #0x8
  40b58c:	mov	w2, wzr
  40b590:	bl	404de0 <sendmsg@plt>
  40b594:	ldp	x29, x30, [sp, #128]
  40b598:	add	sp, sp, #0x90
  40b59c:	ret

000000000040b5a0 <rtnl_dump_request_n@@Base>:
  40b5a0:	sub	sp, sp, #0x70
  40b5a4:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b5a8:	add	x8, x8, #0x9ec
  40b5ac:	ldr	x9, [x8]
  40b5b0:	ldr	w8, [x8, #8]
  40b5b4:	stp	x29, x30, [sp, #96]
  40b5b8:	add	x29, sp, #0x60
  40b5bc:	stur	x9, [x29, #-16]
  40b5c0:	stur	w8, [x29, #-8]
  40b5c4:	ldr	w8, [x1]
  40b5c8:	sub	x10, x29, #0x10
  40b5cc:	mov	w9, #0xc                   	// #12
  40b5d0:	str	x10, [sp, #8]
  40b5d4:	sub	x10, x29, #0x20
  40b5d8:	str	w9, [sp, #16]
  40b5dc:	mov	w9, #0x1                   	// #1
  40b5e0:	stp	x10, x9, [sp, #24]
  40b5e4:	mov	w9, #0x301                 	// #769
  40b5e8:	stp	xzr, xzr, [sp, #40]
  40b5ec:	str	wzr, [sp, #56]
  40b5f0:	stp	x1, x8, [x29, #-32]
  40b5f4:	strh	w9, [x1, #6]
  40b5f8:	str	wzr, [x1, #12]
  40b5fc:	ldr	w8, [x0, #28]
  40b600:	mov	w2, wzr
  40b604:	add	w8, w8, #0x1
  40b608:	stp	w8, w8, [x0, #28]
  40b60c:	str	w8, [x1, #8]
  40b610:	ldr	w0, [x0]
  40b614:	add	x1, sp, #0x8
  40b618:	bl	404de0 <sendmsg@plt>
  40b61c:	ldp	x29, x30, [sp, #96]
  40b620:	add	sp, sp, #0x70
  40b624:	ret

000000000040b628 <rtnl_dump_filter_nc@@Base>:
  40b628:	sub	sp, sp, #0x40
  40b62c:	stp	x1, x2, [sp]
  40b630:	mov	x1, sp
  40b634:	stp	x29, x30, [sp, #48]
  40b638:	add	x29, sp, #0x30
  40b63c:	strh	w3, [sp, #16]
  40b640:	stp	xzr, xzr, [sp, #32]
  40b644:	str	xzr, [sp, #24]
  40b648:	bl	40b658 <rtnl_dump_filter_nc@@Base+0x30>
  40b64c:	ldp	x29, x30, [sp, #48]
  40b650:	add	sp, sp, #0x40
  40b654:	ret
  40b658:	sub	sp, sp, #0xd0
  40b65c:	stp	x29, x30, [sp, #112]
  40b660:	add	x29, sp, #0x70
  40b664:	stp	x28, x27, [sp, #128]
  40b668:	stp	x20, x19, [sp, #192]
  40b66c:	mov	x19, x1
  40b670:	mov	x20, x0
  40b674:	mov	w28, wzr
  40b678:	sub	x8, x29, #0x10
  40b67c:	mov	w9, #0xc                   	// #12
  40b680:	sub	x10, x29, #0x20
  40b684:	mov	w11, #0x1                   	// #1
  40b688:	stp	x26, x25, [sp, #144]
  40b68c:	stp	x24, x23, [sp, #160]
  40b690:	stp	x22, x21, [sp, #176]
  40b694:	stp	xzr, xzr, [sp, #56]
  40b698:	str	wzr, [sp, #72]
  40b69c:	str	x8, [sp, #24]
  40b6a0:	str	w9, [sp, #32]
  40b6a4:	stp	x10, x11, [sp, #40]
  40b6a8:	str	x1, [sp, #8]
  40b6ac:	b	40b6c4 <rtnl_dump_filter_nc@@Base+0x9c>
  40b6b0:	mov	w21, #0x1                   	// #1
  40b6b4:	mov	w23, w24
  40b6b8:	orr	w8, w21, #0x2
  40b6bc:	cmp	w8, #0x2
  40b6c0:	b.ne	40b8b8 <rtnl_dump_filter_nc@@Base+0x290>  // b.any
  40b6c4:	ldr	w0, [x20]
  40b6c8:	add	x1, sp, #0x18
  40b6cc:	add	x2, sp, #0x10
  40b6d0:	bl	40c9b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40b6d4:	mov	w24, w0
  40b6d8:	tbnz	w0, #31, 40b6b0 <rtnl_dump_filter_nc@@Base+0x88>
  40b6dc:	ldr	x3, [x20, #40]
  40b6e0:	cbz	x3, 40b6f8 <rtnl_dump_filter_nc@@Base+0xd0>
  40b6e4:	ldr	x0, [sp, #16]
  40b6e8:	add	w8, w24, #0x3
  40b6ec:	and	w2, w8, #0xfffffffc
  40b6f0:	mov	w1, #0x1                   	// #1
  40b6f4:	bl	404f90 <fwrite@plt>
  40b6f8:	ldr	x8, [x19]
  40b6fc:	cbz	x8, 40b828 <rtnl_dump_filter_nc@@Base+0x200>
  40b700:	mov	w22, wzr
  40b704:	ldr	x26, [sp, #16]
  40b708:	mov	w25, w24
  40b70c:	cmp	w25, #0x10
  40b710:	b.lt	40b814 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.tstop
  40b714:	ldr	w8, [x26]
  40b718:	cmp	w8, #0x10
  40b71c:	b.cc	40b814 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.lo, b.ul, b.last
  40b720:	cmp	w8, w25
  40b724:	b.hi	40b814 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.pmore
  40b728:	ldrh	w8, [x19, #16]
  40b72c:	ldrh	w9, [x26, #6]
  40b730:	bic	w8, w9, w8
  40b734:	strh	w8, [x26, #6]
  40b738:	ldur	w9, [x29, #-12]
  40b73c:	cbnz	w9, 40b7d4 <rtnl_dump_filter_nc@@Base+0x1ac>
  40b740:	ldr	w9, [x26, #12]
  40b744:	ldr	w10, [x20, #8]
  40b748:	cmp	w9, w10
  40b74c:	b.ne	40b7d4 <rtnl_dump_filter_nc@@Base+0x1ac>  // b.any
  40b750:	ldr	w9, [x26, #8]
  40b754:	ldr	w10, [x20, #32]
  40b758:	cmp	w9, w10
  40b75c:	b.ne	40b7d4 <rtnl_dump_filter_nc@@Base+0x1ac>  // b.any
  40b760:	ldrh	w9, [x26, #4]
  40b764:	tst	w8, #0x10
  40b768:	csinc	w28, w28, wzr, eq  // eq = none
  40b76c:	cmp	w9, #0x2
  40b770:	b.eq	40b798 <rtnl_dump_filter_nc@@Base+0x170>  // b.none
  40b774:	cmp	w9, #0x3
  40b778:	b.ne	40b7bc <rtnl_dump_filter_nc@@Base+0x194>  // b.any
  40b77c:	mov	x0, x26
  40b780:	bl	40ca78 <__parse_rtattr_nested_compat@@Base+0x130>
  40b784:	tbnz	w0, #31, 40b7a4 <rtnl_dump_filter_nc@@Base+0x17c>
  40b788:	mov	w21, #0x8                   	// #8
  40b78c:	mov	w22, #0x1                   	// #1
  40b790:	cbz	w21, 40b70c <rtnl_dump_filter_nc@@Base+0xe4>
  40b794:	b	40b80c <rtnl_dump_filter_nc@@Base+0x1e4>
  40b798:	mov	x0, x20
  40b79c:	mov	x1, x26
  40b7a0:	bl	40cb30 <__parse_rtattr_nested_compat@@Base+0x1e8>
  40b7a4:	ldr	x0, [sp, #16]
  40b7a8:	bl	404f30 <free@plt>
  40b7ac:	mov	w21, #0x1                   	// #1
  40b7b0:	mov	w23, #0xffffffff            	// #-1
  40b7b4:	cbz	w21, 40b70c <rtnl_dump_filter_nc@@Base+0xe4>
  40b7b8:	b	40b80c <rtnl_dump_filter_nc@@Base+0x1e4>
  40b7bc:	ldr	x8, [x20, #40]
  40b7c0:	cbnz	x8, 40b7d4 <rtnl_dump_filter_nc@@Base+0x1ac>
  40b7c4:	ldp	x8, x1, [x19]
  40b7c8:	mov	x0, x26
  40b7cc:	blr	x8
  40b7d0:	tbnz	w0, #31, 40b7f4 <rtnl_dump_filter_nc@@Base+0x1cc>
  40b7d4:	ldr	w8, [x26]
  40b7d8:	mov	w21, wzr
  40b7dc:	add	w8, w8, #0x3
  40b7e0:	and	w8, w8, #0xfffffffc
  40b7e4:	sub	w25, w25, w8
  40b7e8:	add	x26, x26, x8
  40b7ec:	cbz	w21, 40b70c <rtnl_dump_filter_nc@@Base+0xe4>
  40b7f0:	b	40b80c <rtnl_dump_filter_nc@@Base+0x1e4>
  40b7f4:	mov	w27, w0
  40b7f8:	ldr	x0, [sp, #16]
  40b7fc:	bl	404f30 <free@plt>
  40b800:	mov	w21, #0x1                   	// #1
  40b804:	mov	w23, w27
  40b808:	cbz	w21, 40b70c <rtnl_dump_filter_nc@@Base+0xe4>
  40b80c:	cmp	w21, #0x8
  40b810:	b.ne	40b818 <rtnl_dump_filter_nc@@Base+0x1f0>  // b.any
  40b814:	mov	w21, wzr
  40b818:	cbnz	w21, 40b85c <rtnl_dump_filter_nc@@Base+0x234>
  40b81c:	ldr	x8, [x19, #24]!
  40b820:	cbnz	x8, 40b704 <rtnl_dump_filter_nc@@Base+0xdc>
  40b824:	b	40b830 <rtnl_dump_filter_nc@@Base+0x208>
  40b828:	mov	w22, wzr
  40b82c:	mov	w25, wzr
  40b830:	ldr	x0, [sp, #16]
  40b834:	bl	404f30 <free@plt>
  40b838:	cbz	w22, 40b84c <rtnl_dump_filter_nc@@Base+0x224>
  40b83c:	cbnz	w28, 40b864 <rtnl_dump_filter_nc@@Base+0x23c>
  40b840:	mov	w23, wzr
  40b844:	mov	w21, #0x1                   	// #1
  40b848:	b	40b85c <rtnl_dump_filter_nc@@Base+0x234>
  40b84c:	ldrb	w8, [sp, #72]
  40b850:	tbnz	w8, #5, 40b890 <rtnl_dump_filter_nc@@Base+0x268>
  40b854:	cbnz	w25, 40b8dc <rtnl_dump_filter_nc@@Base+0x2b4>
  40b858:	mov	w21, wzr
  40b85c:	ldr	x19, [sp, #8]
  40b860:	b	40b6b8 <rtnl_dump_filter_nc@@Base+0x90>
  40b864:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40b868:	ldr	x8, [x8, #3992]
  40b86c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b870:	mov	w1, #0x2e                  	// #46
  40b874:	mov	w2, #0x1                   	// #1
  40b878:	ldr	x3, [x8]
  40b87c:	add	x0, x0, #0x8e6
  40b880:	mov	w21, #0x1                   	// #1
  40b884:	bl	404f90 <fwrite@plt>
  40b888:	mov	w23, wzr
  40b88c:	b	40b85c <rtnl_dump_filter_nc@@Base+0x234>
  40b890:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40b894:	ldr	x8, [x8, #3992]
  40b898:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b89c:	mov	w1, #0x12                  	// #18
  40b8a0:	mov	w2, #0x1                   	// #1
  40b8a4:	ldr	x3, [x8]
  40b8a8:	add	x0, x0, #0x77e
  40b8ac:	bl	404f90 <fwrite@plt>
  40b8b0:	mov	w21, #0x2                   	// #2
  40b8b4:	b	40b85c <rtnl_dump_filter_nc@@Base+0x234>
  40b8b8:	mov	w0, w23
  40b8bc:	ldp	x20, x19, [sp, #192]
  40b8c0:	ldp	x22, x21, [sp, #176]
  40b8c4:	ldp	x24, x23, [sp, #160]
  40b8c8:	ldp	x26, x25, [sp, #144]
  40b8cc:	ldp	x28, x27, [sp, #128]
  40b8d0:	ldp	x29, x30, [sp, #112]
  40b8d4:	add	sp, sp, #0xd0
  40b8d8:	ret
  40b8dc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40b8e0:	ldr	x8, [x8, #3992]
  40b8e4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b8e8:	add	x1, x1, #0x791
  40b8ec:	mov	w2, w25
  40b8f0:	ldr	x0, [x8]
  40b8f4:	bl	405100 <fprintf@plt>
  40b8f8:	mov	w0, #0x1                   	// #1
  40b8fc:	bl	404c20 <exit@plt>

000000000040b900 <rtnl_talk@@Base>:
  40b900:	stp	x29, x30, [sp, #-16]!
  40b904:	mov	w3, #0x1                   	// #1
  40b908:	mov	x29, sp
  40b90c:	bl	40b918 <rtnl_talk@@Base+0x18>
  40b910:	ldp	x29, x30, [sp], #16
  40b914:	ret
  40b918:	sub	sp, sp, #0x20
  40b91c:	stp	x29, x30, [sp, #16]
  40b920:	ldr	w9, [x1]
  40b924:	mov	x8, x2
  40b928:	and	w4, w3, #0x1
  40b92c:	mov	w2, #0x1                   	// #1
  40b930:	stp	x1, x9, [sp]
  40b934:	mov	x1, sp
  40b938:	mov	x3, x8
  40b93c:	add	x29, sp, #0x10
  40b940:	bl	40b968 <rtnl_talk_iov@@Base+0x18>
  40b944:	ldp	x29, x30, [sp, #16]
  40b948:	add	sp, sp, #0x20
  40b94c:	ret

000000000040b950 <rtnl_talk_iov@@Base>:
  40b950:	stp	x29, x30, [sp, #-16]!
  40b954:	mov	w4, #0x1                   	// #1
  40b958:	mov	x29, sp
  40b95c:	bl	40b968 <rtnl_talk_iov@@Base+0x18>
  40b960:	ldp	x29, x30, [sp], #16
  40b964:	ret
  40b968:	sub	sp, sp, #0xf0
  40b96c:	stp	x29, x30, [sp, #144]
  40b970:	add	x29, sp, #0x90
  40b974:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40b978:	sub	x9, x29, #0x10
  40b97c:	add	x8, x8, #0xa04
  40b980:	str	x9, [sp, #56]
  40b984:	mov	w9, #0xc                   	// #12
  40b988:	str	w9, [sp, #64]
  40b98c:	ldr	x9, [x8]
  40b990:	ldr	w8, [x8, #8]
  40b994:	stp	x22, x21, [sp, #208]
  40b998:	stp	x20, x19, [sp, #224]
  40b99c:	mov	w22, w4
  40b9a0:	mov	x19, x3
  40b9a4:	mov	x20, x2
  40b9a8:	mov	x21, x0
  40b9ac:	stp	x28, x27, [sp, #160]
  40b9b0:	stp	x26, x25, [sp, #176]
  40b9b4:	stp	x24, x23, [sp, #192]
  40b9b8:	stp	x1, x2, [sp, #72]
  40b9bc:	stp	xzr, xzr, [sp, #88]
  40b9c0:	stur	x9, [x29, #-16]
  40b9c4:	stur	w8, [x29, #-8]
  40b9c8:	str	wzr, [sp, #104]
  40b9cc:	cbz	x2, 40ba10 <rtnl_talk_iov@@Base+0xc0>
  40b9d0:	ldr	w26, [x21, #28]
  40b9d4:	mov	x8, x20
  40b9d8:	b	40b9e8 <rtnl_talk_iov@@Base+0x98>
  40b9dc:	subs	x8, x8, #0x1
  40b9e0:	add	x1, x1, #0x10
  40b9e4:	b.eq	40ba08 <rtnl_talk_iov@@Base+0xb8>  // b.none
  40b9e8:	ldr	x9, [x1]
  40b9ec:	add	w26, w26, #0x1
  40b9f0:	str	w26, [x9, #8]
  40b9f4:	cbnz	x19, 40b9dc <rtnl_talk_iov@@Base+0x8c>
  40b9f8:	ldrh	w10, [x9, #6]
  40b9fc:	orr	w10, w10, #0x4
  40ba00:	strh	w10, [x9, #6]
  40ba04:	b	40b9dc <rtnl_talk_iov@@Base+0x8c>
  40ba08:	str	w26, [x21, #28]
  40ba0c:	b	40ba14 <rtnl_talk_iov@@Base+0xc4>
  40ba10:	mov	w26, wzr
  40ba14:	ldr	w0, [x21]
  40ba18:	add	x1, sp, #0x38
  40ba1c:	mov	w2, wzr
  40ba20:	bl	404de0 <sendmsg@plt>
  40ba24:	tbnz	w0, #31, 40bd14 <rtnl_talk_iov@@Base+0x3c4>
  40ba28:	sub	x8, x29, #0x20
  40ba2c:	mov	w9, #0x1                   	// #1
  40ba30:	stp	x8, x9, [sp, #72]
  40ba34:	ldr	w0, [x21]
  40ba38:	add	x1, sp, #0x38
  40ba3c:	add	x2, sp, #0x30
  40ba40:	bl	40c9b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40ba44:	mov	w23, w0
  40ba48:	tbnz	w0, #31, 40bcf0 <rtnl_talk_iov@@Base+0x3a0>
  40ba4c:	mov	w8, w26
  40ba50:	eor	w9, w22, #0x1
  40ba54:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ba58:	mov	w25, wzr
  40ba5c:	str	w9, [sp, #12]
  40ba60:	mov	w9, #0x1                   	// #1
  40ba64:	add	x22, x22, #0x74d
  40ba68:	mov	w24, #0x7                   	// #7
  40ba6c:	sub	x8, x8, x20
  40ba70:	str	x20, [sp, #16]
  40ba74:	str	x8, [sp, #32]
  40ba78:	mov	w8, w25
  40ba7c:	sxtw	x9, w9
  40ba80:	ldr	w2, [sp, #64]
  40ba84:	cmp	w2, #0xc
  40ba88:	b.ne	40bd3c <rtnl_talk_iov@@Base+0x3ec>  // b.any
  40ba8c:	cmp	w23, #0x10
  40ba90:	mov	w25, w20
  40ba94:	str	x9, [sp, #40]
  40ba98:	b.cc	40bc8c <rtnl_talk_iov@@Base+0x33c>  // b.lo, b.ul, b.last
  40ba9c:	ldr	x27, [sp, #48]
  40baa0:	mvn	w8, w8
  40baa4:	str	w8, [sp, #28]
  40baa8:	b	40bab4 <rtnl_talk_iov@@Base+0x164>
  40baac:	cmp	w23, #0xf
  40bab0:	b.ls	40bc8c <rtnl_talk_iov@@Base+0x33c>  // b.plast
  40bab4:	ldr	w28, [x27]
  40bab8:	cmp	w28, w23
  40babc:	b.gt	40bb88 <rtnl_talk_iov@@Base+0x238>
  40bac0:	sub	w8, w28, #0x10
  40bac4:	tbnz	w8, #31, 40bb88 <rtnl_talk_iov@@Base+0x238>
  40bac8:	ldur	w9, [x29, #-12]
  40bacc:	cbnz	w9, 40bb64 <rtnl_talk_iov@@Base+0x214>
  40bad0:	ldr	w9, [x27, #12]
  40bad4:	ldr	w10, [x21, #8]
  40bad8:	cmp	w9, w10
  40badc:	b.ne	40bb64 <rtnl_talk_iov@@Base+0x214>  // b.any
  40bae0:	ldr	w9, [x27, #8]
  40bae4:	cmp	w9, w26
  40bae8:	b.hi	40bb64 <rtnl_talk_iov@@Base+0x214>  // b.pmore
  40baec:	ldr	x10, [sp, #32]
  40baf0:	cmp	x10, x9
  40baf4:	b.hi	40bb64 <rtnl_talk_iov@@Base+0x214>  // b.pmore
  40baf8:	ldrh	w9, [x27, #4]
  40bafc:	cmp	w9, #0x2
  40bb00:	b.ne	40bbc0 <rtnl_talk_iov@@Base+0x270>  // b.any
  40bb04:	mov	x28, x27
  40bb08:	ldr	w20, [x28, #16]!
  40bb0c:	cmp	w8, #0x13
  40bb10:	b.ls	40bc00 <rtnl_talk_iov@@Base+0x2b0>  // b.plast
  40bb14:	cbz	w20, 40bb54 <rtnl_talk_iov@@Base+0x204>
  40bb18:	mov	x24, x22
  40bb1c:	neg	w22, w20
  40bb20:	bl	4050c0 <__errno_location@plt>
  40bb24:	str	w22, [x0]
  40bb28:	ldr	w8, [x21, #36]
  40bb2c:	ldr	w9, [sp, #12]
  40bb30:	mov	x22, x24
  40bb34:	mov	w24, #0x7                   	// #7
  40bb38:	cmp	w8, #0x4
  40bb3c:	cset	w8, eq  // eq = none
  40bb40:	orr	w8, w8, w9
  40bb44:	tbnz	w8, #0, 40bb54 <rtnl_talk_iov@@Base+0x204>
  40bb48:	mov	x0, x27
  40bb4c:	mov	x1, x28
  40bb50:	bl	40cc84 <__parse_rtattr_nested_compat@@Base+0x33c>
  40bb54:	ldr	x0, [sp, #48]
  40bb58:	cbz	x19, 40bbd8 <rtnl_talk_iov@@Base+0x288>
  40bb5c:	str	x0, [x19]
  40bb60:	b	40bbdc <rtnl_talk_iov@@Base+0x28c>
  40bb64:	add	w8, w28, #0x3
  40bb68:	and	w8, w8, #0xfffffffc
  40bb6c:	sub	w23, w23, w8
  40bb70:	add	x27, x27, x8
  40bb74:	mov	w20, #0x9                   	// #9
  40bb78:	cbz	w20, 40baac <rtnl_talk_iov@@Base+0x15c>
  40bb7c:	cmp	w20, #0x9
  40bb80:	b.eq	40baac <rtnl_talk_iov@@Base+0x15c>  // b.none
  40bb84:	b	40bc5c <rtnl_talk_iov@@Base+0x30c>
  40bb88:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bb8c:	ldrb	w8, [sp, #104]
  40bb90:	ldr	x9, [x9, #3992]
  40bb94:	ldr	x3, [x9]
  40bb98:	tbz	w8, #5, 40bd28 <rtnl_talk_iov@@Base+0x3d8>
  40bb9c:	mov	w1, #0x12                  	// #18
  40bba0:	mov	w2, #0x1                   	// #1
  40bba4:	mov	w20, #0x1                   	// #1
  40bba8:	mov	x0, x22
  40bbac:	bl	404f90 <fwrite@plt>
  40bbb0:	ldr	x0, [sp, #48]
  40bbb4:	bl	404f30 <free@plt>
  40bbb8:	mov	w25, #0xffffffff            	// #-1
  40bbbc:	b	40bb78 <rtnl_talk_iov@@Base+0x228>
  40bbc0:	cbz	x19, 40bc24 <rtnl_talk_iov@@Base+0x2d4>
  40bbc4:	ldr	x8, [sp, #48]
  40bbc8:	mov	w25, wzr
  40bbcc:	mov	w20, #0x1                   	// #1
  40bbd0:	str	x8, [x19]
  40bbd4:	b	40bb78 <rtnl_talk_iov@@Base+0x228>
  40bbd8:	bl	404f30 <free@plt>
  40bbdc:	ldr	w8, [sp, #28]
  40bbe0:	ldr	x9, [sp, #16]
  40bbe4:	ldr	x10, [sp, #40]
  40bbe8:	cmp	w20, #0x0
  40bbec:	csel	w8, w8, wzr, ne  // ne = any
  40bbf0:	cmp	x10, x9
  40bbf4:	csinc	w20, w24, wzr, cc  // cc = lo, ul, last
  40bbf8:	csel	w25, w25, w8, cc  // cc = lo, ul, last
  40bbfc:	b	40bb78 <rtnl_talk_iov@@Base+0x228>
  40bc00:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bc04:	ldr	x8, [x8, #3992]
  40bc08:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bc0c:	mov	w1, #0x10                  	// #16
  40bc10:	mov	w2, #0x1                   	// #1
  40bc14:	ldr	x3, [x8]
  40bc18:	mov	w20, #0x1                   	// #1
  40bc1c:	add	x0, x0, #0x6d8
  40bc20:	b	40bbac <rtnl_talk_iov@@Base+0x25c>
  40bc24:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bc28:	ldr	x8, [x8, #3992]
  40bc2c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bc30:	mov	w1, #0x14                  	// #20
  40bc34:	mov	w2, #0x1                   	// #1
  40bc38:	ldr	x3, [x8]
  40bc3c:	add	x0, x0, #0x9b3
  40bc40:	bl	404f90 <fwrite@plt>
  40bc44:	add	w8, w28, #0x3
  40bc48:	and	w8, w8, #0xfffffffc
  40bc4c:	mov	w20, wzr
  40bc50:	sub	w23, w23, w8
  40bc54:	add	x27, x27, x8
  40bc58:	b	40bb78 <rtnl_talk_iov@@Base+0x228>
  40bc5c:	cmp	w20, #0x7
  40bc60:	b.ne	40bcec <rtnl_talk_iov@@Base+0x39c>  // b.any
  40bc64:	ldr	w0, [x21]
  40bc68:	add	x1, sp, #0x38
  40bc6c:	add	x2, sp, #0x30
  40bc70:	mov	w20, w25
  40bc74:	bl	40c9b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40bc78:	ldr	x8, [sp, #40]
  40bc7c:	mov	w23, w0
  40bc80:	add	x9, x8, #0x1
  40bc84:	tbz	w0, #31, 40ba80 <rtnl_talk_iov@@Base+0x130>
  40bc88:	b	40bcf0 <rtnl_talk_iov@@Base+0x3a0>
  40bc8c:	ldr	x0, [sp, #48]
  40bc90:	mov	w20, w25
  40bc94:	bl	404f30 <free@plt>
  40bc98:	ldrb	w8, [sp, #104]
  40bc9c:	ldr	x25, [sp, #40]
  40bca0:	tbnz	w8, #5, 40bcc8 <rtnl_talk_iov@@Base+0x378>
  40bca4:	cbnz	w23, 40bd50 <rtnl_talk_iov@@Base+0x400>
  40bca8:	ldr	w0, [x21]
  40bcac:	add	x1, sp, #0x38
  40bcb0:	add	x2, sp, #0x30
  40bcb4:	bl	40c9b4 <__parse_rtattr_nested_compat@@Base+0x6c>
  40bcb8:	mov	w23, w0
  40bcbc:	add	x9, x25, #0x1
  40bcc0:	tbz	w0, #31, 40ba78 <rtnl_talk_iov@@Base+0x128>
  40bcc4:	b	40bcf0 <rtnl_talk_iov@@Base+0x3a0>
  40bcc8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bccc:	ldr	x8, [x8, #3992]
  40bcd0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bcd4:	mov	w1, #0x12                  	// #18
  40bcd8:	mov	w2, #0x1                   	// #1
  40bcdc:	ldr	x3, [x8]
  40bce0:	add	x0, x0, #0x77e
  40bce4:	bl	404f90 <fwrite@plt>
  40bce8:	b	40bca8 <rtnl_talk_iov@@Base+0x358>
  40bcec:	mov	w23, w25
  40bcf0:	mov	w0, w23
  40bcf4:	ldp	x20, x19, [sp, #224]
  40bcf8:	ldp	x22, x21, [sp, #208]
  40bcfc:	ldp	x24, x23, [sp, #192]
  40bd00:	ldp	x26, x25, [sp, #176]
  40bd04:	ldp	x28, x27, [sp, #160]
  40bd08:	ldp	x29, x30, [sp, #144]
  40bd0c:	add	sp, sp, #0xf0
  40bd10:	ret
  40bd14:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bd18:	add	x0, x0, #0x97d
  40bd1c:	bl	404c30 <perror@plt>
  40bd20:	mov	w23, #0xffffffff            	// #-1
  40bd24:	b	40bcf0 <rtnl_talk_iov@@Base+0x3a0>
  40bd28:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bd2c:	add	x1, x1, #0x760
  40bd30:	mov	x0, x3
  40bd34:	mov	w2, w28
  40bd38:	b	40bd68 <rtnl_talk_iov@@Base+0x418>
  40bd3c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bd40:	ldr	x8, [x8, #3992]
  40bd44:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bd48:	add	x1, x1, #0x996
  40bd4c:	b	40bd64 <rtnl_talk_iov@@Base+0x414>
  40bd50:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bd54:	ldr	x8, [x8, #3992]
  40bd58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bd5c:	add	x1, x1, #0x791
  40bd60:	mov	w2, w23
  40bd64:	ldr	x0, [x8]
  40bd68:	bl	405100 <fprintf@plt>
  40bd6c:	mov	w0, #0x1                   	// #1
  40bd70:	bl	404c20 <exit@plt>

000000000040bd74 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40bd74:	stp	x29, x30, [sp, #-16]!
  40bd78:	mov	w3, wzr
  40bd7c:	mov	x29, sp
  40bd80:	bl	40b918 <rtnl_talk@@Base+0x18>
  40bd84:	ldp	x29, x30, [sp], #16
  40bd88:	ret

000000000040bd8c <rtnl_listen_all_nsid@@Base>:
  40bd8c:	stp	x29, x30, [sp, #-32]!
  40bd90:	mov	x29, sp
  40bd94:	mov	w8, #0x1                   	// #1
  40bd98:	str	w8, [x29, #28]
  40bd9c:	str	x19, [sp, #16]
  40bda0:	mov	x19, x0
  40bda4:	ldr	w0, [x0]
  40bda8:	add	x3, x29, #0x1c
  40bdac:	mov	w1, #0x10e                 	// #270
  40bdb0:	mov	w2, #0x8                   	// #8
  40bdb4:	mov	w4, #0x4                   	// #4
  40bdb8:	bl	404d70 <setsockopt@plt>
  40bdbc:	tbnz	w0, #31, 40bddc <rtnl_listen_all_nsid@@Base+0x50>
  40bdc0:	ldr	w8, [x19, #48]
  40bdc4:	mov	w0, wzr
  40bdc8:	orr	w8, w8, #0x1
  40bdcc:	str	w8, [x19, #48]
  40bdd0:	ldr	x19, [sp, #16]
  40bdd4:	ldp	x29, x30, [sp], #32
  40bdd8:	ret
  40bddc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bde0:	add	x0, x0, #0x6e9
  40bde4:	bl	404c30 <perror@plt>
  40bde8:	mov	w0, #0xffffffff            	// #-1
  40bdec:	b	40bdd0 <rtnl_listen_all_nsid@@Base+0x44>

000000000040bdf0 <rtnl_listen@@Base>:
  40bdf0:	stp	x29, x30, [sp, #-96]!
  40bdf4:	stp	x28, x27, [sp, #16]
  40bdf8:	stp	x26, x25, [sp, #32]
  40bdfc:	stp	x24, x23, [sp, #48]
  40be00:	stp	x22, x21, [sp, #64]
  40be04:	stp	x20, x19, [sp, #80]
  40be08:	mov	x29, sp
  40be0c:	sub	sp, sp, #0x6, lsl #12
  40be10:	sub	sp, sp, #0x70
  40be14:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40be18:	add	x8, x8, #0x9f8
  40be1c:	ldr	x10, [x8]
  40be20:	ldr	w8, [x8, #8]
  40be24:	sub	x9, x29, #0x18
  40be28:	sub	x22, x29, #0x60
  40be2c:	stur	x9, [x29, #-96]
  40be30:	mov	w9, #0xc                   	// #12
  40be34:	str	w9, [x22, #8]
  40be38:	sub	x9, x29, #0x28
  40be3c:	stur	x10, [x29, #-24]
  40be40:	mov	w10, #0x1                   	// #1
  40be44:	stp	x9, x10, [x29, #-80]
  40be48:	stp	xzr, xzr, [x29, #-64]
  40be4c:	str	w8, [x22, #80]
  40be50:	str	wzr, [x22, #48]
  40be54:	ldrb	w8, [x0, #48]
  40be58:	mov	x19, x2
  40be5c:	mov	x20, x0
  40be60:	mov	x21, x1
  40be64:	tbz	w8, #0, 40be74 <rtnl_listen@@Base+0x84>
  40be68:	add	x8, sp, #0x10
  40be6c:	mov	w9, #0x2000                	// #8192
  40be70:	stp	x8, x9, [x29, #-64]
  40be74:	add	x8, sp, #0x2, lsl #12
  40be78:	add	x8, x8, #0x10
  40be7c:	mov	w24, #0x4000                	// #16384
  40be80:	stur	x8, [x29, #-40]
  40be84:	b	40bebc <rtnl_listen@@Base+0xcc>
  40be88:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40be8c:	ldr	x8, [x8, #3992]
  40be90:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40be94:	mov	w1, #0xf                   	// #15
  40be98:	mov	w2, #0x1                   	// #1
  40be9c:	ldr	x3, [x8]
  40bea0:	add	x0, x0, #0x720
  40bea4:	mov	w23, #0x1                   	// #1
  40bea8:	bl	404f90 <fwrite@plt>
  40beac:	mov	w26, #0xffffffff            	// #-1
  40beb0:	orr	w8, w23, #0x2
  40beb4:	cmp	w8, #0x2
  40beb8:	b.ne	40c088 <rtnl_listen@@Base+0x298>  // b.any
  40bebc:	stur	x24, [x29, #-32]
  40bec0:	ldr	w0, [x20]
  40bec4:	sub	x1, x29, #0x60
  40bec8:	mov	w2, wzr
  40becc:	bl	404bf0 <recvmsg@plt>
  40bed0:	mov	x27, x0
  40bed4:	tbnz	w27, #31, 40bf8c <rtnl_listen@@Base+0x19c>
  40bed8:	cbz	w27, 40be88 <rtnl_listen@@Base+0x98>
  40bedc:	ldr	w2, [x22, #8]
  40bee0:	cmp	w2, #0xc
  40bee4:	b.ne	40c0b0 <rtnl_listen@@Base+0x2c0>  // b.any
  40bee8:	ldrb	w8, [x20, #48]
  40beec:	tbnz	w8, #0, 40c000 <rtnl_listen@@Base+0x210>
  40bef0:	add	x28, sp, #0x2, lsl #12
  40bef4:	add	x28, x28, #0x10
  40bef8:	b	40bf08 <rtnl_listen@@Base+0x118>
  40befc:	mov	w23, #0x1                   	// #1
  40bf00:	mov	w26, w0
  40bf04:	cbnz	w23, 40beb0 <rtnl_listen@@Base+0xc0>
  40bf08:	cmp	w27, #0x10
  40bf0c:	b.cc	40bfec <rtnl_listen@@Base+0x1fc>  // b.lo, b.ul, b.last
  40bf10:	ldr	w25, [x28]
  40bf14:	cmp	w25, w27
  40bf18:	b.gt	40bf54 <rtnl_listen@@Base+0x164>
  40bf1c:	sub	w8, w25, #0x10
  40bf20:	tbnz	w8, #31, 40bf54 <rtnl_listen@@Base+0x164>
  40bf24:	add	x0, sp, #0x8
  40bf28:	mov	x1, x28
  40bf2c:	mov	x2, x19
  40bf30:	blr	x21
  40bf34:	tbnz	w0, #31, 40befc <rtnl_listen@@Base+0x10c>
  40bf38:	add	w8, w25, #0x3
  40bf3c:	and	w8, w8, #0xfffffffc
  40bf40:	mov	w23, wzr
  40bf44:	sub	w27, w27, w8
  40bf48:	add	x28, x28, x8
  40bf4c:	cbz	wzr, 40bf08 <rtnl_listen@@Base+0x118>
  40bf50:	b	40beb0 <rtnl_listen@@Base+0xc0>
  40bf54:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bf58:	ldrb	w8, [x22, #48]
  40bf5c:	ldr	x9, [x9, #3992]
  40bf60:	ldr	x3, [x9]
  40bf64:	tbz	w8, #5, 40c0c4 <rtnl_listen@@Base+0x2d4>
  40bf68:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bf6c:	mov	w1, #0x12                  	// #18
  40bf70:	mov	w2, #0x1                   	// #1
  40bf74:	add	x0, x0, #0x74d
  40bf78:	mov	w23, #0x1                   	// #1
  40bf7c:	bl	404f90 <fwrite@plt>
  40bf80:	mov	w26, #0xffffffff            	// #-1
  40bf84:	cbz	w23, 40bf08 <rtnl_listen@@Base+0x118>
  40bf88:	b	40beb0 <rtnl_listen@@Base+0xc0>
  40bf8c:	bl	4050c0 <__errno_location@plt>
  40bf90:	mov	x25, x0
  40bf94:	ldr	w0, [x0]
  40bf98:	mov	w23, #0x2                   	// #2
  40bf9c:	cmp	w0, #0x4
  40bfa0:	b.eq	40beb0 <rtnl_listen@@Base+0xc0>  // b.none
  40bfa4:	cmp	w0, #0xb
  40bfa8:	b.eq	40beb0 <rtnl_listen@@Base+0xc0>  // b.none
  40bfac:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40bfb0:	ldr	x8, [x8, #3992]
  40bfb4:	ldr	x27, [x8]
  40bfb8:	bl	404e50 <strerror@plt>
  40bfbc:	ldr	w3, [x25]
  40bfc0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40bfc4:	mov	x2, x0
  40bfc8:	mov	x0, x27
  40bfcc:	add	x1, x1, #0x701
  40bfd0:	bl	405100 <fprintf@plt>
  40bfd4:	ldr	w8, [x25]
  40bfd8:	cmp	w8, #0x69
  40bfdc:	mov	w8, #0x1                   	// #1
  40bfe0:	cinc	w23, w8, eq  // eq = none
  40bfe4:	csinv	w26, w26, wzr, eq  // eq = none
  40bfe8:	b	40beb0 <rtnl_listen@@Base+0xc0>
  40bfec:	ldrb	w8, [x22, #48]
  40bff0:	tbnz	w8, #5, 40c060 <rtnl_listen@@Base+0x270>
  40bff4:	cbnz	w27, 40c0d8 <rtnl_listen@@Base+0x2e8>
  40bff8:	mov	w23, wzr
  40bffc:	b	40beb0 <rtnl_listen@@Base+0xc0>
  40c000:	ldur	x1, [x29, #-64]
  40c004:	mov	w8, #0xffffffff            	// #-1
  40c008:	str	w8, [sp, #8]
  40c00c:	cbz	x1, 40bef0 <rtnl_listen@@Base+0x100>
  40c010:	ldur	x8, [x29, #-56]
  40c014:	cmp	x8, #0x10
  40c018:	b.cs	40c030 <rtnl_listen@@Base+0x240>  // b.hs, b.nlast
  40c01c:	b	40bef0 <rtnl_listen@@Base+0x100>
  40c020:	sub	x0, x29, #0x60
  40c024:	bl	404c40 <__cmsg_nxthdr@plt>
  40c028:	mov	x1, x0
  40c02c:	cbz	x0, 40bef0 <rtnl_listen@@Base+0x100>
  40c030:	ldr	w8, [x1, #8]
  40c034:	cmp	w8, #0x10e
  40c038:	b.ne	40c020 <rtnl_listen@@Base+0x230>  // b.any
  40c03c:	ldr	w8, [x1, #12]
  40c040:	cmp	w8, #0x8
  40c044:	b.ne	40c020 <rtnl_listen@@Base+0x230>  // b.any
  40c048:	ldr	x8, [x1]
  40c04c:	cmp	x8, #0x14
  40c050:	b.ne	40c020 <rtnl_listen@@Base+0x230>  // b.any
  40c054:	ldr	w8, [x1, #16]
  40c058:	str	w8, [sp, #8]
  40c05c:	b	40c020 <rtnl_listen@@Base+0x230>
  40c060:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c064:	ldr	x8, [x8, #3992]
  40c068:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c06c:	mov	w1, #0x12                  	// #18
  40c070:	mov	w2, #0x1                   	// #1
  40c074:	ldr	x3, [x8]
  40c078:	add	x0, x0, #0x77e
  40c07c:	bl	404f90 <fwrite@plt>
  40c080:	mov	w23, #0x2                   	// #2
  40c084:	b	40beb0 <rtnl_listen@@Base+0xc0>
  40c088:	mov	w0, w26
  40c08c:	add	sp, sp, #0x6, lsl #12
  40c090:	add	sp, sp, #0x70
  40c094:	ldp	x20, x19, [sp, #80]
  40c098:	ldp	x22, x21, [sp, #64]
  40c09c:	ldp	x24, x23, [sp, #48]
  40c0a0:	ldp	x26, x25, [sp, #32]
  40c0a4:	ldp	x28, x27, [sp, #16]
  40c0a8:	ldp	x29, x30, [sp], #96
  40c0ac:	ret
  40c0b0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c0b4:	ldr	x8, [x8, #3992]
  40c0b8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c0bc:	add	x1, x1, #0x730
  40c0c0:	b	40c0ec <rtnl_listen@@Base+0x2fc>
  40c0c4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c0c8:	add	x1, x1, #0x760
  40c0cc:	mov	x0, x3
  40c0d0:	mov	w2, w25
  40c0d4:	b	40c0f0 <rtnl_listen@@Base+0x300>
  40c0d8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c0dc:	ldr	x8, [x8, #3992]
  40c0e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c0e4:	add	x1, x1, #0x791
  40c0e8:	mov	w2, w27
  40c0ec:	ldr	x0, [x8]
  40c0f0:	bl	405100 <fprintf@plt>
  40c0f4:	mov	w0, #0x1                   	// #1
  40c0f8:	bl	404c20 <exit@plt>

000000000040c0fc <rtnl_from_file@@Base>:
  40c0fc:	stp	x29, x30, [sp, #-96]!
  40c100:	stp	x28, x27, [sp, #16]
  40c104:	stp	x26, x25, [sp, #32]
  40c108:	stp	x24, x23, [sp, #48]
  40c10c:	stp	x22, x21, [sp, #64]
  40c110:	stp	x20, x19, [sp, #80]
  40c114:	mov	x29, sp
  40c118:	sub	sp, sp, #0x4, lsl #12
  40c11c:	sub	sp, sp, #0x10
  40c120:	adrp	x28, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c124:	ldr	x28, [x28, #3992]
  40c128:	add	x8, sp, #0x8
  40c12c:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c130:	adrp	x23, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c134:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c138:	mov	x19, x2
  40c13c:	mov	x20, x1
  40c140:	mov	x21, x0
  40c144:	add	x22, x22, #0x7e1
  40c148:	add	x23, x23, #0x7be
  40c14c:	add	x24, x8, #0x10
  40c150:	add	x25, x25, #0x7a8
  40c154:	b	40c17c <rtnl_from_file@@Base+0x80>
  40c158:	add	x1, sp, #0x8
  40c15c:	mov	x0, xzr
  40c160:	mov	x2, x19
  40c164:	blr	x20
  40c168:	cmp	w0, #0x0
  40c16c:	mvn	w8, w0
  40c170:	csel	w26, w0, w26, lt  // lt = tstop
  40c174:	lsr	w8, w8, #31
  40c178:	tbz	w8, #0, 40c264 <rtnl_from_file@@Base+0x168>
  40c17c:	add	x0, sp, #0x8
  40c180:	mov	w1, #0x1                   	// #1
  40c184:	mov	w2, #0x10                  	// #16
  40c188:	mov	x3, x21
  40c18c:	bl	404f00 <fread@plt>
  40c190:	cmp	x0, #0x10
  40c194:	b.eq	40c1c0 <rtnl_from_file@@Base+0xc4>  // b.none
  40c198:	mov	x27, x0
  40c19c:	cbnz	x0, 40c1f8 <rtnl_from_file@@Base+0xfc>
  40c1a0:	mov	x0, x21
  40c1a4:	bl	404eb0 <feof@plt>
  40c1a8:	cbz	w0, 40c1b8 <rtnl_from_file@@Base+0xbc>
  40c1ac:	mov	w26, wzr
  40c1b0:	mov	w8, wzr
  40c1b4:	b	40c178 <rtnl_from_file@@Base+0x7c>
  40c1b8:	cmp	x27, #0x10
  40c1bc:	b.ne	40c1f8 <rtnl_from_file@@Base+0xfc>  // b.any
  40c1c0:	ldr	w27, [sp, #8]
  40c1c4:	cmp	w27, #0x4, lsl #12
  40c1c8:	b.hi	40c240 <rtnl_from_file@@Base+0x144>  // b.pmore
  40c1cc:	sub	w8, w27, #0x10
  40c1d0:	tbnz	w8, #31, 40c240 <rtnl_from_file@@Base+0x144>
  40c1d4:	sub	w8, w27, #0xd
  40c1d8:	and	w27, w8, #0xfffffffc
  40c1dc:	mov	w1, #0x1                   	// #1
  40c1e0:	mov	x0, x24
  40c1e4:	mov	x2, x27
  40c1e8:	mov	x3, x21
  40c1ec:	bl	404f00 <fread@plt>
  40c1f0:	cmp	x0, x27
  40c1f4:	b.eq	40c158 <rtnl_from_file@@Base+0x5c>  // b.none
  40c1f8:	mov	x0, x21
  40c1fc:	bl	405130 <ferror@plt>
  40c200:	cbnz	w0, 40c21c <rtnl_from_file@@Base+0x120>
  40c204:	mov	x0, x21
  40c208:	bl	404eb0 <feof@plt>
  40c20c:	cbnz	w0, 40c228 <rtnl_from_file@@Base+0x12c>
  40c210:	mov	w8, wzr
  40c214:	mov	w26, #0xffffffff            	// #-1
  40c218:	b	40c178 <rtnl_from_file@@Base+0x7c>
  40c21c:	mov	x0, x25
  40c220:	bl	404c30 <perror@plt>
  40c224:	b	40c204 <rtnl_from_file@@Base+0x108>
  40c228:	ldr	x3, [x28]
  40c22c:	mov	w1, #0x22                  	// #34
  40c230:	mov	w2, #0x1                   	// #1
  40c234:	mov	x0, x23
  40c238:	bl	404f90 <fwrite@plt>
  40c23c:	b	40c210 <rtnl_from_file@@Base+0x114>
  40c240:	ldr	x26, [x28]
  40c244:	mov	x0, x21
  40c248:	bl	404ca0 <ftell@plt>
  40c24c:	mov	x3, x0
  40c250:	mov	x0, x26
  40c254:	mov	x1, x22
  40c258:	mov	w2, w27
  40c25c:	bl	405100 <fprintf@plt>
  40c260:	b	40c210 <rtnl_from_file@@Base+0x114>
  40c264:	mov	w0, w26
  40c268:	add	sp, sp, #0x4, lsl #12
  40c26c:	add	sp, sp, #0x10
  40c270:	ldp	x20, x19, [sp, #80]
  40c274:	ldp	x22, x21, [sp, #64]
  40c278:	ldp	x24, x23, [sp, #48]
  40c27c:	ldp	x26, x25, [sp, #32]
  40c280:	ldp	x28, x27, [sp, #16]
  40c284:	ldp	x29, x30, [sp], #96
  40c288:	ret

000000000040c28c <addattr@@Base>:
  40c28c:	stp	x29, x30, [sp, #-16]!
  40c290:	mov	x3, xzr
  40c294:	mov	w4, wzr
  40c298:	mov	x29, sp
  40c29c:	bl	40c2a8 <addattr_l@@Base>
  40c2a0:	ldp	x29, x30, [sp], #16
  40c2a4:	ret

000000000040c2a8 <addattr_l@@Base>:
  40c2a8:	stp	x29, x30, [sp, #-32]!
  40c2ac:	stp	x20, x19, [sp, #16]
  40c2b0:	ldr	w9, [x0]
  40c2b4:	add	w10, w4, #0x7
  40c2b8:	and	w10, w10, #0xfffffffc
  40c2bc:	mov	x29, sp
  40c2c0:	add	w9, w9, #0x3
  40c2c4:	and	x9, x9, #0xfffffffc
  40c2c8:	add	w20, w9, w10
  40c2cc:	cmp	w20, w1
  40c2d0:	b.hi	40c310 <addattr_l@@Base+0x68>  // b.pmore
  40c2d4:	mov	x19, x0
  40c2d8:	add	x8, x0, x9
  40c2dc:	add	w9, w4, #0x4
  40c2e0:	strh	w2, [x8, #2]
  40c2e4:	strh	w9, [x8]
  40c2e8:	cbz	w4, 40c2fc <addattr_l@@Base+0x54>
  40c2ec:	sxtw	x2, w4
  40c2f0:	add	x0, x8, #0x4
  40c2f4:	mov	x1, x3
  40c2f8:	bl	404be0 <memcpy@plt>
  40c2fc:	mov	w0, wzr
  40c300:	str	w20, [x19]
  40c304:	ldp	x20, x19, [sp, #16]
  40c308:	ldp	x29, x30, [sp], #32
  40c30c:	ret
  40c310:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c314:	ldr	x9, [x9, #3992]
  40c318:	mov	w8, w1
  40c31c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c320:	add	x1, x1, #0x804
  40c324:	ldr	x0, [x9]
  40c328:	mov	w2, w8
  40c32c:	bl	405100 <fprintf@plt>
  40c330:	mov	w0, #0xffffffff            	// #-1
  40c334:	b	40c304 <addattr_l@@Base+0x5c>

000000000040c338 <addattr8@@Base>:
  40c338:	sub	sp, sp, #0x20
  40c33c:	stp	x29, x30, [sp, #16]
  40c340:	add	x29, sp, #0x10
  40c344:	sturb	w3, [x29, #-4]
  40c348:	sub	x3, x29, #0x4
  40c34c:	mov	w4, #0x1                   	// #1
  40c350:	bl	40c2a8 <addattr_l@@Base>
  40c354:	ldp	x29, x30, [sp, #16]
  40c358:	add	sp, sp, #0x20
  40c35c:	ret

000000000040c360 <addattr16@@Base>:
  40c360:	sub	sp, sp, #0x20
  40c364:	stp	x29, x30, [sp, #16]
  40c368:	add	x29, sp, #0x10
  40c36c:	sturh	w3, [x29, #-4]
  40c370:	sub	x3, x29, #0x4
  40c374:	mov	w4, #0x2                   	// #2
  40c378:	bl	40c2a8 <addattr_l@@Base>
  40c37c:	ldp	x29, x30, [sp, #16]
  40c380:	add	sp, sp, #0x20
  40c384:	ret

000000000040c388 <addattr32@@Base>:
  40c388:	sub	sp, sp, #0x20
  40c38c:	stp	x29, x30, [sp, #16]
  40c390:	add	x29, sp, #0x10
  40c394:	stur	w3, [x29, #-4]
  40c398:	sub	x3, x29, #0x4
  40c39c:	mov	w4, #0x4                   	// #4
  40c3a0:	bl	40c2a8 <addattr_l@@Base>
  40c3a4:	ldp	x29, x30, [sp, #16]
  40c3a8:	add	sp, sp, #0x20
  40c3ac:	ret

000000000040c3b0 <addattr64@@Base>:
  40c3b0:	sub	sp, sp, #0x20
  40c3b4:	str	x3, [sp, #8]
  40c3b8:	add	x3, sp, #0x8
  40c3bc:	mov	w4, #0x8                   	// #8
  40c3c0:	stp	x29, x30, [sp, #16]
  40c3c4:	add	x29, sp, #0x10
  40c3c8:	bl	40c2a8 <addattr_l@@Base>
  40c3cc:	ldp	x29, x30, [sp, #16]
  40c3d0:	add	sp, sp, #0x20
  40c3d4:	ret

000000000040c3d8 <addattrstrz@@Base>:
  40c3d8:	stp	x29, x30, [sp, #-48]!
  40c3dc:	stp	x22, x21, [sp, #16]
  40c3e0:	mov	x22, x0
  40c3e4:	mov	x0, x3
  40c3e8:	stp	x20, x19, [sp, #32]
  40c3ec:	mov	x29, sp
  40c3f0:	mov	x19, x3
  40c3f4:	mov	w20, w2
  40c3f8:	mov	w21, w1
  40c3fc:	bl	404c10 <strlen@plt>
  40c400:	add	w4, w0, #0x1
  40c404:	mov	x0, x22
  40c408:	mov	w1, w21
  40c40c:	mov	w2, w20
  40c410:	mov	x3, x19
  40c414:	bl	40c2a8 <addattr_l@@Base>
  40c418:	ldp	x20, x19, [sp, #32]
  40c41c:	ldp	x22, x21, [sp, #16]
  40c420:	ldp	x29, x30, [sp], #48
  40c424:	ret

000000000040c428 <addraw_l@@Base>:
  40c428:	stp	x29, x30, [sp, #-48]!
  40c42c:	stp	x22, x21, [sp, #16]
  40c430:	stp	x20, x19, [sp, #32]
  40c434:	ldr	w9, [x0]
  40c438:	add	w10, w3, #0x3
  40c43c:	and	w22, w10, #0xfffffffc
  40c440:	mov	x29, sp
  40c444:	add	w9, w9, #0x3
  40c448:	and	w9, w9, #0xfffffffc
  40c44c:	add	w10, w9, w22
  40c450:	cmp	w10, w1
  40c454:	b.hi	40c4bc <addraw_l@@Base+0x94>  // b.pmore
  40c458:	mov	w20, w3
  40c45c:	sxtw	x21, w20
  40c460:	mov	x19, x0
  40c464:	add	x0, x0, w9, uxtw
  40c468:	mov	x1, x2
  40c46c:	mov	x2, x21
  40c470:	bl	404be0 <memcpy@plt>
  40c474:	ldr	w8, [x19]
  40c478:	sub	w2, w22, w20
  40c47c:	mov	w1, wzr
  40c480:	add	w8, w8, #0x3
  40c484:	and	w8, w8, #0xfffffffc
  40c488:	add	x8, x19, x8
  40c48c:	add	x0, x8, x21
  40c490:	bl	404dc0 <memset@plt>
  40c494:	ldr	w8, [x19]
  40c498:	mov	w0, wzr
  40c49c:	add	w8, w8, #0x3
  40c4a0:	and	w8, w8, #0xfffffffc
  40c4a4:	add	w8, w8, w22
  40c4a8:	str	w8, [x19]
  40c4ac:	ldp	x20, x19, [sp, #32]
  40c4b0:	ldp	x22, x21, [sp, #16]
  40c4b4:	ldp	x29, x30, [sp], #48
  40c4b8:	ret
  40c4bc:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c4c0:	ldr	x9, [x9, #3992]
  40c4c4:	mov	w8, w1
  40c4c8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c4cc:	add	x1, x1, #0x833
  40c4d0:	ldr	x0, [x9]
  40c4d4:	mov	w2, w8
  40c4d8:	bl	405100 <fprintf@plt>
  40c4dc:	mov	w0, #0xffffffff            	// #-1
  40c4e0:	b	40c4ac <addraw_l@@Base+0x84>

000000000040c4e4 <addattr_nest@@Base>:
  40c4e4:	stp	x29, x30, [sp, #-32]!
  40c4e8:	ldr	w8, [x0]
  40c4ec:	mov	x3, xzr
  40c4f0:	mov	w4, wzr
  40c4f4:	str	x19, [sp, #16]
  40c4f8:	add	w8, w8, #0x3
  40c4fc:	and	w8, w8, #0xfffffffc
  40c500:	mov	x29, sp
  40c504:	add	x19, x0, x8
  40c508:	bl	40c2a8 <addattr_l@@Base>
  40c50c:	mov	x0, x19
  40c510:	ldr	x19, [sp, #16]
  40c514:	ldp	x29, x30, [sp], #32
  40c518:	ret

000000000040c51c <addattr_nest_end@@Base>:
  40c51c:	ldr	w8, [x0]
  40c520:	add	w9, w8, #0x3
  40c524:	and	w9, w9, #0xfffc
  40c528:	add	w9, w0, w9
  40c52c:	sub	w9, w9, w1
  40c530:	mov	w0, w8
  40c534:	strh	w9, [x1]
  40c538:	ret

000000000040c53c <addattr_nest_compat@@Base>:
  40c53c:	stp	x29, x30, [sp, #-48]!
  40c540:	stp	x22, x21, [sp, #16]
  40c544:	stp	x20, x19, [sp, #32]
  40c548:	ldr	w8, [x0]
  40c54c:	mov	x29, sp
  40c550:	mov	w19, w2
  40c554:	mov	w20, w1
  40c558:	add	w8, w8, #0x3
  40c55c:	and	w8, w8, #0xfffffffc
  40c560:	mov	x21, x0
  40c564:	add	x22, x0, x8
  40c568:	bl	40c2a8 <addattr_l@@Base>
  40c56c:	mov	x0, x21
  40c570:	mov	w1, w20
  40c574:	mov	w2, w19
  40c578:	bl	40c4e4 <addattr_nest@@Base>
  40c57c:	mov	x0, x22
  40c580:	ldp	x20, x19, [sp, #32]
  40c584:	ldp	x22, x21, [sp, #16]
  40c588:	ldp	x29, x30, [sp], #48
  40c58c:	ret

000000000040c590 <addattr_nest_compat_end@@Base>:
  40c590:	stp	x29, x30, [sp, #-32]!
  40c594:	ldr	w9, [x0]
  40c598:	ldrh	w8, [x1]
  40c59c:	str	x19, [sp, #16]
  40c5a0:	mov	x19, x0
  40c5a4:	add	w9, w9, #0x3
  40c5a8:	add	w8, w8, #0x3
  40c5ac:	and	w9, w9, #0xfffc
  40c5b0:	and	x8, x8, #0x1fffc
  40c5b4:	add	w9, w19, w9
  40c5b8:	add	x8, x1, x8
  40c5bc:	sub	w9, w9, w1
  40c5c0:	strh	w9, [x1]
  40c5c4:	mov	x1, x8
  40c5c8:	mov	x29, sp
  40c5cc:	bl	40c51c <addattr_nest_end@@Base>
  40c5d0:	ldr	w0, [x19]
  40c5d4:	ldr	x19, [sp, #16]
  40c5d8:	ldp	x29, x30, [sp], #32
  40c5dc:	ret

000000000040c5e0 <rta_addattr32@@Base>:
  40c5e0:	stp	x29, x30, [sp, #-16]!
  40c5e4:	ldrh	w9, [x0]
  40c5e8:	mov	x29, sp
  40c5ec:	add	w9, w9, #0x3
  40c5f0:	and	x9, x9, #0x1fffc
  40c5f4:	add	w10, w9, #0x8
  40c5f8:	cmp	w10, w1
  40c5fc:	b.hi	40c634 <rta_addattr32@@Base+0x54>  // b.pmore
  40c600:	add	x9, x0, x9
  40c604:	mov	w10, #0x8                   	// #8
  40c608:	strh	w2, [x9, #2]
  40c60c:	strh	w10, [x9]
  40c610:	str	w3, [x9, #4]
  40c614:	ldrh	w9, [x0]
  40c618:	mov	w8, wzr
  40c61c:	add	w9, w9, #0xb
  40c620:	and	w9, w9, #0xfffc
  40c624:	strh	w9, [x0]
  40c628:	mov	w0, w8
  40c62c:	ldp	x29, x30, [sp], #16
  40c630:	ret
  40c634:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c638:	ldr	x9, [x9, #3992]
  40c63c:	mov	w8, w1
  40c640:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c644:	add	x1, x1, #0x861
  40c648:	ldr	x0, [x9]
  40c64c:	mov	w2, w8
  40c650:	bl	405100 <fprintf@plt>
  40c654:	mov	w8, #0xffffffff            	// #-1
  40c658:	b	40c628 <rta_addattr32@@Base+0x48>

000000000040c65c <rta_addattr_l@@Base>:
  40c65c:	stp	x29, x30, [sp, #-32]!
  40c660:	stp	x20, x19, [sp, #16]
  40c664:	ldrh	w9, [x0]
  40c668:	add	w10, w4, #0x7
  40c66c:	and	w20, w10, #0xfffffffc
  40c670:	mov	x29, sp
  40c674:	add	w9, w9, #0x3
  40c678:	and	x9, x9, #0x1fffc
  40c67c:	add	w10, w9, w20
  40c680:	cmp	w10, w1
  40c684:	b.hi	40c6d4 <rta_addattr_l@@Base+0x78>  // b.pmore
  40c688:	mov	x19, x0
  40c68c:	add	x8, x0, x9
  40c690:	add	w9, w4, #0x4
  40c694:	strh	w2, [x8, #2]
  40c698:	strh	w9, [x8]
  40c69c:	cbz	w4, 40c6b0 <rta_addattr_l@@Base+0x54>
  40c6a0:	sxtw	x2, w4
  40c6a4:	add	x0, x8, #0x4
  40c6a8:	mov	x1, x3
  40c6ac:	bl	404be0 <memcpy@plt>
  40c6b0:	ldrh	w8, [x19]
  40c6b4:	mov	w0, wzr
  40c6b8:	add	w8, w8, #0x3
  40c6bc:	and	w8, w8, #0xfffc
  40c6c0:	add	w8, w8, w20
  40c6c4:	strh	w8, [x19]
  40c6c8:	ldp	x20, x19, [sp, #16]
  40c6cc:	ldp	x29, x30, [sp], #32
  40c6d0:	ret
  40c6d4:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c6d8:	ldr	x9, [x9, #3992]
  40c6dc:	mov	w8, w1
  40c6e0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c6e4:	add	x1, x1, #0x896
  40c6e8:	ldr	x0, [x9]
  40c6ec:	mov	w2, w8
  40c6f0:	bl	405100 <fprintf@plt>
  40c6f4:	mov	w0, #0xffffffff            	// #-1
  40c6f8:	b	40c6c8 <rta_addattr_l@@Base+0x6c>

000000000040c6fc <rta_addattr8@@Base>:
  40c6fc:	sub	sp, sp, #0x20
  40c700:	stp	x29, x30, [sp, #16]
  40c704:	add	x29, sp, #0x10
  40c708:	sturb	w3, [x29, #-4]
  40c70c:	sub	x3, x29, #0x4
  40c710:	mov	w4, #0x1                   	// #1
  40c714:	bl	40c65c <rta_addattr_l@@Base>
  40c718:	ldp	x29, x30, [sp, #16]
  40c71c:	add	sp, sp, #0x20
  40c720:	ret

000000000040c724 <rta_addattr16@@Base>:
  40c724:	sub	sp, sp, #0x20
  40c728:	stp	x29, x30, [sp, #16]
  40c72c:	add	x29, sp, #0x10
  40c730:	sturh	w3, [x29, #-4]
  40c734:	sub	x3, x29, #0x4
  40c738:	mov	w4, #0x2                   	// #2
  40c73c:	bl	40c65c <rta_addattr_l@@Base>
  40c740:	ldp	x29, x30, [sp, #16]
  40c744:	add	sp, sp, #0x20
  40c748:	ret

000000000040c74c <rta_addattr64@@Base>:
  40c74c:	sub	sp, sp, #0x20
  40c750:	str	x3, [sp, #8]
  40c754:	add	x3, sp, #0x8
  40c758:	mov	w4, #0x8                   	// #8
  40c75c:	stp	x29, x30, [sp, #16]
  40c760:	add	x29, sp, #0x10
  40c764:	bl	40c65c <rta_addattr_l@@Base>
  40c768:	ldp	x29, x30, [sp, #16]
  40c76c:	add	sp, sp, #0x20
  40c770:	ret

000000000040c774 <rta_nest@@Base>:
  40c774:	stp	x29, x30, [sp, #-32]!
  40c778:	ldrh	w8, [x0]
  40c77c:	mov	x3, xzr
  40c780:	mov	w4, wzr
  40c784:	str	x19, [sp, #16]
  40c788:	add	w8, w8, #0x3
  40c78c:	and	x8, x8, #0x1fffc
  40c790:	mov	x29, sp
  40c794:	add	x19, x0, x8
  40c798:	bl	40c65c <rta_addattr_l@@Base>
  40c79c:	ldrh	w8, [x19, #2]
  40c7a0:	mov	x0, x19
  40c7a4:	orr	w8, w8, #0x8000
  40c7a8:	strh	w8, [x19, #2]
  40c7ac:	ldr	x19, [sp, #16]
  40c7b0:	ldp	x29, x30, [sp], #32
  40c7b4:	ret

000000000040c7b8 <rta_nest_end@@Base>:
  40c7b8:	ldrh	w8, [x0]
  40c7bc:	add	w8, w8, #0x3
  40c7c0:	and	w8, w8, #0xfffc
  40c7c4:	add	w8, w0, w8
  40c7c8:	sub	w8, w8, w1
  40c7cc:	strh	w8, [x1]
  40c7d0:	ldrh	w0, [x0]
  40c7d4:	ret

000000000040c7d8 <parse_rtattr@@Base>:
  40c7d8:	stp	x29, x30, [sp, #-16]!
  40c7dc:	mov	w4, wzr
  40c7e0:	mov	x29, sp
  40c7e4:	bl	40c7f4 <parse_rtattr_flags@@Base>
  40c7e8:	mov	w0, wzr
  40c7ec:	ldp	x29, x30, [sp], #16
  40c7f0:	ret

000000000040c7f4 <parse_rtattr_flags@@Base>:
  40c7f4:	stp	x29, x30, [sp, #-64]!
  40c7f8:	add	w8, w1, #0x1
  40c7fc:	stp	x22, x21, [sp, #32]
  40c800:	stp	x20, x19, [sp, #48]
  40c804:	mov	x20, x2
  40c808:	mov	w21, w1
  40c80c:	sbfiz	x2, x8, #3, #32
  40c810:	mov	w1, wzr
  40c814:	str	x23, [sp, #16]
  40c818:	mov	x29, sp
  40c81c:	mov	w23, w4
  40c820:	mov	w19, w3
  40c824:	mov	x22, x0
  40c828:	bl	404dc0 <memset@plt>
  40c82c:	cmp	w19, #0x4
  40c830:	b.lt	40c88c <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40c834:	mvn	w8, w23
  40c838:	b	40c854 <parse_rtattr_flags@@Base+0x60>
  40c83c:	add	w9, w9, #0x3
  40c840:	and	x9, x9, #0x1fffc
  40c844:	sub	w19, w19, w9
  40c848:	cmp	w19, #0x3
  40c84c:	add	x20, x20, x9
  40c850:	b.le	40c88c <parse_rtattr_flags@@Base+0x98>
  40c854:	ldrh	w9, [x20]
  40c858:	cmp	w9, #0x4
  40c85c:	b.cc	40c88c <parse_rtattr_flags@@Base+0x98>  // b.lo, b.ul, b.last
  40c860:	cmp	w19, w9
  40c864:	b.lt	40c88c <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40c868:	ldrh	w10, [x20, #2]
  40c86c:	and	w10, w10, w8
  40c870:	cmp	w21, w10, uxth
  40c874:	b.lt	40c83c <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40c878:	and	x10, x10, #0xffff
  40c87c:	ldr	x11, [x22, x10, lsl #3]
  40c880:	cbnz	x11, 40c83c <parse_rtattr_flags@@Base+0x48>
  40c884:	str	x20, [x22, x10, lsl #3]
  40c888:	b	40c83c <parse_rtattr_flags@@Base+0x48>
  40c88c:	cbnz	w19, 40c8a8 <parse_rtattr_flags@@Base+0xb4>
  40c890:	ldp	x20, x19, [sp, #48]
  40c894:	ldp	x22, x21, [sp, #32]
  40c898:	ldr	x23, [sp, #16]
  40c89c:	mov	w0, wzr
  40c8a0:	ldp	x29, x30, [sp], #64
  40c8a4:	ret
  40c8a8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c8ac:	ldr	x8, [x8, #3992]
  40c8b0:	ldrh	w3, [x20]
  40c8b4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c8b8:	add	x1, x1, #0x8cb
  40c8bc:	ldr	x0, [x8]
  40c8c0:	mov	w2, w19
  40c8c4:	bl	405100 <fprintf@plt>
  40c8c8:	b	40c890 <parse_rtattr_flags@@Base+0x9c>

000000000040c8cc <parse_rtattr_one@@Base>:
  40c8cc:	stp	x29, x30, [sp, #-16]!
  40c8d0:	cmp	w2, #0x4
  40c8d4:	mov	x29, sp
  40c8d8:	b.lt	40c914 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40c8dc:	ldrh	w8, [x1]
  40c8e0:	cmp	w8, #0x4
  40c8e4:	b.cc	40c914 <parse_rtattr_one@@Base+0x48>  // b.lo, b.ul, b.last
  40c8e8:	cmp	w2, w8
  40c8ec:	b.lt	40c914 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40c8f0:	ldrh	w9, [x1, #2]
  40c8f4:	cmp	w9, w0
  40c8f8:	b.eq	40c91c <parse_rtattr_one@@Base+0x50>  // b.none
  40c8fc:	add	w8, w8, #0x3
  40c900:	and	x8, x8, #0x1fffc
  40c904:	sub	w2, w2, w8
  40c908:	cmp	w2, #0x3
  40c90c:	add	x1, x1, x8
  40c910:	b.gt	40c8dc <parse_rtattr_one@@Base+0x10>
  40c914:	cbnz	w2, 40c928 <parse_rtattr_one@@Base+0x5c>
  40c918:	mov	x1, xzr
  40c91c:	mov	x0, x1
  40c920:	ldp	x29, x30, [sp], #16
  40c924:	ret
  40c928:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40c92c:	ldr	x8, [x8, #3992]
  40c930:	ldrh	w3, [x1]
  40c934:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40c938:	add	x1, x1, #0x8cb
  40c93c:	ldr	x0, [x8]
  40c940:	bl	405100 <fprintf@plt>
  40c944:	b	40c918 <parse_rtattr_one@@Base+0x4c>

000000000040c948 <__parse_rtattr_nested_compat@@Base>:
  40c948:	stp	x29, x30, [sp, #-16]!
  40c94c:	ldrh	w8, [x2]
  40c950:	mov	x29, sp
  40c954:	sub	x8, x8, #0x4
  40c958:	cmp	x8, w3, sxtw
  40c95c:	b.cs	40c96c <__parse_rtattr_nested_compat@@Base+0x24>  // b.hs, b.nlast
  40c960:	mov	w0, #0xffffffff            	// #-1
  40c964:	ldp	x29, x30, [sp], #16
  40c968:	ret
  40c96c:	add	w9, w3, #0x3
  40c970:	and	x9, x9, #0xfffffffc
  40c974:	add	x10, x9, #0x4
  40c978:	cmp	x8, x10
  40c97c:	b.cs	40c994 <__parse_rtattr_nested_compat@@Base+0x4c>  // b.hs, b.nlast
  40c980:	add	w8, w1, #0x1
  40c984:	sbfiz	x2, x8, #3, #32
  40c988:	mov	w1, wzr
  40c98c:	bl	404dc0 <memset@plt>
  40c990:	b	40c9a8 <__parse_rtattr_nested_compat@@Base+0x60>
  40c994:	add	x8, x2, x9
  40c998:	ldrh	w9, [x8, #4]
  40c99c:	add	x2, x8, #0x8
  40c9a0:	sub	w3, w9, #0x4
  40c9a4:	bl	40c7d8 <parse_rtattr@@Base>
  40c9a8:	mov	w0, wzr
  40c9ac:	ldp	x29, x30, [sp], #16
  40c9b0:	ret
  40c9b4:	stp	x29, x30, [sp, #-64]!
  40c9b8:	stp	x24, x23, [sp, #16]
  40c9bc:	stp	x22, x21, [sp, #32]
  40c9c0:	stp	x20, x19, [sp, #48]
  40c9c4:	ldr	x24, [x1, #16]
  40c9c8:	mov	x19, x2
  40c9cc:	mov	w2, #0x22                  	// #34
  40c9d0:	mov	x29, sp
  40c9d4:	mov	x21, x1
  40c9d8:	mov	w22, w0
  40c9dc:	stp	xzr, xzr, [x24]
  40c9e0:	bl	40cbc0 <__parse_rtattr_nested_compat@@Base+0x278>
  40c9e4:	mov	w20, w0
  40c9e8:	tbnz	w0, #31, 40ca38 <__parse_rtattr_nested_compat@@Base+0xf0>
  40c9ec:	cmp	w20, #0x8, lsl #12
  40c9f0:	mov	w8, #0x8000                	// #32768
  40c9f4:	csel	w20, w20, w8, gt
  40c9f8:	mov	x0, x20
  40c9fc:	bl	404d60 <malloc@plt>
  40ca00:	cbz	x0, 40ca50 <__parse_rtattr_nested_compat@@Base+0x108>
  40ca04:	mov	x23, x0
  40ca08:	stp	x0, x20, [x24]
  40ca0c:	mov	w0, w22
  40ca10:	mov	x1, x21
  40ca14:	mov	w2, wzr
  40ca18:	bl	40cbc0 <__parse_rtattr_nested_compat@@Base+0x278>
  40ca1c:	mov	w20, w0
  40ca20:	tbnz	w0, #31, 40ca30 <__parse_rtattr_nested_compat@@Base+0xe8>
  40ca24:	cbz	x19, 40ca30 <__parse_rtattr_nested_compat@@Base+0xe8>
  40ca28:	str	x23, [x19]
  40ca2c:	b	40ca38 <__parse_rtattr_nested_compat@@Base+0xf0>
  40ca30:	mov	x0, x23
  40ca34:	bl	404f30 <free@plt>
  40ca38:	mov	w0, w20
  40ca3c:	ldp	x20, x19, [sp, #48]
  40ca40:	ldp	x22, x21, [sp, #32]
  40ca44:	ldp	x24, x23, [sp, #16]
  40ca48:	ldp	x29, x30, [sp], #64
  40ca4c:	ret
  40ca50:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40ca54:	ldr	x8, [x8, #3992]
  40ca58:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ca5c:	add	x0, x0, #0x915
  40ca60:	mov	w1, #0x20                  	// #32
  40ca64:	ldr	x3, [x8]
  40ca68:	mov	w2, #0x1                   	// #1
  40ca6c:	bl	404f90 <fwrite@plt>
  40ca70:	mov	w20, #0xfffffff4            	// #-12
  40ca74:	b	40ca38 <__parse_rtattr_nested_compat@@Base+0xf0>
  40ca78:	stp	x29, x30, [sp, #-32]!
  40ca7c:	stp	x20, x19, [sp, #16]
  40ca80:	ldr	w8, [x0]
  40ca84:	mov	x29, sp
  40ca88:	cmp	w8, #0x13
  40ca8c:	b.ls	40caec <__parse_rtattr_nested_compat@@Base+0x1a4>  // b.plast
  40ca90:	ldr	w19, [x0, #16]
  40ca94:	tbnz	w19, #31, 40caa0 <__parse_rtattr_nested_compat@@Base+0x158>
  40ca98:	mov	w0, wzr
  40ca9c:	b	40cb24 <__parse_rtattr_nested_compat@@Base+0x1dc>
  40caa0:	neg	w20, w19
  40caa4:	bl	4050c0 <__errno_location@plt>
  40caa8:	str	w20, [x0]
  40caac:	cmn	w19, #0x2
  40cab0:	mov	w0, #0xffffffff            	// #-1
  40cab4:	b.eq	40cb24 <__parse_rtattr_nested_compat@@Base+0x1dc>  // b.none
  40cab8:	cmp	w20, #0x5f
  40cabc:	b.eq	40cb24 <__parse_rtattr_nested_compat@@Base+0x1dc>  // b.none
  40cac0:	cmp	w20, #0x5a
  40cac4:	b.ne	40cb14 <__parse_rtattr_nested_compat@@Base+0x1cc>  // b.any
  40cac8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40cacc:	ldr	x8, [x8, #3992]
  40cad0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40cad4:	add	x0, x0, #0x946
  40cad8:	mov	w1, #0x24                  	// #36
  40cadc:	ldr	x3, [x8]
  40cae0:	mov	w2, #0x1                   	// #1
  40cae4:	bl	404f90 <fwrite@plt>
  40cae8:	b	40cb20 <__parse_rtattr_nested_compat@@Base+0x1d8>
  40caec:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40caf0:	ldr	x8, [x8, #3992]
  40caf4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40caf8:	add	x0, x0, #0x936
  40cafc:	mov	w1, #0xf                   	// #15
  40cb00:	ldr	x3, [x8]
  40cb04:	mov	w2, #0x1                   	// #1
  40cb08:	bl	404f90 <fwrite@plt>
  40cb0c:	mov	w0, #0xffffffff            	// #-1
  40cb10:	b	40cb24 <__parse_rtattr_nested_compat@@Base+0x1dc>
  40cb14:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40cb18:	add	x0, x0, #0x96b
  40cb1c:	bl	404c30 <perror@plt>
  40cb20:	mov	w0, w19
  40cb24:	ldp	x20, x19, [sp, #16]
  40cb28:	ldp	x29, x30, [sp], #32
  40cb2c:	ret
  40cb30:	stp	x29, x30, [sp, #-32]!
  40cb34:	stp	x20, x19, [sp, #16]
  40cb38:	ldr	w8, [x1]
  40cb3c:	mov	x29, sp
  40cb40:	cmp	w8, #0x23
  40cb44:	b.ls	40cb8c <__parse_rtattr_nested_compat@@Base+0x244>  // b.plast
  40cb48:	ldr	w8, [x1, #16]
  40cb4c:	mov	x19, x0
  40cb50:	neg	w20, w8
  40cb54:	bl	4050c0 <__errno_location@plt>
  40cb58:	str	w20, [x0]
  40cb5c:	ldr	w8, [x19, #36]
  40cb60:	cmp	w8, #0x4
  40cb64:	b.ne	40cb78 <__parse_rtattr_nested_compat@@Base+0x230>  // b.any
  40cb68:	cmp	w20, #0x2
  40cb6c:	b.eq	40cb80 <__parse_rtattr_nested_compat@@Base+0x238>  // b.none
  40cb70:	cmp	w20, #0x5f
  40cb74:	b.eq	40cb80 <__parse_rtattr_nested_compat@@Base+0x238>  // b.none
  40cb78:	ldrb	w8, [x19, #48]
  40cb7c:	tbz	w8, #1, 40cbb0 <__parse_rtattr_nested_compat@@Base+0x268>
  40cb80:	ldp	x20, x19, [sp, #16]
  40cb84:	ldp	x29, x30, [sp], #32
  40cb88:	ret
  40cb8c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40cb90:	ldr	x8, [x8, #3992]
  40cb94:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40cb98:	add	x0, x0, #0x6d8
  40cb9c:	mov	w1, #0x10                  	// #16
  40cba0:	ldr	x3, [x8]
  40cba4:	mov	w2, #0x1                   	// #1
  40cba8:	bl	404f90 <fwrite@plt>
  40cbac:	b	40cb80 <__parse_rtattr_nested_compat@@Base+0x238>
  40cbb0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40cbb4:	add	x0, x0, #0x96b
  40cbb8:	bl	404c30 <perror@plt>
  40cbbc:	b	40cb80 <__parse_rtattr_nested_compat@@Base+0x238>
  40cbc0:	stp	x29, x30, [sp, #-48]!
  40cbc4:	stp	x22, x21, [sp, #16]
  40cbc8:	stp	x20, x19, [sp, #32]
  40cbcc:	mov	x29, sp
  40cbd0:	mov	w20, w2
  40cbd4:	mov	x21, x1
  40cbd8:	mov	w22, w0
  40cbdc:	bl	404bf0 <recvmsg@plt>
  40cbe0:	tbnz	w0, #31, 40cc10 <__parse_rtattr_nested_compat@@Base+0x2c8>
  40cbe4:	cbnz	w0, 40cc74 <__parse_rtattr_nested_compat@@Base+0x32c>
  40cbe8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40cbec:	ldr	x8, [x8, #3992]
  40cbf0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40cbf4:	add	x0, x0, #0x720
  40cbf8:	mov	w1, #0xf                   	// #15
  40cbfc:	ldr	x3, [x8]
  40cc00:	mov	w2, #0x1                   	// #1
  40cc04:	bl	404f90 <fwrite@plt>
  40cc08:	mov	w0, #0xffffffc3            	// #-61
  40cc0c:	b	40cc74 <__parse_rtattr_nested_compat@@Base+0x32c>
  40cc10:	bl	4050c0 <__errno_location@plt>
  40cc14:	mov	x19, x0
  40cc18:	b	40cc30 <__parse_rtattr_nested_compat@@Base+0x2e8>
  40cc1c:	mov	w0, w22
  40cc20:	mov	x1, x21
  40cc24:	mov	w2, w20
  40cc28:	bl	404bf0 <recvmsg@plt>
  40cc2c:	tbz	w0, #31, 40cbe4 <__parse_rtattr_nested_compat@@Base+0x29c>
  40cc30:	ldr	w0, [x19]
  40cc34:	cmp	w0, #0xb
  40cc38:	b.eq	40cc1c <__parse_rtattr_nested_compat@@Base+0x2d4>  // b.none
  40cc3c:	cmp	w0, #0x4
  40cc40:	b.eq	40cc1c <__parse_rtattr_nested_compat@@Base+0x2d4>  // b.none
  40cc44:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40cc48:	ldr	x8, [x8, #3992]
  40cc4c:	ldr	x20, [x8]
  40cc50:	bl	404e50 <strerror@plt>
  40cc54:	ldr	w3, [x19]
  40cc58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40cc5c:	mov	x2, x0
  40cc60:	add	x1, x1, #0x701
  40cc64:	mov	x0, x20
  40cc68:	bl	405100 <fprintf@plt>
  40cc6c:	ldr	w8, [x19]
  40cc70:	neg	w0, w8
  40cc74:	ldp	x20, x19, [sp, #32]
  40cc78:	ldp	x22, x21, [sp, #16]
  40cc7c:	ldp	x29, x30, [sp], #48
  40cc80:	ret
  40cc84:	stp	x29, x30, [sp, #-32]!
  40cc88:	str	x19, [sp, #16]
  40cc8c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40cc90:	ldr	x8, [x8, #3992]
  40cc94:	ldr	w9, [x1]
  40cc98:	mov	x29, sp
  40cc9c:	ldr	x19, [x8]
  40cca0:	neg	w0, w9
  40cca4:	bl	404e50 <strerror@plt>
  40cca8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x2a0>
  40ccac:	mov	x2, x0
  40ccb0:	add	x1, x1, #0x9c8
  40ccb4:	mov	x0, x19
  40ccb8:	bl	405100 <fprintf@plt>
  40ccbc:	ldr	x19, [sp, #16]
  40ccc0:	ldp	x29, x30, [sp], #32
  40ccc4:	ret

000000000040ccc8 <__libc_csu_init@@Base>:
  40ccc8:	stp	x29, x30, [sp, #-64]!
  40cccc:	mov	x29, sp
  40ccd0:	stp	x19, x20, [sp, #16]
  40ccd4:	adrp	x20, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40ccd8:	add	x20, x20, #0xd08
  40ccdc:	stp	x21, x22, [sp, #32]
  40cce0:	adrp	x21, 41d000 <_IO_stdin_used@@Base+0x102a0>
  40cce4:	add	x21, x21, #0xd00
  40cce8:	sub	x20, x20, x21
  40ccec:	mov	w22, w0
  40ccf0:	stp	x23, x24, [sp, #48]
  40ccf4:	mov	x23, x1
  40ccf8:	mov	x24, x2
  40ccfc:	bl	404ba0 <memcpy@plt-0x40>
  40cd00:	cmp	xzr, x20, asr #3
  40cd04:	b.eq	40cd30 <__libc_csu_init@@Base+0x68>  // b.none
  40cd08:	asr	x20, x20, #3
  40cd0c:	mov	x19, #0x0                   	// #0
  40cd10:	ldr	x3, [x21, x19, lsl #3]
  40cd14:	mov	x2, x24
  40cd18:	add	x19, x19, #0x1
  40cd1c:	mov	x1, x23
  40cd20:	mov	w0, w22
  40cd24:	blr	x3
  40cd28:	cmp	x20, x19
  40cd2c:	b.ne	40cd10 <__libc_csu_init@@Base+0x48>  // b.any
  40cd30:	ldp	x19, x20, [sp, #16]
  40cd34:	ldp	x21, x22, [sp, #32]
  40cd38:	ldp	x23, x24, [sp, #48]
  40cd3c:	ldp	x29, x30, [sp], #64
  40cd40:	ret
  40cd44:	nop

000000000040cd48 <__libc_csu_fini@@Base>:
  40cd48:	ret

Disassembly of section .fini:

000000000040cd4c <.fini>:
  40cd4c:	stp	x29, x30, [sp, #-16]!
  40cd50:	mov	x29, sp
  40cd54:	ldp	x29, x30, [sp], #16
  40cd58:	ret
