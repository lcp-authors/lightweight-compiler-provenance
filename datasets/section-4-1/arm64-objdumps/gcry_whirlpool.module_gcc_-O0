
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_whirlpool.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_memcpy>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	ldr	x2, [sp, #24]
      18:	ldr	x1, [sp, #32]
      1c:	ldr	x0, [sp, #40]
      20:	bl	0 <grub_memmove>
      24:	ldp	x29, x30, [sp], #48
      28:	ret

000000000000002c <whirlpool_init>:
      2c:	stp	x29, x30, [sp, #-48]!
      30:	mov	x29, sp
      34:	str	x0, [sp, #24]
      38:	ldr	x0, [sp, #24]
      3c:	str	x0, [sp, #40]
      40:	mov	x2, #0xa8                  	// #168
      44:	mov	w1, #0x0                   	// #0
      48:	ldr	x0, [sp, #40]
      4c:	bl	0 <grub_memset>
      50:	nop
      54:	ldp	x29, x30, [sp], #48
      58:	ret

000000000000005c <whirlpool_transform>:
      5c:	sub	sp, sp, #0x120
      60:	str	x0, [sp, #8]
      64:	str	x1, [sp]
      68:	str	wzr, [sp, #280]
      6c:	b	1c0 <whirlpool_transform+0x164>
      70:	ldr	w0, [sp, #280]
      74:	lsl	w0, w0, #3
      78:	mov	w0, w0
      7c:	ldr	x1, [sp]
      80:	add	x0, x1, x0
      84:	ldrb	w0, [x0]
      88:	and	x0, x0, #0xff
      8c:	lsl	x1, x0, #56
      90:	ldr	w0, [sp, #280]
      94:	lsl	w0, w0, #3
      98:	add	w0, w0, #0x1
      9c:	mov	w0, w0
      a0:	ldr	x2, [sp]
      a4:	add	x0, x2, x0
      a8:	ldrb	w0, [x0]
      ac:	and	x0, x0, #0xff
      b0:	lsl	x0, x0, #48
      b4:	orr	x1, x1, x0
      b8:	ldr	w0, [sp, #280]
      bc:	lsl	w0, w0, #3
      c0:	add	w0, w0, #0x2
      c4:	mov	w0, w0
      c8:	ldr	x2, [sp]
      cc:	add	x0, x2, x0
      d0:	ldrb	w0, [x0]
      d4:	and	x0, x0, #0xff
      d8:	lsl	x0, x0, #40
      dc:	orr	x1, x1, x0
      e0:	ldr	w0, [sp, #280]
      e4:	lsl	w0, w0, #3
      e8:	add	w0, w0, #0x3
      ec:	mov	w0, w0
      f0:	ldr	x2, [sp]
      f4:	add	x0, x2, x0
      f8:	ldrb	w0, [x0]
      fc:	and	x0, x0, #0xff
     100:	lsl	x0, x0, #32
     104:	orr	x1, x1, x0
     108:	ldr	w0, [sp, #280]
     10c:	lsl	w0, w0, #3
     110:	add	w0, w0, #0x4
     114:	mov	w0, w0
     118:	ldr	x2, [sp]
     11c:	add	x0, x2, x0
     120:	ldrb	w0, [x0]
     124:	and	x0, x0, #0xff
     128:	lsl	x0, x0, #24
     12c:	orr	x1, x1, x0
     130:	ldr	w0, [sp, #280]
     134:	lsl	w0, w0, #3
     138:	add	w0, w0, #0x5
     13c:	mov	w0, w0
     140:	ldr	x2, [sp]
     144:	add	x0, x2, x0
     148:	ldrb	w0, [x0]
     14c:	and	x0, x0, #0xff
     150:	lsl	x0, x0, #16
     154:	orr	x1, x1, x0
     158:	ldr	w0, [sp, #280]
     15c:	lsl	w0, w0, #3
     160:	add	w0, w0, #0x6
     164:	mov	w0, w0
     168:	ldr	x2, [sp]
     16c:	add	x0, x2, x0
     170:	ldrb	w0, [x0]
     174:	and	x0, x0, #0xff
     178:	lsl	x0, x0, #8
     17c:	orr	x1, x1, x0
     180:	ldr	w0, [sp, #280]
     184:	lsl	w0, w0, #3
     188:	add	w0, w0, #0x7
     18c:	mov	w0, w0
     190:	ldr	x2, [sp]
     194:	add	x0, x2, x0
     198:	ldrb	w0, [x0]
     19c:	and	x0, x0, #0xff
     1a0:	orr	x2, x1, x0
     1a4:	ldr	w0, [sp, #280]
     1a8:	lsl	x0, x0, #3
     1ac:	add	x1, sp, #0xd8
     1b0:	str	x2, [x1, x0]
     1b4:	ldr	w0, [sp, #280]
     1b8:	add	w0, w0, #0x1
     1bc:	str	w0, [sp, #280]
     1c0:	ldr	w0, [sp, #280]
     1c4:	cmp	w0, #0x7
     1c8:	b.ls	70 <whirlpool_transform+0x14>  // b.plast
     1cc:	str	wzr, [sp, #280]
     1d0:	b	1fc <whirlpool_transform+0x1a0>
     1d4:	ldr	x0, [sp, #8]
     1d8:	ldr	w1, [sp, #280]
     1dc:	ldr	x2, [x0, x1, lsl #3]
     1e0:	ldr	w0, [sp, #280]
     1e4:	lsl	x0, x0, #3
     1e8:	add	x1, sp, #0x98
     1ec:	str	x2, [x1, x0]
     1f0:	ldr	w0, [sp, #280]
     1f4:	add	w0, w0, #0x1
     1f8:	str	w0, [sp, #280]
     1fc:	ldr	w0, [sp, #280]
     200:	cmp	w0, #0x7
     204:	b.ls	1d4 <whirlpool_transform+0x178>  // b.plast
     208:	str	wzr, [sp, #280]
     20c:	b	238 <whirlpool_transform+0x1dc>
     210:	ldr	x0, [sp, #8]
     214:	ldr	w1, [sp, #280]
     218:	ldr	x2, [x0, x1, lsl #3]
     21c:	ldr	w0, [sp, #280]
     220:	lsl	x0, x0, #3
     224:	add	x1, sp, #0x58
     228:	str	x2, [x1, x0]
     22c:	ldr	w0, [sp, #280]
     230:	add	w0, w0, #0x1
     234:	str	w0, [sp, #280]
     238:	ldr	w0, [sp, #280]
     23c:	cmp	w0, #0x7
     240:	b.ls	210 <whirlpool_transform+0x1b4>  // b.plast
     244:	str	wzr, [sp, #280]
     248:	b	28c <whirlpool_transform+0x230>
     24c:	ldr	w0, [sp, #280]
     250:	lsl	x0, x0, #3
     254:	add	x1, sp, #0x58
     258:	ldr	x1, [x1, x0]
     25c:	ldr	w0, [sp, #280]
     260:	lsl	x0, x0, #3
     264:	add	x2, sp, #0xd8
     268:	ldr	x0, [x2, x0]
     26c:	eor	x2, x1, x0
     270:	ldr	w0, [sp, #280]
     274:	lsl	x0, x0, #3
     278:	add	x1, sp, #0x58
     27c:	str	x2, [x1, x0]
     280:	ldr	w0, [sp, #280]
     284:	add	w0, w0, #0x1
     288:	str	w0, [sp, #280]
     28c:	ldr	w0, [sp, #280]
     290:	cmp	w0, #0x7
     294:	b.ls	24c <whirlpool_transform+0x1f0>  // b.plast
     298:	str	wzr, [sp, #284]
     29c:	b	1304 <whirlpool_transform+0x12a8>
     2a0:	ldr	x0, [sp, #152]
     2a4:	lsr	x1, x0, #56
     2a8:	adrp	x0, 0 <grub_memcpy>
     2ac:	add	x0, x0, #0x0
     2b0:	ldr	x0, [x0]
     2b4:	ldr	x1, [x0, x1, lsl #3]
     2b8:	ldr	x0, [sp, #208]
     2bc:	lsr	x0, x0, #48
     2c0:	and	x2, x0, #0xff
     2c4:	adrp	x0, 0 <grub_memcpy>
     2c8:	add	x0, x0, #0x0
     2cc:	ldr	x0, [x0]
     2d0:	ldr	x0, [x0, x2, lsl #3]
     2d4:	eor	x1, x1, x0
     2d8:	ldr	x0, [sp, #200]
     2dc:	lsr	x0, x0, #40
     2e0:	and	x2, x0, #0xff
     2e4:	adrp	x0, 0 <grub_memcpy>
     2e8:	add	x0, x0, #0x0
     2ec:	ldr	x0, [x0]
     2f0:	ldr	x0, [x0, x2, lsl #3]
     2f4:	eor	x1, x1, x0
     2f8:	ldr	x0, [sp, #192]
     2fc:	lsr	x0, x0, #32
     300:	and	x2, x0, #0xff
     304:	adrp	x0, 0 <grub_memcpy>
     308:	add	x0, x0, #0x0
     30c:	ldr	x0, [x0]
     310:	ldr	x0, [x0, x2, lsl #3]
     314:	eor	x1, x1, x0
     318:	ldr	x0, [sp, #184]
     31c:	lsr	x0, x0, #24
     320:	and	x2, x0, #0xff
     324:	adrp	x0, 0 <grub_memcpy>
     328:	add	x0, x0, #0x0
     32c:	ldr	x0, [x0]
     330:	ldr	x0, [x0, x2, lsl #3]
     334:	eor	x1, x1, x0
     338:	ldr	x0, [sp, #176]
     33c:	lsr	x0, x0, #16
     340:	and	x2, x0, #0xff
     344:	adrp	x0, 0 <grub_memcpy>
     348:	add	x0, x0, #0x0
     34c:	ldr	x0, [x0]
     350:	ldr	x0, [x0, x2, lsl #3]
     354:	eor	x1, x1, x0
     358:	ldr	x0, [sp, #168]
     35c:	lsr	x0, x0, #8
     360:	and	x2, x0, #0xff
     364:	adrp	x0, 0 <grub_memcpy>
     368:	add	x0, x0, #0x0
     36c:	ldr	x0, [x0]
     370:	ldr	x0, [x0, x2, lsl #3]
     374:	eor	x1, x1, x0
     378:	ldr	x0, [sp, #160]
     37c:	and	x2, x0, #0xff
     380:	adrp	x0, 0 <grub_memcpy>
     384:	add	x0, x0, #0x0
     388:	ldr	x0, [x0]
     38c:	ldr	x0, [x0, x2, lsl #3]
     390:	eor	x1, x1, x0
     394:	adrp	x0, 0 <grub_memcpy>
     398:	add	x0, x0, #0x0
     39c:	ldr	x0, [x0]
     3a0:	ldr	w2, [sp, #284]
     3a4:	ldr	x0, [x0, x2, lsl #3]
     3a8:	eor	x0, x1, x0
     3ac:	str	x0, [sp, #24]
     3b0:	ldr	x0, [sp, #160]
     3b4:	lsr	x1, x0, #56
     3b8:	adrp	x0, 0 <grub_memcpy>
     3bc:	add	x0, x0, #0x0
     3c0:	ldr	x0, [x0]
     3c4:	ldr	x1, [x0, x1, lsl #3]
     3c8:	ldr	x0, [sp, #152]
     3cc:	lsr	x0, x0, #48
     3d0:	and	x2, x0, #0xff
     3d4:	adrp	x0, 0 <grub_memcpy>
     3d8:	add	x0, x0, #0x0
     3dc:	ldr	x0, [x0]
     3e0:	ldr	x0, [x0, x2, lsl #3]
     3e4:	eor	x1, x1, x0
     3e8:	ldr	x0, [sp, #208]
     3ec:	lsr	x0, x0, #40
     3f0:	and	x2, x0, #0xff
     3f4:	adrp	x0, 0 <grub_memcpy>
     3f8:	add	x0, x0, #0x0
     3fc:	ldr	x0, [x0]
     400:	ldr	x0, [x0, x2, lsl #3]
     404:	eor	x1, x1, x0
     408:	ldr	x0, [sp, #200]
     40c:	lsr	x0, x0, #32
     410:	and	x2, x0, #0xff
     414:	adrp	x0, 0 <grub_memcpy>
     418:	add	x0, x0, #0x0
     41c:	ldr	x0, [x0]
     420:	ldr	x0, [x0, x2, lsl #3]
     424:	eor	x1, x1, x0
     428:	ldr	x0, [sp, #192]
     42c:	lsr	x0, x0, #24
     430:	and	x2, x0, #0xff
     434:	adrp	x0, 0 <grub_memcpy>
     438:	add	x0, x0, #0x0
     43c:	ldr	x0, [x0]
     440:	ldr	x0, [x0, x2, lsl #3]
     444:	eor	x1, x1, x0
     448:	ldr	x0, [sp, #184]
     44c:	lsr	x0, x0, #16
     450:	and	x2, x0, #0xff
     454:	adrp	x0, 0 <grub_memcpy>
     458:	add	x0, x0, #0x0
     45c:	ldr	x0, [x0]
     460:	ldr	x0, [x0, x2, lsl #3]
     464:	eor	x1, x1, x0
     468:	ldr	x0, [sp, #176]
     46c:	lsr	x0, x0, #8
     470:	and	x2, x0, #0xff
     474:	adrp	x0, 0 <grub_memcpy>
     478:	add	x0, x0, #0x0
     47c:	ldr	x0, [x0]
     480:	ldr	x0, [x0, x2, lsl #3]
     484:	eor	x1, x1, x0
     488:	ldr	x0, [sp, #168]
     48c:	and	x2, x0, #0xff
     490:	adrp	x0, 0 <grub_memcpy>
     494:	add	x0, x0, #0x0
     498:	ldr	x0, [x0]
     49c:	ldr	x0, [x0, x2, lsl #3]
     4a0:	eor	x0, x1, x0
     4a4:	str	x0, [sp, #32]
     4a8:	ldr	x0, [sp, #168]
     4ac:	lsr	x1, x0, #56
     4b0:	adrp	x0, 0 <grub_memcpy>
     4b4:	add	x0, x0, #0x0
     4b8:	ldr	x0, [x0]
     4bc:	ldr	x1, [x0, x1, lsl #3]
     4c0:	ldr	x0, [sp, #160]
     4c4:	lsr	x0, x0, #48
     4c8:	and	x2, x0, #0xff
     4cc:	adrp	x0, 0 <grub_memcpy>
     4d0:	add	x0, x0, #0x0
     4d4:	ldr	x0, [x0]
     4d8:	ldr	x0, [x0, x2, lsl #3]
     4dc:	eor	x1, x1, x0
     4e0:	ldr	x0, [sp, #152]
     4e4:	lsr	x0, x0, #40
     4e8:	and	x2, x0, #0xff
     4ec:	adrp	x0, 0 <grub_memcpy>
     4f0:	add	x0, x0, #0x0
     4f4:	ldr	x0, [x0]
     4f8:	ldr	x0, [x0, x2, lsl #3]
     4fc:	eor	x1, x1, x0
     500:	ldr	x0, [sp, #208]
     504:	lsr	x0, x0, #32
     508:	and	x2, x0, #0xff
     50c:	adrp	x0, 0 <grub_memcpy>
     510:	add	x0, x0, #0x0
     514:	ldr	x0, [x0]
     518:	ldr	x0, [x0, x2, lsl #3]
     51c:	eor	x1, x1, x0
     520:	ldr	x0, [sp, #200]
     524:	lsr	x0, x0, #24
     528:	and	x2, x0, #0xff
     52c:	adrp	x0, 0 <grub_memcpy>
     530:	add	x0, x0, #0x0
     534:	ldr	x0, [x0]
     538:	ldr	x0, [x0, x2, lsl #3]
     53c:	eor	x1, x1, x0
     540:	ldr	x0, [sp, #192]
     544:	lsr	x0, x0, #16
     548:	and	x2, x0, #0xff
     54c:	adrp	x0, 0 <grub_memcpy>
     550:	add	x0, x0, #0x0
     554:	ldr	x0, [x0]
     558:	ldr	x0, [x0, x2, lsl #3]
     55c:	eor	x1, x1, x0
     560:	ldr	x0, [sp, #184]
     564:	lsr	x0, x0, #8
     568:	and	x2, x0, #0xff
     56c:	adrp	x0, 0 <grub_memcpy>
     570:	add	x0, x0, #0x0
     574:	ldr	x0, [x0]
     578:	ldr	x0, [x0, x2, lsl #3]
     57c:	eor	x1, x1, x0
     580:	ldr	x0, [sp, #176]
     584:	and	x2, x0, #0xff
     588:	adrp	x0, 0 <grub_memcpy>
     58c:	add	x0, x0, #0x0
     590:	ldr	x0, [x0]
     594:	ldr	x0, [x0, x2, lsl #3]
     598:	eor	x0, x1, x0
     59c:	str	x0, [sp, #40]
     5a0:	ldr	x0, [sp, #176]
     5a4:	lsr	x1, x0, #56
     5a8:	adrp	x0, 0 <grub_memcpy>
     5ac:	add	x0, x0, #0x0
     5b0:	ldr	x0, [x0]
     5b4:	ldr	x1, [x0, x1, lsl #3]
     5b8:	ldr	x0, [sp, #168]
     5bc:	lsr	x0, x0, #48
     5c0:	and	x2, x0, #0xff
     5c4:	adrp	x0, 0 <grub_memcpy>
     5c8:	add	x0, x0, #0x0
     5cc:	ldr	x0, [x0]
     5d0:	ldr	x0, [x0, x2, lsl #3]
     5d4:	eor	x1, x1, x0
     5d8:	ldr	x0, [sp, #160]
     5dc:	lsr	x0, x0, #40
     5e0:	and	x2, x0, #0xff
     5e4:	adrp	x0, 0 <grub_memcpy>
     5e8:	add	x0, x0, #0x0
     5ec:	ldr	x0, [x0]
     5f0:	ldr	x0, [x0, x2, lsl #3]
     5f4:	eor	x1, x1, x0
     5f8:	ldr	x0, [sp, #152]
     5fc:	lsr	x0, x0, #32
     600:	and	x2, x0, #0xff
     604:	adrp	x0, 0 <grub_memcpy>
     608:	add	x0, x0, #0x0
     60c:	ldr	x0, [x0]
     610:	ldr	x0, [x0, x2, lsl #3]
     614:	eor	x1, x1, x0
     618:	ldr	x0, [sp, #208]
     61c:	lsr	x0, x0, #24
     620:	and	x2, x0, #0xff
     624:	adrp	x0, 0 <grub_memcpy>
     628:	add	x0, x0, #0x0
     62c:	ldr	x0, [x0]
     630:	ldr	x0, [x0, x2, lsl #3]
     634:	eor	x1, x1, x0
     638:	ldr	x0, [sp, #200]
     63c:	lsr	x0, x0, #16
     640:	and	x2, x0, #0xff
     644:	adrp	x0, 0 <grub_memcpy>
     648:	add	x0, x0, #0x0
     64c:	ldr	x0, [x0]
     650:	ldr	x0, [x0, x2, lsl #3]
     654:	eor	x1, x1, x0
     658:	ldr	x0, [sp, #192]
     65c:	lsr	x0, x0, #8
     660:	and	x2, x0, #0xff
     664:	adrp	x0, 0 <grub_memcpy>
     668:	add	x0, x0, #0x0
     66c:	ldr	x0, [x0]
     670:	ldr	x0, [x0, x2, lsl #3]
     674:	eor	x1, x1, x0
     678:	ldr	x0, [sp, #184]
     67c:	and	x2, x0, #0xff
     680:	adrp	x0, 0 <grub_memcpy>
     684:	add	x0, x0, #0x0
     688:	ldr	x0, [x0]
     68c:	ldr	x0, [x0, x2, lsl #3]
     690:	eor	x0, x1, x0
     694:	str	x0, [sp, #48]
     698:	ldr	x0, [sp, #184]
     69c:	lsr	x1, x0, #56
     6a0:	adrp	x0, 0 <grub_memcpy>
     6a4:	add	x0, x0, #0x0
     6a8:	ldr	x0, [x0]
     6ac:	ldr	x1, [x0, x1, lsl #3]
     6b0:	ldr	x0, [sp, #176]
     6b4:	lsr	x0, x0, #48
     6b8:	and	x2, x0, #0xff
     6bc:	adrp	x0, 0 <grub_memcpy>
     6c0:	add	x0, x0, #0x0
     6c4:	ldr	x0, [x0]
     6c8:	ldr	x0, [x0, x2, lsl #3]
     6cc:	eor	x1, x1, x0
     6d0:	ldr	x0, [sp, #168]
     6d4:	lsr	x0, x0, #40
     6d8:	and	x2, x0, #0xff
     6dc:	adrp	x0, 0 <grub_memcpy>
     6e0:	add	x0, x0, #0x0
     6e4:	ldr	x0, [x0]
     6e8:	ldr	x0, [x0, x2, lsl #3]
     6ec:	eor	x1, x1, x0
     6f0:	ldr	x0, [sp, #160]
     6f4:	lsr	x0, x0, #32
     6f8:	and	x2, x0, #0xff
     6fc:	adrp	x0, 0 <grub_memcpy>
     700:	add	x0, x0, #0x0
     704:	ldr	x0, [x0]
     708:	ldr	x0, [x0, x2, lsl #3]
     70c:	eor	x1, x1, x0
     710:	ldr	x0, [sp, #152]
     714:	lsr	x0, x0, #24
     718:	and	x2, x0, #0xff
     71c:	adrp	x0, 0 <grub_memcpy>
     720:	add	x0, x0, #0x0
     724:	ldr	x0, [x0]
     728:	ldr	x0, [x0, x2, lsl #3]
     72c:	eor	x1, x1, x0
     730:	ldr	x0, [sp, #208]
     734:	lsr	x0, x0, #16
     738:	and	x2, x0, #0xff
     73c:	adrp	x0, 0 <grub_memcpy>
     740:	add	x0, x0, #0x0
     744:	ldr	x0, [x0]
     748:	ldr	x0, [x0, x2, lsl #3]
     74c:	eor	x1, x1, x0
     750:	ldr	x0, [sp, #200]
     754:	lsr	x0, x0, #8
     758:	and	x2, x0, #0xff
     75c:	adrp	x0, 0 <grub_memcpy>
     760:	add	x0, x0, #0x0
     764:	ldr	x0, [x0]
     768:	ldr	x0, [x0, x2, lsl #3]
     76c:	eor	x1, x1, x0
     770:	ldr	x0, [sp, #192]
     774:	and	x2, x0, #0xff
     778:	adrp	x0, 0 <grub_memcpy>
     77c:	add	x0, x0, #0x0
     780:	ldr	x0, [x0]
     784:	ldr	x0, [x0, x2, lsl #3]
     788:	eor	x0, x1, x0
     78c:	str	x0, [sp, #56]
     790:	ldr	x0, [sp, #192]
     794:	lsr	x1, x0, #56
     798:	adrp	x0, 0 <grub_memcpy>
     79c:	add	x0, x0, #0x0
     7a0:	ldr	x0, [x0]
     7a4:	ldr	x1, [x0, x1, lsl #3]
     7a8:	ldr	x0, [sp, #184]
     7ac:	lsr	x0, x0, #48
     7b0:	and	x2, x0, #0xff
     7b4:	adrp	x0, 0 <grub_memcpy>
     7b8:	add	x0, x0, #0x0
     7bc:	ldr	x0, [x0]
     7c0:	ldr	x0, [x0, x2, lsl #3]
     7c4:	eor	x1, x1, x0
     7c8:	ldr	x0, [sp, #176]
     7cc:	lsr	x0, x0, #40
     7d0:	and	x2, x0, #0xff
     7d4:	adrp	x0, 0 <grub_memcpy>
     7d8:	add	x0, x0, #0x0
     7dc:	ldr	x0, [x0]
     7e0:	ldr	x0, [x0, x2, lsl #3]
     7e4:	eor	x1, x1, x0
     7e8:	ldr	x0, [sp, #168]
     7ec:	lsr	x0, x0, #32
     7f0:	and	x2, x0, #0xff
     7f4:	adrp	x0, 0 <grub_memcpy>
     7f8:	add	x0, x0, #0x0
     7fc:	ldr	x0, [x0]
     800:	ldr	x0, [x0, x2, lsl #3]
     804:	eor	x1, x1, x0
     808:	ldr	x0, [sp, #160]
     80c:	lsr	x0, x0, #24
     810:	and	x2, x0, #0xff
     814:	adrp	x0, 0 <grub_memcpy>
     818:	add	x0, x0, #0x0
     81c:	ldr	x0, [x0]
     820:	ldr	x0, [x0, x2, lsl #3]
     824:	eor	x1, x1, x0
     828:	ldr	x0, [sp, #152]
     82c:	lsr	x0, x0, #16
     830:	and	x2, x0, #0xff
     834:	adrp	x0, 0 <grub_memcpy>
     838:	add	x0, x0, #0x0
     83c:	ldr	x0, [x0]
     840:	ldr	x0, [x0, x2, lsl #3]
     844:	eor	x1, x1, x0
     848:	ldr	x0, [sp, #208]
     84c:	lsr	x0, x0, #8
     850:	and	x2, x0, #0xff
     854:	adrp	x0, 0 <grub_memcpy>
     858:	add	x0, x0, #0x0
     85c:	ldr	x0, [x0]
     860:	ldr	x0, [x0, x2, lsl #3]
     864:	eor	x1, x1, x0
     868:	ldr	x0, [sp, #200]
     86c:	and	x2, x0, #0xff
     870:	adrp	x0, 0 <grub_memcpy>
     874:	add	x0, x0, #0x0
     878:	ldr	x0, [x0]
     87c:	ldr	x0, [x0, x2, lsl #3]
     880:	eor	x0, x1, x0
     884:	str	x0, [sp, #64]
     888:	ldr	x0, [sp, #200]
     88c:	lsr	x1, x0, #56
     890:	adrp	x0, 0 <grub_memcpy>
     894:	add	x0, x0, #0x0
     898:	ldr	x0, [x0]
     89c:	ldr	x1, [x0, x1, lsl #3]
     8a0:	ldr	x0, [sp, #192]
     8a4:	lsr	x0, x0, #48
     8a8:	and	x2, x0, #0xff
     8ac:	adrp	x0, 0 <grub_memcpy>
     8b0:	add	x0, x0, #0x0
     8b4:	ldr	x0, [x0]
     8b8:	ldr	x0, [x0, x2, lsl #3]
     8bc:	eor	x1, x1, x0
     8c0:	ldr	x0, [sp, #184]
     8c4:	lsr	x0, x0, #40
     8c8:	and	x2, x0, #0xff
     8cc:	adrp	x0, 0 <grub_memcpy>
     8d0:	add	x0, x0, #0x0
     8d4:	ldr	x0, [x0]
     8d8:	ldr	x0, [x0, x2, lsl #3]
     8dc:	eor	x1, x1, x0
     8e0:	ldr	x0, [sp, #176]
     8e4:	lsr	x0, x0, #32
     8e8:	and	x2, x0, #0xff
     8ec:	adrp	x0, 0 <grub_memcpy>
     8f0:	add	x0, x0, #0x0
     8f4:	ldr	x0, [x0]
     8f8:	ldr	x0, [x0, x2, lsl #3]
     8fc:	eor	x1, x1, x0
     900:	ldr	x0, [sp, #168]
     904:	lsr	x0, x0, #24
     908:	and	x2, x0, #0xff
     90c:	adrp	x0, 0 <grub_memcpy>
     910:	add	x0, x0, #0x0
     914:	ldr	x0, [x0]
     918:	ldr	x0, [x0, x2, lsl #3]
     91c:	eor	x1, x1, x0
     920:	ldr	x0, [sp, #160]
     924:	lsr	x0, x0, #16
     928:	and	x2, x0, #0xff
     92c:	adrp	x0, 0 <grub_memcpy>
     930:	add	x0, x0, #0x0
     934:	ldr	x0, [x0]
     938:	ldr	x0, [x0, x2, lsl #3]
     93c:	eor	x1, x1, x0
     940:	ldr	x0, [sp, #152]
     944:	lsr	x0, x0, #8
     948:	and	x2, x0, #0xff
     94c:	adrp	x0, 0 <grub_memcpy>
     950:	add	x0, x0, #0x0
     954:	ldr	x0, [x0]
     958:	ldr	x0, [x0, x2, lsl #3]
     95c:	eor	x1, x1, x0
     960:	ldr	x0, [sp, #208]
     964:	and	x2, x0, #0xff
     968:	adrp	x0, 0 <grub_memcpy>
     96c:	add	x0, x0, #0x0
     970:	ldr	x0, [x0]
     974:	ldr	x0, [x0, x2, lsl #3]
     978:	eor	x0, x1, x0
     97c:	str	x0, [sp, #72]
     980:	ldr	x0, [sp, #208]
     984:	lsr	x1, x0, #56
     988:	adrp	x0, 0 <grub_memcpy>
     98c:	add	x0, x0, #0x0
     990:	ldr	x0, [x0]
     994:	ldr	x1, [x0, x1, lsl #3]
     998:	ldr	x0, [sp, #200]
     99c:	lsr	x0, x0, #48
     9a0:	and	x2, x0, #0xff
     9a4:	adrp	x0, 0 <grub_memcpy>
     9a8:	add	x0, x0, #0x0
     9ac:	ldr	x0, [x0]
     9b0:	ldr	x0, [x0, x2, lsl #3]
     9b4:	eor	x1, x1, x0
     9b8:	ldr	x0, [sp, #192]
     9bc:	lsr	x0, x0, #40
     9c0:	and	x2, x0, #0xff
     9c4:	adrp	x0, 0 <grub_memcpy>
     9c8:	add	x0, x0, #0x0
     9cc:	ldr	x0, [x0]
     9d0:	ldr	x0, [x0, x2, lsl #3]
     9d4:	eor	x1, x1, x0
     9d8:	ldr	x0, [sp, #184]
     9dc:	lsr	x0, x0, #32
     9e0:	and	x2, x0, #0xff
     9e4:	adrp	x0, 0 <grub_memcpy>
     9e8:	add	x0, x0, #0x0
     9ec:	ldr	x0, [x0]
     9f0:	ldr	x0, [x0, x2, lsl #3]
     9f4:	eor	x1, x1, x0
     9f8:	ldr	x0, [sp, #176]
     9fc:	lsr	x0, x0, #24
     a00:	and	x2, x0, #0xff
     a04:	adrp	x0, 0 <grub_memcpy>
     a08:	add	x0, x0, #0x0
     a0c:	ldr	x0, [x0]
     a10:	ldr	x0, [x0, x2, lsl #3]
     a14:	eor	x1, x1, x0
     a18:	ldr	x0, [sp, #168]
     a1c:	lsr	x0, x0, #16
     a20:	and	x2, x0, #0xff
     a24:	adrp	x0, 0 <grub_memcpy>
     a28:	add	x0, x0, #0x0
     a2c:	ldr	x0, [x0]
     a30:	ldr	x0, [x0, x2, lsl #3]
     a34:	eor	x1, x1, x0
     a38:	ldr	x0, [sp, #160]
     a3c:	lsr	x0, x0, #8
     a40:	and	x2, x0, #0xff
     a44:	adrp	x0, 0 <grub_memcpy>
     a48:	add	x0, x0, #0x0
     a4c:	ldr	x0, [x0]
     a50:	ldr	x0, [x0, x2, lsl #3]
     a54:	eor	x1, x1, x0
     a58:	ldr	x0, [sp, #152]
     a5c:	and	x2, x0, #0xff
     a60:	adrp	x0, 0 <grub_memcpy>
     a64:	add	x0, x0, #0x0
     a68:	ldr	x0, [x0]
     a6c:	ldr	x0, [x0, x2, lsl #3]
     a70:	eor	x0, x1, x0
     a74:	str	x0, [sp, #80]
     a78:	str	wzr, [sp, #280]
     a7c:	b	aac <whirlpool_transform+0xa50>
     a80:	ldr	w0, [sp, #280]
     a84:	lsl	x0, x0, #3
     a88:	add	x1, sp, #0x18
     a8c:	ldr	x2, [x1, x0]
     a90:	ldr	w0, [sp, #280]
     a94:	lsl	x0, x0, #3
     a98:	add	x1, sp, #0x98
     a9c:	str	x2, [x1, x0]
     aa0:	ldr	w0, [sp, #280]
     aa4:	add	w0, w0, #0x1
     aa8:	str	w0, [sp, #280]
     aac:	ldr	w0, [sp, #280]
     ab0:	cmp	w0, #0x7
     ab4:	b.ls	a80 <whirlpool_transform+0xa24>  // b.plast
     ab8:	ldr	x0, [sp, #88]
     abc:	lsr	x1, x0, #56
     ac0:	adrp	x0, 0 <grub_memcpy>
     ac4:	add	x0, x0, #0x0
     ac8:	ldr	x0, [x0]
     acc:	ldr	x1, [x0, x1, lsl #3]
     ad0:	ldr	x0, [sp, #144]
     ad4:	lsr	x0, x0, #48
     ad8:	and	x2, x0, #0xff
     adc:	adrp	x0, 0 <grub_memcpy>
     ae0:	add	x0, x0, #0x0
     ae4:	ldr	x0, [x0]
     ae8:	ldr	x0, [x0, x2, lsl #3]
     aec:	eor	x1, x1, x0
     af0:	ldr	x0, [sp, #136]
     af4:	lsr	x0, x0, #40
     af8:	and	x2, x0, #0xff
     afc:	adrp	x0, 0 <grub_memcpy>
     b00:	add	x0, x0, #0x0
     b04:	ldr	x0, [x0]
     b08:	ldr	x0, [x0, x2, lsl #3]
     b0c:	eor	x1, x1, x0
     b10:	ldr	x0, [sp, #128]
     b14:	lsr	x0, x0, #32
     b18:	and	x2, x0, #0xff
     b1c:	adrp	x0, 0 <grub_memcpy>
     b20:	add	x0, x0, #0x0
     b24:	ldr	x0, [x0]
     b28:	ldr	x0, [x0, x2, lsl #3]
     b2c:	eor	x1, x1, x0
     b30:	ldr	x0, [sp, #120]
     b34:	lsr	x0, x0, #24
     b38:	and	x2, x0, #0xff
     b3c:	adrp	x0, 0 <grub_memcpy>
     b40:	add	x0, x0, #0x0
     b44:	ldr	x0, [x0]
     b48:	ldr	x0, [x0, x2, lsl #3]
     b4c:	eor	x1, x1, x0
     b50:	ldr	x0, [sp, #112]
     b54:	lsr	x0, x0, #16
     b58:	and	x2, x0, #0xff
     b5c:	adrp	x0, 0 <grub_memcpy>
     b60:	add	x0, x0, #0x0
     b64:	ldr	x0, [x0]
     b68:	ldr	x0, [x0, x2, lsl #3]
     b6c:	eor	x1, x1, x0
     b70:	ldr	x0, [sp, #104]
     b74:	lsr	x0, x0, #8
     b78:	and	x2, x0, #0xff
     b7c:	adrp	x0, 0 <grub_memcpy>
     b80:	add	x0, x0, #0x0
     b84:	ldr	x0, [x0]
     b88:	ldr	x0, [x0, x2, lsl #3]
     b8c:	eor	x1, x1, x0
     b90:	ldr	x0, [sp, #96]
     b94:	and	x2, x0, #0xff
     b98:	adrp	x0, 0 <grub_memcpy>
     b9c:	add	x0, x0, #0x0
     ba0:	ldr	x0, [x0]
     ba4:	ldr	x0, [x0, x2, lsl #3]
     ba8:	eor	x1, x1, x0
     bac:	ldr	x0, [sp, #152]
     bb0:	eor	x0, x1, x0
     bb4:	str	x0, [sp, #24]
     bb8:	ldr	x0, [sp, #96]
     bbc:	lsr	x1, x0, #56
     bc0:	adrp	x0, 0 <grub_memcpy>
     bc4:	add	x0, x0, #0x0
     bc8:	ldr	x0, [x0]
     bcc:	ldr	x1, [x0, x1, lsl #3]
     bd0:	ldr	x0, [sp, #88]
     bd4:	lsr	x0, x0, #48
     bd8:	and	x2, x0, #0xff
     bdc:	adrp	x0, 0 <grub_memcpy>
     be0:	add	x0, x0, #0x0
     be4:	ldr	x0, [x0]
     be8:	ldr	x0, [x0, x2, lsl #3]
     bec:	eor	x1, x1, x0
     bf0:	ldr	x0, [sp, #144]
     bf4:	lsr	x0, x0, #40
     bf8:	and	x2, x0, #0xff
     bfc:	adrp	x0, 0 <grub_memcpy>
     c00:	add	x0, x0, #0x0
     c04:	ldr	x0, [x0]
     c08:	ldr	x0, [x0, x2, lsl #3]
     c0c:	eor	x1, x1, x0
     c10:	ldr	x0, [sp, #136]
     c14:	lsr	x0, x0, #32
     c18:	and	x2, x0, #0xff
     c1c:	adrp	x0, 0 <grub_memcpy>
     c20:	add	x0, x0, #0x0
     c24:	ldr	x0, [x0]
     c28:	ldr	x0, [x0, x2, lsl #3]
     c2c:	eor	x1, x1, x0
     c30:	ldr	x0, [sp, #128]
     c34:	lsr	x0, x0, #24
     c38:	and	x2, x0, #0xff
     c3c:	adrp	x0, 0 <grub_memcpy>
     c40:	add	x0, x0, #0x0
     c44:	ldr	x0, [x0]
     c48:	ldr	x0, [x0, x2, lsl #3]
     c4c:	eor	x1, x1, x0
     c50:	ldr	x0, [sp, #120]
     c54:	lsr	x0, x0, #16
     c58:	and	x2, x0, #0xff
     c5c:	adrp	x0, 0 <grub_memcpy>
     c60:	add	x0, x0, #0x0
     c64:	ldr	x0, [x0]
     c68:	ldr	x0, [x0, x2, lsl #3]
     c6c:	eor	x1, x1, x0
     c70:	ldr	x0, [sp, #112]
     c74:	lsr	x0, x0, #8
     c78:	and	x2, x0, #0xff
     c7c:	adrp	x0, 0 <grub_memcpy>
     c80:	add	x0, x0, #0x0
     c84:	ldr	x0, [x0]
     c88:	ldr	x0, [x0, x2, lsl #3]
     c8c:	eor	x1, x1, x0
     c90:	ldr	x0, [sp, #104]
     c94:	and	x2, x0, #0xff
     c98:	adrp	x0, 0 <grub_memcpy>
     c9c:	add	x0, x0, #0x0
     ca0:	ldr	x0, [x0]
     ca4:	ldr	x0, [x0, x2, lsl #3]
     ca8:	eor	x1, x1, x0
     cac:	ldr	x0, [sp, #160]
     cb0:	eor	x0, x1, x0
     cb4:	str	x0, [sp, #32]
     cb8:	ldr	x0, [sp, #104]
     cbc:	lsr	x1, x0, #56
     cc0:	adrp	x0, 0 <grub_memcpy>
     cc4:	add	x0, x0, #0x0
     cc8:	ldr	x0, [x0]
     ccc:	ldr	x1, [x0, x1, lsl #3]
     cd0:	ldr	x0, [sp, #96]
     cd4:	lsr	x0, x0, #48
     cd8:	and	x2, x0, #0xff
     cdc:	adrp	x0, 0 <grub_memcpy>
     ce0:	add	x0, x0, #0x0
     ce4:	ldr	x0, [x0]
     ce8:	ldr	x0, [x0, x2, lsl #3]
     cec:	eor	x1, x1, x0
     cf0:	ldr	x0, [sp, #88]
     cf4:	lsr	x0, x0, #40
     cf8:	and	x2, x0, #0xff
     cfc:	adrp	x0, 0 <grub_memcpy>
     d00:	add	x0, x0, #0x0
     d04:	ldr	x0, [x0]
     d08:	ldr	x0, [x0, x2, lsl #3]
     d0c:	eor	x1, x1, x0
     d10:	ldr	x0, [sp, #144]
     d14:	lsr	x0, x0, #32
     d18:	and	x2, x0, #0xff
     d1c:	adrp	x0, 0 <grub_memcpy>
     d20:	add	x0, x0, #0x0
     d24:	ldr	x0, [x0]
     d28:	ldr	x0, [x0, x2, lsl #3]
     d2c:	eor	x1, x1, x0
     d30:	ldr	x0, [sp, #136]
     d34:	lsr	x0, x0, #24
     d38:	and	x2, x0, #0xff
     d3c:	adrp	x0, 0 <grub_memcpy>
     d40:	add	x0, x0, #0x0
     d44:	ldr	x0, [x0]
     d48:	ldr	x0, [x0, x2, lsl #3]
     d4c:	eor	x1, x1, x0
     d50:	ldr	x0, [sp, #128]
     d54:	lsr	x0, x0, #16
     d58:	and	x2, x0, #0xff
     d5c:	adrp	x0, 0 <grub_memcpy>
     d60:	add	x0, x0, #0x0
     d64:	ldr	x0, [x0]
     d68:	ldr	x0, [x0, x2, lsl #3]
     d6c:	eor	x1, x1, x0
     d70:	ldr	x0, [sp, #120]
     d74:	lsr	x0, x0, #8
     d78:	and	x2, x0, #0xff
     d7c:	adrp	x0, 0 <grub_memcpy>
     d80:	add	x0, x0, #0x0
     d84:	ldr	x0, [x0]
     d88:	ldr	x0, [x0, x2, lsl #3]
     d8c:	eor	x1, x1, x0
     d90:	ldr	x0, [sp, #112]
     d94:	and	x2, x0, #0xff
     d98:	adrp	x0, 0 <grub_memcpy>
     d9c:	add	x0, x0, #0x0
     da0:	ldr	x0, [x0]
     da4:	ldr	x0, [x0, x2, lsl #3]
     da8:	eor	x1, x1, x0
     dac:	ldr	x0, [sp, #168]
     db0:	eor	x0, x1, x0
     db4:	str	x0, [sp, #40]
     db8:	ldr	x0, [sp, #112]
     dbc:	lsr	x1, x0, #56
     dc0:	adrp	x0, 0 <grub_memcpy>
     dc4:	add	x0, x0, #0x0
     dc8:	ldr	x0, [x0]
     dcc:	ldr	x1, [x0, x1, lsl #3]
     dd0:	ldr	x0, [sp, #104]
     dd4:	lsr	x0, x0, #48
     dd8:	and	x2, x0, #0xff
     ddc:	adrp	x0, 0 <grub_memcpy>
     de0:	add	x0, x0, #0x0
     de4:	ldr	x0, [x0]
     de8:	ldr	x0, [x0, x2, lsl #3]
     dec:	eor	x1, x1, x0
     df0:	ldr	x0, [sp, #96]
     df4:	lsr	x0, x0, #40
     df8:	and	x2, x0, #0xff
     dfc:	adrp	x0, 0 <grub_memcpy>
     e00:	add	x0, x0, #0x0
     e04:	ldr	x0, [x0]
     e08:	ldr	x0, [x0, x2, lsl #3]
     e0c:	eor	x1, x1, x0
     e10:	ldr	x0, [sp, #88]
     e14:	lsr	x0, x0, #32
     e18:	and	x2, x0, #0xff
     e1c:	adrp	x0, 0 <grub_memcpy>
     e20:	add	x0, x0, #0x0
     e24:	ldr	x0, [x0]
     e28:	ldr	x0, [x0, x2, lsl #3]
     e2c:	eor	x1, x1, x0
     e30:	ldr	x0, [sp, #144]
     e34:	lsr	x0, x0, #24
     e38:	and	x2, x0, #0xff
     e3c:	adrp	x0, 0 <grub_memcpy>
     e40:	add	x0, x0, #0x0
     e44:	ldr	x0, [x0]
     e48:	ldr	x0, [x0, x2, lsl #3]
     e4c:	eor	x1, x1, x0
     e50:	ldr	x0, [sp, #136]
     e54:	lsr	x0, x0, #16
     e58:	and	x2, x0, #0xff
     e5c:	adrp	x0, 0 <grub_memcpy>
     e60:	add	x0, x0, #0x0
     e64:	ldr	x0, [x0]
     e68:	ldr	x0, [x0, x2, lsl #3]
     e6c:	eor	x1, x1, x0
     e70:	ldr	x0, [sp, #128]
     e74:	lsr	x0, x0, #8
     e78:	and	x2, x0, #0xff
     e7c:	adrp	x0, 0 <grub_memcpy>
     e80:	add	x0, x0, #0x0
     e84:	ldr	x0, [x0]
     e88:	ldr	x0, [x0, x2, lsl #3]
     e8c:	eor	x1, x1, x0
     e90:	ldr	x0, [sp, #120]
     e94:	and	x2, x0, #0xff
     e98:	adrp	x0, 0 <grub_memcpy>
     e9c:	add	x0, x0, #0x0
     ea0:	ldr	x0, [x0]
     ea4:	ldr	x0, [x0, x2, lsl #3]
     ea8:	eor	x1, x1, x0
     eac:	ldr	x0, [sp, #176]
     eb0:	eor	x0, x1, x0
     eb4:	str	x0, [sp, #48]
     eb8:	ldr	x0, [sp, #120]
     ebc:	lsr	x1, x0, #56
     ec0:	adrp	x0, 0 <grub_memcpy>
     ec4:	add	x0, x0, #0x0
     ec8:	ldr	x0, [x0]
     ecc:	ldr	x1, [x0, x1, lsl #3]
     ed0:	ldr	x0, [sp, #112]
     ed4:	lsr	x0, x0, #48
     ed8:	and	x2, x0, #0xff
     edc:	adrp	x0, 0 <grub_memcpy>
     ee0:	add	x0, x0, #0x0
     ee4:	ldr	x0, [x0]
     ee8:	ldr	x0, [x0, x2, lsl #3]
     eec:	eor	x1, x1, x0
     ef0:	ldr	x0, [sp, #104]
     ef4:	lsr	x0, x0, #40
     ef8:	and	x2, x0, #0xff
     efc:	adrp	x0, 0 <grub_memcpy>
     f00:	add	x0, x0, #0x0
     f04:	ldr	x0, [x0]
     f08:	ldr	x0, [x0, x2, lsl #3]
     f0c:	eor	x1, x1, x0
     f10:	ldr	x0, [sp, #96]
     f14:	lsr	x0, x0, #32
     f18:	and	x2, x0, #0xff
     f1c:	adrp	x0, 0 <grub_memcpy>
     f20:	add	x0, x0, #0x0
     f24:	ldr	x0, [x0]
     f28:	ldr	x0, [x0, x2, lsl #3]
     f2c:	eor	x1, x1, x0
     f30:	ldr	x0, [sp, #88]
     f34:	lsr	x0, x0, #24
     f38:	and	x2, x0, #0xff
     f3c:	adrp	x0, 0 <grub_memcpy>
     f40:	add	x0, x0, #0x0
     f44:	ldr	x0, [x0]
     f48:	ldr	x0, [x0, x2, lsl #3]
     f4c:	eor	x1, x1, x0
     f50:	ldr	x0, [sp, #144]
     f54:	lsr	x0, x0, #16
     f58:	and	x2, x0, #0xff
     f5c:	adrp	x0, 0 <grub_memcpy>
     f60:	add	x0, x0, #0x0
     f64:	ldr	x0, [x0]
     f68:	ldr	x0, [x0, x2, lsl #3]
     f6c:	eor	x1, x1, x0
     f70:	ldr	x0, [sp, #136]
     f74:	lsr	x0, x0, #8
     f78:	and	x2, x0, #0xff
     f7c:	adrp	x0, 0 <grub_memcpy>
     f80:	add	x0, x0, #0x0
     f84:	ldr	x0, [x0]
     f88:	ldr	x0, [x0, x2, lsl #3]
     f8c:	eor	x1, x1, x0
     f90:	ldr	x0, [sp, #128]
     f94:	and	x2, x0, #0xff
     f98:	adrp	x0, 0 <grub_memcpy>
     f9c:	add	x0, x0, #0x0
     fa0:	ldr	x0, [x0]
     fa4:	ldr	x0, [x0, x2, lsl #3]
     fa8:	eor	x1, x1, x0
     fac:	ldr	x0, [sp, #184]
     fb0:	eor	x0, x1, x0
     fb4:	str	x0, [sp, #56]
     fb8:	ldr	x0, [sp, #128]
     fbc:	lsr	x1, x0, #56
     fc0:	adrp	x0, 0 <grub_memcpy>
     fc4:	add	x0, x0, #0x0
     fc8:	ldr	x0, [x0]
     fcc:	ldr	x1, [x0, x1, lsl #3]
     fd0:	ldr	x0, [sp, #120]
     fd4:	lsr	x0, x0, #48
     fd8:	and	x2, x0, #0xff
     fdc:	adrp	x0, 0 <grub_memcpy>
     fe0:	add	x0, x0, #0x0
     fe4:	ldr	x0, [x0]
     fe8:	ldr	x0, [x0, x2, lsl #3]
     fec:	eor	x1, x1, x0
     ff0:	ldr	x0, [sp, #112]
     ff4:	lsr	x0, x0, #40
     ff8:	and	x2, x0, #0xff
     ffc:	adrp	x0, 0 <grub_memcpy>
    1000:	add	x0, x0, #0x0
    1004:	ldr	x0, [x0]
    1008:	ldr	x0, [x0, x2, lsl #3]
    100c:	eor	x1, x1, x0
    1010:	ldr	x0, [sp, #104]
    1014:	lsr	x0, x0, #32
    1018:	and	x2, x0, #0xff
    101c:	adrp	x0, 0 <grub_memcpy>
    1020:	add	x0, x0, #0x0
    1024:	ldr	x0, [x0]
    1028:	ldr	x0, [x0, x2, lsl #3]
    102c:	eor	x1, x1, x0
    1030:	ldr	x0, [sp, #96]
    1034:	lsr	x0, x0, #24
    1038:	and	x2, x0, #0xff
    103c:	adrp	x0, 0 <grub_memcpy>
    1040:	add	x0, x0, #0x0
    1044:	ldr	x0, [x0]
    1048:	ldr	x0, [x0, x2, lsl #3]
    104c:	eor	x1, x1, x0
    1050:	ldr	x0, [sp, #88]
    1054:	lsr	x0, x0, #16
    1058:	and	x2, x0, #0xff
    105c:	adrp	x0, 0 <grub_memcpy>
    1060:	add	x0, x0, #0x0
    1064:	ldr	x0, [x0]
    1068:	ldr	x0, [x0, x2, lsl #3]
    106c:	eor	x1, x1, x0
    1070:	ldr	x0, [sp, #144]
    1074:	lsr	x0, x0, #8
    1078:	and	x2, x0, #0xff
    107c:	adrp	x0, 0 <grub_memcpy>
    1080:	add	x0, x0, #0x0
    1084:	ldr	x0, [x0]
    1088:	ldr	x0, [x0, x2, lsl #3]
    108c:	eor	x1, x1, x0
    1090:	ldr	x0, [sp, #136]
    1094:	and	x2, x0, #0xff
    1098:	adrp	x0, 0 <grub_memcpy>
    109c:	add	x0, x0, #0x0
    10a0:	ldr	x0, [x0]
    10a4:	ldr	x0, [x0, x2, lsl #3]
    10a8:	eor	x1, x1, x0
    10ac:	ldr	x0, [sp, #192]
    10b0:	eor	x0, x1, x0
    10b4:	str	x0, [sp, #64]
    10b8:	ldr	x0, [sp, #136]
    10bc:	lsr	x1, x0, #56
    10c0:	adrp	x0, 0 <grub_memcpy>
    10c4:	add	x0, x0, #0x0
    10c8:	ldr	x0, [x0]
    10cc:	ldr	x1, [x0, x1, lsl #3]
    10d0:	ldr	x0, [sp, #128]
    10d4:	lsr	x0, x0, #48
    10d8:	and	x2, x0, #0xff
    10dc:	adrp	x0, 0 <grub_memcpy>
    10e0:	add	x0, x0, #0x0
    10e4:	ldr	x0, [x0]
    10e8:	ldr	x0, [x0, x2, lsl #3]
    10ec:	eor	x1, x1, x0
    10f0:	ldr	x0, [sp, #120]
    10f4:	lsr	x0, x0, #40
    10f8:	and	x2, x0, #0xff
    10fc:	adrp	x0, 0 <grub_memcpy>
    1100:	add	x0, x0, #0x0
    1104:	ldr	x0, [x0]
    1108:	ldr	x0, [x0, x2, lsl #3]
    110c:	eor	x1, x1, x0
    1110:	ldr	x0, [sp, #112]
    1114:	lsr	x0, x0, #32
    1118:	and	x2, x0, #0xff
    111c:	adrp	x0, 0 <grub_memcpy>
    1120:	add	x0, x0, #0x0
    1124:	ldr	x0, [x0]
    1128:	ldr	x0, [x0, x2, lsl #3]
    112c:	eor	x1, x1, x0
    1130:	ldr	x0, [sp, #104]
    1134:	lsr	x0, x0, #24
    1138:	and	x2, x0, #0xff
    113c:	adrp	x0, 0 <grub_memcpy>
    1140:	add	x0, x0, #0x0
    1144:	ldr	x0, [x0]
    1148:	ldr	x0, [x0, x2, lsl #3]
    114c:	eor	x1, x1, x0
    1150:	ldr	x0, [sp, #96]
    1154:	lsr	x0, x0, #16
    1158:	and	x2, x0, #0xff
    115c:	adrp	x0, 0 <grub_memcpy>
    1160:	add	x0, x0, #0x0
    1164:	ldr	x0, [x0]
    1168:	ldr	x0, [x0, x2, lsl #3]
    116c:	eor	x1, x1, x0
    1170:	ldr	x0, [sp, #88]
    1174:	lsr	x0, x0, #8
    1178:	and	x2, x0, #0xff
    117c:	adrp	x0, 0 <grub_memcpy>
    1180:	add	x0, x0, #0x0
    1184:	ldr	x0, [x0]
    1188:	ldr	x0, [x0, x2, lsl #3]
    118c:	eor	x1, x1, x0
    1190:	ldr	x0, [sp, #144]
    1194:	and	x2, x0, #0xff
    1198:	adrp	x0, 0 <grub_memcpy>
    119c:	add	x0, x0, #0x0
    11a0:	ldr	x0, [x0]
    11a4:	ldr	x0, [x0, x2, lsl #3]
    11a8:	eor	x1, x1, x0
    11ac:	ldr	x0, [sp, #200]
    11b0:	eor	x0, x1, x0
    11b4:	str	x0, [sp, #72]
    11b8:	ldr	x0, [sp, #144]
    11bc:	lsr	x1, x0, #56
    11c0:	adrp	x0, 0 <grub_memcpy>
    11c4:	add	x0, x0, #0x0
    11c8:	ldr	x0, [x0]
    11cc:	ldr	x1, [x0, x1, lsl #3]
    11d0:	ldr	x0, [sp, #136]
    11d4:	lsr	x0, x0, #48
    11d8:	and	x2, x0, #0xff
    11dc:	adrp	x0, 0 <grub_memcpy>
    11e0:	add	x0, x0, #0x0
    11e4:	ldr	x0, [x0]
    11e8:	ldr	x0, [x0, x2, lsl #3]
    11ec:	eor	x1, x1, x0
    11f0:	ldr	x0, [sp, #128]
    11f4:	lsr	x0, x0, #40
    11f8:	and	x2, x0, #0xff
    11fc:	adrp	x0, 0 <grub_memcpy>
    1200:	add	x0, x0, #0x0
    1204:	ldr	x0, [x0]
    1208:	ldr	x0, [x0, x2, lsl #3]
    120c:	eor	x1, x1, x0
    1210:	ldr	x0, [sp, #120]
    1214:	lsr	x0, x0, #32
    1218:	and	x2, x0, #0xff
    121c:	adrp	x0, 0 <grub_memcpy>
    1220:	add	x0, x0, #0x0
    1224:	ldr	x0, [x0]
    1228:	ldr	x0, [x0, x2, lsl #3]
    122c:	eor	x1, x1, x0
    1230:	ldr	x0, [sp, #112]
    1234:	lsr	x0, x0, #24
    1238:	and	x2, x0, #0xff
    123c:	adrp	x0, 0 <grub_memcpy>
    1240:	add	x0, x0, #0x0
    1244:	ldr	x0, [x0]
    1248:	ldr	x0, [x0, x2, lsl #3]
    124c:	eor	x1, x1, x0
    1250:	ldr	x0, [sp, #104]
    1254:	lsr	x0, x0, #16
    1258:	and	x2, x0, #0xff
    125c:	adrp	x0, 0 <grub_memcpy>
    1260:	add	x0, x0, #0x0
    1264:	ldr	x0, [x0]
    1268:	ldr	x0, [x0, x2, lsl #3]
    126c:	eor	x1, x1, x0
    1270:	ldr	x0, [sp, #96]
    1274:	lsr	x0, x0, #8
    1278:	and	x2, x0, #0xff
    127c:	adrp	x0, 0 <grub_memcpy>
    1280:	add	x0, x0, #0x0
    1284:	ldr	x0, [x0]
    1288:	ldr	x0, [x0, x2, lsl #3]
    128c:	eor	x1, x1, x0
    1290:	ldr	x0, [sp, #88]
    1294:	and	x2, x0, #0xff
    1298:	adrp	x0, 0 <grub_memcpy>
    129c:	add	x0, x0, #0x0
    12a0:	ldr	x0, [x0]
    12a4:	ldr	x0, [x0, x2, lsl #3]
    12a8:	eor	x1, x1, x0
    12ac:	ldr	x0, [sp, #208]
    12b0:	eor	x0, x1, x0
    12b4:	str	x0, [sp, #80]
    12b8:	str	wzr, [sp, #280]
    12bc:	b	12ec <whirlpool_transform+0x1290>
    12c0:	ldr	w0, [sp, #280]
    12c4:	lsl	x0, x0, #3
    12c8:	add	x1, sp, #0x18
    12cc:	ldr	x2, [x1, x0]
    12d0:	ldr	w0, [sp, #280]
    12d4:	lsl	x0, x0, #3
    12d8:	add	x1, sp, #0x58
    12dc:	str	x2, [x1, x0]
    12e0:	ldr	w0, [sp, #280]
    12e4:	add	w0, w0, #0x1
    12e8:	str	w0, [sp, #280]
    12ec:	ldr	w0, [sp, #280]
    12f0:	cmp	w0, #0x7
    12f4:	b.ls	12c0 <whirlpool_transform+0x1264>  // b.plast
    12f8:	ldr	w0, [sp, #284]
    12fc:	add	w0, w0, #0x1
    1300:	str	w0, [sp, #284]
    1304:	ldr	w0, [sp, #284]
    1308:	cmp	w0, #0x9
    130c:	b.ls	2a0 <whirlpool_transform+0x244>  // b.plast
    1310:	str	wzr, [sp, #280]
    1314:	b	1350 <whirlpool_transform+0x12f4>
    1318:	ldr	x0, [sp, #8]
    131c:	ldr	w1, [sp, #280]
    1320:	ldr	x1, [x0, x1, lsl #3]
    1324:	ldr	w0, [sp, #280]
    1328:	lsl	x0, x0, #3
    132c:	add	x2, sp, #0xd8
    1330:	ldr	x0, [x2, x0]
    1334:	eor	x2, x1, x0
    1338:	ldr	x0, [sp, #8]
    133c:	ldr	w1, [sp, #280]
    1340:	str	x2, [x0, x1, lsl #3]
    1344:	ldr	w0, [sp, #280]
    1348:	add	w0, w0, #0x1
    134c:	str	w0, [sp, #280]
    1350:	ldr	w0, [sp, #280]
    1354:	cmp	w0, #0x7
    1358:	b.ls	1318 <whirlpool_transform+0x12bc>  // b.plast
    135c:	str	wzr, [sp, #280]
    1360:	b	139c <whirlpool_transform+0x1340>
    1364:	ldr	x0, [sp, #8]
    1368:	ldr	w1, [sp, #280]
    136c:	ldr	x1, [x0, x1, lsl #3]
    1370:	ldr	w0, [sp, #280]
    1374:	lsl	x0, x0, #3
    1378:	add	x2, sp, #0x58
    137c:	ldr	x0, [x2, x0]
    1380:	eor	x2, x1, x0
    1384:	ldr	x0, [sp, #8]
    1388:	ldr	w1, [sp, #280]
    138c:	str	x2, [x0, x1, lsl #3]
    1390:	ldr	w0, [sp, #280]
    1394:	add	w0, w0, #0x1
    1398:	str	w0, [sp, #280]
    139c:	ldr	w0, [sp, #280]
    13a0:	cmp	w0, #0x7
    13a4:	b.ls	1364 <whirlpool_transform+0x1308>  // b.plast
    13a8:	nop
    13ac:	nop
    13b0:	add	sp, sp, #0x120
    13b4:	ret
	...

0000000000001400 <whirlpool_add>:
    1400:	stp	x29, x30, [sp, #-80]!
    1404:	mov	x29, sp
    1408:	str	x0, [sp, #40]
    140c:	str	x1, [sp, #32]
    1410:	str	x2, [sp, #24]
    1414:	ldr	x0, [sp, #32]
    1418:	str	x0, [sp, #72]
    141c:	ldr	x0, [sp, #24]
    1420:	str	x0, [sp, #64]
    1424:	ldr	x0, [sp, #40]
    1428:	ldr	x0, [x0, #128]
    142c:	cmp	x0, #0x40
    1430:	b.ne	1450 <whirlpool_add+0x50>  // b.any
    1434:	ldr	x0, [sp, #40]
    1438:	add	x0, x0, #0x40
    143c:	mov	x1, x0
    1440:	ldr	x0, [sp, #40]
    1444:	bl	5c <whirlpool_transform>
    1448:	ldr	x0, [sp, #40]
    144c:	str	xzr, [x0, #128]
    1450:	ldr	x0, [sp, #72]
    1454:	cmp	x0, #0x0
    1458:	b.eq	1694 <whirlpool_add+0x294>  // b.none
    145c:	ldr	x0, [sp, #40]
    1460:	ldr	x0, [x0, #128]
    1464:	cmp	x0, #0x0
    1468:	b.eq	1518 <whirlpool_add+0x118>  // b.none
    146c:	b	14b0 <whirlpool_add+0xb0>
    1470:	ldr	x1, [sp, #72]
    1474:	add	x0, x1, #0x1
    1478:	str	x0, [sp, #72]
    147c:	ldr	x0, [sp, #40]
    1480:	ldr	x0, [x0, #128]
    1484:	add	x3, x0, #0x1
    1488:	ldr	x2, [sp, #40]
    148c:	str	x3, [x2, #128]
    1490:	ldrb	w2, [x1]
    1494:	ldr	x1, [sp, #40]
    1498:	add	x0, x1, x0
    149c:	mov	w1, w2
    14a0:	strb	w1, [x0, #64]
    14a4:	ldr	x0, [sp, #24]
    14a8:	sub	x0, x0, #0x1
    14ac:	str	x0, [sp, #24]
    14b0:	ldr	x0, [sp, #24]
    14b4:	cmp	x0, #0x0
    14b8:	b.eq	14cc <whirlpool_add+0xcc>  // b.none
    14bc:	ldr	x0, [sp, #40]
    14c0:	ldr	x0, [x0, #128]
    14c4:	cmp	x0, #0x3f
    14c8:	b.ls	1470 <whirlpool_add+0x70>  // b.plast
    14cc:	mov	x2, #0x0                   	// #0
    14d0:	mov	x1, #0x0                   	// #0
    14d4:	ldr	x0, [sp, #40]
    14d8:	bl	1400 <whirlpool_add>
    14dc:	ldr	x0, [sp, #24]
    14e0:	cmp	x0, #0x0
    14e4:	b.eq	169c <whirlpool_add+0x29c>  // b.none
    14e8:	b	1518 <whirlpool_add+0x118>
    14ec:	ldr	x1, [sp, #72]
    14f0:	ldr	x0, [sp, #40]
    14f4:	bl	5c <whirlpool_transform>
    14f8:	ldr	x0, [sp, #40]
    14fc:	str	xzr, [x0, #128]
    1500:	ldr	x0, [sp, #24]
    1504:	sub	x0, x0, #0x40
    1508:	str	x0, [sp, #24]
    150c:	ldr	x0, [sp, #72]
    1510:	add	x0, x0, #0x40
    1514:	str	x0, [sp, #72]
    1518:	ldr	x0, [sp, #24]
    151c:	cmp	x0, #0x3f
    1520:	b.hi	14ec <whirlpool_add+0xec>  // b.pmore
    1524:	b	1568 <whirlpool_add+0x168>
    1528:	ldr	x1, [sp, #72]
    152c:	add	x0, x1, #0x1
    1530:	str	x0, [sp, #72]
    1534:	ldr	x0, [sp, #40]
    1538:	ldr	x0, [x0, #128]
    153c:	add	x3, x0, #0x1
    1540:	ldr	x2, [sp, #40]
    1544:	str	x3, [x2, #128]
    1548:	ldrb	w2, [x1]
    154c:	ldr	x1, [sp, #40]
    1550:	add	x0, x1, x0
    1554:	mov	w1, w2
    1558:	strb	w1, [x0, #64]
    155c:	ldr	x0, [sp, #24]
    1560:	sub	x0, x0, #0x1
    1564:	str	x0, [sp, #24]
    1568:	ldr	x0, [sp, #24]
    156c:	cmp	x0, #0x0
    1570:	b.eq	1584 <whirlpool_add+0x184>  // b.none
    1574:	ldr	x0, [sp, #40]
    1578:	ldr	x0, [x0, #128]
    157c:	cmp	x0, #0x3f
    1580:	b.ls	1528 <whirlpool_add+0x128>  // b.plast
    1584:	str	wzr, [sp, #60]
    1588:	ldr	x0, [sp, #64]
    158c:	lsl	x0, x0, #3
    1590:	str	x0, [sp, #64]
    1594:	mov	w0, #0x1                   	// #1
    1598:	str	w0, [sp, #56]
    159c:	b	163c <whirlpool_add+0x23c>
    15a0:	ldr	x0, [sp, #64]
    15a4:	cmp	x0, #0x0
    15a8:	b.ne	15b8 <whirlpool_add+0x1b8>  // b.any
    15ac:	ldr	w0, [sp, #60]
    15b0:	cmp	w0, #0x0
    15b4:	b.eq	164c <whirlpool_add+0x24c>  // b.none
    15b8:	mov	w1, #0x20                  	// #32
    15bc:	ldr	w0, [sp, #56]
    15c0:	sub	w0, w1, w0
    15c4:	ldr	x1, [sp, #40]
    15c8:	mov	w0, w0
    15cc:	add	x0, x1, x0
    15d0:	ldrb	w0, [x0, #136]
    15d4:	mov	w1, w0
    15d8:	ldr	x0, [sp, #64]
    15dc:	and	w0, w0, #0xff
    15e0:	add	w0, w1, w0
    15e4:	ldr	w1, [sp, #60]
    15e8:	add	w0, w1, w0
    15ec:	str	w0, [sp, #60]
    15f0:	mov	w1, #0x20                  	// #32
    15f4:	ldr	w0, [sp, #56]
    15f8:	sub	w0, w1, w0
    15fc:	ldr	w1, [sp, #60]
    1600:	and	w2, w1, #0xff
    1604:	ldr	x1, [sp, #40]
    1608:	mov	w0, w0
    160c:	add	x0, x1, x0
    1610:	mov	w1, w2
    1614:	strb	w1, [x0, #136]
    1618:	ldr	x0, [sp, #64]
    161c:	lsr	x0, x0, #8
    1620:	str	x0, [sp, #64]
    1624:	ldr	w0, [sp, #60]
    1628:	lsr	w0, w0, #8
    162c:	str	w0, [sp, #60]
    1630:	ldr	w0, [sp, #56]
    1634:	add	w0, w0, #0x1
    1638:	str	w0, [sp, #56]
    163c:	ldr	w0, [sp, #56]
    1640:	cmp	w0, #0x20
    1644:	b.ls	15a0 <whirlpool_add+0x1a0>  // b.plast
    1648:	b	1650 <whirlpool_add+0x250>
    164c:	nop
    1650:	ldr	x0, [sp, #64]
    1654:	cmp	x0, #0x0
    1658:	b.ne	1668 <whirlpool_add+0x268>  // b.any
    165c:	ldr	w0, [sp, #60]
    1660:	cmp	w0, #0x0
    1664:	b.eq	16a0 <whirlpool_add+0x2a0>  // b.none
    1668:	adrp	x0, 0 <grub_memcpy>
    166c:	add	x0, x0, #0x0
    1670:	ldr	x3, [x0]
    1674:	mov	w2, #0x547                 	// #1351
    1678:	adrp	x0, 0 <grub_memcpy>
    167c:	add	x0, x0, #0x0
    1680:	ldr	x1, [x0]
    1684:	adrp	x0, 0 <grub_memcpy>
    1688:	add	x0, x0, #0x0
    168c:	ldr	x0, [x0]
    1690:	bl	0 <_gcry_assert_failed>
    1694:	nop
    1698:	b	16a0 <whirlpool_add+0x2a0>
    169c:	nop
    16a0:	ldp	x29, x30, [sp], #80
    16a4:	ret
	...

00000000000016c0 <whirlpool_write>:
    16c0:	stp	x29, x30, [sp, #-64]!
    16c4:	mov	x29, sp
    16c8:	str	x0, [sp, #40]
    16cc:	str	x1, [sp, #32]
    16d0:	str	x2, [sp, #24]
    16d4:	ldr	x0, [sp, #40]
    16d8:	str	x0, [sp, #56]
    16dc:	ldr	x2, [sp, #24]
    16e0:	ldr	x1, [sp, #32]
    16e4:	ldr	x0, [sp, #56]
    16e8:	bl	1400 <whirlpool_add>
    16ec:	nop
    16f0:	ldp	x29, x30, [sp], #64
    16f4:	ret

00000000000016f8 <whirlpool_final>:
    16f8:	stp	x29, x30, [sp, #-48]!
    16fc:	mov	x29, sp
    1700:	str	x0, [sp, #24]
    1704:	ldr	x0, [sp, #24]
    1708:	str	x0, [sp, #32]
    170c:	mov	x2, #0x0                   	// #0
    1710:	mov	x1, #0x0                   	// #0
    1714:	ldr	x0, [sp, #32]
    1718:	bl	1400 <whirlpool_add>
    171c:	ldr	x0, [sp, #32]
    1720:	ldr	x0, [x0, #128]
    1724:	add	x2, x0, #0x1
    1728:	ldr	x1, [sp, #32]
    172c:	str	x2, [x1, #128]
    1730:	ldr	x1, [sp, #32]
    1734:	add	x0, x1, x0
    1738:	mov	w1, #0xffffff80            	// #-128
    173c:	strb	w1, [x0, #64]
    1740:	ldr	x0, [sp, #32]
    1744:	ldr	x0, [x0, #128]
    1748:	cmp	x0, #0x20
    174c:	b.ls	17b8 <whirlpool_final+0xc0>  // b.plast
    1750:	b	1774 <whirlpool_final+0x7c>
    1754:	ldr	x0, [sp, #32]
    1758:	ldr	x0, [x0, #128]
    175c:	add	x2, x0, #0x1
    1760:	ldr	x1, [sp, #32]
    1764:	str	x2, [x1, #128]
    1768:	ldr	x1, [sp, #32]
    176c:	add	x0, x1, x0
    1770:	strb	wzr, [x0, #64]
    1774:	ldr	x0, [sp, #32]
    1778:	ldr	x0, [x0, #128]
    177c:	cmp	x0, #0x3f
    1780:	b.ls	1754 <whirlpool_final+0x5c>  // b.plast
    1784:	mov	x2, #0x0                   	// #0
    1788:	mov	x1, #0x0                   	// #0
    178c:	ldr	x0, [sp, #32]
    1790:	bl	1400 <whirlpool_add>
    1794:	b	17b8 <whirlpool_final+0xc0>
    1798:	ldr	x0, [sp, #32]
    179c:	ldr	x0, [x0, #128]
    17a0:	add	x2, x0, #0x1
    17a4:	ldr	x1, [sp, #32]
    17a8:	str	x2, [x1, #128]
    17ac:	ldr	x1, [sp, #32]
    17b0:	add	x0, x1, x0
    17b4:	strb	wzr, [x0, #64]
    17b8:	ldr	x0, [sp, #32]
    17bc:	ldr	x0, [x0, #128]
    17c0:	cmp	x0, #0x1f
    17c4:	b.ls	1798 <whirlpool_final+0xa0>  // b.plast
    17c8:	ldr	x0, [sp, #32]
    17cc:	add	x1, x0, #0x40
    17d0:	ldr	x0, [sp, #32]
    17d4:	ldr	x0, [x0, #128]
    17d8:	add	x3, x1, x0
    17dc:	ldr	x0, [sp, #32]
    17e0:	add	x0, x0, #0x88
    17e4:	mov	x2, #0x20                  	// #32
    17e8:	mov	x1, x0
    17ec:	mov	x0, x3
    17f0:	bl	0 <grub_memcpy>
    17f4:	ldr	x0, [sp, #32]
    17f8:	ldr	x0, [x0, #128]
    17fc:	add	x1, x0, #0x20
    1800:	ldr	x0, [sp, #32]
    1804:	str	x1, [x0, #128]
    1808:	mov	x2, #0x0                   	// #0
    180c:	mov	x1, #0x0                   	// #0
    1810:	ldr	x0, [sp, #32]
    1814:	bl	1400 <whirlpool_add>
    1818:	str	wzr, [sp, #44]
    181c:	b	19c4 <whirlpool_final+0x2cc>
    1820:	ldr	x0, [sp, #32]
    1824:	ldr	w1, [sp, #44]
    1828:	ldr	x0, [x0, x1, lsl #3]
    182c:	lsr	x1, x0, #56
    1830:	ldr	w0, [sp, #44]
    1834:	lsl	w0, w0, #3
    1838:	and	w2, w1, #0xff
    183c:	ldr	x1, [sp, #32]
    1840:	mov	w0, w0
    1844:	add	x0, x1, x0
    1848:	mov	w1, w2
    184c:	strb	w1, [x0, #64]
    1850:	ldr	x0, [sp, #32]
    1854:	ldr	w1, [sp, #44]
    1858:	ldr	x0, [x0, x1, lsl #3]
    185c:	lsr	x1, x0, #48
    1860:	ldr	w0, [sp, #44]
    1864:	lsl	w0, w0, #3
    1868:	add	w0, w0, #0x1
    186c:	and	w2, w1, #0xff
    1870:	ldr	x1, [sp, #32]
    1874:	mov	w0, w0
    1878:	add	x0, x1, x0
    187c:	mov	w1, w2
    1880:	strb	w1, [x0, #64]
    1884:	ldr	x0, [sp, #32]
    1888:	ldr	w1, [sp, #44]
    188c:	ldr	x0, [x0, x1, lsl #3]
    1890:	lsr	x1, x0, #40
    1894:	ldr	w0, [sp, #44]
    1898:	lsl	w0, w0, #3
    189c:	add	w0, w0, #0x2
    18a0:	and	w2, w1, #0xff
    18a4:	ldr	x1, [sp, #32]
    18a8:	mov	w0, w0
    18ac:	add	x0, x1, x0
    18b0:	mov	w1, w2
    18b4:	strb	w1, [x0, #64]
    18b8:	ldr	x0, [sp, #32]
    18bc:	ldr	w1, [sp, #44]
    18c0:	ldr	x0, [x0, x1, lsl #3]
    18c4:	lsr	x1, x0, #32
    18c8:	ldr	w0, [sp, #44]
    18cc:	lsl	w0, w0, #3
    18d0:	add	w0, w0, #0x3
    18d4:	and	w2, w1, #0xff
    18d8:	ldr	x1, [sp, #32]
    18dc:	mov	w0, w0
    18e0:	add	x0, x1, x0
    18e4:	mov	w1, w2
    18e8:	strb	w1, [x0, #64]
    18ec:	ldr	x0, [sp, #32]
    18f0:	ldr	w1, [sp, #44]
    18f4:	ldr	x0, [x0, x1, lsl #3]
    18f8:	lsr	x1, x0, #24
    18fc:	ldr	w0, [sp, #44]
    1900:	lsl	w0, w0, #3
    1904:	add	w0, w0, #0x4
    1908:	and	w2, w1, #0xff
    190c:	ldr	x1, [sp, #32]
    1910:	mov	w0, w0
    1914:	add	x0, x1, x0
    1918:	mov	w1, w2
    191c:	strb	w1, [x0, #64]
    1920:	ldr	x0, [sp, #32]
    1924:	ldr	w1, [sp, #44]
    1928:	ldr	x0, [x0, x1, lsl #3]
    192c:	lsr	x1, x0, #16
    1930:	ldr	w0, [sp, #44]
    1934:	lsl	w0, w0, #3
    1938:	add	w0, w0, #0x5
    193c:	and	w2, w1, #0xff
    1940:	ldr	x1, [sp, #32]
    1944:	mov	w0, w0
    1948:	add	x0, x1, x0
    194c:	mov	w1, w2
    1950:	strb	w1, [x0, #64]
    1954:	ldr	x0, [sp, #32]
    1958:	ldr	w1, [sp, #44]
    195c:	ldr	x0, [x0, x1, lsl #3]
    1960:	lsr	x1, x0, #8
    1964:	ldr	w0, [sp, #44]
    1968:	lsl	w0, w0, #3
    196c:	add	w0, w0, #0x6
    1970:	and	w2, w1, #0xff
    1974:	ldr	x1, [sp, #32]
    1978:	mov	w0, w0
    197c:	add	x0, x1, x0
    1980:	mov	w1, w2
    1984:	strb	w1, [x0, #64]
    1988:	ldr	x0, [sp, #32]
    198c:	ldr	w1, [sp, #44]
    1990:	ldr	x1, [x0, x1, lsl #3]
    1994:	ldr	w0, [sp, #44]
    1998:	lsl	w0, w0, #3
    199c:	add	w0, w0, #0x7
    19a0:	and	w2, w1, #0xff
    19a4:	ldr	x1, [sp, #32]
    19a8:	mov	w0, w0
    19ac:	add	x0, x1, x0
    19b0:	mov	w1, w2
    19b4:	strb	w1, [x0, #64]
    19b8:	ldr	w0, [sp, #44]
    19bc:	add	w0, w0, #0x1
    19c0:	str	w0, [sp, #44]
    19c4:	ldr	w0, [sp, #44]
    19c8:	cmp	w0, #0x7
    19cc:	b.ls	1820 <whirlpool_final+0x128>  // b.plast
    19d0:	nop
    19d4:	nop
    19d8:	ldp	x29, x30, [sp], #48
    19dc:	ret

00000000000019e0 <whirlpool_read>:
    19e0:	sub	sp, sp, #0x20
    19e4:	str	x0, [sp, #8]
    19e8:	ldr	x0, [sp, #8]
    19ec:	str	x0, [sp, #24]
    19f0:	ldr	x0, [sp, #24]
    19f4:	add	x0, x0, #0x40
    19f8:	add	sp, sp, #0x20
    19fc:	ret

0000000000001a00 <grub_mod_init>:
    1a00:	stp	x29, x30, [sp, #-32]!
    1a04:	mov	x29, sp
    1a08:	str	x0, [sp, #24]
    1a0c:	adrp	x0, 0 <grub_memcpy>
    1a10:	add	x0, x0, #0x0
    1a14:	ldr	x0, [x0]
    1a18:	bl	0 <grub_md_register>
    1a1c:	nop
    1a20:	ldp	x29, x30, [sp], #32
    1a24:	ret
	...

0000000000001a30 <grub_mod_fini>:
    1a30:	stp	x29, x30, [sp, #-16]!
    1a34:	mov	x29, sp
    1a38:	adrp	x0, 0 <grub_memcpy>
    1a3c:	add	x0, x0, #0x0
    1a40:	ldr	x0, [x0]
    1a44:	bl	0 <grub_md_unregister>
    1a48:	nop
    1a4c:	ldp	x29, x30, [sp], #16
    1a50:	ret
    1a54:	nop
	...
