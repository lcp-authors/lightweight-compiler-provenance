
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tty_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000738 <_init>:
 738:	stp	x29, x30, [sp, #-16]!
 73c:	mov	x29, sp
 740:	bl	7f0 <call_weak_fn>
 744:	ldp	x29, x30, [sp], #16
 748:	ret

Disassembly of section .plt:

0000000000000750 <.plt>:
 750:	stp	x16, x30, [sp, #-16]!
 754:	adrp	x16, 10000 <__FRAME_END__+0xf370>
 758:	ldr	x17, [x16, #4088]
 75c:	add	x16, x16, #0xff8
 760:	br	x17
 764:	nop
 768:	nop
 76c:	nop

0000000000000770 <ttyname@plt>:
 770:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 774:	ldr	x17, [x16]
 778:	add	x16, x16, #0x0
 77c:	br	x17

0000000000000780 <__cxa_finalize@plt>:
 780:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 784:	ldr	x17, [x16, #8]
 788:	add	x16, x16, #0x8
 78c:	br	x17

0000000000000790 <builtin_help@plt>:
 790:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 794:	ldr	x17, [x16, #16]
 798:	add	x16, x16, #0x10
 79c:	br	x17

00000000000007a0 <builtin_usage@plt>:
 7a0:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #24]
 7a8:	add	x16, x16, #0x18
 7ac:	br	x17

00000000000007b0 <__gmon_start__@plt>:
 7b0:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #32]
 7b8:	add	x16, x16, #0x20
 7bc:	br	x17

00000000000007c0 <puts@plt>:
 7c0:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #40]
 7c8:	add	x16, x16, #0x28
 7cc:	br	x17

00000000000007d0 <internal_getopt@plt>:
 7d0:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #48]
 7d8:	add	x16, x16, #0x30
 7dc:	br	x17

00000000000007e0 <reset_internal_getopt@plt>:
 7e0:	adrp	x16, 11000 <ttyname@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #56]
 7e8:	add	x16, x16, #0x38
 7ec:	br	x17

Disassembly of section .text:

00000000000007f0 <call_weak_fn>:
 7f0:	adrp	x0, 10000 <__FRAME_END__+0xf370>
 7f4:	ldr	x0, [x0, #4048]
 7f8:	cbz	x0, 800 <call_weak_fn+0x10>
 7fc:	b	7b0 <__gmon_start__@plt>
 800:	ret

0000000000000804 <deregister_tm_clones>:
 804:	stp	x29, x30, [sp, #-32]!
 808:	mov	x29, sp
 80c:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 810:	add	x0, x0, #0xb0
 814:	str	x0, [sp, #24]
 818:	ldr	x0, [sp, #24]
 81c:	str	x0, [sp, #24]
 820:	ldr	x1, [sp, #24]
 824:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 828:	add	x0, x0, #0xb0
 82c:	cmp	x1, x0
 830:	b.eq	868 <deregister_tm_clones+0x64>  // b.none
 834:	adrp	x0, 10000 <__FRAME_END__+0xf370>
 838:	ldr	x0, [x0, #4032]
 83c:	str	x0, [sp, #16]
 840:	ldr	x0, [sp, #16]
 844:	str	x0, [sp, #16]
 848:	ldr	x0, [sp, #16]
 84c:	cmp	x0, #0x0
 850:	b.eq	86c <deregister_tm_clones+0x68>  // b.none
 854:	ldr	x1, [sp, #16]
 858:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 85c:	add	x0, x0, #0xb0
 860:	blr	x1
 864:	b	86c <deregister_tm_clones+0x68>
 868:	nop
 86c:	ldp	x29, x30, [sp], #32
 870:	ret

0000000000000874 <register_tm_clones>:
 874:	stp	x29, x30, [sp, #-48]!
 878:	mov	x29, sp
 87c:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 880:	add	x0, x0, #0xb0
 884:	str	x0, [sp, #40]
 888:	ldr	x0, [sp, #40]
 88c:	str	x0, [sp, #40]
 890:	ldr	x1, [sp, #40]
 894:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 898:	add	x0, x0, #0xb0
 89c:	sub	x0, x1, x0
 8a0:	asr	x0, x0, #3
 8a4:	lsr	x1, x0, #63
 8a8:	add	x0, x1, x0
 8ac:	asr	x0, x0, #1
 8b0:	str	x0, [sp, #32]
 8b4:	ldr	x0, [sp, #32]
 8b8:	cmp	x0, #0x0
 8bc:	b.eq	8f8 <register_tm_clones+0x84>  // b.none
 8c0:	adrp	x0, 10000 <__FRAME_END__+0xf370>
 8c4:	ldr	x0, [x0, #4064]
 8c8:	str	x0, [sp, #24]
 8cc:	ldr	x0, [sp, #24]
 8d0:	str	x0, [sp, #24]
 8d4:	ldr	x0, [sp, #24]
 8d8:	cmp	x0, #0x0
 8dc:	b.eq	8fc <register_tm_clones+0x88>  // b.none
 8e0:	ldr	x2, [sp, #24]
 8e4:	ldr	x1, [sp, #32]
 8e8:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 8ec:	add	x0, x0, #0xb0
 8f0:	blr	x2
 8f4:	b	8fc <register_tm_clones+0x88>
 8f8:	nop
 8fc:	ldp	x29, x30, [sp], #48
 900:	ret

0000000000000904 <__do_global_dtors_aux>:
 904:	stp	x29, x30, [sp, #-16]!
 908:	mov	x29, sp
 90c:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 910:	add	x0, x0, #0xb0
 914:	ldrb	w0, [x0]
 918:	and	x0, x0, #0xff
 91c:	cmp	x0, #0x0
 920:	b.ne	95c <__do_global_dtors_aux+0x58>  // b.any
 924:	adrp	x0, 10000 <__FRAME_END__+0xf370>
 928:	ldr	x0, [x0, #4040]
 92c:	cmp	x0, #0x0
 930:	b.eq	944 <__do_global_dtors_aux+0x40>  // b.none
 934:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 938:	add	x0, x0, #0x40
 93c:	ldr	x0, [x0]
 940:	bl	780 <__cxa_finalize@plt>
 944:	bl	804 <deregister_tm_clones>
 948:	adrp	x0, 11000 <ttyname@GLIBC_2.17>
 94c:	add	x0, x0, #0xb0
 950:	mov	w1, #0x1                   	// #1
 954:	strb	w1, [x0]
 958:	b	960 <__do_global_dtors_aux+0x5c>
 95c:	nop
 960:	ldp	x29, x30, [sp], #16
 964:	ret

0000000000000968 <frame_dummy>:
 968:	stp	x29, x30, [sp, #-16]!
 96c:	mov	x29, sp
 970:	bl	874 <register_tm_clones>
 974:	nop
 978:	ldp	x29, x30, [sp], #16
 97c:	ret

0000000000000980 <tty_builtin>:
 980:	stp	x29, x30, [sp, #-48]!
 984:	mov	x29, sp
 988:	str	x0, [sp, #24]
 98c:	bl	7e0 <reset_internal_getopt@plt>
 990:	str	wzr, [sp, #44]
 994:	b	9d4 <tty_builtin+0x54>
 998:	ldr	w0, [sp, #40]
 99c:	cmn	w0, #0x63
 9a0:	b.eq	9bc <tty_builtin+0x3c>  // b.none
 9a4:	ldr	w0, [sp, #40]
 9a8:	cmp	w0, #0x73
 9ac:	b.ne	9c8 <tty_builtin+0x48>  // b.any
 9b0:	mov	w0, #0x1                   	// #1
 9b4:	str	w0, [sp, #44]
 9b8:	b	9d4 <tty_builtin+0x54>
 9bc:	bl	790 <builtin_help@plt>
 9c0:	mov	w0, #0x102                 	// #258
 9c4:	b	a4c <tty_builtin+0xcc>
 9c8:	bl	7a0 <builtin_usage@plt>
 9cc:	mov	w0, #0x102                 	// #258
 9d0:	b	a4c <tty_builtin+0xcc>
 9d4:	adrp	x0, 0 <_init-0x738>
 9d8:	add	x1, x0, #0xa68
 9dc:	ldr	x0, [sp, #24]
 9e0:	bl	7d0 <internal_getopt@plt>
 9e4:	str	w0, [sp, #40]
 9e8:	ldr	w0, [sp, #40]
 9ec:	cmn	w0, #0x1
 9f0:	b.ne	998 <tty_builtin+0x18>  // b.any
 9f4:	adrp	x0, 10000 <__FRAME_END__+0xf370>
 9f8:	ldr	x0, [x0, #4056]
 9fc:	ldr	x0, [x0]
 a00:	str	x0, [sp, #24]
 a04:	mov	w0, #0x0                   	// #0
 a08:	bl	770 <ttyname@plt>
 a0c:	str	x0, [sp, #32]
 a10:	ldr	w0, [sp, #44]
 a14:	cmp	w0, #0x0
 a18:	b.ne	a3c <tty_builtin+0xbc>  // b.any
 a1c:	ldr	x0, [sp, #32]
 a20:	cmp	x0, #0x0
 a24:	b.eq	a30 <tty_builtin+0xb0>  // b.none
 a28:	ldr	x0, [sp, #32]
 a2c:	b	a38 <tty_builtin+0xb8>
 a30:	adrp	x0, 0 <_init-0x738>
 a34:	add	x0, x0, #0xa70
 a38:	bl	7c0 <puts@plt>
 a3c:	ldr	x0, [sp, #32]
 a40:	cmp	x0, #0x0
 a44:	cset	w0, eq  // eq = none
 a48:	and	w0, w0, #0xff
 a4c:	ldp	x29, x30, [sp], #48
 a50:	ret

Disassembly of section .fini:

0000000000000a54 <_fini>:
 a54:	stp	x29, x30, [sp, #-16]!
 a58:	mov	x29, sp
 a5c:	ldp	x29, x30, [sp], #16
 a60:	ret
