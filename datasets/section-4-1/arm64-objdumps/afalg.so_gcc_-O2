
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//afalg.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001560 <.init>:
    1560:	stp	x29, x30, [sp, #-16]!
    1564:	mov	x29, sp
    1568:	bl	18e0 <ASYNC_WAIT_CTX_get_fd@plt+0x10>
    156c:	ldp	x29, x30, [sp], #16
    1570:	ret

Disassembly of section .plt:

0000000000001580 <EVP_CIPHER_meth_new@plt-0x20>:
    1580:	stp	x16, x30, [sp, #-16]!
    1584:	adrp	x16, 13000 <bind_engine@@Base+0x10980>
    1588:	ldr	x17, [x16, #4088]
    158c:	add	x16, x16, #0xff8
    1590:	br	x17
    1594:	nop
    1598:	nop
    159c:	nop

00000000000015a0 <EVP_CIPHER_meth_new@plt>:
    15a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15a4:	ldr	x17, [x16]
    15a8:	add	x16, x16, #0x0
    15ac:	br	x17

00000000000015b0 <EVP_CIPHER_meth_set_cleanup@plt>:
    15b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15b4:	ldr	x17, [x16, #8]
    15b8:	add	x16, x16, #0x8
    15bc:	br	x17

00000000000015c0 <EVP_CIPHER_CTX_iv_length@plt>:
    15c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15c4:	ldr	x17, [x16, #16]
    15c8:	add	x16, x16, #0x10
    15cc:	br	x17

00000000000015d0 <EVP_CIPHER_meth_set_iv_length@plt>:
    15d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15d4:	ldr	x17, [x16, #24]
    15d8:	add	x16, x16, #0x18
    15dc:	br	x17

00000000000015e0 <EVP_CIPHER_CTX_get_cipher_data@plt>:
    15e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15e4:	ldr	x17, [x16, #32]
    15e8:	add	x16, x16, #0x20
    15ec:	br	x17

00000000000015f0 <ENGINE_set_id@plt>:
    15f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15f4:	ldr	x17, [x16, #40]
    15f8:	add	x16, x16, #0x28
    15fc:	br	x17

0000000000001600 <EVP_CIPHER_CTX_key_length@plt>:
    1600:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1604:	ldr	x17, [x16, #48]
    1608:	add	x16, x16, #0x30
    160c:	br	x17

0000000000001610 <ENGINE_get_static_state@plt>:
    1610:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1614:	ldr	x17, [x16, #56]
    1618:	add	x16, x16, #0x38
    161c:	br	x17

0000000000001620 <strtok@plt>:
    1620:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1624:	ldr	x17, [x16, #64]
    1628:	add	x16, x16, #0x40
    162c:	br	x17

0000000000001630 <__gmon_start__@plt>:
    1630:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1634:	ldr	x17, [x16, #72]
    1638:	add	x16, x16, #0x48
    163c:	br	x17

0000000000001640 <ASYNC_get_current_job@plt>:
    1640:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1644:	ldr	x17, [x16, #80]
    1648:	add	x16, x16, #0x50
    164c:	br	x17

0000000000001650 <socket@plt>:
    1650:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1654:	ldr	x17, [x16, #88]
    1658:	add	x16, x16, #0x58
    165c:	br	x17

0000000000001660 <EVP_CIPHER_CTX_cipher@plt>:
    1660:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1664:	ldr	x17, [x16, #96]
    1668:	add	x16, x16, #0x60
    166c:	br	x17

0000000000001670 <fprintf@plt>:
    1670:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1674:	ldr	x17, [x16, #104]
    1678:	add	x16, x16, #0x68
    167c:	br	x17

0000000000001680 <CRYPTO_set_mem_functions@plt>:
    1680:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1684:	ldr	x17, [x16, #112]
    1688:	add	x16, x16, #0x70
    168c:	br	x17

0000000000001690 <__cxa_finalize@plt>:
    1690:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1694:	ldr	x17, [x16, #120]
    1698:	add	x16, x16, #0x78
    169c:	br	x17

00000000000016a0 <EVP_CIPHER_meth_set_init@plt>:
    16a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16a4:	ldr	x17, [x16, #128]
    16a8:	add	x16, x16, #0x80
    16ac:	br	x17

00000000000016b0 <ASYNC_WAIT_CTX_set_wait_fd@plt>:
    16b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16b4:	ldr	x17, [x16, #136]
    16b8:	add	x16, x16, #0x88
    16bc:	br	x17

00000000000016c0 <ENGINE_set_destroy_function@plt>:
    16c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16c4:	ldr	x17, [x16, #144]
    16c8:	add	x16, x16, #0x90
    16cc:	br	x17

00000000000016d0 <ERR_get_next_error_library@plt>:
    16d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16d4:	ldr	x17, [x16, #152]
    16d8:	add	x16, x16, #0x98
    16dc:	br	x17

00000000000016e0 <uname@plt>:
    16e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16e4:	ldr	x17, [x16, #160]
    16e8:	add	x16, x16, #0xa0
    16ec:	br	x17

00000000000016f0 <__errno_location@plt>:
    16f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16f4:	ldr	x17, [x16, #168]
    16f8:	add	x16, x16, #0xa8
    16fc:	br	x17

0000000000001700 <read@plt>:
    1700:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1704:	ldr	x17, [x16, #176]
    1708:	add	x16, x16, #0xb0
    170c:	br	x17

0000000000001710 <perror@plt>:
    1710:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1714:	ldr	x17, [x16, #184]
    1718:	add	x16, x16, #0xb8
    171c:	br	x17

0000000000001720 <syscall@plt>:
    1720:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1724:	ldr	x17, [x16, #192]
    1728:	add	x16, x16, #0xc0
    172c:	br	x17

0000000000001730 <ENGINE_set_name@plt>:
    1730:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1734:	ldr	x17, [x16, #200]
    1738:	add	x16, x16, #0xc8
    173c:	br	x17

0000000000001740 <ERR_unload_strings@plt>:
    1740:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1744:	ldr	x17, [x16, #208]
    1748:	add	x16, x16, #0xd0
    174c:	br	x17

0000000000001750 <EVP_CIPHER_CTX_iv@plt>:
    1750:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1754:	ldr	x17, [x16, #216]
    1758:	add	x16, x16, #0xd8
    175c:	br	x17

0000000000001760 <ENGINE_set_init_function@plt>:
    1760:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1764:	ldr	x17, [x16, #224]
    1768:	add	x16, x16, #0xe0
    176c:	br	x17

0000000000001770 <bind@plt>:
    1770:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1774:	ldr	x17, [x16, #232]
    1778:	add	x16, x16, #0xe8
    177c:	br	x17

0000000000001780 <EVP_CIPHER_meth_free@plt>:
    1780:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1784:	ldr	x17, [x16, #240]
    1788:	add	x16, x16, #0xf0
    178c:	br	x17

0000000000001790 <ASYNC_get_wait_ctx@plt>:
    1790:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1794:	ldr	x17, [x16, #248]
    1798:	add	x16, x16, #0xf8
    179c:	br	x17

00000000000017a0 <ERR_put_error@plt>:
    17a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17a4:	ldr	x17, [x16, #256]
    17a8:	add	x16, x16, #0x100
    17ac:	br	x17

00000000000017b0 <ERR_load_strings@plt>:
    17b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17b4:	ldr	x17, [x16, #264]
    17b8:	add	x16, x16, #0x108
    17bc:	br	x17

00000000000017c0 <EVP_CIPHER_CTX_nid@plt>:
    17c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17c4:	ldr	x17, [x16, #272]
    17c8:	add	x16, x16, #0x110
    17cc:	br	x17

00000000000017d0 <strcmp@plt>:
    17d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17d4:	ldr	x17, [x16, #280]
    17d8:	add	x16, x16, #0x118
    17dc:	br	x17

00000000000017e0 <strtol@plt>:
    17e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17e4:	ldr	x17, [x16, #288]
    17e8:	add	x16, x16, #0x120
    17ec:	br	x17

00000000000017f0 <setsockopt@plt>:
    17f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17f4:	ldr	x17, [x16, #296]
    17f8:	add	x16, x16, #0x128
    17fc:	br	x17

0000000000001800 <EVP_CIPHER_meth_set_flags@plt>:
    1800:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1804:	ldr	x17, [x16, #304]
    1808:	add	x16, x16, #0x130
    180c:	br	x17

0000000000001810 <ENGINE_set_ciphers@plt>:
    1810:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1814:	ldr	x17, [x16, #312]
    1818:	add	x16, x16, #0x138
    181c:	br	x17

0000000000001820 <EVP_CIPHER_meth_set_do_cipher@plt>:
    1820:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1824:	ldr	x17, [x16, #320]
    1828:	add	x16, x16, #0x140
    182c:	br	x17

0000000000001830 <accept@plt>:
    1830:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1834:	ldr	x17, [x16, #328]
    1838:	add	x16, x16, #0x148
    183c:	br	x17

0000000000001840 <ENGINE_set_finish_function@plt>:
    1840:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1844:	ldr	x17, [x16, #336]
    1848:	add	x16, x16, #0x150
    184c:	br	x17

0000000000001850 <sendmsg@plt>:
    1850:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1854:	ldr	x17, [x16, #344]
    1858:	add	x16, x16, #0x158
    185c:	br	x17

0000000000001860 <OPENSSL_strlcpy@plt>:
    1860:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1864:	ldr	x17, [x16, #352]
    1868:	add	x16, x16, #0x160
    186c:	br	x17

0000000000001870 <ASYNC_pause_job@plt>:
    1870:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1874:	ldr	x17, [x16, #360]
    1878:	add	x16, x16, #0x168
    187c:	br	x17

0000000000001880 <EVP_CIPHER_CTX_iv_noconst@plt>:
    1880:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1884:	ldr	x17, [x16, #368]
    1888:	add	x16, x16, #0x170
    188c:	br	x17

0000000000001890 <close@plt>:
    1890:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1894:	ldr	x17, [x16, #376]
    1898:	add	x16, x16, #0x178
    189c:	br	x17

00000000000018a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>:
    18a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18a4:	ldr	x17, [x16, #384]
    18a8:	add	x16, x16, #0x180
    18ac:	br	x17

00000000000018b0 <fcntl@plt>:
    18b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18b4:	ldr	x17, [x16, #392]
    18b8:	add	x16, x16, #0x188
    18bc:	br	x17

00000000000018c0 <EVP_CIPHER_CTX_encrypting@plt>:
    18c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18c4:	ldr	x17, [x16, #400]
    18c8:	add	x16, x16, #0x190
    18cc:	br	x17

00000000000018d0 <ASYNC_WAIT_CTX_get_fd@plt>:
    18d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18d4:	ldr	x17, [x16, #408]
    18d8:	add	x16, x16, #0x198
    18dc:	br	x17

Disassembly of section .text:

00000000000018e0 <v_check@@Base-0xd88>:
    18e0:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    18e4:	ldr	x0, [x0, #4032]
    18e8:	cbz	x0, 18f0 <ASYNC_WAIT_CTX_get_fd@plt+0x20>
    18ec:	b	1630 <__gmon_start__@plt>
    18f0:	ret
    18f4:	nop
    18f8:	adrp	x0, 14000 <bind_engine@@Base+0x11980>
    18fc:	add	x0, x0, #0x328
    1900:	adrp	x1, 14000 <bind_engine@@Base+0x11980>
    1904:	add	x1, x1, #0x328
    1908:	cmp	x1, x0
    190c:	b.eq	1924 <ASYNC_WAIT_CTX_get_fd@plt+0x54>  // b.none
    1910:	adrp	x1, 13000 <bind_engine@@Base+0x10980>
    1914:	ldr	x1, [x1, #4048]
    1918:	cbz	x1, 1924 <ASYNC_WAIT_CTX_get_fd@plt+0x54>
    191c:	mov	x16, x1
    1920:	br	x16
    1924:	ret
    1928:	adrp	x0, 14000 <bind_engine@@Base+0x11980>
    192c:	add	x0, x0, #0x328
    1930:	adrp	x1, 14000 <bind_engine@@Base+0x11980>
    1934:	add	x1, x1, #0x328
    1938:	sub	x1, x1, x0
    193c:	lsr	x2, x1, #63
    1940:	add	x1, x2, x1, asr #3
    1944:	cmp	xzr, x1, asr #1
    1948:	asr	x1, x1, #1
    194c:	b.eq	1964 <ASYNC_WAIT_CTX_get_fd@plt+0x94>  // b.none
    1950:	adrp	x2, 13000 <bind_engine@@Base+0x10980>
    1954:	ldr	x2, [x2, #4056]
    1958:	cbz	x2, 1964 <ASYNC_WAIT_CTX_get_fd@plt+0x94>
    195c:	mov	x16, x2
    1960:	br	x16
    1964:	ret
    1968:	stp	x29, x30, [sp, #-32]!
    196c:	mov	x29, sp
    1970:	str	x19, [sp, #16]
    1974:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    1978:	ldrb	w0, [x19, #808]
    197c:	cbnz	w0, 19a4 <ASYNC_WAIT_CTX_get_fd@plt+0xd4>
    1980:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    1984:	ldr	x0, [x0, #4040]
    1988:	cbz	x0, 1998 <ASYNC_WAIT_CTX_get_fd@plt+0xc8>
    198c:	adrp	x0, 14000 <bind_engine@@Base+0x11980>
    1990:	ldr	x0, [x0, #416]
    1994:	bl	1690 <__cxa_finalize@plt>
    1998:	bl	18f8 <ASYNC_WAIT_CTX_get_fd@plt+0x28>
    199c:	mov	w0, #0x1                   	// #1
    19a0:	strb	w0, [x19, #808]
    19a4:	ldr	x19, [sp, #16]
    19a8:	ldp	x29, x30, [sp], #32
    19ac:	ret
    19b0:	b	1928 <ASYNC_WAIT_CTX_get_fd@plt+0x58>
    19b4:	nop
    19b8:	mov	w0, #0x1                   	// #1
    19bc:	ret
    19c0:	mov	w0, w2
    19c4:	b	1890 <close@plt>
    19c8:	stp	x29, x30, [sp, #-48]!
    19cc:	mov	x29, sp
    19d0:	stp	x19, x20, [sp, #16]
    19d4:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    19d8:	ldr	w0, [x19, #812]
    19dc:	cbnz	w0, 1a1c <ASYNC_WAIT_CTX_get_fd@plt+0x14c>
    19e0:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    19e4:	add	x19, x19, #0x1a8
    19e8:	ldr	x0, [x19, #8]
    19ec:	bl	1780 <EVP_CIPHER_meth_free@plt>
    19f0:	str	xzr, [x19, #8]
    19f4:	ldr	x0, [x19, #24]
    19f8:	bl	1780 <EVP_CIPHER_meth_free@plt>
    19fc:	str	xzr, [x19, #24]
    1a00:	ldr	x0, [x19, #40]
    1a04:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1a08:	str	xzr, [x19, #40]
    1a0c:	mov	w0, #0x1                   	// #1
    1a10:	ldp	x19, x20, [sp, #16]
    1a14:	ldp	x29, x30, [sp], #48
    1a18:	ret
    1a1c:	add	x20, x19, #0x32c
    1a20:	str	x21, [sp, #32]
    1a24:	adrp	x21, 14000 <bind_engine@@Base+0x11980>
    1a28:	add	x21, x21, #0x1e8
    1a2c:	mov	x1, x21
    1a30:	ldr	w0, [x20, #4]
    1a34:	bl	1740 <ERR_unload_strings@plt>
    1a38:	ldr	w0, [x20, #4]
    1a3c:	add	x1, x21, #0x70
    1a40:	bl	1740 <ERR_unload_strings@plt>
    1a44:	str	wzr, [x19, #812]
    1a48:	ldr	x21, [sp, #32]
    1a4c:	b	19e0 <ASYNC_WAIT_CTX_get_fd@plt+0x110>
    1a50:	stp	x29, x30, [sp, #-32]!
    1a54:	cmp	w0, #0x1a7
    1a58:	mov	x29, sp
    1a5c:	stp	x19, x20, [sp, #16]
    1a60:	b.eq	1aec <ASYNC_WAIT_CTX_get_fd@plt+0x21c>  // b.none
    1a64:	cmp	w0, #0x1ab
    1a68:	b.ne	1a90 <ASYNC_WAIT_CTX_get_fd@plt+0x1c0>  // b.any
    1a6c:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    1a70:	add	x19, x19, #0x1a8
    1a74:	add	x19, x19, #0x20
    1a78:	ldr	x20, [x19, #8]
    1a7c:	cbz	x20, 1aa8 <ASYNC_WAIT_CTX_get_fd@plt+0x1d8>
    1a80:	mov	x0, x20
    1a84:	ldp	x19, x20, [sp, #16]
    1a88:	ldp	x29, x30, [sp], #32
    1a8c:	ret
    1a90:	cmp	w0, #0x1a3
    1a94:	b.ne	1b60 <ASYNC_WAIT_CTX_get_fd@plt+0x290>  // b.any
    1a98:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    1a9c:	add	x19, x19, #0x1a8
    1aa0:	ldr	x20, [x19, #8]
    1aa4:	cbnz	x20, 1a80 <ASYNC_WAIT_CTX_get_fd@plt+0x1b0>
    1aa8:	ldr	w2, [x19]
    1aac:	mov	w1, #0x10                  	// #16
    1ab0:	bl	15a0 <EVP_CIPHER_meth_new@plt>
    1ab4:	str	x0, [x19, #8]
    1ab8:	mov	x1, x0
    1abc:	cbz	x0, 1ad0 <ASYNC_WAIT_CTX_get_fd@plt+0x200>
    1ac0:	mov	w1, #0x10                  	// #16
    1ac4:	bl	15d0 <EVP_CIPHER_meth_set_iv_length@plt>
    1ac8:	cbnz	w0, 1afc <ASYNC_WAIT_CTX_get_fd@plt+0x22c>
    1acc:	ldr	x1, [x19, #8]
    1ad0:	mov	x0, x1
    1ad4:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1ad8:	str	xzr, [x19, #8]
    1adc:	mov	x0, x20
    1ae0:	ldp	x19, x20, [sp, #16]
    1ae4:	ldp	x29, x30, [sp], #32
    1ae8:	ret
    1aec:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    1af0:	add	x19, x19, #0x1a8
    1af4:	add	x19, x19, #0x10
    1af8:	b	1a78 <ASYNC_WAIT_CTX_get_fd@plt+0x1a8>
    1afc:	ldr	x0, [x19, #8]
    1b00:	mov	x1, #0x1002                	// #4098
    1b04:	bl	1800 <EVP_CIPHER_meth_set_flags@plt>
    1b08:	cbz	w0, 1acc <ASYNC_WAIT_CTX_get_fd@plt+0x1fc>
    1b0c:	ldr	x0, [x19, #8]
    1b10:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1b14:	add	x1, x1, #0x190
    1b18:	bl	16a0 <EVP_CIPHER_meth_set_init@plt>
    1b1c:	cbz	w0, 1acc <ASYNC_WAIT_CTX_get_fd@plt+0x1fc>
    1b20:	ldr	x0, [x19, #8]
    1b24:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    1b28:	add	x1, x1, #0xce0
    1b2c:	bl	1820 <EVP_CIPHER_meth_set_do_cipher@plt>
    1b30:	cbz	w0, 1acc <ASYNC_WAIT_CTX_get_fd@plt+0x1fc>
    1b34:	ldr	x0, [x19, #8]
    1b38:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    1b3c:	add	x1, x1, #0xbf0
    1b40:	bl	15b0 <EVP_CIPHER_meth_set_cleanup@plt>
    1b44:	cbz	w0, 1acc <ASYNC_WAIT_CTX_get_fd@plt+0x1fc>
    1b48:	ldr	x0, [x19, #8]
    1b4c:	mov	w1, #0x80                  	// #128
    1b50:	bl	18a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>
    1b54:	cbz	w0, 1acc <ASYNC_WAIT_CTX_get_fd@plt+0x1fc>
    1b58:	ldr	x20, [x19, #8]
    1b5c:	b	1a80 <ASYNC_WAIT_CTX_get_fd@plt+0x1b0>
    1b60:	mov	x0, #0x0                   	// #0
    1b64:	ldr	x0, [x0, #8]
    1b68:	brk	#0x3e8
    1b6c:	nop
    1b70:	cbz	x1, 1bd8 <ASYNC_WAIT_CTX_get_fd@plt+0x308>
    1b74:	stp	x29, x30, [sp, #-32]!
    1b78:	sub	w2, w3, #0x1a3
    1b7c:	cmp	w2, #0x8
    1b80:	mov	x29, sp
    1b84:	stp	x19, x20, [sp, #16]
    1b88:	mov	x19, x1
    1b8c:	b.hi	1ba4 <ASYNC_WAIT_CTX_get_fd@plt+0x2d4>  // b.pmore
    1b90:	mov	x20, #0x1                   	// #1
    1b94:	mov	x1, #0x111                 	// #273
    1b98:	lsl	x2, x20, x2
    1b9c:	tst	x2, x1
    1ba0:	b.ne	1bb8 <ASYNC_WAIT_CTX_get_fd@plt+0x2e8>  // b.any
    1ba4:	str	xzr, [x19]
    1ba8:	mov	w0, #0x0                   	// #0
    1bac:	ldp	x19, x20, [sp, #16]
    1bb0:	ldp	x29, x30, [sp], #32
    1bb4:	ret
    1bb8:	mov	w0, w3
    1bbc:	bl	1a50 <ASYNC_WAIT_CTX_get_fd@plt+0x180>
    1bc0:	mov	x1, x0
    1bc4:	str	x1, [x19]
    1bc8:	mov	w0, w20
    1bcc:	ldp	x19, x20, [sp, #16]
    1bd0:	ldp	x29, x30, [sp], #32
    1bd4:	ret
    1bd8:	adrp	x1, 14000 <bind_engine@@Base+0x11980>
    1bdc:	add	x1, x1, #0x1a8
    1be0:	add	x1, x1, #0x30
    1be4:	mov	w0, #0x3                   	// #3
    1be8:	str	x1, [x2]
    1bec:	ret
    1bf0:	cbz	x0, 1c30 <ASYNC_WAIT_CTX_get_fd@plt+0x360>
    1bf4:	stp	x29, x30, [sp, #-32]!
    1bf8:	mov	x29, sp
    1bfc:	str	x19, [sp, #16]
    1c00:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    1c04:	mov	x19, x0
    1c08:	cbz	x0, 1c20 <ASYNC_WAIT_CTX_get_fd@plt+0x350>
    1c0c:	ldr	w1, [x19]
    1c10:	mov	w0, #0x671                 	// #1649
    1c14:	movk	w0, #0x189, lsl #16
    1c18:	cmp	w1, w0
    1c1c:	b.eq	1c38 <ASYNC_WAIT_CTX_get_fd@plt+0x368>  // b.none
    1c20:	mov	w0, #0x0                   	// #0
    1c24:	ldr	x19, [sp, #16]
    1c28:	ldp	x29, x30, [sp], #32
    1c2c:	ret
    1c30:	mov	w0, #0x0                   	// #0
    1c34:	ret
    1c38:	ldr	w0, [x19, #4]
    1c3c:	bl	1890 <close@plt>
    1c40:	ldr	w0, [x19, #8]
    1c44:	bl	1890 <close@plt>
    1c48:	ldr	w0, [x19, #20]
    1c4c:	cmp	w0, #0x1
    1c50:	b.eq	1c70 <ASYNC_WAIT_CTX_get_fd@plt+0x3a0>  // b.none
    1c54:	ldr	x1, [x19, #24]
    1c58:	mov	x0, #0x1                   	// #1
    1c5c:	bl	1720 <syscall@plt>
    1c60:	mov	w0, #0x1                   	// #1
    1c64:	ldr	x19, [sp, #16]
    1c68:	ldp	x29, x30, [sp], #32
    1c6c:	ret
    1c70:	ldr	w0, [x19, #16]
    1c74:	bl	1890 <close@plt>
    1c78:	b	1c54 <ASYNC_WAIT_CTX_get_fd@plt+0x384>
    1c7c:	nop
    1c80:	stp	x29, x30, [sp, #-48]!
    1c84:	mov	x29, sp
    1c88:	stp	x19, x20, [sp, #16]
    1c8c:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    1c90:	add	x19, x19, #0x32c
    1c94:	mov	w20, w0
    1c98:	stp	x21, x22, [sp, #32]
    1c9c:	mov	w21, w1
    1ca0:	ldr	w0, [x19, #4]
    1ca4:	mov	w22, w2
    1ca8:	cbz	w0, 1cd0 <ASYNC_WAIT_CTX_get_fd@plt+0x400>
    1cac:	mov	w4, w22
    1cb0:	mov	w2, w21
    1cb4:	mov	w1, w20
    1cb8:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1cbc:	ldp	x19, x20, [sp, #16]
    1cc0:	add	x3, x3, #0x858
    1cc4:	ldp	x21, x22, [sp, #32]
    1cc8:	ldp	x29, x30, [sp], #48
    1ccc:	b	17a0 <ERR_put_error@plt>
    1cd0:	bl	16d0 <ERR_get_next_error_library@plt>
    1cd4:	str	w0, [x19, #4]
    1cd8:	b	1cac <ASYNC_WAIT_CTX_get_fd@plt+0x3dc>
    1cdc:	nop
    1ce0:	cmp	x1, #0x0
    1ce4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    1ce8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    1cec:	b.ne	1cf8 <ASYNC_WAIT_CTX_get_fd@plt+0x428>  // b.any
    1cf0:	mov	w0, #0x0                   	// #0
    1cf4:	ret
    1cf8:	stp	x29, x30, [sp, #-272]!
    1cfc:	mov	x29, sp
    1d00:	stp	x19, x20, [sp, #16]
    1d04:	mov	x19, x1
    1d08:	mov	x20, x3
    1d0c:	stp	x21, x22, [sp, #32]
    1d10:	mov	x21, x2
    1d14:	stp	x23, x24, [sp, #48]
    1d18:	mov	x24, x0
    1d1c:	stp	x25, x26, [sp, #64]
    1d20:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    1d24:	mov	x25, x0
    1d28:	cbz	x0, 1d40 <ASYNC_WAIT_CTX_get_fd@plt+0x470>
    1d2c:	ldr	w1, [x25]
    1d30:	mov	w0, #0x671                 	// #1649
    1d34:	movk	w0, #0x189, lsl #16
    1d38:	cmp	w1, w0
    1d3c:	b.eq	1d5c <ASYNC_WAIT_CTX_get_fd@plt+0x48c>  // b.none
    1d40:	mov	w0, #0x0                   	// #0
    1d44:	ldp	x19, x20, [sp, #16]
    1d48:	ldp	x21, x22, [sp, #32]
    1d4c:	ldp	x23, x24, [sp, #48]
    1d50:	ldp	x25, x26, [sp, #64]
    1d54:	ldp	x29, x30, [sp], #272
    1d58:	ret
    1d5c:	mov	x0, x24
    1d60:	stp	x27, x28, [sp, #80]
    1d64:	stp	xzr, xzr, [sp, #96]
    1d68:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    1d6c:	cbnz	w0, 1d7c <ASYNC_WAIT_CTX_get_fd@plt+0x4ac>
    1d70:	add	x0, x21, x20
    1d74:	ldp	x0, x1, [x0, #-16]
    1d78:	stp	x0, x1, [sp, #96]
    1d7c:	add	x23, sp, #0xd0
    1d80:	mov	x0, x24
    1d84:	bl	1750 <EVP_CIPHER_CTX_iv@plt>
    1d88:	mov	x28, x0
    1d8c:	mov	x0, x24
    1d90:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    1d94:	stp	xzr, xzr, [sp, #224]
    1d98:	mov	x10, #0x117                 	// #279
    1d9c:	mov	x8, #0x117                 	// #279
    1da0:	stp	xzr, xzr, [x23, #32]
    1da4:	mov	x2, #0x14                  	// #20
    1da8:	mov	x9, #0x24                  	// #36
    1dac:	movk	x8, #0x2, lsl #32
    1db0:	movk	x10, #0x3, lsl #32
    1db4:	mov	w7, #0x10                  	// #16
    1db8:	stp	xzr, x2, [sp, #200]
    1dbc:	mov	x11, #0x40                  	// #64
    1dc0:	mov	w4, #0x8000                	// #32768
    1dc4:	str	x10, [sp, #216]
    1dc8:	add	x26, sp, #0x98
    1dcc:	str	w0, [sp, #224]
    1dd0:	add	x0, sp, #0x24
    1dd4:	stp	x9, x8, [sp, #232]
    1dd8:	add	x22, sp, #0x88
    1ddc:	mov	x27, #0x1                   	// #1
    1de0:	str	w7, [sp, #248]
    1de4:	mov	x1, x26
    1de8:	stp	xzr, xzr, [x23, #48]
    1dec:	mov	w2, #0x0                   	// #0
    1df0:	stp	xzr, xzr, [sp, #152]
    1df4:	stp	xzr, xzr, [sp, #168]
    1df8:	stp	x23, x11, [sp, #184]
    1dfc:	ldp	x8, x9, [x28]
    1e00:	str	w4, [sp, #200]
    1e04:	stp	x8, x9, [x0, #216]
    1e08:	ldr	w0, [x25, #4]
    1e0c:	stp	x21, x20, [sp, #136]
    1e10:	stp	x22, x27, [sp, #168]
    1e14:	bl	1850 <sendmsg@plt>
    1e18:	tbnz	x0, #63, 2028 <ASYNC_WAIT_CTX_get_fd@plt+0x758>
    1e1c:	cmp	x0, x20
    1e20:	b.ne	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>  // b.any
    1e24:	ldr	w0, [x25, #20]
    1e28:	add	x21, x25, #0x10
    1e2c:	ldr	w28, [x25, #4]
    1e30:	str	xzr, [sp, #136]
    1e34:	stp	xzr, xzr, [sp, #152]
    1e38:	cbnz	w0, 1e7c <ASYNC_WAIT_CTX_get_fd@plt+0x5ac>
    1e3c:	str	xzr, [sp, #208]
    1e40:	bl	1640 <ASYNC_get_current_job@plt>
    1e44:	cbz	x0, 206c <ASYNC_WAIT_CTX_get_fd@plt+0x79c>
    1e48:	bl	1790 <ASYNC_get_wait_ctx@plt>
    1e4c:	mov	x27, x0
    1e50:	cbz	x0, 1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>
    1e54:	adrp	x4, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1e58:	add	x4, x4, #0xbb8
    1e5c:	mov	x1, x4
    1e60:	mov	x3, x23
    1e64:	mov	x2, x21
    1e68:	str	x4, [sp, #120]
    1e6c:	bl	18d0 <ASYNC_WAIT_CTX_get_fd@plt>
    1e70:	cbz	w0, 20b0 <ASYNC_WAIT_CTX_get_fd@plt+0x7e0>
    1e74:	mov	w0, #0x2                   	// #2
    1e78:	str	w0, [x21, #4]
    1e7c:	add	x4, x25, #0x40
    1e80:	str	x4, [sp, #128]
    1e84:	stp	xzr, xzr, [x25, #64]
    1e88:	mov	w7, #0x1                   	// #1
    1e8c:	ldr	w5, [x25, #16]
    1e90:	stp	xzr, xzr, [x25, #80]
    1e94:	add	x27, sp, #0x80
    1e98:	mov	x3, x27
    1e9c:	stp	xzr, xzr, [x25, #112]
    1ea0:	mov	x2, #0x1                   	// #1
    1ea4:	mov	x0, #0x2                   	// #2
    1ea8:	ldr	x1, [x21, #8]
    1eac:	str	w28, [x25, #84]
    1eb0:	stp	x19, x20, [x25, #88]
    1eb4:	str	xzr, [x25, #104]
    1eb8:	stp	w7, w5, [x25, #120]
    1ebc:	str	wzr, [sp, #120]
    1ec0:	bl	1720 <syscall@plt>
    1ec4:	tbnz	w0, #31, 2090 <ASYNC_WAIT_CTX_get_fd@plt+0x7c0>
    1ec8:	bl	1870 <ASYNC_pause_job@plt>
    1ecc:	ldr	w0, [x21]
    1ed0:	mov	x1, x22
    1ed4:	mov	x2, #0x8                   	// #8
    1ed8:	bl	1700 <read@plt>
    1edc:	tbnz	w0, #31, 1f98 <ASYNC_WAIT_CTX_get_fd@plt+0x6c8>
    1ee0:	ldr	x0, [sp, #136]
    1ee4:	cbz	x0, 1ec8 <ASYNC_WAIT_CTX_get_fd@plt+0x5f8>
    1ee8:	ldr	x1, [x21, #8]
    1eec:	mov	x3, #0x1                   	// #1
    1ef0:	mov	x5, x26
    1ef4:	mov	x2, x3
    1ef8:	mov	x4, x23
    1efc:	mov	x0, #0x4                   	// #4
    1f00:	bl	1720 <syscall@plt>
    1f04:	cmp	w0, #0x0
    1f08:	b.le	2048 <ASYNC_WAIT_CTX_get_fd@plt+0x778>
    1f0c:	ldr	x1, [sp, #224]
    1f10:	mov	x3, x27
    1f14:	ldr	w4, [sp, #120]
    1f18:	mov	x2, #0x1                   	// #1
    1f1c:	mov	x0, #0x2                   	// #2
    1f20:	add	w28, w4, #0x1
    1f24:	tbz	x1, #63, 1fd8 <ASYNC_WAIT_CTX_get_fd@plt+0x708>
    1f28:	cmn	x1, #0x10
    1f2c:	b.ne	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>  // b.any
    1f30:	str	w28, [sp, #120]
    1f34:	cmp	w4, #0x2
    1f38:	b.gt	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>
    1f3c:	ldr	x1, [x21, #8]
    1f40:	bl	1720 <syscall@plt>
    1f44:	tbz	w0, #31, 1ec8 <ASYNC_WAIT_CTX_get_fd@plt+0x5f8>
    1f48:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    1f4c:	mov	w4, w28
    1f50:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1f54:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1f58:	ldr	x0, [x0, #4064]
    1f5c:	add	x2, x2, #0x858
    1f60:	add	x1, x1, #0x938
    1f64:	mov	w3, #0x128                 	// #296
    1f68:	ldr	x0, [x0]
    1f6c:	bl	1670 <fprintf@plt>
    1f70:	mov	x0, #0x0                   	// #0
    1f74:	bl	1710 <perror@plt>
    1f78:	mov	w0, #0x0                   	// #0
    1f7c:	ldp	x19, x20, [sp, #16]
    1f80:	ldp	x21, x22, [sp, #32]
    1f84:	ldp	x23, x24, [sp, #48]
    1f88:	ldp	x25, x26, [sp, #64]
    1f8c:	ldp	x27, x28, [sp, #80]
    1f90:	ldp	x29, x30, [sp], #272
    1f94:	ret
    1f98:	bl	16f0 <__errno_location@plt>
    1f9c:	ldr	w0, [x0]
    1fa0:	cmp	w0, #0xb
    1fa4:	b.eq	1ec8 <ASYNC_WAIT_CTX_get_fd@plt+0x5f8>  // b.none
    1fa8:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    1fac:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1fb0:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1fb4:	add	x2, x2, #0x858
    1fb8:	ldr	x0, [x0, #4064]
    1fbc:	add	x1, x1, #0x908
    1fc0:	mov	w3, #0x10f                 	// #271
    1fc4:	ldr	x0, [x0]
    1fc8:	bl	1670 <fprintf@plt>
    1fcc:	mov	x0, #0x0                   	// #0
    1fd0:	bl	1710 <perror@plt>
    1fd4:	b	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>
    1fd8:	mov	x0, x24
    1fdc:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    1fe0:	cbz	w0, 2008 <ASYNC_WAIT_CTX_get_fd@plt+0x738>
    1fe4:	add	x19, x19, x20
    1fe8:	mov	x0, x24
    1fec:	bl	1880 <EVP_CIPHER_CTX_iv_noconst@plt>
    1ff0:	mov	x1, x0
    1ff4:	mov	w0, #0x1                   	// #1
    1ff8:	ldp	x2, x3, [x19, #-16]
    1ffc:	stp	x2, x3, [x1]
    2000:	ldp	x27, x28, [sp, #80]
    2004:	b	1d44 <ASYNC_WAIT_CTX_get_fd@plt+0x474>
    2008:	mov	x0, x24
    200c:	bl	1880 <EVP_CIPHER_CTX_iv_noconst@plt>
    2010:	mov	x1, x0
    2014:	mov	w0, #0x1                   	// #1
    2018:	ldp	x2, x3, [sp, #96]
    201c:	stp	x2, x3, [x1]
    2020:	ldp	x27, x28, [sp, #80]
    2024:	b	1d44 <ASYNC_WAIT_CTX_get_fd@plt+0x474>
    2028:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    202c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2030:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2034:	add	x2, x2, #0x858
    2038:	ldr	x0, [x0, #4064]
    203c:	add	x1, x1, #0x870
    2040:	mov	w3, #0x1e0                 	// #480
    2044:	b	1fc4 <ASYNC_WAIT_CTX_get_fd@plt+0x6f4>
    2048:	b.eq	1ec8 <ASYNC_WAIT_CTX_get_fd@plt+0x5f8>  // b.none
    204c:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    2050:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2054:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2058:	add	x2, x2, #0x858
    205c:	ldr	x0, [x0, #4064]
    2060:	add	x1, x1, #0x970
    2064:	mov	w3, #0x13a                 	// #314
    2068:	b	1fc4 <ASYNC_WAIT_CTX_get_fd@plt+0x6f4>
    206c:	mov	w2, #0x0                   	// #0
    2070:	mov	w1, #0x0                   	// #0
    2074:	mov	x0, #0x13                  	// #19
    2078:	bl	1720 <syscall@plt>
    207c:	str	w0, [x25, #16]
    2080:	cmn	w0, #0x1
    2084:	b.eq	2150 <ASYNC_WAIT_CTX_get_fd@plt+0x880>  // b.none
    2088:	str	w27, [x21, #4]
    208c:	b	1e7c <ASYNC_WAIT_CTX_get_fd@plt+0x5ac>
    2090:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    2094:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2098:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    209c:	add	x2, x2, #0x858
    20a0:	ldr	x0, [x0, #4064]
    20a4:	add	x1, x1, #0x8e0
    20a8:	mov	w3, #0x102                 	// #258
    20ac:	b	1fc4 <ASYNC_WAIT_CTX_get_fd@plt+0x6f4>
    20b0:	mov	w2, #0x0                   	// #0
    20b4:	mov	w1, #0x0                   	// #0
    20b8:	mov	x0, #0x13                  	// #19
    20bc:	bl	1720 <syscall@plt>
    20c0:	str	w0, [x25, #16]
    20c4:	cmn	w0, #0x1
    20c8:	ldr	x4, [sp, #120]
    20cc:	b.eq	2110 <ASYNC_WAIT_CTX_get_fd@plt+0x840>  // b.none
    20d0:	ldr	x3, [sp, #208]
    20d4:	mov	w2, w0
    20d8:	mov	x1, x4
    20dc:	mov	x0, x27
    20e0:	adrp	x4, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    20e4:	add	x4, x4, #0x9c0
    20e8:	bl	16b0 <ASYNC_WAIT_CTX_set_wait_fd@plt>
    20ec:	cbz	w0, 2104 <ASYNC_WAIT_CTX_get_fd@plt+0x834>
    20f0:	ldr	w0, [x25, #16]
    20f4:	mov	w2, #0x800                 	// #2048
    20f8:	mov	w1, #0x4                   	// #4
    20fc:	bl	18b0 <fcntl@plt>
    2100:	b	1e74 <ASYNC_WAIT_CTX_get_fd@plt+0x5a4>
    2104:	ldr	w0, [x25, #16]
    2108:	bl	1890 <close@plt>
    210c:	b	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>
    2110:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    2114:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2118:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    211c:	add	x2, x2, #0x858
    2120:	ldr	x0, [x0, #4064]
    2124:	add	x1, x1, #0x8b0
    2128:	mov	w3, #0xa2                  	// #162
    212c:	ldr	x0, [x0]
    2130:	bl	1670 <fprintf@plt>
    2134:	mov	x0, #0x0                   	// #0
    2138:	bl	1710 <perror@plt>
    213c:	mov	w2, #0xa3                  	// #163
    2140:	mov	w1, #0x6c                  	// #108
    2144:	mov	w0, #0x67                  	// #103
    2148:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    214c:	b	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>
    2150:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    2154:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2158:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    215c:	add	x2, x2, #0x858
    2160:	ldr	x0, [x0, #4064]
    2164:	add	x1, x1, #0x8b0
    2168:	mov	w3, #0xba                  	// #186
    216c:	ldr	x0, [x0]
    2170:	bl	1670 <fprintf@plt>
    2174:	mov	x0, #0x0                   	// #0
    2178:	bl	1710 <perror@plt>
    217c:	mov	w2, #0xbb                  	// #187
    2180:	mov	w1, #0x6c                  	// #108
    2184:	mov	w0, #0x67                  	// #103
    2188:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    218c:	b	1f78 <ASYNC_WAIT_CTX_get_fd@plt+0x6a8>
    2190:	cmp	x0, #0x0
    2194:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2198:	b.ne	21a4 <ASYNC_WAIT_CTX_get_fd@plt+0x8d4>  // b.any
    219c:	mov	w0, #0x0                   	// #0
    21a0:	ret
    21a4:	stp	x29, x30, [sp, #-160]!
    21a8:	mov	x29, sp
    21ac:	stp	x19, x20, [sp, #16]
    21b0:	mov	x19, x0
    21b4:	mov	x20, x1
    21b8:	bl	1660 <EVP_CIPHER_CTX_cipher@plt>
    21bc:	cbz	x0, 2224 <ASYNC_WAIT_CTX_get_fd@plt+0x954>
    21c0:	mov	x0, x19
    21c4:	stp	x21, x22, [sp, #32]
    21c8:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    21cc:	mov	x22, x0
    21d0:	cbz	x0, 2220 <ASYNC_WAIT_CTX_get_fd@plt+0x950>
    21d4:	mov	x0, x19
    21d8:	bl	17c0 <EVP_CIPHER_CTX_nid@plt>
    21dc:	sub	w1, w0, #0x1a3
    21e0:	cmp	w1, #0x8
    21e4:	b.hi	2234 <ASYNC_WAIT_CTX_get_fd@plt+0x964>  // b.pmore
    21e8:	mov	x21, #0x1                   	// #1
    21ec:	mov	x2, #0x111                 	// #273
    21f0:	lsl	x1, x21, x1
    21f4:	mov	w0, #0x0                   	// #0
    21f8:	tst	x1, x2
    21fc:	b.ne	2210 <ASYNC_WAIT_CTX_get_fd@plt+0x940>  // b.any
    2200:	ldp	x21, x22, [sp, #32]
    2204:	ldp	x19, x20, [sp, #16]
    2208:	ldp	x29, x30, [sp], #160
    220c:	ret
    2210:	mov	x0, x19
    2214:	bl	15c0 <EVP_CIPHER_CTX_iv_length@plt>
    2218:	cmp	w0, #0x10
    221c:	b.eq	2240 <ASYNC_WAIT_CTX_get_fd@plt+0x970>  // b.none
    2220:	ldp	x21, x22, [sp, #32]
    2224:	mov	w0, #0x0                   	// #0
    2228:	ldp	x19, x20, [sp, #16]
    222c:	ldp	x29, x30, [sp], #160
    2230:	ret
    2234:	mov	w0, #0x0                   	// #0
    2238:	ldp	x21, x22, [sp, #32]
    223c:	b	2204 <ASYNC_WAIT_CTX_get_fd@plt+0x934>
    2240:	str	x23, [sp, #48]
    2244:	mov	w3, #0x26                  	// #38
    2248:	mov	x0, #0xffffffffffffffff    	// #-1
    224c:	stur	x0, [x22, #4]
    2250:	add	x23, sp, #0x48
    2254:	stp	xzr, xzr, [sp, #72]
    2258:	mov	x2, #0xe                   	// #14
    225c:	add	x0, x23, #0x2
    2260:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2264:	add	x1, x1, #0x9a0
    2268:	strh	w3, [sp, #72]
    226c:	stp	xzr, xzr, [sp, #88]
    2270:	stp	xzr, xzr, [sp, #104]
    2274:	stp	xzr, xzr, [sp, #120]
    2278:	stp	xzr, xzr, [sp, #136]
    227c:	str	xzr, [sp, #152]
    2280:	bl	1860 <OPENSSL_strlcpy@plt>
    2284:	mov	x2, #0x40                  	// #64
    2288:	add	x0, x23, #0x18
    228c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2290:	add	x1, x1, #0x9b0
    2294:	bl	1860 <OPENSSL_strlcpy@plt>
    2298:	mov	w2, #0x0                   	// #0
    229c:	mov	w1, #0x5                   	// #5
    22a0:	mov	w0, #0x26                  	// #38
    22a4:	bl	1650 <socket@plt>
    22a8:	str	w0, [x22, #8]
    22ac:	cmn	w0, #0x1
    22b0:	b.eq	234c <ASYNC_WAIT_CTX_get_fd@plt+0xa7c>  // b.none
    22b4:	mov	x1, x23
    22b8:	mov	w2, #0x58                  	// #88
    22bc:	bl	1770 <bind@plt>
    22c0:	tbnz	w0, #31, 23b8 <ASYNC_WAIT_CTX_get_fd@plt+0xae8>
    22c4:	ldr	w0, [x22, #8]
    22c8:	mov	x2, #0x0                   	// #0
    22cc:	mov	x1, #0x0                   	// #0
    22d0:	bl	1830 <accept@plt>
    22d4:	str	w0, [x22, #4]
    22d8:	tbnz	w0, #31, 23f8 <ASYNC_WAIT_CTX_get_fd@plt+0xb28>
    22dc:	mov	x0, x19
    22e0:	bl	1600 <EVP_CIPHER_CTX_key_length@plt>
    22e4:	mov	w4, w0
    22e8:	ldr	w0, [x22, #8]
    22ec:	mov	x3, x20
    22f0:	mov	w2, w21
    22f4:	mov	w1, #0x117                 	// #279
    22f8:	bl	17f0 <setsockopt@plt>
    22fc:	tbnz	w0, #31, 2494 <ASYNC_WAIT_CTX_get_fd@plt+0xbc4>
    2300:	str	xzr, [x22, #24]
    2304:	add	x2, x22, #0x18
    2308:	mov	w1, #0x1                   	// #1
    230c:	mov	x0, #0x0                   	// #0
    2310:	bl	1720 <syscall@plt>
    2314:	tbnz	w0, #31, 2438 <ASYNC_WAIT_CTX_get_fd@plt+0xb68>
    2318:	mov	x2, #0xffffffff            	// #4294967295
    231c:	str	x2, [x22, #16]
    2320:	stp	xzr, xzr, [x22, #64]
    2324:	mov	w3, #0x671                 	// #1649
    2328:	movk	w3, #0x189, lsl #16
    232c:	stp	xzr, xzr, [x22, #80]
    2330:	mov	w0, #0x1                   	// #1
    2334:	stp	xzr, xzr, [x22, #96]
    2338:	stp	xzr, xzr, [x22, #112]
    233c:	str	w3, [x22]
    2340:	ldp	x21, x22, [sp, #32]
    2344:	ldr	x23, [sp, #48]
    2348:	b	2204 <ASYNC_WAIT_CTX_get_fd@plt+0x934>
    234c:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    2350:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2354:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2358:	add	x2, x2, #0x858
    235c:	ldr	x0, [x0, #4064]
    2360:	add	x1, x1, #0x9c0
    2364:	mov	w3, #0x178                 	// #376
    2368:	ldr	x0, [x0]
    236c:	bl	1670 <fprintf@plt>
    2370:	mov	x0, #0x0                   	// #0
    2374:	bl	1710 <perror@plt>
    2378:	mov	w2, #0x179                 	// #377
    237c:	mov	w1, #0x6d                  	// #109
    2380:	mov	w0, #0x65                  	// #101
    2384:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2388:	ldr	w0, [x22, #8]
    238c:	tbnz	w0, #31, 2394 <ASYNC_WAIT_CTX_get_fd@plt+0xac4>
    2390:	bl	1890 <close@plt>
    2394:	ldr	w0, [x22, #4]
    2398:	tbnz	w0, #31, 23a0 <ASYNC_WAIT_CTX_get_fd@plt+0xad0>
    239c:	bl	1890 <close@plt>
    23a0:	mov	x1, #0xffffffffffffffff    	// #-1
    23a4:	mov	w0, #0x0                   	// #0
    23a8:	ldr	x23, [sp, #48]
    23ac:	stur	x1, [x22, #4]
    23b0:	ldp	x21, x22, [sp, #32]
    23b4:	b	2204 <ASYNC_WAIT_CTX_get_fd@plt+0x934>
    23b8:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    23bc:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    23c0:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    23c4:	add	x2, x2, #0x858
    23c8:	ldr	x0, [x0, #4064]
    23cc:	add	x1, x1, #0x9f0
    23d0:	mov	w3, #0x17f                 	// #383
    23d4:	ldr	x0, [x0]
    23d8:	bl	1670 <fprintf@plt>
    23dc:	mov	x0, #0x0                   	// #0
    23e0:	bl	1710 <perror@plt>
    23e4:	mov	w2, #0x180                 	// #384
    23e8:	mov	w1, #0x67                  	// #103
    23ec:	mov	w0, #0x65                  	// #101
    23f0:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    23f4:	b	2388 <ASYNC_WAIT_CTX_get_fd@plt+0xab8>
    23f8:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    23fc:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2400:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2404:	add	x2, x2, #0x858
    2408:	ldr	x0, [x0, #4064]
    240c:	add	x1, x1, #0xa20
    2410:	mov	w3, #0x186                 	// #390
    2414:	ldr	x0, [x0]
    2418:	bl	1670 <fprintf@plt>
    241c:	mov	x0, #0x0                   	// #0
    2420:	bl	1710 <perror@plt>
    2424:	mov	w2, #0x187                 	// #391
    2428:	mov	w1, #0x6e                  	// #110
    242c:	mov	w0, #0x65                  	// #101
    2430:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2434:	b	2388 <ASYNC_WAIT_CTX_get_fd@plt+0xab8>
    2438:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    243c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2440:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2444:	add	x2, x2, #0x858
    2448:	ldr	x0, [x0, #4064]
    244c:	add	x1, x1, #0xa88
    2450:	mov	w3, #0xcc                  	// #204
    2454:	ldr	x0, [x0]
    2458:	bl	1670 <fprintf@plt>
    245c:	mov	x0, #0x0                   	// #0
    2460:	bl	1710 <perror@plt>
    2464:	mov	w2, #0xcd                  	// #205
    2468:	mov	w1, #0x69                  	// #105
    246c:	mov	w0, #0x66                  	// #102
    2470:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2474:	ldr	w0, [x22, #4]
    2478:	bl	1890 <close@plt>
    247c:	ldr	w0, [x22, #8]
    2480:	bl	1890 <close@plt>
    2484:	mov	w0, #0x0                   	// #0
    2488:	ldp	x21, x22, [sp, #32]
    248c:	ldr	x23, [sp, #48]
    2490:	b	2204 <ASYNC_WAIT_CTX_get_fd@plt+0x934>
    2494:	adrp	x0, 13000 <bind_engine@@Base+0x10980>
    2498:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    249c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    24a0:	add	x2, x2, #0x858
    24a4:	ldr	x0, [x0, #4064]
    24a8:	add	x1, x1, #0xa50
    24ac:	mov	w3, #0x162                 	// #354
    24b0:	ldr	x0, [x0]
    24b4:	bl	1670 <fprintf@plt>
    24b8:	mov	x0, #0x0                   	// #0
    24bc:	bl	1710 <perror@plt>
    24c0:	mov	w2, #0x163                 	// #355
    24c4:	mov	w1, #0x6a                  	// #106
    24c8:	mov	w0, #0x68                  	// #104
    24cc:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    24d0:	b	2474 <ASYNC_WAIT_CTX_get_fd@plt+0xba4>
    24d4:	nop
    24d8:	stp	x29, x30, [sp, #-464]!
    24dc:	mov	x29, sp
    24e0:	stp	x21, x22, [sp, #32]
    24e4:	add	x22, sp, #0x48
    24e8:	mov	x0, x22
    24ec:	stp	x19, x20, [sp, #16]
    24f0:	mov	x19, #0xffffffffffffffff    	// #-1
    24f4:	str	x19, [sp, #56]
    24f8:	str	w19, [sp, #64]
    24fc:	bl	16e0 <uname@plt>
    2500:	cbnz	w0, 25bc <ASYNC_WAIT_CTX_get_fd@plt+0xcec>
    2504:	adrp	x21, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2508:	add	x21, x21, #0xab0
    250c:	mov	w20, w0
    2510:	mov	x1, x21
    2514:	add	x0, x22, #0x82
    2518:	bl	1620 <strtok@plt>
    251c:	cbz	x0, 25e4 <ASYNC_WAIT_CTX_get_fd@plt+0xd14>
    2520:	add	x22, sp, #0x38
    2524:	mov	x19, #0x1                   	// #1
    2528:	mov	w2, #0xa                   	// #10
    252c:	mov	x1, #0x0                   	// #0
    2530:	bl	17e0 <strtol@plt>
    2534:	mov	x3, x0
    2538:	add	x2, x22, x19, lsl #2
    253c:	mov	x1, x21
    2540:	mov	x0, #0x0                   	// #0
    2544:	stur	w3, [x2, #-4]
    2548:	bl	1620 <strtok@plt>
    254c:	cmp	w19, #0x2
    2550:	add	x19, x19, #0x1
    2554:	cset	w2, le
    2558:	cmp	x0, #0x0
    255c:	csel	w2, w2, wzr, ne  // ne = any
    2560:	cbnz	w2, 2528 <ASYNC_WAIT_CTX_get_fd@plt+0xc58>
    2564:	ldp	w2, w3, [sp, #56]
    2568:	mov	w1, #0xff                  	// #255
    256c:	ldr	w4, [sp, #64]
    2570:	movk	w1, #0x4, lsl #16
    2574:	lsl	w0, w3, #8
    2578:	add	w0, w0, w2, lsl #16
    257c:	add	w0, w0, w4
    2580:	cmp	w0, w1
    2584:	b.le	25f0 <ASYNC_WAIT_CTX_get_fd@plt+0xd20>
    2588:	mov	w2, #0x0                   	// #0
    258c:	mov	w1, #0x5                   	// #5
    2590:	mov	w0, #0x26                  	// #38
    2594:	bl	1650 <socket@plt>
    2598:	cmn	w0, #0x1
    259c:	b.eq	2648 <ASYNC_WAIT_CTX_get_fd@plt+0xd78>  // b.none
    25a0:	mov	w20, #0x1                   	// #1
    25a4:	bl	1890 <close@plt>
    25a8:	mov	w0, w20
    25ac:	ldp	x19, x20, [sp, #16]
    25b0:	ldp	x21, x22, [sp, #32]
    25b4:	ldp	x29, x30, [sp], #464
    25b8:	ret
    25bc:	mov	w2, #0x307                 	// #775
    25c0:	mov	w1, #0x6f                  	// #111
    25c4:	mov	w0, #0x64                  	// #100
    25c8:	mov	w20, #0x0                   	// #0
    25cc:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    25d0:	mov	w0, w20
    25d4:	ldp	x19, x20, [sp, #16]
    25d8:	ldp	x21, x22, [sp, #32]
    25dc:	ldp	x29, x30, [sp], #464
    25e0:	ret
    25e4:	mov	w4, w19
    25e8:	mov	w3, w19
    25ec:	mov	w2, w19
    25f0:	adrp	x19, 13000 <bind_engine@@Base+0x10980>
    25f4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    25f8:	add	x1, x1, #0xab8
    25fc:	ldr	x19, [x19, #4064]
    2600:	ldr	x0, [x19]
    2604:	bl	1670 <fprintf@plt>
    2608:	ldr	x0, [x19]
    260c:	mov	w4, #0x0                   	// #0
    2610:	mov	w3, #0x1                   	// #1
    2614:	mov	w2, #0x4                   	// #4
    2618:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    261c:	add	x1, x1, #0xaf8
    2620:	bl	1670 <fprintf@plt>
    2624:	mov	w2, #0x318                 	// #792
    2628:	mov	w1, #0x6b                  	// #107
    262c:	mov	w0, #0x64                  	// #100
    2630:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2634:	mov	w0, w20
    2638:	ldp	x19, x20, [sp, #16]
    263c:	ldp	x21, x22, [sp, #32]
    2640:	ldp	x29, x30, [sp], #464
    2644:	ret
    2648:	mov	w2, #0x320                 	// #800
    264c:	mov	w1, #0x6d                  	// #109
    2650:	mov	w0, #0x64                  	// #100
    2654:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2658:	b	25a8 <ASYNC_WAIT_CTX_get_fd@plt+0xcd8>
    265c:	nop
    2660:	mov	w0, #0x1                   	// #1
    2664:	ret

0000000000002668 <v_check@@Base>:
    2668:	mov	w1, #0x2ffff               	// #196607
    266c:	cmp	x0, x1
    2670:	mov	x0, #0x30000               	// #196608
    2674:	csel	x0, x0, xzr, hi  // hi = pmore
    2678:	ret
    267c:	nop

0000000000002680 <bind_engine@@Base>:
    2680:	stp	x29, x30, [sp, #-48]!
    2684:	mov	x29, sp
    2688:	stp	x19, x20, [sp, #16]
    268c:	mov	x19, x2
    2690:	mov	x20, x1
    2694:	stp	x21, x22, [sp, #32]
    2698:	mov	x21, x0
    269c:	bl	1610 <ENGINE_get_static_state@plt>
    26a0:	ldr	x1, [x19]
    26a4:	cmp	x1, x0
    26a8:	b.eq	26b8 <bind_engine@@Base+0x38>  // b.none
    26ac:	ldp	x0, x1, [x19, #8]
    26b0:	ldr	x2, [x19, #24]
    26b4:	bl	1680 <CRYPTO_set_mem_functions@plt>
    26b8:	cbz	x20, 26d0 <bind_engine@@Base+0x50>
    26bc:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    26c0:	mov	x0, x20
    26c4:	add	x1, x1, #0xbb8
    26c8:	bl	17d0 <strcmp@plt>
    26cc:	cbnz	w0, 26d8 <bind_engine@@Base+0x58>
    26d0:	bl	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    26d4:	cbnz	w0, 26f0 <bind_engine@@Base+0x70>
    26d8:	mov	w19, #0x0                   	// #0
    26dc:	mov	w0, w19
    26e0:	ldp	x19, x20, [sp, #16]
    26e4:	ldp	x21, x22, [sp, #32]
    26e8:	ldp	x29, x30, [sp], #48
    26ec:	ret
    26f0:	adrp	x19, 14000 <bind_engine@@Base+0x11980>
    26f4:	add	x20, x19, #0x32c
    26f8:	ldr	w0, [x20, #4]
    26fc:	cbz	w0, 280c <bind_engine@@Base+0x18c>
    2700:	ldr	w0, [x19, #812]
    2704:	add	x20, x19, #0x32c
    2708:	cbz	w0, 27e0 <bind_engine@@Base+0x160>
    270c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2710:	mov	x0, x21
    2714:	add	x1, x1, #0xbb8
    2718:	bl	15f0 <ENGINE_set_id@plt>
    271c:	cbz	w0, 2734 <bind_engine@@Base+0xb4>
    2720:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2724:	mov	x0, x21
    2728:	add	x1, x1, #0xb38
    272c:	bl	1730 <ENGINE_set_name@plt>
    2730:	cbnz	w0, 275c <bind_engine@@Base+0xdc>
    2734:	mov	w2, #0x2d2                 	// #722
    2738:	mov	w1, #0x64                  	// #100
    273c:	mov	w0, #0x69                  	// #105
    2740:	mov	w19, #0x0                   	// #0
    2744:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2748:	mov	w0, w19
    274c:	ldp	x19, x20, [sp, #16]
    2750:	ldp	x21, x22, [sp, #32]
    2754:	ldp	x29, x30, [sp], #48
    2758:	ret
    275c:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2760:	mov	x0, x21
    2764:	add	x1, x1, #0x9c8
    2768:	bl	16c0 <ENGINE_set_destroy_function@plt>
    276c:	cbz	w0, 2734 <bind_engine@@Base+0xb4>
    2770:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2774:	mov	x0, x21
    2778:	add	x1, x1, #0x9b8
    277c:	bl	1760 <ENGINE_set_init_function@plt>
    2780:	cbz	w0, 2734 <bind_engine@@Base+0xb4>
    2784:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2788:	mov	x0, x21
    278c:	add	x1, x1, #0x660
    2790:	bl	1840 <ENGINE_set_finish_function@plt>
    2794:	cbz	w0, 2734 <bind_engine@@Base+0xb4>
    2798:	adrp	x20, 14000 <bind_engine@@Base+0x11980>
    279c:	add	x20, x20, #0x1a8
    27a0:	add	x20, x20, #0x30
    27a4:	mov	x19, #0x0                   	// #0
    27a8:	ldr	w0, [x20, x19, lsl #2]
    27ac:	add	x19, x19, #0x1
    27b0:	bl	1a50 <ASYNC_WAIT_CTX_get_fd@plt+0x180>
    27b4:	cbz	x0, 282c <bind_engine@@Base+0x1ac>
    27b8:	cmp	x19, #0x3
    27bc:	b.ne	27a8 <bind_engine@@Base+0x128>  // b.any
    27c0:	mov	x0, x21
    27c4:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    27c8:	add	x1, x1, #0xb70
    27cc:	bl	1810 <ENGINE_set_ciphers@plt>
    27d0:	mov	w19, w0
    27d4:	cbz	w0, 2818 <bind_engine@@Base+0x198>
    27d8:	mov	w19, #0x1                   	// #1
    27dc:	b	26dc <bind_engine@@Base+0x5c>
    27e0:	ldr	w0, [x20, #4]
    27e4:	adrp	x22, 14000 <bind_engine@@Base+0x11980>
    27e8:	add	x22, x22, #0x1e8
    27ec:	mov	x1, x22
    27f0:	bl	17b0 <ERR_load_strings@plt>
    27f4:	ldr	w0, [x20, #4]
    27f8:	add	x1, x22, #0x70
    27fc:	bl	17b0 <ERR_load_strings@plt>
    2800:	mov	w0, #0x1                   	// #1
    2804:	str	w0, [x19, #812]
    2808:	b	270c <bind_engine@@Base+0x8c>
    280c:	bl	16d0 <ERR_get_next_error_library@plt>
    2810:	str	w0, [x20, #4]
    2814:	b	2700 <bind_engine@@Base+0x80>
    2818:	mov	w2, #0x2e3                 	// #739
    281c:	mov	w1, #0x64                  	// #100
    2820:	mov	w0, #0x69                  	// #105
    2824:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2828:	b	26dc <bind_engine@@Base+0x5c>
    282c:	mov	w2, #0x2dd                 	// #733
    2830:	mov	w1, #0x64                  	// #100
    2834:	mov	w0, #0x69                  	// #105
    2838:	mov	w19, #0x0                   	// #0
    283c:	bl	1c80 <ASYNC_WAIT_CTX_get_fd@plt+0x3b0>
    2840:	b	26dc <bind_engine@@Base+0x5c>

Disassembly of section .fini:

0000000000002844 <.fini>:
    2844:	stp	x29, x30, [sp, #-16]!
    2848:	mov	x29, sp
    284c:	ldp	x29, x30, [sp], #16
    2850:	ret
